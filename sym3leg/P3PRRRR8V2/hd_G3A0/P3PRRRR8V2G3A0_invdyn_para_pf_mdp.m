% Calculate minimal parameter regressor of inverse dynamics forces for
% P3PRRRR8V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d2,d3,d4,theta1]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [12x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3PRRRR8V2G3A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 18:05
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3PRRRR8V2G3A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(8,1),zeros(12,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [12 1]), ...
  'P3PRRRR8V2G3A0_invdyn_para_pf_mdp: MDP has to be [12x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 18:05:22
% EndTime: 2020-08-06 18:05:35
% DurationCPUTime: 11.86s
% Computational Cost: add. (66792->445), mult. (135357->831), div. (5832->17), fcn. (125931->22), ass. (0->340)
t1831 = cos(qJ(2,3));
t1839 = pkin(7) + pkin(6);
t1796 = t1831 * t1839;
t1825 = sin(qJ(2,3));
t1773 = pkin(2) * t1825 - t1796;
t1815 = sin(pkin(4));
t1817 = cos(pkin(4));
t1824 = sin(qJ(3,3));
t1952 = t1817 * t1824;
t1750 = pkin(3) * t1952 + t1815 * t1773;
t1830 = cos(qJ(3,3));
t1963 = t1815 * t1825;
t1811 = t1830 ^ 2;
t2001 = pkin(3) * t1811;
t1717 = pkin(2) * t1952 + t1750 * t1830 + t1963 * t2001;
t1708 = 0.1e1 / t1717;
t1833 = cos(qJ(2,2));
t1797 = t1833 * t1839;
t1827 = sin(qJ(2,2));
t1774 = pkin(2) * t1827 - t1797;
t1826 = sin(qJ(3,2));
t1950 = t1817 * t1826;
t1751 = pkin(3) * t1950 + t1815 * t1774;
t1832 = cos(qJ(3,2));
t1961 = t1815 * t1827;
t1812 = t1832 ^ 2;
t2000 = pkin(3) * t1812;
t1718 = pkin(2) * t1950 + t1751 * t1832 + t1961 * t2000;
t1711 = 0.1e1 / t1718;
t1835 = cos(qJ(2,1));
t1798 = t1835 * t1839;
t1829 = sin(qJ(2,1));
t1775 = pkin(2) * t1829 - t1798;
t1828 = sin(qJ(3,1));
t1948 = t1817 * t1828;
t1752 = pkin(3) * t1948 + t1815 * t1775;
t1834 = cos(qJ(3,1));
t1959 = t1815 * t1829;
t1813 = t1834 ^ 2;
t1999 = pkin(3) * t1813;
t1719 = pkin(2) * t1948 + t1752 * t1834 + t1959 * t1999;
t1714 = 0.1e1 / t1719;
t1818 = legFrame(3,2);
t1802 = sin(t1818);
t1805 = cos(t1818);
t1837 = xDP(2);
t1838 = xDP(1);
t1762 = t1802 * t1837 - t1805 * t1838;
t1814 = sin(pkin(8));
t1836 = xDP(3);
t1789 = t1836 * t1814;
t1816 = cos(pkin(8));
t1738 = t1762 * t1816 + t1789;
t1953 = t1816 * t1836;
t1741 = t1814 * t1762 - t1953;
t1951 = t1817 * t1825;
t1958 = t1815 * t1830;
t1690 = t1738 * t1958 + (t1738 * t1951 + t1741 * t1831) * t1824;
t1987 = t1690 * t1708;
t1916 = t1839 * t1987;
t1881 = t1824 * t1916;
t1997 = t1830 * pkin(3);
t1790 = pkin(2) + t1997;
t1765 = t1825 * t1790 - t1796;
t1793 = t1825 * t1839;
t1696 = (t1790 * t1831 + t1793) * t1738 * t1817 - t1741 * t1765;
t1770 = t1790 * t1952;
t1729 = t1765 * t1958 + t1770;
t1984 = t1696 / t1729;
t1666 = t1881 - t1984;
t1776 = pkin(2) * t1831 + t1793;
t1964 = t1815 * t1824;
t1863 = pkin(3) * t1964 - t1773 * t1817;
t1720 = t1816 * t1776 + t1863 * t1814;
t1756 = t1814 * t1951 - t1816 * t1831;
t1966 = t1814 * t1815;
t2005 = pkin(2) * t1824;
t1678 = -(t1756 * t1805 - t1802 * t1963) * t2001 + (t1720 * t1805 + t1802 * t1750) * t1830 + (t1817 * t1802 + t1805 * t1966) * t2005;
t1681 = (t1756 * t1802 + t1805 * t1963) * t2001 + (-t1720 * t1802 + t1805 * t1750) * t1830 + (-t1802 * t1966 + t1805 * t1817) * t2005;
t1759 = t1814 * t1831 + t1816 * t1951;
t1699 = -t1759 * t2001 - t1776 * t1814 * t1830 + (pkin(2) * t1964 + t1863 * t1830) * t1816;
t1822 = xDDP(2);
t1823 = xDDP(1);
t1841 = 0.1e1 / pkin(3);
t1907 = t1841 * t1984;
t1908 = t1708 * t1984;
t1709 = 0.1e1 / t1717 ^ 2;
t1799 = pkin(2) ^ 2 + t1839 ^ 2;
t1840 = pkin(3) ^ 2;
t1893 = t1824 * t1984;
t2014 = 0.2e1 * pkin(2);
t1994 = pkin(3) * t2014;
t1920 = (-t1839 * t1893 + (t1811 * t1840 + t1830 * t1994 + t1799) * t1987) * t1690 * t1709;
t1821 = xDDP(3);
t1975 = t1708 * t1821;
t1648 = t1830 * t1920 + (pkin(2) * t1907 - t1666 * t1830) * t1908 + t1699 * t1975 + (t1678 * t1823 + t1681 * t1822) * t1708;
t1965 = t1814 * t1817;
t1768 = t1815 * g(1) + g(2) * t1965;
t1769 = g(1) * t1965 - t1815 * g(2);
t1954 = t1816 * t1817;
t1782 = g(3) * t1954;
t1857 = t1648 * t1815 - t1768 * t1802 + t1769 * t1805 + t1782;
t1636 = t1857 * t1831;
t1878 = g(1) * t1805 - g(2) * t1802;
t1998 = t1814 * g(3);
t1747 = t1878 * t1816 - t1998;
t2032 = t1825 * t1747 + t1636;
t1819 = legFrame(2,2);
t1803 = sin(t1819);
t1806 = cos(t1819);
t1763 = t1803 * t1837 - t1806 * t1838;
t1739 = t1763 * t1816 + t1789;
t1742 = t1814 * t1763 - t1953;
t1949 = t1817 * t1827;
t1957 = t1815 * t1832;
t1691 = t1739 * t1957 + (t1739 * t1949 + t1742 * t1833) * t1826;
t1986 = t1691 * t1711;
t1914 = t1839 * t1986;
t1880 = t1826 * t1914;
t1996 = t1832 * pkin(3);
t1791 = pkin(2) + t1996;
t1766 = t1827 * t1791 - t1797;
t1794 = t1827 * t1839;
t1697 = (t1791 * t1833 + t1794) * t1739 * t1817 - t1742 * t1766;
t1771 = t1791 * t1950;
t1730 = t1766 * t1957 + t1771;
t1983 = t1697 / t1730;
t1667 = t1880 - t1983;
t1777 = pkin(2) * t1833 + t1794;
t1962 = t1815 * t1826;
t1862 = pkin(3) * t1962 - t1774 * t1817;
t1721 = t1816 * t1777 + t1862 * t1814;
t1757 = t1814 * t1949 - t1816 * t1833;
t2004 = pkin(2) * t1826;
t1679 = -(t1757 * t1806 - t1803 * t1961) * t2000 + (t1721 * t1806 + t1803 * t1751) * t1832 + (t1817 * t1803 + t1806 * t1966) * t2004;
t1682 = (t1757 * t1803 + t1806 * t1961) * t2000 + (-t1721 * t1803 + t1806 * t1751) * t1832 + (-t1803 * t1966 + t1806 * t1817) * t2004;
t1760 = t1814 * t1833 + t1816 * t1949;
t1700 = -t1760 * t2000 - t1777 * t1814 * t1832 + (pkin(2) * t1962 + t1862 * t1832) * t1816;
t1905 = t1841 * t1983;
t1906 = t1711 * t1983;
t1712 = 0.1e1 / t1718 ^ 2;
t1892 = t1826 * t1983;
t1919 = (-t1839 * t1892 + (t1812 * t1840 + t1832 * t1994 + t1799) * t1986) * t1691 * t1712;
t1974 = t1711 * t1821;
t1649 = t1832 * t1919 + (pkin(2) * t1905 - t1667 * t1832) * t1906 + t1700 * t1974 + (t1679 * t1823 + t1682 * t1822) * t1711;
t1856 = t1649 * t1815 - t1768 * t1803 + t1769 * t1806 + t1782;
t1637 = t1856 * t1833;
t1877 = g(1) * t1806 - g(2) * t1803;
t1748 = t1877 * t1816 - t1998;
t2031 = t1827 * t1748 + t1637;
t1820 = legFrame(1,2);
t1804 = sin(t1820);
t1807 = cos(t1820);
t1764 = t1804 * t1837 - t1807 * t1838;
t1740 = t1764 * t1816 + t1789;
t1743 = t1814 * t1764 - t1953;
t1947 = t1817 * t1829;
t1956 = t1815 * t1834;
t1692 = t1740 * t1956 + (t1740 * t1947 + t1743 * t1835) * t1828;
t1985 = t1692 * t1714;
t1912 = t1839 * t1985;
t1879 = t1828 * t1912;
t1995 = t1834 * pkin(3);
t1792 = pkin(2) + t1995;
t1767 = t1829 * t1792 - t1798;
t1795 = t1829 * t1839;
t1698 = (t1792 * t1835 + t1795) * t1740 * t1817 - t1743 * t1767;
t1772 = t1792 * t1948;
t1731 = t1767 * t1956 + t1772;
t1982 = t1698 / t1731;
t1668 = t1879 - t1982;
t1778 = pkin(2) * t1835 + t1795;
t1960 = t1815 * t1828;
t1861 = pkin(3) * t1960 - t1775 * t1817;
t1722 = t1816 * t1778 + t1861 * t1814;
t1758 = t1814 * t1947 - t1816 * t1835;
t2003 = pkin(2) * t1828;
t1680 = -(t1758 * t1807 - t1804 * t1959) * t1999 + (t1722 * t1807 + t1804 * t1752) * t1834 + (t1817 * t1804 + t1807 * t1966) * t2003;
t1683 = (t1758 * t1804 + t1807 * t1959) * t1999 + (-t1722 * t1804 + t1807 * t1752) * t1834 + (-t1804 * t1966 + t1807 * t1817) * t2003;
t1761 = t1814 * t1835 + t1816 * t1947;
t1701 = -t1761 * t1999 - t1778 * t1814 * t1834 + (pkin(2) * t1960 + t1861 * t1834) * t1816;
t1903 = t1841 * t1982;
t1904 = t1714 * t1982;
t1715 = 0.1e1 / t1719 ^ 2;
t1891 = t1828 * t1982;
t1918 = (-t1839 * t1891 + (t1813 * t1840 + t1834 * t1994 + t1799) * t1985) * t1692 * t1715;
t1973 = t1714 * t1821;
t1650 = t1834 * t1918 + (pkin(2) * t1903 - t1668 * t1834) * t1904 + t1701 * t1973 + (t1680 * t1823 + t1683 * t1822) * t1714;
t1855 = t1650 * t1815 - t1768 * t1804 + t1769 * t1807 + t1782;
t1638 = t1855 * t1835;
t1876 = g(1) * t1807 - g(2) * t1804;
t1749 = t1876 * t1816 - t1998;
t2030 = t1829 * t1749 + t1638;
t1990 = t1690 ^ 2 * t1709;
t1989 = t1691 ^ 2 * t1712;
t1988 = t1692 ^ 2 * t1715;
t1735 = t1824 * t1759 + t1816 * t1958;
t1733 = t1824 * t1756 + t1814 * t1958;
t1917 = t1831 * t1987;
t1940 = t1825 * t1830;
t2015 = -t1802 * t1822 + t1805 * t1823;
t1615 = t1733 * t1975 - (t1831 * t1815 * t1907 + (t1817 * t1811 - t1940 * t1964 - t1817) * t1987) * t1908 + (-((t1815 * t1917 + t1817 * t1907) * t2001 + ((-t1893 + t1916) * t1825 + pkin(2) * t1917) * t1958 + t1817 * t1666) * t1987 - t2015 * t1735) * t1708;
t1753 = pkin(3) * t1940 + t1773;
t1942 = t1821 * t1841;
t1943 = t1817 * t1841;
t1955 = t1815 * t1841;
t1946 = t1817 * t1831;
t1705 = (t1814 * t1946 + t1816 * t1825) * t1997 + t1776 * t1965 + t1773 * t1816;
t1978 = t1705 * t1708;
t1702 = (t1814 * t1825 - t1816 * t1946) * t1997 - t1776 * t1954 + t1773 * t1814;
t1981 = t1702 * t1708;
t2002 = pkin(2) * t1841;
t1651 = t1942 * t1978 - t1920 * t1943 - (-t1817 * t1881 + (-t1824 * t1753 * t1955 + t1817 * (t1830 * t2002 + t1811)) * t1984) / (t1753 * t1958 + t1770) * t1907 + t2015 * t1841 * t1981;
t1842 = 0.1e1 / pkin(3) ^ 2;
t1911 = t1696 ^ 2 * t1842 / t1729 ^ 2;
t1624 = t1651 * t1824 + t1830 * t1911;
t1625 = t1651 * t1830 - t1824 * t1911;
t1860 = -pkin(6) * t1911 + t1615 * t2014;
t1872 = t1907 * t1987;
t1866 = 0.2e1 * t1872;
t1934 = t1831 * t1747;
t1941 = t1824 * t1830;
t1993 = t1615 * t1824;
t2008 = 0.2e1 * t1811 - 0.1e1;
t2009 = pkin(6) / 0.2e1;
t2012 = -0.2e1 * pkin(2) * t1872 - 0.2e1 * t1651 * t2009;
t2013 = 2 * MDP(6);
t1851 = MDP(10) * ((t1636 + t1860) * t1830 + t1824 * t2012 + t1747 * t1940) + MDP(11) * (t1830 * t2012 + (-t1860 - t2032) * t1824) + MDP(2) * t1615 + MDP(3) * t2032 + MDP(4) * (-t1825 * t1857 + t1934) + MDP(5) * (t1830 * t1866 + t1993) * t1824 + MDP(7) * t1624 + MDP(8) * t1625 + (t1615 * t1941 + t2008 * t1872) * t2013;
t2026 = t1735 * t1851;
t1736 = t1826 * t1760 + t1816 * t1957;
t1734 = t1826 * t1757 + t1814 * t1957;
t1915 = t1833 * t1986;
t1938 = t1827 * t1832;
t2016 = -t1803 * t1822 + t1806 * t1823;
t1616 = t1734 * t1974 - (t1833 * t1815 * t1905 + (t1817 * t1812 - t1938 * t1962 - t1817) * t1986) * t1906 + (-((t1815 * t1915 + t1817 * t1905) * t2000 + ((-t1892 + t1914) * t1827 + pkin(2) * t1915) * t1957 + t1817 * t1667) * t1986 - t2016 * t1736) * t1711;
t1754 = pkin(3) * t1938 + t1774;
t1945 = t1817 * t1833;
t1706 = (t1814 * t1945 + t1816 * t1827) * t1996 + t1777 * t1965 + t1774 * t1816;
t1977 = t1706 * t1711;
t1703 = (t1814 * t1827 - t1816 * t1945) * t1996 - t1777 * t1954 + t1774 * t1814;
t1980 = t1703 * t1711;
t1652 = t1942 * t1977 - t1919 * t1943 - (-t1817 * t1880 + (-t1826 * t1754 * t1955 + t1817 * (t1832 * t2002 + t1812)) * t1983) / (t1754 * t1957 + t1771) * t1905 + t2016 * t1841 * t1980;
t1910 = t1697 ^ 2 * t1842 / t1730 ^ 2;
t1626 = t1652 * t1826 + t1832 * t1910;
t1627 = t1652 * t1832 - t1826 * t1910;
t1859 = -pkin(6) * t1910 + t1616 * t2014;
t1871 = t1905 * t1986;
t1865 = 0.2e1 * t1871;
t1932 = t1833 * t1748;
t1939 = t1826 * t1832;
t1992 = t1616 * t1826;
t2007 = 0.2e1 * t1812 - 0.1e1;
t2011 = -0.2e1 * pkin(2) * t1871 - 0.2e1 * t1652 * t2009;
t1850 = MDP(10) * ((t1637 + t1859) * t1832 + t1826 * t2011 + t1748 * t1938) + MDP(11) * (t1832 * t2011 + (-t1859 - t2031) * t1826) + MDP(2) * t1616 + MDP(3) * t2031 + MDP(4) * (-t1827 * t1856 + t1932) + MDP(5) * (t1832 * t1865 + t1992) * t1826 + MDP(7) * t1626 + MDP(8) * t1627 + (t1616 * t1939 + t2007 * t1871) * t2013;
t2025 = t1736 * t1850;
t1737 = t1761 * t1828 + t1816 * t1956;
t1732 = t1828 * t1758 + t1814 * t1956;
t1913 = t1835 * t1985;
t1936 = t1829 * t1834;
t2017 = -t1804 * t1822 + t1807 * t1823;
t1617 = t1732 * t1973 - (t1835 * t1815 * t1903 + (t1817 * t1813 - t1936 * t1960 - t1817) * t1985) * t1904 + (-((t1815 * t1913 + t1817 * t1903) * t1999 + ((-t1891 + t1912) * t1829 + pkin(2) * t1913) * t1956 + t1817 * t1668) * t1985 - t2017 * t1737) * t1714;
t1755 = pkin(3) * t1936 + t1775;
t1944 = t1817 * t1835;
t1707 = (t1814 * t1944 + t1816 * t1829) * t1995 + t1778 * t1965 + t1775 * t1816;
t1976 = t1707 * t1714;
t1704 = (t1814 * t1829 - t1816 * t1944) * t1995 - t1778 * t1954 + t1775 * t1814;
t1979 = t1704 * t1714;
t1653 = t1942 * t1976 - t1918 * t1943 - (-t1817 * t1879 + (-t1828 * t1755 * t1955 + t1817 * (t1834 * t2002 + t1813)) * t1982) / (t1755 * t1956 + t1772) * t1903 + t2017 * t1841 * t1979;
t1909 = t1698 ^ 2 * t1842 / t1731 ^ 2;
t1628 = t1653 * t1828 + t1834 * t1909;
t1629 = t1653 * t1834 - t1828 * t1909;
t1858 = -pkin(6) * t1909 + t1617 * t2014;
t1870 = t1903 * t1985;
t1864 = 0.2e1 * t1870;
t1930 = t1835 * t1749;
t1937 = t1828 * t1834;
t1991 = t1617 * t1828;
t2006 = 0.2e1 * t1813 - 0.1e1;
t2010 = -0.2e1 * pkin(2) * t1870 - 0.2e1 * t1653 * t2009;
t1849 = MDP(10) * ((t1638 + t1858) * t1834 + t1828 * t2010 + t1749 * t1936) + MDP(11) * (t1834 * t2010 + (-t1858 - t2030) * t1828) + MDP(2) * t1617 + MDP(3) * t2030 + MDP(4) * (-t1829 * t1855 + t1930) + MDP(5) * (t1834 * t1864 + t1991) * t1828 + MDP(7) * t1628 + MDP(8) * t1629 + (t1617 * t1937 + t2006 * t1870) * t2013;
t2024 = t1737 * t1849;
t1935 = t1831 * t1615;
t1933 = t1833 * t1616;
t1931 = t1835 * t1617;
t1926 = t1708 * t1993;
t1925 = t1615 * t1708 * t1830;
t1924 = t1711 * t1992;
t1923 = t1616 * t1711 * t1832;
t1922 = t1714 * t1991;
t1921 = t1617 * t1714 * t1834;
t1902 = t1802 * t1981;
t1901 = t1805 * t1981;
t1899 = t1803 * t1980;
t1898 = t1806 * t1980;
t1896 = t1804 * t1979;
t1895 = t1807 * t1979;
t1890 = t1702 * t1926;
t1889 = t1702 * t1925;
t1888 = t1703 * t1924;
t1887 = t1703 * t1923;
t1886 = t1704 * t1922;
t1885 = t1704 * t1921;
t1884 = t1708 * t1941 * t1990;
t1883 = t1711 * t1939 * t1989;
t1882 = t1714 * t1937 * t1988;
t1875 = t1702 * t1884;
t1874 = t1703 * t1883;
t1873 = t1704 * t1882;
t1869 = -(t1911 + t1990) * t1825 + t1935;
t1868 = -(t1910 + t1989) * t1827 + t1933;
t1867 = -(t1909 + t1988) * t1829 + t1931;
t1618 = t1825 * t1651 + t1831 * t1866;
t1645 = -t1802 * g(1) - t1805 * g(2) + t1648;
t1854 = t1645 * MDP(1) + ((-t1824 * t1618 + t1869 * t1830) * t1815 + t1817 * t1625) * MDP(10) + ((-t1830 * t1618 - t1869 * t1824) * t1815 - t1817 * t1624) * MDP(11) + (-MDP(3) * (t1825 * t1990 - t1935) - MDP(4) * (t1825 * t1615 + t1831 * t1990)) * t1815;
t1619 = t1827 * t1652 + t1833 * t1865;
t1646 = -t1803 * g(1) - t1806 * g(2) + t1649;
t1853 = t1646 * MDP(1) + ((-t1826 * t1619 + t1868 * t1832) * t1815 + t1817 * t1627) * MDP(10) + ((-t1832 * t1619 - t1868 * t1826) * t1815 - t1817 * t1626) * MDP(11) + (-MDP(3) * (t1827 * t1989 - t1933) - MDP(4) * (t1827 * t1616 + t1833 * t1989)) * t1815;
t1620 = t1829 * t1653 + t1835 * t1864;
t1647 = -t1804 * g(1) - t1807 * g(2) + t1650;
t1852 = t1647 * MDP(1) + ((-t1828 * t1620 + t1867 * t1834) * t1815 + t1817 * t1629) * MDP(10) + ((-t1834 * t1620 - t1867 * t1828) * t1815 - t1817 * t1628) * MDP(11) + (-MDP(3) * (t1829 * t1988 - t1931) - MDP(4) * (t1829 * t1617 + t1835 * t1988)) * t1815;
t1801 = t1816 * g(3);
t1746 = t1876 * t1814 + t1801;
t1745 = t1877 * t1814 + t1801;
t1744 = t1878 * t1814 + t1801;
t1665 = t2006 * t1988;
t1664 = t2007 * t1989;
t1663 = t2008 * t1990;
t1644 = t1647 * t1817 - t1815 * t1746;
t1643 = t1646 * t1817 - t1815 * t1745;
t1642 = t1645 * t1817 - t1815 * t1744;
t1602 = pkin(2) * t1988 - t1617 * pkin(6) + (-t1647 * t1815 - t1746 * t1817) * t1829 + t1930;
t1601 = pkin(2) * t1989 - t1616 * pkin(6) + (-t1646 * t1815 - t1745 * t1817) * t1827 + t1932;
t1600 = pkin(2) * t1990 - t1615 * pkin(6) + (-t1645 * t1815 - t1744 * t1817) * t1825 + t1934;
t1599 = t1602 * t1834 - t1828 * t1644;
t1598 = t1602 * t1828 + t1644 * t1834;
t1597 = t1601 * t1832 - t1826 * t1643;
t1596 = t1601 * t1826 + t1643 * t1832;
t1595 = t1600 * t1830 - t1824 * t1642;
t1594 = t1600 * t1824 + t1642 * t1830;
t1 = [(t1823 - g(1)) * MDP(12) + (t1852 * t1680 - t1807 * t2024) * t1714 + (t1853 * t1679 - t1806 * t2025) * t1711 + (t1854 * t1678 - t1805 * t2026) * t1708 + ((-t1805 * t1875 - t1806 * t1874 - t1807 * t1873) * MDP(5) + (-t1663 * t1901 - t1664 * t1898 - t1665 * t1895) * MDP(6) + (t1805 * t1890 + t1806 * t1888 + t1807 * t1886) * MDP(7) + (t1805 * t1889 + t1806 * t1887 + t1807 * t1885) * MDP(8) + (t1651 * t1901 + t1652 * t1898 + t1653 * t1895) * MDP(9) + (t1594 * t1901 + t1596 * t1898 + t1598 * t1895) * MDP(10) + (t1595 * t1901 + t1597 * t1898 + t1599 * t1895) * MDP(11)) * t1841; (t1822 - g(2)) * MDP(12) + (t1852 * t1683 + t1804 * t2024) * t1714 + (t1853 * t1682 + t1803 * t2025) * t1711 + (t1854 * t1681 + t1802 * t2026) * t1708 + ((t1802 * t1875 + t1803 * t1874 + t1804 * t1873) * MDP(5) + (t1663 * t1902 + t1664 * t1899 + t1665 * t1896) * MDP(6) + (-t1802 * t1890 - t1803 * t1888 - t1804 * t1886) * MDP(7) + (-t1802 * t1889 - t1803 * t1887 - t1804 * t1885) * MDP(8) + (-t1651 * t1902 - t1652 * t1899 - t1653 * t1896) * MDP(9) + (-t1594 * t1902 - t1596 * t1899 - t1598 * t1896) * MDP(10) + (-t1595 * t1902 - t1597 * t1899 - t1599 * t1896) * MDP(11)) * t1841; (t1821 - g(3)) * MDP(12) + (t1852 * t1701 + t1849 * t1732) * t1714 + (t1853 * t1700 + t1850 * t1734) * t1711 + (t1854 * t1699 + t1851 * t1733) * t1708 + ((-t1705 * t1884 - t1706 * t1883 - t1707 * t1882) * MDP(5) + (-t1663 * t1978 - t1664 * t1977 - t1665 * t1976) * MDP(6) + (t1705 * t1926 + t1706 * t1924 + t1707 * t1922) * MDP(7) + (t1705 * t1925 + t1706 * t1923 + t1707 * t1921) * MDP(8) + (t1651 * t1978 + t1652 * t1977 + t1653 * t1976) * MDP(9) + (t1594 * t1978 + t1596 * t1977 + t1598 * t1976) * MDP(10) + (t1595 * t1978 + t1597 * t1977 + t1599 * t1976) * MDP(11)) * t1841;];
tauX  = t1;
