% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RPP1G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [3x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,d1]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [13x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RPP1G1P1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-03 14:53
% Revision: abbb0d669c4fc7889a31e0cf750ab51a4f2eb1ce (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RPP1G1P1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,1),zeros(13,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [3 1]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: pkin has to be [3x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [13 1]), ...
  'P3RPP1G1P1A0_invdyn_para_pf_mdp: MDP has to be [13x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-03 14:52:44
% EndTime: 2019-05-03 14:52:54
% DurationCPUTime: 11.15s
% Computational Cost: add. (135093->579), mult. (229528->837), div. (2484->6), fcn. (40938->14), ass. (0->358)
t1873 = (pkin(1) ^ 2);
t2032 = 1 + t1873;
t1856 = xDP(1);
t1815 = qJ(2,3) * t1856;
t1855 = xDP(2);
t1832 = pkin(1) * t1855;
t1858 = xP(3);
t1833 = sin(t1858);
t1834 = cos(t1858);
t1854 = xDP(3);
t1842 = pkin(1) + qJ(3,3);
t1865 = koppelP(3,2);
t1956 = t1842 * t1865;
t1868 = koppelP(3,1);
t1980 = qJ(2,3) * t1868;
t2023 = t1956 + t1980;
t1955 = t1842 * t1868;
t1981 = qJ(2,3) * t1865;
t2024 = t1955 - t1981;
t1655 = qJ(3,3) * t1855 + t1815 + t1832 + (-t1833 * t2023 + t1834 * t2024) * t1854;
t1814 = qJ(2,3) * t1855;
t1656 = t1814 - t1842 * t1856 + (t1833 * t2024 + t1834 * t2023) * t1854;
t1839 = legFrame(3,3);
t1820 = sin(t1839);
t1823 = cos(t1839);
t1848 = sin(qJ(1,3));
t1851 = cos(qJ(1,3));
t1619 = (t1655 * t1851 + t1656 * t1848) * t1823 + (-t1655 * t1848 + t1656 * t1851) * t1820;
t1859 = qJ(3,3) ^ 2;
t1944 = t1859 + t1873;
t2010 = 0.2e1 * qJ(3,3);
t1926 = pkin(1) * t2010 + t1944;
t1800 = t1926 + 0.1e1;
t1860 = qJ(2,3) ^ 2;
t1776 = t1800 + t1860;
t1761 = 0.1e1 / t1776;
t1762 = 0.1e1 / t1776 ^ 2;
t1763 = t1761 * t1762;
t1972 = t1619 * t1763;
t1817 = qJ(2,2) * t1856;
t1843 = pkin(1) + qJ(3,2);
t1866 = koppelP(2,2);
t1952 = t1843 * t1866;
t1869 = koppelP(2,1);
t1983 = qJ(2,2) * t1869;
t2025 = t1952 + t1983;
t1951 = t1843 * t1869;
t1984 = qJ(2,2) * t1866;
t2026 = t1951 - t1984;
t1657 = qJ(3,2) * t1855 + t1817 + t1832 + (-t1833 * t2025 + t1834 * t2026) * t1854;
t1816 = qJ(2,2) * t1855;
t1658 = t1816 - t1843 * t1856 + (t1833 * t2026 + t1834 * t2025) * t1854;
t1840 = legFrame(2,3);
t1821 = sin(t1840);
t1824 = cos(t1840);
t1849 = sin(qJ(1,2));
t1852 = cos(qJ(1,2));
t1620 = (t1657 * t1852 + t1658 * t1849) * t1824 + (-t1657 * t1849 + t1658 * t1852) * t1821;
t1861 = qJ(3,2) ^ 2;
t1943 = t1861 + t1873;
t2011 = 0.2e1 * qJ(3,2);
t1927 = pkin(1) * t2011 + t1943;
t1801 = t1927 + 0.1e1;
t1862 = qJ(2,2) ^ 2;
t1777 = t1801 + t1862;
t1764 = 0.1e1 / t1777;
t1765 = 0.1e1 / t1777 ^ 2;
t1766 = t1764 * t1765;
t1970 = t1620 * t1766;
t1819 = qJ(2,1) * t1856;
t1844 = pkin(1) + qJ(3,1);
t1867 = koppelP(1,2);
t1948 = t1844 * t1867;
t1870 = koppelP(1,1);
t1986 = qJ(2,1) * t1870;
t2027 = t1948 + t1986;
t1947 = t1844 * t1870;
t1987 = qJ(2,1) * t1867;
t2028 = t1947 - t1987;
t1659 = qJ(3,1) * t1855 + t1819 + t1832 + (-t1833 * t2027 + t1834 * t2028) * t1854;
t1818 = qJ(2,1) * t1855;
t1660 = t1818 - t1844 * t1856 + (t1833 * t2028 + t1834 * t2027) * t1854;
t1841 = legFrame(1,3);
t1822 = sin(t1841);
t1825 = cos(t1841);
t1850 = sin(qJ(1,1));
t1853 = cos(qJ(1,1));
t1621 = (t1659 * t1853 + t1660 * t1850) * t1825 + (-t1659 * t1850 + t1660 * t1853) * t1822;
t1863 = qJ(3,1) ^ 2;
t1942 = t1863 + t1873;
t2012 = 0.2e1 * qJ(3,1);
t1928 = pkin(1) * t2012 + t1942;
t1802 = t1928 + 0.1e1;
t1864 = qJ(2,1) ^ 2;
t1778 = t1802 + t1864;
t1767 = 0.1e1 / t1778;
t1768 = 0.1e1 / t1778 ^ 2;
t1769 = t1767 * t1768;
t1968 = t1621 * t1769;
t1871 = 0.2e1 * pkin(1);
t1935 = 0.1e1 + t1942;
t1707 = t1867 * t1935 + pkin(1) * t1986 + (t1867 * t1871 + t1986) * qJ(3,1);
t1708 = t1802 * t1870 - t1844 * t1987;
t1812 = 0.2e1 * t1832;
t1946 = t2032 * t1855;
t1636 = t1863 * t1855 + (t1812 + t1819) * qJ(3,1) + pkin(1) * t1819 + (-t1707 * t1833 + t1708 * t1834) * t1854 + t1946;
t1941 = t1856 * t1871;
t1945 = t2032 * t1856;
t2013 = t1854 * (t1707 * t1834 + t1708 * t1833) + pkin(1) * t1818 - (-t1818 + t1941) * qJ(3,1) - t1863 * t1856 - t1945;
t1606 = (t1636 * t1850 - t1853 * t2013) * t1825 + t1822 * (t1636 * t1853 + t1850 * t2013);
t2003 = -t1864 - 0.1e1;
t2031 = t2003 * t1606;
t1936 = 0.1e1 + t1943;
t1705 = t1866 * t1936 + pkin(1) * t1983 + (t1866 * t1871 + t1983) * qJ(3,2);
t1706 = t1801 * t1869 - t1843 * t1984;
t1635 = t1861 * t1855 + (t1812 + t1817) * qJ(3,2) + pkin(1) * t1817 + (-t1705 * t1833 + t1706 * t1834) * t1854 + t1946;
t2014 = t1854 * (t1705 * t1834 + t1706 * t1833) + pkin(1) * t1816 - (-t1816 + t1941) * qJ(3,2) - t1861 * t1856 - t1945;
t1605 = (t1635 * t1849 - t1852 * t2014) * t1824 + t1821 * (t1635 * t1852 + t1849 * t2014);
t2004 = -t1862 - 0.1e1;
t2030 = t2004 * t1605;
t1937 = 0.1e1 + t1944;
t1703 = t1865 * t1937 + pkin(1) * t1980 + (t1865 * t1871 + t1980) * qJ(3,3);
t1704 = t1800 * t1868 - t1842 * t1981;
t1634 = t1859 * t1855 + (t1812 + t1815) * qJ(3,3) + pkin(1) * t1815 + (-t1703 * t1833 + t1704 * t1834) * t1854 + t1946;
t2015 = (t1703 * t1834 + t1704 * t1833) * t1854 + pkin(1) * t1814 - (-t1814 + t1941) * qJ(3,3) - t1859 * t1856 - t1945;
t1604 = (t1634 * t1848 - t1851 * t2015) * t1823 + t1820 * (t1634 * t1851 + t1848 * t2015);
t2005 = -t1860 - 0.1e1;
t2029 = t2005 * t1604;
t1745 = g(1) * t1822 - g(2) * t1825;
t1748 = g(1) * t1825 + g(2) * t1822;
t2022 = -t1745 * t1850 + t1748 * t1853;
t1744 = g(1) * t1821 - g(2) * t1824;
t1747 = g(1) * t1824 + g(2) * t1821;
t2021 = -t1744 * t1849 + t1747 * t1852;
t1743 = g(1) * t1820 - g(2) * t1823;
t1746 = g(1) * t1823 + g(2) * t1820;
t2020 = -t1743 * t1848 + t1746 * t1851;
t2019 = MDP(5) + MDP(7);
t1731 = t1833 * t1868 + t1834 * t1865;
t1734 = -t1833 * t1865 + t1834 * t1868;
t1838 = t1854 ^ 2;
t1845 = xDDP(3);
t1846 = xDDP(2);
t1673 = -t1731 * t1838 + t1734 * t1845 + t1846;
t1847 = xDDP(1);
t1676 = -t1731 * t1845 - t1734 * t1838 + t1847;
t1958 = t1842 * t1848;
t1755 = qJ(2,3) * t1851 - t1958;
t1957 = t1842 * t1851;
t1758 = qJ(2,3) * t1848 + t1957;
t1685 = t1755 * t1823 - t1758 * t1820;
t1688 = t1755 * t1820 + t1758 * t1823;
t1737 = qJ(2,3) * t1955 - t1860 * t1865 - t1865;
t1738 = qJ(2,3) * t1956 + t1860 * t1868 + t1868;
t1649 = t1842 * t1814 + t1860 * t1856 + t1856 + (t1737 * t1834 - t1738 * t1833) * t1854;
t1650 = -t1842 * t1815 + t1860 * t1855 + t1855 + (t1737 * t1833 + t1738 * t1834) * t1854;
t1613 = (t1649 * t1848 - t1650 * t1851) * t1823 + (t1649 * t1851 + t1650 * t1848) * t1820;
t1923 = qJ(2,3) * t1613 + t1604 * t1842;
t1973 = t1619 * t1762;
t1580 = -t1923 * t1972 + (t1688 * t1673 + t1685 * t1676 - t1923 * t1973) * t1761;
t1577 = qJ(2,3) * t1580;
t2018 = 0.2e1 * t1577 - t2020;
t1732 = t1833 * t1869 + t1834 * t1866;
t1735 = -t1833 * t1866 + t1834 * t1869;
t1674 = -t1732 * t1838 + t1735 * t1845 + t1846;
t1677 = -t1732 * t1845 - t1735 * t1838 + t1847;
t1954 = t1843 * t1849;
t1756 = qJ(2,2) * t1852 - t1954;
t1953 = t1843 * t1852;
t1759 = qJ(2,2) * t1849 + t1953;
t1686 = t1756 * t1824 - t1759 * t1821;
t1689 = t1756 * t1821 + t1759 * t1824;
t1739 = qJ(2,2) * t1951 - t1862 * t1866 - t1866;
t1740 = qJ(2,2) * t1952 + t1862 * t1869 + t1869;
t1651 = t1843 * t1816 + t1862 * t1856 + t1856 + (t1739 * t1834 - t1740 * t1833) * t1854;
t1652 = -t1843 * t1817 + t1862 * t1855 + t1855 + (t1739 * t1833 + t1740 * t1834) * t1854;
t1614 = (t1651 * t1849 - t1652 * t1852) * t1824 + (t1651 * t1852 + t1652 * t1849) * t1821;
t1924 = qJ(2,2) * t1614 + t1605 * t1843;
t1971 = t1620 * t1765;
t1581 = -t1924 * t1970 + (t1689 * t1674 + t1686 * t1677 - t1924 * t1971) * t1764;
t1578 = qJ(2,2) * t1581;
t2017 = 0.2e1 * t1578 - t2021;
t1733 = t1833 * t1870 + t1834 * t1867;
t1736 = -t1833 * t1867 + t1834 * t1870;
t1675 = -t1733 * t1838 + t1736 * t1845 + t1846;
t1678 = -t1733 * t1845 - t1736 * t1838 + t1847;
t1950 = t1844 * t1850;
t1757 = qJ(2,1) * t1853 - t1950;
t1949 = t1844 * t1853;
t1760 = qJ(2,1) * t1850 + t1949;
t1687 = t1757 * t1825 - t1760 * t1822;
t1690 = t1757 * t1822 + t1760 * t1825;
t1741 = qJ(2,1) * t1947 - t1864 * t1867 - t1867;
t1742 = qJ(2,1) * t1948 + t1864 * t1870 + t1870;
t1653 = t1844 * t1818 + t1864 * t1856 + t1856 + (t1741 * t1834 - t1742 * t1833) * t1854;
t1654 = -t1844 * t1819 + t1864 * t1855 + t1855 + (t1741 * t1833 + t1742 * t1834) * t1854;
t1615 = (t1653 * t1850 - t1654 * t1853) * t1825 + (t1653 * t1853 + t1654 * t1850) * t1822;
t1925 = qJ(2,1) * t1615 + t1606 * t1844;
t1969 = t1621 * t1768;
t1582 = -t1925 * t1968 + (t1690 * t1675 + t1687 * t1678 - t1925 * t1969) * t1767;
t1579 = qJ(2,1) * t1582;
t2016 = 0.2e1 * t1579 - t2022;
t2009 = pkin(1) * g(2);
t2008 = g(1) * qJ(2,1);
t2007 = g(1) * qJ(2,2);
t2006 = g(1) * qJ(2,3);
t2002 = -3 * t1873 - 1;
t2001 = pkin(1) * t1580;
t2000 = pkin(1) * t1581;
t1999 = pkin(1) * t1582;
t1998 = g(1) * t1851;
t1997 = g(1) * t1852;
t1996 = g(1) * t1853;
t1995 = g(2) * t1851;
t1994 = g(2) * t1852;
t1993 = g(2) * t1853;
t1992 = MDP(4) - MDP(8);
t1720 = t1746 * t1848;
t1932 = qJ(2,3) * t1957;
t1725 = -t1848 * t2005 + t1932;
t1803 = qJ(2,3) * t1958;
t1728 = t1851 * t2005 + t1803;
t1667 = t1725 * t1823 - t1728 * t1820;
t1670 = t1725 * t1820 + t1728 * t1823;
t1929 = qJ(2,3) * t1842 * t1972;
t1964 = t1676 * t1761;
t1967 = t1673 * t1761;
t1922 = -t1972 * t2029 + t1667 * t1964 + t1670 * t1967 - (t2029 + (t1613 * t1842 - t1619 * t1776) * qJ(2,3)) * t1761 * t1973 - t1613 * t1929;
t1901 = -t1820 * t1998 + t1823 * t1995 - t1720 + t1922;
t1616 = t1619 ^ 2;
t1979 = t1616 * t1762;
t1991 = MDP(6) * (-qJ(2,3) * t1979 + t1901 - t2001);
t1721 = t1747 * t1849;
t1933 = qJ(2,2) * t1953;
t1726 = -t1849 * t2004 + t1933;
t1804 = qJ(2,2) * t1954;
t1729 = t1852 * t2004 + t1804;
t1668 = t1726 * t1824 - t1729 * t1821;
t1671 = t1726 * t1821 + t1729 * t1824;
t1930 = qJ(2,2) * t1843 * t1970;
t1963 = t1677 * t1764;
t1966 = t1674 * t1764;
t1921 = -t1970 * t2030 + t1668 * t1963 + t1671 * t1966 - (t2030 + (t1614 * t1843 - t1620 * t1777) * qJ(2,2)) * t1764 * t1971 - t1614 * t1930;
t1900 = -t1821 * t1997 + t1824 * t1994 - t1721 + t1921;
t1617 = t1620 ^ 2;
t1977 = t1617 * t1765;
t1990 = MDP(6) * (-qJ(2,2) * t1977 + t1900 - t2000);
t1722 = t1748 * t1850;
t1934 = qJ(2,1) * t1949;
t1727 = -t1850 * t2003 + t1934;
t1805 = qJ(2,1) * t1950;
t1730 = t1853 * t2003 + t1805;
t1669 = t1727 * t1825 - t1730 * t1822;
t1672 = t1727 * t1822 + t1730 * t1825;
t1931 = qJ(2,1) * t1844 * t1968;
t1962 = t1678 * t1767;
t1965 = t1675 * t1767;
t1920 = -t1968 * t2031 + t1669 * t1962 + t1672 * t1965 - (t2031 + (t1615 * t1844 - t1621 * t1778) * qJ(2,1)) * t1767 * t1969 - t1615 * t1931;
t1899 = -t1822 * t1996 + t1825 * t1993 - t1722 + t1920;
t1618 = t1621 ^ 2;
t1975 = t1618 * t1768;
t1989 = MDP(6) * (-qJ(2,1) * t1975 + t1899 - t1999);
t1988 = qJ(2,1) * t1606;
t1985 = qJ(2,2) * t1605;
t1982 = qJ(2,3) * t1604;
t1978 = t1616 * t1763;
t1976 = t1617 * t1766;
t1974 = t1618 * t1769;
t1940 = 0.2e1 * t1973;
t1939 = 0.2e1 * t1971;
t1938 = 0.2e1 * t1969;
t1857 = pkin(1) * g(1);
t1810 = -g(2) * qJ(2,1) + t1857;
t1808 = -g(2) * qJ(2,2) + t1857;
t1806 = -g(2) * qJ(2,3) + t1857;
t1601 = t1613 * t1940;
t1602 = t1614 * t1939;
t1603 = t1615 * t1938;
t1782 = -t1848 * g(1) + t1995;
t1783 = g(2) * t1848 + t1998;
t1904 = -t1782 * t1823 + t1783 * t1820 - t1922;
t1784 = -t1849 * g(1) + t1994;
t1785 = g(2) * t1849 + t1997;
t1903 = -t1784 * t1824 + t1785 * t1821 - t1921;
t1786 = g(1) * t1850 - t1993;
t1787 = g(2) * t1850 + t1996;
t1902 = t1786 * t1825 + t1787 * t1822 - t1920;
t1709 = t1800 * t1848 - t1932;
t1712 = t1800 * t1851 + t1803;
t1661 = t1709 * t1823 + t1712 * t1820;
t1664 = -t1709 * t1820 + t1712 * t1823;
t1872 = pkin(1) * t1873;
t1895 = t1604 * t1929 + t1601 + t1661 * t1967 + t1664 * t1964 + (pkin(1) * t1982 - (-t1872 + (-0.3e1 * t1859 + t2005) * pkin(1)) * t1619 - (-t1982 + (-t1859 - t1860 + t2002) * t1619) * qJ(3,3) + (-qJ(3,3) * t1871 - t1800 - t1937) * t1613) * t1972;
t1710 = t1801 * t1849 - t1933;
t1713 = t1801 * t1852 + t1804;
t1662 = t1710 * t1824 + t1713 * t1821;
t1665 = -t1710 * t1821 + t1713 * t1824;
t1894 = t1605 * t1930 + t1602 + t1662 * t1966 + t1665 * t1963 + (pkin(1) * t1985 - (-t1872 + (-0.3e1 * t1861 + t2004) * pkin(1)) * t1620 - (-t1985 + (-t1861 - t1862 + t2002) * t1620) * qJ(3,2) + (-qJ(3,2) * t1871 - t1801 - t1936) * t1614) * t1970;
t1711 = t1802 * t1850 - t1934;
t1714 = t1802 * t1853 + t1805;
t1663 = t1711 * t1825 + t1714 * t1822;
t1666 = -t1711 * t1822 + t1714 * t1825;
t1893 = t1606 * t1931 + t1603 + t1663 * t1965 + t1666 * t1962 + (pkin(1) * t1988 - (-t1872 + (-0.3e1 * t1863 + t2003) * pkin(1)) * t1621 - (-t1988 + (-t1863 - t1864 + t2002) * t1621) * qJ(3,1) + (-qJ(3,1) * t1871 - t1802 - t1935) * t1615) * t1968;
t1892 = t1577 + t1895;
t1891 = t1578 + t1894;
t1890 = t1579 + t1893;
t1595 = t1604 * t1940;
t1788 = g(1) * qJ(3,3) + t1806;
t1789 = g(2) * t1842 + t2006;
t1807 = t2006 + t2009;
t1889 = MDP(1) * t1580 + MDP(2) * (t1743 * t1851 + t1720) + MDP(3) * t2020 + MDP(4) * (t1901 - 0.2e1 * t2001) + MDP(5) * (t1601 + t2018) + MDP(6) * ((t1806 * t1848 - t1807 * t1851) * t1823 + (t1806 * t1851 + t1807 * t1848) * t1820 + t1580 * t1860 + qJ(2,3) * t1601 + (-t1922 + t2001) * pkin(1)) + MDP(7) * (t1895 + t2018) + MDP(8) * ((t1871 + t2010) * t1580 + t1595 + t1904) + MDP(9) * ((t1788 * t1848 - t1789 * t1851) * t1823 + (t1788 * t1851 + t1789 * t1848) * t1820 + qJ(2,3) * t1892 + t1926 * t1580 + t1842 * (t1595 - t1922));
t1596 = t1605 * t1939;
t1790 = g(1) * qJ(3,2) + t1808;
t1791 = g(2) * t1843 + t2007;
t1809 = t2007 + t2009;
t1888 = MDP(1) * t1581 + MDP(2) * (t1744 * t1852 + t1721) + MDP(3) * t2021 + MDP(4) * (t1900 - 0.2e1 * t2000) + MDP(5) * (t1602 + t2017) + MDP(6) * ((t1808 * t1849 - t1809 * t1852) * t1824 + (t1808 * t1852 + t1809 * t1849) * t1821 + t1581 * t1862 + qJ(2,2) * t1602 + (-t1921 + t2000) * pkin(1)) + MDP(7) * (t1894 + t2017) + MDP(8) * ((t1871 + t2011) * t1581 + t1596 + t1903) + MDP(9) * ((t1790 * t1849 - t1791 * t1852) * t1824 + (t1790 * t1852 + t1791 * t1849) * t1821 + qJ(2,2) * t1891 + t1927 * t1581 + t1843 * (t1596 - t1921));
t1597 = t1606 * t1938;
t1792 = g(1) * qJ(3,1) + t1810;
t1793 = g(2) * t1844 + t2008;
t1811 = t2008 + t2009;
t1887 = MDP(1) * t1582 + MDP(2) * (t1745 * t1853 + t1722) + MDP(3) * t2022 + MDP(4) * (t1899 - 0.2e1 * t1999) + MDP(5) * (t1603 + t2016) + MDP(6) * ((t1810 * t1850 - t1811 * t1853) * t1825 + (t1810 * t1853 + t1811 * t1850) * t1822 + t1582 * t1864 + qJ(2,1) * t1603 + (-t1920 + t1999) * pkin(1)) + MDP(7) * (t1893 + t2016) + MDP(8) * ((t1871 + t2012) * t1582 + t1597 + t1902) + MDP(9) * ((t1792 * t1850 - t1793 * t1853) * t1825 + (t1792 * t1853 + t1793 * t1850) * t1822 + qJ(2,1) * t1890 + t1928 * t1582 + t1844 * (t1597 - t1920));
t1827 = t1847 - g(1);
t1826 = t1846 - g(2);
t1724 = -t1833 * t1845 - t1834 * t1838;
t1723 = -t1833 * t1838 + t1834 * t1845;
t1716 = t1826 * t1833 + t1827 * t1834;
t1715 = t1826 * t1834 - t1827 * t1833;
t1702 = t1850 * t2028 - t1853 * t2027;
t1701 = t1849 * t2026 - t1852 * t2025;
t1700 = t1848 * t2024 - t1851 * t2023;
t1699 = t1850 * t2027 + t1853 * t2028;
t1698 = t1849 * t2025 + t1852 * t2026;
t1697 = t1848 * t2023 + t1851 * t2024;
t1684 = t1741 * t1850 - t1742 * t1853;
t1683 = t1741 * t1853 + t1742 * t1850;
t1682 = t1739 * t1849 - t1740 * t1852;
t1681 = t1739 * t1852 + t1740 * t1849;
t1680 = t1737 * t1848 - t1738 * t1851;
t1679 = t1737 * t1851 + t1738 * t1848;
t1648 = t1707 * t1850 + t1708 * t1853;
t1647 = -t1707 * t1853 + t1708 * t1850;
t1646 = t1705 * t1849 + t1706 * t1852;
t1645 = -t1705 * t1852 + t1706 * t1849;
t1644 = t1703 * t1848 + t1704 * t1851;
t1643 = -t1703 * t1851 + t1704 * t1848;
t1624 = (-t1683 * t1833 + t1684 * t1834) * t1825 + (t1683 * t1834 + t1684 * t1833) * t1822;
t1623 = (-t1681 * t1833 + t1682 * t1834) * t1824 + (t1681 * t1834 + t1682 * t1833) * t1821;
t1622 = (-t1679 * t1833 + t1680 * t1834) * t1823 + (t1679 * t1834 + t1680 * t1833) * t1820;
t1612 = (t1647 * t1834 - t1648 * t1833) * t1825 + (t1647 * t1833 + t1648 * t1834) * t1822;
t1611 = (t1645 * t1834 - t1646 * t1833) * t1824 + (t1645 * t1833 + t1646 * t1834) * t1821;
t1610 = (t1643 * t1834 - t1644 * t1833) * t1823 + (t1643 * t1833 + t1644 * t1834) * t1820;
t1558 = -t1844 * t1582 + (-qJ(2,1) * t1618 - 0.2e1 * t1606 * t1621) * t1768 - t1902;
t1557 = -t1843 * t1581 + (-qJ(2,2) * t1617 - 0.2e1 * t1605 * t1620) * t1765 - t1903;
t1556 = -t1842 * t1580 + (-qJ(2,3) * t1616 - 0.2e1 * t1604 * t1619) * t1762 - t1904;
t1549 = t1786 * t1822 - t1787 * t1825 - t1844 * t1975 + t1890;
t1548 = -t1784 * t1821 - t1785 * t1824 - t1843 * t1977 + t1891;
t1547 = -t1782 * t1820 - t1783 * t1823 - t1842 * t1979 + t1892;
t1 = [(-t1664 * t1978 - t1665 * t1976 - t1666 * t1974) * MDP(8) + t1724 * MDP(11) - t1723 * MDP(12) + (-t1715 * t1833 + t1716 * t1834) * MDP(13) + (t1669 * t1989 + (t1549 * t1666 + t1558 * t1669) * MDP(9) + (t1666 * MDP(7) + t1669 * t1992) * t1582 + t1887 * t1687) * t1767 + (t1668 * t1990 + (t1548 * t1665 + t1557 * t1668) * MDP(9) + (t1665 * MDP(7) + t1668 * t1992) * t1581 + t1888 * t1686) * t1764 + (t1667 * t1991 + (t1547 * t1664 + t1556 * t1667) * MDP(9) + (t1664 * MDP(7) + t1667 * t1992) * t1580 + t1889 * t1685) * t1761 + t2019 * (-t1667 * t1978 - t1668 * t1976 - t1669 * t1974); (-t1661 * t1978 - t1662 * t1976 - t1663 * t1974) * MDP(8) + t1723 * MDP(11) + t1724 * MDP(12) + (t1715 * t1834 + t1716 * t1833) * MDP(13) + (t1672 * t1989 + (t1549 * t1663 + t1558 * t1672) * MDP(9) + (t1663 * MDP(7) + t1672 * t1992) * t1582 + t1887 * t1690) * t1767 + (t1671 * t1990 + (t1548 * t1662 + t1557 * t1671) * MDP(9) + (t1662 * MDP(7) + t1671 * t1992) * t1581 + t1888 * t1689) * t1764 + (t1670 * t1991 + (t1547 * t1661 + t1556 * t1670) * MDP(9) + (t1661 * MDP(7) + t1670 * t1992) * t1580 + t1889 * t1688) * t1761 + t2019 * (-t1670 * t1978 - t1671 * t1976 - t1672 * t1974); (-t1610 * t1978 - t1611 * t1976 - t1612 * t1974) * MDP(8) + t1845 * MDP(10) + t1715 * MDP(11) - t1716 * MDP(12) + (t1624 * t1989 + (t1549 * t1612 + t1558 * t1624) * MDP(9) + (t1612 * MDP(7) + t1624 * t1992) * t1582 + t1887 * ((t1699 * t1834 + t1702 * t1833) * t1825 - (-t1699 * t1833 + t1702 * t1834) * t1822)) * t1767 + (t1623 * t1990 + (t1548 * t1611 + t1557 * t1623) * MDP(9) + (t1611 * MDP(7) + t1623 * t1992) * t1581 + t1888 * ((t1698 * t1834 + t1701 * t1833) * t1824 - (-t1698 * t1833 + t1701 * t1834) * t1821)) * t1764 + (t1622 * t1991 + (t1547 * t1610 + t1556 * t1622) * MDP(9) + (t1610 * MDP(7) + t1622 * t1992) * t1580 + t1889 * ((t1697 * t1834 + t1700 * t1833) * t1823 - (-t1697 * t1833 + t1700 * t1834) * t1820)) * t1761 + t2019 * (-t1622 * t1978 - t1623 * t1976 - t1624 * t1974);];
tauX  = t1;
