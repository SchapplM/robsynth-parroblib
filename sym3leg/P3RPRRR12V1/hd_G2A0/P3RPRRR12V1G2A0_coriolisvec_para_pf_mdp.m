% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RPRRR12V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [14x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RPRRR12V1G2A0_convert_par2_MPV_fixb.m

% Output:
% taucX [3x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 18:25
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1),zeros(14,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [14 1]), ...
  'P3RPRRR12V1G2A0_coriolisvec_para_pf_mdp: MDP has to be [14x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 18:25:04
% EndTime: 2020-08-06 18:25:10
% DurationCPUTime: 5.89s
% Computational Cost: add. (13005->362), mult. (21934->717), div. (2289->18), fcn. (15576->18), ass. (0->298)
t2266 = (-pkin(5) - pkin(6));
t2021 = pkin(1) - t2266;
t2053 = xDP(3);
t2000 = t2053 * t2021;
t2014 = pkin(3) * t2053;
t2041 = sin(qJ(3,3));
t2042 = sin(qJ(1,3));
t2048 = cos(qJ(1,3));
t2038 = legFrame(3,2);
t2008 = sin(t2038);
t2011 = cos(t2038);
t2054 = xDP(2);
t2055 = xDP(1);
t2119 = t2008 * t2054 - t2011 * t2055;
t2047 = cos(qJ(3,3));
t2259 = pkin(3) * t2048;
t2155 = (t2047 + 0.1e1) * (t2047 - 0.1e1) * t2259;
t1982 = t2008 * t2055 + t2011 * t2054;
t2233 = t1982 * t2047;
t2034 = t2047 ^ 2;
t2281 = -t2034 + 0.1e1;
t1955 = ((t2119 * qJ(2,3) + t2000) * t2048 + (qJ(2,3) * t2053 - t2119 * t2021) * t2042 + pkin(3) * t2233) * t2041 - t2119 * t2155 + qJ(2,3) * t2233 + t2281 * t2042 * t2014;
t2262 = pkin(3) * t2041;
t2001 = qJ(2,3) + t2262;
t1991 = 0.1e1 / t2001;
t1992 = 0.1e1 / t2001 ^ 2;
t1993 = t1991 * t1992;
t1973 = -t2119 * t2042 + t2048 * t2053;
t2022 = 0.1e1 / t2041;
t2243 = t1973 * t2022;
t2244 = t1973 * t2021;
t2245 = t1973 * t1992;
t2251 = t1955 * t2022;
t1940 = (-t1955 * t1993 + 0.2e1 * t1992 * t2233) * t2243 - (-t2244 + t2251) * t1991 * t2245;
t2056 = pkin(1) + pkin(5);
t2074 = t2041 ^ 2;
t2023 = 0.1e1 / t2074;
t1979 = t1982 ^ 2;
t2064 = 0.1e1 / pkin(3) ^ 2;
t2236 = t1979 * t2064;
t2182 = t2023 * t2236;
t2134 = t2056 * t2182;
t2167 = 0.2e1 * t1955 * t2243;
t2267 = 0.2e1 * qJ(2,3);
t2284 = t1940 * t2267 + t1992 * t2167 + t2134;
t2043 = sin(qJ(3,2));
t2044 = sin(qJ(1,2));
t2050 = cos(qJ(1,2));
t2039 = legFrame(2,2);
t2009 = sin(t2039);
t2012 = cos(t2039);
t2118 = t2009 * t2054 - t2012 * t2055;
t2049 = cos(qJ(3,2));
t2258 = pkin(3) * t2050;
t2154 = (t2049 + 0.1e1) * (t2049 - 0.1e1) * t2258;
t1984 = t2009 * t2055 + t2012 * t2054;
t2232 = t1984 * t2049;
t2035 = t2049 ^ 2;
t2280 = -t2035 + 0.1e1;
t1956 = ((t2118 * qJ(2,2) + t2000) * t2050 + (qJ(2,2) * t2053 - t2118 * t2021) * t2044 + pkin(3) * t2232) * t2043 - t2118 * t2154 + qJ(2,2) * t2232 + t2280 * t2044 * t2014;
t2261 = pkin(3) * t2043;
t2002 = qJ(2,2) + t2261;
t1994 = 0.1e1 / t2002;
t1995 = 0.1e1 / t2002 ^ 2;
t1996 = t1994 * t1995;
t1974 = -t2118 * t2044 + t2050 * t2053;
t2026 = 0.1e1 / t2043;
t2240 = t1974 * t2026;
t2241 = t1974 * t2021;
t2242 = t1974 * t1995;
t2250 = t1956 * t2026;
t1941 = (-t1956 * t1996 + 0.2e1 * t1995 * t2232) * t2240 - (-t2241 + t2250) * t1994 * t2242;
t2077 = t2043 ^ 2;
t2027 = 0.1e1 / t2077;
t1980 = t1984 ^ 2;
t2235 = t1980 * t2064;
t2179 = t2027 * t2235;
t2132 = t2056 * t2179;
t2166 = 0.2e1 * t1956 * t2240;
t2269 = 0.2e1 * qJ(2,2);
t2283 = t1941 * t2269 + t1995 * t2166 + t2132;
t2045 = sin(qJ(3,1));
t2046 = sin(qJ(1,1));
t2052 = cos(qJ(1,1));
t2040 = legFrame(1,2);
t2010 = sin(t2040);
t2013 = cos(t2040);
t2117 = t2010 * t2054 - t2013 * t2055;
t2051 = cos(qJ(3,1));
t2257 = pkin(3) * t2052;
t2153 = (t2051 + 0.1e1) * (t2051 - 0.1e1) * t2257;
t1986 = t2010 * t2055 + t2013 * t2054;
t2231 = t1986 * t2051;
t2036 = t2051 ^ 2;
t2279 = -t2036 + 0.1e1;
t1957 = ((t2117 * qJ(2,1) + t2000) * t2052 + (qJ(2,1) * t2053 - t2117 * t2021) * t2046 + pkin(3) * t2231) * t2045 - t2117 * t2153 + qJ(2,1) * t2231 + t2279 * t2046 * t2014;
t2260 = pkin(3) * t2045;
t2003 = qJ(2,1) + t2260;
t1997 = 0.1e1 / t2003;
t1998 = 0.1e1 / t2003 ^ 2;
t1999 = t1997 * t1998;
t1975 = -t2117 * t2046 + t2052 * t2053;
t2030 = 0.1e1 / t2045;
t2237 = t1975 * t2030;
t2238 = t1975 * t2021;
t2239 = t1975 * t1998;
t2249 = t1957 * t2030;
t1942 = (-t1957 * t1999 + 0.2e1 * t1998 * t2231) * t2237 - (-t2238 + t2249) * t1997 * t2239;
t2080 = t2045 ^ 2;
t2031 = 0.1e1 / t2080;
t1981 = t1986 ^ 2;
t2234 = t1981 * t2064;
t2176 = t2031 * t2234;
t2130 = t2056 * t2176;
t2165 = 0.2e1 * t1957 * t2237;
t2271 = 0.2e1 * qJ(2,1);
t2282 = t1942 * t2271 + t1998 * t2165 + t2130;
t2024 = t2022 * t2023;
t2278 = t1979 * (t2024 * t2034 + t2022);
t2028 = t2026 * t2027;
t2277 = t1980 * (t2028 * t2035 + t2026);
t2032 = t2030 * t2031;
t2276 = t1981 * (t2032 * t2036 + t2030);
t2275 = (0.2e1 * t2034 - 0.1e1) * t2022;
t2274 = (0.2e1 * t2035 - 0.1e1) * t2026;
t2273 = (0.2e1 * t2036 - 0.1e1) * t2030;
t2057 = qJ(2,3) ^ 2;
t2062 = pkin(3) ^ 2;
t2066 = pkin(1) ^ 2;
t2110 = (2 * t2266 * pkin(1)) - (pkin(6) ^ 2) - t2062 - t2066 + ((-2 * pkin(6) - pkin(5)) * pkin(5));
t2185 = t2021 * t2251;
t2063 = 0.1e1 / pkin(3);
t2195 = qJ(2,3) * t1982 * t2063;
t2209 = t2022 * t2047;
t2228 = t1991 * t2047;
t2268 = -0.2e1 * qJ(2,3);
t2085 = -((-t1982 * t2021 * t2209 + (t2185 + (t2034 * t2062 + t2262 * t2268 - t2057 + t2110) * t1973) * t1991) * t1992 + t1993 * t2185) * t1973 + ((t1982 * t2022 + t2228 * t2244) * t2041 + t2022 * t2195) * t1982 * t1991 * t2023;
t2058 = qJ(2,2) ^ 2;
t2184 = t2021 * t2250;
t2196 = qJ(2,2) * t1984 * t2063;
t2208 = t2026 * t2049;
t2225 = t1994 * t2049;
t2270 = -0.2e1 * qJ(2,2);
t2084 = -((-t1984 * t2021 * t2208 + (t2184 + (t2035 * t2062 + t2261 * t2270 - t2058 + t2110) * t1974) * t1994) * t1995 + t1996 * t2184) * t1974 + ((t1984 * t2026 + t2225 * t2241) * t2043 + t2026 * t2196) * t1984 * t1994 * t2027;
t2059 = qJ(2,1) ^ 2;
t2183 = t2021 * t2249;
t2197 = qJ(2,1) * t1986 * t2063;
t2207 = t2030 * t2051;
t2222 = t1997 * t2051;
t2272 = -0.2e1 * qJ(2,1);
t2083 = -((-t1986 * t2021 * t2207 + (t2183 + (t2036 * t2062 + t2260 * t2272 - t2059 + t2110) * t1975) * t1997) * t1998 + t1999 * t2183) * t1975 + ((t1986 * t2030 + t2222 * t2238) * t2045 + t2030 * t2197) * t1986 * t1997 * t2031;
t2265 = pkin(1) * t1940;
t2264 = pkin(1) * t1941;
t2263 = pkin(1) * t1942;
t2256 = MDP(10) * t2063;
t2255 = MDP(11) * t2063 / t2062;
t2254 = t1940 * t2022;
t2253 = t1941 * t2026;
t2252 = t1942 * t2030;
t1970 = t1973 ^ 2;
t2248 = t1970 * t1992;
t1971 = t1974 ^ 2;
t2247 = t1971 * t1995;
t1972 = t1975 ^ 2;
t2246 = t1972 * t1998;
t1928 = t2085 - t2265;
t2230 = t1991 * t1928;
t2229 = t1991 * t2042;
t1930 = t2084 - t2264;
t2227 = t1994 * t1930;
t2226 = t1994 * t2044;
t1932 = t2083 - t2263;
t2224 = t1997 * t1932;
t2223 = t1997 * t2046;
t2221 = t2008 * t2042;
t2220 = t2008 * t2047;
t2219 = t2009 * t2044;
t2218 = t2009 * t2049;
t2217 = t2010 * t2046;
t2216 = t2010 * t2051;
t2215 = t2011 * t2042;
t2214 = t2011 * t2047;
t2213 = t2012 * t2044;
t2212 = t2012 * t2049;
t2211 = t2013 * t2046;
t2210 = t2013 * t2051;
t2123 = t1973 * t1991 * t2195;
t2180 = t2034 * t2236;
t2133 = t2024 * t2180;
t2206 = t2284 * t2041 + t2056 * t2133 - 0.2e1 * t2123 * t2209;
t2205 = 0.2e1 * t2123 + (-t2134 + t2284) * t2047;
t2124 = t1974 * t1994 * t2196;
t2177 = t2035 * t2235;
t2131 = t2028 * t2177;
t2204 = t2283 * t2043 + t2056 * t2131 - 0.2e1 * t2124 * t2208;
t2203 = 0.2e1 * t2124 + (-t2132 + t2283) * t2049;
t2125 = t1975 * t1997 * t2197;
t2174 = t2036 * t2234;
t2129 = t2032 * t2174;
t2202 = t2282 * t2045 + t2056 * t2129 - 0.2e1 * t2125 * t2207;
t2201 = 0.2e1 * t2125 + (-t2130 + t2282) * t2051;
t2194 = t1940 * t2229;
t2193 = t1940 * t1991 * t2048;
t2192 = t1940 * t2209;
t2191 = t1941 * t2226;
t2190 = t1941 * t1994 * t2050;
t2189 = t1941 * t2208;
t2188 = t1942 * t2223;
t2187 = t1942 * t1997 * t2052;
t2186 = t1942 * t2207;
t2025 = 0.1e1 / t2074 ^ 2;
t2181 = t1979 * t2025 * t2047;
t2029 = 0.1e1 / t2077 ^ 2;
t2178 = t1980 * t2029 * t2049;
t2033 = 0.1e1 / t2080 ^ 2;
t2175 = t1981 * t2033 * t2051;
t2173 = t1991 * t2221;
t2172 = t1994 * t2219;
t2171 = t1997 * t2217;
t1922 = (t2057 + t2066) * t1940 - pkin(1) * t2085;
t2170 = t1922 * t2229;
t1923 = (t2058 + t2066) * t1941 - pkin(1) * t2084;
t2169 = t1923 * t2226;
t1924 = (t2059 + t2066) * t1942 - pkin(1) * t2083;
t2168 = t1924 * t2223;
t2164 = -0.2e1 * t1973 * t2221;
t2163 = 0.2e1 * t1973 * t2215;
t2162 = -0.2e1 * t1974 * t2219;
t2161 = 0.2e1 * t1974 * t2213;
t2160 = -0.2e1 * t1975 * t2217;
t2159 = 0.2e1 * t1975 * t2211;
t2152 = t1940 * t2173;
t2151 = t2011 * t2194;
t2150 = t2034 * t2194;
t2149 = t1940 * t2041 * t2228;
t2148 = t1941 * t2172;
t2147 = t2012 * t2191;
t2146 = t2035 * t2191;
t2145 = t1941 * t2043 * t2225;
t2144 = t1942 * t2171;
t2143 = t2013 * t2188;
t2142 = t2036 * t2188;
t2141 = t1942 * t2045 * t2222;
t2137 = t1982 * t2048 * t2245;
t2136 = t1984 * t2050 * t2242;
t2135 = t1986 * t2052 * t2239;
t2128 = qJ(2,1) * t2246 + t1942 * t2056 - t2083;
t2127 = qJ(2,2) * t2247 + t1941 * t2056 - t2084;
t2126 = qJ(2,3) * t2248 + t1940 * t2056 - t2085;
t2122 = t2042 * t2149;
t2121 = t2044 * t2145;
t2120 = t2046 * t2141;
t1964 = -t2182 - t2248;
t2116 = -t2025 * t2180 + t1964;
t1965 = -t2179 - t2247;
t2115 = -t2029 * t2177 + t1965;
t1966 = -t2176 - t2246;
t2114 = -t2033 * t2174 + t1966;
t2113 = t1991 * t2278;
t2112 = t1994 * t2277;
t2111 = t1997 * t2276;
t2109 = t2128 * t2207;
t2108 = t2127 * t2208;
t2107 = t2126 * t2209;
t2103 = (t1964 * t2022 + t2024 * t2236) * t2047;
t2102 = (t1965 * t2026 + t2028 * t2235) * t2049;
t2101 = (t1966 * t2030 + t2032 * t2234) * t2051;
t2100 = t1992 * (-t1970 * t2008 + t1982 * t2163);
t2099 = t1992 * (-t1970 * t2011 + t1982 * t2164);
t2098 = t1995 * (-t1971 * t2009 + t1984 * t2161);
t2097 = t1995 * (-t1971 * t2012 + t1984 * t2162);
t2096 = t1998 * (-t1972 * t2010 + t1986 * t2159);
t2095 = t1998 * (-t1972 * t2013 + t1986 * t2160);
t1989 = qJ(2,3) * t2048 - t2021 * t2042;
t1962 = (pkin(3) * t2220 - t1989 * t2011) * t2041 + t2011 * t2155 + qJ(2,3) * t2220;
t2094 = (t1955 * t2163 - t1962 * t1970) * t1993;
t1968 = (pkin(3) * t2214 + t1989 * t2008) * t2041 + t2281 * t2008 * t2259 + qJ(2,3) * t2214;
t2093 = (t1955 * t2164 - t1968 * t1970) * t1993;
t1976 = t2001 * t2042 + t2021 * t2048;
t2092 = (-t1970 * t1976 + t2048 * t2167) * t1993;
t1990 = qJ(2,2) * t2050 - t2021 * t2044;
t1963 = (pkin(3) * t2218 - t1990 * t2012) * t2043 + t2012 * t2154 + qJ(2,2) * t2218;
t2091 = (t1956 * t2161 - t1963 * t1971) * t1996;
t1969 = (pkin(3) * t2212 + t1990 * t2009) * t2043 + t2280 * t2009 * t2258 + qJ(2,2) * t2212;
t2090 = (t1956 * t2162 - t1969 * t1971) * t1996;
t1977 = t2002 * t2044 + t2021 * t2050;
t2089 = (-t1971 * t1977 + t2050 * t2166) * t1996;
t1988 = qJ(2,1) * t2052 - t2021 * t2046;
t1961 = (pkin(3) * t2216 - t1988 * t2013) * t2045 + t2013 * t2153 + qJ(2,1) * t2216;
t2088 = (t1957 * t2159 - t1961 * t1972) * t1999;
t1967 = (pkin(3) * t2210 + t1988 * t2010) * t2045 + t2279 * t2010 * t2257 + qJ(2,1) * t2210;
t2087 = (t1957 * t2160 - t1967 * t1972) * t1999;
t1978 = t2003 * t2046 + t2021 * t2052;
t2086 = (-t1972 * t1978 + t2052 * t2165) * t1999;
t1933 = t2083 - 0.2e1 * t2263;
t1931 = t2084 - 0.2e1 * t2264;
t1929 = t2085 - 0.2e1 * t2265;
t1 = [(t2143 + t2147 + t2151) * MDP(1) + ((t1933 * t2211 + t1961 * t2252) * t1997 + (t1931 * t2213 + t1963 * t2253) * t1994 + (t1929 * t2215 + t1962 * t2254) * t1991) * MDP(4) + (t2022 * t2094 + t2026 * t2091 + t2030 * t2088 + t2143 * t2271 + t2147 * t2269 + t2151 * t2267) * MDP(5) + (t2011 * t2170 + t2012 * t2169 + t2013 * t2168 + (qJ(2,1) * t2088 + t1961 * t2224) * t2030 + (qJ(2,2) * t2091 + t1963 * t2227) * t2026 + (qJ(2,3) * t2094 + t1962 * t2230) * t2022) * MDP(6) + (t2011 * t2150 + t2012 * t2146 + t2013 * t2142 + (t2047 * t2100 + t2049 * t2098 + t2051 * t2096) * t2063) * MDP(7) + (-0.2e1 * t2011 * t2122 - 0.2e1 * t2012 * t2121 - 0.2e1 * t2013 * t2120 + (t2096 * t2273 + t2098 * t2274 + t2100 * t2275) * t2063) * MDP(8) + ((-t2008 * t2192 - t2009 * t2189 - t2010 * t2186) * t2063 + (-t2111 * t2211 - t2112 * t2213 - t2113 * t2215) * t2064) * MDP(9) + (t1940 * t2008 + t1941 * t2009 + t1942 * t2010) * t2256 + (t2008 * t2181 + t2009 * t2178 + t2010 * t2175) * t2255 + ((t2114 * t1961 + t2202 * t2211) * t1997 + (t2115 * t1963 + t2204 * t2213) * t1994 + (t2116 * t1962 + t2206 * t2215) * t1991 + (t2008 * t2107 + t2009 * t2108 + t2010 * t2109) * t2063) * MDP(12) + ((t1961 * t2101 + t2201 * t2211) * t1997 + (t1963 * t2102 + t2203 * t2213) * t1994 + (t1962 * t2103 + t2205 * t2215) * t1991 + (-t2126 * t2008 - t2127 * t2009 - t2128 * t2010) * t2063) * MDP(13); (-t2144 - t2148 - t2152) * MDP(1) + ((-t1933 * t2217 + t1967 * t2252) * t1997 + (-t1931 * t2219 + t1969 * t2253) * t1994 + (-t1929 * t2221 + t1968 * t2254) * t1991) * MDP(4) + (t2022 * t2093 + t2026 * t2090 + t2030 * t2087 + t2144 * t2272 + t2148 * t2270 + t2152 * t2268) * MDP(5) + (-t2008 * t2170 - t2009 * t2169 - t2010 * t2168 + (qJ(2,1) * t2087 + t1967 * t2224) * t2030 + (qJ(2,2) * t2090 + t1969 * t2227) * t2026 + (qJ(2,3) * t2093 + t1968 * t2230) * t2022) * MDP(6) + (-t2008 * t2150 - t2009 * t2146 - t2010 * t2142 + (t2047 * t2099 + t2049 * t2097 + t2051 * t2095) * t2063) * MDP(7) + (0.2e1 * t2008 * t2122 + 0.2e1 * t2009 * t2121 + 0.2e1 * t2010 * t2120 + (t2095 * t2273 + t2097 * t2274 + t2099 * t2275) * t2063) * MDP(8) + ((-t2011 * t2192 - t2012 * t2189 - t2013 * t2186) * t2063 + (t2171 * t2276 + t2172 * t2277 + t2173 * t2278) * t2064) * MDP(9) + (t1940 * t2011 + t1941 * t2012 + t1942 * t2013) * t2256 + (t2011 * t2181 + t2012 * t2178 + t2013 * t2175) * t2255 + ((t2114 * t1967 - t2202 * t2217) * t1997 + (t2115 * t1969 - t2204 * t2219) * t1994 + (t2116 * t1968 - t2206 * t2221) * t1991 + (t2011 * t2107 + t2012 * t2108 + t2013 * t2109) * t2063) * MDP(12) + ((t1967 * t2101 - t2201 * t2217) * t1997 + (t1969 * t2102 - t2203 * t2219) * t1994 + (t1968 * t2103 - t2205 * t2221) * t1991 + (-t2126 * t2011 - t2127 * t2012 - t2128 * t2013) * t2063) * MDP(13); (t2187 + t2190 + t2193) * MDP(1) + ((t1933 * t2052 + t1942 * t1978) * t1997 + (t1931 * t2050 + t1941 * t1977) * t1994 + (t1929 * t2048 + t1940 * t1976) * t1991) * MDP(4) + (t2187 * t2271 + t2190 * t2269 + t2193 * t2267 + t2086 + t2089 + t2092) * MDP(5) + ((t2052 * t1924 + t1978 * t1932) * t1997 + (t2050 * t1923 + t1977 * t1930) * t1994 + (t2048 * t1922 + t1976 * t1928) * t1991 + qJ(2,3) * t2092 + qJ(2,2) * t2089 + qJ(2,1) * t2086) * MDP(6) + (t2034 * t2193 + t2035 * t2190 + t2036 * t2187 + 0.2e1 * (t2047 * t2137 + t2049 * t2136 + t2051 * t2135) * t2063) * MDP(7) + 0.2e1 * (-t2048 * t2149 - t2050 * t2145 - t2052 * t2141 + (t2135 * t2273 + t2136 * t2274 + t2137 * t2275) * t2063) * MDP(8) + (-t2048 * t2113 - t2050 * t2112 - t2052 * t2111) * t2064 * MDP(9) + ((t2202 * t2052 + (t1966 * t2045 - t2129) * t1978) * t1997 + (t2204 * t2050 + (t1965 * t2043 - t2131) * t1977) * t1994 + (t2206 * t2048 + (t1964 * t2041 - t2133) * t1976) * t1991) * MDP(12) + ((t2201 * t2052 + (t1966 + t2176) * t2051 * t1978) * t1997 + (t2203 * t2050 + (t1965 + t2179) * t2049 * t1977) * t1994 + (t2205 * t2048 + (t1964 + t2182) * t2047 * t1976) * t1991) * MDP(13);];
taucX  = t1;
