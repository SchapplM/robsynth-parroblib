% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RPRRR12V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [14x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RPRRR12V1G3A0_convert_par2_MPV_fixb.m

% Output:
% taucX [3x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 18:28
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1),zeros(14,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [14 1]), ...
  'P3RPRRR12V1G3A0_coriolisvec_para_pf_mdp: MDP has to be [14x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 18:28:38
% EndTime: 2020-08-06 18:28:44
% DurationCPUTime: 6.26s
% Computational Cost: add. (13005->362), mult. (21958->727), div. (2289->18), fcn. (15600->18), ass. (0->296)
t2008 = xDP(3);
t1969 = pkin(3) * t2008;
t2220 = (-pkin(5) - pkin(6));
t1976 = pkin(1) - t2220;
t1996 = sin(qJ(3,3));
t1997 = sin(qJ(1,3));
t2003 = cos(qJ(1,3));
t1993 = legFrame(3,2);
t1963 = sin(t1993);
t1966 = cos(t1993);
t2009 = xDP(2);
t2010 = xDP(1);
t2074 = -t1963 * t2009 + t1966 * t2010;
t2002 = cos(qJ(3,3));
t2113 = pkin(3) * (t2002 + 0.1e1) * (t2002 - 0.1e1) * t1997;
t2170 = t1976 * t2008;
t1941 = t1963 * t2010 + t1966 * t2009;
t2187 = t1941 * t2002;
t1989 = t2002 ^ 2;
t2238 = -t1989 + 0.1e1;
t1914 = ((qJ(2,3) * t2008 + t2074 * t1976) * t2003 + (t2074 * qJ(2,3) - t2170) * t1997 + pkin(3) * t2187) * t1996 - t2074 * t2113 + qJ(2,3) * t2187 + t2238 * t2003 * t1969;
t2216 = pkin(3) * t1996;
t1956 = qJ(2,3) + t2216;
t1947 = 0.1e1 / t1956;
t1948 = 0.1e1 / t1956 ^ 2;
t1949 = t1947 * t1948;
t1932 = -t1997 * t2008 + t2074 * t2003;
t1977 = 0.1e1 / t1996;
t2197 = t1932 * t1977;
t2198 = t1932 * t1976;
t2199 = t1932 * t1948;
t2205 = t1914 * t1977;
t2223 = 0.2e1 * t1948;
t1899 = (-t1914 * t1949 + t2187 * t2223) * t2197 - (-t2198 + t2205) * t1947 * t2199;
t2011 = pkin(1) + pkin(5);
t2029 = t1996 ^ 2;
t1978 = 0.1e1 / t2029;
t1938 = t1941 ^ 2;
t2019 = 0.1e1 / pkin(3) ^ 2;
t2190 = t1938 * t2019;
t2137 = t1978 * t2190;
t2092 = t2011 * t2137;
t2143 = t1914 * t2197;
t2224 = 0.2e1 * qJ(2,3);
t2241 = t1899 * t2224 + t2143 * t2223 + t2092;
t1998 = sin(qJ(3,2));
t1999 = sin(qJ(1,2));
t2005 = cos(qJ(1,2));
t1994 = legFrame(2,2);
t1964 = sin(t1994);
t1967 = cos(t1994);
t2073 = -t1964 * t2009 + t1967 * t2010;
t2004 = cos(qJ(3,2));
t2112 = pkin(3) * (t2004 + 0.1e1) * (t2004 - 0.1e1) * t1999;
t1943 = t1964 * t2010 + t1967 * t2009;
t2186 = t1943 * t2004;
t1990 = t2004 ^ 2;
t2237 = -t1990 + 0.1e1;
t1915 = ((qJ(2,2) * t2008 + t2073 * t1976) * t2005 + (t2073 * qJ(2,2) - t2170) * t1999 + pkin(3) * t2186) * t1998 - t2073 * t2112 + qJ(2,2) * t2186 + t2237 * t2005 * t1969;
t2215 = pkin(3) * t1998;
t1957 = qJ(2,2) + t2215;
t1950 = 0.1e1 / t1957;
t1951 = 0.1e1 / t1957 ^ 2;
t1952 = t1950 * t1951;
t1933 = -t1999 * t2008 + t2073 * t2005;
t1981 = 0.1e1 / t1998;
t2194 = t1933 * t1981;
t2195 = t1933 * t1976;
t2196 = t1933 * t1951;
t2204 = t1915 * t1981;
t2222 = 0.2e1 * t1951;
t1900 = (-t1915 * t1952 + t2186 * t2222) * t2194 - (-t2195 + t2204) * t1950 * t2196;
t2032 = t1998 ^ 2;
t1982 = 0.1e1 / t2032;
t1939 = t1943 ^ 2;
t2189 = t1939 * t2019;
t2134 = t1982 * t2189;
t2090 = t2011 * t2134;
t2141 = t1915 * t2194;
t2226 = 0.2e1 * qJ(2,2);
t2240 = t1900 * t2226 + t2141 * t2222 + t2090;
t2000 = sin(qJ(3,1));
t2001 = sin(qJ(1,1));
t2007 = cos(qJ(1,1));
t1995 = legFrame(1,2);
t1965 = sin(t1995);
t1968 = cos(t1995);
t2072 = -t1965 * t2009 + t1968 * t2010;
t2006 = cos(qJ(3,1));
t2111 = pkin(3) * (t2006 + 0.1e1) * (t2006 - 0.1e1) * t2001;
t1945 = t1965 * t2010 + t1968 * t2009;
t2185 = t1945 * t2006;
t1991 = t2006 ^ 2;
t2236 = -t1991 + 0.1e1;
t1916 = ((qJ(2,1) * t2008 + t2072 * t1976) * t2007 + (t2072 * qJ(2,1) - t2170) * t2001 + pkin(3) * t2185) * t2000 - t2072 * t2111 + qJ(2,1) * t2185 + t2236 * t2007 * t1969;
t2214 = pkin(3) * t2000;
t1958 = qJ(2,1) + t2214;
t1953 = 0.1e1 / t1958;
t1954 = 0.1e1 / t1958 ^ 2;
t1955 = t1953 * t1954;
t1934 = -t2001 * t2008 + t2072 * t2007;
t1985 = 0.1e1 / t2000;
t2191 = t1934 * t1985;
t2192 = t1934 * t1976;
t2193 = t1934 * t1954;
t2203 = t1916 * t1985;
t2221 = 0.2e1 * t1954;
t1901 = (-t1916 * t1955 + t2185 * t2221) * t2191 - (-t2192 + t2203) * t1953 * t2193;
t2035 = t2000 ^ 2;
t1986 = 0.1e1 / t2035;
t1940 = t1945 ^ 2;
t2188 = t1940 * t2019;
t2131 = t1986 * t2188;
t2088 = t2011 * t2131;
t2139 = t1916 * t2191;
t2228 = 0.2e1 * qJ(2,1);
t2239 = t1901 * t2228 + t2139 * t2221 + t2088;
t1979 = t1977 * t1978;
t2235 = t1938 * (t1979 * t1989 + t1977);
t1983 = t1981 * t1982;
t2234 = t1939 * (t1983 * t1990 + t1981);
t1987 = t1985 * t1986;
t2233 = t1940 * (t1987 * t1991 + t1985);
t2232 = (0.2e1 * t1989 - 0.1e1) * t1977;
t2231 = (0.2e1 * t1990 - 0.1e1) * t1981;
t2230 = (0.2e1 * t1991 - 0.1e1) * t1985;
t2012 = qJ(2,3) ^ 2;
t2017 = pkin(3) ^ 2;
t2021 = pkin(1) ^ 2;
t2065 = (2 * t2220 * pkin(1)) - (pkin(6) ^ 2) - t2017 - t2021 + ((-2 * pkin(6) - pkin(5)) * pkin(5));
t2142 = t1976 * t2205;
t2018 = 0.1e1 / pkin(3);
t2152 = qJ(2,3) * t1941 * t2018;
t2169 = t1977 * t2002;
t2225 = -0.2e1 * qJ(2,3);
t2040 = -((-t1941 * t1976 * t2169 + (t2142 + (t1989 * t2017 + t2216 * t2225 - t2012 + t2065) * t1932) * t1947) * t1948 + t1949 * t2142) * t1932 + ((t1947 * t2002 * t2198 + t1941 * t1977) * t1996 + t1977 * t2152) * t1941 * t1947 * t1978;
t2013 = qJ(2,2) ^ 2;
t2140 = t1976 * t2204;
t2153 = qJ(2,2) * t1943 * t2018;
t2168 = t1981 * t2004;
t2227 = -0.2e1 * qJ(2,2);
t2039 = -((-t1943 * t1976 * t2168 + (t2140 + (t1990 * t2017 + t2215 * t2227 - t2013 + t2065) * t1933) * t1950) * t1951 + t1952 * t2140) * t1933 + ((t1950 * t2004 * t2195 + t1943 * t1981) * t1998 + t1981 * t2153) * t1943 * t1950 * t1982;
t2014 = qJ(2,1) ^ 2;
t2138 = t1976 * t2203;
t2154 = qJ(2,1) * t1945 * t2018;
t2167 = t1985 * t2006;
t2229 = -0.2e1 * qJ(2,1);
t2038 = -((-t1945 * t1976 * t2167 + (t2138 + (t1991 * t2017 + t2214 * t2229 - t2014 + t2065) * t1934) * t1953) * t1954 + t1955 * t2138) * t1934 + ((t1953 * t2006 * t2192 + t1945 * t1985) * t2000 + t1985 * t2154) * t1945 * t1953 * t1986;
t2219 = pkin(1) * t1899;
t2218 = pkin(1) * t1900;
t2217 = pkin(1) * t1901;
t2213 = MDP(10) * t2018;
t2212 = MDP(11) * t2018 / t2017;
t2211 = t1899 * t1947;
t2210 = t1899 * t1977;
t2209 = t1900 * t1950;
t2208 = t1900 * t1981;
t2207 = t1901 * t1953;
t2206 = t1901 * t1985;
t1929 = t1932 ^ 2;
t2202 = t1929 * t1948;
t1930 = t1933 ^ 2;
t2201 = t1930 * t1951;
t1931 = t1934 ^ 2;
t2200 = t1931 * t1954;
t1887 = t2040 - t2219;
t2184 = t1947 * t1887;
t2183 = t1947 * t2003;
t1889 = t2039 - t2218;
t2182 = t1950 * t1889;
t2181 = t1950 * t2005;
t1891 = t2038 - t2217;
t2180 = t1953 * t1891;
t2179 = t1963 * t2003;
t2178 = t1964 * t2005;
t2177 = t1965 * t2007;
t2176 = t1966 * t2002;
t2175 = t1966 * t2003;
t2174 = t1967 * t2004;
t2173 = t1967 * t2005;
t2172 = t1968 * t2006;
t2171 = t1968 * t2007;
t2166 = t1996 * t2002;
t2165 = t1998 * t2004;
t2164 = t2000 * t2006;
t2082 = t1933 * t1950 * t2153;
t2132 = t1990 * t2189;
t2089 = t1983 * t2132;
t2163 = t2240 * t1998 + t2011 * t2089 - 0.2e1 * t2082 * t2168;
t2162 = 0.2e1 * t2082 + (-t2090 + t2240) * t2004;
t2083 = t1934 * t1953 * t2154;
t2129 = t1991 * t2188;
t2087 = t1987 * t2129;
t2161 = t2239 * t2000 + t2011 * t2087 - 0.2e1 * t2083 * t2167;
t2160 = 0.2e1 * t2083 + (-t2088 + t2239) * t2006;
t2081 = t1932 * t1947 * t2152;
t2159 = 0.2e1 * t2081 + (-t2092 + t2241) * t2002;
t2135 = t1989 * t2190;
t2091 = t1979 * t2135;
t2158 = t2241 * t1996 + t2011 * t2091 - 0.2e1 * t2081 * t2169;
t2151 = t1997 * t2211;
t2150 = t1899 * t2183;
t2149 = t1899 * t2169;
t2148 = t1999 * t2209;
t2147 = t1900 * t2181;
t2146 = t1900 * t2168;
t2145 = t2001 * t2207;
t2144 = t1901 * t2167;
t1980 = 0.1e1 / t2029 ^ 2;
t2136 = t1938 * t1980 * t2002;
t1984 = 0.1e1 / t2032 ^ 2;
t2133 = t1939 * t1984 * t2004;
t1988 = 0.1e1 / t2035 ^ 2;
t2130 = t1940 * t1988 * t2006;
t2128 = t1947 * t2175;
t2127 = t1950 * t2173;
t2126 = t1953 * t2177;
t2125 = t1953 * t2171;
t1881 = (t2012 + t2021) * t1899 - pkin(1) * t2040;
t2124 = t1881 * t2183;
t1882 = (t2013 + t2021) * t1900 - pkin(1) * t2039;
t2123 = t1882 * t2181;
t2122 = -0.2e1 * t1932 * t2179;
t2121 = 0.2e1 * t1932 * t2175;
t2120 = -0.2e1 * t1933 * t2178;
t2119 = 0.2e1 * t1933 * t2173;
t2118 = -0.2e1 * t1934 * t2177;
t2117 = 0.2e1 * t1934 * t2171;
t2110 = t1963 * t2150;
t2109 = t1899 * t2128;
t2108 = t1989 * t2150;
t2107 = t2166 * t2211;
t2106 = t1964 * t2147;
t2105 = t1900 * t2127;
t2104 = t1990 * t2147;
t2103 = t2165 * t2209;
t2102 = t1901 * t2126;
t2101 = t1901 * t2125;
t2100 = t1991 * t2007 * t2207;
t2099 = t2164 * t2207;
t2095 = t1941 * t1997 * t2199;
t2094 = t1943 * t1999 * t2196;
t2093 = t1945 * t2001 * t2193;
t2086 = qJ(2,1) * t2200 + t1901 * t2011 - t2038;
t2085 = qJ(2,2) * t2201 + t1900 * t2011 - t2039;
t2084 = qJ(2,3) * t2202 + t1899 * t2011 - t2040;
t2080 = qJ(2,1) * t2001 + t1976 * t2007;
t2079 = qJ(2,2) * t1999 + t1976 * t2005;
t2078 = qJ(2,3) * t1997 + t1976 * t2003;
t2077 = t2003 * t2107;
t2076 = t2005 * t2103;
t2075 = t2007 * t2099;
t1926 = -t2137 - t2202;
t2071 = -t1980 * t2135 + t1926;
t1927 = -t2134 - t2201;
t2070 = -t1984 * t2132 + t1927;
t1928 = -t2131 - t2200;
t2069 = -t1988 * t2129 + t1928;
t2068 = t1947 * t2235;
t2067 = t1950 * t2234;
t2066 = t1953 * t2233;
t2064 = t2086 * t2167;
t2063 = t2085 * t2168;
t2062 = t2084 * t2169;
t2058 = (t1926 * t1977 + t1979 * t2190) * t2002;
t2057 = (t1927 * t1981 + t1983 * t2189) * t2004;
t2056 = (t1928 * t1985 + t1987 * t2188) * t2006;
t2055 = t1948 * (-t1929 * t1963 + t1941 * t2121);
t2054 = t1948 * (-t1929 * t1966 + t1941 * t2122);
t2053 = t1951 * (-t1930 * t1964 + t1943 * t2119);
t2052 = t1951 * (-t1930 * t1967 + t1943 * t2120);
t2051 = t1954 * (-t1931 * t1965 + t1945 * t2117);
t2050 = t1954 * (-t1931 * t1968 + t1945 * t2118);
t1920 = t2078 * t1966 * t1996 + t1963 * t2002 * qJ(2,3) + (t2238 * t1966 * t1997 + t1963 * t2166) * pkin(3);
t2049 = (t1914 * t2121 - t1920 * t1929) * t1949;
t1923 = (pkin(3) * t2176 - t2078 * t1963) * t1996 + t1963 * t2113 + qJ(2,3) * t2176;
t2048 = (t1914 * t2122 - t1923 * t1929) * t1949;
t1935 = t1956 * t2003 - t1976 * t1997;
t2047 = (-t1929 * t1935 - 0.2e1 * t1997 * t2143) * t1949;
t1921 = t2079 * t1967 * t1998 + t1964 * t2004 * qJ(2,2) + (t2237 * t1967 * t1999 + t1964 * t2165) * pkin(3);
t2046 = (t1915 * t2119 - t1921 * t1930) * t1952;
t1924 = (pkin(3) * t2174 - t2079 * t1964) * t1998 + t1964 * t2112 + qJ(2,2) * t2174;
t2045 = (t1915 * t2120 - t1924 * t1930) * t1952;
t1936 = t1957 * t2005 - t1976 * t1999;
t2044 = (-t1930 * t1936 - 0.2e1 * t1999 * t2141) * t1952;
t1922 = t2080 * t1968 * t2000 + t1965 * t2006 * qJ(2,1) + (t2236 * t1968 * t2001 + t1965 * t2164) * pkin(3);
t2043 = (t1916 * t2117 - t1922 * t1931) * t1955;
t1925 = (pkin(3) * t2172 - t2080 * t1965) * t2000 + t1965 * t2111 + qJ(2,1) * t2172;
t2042 = (t1916 * t2118 - t1925 * t1931) * t1955;
t1937 = t1958 * t2007 - t1976 * t2001;
t2041 = (-t1931 * t1937 - 0.2e1 * t2001 * t2139) * t1955;
t1892 = t2038 - 0.2e1 * t2217;
t1890 = t2039 - 0.2e1 * t2218;
t1888 = t2040 - 0.2e1 * t2219;
t1883 = (t2014 + t2021) * t1901 - pkin(1) * t2038;
t1 = [(t2101 + t2105 + t2109) * MDP(1) + ((t1892 * t2171 + t1922 * t2206) * t1953 + (t1890 * t2173 + t1921 * t2208) * t1950 + (t1888 * t2175 + t1920 * t2210) * t1947) * MDP(4) + (t1977 * t2049 + t1981 * t2046 + t1985 * t2043 + t2101 * t2228 + t2105 * t2226 + t2109 * t2224) * MDP(5) + (t1966 * t2124 + t1967 * t2123 + t1883 * t2125 + (qJ(2,1) * t2043 + t1922 * t2180) * t1985 + (qJ(2,2) * t2046 + t1921 * t2182) * t1981 + (qJ(2,3) * t2049 + t1920 * t2184) * t1977) * MDP(6) + (t1966 * t2108 + t1967 * t2104 + t1968 * t2100 + (t2002 * t2055 + t2004 * t2053 + t2006 * t2051) * t2018) * MDP(7) + (-0.2e1 * t1966 * t2077 - 0.2e1 * t1967 * t2076 - 0.2e1 * t1968 * t2075 + (t2051 * t2230 + t2053 * t2231 + t2055 * t2232) * t2018) * MDP(8) + ((-t1963 * t2149 - t1964 * t2146 - t1965 * t2144) * t2018 + (-t2125 * t2233 - t2127 * t2234 - t2128 * t2235) * t2019) * MDP(9) + (t1899 * t1963 + t1900 * t1964 + t1901 * t1965) * t2213 + (t1963 * t2136 + t1964 * t2133 + t1965 * t2130) * t2212 + ((t2069 * t1922 + t2161 * t2171) * t1953 + (t2070 * t1921 + t2163 * t2173) * t1950 + (t2071 * t1920 + t2158 * t2175) * t1947 + (t1963 * t2062 + t1964 * t2063 + t1965 * t2064) * t2018) * MDP(12) + ((t1922 * t2056 + t2160 * t2171) * t1953 + (t1921 * t2057 + t2162 * t2173) * t1950 + (t1920 * t2058 + t2159 * t2175) * t1947 + (-t2084 * t1963 - t2085 * t1964 - t2086 * t1965) * t2018) * MDP(13); (-t2102 - t2106 - t2110) * MDP(1) + ((-t1892 * t2177 + t1925 * t2206) * t1953 + (-t1890 * t2178 + t1924 * t2208) * t1950 + (-t1888 * t2179 + t1923 * t2210) * t1947) * MDP(4) + (t1977 * t2048 + t1981 * t2045 + t1985 * t2042 + t2102 * t2229 + t2106 * t2227 + t2110 * t2225) * MDP(5) + (-t1963 * t2124 - t1964 * t2123 - t1883 * t2126 + (qJ(2,1) * t2042 + t1925 * t2180) * t1985 + (qJ(2,2) * t2045 + t1924 * t2182) * t1981 + (qJ(2,3) * t2048 + t1923 * t2184) * t1977) * MDP(6) + (-t1963 * t2108 - t1964 * t2104 - t1965 * t2100 + (t2002 * t2054 + t2004 * t2052 + t2006 * t2050) * t2018) * MDP(7) + (0.2e1 * t1963 * t2077 + 0.2e1 * t1964 * t2076 + 0.2e1 * t1965 * t2075 + (t2050 * t2230 + t2052 * t2231 + t2054 * t2232) * t2018) * MDP(8) + ((-t1966 * t2149 - t1967 * t2146 - t1968 * t2144) * t2018 + (t2066 * t2177 + t2067 * t2178 + t2068 * t2179) * t2019) * MDP(9) + (t1899 * t1966 + t1900 * t1967 + t1901 * t1968) * t2213 + (t1966 * t2136 + t1967 * t2133 + t1968 * t2130) * t2212 + ((t2069 * t1925 - t2161 * t2177) * t1953 + (t2070 * t1924 - t2163 * t2178) * t1950 + (t2071 * t1923 - t2158 * t2179) * t1947 + (t1966 * t2062 + t1967 * t2063 + t1968 * t2064) * t2018) * MDP(12) + ((t1925 * t2056 - t2160 * t2177) * t1953 + (t1924 * t2057 - t2162 * t2178) * t1950 + (t1923 * t2058 - t2159 * t2179) * t1947 + (-t2084 * t1966 - t2085 * t1967 - t2086 * t1968) * t2018) * MDP(13); (-t2145 - t2148 - t2151) * MDP(1) + ((-t1892 * t2001 + t1901 * t1937) * t1953 + (-t1890 * t1999 + t1900 * t1936) * t1950 + (-t1888 * t1997 + t1899 * t1935) * t1947) * MDP(4) + (t2145 * t2229 + t2148 * t2227 + t2151 * t2225 + t2041 + t2044 + t2047) * MDP(5) + ((-t2001 * t1883 + t1937 * t1891) * t1953 + (-t1999 * t1882 + t1936 * t1889) * t1950 + (-t1997 * t1881 + t1935 * t1887) * t1947 + qJ(2,3) * t2047 + qJ(2,2) * t2044 + qJ(2,1) * t2041) * MDP(6) + (-t1989 * t2151 - t1990 * t2148 - t1991 * t2145 + 0.2e1 * (-t2002 * t2095 - t2004 * t2094 - t2006 * t2093) * t2018) * MDP(7) + 0.2e1 * (t1997 * t2107 + t1999 * t2103 + t2001 * t2099 + (-t2093 * t2230 - t2094 * t2231 - t2095 * t2232) * t2018) * MDP(8) + (t1997 * t2068 + t1999 * t2067 + t2001 * t2066) * t2019 * MDP(9) + ((-t2161 * t2001 + (t1928 * t2000 - t2087) * t1937) * t1953 + (-t2163 * t1999 + (t1927 * t1998 - t2089) * t1936) * t1950 + (-t2158 * t1997 + (t1926 * t1996 - t2091) * t1935) * t1947) * MDP(12) + ((-t2160 * t2001 + (t1928 + t2131) * t2006 * t1937) * t1953 + (-t2162 * t1999 + (t1927 + t2134) * t2004 * t1936) * t1950 + (-t2159 * t1997 + (t1926 + t2137) * t2002 * t1935) * t1947) * MDP(13);];
taucX  = t1;
