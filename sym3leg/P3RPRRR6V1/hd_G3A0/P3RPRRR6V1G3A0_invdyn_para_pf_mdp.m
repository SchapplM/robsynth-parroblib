% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RPRRR6V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d3,d4,theta2]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [12x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RPRRR6V1G3A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 18:43
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RPRRR6V1G3A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(7,1),zeros(12,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [12 1]), ...
  'P3RPRRR6V1G3A0_invdyn_para_pf_mdp: MDP has to be [12x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 18:42:33
% EndTime: 2020-08-06 18:42:47
% DurationCPUTime: 14.12s
% Computational Cost: add. (99693->586), mult. (115116->955), div. (16212->22), fcn. (82230->84), ass. (0->399)
t1921 = sin(pkin(7));
t1947 = -pkin(6) - pkin(5);
t1851 = t1947 * t1921;
t1838 = -t1851 + pkin(1);
t1937 = cos(qJ(1,3));
t1807 = t1838 * t1937;
t1922 = cos(pkin(7));
t1931 = sin(qJ(1,3));
t2078 = t1931 * t1947;
t2079 = t1931 * t1921;
t2182 = t1807 - pkin(2) * t2079 + (pkin(2) * t1937 - t2078) * t1922;
t1939 = cos(qJ(1,2));
t1808 = t1838 * t1939;
t1933 = sin(qJ(1,2));
t2075 = t1933 * t1947;
t2076 = t1933 * t1921;
t2181 = t1808 - pkin(2) * t2076 + (pkin(2) * t1939 - t2075) * t1922;
t1941 = cos(qJ(1,1));
t1809 = t1838 * t1941;
t1935 = sin(qJ(1,1));
t2072 = t1935 * t1947;
t2073 = t1935 * t1921;
t2180 = t1809 - pkin(2) * t2073 + (pkin(2) * t1941 - t2072) * t1922;
t1924 = legFrame(3,2);
t1873 = sin(t1924);
t1876 = cos(t1924);
t1804 = g(1) * t1876 - g(2) * t1873;
t1773 = g(3) * t1937 + t1804 * t1931;
t1774 = -g(3) * t1931 + t1804 * t1937;
t1925 = legFrame(2,2);
t1874 = sin(t1925);
t1877 = cos(t1925);
t1805 = g(1) * t1877 - g(2) * t1874;
t1775 = g(3) * t1939 + t1805 * t1933;
t1776 = -g(3) * t1933 + t1805 * t1939;
t1926 = legFrame(1,2);
t1875 = sin(t1926);
t1878 = cos(t1926);
t1806 = g(1) * t1878 - g(2) * t1875;
t1777 = g(3) * t1941 + t1806 * t1935;
t1778 = -g(3) * t1935 + t1806 * t1941;
t1895 = qJ(1,1) + pkin(7);
t1846 = t1926 + t1895;
t1847 = -t1926 + t1895;
t1790 = -sin(t1846) - sin(t1847);
t1793 = cos(t1847) - cos(t1846);
t1871 = cos(t1895);
t1945 = xDP(2);
t1946 = xDP(1);
t1944 = xDP(3);
t2142 = -2 * t1944;
t1752 = t1790 * t1946 + t1793 * t1945 + t1871 * t2142;
t1940 = cos(qJ(3,1));
t1881 = t1940 * pkin(3);
t1860 = t1881 + pkin(2);
t1872 = t1922 * pkin(1);
t1824 = t1872 + t1860;
t1816 = 0.1e1 / t1824;
t2122 = t1921 * pkin(1);
t1990 = -t1947 / 0.2e1 + t2122 / 0.2e1;
t1934 = sin(qJ(3,1));
t1782 = t1860 * t1922 + t1838;
t1850 = t1947 * t1922;
t2081 = t1921 * t1860;
t1786 = t1850 + t2081;
t1968 = 0.1e1 / pkin(3);
t1848 = t1872 + pkin(2);
t2074 = t1934 * t1848;
t1916 = 0.1e1 / t1934;
t2088 = t1816 * t1916;
t1964 = 0.2e1 * qJ(3,1);
t1904 = sin(t1964);
t2135 = pkin(3) * t1904;
t1735 = (t1944 * (t1782 * t1935 + t1786 * t1941) / (t2135 / 0.2e1 + t2074) + (t1875 * t1945 - t1878 * t1946) * (t1782 * t1941 - t1786 * t1935) * t2088) * t1968;
t2123 = t1735 * pkin(3);
t2046 = t1934 * t2123;
t1726 = t1752 * t1816 * t1990 - t2046;
t1817 = 0.1e1 / t1824 ^ 2;
t1928 = xDDP(2);
t1929 = xDDP(1);
t1927 = xDDP(3);
t2087 = t1816 * t1927;
t2110 = t1752 / 0.2e1;
t1724 = -t1871 * t2087 + (t1790 * t1929 + t1793 * t1928) * t1816 / 0.2e1 + (-t1726 + t2046) * t1817 * t2110;
t1732 = t1735 ^ 2;
t1965 = 0.2e1 * pkin(2);
t2126 = t1724 * pkin(1);
t2179 = t1732 * pkin(5) - t1724 * t1965 + (pkin(1) * t1732 - t1778) * t1921 + (-0.2e1 * t2126 - t1777) * t1922;
t1894 = qJ(1,2) + pkin(7);
t1844 = t1925 + t1894;
t1845 = -t1925 + t1894;
t1789 = -sin(t1844) - sin(t1845);
t1792 = cos(t1845) - cos(t1844);
t1870 = cos(t1894);
t1753 = t1789 * t1946 + t1792 * t1945 + t1870 * t2142;
t1938 = cos(qJ(3,2));
t1880 = t1938 * pkin(3);
t1858 = t1880 + pkin(2);
t1823 = t1872 + t1858;
t1813 = 0.1e1 / t1823;
t1932 = sin(qJ(3,2));
t1781 = t1858 * t1922 + t1838;
t2082 = t1921 * t1858;
t1785 = t1850 + t2082;
t2077 = t1932 * t1848;
t1915 = 0.1e1 / t1932;
t2091 = t1813 * t1915;
t1961 = 0.2e1 * qJ(3,2);
t1901 = sin(t1961);
t2136 = pkin(3) * t1901;
t1734 = (t1944 * (t1781 * t1933 + t1785 * t1939) / (t2136 / 0.2e1 + t2077) + (t1874 * t1945 - t1877 * t1946) * (t1781 * t1939 - t1785 * t1933) * t2091) * t1968;
t2124 = t1734 * pkin(3);
t2047 = t1932 * t2124;
t1727 = t1753 * t1813 * t1990 - t2047;
t1814 = 0.1e1 / t1823 ^ 2;
t2090 = t1813 * t1927;
t2109 = t1753 / 0.2e1;
t1723 = -t1870 * t2090 + (t1789 * t1929 + t1792 * t1928) * t1813 / 0.2e1 + (-t1727 + t2047) * t1814 * t2109;
t1731 = t1734 ^ 2;
t2127 = t1723 * pkin(1);
t2178 = t1731 * pkin(5) - t1723 * t1965 + (pkin(1) * t1731 - t1776) * t1921 + (-0.2e1 * t2127 - t1775) * t1922;
t1893 = qJ(1,3) + pkin(7);
t1842 = t1924 + t1893;
t1843 = -t1924 + t1893;
t1788 = -sin(t1842) - sin(t1843);
t1791 = cos(t1843) - cos(t1842);
t1869 = cos(t1893);
t1751 = t1788 * t1946 + t1791 * t1945 + t1869 * t2142;
t1936 = cos(qJ(3,3));
t1879 = t1936 * pkin(3);
t1856 = t1879 + pkin(2);
t1822 = t1872 + t1856;
t1810 = 0.1e1 / t1822;
t1930 = sin(qJ(3,3));
t1780 = t1856 * t1922 + t1838;
t2083 = t1921 * t1856;
t1784 = t1850 + t2083;
t1914 = 0.1e1 / t1930;
t2094 = t1810 * t1914;
t2020 = t1968 * t2094;
t2080 = t1930 * t1848;
t1958 = 0.2e1 * qJ(3,3);
t1898 = sin(t1958);
t2137 = pkin(3) * t1898;
t1733 = t1944 * (t1780 * t1931 + t1784 * t1937) * t1968 / (t2137 / 0.2e1 + t2080) + (t1873 * t1945 - t1876 * t1946) * (t1780 * t1937 - t1784 * t1931) * t2020;
t2125 = t1733 * pkin(3);
t2048 = t1930 * t2125;
t1725 = t1751 * t1810 * t1990 - t2048;
t1811 = 0.1e1 / t1822 ^ 2;
t2093 = t1810 * t1927;
t2111 = t1751 / 0.2e1;
t1722 = -t1869 * t2093 + (t1788 * t1929 + t1791 * t1928) * t1810 / 0.2e1 + (-t1725 + t2048) * t1811 * t2111;
t1730 = t1733 ^ 2;
t2128 = t1722 * pkin(1);
t2177 = t1730 * pkin(5) - t1722 * t1965 + (pkin(1) * t1730 - t1774) * t1921 + (-0.2e1 * t2128 - t1773) * t1922;
t2176 = 0.4e1 * pkin(2);
t2119 = 0.2e1 * pkin(3);
t2141 = 0.2e1 * t1947;
t2175 = MDP(1) / 0.2e1;
t2174 = MDP(2) / 0.2e1;
t2173 = MDP(3) / 0.2e1;
t2172 = MDP(5) / 0.2e1;
t2171 = MDP(6) / 0.2e1;
t2170 = MDP(7) / 0.2e1;
t2169 = MDP(8) / 0.2e1;
t2168 = MDP(10) / 0.2e1;
t2167 = MDP(11) / 0.2e1;
t2166 = MDP(4) * pkin(1) / 0.2e1;
t1755 = (t1856 * t1937 - t2078) * t1922 + t1807 - t1856 * t2079;
t2165 = t1755 * t1810;
t1757 = (t1858 * t1939 - t2075) * t1922 + t1808 - t1858 * t2076;
t2164 = t1757 * t1813;
t1759 = (t1860 * t1941 - t2072) * t1922 + t1809 - t1860 * t2073;
t2163 = t1759 * t1816;
t2162 = t1811 * t1936;
t2161 = t1814 * t1938;
t2160 = t1817 * t1940;
t1969 = pkin(2) ^ 2;
t1970 = pkin(1) ^ 2;
t2066 = 0.2e1 * t1969 + t1970;
t1955 = 0.2e1 * pkin(7);
t1886 = cos(t1955);
t1864 = t1970 * t1886;
t1967 = pkin(3) ^ 2;
t2153 = -t1864 - t1967 / 0.2e1;
t2152 = 0.2e1 * pkin(1);
t2150 = -0.4e1 * pkin(3);
t1745 = t1810 * t2111;
t1979 = 0.2e1 * t1733;
t1728 = t1745 - t1979;
t1729 = t1745 + t1979;
t1841 = -t1947 + t2122;
t2052 = pkin(1) * t1850;
t1885 = sin(t1955);
t2068 = t1970 * t1885;
t2012 = -0.2e1 * t2052 + t2068;
t1772 = t1841 * t1965 + t2012;
t2059 = pkin(2) * t1872;
t1800 = 0.4e1 * t2059 + t1864 + t2066;
t1887 = pkin(7) + qJ(3,3);
t1852 = 0.2e1 * t1887;
t1888 = -pkin(7) + qJ(3,3);
t1853 = 0.2e1 * t1888;
t1855 = t1879 + t1965;
t1865 = sin(t1887);
t1866 = sin(t1888);
t1957 = 0.3e1 * qJ(3,3);
t1889 = t1957 + pkin(7);
t1890 = t1957 - pkin(7);
t1891 = t1958 + pkin(7);
t1892 = t1958 - pkin(7);
t1956 = 0.4e1 * qJ(3,3);
t1896 = sin(t1956);
t1897 = sin(t1957);
t1906 = cos(t1957);
t1907 = cos(t1958);
t1953 = 0.2e1 * t1970;
t1966 = pkin(3) * t1967;
t1920 = t1947 ^ 2;
t1949 = 0.3e1 * t1969;
t2053 = pkin(1) * t1851;
t2067 = t1920 + t1970;
t1978 = -0.8e1 * (0.3e1 / 0.4e1 * t1967 + t1949 + t2067) * t1872 - 0.8e1 * (-t2053 + 0.3e1 / 0.8e1 * t1967 + t1970 + t1969 / 0.2e1 + t1920 / 0.2e1) * t1965 + 0.8e1 * (-pkin(2) * t1886 + t1885 * t1947) * t1970;
t1997 = t2153 - t2066;
t1998 = -0.2e1 * t1864 - 0.4e1 * t1969 - 0.2e1 * t1970 - t1967;
t2016 = pkin(3) * (t1906 - t1936);
t2017 = cos(t1891) + cos(t1892) - 0.2e1 * t1922;
t2056 = 0.2e1 * t2068;
t2057 = -0.6e1 * t1848 * t1967;
t2058 = -0.2e1 * t1841 * t1967;
t1839 = -0.2e1 * t2053;
t2061 = (0.6e1 * t2059 + t1839 + t1953 + t1949 + t1920 - t2153) * t2150;
t2071 = t1967 * cos(t1956);
t2108 = (t1869 * t2141 + sin(t1893) * t1965 + t1931 * t2152 + (sin(qJ(1,3) - t1888) + sin(qJ(1,3) + t1887)) * pkin(3)) / (t1930 * t1965 + t2137 + (t1865 + t1866) * pkin(1));
t1694 = -(t1725 * t2176 + ((-t1733 + t1745) * sin(t1853) - (t1733 + t1745) * sin(t1852)) * t1970 + (-0.2e1 * (t1967 + t2066) * t1898 + pkin(2) * t1897 * t2150 - t1967 * t1896) * t1733 + (t2056 + (t1907 * t2176 + 0.2e1 * t2016) * t1947) * t1745 + (((-sin(t1889) - t1866) * t1729 + (sin(t1890) + t1865) * t1728) * pkin(3) + (sin(t1892) * t1728 - sin(t1891) * t1729) * t1965 + t2017 * t1745 * t2141) * pkin(1)) / ((t1953 + 0.4e1 * t1969) * t1907 + t2071 + (cos(t1853) + cos(t1852)) * t1970 + t2016 * t2176 + (t2017 * t2176 + (cos(t1890) + cos(t1889) - cos(t1888) - cos(t1887)) * t2119) * pkin(1) + t1998) * t1733 + (t1873 * t1928 - t1876 * t1929) * t1755 * t2020 + (t1927 * t2108 - ((t1906 * t2058 + (-t1772 * t1907 + t1841 * t1855 + t2012) * t2119) * t1733 + (-t1896 * t1966 + t1897 * t2057 + t1898 * t2061 + t1930 * t1978) * t1745) / (t1800 * t1907 + t2071 / 0.2e1 - 0.2e1 * t1855 * t1872 + (-pkin(2) * t1936 + t1848 * t1906) * t2119 + t1997) * t1745 / 0.2e1) * t1968;
t2011 = t1733 * t1745;
t2138 = t1921 / 0.2e1;
t2140 = pkin(5) / 0.2e1;
t2149 = -0.2e1 * pkin(2) * t2011 - 0.2e1 * t1694 * t2140 - 0.2e1 * (t1694 * t2138 + t1922 * t2011) * pkin(1);
t1859 = t1881 + t1965;
t1962 = 0.4e1 * qJ(3,1);
t1902 = sin(t1962);
t1963 = 0.3e1 * qJ(3,1);
t1903 = sin(t1963);
t1912 = cos(t1963);
t1981 = pkin(3) * (-pkin(2) * t1940 + t1848 * t1912);
t1986 = -0.4e1 * t2052 + t2056;
t2025 = t1759 * t2088;
t2032 = t1816 * t2110;
t2045 = t1841 * t2119;
t2054 = t1859 * t1872;
t2069 = t1967 * cos(t1962);
t1913 = cos(t1964);
t2096 = t1800 * t1913;
t2104 = t1772 * t1913;
t2063 = pkin(7) + qJ(3,1);
t2065 = -pkin(7) + qJ(3,1);
t2106 = (t1871 * t2141 + sin(t1895) * t1965 + t1935 * t2152 + (sin(qJ(1,1) - t2065) + sin(qJ(1,1) + t2063)) * pkin(3)) / (t1934 * t1965 + t2135 + (sin(t2063) + sin(t2065)) * pkin(1));
t2118 = 0.4e1 * pkin(3);
t2146 = -0.2e1 * t1967 - 0.2e1 * t1800;
t1700 = -(t1726 * t2176 + (t1904 * t2146 - t1967 * t1902 + (-t1848 * t1903 - t1872 * t1934) * t2118) * t1735 + (-0.2e1 * t2104 + (-t1912 + t1940) * t2045 + t1986) * t2032) / (0.4e1 * t1981 + t1998 - 0.4e1 * t2054 + t2069 + 0.2e1 * t2096) * t1735 + (t1927 * t2106 - ((t1912 * t2058 + (t1841 * t1859 + t2012 - t2104) * t2119) * t1735 + (-t1902 * t1966 + t1903 * t2057 + t1904 * t2061 + t1934 * t1978) * t2032) / (t2096 + t2069 / 0.2e1 - 0.2e1 * t2054 + 0.2e1 * t1981 + t1997) * t2032 / 0.2e1 + (t1875 * t1928 - t1878 * t1929) * t2025) * t1968;
t2009 = t1735 * t2032;
t2148 = -0.2e1 * pkin(2) * t2009 - 0.2e1 * t1700 * t2140 - 0.2e1 * (t1700 * t2138 + t1922 * t2009) * pkin(1);
t1857 = t1880 + t1965;
t1959 = 0.4e1 * qJ(3,2);
t1899 = sin(t1959);
t1960 = 0.3e1 * qJ(3,2);
t1900 = sin(t1960);
t1909 = cos(t1960);
t1982 = pkin(3) * (-pkin(2) * t1938 + t1848 * t1909);
t2027 = t1757 * t2091;
t2031 = t1813 * t2109;
t2055 = t1857 * t1872;
t2070 = t1967 * cos(t1959);
t1910 = cos(t1961);
t2097 = t1800 * t1910;
t2105 = t1772 * t1910;
t2062 = pkin(7) + qJ(3,2);
t2064 = -pkin(7) + qJ(3,2);
t2107 = (t1870 * t2141 + sin(t1894) * t1965 + t1933 * t2152 + (sin(qJ(1,2) - t2064) + sin(qJ(1,2) + t2062)) * pkin(3)) / (t1932 * t1965 + t2136 + (sin(t2062) + sin(t2064)) * pkin(1));
t1699 = -(t1727 * t2176 + (t1901 * t2146 - t1967 * t1899 + (-t1848 * t1900 - t1872 * t1932) * t2118) * t1734 + (-0.2e1 * t2105 + (-t1909 + t1938) * t2045 + t1986) * t2031) / (0.4e1 * t1982 + t1998 - 0.4e1 * t2055 + t2070 + 0.2e1 * t2097) * t1734 + (t1927 * t2107 - ((t1909 * t2058 + (t1841 * t1857 + t2012 - t2105) * t2119) * t1734 + (-t1899 * t1966 + t1900 * t2057 + t1901 * t2061 + t1932 * t1978) * t2031) / (t2097 + t2070 / 0.2e1 - 0.2e1 * t2055 + 0.2e1 * t1982 + t1997) * t2031 / 0.2e1 + (t1874 * t1928 - t1877 * t1929) * t2027) * t1968;
t2010 = t1734 * t2031;
t2147 = -0.2e1 * pkin(2) * t2010 - 0.2e1 * t1699 * t2140 - 0.2e1 * (t1699 * t2138 + t1922 * t2010) * pkin(1);
t2145 = 0.2e1 * t1936;
t2144 = 0.2e1 * t1938;
t2143 = 0.2e1 * t1940;
t2134 = pkin(3) * t1930;
t2133 = pkin(3) * t1932;
t2132 = pkin(3) * t1934;
t2121 = MDP(5) / 0.4e1;
t2117 = t1722 * t1930;
t2116 = t1723 * t1932;
t2115 = t1724 * t1934;
t1748 = t1751 ^ 2;
t2114 = t1748 * t1811;
t1749 = t1752 ^ 2;
t2113 = t1749 * t1817;
t1750 = t1753 ^ 2;
t2112 = t1750 * t1814;
t2103 = t1788 * t1810;
t2102 = t1789 * t1813;
t2101 = t1790 * t1816;
t2100 = t1791 * t1810;
t2099 = t1792 * t1813;
t2098 = t1793 * t1816;
t2095 = t1810 * t1869;
t2092 = t1813 * t1870;
t2089 = t1816 * t1871;
t2086 = t1914 * t1936;
t2085 = t1915 * t1938;
t2084 = t1916 * t1940;
t2060 = t1848 * t2119;
t1917 = t1936 ^ 2;
t2051 = pkin(3) * (-t1922 * t1937 + t2079) * t1917;
t1918 = t1938 ^ 2;
t2050 = pkin(3) * (-t1922 * t1939 + t2076) * t1918;
t1919 = t1940 ^ 2;
t2049 = pkin(3) * (-t1922 * t1941 + t2073) * t1919;
t2044 = t1722 * t2165;
t2043 = t1723 * t2164;
t2042 = t1724 * t2163;
t1739 = t1873 * t2051 + (-t1873 * t2182 + t1876 * t2134) * t1936 + t1876 * t2080;
t2041 = t1739 * t2094;
t1740 = t1874 * t2050 + (-t1874 * t2181 + t1877 * t2133) * t1938 + t1877 * t2077;
t2040 = t1740 * t2091;
t1741 = t1875 * t2049 + (-t1875 * t2180 + t1878 * t2132) * t1940 + t1878 * t2074;
t2039 = t1741 * t2088;
t1742 = -t1876 * t2051 + (t1873 * t2134 + t1876 * t2182) * t1936 + t1873 * t2080;
t2038 = t1742 * t2094;
t1743 = -t1877 * t2050 + (t1874 * t2133 + t1877 * t2181) * t1938 + t1874 * t2077;
t2037 = t1743 * t2091;
t1744 = -t1878 * t2049 + (t1875 * t2132 + t1878 * t2180) * t1940 + t1875 * t2074;
t2036 = t1744 * t2088;
t2035 = t2114 / 0.4e1;
t2034 = t2113 / 0.4e1;
t2033 = t2112 / 0.4e1;
t1754 = (t1856 * t1931 + t1937 * t1947) * t1922 + t1838 * t1931 + t1937 * t2083;
t2030 = t1754 * t2086;
t2029 = t1755 * t2094;
t1756 = (t1858 * t1933 + t1939 * t1947) * t1922 + t1838 * t1933 + t1939 * t2082;
t2028 = t1756 * t2085;
t1758 = (t1860 * t1935 + t1941 * t1947) * t1922 + t1838 * t1935 + t1941 * t2081;
t2026 = t1758 * t2084;
t2024 = t1936 * t2108;
t2023 = t1938 * t2107;
t2022 = t1940 * t2106;
t2021 = t1810 * t2086;
t2019 = t1813 * t2085;
t2018 = t1816 * t2084;
t2008 = t1748 * t2162 * t2165;
t2007 = t1749 * t2160 * t2163;
t2006 = t1750 * t2161 * t2164;
t2005 = t1873 * t2029;
t2004 = t1876 * t2029;
t2003 = t1874 * t2027;
t2002 = t1877 * t2027;
t2001 = t1875 * t2025;
t2000 = t1878 * t2025;
t1989 = t1722 * t1755 * t2021;
t1988 = t1723 * t1757 * t2019;
t1987 = t1724 * t1759 * t2018;
t1779 = t1839 + t1969 + 0.2e1 * t2059 + t2067;
t1738 = (-0.2e1 * t1919 + 0.1e1) * t2034;
t1737 = (-0.2e1 * t1918 + 0.1e1) * t2033;
t1736 = (-0.2e1 * t1917 + 0.1e1) * t2035;
t1721 = t2126 + t1777;
t1720 = t2127 + t1775;
t1719 = t2128 + t1773;
t1718 = (t2009 * t2143 + t2115) * t1934;
t1717 = (t2010 * t2144 + t2116) * t1932;
t1716 = (t2011 * t2145 + t2117) * t1930;
t1715 = t2115 * t2143 + (0.4e1 * t1919 - 0.2e1) * t2009;
t1714 = t2116 * t2144 + (0.4e1 * t1918 - 0.2e1) * t2010;
t1713 = t2117 * t2145 + (0.4e1 * t1917 - 0.2e1) * t2011;
t1712 = -t1875 * g(1) - t1878 * g(2) + (-t1940 * t1758 * t2087 + (-t1841 * t2046 + (t1919 * t1967 + t1940 * t2060 + t1779) * t2032) * t2110 * t2160) * t1916 + (t1744 * t1929 + t1741 * t1928 - ((t1841 * t1934 * t2032 - t2123) * t1940 - t1735 * t1848) * t2123) * t2088;
t1711 = -t1874 * g(1) - t1877 * g(2) + (-t1938 * t1756 * t2090 + (-t1841 * t2047 + (t1918 * t1967 + t1938 * t2060 + t1779) * t2031) * t2109 * t2161) * t1915 + (t1743 * t1929 + t1740 * t1928 - ((t1841 * t1932 * t2031 - t2124) * t1938 - t1734 * t1848) * t2124) * t2091;
t1710 = -t1873 * g(1) - t1876 * g(2) + (-t1936 * t1754 * t2093 + (-t1841 * t2048 + (t1917 * t1967 + t1936 * t2060 + t1779) * t1745) * t2111 * t2162) * t1914 + (t1742 * t1929 + t1739 * t1928 - ((t1745 * t1841 * t1930 - t2125) * t1936 - t1733 * t1848) * t2125) * t2094;
t1709 = (pkin(1) * t2033 + t1776) * t1922 - t1720 * t1921 + pkin(2) * t2033 - t1723 * pkin(5);
t1708 = (pkin(1) * t2034 + t1778) * t1922 - t1721 * t1921 + pkin(2) * t2034 - t1724 * pkin(5);
t1707 = (pkin(1) * t2035 + t1774) * t1922 - t1719 * t1921 + pkin(2) * t2035 - t1722 * pkin(5);
t1706 = t1709 * t1938 - t1711 * t1932;
t1705 = t1709 * t1932 + t1711 * t1938;
t1704 = t1708 * t1940 - t1712 * t1934;
t1703 = t1708 * t1934 + t1712 * t1940;
t1702 = t1707 * t1936 - t1710 * t1930;
t1701 = t1707 * t1930 + t1710 * t1936;
t1698 = t1700 * t1940 - t1732 * t1934;
t1697 = t1700 * t1934 + t1732 * t1940;
t1696 = t1699 * t1938 - t1731 * t1932;
t1695 = t1699 * t1932 + t1731 * t1938;
t1693 = t1694 * t1936 - t1730 * t1930;
t1692 = t1694 * t1930 + t1730 * t1936;
t1689 = t1934 * t2179 + t1940 * t2148;
t1688 = t1934 * t2148 - t1940 * t2179;
t1687 = t1932 * t2178 + t1938 * t2147;
t1686 = t1932 * t2147 - t1938 * t2178;
t1684 = t1930 * t2177 + t1936 * t2149;
t1683 = t1930 * t2149 - t1936 * t2177;
t1 = [(t1710 * t2038 + t1711 * t2037 + t1712 * t2036) * MDP(4) + (t1693 * t2038 + t1696 * t2037 + t1698 * t2036) * MDP(10) + (-t1692 * t2038 - t1695 * t2037 - t1697 * t2036) * MDP(11) + (t1929 - g(1)) * MDP(12) + ((-t1736 * t2004 - t1737 * t2002 - t1738 * t2000) * MDP(6) + (-t1876 * t2044 - t1877 * t2043 - t1878 * t2042) * MDP(7) + (-t1876 * t1989 - t1877 * t1988 - t1878 * t1987) * MDP(8) + (-t1694 * t2004 - t1699 * t2002 - t1700 * t2000) * MDP(9) + (-t1701 * t2004 - t1703 * t2000 - t1705 * t2002) * MDP(10) + (-t1702 * t2004 - t1704 * t2000 - t1706 * t2002) * MDP(11) + (t1876 * t2008 + t1877 * t2006 + t1878 * t2007) * t2121) * t1968 + (t1722 * t2103 + t1723 * t2102 + t1724 * t2101) * t2175 + (t1773 * t2103 + t1775 * t2102 + t1777 * t2101) * t2174 + (t1774 * t2103 + t1776 * t2102 + t1778 * t2101) * t2173 + (t1716 * t2103 + t1717 * t2102 + t1718 * t2101) * t2172 + (t1713 * t2103 + t1714 * t2102 + t1715 * t2101) * t2171 + (t1692 * t2103 + t1695 * t2102 + t1697 * t2101) * t2170 + (t1693 * t2103 + t1696 * t2102 + t1698 * t2101) * t2169 + (t1683 * t2103 + t1686 * t2102 + t1688 * t2101) * t2168 + (t1684 * t2103 + t1687 * t2102 + t1689 * t2101) * t2167 + (t1719 * t2103 + t1720 * t2102 + t1721 * t2101) * t2166; (t1710 * t2041 + t1711 * t2040 + t1712 * t2039) * MDP(4) + (t1693 * t2041 + t1696 * t2040 + t1698 * t2039) * MDP(10) + (-t1692 * t2041 - t1695 * t2040 - t1697 * t2039) * MDP(11) + (t1928 - g(2)) * MDP(12) + ((t1736 * t2005 + t1737 * t2003 + t1738 * t2001) * MDP(6) + (t1873 * t2044 + t1874 * t2043 + t1875 * t2042) * MDP(7) + (t1873 * t1989 + t1874 * t1988 + t1875 * t1987) * MDP(8) + (t1694 * t2005 + t1699 * t2003 + t1700 * t2001) * MDP(9) + (t1701 * t2005 + t1703 * t2001 + t1705 * t2003) * MDP(10) + (t1702 * t2005 + t1704 * t2001 + t1706 * t2003) * MDP(11) + (-t1873 * t2008 - t1874 * t2006 - t1875 * t2007) * t2121) * t1968 + (t1722 * t2100 + t1723 * t2099 + t1724 * t2098) * t2175 + (t1773 * t2100 + t1775 * t2099 + t1777 * t2098) * t2174 + (t1774 * t2100 + t1776 * t2099 + t1778 * t2098) * t2173 + (t1716 * t2100 + t1717 * t2099 + t1718 * t2098) * t2172 + (t1713 * t2100 + t1714 * t2099 + t1715 * t2098) * t2171 + (t1692 * t2100 + t1695 * t2099 + t1697 * t2098) * t2170 + (t1693 * t2100 + t1696 * t2099 + t1698 * t2098) * t2169 + (t1683 * t2100 + t1686 * t2099 + t1688 * t2098) * t2168 + (t1684 * t2100 + t1687 * t2099 + t1689 * t2098) * t2167 + (t1719 * t2100 + t1720 * t2099 + t1721 * t2098) * t2166; (-t1722 * t2095 - t1723 * t2092 - t1724 * t2089) * MDP(1) + (-t1773 * t2095 - t1775 * t2092 - t1777 * t2089) * MDP(2) + (-t1774 * t2095 - t1776 * t2092 - t1778 * t2089) * MDP(3) + (-t1754 * t1710 * t2021 - t1756 * t1711 * t2019 - t1758 * t1712 * t2018 + (-t1719 * t2095 - t1720 * t2092 - t1721 * t2089) * pkin(1)) * MDP(4) + (-t1716 * t2095 - t1717 * t2092 - t1718 * t2089 + (-t1930 * t2024 * t2114 - t1932 * t2023 * t2112 - t1934 * t2022 * t2113) * t1968 / 0.4e1) * MDP(5) + (-t1713 * t2095 - t1714 * t2092 - t1715 * t2089 + (t1736 * t2108 + t1737 * t2107 + t1738 * t2106) * t1968) * MDP(6) + (-t1692 * t2095 - t1695 * t2092 - t1697 * t2089 + (t2106 * t2115 + t2107 * t2116 + t2108 * t2117) * t1968) * MDP(7) + (-t1693 * t2095 - t1696 * t2092 - t1698 * t2089 + (t1722 * t2024 + t1723 * t2023 + t1724 * t2022) * t1968) * MDP(8) + (t1694 * t2108 + t1699 * t2107 + t1700 * t2106) * t1968 * MDP(9) + ((-t1688 * t1871 - t1698 * t2026) * t1816 + (-t1686 * t1870 - t1696 * t2028) * t1813 + (-t1683 * t1869 - t1693 * t2030) * t1810 + (t1701 * t2108 + t1703 * t2106 + t1705 * t2107) * t1968) * MDP(10) + ((-t1689 * t1871 + t1697 * t2026) * t1816 + (-t1687 * t1870 + t1695 * t2028) * t1813 + (-t1684 * t1869 + t1692 * t2030) * t1810 + (t1702 * t2108 + t1704 * t2106 + t1706 * t2107) * t1968) * MDP(11) + (t1927 - g(3)) * MDP(12);];
tauX  = t1;
