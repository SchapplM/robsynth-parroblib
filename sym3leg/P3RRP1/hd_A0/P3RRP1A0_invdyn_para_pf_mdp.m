% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRP1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [4x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,d1,d2]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [13x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRP1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-03 15:31
% Revision: abbb0d669c4fc7889a31e0cf750ab51a4f2eb1ce (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRP1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(4,1),zeros(13,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [4 1]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: pkin has to be [4x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [13 1]), ...
  'P3RRP1A0_invdyn_para_pf_mdp: MDP has to be [13x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-03 15:18:54
% EndTime: 2019-05-03 15:24:55
% DurationCPUTime: 376.67s
% Computational Cost: add. (6468285->1545), mult. (15554197->2285), div. (40752->12), fcn. (3470793->26), ass. (0->959)
t4264 = koppelP(1,2);
t4205 = (qJ(3,1) * t4264);
t4267 = koppelP(1,1);
t4215 = (pkin(2) * t4267);
t4106 = -t4205 + t4215;
t4206 = (qJ(3,1) * t4267);
t4212 = (pkin(2) * t4264);
t4109 = t4206 + t4212;
t4257 = xP(3);
t4196 = sin(t4257);
t4197 = cos(t4257);
t3978 = t4106 * t4197 - t4109 * t4196;
t4254 = xDP(2);
t4190 = t4254 * pkin(2);
t4253 = xDP(3);
t4255 = xDP(1);
t4611 = qJ(3,1) * t4255;
t3915 = t3978 * t4253 + t4190 + t4611;
t3979 = t4106 * t4196 + t4109 * t4197;
t4174 = t4254 * qJ(3,1);
t4194 = pkin(2) * t4255;
t3916 = t3979 * t4253 + t4174 - t4194;
t4237 = legFrame(1,3);
t4177 = sin(t4237);
t4180 = cos(t4237);
t3855 = t3915 * t4180 + t3916 * t4177;
t3856 = -t3915 * t4177 + t3916 * t4180;
t4032 = t4196 * t4267 + t4197 * t4264;
t3986 = t4032 * t4253 - t4255;
t4035 = -t4196 * t4264 + t4197 * t4267;
t3989 = t4035 * t4253 + t4254;
t3893 = -t3986 * t4180 + t3989 * t4177;
t3896 = t3986 * t4177 + t3989 * t4180;
t4147 = -t4194 / 0.2e1;
t4159 = pkin(2) * t4174;
t4228 = qJ(1,1) + qJ(2,1);
t4168 = sin(t4228);
t4171 = cos(t4228);
t4270 = pkin(1) ^ 2;
t4195 = t4270 * t4254;
t4252 = cos(qJ(1,1));
t4224 = t4252 ^ 2;
t4246 = sin(qJ(1,1));
t4107 = -2 * t4205 + t4215;
t4108 = 2 * t4206 + t4212;
t4314 = t4107 * t4197 - t4108 * t4196;
t4436 = pkin(2) * t4611;
t4261 = qJ(3,1) ^ 2;
t4485 = t4261 * t4255;
t4491 = t4254 * t4261;
t4494 = t4246 * t4252;
t4502 = t4196 * t4107;
t4514 = t4177 * t4255;
t4535 = t4108 * t4197;
t4562 = t3855 * t4246;
t4612 = qJ(3,1) * t4246;
t4645 = pkin(1) * t4168;
t4162 = t4171 ^ 2;
t4648 = pkin(1) * t4162;
t4670 = 0.2e1 * t4177;
t4690 = -0.2e1 * qJ(3,1);
t4435 = pkin(2) * t4205;
t4154 = 0.2e1 * t4435;
t4204 = t4261 * t4267;
t4479 = t4267 * t4270;
t4052 = t4154 + 0.2e1 * t4204 + t4479;
t4188 = 0.2e1 * t4261 + t4270;
t4434 = pkin(2) * t4206;
t4053 = t4188 * t4264 - 0.2e1 * t4434;
t4694 = t4180 * (t4052 * t4197 - t4053 * t4196) + t4177 * (t4052 * t4196 + t4053 * t4197);
t3779 = (t3855 * t4252 - t3856 * t4246) * t4648 + ((t3856 * t4252 + t4562) * t4645 + (t4195 - 0.2e1 * t4436 + 0.2e1 * t4491) * t4180 + (-t4159 - t4485) * t4670 + (t3893 * t4494 - t3896 * t4224 - t4514) * t4270 + t4694 * t4253) * t4171 + (t3855 * t4690 + (-t3893 * t4224 - t3896 * t4494) * t4270) * t4168 - pkin(1) * (((t4253 * t4314 + t4190 + 0.2e1 * t4611) * t4180 + (t4174 + t4147 + (t4535 / 0.2e1 + t4502 / 0.2e1) * t4253) * t4670) * t4252 + t3896 * t4612);
t4269 = pkin(2) ^ 2;
t4185 = -t4261 + t4269;
t4165 = 0.1e1 + t4185;
t4411 = qJ(3,1) * t4494;
t4365 = pkin(2) * t4411;
t4295 = t4165 * t4224 - 0.2e1 * t4365;
t4379 = t4270 * t4494;
t4350 = pkin(2) * t4379;
t4596 = t4252 * qJ(3,1);
t4412 = t4168 * t4596;
t4529 = t4162 * t4270;
t4420 = 0.2e1 * t4529;
t4477 = -0.1e1 / 0.2e1 - t4269 / 0.2e1;
t4230 = 0.2e1 + t4270;
t4486 = t4261 * t4230;
t4497 = t4224 * t4270;
t4689 = 0.2e1 * qJ(3,1);
t4692 = -0.2e1 * pkin(1);
t4284 = -t4165 * t4497 + (t4261 / 0.2e1 + t4295 + t4477) * t4420 + t4412 * t4692 + t4350 * t4689 - t4486;
t4445 = t4224 - 0.1e1 / 0.2e1;
t4366 = t4445 * qJ(3,1);
t4380 = t4165 * t4494;
t4642 = pkin(1) * t4171;
t4439 = 0.4e1 * t4642;
t3839 = ((t4380 / 0.2e1 + pkin(2) * t4366) * t4645 + t4612 / 0.2e1) * t4439 + t4284;
t3832 = 0.1e1 / t3839;
t3770 = t3779 * t3832;
t4478 = t4269 * t4255;
t4146 = -t4478 / 0.2e1;
t4449 = t4485 / 0.2e1 + t4159;
t4155 = -0.2e1 * t4435;
t4480 = t4267 * t4269;
t4356 = -t4204 + t4480;
t4058 = t4155 + t4356;
t4505 = t4196 * t4058;
t4156 = 0.2e1 * t4434;
t4209 = t4269 * t4264;
t4059 = -t4261 * t4264 + t4156 + t4209;
t4547 = t4059 * t4197;
t3887 = t4146 + (t4547 / 0.2e1 + t4505 / 0.2e1) * t4253 + t4449;
t3943 = t4058 * t4197 - t4059 * t4196;
t4189 = t4254 * t4269;
t4359 = 0.2e1 * t4436 - t4491;
t3890 = t3943 * t4253 + t4189 + t4359;
t4657 = -t4177 / 0.2e1;
t3824 = t3887 * t4180 + t3890 * t4657;
t3827 = t3887 * t4670 + t3890 * t4180;
t4105 = t4205 + t4215;
t4110 = -t4206 + t4212;
t3977 = t4105 * t4197 - t4110 * t4196;
t3914 = t3977 * t4253 + t4190 - t4611;
t3980 = t4105 * t4196 + t4110 * t4197;
t3917 = -t3980 * t4253 + t4174 + t4194;
t3854 = t3914 * t4180 - t3917 * t4177;
t3857 = t3914 * t4177 + t3917 * t4180;
t4193 = pkin(2) * t4252;
t4083 = -t4193 + t4612;
t4091 = pkin(2) * t4479 - t4205;
t4624 = pkin(2) * t4270;
t4092 = t4264 * t4624 + t4206;
t4231 = 0.1e1 + t4270;
t4520 = t4168 * t4231;
t4413 = qJ(3,1) * t4520;
t4500 = t4197 * t4253;
t4501 = t4196 * t4253;
t4521 = t4168 * t4171;
t4654 = t4246 / 0.2e1;
t4664 = -0.2e1 * t4246;
t3761 = ((-t4091 * t4500 + t4092 * t4501 - t4611) * t4180 - t4177 * (t4091 * t4501 + t4092 * t4500 + t4174)) * t4171 - t3896 * t4413 + ((pkin(2) * t4514 + t3854 * t4224 - t3857 * t4494 - t4180 * t4190) * t4171 + (t3854 * t4494 + t3857 * t4224) * t4168) * t4270 + (-(t3824 * t4664 + t3827 * t4252) * t4162 - 0.2e1 * (t3824 * t4252 + t3827 * t4654) * t4521 - t4083 * t3855) * pkin(1);
t4715 = -t4269 - 0.1e1;
t4117 = t4255 * t4715 / 0.2e1;
t4029 = -t4267 * t4715 + t4155 - t4204;
t4508 = t4196 * t4029;
t4028 = t4156 + (-t4715 - t4261) * t4264;
t4553 = t4028 * t4197;
t3869 = t4117 + (t4553 / 0.2e1 + t4508 / 0.2e1) * t4253 + t4449;
t4509 = t4196 * t4028;
t3923 = t4029 * t4197 - t4509;
t4127 = t4254 * t4715;
t3884 = t3923 * t4253 - t4127 + t4359;
t3818 = t3869 * t4180 + t3884 * t4657;
t3821 = t3869 * t4670 + t3884 * t4180;
t4362 = -t4255 - t4478;
t4448 = t4189 + t4254;
t4615 = qJ(3,1) * t4168;
t4073 = t4267 - t4435 + t4480;
t4074 = t4209 + t4264 + t4434;
t4695 = t4180 * (t4073 * t4197 - t4074 * t4196) + (t4073 * t4196 + t4074 * t4197) * t4177;
t3788 = (t3818 * t4664 + t3821 * t4252) * t4648 + (0.2e1 * (t3818 * t4252 + t3821 * t4654) * t4645 - qJ(3,1) * t3893) * t4171 - t3896 * t4615 - (((t4436 + t4448) * t4180 + t4177 * (t4159 + t4362) + t4695 * t4253) * t4252 - qJ(3,1) * t4562) * pkin(1);
t4717 = t3761 + t3788;
t3749 = t4717 * t3832;
t4620 = t3749 * pkin(2);
t3707 = t4620 - t3770;
t4722 = qJ(3,1) * t3707;
t4263 = koppelP(2,2);
t4202 = qJ(3,2) * t4263;
t4266 = koppelP(2,1);
t4214 = pkin(2) * t4266;
t4100 = -t4202 + t4214;
t4203 = qJ(3,2) * t4266;
t4211 = pkin(2) * t4263;
t4103 = t4203 + t4211;
t3974 = t4100 * t4197 - t4103 * t4196;
t4605 = qJ(3,2) * t4255;
t3911 = t3974 * t4253 + t4190 + t4605;
t3975 = t4100 * t4196 + t4103 * t4197;
t4173 = t4254 * qJ(3,2);
t3912 = t3975 * t4253 + t4173 - t4194;
t4236 = legFrame(2,3);
t4176 = sin(t4236);
t4179 = cos(t4236);
t3851 = t3911 * t4179 + t3912 * t4176;
t3852 = -t3911 * t4176 + t3912 * t4179;
t4031 = t4196 * t4266 + t4197 * t4263;
t3985 = t4031 * t4253 - t4255;
t4034 = -t4196 * t4263 + t4197 * t4266;
t3988 = t4034 * t4253 + t4254;
t3892 = -t3985 * t4179 + t3988 * t4176;
t3895 = t3985 * t4176 + t3988 * t4179;
t4158 = pkin(2) * t4173;
t4227 = qJ(1,2) + qJ(2,2);
t4167 = sin(t4227);
t4170 = cos(t4227);
t4250 = cos(qJ(1,2));
t4223 = t4250 ^ 2;
t4244 = sin(qJ(1,2));
t4101 = -0.2e1 * t4202 + t4214;
t4102 = 0.2e1 * t4203 + t4211;
t4315 = t4101 * t4197 - t4102 * t4196;
t4430 = pkin(2) * t4605;
t4260 = qJ(3,2) ^ 2;
t4487 = t4260 * t4255;
t4492 = t4254 * t4260;
t4495 = t4244 * t4250;
t4503 = t4196 * t4101;
t4515 = t4176 * t4255;
t4536 = t4102 * t4197;
t4563 = t3851 * t4244;
t4606 = qJ(3,2) * t4244;
t4646 = pkin(1) * t4167;
t4161 = t4170 ^ 2;
t4649 = pkin(1) * t4161;
t4671 = 0.2e1 * t4176;
t4688 = -0.2e1 * qJ(3,2);
t4428 = pkin(2) * t4202;
t4150 = 0.2e1 * t4428;
t4201 = t4260 * t4266;
t4481 = t4266 * t4270;
t4050 = t4150 + 0.2e1 * t4201 + t4481;
t4187 = 0.2e1 * t4260 + t4270;
t4426 = pkin(2) * t4203;
t4051 = t4187 * t4263 - 0.2e1 * t4426;
t4696 = t4179 * (t4050 * t4197 - t4051 * t4196) + t4176 * (t4050 * t4196 + t4051 * t4197);
t3778 = (t3851 * t4250 - t3852 * t4244) * t4649 + ((t3852 * t4250 + t4563) * t4646 + (t4195 - 0.2e1 * t4430 + 0.2e1 * t4492) * t4179 + (-t4158 - t4487) * t4671 + (t3892 * t4495 - t3895 * t4223 - t4515) * t4270 + t4696 * t4253) * t4170 + (t3851 * t4688 + (-t3892 * t4223 - t3895 * t4495) * t4270) * t4167 - pkin(1) * (((t4253 * t4315 + t4190 + 0.2e1 * t4605) * t4179 + (t4173 + t4147 + (t4536 / 0.2e1 + t4503 / 0.2e1) * t4253) * t4671) * t4250 + t3895 * t4606);
t4184 = -t4260 + t4269;
t4164 = 0.1e1 + t4184;
t4408 = qJ(3,2) * t4495;
t4364 = pkin(2) * t4408;
t4294 = t4164 * t4223 - 0.2e1 * t4364;
t4382 = t4270 * t4495;
t4351 = pkin(2) * t4382;
t4597 = t4250 * qJ(3,2);
t4409 = t4167 * t4597;
t4530 = t4161 * t4270;
t4421 = 0.2e1 * t4530;
t4488 = t4260 * t4230;
t4498 = t4223 * t4270;
t4687 = 0.2e1 * qJ(3,2);
t4285 = -t4164 * t4498 + (t4260 / 0.2e1 + t4294 + t4477) * t4421 + t4409 * t4692 + t4351 * t4687 - t4488;
t4446 = t4223 - 0.1e1 / 0.2e1;
t4367 = t4446 * qJ(3,2);
t4383 = t4164 * t4495;
t4643 = pkin(1) * t4170;
t4441 = 0.4e1 * t4643;
t3838 = ((t4383 / 0.2e1 + pkin(2) * t4367) * t4646 + t4606 / 0.2e1) * t4441 + t4285;
t3830 = 0.1e1 / t3838;
t3769 = t3778 * t3830;
t4450 = t4487 / 0.2e1 + t4158;
t4151 = -0.2e1 * t4428;
t4482 = t4266 * t4269;
t4357 = -t4201 + t4482;
t4056 = t4151 + t4357;
t4506 = t4196 * t4056;
t4153 = 0.2e1 * t4426;
t4208 = t4269 * t4263;
t4057 = -t4260 * t4263 + t4153 + t4208;
t4548 = t4057 * t4197;
t3886 = t4146 + (t4548 / 0.2e1 + t4506 / 0.2e1) * t4253 + t4450;
t3941 = t4056 * t4197 - t4057 * t4196;
t4361 = 0.2e1 * t4430 - t4492;
t3889 = t3941 * t4253 + t4189 + t4361;
t4658 = -t4176 / 0.2e1;
t3823 = t3886 * t4179 + t3889 * t4658;
t3826 = t3886 * t4671 + t3889 * t4179;
t4099 = t4202 + t4214;
t4104 = -t4203 + t4211;
t3973 = t4099 * t4197 - t4104 * t4196;
t3910 = t3973 * t4253 + t4190 - t4605;
t3976 = t4099 * t4196 + t4104 * t4197;
t3913 = -t3976 * t4253 + t4173 + t4194;
t3850 = t3910 * t4179 - t3913 * t4176;
t3853 = t3910 * t4176 + t3913 * t4179;
t4192 = pkin(2) * t4250;
t4082 = -t4192 + t4606;
t4089 = pkin(2) * t4481 - t4202;
t4090 = t4263 * t4624 + t4203;
t4522 = t4167 * t4231;
t4410 = qJ(3,2) * t4522;
t4523 = t4167 * t4170;
t4655 = t4244 / 0.2e1;
t4665 = -0.2e1 * t4244;
t3760 = ((-t4089 * t4500 + t4090 * t4501 - t4605) * t4179 - t4176 * (t4089 * t4501 + t4090 * t4500 + t4173)) * t4170 - t3895 * t4410 + ((pkin(2) * t4515 + t3850 * t4223 - t3853 * t4495 - t4179 * t4190) * t4170 + (t3850 * t4495 + t3853 * t4223) * t4167) * t4270 + (-(t3823 * t4665 + t3826 * t4250) * t4161 - 0.2e1 * (t3823 * t4250 + t3826 * t4655) * t4523 - t4082 * t3851) * pkin(1);
t4027 = -t4266 * t4715 + t4151 - t4201;
t4510 = t4196 * t4027;
t4026 = t4153 + (-t4715 - t4260) * t4263;
t4554 = t4026 * t4197;
t3868 = t4117 + (t4554 / 0.2e1 + t4510 / 0.2e1) * t4253 + t4450;
t4511 = t4196 * t4026;
t3921 = t4027 * t4197 - t4511;
t3883 = t3921 * t4253 - t4127 + t4361;
t3817 = t3868 * t4179 + t3883 * t4658;
t3820 = t3868 * t4671 + t3883 * t4179;
t4609 = qJ(3,2) * t4167;
t4071 = t4266 - t4428 + t4482;
t4072 = t4208 + t4263 + t4426;
t4697 = t4179 * (t4071 * t4197 - t4072 * t4196) + (t4071 * t4196 + t4072 * t4197) * t4176;
t3787 = (t3817 * t4665 + t3820 * t4250) * t4649 + (0.2e1 * (t3817 * t4250 + t3820 * t4655) * t4646 - qJ(3,2) * t3892) * t4170 - t3895 * t4609 - (((t4430 + t4448) * t4179 + t4176 * (t4158 + t4362) + t4697 * t4253) * t4250 - qJ(3,2) * t4563) * pkin(1);
t4718 = t3760 + t3787;
t3748 = t4718 * t3830;
t4621 = t3748 * pkin(2);
t3706 = t4621 - t3769;
t4721 = qJ(3,2) * t3706;
t4262 = koppelP(3,2);
t4199 = qJ(3,3) * t4262;
t4265 = koppelP(3,1);
t4213 = pkin(2) * t4265;
t4094 = -t4199 + t4213;
t4200 = qJ(3,3) * t4265;
t4210 = pkin(2) * t4262;
t4097 = t4200 + t4210;
t3970 = t4094 * t4197 - t4097 * t4196;
t4599 = qJ(3,3) * t4255;
t3907 = t3970 * t4253 + t4190 + t4599;
t3971 = t4094 * t4196 + t4097 * t4197;
t4172 = t4254 * qJ(3,3);
t3908 = t3971 * t4253 + t4172 - t4194;
t4235 = legFrame(3,3);
t4175 = sin(t4235);
t4178 = cos(t4235);
t3847 = t3907 * t4178 + t3908 * t4175;
t3848 = -t3907 * t4175 + t3908 * t4178;
t4030 = t4196 * t4265 + t4197 * t4262;
t3984 = t4030 * t4253 - t4255;
t4033 = -t4196 * t4262 + t4197 * t4265;
t3987 = t4033 * t4253 + t4254;
t3891 = -t3984 * t4178 + t3987 * t4175;
t3894 = t3984 * t4175 + t3987 * t4178;
t4157 = pkin(2) * t4172;
t4226 = qJ(1,3) + qJ(2,3);
t4166 = sin(t4226);
t4169 = cos(t4226);
t4248 = cos(qJ(1,3));
t4222 = t4248 ^ 2;
t4242 = sin(qJ(1,3));
t4095 = -0.2e1 * t4199 + t4213;
t4096 = 0.2e1 * t4200 + t4210;
t4316 = t4095 * t4197 - t4096 * t4196;
t4431 = pkin(2) * t4599;
t4259 = qJ(3,3) ^ 2;
t4489 = t4259 * t4255;
t4493 = t4254 * t4259;
t4496 = t4242 * t4248;
t4504 = t4196 * t4095;
t4516 = t4175 * t4255;
t4537 = t4096 * t4197;
t4564 = t3847 * t4242;
t4600 = qJ(3,3) * t4242;
t4647 = pkin(1) * t4166;
t4160 = t4169 ^ 2;
t4650 = pkin(1) * t4160;
t4672 = 0.2e1 * t4175;
t4686 = -0.2e1 * qJ(3,3);
t4429 = pkin(2) * t4199;
t4148 = 0.2e1 * t4429;
t4198 = t4259 * t4265;
t4483 = t4265 * t4270;
t4048 = t4148 + 0.2e1 * t4198 + t4483;
t4186 = 0.2e1 * t4259 + t4270;
t4427 = pkin(2) * t4200;
t4049 = t4186 * t4262 - 0.2e1 * t4427;
t4698 = t4178 * (t4048 * t4197 - t4049 * t4196) + t4175 * (t4048 * t4196 + t4049 * t4197);
t3777 = (t3847 * t4248 - t3848 * t4242) * t4650 + ((t3848 * t4248 + t4564) * t4647 + (t4195 - 0.2e1 * t4431 + 0.2e1 * t4493) * t4178 + (-t4157 - t4489) * t4672 + (t3891 * t4496 - t3894 * t4222 - t4516) * t4270 + t4698 * t4253) * t4169 + (t3847 * t4686 + (-t3891 * t4222 - t3894 * t4496) * t4270) * t4166 - pkin(1) * (((t4253 * t4316 + t4190 + 0.2e1 * t4599) * t4178 + (t4172 + t4147 + (t4537 / 0.2e1 + t4504 / 0.2e1) * t4253) * t4672) * t4248 + t3894 * t4600);
t4183 = -t4259 + t4269;
t4163 = 0.1e1 + t4183;
t4405 = qJ(3,3) * t4496;
t4363 = pkin(2) * t4405;
t4293 = t4163 * t4222 - 0.2e1 * t4363;
t4378 = t4270 * t4496;
t4352 = pkin(2) * t4378;
t4598 = t4248 * qJ(3,3);
t4406 = t4166 * t4598;
t4531 = t4160 * t4270;
t4422 = 0.2e1 * t4531;
t4490 = t4259 * t4230;
t4499 = t4222 * t4270;
t4685 = 0.2e1 * qJ(3,3);
t4286 = -t4163 * t4499 + (t4259 / 0.2e1 + t4293 + t4477) * t4422 + t4406 * t4692 + t4352 * t4685 - t4490;
t4447 = t4222 - 0.1e1 / 0.2e1;
t4368 = t4447 * qJ(3,3);
t4385 = t4163 * t4496;
t4644 = pkin(1) * t4169;
t4443 = 0.4e1 * t4644;
t3837 = ((t4385 / 0.2e1 + pkin(2) * t4368) * t4647 + t4600 / 0.2e1) * t4443 + t4286;
t3828 = 0.1e1 / t3837;
t3768 = t3777 * t3828;
t4451 = t4489 / 0.2e1 + t4157;
t4149 = -0.2e1 * t4429;
t4484 = t4265 * t4269;
t4358 = -t4198 + t4484;
t4054 = t4149 + t4358;
t4507 = t4196 * t4054;
t4152 = 0.2e1 * t4427;
t4207 = t4269 * t4262;
t4055 = -t4259 * t4262 + t4152 + t4207;
t4549 = t4055 * t4197;
t3885 = t4146 + (t4549 / 0.2e1 + t4507 / 0.2e1) * t4253 + t4451;
t3939 = t4054 * t4197 - t4055 * t4196;
t4360 = 0.2e1 * t4431 - t4493;
t3888 = t3939 * t4253 + t4189 + t4360;
t4659 = -t4175 / 0.2e1;
t3822 = t3885 * t4178 + t3888 * t4659;
t3825 = t3885 * t4672 + t3888 * t4178;
t4093 = t4199 + t4213;
t4098 = -t4200 + t4210;
t3969 = t4093 * t4197 - t4098 * t4196;
t3906 = t3969 * t4253 + t4190 - t4599;
t3972 = t4093 * t4196 + t4098 * t4197;
t3909 = -t3972 * t4253 + t4172 + t4194;
t3846 = t3906 * t4178 - t3909 * t4175;
t3849 = t3906 * t4175 + t3909 * t4178;
t4191 = pkin(2) * t4248;
t4081 = -t4191 + t4600;
t4087 = pkin(2) * t4483 - t4199;
t4088 = t4262 * t4624 + t4200;
t4524 = t4166 * t4231;
t4407 = qJ(3,3) * t4524;
t4525 = t4166 * t4169;
t4656 = t4242 / 0.2e1;
t4666 = -0.2e1 * t4242;
t3759 = ((-t4087 * t4500 + t4088 * t4501 - t4599) * t4178 - t4175 * (t4087 * t4501 + t4088 * t4500 + t4172)) * t4169 - t3894 * t4407 + ((pkin(2) * t4516 + t3846 * t4222 - t3849 * t4496 - t4178 * t4190) * t4169 + (t3846 * t4496 + t3849 * t4222) * t4166) * t4270 + (-(t3822 * t4666 + t3825 * t4248) * t4160 - 0.2e1 * (t3822 * t4248 + t3825 * t4656) * t4525 - t4081 * t3847) * pkin(1);
t4025 = -t4265 * t4715 + t4149 - t4198;
t4512 = t4196 * t4025;
t4024 = t4152 + (-t4715 - t4259) * t4262;
t4555 = t4024 * t4197;
t3867 = t4117 + (t4555 / 0.2e1 + t4512 / 0.2e1) * t4253 + t4451;
t4513 = t4196 * t4024;
t3919 = t4025 * t4197 - t4513;
t3882 = t3919 * t4253 - t4127 + t4360;
t3816 = t3867 * t4178 + t3882 * t4659;
t3819 = t3867 * t4672 + t3882 * t4178;
t4603 = qJ(3,3) * t4166;
t4069 = t4265 - t4429 + t4484;
t4070 = t4207 + t4262 + t4427;
t4699 = t4178 * (t4069 * t4197 - t4070 * t4196) + (t4069 * t4196 + t4070 * t4197) * t4175;
t3786 = (t3816 * t4666 + t3819 * t4248) * t4650 + (0.2e1 * (t3816 * t4248 + t3819 * t4656) * t4647 - qJ(3,3) * t3891) * t4169 - t3894 * t4603 - (((t4431 + t4448) * t4178 + t4175 * (t4157 + t4362) + t4699 * t4253) * t4248 - qJ(3,3) * t4564) * pkin(1);
t4719 = t3759 + t3786;
t3747 = t4719 * t3828;
t4622 = t3747 * pkin(2);
t3705 = t4622 - t3768;
t4720 = qJ(3,3) * t3705;
t4716 = 0.2e1 * pkin(1);
t4667 = 0.2e1 * t4224;
t4651 = t4667 - 0.1e1;
t4416 = qJ(3,1) * t4651;
t3995 = pkin(2) * t4416 + t4380;
t3959 = t3995 * t4645 + t4612;
t4440 = 0.2e1 * t4642;
t3842 = 0.1e1 / (t3959 * t4440 + t4284);
t3722 = t4261 * t3749;
t3729 = t3749 * t4269;
t4462 = t3722 + t3729;
t4631 = pkin(2) * t3779;
t3662 = (-t3788 - t4631) * t3832 + t4462;
t3665 = pkin(2) * t3722 - t3707 * t4715;
t4580 = t3788 * t3832;
t3782 = t4270 * t4580;
t4233 = t4269 / 0.2e1;
t4417 = t4233 - t4261 / 0.2e1;
t4123 = 0.1e1 / 0.2e1 + t4417;
t4476 = 0.1e1 / 0.4e1 + t4269 / 0.4e1;
t3983 = -t4123 * t4224 + t4365 - t4261 / 0.4e1 + t4476;
t4673 = 0.4e1 * t4162;
t3836 = 0.1e1 / (t4486 + (-t3959 * t4171 + t4412) * t4716 + (t3983 * t4673 + t4295) * t4270);
t4565 = t3832 * t3836;
t4387 = t3788 * t4565;
t4662 = pkin(2) * qJ(3,1);
t3641 = ((t3983 * t4580 * t4645 + t3662 * t4596 / 0.4e1 + t4246 * t3665 / 0.4e1) * t4439 + (t3662 * t4612 - t3665 * t4252) * t4645 - t4722 + (0.2e1 * t3995 * t4162 - t4651 * t4662 - t4380) * t3782) * t4387;
t3680 = -pkin(2) * t3770 + t4462;
t4390 = t3761 * t4565;
t4268 = pkin(2) * t4269;
t4700 = t3749 * (pkin(2) * (0.1e1 + t4261) + t4268) + t4715 * t3770;
t3647 = (-t4722 + ((t3680 * t4596 + t4246 * t4700) * t4171 + (t3680 * t4612 - t4252 * t4700) * t4168) * pkin(1)) * t4390;
t4393 = t3749 * t3770;
t3689 = (-qJ(3,1) + ((pkin(2) * t4596 - t4246 * t4715) * t4171 - (-pkin(2) * t4612 - t4252 * t4715) * t4168) * pkin(1)) * t3842 * t4393;
t4372 = -t3641 - t3647 - t3689;
t4614 = qJ(3,1) * t4180;
t4437 = pkin(2) * t4614;
t4116 = -0.2e1 * t4437;
t4000 = t4165 * t4177 + t4116;
t4126 = t4177 * qJ(3,1);
t4120 = pkin(2) * t4126;
t4113 = 0.2e1 * t4120;
t4526 = t4165 * t4180;
t3902 = (t4113 + t4526) * t4252 + t4246 * t4000;
t3992 = t4000 * t4252;
t4145 = t4177 * pkin(2);
t4047 = t4145 - t4614;
t4517 = t4171 * t4180;
t4676 = -0.2e1 * t4120;
t3815 = (t4168 * t4177 - t4517) * qJ(3,1) + (-t3992 * t4162 - t3902 * t4521 + (t4177 * t4269 + t4177 - t4437) * t4252 + (-(t4676 - t4526) * t4162 - qJ(3,1) * t4047) * t4246) * pkin(1);
t4225 = t4253 ^ 2;
t4238 = xDDP(3);
t4240 = xDDP(1);
t3938 = -t4032 * t4238 - t4035 * t4225 + t4240;
t4568 = t3815 * t3938;
t4402 = t4168 * t4614;
t4532 = t4126 * t4171;
t4628 = pkin(2) * t4180;
t4044 = t4126 + t4628;
t4550 = t4044 * t4246;
t3812 = -t4402 - t4532 + (t3902 * t4162 - (t3992 + (t4123 * t4180 + t4120) * t4664) * t4521 - (t4180 * t4269 + t4120 + t4180) * t4252 + qJ(3,1) * t4550) * pkin(1);
t4239 = xDDP(2);
t3935 = -t4032 * t4225 + t4035 * t4238 + t4239;
t4571 = t3812 * t3935;
t3620 = (t4568 + t4571) * t3842 + t4372;
t4245 = sin(qJ(2,1));
t4251 = cos(qJ(2,1));
t3785 = t3788 ^ 2;
t3833 = 0.1e1 / t3839 ^ 2;
t4584 = t3785 * t3833;
t4714 = pkin(1) * (-t3620 * t4245 + t4251 * t4584);
t4668 = 0.2e1 * t4223;
t4652 = t4668 - 0.1e1;
t4415 = qJ(3,2) * t4652;
t3994 = pkin(2) * t4415 + t4383;
t3958 = t3994 * t4646 + t4606;
t4442 = 0.2e1 * t4643;
t3841 = 0.1e1 / (t3958 * t4442 + t4285);
t3721 = t4260 * t3748;
t3726 = t3748 * t4269;
t4464 = t3721 + t3726;
t4632 = pkin(2) * t3778;
t3661 = (-t3787 - t4632) * t3830 + t4464;
t3664 = pkin(2) * t3721 - t3706 * t4715;
t4581 = t3787 * t3830;
t3781 = t4270 * t4581;
t4418 = t4233 - t4260 / 0.2e1;
t4122 = 0.1e1 / 0.2e1 + t4418;
t3982 = -t4122 * t4223 + t4364 - t4260 / 0.4e1 + t4476;
t4674 = 0.4e1 * t4161;
t3835 = 0.1e1 / (t4488 + (-t3958 * t4170 + t4409) * t4716 + (t3982 * t4674 + t4294) * t4270);
t4566 = t3830 * t3835;
t4388 = t3787 * t4566;
t4661 = pkin(2) * qJ(3,2);
t3640 = ((t3982 * t4581 * t4646 + t3661 * t4597 / 0.4e1 + t4244 * t3664 / 0.4e1) * t4441 + (t3661 * t4606 - t3664 * t4250) * t4646 - t4721 + (0.2e1 * t3994 * t4161 - t4652 * t4661 - t4383) * t3781) * t4388;
t3679 = -pkin(2) * t3769 + t4464;
t4391 = t3760 * t4566;
t4701 = t3748 * (pkin(2) * (0.1e1 + t4260) + t4268) + t4715 * t3769;
t3646 = (-t4721 + ((t3679 * t4597 + t4244 * t4701) * t4170 + (t3679 * t4606 - t4250 * t4701) * t4167) * pkin(1)) * t4391;
t4394 = t3748 * t3769;
t3688 = (-qJ(3,2) + ((pkin(2) * t4597 - t4244 * t4715) * t4170 - (-pkin(2) * t4606 - t4250 * t4715) * t4167) * pkin(1)) * t3841 * t4394;
t4373 = -t3640 - t3646 - t3688;
t4608 = qJ(3,2) * t4179;
t4433 = pkin(2) * t4608;
t4115 = -0.2e1 * t4433;
t3999 = t4164 * t4176 + t4115;
t4125 = t4176 * qJ(3,2);
t4119 = pkin(2) * t4125;
t4112 = 0.2e1 * t4119;
t4527 = t4164 * t4179;
t3901 = (t4112 + t4527) * t4250 + t4244 * t3999;
t3991 = t3999 * t4250;
t4143 = t4176 * pkin(2);
t4043 = t4143 - t4608;
t4518 = t4170 * t4179;
t4677 = -0.2e1 * t4119;
t3814 = (t4167 * t4176 - t4518) * qJ(3,2) + (-t3991 * t4161 - t3901 * t4523 + (t4176 * t4269 + t4176 - t4433) * t4250 + (-(t4677 - t4527) * t4161 - qJ(3,2) * t4043) * t4244) * pkin(1);
t3937 = -t4031 * t4238 - t4034 * t4225 + t4240;
t4569 = t3814 * t3937;
t4403 = t4167 * t4608;
t4533 = t4125 * t4170;
t4629 = pkin(2) * t4179;
t4040 = t4125 + t4629;
t4551 = t4040 * t4244;
t3811 = -t4403 - t4533 + (t3901 * t4161 - (t3991 + (t4122 * t4179 + t4119) * t4665) * t4523 - (t4179 * t4269 + t4119 + t4179) * t4250 + qJ(3,2) * t4551) * pkin(1);
t3934 = -t4031 * t4225 + t4034 * t4238 + t4239;
t4572 = t3811 * t3934;
t3619 = (t4569 + t4572) * t3841 + t4373;
t4243 = sin(qJ(2,2));
t4249 = cos(qJ(2,2));
t3784 = t3787 ^ 2;
t3831 = 0.1e1 / t3838 ^ 2;
t4586 = t3784 * t3831;
t4713 = pkin(1) * (-t3619 * t4243 + t4249 * t4586);
t4669 = 0.2e1 * t4222;
t4653 = t4669 - 0.1e1;
t4414 = t4653 * qJ(3,3);
t3993 = pkin(2) * t4414 + t4385;
t3957 = t3993 * t4647 + t4600;
t4444 = 0.2e1 * t4644;
t3840 = 0.1e1 / (t3957 * t4444 + t4286);
t3720 = t4259 * t3747;
t3723 = t3747 * t4269;
t4466 = t3720 + t3723;
t4633 = pkin(2) * t3777;
t3660 = (-t3786 - t4633) * t3828 + t4466;
t3663 = pkin(2) * t3720 - t3705 * t4715;
t4582 = t3786 * t3828;
t3780 = t4270 * t4582;
t4419 = t4233 - t4259 / 0.2e1;
t4121 = 0.1e1 / 0.2e1 + t4419;
t3981 = -t4121 * t4222 + t4363 - t4259 / 0.4e1 + t4476;
t4675 = 0.4e1 * t4160;
t3834 = 0.1e1 / (t4490 + (-t3957 * t4169 + t4406) * t4716 + (t3981 * t4675 + t4293) * t4270);
t4567 = t3828 * t3834;
t4389 = t3786 * t4567;
t4660 = pkin(2) * qJ(3,3);
t3639 = ((t3981 * t4582 * t4647 + t3660 * t4598 / 0.4e1 + t4242 * t3663 / 0.4e1) * t4443 + (t3660 * t4600 - t3663 * t4248) * t4647 - t4720 + (0.2e1 * t3993 * t4160 - t4653 * t4660 - t4385) * t3780) * t4389;
t3678 = -pkin(2) * t3768 + t4466;
t4392 = t3759 * t4567;
t4702 = t3747 * (pkin(2) * (0.1e1 + t4259) + t4268) + t4715 * t3768;
t3645 = (-t4720 + ((t3678 * t4598 + t4242 * t4702) * t4169 + (t3678 * t4600 - t4248 * t4702) * t4166) * pkin(1)) * t4392;
t4395 = t3747 * t3768;
t3687 = (-qJ(3,3) + ((pkin(2) * t4598 - t4242 * t4715) * t4169 - (-pkin(2) * t4600 - t4248 * t4715) * t4166) * pkin(1)) * t3840 * t4395;
t4374 = -t3639 - t3645 - t3687;
t4602 = qJ(3,3) * t4178;
t4432 = pkin(2) * t4602;
t4114 = -0.2e1 * t4432;
t3998 = t4163 * t4175 + t4114;
t4124 = t4175 * qJ(3,3);
t4118 = pkin(2) * t4124;
t4111 = 0.2e1 * t4118;
t4528 = t4163 * t4178;
t3900 = (t4111 + t4528) * t4248 + t4242 * t3998;
t3990 = t3998 * t4248;
t4141 = t4175 * pkin(2);
t4039 = t4141 - t4602;
t4519 = t4169 * t4178;
t4678 = -0.2e1 * t4118;
t3813 = (t4166 * t4175 - t4519) * qJ(3,3) + (-t3990 * t4160 - t3900 * t4525 + (t4175 * t4269 + t4175 - t4432) * t4248 + (-(t4678 - t4528) * t4160 - qJ(3,3) * t4039) * t4242) * pkin(1);
t3936 = -t4030 * t4238 - t4033 * t4225 + t4240;
t4570 = t3813 * t3936;
t4404 = t4166 * t4602;
t4534 = t4124 * t4169;
t4630 = pkin(2) * t4178;
t4036 = t4124 + t4630;
t4552 = t4036 * t4242;
t3810 = -t4404 - t4534 + (t3900 * t4160 - (t3990 + (t4121 * t4178 + t4118) * t4666) * t4525 - (t4178 * t4269 + t4118 + t4178) * t4248 + qJ(3,3) * t4552) * pkin(1);
t3933 = -t4030 * t4225 + t4033 * t4238 + t4239;
t4573 = t3810 * t3933;
t3618 = (t4570 + t4573) * t3840 + t4374;
t4241 = sin(qJ(2,3));
t4247 = cos(qJ(2,3));
t3783 = t3786 ^ 2;
t3829 = 0.1e1 / t3837 ^ 2;
t4588 = t3783 * t3829;
t4712 = pkin(1) * (-t3618 * t4241 + t4247 * t4588);
t4638 = pkin(2) * t3618;
t4019 = t4175 * t4183 + t4114;
t3897 = t4019 * t4248 + (t4178 * t4419 + t4118) * t4666;
t3903 = (t4178 * t4183 + t4111) * t4248 + t4019 * t4242;
t4037 = t4124 - t4630;
t4038 = t4141 + t4602;
t4306 = -t4037 * t4496 + t4038 * t4222;
t4307 = -t4037 * t4222 - t4038 * t4496;
t3798 = (t4175 * t4524 - t4519) * qJ(3,3) + (t3897 * t4160 + t3903 * t4525 + t4039 * t4081) * pkin(1) + ((-t4306 + t4141) * t4169 + t4307 * t4166) * t4270;
t3801 = -t4231 * t4404 - t4534 + (t3897 * t4525 - t3903 * t4160 - t4036 * t4081) * pkin(1) + ((t4307 - t4630) * t4169 + t4306 * t4166) * t4270;
t4627 = pkin(2) * t4242;
t4084 = t4598 + t4627;
t4258 = -pkin(2) / 0.2e1;
t4401 = qJ(3,3) * t4499;
t4438 = pkin(1) * pkin(2) / 0.2e1;
t4540 = t4081 * t4166;
t4601 = qJ(3,3) * t4231;
t4346 = ((pkin(2) * t4496 + t4368) * t4531 - ((pkin(2) * t4222 + t4258 - t4405) * t4647 + t4084 * t4258) * t4644 + t4438 * t4540 - t4401 / 0.2e1 - t4352 / 0.2e1 + t4601 / 0.2e1) * t4395;
t4337 = 0.2e1 * t4346;
t4283 = t3798 * t3936 + t3801 * t3933 + t4337;
t4465 = t3720 + t3780;
t3651 = t3723 + (t3786 - t4633) * t3828 + t4465;
t3690 = pkin(2) * t3705;
t3655 = t3690 + t4465;
t3741 = (t3786 + t3759 / 0.2e1) * t3828;
t3714 = t3741 * pkin(2);
t3762 = -t3768 / 0.4e1;
t3694 = t3714 + t3762;
t3771 = t4582 / 0.2e1;
t4591 = t3759 * t3828;
t3732 = t3771 + t4591 / 0.4e1;
t3772 = -t4582 / 0.4e1;
t3733 = t3771 + t4591 / 0.2e1;
t3763 = -t3768 / 0.2e1;
t4469 = t3733 * pkin(2) + t3763;
t3695 = t3714 + t3763;
t4623 = t3695 * pkin(2);
t4681 = -0.2e1 * t3695;
t3601 = (-(0.8e1 * ((t3732 * t4259 - t4623 / 0.2e1) * t4222 + t3694 * t4405 + (t3772 - t4591 / 0.8e1) * t4259 + t4623 / 0.4e1) * t4647 + t3651 * t4598 + t3655 * t4627) * t4644 - (t3651 * t4600 - t3655 * t4191) * t4647 + t4469 * t4686 + ((-0.4e1 * t4160 + 0.2e1) * (-t3741 * t4259 + t4623) * t4496 + (t4681 + (t4675 + (-0.8e1 * t4160 + 0.4e1) * t4222) * t3694) * qJ(3,3)) * t4270) * t4389;
t3675 = t3720 + t3690;
t3702 = t4622 + t3763;
t4386 = (t3690 - t3720) * t4496;
t4693 = -0.4e1 * pkin(1);
t3623 = (-t3705 * t4601 + (((t3733 * t4259 - t3690 / 0.2e1) * t4222 + t3702 * t4405 + (t3772 - t4591 / 0.4e1) * t4259 + t3690 / 0.4e1) * t4525 * t4693 + (-t4084 * t4169 - t4540) * t3675) * pkin(1) + (-0.2e1 * (t3702 * t4414 + t4386) * t4160 + qJ(3,3) * t3702 * t4669 + t4386) * t4270) * t4392;
t4474 = -t3601 - t3623;
t3597 = t3840 * t4283 + t4474;
t4684 = 0.2e1 * t3597;
t4711 = pkin(2) * t4684 + 0.2e1 * t4638;
t4637 = pkin(2) * t3619;
t4020 = t4176 * t4184 + t4115;
t3898 = t4020 * t4250 + (t4179 * t4418 + t4119) * t4665;
t3904 = (t4179 * t4184 + t4112) * t4250 + t4020 * t4244;
t4041 = t4125 - t4629;
t4042 = t4143 + t4608;
t4304 = -t4041 * t4495 + t4042 * t4223;
t4305 = -t4041 * t4223 - t4042 * t4495;
t3799 = (t4176 * t4522 - t4518) * qJ(3,2) + (t3898 * t4161 + t3904 * t4523 + t4043 * t4082) * pkin(1) + ((-t4304 + t4143) * t4170 + t4305 * t4167) * t4270;
t3802 = -t4231 * t4403 - t4533 + (t3898 * t4523 - t3904 * t4161 - t4040 * t4082) * pkin(1) + ((t4305 - t4629) * t4170 + t4304 * t4167) * t4270;
t4626 = pkin(2) * t4244;
t4085 = t4597 + t4626;
t4400 = qJ(3,2) * t4498;
t4539 = t4082 * t4167;
t4607 = qJ(3,2) * t4231;
t4344 = ((pkin(2) * t4495 + t4367) * t4530 - ((pkin(2) * t4223 + t4258 - t4408) * t4646 + t4085 * t4258) * t4643 + t4438 * t4539 - t4400 / 0.2e1 - t4351 / 0.2e1 + t4607 / 0.2e1) * t4394;
t4336 = 0.2e1 * t4344;
t4282 = t3799 * t3937 + t3802 * t3934 + t4336;
t4463 = t3721 + t3781;
t3652 = t3726 + (t3787 - t4632) * t3830 + t4463;
t3691 = pkin(2) * t3706;
t3657 = t3691 + t4463;
t3742 = (t3787 + t3760 / 0.2e1) * t3830;
t3715 = t3742 * pkin(2);
t3764 = -t3769 / 0.4e1;
t3697 = t3715 + t3764;
t3773 = t4581 / 0.2e1;
t4590 = t3760 * t3830;
t3734 = t3773 + t4590 / 0.4e1;
t3774 = -t4581 / 0.4e1;
t3735 = t3773 + t4590 / 0.2e1;
t3765 = -t3769 / 0.2e1;
t4468 = t3735 * pkin(2) + t3765;
t3698 = t3715 + t3765;
t4635 = pkin(2) * t3698;
t4680 = -0.2e1 * t3698;
t3600 = (-(0.8e1 * ((t3734 * t4260 - t4635 / 0.2e1) * t4223 + t3697 * t4408 + (t3774 - t4590 / 0.8e1) * t4260 + t4635 / 0.4e1) * t4646 + t3652 * t4597 + t3657 * t4626) * t4643 - (t3652 * t4606 - t3657 * t4192) * t4646 + t4468 * t4688 + ((-0.4e1 * t4161 + 0.2e1) * (-t3742 * t4260 + t4635) * t4495 + (t4680 + (t4674 + (-0.8e1 * t4161 + 0.4e1) * t4223) * t3697) * qJ(3,2)) * t4270) * t4388;
t3676 = t3721 + t3691;
t3703 = t4621 + t3765;
t4384 = (t3691 - t3721) * t4495;
t3621 = (-t3706 * t4607 + (((t3735 * t4260 - t3691 / 0.2e1) * t4223 + t3703 * t4408 + (t3774 - t4590 / 0.4e1) * t4260 + t3691 / 0.4e1) * t4523 * t4693 + (-t4085 * t4170 - t4539) * t3676) * pkin(1) + (-0.2e1 * (t3703 * t4415 + t4384) * t4161 + qJ(3,2) * t3703 * t4668 + t4384) * t4270) * t4391;
t4475 = -t3600 - t3621;
t3598 = t3841 * t4282 + t4475;
t4683 = 0.2e1 * t3598;
t4710 = pkin(2) * t4683 + 0.2e1 * t4637;
t4636 = pkin(2) * t3620;
t4021 = t4177 * t4185 + t4116;
t3899 = t4021 * t4252 + (t4180 * t4417 + t4120) * t4664;
t3905 = (t4180 * t4185 + t4113) * t4252 + t4021 * t4246;
t4045 = t4126 - t4628;
t4046 = t4145 + t4614;
t4302 = -t4045 * t4494 + t4046 * t4224;
t4303 = -t4045 * t4224 - t4046 * t4494;
t3800 = (t4177 * t4520 - t4517) * qJ(3,1) + (t3899 * t4162 + t3905 * t4521 + t4047 * t4083) * pkin(1) + ((-t4302 + t4145) * t4171 + t4303 * t4168) * t4270;
t3803 = -t4231 * t4402 - t4532 + (t3899 * t4521 - t3905 * t4162 - t4044 * t4083) * pkin(1) + ((t4303 - t4628) * t4171 + t4302 * t4168) * t4270;
t4625 = pkin(2) * t4246;
t4086 = t4596 + t4625;
t4399 = qJ(3,1) * t4497;
t4538 = t4083 * t4168;
t4613 = qJ(3,1) * t4231;
t4342 = ((pkin(2) * t4494 + t4366) * t4529 - ((pkin(2) * t4224 + t4258 - t4411) * t4645 + t4086 * t4258) * t4642 + t4438 * t4538 - t4399 / 0.2e1 - t4350 / 0.2e1 + t4613 / 0.2e1) * t4393;
t4335 = 0.2e1 * t4342;
t4281 = t3800 * t3938 + t3803 * t3935 + t4335;
t4461 = t3722 + t3782;
t3653 = t3729 + (t3788 - t4631) * t3832 + t4461;
t3692 = pkin(2) * t3707;
t3659 = t3692 + t4461;
t3743 = (t3788 + t3761 / 0.2e1) * t3832;
t3716 = t3743 * pkin(2);
t3766 = -t3770 / 0.4e1;
t3700 = t3716 + t3766;
t3775 = t4580 / 0.2e1;
t4589 = t3761 * t3832;
t3736 = t3775 + t4589 / 0.4e1;
t3776 = -t4580 / 0.4e1;
t3737 = t3775 + t4589 / 0.2e1;
t3767 = -t3770 / 0.2e1;
t4467 = t3737 * pkin(2) + t3767;
t3701 = t3716 + t3767;
t4634 = pkin(2) * t3701;
t4679 = -0.2e1 * t3701;
t3602 = (-(0.8e1 * ((t3736 * t4261 - t4634 / 0.2e1) * t4224 + t3700 * t4411 + (t3776 - t4589 / 0.8e1) * t4261 + t4634 / 0.4e1) * t4645 + t3653 * t4596 + t3659 * t4625) * t4642 - (t3653 * t4612 - t3659 * t4193) * t4645 + t4467 * t4690 + ((-0.4e1 * t4162 + 0.2e1) * (-t3743 * t4261 + t4634) * t4494 + (t4679 + (t4673 + (-0.8e1 * t4162 + 0.4e1) * t4224) * t3700) * qJ(3,1)) * t4270) * t4387;
t3677 = t3722 + t3692;
t3704 = t4620 + t3767;
t4381 = (t3692 - t3722) * t4494;
t3622 = (-t3707 * t4613 + (((t3737 * t4261 - t3692 / 0.2e1) * t4224 + t3704 * t4411 + (t3776 - t4589 / 0.4e1) * t4261 + t3692 / 0.4e1) * t4521 * t4693 + (-t4086 * t4171 - t4538) * t3677) * pkin(1) + (-0.2e1 * (t3704 * t4416 + t4381) * t4162 + qJ(3,1) * t3704 * t4667 + t4381) * t4270) * t4390;
t4473 = -t3602 - t3622;
t3599 = t3842 * t4281 + t4473;
t4682 = 0.2e1 * t3599;
t4709 = pkin(2) * t4682 + 0.2e1 * t4636;
t4060 = -t4175 * g(1) + g(2) * t4178;
t4063 = g(1) * t4178 + g(2) * t4175;
t4454 = -t4060 * t4169 + t4063 * t4166;
t4061 = -t4176 * g(1) + g(2) * t4179;
t4064 = g(1) * t4179 + g(2) * t4176;
t4453 = -t4061 * t4170 + t4064 * t4167;
t4062 = -t4177 * g(1) + g(2) * t4180;
t4065 = g(1) * t4180 + g(2) * t4177;
t4452 = -t4062 * t4171 + t4065 * t4168;
t4708 = t4186 - t4499;
t4707 = t4187 - t4498;
t4706 = t4188 - t4497;
t4455 = t4062 * t4168 + t4065 * t4171;
t4456 = t4061 * t4167 + t4064 * t4170;
t4457 = t4060 * t4166 + t4063 * t4169;
t4705 = -t4600 - t4191;
t4704 = -t4606 - t4192;
t4703 = -t4612 - t4193;
t4663 = pkin(2) * g(2);
t4641 = pkin(1) * t4247;
t4640 = pkin(1) * t4249;
t4639 = pkin(1) * t4251;
t3588 = (t4337 + (t3798 + t3813) * t3936 + (t3801 + t3810) * t3933) * t3840 + t4374 + t4474;
t4619 = MDP(4) * t3588;
t3589 = (t4336 + (t3799 + t3814) * t3937 + (t3802 + t3811) * t3934) * t3841 + t4373 + t4475;
t4618 = MDP(4) * t3589;
t3590 = (t4335 + (t3800 + t3815) * t3938 + (t3803 + t3812) * t3935) * t3842 + t4372 + t4473;
t4617 = MDP(4) * t3590;
t4616 = qJ(3,1) * t3620;
t4610 = qJ(3,2) * t3619;
t4604 = qJ(3,3) * t3618;
t4594 = t3618 * t4247;
t4593 = t3619 * t4249;
t4592 = t3620 * t4251;
t4587 = t3783 * t4241;
t4585 = t3784 * t4243;
t4583 = t3785 * t4245;
t3945 = t4036 * t4248 + t4039 * t4242;
t3946 = t4039 * t4248 - t4552;
t4066 = t4175 * t4378;
t4340 = t4178 * t4378;
t4355 = -0.2e1 * t4259 - t4499;
t3804 = (t4178 * t4708 + t4066 + t4678) * t4169 + (t4175 * t4355 + t4114 - t4340) * t4166 + (t3945 * t4160 - t3946 * t4525 - 0.2e1 * t4124 * t4248 + t4178 * t4705) * pkin(1);
t4579 = t3804 * t3933;
t3947 = t4040 * t4250 + t4043 * t4244;
t3948 = t4043 * t4250 - t4551;
t4067 = t4176 * t4382;
t4339 = t4179 * t4382;
t4354 = -0.2e1 * t4260 - t4498;
t3805 = (t4179 * t4707 + t4067 + t4677) * t4170 + (t4176 * t4354 + t4115 - t4339) * t4167 + (t3947 * t4161 - t3948 * t4523 - 0.2e1 * t4125 * t4250 + t4179 * t4704) * pkin(1);
t4578 = t3805 * t3934;
t3949 = t4044 * t4252 + t4047 * t4246;
t3950 = t4047 * t4252 - t4550;
t4068 = t4177 * t4379;
t4338 = t4180 * t4379;
t4353 = -0.2e1 * t4261 - t4497;
t3806 = (t4180 * t4706 + t4068 + t4676) * t4171 + (t4177 * t4353 + t4116 - t4338) * t4168 + (t3949 * t4162 - t3950 * t4521 - 0.2e1 * t4126 * t4252 + t4180 * t4703) * pkin(1);
t4577 = t3806 * t3935;
t3807 = (-t4175 * t4708 + t4114 + t4340) * t4169 + (t4178 * t4355 + t4066 + t4111) * t4166 + (-t3946 * t4160 - t3945 * t4525 + (t4141 - 0.2e1 * t4602) * t4248 + t4242 * t4124) * pkin(1);
t4576 = t3807 * t3936;
t3808 = (-t4176 * t4707 + t4115 + t4339) * t4170 + (t4179 * t4354 + t4067 + t4112) * t4167 + (-t3948 * t4161 - t3947 * t4523 + (t4143 - 0.2e1 * t4608) * t4250 + t4244 * t4125) * pkin(1);
t4575 = t3808 * t3937;
t3809 = (-t4177 * t4706 + t4116 + t4338) * t4171 + (t4180 * t4353 + t4068 + t4113) * t4168 + (-t3950 * t4162 - t3949 * t4521 + (t4145 - 0.2e1 * t4614) * t4252 + t4246 * t4126) * pkin(1);
t4574 = t3809 * t3938;
t3871 = t3970 * t4178 + t3971 * t4175;
t4561 = t3871 * t4242;
t3875 = t3974 * t4179 + t3975 * t4176;
t4560 = t3875 * t4244;
t3879 = t3978 * t4180 + t3979 * t4177;
t4559 = t3879 * t4246;
t3918 = t4512 + t4555;
t4558 = t3918 * t4175;
t3920 = t4510 + t4554;
t4557 = t3920 * t4176;
t3922 = t4508 + t4553;
t4556 = t3922 * t4177;
t3756 = 0.2e1 * t4591;
t3654 = t3780 + (t3756 + 0.4e1 * t4582) * t4259 + t3690;
t3693 = (t3786 + t3759 / 0.3e1) * t3828 * pkin(2) - t3768 / 0.3e1;
t3717 = (t3756 + 0.2e1 * t4582) * t4259;
t3627 = (0.4e1 * (t3695 * t4496 + t3741 * t4368) * t4531 + (0.4e1 * ((-t3714 + t3768 / 0.2e1) * t4222 + t3741 * t4405 + t3732 * pkin(2) + t3762) * t4647 - 0.3e1 * t3693 * t4598 + t4242 * t3654) * t4644 - (t3654 * t4248 + 0.3e1 * t3693 * t4600) * t4647 - 0.2e1 * t3741 * t4401 + t4378 * t4681 - qJ(3,3) * (t3780 + t3717 + 0.2e1 * t3690)) * t4389;
t3669 = t3717 + t3690;
t3633 = ((t3705 * t4496 + t3747 * t4368) * t4422 + ((-t3705 * t4222 + t3747 * t4405 + t4469) * t4647 - t3705 * t4598 / 0.2e1 + t3669 * t4656) * t4444 - (t3669 * t4248 + t3705 * t4600) * t4647 - t3747 * t4401 - t3705 * t4378 + t3675 * t4686) * t4392;
t4472 = t3627 + t3633;
t3758 = 0.2e1 * t4589;
t3658 = t3782 + (t3758 + 0.4e1 * t4580) * t4261 + t3692;
t3699 = (t3788 + t3761 / 0.3e1) * t3832 * pkin(2) - t3770 / 0.3e1;
t3719 = (t3758 + 0.2e1 * t4580) * t4261;
t3628 = (0.4e1 * (t3701 * t4494 + t3743 * t4366) * t4529 + (0.4e1 * ((-t3716 + t3770 / 0.2e1) * t4224 + t3743 * t4411 + t3736 * pkin(2) + t3766) * t4645 - 0.3e1 * t3699 * t4596 + t4246 * t3658) * t4642 - (t3658 * t4252 + 0.3e1 * t3699 * t4612) * t4645 - 0.2e1 * t3743 * t4399 + t4379 * t4679 - qJ(3,1) * (t3782 + t3719 + 0.2e1 * t3692)) * t4387;
t3673 = t3719 + t3692;
t3635 = ((t3707 * t4494 + t3749 * t4366) * t4420 + ((-t3707 * t4224 + t3749 * t4411 + t4467) * t4645 - t3707 * t4596 / 0.2e1 + t3673 * t4654) * t4440 - (t3673 * t4252 + t3707 * t4612) * t4645 - t3749 * t4399 - t3707 * t4379 + t3677 * t4690) * t4390;
t4471 = t3628 + t3635;
t3757 = 0.2e1 * t4590;
t3656 = t3781 + (t3757 + 0.4e1 * t4581) * t4260 + t3691;
t3696 = (t3787 + t3760 / 0.3e1) * t3830 * pkin(2) - t3769 / 0.3e1;
t3718 = (t3757 + 0.2e1 * t4581) * t4260;
t3629 = (0.4e1 * (t3698 * t4495 + t3742 * t4367) * t4530 + (0.4e1 * ((-t3715 + t3769 / 0.2e1) * t4223 + t3742 * t4408 + t3734 * pkin(2) + t3764) * t4646 - 0.3e1 * t3696 * t4597 + t4244 * t3656) * t4643 - (t3656 * t4250 + 0.3e1 * t3696 * t4606) * t4646 - 0.2e1 * t3742 * t4400 + t4382 * t4680 - qJ(3,2) * (t3781 + t3718 + 0.2e1 * t3691)) * t4388;
t3671 = t3718 + t3691;
t3634 = ((t3706 * t4495 + t3748 * t4367) * t4421 + ((-t3706 * t4223 + t3748 * t4408 + t4468) * t4646 - t3706 * t4597 / 0.2e1 + t3671 * t4655) * t4442 - (t3671 * t4250 + t3706 * t4606) * t4646 - t3748 * t4400 - t3706 * t4382 + t3676 * t4688) * t4391;
t4470 = t3629 + t3634;
t4398 = t3741 * t4591;
t4397 = t3742 * t4590;
t4396 = t3743 * t4589;
t4345 = (-(t4447 * t4647 - t4627 / 0.2e1 + t4598 / 0.2e1) * t4644 + t4705 * t4647 / 0.2e1 - t4660 + (t4160 - 0.1e1 / 0.2e1) * t4378) * t4395;
t4377 = 0.2e1 * t3840 * t4345 + t4472;
t4341 = (-(t4445 * t4645 - t4625 / 0.2e1 + t4596 / 0.2e1) * t4642 + t4703 * t4645 / 0.2e1 - t4662 + (t4162 - 0.1e1 / 0.2e1) * t4379) * t4393;
t4376 = 0.2e1 * t3842 * t4341 + t4471;
t4343 = (-(t4446 * t4646 - t4626 / 0.2e1 + t4597 / 0.2e1) * t4643 + t4704 * t4646 / 0.2e1 - t4661 + (t4161 - 0.1e1 / 0.2e1) * t4382) * t4394;
t4375 = 0.2e1 * t3841 * t4343 + t4470;
t4349 = t4241 * t4398;
t4348 = t4243 * t4397;
t4347 = t4245 * t4396;
t4256 = pkin(2) * g(1);
t4131 = -g(2) * qJ(3,3) + t4256;
t4132 = g(1) * qJ(3,3) + t4663;
t4328 = -t4576 - t4579;
t4280 = t3840 * t4328 + t4377;
t4331 = (pkin(2) * t3588 + t4280) * pkin(2) + t3588 * t4259 + t4395 * t4685 + (t4131 * t4178 + t4132 * t4175) * t4166 + (t4131 * t4175 - t4132 * t4178) * t4169;
t4133 = -g(2) * qJ(3,2) + t4256;
t4134 = g(1) * qJ(3,2) + t4663;
t4327 = -t4575 - t4578;
t4278 = t3841 * t4327 + t4375;
t4330 = (pkin(2) * t3589 + t4278) * pkin(2) + t3589 * t4260 + t4394 * t4687 + (t4133 * t4179 + t4134 * t4176) * t4167 + (t4133 * t4176 - t4134 * t4179) * t4170;
t4135 = -g(2) * qJ(3,1) + t4256;
t4136 = g(1) * qJ(3,1) + t4663;
t4326 = -t4574 - t4577;
t4279 = t3842 * t4326 + t4376;
t4329 = (pkin(2) * t3590 + t4279) * pkin(2) + t3590 * t4261 + t4393 * t4689 + (t4135 * t4180 + t4136 * t4177) * t4168 + (t4135 * t4177 - t4136 * t4180) * t4171;
t3940 = t4507 + t4549;
t4325 = t3939 * t4178 + t4175 * t3940;
t3942 = t4506 + t4548;
t4324 = t3941 * t4179 + t4176 * t3942;
t3944 = t4505 + t4547;
t4323 = t3943 * t4180 + t4177 * t3944;
t4313 = 0.2e1 * t3777 * t3829 * t4719 + qJ(3,3) * t4684 - t4457 + 0.2e1 * t4604;
t4312 = 0.2e1 * t3778 * t3831 * t4718 + qJ(3,2) * t4683 - t4456 + 0.2e1 * t4610;
t4311 = 0.2e1 * t3779 * t3833 * t4717 + qJ(3,1) * t4682 - t4455 + 0.2e1 * t4616;
t4292 = -MDP(7) * t3588 - MDP(8) * t3747 ^ 2 + MDP(9) * (-pkin(1) * t4594 + (-t3597 - t3618) * pkin(2) + (-t4328 - 0.2e1 * t4345) * t3840 + (-pkin(1) * t4587 + (-t3783 + (-0.2e1 * t3786 - t3759) * t3759) * qJ(3,3)) * t3829 - t4472 - t4454);
t4291 = -MDP(7) * t3589 - MDP(8) * t3748 ^ 2 + MDP(9) * (-pkin(1) * t4593 + (-t3598 - t3619) * pkin(2) + (-t4327 - 0.2e1 * t4343) * t3841 + (-pkin(1) * t4585 + (-t3784 + (-0.2e1 * t3787 - t3760) * t3760) * qJ(3,2)) * t3831 - t4470 - t4453);
t4290 = -MDP(7) * t3590 - MDP(8) * t3749 ^ 2 + MDP(9) * (-pkin(1) * t4592 + (-t3599 - t3620) * pkin(2) + (-t4326 - 0.2e1 * t4341) * t3842 + (-pkin(1) * t4583 + (-t3785 + (-0.2e1 * t3788 - t3761) * t3761) * qJ(3,1)) * t3833 - t4471 - t4452);
t3584 = -t3602 / 0.2e1 - t3622 / 0.2e1 + (t4342 + (t3815 + t3800 / 0.2e1) * t3938 + (t3812 + t3803 / 0.2e1) * t3935) * t3842 + t4372;
t4289 = pkin(1) * (t3584 * t4245 + t4251 * t4396);
t3582 = -t3601 / 0.2e1 - t3623 / 0.2e1 + (t4346 + (t3813 + t3798 / 0.2e1) * t3936 + (t3810 + t3801 / 0.2e1) * t3933) * t3840 + t4374;
t4288 = (t3582 * t4241 + t4247 * t4398) * pkin(1);
t3583 = -t3600 / 0.2e1 - t3621 / 0.2e1 + (t4344 + (t3814 + t3799 / 0.2e1) * t3937 + (t3811 + t3802 / 0.2e1) * t3934) * t3841 + t4373;
t4287 = (t3583 * t4243 + t4249 * t4397) * pkin(1);
t3606 = pkin(1) * (t3829 * t4587 + t4594) + t4454;
t3608 = pkin(1) * (t3831 * t4585 + t4593) + t4453;
t3610 = pkin(1) * (t3833 * t4583 + t4592) + t4452;
t4277 = MDP(5) * t3606 + MDP(6) * (t4457 + t4712) + MDP(7) * (t4280 + t3606 + t4711) + MDP(8) * (t4313 - t4712) + MDP(9) * (((-qJ(3,3) * t4588 + t4638) * t4247 + (pkin(2) * t4588 + t4604) * t4241) * pkin(1) + t4331) + t4619;
t4276 = MDP(5) * t3608 + MDP(6) * (t4456 + t4713) + MDP(7) * (t4278 + t3608 + t4710) + MDP(8) * (t4312 - t4713) + MDP(9) * (((-qJ(3,2) * t4586 + t4637) * t4249 + (pkin(2) * t4586 + t4610) * t4243) * pkin(1) + t4330) + t4618;
t4275 = MDP(5) * t3610 + MDP(6) * (t4455 + t4714) + MDP(7) * (t4279 + t3610 + t4709) + MDP(8) * (t4311 - t4714) + MDP(9) * (((-qJ(3,1) * t4584 + t4636) * t4251 + (pkin(2) * t4584 + t4616) * t4245) * pkin(1) + t4329) + t4617;
t4274 = MDP(1) * t3618 + MDP(2) * (-t4060 * t4248 + t4063 * t4242) + MDP(3) * (t4060 * t4242 + t4063 * t4248) + MDP(5) * ((t3582 * t4247 - t4349) * t4716 + t4454) + MDP(6) * (-0.2e1 * t4288 + t4457) + MDP(7) * (((-0.2e1 * t3639 - 0.2e1 * t3645 - 0.2e1 * t3687 + t4474) * t4247 - 0.2e1 * t4349) * pkin(1) + ((t4283 + 0.2e1 * t4570 + 0.2e1 * t4573) * t4641 + t4328) * t3840 + t4377 + t4454 + t4711) + MDP(8) * (0.2e1 * t4288 + t4313) + MDP(9) * ((qJ(3,3) * t3582 + (-t3714 * t3759 + t3747 * t3777) * t3828) * t4241 * t4716 + 0.2e1 * (qJ(3,3) * t4398 + t3582 * pkin(2) + t3627 / 0.2e1 + t3633 / 0.2e1 + (-t4576 / 0.2e1 - t4579 / 0.2e1 + t4345) * t3840) * t4641 + t4270 * t3618 + t4331 + (-(-g(1) * t4242 + g(2) * t4248) * t4178 + (g(1) * t4248 + g(2) * t4242) * t4175) * pkin(1)) + t4619;
t4273 = MDP(1) * t3619 + MDP(2) * (-t4061 * t4250 + t4064 * t4244) + MDP(3) * (t4061 * t4244 + t4064 * t4250) + MDP(5) * ((t3583 * t4249 - t4348) * t4716 + t4453) + MDP(6) * (-0.2e1 * t4287 + t4456) + MDP(7) * (((-0.2e1 * t3640 - 0.2e1 * t3646 - 0.2e1 * t3688 + t4475) * t4249 - 0.2e1 * t4348) * pkin(1) + ((t4282 + 0.2e1 * t4569 + 0.2e1 * t4572) * t4640 + t4327) * t3841 + t4375 + t4453 + t4710) + MDP(8) * (0.2e1 * t4287 + t4312) + MDP(9) * ((qJ(3,2) * t3583 + (-t3715 * t3760 + t3748 * t3778) * t3830) * t4243 * t4716 + 0.2e1 * (qJ(3,2) * t4397 + t3583 * pkin(2) + t3629 / 0.2e1 + t3634 / 0.2e1 + (-t4575 / 0.2e1 - t4578 / 0.2e1 + t4343) * t3841) * t4640 + t4270 * t3619 + t4330 + (-(-g(1) * t4244 + g(2) * t4250) * t4179 + (g(1) * t4250 + g(2) * t4244) * t4176) * pkin(1)) + t4618;
t4272 = MDP(1) * t3620 + MDP(2) * (-t4062 * t4252 + t4065 * t4246) + MDP(3) * (t4062 * t4246 + t4065 * t4252) + MDP(5) * ((t3584 * t4251 - t4347) * t4716 + t4452) + MDP(6) * (-0.2e1 * t4289 + t4455) + MDP(7) * (((-0.2e1 * t3641 - 0.2e1 * t3647 - 0.2e1 * t3689 + t4473) * t4251 - 0.2e1 * t4347) * pkin(1) + ((t4281 + 0.2e1 * t4568 + 0.2e1 * t4571) * t4639 + t4326) * t3842 + t4376 + t4452 + t4709) + MDP(8) * (0.2e1 * t4289 + t4311) + MDP(9) * ((qJ(3,1) * t3584 + (-t3716 * t3761 + t3749 * t3779) * t3832) * t4245 * t4716 + 0.2e1 * (qJ(3,1) * t4396 + t3584 * pkin(2) + t3628 / 0.2e1 + t3635 / 0.2e1 + (-t4574 / 0.2e1 - t4577 / 0.2e1 + t4341) * t3842) * t4639 + t4270 * t3620 + t4329 + (-(-g(1) * t4246 + g(2) * t4252) * t4180 + (g(1) * t4252 + g(2) * t4246) * t4177) * pkin(1)) + t4617;
t4182 = t4240 - g(1);
t4181 = t4239 - g(2);
t4023 = -t4196 * t4238 - t4197 * t4225;
t4022 = -t4196 * t4225 + t4197 * t4238;
t3997 = t4181 * t4196 + t4182 * t4197;
t3996 = t4181 * t4197 - t4182 * t4196;
t3932 = t4032 * t4177 + t4035 * t4180;
t3931 = t4031 * t4176 + t4034 * t4179;
t3930 = t4030 * t4175 + t4033 * t4178;
t3929 = t4032 * t4180 - t4035 * t4177;
t3928 = t4031 * t4179 - t4034 * t4176;
t3927 = t4030 * t4178 - t4033 * t4175;
t3881 = -t3977 * t4177 + t3980 * t4180;
t3880 = -t3978 * t4177 + t3979 * t4180;
t3878 = t3977 * t4180 + t3980 * t4177;
t3877 = -t3973 * t4176 + t3976 * t4179;
t3876 = -t3974 * t4176 + t3975 * t4179;
t3874 = t3973 * t4179 + t3976 * t4176;
t3873 = -t3969 * t4175 + t3972 * t4178;
t3872 = -t3970 * t4175 + t3971 * t4178;
t3870 = t3969 * t4178 + t3972 * t4175;
t3863 = -t3943 * t4177 + t3944 * t4180;
t3862 = -t3941 * t4176 + t3942 * t4179;
t3861 = -t3939 * t4175 + t3940 * t4178;
t3860 = t3922 * t4180 - t3923 * t4177;
t3859 = t3920 * t4179 - t3921 * t4176;
t3858 = t3918 * t4178 - t3919 * t4175;
t1 = [t4023 * MDP(11) - t4022 * MDP(12) + (-t3996 * t4196 + t3997 * t4197) * MDP(13) + (t3800 * t4275 + t3809 * t4290 + t3815 * t4272) * t3842 + (t3799 * t4276 + t3808 * t4291 + t3814 * t4273) * t3841 + (t3798 * t4277 + t3807 * t4292 + t3813 * t4274) * t3840; t4022 * MDP(11) + t4023 * MDP(12) + (t3996 * t4197 + t3997 * t4196) * MDP(13) + (t3803 * t4275 + t3806 * t4290 + t3812 * t4272) * t3842 + (t3802 * t4276 + t3805 * t4291 + t3811 * t4273) * t3841 + (t3801 * t4277 + t3804 * t4292 + t3810 * t4274) * t3840; t4238 * MDP(10) + t3996 * MDP(11) - t3997 * MDP(12) + (t4290 * (-t4694 * t4171 + 0.2e1 * t3879 * t4615 + ((t3929 * t4494 + t3932 * t4224) * t4171 + (-t3929 * t4224 + t3932 * t4494) * t4168) * t4270 + ((-t3879 * t4252 + t4246 * t3880) * t4162 - (t3880 * t4252 + t4559) * t4521 + (t4314 * t4180 + t4177 * (t4502 + t4535)) * t4252 + t3932 * t4612) * pkin(1)) + t4275 * (((t4091 * t4197 - t4092 * t4196) * t4180 + (t4091 * t4196 + t4092 * t4197) * t4177) * t4171 + t3932 * t4413 + ((-t3878 * t4224 - t3881 * t4494) * t4171 + (-t3878 * t4494 + t3881 * t4224) * t4168) * t4270 + (-(t4246 * t3863 - t4252 * t4323) * t4162 + (t3863 * t4252 + t4246 * t4323) * t4521 + t3879 * t4083) * pkin(1)) + t4272 * ((-t3929 * t4171 + t3932 * t4168) * qJ(3,1) + (((((t4154 - t4267 - t4356) * t4197 + t4509) * t4180 - t4556) * t4252 + t3860 * t4246) * t4162 - (t3860 * t4252 + (t3923 * t4180 + t4556) * t4246) * t4521 + t4695 * t4252 - qJ(3,1) * t4559) * pkin(1))) * t3836 + (t4291 * (-t4696 * t4170 + 0.2e1 * t3875 * t4609 + ((t3928 * t4495 + t3931 * t4223) * t4170 + (-t3928 * t4223 + t3931 * t4495) * t4167) * t4270 + ((-t3875 * t4250 + t4244 * t3876) * t4161 - (t3876 * t4250 + t4560) * t4523 + (t4315 * t4179 + t4176 * (t4503 + t4536)) * t4250 + t3931 * t4606) * pkin(1)) + t4276 * (((t4089 * t4197 - t4090 * t4196) * t4179 + (t4089 * t4196 + t4090 * t4197) * t4176) * t4170 + t3931 * t4410 + ((-t3874 * t4223 - t3877 * t4495) * t4170 + (-t3874 * t4495 + t3877 * t4223) * t4167) * t4270 + (-(t4244 * t3862 - t4250 * t4324) * t4161 + (t3862 * t4250 + t4244 * t4324) * t4523 + t3875 * t4082) * pkin(1)) + t4273 * ((-t3928 * t4170 + t3931 * t4167) * qJ(3,2) + (((((t4150 - t4266 - t4357) * t4197 + t4511) * t4179 - t4557) * t4250 + t3859 * t4244) * t4161 - (t3859 * t4250 + (t3921 * t4179 + t4557) * t4244) * t4523 + t4697 * t4250 - qJ(3,2) * t4560) * pkin(1))) * t3835 + (t4292 * (-t4698 * t4169 + 0.2e1 * t3871 * t4603 + ((t3927 * t4496 + t3930 * t4222) * t4169 + (-t3927 * t4222 + t3930 * t4496) * t4166) * t4270 + ((-t3871 * t4248 + t4242 * t3872) * t4160 - (t3872 * t4248 + t4561) * t4525 + (t4316 * t4178 + (t4504 + t4537) * t4175) * t4248 + t3930 * t4600) * pkin(1)) + t4277 * (((t4087 * t4197 - t4088 * t4196) * t4178 + (t4087 * t4196 + t4088 * t4197) * t4175) * t4169 + t3930 * t4407 + ((-t3870 * t4222 - t3873 * t4496) * t4169 + (-t3870 * t4496 + t3873 * t4222) * t4166) * t4270 + (-(t4242 * t3861 - t4248 * t4325) * t4160 + (t3861 * t4248 + t4242 * t4325) * t4525 + t3871 * t4081) * pkin(1)) + t4274 * ((-t3927 * t4169 + t3930 * t4166) * qJ(3,3) + (((((t4148 - t4265 - t4358) * t4197 + t4513) * t4178 - t4558) * t4248 + t3858 * t4242) * t4160 - (t3858 * t4248 + (t3919 * t4178 + t4558) * t4242) * t4525 + t4699 * t4248 - qJ(3,3) * t4561) * pkin(1))) * t3834;];
tauX  = t1;
