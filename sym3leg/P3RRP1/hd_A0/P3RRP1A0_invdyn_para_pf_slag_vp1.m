% Calculate vector of inverse dynamics forces for parallel robot
% P3RRP1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [4x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,d1,d2]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% tauX [3x1]
%   forces of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)
%   in platform coordinates xP

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-03 15:31
% Revision: abbb0d669c4fc7889a31e0cf750ab51a4f2eb1ce (2019-05-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRP1A0_invdyn_para_pf_slag_vp1(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(4,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [4 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: pkin has to be [4x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-03 15:02:40
% EndTime: 2019-05-03 15:03:33
% DurationCPUTime: 55.04s
% Computational Cost: add. (809123->1060), mult. (1764635->1604), div. (15381->6), fcn. (742418->20), ass. (0->599)
t408 = legFrame(3,3);
t363 = sin(t408);
t345 = t363 * qJ(3,3);
t366 = cos(t408);
t626 = pkin(2) * t366;
t300 = t345 + t626;
t348 = t363 * pkin(2);
t608 = qJ(3,3) * t366;
t303 = t348 - t608;
t414 = sin(qJ(1,3));
t417 = cos(qJ(1,3));
t244 = t300 * t417 + t303 * t414;
t584 = t300 * t414;
t245 = t303 * t417 - t584;
t442 = pkin(1) ^ 2;
t558 = t417 * t414;
t490 = t442 * t558;
t318 = t363 * t490;
t522 = pkin(2) * t608;
t335 = -0.2e1 * t522;
t396 = qJ(1,3) + qJ(2,3);
t360 = cos(t396);
t351 = t360 ^ 2;
t357 = sin(t396);
t470 = t366 * t490;
t429 = qJ(3,3) ^ 2;
t392 = t417 ^ 2;
t563 = t392 * t442;
t479 = -0.2e1 * t429 - t563;
t572 = t357 * t360;
t339 = pkin(2) * t345;
t669 = -0.2e1 * t339;
t377 = pkin(2) * t417;
t606 = qJ(3,3) * t414;
t682 = -t606 - t377;
t685 = 0.2e1 * t429 + t442 - t563;
t205 = (t366 * t685 + t318 + t669) * t360 + (t363 * t479 + t335 - t470) * t357 + (t244 * t351 - t245 * t572 - 0.2e1 * t345 * t417 + t366 * t682) * pkin(1);
t441 = pkin(2) ^ 2;
t407 = -t441 / 0.2e1;
t369 = -t429 + t441;
t354 = 0.1e1 + t369;
t513 = qJ(3,3) * t558;
t471 = pkin(2) * t513;
t445 = -t354 * t392 + 0.2e1 * t471;
t654 = -t429 / 0.2e1;
t521 = 0.1e1 / 0.2e1 + t654;
t666 = 0.2e1 * t351;
t651 = 0.2e1 * t392 - 0.1e1;
t485 = t651 * qJ(3,3);
t500 = t354 * t558;
t280 = pkin(2) * t485 + t500;
t400 = 0.2e1 + t442;
t531 = 0.2e1 * pkin(1);
t559 = t417 * qJ(3,3);
t635 = pkin(1) * t357;
t676 = -(-(t280 * t635 + t606) * t360 + t357 * t559) * t531 - t429 * t400;
t220 = 0.1e1 / (((t407 - t445 - t521) * t666 + t445) * t442 + t676);
t425 = xP(3);
t380 = sin(t425);
t381 = cos(t425);
t432 = koppelP(3,2);
t435 = koppelP(3,1);
t294 = -t380 * t432 + t381 * t435;
t422 = xDP(3);
t423 = xDP(2);
t271 = t294 * t422 + t423;
t590 = t220 * t271;
t181 = t205 * t590;
t332 = 0.2e1 * t339;
t208 = (-t363 * t685 + t335 + t470) * t360 + (t366 * t479 + t318 + t332) * t357 + (-t245 * t351 - t244 * t572 + (t348 - 0.2e1 * t608) * t417 + t414 * t345) * pkin(1);
t291 = t380 * t435 + t381 * t432;
t424 = xDP(1);
t274 = -t291 * t422 + t424;
t589 = t220 * t274;
t184 = t208 * t589;
t139 = t184 + t181;
t286 = t363 * t369 + t335;
t406 = t441 / 0.2e1;
t663 = -0.2e1 * t414;
t229 = t286 * t417 + ((t406 + t654) * t366 + t339) * t663;
t235 = (t366 * t369 + t332) * t417 + t286 * t414;
t325 = -t377 + t606;
t401 = 0.1e1 + t442;
t301 = t345 - t626;
t302 = t348 + t608;
t455 = -t301 * t558 + t302 * t392;
t456 = -t301 * t392 - t302 * t558;
t566 = t360 * t366;
t571 = t357 * t363;
t199 = (t401 * t571 - t566) * qJ(3,3) + (t229 * t351 + t235 * t572 + t303 * t325) * pkin(1) + ((-t455 + t348) * t360 + t456 * t357) * t442;
t497 = t357 * t608;
t581 = t345 * t360;
t202 = -t401 * t497 - t581 + (t229 * t572 - t235 * t351 - t300 * t325) * pkin(1) + ((t456 - t626) * t360 + t455 * t357) * t442;
t283 = t354 * t363 + t335;
t575 = t354 * t366;
t232 = (t332 + t575) * t417 + t414 * t283;
t268 = t283 * t417;
t342 = t406 + t521;
t211 = -t497 - t581 + (t232 * t351 - (t268 + (t342 * t366 + t339) * t663) * t572 - (t366 * t441 + t339 + t366) * t417 + qJ(3,3) * t584) * pkin(1);
t214 = (-t566 + t571) * qJ(3,3) + (-t268 * t351 - t232 * t572 + (t363 * t441 + t363 - t522) * t417 + (-(t669 - t575) * t351 - qJ(3,3) * t303) * t414) * pkin(1);
t112 = ((t199 + t214) * t274 + (t202 + t211) * t271) * t220;
t623 = t112 * pkin(2);
t76 = t623 - t139;
t691 = t76 * qJ(3,3);
t409 = legFrame(2,3);
t364 = sin(t409);
t346 = t364 * qJ(3,2);
t367 = cos(t409);
t625 = pkin(2) * t367;
t304 = t346 + t625;
t349 = t364 * pkin(2);
t611 = qJ(3,2) * t367;
t307 = t349 - t611;
t415 = sin(qJ(1,2));
t418 = cos(qJ(1,2));
t246 = t304 * t418 + t307 * t415;
t583 = t304 * t415;
t247 = t307 * t418 - t583;
t556 = t418 * t415;
t489 = t442 * t556;
t319 = t364 * t489;
t523 = pkin(2) * t611;
t336 = -0.2e1 * t523;
t397 = qJ(1,2) + qJ(2,2);
t361 = cos(t397);
t352 = t361 ^ 2;
t358 = sin(t397);
t469 = t367 * t489;
t430 = qJ(3,2) ^ 2;
t393 = t418 ^ 2;
t562 = t393 * t442;
t478 = -0.2e1 * t430 - t562;
t570 = t358 * t361;
t340 = pkin(2) * t346;
t668 = -0.2e1 * t340;
t378 = pkin(2) * t418;
t609 = qJ(3,2) * t415;
t681 = -t609 - t378;
t684 = 0.2e1 * t430 + t442 - t562;
t206 = (t367 * t684 + t319 + t668) * t361 + (t364 * t478 + t336 - t469) * t358 + (t246 * t352 - t247 * t570 - 0.2e1 * t346 * t418 + t367 * t681) * pkin(1);
t370 = -t430 + t441;
t355 = 0.1e1 + t370;
t514 = qJ(3,2) * t556;
t472 = pkin(2) * t514;
t446 = -t355 * t393 + 0.2e1 * t472;
t653 = -t430 / 0.2e1;
t520 = 0.1e1 / 0.2e1 + t653;
t665 = 0.2e1 * t352;
t650 = 0.2e1 * t393 - 0.1e1;
t484 = t650 * qJ(3,2);
t499 = t355 * t556;
t281 = pkin(2) * t484 + t499;
t557 = t418 * qJ(3,2);
t634 = pkin(1) * t358;
t675 = -(-(t281 * t634 + t609) * t361 + t358 * t557) * t531 - t430 * t400;
t221 = 0.1e1 / (((t407 - t446 - t520) * t665 + t446) * t442 + t675);
t433 = koppelP(2,2);
t436 = koppelP(2,1);
t295 = -t380 * t433 + t381 * t436;
t272 = t295 * t422 + t423;
t588 = t221 * t272;
t182 = t206 * t588;
t333 = 0.2e1 * t340;
t209 = (-t364 * t684 + t336 + t469) * t361 + (t367 * t478 + t319 + t333) * t358 + (-t247 * t352 - t246 * t570 + (t349 - 0.2e1 * t611) * t418 + t415 * t346) * pkin(1);
t292 = t380 * t436 + t381 * t433;
t275 = -t292 * t422 + t424;
t587 = t221 * t275;
t185 = t209 * t587;
t140 = t185 + t182;
t287 = t364 * t370 + t336;
t662 = -0.2e1 * t415;
t230 = t287 * t418 + ((t406 + t653) * t367 + t340) * t662;
t236 = (t367 * t370 + t333) * t418 + t287 * t415;
t326 = -t378 + t609;
t305 = t346 - t625;
t306 = t349 + t611;
t453 = -t305 * t556 + t306 * t393;
t454 = -t305 * t393 - t306 * t556;
t565 = t361 * t367;
t569 = t358 * t364;
t200 = (t401 * t569 - t565) * qJ(3,2) + (t230 * t352 + t236 * t570 + t307 * t326) * pkin(1) + ((-t453 + t349) * t361 + t454 * t358) * t442;
t496 = t358 * t611;
t580 = t346 * t361;
t203 = -t401 * t496 - t580 + (t230 * t570 - t236 * t352 - t304 * t326) * pkin(1) + ((t454 - t625) * t361 + t453 * t358) * t442;
t284 = t355 * t364 + t336;
t574 = t355 * t367;
t233 = (t333 + t574) * t418 + t415 * t284;
t269 = t284 * t418;
t343 = t406 + t520;
t212 = -t496 - t580 + (t233 * t352 - (t269 + (t343 * t367 + t340) * t662) * t570 - (t367 * t441 + t340 + t367) * t418 + qJ(3,2) * t583) * pkin(1);
t215 = (-t565 + t569) * qJ(3,2) + (-t269 * t352 - t233 * t570 + (t364 * t441 + t364 - t523) * t418 + (-(t668 - t574) * t352 - qJ(3,2) * t307) * t415) * pkin(1);
t113 = ((t200 + t215) * t275 + (t203 + t212) * t272) * t221;
t622 = t113 * pkin(2);
t77 = t622 - t140;
t690 = t77 * qJ(3,2);
t410 = legFrame(1,3);
t365 = sin(t410);
t347 = t365 * qJ(3,1);
t368 = cos(t410);
t624 = pkin(2) * t368;
t308 = t347 + t624;
t350 = t365 * pkin(2);
t614 = qJ(3,1) * t368;
t311 = t350 - t614;
t416 = sin(qJ(1,1));
t419 = cos(qJ(1,1));
t248 = t308 * t419 + t311 * t416;
t582 = t308 * t416;
t249 = t311 * t419 - t582;
t560 = t416 * t419;
t491 = t442 * t560;
t320 = t365 * t491;
t524 = pkin(2) * t614;
t337 = -0.2e1 * t524;
t398 = qJ(1,1) + qJ(2,1);
t362 = cos(t398);
t353 = t362 ^ 2;
t359 = sin(t398);
t468 = t368 * t491;
t431 = qJ(3,1) ^ 2;
t394 = t419 ^ 2;
t561 = t394 * t442;
t477 = -0.2e1 * t431 - t561;
t568 = t359 * t362;
t341 = pkin(2) * t347;
t667 = -0.2e1 * t341;
t379 = pkin(2) * t419;
t612 = qJ(3,1) * t416;
t680 = -t612 - t379;
t683 = 0.2e1 * t431 + t442 - t561;
t207 = (t368 * t683 + t320 + t667) * t362 + (t365 * t477 + t337 - t468) * t359 + (t248 * t353 - t249 * t568 - 0.2e1 * t347 * t419 + t368 * t680) * pkin(1);
t371 = -t431 + t441;
t356 = 0.1e1 + t371;
t555 = t419 * qJ(3,1);
t515 = t416 * t555;
t473 = pkin(2) * t515;
t447 = -t356 * t394 + 0.2e1 * t473;
t652 = -t431 / 0.2e1;
t519 = 0.1e1 / 0.2e1 + t652;
t664 = 0.2e1 * t353;
t649 = 0.2e1 * t394 - 0.1e1;
t483 = t649 * qJ(3,1);
t498 = t356 * t560;
t282 = pkin(2) * t483 + t498;
t633 = pkin(1) * t359;
t674 = -(-(t282 * t633 + t612) * t362 + t359 * t555) * t531 - t431 * t400;
t222 = 0.1e1 / (((t407 - t447 - t519) * t664 + t447) * t442 + t674);
t434 = koppelP(1,2);
t437 = koppelP(1,1);
t296 = -t380 * t434 + t381 * t437;
t273 = t296 * t422 + t423;
t586 = t222 * t273;
t183 = t207 * t586;
t334 = 0.2e1 * t341;
t210 = (-t365 * t683 + t337 + t468) * t362 + (t368 * t477 + t320 + t334) * t359 + (-t249 * t353 - t248 * t568 + (t350 - 0.2e1 * t614) * t419 + t416 * t347) * pkin(1);
t293 = t380 * t437 + t381 * t434;
t276 = -t293 * t422 + t424;
t585 = t222 * t276;
t186 = t210 * t585;
t141 = t186 + t183;
t288 = t365 * t371 + t337;
t661 = -0.2e1 * t416;
t231 = t288 * t419 + ((t406 + t652) * t368 + t341) * t661;
t237 = (t368 * t371 + t334) * t419 + t288 * t416;
t327 = -t379 + t612;
t309 = t347 - t624;
t310 = t350 + t614;
t451 = -t309 * t560 + t310 * t394;
t452 = -t309 * t394 - t310 * t560;
t564 = t362 * t368;
t567 = t359 * t365;
t201 = (t401 * t567 - t564) * qJ(3,1) + (t231 * t353 + t237 * t568 + t311 * t327) * pkin(1) + ((-t451 + t350) * t362 + t452 * t359) * t442;
t495 = t359 * t614;
t579 = t347 * t362;
t204 = -t401 * t495 - t579 + (t231 * t568 - t237 * t353 - t308 * t327) * pkin(1) + ((t452 - t624) * t362 + t451 * t359) * t442;
t285 = t356 * t365 + t337;
t573 = t356 * t368;
t234 = (t334 + t573) * t419 + t416 * t285;
t270 = t285 * t419;
t344 = t406 + t519;
t213 = -t495 - t579 + (t234 * t353 - (t270 + (t344 * t368 + t341) * t661) * t568 - (t368 * t441 + t341 + t368) * t419 + qJ(3,1) * t582) * pkin(1);
t216 = (-t564 + t567) * qJ(3,1) + (-t270 * t353 - t234 * t568 + (t365 * t441 + t365 - t524) * t419 + (-(t667 - t573) * t353 - qJ(3,1) * t311) * t416) * pkin(1);
t114 = ((t201 + t216) * t276 + (t204 + t213) * t273) * t222;
t621 = t114 * pkin(2);
t78 = t621 - t141;
t689 = t78 * qJ(3,1);
t399 = 0.1e1 + t441;
t546 = -t181 / 0.2e1 - t184 / 0.2e1;
t109 = ((t214 + t199 / 0.2e1) * t274 + (t211 + t202 / 0.2e1) * t271) * t220;
t85 = t109 * pkin(2);
t63 = t85 + t546;
t544 = -t182 / 0.2e1 - t185 / 0.2e1;
t110 = ((t215 + t200 / 0.2e1) * t275 + (t212 + t203 / 0.2e1) * t272) * t221;
t86 = t110 * pkin(2);
t66 = t86 + t544;
t542 = -t183 / 0.2e1 - t186 / 0.2e1;
t111 = ((t216 + t201 / 0.2e1) * t276 + (t213 + t204 / 0.2e1) * t273) * t222;
t87 = t111 * pkin(2);
t69 = t87 + t542;
t593 = t202 * t271;
t596 = t199 * t274;
t688 = t220 * (t596 / 0.4e1 + t593 / 0.4e1);
t592 = t203 * t272;
t595 = t200 * t275;
t687 = t221 * (t595 / 0.4e1 + t592 / 0.4e1);
t591 = t204 * t273;
t594 = t201 * t276;
t686 = t222 * (t594 / 0.4e1 + t591 / 0.4e1);
t153 = (t213 * t273 + t216 * t276) * t222;
t152 = (t212 * t272 + t215 * t275) * t221;
t151 = (t211 * t271 + t214 * t274) * t220;
t440 = pkin(2) * t441;
t679 = t112 * (pkin(2) * (0.1e1 + t429) + t440) - t399 * t139;
t678 = t113 * (pkin(2) * (0.1e1 + t430) + t440) - t399 * t140;
t677 = t114 * (pkin(2) * (0.1e1 + t431) + t440) - t399 * t141;
t673 = 2 * rSges(3,3);
t672 = -0.2e1 * qJ(3,1);
t671 = -0.2e1 * qJ(3,2);
t670 = -0.2e1 * qJ(3,3);
t426 = -pkin(2) / 0.2e1;
t660 = pkin(2) / 0.2e1;
t659 = m(1) * rSges(1,2);
t658 = m(2) * rSges(2,1);
t657 = pkin(2) * t63;
t656 = pkin(2) * t66;
t655 = pkin(2) * t69;
t420 = pkin(2) + rSges(3,1);
t648 = m(3) * t220;
t647 = m(3) * t221;
t646 = m(3) * t222;
t277 = (t357 * t414 + t360 * t417) * pkin(1) + t420;
t645 = m(3) * t277;
t278 = (t358 * t415 + t361 * t418) * pkin(1) + t420;
t644 = m(3) * t278;
t279 = (t359 * t416 + t362 * t419) * pkin(1) + t420;
t643 = m(3) * t279;
t402 = qJ(3,3) + rSges(3,3);
t642 = m(3) * t402;
t403 = qJ(3,2) + rSges(3,3);
t641 = m(3) * t403;
t404 = qJ(3,1) + rSges(3,3);
t640 = m(3) * t404;
t639 = m(3) * t420;
t638 = pkin(1) * t151 ^ 2;
t637 = pkin(1) * t152 ^ 2;
t636 = pkin(1) * t153 ^ 2;
t632 = pkin(1) * t360;
t631 = pkin(1) * t361;
t630 = pkin(1) * t362;
t629 = pkin(2) * qJ(3,1);
t628 = pkin(2) * qJ(3,2);
t627 = pkin(2) * qJ(3,3);
t620 = t414 * pkin(2);
t619 = t415 * pkin(2);
t618 = t416 * pkin(2);
t145 = t442 * t151;
t70 = t76 * pkin(2);
t617 = t145 + t70;
t146 = t442 * t152;
t71 = t77 * pkin(2);
t616 = t146 + t71;
t147 = t442 * t153;
t72 = t78 * pkin(2);
t615 = t147 + t72;
t613 = qJ(3,1) * t401;
t610 = qJ(3,2) * t401;
t607 = qJ(3,3) * t401;
t605 = t112 * t139;
t95 = t112 * t429;
t604 = t113 * t140;
t97 = t113 * t430;
t603 = t114 * t141;
t99 = t114 * t431;
t133 = (t593 + t596) * t220;
t535 = 0.1e1 / 0.4e1 + t441 / 0.4e1;
t256 = -t342 * t392 + t471 - t429 / 0.4e1 + t535;
t217 = 0.1e1 / ((0.4e1 * t256 * t351 - t445) * t442 - t676);
t602 = t133 * t217;
t134 = (t592 + t595) * t221;
t257 = -t343 * t393 + t472 - t430 / 0.4e1 + t535;
t218 = 0.1e1 / ((0.4e1 * t257 * t352 - t446) * t442 - t675);
t601 = t134 * t218;
t135 = (t591 + t594) * t222;
t258 = -t344 * t394 + t473 - t431 / 0.4e1 + t535;
t219 = 0.1e1 / ((0.4e1 * t258 * t353 - t447) * t442 - t674);
t600 = t135 * t219;
t599 = t151 * t217;
t598 = t152 * t218;
t597 = t153 * t219;
t578 = t351 * t442;
t577 = t352 * t442;
t576 = t353 * t442;
t551 = Icges(3,2) + Icges(2,3);
t550 = 0.2e1 * t199 * t589 + 0.2e1 * t202 * t590;
t549 = 0.2e1 * t200 * t587 + 0.2e1 * t203 * t588;
t548 = 0.2e1 * t201 * t585 + 0.2e1 * t204 * t586;
t547 = -t181 / 0.4e1 - t184 / 0.4e1;
t545 = -t182 / 0.4e1 - t185 / 0.4e1;
t543 = -t183 / 0.4e1 - t186 / 0.4e1;
t503 = t214 * t589;
t506 = t211 * t590;
t541 = t506 / 0.2e1 + t503 / 0.2e1;
t502 = t215 * t587;
t505 = t212 * t588;
t540 = t505 / 0.2e1 + t502 / 0.2e1;
t501 = t216 * t585;
t504 = t213 * t586;
t539 = t504 / 0.2e1 + t501 / 0.2e1;
t538 = -t503 / 0.4e1 - t506 / 0.4e1;
t537 = -t502 / 0.4e1 - t505 / 0.4e1;
t536 = -t501 / 0.4e1 - t504 / 0.4e1;
t534 = t392 - 0.1e1 / 0.2e1;
t533 = t393 - 0.1e1 / 0.2e1;
t532 = t394 - 0.1e1 / 0.2e1;
t421 = m(2) * rSges(2,2);
t329 = t421 - t642;
t338 = t639 + t658;
t265 = t329 * t414 + t338 * t417;
t530 = t265 * t632;
t330 = t421 - t641;
t266 = t330 * t415 + t338 * t418;
t529 = t266 * t631;
t331 = t421 - t640;
t267 = t331 * t416 + t338 * t419;
t528 = t267 * t630;
t527 = t325 * t635;
t526 = t326 * t634;
t525 = t327 * t633;
t89 = (t596 / 0.2e1 + t593 / 0.2e1) * t220 + t541;
t518 = t89 * pkin(2) + t546;
t91 = (t595 / 0.2e1 + t592 / 0.2e1) * t221 + t540;
t517 = t91 * pkin(2) + t544;
t93 = (t594 / 0.2e1 + t591 / 0.2e1) * t222 + t539;
t516 = t93 * pkin(2) + t542;
t512 = t109 * t133 * t329;
t511 = t110 * t134 * t330;
t510 = t111 * t135 * t331;
t509 = t220 * t605;
t508 = t221 * t604;
t507 = t222 * t603;
t494 = qJ(3,3) * t563;
t493 = qJ(3,2) * t562;
t492 = qJ(3,1) * t561;
t476 = t534 * qJ(3,3);
t475 = t533 * qJ(3,2);
t474 = t532 * qJ(3,1);
t467 = (rSges(3,3) ^ 2) + t441 + (0.2e1 * pkin(2) + rSges(3,1)) * rSges(3,1);
t40 = -pkin(2) * t139 + t112 * t441 + t95;
t41 = -pkin(2) * t140 + t113 * t441 + t97;
t42 = -pkin(2) * t141 + t114 * t441 + t99;
t375 = rSges(2,1) ^ 2 + rSges(2,2) ^ 2;
t466 = t375 * m(2) + t551;
t297 = qJ(3,3) * t673 + t429 + t467;
t298 = qJ(3,2) * t673 + t430 + t467;
t299 = qJ(3,1) * t673 + t431 + t467;
t259 = m(3) * t297 + t466;
t260 = m(3) * t298 + t466;
t261 = m(3) * t299 + t466;
t444 = Icges(1,3) + (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + (t442 + t375) * m(2) + t551;
t428 = rSges(4,1);
t427 = rSges(4,2);
t413 = xDDP(1);
t412 = xDDP(2);
t411 = xDDP(3);
t395 = t422 ^ 2;
t328 = m(1) * rSges(1,1) + (m(3) + m(2)) * pkin(1);
t324 = t555 + t618;
t323 = t557 + t619;
t322 = t559 + t620;
t321 = (t660 + rSges(3,1) / 0.2e1) * m(3) + t658 / 0.2e1;
t317 = g(1) * t368 + g(2) * t365;
t316 = g(1) * t367 + g(2) * t364;
t315 = g(1) * t366 + g(2) * t363;
t314 = -g(1) * t365 + g(2) * t368;
t313 = -g(1) * t364 + g(2) * t367;
t312 = -g(1) * t363 + g(2) * t366;
t290 = -t380 * t427 + t381 * t428;
t289 = t380 * t428 + t381 * t427;
t264 = t331 * t419 - t338 * t416;
t263 = t330 * t418 - t338 * t415;
t262 = t329 * t417 - t338 * t414;
t255 = t264 * t633;
t254 = t263 * t634;
t253 = t262 * t635;
t243 = -t293 * t411 - t296 * t395 + t413;
t242 = -t292 * t411 - t295 * t395 + t413;
t241 = -t291 * t411 - t294 * t395 + t413;
t240 = -t293 * t395 + t296 * t411 + t412;
t239 = -t292 * t395 + t295 * t411 + t412;
t238 = -t291 * t395 + t294 * t411 + t412;
t228 = -t255 + t261 + t528;
t227 = -t254 + t260 + t529;
t226 = -t253 + t259 + t530;
t225 = 0.2e1 * t528 - 0.2e1 * t255 + (t442 + t299) * m(3) + t444;
t224 = 0.2e1 * t529 - 0.2e1 * t254 + (t442 + t298) * m(3) + t444;
t223 = 0.2e1 * t530 - 0.2e1 * t253 + (t442 + t297) * m(3) + t444;
t156 = (t213 * t296 - t216 * t293) * t222;
t155 = (t212 * t295 - t215 * t292) * t221;
t154 = (t211 * t294 - t214 * t291) * t220;
t144 = (t207 * t296 - t210 * t293) * t222;
t143 = (t206 * t295 - t209 * t292) * t221;
t142 = (t205 * t294 - t208 * t291) * t220;
t138 = (-t201 * t293 + t204 * t296) * t222;
t137 = (-t200 * t292 + t203 * t295) * t221;
t136 = (-t199 * t291 + t202 * t294) * t220;
t132 = (-t201 * t420 - t216 * t279 + t210) * t646;
t131 = (-t200 * t420 - t215 * t278 + t209) * t647;
t130 = (-t199 * t420 - t214 * t277 + t208) * t648;
t129 = (-t204 * t420 - t213 * t279 + t207) * t646;
t128 = (-t203 * t420 - t212 * t278 + t206) * t647;
t127 = (-t202 * t420 - t211 * t277 + t205) * t648;
t126 = (t201 * t261 - t210 * t639 + t216 * t228) * t222;
t125 = (t200 * t260 - t209 * t639 + t215 * t227) * t221;
t124 = (t199 * t259 - t208 * t639 + t214 * t226) * t220;
t123 = (t204 * t261 - t207 * t639 + t213 * t228) * t222;
t122 = (t203 * t260 - t206 * t639 + t212 * t227) * t221;
t121 = (t202 * t259 - t205 * t639 + t211 * t226) * t220;
t120 = (t201 * t228 - t210 * t643 + t216 * t225) * t222;
t119 = (t200 * t227 - t209 * t644 + t215 * t224) * t221;
t118 = (t199 * t226 - t208 * t645 + t214 * t223) * t220;
t117 = (t204 * t228 - t207 * t643 + t213 * t225) * t222;
t116 = (t203 * t227 - t206 * t644 + t212 * t224) * t221;
t115 = (t202 * t226 - t205 * t645 + t211 * t223) * t220;
t98 = (0.2e1 * t153 + t548) * t431;
t96 = (0.2e1 * t152 + t549) * t430;
t94 = (0.2e1 * t151 + t550) * t429;
t92 = t539 + t686;
t90 = t540 + t687;
t88 = t541 + t688;
t81 = (-t138 * t420 - t156 * t279 + t144) * m(3);
t80 = (-t137 * t420 - t155 * t278 + t143) * m(3);
t79 = (-t136 * t420 - t154 * t277 + t142) * m(3);
t75 = t621 + t542;
t74 = t622 + t544;
t73 = t623 + t546;
t68 = t87 + t543;
t67 = -t186 / 0.3e1 - t183 / 0.3e1 + ((t216 + t201 / 0.3e1) * t276 + (t213 + t204 / 0.3e1) * t273) * pkin(2) * t222;
t65 = t86 + t545;
t64 = -t185 / 0.3e1 - t182 / 0.3e1 + ((t215 + t200 / 0.3e1) * t275 + (t212 + t203 / 0.3e1) * t272) * pkin(2) * t221;
t62 = t85 + t547;
t61 = -t184 / 0.3e1 - t181 / 0.3e1 + ((t214 + t199 / 0.3e1) * t274 + (t211 + t202 / 0.3e1) * t271) * pkin(2) * t220;
t60 = 0.2e1 * t603 * t640;
t59 = 0.2e1 * t604 * t641;
t58 = 0.2e1 * t605 * t642;
t57 = t138 * t261 - t144 * t639 + t156 * t228;
t56 = t137 * t260 - t143 * t639 + t155 * t227;
t55 = t136 * t259 - t142 * t639 + t154 * t226;
t54 = t138 * t228 - t144 * t643 + t156 * t225;
t53 = t137 * t227 - t143 * t644 + t155 * t224;
t52 = t136 * t226 - t142 * t645 + t154 * t223;
t51 = t72 - t99;
t50 = t99 + t72;
t49 = t98 + t72;
t48 = t71 - t97;
t47 = t97 + t71;
t46 = t96 + t71;
t45 = t70 - t95;
t44 = t95 + t70;
t43 = t94 + t70;
t39 = pkin(2) * t99 + t399 * t78;
t38 = pkin(2) * t97 + t399 * t77;
t37 = pkin(2) * t95 + t399 * t76;
t36 = -t111 * t431 + t655;
t35 = -t110 * t430 + t656;
t34 = -t109 * t429 + t657;
t33 = t42 - t153;
t32 = t41 - t152;
t31 = t40 - t151;
t30 = t99 + t615;
t29 = (0.4e1 * t153 + t548) * t431 + t615;
t28 = t97 + t616;
t27 = (0.4e1 * t152 + t549) * t430 + t616;
t26 = t95 + t617;
t25 = (0.4e1 * t151 + t550) * t429 + t617;
t24 = t147 + t153 + t42;
t23 = t146 + t152 + t41;
t22 = t145 + t151 + t40;
t21 = -t153 * t141 * m(3) + ((t153 * t420 - t141) * m(3) + t153 * t658 + t321 * t135) * t135;
t20 = -t152 * t140 * m(3) + ((t152 * t420 - t140) * m(3) + t152 * t658 + t321 * t134) * t134;
t19 = -t151 * t139 * m(3) + ((t151 * t420 - t139) * m(3) + t151 * t658 + t321 * t133) * t133;
t18 = (0.4e1 * (t153 * t258 * t633 + t33 * t555 / 0.4e1 + t39 * t416 / 0.4e1) * t630 + (t33 * t612 - t39 * t419) * t633 - t689 + (t282 * t664 - t629 * t649 - t498) * t147) * t597 + (-t689 + ((t416 * t677 + t42 * t555) * t362 + (-t419 * t677 + t42 * t612) * t359) * pkin(1)) * t600 + (-qJ(3,1) + ((pkin(2) * t555 + t399 * t416) * t362 - (-pkin(2) * t612 + t399 * t419) * t359) * pkin(1)) * t507;
t17 = (0.4e1 * (t152 * t257 * t634 + t32 * t557 / 0.4e1 + t38 * t415 / 0.4e1) * t631 + (t32 * t609 - t38 * t418) * t634 - t690 + (t281 * t665 - t628 * t650 - t499) * t146) * t598 + (-t690 + ((t41 * t557 + t415 * t678) * t361 + (t41 * t609 - t418 * t678) * t358) * pkin(1)) * t601 + (-qJ(3,2) + ((pkin(2) * t557 + t399 * t415) * t361 - (-pkin(2) * t609 + t399 * t418) * t358) * pkin(1)) * t508;
t16 = (0.4e1 * (t151 * t256 * t635 + t31 * t559 / 0.4e1 + t37 * t414 / 0.4e1) * t632 + (t31 * t606 - t37 * t417) * t635 - t691 + (t280 * t666 - t627 * t651 - t500) * t145) * t599 + (-t691 + ((t40 * t559 + t414 * t679) * t360 + (t40 * t606 - t417 * t679) * t357) * pkin(1)) * t602 + (-qJ(3,3) + ((pkin(2) * t559 + t399 * t414) * t360 - (-pkin(2) * t606 + t399 * t417) * t357) * pkin(1)) * t509;
t15 = (0.4e1 * (t110 * t475 + t556 * t66) * t577 + (0.4e1 * (t90 * pkin(2) + t110 * t514 - t393 * t66 + t545) * t634 - 0.3e1 * t64 * t557 + t27 * t415) * t631 - (t27 * t418 + 0.3e1 * t609 * t64) * t634 - 0.2e1 * t110 * t493 - 0.2e1 * t66 * t489 - qJ(3,2) * (t146 + t96 + 0.2e1 * t71)) * t598 + (0.2e1 * (t113 * t475 + t556 * t77) * t577 + 0.2e1 * ((t113 * t514 - t393 * t77 + t517) * t634 - t77 * t557 / 0.2e1 + t46 * t415 / 0.2e1) * t631 - (t418 * t46 + t609 * t77) * t634 - t113 * t493 - t77 * t489 + t47 * t671) * t601 + 0.2e1 * (-(t533 * t634 - t619 / 0.2e1 + t557 / 0.2e1) * t631 + t681 * t634 / 0.2e1 - t628 + (t352 - 0.1e1 / 0.2e1) * t489) * t508;
t14 = (0.4e1 * (t111 * t474 + t560 * t69) * t576 + (0.4e1 * (t92 * pkin(2) + t111 * t515 - t394 * t69 + t543) * t633 - 0.3e1 * t67 * t555 + t29 * t416) * t630 - (t29 * t419 + 0.3e1 * t612 * t67) * t633 - 0.2e1 * t111 * t492 - 0.2e1 * t69 * t491 - qJ(3,1) * (t147 + t98 + 0.2e1 * t72)) * t597 + (0.2e1 * (t114 * t474 + t560 * t78) * t576 + 0.2e1 * ((t114 * t515 - t394 * t78 + t516) * t633 - t78 * t555 / 0.2e1 + t49 * t416 / 0.2e1) * t630 - (t419 * t49 + t612 * t78) * t633 - t114 * t492 - t78 * t491 + t50 * t672) * t600 + 0.2e1 * (-(t532 * t633 - t618 / 0.2e1 + t555 / 0.2e1) * t630 + t680 * t633 / 0.2e1 - t629 + (t353 - 0.1e1 / 0.2e1) * t491) * t507;
t13 = (0.4e1 * (t109 * t476 + t558 * t63) * t578 + (0.4e1 * (t88 * pkin(2) + t109 * t513 - t392 * t63 + t547) * t635 - 0.3e1 * t61 * t559 + t25 * t414) * t632 - (t25 * t417 + 0.3e1 * t606 * t61) * t635 - 0.2e1 * t109 * t494 - 0.2e1 * t63 * t490 - qJ(3,3) * (t145 + t94 + 0.2e1 * t70)) * t599 + (0.2e1 * (t112 * t476 + t558 * t76) * t578 + 0.2e1 * ((t112 * t513 - t392 * t76 + t518) * t635 - t76 * t559 / 0.2e1 + t43 * t414 / 0.2e1) * t632 - (t417 * t43 + t606 * t76) * t635 - t112 * t494 - t76 * t490 + t44 * t670) * t602 + 0.2e1 * (-(t534 * t635 - t620 / 0.2e1 + t559 / 0.2e1) * t632 + t682 * t635 / 0.2e1 - t627 + (t351 - 0.1e1 / 0.2e1) * t490) * t509;
t12 = (-0.4e1 * (t35 * t556 + t484 * t65) * t577 - (0.8e1 * ((t90 * t430 - t656 / 0.2e1) * t393 + t65 * t514 + ((-t595 / 0.8e1 - t592 / 0.8e1) * t221 + t537) * t430 + t656 / 0.4e1) * t634 + t23 * t557 + t28 * t619) * t631 - (t23 * t609 - t28 * t378) * t634 + 0.4e1 * t65 * t493 + 0.2e1 * t35 * t489 + (t442 * t66 + t517) * t671) * t598 + (-0.2e1 * (t48 * t556 + t484 * t74) * t577 - 0.4e1 * ((t91 * t430 - t71 / 0.2e1) * t393 + t74 * t514 + (t537 - t687) * t430 + t71 / 0.4e1) * t634 * t631 + 0.2e1 * t74 * t493 + t48 * t489 - t77 * t610 + (-t323 * t631 - t526) * t47) * t601 - 0.2e1 * ((pkin(2) * t556 + t475) * t577 - ((pkin(2) * t393 + t426 - t514) * t634 + t323 * t426) * t631 + t526 * t660 - t493 / 0.2e1 + t489 * t426 + t610 / 0.2e1) * t508;
t11 = (-0.4e1 * (t36 * t560 + t483 * t68) * t576 - (0.8e1 * ((t92 * t431 - t655 / 0.2e1) * t394 + t68 * t515 + ((-t594 / 0.8e1 - t591 / 0.8e1) * t222 + t536) * t431 + t655 / 0.4e1) * t633 + t24 * t555 + t30 * t618) * t630 - (t24 * t612 - t30 * t379) * t633 + 0.4e1 * t68 * t492 + 0.2e1 * t36 * t491 + (t442 * t69 + t516) * t672) * t597 + (-0.2e1 * (t483 * t75 + t51 * t560) * t576 - 0.4e1 * ((t93 * t431 - t72 / 0.2e1) * t394 + t75 * t515 + (t536 - t686) * t431 + t72 / 0.4e1) * t633 * t630 + 0.2e1 * t75 * t492 + t51 * t491 - t78 * t613 + (-t324 * t630 - t525) * t50) * t600 - 0.2e1 * ((pkin(2) * t560 + t474) * t576 - ((pkin(2) * t394 + t426 - t515) * t633 + t324 * t426) * t630 + t525 * t660 - t492 / 0.2e1 + t491 * t426 + t613 / 0.2e1) * t507;
t10 = (-0.4e1 * (t34 * t558 + t485 * t62) * t578 - (0.8e1 * ((t88 * t429 - t657 / 0.2e1) * t392 + t62 * t513 + ((-t596 / 0.8e1 - t593 / 0.8e1) * t220 + t538) * t429 + t657 / 0.4e1) * t635 + t22 * t559 + t26 * t620) * t632 - (t22 * t606 - t26 * t377) * t635 + 0.4e1 * t62 * t494 + 0.2e1 * t34 * t490 + (t442 * t63 + t518) * t670) * t599 + (-0.2e1 * (t45 * t558 + t485 * t73) * t578 - 0.4e1 * ((t89 * t429 - t70 / 0.2e1) * t392 + t73 * t513 + (t538 - t688) * t429 + t70 / 0.4e1) * t635 * t632 + 0.2e1 * t73 * t494 + t45 * t490 - t76 * t607 + (-t322 * t632 - t527) * t44) * t602 - 0.2e1 * ((pkin(2) * t558 + t476) * t578 - ((t392 * pkin(2) + t426 - t513) * t635 + t322 * t426) * t632 + t527 * t660 - t494 / 0.2e1 + t490 * t426 + t607 / 0.2e1) * t509;
t9 = (-t114 ^ 2 * t404 + t420 * t11 + t279 * t18 + t314 * t362 - t317 * t359 - t14 + (-t359 * t419 + t362 * t416) * t636) * m(3);
t8 = (-t113 ^ 2 * t403 + t420 * t12 + t278 * t17 + t313 * t361 - t316 * t358 - t15 + (-t358 * t418 + t361 * t415) * t637) * m(3);
t7 = (-t112 ^ 2 * t402 + t420 * t10 + t277 * t16 + t312 * t360 - t315 * t357 - t13 + (-t357 * t417 + t360 * t414) * t638) * m(3);
t6 = -t228 * t18 - t261 * t11 + t14 * t639 + t60 + ((-t314 * t420 - t317 * t404) * m(3) + m(2) * (-rSges(2,1) * t314 + rSges(2,2) * t317)) * t362 + t359 * ((-t314 * t404 + t317 * t420) * m(3) + m(2) * (rSges(2,1) * t317 + rSges(2,2) * t314)) + (t264 * t362 + t267 * t359) * t636;
t5 = -t227 * t17 - t260 * t12 + t15 * t639 + t59 + ((-t313 * t420 - t316 * t403) * m(3) + m(2) * (-rSges(2,1) * t313 + rSges(2,2) * t316)) * t361 + t358 * ((-t313 * t403 + t316 * t420) * m(3) + m(2) * (rSges(2,1) * t316 + rSges(2,2) * t313)) + (t263 * t361 + t266 * t358) * t637;
t4 = -t226 * t16 - t259 * t10 + t13 * t639 + t58 + ((-t312 * t420 - t315 * t402) * m(3) + m(2) * (-rSges(2,1) * t312 + rSges(2,2) * t315)) * t360 + t357 * ((-t312 * t402 + t315 * t420) * m(3) + m(2) * (rSges(2,1) * t315 + rSges(2,2) * t312)) + (t262 * t360 + t265 * t357) * t638;
t3 = -t225 * t18 - t228 * t11 + t14 * t643 + t60 + (-t314 * t338 + t317 * t331) * t362 + (t314 * t331 + t317 * t338) * t359 + (-t314 * t328 + t317 * t659) * t419 + (t314 * t659 + t317 * t328) * t416 + (-(-t21 * t416 + t419 * t510) * t362 - (t21 * t419 + t416 * t510) * t359) * t531;
t2 = -t224 * t17 - t227 * t12 + t15 * t644 + t59 + (-t313 * t338 + t316 * t330) * t361 + (t313 * t330 + t316 * t338) * t358 + (-t313 * t328 + t316 * t659) * t418 + (t313 * t659 + t316 * t328) * t415 + (-(-t20 * t415 + t418 * t511) * t361 - (t20 * t418 + t415 * t511) * t358) * t531;
t1 = -t223 * t16 - t226 * t10 + t13 * t645 + t58 + (-t312 * t338 + t315 * t329) * t360 + (t312 * t329 + t315 * t338) * t357 + (-t312 * t328 + t315 * t659) * t417 + (t312 * t659 + t315 * t328) * t414 + (-(-t19 * t414 + t417 * t512) * t360 - (t19 * t417 + t414 * t512) * t357) * t531;
t82 = [(-t289 * t411 - t290 * t395 - g(1) + t413) * m(4) + ((t120 * t216 + t126 * t201 + t132 * t210) * t243 + (t120 * t213 + t126 * t204 + t132 * t207) * t240 + t216 * t3 + t201 * t6 + t210 * t9) * t222 + ((t119 * t215 + t125 * t200 + t131 * t209) * t242 + (t119 * t212 + t125 * t203 + t131 * t206) * t239 + t215 * t2 + t200 * t5 + t209 * t8) * t221 + ((t118 * t214 + t124 * t199 + t130 * t208) * t241 + (t118 * t211 + t124 * t202 + t130 * t205) * t238 + t214 * t1 + t199 * t4 + t208 * t7) * t220; (-t289 * t395 + t290 * t411 - g(2) + t412) * m(4) + ((t117 * t216 + t123 * t201 + t129 * t210) * t243 + (t117 * t213 + t123 * t204 + t129 * t207) * t240 + t213 * t3 + t204 * t6 + t207 * t9) * t222 + ((t116 * t215 + t122 * t200 + t128 * t209) * t242 + (t116 * t212 + t122 * t203 + t128 * t206) * t239 + t212 * t2 + t203 * t5 + t206 * t8) * t221 + ((t115 * t214 + t121 * t199 + t127 * t208) * t241 + (t115 * t211 + t121 * t202 + t127 * t205) * t238 + t211 * t1 + t202 * t4 + t205 * t7) * t220; Icges(4,3) * t411 + t154 * t1 + t136 * t4 + t137 * t5 + t138 * t6 + t142 * t7 + t143 * t8 + t144 * t9 + t155 * t2 + t156 * t3 + (-t289 * t413 + t290 * t412 + (t427 ^ 2 + t428 ^ 2) * t411 + (g(1) * t428 + g(2) * t427) * t380 + (g(1) * t427 - g(2) * t428) * t381) * m(4) + ((t201 * t57 + t210 * t81 + t216 * t54) * t243 + (t204 * t57 + t207 * t81 + t213 * t54) * t240) * t222 + ((t200 * t56 + t209 * t80 + t215 * t53) * t242 + (t203 * t56 + t206 * t80 + t212 * t53) * t239) * t221 + ((t199 * t55 + t208 * t79 + t214 * t52) * t241 + (t202 * t55 + t205 * t79 + t211 * t52) * t238) * t220;];
tauX  = t82;
