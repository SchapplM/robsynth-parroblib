% Calculate vector of inverse dynamics forces for parallel robot
% P3RRP1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [4x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,d1,d2]';
% m [4x1]
%   mass of all robot links (including platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% tauX [3x1]
%   forces of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)
%   in platform coordinates xP

% Quelle: HybrDyn-Toolbox
% Datum: 2018-12-20 18:08
% Revision: f9720dcdc4676342702b46a014e894344751412a
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für mechatronische Systeme, Universität Hannover

function tauX = P3RRP1A0_invdyn_para_pf_slag_vp2(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(4,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [4 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: pkin has to be [4x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRP1A0_invdyn_para_pf_slag_vp2: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2018-12-20 18:00:34
% EndTime: 2018-12-20 18:01:24
% DurationCPUTime: 51.76s
% Computational Cost: add. (796260->1005), mult. (1738048->1517), div. (15165->6), fcn. (731465->26), ass. (0->582)
t401 = legFrame(3,3);
t357 = sin(t401);
t332 = t357 * qJ(3,3);
t360 = cos(t401);
t623 = pkin(2) * t360;
t288 = t332 + t623;
t335 = t357 * pkin(2);
t605 = qJ(3,3) * t360;
t291 = t335 - t605;
t408 = sin(qJ(1,3));
t414 = cos(qJ(1,3));
t247 = t288 * t414 + t291 * t408;
t581 = t288 * t408;
t248 = t291 * t414 - t581;
t438 = pkin(1) ^ 2;
t554 = t408 * t414;
t485 = t438 * t554;
t306 = t357 * t485;
t519 = pkin(2) * t605;
t321 = -0.2e1 * t519;
t392 = qJ(1,3) + qJ(2,3);
t351 = cos(t392);
t342 = t351 ^ 2;
t348 = sin(t392);
t466 = t360 * t485;
t427 = qJ(3,3) ^ 2;
t388 = t414 ^ 2;
t557 = t388 * t438;
t476 = -0.2e1 * t427 - t557;
t566 = t348 * t351;
t325 = pkin(2) * t332;
t658 = -0.2e1 * t325;
t373 = pkin(2) * t414;
t603 = qJ(3,3) * t408;
t672 = -t603 - t373;
t675 = 0.2e1 * t427 + t438 - t557;
t202 = (t360 * t675 + t306 + t658) * t351 + (t357 * t476 + t321 - t466) * t348 + (t247 * t342 - t248 * t566 - 0.2e1 * t332 * t414 + t360 * t672) * pkin(1);
t437 = pkin(2) ^ 2;
t400 = -t437 / 0.2e1;
t365 = -t427 + t437;
t345 = 0.1e1 + t365;
t552 = t414 * qJ(3,3);
t506 = t408 * t552;
t468 = pkin(2) * t506;
t440 = -t345 * t388 + 0.2e1 * t468;
t644 = -t427 / 0.2e1;
t518 = 0.1e1 / 0.2e1 + t644;
t655 = 0.2e1 * t342;
t641 = 0.2e1 * t388 - 0.1e1;
t482 = t641 * qJ(3,3);
t496 = t345 * t554;
t268 = pkin(2) * t482 + t496;
t396 = 0.2e1 + t438;
t635 = pkin(1) * t348;
t680 = 0.2e1 * pkin(1);
t666 = -(-(t268 * t635 + t603) * t351 + t348 * t552) * t680 - t427 * t396;
t217 = 0.1e1 / (((t400 - t440 - t518) * t655 + t440) * t438 + t666);
t423 = xP(3);
t376 = sin(t423);
t377 = cos(t423);
t430 = koppelP(3,2);
t433 = koppelP(3,1);
t285 = -t376 * t430 + t377 * t433;
t419 = xDP(3);
t420 = xDP(2);
t262 = t285 * t419 + t420;
t587 = t217 * t262;
t178 = t202 * t587;
t318 = 0.2e1 * t325;
t205 = (-t357 * t675 + t321 + t466) * t351 + (t360 * t476 + t306 + t318) * t348 + (-t248 * t342 - t247 * t566 + (t335 - 0.2e1 * t605) * t414 + t408 * t332) * pkin(1);
t282 = t376 * t433 + t377 * t430;
t421 = xDP(1);
t265 = -t282 * t419 + t421;
t586 = t217 * t265;
t181 = t205 * t586;
t136 = t181 + t178;
t274 = t357 * t365 + t321;
t399 = t437 / 0.2e1;
t652 = -0.2e1 * t408;
t226 = t274 * t414 + ((t399 + t644) * t360 + t325) * t652;
t232 = (t360 * t365 + t318) * t414 + t274 * t408;
t312 = -t373 + t603;
t397 = 0.1e1 + t438;
t289 = t332 - t623;
t290 = t335 + t605;
t453 = -t289 * t554 + t290 * t388;
t454 = -t289 * t388 - t290 * t554;
t560 = t351 * t360;
t565 = t348 * t357;
t196 = (t397 * t565 - t560) * qJ(3,3) + (t226 * t342 + t232 * t566 + t291 * t312) * pkin(1) + ((-t453 + t335) * t351 + t454 * t348) * t438;
t493 = t348 * t605;
t578 = t332 * t351;
t199 = -t397 * t493 - t578 + (t226 * t566 - t232 * t342 - t288 * t312) * pkin(1) + ((t454 - t623) * t351 + t453 * t348) * t438;
t271 = t345 * t357 + t321;
t569 = t345 * t360;
t229 = (t318 + t569) * t414 + t408 * t271;
t259 = t271 * t414;
t328 = t399 + t518;
t208 = -t493 - t578 + (t229 * t342 - (t259 + (t328 * t360 + t325) * t652) * t566 - (t360 * t437 + t325 + t360) * t414 + qJ(3,3) * t581) * pkin(1);
t211 = (-t560 + t565) * qJ(3,3) + (-t259 * t342 - t229 * t566 + (t357 * t437 + t357 - t519) * t414 + (-(t658 - t569) * t342 - qJ(3,3) * t291) * t408) * pkin(1);
t109 = ((t196 + t211) * t265 + (t199 + t208) * t262) * t217;
t620 = t109 * pkin(2);
t73 = t620 - t136;
t683 = t73 * qJ(3,3);
t402 = legFrame(2,3);
t358 = sin(t402);
t333 = t358 * qJ(3,2);
t361 = cos(t402);
t622 = pkin(2) * t361;
t292 = t333 + t622;
t336 = t358 * pkin(2);
t608 = qJ(3,2) * t361;
t295 = t336 - t608;
t410 = sin(qJ(1,2));
t416 = cos(qJ(1,2));
t249 = t292 * t416 + t295 * t410;
t580 = t292 * t410;
t250 = t295 * t416 - t580;
t550 = t416 * t410;
t487 = t438 * t550;
t307 = t358 * t487;
t520 = pkin(2) * t608;
t322 = -0.2e1 * t520;
t393 = qJ(1,2) + qJ(2,2);
t352 = cos(t393);
t343 = t352 ^ 2;
t349 = sin(t393);
t465 = t361 * t487;
t428 = qJ(3,2) ^ 2;
t389 = t416 ^ 2;
t556 = t389 * t438;
t475 = -0.2e1 * t428 - t556;
t564 = t349 * t352;
t326 = pkin(2) * t333;
t657 = -0.2e1 * t326;
t374 = pkin(2) * t416;
t606 = qJ(3,2) * t410;
t671 = -t606 - t374;
t674 = 0.2e1 * t428 + t438 - t556;
t203 = (t361 * t674 + t307 + t657) * t352 + (t358 * t475 + t322 - t465) * t349 + (t249 * t343 - t250 * t564 - 0.2e1 * t333 * t416 + t361 * t671) * pkin(1);
t367 = -t428 + t437;
t346 = 0.1e1 + t367;
t507 = qJ(3,2) * t550;
t469 = pkin(2) * t507;
t441 = -t346 * t389 + 0.2e1 * t469;
t643 = -t428 / 0.2e1;
t517 = 0.1e1 / 0.2e1 + t643;
t654 = 0.2e1 * t343;
t640 = 0.2e1 * t389 - 0.1e1;
t481 = t640 * qJ(3,2);
t495 = t346 * t550;
t269 = pkin(2) * t481 + t495;
t551 = t416 * qJ(3,2);
t634 = pkin(1) * t349;
t665 = -(-(t269 * t634 + t606) * t352 + t349 * t551) * t680 - t428 * t396;
t218 = 0.1e1 / (((t400 - t441 - t517) * t654 + t441) * t438 + t665);
t431 = koppelP(2,2);
t434 = koppelP(2,1);
t286 = -t376 * t431 + t377 * t434;
t263 = t286 * t419 + t420;
t585 = t218 * t263;
t179 = t203 * t585;
t319 = 0.2e1 * t326;
t206 = (-t358 * t674 + t322 + t465) * t352 + (t361 * t475 + t307 + t319) * t349 + (-t250 * t343 - t249 * t564 + (t336 - 0.2e1 * t608) * t416 + t410 * t333) * pkin(1);
t283 = t376 * t434 + t377 * t431;
t266 = -t283 * t419 + t421;
t584 = t218 * t266;
t182 = t206 * t584;
t137 = t182 + t179;
t275 = t358 * t367 + t322;
t651 = -0.2e1 * t410;
t227 = t275 * t416 + ((t399 + t643) * t361 + t326) * t651;
t233 = (t361 * t367 + t319) * t416 + t275 * t410;
t313 = -t374 + t606;
t293 = t333 - t622;
t294 = t336 + t608;
t451 = -t293 * t550 + t294 * t389;
t452 = -t293 * t389 - t294 * t550;
t559 = t352 * t361;
t563 = t349 * t358;
t197 = (t397 * t563 - t559) * qJ(3,2) + (t227 * t343 + t233 * t564 + t295 * t313) * pkin(1) + ((-t451 + t336) * t352 + t452 * t349) * t438;
t492 = t349 * t608;
t577 = t333 * t352;
t200 = -t397 * t492 - t577 + (t227 * t564 - t233 * t343 - t292 * t313) * pkin(1) + ((t452 - t622) * t352 + t451 * t349) * t438;
t272 = t346 * t358 + t322;
t568 = t346 * t361;
t230 = (t319 + t568) * t416 + t410 * t272;
t260 = t272 * t416;
t329 = t399 + t517;
t209 = -t492 - t577 + (t230 * t343 - (t260 + (t329 * t361 + t326) * t651) * t564 - (t361 * t437 + t326 + t361) * t416 + qJ(3,2) * t580) * pkin(1);
t212 = (-t559 + t563) * qJ(3,2) + (-t260 * t343 - t230 * t564 + (t358 * t437 + t358 - t520) * t416 + (-(t657 - t568) * t343 - qJ(3,2) * t295) * t410) * pkin(1);
t110 = ((t197 + t212) * t266 + (t200 + t209) * t263) * t218;
t619 = t110 * pkin(2);
t74 = t619 - t137;
t682 = t74 * qJ(3,2);
t403 = legFrame(1,3);
t359 = sin(t403);
t334 = t359 * qJ(3,1);
t362 = cos(t403);
t621 = pkin(2) * t362;
t296 = t334 + t621;
t337 = t359 * pkin(2);
t611 = qJ(3,1) * t362;
t299 = t337 - t611;
t412 = sin(qJ(1,1));
t418 = cos(qJ(1,1));
t251 = t296 * t418 + t299 * t412;
t579 = t296 * t412;
t252 = t299 * t418 - t579;
t553 = t412 * t418;
t486 = t438 * t553;
t308 = t359 * t486;
t521 = pkin(2) * t611;
t323 = -0.2e1 * t521;
t394 = qJ(1,1) + qJ(2,1);
t353 = cos(t394);
t344 = t353 ^ 2;
t350 = sin(t394);
t464 = t362 * t486;
t429 = qJ(3,1) ^ 2;
t390 = t418 ^ 2;
t555 = t390 * t438;
t474 = -0.2e1 * t429 - t555;
t562 = t350 * t353;
t327 = pkin(2) * t334;
t656 = -0.2e1 * t327;
t375 = pkin(2) * t418;
t609 = qJ(3,1) * t412;
t670 = -t609 - t375;
t673 = 0.2e1 * t429 + t438 - t555;
t204 = (t362 * t673 + t308 + t656) * t353 + (t359 * t474 + t323 - t464) * t350 + (t251 * t344 - t252 * t562 - 0.2e1 * t334 * t418 + t362 * t670) * pkin(1);
t369 = -t429 + t437;
t347 = 0.1e1 + t369;
t549 = t418 * qJ(3,1);
t508 = t412 * t549;
t470 = pkin(2) * t508;
t442 = -t347 * t390 + 0.2e1 * t470;
t642 = -t429 / 0.2e1;
t516 = 0.1e1 / 0.2e1 + t642;
t653 = 0.2e1 * t344;
t639 = 0.2e1 * t390 - 0.1e1;
t480 = t639 * qJ(3,1);
t494 = t347 * t553;
t270 = pkin(2) * t480 + t494;
t633 = pkin(1) * t350;
t664 = -(-(t270 * t633 + t609) * t353 + t350 * t549) * t680 - t429 * t396;
t219 = 0.1e1 / (((t400 - t442 - t516) * t653 + t442) * t438 + t664);
t432 = koppelP(1,2);
t435 = koppelP(1,1);
t287 = -t376 * t432 + t377 * t435;
t264 = t287 * t419 + t420;
t583 = t219 * t264;
t180 = t204 * t583;
t320 = 0.2e1 * t327;
t207 = (-t359 * t673 + t323 + t464) * t353 + (t362 * t474 + t308 + t320) * t350 + (-t252 * t344 - t251 * t562 + (t337 - 0.2e1 * t611) * t418 + t412 * t334) * pkin(1);
t284 = t376 * t435 + t377 * t432;
t267 = -t284 * t419 + t421;
t582 = t219 * t267;
t183 = t207 * t582;
t138 = t183 + t180;
t276 = t359 * t369 + t323;
t650 = -0.2e1 * t412;
t228 = t276 * t418 + ((t399 + t642) * t362 + t327) * t650;
t234 = (t362 * t369 + t320) * t418 + t276 * t412;
t314 = -t375 + t609;
t297 = t334 - t621;
t298 = t337 + t611;
t449 = -t297 * t553 + t298 * t390;
t450 = -t297 * t390 - t298 * t553;
t558 = t353 * t362;
t561 = t350 * t359;
t198 = (t397 * t561 - t558) * qJ(3,1) + (t228 * t344 + t234 * t562 + t299 * t314) * pkin(1) + ((-t449 + t337) * t353 + t450 * t350) * t438;
t491 = t350 * t611;
t576 = t334 * t353;
t201 = -t397 * t491 - t576 + (t228 * t562 - t234 * t344 - t296 * t314) * pkin(1) + ((t450 - t621) * t353 + t449 * t350) * t438;
t273 = t347 * t359 + t323;
t567 = t347 * t362;
t231 = (t320 + t567) * t418 + t412 * t273;
t261 = t273 * t418;
t330 = t399 + t516;
t210 = -t491 - t576 + (t231 * t344 - (t261 + (t330 * t362 + t327) * t650) * t562 - (t362 * t437 + t327 + t362) * t418 + qJ(3,1) * t579) * pkin(1);
t213 = (-t558 + t561) * qJ(3,1) + (-t261 * t344 - t231 * t562 + (t359 * t437 + t359 - t521) * t418 + (-(t656 - t567) * t344 - qJ(3,1) * t299) * t412) * pkin(1);
t111 = ((t198 + t213) * t267 + (t201 + t210) * t264) * t219;
t618 = t111 * pkin(2);
t75 = t618 - t138;
t681 = t75 * qJ(3,1);
t395 = 0.1e1 + t437;
t422 = m(2) + m(3);
t679 = t422 * t438 + Ifges(1,3);
t540 = -t178 / 0.2e1 - t181 / 0.2e1;
t106 = ((t211 + t196 / 0.2e1) * t265 + (t208 + t199 / 0.2e1) * t262) * t217;
t82 = t106 * pkin(2);
t60 = t82 + t540;
t538 = -t179 / 0.2e1 - t182 / 0.2e1;
t107 = ((t212 + t197 / 0.2e1) * t266 + (t209 + t200 / 0.2e1) * t263) * t218;
t83 = t107 * pkin(2);
t63 = t83 + t538;
t536 = -t180 / 0.2e1 - t183 / 0.2e1;
t108 = ((t213 + t198 / 0.2e1) * t267 + (t210 + t201 / 0.2e1) * t264) * t219;
t84 = t108 * pkin(2);
t66 = t84 + t536;
t590 = t199 * t262;
t593 = t196 * t265;
t678 = t217 * (t593 / 0.4e1 + t590 / 0.4e1);
t589 = t200 * t263;
t592 = t197 * t266;
t677 = t218 * (t592 / 0.4e1 + t589 / 0.4e1);
t588 = t201 * t264;
t591 = t198 * t267;
t676 = t219 * (t591 / 0.4e1 + t588 / 0.4e1);
t150 = (t210 * t264 + t213 * t267) * t219;
t149 = (t209 * t263 + t212 * t266) * t218;
t148 = (t208 * t262 + t211 * t265) * t217;
t436 = pkin(2) * t437;
t669 = t109 * (pkin(2) * (0.1e1 + t427) + t436) - t395 * t136;
t668 = t110 * (pkin(2) * (0.1e1 + t428) + t436) - t395 * t137;
t667 = t111 * (pkin(2) * (0.1e1 + t429) + t436) - t395 * t138;
t662 = 2 * mrSges(3,3);
t661 = -0.2e1 * qJ(3,1);
t660 = -0.2e1 * qJ(3,2);
t659 = -0.2e1 * qJ(3,3);
t424 = -pkin(2) / 0.2e1;
t649 = pkin(2) / 0.2e1;
t648 = m(3) * pkin(2);
t647 = t60 * pkin(2);
t646 = t63 * pkin(2);
t645 = t66 * pkin(2);
t638 = m(3) * t136;
t637 = m(3) * t137;
t636 = m(3) * t138;
t632 = pkin(1) * t351;
t631 = pkin(1) * t352;
t630 = pkin(1) * t353;
t407 = sin(qJ(2,3));
t629 = pkin(1) * t407;
t409 = sin(qJ(2,2));
t628 = pkin(1) * t409;
t411 = sin(qJ(2,1));
t627 = pkin(1) * t411;
t626 = pkin(2) * qJ(3,1);
t625 = pkin(2) * qJ(3,2);
t624 = pkin(2) * qJ(3,3);
t617 = t408 * pkin(2);
t616 = t410 * pkin(2);
t615 = t412 * pkin(2);
t142 = t438 * t148;
t67 = t73 * pkin(2);
t614 = t142 + t67;
t143 = t438 * t149;
t68 = t74 * pkin(2);
t613 = t143 + t68;
t144 = t438 * t150;
t69 = t75 * pkin(2);
t612 = t144 + t69;
t610 = qJ(3,1) * t397;
t607 = qJ(3,2) * t397;
t604 = qJ(3,3) * t397;
t602 = t109 * t136;
t92 = t109 * t427;
t601 = t110 * t137;
t94 = t110 * t428;
t600 = t111 * t138;
t96 = t111 * t429;
t130 = (t590 + t593) * t217;
t529 = 0.1e1 / 0.4e1 + t437 / 0.4e1;
t256 = -t328 * t388 + t468 - t427 / 0.4e1 + t529;
t214 = 0.1e1 / ((0.4e1 * t256 * t342 - t440) * t438 - t666);
t599 = t130 * t214;
t131 = (t589 + t592) * t218;
t257 = -t329 * t389 + t469 - t428 / 0.4e1 + t529;
t215 = 0.1e1 / ((0.4e1 * t257 * t343 - t441) * t438 - t665);
t598 = t131 * t215;
t132 = (t588 + t591) * t219;
t258 = -t330 * t390 + t470 - t429 / 0.4e1 + t529;
t216 = 0.1e1 / ((0.4e1 * t258 * t344 - t442) * t438 - t664);
t597 = t132 * t216;
t596 = t148 * t214;
t595 = t149 * t215;
t594 = t150 * t216;
t354 = m(3) * qJ(3,3) + mrSges(3,3);
t338 = -mrSges(2,2) + t354;
t413 = cos(qJ(2,3));
t575 = t338 * t413;
t355 = m(3) * qJ(3,2) + mrSges(3,3);
t339 = -mrSges(2,2) + t355;
t415 = cos(qJ(2,2));
t574 = t339 * t415;
t356 = m(3) * qJ(3,1) + mrSges(3,3);
t340 = -mrSges(2,2) + t356;
t417 = cos(qJ(2,1));
t573 = t340 * t417;
t572 = t342 * t438;
t571 = t343 * t438;
t570 = t344 * t438;
t544 = 0.2e1 * t196 * t586 + 0.2e1 * t199 * t587;
t543 = 0.2e1 * t197 * t584 + 0.2e1 * t200 * t585;
t542 = 0.2e1 * t198 * t582 + 0.2e1 * t201 * t583;
t541 = -t178 / 0.4e1 - t181 / 0.4e1;
t539 = -t179 / 0.4e1 - t182 / 0.4e1;
t537 = -t180 / 0.4e1 - t183 / 0.4e1;
t499 = t211 * t586;
t502 = t208 * t587;
t535 = t502 / 0.2e1 + t499 / 0.2e1;
t498 = t212 * t584;
t501 = t209 * t585;
t534 = t501 / 0.2e1 + t498 / 0.2e1;
t497 = t213 * t582;
t500 = t210 * t583;
t533 = t500 / 0.2e1 + t497 / 0.2e1;
t532 = -t499 / 0.4e1 - t502 / 0.4e1;
t531 = -t498 / 0.4e1 - t501 / 0.4e1;
t530 = -t497 / 0.4e1 - t500 / 0.4e1;
t528 = t388 - 0.1e1 / 0.2e1;
t527 = t389 - 0.1e1 / 0.2e1;
t526 = t390 - 0.1e1 / 0.2e1;
t524 = t312 * t635;
t523 = t313 * t634;
t522 = t314 * t633;
t86 = (t593 / 0.2e1 + t590 / 0.2e1) * t217 + t535;
t515 = t86 * pkin(2) + t540;
t88 = (t592 / 0.2e1 + t589 / 0.2e1) * t218 + t534;
t514 = t88 * pkin(2) + t538;
t90 = (t591 / 0.2e1 + t588 / 0.2e1) * t219 + t533;
t513 = t90 * pkin(2) + t536;
t300 = -g(1) * t357 + g(2) * t360;
t303 = g(1) * t360 + g(2) * t357;
t363 = mrSges(3,1) + t648;
t341 = mrSges(2,1) + t363;
t512 = 0.2e1 * t354 * t602 + (-t300 * t341 - t303 * t338) * t351 + (-t300 * t338 + t303 * t341) * t348;
t301 = -g(1) * t358 + g(2) * t361;
t304 = g(1) * t361 + g(2) * t358;
t511 = 0.2e1 * t355 * t601 + (-t301 * t341 - t304 * t339) * t352 + (-t301 * t339 + t304 * t341) * t349;
t302 = -g(1) * t359 + g(2) * t362;
t305 = g(1) * t362 + g(2) * t359;
t510 = 0.2e1 * t356 * t600 + (-t302 * t341 - t305 * t340) * t353 + (-t302 * t340 + t305 * t341) * t350;
t505 = t217 * t602;
t504 = t218 * t601;
t503 = t219 * t600;
t490 = qJ(3,3) * t557;
t489 = qJ(3,2) * t556;
t488 = qJ(3,1) * t555;
t473 = t528 * qJ(3,3);
t472 = t527 * qJ(3,2);
t471 = t526 * qJ(3,1);
t467 = 0.2e1 * pkin(2) * mrSges(3,1) + Ifges(3,2) + Ifges(2,3);
t37 = -pkin(2) * t136 + t109 * t437 + t92;
t38 = -pkin(2) * t137 + t110 * t437 + t94;
t39 = -pkin(2) * t138 + t111 * t437 + t96;
t445 = (t338 * t407 + t341 * t413) * pkin(1);
t444 = (t339 * t409 + t341 * t415) * pkin(1);
t443 = (t340 * t411 + t341 * t417) * pkin(1);
t281 = m(3) * (t429 + t437) + qJ(3,1) * t662 + t467;
t280 = m(3) * (t428 + t437) + qJ(3,2) * t662 + t467;
t279 = m(3) * (t427 + t437) + qJ(3,3) * t662 + t467;
t426 = mrSges(4,1);
t425 = mrSges(4,2);
t406 = xDDP(1);
t405 = xDDP(2);
t404 = xDDP(3);
t391 = t419 ^ 2;
t331 = pkin(1) * t422 + mrSges(1,1);
t324 = t648 / 0.2e1 + mrSges(2,1) / 0.2e1 + mrSges(3,1) / 0.2e1;
t317 = mrSges(3,1) + (pkin(1) * t417 + pkin(2)) * m(3);
t316 = mrSges(3,1) + (pkin(1) * t415 + pkin(2)) * m(3);
t315 = mrSges(3,1) + (pkin(1) * t413 + pkin(2)) * m(3);
t311 = t549 + t615;
t310 = t551 + t616;
t309 = t552 + t617;
t278 = -t425 * t376 + t377 * t426;
t277 = t426 * t376 + t377 * t425;
t246 = t443 + t281;
t245 = t444 + t280;
t244 = t445 + t279;
t243 = -t284 * t404 - t287 * t391 + t406;
t242 = -t283 * t404 - t286 * t391 + t406;
t241 = -t282 * t404 - t285 * t391 + t406;
t240 = -t284 * t391 + t287 * t404 + t405;
t239 = -t283 * t391 + t286 * t404 + t405;
t238 = -t282 * t391 + t285 * t404 + t405;
t237 = t281 + 0.2e1 * t443 + t679;
t236 = t280 + 0.2e1 * t444 + t679;
t235 = t279 + 0.2e1 * t445 + t679;
t153 = (t210 * t287 - t213 * t284) * t219;
t152 = (t209 * t286 - t212 * t283) * t218;
t151 = (t208 * t285 - t211 * t282) * t217;
t147 = t150 ^ 2;
t146 = t149 ^ 2;
t145 = t148 ^ 2;
t141 = (t204 * t287 - t207 * t284) * t219;
t140 = (t203 * t286 - t206 * t283) * t218;
t139 = (t202 * t285 - t205 * t282) * t217;
t135 = (-t198 * t284 + t201 * t287) * t219;
t134 = (-t197 * t283 + t200 * t286) * t218;
t133 = (-t196 * t282 + t199 * t285) * t217;
t129 = (m(3) * t207 - t198 * t363 - t213 * t317) * t219;
t128 = (m(3) * t206 - t197 * t363 - t212 * t316) * t218;
t127 = (m(3) * t205 - t196 * t363 - t211 * t315) * t217;
t126 = (m(3) * t204 - t201 * t363 - t210 * t317) * t219;
t125 = (m(3) * t203 - t200 * t363 - t209 * t316) * t218;
t124 = (m(3) * t202 - t199 * t363 - t208 * t315) * t217;
t123 = (t198 * t281 - t207 * t363 + t213 * t246) * t219;
t122 = (t197 * t280 - t206 * t363 + t212 * t245) * t218;
t121 = (t196 * t279 - t205 * t363 + t211 * t244) * t217;
t120 = (t201 * t281 - t204 * t363 + t210 * t246) * t219;
t119 = (t200 * t280 - t203 * t363 + t209 * t245) * t218;
t118 = (t199 * t279 - t202 * t363 + t208 * t244) * t217;
t117 = (t198 * t246 - t207 * t317 + t213 * t237) * t219;
t116 = (t197 * t245 - t206 * t316 + t212 * t236) * t218;
t115 = (t196 * t244 - t205 * t315 + t211 * t235) * t217;
t114 = (t201 * t246 - t204 * t317 + t210 * t237) * t219;
t113 = (t200 * t245 - t203 * t316 + t209 * t236) * t218;
t112 = (t199 * t244 - t202 * t315 + t208 * t235) * t217;
t95 = (0.2e1 * t150 + t542) * t429;
t93 = (0.2e1 * t149 + t543) * t428;
t91 = (0.2e1 * t148 + t544) * t427;
t89 = t533 + t676;
t87 = t534 + t677;
t85 = t535 + t678;
t78 = m(3) * t141 - t135 * t363 - t153 * t317;
t77 = m(3) * t140 - t134 * t363 - t152 * t316;
t76 = m(3) * t139 - t133 * t363 - t151 * t315;
t72 = t618 + t536;
t71 = t619 + t538;
t70 = t620 + t540;
t65 = t84 + t537;
t64 = -t183 / 0.3e1 - t180 / 0.3e1 + ((t213 + t198 / 0.3e1) * t267 + (t210 + t201 / 0.3e1) * t264) * pkin(2) * t219;
t62 = t83 + t539;
t61 = -t182 / 0.3e1 - t179 / 0.3e1 + ((t212 + t197 / 0.3e1) * t266 + (t209 + t200 / 0.3e1) * t263) * pkin(2) * t218;
t59 = t82 + t541;
t58 = -t181 / 0.3e1 - t178 / 0.3e1 + ((t211 + t196 / 0.3e1) * t265 + (t208 + t199 / 0.3e1) * t262) * pkin(2) * t217;
t54 = t135 * t281 - t141 * t363 + t153 * t246;
t53 = t134 * t280 - t140 * t363 + t152 * t245;
t52 = t133 * t279 - t139 * t363 + t151 * t244;
t51 = t135 * t246 - t141 * t317 + t153 * t237;
t50 = t134 * t245 - t140 * t316 + t152 * t236;
t49 = t133 * t244 - t139 * t315 + t151 * t235;
t48 = t69 - t96;
t47 = t96 + t69;
t46 = t95 + t69;
t45 = t68 - t94;
t44 = t94 + t68;
t43 = t93 + t68;
t42 = t67 - t92;
t41 = t92 + t67;
t40 = t91 + t67;
t36 = pkin(2) * t96 + t395 * t75;
t35 = pkin(2) * t94 + t395 * t74;
t34 = pkin(2) * t92 + t395 * t73;
t33 = -t108 * t429 + t645;
t32 = -t107 * t428 + t646;
t31 = -t106 * t427 + t647;
t30 = t39 - t150;
t29 = t38 - t149;
t28 = t37 - t148;
t27 = t96 + t612;
t26 = (0.4e1 * t150 + t542) * t429 + t612;
t25 = t94 + t613;
t24 = (0.4e1 * t149 + t543) * t428 + t613;
t23 = t92 + t614;
t22 = (0.4e1 * t148 + t544) * t427 + t614;
t21 = t144 + t150 + t39;
t20 = t143 + t149 + t38;
t19 = t142 + t148 + t37;
t18 = (0.4e1 * (t258 * t150 * t633 + t30 * t549 / 0.4e1 + t36 * t412 / 0.4e1) * t630 + (t30 * t609 - t36 * t418) * t633 - t681 + (t270 * t653 - t626 * t639 - t494) * t144) * t594 + (-t681 + ((t39 * t549 + t412 * t667) * t353 + (t39 * t609 - t418 * t667) * t350) * pkin(1)) * t597 + (-qJ(3,1) + ((pkin(2) * t549 + t395 * t412) * t353 - (-pkin(2) * t609 + t395 * t418) * t350) * pkin(1)) * t503;
t17 = (0.4e1 * (t257 * t149 * t634 + t29 * t551 / 0.4e1 + t35 * t410 / 0.4e1) * t631 + (t29 * t606 - t35 * t416) * t634 - t682 + (t269 * t654 - t625 * t640 - t495) * t143) * t595 + (-t682 + ((t38 * t551 + t410 * t668) * t352 + (t38 * t606 - t416 * t668) * t349) * pkin(1)) * t598 + (-qJ(3,2) + ((pkin(2) * t551 + t395 * t410) * t352 - (-pkin(2) * t606 + t395 * t416) * t349) * pkin(1)) * t504;
t16 = (0.4e1 * (t256 * t148 * t635 + t28 * t552 / 0.4e1 + t34 * t408 / 0.4e1) * t632 + (t28 * t603 - t34 * t414) * t635 - t683 + (t268 * t655 - t624 * t641 - t496) * t142) * t596 + (-t683 + ((t37 * t552 + t408 * t669) * t351 + (t37 * t603 - t414 * t669) * t348) * pkin(1)) * t599 + (-qJ(3,3) + ((pkin(2) * t552 + t395 * t408) * t351 - (-pkin(2) * t603 + t395 * t414) * t348) * pkin(1)) * t505;
t15 = (0.4e1 * (t108 * t471 + t553 * t66) * t570 + (0.4e1 * (t89 * pkin(2) + t108 * t508 - t390 * t66 + t537) * t633 - 0.3e1 * t64 * t549 + t412 * t26) * t630 - (t26 * t418 + 0.3e1 * t64 * t609) * t633 - 0.2e1 * t108 * t488 - 0.2e1 * t66 * t486 - (t144 + t95 + 0.2e1 * t69) * qJ(3,1)) * t594 + (0.2e1 * (t111 * t471 + t553 * t75) * t570 + 0.2e1 * ((t111 * t508 - t390 * t75 + t513) * t633 - t75 * t549 / 0.2e1 + t412 * t46 / 0.2e1) * t630 - (t418 * t46 + t75 * t609) * t633 - t111 * t488 - t75 * t486 + t47 * t661) * t597 + 0.2e1 * (-(t526 * t633 - t615 / 0.2e1 + t549 / 0.2e1) * t630 + t670 * t633 / 0.2e1 - t626 + (t344 - 0.1e1 / 0.2e1) * t486) * t503;
t14 = (0.4e1 * (t107 * t472 + t550 * t63) * t571 + (0.4e1 * (t87 * pkin(2) + t107 * t507 - t389 * t63 + t539) * t634 - 0.3e1 * t61 * t551 + t410 * t24) * t631 - (t24 * t416 + 0.3e1 * t61 * t606) * t634 - 0.2e1 * t107 * t489 - 0.2e1 * t63 * t487 - (t143 + t93 + 0.2e1 * t68) * qJ(3,2)) * t595 + (0.2e1 * (t110 * t472 + t550 * t74) * t571 + 0.2e1 * ((t110 * t507 - t389 * t74 + t514) * t634 - t74 * t551 / 0.2e1 + t410 * t43 / 0.2e1) * t631 - (t416 * t43 + t74 * t606) * t634 - t110 * t489 - t74 * t487 + t44 * t660) * t598 + 0.2e1 * (-(t527 * t634 - t616 / 0.2e1 + t551 / 0.2e1) * t631 + t671 * t634 / 0.2e1 - t625 + (t343 - 0.1e1 / 0.2e1) * t487) * t504;
t13 = (0.4e1 * (t106 * t473 + t554 * t60) * t572 + (0.4e1 * (t85 * pkin(2) + t106 * t506 - t388 * t60 + t541) * t635 - 0.3e1 * t58 * t552 + t408 * t22) * t632 - (t22 * t414 + 0.3e1 * t58 * t603) * t635 - 0.2e1 * t106 * t490 - 0.2e1 * t60 * t485 - (t142 + t91 + 0.2e1 * t67) * qJ(3,3)) * t596 + (0.2e1 * (t109 * t473 + t554 * t73) * t572 + 0.2e1 * ((t109 * t506 - t388 * t73 + t515) * t635 - t73 * t552 / 0.2e1 + t408 * t40 / 0.2e1) * t632 - (t40 * t414 + t73 * t603) * t635 - t109 * t490 - t73 * t485 + t41 * t659) * t599 + 0.2e1 * (-(t528 * t635 - t617 / 0.2e1 + t552 / 0.2e1) * t632 + t672 * t635 / 0.2e1 - t624 + (t342 - 0.1e1 / 0.2e1) * t485) * t505;
t12 = (-0.4e1 * (t33 * t553 + t480 * t65) * t570 - (0.8e1 * ((t89 * t429 - t645 / 0.2e1) * t390 + t65 * t508 + ((-t591 / 0.8e1 - t588 / 0.8e1) * t219 + t530) * t429 + t645 / 0.4e1) * t633 + t21 * t549 + t27 * t615) * t630 - (t21 * t609 - t27 * t375) * t633 + 0.4e1 * t65 * t488 + 0.2e1 * t33 * t486 + (t438 * t66 + t513) * t661) * t594 + (-0.2e1 * (t48 * t553 + t480 * t72) * t570 - 0.4e1 * ((t90 * t429 - t69 / 0.2e1) * t390 + t72 * t508 + (t530 - t676) * t429 + t69 / 0.4e1) * t633 * t630 + 0.2e1 * t72 * t488 + t48 * t486 - t75 * t610 + (-t311 * t630 - t522) * t47) * t597 - 0.2e1 * ((pkin(2) * t553 + t471) * t570 - ((t390 * pkin(2) + t424 - t508) * t633 + t311 * t424) * t630 + t522 * t649 - t488 / 0.2e1 + t486 * t424 + t610 / 0.2e1) * t503;
t11 = (-0.4e1 * (t32 * t550 + t481 * t62) * t571 - (0.8e1 * ((t87 * t428 - t646 / 0.2e1) * t389 + t62 * t507 + ((-t592 / 0.8e1 - t589 / 0.8e1) * t218 + t531) * t428 + t646 / 0.4e1) * t634 + t20 * t551 + t25 * t616) * t631 - (t20 * t606 - t25 * t374) * t634 + 0.4e1 * t62 * t489 + 0.2e1 * t32 * t487 + (t438 * t63 + t514) * t660) * t595 + (-0.2e1 * (t45 * t550 + t481 * t71) * t571 - 0.4e1 * ((t88 * t428 - t68 / 0.2e1) * t389 + t71 * t507 + (t531 - t677) * t428 + t68 / 0.4e1) * t634 * t631 + 0.2e1 * t71 * t489 + t45 * t487 - t74 * t607 + (-t310 * t631 - t523) * t44) * t598 - 0.2e1 * ((pkin(2) * t550 + t472) * t571 - ((pkin(2) * t389 + t424 - t507) * t634 + t310 * t424) * t631 + t523 * t649 - t489 / 0.2e1 + t487 * t424 + t607 / 0.2e1) * t504;
t10 = (-0.4e1 * (t31 * t554 + t482 * t59) * t572 - (0.8e1 * ((t85 * t427 - t647 / 0.2e1) * t388 + t59 * t506 + ((-t593 / 0.8e1 - t590 / 0.8e1) * t217 + t532) * t427 + t647 / 0.4e1) * t635 + t19 * t552 + t23 * t617) * t632 - (t19 * t603 - t23 * t373) * t635 + 0.4e1 * t59 * t490 + 0.2e1 * t31 * t485 + (t438 * t60 + t515) * t659) * t596 + (-0.2e1 * (t42 * t554 + t482 * t70) * t572 - 0.4e1 * ((t86 * t427 - t67 / 0.2e1) * t388 + t70 * t506 + (t532 - t678) * t427 + t67 / 0.4e1) * t635 * t632 + 0.2e1 * t70 * t490 + t42 * t485 - t73 * t604 + (-t309 * t632 - t524) * t41) * t599 - 0.2e1 * ((pkin(2) * t554 + t473) * t572 - ((pkin(2) * t388 + t424 - t506) * t635 + t309 * t424) * t632 + t524 * t649 - t490 / 0.2e1 + t485 * t424 + t604 / 0.2e1) * t505;
t9 = -t111 ^ 2 * t356 + t363 * t12 + t317 * t18 + (-t147 * t627 + t302 * t353 - t305 * t350 - t15) * m(3);
t8 = -t110 ^ 2 * t355 + t363 * t11 + t316 * t17 + (-t146 * t628 + t301 * t352 - t304 * t349 - t14) * m(3);
t7 = -t109 ^ 2 * t354 + t363 * t10 + t315 * t16 + (-t145 * t629 + t300 * t351 - t303 * t348 - t13) * m(3);
t6 = -t12 * t281 + t15 * t363 - t18 * t246 + (t341 * t411 - t573) * t147 * pkin(1) + t510;
t5 = -t11 * t280 + t14 * t363 - t17 * t245 + (t341 * t409 - t574) * t146 * pkin(1) + t511;
t4 = -t10 * t279 + t13 * t363 - t16 * t244 + (t341 * t407 - t575) * t145 * pkin(1) + t512;
t3 = -t237 * t18 - t246 * t12 + t317 * t15 - 0.2e1 * (-t150 * t636 + (t132 * t324 + t150 * t341 - t636) * t132) * t627 + t132 * t108 * t573 * t680 + (mrSges(1,2) * t305 - t302 * t331) * t418 + t412 * (mrSges(1,2) * t302 + t305 * t331) + t510;
t2 = -t236 * t17 - t245 * t11 + t316 * t14 - 0.2e1 * (-t149 * t637 + (t131 * t324 + t149 * t341 - t637) * t131) * t628 + t131 * t107 * t574 * t680 + (mrSges(1,2) * t304 - t301 * t331) * t416 + t410 * (mrSges(1,2) * t301 + t304 * t331) + t511;
t1 = -t235 * t16 - t244 * t10 + t315 * t13 - 0.2e1 * (-t148 * t638 + (t130 * t324 + t148 * t341 - t638) * t130) * t629 + t130 * t106 * t575 * t680 + (mrSges(1,2) * t303 - t300 * t331) * t414 + t408 * (mrSges(1,2) * t300 + t303 * t331) + t512;
t55 = [-t277 * t404 - t391 * t278 + (t406 - g(1)) * m(4) + ((t117 * t213 + t123 * t198 + t129 * t207) * t243 + (t117 * t210 + t123 * t201 + t129 * t204) * t240 + t213 * t3 + t198 * t6 + t207 * t9) * t219 + ((t116 * t212 + t122 * t197 + t128 * t206) * t242 + (t116 * t209 + t122 * t200 + t128 * t203) * t239 + t212 * t2 + t197 * t5 + t206 * t8) * t218 + ((t115 * t211 + t121 * t196 + t127 * t205) * t241 + (t115 * t208 + t121 * t199 + t127 * t202) * t238 + t211 * t1 + t196 * t4 + t205 * t7) * t217; -t391 * t277 + t278 * t404 + (t405 - g(2)) * m(4) + ((t114 * t213 + t120 * t198 + t126 * t207) * t243 + (t114 * t210 + t120 * t201 + t126 * t204) * t240 + t210 * t3 + t201 * t6 + t204 * t9) * t219 + ((t113 * t212 + t119 * t197 + t125 * t206) * t242 + (t113 * t209 + t119 * t200 + t125 * t203) * t239 + t209 * t2 + t200 * t5 + t203 * t8) * t218 + ((t112 * t211 + t118 * t196 + t124 * t205) * t241 + (t112 * t208 + t118 * t199 + t124 * t202) * t238 + t208 * t1 + t199 * t4 + t202 * t7) * t217; t153 * t3 + t135 * t6 + t141 * t9 + t152 * t2 + t134 * t5 + t140 * t8 + t151 * t1 + t133 * t4 + t139 * t7 - t277 * t406 + t278 * t405 + Ifges(4,3) * t404 - (-g(1) * t426 - g(2) * t425) * t376 + t377 * (g(1) * t425 - g(2) * t426) + ((t198 * t54 + t207 * t78 + t213 * t51) * t243 + (t201 * t54 + t204 * t78 + t210 * t51) * t240) * t219 + ((t197 * t53 + t206 * t77 + t212 * t50) * t242 + (t200 * t53 + t203 * t77 + t209 * t50) * t239) * t218 + ((t196 * t52 + t205 * t76 + t211 * t49) * t241 + (t199 * t52 + t202 * t76 + t208 * t49) * t238) * t217;];
tauX  = t55;
