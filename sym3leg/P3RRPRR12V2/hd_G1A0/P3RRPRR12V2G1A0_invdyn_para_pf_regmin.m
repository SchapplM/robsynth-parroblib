% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRPRR12V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [3x15]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 19:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P3RRPRR12V2G1A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRPRR12V2G1A0_invdyn_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 19:15:19
% EndTime: 2020-08-06 19:15:46
% DurationCPUTime: 27.18s
% Computational Cost: add. (204504->809), mult. (278391->1409), div. (12477->12), fcn. (148530->18), ass. (0->556)
t356 = sin(qJ(2,2));
t367 = xDP(2);
t368 = xDP(1);
t369 = pkin(5) - pkin(6);
t287 = pkin(1) * t368 - t367 * t369;
t642 = qJ(3,2) * t368;
t521 = t356 * t642;
t217 = t287 + t521;
t286 = pkin(1) * t367 + t368 * t369;
t643 = qJ(3,2) * t367;
t522 = t356 * t643;
t223 = t522 + t286;
t308 = pkin(1) * t356 + qJ(3,2);
t349 = legFrame(2,3);
t320 = sin(t349);
t323 = cos(t349);
t362 = cos(qJ(2,2));
t343 = t362 ^ 2;
t357 = sin(qJ(1,2));
t363 = cos(qJ(1,2));
t366 = xDP(3);
t370 = pkin(2) + pkin(3);
t265 = -t357 * t368 + t363 * t367;
t267 = t357 * t367 + t363 * t368;
t422 = t265 * t320 + t267 * t323;
t555 = t366 * t370;
t164 = (-qJ(3,2) * t366 + t370 * t422) * t343 + ((t217 * t363 + t223 * t357) * t323 + (-t217 * t357 + t223 * t363) * t320 + t356 * t555) * t362 + t366 * t308;
t196 = t265 * t323 - t267 * t320;
t645 = qJ(3,2) * t356;
t304 = pkin(1) + t645;
t558 = t362 * t370;
t281 = t304 + t558;
t275 = 0.1e1 / t281 ^ 2;
t375 = 0.1e1 / qJ(3,2);
t596 = t275 * t375;
t484 = t196 * t596;
t446 = t164 * t484;
t206 = t286 * t356 + t643;
t209 = t287 * t356 + t642;
t216 = t287 + 0.2e1 * t521;
t222 = 0.2e1 * t522 + t286;
t576 = (qJ(3,2) + t370) * (-qJ(3,2) + t370);
t470 = t343 * t576;
t536 = -0.2e1 * t555;
t669 = pkin(1) * qJ(3,2);
t146 = t422 * t470 + (-t366 * (-t356 * t576 + t669) + ((t216 * t363 + t222 * t357) * t323 + (-t216 * t357 + t222 * t363) * t320) * t370) * t362 + t308 * t555 + (t536 * t343 + (t206 * t357 + t209 * t363) * t323 + (t206 * t363 - t209 * t357) * t320) * qJ(3,2);
t274 = 0.1e1 / t281;
t597 = t274 * t375;
t143 = t146 * t597;
t137 = t369 * t143;
t342 = t362 * t343;
t374 = qJ(3,2) ^ 2;
t619 = t196 * t274;
t444 = t576 * t619;
t537 = 0.2e1 * t370;
t382 = pkin(1) ^ 2;
t542 = t369 ^ 2 + t382;
t599 = t274 * t343;
t633 = t164 * t375;
t725 = t369 * t370;
t100 = -t342 * t444 + (-t196 * t304 * t537 - t164 * t369) * t599 + (-t137 * t356 + ((-0.2e1 * t196 * t669 + t633 * t725) * t356 - t196 * (t374 + t542)) * t274) * t362;
t504 = t164 * t597;
t158 = pkin(2) * t504;
t118 = t158 - t143;
t113 = -pkin(3) * t504 - t118;
t564 = t356 * t369;
t483 = t196 * t564;
t550 = t370 * t375;
t151 = (-t164 * t550 + t483) * t274;
t617 = t196 * t369;
t523 = qJ(3,2) * t617;
t429 = (-t151 * t362 + t304 * t504) * t146 + t164 * (-t523 * t599 + ((-pkin(3) * t633 + t483) * t274 - t118) * t558 + t113 * t304);
t376 = 0.1e1 / qJ(3,2) ^ 2;
t595 = t275 * t376;
t618 = t196 * t275;
t228 = t320 * t357 - t323 * t363;
t314 = t369 * t363;
t235 = t304 * t357 - t314;
t311 = t357 * t369;
t465 = t304 * t363 + t311;
t183 = t228 * t558 + t235 * t320 - t323 * t465;
t229 = t320 * t363 + t323 * t357;
t184 = t229 * t558 + t235 * t323 + t320 * t465;
t351 = xDDP(3);
t352 = xDDP(2);
t353 = xDDP(1);
t703 = (t183 * t353 - t184 * t352) * t274 * t362 - t351 * t356;
t53 = -t429 * t595 + (-t100 * t618 - t703) * t375;
t724 = 0.2e1 * pkin(1);
t40 = pkin(5) * t53 + t446 * t724;
t734 = t40 * t356;
t733 = t40 * t362;
t354 = sin(qJ(2,3));
t638 = qJ(3,3) * t368;
t517 = t354 * t638;
t215 = t287 + t517;
t639 = qJ(3,3) * t367;
t518 = t354 * t639;
t221 = t518 + t286;
t307 = pkin(1) * t354 + qJ(3,3);
t348 = legFrame(3,3);
t319 = sin(t348);
t322 = cos(t348);
t360 = cos(qJ(2,3));
t341 = t360 ^ 2;
t355 = sin(qJ(1,3));
t361 = cos(qJ(1,3));
t266 = t355 * t367 + t361 * t368;
t269 = -t355 * t368 + t361 * t367;
t421 = t266 * t322 + t269 * t319;
t163 = (-qJ(3,3) * t366 + t370 * t421) * t341 + ((t215 * t361 + t221 * t355) * t322 + (-t215 * t355 + t221 * t361) * t319 + t354 * t555) * t360 + t366 * t307;
t197 = -t266 * t319 + t269 * t322;
t641 = qJ(3,3) * t354;
t302 = pkin(1) + t641;
t553 = t370 * t360;
t280 = t302 + t553;
t272 = 0.1e1 / t280 ^ 2;
t372 = 0.1e1 / qJ(3,3);
t601 = t272 * t372;
t480 = t197 * t601;
t447 = t163 * t480;
t205 = t286 * t354 + t639;
t208 = t287 * t354 + t638;
t214 = t287 + 0.2e1 * t517;
t220 = 0.2e1 * t518 + t286;
t577 = (qJ(3,3) + t370) * (-qJ(3,3) + t370);
t471 = t341 * t577;
t668 = pkin(1) * qJ(3,3);
t145 = t421 * t471 + (-t366 * (-t354 * t577 + t668) + ((t214 * t361 + t220 * t355) * t322 + (-t214 * t355 + t220 * t361) * t319) * t370) * t360 + t307 * t555 + (t536 * t341 + (t205 * t355 + t208 * t361) * t322 + (t205 * t361 - t208 * t355) * t319) * qJ(3,3);
t271 = 0.1e1 / t280;
t602 = t271 * t372;
t142 = t145 * t602;
t136 = t369 * t142;
t340 = t360 * t341;
t371 = qJ(3,3) ^ 2;
t616 = t197 * t271;
t443 = t577 * t616;
t604 = t271 * t341;
t634 = t163 * t372;
t101 = -t340 * t443 + (-t197 * t302 * t537 - t163 * t369) * t604 + (-t136 * t354 + ((-0.2e1 * t197 * t668 + t634 * t725) * t354 - t197 * (t371 + t542)) * t271) * t360;
t507 = t163 * t602;
t157 = pkin(2) * t507;
t116 = t157 - t142;
t112 = -pkin(3) * t507 - t116;
t567 = t354 * t369;
t479 = t197 * t567;
t551 = t370 * t372;
t152 = (-t163 * t551 + t479) * t271;
t614 = t197 * t369;
t519 = qJ(3,3) * t614;
t428 = (-t152 * t360 + t302 * t507) * t145 + t163 * (-t519 * t604 + ((-pkin(3) * t634 + t479) * t271 - t116) * t553 + t112 * t302);
t373 = 0.1e1 / qJ(3,3) ^ 2;
t600 = t272 * t373;
t615 = t197 * t272;
t226 = t319 * t355 - t322 * t361;
t313 = t369 * t361;
t233 = t302 * t355 - t313;
t310 = t355 * t369;
t467 = t302 * t361 + t310;
t181 = t226 * t553 + t233 * t319 - t322 * t467;
t227 = t319 * t361 + t322 * t355;
t182 = t227 * t553 + t233 * t322 + t319 * t467;
t702 = (t181 * t353 - t182 * t352) * t271 * t360 - t351 * t354;
t52 = -t428 * t600 + (-t101 * t615 - t702) * t372;
t41 = pkin(5) * t52 + t447 * t724;
t732 = t41 * t354;
t731 = t41 * t360;
t358 = sin(qJ(2,1));
t646 = qJ(3,1) * t368;
t525 = t358 * t646;
t219 = t287 + t525;
t647 = qJ(3,1) * t367;
t526 = t358 * t647;
t225 = t526 + t286;
t309 = pkin(1) * t358 + qJ(3,1);
t350 = legFrame(1,3);
t321 = sin(t350);
t324 = cos(t350);
t364 = cos(qJ(2,1));
t345 = t364 ^ 2;
t359 = sin(qJ(1,1));
t365 = cos(qJ(1,1));
t268 = t359 * t367 + t365 * t368;
t270 = -t359 * t368 + t365 * t367;
t420 = t268 * t324 + t270 * t321;
t165 = (-qJ(3,1) * t366 + t370 * t420) * t345 + ((t219 * t365 + t225 * t359) * t324 + (-t219 * t359 + t225 * t365) * t321 + t358 * t555) * t364 + t366 * t309;
t198 = -t268 * t321 + t270 * t324;
t649 = qJ(3,1) * t358;
t306 = pkin(1) + t649;
t552 = t370 * t364;
t282 = t306 + t552;
t278 = 0.1e1 / t282 ^ 2;
t378 = 0.1e1 / qJ(3,1);
t591 = t278 * t378;
t476 = t198 * t591;
t445 = t165 * t476;
t207 = t286 * t358 + t647;
t210 = t287 * t358 + t646;
t218 = t287 + 0.2e1 * t525;
t224 = 0.2e1 * t526 + t286;
t575 = (qJ(3,1) + t370) * (-qJ(3,1) + t370);
t469 = t345 * t575;
t670 = pkin(1) * qJ(3,1);
t147 = t420 * t469 + (-t366 * (-t358 * t575 + t670) + ((t218 * t365 + t224 * t359) * t324 + (-t218 * t359 + t224 * t365) * t321) * t370) * t364 + t309 * t555 + (t536 * t345 + (t207 * t359 + t210 * t365) * t324 + (t207 * t365 - t210 * t359) * t321) * qJ(3,1);
t277 = 0.1e1 / t282;
t592 = t277 * t378;
t144 = t147 * t592;
t138 = t369 * t144;
t344 = t364 * t345;
t377 = qJ(3,1) ^ 2;
t613 = t198 * t277;
t442 = t575 * t613;
t594 = t277 * t345;
t632 = t165 * t378;
t102 = -t344 * t442 + (-t198 * t306 * t537 - t165 * t369) * t594 + (-t138 * t358 + ((-0.2e1 * t198 * t670 + t632 * t725) * t358 - t198 * (t377 + t542)) * t277) * t364;
t501 = t165 * t592;
t159 = pkin(2) * t501;
t120 = t159 - t144;
t114 = -pkin(3) * t501 - t120;
t561 = t358 * t369;
t475 = t198 * t561;
t549 = t370 * t378;
t153 = (-t165 * t549 + t475) * t277;
t611 = t198 * t369;
t527 = qJ(3,1) * t611;
t427 = (-t153 * t364 + t306 * t501) * t147 + t165 * (-t527 * t594 + ((-pkin(3) * t632 + t475) * t277 - t120) * t552 + t114 * t306);
t379 = 0.1e1 / qJ(3,1) ^ 2;
t590 = t278 * t379;
t612 = t198 * t278;
t230 = t321 * t359 - t324 * t365;
t315 = t369 * t365;
t237 = t306 * t359 - t315;
t312 = t359 * t369;
t463 = t306 * t365 + t312;
t185 = t230 * t552 + t237 * t321 - t324 * t463;
t231 = t321 * t365 + t324 * t359;
t186 = t231 * t552 + t237 * t324 + t321 * t463;
t704 = (t185 * t353 - t186 * t352) * t277 * t364 - t351 * t358;
t54 = -t427 * t590 + (-t102 * t612 - t704) * t378;
t42 = t54 * pkin(5) + t445 * t724;
t730 = t42 * t358;
t729 = t42 * t364;
t295 = -g(1) * t359 + g(2) * t365;
t296 = g(1) * t365 + g(2) * t359;
t543 = -t295 * t321 - t296 * t324;
t195 = t198 ^ 2;
t621 = t195 * t278;
t279 = t277 * t278;
t560 = t358 * t378;
t472 = t279 * t560;
t648 = qJ(3,1) * t364;
t285 = t358 * t370 - t648;
t587 = t285 * t378;
t605 = t231 * t277;
t606 = t230 * t277;
t99 = -t353 * t605 - t352 * t606 - (t144 * t358 + (t611 + (-t358 * t549 + t364) * t165) * t277) * t612 + (t279 * t165 * t587 - t147 * t472) * t198;
t96 = pkin(5) * t99;
t448 = -pkin(1) * t621 + t543 + t96;
t726 = t448 * t358;
t291 = -t355 * g(1) + g(2) * t361;
t292 = g(1) * t361 + g(2) * t355;
t545 = -t291 * t319 - t292 * t322;
t194 = t197 ^ 2;
t623 = t194 * t272;
t273 = t271 * t272;
t566 = t354 * t372;
t474 = t273 * t566;
t640 = qJ(3,3) * t360;
t283 = t354 * t370 - t640;
t589 = t283 * t372;
t609 = t227 * t271;
t610 = t226 * t271;
t97 = -t353 * t609 - t352 * t610 - (t142 * t354 + (t614 + (-t354 * t551 + t360) * t163) * t271) * t615 + (t273 * t163 * t589 - t145 * t474) * t197;
t94 = pkin(5) * t97;
t449 = -pkin(1) * t623 + t545 + t94;
t728 = t449 * t354;
t293 = -t357 * g(1) + g(2) * t363;
t294 = g(1) * t363 + g(2) * t357;
t544 = -t293 * t320 - t294 * t323;
t193 = t196 ^ 2;
t625 = t193 * t275;
t276 = t274 * t275;
t563 = t356 * t375;
t473 = t276 * t563;
t644 = qJ(3,2) * t362;
t284 = t356 * t370 - t644;
t588 = t284 * t375;
t607 = t229 * t274;
t608 = t228 * t274;
t98 = -t353 * t607 - t352 * t608 - (t143 * t356 + (t617 + (-t356 * t550 + t362) * t164) * t274) * t618 + (t276 * t164 * t588 - t146 * t473) * t196;
t95 = pkin(5) * t98;
t450 = -pkin(1) * t625 + t544 + t95;
t727 = t450 * t356;
t696 = 0.2e1 * t97;
t695 = 0.2e1 * t98;
t694 = 0.2e1 * t99;
t667 = g(3) * t354;
t74 = -t360 * t449 + t667;
t666 = g(3) * t356;
t76 = -t362 * t450 + t666;
t665 = g(3) * t358;
t78 = -t364 * t448 + t665;
t723 = 0.4e1 * t341;
t722 = 0.4e1 * t343;
t721 = 0.4e1 * t345;
t720 = 0.2e1 * t354;
t719 = 0.2e1 * t356;
t718 = 0.2e1 * t358;
t162 = t165 ^ 2;
t508 = t162 * t590;
t717 = pkin(1) * t694 - pkin(5) * t508 - t295 * t324 + t296 * t321;
t161 = t164 ^ 2;
t509 = t161 * t595;
t716 = pkin(1) * t695 - pkin(5) * t509 - t293 * t323 + t294 * t320;
t160 = t163 ^ 2;
t510 = t160 * t600;
t715 = pkin(1) * t696 - pkin(5) * t510 - t291 * t322 + t292 * t319;
t528 = qJ(3,1) * t613;
t524 = qJ(3,2) * t619;
t520 = qJ(3,3) * t616;
t515 = t116 * t616;
t513 = t118 * t619;
t511 = t120 * t613;
t693 = t370 ^ 2;
t714 = t371 - t693;
t713 = t374 - t693;
t712 = t377 - t693;
t500 = t165 * t590;
t123 = 0.2e1 * t147 * t500;
t189 = pkin(2) * t621;
t687 = -0.2e1 * t345;
t711 = t189 * t687 + t123 + t189;
t503 = t164 * t595;
t122 = 0.2e1 * t146 * t503;
t187 = pkin(2) * t625;
t688 = -0.2e1 * t343;
t710 = t187 * t688 + t122 + t187;
t506 = t163 * t600;
t121 = 0.2e1 * t145 * t506;
t188 = pkin(2) * t623;
t689 = -0.2e1 * t341;
t709 = t188 * t689 + t121 + t188;
t700 = 0.2e1 * pkin(2);
t692 = -0.2e1 * qJ(3,1);
t691 = -0.2e1 * qJ(3,2);
t690 = -0.2e1 * qJ(3,3);
t686 = -0.3e1 * t371;
t685 = -0.3e1 * t374;
t684 = -0.3e1 * t377;
t683 = pkin(2) * g(3);
t680 = t52 * pkin(2);
t679 = t53 * pkin(2);
t678 = t54 * pkin(2);
t673 = t689 + 0.1e1;
t672 = t688 + 0.1e1;
t671 = t687 + 0.1e1;
t664 = g(3) * t360;
t663 = g(3) * t362;
t662 = g(3) * t364;
t661 = qJ(3,1) * t99;
t660 = qJ(3,2) * t98;
t659 = qJ(3,3) * t97;
t658 = t372 * t97;
t657 = t375 * t98;
t656 = t378 * t99;
t655 = t52 * qJ(3,3);
t654 = t53 * qJ(3,2);
t653 = t54 * qJ(3,1);
t637 = t112 * t370;
t636 = t113 * t370;
t635 = t114 * t370;
t631 = t181 * t360;
t630 = t182 * t360;
t629 = t183 * t362;
t628 = t184 * t362;
t627 = t185 * t364;
t626 = t186 * t364;
t624 = t193 * t343;
t622 = t194 * t341;
t620 = t195 * t345;
t288 = -pkin(2) * t354 + t640;
t586 = t288 * t360;
t289 = -pkin(2) * t356 + t644;
t585 = t289 * t362;
t290 = -pkin(2) * t358 + t648;
t584 = t290 * t364;
t337 = t354 ^ 2;
t574 = t337 * t372;
t338 = t356 ^ 2;
t573 = t338 * t375;
t339 = t358 ^ 2;
t572 = t339 * t378;
t568 = t354 * t360;
t565 = t356 * t362;
t562 = t358 * t364;
t559 = t360 * t372;
t557 = t362 * t375;
t556 = t364 * t378;
t381 = pkin(2) ^ 2;
t541 = -t371 + t381;
t540 = -t374 + t381;
t539 = -t377 + t381;
t330 = pkin(5) ^ 2 + t382;
t535 = t341 * t658;
t534 = t343 * t657;
t533 = t345 * t656;
t532 = t97 * t566;
t531 = t98 * t563;
t530 = t99 * t560;
t516 = (0.4e1 * t157 - 0.2e1 * t142) * t616;
t514 = (0.4e1 * t158 - 0.2e1 * t143) * t619;
t512 = (0.4e1 * t159 - 0.2e1 * t144) * t613;
t498 = t181 * t559;
t497 = t182 * t559;
t496 = t183 * t557;
t495 = t184 * t557;
t494 = t185 * t556;
t493 = t186 * t556;
t492 = t356 * t625;
t491 = t362 * t625;
t490 = t354 * t623;
t489 = t360 * t623;
t488 = t358 * t621;
t487 = t364 * t621;
t486 = t370 * t619;
t485 = t164 * t618;
t482 = t370 * t616;
t481 = t163 * t615;
t478 = t370 * t613;
t477 = t165 * t612;
t301 = pkin(1) + 0.2e1 * t641;
t468 = t301 * t361 + t310;
t303 = pkin(1) + 0.2e1 * t645;
t466 = t303 * t363 + t311;
t305 = pkin(1) + 0.2e1 * t649;
t464 = t305 * t365 + t312;
t462 = pkin(1) * t528;
t461 = pkin(1) * t524;
t460 = pkin(1) * t520;
t456 = t271 * t52 * t559;
t455 = t274 * t53 * t557;
t454 = t277 * t54 * t556;
t453 = t360 * t532;
t452 = t362 * t531;
t451 = t364 * t530;
t178 = t673 * t623;
t179 = t672 * t625;
t180 = t671 * t621;
t438 = t481 * t720;
t437 = t485 * t719;
t436 = t477 * t718;
t432 = t473 * t624;
t431 = t474 * t622;
t430 = t472 * t620;
t426 = t370 * (-pkin(5) / 0.2e1 + pkin(6) / 0.2e1);
t416 = 0.2e1 * t725;
t106 = -qJ(3,3) * t163 * t271 + t637;
t211 = t307 * t355 - t313 * t354;
t232 = t301 * t355 - t313;
t406 = t307 * t361 + t310 * t354;
t172 = -t226 * t471 - (t319 * t232 - t322 * t468) * t553 - (t319 * t211 - t322 * t406) * qJ(3,3);
t173 = t227 * t471 + (t232 * t322 + t319 * t468) * t553 + (t211 * t322 + t319 * t406) * qJ(3,3);
t297 = (-0.2e1 * pkin(5) + pkin(6)) * pkin(6) + t330;
t415 = t351 * t589 - (-(t693 + t686) * t340 * t482 + ((-t416 * t507 + t136) * qJ(3,3) + (-0.3e1 * (-t371 / 0.3e1 + t693) * t641 + t714 * t724) * t616) * t341 + (((-t136 - 0.4e1 * t460) * t370 - t714 * t369 * t507) * t354 + (t686 - t297) * t482) * t360 + (-t297 - t371) * t354 * t520 + (t460 + t136 / 0.2e1 + t426 * t507) * t690) * t480 - ((t106 * t370 + t443 * t567) * t360 + pkin(1) * t637 + (t106 * t354 + (t197 * t673 * t725 - pkin(1) * t163) * t271) * qJ(3,3)) * t506 - (-t152 * t553 + ((pkin(1) * t372 + t354) * t370 * t163 + (t341 - 0.1e1) * t519) * t271) * t145 * t600 + (t172 * t353 + t173 * t352) * t602;
t107 = -qJ(3,2) * t164 * t274 + t636;
t212 = t308 * t357 - t314 * t356;
t234 = t303 * t357 - t314;
t405 = t308 * t363 + t311 * t356;
t174 = -t228 * t470 - (t320 * t234 - t323 * t466) * t558 - (t320 * t212 - t323 * t405) * qJ(3,2);
t175 = t229 * t470 + (t234 * t323 + t320 * t466) * t558 + (t212 * t323 + t320 * t405) * qJ(3,2);
t414 = t351 * t588 - (-(t693 + t685) * t342 * t486 + ((-t416 * t504 + t137) * qJ(3,2) + (-0.3e1 * (-t374 / 0.3e1 + t693) * t645 + t713 * t724) * t619) * t343 + (((-t137 - 0.4e1 * t461) * t370 - t713 * t369 * t504) * t356 + (t685 - t297) * t486) * t362 + (-t297 - t374) * t356 * t524 + (t461 + t137 / 0.2e1 + t426 * t504) * t691) * t484 - ((t107 * t370 + t444 * t564) * t362 + pkin(1) * t636 + (t107 * t356 + (t196 * t672 * t725 - pkin(1) * t164) * t274) * qJ(3,2)) * t503 - (-t151 * t558 + ((pkin(1) * t375 + t356) * t370 * t164 + (t343 - 0.1e1) * t523) * t274) * t146 * t595 + (t174 * t353 + t175 * t352) * t597;
t108 = -qJ(3,1) * t165 * t277 + t635;
t213 = t309 * t359 - t315 * t358;
t236 = t305 * t359 - t315;
t404 = t309 * t365 + t312 * t358;
t176 = -t230 * t469 - (t321 * t236 - t324 * t464) * t552 - (t321 * t213 - t324 * t404) * qJ(3,1);
t177 = t231 * t469 + (t236 * t324 + t321 * t464) * t552 + (t213 * t324 + t321 * t404) * qJ(3,1);
t413 = t351 * t587 - (-(t693 + t684) * t344 * t478 + ((-t416 * t501 + t138) * qJ(3,1) + (-0.3e1 * (-t377 / 0.3e1 + t693) * t649 + t712 * t724) * t613) * t345 + (((-t138 - 0.4e1 * t462) * t370 - t712 * t369 * t501) * t358 + (t684 - t297) * t478) * t364 + (-t297 - t377) * t358 * t528 + (t462 + t138 / 0.2e1 + t426 * t501) * t692) * t476 - ((t108 * t370 + t442 * t561) * t364 + pkin(1) * t635 + (t108 * t358 + (t198 * t671 * t725 - pkin(1) * t165) * t277) * qJ(3,1)) * t500 - (-t153 * t552 + ((pkin(1) * t378 + t358) * t370 * t165 + (t345 - 0.1e1) * t527) * t277) * t147 * t590 + (t176 * t353 + t177 * t352) * t592;
t400 = -t415 + t680;
t399 = -t414 + t679;
t398 = -t413 + t678;
t397 = t415 + t664;
t396 = t414 + t663;
t395 = t413 + t662;
t318 = pkin(1) * g(2) + pkin(5) * g(1);
t317 = pkin(1) * g(1) - pkin(5) * g(2);
t264 = g(1) * t324 + g(2) * t321;
t263 = g(1) * t323 + g(2) * t320;
t262 = g(1) * t322 + g(2) * t319;
t261 = g(1) * t321 - g(2) * t324;
t260 = g(1) * t320 - g(2) * t323;
t259 = g(1) * t319 - g(2) * t322;
t204 = -t261 * t359 + t264 * t365;
t203 = -t260 * t357 + t263 * t363;
t202 = -t259 * t355 + t262 * t361;
t201 = t261 * t365 + t264 * t359;
t200 = t260 * t363 + t263 * t357;
t199 = t259 * t361 + t262 * t355;
t150 = (-t162 * t379 - t195 + t620) * t278;
t149 = (-t161 * t376 - t193 + t624) * t275;
t148 = (-t160 * t373 - t194 + t622) * t272;
t90 = 0.2e1 * t661;
t89 = 0.2e1 * t660;
t88 = 0.2e1 * t659;
t77 = -t662 - t726;
t75 = -t663 - t727;
t73 = -t664 - t728;
t69 = pkin(2) * t694 + 0.4e1 * t477;
t68 = pkin(2) * t696 + 0.4e1 * t481;
t67 = pkin(2) * t695 + 0.4e1 * t485;
t66 = t339 * t99 + t436 * t556;
t65 = t338 * t98 + t437 * t557;
t64 = t337 * t97 + t438 * t559;
t63 = t562 * t694 + (t721 - 0.2e1) * t445;
t62 = t565 * t695 + (t722 - 0.2e1) * t446;
t61 = t568 * t696 + (t723 - 0.2e1) * t447;
t51 = t704 * t378 + (t102 * t198 * t378 - t195 * t562 + t379 * t427) * t278;
t50 = t703 * t375 + (t100 * t196 * t375 - t193 * t565 + t376 * t429) * t275;
t49 = t702 * t372 + (t101 * t197 * t372 - t194 * t568 + t373 * t428) * t272;
t48 = -t358 * t508 + t364 * t54;
t47 = t358 * t54 + t364 * t508;
t46 = -t356 * t509 + t362 * t53;
t45 = t356 * t53 + t362 * t509;
t44 = -t354 * t510 + t360 * t52;
t43 = t354 * t52 + t360 * t510;
t30 = t364 * t717 - t730;
t29 = -t717 * t358 - t729;
t28 = t362 * t716 - t734;
t27 = -t716 * t356 - t733;
t26 = t360 * t715 - t732;
t25 = -t715 * t354 - t731;
t24 = (t488 * t692 + t448) * t364 + 0.2e1 * t653 - t665 + t711;
t23 = (t492 * t691 + t450) * t362 + 0.2e1 * t654 - t666 + t710;
t22 = (t490 * t690 + t449) * t360 + 0.2e1 * t655 - t667 + t709;
t21 = t69 * t345 + ((t90 - t512) * t358 + t717) * t364 - t730 - 0.2e1 * t477;
t20 = t68 * t341 + ((t88 - t516) * t354 + t715) * t360 - t732 - 0.2e1 * t481;
t19 = t67 * t343 + ((t89 - t514) * t356 + t716) * t362 - t734 - 0.2e1 * t485;
t18 = (t364 * t69 + t717) * t358 + (t512 - 0.2e1 * t661) * t345 + t729 - 0.2e1 * t511 + t90;
t17 = (t360 * t68 + t715) * t354 + (t516 - 0.2e1 * t659) * t341 + t731 - 0.2e1 * t515 + t88;
t16 = (t362 * t67 + t716) * t356 + (t514 - 0.2e1 * t660) * t343 + t733 - 0.2e1 * t513 + t89;
t15 = (t491 * t700 - t450) * t356 + 0.2e1 * t679 + qJ(3,2) * t179 - t396;
t14 = (t487 * t700 - t448) * t358 + 0.2e1 * t678 + qJ(3,1) * t180 - t395;
t13 = (t489 * t700 - t449) * t354 + 0.2e1 * t680 + qJ(3,3) * t178 - t397;
t12 = t727 - t679 + (-t161 * t375 + (-pkin(2) * t565 + qJ(3,2) * t343 - qJ(3,2)) * t193) * t275 + t396;
t11 = t726 - t678 + (-t162 * t378 + (-pkin(2) * t562 + qJ(3,1) * t345 - qJ(3,1)) * t195) * t278 + t395;
t10 = t728 - t680 + (-t160 * t372 + (-pkin(2) * t568 + qJ(3,3) * t341 - qJ(3,3)) * t194) * t272 + t397;
t9 = (-pkin(2) * t508 + t123 + t653) * t364 + (-t162 * t591 - t398) * t358 + 0.2e1 * t96 + t543;
t8 = (-pkin(2) * t509 + t122 + t654) * t362 + (-t161 * t596 - t399) * t356 + 0.2e1 * t95 + t544;
t7 = (-pkin(2) * t510 + t121 + t655) * t360 + (-t160 * t601 - t400) * t354 + 0.2e1 * t94 + t545;
t6 = (t488 * t539 - t683) * t364 + t377 * t54 + (t398 - t726) * pkin(2) + (t711 - t78) * qJ(3,1);
t5 = (t492 * t540 - t683) * t362 + t374 * t53 + (t399 - t727) * pkin(2) + (t710 - t76) * qJ(3,2);
t4 = (t490 * t541 - t683) * t360 + t371 * t52 + (t400 - t728) * pkin(2) + (t709 - t74) * qJ(3,3);
t3 = (t159 - t144 / 0.2e1) * t528 * t721 + (pkin(5) * t123 + (t42 + t436) * qJ(3,1) + ((-t511 + t661) * t718 + t717) * pkin(2)) * t364 + (t147 * t476 * t724 - t42 * pkin(2) + pkin(5) * t413 + qJ(3,1) * t717) * t358 + (t317 * t359 - t318 * t365) * t324 + (t317 * t365 + t318 * t359) * t321 + t511 * t692 + (t539 * t345 + t330 + t377) * t99;
t2 = (t158 - t143 / 0.2e1) * t524 * t722 + (pkin(5) * t122 + (t40 + t437) * qJ(3,2) + ((-t513 + t660) * t719 + t716) * pkin(2)) * t362 + (t146 * t484 * t724 - t40 * pkin(2) + pkin(5) * t414 + qJ(3,2) * t716) * t356 + (t317 * t357 - t318 * t363) * t323 + (t317 * t363 + t318 * t357) * t320 + t513 * t691 + (t540 * t343 + t330 + t374) * t98;
t1 = (t157 - t142 / 0.2e1) * t520 * t723 + (pkin(5) * t121 + (t41 + t438) * qJ(3,3) + ((-t515 + t659) * t720 + t715) * pkin(2)) * t360 + (t145 * t480 * t724 - t41 * pkin(2) + pkin(5) * t415 + qJ(3,3) * t715) * t354 + (t317 * t355 - t318 * t361) * t322 + (t317 * t361 + t318 * t355) * t319 + t515 * t690 + (t541 * t341 + t330 + t371) * t97;
t31 = [-t605 * t99 - t607 * t98 - t609 * t97, -t199 * t609 - t200 * t607 - t201 * t605, -t202 * t609 - t203 * t607 - t204 * t605, t181 * t431 + t183 * t432 + t185 * t430 - t605 * t66 - t607 * t65 - t609 * t64, (-t180 * t494 - t231 * t63) * t277 + (-t179 * t496 - t229 * t62) * t274 + (-t178 * t498 - t227 * t61) * t271, (-t185 * t451 - t231 * t47) * t277 + (-t183 * t452 - t229 * t45) * t274 + (-t181 * t453 - t227 * t43) * t271, (-t185 * t533 - t231 * t48) * t277 + (-t183 * t534 - t229 * t46) * t274 + (-t181 * t535 - t227 * t44) * t271, -t181 * t456 - t183 * t455 - t185 * t454, (-t231 * t30 - t494 * t77) * t277 + (-t229 * t28 - t496 * t75) * t274 + (-t227 * t26 - t498 * t73) * t271, (-t231 * t29 - t494 * t78) * t277 + (-t229 * t27 - t496 * t76) * t274 + (-t227 * t25 - t498 * t74) * t271, (-t21 * t231 + (-t14 * t627 + t176 * t51) * t378) * t277 + (-t19 * t229 + (-t15 * t629 + t174 * t50) * t375) * t274 + (-t20 * t227 + (-t13 * t631 + t172 * t49) * t372) * t271, (-t231 * t9 + (t176 * t358 - t185 * t584) * t656) * t277 + (-t229 * t8 + (t174 * t356 - t183 * t585) * t657) * t274 + (-t227 * t7 + (t172 * t354 - t181 * t586) * t658) * t271, (-t18 * t231 + (t150 * t176 - t24 * t627) * t378) * t277 + (-t16 * t229 + (t149 * t174 - t23 * t629) * t375) * t274 + (-t17 * t227 + (t148 * t172 - t22 * t631) * t372) * t271, (-t231 * t3 + (t11 * t176 - t6 * t627) * t378) * t277 + (-t2 * t229 + (t12 * t174 - t5 * t629) * t375) * t274 + (-t1 * t227 + (t10 * t172 - t4 * t631) * t372) * t271, t353 - g(1); -t606 * t99 - t608 * t98 - t610 * t97, -t199 * t610 - t200 * t608 - t201 * t606, -t202 * t610 - t203 * t608 - t204 * t606, -t182 * t431 - t184 * t432 - t186 * t430 - t606 * t66 - t608 * t65 - t610 * t64, (t180 * t493 - t230 * t63) * t277 + (t179 * t495 - t228 * t62) * t274 + (t178 * t497 - t226 * t61) * t271, (t186 * t451 - t230 * t47) * t277 + (t184 * t452 - t228 * t45) * t274 + (t182 * t453 - t226 * t43) * t271, (t186 * t533 - t230 * t48) * t277 + (t184 * t534 - t228 * t46) * t274 + (t182 * t535 - t226 * t44) * t271, t182 * t456 + t184 * t455 + t186 * t454, (-t230 * t30 + t493 * t77) * t277 + (-t228 * t28 + t495 * t75) * t274 + (-t226 * t26 + t497 * t73) * t271, (-t230 * t29 + t493 * t78) * t277 + (-t228 * t27 + t495 * t76) * t274 + (-t226 * t25 + t497 * t74) * t271, (-t21 * t230 + (t14 * t626 + t177 * t51) * t378) * t277 + (-t19 * t228 + (t15 * t628 + t175 * t50) * t375) * t274 + (-t20 * t226 + (t13 * t630 + t173 * t49) * t372) * t271, (-t230 * t9 + (t177 * t358 + t186 * t584) * t656) * t277 + (-t228 * t8 + (t175 * t356 + t184 * t585) * t657) * t274 + (-t226 * t7 + (t173 * t354 + t182 * t586) * t658) * t271, (-t18 * t230 + (t150 * t177 + t24 * t626) * t378) * t277 + (-t16 * t228 + (t149 * t175 + t23 * t628) * t375) * t274 + (-t17 * t226 + (t148 * t173 + t22 * t630) * t372) * t271, (-t230 * t3 + (t11 * t177 + t6 * t626) * t378) * t277 + (-t2 * t228 + (t12 * t175 + t5 * t628) * t375) * t274 + (-t1 * t226 + (t10 * t173 + t4 * t630) * t372) * t271, t352 - g(2); 0, 0, 0, -t487 * t572 - t489 * t574 - t491 * t573, t178 * t566 + t179 * t563 + t180 * t560, t572 * t99 + t573 * t98 + t574 * t97, t451 + t452 + t453, t52 * t566 + t53 * t563 + t54 * t560, t560 * t77 + t563 * t75 + t566 * t73, t560 * t78 + t563 * t76 + t566 * t74, (t14 * t358 + t285 * t51) * t378 + (t15 * t356 + t284 * t50) * t375 + (t13 * t354 + t283 * t49) * t372, (t285 + t290) * t530 + (t284 + t289) * t531 + (t283 + t288) * t532, (t150 * t285 + t24 * t358) * t378 + (t149 * t284 + t23 * t356) * t375 + (t148 * t283 + t22 * t354) * t372, (t11 * t285 + t358 * t6) * t378 + (t12 * t284 + t356 * t5) * t375 + (t10 * t283 + t354 * t4) * t372, t351 - g(3);];
tauX_reg  = t31;
