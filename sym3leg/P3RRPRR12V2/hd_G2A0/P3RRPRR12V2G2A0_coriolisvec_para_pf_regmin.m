% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRPRR12V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3x15]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 19:23
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRPRR12V2G2A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 19:22:00
% EndTime: 2020-08-06 19:22:32
% DurationCPUTime: 32.21s
% Computational Cost: add. (242931->830), mult. (327519->1598), div. (12789->12), fcn. (169938->18), ass. (0->597)
t1577 = xDP(2);
t1580 = pkin(2) + pkin(3);
t1859 = (t1577 * t1580);
t1512 = pkin(1) * t1859;
t1578 = xDP(1);
t1858 = (t1578 * t1580);
t1513 = pkin(1) * t1858;
t1561 = legFrame(3,2);
t1532 = sin(t1561);
t1535 = cos(t1561);
t1570 = cos(qJ(2,3));
t1553 = t1570 ^ 2;
t1564 = sin(qJ(2,3));
t1565 = sin(qJ(1,3));
t1576 = xDP(3);
t1579 = pkin(5) - pkin(6);
t1523 = t1565 * t1579;
t1571 = cos(qJ(1,3));
t1637 = -t1532 * t1577 + t1535 * t1578;
t1857 = t1579 * t1571;
t1714 = pkin(1) * t1565 - t1857;
t1605 = (pkin(1) * t1571 + t1523) * t1576 + t1637 * t1714;
t1638 = t1532 * t1578 + t1535 * t1577;
t1881 = (qJ(3,3) + t1580) * (-qJ(3,3) + t1580);
t1730 = t1571 * t1881;
t1731 = t1565 * t1881;
t1799 = -2 * t1858;
t1800 = -2 * t1859;
t1863 = t1576 * t1571;
t1981 = t1565 * qJ(3,3);
t1558 = pkin(1) * qJ(3,3);
t1732 = t1564 * t1881;
t2023 = t1732 - t1558;
t1529 = t1564 * qJ(3,3);
t2044 = 0.2e1 * t1529;
t1413 = ((qJ(3,3) * t1800 + t1578 * t1731) * t1535 + (qJ(3,3) * t1799 - t1577 * t1731) * t1532 + t1576 * t1730) * t1553 + (((t1565 * t1637 + t1863) * t2044 + t1605) * t1580 + t2023 * t1638) * t1570 + (qJ(3,3) * t1605 + t1512 * t1535 + t1513 * t1532) * t1564 - qJ(3,3) * ((-t1578 * t1981 - t1859) * t1535 + (t1577 * t1981 - t1858) * t1532 - qJ(3,3) * t1863);
t1515 = t1529 + pkin(1);
t1847 = t1580 * t1570;
t1497 = t1847 + t1515;
t1488 = 0.1e1 / t1497;
t1582 = 0.1e1 / qJ(3,3);
t1916 = t1488 * t1582;
t1407 = t1413 * t1916;
t2008 = pkin(1) * t1564;
t1520 = qJ(3,3) + t2008;
t1641 = t1515 * t1565 - t1857;
t1814 = t1515 * t1571 + t1523;
t1850 = t1580 * t1564;
t1860 = t1576 * t1580;
t1434 = ((-qJ(3,3) * t1577 + t1565 * t1858) * t1535 + (-qJ(3,3) * t1578 - t1565 * t1859) * t1532 + t1571 * t1860) * t1553 + ((t1577 * t1850 + t1578 * t1641) * t1535 + (-t1577 * t1641 + t1578 * t1850) * t1532 + t1814 * t1576) * t1570 + t1638 * t1520;
t1764 = t1434 * t1916;
t1428 = pkin(2) * t1764;
t1398 = t1428 - t1407;
t1708 = pkin(3) * t1764;
t1383 = -t1708 - t1398;
t1467 = -t1565 * t1576 + t1571 * t1637;
t1930 = t1467 * t1579;
t1751 = t1564 * t1930;
t1844 = t1580 * t1582;
t1425 = (-t1434 * t1844 + t1751) * t1488;
t1489 = 0.1e1 / t1497 ^ 2;
t1581 = qJ(3,3) ^ 2;
t1811 = pkin(1) ^ 2 + pkin(5) ^ 2;
t1660 = t1811 + (-0.2e1 * pkin(5) + pkin(6)) * pkin(6);
t1503 = t1581 + t1660;
t1583 = 0.1e1 / qJ(3,3) ^ 2;
t2031 = t1515 * t1570;
t1632 = 0.2e1 * t2031;
t1932 = t1467 * t1488;
t1753 = t1553 * t1932;
t1703 = qJ(3,3) * t1753;
t1380 = t1579 * t1383;
t1839 = 0.2e1 * t1558;
t1820 = t1839 * t1932 + t1380;
t1866 = t1570 * t1582;
t1951 = t1434 * t1582;
t1952 = t1434 * t1579;
t1353 = ((t1820 * t1564 + (t1570 * t1952 + (t1553 * t1881 + t1580 * t1632 + t1503) * t1467) * t1488) * t1467 * t1866 + (-(-t1579 * t1703 + ((-pkin(3) * t1951 + t1751) * t1488 - t1398) * t1847 + t1383 * t1515) * t1434 - (-t1425 * t1570 + t1515 * t1764) * t1413) * t1583) * t1489;
t1999 = t1353 * pkin(2);
t1853 = t1580 * t1383;
t1991 = qJ(3,3) * t1434;
t1374 = -t1488 * t1991 + t1853;
t1526 = 0.2e1 * t1553 - 0.1e1;
t1557 = t1580 ^ 2;
t1917 = t1488 * t1564;
t1752 = t1467 * t1917;
t1810 = -0.4e1 * pkin(1) * t1580;
t1854 = t1579 * t1580;
t2038 = 0.2e1 * pkin(1);
t2039 = (t1583 * (((t1488 * t1732 * t1930 + t1374 * t1580) * t1570 + pkin(1) * t1853 + (t1374 * t1564 + (-t1526 * t1467 * t1854 - pkin(1) * t1434) * t1488) * qJ(3,3)) * t1434 + (-t1425 * t1847 + ((pkin(1) * t1582 + t1564) * t1580 * t1434 + (t1553 - 0.1e1) * qJ(3,3) * t1930) * t1488) * t1413) + (-(t1557 - 0.3e1 * t1581) * t1753 * t1847 + (t1579 * (t1407 - 0.2e1 * t1428 - 0.2e1 * t1708) * qJ(3,3) + (-0.3e1 * (-t1581 / 0.3e1 + t1557) * t1529 + (t1581 - t1557) * t2038) * t1932) * t1553 + (-t1850 * t1380 + (-t1467 * (0.3e1 * t1581 + t1660) * t1580 + (t1467 * t1810 - t1952) * t1529) * t1488) * t1570 - (t1503 * t1752 + t1820) * qJ(3,3)) * t1467 * t1582) * t1489;
t2047 = t2039 + t1999;
t1562 = legFrame(2,2);
t1533 = sin(t1562);
t1536 = cos(t1562);
t1572 = cos(qJ(2,2));
t1554 = t1572 ^ 2;
t1566 = sin(qJ(2,2));
t1567 = sin(qJ(1,2));
t1524 = t1567 * t1579;
t1573 = cos(qJ(1,2));
t1635 = -t1533 * t1577 + t1536 * t1578;
t1856 = t1579 * t1573;
t1713 = pkin(1) * t1567 - t1856;
t1604 = (pkin(1) * t1573 + t1524) * t1576 + t1635 * t1713;
t1636 = t1533 * t1578 + t1536 * t1577;
t1880 = (qJ(3,2) + t1580) * (-qJ(3,2) + t1580);
t1727 = t1573 * t1880;
t1728 = t1567 * t1880;
t1862 = t1576 * t1573;
t1980 = t1567 * qJ(3,2);
t1559 = pkin(1) * qJ(3,2);
t1729 = t1566 * t1880;
t2024 = t1729 - t1559;
t1530 = t1566 * qJ(3,2);
t2043 = 0.2e1 * t1530;
t1414 = ((qJ(3,2) * t1800 + t1578 * t1728) * t1536 + (qJ(3,2) * t1799 - t1577 * t1728) * t1533 + t1576 * t1727) * t1554 + (((t1567 * t1635 + t1862) * t2043 + t1604) * t1580 + t2024 * t1636) * t1572 + (qJ(3,2) * t1604 + t1512 * t1536 + t1513 * t1533) * t1566 - qJ(3,2) * ((-t1578 * t1980 - t1859) * t1536 + (t1577 * t1980 - t1858) * t1533 - qJ(3,2) * t1862);
t1517 = t1530 + pkin(1);
t1846 = t1580 * t1572;
t1498 = t1846 + t1517;
t1491 = 0.1e1 / t1498;
t1585 = 0.1e1 / qJ(3,2);
t1911 = t1491 * t1585;
t1408 = t1414 * t1911;
t2007 = pkin(1) * t1566;
t1521 = qJ(3,2) + t2007;
t1640 = t1517 * t1567 - t1856;
t1813 = t1517 * t1573 + t1524;
t1849 = t1580 * t1566;
t1435 = ((-qJ(3,2) * t1577 + t1567 * t1858) * t1536 + (-qJ(3,2) * t1578 - t1567 * t1859) * t1533 + t1573 * t1860) * t1554 + ((t1577 * t1849 + t1578 * t1640) * t1536 + (-t1577 * t1640 + t1578 * t1849) * t1533 + t1813 * t1576) * t1572 + t1636 * t1521;
t1761 = t1435 * t1911;
t1429 = pkin(2) * t1761;
t1400 = t1429 - t1408;
t1707 = pkin(3) * t1761;
t1384 = -t1707 - t1400;
t1468 = -t1567 * t1576 + t1573 * t1635;
t1927 = t1468 * t1579;
t1748 = t1566 * t1927;
t1843 = t1580 * t1585;
t1426 = (-t1435 * t1843 + t1748) * t1491;
t1492 = 0.1e1 / t1498 ^ 2;
t1584 = qJ(3,2) ^ 2;
t1504 = t1584 + t1660;
t1586 = 0.1e1 / qJ(3,2) ^ 2;
t2030 = t1517 * t1572;
t1631 = 0.2e1 * t2030;
t1929 = t1468 * t1491;
t1750 = t1554 * t1929;
t1704 = qJ(3,2) * t1750;
t1381 = t1579 * t1384;
t1840 = 0.2e1 * t1559;
t1819 = t1840 * t1929 + t1381;
t1865 = t1572 * t1585;
t1948 = t1435 * t1585;
t1949 = t1435 * t1579;
t1354 = ((t1819 * t1566 + (t1572 * t1949 + (t1554 * t1880 + t1580 * t1631 + t1504) * t1468) * t1491) * t1468 * t1865 + (-(-t1579 * t1704 + ((-pkin(3) * t1948 + t1748) * t1491 - t1400) * t1846 + t1384 * t1517) * t1435 - (-t1426 * t1572 + t1517 * t1761) * t1414) * t1586) * t1492;
t1998 = t1354 * pkin(2);
t1852 = t1580 * t1384;
t1992 = qJ(3,2) * t1435;
t1375 = -t1491 * t1992 + t1852;
t1527 = 0.2e1 * t1554 - 0.1e1;
t1912 = t1491 * t1566;
t1749 = t1468 * t1912;
t2040 = (t1586 * (((t1491 * t1729 * t1927 + t1375 * t1580) * t1572 + pkin(1) * t1852 + (t1375 * t1566 + (-t1527 * t1468 * t1854 - pkin(1) * t1435) * t1491) * qJ(3,2)) * t1435 + (-t1426 * t1846 + ((pkin(1) * t1585 + t1566) * t1580 * t1435 + (t1554 - 0.1e1) * qJ(3,2) * t1927) * t1491) * t1414) + (-(t1557 - 0.3e1 * t1584) * t1750 * t1846 + (t1579 * (t1408 - 0.2e1 * t1429 - 0.2e1 * t1707) * qJ(3,2) + (-0.3e1 * (-t1584 / 0.3e1 + t1557) * t1530 + (t1584 - t1557) * t2038) * t1929) * t1554 + (-t1849 * t1381 + (-t1468 * (0.3e1 * t1584 + t1660) * t1580 + (t1468 * t1810 - t1949) * t1530) * t1491) * t1572 - (t1504 * t1749 + t1819) * qJ(3,2)) * t1468 * t1585) * t1492;
t2046 = t2040 + t1998;
t1563 = legFrame(1,2);
t1534 = sin(t1563);
t1537 = cos(t1563);
t1574 = cos(qJ(2,1));
t1555 = t1574 ^ 2;
t1568 = sin(qJ(2,1));
t1569 = sin(qJ(1,1));
t1525 = t1569 * t1579;
t1575 = cos(qJ(1,1));
t1633 = -t1534 * t1577 + t1537 * t1578;
t1855 = t1579 * t1575;
t1712 = pkin(1) * t1569 - t1855;
t1603 = (pkin(1) * t1575 + t1525) * t1576 + t1633 * t1712;
t1634 = t1534 * t1578 + t1537 * t1577;
t1879 = (qJ(3,1) + t1580) * (-qJ(3,1) + t1580);
t1724 = t1575 * t1879;
t1725 = t1569 * t1879;
t1861 = t1576 * t1575;
t1979 = t1569 * qJ(3,1);
t1560 = pkin(1) * qJ(3,1);
t1726 = t1568 * t1879;
t2025 = t1726 - t1560;
t1531 = t1568 * qJ(3,1);
t2042 = 0.2e1 * t1531;
t1415 = ((qJ(3,1) * t1800 + t1578 * t1725) * t1537 + (qJ(3,1) * t1799 - t1577 * t1725) * t1534 + t1576 * t1724) * t1555 + (((t1569 * t1633 + t1861) * t2042 + t1603) * t1580 + t2025 * t1634) * t1574 + (qJ(3,1) * t1603 + t1512 * t1537 + t1513 * t1534) * t1568 - qJ(3,1) * ((-t1578 * t1979 - t1859) * t1537 + (t1577 * t1979 - t1858) * t1534 - qJ(3,1) * t1861);
t1519 = t1531 + pkin(1);
t1845 = t1580 * t1574;
t1499 = t1845 + t1519;
t1494 = 0.1e1 / t1499;
t1588 = 0.1e1 / qJ(3,1);
t1906 = t1494 * t1588;
t1409 = t1415 * t1906;
t2006 = pkin(1) * t1568;
t1522 = qJ(3,1) + t2006;
t1639 = t1519 * t1569 - t1855;
t1812 = t1519 * t1575 + t1525;
t1848 = t1580 * t1568;
t1436 = ((-qJ(3,1) * t1577 + t1569 * t1858) * t1537 + (-qJ(3,1) * t1578 - t1569 * t1859) * t1534 + t1575 * t1860) * t1555 + ((t1577 * t1848 + t1578 * t1639) * t1537 + (-t1577 * t1639 + t1578 * t1848) * t1534 + t1812 * t1576) * t1574 + t1634 * t1522;
t1758 = t1436 * t1906;
t1430 = pkin(2) * t1758;
t1402 = t1430 - t1409;
t1706 = pkin(3) * t1758;
t1385 = -t1706 - t1402;
t1469 = -t1569 * t1576 + t1575 * t1633;
t1924 = t1469 * t1579;
t1745 = t1568 * t1924;
t1842 = t1580 * t1588;
t1427 = (-t1436 * t1842 + t1745) * t1494;
t1495 = 0.1e1 / t1499 ^ 2;
t1587 = qJ(3,1) ^ 2;
t1505 = t1587 + t1660;
t1589 = 0.1e1 / qJ(3,1) ^ 2;
t2029 = t1519 * t1574;
t1630 = 0.2e1 * t2029;
t1926 = t1469 * t1494;
t1747 = t1555 * t1926;
t1705 = qJ(3,1) * t1747;
t1382 = t1579 * t1385;
t1841 = 0.2e1 * t1560;
t1818 = t1841 * t1926 + t1382;
t1864 = t1574 * t1588;
t1945 = t1436 * t1588;
t1946 = t1436 * t1579;
t1355 = ((t1818 * t1568 + (t1574 * t1946 + (t1555 * t1879 + t1580 * t1630 + t1505) * t1469) * t1494) * t1469 * t1864 + (-(-t1579 * t1705 + ((-pkin(3) * t1945 + t1745) * t1494 - t1402) * t1845 + t1385 * t1519) * t1436 - (-t1427 * t1574 + t1519 * t1758) * t1415) * t1589) * t1495;
t1997 = t1355 * pkin(2);
t1851 = t1580 * t1385;
t1993 = qJ(3,1) * t1436;
t1376 = -t1494 * t1993 + t1851;
t1528 = 0.2e1 * t1555 - 0.1e1;
t1907 = t1494 * t1568;
t1746 = t1469 * t1907;
t2041 = (t1589 * (((t1494 * t1726 * t1924 + t1376 * t1580) * t1574 + pkin(1) * t1851 + (t1376 * t1568 + (-t1528 * t1469 * t1854 - pkin(1) * t1436) * t1494) * qJ(3,1)) * t1436 + (-t1427 * t1845 + ((pkin(1) * t1588 + t1568) * t1580 * t1436 + (t1555 - 0.1e1) * qJ(3,1) * t1924) * t1494) * t1415) + (-(t1557 - 0.3e1 * t1587) * t1747 * t1845 + (t1579 * (t1409 - 0.2e1 * t1430 - 0.2e1 * t1706) * qJ(3,1) + (-0.3e1 * (-t1587 / 0.3e1 + t1557) * t1531 + (t1587 - t1557) * t2038) * t1926) * t1555 + (-t1848 * t1382 + (-t1469 * (0.3e1 * t1587 + t1660) * t1580 + (t1469 * t1810 - t1946) * t1531) * t1494) * t1574 - (t1505 * t1746 + t1818) * qJ(3,1)) * t1469 * t1588) * t1495;
t2045 = t2041 + t1997;
t2037 = 0.2e1 * t1535;
t2036 = 0.2e1 * t1536;
t2035 = 0.2e1 * t1537;
t1915 = t1489 * t1582;
t1763 = t1434 * t1915;
t1720 = 0.2e1 * t1763;
t2034 = t1488 * t1720;
t1910 = t1492 * t1585;
t1760 = t1435 * t1910;
t1719 = 0.2e1 * t1760;
t2033 = t1491 * t1719;
t1905 = t1495 * t1588;
t1757 = t1436 * t1905;
t1718 = 0.2e1 * t1757;
t2032 = t1494 * t1718;
t1996 = t1570 * pkin(2);
t2028 = t1564 * (pkin(1) + t1996);
t1995 = t1572 * pkin(2);
t2027 = t1566 * (pkin(1) + t1995);
t1994 = t1574 * pkin(2);
t2026 = t1568 * (pkin(1) + t1994);
t2018 = -0.2e1 * t1398;
t2017 = -0.2e1 * t1400;
t2016 = -0.2e1 * t1402;
t2015 = -0.2e1 * t1532;
t2014 = -0.2e1 * t1533;
t2013 = -0.2e1 * t1534;
t2012 = 0.4e1 * t1553;
t2011 = 0.4e1 * t1554;
t2010 = 0.4e1 * t1555;
t2009 = -0.2e1 * t1580;
t2005 = pkin(2) * t1553;
t2004 = pkin(2) * t1554;
t2003 = pkin(2) * t1555;
t1490 = t1488 * t1489;
t1913 = t1490 * t1582;
t1953 = t1434 * t1467;
t1684 = t1913 * t1953;
t1877 = t1564 * t1582;
t1740 = t1490 * t1877;
t1931 = t1467 * t1489;
t1978 = t1570 * qJ(3,3);
t1368 = -(t1407 * t1564 + (t1930 + (-t1564 * t1844 + t1570) * t1434) * t1488) * t1931 + (t1850 - t1978) * t1684 - t1467 * t1413 * t1740;
t2002 = pkin(5) * t1368;
t1493 = t1491 * t1492;
t1908 = t1493 * t1585;
t1950 = t1435 * t1468;
t1683 = t1908 * t1950;
t1873 = t1566 * t1585;
t1737 = t1493 * t1873;
t1928 = t1468 * t1492;
t1977 = t1572 * qJ(3,2);
t1369 = -(t1408 * t1566 + (t1927 + (-t1566 * t1843 + t1572) * t1435) * t1491) * t1928 + (t1849 - t1977) * t1683 - t1468 * t1414 * t1737;
t2001 = pkin(5) * t1369;
t1496 = t1494 * t1495;
t1903 = t1496 * t1588;
t1947 = t1436 * t1469;
t1682 = t1903 * t1947;
t1869 = t1568 * t1588;
t1734 = t1496 * t1869;
t1925 = t1469 * t1495;
t1976 = t1574 * qJ(3,1);
t1370 = -(t1409 * t1568 + (t1924 + (-t1568 * t1842 + t1574) * t1436) * t1494) * t1925 + (t1848 - t1976) * t1682 - t1469 * t1415 * t1734;
t2000 = pkin(5) * t1370;
t1990 = t1532 * qJ(3,3);
t1989 = t1533 * qJ(3,2);
t1988 = t1534 * qJ(3,1);
t1987 = t1535 * qJ(3,3);
t1986 = t1536 * qJ(3,2);
t1985 = t1537 * qJ(3,1);
t1984 = t1553 * qJ(3,3);
t1983 = t1554 * qJ(3,2);
t1982 = t1555 * qJ(3,1);
t1974 = t1353 * t1570;
t1973 = t1354 * t1572;
t1972 = t1355 * t1574;
t1971 = t1368 * t1488;
t1970 = t1368 * t1564;
t1969 = t1368 * t1570;
t1968 = t1368 * t1571;
t1967 = t1368 * t1582;
t1966 = t1369 * t1491;
t1965 = t1369 * t1566;
t1964 = t1369 * t1572;
t1963 = t1369 * t1573;
t1962 = t1369 * t1585;
t1961 = t1370 * t1494;
t1960 = t1370 * t1568;
t1959 = t1370 * t1574;
t1958 = t1370 * t1575;
t1957 = t1370 * t1588;
t1431 = t1434 ^ 2;
t1956 = t1431 * t1583;
t1432 = t1435 ^ 2;
t1955 = t1432 * t1586;
t1433 = t1436 ^ 2;
t1954 = t1433 * t1589;
t1783 = t1564 * t1981;
t1477 = t1714 + t1783;
t1875 = t1565 * t1580;
t1446 = (-t1532 * t1875 - t1987) * t1553 + (-t1477 * t1532 + t1535 * t1850) * t1570 + t1535 * t1520;
t1944 = t1446 * t1582;
t1447 = (t1535 * t1875 - t1990) * t1553 + (t1477 * t1535 + t1532 * t1850) * t1570 + t1532 * t1520;
t1943 = t1447 * t1582;
t1782 = t1566 * t1980;
t1479 = t1713 + t1782;
t1871 = t1567 * t1580;
t1448 = (-t1533 * t1871 - t1986) * t1554 + (-t1479 * t1533 + t1536 * t1849) * t1572 + t1536 * t1521;
t1942 = t1448 * t1585;
t1449 = (t1536 * t1871 - t1989) * t1554 + (t1479 * t1536 + t1533 * t1849) * t1572 + t1533 * t1521;
t1941 = t1449 * t1585;
t1781 = t1568 * t1979;
t1481 = t1712 + t1781;
t1867 = t1569 * t1580;
t1450 = (-t1534 * t1867 - t1985) * t1555 + (-t1481 * t1534 + t1537 * t1848) * t1574 + t1537 * t1522;
t1940 = t1450 * t1588;
t1451 = (t1537 * t1867 - t1988) * t1555 + (t1481 * t1537 + t1534 * t1848) * t1574 + t1534 * t1522;
t1939 = t1451 * t1588;
t1514 = t2044 + pkin(1);
t1452 = t1553 * t1730 + (t1514 * t1571 + t1523) * t1847 + qJ(3,3) * (t1520 * t1571 + t1564 * t1523);
t1938 = t1452 * t1564;
t1516 = t2043 + pkin(1);
t1453 = t1554 * t1727 + (t1516 * t1573 + t1524) * t1846 + qJ(3,2) * (t1521 * t1573 + t1566 * t1524);
t1937 = t1453 * t1566;
t1518 = t2042 + pkin(1);
t1454 = t1555 * t1724 + (t1518 * t1575 + t1525) * t1845 + qJ(3,1) * (t1522 * t1575 + t1568 * t1525);
t1936 = t1454 * t1568;
t1464 = t1467 ^ 2;
t1461 = t1464 * t1489;
t1935 = t1464 * t1553;
t1465 = t1468 ^ 2;
t1462 = t1465 * t1492;
t1934 = t1465 * t1554;
t1466 = t1469 ^ 2;
t1463 = t1466 * t1495;
t1933 = t1466 * t1555;
t1470 = t1571 * t1847 + t1814;
t1923 = t1470 * t1570;
t1922 = t1470 * t1582;
t1471 = t1573 * t1846 + t1813;
t1921 = t1471 * t1572;
t1920 = t1471 * t1585;
t1472 = t1575 * t1845 + t1812;
t1919 = t1472 * t1574;
t1918 = t1472 * t1588;
t1914 = t1489 * t1583;
t1909 = t1492 * t1586;
t1904 = t1495 * t1589;
t1902 = t1514 * t1570;
t1901 = t1516 * t1572;
t1900 = t1518 * t1574;
t1899 = t1532 * t1571;
t1897 = t1532 * t1580;
t1896 = t1533 * t1573;
t1894 = t1533 * t1580;
t1893 = t1534 * t1575;
t1891 = t1534 * t1580;
t1890 = t1535 * t1571;
t1888 = t1535 * t1580;
t1887 = t1536 * t1573;
t1885 = t1536 * t1580;
t1884 = t1537 * t1575;
t1882 = t1537 * t1580;
t1878 = t1564 * t1570;
t1876 = t1565 * t1570;
t1874 = t1566 * t1572;
t1872 = t1567 * t1572;
t1870 = t1568 * t1574;
t1868 = t1569 * t1574;
t1395 = t1428 - t1407 / 0.2e1;
t1399 = t1428 - 0.2e1 * t1407;
t1592 = pkin(2) ^ 2;
t1538 = -t1581 + t1592;
t1627 = qJ(3,3) * t1974 - t2047 * t1564;
t1717 = t1932 * t2018;
t1741 = t1488 * t1866;
t1838 = t1627 * pkin(5) + (pkin(2) * t1632 + t1538 * t1553 + t1564 * t1839 + t1581 + t1811) * t1368 + 0.4e1 * t1395 * t1703 + (-pkin(5) * t1399 * t1434 + 0.2e1 * (-(-pkin(2) * t1413 + t1434 * t1538) * t1564 + pkin(1) * t1991) * t1932) * t1741 + (-pkin(5) * t1431 * t1915 + pkin(1) * t1717) * t1564 + qJ(3,3) * t1717;
t1396 = t1429 - t1408 / 0.2e1;
t1401 = t1429 - 0.2e1 * t1408;
t1539 = -t1584 + t1592;
t1628 = qJ(3,2) * t1973 - t2046 * t1566;
t1716 = t1929 * t2017;
t1738 = t1491 * t1865;
t1837 = t1628 * pkin(5) + (pkin(2) * t1631 + t1539 * t1554 + t1566 * t1840 + t1584 + t1811) * t1369 + 0.4e1 * t1396 * t1704 + (-t1435 * pkin(5) * t1401 + 0.2e1 * (-(-pkin(2) * t1414 + t1435 * t1539) * t1566 + pkin(1) * t1992) * t1929) * t1738 + (-pkin(5) * t1432 * t1910 + pkin(1) * t1716) * t1566 + qJ(3,2) * t1716;
t1397 = t1430 - t1409 / 0.2e1;
t1403 = t1430 - 0.2e1 * t1409;
t1540 = -t1587 + t1592;
t1629 = qJ(3,1) * t1972 - t2045 * t1568;
t1715 = t1926 * t2016;
t1735 = t1494 * t1864;
t1836 = t1629 * pkin(5) + (pkin(2) * t1630 + t1540 * t1555 + t1568 * t1841 + t1587 + t1811) * t1370 + 0.4e1 * t1397 * t1705 + (-pkin(5) * t1403 * t1436 + 0.2e1 * (-(-pkin(2) * t1415 + t1436 * t1540) * t1568 + pkin(1) * t1993) * t1926) * t1735 + (-pkin(5) * t1433 * t1905 + pkin(1) * t1715) * t1568 + qJ(3,1) * t1715;
t1506 = -t1564 * pkin(2) + t1978;
t1806 = -0.2e1 * t1984;
t1817 = 0.2e1 * t1434 * t1413 * t1914 + pkin(2) * t1461;
t1835 = (t1592 + t1581) * t1353 + t1506 * t2002 + pkin(2) * t2039 + t1817 * qJ(3,3) + (-(-t1538 * t1564 + t1558) * t1570 + (t1806 + t2008) * pkin(2)) * t1461;
t1507 = -t1566 * pkin(2) + t1977;
t1805 = -0.2e1 * t1983;
t1816 = 0.2e1 * t1435 * t1414 * t1909 + pkin(2) * t1462;
t1834 = (t1592 + t1584) * t1354 + t1507 * t2001 + pkin(2) * t2040 + t1816 * qJ(3,2) + (-(-t1539 * t1566 + t1559) * t1572 + (t1805 + t2007) * pkin(2)) * t1462;
t1508 = -t1568 * pkin(2) + t1976;
t1804 = -0.2e1 * t1982;
t1815 = 0.2e1 * t1436 * t1415 * t1904 + pkin(2) * t1463;
t1833 = (t1592 + t1587) * t1355 + t1508 * t2000 + pkin(2) * t2041 + t1815 * qJ(3,1) + (-(-t1540 * t1568 + t1560) * t1574 + (t1804 + t2006) * pkin(2)) * t1463;
t1770 = t1431 * t1914;
t1794 = pkin(5) * t1970;
t1832 = t1794 - qJ(3,3) * (t1461 + t1770) + (t1984 - t2028) * t1461 - t2047;
t1768 = t1432 * t1909;
t1792 = pkin(5) * t1965;
t1831 = t1792 - qJ(3,2) * (t1462 + t1768) + (t1983 - t2027) * t1462 - t2046;
t1766 = t1433 * t1904;
t1790 = pkin(5) * t1960;
t1830 = t1790 - qJ(3,1) * (t1463 + t1766) + (t1982 - t2026) * t1463 - t2045;
t1711 = pkin(5) * t1770;
t1789 = pkin(5) * t1974;
t1829 = t1789 + (0.2e1 * t2028 + (-0.2e1 * t1553 + 0.2e1) * qJ(3,3)) * t1368 - t1564 * t1711 + (t1720 * t1902 + (t1395 * t2012 + t2018) * t1488) * t1467;
t1710 = pkin(5) * t1768;
t1788 = pkin(5) * t1973;
t1828 = t1788 + (0.2e1 * t2027 + (-0.2e1 * t1554 + 0.2e1) * qJ(3,2)) * t1369 - t1566 * t1710 + (t1719 * t1901 + (t1396 * t2011 + t2017) * t1491) * t1468;
t1709 = pkin(5) * t1766;
t1787 = pkin(5) * t1972;
t1827 = t1787 + (0.2e1 * t2026 + (-0.2e1 * t1555 + 0.2e1) * qJ(3,1)) * t1370 - t1568 * t1709 + (t1718 * t1900 + (t1397 * t2010 + t2016) * t1494) * t1469;
t1795 = t1564 * pkin(5) * t1353;
t1826 = -t1795 + 0.2e1 * (t2005 + t2031) * t1368 + (-0.4e1 * t1395 * t1752 - t1711) * t1570 + (-0.2e1 * t1520 * t1582 + t2012) * t1434 * t1931;
t1793 = t1566 * pkin(5) * t1354;
t1825 = -t1793 + 0.2e1 * (t2004 + t2030) * t1369 + (-0.4e1 * t1396 * t1749 - t1710) * t1572 + (-0.2e1 * t1521 * t1585 + t2011) * t1435 * t1928;
t1791 = t1568 * pkin(5) * t1355;
t1824 = -t1791 + 0.2e1 * (t2003 + t2029) * t1370 + (-0.4e1 * t1397 * t1746 - t1709) * t1574 + (-0.2e1 * t1522 * t1588 + t2010) * t1436 * t1925;
t1823 = pkin(5) * t1969 + 0.2e1 * t1353 * qJ(3,3) + (-t1902 - 0.2e1 * t2005) * t1461 + t1817;
t1822 = pkin(5) * t1964 + 0.2e1 * t1354 * qJ(3,2) + (-t1901 - 0.2e1 * t2004) * t1462 + t1816;
t1821 = pkin(5) * t1959 + 0.2e1 * t1355 * qJ(3,1) + (-t1900 - 0.2e1 * t2003) * t1463 + t1815;
t1809 = qJ(3,1) * t2009;
t1808 = qJ(3,2) * t2009;
t1807 = qJ(3,3) * t2009;
t1803 = -0.2e1 * t1970;
t1802 = -0.2e1 * t1965;
t1801 = -0.2e1 * t1960;
t1798 = pkin(5) * t1951;
t1797 = pkin(5) * t1948;
t1796 = pkin(5) * t1945;
t1780 = t1353 * t1916;
t1779 = t1354 * t1911;
t1778 = t1355 * t1906;
t1774 = t1488 * t1968;
t1773 = t1491 * t1963;
t1772 = t1494 * t1958;
t1771 = t1490 * t1956;
t1769 = t1493 * t1955;
t1767 = t1496 * t1954;
t1765 = t1571 * t1953;
t1762 = t1573 * t1950;
t1759 = t1575 * t1947;
t1756 = t1464 * t1913;
t1755 = t1465 * t1908;
t1754 = t1466 * t1903;
t1744 = t1553 * t1922;
t1743 = t1554 * t1920;
t1742 = t1555 * t1918;
t1739 = t1490 * t1866;
t1736 = t1493 * t1865;
t1733 = t1496 * t1864;
t1723 = t1565 * t1971;
t1722 = t1567 * t1966;
t1721 = t1569 * t1961;
t1702 = t1877 * t1971;
t1701 = t1368 * t1741;
t1700 = t1878 * t1968;
t1699 = t1873 * t1966;
t1698 = t1369 * t1738;
t1697 = t1874 * t1963;
t1696 = t1869 * t1961;
t1695 = t1370 * t1735;
t1694 = t1870 * t1958;
t1693 = (t1399 * t1570 + t1434 * t1917) * t1763;
t1692 = (t1401 * t1572 + t1435 * t1912) * t1760;
t1691 = (t1403 * t1574 + t1436 * t1907) * t1757;
t1690 = t1565 * t1771;
t1689 = t1571 * t1771;
t1688 = t1567 * t1769;
t1687 = t1573 * t1769;
t1686 = t1569 * t1767;
t1685 = t1575 * t1767;
t1681 = t1464 * t1740;
t1680 = t1464 * t1739;
t1679 = t1465 * t1737;
t1678 = t1465 * t1736;
t1677 = t1466 * t1734;
t1676 = t1466 * t1733;
t1675 = t1470 * t1741;
t1674 = t1368 * t1744;
t1673 = t1471 * t1738;
t1672 = t1369 * t1743;
t1671 = t1472 * t1735;
t1670 = t1370 * t1742;
t1669 = t1564 * t1739;
t1668 = t1566 * t1736;
t1667 = t1568 * t1733;
t1666 = t1532 * t1774;
t1665 = t1533 * t1773;
t1664 = t1534 * t1772;
t1663 = t1535 * t1774;
t1662 = t1536 * t1773;
t1661 = t1537 * t1772;
t1656 = t1571 * t1693;
t1655 = t1573 * t1692;
t1654 = t1575 * t1691;
t1653 = t1564 * t1689;
t1652 = t1570 * t1689;
t1651 = t1566 * t1687;
t1650 = t1572 * t1687;
t1649 = t1568 * t1685;
t1648 = t1574 * t1685;
t1647 = t1526 * t1684;
t1646 = t1527 * t1683;
t1645 = t1528 * t1682;
t1626 = t1571 * t1647;
t1625 = t1573 * t1646;
t1624 = t1575 * t1645;
t1623 = -t1488 * (t1969 * t2038 - t1795) + (t1467 * t2008 + t1570 * t1798 / 0.2e1) * t2034;
t1622 = -t1491 * (t1964 * t2038 - t1793) + (t1468 * t2007 + t1572 * t1797 / 0.2e1) * t2033;
t1621 = -t1494 * (t1959 * t2038 - t1791) + (t1469 * t2006 + t1574 * t1796 / 0.2e1) * t2032;
t1620 = -t1488 * (pkin(1) * t1803 - t1789) + (t1570 * pkin(1) * t1467 - t1564 * t1798 / 0.2e1) * t2034;
t1619 = -t1491 * (pkin(1) * t1802 - t1788) + (t1572 * pkin(1) * t1468 - t1566 * t1797 / 0.2e1) * t2033;
t1618 = -t1494 * (pkin(1) * t1801 - t1787) + (t1574 * pkin(1) * t1469 - t1568 * t1796 / 0.2e1) * t2032;
t1617 = t1488 * (-t1353 * t1899 + t1368 * t1944);
t1616 = t1488 * (t1353 * t1890 + t1368 * t1943);
t1615 = t1491 * (-t1354 * t1896 + t1369 * t1942);
t1614 = t1491 * (t1354 * t1887 + t1369 * t1941);
t1613 = t1494 * (-t1355 * t1893 + t1370 * t1940);
t1612 = t1494 * (t1355 * t1884 + t1370 * t1939);
t1552 = t1568 ^ 2;
t1551 = t1566 ^ 2;
t1550 = t1564 ^ 2;
t1484 = (pkin(1) + 0.2e1 * t1994) * t1568 + t1804 + qJ(3,1);
t1483 = (pkin(1) + 0.2e1 * t1995) * t1566 + t1805 + qJ(3,2);
t1482 = (pkin(1) + 0.2e1 * t1996) * t1564 + t1806 + qJ(3,3);
t1480 = t1712 + 0.2e1 * t1781;
t1478 = t1713 + 0.2e1 * t1782;
t1476 = t1714 + 0.2e1 * t1783;
t1475 = t1568 * t1712 + t1979;
t1474 = t1566 * t1713 + t1980;
t1473 = t1564 * t1714 + t1981;
t1445 = -0.2e1 * t1495 * t1933 + t1463;
t1444 = -0.2e1 * t1492 * t1934 + t1462;
t1443 = -0.2e1 * t1489 * t1935 + t1461;
t1442 = (t1534 * t1809 + t1537 * t1725) * t1555 + (t1480 * t1882 + t1534 * t2025) * t1574 + t1475 * t1985 + t1522 * t1891;
t1441 = (-t1534 * t1725 + t1537 * t1809) * t1555 + (-t1480 * t1891 + t1537 * t2025) * t1574 - t1475 * t1988 + t1522 * t1882;
t1440 = (t1533 * t1808 + t1536 * t1728) * t1554 + (t1478 * t1885 + t1533 * t2024) * t1572 + t1474 * t1986 + t1521 * t1894;
t1439 = (-t1533 * t1728 + t1536 * t1808) * t1554 + (-t1478 * t1894 + t1536 * t2024) * t1572 - t1474 * t1989 + t1521 * t1885;
t1438 = (t1532 * t1807 + t1535 * t1731) * t1553 + (t1476 * t1888 + t1532 * t2023) * t1570 + t1473 * t1987 + t1520 * t1897;
t1437 = (-t1532 * t1731 + t1535 * t1807) * t1553 + (-t1476 * t1897 + t1535 * t2023) * t1570 - t1473 * t1990 + t1520 * t1888;
t1418 = -t1463 + (t1933 - t1954) * t1495;
t1417 = -t1462 + (t1934 - t1955) * t1492;
t1416 = -t1461 + (t1935 - t1956) * t1489;
t1334 = t2041 - t1790 + 0.2e1 * t1997;
t1333 = t2040 - t1792 + 0.2e1 * t1998;
t1332 = t2039 - t1794 + 0.2e1 * t1999;
t1328 = t1629 + 0.2e1 * t2000;
t1327 = t1628 + 0.2e1 * t2001;
t1326 = t1627 + 0.2e1 * t2002;
t1 = [t1661 + t1662 + t1663, 0, 0, t1550 * t1663 + t1551 * t1662 + t1552 * t1661 + (-t1451 * t1466 + t1759 * t2035) * t1667 + (-t1449 * t1465 + t1762 * t2036) * t1668 + (-t1447 * t1464 + t1765 * t2037) * t1669, t1626 * t2037 + t1625 * t2036 + t1624 * t2035 + (t1445 * t1939 + t1694 * t2035) * t1494 + (t1444 * t1941 + t1697 * t2036) * t1491 + (t1443 * t1943 + t1700 * t2037) * t1488, t1535 * t1652 + t1536 * t1650 + t1537 * t1648 + t1564 * t1616 + t1566 * t1614 + t1568 * t1612, -t1535 * t1653 - t1536 * t1651 - t1537 * t1649 + t1570 * t1616 + t1572 * t1614 + t1574 * t1612, t1447 * t1780 + t1449 * t1779 + t1451 * t1778, -t1621 * t1884 - t1622 * t1887 - t1623 * t1890 + (-t1447 * t1702 - t1449 * t1699 - t1451 * t1696) * pkin(5) + (t1447 * t1681 + t1449 * t1679 + t1451 * t1677) * pkin(1), -t1618 * t1884 - t1619 * t1887 - t1620 * t1890 + (-t1447 * t1701 - t1449 * t1698 - t1451 * t1695) * pkin(5) + (t1447 * t1680 + t1449 * t1678 + t1451 * t1676) * pkin(1), (-t1442 * t1870 + t1451 * t1484) * t1754 + (-t1440 * t1874 + t1449 * t1483) * t1755 + (-t1438 * t1878 + t1447 * t1482) * t1756 + ((t1334 * t1451 - t1355 * t1442) * t1588 + t1824 * t1884) * t1494 + ((t1333 * t1449 - t1354 * t1440) * t1585 + t1825 * t1887) * t1491 + ((t1332 * t1447 - t1353 * t1438) * t1582 + t1826 * t1890) * t1488, -t1535 * t1656 - t1536 * t1655 - t1537 * t1654 + (t1328 * t1884 + (t1442 * t1568 + t1451 * t1508) * t1957) * t1494 + (t1327 * t1887 + (t1440 * t1566 + t1449 * t1507) * t1962) * t1491 + (t1326 * t1890 + (t1438 * t1564 + t1447 * t1506) * t1967) * t1488, (t1827 * t1884 + (t1418 * t1442 + t1451 * t1821) * t1588) * t1494 + (t1828 * t1887 + (t1417 * t1440 + t1449 * t1822) * t1585) * t1491 + (t1829 * t1890 + (t1416 * t1438 + t1447 * t1823) * t1582) * t1488, (t1836 * t1884 + (t1442 * t1830 + t1451 * t1833) * t1588) * t1494 + (t1837 * t1887 + (t1440 * t1831 + t1449 * t1834) * t1585) * t1491 + (t1838 * t1890 + (t1438 * t1832 + t1447 * t1835) * t1582) * t1488, 0; -t1664 - t1665 - t1666, 0, 0, -t1550 * t1666 - t1551 * t1665 - t1552 * t1664 + (-t1450 * t1466 + t1759 * t2013) * t1667 + (-t1448 * t1465 + t1762 * t2014) * t1668 + (-t1446 * t1464 + t1765 * t2015) * t1669, t1626 * t2015 + t1625 * t2014 + t1624 * t2013 + (t1445 * t1940 + t1694 * t2013) * t1494 + (t1444 * t1942 + t1697 * t2014) * t1491 + (t1443 * t1944 + t1700 * t2015) * t1488, -t1532 * t1652 - t1533 * t1650 - t1534 * t1648 + t1564 * t1617 + t1566 * t1615 + t1568 * t1613, t1532 * t1653 + t1533 * t1651 + t1534 * t1649 + t1570 * t1617 + t1572 * t1615 + t1574 * t1613, t1446 * t1780 + t1448 * t1779 + t1450 * t1778, t1621 * t1893 + t1622 * t1896 + t1623 * t1899 + (-t1446 * t1702 - t1448 * t1699 - t1450 * t1696) * pkin(5) + (t1446 * t1681 + t1448 * t1679 + t1450 * t1677) * pkin(1), t1618 * t1893 + t1619 * t1896 + t1620 * t1899 + (-t1446 * t1701 - t1448 * t1698 - t1450 * t1695) * pkin(5) + (t1446 * t1680 + t1448 * t1678 + t1450 * t1676) * pkin(1), (-t1441 * t1870 + t1450 * t1484) * t1754 + (-t1439 * t1874 + t1448 * t1483) * t1755 + (-t1437 * t1878 + t1446 * t1482) * t1756 + ((t1334 * t1450 - t1355 * t1441) * t1588 - t1824 * t1893) * t1494 + ((t1333 * t1448 - t1354 * t1439) * t1585 - t1825 * t1896) * t1491 + ((t1332 * t1446 - t1353 * t1437) * t1582 - t1826 * t1899) * t1488, t1532 * t1656 + t1533 * t1655 + t1534 * t1654 + (-t1328 * t1893 + (t1441 * t1568 + t1450 * t1508) * t1957) * t1494 + (-t1327 * t1896 + (t1439 * t1566 + t1448 * t1507) * t1962) * t1491 + (-t1326 * t1899 + (t1437 * t1564 + t1446 * t1506) * t1967) * t1488, (-t1827 * t1893 + (t1418 * t1441 + t1450 * t1821) * t1588) * t1494 + (-t1828 * t1896 + (t1417 * t1439 + t1448 * t1822) * t1585) * t1491 + (-t1829 * t1899 + (t1416 * t1437 + t1446 * t1823) * t1582) * t1488, (-t1836 * t1893 + (t1441 * t1830 + t1450 * t1833) * t1588) * t1494 + (-t1837 * t1896 + (t1439 * t1831 + t1448 * t1834) * t1585) * t1491 + (-t1838 * t1899 + (t1437 * t1832 + t1446 * t1835) * t1582) * t1488, 0; -t1721 - t1722 - t1723, 0, 0, -t1550 * t1723 - t1551 * t1722 - t1552 * t1721 + (-t1472 * t1933 - 0.2e1 * t1868 * t1947) * t1734 + (-t1471 * t1934 - 0.2e1 * t1872 * t1950) * t1737 + (-t1470 * t1935 - 0.2e1 * t1876 * t1953) * t1740, -0.2e1 * t1565 * t1647 - 0.2e1 * t1567 * t1646 - 0.2e1 * t1569 * t1645 + (t1445 * t1918 + t1569 * t1801) * t1574 * t1494 + (t1444 * t1920 + t1567 * t1802) * t1572 * t1491 + (t1443 * t1922 + t1565 * t1803) * t1570 * t1488, -t1570 * t1690 - t1572 * t1688 - t1574 * t1686 + (t1370 * t1472 * t1864 - t1355 * t1569) * t1907 + (t1369 * t1471 * t1865 - t1354 * t1567) * t1912 + (t1368 * t1470 * t1866 - t1353 * t1565) * t1917, t1564 * t1690 + t1566 * t1688 + t1568 * t1686 + (-t1355 * t1868 + t1670) * t1494 + (-t1354 * t1872 + t1672) * t1491 + (-t1353 * t1876 + t1674) * t1488, t1353 * t1675 + t1354 * t1673 + t1355 * t1671, t1621 * t1569 + t1622 * t1567 + t1623 * t1565 + (-t1671 * t1960 - t1673 * t1965 - t1675 * t1970) * pkin(5) + (t1464 * t1470 * t1669 + t1465 * t1471 * t1668 + t1466 * t1472 * t1667) * pkin(1), t1618 * t1569 + t1619 * t1567 + t1620 * t1565 + (-t1488 * t1674 - t1491 * t1672 - t1494 * t1670) * pkin(5) + (t1464 * t1490 * t1744 + t1465 * t1493 * t1743 + t1466 * t1496 * t1742) * pkin(1), (t1472 * t1484 - t1936) * t1676 + (t1471 * t1483 - t1937) * t1678 + (t1470 * t1482 - t1938) * t1680 + ((t1334 * t1919 - t1355 * t1454) * t1588 - t1824 * t1569) * t1494 + ((t1333 * t1921 - t1354 * t1453) * t1585 - t1825 * t1567) * t1491 + ((t1332 * t1923 - t1353 * t1452) * t1582 - t1826 * t1565) * t1488, t1565 * t1693 + t1567 * t1692 + t1569 * t1691 + (-t1569 * t1328 + (t1508 * t1919 + t1936) * t1957) * t1494 + (-t1567 * t1327 + (t1507 * t1921 + t1937) * t1962) * t1491 + (-t1565 * t1326 + (t1506 * t1923 + t1938) * t1967) * t1488, (-t1827 * t1569 + (t1418 * t1454 + t1821 * t1919) * t1588) * t1494 + (-t1828 * t1567 + (t1417 * t1453 + t1822 * t1921) * t1585) * t1491 + (-t1829 * t1565 + (t1416 * t1452 + t1823 * t1923) * t1582) * t1488, (-t1836 * t1569 + (t1454 * t1830 + t1833 * t1919) * t1588) * t1494 + (-t1837 * t1567 + (t1453 * t1831 + t1834 * t1921) * t1585) * t1491 + (-t1838 * t1565 + (t1452 * t1832 + t1835 * t1923) * t1582) * t1488, 0;];
tau_reg  = t1;
