% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRPRR12V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3x15]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 19:30
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRPRR12V2G3A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 19:28:34
% EndTime: 2020-08-06 19:29:06
% DurationCPUTime: 33.25s
% Computational Cost: add. (242931->830), mult. (327519->1604), div. (12789->12), fcn. (169938->18), ass. (0->594)
t1589 = xDP(2);
t1592 = pkin(2) + pkin(3);
t1855 = (t1589 * t1592);
t1521 = pkin(1) * t1855;
t1590 = xDP(1);
t1854 = (t1590 * t1592);
t1522 = pkin(1) * t1854;
t1573 = legFrame(3,2);
t1544 = sin(t1573);
t1547 = cos(t1573);
t1582 = cos(qJ(2,3));
t1565 = t1582 ^ 2;
t1576 = sin(qJ(2,3));
t1583 = cos(qJ(1,3));
t1588 = xDP(3);
t1591 = pkin(5) - pkin(6);
t1535 = t1591 * t1583;
t1577 = sin(qJ(1,3));
t1532 = t1577 * t1591;
t1820 = pkin(1) * t1583 + t1532;
t2029 = -t1544 * t1589 + t1547 * t1590;
t1617 = -(pkin(1) * t1577 - t1535) * t1588 + t2029 * t1820;
t1650 = t1544 * t1590 + t1547 * t1589;
t1881 = (qJ(3,3) + t1592) * (-qJ(3,3) + t1592);
t1733 = t1583 * t1881;
t1734 = t1577 * t1881;
t1805 = -2 * t1854;
t1806 = -2 * t1855;
t1859 = t1588 * t1577;
t1982 = qJ(3,3) * t1590;
t1983 = qJ(3,3) * t1589;
t1570 = pkin(1) * qJ(3,3);
t1735 = t1576 * t1881;
t2032 = t1735 - t1570;
t1541 = t1576 * qJ(3,3);
t2056 = 0.2e1 * t1541;
t1422 = ((qJ(3,3) * t1806 + t1590 * t1733) * t1547 + (qJ(3,3) * t1805 - t1589 * t1733) * t1544 - t1588 * t1734) * t1565 + (((t1583 * t2029 - t1859) * t2056 + t1617) * t1592 + t2032 * t1650) * t1582 + (qJ(3,3) * t1617 + t1521 * t1547 + t1522 * t1544) * t1576 - ((-t1583 * t1982 - t1855) * t1547 + (t1583 * t1983 - t1854) * t1544 + qJ(3,3) * t1859) * qJ(3,3);
t1524 = t1541 + pkin(1);
t1852 = t1592 * t1582;
t1506 = t1852 + t1524;
t1497 = 0.1e1 / t1506;
t1594 = 0.1e1 / qJ(3,3);
t1916 = t1497 * t1594;
t1416 = t1422 * t1916;
t2014 = pkin(1) * t1576;
t1529 = qJ(3,3) + t2014;
t1653 = t1524 * t1583 + t1532;
t1856 = t1588 * t1592;
t2037 = t1524 * t1577 - t1535;
t1443 = ((t1583 * t1854 - t1983) * t1547 + (-t1583 * t1855 - t1982) * t1544 - t1577 * t1856) * t1565 + ((t1576 * t1855 + t1590 * t1653) * t1547 + (t1576 * t1854 - t1589 * t1653) * t1544 - t2037 * t1588) * t1582 + t1650 * t1529;
t1767 = t1443 * t1916;
t1437 = pkin(2) * t1767;
t1407 = t1437 - t1416;
t1720 = pkin(3) * t1767;
t1392 = -t1720 - t1407;
t1476 = -t1577 * t2029 - t1583 * t1588;
t1930 = t1476 * t1591;
t1754 = t1576 * t1930;
t1850 = t1592 * t1594;
t1434 = (-t1443 * t1850 + t1754) * t1497;
t1498 = 0.1e1 / t1506 ^ 2;
t1593 = qJ(3,3) ^ 2;
t1817 = pkin(1) ^ 2 + pkin(5) ^ 2;
t1672 = t1817 + (-0.2e1 * pkin(5) + pkin(6)) * pkin(6);
t1512 = t1593 + t1672;
t1595 = 0.1e1 / qJ(3,3) ^ 2;
t2043 = t1524 * t1582;
t1644 = 0.2e1 * t2043;
t1932 = t1476 * t1497;
t1756 = t1565 * t1932;
t1712 = qJ(3,3) * t1756;
t1845 = 0.2e1 * t1570;
t1826 = t1591 * t1392 + t1845 * t1932;
t1868 = t1582 * t1594;
t1951 = t1443 * t1594;
t1952 = t1443 * t1591;
t1362 = ((t1826 * t1576 + (t1582 * t1952 + (t1565 * t1881 + t1592 * t1644 + t1512) * t1476) * t1497) * t1476 * t1868 + (-(-t1591 * t1712 + ((-pkin(3) * t1951 + t1754) * t1497 - t1407) * t1852 + t1392 * t1524) * t1443 - (-t1434 * t1582 + t1524 * t1767) * t1422) * t1595) * t1498;
t2011 = pkin(2) * t1362;
t1959 = t1392 * t1592;
t1987 = qJ(3,3) * t1443;
t1383 = -t1497 * t1987 + t1959;
t1538 = 0.2e1 * t1565 - 0.1e1;
t1569 = t1592 ^ 2;
t1917 = t1497 * t1576;
t1755 = t1476 * t1917;
t1816 = -0.4e1 * pkin(1) * t1592;
t1853 = t1591 * t1592;
t2050 = 0.2e1 * pkin(1);
t2051 = (t1595 * (((t1497 * t1735 * t1930 + t1383 * t1592) * t1582 + pkin(1) * t1959 + (t1383 * t1576 + (-t1538 * t1476 * t1853 - pkin(1) * t1443) * t1497) * qJ(3,3)) * t1443 + (-t1434 * t1852 + ((pkin(1) * t1594 + t1576) * t1592 * t1443 + (t1565 - 0.1e1) * qJ(3,3) * t1930) * t1497) * t1422) + (-(t1569 - 0.3e1 * t1593) * t1756 * t1852 + (t1591 * (t1416 - 0.2e1 * t1437 - 0.2e1 * t1720) * qJ(3,3) + (-0.3e1 * (-t1593 / 0.3e1 + t1569) * t1541 + (t1593 - t1569) * t2050) * t1932) * t1565 + (-t1392 * t1576 * t1853 + (-t1476 * (0.3e1 * t1593 + t1672) * t1592 + (t1476 * t1816 - t1952) * t1541) * t1497) * t1582 - qJ(3,3) * (t1512 * t1755 + t1826)) * t1476 * t1594) * t1498;
t2059 = t2051 + t2011;
t1574 = legFrame(2,2);
t1545 = sin(t1574);
t1548 = cos(t1574);
t1584 = cos(qJ(2,2));
t1566 = t1584 ^ 2;
t1578 = sin(qJ(2,2));
t1585 = cos(qJ(1,2));
t1536 = t1591 * t1585;
t1579 = sin(qJ(1,2));
t1533 = t1579 * t1591;
t1819 = pkin(1) * t1585 + t1533;
t2030 = -t1545 * t1589 + t1548 * t1590;
t1616 = -(pkin(1) * t1579 - t1536) * t1588 + t2030 * t1819;
t1648 = t1545 * t1590 + t1548 * t1589;
t1880 = (qJ(3,2) + t1592) * (-qJ(3,2) + t1592);
t1730 = t1585 * t1880;
t1731 = t1579 * t1880;
t1858 = t1588 * t1579;
t1988 = qJ(3,2) * t1590;
t1989 = qJ(3,2) * t1589;
t1571 = pkin(1) * qJ(3,2);
t1732 = t1578 * t1880;
t2033 = t1732 - t1571;
t1542 = t1578 * qJ(3,2);
t2055 = 0.2e1 * t1542;
t1423 = ((qJ(3,2) * t1806 + t1590 * t1730) * t1548 + (qJ(3,2) * t1805 - t1589 * t1730) * t1545 - t1588 * t1731) * t1566 + (((t1585 * t2030 - t1858) * t2055 + t1616) * t1592 + t2033 * t1648) * t1584 + (qJ(3,2) * t1616 + t1521 * t1548 + t1522 * t1545) * t1578 - ((-t1585 * t1988 - t1855) * t1548 + (t1585 * t1989 - t1854) * t1545 + qJ(3,2) * t1858) * qJ(3,2);
t1526 = t1542 + pkin(1);
t1865 = t1584 * t1592;
t1507 = t1865 + t1526;
t1500 = 0.1e1 / t1507;
t1597 = 0.1e1 / qJ(3,2);
t1911 = t1500 * t1597;
t1417 = t1423 * t1911;
t2013 = pkin(1) * t1578;
t1530 = qJ(3,2) + t2013;
t1652 = t1526 * t1585 + t1533;
t2036 = t1526 * t1579 - t1536;
t1444 = ((t1585 * t1854 - t1989) * t1548 + (-t1585 * t1855 - t1988) * t1545 - t1579 * t1856) * t1566 + ((t1578 * t1855 + t1590 * t1652) * t1548 + (t1578 * t1854 - t1589 * t1652) * t1545 - t2036 * t1588) * t1584 + t1648 * t1530;
t1764 = t1444 * t1911;
t1438 = pkin(2) * t1764;
t1409 = t1438 - t1417;
t1719 = pkin(3) * t1764;
t1393 = -t1719 - t1409;
t1477 = -t1579 * t2030 - t1585 * t1588;
t1927 = t1477 * t1591;
t1751 = t1578 * t1927;
t1849 = t1592 * t1597;
t1435 = (-t1444 * t1849 + t1751) * t1500;
t1501 = 0.1e1 / t1507 ^ 2;
t1596 = qJ(3,2) ^ 2;
t1513 = t1596 + t1672;
t1598 = 0.1e1 / qJ(3,2) ^ 2;
t2042 = t1526 * t1584;
t1643 = 0.2e1 * t2042;
t1929 = t1477 * t1500;
t1753 = t1566 * t1929;
t1713 = qJ(3,2) * t1753;
t1846 = 0.2e1 * t1571;
t1825 = t1591 * t1393 + t1846 * t1929;
t1864 = t1584 * t1597;
t1948 = t1444 * t1597;
t1949 = t1444 * t1591;
t1363 = ((t1825 * t1578 + (t1584 * t1949 + (t1566 * t1880 + t1592 * t1643 + t1513) * t1477) * t1500) * t1477 * t1864 + (-(-t1591 * t1713 + ((-pkin(3) * t1948 + t1751) * t1500 - t1409) * t1865 + t1393 * t1526) * t1444 - (-t1435 * t1584 + t1526 * t1764) * t1423) * t1598) * t1501;
t2010 = pkin(2) * t1363;
t1958 = t1393 * t1592;
t1993 = qJ(3,2) * t1444;
t1384 = -t1500 * t1993 + t1958;
t1539 = 0.2e1 * t1566 - 0.1e1;
t1912 = t1500 * t1578;
t1752 = t1477 * t1912;
t2052 = (t1598 * (((t1500 * t1732 * t1927 + t1384 * t1592) * t1584 + pkin(1) * t1958 + (t1384 * t1578 + (-t1539 * t1477 * t1853 - pkin(1) * t1444) * t1500) * qJ(3,2)) * t1444 + (-t1435 * t1865 + ((pkin(1) * t1597 + t1578) * t1592 * t1444 + (t1566 - 0.1e1) * qJ(3,2) * t1927) * t1500) * t1423) + (-(t1569 - 0.3e1 * t1596) * t1753 * t1865 + (t1591 * (t1417 - 0.2e1 * t1438 - 0.2e1 * t1719) * qJ(3,2) + (-0.3e1 * (-t1596 / 0.3e1 + t1569) * t1542 + (t1596 - t1569) * t2050) * t1929) * t1566 + (-t1393 * t1578 * t1853 + (-t1477 * (0.3e1 * t1596 + t1672) * t1592 + (t1477 * t1816 - t1949) * t1542) * t1500) * t1584 - qJ(3,2) * (t1513 * t1752 + t1825)) * t1477 * t1597) * t1501;
t2058 = t2052 + t2010;
t1575 = legFrame(1,2);
t1546 = sin(t1575);
t1549 = cos(t1575);
t1586 = cos(qJ(2,1));
t1567 = t1586 ^ 2;
t1580 = sin(qJ(2,1));
t1587 = cos(qJ(1,1));
t1537 = t1591 * t1587;
t1581 = sin(qJ(1,1));
t1534 = t1581 * t1591;
t1818 = pkin(1) * t1587 + t1534;
t2031 = -t1546 * t1589 + t1549 * t1590;
t1615 = -(pkin(1) * t1581 - t1537) * t1588 + t2031 * t1818;
t1646 = t1546 * t1590 + t1549 * t1589;
t1879 = (qJ(3,1) + t1592) * (-qJ(3,1) + t1592);
t1727 = t1587 * t1879;
t1728 = t1581 * t1879;
t1857 = t1588 * t1581;
t1994 = qJ(3,1) * t1590;
t1995 = qJ(3,1) * t1589;
t1572 = pkin(1) * qJ(3,1);
t1729 = t1580 * t1879;
t2034 = t1729 - t1572;
t1543 = t1580 * qJ(3,1);
t2054 = 0.2e1 * t1543;
t1424 = ((qJ(3,1) * t1806 + t1590 * t1727) * t1549 + (qJ(3,1) * t1805 - t1589 * t1727) * t1546 - t1588 * t1728) * t1567 + (((t1587 * t2031 - t1857) * t2054 + t1615) * t1592 + t2034 * t1646) * t1586 + (qJ(3,1) * t1615 + t1521 * t1549 + t1522 * t1546) * t1580 - ((-t1587 * t1994 - t1855) * t1549 + (t1587 * t1995 - t1854) * t1546 + qJ(3,1) * t1857) * qJ(3,1);
t1528 = t1543 + pkin(1);
t1851 = t1592 * t1586;
t1508 = t1851 + t1528;
t1503 = 0.1e1 / t1508;
t1600 = 0.1e1 / qJ(3,1);
t1906 = t1503 * t1600;
t1418 = t1424 * t1906;
t2012 = pkin(1) * t1580;
t1531 = qJ(3,1) + t2012;
t1651 = t1528 * t1587 + t1534;
t2035 = t1528 * t1581 - t1537;
t1445 = ((t1587 * t1854 - t1995) * t1549 + (-t1587 * t1855 - t1994) * t1546 - t1581 * t1856) * t1567 + ((t1580 * t1855 + t1590 * t1651) * t1549 + (t1580 * t1854 - t1589 * t1651) * t1546 - t2035 * t1588) * t1586 + t1646 * t1531;
t1761 = t1445 * t1906;
t1439 = pkin(2) * t1761;
t1411 = t1439 - t1418;
t1718 = pkin(3) * t1761;
t1394 = -t1718 - t1411;
t1478 = -t1581 * t2031 - t1587 * t1588;
t1924 = t1478 * t1591;
t1748 = t1580 * t1924;
t1848 = t1592 * t1600;
t1436 = (-t1445 * t1848 + t1748) * t1503;
t1504 = 0.1e1 / t1508 ^ 2;
t1599 = qJ(3,1) ^ 2;
t1514 = t1599 + t1672;
t1601 = 0.1e1 / qJ(3,1) ^ 2;
t2041 = t1528 * t1586;
t1642 = 0.2e1 * t2041;
t1926 = t1478 * t1503;
t1750 = t1567 * t1926;
t1714 = qJ(3,1) * t1750;
t1847 = 0.2e1 * t1572;
t1824 = t1591 * t1394 + t1847 * t1926;
t1861 = t1586 * t1600;
t1945 = t1445 * t1600;
t1946 = t1445 * t1591;
t1364 = ((t1824 * t1580 + (t1586 * t1946 + (t1567 * t1879 + t1592 * t1642 + t1514) * t1478) * t1503) * t1478 * t1861 + (-(-t1591 * t1714 + ((-pkin(3) * t1945 + t1748) * t1503 - t1411) * t1851 + t1394 * t1528) * t1445 - (-t1436 * t1586 + t1528 * t1761) * t1424) * t1601) * t1504;
t2009 = pkin(2) * t1364;
t1957 = t1394 * t1592;
t1999 = qJ(3,1) * t1445;
t1385 = -t1503 * t1999 + t1957;
t1540 = 0.2e1 * t1567 - 0.1e1;
t1907 = t1503 * t1580;
t1749 = t1478 * t1907;
t2053 = (t1601 * (((t1503 * t1729 * t1924 + t1385 * t1592) * t1586 + pkin(1) * t1957 + (t1385 * t1580 + (-t1540 * t1478 * t1853 - pkin(1) * t1445) * t1503) * qJ(3,1)) * t1445 + (-t1436 * t1851 + ((pkin(1) * t1600 + t1580) * t1592 * t1445 + (t1567 - 0.1e1) * qJ(3,1) * t1924) * t1503) * t1424) + (-(t1569 - 0.3e1 * t1599) * t1750 * t1851 + (t1591 * (t1418 - 0.2e1 * t1439 - 0.2e1 * t1718) * qJ(3,1) + (-0.3e1 * (-t1599 / 0.3e1 + t1569) * t1543 + (t1599 - t1569) * t2050) * t1926) * t1567 + (-t1394 * t1580 * t1853 + (-t1478 * (0.3e1 * t1599 + t1672) * t1592 + (t1478 * t1816 - t1946) * t1543) * t1503) * t1586 - qJ(3,1) * (t1514 * t1749 + t1824)) * t1478 * t1600) * t1504;
t2057 = t2053 + t2009;
t2049 = 0.2e1 * t1544;
t2048 = 0.2e1 * t1545;
t2047 = 0.2e1 * t1546;
t1915 = t1498 * t1594;
t1766 = t1443 * t1915;
t1723 = 0.2e1 * t1766;
t2046 = t1497 * t1723;
t1910 = t1501 * t1597;
t1763 = t1444 * t1910;
t1722 = 0.2e1 * t1763;
t2045 = t1500 * t1722;
t1905 = t1504 * t1600;
t1760 = t1445 * t1905;
t1721 = 0.2e1 * t1760;
t2044 = t1503 * t1721;
t2005 = pkin(2) * t1582;
t2040 = t1576 * (pkin(1) + t2005);
t2004 = pkin(2) * t1584;
t2039 = t1578 * (pkin(1) + t2004);
t2003 = pkin(2) * t1586;
t2038 = t1580 * (pkin(1) + t2003);
t2024 = -0.2e1 * t1407;
t2023 = -0.2e1 * t1409;
t2022 = -0.2e1 * t1411;
t2021 = -0.2e1 * t1547;
t2020 = -0.2e1 * t1548;
t2019 = -0.2e1 * t1549;
t2018 = 0.4e1 * t1565;
t2017 = 0.4e1 * t1566;
t2016 = 0.4e1 * t1567;
t2015 = -0.2e1 * t1592;
t2008 = pkin(2) * t1565;
t2007 = pkin(2) * t1566;
t2006 = pkin(2) * t1567;
t1499 = t1497 * t1498;
t1913 = t1499 * t1594;
t1953 = t1443 * t1476;
t1687 = t1913 * t1953;
t1876 = t1576 * t1594;
t1743 = t1499 * t1876;
t1877 = t1576 * t1592;
t1931 = t1476 * t1498;
t1984 = qJ(3,3) * t1582;
t1377 = -(t1416 * t1576 + (t1930 + (-t1576 * t1850 + t1582) * t1443) * t1497) * t1931 + (t1877 - t1984) * t1687 - t1476 * t1422 * t1743;
t2002 = pkin(5) * t1377;
t1502 = t1500 * t1501;
t1908 = t1502 * t1597;
t1950 = t1444 * t1477;
t1686 = t1908 * t1950;
t1873 = t1578 * t1597;
t1740 = t1502 * t1873;
t1874 = t1578 * t1592;
t1928 = t1477 * t1501;
t1990 = qJ(3,2) * t1584;
t1378 = -(t1417 * t1578 + (t1927 + (-t1578 * t1849 + t1584) * t1444) * t1500) * t1928 + (t1874 - t1990) * t1686 - t1477 * t1423 * t1740;
t2001 = pkin(5) * t1378;
t1505 = t1503 * t1504;
t1903 = t1505 * t1600;
t1947 = t1445 * t1478;
t1685 = t1903 * t1947;
t1870 = t1580 * t1600;
t1737 = t1505 * t1870;
t1871 = t1580 * t1592;
t1925 = t1478 * t1504;
t1996 = qJ(3,1) * t1586;
t1379 = -(t1418 * t1580 + (t1924 + (-t1580 * t1848 + t1586) * t1445) * t1503) * t1925 + (t1871 - t1996) * t1685 - t1478 * t1424 * t1737;
t2000 = pkin(5) * t1379;
t1998 = qJ(3,1) * t1546;
t1997 = qJ(3,1) * t1549;
t1992 = qJ(3,2) * t1545;
t1991 = qJ(3,2) * t1548;
t1986 = qJ(3,3) * t1544;
t1985 = qJ(3,3) * t1547;
t1981 = t1565 * qJ(3,3);
t1980 = t1566 * qJ(3,2);
t1979 = t1567 * qJ(3,1);
t1977 = t1362 * t1582;
t1976 = t1363 * t1584;
t1975 = t1364 * t1586;
t1974 = t1377 * t1497;
t1973 = t1377 * t1576;
t1972 = t1377 * t1577;
t1971 = t1377 * t1582;
t1970 = t1377 * t1594;
t1969 = t1378 * t1500;
t1968 = t1378 * t1578;
t1967 = t1378 * t1579;
t1966 = t1378 * t1584;
t1965 = t1378 * t1597;
t1964 = t1379 * t1503;
t1963 = t1379 * t1580;
t1962 = t1379 * t1581;
t1961 = t1379 * t1586;
t1960 = t1379 * t1600;
t1440 = t1443 ^ 2;
t1956 = t1440 * t1595;
t1441 = t1444 ^ 2;
t1955 = t1441 * t1598;
t1442 = t1445 ^ 2;
t1954 = t1442 * t1601;
t1787 = t1583 * t1541;
t1486 = t1787 + t1820;
t1867 = t1583 * t1592;
t1455 = (-t1544 * t1867 - t1985) * t1565 + (-t1486 * t1544 + t1547 * t1877) * t1582 + t1547 * t1529;
t1944 = t1455 * t1594;
t1456 = (t1547 * t1867 - t1986) * t1565 + (t1486 * t1547 + t1544 * t1877) * t1582 + t1544 * t1529;
t1943 = t1456 * t1594;
t1788 = t1585 * t1542;
t1488 = t1788 + t1819;
t1863 = t1585 * t1592;
t1457 = (-t1545 * t1863 - t1991) * t1566 + (-t1488 * t1545 + t1548 * t1874) * t1584 + t1548 * t1530;
t1942 = t1457 * t1597;
t1458 = (t1548 * t1863 - t1992) * t1566 + (t1488 * t1548 + t1545 * t1874) * t1584 + t1545 * t1530;
t1941 = t1458 * t1597;
t1789 = t1587 * t1543;
t1490 = t1789 + t1818;
t1860 = t1587 * t1592;
t1459 = (-t1546 * t1860 - t1997) * t1567 + (-t1490 * t1546 + t1549 * t1871) * t1586 + t1549 * t1531;
t1940 = t1459 * t1600;
t1460 = (t1549 * t1860 - t1998) * t1567 + (t1490 * t1549 + t1546 * t1871) * t1586 + t1546 * t1531;
t1939 = t1460 * t1600;
t1523 = t2056 + pkin(1);
t1461 = -t1565 * t1734 - (t1523 * t1577 - t1535) * t1852 - qJ(3,3) * (t1529 * t1577 - t1576 * t1535);
t1938 = t1461 * t1576;
t1525 = t2055 + pkin(1);
t1462 = -t1566 * t1731 - (t1525 * t1579 - t1536) * t1865 - qJ(3,2) * (t1530 * t1579 - t1578 * t1536);
t1937 = t1462 * t1578;
t1527 = t2054 + pkin(1);
t1463 = -t1567 * t1728 - (t1527 * t1581 - t1537) * t1851 - qJ(3,1) * (t1531 * t1581 - t1580 * t1537);
t1936 = t1463 * t1580;
t1473 = t1476 ^ 2;
t1470 = t1473 * t1498;
t1935 = t1473 * t1565;
t1474 = t1477 ^ 2;
t1471 = t1474 * t1501;
t1934 = t1474 * t1566;
t1475 = t1478 ^ 2;
t1472 = t1475 * t1504;
t1933 = t1475 * t1567;
t1479 = t1577 * t1852 + t2037;
t1923 = t1479 * t1582;
t1922 = t1479 * t1594;
t1480 = t1579 * t1865 + t2036;
t1921 = t1480 * t1584;
t1920 = t1480 * t1597;
t1481 = t1581 * t1851 + t2035;
t1919 = t1481 * t1586;
t1918 = t1481 * t1600;
t1914 = t1498 * t1595;
t1909 = t1501 * t1598;
t1904 = t1504 * t1601;
t1902 = t1523 * t1582;
t1901 = t1525 * t1584;
t1900 = t1527 * t1586;
t1899 = t1544 * t1577;
t1897 = t1544 * t1592;
t1896 = t1545 * t1579;
t1894 = t1545 * t1592;
t1893 = t1546 * t1581;
t1891 = t1546 * t1592;
t1890 = t1547 * t1577;
t1888 = t1547 * t1592;
t1887 = t1548 * t1579;
t1885 = t1548 * t1592;
t1884 = t1549 * t1581;
t1882 = t1549 * t1592;
t1878 = t1576 * t1582;
t1875 = t1578 * t1584;
t1872 = t1580 * t1586;
t1869 = t1582 * t1583;
t1866 = t1584 * t1585;
t1862 = t1586 * t1587;
t1404 = t1437 - t1416 / 0.2e1;
t1408 = t1437 - 0.2e1 * t1416;
t1604 = pkin(2) ^ 2;
t1550 = -t1593 + t1604;
t1639 = qJ(3,3) * t1977 - t2059 * t1576;
t1726 = t1932 * t2024;
t1744 = t1497 * t1868;
t1844 = t1639 * pkin(5) + (pkin(2) * t1644 + t1550 * t1565 + t1576 * t1845 + t1593 + t1817) * t1377 + 0.4e1 * t1404 * t1712 + (-t1443 * pkin(5) * t1408 + 0.2e1 * (-(-pkin(2) * t1422 + t1443 * t1550) * t1576 + pkin(1) * t1987) * t1932) * t1744 + (-pkin(5) * t1440 * t1915 + pkin(1) * t1726) * t1576 + qJ(3,3) * t1726;
t1405 = t1438 - t1417 / 0.2e1;
t1410 = t1438 - 0.2e1 * t1417;
t1551 = -t1596 + t1604;
t1640 = qJ(3,2) * t1976 - t1578 * t2058;
t1725 = t1929 * t2023;
t1741 = t1500 * t1864;
t1843 = t1640 * pkin(5) + (pkin(2) * t1643 + t1551 * t1566 + t1578 * t1846 + t1596 + t1817) * t1378 + 0.4e1 * t1405 * t1713 + (-t1444 * pkin(5) * t1410 + 0.2e1 * (-(-pkin(2) * t1423 + t1444 * t1551) * t1578 + pkin(1) * t1993) * t1929) * t1741 + (-pkin(5) * t1441 * t1910 + pkin(1) * t1725) * t1578 + qJ(3,2) * t1725;
t1406 = t1439 - t1418 / 0.2e1;
t1412 = t1439 - 0.2e1 * t1418;
t1552 = -t1599 + t1604;
t1641 = qJ(3,1) * t1975 - t1580 * t2057;
t1724 = t1926 * t2022;
t1738 = t1503 * t1861;
t1842 = t1641 * pkin(5) + (pkin(2) * t1642 + t1552 * t1567 + t1580 * t1847 + t1599 + t1817) * t1379 + 0.4e1 * t1406 * t1714 + (-t1445 * pkin(5) * t1412 + 0.2e1 * (-(-pkin(2) * t1424 + t1445 * t1552) * t1580 + pkin(1) * t1999) * t1926) * t1738 + (-pkin(5) * t1442 * t1905 + pkin(1) * t1724) * t1580 + qJ(3,1) * t1724;
t1515 = -pkin(2) * t1576 + t1984;
t1812 = -0.2e1 * t1981;
t1823 = 0.2e1 * t1443 * t1422 * t1914 + pkin(2) * t1470;
t1841 = (t1604 + t1593) * t1362 + t1515 * t2002 + pkin(2) * t2051 + t1823 * qJ(3,3) + (-(-t1550 * t1576 + t1570) * t1582 + (t1812 + t2014) * pkin(2)) * t1470;
t1516 = -pkin(2) * t1578 + t1990;
t1811 = -0.2e1 * t1980;
t1822 = 0.2e1 * t1444 * t1423 * t1909 + pkin(2) * t1471;
t1840 = (t1604 + t1596) * t1363 + t1516 * t2001 + pkin(2) * t2052 + t1822 * qJ(3,2) + (-(-t1551 * t1578 + t1571) * t1584 + (t1811 + t2013) * pkin(2)) * t1471;
t1517 = -pkin(2) * t1580 + t1996;
t1810 = -0.2e1 * t1979;
t1821 = 0.2e1 * t1445 * t1424 * t1904 + pkin(2) * t1472;
t1839 = (t1604 + t1599) * t1364 + t1517 * t2000 + pkin(2) * t2053 + t1821 * qJ(3,1) + (-(-t1552 * t1580 + t1572) * t1586 + (t1810 + t2012) * pkin(2)) * t1472;
t1774 = t1440 * t1914;
t1798 = pkin(5) * t1973;
t1838 = t1798 - qJ(3,3) * (t1470 + t1774) + (t1981 - t2040) * t1470 - t2059;
t1772 = t1441 * t1909;
t1797 = pkin(5) * t1968;
t1837 = t1797 - qJ(3,2) * (t1471 + t1772) + (t1980 - t2039) * t1471 - t2058;
t1770 = t1442 * t1904;
t1796 = pkin(5) * t1963;
t1836 = t1796 - qJ(3,1) * (t1472 + t1770) + (t1979 - t2038) * t1472 - t2057;
t1717 = pkin(5) * t1774;
t1803 = pkin(5) * t1977;
t1835 = t1803 + (0.2e1 * t2040 + (-0.2e1 * t1565 + 0.2e1) * qJ(3,3)) * t1377 - t1576 * t1717 + (t1723 * t1902 + (t1404 * t2018 + t2024) * t1497) * t1476;
t1716 = pkin(5) * t1772;
t1801 = pkin(5) * t1976;
t1834 = t1801 + (0.2e1 * t2039 + (-0.2e1 * t1566 + 0.2e1) * qJ(3,2)) * t1378 - t1578 * t1716 + (t1722 * t1901 + (t1405 * t2017 + t2023) * t1500) * t1477;
t1715 = pkin(5) * t1770;
t1799 = pkin(5) * t1975;
t1833 = t1799 + (0.2e1 * t2038 + (-0.2e1 * t1567 + 0.2e1) * qJ(3,1)) * t1379 - t1580 * t1715 + (t1721 * t1900 + (t1406 * t2016 + t2022) * t1503) * t1478;
t1804 = pkin(5) * t1362 * t1576;
t1832 = -t1804 + 0.2e1 * (t2008 + t2043) * t1377 + (-0.4e1 * t1404 * t1755 - t1717) * t1582 + (-0.2e1 * t1529 * t1594 + t2018) * t1443 * t1931;
t1802 = pkin(5) * t1363 * t1578;
t1831 = -t1802 + 0.2e1 * (t2007 + t2042) * t1378 + (-0.4e1 * t1405 * t1752 - t1716) * t1584 + (-0.2e1 * t1530 * t1597 + t2017) * t1444 * t1928;
t1800 = pkin(5) * t1364 * t1580;
t1830 = -t1800 + 0.2e1 * (t2006 + t2041) * t1379 + (-0.4e1 * t1406 * t1749 - t1715) * t1586 + (-0.2e1 * t1531 * t1600 + t2016) * t1445 * t1925;
t1829 = pkin(5) * t1971 + 0.2e1 * qJ(3,3) * t1362 + (-t1902 - 0.2e1 * t2008) * t1470 + t1823;
t1828 = pkin(5) * t1966 + 0.2e1 * qJ(3,2) * t1363 + (-t1901 - 0.2e1 * t2007) * t1471 + t1822;
t1827 = pkin(5) * t1961 + 0.2e1 * qJ(3,1) * t1364 + (-t1900 - 0.2e1 * t2006) * t1472 + t1821;
t1815 = qJ(3,1) * t2015;
t1814 = qJ(3,2) * t2015;
t1813 = qJ(3,3) * t2015;
t1809 = -0.2e1 * t1973;
t1808 = -0.2e1 * t1968;
t1807 = -0.2e1 * t1963;
t1795 = pkin(5) * t1951;
t1794 = pkin(5) * t1948;
t1793 = pkin(5) * t1945;
t1786 = t1362 * t1916;
t1785 = t1363 * t1911;
t1784 = t1364 * t1906;
t1780 = t1497 * t1972;
t1779 = t1583 * t1974;
t1778 = t1500 * t1967;
t1777 = t1585 * t1969;
t1776 = t1503 * t1962;
t1775 = t1587 * t1964;
t1773 = t1499 * t1956;
t1771 = t1502 * t1955;
t1769 = t1505 * t1954;
t1768 = t1577 * t1953;
t1765 = t1579 * t1950;
t1762 = t1581 * t1947;
t1759 = t1473 * t1913;
t1758 = t1474 * t1908;
t1757 = t1475 * t1903;
t1747 = t1565 * t1922;
t1746 = t1566 * t1920;
t1745 = t1567 * t1918;
t1742 = t1499 * t1868;
t1739 = t1502 * t1864;
t1736 = t1505 * t1861;
t1711 = t1377 * t1747;
t1562 = t1576 ^ 2;
t1710 = t1562 * t1780;
t1709 = t1876 * t1974;
t1708 = t1377 * t1744;
t1707 = t1878 * t1972;
t1706 = t1378 * t1746;
t1563 = t1578 ^ 2;
t1705 = t1563 * t1778;
t1704 = t1873 * t1969;
t1703 = t1378 * t1741;
t1702 = t1875 * t1967;
t1701 = t1379 * t1745;
t1564 = t1580 ^ 2;
t1700 = t1564 * t1776;
t1699 = t1870 * t1964;
t1698 = t1379 * t1738;
t1697 = t1872 * t1962;
t1696 = (t1408 * t1582 + t1443 * t1917) * t1766;
t1695 = (t1410 * t1584 + t1444 * t1912) * t1763;
t1694 = (t1412 * t1586 + t1445 * t1907) * t1760;
t1693 = t1577 * t1773;
t1692 = t1583 * t1773;
t1691 = t1579 * t1771;
t1690 = t1585 * t1771;
t1689 = t1581 * t1769;
t1688 = t1587 * t1769;
t1684 = t1473 * t1743;
t1683 = t1473 * t1742;
t1682 = t1474 * t1740;
t1681 = t1474 * t1739;
t1680 = t1475 * t1737;
t1679 = t1475 * t1736;
t1678 = t1479 * t1744;
t1677 = t1480 * t1741;
t1676 = t1481 * t1738;
t1675 = t1576 * t1742;
t1674 = t1578 * t1739;
t1673 = t1580 * t1736;
t1668 = t1577 * t1696;
t1667 = t1579 * t1695;
t1666 = t1581 * t1694;
t1665 = t1576 * t1693;
t1664 = t1582 * t1693;
t1663 = t1578 * t1691;
t1662 = t1584 * t1691;
t1661 = t1580 * t1689;
t1660 = t1586 * t1689;
t1659 = t1538 * t1687;
t1658 = t1539 * t1686;
t1657 = t1540 * t1685;
t1638 = t1577 * t1659;
t1637 = t1579 * t1658;
t1636 = t1581 * t1657;
t1635 = -t1497 * (t1971 * t2050 - t1804) + (t1476 * t2014 + t1582 * t1795 / 0.2e1) * t2046;
t1634 = -t1500 * (t1966 * t2050 - t1802) + (t1477 * t2013 + t1584 * t1794 / 0.2e1) * t2045;
t1633 = -t1503 * (t1961 * t2050 - t1800) + (t1478 * t2012 + t1586 * t1793 / 0.2e1) * t2044;
t1632 = -t1497 * (pkin(1) * t1809 - t1803) + (t1582 * pkin(1) * t1476 - t1576 * t1795 / 0.2e1) * t2046;
t1631 = -t1500 * (pkin(1) * t1808 - t1801) + (t1584 * pkin(1) * t1477 - t1578 * t1794 / 0.2e1) * t2045;
t1630 = -t1503 * (pkin(1) * t1807 - t1799) + (t1586 * pkin(1) * t1478 - t1580 * t1793 / 0.2e1) * t2044;
t1629 = t1497 * (t1362 * t1899 + t1377 * t1944);
t1628 = t1497 * (-t1362 * t1890 + t1377 * t1943);
t1627 = t1500 * (t1363 * t1896 + t1378 * t1942);
t1626 = t1500 * (-t1363 * t1887 + t1378 * t1941);
t1625 = t1503 * (t1364 * t1893 + t1379 * t1940);
t1624 = t1503 * (-t1364 * t1884 + t1379 * t1939);
t1493 = (pkin(1) + 0.2e1 * t2003) * t1580 + t1810 + qJ(3,1);
t1492 = (pkin(1) + 0.2e1 * t2004) * t1578 + t1811 + qJ(3,2);
t1491 = (pkin(1) + 0.2e1 * t2005) * t1576 + t1812 + qJ(3,3);
t1489 = 0.2e1 * t1789 + t1818;
t1487 = 0.2e1 * t1788 + t1819;
t1485 = 0.2e1 * t1787 + t1820;
t1484 = qJ(3,1) * t1587 + t1580 * t1818;
t1483 = qJ(3,2) * t1585 + t1578 * t1819;
t1482 = qJ(3,3) * t1583 + t1576 * t1820;
t1454 = -0.2e1 * t1504 * t1933 + t1472;
t1453 = -0.2e1 * t1501 * t1934 + t1471;
t1452 = -0.2e1 * t1498 * t1935 + t1470;
t1451 = (t1546 * t1815 + t1549 * t1727) * t1567 + (t1489 * t1882 + t1546 * t2034) * t1586 + t1484 * t1997 + t1531 * t1891;
t1450 = (-t1546 * t1727 + t1549 * t1815) * t1567 + (-t1489 * t1891 + t1549 * t2034) * t1586 - t1484 * t1998 + t1531 * t1882;
t1449 = (t1545 * t1814 + t1548 * t1730) * t1566 + (t1487 * t1885 + t1545 * t2033) * t1584 + t1483 * t1991 + t1530 * t1894;
t1448 = (-t1545 * t1730 + t1548 * t1814) * t1566 + (-t1487 * t1894 + t1548 * t2033) * t1584 - t1483 * t1992 + t1530 * t1885;
t1447 = (t1544 * t1813 + t1547 * t1733) * t1565 + (t1485 * t1888 + t1544 * t2032) * t1582 + t1482 * t1985 + t1529 * t1897;
t1446 = (-t1544 * t1733 + t1547 * t1813) * t1565 + (-t1485 * t1897 + t1547 * t2032) * t1582 - t1482 * t1986 + t1529 * t1888;
t1427 = -t1472 + (t1933 - t1954) * t1504;
t1426 = -t1471 + (t1934 - t1955) * t1501;
t1425 = -t1470 + (t1935 - t1956) * t1498;
t1343 = t2053 - t1796 + 0.2e1 * t2009;
t1342 = t2052 - t1797 + 0.2e1 * t2010;
t1341 = t2051 - t1798 + 0.2e1 * t2011;
t1337 = t1641 + 0.2e1 * t2000;
t1336 = t1640 + 0.2e1 * t2001;
t1335 = t1639 + 0.2e1 * t2002;
t1 = [-t1547 * t1780 - t1548 * t1778 - t1549 * t1776, 0, 0, -t1547 * t1710 - t1548 * t1705 - t1549 * t1700 + (-t1460 * t1475 + t1762 * t2019) * t1673 + (-t1458 * t1474 + t1765 * t2020) * t1674 + (-t1456 * t1473 + t1768 * t2021) * t1675, t1638 * t2021 + t1637 * t2020 + t1636 * t2019 + (t1454 * t1939 + t1697 * t2019) * t1503 + (t1453 * t1941 + t1702 * t2020) * t1500 + (t1452 * t1943 + t1707 * t2021) * t1497, -t1547 * t1664 - t1548 * t1662 - t1549 * t1660 + t1576 * t1628 + t1578 * t1626 + t1580 * t1624, t1547 * t1665 + t1548 * t1663 + t1549 * t1661 + t1582 * t1628 + t1584 * t1626 + t1586 * t1624, t1456 * t1786 + t1458 * t1785 + t1460 * t1784, t1633 * t1884 + t1634 * t1887 + t1635 * t1890 + (-t1456 * t1709 - t1458 * t1704 - t1460 * t1699) * pkin(5) + (t1456 * t1684 + t1458 * t1682 + t1460 * t1680) * pkin(1), t1630 * t1884 + t1631 * t1887 + t1632 * t1890 + (-t1456 * t1708 - t1458 * t1703 - t1460 * t1698) * pkin(5) + (t1456 * t1683 + t1458 * t1681 + t1460 * t1679) * pkin(1), (-t1451 * t1872 + t1460 * t1493) * t1757 + (-t1449 * t1875 + t1458 * t1492) * t1758 + (-t1447 * t1878 + t1456 * t1491) * t1759 + ((t1343 * t1460 - t1364 * t1451) * t1600 - t1830 * t1884) * t1503 + ((t1342 * t1458 - t1363 * t1449) * t1597 - t1831 * t1887) * t1500 + ((t1341 * t1456 - t1362 * t1447) * t1594 - t1832 * t1890) * t1497, t1547 * t1668 + t1548 * t1667 + t1549 * t1666 + (-t1337 * t1884 + (t1451 * t1580 + t1460 * t1517) * t1960) * t1503 + (-t1336 * t1887 + (t1449 * t1578 + t1458 * t1516) * t1965) * t1500 + (-t1335 * t1890 + (t1447 * t1576 + t1456 * t1515) * t1970) * t1497, (-t1833 * t1884 + (t1427 * t1451 + t1460 * t1827) * t1600) * t1503 + (-t1834 * t1887 + (t1426 * t1449 + t1458 * t1828) * t1597) * t1500 + (-t1835 * t1890 + (t1425 * t1447 + t1456 * t1829) * t1594) * t1497, (-t1842 * t1884 + (t1451 * t1836 + t1460 * t1839) * t1600) * t1503 + (-t1843 * t1887 + (t1449 * t1837 + t1458 * t1840) * t1597) * t1500 + (-t1844 * t1890 + (t1447 * t1838 + t1456 * t1841) * t1594) * t1497, 0; t1544 * t1780 + t1545 * t1778 + t1546 * t1776, 0, 0, t1544 * t1710 + t1545 * t1705 + t1546 * t1700 + (-t1459 * t1475 + t1762 * t2047) * t1673 + (-t1457 * t1474 + t1765 * t2048) * t1674 + (-t1455 * t1473 + t1768 * t2049) * t1675, t1638 * t2049 + t1637 * t2048 + t1636 * t2047 + (t1454 * t1940 + t1697 * t2047) * t1503 + (t1453 * t1942 + t1702 * t2048) * t1500 + (t1452 * t1944 + t1707 * t2049) * t1497, t1544 * t1664 + t1545 * t1662 + t1546 * t1660 + t1576 * t1629 + t1578 * t1627 + t1580 * t1625, -t1544 * t1665 - t1545 * t1663 - t1546 * t1661 + t1582 * t1629 + t1584 * t1627 + t1586 * t1625, t1455 * t1786 + t1457 * t1785 + t1459 * t1784, -t1633 * t1893 - t1634 * t1896 - t1635 * t1899 + (-t1455 * t1709 - t1457 * t1704 - t1459 * t1699) * pkin(5) + (t1455 * t1684 + t1457 * t1682 + t1459 * t1680) * pkin(1), -t1630 * t1893 - t1631 * t1896 - t1632 * t1899 + (-t1455 * t1708 - t1457 * t1703 - t1459 * t1698) * pkin(5) + (t1455 * t1683 + t1457 * t1681 + t1459 * t1679) * pkin(1), (-t1450 * t1872 + t1459 * t1493) * t1757 + (-t1448 * t1875 + t1457 * t1492) * t1758 + (-t1446 * t1878 + t1455 * t1491) * t1759 + ((t1343 * t1459 - t1364 * t1450) * t1600 + t1830 * t1893) * t1503 + ((t1342 * t1457 - t1363 * t1448) * t1597 + t1831 * t1896) * t1500 + ((t1341 * t1455 - t1362 * t1446) * t1594 + t1832 * t1899) * t1497, -t1544 * t1668 - t1545 * t1667 - t1546 * t1666 + (t1337 * t1893 + (t1450 * t1580 + t1459 * t1517) * t1960) * t1503 + (t1336 * t1896 + (t1448 * t1578 + t1457 * t1516) * t1965) * t1500 + (t1335 * t1899 + (t1446 * t1576 + t1455 * t1515) * t1970) * t1497, (t1833 * t1893 + (t1427 * t1450 + t1459 * t1827) * t1600) * t1503 + (t1834 * t1896 + (t1426 * t1448 + t1457 * t1828) * t1597) * t1500 + (t1835 * t1899 + (t1425 * t1446 + t1455 * t1829) * t1594) * t1497, (t1842 * t1893 + (t1450 * t1836 + t1459 * t1839) * t1600) * t1503 + (t1843 * t1896 + (t1448 * t1837 + t1457 * t1840) * t1597) * t1500 + (t1844 * t1899 + (t1446 * t1838 + t1455 * t1841) * t1594) * t1497, 0; -t1775 - t1777 - t1779, 0, 0, -t1562 * t1779 - t1563 * t1777 - t1564 * t1775 + (t1481 * t1933 - 0.2e1 * t1862 * t1947) * t1737 + (t1480 * t1934 - 0.2e1 * t1866 * t1950) * t1740 + (t1479 * t1935 - 0.2e1 * t1869 * t1953) * t1743, -0.2e1 * t1583 * t1659 - 0.2e1 * t1585 * t1658 - 0.2e1 * t1587 * t1657 + (-t1454 * t1918 + t1587 * t1807) * t1586 * t1503 + (-t1453 * t1920 + t1585 * t1808) * t1584 * t1500 + (-t1452 * t1922 + t1583 * t1809) * t1582 * t1497, -t1582 * t1692 - t1584 * t1690 - t1586 * t1688 + (-t1379 * t1481 * t1861 - t1364 * t1587) * t1907 + (-t1378 * t1480 * t1864 - t1363 * t1585) * t1912 + (-t1377 * t1479 * t1868 - t1362 * t1583) * t1917, t1576 * t1692 + t1578 * t1690 + t1580 * t1688 + (-t1364 * t1862 - t1701) * t1503 + (-t1363 * t1866 - t1706) * t1500 + (-t1362 * t1869 - t1711) * t1497, -t1362 * t1678 - t1363 * t1677 - t1364 * t1676, t1633 * t1587 + t1634 * t1585 + t1635 * t1583 + (t1676 * t1963 + t1677 * t1968 + t1678 * t1973) * pkin(5) + (-t1473 * t1479 * t1675 - t1474 * t1480 * t1674 - t1475 * t1481 * t1673) * pkin(1), t1630 * t1587 + t1631 * t1585 + t1632 * t1583 + (t1497 * t1711 + t1500 * t1706 + t1503 * t1701) * pkin(5) + (-t1473 * t1499 * t1747 - t1474 * t1502 * t1746 - t1475 * t1505 * t1745) * pkin(1), (-t1481 * t1493 - t1936) * t1679 + (-t1480 * t1492 - t1937) * t1681 + (-t1479 * t1491 - t1938) * t1683 + ((-t1343 * t1919 - t1364 * t1463) * t1600 - t1830 * t1587) * t1503 + ((-t1342 * t1921 - t1363 * t1462) * t1597 - t1831 * t1585) * t1500 + ((-t1341 * t1923 - t1362 * t1461) * t1594 - t1832 * t1583) * t1497, t1583 * t1696 + t1585 * t1695 + t1587 * t1694 + (-t1587 * t1337 + (-t1517 * t1919 + t1936) * t1960) * t1503 + (-t1585 * t1336 + (-t1516 * t1921 + t1937) * t1965) * t1500 + (-t1583 * t1335 + (-t1515 * t1923 + t1938) * t1970) * t1497, (-t1833 * t1587 + (t1427 * t1463 - t1827 * t1919) * t1600) * t1503 + (-t1834 * t1585 + (t1426 * t1462 - t1828 * t1921) * t1597) * t1500 + (-t1835 * t1583 + (t1425 * t1461 - t1829 * t1923) * t1594) * t1497, (-t1842 * t1587 + (t1463 * t1836 - t1839 * t1919) * t1600) * t1503 + (-t1843 * t1585 + (t1462 * t1837 - t1840 * t1921) * t1597) * t1500 + (-t1844 * t1583 + (t1461 * t1838 - t1841 * t1923) * t1594) * t1497, 0;];
tau_reg  = t1;
