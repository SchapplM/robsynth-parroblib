% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRPRR8V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d4,theta3]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [3x13]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 21:13
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P3RRPRR8V2G2A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(7,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRPRR8V2G2A0_invdyn_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 21:12:17
% EndTime: 2020-08-06 21:12:33
% DurationCPUTime: 16.27s
% Computational Cost: add. (75136->696), mult. (166911->1155), div. (5298->21), fcn. (96597->50), ass. (0->498)
t267 = sin(qJ(1,3));
t227 = g(3) * t267;
t273 = cos(qJ(1,3));
t260 = legFrame(3,2);
t218 = sin(t260);
t195 = t218 * g(2);
t221 = cos(t260);
t549 = t221 * g(1);
t591 = -t195 + t549;
t109 = -t591 * t273 + t227;
t269 = sin(qJ(1,2));
t228 = g(3) * t269;
t275 = cos(qJ(1,2));
t261 = legFrame(2,2);
t219 = sin(t261);
t196 = t219 * g(2);
t222 = cos(t261);
t548 = t222 * g(1);
t590 = -t196 + t548;
t110 = -t590 * t275 + t228;
t271 = sin(qJ(1,1));
t229 = g(3) * t271;
t277 = cos(qJ(1,1));
t262 = legFrame(1,2);
t220 = sin(t262);
t197 = t220 * g(2);
t223 = cos(t262);
t547 = t223 * g(1);
t589 = -t197 + t547;
t111 = -t589 * t277 + t229;
t598 = 2 * pkin(2) * pkin(3);
t247 = qJ(2,3) + pkin(7);
t206 = cos(t247);
t272 = cos(qJ(2,3));
t224 = t272 * pkin(2);
t156 = pkin(3) * t206 + t224;
t597 = pkin(1) + t156;
t248 = qJ(2,2) + pkin(7);
t207 = cos(t248);
t274 = cos(qJ(2,2));
t225 = t274 * pkin(2);
t157 = pkin(3) * t207 + t225;
t596 = pkin(1) + t157;
t249 = qJ(2,1) + pkin(7);
t208 = cos(t249);
t276 = cos(qJ(2,1));
t226 = t276 * pkin(2);
t158 = pkin(3) * t208 + t226;
t595 = pkin(1) + t158;
t255 = cos(pkin(7));
t545 = t255 * pkin(3);
t191 = pkin(2) + t545;
t254 = sin(pkin(7));
t266 = sin(qJ(2,3));
t471 = t254 * t266;
t428 = pkin(3) * t471;
t583 = -t191 * t272 + t428;
t119 = 0.1e1 / t583 ^ 2;
t257 = -qJ(3,3) - pkin(5);
t240 = pkin(6) - t257;
t209 = 0.1e1 / t240;
t210 = 0.1e1 / t240 ^ 2;
t211 = t209 * t210;
t280 = xDP(2);
t546 = t254 * pkin(3);
t178 = t280 * t546;
t281 = xDP(1);
t179 = t281 * t546;
t181 = t281 * t545;
t357 = t191 * t280;
t279 = xDP(3);
t438 = t279 * t546;
t466 = t267 * t281;
t450 = pkin(2) * t466 + t178;
t235 = pkin(2) * t281;
t451 = t181 + t235;
t234 = pkin(2) * t280;
t452 = t280 * t545 + t234;
t458 = t273 * t279;
t73 = ((t267 * t181 + t450) * t221 + (-t267 * t357 + t179) * t218 + t191 * t458) * t272 + t266 * ((-t267 * t179 + t452) * t221 + (t267 * t178 + t451) * t218 - t273 * t438);
t70 = t73 ^ 2;
t594 = t119 * t211 * t70;
t268 = sin(qJ(2,2));
t470 = t254 * t268;
t427 = pkin(3) * t470;
t584 = -t191 * t274 + t427;
t122 = 0.1e1 / t584 ^ 2;
t258 = -qJ(3,2) - pkin(5);
t241 = pkin(6) - t258;
t212 = 0.1e1 / t241;
t213 = 0.1e1 / t241 ^ 2;
t214 = t212 * t213;
t463 = t269 * t281;
t449 = pkin(2) * t463 + t178;
t456 = t275 * t279;
t74 = ((t269 * t181 + t449) * t222 + (-t269 * t357 + t179) * t219 + t191 * t456) * t274 + t268 * ((-t269 * t179 + t452) * t222 + (t269 * t178 + t451) * t219 - t275 * t438);
t71 = t74 ^ 2;
t593 = t122 * t214 * t71;
t270 = sin(qJ(2,1));
t469 = t254 * t270;
t426 = pkin(3) * t469;
t585 = -t191 * t276 + t426;
t125 = 0.1e1 / t585 ^ 2;
t259 = -qJ(3,1) - pkin(5);
t242 = pkin(6) - t259;
t215 = 0.1e1 / t242;
t216 = 0.1e1 / t242 ^ 2;
t217 = t215 * t216;
t460 = t271 * t281;
t448 = pkin(2) * t460 + t178;
t454 = t277 * t279;
t75 = ((t271 * t181 + t448) * t223 + (-t271 * t357 + t179) * t220 + t191 * t454) * t276 + t270 * ((-t271 * t179 + t452) * t223 + (t271 * t178 + t451) * t220 - t277 * t438);
t72 = t75 ^ 2;
t592 = t125 * t217 * t72;
t133 = t218 * t281 + t221 * t280;
t151 = 0.1e1 / t156 ^ 2;
t505 = t133 ^ 2 * t151;
t134 = t219 * t281 + t222 * t280;
t153 = 0.1e1 / t157 ^ 2;
t504 = t134 ^ 2 * t153;
t135 = t220 * t281 + t223 * t280;
t155 = 0.1e1 / t158 ^ 2;
t503 = t135 ^ 2 * t155;
t298 = pkin(3) ^ 2;
t299 = pkin(2) ^ 2;
t239 = -t298 + t299;
t124 = 0.1e1 / t585;
t446 = t298 + t299;
t199 = pkin(2) * t545;
t577 = 0.2e1 * t199;
t162 = t577 + t446;
t263 = xDDP(3);
t264 = xDDP(2);
t265 = xDDP(1);
t161 = pkin(1) * t270 - t546;
t163 = t239 * t280;
t164 = t239 * t281;
t170 = pkin(1) * t469 - pkin(3);
t383 = t254 * t598;
t171 = t280 * t383;
t172 = t281 * t383;
t176 = pkin(1) * t178;
t177 = pkin(1) * t179;
t184 = t271 * t242;
t201 = pkin(1) * t234;
t202 = pkin(1) * t235;
t252 = t276 ^ 2;
t380 = -0.2e1 * t426;
t167 = pkin(1) + t380;
t455 = t277 * t242;
t342 = t167 * t271 - t455;
t322 = t342 * t281;
t323 = t342 * t280;
t243 = t255 ^ 2;
t472 = t243 * t298;
t384 = (t454 + (-t220 * t280 + t223 * t281) * t271) * t472;
t387 = t279 * (pkin(2) + pkin(3)) * (pkin(2) - pkin(3));
t388 = t270 * t455;
t439 = 0.2e1 * t472;
t542 = t270 * pkin(2);
t440 = 0.2e1 * t542;
t443 = 0.2e1 * t545;
t461 = t271 * t280;
t515 = (t277 * t167 + t184) * t279;
t551 = pkin(3) * t279;
t51 = (0.2e1 * t384 + (t448 * t223 + (-pkin(2) * t461 + t179) * t220 + pkin(2) * t454) * t443 + (t164 * t271 + t171) * t223 + (-t163 * t271 + t172) * t220 + t277 * t387) * t252 + (t270 * t135 * t439 + ((t280 * t440 + t322) * t223 + (t281 * t440 - t323) * t220 + t515) * t545 + (pkin(2) * t322 + t163 * t270 + t176) * t223 + (-pkin(2) * t323 + t164 * t270 + t177) * t220 + pkin(2) * t515) * t276 - t384 + t135 * t161 * t545 + (t201 * t270 + (-t170 * t460 + (t281 * t388 - t234) * t254) * pkin(3)) * t223 + (t202 * t270 + (t170 * t461 + (-t280 * t388 - t235) * t254) * pkin(3)) * t220 - (t170 * t277 + t184 * t469) * t551;
t539 = t51 * t75;
t435 = t125 * t539;
t507 = t124 * t216;
t556 = t75 * pkin(1);
t429 = t220 * t546;
t432 = t223 * t546;
t476 = t220 * t271;
t488 = t191 * t223;
t90 = (-t191 * t476 + t432) * t276 + (t271 * t429 + t488) * t270;
t473 = t223 * t271;
t477 = t220 * t191;
t93 = (t191 * t473 + t429) * t276 + t270 * (-t271 * t432 + t477);
t42 = -t217 * t435 + (t277 * t263 + t162 / (t226 + (t255 * t276 - t469) * pkin(3)) * t503 - (t90 * t264 + t93 * t265 + (t585 * t75 + t51 - t556) * t75 * t507) * t124) * t215;
t39 = t42 * pkin(1);
t588 = -pkin(5) * t503 + t111 + 0.2e1 * t39;
t121 = 0.1e1 / t584;
t160 = pkin(1) * t268 - t546;
t169 = pkin(1) * t470 - pkin(3);
t183 = t269 * t241;
t251 = t274 ^ 2;
t381 = -0.2e1 * t427;
t166 = pkin(1) + t381;
t457 = t275 * t241;
t343 = t166 * t269 - t457;
t324 = t343 * t281;
t325 = t343 * t280;
t385 = (t456 + (-t219 * t280 + t222 * t281) * t269) * t472;
t389 = t268 * t457;
t543 = t268 * pkin(2);
t441 = 0.2e1 * t543;
t464 = t269 * t280;
t516 = (t275 * t166 + t183) * t279;
t50 = (0.2e1 * t385 + (t449 * t222 + (-pkin(2) * t464 + t179) * t219 + pkin(2) * t456) * t443 + (t164 * t269 + t171) * t222 + (-t163 * t269 + t172) * t219 + t275 * t387) * t251 + (t268 * t134 * t439 + ((t280 * t441 + t324) * t222 + (t281 * t441 - t325) * t219 + t516) * t545 + (pkin(2) * t324 + t163 * t268 + t176) * t222 + (-pkin(2) * t325 + t164 * t268 + t177) * t219 + pkin(2) * t516) * t274 - t385 + t134 * t160 * t545 + (t201 * t268 + (-t169 * t463 + (t281 * t389 - t234) * t254) * pkin(3)) * t222 + (t202 * t268 + (t169 * t464 + (-t280 * t389 - t235) * t254) * pkin(3)) * t219 - (t169 * t275 + t183 * t470) * t551;
t540 = t50 * t74;
t436 = t122 * t540;
t510 = t121 * t213;
t563 = pkin(1) * t74;
t430 = t219 * t546;
t433 = t222 * t546;
t478 = t219 * t269;
t489 = t191 * t222;
t89 = (-t191 * t478 + t433) * t274 + (t269 * t430 + t489) * t268;
t474 = t222 * t269;
t479 = t219 * t191;
t92 = (t191 * t474 + t430) * t274 + t268 * (-t269 * t433 + t479);
t41 = -t214 * t436 + (t275 * t263 + t162 / (t225 + (t255 * t274 - t470) * pkin(3)) * t504 - (t89 * t264 + t92 * t265 + (t584 * t74 + t50 - t563) * t74 * t510) * t121) * t212;
t38 = t41 * pkin(1);
t587 = -pkin(5) * t504 + t110 + 0.2e1 * t38;
t118 = 0.1e1 / t583;
t159 = pkin(1) * t266 - t546;
t168 = pkin(1) * t471 - pkin(3);
t182 = t267 * t240;
t250 = t272 ^ 2;
t382 = -0.2e1 * t428;
t165 = pkin(1) + t382;
t459 = t273 * t240;
t344 = t165 * t267 - t459;
t326 = t344 * t281;
t327 = t344 * t280;
t386 = (t458 + (-t218 * t280 + t221 * t281) * t267) * t472;
t390 = t266 * t459;
t544 = t266 * pkin(2);
t442 = 0.2e1 * t544;
t467 = t267 * t280;
t517 = (t273 * t165 + t182) * t279;
t49 = (0.2e1 * t386 + (t450 * t221 + (-pkin(2) * t467 + t179) * t218 + pkin(2) * t458) * t443 + (t164 * t267 + t171) * t221 + (-t163 * t267 + t172) * t218 + t273 * t387) * t250 + (t266 * t133 * t439 + ((t280 * t442 + t326) * t221 + (t281 * t442 - t327) * t218 + t517) * t545 + (pkin(2) * t326 + t163 * t266 + t176) * t221 + (-pkin(2) * t327 + t164 * t266 + t177) * t218 + pkin(2) * t517) * t272 - t386 + t133 * t159 * t545 + (t201 * t266 + (-t168 * t466 + (t281 * t390 - t234) * t254) * pkin(3)) * t221 + (t202 * t266 + (t168 * t467 + (-t280 * t390 - t235) * t254) * pkin(3)) * t218 - (t168 * t273 + t182 * t471) * t551;
t541 = t49 * t73;
t437 = t119 * t541;
t513 = t118 * t210;
t564 = pkin(1) * t73;
t431 = t218 * t546;
t434 = t221 * t546;
t480 = t218 * t267;
t490 = t191 * t221;
t88 = (-t191 * t480 + t434) * t272 + (t267 * t431 + t490) * t266;
t475 = t221 * t267;
t481 = t218 * t191;
t91 = (t191 * t475 + t431) * t272 + t266 * (-t267 * t434 + t481);
t40 = -t211 * t437 + (t273 * t263 + t162 / (t224 + (t255 * t272 - t471) * pkin(3)) * t505 - (t88 * t264 + t91 * t265 + (t583 * t73 + t49 - t564) * t73 * t513) * t118) * t209;
t37 = t40 * pkin(1);
t586 = -pkin(5) * t505 + t109 + 0.2e1 * t37;
t582 = 0.2e1 * pkin(1);
t150 = 0.1e1 / t156;
t502 = t133 * t150;
t412 = t73 * t502;
t514 = t118 * t209;
t350 = t412 * t514;
t203 = sin(t247);
t85 = ((pkin(3) * t203 + t544) * t505 + t218 * t265 + t221 * t264) * t150;
t567 = t85 / 0.2e1;
t55 = -pkin(1) * t350 + pkin(5) * t567;
t581 = -0.2e1 * t55;
t152 = 0.1e1 / t157;
t501 = t134 * t152;
t411 = t74 * t501;
t511 = t121 * t212;
t349 = t411 * t511;
t204 = sin(t248);
t86 = ((pkin(3) * t204 + t543) * t504 + t219 * t265 + t222 * t264) * t152;
t566 = t86 / 0.2e1;
t56 = -pkin(1) * t349 + pkin(5) * t566;
t580 = -0.2e1 * t56;
t154 = 0.1e1 / t158;
t500 = t135 * t154;
t410 = t75 * t500;
t508 = t124 * t215;
t348 = t410 * t508;
t205 = sin(t249);
t87 = ((pkin(3) * t205 + t542) * t503 + t220 * t265 + t223 * t264) * t154;
t565 = t87 / 0.2e1;
t57 = -pkin(1) * t348 + pkin(5) * t565;
t579 = -0.2e1 * t57;
t256 = t299 / 0.2e1;
t447 = t199 + t256;
t578 = -0.4e1 * pkin(1) * (t298 / 0.2e1 + t447);
t576 = 0.2e1 * t250;
t575 = 0.2e1 * t251;
t574 = 0.2e1 * t252;
t573 = -0.4e1 * t272;
t572 = -0.4e1 * t274;
t571 = -0.4e1 * t276;
t570 = -0.4e1 * pkin(5) - (4 * pkin(6));
t569 = -pkin(5) / 0.2e1;
t372 = pkin(1) * t267 - t459;
t425 = pkin(3) * (t243 - 0.1e1);
t562 = pkin(3) * (t267 * t425 + t372 * t471);
t371 = pkin(1) * t269 - t457;
t561 = pkin(3) * (t269 * t425 + t371 * t470);
t370 = pkin(1) * t271 - t455;
t560 = pkin(3) * (t271 * t425 + t370 * t469);
t559 = pkin(5) * t40;
t558 = pkin(5) * t41;
t557 = pkin(5) * t42;
t555 = t576 - 0.1e1;
t554 = t575 - 0.1e1;
t553 = t574 - 0.1e1;
t552 = pkin(2) * t298;
t550 = pkin(3) * t299;
t535 = t266 * t40;
t534 = t268 * t41;
t533 = t270 * t42;
t532 = t272 * t40;
t531 = t274 * t41;
t530 = t276 * t42;
t529 = t40 * t257;
t528 = t41 * t258;
t527 = t42 * t259;
t106 = t267 * t382 + t372;
t139 = (t243 - 0.1e1 / 0.2e1) * t298 + t447;
t200 = pkin(1) * t546;
t328 = t239 + t439 + t577;
t97 = t328 * t266 + t200;
t61 = (-t139 * t480 + t191 * t434) * t576 + (-t106 * t481 + t221 * t97) * t272 + t218 * t562 + t159 * t490;
t526 = t61 * t264;
t62 = (t139 * t475 + t191 * t431) * t576 + (t106 * t490 + t218 * t97) * t272 - t221 * t562 + t159 * t481;
t525 = t62 * t265;
t107 = t269 * t381 + t371;
t98 = t328 * t268 + t200;
t63 = (-t139 * t478 + t191 * t433) * t575 + (-t107 * t479 + t98 * t222) * t274 + t219 * t561 + t160 * t489;
t524 = t63 * t264;
t64 = (t139 * t474 + t191 * t430) * t575 + (t107 * t489 + t219 * t98) * t274 - t222 * t561 + t160 * t479;
t523 = t64 * t265;
t108 = t271 * t380 + t370;
t99 = t328 * t270 + t200;
t65 = (-t139 * t476 + t191 * t432) * t574 + (-t108 * t477 + t99 * t223) * t276 + t220 * t560 + t161 * t488;
t522 = t65 * t264;
t66 = (t139 * t473 + t191 * t429) * t574 + (t108 * t488 + t220 * t99) * t276 - t223 * t560 + t161 * t477;
t521 = t66 * t265;
t103 = t597 * t273 + t182;
t520 = t103 * t263;
t104 = t596 * t275 + t183;
t519 = t104 * t263;
t105 = t595 * t277 + t184;
t518 = t105 * t263;
t512 = t119 * t210;
t509 = t122 * t213;
t506 = t125 * t216;
t143 = t218 * g(1) + t221 * g(2);
t499 = t143 * t272;
t144 = t219 * g(1) + t222 * g(2);
t498 = t144 * t274;
t145 = t220 * g(1) + t223 * g(2);
t497 = t145 * t276;
t496 = t150 * t218;
t495 = t150 * t221;
t494 = t152 * t219;
t493 = t152 * t222;
t492 = t154 * t220;
t491 = t154 * t223;
t484 = t209 * t273;
t483 = t212 * t275;
t482 = t215 * t277;
t468 = t266 * t272;
t465 = t268 * t274;
t462 = t270 * t276;
t445 = -2 * t552;
t444 = -2 * t550;
t424 = t88 * t514;
t423 = t91 * t514;
t422 = t70 * t512;
t421 = t118 * t594;
t420 = t89 * t511;
t419 = t92 * t511;
t418 = t71 * t509;
t417 = t121 * t593;
t416 = t90 * t508;
t415 = t93 * t508;
t414 = t72 * t506;
t413 = t124 * t592;
t409 = t597 * t211 * t49;
t408 = t596 * t214 * t50;
t407 = t595 * t217 * t51;
t406 = t150 * t535;
t405 = t150 * t532;
t404 = t152 * t534;
t403 = t152 * t531;
t402 = t154 * t533;
t401 = t154 * t530;
t192 = 0.2e1 * t247;
t198 = pkin(2) * t256 + t552;
t290 = 0.2e1 * qJ(2,3);
t244 = pkin(7) + t290;
t289 = 0.2e1 * pkin(7);
t379 = -2 * pkin(3) * t298 - 4 * t550;
t400 = (-(sin(t244) * t598 + sin(t192) * t298 + sin(t290) * t299) * t73 * t118 + (cos(qJ(2,3) + t289) * t445 + cos(-pkin(7) + qJ(2,3)) * t444 + t379 * t206 + t198 * t573 + t578) * t502) * t151 * t133;
t193 = 0.2e1 * t248;
t291 = 0.2e1 * qJ(2,2);
t245 = pkin(7) + t291;
t399 = (-(sin(t245) * t598 + sin(t193) * t298 + sin(t291) * t299) * t74 * t121 + (cos(qJ(2,2) + t289) * t445 + cos(-pkin(7) + qJ(2,2)) * t444 + t379 * t207 + t198 * t572 + t578) * t501) * t153 * t134;
t194 = 0.2e1 * t249;
t292 = 0.2e1 * qJ(2,1);
t246 = pkin(7) + t292;
t398 = (-(sin(t246) * t598 + sin(t194) * t298 + sin(t292) * t299) * t75 * t124 + (cos(qJ(2,1) + t289) * t445 + cos(-pkin(7) + qJ(2,1)) * t444 + t379 * t208 + t198 * t571 + t578) * t500) * t155 * t135;
t396 = t109 * t514;
t395 = t110 * t511;
t394 = t111 * t508;
t230 = g(3) * t273;
t112 = t267 * t591 + t230;
t393 = t112 * t514;
t231 = g(3) * t275;
t113 = t269 * t590 + t231;
t392 = t113 * t511;
t232 = g(3) * t277;
t114 = t271 * t589 + t232;
t391 = t114 * t508;
t16 = -t555 * t350 + t40 * t468;
t378 = -0.2e1 * t16 * t514;
t17 = -t554 * t349 + t41 * t465;
t377 = -0.2e1 * t17 * t511;
t18 = -t553 * t348 + t42 * t462;
t376 = -0.2e1 * t18 * t508;
t375 = 0.2e1 * t240 * t502;
t374 = 0.2e1 * t241 * t501;
t373 = 0.2e1 * t242 * t500;
t369 = t210 * t437;
t368 = t213 * t436;
t367 = t216 * t435;
t293 = (qJ(3,3) ^ 2);
t296 = pkin(5) ^ 2;
t335 = -0.2e1 * pkin(1) ^ 2 - 0.2e1 * t296 - t446 + (-0.4e1 * pkin(5) - (2 * pkin(6))) * pkin(6);
t44 = (t564 - t49 / 0.2e1) * t514;
t366 = -((t203 * t375 + 0.4e1 * t206 * t44) * pkin(3) + (t266 * t375 - t44 * t573) * pkin(2) - (t49 * t582 + (qJ(3,3) * t570 - cos(t192) * t298 - cos(t290) * t299 - (2 * t293) + (-cos(t244) - t255) * t598 + t335) * t73) * t514) * t513 / 0.2e1;
t294 = (qJ(3,2) ^ 2);
t45 = (t563 - t50 / 0.2e1) * t511;
t365 = -((t204 * t374 + 0.4e1 * t207 * t45) * pkin(3) + (t268 * t374 - t45 * t572) * pkin(2) - (t50 * t582 + (qJ(3,2) * t570 - cos(t193) * t298 - cos(t291) * t299 - (2 * t294) + (-cos(t245) - t255) * t598 + t335) * t74) * t511) * t510 / 0.2e1;
t364 = t119 * t409;
t363 = t122 * t408;
t362 = t125 * t407;
t295 = (qJ(3,1) ^ 2);
t43 = (t556 - t51 / 0.2e1) * t508;
t361 = -((t205 * t373 + 0.4e1 * t208 * t43) * pkin(3) + (t270 * t373 - t43 * t571) * pkin(2) - (t51 * t582 + (qJ(3,1) * t570 - cos(t194) * t298 - cos(t292) * t299 - (2 * t295) + (-cos(t246) - t255) * t598 + t335) * t75) * t508) * t507 / 0.2e1;
t360 = 0.2e1 * t369;
t359 = 0.2e1 * t368;
t358 = 0.2e1 * t367;
t356 = t412 * t544;
t355 = t411 * t543;
t354 = t410 * t542;
t347 = -t525 - t526;
t346 = -t523 - t524;
t345 = -t521 - t522;
t338 = t150 * t422 * t468;
t337 = t152 * t418 * t465;
t336 = t154 * t414 * t462;
t76 = t85 * t266 + t272 * t505;
t78 = t86 * t268 + t274 * t504;
t80 = t87 * t270 + t276 * t503;
t334 = pkin(1) * t422 + g(1) * t475 - g(2) * t480 + t230;
t333 = pkin(1) * t418 + g(1) * t474 - g(2) * t478 + t231;
t332 = pkin(1) * t414 + g(1) * t473 - g(2) * t476 + t232;
t331 = -t520 + t400 / 0.2e1;
t330 = -t519 + t399 / 0.2e1;
t329 = -t518 + t398 / 0.2e1;
t321 = -t218 * t406 - t219 * t404 - t220 * t402;
t320 = -t221 * t406 - t222 * t404 - t223 * t402;
t285 = pkin(1) * g(3);
t81 = -t270 * t503 + t87 * t276;
t79 = -t268 * t504 + t86 * t274;
t77 = -t266 * t505 + t85 * t272;
t54 = t553 * t414;
t53 = t554 * t418;
t52 = t555 * t422;
t36 = t332 - t557;
t35 = t333 - t558;
t34 = t334 - t559;
t33 = (-0.2e1 * t276 * t348 + t533) * t270;
t32 = (-0.2e1 * t274 * t349 + t534) * t268;
t31 = (-0.2e1 * t272 * t350 + t535) * t266;
t30 = t145 * t270 + t276 * t36;
t29 = t270 * t36 - t497;
t28 = t144 * t268 + t274 * t35;
t27 = t268 * t35 - t498;
t26 = t143 * t266 + t272 * t34;
t25 = t266 * t34 - t499;
t24 = t270 * t579 + t588 * t276;
t23 = -t588 * t270 + t276 * t579;
t22 = t268 * t580 + t587 * t274;
t21 = -t587 * t268 + t274 * t580;
t20 = t266 * t581 + t586 * t272;
t19 = -t586 * t266 + t272 * t581;
t12 = -t80 * pkin(2) - t114 + t358 - 0.2e1 * t527;
t11 = -t78 * pkin(2) - t113 + t359 - 0.2e1 * t528;
t10 = -t76 * pkin(2) - t112 + t360 - 0.2e1 * t529;
t9 = (t527 + (t72 * t226 - 0.2e1 * t539) * t506 + t332) * t270 - t497 + t87 * pkin(2);
t8 = (t528 + (t71 * t225 - 0.2e1 * t540) * t509 + t333) * t268 - t498 + t86 * pkin(2);
t7 = (t529 + (t70 * t224 - 0.2e1 * t541) * t512 + t334) * t266 - t499 + t85 * pkin(2);
t6 = -t75 * t361 - pkin(2) * t530 - t39 + (t216 * t259 * t72 - t75 * t407) * t125 + (-(-t345 + 0.2e1 * t354) * t124 - t329) * t215 - t111;
t5 = -t74 * t365 - pkin(2) * t531 - t38 + (t213 * t258 * t71 - t74 * t408) * t122 + (-(-t346 + 0.2e1 * t355) * t121 - t330) * t212 - t110;
t4 = -t73 * t366 - pkin(2) * t532 - t37 + (t210 * t257 * t70 - t73 * t409) * t119 + (-(-t347 + 0.2e1 * t356) * t118 - t331) * t209 - t109;
t3 = 0.2e1 * ((-t547 / 0.2e1 + t197 / 0.2e1) * t277 + t39 + t229 / 0.2e1 + (t361 / 0.2e1 + t362 / 0.2e1) * t75 + (t569 - qJ(3,1) / 0.2e1) * t503 + (-t518 / 0.2e1 + t398 / 0.4e1 - (-t354 - t521 / 0.2e1 - t522 / 0.2e1) * t124) * t215) * t226 + (-pkin(1) * t589 + g(3) * t259) * t277 + (t259 * t589 + t285) * t271 - 0.2e1 * (qJ(3,1) * t565 + t57) * t542 + 0.2e1 * (t367 + t557) * qJ(3,1) + pkin(5) * t358 + pkin(1) * (t39 + (t361 + t362) * t75 + (-t345 * t124 + t329) * t215) + (t252 * t299 + t295 + t296) * t42;
t2 = 0.2e1 * ((-t548 / 0.2e1 + t196 / 0.2e1) * t275 + t38 + t228 / 0.2e1 + (t365 / 0.2e1 + t363 / 0.2e1) * t74 + (t569 - qJ(3,2) / 0.2e1) * t504 + (-t519 / 0.2e1 + t399 / 0.4e1 - (-t355 - t523 / 0.2e1 - t524 / 0.2e1) * t121) * t212) * t225 + (-pkin(1) * t590 + g(3) * t258) * t275 + (t258 * t590 + t285) * t269 - 0.2e1 * (qJ(3,2) * t566 + t56) * t543 + 0.2e1 * (t368 + t558) * qJ(3,2) + pkin(5) * t359 + pkin(1) * (t38 + (t363 + t365) * t74 + (-t346 * t121 + t330) * t212) + (t251 * t299 + t294 + t296) * t41;
t1 = 0.2e1 * ((-t549 / 0.2e1 + t195 / 0.2e1) * t273 + t37 + t227 / 0.2e1 + (t366 / 0.2e1 + t364 / 0.2e1) * t73 + (t569 - qJ(3,3) / 0.2e1) * t505 + (-t520 / 0.2e1 + t400 / 0.4e1 - (-t356 - t525 / 0.2e1 - t526 / 0.2e1) * t118) * t209) * t224 + (-pkin(1) * t591 + g(3) * t257) * t273 + (t257 * t591 + t285) * t267 - 0.2e1 * (qJ(3,3) * t567 + t55) * t544 + 0.2e1 * (t369 + t559) * qJ(3,3) + pkin(5) * t360 + pkin(1) * (t37 + (t364 + t366) * t73 + (-t347 * t118 + t331) * t209) + (t250 * t299 + t293 + t296) * t40;
t13 = [-t40 * t423 - t41 * t419 - t42 * t415, -t93 * t394 - t92 * t395 - t91 * t396, -t93 * t391 - t92 * t392 - t91 * t393, -t218 * t338 - t219 * t337 - t220 * t336 - t31 * t423 - t32 * t419 - t33 * t415, t376 * t93 + t377 * t92 + t378 * t91 - t54 * t492 - t53 * t494 - t52 * t496, -t415 * t80 - t419 * t78 - t423 * t76 - t321, t218 * t405 + t219 * t403 + t220 * t401 - t415 * t81 - t419 * t79 - t423 * t77, t492 * t87 + t494 * t86 + t496 * t85, -t20 * t423 - t22 * t419 - t24 * t415 + t25 * t496 + t27 * t494 + t29 * t492, -t19 * t423 - t21 * t419 - t23 * t415 + t26 * t496 + t28 * t494 + t30 * t492, pkin(2) * t321 - t10 * t423 - t11 * t419 - t12 * t415 + t413 * t66 + t417 * t64 + t421 * t62, -(t3 * t93 + t6 * t66) * t508 - (t2 * t92 + t5 * t64) * t511 - (t1 * t91 + t4 * t62) * t514 + (t492 * t9 + t494 * t8 + t496 * t7) * pkin(2), t265 - g(1); -t40 * t424 - t41 * t420 - t42 * t416, -t90 * t394 - t89 * t395 - t88 * t396, -t90 * t391 - t89 * t392 - t88 * t393, -t221 * t338 - t222 * t337 - t223 * t336 - t31 * t424 - t32 * t420 - t33 * t416, t376 * t90 + t377 * t89 + t378 * t88 - t54 * t491 - t53 * t493 - t52 * t495, -t416 * t80 - t420 * t78 - t424 * t76 - t320, t221 * t405 + t222 * t403 + t223 * t401 - t416 * t81 - t420 * t79 - t424 * t77, t491 * t87 + t493 * t86 + t495 * t85, -t20 * t424 - t22 * t420 - t24 * t416 + t25 * t495 + t27 * t493 + t29 * t491, -t19 * t424 - t21 * t420 - t23 * t416 + t26 * t495 + t28 * t493 + t30 * t491, pkin(2) * t320 - t10 * t424 - t11 * t420 - t12 * t416 + t413 * t65 + t417 * t63 + t421 * t61, -(t3 * t90 + t6 * t65) * t508 - (t2 * t89 + t5 * t63) * t511 - (t1 * t88 + t4 * t61) * t514 + (t491 * t9 + t493 * t8 + t495 * t7) * pkin(2), t264 - g(2); t40 * t484 + t41 * t483 + t42 * t482, t109 * t484 + t110 * t483 + t111 * t482, t112 * t484 + t113 * t483 + t114 * t482, t31 * t484 + t32 * t483 + t33 * t482, 0.2e1 * t16 * t484 + 0.2e1 * t17 * t483 + 0.2e1 * t18 * t482, t482 * t80 + t483 * t78 + t484 * t76, t482 * t81 + t483 * t79 + t484 * t77, 0, t20 * t484 + t22 * t483 + t24 * t482, t19 * t484 + t21 * t483 + t23 * t482, t10 * t484 - t103 * t594 - t104 * t593 - t105 * t592 + t11 * t483 + t12 * t482, (t105 * t6 + t277 * t3) * t215 + (t104 * t5 + t2 * t275) * t212 + (t1 * t273 + t103 * t4) * t209, t263 - g(3);];
tauX_reg  = t13;
