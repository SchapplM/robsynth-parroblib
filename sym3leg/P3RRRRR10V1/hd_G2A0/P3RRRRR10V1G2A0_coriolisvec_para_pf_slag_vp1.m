% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR10V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 22:49
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G2A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 22:16:49
% EndTime: 2020-08-06 22:19:12
% DurationCPUTime: 147.79s
% Computational Cost: add. (545247->1656), mult. (1590372->2701), div. (44253->13), fcn. (1310583->32), ass. (0->993)
t2325 = cos(pkin(3));
t2303 = t2325 ^ 2;
t2996 = t2303 - 0.1e1;
t2371 = rSges(3,3) ^ 2;
t2372 = rSges(3,2) ^ 2;
t2373 = rSges(2,2) ^ 2;
t2375 = rSges(2,1) ^ 2;
t2935 = Icges(3,3) - Icges(3,2);
t2140 = Icges(2,2) - Icges(2,1) + t2935 + (-t2373 + t2375) * m(2) + (-t2371 + t2372) * m(3);
t2344 = cos(qJ(3,3));
t3005 = m(3) * rSges(3,2);
t2246 = rSges(3,1) * t3005 - Icges(3,4);
t2335 = sin(qJ(3,3));
t2827 = t2246 * t2335;
t2682 = -0.2e1 * t2827;
t2374 = rSges(3,1) ^ 2;
t2275 = -t2372 + t2374;
t2936 = Icges(3,2) - Icges(3,1);
t2179 = m(3) * t2275 + t2936;
t2308 = t2344 ^ 2;
t3063 = t2179 * t2308;
t3065 = t2344 * t2682 + t3063;
t2394 = -t2140 - t3065;
t2347 = cos(qJ(3,2));
t2338 = sin(qJ(3,2));
t2826 = t2246 * t2338;
t2680 = -0.2e1 * t2826;
t2313 = t2347 ^ 2;
t3062 = t2179 * t2313;
t3066 = t2347 * t2680 + t3062;
t2393 = -t2140 - t3066;
t2350 = cos(qJ(3,1));
t2341 = sin(qJ(3,1));
t2825 = t2246 * t2341;
t2678 = -0.2e1 * t2825;
t2318 = t2350 ^ 2;
t3061 = t2179 * t2318;
t3067 = t2350 * t2678 + t3061;
t2392 = -t2140 - t3067;
t2353 = rSges(2,3) + pkin(5);
t2992 = m(2) * t2353;
t2418 = -rSges(2,1) * t2992 + Icges(2,5) + t2246;
t2937 = t2341 * rSges(3,2);
t2697 = m(3) * t2937;
t2406 = -pkin(5) * t2697 - t2418;
t3006 = m(3) * rSges(3,1);
t2304 = pkin(5) * t3006;
t2846 = t2179 * t2341;
t2855 = (t2304 + t2846) * t2350;
t3052 = 0.2e1 * t2246;
t3079 = t2318 * t3052 + t2406 + t2855;
t2938 = t2338 * rSges(3,2);
t2698 = m(3) * t2938;
t2407 = -pkin(5) * t2698 - t2418;
t2847 = t2179 * t2338;
t2856 = (t2304 + t2847) * t2347;
t3078 = t2313 * t3052 + t2407 + t2856;
t2939 = t2335 * rSges(3,2);
t2699 = m(3) * t2939;
t2408 = -pkin(5) * t2699 - t2418;
t2848 = t2179 * t2335;
t2857 = (t2304 + t2848) * t2344;
t3077 = t2308 * t3052 + t2408 + t2857;
t2345 = cos(qJ(2,3));
t2311 = t2345 ^ 2;
t2673 = -0.2e1 * t2304;
t3076 = t2394 * t2311 + t2335 * t2673;
t2348 = cos(qJ(2,2));
t2316 = t2348 ^ 2;
t3075 = t2393 * t2316 + t2338 * t2673;
t2351 = cos(qJ(2,1));
t2321 = t2351 ^ 2;
t3074 = t2392 * t2321 + t2341 * t2673;
t3064 = pkin(6) * t2996;
t3011 = -0.2e1 * t2318;
t3060 = t2246 * t3011 - t2855;
t3012 = -0.2e1 * t2313;
t3059 = t2246 * t3012 - t2856;
t3013 = -0.2e1 * t2308;
t3058 = t2246 * t3013 - t2857;
t3057 = -0.4e1 * pkin(6);
t3056 = 0.2e1 * pkin(6);
t2261 = t2311 - 0.2e1;
t2824 = t2261 * t2335;
t2167 = pkin(2) * t2824 - pkin(5);
t2324 = sin(pkin(3));
t2337 = sin(qJ(1,3));
t2346 = cos(qJ(1,3));
t2336 = sin(qJ(2,3));
t2282 = t2336 * pkin(6);
t3049 = t2282 + pkin(1);
t2122 = t2167 * t2324 * t2346 + t2337 * t3049;
t2281 = t2335 * pkin(2);
t2995 = t2311 - 0.1e1;
t2164 = t2281 * t2995 - pkin(5);
t2217 = pkin(5) * t2335 + pkin(2);
t2332 = legFrame(3,2);
t2268 = sin(t2332);
t2271 = cos(t2332);
t2780 = t2335 * t2336;
t2536 = t2324 * t2780;
t2443 = pkin(2) * t2345 * t2536;
t2417 = t2337 * t2443;
t2953 = pkin(6) * t2345;
t2624 = t2346 * t2953;
t2479 = t2335 * t2624;
t2968 = pkin(2) * t2346;
t2620 = t2336 * t2968;
t2488 = t2308 * t2620;
t2779 = t2335 * t2345;
t2548 = t2271 * t2779;
t2798 = t2324 * t2345;
t2628 = pkin(6) * t2798;
t2774 = t2337 * t2345;
t2806 = t2324 * t2336;
t2975 = pkin(2) * t2308;
t2820 = (t2345 + 0.1e1) * (t2345 - 0.1e1);
t2954 = pkin(6) * t2324;
t2482 = t2820 * t2954;
t2805 = t2324 * t2337;
t3029 = t2335 * (-(pkin(1) * t2805 - pkin(5) * t2346) * t2336 + t2337 * t2482) + t2620;
t2519 = -t2217 + 0.2e1 * t2975;
t3042 = t2346 * t2519;
t2059 = ((-t2167 * t2271 + t2268 * t2624) * t2344 + (-pkin(6) * t2548 - t2268 * t3042) * t2336) * t2303 + (-(t2268 * t2774 - 0.2e1 * t2271 * t2806) * t2975 + (-t2122 * t2268 - t2271 * t2628) * t2344 - (t2217 * t2271 + t2268 * t2479) * t2806) * t2325 + t2268 * t2488 + (t2164 * t2271 + t2268 * t2417) * t2344 - t3029 * t2268 + t3049 * t2548;
t2551 = t2268 * t2779;
t2062 = ((-t2167 * t2268 - t2271 * t2624) * t2344 + (-pkin(6) * t2551 + t2271 * t3042) * t2336) * t2303 + ((0.2e1 * t2268 * t2806 + t2271 * t2774) * t2975 + (t2122 * t2271 - t2268 * t2628) * t2344 + (-t2217 * t2268 + t2271 * t2479) * t2806) * t2325 - t2271 * t2488 + (t2164 * t2268 - t2271 * t2417) * t2344 + t3029 * t2271 + t3049 * t2551;
t2759 = t2344 * t2345;
t2625 = pkin(6) * t2759;
t2972 = pkin(2) * t2336;
t2658 = t2308 * t2972;
t2778 = t2335 * t2346;
t2983 = pkin(1) * t2324;
t2077 = t2337 * (-t2336 * t2519 + t2625) * t2303 + ((-t2167 * t2805 + t2346 * t3049) * t2344 + (-pkin(6) * t2337 * t2536 + t2308 * t2968) * t2345) * t2325 + t2337 * t2658 - t2344 * t2346 * t2443 + (-t2217 * t2337 - t2778 * t2983) * t2336 + t2482 * t2778;
t2309 = 0.1e1 / t2344;
t2253 = pkin(1) * t2281;
t2776 = t2336 * t2344;
t2645 = pkin(2) * t2776;
t2157 = -t2645 + t2953;
t2854 = t2157 * t2325;
t3037 = -pkin(2) * t2759 - t2282;
t2110 = 0.1e1 / (pkin(1) * t2854 + (pkin(5) * t3037 + t2253) * t2324);
t2360 = xDP(1);
t2864 = t2110 * t2360;
t2359 = xDP(2);
t2865 = t2110 * t2359;
t2358 = xDP(3);
t2866 = t2110 * t2358;
t1999 = (t2059 * t2865 + t2062 * t2864 + t2077 * t2866) * t2309;
t3023 = 0.2e1 * t1999;
t2262 = t2316 - 0.2e1;
t2823 = t2262 * t2338;
t2168 = pkin(2) * t2823 - pkin(5);
t2340 = sin(qJ(1,2));
t2349 = cos(qJ(1,2));
t2339 = sin(qJ(2,2));
t2284 = t2339 * pkin(6);
t3048 = t2284 + pkin(1);
t2123 = t2168 * t2324 * t2349 + t2340 * t3048;
t2283 = t2338 * pkin(2);
t2994 = t2316 - 0.1e1;
t2165 = t2283 * t2994 - pkin(5);
t2221 = pkin(5) * t2338 + pkin(2);
t2333 = legFrame(2,2);
t2269 = sin(t2333);
t2272 = cos(t2333);
t2773 = t2338 * t2339;
t2535 = t2324 * t2773;
t2442 = pkin(2) * t2348 * t2535;
t2416 = t2340 * t2442;
t2952 = pkin(6) * t2348;
t2623 = t2349 * t2952;
t2478 = t2338 * t2623;
t2966 = pkin(2) * t2349;
t2618 = t2339 * t2966;
t2487 = t2313 * t2618;
t2772 = t2338 * t2348;
t2547 = t2272 * t2772;
t2797 = t2324 * t2348;
t2627 = pkin(6) * t2797;
t2767 = t2340 * t2348;
t2803 = t2324 * t2339;
t2974 = pkin(2) * t2313;
t2819 = (t2348 + 0.1e1) * (t2348 - 0.1e1);
t2481 = t2819 * t2954;
t2802 = t2324 * t2340;
t3028 = t2338 * (-(pkin(1) * t2802 - pkin(5) * t2349) * t2339 + t2340 * t2481) + t2618;
t2518 = -t2221 + 0.2e1 * t2974;
t3041 = t2349 * t2518;
t2060 = ((-t2168 * t2272 + t2269 * t2623) * t2347 + (-pkin(6) * t2547 - t2269 * t3041) * t2339) * t2303 + (-(t2269 * t2767 - 0.2e1 * t2272 * t2803) * t2974 + (-t2123 * t2269 - t2272 * t2627) * t2347 - (t2221 * t2272 + t2269 * t2478) * t2803) * t2325 + t2269 * t2487 + (t2165 * t2272 + t2269 * t2416) * t2347 - t3028 * t2269 + t3048 * t2547;
t2550 = t2269 * t2772;
t2063 = ((-t2168 * t2269 - t2272 * t2623) * t2347 + (-pkin(6) * t2550 + t2272 * t3041) * t2339) * t2303 + ((0.2e1 * t2269 * t2803 + t2272 * t2767) * t2974 + (t2123 * t2272 - t2269 * t2627) * t2347 + (-t2221 * t2269 + t2272 * t2478) * t2803) * t2325 - t2272 * t2487 + (t2165 * t2269 - t2272 * t2416) * t2347 + t3028 * t2272 + t3048 * t2550;
t2971 = pkin(2) * t2339;
t2656 = t2313 * t2971;
t2758 = t2347 * t2348;
t2771 = t2338 * t2349;
t2078 = t2340 * (pkin(6) * t2758 - t2339 * t2518) * t2303 + ((-t2168 * t2802 + t2349 * t3048) * t2347 + (-pkin(6) * t2340 * t2535 + t2313 * t2966) * t2348) * t2325 + t2340 * t2656 - t2347 * t2349 * t2442 + (-t2221 * t2340 - t2771 * t2983) * t2339 + t2481 * t2771;
t2314 = 0.1e1 / t2347;
t2255 = pkin(1) * t2283;
t2769 = t2339 * t2347;
t2643 = pkin(2) * t2769;
t2158 = -t2643 + t2952;
t2853 = t2158 * t2325;
t3038 = -pkin(2) * t2758 - t2284;
t2111 = 0.1e1 / (pkin(1) * t2853 + (pkin(5) * t3038 + t2255) * t2324);
t2861 = t2111 * t2360;
t2862 = t2111 * t2359;
t2863 = t2111 * t2358;
t2000 = (t2060 * t2862 + t2063 * t2861 + t2078 * t2863) * t2314;
t3022 = 0.2e1 * t2000;
t2263 = t2321 - 0.2e1;
t2822 = t2263 * t2341;
t2169 = pkin(2) * t2822 - pkin(5);
t2343 = sin(qJ(1,1));
t2352 = cos(qJ(1,1));
t2342 = sin(qJ(2,1));
t2286 = t2342 * pkin(6);
t3047 = t2286 + pkin(1);
t2124 = t2169 * t2324 * t2352 + t2343 * t3047;
t2285 = t2341 * pkin(2);
t2993 = t2321 - 0.1e1;
t2166 = t2285 * t2993 - pkin(5);
t2225 = pkin(5) * t2341 + pkin(2);
t2334 = legFrame(1,2);
t2270 = sin(t2334);
t2273 = cos(t2334);
t2766 = t2341 * t2342;
t2534 = t2324 * t2766;
t2441 = pkin(2) * t2351 * t2534;
t2415 = t2343 * t2441;
t2951 = pkin(6) * t2351;
t2621 = t2352 * t2951;
t2477 = t2341 * t2621;
t2964 = pkin(2) * t2352;
t2617 = t2342 * t2964;
t2486 = t2318 * t2617;
t2765 = t2341 * t2351;
t2546 = t2273 * t2765;
t2796 = t2324 * t2351;
t2626 = pkin(6) * t2796;
t2760 = t2343 * t2351;
t2800 = t2324 * t2342;
t2973 = pkin(2) * t2318;
t2818 = (t2351 + 0.1e1) * (t2351 - 0.1e1);
t2480 = t2818 * t2954;
t2799 = t2324 * t2343;
t3027 = t2341 * (-(pkin(1) * t2799 - pkin(5) * t2352) * t2342 + t2343 * t2480) + t2617;
t2517 = -t2225 + 0.2e1 * t2973;
t3040 = t2352 * t2517;
t2061 = ((-t2169 * t2273 + t2270 * t2621) * t2350 + (-pkin(6) * t2546 - t2270 * t3040) * t2342) * t2303 + (-(t2270 * t2760 - 0.2e1 * t2273 * t2800) * t2973 + (-t2124 * t2270 - t2273 * t2626) * t2350 - (t2225 * t2273 + t2270 * t2477) * t2800) * t2325 + t2270 * t2486 + (t2166 * t2273 + t2270 * t2415) * t2350 - t3027 * t2270 + t3047 * t2546;
t2549 = t2270 * t2765;
t2064 = ((-t2169 * t2270 - t2273 * t2621) * t2350 + (-pkin(6) * t2549 + t2273 * t3040) * t2342) * t2303 + ((0.2e1 * t2270 * t2800 + t2273 * t2760) * t2973 + (t2124 * t2273 - t2270 * t2626) * t2350 + (-t2225 * t2270 + t2273 * t2477) * t2800) * t2325 - t2273 * t2486 + (t2166 * t2270 - t2273 * t2415) * t2350 + t3027 * t2273 + t3047 * t2549;
t2757 = t2350 * t2351;
t2622 = pkin(6) * t2757;
t2970 = pkin(2) * t2342;
t2654 = t2318 * t2970;
t2764 = t2341 * t2352;
t2079 = t2343 * (-t2342 * t2517 + t2622) * t2303 + ((-t2169 * t2799 + t2352 * t3047) * t2350 + (-pkin(6) * t2343 * t2534 + t2318 * t2964) * t2351) * t2325 + t2343 * t2654 - t2350 * t2352 * t2441 + (-t2225 * t2343 - t2764 * t2983) * t2342 + t2480 * t2764;
t2319 = 0.1e1 / t2350;
t2257 = pkin(1) * t2285;
t2762 = t2342 * t2350;
t2641 = pkin(2) * t2762;
t2159 = -t2641 + t2951;
t2852 = t2159 * t2325;
t3039 = -pkin(2) * t2757 - t2286;
t2112 = 0.1e1 / (pkin(1) * t2852 + (pkin(5) * t3039 + t2257) * t2324);
t2858 = t2112 * t2360;
t2859 = t2112 * t2359;
t2860 = t2112 * t2358;
t2001 = (t2061 * t2859 + t2064 * t2858 + t2079 * t2860) * t2319;
t3021 = 0.2e1 * t2001;
t2785 = t2325 * t2346;
t2119 = t2157 * t2785 + t2337 * t3037;
t2646 = pkin(2) * t2778;
t2792 = t2325 * t2335;
t2649 = pkin(2) * t2792;
t2095 = (t2157 * t2271 - t2268 * t2646) * t2324 - t2119 * t2268 - t2271 * t2649;
t2080 = t2095 * t2865;
t2096 = (t2157 * t2268 + t2271 * t2646) * t2324 + t2119 * t2271 - t2268 * t2649;
t2081 = t2096 * t2864;
t2807 = t2324 * t2335;
t2104 = t3037 * t2346 + (-pkin(2) * t2807 - t2854) * t2337;
t2092 = t2104 * t2866;
t2056 = t2081 + t2080 + t2092;
t3055 = 0.2e1 * t2056;
t2783 = t2325 * t2349;
t2120 = t2158 * t2783 + t2340 * t3038;
t2644 = pkin(2) * t2771;
t2790 = t2325 * t2338;
t2648 = pkin(2) * t2790;
t2097 = (t2158 * t2272 - t2269 * t2644) * t2324 - t2120 * t2269 - t2272 * t2648;
t2082 = t2097 * t2862;
t2098 = (t2158 * t2269 + t2272 * t2644) * t2324 + t2120 * t2272 - t2269 * t2648;
t2083 = t2098 * t2861;
t2804 = t2324 * t2338;
t2105 = t3038 * t2349 + (-pkin(2) * t2804 - t2853) * t2340;
t2093 = t2105 * t2863;
t2057 = t2083 + t2082 + t2093;
t3054 = 0.2e1 * t2057;
t2781 = t2325 * t2352;
t2121 = t2159 * t2781 + t2343 * t3039;
t2642 = pkin(2) * t2764;
t2788 = t2325 * t2341;
t2647 = pkin(2) * t2788;
t2099 = (t2159 * t2273 - t2270 * t2642) * t2324 - t2121 * t2270 - t2273 * t2647;
t2084 = t2099 * t2859;
t2100 = (t2159 * t2270 + t2273 * t2642) * t2324 + t2121 * t2273 - t2270 * t2647;
t2085 = t2100 * t2858;
t2801 = t2324 * t2341;
t2106 = t3039 * t2352 + (-pkin(2) * t2801 - t2852) * t2343;
t2094 = t2106 * t2860;
t2058 = t2085 + t2084 + t2094;
t3053 = 0.2e1 * t2058;
t3051 = 0.2e1 * t2324;
t3046 = Icges(2,3) + (t2373 + t2375) * m(2);
t3007 = m(2) * rSges(2,2);
t2718 = rSges(2,1) * t3007;
t3045 = -t2718 + Icges(2,4);
t2381 = pkin(2) ^ 2;
t1990 = t2381 * t1999;
t2307 = t2344 * t2308;
t3044 = t1990 * t2307;
t1991 = t2381 * t2000;
t2312 = t2347 * t2313;
t3043 = t1991 * t2312;
t2794 = t2324 * t2381;
t2290 = pkin(1) * t2311;
t2174 = t2290 - t3049;
t2291 = pkin(1) * t2316;
t2175 = t2291 - t3048;
t2292 = pkin(1) * t2321;
t2176 = t2292 - t3047;
t2946 = rSges(3,1) * t2341;
t3036 = rSges(3,2) * t2350 + t2946;
t2947 = rSges(3,1) * t2338;
t3035 = rSges(3,2) * t2347 + t2947;
t2948 = rSges(3,1) * t2335;
t3034 = rSges(3,2) * t2344 + t2948;
t3026 = 0.2e1 * pkin(1);
t2376 = 0.2e1 * pkin(5);
t3025 = -0.2e1 * pkin(6);
t3020 = -0.2e1 * t2056;
t3019 = -0.2e1 * t2057;
t3018 = -0.2e1 * t2058;
t3017 = -0.4e1 * t2246;
t3015 = 0.3e1 * t2325 * t2303;
t3014 = -0.2e1 * t2303;
t3010 = -0.2e1 * t2324;
t2364 = pkin(6) / 0.2e1;
t3008 = pkin(5) * m(3);
t2357 = m(2) * rSges(2,1);
t3004 = rSges(3,3) * m(3);
t2356 = pkin(1) * rSges(3,1);
t3003 = pkin(1) * rSges(3,2);
t1987 = pkin(5) * t1999;
t3002 = t1987 / 0.2e1;
t1988 = pkin(5) * t2000;
t3001 = t1988 / 0.2e1;
t1989 = pkin(5) * t2001;
t3000 = t1989 / 0.2e1;
t2999 = -t2179 / 0.2e1;
t2998 = t3052 / 0.2e1;
t2287 = pkin(1) * t2336;
t2229 = t2287 + pkin(6);
t2218 = t2281 + pkin(5);
t2469 = t2996 * t2346 * t2218;
t2113 = t2229 * t2805 + t2336 * t2469;
t2219 = 0.2e1 * t2282 + pkin(1);
t2116 = t2219 * t2805 + t2469;
t2539 = t2324 * t2785;
t2460 = t2268 * t2539;
t2125 = t2271 * t2303 - t2271 + t2460;
t2631 = t2303 * t2282;
t2147 = -t2631 + t3049;
t2170 = t2287 - t3064;
t2440 = t2539 * t2282;
t2563 = t2218 * t2806;
t2463 = t2325 * t2563;
t2378 = pkin(6) ^ 2;
t2815 = t2308 * t2381;
t2497 = -t2378 + t2815;
t2544 = t2336 * t2815;
t2808 = t2324 * t2325;
t2564 = t2218 * t2808;
t2969 = pkin(2) * t2344;
t2713 = pkin(6) * t2969;
t2616 = -0.2e1 * t2713;
t2065 = (t2268 * t2497 * t2805 + t2125 * t2616) * t2311 + (t2125 * t2544 + (t2116 * t2268 - t2271 * t2564) * t2969 + (t2147 * t2271 - t2268 * t2440) * pkin(6)) * t2345 - (-pkin(6) * t2460 + t2170 * t2271) * t2969 + pkin(6) * (t2113 * t2268 - t2271 * t2463);
t2457 = t2271 * t2539;
t2126 = t2268 * t2303 - t2268 - t2457;
t2430 = t2497 * t2337;
t2066 = (-t2271 * t2324 * t2430 + t2126 * t2616) * t2311 + (t2126 * t2544 - (t2116 * t2271 + t2268 * t2564) * t2969 + pkin(6) * (t2147 * t2268 + t2271 * t2440)) * t2345 - (pkin(6) * t2457 + t2170 * t2268) * t2969 - pkin(6) * (t2113 * t2271 + t2268 * t2463);
t2382 = 0.1e1 / pkin(2);
t2793 = t2324 * t2382;
t2533 = t2358 * t2793;
t2144 = t2324 * (-pkin(5) * t2282 + t2253);
t2982 = pkin(1) * t2325;
t2249 = pkin(6) * t2982;
t2652 = t2324 * t2969;
t2872 = 0.1e1 / ((-pkin(5) * t2652 + t2249) * t2345 - t2645 * t2982 + t2144) * t2309;
t2570 = t2382 * t2872;
t2615 = 0.2e1 * t2713;
t2791 = t2325 * t2336;
t2573 = ((t2325 * t2337 * t2615 + t2346 * t2497) * t2311 + ((t2218 * t2805 + t2219 * t2346) * t2969 - t2430 * t2791) * t2345 + (t2229 * t2346 + (-t2325 * t2969 + t2563) * t2337) * pkin(6)) * t2872;
t2032 = -t2533 * t2573 + (t2065 * t2359 + t2066 * t2360) * t2570;
t2991 = m(3) * t2032;
t2288 = pkin(1) * t2339;
t2230 = t2288 + pkin(6);
t2222 = t2283 + pkin(5);
t2468 = t2996 * t2349 * t2222;
t2114 = t2230 * t2802 + t2339 * t2468;
t2223 = 0.2e1 * t2284 + pkin(1);
t2117 = t2223 * t2802 + t2468;
t2538 = t2324 * t2783;
t2459 = t2269 * t2538;
t2127 = t2272 * t2303 - t2272 + t2459;
t2630 = t2303 * t2284;
t2148 = -t2630 + t3048;
t2171 = t2288 - t3064;
t2439 = t2538 * t2284;
t2561 = t2222 * t2803;
t2462 = t2325 * t2561;
t2812 = t2313 * t2381;
t2496 = -t2378 + t2812;
t2542 = t2339 * t2812;
t2562 = t2222 * t2808;
t2967 = pkin(2) * t2347;
t2712 = pkin(6) * t2967;
t2614 = -0.2e1 * t2712;
t2067 = (t2269 * t2496 * t2802 + t2127 * t2614) * t2316 + (t2127 * t2542 + (t2117 * t2269 - t2272 * t2562) * t2967 + (t2148 * t2272 - t2269 * t2439) * pkin(6)) * t2348 - (-pkin(6) * t2459 + t2171 * t2272) * t2967 + pkin(6) * (t2114 * t2269 - t2272 * t2462);
t2456 = t2272 * t2538;
t2128 = t2269 * t2303 - t2269 - t2456;
t2429 = t2496 * t2340;
t2068 = (-t2272 * t2324 * t2429 + t2128 * t2614) * t2316 + (t2128 * t2542 - (t2117 * t2272 + t2269 * t2562) * t2967 + pkin(6) * (t2148 * t2269 + t2272 * t2439)) * t2348 - (pkin(6) * t2456 + t2171 * t2269) * t2967 - pkin(6) * (t2114 * t2272 + t2269 * t2462);
t2145 = t2324 * (-pkin(5) * t2284 + t2255);
t2651 = t2324 * t2967;
t2871 = 0.1e1 / ((-pkin(5) * t2651 + t2249) * t2348 - t2643 * t2982 + t2145) * t2314;
t2569 = t2382 * t2871;
t2613 = 0.2e1 * t2712;
t2789 = t2325 * t2339;
t2572 = ((t2325 * t2340 * t2613 + t2349 * t2496) * t2316 + ((t2222 * t2802 + t2223 * t2349) * t2967 - t2429 * t2789) * t2348 + (t2230 * t2349 + (-t2325 * t2967 + t2561) * t2340) * pkin(6)) * t2871;
t2033 = -t2533 * t2572 + (t2067 * t2359 + t2068 * t2360) * t2569;
t2990 = m(3) * t2033;
t2289 = pkin(1) * t2342;
t2231 = t2289 + pkin(6);
t2226 = t2285 + pkin(5);
t2467 = t2996 * t2352 * t2226;
t2115 = t2231 * t2799 + t2342 * t2467;
t2227 = 0.2e1 * t2286 + pkin(1);
t2118 = t2227 * t2799 + t2467;
t2537 = t2324 * t2781;
t2458 = t2270 * t2537;
t2129 = t2273 * t2303 - t2273 + t2458;
t2629 = t2303 * t2286;
t2149 = -t2629 + t3047;
t2172 = t2289 - t3064;
t2438 = t2537 * t2286;
t2559 = t2226 * t2800;
t2461 = t2325 * t2559;
t2810 = t2318 * t2381;
t2495 = -t2378 + t2810;
t2540 = t2342 * t2810;
t2560 = t2226 * t2808;
t2965 = pkin(2) * t2350;
t2711 = pkin(6) * t2965;
t2612 = -0.2e1 * t2711;
t2069 = (t2270 * t2495 * t2799 + t2129 * t2612) * t2321 + (t2129 * t2540 + (t2118 * t2270 - t2273 * t2560) * t2965 + (t2149 * t2273 - t2270 * t2438) * pkin(6)) * t2351 - (-pkin(6) * t2458 + t2172 * t2273) * t2965 + pkin(6) * (t2115 * t2270 - t2273 * t2461);
t2455 = t2273 * t2537;
t2130 = t2270 * t2303 - t2270 - t2455;
t2428 = t2495 * t2343;
t2070 = (-t2273 * t2324 * t2428 + t2130 * t2612) * t2321 + (t2130 * t2540 - (t2118 * t2273 + t2270 * t2560) * t2965 + pkin(6) * (t2149 * t2270 + t2273 * t2438)) * t2351 - (pkin(6) * t2455 + t2172 * t2270) * t2965 - pkin(6) * (t2115 * t2273 + t2270 * t2461);
t2146 = t2324 * (-pkin(5) * t2286 + t2257);
t2650 = t2324 * t2965;
t2870 = 0.1e1 / ((-pkin(5) * t2650 + t2249) * t2351 - t2641 * t2982 + t2146) * t2319;
t2568 = t2382 * t2870;
t2611 = 0.2e1 * t2711;
t2787 = t2325 * t2342;
t2571 = ((t2325 * t2343 * t2611 + t2352 * t2495) * t2321 + ((t2226 * t2799 + t2227 * t2352) * t2965 - t2428 * t2787) * t2351 + (t2231 * t2352 + (-t2325 * t2965 + t2559) * t2343) * pkin(6)) * t2870;
t2034 = -t2533 * t2571 + (t2069 * t2359 + t2070 * t2360) * t2568;
t2989 = m(3) * t2034;
t2988 = m(3) * t2372;
t1993 = pkin(1) * t1999;
t1994 = pkin(1) * t2000;
t1995 = pkin(1) * t2001;
t2026 = pkin(1) * t2032;
t2027 = pkin(1) * t2033;
t2028 = pkin(1) * t2034;
t2191 = -t2357 + t2699;
t2987 = pkin(1) * t2191;
t2192 = -t2357 + t2698;
t2986 = pkin(1) * t2192;
t2193 = -t2357 + t2697;
t2985 = pkin(1) * t2193;
t2216 = -t3004 + t3007;
t2984 = pkin(1) * t2216;
t2981 = pkin(2) * t1999;
t2980 = pkin(2) * t2000;
t2979 = pkin(2) * t2001;
t2978 = pkin(2) * t2032;
t2977 = pkin(2) * t2033;
t2976 = pkin(2) * t2034;
t2963 = pkin(5) * t2032;
t2962 = pkin(5) * t2033;
t2961 = pkin(5) * t2034;
t2960 = pkin(5) * t2345;
t2959 = pkin(5) * t2348;
t2958 = pkin(5) * t2351;
t1984 = pkin(6) * t1999;
t1985 = pkin(6) * t2000;
t1986 = pkin(6) * t2001;
t2957 = pkin(6) * t2056;
t2956 = pkin(6) * t2057;
t2955 = pkin(6) * t2058;
t2020 = t2032 * pkin(6);
t2021 = t2033 * pkin(6);
t2022 = t2034 * pkin(6);
t2945 = rSges(3,1) * t2344;
t2944 = rSges(3,1) * t2347;
t2943 = rSges(3,1) * t2350;
t2323 = pkin(1) * t3056;
t2934 = 0.2e1 * m(3);
t1960 = t3045 * t1999;
t2002 = t2032 * t2848;
t2716 = rSges(3,2) * t3004;
t2241 = -Icges(3,6) + t2716;
t2837 = t2241 * t2335;
t2905 = t2032 * t2246;
t2717 = rSges(3,1) * t3004;
t2244 = -Icges(3,5) + t2717;
t2917 = t1999 * t2244;
t2932 = ((t2002 / 0.2e1 - t2917) * t2344 + t1999 * t2837 - t1960 + (t2308 - 0.1e1 / 0.2e1) * t2905) * t2311;
t1961 = t3045 * t2000;
t2003 = t2033 * t2847;
t2836 = t2241 * t2338;
t2901 = t2033 * t2246;
t2913 = t2000 * t2244;
t2931 = ((t2003 / 0.2e1 - t2913) * t2347 + t2000 * t2836 - t1961 + (t2313 - 0.1e1 / 0.2e1) * t2901) * t2316;
t1962 = t3045 * t2001;
t2004 = t2034 * t2846;
t2835 = t2241 * t2341;
t2897 = t2034 * t2246;
t2909 = t2001 * t2244;
t2930 = ((t2004 / 0.2e1 - t2909) * t2350 + t2001 * t2835 - t1962 + (t2318 - 0.1e1 / 0.2e1) * t2897) * t2321;
t2017 = t2032 * t2281;
t1921 = t2017 - t1984;
t2929 = t1921 * t2325;
t2018 = t2033 * t2283;
t1922 = t2018 - t1985;
t2928 = t1922 * t2325;
t2019 = t2034 * t2285;
t1923 = t2019 - t1986;
t2927 = t1923 * t2325;
t1927 = -t1984 + t2963;
t2926 = t1927 * t2336;
t1928 = -t1985 + t2962;
t2925 = t1928 * t2339;
t1929 = -t1986 + t2961;
t2924 = t1929 * t2342;
t2923 = (t2056 + t1999) * (t2056 - t1999);
t2922 = (t2057 + t2000) * (t2057 - t2000);
t2921 = (t2058 + t2001) * (t2058 - t2001);
t2920 = (t2033 + t2057) * (-t2033 + t2057);
t2919 = (t2032 + t2056) * (-t2032 + t2056);
t2918 = (t2034 + t2058) * (-t2034 + t2058);
t2916 = t1999 * t2246;
t2915 = t1999 * t2325;
t2914 = t1999 * t2335;
t2912 = t2000 * t2246;
t2911 = t2000 * t2325;
t2910 = t2000 * t2338;
t2908 = t2001 * t2246;
t2907 = t2001 * t2325;
t2906 = t2001 * t2341;
t2904 = t2032 * t2308;
t2903 = t2032 * t2324;
t2902 = t2032 * t2336;
t2900 = t2033 * t2313;
t2899 = t2033 * t2324;
t2898 = t2033 * t2339;
t2896 = t2034 * t2318;
t2895 = t2034 * t2324;
t2894 = t2034 * t2342;
t2053 = t2056 ^ 2;
t2893 = t2053 * t2303;
t2892 = t2053 * t2311;
t2054 = t2057 ^ 2;
t2891 = t2054 * t2303;
t2890 = t2054 * t2316;
t2055 = t2058 ^ 2;
t2889 = t2055 * t2303;
t2888 = t2055 * t2321;
t2887 = t2056 * t2303;
t2886 = t2056 * t2324;
t2885 = t2056 * t2325;
t2884 = t2056 * t2336;
t2883 = t2056 * t2345;
t2882 = t2057 * t2303;
t2881 = t2057 * t2324;
t2880 = t2057 * t2325;
t2879 = t2057 * t2339;
t2878 = t2057 * t2348;
t2877 = t2058 * t2303;
t2876 = t2058 * t2324;
t2875 = t2058 * t2325;
t2874 = t2058 * t2342;
t2873 = t2058 * t2351;
t2637 = pkin(5) * t2798;
t2411 = pkin(1) * t2791 + t2637;
t2786 = t2325 * t2345;
t2665 = pkin(1) * t2786;
t2869 = 0.1e1 / (pkin(6) * t2665 - t2411 * t2969 + t2144) * t2309;
t2636 = pkin(5) * t2797;
t2410 = pkin(1) * t2789 + t2636;
t2784 = t2325 * t2348;
t2664 = pkin(1) * t2784;
t2868 = 0.1e1 / (pkin(6) * t2664 - t2410 * t2967 + t2145) * t2314;
t2635 = pkin(5) * t2796;
t2409 = pkin(1) * t2787 + t2635;
t2782 = t2325 * t2351;
t2663 = pkin(1) * t2782;
t2867 = 0.1e1 / (pkin(6) * t2663 - t2409 * t2965 + t2146) * t2319;
t2845 = (Icges(3,1) + t2935 + 0.2e1 * t2988) * t2324;
t2844 = t3049 * t2324;
t2843 = t3048 * t2324;
t2842 = t3047 * t2324;
t2841 = t2229 * t2325;
t2840 = t2230 * t2325;
t2839 = t2231 * t2325;
t2838 = t2241 * t2324;
t2834 = t2241 * t2344;
t2833 = t2241 * t2347;
t2832 = t2241 * t2350;
t2188 = t2244 * t2335;
t2189 = t2244 * t2338;
t2190 = t2244 * t2341;
t2831 = t2244 * t2345;
t2830 = t2244 * t2348;
t2829 = t2244 * t2351;
t2828 = t2246 * t2324;
t2821 = (t2325 + 0.1e1) * (t2325 - 0.1e1);
t2817 = t2303 * t2378;
t2816 = t2307 * t2381;
t2814 = t2311 * t2378;
t2813 = t2312 * t2381;
t2811 = t2316 * t2378;
t2809 = t2321 * t2378;
t2795 = pkin(2) * t2794;
t2777 = t2336 * t2244;
t2775 = t2336 * t2345;
t2770 = t2339 * t2244;
t2768 = t2339 * t2348;
t2763 = t2342 * t2244;
t2761 = t2342 * t2351;
t1992 = t2381 * t2001;
t2317 = t2350 * t2318;
t2756 = t2381 * t2317;
t2306 = m(3) * t2356;
t2755 = pkin(5) * t3005;
t2023 = t2381 * t2032;
t2475 = -pkin(5) * t1984 + t2023;
t1906 = pkin(2) * t1927 + t2335 * t2475;
t1918 = pkin(6) * t2914 - t2978;
t1915 = t1918 * t2844;
t1924 = t3002 + t2020 / 0.2e1;
t1981 = t2378 * t1999;
t2379 = pkin(5) ^ 2;
t2720 = pkin(1) ^ 2 + t2379;
t2521 = t2381 + t2720;
t2200 = t2378 + t2521;
t2365 = pkin(5) / 0.2e1;
t2207 = t2281 + t2365;
t2208 = t2282 / 0.2e1 + pkin(1);
t2252 = pkin(5) * t2281;
t2258 = pkin(1) * t2282;
t2299 = t2379 + t2381;
t2310 = t2345 * t2311;
t2322 = pkin(2) * t2376;
t2377 = -0.2e1 * pkin(1);
t2584 = t2056 * t2775;
t2437 = pkin(6) * t2217 * t2584;
t2450 = -0.3e1 * t2381 - t2378 - t2720;
t2454 = t2218 * t2584;
t2585 = t2056 * t2798;
t2466 = t2207 * t2585;
t2472 = t2996 * t2775;
t2485 = t2807 * t2957;
t2500 = t2261 * t2303 - t2311;
t2719 = t2381 - t2378;
t2525 = t2252 + t2719;
t2586 = t2056 * t2806;
t2587 = t2310 * t2886;
t2594 = t2032 * t2869;
t2599 = t1999 * t2844;
t2600 = t1999 * t2869;
t2657 = t2311 * t2281;
t2662 = pkin(1) * t2902;
t2668 = t2311 * t2983;
t2676 = -0.2e1 * t2808;
t2723 = -0.2e1 / 0.3e1 * t2381 - t2378 / 0.3e1;
t2725 = t2379 / 0.3e1 + t2381;
t2726 = t2378 / 0.2e1 + t2381;
t2736 = t1987 + t2020;
t1967 = pkin(2) * t2914;
t2745 = t1967 + t2020;
t2528 = t1967 + t2736;
t2748 = t2528 * t2336 + t2026;
t1888 = (((t2311 - 0.4e1 / 0.3e1) * t2816 + ((-0.2e1 / 0.3e1 * t2252 + t2723) * t2311 + 0.4e1 / 0.3e1 * t2252 + t2725) * t2344 + (0.4e1 / 0.3e1 * t2975 - 0.2e1 / 0.3e1 * t2217) * pkin(6) * t2775) * t2056 * t3015 + (t2261 * t3044 - ((t1993 + t2926) * t2345 + (-0.4e1 * t2218 + t2657) * t2586) * t2975 + (t2466 * t3057 - t1981 + t1990 + (-t2311 * t2981 + (-t2311 * t2736 + t2587 * t3056 + t1987 + 0.2e1 * t2020) * t2335) * pkin(2) + (0.2e1 * t2017 - t1984) * t2287) * t2344 + t2336 * (t1906 * t2345 + (-t2322 + (-t2299 + t2814) * t2335) * t2886)) * t2303 + ((-0.3e1 * t2311 + 0.3e1) * t2056 * t2816 - (t2032 * t2668 + 0.2e1 * t2219 * t2883 + ((t3002 + t2745) * t2336 + t2026) * t3010) * t2975 + (((t1999 * t2287 + t1927) * t2281 + t2475) * t2798 + (0.2e1 * (t2252 + t2726) * t2311 - 0.4e1 * t2252 - 0.2e1 * t2258 + t2450) * t2056) * t2344 - t1918 * t2668 + 0.2e1 * t2437 + t1915) * t2325 - t2995 * t3044 + (t1927 * t2345 + (-t2281 - t2376 + t2657) * t2886) * t2658 + 0.2e1 * ((t2311 / 0.2e1 - 0.1e1 / 0.2e1) * t2981 + (t1924 * t2311 - t2662 / 0.2e1 - t1924 + (-pkin(6) * t2310 + t2229 * t2345) * t2886) * t2335) * t2969 - 0.2e1 * t2208 * t2311 * t2485 - t1906 * t2775 + ((t2200 * t2335 + t2322) * t2336 + t2335 * t2323) * t2886) * t2309 * t2110 * t2056 + ((t2056 * t2500 + t2056 - t2915) * t2816 - (t1999 * t2665 - t2748 * t2324 + (t2345 * (-t2282 + pkin(1)) * t2303 + (t2207 * t2676 + t2953) * t2336) * t2056) * t2975 + ((t2637 + t2841) * t1921 + (-(t2258 - t2525) * t2303 + (-pkin(6) * t2218 + t2253 * t2336) * t2324 * t2786 + (-t2303 * t2311 + t2995) * pkin(2) * t2217) * t2056) * t2344 - t2303 * t2437 - t2174 * t2325 * t2485 + t2437 + t1915) * t2600 - ((-t2599 + ((t2290 - 0.2e1 * t2282 + t2377) * t2808 + pkin(5) * t2472) * t2056) * t2308 + ((-t2217 * t2585 - t1918) * t2325 + ((t2229 * t3014 + t2311 * t3064 + t2229) * t2056 - t2411 * t1999) * t2335) * t2344 - t2303 * t2454 + (t2345 * t2026 - t2174 * t2886) * t2325 + ((-t1927 - t2017) * t2336 + t1993) * t2324 + t2454) * pkin(2) * t2594;
t1933 = t2887 + t2915 / 0.2e1 - t2081 / 0.2e1 - t2080 / 0.2e1 - t2092 / 0.2e1;
t1936 = t1999 + t2885;
t1978 = -0.2e1 * t1984;
t2232 = 0.2e1 * t2252;
t2362 = -0.3e1 * t2378;
t2555 = t2345 * t2821;
t2427 = t2336 * t2218 * t2555;
t2434 = -pkin(6) * t2017 + t1981;
t2451 = 0.3e1 * t2378 + t2521;
t2593 = t2032 * t2792;
t2494 = pkin(1) * t2593;
t2588 = t2218 * t2885;
t2507 = 0.2e1 * t2588;
t2520 = t2821 * t3025;
t2724 = t2379 / 0.2e1 + t2381 / 0.2e1;
t2522 = t2378 + t2724;
t2545 = t2307 * t2795;
t2552 = t2381 * t2821;
t2558 = t2311 * t2821;
t2634 = pkin(6) * t2885;
t2659 = pkin(2) * t2821;
t2739 = t1984 / 0.2e1 - t2017 / 0.2e1;
t2710 = pkin(5) * t2364;
t2742 = pkin(6) * t2588 + t1999 * t2710;
t1891 = (((pkin(1) * t2915 + (t3026 + 0.3e1 * t2282 - 0.3e1 * t2631) * t2056) * t2308 * t2794 + (pkin(1) * t2929 + (t2208 * t3025 + t2336 * t2817) * t2056) * t2954) * t2311 + (0.2e1 * t1933 * t2545 + (t2336 * t2507 + t2748) * t2308 * t2552 + ((-(t2017 + t1978) * t2287 + t2434) * t2325 + ((t2252 + t2522) * t3014 + t2232 + 0.4e1 * t2258 + t2451) * t2056) * t2652 + t2336 * (-t1927 * t2281 / 0.2e1 - t2023 / 0.2e1 + t2742) * t2520) * t2345 + (t1933 * t2544 * t3051 + (-t3049 * t2929 + (t2323 + ((t2252 + t2724) * t3014 + t2232 + t2200) * t2336) * t2056) * t2324) * pkin(6) + (-(t2362 + t2815) * t2587 + ((t1978 + t2963) * t2281 + t2023 - t2032 * t2378 - 0.4e1 * t2742) * t2311 + (t2507 + t2528 + t2662) * pkin(6)) * t2344 * t2659) * t2056 * t2570 + (t2345 * t1936 * t2545 + (t2599 + (t2427 + (t2282 + t2290) * t2808) * t2056) * t2815 + (((t2287 + t2364) * t2885 + t2739) * t2798 + (-t2311 + 0.1e1 / 0.2e1) * t2056 * t2218 * t2821) * t2615 - (t2427 * t2957 + (t2634 * t2290 + (-t2634 + t1921) * t3049) * t2324) * pkin(6)) * t2382 * t2600 + ((t2056 * t2555 * t3049 + pkin(1) * t2903) * t2975 + (t2056 * t2525 * t2558 - (-t2978 + (t2056 * t2841 - t1927) * t2335) * pkin(2) * t2798 + t2494 * t2972) * t2344 + (-t2345 * t2494 - ((t1993 - t2926) * t2335 - pkin(2) * t2902) * t2324 + (t2174 * t2324 * t2792 + t2996 * t2344 * t2229 + t2217 * t2472) * t2056) * pkin(6)) * t2594;
t2721 = t2378 + t2381;
t1900 = ((t1936 * t2815 + t2434) * t1999 - t1918 * t2978 + ((-(t2261 * t2815 - t2814) * t2303 + t2815 * t2820 - t2814 + t2252 + t2258 + t2721) * t2056 + ((t2466 + t2739) * t3056 + (t2378 + t2815) * t1999) * t2325 + (-pkin(6) * t2593 + (-(0.2e1 * t2336 * t2625 + t2217) * t2303 + t2219 * t2759) * t2056 + (t2157 * t2914 + (t1918 - t2978) * t2345 + (-0.2e1 * t2207 * t2885 - t2020 - t2745) * t2776) * t2324) * pkin(2)) * t2056) * t2110;
t2008 = t2032 * t2241;
t1912 = t1999 * t2682 + t2008;
t2163 = rSges(2,2) * t2992 - pkin(5) * t3004 - Icges(2,6);
t1954 = t2163 * t1999;
t1957 = t1999 * t2216;
t1963 = t1999 * t2241;
t1996 = t1999 ^ 2;
t2009 = t2032 * t2244;
t2567 = t2179 * t2806;
t2041 = t2056 * t2567;
t2134 = t2163 - t2188;
t2185 = t2241 * t2345;
t2476 = Icges(3,1) + (t2371 + t2372) * m(3) + t3046;
t2074 = -(-t2134 * t2345 + t2185 * t2344 + (-t2408 + t3058) * t2336) * t2324 - t2325 * ((-t2216 * t2336 + (m(3) * t2945 - t2191) * t2345) * pkin(1) + t2476 + t3065);
t2182 = t2336 * t2241;
t2722 = t2372 + t2374;
t2194 = m(3) * t2722 + Icges(3,3);
t2089 = -((-t2777 - m(3) * (rSges(3,2) * t2960 + t2356)) * t2344 + (t2182 - m(3) * (rSges(3,1) * t2960 - t3003)) * t2335 - t2345 * t2194) * t2324 + t2325 * (-Icges(3,5) * t2335 - Icges(3,6) * t2344 + t3034 * m(3) * (rSges(3,3) + t2287));
t2424 = t2244 * t2344 - t2837;
t2131 = -t3045 - t2424;
t2178 = t2275 * t2934 - 0.2e1 * Icges(3,1) + (2 * Icges(3,2));
t2199 = -0.2e1 * m(3) * t2374 - Icges(3,3) - t2936;
t2201 = -t2718 / 0.2e1 + Icges(2,4) / 0.2e1;
t2202 = Icges(3,6) / 0.2e1 - t2716 / 0.2e1;
t2203 = -Icges(3,5) / 0.2e1 + t2717 / 0.2e1;
t2242 = 0.2e1 * t2241;
t2243 = 0.2e1 * t2244;
t2247 = 0.4e1 * t2246;
t2278 = 0.2e1 * t2755;
t2279 = -0.2e1 * t2755;
t2280 = 0.2e1 * t2306;
t2395 = -(rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) - (t2373 + (t2376 + rSges(2,3)) * rSges(2,3) + t2720) * m(2) - (t2371 + t2374 + t2720) * m(3) - Icges(2,1) - Icges(3,2) - Icges(1,3);
t2399 = -(rSges(2,1) + t2353) * (-rSges(2,1) + t2353) * m(2) - Icges(2,1) + Icges(2,3) + (-t2379 - t2275) * m(3) - t2936;
t2705 = rSges(3,1) * t2991;
t2532 = pkin(5) * t2705;
t2414 = t2532 - t2917;
t2681 = 0.4e1 * t2827;
t2421 = t2681 + t2755;
t2029 = t2032 ^ 2;
t1930 = t1996 + t2029;
t2513 = t1930 * t2699;
t2714 = m(3) * t2983;
t2516 = t2029 * t2714;
t2671 = t2056 * t2987;
t2674 = -0.2e1 * t2306;
t2675 = 0.2e1 * t2808;
t2690 = 0.2e1 * t2904;
t2695 = 0.2e1 * t2916;
t2702 = rSges(3,2) * t2991;
t2708 = t1930 * t3006;
t2715 = 0.2e1 * t2984;
t2727 = 0.2e1 * t3045;
t2730 = t1999 * t2140 + t2032 * t2188;
t2733 = -t1996 + t2029;
t2754 = (-(0.2e1 * t2131 * t2775 + t2178 * t2308 + (-t2247 * t2335 + t2279) * t2344 + t2399 + t3076) * t2303 + ((t2134 - t2834) * t2345 + t3077 * t2336) * t2675 - ((t2243 * t2336 + t2280) * t2344 + (-t2242 * t2335 + t2727) * t2336 - 0.2e1 * t2987) * t2345 + t3063 - (t2335 * t3052 + t2278) * t2344 + t2336 * t2715 + t2395 + t3076) * t1900 + t2074 * t1888 + t2089 * t1891 + 0.4e1 * (t2932 + (t1912 * t2344 + t1999 * t3063 + t2730) * t2775 / 0.2e1 + (t2203 * t1999 - t2002) * t2344 + t2202 * t2914 + t2201 * t1999 + ((t3013 + 0.1e1) * t2246 + (-t2945 / 0.2e1 + t2939 / 0.2e1) * t3008) * t2032) * t2887 + (((-t2032 * t2934 * t3034 - t1957) * t1993 + (-t2008 * t2335 + t2009 * t2344 + (t2755 * t2335 + t2418 + t3058) * t1999) * t2056 * t3051) * t2345 + 0.4e1 * (-t2041 - t2916) * t2904 + ((-0.2e1 * (-t2032 * t2421 + t1963) * t2886 - pkin(1) * t2708) * t2336 - t2032 * (t2848 * t3023 + t2009)) * t2344 + (0.2e1 * (t2032 * t2179 + t2335 * t2414 + t1954) * t2886 - pkin(1) * (t1996 * t2357 - t2513)) * t2336 + (t2032 * t2837 + t2695) * t2032) * t2325 - 0.4e1 * t2056 * t2932 + ((-t1999 * t2828 - t2179 * t2884) * t2308 * t3023 + ((-pkin(5) * t2708 - t1996 * t2848) * t2324 + (-pkin(1) * t2702 - t1912 * t2336) * t3055) * t2344 - 0.2e1 * t2730 * t2884 + (pkin(5) * t2513 + t1996 * t2418) * t2324 + (t2335 * t2705 + t1957) * pkin(1) * t3020) * t2345 + (-t1999 * t2567 + t2056 * t3052) * t2690 + ((t2733 * t2838 + (t2056 * t2674 + (t2278 + t2681) * t2903) * t1999) * t2336 + rSges(3,2) * t2516 + (-t2002 - t2414) * t3020) * t2344 + (((t2244 * t2733 + t2532 * t3023) * t2335 + (-t2032 * t2199 + t1954) * t1999) * t2324 + t2671 * t3023) * t2336 + t2516 * t2948 + ((-pkin(5) * t2702 + t1963) * t2335 - t1960 - t2905) * t3055;
t2024 = t2381 * t2033;
t2474 = -pkin(5) * t1985 + t2024;
t1907 = pkin(2) * t1928 + t2338 * t2474;
t1919 = pkin(6) * t2910 - t2977;
t1916 = t1919 * t2843;
t1925 = t3001 + t2021 / 0.2e1;
t1982 = t2378 * t2000;
t2209 = t2283 + t2365;
t2210 = t2284 / 0.2e1 + pkin(1);
t2254 = pkin(5) * t2283;
t2259 = pkin(1) * t2284;
t2315 = t2348 * t2316;
t2579 = t2057 * t2768;
t2436 = pkin(6) * t2221 * t2579;
t2453 = t2222 * t2579;
t2580 = t2057 * t2797;
t2465 = t2209 * t2580;
t2471 = t2996 * t2768;
t2484 = t2804 * t2956;
t2499 = t2262 * t2303 - t2316;
t2524 = t2254 + t2719;
t2581 = t2057 * t2803;
t2582 = t2315 * t2881;
t2592 = t2033 * t2868;
t2597 = t2000 * t2843;
t2598 = t2000 * t2868;
t2619 = pkin(6) * t2768;
t2655 = t2316 * t2283;
t2661 = pkin(1) * t2898;
t2667 = t2316 * t2983;
t2735 = t1988 + t2021;
t1969 = pkin(2) * t2910;
t2744 = t1969 + t2021;
t2527 = t1969 + t2735;
t2747 = t2527 * t2339 + t2027;
t1889 = (((t2316 - 0.4e1 / 0.3e1) * t2813 + ((-0.2e1 / 0.3e1 * t2254 + t2723) * t2316 + 0.4e1 / 0.3e1 * t2254 + t2725) * t2347 + (0.4e1 / 0.3e1 * t2974 - 0.2e1 / 0.3e1 * t2221) * t2619) * t2057 * t3015 + (t2262 * t3043 - ((t1994 + t2925) * t2348 + (-0.4e1 * t2222 + t2655) * t2581) * t2974 + (t2465 * t3057 - t1982 + t1991 + (-t2316 * t2980 + (-t2316 * t2735 + t2582 * t3056 + t1988 + 0.2e1 * t2021) * t2338) * pkin(2) + (0.2e1 * t2018 - t1985) * t2288) * t2347 + t2339 * (t1907 * t2348 + (-t2322 + (-t2299 + t2811) * t2338) * t2881)) * t2303 + ((-0.3e1 * t2316 + 0.3e1) * t2057 * t2813 - (t2033 * t2667 + 0.2e1 * t2223 * t2878 + ((t3001 + t2744) * t2339 + t2027) * t3010) * t2974 + (((t2000 * t2288 + t1928) * t2283 + t2474) * t2797 + (0.2e1 * (t2254 + t2726) * t2316 - 0.4e1 * t2254 - 0.2e1 * t2259 + t2450) * t2057) * t2347 - t1919 * t2667 + 0.2e1 * t2436 + t1916) * t2325 - t2994 * t3043 + (t1928 * t2348 + (-t2283 - t2376 + t2655) * t2881) * t2656 + 0.2e1 * ((t2316 / 0.2e1 - 0.1e1 / 0.2e1) * t2980 + (t1925 * t2316 - t2661 / 0.2e1 - t1925 + (-pkin(6) * t2315 + t2230 * t2348) * t2881) * t2338) * t2967 - 0.2e1 * t2210 * t2316 * t2484 - t1907 * t2768 + ((t2200 * t2338 + t2322) * t2339 + t2338 * t2323) * t2881) * t2314 * t2111 * t2057 + ((t2057 * t2499 + t2057 - t2911) * t2813 - (t2000 * t2664 - t2747 * t2324 + (t2348 * (-t2284 + pkin(1)) * t2303 + (t2209 * t2676 + t2952) * t2339) * t2057) * t2974 + ((t2636 + t2840) * t1922 + (-(t2259 - t2524) * t2303 + (-pkin(6) * t2222 + t2255 * t2339) * t2324 * t2784 + (-t2303 * t2316 + t2994) * pkin(2) * t2221) * t2057) * t2347 - t2303 * t2436 - t2175 * t2325 * t2484 + t2436 + t1916) * t2598 - ((-t2597 + ((t2291 - 0.2e1 * t2284 + t2377) * t2808 + pkin(5) * t2471) * t2057) * t2313 + ((-t2221 * t2580 - t1919) * t2325 + ((t2230 * t3014 + t2316 * t3064 + t2230) * t2057 - t2410 * t2000) * t2338) * t2347 - t2303 * t2453 + (t2348 * t2027 - t2175 * t2881) * t2325 + ((-t1928 - t2018) * t2339 + t1994) * t2324 + t2453) * pkin(2) * t2592;
t1934 = t2882 + t2911 / 0.2e1 - t2083 / 0.2e1 - t2082 / 0.2e1 - t2093 / 0.2e1;
t1937 = t2000 + t2880;
t1979 = -0.2e1 * t1985;
t2233 = 0.2e1 * t2254;
t2554 = t2348 * t2821;
t2426 = t2339 * t2222 * t2554;
t2433 = -pkin(6) * t2018 + t1982;
t2591 = t2033 * t2790;
t2493 = pkin(1) * t2591;
t2583 = t2222 * t2880;
t2506 = 0.2e1 * t2583;
t2543 = t2312 * t2795;
t2557 = t2316 * t2821;
t2633 = pkin(6) * t2880;
t2738 = t1985 / 0.2e1 - t2018 / 0.2e1;
t2741 = pkin(6) * t2583 + t2000 * t2710;
t1892 = (((pkin(1) * t2911 + (t3026 + 0.3e1 * t2284 - 0.3e1 * t2630) * t2057) * t2313 * t2794 + (pkin(1) * t2928 + (t2210 * t3025 + t2339 * t2817) * t2057) * t2954) * t2316 + (0.2e1 * t1934 * t2543 + (t2339 * t2506 + t2747) * t2313 * t2552 + ((-(t2018 + t1979) * t2288 + t2433) * t2325 + ((t2254 + t2522) * t3014 + t2233 + 0.4e1 * t2259 + t2451) * t2057) * t2651 + (-t1928 * t2283 / 0.2e1 - t2024 / 0.2e1 + t2741) * t2339 * t2520) * t2348 + (t1934 * t2542 * t3051 + (-t3048 * t2928 + (t2323 + ((t2254 + t2724) * t3014 + t2233 + t2200) * t2339) * t2057) * t2324) * pkin(6) + (-(t2362 + t2812) * t2582 + ((t1979 + t2962) * t2283 + t2024 - t2033 * t2378 - 0.4e1 * t2741) * t2316 + (t2506 + t2527 + t2661) * pkin(6)) * t2347 * t2659) * t2057 * t2569 + (t2348 * t1937 * t2543 + (t2597 + (t2426 + (t2284 + t2291) * t2808) * t2057) * t2812 + (((t2288 + t2364) * t2880 + t2738) * t2797 + (-t2316 + 0.1e1 / 0.2e1) * t2057 * t2222 * t2821) * t2613 - (t2426 * t2956 + (t2633 * t2291 + (-t2633 + t1922) * t3048) * t2324) * pkin(6)) * t2382 * t2598 + ((t2057 * t2554 * t3048 + pkin(1) * t2899) * t2974 + (t2057 * t2524 * t2557 - (-t2977 + (t2057 * t2840 - t1928) * t2338) * pkin(2) * t2797 + t2493 * t2971) * t2347 + (-t2348 * t2493 - ((t1994 - t2925) * t2338 - pkin(2) * t2898) * t2324 + (t2175 * t2324 * t2790 + t2996 * t2347 * t2230 + t2221 * t2471) * t2057) * pkin(6)) * t2592;
t1901 = ((t1937 * t2812 + t2433) * t2000 - t1919 * t2977 + ((-(t2262 * t2812 - t2811) * t2303 + t2812 * t2819 - t2811 + t2254 + t2259 + t2721) * t2057 + ((t2465 + t2738) * t3056 + (t2378 + t2812) * t2000) * t2325 + (-pkin(6) * t2591 + (-(0.2e1 * t2347 * t2619 + t2221) * t2303 + t2223 * t2758) * t2057 + (t2158 * t2910 + (t1919 - t2977) * t2348 + (-0.2e1 * t2209 * t2880 - t2021 - t2744) * t2769) * t2324) * pkin(2)) * t2057) * t2111;
t2010 = t2033 * t2241;
t1913 = t2000 * t2680 + t2010;
t1955 = t2163 * t2000;
t1958 = t2000 * t2216;
t1964 = t2000 * t2241;
t1997 = t2000 ^ 2;
t2011 = t2033 * t2244;
t2566 = t2179 * t2803;
t2042 = t2057 * t2566;
t2135 = t2163 - t2189;
t2186 = t2241 * t2348;
t2075 = -(-t2135 * t2348 + t2186 * t2347 + (-t2407 + t3059) * t2339) * t2324 - t2325 * ((-t2216 * t2339 + (m(3) * t2944 - t2192) * t2348) * pkin(1) + t2476 + t3066);
t2183 = t2339 * t2241;
t2090 = -((-t2770 - m(3) * (rSges(3,2) * t2959 + t2356)) * t2347 + (t2183 - m(3) * (rSges(3,1) * t2959 - t3003)) * t2338 - t2348 * t2194) * t2324 + t2325 * (-Icges(3,5) * t2338 - Icges(3,6) * t2347 + t3035 * m(3) * (rSges(3,3) + t2288));
t2423 = t2244 * t2347 - t2836;
t2132 = -t3045 - t2423;
t2704 = rSges(3,1) * t2990;
t2531 = pkin(5) * t2704;
t2413 = t2531 - t2913;
t2679 = 0.4e1 * t2826;
t2420 = t2679 + t2755;
t2030 = t2033 ^ 2;
t1931 = t1997 + t2030;
t2512 = t1931 * t2698;
t2515 = t2030 * t2714;
t2670 = t2057 * t2986;
t2689 = 0.2e1 * t2900;
t2693 = 0.2e1 * t2912;
t2701 = rSges(3,2) * t2990;
t2707 = t1931 * t3006;
t2729 = t2000 * t2140 + t2033 * t2189;
t2732 = -t1997 + t2030;
t2753 = (-(0.2e1 * t2132 * t2768 + t2178 * t2313 + (-t2247 * t2338 + t2279) * t2347 + t2399 + t3075) * t2303 + ((t2135 - t2833) * t2348 + t3078 * t2339) * t2675 - ((t2243 * t2339 + t2280) * t2347 + (-t2242 * t2338 + t2727) * t2339 - 0.2e1 * t2986) * t2348 + t3062 - (t2338 * t3052 + t2278) * t2347 + t2339 * t2715 + t2395 + t3075) * t1901 + t2075 * t1889 + t2090 * t1892 + 0.4e1 * (t2931 + (t1913 * t2347 + t2000 * t3062 + t2729) * t2768 / 0.2e1 + (t2203 * t2000 - t2003) * t2347 + t2202 * t2910 + t2201 * t2000 + ((t3012 + 0.1e1) * t2246 + (-t2944 / 0.2e1 + t2938 / 0.2e1) * t3008) * t2033) * t2882 + (((-t2033 * t2934 * t3035 - t1958) * t1994 + (-t2010 * t2338 + t2011 * t2347 + (t2755 * t2338 + t2418 + t3059) * t2000) * t2057 * t3051) * t2348 + 0.4e1 * (-t2042 - t2912) * t2900 + ((-0.2e1 * (-t2033 * t2420 + t1964) * t2881 - pkin(1) * t2707) * t2339 - t2033 * (t2847 * t3022 + t2011)) * t2347 + (0.2e1 * (t2033 * t2179 + t2338 * t2413 + t1955) * t2881 - pkin(1) * (t1997 * t2357 - t2512)) * t2339 + (t2033 * t2836 + t2693) * t2033) * t2325 - 0.4e1 * t2057 * t2931 + ((-t2000 * t2828 - t2179 * t2879) * t2313 * t3022 + ((-pkin(5) * t2707 - t1997 * t2847) * t2324 + (-pkin(1) * t2701 - t1913 * t2339) * t3054) * t2347 - 0.2e1 * t2729 * t2879 + (pkin(5) * t2512 + t1997 * t2418) * t2324 + (t2338 * t2704 + t1958) * pkin(1) * t3019) * t2348 + (-t2000 * t2566 + t2057 * t3052) * t2689 + ((t2732 * t2838 + (t2057 * t2674 + (t2278 + t2679) * t2899) * t2000) * t2339 + rSges(3,2) * t2515 + (-t2003 - t2413) * t3019) * t2347 + (((t2244 * t2732 + t2531 * t3022) * t2338 + (-t2033 * t2199 + t1955) * t2000) * t2324 + t2670 * t3022) * t2339 + t2515 * t2947 + ((-pkin(5) * t2701 + t1964) * t2338 - t1961 - t2901) * t3054;
t2025 = t2381 * t2034;
t2473 = -pkin(5) * t1986 + t2025;
t1908 = pkin(2) * t1929 + t2341 * t2473;
t1920 = pkin(6) * t2906 - t2976;
t1917 = t1920 * t2842;
t1926 = t3000 + t2022 / 0.2e1;
t1983 = t2378 * t2001;
t2211 = t2285 + t2365;
t2212 = t2286 / 0.2e1 + pkin(1);
t2256 = pkin(5) * t2285;
t2260 = pkin(1) * t2286;
t2320 = t2351 * t2321;
t2574 = t2058 * t2761;
t2435 = pkin(6) * t2225 * t2574;
t2452 = t2226 * t2574;
t2575 = t2058 * t2796;
t2464 = t2211 * t2575;
t2470 = t2996 * t2761;
t2483 = t2801 * t2955;
t2498 = t2263 * t2303 - t2321;
t2523 = t2256 + t2719;
t2576 = t2058 * t2800;
t2577 = t2320 * t2876;
t2590 = t2034 * t2867;
t2595 = t2001 * t2842;
t2596 = t2001 * t2867;
t2653 = t2321 * t2285;
t2660 = pkin(1) * t2894;
t2666 = t2321 * t2983;
t2734 = t1989 + t2022;
t1971 = pkin(2) * t2906;
t2743 = t1971 + t2022;
t2526 = t1971 + t2734;
t2746 = t2526 * t2342 + t2028;
t1890 = (((t2321 - 0.4e1 / 0.3e1) * t2756 + ((-0.2e1 / 0.3e1 * t2256 + t2723) * t2321 + 0.4e1 / 0.3e1 * t2256 + t2725) * t2350 + (0.4e1 / 0.3e1 * t2973 - 0.2e1 / 0.3e1 * t2225) * pkin(6) * t2761) * t2058 * t3015 + (t2001 * t2263 * t2756 - ((t1995 + t2924) * t2351 + (-0.4e1 * t2226 + t2653) * t2576) * t2973 + (t2464 * t3057 - t1983 + t1992 + (-t2321 * t2979 + (-t2321 * t2734 + t2577 * t3056 + t1989 + 0.2e1 * t2022) * t2341) * pkin(2) + (0.2e1 * t2019 - t1986) * t2289) * t2350 + t2342 * (t1908 * t2351 + (-t2322 + (-t2299 + t2809) * t2341) * t2876)) * t2303 + ((-0.3e1 * t2321 + 0.3e1) * t2058 * t2756 - (t2034 * t2666 + 0.2e1 * t2227 * t2873 + ((t3000 + t2743) * t2342 + t2028) * t3010) * t2973 + (((t2001 * t2289 + t1929) * t2285 + t2473) * t2796 + (0.2e1 * (t2256 + t2726) * t2321 - 0.4e1 * t2256 - 0.2e1 * t2260 + t2450) * t2058) * t2350 - t1920 * t2666 + 0.2e1 * t2435 + t1917) * t2325 - t2993 * t1992 * t2317 + (t1929 * t2351 + (-t2285 - t2376 + t2653) * t2876) * t2654 + 0.2e1 * ((t2321 / 0.2e1 - 0.1e1 / 0.2e1) * t2979 + (t1926 * t2321 - t2660 / 0.2e1 - t1926 + (-pkin(6) * t2320 + t2231 * t2351) * t2876) * t2341) * t2965 - 0.2e1 * t2212 * t2321 * t2483 - t1908 * t2761 + ((t2200 * t2341 + t2322) * t2342 + t2341 * t2323) * t2876) * t2319 * t2112 * t2058 + ((t2058 * t2498 + t2058 - t2907) * t2756 - (t2001 * t2663 - t2746 * t2324 + (t2351 * (-t2286 + pkin(1)) * t2303 + (t2211 * t2676 + t2951) * t2342) * t2058) * t2973 + ((t2635 + t2839) * t1923 + (-(t2260 - t2523) * t2303 + (-pkin(6) * t2226 + t2257 * t2342) * t2324 * t2782 + (-t2303 * t2321 + t2993) * pkin(2) * t2225) * t2058) * t2350 - t2303 * t2435 - t2176 * t2325 * t2483 + t2435 + t1917) * t2596 - ((-t2595 + ((t2292 - 0.2e1 * t2286 + t2377) * t2808 + pkin(5) * t2470) * t2058) * t2318 + ((-t2225 * t2575 - t1920) * t2325 + ((t2231 * t3014 + t2321 * t3064 + t2231) * t2058 - t2409 * t2001) * t2341) * t2350 - t2303 * t2452 + (t2028 * t2351 - t2176 * t2876) * t2325 + ((-t1929 - t2019) * t2342 + t1995) * t2324 + t2452) * pkin(2) * t2590;
t1935 = t2877 + t2907 / 0.2e1 - t2085 / 0.2e1 - t2084 / 0.2e1 - t2094 / 0.2e1;
t1938 = t2001 + t2875;
t1980 = -0.2e1 * t1986;
t2234 = 0.2e1 * t2256;
t2553 = t2351 * t2821;
t2425 = t2342 * t2226 * t2553;
t2432 = -pkin(6) * t2019 + t1983;
t2589 = t2034 * t2788;
t2492 = pkin(1) * t2589;
t2578 = t2226 * t2875;
t2505 = 0.2e1 * t2578;
t2541 = t2317 * t2795;
t2556 = t2321 * t2821;
t2632 = pkin(6) * t2875;
t2737 = t1986 / 0.2e1 - t2019 / 0.2e1;
t2740 = pkin(6) * t2578 + t2001 * t2710;
t1893 = (((pkin(1) * t2907 + (t3026 + 0.3e1 * t2286 - 0.3e1 * t2629) * t2058) * t2318 * t2794 + (pkin(1) * t2927 + (t2212 * t3025 + t2342 * t2817) * t2058) * t2954) * t2321 + (0.2e1 * t1935 * t2541 + (t2342 * t2505 + t2746) * t2318 * t2552 + ((-(t2019 + t1980) * t2289 + t2432) * t2325 + ((t2256 + t2522) * t3014 + t2234 + 0.4e1 * t2260 + t2451) * t2058) * t2650 + (-t1929 * t2285 / 0.2e1 - t2025 / 0.2e1 + t2740) * t2342 * t2520) * t2351 + (t1935 * t2540 * t3051 + (-t3047 * t2927 + (t2323 + ((t2256 + t2724) * t3014 + t2234 + t2200) * t2342) * t2058) * t2324) * pkin(6) + (-(t2362 + t2810) * t2577 + ((t1980 + t2961) * t2285 + t2025 - t2034 * t2378 - 0.4e1 * t2740) * t2321 + (t2505 + t2526 + t2660) * pkin(6)) * t2350 * t2659) * t2058 * t2568 + (t2351 * t1938 * t2541 + (t2595 + (t2425 + (t2286 + t2292) * t2808) * t2058) * t2810 + (((t2289 + t2364) * t2875 + t2737) * t2796 + (-t2321 + 0.1e1 / 0.2e1) * t2058 * t2226 * t2821) * t2611 - (t2425 * t2955 + (t2632 * t2292 + (-t2632 + t1923) * t3047) * t2324) * pkin(6)) * t2382 * t2596 + ((t2058 * t2553 * t3047 + pkin(1) * t2895) * t2973 + (t2058 * t2523 * t2556 - (-t2976 + (t2058 * t2839 - t1929) * t2341) * pkin(2) * t2796 + t2492 * t2970) * t2350 + (-t2351 * t2492 - ((t1995 - t2924) * t2341 - pkin(2) * t2894) * t2324 + (t2176 * t2324 * t2788 + t2996 * t2350 * t2231 + t2225 * t2470) * t2058) * pkin(6)) * t2590;
t1902 = ((t1938 * t2810 + t2432) * t2001 - t1920 * t2976 + ((-(t2263 * t2810 - t2809) * t2303 + t2810 * t2818 - t2809 + t2256 + t2260 + t2721) * t2058 + ((t2464 + t2737) * t3056 + (t2378 + t2810) * t2001) * t2325 + (-pkin(6) * t2589 + (-(0.2e1 * t2342 * t2622 + t2225) * t2303 + t2227 * t2757) * t2058 + (t2159 * t2906 + (t1920 - t2976) * t2351 + (-0.2e1 * t2211 * t2875 - t2022 - t2743) * t2762) * t2324) * pkin(2)) * t2058) * t2112;
t2012 = t2034 * t2241;
t1914 = t2001 * t2678 + t2012;
t1956 = t2163 * t2001;
t1959 = t2001 * t2216;
t1965 = t2001 * t2241;
t1998 = t2001 ^ 2;
t2013 = t2034 * t2244;
t2565 = t2179 * t2800;
t2043 = t2058 * t2565;
t2136 = t2163 - t2190;
t2187 = t2241 * t2351;
t2076 = -(-t2136 * t2351 + t2187 * t2350 + (-t2406 + t3060) * t2342) * t2324 - t2325 * ((-t2216 * t2342 + (m(3) * t2943 - t2193) * t2351) * pkin(1) + t2476 + t3067);
t2184 = t2342 * t2241;
t2091 = -((-t2763 - m(3) * (rSges(3,2) * t2958 + t2356)) * t2350 + (t2184 - m(3) * (rSges(3,1) * t2958 - t3003)) * t2341 - t2351 * t2194) * t2324 + t2325 * (-Icges(3,5) * t2341 - Icges(3,6) * t2350 + t3036 * m(3) * (rSges(3,3) + t2289));
t2422 = t2244 * t2350 - t2835;
t2133 = -t3045 - t2422;
t2703 = rSges(3,1) * t2989;
t2530 = pkin(5) * t2703;
t2412 = t2530 - t2909;
t2677 = 0.4e1 * t2825;
t2419 = t2677 + t2755;
t2031 = t2034 ^ 2;
t1932 = t1998 + t2031;
t2511 = t1932 * t2697;
t2514 = t2031 * t2714;
t2669 = t2058 * t2985;
t2688 = 0.2e1 * t2896;
t2691 = 0.2e1 * t2908;
t2700 = rSges(3,2) * t2989;
t2706 = t1932 * t3006;
t2728 = t2001 * t2140 + t2034 * t2190;
t2731 = -t1998 + t2031;
t2752 = (-(0.2e1 * t2133 * t2761 + t2178 * t2318 + (-t2247 * t2341 + t2279) * t2350 + t2399 + t3074) * t2303 + ((t2136 - t2832) * t2351 + t3079 * t2342) * t2675 - ((t2243 * t2342 + t2280) * t2350 + (-t2242 * t2341 + t2727) * t2342 - 0.2e1 * t2985) * t2351 + t3061 - (t2341 * t3052 + t2278) * t2350 + t2342 * t2715 + t2395 + t3074) * t1902 + t2076 * t1890 + t2091 * t1893 + 0.4e1 * (t2930 + (t1914 * t2350 + t2001 * t3061 + t2728) * t2761 / 0.2e1 + (t2203 * t2001 - t2004) * t2350 + t2202 * t2906 + t2201 * t2001 + ((t3011 + 0.1e1) * t2246 + (-t2943 / 0.2e1 + t2937 / 0.2e1) * t3008) * t2034) * t2877 + (((-t2034 * t2934 * t3036 - t1959) * t1995 + (-t2012 * t2341 + t2013 * t2350 + (t2755 * t2341 + t2418 + t3060) * t2001) * t2058 * t3051) * t2351 + 0.4e1 * (-t2043 - t2908) * t2896 + ((-0.2e1 * (-t2034 * t2419 + t1965) * t2876 - pkin(1) * t2706) * t2342 - t2034 * (t2846 * t3021 + t2013)) * t2350 + (0.2e1 * (t2034 * t2179 + t2341 * t2412 + t1956) * t2876 - pkin(1) * (t1998 * t2357 - t2511)) * t2342 + (t2034 * t2835 + t2691) * t2034) * t2325 - 0.4e1 * t2058 * t2930 + ((-t2001 * t2828 - t2179 * t2874) * t2318 * t3021 + ((-pkin(5) * t2706 - t1998 * t2846) * t2324 + (-pkin(1) * t2700 - t1914 * t2342) * t3053) * t2350 - 0.2e1 * t2728 * t2874 + (pkin(5) * t2511 + t1998 * t2418) * t2324 + (t2341 * t2703 + t1959) * pkin(1) * t3018) * t2351 + (-t2001 * t2565 + t2058 * t3052) * t2688 + ((t2731 * t2838 + (t2058 * t2674 + (t2278 + t2677) * t2895) * t2001) * t2342 + rSges(3,2) * t2514 + (-t2004 - t2412) * t3018) * t2350 + (((t2244 * t2731 + t2530 * t3021) * t2341 + (-t2034 * t2199 + t1956) * t2001) * t2324 + t2669 * t3021) * t2342 + t2514 * t2946 + ((-pkin(5) * t2700 + t1965) * t2341 - t1962 - t2897) * t3053;
t2137 = t2188 + t2834;
t2354 = -Icges(3,2) / 0.2e1;
t2177 = t2988 + t2354 + Icges(3,3) / 0.2e1 + Icges(3,1) / 0.2e1;
t2305 = m(3) * t3003;
t2446 = t2586 * t3023;
t2603 = t2246 * t2923;
t2686 = 0.2e1 * t2838;
t2687 = 0.2e1 * t2179 * t2325;
t2696 = -0.2e1 * t2916;
t2751 = t1888 * t2137 - t1891 * t2194 + t1900 * t2089 + (0.2e1 * (t2179 * t2586 + t2695) * t2885 + t2179 * t2446 - 0.2e1 * t2603 - t2500 * t2053 * t3052) * t2308 + (-(t2241 * t2775 - t2304) * t2893 + (((t2182 + t2305) * t2345 - t2304 - (t2336 * t2421 + t2831) * t2808) * t2056 + (t2335 * t2687 + (t2780 * t3017 - 0.2e1 * t2831) * t2324) * t1999) * t2056 + (-t2824 * t2893 + (t2892 - t2923) * t2335) * t2179) * t2344 + ((-t2244 * t2775 - t2755) * t2335 + t2261 * t2246) * t2893 + (t2696 + ((-t2304 * t2336 + t2185) * t2335 - t2336 * t2179) * t2886) * t2885 + t2056 * ((t1999 * t2686 + t2056 * (t2306 + t2777)) * t2345 + t2056 * t2755) * t2335 - t2246 * t2892 + t2177 * t2446 + t2603;
t2138 = t2189 + t2833;
t2445 = t2581 * t3022;
t2602 = t2246 * t2922;
t2694 = -0.2e1 * t2912;
t2750 = t1889 * t2138 - t1892 * t2194 + t1901 * t2090 + (0.2e1 * (t2179 * t2581 + t2693) * t2880 + t2179 * t2445 - 0.2e1 * t2602 - t2499 * t2054 * t3052) * t2313 + (-(t2241 * t2768 - t2304) * t2891 + (((t2183 + t2305) * t2348 - t2304 - (t2339 * t2420 + t2830) * t2808) * t2057 + (t2338 * t2687 + (t2773 * t3017 - 0.2e1 * t2830) * t2324) * t2000) * t2057 + (-t2823 * t2891 + (t2890 - t2922) * t2338) * t2179) * t2347 + ((-t2244 * t2768 - t2755) * t2338 + t2262 * t2246) * t2891 + (t2694 + ((-t2304 * t2339 + t2186) * t2338 - t2339 * t2179) * t2881) * t2880 + t2057 * ((t2000 * t2686 + t2057 * (t2306 + t2770)) * t2348 + t2057 * t2755) * t2338 - t2246 * t2890 + t2177 * t2445 + t2602;
t2139 = t2190 + t2832;
t2444 = t2576 * t3021;
t2601 = t2246 * t2921;
t2692 = -0.2e1 * t2908;
t2749 = t1890 * t2139 - t1893 * t2194 + t1902 * t2091 + (0.2e1 * (t2179 * t2576 + t2691) * t2875 + t2179 * t2444 - 0.2e1 * t2601 - t2498 * t2055 * t3052) * t2318 + (-(t2241 * t2761 - t2304) * t2889 + (((t2184 + t2305) * t2351 - t2304 - (t2342 * t2419 + t2829) * t2808) * t2058 + (t2341 * t2687 + (t2766 * t3017 - 0.2e1 * t2829) * t2324) * t2001) * t2058 + (-t2822 * t2889 + (t2888 - t2921) * t2341) * t2179) * t2350 + ((-t2244 * t2761 - t2755) * t2341 + t2263 * t2246) * t2889 + (t2692 + ((-t2304 * t2342 + t2187) * t2341 - t2342 * t2179) * t2876) * t2875 + t2058 * ((t2001 * t2686 + t2058 * (t2306 + t2763)) * t2351 + t2058 * t2755) * t2341 - t2246 * t2888 + t2177 * t2444 + t2601;
t2529 = -t2306 / 0.4e1;
t2366 = 0.2e1 * qJ(3,3);
t2431 = -(0.2e1 * t2371 + t2722) * m(3) / 0.2e1 + t2354 - Icges(3,1) / 0.2e1 - t3046;
t2510 = t2309 * (t2074 * t1900 + (cos(t2366) * t2999 + sin(t2366) * t2998 + t2431) * t1888 + t2137 * t1891 + (t2424 * t2032 * t3051 + (t2996 * t2336 * t2394 + t3077 * t2808 + t2984) * t2056) * t2883 + t2131 * t2893 - ((-t2241 * t2586 + 0.2e1 * t2002) * t2344 + t2134 * t2586 + (0.4e1 * t2308 - 0.2e1) * t2905) * t2885 + (-t2041 + t2696) * t2690 + (-0.4e1 * (t2056 * t2529 - t2807 * t2905) * t2884 - t2002 * t3023 + t2244 * t2919) * t2344 + (-t2032 * t2845 - t2671) * t2884 - t2837 * t2919 + t2032 * t2695 + (-0.2e1 * t2131 * t2558 + t3045) * t2053);
t2368 = 0.2e1 * qJ(3,1);
t2509 = t2319 * (t2076 * t1902 + (cos(t2368) * t2999 + sin(t2368) * t2998 + t2431) * t1890 + t2139 * t1893 + (t2422 * t2034 * t3051 + (t2996 * t2342 * t2392 + t3079 * t2808 + t2984) * t2058) * t2873 + t2133 * t2889 - ((-t2241 * t2576 + 0.2e1 * t2004) * t2350 + t2136 * t2576 + (0.4e1 * t2318 - 0.2e1) * t2897) * t2875 + (-t2043 + t2692) * t2688 + (-0.4e1 * (t2058 * t2529 - t2801 * t2897) * t2874 - t2004 * t3021 + t2244 * t2918) * t2350 + (-t2034 * t2845 - t2669) * t2874 - t2835 * t2918 + t2034 * t2691 + (-0.2e1 * t2133 * t2556 + t3045) * t2055);
t2367 = 0.2e1 * qJ(3,2);
t2508 = (t2075 * t1901 + (cos(t2367) * t2999 + sin(t2367) * t2998 + t2431) * t1889 + t2138 * t1892 + (t2423 * t2033 * t3051 + (t2996 * t2339 * t2393 + t3078 * t2808 + t2984) * t2057) * t2878 + t2132 * t2891 - ((-t2241 * t2581 + 0.2e1 * t2003) * t2347 + t2135 * t2581 + (0.4e1 * t2313 - 0.2e1) * t2901) * t2880 + (-t2042 + t2694) * t2689 + (-0.4e1 * (t2057 * t2529 - t2804 * t2901) * t2879 - t2003 * t3022 + t2244 * t2920) * t2347 + (-t2033 * t2845 - t2670) * t2879 - t2836 * t2920 + t2033 * t2693 + (-0.2e1 * t2132 * t2557 + t3045) * t2054) * t2314;
t2449 = t2751 * t2872;
t2448 = t2750 * t2871;
t2447 = t2749 * t2870;
t1 = [(t2064 * t2509 + t2100 * t2752) * t2112 + (t2063 * t2508 + t2098 * t2753) * t2111 + (t2062 * t2510 + t2096 * t2754) * t2110 + (t2066 * t2449 + t2068 * t2448 + t2070 * t2447) * t2382; (t2061 * t2509 + t2099 * t2752) * t2112 + (t2060 * t2508 + t2097 * t2753) * t2111 + (t2059 * t2510 + t2095 * t2754) * t2110 + (t2065 * t2449 + t2067 * t2448 + t2069 * t2447) * t2382; (t2079 * t2509 + t2106 * t2752) * t2112 + (t2078 * t2508 + t2105 * t2753) * t2111 + (t2077 * t2510 + t2104 * t2754) * t2110 + (-t2571 * t2749 - t2572 * t2750 - t2573 * t2751) * t2793;];
taucX  = t1;
