% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P3RRRRR10V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3*3x18]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 22:49
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR10V1G2A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G2A0_inertia_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G2A0_inertia_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G2A0_inertia_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G2A0_inertia_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G2A0_inertia_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 22:29:46
% EndTime: 2020-08-06 22:30:52
% DurationCPUTime: 72.32s
% Computational Cost: add. (63000->1264), mult. (187218->2436), div. (4860->13), fcn. (159318->26), ass. (0->858)
t1919 = cos(pkin(3));
t1905 = t1919 ^ 2;
t2420 = t1905 - 0.1e1;
t1924 = sin(qJ(2,3));
t1892 = t1924 * pkin(6);
t2441 = t1892 + pkin(1);
t1927 = sin(qJ(2,2));
t1893 = t1927 * pkin(6);
t2440 = t1893 + pkin(1);
t1930 = sin(qJ(2,1));
t1894 = t1930 * pkin(6);
t2439 = t1894 + pkin(1);
t1932 = cos(qJ(3,3));
t2327 = t1924 * t1932;
t1933 = cos(qJ(2,3));
t2400 = pkin(6) * t1933;
t1848 = -pkin(2) * t2327 + t2400;
t1925 = sin(qJ(1,3));
t1934 = cos(qJ(1,3));
t2336 = t1919 * t1934;
t2313 = t1932 * t1933;
t2427 = -pkin(2) * t2313 - t1892;
t1812 = t1848 * t2336 + t1925 * t2427;
t1920 = legFrame(3,2);
t1886 = sin(t1920);
t1889 = cos(t1920);
t1918 = sin(pkin(3));
t1923 = sin(qJ(3,3));
t2328 = t1923 * t1934;
t2281 = pkin(2) * t2328;
t2343 = t1919 * t1923;
t2284 = pkin(2) * t2343;
t1782 = (t1848 * t1889 - t1886 * t2281) * t1918 - t1812 * t1886 - t1889 * t2284;
t1783 = (t1848 * t1886 + t1889 * t2281) * t1918 + t1812 * t1889 - t1886 * t2284;
t2438 = t1782 * t1783;
t1935 = cos(qJ(3,2));
t2321 = t1927 * t1935;
t1936 = cos(qJ(2,2));
t2399 = pkin(6) * t1936;
t1849 = -pkin(2) * t2321 + t2399;
t1928 = sin(qJ(1,2));
t1937 = cos(qJ(1,2));
t2334 = t1919 * t1937;
t2312 = t1935 * t1936;
t2428 = -pkin(2) * t2312 - t1893;
t1813 = t1849 * t2334 + t1928 * t2428;
t1921 = legFrame(2,2);
t1887 = sin(t1921);
t1890 = cos(t1921);
t1926 = sin(qJ(3,2));
t2322 = t1926 * t1937;
t2280 = pkin(2) * t2322;
t2341 = t1919 * t1926;
t2283 = pkin(2) * t2341;
t1784 = (t1849 * t1890 - t1887 * t2280) * t1918 - t1813 * t1887 - t1890 * t2283;
t1785 = (t1849 * t1887 + t1890 * t2280) * t1918 + t1813 * t1890 - t1887 * t2283;
t2437 = t1784 * t1785;
t1938 = cos(qJ(3,1));
t2315 = t1930 * t1938;
t1939 = cos(qJ(2,1));
t2398 = pkin(6) * t1939;
t1850 = -pkin(2) * t2315 + t2398;
t1931 = sin(qJ(1,1));
t1940 = cos(qJ(1,1));
t2332 = t1919 * t1940;
t2311 = t1938 * t1939;
t2429 = -pkin(2) * t2311 - t1894;
t1814 = t1850 * t2332 + t1931 * t2429;
t1922 = legFrame(1,2);
t1888 = sin(t1922);
t1891 = cos(t1922);
t1929 = sin(qJ(3,1));
t2316 = t1929 * t1940;
t2279 = pkin(2) * t2316;
t2339 = t1919 * t1929;
t2282 = pkin(2) * t2339;
t1786 = (t1850 * t1891 - t1888 * t2279) * t1918 - t1814 * t1888 - t1891 * t2282;
t1787 = (t1850 * t1888 + t1891 * t2279) * t1918 + t1814 * t1891 - t1888 * t2282;
t2436 = t1786 * t1787;
t2411 = pkin(2) * t1923;
t1880 = pkin(1) * t2411;
t2369 = t1848 * t1919;
t1806 = pkin(1) * t2369 + (t2427 * pkin(5) + t1880) * t1918;
t1797 = 0.1e1 / t1806;
t2386 = t1797 * t1919;
t2410 = pkin(2) * t1926;
t1881 = pkin(1) * t2410;
t2368 = t1849 * t1919;
t1807 = pkin(1) * t2368 + (t2428 * pkin(5) + t1881) * t1918;
t1799 = 0.1e1 / t1807;
t2380 = t1799 * t1919;
t2409 = pkin(2) * t1929;
t1882 = pkin(1) * t2409;
t2367 = t1850 * t1919;
t1808 = pkin(1) * t2367 + (t2429 * pkin(5) + t1882) * t1918;
t1801 = 0.1e1 / t1808;
t2374 = t1801 * t1919;
t1910 = 0.1e1 / t1932;
t2435 = t1910 * t1918;
t1913 = 0.1e1 / t1935;
t2434 = t1913 * t1918;
t1916 = 0.1e1 / t1938;
t2433 = t1916 * t1918;
t1864 = pkin(5) * t1923 + pkin(2);
t1909 = t1932 ^ 2;
t2414 = pkin(2) * t1909;
t2138 = -t1864 + 0.2e1 * t2414;
t2432 = t1934 * t2138;
t1868 = pkin(5) * t1926 + pkin(2);
t1912 = t1935 ^ 2;
t2413 = pkin(2) * t1912;
t2137 = -t1868 + 0.2e1 * t2413;
t2431 = t1937 * t2137;
t1872 = pkin(5) * t1929 + pkin(2);
t1915 = t1938 ^ 2;
t2412 = pkin(2) * t1915;
t2136 = -t1872 + 0.2e1 * t2412;
t2430 = t1940 * t2136;
t2402 = pkin(6) * t1918;
t2126 = (t1933 + 0.1e1) * (t1933 - 0.1e1) * t2402;
t2407 = pkin(2) * t1934;
t2260 = t1924 * t2407;
t2354 = t1918 * t1925;
t2426 = t1923 * (-(pkin(1) * t2354 - pkin(5) * t1934) * t1924 + t1925 * t2126) + t2260;
t2125 = (t1936 + 0.1e1) * (t1936 - 0.1e1) * t2402;
t2405 = pkin(2) * t1937;
t2258 = t1927 * t2405;
t2351 = t1918 * t1928;
t2425 = t1926 * (-(pkin(1) * t2351 - pkin(5) * t1937) * t1927 + t1928 * t2125) + t2258;
t2124 = (t1939 + 0.1e1) * (t1939 - 0.1e1) * t2402;
t2403 = pkin(2) * t1940;
t2259 = t1930 * t2403;
t2348 = t1918 * t1931;
t2424 = t1929 * (-(pkin(1) * t2348 - pkin(5) * t1940) * t1930 + t1931 * t2124) + t2259;
t2423 = 0.2e1 * pkin(1);
t1904 = t1918 ^ 2;
t2422 = 0.2e1 * t1904;
t2421 = 0.2e1 * t1905;
t2419 = t2421 - 0.2e1;
t2418 = pkin(1) * t1918;
t1895 = pkin(1) * t1924;
t1896 = pkin(1) * t1927;
t1897 = pkin(1) * t1930;
t2417 = pkin(1) * t1933;
t2416 = pkin(1) * t1936;
t2415 = pkin(1) * t1939;
t2408 = pkin(2) * t1932;
t2406 = pkin(2) * t1935;
t2404 = pkin(2) * t1938;
t2401 = pkin(6) * t1919;
t2397 = -0.2e1 * pkin(2) * pkin(6);
t1761 = t1782 * t1797;
t1762 = t1783 * t1797;
t1763 = t1784 * t1799;
t1764 = t1785 * t1799;
t1765 = t1786 * t1801;
t1766 = t1787 * t1801;
t1879 = pkin(1) * t2401;
t2342 = t1919 * t1924;
t2287 = pkin(1) * t2342;
t2123 = t1932 * t2287;
t2310 = pkin(2) * pkin(5) * t1918;
t1791 = 0.1e1 / ((-t1932 * t2310 + t1879) * t1933 - pkin(2) * t2123 + t1918 * (-pkin(5) * t1892 + t1880));
t2396 = t1791 * t1910;
t1943 = 0.1e1 / pkin(2);
t2395 = t1791 * t1943;
t2340 = t1919 * t1927;
t2286 = pkin(1) * t2340;
t2120 = t1935 * t2286;
t1792 = 0.1e1 / ((-t1935 * t2310 + t1879) * t1936 - pkin(2) * t2120 + t1918 * (-pkin(5) * t1893 + t1881));
t2394 = t1792 * t1913;
t2393 = t1792 * t1943;
t2338 = t1919 * t1930;
t2285 = pkin(1) * t2338;
t2117 = t1938 * t2285;
t1793 = 0.1e1 / ((-t1938 * t2310 + t1879) * t1939 - pkin(2) * t2117 + t1918 * (-pkin(5) * t1894 + t1882));
t2392 = t1793 * t1916;
t2391 = t1793 * t1943;
t2356 = t1918 * t1923;
t1794 = t2427 * t1934 + (-pkin(2) * t2356 - t2369) * t1925;
t1773 = t1794 * t1797;
t1798 = 0.1e1 / t1806 ^ 2;
t2390 = t1794 * t1798;
t2353 = t1918 * t1926;
t1795 = t2428 * t1937 + (-pkin(2) * t2353 - t2368) * t1928;
t1774 = t1795 * t1799;
t1800 = 0.1e1 / t1807 ^ 2;
t2389 = t1795 * t1800;
t2350 = t1918 * t1929;
t1796 = t2429 * t1940 + (-pkin(2) * t2350 - t2367) * t1931;
t1775 = t1796 * t1801;
t1802 = 0.1e1 / t1808 ^ 2;
t2388 = t1796 * t1802;
t2387 = t1797 * t1910;
t2385 = t1797 * t1933;
t2355 = t1918 * t1924;
t2272 = pkin(5) * t2355;
t1836 = t1919 * t2417 - t2272;
t2384 = t1798 * t1836;
t1906 = t1924 ^ 2;
t2383 = t1798 * t1906;
t2382 = t1798 * t1910;
t2381 = t1799 * t1913;
t2379 = t1799 * t1936;
t2352 = t1918 * t1927;
t2271 = pkin(5) * t2352;
t1837 = t1919 * t2416 - t2271;
t2378 = t1800 * t1837;
t1907 = t1927 ^ 2;
t2377 = t1800 * t1907;
t2376 = t1800 * t1913;
t2375 = t1801 * t1916;
t2373 = t1801 * t1939;
t2349 = t1918 * t1930;
t2270 = pkin(5) * t2349;
t1838 = -t1919 * t2415 + t2270;
t2372 = t1802 * t1838;
t1908 = t1930 ^ 2;
t2371 = t1802 * t1908;
t2370 = t1802 * t1916;
t1942 = pkin(2) ^ 2;
t2366 = t1909 * t1942;
t2365 = t1910 * t1919;
t2364 = t1910 * t1923;
t2363 = t1912 * t1942;
t2362 = t1913 * t1919;
t2361 = t1913 * t1926;
t2360 = t1915 * t1942;
t2359 = t1916 * t1919;
t2358 = t1916 * t1929;
t2357 = t1918 * t1919;
t2347 = t1918 * t1933;
t2346 = t1918 * t1936;
t2345 = t1918 * t1939;
t2344 = t1918 * t1943;
t2337 = t1919 * t1932;
t2335 = t1919 * t1935;
t2333 = t1919 * t1938;
t2331 = t1923 * t1924;
t2330 = t1923 * t1932;
t2329 = t1923 * t1933;
t2326 = t1925 * t1933;
t2325 = t1926 * t1927;
t2324 = t1926 * t1935;
t2323 = t1926 * t1936;
t2320 = t1928 * t1936;
t2319 = t1929 * t1930;
t2318 = t1929 * t1938;
t2317 = t1929 * t1939;
t2314 = t1931 * t1939;
t2309 = 0.2e1 * t1761;
t2308 = 0.2e1 * t1762;
t2307 = 0.2e1 * t1763;
t2306 = 0.2e1 * t1764;
t2305 = 0.2e1 * t1765;
t2304 = 0.2e1 * t1766;
t2303 = 0.2e1 * t1773;
t2302 = 0.2e1 * t1774;
t2301 = 0.2e1 * t1775;
t2300 = t1797 * t2421;
t2299 = t1799 * t2421;
t2298 = t1801 * t2421;
t2297 = -0.2e1 * t2357;
t2296 = 0.2e1 * t2330;
t2295 = 0.2e1 * t2324;
t2294 = 0.2e1 * t2318;
t2293 = pkin(1) * t2395;
t2292 = pkin(1) * t2393;
t2291 = pkin(1) * t2391;
t2290 = t1910 * t2417;
t2289 = t1913 * t2416;
t2288 = t1916 * t2415;
t2275 = pkin(5) * t1797 * t1924;
t2274 = pkin(5) * t1799 * t1927;
t2273 = pkin(5) * t1801 * t1930;
t2269 = pkin(5) * t2347;
t2268 = pkin(5) * t2346;
t2267 = pkin(5) * t2345;
t2266 = pkin(6) * t2347;
t2265 = pkin(6) * t2346;
t2264 = pkin(6) * t2345;
t2263 = t1934 * t2400;
t2262 = t1937 * t2399;
t2261 = t1940 * t2398;
t2257 = 0.2e1 * pkin(2) * t2401;
t2256 = t1932 * t2397;
t2255 = t1935 * t2397;
t2254 = t1938 * t2397;
t2253 = t2420 * pkin(6);
t1911 = t1933 ^ 2;
t1883 = t1911 - 0.2e1;
t1857 = t1883 * t2411 - pkin(5);
t1815 = t1857 * t1918 * t1934 + t1925 * t2441;
t1854 = (t1911 - 0.1e1) * t2411 - pkin(5);
t2150 = t1918 * t2331;
t2039 = pkin(2) * t1933 * t2150;
t1991 = t1925 * t2039;
t2162 = t1889 * t2329;
t2121 = pkin(6) * t2162;
t2165 = t1886 * t2329;
t2122 = pkin(6) * t2165;
t2129 = t1909 * t2260;
t1719 = ((-t1857 * t1889 + t1886 * t2263) * t1932 + (-t1886 * t2432 - t2121) * t1924) * t1905 + (-(t1886 * t2326 - 0.2e1 * t1889 * t2355) * t2414 + (-t1815 * t1886 - t1889 * t2266) * t1932 - (t1864 * t1889 + t1934 * t2122) * t2355) * t1919 + t1886 * t2129 + (t1854 * t1889 + t1886 * t1991) * t1932 - t2426 * t1886 + t2441 * t2162;
t1707 = t1719 * t2387;
t2249 = t1719 * t2364;
t1914 = t1936 ^ 2;
t1884 = t1914 - 0.2e1;
t1858 = t1884 * t2410 - pkin(5);
t1816 = t1858 * t1918 * t1937 + t1928 * t2440;
t1855 = (t1914 - 0.1e1) * t2410 - pkin(5);
t2148 = t1918 * t2325;
t2038 = pkin(2) * t1936 * t2148;
t1990 = t1928 * t2038;
t2161 = t1890 * t2323;
t2118 = pkin(6) * t2161;
t2164 = t1887 * t2323;
t2119 = pkin(6) * t2164;
t2128 = t1912 * t2258;
t1720 = ((-t1858 * t1890 + t1887 * t2262) * t1935 + (-t1887 * t2431 - t2118) * t1927) * t1905 + (-(t1887 * t2320 - 0.2e1 * t1890 * t2352) * t2413 + (-t1816 * t1887 - t1890 * t2265) * t1935 - (t1868 * t1890 + t1937 * t2119) * t2352) * t1919 + t1887 * t2128 + (t1855 * t1890 + t1887 * t1990) * t1935 - t2425 * t1887 + t2440 * t2161;
t1708 = t1720 * t2381;
t2248 = t1720 * t2361;
t1917 = t1939 ^ 2;
t1885 = t1917 - 0.2e1;
t1859 = t1885 * t2409 - pkin(5);
t1817 = t1859 * t1918 * t1940 + t1931 * t2439;
t1856 = (t1917 - 0.1e1) * t2409 - pkin(5);
t2146 = t1918 * t2319;
t2037 = pkin(2) * t1939 * t2146;
t1989 = t1931 * t2037;
t2160 = t1891 * t2317;
t2115 = pkin(6) * t2160;
t2163 = t1888 * t2317;
t2116 = pkin(6) * t2163;
t2127 = t1915 * t2259;
t1721 = ((-t1859 * t1891 + t1888 * t2261) * t1938 + (-t1888 * t2430 - t2115) * t1930) * t1905 + (-(t1888 * t2314 - 0.2e1 * t1891 * t2349) * t2412 + (-t1817 * t1888 - t1891 * t2264) * t1938 - (t1872 * t1891 + t1940 * t2116) * t2349) * t1919 + t1888 * t2127 + (t1856 * t1891 + t1888 * t1989) * t1938 - t2424 * t1888 + t2439 * t2160;
t1709 = t1721 * t2375;
t2247 = t1721 * t2358;
t1722 = ((-t1857 * t1886 - t1889 * t2263) * t1932 + (t1889 * t2432 - t2122) * t1924) * t1905 + ((0.2e1 * t1886 * t2355 + t1889 * t2326) * t2414 + (t1815 * t1889 - t1886 * t2266) * t1932 + (-t1864 * t1886 + t1934 * t2121) * t2355) * t1919 - t1889 * t2129 + (t1854 * t1886 - t1889 * t1991) * t1932 + t2426 * t1889 + t2441 * t2165;
t1710 = t1722 * t2387;
t2246 = t1722 * t2364;
t1723 = ((-t1858 * t1887 - t1890 * t2262) * t1935 + (t1890 * t2431 - t2119) * t1927) * t1905 + ((0.2e1 * t1887 * t2352 + t1890 * t2320) * t2413 + (t1816 * t1890 - t1887 * t2265) * t1935 + (-t1868 * t1887 + t1937 * t2118) * t2352) * t1919 - t1890 * t2128 + (t1855 * t1887 - t1890 * t1990) * t1935 + t2425 * t1890 + t2440 * t2164;
t1711 = t1723 * t2381;
t2245 = t1723 * t2361;
t1724 = ((-t1859 * t1888 - t1891 * t2261) * t1938 + (t1891 * t2430 - t2116) * t1930) * t1905 + ((0.2e1 * t1888 * t2349 + t1891 * t2314) * t2412 + (t1817 * t1891 - t1888 * t2264) * t1938 + (-t1872 * t1888 + t1940 * t2115) * t2349) * t1919 - t1891 * t2127 + (t1856 * t1888 - t1891 * t1989) * t1938 + t2424 * t1891 + t2439 * t2163;
t1712 = t1724 * t2375;
t2244 = t1724 * t2358;
t1876 = t1895 + pkin(6);
t1865 = pkin(5) + t2411;
t2111 = t2420 * t1934 * t1865;
t1803 = t1876 * t2354 + t1924 * t2111;
t1866 = 0.2e1 * t1892 + pkin(1);
t1809 = t1866 * t2354 + t2111;
t2153 = t1918 * t2336;
t2051 = t1886 * t2153;
t1818 = t1889 * t1905 - t1889 + t2051;
t1842 = -t1905 * t1892 + t2441;
t1860 = t1895 - t2253;
t2036 = t2153 * t1892;
t2170 = t1865 * t2355;
t2054 = t1919 * t2170;
t1941 = pkin(6) ^ 2;
t2132 = -t1941 + t2366;
t2159 = t1924 * t2366;
t2171 = t1865 * t2357;
t1725 = (t1886 * t2132 * t2354 + t1818 * t2256) * t1911 + (t1818 * t2159 + (t1809 * t1886 - t1889 * t2171) * t2408 + (t1842 * t1889 - t1886 * t2036) * pkin(6)) * t1933 - (-pkin(6) * t2051 + t1860 * t1889) * t2408 + pkin(6) * (t1803 * t1886 - t1889 * t2054);
t2243 = t1725 * t2396;
t2048 = t1889 * t2153;
t1819 = t1886 * t1905 - t1886 - t2048;
t2033 = t1925 * t2132;
t1726 = (-t1889 * t1918 * t2033 + t1819 * t2256) * t1911 + (t1819 * t2159 - (t1809 * t1889 + t1886 * t2171) * t2408 + pkin(6) * (t1842 * t1886 + t1889 * t2036)) * t1933 - (pkin(6) * t2048 + t1860 * t1886) * t2408 - pkin(6) * (t1803 * t1889 + t1886 * t2054);
t2242 = t1726 * t2396;
t1877 = t1896 + pkin(6);
t1869 = pkin(5) + t2410;
t2110 = t2420 * t1937 * t1869;
t1804 = t1877 * t2351 + t1927 * t2110;
t1870 = 0.2e1 * t1893 + pkin(1);
t1810 = t1870 * t2351 + t2110;
t2152 = t1918 * t2334;
t2050 = t1887 * t2152;
t1820 = t1890 * t1905 - t1890 + t2050;
t1843 = -t1905 * t1893 + t2440;
t1861 = t1896 - t2253;
t2035 = t2152 * t1893;
t2168 = t1869 * t2352;
t2053 = t1919 * t2168;
t2131 = -t1941 + t2363;
t2157 = t1927 * t2363;
t2169 = t1869 * t2357;
t1727 = (t1887 * t2131 * t2351 + t1820 * t2255) * t1914 + (t1820 * t2157 + (t1810 * t1887 - t1890 * t2169) * t2406 + (t1843 * t1890 - t1887 * t2035) * pkin(6)) * t1936 - (-pkin(6) * t2050 + t1861 * t1890) * t2406 + pkin(6) * (t1804 * t1887 - t1890 * t2053);
t2241 = t1727 * t2394;
t2047 = t1890 * t2152;
t1821 = t1887 * t1905 - t1887 - t2047;
t2032 = t1928 * t2131;
t1728 = (-t1890 * t1918 * t2032 + t1821 * t2255) * t1914 + (t1821 * t2157 - (t1810 * t1890 + t1887 * t2169) * t2406 + pkin(6) * (t1843 * t1887 + t1890 * t2035)) * t1936 - (pkin(6) * t2047 + t1861 * t1887) * t2406 - pkin(6) * (t1804 * t1890 + t1887 * t2053);
t2240 = t1728 * t2394;
t1878 = t1897 + pkin(6);
t1873 = pkin(5) + t2409;
t2109 = t2420 * t1940 * t1873;
t1805 = t1878 * t2348 + t1930 * t2109;
t1874 = 0.2e1 * t1894 + pkin(1);
t1811 = t1874 * t2348 + t2109;
t2151 = t1918 * t2332;
t2049 = t1888 * t2151;
t1822 = t1891 * t1905 - t1891 + t2049;
t1844 = -t1905 * t1894 + t2439;
t1862 = t1897 - t2253;
t2034 = t2151 * t1894;
t2166 = t1873 * t2349;
t2052 = t1919 * t2166;
t2130 = -t1941 + t2360;
t2155 = t1930 * t2360;
t2167 = t1873 * t2357;
t1729 = (t1888 * t2130 * t2348 + t1822 * t2254) * t1917 + (t1822 * t2155 + (t1811 * t1888 - t1891 * t2167) * t2404 + (t1844 * t1891 - t1888 * t2034) * pkin(6)) * t1939 - (-pkin(6) * t2049 + t1862 * t1891) * t2404 + pkin(6) * (t1805 * t1888 - t1891 * t2052);
t2239 = t1729 * t2392;
t2046 = t1891 * t2151;
t1823 = t1888 * t1905 - t1888 - t2046;
t2031 = t1931 * t2130;
t1730 = (-t1891 * t1918 * t2031 + t1823 * t2254) * t1917 + (t1823 * t2155 - (t1811 * t1891 + t1888 * t2167) * t2404 + pkin(6) * (t1844 * t1888 + t1891 * t2034)) * t1939 - (pkin(6) * t2046 + t1862 * t1888) * t2404 - pkin(6) * (t1805 * t1891 + t1888 * t2052);
t2238 = t1730 * t2392;
t1752 = t1925 * (pkin(6) * t2313 - t1924 * t2138) * t1905 + ((-t1857 * t2354 + t1934 * t2441) * t1932 + (-pkin(6) * t1925 * t2150 + t1909 * t2407) * t1933) * t1919 + t1924 * t1925 * t2414 - t1932 * t1934 * t2039 + (-t1925 * t1864 - t2328 * t2418) * t1924 + t2126 * t2328;
t1749 = t1752 * t2387;
t1770 = t1794 * t2386;
t1741 = t1770 + t1749;
t2237 = t1741 * t2387;
t1753 = t1928 * (pkin(6) * t2312 - t1927 * t2137) * t1905 + ((-t1858 * t2351 + t1937 * t2440) * t1935 + (-pkin(6) * t1928 * t2148 + t1912 * t2405) * t1936) * t1919 + t1927 * t1928 * t2413 - t1935 * t1937 * t2038 + (-t1928 * t1868 - t2322 * t2418) * t1927 + t2125 * t2322;
t1750 = t1753 * t2381;
t1771 = t1795 * t2380;
t1743 = t1771 + t1750;
t2236 = t1743 * t2381;
t1754 = t1931 * (pkin(6) * t2311 - t1930 * t2136) * t1905 + ((-t1859 * t2348 + t1940 * t2439) * t1938 + (-pkin(6) * t1931 * t2146 + t1915 * t2403) * t1939) * t1919 + t1930 * t1931 * t2412 - t1938 * t1940 * t2037 + (-t1931 * t1872 - t2316 * t2418) * t1930 + t2124 * t2316;
t1751 = t1754 * t2375;
t1772 = t1796 * t2374;
t1745 = t1772 + t1751;
t2235 = t1745 * t2375;
t1767 = (t1925 * t1932 * t2257 + t1934 * t2132) * t1911 + ((t1865 * t2354 + t1866 * t1934) * t2408 - t2033 * t2342) * t1933 + (t1876 * t1934 + (-pkin(2) * t2337 + t2170) * t1925) * pkin(6);
t2195 = t1794 * t2385;
t2200 = t1910 * t2395;
t1746 = (t1767 * t2200 + t2195) * t1918;
t2234 = t1746 * t2396;
t2233 = t1746 * t2364;
t1768 = (t1928 * t1935 * t2257 + t1937 * t2131) * t1914 + ((t1869 * t2351 + t1870 * t1937) * t2406 - t2032 * t2340) * t1936 + (t1877 * t1937 + (-pkin(2) * t2335 + t2168) * t1928) * pkin(6);
t2191 = t1795 * t2379;
t2198 = t1913 * t2393;
t1747 = (t1768 * t2198 + t2191) * t1918;
t2232 = t1747 * t2394;
t2231 = t1747 * t2361;
t1769 = (t1931 * t1938 * t2257 + t1940 * t2130) * t1917 + ((t1873 * t2348 + t1874 * t1940) * t2404 - t2031 * t2338) * t1939 + (t1878 * t1940 + (-pkin(2) * t2333 + t2166) * t1931) * pkin(6);
t2187 = t1796 * t2373;
t2196 = t1916 * t2391;
t1748 = (t1769 * t2196 + t2187) * t1918;
t2230 = t1748 * t2392;
t2229 = t1748 * t2358;
t2228 = t1752 * t2364;
t2227 = t1753 * t2361;
t2226 = t1754 * t2358;
t2225 = t1767 * t2396;
t2224 = t1768 * t2394;
t2223 = t1769 * t2392;
t2222 = t1798 * t2438;
t2221 = t1782 * t2385;
t2220 = t1782 * t2384;
t2219 = t1782 * t2382;
t2218 = t1783 * t2385;
t2217 = t1783 * t2384;
t2216 = t1783 * t2382;
t2215 = t1800 * t2437;
t2214 = t1784 * t2379;
t2213 = t1784 * t2378;
t2212 = t1784 * t2376;
t2211 = t1785 * t2379;
t2210 = t1785 * t2378;
t2209 = t1785 * t2376;
t2208 = t1802 * t2436;
t2207 = t1786 * t2373;
t2206 = t1786 * t2372;
t2205 = t1786 * t2370;
t2204 = t1787 * t2373;
t2203 = t1787 * t2372;
t2202 = t1787 * t2370;
t2201 = t1791 * t2387;
t2199 = t1792 * t2381;
t2197 = t1793 * t2375;
t2194 = t1794 * t2384;
t2193 = t1794 * t2383;
t2192 = t1794 * t2382;
t2190 = t1795 * t2378;
t2189 = t1795 * t2377;
t2188 = t1795 * t2376;
t2186 = t1796 * t2372;
t2185 = t1796 * t2371;
t2184 = t1796 * t2370;
t2183 = t1797 * t2347;
t2182 = t1836 * t2382;
t1839 = t2269 + t2287;
t2181 = t1839 * t2382;
t2180 = t1798 * t1924 * t1933;
t2179 = t1799 * t2346;
t2178 = t1837 * t2376;
t1840 = t2268 + t2286;
t2177 = t1840 * t2376;
t2176 = t1800 * t1927 * t1936;
t2175 = t1801 * t2345;
t2174 = t1838 * t2370;
t1841 = t2267 + t2285;
t2173 = t1841 * t2370;
t2172 = t1802 * t1930 * t1939;
t2158 = t1910 * t2356;
t2156 = t1913 * t2353;
t2154 = t1916 * t2350;
t2149 = t1918 * t2327;
t2147 = t1918 * t2321;
t2145 = t1918 * t2315;
t2144 = t2385 * t2423;
t2143 = t2379 * t2423;
t2142 = t2373 * t2423;
t2141 = 0.2e1 * t2272;
t2140 = 0.2e1 * t2271;
t2139 = 0.2e1 * t2270;
t2135 = t1883 * t1905 - t1911;
t2134 = t1884 * t1905 - t1914;
t2133 = t1885 * t1905 - t1917;
t2114 = (0.2e1 * t1909 - 0.1e1) * t2355;
t2113 = (0.2e1 * t1912 - 0.1e1) * t2352;
t2112 = (0.2e1 * t1915 - 0.1e1) * t2349;
t2108 = t1767 * t1791 * t2344;
t2107 = t1768 * t1792 * t2344;
t2106 = t1769 * t1793 * t2344;
t2105 = t1782 * t2182;
t2104 = t1782 * t2181;
t2103 = t1783 * t2182;
t2102 = t1783 * t2181;
t2101 = t1784 * t2178;
t2100 = t1784 * t2177;
t2099 = t1785 * t2178;
t2098 = t1785 * t2177;
t2097 = t1786 * t2174;
t2096 = t1786 * t2173;
t2095 = t1787 * t2174;
t2094 = t1787 * t2173;
t1824 = t1839 * t1923 + t1932 * t2418;
t2093 = t1824 * t2201;
t1827 = (pkin(1) * t1923 - pkin(5) * t2313) * t1918 - t2123;
t2092 = t1827 * t2201;
t2091 = t1824 * t2200;
t2090 = t1827 * t2200;
t1830 = t2150 - t2337;
t2089 = t1830 * t2200;
t1832 = t2149 + t2343;
t2088 = t1832 * t2200;
t2087 = t1933 * t2200;
t1825 = t1840 * t1926 + t1935 * t2418;
t2086 = t1825 * t2199;
t1828 = (pkin(1) * t1926 - pkin(5) * t2312) * t1918 - t2120;
t2085 = t1828 * t2199;
t2084 = t1825 * t2198;
t2083 = t1828 * t2198;
t1831 = t2148 - t2335;
t2082 = t1831 * t2198;
t1833 = t2147 + t2341;
t2081 = t1833 * t2198;
t2080 = t1936 * t2198;
t1826 = t1841 * t1929 + t1938 * t2418;
t2079 = t1826 * t2197;
t1829 = (pkin(1) * t1929 - pkin(5) * t2311) * t1918 - t2117;
t2078 = t1829 * t2197;
t2077 = t1826 * t2196;
t2076 = t1829 * t2196;
t1834 = t2146 - t2333;
t2075 = t1834 * t2196;
t1835 = t2145 + t2339;
t2074 = t1835 * t2196;
t2073 = t1939 * t2196;
t2072 = t1794 * t2182;
t2071 = t1794 * t2181;
t2070 = t1794 * t2180;
t2069 = t1795 * t2178;
t2068 = t1795 * t2177;
t2067 = t1795 * t2176;
t2066 = t1796 * t2174;
t2065 = t1796 * t2173;
t2064 = t1796 * t2172;
t2063 = t1797 * t2150;
t2062 = t1797 * t2149;
t2061 = t1923 * t2182;
t2060 = t1799 * t2148;
t2059 = t1799 * t2147;
t2058 = t1926 * t2178;
t2057 = t1801 * t2146;
t2056 = t1801 * t2145;
t2055 = t1929 * t2174;
t2045 = t1797 * t2365 / 0.2e1;
t2044 = t1799 * t2362 / 0.2e1;
t2043 = t1801 * t2359 / 0.2e1;
t2042 = 0.2e1 * t1923 * t2149;
t2041 = 0.2e1 * t1926 * t2147;
t2040 = 0.2e1 * t1929 * t2145;
t2030 = t1797 * t2114;
t2029 = t1799 * t2113;
t2028 = t1801 * t2112;
t2027 = t1910 * t2108;
t2026 = t1913 * t2107;
t2025 = t1916 * t2106;
t2024 = t1782 * t2093;
t2023 = t1782 * t2092;
t2022 = t1782 * t2061;
t2021 = t1783 * t2093;
t2020 = t1783 * t2092;
t2019 = t1783 * t2061;
t2018 = t1784 * t2086;
t2017 = t1784 * t2085;
t2016 = t1784 * t2058;
t2015 = t1785 * t2086;
t2014 = t1785 * t2085;
t2013 = t1785 * t2058;
t2012 = t1786 * t2079;
t2011 = t1786 * t2078;
t2010 = t1786 * t2055;
t2009 = t1787 * t2079;
t2008 = t1787 * t2078;
t2007 = t1787 * t2055;
t2006 = t1794 * t2093;
t2005 = t1794 * t2092;
t2004 = t1918 * t2087;
t2003 = t1795 * t2086;
t2002 = t1795 * t2085;
t2001 = t1918 * t2080;
t2000 = t1796 * t2079;
t1999 = t1796 * t2078;
t1998 = t1918 * t2073;
t1997 = t1794 * t2061;
t1996 = t1795 * t2058;
t1995 = t1796 * t2055;
t1994 = t2200 * t2287;
t1993 = t2198 * t2286;
t1992 = t2196 * t2285;
t1755 = t1782 * t2386;
t1674 = 0.2e1 * t1755 + t1707;
t1988 = t1782 * (t1674 * t1797 + t1719 * t2382);
t1756 = t1783 * t2386;
t1676 = 0.2e1 * t1756 + t1710;
t1987 = t1783 * (t1676 * t1797 + t1722 * t2382);
t1757 = t1784 * t2380;
t1678 = 0.2e1 * t1757 + t1708;
t1986 = t1784 * (t1678 * t1799 + t1720 * t2376);
t1758 = t1785 * t2380;
t1680 = 0.2e1 * t1758 + t1711;
t1985 = t1785 * (t1680 * t1799 + t1723 * t2376);
t1759 = t1786 * t2374;
t1682 = 0.2e1 * t1759 + t1709;
t1984 = t1786 * (t1682 * t1801 + t1721 * t2370);
t1760 = t1787 * t2374;
t1684 = 0.2e1 * t1760 + t1712;
t1983 = t1787 * (t1684 * t1801 + t1724 * t2370);
t1740 = 0.2e1 * t1770 + t1749;
t1982 = t1794 * (t1740 * t1797 + t1752 * t2382);
t1742 = 0.2e1 * t1771 + t1750;
t1981 = t1795 * (t1742 * t1799 + t1753 * t2376);
t1744 = 0.2e1 * t1772 + t1751;
t1980 = t1796 * (t1744 * t1801 + t1754 * t2370);
t1976 = t1923 * t2297 + t2419 * t2327;
t1975 = t1926 * t2297 + t2419 * t2321;
t1974 = t1929 * t2297 + t2419 * t2315;
t1973 = t1932 * t2297 - t2419 * t2331;
t1972 = t1935 * t2297 - t2419 * t2325;
t1971 = t1938 * t2297 - t2419 * t2319;
t1970 = t1674 * t1762 + t1722 * t2219;
t1969 = t1674 * t1773 + t1752 * t2219;
t1968 = t1676 * t1761 + t1719 * t2216;
t1967 = t1676 * t1773 + t1752 * t2216;
t1966 = t1678 * t1764 + t1723 * t2212;
t1965 = t1678 * t1774 + t1753 * t2212;
t1964 = t1680 * t1763 + t1720 * t2209;
t1963 = t1680 * t1774 + t1753 * t2209;
t1962 = t1682 * t1766 + t1724 * t2205;
t1961 = t1682 * t1775 + t1754 * t2205;
t1960 = t1684 * t1765 + t1721 * t2202;
t1959 = t1684 * t1775 + t1754 * t2202;
t1958 = t1719 * t2192 + t1740 * t1761;
t1957 = t1720 * t2188 + t1742 * t1763;
t1956 = t1721 * t2184 + t1744 * t1765;
t1955 = t1722 * t2192 + t1740 * t1762;
t1954 = t1723 * t2188 + t1742 * t1764;
t1953 = t1724 * t2184 + t1744 * t1766;
t1952 = -(t1719 * t2275 + t1725 * t2293) * t2435 - (-t1719 * t2290 + t1782 * t2141) * t2386 + t1782 * t2144;
t1951 = -(t1720 * t2274 + t1727 * t2292) * t2434 - (-t1720 * t2289 + t1784 * t2140) * t2380 + t1784 * t2143;
t1950 = -(t1721 * t2273 + t1729 * t2291) * t2433 - (-t1721 * t2288 + t1786 * t2139) * t2374 + t1786 * t2142;
t1949 = -(t1722 * t2275 + t1726 * t2293) * t2435 - (-t1722 * t2290 + t1783 * t2141) * t2386 + t1783 * t2144;
t1948 = -(t1723 * t2274 + t1728 * t2292) * t2434 - (-t1723 * t2289 + t1785 * t2140) * t2380 + t1785 * t2143;
t1947 = -(t1724 * t2273 + t1730 * t2291) * t2433 - (-t1724 * t2288 + t1787 * t2139) * t2374 + t1787 * t2142;
t1946 = -(-pkin(1) * t2108 + t1752 * t2275) * t2435 - (-t1752 * t2290 + t1794 * t2141) * t2386 + t1794 * t2144;
t1945 = -(-pkin(1) * t2107 + t1753 * t2274) * t2434 - (-t1753 * t2289 + t1795 * t2140) * t2380 + t1795 * t2143;
t1944 = -(-pkin(1) * t2106 + t1754 * t2273) * t2433 - (-t1754 * t2288 + t1796 * t2139) * t2374 + t1796 * t2142;
t1790 = t1796 ^ 2;
t1789 = t1795 ^ 2;
t1788 = t1794 ^ 2;
t1781 = t1787 ^ 2;
t1780 = t1786 ^ 2;
t1779 = t1785 ^ 2;
t1778 = t1784 ^ 2;
t1777 = t1783 ^ 2;
t1776 = t1782 ^ 2;
t1739 = t1772 + t1751 / 0.2e1;
t1738 = t1771 + t1750 / 0.2e1;
t1737 = t1770 + t1749 / 0.2e1;
t1736 = t1754 * t2043 + t1775;
t1735 = t1753 * t2044 + t1774;
t1734 = t1752 * t2045 + t1773;
t1703 = t1745 * t1929 + t1796 * t2056;
t1702 = t1743 * t1926 + t1795 * t2059;
t1701 = t1741 * t1923 + t1794 * t2062;
t1700 = t1745 * t1938 - t1796 * t2057;
t1699 = t1743 * t1935 - t1795 * t2060;
t1698 = t1741 * t1932 - t1794 * t2063;
t1697 = t1775 + (-t1754 * t2359 + t1796 * t2133) * t1801;
t1696 = t1774 + (-t1753 * t2362 + t1795 * t2134) * t1799;
t1695 = t1773 + (-t1752 * t2365 + t1794 * t2135) * t1797;
t1694 = -t1730 * t2196 + t1787 * t2175;
t1693 = -t1729 * t2196 + t1786 * t2175;
t1692 = -t1728 * t2198 + t1785 * t2179;
t1691 = -t1727 * t2198 + t1784 * t2179;
t1690 = -t1726 * t2200 + t1783 * t2183;
t1689 = -t1725 * t2200 + t1782 * t2183;
t1688 = t1745 * t2294 + t1796 * t2028;
t1687 = t1743 * t2295 + t1795 * t2029;
t1686 = t1741 * t2296 + t1794 * t2030;
t1685 = t1760 + t1712;
t1683 = t1759 + t1709;
t1681 = t1758 + t1711;
t1679 = t1757 + t1708;
t1677 = t1756 + t1710;
t1675 = t1755 + t1707;
t1673 = t1760 + t1712 / 0.2e1;
t1672 = t1759 + t1709 / 0.2e1;
t1671 = t1758 + t1711 / 0.2e1;
t1670 = t1757 + t1708 / 0.2e1;
t1669 = t1756 + t1710 / 0.2e1;
t1668 = t1755 + t1707 / 0.2e1;
t1667 = t1724 * t2043 + t1766;
t1666 = t1723 * t2044 + t1764;
t1665 = t1722 * t2045 + t1762;
t1664 = t1721 * t2043 + t1765;
t1663 = t1720 * t2044 + t1763;
t1662 = t1719 * t2045 + t1761;
t1655 = t1783 * t2390 + t1785 * t2389 + t1787 * t2388;
t1654 = t1782 * t2390 + t1784 * t2389 + t1786 * t2388;
t1653 = -t1769 * t1918 * t1992 + (-t1769 * t1904 * t2073 + t1796 * t2298 - 0.2e1 * t1775) * pkin(5);
t1652 = -t1768 * t1918 * t1993 + (-t1768 * t1904 * t2080 + t1795 * t2299 - 0.2e1 * t1774) * pkin(5);
t1651 = -t1767 * t1918 * t1994 + (-t1767 * t1904 * t2087 + t1794 * t2300 - 0.2e1 * t1773) * pkin(5);
t1650 = (t1783 * t2193 + t1785 * t2189 + t1787 * t2185) * t1904;
t1649 = (t1782 * t2193 + t1784 * t2189 + t1786 * t2185) * t1904;
t1648 = (t1783 * t2070 + t1785 * t2067 + t1787 * t2064) * t2422;
t1647 = (t1782 * t2070 + t1784 * t2067 + t1786 * t2064) * t2422;
t1646 = -t1736 * t1897 - t1739 * t2267;
t1645 = t1736 * t2415 - t1739 * t2270;
t1644 = -t1735 * t1896 - t1738 * t2268;
t1643 = -t1734 * t1895 - t1737 * t2269;
t1642 = t1735 * t2416 - t1738 * t2271;
t1641 = t1734 * t2417 - t1737 * t2272;
t1640 = t1685 * t1929 + t1787 * t2056;
t1639 = t1683 * t1929 + t1786 * t2056;
t1638 = t1681 * t1926 + t1785 * t2059;
t1637 = t1679 * t1926 + t1784 * t2059;
t1636 = t1677 * t1923 + t1783 * t2062;
t1635 = t1675 * t1923 + t1782 * t2062;
t1634 = t1685 * t1938 - t1787 * t2057;
t1633 = t1683 * t1938 - t1786 * t2057;
t1632 = t1681 * t1935 - t1785 * t2060;
t1631 = t1679 * t1935 - t1784 * t2060;
t1630 = t1677 * t1932 - t1783 * t2063;
t1629 = t1675 * t1932 - t1782 * t2063;
t1628 = t2208 + t2215 + t2222;
t1627 = (t1906 * t2222 + t1907 * t2215 + t1908 * t2208) * t1904;
t1626 = (t2172 * t2436 + t2176 * t2437 + t2180 * t2438) * t2422;
t1625 = t1834 * t2025 + (-t1754 * t1918 + t1796 * t1971) * t2373;
t1624 = t1831 * t2026 + (-t1753 * t1918 + t1795 * t1972) * t2379;
t1623 = t1830 * t2027 + (-t1752 * t1918 + t1794 * t1973) * t2385;
t1622 = -t1835 * t2025 + (-t1754 * t2154 + t1796 * t1974) * t2373;
t1621 = -t1833 * t2026 + (-t1753 * t2156 + t1795 * t1975) * t2379;
t1620 = -t1832 * t2027 + (-t1752 * t2158 + t1794 * t1976) * t2385;
t1613 = t1766 + (-t1724 * t2359 + t1787 * t2133) * t1801;
t1612 = t1765 + (-t1721 * t2359 + t1786 * t2133) * t1801;
t1611 = t1764 + (-t1723 * t2362 + t1785 * t2134) * t1799;
t1610 = t1763 + (-t1720 * t2362 + t1784 * t2134) * t1799;
t1609 = t1762 + (-t1722 * t2365 + t1783 * t2135) * t1797;
t1608 = t1761 + (-t1719 * t2365 + t1782 * t2135) * t1797;
t1607 = t1685 * t2294 + t1787 * t2028;
t1606 = t1683 * t2294 + t1786 * t2028;
t1605 = t1681 * t2295 + t1785 * t2029;
t1604 = t1679 * t2295 + t1784 * t2029;
t1603 = t1677 * t2296 + t1783 * t2030;
t1602 = t1675 * t2296 + t1782 * t2030;
t1601 = t1730 * t1992 + (t1730 * t1998 + t1787 * t2298 - 0.2e1 * t1766) * pkin(5);
t1600 = t1729 * t1992 + (t1729 * t1998 + t1786 * t2298 - 0.2e1 * t1765) * pkin(5);
t1599 = t1728 * t1993 + (t1728 * t2001 + t1785 * t2299 - 0.2e1 * t1764) * pkin(5);
t1598 = t1727 * t1993 + (t1727 * t2001 + t1784 * t2299 - 0.2e1 * t1763) * pkin(5);
t1597 = t1726 * t1994 + (t1726 * t2004 + t1783 * t2300 - 0.2e1 * t1762) * pkin(5);
t1596 = t1725 * t1994 + (t1725 * t2004 + t1782 * t2300 - 0.2e1 * t1761) * pkin(5);
t1595 = -t1667 * t1897 - t1673 * t2267;
t1594 = t1667 * t2415 - t1673 * t2270;
t1593 = -t1664 * t1897 - t1672 * t2267;
t1592 = t1664 * t2415 - t1672 * t2270;
t1591 = -t1666 * t1896 - t1671 * t2268;
t1590 = -t1663 * t1896 - t1670 * t2268;
t1589 = -t1665 * t1895 - t1669 * t2269;
t1588 = -t1662 * t1895 - t1668 * t2269;
t1587 = t1666 * t2416 - t1671 * t2271;
t1586 = t1663 * t2416 - t1670 * t2271;
t1585 = t1665 * t2417 - t1669 * t2272;
t1584 = t1662 * t2417 - t1668 * t2272;
t1583 = t1697 * t1915 + t1739 * t2040 + t1745 * t1919;
t1582 = t1696 * t1912 + t1738 * t2041 + t1743 * t1919;
t1581 = t1695 * t1909 + t1737 * t2042 + t1741 * t1919;
t1580 = -t1697 * t2318 + t1739 * t2112;
t1579 = -t1696 * t2324 + t1738 * t2113;
t1578 = -t1695 * t2330 + t1737 * t2114;
t1577 = -t1730 * t2075 + (-t1724 * t1918 + t1787 * t1971) * t2373;
t1576 = -t1729 * t2075 + (-t1721 * t1918 + t1786 * t1971) * t2373;
t1575 = -t1728 * t2082 + (-t1723 * t1918 + t1785 * t1972) * t2379;
t1574 = -t1727 * t2082 + (-t1720 * t1918 + t1784 * t1972) * t2379;
t1573 = -t1726 * t2089 + (-t1722 * t1918 + t1783 * t1973) * t2385;
t1572 = -t1725 * t2089 + (-t1719 * t1918 + t1782 * t1973) * t2385;
t1571 = t1730 * t2074 + (-t1724 * t2154 + t1787 * t1974) * t2373;
t1570 = t1729 * t2074 + (-t1721 * t2154 + t1786 * t1974) * t2373;
t1569 = t1728 * t2081 + (-t1723 * t2156 + t1785 * t1975) * t2379;
t1568 = t1727 * t2081 + (-t1720 * t2156 + t1784 * t1975) * t2379;
t1567 = t1726 * t2088 + (-t1722 * t2158 + t1783 * t1976) * t2385;
t1566 = t1725 * t2088 + (-t1719 * t2158 + t1782 * t1976) * t2385;
t1565 = -t1929 * t1653 + t1938 * t1944;
t1564 = -t1938 * t1653 - t1929 * t1944;
t1563 = -t1926 * t1652 + t1935 * t1945;
t1562 = -t1935 * t1652 - t1926 * t1945;
t1561 = -t1923 * t1651 + t1932 * t1946;
t1560 = -t1932 * t1651 - t1923 * t1946;
t1559 = t1613 * t1915 + t1673 * t2040 + t1685 * t1919;
t1558 = t1612 * t1915 + t1672 * t2040 + t1683 * t1919;
t1557 = t1611 * t1912 + t1671 * t2041 + t1681 * t1919;
t1556 = t1610 * t1912 + t1670 * t2041 + t1679 * t1919;
t1555 = t1609 * t1909 + t1669 * t2042 + t1677 * t1919;
t1554 = t1608 * t1909 + t1668 * t2042 + t1675 * t1919;
t1553 = -t1613 * t2318 + t1673 * t2112;
t1552 = -t1612 * t2318 + t1672 * t2112;
t1551 = -t1611 * t2324 + t1671 * t2113;
t1550 = -t1610 * t2324 + t1670 * t2113;
t1549 = -t1609 * t2330 + t1669 * t2114;
t1548 = -t1608 * t2330 + t1668 * t2114;
t1547 = -t1929 * t1601 + t1938 * t1947;
t1546 = -t1938 * t1601 - t1929 * t1947;
t1545 = -t1929 * t1600 + t1938 * t1950;
t1544 = -t1938 * t1600 - t1929 * t1950;
t1543 = -t1926 * t1599 + t1935 * t1948;
t1542 = -t1935 * t1599 - t1926 * t1948;
t1541 = -t1926 * t1598 + t1935 * t1951;
t1540 = -t1935 * t1598 - t1926 * t1951;
t1539 = -t1923 * t1597 + t1932 * t1949;
t1538 = -t1932 * t1597 - t1923 * t1949;
t1537 = -t1923 * t1596 + t1932 * t1952;
t1536 = -t1932 * t1596 - t1923 * t1952;
t1 = [t1777 * t1798 + t1779 * t1800 + t1781 * t1802, 0, 0, (t1777 * t2383 + t1779 * t2377 + t1781 * t2371) * t1904, (t1777 * t2180 + t1779 * t2176 + t1781 * t2172) * t2422, (t1924 * t1987 + t1927 * t1985 + t1930 * t1983) * t1918, (t1933 * t1987 + t1936 * t1985 + t1939 * t1983) * t1918, t1677 * t1710 + t1681 * t1711 + t1685 * t1712 + (t1677 * t1762 + t1681 * t1764 + t1685 * t1766) * t1919, t1585 * t2308 + t1587 * t2306 + t1594 * t2304 + t1722 * t2103 + t1723 * t2099 - t1724 * t2095, t1589 * t2308 + t1591 * t2306 + t1595 * t2304 - t1722 * t2102 - t1723 * t2098 - t1724 * t2094, (t1559 * t1787 + t1640 * t2244) * t1801 + (t1557 * t1785 + t1638 * t2245) * t1799 + (t1555 * t1783 + t1636 * t2246) * t1797, t1549 * t2308 + t1551 * t2306 + t1553 * t2304 + t1603 * t1710 + t1605 * t1711 + t1607 * t1712, (t1787 * t1571 - t1694 * t2244) * t1801 + (t1785 * t1569 - t1692 * t2245) * t1799 + (t1783 * t1567 - t1690 * t2246) * t1797 + (t1636 * t2242 + t1638 * t2240 + t1640 * t2238) * t1943, (t1577 * t1787 - t1694 * t1724) * t1801 + (t1575 * t1785 - t1692 * t1723) * t1799 + (t1573 * t1783 - t1690 * t1722) * t1797 + (t1630 * t2242 + t1632 * t2240 + t1634 * t2238) * t1943, (-t1690 * t2242 - t1692 * t2240 - t1694 * t2238) * t1943 + (t1690 * t2218 + t1692 * t2211 + t1694 * t2204) * t1918, (-t1724 * t2372 + (-t1730 * t2077 + t1547) * t1801) * t1787 + (t1723 * t2378 + (-t1728 * t2084 + t1543) * t1799) * t1785 + (t1722 * t2384 + (-t1726 * t2091 + t1539) * t1797) * t1783, (t1724 * t2055 + (t1730 * t2076 + t1546) * t1801) * t1787 + (-t1723 * t2058 + (t1728 * t2083 + t1542) * t1799) * t1785 + (-t1722 * t2061 + (t1726 * t2090 + t1538) * t1797) * t1783, 1; t1628, 0, 0, t1627, t1626, (t1924 * t1970 + t1927 * t1966 + t1930 * t1962) * t1918, (t1933 * t1970 + t1936 * t1966 + t1939 * t1962) * t1918, t1675 * t1710 + t1679 * t1711 + t1683 * t1712 + (t1675 * t1762 + t1679 * t1764 + t1683 * t1766) * t1919, t1584 * t2308 + t1586 * t2306 + t1592 * t2304 + t1722 * t2105 + t1723 * t2101 - t1724 * t2097, t1588 * t2308 + t1590 * t2306 + t1593 * t2304 - t1722 * t2104 - t1723 * t2100 - t1724 * t2096, (t1558 * t1787 + t1639 * t2244) * t1801 + (t1556 * t1785 + t1637 * t2245) * t1799 + (t1554 * t1783 + t1635 * t2246) * t1797, t1548 * t2308 + t1550 * t2306 + t1552 * t2304 + t1602 * t1710 + t1604 * t1711 + t1606 * t1712, (t1787 * t1570 - t1693 * t2244) * t1801 + (t1568 * t1785 - t1691 * t2245) * t1799 + (t1566 * t1783 - t1689 * t2246) * t1797 + (t1635 * t2242 + t1637 * t2240 + t1639 * t2238) * t1943, (t1576 * t1787 - t1693 * t1724) * t1801 + (t1574 * t1785 - t1691 * t1723) * t1799 + (t1572 * t1783 - t1689 * t1722) * t1797 + (t1629 * t2242 + t1631 * t2240 + t1633 * t2238) * t1943, (-t1689 * t2242 - t1691 * t2240 - t1693 * t2238) * t1943 + (t1689 * t2218 + t1691 * t2211 + t1693 * t2204) * t1918, t1722 * t2220 + t1723 * t2213 - t1724 * t2206 + t1537 * t1762 + t1541 * t1764 + t1545 * t1766 + (-t1726 * t2024 - t1728 * t2018 - t1730 * t2012) * t1943, -t1722 * t2022 - t1723 * t2016 + t1724 * t2010 + t1536 * t1762 + t1540 * t1764 + t1544 * t1766 + (t1726 * t2023 + t1728 * t2017 + t1730 * t2011) * t1943, 0; t1655, 0, 0, t1650, t1648, (t1924 * t1955 + t1927 * t1954 + t1930 * t1953) * t1918, (t1933 * t1955 + t1936 * t1954 + t1939 * t1953) * t1918, t1722 * t2237 + t1723 * t2236 + t1724 * t2235 + (t1741 * t1762 + t1743 * t1764 + t1745 * t1766) * t1919, t1641 * t2308 + t1642 * t2306 + t1645 * t2304 + t1722 * t2072 + t1723 * t2069 - t1724 * t2066, t1643 * t2308 + t1644 * t2306 + t1646 * t2304 - t1722 * t2071 - t1723 * t2068 - t1724 * t2065, (t1583 * t1787 + t1703 * t2244) * t1801 + (t1582 * t1785 + t1702 * t2245) * t1799 + (t1581 * t1783 + t1701 * t2246) * t1797, t1578 * t2308 + t1579 * t2306 + t1580 * t2304 + t1686 * t1710 + t1687 * t1711 + t1688 * t1712, (t1787 * t1622 - t1724 * t2229) * t1801 + (t1785 * t1621 - t1723 * t2231) * t1799 + (t1783 * t1620 - t1722 * t2233) * t1797 + (t1701 * t2242 + t1702 * t2240 + t1703 * t2238) * t1943, (t1625 * t1787 - t1724 * t1748) * t1801 + (t1624 * t1785 - t1723 * t1747) * t1799 + (t1623 * t1783 - t1722 * t1746) * t1797 + (t1698 * t2242 + t1699 * t2240 + t1700 * t2238) * t1943, (-t1726 * t2234 - t1728 * t2232 - t1730 * t2230) * t1943 + (t1746 * t2218 + t1747 * t2211 + t1748 * t2204) * t1918, t1722 * t2194 + t1723 * t2190 - t1724 * t2186 + t1561 * t1762 + t1563 * t1764 + t1565 * t1766 + (-t1726 * t2006 - t1728 * t2003 - t1730 * t2000) * t1943, -t1722 * t1997 - t1723 * t1996 + t1724 * t1995 + t1560 * t1762 + t1562 * t1764 + t1564 * t1766 + (t1726 * t2005 + t1728 * t2002 + t1730 * t1999) * t1943, 0; t1628, 0, 0, t1627, t1626, (t1924 * t1968 + t1927 * t1964 + t1930 * t1960) * t1918, (t1933 * t1968 + t1936 * t1964 + t1939 * t1960) * t1918, t1677 * t1707 + t1681 * t1708 + t1685 * t1709 + (t1677 * t1761 + t1681 * t1763 + t1685 * t1765) * t1919, t1585 * t2309 + t1587 * t2307 + t1594 * t2305 + t1719 * t2103 + t1720 * t2099 - t1721 * t2095, t1589 * t2309 + t1591 * t2307 + t1595 * t2305 - t1719 * t2102 - t1720 * t2098 - t1721 * t2094, (t1559 * t1786 + t1640 * t2247) * t1801 + (t1557 * t1784 + t1638 * t2248) * t1799 + (t1555 * t1782 + t1636 * t2249) * t1797, t1549 * t2309 + t1551 * t2307 + t1553 * t2305 + t1603 * t1707 + t1605 * t1708 + t1607 * t1709, (t1571 * t1786 - t1694 * t2247) * t1801 + (t1569 * t1784 - t1692 * t2248) * t1799 + (t1567 * t1782 - t1690 * t2249) * t1797 + (t1636 * t2243 + t1638 * t2241 + t1640 * t2239) * t1943, (t1577 * t1786 - t1694 * t1721) * t1801 + (t1575 * t1784 - t1692 * t1720) * t1799 + (t1573 * t1782 - t1690 * t1719) * t1797 + (t1630 * t2243 + t1632 * t2241 + t1634 * t2239) * t1943, (-t1690 * t2243 - t1692 * t2241 - t1694 * t2239) * t1943 + (t1690 * t2221 + t1692 * t2214 + t1694 * t2207) * t1918, t1719 * t2217 + t1720 * t2210 - t1721 * t2203 + t1539 * t1761 + t1543 * t1763 + t1547 * t1765 + (-t1725 * t2021 - t1727 * t2015 - t1729 * t2009) * t1943, -t1719 * t2019 - t1720 * t2013 + t1721 * t2007 + t1538 * t1761 + t1542 * t1763 + t1546 * t1765 + (t1725 * t2020 + t1727 * t2014 + t1729 * t2008) * t1943, 0; t1776 * t1798 + t1778 * t1800 + t1780 * t1802, 0, 0, (t1776 * t2383 + t1778 * t2377 + t1780 * t2371) * t1904, (t1776 * t2180 + t1778 * t2176 + t1780 * t2172) * t2422, (t1924 * t1988 + t1927 * t1986 + t1930 * t1984) * t1918, (t1933 * t1988 + t1936 * t1986 + t1939 * t1984) * t1918, t1675 * t1707 + t1679 * t1708 + t1683 * t1709 + (t1675 * t1761 + t1679 * t1763 + t1683 * t1765) * t1919, t1584 * t2309 + t1586 * t2307 + t1592 * t2305 + t1719 * t2105 + t1720 * t2101 - t1721 * t2097, t1588 * t2309 + t1590 * t2307 + t1593 * t2305 - t1719 * t2104 - t1720 * t2100 - t1721 * t2096, (t1558 * t1786 + t1639 * t2247) * t1801 + (t1556 * t1784 + t1637 * t2248) * t1799 + (t1554 * t1782 + t1635 * t2249) * t1797, t1548 * t2309 + t1550 * t2307 + t1552 * t2305 + t1602 * t1707 + t1604 * t1708 + t1606 * t1709, (t1570 * t1786 - t1693 * t2247) * t1801 + (t1568 * t1784 - t1691 * t2248) * t1799 + (t1566 * t1782 - t1689 * t2249) * t1797 + (t1635 * t2243 + t1637 * t2241 + t1639 * t2239) * t1943, (t1576 * t1786 - t1693 * t1721) * t1801 + (t1574 * t1784 - t1691 * t1720) * t1799 + (t1572 * t1782 - t1689 * t1719) * t1797 + (t1629 * t2243 + t1631 * t2241 + t1633 * t2239) * t1943, (-t1689 * t2243 - t1691 * t2241 - t1693 * t2239) * t1943 + (t1689 * t2221 + t1691 * t2214 + t1693 * t2207) * t1918, (-t1721 * t2372 + (-t1729 * t2077 + t1545) * t1801) * t1786 + (t1720 * t2378 + (-t1727 * t2084 + t1541) * t1799) * t1784 + (t1719 * t2384 + (-t1725 * t2091 + t1537) * t1797) * t1782, (t1721 * t2055 + (t1729 * t2076 + t1544) * t1801) * t1786 + (-t1720 * t2058 + (t1727 * t2083 + t1540) * t1799) * t1784 + (-t1719 * t2061 + (t1725 * t2090 + t1536) * t1797) * t1782, 1; t1654, 0, 0, t1649, t1647, (t1924 * t1958 + t1927 * t1957 + t1930 * t1956) * t1918, (t1933 * t1958 + t1936 * t1957 + t1939 * t1956) * t1918, t1719 * t2237 + t1720 * t2236 + t1721 * t2235 + (t1741 * t1761 + t1743 * t1763 + t1745 * t1765) * t1919, t1641 * t2309 + t1642 * t2307 + t1645 * t2305 + t1719 * t2072 + t1720 * t2069 - t1721 * t2066, t1643 * t2309 + t1644 * t2307 + t1646 * t2305 - t1719 * t2071 - t1720 * t2068 - t1721 * t2065, (t1583 * t1786 + t1703 * t2247) * t1801 + (t1582 * t1784 + t1702 * t2248) * t1799 + (t1581 * t1782 + t1701 * t2249) * t1797, t1578 * t2309 + t1579 * t2307 + t1580 * t2305 + t1686 * t1707 + t1687 * t1708 + t1688 * t1709, (t1622 * t1786 - t1721 * t2229) * t1801 + (t1621 * t1784 - t1720 * t2231) * t1799 + (t1620 * t1782 - t1719 * t2233) * t1797 + (t1701 * t2243 + t1702 * t2241 + t1703 * t2239) * t1943, (t1625 * t1786 - t1721 * t1748) * t1801 + (t1624 * t1784 - t1720 * t1747) * t1799 + (t1623 * t1782 - t1719 * t1746) * t1797 + (t1698 * t2243 + t1699 * t2241 + t1700 * t2239) * t1943, (-t1725 * t2234 - t1727 * t2232 - t1729 * t2230) * t1943 + (t1746 * t2221 + t1747 * t2214 + t1748 * t2207) * t1918, t1719 * t2194 + t1720 * t2190 - t1721 * t2186 + t1561 * t1761 + t1563 * t1763 + t1565 * t1765 + (-t1725 * t2006 - t1727 * t2003 - t1729 * t2000) * t1943, -t1719 * t1997 - t1720 * t1996 + t1721 * t1995 + t1560 * t1761 + t1562 * t1763 + t1564 * t1765 + (t1725 * t2005 + t1727 * t2002 + t1729 * t1999) * t1943, 0; t1655, 0, 0, t1650, t1648, (t1924 * t1967 + t1927 * t1963 + t1930 * t1959) * t1918, (t1933 * t1967 + t1936 * t1963 + t1939 * t1959) * t1918, t1677 * t1749 + t1681 * t1750 + t1685 * t1751 + (t1677 * t1773 + t1681 * t1774 + t1685 * t1775) * t1919, t1585 * t2303 + t1587 * t2302 + t1594 * t2301 + t1752 * t2103 + t1753 * t2099 - t1754 * t2095, t1589 * t2303 + t1591 * t2302 + t1595 * t2301 - t1752 * t2102 - t1753 * t2098 - t1754 * t2094, (t1559 * t1796 + t1640 * t2226) * t1801 + (t1557 * t1795 + t1638 * t2227) * t1799 + (t1555 * t1794 + t1636 * t2228) * t1797, t1549 * t2303 + t1551 * t2302 + t1553 * t2301 + t1603 * t1749 + t1605 * t1750 + t1607 * t1751, (t1796 * t1571 - t1694 * t2226) * t1801 + (t1795 * t1569 - t1692 * t2227) * t1799 + (t1794 * t1567 - t1690 * t2228) * t1797 + (-t1636 * t2225 - t1638 * t2224 - t1640 * t2223) * t2344, (t1577 * t1796 - t1694 * t1754) * t1801 + (t1575 * t1795 - t1692 * t1753) * t1799 + (t1573 * t1794 - t1690 * t1752) * t1797 + (-t1630 * t2225 - t1632 * t2224 - t1634 * t2223) * t2344, (t1690 * t2195 + t1692 * t2191 + t1694 * t2187 + (t1690 * t2225 + t1692 * t2224 + t1694 * t2223) * t1943) * t1918, t1752 * t2217 + t1753 * t2210 - t1754 * t2203 + t1539 * t1773 + t1543 * t1774 + t1547 * t1775 + (t1767 * t2021 + t1768 * t2015 + t1769 * t2009) * t2344, -t1752 * t2019 - t1753 * t2013 + t1754 * t2007 + t1538 * t1773 + t1542 * t1774 + t1546 * t1775 + (-t1767 * t2020 - t1768 * t2014 - t1769 * t2008) * t2344, 0; t1654, 0, 0, t1649, t1647, (t1924 * t1969 + t1927 * t1965 + t1930 * t1961) * t1918, (t1933 * t1969 + t1936 * t1965 + t1939 * t1961) * t1918, t1675 * t1749 + t1679 * t1750 + t1683 * t1751 + (t1675 * t1773 + t1679 * t1774 + t1683 * t1775) * t1919, t1584 * t2303 + t1586 * t2302 + t1592 * t2301 + t1752 * t2105 + t1753 * t2101 - t1754 * t2097, t1588 * t2303 + t1590 * t2302 + t1593 * t2301 - t1752 * t2104 - t1753 * t2100 - t1754 * t2096, (t1558 * t1796 + t1639 * t2226) * t1801 + (t1556 * t1795 + t1637 * t2227) * t1799 + (t1554 * t1794 + t1635 * t2228) * t1797, t1548 * t2303 + t1550 * t2302 + t1552 * t2301 + t1602 * t1749 + t1604 * t1750 + t1606 * t1751, (t1796 * t1570 - t1693 * t2226) * t1801 + (t1795 * t1568 - t1691 * t2227) * t1799 + (t1794 * t1566 - t1689 * t2228) * t1797 + (-t1635 * t2225 - t1637 * t2224 - t1639 * t2223) * t2344, (t1576 * t1796 - t1693 * t1754) * t1801 + (t1574 * t1795 - t1691 * t1753) * t1799 + (t1572 * t1794 - t1689 * t1752) * t1797 + (-t1629 * t2225 - t1631 * t2224 - t1633 * t2223) * t2344, (t1689 * t2195 + t1691 * t2191 + t1693 * t2187 + (t1689 * t2225 + t1691 * t2224 + t1693 * t2223) * t1943) * t1918, t1752 * t2220 + t1753 * t2213 - t1754 * t2206 + t1537 * t1773 + t1541 * t1774 + t1545 * t1775 + (t1767 * t2024 + t1768 * t2018 + t1769 * t2012) * t2344, -t1752 * t2022 - t1753 * t2016 + t1754 * t2010 + t1536 * t1773 + t1540 * t1774 + t1544 * t1775 + (-t1767 * t2023 - t1768 * t2017 - t1769 * t2011) * t2344, 0; t1788 * t1798 + t1789 * t1800 + t1790 * t1802, 0, 0, (t1788 * t2383 + t1789 * t2377 + t1790 * t2371) * t1904, (t1788 * t2180 + t1789 * t2176 + t1790 * t2172) * t2422, (t1924 * t1982 + t1927 * t1981 + t1930 * t1980) * t1918, (t1933 * t1982 + t1936 * t1981 + t1939 * t1980) * t1918, t1741 * t1749 + t1743 * t1750 + t1745 * t1751 + (t1741 * t1773 + t1743 * t1774 + t1745 * t1775) * t1919, t1641 * t2303 + t1642 * t2302 + t1645 * t2301 + t1752 * t2072 + t1753 * t2069 - t1754 * t2066, t1643 * t2303 + t1644 * t2302 + t1646 * t2301 - t1752 * t2071 - t1753 * t2068 - t1754 * t2065, (t1583 * t1796 + t1703 * t2226) * t1801 + (t1582 * t1795 + t1702 * t2227) * t1799 + (t1581 * t1794 + t1701 * t2228) * t1797, t1578 * t2303 + t1579 * t2302 + t1580 * t2301 + t1686 * t1749 + t1687 * t1750 + t1688 * t1751, (t1796 * t1622 - t1748 * t2226) * t1801 + (t1795 * t1621 - t1747 * t2227) * t1799 + (t1794 * t1620 - t1746 * t2228) * t1797 + (-t1701 * t2225 - t1702 * t2224 - t1703 * t2223) * t2344, (t1625 * t1796 - t1748 * t1754) * t1801 + (t1624 * t1795 - t1747 * t1753) * t1799 + (t1623 * t1794 - t1746 * t1752) * t1797 + (-t1698 * t2225 - t1699 * t2224 - t1700 * t2223) * t2344, (t1746 * t2195 + t1747 * t2191 + t1748 * t2187 + (t1746 * t2225 + t1747 * t2224 + t1748 * t2223) * t1943) * t1918, (-t1754 * t2372 + (t1826 * t2025 + t1565) * t1801) * t1796 + (t1753 * t2378 + (t1825 * t2026 + t1563) * t1799) * t1795 + (t1752 * t2384 + (t1824 * t2027 + t1561) * t1797) * t1794, (t1754 * t2055 + (-t1829 * t2025 + t1564) * t1801) * t1796 + (-t1753 * t2058 + (-t1828 * t2026 + t1562) * t1799) * t1795 + (-t1752 * t2061 + (-t1827 * t2027 + t1560) * t1797) * t1794, 1;];
tau_reg  = t1;
