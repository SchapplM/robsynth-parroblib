% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRRRR10V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR10V1G2A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 22:49
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR10V1G2A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(6,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P3RRRRR10V1G2A0_invdyn_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 22:36:22
% EndTime: 2020-08-06 22:42:16
% DurationCPUTime: 367.57s
% Computational Cost: add. (2984712->2086), mult. (7524342->3545), div. (97632->23), fcn. (5963286->26), ass. (0->1318)
t5049 = cos(qJ(1,3));
t5032 = legFrame(3,2);
t4970 = sin(t5032);
t4952 = t4970 * g(2);
t4973 = cos(t5032);
t5799 = t4973 * g(1);
t5893 = -t5799 + t4952;
t4881 = t5893 * t5049;
t5040 = sin(qJ(1,3));
t4982 = g(3) * t5040;
t4864 = t4982 + t4881;
t5052 = cos(qJ(1,2));
t5033 = legFrame(2,2);
t4971 = sin(t5033);
t4953 = t4971 * g(2);
t4974 = cos(t5033);
t5798 = t4974 * g(1);
t5894 = -t5798 + t4953;
t4884 = t5894 * t5052;
t5043 = sin(qJ(1,2));
t4983 = g(3) * t5043;
t4865 = t4983 + t4884;
t5055 = cos(qJ(1,1));
t5034 = legFrame(1,2);
t4972 = sin(t5034);
t4954 = t4972 * g(2);
t4975 = cos(t5034);
t5797 = t4975 * g(1);
t5895 = -t5797 + t4954;
t4887 = t5895 * t5055;
t5046 = sin(qJ(1,1));
t4984 = g(3) * t5046;
t4866 = t4984 + t4887;
t5045 = sin(qJ(2,1));
t4990 = pkin(1) * t5045;
t4948 = t4990 + pkin(6);
t5044 = sin(qJ(3,1));
t4980 = t5044 * pkin(2);
t4943 = t4980 + pkin(5);
t5025 = cos(pkin(3));
t5003 = t5025 ^ 2;
t5833 = t5003 - 0.1e1;
t5311 = t5833 * t5055 * t4943;
t5024 = sin(pkin(3));
t5657 = t5024 * t5046;
t4836 = t4948 * t5657 + t5045 * t5311;
t4981 = t5045 * pkin(6);
t4944 = 0.2e1 * t4981 + pkin(1);
t4842 = t4944 * t5657 + t5311;
t5640 = t5025 * t5055;
t5388 = t5024 * t5640;
t5259 = t4972 * t5388;
t4862 = t4975 * t5003 - t4975 + t5259;
t5690 = t5003 * t5045;
t5513 = pkin(6) * t5690;
t5911 = t4981 + pkin(1);
t4896 = -t5513 + t5911;
t5491 = t5833 * pkin(6);
t4920 = t4990 - t5491;
t5054 = cos(qJ(2,1));
t5021 = t5054 ^ 2;
t5066 = pkin(6) ^ 2;
t5053 = cos(qJ(3,1));
t5017 = t5053 ^ 2;
t5069 = pkin(2) ^ 2;
t5675 = t5017 * t5069;
t5344 = -t5066 + t5675;
t5213 = t5024 * t5344;
t5216 = t5388 * t4981;
t5658 = t5024 * t5045;
t5407 = t4943 * t5658;
t5262 = t5025 * t5407;
t5391 = t5045 * t5675;
t5667 = t5024 * t5025;
t5408 = t4943 * t5667;
t5806 = pkin(2) * t5053;
t5577 = pkin(6) * t5806;
t5493 = -0.2e1 * t5577;
t5699 = t4972 * t5046;
t4745 = (t4862 * t5493 + t5213 * t5699) * t5021 + (t4862 * t5391 + (t4842 * t4972 - t4975 * t5408) * t5806 + (t4896 * t4975 - t4972 * t5216) * pkin(6)) * t5054 - (-pkin(6) * t5259 + t4920 * t4975) * t5806 + pkin(6) * (t4836 * t4972 - t4975 * t5262);
t5036 = xDDP(2);
t5018 = 0.1e1 / t5053;
t4961 = pkin(1) * t4980;
t4890 = t5024 * (-pkin(5) * t4981 + t4961);
t5821 = pkin(1) * t5025;
t4955 = pkin(6) * t5821;
t5617 = t5045 * t5053;
t5529 = pkin(2) * t5617;
t5652 = t5024 * t5053;
t5539 = pkin(2) * t5652;
t4821 = (-pkin(5) * t5539 + t4955) * t5054 - t5529 * t5821 + t4890;
t4814 = 0.1e1 / t4821;
t5070 = 0.1e1 / pkin(2);
t5739 = t4814 * t5070;
t5419 = t5018 * t5739;
t4733 = t4745 * t5036 * t5419;
t5256 = t4975 * t5388;
t4863 = t4972 * t5003 - t4972 - t5256;
t5211 = t5046 * t5344;
t4746 = (-t4975 * t5024 * t5211 + t4863 * t5493) * t5021 + (t4863 * t5391 - (t4842 * t4975 + t4972 * t5408) * t5806 + pkin(6) * (t4896 * t4972 + t4975 * t5216)) * t5054 - (pkin(6) * t5256 + t4920 * t4972) * t5806 - pkin(6) * (t4836 * t4975 + t4972 * t5262);
t5037 = xDDP(1);
t4734 = t4746 * t5037 * t5419;
t5492 = 0.2e1 * t5577;
t5643 = t5025 * t5045;
t4794 = (t5025 * t5046 * t5492 + t5055 * t5344) * t5021 + ((t4943 * t5657 + t4944 * t5055) * t5806 - t5211 * t5643) * t5054 + (t4948 * t5055 + (-t5025 * t5806 + t5407) * t5046) * pkin(6);
t5056 = xDP(3);
t5057 = xDP(2);
t5058 = xDP(1);
t5174 = t4972 * t5057 - t4975 * t5058;
t4857 = t5046 * t5056 + t5055 * t5174;
t4878 = t4972 * t5058 + t4975 * t5057;
t5715 = t4878 * t5054;
t4872 = pkin(6) * t5715;
t4809 = pkin(5) * t4857 - t4872;
t4854 = t5046 * t5174 - t5055 * t5056;
t4875 = pkin(5) * t4878;
t5696 = (t5054 + 0.1e1) * (t5054 - 0.1e1);
t5803 = pkin(6) * t5024;
t5323 = t5696 * t5803;
t5616 = t5045 * t5054;
t5382 = t5024 * t5616;
t5811 = pkin(2) * t5045;
t5500 = t4857 * t5811;
t4967 = t5021 - 0.2e1;
t5554 = t4967 * t4980;
t5560 = -0.2e1 * t5658;
t5800 = pkin(6) * t5054;
t4851 = t4857 * t5800;
t5588 = t4851 + t4875;
t5718 = t4854 * t5024;
t5815 = pkin(2) * t5017;
t5825 = 0.2e1 * t5017 - 0.1e1;
t4686 = ((-t4878 * t5554 + t5588) * t5053 + (-pkin(2) * t4857 * t5825 + t4809 * t5044) * t5045) * t5003 + (-(t4854 * t5054 + t4878 * t5560) * t5815 + ((-t4857 * t5554 + t4809) * t5024 - t5911 * t4854) * t5053 - (pkin(2) * t4878 + t5044 * t5588) * t5658) * t5025 + t5017 * t5500 + ((t4854 * t5382 + t4878 * t5696) * t4980 - t4875) * t5053 + ((pkin(1) * t5718 - t4809) * t5045 - t4854 * t5323 + pkin(1) * t5715) * t5044 - t5500;
t4908 = -t5529 + t5800;
t5709 = t4908 * t5025;
t5612 = t5053 * t5054;
t5898 = -pkin(2) * t5612 - t4981;
t4839 = pkin(1) * t5709 + (t5898 * pkin(5) + t4961) * t5024;
t4831 = 0.1e1 / t4839;
t5722 = t4831 * t5018;
t4680 = t4686 * t5722;
t4670 = pkin(6) * t4680;
t5144 = -t4857 * t5667 - t4878 * t5003;
t4806 = -t4878 - t5144;
t5096 = (t4857 * t5003 - t4878 * t5667 - t4857) * t4943;
t5126 = t5144 * pkin(6);
t4710 = (t4806 * t5493 + t4854 * t5213) * t5021 + (t4806 * t5391 + (t4944 * t5718 + t5096) * t5806 + (t4878 * t5911 + t5045 * t5126) * pkin(6)) * t5054 - (t4878 * t4948 + t5126) * t5806 + pkin(6) * (t4948 * t5718 + t5045 * t5096);
t5740 = t4814 * t5018;
t5458 = t4710 * t5740;
t4692 = t5044 * t5458;
t4602 = t4692 - t4670;
t4776 = (-t4851 + pkin(2) * (t4857 * t5617 - t4878 * t5044)) * t5025 + (t4872 - (t4857 * t5044 + t4878 * t5617) * pkin(2)) * t5024 - t5898 * t4854;
t5756 = t4776 * t4831;
t4761 = t5025 * t5756;
t4632 = t4761 + t4680;
t4993 = pkin(1) * t5021;
t5062 = pkin(6) / 0.2e1;
t5376 = t4776 * t5616;
t5265 = t4831 * t5376;
t5183 = t4943 * t5265;
t5706 = t5911 * t5024;
t5770 = t4686 * t5018;
t5253 = t5706 * t5770;
t5702 = (t5025 + 0.1e1) * (t5025 - 0.1e1);
t5267 = t5702 * t5756;
t5019 = 0.1e1 / t5053 ^ 2;
t5651 = t5024 * t5054;
t5517 = pkin(5) * t5651;
t5733 = 0.1e1 / (-(pkin(1) * t5643 + t5517) * t5806 + t5054 * t4955 + t4890) * t5019;
t5771 = t4686 * t4831;
t5294 = t5733 * t5771;
t5326 = pkin(6) * t4761;
t5016 = t5053 * t5017;
t5814 = pkin(2) * t5024;
t5650 = t5069 * t5814;
t5392 = t5016 * t5650;
t5413 = t4831 * t5675;
t5516 = pkin(6) * t5702;
t5600 = t4670 / 0.2e1 - t4692 / 0.2e1;
t5207 = (t5054 * t4632 * t5392 + (t5253 + (t4943 * t5616 * t5702 + (t4981 + t4993) * t5667) * t4776) * t5413 + (((t4990 + t5062) * t4761 + t5600) * t5651 + (-t5021 + 0.1e1 / 0.2e1) * t4943 * t5267) * t5492 - pkin(6) * (t5183 * t5516 + (t5326 * t4993 + (-t5326 + t4602) * t5911) * t5024)) * t5294;
t5286 = t4710 * t5419;
t5222 = pkin(5) * t5286;
t4605 = -t4670 + t5222;
t4664 = pkin(1) * t4680;
t4923 = t4993 - t5911;
t4942 = pkin(5) * t5044 + pkin(2);
t4698 = pkin(1) * t5286;
t5165 = t5054 * t4698;
t5167 = t5024 * t4698;
t5250 = t5045 * t5458;
t5314 = t5833 * t5616;
t4960 = pkin(5) * t4980;
t5581 = t5069 - t5066;
t5360 = t4960 + t5581;
t5459 = t4710 * t5733;
t5538 = pkin(2) * t5651;
t5644 = t5025 * t5044;
t5778 = t4605 * t5045;
t5308 = ((t5054 * t5267 * t5911 + t5167) * t5815 + (t5360 * t5021 * t5267 - (-t5458 + (t4761 * t4948 - t4605) * t5044) * t5538 + pkin(1) * t5250 * t5644) * t5053 + (-t5165 * t5644 - t5024 * ((t4664 - t5778) * t5044 - t5250) + (t4923 * t5024 * t5644 + t5833 * t5053 * t4948 + t4942 * t5314) * t5756) * pkin(6)) * t5459;
t4659 = -0.2e1 * t4670;
t4704 = pkin(2) * t5458;
t5067 = pkin(5) ^ 2;
t5000 = t5067 + t5069;
t5072 = pkin(1) ^ 2;
t5358 = t5072 + t5000;
t4927 = t5066 + t5358;
t4933 = t4981 / 0.2e1 + pkin(1);
t4951 = 0.2e1 * t4960;
t4964 = pkin(1) * t4981;
t5020 = t5054 * t5021;
t5877 = 0.2e1 * pkin(6);
t5023 = pkin(1) * t5877;
t5060 = -0.3e1 * t5066;
t4667 = t5066 * t4680;
t5141 = -pkin(6) * t4692 + t4667;
t5166 = t5045 * t4698;
t5189 = t5053 * t5267;
t5269 = t4943 * t4761;
t5234 = 0.2e1 * t5269;
t5244 = 0.3e1 * t5066 + t5358;
t5769 = t4686 * t5025;
t5472 = t5018 * t5769;
t5341 = pkin(1) * t5472;
t5353 = t5024 * t4955;
t5357 = -0.2e1 * t5516;
t5584 = t5067 / 0.2e1 + t5069 / 0.2e1;
t5359 = t5066 + t5584;
t5293 = t5044 * t4680;
t4650 = pkin(2) * t5293;
t4663 = pkin(5) * t4680;
t4695 = pkin(6) * t5286;
t5597 = t4663 + t4695;
t5363 = t4650 + t5597;
t5406 = t5069 * t5702;
t5553 = pkin(2) * t5702;
t5237 = pkin(6) * t4663;
t5603 = t5237 / 0.2e1 + pkin(6) * t5269;
t5609 = t5363 * t5045 + t4698;
t5689 = t5003 * t5066;
t5721 = t4831 * t5024;
t5857 = -0.2e1 * t5003;
t5370 = t5770 / 0.2e1;
t5587 = t5003 - 0.1e1 / 0.2e1;
t5868 = 0.2e1 * (t4776 * t5587 + t5025 * t5370) * t4831;
t5878 = -0.2e1 * pkin(6);
t5880 = 0.2e1 * pkin(1);
t5482 = (-(t5060 + t5675) * t5020 * t5189 * t5814 + (t4602 * t5353 + (t5341 * t5675 + ((t5880 + 0.3e1 * t4981 - 0.3e1 * t5513) * t5675 + pkin(6) * (t4933 * t5878 + t5045 * t5689)) * t4776) * t5721) * t5021 + (t5392 * t5868 + (t5045 * t5234 + t5609) * t5017 * t5406 + ((-(t4692 + t4659) * t4990 + t5141) * t5025 + ((t4960 + t5359) * t5857 + t4951 + 0.4e1 * t4964 + t5244) * t5756) * t5539 + t5045 * (-t4605 * t4980 / 0.2e1 - t4704 / 0.2e1 + t5603) * t5357) * t5054 + (t5391 * t5868 - t4602 * t5911 * t5025 + (t5023 + ((t4960 + t5584) * t5857 + t4951 + t4927) * t5045) * t5756) * t5803 + (((t4659 + t5222) * t4980 + t4704 - t5066 * t5286 - 0.4e1 * t5603) * t5021 + pkin(6) * (t5166 + t5234 + t5363)) * t5053 * t5553) * t5756;
t5035 = xDDP(3);
t5666 = t5024 * t5035;
t4467 = -((t5018 * (t4794 * t5666 + t5482) + t5308) * t4814 + t5207) * t5070 + t4733 + t4734;
t5042 = sin(qJ(2,2));
t4989 = pkin(1) * t5042;
t4947 = t4989 + pkin(6);
t5041 = sin(qJ(3,2));
t4978 = t5041 * pkin(2);
t4939 = t4978 + pkin(5);
t5312 = t5833 * t5052 * t4939;
t5660 = t5024 * t5043;
t4835 = t4947 * t5660 + t5042 * t5312;
t4979 = t5042 * pkin(6);
t4940 = 0.2e1 * t4979 + pkin(1);
t4841 = t4940 * t5660 + t5312;
t5641 = t5025 * t5052;
t5389 = t5024 * t5641;
t5260 = t4971 * t5389;
t4860 = t4974 * t5003 - t4974 + t5260;
t5691 = t5003 * t5042;
t5514 = pkin(6) * t5691;
t5912 = t4979 + pkin(1);
t4895 = -t5514 + t5912;
t4919 = t4989 - t5491;
t5051 = cos(qJ(2,2));
t5015 = t5051 ^ 2;
t5050 = cos(qJ(3,2));
t5011 = t5050 ^ 2;
t5681 = t5011 * t5069;
t5345 = -t5066 + t5681;
t5214 = t5024 * t5345;
t5217 = t5389 * t4979;
t5661 = t5024 * t5042;
t5409 = t4939 * t5661;
t5263 = t5025 * t5409;
t5393 = t5042 * t5681;
t5410 = t4939 * t5667;
t5808 = pkin(2) * t5050;
t5578 = pkin(6) * t5808;
t5495 = -0.2e1 * t5578;
t5700 = t4971 * t5043;
t4743 = (t4860 * t5495 + t5214 * t5700) * t5015 + (t4860 * t5393 + (t4841 * t4971 - t4974 * t5410) * t5808 + (t4895 * t4974 - t4971 * t5217) * pkin(6)) * t5051 - (-pkin(6) * t5260 + t4919 * t4974) * t5808 + pkin(6) * (t4835 * t4971 - t4974 * t5263);
t5012 = 0.1e1 / t5050;
t4959 = pkin(1) * t4978;
t4889 = t5024 * (-pkin(5) * t4979 + t4959);
t5625 = t5042 * t5050;
t5531 = pkin(2) * t5625;
t5654 = t5024 * t5050;
t5541 = pkin(2) * t5654;
t4820 = (-pkin(5) * t5541 + t4955) * t5051 - t5531 * t5821 + t4889;
t4812 = 0.1e1 / t4820;
t5741 = t4812 * t5070;
t5420 = t5012 * t5741;
t4731 = t4743 * t5036 * t5420;
t5257 = t4974 * t5389;
t4861 = t4971 * t5003 - t4971 - t5257;
t5210 = t5345 * t5043;
t4744 = (-t4974 * t5024 * t5210 + t4861 * t5495) * t5015 + (t4861 * t5393 - (t4841 * t4974 + t4971 * t5410) * t5808 + pkin(6) * (t4895 * t4971 + t4974 * t5217)) * t5051 - (pkin(6) * t5257 + t4919 * t4971) * t5808 - pkin(6) * (t4835 * t4974 + t4971 * t5263);
t4732 = t4744 * t5037 * t5420;
t5494 = 0.2e1 * t5578;
t5645 = t5025 * t5042;
t4793 = (t5025 * t5043 * t5494 + t5052 * t5345) * t5015 + ((t4939 * t5660 + t4940 * t5052) * t5808 - t5210 * t5645) * t5051 + (t4947 * t5052 + (-t5025 * t5808 + t5409) * t5043) * pkin(6);
t5175 = t4971 * t5057 - t4974 * t5058;
t4856 = t5043 * t5056 + t5052 * t5175;
t4877 = t4971 * t5058 + t4974 * t5057;
t5716 = t4877 * t5051;
t4871 = pkin(6) * t5716;
t4808 = pkin(5) * t4856 - t4871;
t4853 = t5043 * t5175 - t5052 * t5056;
t4874 = pkin(5) * t4877;
t5697 = (t5051 + 0.1e1) * (t5051 - 0.1e1);
t5324 = t5697 * t5803;
t5624 = t5042 * t5051;
t5384 = t5024 * t5624;
t5812 = pkin(2) * t5042;
t5501 = t4856 * t5812;
t4966 = t5015 - 0.2e1;
t5555 = t4966 * t4978;
t5561 = -0.2e1 * t5661;
t5801 = pkin(6) * t5051;
t4850 = t4856 * t5801;
t5589 = t4850 + t4874;
t5719 = t4853 * t5024;
t5816 = pkin(2) * t5011;
t5828 = 0.2e1 * t5011 - 0.1e1;
t4685 = ((-t4877 * t5555 + t5589) * t5050 + (-pkin(2) * t4856 * t5828 + t4808 * t5041) * t5042) * t5003 + (-(t4853 * t5051 + t4877 * t5561) * t5816 + ((-t4856 * t5555 + t4808) * t5024 - t5912 * t4853) * t5050 - (pkin(2) * t4877 + t5041 * t5589) * t5661) * t5025 + t5011 * t5501 + ((t4853 * t5384 + t4877 * t5697) * t4978 - t4874) * t5050 + ((pkin(1) * t5719 - t4808) * t5042 - t4853 * t5324 + pkin(1) * t5716) * t5041 - t5501;
t4907 = -t5531 + t5801;
t5710 = t4907 * t5025;
t5613 = t5050 * t5051;
t5897 = -pkin(2) * t5613 - t4979;
t4838 = pkin(1) * t5710 + (t5897 * pkin(5) + t4959) * t5024;
t4828 = 0.1e1 / t4838;
t5726 = t4828 * t5012;
t4678 = t4685 * t5726;
t4669 = pkin(6) * t4678;
t5145 = -t4856 * t5667 - t4877 * t5003;
t4805 = -t4877 - t5145;
t5097 = (t4856 * t5003 - t4877 * t5667 - t4856) * t4939;
t5127 = t5145 * pkin(6);
t4709 = (t4805 * t5495 + t4853 * t5214) * t5015 + (t4805 * t5393 + (t4940 * t5719 + t5097) * t5808 + (t4877 * t5912 + t5042 * t5127) * pkin(6)) * t5051 - (t4877 * t4947 + t5127) * t5808 + pkin(6) * (t4947 * t5719 + t5042 * t5097);
t5742 = t4812 * t5012;
t5461 = t4709 * t5742;
t4691 = t5041 * t5461;
t4601 = t4691 - t4669;
t4775 = (-t4850 + pkin(2) * (t4856 * t5625 - t4877 * t5041)) * t5025 + (t4871 - (t4856 * t5041 + t4877 * t5625) * pkin(2)) * t5024 - t5897 * t4853;
t5759 = t4775 * t4828;
t4760 = t5025 * t5759;
t4630 = t4760 + t4678;
t4992 = pkin(1) * t5015;
t5379 = t4775 * t5624;
t5270 = t4828 * t5379;
t5184 = t4939 * t5270;
t5707 = t5912 * t5024;
t5773 = t4685 * t5012;
t5254 = t5707 * t5773;
t5272 = t5702 * t5759;
t5013 = 0.1e1 / t5050 ^ 2;
t5653 = t5024 * t5051;
t5518 = pkin(5) * t5653;
t5734 = 0.1e1 / (-(pkin(1) * t5645 + t5518) * t5808 + t5051 * t4955 + t4889) * t5013;
t5774 = t4685 * t4828;
t5299 = t5734 * t5774;
t5328 = pkin(6) * t4760;
t5010 = t5050 * t5011;
t5394 = t5010 * t5650;
t5415 = t4828 * t5681;
t5601 = t4669 / 0.2e1 - t4691 / 0.2e1;
t5208 = (t5051 * t4630 * t5394 + (t5254 + (t4939 * t5624 * t5702 + (t4979 + t4992) * t5667) * t4775) * t5415 + (((t4989 + t5062) * t4760 + t5601) * t5653 + (-t5015 + 0.1e1 / 0.2e1) * t4939 * t5272) * t5494 - pkin(6) * (t5184 * t5516 + (t5328 * t4992 + (-t5328 + t4601) * t5912) * t5024)) * t5299;
t5288 = t4709 * t5420;
t5223 = pkin(5) * t5288;
t4604 = -t4669 + t5223;
t4662 = pkin(1) * t4678;
t4922 = t4992 - t5912;
t4938 = pkin(5) * t5041 + pkin(2);
t4697 = pkin(1) * t5288;
t5168 = t5051 * t4697;
t5170 = t5024 * t4697;
t5251 = t5042 * t5461;
t5315 = t5833 * t5624;
t4958 = pkin(5) * t4978;
t5361 = t4958 + t5581;
t5462 = t4709 * t5734;
t5540 = pkin(2) * t5653;
t5646 = t5025 * t5041;
t5779 = t4604 * t5042;
t5309 = ((t5051 * t5272 * t5912 + t5170) * t5816 + (t5361 * t5015 * t5272 - (-t5461 + (t4760 * t4947 - t4604) * t5041) * t5540 + pkin(1) * t5251 * t5646) * t5050 + (-t5168 * t5646 - t5024 * ((t4662 - t5779) * t5041 - t5251) + (t4922 * t5024 * t5646 + t5833 * t5050 * t4947 + t4938 * t5315) * t5759) * pkin(6)) * t5462;
t4658 = -0.2e1 * t4669;
t4703 = pkin(2) * t5461;
t4931 = t4979 / 0.2e1 + pkin(1);
t4950 = 0.2e1 * t4958;
t4963 = pkin(1) * t4979;
t5014 = t5051 * t5015;
t4666 = t5066 * t4678;
t5142 = -pkin(6) * t4691 + t4666;
t5169 = t5042 * t4697;
t5191 = t5050 * t5272;
t5274 = t4939 * t4760;
t5235 = 0.2e1 * t5274;
t5772 = t4685 * t5025;
t5475 = t5012 * t5772;
t5342 = pkin(1) * t5475;
t5298 = t5041 * t4678;
t4649 = pkin(2) * t5298;
t4661 = pkin(5) * t4678;
t4694 = pkin(6) * t5288;
t5598 = t4661 + t4694;
t5364 = t4649 + t5598;
t5238 = pkin(6) * t4661;
t5604 = t5238 / 0.2e1 + pkin(6) * t5274;
t5610 = t5364 * t5042 + t4697;
t5725 = t4828 * t5024;
t5371 = t5773 / 0.2e1;
t5869 = 0.2e1 * (t4775 * t5587 + t5025 * t5371) * t4828;
t5483 = (-(t5060 + t5681) * t5014 * t5191 * t5814 + (t4601 * t5353 + (t5342 * t5681 + ((t5880 + 0.3e1 * t4979 - 0.3e1 * t5514) * t5681 + pkin(6) * (t4931 * t5878 + t5042 * t5689)) * t4775) * t5725) * t5015 + (t5394 * t5869 + (t5042 * t5235 + t5610) * t5011 * t5406 + ((-(t4691 + t4658) * t4989 + t5142) * t5025 + ((t4958 + t5359) * t5857 + t4950 + 0.4e1 * t4963 + t5244) * t5759) * t5541 + t5042 * (-t4604 * t4978 / 0.2e1 - t4703 / 0.2e1 + t5604) * t5357) * t5051 + (t5393 * t5869 - t4601 * t5912 * t5025 + (t5023 + ((t4958 + t5584) * t5857 + t4950 + t4927) * t5042) * t5759) * t5803 + (((t4658 + t5223) * t4978 + t4703 - t5066 * t5288 - 0.4e1 * t5604) * t5015 + pkin(6) * (t5169 + t5235 + t5364)) * t5050 * t5553) * t5759;
t4466 = -((t5012 * (t4793 * t5666 + t5483) + t5309) * t4812 + t5208) * t5070 + t4731 + t4732;
t5039 = sin(qJ(2,3));
t4988 = pkin(1) * t5039;
t4946 = t4988 + pkin(6);
t5038 = sin(qJ(3,3));
t4976 = t5038 * pkin(2);
t4935 = t4976 + pkin(5);
t5313 = t5833 * t5049 * t4935;
t5663 = t5024 * t5040;
t4834 = t4946 * t5663 + t5039 * t5313;
t4977 = t5039 * pkin(6);
t4936 = 0.2e1 * t4977 + pkin(1);
t4840 = t4936 * t5663 + t5313;
t5642 = t5025 * t5049;
t5390 = t5024 * t5642;
t5261 = t4970 * t5390;
t4858 = t4973 * t5003 - t4973 + t5261;
t5692 = t5003 * t5039;
t5515 = pkin(6) * t5692;
t5913 = t4977 + pkin(1);
t4894 = -t5515 + t5913;
t4918 = t4988 - t5491;
t5048 = cos(qJ(2,3));
t5009 = t5048 ^ 2;
t5047 = cos(qJ(3,3));
t5005 = t5047 ^ 2;
t5687 = t5005 * t5069;
t5346 = -t5066 + t5687;
t5215 = t5024 * t5346;
t5218 = t5390 * t4977;
t5664 = t5024 * t5039;
t5411 = t4935 * t5664;
t5264 = t5025 * t5411;
t5395 = t5039 * t5687;
t5412 = t4935 * t5667;
t5810 = pkin(2) * t5047;
t5579 = pkin(6) * t5810;
t5497 = -0.2e1 * t5579;
t5701 = t4970 * t5040;
t4741 = (t4858 * t5497 + t5215 * t5701) * t5009 + (t4858 * t5395 + (t4840 * t4970 - t4973 * t5412) * t5810 + (t4894 * t4973 - t4970 * t5218) * pkin(6)) * t5048 - (-pkin(6) * t5261 + t4918 * t4973) * t5810 + pkin(6) * (t4834 * t4970 - t4973 * t5264);
t5006 = 0.1e1 / t5047;
t4957 = pkin(1) * t4976;
t4888 = t5024 * (-pkin(5) * t4977 + t4957);
t5633 = t5039 * t5047;
t5533 = pkin(2) * t5633;
t5656 = t5024 * t5047;
t5543 = pkin(2) * t5656;
t4819 = (-pkin(5) * t5543 + t4955) * t5048 - t5533 * t5821 + t4888;
t4810 = 0.1e1 / t4819;
t5743 = t4810 * t5070;
t5421 = t5006 * t5743;
t4729 = t4741 * t5036 * t5421;
t5258 = t4973 * t5390;
t4859 = t4970 * t5003 - t4970 - t5258;
t5212 = t5040 * t5346;
t4742 = (-t4973 * t5024 * t5212 + t4859 * t5497) * t5009 + (t4859 * t5395 - (t4840 * t4973 + t4970 * t5412) * t5810 + pkin(6) * (t4894 * t4970 + t4973 * t5218)) * t5048 - (pkin(6) * t5258 + t4918 * t4970) * t5810 - pkin(6) * (t4834 * t4973 + t4970 * t5264);
t4730 = t4742 * t5037 * t5421;
t5496 = 0.2e1 * t5579;
t5647 = t5025 * t5039;
t4792 = (t5025 * t5040 * t5496 + t5049 * t5346) * t5009 + ((t4935 * t5663 + t4936 * t5049) * t5810 - t5212 * t5647) * t5048 + (t4946 * t5049 + (-t5025 * t5810 + t5411) * t5040) * pkin(6);
t5176 = t4970 * t5057 - t4973 * t5058;
t4855 = t5040 * t5056 + t5049 * t5176;
t4876 = t4970 * t5058 + t4973 * t5057;
t5717 = t4876 * t5048;
t4870 = pkin(6) * t5717;
t4807 = pkin(5) * t4855 - t4870;
t4852 = t5040 * t5176 - t5049 * t5056;
t4873 = pkin(5) * t4876;
t5698 = (t5048 + 0.1e1) * (t5048 - 0.1e1);
t5325 = t5698 * t5803;
t5632 = t5039 * t5048;
t5386 = t5024 * t5632;
t5813 = pkin(2) * t5039;
t5503 = t4855 * t5813;
t4965 = t5009 - 0.2e1;
t5556 = t4965 * t4976;
t5562 = -0.2e1 * t5664;
t5802 = pkin(6) * t5048;
t4849 = t4855 * t5802;
t5590 = t4849 + t4873;
t5720 = t4852 * t5024;
t5817 = pkin(2) * t5005;
t5831 = 0.2e1 * t5005 - 0.1e1;
t4684 = ((-t4876 * t5556 + t5590) * t5047 + (-pkin(2) * t4855 * t5831 + t4807 * t5038) * t5039) * t5003 + (-(t4852 * t5048 + t4876 * t5562) * t5817 + ((-t4855 * t5556 + t4807) * t5024 - t5913 * t4852) * t5047 - (pkin(2) * t4876 + t5038 * t5590) * t5664) * t5025 + t5005 * t5503 + ((t4852 * t5386 + t4876 * t5698) * t4976 - t4873) * t5047 + ((pkin(1) * t5720 - t4807) * t5039 - t4852 * t5325 + pkin(1) * t5717) * t5038 - t5503;
t4906 = -t5533 + t5802;
t5711 = t4906 * t5025;
t5614 = t5047 * t5048;
t5896 = -pkin(2) * t5614 - t4977;
t4837 = pkin(1) * t5711 + (t5896 * pkin(5) + t4957) * t5024;
t4825 = 0.1e1 / t4837;
t5730 = t4825 * t5006;
t4676 = t4684 * t5730;
t4668 = pkin(6) * t4676;
t5146 = -t4855 * t5667 - t4876 * t5003;
t4804 = -t4876 - t5146;
t5098 = (t4855 * t5003 - t4876 * t5667 - t4855) * t4935;
t5128 = t5146 * pkin(6);
t4708 = (t4804 * t5497 + t4852 * t5215) * t5009 + (t4804 * t5395 + (t4936 * t5720 + t5098) * t5810 + (t4876 * t5913 + t5039 * t5128) * pkin(6)) * t5048 - (t4876 * t4946 + t5128) * t5810 + pkin(6) * (t4946 * t5720 + t5039 * t5098);
t5744 = t4810 * t5006;
t5464 = t4708 * t5744;
t4690 = t5038 * t5464;
t4600 = t4690 - t4668;
t4774 = (-t4849 + pkin(2) * (t4855 * t5633 - t4876 * t5038)) * t5025 + (t4870 - (t4855 * t5038 + t4876 * t5633) * pkin(2)) * t5024 - t5896 * t4852;
t5762 = t4774 * t4825;
t4759 = t5025 * t5762;
t4628 = t4759 + t4676;
t4991 = pkin(1) * t5009;
t5377 = t4774 * t5632;
t5275 = t4825 * t5377;
t5185 = t4935 * t5275;
t5708 = t5913 * t5024;
t5776 = t4684 * t5006;
t5255 = t5708 * t5776;
t5277 = t5702 * t5762;
t5007 = 0.1e1 / t5047 ^ 2;
t5655 = t5024 * t5048;
t5519 = pkin(5) * t5655;
t5735 = 0.1e1 / (-(pkin(1) * t5647 + t5519) * t5810 + t5048 * t4955 + t4888) * t5007;
t5777 = t4684 * t4825;
t5304 = t5735 * t5777;
t5330 = pkin(6) * t4759;
t5004 = t5047 * t5005;
t5396 = t5004 * t5650;
t5417 = t4825 * t5687;
t5602 = t4668 / 0.2e1 - t4690 / 0.2e1;
t5209 = (t5048 * t4628 * t5396 + (t5255 + (t4935 * t5632 * t5702 + (t4977 + t4991) * t5667) * t4774) * t5417 + (((t4988 + t5062) * t4759 + t5602) * t5655 + (-t5009 + 0.1e1 / 0.2e1) * t4935 * t5277) * t5496 - pkin(6) * (t5185 * t5516 + (t5330 * t4991 + (-t5330 + t4600) * t5913) * t5024)) * t5304;
t5290 = t4708 * t5421;
t5224 = pkin(5) * t5290;
t4603 = -t4668 + t5224;
t4674 = pkin(1) * t4676;
t4921 = t4991 - t5913;
t4934 = pkin(5) * t5038 + pkin(2);
t4696 = pkin(1) * t5290;
t5171 = t5048 * t4696;
t5173 = t5024 * t4696;
t5252 = t5039 * t5464;
t5316 = t5833 * t5632;
t4956 = pkin(5) * t4976;
t5362 = t4956 + t5581;
t5465 = t4708 * t5735;
t5542 = pkin(2) * t5655;
t5648 = t5025 * t5038;
t5780 = t4603 * t5039;
t5310 = ((t5048 * t5277 * t5913 + t5173) * t5817 + (t5362 * t5009 * t5277 - (-t5464 + (t4759 * t4946 - t4603) * t5038) * t5542 + pkin(1) * t5252 * t5648) * t5047 + (-t5171 * t5648 - t5024 * ((t4674 - t5780) * t5038 - t5252) + (t4921 * t5024 * t5648 + t5833 * t5047 * t4946 + t4934 * t5316) * t5762) * pkin(6)) * t5465;
t4657 = -0.2e1 * t4668;
t4702 = pkin(2) * t5464;
t4929 = t4977 / 0.2e1 + pkin(1);
t4949 = 0.2e1 * t4956;
t4962 = pkin(1) * t4977;
t5008 = t5048 * t5009;
t4665 = t5066 * t4676;
t5143 = -pkin(6) * t4690 + t4665;
t5172 = t5039 * t4696;
t5193 = t5047 * t5277;
t5279 = t4935 * t4759;
t5236 = 0.2e1 * t5279;
t5775 = t4684 * t5025;
t5478 = t5006 * t5775;
t5343 = pkin(1) * t5478;
t5303 = t5038 * t4676;
t4648 = pkin(2) * t5303;
t4660 = pkin(5) * t4676;
t4693 = pkin(6) * t5290;
t5599 = t4660 + t4693;
t5365 = t4648 + t5599;
t5239 = pkin(6) * t4660;
t5605 = t5239 / 0.2e1 + pkin(6) * t5279;
t5611 = t5365 * t5039 + t4696;
t5729 = t4825 * t5024;
t5372 = t5776 / 0.2e1;
t5870 = 0.2e1 * (t4774 * t5587 + t5025 * t5372) * t4825;
t5484 = (-(t5060 + t5687) * t5008 * t5193 * t5814 + (t4600 * t5353 + (t5343 * t5687 + ((t5880 + 0.3e1 * t4977 - 0.3e1 * t5515) * t5687 + pkin(6) * (t4929 * t5878 + t5039 * t5689)) * t4774) * t5729) * t5009 + (t5396 * t5870 + (t5039 * t5236 + t5611) * t5005 * t5406 + ((-(t4690 + t4657) * t4988 + t5143) * t5025 + ((t4956 + t5359) * t5857 + t4949 + 0.4e1 * t4962 + t5244) * t5762) * t5543 + (-t4603 * t4976 / 0.2e1 - t4702 / 0.2e1 + t5605) * t5039 * t5357) * t5048 + (t5395 * t5870 - t4600 * t5913 * t5025 + (t5023 + ((t4956 + t5584) * t5857 + t4949 + t4927) * t5039) * t5762) * t5803 + (((t4657 + t5224) * t4976 + t4702 - t5066 * t5290 - 0.4e1 * t5605) * t5009 + pkin(6) * (t5172 + t5236 + t5365)) * t5047 * t5553) * t5762;
t4465 = -((t5006 * (t4792 * t5666 + t5484) + t5310) * t4810 + t5209) * t5070 + t4729 + t4730;
t4985 = g(3) * t5049;
t5901 = -t5040 * t5893 + t4985;
t4986 = g(3) * t5052;
t5900 = -t5043 * t5894 + t4986;
t4987 = g(3) * t5055;
t5899 = -t5046 * t5895 + t4987;
t5918 = -0.2e1 * pkin(5);
t5917 = -0.4e1 * pkin(6);
t5576 = 0.2e1 * t5003;
t5855 = 0.2e1 * t5009;
t5852 = 0.2e1 * t5015;
t5849 = 0.2e1 * t5021;
t5916 = 0.2e1 * t5048;
t5915 = 0.2e1 * t5051;
t5914 = 0.2e1 * t5054;
t5830 = t5009 - 0.1e1;
t5827 = t5015 - 0.1e1;
t5824 = t5021 - 0.1e1;
t4771 = t4774 ^ 2;
t4826 = 0.1e1 / t4837 ^ 2;
t4768 = t4771 * t4826;
t4772 = t4775 ^ 2;
t4829 = 0.1e1 / t4838 ^ 2;
t4769 = t4772 * t4829;
t4773 = t4776 ^ 2;
t4832 = 0.1e1 / t4839 ^ 2;
t4770 = t4773 * t4832;
t5848 = 0.4e1 * t5021;
t5910 = t5003 * (t5848 - 0.2e1);
t5851 = 0.4e1 * t5015;
t5909 = t5003 * (t5851 - 0.2e1);
t5854 = 0.4e1 * t5009;
t5908 = t5003 * (t5854 - 0.2e1);
t5356 = -t4934 + 0.2e1 * t5817;
t5907 = t5049 * t5356;
t5355 = -t4938 + 0.2e1 * t5816;
t5906 = t5052 * t5355;
t5354 = -t4942 + 0.2e1 * t5815;
t5905 = t5055 * t5354;
t5665 = t5024 * t5038;
t5546 = pkin(2) * t5665;
t5639 = t5025 * t5066;
t4573 = t4628 * t5687 + (t4906 * t5546 + t5639) * t5762 + t5143;
t4597 = pkin(6) * t5303 - t5464;
t4579 = (((pkin(2) * t5048 + pkin(6) * t5633) * t5024 + pkin(6) * t5648) * t5762 + t4597) * t4825 * t5464;
t4843 = t4906 * t5642 + t5040 * t5896;
t5635 = t5038 * t5049;
t5534 = pkin(2) * t5635;
t5537 = pkin(2) * t5648;
t4798 = (t4906 * t4973 - t4970 * t5534) * t5024 - t4843 * t4970 - t4973 * t5537;
t5750 = t4798 * t4825;
t4786 = t5036 * t5750;
t4799 = (t4906 * t4970 + t4973 * t5534) * t5024 + t4843 * t4973 - t4970 * t5537;
t5749 = t4799 * t4825;
t4787 = t5037 * t5749;
t4816 = t5896 * t5049 + (-t5546 - t5711) * t5040;
t5738 = t4816 * t4825;
t4795 = t5035 * t5738;
t5247 = t4579 + t4786 + t4787 + t4795;
t5063 = pkin(5) / 0.2e1;
t4928 = t4976 + t5063;
t5438 = t4774 * t5655;
t4753 = t4825 * t5438;
t5194 = t4928 * t4753;
t5441 = t5048 * t5762;
t5278 = t4936 * t5441;
t5375 = t4965 * t5687;
t5399 = t5003 * t5762;
t5439 = t4774 * t5664;
t5509 = pkin(6) * t5614;
t5582 = t5066 + t5069;
t5608 = t4648 + t4693;
t5683 = t5009 * t5066;
t5879 = -0.2e1 * pkin(2);
t4564 = -(t5375 - t5683 + (0.2e1 * t5039 * t5509 + t4934) * pkin(2)) * t5399 + ((t5194 + t5602) * t5877 + (t4928 * t5439 * t5879 + t4684 * t5069) * t4825 * t5047) * t5025 + t4774 * t5417 * t5698 + (-t5608 * t5664 + t5278) * t5810 + t4597 * t5542 + (-t5683 + t4956 + t4962 + t5582) * t5762;
t5783 = t4564 * t4774;
t4537 = (-t4573 * t5776 - t5783) * t4826 + t5247;
t4528 = t5039 * t4537;
t5760 = t4774 * t5006;
t5440 = t4826 * t5760;
t5306 = t4684 * t5440;
t5202 = t5048 * t5306;
t5904 = t4528 + t5202;
t5662 = t5024 * t5041;
t5545 = pkin(2) * t5662;
t4574 = t4630 * t5681 + (t4907 * t5545 + t5639) * t5759 + t5142;
t4598 = pkin(6) * t5298 - t5461;
t4580 = (((pkin(2) * t5051 + pkin(6) * t5625) * t5024 + pkin(6) * t5646) * t5759 + t4598) * t4828 * t5461;
t4844 = t4907 * t5641 + t5043 * t5897;
t5627 = t5041 * t5052;
t5532 = pkin(2) * t5627;
t5536 = pkin(2) * t5646;
t4800 = (t4907 * t4974 - t4971 * t5532) * t5024 - t4844 * t4971 - t4974 * t5536;
t5748 = t4800 * t4828;
t4788 = t5036 * t5748;
t4801 = (t4907 * t4971 + t4974 * t5532) * t5024 + t4844 * t4974 - t4971 * t5536;
t5747 = t4801 * t4828;
t4789 = t5037 * t5747;
t4817 = t5897 * t5052 + (-t5545 - t5710) * t5043;
t5737 = t4817 * t4828;
t4796 = t5035 * t5737;
t5246 = t4580 + t4788 + t4789 + t4796;
t4930 = t4978 + t5063;
t5433 = t4775 * t5653;
t4754 = t4828 * t5433;
t5192 = t4930 * t4754;
t5436 = t5051 * t5759;
t5273 = t4940 * t5436;
t5374 = t4966 * t5681;
t5398 = t5003 * t5759;
t5434 = t4775 * t5661;
t5507 = pkin(6) * t5613;
t5607 = t4649 + t4694;
t5677 = t5015 * t5066;
t4565 = -(t5374 - t5677 + (0.2e1 * t5042 * t5507 + t4938) * pkin(2)) * t5398 + ((t5192 + t5601) * t5877 + (t4930 * t5434 * t5879 + t4685 * t5069) * t4828 * t5050) * t5025 + t4775 * t5415 * t5697 + (-t5607 * t5661 + t5273) * t5808 + t4598 * t5540 + (-t5677 + t4958 + t4963 + t5582) * t5759;
t5782 = t4565 * t4775;
t4538 = (-t4574 * t5773 - t5782) * t4829 + t5246;
t4529 = t5042 * t4538;
t5757 = t4775 * t5012;
t5435 = t4829 * t5757;
t5301 = t4685 * t5435;
t5200 = t5051 * t5301;
t5903 = t4529 + t5200;
t5659 = t5024 * t5044;
t5544 = pkin(2) * t5659;
t4575 = t4632 * t5675 + (t4908 * t5544 + t5639) * t5756 + t5141;
t4599 = pkin(6) * t5293 - t5458;
t4581 = (((pkin(2) * t5054 + pkin(6) * t5617) * t5024 + pkin(6) * t5644) * t5756 + t4599) * t4831 * t5458;
t4845 = t4908 * t5640 + t5046 * t5898;
t5619 = t5044 * t5055;
t5530 = pkin(2) * t5619;
t5535 = pkin(2) * t5644;
t4802 = (t4908 * t4975 - t4972 * t5530) * t5024 - t4845 * t4972 - t4975 * t5535;
t5746 = t4802 * t4831;
t4790 = t5036 * t5746;
t4803 = (t4908 * t4972 + t4975 * t5530) * t5024 + t4845 * t4975 - t4972 * t5535;
t5745 = t4803 * t4831;
t4791 = t5037 * t5745;
t4818 = t5898 * t5055 + (-t5544 - t5709) * t5046;
t5736 = t4818 * t4831;
t4797 = t5035 * t5736;
t5245 = t4581 + t4790 + t4791 + t4797;
t4932 = t4980 + t5063;
t5428 = t4776 * t5651;
t4755 = t4831 * t5428;
t5190 = t4932 * t4755;
t5431 = t5054 * t5756;
t5268 = t4944 * t5431;
t5373 = t4967 * t5675;
t5397 = t5003 * t5756;
t5429 = t4776 * t5658;
t5505 = pkin(6) * t5612;
t5606 = t4650 + t4695;
t5671 = t5021 * t5066;
t4566 = -(t5373 - t5671 + (0.2e1 * t5045 * t5505 + t4942) * pkin(2)) * t5397 + ((t5190 + t5600) * t5877 + (t4932 * t5429 * t5879 + t4686 * t5069) * t4831 * t5053) * t5025 + t4776 * t5413 * t5696 + (-t5606 * t5658 + t5268) * t5806 + t4599 * t5538 + (-t5671 + t4960 + t4964 + t5582) * t5756;
t5781 = t4566 * t4776;
t4539 = (-t4575 * t5770 - t5781) * t4832 + t5245;
t4530 = t5045 * t4539;
t5754 = t4776 * t5018;
t5430 = t4832 * t5754;
t5296 = t4686 * t5430;
t5198 = t5054 * t5296;
t5902 = t4530 + t5198;
t5809 = pkin(2) * t5049;
t5502 = t5039 * t5809;
t5889 = t5038 * (-(pkin(1) * t5663 - pkin(5) * t5049) * t5039 + t5040 * t5325) + t5502;
t5807 = pkin(2) * t5052;
t5498 = t5042 * t5807;
t5888 = t5041 * (-(pkin(1) * t5660 - pkin(5) * t5052) * t5042 + t5043 * t5324) + t5498;
t5805 = pkin(2) * t5055;
t5499 = t5045 * t5805;
t5887 = t5044 * (-(pkin(1) * t5657 - pkin(5) * t5055) * t5045 + t5046 * t5323) + t5499;
t5156 = t4704 - t5237;
t4578 = pkin(2) * t4605 + t5044 * t5156;
t4590 = t4599 * t5706;
t5834 = t4663 / 0.2e1;
t4596 = t5834 + t4695 / 0.2e1;
t4673 = t5069 * t4680;
t5064 = 0.2e1 * pkin(5);
t5022 = pkin(2) * t5064;
t5159 = pkin(6) * t4942 * t5265;
t5432 = t4776 * t5721;
t5327 = pkin(6) * t5432;
t5219 = t5044 * t5327;
t5243 = -0.3e1 * t5069 - t5066 - t5067 - t5072;
t5266 = t4831 * t5429;
t5674 = t5018 * t5045;
t5471 = t4686 * t5674;
t5292 = t4831 * t5471;
t5338 = pkin(2) * t4680;
t5676 = t5016 * t5069;
t5414 = t4831 * t5676;
t5547 = t5021 * t4980;
t5548 = t5017 * t5811;
t5583 = -0.2e1 / 0.3e1 * t5069 - t5066 / 0.3e1;
t5585 = t5067 / 0.3e1 + t5069;
t5586 = t5066 / 0.2e1 + t5069;
t5822 = pkin(1) * t5024;
t5841 = 0.2e1 * t5044;
t5847 = -0.2e1 * t5024;
t5850 = -0.2e1 * t5021;
t5858 = 0.3e1 * t5025 * t5003;
t4479 = (((t5021 - 0.4e1 / 0.3e1) * t5676 + ((-0.2e1 / 0.3e1 * t4960 + t5583) * t5021 + 0.4e1 / 0.3e1 * t4960 + t5585) * t5053 + (0.4e1 / 0.3e1 * t5815 - 0.2e1 / 0.3e1 * t4942) * pkin(6) * t5616) * t5756 * t5858 + (t5373 * t5771 - ((t4664 + t5778) * t5054 + (-0.4e1 * t4943 + t5547) * t5266) * t5815 + (t5190 * t5917 - t4667 + t4673 + (-t5021 * t5338 + (0.2e1 * t5020 * t5327 - t5021 * t5597 + t4663 + 0.2e1 * t4695) * t5044) * pkin(2) + (t4710 * t4814 * t5841 - pkin(6) * t5771) * pkin(1) * t5674) * t5053 + t5045 * (t4578 * t5054 + (-t5022 + (-t5000 + t5671) * t5044) * t5432)) * t5003 + ((-0.3e1 * t5021 + 0.3e1) * t4776 * t5414 - (t5021 * t5167 + 0.2e1 * t5268 + ((t5834 + t5606) * t5045 + t4698) * t5847) * t5815 + (((pkin(1) * t5292 + t4605) * t4980 + t5156) * t5651 + ((t4960 + t5586) * t5849 - 0.4e1 * t4960 - 0.2e1 * t4964 + t5243) * t5756) * t5053 - t4599 * t5021 * t5822 + 0.2e1 * t5159 + t4590) * t5025 - t5824 * t4673 * t5016 + (t4605 * t5054 + (-t4980 - t5064 + t5547) * t5432) * t5548 + 0.2e1 * ((t5021 / 0.2e1 - 0.1e1 / 0.2e1) * t5338 + (t4596 * t5021 - t5166 / 0.2e1 - t4596 + (-pkin(6) * t5020 + t4948 * t5054) * t5432) * t5044) * t5806 + t4933 * t5219 * t5850 - t4578 * t5616 + ((t4927 * t5044 + t5022) * t5045 + t5044 * t5023) * t5432) * t5430;
t5703 = t4967 * t5003;
t5347 = -t5021 + t5703;
t5240 = t5347 + 0.1e1;
t5563 = -0.2e1 * t5667;
t4545 = ((t4776 * t5240 - t5472) * t5414 - (-t5609 * t5024 + (t5054 * t5341 + (t5054 * (-t4981 + pkin(1)) * t5003 + (t4932 * t5563 + t5800) * t5045) * t4776) * t4831) * t5815 + ((t4948 * t5025 + t5517) * t4602 + (-(t4964 - t5360) * t5003 + (-pkin(6) * t4943 + t4961 * t5045) * t5025 * t5651 + (-t5003 * t5021 + t5824) * pkin(2) * t4942) * t5756) * t5053 - t5003 * t5159 - t4923 * t5025 * t5219 + t5159 + t4590) * t5294;
t5065 = -0.2e1 * pkin(1);
t5673 = t5018 * t5054;
t5470 = t4686 * t5673;
t5794 = t5021 * pkin(6);
t5804 = pkin(5) * t5024;
t5842 = -0.2e1 * t5044;
t4554 = ((-t5253 + ((t4993 - 0.2e1 * t4981 + t5065) * t5667 + pkin(5) * t5314) * t4776) * t4831 * t5017 + ((-t5794 / 0.2e1 + t4948) * t5397 * t5842 + ((-pkin(1) * t5044 * t5471 - t4942 * t5428) * t4831 - t4599) * t5025 + t5044 * (-t5470 * t5804 + t4776 * (t4948 - t5794)) * t4831) * t5053 - t5003 * t5183 + (-t4923 * t5432 + t5165) * t5025 + ((-t4605 - t4692) * t5045 + t4664) * t5024 + t5183) * t4814 * t5459;
t4917 = -pkin(5) + t5554;
t4848 = t4917 * t5024 * t5055 + t5046 * t5911;
t4914 = t4980 * t5824 - pkin(5);
t5225 = t5382 * t4980;
t5162 = t5046 * t5225;
t5620 = t5044 * t5054;
t5400 = t4975 * t5620;
t5317 = pkin(6) * t5400;
t5403 = t4972 * t5620;
t5318 = pkin(6) * t5403;
t5332 = t5017 * t5499;
t5504 = t5055 * t5800;
t5510 = pkin(6) * t5651;
t5615 = t5046 * t5054;
t4737 = ((-t4917 * t4975 + t4972 * t5504) * t5053 + (-t4972 * t5905 - t5317) * t5045) * t5003 + (-(t4972 * t5615 + t4975 * t5560) * t5815 + (-t4848 * t4972 - t4975 * t5510) * t5053 - (t4942 * t4975 + t5055 * t5318) * t5658) * t5025 + t4972 * t5332 + (t4914 * t4975 + t4972 * t5162) * t5053 - t5887 * t4972 + t5911 * t5400;
t5455 = t4737 * t5722;
t4725 = t5036 * t5455;
t4740 = ((-t4917 * t4972 - t4975 * t5504) * t5053 + (t4975 * t5905 - t5318) * t5045) * t5003 + ((0.2e1 * t4972 * t5658 + t4975 * t5615) * t5815 + (t4848 * t4975 - t4972 * t5510) * t5053 + (-t4942 * t4972 + t5055 * t5317) * t5658) * t5025 - t4975 * t5332 + (t4914 * t4972 - t4975 * t5162) * t5053 + t5887 * t4975 + t5911 * t5403;
t5452 = t4740 * t5722;
t4728 = t5037 * t5452;
t5622 = t5044 * t5045;
t4785 = ((-t4917 * t5657 + t5055 * t5911) * t5053 + (-pkin(6) * t5622 * t5657 + t5017 * t5805) * t5054) * t5025 - t5053 * t5055 * t5225 + (-t5822 * t5045 + t5323) * t5619 + ((-t5045 * t5354 + t5505) * t5003 + t5548 - t4942 * t5045) * t5046;
t5425 = t4785 * t5722;
t4782 = t5035 * t5425;
t4443 = t4728 + t4725 + t4782 - t4479 - t4545 + t4554;
t4679 = t4686 ^ 2 * t5019 * t4832;
t5071 = 0.1e1 / pkin(2) ^ 2;
t5467 = t4710 ^ 2 / t4821 ^ 2 * t5071;
t4701 = t5019 * t5467;
t4612 = t4679 + t4701;
t5460 = t4710 * t5739;
t5580 = 0.2e1 * t5804;
t5618 = t5045 * t4443;
t5818 = pkin(1) * t5054;
t5886 = 0.2e1 * (t5003 * t5222 + (-pkin(5) * t5460 + t4990 * t5771) * t5018) * t5756 + (pkin(1) * t4467 + (t4612 * t5054 + t5618) * pkin(5)) * t5024 + (t5902 * t5580 - t4443 * t5818 + (pkin(1) * t4612 - t5899) * t5045) * t5025;
t5157 = t4703 - t5238;
t4577 = pkin(2) * t4604 + t5041 * t5157;
t4589 = t4598 * t5707;
t5835 = t4661 / 0.2e1;
t4595 = t5835 + t4694 / 0.2e1;
t4672 = t5069 * t4678;
t5160 = pkin(6) * t4938 * t5270;
t5437 = t4775 * t5725;
t5329 = pkin(6) * t5437;
t5220 = t5041 * t5329;
t5271 = t4828 * t5434;
t5680 = t5012 * t5042;
t5474 = t4685 * t5680;
t5297 = t4828 * t5474;
t5339 = pkin(2) * t4678;
t5682 = t5010 * t5069;
t5416 = t4828 * t5682;
t5549 = t5015 * t4978;
t5550 = t5011 * t5812;
t5843 = 0.2e1 * t5041;
t5853 = -0.2e1 * t5015;
t4478 = (((t5015 - 0.4e1 / 0.3e1) * t5682 + ((-0.2e1 / 0.3e1 * t4958 + t5583) * t5015 + 0.4e1 / 0.3e1 * t4958 + t5585) * t5050 + (0.4e1 / 0.3e1 * t5816 - 0.2e1 / 0.3e1 * t4938) * pkin(6) * t5624) * t5759 * t5858 + (t5374 * t5774 - ((t4662 + t5779) * t5051 + (-0.4e1 * t4939 + t5549) * t5271) * t5816 + (t5192 * t5917 - t4666 + t4672 + (-t5015 * t5339 + (0.2e1 * t5014 * t5329 - t5015 * t5598 + t4661 + 0.2e1 * t4694) * t5041) * pkin(2) + (t4709 * t4812 * t5843 - pkin(6) * t5774) * pkin(1) * t5680) * t5050 + t5042 * (t4577 * t5051 + (-t5022 + (-t5000 + t5677) * t5041) * t5437)) * t5003 + ((-0.3e1 * t5015 + 0.3e1) * t4775 * t5416 - (t5015 * t5170 + 0.2e1 * t5273 + ((t5835 + t5607) * t5042 + t4697) * t5847) * t5816 + (((pkin(1) * t5297 + t4604) * t4978 + t5157) * t5653 + ((t4958 + t5586) * t5852 - 0.4e1 * t4958 - 0.2e1 * t4963 + t5243) * t5759) * t5050 - t4598 * t5015 * t5822 + 0.2e1 * t5160 + t4589) * t5025 - t5827 * t4672 * t5010 + (t4604 * t5051 + (-t4978 - t5064 + t5549) * t5437) * t5550 + 0.2e1 * ((t5015 / 0.2e1 - 0.1e1 / 0.2e1) * t5339 + (t4595 * t5015 - t5169 / 0.2e1 - t4595 + (-pkin(6) * t5014 + t4947 * t5051) * t5437) * t5041) * t5808 + t4931 * t5220 * t5853 - t4577 * t5624 + ((t4927 * t5041 + t5022) * t5042 + t5041 * t5023) * t5437) * t5435;
t5704 = t4966 * t5003;
t5348 = -t5015 + t5704;
t5241 = t5348 + 0.1e1;
t4544 = ((t4775 * t5241 - t5475) * t5416 - (-t5610 * t5024 + (t5051 * t5342 + (t5051 * (-t4979 + pkin(1)) * t5003 + (t4930 * t5563 + t5801) * t5042) * t4775) * t4828) * t5816 + ((t4947 * t5025 + t5518) * t4601 + (-(t4963 - t5361) * t5003 + (-pkin(6) * t4939 + t4959 * t5042) * t5025 * t5653 + (-t5003 * t5015 + t5827) * pkin(2) * t4938) * t5759) * t5050 - t5003 * t5160 - t4922 * t5025 * t5220 + t5160 + t4589) * t5299;
t5679 = t5012 * t5051;
t5473 = t4685 * t5679;
t5795 = t5015 * pkin(6);
t5844 = -0.2e1 * t5041;
t4553 = ((-t5254 + ((t4992 - 0.2e1 * t4979 + t5065) * t5667 + pkin(5) * t5315) * t4775) * t4828 * t5011 + ((-t5795 / 0.2e1 + t4947) * t5398 * t5844 + ((-pkin(1) * t5041 * t5474 - t4938 * t5433) * t4828 - t4598) * t5025 + t5041 * (-t5473 * t5804 + t4775 * (t4947 - t5795)) * t4828) * t5050 - t5003 * t5184 + (-t4922 * t5437 + t5168) * t5025 + ((-t4604 - t4691) * t5042 + t4662) * t5024 + t5184) * t4812 * t5462;
t4916 = -pkin(5) + t5555;
t4847 = t4916 * t5024 * t5052 + t5043 * t5912;
t4913 = t4978 * t5827 - pkin(5);
t5226 = t5384 * t4978;
t5163 = t5043 * t5226;
t5628 = t5041 * t5051;
t5401 = t4974 * t5628;
t5319 = pkin(6) * t5401;
t5404 = t4971 * t5628;
t5320 = pkin(6) * t5404;
t5333 = t5011 * t5498;
t5506 = t5052 * t5801;
t5511 = pkin(6) * t5653;
t5623 = t5043 * t5051;
t4736 = ((-t4916 * t4974 + t4971 * t5506) * t5050 + (-t4971 * t5906 - t5319) * t5042) * t5003 + (-(t4971 * t5623 + t4974 * t5561) * t5816 + (-t4847 * t4971 - t4974 * t5511) * t5050 - (t4938 * t4974 + t5052 * t5320) * t5661) * t5025 + t4971 * t5333 + (t4913 * t4974 + t4971 * t5163) * t5050 - t5888 * t4971 + t5912 * t5401;
t5456 = t4736 * t5726;
t4724 = t5036 * t5456;
t4739 = ((-t4916 * t4971 - t4974 * t5506) * t5050 + (t4974 * t5906 - t5320) * t5042) * t5003 + ((0.2e1 * t4971 * t5661 + t4974 * t5623) * t5816 + (t4847 * t4974 - t4971 * t5511) * t5050 + (-t4938 * t4971 + t5052 * t5319) * t5661) * t5025 - t4974 * t5333 + (t4913 * t4971 - t4974 * t5163) * t5050 + t5888 * t4974 + t5912 * t5404;
t5453 = t4739 * t5726;
t4727 = t5037 * t5453;
t5630 = t5041 * t5042;
t4784 = ((-t4916 * t5660 + t5052 * t5912) * t5050 + (-pkin(6) * t5630 * t5660 + t5011 * t5807) * t5051) * t5025 - t5050 * t5052 * t5226 + (-t5822 * t5042 + t5324) * t5627 + ((-t5042 * t5355 + t5507) * t5003 + t5550 - t4938 * t5042) * t5043;
t5426 = t4784 * t5726;
t4781 = t5035 * t5426;
t4442 = t4727 + t4724 + t4781 - t4478 - t4544 + t4553;
t4677 = t4685 ^ 2 * t5013 * t4829;
t5468 = t4709 ^ 2 / t4820 ^ 2 * t5071;
t4700 = t5013 * t5468;
t4609 = t4677 + t4700;
t5463 = t4709 * t5741;
t5626 = t5042 * t4442;
t5819 = pkin(1) * t5051;
t5885 = 0.2e1 * (t5003 * t5223 + (-pkin(5) * t5463 + t4989 * t5774) * t5012) * t5759 + (pkin(1) * t4466 + (t4609 * t5051 + t5626) * pkin(5)) * t5024 + (t5903 * t5580 - t4442 * t5819 + (pkin(1) * t4609 - t5900) * t5042) * t5025;
t5158 = t4702 - t5239;
t4576 = pkin(2) * t4603 + t5038 * t5158;
t4588 = t4597 * t5708;
t5836 = t4660 / 0.2e1;
t4594 = t5836 + t4693 / 0.2e1;
t4671 = t5069 * t4676;
t5161 = pkin(6) * t4934 * t5275;
t5442 = t4774 * t5729;
t5331 = pkin(6) * t5442;
t5221 = t5038 * t5331;
t5276 = t4825 * t5439;
t5686 = t5006 * t5039;
t5477 = t4684 * t5686;
t5302 = t4825 * t5477;
t5340 = pkin(2) * t4676;
t5688 = t5004 * t5069;
t5418 = t4825 * t5688;
t5551 = t5009 * t4976;
t5552 = t5005 * t5813;
t5845 = 0.2e1 * t5038;
t5856 = -0.2e1 * t5009;
t4477 = (((t5009 - 0.4e1 / 0.3e1) * t5688 + ((-0.2e1 / 0.3e1 * t4956 + t5583) * t5009 + 0.4e1 / 0.3e1 * t4956 + t5585) * t5047 + (0.4e1 / 0.3e1 * t5817 - 0.2e1 / 0.3e1 * t4934) * pkin(6) * t5632) * t5762 * t5858 + (t5375 * t5777 - ((t4674 + t5780) * t5048 + (-0.4e1 * t4935 + t5551) * t5276) * t5817 + (t5194 * t5917 - t4665 + t4671 + (-t5009 * t5340 + (0.2e1 * t5008 * t5331 - t5009 * t5599 + t4660 + 0.2e1 * t4693) * t5038) * pkin(2) + (t4708 * t4810 * t5845 - pkin(6) * t5777) * pkin(1) * t5686) * t5047 + t5039 * (t4576 * t5048 + (-t5022 + (-t5000 + t5683) * t5038) * t5442)) * t5003 + ((-0.3e1 * t5009 + 0.3e1) * t4774 * t5418 - (t5009 * t5173 + 0.2e1 * t5278 + ((t5836 + t5608) * t5039 + t4696) * t5847) * t5817 + (((pkin(1) * t5302 + t4603) * t4976 + t5158) * t5655 + ((t4956 + t5586) * t5855 - 0.4e1 * t4956 - 0.2e1 * t4962 + t5243) * t5762) * t5047 - t4597 * t5009 * t5822 + 0.2e1 * t5161 + t4588) * t5025 - t5830 * t4671 * t5004 + (t4603 * t5048 + (-t4976 - t5064 + t5551) * t5442) * t5552 + 0.2e1 * ((t5009 / 0.2e1 - 0.1e1 / 0.2e1) * t5340 + (t4594 * t5009 - t5172 / 0.2e1 - t4594 + (-pkin(6) * t5008 + t4946 * t5048) * t5442) * t5038) * t5810 + t4929 * t5221 * t5856 - t4576 * t5632 + ((t4927 * t5038 + t5022) * t5039 + t5038 * t5023) * t5442) * t5440;
t5705 = t4965 * t5003;
t5349 = -t5009 + t5705;
t5242 = t5349 + 0.1e1;
t4543 = ((t4774 * t5242 - t5478) * t5418 - (-t5611 * t5024 + (t5048 * t5343 + (t5048 * (-t4977 + pkin(1)) * t5003 + (t4928 * t5563 + t5802) * t5039) * t4774) * t4825) * t5817 + ((t4946 * t5025 + t5519) * t4600 + (-(t4962 - t5362) * t5003 + (-pkin(6) * t4935 + t4957 * t5039) * t5025 * t5655 + (-t5003 * t5009 + t5830) * pkin(2) * t4934) * t5762) * t5047 - t5003 * t5161 - t4921 * t5025 * t5221 + t5161 + t4588) * t5304;
t5685 = t5006 * t5048;
t5476 = t4684 * t5685;
t5796 = t5009 * pkin(6);
t5846 = -0.2e1 * t5038;
t4552 = ((-t5255 + ((t4991 - 0.2e1 * t4977 + t5065) * t5667 + pkin(5) * t5316) * t4774) * t4825 * t5005 + ((-t5796 / 0.2e1 + t4946) * t5399 * t5846 + ((-pkin(1) * t5038 * t5477 - t4934 * t5438) * t4825 - t4597) * t5025 + t5038 * (-t5476 * t5804 + t4774 * (t4946 - t5796)) * t4825) * t5047 - t5003 * t5185 + (-t4921 * t5442 + t5171) * t5025 + ((-t4603 - t4690) * t5039 + t4674) * t5024 + t5185) * t4810 * t5465;
t4915 = -pkin(5) + t5556;
t4846 = t4915 * t5024 * t5049 + t5040 * t5913;
t4912 = t4976 * t5830 - pkin(5);
t5227 = t5386 * t4976;
t5164 = t5040 * t5227;
t5636 = t5038 * t5048;
t5402 = t4973 * t5636;
t5321 = pkin(6) * t5402;
t5405 = t4970 * t5636;
t5322 = pkin(6) * t5405;
t5334 = t5005 * t5502;
t5508 = t5049 * t5802;
t5512 = pkin(6) * t5655;
t5631 = t5040 * t5048;
t4735 = ((-t4915 * t4973 + t4970 * t5508) * t5047 + (-t4970 * t5907 - t5321) * t5039) * t5003 + (-(t4970 * t5631 + t4973 * t5562) * t5817 + (-t4846 * t4970 - t4973 * t5512) * t5047 - (t4934 * t4973 + t5049 * t5322) * t5664) * t5025 + t4970 * t5334 + (t4912 * t4973 + t4970 * t5164) * t5047 - t5889 * t4970 + t5913 * t5402;
t5457 = t4735 * t5730;
t4723 = t5036 * t5457;
t4738 = ((-t4915 * t4970 - t4973 * t5508) * t5047 + (t4973 * t5907 - t5322) * t5039) * t5003 + ((0.2e1 * t4970 * t5664 + t4973 * t5631) * t5817 + (t4846 * t4973 - t4970 * t5512) * t5047 + (-t4934 * t4970 + t5049 * t5321) * t5664) * t5025 - t4973 * t5334 + (t4912 * t4970 - t4973 * t5164) * t5047 + t5889 * t4973 + t5913 * t5405;
t5454 = t4738 * t5730;
t4726 = t5037 * t5454;
t5638 = t5038 * t5039;
t4783 = ((-t4915 * t5663 + t5049 * t5913) * t5047 + (-pkin(6) * t5638 * t5663 + t5005 * t5809) * t5048) * t5025 - t5047 * t5049 * t5227 + (-t5822 * t5039 + t5325) * t5635 + ((-t5039 * t5356 + t5509) * t5003 + t5552 - t4934 * t5039) * t5040;
t5427 = t4783 * t5730;
t4780 = t5035 * t5427;
t4441 = t4726 + t4723 + t4780 - t4477 - t4543 + t4552;
t4675 = t4684 ^ 2 * t5007 * t4826;
t5469 = t4708 ^ 2 / t4819 ^ 2 * t5071;
t4699 = t5007 * t5469;
t4606 = t4675 + t4699;
t5466 = t4708 * t5743;
t5634 = t5039 * t4441;
t5820 = pkin(1) * t5048;
t5884 = 0.2e1 * (t5003 * t5224 + (-pkin(5) * t5466 + t4988 * t5777) * t5006) * t5762 + (pkin(1) * t4465 + (t4606 * t5048 + t5634) * pkin(5)) * t5024 + (t5904 * t5580 - t4441 * t5820 + (pkin(1) * t4606 - t5901) * t5039) * t5025;
t5523 = t4539 * t5804;
t5668 = t5024 * t4443;
t5883 = (-pkin(1) * t4679 - 0.2e1 * t5523 + t5899) * t5025 - pkin(5) * t5668 + t5296 * t5065;
t5524 = t4538 * t5804;
t5669 = t5024 * t4442;
t5882 = (-pkin(1) * t4677 - 0.2e1 * t5524 + t5900) * t5025 - pkin(5) * t5669 + t5301 * t5065;
t5525 = t4537 * t5804;
t5670 = t5024 * t4441;
t5881 = (-pkin(1) * t4675 - 0.2e1 * t5525 + t5901) * t5025 - pkin(5) * t5670 + t5306 * t5065;
t4525 = t5025 * t4537;
t5149 = -t4477 / 0.2e1 - t4543 / 0.2e1 + t4552 / 0.2e1 + t4723 / 0.2e1 + t4726 / 0.2e1 + t4780 / 0.2e1;
t4429 = t4525 + t5149;
t4624 = t4759 + t4676 / 0.2e1;
t5876 = 0.2e1 * t4429 * t5048 - 0.2e1 * t4624 * t5302;
t4526 = t5025 * t4538;
t5148 = -t4478 / 0.2e1 - t4544 / 0.2e1 + t4553 / 0.2e1 + t4724 / 0.2e1 + t4727 / 0.2e1 + t4781 / 0.2e1;
t4430 = t4526 + t5148;
t4625 = t4760 + t4678 / 0.2e1;
t5875 = 0.2e1 * t4430 * t5051 - 0.2e1 * t4625 * t5297;
t4527 = t5025 * t4539;
t5147 = -t4479 / 0.2e1 - t4545 / 0.2e1 + t4554 / 0.2e1 + t4725 / 0.2e1 + t4728 / 0.2e1 + t4782 / 0.2e1;
t4431 = t4527 + t5147;
t4626 = t4761 + t4680 / 0.2e1;
t5874 = 0.2e1 * t4431 * t5054 - 0.2e1 * t4626 * t5292;
t4534 = t4537 * pkin(1);
t5873 = -0.2e1 * t4534;
t4535 = pkin(1) * t4538;
t5872 = -0.2e1 * t4535;
t4536 = pkin(1) * t4539;
t5871 = -0.2e1 * t4536;
t5867 = 0.2e1 * t4798;
t5866 = 0.2e1 * t4799;
t5865 = 0.2e1 * t4800;
t5864 = 0.2e1 * t4801;
t5863 = 0.2e1 * t4802;
t5862 = 0.2e1 * t4803;
t5861 = 0.2e1 * t4816;
t5860 = 0.2e1 * t4817;
t5859 = 0.2e1 * t4818;
t5840 = -pkin(1) / 0.2e1;
t5839 = t4465 / 0.2e1;
t5838 = t4466 / 0.2e1;
t5837 = t4467 / 0.2e1;
t5832 = t5576 - 0.1e1;
t5001 = t5024 ^ 2;
t5793 = MDP(4) * t5001;
t5792 = MDP(5) * t5001;
t5791 = MDP(6) * t5024;
t5790 = MDP(7) * t5024;
t5789 = t4537 * t5047;
t5788 = t4537 * t5048;
t5787 = t4538 * t5050;
t5786 = t4538 * t5051;
t5785 = t4539 * t5053;
t5784 = t4539 * t5054;
t5768 = t4735 * t5006;
t5767 = t4736 * t5012;
t5766 = t4737 * t5018;
t5765 = t4738 * t5006;
t5764 = t4739 * t5012;
t5763 = t4740 * t5018;
t5761 = t4774 * t4826;
t5758 = t4775 * t4829;
t5755 = t4776 * t4832;
t5753 = t4783 * t5006;
t5752 = t4784 * t5012;
t5751 = t4785 * t5018;
t5732 = t4825 * t4864;
t5731 = t4825 * t5901;
t5728 = t4828 * t4865;
t5727 = t4828 * t5900;
t5724 = t4831 * t4866;
t5723 = t4831 * t5899;
t5695 = t5003 * t4537;
t5694 = t5003 * t4538;
t5693 = t5003 * t4539;
t5684 = t5009 * t4537;
t5678 = t5015 * t4538;
t5672 = t5021 * t4539;
t5649 = t5024 * t5070;
t5637 = t5038 * t5047;
t5629 = t5041 * t5050;
t5621 = t5044 * t5053;
t5593 = t4768 - t4675;
t5592 = t4769 - t4677;
t5591 = t4770 - t4679;
t5575 = 0.2e1 * t5024;
t5574 = 0.2e1 * t5025;
t5573 = 0.4e1 * t5025;
t5291 = t4825 * t5466;
t5197 = t4774 * t5291;
t5152 = t5006 * t5197;
t5136 = t5039 * t5152;
t5572 = (t5136 - t5670 / 0.2e1) * t5916;
t5289 = t4828 * t5463;
t5196 = t4775 * t5289;
t5151 = t5012 * t5196;
t5134 = t5042 * t5151;
t5571 = (t5134 - t5669 / 0.2e1) * t5915;
t5287 = t4831 * t5460;
t5195 = t4776 * t5287;
t5150 = t5018 * t5195;
t5132 = t5045 * t5150;
t5570 = (t5132 - t5668 / 0.2e1) * t5914;
t5199 = t5024 * t5296;
t4635 = t5045 * t5199;
t5366 = -t5666 / 0.2e1;
t4461 = t4635 + t4734 / 0.2e1 + t4733 / 0.2e1 + (-t5207 / 0.2e1 + (-t5308 / 0.2e1 + (t4794 * t5366 - t5482 / 0.2e1) * t5018) * t4814) * t5070;
t5153 = t4686 * t5019 * t5287;
t5133 = t5045 * t5153;
t5367 = -t5672 / 0.2e1;
t5569 = -0.2e1 * (t5024 * t5367 + t4461 * t5054 - t5133 / 0.2e1) * t4831;
t5203 = t5024 * t5306;
t4633 = t5039 * t5203;
t4459 = t4633 + t4730 / 0.2e1 + t4729 / 0.2e1 + (-t5209 / 0.2e1 + (-t5310 / 0.2e1 + (t4792 * t5366 - t5484 / 0.2e1) * t5006) * t4810) * t5070;
t5155 = t4684 * t5007 * t5291;
t5137 = t5039 * t5155;
t5369 = -t5684 / 0.2e1;
t5568 = -0.2e1 * (t5024 * t5369 + t4459 * t5048 - t5137 / 0.2e1) * t4825;
t5201 = t5024 * t5301;
t4634 = t5042 * t5201;
t4460 = t4634 + t4732 / 0.2e1 + t4731 / 0.2e1 + (-t5208 / 0.2e1 + (-t5309 / 0.2e1 + (t4793 * t5366 - t5483 / 0.2e1) * t5012) * t4812) * t5070;
t5154 = t4685 * t5013 * t5289;
t5135 = t5042 * t5154;
t5368 = -t5678 / 0.2e1;
t5567 = -0.2e1 * (t5024 * t5368 + t4460 * t5051 - t5135 / 0.2e1) * t4828;
t5566 = -0.2e1 * (t4537 * t5038 + t5197) * t5048;
t5565 = -0.2e1 * (t4538 * t5041 + t5196) * t5051;
t5564 = -0.2e1 * (t4539 * t5044 + t5195) * t5054;
t5559 = 0.4e1 * t5637;
t5558 = 0.4e1 * t5629;
t5557 = 0.4e1 * t5621;
t5522 = pkin(5) * t4768;
t5521 = pkin(5) * t4769;
t5520 = pkin(5) * t4770;
t5140 = pkin(1) * t4768 - g(2) * t5701 + t5040 * t5799 + t4985;
t4516 = t5140 - t5525;
t5107 = t4534 + t4864;
t4513 = t5024 * t5522 + t5107;
t4897 = g(1) * t4970 + g(2) * t4973;
t5179 = t4513 * t5025 - t4897 * t5024;
t4486 = t5039 * t4516 + t5048 * t5179;
t5487 = t4486 * t5006 * t5038;
t5139 = pkin(1) * t4769 - g(2) * t5700 + t5043 * t5798 + t4986;
t4517 = t5139 - t5524;
t5106 = t4535 + t4865;
t4514 = t5024 * t5521 + t5106;
t4898 = g(1) * t4971 + g(2) * t4974;
t5178 = t4514 * t5025 - t4898 * t5024;
t4488 = t5042 * t4517 + t5051 * t5178;
t5486 = t4488 * t5012 * t5041;
t5138 = pkin(1) * t4770 - g(2) * t5699 + t5046 * t5797 + t4987;
t4518 = t5138 - t5523;
t5105 = t4536 + t4866;
t4515 = t5024 * t5520 + t5105;
t4899 = g(1) * t4972 + g(2) * t4975;
t5177 = t4515 * t5025 - t4899 * t5024;
t4490 = t5045 * t4518 + t5054 * t5177;
t5485 = t4490 * t5018 * t5044;
t5481 = (t4676 + t5290) * (t4676 - t5290) * t5024;
t5480 = (t4678 + t5288) * (t4678 - t5288) * t5024;
t5479 = (t4680 + t5286) * (t4680 - t5286) * t5024;
t5451 = t4741 * t5744;
t5450 = t4742 * t5744;
t5449 = t4743 * t5742;
t5448 = t4744 * t5742;
t5447 = t4745 * t5740;
t5446 = t4746 * t5740;
t5445 = t5048 * t4768;
t5444 = t5051 * t4769;
t5443 = t5054 * t4770;
t5424 = t4792 * t5744;
t5423 = t4793 * t5742;
t5422 = t4794 * t5740;
t5387 = t5024 * t4528;
t5385 = t5024 * t4529;
t5383 = t5024 * t4530;
t5381 = t4537 * t5632;
t5380 = t4538 * t5624;
t5378 = t4539 * t5616;
t5307 = t5051 * t4677;
t5305 = t4774 * t5478;
t5300 = t4775 * t5475;
t5295 = t4776 * t5472;
t5285 = t5024 * t5445;
t5284 = t4825 * t5685 * t4768;
t5283 = t5024 * t5444;
t5282 = t4828 * t5679 * t4769;
t5281 = t5024 * t5443;
t5280 = t4831 * t5673 * t4770;
t5249 = t5048 * t4675;
t5248 = t5054 * t4679;
t5233 = -t4573 + t5377;
t5232 = -t4574 + t5379;
t5231 = -t4575 + t5376;
t5230 = t5833 * t4768;
t5229 = t5833 * t4769;
t5228 = t5833 * t4770;
t5206 = (t4753 - t5290) * t5039 * t5440;
t5205 = (t4754 - t5288) * t5042 * t5435;
t5204 = (t4755 - t5286) * t5045 * t5430;
t5188 = t4628 * t5276;
t5187 = t4630 * t5271;
t5186 = t4632 * t5266;
t4642 = 0.2e1 * t5152;
t4643 = 0.2e1 * t5151;
t4644 = 0.2e1 * t5150;
t4432 = t4525 + t4441;
t4433 = t4526 + t4442;
t4434 = t4527 + t4443;
t4519 = t4768 * t5647 + t5788;
t4520 = t4769 * t5645 + t5786;
t4523 = t4770 * t5643 + t5784;
t5122 = t5024 * t4642;
t5121 = t5024 * t4643;
t5120 = t5024 * t4644;
t5116 = t5024 * t5133;
t5115 = t5024 * t5132;
t5114 = t5024 * t5137;
t5113 = t5024 * t5136;
t5112 = t5024 * t5135;
t5111 = t5024 * t5134;
t5095 = (pkin(1) * t4441 + t5203 * t5918) * t5025 - t4675 * t5804 + t4982;
t5094 = (pkin(1) * t4442 + t5201 * t5918) * t5025 - t4677 * t5804 + t4983;
t5093 = (pkin(1) * t4443 + t5199 * t5918) * t5025 - t4679 * t5804 + t4984;
t5092 = t5048 * t5122 + t5230 * t5855 - t4699 - t5230;
t5091 = t5051 * t5121 + t5229 * t5852 - t4700 - t5229;
t5090 = t5054 * t5120 + t5228 * t5849 - t4701 - t5228;
t5089 = t5445 * t5692 + (t5122 - t5445) * t5039 - t4432;
t5088 = t5444 * t5691 + (t5121 - t5444) * t5042 - t4433;
t5087 = t5443 * t5690 + (t5120 - t5443) * t5045 - t4434;
t4893 = t5797 / 0.2e1 - t4954 / 0.2e1;
t4892 = t5798 / 0.2e1 - t4953 / 0.2e1;
t4891 = t5799 / 0.2e1 - t4952 / 0.2e1;
t4758 = t4770 * t5850;
t4757 = t4769 * t5853;
t4756 = t4768 * t5856;
t4716 = t4758 + t4770;
t4715 = t4757 + t4769;
t4714 = t4756 + t4768;
t4641 = -0.2e1 * t5115;
t4640 = -0.2e1 * t5111;
t4639 = -0.2e1 * t5113;
t4631 = t4761 + 0.2e1 * t4680;
t4629 = t4760 + 0.2e1 * t4678;
t4627 = t4759 + 0.2e1 * t4676;
t4620 = -0.2e1 * t5153;
t4619 = 0.4e1 * t5153;
t4618 = -0.2e1 * t5154;
t4617 = 0.4e1 * t5154;
t4616 = -0.2e1 * t5155;
t4615 = 0.4e1 * t5155;
t4572 = ((t4773 * t5347 - 0.2e1 * t5295) * t4832 + t5591) * t5621 - t5825 * t5186;
t4571 = ((t4772 * t5348 - 0.2e1 * t5300) * t4829 + t5592) * t5629 - t5828 * t5187;
t4570 = ((t4771 * t5349 - 0.2e1 * t5305) * t4826 + t5593) * t5637 - t5831 * t5188;
t4569 = (-0.2e1 * t4679 + t4758 + 0.2e1 * t4770) * t5017 + t5186 * t5557 + ((-0.4e1 * t5017 + 0.2e1) * t5295 + (t5703 * t5825 + t5021) * t4773) * t4832 - t5591;
t4568 = (-0.2e1 * t4677 + t4757 + 0.2e1 * t4769) * t5011 + t5187 * t5558 + ((-0.4e1 * t5011 + 0.2e1) * t5300 + (t5704 * t5828 + t5015) * t4772) * t4829 - t5592;
t4567 = (-0.2e1 * t4675 + t4756 + 0.2e1 * t4768) * t5005 + t5188 * t5559 + ((-0.4e1 * t5005 + 0.2e1) * t5305 + (t5705 * t5831 + t5009) * t4771) * t4826 - t5593;
t4533 = 0.2e1 * t4536;
t4532 = 0.2e1 * t4535;
t4531 = 0.2e1 * t4534;
t4524 = t5025 * t5443 - t4530;
t4522 = t5025 * t5444 - t4529;
t4521 = t5025 * t5445 - t4528;
t4512 = t4899 * t5025 + t5024 * t5105 - t5520 * t5833;
t4511 = t4898 * t5025 + t5024 * t5106 - t5521 * t5833;
t4510 = t4897 * t5025 + t5024 * t5107 - t5522 * t5833;
t4506 = -t5044 * t5150 + t5785;
t4505 = -t5041 * t5151 + t5787;
t4504 = -t5038 * t5152 + t5789;
t4502 = t4530 + 0.2e1 * t5198;
t4500 = t4529 + 0.2e1 * t5200;
t4498 = t4528 + 0.2e1 * t5202;
t4497 = t5378 + (t5849 - 0.1e1) * t5296;
t4496 = t5380 + (t5852 - 0.1e1) * t5301;
t4495 = t5381 + (t5855 - 0.1e1) * t5306;
t4491 = t5054 * t4518 - t5045 * t5177;
t4489 = t5051 * t4517 - t5042 * t5178;
t4487 = t5048 * t4516 - t5039 * t5179;
t4485 = -t4515 * t5643 + (-pkin(5) * t5784 + t4899 * t5045) * t5024 + t5138 * t5054;
t4484 = -t4514 * t5645 + (-pkin(5) * t5786 + t4898 * t5042) * t5024 + t5139 * t5051;
t4483 = -t4513 * t5647 + (-pkin(5) * t5788 + t4897 * t5039) * t5024 + t5140 * t5048;
t4473 = t4485 * t5053 + t4512 * t5044;
t4472 = t4485 * t5044 - t4512 * t5053;
t4471 = t4484 * t5050 + t4511 * t5041;
t4470 = t4484 * t5041 - t4511 * t5050;
t4469 = t4483 * t5047 + t4510 * t5038;
t4468 = t4483 * t5038 - t4510 * t5047;
t4464 = t4467 * t5658 + 0.2e1 * t5296;
t4463 = t4466 * t5661 + 0.2e1 * t5301;
t4462 = t4465 * t5664 + 0.2e1 * t5306;
t4458 = t4523 * t5024 - t4467;
t4457 = t4520 * t5024 - t4466;
t4456 = t4519 * t5024 - t4465;
t4455 = -t4539 * t5651 + t4467 + t4635;
t4454 = -t4538 * t5653 + t4466 + t4634;
t4453 = -t4537 * t5655 + t4465 + t4633;
t4449 = -t5044 * t4458 - t5053 * t5090;
t4448 = -t5053 * t4458 + t5044 * t5090;
t4447 = -t5041 * t4457 - t5050 * t5091;
t4446 = -t5050 * t4457 + t5041 * t5091;
t4445 = -t5038 * t4456 - t5047 * t5092;
t4444 = -t5047 * t4456 + t5038 * t5092;
t4428 = t4626 * t4831 * t5470 + t4431 * t5045;
t4426 = t4625 * t4828 * t5473 + t4430 * t5042;
t4424 = t4624 * t4825 * t5476 + t4429 * t5039;
t4419 = (t4627 * t5656 + t5277 * t5638) * t5441 + t5038 * t4432 + t5047 * t5387;
t4418 = (-t4631 * t5659 + t5045 * t5189) * t5431 + t5053 * t4434 - t5044 * t5383;
t4417 = (t4631 * t5652 + t5267 * t5622) * t5431 + t5044 * t4434 + t5053 * t5383;
t4416 = (-t4629 * t5662 + t5042 * t5191) * t5436 + t5050 * t4433 - t5041 * t5385;
t4415 = (t4629 * t5654 + t5272 * t5630) * t5436 + t5041 * t4433 + t5050 * t5385;
t4414 = (-t4627 * t5665 + t5039 * t5193) * t5441 + t5047 * t4432 - t5038 * t5387;
t4410 = ((0.4e1 * t5150 - 0.2e1 * t5281) * t5025 + 0.2e1 * t5383 + t4619) * t5017 - 0.2e1 * t5087 * t5621 + (t4755 - 0.2e1 * t5286) * t4761 - t5383 + t4620;
t4409 = ((0.4e1 * t5151 - 0.2e1 * t5283) * t5025 + 0.2e1 * t5385 + t4617) * t5011 - 0.2e1 * t5088 * t5629 + (t4754 - 0.2e1 * t5288) * t4760 - t5385 + t4618;
t4408 = ((0.4e1 * t5152 - 0.2e1 * t5285) * t5025 + 0.2e1 * t5387 + t4615) * t5005 - 0.2e1 * t5089 * t5637 + (t4753 - 0.2e1 * t5290) * t4759 - t5387 + t4616;
t4407 = (t5045 * t5837 + t5054 * t5153) * t5821 + (t4893 * t5046 + t4701 * t5840 + t4987 / 0.2e1) * t5024 + t5150 * t5818 + (t5693 - t5115 * t5025 + (t5054 * t5837 - t5133) * t5024 - t4539) * pkin(5);
t4406 = (t5042 * t5838 + t5051 * t5154) * t5821 + (t4892 * t5043 + t4700 * t5840 + t4986 / 0.2e1) * t5024 + t5151 * t5819 + (t5694 - t5111 * t5025 + (t5051 * t5838 - t5135) * t5024 - t4538) * pkin(5);
t4405 = (t5039 * t5839 + t5048 * t5155) * t5821 + (t4891 * t5040 + t4699 * t5840 + t4985 / 0.2e1) * t5024 + t5152 * t5820 + (t5695 - t5113 * t5025 + (t5048 * t5839 - t5137) * t5024 - t4537) * pkin(5);
t4404 = (t4533 + t4887 + t5093) * t5054 + t5883 * t5045;
t4403 = (t4532 + t4884 + t5094) * t5051 + t5882 * t5042;
t4402 = (t4531 + t4881 + t5095) * t5048 + t5881 * t5039;
t4401 = t5883 * t5054 + (0.2e1 * t4893 * t5055 - t5093 + t5871) * t5045;
t4400 = t5882 * t5051 + (0.2e1 * t4892 * t5052 - t5094 + t5872) * t5042;
t4399 = t5881 * t5048 + (0.2e1 * t4891 * t5049 - t5095 + t5873) * t5039;
t4398 = t5087 * t5017 + (t5383 + (t4644 - t5281) * t5025 + 0.2e1 * t5153) * t5621 - t5115 + t4434;
t4397 = t5088 * t5011 + (t5385 + (t4643 - t5283) * t5025 + 0.2e1 * t5154) * t5629 - t5111 + t4433;
t4396 = t5089 * t5005 + (t5387 + (t4642 - t5285) * t5025 + 0.2e1 * t5155) * t5637 - t5113 + t4432;
t4395 = (t4461 * t5841 + t5018 * t5467 + t5024 * t5564) * t5025 + t5044 * t5570 + t4464 * t5053 + (t5044 * t5479 + (t4506 * t5003 - t5785) * t5914) * t5045 + (-0.4e1 * t5021 + t5910) * t4686 * t5755;
t4394 = (t4460 * t5843 + t5012 * t5468 + t5024 * t5565) * t5025 + t5041 * t5571 + t4463 * t5050 + (t5041 * t5480 + (t4505 * t5003 - t5787) * t5915) * t5042 + (-0.4e1 * t5015 + t5909) * t4685 * t5758;
t4393 = (t4459 * t5845 + t5006 * t5469 + t5024 * t5566) * t5025 + t5038 * t5572 + t4462 * t5047 + (t5038 * t5481 + (t4504 * t5003 - t5789) * t5916) * t5039 + (-0.4e1 * t5009 + t5908) * t4684 * t5761;
t4392 = (t4461 * t5053 - t4506 * t5651) * t5574 + t5053 * t5570 + (t5003 * t5564 + t5053 * t5479) * t5045 + (-t5025 * t4701 + 0.2e1 * t5378 - t4464 + (t5848 - t5910) * t5296) * t5044;
t4391 = (t4460 * t5050 - t4505 * t5653) * t5574 + t5050 * t5571 + (t5003 * t5565 + t5050 * t5480) * t5042 + (-t5025 * t4700 + 0.2e1 * t5380 - t4463 + (t5851 - t5909) * t5301) * t5041;
t4390 = (t4459 * t5047 - t4504 * t5655) * t5574 + t5047 * t5572 + (t5003 * t5566 + t5047 * t5481) * t5039 + (-t5025 * t4699 + 0.2e1 * t5381 - t4462 + (t5854 - t5908) * t5306) * t5038;
t4389 = ((-0.2e1 * t4581 - 0.2e1 * t4790 - 0.2e1 * t4791 - 0.2e1 * t4797 + t5672) * t5003 + (0.4e1 * t5115 - t4443) * t5025 + 0.2e1 * t5116 - t5672 + (t5832 * t5781 + (-t5231 * t5576 - t4575 + 0.2e1 * t5376) * t5770) * t4832 + t5245) * t5017 + 0.2e1 * ((t5902 * t5025 + t5248 / 0.2e1 + t5618 / 0.2e1) * t5024 + (t5019 * t5769 + (t5696 - t5703) * t5754) * t5287) * t5621 + t5693 + (t4641 + t4443) * t5025 - t5116;
t4388 = ((-0.2e1 * t4579 - 0.2e1 * t4786 - 0.2e1 * t4787 - 0.2e1 * t4795 + t5684) * t5003 + (0.4e1 * t5113 - t4441) * t5025 + 0.2e1 * t5114 - t5684 + (t5832 * t5783 + (-t5233 * t5576 - t4573 + 0.2e1 * t5377) * t5776) * t4826 + t5247) * t5005 + 0.2e1 * ((t5904 * t5025 + t5249 / 0.2e1 + t5634 / 0.2e1) * t5024 + (t5007 * t5775 + (t5698 - t5705) * t5760) * t5291) * t5637 + t5695 + (t4639 + t4441) * t5025 - t5114;
t4387 = ((-0.2e1 * t4580 - 0.2e1 * t4788 - 0.2e1 * t4789 - 0.2e1 * t4796 + t5678) * t5003 + (0.4e1 * t5111 - t4442) * t5025 + 0.2e1 * t5112 - t5678 + (t5832 * t5782 + (-t5232 * t5576 - t4574 + 0.2e1 * t5379) * t5773) * t4829 + t5246) * t5011 + 0.2e1 * ((t5903 * t5025 + t5307 / 0.2e1 + t5626 / 0.2e1) * t5024 + (t5013 * t5772 + (t5697 - t5704) * t5757) * t5289) * t5629 + t5694 + (t4640 + t4442) * t5025 - t5112;
t4386 = (t4619 * t5025 - 0.4e1 * t5150 * t5240) * t5017 + ((t5367 + (t5231 * t5770 - t5781) * t4832 + t5245) * t5003 + (t4641 + t5147) * t5025 - t5045 * t5198 - t5116 + t5672 / 0.2e1 - t4791 / 0.2e1 - t4790 / 0.2e1 - t4797 / 0.2e1 + t4566 * t5755 / 0.2e1 + t4575 * t4832 * t5370 - t4581 / 0.2e1) * t5557 + t4644 * t5703 + (-t5575 * t5902 + t4620) * t5025 + t5150 * t5850 + t4644 + ((t5573 * t5902 + 0.2e1 * t5248 + 0.2e1 * t5618) * t5017 - t5248 - t5618) * t5024;
t4385 = (t4617 * t5025 - 0.4e1 * t5151 * t5241) * t5011 + ((t5368 + (t5232 * t5773 - t5782) * t4829 + t5246) * t5003 + (t4640 + t5148) * t5025 - t5042 * t5200 - t5112 + t5678 / 0.2e1 - t4789 / 0.2e1 - t4788 / 0.2e1 - t4796 / 0.2e1 + t4565 * t5758 / 0.2e1 + t4574 * t4829 * t5371 - t4580 / 0.2e1) * t5558 + t4643 * t5704 + (-t5575 * t5903 + t4618) * t5025 + t5151 * t5853 + t4643 + ((t5573 * t5903 + 0.2e1 * t5307 + 0.2e1 * t5626) * t5011 - t5307 - t5626) * t5024;
t4384 = (t4615 * t5025 - 0.4e1 * t5152 * t5242) * t5005 + ((t5369 + (t5233 * t5776 - t5783) * t4826 + t5247) * t5003 + (t4639 + t5149) * t5025 - t5039 * t5202 - t5114 + t5684 / 0.2e1 - t4787 / 0.2e1 - t4786 / 0.2e1 - t4795 / 0.2e1 + t4564 * t5761 / 0.2e1 + t4573 * t4826 * t5372 - t4579 / 0.2e1) * t5559 + t4642 * t5705 + (-t5575 * t5904 + t4616) * t5025 + t5152 * t5856 + t4642 + ((t5573 * t5904 + 0.2e1 * t5249 + 0.2e1 * t5634) * t5005 - t5249 - t5634) * t5024;
t4383 = ((t4533 + t4866) * t5054 - t5886) * t5053 + t4407 * t5842;
t4382 = ((t5871 - t4866) * t5054 + t5886) * t5044 - 0.2e1 * t5053 * t4407;
t4381 = ((t4532 + t4865) * t5051 - t5885) * t5050 + t4406 * t5844;
t4380 = ((t5872 - t4865) * t5051 + t5885) * t5041 - 0.2e1 * t4406 * t5050;
t4379 = ((t4531 + t4864) * t5048 - t5884) * t5047 + t4405 * t5846;
t4378 = ((t5873 - t4864) * t5048 + t5884) * t5038 - 0.2e1 * t5047 * t4405;
t1 = [(t4537 * t5749 + t4538 * t5747 + t4539 * t5745) * MDP(1) + (t4799 * t5732 + t4801 * t5728 + t4803 * t5724) * MDP(2) + (t4799 * t5731 + t4801 * t5727 + t4803 * t5723) * MDP(3) + ((t4502 * t5745 - t4740 * t5280) * t5045 + (t4500 * t5747 - t4739 * t5282) * t5042 + (t4498 * t5749 - t4738 * t5284) * t5039) * t5793 + ((t4497 * t5862 + t4716 * t5763) * t4831 + (t4496 * t5864 + t4715 * t5764) * t4828 + (t4495 * t5866 + t4714 * t5765) * t4825) * t5792 + ((t4428 * t5862 - t4524 * t5763) * t4831 + (t4426 * t5864 - t4522 * t5764) * t4828 + (t4424 * t5866 - t4521 * t5765) * t4825) * t5791 + ((t4523 * t5763 + t4803 * t5874) * t4831 + (t4520 * t5764 + t4801 * t5875) * t4828 + (t4519 * t5765 + t4799 * t5876) * t4825) * t5790 + (t4432 * t5454 + t4433 * t5453 + t4434 * t5452 + (t4432 * t5749 + t4433 * t5747 + t4434 * t5745) * t5025) * MDP(8) + ((t4404 * t4803 + t4490 * t5763) * t4831 + (t4403 * t4801 + t4488 * t5764) * t4828 + (t4402 * t4799 + t4486 * t5765) * t4825) * MDP(9) + ((t4401 * t4803 + t4491 * t5763) * t4831 + (t4400 * t4801 + t4489 * t5764) * t4828 + (t4399 * t4799 + t4487 * t5765) * t4825) * MDP(10) + ((t4389 * t4803 + t4398 * t5763) * t4831 + (t4387 * t4801 + t4397 * t5764) * t4828 + (t4388 * t4799 + t4396 * t5765) * t4825 + (t4570 * t5450 + t4571 * t5448 + t4572 * t5446) * t5070) * MDP(11) + ((t4386 * t4803 + t4410 * t5763) * t4831 + (t4385 * t4801 + t4409 * t5764) * t4828 + (t4384 * t4799 + t4408 * t5765) * t4825 + (t4567 * t5450 + t4568 * t5448 + t4569 * t5446) * t5070) * MDP(12) + ((t4395 * t4803 + t4449 * t5763) * t4831 + (t4394 * t4801 + t4447 * t5764) * t4828 + (t4393 * t4799 + t4445 * t5765) * t4825 + (t4415 * t5448 + t4417 * t5446 + t4419 * t5450) * t5070) * MDP(13) + ((t4392 * t4803 + t4448 * t5763) * t4831 + (t4391 * t4801 + t4446 * t5764) * t4828 + (t4390 * t4799 + t4444 * t5765) * t4825 + (t4414 * t5450 + t4416 * t5448 + t4418 * t5446) * t5070) * MDP(14) + ((t4453 * t5450 + t4454 * t5448 + t4455 * t5446) * t5070 + (t4738 * t5206 + t4739 * t5205 + t4740 * t5204 + t4799 * t5568 + t4801 * t5567 + t4803 * t5569) * t5024) * MDP(15) + ((t4383 * t4803 + t4490 * t4740) * t4831 + (t4381 * t4801 + t4488 * t4739) * t4828 + (t4379 * t4799 + t4486 * t4738) * t4825 + (t4468 * t5450 + t4470 * t5448 + t4472 * t5446) * t5070) * MDP(16) + ((t4382 * t4803 - t4740 * t5485) * t4831 + (t4380 * t4801 - t4739 * t5486) * t4828 + (t4378 * t4799 - t4738 * t5487) * t4825 + (t4469 * t5450 + t4471 * t5448 + t4473 * t5446) * t5070) * MDP(17) + (t5037 - g(1)) * MDP(18); (t4537 * t5750 + t4538 * t5748 + t4539 * t5746) * MDP(1) + (t4798 * t5732 + t4800 * t5728 + t4802 * t5724) * MDP(2) + (t4798 * t5731 + t4800 * t5727 + t4802 * t5723) * MDP(3) + ((t4502 * t5746 - t4737 * t5280) * t5045 + (t4500 * t5748 - t4736 * t5282) * t5042 + (t4498 * t5750 - t4735 * t5284) * t5039) * t5793 + ((t4497 * t5863 + t4716 * t5766) * t4831 + (t4496 * t5865 + t4715 * t5767) * t4828 + (t4495 * t5867 + t4714 * t5768) * t4825) * t5792 + ((t4428 * t5863 - t4524 * t5766) * t4831 + (t4426 * t5865 - t4522 * t5767) * t4828 + (t4424 * t5867 - t4521 * t5768) * t4825) * t5791 + ((t4523 * t5766 + t4802 * t5874) * t4831 + (t4520 * t5767 + t4800 * t5875) * t4828 + (t4519 * t5768 + t4798 * t5876) * t4825) * t5790 + (t4432 * t5457 + t4433 * t5456 + t4434 * t5455 + (t4432 * t5750 + t4433 * t5748 + t4434 * t5746) * t5025) * MDP(8) + ((t4404 * t4802 + t4490 * t5766) * t4831 + (t4403 * t4800 + t4488 * t5767) * t4828 + (t4402 * t4798 + t4486 * t5768) * t4825) * MDP(9) + ((t4401 * t4802 + t4491 * t5766) * t4831 + (t4400 * t4800 + t4489 * t5767) * t4828 + (t4399 * t4798 + t4487 * t5768) * t4825) * MDP(10) + ((t4389 * t4802 + t4398 * t5766) * t4831 + (t4387 * t4800 + t4397 * t5767) * t4828 + (t4388 * t4798 + t4396 * t5768) * t4825 + (t4570 * t5451 + t4571 * t5449 + t4572 * t5447) * t5070) * MDP(11) + ((t4386 * t4802 + t4410 * t5766) * t4831 + (t4385 * t4800 + t4409 * t5767) * t4828 + (t4384 * t4798 + t4408 * t5768) * t4825 + (t4567 * t5451 + t4568 * t5449 + t4569 * t5447) * t5070) * MDP(12) + ((t4395 * t4802 + t4449 * t5766) * t4831 + (t4394 * t4800 + t4447 * t5767) * t4828 + (t4393 * t4798 + t4445 * t5768) * t4825 + (t4415 * t5449 + t4417 * t5447 + t4419 * t5451) * t5070) * MDP(13) + ((t4392 * t4802 + t4448 * t5766) * t4831 + (t4391 * t4800 + t4446 * t5767) * t4828 + (t4390 * t4798 + t4444 * t5768) * t4825 + (t4414 * t5451 + t4416 * t5449 + t4418 * t5447) * t5070) * MDP(14) + ((t4453 * t5451 + t4454 * t5449 + t4455 * t5447) * t5070 + (t4735 * t5206 + t4736 * t5205 + t4737 * t5204 + t4798 * t5568 + t4800 * t5567 + t4802 * t5569) * t5024) * MDP(15) + ((t4383 * t4802 + t4490 * t4737) * t4831 + (t4381 * t4800 + t4488 * t4736) * t4828 + (t4379 * t4798 + t4486 * t4735) * t4825 + (t4468 * t5451 + t4470 * t5449 + t4472 * t5447) * t5070) * MDP(16) + ((t4382 * t4802 - t4737 * t5485) * t4831 + (t4380 * t4800 - t4736 * t5486) * t4828 + (t4378 * t4798 - t4735 * t5487) * t4825 + (t4469 * t5451 + t4471 * t5449 + t4473 * t5447) * t5070) * MDP(17) + (t5036 - g(2)) * MDP(18); (t4537 * t5738 + t4538 * t5737 + t4539 * t5736) * MDP(1) + (t4816 * t5732 + t4817 * t5728 + t4818 * t5724) * MDP(2) + (t4816 * t5731 + t4817 * t5727 + t4818 * t5723) * MDP(3) + ((t4502 * t5736 - t4785 * t5280) * t5045 + (t4500 * t5737 - t4784 * t5282) * t5042 + (t4498 * t5738 - t4783 * t5284) * t5039) * t5793 + ((t4497 * t5859 + t4716 * t5751) * t4831 + (t4496 * t5860 + t4715 * t5752) * t4828 + (t4495 * t5861 + t4714 * t5753) * t4825) * t5792 + ((t4428 * t5859 - t4524 * t5751) * t4831 + (t4426 * t5860 - t4522 * t5752) * t4828 + (t4424 * t5861 - t4521 * t5753) * t4825) * t5791 + ((t4523 * t5751 + t4818 * t5874) * t4831 + (t4520 * t5752 + t4817 * t5875) * t4828 + (t4519 * t5753 + t4816 * t5876) * t4825) * t5790 + (t4432 * t5427 + t4433 * t5426 + t4434 * t5425 + (t4432 * t5738 + t4433 * t5737 + t4434 * t5736) * t5025) * MDP(8) + ((t4404 * t4818 + t4490 * t5751) * t4831 + (t4403 * t4817 + t4488 * t5752) * t4828 + (t4402 * t4816 + t4486 * t5753) * t4825) * MDP(9) + ((t4401 * t4818 + t4491 * t5751) * t4831 + (t4400 * t4817 + t4489 * t5752) * t4828 + (t4399 * t4816 + t4487 * t5753) * t4825) * MDP(10) + ((t4389 * t4818 + t4398 * t5751) * t4831 + (t4387 * t4817 + t4397 * t5752) * t4828 + (t4388 * t4816 + t4396 * t5753) * t4825 + (-t4570 * t5424 - t4571 * t5423 - t4572 * t5422) * t5649) * MDP(11) + ((t4386 * t4818 + t4410 * t5751) * t4831 + (t4385 * t4817 + t4409 * t5752) * t4828 + (t4384 * t4816 + t4408 * t5753) * t4825 + (-t4567 * t5424 - t4568 * t5423 - t4569 * t5422) * t5649) * MDP(12) + ((t4395 * t4818 + t4449 * t5751) * t4831 + (t4394 * t4817 + t4447 * t5752) * t4828 + (t4393 * t4816 + t4445 * t5753) * t4825 + (-t4415 * t5423 - t4417 * t5422 - t4419 * t5424) * t5649) * MDP(13) + ((t4392 * t4818 + t4448 * t5751) * t4831 + (t4391 * t4817 + t4446 * t5752) * t4828 + (t4390 * t4816 + t4444 * t5753) * t4825 + (-t4414 * t5424 - t4416 * t5423 - t4418 * t5422) * t5649) * MDP(14) + (t4783 * t5206 + t4784 * t5205 + t4785 * t5204 + t4818 * t5569 + t4816 * t5568 + t4817 * t5567 + (-t4453 * t5424 - t4454 * t5423 - t4455 * t5422) * t5070) * t5024 * MDP(15) + ((t4383 * t4818 + t4490 * t4785) * t4831 + (t4381 * t4817 + t4488 * t4784) * t4828 + (t4379 * t4816 + t4486 * t4783) * t4825 + (-t4468 * t5424 - t4470 * t5423 - t4472 * t5422) * t5649) * MDP(16) + ((t4382 * t4818 - t4785 * t5485) * t4831 + (t4380 * t4817 - t4784 * t5486) * t4828 + (t4378 * t4816 - t4783 * t5487) * t4825 + (-t4469 * t5424 - t4471 * t5423 - t4473 * t5422) * t5649) * MDP(17) + (t5035 - g(3)) * MDP(18);];
tauX  = t1;
