% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR10V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 23:28
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp2: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 23:01:57
% EndTime: 2020-08-06 23:03:57
% DurationCPUTime: 123.76s
% Computational Cost: add. (536175->1613), mult. (1565766->2638), div. (43659->13), fcn. (1294113->26), ass. (0->938)
t2733 = Ifges(3,3) - Ifges(3,2);
t2040 = Ifges(2,2) - Ifges(2,1) + t2733;
t2129 = cos(qJ(2,3));
t2092 = t2129 ^ 2;
t2119 = sin(qJ(3,3));
t2138 = (pkin(5) * mrSges(3,1));
t2650 = -2 * t2138;
t2128 = cos(qJ(3,3));
t2089 = t2128 ^ 2;
t2113 = Ifges(3,2) - Ifges(3,1);
t2005 = t2113 * t2089;
t2523 = t2119 * t2128;
t2383 = Ifges(3,4) * t2523;
t2773 = -0.2e1 * t2383 - t2005;
t2800 = -(-t2773 + t2040) * t2092 + t2119 * t2650;
t2132 = cos(qJ(2,2));
t2097 = t2132 ^ 2;
t2122 = sin(qJ(3,2));
t2131 = cos(qJ(3,2));
t2094 = t2131 ^ 2;
t2006 = t2113 * t2094;
t2518 = t2122 * t2131;
t2382 = Ifges(3,4) * t2518;
t2772 = -0.2e1 * t2382 - t2006;
t2799 = -(-t2772 + t2040) * t2097 + t2122 * t2650;
t2135 = cos(qJ(2,1));
t2102 = t2135 ^ 2;
t2125 = sin(qJ(3,1));
t2134 = cos(qJ(3,1));
t2099 = t2134 ^ 2;
t2007 = t2113 * t2099;
t2513 = t2125 * t2134;
t2381 = Ifges(3,4) * t2513;
t2771 = -0.2e1 * t2381 - t2007;
t2798 = -(-t2771 + t2040) * t2102 + t2125 * t2650;
t2735 = Ifges(3,1) + Ifges(2,3);
t2797 = -t2735 + t2771;
t2796 = -t2735 + t2772;
t2795 = -t2735 + t2773;
t2654 = t2119 * mrSges(3,2);
t2001 = -mrSges(2,1) + t2654;
t2048 = Ifges(3,4) * t2089;
t2120 = sin(qJ(2,3));
t2734 = Ifges(2,5) - Ifges(3,4);
t1988 = -Ifges(3,5) * t2119 - Ifges(3,6) * t2128;
t2115 = mrSges(3,3) - mrSges(2,2);
t2004 = -t2115 * pkin(5) - Ifges(2,6);
t2762 = t1988 - t2004;
t2530 = t2113 * t2119;
t2765 = t2530 + t2138;
t2791 = t2129 * t2762 + (t2001 * pkin(5) - t2765 * t2128 + 0.2e1 * t2048 + t2734) * t2120;
t2653 = t2122 * mrSges(3,2);
t2002 = -mrSges(2,1) + t2653;
t2049 = Ifges(3,4) * t2094;
t2123 = sin(qJ(2,2));
t1989 = -Ifges(3,5) * t2122 - Ifges(3,6) * t2131;
t2763 = t1989 - t2004;
t2528 = t2113 * t2122;
t2766 = t2528 + t2138;
t2790 = t2132 * t2763 + (t2002 * pkin(5) - t2766 * t2131 + 0.2e1 * t2049 + t2734) * t2123;
t2652 = t2125 * mrSges(3,2);
t2003 = -mrSges(2,1) + t2652;
t2050 = Ifges(3,4) * t2099;
t2126 = sin(qJ(2,1));
t1990 = -Ifges(3,5) * t2125 - Ifges(3,6) * t2134;
t2764 = t1990 - t2004;
t2526 = t2113 * t2125;
t2767 = t2526 + t2138;
t2789 = t2135 * t2764 + (t2003 * pkin(5) - t2767 * t2134 + 0.2e1 * t2050 + t2734) * t2126;
t2106 = cos(pkin(3));
t2083 = t2106 ^ 2;
t2731 = t2083 - 0.1e1;
t2788 = pkin(6) * t2731;
t2787 = -0.4e1 * pkin(6);
t2786 = 0.2e1 * pkin(6);
t2105 = sin(pkin(3));
t2785 = 0.2e1 * t2105;
t2784 = 0.2e1 * t2113;
t2730 = t2092 - 0.1e1;
t2729 = t2097 - 0.1e1;
t2728 = t2102 - 0.1e1;
t2059 = t2120 * pkin(6);
t2014 = t2059 + pkin(1);
t2061 = t2123 * pkin(6);
t2018 = t2061 + pkin(1);
t2063 = t2126 * pkin(6);
t2022 = t2063 + pkin(1);
t2521 = t2120 * t2128;
t2422 = pkin(2) * t2521;
t2689 = pkin(6) * t2129;
t1967 = -t2422 + t2689;
t2130 = cos(qJ(1,3));
t2121 = sin(qJ(1,3));
t2540 = t2106 * t2121;
t2509 = t2128 * t2129;
t2768 = -pkin(2) * t2509 - t2059;
t1937 = t1967 * t2540 - t2130 * t2768;
t2116 = legFrame(3,2);
t2051 = sin(t2116);
t2054 = cos(t2116);
t2524 = t2119 * t2121;
t2423 = pkin(2) * t2524;
t2542 = t2106 * t2119;
t2426 = pkin(2) * t2542;
t1910 = (t1967 * t2054 + t2051 * t2423) * t2105 + t1937 * t2051 - t2054 * t2426;
t2058 = t2119 * pkin(2);
t2032 = pkin(1) * t2058;
t2581 = t1967 * t2106;
t1928 = 0.1e1 / (pkin(1) * t2581 + (pkin(5) * t2768 + t2032) * t2105);
t2142 = xDP(2);
t2589 = t1928 * t2142;
t1895 = t1910 * t2589;
t1911 = (t1967 * t2051 - t2054 * t2423) * t2105 - t1937 * t2054 - t2051 * t2426;
t2143 = xDP(1);
t2588 = t1928 * t2143;
t1896 = t1911 * t2588;
t2557 = t2105 * t2119;
t1922 = -t2768 * t2121 + (-pkin(2) * t2557 - t2581) * t2130;
t2141 = xDP(3);
t2590 = t1928 * t2141;
t1907 = t1922 * t2590;
t1874 = t1896 + t1895 + t1907;
t1871 = t1874 ^ 2;
t2782 = Ifges(3,4) * t1871;
t2516 = t2123 * t2131;
t2420 = pkin(2) * t2516;
t2688 = pkin(6) * t2132;
t1968 = -t2420 + t2688;
t2133 = cos(qJ(1,2));
t2124 = sin(qJ(1,2));
t2537 = t2106 * t2124;
t2507 = t2131 * t2132;
t2769 = -pkin(2) * t2507 - t2061;
t1938 = t1968 * t2537 - t2133 * t2769;
t2117 = legFrame(2,2);
t2052 = sin(t2117);
t2055 = cos(t2117);
t2519 = t2122 * t2124;
t2421 = pkin(2) * t2519;
t2539 = t2106 * t2122;
t2425 = pkin(2) * t2539;
t1912 = (t1968 * t2055 + t2052 * t2421) * t2105 + t1938 * t2052 - t2055 * t2425;
t2060 = t2122 * pkin(2);
t2034 = pkin(1) * t2060;
t2580 = t1968 * t2106;
t1929 = 0.1e1 / (pkin(1) * t2580 + (pkin(5) * t2769 + t2034) * t2105);
t2586 = t1929 * t2142;
t1897 = t1912 * t2586;
t1913 = (t1968 * t2052 - t2055 * t2421) * t2105 - t1938 * t2055 - t2052 * t2425;
t2585 = t1929 * t2143;
t1898 = t1913 * t2585;
t2555 = t2105 * t2122;
t1923 = -t2769 * t2124 + (-pkin(2) * t2555 - t2580) * t2133;
t2587 = t1929 * t2141;
t1908 = t1923 * t2587;
t1875 = t1898 + t1897 + t1908;
t1872 = t1875 ^ 2;
t2781 = Ifges(3,4) * t1872;
t2511 = t2126 * t2134;
t2418 = pkin(2) * t2511;
t2687 = pkin(6) * t2135;
t1969 = -t2418 + t2687;
t2136 = cos(qJ(1,1));
t2127 = sin(qJ(1,1));
t2534 = t2106 * t2127;
t2505 = t2134 * t2135;
t2770 = -pkin(2) * t2505 - t2063;
t1939 = t1969 * t2534 - t2136 * t2770;
t2118 = legFrame(1,2);
t2053 = sin(t2118);
t2056 = cos(t2118);
t2514 = t2125 * t2127;
t2419 = pkin(2) * t2514;
t2536 = t2106 * t2125;
t2424 = pkin(2) * t2536;
t1914 = (t1969 * t2056 + t2053 * t2419) * t2105 + t1939 * t2053 - t2056 * t2424;
t2062 = t2125 * pkin(2);
t2036 = pkin(1) * t2062;
t2579 = t1969 * t2106;
t1930 = 0.1e1 / (pkin(1) * t2579 + (pkin(5) * t2770 + t2036) * t2105);
t2583 = t1930 * t2142;
t1899 = t1914 * t2583;
t1915 = (t1969 * t2053 - t2056 * t2419) * t2105 - t1939 * t2056 - t2053 * t2424;
t2582 = t1930 * t2143;
t1900 = t1915 * t2582;
t2553 = t2105 * t2125;
t1924 = -t2770 * t2127 + (-pkin(2) * t2553 - t2579) * t2136;
t2584 = t1930 * t2141;
t1909 = t1924 * t2584;
t1876 = t1900 + t1899 + t1909;
t1873 = t1876 ^ 2;
t2780 = Ifges(3,4) * t1873;
t2041 = t2092 - 0.2e1;
t1979 = t2041 * t2058 - pkin(5);
t1940 = t1979 * t2105 * t2121 - t2014 * t2130;
t1973 = t2058 * t2730 - pkin(5);
t2011 = pkin(5) * t2119 + pkin(2);
t2520 = t2120 * t2129;
t2310 = t2119 * t2520;
t2709 = pkin(2) * t2105;
t2205 = t2310 * t2709;
t2183 = t2130 * t2205;
t2401 = t2121 * t2689;
t2250 = t2119 * t2401;
t2708 = pkin(2) * t2120;
t2395 = t2121 * t2708;
t2259 = t2089 * t2395;
t2522 = t2119 * t2129;
t2322 = t2054 * t2522;
t2551 = t2105 * t2129;
t2405 = pkin(6) * t2551;
t2508 = t2129 * t2130;
t2556 = t2105 * t2120;
t2712 = pkin(2) * t2089;
t2571 = (t2129 + 0.1e1) * (t2129 - 0.1e1);
t2690 = pkin(6) * t2105;
t2253 = t2571 * t2690;
t2550 = t2105 * t2130;
t2761 = t2119 * (-(pkin(1) * t2550 + pkin(5) * t2121) * t2120 + t2130 * t2253) - t2395;
t2292 = -t2011 + 0.2e1 * t2712;
t2776 = t2121 * t2292;
t1877 = ((-t1979 * t2054 - t2051 * t2401) * t2128 + (-pkin(6) * t2322 + t2051 * t2776) * t2120) * t2083 + (-(t2051 * t2508 - 0.2e1 * t2054 * t2556) * t2712 + (t1940 * t2051 - t2054 * t2405) * t2128 + (-t2011 * t2054 + t2051 * t2250) * t2556) * t2106 - t2051 * t2259 + (t1973 * t2054 + t2051 * t2183) * t2128 - t2761 * t2051 + t2014 * t2322;
t2325 = t2051 * t2522;
t1880 = ((-t1979 * t2051 + t2054 * t2401) * t2128 + (-pkin(6) * t2325 - t2054 * t2776) * t2120) * t2083 + ((0.2e1 * t2051 * t2556 + t2054 * t2508) * t2712 + (-t1940 * t2054 - t2051 * t2405) * t2128 - (t2011 * t2051 + t2054 * t2250) * t2556) * t2106 + t2054 * t2259 + (t1973 * t2051 - t2054 * t2183) * t2128 + t2761 * t2054 + t2014 * t2325;
t2398 = pkin(6) * t2509;
t2432 = t2089 * t2708;
t2439 = pkin(1) * t2557;
t1892 = (-pkin(6) * t2310 - t1979 * t2128) * t2550 * t2106 - t2253 * t2524 + ((-t2014 * t2128 - t2129 * t2712) * t2106 + t2128 * t2205 + t2439 * t2120) * t2121 + ((-t2120 * t2292 + t2398) * t2083 + t2432 - t2011 * t2120) * t2130;
t2090 = 0.1e1 / t2128;
t1829 = (t1877 * t2589 + t1880 * t2588 + t1892 * t2590) * t2090;
t2163 = pkin(2) ^ 2;
t1820 = t2163 * t1829;
t2088 = t2128 * t2089;
t2779 = t1820 * t2088;
t2042 = t2097 - 0.2e1;
t1980 = t2042 * t2060 - pkin(5);
t1941 = t1980 * t2105 * t2124 - t2018 * t2133;
t1974 = t2060 * t2729 - pkin(5);
t2015 = pkin(5) * t2122 + pkin(2);
t2515 = t2123 * t2132;
t2308 = t2122 * t2515;
t2204 = t2308 * t2709;
t2182 = t2133 * t2204;
t2400 = t2124 * t2688;
t2249 = t2122 * t2400;
t2707 = pkin(2) * t2123;
t2392 = t2124 * t2707;
t2258 = t2094 * t2392;
t2517 = t2122 * t2132;
t2321 = t2055 * t2517;
t2549 = t2105 * t2132;
t2404 = pkin(6) * t2549;
t2506 = t2132 * t2133;
t2554 = t2105 * t2123;
t2711 = pkin(2) * t2094;
t2570 = (t2132 + 0.1e1) * (t2132 - 0.1e1);
t2252 = t2570 * t2690;
t2548 = t2105 * t2133;
t2760 = t2122 * (-(pkin(1) * t2548 + pkin(5) * t2124) * t2123 + t2133 * t2252) - t2392;
t2291 = -t2015 + 0.2e1 * t2711;
t2775 = t2124 * t2291;
t1878 = ((-t1980 * t2055 - t2052 * t2400) * t2131 + (-pkin(6) * t2321 + t2052 * t2775) * t2123) * t2083 + (-(t2052 * t2506 - 0.2e1 * t2055 * t2554) * t2711 + (t1941 * t2052 - t2055 * t2404) * t2131 + (-t2015 * t2055 + t2052 * t2249) * t2554) * t2106 - t2052 * t2258 + (t1974 * t2055 + t2052 * t2182) * t2131 - t2760 * t2052 + t2018 * t2321;
t2324 = t2052 * t2517;
t1881 = ((-t1980 * t2052 + t2055 * t2400) * t2131 + (-pkin(6) * t2324 - t2055 * t2775) * t2123) * t2083 + ((0.2e1 * t2052 * t2554 + t2055 * t2506) * t2711 + (-t1941 * t2055 - t2052 * t2404) * t2131 - (t2015 * t2052 + t2055 * t2249) * t2554) * t2106 + t2055 * t2258 + (t1974 * t2052 - t2055 * t2182) * t2131 + t2760 * t2055 + t2018 * t2324;
t2431 = t2094 * t2707;
t2438 = pkin(1) * t2555;
t1893 = (-pkin(6) * t2308 - t1980 * t2131) * t2548 * t2106 - t2252 * t2519 + ((-t2018 * t2131 - t2132 * t2711) * t2106 + t2131 * t2204 + t2438 * t2123) * t2124 + ((pkin(6) * t2507 - t2123 * t2291) * t2083 + t2431 - t2015 * t2123) * t2133;
t2095 = 0.1e1 / t2131;
t1830 = (t1878 * t2586 + t1881 * t2585 + t1893 * t2587) * t2095;
t1821 = t2163 * t1830;
t2093 = t2131 * t2094;
t2778 = t1821 * t2093;
t2043 = t2102 - 0.2e1;
t1981 = t2043 * t2062 - pkin(5);
t1942 = t1981 * t2105 * t2127 - t2022 * t2136;
t1975 = t2062 * t2728 - pkin(5);
t2019 = pkin(5) * t2125 + pkin(2);
t2510 = t2126 * t2135;
t2306 = t2125 * t2510;
t2203 = t2306 * t2709;
t2181 = t2136 * t2203;
t2399 = t2127 * t2687;
t2248 = t2125 * t2399;
t2706 = pkin(2) * t2126;
t2390 = t2127 * t2706;
t2257 = t2099 * t2390;
t2512 = t2125 * t2135;
t2320 = t2056 * t2512;
t2547 = t2105 * t2135;
t2403 = pkin(6) * t2547;
t2504 = t2135 * t2136;
t2552 = t2105 * t2126;
t2710 = pkin(2) * t2099;
t2569 = (t2135 + 0.1e1) * (t2135 - 0.1e1);
t2251 = t2569 * t2690;
t2546 = t2105 * t2136;
t2759 = t2125 * (-(pkin(1) * t2546 + pkin(5) * t2127) * t2126 + t2136 * t2251) - t2390;
t2290 = -t2019 + 0.2e1 * t2710;
t2774 = t2127 * t2290;
t1879 = ((-t1981 * t2056 - t2053 * t2399) * t2134 + (-pkin(6) * t2320 + t2053 * t2774) * t2126) * t2083 + (-(t2053 * t2504 - 0.2e1 * t2056 * t2552) * t2710 + (t1942 * t2053 - t2056 * t2403) * t2134 + (-t2019 * t2056 + t2053 * t2248) * t2552) * t2106 - t2053 * t2257 + (t1975 * t2056 + t2053 * t2181) * t2134 - t2759 * t2053 + t2022 * t2320;
t2323 = t2053 * t2512;
t1882 = ((-t1981 * t2053 + t2056 * t2399) * t2134 + (-pkin(6) * t2323 - t2056 * t2774) * t2126) * t2083 + ((0.2e1 * t2053 * t2552 + t2056 * t2504) * t2710 + (-t1942 * t2056 - t2053 * t2403) * t2134 - (t2019 * t2053 + t2056 * t2248) * t2552) * t2106 + t2056 * t2257 + (t1975 * t2053 - t2056 * t2181) * t2134 + t2759 * t2056 + t2022 * t2323;
t2397 = pkin(6) * t2505;
t2430 = t2099 * t2706;
t2437 = pkin(1) * t2553;
t1894 = (-pkin(6) * t2306 - t1981 * t2134) * t2546 * t2106 - t2251 * t2514 + ((-t2022 * t2134 - t2135 * t2710) * t2106 + t2134 * t2203 + t2437 * t2126) * t2127 + ((-t2126 * t2290 + t2397) * t2083 + t2430 - t2019 * t2126) * t2136;
t2100 = 0.1e1 / t2134;
t1831 = (t1879 * t2583 + t1882 * t2582 + t1894 * t2584) * t2100;
t1822 = t2163 * t1831;
t2098 = t2134 * t2099;
t2777 = t1822 * t2098;
t2543 = t2105 * t2163;
t2609 = t1874 * t2106;
t1781 = t1829 + t2609;
t2604 = t1875 * t2106;
t1782 = t1830 + t2604;
t2599 = t1876 * t2106;
t1783 = t1831 + t2599;
t2067 = pkin(1) * t2092;
t1985 = t2067 - t2014;
t2068 = pkin(1) * t2097;
t1986 = t2068 - t2018;
t2069 = pkin(1) * t2102;
t1987 = t2069 - t2022;
t2758 = 0.2e1 * pkin(1);
t2158 = 0.2e1 * pkin(5);
t2757 = -0.2e1 * pkin(6);
t2755 = 0.4e1 * Ifges(3,4);
t2754 = 0.2e1 * t1829;
t2753 = 0.2e1 * t1830;
t2752 = 0.2e1 * t1831;
t2751 = 0.2e1 * t1874;
t2750 = 0.2e1 * t1875;
t2749 = 0.2e1 * t1876;
t2748 = 0.3e1 * t2106 * t2083;
t2747 = -0.2e1 * t2083;
t2746 = -0.2e1 * t2105;
t2137 = pkin(5) * mrSges(3,2);
t2743 = 0.2e1 * t2137;
t2155 = pkin(6) / 0.2e1;
t2139 = pkin(1) * mrSges(3,2);
t2742 = pkin(5) * mrSges(2,1);
t1817 = pkin(5) * t1829;
t2741 = t1817 / 0.2e1;
t1818 = pkin(5) * t1830;
t2740 = t1818 / 0.2e1;
t1819 = pkin(5) * t1831;
t2739 = t1819 / 0.2e1;
t2738 = t2040 / 0.2e1;
t2737 = -t2113 / 0.2e1;
t2732 = t2747 + 0.2e1;
t1823 = pkin(1) * t1829;
t1824 = pkin(1) * t1830;
t1825 = pkin(1) * t1831;
t2064 = pkin(1) * t2120;
t2023 = t2064 + pkin(6);
t2012 = t2058 + pkin(5);
t2241 = t2731 * t2121 * t2012;
t1931 = t2023 * t2550 - t2120 * t2241;
t2013 = 0.2e1 * t2059 + pkin(1);
t1934 = t2013 * t2550 - t2241;
t2313 = t2105 * t2540;
t2229 = t2051 * t2313;
t1946 = -t2054 * t2083 + t2054 + t2229;
t2408 = t2083 * t2059;
t1961 = -t2408 + t2014;
t1982 = t2064 - t2788;
t2160 = pkin(6) ^ 2;
t2566 = t2089 * t2163;
t2268 = -t2160 + t2566;
t2193 = t2268 * t2130;
t2202 = t2313 * t2059;
t2309 = t2012 * t2556;
t2232 = t2106 * t2309;
t2318 = t2120 * t2566;
t2558 = t2105 * t2106;
t2334 = t2012 * t2558;
t2705 = pkin(2) * t2128;
t2465 = pkin(6) * t2705;
t2376 = 0.2e1 * t2465;
t1883 = (t2051 * t2105 * t2193 + t1946 * t2376) * t2092 + (-t1946 * t2318 + (t1934 * t2051 - t2054 * t2334) * t2705 + (t1961 * t2054 + t2051 * t2202) * pkin(6)) * t2129 - (pkin(6) * t2229 + t1982 * t2054) * t2705 + pkin(6) * (t1931 * t2051 - t2054 * t2232);
t2226 = t2054 * t2313;
t1947 = t2051 * t2083 - t2051 + t2226;
t2377 = -0.2e1 * t2465;
t1884 = (-t2054 * t2268 * t2550 + t1947 * t2377) * t2092 + (t1947 * t2318 - (t1934 * t2054 + t2051 * t2334) * t2705 + pkin(6) * (t1961 * t2051 - t2054 * t2202)) * t2129 - (-pkin(6) * t2226 + t1982 * t2051) * t2705 - (t1931 * t2054 + t2051 * t2232) * pkin(6);
t2541 = t2106 * t2120;
t1901 = (t2106 * t2130 * t2377 + t2121 * t2268) * t2092 + ((-t2012 * t2550 + t2013 * t2121) * t2705 + t2193 * t2541) * t2129 + pkin(6) * (t2023 * t2121 + (t2106 * t2705 - t2309) * t2130);
t2164 = 0.1e1 / pkin(2);
t1958 = t2105 * (-pkin(5) * t2059 + t2032);
t2720 = pkin(1) * t2106;
t2030 = pkin(6) * t2720;
t2429 = t2105 * t2705;
t2596 = 0.1e1 / ((-pkin(5) * t2429 + t2030) * t2129 - t2422 * t2720 + t1958) * t2090;
t2337 = t2164 * t2596;
t2545 = t2105 * t2141;
t1859 = (t1883 * t2142 + t1884 * t2143 + t1901 * t2545) * t2337;
t1853 = pkin(1) * t1859;
t2065 = pkin(1) * t2123;
t2024 = t2065 + pkin(6);
t2016 = t2060 + pkin(5);
t2240 = t2731 * t2124 * t2016;
t1932 = t2024 * t2548 - t2123 * t2240;
t2017 = 0.2e1 * t2061 + pkin(1);
t1935 = t2017 * t2548 - t2240;
t2312 = t2105 * t2537;
t2228 = t2052 * t2312;
t1948 = -t2055 * t2083 + t2055 + t2228;
t2407 = t2083 * t2061;
t1962 = -t2407 + t2018;
t1983 = t2065 - t2788;
t2563 = t2094 * t2163;
t2267 = -t2160 + t2563;
t2192 = t2267 * t2133;
t2201 = t2312 * t2061;
t2307 = t2016 * t2554;
t2231 = t2106 * t2307;
t2316 = t2123 * t2563;
t2333 = t2016 * t2558;
t2704 = pkin(2) * t2131;
t2464 = pkin(6) * t2704;
t2374 = 0.2e1 * t2464;
t1885 = (t2052 * t2105 * t2192 + t1948 * t2374) * t2097 + (-t1948 * t2316 + (t1935 * t2052 - t2055 * t2333) * t2704 + (t1962 * t2055 + t2052 * t2201) * pkin(6)) * t2132 - (pkin(6) * t2228 + t1983 * t2055) * t2704 + pkin(6) * (t1932 * t2052 - t2055 * t2231);
t2225 = t2055 * t2312;
t1949 = t2052 * t2083 - t2052 + t2225;
t2375 = -0.2e1 * t2464;
t1886 = (-t2055 * t2267 * t2548 + t1949 * t2375) * t2097 + (t1949 * t2316 - (t1935 * t2055 + t2052 * t2333) * t2704 + pkin(6) * (t1962 * t2052 - t2055 * t2201)) * t2132 - (-pkin(6) * t2225 + t1983 * t2052) * t2704 - (t1932 * t2055 + t2052 * t2231) * pkin(6);
t2538 = t2106 * t2123;
t1902 = (t2106 * t2133 * t2375 + t2124 * t2267) * t2097 + ((-t2016 * t2548 + t2017 * t2124) * t2704 + t2192 * t2538) * t2132 + pkin(6) * (t2024 * t2124 + (t2106 * t2704 - t2307) * t2133);
t1959 = t2105 * (-pkin(5) * t2061 + t2034);
t2428 = t2105 * t2704;
t2595 = 0.1e1 / ((-pkin(5) * t2428 + t2030) * t2132 - t2420 * t2720 + t1959) * t2095;
t2336 = t2164 * t2595;
t1860 = (t1885 * t2142 + t1886 * t2143 + t1902 * t2545) * t2336;
t1854 = pkin(1) * t1860;
t2066 = pkin(1) * t2126;
t2025 = t2066 + pkin(6);
t2020 = t2062 + pkin(5);
t2239 = t2731 * t2127 * t2020;
t1933 = t2025 * t2546 - t2126 * t2239;
t2021 = 0.2e1 * t2063 + pkin(1);
t1936 = t2021 * t2546 - t2239;
t2311 = t2105 * t2534;
t2227 = t2053 * t2311;
t1950 = -t2056 * t2083 + t2056 + t2227;
t2406 = t2083 * t2063;
t1963 = -t2406 + t2022;
t1984 = t2066 - t2788;
t2560 = t2099 * t2163;
t2266 = -t2160 + t2560;
t2191 = t2266 * t2136;
t2200 = t2311 * t2063;
t2305 = t2020 * t2552;
t2230 = t2106 * t2305;
t2314 = t2126 * t2560;
t2332 = t2020 * t2558;
t2703 = pkin(2) * t2134;
t2463 = pkin(6) * t2703;
t2372 = 0.2e1 * t2463;
t1887 = (t2053 * t2105 * t2191 + t1950 * t2372) * t2102 + (-t1950 * t2314 + (t1936 * t2053 - t2056 * t2332) * t2703 + (t1963 * t2056 + t2053 * t2200) * pkin(6)) * t2135 - (pkin(6) * t2227 + t1984 * t2056) * t2703 + pkin(6) * (t1933 * t2053 - t2056 * t2230);
t2224 = t2056 * t2311;
t1951 = t2053 * t2083 - t2053 + t2224;
t2373 = -0.2e1 * t2463;
t1888 = (-t2056 * t2266 * t2546 + t1951 * t2373) * t2102 + (t1951 * t2314 - (t1936 * t2056 + t2053 * t2332) * t2703 + pkin(6) * (t1963 * t2053 - t2056 * t2200)) * t2135 - (-pkin(6) * t2224 + t1984 * t2053) * t2703 - (t1933 * t2056 + t2053 * t2230) * pkin(6);
t2535 = t2106 * t2126;
t1903 = (t2106 * t2136 * t2373 + t2127 * t2266) * t2102 + ((-t2020 * t2546 + t2021 * t2127) * t2703 + t2191 * t2535) * t2135 + pkin(6) * (t2025 * t2127 + (t2106 * t2703 - t2305) * t2136);
t1960 = t2105 * (-pkin(5) * t2063 + t2036);
t2427 = t2105 * t2703;
t2594 = 0.1e1 / ((-pkin(5) * t2427 + t2030) * t2135 - t2418 * t2720 + t1960) * t2100;
t2335 = t2164 * t2594;
t1861 = (t1887 * t2142 + t1888 * t2143 + t1903 * t2545) * t2335;
t1855 = pkin(1) * t1861;
t2727 = pkin(1) * t1874;
t2726 = pkin(1) * t1875;
t2725 = pkin(1) * t1876;
t2724 = pkin(1) * t2001;
t2723 = pkin(1) * t2002;
t2722 = pkin(1) * t2003;
t2721 = pkin(1) * t2105;
t2719 = pkin(1) * t2115;
t2718 = pkin(2) * t1829;
t2717 = pkin(2) * t1830;
t2716 = pkin(2) * t1831;
t2715 = pkin(2) * t1859;
t2714 = pkin(2) * t1860;
t2713 = pkin(2) * t1861;
t2702 = pkin(5) * t1859;
t2701 = pkin(5) * t1860;
t2700 = pkin(5) * t1861;
t2699 = pkin(5) * t1874;
t2698 = pkin(5) * t1875;
t2697 = pkin(5) * t1876;
t2696 = pkin(5) * t2129;
t2695 = pkin(5) * t2132;
t2694 = pkin(5) * t2135;
t1814 = pkin(6) * t1829;
t1815 = pkin(6) * t1830;
t1816 = pkin(6) * t1831;
t2693 = pkin(6) * t1874;
t2692 = pkin(6) * t1875;
t2691 = pkin(6) * t1876;
t1847 = t1859 * pkin(6);
t1848 = t1860 * pkin(6);
t1849 = t1861 * pkin(6);
t1826 = t1829 ^ 2;
t1856 = t1859 ^ 2;
t1775 = t1826 + t1856;
t2685 = mrSges(3,1) * t1775;
t1827 = t1830 ^ 2;
t1857 = t1860 ^ 2;
t1776 = t1827 + t1857;
t2684 = mrSges(3,1) * t1776;
t1828 = t1831 ^ 2;
t1858 = t1861 ^ 2;
t1777 = t1828 + t1858;
t2683 = mrSges(3,1) * t1777;
t2682 = mrSges(3,1) * t2120;
t2681 = mrSges(3,1) * t2123;
t2680 = mrSges(3,1) * t2126;
t2679 = mrSges(3,2) * t2120;
t2678 = mrSges(3,2) * t2123;
t2677 = mrSges(3,2) * t2126;
t2676 = Ifges(3,4) * t2119;
t2675 = Ifges(3,4) * t2122;
t2674 = Ifges(3,4) * t2125;
t2673 = Ifges(3,5) * t2120;
t2672 = Ifges(3,5) * t2123;
t2671 = Ifges(3,5) * t2126;
t2670 = Ifges(3,6) * t1829;
t2669 = Ifges(3,6) * t1830;
t2668 = Ifges(3,6) * t1831;
t2667 = Ifges(3,6) * t1859;
t2666 = Ifges(3,6) * t1860;
t2665 = Ifges(3,6) * t1861;
t2664 = Ifges(3,6) * t2105;
t2663 = Ifges(3,6) * t2119;
t2662 = Ifges(3,6) * t2122;
t2661 = Ifges(3,6) * t2125;
t2660 = t1829 * Ifges(3,4);
t2659 = t1830 * Ifges(3,4);
t2658 = t1831 * Ifges(3,4);
t2657 = t1859 * Ifges(3,4);
t2656 = t1860 * Ifges(3,4);
t2655 = t1861 * Ifges(3,4);
t2104 = pkin(1) * t2786;
t2651 = -0.2e1 * t2139;
t1805 = Ifges(3,5) * t1829;
t1808 = Ifges(2,4) * t1829;
t1832 = t1859 * t2530;
t2637 = t1829 * t2119;
t2647 = ((-t1832 / 0.2e1 - t1805) * t2128 + t1808 + Ifges(3,6) * t2637 + (t2089 - 0.1e1 / 0.2e1) * t2657) * t2092;
t1806 = Ifges(3,5) * t1830;
t1809 = Ifges(2,4) * t1830;
t1833 = t1860 * t2528;
t2634 = t1830 * t2122;
t2646 = ((-t1833 / 0.2e1 - t1806) * t2131 + t1809 + Ifges(3,6) * t2634 + (t2094 - 0.1e1 / 0.2e1) * t2656) * t2097;
t1807 = Ifges(3,5) * t1831;
t1810 = Ifges(2,4) * t1831;
t1834 = t1861 * t2526;
t2631 = t1831 * t2125;
t2645 = ((-t1834 / 0.2e1 - t1807) * t2134 + t1810 + Ifges(3,6) * t2631 + (t2099 - 0.1e1 / 0.2e1) * t2655) * t2102;
t2627 = t1859 * t2119;
t1838 = pkin(2) * t2627;
t1763 = t1838 - t1814;
t2644 = t1763 * t2106;
t2623 = t1860 * t2122;
t1839 = pkin(2) * t2623;
t1764 = t1839 - t1815;
t2643 = t1764 * t2106;
t2619 = t1861 * t2125;
t1840 = pkin(2) * t2619;
t1765 = t1840 - t1816;
t2642 = t1765 * t2106;
t1769 = -t1814 + t2702;
t2641 = t1769 * t2120;
t1770 = -t1815 + t2701;
t2640 = t1770 * t2123;
t1771 = -t1816 + t2700;
t2639 = t1771 * t2126;
t2638 = t1829 * t2106;
t2636 = t1829 * t2120;
t2635 = t1830 * t2106;
t2633 = t1830 * t2123;
t2632 = t1831 * t2106;
t2630 = t1831 * t2126;
t2629 = t1859 * t2089;
t2628 = t1859 * t2105;
t2626 = t1859 * t2120;
t2625 = t1860 * t2094;
t2624 = t1860 * t2105;
t2622 = t1860 * t2123;
t2621 = t1861 * t2099;
t2620 = t1861 * t2105;
t2618 = t1861 * t2126;
t2617 = t1871 * t2083;
t2616 = t1871 * t2092;
t2615 = t1872 * t2083;
t2614 = t1872 * t2097;
t2613 = t1873 * t2083;
t2612 = t1873 * t2102;
t2611 = t1874 * t2083;
t2610 = t1874 * t2105;
t2608 = t1874 * t2120;
t2607 = t1874 * t2129;
t2606 = t1875 * t2083;
t2605 = t1875 * t2105;
t2603 = t1875 * t2123;
t2602 = t1875 * t2132;
t2601 = t1876 * t2083;
t2600 = t1876 * t2105;
t2598 = t1876 * t2126;
t2597 = t1876 * t2135;
t2412 = pkin(5) * t2547;
t2178 = pkin(1) * t2535 + t2412;
t2531 = t2106 * t2135;
t2434 = pkin(1) * t2531;
t2593 = 0.1e1 / (pkin(6) * t2434 - t2178 * t2703 + t1960) * t2100;
t2414 = pkin(5) * t2551;
t2180 = pkin(1) * t2541 + t2414;
t2533 = t2106 * t2129;
t2436 = pkin(1) * t2533;
t2592 = 0.1e1 / (pkin(6) * t2436 - t2180 * t2705 + t1958) * t2090;
t2413 = pkin(5) * t2549;
t2179 = pkin(1) * t2538 + t2413;
t2532 = t2106 * t2132;
t2435 = pkin(1) * t2532;
t2591 = 0.1e1 / (pkin(6) * t2435 - t2179 * t2704 + t1959) * t2095;
t2578 = t2014 * t2105;
t2577 = t2018 * t2105;
t2576 = t2022 * t2105;
t2575 = t2023 * t2106;
t2574 = t2024 * t2106;
t2573 = t2025 * t2106;
t2572 = (t2106 + 0.1e1) * (t2106 - 0.1e1);
t2568 = t2083 * t2160;
t2567 = t2088 * t2163;
t2565 = t2092 * t2160;
t2564 = t2093 * t2163;
t2562 = t2097 * t2160;
t2561 = t2098 * t2163;
t2559 = t2102 * t2160;
t2544 = pkin(2) * t2543;
t2529 = t2113 * t2120;
t2527 = t2113 * t2123;
t2525 = t2113 * t2126;
t1850 = t2163 * t1859;
t2247 = -pkin(5) * t1814 + t1850;
t1748 = pkin(2) * t1769 + t2119 * t2247;
t1760 = pkin(6) * t2637 - t2715;
t1754 = t1760 * t2578;
t1766 = t2741 + t1847 / 0.2e1;
t1811 = t2160 * t1829;
t2161 = pkin(5) ^ 2;
t2079 = t2161 + t2163;
t2165 = pkin(1) ^ 2;
t2294 = t2165 + t2079;
t1994 = t2160 + t2294;
t2156 = pkin(5) / 0.2e1;
t1995 = t2058 + t2156;
t1996 = t2059 / 0.2e1 + pkin(1);
t2031 = pkin(5) * t2058;
t2037 = pkin(1) * t2059;
t2091 = t2129 * t2092;
t2103 = pkin(2) * t2158;
t2159 = -0.2e1 * pkin(1);
t2402 = pkin(6) * t2520;
t2199 = t1874 * t2011 * t2402;
t2471 = -t2161 - t2165;
t2218 = -0.3e1 * t2163 - t2160 + t2471;
t2304 = t2012 * t2520;
t2223 = t1874 * t2304;
t2351 = t1874 * t2551;
t2235 = t1995 * t2351;
t2244 = t2731 * t2520;
t2256 = t2557 * t2693;
t2271 = t2041 * t2083 - t2092;
t2470 = t2163 - t2160;
t2299 = t2031 + t2470;
t2352 = t1874 * t2556;
t2353 = t2091 * t2610;
t2361 = t1859 * t2592;
t2366 = t1829 * t2578;
t2367 = t1829 * t2592;
t2396 = t2092 * t2058;
t2442 = pkin(1) * t2628;
t2445 = pkin(1) * t2626;
t2448 = -0.2e1 * t2558;
t2474 = t2161 / 0.3e1 + t2163;
t2475 = -t2160 / 0.3e1 - 0.2e1 / 0.3e1 * t2163;
t2476 = t2160 / 0.2e1 + t2163;
t2488 = t1817 + t1847;
t1788 = pkin(2) * t2637;
t2497 = t1788 + t1847;
t2302 = t1788 + t2488;
t2500 = t2302 * t2120 + t1853;
t1730 = (((t2092 - 0.4e1 / 0.3e1) * t2567 + ((-0.2e1 / 0.3e1 * t2031 + t2475) * t2092 + 0.4e1 / 0.3e1 * t2031 + t2474) * t2128 + (0.4e1 / 0.3e1 * t2712 - 0.2e1 / 0.3e1 * t2011) * t2402) * t1874 * t2748 + (t2041 * t2779 - ((t1823 + t2641) * t2129 + (-0.4e1 * t2012 + t2396) * t2352) * t2712 + (t2235 * t2787 - t1811 + t1820 + (-t2092 * t2718 + (-t2092 * t2488 + t2353 * t2786 + t1817 + 0.2e1 * t1847) * t2119) * pkin(2) + (0.2e1 * t1838 - t1814) * t2064) * t2128 + t2120 * (t1748 * t2129 + (-t2103 + (-t2079 + t2565) * t2119) * t2610)) * t2083 + ((-0.3e1 * t2092 + 0.3e1) * t1874 * t2567 - (t2092 * t2442 + 0.2e1 * t2013 * t2607 + ((t2741 + t2497) * t2120 + t1853) * t2746) * t2712 + (((pkin(1) * t2636 + t1769) * t2058 + t2247) * t2551 + (0.2e1 * (t2031 + t2476) * t2092 - 0.4e1 * t2031 - 0.2e1 * t2037 + t2218) * t1874) * t2128 - t1760 * t2092 * t2721 + 0.2e1 * t2199 + t1754) * t2106 - t2730 * t2779 + (t1769 * t2129 + (-t2058 - t2158 + t2396) * t2610) * t2432 + 0.2e1 * ((t2092 / 0.2e1 - 0.1e1 / 0.2e1) * t2718 + (t1766 * t2092 - t2445 / 0.2e1 - t1766 + (-pkin(6) * t2091 + t2023 * t2129) * t2610) * t2119) * t2705 - 0.2e1 * t1996 * t2092 * t2256 - t1748 * t2520 + ((t1994 * t2119 + t2103) * t2120 + t2119 * t2104) * t2610) * t2090 * t1928 * t1874 + ((t1874 * t2271 + t1874 - t2638) * t2567 - (t1829 * t2436 - t2500 * t2105 + (t2129 * (-t2059 + pkin(1)) * t2083 + (t1995 * t2448 + t2689) * t2120) * t1874) * t2712 + ((t2414 + t2575) * t1763 + (-(t2037 - t2299) * t2083 + (-pkin(6) * t2012 + t2032 * t2120) * t2105 * t2533 + (-t2092 * t2083 + t2730) * pkin(2) * t2011) * t1874) * t2128 - t2083 * t2199 - t1985 * t2106 * t2256 + t2199 + t1754) * t2367 - ((-t2366 + ((t2067 - 0.2e1 * t2059 + t2159) * t2558 + pkin(5) * t2244) * t1874) * t2089 + ((-t2011 * t2351 - t1760) * t2106 + ((t2023 * t2747 + t2092 * t2788 + t2023) * t1874 - t2180 * t1829) * t2119) * t2128 - t2083 * t2223 + (t2129 * t1853 - t1985 * t2610) * t2106 + ((-t1769 - t1838) * t2120 + t1823) * t2105 + t2223) * pkin(2) * t2361;
t1778 = t2611 + t2638 / 0.2e1 - t1896 / 0.2e1 - t1895 / 0.2e1 - t1907 / 0.2e1;
t1802 = -0.2e1 * t1814;
t2026 = 0.2e1 * t2031;
t2153 = -0.3e1 * t2160;
t2190 = t2304 * t2572;
t2196 = -pkin(6) * t1838 + t1811;
t2219 = 0.3e1 * t2160 + t2294;
t2360 = t1859 * t2542;
t2265 = pkin(1) * t2360;
t2355 = t2012 * t2609;
t2274 = 0.2e1 * t2355;
t2293 = t2572 * t2757;
t2473 = t2161 / 0.2e1 + t2163 / 0.2e1;
t2295 = t2160 + t2473;
t2319 = t2088 * t2544;
t2326 = t2163 * t2572;
t2331 = t2092 * t2572;
t2354 = t1874 * t2572;
t2411 = pkin(6) * t2609;
t2433 = pkin(2) * t2572;
t2491 = t1814 / 0.2e1 - t1838 / 0.2e1;
t2460 = pkin(5) * t2155;
t2494 = pkin(6) * t2355 + t1829 * t2460;
t1733 = (((pkin(1) * t2638 + (t2758 + 0.3e1 * t2059 - 0.3e1 * t2408) * t1874) * t2089 * t2543 + (pkin(1) * t2644 + (t1996 * t2757 + t2120 * t2568) * t1874) * t2690) * t2092 + (0.2e1 * t1778 * t2319 + (t2120 * t2274 + t2500) * t2089 * t2326 + ((-(t1838 + t1802) * t2064 + t2196) * t2106 + ((t2031 + t2295) * t2747 + t2026 + 0.4e1 * t2037 + t2219) * t1874) * t2429 + (-t1769 * t2058 / 0.2e1 - t1850 / 0.2e1 + t2494) * t2120 * t2293) * t2129 + (t1778 * t2318 * t2785 + (-t2014 * t2644 + (t2104 + ((t2031 + t2473) * t2747 + t2026 + t1994) * t2120) * t1874) * t2105) * pkin(6) + (-(t2153 + t2566) * t2353 + ((t1802 + t2702) * t2058 + t1850 - t1859 * t2160 - 0.4e1 * t2494) * t2092 + (t2274 + t2302 + t2445) * pkin(6)) * t2128 * t2433) * t1874 * t2337 + (t2129 * t1781 * t2319 + (t2366 + (t2190 + (t2059 + t2067) * t2558) * t1874) * t2566 + (((t2064 + t2155) * t2609 + t2491) * t2551 + (-t2092 + 0.1e1 / 0.2e1) * t2012 * t2354) * t2376 - (t2190 * t2693 + (t2411 * t2067 + (-t2411 + t1763) * t2014) * t2105) * pkin(6)) * t2164 * t2367 + ((t2014 * t2129 * t2354 + t2442) * t2712 + (t1874 * t2299 * t2331 - pkin(2) * (-t2715 + (t1874 * t2575 - t1769) * t2119) * t2551 + t2265 * t2708) * t2128 + (-t2129 * t2265 - ((t1823 - t2641) * t2119 - pkin(2) * t2626) * t2105 + (t1985 * t2105 * t2542 + t2731 * t2128 * t2023 + t2011 * t2244) * t1874) * pkin(6)) * t2361;
t2472 = t2160 + t2163;
t1742 = ((t1781 * t2566 + t2196) * t1829 - t1760 * t2715 + ((-(t2041 * t2566 - t2565) * t2083 + t2566 * t2571 - t2565 + t2031 + t2037 + t2472) * t1874 + ((t2235 + t2491) * t2786 + (t2160 + t2566) * t1829) * t2106 + (-pkin(6) * t2360 + (-(0.2e1 * t2120 * t2398 + t2011) * t2083 + t2013 * t2509) * t1874 + (t1967 * t2637 + (t1760 - t2715) * t2129 + (-0.2e1 * t1995 * t2609 - t1847 - t2497) * t2521) * t2105) * pkin(2)) * t1874) * t1928;
t1757 = Ifges(3,4) * t2637 - t2667 / 0.2e1;
t2459 = -0.2e1 * t2660;
t1772 = t1859 * t2459;
t1784 = t2004 * t1829;
t1796 = t1829 * t2115;
t1841 = mrSges(3,1) * t2702;
t1844 = Ifges(3,5) * t1859;
t2289 = mrSges(3,1) * t2128 - t2001;
t1904 = -t2791 * t2105 - ((t2115 * t2120 + t2129 * t2289) * pkin(1) - t2795) * t2106;
t2283 = -Ifges(3,6) * t2120 + t2139;
t2140 = pkin(1) * mrSges(3,1);
t2286 = t2140 - t2673;
t1916 = -((-mrSges(3,1) * t2696 + t2283) * t2119 + (-mrSges(3,2) * t2696 - t2286) * t2128 - Ifges(3,3) * t2129) * t2105 + ((pkin(1) * t2682 - Ifges(3,5)) * t2119 + (pkin(1) * t2679 - Ifges(3,6)) * t2128) * t2106;
t2208 = -Ifges(3,5) * t2128 + t2663;
t1976 = Ifges(2,4) + t2208;
t2029 = -t2734 + t2742;
t2081 = Ifges(3,3) + t2113;
t2085 = -0.2e1 * t2137;
t2086 = 0.2e1 * t2140;
t2157 = 0.2e1 * Ifges(2,4);
t2144 = m(2) + m(3);
t2447 = -0.2e1 * mrSges(2,3) * pkin(5) - Ifges(2,1) - Ifges(3,2);
t2177 = t2144 * t2471 - Ifges(1,3) + t2447;
t2187 = -t2144 * t2161 + t2447 + t2735;
t2350 = t1874 * t2529;
t2238 = t2105 * t2350;
t2277 = -0.2e1 * t1829 * t2530;
t2303 = t2105 * t2113 / 0.2e1;
t2380 = Ifges(3,5) * t2627;
t2386 = Ifges(3,4) * t2629;
t2389 = t1775 * t2654;
t2451 = t2089 * t2754;
t2453 = -t2137 / 0.4e1;
t2454 = -t2137 / 0.2e1;
t2455 = mrSges(3,2) * t2721;
t2466 = -0.2e1 * t2719;
t2469 = -0.2e1 * t2727;
t2482 = t1841 + t1805;
t2485 = t1826 - t1856;
t2503 = (-(-0.2e1 * t1976 * t2520 + t2784 * t2089 + (t2085 + 0.4e1 * t2676) * t2128 + t2187 + t2800) * t2083 + t2791 * t2448 - ((t2086 - 0.2e1 * t2673) * t2128 + (t2157 + 0.2e1 * t2663) * t2120 - 0.2e1 * t2724) * t2129 + t2005 - (t2743 - 0.2e1 * t2676) * t2128 + t2120 * t2466 + t2177 + t2800) * t1742 + t1904 * t1730 + t1916 * t1733 - 0.4e1 * (t2647 - (t1757 * t2128 - t2380 / 0.2e1 + (t2005 / 0.2e1 + t2738) * t1829) * t2520 - 0.2e1 * t2386 + (t1832 + t1805 / 0.2e1 + t1841 / 0.2e1) * t2128 + (-t2670 / 0.2e1 + t1859 * t2454) * t2119 - t1808 / 0.2e1 + t2657) * t2611 + (((t1796 + 0.2e1 * (-mrSges(3,1) * t2119 - mrSges(3,2) * t2128) * t1859) * t1823 + (Ifges(3,4) * t2451 - (t1829 * t2765 + t1844) * t2128 - (-mrSges(3,2) * t1817 - t2667) * t2119 - t1829 * t2029) * t1874 * t2785) * t2129 + 0.4e1 * (-t2238 + t2660) * t2629 + ((-0.8e1 * (-t2670 / 0.4e1 + (t2453 + t2676) * t1859) * t2610 - pkin(1) * t2685) * t2120 + (t1844 + t2277) * t1859) * t2128 + (0.2e1 * (t1859 * t2113 + t2119 * t2482 + t1784) * t2610 + pkin(1) * (-mrSges(2,1) * t1826 + t2389)) * t2120 - t1856 * t2663 + t1772) * t2106 + 0.4e1 * t1874 * t2647 + ((t2105 * t2660 - t2350) * t2451 + ((-pkin(5) * t2685 - t1826 * t2530) * t2105 + (-0.4e1 * t1757 * t2120 + t1859 * t2651) * t1874) * t2128 + 0.2e1 * (-t1829 * t2040 + t2380) * t2608 + (pkin(5) * t2389 - t1826 * t2029) * t2105 + (mrSges(3,1) * t2627 - t1796) * t2469) * t2129 - 0.4e1 * (Ifges(3,4) * t1874 + t2303 * t2636) * t2629 + ((t2485 * t2664 + (mrSges(3,1) * t2469 + (t2743 - 0.4e1 * t2676) * t2628) * t1829) * t2120 + t1856 * t2455 + (t1832 + t2482) * t2751) * t2128 + (((Ifges(3,5) * t2485 + t1841 * t2754) * t2119 + t1829 * (t1859 * t2081 + t1784)) * t2105 + t1829 * t2724 * t2751) * t2120 + mrSges(3,1) * t1856 * t2439 - 0.2e1 * t1874 * ((mrSges(3,2) * t2702 + t2670) * t2119 + t1808 - t2657);
t1851 = t2163 * t1860;
t2246 = -pkin(5) * t1815 + t1851;
t1749 = pkin(2) * t1770 + t2122 * t2246;
t1761 = pkin(6) * t2634 - t2714;
t1755 = t1761 * t2577;
t1767 = t2740 + t1848 / 0.2e1;
t1812 = t2160 * t1830;
t1997 = t2060 + t2156;
t1998 = t2061 / 0.2e1 + pkin(1);
t2033 = pkin(5) * t2060;
t2038 = pkin(1) * t2061;
t2096 = t2132 * t2097;
t2344 = t1875 * t2515;
t2198 = pkin(6) * t2015 * t2344;
t2222 = t2016 * t2344;
t2346 = t1875 * t2549;
t2234 = t1997 * t2346;
t2243 = t2731 * t2515;
t2255 = t2555 * t2692;
t2270 = t2042 * t2083 - t2097;
t2298 = t2033 + t2470;
t2347 = t1875 * t2554;
t2348 = t2096 * t2605;
t2359 = t1860 * t2591;
t2364 = t1830 * t2577;
t2365 = t1830 * t2591;
t2393 = pkin(6) * t2515;
t2394 = t2097 * t2060;
t2441 = pkin(1) * t2624;
t2444 = pkin(1) * t2622;
t2487 = t1818 + t1848;
t1790 = pkin(2) * t2634;
t2496 = t1790 + t1848;
t2301 = t1790 + t2487;
t2499 = t2301 * t2123 + t1854;
t1731 = (((t2097 - 0.4e1 / 0.3e1) * t2564 + ((-0.2e1 / 0.3e1 * t2033 + t2475) * t2097 + 0.4e1 / 0.3e1 * t2033 + t2474) * t2131 + (0.4e1 / 0.3e1 * t2711 - 0.2e1 / 0.3e1 * t2015) * t2393) * t1875 * t2748 + (t2042 * t2778 - ((t1824 + t2640) * t2132 + (-0.4e1 * t2016 + t2394) * t2347) * t2711 + (t2234 * t2787 - t1812 + t1821 + (-t2097 * t2717 + (-t2097 * t2487 + t2348 * t2786 + t1818 + 0.2e1 * t1848) * t2122) * pkin(2) + (0.2e1 * t1839 - t1815) * t2065) * t2131 + t2123 * (t1749 * t2132 + (-t2103 + (-t2079 + t2562) * t2122) * t2605)) * t2083 + ((-0.3e1 * t2097 + 0.3e1) * t1875 * t2564 - (t2097 * t2441 + 0.2e1 * t2017 * t2602 + ((t2740 + t2496) * t2123 + t1854) * t2746) * t2711 + (((pkin(1) * t2633 + t1770) * t2060 + t2246) * t2549 + (0.2e1 * (t2033 + t2476) * t2097 - 0.4e1 * t2033 - 0.2e1 * t2038 + t2218) * t1875) * t2131 - t1761 * t2097 * t2721 + 0.2e1 * t2198 + t1755) * t2106 - t2729 * t2778 + (t1770 * t2132 + (-t2060 - t2158 + t2394) * t2605) * t2431 + 0.2e1 * ((t2097 / 0.2e1 - 0.1e1 / 0.2e1) * t2717 + (t1767 * t2097 - t2444 / 0.2e1 - t1767 + (-pkin(6) * t2096 + t2024 * t2132) * t2605) * t2122) * t2704 - 0.2e1 * t1998 * t2097 * t2255 - t1749 * t2515 + ((t1994 * t2122 + t2103) * t2123 + t2122 * t2104) * t2605) * t2095 * t1929 * t1875 + ((t1875 * t2270 + t1875 - t2635) * t2564 - (t1830 * t2435 - t2499 * t2105 + (t2132 * (-t2061 + pkin(1)) * t2083 + (t1997 * t2448 + t2688) * t2123) * t1875) * t2711 + ((t2413 + t2574) * t1764 + (-(t2038 - t2298) * t2083 + (-pkin(6) * t2016 + t2034 * t2123) * t2105 * t2532 + (-t2097 * t2083 + t2729) * pkin(2) * t2015) * t1875) * t2131 - t2083 * t2198 - t1986 * t2106 * t2255 + t2198 + t1755) * t2365 - ((-t2364 + ((t2068 - 0.2e1 * t2061 + t2159) * t2558 + pkin(5) * t2243) * t1875) * t2094 + ((-t2015 * t2346 - t1761) * t2106 + ((t2024 * t2747 + t2097 * t2788 + t2024) * t1875 - t2179 * t1830) * t2122) * t2131 - t2083 * t2222 + (t2132 * t1854 - t1986 * t2605) * t2106 + ((-t1770 - t1839) * t2123 + t1824) * t2105 + t2222) * pkin(2) * t2359;
t1779 = t2606 + t2635 / 0.2e1 - t1898 / 0.2e1 - t1897 / 0.2e1 - t1908 / 0.2e1;
t1803 = -0.2e1 * t1815;
t2027 = 0.2e1 * t2033;
t2328 = t2132 * t2572;
t2189 = t2123 * t2016 * t2328;
t2195 = -pkin(6) * t1839 + t1812;
t2358 = t1860 * t2539;
t2264 = pkin(1) * t2358;
t2349 = t2016 * t2604;
t2273 = 0.2e1 * t2349;
t2317 = t2093 * t2544;
t2330 = t2097 * t2572;
t2410 = pkin(6) * t2604;
t2490 = t1815 / 0.2e1 - t1839 / 0.2e1;
t2493 = pkin(6) * t2349 + t1830 * t2460;
t1734 = (((pkin(1) * t2635 + (t2758 + 0.3e1 * t2061 - 0.3e1 * t2407) * t1875) * t2094 * t2543 + (pkin(1) * t2643 + (t1998 * t2757 + t2123 * t2568) * t1875) * t2690) * t2097 + (0.2e1 * t1779 * t2317 + (t2123 * t2273 + t2499) * t2094 * t2326 + ((-(t1839 + t1803) * t2065 + t2195) * t2106 + ((t2033 + t2295) * t2747 + t2027 + 0.4e1 * t2038 + t2219) * t1875) * t2428 + (-t1770 * t2060 / 0.2e1 - t1851 / 0.2e1 + t2493) * t2123 * t2293) * t2132 + (t1779 * t2316 * t2785 + (-t2018 * t2643 + (t2104 + ((t2033 + t2473) * t2747 + t2027 + t1994) * t2123) * t1875) * t2105) * pkin(6) + (-(t2153 + t2563) * t2348 + ((t1803 + t2701) * t2060 + t1851 - t1860 * t2160 - 0.4e1 * t2493) * t2097 + (t2273 + t2301 + t2444) * pkin(6)) * t2131 * t2433) * t1875 * t2336 + (t2132 * t1782 * t2317 + (t2364 + (t2189 + (t2061 + t2068) * t2558) * t1875) * t2563 + (((t2065 + t2155) * t2604 + t2490) * t2549 + (-t2097 + 0.1e1 / 0.2e1) * t1875 * t2016 * t2572) * t2374 - (t2189 * t2692 + (t2410 * t2068 + (-t2410 + t1764) * t2018) * t2105) * pkin(6)) * t2164 * t2365 + ((t1875 * t2018 * t2328 + t2441) * t2711 + (t1875 * t2298 * t2330 - pkin(2) * (-t2714 + (t1875 * t2574 - t1770) * t2122) * t2549 + t2264 * t2707) * t2131 + (-t2132 * t2264 - ((t1824 - t2640) * t2122 - pkin(2) * t2622) * t2105 + (t1986 * t2105 * t2539 + t2731 * t2131 * t2024 + t2015 * t2243) * t1875) * pkin(6)) * t2359;
t1743 = ((t1782 * t2563 + t2195) * t1830 - t1761 * t2714 + ((-(t2042 * t2563 - t2562) * t2083 + t2563 * t2570 - t2562 + t2033 + t2038 + t2472) * t1875 + ((t2234 + t2490) * t2786 + (t2160 + t2563) * t1830) * t2106 + (-pkin(6) * t2358 + (-(0.2e1 * t2131 * t2393 + t2015) * t2083 + t2017 * t2507) * t1875 + (t1968 * t2634 + (t1761 - t2714) * t2132 + (-0.2e1 * t1997 * t2604 - t1848 - t2496) * t2516) * t2105) * pkin(2)) * t1875) * t1929;
t1758 = Ifges(3,4) * t2634 - t2666 / 0.2e1;
t2458 = -0.2e1 * t2659;
t1773 = t1860 * t2458;
t1785 = t2004 * t1830;
t1797 = t1830 * t2115;
t1842 = mrSges(3,1) * t2701;
t1845 = Ifges(3,5) * t1860;
t2288 = mrSges(3,1) * t2131 - t2002;
t1905 = -t2790 * t2105 - ((t2115 * t2123 + t2132 * t2288) * pkin(1) - t2796) * t2106;
t2282 = -Ifges(3,6) * t2123 + t2139;
t2285 = t2140 - t2672;
t1917 = -((-mrSges(3,1) * t2695 + t2282) * t2122 + (-mrSges(3,2) * t2695 - t2285) * t2131 - Ifges(3,3) * t2132) * t2105 + ((pkin(1) * t2681 - Ifges(3,5)) * t2122 + (pkin(1) * t2678 - Ifges(3,6)) * t2131) * t2106;
t2207 = -Ifges(3,5) * t2131 + t2662;
t1977 = Ifges(2,4) + t2207;
t2345 = t1875 * t2527;
t2237 = t2105 * t2345;
t2276 = -0.2e1 * t1830 * t2528;
t2379 = Ifges(3,5) * t2623;
t2385 = Ifges(3,4) * t2625;
t2388 = t1776 * t2653;
t2450 = t2094 * t2753;
t2468 = -0.2e1 * t2726;
t2481 = t1842 + t1806;
t2484 = t1827 - t1857;
t2502 = (-(-0.2e1 * t1977 * t2515 + t2784 * t2094 + (t2085 + 0.4e1 * t2675) * t2131 + t2187 + t2799) * t2083 + t2790 * t2448 - ((t2086 - 0.2e1 * t2672) * t2131 + (t2157 + 0.2e1 * t2662) * t2123 - 0.2e1 * t2723) * t2132 + t2006 - (t2743 - 0.2e1 * t2675) * t2131 + t2123 * t2466 + t2177 + t2799) * t1743 + t1905 * t1731 + t1917 * t1734 - 0.4e1 * (t2646 - (t1758 * t2131 - t2379 / 0.2e1 + (t2006 / 0.2e1 + t2738) * t1830) * t2515 - 0.2e1 * t2385 + (t1833 + t1806 / 0.2e1 + t1842 / 0.2e1) * t2131 + (-t2669 / 0.2e1 + t1860 * t2454) * t2122 - t1809 / 0.2e1 + t2656) * t2606 + (((t1797 + 0.2e1 * (-mrSges(3,1) * t2122 - mrSges(3,2) * t2131) * t1860) * t1824 + (Ifges(3,4) * t2450 - (t1830 * t2766 + t1845) * t2131 - (-mrSges(3,2) * t1818 - t2666) * t2122 - t1830 * t2029) * t1875 * t2785) * t2132 + 0.4e1 * (-t2237 + t2659) * t2625 + ((-0.8e1 * (-t2669 / 0.4e1 + (t2453 + t2675) * t1860) * t2605 - pkin(1) * t2684) * t2123 + (t1845 + t2276) * t1860) * t2131 + (0.2e1 * (t1860 * t2113 + t2122 * t2481 + t1785) * t2605 + pkin(1) * (-mrSges(2,1) * t1827 + t2388)) * t2123 - t1857 * t2662 + t1773) * t2106 + 0.4e1 * t1875 * t2646 + ((t2105 * t2659 - t2345) * t2450 + ((-pkin(5) * t2684 - t1827 * t2528) * t2105 + (-0.4e1 * t1758 * t2123 + t1860 * t2651) * t1875) * t2131 + 0.2e1 * (-t1830 * t2040 + t2379) * t2603 + (pkin(5) * t2388 - t1827 * t2029) * t2105 + (mrSges(3,1) * t2623 - t1797) * t2468) * t2132 - 0.4e1 * (Ifges(3,4) * t1875 + t2303 * t2633) * t2625 + ((t2484 * t2664 + (mrSges(3,1) * t2468 + (t2743 - 0.4e1 * t2675) * t2624) * t1830) * t2123 + t1857 * t2455 + (t1833 + t2481) * t2750) * t2131 + (((Ifges(3,5) * t2484 + t1842 * t2753) * t2122 + t1830 * (t1860 * t2081 + t1785)) * t2105 + t1830 * t2723 * t2750) * t2123 + mrSges(3,1) * t1857 * t2438 - 0.2e1 * t1875 * ((mrSges(3,2) * t2701 + t2669) * t2122 + t1809 - t2656);
t1852 = t2163 * t1861;
t2245 = -pkin(5) * t1816 + t1852;
t1750 = pkin(2) * t1771 + t2125 * t2245;
t1762 = pkin(6) * t2631 - t2713;
t1756 = t1762 * t2576;
t1768 = t2739 + t1849 / 0.2e1;
t1813 = t2160 * t1831;
t1999 = t2062 + t2156;
t2000 = t2063 / 0.2e1 + pkin(1);
t2035 = pkin(5) * t2062;
t2039 = pkin(1) * t2063;
t2101 = t2135 * t2102;
t2338 = t1876 * t2510;
t2197 = pkin(6) * t2019 * t2338;
t2221 = t2020 * t2338;
t2340 = t1876 * t2547;
t2233 = t1999 * t2340;
t2242 = t2731 * t2510;
t2254 = t2553 * t2691;
t2269 = t2043 * t2083 - t2102;
t2297 = t2035 + t2470;
t2341 = t1876 * t2552;
t2342 = t2101 * t2600;
t2357 = t1861 * t2593;
t2362 = t1831 * t2576;
t2363 = t1831 * t2593;
t2391 = t2102 * t2062;
t2440 = pkin(1) * t2620;
t2443 = pkin(1) * t2618;
t2486 = t1819 + t1849;
t1792 = pkin(2) * t2631;
t2495 = t1792 + t1849;
t2300 = t1792 + t2486;
t2498 = t2300 * t2126 + t1855;
t1732 = (t1876 * ((t2102 - 0.4e1 / 0.3e1) * t2561 + ((-0.2e1 / 0.3e1 * t2035 + t2475) * t2102 + 0.4e1 / 0.3e1 * t2035 + t2474) * t2134 + (0.4e1 / 0.3e1 * t2710 - 0.2e1 / 0.3e1 * t2019) * pkin(6) * t2510) * t2748 + (t2043 * t2777 - ((t1825 + t2639) * t2135 + (-0.4e1 * t2020 + t2391) * t2341) * t2710 + (t2233 * t2787 - t1813 + t1822 + (-t2102 * t2716 + (-t2102 * t2486 + t2342 * t2786 + t1819 + 0.2e1 * t1849) * t2125) * pkin(2) + (0.2e1 * t1840 - t1816) * t2066) * t2134 + t2126 * (t1750 * t2135 + (-t2103 + (-t2079 + t2559) * t2125) * t2600)) * t2083 + ((-0.3e1 * t2102 + 0.3e1) * t1876 * t2561 - (t2102 * t2440 + 0.2e1 * t2021 * t2597 + ((t2739 + t2495) * t2126 + t1855) * t2746) * t2710 + (((pkin(1) * t2630 + t1771) * t2062 + t2245) * t2547 + (0.2e1 * (t2035 + t2476) * t2102 - 0.4e1 * t2035 - 0.2e1 * t2039 + t2218) * t1876) * t2134 - t1762 * t2102 * t2721 + 0.2e1 * t2197 + t1756) * t2106 - t2728 * t2777 + (t1771 * t2135 + (-t2062 - t2158 + t2391) * t2600) * t2430 + 0.2e1 * ((t2102 / 0.2e1 - 0.1e1 / 0.2e1) * t2716 + (t1768 * t2102 - t2443 / 0.2e1 - t1768 + (-pkin(6) * t2101 + t2025 * t2135) * t2600) * t2125) * t2703 - 0.2e1 * t2000 * t2102 * t2254 - t1750 * t2510 + ((t1994 * t2125 + t2103) * t2126 + t2125 * t2104) * t2600) * t2100 * t1930 * t1876 + ((t1876 * t2269 + t1876 - t2632) * t2561 - (t1831 * t2434 - t2498 * t2105 + (t2135 * (-t2063 + pkin(1)) * t2083 + (t1999 * t2448 + t2687) * t2126) * t1876) * t2710 + ((t2412 + t2573) * t1765 + (-(t2039 - t2297) * t2083 + (-pkin(6) * t2020 + t2036 * t2126) * t2105 * t2531 + (-t2102 * t2083 + t2728) * pkin(2) * t2019) * t1876) * t2134 - t2083 * t2197 - t1987 * t2106 * t2254 + t2197 + t1756) * t2363 - ((-t2362 + ((t2069 - 0.2e1 * t2063 + t2159) * t2558 + pkin(5) * t2242) * t1876) * t2099 + ((-t2019 * t2340 - t1762) * t2106 + ((t2025 * t2747 + t2102 * t2788 + t2025) * t1876 - t2178 * t1831) * t2125) * t2134 - t2083 * t2221 + (t2135 * t1855 - t1987 * t2600) * t2106 + ((-t1771 - t1840) * t2126 + t1825) * t2105 + t2221) * pkin(2) * t2357;
t1780 = t2601 + t2632 / 0.2e1 - t1900 / 0.2e1 - t1899 / 0.2e1 - t1909 / 0.2e1;
t1804 = -0.2e1 * t1816;
t2028 = 0.2e1 * t2035;
t2327 = t2135 * t2572;
t2188 = t2126 * t2020 * t2327;
t2194 = -pkin(6) * t1840 + t1813;
t2356 = t1861 * t2536;
t2263 = pkin(1) * t2356;
t2343 = t2020 * t2599;
t2272 = 0.2e1 * t2343;
t2315 = t2098 * t2544;
t2329 = t2102 * t2572;
t2409 = pkin(6) * t2599;
t2489 = t1816 / 0.2e1 - t1840 / 0.2e1;
t2492 = pkin(6) * t2343 + t1831 * t2460;
t1735 = (((pkin(1) * t2632 + (t2758 + 0.3e1 * t2063 - 0.3e1 * t2406) * t1876) * t2099 * t2543 + (pkin(1) * t2642 + (t2000 * t2757 + t2126 * t2568) * t1876) * t2690) * t2102 + (0.2e1 * t1780 * t2315 + (t2126 * t2272 + t2498) * t2099 * t2326 + ((-(t1840 + t1804) * t2066 + t2194) * t2106 + ((t2035 + t2295) * t2747 + t2028 + 0.4e1 * t2039 + t2219) * t1876) * t2427 + (-t1771 * t2062 / 0.2e1 - t1852 / 0.2e1 + t2492) * t2126 * t2293) * t2135 + (t1780 * t2314 * t2785 + (-t2022 * t2642 + (t2104 + ((t2035 + t2473) * t2747 + t2028 + t1994) * t2126) * t1876) * t2105) * pkin(6) + (-(t2153 + t2560) * t2342 + ((t1804 + t2700) * t2062 + t1852 - t1861 * t2160 - 0.4e1 * t2492) * t2102 + (t2272 + t2300 + t2443) * pkin(6)) * t2134 * t2433) * t1876 * t2335 + (t2135 * t1783 * t2315 + (t2362 + (t2188 + (t2063 + t2069) * t2558) * t1876) * t2560 + (((t2066 + t2155) * t2599 + t2489) * t2547 + (-t2102 + 0.1e1 / 0.2e1) * t1876 * t2020 * t2572) * t2372 - (t2188 * t2691 + (t2409 * t2069 + (-t2409 + t1765) * t2022) * t2105) * pkin(6)) * t2164 * t2363 + ((t1876 * t2022 * t2327 + t2440) * t2710 + (t1876 * t2297 * t2329 - pkin(2) * (-t2713 + (t1876 * t2573 - t1771) * t2125) * t2547 + t2263 * t2706) * t2134 + (-t2135 * t2263 - ((t1825 - t2639) * t2125 - pkin(2) * t2618) * t2105 + (t1987 * t2105 * t2536 + t2731 * t2134 * t2025 + t2019 * t2242) * t1876) * pkin(6)) * t2357;
t1744 = ((t1783 * t2560 + t2194) * t1831 - t1762 * t2713 + ((-(t2043 * t2560 - t2559) * t2083 + t2560 * t2569 - t2559 + t2035 + t2039 + t2472) * t1876 + ((t2233 + t2489) * t2786 + (t2160 + t2560) * t1831) * t2106 + (-pkin(6) * t2356 + (-(0.2e1 * t2126 * t2397 + t2019) * t2083 + t2021 * t2505) * t1876 + (t1969 * t2631 + (t1762 - t2713) * t2135 + (-0.2e1 * t1999 * t2599 - t1849 - t2495) * t2511) * t2105) * pkin(2)) * t1876) * t1930;
t1759 = Ifges(3,4) * t2631 - t2665 / 0.2e1;
t2457 = -0.2e1 * t2658;
t1774 = t1861 * t2457;
t1786 = t2004 * t1831;
t1798 = t1831 * t2115;
t1843 = mrSges(3,1) * t2700;
t1846 = Ifges(3,5) * t1861;
t2287 = mrSges(3,1) * t2134 - t2003;
t1906 = -t2789 * t2105 - ((t2115 * t2126 + t2135 * t2287) * pkin(1) - t2797) * t2106;
t2281 = -Ifges(3,6) * t2126 + t2139;
t2284 = t2140 - t2671;
t1918 = -((-mrSges(3,1) * t2694 + t2281) * t2125 + (-mrSges(3,2) * t2694 - t2284) * t2134 - Ifges(3,3) * t2135) * t2105 + ((pkin(1) * t2680 - Ifges(3,5)) * t2125 + (pkin(1) * t2677 - Ifges(3,6)) * t2134) * t2106;
t2206 = -Ifges(3,5) * t2134 + t2661;
t1978 = Ifges(2,4) + t2206;
t2339 = t1876 * t2525;
t2236 = t2105 * t2339;
t2275 = -0.2e1 * t1831 * t2526;
t2378 = Ifges(3,5) * t2619;
t2384 = Ifges(3,4) * t2621;
t2387 = t1777 * t2652;
t2449 = t2099 * t2752;
t2467 = -0.2e1 * t2725;
t2480 = t1843 + t1807;
t2483 = t1828 - t1858;
t2501 = (-(-0.2e1 * t1978 * t2510 + t2784 * t2099 + (t2085 + 0.4e1 * t2674) * t2134 + t2187 + t2798) * t2083 + t2789 * t2448 - ((t2086 - 0.2e1 * t2671) * t2134 + (t2157 + 0.2e1 * t2661) * t2126 - 0.2e1 * t2722) * t2135 + t2007 - (t2743 - 0.2e1 * t2674) * t2134 + t2126 * t2466 + t2177 + t2798) * t1744 + t1906 * t1732 + t1918 * t1735 - 0.4e1 * (t2645 - (t1759 * t2134 - t2378 / 0.2e1 + (t2007 / 0.2e1 + t2738) * t1831) * t2510 - 0.2e1 * t2384 + (t1834 + t1807 / 0.2e1 + t1843 / 0.2e1) * t2134 + (-t2668 / 0.2e1 + t1861 * t2454) * t2125 - t1810 / 0.2e1 + t2655) * t2601 + (((t1798 + 0.2e1 * (-mrSges(3,1) * t2125 - mrSges(3,2) * t2134) * t1861) * t1825 + (Ifges(3,4) * t2449 - (t1831 * t2767 + t1846) * t2134 - (-mrSges(3,2) * t1819 - t2665) * t2125 - t1831 * t2029) * t1876 * t2785) * t2135 + 0.4e1 * (-t2236 + t2658) * t2621 + ((-0.8e1 * (-t2668 / 0.4e1 + (t2453 + t2674) * t1861) * t2600 - pkin(1) * t2683) * t2126 + (t1846 + t2275) * t1861) * t2134 + (0.2e1 * (t1861 * t2113 + t2125 * t2480 + t1786) * t2600 + pkin(1) * (-mrSges(2,1) * t1828 + t2387)) * t2126 - t1858 * t2661 + t1774) * t2106 + 0.4e1 * t1876 * t2645 + ((t2105 * t2658 - t2339) * t2449 + ((-pkin(5) * t2683 - t1828 * t2526) * t2105 + (-0.4e1 * t1759 * t2126 + t1861 * t2651) * t1876) * t2134 + 0.2e1 * (-t1831 * t2040 + t2378) * t2598 + (pkin(5) * t2387 - t1828 * t2029) * t2105 + (mrSges(3,1) * t2619 - t1798) * t2467) * t2135 - 0.4e1 * (Ifges(3,4) * t1876 + t2303 * t2630) * t2621 + ((t2483 * t2664 + (mrSges(3,1) * t2467 + (t2743 - 0.4e1 * t2674) * t2620) * t1831) * t2126 + t1858 * t2455 + (t1834 + t2480) * t2749) * t2134 + (((Ifges(3,5) * t2483 + t1843 * t2752) * t2125 + t1831 * (t1861 * t2081 + t1786)) * t2105 + t1831 * t2722 * t2749) * t2126 + mrSges(3,1) * t1858 * t2437 - 0.2e1 * t1876 * ((mrSges(3,2) * t2700 + t2668) * t2125 + t1810 - t2655);
t2479 = t1856 - t1871;
t2478 = t1857 - t1872;
t2477 = t1858 - t1873;
t2462 = Ifges(3,5) * t2785;
t2461 = -0.2e1 * t2664;
t2452 = t2137 / 0.2e1;
t2149 = -Ifges(3,4) / 0.2e1;
t2296 = -t2742 / 0.2e1 + Ifges(2,5) / 0.2e1 + t2149;
t2057 = Ifges(3,2) / 0.2e1 - Ifges(3,1) / 0.2e1;
t2076 = -t2138 / 0.2e1;
t2080 = Ifges(3,1) + t2733;
t2220 = Ifges(3,3) / 0.2e1 - Ifges(3,2) / 0.2e1 + Ifges(2,2) / 0.2e1 - Ifges(2,1) / 0.2e1;
t2280 = t2090 * (t1904 * t1742 + t2795 * t1730 + t1988 * t1733 + (t2208 * t1859 * t2785 + ((t2048 + (-t2057 * t2119 + t2076) * t2128 + t2119 * t2452 + t2296) * t2448 - t2719 + t2732 * t2120 * (t2057 * t2089 + t2220 + t2383)) * t1874) * t2607 - t1976 * t2617 + 0.4e1 * (t2762 * t2352 / 0.4e1 + (t2523 * t2737 + t2048 + t2149) * t1859) * t2609 + (t2289 * t2727 + (-t2080 - 0.4e1 * t2383 - 0.2e1 * t2005) * t2628) * t2608 + 0.4e1 * t1829 * t2386 + (Ifges(3,5) * t2479 + t1859 * t2277) * t2128 - t2479 * t2663 + t1772 + (0.2e1 * t1976 * t2331 + Ifges(2,4)) * t1871);
t2279 = t2100 * (t1906 * t1744 + t2797 * t1732 + t1990 * t1735 + (t2206 * t1861 * t2785 + ((t2050 + (-t2057 * t2125 + t2076) * t2134 + t2125 * t2452 + t2296) * t2448 - t2719 + t2732 * t2126 * (t2057 * t2099 + t2220 + t2381)) * t1876) * t2597 - t1978 * t2613 + 0.4e1 * (t2764 * t2341 / 0.4e1 + (t2513 * t2737 + t2050 + t2149) * t1861) * t2599 + (t2287 * t2725 + (-t2080 - 0.4e1 * t2381 - 0.2e1 * t2007) * t2620) * t2598 + 0.4e1 * t1831 * t2384 + (Ifges(3,5) * t2477 + t1861 * t2275) * t2134 - t2477 * t2661 + t1774 + (0.2e1 * t1978 * t2329 + Ifges(2,4)) * t1873);
t2278 = (t1905 * t1743 + t2796 * t1731 + t1989 * t1734 + (t2207 * t1860 * t2785 + ((t2049 + (-t2057 * t2122 + t2076) * t2131 + t2122 * t2452 + t2296) * t2448 - t2719 + t2732 * t2123 * (t2057 * t2094 + t2220 + t2382)) * t1875) * t2602 - t1977 * t2615 + 0.4e1 * (t2763 * t2347 / 0.4e1 + (t2518 * t2737 + t2049 + t2149) * t1860) * t2604 + (t2288 * t2726 + (-t2080 - 0.4e1 * t2382 - 0.2e1 * t2006) * t2624) * t2603 + 0.4e1 * t1830 * t2385 + (Ifges(3,5) * t2478 + t1860 * t2276) * t2131 - t2478 * t2662 + t1773 + (0.2e1 * t1977 * t2330 + Ifges(2,4)) * t1872) * t2095;
t2217 = t2352 * t2755;
t2216 = t2347 * t2755;
t2215 = t2341 * t2755;
t2211 = (-Ifges(3,3) * t1733 + t1730 * t1988 + t1742 * t1916 + 0.2e1 * (t1781 * t2238 + (t2271 + 0.1e1) * t2782) * t2089 + ((Ifges(3,6) * t2520 - t2041 * t2530 + t2138) * t2617 + ((t1829 * t2784 + t2217) * t2119 + (Ifges(3,5) * t2129 - pkin(5) * t2679) * t2610) * t2609 + (t1829 * t2217 + (t2616 - (t1874 - t1829) * (t1874 + t1829)) * t2113) * t2119 + ((t1829 * t2462 + t1874 * t2283) * t2129 - mrSges(3,1) * t2699) * t1874) * t2128 - (-Ifges(3,5) * t2520 + t2137) * t2119 * t2617 - (t2459 + ((Ifges(3,6) * t2129 + pkin(5) * t2682) * t2119 + t2529) * t2610) * t2609 + ((t1829 * t2461 + t1874 * t2286) * t2129 + mrSges(3,2) * t2699) * t1874 * t2119 + t1829 * t2080 * t2352 - t2782 + ((-0.4e1 * t1829 * t2609 - 0.2e1 * t1826) * t2089 - t2041 * t2617 + t2616 + t1826) * Ifges(3,4)) * t2596;
t2210 = (-Ifges(3,3) * t1734 + t1731 * t1989 + t1743 * t1917 + 0.2e1 * (t1782 * t2237 + (t2270 + 0.1e1) * t2781) * t2094 + ((Ifges(3,6) * t2515 - t2042 * t2528 + t2138) * t2615 + ((t1830 * t2784 + t2216) * t2122 + (Ifges(3,5) * t2132 - pkin(5) * t2678) * t2605) * t2604 + (t1830 * t2216 + (t2614 - (t1875 - t1830) * (t1875 + t1830)) * t2113) * t2122 + ((t1830 * t2462 + t1875 * t2282) * t2132 - mrSges(3,1) * t2698) * t1875) * t2131 - (-Ifges(3,5) * t2515 + t2137) * t2122 * t2615 - (t2458 + ((Ifges(3,6) * t2132 + pkin(5) * t2681) * t2122 + t2527) * t2605) * t2604 + ((t1830 * t2461 + t1875 * t2285) * t2132 + mrSges(3,2) * t2698) * t1875 * t2122 + t1830 * t2080 * t2347 - t2781 + ((-0.4e1 * t1830 * t2604 - 0.2e1 * t1827) * t2094 - t2042 * t2615 + t2614 + t1827) * Ifges(3,4)) * t2595;
t2209 = (-Ifges(3,3) * t1735 + t1732 * t1990 + t1744 * t1918 + 0.2e1 * (t1783 * t2236 + (t2269 + 0.1e1) * t2780) * t2099 + ((Ifges(3,6) * t2510 - t2043 * t2526 + t2138) * t2613 + ((t1831 * t2784 + t2215) * t2125 + (Ifges(3,5) * t2135 - pkin(5) * t2677) * t2600) * t2599 + (t1831 * t2215 + (t2612 - (t1876 - t1831) * (t1876 + t1831)) * t2113) * t2125 + ((t1831 * t2462 + t1876 * t2281) * t2135 - mrSges(3,1) * t2697) * t1876) * t2134 - (-Ifges(3,5) * t2510 + t2137) * t2125 * t2613 - (t2457 + ((Ifges(3,6) * t2135 + pkin(5) * t2680) * t2125 + t2525) * t2600) * t2599 + ((t1831 * t2461 + t1876 * t2284) * t2135 + mrSges(3,2) * t2697) * t1876 * t2125 + t1831 * t2080 * t2341 - t2780 + ((-0.4e1 * t1831 * t2599 - 0.2e1 * t1828) * t2099 - t2043 * t2613 + t2612 + t1828) * Ifges(3,4)) * t2594;
t1 = [(t1882 * t2279 + t1915 * t2501) * t1930 + (t1881 * t2278 + t1913 * t2502) * t1929 + (t1880 * t2280 + t1911 * t2503) * t1928 + (t1884 * t2211 + t1886 * t2210 + t1888 * t2209) * t2164; (t1879 * t2279 + t1914 * t2501) * t1930 + (t1878 * t2278 + t1912 * t2502) * t1929 + (t1877 * t2280 + t1910 * t2503) * t1928 + (t1883 * t2211 + t1885 * t2210 + t1887 * t2209) * t2164; (t1894 * t2279 + t1924 * t2501) * t1930 + (t1893 * t2278 + t1923 * t2502) * t1929 + (t1892 * t2280 + t1922 * t2503) * t1928 + (t1901 * t2211 + t1902 * t2210 + t1903 * t2209) * t2164 * t2105;];
taucX  = t1;
