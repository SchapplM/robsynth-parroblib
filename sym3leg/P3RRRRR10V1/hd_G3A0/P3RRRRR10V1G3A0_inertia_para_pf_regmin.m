% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P3RRRRR10V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3*3x18]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 23:28
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR10V1G3A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G3A0_inertia_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G3A0_inertia_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G3A0_inertia_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G3A0_inertia_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G3A0_inertia_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 23:09:56
% EndTime: 2020-08-06 23:10:56
% DurationCPUTime: 67.76s
% Computational Cost: add. (63000->1264), mult. (187218->2434), div. (4860->13), fcn. (159318->26), ass. (0->865)
t1908 = cos(pkin(3));
t1894 = t1908 ^ 2;
t2416 = -t1894 + 0.1e1;
t1913 = sin(qJ(2,3));
t1881 = t1913 * pkin(6);
t1856 = t1881 + pkin(1);
t1916 = sin(qJ(2,2));
t1882 = t1916 * pkin(6);
t1860 = t1882 + pkin(1);
t1919 = sin(qJ(2,1));
t1883 = t1919 * pkin(6);
t1864 = t1883 + pkin(1);
t1921 = cos(qJ(3,3));
t2324 = t1913 * t1921;
t1922 = cos(qJ(2,3));
t2396 = pkin(6) * t1922;
t1836 = -pkin(2) * t2324 + t2396;
t1923 = cos(qJ(1,3));
t1914 = sin(qJ(1,3));
t2338 = t1908 * t1914;
t2310 = t1921 * t1922;
t2423 = -pkin(2) * t2310 - t1881;
t1800 = t1836 * t2338 - t1923 * t2423;
t1909 = legFrame(3,2);
t1875 = sin(t1909);
t1878 = cos(t1909);
t1907 = sin(pkin(3));
t1912 = sin(qJ(3,3));
t2327 = t1912 * t1914;
t2272 = pkin(2) * t2327;
t2340 = t1908 * t1912;
t2275 = pkin(2) * t2340;
t1770 = (t1836 * t1878 + t1875 * t2272) * t1907 + t1800 * t1875 - t1878 * t2275;
t1771 = (t1836 * t1875 - t1878 * t2272) * t1907 - t1800 * t1878 - t1875 * t2275;
t2434 = t1770 * t1771;
t1924 = cos(qJ(3,2));
t2318 = t1916 * t1924;
t1925 = cos(qJ(2,2));
t2395 = pkin(6) * t1925;
t1837 = -pkin(2) * t2318 + t2395;
t1926 = cos(qJ(1,2));
t1917 = sin(qJ(1,2));
t2335 = t1908 * t1917;
t2308 = t1924 * t1925;
t2424 = -pkin(2) * t2308 - t1882;
t1801 = t1837 * t2335 - t1926 * t2424;
t1910 = legFrame(2,2);
t1876 = sin(t1910);
t1879 = cos(t1910);
t1915 = sin(qJ(3,2));
t2321 = t1915 * t1917;
t2271 = pkin(2) * t2321;
t2337 = t1908 * t1915;
t2274 = pkin(2) * t2337;
t1772 = (t1837 * t1879 + t1876 * t2271) * t1907 + t1801 * t1876 - t1879 * t2274;
t1773 = (t1837 * t1876 - t1879 * t2271) * t1907 - t1801 * t1879 - t1876 * t2274;
t2433 = t1772 * t1773;
t1927 = cos(qJ(3,1));
t2312 = t1919 * t1927;
t1928 = cos(qJ(2,1));
t2394 = pkin(6) * t1928;
t1838 = -pkin(2) * t2312 + t2394;
t1929 = cos(qJ(1,1));
t1920 = sin(qJ(1,1));
t2332 = t1908 * t1920;
t2306 = t1927 * t1928;
t2425 = -pkin(2) * t2306 - t1883;
t1802 = t1838 * t2332 - t1929 * t2425;
t1911 = legFrame(1,2);
t1877 = sin(t1911);
t1880 = cos(t1911);
t1918 = sin(qJ(3,1));
t2315 = t1918 * t1920;
t2270 = pkin(2) * t2315;
t2334 = t1908 * t1918;
t2273 = pkin(2) * t2334;
t1774 = (t1838 * t1880 + t1877 * t2270) * t1907 + t1802 * t1877 - t1880 * t2273;
t1775 = (t1838 * t1877 - t1880 * t2270) * t1907 - t1802 * t1880 - t1877 * t2273;
t2432 = t1774 * t1775;
t2406 = pkin(2) * t1912;
t1869 = pkin(1) * t2406;
t2366 = t1836 * t1908;
t1794 = pkin(1) * t2366 + (pkin(5) * t2423 + t1869) * t1907;
t1785 = 0.1e1 / t1794;
t2383 = t1785 * t1908;
t2404 = pkin(2) * t1915;
t1870 = pkin(1) * t2404;
t2365 = t1837 * t1908;
t1795 = pkin(1) * t2365 + (pkin(5) * t2424 + t1870) * t1907;
t1787 = 0.1e1 / t1795;
t2377 = t1787 * t1908;
t2402 = pkin(2) * t1918;
t1871 = pkin(1) * t2402;
t2364 = t1838 * t1908;
t1796 = pkin(1) * t2364 + (pkin(5) * t2425 + t1871) * t1907;
t1789 = 0.1e1 / t1796;
t2371 = t1789 * t1908;
t1899 = 0.1e1 / t1921;
t2431 = t1899 * t1907;
t1902 = 0.1e1 / t1924;
t2430 = t1902 * t1907;
t1905 = 0.1e1 / t1927;
t2429 = t1905 * t1907;
t1853 = pkin(5) * t1912 + pkin(2);
t1898 = t1921 ^ 2;
t2410 = pkin(2) * t1898;
t2127 = -t1853 + 0.2e1 * t2410;
t2428 = t1914 * t2127;
t1857 = pkin(5) * t1915 + pkin(2);
t1901 = t1924 ^ 2;
t2409 = pkin(2) * t1901;
t2126 = -t1857 + 0.2e1 * t2409;
t2427 = t1917 * t2126;
t1861 = pkin(5) * t1918 + pkin(2);
t1904 = t1927 ^ 2;
t2408 = pkin(2) * t1904;
t2125 = -t1861 + 0.2e1 * t2408;
t2426 = t1920 * t2125;
t2397 = pkin(6) * t1907;
t2115 = (t1922 + 0.1e1) * (t1922 - 0.1e1) * t2397;
t2405 = pkin(2) * t1913;
t2251 = t1914 * t2405;
t2346 = t1907 * t1923;
t2422 = t1912 * (-(pkin(1) * t2346 + pkin(5) * t1914) * t1913 + t1923 * t2115) - t2251;
t2114 = (t1925 + 0.1e1) * (t1925 - 0.1e1) * t2397;
t2403 = pkin(2) * t1916;
t2250 = t1917 * t2403;
t2344 = t1907 * t1926;
t2421 = t1915 * (-(pkin(1) * t2344 + pkin(5) * t1917) * t1916 + t1926 * t2114) - t2250;
t2113 = (t1928 + 0.1e1) * (t1928 - 0.1e1) * t2397;
t2401 = pkin(2) * t1919;
t2249 = t1920 * t2401;
t2342 = t1907 * t1929;
t2420 = t1918 * (-(pkin(1) * t2342 + pkin(5) * t1920) * t1919 + t1929 * t2113) - t2249;
t2419 = 0.2e1 * pkin(1);
t1893 = t1907 ^ 2;
t2418 = 0.2e1 * t1893;
t2417 = 0.2e1 * t1894;
t2415 = t2417 - 0.2e1;
t2414 = pkin(1) * t1907;
t1884 = pkin(1) * t1913;
t1885 = pkin(1) * t1916;
t1886 = pkin(1) * t1919;
t2413 = pkin(1) * t1922;
t2412 = pkin(1) * t1925;
t2411 = pkin(1) * t1928;
t2407 = pkin(2) * t1907;
t2400 = pkin(2) * t1921;
t2399 = pkin(2) * t1924;
t2398 = pkin(2) * t1927;
t1749 = t1770 * t1785;
t1750 = t1771 * t1785;
t1751 = t1772 * t1787;
t1752 = t1773 * t1787;
t1753 = t1774 * t1789;
t1754 = t1775 * t1789;
t1868 = pkin(1) * t1908 * pkin(6);
t2339 = t1908 * t1913;
t2278 = pkin(1) * t2339;
t2111 = t1921 * t2278;
t2304 = pkin(5) * t2407;
t1779 = 0.1e1 / ((-t1921 * t2304 + t1868) * t1922 - pkin(2) * t2111 + t1907 * (-pkin(5) * t1881 + t1869));
t2393 = t1779 * t1899;
t1932 = 0.1e1 / pkin(2);
t2392 = t1779 * t1932;
t2336 = t1908 * t1916;
t2277 = pkin(1) * t2336;
t2112 = t1924 * t2277;
t1780 = 0.1e1 / ((-t1924 * t2304 + t1868) * t1925 - pkin(2) * t2112 + t1907 * (-pkin(5) * t1882 + t1870));
t2391 = t1780 * t1902;
t2390 = t1780 * t1932;
t2333 = t1908 * t1919;
t2276 = pkin(1) * t2333;
t2106 = t1927 * t2276;
t1781 = 0.1e1 / ((-t1927 * t2304 + t1868) * t1928 - pkin(2) * t2106 + t1907 * (-pkin(5) * t1883 + t1871));
t2389 = t1781 * t1905;
t2388 = t1781 * t1932;
t2353 = t1907 * t1912;
t1782 = -t2423 * t1914 + (-pkin(2) * t2353 - t2366) * t1923;
t1761 = t1782 * t1785;
t1786 = 0.1e1 / t1794 ^ 2;
t2387 = t1782 * t1786;
t2351 = t1907 * t1915;
t1783 = -t2424 * t1917 + (-pkin(2) * t2351 - t2365) * t1926;
t1762 = t1783 * t1787;
t1788 = 0.1e1 / t1795 ^ 2;
t2386 = t1783 * t1788;
t2349 = t1907 * t1918;
t1784 = -t2425 * t1920 + (-pkin(2) * t2349 - t2364) * t1929;
t1763 = t1784 * t1789;
t1790 = 0.1e1 / t1796 ^ 2;
t2385 = t1784 * t1790;
t2384 = t1785 * t1899;
t2382 = t1785 * t1922;
t2352 = t1907 * t1913;
t2263 = pkin(5) * t2352;
t1824 = t1908 * t2413 - t2263;
t2381 = t1786 * t1824;
t1895 = t1913 ^ 2;
t2380 = t1786 * t1895;
t2379 = t1786 * t1899;
t2378 = t1787 * t1902;
t2376 = t1787 * t1925;
t2350 = t1907 * t1916;
t2262 = pkin(5) * t2350;
t1825 = -t1908 * t2412 + t2262;
t2375 = t1788 * t1825;
t1896 = t1916 ^ 2;
t2374 = t1788 * t1896;
t2373 = t1788 * t1902;
t2372 = t1789 * t1905;
t2370 = t1789 * t1928;
t2348 = t1907 * t1919;
t2261 = pkin(5) * t2348;
t1826 = -t1908 * t2411 + t2261;
t2369 = t1790 * t1826;
t1897 = t1919 ^ 2;
t2368 = t1790 * t1897;
t2367 = t1790 * t1905;
t1931 = pkin(2) ^ 2;
t2363 = t1898 * t1931;
t2362 = t1899 * t1908;
t2361 = t1899 * t1912;
t2360 = t1901 * t1931;
t2359 = t1902 * t1908;
t2358 = t1902 * t1915;
t2357 = t1904 * t1931;
t2356 = t1905 * t1908;
t2355 = t1905 * t1918;
t2354 = t1907 * t1908;
t2347 = t1907 * t1922;
t2345 = t1907 * t1925;
t2343 = t1907 * t1928;
t2341 = t1907 * t1932;
t2331 = t1908 * t1921;
t2330 = t1908 * t1924;
t2329 = t1908 * t1927;
t2328 = t1912 * t1913;
t2326 = t1912 * t1921;
t2325 = t1912 * t1922;
t2323 = t1913 * t1922;
t2322 = t1915 * t1916;
t2320 = t1915 * t1924;
t2319 = t1915 * t1925;
t2317 = t1916 * t1925;
t2316 = t1918 * t1919;
t2314 = t1918 * t1927;
t2313 = t1918 * t1928;
t2311 = t1919 * t1928;
t2309 = t1922 * t1923;
t2307 = t1925 * t1926;
t2305 = t1928 * t1929;
t2303 = pkin(6) * t2400;
t2302 = pkin(6) * t2399;
t2301 = pkin(6) * t2398;
t2300 = 0.2e1 * t1749;
t2299 = 0.2e1 * t1750;
t2298 = 0.2e1 * t1751;
t2297 = 0.2e1 * t1752;
t2296 = 0.2e1 * t1753;
t2295 = 0.2e1 * t1754;
t2294 = 0.2e1 * t1761;
t2293 = 0.2e1 * t1762;
t2292 = 0.2e1 * t1763;
t2291 = t1785 * t2417;
t2290 = t1787 * t2417;
t2289 = t1789 * t2417;
t2288 = -0.2e1 * t2354;
t2287 = 0.2e1 * t2326;
t2286 = 0.2e1 * t2320;
t2285 = 0.2e1 * t2314;
t2284 = pkin(1) * t2392;
t2283 = pkin(1) * t2390;
t2282 = pkin(1) * t2388;
t2281 = t1899 * t2413;
t2280 = t1902 * t2412;
t2279 = t1905 * t2411;
t2266 = pkin(5) * t1785 * t1913;
t2265 = pkin(5) * t1787 * t1916;
t2264 = pkin(5) * t1789 * t1919;
t2260 = pkin(5) * t2347;
t2259 = pkin(5) * t2345;
t2258 = pkin(5) * t2343;
t2257 = pkin(6) * t2347;
t2256 = pkin(6) * t2345;
t2255 = pkin(6) * t2343;
t2254 = t1914 * t2396;
t2253 = t1917 * t2395;
t2252 = t1920 * t2394;
t2248 = -0.2e1 * t2303;
t2247 = -0.2e1 * t2302;
t2246 = -0.2e1 * t2301;
t2245 = t2416 * pkin(6);
t1900 = t1922 ^ 2;
t1872 = t1900 - 0.2e1;
t1845 = t1872 * t2406 - pkin(5);
t1803 = t1845 * t1914 * t1907 - t1856 * t1923;
t1842 = (t1900 - 0.1e1) * t2406 - pkin(5);
t2136 = t1912 * t2323;
t2028 = t2136 * t2407;
t1980 = t1923 * t2028;
t2154 = t1878 * t2325;
t2109 = pkin(6) * t2154;
t2157 = t1875 * t2325;
t2110 = pkin(6) * t2157;
t2118 = t1898 * t2251;
t1704 = ((-t1845 * t1878 - t1875 * t2254) * t1921 + (t1875 * t2428 - t2109) * t1913) * t1894 + (-(t1875 * t2309 - 0.2e1 * t1878 * t2352) * t2410 + (t1803 * t1875 - t1878 * t2257) * t1921 + (-t1853 * t1878 + t1914 * t2110) * t2352) * t1908 - t1875 * t2118 + (t1842 * t1878 + t1875 * t1980) * t1921 - t2422 * t1875 + t1856 * t2154;
t1692 = t1704 * t2384;
t2241 = t1704 * t2361;
t1903 = t1925 ^ 2;
t1873 = t1903 - 0.2e1;
t1846 = t1873 * t2404 - pkin(5);
t1804 = t1846 * t1917 * t1907 - t1860 * t1926;
t1843 = (t1903 - 0.1e1) * t2404 - pkin(5);
t2135 = t1915 * t2317;
t2027 = t2135 * t2407;
t1979 = t1926 * t2027;
t2153 = t1879 * t2319;
t2107 = pkin(6) * t2153;
t2156 = t1876 * t2319;
t2108 = pkin(6) * t2156;
t2117 = t1901 * t2250;
t1705 = ((-t1846 * t1879 - t1876 * t2253) * t1924 + (t1876 * t2427 - t2107) * t1916) * t1894 + (-(t1876 * t2307 - 0.2e1 * t1879 * t2350) * t2409 + (t1804 * t1876 - t1879 * t2256) * t1924 + (-t1857 * t1879 + t1917 * t2108) * t2350) * t1908 - t1876 * t2117 + (t1843 * t1879 + t1876 * t1979) * t1924 - t2421 * t1876 + t1860 * t2153;
t1693 = t1705 * t2378;
t2240 = t1705 * t2358;
t1906 = t1928 ^ 2;
t1874 = t1906 - 0.2e1;
t1847 = t1874 * t2402 - pkin(5);
t1805 = t1847 * t1920 * t1907 - t1864 * t1929;
t1844 = (t1906 - 0.1e1) * t2402 - pkin(5);
t2134 = t1918 * t2311;
t2026 = t2134 * t2407;
t1978 = t1929 * t2026;
t2152 = t1880 * t2313;
t2104 = pkin(6) * t2152;
t2155 = t1877 * t2313;
t2105 = pkin(6) * t2155;
t2116 = t1904 * t2249;
t1706 = ((-t1847 * t1880 - t1877 * t2252) * t1927 + (t1877 * t2426 - t2104) * t1919) * t1894 + (-(t1877 * t2305 - 0.2e1 * t1880 * t2348) * t2408 + (t1805 * t1877 - t1880 * t2255) * t1927 + (-t1861 * t1880 + t1920 * t2105) * t2348) * t1908 - t1877 * t2116 + (t1844 * t1880 + t1877 * t1978) * t1927 - t2420 * t1877 + t1864 * t2152;
t1694 = t1706 * t2372;
t2239 = t1706 * t2355;
t1707 = ((-t1845 * t1875 + t1878 * t2254) * t1921 + (-t1878 * t2428 - t2110) * t1913) * t1894 + ((0.2e1 * t1875 * t2352 + t1878 * t2309) * t2410 + (-t1803 * t1878 - t1875 * t2257) * t1921 - (t1853 * t1875 + t1914 * t2109) * t2352) * t1908 + t1878 * t2118 + (t1842 * t1875 - t1878 * t1980) * t1921 + t2422 * t1878 + t1856 * t2157;
t1695 = t1707 * t2384;
t2238 = t1707 * t2361;
t1708 = ((-t1846 * t1876 + t1879 * t2253) * t1924 + (-t1879 * t2427 - t2108) * t1916) * t1894 + ((0.2e1 * t1876 * t2350 + t1879 * t2307) * t2409 + (-t1804 * t1879 - t1876 * t2256) * t1924 - (t1857 * t1876 + t1917 * t2107) * t2350) * t1908 + t1879 * t2117 + (t1843 * t1876 - t1879 * t1979) * t1924 + t2421 * t1879 + t1860 * t2156;
t1696 = t1708 * t2378;
t2237 = t1708 * t2358;
t1709 = ((-t1847 * t1877 + t1880 * t2252) * t1927 + (-t1880 * t2426 - t2105) * t1919) * t1894 + ((0.2e1 * t1877 * t2348 + t1880 * t2305) * t2408 + (-t1805 * t1880 - t1877 * t2255) * t1927 - (t1861 * t1877 + t1920 * t2104) * t2348) * t1908 + t1880 * t2116 + (t1844 * t1877 - t1880 * t1978) * t1927 + t2420 * t1880 + t1864 * t2155;
t1697 = t1709 * t2372;
t2236 = t1709 * t2355;
t1865 = t1884 + pkin(6);
t1854 = pkin(5) + t2406;
t2100 = t2416 * t1914 * t1854;
t1791 = t1865 * t2346 + t1913 * t2100;
t1855 = 0.2e1 * t1881 + pkin(1);
t1797 = t1855 * t2346 + t2100;
t2145 = t1907 * t2338;
t2040 = t1875 * t2145;
t1806 = -t1878 * t1894 + t1878 + t2040;
t1830 = -t1894 * t1881 + t1856;
t1848 = t1884 + t2245;
t1930 = pkin(6) ^ 2;
t2121 = -t1930 + t2363;
t2022 = t1923 * t2121;
t2025 = t2145 * t1881;
t2162 = t1854 * t2352;
t2043 = t1908 * t2162;
t2151 = t1913 * t2363;
t2163 = t1854 * t2354;
t1710 = (t1875 * t1907 * t2022 + 0.2e1 * t1806 * t2303) * t1900 + (-t1806 * t2151 + (t1797 * t1875 - t1878 * t2163) * t2400 + (t1830 * t1878 + t1875 * t2025) * pkin(6)) * t1922 - (pkin(6) * t2040 + t1848 * t1878) * t2400 + pkin(6) * (t1791 * t1875 - t1878 * t2043);
t2235 = t1710 * t2393;
t2037 = t1878 * t2145;
t1807 = t1875 * t1894 - t1875 + t2037;
t1711 = (-t1878 * t2121 * t2346 + t1807 * t2248) * t1900 + (t1807 * t2151 - (t1797 * t1878 + t1875 * t2163) * t2400 + pkin(6) * (t1830 * t1875 - t1878 * t2025)) * t1922 - (-pkin(6) * t2037 + t1848 * t1875) * t2400 - (t1791 * t1878 + t1875 * t2043) * pkin(6);
t2234 = t1711 * t2393;
t1866 = t1885 + pkin(6);
t1858 = pkin(5) + t2404;
t2099 = t2416 * t1917 * t1858;
t1792 = t1866 * t2344 + t1916 * t2099;
t1859 = 0.2e1 * t1882 + pkin(1);
t1798 = t1859 * t2344 + t2099;
t2144 = t1907 * t2335;
t2039 = t1876 * t2144;
t1808 = -t1879 * t1894 + t1879 + t2039;
t1831 = -t1894 * t1882 + t1860;
t1849 = t1885 + t2245;
t2120 = -t1930 + t2360;
t2021 = t1926 * t2120;
t2024 = t2144 * t1882;
t2160 = t1858 * t2350;
t2042 = t1908 * t2160;
t2149 = t1916 * t2360;
t2161 = t1858 * t2354;
t1712 = (t1876 * t1907 * t2021 + 0.2e1 * t1808 * t2302) * t1903 + (-t1808 * t2149 + (t1798 * t1876 - t1879 * t2161) * t2399 + (t1831 * t1879 + t1876 * t2024) * pkin(6)) * t1925 - (pkin(6) * t2039 + t1849 * t1879) * t2399 + pkin(6) * (t1792 * t1876 - t1879 * t2042);
t2233 = t1712 * t2391;
t2036 = t1879 * t2144;
t1809 = t1876 * t1894 - t1876 + t2036;
t1713 = (-t1879 * t2120 * t2344 + t1809 * t2247) * t1903 + (t1809 * t2149 - (t1798 * t1879 + t1876 * t2161) * t2399 + pkin(6) * (t1831 * t1876 - t1879 * t2024)) * t1925 - (-pkin(6) * t2036 + t1849 * t1876) * t2399 - (t1792 * t1879 + t1876 * t2042) * pkin(6);
t2232 = t1713 * t2391;
t1867 = t1886 + pkin(6);
t1862 = pkin(5) + t2402;
t2098 = t2416 * t1920 * t1862;
t1793 = t1867 * t2342 + t1919 * t2098;
t1863 = 0.2e1 * t1883 + pkin(1);
t1799 = t1863 * t2342 + t2098;
t2143 = t1907 * t2332;
t2038 = t1877 * t2143;
t1810 = -t1880 * t1894 + t1880 + t2038;
t1832 = -t1894 * t1883 + t1864;
t1850 = t1886 + t2245;
t2119 = -t1930 + t2357;
t2020 = t1929 * t2119;
t2023 = t2143 * t1883;
t2158 = t1862 * t2348;
t2041 = t1908 * t2158;
t2147 = t1919 * t2357;
t2159 = t1862 * t2354;
t1714 = (t1877 * t1907 * t2020 + 0.2e1 * t1810 * t2301) * t1906 + (-t1810 * t2147 + (t1799 * t1877 - t1880 * t2159) * t2398 + (t1832 * t1880 + t1877 * t2023) * pkin(6)) * t1928 - (pkin(6) * t2038 + t1880 * t1850) * t2398 + pkin(6) * (t1793 * t1877 - t1880 * t2041);
t2231 = t1714 * t2389;
t2035 = t1880 * t2143;
t1811 = t1877 * t1894 - t1877 + t2035;
t1715 = (-t1880 * t2119 * t2342 + t1811 * t2246) * t1906 + (t1811 * t2147 - (t1799 * t1880 + t1877 * t2159) * t2398 + pkin(6) * (t1832 * t1877 - t1880 * t2023)) * t1928 - (-pkin(6) * t2035 + t1850 * t1877) * t2398 - (t1793 * t1880 + t1877 * t2041) * pkin(6);
t2230 = t1715 * t2389;
t1740 = ((-pkin(6) * t2136 - t1845 * t1921) * t2346 + (-t1856 * t1921 - t1922 * t2410) * t1914) * t1908 + t1921 * t1914 * t2028 + (t2414 * t1913 - t2115) * t2327 + ((pkin(6) * t2310 - t2127 * t1913) * t1894 + t1898 * t2405 - t1853 * t1913) * t1923;
t1734 = t1740 * t2384;
t1758 = t1782 * t2383;
t1726 = t1758 + t1734;
t2229 = t1726 * t2384;
t1741 = ((-pkin(6) * t2135 - t1846 * t1924) * t2344 + (-t1860 * t1924 - t1925 * t2409) * t1917) * t1908 + t1924 * t1917 * t2027 + (t2414 * t1916 - t2114) * t2321 + ((pkin(6) * t2308 - t1916 * t2126) * t1894 + t1901 * t2403 - t1857 * t1916) * t1926;
t1735 = t1741 * t2378;
t1759 = t1783 * t2377;
t1728 = t1759 + t1735;
t2228 = t1728 * t2378;
t1742 = ((-pkin(6) * t2134 - t1847 * t1927) * t2342 + (-t1864 * t1927 - t1928 * t2408) * t1920) * t1908 + t1927 * t1920 * t2026 + (t2414 * t1919 - t2113) * t2315 + ((pkin(6) * t2306 - t1919 * t2125) * t1894 + t1904 * t2401 - t1861 * t1919) * t1929;
t1736 = t1742 * t2372;
t1760 = t1784 * t2371;
t1730 = t1760 + t1736;
t2227 = t1730 * t2372;
t1755 = (t1908 * t1923 * t2248 + t1914 * t2121) * t1900 + ((-t1854 * t2346 + t1855 * t1914) * t2400 + t2022 * t2339) * t1922 + pkin(6) * (t1865 * t1914 + (pkin(2) * t2331 - t2162) * t1923);
t2097 = t1755 * t1779 * t2341;
t2016 = t1899 * t2097;
t2175 = t1785 * t2347;
t1731 = t1782 * t2175 - t2016;
t2226 = t1731 * t2393;
t2225 = t1731 * t2361;
t1756 = (t1908 * t1926 * t2247 + t1917 * t2120) * t1903 + ((-t1858 * t2344 + t1859 * t1917) * t2399 + t2021 * t2336) * t1925 + pkin(6) * (t1866 * t1917 + (pkin(2) * t2330 - t2160) * t1926);
t2096 = t1756 * t1780 * t2341;
t2015 = t1902 * t2096;
t2171 = t1787 * t2345;
t1732 = t1783 * t2171 - t2015;
t2224 = t1732 * t2391;
t2223 = t1732 * t2358;
t1757 = (t1908 * t1929 * t2246 + t1920 * t2119) * t1906 + ((-t1862 * t2342 + t1863 * t1920) * t2398 + t2020 * t2333) * t1928 + pkin(6) * (t1867 * t1920 + (pkin(2) * t2329 - t2158) * t1929);
t2095 = t1757 * t1781 * t2341;
t2014 = t1905 * t2095;
t2167 = t1789 * t2343;
t1733 = t1784 * t2167 - t2014;
t2222 = t1733 * t2389;
t2221 = t1733 * t2355;
t2220 = t1740 * t2361;
t2219 = t1741 * t2358;
t2218 = t1742 * t2355;
t2217 = t1755 * t2393;
t2216 = t1756 * t2391;
t2215 = t1757 * t2389;
t2214 = t1786 * t2434;
t2213 = t1770 * t2382;
t2212 = t1770 * t2381;
t2211 = t1770 * t2379;
t2210 = t1771 * t2382;
t2209 = t1771 * t2381;
t2208 = t1771 * t2379;
t2207 = t1788 * t2433;
t2206 = t1772 * t2376;
t2205 = t1772 * t2375;
t2204 = t1772 * t2373;
t2203 = t1773 * t2376;
t2202 = t1773 * t2375;
t2201 = t1773 * t2373;
t2200 = t1790 * t2432;
t2199 = t1774 * t2370;
t2198 = t1774 * t2369;
t2197 = t1774 * t2367;
t2196 = t1775 * t2370;
t2195 = t1775 * t2369;
t2194 = t1775 * t2367;
t2193 = t1779 * t2384;
t2192 = t1899 * t2392;
t2191 = t1780 * t2378;
t2190 = t1902 * t2390;
t2189 = t1781 * t2372;
t2188 = t1905 * t2388;
t2187 = t1782 * t2382;
t2186 = t1782 * t2381;
t2185 = t1782 * t2380;
t2184 = t1782 * t2379;
t2183 = t1783 * t2376;
t2182 = t1783 * t2375;
t2181 = t1783 * t2374;
t2180 = t1783 * t2373;
t2179 = t1784 * t2370;
t2178 = t1784 * t2369;
t2177 = t1784 * t2368;
t2176 = t1784 * t2367;
t2174 = t1824 * t2379;
t1827 = t2260 + t2278;
t2173 = t1827 * t2379;
t2172 = t1786 * t2323;
t2170 = t1825 * t2373;
t1828 = t2259 + t2277;
t2169 = t1828 * t2373;
t2168 = t1788 * t2317;
t2166 = t1826 * t2367;
t1829 = t2258 + t2276;
t2165 = t1829 * t2367;
t2164 = t1790 * t2311;
t2150 = t1899 * t2353;
t2148 = t1902 * t2351;
t2146 = t1905 * t2349;
t2142 = t1907 * t2328;
t2141 = t1907 * t2324;
t2140 = t1907 * t2322;
t2139 = t1907 * t2318;
t2138 = t1907 * t2316;
t2137 = t1907 * t2312;
t2133 = t2382 * t2419;
t2132 = t2376 * t2419;
t2131 = t2370 * t2419;
t2130 = 0.2e1 * t2263;
t2129 = 0.2e1 * t2262;
t2128 = 0.2e1 * t2261;
t2124 = t1872 * t1894 - t1900;
t2123 = t1873 * t1894 - t1903;
t2122 = t1874 * t1894 - t1906;
t2103 = (0.2e1 * t1898 - 0.1e1) * t2352;
t2102 = (0.2e1 * t1901 - 0.1e1) * t2350;
t2101 = (0.2e1 * t1904 - 0.1e1) * t2348;
t2094 = t1770 * t2174;
t2093 = t1770 * t2173;
t2092 = t1771 * t2174;
t2091 = t1771 * t2173;
t2090 = t1772 * t2170;
t2089 = t1772 * t2169;
t2088 = t1773 * t2170;
t2087 = t1773 * t2169;
t2086 = t1774 * t2166;
t2085 = t1774 * t2165;
t2084 = t1775 * t2166;
t2083 = t1775 * t2165;
t1812 = t1827 * t1912 + t1921 * t2414;
t2082 = t1812 * t2193;
t1815 = (pkin(1) * t1912 - pkin(5) * t2310) * t1907 - t2111;
t2081 = t1815 * t2193;
t2080 = t1812 * t2192;
t2079 = t1815 * t2192;
t1818 = t2142 - t2331;
t2078 = t1818 * t2192;
t1820 = t2141 + t2340;
t2077 = t1820 * t2192;
t2076 = t1922 * t2192;
t1813 = t1828 * t1915 + t1924 * t2414;
t2075 = t1813 * t2191;
t1816 = (pkin(1) * t1915 - pkin(5) * t2308) * t1907 - t2112;
t2074 = t1816 * t2191;
t2073 = t1813 * t2190;
t2072 = t1816 * t2190;
t1819 = t2140 - t2330;
t2071 = t1819 * t2190;
t1821 = t2139 + t2337;
t2070 = t1821 * t2190;
t2069 = t1925 * t2190;
t1814 = t1829 * t1918 + t1927 * t2414;
t2068 = t1814 * t2189;
t1817 = (pkin(1) * t1918 - pkin(5) * t2306) * t1907 - t2106;
t2067 = t1817 * t2189;
t2066 = t1814 * t2188;
t2065 = t1817 * t2188;
t1822 = t2138 - t2329;
t2064 = t1822 * t2188;
t1823 = t2137 + t2334;
t2063 = t1823 * t2188;
t2062 = t1928 * t2188;
t2061 = t1782 * t2174;
t2060 = t1782 * t2173;
t2059 = t1782 * t2172;
t2058 = t1783 * t2170;
t2057 = t1783 * t2169;
t2056 = t1783 * t2168;
t2055 = t1784 * t2166;
t2054 = t1784 * t2165;
t2053 = t1784 * t2164;
t2052 = t1785 * t2142;
t2051 = t1785 * t2141;
t2050 = t1912 * t2174;
t2049 = t1787 * t2140;
t2048 = t1787 * t2139;
t2047 = t1915 * t2170;
t2046 = t1789 * t2138;
t2045 = t1789 * t2137;
t2044 = t1918 * t2166;
t2034 = t1785 * t2362 / 0.2e1;
t2033 = t1787 * t2359 / 0.2e1;
t2032 = t1789 * t2356 / 0.2e1;
t2031 = 0.2e1 * t1912 * t2141;
t2030 = 0.2e1 * t1915 * t2139;
t2029 = 0.2e1 * t1918 * t2137;
t2019 = t1785 * t2103;
t2018 = t1787 * t2102;
t2017 = t1789 * t2101;
t2013 = t1770 * t2082;
t2012 = t1770 * t2081;
t2011 = t1770 * t2050;
t2010 = t1771 * t2082;
t2009 = t1771 * t2081;
t2008 = t1771 * t2050;
t2007 = t1772 * t2075;
t2006 = t1772 * t2074;
t2005 = t1772 * t2047;
t2004 = t1773 * t2075;
t2003 = t1773 * t2074;
t2002 = t1773 * t2047;
t2001 = t1774 * t2068;
t2000 = t1774 * t2067;
t1999 = t1774 * t2044;
t1998 = t1775 * t2068;
t1997 = t1775 * t2067;
t1996 = t1775 * t2044;
t1995 = t1782 * t2082;
t1994 = t1782 * t2081;
t1993 = t1907 * t2076;
t1992 = t1783 * t2075;
t1991 = t1783 * t2074;
t1990 = t1907 * t2069;
t1989 = t1784 * t2068;
t1988 = t1784 * t2067;
t1987 = t1907 * t2062;
t1986 = t1782 * t2050;
t1985 = t1783 * t2047;
t1984 = t1784 * t2044;
t1983 = t2192 * t2278;
t1982 = t2190 * t2277;
t1981 = t2188 * t2276;
t1743 = t1770 * t2383;
t1659 = 0.2e1 * t1743 + t1692;
t1977 = t1770 * (t1659 * t1785 + t1704 * t2379);
t1744 = t1771 * t2383;
t1661 = 0.2e1 * t1744 + t1695;
t1976 = t1771 * (t1661 * t1785 + t1707 * t2379);
t1745 = t1772 * t2377;
t1663 = 0.2e1 * t1745 + t1693;
t1975 = t1772 * (t1663 * t1787 + t1705 * t2373);
t1746 = t1773 * t2377;
t1665 = 0.2e1 * t1746 + t1696;
t1974 = t1773 * (t1665 * t1787 + t1708 * t2373);
t1747 = t1774 * t2371;
t1667 = 0.2e1 * t1747 + t1694;
t1973 = t1774 * (t1667 * t1789 + t1706 * t2367);
t1748 = t1775 * t2371;
t1669 = 0.2e1 * t1748 + t1697;
t1972 = t1775 * (t1669 * t1789 + t1709 * t2367);
t1725 = 0.2e1 * t1758 + t1734;
t1971 = t1782 * (t1725 * t1785 + t1740 * t2379);
t1727 = 0.2e1 * t1759 + t1735;
t1970 = t1783 * (t1727 * t1787 + t1741 * t2373);
t1729 = 0.2e1 * t1760 + t1736;
t1969 = t1784 * (t1729 * t1789 + t1742 * t2367);
t1965 = t1912 * t2288 + t2415 * t2324;
t1964 = t1915 * t2288 + t2415 * t2318;
t1963 = t1918 * t2288 + t2415 * t2312;
t1962 = t1921 * t2288 - t2415 * t2328;
t1961 = t1924 * t2288 - t2415 * t2322;
t1960 = t1927 * t2288 - t2415 * t2316;
t1959 = t1659 * t1750 + t1707 * t2211;
t1958 = t1659 * t1761 + t1740 * t2211;
t1957 = t1661 * t1749 + t1704 * t2208;
t1956 = t1661 * t1761 + t1740 * t2208;
t1955 = t1663 * t1752 + t1708 * t2204;
t1954 = t1663 * t1762 + t1741 * t2204;
t1953 = t1665 * t1751 + t1705 * t2201;
t1952 = t1665 * t1762 + t1741 * t2201;
t1951 = t1667 * t1754 + t1709 * t2197;
t1950 = t1667 * t1763 + t1742 * t2197;
t1949 = t1669 * t1753 + t1706 * t2194;
t1948 = t1669 * t1763 + t1742 * t2194;
t1947 = t1704 * t2184 + t1725 * t1749;
t1946 = t1705 * t2180 + t1727 * t1751;
t1945 = t1706 * t2176 + t1729 * t1753;
t1944 = t1707 * t2184 + t1725 * t1750;
t1943 = t1708 * t2180 + t1727 * t1752;
t1942 = t1709 * t2176 + t1729 * t1754;
t1941 = -(t1704 * t2266 + t1710 * t2284) * t2431 - (-t1704 * t2281 + t1770 * t2130) * t2383 + t1770 * t2133;
t1940 = -(t1705 * t2265 + t1712 * t2283) * t2430 - (-t1705 * t2280 + t1772 * t2129) * t2377 + t1772 * t2132;
t1939 = -(t1706 * t2264 + t1714 * t2282) * t2429 - (-t1706 * t2279 + t1774 * t2128) * t2371 + t1774 * t2131;
t1938 = -(t1707 * t2266 + t1711 * t2284) * t2431 - (-t1707 * t2281 + t1771 * t2130) * t2383 + t1771 * t2133;
t1937 = -(t1708 * t2265 + t1713 * t2283) * t2430 - (-t1708 * t2280 + t1773 * t2129) * t2377 + t1773 * t2132;
t1936 = -(t1709 * t2264 + t1715 * t2282) * t2429 - (-t1709 * t2279 + t1775 * t2128) * t2371 + t1775 * t2131;
t1935 = -(pkin(1) * t2097 + t1740 * t2266) * t2431 - (-t1740 * t2281 + t1782 * t2130) * t2383 + t1782 * t2133;
t1934 = -(pkin(1) * t2096 + t1741 * t2265) * t2430 - (-t1741 * t2280 + t1783 * t2129) * t2377 + t1783 * t2132;
t1933 = -(pkin(1) * t2095 + t1742 * t2264) * t2429 - (-t1742 * t2279 + t1784 * t2128) * t2371 + t1784 * t2131;
t1778 = t1784 ^ 2;
t1777 = t1783 ^ 2;
t1776 = t1782 ^ 2;
t1769 = t1775 ^ 2;
t1768 = t1774 ^ 2;
t1767 = t1773 ^ 2;
t1766 = t1772 ^ 2;
t1765 = t1771 ^ 2;
t1764 = t1770 ^ 2;
t1724 = t1760 + t1736 / 0.2e1;
t1723 = t1759 + t1735 / 0.2e1;
t1722 = t1758 + t1734 / 0.2e1;
t1721 = t1742 * t2032 + t1763;
t1720 = t1741 * t2033 + t1762;
t1719 = t1740 * t2034 + t1761;
t1688 = t1730 * t1918 + t1784 * t2045;
t1687 = t1728 * t1915 + t1783 * t2048;
t1686 = t1726 * t1912 + t1782 * t2051;
t1685 = t1730 * t1927 - t1784 * t2046;
t1684 = t1728 * t1924 - t1783 * t2049;
t1683 = t1726 * t1921 - t1782 * t2052;
t1682 = t1763 + (-t1742 * t2356 + t1784 * t2122) * t1789;
t1681 = t1762 + (-t1741 * t2359 + t1783 * t2123) * t1787;
t1680 = t1761 + (-t1740 * t2362 + t1782 * t2124) * t1785;
t1679 = -t1715 * t2188 + t1775 * t2167;
t1678 = -t1714 * t2188 + t1774 * t2167;
t1677 = -t1713 * t2190 + t1773 * t2171;
t1676 = -t1712 * t2190 + t1772 * t2171;
t1675 = -t1711 * t2192 + t1771 * t2175;
t1674 = -t1710 * t2192 + t1770 * t2175;
t1673 = t1730 * t2285 + t1784 * t2017;
t1672 = t1726 * t2287 + t1782 * t2019;
t1671 = t1728 * t2286 + t1783 * t2018;
t1670 = t1748 + t1697;
t1668 = t1747 + t1694;
t1666 = t1746 + t1696;
t1664 = t1745 + t1693;
t1662 = t1744 + t1695;
t1660 = t1743 + t1692;
t1658 = t1748 + t1697 / 0.2e1;
t1657 = t1747 + t1694 / 0.2e1;
t1656 = t1746 + t1696 / 0.2e1;
t1655 = t1745 + t1693 / 0.2e1;
t1654 = t1744 + t1695 / 0.2e1;
t1653 = t1743 + t1692 / 0.2e1;
t1652 = t1709 * t2032 + t1754;
t1651 = t1708 * t2033 + t1752;
t1650 = t1707 * t2034 + t1750;
t1649 = t1706 * t2032 + t1753;
t1648 = t1705 * t2033 + t1751;
t1647 = t1704 * t2034 + t1749;
t1640 = t1771 * t2387 + t1773 * t2386 + t1775 * t2385;
t1639 = t1770 * t2387 + t1772 * t2386 + t1774 * t2385;
t1638 = t1757 * t1907 * t1981 + (t1757 * t1893 * t2062 + t1784 * t2289 - 0.2e1 * t1763) * pkin(5);
t1637 = t1756 * t1907 * t1982 + (t1756 * t1893 * t2069 + t1783 * t2290 - 0.2e1 * t1762) * pkin(5);
t1636 = t1755 * t1907 * t1983 + (t1755 * t1893 * t2076 + t1782 * t2291 - 0.2e1 * t1761) * pkin(5);
t1635 = (t1771 * t2185 + t1773 * t2181 + t1775 * t2177) * t1893;
t1634 = (t1770 * t2185 + t1772 * t2181 + t1774 * t2177) * t1893;
t1633 = (t1771 * t2059 + t1773 * t2056 + t1775 * t2053) * t2418;
t1632 = (t1770 * t2059 + t1772 * t2056 + t1774 * t2053) * t2418;
t1631 = -t1721 * t1886 - t1724 * t2258;
t1630 = t1721 * t2411 - t1724 * t2261;
t1629 = t1719 * t2413 - t1722 * t2263;
t1628 = -t1720 * t1885 - t1723 * t2259;
t1627 = -t1719 * t1884 - t1722 * t2260;
t1626 = t1720 * t2412 - t1723 * t2262;
t1625 = t1670 * t1918 + t1775 * t2045;
t1624 = t1668 * t1918 + t1774 * t2045;
t1623 = t1666 * t1915 + t1773 * t2048;
t1622 = t1664 * t1915 + t1772 * t2048;
t1621 = t1662 * t1912 + t1771 * t2051;
t1620 = t1660 * t1912 + t1770 * t2051;
t1619 = t1670 * t1927 - t1775 * t2046;
t1618 = t1668 * t1927 - t1774 * t2046;
t1617 = t1666 * t1924 - t1773 * t2049;
t1616 = t1664 * t1924 - t1772 * t2049;
t1615 = t1662 * t1921 - t1771 * t2052;
t1614 = t1660 * t1921 - t1770 * t2052;
t1613 = t2200 + t2207 + t2214;
t1612 = (t1895 * t2214 + t1896 * t2207 + t1897 * t2200) * t1893;
t1611 = (t2164 * t2432 + t2168 * t2433 + t2172 * t2434) * t2418;
t1610 = -t1822 * t2014 + (-t1742 * t1907 + t1784 * t1960) * t2370;
t1609 = -t1819 * t2015 + (-t1741 * t1907 + t1783 * t1961) * t2376;
t1608 = -t1818 * t2016 + (-t1740 * t1907 + t1782 * t1962) * t2382;
t1607 = t1823 * t2014 + (-t1742 * t2146 + t1784 * t1963) * t2370;
t1606 = t1821 * t2015 + (-t1741 * t2148 + t1783 * t1964) * t2376;
t1605 = t1820 * t2016 + (-t1740 * t2150 + t1782 * t1965) * t2382;
t1598 = t1754 + (-t1709 * t2356 + t1775 * t2122) * t1789;
t1597 = t1753 + (-t1706 * t2356 + t1774 * t2122) * t1789;
t1596 = t1752 + (-t1708 * t2359 + t1773 * t2123) * t1787;
t1595 = t1751 + (-t1705 * t2359 + t1772 * t2123) * t1787;
t1594 = t1750 + (-t1707 * t2362 + t1771 * t2124) * t1785;
t1593 = t1749 + (-t1704 * t2362 + t1770 * t2124) * t1785;
t1592 = t1670 * t2285 + t1775 * t2017;
t1591 = t1668 * t2285 + t1774 * t2017;
t1590 = t1662 * t2287 + t1771 * t2019;
t1589 = t1660 * t2287 + t1770 * t2019;
t1588 = t1666 * t2286 + t1773 * t2018;
t1587 = t1664 * t2286 + t1772 * t2018;
t1586 = t1715 * t1981 + (t1715 * t1987 + t1775 * t2289 - 0.2e1 * t1754) * pkin(5);
t1585 = t1714 * t1981 + (t1714 * t1987 + t1774 * t2289 - 0.2e1 * t1753) * pkin(5);
t1584 = t1713 * t1982 + (t1713 * t1990 + t1773 * t2290 - 0.2e1 * t1752) * pkin(5);
t1583 = t1712 * t1982 + (t1712 * t1990 + t1772 * t2290 - 0.2e1 * t1751) * pkin(5);
t1582 = t1711 * t1983 + (t1711 * t1993 + t1771 * t2291 - 0.2e1 * t1750) * pkin(5);
t1581 = t1710 * t1983 + (t1710 * t1993 + t1770 * t2291 - 0.2e1 * t1749) * pkin(5);
t1580 = -t1652 * t1886 - t1658 * t2258;
t1579 = t1652 * t2411 - t1658 * t2261;
t1578 = -t1649 * t1886 - t1657 * t2258;
t1577 = t1649 * t2411 - t1657 * t2261;
t1576 = t1650 * t2413 - t1654 * t2263;
t1575 = t1647 * t2413 - t1653 * t2263;
t1574 = -t1651 * t1885 - t1656 * t2259;
t1573 = -t1648 * t1885 - t1655 * t2259;
t1572 = -t1650 * t1884 - t1654 * t2260;
t1571 = -t1647 * t1884 - t1653 * t2260;
t1570 = t1651 * t2412 - t1656 * t2262;
t1569 = t1648 * t2412 - t1655 * t2262;
t1568 = t1682 * t1904 + t1724 * t2029 + t1730 * t1908;
t1567 = t1681 * t1901 + t1723 * t2030 + t1728 * t1908;
t1566 = t1680 * t1898 + t1722 * t2031 + t1726 * t1908;
t1565 = -t1681 * t2320 + t1723 * t2102;
t1564 = -t1680 * t2326 + t1722 * t2103;
t1563 = -t1682 * t2314 + t1724 * t2101;
t1562 = -t1715 * t2064 + (-t1709 * t1907 + t1775 * t1960) * t2370;
t1561 = -t1714 * t2064 + (-t1706 * t1907 + t1774 * t1960) * t2370;
t1560 = -t1713 * t2071 + (-t1708 * t1907 + t1773 * t1961) * t2376;
t1559 = -t1712 * t2071 + (-t1705 * t1907 + t1772 * t1961) * t2376;
t1558 = -t1711 * t2078 + (-t1707 * t1907 + t1771 * t1962) * t2382;
t1557 = -t1710 * t2078 + (-t1704 * t1907 + t1770 * t1962) * t2382;
t1556 = t1715 * t2063 + (-t1709 * t2146 + t1775 * t1963) * t2370;
t1555 = t1714 * t2063 + (-t1706 * t2146 + t1774 * t1963) * t2370;
t1554 = t1713 * t2070 + (-t1708 * t2148 + t1773 * t1964) * t2376;
t1553 = t1712 * t2070 + (-t1705 * t2148 + t1772 * t1964) * t2376;
t1552 = t1711 * t2077 + (-t1707 * t2150 + t1771 * t1965) * t2382;
t1551 = t1710 * t2077 + (-t1704 * t2150 + t1770 * t1965) * t2382;
t1550 = -t1918 * t1638 + t1927 * t1933;
t1549 = -t1927 * t1638 - t1918 * t1933;
t1548 = -t1915 * t1637 + t1924 * t1934;
t1547 = -t1924 * t1637 - t1915 * t1934;
t1546 = -t1912 * t1636 + t1921 * t1935;
t1545 = -t1921 * t1636 - t1912 * t1935;
t1544 = t1598 * t1904 + t1658 * t2029 + t1670 * t1908;
t1543 = t1597 * t1904 + t1657 * t2029 + t1668 * t1908;
t1542 = t1596 * t1901 + t1656 * t2030 + t1666 * t1908;
t1541 = t1595 * t1901 + t1655 * t2030 + t1664 * t1908;
t1540 = t1594 * t1898 + t1654 * t2031 + t1662 * t1908;
t1539 = t1593 * t1898 + t1653 * t2031 + t1660 * t1908;
t1538 = -t1596 * t2320 + t1656 * t2102;
t1537 = -t1595 * t2320 + t1655 * t2102;
t1536 = -t1594 * t2326 + t1654 * t2103;
t1535 = -t1593 * t2326 + t1653 * t2103;
t1534 = -t1598 * t2314 + t1658 * t2101;
t1533 = -t1597 * t2314 + t1657 * t2101;
t1532 = -t1918 * t1586 + t1927 * t1936;
t1531 = -t1927 * t1586 - t1918 * t1936;
t1530 = -t1918 * t1585 + t1927 * t1939;
t1529 = -t1927 * t1585 - t1918 * t1939;
t1528 = -t1915 * t1584 + t1924 * t1937;
t1527 = -t1924 * t1584 - t1915 * t1937;
t1526 = -t1915 * t1583 + t1924 * t1940;
t1525 = -t1924 * t1583 - t1915 * t1940;
t1524 = -t1912 * t1582 + t1921 * t1938;
t1523 = -t1921 * t1582 - t1912 * t1938;
t1522 = -t1912 * t1581 + t1921 * t1941;
t1521 = -t1921 * t1581 - t1912 * t1941;
t1 = [t1765 * t1786 + t1767 * t1788 + t1769 * t1790, 0, 0, (t1765 * t2380 + t1767 * t2374 + t1769 * t2368) * t1893, (t1765 * t2172 + t1767 * t2168 + t1769 * t2164) * t2418, (t1913 * t1976 + t1916 * t1974 + t1919 * t1972) * t1907, (t1922 * t1976 + t1925 * t1974 + t1928 * t1972) * t1907, t1662 * t1695 + t1666 * t1696 + t1670 * t1697 + (t1662 * t1750 + t1666 * t1752 + t1670 * t1754) * t1908, t1570 * t2297 + t1576 * t2299 + t1579 * t2295 + t1707 * t2092 - t1708 * t2088 - t1709 * t2084, t1572 * t2299 + t1574 * t2297 + t1580 * t2295 - t1707 * t2091 - t1708 * t2087 - t1709 * t2083, (t1544 * t1775 + t1625 * t2236) * t1789 + (t1542 * t1773 + t1623 * t2237) * t1787 + (t1540 * t1771 + t1621 * t2238) * t1785, t1534 * t2295 + t1536 * t2299 + t1538 * t2297 + t1588 * t1696 + t1590 * t1695 + t1592 * t1697, (t1775 * t1556 - t1679 * t2236) * t1789 + (t1773 * t1554 - t1677 * t2237) * t1787 + (t1771 * t1552 - t1675 * t2238) * t1785 + (t1621 * t2234 + t1623 * t2232 + t1625 * t2230) * t1932, (t1562 * t1775 - t1679 * t1709) * t1789 + (t1560 * t1773 - t1677 * t1708) * t1787 + (t1558 * t1771 - t1675 * t1707) * t1785 + (t1615 * t2234 + t1617 * t2232 + t1619 * t2230) * t1932, (-t1675 * t2234 - t1677 * t2232 - t1679 * t2230) * t1932 + (t1675 * t2210 + t1677 * t2203 + t1679 * t2196) * t1907, (-t1709 * t2369 + (-t1715 * t2066 + t1532) * t1789) * t1775 + (-t1708 * t2375 + (-t1713 * t2073 + t1528) * t1787) * t1773 + (t1707 * t2381 + (-t1711 * t2080 + t1524) * t1785) * t1771, (t1709 * t2044 + (t1715 * t2065 + t1531) * t1789) * t1775 + (t1708 * t2047 + (t1713 * t2072 + t1527) * t1787) * t1773 + (-t1707 * t2050 + (t1711 * t2079 + t1523) * t1785) * t1771, 1; t1613, 0, 0, t1612, t1611, (t1913 * t1959 + t1916 * t1955 + t1919 * t1951) * t1907, (t1922 * t1959 + t1925 * t1955 + t1928 * t1951) * t1907, t1660 * t1695 + t1664 * t1696 + t1668 * t1697 + (t1660 * t1750 + t1664 * t1752 + t1668 * t1754) * t1908, t1569 * t2297 + t1575 * t2299 + t1577 * t2295 + t1707 * t2094 - t1708 * t2090 - t1709 * t2086, t1571 * t2299 + t1573 * t2297 + t1578 * t2295 - t1707 * t2093 - t1708 * t2089 - t1709 * t2085, (t1543 * t1775 + t1624 * t2236) * t1789 + (t1541 * t1773 + t1622 * t2237) * t1787 + (t1539 * t1771 + t1620 * t2238) * t1785, t1533 * t2295 + t1535 * t2299 + t1537 * t2297 + t1587 * t1696 + t1589 * t1695 + t1591 * t1697, (t1775 * t1555 - t1678 * t2236) * t1789 + (t1773 * t1553 - t1676 * t2237) * t1787 + (t1771 * t1551 - t1674 * t2238) * t1785 + (t1620 * t2234 + t1622 * t2232 + t1624 * t2230) * t1932, (t1561 * t1775 - t1678 * t1709) * t1789 + (t1559 * t1773 - t1676 * t1708) * t1787 + (t1557 * t1771 - t1674 * t1707) * t1785 + (t1614 * t2234 + t1616 * t2232 + t1618 * t2230) * t1932, (-t1674 * t2234 - t1676 * t2232 - t1678 * t2230) * t1932 + (t1674 * t2210 + t1676 * t2203 + t1678 * t2196) * t1907, t1707 * t2212 - t1708 * t2205 - t1709 * t2198 + t1522 * t1750 + t1526 * t1752 + t1530 * t1754 + (-t1711 * t2013 - t1713 * t2007 - t1715 * t2001) * t1932, -t1707 * t2011 + t1708 * t2005 + t1709 * t1999 + t1521 * t1750 + t1525 * t1752 + t1529 * t1754 + (t1711 * t2012 + t1713 * t2006 + t1715 * t2000) * t1932, 0; t1640, 0, 0, t1635, t1633, (t1913 * t1944 + t1916 * t1943 + t1919 * t1942) * t1907, (t1922 * t1944 + t1925 * t1943 + t1928 * t1942) * t1907, t1707 * t2229 + t1708 * t2228 + t1709 * t2227 + (t1726 * t1750 + t1728 * t1752 + t1730 * t1754) * t1908, t1626 * t2297 + t1629 * t2299 + t1630 * t2295 + t1707 * t2061 - t1708 * t2058 - t1709 * t2055, t1627 * t2299 + t1628 * t2297 + t1631 * t2295 - t1707 * t2060 - t1708 * t2057 - t1709 * t2054, (t1568 * t1775 + t1688 * t2236) * t1789 + (t1567 * t1773 + t1687 * t2237) * t1787 + (t1566 * t1771 + t1686 * t2238) * t1785, t1563 * t2295 + t1564 * t2299 + t1565 * t2297 + t1671 * t1696 + t1672 * t1695 + t1673 * t1697, (t1775 * t1607 - t1709 * t2221) * t1789 + (t1773 * t1606 - t1708 * t2223) * t1787 + (t1771 * t1605 - t1707 * t2225) * t1785 + (t1686 * t2234 + t1687 * t2232 + t1688 * t2230) * t1932, (t1610 * t1775 - t1709 * t1733) * t1789 + (t1609 * t1773 - t1708 * t1732) * t1787 + (t1608 * t1771 - t1707 * t1731) * t1785 + (t1683 * t2234 + t1684 * t2232 + t1685 * t2230) * t1932, (-t1711 * t2226 - t1713 * t2224 - t1715 * t2222) * t1932 + (t1731 * t2210 + t1732 * t2203 + t1733 * t2196) * t1907, t1707 * t2186 - t1708 * t2182 - t1709 * t2178 + t1546 * t1750 + t1548 * t1752 + t1550 * t1754 + (-t1711 * t1995 - t1713 * t1992 - t1715 * t1989) * t1932, -t1707 * t1986 + t1708 * t1985 + t1709 * t1984 + t1545 * t1750 + t1547 * t1752 + t1549 * t1754 + (t1711 * t1994 + t1713 * t1991 + t1715 * t1988) * t1932, 0; t1613, 0, 0, t1612, t1611, (t1913 * t1957 + t1916 * t1953 + t1919 * t1949) * t1907, (t1922 * t1957 + t1925 * t1953 + t1928 * t1949) * t1907, t1662 * t1692 + t1666 * t1693 + t1670 * t1694 + (t1662 * t1749 + t1666 * t1751 + t1670 * t1753) * t1908, t1570 * t2298 + t1576 * t2300 + t1579 * t2296 + t1704 * t2092 - t1705 * t2088 - t1706 * t2084, t1572 * t2300 + t1574 * t2298 + t1580 * t2296 - t1704 * t2091 - t1705 * t2087 - t1706 * t2083, (t1544 * t1774 + t1625 * t2239) * t1789 + (t1542 * t1772 + t1623 * t2240) * t1787 + (t1540 * t1770 + t1621 * t2241) * t1785, t1534 * t2296 + t1536 * t2300 + t1538 * t2298 + t1588 * t1693 + t1590 * t1692 + t1592 * t1694, (t1774 * t1556 - t1679 * t2239) * t1789 + (t1772 * t1554 - t1677 * t2240) * t1787 + (t1770 * t1552 - t1675 * t2241) * t1785 + (t1621 * t2235 + t1623 * t2233 + t1625 * t2231) * t1932, (t1562 * t1774 - t1679 * t1706) * t1789 + (t1560 * t1772 - t1677 * t1705) * t1787 + (t1558 * t1770 - t1675 * t1704) * t1785 + (t1615 * t2235 + t1617 * t2233 + t1619 * t2231) * t1932, (-t1675 * t2235 - t1677 * t2233 - t1679 * t2231) * t1932 + (t1675 * t2213 + t1677 * t2206 + t1679 * t2199) * t1907, t1704 * t2209 - t1705 * t2202 - t1706 * t2195 + t1524 * t1749 + t1528 * t1751 + t1532 * t1753 + (-t1710 * t2010 - t1712 * t2004 - t1714 * t1998) * t1932, -t1704 * t2008 + t1705 * t2002 + t1706 * t1996 + t1523 * t1749 + t1527 * t1751 + t1531 * t1753 + (t1710 * t2009 + t1712 * t2003 + t1714 * t1997) * t1932, 0; t1764 * t1786 + t1766 * t1788 + t1768 * t1790, 0, 0, (t1764 * t2380 + t1766 * t2374 + t1768 * t2368) * t1893, (t1764 * t2172 + t1766 * t2168 + t1768 * t2164) * t2418, (t1913 * t1977 + t1916 * t1975 + t1919 * t1973) * t1907, (t1922 * t1977 + t1925 * t1975 + t1928 * t1973) * t1907, t1660 * t1692 + t1664 * t1693 + t1668 * t1694 + (t1660 * t1749 + t1664 * t1751 + t1668 * t1753) * t1908, t1569 * t2298 + t1575 * t2300 + t1577 * t2296 + t1704 * t2094 - t1705 * t2090 - t1706 * t2086, t1571 * t2300 + t1573 * t2298 + t1578 * t2296 - t1704 * t2093 - t1705 * t2089 - t1706 * t2085, (t1543 * t1774 + t1624 * t2239) * t1789 + (t1541 * t1772 + t1622 * t2240) * t1787 + (t1539 * t1770 + t1620 * t2241) * t1785, t1533 * t2296 + t1535 * t2300 + t1537 * t2298 + t1587 * t1693 + t1589 * t1692 + t1591 * t1694, (t1774 * t1555 - t1678 * t2239) * t1789 + (t1772 * t1553 - t1676 * t2240) * t1787 + (t1770 * t1551 - t1674 * t2241) * t1785 + (t1620 * t2235 + t1622 * t2233 + t1624 * t2231) * t1932, (t1561 * t1774 - t1678 * t1706) * t1789 + (t1559 * t1772 - t1676 * t1705) * t1787 + (t1557 * t1770 - t1674 * t1704) * t1785 + (t1614 * t2235 + t1616 * t2233 + t1618 * t2231) * t1932, (-t1674 * t2235 - t1676 * t2233 - t1678 * t2231) * t1932 + (t1674 * t2213 + t1676 * t2206 + t1678 * t2199) * t1907, (-t1706 * t2369 + (-t1714 * t2066 + t1530) * t1789) * t1774 + (-t1705 * t2375 + (-t1712 * t2073 + t1526) * t1787) * t1772 + (t1704 * t2381 + (-t1710 * t2080 + t1522) * t1785) * t1770, (t1706 * t2044 + (t1714 * t2065 + t1529) * t1789) * t1774 + (t1705 * t2047 + (t1712 * t2072 + t1525) * t1787) * t1772 + (-t1704 * t2050 + (t1710 * t2079 + t1521) * t1785) * t1770, 1; t1639, 0, 0, t1634, t1632, (t1913 * t1947 + t1916 * t1946 + t1919 * t1945) * t1907, (t1922 * t1947 + t1925 * t1946 + t1928 * t1945) * t1907, t1704 * t2229 + t1705 * t2228 + t1706 * t2227 + (t1726 * t1749 + t1728 * t1751 + t1730 * t1753) * t1908, t1626 * t2298 + t1629 * t2300 + t1630 * t2296 + t1704 * t2061 - t1705 * t2058 - t1706 * t2055, t1627 * t2300 + t1628 * t2298 + t1631 * t2296 - t1704 * t2060 - t1705 * t2057 - t1706 * t2054, (t1568 * t1774 + t1688 * t2239) * t1789 + (t1567 * t1772 + t1687 * t2240) * t1787 + (t1566 * t1770 + t1686 * t2241) * t1785, t1563 * t2296 + t1564 * t2300 + t1565 * t2298 + t1671 * t1693 + t1672 * t1692 + t1673 * t1694, (t1774 * t1607 - t1706 * t2221) * t1789 + (t1772 * t1606 - t1705 * t2223) * t1787 + (t1770 * t1605 - t1704 * t2225) * t1785 + (t1686 * t2235 + t1687 * t2233 + t1688 * t2231) * t1932, (t1610 * t1774 - t1706 * t1733) * t1789 + (t1609 * t1772 - t1705 * t1732) * t1787 + (t1608 * t1770 - t1704 * t1731) * t1785 + (t1683 * t2235 + t1684 * t2233 + t1685 * t2231) * t1932, (-t1710 * t2226 - t1712 * t2224 - t1714 * t2222) * t1932 + (t1731 * t2213 + t1732 * t2206 + t1733 * t2199) * t1907, t1704 * t2186 - t1705 * t2182 - t1706 * t2178 + t1546 * t1749 + t1548 * t1751 + t1550 * t1753 + (-t1710 * t1995 - t1712 * t1992 - t1714 * t1989) * t1932, -t1704 * t1986 + t1705 * t1985 + t1706 * t1984 + t1545 * t1749 + t1547 * t1751 + t1549 * t1753 + (t1710 * t1994 + t1712 * t1991 + t1714 * t1988) * t1932, 0; t1640, 0, 0, t1635, t1633, (t1913 * t1956 + t1916 * t1952 + t1919 * t1948) * t1907, (t1922 * t1956 + t1925 * t1952 + t1928 * t1948) * t1907, t1662 * t1734 + t1666 * t1735 + t1670 * t1736 + (t1662 * t1761 + t1666 * t1762 + t1670 * t1763) * t1908, t1570 * t2293 + t1576 * t2294 + t1579 * t2292 + t1740 * t2092 - t1741 * t2088 - t1742 * t2084, t1572 * t2294 + t1574 * t2293 + t1580 * t2292 - t1740 * t2091 - t1741 * t2087 - t1742 * t2083, (t1544 * t1784 + t1625 * t2218) * t1789 + (t1542 * t1783 + t1623 * t2219) * t1787 + (t1540 * t1782 + t1621 * t2220) * t1785, t1534 * t2292 + t1536 * t2294 + t1538 * t2293 + t1588 * t1735 + t1590 * t1734 + t1592 * t1736, (t1784 * t1556 - t1679 * t2218) * t1789 + (t1783 * t1554 - t1677 * t2219) * t1787 + (t1782 * t1552 - t1675 * t2220) * t1785 + (t1621 * t2217 + t1623 * t2216 + t1625 * t2215) * t2341, (t1562 * t1784 - t1679 * t1742) * t1789 + (t1560 * t1783 - t1677 * t1741) * t1787 + (t1558 * t1782 - t1675 * t1740) * t1785 + (t1615 * t2217 + t1617 * t2216 + t1619 * t2215) * t2341, (t1675 * t2187 + t1677 * t2183 + t1679 * t2179 + (-t1675 * t2217 - t1677 * t2216 - t1679 * t2215) * t1932) * t1907, t1740 * t2209 - t1741 * t2202 - t1742 * t2195 + t1524 * t1761 + t1528 * t1762 + t1532 * t1763 + (-t1755 * t2010 - t1756 * t2004 - t1757 * t1998) * t2341, -t1740 * t2008 + t1741 * t2002 + t1742 * t1996 + t1523 * t1761 + t1527 * t1762 + t1531 * t1763 + (t1755 * t2009 + t1756 * t2003 + t1757 * t1997) * t2341, 0; t1639, 0, 0, t1634, t1632, (t1913 * t1958 + t1916 * t1954 + t1919 * t1950) * t1907, (t1922 * t1958 + t1925 * t1954 + t1928 * t1950) * t1907, t1660 * t1734 + t1664 * t1735 + t1668 * t1736 + (t1660 * t1761 + t1664 * t1762 + t1668 * t1763) * t1908, t1569 * t2293 + t1575 * t2294 + t1577 * t2292 + t1740 * t2094 - t1741 * t2090 - t1742 * t2086, t1571 * t2294 + t1573 * t2293 + t1578 * t2292 - t1740 * t2093 - t1741 * t2089 - t1742 * t2085, (t1543 * t1784 + t1624 * t2218) * t1789 + (t1541 * t1783 + t1622 * t2219) * t1787 + (t1539 * t1782 + t1620 * t2220) * t1785, t1533 * t2292 + t1535 * t2294 + t1537 * t2293 + t1587 * t1735 + t1589 * t1734 + t1591 * t1736, (t1784 * t1555 - t1678 * t2218) * t1789 + (t1783 * t1553 - t1676 * t2219) * t1787 + (t1782 * t1551 - t1674 * t2220) * t1785 + (t1620 * t2217 + t1622 * t2216 + t1624 * t2215) * t2341, (t1561 * t1784 - t1678 * t1742) * t1789 + (t1559 * t1783 - t1676 * t1741) * t1787 + (t1557 * t1782 - t1674 * t1740) * t1785 + (t1614 * t2217 + t1616 * t2216 + t1618 * t2215) * t2341, (t1674 * t2187 + t1676 * t2183 + t1678 * t2179 + (-t1674 * t2217 - t1676 * t2216 - t1678 * t2215) * t1932) * t1907, t1740 * t2212 - t1741 * t2205 - t1742 * t2198 + t1522 * t1761 + t1526 * t1762 + t1530 * t1763 + (-t1755 * t2013 - t1756 * t2007 - t1757 * t2001) * t2341, -t1740 * t2011 + t1741 * t2005 + t1742 * t1999 + t1521 * t1761 + t1525 * t1762 + t1529 * t1763 + (t1755 * t2012 + t1756 * t2006 + t1757 * t2000) * t2341, 0; t1776 * t1786 + t1777 * t1788 + t1778 * t1790, 0, 0, (t1776 * t2380 + t1777 * t2374 + t1778 * t2368) * t1893, (t1776 * t2172 + t1777 * t2168 + t1778 * t2164) * t2418, (t1913 * t1971 + t1916 * t1970 + t1919 * t1969) * t1907, (t1922 * t1971 + t1925 * t1970 + t1928 * t1969) * t1907, t1726 * t1734 + t1728 * t1735 + t1730 * t1736 + (t1726 * t1761 + t1728 * t1762 + t1730 * t1763) * t1908, t1626 * t2293 + t1629 * t2294 + t1630 * t2292 + t1740 * t2061 - t1741 * t2058 - t1742 * t2055, t1627 * t2294 + t1628 * t2293 + t1631 * t2292 - t1740 * t2060 - t1741 * t2057 - t1742 * t2054, (t1568 * t1784 + t1688 * t2218) * t1789 + (t1567 * t1783 + t1687 * t2219) * t1787 + (t1566 * t1782 + t1686 * t2220) * t1785, t1563 * t2292 + t1564 * t2294 + t1565 * t2293 + t1671 * t1735 + t1672 * t1734 + t1673 * t1736, (t1784 * t1607 - t1733 * t2218) * t1789 + (t1783 * t1606 - t1732 * t2219) * t1787 + (t1782 * t1605 - t1731 * t2220) * t1785 + (t1686 * t2217 + t1687 * t2216 + t1688 * t2215) * t2341, (t1610 * t1784 - t1733 * t1742) * t1789 + (t1609 * t1783 - t1732 * t1741) * t1787 + (t1608 * t1782 - t1731 * t1740) * t1785 + (t1683 * t2217 + t1684 * t2216 + t1685 * t2215) * t2341, (t1731 * t2187 + t1732 * t2183 + t1733 * t2179 + (-t1731 * t2217 - t1732 * t2216 - t1733 * t2215) * t1932) * t1907, (-t1742 * t2369 + (-t1814 * t2014 + t1550) * t1789) * t1784 + (-t1741 * t2375 + (-t1813 * t2015 + t1548) * t1787) * t1783 + (t1740 * t2381 + (-t1812 * t2016 + t1546) * t1785) * t1782, (t1742 * t2044 + (t1817 * t2014 + t1549) * t1789) * t1784 + (t1741 * t2047 + (t1816 * t2015 + t1547) * t1787) * t1783 + (-t1740 * t2050 + (t1815 * t2016 + t1545) * t1785) * t1782, 1;];
tau_reg  = t1;
