% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRRRR10V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR10V1G3A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 23:28
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR10V1G3A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(6,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P3RRRRR10V1G3A0_invdyn_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 23:16:20
% EndTime: 2020-08-06 23:21:44
% DurationCPUTime: 338.12s
% Computational Cost: add. (2984712->2080), mult. (7524342->3528), div. (97632->23), fcn. (5963286->26), ass. (0->1306)
t5021 = legFrame(1,2);
t4959 = sin(t5021);
t4941 = t4959 * g(2);
t4962 = cos(t5021);
t5774 = t4962 * g(1);
t4889 = -t4941 + t5774;
t5033 = sin(qJ(1,1));
t4971 = g(3) * t5033;
t5042 = cos(qJ(1,1));
t5873 = t4889 * t5042 - t4971;
t5020 = legFrame(2,2);
t4958 = sin(t5020);
t4940 = t4958 * g(2);
t4961 = cos(t5020);
t5775 = t4961 * g(1);
t4888 = -t4940 + t5775;
t5030 = sin(qJ(1,2));
t4970 = g(3) * t5030;
t5039 = cos(qJ(1,2));
t5872 = t4888 * t5039 - t4970;
t5019 = legFrame(3,2);
t4957 = sin(t5019);
t4939 = t4957 * g(2);
t4960 = cos(t5019);
t5776 = t4960 * g(1);
t4887 = -t4939 + t5776;
t5027 = sin(qJ(1,3));
t4969 = g(3) * t5027;
t5036 = cos(qJ(1,3));
t5871 = t4887 * t5036 - t4969;
t4866 = t4887 * t5027;
t4972 = g(3) * t5036;
t4854 = t4866 + t4972;
t4869 = t4888 * t5030;
t4973 = g(3) * t5039;
t4856 = t4869 + t4973;
t4872 = t4889 * t5033;
t4974 = g(3) * t5042;
t4858 = t4872 + t4974;
t5032 = sin(qJ(2,1));
t4977 = pkin(1) * t5032;
t4935 = t4977 + pkin(6);
t5031 = sin(qJ(3,1));
t4967 = t5031 * pkin(2);
t4930 = t4967 + pkin(5);
t5012 = cos(pkin(3));
t4990 = t5012 ^ 2;
t5814 = t4990 - 0.1e1;
t5298 = t5814 * t5033 * t4930;
t5011 = sin(pkin(3));
t5632 = t5011 * t5042;
t4826 = t4935 * t5632 - t5032 * t5298;
t4968 = t5032 * pkin(6);
t4931 = 0.2e1 * t4968 + pkin(1);
t4832 = t4931 * t5632 - t5298;
t5621 = t5012 * t5033;
t5375 = t5011 * t5621;
t5243 = t4959 * t5375;
t4852 = -t4962 * t4990 + t4962 + t5243;
t4932 = t4968 + pkin(1);
t5670 = t4990 * t5032;
t5503 = pkin(6) * t5670;
t4883 = -t5503 + t4932;
t5481 = t5814 * pkin(6);
t4907 = t4977 - t5481;
t5041 = cos(qJ(2,1));
t5008 = t5041 ^ 2;
t5053 = pkin(6) ^ 2;
t5040 = cos(qJ(3,1));
t5004 = t5040 ^ 2;
t5056 = pkin(2) ^ 2;
t5655 = t5004 * t5056;
t5331 = -t5053 + t5655;
t5197 = t5331 * t5042;
t5200 = t5375 * t4968;
t5641 = t5011 * t5032;
t5397 = t4930 * t5641;
t5246 = t5012 * t5397;
t5378 = t5032 * t5655;
t5647 = t5011 * t5012;
t5398 = t4930 * t5647;
t5787 = pkin(2) * t5040;
t5567 = pkin(6) * t5787;
t5482 = 0.2e1 * t5567;
t4732 = (t4959 * t5011 * t5197 + t4852 * t5482) * t5008 + (-t4852 * t5378 + (t4832 * t4959 - t4962 * t5398) * t5787 + (t4883 * t4962 + t4959 * t5200) * pkin(6)) * t5041 - (pkin(6) * t5243 + t4907 * t4962) * t5787 + pkin(6) * (t4826 * t4959 - t4962 * t5246);
t5023 = xDDP(2);
t5005 = 0.1e1 / t5040;
t4948 = pkin(1) * t4967;
t4877 = t5011 * (-pkin(5) * t4968 + t4948);
t5802 = pkin(1) * t5012;
t4942 = pkin(6) * t5802;
t5603 = t5032 * t5040;
t5519 = pkin(2) * t5603;
t5634 = t5011 * t5040;
t5529 = pkin(2) * t5634;
t4811 = (-pkin(5) * t5529 + t4942) * t5041 - t5519 * t5802 + t4877;
t4804 = 0.1e1 / t4811;
t5057 = 0.1e1 / pkin(2);
t5716 = t4804 * t5057;
t5409 = t5005 * t5716;
t4720 = t4732 * t5023 * t5409;
t5240 = t4962 * t5375;
t4853 = t4959 * t4990 - t4959 + t5240;
t5483 = -0.2e1 * t5567;
t4733 = (-t4962 * t5331 * t5632 + t4853 * t5483) * t5008 + (t4853 * t5378 - (t4832 * t4962 + t4959 * t5398) * t5787 + pkin(6) * (t4883 * t4959 - t4962 * t5200)) * t5041 - (-pkin(6) * t5240 + t4907 * t4959) * t5787 - (t4826 * t4962 + t4959 * t5246) * pkin(6);
t5024 = xDDP(1);
t4721 = t4733 * t5024 * t5409;
t5022 = xDDP(3);
t5630 = t5011 * t5057;
t5374 = t5022 * t5630;
t5622 = t5012 * t5032;
t5717 = t4804 * t5005;
t5412 = ((t5012 * t5042 * t5483 + t5033 * t5331) * t5008 + ((-t4930 * t5632 + t4931 * t5033) * t5787 + t5197 * t5622) * t5041 + pkin(6) * (t4935 * t5033 + (t5012 * t5787 - t5397) * t5042)) * t5717;
t4772 = t5374 * t5412;
t5043 = xDP(3);
t5044 = xDP(2);
t5045 = xDP(1);
t5161 = t4959 * t5044 - t4962 * t5045;
t4844 = t5033 * t5161 - t5042 * t5043;
t4865 = t4959 * t5045 + t4962 * t5044;
t5692 = t4865 * t5041;
t4862 = pkin(6) * t5692;
t4799 = pkin(5) * t4844 + t4862;
t5778 = pkin(6) * t5041;
t4841 = t4844 * t5778;
t4847 = t5033 * t5043 + t5042 * t5161;
t4954 = t5008 - 0.2e1;
t5544 = t4954 * t4967;
t4904 = -pkin(5) + t5544;
t5676 = (t5041 + 0.1e1) * (t5041 - 0.1e1);
t5781 = pkin(6) * t5011;
t5310 = t5676 * t5781;
t5792 = pkin(2) * t5032;
t5489 = t4844 * t5792;
t5550 = -0.2e1 * t5641;
t5602 = t5032 * t5041;
t5695 = t4847 * t5011;
t5783 = pkin(5) * t4865;
t5796 = pkin(2) * t5004;
t5806 = 0.2e1 * t5004 - 0.1e1;
t4673 = ((-t4865 * t4904 - t4841) * t5040 + (pkin(2) * t4844 * t5806 - t4799 * t5031) * t5032) * t4990 + (-(t4847 * t5041 + t4865 * t5550) * t5796 + ((t4844 * t5544 - t4799) * t5011 - t4932 * t4847) * t5040 + ((t4841 - t5783) * t5031 - t4865 * pkin(2)) * t5641) * t5012 - t5004 * t5489 + ((t4865 * t5676 + t5602 * t5695) * t4967 - t5783) * t5040 + ((pkin(1) * t5695 + t4799) * t5032 - t4847 * t5310 + pkin(1) * t5692) * t5031 + t5489;
t4895 = -t5519 + t5778;
t5686 = t4895 * t5012;
t5597 = t5040 * t5041;
t5876 = -pkin(2) * t5597 - t4968;
t4829 = pkin(1) * t5686 + (t5876 * pkin(5) + t4948) * t5011;
t4821 = 0.1e1 / t4829;
t5699 = t4821 * t5005;
t4667 = t4673 * t5699;
t4658 = pkin(6) * t4667;
t5131 = t4844 * t5647 - t4865 * t4990;
t4796 = t4865 + t5131;
t5086 = (-t4844 * t4990 - t4865 * t5647 + t4844) * t4930;
t5116 = t5131 * pkin(6);
t4697 = (t4796 * t5482 + t5331 * t5695) * t5008 + (-t4796 * t5378 + (t4931 * t5695 + t5086) * t5787 + (t4865 * t4932 + t5032 * t5116) * pkin(6)) * t5041 - (t4865 * t4935 + t5116) * t5787 + (t4935 * t5695 + t5032 * t5086) * pkin(6);
t5450 = t4697 * t4804 * t5031;
t4679 = t5005 * t5450;
t4589 = t4679 - t4658;
t4763 = (t4841 - pkin(2) * (t4844 * t5603 + t4865 * t5031)) * t5012 + (t4862 - pkin(2) * (-t4844 * t5031 + t4865 * t5603)) * t5011 - t5876 * t4847;
t5733 = t4763 * t4821;
t4748 = t5012 * t5733;
t4619 = t4748 + t4667;
t4980 = pkin(1) * t5008;
t5049 = pkin(6) / 0.2e1;
t5362 = t4763 * t5602;
t5249 = t4821 * t5362;
t5170 = t4930 * t5249;
t5683 = t4932 * t5011;
t5747 = t4673 * t5005;
t5237 = t5683 * t5747;
t5679 = (t5012 + 0.1e1) * (t5012 - 0.1e1);
t5251 = t5679 * t5733;
t5006 = 0.1e1 / t5040 ^ 2;
t5633 = t5011 * t5041;
t5507 = pkin(5) * t5633;
t5710 = 0.1e1 / (-(pkin(1) * t5622 + t5507) * t5787 + t5041 * t4942 + t4877) * t5006;
t5748 = t4673 * t4821;
t5278 = t5710 * t5748;
t5313 = pkin(6) * t4748;
t5003 = t5040 * t5004;
t5795 = pkin(2) * t5011;
t5631 = t5056 * t5795;
t5379 = t5003 * t5631;
t5403 = t4821 * t5655;
t5506 = pkin(6) * t5679;
t5584 = t4658 / 0.2e1 - t4679 / 0.2e1;
t5194 = (t5041 * t4619 * t5379 + (t5237 + (t4930 * t5602 * t5679 + (t4968 + t4980) * t5647) * t4763) * t5403 + (((t4977 + t5049) * t4748 + t5584) * t5633 + (-t5008 + 0.1e1 / 0.2e1) * t4930 * t5251) * t5482 - (t5170 * t5506 + (t5313 * t4980 + (-t5313 + t4589) * t4932) * t5011) * pkin(6)) * t5278;
t5270 = t4697 * t5409;
t5206 = pkin(5) * t5270;
t4592 = -t4658 + t5206;
t4652 = pkin(1) * t4667;
t4910 = t4980 - t4932;
t4929 = pkin(5) * t5031 + pkin(2);
t4685 = pkin(1) * t5270;
t5155 = t5041 * t4685;
t5156 = t5011 * t4685;
t5451 = t4697 * t5717;
t5234 = t5032 * t5451;
t5301 = t5814 * t5602;
t4947 = pkin(5) * t4967;
t5571 = t5056 - t5053;
t5347 = t4947 + t5571;
t5448 = t4697 * t5710;
t5528 = pkin(2) * t5633;
t5623 = t5012 * t5031;
t5755 = t4592 * t5032;
t5292 = ((t4932 * t5041 * t5251 + t5156) * t5796 + (t5347 * t5008 * t5251 - (-t5451 + (t4748 * t4935 - t4592) * t5031) * t5528 + pkin(1) * t5234 * t5623) * t5040 + (-t5155 * t5623 - t5011 * ((t4652 - t5755) * t5031 - t5234) + (t4910 * t5011 * t5623 + t5814 * t5040 * t4935 + t4929 * t5301) * t5733) * pkin(6)) * t5448;
t4646 = -0.2e1 * t4658;
t4691 = pkin(2) * t5451;
t5054 = pkin(5) ^ 2;
t4987 = t5054 + t5056;
t5059 = pkin(1) ^ 2;
t5345 = t5059 + t4987;
t4914 = t5053 + t5345;
t4920 = t4968 / 0.2e1 + pkin(1);
t4938 = 0.2e1 * t4947;
t4951 = pkin(1) * t4968;
t5007 = t5041 * t5008;
t5855 = 0.2e1 * pkin(6);
t5010 = pkin(1) * t5855;
t5047 = -0.3e1 * t5053;
t4655 = t5053 * t4667;
t5128 = -pkin(6) * t4679 + t4655;
t5152 = t5032 * t4685;
t5176 = t5040 * t5251;
t5253 = t4930 * t4748;
t5218 = 0.2e1 * t5253;
t5228 = 0.3e1 * t5053 + t5345;
t5746 = t4673 * t5012;
t5370 = t5005 * t5746;
t5328 = pkin(1) * t5370;
t5340 = t5011 * t4942;
t5344 = -0.2e1 * t5506;
t5574 = t5054 / 0.2e1 + t5056 / 0.2e1;
t5346 = t5053 + t5574;
t5277 = t5031 * t4667;
t4637 = pkin(2) * t5277;
t4651 = pkin(5) * t4667;
t4682 = pkin(6) * t5270;
t5581 = t4651 + t4682;
t5353 = t4637 + t5581;
t5393 = t5056 * t5679;
t5543 = pkin(2) * t5679;
t5221 = pkin(6) * t4651;
t5587 = t5221 / 0.2e1 + pkin(6) * t5253;
t5593 = t5353 * t5032 + t4685;
t5669 = t4990 * t5053;
t5698 = t4821 * t5011;
t5835 = -0.2e1 * t4990;
t5359 = t5747 / 0.2e1;
t5577 = t4990 - 0.1e1 / 0.2e1;
t5846 = 0.2e1 * (t4763 * t5577 + t5012 * t5359) * t4821;
t5856 = -0.2e1 * pkin(6);
t5858 = 0.2e1 * pkin(1);
t5295 = (-(t5047 + t5655) * t5007 * t5176 * t5795 + (t4589 * t5340 + (t5328 * t5655 + ((t5858 + 0.3e1 * t4968 - 0.3e1 * t5503) * t5655 + (t4920 * t5856 + t5032 * t5669) * pkin(6)) * t4763) * t5698) * t5008 + (t5379 * t5846 + (t5032 * t5218 + t5593) * t5004 * t5393 + ((-(t4679 + t4646) * t4977 + t5128) * t5012 + ((t4947 + t5346) * t5835 + t4938 + 0.4e1 * t4951 + t5228) * t5733) * t5529 + (-t4592 * t4967 / 0.2e1 - t4691 / 0.2e1 + t5587) * t5032 * t5344) * t5041 + (t5378 * t5846 - t4589 * t4932 * t5012 + (t5010 + ((t4947 + t5574) * t5835 + t4938 + t4914) * t5032) * t5733) * t5781 + (((t4646 + t5206) * t4967 + t4691 - t5053 * t5270 - 0.4e1 * t5587) * t5008 + (t5152 + t5218 + t5353) * pkin(6)) * t5040 * t5543) * t4763 * t5699;
t4454 = -(t4804 * (t5292 + t5295) + t5194) * t5057 + t4720 + t4721 + t4772;
t5029 = sin(qJ(2,2));
t4976 = pkin(1) * t5029;
t4934 = t4976 + pkin(6);
t5028 = sin(qJ(3,2));
t4965 = t5028 * pkin(2);
t4926 = t4965 + pkin(5);
t5299 = t5814 * t5030 * t4926;
t5635 = t5011 * t5039;
t4825 = t4934 * t5635 - t5029 * t5299;
t4966 = t5029 * pkin(6);
t4927 = 0.2e1 * t4966 + pkin(1);
t4831 = t4927 * t5635 - t5299;
t5624 = t5012 * t5030;
t5376 = t5011 * t5624;
t5244 = t4958 * t5376;
t4850 = -t4961 * t4990 + t4961 + t5244;
t4928 = t4966 + pkin(1);
t5671 = t4990 * t5029;
t5504 = pkin(6) * t5671;
t4882 = -t5504 + t4928;
t4906 = t4976 - t5481;
t5038 = cos(qJ(2,2));
t5002 = t5038 ^ 2;
t5037 = cos(qJ(3,2));
t4998 = t5037 ^ 2;
t5661 = t4998 * t5056;
t5332 = -t5053 + t5661;
t5198 = t5039 * t5332;
t5201 = t5376 * t4966;
t5643 = t5011 * t5029;
t5399 = t4926 * t5643;
t5247 = t5012 * t5399;
t5380 = t5029 * t5661;
t5400 = t4926 * t5647;
t5789 = pkin(2) * t5037;
t5568 = pkin(6) * t5789;
t5484 = 0.2e1 * t5568;
t4730 = (t4958 * t5011 * t5198 + t4850 * t5484) * t5002 + (-t4850 * t5380 + (t4831 * t4958 - t4961 * t5400) * t5789 + (t4882 * t4961 + t4958 * t5201) * pkin(6)) * t5038 - (pkin(6) * t5244 + t4906 * t4961) * t5789 + pkin(6) * (t4825 * t4958 - t4961 * t5247);
t4999 = 0.1e1 / t5037;
t4946 = pkin(1) * t4965;
t4876 = t5011 * (-pkin(5) * t4966 + t4946);
t5609 = t5029 * t5037;
t5521 = pkin(2) * t5609;
t5637 = t5011 * t5037;
t5531 = pkin(2) * t5637;
t4810 = (-pkin(5) * t5531 + t4942) * t5038 - t5521 * t5802 + t4876;
t4802 = 0.1e1 / t4810;
t5718 = t4802 * t5057;
t5410 = t4999 * t5718;
t4718 = t4730 * t5023 * t5410;
t5241 = t4961 * t5376;
t4851 = t4958 * t4990 - t4958 + t5241;
t5485 = -0.2e1 * t5568;
t4731 = (-t4961 * t5332 * t5635 + t4851 * t5485) * t5002 + (t4851 * t5380 - (t4831 * t4961 + t4958 * t5400) * t5789 + pkin(6) * (t4882 * t4958 - t4961 * t5201)) * t5038 - (-pkin(6) * t5241 + t4906 * t4958) * t5789 - (t4825 * t4961 + t4958 * t5247) * pkin(6);
t4719 = t4731 * t5024 * t5410;
t5625 = t5012 * t5029;
t5719 = t4802 * t4999;
t5413 = ((t5012 * t5039 * t5485 + t5030 * t5332) * t5002 + ((-t4926 * t5635 + t4927 * t5030) * t5789 + t5198 * t5625) * t5038 + pkin(6) * (t4934 * t5030 + (t5012 * t5789 - t5399) * t5039)) * t5719;
t4771 = t5374 * t5413;
t5162 = t4958 * t5044 - t4961 * t5045;
t4843 = t5030 * t5162 - t5039 * t5043;
t4864 = t4958 * t5045 + t4961 * t5044;
t5693 = t4864 * t5038;
t4861 = pkin(6) * t5693;
t4798 = pkin(5) * t4843 + t4861;
t5779 = pkin(6) * t5038;
t4840 = t4843 * t5779;
t4846 = t5030 * t5043 + t5039 * t5162;
t4953 = t5002 - 0.2e1;
t5545 = t4953 * t4965;
t4903 = -pkin(5) + t5545;
t5677 = (t5038 + 0.1e1) * (t5038 - 0.1e1);
t5311 = t5677 * t5781;
t5793 = pkin(2) * t5029;
t5491 = t4843 * t5793;
t5551 = -0.2e1 * t5643;
t5608 = t5029 * t5038;
t5696 = t4846 * t5011;
t5784 = pkin(5) * t4864;
t5797 = pkin(2) * t4998;
t5809 = 0.2e1 * t4998 - 0.1e1;
t4672 = ((-t4864 * t4903 - t4840) * t5037 + (pkin(2) * t4843 * t5809 - t4798 * t5028) * t5029) * t4990 + (-(t4846 * t5038 + t4864 * t5551) * t5797 + ((t4843 * t5545 - t4798) * t5011 - t4928 * t4846) * t5037 + ((t4840 - t5784) * t5028 - t4864 * pkin(2)) * t5643) * t5012 - t4998 * t5491 + ((t4864 * t5677 + t5608 * t5696) * t4965 - t5784) * t5037 + ((pkin(1) * t5696 + t4798) * t5029 - t4846 * t5311 + pkin(1) * t5693) * t5028 + t5491;
t4894 = -t5521 + t5779;
t5687 = t4894 * t5012;
t5599 = t5037 * t5038;
t5875 = -pkin(2) * t5599 - t4966;
t4828 = pkin(1) * t5687 + (t5875 * pkin(5) + t4946) * t5011;
t4818 = 0.1e1 / t4828;
t5703 = t4818 * t4999;
t4665 = t4672 * t5703;
t4657 = pkin(6) * t4665;
t5132 = t4843 * t5647 - t4864 * t4990;
t4795 = t4864 + t5132;
t5087 = (-t4843 * t4990 - t4864 * t5647 + t4843) * t4926;
t5117 = t5132 * pkin(6);
t4696 = (t4795 * t5484 + t5332 * t5696) * t5002 + (-t4795 * t5380 + (t4927 * t5696 + t5087) * t5789 + (t4864 * t4928 + t5029 * t5117) * pkin(6)) * t5038 - (t4864 * t4934 + t5117) * t5789 + (t4934 * t5696 + t5029 * t5087) * pkin(6);
t5454 = t4696 * t4802 * t5028;
t4678 = t4999 * t5454;
t4588 = t4678 - t4657;
t4762 = (t4840 - pkin(2) * (t4843 * t5609 + t4864 * t5028)) * t5012 + (t4861 - pkin(2) * (-t4843 * t5028 + t4864 * t5609)) * t5011 - t5875 * t4846;
t5736 = t4762 * t4818;
t4747 = t5012 * t5736;
t4617 = t4747 + t4665;
t4979 = pkin(1) * t5002;
t5363 = t4762 * t5608;
t5254 = t4818 * t5363;
t5171 = t4926 * t5254;
t5684 = t4928 * t5011;
t5750 = t4672 * t4999;
t5238 = t5684 * t5750;
t5256 = t5679 * t5736;
t5000 = 0.1e1 / t5037 ^ 2;
t5636 = t5011 * t5038;
t5508 = pkin(5) * t5636;
t5711 = 0.1e1 / (-(pkin(1) * t5625 + t5508) * t5789 + t5038 * t4942 + t4876) * t5000;
t5751 = t4672 * t4818;
t5283 = t5711 * t5751;
t5315 = pkin(6) * t4747;
t4997 = t5037 * t4998;
t5381 = t4997 * t5631;
t5405 = t4818 * t5661;
t5585 = t4657 / 0.2e1 - t4678 / 0.2e1;
t5195 = (t5038 * t4617 * t5381 + (t5238 + (t4926 * t5608 * t5679 + (t4966 + t4979) * t5647) * t4762) * t5405 + (((t4976 + t5049) * t4747 + t5585) * t5636 + (-t5002 + 0.1e1 / 0.2e1) * t4926 * t5256) * t5484 - (t5171 * t5506 + (t5315 * t4979 + (-t5315 + t4588) * t4928) * t5011) * pkin(6)) * t5283;
t5272 = t4696 * t5410;
t5207 = pkin(5) * t5272;
t4591 = -t4657 + t5207;
t4650 = pkin(1) * t4665;
t4909 = t4979 - t4928;
t4925 = pkin(5) * t5028 + pkin(2);
t4684 = pkin(1) * t5272;
t5157 = t5038 * t4684;
t5158 = t5011 * t4684;
t5455 = t4696 * t5719;
t5235 = t5029 * t5455;
t5302 = t5814 * t5608;
t4945 = pkin(5) * t4965;
t5348 = t4945 + t5571;
t5452 = t4696 * t5711;
t5530 = pkin(2) * t5636;
t5626 = t5012 * t5028;
t5756 = t4591 * t5029;
t5293 = ((t4928 * t5038 * t5256 + t5158) * t5797 + (t5348 * t5002 * t5256 - (-t5455 + (t4747 * t4934 - t4591) * t5028) * t5530 + pkin(1) * t5235 * t5626) * t5037 + (-t5157 * t5626 - t5011 * ((t4650 - t5756) * t5028 - t5235) + (t4909 * t5011 * t5626 + t5814 * t5037 * t4934 + t4925 * t5302) * t5736) * pkin(6)) * t5452;
t4645 = -0.2e1 * t4657;
t4690 = pkin(2) * t5455;
t4918 = t4966 / 0.2e1 + pkin(1);
t4937 = 0.2e1 * t4945;
t4950 = pkin(1) * t4966;
t5001 = t5038 * t5002;
t4654 = t5053 * t4665;
t5129 = -pkin(6) * t4678 + t4654;
t5153 = t5029 * t4684;
t5178 = t5037 * t5256;
t5258 = t4926 * t4747;
t5219 = 0.2e1 * t5258;
t5749 = t4672 * t5012;
t5467 = t4999 * t5749;
t5329 = pkin(1) * t5467;
t5282 = t5028 * t4665;
t4636 = pkin(2) * t5282;
t4649 = pkin(5) * t4665;
t4681 = pkin(6) * t5272;
t5582 = t4649 + t4681;
t5354 = t4636 + t5582;
t5222 = pkin(6) * t4649;
t5588 = t5222 / 0.2e1 + pkin(6) * t5258;
t5594 = t5354 * t5029 + t4684;
t5702 = t4818 * t5011;
t5360 = t5750 / 0.2e1;
t5847 = 0.2e1 * (t4762 * t5577 + t5012 * t5360) * t4818;
t5296 = (-(t5047 + t5661) * t5001 * t5178 * t5795 + (t4588 * t5340 + (t5329 * t5661 + ((t5858 + 0.3e1 * t4966 - 0.3e1 * t5504) * t5661 + (t4918 * t5856 + t5029 * t5669) * pkin(6)) * t4762) * t5702) * t5002 + (t5381 * t5847 + (t5029 * t5219 + t5594) * t4998 * t5393 + ((-(t4678 + t4645) * t4976 + t5129) * t5012 + ((t4945 + t5346) * t5835 + t4937 + 0.4e1 * t4950 + t5228) * t5736) * t5531 + (-t4591 * t4965 / 0.2e1 - t4690 / 0.2e1 + t5588) * t5029 * t5344) * t5038 + (t5380 * t5847 - t4588 * t4928 * t5012 + (t5010 + ((t4945 + t5574) * t5835 + t4937 + t4914) * t5029) * t5736) * t5781 + (((t4645 + t5207) * t4965 + t4690 - t5053 * t5272 - 0.4e1 * t5588) * t5002 + (t5153 + t5219 + t5354) * pkin(6)) * t5037 * t5543) * t4762 * t5703;
t4453 = -(t4802 * (t5293 + t5296) + t5195) * t5057 + t4718 + t4719 + t4771;
t5026 = sin(qJ(2,3));
t4975 = pkin(1) * t5026;
t4933 = t4975 + pkin(6);
t5025 = sin(qJ(3,3));
t4963 = t5025 * pkin(2);
t4922 = t4963 + pkin(5);
t5300 = t5814 * t5027 * t4922;
t5638 = t5011 * t5036;
t4824 = t4933 * t5638 - t5026 * t5300;
t4964 = t5026 * pkin(6);
t4923 = 0.2e1 * t4964 + pkin(1);
t4830 = t4923 * t5638 - t5300;
t5627 = t5012 * t5027;
t5377 = t5011 * t5627;
t5245 = t4957 * t5377;
t4848 = -t4960 * t4990 + t4960 + t5245;
t4924 = t4964 + pkin(1);
t5672 = t4990 * t5026;
t5505 = pkin(6) * t5672;
t4881 = -t5505 + t4924;
t4905 = t4975 - t5481;
t5035 = cos(qJ(2,3));
t4996 = t5035 ^ 2;
t5034 = cos(qJ(3,3));
t4992 = t5034 ^ 2;
t5667 = t4992 * t5056;
t5333 = -t5053 + t5667;
t5199 = t5036 * t5333;
t5202 = t5377 * t4964;
t5645 = t5011 * t5026;
t5401 = t4922 * t5645;
t5248 = t5012 * t5401;
t5382 = t5026 * t5667;
t5402 = t4922 * t5647;
t5791 = pkin(2) * t5034;
t5569 = pkin(6) * t5791;
t5486 = 0.2e1 * t5569;
t4728 = (t4957 * t5011 * t5199 + t4848 * t5486) * t4996 + (-t4848 * t5382 + (t4830 * t4957 - t4960 * t5402) * t5791 + (t4881 * t4960 + t4957 * t5202) * pkin(6)) * t5035 - (pkin(6) * t5245 + t4905 * t4960) * t5791 + pkin(6) * (t4824 * t4957 - t4960 * t5248);
t4993 = 0.1e1 / t5034;
t4944 = pkin(1) * t4963;
t4875 = t5011 * (-pkin(5) * t4964 + t4944);
t5615 = t5026 * t5034;
t5523 = pkin(2) * t5615;
t5640 = t5011 * t5034;
t5533 = pkin(2) * t5640;
t4809 = (-pkin(5) * t5533 + t4942) * t5035 - t5523 * t5802 + t4875;
t4800 = 0.1e1 / t4809;
t5720 = t4800 * t5057;
t5411 = t4993 * t5720;
t4716 = t4728 * t5023 * t5411;
t5242 = t4960 * t5377;
t4849 = t4957 * t4990 - t4957 + t5242;
t5487 = -0.2e1 * t5569;
t4729 = (-t4960 * t5333 * t5638 + t4849 * t5487) * t4996 + (t4849 * t5382 - (t4830 * t4960 + t4957 * t5402) * t5791 + pkin(6) * (t4881 * t4957 - t4960 * t5202)) * t5035 - (-pkin(6) * t5242 + t4905 * t4957) * t5791 - (t4824 * t4960 + t4957 * t5248) * pkin(6);
t4717 = t4729 * t5024 * t5411;
t5628 = t5012 * t5026;
t5721 = t4800 * t4993;
t5414 = ((t5012 * t5036 * t5487 + t5027 * t5333) * t4996 + ((-t4922 * t5638 + t4923 * t5027) * t5791 + t5199 * t5628) * t5035 + pkin(6) * (t4933 * t5027 + (t5012 * t5791 - t5401) * t5036)) * t5721;
t4770 = t5374 * t5414;
t5163 = t4957 * t5044 - t4960 * t5045;
t4842 = t5027 * t5163 - t5036 * t5043;
t4863 = t4957 * t5045 + t4960 * t5044;
t5694 = t4863 * t5035;
t4860 = pkin(6) * t5694;
t4797 = pkin(5) * t4842 + t4860;
t5780 = pkin(6) * t5035;
t4839 = t4842 * t5780;
t4845 = t5027 * t5043 + t5036 * t5163;
t4952 = t4996 - 0.2e1;
t5546 = t4952 * t4963;
t4902 = -pkin(5) + t5546;
t5678 = (t5035 + 0.1e1) * (t5035 - 0.1e1);
t5312 = t5678 * t5781;
t5794 = pkin(2) * t5026;
t5493 = t4842 * t5794;
t5552 = -0.2e1 * t5645;
t5614 = t5026 * t5035;
t5697 = t4845 * t5011;
t5785 = pkin(5) * t4863;
t5798 = pkin(2) * t4992;
t5812 = 0.2e1 * t4992 - 0.1e1;
t4671 = ((-t4863 * t4902 - t4839) * t5034 + (pkin(2) * t4842 * t5812 - t4797 * t5025) * t5026) * t4990 + (-(t4845 * t5035 + t4863 * t5552) * t5798 + ((t4842 * t5546 - t4797) * t5011 - t4924 * t4845) * t5034 + ((t4839 - t5785) * t5025 - t4863 * pkin(2)) * t5645) * t5012 - t4992 * t5493 + ((t4863 * t5678 + t5614 * t5697) * t4963 - t5785) * t5034 + ((pkin(1) * t5697 + t4797) * t5026 - t4845 * t5312 + pkin(1) * t5694) * t5025 + t5493;
t4893 = -t5523 + t5780;
t5688 = t4893 * t5012;
t5601 = t5034 * t5035;
t5874 = -pkin(2) * t5601 - t4964;
t4827 = pkin(1) * t5688 + (t5874 * pkin(5) + t4944) * t5011;
t4815 = 0.1e1 / t4827;
t5707 = t4815 * t4993;
t4663 = t4671 * t5707;
t4656 = pkin(6) * t4663;
t5133 = t4842 * t5647 - t4863 * t4990;
t4794 = t4863 + t5133;
t5088 = (-t4842 * t4990 - t4863 * t5647 + t4842) * t4922;
t5118 = t5133 * pkin(6);
t4695 = (t4794 * t5486 + t5333 * t5697) * t4996 + (-t4794 * t5382 + (t4923 * t5697 + t5088) * t5791 + (t4863 * t4924 + t5026 * t5118) * pkin(6)) * t5035 - (t4863 * t4933 + t5118) * t5791 + (t4933 * t5697 + t5026 * t5088) * pkin(6);
t5458 = t4695 * t4800 * t5025;
t4677 = t4993 * t5458;
t4587 = t4677 - t4656;
t4761 = (t4839 - pkin(2) * (t4842 * t5615 + t4863 * t5025)) * t5012 + (t4860 - pkin(2) * (-t4842 * t5025 + t4863 * t5615)) * t5011 - t5874 * t4845;
t5739 = t4761 * t4815;
t4746 = t5012 * t5739;
t4615 = t4746 + t4663;
t4978 = pkin(1) * t4996;
t5364 = t4761 * t5614;
t5259 = t4815 * t5364;
t5172 = t4922 * t5259;
t5685 = t4924 * t5011;
t5753 = t4671 * t4993;
t5239 = t5685 * t5753;
t5261 = t5679 * t5739;
t4994 = 0.1e1 / t5034 ^ 2;
t5639 = t5011 * t5035;
t5509 = pkin(5) * t5639;
t5712 = 0.1e1 / (-(pkin(1) * t5628 + t5509) * t5791 + t5035 * t4942 + t4875) * t4994;
t5754 = t4671 * t4815;
t5288 = t5712 * t5754;
t5317 = pkin(6) * t4746;
t4991 = t5034 * t4992;
t5383 = t4991 * t5631;
t5407 = t4815 * t5667;
t5586 = t4656 / 0.2e1 - t4677 / 0.2e1;
t5196 = (t5035 * t4615 * t5383 + (t5239 + (t4922 * t5614 * t5679 + (t4964 + t4978) * t5647) * t4761) * t5407 + (((t4975 + t5049) * t4746 + t5586) * t5639 + (-t4996 + 0.1e1 / 0.2e1) * t4922 * t5261) * t5486 - (t5172 * t5506 + (t5317 * t4978 + (-t5317 + t4587) * t4924) * t5011) * pkin(6)) * t5288;
t5274 = t4695 * t5411;
t5208 = pkin(5) * t5274;
t4590 = -t4656 + t5208;
t4648 = pkin(1) * t4663;
t4908 = t4978 - t4924;
t4921 = pkin(5) * t5025 + pkin(2);
t4683 = pkin(1) * t5274;
t5159 = t5035 * t4683;
t5160 = t5011 * t4683;
t5459 = t4695 * t5721;
t5236 = t5026 * t5459;
t5303 = t5814 * t5614;
t4943 = pkin(5) * t4963;
t5349 = t4943 + t5571;
t5456 = t4695 * t5712;
t5532 = pkin(2) * t5639;
t5629 = t5012 * t5025;
t5757 = t4590 * t5026;
t5294 = ((t4924 * t5035 * t5261 + t5160) * t5798 + (t5349 * t4996 * t5261 - (-t5459 + (t4746 * t4933 - t4590) * t5025) * t5532 + pkin(1) * t5236 * t5629) * t5034 + (-t5159 * t5629 - t5011 * ((t4648 - t5757) * t5025 - t5236) + (t4908 * t5011 * t5629 + t5814 * t5034 * t4933 + t4921 * t5303) * t5739) * pkin(6)) * t5456;
t4644 = -0.2e1 * t4656;
t4689 = pkin(2) * t5459;
t4916 = t4964 / 0.2e1 + pkin(1);
t4936 = 0.2e1 * t4943;
t4949 = pkin(1) * t4964;
t4995 = t5035 * t4996;
t4653 = t5053 * t4663;
t5130 = -pkin(6) * t4677 + t4653;
t5154 = t5026 * t4683;
t5180 = t5034 * t5261;
t5263 = t4922 * t4746;
t5220 = 0.2e1 * t5263;
t5752 = t4671 * t5012;
t5470 = t4993 * t5752;
t5330 = pkin(1) * t5470;
t5287 = t5025 * t4663;
t4635 = pkin(2) * t5287;
t4647 = pkin(5) * t4663;
t4680 = pkin(6) * t5274;
t5583 = t4647 + t4680;
t5355 = t4635 + t5583;
t5223 = pkin(6) * t4647;
t5589 = t5223 / 0.2e1 + pkin(6) * t5263;
t5595 = t5355 * t5026 + t4683;
t5706 = t4815 * t5011;
t5361 = t5753 / 0.2e1;
t5848 = 0.2e1 * (t4761 * t5577 + t5012 * t5361) * t4815;
t5297 = (-(t5047 + t5667) * t4995 * t5180 * t5795 + (t4587 * t5340 + (t5330 * t5667 + ((t5858 + 0.3e1 * t4964 - 0.3e1 * t5505) * t5667 + (t4916 * t5856 + t5026 * t5669) * pkin(6)) * t4761) * t5706) * t4996 + (t5383 * t5848 + (t5026 * t5220 + t5595) * t4992 * t5393 + ((-(t4677 + t4644) * t4975 + t5130) * t5012 + ((t4943 + t5346) * t5835 + t4936 + 0.4e1 * t4949 + t5228) * t5739) * t5533 + (-t4590 * t4963 / 0.2e1 - t4689 / 0.2e1 + t5589) * t5026 * t5344) * t5035 + (t5382 * t5848 - t4587 * t4924 * t5012 + (t5010 + ((t4943 + t5574) * t5835 + t4936 + t4914) * t5026) * t5739) * t5781 + (((t4644 + t5208) * t4963 + t4689 - t5053 * t5274 - 0.4e1 * t5589) * t4996 + (t5154 + t5220 + t5355) * pkin(6)) * t5034 * t5543) * t4761 * t5707;
t4452 = -(t4800 * (t5294 + t5297) + t5196) * t5057 + t4716 + t4717 + t4770;
t5890 = -0.2e1 * pkin(5);
t5889 = -0.4e1 * pkin(6);
t5566 = 0.2e1 * t4990;
t5833 = 0.2e1 * t4996;
t5830 = 0.2e1 * t5002;
t5827 = 0.2e1 * t5008;
t5888 = 0.2e1 * t5035;
t5887 = 0.2e1 * t5038;
t5886 = 0.2e1 * t5041;
t5811 = t4996 - 0.1e1;
t5808 = t5002 - 0.1e1;
t5805 = t5008 - 0.1e1;
t4758 = t4761 ^ 2;
t4816 = 0.1e1 / t4827 ^ 2;
t4755 = t4758 * t4816;
t4759 = t4762 ^ 2;
t4819 = 0.1e1 / t4828 ^ 2;
t4756 = t4759 * t4819;
t4760 = t4763 ^ 2;
t4822 = 0.1e1 / t4829 ^ 2;
t4757 = t4760 * t4822;
t5826 = 0.4e1 * t5008;
t5885 = t4990 * (t5826 - 0.2e1);
t5829 = 0.4e1 * t5002;
t5884 = t4990 * (t5829 - 0.2e1);
t5832 = 0.4e1 * t4996;
t5883 = t4990 * (t5832 - 0.2e1);
t5343 = -t4921 + 0.2e1 * t5798;
t5882 = t5027 * t5343;
t5342 = -t4925 + 0.2e1 * t5797;
t5881 = t5030 * t5342;
t5341 = -t4929 + 0.2e1 * t5796;
t5880 = t5033 * t5341;
t5646 = t5011 * t5025;
t5536 = pkin(2) * t5646;
t5620 = t5012 * t5053;
t4560 = t4615 * t5667 + (t4893 * t5536 + t5620) * t5739 + t5130;
t4584 = pkin(6) * t5287 - t5459;
t5790 = pkin(2) * t5035;
t4566 = (((pkin(6) * t5615 + t5790) * t5011 + pkin(6) * t5629) * t5739 + t4584) * t4815 * t5459;
t4833 = t4893 * t5627 - t5036 * t5874;
t5619 = t5025 * t5027;
t5524 = pkin(2) * t5619;
t5527 = pkin(2) * t5629;
t4788 = (t4893 * t4960 + t4957 * t5524) * t5011 + t4833 * t4957 - t4960 * t5527;
t5727 = t4788 * t4815;
t4776 = t5023 * t5727;
t4789 = (t4893 * t4957 - t4960 * t5524) * t5011 - t4833 * t4960 - t4957 * t5527;
t5726 = t4789 * t4815;
t4777 = t5024 * t5726;
t4806 = -t5874 * t5027 + (-t5536 - t5688) * t5036;
t5715 = t4806 * t4815;
t4785 = t5022 * t5715;
t5231 = t4566 + t4776 + t4777 + t4785;
t5050 = pkin(5) / 0.2e1;
t4915 = t4963 + t5050;
t5428 = t4761 * t5639;
t4740 = t4815 * t5428;
t5181 = t4915 * t4740;
t5431 = t5035 * t5739;
t5262 = t4923 * t5431;
t5386 = t4990 * t5739;
t5396 = t4952 * t5667;
t5429 = t4761 * t5645;
t5496 = pkin(6) * t5601;
t5572 = t5053 + t5056;
t5592 = t4635 + t4680;
t5663 = t4996 * t5053;
t5857 = -0.2e1 * pkin(2);
t4551 = -(t5396 - t5663 + (0.2e1 * t5026 * t5496 + t4921) * pkin(2)) * t5386 + ((t5181 + t5586) * t5855 + (t4915 * t5429 * t5857 + t4671 * t5056) * t4815 * t5034) * t5012 + t4761 * t5407 * t5678 + (-t5592 * t5645 + t5262) * t5791 + t4584 * t5532 + (-t5663 + t4943 + t4949 + t5572) * t5739;
t5760 = t4551 * t4761;
t4524 = (-t4560 * t5753 - t5760) * t4816 + t5231;
t4515 = t5026 * t4524;
t5737 = t4761 * t4993;
t5430 = t4816 * t5737;
t5290 = t4671 * t5430;
t5189 = t5035 * t5290;
t5879 = t4515 + t5189;
t5642 = t5011 * t5031;
t5534 = pkin(2) * t5642;
t4562 = t4619 * t5655 + (t4895 * t5534 + t5620) * t5733 + t5128;
t4586 = pkin(6) * t5277 - t5451;
t5786 = pkin(2) * t5041;
t4568 = (((pkin(6) * t5603 + t5786) * t5011 + pkin(6) * t5623) * t5733 + t4586) * t4821 * t5451;
t4835 = t4895 * t5621 - t5042 * t5876;
t5607 = t5031 * t5033;
t5520 = pkin(2) * t5607;
t5525 = pkin(2) * t5623;
t4792 = (t4895 * t4962 + t4959 * t5520) * t5011 + t4835 * t4959 - t4962 * t5525;
t5723 = t4792 * t4821;
t4780 = t5023 * t5723;
t4793 = (t4895 * t4959 - t4962 * t5520) * t5011 - t4835 * t4962 - t4959 * t5525;
t5722 = t4793 * t4821;
t4781 = t5024 * t5722;
t4808 = -t5876 * t5033 + (-t5534 - t5686) * t5042;
t5713 = t4808 * t4821;
t4787 = t5022 * t5713;
t5229 = t4568 + t4780 + t4781 + t4787;
t4919 = t4967 + t5050;
t5418 = t4763 * t5633;
t4742 = t4821 * t5418;
t5177 = t4919 * t4742;
t5421 = t5041 * t5733;
t5252 = t4931 * t5421;
t5384 = t4990 * t5733;
t5394 = t4954 * t5655;
t5419 = t4763 * t5641;
t5494 = pkin(6) * t5597;
t5590 = t4637 + t4682;
t5651 = t5008 * t5053;
t4553 = -(t5394 - t5651 + (0.2e1 * t5032 * t5494 + t4929) * pkin(2)) * t5384 + ((t5177 + t5584) * t5855 + (t4919 * t5419 * t5857 + t4673 * t5056) * t4821 * t5040) * t5012 + t4763 * t5403 * t5676 + (-t5590 * t5641 + t5252) * t5787 + t4586 * t5528 + (-t5651 + t4947 + t4951 + t5572) * t5733;
t5758 = t4553 * t4763;
t4526 = (-t4562 * t5747 - t5758) * t4822 + t5229;
t4516 = t5032 * t4526;
t5731 = t4763 * t5005;
t5420 = t4822 * t5731;
t5280 = t4673 * t5420;
t5185 = t5041 * t5280;
t5878 = t4516 + t5185;
t5644 = t5011 * t5028;
t5535 = pkin(2) * t5644;
t4561 = t4617 * t5661 + (t4894 * t5535 + t5620) * t5736 + t5129;
t4585 = pkin(6) * t5282 - t5455;
t5788 = pkin(2) * t5038;
t4567 = (((pkin(6) * t5609 + t5788) * t5011 + pkin(6) * t5626) * t5736 + t4585) * t4818 * t5455;
t4834 = t4894 * t5624 - t5039 * t5875;
t5613 = t5028 * t5030;
t5522 = pkin(2) * t5613;
t5526 = pkin(2) * t5626;
t4790 = (t4894 * t4961 + t4958 * t5522) * t5011 + t4834 * t4958 - t4961 * t5526;
t5725 = t4790 * t4818;
t4778 = t5023 * t5725;
t4791 = (t4894 * t4958 - t4961 * t5522) * t5011 - t4834 * t4961 - t4958 * t5526;
t5724 = t4791 * t4818;
t4779 = t5024 * t5724;
t4807 = -t5875 * t5030 + (-t5535 - t5687) * t5039;
t5714 = t4807 * t4818;
t4786 = t5022 * t5714;
t5230 = t4567 + t4778 + t4779 + t4786;
t4917 = t4965 + t5050;
t5423 = t4762 * t5636;
t4741 = t4818 * t5423;
t5179 = t4917 * t4741;
t5426 = t5038 * t5736;
t5257 = t4927 * t5426;
t5385 = t4990 * t5736;
t5395 = t4953 * t5661;
t5424 = t4762 * t5643;
t5495 = pkin(6) * t5599;
t5591 = t4636 + t4681;
t5657 = t5002 * t5053;
t4552 = -(t5395 - t5657 + (0.2e1 * t5029 * t5495 + t4925) * pkin(2)) * t5385 + ((t5179 + t5585) * t5855 + (t4917 * t5424 * t5857 + t4672 * t5056) * t4818 * t5037) * t5012 + t4762 * t5405 * t5677 + (-t5591 * t5643 + t5257) * t5789 + t4585 * t5530 + (-t5657 + t4945 + t4950 + t5572) * t5736;
t5759 = t4552 * t4762;
t4525 = (-t4561 * t5750 - t5759) * t4819 + t5230;
t4517 = t4525 * t5029;
t5734 = t4762 * t4999;
t5425 = t4819 * t5734;
t5285 = t4672 * t5425;
t5187 = t5038 * t5285;
t5877 = t4517 + t5187;
t5492 = t5027 * t5794;
t5867 = t5025 * (-(pkin(1) * t5638 + pkin(5) * t5027) * t5026 + t5036 * t5312) - t5492;
t5490 = t5030 * t5793;
t5866 = t5028 * (-(pkin(1) * t5635 + pkin(5) * t5030) * t5029 + t5039 * t5311) - t5490;
t5488 = t5033 * t5792;
t5865 = t5031 * (-(pkin(1) * t5632 + pkin(5) * t5033) * t5032 + t5042 * t5310) - t5488;
t5143 = t4691 - t5221;
t4565 = pkin(2) * t4592 + t5031 * t5143;
t4577 = t4586 * t5683;
t5815 = t4651 / 0.2e1;
t4583 = t5815 + t4682 / 0.2e1;
t4661 = t5056 * t4667;
t5051 = 0.2e1 * pkin(5);
t5009 = pkin(2) * t5051;
t5146 = pkin(6) * t4929 * t5249;
t5422 = t4763 * t5698;
t5314 = pkin(6) * t5422;
t5203 = t5031 * t5314;
t5227 = -0.3e1 * t5056 - t5053 - t5054 - t5059;
t5250 = t4821 * t5419;
t5654 = t5005 * t5032;
t5464 = t4673 * t5654;
t5276 = t4821 * t5464;
t5325 = pkin(2) * t4667;
t5656 = t5003 * t5056;
t5404 = t4821 * t5656;
t5537 = t5008 * t4967;
t5538 = t5004 * t5792;
t5573 = -0.2e1 / 0.3e1 * t5056 - t5053 / 0.3e1;
t5575 = t5054 / 0.3e1 + t5056;
t5576 = t5053 / 0.2e1 + t5056;
t5803 = pkin(1) * t5011;
t5825 = -0.2e1 * t5011;
t5828 = -0.2e1 * t5008;
t5836 = 0.3e1 * t5012 * t4990;
t4466 = (((t5008 - 0.4e1 / 0.3e1) * t5656 + ((-0.2e1 / 0.3e1 * t4947 + t5573) * t5008 + 0.4e1 / 0.3e1 * t4947 + t5575) * t5040 + (0.4e1 / 0.3e1 * t5796 - 0.2e1 / 0.3e1 * t4929) * pkin(6) * t5602) * t5733 * t5836 + (t5394 * t5748 - ((t4652 + t5755) * t5041 + (-0.4e1 * t4930 + t5537) * t5250) * t5796 + (t5177 * t5889 - t4655 + t4661 + (-t5008 * t5325 + (0.2e1 * t5007 * t5314 - t5008 * t5581 + t4651 + 0.2e1 * t4682) * t5031) * pkin(2) + (-pkin(6) * t5748 + 0.2e1 * t5450) * pkin(1) * t5654) * t5040 + (t4565 * t5041 + (-t5009 + (-t4987 + t5651) * t5031) * t5422) * t5032) * t4990 + ((-0.3e1 * t5008 + 0.3e1) * t4763 * t5404 - (t5008 * t5156 + 0.2e1 * t5252 + ((t5815 + t5590) * t5032 + t4685) * t5825) * t5796 + (((pkin(1) * t5276 + t4592) * t4967 + t5143) * t5633 + ((t4947 + t5576) * t5827 - 0.4e1 * t4947 - 0.2e1 * t4951 + t5227) * t5733) * t5040 - t4586 * t5008 * t5803 + 0.2e1 * t5146 + t4577) * t5012 - t5805 * t4661 * t5003 + (t4592 * t5041 + (-t4967 - t5051 + t5537) * t5422) * t5538 + 0.2e1 * ((t5008 / 0.2e1 - 0.1e1 / 0.2e1) * t5325 + (t4583 * t5008 - t5152 / 0.2e1 - t4583 + (-pkin(6) * t5007 + t4935 * t5041) * t5422) * t5031) * t5787 + t4920 * t5203 * t5828 - t4565 * t5602 + ((t4914 * t5031 + t5009) * t5032 + t5031 * t5010) * t5422) * t5420;
t5680 = t4954 * t4990;
t5334 = -t5008 + t5680;
t5224 = t5334 + 0.1e1;
t5553 = -0.2e1 * t5647;
t4532 = ((t4763 * t5224 - t5370) * t5404 - (-t5011 * t5593 + (t5041 * t5328 + (t5041 * (-t4968 + pkin(1)) * t4990 + (t4919 * t5553 + t5778) * t5032) * t4763) * t4821) * t5796 + ((t4935 * t5012 + t5507) * t4589 + (-(t4951 - t5347) * t4990 + (-pkin(6) * t4930 + t4948 * t5032) * t5012 * t5633 + (-t4990 * t5008 + t5805) * pkin(2) * t4929) * t5733) * t5040 - t4990 * t5146 - t4910 * t5012 * t5203 + t5146 + t4577) * t5278;
t5052 = -0.2e1 * pkin(1);
t5653 = t5005 * t5041;
t5463 = t4673 * t5653;
t5771 = t5008 * pkin(6);
t5782 = pkin(5) * t5011;
t5822 = -0.2e1 * t5031;
t4541 = ((-t5237 + ((t4980 - 0.2e1 * t4968 + t5052) * t5647 + pkin(5) * t5301) * t4763) * t4821 * t5004 + ((-t5771 / 0.2e1 + t4935) * t5384 * t5822 + ((-pkin(1) * t5031 * t5464 - t4929 * t5418) * t4821 - t4586) * t5012 + (-t5463 * t5782 + t4763 * (t4935 - t5771)) * t4821 * t5031) * t5040 - t4990 * t5170 + (-t4910 * t5422 + t5155) * t5012 + ((-t4592 - t4679) * t5032 + t4652) * t5011 + t5170) * t4804 * t5448;
t4838 = t4904 * t5011 * t5033 - t4932 * t5042;
t4901 = t5805 * t4967 - pkin(5);
t5366 = t5031 * t5602;
t5209 = t5366 * t5795;
t5149 = t5042 * t5209;
t5605 = t5031 * t5041;
t5387 = t4962 * t5605;
t5304 = pkin(6) * t5387;
t5390 = t4959 * t5605;
t5305 = pkin(6) * t5390;
t5319 = t5004 * t5488;
t5497 = t5033 * t5778;
t5500 = pkin(6) * t5633;
t5596 = t5041 * t5042;
t4724 = ((-t4904 * t4962 - t4959 * t5497) * t5040 + (t4959 * t5880 - t5304) * t5032) * t4990 + (-(t4959 * t5596 + t4962 * t5550) * t5796 + (t4838 * t4959 - t4962 * t5500) * t5040 + (-t4929 * t4962 + t5033 * t5305) * t5641) * t5012 - t4959 * t5319 + (t4901 * t4962 + t4959 * t5149) * t5040 - t5865 * t4959 + t4932 * t5387;
t5445 = t4724 * t5699;
t4712 = t5023 * t5445;
t4727 = ((-t4904 * t4959 + t4962 * t5497) * t5040 + (-t4962 * t5880 - t5305) * t5032) * t4990 + ((0.2e1 * t4959 * t5641 + t4962 * t5596) * t5796 + (-t4838 * t4962 - t4959 * t5500) * t5040 - (t4929 * t4959 + t5033 * t5304) * t5641) * t5012 + t4962 * t5319 + (t4901 * t4959 - t4962 * t5149) * t5040 + t5865 * t4962 + t4932 * t5390;
t5442 = t4727 * t5699;
t4715 = t5024 * t5442;
t4775 = ((-pkin(6) * t5366 - t4904 * t5040) * t5632 + (-t4932 * t5040 - t5004 * t5786) * t5033) * t5012 + t5040 * t5033 * t5209 + (t5803 * t5032 - t5310) * t5607 + ((-t5032 * t5341 + t5494) * t4990 + t5538 - t4929 * t5032) * t5042;
t5415 = t4775 * t5699;
t4769 = t5022 * t5415;
t4430 = t4715 + t4712 + t4769 - t4466 - t4532 + t4541;
t4666 = t4673 ^ 2 * t4822 * t5006;
t5058 = 0.1e1 / pkin(2) ^ 2;
t5460 = t4697 ^ 2 / t4811 ^ 2 * t5058;
t4688 = t5006 * t5460;
t4599 = t4666 + t4688;
t5449 = t4697 * t5716;
t5570 = 0.2e1 * t5782;
t5604 = t5032 * t4430;
t5799 = pkin(1) * t5041;
t5864 = -0.2e1 * (t4990 * t5206 + (-pkin(5) * t5449 + t4977 * t5748) * t5005) * t5733 - (pkin(1) * t4454 + (t4599 * t5041 + t5604) * pkin(5)) * t5011 - (t5878 * t5570 - t4430 * t5799 + (pkin(1) * t4599 - t5873) * t5032) * t5012;
t5144 = t4690 - t5222;
t4564 = pkin(2) * t4591 + t5028 * t5144;
t4576 = t4585 * t5684;
t5816 = t4649 / 0.2e1;
t4582 = t5816 + t4681 / 0.2e1;
t4660 = t5056 * t4665;
t5147 = pkin(6) * t4925 * t5254;
t5427 = t4762 * t5702;
t5316 = pkin(6) * t5427;
t5204 = t5028 * t5316;
t5255 = t4818 * t5424;
t5660 = t4999 * t5029;
t5466 = t4672 * t5660;
t5281 = t4818 * t5466;
t5326 = pkin(2) * t4665;
t5662 = t4997 * t5056;
t5406 = t4818 * t5662;
t5539 = t5002 * t4965;
t5540 = t4998 * t5793;
t5831 = -0.2e1 * t5002;
t4465 = (((t5002 - 0.4e1 / 0.3e1) * t5662 + ((-0.2e1 / 0.3e1 * t4945 + t5573) * t5002 + 0.4e1 / 0.3e1 * t4945 + t5575) * t5037 + (0.4e1 / 0.3e1 * t5797 - 0.2e1 / 0.3e1 * t4925) * pkin(6) * t5608) * t5736 * t5836 + (t5395 * t5751 - ((t4650 + t5756) * t5038 + (-0.4e1 * t4926 + t5539) * t5255) * t5797 + (t5179 * t5889 - t4654 + t4660 + (-t5002 * t5326 + (0.2e1 * t5001 * t5316 - t5002 * t5582 + t4649 + 0.2e1 * t4681) * t5028) * pkin(2) + (-pkin(6) * t5751 + 0.2e1 * t5454) * pkin(1) * t5660) * t5037 + (t4564 * t5038 + (-t5009 + (-t4987 + t5657) * t5028) * t5427) * t5029) * t4990 + ((-0.3e1 * t5002 + 0.3e1) * t4762 * t5406 - (t5002 * t5158 + 0.2e1 * t5257 + ((t5816 + t5591) * t5029 + t4684) * t5825) * t5797 + (((pkin(1) * t5281 + t4591) * t4965 + t5144) * t5636 + ((t4945 + t5576) * t5830 - 0.4e1 * t4945 - 0.2e1 * t4950 + t5227) * t5736) * t5037 - t4585 * t5002 * t5803 + 0.2e1 * t5147 + t4576) * t5012 - t5808 * t4660 * t4997 + (t4591 * t5038 + (-t4965 - t5051 + t5539) * t5427) * t5540 + 0.2e1 * ((t5002 / 0.2e1 - 0.1e1 / 0.2e1) * t5326 + (t4582 * t5002 - t5153 / 0.2e1 - t4582 + (-pkin(6) * t5001 + t4934 * t5038) * t5427) * t5028) * t5789 + t4918 * t5204 * t5831 - t4564 * t5608 + ((t4914 * t5028 + t5009) * t5029 + t5028 * t5010) * t5427) * t5425;
t5681 = t4953 * t4990;
t5335 = -t5002 + t5681;
t5225 = t5335 + 0.1e1;
t4531 = ((t4762 * t5225 - t5467) * t5406 - (-t5011 * t5594 + (t5038 * t5329 + (t5038 * (-t4966 + pkin(1)) * t4990 + (t4917 * t5553 + t5779) * t5029) * t4762) * t4818) * t5797 + ((t4934 * t5012 + t5508) * t4588 + (-(t4950 - t5348) * t4990 + (-pkin(6) * t4926 + t4946 * t5029) * t5012 * t5636 + (-t4990 * t5002 + t5808) * pkin(2) * t4925) * t5736) * t5037 - t4990 * t5147 - t4909 * t5012 * t5204 + t5147 + t4576) * t5283;
t5659 = t4999 * t5038;
t5465 = t4672 * t5659;
t5772 = t5002 * pkin(6);
t5823 = -0.2e1 * t5028;
t4540 = ((-t5238 + ((t4979 - 0.2e1 * t4966 + t5052) * t5647 + pkin(5) * t5302) * t4762) * t4818 * t4998 + ((-t5772 / 0.2e1 + t4934) * t5385 * t5823 + ((-pkin(1) * t5028 * t5466 - t4925 * t5423) * t4818 - t4585) * t5012 + (-t5465 * t5782 + t4762 * (t4934 - t5772)) * t4818 * t5028) * t5037 - t4990 * t5171 + (-t4909 * t5427 + t5157) * t5012 + ((-t4591 - t4678) * t5029 + t4650) * t5011 + t5171) * t4802 * t5452;
t4837 = t4903 * t5030 * t5011 - t4928 * t5039;
t4900 = t5808 * t4965 - pkin(5);
t5367 = t5028 * t5608;
t5210 = t5367 * t5795;
t5150 = t5039 * t5210;
t5611 = t5028 * t5038;
t5388 = t4961 * t5611;
t5306 = pkin(6) * t5388;
t5391 = t4958 * t5611;
t5307 = pkin(6) * t5391;
t5320 = t4998 * t5490;
t5498 = t5030 * t5779;
t5501 = pkin(6) * t5636;
t5598 = t5038 * t5039;
t4723 = ((-t4903 * t4961 - t4958 * t5498) * t5037 + (t4958 * t5881 - t5306) * t5029) * t4990 + (-(t4958 * t5598 + t4961 * t5551) * t5797 + (t4837 * t4958 - t4961 * t5501) * t5037 + (-t4925 * t4961 + t5030 * t5307) * t5643) * t5012 - t4958 * t5320 + (t4900 * t4961 + t4958 * t5150) * t5037 - t5866 * t4958 + t4928 * t5388;
t5446 = t4723 * t5703;
t4711 = t5023 * t5446;
t4726 = ((-t4903 * t4958 + t4961 * t5498) * t5037 + (-t4961 * t5881 - t5307) * t5029) * t4990 + ((0.2e1 * t4958 * t5643 + t4961 * t5598) * t5797 + (-t4837 * t4961 - t4958 * t5501) * t5037 - (t4925 * t4958 + t5030 * t5306) * t5643) * t5012 + t4961 * t5320 + (t4900 * t4958 - t4961 * t5150) * t5037 + t5866 * t4961 + t4928 * t5391;
t5443 = t4726 * t5703;
t4714 = t5024 * t5443;
t4774 = ((-pkin(6) * t5367 - t4903 * t5037) * t5635 + (-t4928 * t5037 - t4998 * t5788) * t5030) * t5012 + t5037 * t5030 * t5210 + (t5803 * t5029 - t5311) * t5613 + ((-t5029 * t5342 + t5495) * t4990 + t5540 - t4925 * t5029) * t5039;
t5416 = t4774 * t5703;
t4768 = t5022 * t5416;
t4429 = t4714 + t4711 + t4768 - t4465 - t4531 + t4540;
t4664 = t4672 ^ 2 * t4819 * t5000;
t5461 = t4696 ^ 2 / t4810 ^ 2 * t5058;
t4687 = t5000 * t5461;
t4596 = t4664 + t4687;
t5453 = t4696 * t5718;
t5610 = t5029 * t4429;
t5800 = pkin(1) * t5038;
t5863 = -0.2e1 * (t4990 * t5207 + (-pkin(5) * t5453 + t4976 * t5751) * t4999) * t5736 - (pkin(1) * t4453 + (t4596 * t5038 + t5610) * pkin(5)) * t5011 - (t5877 * t5570 - t4429 * t5800 + (pkin(1) * t4596 - t5872) * t5029) * t5012;
t5145 = t4689 - t5223;
t4563 = pkin(2) * t4590 + t5025 * t5145;
t4575 = t4584 * t5685;
t5817 = t4647 / 0.2e1;
t4581 = t5817 + t4680 / 0.2e1;
t4659 = t5056 * t4663;
t5148 = pkin(6) * t4921 * t5259;
t5432 = t4761 * t5706;
t5318 = pkin(6) * t5432;
t5205 = t5025 * t5318;
t5260 = t4815 * t5429;
t5666 = t4993 * t5026;
t5469 = t4671 * t5666;
t5286 = t4815 * t5469;
t5327 = pkin(2) * t4663;
t5668 = t4991 * t5056;
t5408 = t4815 * t5668;
t5541 = t4996 * t4963;
t5542 = t4992 * t5794;
t5834 = -0.2e1 * t4996;
t4464 = (((t4996 - 0.4e1 / 0.3e1) * t5668 + ((-0.2e1 / 0.3e1 * t4943 + t5573) * t4996 + 0.4e1 / 0.3e1 * t4943 + t5575) * t5034 + (0.4e1 / 0.3e1 * t5798 - 0.2e1 / 0.3e1 * t4921) * pkin(6) * t5614) * t5739 * t5836 + (t5396 * t5754 - ((t4648 + t5757) * t5035 + (-0.4e1 * t4922 + t5541) * t5260) * t5798 + (t5181 * t5889 - t4653 + t4659 + (-t4996 * t5327 + (0.2e1 * t4995 * t5318 - t4996 * t5583 + t4647 + 0.2e1 * t4680) * t5025) * pkin(2) + (-pkin(6) * t5754 + 0.2e1 * t5458) * pkin(1) * t5666) * t5034 + (t4563 * t5035 + (-t5009 + (-t4987 + t5663) * t5025) * t5432) * t5026) * t4990 + ((-0.3e1 * t4996 + 0.3e1) * t4761 * t5408 - (t4996 * t5160 + 0.2e1 * t5262 + ((t5817 + t5592) * t5026 + t4683) * t5825) * t5798 + (((pkin(1) * t5286 + t4590) * t4963 + t5145) * t5639 + ((t4943 + t5576) * t5833 - 0.4e1 * t4943 - 0.2e1 * t4949 + t5227) * t5739) * t5034 - t4584 * t4996 * t5803 + 0.2e1 * t5148 + t4575) * t5012 - t5811 * t4659 * t4991 + (t4590 * t5035 + (-t4963 - t5051 + t5541) * t5432) * t5542 + 0.2e1 * ((t4996 / 0.2e1 - 0.1e1 / 0.2e1) * t5327 + (t4581 * t4996 - t5154 / 0.2e1 - t4581 + (-pkin(6) * t4995 + t4933 * t5035) * t5432) * t5025) * t5791 + t4916 * t5205 * t5834 - t4563 * t5614 + ((t4914 * t5025 + t5009) * t5026 + t5025 * t5010) * t5432) * t5430;
t5682 = t4952 * t4990;
t5336 = -t4996 + t5682;
t5226 = t5336 + 0.1e1;
t4530 = ((t4761 * t5226 - t5470) * t5408 - (-t5011 * t5595 + (t5035 * t5330 + (t5035 * (-t4964 + pkin(1)) * t4990 + (t4915 * t5553 + t5780) * t5026) * t4761) * t4815) * t5798 + ((t4933 * t5012 + t5509) * t4587 + (-(t4949 - t5349) * t4990 + (-pkin(6) * t4922 + t4944 * t5026) * t5012 * t5639 + (-t4990 * t4996 + t5811) * pkin(2) * t4921) * t5739) * t5034 - t4990 * t5148 - t4908 * t5012 * t5205 + t5148 + t4575) * t5288;
t5665 = t4993 * t5035;
t5468 = t4671 * t5665;
t5773 = t4996 * pkin(6);
t5824 = -0.2e1 * t5025;
t4539 = ((-t5239 + ((t4978 - 0.2e1 * t4964 + t5052) * t5647 + pkin(5) * t5303) * t4761) * t4815 * t4992 + ((-t5773 / 0.2e1 + t4933) * t5386 * t5824 + ((-pkin(1) * t5025 * t5469 - t4921 * t5428) * t4815 - t4584) * t5012 + (-t5468 * t5782 + t4761 * (t4933 - t5773)) * t4815 * t5025) * t5034 - t4990 * t5172 + (-t4908 * t5432 + t5159) * t5012 + ((-t4590 - t4677) * t5026 + t4648) * t5011 + t5172) * t4800 * t5456;
t4836 = t4902 * t5027 * t5011 - t4924 * t5036;
t4899 = t5811 * t4963 - pkin(5);
t5369 = t5025 * t5614;
t5211 = t5369 * t5795;
t5151 = t5036 * t5211;
t5617 = t5025 * t5035;
t5389 = t4960 * t5617;
t5308 = pkin(6) * t5389;
t5392 = t4957 * t5617;
t5309 = pkin(6) * t5392;
t5321 = t4992 * t5492;
t5499 = t5027 * t5780;
t5502 = pkin(6) * t5639;
t5600 = t5035 * t5036;
t4722 = ((-t4902 * t4960 - t4957 * t5499) * t5034 + (t4957 * t5882 - t5308) * t5026) * t4990 + (-(t4957 * t5600 + t4960 * t5552) * t5798 + (t4836 * t4957 - t4960 * t5502) * t5034 + (-t4921 * t4960 + t5027 * t5309) * t5645) * t5012 - t4957 * t5321 + (t4899 * t4960 + t4957 * t5151) * t5034 - t5867 * t4957 + t4924 * t5389;
t5447 = t4722 * t5707;
t4710 = t5023 * t5447;
t4725 = ((-t4902 * t4957 + t4960 * t5499) * t5034 + (-t4960 * t5882 - t5309) * t5026) * t4990 + ((0.2e1 * t4957 * t5645 + t4960 * t5600) * t5798 + (-t4836 * t4960 - t4957 * t5502) * t5034 - (t4921 * t4957 + t5027 * t5308) * t5645) * t5012 + t4960 * t5321 + (t4899 * t4957 - t4960 * t5151) * t5034 + t5867 * t4960 + t4924 * t5392;
t5444 = t4725 * t5707;
t4713 = t5024 * t5444;
t4773 = ((-pkin(6) * t5369 - t4902 * t5034) * t5638 + (-t4924 * t5034 - t4992 * t5790) * t5027) * t5012 + t5034 * t5027 * t5211 + (t5803 * t5026 - t5312) * t5619 + ((-t5026 * t5343 + t5496) * t4990 + t5542 - t4921 * t5026) * t5036;
t5417 = t4773 * t5707;
t4767 = t5022 * t5417;
t4428 = t4713 + t4710 + t4767 - t4464 - t4530 + t4539;
t4662 = t4671 ^ 2 * t4816 * t4994;
t5462 = t4695 ^ 2 / t4809 ^ 2 * t5058;
t4686 = t4994 * t5462;
t4593 = t4662 + t4686;
t5457 = t4695 * t5720;
t5616 = t5026 * t4428;
t5801 = pkin(1) * t5035;
t5862 = -0.2e1 * (t4990 * t5208 + (-pkin(5) * t5457 + t4975 * t5754) * t4993) * t5739 - (pkin(1) * t4452 + (t4593 * t5035 + t5616) * pkin(5)) * t5011 - (t5879 * t5570 - t4428 * t5801 + (pkin(1) * t4593 - t5871) * t5026) * t5012;
t5777 = t4526 * pkin(5);
t5513 = t5011 * t5777;
t5648 = t5011 * t4430;
t5861 = (-pkin(1) * t4666 - 0.2e1 * t5513 + t5873) * t5012 - pkin(5) * t5648 + t5280 * t5052;
t5514 = t4525 * t5782;
t5649 = t5011 * t4429;
t5860 = (-pkin(1) * t4664 - 0.2e1 * t5514 + t5872) * t5012 - pkin(5) * t5649 + t5285 * t5052;
t5515 = t4524 * t5782;
t5650 = t5011 * t4428;
t5859 = (-pkin(1) * t4662 - 0.2e1 * t5515 + t5871) * t5012 - pkin(5) * t5650 + t5290 * t5052;
t4512 = t5012 * t4524;
t5136 = -t4464 / 0.2e1 - t4530 / 0.2e1 + t4539 / 0.2e1 + t4710 / 0.2e1 + t4713 / 0.2e1 + t4767 / 0.2e1;
t4416 = t4512 + t5136;
t4611 = t4746 + t4663 / 0.2e1;
t5854 = 0.2e1 * t4416 * t5035 - 0.2e1 * t4611 * t5286;
t4513 = t5012 * t4525;
t5135 = -t4465 / 0.2e1 - t4531 / 0.2e1 + t4540 / 0.2e1 + t4711 / 0.2e1 + t4714 / 0.2e1 + t4768 / 0.2e1;
t4417 = t4513 + t5135;
t4612 = t4747 + t4665 / 0.2e1;
t5853 = 0.2e1 * t4417 * t5038 - 0.2e1 * t4612 * t5281;
t4514 = t5012 * t4526;
t5134 = -t4466 / 0.2e1 - t4532 / 0.2e1 + t4541 / 0.2e1 + t4712 / 0.2e1 + t4715 / 0.2e1 + t4769 / 0.2e1;
t4418 = t4514 + t5134;
t4613 = t4748 + t4667 / 0.2e1;
t5852 = 0.2e1 * t4418 * t5041 - 0.2e1 * t4613 * t5276;
t4521 = pkin(1) * t4524;
t5851 = -0.2e1 * t4521;
t4522 = pkin(1) * t4525;
t5850 = -0.2e1 * t4522;
t4523 = pkin(1) * t4526;
t5849 = -0.2e1 * t4523;
t5845 = 0.2e1 * t4788;
t5844 = 0.2e1 * t4789;
t5843 = 0.2e1 * t4790;
t5842 = 0.2e1 * t4791;
t5841 = 0.2e1 * t4792;
t5840 = 0.2e1 * t4793;
t5839 = 0.2e1 * t4806;
t5838 = 0.2e1 * t4807;
t5837 = 0.2e1 * t4808;
t5821 = -pkin(1) / 0.2e1;
t5820 = t4452 / 0.2e1;
t5819 = t4453 / 0.2e1;
t5818 = t4454 / 0.2e1;
t5813 = t5566 - 0.1e1;
t4988 = t5011 ^ 2;
t5770 = MDP(4) * t4988;
t5769 = MDP(5) * t4988;
t5768 = MDP(6) * t5011;
t5767 = MDP(7) * t5011;
t5766 = t4524 * t5034;
t5765 = t4524 * t5035;
t5764 = t4525 * t5037;
t5763 = t4525 * t5038;
t5762 = t4526 * t5040;
t5761 = t4526 * t5041;
t5745 = t4722 * t4993;
t5744 = t4723 * t4999;
t5743 = t4724 * t5005;
t5742 = t4725 * t4993;
t5741 = t4726 * t4999;
t5740 = t4727 * t5005;
t5738 = t4761 * t4816;
t5735 = t4762 * t4819;
t5732 = t4763 * t4822;
t5730 = t4773 * t4993;
t5729 = t4774 * t4999;
t5728 = t4775 * t5005;
t5709 = t4815 * t4854;
t5708 = t4815 * t5871;
t5705 = t4818 * t4856;
t5704 = t4818 * t5872;
t5701 = t4821 * t4858;
t5700 = t4821 * t5873;
t5675 = t4990 * t4524;
t5674 = t4990 * t4525;
t5673 = t4990 * t4526;
t5664 = t4996 * t4524;
t5658 = t5002 * t4525;
t5652 = t5008 * t4526;
t5618 = t5025 * t5034;
t5612 = t5028 * t5037;
t5606 = t5031 * t5040;
t5580 = t4755 - t4662;
t5579 = t4756 - t4664;
t5578 = t4757 - t4666;
t5565 = 0.2e1 * t5011;
t5564 = 0.2e1 * t5012;
t5563 = 0.4e1 * t5012;
t5275 = t4815 * t5457;
t5184 = t4761 * t5275;
t5139 = t4993 * t5184;
t5123 = t5026 * t5139;
t5562 = (t5123 - t5650 / 0.2e1) * t5888;
t5273 = t4818 * t5453;
t5183 = t4762 * t5273;
t5138 = t4999 * t5183;
t5121 = t5029 * t5138;
t5561 = (t5121 - t5649 / 0.2e1) * t5887;
t5271 = t4821 * t5449;
t5182 = t4763 * t5271;
t5137 = t5005 * t5182;
t5119 = t5032 * t5137;
t5560 = (t5119 - t5648 / 0.2e1) * t5886;
t5188 = t5011 * t5285;
t4621 = t5029 * t5188;
t4447 = t4621 + t4719 / 0.2e1 + t4718 / 0.2e1 + t4771 / 0.2e1 + (-t5195 / 0.2e1 + (-t5296 / 0.2e1 - t5293 / 0.2e1) * t4802) * t5057;
t5141 = t4672 * t5000 * t5273;
t5122 = t5029 * t5141;
t5357 = -t5658 / 0.2e1;
t5559 = -0.2e1 * (t5011 * t5357 + t4447 * t5038 - t5122 / 0.2e1) * t4818;
t5186 = t5011 * t5280;
t4622 = t5032 * t5186;
t4448 = t4622 + t4721 / 0.2e1 + t4720 / 0.2e1 + t4772 / 0.2e1 + (-t5194 / 0.2e1 + (-t5295 / 0.2e1 - t5292 / 0.2e1) * t4804) * t5057;
t5140 = t4673 * t5006 * t5271;
t5120 = t5032 * t5140;
t5356 = -t5652 / 0.2e1;
t5558 = -0.2e1 * (t5011 * t5356 + t4448 * t5041 - t5120 / 0.2e1) * t4821;
t5190 = t5011 * t5290;
t4620 = t5026 * t5190;
t4446 = t4620 + t4717 / 0.2e1 + t4716 / 0.2e1 + t4770 / 0.2e1 + (-t5196 / 0.2e1 + (-t5297 / 0.2e1 - t5294 / 0.2e1) * t4800) * t5057;
t5142 = t4671 * t4994 * t5275;
t5124 = t5026 * t5142;
t5358 = -t5664 / 0.2e1;
t5557 = -0.2e1 * (t5011 * t5358 + t4446 * t5035 - t5124 / 0.2e1) * t4815;
t5556 = -0.2e1 * (t4524 * t5025 + t5184) * t5035;
t5555 = -0.2e1 * (t4525 * t5028 + t5183) * t5038;
t5554 = -0.2e1 * (t4526 * t5031 + t5182) * t5041;
t5549 = 0.4e1 * t5618;
t5548 = 0.4e1 * t5612;
t5547 = 0.4e1 * t5606;
t5512 = pkin(5) * t4755;
t5511 = pkin(5) * t4756;
t5510 = pkin(5) * t4757;
t5127 = pkin(1) * t4755 + t5871;
t4503 = t5127 - t5515;
t5097 = t4521 + t4854;
t4500 = t5011 * t5512 + t5097;
t4884 = g(1) * t4957 + g(2) * t4960;
t5166 = t4500 * t5012 - t4884 * t5011;
t4473 = t5026 * t4503 + t5035 * t5166;
t5477 = t4473 * t4993 * t5025;
t5126 = pkin(1) * t4756 + t5872;
t4504 = t5126 - t5514;
t5096 = t4522 + t4856;
t4501 = t5011 * t5511 + t5096;
t4885 = g(1) * t4958 + g(2) * t4961;
t5165 = t4501 * t5012 - t4885 * t5011;
t4475 = t5029 * t4504 + t5038 * t5165;
t5476 = t4475 * t4999 * t5028;
t5125 = pkin(1) * t4757 + t5873;
t4505 = t5125 - t5513;
t5095 = t4523 + t4858;
t4502 = t5011 * t5510 + t5095;
t4886 = g(1) * t4959 + g(2) * t4962;
t5164 = t4502 * t5012 - t4886 * t5011;
t4477 = t5032 * t4505 + t5041 * t5164;
t5475 = t4477 * t5005 * t5031;
t5474 = t4525 * t5608;
t5473 = (t4663 + t5274) * (t4663 - t5274) * t5011;
t5472 = (t4665 + t5272) * (t4665 - t5272) * t5011;
t5471 = (t4667 + t5270) * (t4667 - t5270) * t5011;
t5441 = t4728 * t5721;
t5440 = t4729 * t5721;
t5439 = t4730 * t5719;
t5438 = t4731 * t5719;
t5437 = t4732 * t5717;
t5436 = t4733 * t5717;
t5435 = t5035 * t4755;
t5434 = t5038 * t4756;
t5433 = t5041 * t4757;
t5373 = t5011 * t4515;
t5372 = t4525 * t5643;
t5371 = t5011 * t4516;
t5368 = t4524 * t5614;
t5365 = t4526 * t5602;
t5291 = t5038 * t4664;
t5289 = t4761 * t5470;
t5284 = t4762 * t5467;
t5279 = t4763 * t5370;
t5269 = t5011 * t5435;
t5268 = t4815 * t5665 * t4755;
t5267 = t5011 * t5434;
t5266 = t4818 * t5659 * t4756;
t5265 = t5011 * t5433;
t5264 = t4821 * t5653 * t4757;
t5233 = t5035 * t4662;
t5232 = t5041 * t4666;
t5217 = -t4560 + t5364;
t5216 = -t4561 + t5363;
t5215 = -t4562 + t5362;
t5214 = t5814 * t4755;
t5213 = t5814 * t4756;
t5212 = t5814 * t4757;
t5193 = (t4740 - t5274) * t5026 * t5430;
t5192 = (t4741 - t5272) * t5029 * t5425;
t5191 = (t4742 - t5270) * t5032 * t5420;
t5175 = t4615 * t5260;
t5174 = t4617 * t5255;
t5173 = t4619 * t5250;
t4629 = 0.2e1 * t5139;
t4630 = 0.2e1 * t5138;
t4631 = 0.2e1 * t5137;
t4419 = t4512 + t4428;
t4420 = t4513 + t4429;
t4421 = t4514 + t4430;
t4506 = t5628 * t4755 + t5765;
t4508 = t5625 * t4756 + t5763;
t4509 = t5622 * t4757 + t5761;
t5112 = t5011 * t4629;
t5111 = t5011 * t4630;
t5110 = t5011 * t4631;
t5106 = t5011 * t5122;
t5105 = t5011 * t5121;
t5104 = t5011 * t5120;
t5103 = t5011 * t5119;
t5102 = t5011 * t5124;
t5101 = t5011 * t5123;
t5085 = (pkin(1) * t4428 + t5190 * t5890) * t5012 - t4662 * t5782 + t4972;
t5084 = (pkin(1) * t4429 + t5188 * t5890) * t5012 - t4664 * t5782 + t4973;
t5083 = (pkin(1) * t4430 + t5186 * t5890) * t5012 - t4666 * t5782 + t4974;
t5079 = t5035 * t5112 + t5214 * t5833 - t4686 - t5214;
t5078 = t5038 * t5111 + t5213 * t5830 - t4687 - t5213;
t5077 = t5041 * t5110 + t5212 * t5827 - t4688 - t5212;
t5076 = t5435 * t5672 + (t5112 - t5435) * t5026 - t4419;
t5075 = t5434 * t5671 + (t5111 - t5434) * t5029 - t4420;
t5074 = t5433 * t5670 + (t5110 - t5433) * t5032 - t4421;
t4880 = t5774 / 0.2e1 - t4941 / 0.2e1;
t4879 = t5775 / 0.2e1 - t4940 / 0.2e1;
t4878 = t5776 / 0.2e1 - t4939 / 0.2e1;
t4745 = t4757 * t5828;
t4744 = t4756 * t5831;
t4743 = t4755 * t5834;
t4703 = t4745 + t4757;
t4702 = t4744 + t4756;
t4701 = t4743 + t4755;
t4628 = -0.2e1 * t5103;
t4627 = -0.2e1 * t5105;
t4626 = -0.2e1 * t5101;
t4618 = t4748 + 0.2e1 * t4667;
t4616 = t4747 + 0.2e1 * t4665;
t4614 = t4746 + 0.2e1 * t4663;
t4607 = -0.2e1 * t5140;
t4606 = 0.4e1 * t5140;
t4605 = -0.2e1 * t5141;
t4604 = 0.4e1 * t5141;
t4603 = -0.2e1 * t5142;
t4602 = 0.4e1 * t5142;
t4559 = ((t4760 * t5334 - 0.2e1 * t5279) * t4822 + t5578) * t5606 - t5806 * t5173;
t4558 = ((t4759 * t5335 - 0.2e1 * t5284) * t4819 + t5579) * t5612 - t5809 * t5174;
t4557 = ((t4758 * t5336 - 0.2e1 * t5289) * t4816 + t5580) * t5618 - t5812 * t5175;
t4556 = (-0.2e1 * t4666 + t4745 + 0.2e1 * t4757) * t5004 + t5173 * t5547 + ((-0.4e1 * t5004 + 0.2e1) * t5279 + (t5680 * t5806 + t5008) * t4760) * t4822 - t5578;
t4555 = (-0.2e1 * t4664 + t4744 + 0.2e1 * t4756) * t4998 + t5174 * t5548 + ((-0.4e1 * t4998 + 0.2e1) * t5284 + (t5681 * t5809 + t5002) * t4759) * t4819 - t5579;
t4554 = (-0.2e1 * t4662 + t4743 + 0.2e1 * t4755) * t4992 + t5175 * t5549 + ((-0.4e1 * t4992 + 0.2e1) * t5289 + (t5682 * t5812 + t4996) * t4758) * t4816 - t5580;
t4520 = 0.2e1 * t4523;
t4519 = 0.2e1 * t4522;
t4518 = 0.2e1 * t4521;
t4511 = t5012 * t5433 - t4516;
t4510 = t5012 * t5434 - t4517;
t4507 = t5012 * t5435 - t4515;
t4499 = t4886 * t5012 + t5011 * t5095 - t5510 * t5814;
t4498 = t4885 * t5012 + t5011 * t5096 - t5511 * t5814;
t4497 = t4884 * t5012 + t5011 * t5097 - t5512 * t5814;
t4493 = -t5031 * t5137 + t5762;
t4492 = -t5028 * t5138 + t5764;
t4491 = -t5025 * t5139 + t5766;
t4489 = t4516 + 0.2e1 * t5185;
t4487 = t4517 + 0.2e1 * t5187;
t4485 = t4515 + 0.2e1 * t5189;
t4484 = t5365 + (t5827 - 0.1e1) * t5280;
t4483 = t5474 + (t5830 - 0.1e1) * t5285;
t4482 = t5368 + (t5833 - 0.1e1) * t5290;
t4478 = t5041 * t4505 - t5032 * t5164;
t4476 = t5038 * t4504 - t5029 * t5165;
t4474 = t5035 * t4503 - t5026 * t5166;
t4472 = -t4502 * t5622 + (-pkin(5) * t5761 + t4886 * t5032) * t5011 + t5125 * t5041;
t4471 = -t4501 * t5625 + (-pkin(5) * t5763 + t4885 * t5029) * t5011 + t5126 * t5038;
t4470 = -t4500 * t5628 + (-pkin(5) * t5765 + t4884 * t5026) * t5011 + t5127 * t5035;
t4460 = t4472 * t5040 + t4499 * t5031;
t4459 = t4472 * t5031 - t4499 * t5040;
t4458 = t4471 * t5037 + t4498 * t5028;
t4457 = t4471 * t5028 - t4498 * t5037;
t4456 = t4470 * t5034 + t4497 * t5025;
t4455 = t4470 * t5025 - t4497 * t5034;
t4451 = t4454 * t5641 + 0.2e1 * t5280;
t4450 = t4453 * t5643 + 0.2e1 * t5285;
t4449 = t4452 * t5645 + 0.2e1 * t5290;
t4445 = t4509 * t5011 - t4454;
t4444 = t4508 * t5011 - t4453;
t4443 = t4506 * t5011 - t4452;
t4442 = -t4526 * t5633 + t4454 + t4622;
t4441 = -t4525 * t5636 + t4453 + t4621;
t4440 = -t4524 * t5639 + t4452 + t4620;
t4436 = -t5031 * t4445 - t5040 * t5077;
t4435 = -t5040 * t4445 + t5031 * t5077;
t4434 = -t5028 * t4444 - t5037 * t5078;
t4433 = -t5037 * t4444 + t5028 * t5078;
t4432 = -t5025 * t4443 - t5034 * t5079;
t4431 = -t5034 * t4443 + t5025 * t5079;
t4415 = t4613 * t4821 * t5463 + t4418 * t5032;
t4413 = t4612 * t4818 * t5465 + t4417 * t5029;
t4411 = t4611 * t4815 * t5468 + t4416 * t5026;
t4406 = (t5031 * t5032 * t5251 + t4618 * t5634) * t5421 + t5031 * t4421 + t5040 * t5371;
t4405 = (-t4616 * t5644 + t5029 * t5178) * t5426 + t5037 * t4420 - t5028 * t5372;
t4404 = (t5028 * t5029 * t5256 + t4616 * t5637) * t5426 + t5028 * t4420 + t5037 * t5372;
t4403 = (-t4614 * t5646 + t5026 * t5180) * t5431 + t5034 * t4419 - t5025 * t5373;
t4402 = (t5025 * t5026 * t5261 + t4614 * t5640) * t5431 + t5025 * t4419 + t5034 * t5373;
t4401 = (-t4618 * t5642 + t5032 * t5176) * t5421 + t5040 * t4421 - t5031 * t5371;
t4397 = ((0.4e1 * t5137 - 0.2e1 * t5265) * t5012 + 0.2e1 * t5371 + t4606) * t5004 - 0.2e1 * t5074 * t5606 + (t4742 - 0.2e1 * t5270) * t4748 - t5371 + t4607;
t4396 = ((0.4e1 * t5138 - 0.2e1 * t5267) * t5012 + 0.2e1 * t5372 + t4604) * t4998 - 0.2e1 * t5075 * t5612 + (t4741 - 0.2e1 * t5272) * t4747 - t5372 + t4605;
t4395 = ((0.4e1 * t5139 - 0.2e1 * t5269) * t5012 + 0.2e1 * t5373 + t4602) * t4992 - 0.2e1 * t5076 * t5618 + (t4740 - 0.2e1 * t5274) * t4746 - t5373 + t4603;
t4394 = pkin(5) * t5673 + (-pkin(5) * t5103 + pkin(1) * (t5032 * t5818 + t5041 * t5140)) * t5012 + (t4880 * t5042 + t4688 * t5821 - t4971 / 0.2e1 + (t5041 * t5818 - t5120) * pkin(5)) * t5011 + t5137 * t5799 - t5777;
t4393 = (t5029 * t5819 + t5038 * t5141) * t5802 + (t4879 * t5039 + t4687 * t5821 - t4970 / 0.2e1) * t5011 + t5138 * t5800 + (t5674 - t5105 * t5012 + (t5038 * t5819 - t5122) * t5011 - t4525) * pkin(5);
t4392 = (t5026 * t5820 + t5035 * t5142) * t5802 + (t4878 * t5036 + t4686 * t5821 - t4969 / 0.2e1) * t5011 + t5139 * t5801 + (t5675 - t5101 * t5012 + (t5035 * t5820 - t5124) * t5011 - t4524) * pkin(5);
t4391 = (t4520 + t4872 + t5083) * t5041 + t5861 * t5032;
t4390 = (t4519 + t4869 + t5084) * t5038 + t5860 * t5029;
t4389 = (t4518 + t4866 + t5085) * t5035 + t5859 * t5026;
t4388 = t5861 * t5041 + (-0.2e1 * t4880 * t5033 - t5083 + t5849) * t5032;
t4387 = t5860 * t5038 + (-0.2e1 * t4879 * t5030 - t5084 + t5850) * t5029;
t4386 = t5859 * t5035 + (-0.2e1 * t4878 * t5027 - t5085 + t5851) * t5026;
t4385 = t5074 * t5004 + (t5371 + (t4631 - t5265) * t5012 + 0.2e1 * t5140) * t5606 - t5103 + t4421;
t4384 = t5075 * t4998 + (t5372 + (t4630 - t5267) * t5012 + 0.2e1 * t5141) * t5612 - t5105 + t4420;
t4383 = t5076 * t4992 + (t5373 + (t4629 - t5269) * t5012 + 0.2e1 * t5142) * t5618 - t5101 + t4419;
t4382 = (0.2e1 * t4448 * t5031 + t5005 * t5460 + t5011 * t5554) * t5012 + t5031 * t5560 + t4451 * t5040 + (t5031 * t5471 + (t4493 * t4990 - t5762) * t5886) * t5032 + (-0.4e1 * t5008 + t5885) * t4673 * t5732;
t4381 = (0.2e1 * t4447 * t5028 + t4999 * t5461 + t5011 * t5555) * t5012 + t5028 * t5561 + t4450 * t5037 + (t5028 * t5472 + (t4492 * t4990 - t5764) * t5887) * t5029 + (-0.4e1 * t5002 + t5884) * t4672 * t5735;
t4380 = (0.2e1 * t4446 * t5025 + t4993 * t5462 + t5011 * t5556) * t5012 + t5025 * t5562 + t4449 * t5034 + (t5025 * t5473 + (t4491 * t4990 - t5766) * t5888) * t5026 + (-0.4e1 * t4996 + t5883) * t4671 * t5738;
t4379 = (t4448 * t5040 - t4493 * t5633) * t5564 + t5040 * t5560 + (t4990 * t5554 + t5040 * t5471) * t5032 + (-t5012 * t4688 + 0.2e1 * t5365 - t4451 + (t5826 - t5885) * t5280) * t5031;
t4378 = (t4447 * t5037 - t4492 * t5636) * t5564 + t5037 * t5561 + (t4990 * t5555 + t5037 * t5472) * t5029 + (-t5012 * t4687 + 0.2e1 * t5474 - t4450 + (t5829 - t5884) * t5285) * t5028;
t4377 = (t4446 * t5034 - t4491 * t5639) * t5564 + t5034 * t5562 + (t4990 * t5556 + t5034 * t5473) * t5026 + (-t5012 * t4686 + 0.2e1 * t5368 - t4449 + (t5832 - t5883) * t5290) * t5025;
t4376 = ((-0.2e1 * t4568 - 0.2e1 * t4780 - 0.2e1 * t4781 - 0.2e1 * t4787 + t5652) * t4990 + (0.4e1 * t5103 - t4430) * t5012 + 0.2e1 * t5104 - t5652 + (t5813 * t5758 + (-t5215 * t5566 - t4562 + 0.2e1 * t5362) * t5747) * t4822 + t5229) * t5004 + 0.2e1 * ((t5878 * t5012 + t5232 / 0.2e1 + t5604 / 0.2e1) * t5011 + (t5006 * t5746 + (t5676 - t5680) * t5731) * t5271) * t5606 + t5673 + (t4628 + t4430) * t5012 - t5104;
t4375 = ((-0.2e1 * t4566 - 0.2e1 * t4776 - 0.2e1 * t4777 - 0.2e1 * t4785 + t5664) * t4990 + (0.4e1 * t5101 - t4428) * t5012 + 0.2e1 * t5102 - t5664 + (t5813 * t5760 + (-t5217 * t5566 - t4560 + 0.2e1 * t5364) * t5753) * t4816 + t5231) * t4992 + 0.2e1 * ((t5879 * t5012 + t5233 / 0.2e1 + t5616 / 0.2e1) * t5011 + (t4994 * t5752 + (t5678 - t5682) * t5737) * t5275) * t5618 + t5675 + (t4626 + t4428) * t5012 - t5102;
t4374 = ((-0.2e1 * t4567 - 0.2e1 * t4778 - 0.2e1 * t4779 - 0.2e1 * t4786 + t5658) * t4990 + (0.4e1 * t5105 - t4429) * t5012 + 0.2e1 * t5106 - t5658 + (t5813 * t5759 + (-t5216 * t5566 - t4561 + 0.2e1 * t5363) * t5750) * t4819 + t5230) * t4998 + 0.2e1 * ((t5877 * t5012 + t5291 / 0.2e1 + t5610 / 0.2e1) * t5011 + (t5000 * t5749 + (t5677 - t5681) * t5734) * t5273) * t5612 + t5674 + (t4627 + t4429) * t5012 - t5106;
t4373 = (t4606 * t5012 - 0.4e1 * t5137 * t5224) * t5004 + ((t5356 + (t5215 * t5747 - t5758) * t4822 + t5229) * t4990 + (t4628 + t5134) * t5012 - t5032 * t5185 - t5104 + t5652 / 0.2e1 - t4781 / 0.2e1 - t4780 / 0.2e1 - t4787 / 0.2e1 + t4553 * t5732 / 0.2e1 + t4562 * t4822 * t5359 - t4568 / 0.2e1) * t5547 + t4631 * t5680 + (-t5565 * t5878 + t4607) * t5012 + t5137 * t5828 + t4631 + ((t5563 * t5878 + 0.2e1 * t5232 + 0.2e1 * t5604) * t5004 - t5232 - t5604) * t5011;
t4372 = (t4604 * t5012 - 0.4e1 * t5138 * t5225) * t4998 + ((t5357 + (t5216 * t5750 - t5759) * t4819 + t5230) * t4990 + (t4627 + t5135) * t5012 - t5029 * t5187 - t5106 + t5658 / 0.2e1 - t4779 / 0.2e1 - t4778 / 0.2e1 - t4786 / 0.2e1 + t4552 * t5735 / 0.2e1 + t4561 * t4819 * t5360 - t4567 / 0.2e1) * t5548 + t4630 * t5681 + (-t5565 * t5877 + t4605) * t5012 + t5138 * t5831 + t4630 + ((t5563 * t5877 + 0.2e1 * t5291 + 0.2e1 * t5610) * t4998 - t5291 - t5610) * t5011;
t4371 = (t4602 * t5012 - 0.4e1 * t5139 * t5226) * t4992 + ((t5358 + (t5217 * t5753 - t5760) * t4816 + t5231) * t4990 + (t4626 + t5136) * t5012 - t5026 * t5189 - t5102 + t5664 / 0.2e1 - t4777 / 0.2e1 - t4776 / 0.2e1 - t4785 / 0.2e1 + t4551 * t5738 / 0.2e1 + t4560 * t4816 * t5361 - t4566 / 0.2e1) * t5549 + t4629 * t5682 + (-t5565 * t5879 + t4603) * t5012 + t5139 * t5834 + t4629 + ((t5563 * t5879 + 0.2e1 * t5233 + 0.2e1 * t5616) * t4992 - t5233 - t5616) * t5011;
t4370 = ((t4520 + t4858) * t5041 + t5864) * t5040 + t4394 * t5822;
t4369 = ((t5849 - t4858) * t5041 - t5864) * t5031 - 0.2e1 * t5040 * t4394;
t4368 = ((t4519 + t4856) * t5038 + t5863) * t5037 + t4393 * t5823;
t4367 = ((t5850 - t4856) * t5038 - t5863) * t5028 - 0.2e1 * t5037 * t4393;
t4366 = ((t4518 + t4854) * t5035 + t5862) * t5034 + t4392 * t5824;
t4365 = ((t5851 - t4854) * t5035 - t5862) * t5025 - 0.2e1 * t5034 * t4392;
t1 = [(t4524 * t5726 + t4525 * t5724 + t4526 * t5722) * MDP(1) + (t4789 * t5709 + t4791 * t5705 + t4793 * t5701) * MDP(2) + (t4789 * t5708 + t4791 * t5704 + t4793 * t5700) * MDP(3) + ((t4489 * t5722 - t4727 * t5264) * t5032 + (t4487 * t5724 - t4726 * t5266) * t5029 + (t4485 * t5726 - t4725 * t5268) * t5026) * t5770 + ((t4484 * t5840 + t4703 * t5740) * t4821 + (t4483 * t5842 + t4702 * t5741) * t4818 + (t4482 * t5844 + t4701 * t5742) * t4815) * t5769 + ((t4415 * t5840 - t4511 * t5740) * t4821 + (t4413 * t5842 - t4510 * t5741) * t4818 + (t4411 * t5844 - t4507 * t5742) * t4815) * t5768 + ((t4509 * t5740 + t4793 * t5852) * t4821 + (t4508 * t5741 + t4791 * t5853) * t4818 + (t4506 * t5742 + t4789 * t5854) * t4815) * t5767 + (t4419 * t5444 + t4420 * t5443 + t4421 * t5442 + (t4419 * t5726 + t4420 * t5724 + t4421 * t5722) * t5012) * MDP(8) + ((t4391 * t4793 + t4477 * t5740) * t4821 + (t4390 * t4791 + t4475 * t5741) * t4818 + (t4389 * t4789 + t4473 * t5742) * t4815) * MDP(9) + ((t4388 * t4793 + t4478 * t5740) * t4821 + (t4387 * t4791 + t4476 * t5741) * t4818 + (t4386 * t4789 + t4474 * t5742) * t4815) * MDP(10) + ((t4376 * t4793 + t4385 * t5740) * t4821 + (t4374 * t4791 + t4384 * t5741) * t4818 + (t4375 * t4789 + t4383 * t5742) * t4815 + (t4557 * t5440 + t4558 * t5438 + t4559 * t5436) * t5057) * MDP(11) + ((t4373 * t4793 + t4397 * t5740) * t4821 + (t4372 * t4791 + t4396 * t5741) * t4818 + (t4371 * t4789 + t4395 * t5742) * t4815 + (t4554 * t5440 + t4555 * t5438 + t4556 * t5436) * t5057) * MDP(12) + ((t4382 * t4793 + t4436 * t5740) * t4821 + (t4381 * t4791 + t4434 * t5741) * t4818 + (t4380 * t4789 + t4432 * t5742) * t4815 + (t4402 * t5440 + t4404 * t5438 + t4406 * t5436) * t5057) * MDP(13) + ((t4379 * t4793 + t4435 * t5740) * t4821 + (t4378 * t4791 + t4433 * t5741) * t4818 + (t4377 * t4789 + t4431 * t5742) * t4815 + (t4401 * t5436 + t4403 * t5440 + t4405 * t5438) * t5057) * MDP(14) + ((t4440 * t5440 + t4441 * t5438 + t4442 * t5436) * t5057 + (t4725 * t5193 + t4726 * t5192 + t4727 * t5191 + t4789 * t5557 + t4791 * t5559 + t4793 * t5558) * t5011) * MDP(15) + ((t4370 * t4793 + t4477 * t4727) * t4821 + (t4368 * t4791 + t4475 * t4726) * t4818 + (t4366 * t4789 + t4473 * t4725) * t4815 + (t4455 * t5440 + t4457 * t5438 + t4459 * t5436) * t5057) * MDP(16) + ((t4793 * t4369 - t4727 * t5475) * t4821 + (t4791 * t4367 - t4726 * t5476) * t4818 + (t4789 * t4365 - t4725 * t5477) * t4815 + (t4456 * t5440 + t4458 * t5438 + t4460 * t5436) * t5057) * MDP(17) + (t5024 - g(1)) * MDP(18); (t4524 * t5727 + t4525 * t5725 + t4526 * t5723) * MDP(1) + (t4788 * t5709 + t4790 * t5705 + t4792 * t5701) * MDP(2) + (t4788 * t5708 + t4790 * t5704 + t4792 * t5700) * MDP(3) + ((t4489 * t5723 - t4724 * t5264) * t5032 + (t4487 * t5725 - t4723 * t5266) * t5029 + (t4485 * t5727 - t4722 * t5268) * t5026) * t5770 + ((t4484 * t5841 + t4703 * t5743) * t4821 + (t4483 * t5843 + t4702 * t5744) * t4818 + (t4482 * t5845 + t4701 * t5745) * t4815) * t5769 + ((t4415 * t5841 - t4511 * t5743) * t4821 + (t4413 * t5843 - t4510 * t5744) * t4818 + (t4411 * t5845 - t4507 * t5745) * t4815) * t5768 + ((t4509 * t5743 + t4792 * t5852) * t4821 + (t4508 * t5744 + t4790 * t5853) * t4818 + (t4506 * t5745 + t4788 * t5854) * t4815) * t5767 + (t4419 * t5447 + t4420 * t5446 + t4421 * t5445 + (t4419 * t5727 + t4420 * t5725 + t4421 * t5723) * t5012) * MDP(8) + ((t4391 * t4792 + t4477 * t5743) * t4821 + (t4390 * t4790 + t4475 * t5744) * t4818 + (t4389 * t4788 + t4473 * t5745) * t4815) * MDP(9) + ((t4388 * t4792 + t4478 * t5743) * t4821 + (t4387 * t4790 + t4476 * t5744) * t4818 + (t4386 * t4788 + t4474 * t5745) * t4815) * MDP(10) + ((t4376 * t4792 + t4385 * t5743) * t4821 + (t4374 * t4790 + t4384 * t5744) * t4818 + (t4375 * t4788 + t4383 * t5745) * t4815 + (t4557 * t5441 + t4558 * t5439 + t4559 * t5437) * t5057) * MDP(11) + ((t4373 * t4792 + t4397 * t5743) * t4821 + (t4372 * t4790 + t4396 * t5744) * t4818 + (t4371 * t4788 + t4395 * t5745) * t4815 + (t4554 * t5441 + t4555 * t5439 + t4556 * t5437) * t5057) * MDP(12) + ((t4382 * t4792 + t4436 * t5743) * t4821 + (t4381 * t4790 + t4434 * t5744) * t4818 + (t4380 * t4788 + t4432 * t5745) * t4815 + (t4402 * t5441 + t4404 * t5439 + t4406 * t5437) * t5057) * MDP(13) + ((t4379 * t4792 + t4435 * t5743) * t4821 + (t4378 * t4790 + t4433 * t5744) * t4818 + (t4377 * t4788 + t4431 * t5745) * t4815 + (t4401 * t5437 + t4403 * t5441 + t4405 * t5439) * t5057) * MDP(14) + ((t4440 * t5441 + t4441 * t5439 + t4442 * t5437) * t5057 + (t4722 * t5193 + t4723 * t5192 + t4724 * t5191 + t4788 * t5557 + t4790 * t5559 + t4792 * t5558) * t5011) * MDP(15) + ((t4370 * t4792 + t4477 * t4724) * t4821 + (t4368 * t4790 + t4475 * t4723) * t4818 + (t4366 * t4788 + t4473 * t4722) * t4815 + (t4455 * t5441 + t4457 * t5439 + t4459 * t5437) * t5057) * MDP(16) + ((t4792 * t4369 - t4724 * t5475) * t4821 + (t4790 * t4367 - t4723 * t5476) * t4818 + (t4788 * t4365 - t4722 * t5477) * t4815 + (t4456 * t5441 + t4458 * t5439 + t4460 * t5437) * t5057) * MDP(17) + (t5023 - g(2)) * MDP(18); (t4524 * t5715 + t4525 * t5714 + t4526 * t5713) * MDP(1) + (t4806 * t5709 + t4807 * t5705 + t4808 * t5701) * MDP(2) + (t4806 * t5708 + t4807 * t5704 + t4808 * t5700) * MDP(3) + ((t4489 * t5713 - t4775 * t5264) * t5032 + (t4487 * t5714 - t4774 * t5266) * t5029 + (t4485 * t5715 - t4773 * t5268) * t5026) * t5770 + ((t4484 * t5837 + t4703 * t5728) * t4821 + (t4483 * t5838 + t4702 * t5729) * t4818 + (t4482 * t5839 + t4701 * t5730) * t4815) * t5769 + ((t4415 * t5837 - t4511 * t5728) * t4821 + (t4413 * t5838 - t4510 * t5729) * t4818 + (t4411 * t5839 - t4507 * t5730) * t4815) * t5768 + ((t4509 * t5728 + t4808 * t5852) * t4821 + (t4508 * t5729 + t4807 * t5853) * t4818 + (t4506 * t5730 + t4806 * t5854) * t4815) * t5767 + (t4419 * t5417 + t4420 * t5416 + t4421 * t5415 + (t4419 * t5715 + t4420 * t5714 + t4421 * t5713) * t5012) * MDP(8) + ((t4391 * t4808 + t4477 * t5728) * t4821 + (t4390 * t4807 + t4475 * t5729) * t4818 + (t4389 * t4806 + t4473 * t5730) * t4815) * MDP(9) + ((t4388 * t4808 + t4478 * t5728) * t4821 + (t4387 * t4807 + t4476 * t5729) * t4818 + (t4386 * t4806 + t4474 * t5730) * t4815) * MDP(10) + ((t4376 * t4808 + t4385 * t5728) * t4821 + (t4374 * t4807 + t4384 * t5729) * t4818 + (t4375 * t4806 + t4383 * t5730) * t4815 + (t4557 * t5414 + t4558 * t5413 + t4559 * t5412) * t5630) * MDP(11) + ((t4373 * t4808 + t4397 * t5728) * t4821 + (t4372 * t4807 + t4396 * t5729) * t4818 + (t4371 * t4806 + t4395 * t5730) * t4815 + (t4554 * t5414 + t4555 * t5413 + t4556 * t5412) * t5630) * MDP(12) + ((t4382 * t4808 + t4436 * t5728) * t4821 + (t4381 * t4807 + t4434 * t5729) * t4818 + (t4380 * t4806 + t4432 * t5730) * t4815 + (t4402 * t5414 + t4404 * t5413 + t4406 * t5412) * t5630) * MDP(13) + ((t4379 * t4808 + t4435 * t5728) * t4821 + (t4378 * t4807 + t4433 * t5729) * t4818 + (t4377 * t4806 + t4431 * t5730) * t4815 + (t4401 * t5412 + t4403 * t5414 + t4405 * t5413) * t5630) * MDP(14) + (t4773 * t5193 + t4774 * t5192 + t4775 * t5191 + t4807 * t5559 + t4808 * t5558 + t4806 * t5557 + (t4440 * t5414 + t4441 * t5413 + t4442 * t5412) * t5057) * t5011 * MDP(15) + ((t4370 * t4808 + t4477 * t4775) * t4821 + (t4368 * t4807 + t4475 * t4774) * t4818 + (t4366 * t4806 + t4473 * t4773) * t4815 + (t4455 * t5414 + t4457 * t5413 + t4459 * t5412) * t5630) * MDP(16) + ((t4808 * t4369 - t4775 * t5475) * t4821 + (t4807 * t4367 - t4774 * t5476) * t4818 + (t4806 * t4365 - t4773 * t5477) * t4815 + (t4456 * t5414 + t4458 * t5413 + t4460 * t5412) * t5630) * MDP(17) + (t5022 - g(3)) * MDP(18);];
tauX  = t1;
