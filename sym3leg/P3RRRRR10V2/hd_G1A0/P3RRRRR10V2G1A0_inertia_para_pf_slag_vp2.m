% Calculate inertia matrix for parallel robot
% P3RRRRR10V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [3x3]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 00:48
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 23:45:43
% EndTime: 2020-08-06 23:45:52
% DurationCPUTime: 10.15s
% Computational Cost: add. (20127->651), mult. (32391->1000), div. (432->16), fcn. (22590->26), ass. (0->425)
t2074 = 2 * pkin(2);
t2073 = m(2) + m(3);
t2030 = m(3) * pkin(2) + mrSges(2,1);
t1822 = cos(qJ(3,1));
t1799 = t1822 ^ 2;
t1806 = Ifges(3,2) - Ifges(3,1);
t1945 = t1806 * t1799;
t1813 = sin(qJ(3,1));
t2035 = mrSges(3,2) * t1813;
t2072 = t2035 * t2074 - t1945;
t1819 = cos(qJ(3,2));
t1797 = t1819 ^ 2;
t1946 = t1806 * t1797;
t1810 = sin(qJ(3,2));
t2036 = mrSges(3,2) * t1810;
t2071 = t2036 * t2074 - t1946;
t1816 = cos(qJ(3,3));
t1795 = t1816 ^ 2;
t1947 = t1806 * t1795;
t1807 = sin(qJ(3,3));
t2037 = mrSges(3,2) * t1807;
t2070 = t2037 * t2074 - t1947;
t1769 = mrSges(3,2) * pkin(7) - Ifges(3,6);
t1770 = pkin(7) * mrSges(3,1) - Ifges(3,5);
t1677 = -t1769 * t1816 - t1770 * t1807;
t1825 = pkin(6) * mrSges(3,2);
t2048 = pkin(2) * mrSges(3,1);
t1729 = -t1825 + t2048;
t1808 = sin(qJ(2,3));
t1817 = cos(qJ(2,3));
t1886 = -t2030 * pkin(6) - Ifges(3,4) + Ifges(2,5);
t1826 = pkin(6) * mrSges(3,1);
t1828 = pkin(2) * mrSges(3,2);
t1932 = t1826 + t1828;
t1773 = pkin(7) * m(3) + mrSges(3,3);
t1755 = -mrSges(2,2) + t1773;
t2028 = t1755 * pkin(6) + Ifges(2,6);
t2056 = -0.2e1 * Ifges(3,4);
t2069 = -(t1729 * t1807 + t1795 * t2056 + t1816 * (t1806 * t1807 + t1932) - t1886) * t1808 + t1817 * (-t1677 + t2028);
t1678 = -t1769 * t1819 - t1770 * t1810;
t1811 = sin(qJ(2,2));
t1820 = cos(qJ(2,2));
t2068 = -(t1729 * t1810 + t1797 * t2056 + t1819 * (t1806 * t1810 + t1932) - t1886) * t1811 + t1820 * (-t1678 + t2028);
t1679 = -t1769 * t1822 - t1770 * t1813;
t1814 = sin(qJ(2,1));
t1823 = cos(qJ(2,1));
t2067 = -(t1729 * t1813 + t1799 * t2056 + t1822 * (t1806 * t1813 + t1932) - t1886) * t1814 + t1823 * (-t1679 + t2028);
t2066 = Ifges(3,1) + Ifges(2,3);
t1777 = t1816 * pkin(3);
t1742 = t1777 + pkin(2);
t1779 = t1819 * pkin(3);
t1744 = t1779 + pkin(2);
t1781 = t1822 * pkin(3);
t1746 = t1781 + pkin(2);
t2065 = t1773 * pkin(2) + Ifges(2,4);
t2064 = (-t2073 * pkin(6) - (2 * mrSges(2,3))) * pkin(6);
t2034 = Ifges(3,4) * t1807;
t1708 = t2034 + t2048;
t2054 = 0.2e1 * t1816;
t2063 = t1708 * t2054 - t2070;
t2033 = Ifges(3,4) * t1810;
t1709 = t2033 + t2048;
t2053 = 0.2e1 * t1819;
t2062 = t1709 * t2053 - t2071;
t2032 = Ifges(3,4) * t1813;
t1710 = t2032 + t2048;
t2052 = 0.2e1 * t1822;
t2061 = t1710 * t2052 - t2072;
t2057 = -2 * pkin(1);
t2055 = -0.2e1 * t1932;
t1830 = pkin(8) + pkin(7);
t2050 = mrSges(3,3) * pkin(7);
t2049 = pkin(1) * mrSges(3,1);
t2047 = (-Ifges(2,1) - Ifges(3,2));
t1802 = cos(pkin(4));
t2046 = pkin(1) * t1802;
t2045 = pkin(2) * t1802;
t2044 = t1795 * pkin(3);
t2043 = t1797 * pkin(3);
t2042 = t1799 * pkin(3);
t2041 = t1807 * pkin(2);
t1774 = t1807 * pkin(3);
t2040 = t1810 * pkin(2);
t1775 = t1810 * pkin(3);
t2039 = t1813 * pkin(2);
t1776 = t1813 * pkin(3);
t1778 = t1817 * pkin(2);
t1780 = t1820 * pkin(2);
t1782 = t1823 * pkin(2);
t1786 = t1802 ^ 2;
t2038 = (t1786 - 0.1e1) * pkin(6);
t2031 = -0.2e1 * pkin(2) * pkin(3);
t2027 = 0.2e1 * t1826;
t1788 = pkin(2) - t1830;
t1787 = pkin(2) + t1830;
t1736 = t1774 + pkin(6);
t1956 = t1802 * t1808;
t1801 = sin(pkin(4));
t1978 = t1742 * t1801;
t1981 = (t1777 + t1787) * (t1777 + t1788);
t1635 = -t1736 * t1978 + t1956 * t1981;
t1809 = sin(qJ(1,3));
t1818 = cos(qJ(1,3));
t1749 = t1830 * t1808;
t1984 = (pkin(1) + 0.2e1 * t1749) * t1742;
t1626 = -t1635 * t1809 + t1818 * t1984;
t1629 = t1635 * t1818 + t1809 * t1984;
t1966 = t1801 * t1808;
t1662 = -t1736 * t1966 + t1802 * t1742;
t1914 = pkin(1) * t1808 + pkin(7);
t1720 = pkin(8) + t1914;
t1638 = -t1809 * t1662 + t1720 * t1818;
t1641 = t1662 * t1818 + t1809 * t1720;
t1948 = t1802 * t1830;
t1899 = t1742 * t1948;
t1647 = 0.2e1 * t1809 * t1899 + t1818 * t1981;
t1803 = legFrame(3,3);
t1763 = sin(t1803);
t1766 = cos(t1803);
t1796 = t1817 ^ 2;
t1876 = t1818 * t1899;
t1892 = t1809 * t1981;
t1581 = (t1647 * t1766 + 0.2e1 * (t1876 - t1892 / 0.2e1) * t1763) * t1796 + (t1626 * t1766 - t1763 * t1629) * t1817 + (t1638 * t1766 - t1763 * t1641) * t1830;
t1689 = -t1801 * pkin(6) * t1830 - pkin(1) * t2045;
t1718 = pkin(1) * t1948;
t1737 = t1774 - pkin(6);
t1842 = pkin(2) ^ 2;
t1929 = pkin(6) * t2044;
t1930 = pkin(3) * t2046;
t1944 = t1816 * t1817;
t1608 = 0.1e1 / (t1718 * t1944 + (t1689 * t1816 - t1795 * t1930) * t1808 + ((pkin(2) * t1737 * t1816 - t1929) * t1817 + (pkin(1) * t1742 + pkin(2) * t1749 + t1842 * t1817) * t1807) * t1801);
t2026 = t1581 * t1608;
t1738 = t1775 + pkin(6);
t1954 = t1802 * t1811;
t1977 = t1744 * t1801;
t1980 = (t1779 + t1787) * (t1779 + t1788);
t1636 = -t1738 * t1977 + t1954 * t1980;
t1812 = sin(qJ(1,2));
t1821 = cos(qJ(1,2));
t1750 = t1830 * t1811;
t1983 = (pkin(1) + 0.2e1 * t1750) * t1744;
t1627 = -t1636 * t1812 + t1821 * t1983;
t1630 = t1636 * t1821 + t1812 * t1983;
t1964 = t1801 * t1811;
t1663 = -t1738 * t1964 + t1802 * t1744;
t1913 = pkin(1) * t1811 + pkin(7);
t1721 = pkin(8) + t1913;
t1639 = -t1812 * t1663 + t1721 * t1821;
t1642 = t1663 * t1821 + t1812 * t1721;
t1898 = t1744 * t1948;
t1648 = 0.2e1 * t1812 * t1898 + t1821 * t1980;
t1804 = legFrame(2,3);
t1764 = sin(t1804);
t1767 = cos(t1804);
t1798 = t1820 ^ 2;
t1875 = t1821 * t1898;
t1890 = t1812 * t1980;
t1582 = (t1648 * t1767 + 0.2e1 * (t1875 - t1890 / 0.2e1) * t1764) * t1798 + (t1627 * t1767 - t1764 * t1630) * t1820 + (t1639 * t1767 - t1764 * t1642) * t1830;
t1739 = t1775 - pkin(6);
t1928 = pkin(6) * t2043;
t1943 = t1819 * t1820;
t1609 = 0.1e1 / (t1718 * t1943 + (t1689 * t1819 - t1797 * t1930) * t1811 + ((pkin(2) * t1739 * t1819 - t1928) * t1820 + (pkin(1) * t1744 + pkin(2) * t1750 + t1842 * t1820) * t1810) * t1801);
t2025 = t1582 * t1609;
t1740 = t1776 + pkin(6);
t1952 = t1802 * t1814;
t1976 = t1746 * t1801;
t1979 = (t1781 + t1787) * (t1781 + t1788);
t1637 = -t1740 * t1976 + t1952 * t1979;
t1815 = sin(qJ(1,1));
t1824 = cos(qJ(1,1));
t1751 = t1830 * t1814;
t1982 = (pkin(1) + 0.2e1 * t1751) * t1746;
t1628 = -t1637 * t1815 + t1824 * t1982;
t1631 = t1637 * t1824 + t1815 * t1982;
t1962 = t1801 * t1814;
t1664 = -t1740 * t1962 + t1802 * t1746;
t1912 = pkin(1) * t1814 + pkin(7);
t1722 = pkin(8) + t1912;
t1640 = -t1815 * t1664 + t1722 * t1824;
t1643 = t1664 * t1824 + t1815 * t1722;
t1897 = t1746 * t1948;
t1649 = 0.2e1 * t1815 * t1897 + t1824 * t1979;
t1805 = legFrame(1,3);
t1765 = sin(t1805);
t1768 = cos(t1805);
t1800 = t1823 ^ 2;
t1874 = t1824 * t1897;
t1887 = t1815 * t1979;
t1583 = (t1649 * t1768 + 0.2e1 * (t1874 - t1887 / 0.2e1) * t1765) * t1800 + (t1628 * t1768 - t1765 * t1631) * t1823 + (t1640 * t1768 - t1765 * t1643) * t1830;
t1741 = t1776 - pkin(6);
t1927 = pkin(6) * t2042;
t1942 = t1822 * t1823;
t1610 = 0.1e1 / (t1718 * t1942 + (t1689 * t1822 - t1799 * t1930) * t1814 + ((pkin(2) * t1741 * t1822 - t1927) * t1823 + (pkin(1) * t1746 + pkin(2) * t1751 + t1842 * t1823) * t1813) * t1801);
t2024 = t1583 * t1610;
t1584 = ((-0.2e1 * t1876 + t1892) * t1766 + t1647 * t1763) * t1796 + (t1626 * t1763 + t1629 * t1766) * t1817 + (t1638 * t1763 + t1641 * t1766) * t1830;
t2023 = t1584 * t1608;
t1585 = ((-0.2e1 * t1875 + t1890) * t1767 + t1648 * t1764) * t1798 + (t1627 * t1764 + t1630 * t1767) * t1820 + (t1639 * t1764 + t1642 * t1767) * t1830;
t2022 = t1585 * t1609;
t1586 = ((-0.2e1 * t1874 + t1887) * t1768 + t1649 * t1765) * t1800 + (t1628 * t1765 + t1631 * t1768) * t1823 + (t1640 * t1765 + t1643 * t1768) * t1830;
t2021 = t1586 * t1610;
t1671 = t1818 * t1763 + t1809 * t1766;
t1672 = -t1809 * t1763 + t1818 * t1766;
t1752 = t1830 * t1817;
t1686 = t1796 * pkin(2) + t1808 * t1752 - pkin(2);
t1699 = -t1808 * pkin(2) + t1752;
t1759 = t1796 - 0.2e1;
t1911 = t1807 * pkin(6) + pkin(3);
t1968 = t1801 * t1802;
t1846 = ((t1759 * t1774 - pkin(6)) * t1816 + t1807 * t1686) * t1968 - (t1699 * t1816 + (t1911 - 0.2e1 * t2044) * t1808) * t1786 - t1808 * (-t1911 + t2044);
t1696 = t1778 + t1749;
t1693 = pkin(1) + t1696;
t1743 = t1778 + pkin(1);
t1951 = t1802 * t1816;
t1967 = t1801 * t1807;
t1853 = -(t1743 * t1808 + t1830 + (t1808 * t1777 - t1752) * t1817) * t1967 + (pkin(3) * t1944 + t1693) * t1951;
t1587 = -t1671 * t1846 + t1672 * t1853;
t1859 = -t1696 * pkin(6) + t1743 * t1774;
t1917 = t1693 * t2041;
t1623 = 0.1e1 / (pkin(1) * (-t1742 * t1808 + t1752) * t1951 + t1801 * (t1816 * t1859 - t1817 * t1929 + t1917));
t2020 = t1587 * t1623;
t1588 = t1671 * t1853 + t1672 * t1846;
t2019 = t1588 * t1623;
t1673 = t1821 * t1764 + t1812 * t1767;
t1674 = -t1812 * t1764 + t1821 * t1767;
t1753 = t1830 * t1820;
t1687 = t1798 * pkin(2) + t1811 * t1753 - pkin(2);
t1700 = -t1811 * pkin(2) + t1753;
t1760 = t1798 - 0.2e1;
t1910 = t1810 * pkin(6) + pkin(3);
t1845 = ((t1760 * t1775 - pkin(6)) * t1819 + t1810 * t1687) * t1968 - (t1700 * t1819 + (t1910 - 0.2e1 * t2043) * t1811) * t1786 - t1811 * (-t1910 + t2043);
t1697 = t1780 + t1750;
t1694 = pkin(1) + t1697;
t1745 = t1780 + pkin(1);
t1950 = t1802 * t1819;
t1965 = t1801 * t1810;
t1852 = -(t1745 * t1811 + t1830 + (t1811 * t1779 - t1753) * t1820) * t1965 + (pkin(3) * t1943 + t1694) * t1950;
t1589 = -t1673 * t1845 + t1674 * t1852;
t1858 = -t1697 * pkin(6) + t1745 * t1775;
t1916 = t1694 * t2040;
t1624 = 0.1e1 / (pkin(1) * (-t1744 * t1811 + t1753) * t1950 + t1801 * (t1819 * t1858 - t1820 * t1928 + t1916));
t2018 = t1589 * t1624;
t1590 = t1673 * t1852 + t1674 * t1845;
t2017 = t1590 * t1624;
t1675 = t1824 * t1765 + t1815 * t1768;
t1676 = -t1815 * t1765 + t1824 * t1768;
t1754 = t1830 * t1823;
t1688 = t1800 * pkin(2) + t1814 * t1754 - pkin(2);
t1701 = -t1814 * pkin(2) + t1754;
t1761 = t1800 - 0.2e1;
t1909 = t1813 * pkin(6) + pkin(3);
t1844 = ((t1761 * t1776 - pkin(6)) * t1822 + t1813 * t1688) * t1968 - (t1701 * t1822 + (t1909 - 0.2e1 * t2042) * t1814) * t1786 - t1814 * (-t1909 + t2042);
t1698 = t1782 + t1751;
t1695 = pkin(1) + t1698;
t1747 = t1782 + pkin(1);
t1949 = t1802 * t1822;
t1963 = t1801 * t1813;
t1851 = -(t1747 * t1814 + t1830 + (t1814 * t1781 - t1754) * t1823) * t1963 + (pkin(3) * t1942 + t1695) * t1949;
t1591 = -t1675 * t1844 + t1676 * t1851;
t1857 = -t1698 * pkin(6) + t1747 * t1776;
t1915 = t1695 * t2039;
t1625 = 0.1e1 / (pkin(1) * (-t1746 * t1814 + t1754) * t1949 + t1801 * (t1822 * t1857 - t1823 * t1927 + t1915));
t2016 = t1591 * t1625;
t1592 = t1675 * t1851 + t1676 * t1844;
t2015 = t1592 * t1625;
t1901 = t1672 * t1967;
t1940 = t1830 * t1672;
t1941 = t1830 * t1671;
t1593 = -(t1671 * t1817 + t1672 * t1956) * t2044 + (pkin(3) * t1901 + (-pkin(2) * t1671 + t1802 * t1940) * t1817 - (t1672 * t2045 + t1941) * t1808) * t1816 + pkin(2) * t1901;
t1680 = t1699 * t2046;
t1867 = pkin(1) * t1774 - pkin(6) * t1749;
t1920 = pkin(1) * t1956;
t1961 = t1801 * t1817;
t1870 = -(pkin(6) * t1961 + t1920) * t2044 + t1801 * t1917;
t1617 = 0.1e1 / (((t1737 * t1778 + t1867) * t1801 + t1680) * t1816 + t1870);
t2014 = t1593 * t1617;
t1902 = t1671 * t1967;
t1594 = -(-t1671 * t1956 + t1672 * t1817) * t2044 + (-pkin(3) * t1902 + (-pkin(2) * t1672 - t1802 * t1941) * t1817 + (t1671 * t2045 - t1940) * t1808) * t1816 - pkin(2) * t1902;
t2013 = t1594 * t1617;
t1891 = t1674 * t1965;
t1938 = t1830 * t1674;
t1939 = t1830 * t1673;
t1595 = -(t1673 * t1820 + t1674 * t1954) * t2043 + (pkin(3) * t1891 + (-pkin(2) * t1673 + t1802 * t1938) * t1820 - (t1674 * t2045 + t1939) * t1811) * t1819 + pkin(2) * t1891;
t1681 = t1700 * t2046;
t1866 = pkin(1) * t1775 - pkin(6) * t1750;
t1919 = pkin(1) * t1954;
t1960 = t1801 * t1820;
t1869 = -(pkin(6) * t1960 + t1919) * t2043 + t1801 * t1916;
t1618 = 0.1e1 / (((t1739 * t1780 + t1866) * t1801 + t1681) * t1819 + t1869);
t2012 = t1595 * t1618;
t1900 = t1673 * t1965;
t1596 = -(-t1673 * t1954 + t1674 * t1820) * t2043 + (-pkin(3) * t1900 + (-pkin(2) * t1674 - t1802 * t1939) * t1820 + (t1673 * t2045 - t1938) * t1811) * t1819 - pkin(2) * t1900;
t2011 = t1596 * t1618;
t1888 = t1676 * t1963;
t1936 = t1830 * t1676;
t1937 = t1830 * t1675;
t1597 = -(t1675 * t1823 + t1676 * t1952) * t2042 + (pkin(3) * t1888 + (-pkin(2) * t1675 + t1802 * t1936) * t1823 - (t1676 * t2045 + t1937) * t1814) * t1822 + pkin(2) * t1888;
t1682 = t1701 * t2046;
t1865 = pkin(1) * t1776 - pkin(6) * t1751;
t1918 = pkin(1) * t1952;
t1959 = t1801 * t1823;
t1868 = -(pkin(6) * t1959 + t1918) * t2042 + t1801 * t1915;
t1619 = 0.1e1 / (((t1741 * t1782 + t1865) * t1801 + t1682) * t1822 + t1868);
t2010 = t1597 * t1619;
t1889 = t1675 * t1963;
t1598 = -(-t1675 * t1952 + t1676 * t1823) * t2042 + (-pkin(3) * t1889 + (-pkin(2) * t1676 - t1802 * t1937) * t1823 + (t1675 * t2045 - t1936) * t1814) * t1822 - pkin(2) * t1889;
t2009 = t1598 * t1619;
t1833 = m(3) * t1842;
t1790 = 0.2e1 * t2050;
t1832 = m(3) * pkin(7) ^ 2;
t1933 = t1790 + t1832;
t1864 = t1833 + t1933 + t2066;
t1644 = t1864 + t2063;
t1873 = -t2030 + t2037;
t1599 = t2069 * t1801 + t1802 * ((t1755 * t1808 + (mrSges(3,1) * t1816 - t1873) * t1817) * pkin(1) + t1644);
t2008 = t1599 * t1617;
t2007 = t1599 * t1623;
t1645 = t1864 + t2062;
t1872 = -t2030 + t2036;
t1600 = t2068 * t1801 + t1802 * ((t1755 * t1811 + (mrSges(3,1) * t1819 - t1872) * t1820) * pkin(1) + t1645);
t2006 = t1600 * t1618;
t2005 = t1600 * t1624;
t1646 = t1864 + t2061;
t1871 = -t2030 + t2035;
t1601 = t2067 * t1801 + t1802 * ((t1755 * t1814 + (mrSges(3,1) * t1822 - t1871) * t1823) * pkin(1) + t1646);
t2004 = t1601 * t1619;
t2003 = t1601 * t1625;
t1785 = pkin(1) * t1830;
t1840 = pkin(3) ^ 2;
t1896 = t1801 * t1948;
t1923 = -0.2e1 * (t1802 + 0.1e1) * (t1802 - 0.1e1);
t1969 = t1787 * t1788;
t2002 = (t1785 * t1817 + (-t1736 * t1802 * t1961 - t1720 + (t1796 * t1923 + t1786) * t1830) * t1742 + ((t1786 * t1981 - t1795 * t1840 + t1816 * t2031 - t1969) * t1817 - t1736 * t1896) * t1808) / ((t1816 * t1718 - (pkin(6) * t1816 - t2041) * t1978) * t1817 - t1816 * t1742 * t1920 + (t1867 * t1816 + (t1749 + pkin(1)) * t2041) * t1801);
t2001 = (t1785 * t1820 + (-t1738 * t1802 * t1960 - t1721 + (t1798 * t1923 + t1786) * t1830) * t1744 + ((t1786 * t1980 - t1797 * t1840 + t1819 * t2031 - t1969) * t1820 - t1738 * t1896) * t1811) / ((t1718 * t1819 - (pkin(6) * t1819 - t2040) * t1977) * t1820 - t1819 * t1744 * t1919 + (t1866 * t1819 + (t1750 + pkin(1)) * t2040) * t1801);
t2000 = (t1785 * t1823 + (-t1740 * t1802 * t1959 - t1722 + (t1800 * t1923 + t1786) * t1830) * t1746 + ((t1786 * t1979 - t1799 * t1840 + t1822 * t2031 - t1969) * t1823 - t1740 * t1896) * t1814) / ((t1718 * t1822 - (pkin(6) * t1822 - t2039) * t1976) * t1823 - t1822 * t1746 * t1918 + (t1865 * t1822 + (t1751 + pkin(1)) * t2039) * t1801);
t1895 = t1801 * t1956;
t1999 = ((-t1699 * t1968 + t2038) * t1816 + (-pkin(6) * t1895 - t1686 * t1786 + t1817 * t1693) * t1807 + (-(t1759 * t1786 - t1796 + 0.1e1) * t1807 * t1816 + (0.2e1 * t1795 - 0.1e1) * t1895) * pkin(3)) / ((t1801 * t1859 + t1680) * t1816 + t1870);
t1894 = t1801 * t1954;
t1998 = ((-t1700 * t1968 + t2038) * t1819 + (-pkin(6) * t1894 - t1687 * t1786 + t1820 * t1694) * t1810 + (-(t1760 * t1786 - t1798 + 0.1e1) * t1810 * t1819 + (0.2e1 * t1797 - 0.1e1) * t1894) * pkin(3)) / ((t1801 * t1858 + t1681) * t1819 + t1869);
t1893 = t1801 * t1952;
t1997 = ((-t1701 * t1968 + t2038) * t1822 + (-pkin(6) * t1893 - t1688 * t1786 + t1823 * t1695) * t1813 + (-(t1761 * t1786 - t1800 + 0.1e1) * t1813 * t1822 + (0.2e1 * t1799 - 0.1e1) * t1893) * pkin(3)) / ((t1801 * t1857 + t1682) * t1822 + t1868);
t1730 = -t1825 - t2048;
t1731 = -t1826 + t1828;
t1829 = pkin(1) * mrSges(3,2);
t1972 = t1770 * t1808;
t1611 = ((t1730 * t1817 - t1972 - t2049) * t1816 + (t1731 * t1817 + t1769 * t1808 + t1829) * t1807 - t1817 * Ifges(3,3)) * t1801 - t1802 * ((t1914 * mrSges(3,2) - Ifges(3,6)) * t1816 + (t1914 * mrSges(3,1) - Ifges(3,5)) * t1807);
t1996 = t1611 * t1617;
t1971 = t1770 * t1811;
t1612 = ((t1730 * t1820 - t1971 - t2049) * t1819 + (t1731 * t1820 + t1769 * t1811 + t1829) * t1810 - t1820 * Ifges(3,3)) * t1801 - t1802 * ((t1913 * mrSges(3,2) - Ifges(3,6)) * t1819 + (t1913 * mrSges(3,1) - Ifges(3,5)) * t1810);
t1995 = t1612 * t1618;
t1970 = t1770 * t1814;
t1613 = ((t1730 * t1823 - t1970 - t2049) * t1822 + (t1731 * t1823 + t1769 * t1814 + t1829) * t1813 - t1823 * Ifges(3,3)) * t1801 - t1802 * ((t1912 * mrSges(3,2) - Ifges(3,6)) * t1822 + (t1912 * mrSges(3,1) - Ifges(3,5)) * t1813);
t1994 = t1613 * t1619;
t1957 = t1802 * t1807;
t1993 = t1617 * (-t1966 * t2044 + (-pkin(3) * t1957 + t1699 * t1801) * t1816 - pkin(2) * t1957);
t1955 = t1802 * t1810;
t1992 = t1618 * (-t1964 * t2043 + (-pkin(3) * t1955 + t1700 * t1801) * t1819 - pkin(2) * t1955);
t1953 = t1802 * t1813;
t1991 = t1619 * (-t1962 * t2042 + (-pkin(3) * t1953 + t1701 * t1801) * t1822 - pkin(2) * t1953);
t1990 = t1623 * t1644;
t1989 = t1623 * t1677;
t1988 = t1624 * t1645;
t1987 = t1624 * t1678;
t1986 = t1625 * t1646;
t1985 = t1625 * t1679;
t1975 = t1769 * t1807;
t1974 = t1769 * t1810;
t1973 = t1769 * t1813;
t1841 = 0.1e1 / pkin(3);
t1958 = t1801 * t1841;
t1934 = 0.2e1 * t2065;
t1931 = 0.2e1 * pkin(1) * t1755;
t1922 = 0.2e1 * t1968;
t1921 = t1833 + t2047;
t1908 = t1841 * t2002;
t1907 = t1841 * t2001;
t1906 = t1841 * t2000;
t1905 = t1608 * t1958;
t1904 = t1609 * t1958;
t1903 = t1610 * t1958;
t1885 = Ifges(3,3) * t1905;
t1884 = Ifges(3,3) * t1904;
t1883 = Ifges(3,3) * t1903;
t1882 = t1611 * t1905;
t1881 = t1677 * t1905;
t1880 = t1612 * t1904;
t1879 = t1678 * t1904;
t1878 = t1613 * t1903;
t1877 = t1679 * t1903;
t1860 = Ifges(2,2) + Ifges(3,3) - t1832 + t1921;
t1856 = t1790 - t1860;
t1855 = t1921 + t2064 + t2066;
t1854 = -0.2e1 * t2050 + t1860;
t1850 = t2073 * (pkin(1) ^ 2) + Ifges(1,3) + t1933 - t2047 - t2064;
t1789 = 0.2e1 * t2049;
t1580 = -t1945 + (t1854 + t2061) * t1800 + t2067 * t1922 + t1850 + t1813 * t2027 + t1814 * t1931 + (t1825 - t2032) * t2052 + ((t1856 + t2072) * t1800 + 0.2e1 * t1814 * (-t1770 * t1822 + t1973 - t2065) * t1823 + t1813 * t2055 + 0.2e1 * t1945 + (-t1710 * t1800 + t1729 + 0.2e1 * t2032) * t2052 + t1855) * t1786 + ((t1789 + 0.2e1 * t1970) * t1822 + (t1934 - 0.2e1 * t1973) * t1814 + t1871 * t2057) * t1823;
t1579 = -t1946 + (t1825 - t2033) * t2053 + (t1854 + t2062) * t1798 + t1850 + t1810 * t2027 + t1811 * t1931 + ((t1856 + t2071) * t1798 + 0.2e1 * t1811 * (-t1770 * t1819 + t1974 - t2065) * t1820 + t1810 * t2055 + 0.2e1 * t1946 + (-t1709 * t1798 + t1729 + 0.2e1 * t2033) * t2053 + t1855) * t1786 + ((t1789 + 0.2e1 * t1971) * t1819 + (t1934 - 0.2e1 * t1974) * t1811 + t1872 * t2057) * t1820 + t2068 * t1922;
t1578 = -t1947 + t2069 * t1922 + (t1825 - t2034) * t2054 + (t1854 + t2063) * t1796 + t1850 + t1807 * t2027 + t1808 * t1931 + ((t1856 + t2070) * t1796 + 0.2e1 * t1808 * (-t1770 * t1816 + t1975 - t2065) * t1817 + t1807 * t2055 + 0.2e1 * t1947 + (-t1708 * t1796 + t1729 + 0.2e1 * t2034) * t2054 + t1855) * t1786 + ((t1789 + 0.2e1 * t1972) * t1816 + (t1934 - 0.2e1 * t1975) * t1808 + t1873 * t2057) * t1817;
t1577 = Ifges(3,3) * t1906 + t1613 * t1991 + t1679 * t1997;
t1576 = Ifges(3,3) * t1907 + t1612 * t1992 + t1678 * t1998;
t1575 = Ifges(3,3) * t1908 + t1611 * t1993 + t1677 * t1999;
t1574 = t1601 * t1991 + t1646 * t1997 + t1679 * t1906;
t1573 = t1600 * t1992 + t1645 * t1998 + t1678 * t1907;
t1572 = t1599 * t1993 + t1644 * t1999 + t1677 * t1908;
t1571 = -t1586 * t1883 + t1592 * t1985 + t1597 * t1994;
t1570 = -t1585 * t1884 + t1590 * t1987 + t1595 * t1995;
t1569 = -t1584 * t1885 + t1588 * t1989 + t1593 * t1996;
t1568 = -t1583 * t1883 + t1591 * t1985 + t1598 * t1994;
t1567 = -t1582 * t1884 + t1589 * t1987 + t1596 * t1995;
t1566 = -t1581 * t1885 + t1587 * t1989 + t1594 * t1996;
t1565 = t1580 * t1991 + t1601 * t1997 + t1613 * t1906;
t1564 = t1579 * t1992 + t1600 * t1998 + t1612 * t1907;
t1563 = t1578 * t1993 + t1599 * t1999 + t1611 * t1908;
t1562 = -t1586 * t1877 + t1592 * t1986 + t1597 * t2004;
t1561 = -t1585 * t1879 + t1590 * t1988 + t1595 * t2006;
t1560 = -t1584 * t1881 + t1588 * t1990 + t1593 * t2008;
t1559 = -t1583 * t1877 + t1591 * t1986 + t1598 * t2004;
t1558 = -t1582 * t1879 + t1589 * t1988 + t1596 * t2006;
t1557 = -t1581 * t1881 + t1587 * t1990 + t1594 * t2008;
t1556 = t1580 * t2010 - t1586 * t1878 + t1592 * t2003;
t1555 = t1579 * t2012 - t1585 * t1880 + t1590 * t2005;
t1554 = t1578 * t2014 - t1584 * t1882 + t1588 * t2007;
t1553 = t1580 * t2009 - t1583 * t1878 + t1591 * t2003;
t1552 = t1579 * t2011 - t1582 * t1880 + t1589 * t2005;
t1551 = t1578 * t2013 - t1581 * t1882 + t1587 * t2007;
t1 = [t1551 * t2013 + t1552 * t2011 + t1553 * t2009 + t1557 * t2020 + t1558 * t2018 + t1559 * t2016 + m(4) + (-t1566 * t2026 - t1567 * t2025 - t1568 * t2024) * t1958, t1551 * t2014 + t1552 * t2012 + t1553 * t2010 + t1557 * t2019 + t1558 * t2017 + t1559 * t2015 + (-t1566 * t2023 - t1567 * t2022 - t1568 * t2021) * t1958, t1551 * t1993 + t1552 * t1992 + t1553 * t1991 + t1557 * t1999 + t1558 * t1998 + t1559 * t1997 + (t1566 * t2002 + t1567 * t2001 + t1568 * t2000) * t1841; t1554 * t2013 + t1555 * t2011 + t1556 * t2009 + t1560 * t2020 + t1561 * t2018 + t1562 * t2016 + (-t1569 * t2026 - t1570 * t2025 - t1571 * t2024) * t1958, t1554 * t2014 + t1555 * t2012 + t1556 * t2010 + t1560 * t2019 + t1561 * t2017 + t1562 * t2015 + m(4) + (-t1569 * t2023 - t1570 * t2022 - t1571 * t2021) * t1958, t1554 * t1993 + t1555 * t1992 + t1556 * t1991 + t1560 * t1999 + t1561 * t1998 + t1562 * t1997 + (t1569 * t2002 + t1570 * t2001 + t1571 * t2000) * t1841; t1563 * t2013 + t1564 * t2011 + t1565 * t2009 + t1572 * t2020 + t1573 * t2018 + t1574 * t2016 + (-t1575 * t2026 - t1576 * t2025 - t1577 * t2024) * t1958, t1563 * t2014 + t1564 * t2012 + t1565 * t2010 + t1572 * t2019 + t1573 * t2017 + t1574 * t2015 + (-t1575 * t2023 - t1576 * t2022 - t1577 * t2021) * t1958, t1563 * t1993 + t1564 * t1992 + t1565 * t1991 + t1572 * t1999 + t1573 * t1998 + t1574 * t1997 + m(4) + (t1575 * t2002 + t1576 * t2001 + t1577 * t2000) * t1841;];
MX  = t1;
