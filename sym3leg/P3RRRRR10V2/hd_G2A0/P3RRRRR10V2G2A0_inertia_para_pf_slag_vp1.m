% Calculate inertia matrix for parallel robot
% P3RRRRR10V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [3x3]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 02:06
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G2A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 00:59:26
% EndTime: 2020-08-07 00:59:44
% DurationCPUTime: 19.56s
% Computational Cost: add. (24708->822), mult. (43002->1306), div. (432->13), fcn. (27846->26), ass. (0->551)
t2471 = -2 * pkin(2);
t2049 = (pkin(7) + rSges(3,3));
t2417 = (m(3) * t2049);
t1943 = rSges(3,2) * t2417 - Icges(3,6);
t1944 = rSges(3,1) * t2417 - Icges(3,5);
t2031 = sin(qJ(3,3));
t2040 = cos(qJ(3,3));
t1863 = -t1943 * t2040 - t1944 * t2031;
t2059 = (rSges(3,2) ^ 2);
t2061 = (rSges(3,1) ^ 2);
t1924 = m(3) * (-t2059 + t2061) - Icges(3,1) + Icges(3,2);
t2054 = rSges(3,2) * pkin(2);
t2424 = (rSges(3,1) * pkin(6));
t1939 = m(3) * (t2054 + t2424);
t2053 = rSges(3,2) * pkin(6);
t2425 = rSges(3,1) * pkin(2);
t1954 = -t2053 + t2425;
t2020 = t2040 ^ 2;
t2032 = sin(qJ(2,3));
t2041 = cos(qJ(2,3));
t2050 = rSges(2,3) + pkin(6);
t2421 = m(2) * t2050;
t2105 = -rSges(2,2) * t2421 + pkin(6) * t2417 + Icges(2,6);
t2420 = m(3) * t2031;
t2423 = rSges(3,1) * rSges(3,2);
t1980 = m(3) * t2423 - Icges(3,4);
t2428 = -2 * t1980;
t2452 = rSges(2,1) * t2421 + Icges(3,4) - Icges(2,5) - (-pkin(2) * pkin(6) + t2423) * m(3);
t2470 = t2032 * (t1954 * t2420 - t2020 * t2428 + (t1924 * t2031 + t1939) * t2040 + t2452) - (t2105 - t1863) * t2041;
t2034 = sin(qJ(3,2));
t2043 = cos(qJ(3,2));
t1864 = -t1943 * t2043 - t1944 * t2034;
t2022 = t2043 ^ 2;
t2035 = sin(qJ(2,2));
t2044 = cos(qJ(2,2));
t2419 = m(3) * t2034;
t2469 = t2035 * (t1954 * t2419 - t2022 * t2428 + (t1924 * t2034 + t1939) * t2043 + t2452) - (t2105 - t1864) * t2044;
t2037 = sin(qJ(3,1));
t2046 = cos(qJ(3,1));
t1865 = -t1943 * t2046 - t1944 * t2037;
t2024 = t2046 ^ 2;
t2038 = sin(qJ(2,1));
t2047 = cos(qJ(2,1));
t2418 = m(3) * t2037;
t2468 = t2038 * (t1954 * t2418 - t2024 * t2428 + (t1924 * t2037 + t1939) * t2046 + t2452) - (t2105 - t1865) * t2047;
t2005 = t2040 * pkin(3);
t1963 = t2005 + pkin(2);
t2467 = t1963 * t2032;
t2006 = t2043 * pkin(3);
t1964 = t2006 + pkin(2);
t2466 = t1964 * t2035;
t2007 = t2046 * pkin(3);
t1965 = t2007 + pkin(2);
t2465 = t1965 * t2038;
t1891 = t1924 * t2024;
t2233 = rSges(3,2) * t2418;
t2464 = t2233 * t2471 + t1891;
t1890 = t1924 * t2022;
t2234 = rSges(3,2) * t2419;
t2463 = t2234 * t2471 + t1890;
t1889 = t1924 * t2020;
t2235 = rSges(3,2) * t2420;
t2462 = t2235 * t2471 + t1889;
t2255 = m(3) * t2425;
t1998 = 2 * t2255;
t2325 = t1980 * t2031;
t2232 = 0.2e1 * t2325;
t2455 = (-t2232 + t1998) * t2040 + t2462;
t2324 = t1980 * t2034;
t2231 = 0.2e1 * t2324;
t2454 = (-t2231 + t1998) * t2043 + t2463;
t2323 = t1980 * t2037;
t2230 = 0.2e1 * t2323;
t2453 = (-t2230 + t1998) * t2046 + t2464;
t2021 = t2041 ^ 2;
t2056 = pkin(8) + pkin(7);
t2448 = t2021 * t2056;
t2023 = t2044 ^ 2;
t2447 = t2023 * t2056;
t2025 = t2047 ^ 2;
t2446 = t2025 * t2056;
t1979 = t2056 * t2047;
t1910 = -pkin(2) * t2038 + t1979;
t2026 = sin(pkin(4));
t2093 = t2026 * t1910;
t1978 = t2056 * t2044;
t1909 = -pkin(2) * t2035 + t1978;
t2094 = t2026 * t1909;
t1977 = t2056 * t2041;
t1908 = -pkin(2) * t2032 + t1977;
t2095 = t2026 * t1908;
t2060 = rSges(2,2) ^ 2;
t2062 = rSges(2,1) ^ 2;
t2066 = pkin(2) ^ 2;
t2247 = t2059 + t2066;
t2391 = (Icges(3,1) + Icges(2,3));
t2143 = (t2049 ^ 2 + t2247) * m(3) + (t2060 + t2062) * m(2) + t2391;
t2445 = t2143 + t2455;
t2444 = t2143 + t2454;
t2443 = t2143 + t2453;
t2427 = m(2) * rSges(2,2);
t2112 = -rSges(2,1) * t2427 + pkin(2) * t2417 + Icges(2,4);
t2392 = (Icges(2,1) + Icges(3,2));
t2103 = (t2059 - (pkin(2) + t2049) * (-pkin(2) + t2049)) * m(3) + (-t2060 + t2062) * m(2) + Icges(2,2) + Icges(3,3) - t2392;
t2210 = pkin(6) * t2031 + pkin(3);
t2398 = t2020 * pkin(3);
t2408 = pkin(2) * t2040;
t2436 = t2032 * (-t2210 + 0.2e1 * t2398 + t2408) - t2040 * t1977;
t2209 = pkin(6) * t2034 + pkin(3);
t2397 = t2022 * pkin(3);
t2406 = pkin(2) * t2043;
t2435 = t2035 * (-t2209 + 0.2e1 * t2397 + t2406) - t2043 * t1978;
t2208 = pkin(6) * t2037 + pkin(3);
t2396 = t2024 * pkin(3);
t2404 = pkin(2) * t2046;
t2434 = t2038 * (-t2208 + 0.2e1 * t2396 + t2404) - t2046 * t1979;
t1976 = t2056 * t2038;
t2010 = pkin(2) * t2047;
t2249 = t1976 + t2010;
t1896 = pkin(1) + t2249;
t2039 = sin(qJ(1,1));
t2004 = t2037 * pkin(3);
t2140 = (t2025 - 0.2e1) * t2004 - pkin(6);
t2048 = cos(qJ(1,1));
t2294 = t2026 * t2048;
t2433 = t2039 * t1896 + t2140 * t2294;
t1975 = t2056 * t2035;
t2009 = pkin(2) * t2044;
t2250 = t1975 + t2009;
t1895 = pkin(1) + t2250;
t2036 = sin(qJ(1,2));
t2003 = t2034 * pkin(3);
t2141 = (t2023 - 0.2e1) * t2003 - pkin(6);
t2045 = cos(qJ(1,2));
t2295 = t2026 * t2045;
t2432 = t2036 * t1895 + t2141 * t2295;
t1974 = t2056 * t2032;
t2008 = pkin(2) * t2041;
t2251 = t1974 + t2008;
t1894 = pkin(1) + t2251;
t2033 = sin(qJ(1,3));
t2002 = t2031 * pkin(3);
t2142 = (t2021 - 0.2e1) * t2002 - pkin(6);
t2042 = cos(qJ(1,3));
t2296 = t2026 * t2042;
t2431 = t2033 * t1894 + t2142 * t2296;
t2430 = 2 * m(3);
t2429 = -0.2e1 * pkin(1);
t2426 = m(3) * rSges(3,1);
t2027 = cos(pkin(4));
t2017 = t2027 ^ 2;
t2422 = -0.2e1 * t2017 + 0.1e1;
t2416 = pkin(1) * t2027;
t2011 = pkin(1) * t2032;
t2012 = pkin(1) * t2035;
t2013 = pkin(1) * t2038;
t2415 = pkin(2) * t2021;
t2414 = pkin(2) * t2023;
t2413 = pkin(2) * t2025;
t2412 = pkin(2) * t2027;
t2407 = pkin(2) * t2042;
t2405 = pkin(2) * t2045;
t2403 = pkin(2) * t2048;
t2402 = pkin(6) * t2026;
t2395 = t2031 * pkin(2);
t2394 = t2034 * pkin(2);
t2393 = t2037 * pkin(2);
t2390 = 2 * t2426;
t2019 = pkin(2) - t2056;
t2018 = pkin(2) + t2056;
t2028 = legFrame(3,2);
t1990 = sin(t2028);
t1993 = cos(t2028);
t2092 = t1977 * t2032 - pkin(2) + t2415;
t2070 = -t2031 * t2092 - t2040 * t2142;
t2285 = t2031 * t2042;
t2079 = t2092 * t2285;
t1949 = t2011 + t2056;
t2282 = t2032 * t2042;
t2283 = t2032 * t2041;
t2301 = t2026 * t2033;
t2089 = pkin(6) * t2282 - (pkin(2) * t2283 + t1949 - t2448) * t2301;
t1940 = t1974 + pkin(1);
t2111 = t1940 * t2041 + t2415;
t2118 = t2032 * t2210;
t2280 = t2033 * t2041;
t2302 = t2026 * t2032;
t2127 = t2280 * t2302;
t2182 = t1990 * t2282;
t2149 = pkin(3) * t2182;
t2177 = t1993 * t2302;
t2319 = t1990 * t2042;
t1809 = (t2070 * t1993 - t2436 * t2319) * t2017 + (-(t1990 * t2280 - 0.2e1 * t2177) * t2398 + (-t2431 * t1990 - t1993 * t2095) * t2040 - (t1990 * t2079 + t1993 * t2118) * t2026) * t2027 + t2020 * t2149 + ((t1990 * t2127 + t1993 * t2021 - t1993) * t2002 - t1993 * pkin(6)) * t2040 + (-t1990 * t2089 + t1993 * t2111) * t2031 - t2149;
t1966 = t2008 + pkin(1);
t2217 = t1894 * t2395;
t2289 = t2027 * t2040;
t2223 = pkin(1) * t2289;
t2238 = pkin(6) * t2398;
t1845 = 0.1e1 / ((-t2041 * t2238 + (-pkin(6) * t2251 + t1966 * t2002) * t2040 + t2217) * t2026 + (t1977 - t2467) * t2223);
t2389 = t1809 * t1845;
t2029 = legFrame(2,2);
t1991 = sin(t2029);
t1994 = cos(t2029);
t2091 = t1978 * t2035 - pkin(2) + t2414;
t2069 = -t2034 * t2091 - t2043 * t2141;
t2278 = t2034 * t2045;
t2078 = t2091 * t2278;
t1950 = t2012 + t2056;
t2275 = t2035 * t2045;
t2276 = t2035 * t2044;
t2299 = t2026 * t2036;
t2088 = pkin(6) * t2275 - (pkin(2) * t2276 + t1950 - t2447) * t2299;
t1941 = t1975 + pkin(1);
t2110 = t1941 * t2044 + t2414;
t2117 = t2035 * t2209;
t2273 = t2036 * t2044;
t2300 = t2026 * t2035;
t2126 = t2273 * t2300;
t2180 = t1991 * t2275;
t2147 = pkin(3) * t2180;
t2175 = t1994 * t2300;
t2316 = t1991 * t2045;
t1810 = (t2069 * t1994 - t2435 * t2316) * t2017 + (-(t1991 * t2273 - 0.2e1 * t2175) * t2397 + (-t2432 * t1991 - t1994 * t2094) * t2043 - (t1991 * t2078 + t1994 * t2117) * t2026) * t2027 + t2022 * t2147 + ((t1991 * t2126 + t1994 * t2023 - t1994) * t2003 - t1994 * pkin(6)) * t2043 + (-t1991 * t2088 + t1994 * t2110) * t2034 - t2147;
t1967 = t2009 + pkin(1);
t2216 = t1895 * t2394;
t2288 = t2027 * t2043;
t2222 = pkin(1) * t2288;
t2237 = pkin(6) * t2397;
t1846 = 0.1e1 / ((-t2044 * t2237 + (-pkin(6) * t2250 + t1967 * t2003) * t2043 + t2216) * t2026 + (t1978 - t2466) * t2222);
t2388 = t1810 * t1846;
t2030 = legFrame(1,2);
t1992 = sin(t2030);
t1995 = cos(t2030);
t2090 = t1979 * t2038 - pkin(2) + t2413;
t2068 = -t2037 * t2090 - t2046 * t2140;
t2271 = t2037 * t2048;
t2077 = t2090 * t2271;
t1951 = t2013 + t2056;
t2268 = t2038 * t2048;
t2269 = t2038 * t2047;
t2297 = t2026 * t2039;
t2087 = pkin(6) * t2268 - (pkin(2) * t2269 + t1951 - t2446) * t2297;
t1942 = t1976 + pkin(1);
t2109 = t1942 * t2047 + t2413;
t2116 = t2038 * t2208;
t2266 = t2039 * t2047;
t2298 = t2026 * t2038;
t2125 = t2266 * t2298;
t2178 = t1992 * t2268;
t2145 = pkin(3) * t2178;
t2173 = t1995 * t2298;
t2313 = t1992 * t2048;
t1811 = (t2068 * t1995 - t2434 * t2313) * t2017 + (-(t1992 * t2266 - 0.2e1 * t2173) * t2396 + (-t2433 * t1992 - t1995 * t2093) * t2046 - (t1992 * t2077 + t1995 * t2116) * t2026) * t2027 + t2024 * t2145 + ((t1992 * t2125 + t1995 * t2025 - t1995) * t2004 - t1995 * pkin(6)) * t2046 + (-t1992 * t2087 + t1995 * t2109) * t2037 - t2145;
t1968 = t2010 + pkin(1);
t2215 = t1896 * t2393;
t2287 = t2027 * t2046;
t2221 = pkin(1) * t2287;
t2236 = pkin(6) * t2396;
t1847 = 0.1e1 / ((-t2047 * t2236 + (-pkin(6) * t2249 + t1968 * t2004) * t2046 + t2215) * t2026 + (t1979 - t2465) * t2221);
t2387 = t1811 * t1847;
t2176 = t1993 * t2282;
t2148 = pkin(3) * t2176;
t2183 = t1990 * t2302;
t2311 = t1993 * t2042;
t2320 = t1990 * t2032;
t1812 = (t2070 * t1990 + t2436 * t2311) * t2017 + ((t1993 * t2280 + 0.2e1 * t2183) * t2398 + (-t1990 * t2095 + t2431 * t1993) * t2040 + t2026 * (t1993 * t2079 - t2210 * t2320)) * t2027 - t2020 * t2148 + ((t1990 * t2021 - t1993 * t2127 - t1990) * t2002 - t1990 * pkin(6)) * t2040 + (t1990 * t2111 + t1993 * t2089) * t2031 + t2148;
t2386 = t1812 * t1845;
t2174 = t1994 * t2275;
t2146 = pkin(3) * t2174;
t2181 = t1991 * t2300;
t2309 = t1994 * t2045;
t2317 = t1991 * t2035;
t1813 = (t2069 * t1991 + t2435 * t2309) * t2017 + ((t1994 * t2273 + 0.2e1 * t2181) * t2397 + (-t1991 * t2094 + t2432 * t1994) * t2043 + t2026 * (t1994 * t2078 - t2209 * t2317)) * t2027 - t2022 * t2146 + ((t1991 * t2023 - t1994 * t2126 - t1991) * t2003 - t1991 * pkin(6)) * t2043 + (t1991 * t2110 + t1994 * t2088) * t2034 + t2146;
t2385 = t1813 * t1846;
t2172 = t1995 * t2268;
t2144 = pkin(3) * t2172;
t2179 = t1992 * t2298;
t2307 = t1995 * t2048;
t2314 = t1992 * t2038;
t1814 = (t2068 * t1992 + t2434 * t2307) * t2017 + ((t1995 * t2266 + 0.2e1 * t2179) * t2396 + (-t1992 * t2093 + t2433 * t1995) * t2046 + t2026 * (t1995 * t2077 - t2208 * t2314)) * t2027 - t2024 * t2144 + ((t1992 * t2025 - t1995 * t2125 - t1992) * t2004 - t1992 * pkin(6)) * t2046 + (t1992 * t2109 + t1995 * t2087) * t2037 + t2144;
t2384 = t1814 * t1847;
t2014 = pkin(1) * t2056;
t2346 = (t2005 + t2018) * (t2005 + t2019);
t2192 = t2032 * t2346;
t1860 = t2014 - t2192;
t1957 = t2002 + pkin(6);
t2322 = (t2027 + 0.1e1) * (t2027 - 0.1e1);
t2229 = -0.2e1 * t2322;
t2115 = t1963 * t2021 * t2229;
t2189 = t1963 * t2319;
t2124 = t1957 * t2189;
t2133 = t1957 * t2182;
t2136 = t2042 * t2192;
t1918 = pkin(1) + 0.2e1 * t1974;
t2195 = t1918 * t1963 * t2033;
t2262 = t2042 * t2056;
t2164 = t2027 * t2262;
t2198 = (t1963 * t2164 - t2033 * t2346 / 0.2e1) * t2021 * t2026;
t2312 = t1993 * t1949;
t2321 = t1990 * t1949;
t2330 = t1963 * t1993;
t1815 = -0.2e1 * t1990 * t2198 + (((-t1957 * t2330 + t1990 * t2136) * t2027 + t1990 * t2195) * t2026 + (t1993 * t2192 + t2124) * t2017 - t2124 + t1860 * t1993) * t2041 - t1963 * t2312 + (t1993 * t2115 + ((-t1957 * t1993 * t2032 + t2189) * t2027 + t2033 * t2321) * t2026 + (t2133 + t2330) * t2017 - t2133) * t2056;
t1921 = pkin(6) * t2040 - t2395;
t2286 = t2027 * t2056;
t1945 = pkin(1) * t2286;
t2337 = t1945 * t2040;
t1848 = 0.1e1 / ((-t1921 * t1963 * t2026 + t2337) * t2041 + (pkin(1) * t1963 * t2031 - t1921 * t1974) * t2026 - t2223 * t2467);
t2383 = t1815 * t1848;
t2188 = t1963 * t2311;
t2123 = t1957 * t2188;
t2132 = t1957 * t2176;
t2331 = t1963 * t1990;
t1816 = 0.2e1 * t1993 * t2198 + (((-t1957 * t2331 - t1993 * t2136) * t2027 - t1993 * t2195) * t2026 + (t1990 * t2192 - t2123) * t2017 + t2123 + t1860 * t1990) * t2041 - t1963 * t2321 + (t1990 * t2115 - ((t1957 * t2320 + t2188) * t2027 + t2033 * t2312) * t2026 - (t2132 - t2331) * t2017 + t2132) * t2056;
t2382 = t1816 * t1848;
t2345 = (t2006 + t2018) * (t2006 + t2019);
t2191 = t2035 * t2345;
t1861 = t2014 - t2191;
t1959 = t2003 + pkin(6);
t2114 = t1964 * t2023 * t2229;
t2187 = t1964 * t2316;
t2122 = t1959 * t2187;
t2131 = t1959 * t2180;
t2135 = t2045 * t2191;
t1919 = pkin(1) + 0.2e1 * t1975;
t2194 = t1919 * t1964 * t2036;
t2259 = t2045 * t2056;
t2163 = t2027 * t2259;
t2197 = (t1964 * t2163 - t2036 * t2345 / 0.2e1) * t2023 * t2026;
t2310 = t1994 * t1950;
t2318 = t1991 * t1950;
t2328 = t1964 * t1994;
t1817 = -0.2e1 * t1991 * t2197 + (((-t1959 * t2328 + t1991 * t2135) * t2027 + t1991 * t2194) * t2026 + (t1994 * t2191 + t2122) * t2017 - t2122 + t1861 * t1994) * t2044 - t1964 * t2310 + (t1994 * t2114 + ((-t1959 * t1994 * t2035 + t2187) * t2027 + t2036 * t2318) * t2026 + (t2131 + t2328) * t2017 - t2131) * t2056;
t1922 = pkin(6) * t2043 - t2394;
t2336 = t1945 * t2043;
t1849 = 0.1e1 / ((-t1922 * t1964 * t2026 + t2336) * t2044 + (pkin(1) * t1964 * t2034 - t1922 * t1975) * t2026 - t2222 * t2466);
t2381 = t1817 * t1849;
t2186 = t1964 * t2309;
t2121 = t1959 * t2186;
t2130 = t1959 * t2174;
t2329 = t1964 * t1991;
t1818 = 0.2e1 * t1994 * t2197 + (((-t1959 * t2329 - t1994 * t2135) * t2027 - t1994 * t2194) * t2026 + (t1991 * t2191 - t2121) * t2017 + t2121 + t1861 * t1991) * t2044 - t1964 * t2318 + (t1991 * t2114 - ((t1959 * t2317 + t2186) * t2027 + t2036 * t2310) * t2026 - (t2130 - t2329) * t2017 + t2130) * t2056;
t2380 = t1818 * t1849;
t2344 = (t2007 + t2018) * (t2007 + t2019);
t2190 = t2038 * t2344;
t1862 = t2014 - t2190;
t1961 = t2004 + pkin(6);
t2113 = t1965 * t2025 * t2229;
t2185 = t1965 * t2313;
t2120 = t1961 * t2185;
t2129 = t1961 * t2178;
t2134 = t2048 * t2190;
t1920 = pkin(1) + 0.2e1 * t1976;
t2193 = t1920 * t1965 * t2039;
t2256 = t2048 * t2056;
t2162 = t2027 * t2256;
t2196 = (t1965 * t2162 - t2039 * t2344 / 0.2e1) * t2025 * t2026;
t2308 = t1995 * t1951;
t2315 = t1992 * t1951;
t2326 = t1965 * t1995;
t1819 = -0.2e1 * t1992 * t2196 + (((-t1961 * t2326 + t1992 * t2134) * t2027 + t1992 * t2193) * t2026 + (t1995 * t2190 + t2120) * t2017 - t2120 + t1862 * t1995) * t2047 - t1965 * t2308 + (t1995 * t2113 + ((-t1961 * t1995 * t2038 + t2185) * t2027 + t2039 * t2315) * t2026 + (t2129 + t2326) * t2017 - t2129) * t2056;
t1923 = pkin(6) * t2046 - t2393;
t2335 = t1945 * t2046;
t1850 = 0.1e1 / ((-t1923 * t1965 * t2026 + t2335) * t2047 + (pkin(1) * t1965 * t2037 - t1923 * t1976) * t2026 - t2221 * t2465);
t2379 = t1819 * t1850;
t2184 = t1965 * t2307;
t2119 = t1961 * t2184;
t2128 = t1961 * t2172;
t2327 = t1965 * t1992;
t1820 = 0.2e1 * t1995 * t2196 + (((-t1961 * t2327 - t1995 * t2134) * t2027 - t1995 * t2193) * t2026 + (t1992 * t2190 - t2119) * t2017 + t2119 + t1862 * t1992) * t2047 - t1965 * t2315 + (t1992 * t2113 - ((t1961 * t2314 + t2184) * t2027 + t2039 * t2308) * t2026 - (t2128 - t2327) * t2017 + t2128) * t2056;
t2378 = t1820 * t1850;
t2248 = -m(2) * rSges(2,1) - pkin(2) * m(3);
t1898 = t2235 + t2248;
t1936 = -t2417 + t2427;
t1821 = -t2470 * t2026 + t2027 * ((-t1936 * t2032 + (t2040 * t2426 - t1898) * t2041) * pkin(1) + t2445);
t2377 = t1821 * t1845;
t1899 = t2234 + t2248;
t1822 = -t2469 * t2026 + t2027 * ((-t1936 * t2035 + (t2043 * t2426 - t1899) * t2044) * pkin(1) + t2444);
t2376 = t1822 * t1846;
t1900 = t2233 + t2248;
t1823 = -t2468 * t2026 + t2027 * ((-t1936 * t2038 + (t2046 * t2426 - t1900) * t2047) * pkin(1) + t2443);
t2375 = t1823 * t1847;
t2279 = t2033 * t2056;
t1881 = t2027 * t2279 + t2407;
t1884 = -pkin(1) * t2412 - t2056 * t2402;
t1958 = t2002 - pkin(6);
t2154 = 0.2e1 * pkin(2) * t2286;
t2284 = t2032 * t2033;
t2167 = t2027 * t2284;
t2306 = t2018 * t2019;
t2171 = t2027 * t2306;
t2226 = t2027 * t2011;
t2241 = pkin(1) * t2002;
t2243 = -0.2e1 * t2412;
t2263 = t2042 * t1918;
t2064 = pkin(3) ^ 2;
t2305 = t2020 * t2064;
t2334 = t1957 * t2026;
t2374 = ((t2033 * t2154 + 0.2e1 * t1881 * t2005 + (t2305 + t2306) * t2042) * t2021 + (-t2167 * t2305 + ((t2032 * t2243 + t2334) * t2033 + t2263) * t2005 + (pkin(2) * t2334 - t2032 * t2171) * t2033 + pkin(2) * t2263) * t2041 + (t2042 * t1949 + (t1957 * t2302 - t1963 * t2027) * t2033) * t2056) / ((t2337 + (t1958 * t2408 + t2031 * t2066 - t2238) * t2026) * t2041 - t2226 * t2398 + (t1884 * t2032 + t2026 * t2241) * t2040 + t2026 * t1940 * t2395);
t2272 = t2036 * t2056;
t1882 = t2027 * t2272 + t2405;
t1960 = t2003 - pkin(6);
t2277 = t2035 * t2036;
t2166 = t2027 * t2277;
t2225 = t2027 * t2012;
t2240 = pkin(1) * t2003;
t2260 = t2045 * t1919;
t2304 = t2022 * t2064;
t2333 = t1959 * t2026;
t2373 = ((t2036 * t2154 + 0.2e1 * t1882 * t2006 + (t2304 + t2306) * t2045) * t2023 + (-t2166 * t2304 + ((t2035 * t2243 + t2333) * t2036 + t2260) * t2006 + (pkin(2) * t2333 - t2035 * t2171) * t2036 + pkin(2) * t2260) * t2044 + (t2045 * t1950 + (t1959 * t2300 - t1964 * t2027) * t2036) * t2056) / ((t2336 + (t1960 * t2406 + t2034 * t2066 - t2237) * t2026) * t2044 - t2225 * t2397 + (t1884 * t2035 + t2026 * t2240) * t2043 + t2026 * t1941 * t2394);
t2265 = t2039 * t2056;
t1883 = t2027 * t2265 + t2403;
t1962 = t2004 - pkin(6);
t2270 = t2038 * t2039;
t2165 = t2027 * t2270;
t2224 = t2027 * t2013;
t2239 = pkin(1) * t2004;
t2257 = t2048 * t1920;
t2303 = t2024 * t2064;
t2332 = t1961 * t2026;
t2372 = ((t2039 * t2154 + 0.2e1 * t1883 * t2007 + (t2303 + t2306) * t2048) * t2025 + (-t2165 * t2303 + ((t2038 * t2243 + t2332) * t2039 + t2257) * t2007 + (pkin(2) * t2332 - t2038 * t2171) * t2039 + pkin(2) * t2257) * t2047 + (t2048 * t1951 + (t1961 * t2298 - t1965 * t2027) * t2039) * t2056) / ((t2335 + (t1962 * t2404 + t2037 * t2066 - t2236) * t2026) * t2047 - t2224 * t2396 + (t1884 * t2038 + t2026 * t2239) * t2046 + t2026 * t1942 * t2393);
t2220 = pkin(3) * t2285;
t2264 = t2041 * t2042;
t2292 = t2027 * t2033;
t1827 = ((-t2142 * t2292 - t2220 * t2283) * t2040 - (t2092 * t2292 + t2042 * (t1966 * t2032 + t2056 - t2448)) * t2031) * t2026 + (t2027 * t2264 + t2422 * t2284) * t2398 + (t1894 * t2042 + t1908 * t2292) * t2289 + t2033 * t2118 * t2322;
t2371 = t1827 * t1845;
t2219 = pkin(3) * t2278;
t2261 = t2044 * t2045;
t2291 = t2027 * t2036;
t1828 = ((-t2141 * t2291 - t2219 * t2276) * t2043 - (t2091 * t2291 + t2045 * (t1967 * t2035 + t2056 - t2447)) * t2034) * t2026 + (t2027 * t2261 + t2422 * t2277) * t2397 + (t1895 * t2045 + t1909 * t2291) * t2288 + t2036 * t2117 * t2322;
t2370 = t1828 * t1846;
t2218 = pkin(3) * t2271;
t2258 = t2047 * t2048;
t2290 = t2027 * t2039;
t1829 = ((-t2140 * t2290 - t2218 * t2269) * t2046 - (t2090 * t2290 + t2048 * (t1968 * t2038 + t2056 - t2446)) * t2037) * t2026 + (t2027 * t2258 + t2422 * t2270) * t2396 + (t1896 * t2048 + t1910 * t2290) * t2287 + t2039 * t2116 * t2322;
t2369 = t1829 * t1847;
t1872 = t2027 * t2282 + t2280;
t2073 = -t2027 * t2002 + t2095;
t2076 = -(t2027 * t2407 + t2279) * t2032 + (-pkin(2) * t2033 + t2164) * t2041 + t2026 * t2220;
t1830 = -(t1872 * t1993 + t2183) * t2398 + (t1990 * t2073 + t1993 * t2076) * t2040 + (-t1990 * t2027 + t1993 * t2296) * t2395;
t1842 = 0.1e1 / (-(t2041 * t2402 + t2226) * t2398 + ((-pkin(6) * t1974 + t1958 * t2008 + t2241) * t2026 + t1908 * t2416) * t2040 + t2026 * t2217);
t2368 = t1830 * t1842;
t1831 = (t1872 * t1990 - t2177) * t2398 + (-t1990 * t2076 + t1993 * t2073) * t2040 - (t1990 * t2296 + t1993 * t2027) * t2395;
t2367 = t1831 * t1842;
t1873 = t2027 * t2275 + t2273;
t2072 = -t2027 * t2003 + t2094;
t2075 = -(t2027 * t2405 + t2272) * t2035 + (-pkin(2) * t2036 + t2163) * t2044 + t2026 * t2219;
t1832 = -(t1873 * t1994 + t2181) * t2397 + (t1991 * t2072 + t1994 * t2075) * t2043 + (-t1991 * t2027 + t1994 * t2295) * t2394;
t1843 = 0.1e1 / (-(t2044 * t2402 + t2225) * t2397 + ((-pkin(6) * t1975 + t1960 * t2009 + t2240) * t2026 + t1909 * t2416) * t2043 + t2026 * t2216);
t2366 = t1832 * t1843;
t1833 = (t1873 * t1991 - t2175) * t2397 + (-t1991 * t2075 + t1994 * t2072) * t2043 - (t1991 * t2295 + t1994 * t2027) * t2394;
t2365 = t1833 * t1843;
t1874 = t2027 * t2268 + t2266;
t2071 = -t2027 * t2004 + t2093;
t2074 = -(t2027 * t2403 + t2265) * t2038 + (-pkin(2) * t2039 + t2162) * t2047 + t2026 * t2218;
t1834 = -(t1874 * t1995 + t2179) * t2396 + (t1992 * t2071 + t1995 * t2074) * t2046 + (-t1992 * t2027 + t1995 * t2294) * t2393;
t1844 = 0.1e1 / (-(t2047 * t2402 + t2224) * t2396 + ((-pkin(6) * t1976 + t1962 * t2010 + t2239) * t2026 + t1910 * t2416) * t2046 + t2026 * t2215);
t2364 = t1834 * t1844;
t1835 = (t1874 * t1992 - t2173) * t2396 + (-t1992 * t2074 + t1995 * t2071) * t2046 - (t1992 * t2294 + t1995 * t2027) * t2393;
t2363 = t1835 * t1844;
t1929 = (t2059 + t2061) * m(3) + Icges(3,3);
t1953 = t2053 + t2425;
t1956 = t2054 - t2424;
t2051 = pkin(1) * rSges(3,2);
t2052 = pkin(1) * rSges(3,1);
t2340 = t1944 * t2032;
t1836 = ((-t2340 - m(3) * (t1953 * t2041 + t2052)) * t2040 + (t2032 * t1943 + m(3) * (t1956 * t2041 + t2051)) * t2031 - t1929 * t2041) * t2026 - (-t2031 * Icges(3,5) - Icges(3,6) * t2040 + (rSges(3,1) * t2031 + rSges(3,2) * t2040) * m(3) * (t2049 + t2011)) * t2027;
t2362 = t1836 * t1842;
t2339 = t1944 * t2035;
t1837 = ((-t2339 - m(3) * (t1953 * t2044 + t2052)) * t2043 + (t2035 * t1943 + m(3) * (t1956 * t2044 + t2051)) * t2034 - t1929 * t2044) * t2026 - (-t2034 * Icges(3,5) - Icges(3,6) * t2043 + (rSges(3,1) * t2034 + rSges(3,2) * t2043) * m(3) * (t2049 + t2012)) * t2027;
t2361 = t1837 * t1843;
t2338 = t1944 * t2038;
t1838 = ((-t2338 - m(3) * (t1953 * t2047 + t2052)) * t2046 + (t2038 * t1943 + m(3) * (t1956 * t2047 + t2051)) * t2037 - t1929 * t2047) * t2026 - (-t2037 * Icges(3,5) - Icges(3,6) * t2046 + (rSges(3,1) * t2037 + rSges(3,2) * t2046) * m(3) * (t2049 + t2013)) * t2027;
t2360 = t1838 * t1844;
t2170 = t2031 * t2301;
t2359 = t1842 * (-(-t2167 + t2264) * t2398 + (-pkin(3) * t2170 - t1881 * t2041 - t2032 * (-pkin(2) * t2292 + t2262)) * t2040 - pkin(2) * t2170);
t2169 = t2034 * t2299;
t2358 = t1843 * (-(-t2166 + t2261) * t2397 + (-pkin(3) * t2169 - t1882 * t2044 - t2035 * (-pkin(2) * t2291 + t2259)) * t2043 - pkin(2) * t2169);
t2168 = t2037 * t2297;
t2357 = t1844 * (-(-t2165 + t2258) * t2396 + (-pkin(3) * t2168 - t1883 * t2047 - t2038 * (-pkin(2) * t2290 + t2256)) * t2046 - pkin(2) * t2168);
t2356 = t1845 * t2445;
t2355 = t1845 * t1863;
t2354 = t1846 * t2444;
t2353 = t1846 * t1864;
t2352 = t1847 * t2443;
t2351 = t1847 * t1865;
t2065 = 0.1e1 / pkin(3);
t2350 = t1848 * t2065;
t2349 = t1849 * t2065;
t2348 = t1850 * t2065;
t2347 = t1929 * t2065;
t2343 = t1943 * t2031;
t2342 = t1943 * t2034;
t2341 = t1943 * t2037;
t2293 = t2026 * t2065;
t2063 = pkin(6) ^ 2;
t2246 = pkin(1) ^ 2 + t2063;
t2244 = -2 * t1939;
t2242 = t1936 * t2429;
t2228 = -0.2e1 * t2026 * t2027;
t2227 = pkin(6) * t2390;
t2207 = t1836 * t2350;
t2206 = t1837 * t2349;
t2205 = t1838 * t2348;
t2204 = t1863 * t2350;
t2203 = t1848 * t2347;
t2202 = t1864 * t2349;
t2201 = t1849 * t2347;
t2200 = t1865 * t2348;
t2199 = t1850 * t2347;
t2155 = 2 * t2112;
t2139 = t2293 * t2374;
t2138 = t2293 * t2373;
t2137 = t2293 * t2372;
t2102 = Icges(1,3) + ((pkin(7) ^ 2) + t2061 + ((2 * pkin(7) + rSges(3,3)) * rSges(3,3)) + t2246) * m(3) + (t2060 + ((2 * pkin(6) + rSges(2,3)) * rSges(2,3)) + t2246) * m(2) + (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + t2392;
t2083 = -(rSges(2,1) + t2050) * (-rSges(2,1) + t2050) * m(2) + (-t2061 - t2063 + t2247) * m(3) + t2391 - t2392;
t2001 = t2053 * t2430;
t2000 = pkin(1) * t2390;
t1999 = -2 * t2255;
t1928 = t1954 * t2430;
t1901 = 0.2e1 * t1924;
t1808 = (((t2230 + t1999) * t2046 - t2103 - t2464) * t2025 - 0.2e1 * (t1944 * t2046 + t2112 - t2341) * t2269 + t1901 * t2024 + (t1928 - 0.4e1 * t2323) * t2046 + t2037 * t2244 + t2083) * t2017 + t2468 * t2228 + (t2103 + t2453) * t2025 + ((t2000 + 0.2e1 * t2338) * t2046 + (t2155 - 0.2e1 * t2341) * t2038 + t1900 * t2429) * t2047 - t1891 + (t2230 + t2001) * t2046 + t2038 * t2242 + t2037 * t2227 + t2102;
t1807 = (((t2231 + t1999) * t2043 - t2103 - t2463) * t2023 - 0.2e1 * (t1944 * t2043 + t2112 - t2342) * t2276 + t1901 * t2022 + (t1928 - 0.4e1 * t2324) * t2043 + t2034 * t2244 + t2083) * t2017 + t2469 * t2228 + (t2103 + t2454) * t2023 + ((t2000 + 0.2e1 * t2339) * t2043 + (t2155 - 0.2e1 * t2342) * t2035 + t1899 * t2429) * t2044 - t1890 + (t2231 + t2001) * t2043 + t2035 * t2242 + t2034 * t2227 + t2102;
t1806 = (((t2232 + t1999) * t2040 - t2103 - t2462) * t2021 - 0.2e1 * (t1944 * t2040 + t2112 - t2343) * t2283 + t1901 * t2020 + (t1928 - 0.4e1 * t2325) * t2040 + t2031 * t2244 + t2083) * t2017 + t2470 * t2228 + (t2103 + t2455) * t2021 + ((t2000 + 0.2e1 * t2340) * t2040 + (t2155 - 0.2e1 * t2343) * t2032 + t1898 * t2429) * t2041 - t1889 + (t2232 + t2001) * t2040 + t2032 * t2242 + t2031 * t2227 + t2102;
t1805 = t1829 * t2351 + t1838 * t2357 - t1929 * t2137;
t1804 = t1828 * t2353 + t1837 * t2358 - t1929 * t2138;
t1803 = t1827 * t2355 + t1836 * t2359 - t1929 * t2139;
t1802 = t1823 * t2357 + t1829 * t2352 - t1865 * t2137;
t1801 = t1822 * t2358 + t1828 * t2354 - t1864 * t2138;
t1800 = t1821 * t2359 + t1827 * t2356 - t1863 * t2139;
t1799 = t1811 * t2351 + t1819 * t2199 + t1835 * t2360;
t1798 = t1814 * t2351 + t1820 * t2199 + t1834 * t2360;
t1797 = t1810 * t2353 + t1817 * t2201 + t1833 * t2361;
t1796 = t1813 * t2353 + t1818 * t2201 + t1832 * t2361;
t1795 = t1809 * t2355 + t1815 * t2203 + t1831 * t2362;
t1794 = t1812 * t2355 + t1816 * t2203 + t1830 * t2362;
t1793 = t1811 * t2352 + t1819 * t2200 + t1823 * t2363;
t1792 = t1814 * t2352 + t1820 * t2200 + t1823 * t2364;
t1791 = t1810 * t2354 + t1817 * t2202 + t1822 * t2365;
t1790 = t1813 * t2354 + t1818 * t2202 + t1822 * t2366;
t1789 = t1809 * t2356 + t1815 * t2204 + t1821 * t2367;
t1788 = t1812 * t2356 + t1816 * t2204 + t1821 * t2368;
t1787 = t1808 * t2357 + t1823 * t2369 - t1838 * t2137;
t1786 = t1807 * t2358 + t1822 * t2370 - t1837 * t2138;
t1785 = t1806 * t2359 + t1821 * t2371 - t1836 * t2139;
t1784 = t1808 * t2363 + t1811 * t2375 + t1819 * t2205;
t1783 = t1808 * t2364 + t1814 * t2375 + t1820 * t2205;
t1782 = t1807 * t2365 + t1810 * t2376 + t1817 * t2206;
t1781 = t1807 * t2366 + t1813 * t2376 + t1818 * t2206;
t1780 = t1806 * t2367 + t1809 * t2377 + t1815 * t2207;
t1779 = t1806 * t2368 + t1812 * t2377 + t1816 * t2207;
t1 = [t1779 * t2368 + t1781 * t2366 + t1783 * t2364 + t1788 * t2386 + t1790 * t2385 + t1792 * t2384 + m(4) + (t1794 * t2382 + t1796 * t2380 + t1798 * t2378) * t2065, t1779 * t2367 + t1781 * t2365 + t1783 * t2363 + t1788 * t2389 + t1790 * t2388 + t1792 * t2387 + (t1794 * t2383 + t1796 * t2381 + t1798 * t2379) * t2065, t1779 * t2359 + t1781 * t2358 + t1783 * t2357 + t1788 * t2371 + t1790 * t2370 + t1792 * t2369 + (-t1794 * t2374 - t1796 * t2373 - t1798 * t2372) * t2293; t1780 * t2368 + t1782 * t2366 + t1784 * t2364 + t1789 * t2386 + t1791 * t2385 + t1793 * t2384 + (t1795 * t2382 + t1797 * t2380 + t1799 * t2378) * t2065, t1780 * t2367 + t1782 * t2365 + t1784 * t2363 + t1789 * t2389 + t1791 * t2388 + t1793 * t2387 + m(4) + (t1795 * t2383 + t1797 * t2381 + t1799 * t2379) * t2065, t1780 * t2359 + t1782 * t2358 + t1784 * t2357 + t1789 * t2371 + t1791 * t2370 + t1793 * t2369 + (-t1795 * t2374 - t1797 * t2373 - t1799 * t2372) * t2293; t1785 * t2368 + t1786 * t2366 + t1787 * t2364 + t1800 * t2386 + t1801 * t2385 + t1802 * t2384 + (t1803 * t2382 + t1804 * t2380 + t1805 * t2378) * t2065, t1785 * t2367 + t1786 * t2365 + t1787 * t2363 + t1800 * t2389 + t1801 * t2388 + t1802 * t2387 + (t1803 * t2383 + t1804 * t2381 + t1805 * t2379) * t2065, t1785 * t2359 + t1786 * t2358 + t1787 * t2357 + t1800 * t2371 + t1801 * t2370 + t1802 * t2369 + m(4) + (-t1803 * t2374 - t1804 * t2373 - t1805 * t2372) * t2293;];
MX  = t1;
