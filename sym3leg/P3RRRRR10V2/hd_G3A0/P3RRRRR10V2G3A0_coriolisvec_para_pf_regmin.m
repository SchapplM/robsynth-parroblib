% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRRRR10V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3x18]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:25
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 02:46:35
% EndTime: 2020-08-07 02:58:15
% DurationCPUTime: 752.52s
% Computational Cost: add. (9487845->2636), mult. (18655758->4266), div. (125172->38), fcn. (14243331->26), ass. (0->1577)
t3991 = sin(qJ(2,3));
t3992 = sin(qJ(1,3));
t4001 = cos(qJ(1,3));
t4008 = xDP(3);
t3987 = legFrame(3,2);
t3909 = cos(t3987);
t4010 = xDP(1);
t3906 = sin(t3987);
t4009 = xDP(2);
t4913 = t3906 * t4009;
t4170 = -t3909 * t4010 + t4913;
t3720 = -t3992 * t4008 - t4001 * t4170;
t4904 = t3909 * t4009;
t3741 = t3906 * t4010 + t4904;
t3930 = pkin(1) * t3991;
t3864 = t3930 + pkin(7);
t3832 = pkin(8) + t3864;
t4011 = pkin(8) + pkin(7);
t3945 = pkin(1) * t4011;
t3838 = t4009 * t3945;
t3839 = t4010 * t3945;
t3990 = sin(qJ(3,3));
t3912 = t3990 * pkin(3);
t3847 = t3912 + pkin(6);
t3976 = cos(pkin(4));
t3952 = t3976 ^ 2;
t4000 = cos(qJ(2,3));
t3961 = t4000 ^ 2;
t3975 = sin(pkin(4));
t3999 = cos(qJ(3,3));
t3916 = t3999 * pkin(3);
t5161 = t3916 + pkin(2);
t4271 = t4010 * t5161;
t4916 = (t3976 + 0.1e1) * (t3976 - 0.1e1);
t4556 = t4011 * t4916;
t4310 = t5161 * t4556;
t3953 = pkin(2) + t4011;
t3954 = pkin(2) - t4011;
t4955 = (t3916 + t3953) * (t3916 + t3954);
t4571 = t3991 * t4955;
t4850 = t3976 * t4011;
t4816 = t4001 * t4008;
t5125 = t3992 * t4170 - t4816;
t4580 = t5125 * t4850;
t4870 = t3975 * t4011;
t4889 = t3975 * t3976;
t4894 = t3952 * t4011;
t4936 = t3847 * t3991;
t4012 = 0.2e1 * t4011;
t4843 = t3991 * t4012;
t3827 = pkin(1) + t4843;
t4949 = t3827 * t5161;
t4964 = t3741 * t5161;
t4970 = t5125 * t3976;
t5085 = t3952 - 0.1e1;
t5190 = 0.2e1 * t5161;
t3606 = ((-t3720 * t4955 + t4580 * t5190) * t3975 - 0.2e1 * t3741 * t4310) * t3961 + ((-t3720 * t4949 - t4571 * t4970) * t3975 + t3838 * t3909 + t3839 * t3906 + t5085 * t3741 * t4571 + ((-t3741 * t4889 - t3952 * t5125 - t4816) * t5161 + (-t3909 * t4271 + t4913 * t5161) * t3992) * t3847) * t4000 - ((t3741 * t4936 + t5125 * t5161) * t3976 + t3720 * t3832) * t4870 + (-t4936 * t5125 + t4964) * t4894 + (t5125 * t4011 * t3847 + (-t3906 * t4271 - t4904 * t5161) * pkin(1)) * t3991 - t4011 * t4964;
t5052 = pkin(6) * t3999;
t5068 = pkin(2) * t3990;
t3802 = t5052 - t5068;
t4845 = t3991 * t3999;
t4515 = t3976 * t4845;
t4929 = t5161 * t3975;
t3831 = pkin(1) * t4850;
t4943 = t3831 * t3999;
t5074 = pkin(1) * t5161;
t4119 = -t4515 * t5074 + (-t3802 * t4929 + t4943) * t4000;
t4804 = t4011 * t3991;
t3702 = (-t3802 * t4804 + t3990 * t5074) * t3975 + t4119;
t3693 = 0.1e1 / t3702;
t4031 = 0.1e1 / pkin(3);
t4973 = t3693 * t4031;
t3598 = t3606 * t4973;
t3591 = pkin(6) * t3598;
t3714 = t4000 * t3720;
t4844 = t3991 * t4000;
t4721 = pkin(2) * t4844;
t4140 = t3961 * t4011 - t4721;
t3735 = -t4140 + t3832;
t3927 = pkin(2) * t4000;
t4767 = t4804 + t3927;
t3790 = pkin(1) + t4767;
t3879 = t4011 * t4000;
t5067 = pkin(2) * t3991;
t3795 = t3879 - t5067;
t3959 = t3999 ^ 2;
t3899 = t3961 - 0.2e1;
t3813 = t3991 * t3879;
t3917 = t3961 * pkin(2);
t4770 = t3813 + t3917;
t5162 = -pkin(2) + t4770;
t4071 = t3899 * t3916 + t5162;
t3824 = t4804 + pkin(1);
t4244 = t3824 * t4000 + t3917;
t4525 = t3975 * t4844;
t4887 = t3975 * t3991;
t4577 = t3741 * t4887;
t4969 = t5125 * t3991;
t4697 = pkin(3) * t4969;
t4888 = t3975 * t3990;
t4897 = (t4000 + 0.1e1) * (t4000 - 0.1e1);
t5056 = pkin(3) * t3959;
t3846 = pkin(6) * t3990 + pkin(3);
t4755 = 0.2e1 * t5056;
t5062 = pkin(2) * t3999;
t5126 = t3991 * (-t3846 + t4755 + t5062) - t3999 * t3879;
t3564 = ((-t3990 * t4071 + t5052) * t3741 + t5126 * t5125) * t3952 + (-(pkin(6) * t3741 * t3991 - t4071 * t5125) * t4888 + (t3714 + 0.2e1 * t4577) * t5056 + ((-pkin(6) * t5125 - t3741 * t3795) * t3975 + t3720 * t3790) * t3999 - pkin(3) * t4577) * t3976 + (pkin(6) * t4969 + (-t3735 * t3975 - t3916 * t4525) * t3720 + (t3916 * t4897 + t4244) * t3741) * t3990 - t3959 * t4697 - t3741 * t5052 + t4697;
t4859 = t3976 * t3999;
t3723 = pkin(1) * (-t3991 * t5161 + t3879) * t4859;
t4819 = t3999 * t4000;
t5158 = t3927 + pkin(1);
t3690 = t3723 + t3975 * ((pkin(2) * t3790 + t3916 * t5158) * t3990 - (pkin(3) * t4819 + t4767) * t5052);
t3553 = t3564 / t3690;
t4645 = t4011 * t3553;
t4786 = -t4645 + t3591;
t5195 = t3991 * t4786;
t3994 = sin(qJ(2,2));
t3995 = sin(qJ(1,2));
t4004 = cos(qJ(1,2));
t3988 = legFrame(2,2);
t3910 = cos(t3988);
t3907 = sin(t3988);
t4910 = t3907 * t4009;
t4169 = -t3910 * t4010 + t4910;
t3721 = -t3995 * t4008 - t4004 * t4169;
t4901 = t3910 * t4009;
t3742 = t3907 * t4010 + t4901;
t3931 = pkin(1) * t3994;
t3865 = t3931 + pkin(7);
t3833 = pkin(8) + t3865;
t3993 = sin(qJ(3,2));
t3913 = t3993 * pkin(3);
t3850 = t3913 + pkin(6);
t4003 = cos(qJ(2,2));
t3965 = t4003 ^ 2;
t4002 = cos(qJ(3,2));
t3919 = t4002 * pkin(3);
t5160 = t3919 + pkin(2);
t4270 = t4010 * t5160;
t4309 = t5160 * t4556;
t4954 = (t3919 + t3953) * (t3919 + t3954);
t4570 = t3994 * t4954;
t4811 = t4004 * t4008;
t5123 = t3995 * t4169 - t4811;
t4579 = t5123 * t4850;
t4934 = t3850 * t3994;
t4833 = t3994 * t4012;
t3828 = pkin(1) + t4833;
t4947 = t3828 * t5160;
t4963 = t3742 * t5160;
t4968 = t5123 * t3976;
t5191 = 0.2e1 * t5160;
t3607 = ((-t3721 * t4954 + t4579 * t5191) * t3975 - 0.2e1 * t3742 * t4309) * t3965 + ((-t3721 * t4947 - t4570 * t4968) * t3975 + t3838 * t3910 + t3839 * t3907 + t5085 * t3742 * t4570 + ((-t3742 * t4889 - t3952 * t5123 - t4811) * t5160 + (-t3910 * t4270 + t4910 * t5160) * t3995) * t3850) * t4003 - ((t3742 * t4934 + t5123 * t5160) * t3976 + t3721 * t3833) * t4870 + (-t4934 * t5123 + t4963) * t4894 + (t5123 * t4011 * t3850 + (-t3907 * t4270 - t4901 * t5160) * pkin(1)) * t3994 - t4011 * t4963;
t5050 = pkin(6) * t4002;
t5066 = pkin(2) * t3993;
t3804 = t5050 - t5066;
t4835 = t3994 * t4002;
t4512 = t3976 * t4835;
t4926 = t5160 * t3975;
t4942 = t3831 * t4002;
t5073 = pkin(1) * t5160;
t4118 = -t4512 * t5073 + (-t3804 * t4926 + t4942) * t4003;
t4803 = t4011 * t3994;
t3703 = (-t3804 * t4803 + t3993 * t5073) * t3975 + t4118;
t3695 = 0.1e1 / t3703;
t4972 = t3695 * t4031;
t3600 = t3607 * t4972;
t3592 = pkin(6) * t3600;
t3715 = t4003 * t3721;
t4834 = t3994 * t4003;
t4720 = pkin(2) * t4834;
t4139 = t3965 * t4011 - t4720;
t3736 = -t4139 + t3833;
t3928 = pkin(2) * t4003;
t4766 = t4803 + t3928;
t3791 = pkin(1) + t4766;
t3880 = t4011 * t4003;
t5065 = pkin(2) * t3994;
t3796 = t3880 - t5065;
t3963 = t4002 ^ 2;
t3900 = t3965 - 0.2e1;
t3814 = t3994 * t3880;
t3920 = t3965 * pkin(2);
t4769 = t3814 + t3920;
t5163 = -pkin(2) + t4769;
t4070 = t3900 * t3919 + t5163;
t3825 = t4803 + pkin(1);
t4243 = t3825 * t4003 + t3920;
t4521 = t3975 * t4834;
t4884 = t3975 * t3994;
t4576 = t3742 * t4884;
t4967 = t5123 * t3994;
t4694 = pkin(3) * t4967;
t4885 = t3975 * t3993;
t4896 = (t4003 + 0.1e1) * (t4003 - 0.1e1);
t5055 = pkin(3) * t3963;
t3849 = pkin(6) * t3993 + pkin(3);
t4754 = 0.2e1 * t5055;
t5061 = pkin(2) * t4002;
t5124 = t3994 * (-t3849 + t4754 + t5061) - t4002 * t3880;
t3565 = ((-t3993 * t4070 + t5050) * t3742 + t5124 * t5123) * t3952 + (-(pkin(6) * t3742 * t3994 - t4070 * t5123) * t4885 + (t3715 + 0.2e1 * t4576) * t5055 + ((-pkin(6) * t5123 - t3742 * t3796) * t3975 + t3721 * t3791) * t4002 - pkin(3) * t4576) * t3976 + (pkin(6) * t4967 + (-t3736 * t3975 - t3919 * t4521) * t3721 + (t3919 * t4896 + t4243) * t3742) * t3993 - t3963 * t4694 - t3742 * t5050 + t4694;
t4856 = t3976 * t4002;
t3724 = pkin(1) * (-t3994 * t5160 + t3880) * t4856;
t4814 = t4002 * t4003;
t5157 = t3928 + pkin(1);
t3691 = t3724 + ((pkin(2) * t3791 + t3919 * t5157) * t3993 - (pkin(3) * t4814 + t4766) * t5050) * t3975;
t3555 = t3565 / t3691;
t4637 = t4011 * t3555;
t4785 = -t4637 + t3592;
t5194 = t3994 * t4785;
t3997 = sin(qJ(2,1));
t3998 = sin(qJ(1,1));
t4007 = cos(qJ(1,1));
t3989 = legFrame(1,2);
t3911 = cos(t3989);
t3908 = sin(t3989);
t4907 = t3908 * t4009;
t4168 = -t3911 * t4010 + t4907;
t3722 = -t3998 * t4008 - t4007 * t4168;
t4898 = t3911 * t4009;
t3743 = t3908 * t4010 + t4898;
t3932 = pkin(1) * t3997;
t3866 = t3932 + pkin(7);
t3834 = pkin(8) + t3866;
t3996 = sin(qJ(3,1));
t3914 = t3996 * pkin(3);
t3853 = t3914 + pkin(6);
t4006 = cos(qJ(2,1));
t3969 = t4006 ^ 2;
t4005 = cos(qJ(3,1));
t3922 = t4005 * pkin(3);
t5159 = t3922 + pkin(2);
t4269 = t4010 * t5159;
t4308 = t5159 * t4556;
t4953 = (t3922 + t3953) * (t3922 + t3954);
t4569 = t3997 * t4953;
t4806 = t4007 * t4008;
t5121 = t3998 * t4168 - t4806;
t4578 = t5121 * t4850;
t4932 = t3853 * t3997;
t4823 = t3997 * t4012;
t3829 = pkin(1) + t4823;
t4945 = t3829 * t5159;
t4962 = t3743 * t5159;
t4966 = t5121 * t3976;
t5192 = 0.2e1 * t5159;
t3608 = ((-t3722 * t4953 + t4578 * t5192) * t3975 - 0.2e1 * t3743 * t4308) * t3969 + ((-t3722 * t4945 - t4569 * t4966) * t3975 + t3838 * t3911 + t3839 * t3908 + t5085 * t3743 * t4569 + ((-t3743 * t4889 - t3952 * t5121 - t4806) * t5159 + (-t3911 * t4269 + t4907 * t5159) * t3998) * t3853) * t4006 - ((t3743 * t4932 + t5121 * t5159) * t3976 + t3722 * t3834) * t4870 + (-t4932 * t5121 + t4962) * t4894 + (t5121 * t4011 * t3853 + (-t3908 * t4269 - t4898 * t5159) * pkin(1)) * t3997 - t4011 * t4962;
t5048 = pkin(6) * t4005;
t5064 = pkin(2) * t3996;
t3806 = t5048 - t5064;
t4825 = t3997 * t4005;
t4509 = t3976 * t4825;
t4923 = t5159 * t3975;
t4941 = t3831 * t4005;
t5072 = pkin(1) * t5159;
t4117 = -t4509 * t5072 + (-t3806 * t4923 + t4941) * t4006;
t4802 = t4011 * t3997;
t3704 = (-t3806 * t4802 + t3996 * t5072) * t3975 + t4117;
t3697 = 0.1e1 / t3704;
t4971 = t3697 * t4031;
t3602 = t3608 * t4971;
t3593 = pkin(6) * t3602;
t3716 = t4006 * t3722;
t4824 = t3997 * t4006;
t4719 = pkin(2) * t4824;
t4138 = t3969 * t4011 - t4719;
t3737 = -t4138 + t3834;
t3929 = pkin(2) * t4006;
t4765 = t4802 + t3929;
t3792 = pkin(1) + t4765;
t3881 = t4011 * t4006;
t5063 = pkin(2) * t3997;
t3797 = t3881 - t5063;
t3967 = t4005 ^ 2;
t3901 = t3969 - 0.2e1;
t3815 = t3997 * t3881;
t3923 = t3969 * pkin(2);
t4768 = t3815 + t3923;
t5164 = -pkin(2) + t4768;
t4069 = t3901 * t3922 + t5164;
t3826 = t4802 + pkin(1);
t4242 = t3826 * t4006 + t3923;
t4517 = t3975 * t4824;
t4881 = t3975 * t3997;
t4575 = t3743 * t4881;
t4965 = t5121 * t3997;
t4691 = pkin(3) * t4965;
t4882 = t3975 * t3996;
t4895 = (t4006 + 0.1e1) * (t4006 - 0.1e1);
t5054 = pkin(3) * t3967;
t3852 = pkin(6) * t3996 + pkin(3);
t4753 = 0.2e1 * t5054;
t5060 = pkin(2) * t4005;
t5122 = t3997 * (-t3852 + t4753 + t5060) - t4005 * t3881;
t3566 = ((-t3996 * t4069 + t5048) * t3743 + t5122 * t5121) * t3952 + (-(pkin(6) * t3743 * t3997 - t4069 * t5121) * t4882 + (t3716 + 0.2e1 * t4575) * t5054 + ((-pkin(6) * t5121 - t3743 * t3797) * t3975 + t3792 * t3722) * t4005 - pkin(3) * t4575) * t3976 + (pkin(6) * t4965 + (-t3737 * t3975 - t3922 * t4517) * t3722 + (t3922 * t4895 + t4242) * t3743) * t3996 - t3967 * t4691 - t3743 * t5048 + t4691;
t4853 = t3976 * t4005;
t3725 = pkin(1) * (-t3997 * t5159 + t3881) * t4853;
t4809 = t4005 * t4006;
t5156 = t3929 + pkin(1);
t3692 = t3725 + ((pkin(2) * t3792 + t3922 * t5156) * t3996 - (pkin(3) * t4809 + t4765) * t5048) * t3975;
t3557 = t3566 / t3692;
t4630 = t4011 * t3557;
t4784 = -t4630 + t3593;
t5193 = t3997 * t4784;
t4746 = 0.2e1 * t4000;
t4745 = 0.2e1 * t4003;
t4744 = 0.2e1 * t4006;
t5083 = 0.2e1 * t3959 - 0.1e1;
t5080 = 0.2e1 * t3963 - 0.1e1;
t5077 = 0.2e1 * t3967 - 0.1e1;
t3789 = pkin(1) * t3914 - pkin(6) * t4802;
t3854 = t3914 - pkin(6);
t3734 = t3854 * t3929 + t3789;
t5070 = pkin(1) * t3976;
t3752 = t3797 * t5070;
t3746 = t3792 * t5064;
t4872 = t3975 * t4006;
t4701 = pkin(6) * t4872;
t4860 = t3976 * t3997;
t4729 = pkin(1) * t4860;
t3762 = t4701 + t4729;
t4272 = t3975 * t3746 - t3762 * t5054;
t3672 = (t3734 * t3975 + t3752) * t4005 + t4272;
t3666 = 0.1e1 / t3672;
t4120 = t3975 * t3797;
t4861 = t3976 * t3996;
t4066 = -pkin(3) * t4861 + t4120;
t4716 = pkin(3) * t4882;
t3638 = -(t3716 + (t3743 * t3975 + t4966) * t3997) * t5054 + (t5121 * t4716 + (-pkin(2) * t3722 + t4578) * t4006 + (-pkin(2) * t4966 - t3722 * t4011) * t3997 + t4066 * t3743) * t4005 - (t3743 * t3976 - t3975 * t5121) * t5064;
t4587 = t3638 * t4971;
t4188 = t3666 * t3608 * t4587;
t4917 = t3901 * t3952;
t4432 = -t3969 + t4917;
t5189 = (t4432 + 0.1e1) * t4188;
t3788 = pkin(1) * t3913 - pkin(6) * t4803;
t3851 = t3913 - pkin(6);
t3733 = t3851 * t3928 + t3788;
t3751 = t3796 * t5070;
t3745 = t3791 * t5066;
t4875 = t3975 * t4003;
t4702 = pkin(6) * t4875;
t4862 = t3976 * t3994;
t4730 = pkin(1) * t4862;
t3764 = t4702 + t4730;
t4273 = t3975 * t3745 - t3764 * t5055;
t3674 = (t3733 * t3975 + t3751) * t4002 + t4273;
t3670 = 0.1e1 / t3674;
t4121 = t3975 * t3796;
t4863 = t3976 * t3993;
t4067 = -pkin(3) * t4863 + t4121;
t4717 = pkin(3) * t4885;
t3637 = -(t3715 + (t3742 * t3975 + t4968) * t3994) * t5055 + (t5123 * t4717 + (-pkin(2) * t3721 + t4579) * t4003 + (-pkin(2) * t4968 - t3721 * t4011) * t3994 + t4067 * t3742) * t4002 - (t3742 * t3976 - t3975 * t5123) * t5066;
t4596 = t3637 * t4972;
t4195 = t3670 * t3607 * t4596;
t4918 = t3900 * t3952;
t4433 = -t3965 + t4918;
t5188 = (t4433 + 0.1e1) * t4195;
t3787 = pkin(1) * t3912 - pkin(6) * t4804;
t3848 = t3912 - pkin(6);
t3732 = t3848 * t3927 + t3787;
t3750 = t3795 * t5070;
t3744 = t3790 * t5068;
t4878 = t3975 * t4000;
t4703 = pkin(6) * t4878;
t4864 = t3976 * t3991;
t4731 = pkin(1) * t4864;
t3763 = t4703 + t4731;
t4274 = t3975 * t3744 - t3763 * t5056;
t3673 = (t3732 * t3975 + t3750) * t3999 + t4274;
t3668 = 0.1e1 / t3673;
t4122 = t3975 * t3795;
t4865 = t3976 * t3990;
t4068 = -pkin(3) * t4865 + t4122;
t4718 = pkin(3) * t4888;
t3636 = -(t3714 + (t3741 * t3975 + t4970) * t3991) * t5056 + (t5125 * t4718 + (-pkin(2) * t3720 + t4580) * t4000 + (-pkin(2) * t4970 - t3720 * t4011) * t3991 + t4068 * t3741) * t3999 - (t3741 * t3976 - t3975 * t5125) * t5068;
t4605 = t3636 * t4973;
t4202 = t3668 * t3606 * t4605;
t4919 = t3899 * t3952;
t4434 = -t3961 + t4919;
t5187 = (t4434 + 0.1e1) * t4202;
t3524 = pkin(6) * t4630;
t3544 = pkin(7) * t3557;
t3549 = pkin(8) * t3557;
t5010 = t3608 * t3697;
t4498 = -t5010 / 0.2e1;
t4793 = (t3544 + t3549 - t3593 / 0.2e1) * t3914 + pkin(3) * t4498;
t3353 = t3524 + t4793;
t3434 = t3593 - t3544;
t3404 = t3549 - t3434;
t4621 = t3996 * t5010;
t3425 = t4630 - t4621;
t3548 = pkin(1) * t3557;
t5001 = t3638 * t3666;
t3620 = t3976 * t5001;
t4030 = pkin(3) ^ 2;
t4013 = pkin(8) * pkin(7);
t4027 = pkin(8) ^ 2;
t4028 = pkin(7) ^ 2;
t4760 = t4027 + t4028;
t4493 = 0.2e1 * t4013 + t4760;
t4029 = pkin(6) ^ 2;
t4759 = pkin(1) ^ 2 + t4029;
t4175 = t4493 + t4759;
t3794 = t4030 + t4175;
t4033 = pkin(2) ^ 2;
t3798 = -0.2e1 / 0.3e1 * t4013 - t4027 / 0.3e1 - t4028 / 0.3e1 + t4033;
t4893 = t3953 * t3954;
t3816 = pkin(1) * t4893;
t3817 = t4033 + t4493;
t3837 = pkin(1) * t4802;
t3892 = pkin(6) * t3914;
t3895 = pkin(2) * t3922;
t3921 = t3967 * t4030;
t3946 = t4030 + t4033;
t3947 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t3968 = t4006 * t3969;
t4025 = 0.2e1 * pkin(2);
t3588 = pkin(8) * t3602;
t3596 = pkin(1) * t3602;
t4633 = t3996 * t3557;
t3517 = pkin(3) * t4633;
t3590 = pkin(7) * t3602;
t3545 = pkin(6) * t3557;
t4781 = t3545 + t3588;
t4283 = t3517 + t3590 + t4781;
t4162 = t4283 * t3997;
t4372 = t4893 * t3557;
t4490 = t4033 - t4760;
t4620 = t4011 * t5010;
t5174 = t4162 + t3596;
t4063 = t3997 * (pkin(6) * t4372 + (((t3593 - 0.2e1 * t3549) * pkin(7) + pkin(6) * t3588) * t3996 + t4620 + t4490 * t4633) * pkin(3)) + (t3596 + 0.2e1 * t4162) * t3895 + t5174 * t3921;
t4355 = t3997 * t3602;
t3575 = pkin(1) * t4355;
t3547 = pkin(2) * t3557;
t4413 = t3853 * t3547;
t4093 = (t3575 + t4283) * t3922 + t4413;
t4726 = t3826 * t5064;
t4750 = pkin(6) * t5054;
t4105 = -t4729 * t5054 + (t4941 + (t3854 * t5060 + t3996 * t4033 - t4750) * t3975) * t4006 + t3975 * t4726;
t3972 = -0.2e1 * t4013;
t3985 = t4033 / 0.2e1;
t4491 = -t4029 / 0.2e1 - t4030 / 0.2e1 + t3985;
t4123 = t3972 + t4491 - t4760;
t5136 = 0.3e1 * t4493;
t4124 = t4030 + t4759 + t5136;
t4356 = t3996 * t3602;
t4147 = t4356 * t5070;
t3500 = t3817 * t3557;
t4352 = t3996 * t4620;
t4153 = t3500 - t4352;
t4156 = t3620 * t3834 + t3404;
t4165 = 0.2e1 * t3895 + t3921;
t4174 = t3972 + t4030 + t4490;
t4182 = t3853 * t4308;
t4331 = t3853 * t5159 * t5001;
t4185 = t4011 * t4331;
t4588 = t4011 * t5001;
t4327 = t3975 * t4588;
t4186 = t3997 * t4327;
t4591 = t3997 * t5001;
t4328 = t3975 * t4591;
t4263 = 0.2e1 * t4328;
t5143 = t4027 / 0.2e1 + t4028 / 0.2e1;
t4281 = t3985 + t4013 + t5143;
t4282 = t4033 - t5136;
t4631 = t4005 * t3557;
t4396 = pkin(2) * t4631;
t3512 = pkin(3) * t4396;
t4629 = t4030 * t3557;
t3518 = t3967 * t4629;
t4289 = t3996 * t4498;
t4286 = t3500 / 0.2e1 + t3518 / 0.2e1 + t3512 + t4011 * t4289;
t4318 = t3853 * t4569;
t4330 = t4916 * t5001;
t4357 = t3975 * t3602;
t4388 = t5085 * t5001;
t3951 = t3976 * t3952;
t4391 = 0.2e1 * t3951 - 0.2e1 * t3976;
t4622 = t3967 * t5010;
t4410 = pkin(3) * t4622;
t4428 = t3975 * t3831;
t4497 = 0.3e1 / 0.2e1 * t3798 * t4011;
t4593 = t3975 * t5001;
t4594 = t3969 * t5001;
t4131 = t4031 * (-t4033 / 0.2e1 + t5143);
t4698 = (pkin(7) * t4781 + pkin(8) * t3545 + t4131 * t5010 + t4793) * t3922;
t4722 = pkin(2) * t4860;
t4869 = t3975 * t4031;
t4725 = pkin(2) * t4869;
t4732 = pkin(1) * t4889;
t4738 = 0.2e1 * t4889;
t4787 = 0.2e1 * t3512 + t3518;
t5069 = pkin(2) * t3975;
t5071 = pkin(1) * t3975;
t5101 = 0.2e1 * t3952;
t5104 = 0.2e1 * t3951;
t5105 = 0.2e1 * t3945;
t5137 = t3895 + t3921 - t3892;
t5147 = 0.2e1 * t3892 - t3921;
t5168 = -0.4e1 * t3951;
t3263 = (0.1e1 / ((t3789 * t4005 + t4726) * t3975 + t4117) * ((-(t4282 + t4165) * t3968 * t4330 * t4923 + (t4185 * t5168 + (-0.3e1 * (t3798 + t4165) * t4186 - 0.2e1 * t4698 + (-0.2e1 * t3353 + t4410) * pkin(2)) * t3952 + ((t4352 + t4372 + t4787) * t5071 + 0.4e1 * t4185) * t3976 + 0.2e1 * (t3997 * t4497 + t3816 + t4165 * (t3947 * t3997 + pkin(1))) * t4593 - pkin(2) * t4410 + 0.2e1 * t4698 + t3353 * t4025) * t3969 + (t4063 * t3952 + ((t4289 + t4630) * t3932 + t4286) * t5159 * t4738 + (((t4123 + t5137) * t5101 + 0.4e1 * t3837 + t4124 + t5147) * t4923 + t4318 * t4391) * t5001 - t4063) * t4006 + t4011 * (t4331 * t5104 + ((t4491 + t5137) * t4263 + t4093) * t3952 + (-0.2e1 * t4331 + t3425 * t5071 + (t3557 * t4165 + t4153) * t4881) * t3976 + (t5105 + (t3794 + t5147) * t3997) * t4593 - t4093)) * t5001 + ((t4732 * t4953 - 0.2e1 * t4182) * t4594 + (0.2e1 * ((t3921 / 0.2e1 + t3895 + t3837 + t4281) * t3620 + t4286) * t4923 + t4318 * t4330) * t4006 + ((t3945 + (t3817 + t4165) * t3997) * t4011 * t3620 + (t4153 + t4787) * t3826) * t3975 + t4182 * t5001) * t3557) + ((t3996 * t4428 + ((t3892 + t4174) * t4005 + (t3852 + t5054) * pkin(2)) * t4916) * t4594 + ((pkin(2) * t4357 + t3826 * t4330) * t5054 + ((t3602 * t3946 - t3914 * t4156) * t3975 + t3829 * pkin(2) * t4330) * t4005 - (t3996 * t4156 - t5010) * t5069 - (-t3852 * t4591 * t5085 + t4147) * t4011) * t4006 + t4622 * t5071 + (t4011 * t3834 * t4388 + (t3826 * t4725 + t3996 * t4729) * t5010) * t4005 - (-t3997 * t5010 + (t3404 * t3997 + t3620 * t3826 + t3548) * t3996) * t4870 + t4147 * t5063) / ((-pkin(1) * t4722 + t3789 * t3975) * t4005 + t4105) * t5010) * t4031;
t3523 = pkin(6) * t4637;
t3539 = pkin(8) * t3555;
t3540 = pkin(7) * t3555;
t5011 = t3607 * t3695;
t4499 = -t5011 / 0.2e1;
t4794 = (t3540 + t3539 - t3592 / 0.2e1) * t3913 + pkin(3) * t4499;
t3352 = t3523 + t4794;
t3433 = t3592 - t3540;
t3403 = t3539 - t3433;
t4624 = t3993 * t5011;
t3424 = t4637 - t4624;
t3551 = pkin(1) * t3555;
t5002 = t3637 * t3670;
t3619 = t3976 * t5002;
t3836 = pkin(1) * t4803;
t3891 = pkin(6) * t3913;
t3894 = pkin(2) * t3919;
t3918 = t3963 * t4030;
t3964 = t4003 * t3965;
t3587 = pkin(8) * t3600;
t3595 = pkin(1) * t3600;
t4640 = t3993 * t3555;
t3515 = pkin(3) * t4640;
t3589 = pkin(7) * t3600;
t3541 = pkin(6) * t3555;
t4782 = t3541 + t3587;
t4284 = t3515 + t3589 + t4782;
t4163 = t4284 * t3994;
t4377 = t4893 * t3555;
t4623 = t4011 * t5011;
t5173 = t4163 + t3595;
t4064 = t3994 * (pkin(6) * t4377 + (((t3592 - 0.2e1 * t3539) * pkin(7) + pkin(6) * t3587) * t3993 + t4623 + t4490 * t4640) * pkin(3)) + (t3595 + 0.2e1 * t4163) * t3894 + t5173 * t3918;
t4361 = t3994 * t3600;
t3574 = pkin(1) * t4361;
t3543 = pkin(2) * t3555;
t4414 = t3850 * t3543;
t4094 = (t3574 + t4284) * t3919 + t4414;
t4727 = t3825 * t5066;
t4751 = pkin(6) * t5055;
t4106 = -t4730 * t5055 + (t4942 + (t3851 * t5061 + t3993 * t4033 - t4751) * t3975) * t4003 + t3975 * t4727;
t4362 = t3993 * t3600;
t4148 = t4362 * t5070;
t3499 = t3817 * t3555;
t4358 = t3993 * t4623;
t4154 = t3499 - t4358;
t4157 = t3619 * t3833 + t3403;
t4166 = 0.2e1 * t3894 + t3918;
t4183 = t3850 * t4309;
t4338 = t3850 * t5160 * t5002;
t4192 = t4011 * t4338;
t4597 = t4011 * t5002;
t4334 = t3975 * t4597;
t4193 = t3994 * t4334;
t4600 = t3994 * t5002;
t4335 = t3975 * t4600;
t4265 = 0.2e1 * t4335;
t4638 = t4002 * t3555;
t4398 = pkin(2) * t4638;
t3511 = pkin(3) * t4398;
t4636 = t4030 * t3555;
t3516 = t3963 * t4636;
t4290 = t3993 * t4499;
t4287 = t3499 / 0.2e1 + t3516 / 0.2e1 + t3511 + t4011 * t4290;
t4320 = t3850 * t4570;
t4337 = t4916 * t5002;
t4363 = t3975 * t3600;
t4389 = t5085 * t5002;
t4625 = t3963 * t5011;
t4411 = pkin(3) * t4625;
t4602 = t3975 * t5002;
t4603 = t3965 * t5002;
t4699 = (pkin(6) * t3539 + pkin(7) * t4782 + t4131 * t5011 + t4794) * t3919;
t4723 = pkin(2) * t4862;
t4788 = 0.2e1 * t3511 + t3516;
t5138 = t3894 + t3918 - t3891;
t5148 = 0.2e1 * t3891 - t3918;
t3262 = (0.1e1 / ((t3788 * t4002 + t4727) * t3975 + t4118) * ((-(t4282 + t4166) * t3964 * t4337 * t4926 + (t4192 * t5168 + (-0.3e1 * (t3798 + t4166) * t4193 - 0.2e1 * t4699 + (-0.2e1 * t3352 + t4411) * pkin(2)) * t3952 + ((t4358 + t4377 + t4788) * t5071 + 0.4e1 * t4192) * t3976 + 0.2e1 * (t3994 * t4497 + t3816 + t4166 * (t3947 * t3994 + pkin(1))) * t4602 - pkin(2) * t4411 + 0.2e1 * t4699 + t3352 * t4025) * t3965 + (t4064 * t3952 + ((t4290 + t4637) * t3931 + t4287) * t5160 * t4738 + (((t4123 + t5138) * t5101 + 0.4e1 * t3836 + t4124 + t5148) * t4926 + t4320 * t4391) * t5002 - t4064) * t4003 + t4011 * (t4338 * t5104 + ((t4491 + t5138) * t4265 + t4094) * t3952 + (-0.2e1 * t4338 + t3424 * t5071 + (t3555 * t4166 + t4154) * t4884) * t3976 + (t5105 + (t3794 + t5148) * t3994) * t4602 - t4094)) * t5002 + ((t4732 * t4954 - 0.2e1 * t4183) * t4603 + (0.2e1 * ((t3918 / 0.2e1 + t3894 + t3836 + t4281) * t3619 + t4287) * t4926 + t4320 * t4337) * t4003 + ((t3945 + (t3817 + t4166) * t3994) * t4011 * t3619 + (t4154 + t4788) * t3825) * t3975 + t4183 * t5002) * t3555) + ((t3993 * t4428 + ((t3891 + t4174) * t4002 + (t3849 + t5055) * pkin(2)) * t4916) * t4603 + ((pkin(2) * t4363 + t3825 * t4337) * t5055 + ((t3600 * t3946 - t3913 * t4157) * t3975 + t3828 * pkin(2) * t4337) * t4002 - (t3993 * t4157 - t5011) * t5069 - (-t3849 * t4600 * t5085 + t4148) * t4011) * t4003 + t4625 * t5071 + (t4011 * t3833 * t4389 + (t3825 * t4725 + t3993 * t4730) * t5011) * t4002 - (-t3994 * t5011 + (t3403 * t3994 + t3619 * t3825 + t3551) * t3993) * t4870 + t4148 * t5065) / ((-pkin(1) * t4723 + t3788 * t3975) * t4002 + t4106) * t5011) * t4031;
t3522 = pkin(6) * t4645;
t3534 = pkin(8) * t3553;
t3535 = pkin(7) * t3553;
t5012 = t3606 * t3693;
t4500 = -t5012 / 0.2e1;
t4795 = (t3535 + t3534 - t3591 / 0.2e1) * t3912 + pkin(3) * t4500;
t3351 = t3522 + t4795;
t3432 = t3591 - t3535;
t3402 = t3534 - t3432;
t4627 = t3990 * t5012;
t3423 = t4645 - t4627;
t3550 = pkin(1) * t3553;
t5003 = t3636 * t3668;
t3618 = t3976 * t5003;
t3835 = pkin(1) * t4804;
t3890 = pkin(6) * t3912;
t3893 = pkin(2) * t3916;
t3915 = t3959 * t4030;
t3960 = t4000 * t3961;
t3583 = pkin(8) * t3598;
t3594 = pkin(1) * t3598;
t4648 = t3990 * t3553;
t3513 = pkin(3) * t4648;
t3584 = pkin(7) * t3598;
t3536 = pkin(6) * t3553;
t4783 = t3536 + t3583;
t4285 = t3513 + t3584 + t4783;
t4164 = t4285 * t3991;
t4382 = t4893 * t3553;
t4626 = t4011 * t5012;
t5172 = t4164 + t3594;
t4065 = t3991 * (pkin(6) * t4382 + (((t3591 - 0.2e1 * t3534) * pkin(7) + pkin(6) * t3583) * t3990 + t4626 + t4490 * t4648) * pkin(3)) + (t3594 + 0.2e1 * t4164) * t3893 + t5172 * t3915;
t4367 = t3991 * t3598;
t3573 = pkin(1) * t4367;
t3538 = pkin(2) * t3553;
t4415 = t3847 * t3538;
t4095 = (t3573 + t4285) * t3916 + t4415;
t4728 = t3824 * t5068;
t4752 = pkin(6) * t5056;
t4107 = -t4731 * t5056 + (t4943 + (t3848 * t5062 + t3990 * t4033 - t4752) * t3975) * t4000 + t3975 * t4728;
t4368 = t3990 * t3598;
t4149 = t4368 * t5070;
t3498 = t3817 * t3553;
t4364 = t3990 * t4626;
t4155 = t3498 - t4364;
t4158 = t3618 * t3832 + t3402;
t4167 = 0.2e1 * t3893 + t3915;
t4184 = t3847 * t4310;
t4344 = t3847 * t5161 * t5003;
t4199 = t4011 * t4344;
t4606 = t4011 * t5003;
t4307 = t3975 * t4606;
t4200 = t3991 * t4307;
t4609 = t3991 * t5003;
t4341 = t3975 * t4609;
t4267 = 0.2e1 * t4341;
t4646 = t3999 * t3553;
t4400 = pkin(2) * t4646;
t3510 = pkin(3) * t4400;
t4644 = t4030 * t3553;
t3514 = t3959 * t4644;
t4291 = t3990 * t4500;
t4288 = t3498 / 0.2e1 + t3514 / 0.2e1 + t3510 + t4011 * t4291;
t4322 = t3847 * t4571;
t4343 = t4916 * t5003;
t4369 = t3975 * t3598;
t4390 = t5085 * t5003;
t4628 = t3959 * t5012;
t4412 = pkin(3) * t4628;
t4611 = t3975 * t5003;
t4612 = t3961 * t5003;
t4700 = (pkin(6) * t3534 + pkin(7) * t4783 + t4131 * t5012 + t4795) * t3916;
t4724 = pkin(2) * t4864;
t4789 = 0.2e1 * t3510 + t3514;
t5139 = t3893 + t3915 - t3890;
t5149 = 0.2e1 * t3890 - t3915;
t3261 = (0.1e1 / ((t3787 * t3999 + t4728) * t3975 + t4119) * ((-(t4282 + t4167) * t3960 * t4343 * t4929 + (t4199 * t5168 + (-0.3e1 * (t3798 + t4167) * t4200 - 0.2e1 * t4700 + (-0.2e1 * t3351 + t4412) * pkin(2)) * t3952 + ((t4364 + t4382 + t4789) * t5071 + 0.4e1 * t4199) * t3976 + 0.2e1 * (t3991 * t4497 + t3816 + t4167 * (t3947 * t3991 + pkin(1))) * t4611 - pkin(2) * t4412 + 0.2e1 * t4700 + t3351 * t4025) * t3961 + (t4065 * t3952 + ((t4291 + t4645) * t3930 + t4288) * t5161 * t4738 + (((t4123 + t5139) * t5101 + 0.4e1 * t3835 + t4124 + t5149) * t4929 + t4322 * t4391) * t5003 - t4065) * t4000 + (t4344 * t5104 + ((t4491 + t5139) * t4267 + t4095) * t3952 + (-0.2e1 * t4344 + t3423 * t5071 + (t3553 * t4167 + t4155) * t4887) * t3976 + (t5105 + (t3794 + t5149) * t3991) * t4611 - t4095) * t4011) * t5003 + ((t4732 * t4955 - 0.2e1 * t4184) * t4612 + (0.2e1 * ((t3915 / 0.2e1 + t3893 + t3835 + t4281) * t3618 + t4288) * t4929 + t4322 * t4343) * t4000 + ((t3945 + (t3817 + t4167) * t3991) * t4011 * t3618 + t3824 * (t4155 + t4789)) * t3975 + t4184 * t5003) * t3553) + ((t3990 * t4428 + ((t3890 + t4174) * t3999 + (t3846 + t5056) * pkin(2)) * t4916) * t4612 + ((pkin(2) * t4369 + t3824 * t4343) * t5056 + ((t3598 * t3946 - t3912 * t4158) * t3975 + t3827 * pkin(2) * t4343) * t3999 - (t3990 * t4158 - t5012) * t5069 - (-t3846 * t4609 * t5085 + t4149) * t4011) * t4000 + t4628 * t5071 + (t4011 * t3832 * t4390 + (t3824 * t4725 + t3990 * t4731) * t5012) * t3999 - (-t3991 * t5012 + (t3402 * t3991 + t3618 * t3824 + t3550) * t3990) * t4870 + t4149 * t5067) / ((-pkin(1) * t4724 + t3787 * t3975) * t3999 + t4107) * t5012) * t4031;
t3420 = t3990 * t4645 - t5012;
t3933 = pkin(1) * t3961;
t3934 = pkin(1) * t4000;
t4018 = -pkin(7) / 0.2e1;
t3948 = t4018 - pkin(8) / 0.2e1;
t4026 = -0.2e1 * pkin(1);
t4647 = t3991 * t3553;
t4380 = t3990 * t4647;
t4858 = t3976 * t4000;
t4531 = t3975 * t4858;
t4559 = t3991 * t4916;
t4847 = t3990 * t3999;
t5051 = pkin(6) * t4000;
t5095 = 0.2e1 * t3990;
t3300 = ((pkin(1) * t4380 + t3420) * t3999 - (t3934 + pkin(2)) * t3598) * t3976 + ((t4627 + t4786) * t3991 - t3550 + (t3790 * t3959 + (pkin(6) * t4847 - pkin(2)) * t4000) * t3553) * t3975 + ((-(-t3927 + t3933 + t4026 - t4843) * t4889 - t4559 * t5051) * t3959 + (t3846 * t4531 + (t3948 * t3961 + t4721 / 0.2e1 + t3832) * t3952 * t5095 - t3735 * t3990) * t3999 + (t3933 - t3824) * t4889 + t5085 * t3847 * t4844) * t5003;
t4020 = pkin(6) / 0.2e1;
t3841 = t3912 + t4020;
t4268 = -0.2e1 * t4341;
t3609 = t3841 * t4268;
t3974 = t4011 ^ 2;
t4758 = t4033 - t4030;
t3830 = t3974 + t4758;
t3867 = t3934 + t4025;
t3889 = t3974 + t4033;
t4024 = 0.3e1 * pkin(2);
t4365 = t4000 * t3598;
t4256 = pkin(2) * t4365;
t4325 = t5162 * t3846 * t5003;
t4610 = t3990 * t5003;
t4342 = t3975 * t4610;
t4488 = pkin(1) * t3538;
t4649 = t3976 * t3553;
t3958 = t3999 * t3959;
t4892 = t3958 * t4030;
t5081 = t3961 - 0.1e1;
t4657 = (t4649 + (t5081 - t4919) * t5003) * t4892;
t4019 = pkin(6) / 0.3e1;
t4695 = (t3912 + t4019) * t5067;
t5046 = pkin(6) * t4011;
t5059 = pkin(3) * t3846;
t5140 = t3889 * t3991 + t3945;
t4660 = (-t4657 - ((t3553 * t3867 + t3609) * t3976 + (-t4256 - t5172) * t3975 + ((-t3917 + (-t4804 + pkin(1)) * t4000 + t4024) * t3952 + t5162) * t5003) * t5056 + ((-t4000 * t4488 + t3832 * t4627 - (t3835 + t3889) * t3553) * t3976 + (-t3423 * t5051 + t3991 * t4415) * t3975 + (-(pkin(1) * t3927 + t3961 * t5059 + t3830 + t3835 - t3890) * t3952 + (((t3930 - t4011) * t3912 - t5046) * t4000 + 0.3e1 * t4695) * t4889 + t4897 * t5059) * t5003) * t3999 - t3952 * t4325 - (pkin(1) * t4140 - t5140) * t3976 * t4342 + t3420 * t3790 * t3975 + t4325) * t3553;
t3429 = pkin(3) * t5012 - t3522;
t3519 = pkin(1) * t4647;
t3531 = pkin(2) * t3536;
t3537 = pkin(3) * t3553;
t3570 = pkin(1) * t4369;
t3576 = t4011 * t3598;
t3793 = 0.3e1 * t4030 + t4175;
t3812 = -t4893 / 0.2e1;
t3885 = -t4029 + t4758;
t4161 = 0.2e1 * t3960 * t4307;
t4074 = pkin(3) * (pkin(6) * t4268 + t3538) + t4161 * t5068;
t4214 = t3991 * t4365;
t4238 = -t4000 * t4752 + t3744;
t4250 = pkin(2) * t4307;
t4424 = pkin(2) * t4611;
t4277 = 0.2e1 * t4424;
t4381 = t3958 * t4644;
t4409 = pkin(2) * t3813;
t4650 = t3975 * t3553;
t4427 = pkin(2) * t4650;
t4431 = pkin(1) * t4645;
t4437 = -(pkin(2) * t4267 + t3536 + t3576) * t3961 + t3536;
t4443 = 0.2e1 * t4606;
t4479 = 0.2e1 * t5003;
t4709 = pkin(6) * t5003;
t4482 = pkin(2) * t4709;
t4485 = pkin(2) * t3537;
t4492 = t4029 / 0.3e1 - t4033 / 0.3e1 + t4030;
t4543 = t3991 * t4893;
t4696 = pkin(3) * t5195;
t4757 = -0.2e1 * t3945;
t4764 = t3890 + t4030;
t4771 = t4893 / 0.3e1 - 0.2e1 / 0.3e1 * t4030;
t4780 = t5003 * t4025 + t3570;
t4201 = t3990 * t4341;
t4143 = pkin(3) * t4201;
t5015 = (-t3538 + t4143) * t3961;
t5103 = 0.3e1 * t3951;
t5110 = 0.2e1 * pkin(6);
t5111 = -0.2e1 * pkin(6);
t5114 = 0.2e1 * pkin(1);
t5167 = 0.2e1 * t3991;
t4674 = (((-0.4e1 / 0.3e1 + t3961) * t4892 + ((-0.2e1 / 0.3e1 * t3890 + t4771) * t3961 + 0.2e1 / 0.3e1 * t4409 + 0.4e1 / 0.3e1 * t3890 + t4492) * t3999 + (0.4e1 / 0.3e1 * t5056 - 0.2e1 / 0.3e1 * t3846) * t5162) * t5003 * t5103 + (t3899 * t4381 - (t5015 + (t3550 + t5195) * t4000 + 0.3e1 * t3538 - 0.4e1 * t3847 * t4341) * t5056 + ((t4307 * t5111 - t4488) * t4000 + (pkin(6) * t4277 - t4431) * t3991 - t3830 * t3553 + (-t3537 * t3961 + (t4161 + (pkin(2) * t4367 - 0.4e1 * t4307) * t4000 + (t3594 + t4277) * t5167 + 0.2e1 * t3576 + t4437) * t3990) * pkin(3)) * t3999 + ((-t4341 * t4893 - t3531) * t3990 - t4485) * t3961 + ((t3429 * t3991 - 0.2e1 * t4250) * t3990 + t4696) * t4000 + (t3885 * t4341 + t3531) * t3990 + t4074) * t3952 + ((-0.3e1 * t3961 + 0.3e1) * t4892 * t5003 - (t3899 * t3570 + (-t4256 + (-t3536 - 0.2e1 * t3576 - 0.2e1 * t3513) * t3991) * t3975 + ((t5114 + 0.4e1 * t4804) * t4000 + (0.4e1 * t3961 - 0.2e1) * pkin(2)) * t5003) * t5056 + (0.2e1 * (t3812 + t4764) * t4612 + (((t3519 + t4786) * t3912 + t3429) * t3975 - t3824 * pkin(2) * t4479) * t4000 + (0.3e1 * t3991 * t4427 - 0.4e1 * t4709) * t3912 + (pkin(6) * t4427 + t4026 * t4606) * t3991 - t3793 * t5003) * t3999 + ((-t3975 * t4431 + 0.2e1 * t4482) * t3990 + pkin(3) * t4780) * t3961 + ((pkin(1) * t4427 + pkin(6) * t4443) * t3990 + pkin(3) * t4443) * t4844 + (t4650 * t5140 - 0.2e1 * t4482) * t3990 - (t3576 * t4887 + t4780) * pkin(3)) * t3976 - t5081 * t4381 - (-t5015 - t3538 + (-t4786 * t4000 + (t5110 + t3912) * t4611) * t3991) * t5056 - (-t5081 * t3537 + (pkin(2) * t4214 + t3573 + t3576 + (t4011 * t3960 - (t4011 + t3930) * t4000) * t3975 * t4479 + t4437) * t3990) * t3916 + ((t3531 + (t4543 + t4757) * t4611) * t3990 + t4485) * t3961 + (((pkin(1) * t4277 - t3429) * t3991 + 0.2e1 * t4250) * t3990 - t4696) * t4000 + (-t3531 + (t3794 * t3991 + t5105) * t4611) * t3990 - t4074) / (t3723 + (t3732 * t3999 + t4238) * t3975) * t3636;
t3265 = (-t3300 * t5012 - t4660 - t4674) * t3668;
t3470 = t3618 + t3553;
t4607 = t4000 * t5003;
t3612 = t3975 * t4607;
t3484 = t3612 - t3598;
t3669 = 0.1e1 / t3673 ^ 2;
t3729 = -pkin(6) * t4767 + t3912 * t5158;
t4021 = -0.3e1 / 0.2e1 * pkin(2);
t4152 = t3961 * t4893 + t4764;
t4259 = pkin(2) * t4380;
t4537 = t3975 * t4865;
t4737 = 0.2e1 * t4870;
t4948 = t3827 * t4000;
t5018 = t3420 * t4000;
t5100 = -0.3e1 * t3975;
t5102 = -0.2e1 * t3952;
t3282 = -(t4657 + (t3553 * t3889 - t4364) * t4859 + (-t4259 + t5018) * t5069 + ((t3609 + 0.2e1 * t3538) * t3976 * t3959 + (-(t3513 + t3576) * t3991 * t3959 + (-0.2e1 * t4259 + t5018) * t3999) * t3975) * pkin(3) + (((t4021 + t4770) * t5102 + 0.2e1 * t3917 + t4948 - pkin(2)) * t5056 + (-(-t4033 + t4152 + 0.2e1 * t4409) * t3952 + (t3841 * t4000 * t4737 + t4695 * t5100) * t3976 + pkin(2) * t4948 + t3835 + t3974 + t4152) * t3999 + pkin(2) * (t3795 * t4537 - t3846 * t3952 + t3846)) * t5003) * t3669 * t3636 + (-(t3470 * t4892 + (-t4143 / 0.2e1 + t3470 * pkin(2)) * t4755 + (t3889 * t3470 + ((t3879 - 0.2e1 * t5067) * pkin(3) * t4611 - t4626) * t3990) * t3999 + pkin(2) * t3795 * t4342) * t3553 + (t3959 * t4200 + (t3470 * t3990 * t4011 + pkin(3) * t3612 - t5012) * t3999 + pkin(2) * t3484) * t5012) / ((t3729 * t3975 + t3750) * t3999 + t4274);
t4032 = 0.1e1 / pkin(3) ^ 2;
t3597 = t3606 ^ 2 / t3702 ^ 2 * t4032;
t3582 = pkin(7) * t3597;
t3633 = t3636 ^ 2;
t3624 = t3633 * t3669;
t4130 = t3975 * t4202;
t4098 = t4130 * t4025;
t4619 = t3991 * t3624;
t4706 = pkin(6) * t4887;
t5039 = pkin(7) * t3961;
t5112 = -0.2e1 * pkin(2);
t5146 = pkin(6) * t4531 + t3930;
t5186 = t3265 * t5112 + (-t3867 * t3976 + t4706) * t3282 - t3624 * ((t4018 - t4721 + t5039) * t5101 + pkin(7) - 0.2e1 * t5039 + t5146) - (pkin(2) * t4619 + pkin(7) * t4130) * t4746 + t3991 * t4098 + t3582;
t3421 = t3993 * t4637 - t5011;
t3935 = pkin(1) * t3965;
t3936 = pkin(1) * t4003;
t4639 = t3994 * t3555;
t4375 = t3993 * t4639;
t4855 = t3976 * t4003;
t4530 = t3975 * t4855;
t4558 = t3994 * t4916;
t4837 = t3993 * t4002;
t5049 = pkin(6) * t4003;
t5093 = 0.2e1 * t3993;
t3301 = ((pkin(1) * t4375 + t3421) * t4002 - (t3936 + pkin(2)) * t3600) * t3976 + ((t4624 + t4785) * t3994 - t3551 + (t3791 * t3963 + (pkin(6) * t4837 - pkin(2)) * t4003) * t3555) * t3975 + ((-(-t3928 + t3935 + t4026 - t4833) * t4889 - t4558 * t5049) * t3963 + (t3849 * t4530 + (t3948 * t3965 + t4720 / 0.2e1 + t3833) * t3952 * t5093 - t3736 * t3993) * t4002 + (t3935 - t3825) * t4889 + t5085 * t3850 * t4834) * t5002;
t3843 = t3913 + t4020;
t4266 = -0.2e1 * t4335;
t3610 = t3843 * t4266;
t3868 = t3936 + t4025;
t4359 = t4003 * t3600;
t4254 = pkin(2) * t4359;
t4324 = t5163 * t3849 * t5002;
t4601 = t3993 * t5002;
t4336 = t3975 * t4601;
t4487 = pkin(1) * t3543;
t4641 = t3976 * t3555;
t3962 = t4002 * t3963;
t4891 = t3962 * t4030;
t5078 = t3965 - 0.1e1;
t4656 = (t4641 + (t5078 - t4918) * t5002) * t4891;
t4692 = (t3913 + t4019) * t5065;
t5058 = pkin(3) * t3849;
t5141 = t3889 * t3994 + t3945;
t4659 = (-t4656 - ((t3555 * t3868 + t3610) * t3976 + (-t4254 - t5173) * t3975 + ((-t3920 + (-t4803 + pkin(1)) * t4003 + t4024) * t3952 + t5163) * t5002) * t5055 + ((-t4003 * t4487 + t3833 * t4624 - (t3836 + t3889) * t3555) * t3976 + (-t3424 * t5049 + t3994 * t4414) * t3975 + (-(pkin(1) * t3928 + t3965 * t5058 + t3830 + t3836 - t3891) * t3952 + (((t3931 - t4011) * t3913 - t5046) * t4003 + 0.3e1 * t4692) * t4889 + t4896 * t5058) * t5002) * t4002 - t3952 * t4324 - (pkin(1) * t4139 - t5141) * t3976 * t4336 + t3421 * t3791 * t3975 + t4324) * t3555;
t3430 = pkin(3) * t5011 - t3523;
t3520 = pkin(1) * t4639;
t3532 = pkin(2) * t3541;
t3542 = pkin(3) * t3555;
t3571 = pkin(1) * t4363;
t3577 = t4011 * t3600;
t4160 = 0.2e1 * t3964 * t4334;
t4073 = pkin(3) * (pkin(6) * t4266 + t3543) + t4160 * t5066;
t4213 = t3994 * t4359;
t4237 = -t4003 * t4751 + t3745;
t4249 = pkin(2) * t4334;
t4423 = pkin(2) * t4602;
t4276 = 0.2e1 * t4423;
t4376 = t3962 * t4636;
t4406 = pkin(2) * t3814;
t4642 = t3975 * t3555;
t4426 = pkin(2) * t4642;
t4430 = pkin(1) * t4637;
t4436 = -(pkin(2) * t4265 + t3541 + t3577) * t3965 + t3541;
t4442 = 0.2e1 * t4597;
t4478 = 0.2e1 * t5002;
t4708 = pkin(6) * t5002;
t4481 = pkin(2) * t4708;
t4484 = pkin(2) * t3542;
t4542 = t3994 * t4893;
t4693 = pkin(3) * t5194;
t4763 = t3891 + t4030;
t4779 = t5002 * t4025 + t3571;
t4194 = t3993 * t4335;
t4142 = pkin(3) * t4194;
t5014 = (-t3543 + t4142) * t3965;
t5166 = 0.2e1 * t3994;
t4673 = (((t3965 - 0.4e1 / 0.3e1) * t4891 + ((-0.2e1 / 0.3e1 * t3891 + t4771) * t3965 + 0.2e1 / 0.3e1 * t4406 + 0.4e1 / 0.3e1 * t3891 + t4492) * t4002 + (0.4e1 / 0.3e1 * t5055 - 0.2e1 / 0.3e1 * t3849) * t5163) * t5002 * t5103 + (t3900 * t4376 - (t5014 + (t3551 + t5194) * t4003 + 0.3e1 * t3543 - 0.4e1 * t3850 * t4335) * t5055 + ((t4334 * t5111 - t4487) * t4003 + (pkin(6) * t4276 - t4430) * t3994 - t3830 * t3555 + (-t3542 * t3965 + (t4160 + (pkin(2) * t4361 - 0.4e1 * t4334) * t4003 + (t3595 + t4276) * t5166 + 0.2e1 * t3577 + t4436) * t3993) * pkin(3)) * t4002 + ((-t4335 * t4893 - t3532) * t3993 - t4484) * t3965 + ((t3430 * t3994 - 0.2e1 * t4249) * t3993 + t4693) * t4003 + (t3885 * t4335 + t3532) * t3993 + t4073) * t3952 + ((-0.3e1 * t3965 + 0.3e1) * t4891 * t5002 - (t3900 * t3571 + (-t4254 + (-t3541 - 0.2e1 * t3577 - 0.2e1 * t3515) * t3994) * t3975 + ((t5114 + 0.4e1 * t4803) * t4003 + (0.4e1 * t3965 - 0.2e1) * pkin(2)) * t5002) * t5055 + (0.2e1 * (t3812 + t4763) * t4603 + (((t3520 + t4785) * t3913 + t3430) * t3975 - t3825 * pkin(2) * t4478) * t4003 + (0.3e1 * t3994 * t4426 - 0.4e1 * t4708) * t3913 + (pkin(6) * t4426 + t4026 * t4597) * t3994 - t3793 * t5002) * t4002 + ((-t3975 * t4430 + 0.2e1 * t4481) * t3993 + pkin(3) * t4779) * t3965 + ((pkin(1) * t4426 + pkin(6) * t4442) * t3993 + pkin(3) * t4442) * t4834 + (t4642 * t5141 - 0.2e1 * t4481) * t3993 - (t3577 * t4884 + t4779) * pkin(3)) * t3976 - t5078 * t4376 - (-t5014 - t3543 + (-t4785 * t4003 + (t5110 + t3913) * t4602) * t3994) * t5055 - (-t5078 * t3542 + (pkin(2) * t4213 + t3574 + t3577 + (t4011 * t3964 - (t4011 + t3931) * t4003) * t3975 * t4478 + t4436) * t3993) * t3919 + ((t3532 + (t4542 + t4757) * t4602) * t3993 + t4484) * t3965 + (((pkin(1) * t4276 - t3430) * t3994 + 0.2e1 * t4249) * t3993 - t4693) * t4003 + (-t3532 + (t3794 * t3994 + t5105) * t4602) * t3993 - t4073) / (t3724 + (t3733 * t4002 + t4237) * t3975) * t3637;
t3266 = (-t3301 * t5011 - t4659 - t4673) * t3670;
t3473 = t3619 + t3555;
t4598 = t4003 * t5002;
t3613 = t3975 * t4598;
t3486 = t3613 - t3600;
t3671 = 0.1e1 / t3674 ^ 2;
t3730 = -pkin(6) * t4766 + t3913 * t5157;
t4151 = t3965 * t4893 + t4763;
t4258 = pkin(2) * t4375;
t4535 = t3975 * t4863;
t4946 = t3828 * t4003;
t5017 = t3421 * t4003;
t3283 = -(t4656 + (t3555 * t3889 - t4358) * t4856 + (-t4258 + t5017) * t5069 + ((t3610 + 0.2e1 * t3543) * t3976 * t3963 + (-(t3515 + t3577) * t3994 * t3963 + (-0.2e1 * t4258 + t5017) * t4002) * t3975) * pkin(3) + (((t4021 + t4769) * t5102 + 0.2e1 * t3920 + t4946 - pkin(2)) * t5055 + (-(-t4033 + t4151 + 0.2e1 * t4406) * t3952 + (t3843 * t4003 * t4737 + t4692 * t5100) * t3976 + pkin(2) * t4946 + t3836 + t3974 + t4151) * t4002 + pkin(2) * (t3796 * t4535 - t3849 * t3952 + t3849)) * t5002) * t3671 * t3637 + (-(t3473 * t4891 + (-t4142 / 0.2e1 + t3473 * pkin(2)) * t4754 + (t3889 * t3473 + ((t3880 - 0.2e1 * t5065) * pkin(3) * t4602 - t4623) * t3993) * t4002 + pkin(2) * t3796 * t4336) * t3555 + (t3963 * t4193 + (t3473 * t3993 * t4011 + pkin(3) * t3613 - t5011) * t4002 + pkin(2) * t3486) * t5011) / ((t3730 * t3975 + t3751) * t4002 + t4273);
t3599 = t3607 ^ 2 / t3703 ^ 2 * t4032;
t3585 = pkin(7) * t3599;
t3634 = t3637 ^ 2;
t3625 = t3634 * t3671;
t4129 = t3975 * t4195;
t4097 = t4129 * t4025;
t4617 = t3994 * t3625;
t4705 = pkin(6) * t4884;
t5038 = pkin(7) * t3965;
t5145 = pkin(6) * t4530 + t3931;
t5185 = t3266 * t5112 + (-t3868 * t3976 + t4705) * t3283 - t3625 * ((t4018 - t4720 + t5038) * t5101 + pkin(7) - 0.2e1 * t5038 + t5145) - (pkin(2) * t4617 + pkin(7) * t4129) * t4745 + t3994 * t4097 + t3585;
t3422 = t3996 * t4630 - t5010;
t3937 = pkin(1) * t3969;
t3938 = pkin(1) * t4006;
t4632 = t3997 * t3557;
t4370 = t3996 * t4632;
t4852 = t3976 * t4006;
t4529 = t3975 * t4852;
t4557 = t3997 * t4916;
t4827 = t3996 * t4005;
t5047 = pkin(6) * t4006;
t5091 = 0.2e1 * t3996;
t3302 = ((pkin(1) * t4370 + t3422) * t4005 - (t3938 + pkin(2)) * t3602) * t3976 + ((t4621 + t4784) * t3997 - t3548 + (t3792 * t3967 + (pkin(6) * t4827 - pkin(2)) * t4006) * t3557) * t3975 + ((-(-t3929 + t3937 + t4026 - t4823) * t4889 - t4557 * t5047) * t3967 + (t3852 * t4529 + (t3948 * t3969 + t4719 / 0.2e1 + t3834) * t3952 * t5091 - t3737 * t3996) * t4005 + (t3937 - t3826) * t4889 + t5085 * t3853 * t4824) * t5001;
t3845 = t3914 + t4020;
t4264 = -0.2e1 * t4328;
t3611 = t3845 * t4264;
t3869 = t3938 + t4025;
t4353 = t4006 * t3602;
t4252 = pkin(2) * t4353;
t4323 = t5164 * t3852 * t5001;
t4592 = t3996 * t5001;
t4329 = t3975 * t4592;
t4486 = pkin(1) * t3547;
t4516 = t3976 * t3557;
t3966 = t4005 * t3967;
t4890 = t3966 * t4030;
t5075 = t3969 - 0.1e1;
t4655 = (t4516 + (t5075 - t4917) * t5001) * t4890;
t4689 = (t3914 + t4019) * t5063;
t5057 = pkin(3) * t3852;
t5142 = t3889 * t3997 + t3945;
t4658 = (-t4655 - ((t3557 * t3869 + t3611) * t3976 + (-t4252 - t5174) * t3975 + ((-t3923 + (-t4802 + pkin(1)) * t4006 + t4024) * t3952 + t5164) * t5001) * t5054 + ((-t4006 * t4486 + t3834 * t4621 - (t3837 + t3889) * t3557) * t3976 + (-t3425 * t5047 + t3997 * t4413) * t3975 + (-(pkin(1) * t3929 + t3969 * t5057 + t3830 + t3837 - t3892) * t3952 + (((t3932 - t4011) * t3914 - t5046) * t4006 + 0.3e1 * t4689) * t4889 + t4895 * t5057) * t5001) * t4005 - t3952 * t4323 - (pkin(1) * t4138 - t5142) * t3976 * t4329 + t3422 * t3792 * t3975 + t4323) * t3557;
t3431 = pkin(3) * t5010 - t3524;
t3521 = pkin(1) * t4632;
t3533 = pkin(2) * t3545;
t3546 = pkin(3) * t3557;
t3572 = pkin(1) * t4357;
t3578 = t4011 * t3602;
t4159 = 0.2e1 * t3968 * t4327;
t4072 = pkin(3) * (pkin(6) * t4264 + t3547) + t4159 * t5064;
t4212 = t3997 * t4353;
t4236 = -t4006 * t4750 + t3746;
t4248 = pkin(2) * t4327;
t4422 = pkin(2) * t4593;
t4275 = 0.2e1 * t4422;
t4371 = t3966 * t4629;
t4403 = pkin(2) * t3815;
t4634 = t3975 * t3557;
t4425 = pkin(2) * t4634;
t4429 = pkin(1) * t4630;
t4435 = -(pkin(2) * t4263 + t3545 + t3578) * t3969 + t3545;
t4441 = 0.2e1 * t4588;
t4477 = 0.2e1 * t5001;
t4707 = pkin(6) * t5001;
t4480 = pkin(2) * t4707;
t4483 = pkin(2) * t3546;
t4541 = t3997 * t4893;
t4690 = pkin(3) * t5193;
t4762 = t3892 + t4030;
t4778 = t5001 * t4025 + t3572;
t4187 = t3996 * t4328;
t4141 = pkin(3) * t4187;
t5013 = (-t3547 + t4141) * t3969;
t5165 = 0.2e1 * t3997;
t4675 = (((t3969 - 0.4e1 / 0.3e1) * t4890 + ((-0.2e1 / 0.3e1 * t3892 + t4771) * t3969 + 0.2e1 / 0.3e1 * t4403 + 0.4e1 / 0.3e1 * t3892 + t4492) * t4005 + (0.4e1 / 0.3e1 * t5054 - 0.2e1 / 0.3e1 * t3852) * t5164) * t5001 * t5103 + (t3901 * t4371 - (t5013 + (t3548 + t5193) * t4006 + 0.3e1 * t3547 - 0.4e1 * t3853 * t4328) * t5054 + ((t4327 * t5111 - t4486) * t4006 + (pkin(6) * t4275 - t4429) * t3997 - t3830 * t3557 + (-t3546 * t3969 + (t4159 + (pkin(2) * t4355 - 0.4e1 * t4327) * t4006 + (t3596 + t4275) * t5165 + 0.2e1 * t3578 + t4435) * t3996) * pkin(3)) * t4005 + ((-t4328 * t4893 - t3533) * t3996 - t4483) * t3969 + ((t3431 * t3997 - 0.2e1 * t4248) * t3996 + t4690) * t4006 + (t3885 * t4328 + t3533) * t3996 + t4072) * t3952 + ((-0.3e1 * t3969 + 0.3e1) * t4890 * t5001 - (t3901 * t3572 + (-t4252 + (-t3545 - 0.2e1 * t3578 - 0.2e1 * t3517) * t3997) * t3975 + ((t5114 + 0.4e1 * t4802) * t4006 + (0.4e1 * t3969 - 0.2e1) * pkin(2)) * t5001) * t5054 + (0.2e1 * (t3812 + t4762) * t4594 + (((t3521 + t4784) * t3914 + t3431) * t3975 - t3826 * pkin(2) * t4477) * t4006 + (0.3e1 * t3997 * t4425 - 0.4e1 * t4707) * t3914 + (pkin(6) * t4425 + t4026 * t4588) * t3997 - t3793 * t5001) * t4005 + ((-t3975 * t4429 + 0.2e1 * t4480) * t3996 + pkin(3) * t4778) * t3969 + ((pkin(1) * t4425 + pkin(6) * t4441) * t3996 + pkin(3) * t4441) * t4824 + (t4634 * t5142 - 0.2e1 * t4480) * t3996 - (t3578 * t4881 + t4778) * pkin(3)) * t3976 - t5075 * t4371 - (-t5013 - t3547 + (-t4784 * t4006 + (t5110 + t3914) * t4593) * t3997) * t5054 - (-t5075 * t3546 + (pkin(2) * t4212 + t3575 + t3578 + (t4011 * t3968 - (t4011 + t3932) * t4006) * t3975 * t4477 + t4435) * t3996) * t3922 + ((t3533 + (t4541 + t4757) * t4593) * t3996 + t4483) * t3969 + (((pkin(1) * t4275 - t3431) * t3997 + 0.2e1 * t4248) * t3996 - t4690) * t4006 + (-t3533 + (t3794 * t3997 + t5105) * t4593) * t3996 - t4072) / (t3725 + (t3734 * t4005 + t4236) * t3975) * t3638;
t3264 = (-t3302 * t5010 - t4658 - t4675) * t3666;
t3476 = t3620 + t3557;
t4589 = t4006 * t5001;
t3614 = t3975 * t4589;
t3488 = t3614 - t3602;
t3667 = 0.1e1 / t3672 ^ 2;
t3731 = -pkin(6) * t4765 + t3914 * t5156;
t4150 = t3969 * t4893 + t4762;
t4257 = pkin(2) * t4370;
t4533 = t3975 * t4861;
t4944 = t3829 * t4006;
t5016 = t3422 * t4006;
t3284 = -(t4655 + (t3557 * t3889 - t4352) * t4853 + (-t4257 + t5016) * t5069 + ((t3611 + 0.2e1 * t3547) * t3976 * t3967 + (-(t3517 + t3578) * t3997 * t3967 + (-0.2e1 * t4257 + t5016) * t4005) * t3975) * pkin(3) + (((t4021 + t4768) * t5102 + 0.2e1 * t3923 + t4944 - pkin(2)) * t5054 + (-(-t4033 + t4150 + 0.2e1 * t4403) * t3952 + (t3845 * t4006 * t4737 + t4689 * t5100) * t3976 + pkin(2) * t4944 + t3837 + t3974 + t4150) * t4005 + pkin(2) * (t3797 * t4533 - t3852 * t3952 + t3852)) * t5001) * t3667 * t3638 + (-(t3476 * t4890 + (-t4141 / 0.2e1 + t3476 * pkin(2)) * t4753 + (t3889 * t3476 + ((t3881 - 0.2e1 * t5063) * pkin(3) * t4593 - t4620) * t3996) * t4005 + pkin(2) * t3797 * t4329) * t3557 + (t3967 * t4186 + (t3476 * t3996 * t4011 + pkin(3) * t3614 - t5010) * t4005 + pkin(2) * t3488) * t5010) / ((t3731 * t3975 + t3752) * t4005 + t4272);
t3601 = t3608 ^ 2 / t3704 ^ 2 * t4032;
t3586 = pkin(7) * t3601;
t3635 = t3638 ^ 2;
t3626 = t3635 * t3667;
t4128 = t3975 * t4188;
t4096 = t4128 * t4025;
t4615 = t3997 * t3626;
t4704 = pkin(6) * t4881;
t5037 = pkin(7) * t3969;
t5144 = pkin(6) * t4529 + t3932;
t5184 = t3264 * t5112 + (-t3869 * t3976 + t4704) * t3284 - t3626 * ((t4018 - t4719 + t5037) * t5101 + pkin(7) - 0.2e1 * t5037 + t5144) - (pkin(2) * t4615 + pkin(7) * t4128) * t4744 + t3997 * t4096 + t3586;
t4219 = t3598 * t3553;
t4145 = pkin(2) * t4219;
t3438 = -0.2e1 * t4145;
t3803 = pkin(7) * t4000 - t5067;
t4777 = t3612 - 0.2e1 * t3598;
t5026 = t3282 * t3975;
t5045 = pkin(7) * t3261;
t5183 = t3803 * t5026 + (pkin(2) * t4777 + pkin(7) * t4341) * t3618 + t3438 + t5045;
t4217 = t3600 * t3555;
t4146 = pkin(2) * t4217;
t3440 = -0.2e1 * t4146;
t3805 = pkin(7) * t4003 - t5065;
t4776 = t3613 - 0.2e1 * t3600;
t5023 = t3283 * t3975;
t5044 = pkin(7) * t3262;
t5182 = t3805 * t5023 + (pkin(2) * t4776 + pkin(7) * t4335) * t3619 + t3440 + t5044;
t4215 = t3602 * t3557;
t4144 = pkin(2) * t4215;
t3439 = -0.2e1 * t4144;
t3807 = pkin(7) * t4006 - t5063;
t4775 = t3614 - 0.2e1 * t3602;
t5020 = t3284 * t3975;
t5043 = pkin(7) * t3263;
t5181 = t3807 * t5020 + (pkin(2) * t4775 + pkin(7) * t4328) * t3620 + t3439 + t5043;
t3240 = t3282 * t4878 + t3261;
t4536 = t3975 * t4864;
t5180 = -t4536 * t3624 - t3240;
t3241 = t3283 * t4875 + t3262;
t4534 = t3975 * t4862;
t5179 = -t4534 * t3625 - t3241;
t3242 = t3284 * t4872 + t3263;
t4532 = t3975 * t4860;
t5178 = -t4532 * t3626 - t3242;
t3279 = t3976 * t3282;
t3552 = t3564 ^ 2 / t3690 ^ 2;
t3924 = pkin(7) * t3991;
t3858 = t3924 + pkin(1);
t4181 = t3618 * t3553;
t4421 = pkin(6) * t4536;
t4961 = (pkin(7) * t4844 - pkin(2) + t3917) * t3952;
t5041 = pkin(7) * t3265;
t5177 = -t3279 * t3864 + (0.2e1 * t4181 + t3552) * pkin(2) + (t3858 * t4000 + t3917 - t4421 - t4961) * t3624 - t5041;
t3280 = t3976 * t3283;
t3554 = t3565 ^ 2 / t3691 ^ 2;
t3925 = pkin(7) * t3994;
t3859 = t3925 + pkin(1);
t4180 = t3619 * t3555;
t4420 = pkin(6) * t4534;
t4960 = (pkin(7) * t4834 - pkin(2) + t3920) * t3952;
t5040 = pkin(7) * t3266;
t5176 = -t3280 * t3865 + (0.2e1 * t4180 + t3554) * pkin(2) + (t3859 * t4003 + t3920 - t4420 - t4960) * t3625 - t5040;
t3281 = t3976 * t3284;
t3556 = t3566 ^ 2 / t3692 ^ 2;
t3926 = pkin(7) * t3997;
t3860 = t3926 + pkin(1);
t4179 = t3620 * t3557;
t4419 = pkin(6) * t4532;
t4959 = (pkin(7) * t4824 - pkin(2) + t3923) * t3952;
t5042 = pkin(7) * t3264;
t5175 = -t3281 * t3866 + (0.2e1 * t4179 + t3556) * pkin(2) + (t3860 * t4006 + t3923 - t4419 - t4959) * t3626 - t5042;
t3799 = t3924 + t5158;
t4669 = t3282 * t4887;
t5171 = t3975 * (-t3261 * t5158 + (pkin(6) * t3265 - t5045) * t3991) + 0.2e1 * (-t3799 * t4000 + t4961) * t3282 + (-t3265 * t3867 + t4669 * t5110) * t3976;
t3800 = t3925 + t5157;
t4665 = t3283 * t4884;
t5170 = t3975 * (-t3262 * t5157 + (pkin(6) * t3266 - t5044) * t3994) + 0.2e1 * (-t3800 * t4003 + t4960) * t3283 + (-t3266 * t3868 + t4665 * t5110) * t3976;
t3801 = t3926 + t5156;
t4661 = t3284 * t4881;
t5169 = t3975 * (-t3263 * t5156 + (pkin(6) * t3264 - t5043) * t3997) + 0.2e1 * (-t3801 * t4006 + t4959) * t3284 + (-t3264 * t3869 + t4661 * t5110) * t3976;
t5155 = t3484 * t3636;
t5154 = t3486 * t3637;
t5153 = t3488 * t3638;
t5152 = t3597 - t3552;
t5151 = t3599 - t3554;
t5150 = t3601 - t3556;
t4392 = t3901 * t3914 - pkin(6);
t4880 = t3975 * t3998;
t5117 = -t3792 * t4007 + t4392 * t4880;
t4393 = t3900 * t3913 - pkin(6);
t4883 = t3975 * t3995;
t5116 = -t3791 * t4004 + t4393 * t4883;
t4394 = t3899 * t3912 - pkin(6);
t4886 = t3975 * t3992;
t5115 = -t3790 * t4001 + t4394 * t4886;
t5113 = -0.4e1 * pkin(2);
t5109 = 0.2e1 * pkin(7);
t5108 = -0.2e1 * t3612 + t3598;
t5107 = -0.2e1 * t3613 + t3600;
t5106 = -0.2e1 * t3614 + t3602;
t5099 = -0.2e1 * t3975;
t5098 = 0.2e1 * t3975;
t5097 = -0.2e1 * t3976;
t5096 = -0.2e1 * t3990;
t5094 = -0.2e1 * t3993;
t5092 = -0.2e1 * t3996;
t5090 = -0.2e1 * t3999;
t5089 = -0.2e1 * t4002;
t5088 = -0.2e1 * t4005;
t5087 = t3976 / 0.2e1;
t5086 = -0.4e1 * t3952 + 0.4e1;
t5084 = t5101 - 0.2e1;
t5082 = 0.4e1 * t3959 - 0.2e1;
t5079 = 0.4e1 * t3963 - 0.2e1;
t5076 = 0.4e1 * t3967 - 0.2e1;
t5053 = pkin(6) * t3975;
t3903 = t3976 * pkin(2);
t5033 = t3240 * t4000;
t5032 = t3241 * t4003;
t5031 = t3242 * t4006;
t5027 = t3282 * t3668;
t5025 = t3282 * t4000;
t5024 = t3283 * t3670;
t5022 = t3283 * t4003;
t5021 = t3284 * t3666;
t5019 = t3284 * t4006;
t4044 = -t3990 * t5162 - t3999 * t4394;
t4848 = t3990 * t3992;
t4080 = t5162 * t4848;
t4846 = t3991 * t3992;
t4877 = t3975 * t4001;
t4110 = pkin(6) * t4846 + t3735 * t4877;
t4305 = t4001 * t4525;
t4554 = t3906 * t4846;
t4408 = pkin(3) * t4554;
t4549 = t3909 * t4887;
t4818 = t4000 * t4001;
t4906 = t3909 * t3991;
t4914 = t3906 * t3992;
t3627 = (t4044 * t3909 + t4914 * t5126) * t3952 + (-(t3906 * t4818 - 0.2e1 * t4549) * t5056 + (t3906 * t5115 - t3909 * t4122) * t3999 + t3975 * (-t3846 * t4906 + t3906 * t4080)) * t3976 - t3959 * t4408 + ((t3906 * t4305 + t3909 * t3961 - t3909) * t3912 - t3909 * pkin(6)) * t3999 + (t3906 * t4110 + t3909 * t4244) * t3990 + t4408;
t3678 = 0.1e1 / ((t3729 * t3999 + t4238) * t3975 + t3723);
t5009 = t3627 * t3678;
t4043 = -t3993 * t5163 - t4002 * t4393;
t4838 = t3993 * t3995;
t4079 = t5163 * t4838;
t4836 = t3994 * t3995;
t4874 = t3975 * t4004;
t4109 = pkin(6) * t4836 + t3736 * t4874;
t4303 = t4004 * t4521;
t4552 = t3907 * t4836;
t4405 = pkin(3) * t4552;
t4547 = t3910 * t4884;
t4813 = t4003 * t4004;
t4903 = t3910 * t3994;
t4911 = t3907 * t3995;
t3628 = (t4043 * t3910 + t4911 * t5124) * t3952 + (-(t3907 * t4813 - 0.2e1 * t4547) * t5055 + (t3907 * t5116 - t3910 * t4121) * t4002 + t3975 * (-t3849 * t4903 + t3907 * t4079)) * t3976 - t3963 * t4405 + ((t3907 * t4303 + t3910 * t3965 - t3910) * t3913 - t3910 * pkin(6)) * t4002 + (t3907 * t4109 + t3910 * t4243) * t3993 + t4405;
t3679 = 0.1e1 / ((t3730 * t4002 + t4237) * t3975 + t3724);
t5008 = t3628 * t3679;
t4042 = -t3996 * t5164 - t4005 * t4392;
t4828 = t3996 * t3998;
t4078 = t5164 * t4828;
t4826 = t3997 * t3998;
t4871 = t3975 * t4007;
t4108 = pkin(6) * t4826 + t3737 * t4871;
t4301 = t4007 * t4517;
t4550 = t3908 * t4826;
t4402 = pkin(3) * t4550;
t4545 = t3911 * t4881;
t4808 = t4006 * t4007;
t4900 = t3911 * t3997;
t4908 = t3908 * t3998;
t3629 = (t4042 * t3911 + t4908 * t5122) * t3952 + (-(t3908 * t4808 - 0.2e1 * t4545) * t5054 + (t3908 * t5117 - t3911 * t4120) * t4005 + t3975 * (-t3852 * t4900 + t3908 * t4078)) * t3976 - t3967 * t4402 + ((t3908 * t4301 + t3911 * t3969 - t3911) * t3914 - t3911 * pkin(6)) * t4005 + (t3908 * t4108 + t3911 * t4242) * t3996 + t4402;
t3680 = 0.1e1 / ((t3731 * t4005 + t4236) * t3975 + t3725);
t5007 = t3629 * t3680;
t4548 = t3909 * t4846;
t4407 = pkin(3) * t4548;
t4555 = t3906 * t4887;
t4905 = t3909 * t3992;
t4915 = t3906 * t3991;
t3630 = (t3906 * t4044 - t4905 * t5126) * t3952 + ((t3909 * t4818 + 0.2e1 * t4555) * t5056 + (-t3906 * t4122 - t3909 * t5115) * t3999 - t3975 * (t3846 * t4915 + t3909 * t4080)) * t3976 + t3959 * t4407 + (-(-t3906 * t3961 + t3909 * t4305 + t3906) * t3912 - t3906 * pkin(6)) * t3999 + (t3906 * t4244 - t3909 * t4110) * t3990 - t4407;
t5006 = t3630 * t3678;
t4546 = t3910 * t4836;
t4404 = pkin(3) * t4546;
t4553 = t3907 * t4884;
t4902 = t3910 * t3995;
t4912 = t3907 * t3994;
t3631 = (t3907 * t4043 - t4902 * t5124) * t3952 + ((t3910 * t4813 + 0.2e1 * t4553) * t5055 + (-t3907 * t4121 - t3910 * t5116) * t4002 - t3975 * (t3849 * t4912 + t3910 * t4079)) * t3976 + t3963 * t4404 + (-(-t3907 * t3965 + t3910 * t4303 + t3907) * t3913 - t3907 * pkin(6)) * t4002 + (t3907 * t4243 - t3910 * t4109) * t3993 - t4404;
t5005 = t3631 * t3679;
t4544 = t3911 * t4826;
t4401 = pkin(3) * t4544;
t4551 = t3908 * t4881;
t4899 = t3911 * t3998;
t4909 = t3908 * t3997;
t3632 = (t3908 * t4042 - t4899 * t5122) * t3952 + ((t3911 * t4808 + 0.2e1 * t4551) * t5054 + (-t3908 * t4120 - t3911 * t5117) * t4005 - t3975 * (t3852 * t4909 + t3911 * t4078)) * t3976 + t3967 * t4401 + (-(-t3908 * t3969 + t3911 * t4301 + t3908) * t3914 - t3908 * pkin(6)) * t4005 + (t3908 * t4242 - t3911 * t4108) * t3996 - t4401;
t5004 = t3632 * t3680;
t3726 = t3945 - t4571;
t4740 = -0.2e1 * t4916;
t4262 = t5161 * t3961 * t4740;
t4565 = t5161 * t4914;
t4299 = t3847 * t4565;
t4316 = t3847 * t4554;
t4321 = t3992 * t4571;
t4568 = t4001 * t4949;
t4840 = t3992 * t4011;
t4513 = t3976 * t4840;
t4583 = (t4001 * t4955 + t4513 * t5190) * t3961 * t3975;
t4930 = t5161 * t3909;
t4940 = t3832 * t4001;
t3639 = t3906 * t4583 + (((-t3847 * t4930 - t3906 * t4321) * t3976 + t3906 * t4568) * t3975 + (t3909 * t4571 - t4299) * t3952 + t4299 + t3909 * t3726) * t4000 - t3832 * t4930 + (t3909 * t4262 + ((-t3847 * t4906 - t4565) * t3976 + t3906 * t4940) * t3975 + (-t4316 + t4930) * t3952 + t4316) * t4011;
t5000 = t3639 * t3693;
t3727 = t3945 - t4570;
t4261 = t5160 * t3965 * t4740;
t4563 = t5160 * t4911;
t4297 = t3850 * t4563;
t4314 = t3850 * t4552;
t4319 = t3995 * t4570;
t4567 = t4004 * t4947;
t4830 = t3995 * t4011;
t4510 = t3976 * t4830;
t4582 = (t4004 * t4954 + t4510 * t5191) * t3965 * t3975;
t4927 = t5160 * t3910;
t4939 = t3833 * t4004;
t3640 = t3907 * t4582 + (((-t3850 * t4927 - t3907 * t4319) * t3976 + t3907 * t4567) * t3975 + (t3910 * t4570 - t4297) * t3952 + t4297 + t3910 * t3727) * t4003 - t3833 * t4927 + (t3910 * t4261 + ((-t3850 * t4903 - t4563) * t3976 + t3907 * t4939) * t3975 + (-t4314 + t4927) * t3952 + t4314) * t4011;
t4999 = t3640 * t3695;
t3728 = t3945 - t4569;
t4260 = t5159 * t3969 * t4740;
t4561 = t5159 * t4908;
t4295 = t3853 * t4561;
t4312 = t3853 * t4550;
t4317 = t3998 * t4569;
t4566 = t4007 * t4945;
t4820 = t3998 * t4011;
t4507 = t3976 * t4820;
t4581 = (t4007 * t4953 + t4507 * t5192) * t3969 * t3975;
t4924 = t5159 * t3911;
t4938 = t3834 * t4007;
t3641 = t3908 * t4581 + (((-t3853 * t4924 - t3908 * t4317) * t3976 + t3908 * t4566) * t3975 + (t3911 * t4569 - t4295) * t3952 + t4295 + t3911 * t3728) * t4006 - t3834 * t4924 + (t3911 * t4260 + ((-t3853 * t4900 - t4561) * t3976 + t3908 * t4938) * t3975 + (-t4312 + t4924) * t3952 + t4312) * t4011;
t4998 = t3641 * t3697;
t4564 = t5161 * t4905;
t4298 = t3847 * t4564;
t4315 = t3847 * t4548;
t4931 = t5161 * t3906;
t3642 = -t3909 * t4583 + (((-t3847 * t4931 + t3909 * t4321) * t3976 - t3909 * t4568) * t3975 + (t3906 * t4571 + t4298) * t3952 - t4298 + t3906 * t3726) * t4000 - t3832 * t4931 + (t3906 * t4262 - ((t3847 * t4915 - t4564) * t3976 + t3909 * t4940) * t3975 + (t4315 + t4931) * t3952 - t4315) * t4011;
t4997 = t3642 * t3693;
t4562 = t5160 * t4902;
t4296 = t3850 * t4562;
t4313 = t3850 * t4546;
t4928 = t5160 * t3907;
t3643 = -t3910 * t4582 + (((-t3850 * t4928 + t3910 * t4319) * t3976 - t3910 * t4567) * t3975 + (t3907 * t4570 + t4296) * t3952 - t4296 + t3907 * t3727) * t4003 - t3833 * t4928 + (t3907 * t4261 - ((t3850 * t4912 - t4562) * t3976 + t3910 * t4939) * t3975 + (t4313 + t4928) * t3952 - t4313) * t4011;
t4996 = t3643 * t3695;
t4560 = t5159 * t4899;
t4294 = t3853 * t4560;
t4311 = t3853 * t4544;
t4925 = t5159 * t3908;
t3644 = -t3911 * t4581 + (((-t3853 * t4925 + t3911 * t4317) * t3976 - t3911 * t4566) * t3975 + (t3908 * t4569 + t4294) * t3952 - t4294 + t3908 * t3728) * t4006 - t3834 * t4925 + (t3908 * t4260 - ((t3853 * t4909 - t4560) * t3976 + t3911 * t4938) * t3975 + (t4311 + t4925) * t3952 - t4311) * t4011;
t4995 = t3644 * t3697;
t4815 = t4001 * t4011;
t3777 = -pkin(2) * t3992 + t3976 * t4815;
t3783 = -pkin(1) * t3903 - pkin(6) * t4870;
t4489 = t4850 * t5112;
t4817 = t4001 * t3991;
t4514 = t3976 * t4817;
t4842 = t3992 * t3827;
t4937 = t3847 * t3975;
t4994 = ((t4001 * t4489 - 0.2e1 * t3777 * t3916 + (t3915 + t4893) * t3992) * t3961 + (t4514 * t3915 + ((0.2e1 * t4724 - t4937) * t4001 + t4842) * t3916 + (-pkin(2) * t4937 + t3976 * t4543) * t4001 + pkin(2) * t4842) * t4000 + t4011 * (t3992 * t3832 + (pkin(3) * t4859 - t3847 * t4887 + t3903) * t4001)) / ((pkin(1) * t4718 + t3783 * t3991) * t3999 + t4107);
t4810 = t4004 * t4011;
t3778 = -pkin(2) * t3995 + t3976 * t4810;
t4812 = t4004 * t3994;
t4511 = t3976 * t4812;
t4832 = t3995 * t3828;
t4935 = t3850 * t3975;
t4993 = ((t4004 * t4489 - 0.2e1 * t3778 * t3919 + (t3918 + t4893) * t3995) * t3965 + (t4511 * t3918 + ((0.2e1 * t4723 - t4935) * t4004 + t4832) * t3919 + (-pkin(2) * t4935 + t3976 * t4542) * t4004 + pkin(2) * t4832) * t4003 + t4011 * (t3995 * t3833 + (pkin(3) * t4856 - t3850 * t4884 + t3903) * t4004)) / ((pkin(1) * t4717 + t3783 * t3994) * t4002 + t4106);
t4805 = t4007 * t4011;
t3779 = -pkin(2) * t3998 + t3976 * t4805;
t4807 = t4007 * t3997;
t4508 = t3976 * t4807;
t4822 = t3998 * t3829;
t4933 = t3853 * t3975;
t4992 = ((t4007 * t4489 - 0.2e1 * t3779 * t3922 + (t3921 + t4893) * t3998) * t3969 + (t4508 * t3921 + ((0.2e1 * t4722 - t4933) * t4007 + t4822) * t3922 + (-pkin(2) * t4933 + t3976 * t4541) * t4007 + pkin(2) * t4822) * t4006 + t4011 * (t3998 * t3834 + (pkin(3) * t4853 - t3853 * t4881 + t3903) * t4007)) / ((pkin(1) * t4716 + t3783 * t3997) * t4005 + t4105);
t4715 = pkin(3) * t4848;
t4761 = t3952 - 0.1e1 / 0.2e1;
t4841 = t3992 * t4000;
t4857 = t3976 * t4001;
t3648 = ((-t4394 * t4857 + t4715 * t4844) * t3999 + (-t5162 * t4857 + t3992 * (t3991 * t5158 - t4011 * t4897)) * t3990) * t3975 - 0.2e1 * (t4761 * t4817 + t4841 * t5087) * t5056 - (t3790 * t3992 - t3795 * t4857) * t4859 + t4001 * t3846 * t4559;
t4991 = t3648 * t3678;
t4714 = pkin(3) * t4838;
t4831 = t3995 * t4003;
t4854 = t3976 * t4004;
t3649 = ((-t4393 * t4854 + t4714 * t4834) * t4002 + (-t5163 * t4854 + t3995 * (t3994 * t5157 - t4011 * t4896)) * t3993) * t3975 - 0.2e1 * (t4761 * t4812 + t4831 * t5087) * t5055 - (t3791 * t3995 - t3796 * t4854) * t4856 + t4004 * t3849 * t4558;
t4990 = t3649 * t3679;
t4713 = pkin(3) * t4828;
t4821 = t3998 * t4006;
t4851 = t3976 * t4007;
t3650 = ((-t4392 * t4851 + t4713 * t4824) * t4005 + (-t5164 * t4851 + t3998 * (t3997 * t5156 - t4011 * t4895)) * t3996) * t3975 - 0.2e1 * (t4761 * t4807 + t4821 * t5087) * t5054 - (t3792 * t3998 - t3797 * t4851) * t4853 + t4007 * t3852 * t4557;
t4989 = t3650 * t3680;
t3747 = -t3976 * t4846 + t4818;
t4077 = (-t3903 * t3992 + t4815) * t3991 + (pkin(2) * t4001 + t4513) * t4000 + t3975 * t4715;
t3651 = -(t3747 * t3909 + t4555) * t5056 + (t3906 * t4068 - t3909 * t4077) * t3999 - (t3906 * t3976 + t3909 * t4886) * t5068;
t4988 = t3651 * t3668;
t3748 = -t3976 * t4836 + t4813;
t4076 = (-t3903 * t3995 + t4810) * t3994 + (pkin(2) * t4004 + t4510) * t4003 + t3975 * t4714;
t3652 = -(t3748 * t3910 + t4553) * t5055 + (t3907 * t4067 - t3910 * t4076) * t4002 - (t3907 * t3976 + t3910 * t4883) * t5066;
t4987 = t3652 * t3670;
t3749 = -t3976 * t4826 + t4808;
t4075 = (-t3903 * t3998 + t4805) * t3997 + (pkin(2) * t4007 + t4507) * t4006 + t3975 * t4713;
t3653 = -(t3749 * t3911 + t4551) * t5054 + (t3908 * t4066 - t3911 * t4075) * t4005 - (t3908 * t3976 + t3911 * t4880) * t5064;
t4986 = t3653 * t3666;
t3654 = (t3747 * t3906 - t4549) * t5056 + (t3906 * t4077 + t3909 * t4068) * t3999 + (t3906 * t4886 - t3909 * t3976) * t5068;
t4985 = t3654 * t3668;
t3655 = (t3748 * t3907 - t4547) * t5055 + (t3907 * t4076 + t3910 * t4067) * t4002 + (t3907 * t4883 - t3910 * t3976) * t5066;
t4984 = t3655 * t3670;
t3656 = (t3749 * t3908 - t4545) * t5054 + (t3908 * t4075 + t3911 * t4066) * t4005 + (t3908 * t4880 - t3911 * t3976) * t5064;
t4983 = t3656 * t3666;
t4519 = t3996 * t4871;
t3701 = (t4508 + t4821) * t5054 + (-pkin(3) * t4519 - t3779 * t4006 + (pkin(2) * t4851 + t4820) * t3997) * t4005 - pkin(2) * t4519;
t4982 = t3666 * t3701;
t4981 = t3667 * t4006;
t4527 = t3990 * t4877;
t3699 = (t4514 + t4841) * t5056 + (-pkin(3) * t4527 - t3777 * t4000 + (pkin(2) * t4857 + t4840) * t3991) * t3999 - pkin(2) * t4527;
t4980 = t3668 * t3699;
t4979 = t3669 * t4000;
t4523 = t3993 * t4874;
t3700 = (t4511 + t4831) * t5055 + (-pkin(3) * t4523 - t3778 * t4003 + (pkin(2) * t4854 + t4830) * t3994) * t4002 - pkin(2) * t4523;
t4978 = t3670 * t3700;
t4977 = t3671 * t4003;
t4976 = t3678 * t3991;
t4975 = t3679 * t3994;
t4974 = t3680 * t3997;
t4879 = t3975 * t3999;
t4876 = t3975 * t4002;
t4873 = t3975 * t4005;
t4868 = t3976 * t3264;
t4867 = t3976 * t3265;
t4866 = t3976 * t3266;
t4849 = t3990 * t3991;
t4839 = t3993 * t3994;
t4829 = t3996 * t3997;
t4574 = t3803 * t4889;
t4688 = t5085 * pkin(6);
t3381 = 0.2e1 * t3803 * t4650 + (t4574 - t4688) * t5003;
t4608 = t3999 * t5003;
t4801 = -t3799 * t3999 * t5026 - t3381 * t4608 + (-t5026 * t5051 + t5177) * t3990;
t4573 = t3805 * t4889;
t3382 = 0.2e1 * t3805 * t4642 + (t4573 - t4688) * t5002;
t4599 = t4002 * t5002;
t4800 = -t3800 * t4002 * t5023 - t3382 * t4599 + (-t5023 * t5049 + t5176) * t3993;
t4799 = (-pkin(6) * t4814 + t3800 * t3993) * t5023 + t3382 * t4601 + t5176 * t4002;
t4572 = t3807 * t4889;
t3383 = 0.2e1 * t3807 * t4634 + (t4572 - t4688) * t5001;
t4590 = t4005 * t5001;
t4798 = -t3801 * t4005 * t5020 - t3383 * t4590 + (-t5020 * t5047 + t5175) * t3996;
t4797 = (-pkin(6) * t4809 + t3801 * t3996) * t5020 + t3383 * t4592 + t5175 * t4005;
t4796 = (-pkin(6) * t4819 + t3799 * t3990) * t5026 + t3381 * t4610 + t5177 * t3999;
t4792 = t4777 * t3618 - 0.2e1 * t4219;
t4791 = t4776 * t3619 - 0.2e1 * t4217;
t4790 = t4775 * t3620 - 0.2e1 * t4215;
t4774 = t3624 - t3552;
t4773 = t3625 - t3554;
t4772 = t3626 - t3556;
t4743 = -0.2e1 * t3553;
t4742 = -0.2e1 * t3555;
t4741 = -0.2e1 * t3557;
t4739 = -0.2e1 * t4889;
t4736 = -0.2e1 * t4847;
t4735 = -0.2e1 * t4837;
t4734 = -0.2e1 * t4827;
t4733 = t5084 * pkin(6);
t3441 = t3552 + t3597;
t4712 = t3441 * t5053;
t3442 = t3554 + t3599;
t4711 = t3442 * t5053;
t3443 = t3556 + t3601;
t4710 = t3443 * t5053;
t3249 = t3279 + (-t4674 / 0.2e1 - t4660 / 0.2e1 + t3300 * t4500) * t3668;
t4681 = t3249 * t4887;
t3250 = t3280 + (-t4673 / 0.2e1 - t4659 / 0.2e1 + t3301 * t4499) * t3670;
t4680 = t3250 * t4884;
t3251 = t3281 + (-t4675 / 0.2e1 - t4658 / 0.2e1 + t3302 * t4498) * t3666;
t4679 = t3251 * t4881;
t4678 = t3264 * t4872;
t4677 = t3265 * t4878;
t4676 = t3266 * t4875;
t4672 = t3991 ^ 2 * t5027;
t4671 = t3282 * t4976;
t4670 = t3678 * t5025;
t4668 = t3994 ^ 2 * t5024;
t4667 = t3283 * t4975;
t4666 = t3679 * t5022;
t4664 = t3997 ^ 2 * t5021;
t4663 = t3284 * t4974;
t4662 = t3680 * t5019;
t4654 = t3678 * t5155;
t4653 = t3679 * t5154;
t4652 = t3680 * t5153;
t4651 = t3636 * t3553;
t4643 = t3637 * t3555;
t4635 = t3638 * t3557;
t4618 = t3633 * t4979;
t4616 = t3634 * t4977;
t4614 = t3635 * t4981;
t4613 = t3952 * t5003;
t4604 = t3952 * t5002;
t4595 = t3952 * t5001;
t4586 = t3648 * t4976;
t4585 = t3649 * t4975;
t4584 = t3650 * t4974;
t4540 = t3961 * t3624;
t4539 = t3965 * t3625;
t4538 = t3969 * t3626;
t4528 = t3975 * t4849;
t4526 = t3975 * t4845;
t4524 = t3975 * t4839;
t4522 = t3975 * t4835;
t4520 = t3975 * t4829;
t4518 = t3975 * t4825;
t4506 = t3990 * t4845;
t4505 = t3993 * t4835;
t4504 = t3996 * t4825;
t3188 = -t3263 * t3866 * t3976 + ((-pkin(6) * t3263 - t5042) * t4006 + t3264 * t5063) * t3975 + (-0.2e1 * t4572 + t4733) * t3284;
t3370 = (-pkin(7) * t3556 + t4215 * t5110 + t3586) * t3997 + pkin(1) * t3601;
t3380 = t3586 + (pkin(1) * t3443 + t4096) * t3997;
t3401 = t3521 - t3434;
t4354 = t4005 * t3602;
t4251 = pkin(2) * t4354;
t3419 = t4633 * t5109 + t4251;
t3437 = t3545 - t3590;
t3494 = t3596 + t4422;
t4125 = t3860 * t4188;
t4374 = t3638 * t4632;
t4216 = t3666 * t4374;
t4221 = t3434 * t4328;
t4476 = t3666 * (t5169 * t3996 - t3188 * t4005 + 0.2e1 * (t3419 * t3969 + (pkin(7) * t4354 + t4633 * t5112) * t4824 - t4251 + t3996 * t3434) * t4595 + ((t3437 * t4329 - t3494 * t4631) * t4744 + (t3439 + 0.2e1 * t4221) * t4005 + t3380 * t3996) * t3976 - 0.2e1 * t3419 * t4594 + (t4125 * t5088 + t3996 * t4710 + (0.4e1 * t3996 * t4216 + t4873 * t5150) * pkin(2)) * t4006 + t3370 * t4873 + 0.2e1 * t3401 * t4592);
t4176 = t4356 / 0.2e1;
t4245 = pkin(2) * t4356;
t4395 = pkin(7) * t4631;
t4475 = t3666 * (-t5169 * t4005 - t3188 * t3996 - 0.4e1 * ((t4395 - t4245 / 0.2e1) * t3969 - (pkin(7) * t4176 + t4396) * t4824 + (t3593 / 0.2e1 - t3544 / 0.2e1) * t4005 + pkin(2) * t4176) * t4595 + ((-t3437 * t3975 * t4590 - t3494 * t4633) * t4744 - t3380 * t4005 + (-t4144 + t4221) * t5091) * t3976 + (-0.2e1 * t4245 + 0.4e1 * t4395) * t4594 + ((t4216 * t5113 - t4710) * t4005 + (t4125 + (t3556 / 0.2e1 - t3601 / 0.2e1) * t5069) * t5092) * t4006 - 0.2e1 * t3401 * t4590 + t3370 * t4882);
t3221 = t3284 * t4432 + t3284 - t4868;
t4224 = t4006 * t4388;
t3350 = t4128 * t5097 + (t4224 - t4357) * t3557;
t4300 = t4872 * t3556;
t4373 = (t3614 + t3602) * t4516;
t4474 = t3666 * (t3221 * t4734 + t4679 * t5076 + (0.2e1 * t4300 + 0.4e1 * t4373) * t3967 + 0.4e1 * t3350 * t4504 - 0.2e1 * t4373 - t4300 - 0.2e1 * t5077 * t5189);
t3260 = t3281 + t3264;
t3465 = t3620 + t3557 / 0.2e1;
t4302 = t3975 * t4504;
t4473 = t3666 * (t3221 * t3967 + 0.2e1 * t3251 * t4302 + t3260 * t3976 + (-t4373 - t4300 / 0.2e1 + t5189) * t4734 + (-t3350 * t3967 - t3465 * t4357) * t5165);
t4112 = t4188 * t4744;
t3386 = -t3975 * t5150 + t4112;
t3410 = t3975 * t4112 - t3601;
t3888 = t3969 - 0.1e1 / 0.2e1;
t4472 = t3666 * (-t4005 * t4678 + t3263 * (t4520 - t4853) + (t4005 * t4739 - t4829 * t5084) * t5019 + t3386 * t4825 + t3410 * t4861 + (t3952 * t4212 * t5088 + (t3888 * t3996 * t5086 + t4509 * t5098) * t3557) * t5001);
t4471 = t3666 * (-t3996 * t4678 - t3263 * (t4518 + t4861) + (t4825 * t5084 - 0.2e1 * t4533) * t5019 + t3386 * t4829 - t3410 * t4853 + (-((t3969 * t4741 + t3557) * t4005 + t3996 * t4212) * t3952 + t4370 * t4889 - 0.2e1 * t3888 * t4631) * t4477);
t3186 = -t3261 * t3864 * t3976 + ((-pkin(6) * t3261 - t5041) * t4000 + t3265 * t5067) * t3975 + (-0.2e1 * t4574 + t4733) * t3282;
t3369 = (-pkin(7) * t3552 + t4219 * t5110 + t3582) * t3991 + pkin(1) * t3597;
t3378 = t3582 + (pkin(1) * t3441 + t4098) * t3991;
t3399 = t3519 - t3432;
t4366 = t3999 * t3598;
t4255 = pkin(2) * t4366;
t3417 = t4648 * t5109 + t4255;
t3435 = t3536 - t3584;
t3492 = t3594 + t4424;
t4127 = t3858 * t4202;
t4384 = t3636 * t4647;
t4220 = t3668 * t4384;
t4223 = t3432 * t4341;
t4470 = t3668 * (t5171 * t3990 - t3186 * t3999 + 0.2e1 * (t3417 * t3961 + (pkin(7) * t4366 + t4648 * t5112) * t4844 - t4255 + t3990 * t3432) * t4613 + ((t3435 * t4342 - t3492 * t4646) * t4746 + (t3438 + 0.2e1 * t4223) * t3999 + t3378 * t3990) * t3976 - 0.2e1 * t3417 * t4612 + (t4127 * t5090 + t3990 * t4712 + (0.4e1 * t3990 * t4220 + t4879 * t5152) * pkin(2)) * t4000 + t3369 * t4879 + 0.2e1 * t3399 * t4610);
t4178 = t4368 / 0.2e1;
t4247 = pkin(2) * t4368;
t4399 = pkin(7) * t4646;
t4469 = t3668 * (-t5171 * t3999 - t3186 * t3990 - 0.4e1 * ((t4399 - t4247 / 0.2e1) * t3961 - (pkin(7) * t4178 + t4400) * t4844 + (t3591 / 0.2e1 - t3535 / 0.2e1) * t3999 + pkin(2) * t4178) * t4613 + ((-t3435 * t3975 * t4608 - t3492 * t4648) * t4746 - t3378 * t3999 + (-t4145 + t4223) * t5095) * t3976 + (-0.2e1 * t4247 + 0.4e1 * t4399) * t4612 + ((t4220 * t5113 - t4712) * t3999 + (t4127 + (t3552 / 0.2e1 - t3597 / 0.2e1) * t5069) * t5096) * t4000 - 0.2e1 * t3399 * t4608 + t3369 * t4888);
t3219 = t3282 * t4434 + t3282 - t4867;
t4226 = t4000 * t4390;
t3348 = t4130 * t5097 + (t4226 - t4369) * t3553;
t4293 = t4878 * t3552;
t4383 = (t3612 + t3598) * t4649;
t4468 = t3668 * (t3219 * t4736 + t5082 * t4681 + (0.2e1 * t4293 + 0.4e1 * t4383) * t3959 + 0.4e1 * t3348 * t4506 - 0.2e1 * t4383 - t4293 - 0.2e1 * t5083 * t5187);
t3256 = t3279 + t3265;
t3463 = t3618 + t3553 / 0.2e1;
t4306 = t3975 * t4506;
t4467 = t3668 * (t3219 * t3959 + 0.2e1 * t3249 * t4306 + t3256 * t3976 + (-t4383 - t4293 / 0.2e1 + t5187) * t4736 + (-t3348 * t3959 - t3463 * t4369) * t5167);
t4111 = t4202 * t4746;
t3384 = -t3975 * t5152 + t4111;
t3408 = t3975 * t4111 - t3597;
t3886 = t3961 - 0.1e1 / 0.2e1;
t4466 = t3668 * (-t3999 * t4677 + t3261 * (t4528 - t4859) + (t3999 * t4739 - t4849 * t5084) * t5025 + t3384 * t4845 + t3408 * t4865 + (t3952 * t4214 * t5090 + (t3886 * t3990 * t5086 + t4515 * t5098) * t3553) * t5003);
t4465 = t3668 * (-t3990 * t4677 - t3261 * (t4526 + t4865) + (t4845 * t5084 - 0.2e1 * t4537) * t5025 + t3384 * t4849 - t3408 * t4859 + (-((t3961 * t4743 + t3553) * t3999 + t3990 * t4214) * t3952 + t4380 * t4889 - 0.2e1 * t3886 * t4646) * t4479);
t3187 = -t3262 * t3865 * t3976 + ((-pkin(6) * t3262 - t5040) * t4003 + t3266 * t5065) * t3975 + (-0.2e1 * t4573 + t4733) * t3283;
t3371 = (-pkin(7) * t3554 + t4217 * t5110 + t3585) * t3994 + pkin(1) * t3599;
t3379 = t3585 + (pkin(1) * t3442 + t4097) * t3994;
t3400 = t3520 - t3433;
t4360 = t4002 * t3600;
t4253 = pkin(2) * t4360;
t3418 = t4640 * t5109 + t4253;
t3436 = t3541 - t3589;
t3493 = t3595 + t4423;
t4126 = t3859 * t4195;
t4379 = t3637 * t4639;
t4218 = t3670 * t4379;
t4222 = t3433 * t4335;
t4464 = t3670 * (t5170 * t3993 - t3187 * t4002 + 0.2e1 * (t3418 * t3965 + (pkin(7) * t4360 + t4640 * t5112) * t4834 - t4253 + t3993 * t3433) * t4604 + ((t3436 * t4336 - t3493 * t4638) * t4745 + (t3440 + 0.2e1 * t4222) * t4002 + t3379 * t3993) * t3976 - 0.2e1 * t3418 * t4603 + (t4126 * t5089 + t3993 * t4711 + (0.4e1 * t3993 * t4218 + t4876 * t5151) * pkin(2)) * t4003 + t3371 * t4876 + 0.2e1 * t3400 * t4601);
t4177 = t4362 / 0.2e1;
t4246 = pkin(2) * t4362;
t4397 = pkin(7) * t4638;
t4463 = t3670 * (-t5170 * t4002 - t3187 * t3993 - 0.4e1 * ((t4397 - t4246 / 0.2e1) * t3965 - (pkin(7) * t4177 + t4398) * t4834 + (t3592 / 0.2e1 - t3540 / 0.2e1) * t4002 + pkin(2) * t4177) * t4604 + ((-t3436 * t3975 * t4599 - t3493 * t4640) * t4745 - t3379 * t4002 + (-t4146 + t4222) * t5093) * t3976 + (-0.2e1 * t4246 + 0.4e1 * t4397) * t4603 + ((t4218 * t5113 - t4711) * t4002 + (t4126 + (t3554 / 0.2e1 - t3599 / 0.2e1) * t5069) * t5094) * t4003 - 0.2e1 * t3400 * t4599 + t3371 * t4885);
t3220 = t3283 * t4433 + t3283 - t4866;
t4225 = t4003 * t4389;
t3349 = t4129 * t5097 + (t4225 - t4363) * t3555;
t4292 = t4875 * t3554;
t4378 = (t3613 + t3600) * t4641;
t4462 = t3670 * (t3220 * t4735 + t4680 * t5079 + (0.2e1 * t4292 + 0.4e1 * t4378) * t3963 + 0.4e1 * t3349 * t4505 - 0.2e1 * t4378 - t4292 - 0.2e1 * t5080 * t5188);
t3258 = t3280 + t3266;
t3464 = t3619 + t3555 / 0.2e1;
t4304 = t3975 * t4505;
t4461 = t3670 * (t3220 * t3963 + 0.2e1 * t3250 * t4304 + t3258 * t3976 + (-t4378 - t4292 / 0.2e1 + t5188) * t4735 + (-t3349 * t3963 - t3464 * t4363) * t5166);
t4113 = t4195 * t4745;
t3385 = -t3975 * t5151 + t4113;
t3409 = t3975 * t4113 - t3599;
t3887 = t3965 - 0.1e1 / 0.2e1;
t4460 = t3670 * (-t4002 * t4676 + t3262 * (t4524 - t4856) + (t4002 * t4739 - t4839 * t5084) * t5022 + t3385 * t4835 + t3409 * t4863 + (t3952 * t4213 * t5089 + (t3887 * t3993 * t5086 + t4512 * t5098) * t3555) * t5002);
t4459 = t3670 * (-t3993 * t4676 - t3262 * (t4522 + t4863) + (t4835 * t5084 - 0.2e1 * t4535) * t5022 + t3385 * t4839 - t3409 * t4856 + (-((t3965 * t4742 + t3555) * t4002 + t3993 * t4213) * t3952 + t4375 * t4889 - 0.2e1 * t3887 * t4638) * t4478);
t4458 = t3678 * (t3990 * t5186 + t3999 * t5183);
t4457 = t3678 * (t3990 * t5183 - t3999 * t5186);
t3447 = t4226 + 0.2e1 * t4369;
t4340 = t3991 * t4608;
t4456 = t3678 * (0.2e1 * t3256 * t4847 + t5083 * t4669 + ((t4618 * t5099 + 0.4e1 * t4202) * t3976 + 0.4e1 * t4219) * t3959 + t3447 * t4340 * t5096 + t4792);
t4455 = t3679 * (t3993 * t5185 + t4002 * t5182);
t4454 = t3679 * (t3993 * t5182 - t4002 * t5185);
t3448 = t4225 + 0.2e1 * t4363;
t4333 = t3994 * t4599;
t4453 = t3679 * (0.2e1 * t3258 * t4837 + t4665 * t5080 + ((t4616 * t5099 + 0.4e1 * t4195) * t3976 + 0.4e1 * t4217) * t3963 + t3448 * t4333 * t5094 + t4791);
t4452 = t3680 * (t3996 * t5184 + t4005 * t5181);
t4451 = t3680 * (t3996 * t5181 - t4005 * t5184);
t3449 = t4224 + 0.2e1 * t4357;
t4326 = t3997 * t4590;
t4450 = t3680 * (0.2e1 * t3260 * t4827 + t4661 * t5077 + ((t4614 * t5099 + 0.4e1 * t4188) * t3976 + 0.4e1 * t4215) * t3967 + t3449 * t4326 * t5092 + t4790);
t4449 = t3693 * t4801;
t4448 = t3693 * t4796;
t4447 = t3695 * t4800;
t4446 = t3695 * t4799;
t4445 = t3697 * t4798;
t4444 = t3697 * t4797;
t4440 = 0.2e1 * t4540;
t4439 = 0.2e1 * t4539;
t4438 = 0.2e1 * t4538;
t4351 = t3678 * t4619;
t4350 = t3678 * t4618;
t4349 = t3679 * t4617;
t4348 = t3679 * t4616;
t4347 = t3680 * t4615;
t4346 = t3680 * t4614;
t4345 = t3693 * t4607;
t4339 = t3695 * t4598;
t4332 = t3697 * t4589;
t3234 = t3256 * t3990 + t3282 * t4526;
t4235 = t3678 * (t3234 * t3990 - t4792 * t4847 + (t3447 * t3959 - t4369) * t4609);
t3615 = -0.2e1 * t4540;
t3558 = -t3624 + t4440;
t4050 = t3558 * t3952 + t3408 + t3624;
t4234 = t3678 * ((t3615 + t4050) * t3990 + t5180 * t3999);
t4233 = t3678 * ((-t4050 + t4440) * t3999 + t5180 * t3990);
t3235 = t3258 * t3993 + t3283 * t4522;
t4232 = t3679 * (t3235 * t3993 - t4791 * t4837 + (t3448 * t3963 - t4363) * t4600);
t3616 = -0.2e1 * t4539;
t3559 = -t3625 + t4439;
t4049 = t3559 * t3952 + t3409 + t3625;
t4231 = t3679 * ((t3616 + t4049) * t3993 + t5179 * t4002);
t4230 = t3679 * ((-t4049 + t4439) * t4002 + t5179 * t3993);
t3236 = t3260 * t3996 + t3284 * t4518;
t4229 = t3680 * (t3236 * t3996 - t4790 * t4827 + (t3449 * t3967 - t4357) * t4591);
t3617 = -0.2e1 * t4538;
t3560 = -t3626 + t4438;
t4048 = t3560 * t3952 + t3410 + t3626;
t4228 = t3680 * ((t3617 + t4048) * t3996 + t5178 * t4005);
t4227 = t3680 * ((-t4048 + t4438) * t4005 + t5178 * t3996);
t4211 = t3991 * t4350;
t4209 = t3994 * t4348;
t4207 = t3997 * t4346;
t4205 = t3639 * t4345;
t4204 = t3642 * t4345;
t4203 = t4607 * t4994;
t4198 = t3640 * t4339;
t4197 = t3643 * t4339;
t4196 = t4598 * t4993;
t4191 = t3641 * t4332;
t4190 = t3644 * t4332;
t4189 = t4589 * t4992;
t3252 = t4868 / 0.2e1 + t3284;
t3462 = t4516 / 0.2e1 + t5001;
t4137 = t3666 * ((t3462 * t3932 + t3465 * t4701) * t4741 + t4679 * t5111 + 0.2e1 * t3252 * t3938);
t4136 = t3666 * ((t3462 * t3938 - t3465 * t4704) * t4741 - 0.2e1 * t3251 * t4701 - 0.2e1 * t3252 * t3932);
t3253 = t4867 / 0.2e1 + t3282;
t3466 = t4649 / 0.2e1 + t5003;
t4135 = t3668 * ((t3463 * t4703 + t3466 * t3930) * t4743 + t4681 * t5111 + 0.2e1 * t3253 * t3934);
t4134 = t3668 * ((-t3463 * t4706 + t3466 * t3934) * t4743 - 0.2e1 * t3249 * t4703 - 0.2e1 * t3253 * t3930);
t3254 = t4866 / 0.2e1 + t3283;
t3467 = t4641 / 0.2e1 + t5002;
t4133 = t3670 * ((t3464 * t4702 + t3467 * t3931) * t4742 + t4680 * t5111 + 0.2e1 * t3254 * t3936);
t4132 = t3670 * ((-t3464 * t4705 + t3467 * t3936) * t4742 - 0.2e1 * t3250 * t4702 - 0.2e1 * t3254 * t3931);
t4092 = t3678 * (-t3282 * t3763 + t3624 * (t3934 - t4421));
t4091 = t3678 * (t3282 * (pkin(1) * t4858 - t4706) + t3624 * t5146);
t4090 = t3679 * (-t3283 * t3764 + t3625 * (t3936 - t4420));
t4089 = t3679 * (t3283 * (pkin(1) * t4855 - t4705) + t3625 * t5145);
t4088 = t3680 * (-t3284 * t3762 + t3626 * (t3938 - t4419));
t4087 = t3680 * (t3284 * (pkin(1) * t4852 - t4704) + t3626 * t5144);
t3259 = 0.2e1 * t3281 + t3264;
t3474 = 0.2e1 * t3620 + t3557;
t4086 = t3666 * (t3474 * t3557 * t4006 + t3259 * t3997);
t4085 = t3666 * (t3259 * t4006 - t3474 * t4632);
t3255 = 0.2e1 * t3279 + t3265;
t3468 = 0.2e1 * t3618 + t3553;
t4084 = t3668 * (t3468 * t3553 * t4000 + t3255 * t3991);
t4083 = t3668 * (t3255 * t4000 - t3468 * t4647);
t3257 = 0.2e1 * t3280 + t3266;
t3471 = 0.2e1 * t3619 + t3555;
t4082 = t3670 * (t3471 * t3555 * t4003 + t3257 * t3994);
t4081 = t3670 * (t3257 * t4003 - t3471 * t4639);
t4062 = 0.4e1 * t3669 * t3886 * t4651 + 0.2e1 * t4844 * t5027;
t4061 = 0.2e1 * t4384 * t4979 + t4672;
t4060 = 0.4e1 * t3671 * t3887 * t4643 + 0.2e1 * t4834 * t5024;
t4059 = 0.2e1 * t4379 * t4977 + t4668;
t4058 = 0.4e1 * t3667 * t3888 * t4635 + 0.2e1 * t4824 * t5021;
t4057 = 0.2e1 * t4374 * t4981 + t4664;
t3950 = t3975 ^ 2;
t3475 = t3620 + 0.2e1 * t3557;
t3472 = t3619 + 0.2e1 * t3555;
t3469 = t3618 + 0.2e1 * t3553;
t3416 = t3475 * t3996 + t3975 * t4326;
t3415 = t3472 * t3993 + t3975 * t4333;
t3414 = t3469 * t3990 + t3975 * t4340;
t3413 = t3475 * t4005 - t4187;
t3412 = t3472 * t4002 - t4194;
t3411 = t3469 * t3999 - t4201;
t3335 = (t3626 * t4432 - 0.2e1 * t4179 + t4772) * t4827 - t5077 * t3476 * t4328;
t3334 = (t3625 * t4433 - 0.2e1 * t4180 + t4773) * t4837 - t5080 * t3473 * t4335;
t3333 = (t3624 * t4434 - 0.2e1 * t4181 + t4774) * t4847 - t5083 * t3470 * t4341;
t3320 = (-0.2e1 * t3556 + t3617 + 0.2e1 * t3626) * t3967 + (0.4e1 * t3476 * t4302 - t4516 * t5076) * t5001 + (t4917 * t5077 + t3969) * t3626 - t4772;
t3319 = (-0.2e1 * t3554 + t3616 + 0.2e1 * t3625) * t3963 + (0.4e1 * t3473 * t4304 - t4641 * t5079) * t5002 + (t4918 * t5080 + t3965) * t3625 - t4773;
t3318 = (-0.2e1 * t3552 + t3615 + 0.2e1 * t3624) * t3959 + (0.4e1 * t3470 * t4306 - t4649 * t5082) * t5003 + (t4919 * t5083 + t3961) * t3624 - t4774;
t3233 = t3260 * t4005 - t3284 * t4520;
t3232 = t3258 * t4002 - t3283 * t4524;
t3231 = t3256 * t3999 - t3282 * t4528;
t1 = [t3282 * t4988 + t3283 * t4987 + t3284 * t4986, 0, 0, (-t3630 * t4211 - t3631 * t4209 - t3632 * t4207 + t3651 * t4061 + t3652 * t4059 + t3653 * t4057) * t3950, (-t3558 * t5006 - t3559 * t5005 - t3560 * t5004 + t3651 * t4062 + t3652 * t4060 + t3653 * t4058) * t3950, (t3630 * t4671 + t3631 * t4667 + t3632 * t4663 + t3653 * t4086 + t3652 * t4082 + t3651 * t4084 + (-t3630 * t4350 - t3631 * t4348 - t3632 * t4346) * t3976) * t3975, (t3630 * t4670 + t3631 * t4666 + t3632 * t4662 + t3653 * t4085 + t3652 * t4081 + t3651 * t4083 + (t3630 * t4351 + t3631 * t4349 + t3632 * t4347) * t3976) * t3975, t3256 * t5006 + t3258 * t5005 + t3260 * t5004 + (t3256 * t4988 + t3258 * t4987 + t3260 * t4986) * t3976, t3630 * t4091 + t3631 * t4089 + t3632 * t4087 + t3651 * t4135 + t3652 * t4133 + t3653 * t4137, t3630 * t4092 + t3631 * t4090 + t3632 * t4088 + t3651 * t4134 + t3652 * t4132 + t3653 * t4136, t3653 * t4473 + t3652 * t4461 + t3651 * t4467 + t3632 * t4229 + t3631 * t4232 + t3630 * t4235 + (t3333 * t4997 + t3334 * t4996 + t3335 * t4995) * t4031, t3653 * t4474 + t3652 * t4462 + t3651 * t4468 + t3632 * t4450 + t3631 * t4453 + t3630 * t4456 + (t3318 * t4997 + t3319 * t4996 + t3320 * t4995) * t4031, t3653 * t4471 + t3652 * t4459 + t3651 * t4465 + t3632 * t4227 + t3631 * t4230 + t3630 * t4233 + (t3234 * t4997 + t3235 * t4996 + t3236 * t4995 + (t3411 * t4204 + t3412 * t4197 + t3413 * t4190) * t3975) * t4031, t3653 * t4472 + t3652 * t4460 + t3651 * t4466 + t3632 * t4228 + t3631 * t4231 + t3630 * t4234 + (t3231 * t4997 + t3232 * t4996 + t3233 * t4995 + (-t3414 * t4204 - t3415 * t4197 - t3416 * t4190) * t3975) * t4031, (-t3240 * t4997 - t3241 * t4996 - t3242 * t4995) * t4031 + ((t3652 * t5032 + (t3631 * t4653 + (t3643 * t4596 + t3652 * t5107) * t3555) * t3994) * t3670 + (t3651 * t5033 + (t3630 * t4654 + (t3642 * t4605 + t3651 * t5108) * t3553) * t3991) * t3668 + (t3653 * t5031 + (t3632 * t4652 + (t3644 * t4587 + t3653 * t5106) * t3557) * t3997) * t3666) * t3975, t3653 * t4475 + t3652 * t4463 + t3651 * t4469 + t3632 * t4451 + t3631 * t4454 + t3630 * t4457 + (t3642 * t4449 + t3643 * t4447 + t3644 * t4445) * t4031, t3653 * t4476 + t3652 * t4464 + t3651 * t4470 + t3632 * t4452 + t3631 * t4455 + t3630 * t4458 + (t3642 * t4448 + t3643 * t4446 + t3644 * t4444) * t4031, 0; t3282 * t4985 + t3283 * t4984 + t3284 * t4983, 0, 0, (-t3627 * t4211 - t3628 * t4209 - t3629 * t4207 + t3654 * t4061 + t3655 * t4059 + t3656 * t4057) * t3950, (-t3558 * t5009 - t3559 * t5008 - t3560 * t5007 + t3654 * t4062 + t3655 * t4060 + t3656 * t4058) * t3950, (t3627 * t4671 + t3628 * t4667 + t3629 * t4663 + t3656 * t4086 + t3655 * t4082 + t3654 * t4084 + (-t3627 * t4350 - t3628 * t4348 - t3629 * t4346) * t3976) * t3975, (t3627 * t4670 + t3628 * t4666 + t3629 * t4662 + t3656 * t4085 + t3655 * t4081 + t3654 * t4083 + (t3627 * t4351 + t3628 * t4349 + t3629 * t4347) * t3976) * t3975, t3256 * t5009 + t3258 * t5008 + t3260 * t5007 + (t3256 * t4985 + t3258 * t4984 + t3260 * t4983) * t3976, t3627 * t4091 + t3628 * t4089 + t3629 * t4087 + t3654 * t4135 + t3655 * t4133 + t3656 * t4137, t3627 * t4092 + t3628 * t4090 + t3629 * t4088 + t3654 * t4134 + t3655 * t4132 + t3656 * t4136, t3656 * t4473 + t3655 * t4461 + t3654 * t4467 + t3629 * t4229 + t3628 * t4232 + t3627 * t4235 + (t3333 * t5000 + t3334 * t4999 + t3335 * t4998) * t4031, t3656 * t4474 + t3655 * t4462 + t3654 * t4468 + t3629 * t4450 + t3628 * t4453 + t3627 * t4456 + (t3318 * t5000 + t3319 * t4999 + t3320 * t4998) * t4031, t3656 * t4471 + t3655 * t4459 + t3654 * t4465 + t3629 * t4227 + t3628 * t4230 + t3627 * t4233 + (t3234 * t5000 + t3235 * t4999 + t3236 * t4998 + (t3411 * t4205 + t3412 * t4198 + t3413 * t4191) * t3975) * t4031, t3656 * t4472 + t3655 * t4460 + t3654 * t4466 + t3629 * t4228 + t3628 * t4231 + t3627 * t4234 + (t3231 * t5000 + t3232 * t4999 + t3233 * t4998 + (-t3414 * t4205 - t3415 * t4198 - t3416 * t4191) * t3975) * t4031, (-t3240 * t5000 - t3241 * t4999 - t3242 * t4998) * t4031 + ((t3655 * t5032 + (t3628 * t4653 + (t3640 * t4596 + t3655 * t5107) * t3555) * t3994) * t3670 + (t3654 * t5033 + (t3627 * t4654 + (t3639 * t4605 + t3654 * t5108) * t3553) * t3991) * t3668 + (t3656 * t5031 + (t3629 * t4652 + (t3641 * t4587 + t3656 * t5106) * t3557) * t3997) * t3666) * t3975, t3656 * t4475 + t3655 * t4463 + t3654 * t4469 + t3629 * t4451 + t3628 * t4454 + t3627 * t4457 + (t3639 * t4449 + t3640 * t4447 + t3641 * t4445) * t4031, t3656 * t4476 + t3655 * t4464 + t3654 * t4470 + t3629 * t4452 + t3628 * t4455 + t3627 * t4458 + (t3639 * t4448 + t3640 * t4446 + t3641 * t4444) * t4031, 0; t3282 * t4980 + t3283 * t4978 + t3284 * t4982, 0, 0, (t3699 * t4672 + t3700 * t4668 + t3701 * t4664 + (-t3634 * t4990 + 0.2e1 * t3700 * t4643) * t3671 * t4834 + (-t3633 * t4991 + 0.2e1 * t3699 * t4651) * t3669 * t4844 + (-t3635 * t4989 + 0.2e1 * t3701 * t4635) * t3667 * t4824) * t3950, (-t3558 * t4991 - t3559 * t4990 - t3560 * t4989 + t3699 * t4062 + t3700 * t4060 + t3701 * t4058) * t3950, (t3282 * t4586 + t3283 * t4585 + t3284 * t4584 + t3700 * t4082 + t3699 * t4084 + t3701 * t4086 + (-t3648 * t4350 - t3649 * t4348 - t3650 * t4346) * t3976) * t3975, (t3648 * t4670 + t3649 * t4666 + t3650 * t4662 + t3700 * t4081 + t3699 * t4083 + t3701 * t4085 + (t3648 * t4351 + t3649 * t4349 + t3650 * t4347) * t3976) * t3975, t3256 * t4991 + t3258 * t4990 + t3260 * t4989 + (t3256 * t4980 + t3258 * t4978 + t3260 * t4982) * t3976, t3648 * t4091 + t3649 * t4089 + t3650 * t4087 + t3699 * t4135 + t3700 * t4133 + t3701 * t4137, t3648 * t4092 + t3649 * t4090 + t3650 * t4088 + t3699 * t4134 + t3700 * t4132 + t3701 * t4136, t3700 * t4461 + t3699 * t4467 + t3701 * t4473 + t3650 * t4229 + t3649 * t4232 + t3648 * t4235 + (t3333 * t4994 + t3334 * t4993 + t3335 * t4992) * t4869, t3700 * t4462 + t3699 * t4468 + t3701 * t4474 + t3650 * t4450 + t3649 * t4453 + t3648 * t4456 + (t3318 * t4994 + t3319 * t4993 + t3320 * t4992) * t4869, t3700 * t4459 + t3699 * t4465 + t3701 * t4471 + t3650 * t4227 + t3649 * t4230 + t3648 * t4233 + ((t3234 * t4994 + t3235 * t4993 + t3236 * t4992) * t3975 + (t3411 * t4203 + t3412 * t4196 + t3413 * t4189) * t3950) * t4031, t3700 * t4460 + t3699 * t4466 + t3701 * t4472 + t3650 * t4228 + t3649 * t4231 + t3648 * t4234 + ((t3231 * t4994 + t3232 * t4993 + t3233 * t4992) * t3975 + (-t3414 * t4203 - t3415 * t4196 - t3416 * t4189) * t3950) * t4031, (t4216 * t4992 + t4218 * t4993 + t4220 * t4994) * t4031 * t3950 + ((-t3240 * t4994 - t3241 * t4993 - t3242 * t4992) * t4031 + (t4585 * t5154 + (t4639 * t5107 + t5032) * t3700) * t3670 + (t4586 * t5155 + (t4647 * t5108 + t5033) * t3699) * t3668 + (t4584 * t5153 + (t4632 * t5106 + t5031) * t3701) * t3666) * t3975, t3700 * t4463 + t3699 * t4469 + t3701 * t4475 + t3650 * t4451 + t3649 * t4454 + t3648 * t4457 + (t4798 * t4992 + t4800 * t4993 + t4801 * t4994) * t4869, t3700 * t4464 + t3699 * t4470 + t3701 * t4476 + t3650 * t4452 + t3649 * t4455 + t3648 * t4458 + (t4796 * t4994 + t4797 * t4992 + t4799 * t4993) * t4869, 0;];
tau_reg  = t1;
