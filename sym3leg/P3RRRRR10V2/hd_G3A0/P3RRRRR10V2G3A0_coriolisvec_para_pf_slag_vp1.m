% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR10V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:25
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G3A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 02:18:43
% EndTime: 2020-08-07 02:22:16
% DurationCPUTime: 226.14s
% Computational Cost: add. (1798122->2277), mult. (3400455->3350), div. (46377->25), fcn. (2774931->26), ass. (0->1281)
t3158 = pkin(8) + pkin(7);
t3083 = pkin(1) * t3158;
t3137 = sin(qJ(2,1));
t3145 = cos(qJ(3,1));
t3063 = t3145 * pkin(3);
t3096 = pkin(2) + t3158;
t3097 = pkin(2) - t3158;
t3829 = (t3063 + t3096) * (t3063 + t3097);
t3487 = t3137 * t3829;
t2817 = t3083 - t3487;
t3071 = pkin(1) * t3137;
t2964 = t3158 + t3071;
t3136 = sin(qJ(3,1));
t3055 = t3136 * pkin(3);
t2987 = t3055 + pkin(6);
t3129 = legFrame(1,2);
t3041 = sin(t3129);
t3044 = cos(t3129);
t3116 = cos(pkin(4));
t3093 = t3116 ^ 2;
t3115 = sin(pkin(4));
t3146 = cos(qJ(2,1));
t3109 = t3146 ^ 2;
t3781 = (t3116 + 0.1e1) * (t3116 - 0.1e1);
t3475 = t3109 * t3781;
t3388 = -0.2e1 * t3475;
t4070 = t3063 + pkin(2);
t3293 = t4070 * t3388;
t3138 = sin(qJ(1,1));
t3775 = t3041 * t3138;
t3479 = t4070 * t3775;
t3318 = t2987 * t3479;
t3709 = t3137 * t3138;
t3464 = t3041 * t3709;
t3330 = t2987 * t3464;
t3335 = t3138 * t3487;
t3159 = 0.2e1 * t3158;
t3707 = t3137 * t3159;
t2948 = pkin(1) + t3707;
t3147 = cos(qJ(1,1));
t3484 = t2948 * t4070 * t3147;
t3704 = t3138 * t3158;
t3441 = t3116 * t3704;
t3493 = (t3147 * t3829 + 0.2e1 * t3441 * t4070) * t3109 * t3115;
t3770 = t3044 * t3137;
t3799 = t4070 * t3044;
t3816 = t2964 * t3147;
t2735 = t3041 * t3493 + (((-t2987 * t3799 - t3041 * t3335) * t3116 + t3041 * t3484) * t3115 + (t3044 * t3487 - t3318) * t3093 + t3318 + t3044 * t2817) * t3146 - t2964 * t3799 + (t3044 * t3293 + ((-t2987 * t3770 - t3479) * t3116 + t3041 * t3816) * t3115 + (-t3330 + t3799) * t3093 + t3330) * t3158;
t3769 = t3044 * t3138;
t3478 = t4070 * t3769;
t3317 = t2987 * t3478;
t3458 = t3044 * t3709;
t3329 = t2987 * t3458;
t3776 = t3041 * t3137;
t3800 = t4070 * t3041;
t2738 = -t3044 * t3493 + (((-t2987 * t3800 + t3044 * t3335) * t3116 - t3044 * t3484) * t3115 + (t3041 * t3487 + t3317) * t3093 - t3317 + t3041 * t2817) * t3146 - t2964 * t3800 + (t3041 * t3293 - ((t2987 * t3776 - t3478) * t3116 + t3044 * t3816) * t3115 + (t3329 + t3800) * t3093 - t3329) * t3158;
t3956 = pkin(6) * t3145;
t3974 = pkin(2) * t3136;
t2905 = t3956 - t3974;
t3733 = t3116 * t3145;
t3580 = pkin(1) * t3733;
t3798 = t4070 * t3115;
t3731 = t3116 * t3158;
t2955 = pkin(1) * t3731;
t3819 = t2955 * t3145;
t4091 = t3137 * t4070;
t3235 = -t3580 * t4091 + (-t2905 * t3798 + t3819) * t3146;
t3687 = t3158 * t3137;
t2789 = 0.1e1 / ((pkin(1) * t3136 * t4070 - t2905 * t3687) * t3115 + t3235);
t3155 = xDP(3);
t3184 = 0.1e1 / pkin(3);
t3744 = t3115 * t3184;
t3447 = t3155 * t3744;
t3157 = xDP(1);
t3693 = t3157 * t3184;
t3156 = xDP(2);
t3694 = t3156 * t3184;
t3695 = t3147 * t3158;
t2864 = -pkin(2) * t3138 + t3116 * t3695;
t3034 = t3116 * pkin(2);
t3745 = t3115 * t3158;
t2865 = -pkin(1) * t3034 - pkin(6) * t3745;
t3029 = pkin(1) * t3055;
t3107 = t3145 ^ 2;
t3183 = pkin(3) ^ 2;
t3062 = t3107 * t3183;
t2988 = t3055 - pkin(6);
t3185 = pkin(2) ^ 2;
t3759 = t3107 * t3137;
t3535 = pkin(3) * t3759;
t2945 = t3687 + pkin(1);
t3571 = t2945 * t3974;
t3961 = pkin(3) * t3107;
t3622 = pkin(6) * t3961;
t3970 = pkin(2) * t3145;
t3984 = pkin(1) * t3116;
t3220 = -t3535 * t3984 + (t3819 + (t2988 * t3970 + t3136 * t3185 - t3622) * t3115) * t3146 + t3115 * t3571;
t3414 = -0.2e1 * pkin(2) * t3731;
t3696 = t3147 * t3137;
t3442 = t3116 * t3696;
t3765 = t3096 * t3097;
t3454 = t3116 * t3765;
t3738 = t3116 * t3137;
t3568 = pkin(2) * t3738;
t3706 = t3138 * t2948;
t3753 = t3115 * t3137;
t3807 = t2987 * t3115;
t3853 = ((t3147 * t3414 - 0.2e1 * t2864 * t3063 + (t3062 + t3765) * t3138) * t3109 + (t3442 * t3062 + ((0.2e1 * t3568 - t3807) * t3147 + t3706) * t3063 + (-pkin(2) * t3807 + t3137 * t3454) * t3147 + pkin(2) * t3706) * t3146 + t3158 * (t3138 * t2964 + (pkin(3) * t3733 - t2987 * t3753 + t3034) * t3147)) / ((t2865 * t3137 + t3029 * t3115) * t3145 + t3220);
t2699 = t3447 * t3853 + (t2735 * t3694 + t2738 * t3693) * t2789;
t2693 = pkin(1) * t2699;
t2986 = pkin(6) * t3136 + pkin(3);
t3032 = t3109 - 0.2e1;
t3782 = t3032 * t3136;
t3351 = pkin(3) * t3782 - pkin(6);
t3010 = t3158 * t3146;
t2927 = t3137 * t3010;
t3064 = t3109 * pkin(2);
t3649 = t2927 + t3064;
t4075 = -pkin(2) + t3649;
t3194 = -t3136 * t4075 - t3351 * t3145;
t3712 = t3136 * t3138;
t3213 = t4075 * t3712;
t3708 = t3137 * t3146;
t3565 = pkin(2) * t3708;
t3246 = -t3109 * t3158 + t3565;
t2832 = t3246 + t2964;
t3746 = t3115 * t3147;
t3223 = pkin(6) * t3709 + t2832 * t3746;
t3973 = pkin(2) * t3137;
t2892 = t3010 - t3973;
t3238 = t3115 * t2892;
t3283 = t2945 * t3146 + t3064;
t3747 = t3115 * t3146;
t3326 = t3696 * t3747;
t3360 = pkin(3) * t3464;
t3459 = t3044 * t3753;
t3697 = t3146 * t3147;
t3068 = pkin(2) * t3146;
t3646 = t3687 + t3068;
t2883 = pkin(1) + t3646;
t3752 = t3115 * t3138;
t4028 = -t2883 * t3147 + t3351 * t3752;
t3634 = 0.2e1 * t3961;
t4029 = t3137 * (-t2986 + t3634 + t3970) - t3145 * t3010;
t2729 = (t3194 * t3044 + t3775 * t4029) * t3093 + (-(t3041 * t3697 - 0.2e1 * t3459) * t3961 + (t3041 * t4028 - t3044 * t3238) * t3145 + t3115 * (-t2986 * t3770 + t3041 * t3213)) * t3116 - t3107 * t3360 + ((t3041 * t3326 + t3044 * t3109 - t3044) * t3055 - t3044 * pkin(6)) * t3145 + (t3041 * t3223 + t3044 * t3283) * t3136 + t3360;
t3359 = pkin(3) * t3458;
t3465 = t3041 * t3753;
t2732 = (t3194 * t3041 - t3769 * t4029) * t3093 + ((t3044 * t3697 + 0.2e1 * t3465) * t3961 + (-t3041 * t3238 - t3044 * t4028) * t3145 - t3115 * (t2986 * t3776 + t3044 * t3213)) * t3116 + t3107 * t3359 + (-(-t3041 * t3109 + t3044 * t3326 + t3041) * t3055 - t3041 * pkin(6)) * t3145 + (t3041 * t3283 - t3044 * t3223) * t3136 - t3359;
t2994 = t3068 + pkin(1);
t3471 = t3137 * t3781;
t3562 = pkin(3) * t3712;
t3642 = t3093 - 0.1e1 / 0.2e1;
t3705 = t3138 * t3146;
t3732 = t3116 * t3147;
t3766 = (t3146 + 0.1e1) * (t3146 - 0.1e1);
t3996 = t3116 / 0.2e1;
t2759 = ((-t3351 * t3732 + t3562 * t3708) * t3145 + (-t4075 * t3732 + t3138 * (t2994 * t3137 - t3158 * t3766)) * t3136) * t3115 - 0.2e1 * (t3642 * t3696 + t3705 * t3996) * t3961 - (t2883 * t3138 - t2892 * t3732) * t3733 + t3147 * t2986 * t3471;
t2810 = (t3010 - t4091) * t3580;
t2820 = -pkin(6) * t3646 + t2994 * t3055;
t2839 = t2883 * t3974;
t3273 = -t3146 * t3622 + t2839;
t2786 = 0.1e1 / ((t2820 * t3145 + t3273) * t3115 + t2810);
t2654 = (t2729 * t3156 + t2732 * t3157 + t2759 * t3155) * t2786;
t3897 = t2654 * t3136;
t2614 = pkin(3) * t3897;
t2642 = pkin(6) * t2654;
t2684 = pkin(8) * t2699;
t3659 = t2642 + t2684;
t4047 = -pkin(7) * t2699 - t2614 - t3659;
t3253 = t3137 * t4047;
t4109 = -t3253 + t2693;
t3134 = sin(qJ(2,2));
t3142 = cos(qJ(3,2));
t3060 = t3142 * pkin(3);
t3830 = (t3060 + t3096) * (t3060 + t3097);
t3488 = t3134 * t3830;
t2816 = t3083 - t3488;
t3070 = pkin(1) * t3134;
t2963 = t3158 + t3070;
t3133 = sin(qJ(3,2));
t3054 = t3133 * pkin(3);
t2984 = t3054 + pkin(6);
t3128 = legFrame(2,2);
t3040 = sin(t3128);
t3043 = cos(t3128);
t3143 = cos(qJ(2,2));
t3105 = t3143 ^ 2;
t3476 = t3105 * t3781;
t3389 = -0.2e1 * t3476;
t4071 = t3060 + pkin(2);
t3294 = t4071 * t3389;
t3135 = sin(qJ(1,2));
t3777 = t3040 * t3135;
t3481 = t4071 * t3777;
t3321 = t2984 * t3481;
t3718 = t3134 * t3135;
t3466 = t3040 * t3718;
t3332 = t2984 * t3466;
t3337 = t3135 * t3488;
t3716 = t3134 * t3159;
t2947 = pkin(1) + t3716;
t3144 = cos(qJ(1,2));
t3485 = t2947 * t4071 * t3144;
t3713 = t3135 * t3158;
t3443 = t3116 * t3713;
t3494 = (t3144 * t3830 + 0.2e1 * t3443 * t4071) * t3105 * t3115;
t3772 = t3043 * t3134;
t3802 = t4071 * t3043;
t3817 = t2963 * t3144;
t2734 = t3040 * t3494 + (((-t2984 * t3802 - t3040 * t3337) * t3116 + t3040 * t3485) * t3115 + (t3043 * t3488 - t3321) * t3093 + t3321 + t3043 * t2816) * t3143 - t2963 * t3802 + (t3043 * t3294 + ((-t2984 * t3772 - t3481) * t3116 + t3040 * t3817) * t3115 + (-t3332 + t3802) * t3093 + t3332) * t3158;
t3771 = t3043 * t3135;
t3480 = t4071 * t3771;
t3320 = t2984 * t3480;
t3460 = t3043 * t3718;
t3331 = t2984 * t3460;
t3778 = t3040 * t3134;
t3803 = t4071 * t3040;
t2737 = -t3043 * t3494 + (((-t2984 * t3803 + t3043 * t3337) * t3116 - t3043 * t3485) * t3115 + (t3040 * t3488 + t3320) * t3093 - t3320 + t3040 * t2816) * t3143 - t2963 * t3803 + (t3040 * t3294 - ((t2984 * t3778 - t3480) * t3116 + t3043 * t3817) * t3115 + (t3331 + t3803) * t3093 - t3331) * t3158;
t3958 = pkin(6) * t3142;
t3976 = pkin(2) * t3133;
t2904 = t3958 - t3976;
t3735 = t3116 * t3142;
t3581 = pkin(1) * t3735;
t3801 = t4071 * t3115;
t3820 = t2955 * t3142;
t4092 = t3134 * t4071;
t3236 = -t3581 * t4092 + (-t2904 * t3801 + t3820) * t3143;
t3688 = t3158 * t3134;
t2788 = 0.1e1 / ((pkin(1) * t3133 * t4071 - t2904 * t3688) * t3115 + t3236);
t3698 = t3144 * t3158;
t2863 = -pkin(2) * t3135 + t3116 * t3698;
t3028 = pkin(1) * t3054;
t3103 = t3142 ^ 2;
t3059 = t3103 * t3183;
t2985 = t3054 - pkin(6);
t3761 = t3103 * t3134;
t3536 = pkin(3) * t3761;
t2944 = t3688 + pkin(1);
t3572 = t2944 * t3976;
t3962 = pkin(3) * t3103;
t3623 = pkin(6) * t3962;
t3971 = pkin(2) * t3142;
t3221 = -t3536 * t3984 + (t3820 + (t2985 * t3971 + t3133 * t3185 - t3623) * t3115) * t3143 + t3115 * t3572;
t3699 = t3144 * t3134;
t3444 = t3116 * t3699;
t3740 = t3116 * t3134;
t3569 = pkin(2) * t3740;
t3715 = t3135 * t2947;
t3755 = t3115 * t3134;
t3810 = t2984 * t3115;
t3854 = ((t3144 * t3414 - 0.2e1 * t2863 * t3060 + (t3059 + t3765) * t3135) * t3105 + (t3444 * t3059 + ((0.2e1 * t3569 - t3810) * t3144 + t3715) * t3060 + (-pkin(2) * t3810 + t3134 * t3454) * t3144 + pkin(2) * t3715) * t3143 + t3158 * (t3135 * t2963 + (pkin(3) * t3735 - t2984 * t3755 + t3034) * t3144)) / ((t2865 * t3134 + t3028 * t3115) * t3142 + t3221);
t2698 = t3447 * t3854 + (t2734 * t3694 + t2737 * t3693) * t2788;
t2692 = pkin(1) * t2698;
t2983 = pkin(6) * t3133 + pkin(3);
t3031 = t3105 - 0.2e1;
t3783 = t3031 * t3133;
t3352 = pkin(3) * t3783 - pkin(6);
t3009 = t3158 * t3143;
t2926 = t3134 * t3009;
t3061 = t3105 * pkin(2);
t3650 = t2926 + t3061;
t4074 = -pkin(2) + t3650;
t3195 = -t3133 * t4074 - t3352 * t3142;
t3721 = t3133 * t3135;
t3214 = t4074 * t3721;
t3717 = t3134 * t3143;
t3566 = pkin(2) * t3717;
t3247 = -t3105 * t3158 + t3566;
t2831 = t3247 + t2963;
t3748 = t3115 * t3144;
t3224 = pkin(6) * t3718 + t2831 * t3748;
t3975 = pkin(2) * t3134;
t2891 = t3009 - t3975;
t3239 = t3115 * t2891;
t3284 = t2944 * t3143 + t3061;
t3749 = t3115 * t3143;
t3327 = t3699 * t3749;
t3363 = pkin(3) * t3466;
t3461 = t3043 * t3755;
t3700 = t3143 * t3144;
t3067 = pkin(2) * t3143;
t3647 = t3688 + t3067;
t2882 = pkin(1) + t3647;
t3754 = t3115 * t3135;
t4027 = -t2882 * t3144 + t3352 * t3754;
t3635 = 0.2e1 * t3962;
t4030 = t3134 * (-t2983 + t3635 + t3971) - t3142 * t3009;
t2728 = (t3195 * t3043 + t3777 * t4030) * t3093 + (-(t3040 * t3700 - 0.2e1 * t3461) * t3962 + (t3040 * t4027 - t3043 * t3239) * t3142 + t3115 * (-t2983 * t3772 + t3040 * t3214)) * t3116 - t3103 * t3363 + ((t3040 * t3327 + t3043 * t3105 - t3043) * t3054 - t3043 * pkin(6)) * t3142 + (t3040 * t3224 + t3043 * t3284) * t3133 + t3363;
t3362 = pkin(3) * t3460;
t3467 = t3040 * t3755;
t2731 = (t3195 * t3040 - t3771 * t4030) * t3093 + ((t3043 * t3700 + 0.2e1 * t3467) * t3962 + (-t3040 * t3239 - t3043 * t4027) * t3142 - t3115 * (t2983 * t3778 + t3043 * t3214)) * t3116 + t3103 * t3362 + (-(-t3040 * t3105 + t3043 * t3327 + t3040) * t3054 - t3040 * pkin(6)) * t3142 + (t3040 * t3284 - t3043 * t3224) * t3133 - t3362;
t2993 = t3067 + pkin(1);
t3472 = t3134 * t3781;
t3563 = pkin(3) * t3721;
t3714 = t3135 * t3143;
t3734 = t3116 * t3144;
t3767 = (t3143 + 0.1e1) * (t3143 - 0.1e1);
t2758 = ((-t3352 * t3734 + t3563 * t3717) * t3142 + (-t4074 * t3734 + t3135 * (t2993 * t3134 - t3158 * t3767)) * t3133) * t3115 - 0.2e1 * (t3642 * t3699 + t3714 * t3996) * t3962 - (t2882 * t3135 - t2891 * t3734) * t3735 + t3144 * t2983 * t3472;
t2809 = (t3009 - t4092) * t3581;
t2819 = -pkin(6) * t3647 + t2993 * t3054;
t2838 = t2882 * t3976;
t3274 = -t3143 * t3623 + t2838;
t2785 = 0.1e1 / ((t2819 * t3142 + t3274) * t3115 + t2809);
t2653 = (t2728 * t3156 + t2731 * t3157 + t2758 * t3155) * t2785;
t3903 = t2653 * t3133;
t2612 = pkin(3) * t3903;
t2641 = pkin(6) * t2653;
t2683 = pkin(8) * t2698;
t3660 = t2641 + t2683;
t4046 = -pkin(7) * t2698 - t2612 - t3660;
t3254 = t3134 * t4046;
t4108 = -t3254 + t2692;
t3131 = sin(qJ(2,3));
t3139 = cos(qJ(3,3));
t3057 = t3139 * pkin(3);
t3831 = (t3057 + t3096) * (t3057 + t3097);
t3489 = t3131 * t3831;
t2815 = t3083 - t3489;
t3069 = pkin(1) * t3131;
t2962 = t3158 + t3069;
t3130 = sin(qJ(3,3));
t3053 = t3130 * pkin(3);
t2981 = t3053 + pkin(6);
t3127 = legFrame(3,2);
t3039 = sin(t3127);
t3042 = cos(t3127);
t3140 = cos(qJ(2,3));
t3101 = t3140 ^ 2;
t3477 = t3101 * t3781;
t3390 = -0.2e1 * t3477;
t4072 = t3057 + pkin(2);
t3295 = t4072 * t3390;
t3132 = sin(qJ(1,3));
t3779 = t3039 * t3132;
t3483 = t4072 * t3779;
t3324 = t2981 * t3483;
t3727 = t3131 * t3132;
t3468 = t3039 * t3727;
t3334 = t2981 * t3468;
t3339 = t3132 * t3489;
t3725 = t3131 * t3159;
t2946 = pkin(1) + t3725;
t3141 = cos(qJ(1,3));
t3486 = t2946 * t4072 * t3141;
t3722 = t3132 * t3158;
t3445 = t3116 * t3722;
t3495 = (t3141 * t3831 + 0.2e1 * t3445 * t4072) * t3101 * t3115;
t3774 = t3042 * t3131;
t3805 = t4072 * t3042;
t3818 = t2962 * t3141;
t2733 = t3039 * t3495 + (((-t2981 * t3805 - t3039 * t3339) * t3116 + t3039 * t3486) * t3115 + (t3042 * t3489 - t3324) * t3093 + t3324 + t3042 * t2815) * t3140 - t2962 * t3805 + (t3042 * t3295 + ((-t2981 * t3774 - t3483) * t3116 + t3039 * t3818) * t3115 + (-t3334 + t3805) * t3093 + t3334) * t3158;
t3773 = t3042 * t3132;
t3482 = t4072 * t3773;
t3323 = t2981 * t3482;
t3462 = t3042 * t3727;
t3333 = t2981 * t3462;
t3780 = t3039 * t3131;
t3806 = t4072 * t3039;
t2736 = -t3042 * t3495 + (((-t2981 * t3806 + t3042 * t3339) * t3116 - t3042 * t3486) * t3115 + (t3039 * t3489 + t3323) * t3093 - t3323 + t3039 * t2815) * t3140 - t2962 * t3806 + (t3039 * t3295 - ((t2981 * t3780 - t3482) * t3116 + t3042 * t3818) * t3115 + (t3333 + t3806) * t3093 - t3333) * t3158;
t3960 = pkin(6) * t3139;
t3978 = pkin(2) * t3130;
t2903 = t3960 - t3978;
t3737 = t3116 * t3139;
t3582 = pkin(1) * t3737;
t3804 = t4072 * t3115;
t3821 = t2955 * t3139;
t4093 = t3131 * t4072;
t3237 = -t3582 * t4093 + (-t2903 * t3804 + t3821) * t3140;
t3689 = t3158 * t3131;
t2787 = 0.1e1 / ((pkin(1) * t3130 * t4072 - t2903 * t3689) * t3115 + t3237);
t3701 = t3141 * t3158;
t2862 = -pkin(2) * t3132 + t3116 * t3701;
t3027 = pkin(1) * t3053;
t3099 = t3139 ^ 2;
t3056 = t3099 * t3183;
t2982 = t3053 - pkin(6);
t3763 = t3099 * t3131;
t3533 = pkin(3) * t3763;
t2943 = t3689 + pkin(1);
t3573 = t2943 * t3978;
t3963 = pkin(3) * t3099;
t3624 = pkin(6) * t3963;
t3972 = pkin(2) * t3139;
t3222 = -t3533 * t3984 + (t3821 + (t2982 * t3972 + t3130 * t3185 - t3624) * t3115) * t3140 + t3115 * t3573;
t3702 = t3141 * t3131;
t3446 = t3116 * t3702;
t3742 = t3116 * t3131;
t3570 = pkin(2) * t3742;
t3724 = t3132 * t2946;
t3757 = t3115 * t3131;
t3813 = t2981 * t3115;
t3855 = ((t3141 * t3414 - 0.2e1 * t2862 * t3057 + (t3056 + t3765) * t3132) * t3101 + (t3446 * t3056 + ((0.2e1 * t3570 - t3813) * t3141 + t3724) * t3057 + (-pkin(2) * t3813 + t3131 * t3454) * t3141 + pkin(2) * t3724) * t3140 + t3158 * (t3132 * t2962 + (pkin(3) * t3737 - t2981 * t3757 + t3034) * t3141)) / ((t2865 * t3131 + t3027 * t3115) * t3139 + t3222);
t2697 = t3447 * t3855 + (t2733 * t3694 + t2736 * t3693) * t2787;
t2691 = pkin(1) * t2697;
t2980 = pkin(6) * t3130 + pkin(3);
t3030 = t3101 - 0.2e1;
t3784 = t3030 * t3130;
t3353 = pkin(3) * t3784 - pkin(6);
t3008 = t3158 * t3140;
t2925 = t3131 * t3008;
t3058 = t3101 * pkin(2);
t3651 = t2925 + t3058;
t4073 = -pkin(2) + t3651;
t3196 = -t3130 * t4073 - t3353 * t3139;
t3730 = t3130 * t3132;
t3215 = t4073 * t3730;
t3726 = t3131 * t3140;
t3567 = pkin(2) * t3726;
t3248 = -t3101 * t3158 + t3567;
t2830 = t3248 + t2962;
t3750 = t3115 * t3141;
t3225 = pkin(6) * t3727 + t2830 * t3750;
t3977 = pkin(2) * t3131;
t2890 = t3008 - t3977;
t3240 = t3115 * t2890;
t3285 = t2943 * t3140 + t3058;
t3751 = t3115 * t3140;
t3328 = t3702 * t3751;
t3366 = pkin(3) * t3468;
t3463 = t3042 * t3757;
t3703 = t3140 * t3141;
t3066 = pkin(2) * t3140;
t3648 = t3689 + t3066;
t2881 = pkin(1) + t3648;
t3756 = t3115 * t3132;
t4026 = -t2881 * t3141 + t3353 * t3756;
t3636 = 0.2e1 * t3963;
t4031 = t3131 * (-t2980 + t3636 + t3972) - t3139 * t3008;
t2727 = (t3196 * t3042 + t3779 * t4031) * t3093 + (-(t3039 * t3703 - 0.2e1 * t3463) * t3963 + (t3039 * t4026 - t3042 * t3240) * t3139 + t3115 * (-t2980 * t3774 + t3039 * t3215)) * t3116 - t3099 * t3366 + ((t3039 * t3328 + t3042 * t3101 - t3042) * t3053 - t3042 * pkin(6)) * t3139 + (t3039 * t3225 + t3042 * t3285) * t3130 + t3366;
t3365 = pkin(3) * t3462;
t3469 = t3039 * t3757;
t2730 = (t3196 * t3039 - t3773 * t4031) * t3093 + ((t3042 * t3703 + 0.2e1 * t3469) * t3963 + (-t3039 * t3240 - t3042 * t4026) * t3139 - t3115 * (t2980 * t3780 + t3042 * t3215)) * t3116 + t3099 * t3365 + (-(-t3039 * t3101 + t3042 * t3328 + t3039) * t3053 - t3039 * pkin(6)) * t3139 + (t3039 * t3285 - t3042 * t3225) * t3130 - t3365;
t2992 = t3066 + pkin(1);
t3473 = t3131 * t3781;
t3564 = pkin(3) * t3730;
t3723 = t3132 * t3140;
t3736 = t3116 * t3141;
t3768 = (t3140 + 0.1e1) * (t3140 - 0.1e1);
t2757 = ((-t3353 * t3736 + t3564 * t3726) * t3139 + (-t4073 * t3736 + t3132 * (t2992 * t3131 - t3158 * t3768)) * t3130) * t3115 - 0.2e1 * (t3642 * t3702 + t3723 * t3996) * t3963 - (t2881 * t3132 - t2890 * t3736) * t3737 + t3141 * t2980 * t3473;
t2808 = (t3008 - t4093) * t3582;
t2818 = -pkin(6) * t3648 + t2992 * t3053;
t2837 = t2881 * t3978;
t3275 = -t3140 * t3624 + t2837;
t2784 = 0.1e1 / ((t2818 * t3139 + t3275) * t3115 + t2808);
t2652 = (t2727 * t3156 + t2730 * t3157 + t2757 * t3155) * t2784;
t3909 = t2652 * t3130;
t2610 = pkin(3) * t3909;
t2640 = pkin(6) * t2652;
t2682 = pkin(8) * t2697;
t3661 = t2640 + t2682;
t4045 = -pkin(7) * t2697 - t2610 - t3661;
t3255 = t3131 * t4045;
t4107 = -t3255 + t2691;
t3153 = rSges(3,2) * pkin(2);
t3998 = rSges(3,1) * pkin(6);
t2977 = t3153 + t3998;
t2941 = m(3) * t2977;
t3152 = rSges(3,2) * pkin(6);
t3999 = rSges(3,1) * pkin(2);
t2976 = -t3152 + t3999;
t3989 = m(3) * t3130;
t3997 = rSges(3,1) * rSges(3,2);
t4003 = pkin(2) * pkin(6);
t3149 = rSges(2,3) + pkin(6);
t4076 = m(2) * t3149;
t4087 = -rSges(2,1) * t4076 - Icges(3,4) + Icges(2,5) + (t3997 - t4003) * m(3);
t3171 = rSges(3,2) ^ 2;
t3173 = rSges(3,1) ^ 2;
t3045 = -t3171 + t3173;
t3931 = Icges(3,2) - Icges(3,1);
t2907 = m(3) * t3045 + t3931;
t4096 = t2907 * t3130;
t4106 = -t2976 * t3989 + t3139 * (-t4096 - t2941) + t4087;
t3988 = m(3) * t3133;
t4095 = t2907 * t3133;
t4105 = -t2976 * t3988 + t3142 * (-t4095 - t2941) + t4087;
t3987 = m(3) * t3136;
t4094 = t2907 * t3136;
t4104 = -t2976 * t3987 + t3145 * (-t4094 - t2941) + t4087;
t2688 = pkin(6) * t2697;
t3907 = t2652 * t3158;
t4042 = t3907 - t2688;
t3924 = t4042 * t3140;
t2689 = pkin(6) * t2698;
t3901 = t2653 * t3158;
t4043 = t3901 - t2689;
t3923 = t4043 * t3143;
t2690 = pkin(6) * t2699;
t3895 = t2654 * t3158;
t4044 = t3895 - t2690;
t3922 = t4044 * t3146;
t3160 = pkin(8) * pkin(7);
t3112 = -0.2e1 * t3160;
t3180 = pkin(8) ^ 2;
t3181 = pkin(7) ^ 2;
t3640 = t3180 + t3181;
t4103 = t3112 - t3640;
t4099 = t2907 * t3099;
t4098 = t2907 * t3103;
t4097 = t2907 * t3107;
t3684 = m(3) * t3999;
t3050 = 0.2e1 * t3684;
t3929 = -m(3) * t3997 + Icges(3,4);
t3014 = 0.2e1 * t3929;
t3797 = t3014 * t3130;
t4090 = -t4099 - (t3797 + t3050) * t3139;
t3796 = t3014 * t3133;
t4089 = -t4098 - (t3796 + t3050) * t3142;
t3795 = t3014 * t3136;
t4088 = -t4097 - (t3795 + t3050) * t3145;
t3148 = pkin(7) + rSges(3,3);
t3986 = m(3) * t3148;
t4086 = rSges(2,2) * t4076 - pkin(6) * t3986 - Icges(2,6);
t3928 = 0.2e1 * m(3);
t2840 = -t3116 * t3727 + t3703;
t3743 = t3116 * t3130;
t3202 = -pkin(3) * t3743 + t3240;
t3208 = (-t3034 * t3132 + t3701) * t3131 + (pkin(2) * t3141 + t3445) * t3140 + t3115 * t3564;
t2763 = -(t2840 * t3042 + t3469) * t3963 + (t3039 * t3202 - t3042 * t3208) * t3139 - (t3039 * t3116 + t3042 * t3756) * t3978;
t2869 = -pkin(6) * t3689 + t3027;
t2824 = t2982 * t3066 + t2869;
t2843 = t2890 * t3984;
t3554 = pkin(6) * t3751;
t3585 = pkin(1) * t3742;
t3307 = t3115 * t2837 - (t3554 + t3585) * t3963;
t2778 = 0.1e1 / ((t2824 * t3115 + t2843) * t3139 + t3307);
t2745 = t2763 * t2778 * t3157;
t2766 = (t2840 * t3039 - t3463) * t3963 + (t3039 * t3208 + t3042 * t3202) * t3139 + (t3039 * t3756 - t3042 * t3116) * t3978;
t2748 = t2766 * t2778 * t3156;
t3450 = t3130 * t3750;
t2790 = (t3446 + t3723) * t3963 + (-pkin(3) * t3450 - t2862 * t3140 + (pkin(2) * t3736 + t3722) * t3131) * t3139 - pkin(2) * t3450;
t2760 = t2790 * t2778 * t3155;
t2712 = t2745 + t2748 + t2760;
t4085 = 0.2e1 * t2712;
t2841 = -t3116 * t3718 + t3700;
t3741 = t3116 * t3133;
t3201 = -pkin(3) * t3741 + t3239;
t3207 = (-t3034 * t3135 + t3698) * t3134 + (pkin(2) * t3144 + t3443) * t3143 + t3115 * t3563;
t2764 = -(t2841 * t3043 + t3467) * t3962 + (t3040 * t3201 - t3043 * t3207) * t3142 - (t3040 * t3116 + t3043 * t3754) * t3976;
t2870 = -pkin(6) * t3688 + t3028;
t2825 = t2985 * t3067 + t2870;
t2844 = t2891 * t3984;
t3553 = pkin(6) * t3749;
t3584 = pkin(1) * t3740;
t3306 = t3115 * t2838 - (t3553 + t3584) * t3962;
t2779 = 0.1e1 / ((t2825 * t3115 + t2844) * t3142 + t3306);
t2746 = t2764 * t2779 * t3157;
t2767 = (t2841 * t3040 - t3461) * t3962 + (t3040 * t3207 + t3043 * t3201) * t3142 + (t3040 * t3754 - t3043 * t3116) * t3976;
t2749 = t2767 * t2779 * t3156;
t3449 = t3133 * t3748;
t2791 = (t3444 + t3714) * t3962 + (-pkin(3) * t3449 - t2863 * t3143 + (pkin(2) * t3734 + t3713) * t3134) * t3142 - pkin(2) * t3449;
t2761 = t2791 * t2779 * t3155;
t2713 = t2746 + t2749 + t2761;
t4084 = 0.2e1 * t2713;
t2842 = -t3116 * t3709 + t3697;
t3739 = t3116 * t3136;
t3200 = -pkin(3) * t3739 + t3238;
t3206 = (-t3034 * t3138 + t3695) * t3137 + (pkin(2) * t3147 + t3441) * t3146 + t3115 * t3562;
t2765 = -(t2842 * t3044 + t3465) * t3961 + (t3041 * t3200 - t3044 * t3206) * t3145 - (t3041 * t3116 + t3044 * t3752) * t3974;
t2871 = -pkin(6) * t3687 + t3029;
t2826 = t2988 * t3068 + t2871;
t2845 = t2892 * t3984;
t3552 = pkin(6) * t3747;
t3583 = pkin(1) * t3738;
t3305 = t3115 * t2839 - (t3552 + t3583) * t3961;
t2780 = 0.1e1 / ((t2826 * t3115 + t2845) * t3145 + t3305);
t2747 = t2765 * t2780 * t3157;
t2768 = (t2842 * t3041 - t3459) * t3961 + (t3041 * t3206 + t3044 * t3200) * t3145 + (t3041 * t3752 - t3044 * t3116) * t3974;
t2750 = t2768 * t2780 * t3156;
t3448 = t3136 * t3746;
t2792 = (t3442 + t3705) * t3961 + (-pkin(3) * t3448 - t2864 * t3146 + (pkin(2) * t3732 + t3704) * t3137) * t3145 - pkin(2) * t3448;
t2762 = t2792 * t2780 * t3155;
t2714 = t2747 + t2750 + t2762;
t4083 = 0.2e1 * t2714;
t3092 = t3116 * t3093;
t4082 = -0.4e1 * t3092;
t4081 = 0.2e1 * t3093;
t4007 = 0.2e1 * t3140;
t4006 = 0.2e1 * t3143;
t4005 = 0.2e1 * t3146;
t4080 = -0.3e1 * t3158;
t4079 = t3101 - 0.1e1;
t4078 = t3105 - 0.1e1;
t4077 = t3109 - 0.1e1;
t3764 = t3139 * t3056;
t3762 = t3142 * t3059;
t3760 = t3145 * t3062;
t2952 = rSges(3,1) * t3986 - Icges(3,5);
t2898 = t2952 * t3136;
t2823 = -t2898 + t4086;
t3934 = rSges(3,2) * t3148;
t2949 = t3934 * m(3) - Icges(3,6);
t3822 = t2949 * t3145;
t4069 = (-t2823 + t3822) * t3146;
t2897 = t2952 * t3133;
t2822 = -t2897 + t4086;
t3823 = t2949 * t3142;
t4068 = (-t2822 + t3823) * t3143;
t2896 = t2952 * t3130;
t2821 = -t2896 + t4086;
t3824 = t2949 * t3139;
t4067 = (-t2821 + t3824) * t3140;
t3882 = t2699 * t3115;
t2672 = pkin(1) * t3882;
t3980 = pkin(2) * t2714;
t2708 = 0.2e1 * t3980;
t4066 = (t2672 + t2708) * t3116;
t3887 = t2698 * t3115;
t2671 = pkin(1) * t3887;
t3950 = t2713 * pkin(2);
t2707 = 0.2e1 * t3950;
t4065 = (t2671 + t2707) * t3116;
t3892 = t2697 * t3115;
t2670 = pkin(1) * t3892;
t3952 = t2712 * pkin(2);
t2706 = 0.2e1 * t3952;
t4064 = (t2670 + t2706) * t3116;
t3683 = m(3) * t3153;
t4063 = -t4096 - t3683;
t4062 = -t4095 - t3683;
t4061 = -t4094 - t3683;
t4002 = m(2) * rSges(2,2);
t2889 = -rSges(2,1) * t4002 + pkin(2) * t3986 + Icges(2,4);
t3262 = -t2949 * t3136 + t2952 * t3145;
t3203 = t2889 + t3262;
t3263 = -t2949 * t3133 + t2952 * t3142;
t3204 = t2889 + t3263;
t3264 = -t2949 * t3130 + t2952 * t3139;
t3205 = t2889 + t3264;
t3021 = pkin(6) * t3053;
t4060 = 0.2e1 * t3021 - t3056;
t3022 = pkin(6) * t3054;
t4059 = 0.2e1 * t3022 - t3059;
t3023 = pkin(6) * t3055;
t4058 = 0.2e1 * t3023 - t3062;
t3024 = pkin(2) * t3057;
t3258 = 0.2e1 * t3024 + t3056;
t3025 = pkin(2) * t3060;
t3257 = 0.2e1 * t3025 + t3059;
t3026 = pkin(2) * t3063;
t3256 = 0.2e1 * t3026 + t3062;
t4057 = t3180 / 0.2e1 + t3181 / 0.2e1;
t3172 = rSges(2,2) ^ 2;
t3174 = rSges(2,1) ^ 2;
t3641 = t3171 + t3185;
t3354 = Icges(3,1) + Icges(2,3) + (t3148 ^ 2 + t3641) * m(3) + (t3172 + t3174) * m(2);
t4053 = -t3354 + t4088;
t4052 = -t3354 + t4089;
t4051 = -t3354 + t4090;
t2618 = pkin(6) * t3895;
t3880 = t2699 * t3183;
t2540 = -t2618 + t3880;
t4050 = -t4077 * pkin(2) * t2642 + t2540 * t3708;
t2617 = pkin(6) * t3901;
t3885 = t2698 * t3183;
t2539 = -t2617 + t3885;
t4049 = -t4078 * pkin(2) * t2641 + t2539 * t3717;
t2616 = pkin(6) * t3907;
t3890 = t2697 * t3183;
t2538 = -t2616 + t3890;
t4048 = -t4079 * pkin(2) * t2640 + t2538 * t3726;
t3938 = rSges(3,1) * t3136;
t4041 = rSges(3,2) * t3145 + t3938;
t3939 = rSges(3,1) * t3133;
t4040 = rSges(3,2) * t3142 + t3939;
t3940 = rSges(3,1) * t3130;
t4039 = rSges(3,2) * t3139 + t3940;
t3114 = t3158 ^ 2;
t3638 = t3185 - t3183;
t2954 = t3114 + t3638;
t2965 = pkin(1) * t3689;
t4038 = -pkin(1) * t3066 - t2954 - t2965;
t2966 = pkin(1) * t3688;
t4037 = -pkin(1) * t3067 - t2954 - t2966;
t2967 = pkin(1) * t3687;
t3065 = t3146 * pkin(1);
t4036 = -pkin(2) * t3065 - t2954 - t2967;
t4035 = t3024 + t3056 - t3021;
t4034 = t3025 + t3059 - t3022;
t4033 = t3026 + t3062 - t3023;
t4032 = 0.3e1 * t4103;
t3933 = Icges(2,1) + Icges(3,2);
t2814 = (t3171 - (pkin(2) + t3148) * (-pkin(2) + t3148)) * m(3) + (-t3172 + t3174) * m(2) + Icges(2,2) + Icges(3,3) - t3933;
t3179 = -0.2e1 * pkin(1);
t4025 = 0.2e1 * pkin(1);
t3178 = 0.2e1 * pkin(2);
t3177 = 0.3e1 * pkin(2);
t2676 = t2697 * t3158;
t4024 = 0.2e1 * t2676;
t2677 = t2698 * t3158;
t4023 = 0.2e1 * t2677;
t2678 = t2699 * t3158;
t4022 = 0.2e1 * t2678;
t4021 = -0.2e1 * t2697;
t4020 = -0.2e1 * t2698;
t4019 = -0.2e1 * t2699;
t4018 = -0.2e1 * t2907;
t4017 = -0.2e1 * t3929;
t4016 = 0.2e1 * t3092;
t4015 = 0.3e1 * t3092;
t4014 = 0.4e1 * t3092;
t4013 = -0.2e1 * t3093;
t4011 = 0.2e1 * t3101;
t4010 = 0.2e1 * t3105;
t4009 = 0.2e1 * t3109;
t4008 = -0.2e1 * t3115;
t4004 = pkin(1) * pkin(2);
t3161 = pkin(2) * m(3);
t4001 = m(3) * rSges(3,1);
t4000 = m(3) * rSges(3,2);
t3151 = pkin(1) * rSges(3,1);
t3150 = pkin(1) * rSges(3,2);
t3995 = t3093 - 0.1e1;
t3994 = t4011 - 0.2e1;
t3993 = t4010 - 0.2e1;
t3992 = t4009 - 0.2e1;
t3990 = m(3) * t2976;
t2646 = pkin(1) * t2652;
t2647 = pkin(1) * t2653;
t2648 = pkin(1) * t2654;
t3985 = pkin(1) * t3115;
t2643 = pkin(2) * t2652;
t2644 = pkin(2) * t2653;
t2645 = pkin(2) * t2654;
t3983 = pkin(2) * t2697;
t3982 = pkin(2) * t2698;
t3981 = pkin(2) * t2699;
t3979 = pkin(2) * t3115;
t3969 = pkin(3) * t2697;
t3968 = pkin(3) * t2698;
t3967 = pkin(3) * t2699;
t3966 = pkin(3) * t2980;
t3965 = pkin(3) * t2983;
t3964 = pkin(3) * t2986;
t3959 = pkin(6) * t3140;
t3957 = pkin(6) * t3143;
t3955 = pkin(6) * t3146;
t3954 = pkin(6) * t3158;
t2638 = pkin(8) * t2652;
t2632 = t2653 * pkin(8);
t2635 = t2654 * pkin(8);
t3953 = t2712 * pkin(1);
t3951 = t2713 * pkin(1);
t3949 = t2714 * pkin(1);
t3948 = t2890 * pkin(2);
t3947 = t2891 * pkin(2);
t3946 = t2892 * pkin(2);
t2938 = -t3986 + t4002;
t3944 = t2938 * pkin(1);
t2979 = m(2) * rSges(2,1) + t3161;
t3942 = t2979 * pkin(1);
t3930 = -0.2e1 * t3999;
t3729 = t3130 * t3158;
t2535 = t2652 * t3729 - t3969;
t3927 = t2535 * t3140;
t3720 = t3133 * t3158;
t2536 = t2653 * t3720 - t3968;
t3926 = t2536 * t3143;
t3711 = t3136 * t3158;
t2537 = t2654 * t3711 - t3967;
t3925 = t2537 * t3146;
t3508 = t2712 * t3757;
t3921 = (t3053 * t3508 - t2643) * t3101;
t3503 = t2713 * t3755;
t3920 = (t3054 * t3503 - t2644) * t3105;
t3498 = t2714 * t3753;
t3919 = (t3055 * t3498 - t2645) * t3109;
t3918 = (t2712 - t2652) * (t2712 + t2652);
t3917 = (t2713 - t2653) * (t2713 + t2653);
t3916 = (t2714 - t2654) * (t2714 + t2654);
t3915 = t2652 * t3057;
t3914 = t2653 * t3060;
t3913 = t2654 * t3063;
t3912 = t2652 * t3929;
t3911 = t2652 * t3099;
t3910 = t2652 * t3116;
t3908 = t2652 * t3131;
t3906 = t2653 * t3929;
t3905 = t2653 * t3103;
t3904 = t2653 * t3116;
t3902 = t2653 * t3134;
t3900 = t2654 * t3929;
t3899 = t2654 * t3107;
t3898 = t2654 * t3116;
t3896 = t2654 * t3137;
t3894 = t2697 * t3929;
t3893 = t2697 * t3099;
t3891 = t2697 * t3131;
t3889 = t2698 * t3929;
t3888 = t2698 * t3103;
t3886 = t2698 * t3134;
t3884 = t2699 * t3929;
t3883 = t2699 * t3107;
t3881 = t2699 * t3137;
t2709 = t2712 ^ 2;
t3879 = t2709 * t3093;
t3878 = t2709 * t3101;
t2710 = t2713 ^ 2;
t3877 = t2710 * t3093;
t3876 = t2710 * t3105;
t2711 = t2714 ^ 2;
t3875 = t2711 * t3093;
t3874 = t2711 * t3109;
t3873 = t2712 * t3093;
t3872 = t2712 * t3101;
t3871 = t2712 * t3115;
t3870 = t2712 * t3116;
t3869 = t2712 * t3131;
t3868 = t2712 * t3140;
t3867 = t2713 * t3093;
t3866 = t2713 * t3105;
t3865 = t2713 * t3115;
t3864 = t2713 * t3116;
t3863 = t2713 * t3134;
t3862 = t2713 * t3143;
t3861 = t2714 * t3093;
t3860 = t2714 * t3109;
t3859 = t2714 * t3115;
t3858 = t2714 * t3116;
t3857 = t2714 * t3137;
t3856 = t2714 * t3146;
t3849 = t4073 * t2980;
t3848 = t4074 * t2983;
t3847 = t4075 * t2986;
t3843 = t2881 * t3115;
t3841 = t2882 * t3115;
t3839 = t2883 * t3115;
t3828 = t2946 * t3140;
t3827 = t2947 * t3143;
t3826 = t2948 * t3146;
t3825 = t2949 * t3115;
t2589 = t2952 * t2652;
t2590 = t2952 * t2653;
t2591 = t2952 * t2654;
t2664 = t2952 * t2697;
t2665 = t2952 * t2698;
t2666 = t2952 * t2699;
t3815 = t2980 * t3093;
t3814 = t2981 * t4072;
t3812 = t2983 * t3093;
t3811 = t2984 * t4071;
t3809 = t2986 * t3093;
t3808 = t2987 * t4070;
t3794 = t3929 * t3099;
t3793 = t3929 * t3103;
t3792 = t3929 * t3107;
t3791 = t3929 * t3115;
t3790 = t3929 * t3130;
t3789 = t3929 * t3133;
t3788 = t3929 * t3136;
t3018 = t3114 + t3185;
t3787 = t3018 * t3131;
t3786 = t3018 * t3134;
t3785 = t3018 * t3137;
t3758 = t3115 * t3116;
t3728 = t3131 * t2952;
t3719 = t3134 * t2952;
t3710 = t3137 * t2952;
t3100 = t3140 * t3101;
t3692 = t3158 * t3100;
t3104 = t3143 * t3105;
t3691 = t3158 * t3104;
t3108 = t3146 * t3109;
t3690 = t3158 * t3108;
t3686 = t3158 * t3183;
t3685 = m(3) * t3998;
t3095 = m(3) * t3151;
t3662 = pkin(7) * t2652 + t2638;
t3677 = (-t2688 / 0.2e1 + t3662) * t3053 - t3890 / 0.2e1;
t2504 = t2616 + t3677;
t2523 = -t2688 + t3662;
t3541 = t2697 * t3053;
t2532 = t3907 - t3541;
t3111 = 0.2e1 * t3160;
t2930 = t3111 + t3185 + t3640;
t2580 = t2652 * t2930;
t2611 = t2652 * t3056;
t3182 = pkin(6) ^ 2;
t3639 = pkin(1) ^ 2 + t3182;
t3415 = t3181 + t3639;
t3266 = t3111 + t3180 + t3415;
t2885 = t3183 + t3266;
t2901 = -0.2e1 / 0.3e1 * t3160 - t3180 / 0.3e1 - t3181 / 0.3e1 + t3185;
t2929 = pkin(1) * t3765;
t3033 = 0.2e1 * t3083;
t3084 = t3183 + t3185;
t3085 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t3416 = t3185 - t3640;
t3308 = pkin(3) * t3416;
t3555 = pkin(6) * t3765;
t3198 = t3131 * (((t2688 - 0.2e1 * t2638) * pkin(7) + pkin(6) * t2682) * t3053 + t2697 * t3686 + (t3130 * t3308 + t3555) * t2652) + (t2691 - 0.2e1 * t3255) * t3024 + t4107 * t3056;
t2673 = pkin(1) * t3891;
t3548 = t2981 * t2643;
t3234 = (t2673 - t4045) * t3057 + t3548;
t3125 = t3185 / 0.2e1;
t3417 = -t3182 / 0.2e1 - t3183 / 0.2e1 + t3125;
t3241 = t3417 + t4103;
t3242 = t3183 + t3639 - t4032;
t3265 = t3112 + t3183 + t3416;
t3470 = t3158 * t3781;
t3269 = t3470 * t3814;
t3291 = t2962 * t3870 + t2523;
t3309 = t3125 + t3160 + t4057;
t3310 = t3185 + t4032;
t3579 = t2652 * t3972;
t2607 = pkin(3) * t3579;
t3358 = -t3541 / 0.2e1;
t3316 = t2580 / 0.2e1 + t2611 / 0.2e1 + t2607 + t3158 * t3358;
t3340 = t2981 * t3489;
t3510 = t2712 * t3814;
t3345 = t3158 * t3510;
t3350 = 0.2e1 * t3092 - 0.2e1 * t3116;
t3517 = t2697 * t3729;
t3370 = pkin(3) * t3517;
t3376 = t3130 * t3585;
t3377 = t3115 * t2955;
t3395 = 0.2e1 * t3508;
t3425 = 0.3e1 / 0.2e1 * t2901 * t3158;
t3474 = t3115 * t3781;
t3509 = t2712 * t3781;
t3518 = t2697 * t3056;
t3526 = t3995 * t3158;
t3292 = -t3185 / 0.2e1 + t4057;
t3549 = (pkin(6) * t2638 + pkin(7) * t3661 + t2697 * t3292 + t3677) * t3057;
t3576 = pkin(2) * t3892;
t3586 = pkin(1) * t3758;
t3590 = 0.2e1 * t3758;
t3599 = 0.2e1 * t3871;
t3670 = 0.2e1 * t2607 + t2611;
t2478 = ((t3130 * t3377 + ((t3021 + t3265) * t3139 + (t2980 + t3963) * pkin(2)) * t3781) * t3872 + ((t2943 * t3509 + t3576) * t3963 + ((t2697 * t3084 - t3053 * t3291) * t3115 + t2946 * pkin(2) * t3509) * t3139 - (t3130 * t3291 - t3969) * t3979 - (-t2980 * t3869 * t3995 + t2691 * t3743) * t3158) * t3140 + t2670 * t3963 + (t2962 * t2712 * t3526 + (pkin(3) * t3376 + t2943 * t3979) * t2697) * t3139 - (-pkin(3) * t3891 + (t2523 * t3131 + t2943 * t3870 + t2646) * t3130) * t3745 + t3376 * t3983) / ((-pkin(1) * t3570 + t2869 * t3115) * t3139 + t3222) * t2697 + ((-t2712 * t4072 * (t3310 + t3258) * t3100 * t3474 + (t3345 * t4082 + ((t2901 + t3258) * t3508 * t4080 - 0.2e1 * t3549 + (-0.2e1 * t2504 + t3518) * pkin(2)) * t3093 + ((t2652 * t3765 + t3370 + t3670) * t3985 + 0.4e1 * t3345) * t3116 + (t3131 * t3425 + t2929 + t3258 * (t3085 * t3131 + pkin(1))) * t3599 - pkin(2) * t3518 + 0.2e1 * t3549 + t2504 * t3178) * t3101 + (t3198 * t3093 + t4072 * ((t3358 + t3907) * t3069 + t3316) * t3590 + (((t3241 + t4035) * t4081 + 0.4e1 * t2965 + t3242 + t4060) * t3804 + t3340 * t3350) * t2712 - t3198) * t3140 + (t3510 * t4016 + ((t3417 + t4035) * t3395 + t3234) * t3093 + (t2532 * t3985 - 0.2e1 * t3510 + (t2611 + t2580 + (-t3517 + 0.2e1 * t3579) * pkin(3)) * t3757) * t3116 + (t3033 + (t2885 + t4060) * t3131) * t3871 - t3234) * t3158) * t2712 + ((t3586 * t3831 - 0.2e1 * t3269) * t3872 + (0.2e1 * ((t3056 / 0.2e1 + t3024 + t2965 + t3309) * t3870 + t3316) * t3804 + t3340 * t3509) * t3140 + ((t3083 + (t2930 + t3258) * t3131) * t2712 * t3731 + (t2580 - t3370 + t3670) * t2943) * t3115 + t2712 * t3269) * t2652) / ((t2869 * t3139 + t3573) * t3115 + t3237) * t3184;
t3396 = -0.2e1 * t3508;
t2550 = pkin(6) * t3396 + t2643;
t3167 = pkin(6) / 0.2e1;
t2969 = t3053 + t3167;
t2703 = t2969 * t3396;
t2884 = 0.3e1 * t3183 + t3266;
t2924 = -t3765 / 0.2e1;
t3017 = -t3182 + t3638;
t3072 = pkin(1) * t3101;
t3073 = pkin(1) * t3140;
t3086 = -pkin(7) / 0.2e1 - pkin(8) / 0.2e1;
t3272 = t4079 * t3764;
t3288 = -t3915 - t2643;
t3367 = pkin(2) * t2925;
t3383 = (pkin(2) * t3395 + t2640 + t2676) * t3101 - t2640;
t3407 = t3758 * t4003;
t3418 = t3182 / 0.3e1 - t3185 / 0.3e1 + t3183;
t3434 = ((0.2e1 * t2745 + 0.2e1 * t2748 + 0.2e1 * t2760 - t3872) * t3093 + t3910 + t3872 - t2712) * t3764;
t3440 = t2981 * t3726;
t3453 = t3116 * t3751;
t3457 = t3101 * t3765;
t3506 = t2712 * t3008;
t3522 = t3130 * t3908;
t3166 = pkin(6) / 0.3e1;
t3534 = (t3053 + t3166) * t3977;
t3542 = t2697 * t3066;
t3547 = t2652 * t3066;
t3560 = pkin(6) * t3870;
t3561 = pkin(6) * t3871;
t3633 = 0.2e1 * t3953;
t3645 = t3021 + t3183;
t3652 = t3765 / 0.3e1 - 0.2e1 / 0.3e1 * t3183;
t2482 = (t2538 * t3139 * t3453 + ((t3030 * t3764 + t3139 * t4038) * t3093 + t3131 * t3139 * t3407 - t3272) * t2652 + (((-0.4e1 / 0.3e1 + t3101) * t3764 + ((-0.2e1 / 0.3e1 * t3021 + t3652) * t3101 + 0.2e1 / 0.3e1 * t3367 + 0.4e1 / 0.3e1 * t3021 + t3418) * t3139 - 0.2e1 / 0.3e1 * t3849) * t4015 + (-0.3e1 * t3272 + ((t2924 + t3645) * t4011 + (-pkin(2) * t3689 - t4004) * t4007 - 0.2e1 * t2965 - t2884) * t3139) * t3116 - t3240 * t4081 * t3960) * t2712 + (t4048 * t3093 + (pkin(2) * t3994 + 0.2e1 * t2925) * t3560 + ((t3787 + (t3158 + t3248) * pkin(1)) * t3910 + (-t3994 * t3083 + ((t3017 - t3457) * t3093 + t3457 + t2885) * t3131 + (t3726 * t4025 + ((t3100 - t3140) * t4081 - 0.2e1 * t3100 + t4007) * t3158) * pkin(2)) * t2712) * t3115 - t4048) * t3130 + (t2550 * t3093 - t4064 - t3915 - t2550 + (t3093 * t3288 - t3288 + t4064) * t3101 + (t4073 * t2712 * t4014 + (-t2646 * t3140 - 0.3e1 * t2643 - t3921) * t3093 + (-(t2670 + 0.4e1 * t3952) * t3101 - (-t3576 + t3633) * t3140 + 0.2e1 * t2670 + t2706) * t3116 + t3921 + t2643) * t3099 + ((-(-0.4e1 * t3561 - t3924) * t3099 - t3924) * t3093 + (-(0.4e1 * t3506 - (t2640 + t4024) * t3115) * t3099 + 0.2e1 * t3506 - t2697 * t3745) * t3116 - (0.2e1 * t3561 + t3924) * t3099 + t3924) * t3131 + (((t4024 - t3383) * t3093 - 0.4e1 * t3560 - t2673 - t2676 + ((0.2e1 * t2691 + t3542) * t3093 - t3542) * t3131 + (((pkin(1) * t3908 - t4042) * t3140 + t3908 * t3177) * t3116 + ((-0.4e1 * t3008 + 0.2e1 * t3692 + 0.4e1 * t3977) * t3093 - 0.2e1 * t3692 + t2962 * t4007) * t2712) * t3115 + t3383) * t3139 + (-t2712 + 0.4e1 * t3873 + 0.2e1 * t3910) * t3115 * t3533) * t3130) * pkin(3)) / (t2808 + (t2824 * t3139 + t3275) * t3115) * t2712 + ((-t3434 - ((t2703 + t2652 * (t3073 + t3178)) * t3116 + (-t3542 - t4107) * t3115) * t3963 + ((-pkin(1) * t3547 + t2962 * t3541 - (t2965 + t3018) * t2652) * t3116 + (-t2532 * t3959 + t3131 * t3548) * t3115) * t3139 + t2535 * t3843) * t2652 + (t3843 * t3911 + (t3554 * t3909 + (pkin(1) * t3522 + t2535) * t3116) * t3139 + (-t3547 + (t3541 - t4042) * t3131 - t2646) * t3115 - t2697 * (t3073 + pkin(2)) * t3116) * t3969 + ((-((-t3058 + (-t3689 + pkin(1)) * t3140 + t3177) * t3093 + t4073) * t3963 + (-(t3101 * t3966 - t3021 - t4038) * t3093 + (((t3069 - t3158) * t3053 - t3954) * t3140 + 0.3e1 * t3534) * t3758 + t3768 * t3966) * t3139 - t4073 * t3815 - t3115 * (-t3248 * pkin(1) - t3083 - t3787) * t3743 + t3849) * t2652 + ((-(-t3066 + t3072 + t3179 - t3725) * t3758 - t3473 * t3959) * t3099 + (t2980 * t3453 + ((t3086 * t3101 + t3567 / 0.2e1 + t2962) * t4081 - t2830) * t3130) * t3139 + (t3072 - t2943) * t3758 + t3093 * t3440 - t3440) * t3969) * t2712) * t2778;
t2553 = t2652 + t3870;
t2775 = 0.1e1 / ((t2818 * t3115 + t2843) * t3139 + t3307);
t3168 = -0.3e1 / 0.2e1 * pkin(2);
t3251 = t3457 + t3645;
t3373 = pkin(2) * t3522;
t2490 = ((-t3370 * t3139 + (pkin(2) * t3636 + t3018 * t3139 + t3764) * t2553) * t2652 - ((t2553 * t3729 - t3969) * t3139 - t3983) * t3969) * t2775 + ((t3434 + (((t3168 + t3651) * t4013 + 0.2e1 * t3058 + t3828 - pkin(2)) * t3963 + (-(-t3185 + t3251 + 0.2e1 * t3367) * t3093 + pkin(2) * t3828 + t2965 + t3114 + t3251) * t3139 + (t2980 - t3815) * pkin(2)) * t2712 + ((t2703 + 0.2e1 * t2643) * t3963 + (t2652 * t3018 - t3370) * t3139) * t3116) * t2778 + (((-t3373 + t3927) * pkin(2) + ((0.2e1 * t2969 * t3008 - 0.3e1 * t3534) * t3139 + t3130 * t3948) * t3870 + (-(t2610 + t2676) * t3763 + (-0.2e1 * t3373 + t3927) * t3139) * pkin(3)) * t2778 + (-(t3099 * t3689 + t3140 * t4072) * t3969 + (t3948 + ((t3008 - 0.2e1 * t3977) * t3139 - t3533) * pkin(3)) * t3909) * t2775) * t3115) * t2712;
t2592 = -0.2e1 * t3912;
t2593 = 0.2e1 * t3912;
t2619 = t2652 * t3930;
t2649 = t2652 ^ 2;
t2893 = t3131 * t2949;
t2931 = (t3171 + t3173) * m(3) + Icges(3,3);
t2975 = t3152 + t3999;
t2978 = t3153 - t3998;
t2769 = -((-t3728 - (t2975 * t3140 + t3151) * m(3)) * t3139 + (t2893 + (t2978 * t3140 + t3150) * m(3)) * t3130 - t2931 * t3140) * t3115 + (-Icges(3,5) * t3130 - Icges(3,6) * t3139 + t4039 * m(3) * (t3148 + t3069)) * t3116;
t2827 = t2896 + t3824;
t2902 = t3171 * m(3) - Icges(3,2) / 0.2e1 + Icges(3,3) / 0.2e1 + Icges(3,1) / 0.2e1;
t3094 = m(3) * t3150;
t3346 = t3929 * t3508;
t3298 = -0.4e1 * t3346;
t3349 = t2652 * t3508;
t3303 = 0.2e1 * t3349;
t3304 = -0.2e1 * t3349;
t3325 = t2907 * t3508;
t3406 = t3995 * t3153;
t3507 = t2712 * t3751;
t3594 = t2952 * t4008;
t3595 = 0.2e1 * t3825;
t3606 = rSges(3,2) * t2643;
t3682 = -t2478 * t2931 + t2482 * t2827 + t2490 * t2769 + (0.2e1 * (t2592 + t3325) * t3870 + t2907 * t3303) * t3099 + (-(t2952 * t3507 - (t2976 * t3508 + 0.2e1 * t3606) * m(3)) * t3870 + (t2652 * t3594 + (t2893 + t3094) * t2712) * t3868 - m(3) * (-t2649 * t3153 + t3304 * t3999) + (-(t2907 * t3784 + t2949 * t3726 - t2941) * t3093 + t3101 * t4096 + (-t3101 * t3406 - t3998) * m(3)) * t2709) * t3139 + (-t3325 + t2593) * t3870 + t2902 * t3303 + ((-(t2652 * t4018 + t3298) * t3870 + 0.4e1 * t2652 * t3346 - t2907 * t3918) * t3139 - (t2952 * t3726 + (rSges(3,1) * t3058 - t2976) * m(3)) * t3879 + (t2949 * t3507 - (t2977 * t3508 + t2619) * m(3)) * t3870 + (t2652 * t3595 + (t3095 + t3728) * t2712) * t3868 + (t2709 * t3152 + (rSges(3,2) * t3304 + (t2649 + t3878) * rSges(3,1)) * pkin(2)) * m(3)) * t3130 - (0.2e1 * (-t3918 + (-t3030 * t3093 + t3101) * t2709) * t3099 + t3030 * t3879 - t3878 + t3918) * t3929;
t3664 = t2653 * pkin(7) + t2632;
t3679 = (-t2689 / 0.2e1 + t3664) * t3054 - t3885 / 0.2e1;
t2502 = t2617 + t3679;
t2524 = -t2689 + t3664;
t3539 = t2698 * t3054;
t2533 = t3901 - t3539;
t2581 = t2653 * t2930;
t2613 = t2653 * t3059;
t3197 = t3134 * (((t2689 - 0.2e1 * t2632) * pkin(7) + pkin(6) * t2683) * t3054 + t2698 * t3686 + (t3133 * t3308 + t3555) * t2653) + (t2692 - 0.2e1 * t3254) * t3025 + t4108 * t3059;
t2674 = pkin(1) * t3886;
t3546 = t2984 * t2644;
t3233 = (t2674 - t4046) * t3060 + t3546;
t3268 = t3470 * t3811;
t3290 = t2963 * t3864 + t2524;
t3578 = t2653 * t3971;
t2608 = pkin(3) * t3578;
t3357 = -t3539 / 0.2e1;
t3315 = t2581 / 0.2e1 + t2613 / 0.2e1 + t2608 + t3158 * t3357;
t3338 = t2984 * t3488;
t3505 = t2713 * t3811;
t3343 = t3158 * t3505;
t3514 = t2698 * t3720;
t3369 = pkin(3) * t3514;
t3375 = t3133 * t3584;
t3393 = 0.2e1 * t3503;
t3504 = t2713 * t3781;
t3515 = t2698 * t3059;
t3551 = (pkin(6) * t2632 + pkin(7) * t3660 + t2698 * t3292 + t3679) * t3060;
t3575 = pkin(2) * t3887;
t3598 = 0.2e1 * t3865;
t3669 = 0.2e1 * t2608 + t2613;
t2479 = ((t3133 * t3377 + ((t3022 + t3265) * t3142 + (t2983 + t3962) * pkin(2)) * t3781) * t3866 + ((t2944 * t3504 + t3575) * t3962 + ((t2698 * t3084 - t3054 * t3290) * t3115 + t2947 * pkin(2) * t3504) * t3142 - (t3133 * t3290 - t3968) * t3979 - (-t2983 * t3863 * t3995 + t2692 * t3741) * t3158) * t3143 + t2671 * t3962 + (t2963 * t2713 * t3526 + (pkin(3) * t3375 + t2944 * t3979) * t2698) * t3142 - (-pkin(3) * t3886 + (t2524 * t3134 + t2944 * t3864 + t2647) * t3133) * t3745 + t3375 * t3982) / ((-pkin(1) * t3569 + t2870 * t3115) * t3142 + t3221) * t2698 + ((-t2713 * t4071 * (t3310 + t3257) * t3104 * t3474 + (t3343 * t4082 + ((t2901 + t3257) * t3503 * t4080 - 0.2e1 * t3551 + (-0.2e1 * t2502 + t3515) * pkin(2)) * t3093 + ((t2653 * t3765 + t3369 + t3669) * t3985 + 0.4e1 * t3343) * t3116 + (t3134 * t3425 + t2929 + t3257 * (t3085 * t3134 + pkin(1))) * t3598 - pkin(2) * t3515 + 0.2e1 * t3551 + t2502 * t3178) * t3105 + (t3197 * t3093 + t4071 * ((t3357 + t3901) * t3070 + t3315) * t3590 + (((t3241 + t4034) * t4081 + 0.4e1 * t2966 + t3242 + t4059) * t3801 + t3338 * t3350) * t2713 - t3197) * t3143 + (t3505 * t4016 + ((t3417 + t4034) * t3393 + t3233) * t3093 + (t2533 * t3985 - 0.2e1 * t3505 + (t2613 + t2581 + (-t3514 + 0.2e1 * t3578) * pkin(3)) * t3755) * t3116 + (t3033 + (t2885 + t4059) * t3134) * t3865 - t3233) * t3158) * t2713 + ((t3586 * t3830 - 0.2e1 * t3268) * t3866 + (0.2e1 * ((t3059 / 0.2e1 + t3025 + t2966 + t3309) * t3864 + t3315) * t3801 + t3338 * t3504) * t3143 + ((t3083 + (t2930 + t3257) * t3134) * t2713 * t3731 + (t2581 - t3369 + t3669) * t2944) * t3115 + t2713 * t3268) * t2653) / ((t2870 * t3142 + t3572) * t3115 + t3236) * t3184;
t3394 = -0.2e1 * t3503;
t2551 = pkin(6) * t3394 + t2644;
t2971 = t3054 + t3167;
t2704 = t2971 * t3394;
t3074 = pkin(1) * t3105;
t3075 = pkin(1) * t3143;
t3271 = t4078 * t3762;
t3287 = -t3914 - t2644;
t3364 = pkin(2) * t2926;
t3382 = (pkin(2) * t3393 + t2641 + t2677) * t3105 - t2641;
t3433 = ((0.2e1 * t2746 + 0.2e1 * t2749 + 0.2e1 * t2761 - t3866) * t3093 + t3904 + t3866 - t2713) * t3762;
t3439 = t2984 * t3717;
t3452 = t3116 * t3749;
t3456 = t3105 * t3765;
t3501 = t2713 * t3009;
t3521 = t3133 * t3902;
t3532 = (t3054 + t3166) * t3975;
t3540 = t2698 * t3067;
t3545 = t2653 * t3067;
t3558 = pkin(6) * t3864;
t3559 = pkin(6) * t3865;
t3632 = 0.2e1 * t3951;
t3644 = t3022 + t3183;
t2481 = (t2539 * t3142 * t3452 + ((t3031 * t3762 + t3142 * t4037) * t3093 + t3134 * t3142 * t3407 - t3271) * t2653 + (((t3105 - 0.4e1 / 0.3e1) * t3762 + ((-0.2e1 / 0.3e1 * t3022 + t3652) * t3105 + 0.2e1 / 0.3e1 * t3364 + 0.4e1 / 0.3e1 * t3022 + t3418) * t3142 - 0.2e1 / 0.3e1 * t3848) * t4015 + (-0.3e1 * t3271 + ((t2924 + t3644) * t4010 + (-pkin(2) * t3688 - t4004) * t4006 - 0.2e1 * t2966 - t2884) * t3142) * t3116 - t3239 * t4081 * t3958) * t2713 + (t4049 * t3093 + (pkin(2) * t3993 + 0.2e1 * t2926) * t3558 + ((t3786 + (t3158 + t3247) * pkin(1)) * t3904 + (-t3993 * t3083 + ((t3017 - t3456) * t3093 + t3456 + t2885) * t3134 + (t3717 * t4025 + ((t3104 - t3143) * t4081 - 0.2e1 * t3104 + t4006) * t3158) * pkin(2)) * t2713) * t3115 - t4049) * t3133 + (t2551 * t3093 - t4065 - t3914 - t2551 + (t3093 * t3287 - t3287 + t4065) * t3105 + (t4074 * t2713 * t4014 + (-t2647 * t3143 - 0.3e1 * t2644 - t3920) * t3093 + (-(t2671 + 0.4e1 * t3950) * t3105 - (-t3575 + t3632) * t3143 + 0.2e1 * t2671 + t2707) * t3116 + t3920 + t2644) * t3103 + ((-(-0.4e1 * t3559 - t3923) * t3103 - t3923) * t3093 + (-(0.4e1 * t3501 - (t2641 + t4023) * t3115) * t3103 + 0.2e1 * t3501 - t2698 * t3745) * t3116 - (0.2e1 * t3559 + t3923) * t3103 + t3923) * t3134 + (((t4023 - t3382) * t3093 - 0.4e1 * t3558 - t2674 - t2677 + ((0.2e1 * t2692 + t3540) * t3093 - t3540) * t3134 + (((pkin(1) * t3902 - t4043) * t3143 + t3902 * t3177) * t3116 + ((-0.4e1 * t3009 + 0.2e1 * t3691 + 0.4e1 * t3975) * t3093 - 0.2e1 * t3691 + t2963 * t4006) * t2713) * t3115 + t3382) * t3142 + (-t2713 + 0.4e1 * t3867 + 0.2e1 * t3904) * t3115 * t3536) * t3133) * pkin(3)) / (t2809 + (t2825 * t3142 + t3274) * t3115) * t2713 + ((-t3433 - ((t2704 + t2653 * (t3075 + t3178)) * t3116 + (-t3540 - t4108) * t3115) * t3962 + ((-pkin(1) * t3545 + t2963 * t3539 - (t2966 + t3018) * t2653) * t3116 + (-t2533 * t3957 + t3134 * t3546) * t3115) * t3142 + t2536 * t3841) * t2653 + (t3841 * t3905 + (t3553 * t3903 + (pkin(1) * t3521 + t2536) * t3116) * t3142 + (-t3545 + (t3539 - t4043) * t3134 - t2647) * t3115 - t2698 * (t3075 + pkin(2)) * t3116) * t3968 + ((-((-t3061 + (-t3688 + pkin(1)) * t3143 + t3177) * t3093 + t4074) * t3962 + (-(t3105 * t3965 - t3022 - t4037) * t3093 + (((t3070 - t3158) * t3054 - t3954) * t3143 + 0.3e1 * t3532) * t3758 + t3767 * t3965) * t3142 - t4074 * t3812 - t3115 * (-t3247 * pkin(1) - t3083 - t3786) * t3741 + t3848) * t2653 + ((-(-t3067 + t3074 + t3179 - t3716) * t3758 - t3472 * t3957) * t3103 + (t2983 * t3452 + ((t3086 * t3105 + t3566 / 0.2e1 + t2963) * t4081 - t2831) * t3133) * t3142 + (t3074 - t2944) * t3758 + t3093 * t3439 - t3439) * t3968) * t2713) * t2779;
t2554 = t2653 + t3864;
t2776 = 0.1e1 / ((t2819 * t3115 + t2844) * t3142 + t3306);
t3250 = t3456 + t3644;
t3372 = pkin(2) * t3521;
t2491 = ((-t3369 * t3142 + (pkin(2) * t3635 + t3018 * t3142 + t3762) * t2554) * t2653 - ((t2554 * t3720 - t3968) * t3142 - t3982) * t3968) * t2776 + ((t3433 + (((t3168 + t3650) * t4013 + 0.2e1 * t3061 + t3827 - pkin(2)) * t3962 + (-(-t3185 + t3250 + 0.2e1 * t3364) * t3093 + pkin(2) * t3827 + t2966 + t3114 + t3250) * t3142 + (t2983 - t3812) * pkin(2)) * t2713 + ((t2704 + 0.2e1 * t2644) * t3962 + (t2653 * t3018 - t3369) * t3142) * t3116) * t2779 + (((-t3372 + t3926) * pkin(2) + ((0.2e1 * t2971 * t3009 - 0.3e1 * t3532) * t3142 + t3133 * t3947) * t3864 + (-(t2612 + t2677) * t3761 + (-0.2e1 * t3372 + t3926) * t3142) * pkin(3)) * t2779 + (-(t3103 * t3688 + t3143 * t4071) * t3968 + (t3947 + ((t3009 - 0.2e1 * t3975) * t3142 - t3536) * pkin(3)) * t3903) * t2776) * t3115) * t2713;
t2594 = -0.2e1 * t3906;
t2595 = 0.2e1 * t3906;
t2620 = t2653 * t3930;
t2650 = t2653 ^ 2;
t2894 = t3134 * t2949;
t2770 = -((-t3719 - (t2975 * t3143 + t3151) * m(3)) * t3142 + (t2894 + (t2978 * t3143 + t3150) * m(3)) * t3133 - t2931 * t3143) * t3115 + (-Icges(3,5) * t3133 - Icges(3,6) * t3142 + t4040 * m(3) * (t3148 + t3070)) * t3116;
t2828 = t2897 + t3823;
t3344 = t3929 * t3503;
t3297 = -0.4e1 * t3344;
t3348 = t2653 * t3503;
t3301 = 0.2e1 * t3348;
t3302 = -0.2e1 * t3348;
t3322 = t2907 * t3503;
t3502 = t2713 * t3749;
t3605 = rSges(3,2) * t2644;
t3681 = -t2479 * t2931 + t2481 * t2828 + t2491 * t2770 + (0.2e1 * (t2594 + t3322) * t3864 + t2907 * t3301) * t3103 + (-(t2952 * t3502 - (t2976 * t3503 + 0.2e1 * t3605) * m(3)) * t3864 + (t2653 * t3594 + (t2894 + t3094) * t2713) * t3862 - m(3) * (-t2650 * t3153 + t3302 * t3999) + (-(t2907 * t3783 + t2949 * t3717 - t2941) * t3093 + t3105 * t4095 + (-t3105 * t3406 - t3998) * m(3)) * t2710) * t3142 + (-t3322 + t2595) * t3864 + t2902 * t3301 + ((-(t2653 * t4018 + t3297) * t3864 + 0.4e1 * t2653 * t3344 - t2907 * t3917) * t3142 - (t2952 * t3717 + (rSges(3,1) * t3061 - t2976) * m(3)) * t3877 + (t2949 * t3502 - (t2977 * t3503 + t2620) * m(3)) * t3864 + (t2653 * t3595 + (t3095 + t3719) * t2713) * t3862 + (t2710 * t3152 + (rSges(3,2) * t3302 + (t2650 + t3876) * rSges(3,1)) * pkin(2)) * m(3)) * t3133 - (0.2e1 * (-t3917 + (-t3031 * t3093 + t3105) * t2710) * t3103 + t3031 * t3877 - t3876 + t3917) * t3929;
t3663 = t2654 * pkin(7) + t2635;
t3678 = (-t2690 / 0.2e1 + t3663) * t3055 - t3880 / 0.2e1;
t2503 = t2618 + t3678;
t2525 = -t2690 + t3663;
t3537 = t2699 * t3055;
t2534 = t3895 - t3537;
t2582 = t2654 * t2930;
t2615 = t2654 * t3062;
t3199 = t3137 * (((t2690 - 0.2e1 * t2635) * pkin(7) + pkin(6) * t2684) * t3055 + t2699 * t3686 + (t3136 * t3308 + t3555) * t2654) + (t2693 - 0.2e1 * t3253) * t3026 + t4109 * t3062;
t2675 = pkin(1) * t3881;
t3544 = t2987 * t2645;
t3232 = (t2675 - t4047) * t3063 + t3544;
t3267 = t3470 * t3808;
t3289 = t2964 * t3858 + t2525;
t3577 = t2654 * t3970;
t2609 = pkin(3) * t3577;
t3356 = -t3537 / 0.2e1;
t3314 = t2582 / 0.2e1 + t2615 / 0.2e1 + t2609 + t3158 * t3356;
t3336 = t2987 * t3487;
t3500 = t2714 * t3808;
t3341 = t3158 * t3500;
t3511 = t2699 * t3711;
t3368 = pkin(3) * t3511;
t3374 = t3136 * t3583;
t3391 = 0.2e1 * t3498;
t3499 = t2714 * t3781;
t3512 = t2699 * t3062;
t3550 = (pkin(6) * t2635 + pkin(7) * t3659 + t2699 * t3292 + t3678) * t3063;
t3574 = pkin(2) * t3882;
t3597 = 0.2e1 * t3859;
t3668 = 0.2e1 * t2609 + t2615;
t2480 = ((t3136 * t3377 + ((t3023 + t3265) * t3145 + (t2986 + t3961) * pkin(2)) * t3781) * t3860 + ((t2945 * t3499 + t3574) * t3961 + ((t2699 * t3084 - t3055 * t3289) * t3115 + t2948 * pkin(2) * t3499) * t3145 - (t3136 * t3289 - t3967) * t3979 - (-t2986 * t3857 * t3995 + t2693 * t3739) * t3158) * t3146 + t2672 * t3961 + (t2964 * t2714 * t3526 + (pkin(3) * t3374 + t2945 * t3979) * t2699) * t3145 - (-pkin(3) * t3881 + (t2525 * t3137 + t2945 * t3858 + t2648) * t3136) * t3745 + t3374 * t3981) / ((-pkin(1) * t3568 + t2871 * t3115) * t3145 + t3220) * t2699 + ((-t2714 * t4070 * (t3310 + t3256) * t3108 * t3474 + (t3341 * t4082 + ((t2901 + t3256) * t3498 * t4080 - 0.2e1 * t3550 + (-0.2e1 * t2503 + t3512) * pkin(2)) * t3093 + ((t2654 * t3765 + t3368 + t3668) * t3985 + 0.4e1 * t3341) * t3116 + (t3137 * t3425 + t2929 + t3256 * (t3085 * t3137 + pkin(1))) * t3597 - pkin(2) * t3512 + 0.2e1 * t3550 + t2503 * t3178) * t3109 + (t3199 * t3093 + t4070 * ((t3356 + t3895) * t3071 + t3314) * t3590 + (((t3241 + t4033) * t4081 + 0.4e1 * t2967 + t3242 + t4058) * t3798 + t3336 * t3350) * t2714 - t3199) * t3146 + (t3500 * t4016 + ((t3417 + t4033) * t3391 + t3232) * t3093 + (t2534 * t3985 - 0.2e1 * t3500 + (t2615 + t2582 + (-t3511 + 0.2e1 * t3577) * pkin(3)) * t3753) * t3116 + (t3033 + (t2885 + t4058) * t3137) * t3859 - t3232) * t3158) * t2714 + ((t3586 * t3829 - 0.2e1 * t3267) * t3860 + (0.2e1 * ((t3062 / 0.2e1 + t3026 + t2967 + t3309) * t3858 + t3314) * t3798 + t3336 * t3499) * t3146 + ((t3083 + (t2930 + t3256) * t3137) * t2714 * t3731 + (t2582 - t3368 + t3668) * t2945) * t3115 + t2714 * t3267) * t2654) / ((t2871 * t3145 + t3571) * t3115 + t3235) * t3184;
t3392 = -0.2e1 * t3498;
t2552 = pkin(6) * t3392 + t2645;
t2973 = t3055 + t3167;
t2705 = t2973 * t3392;
t3076 = pkin(1) * t3109;
t3270 = t4077 * t3760;
t3286 = -t3913 - t2645;
t3361 = pkin(2) * t2927;
t3381 = (pkin(2) * t3391 + t2642 + t2678) * t3109 - t2642;
t3432 = ((0.2e1 * t2747 + 0.2e1 * t2750 + 0.2e1 * t2762 - t3860) * t3093 + t3898 + t3860 - t2714) * t3760;
t3438 = t2987 * t3708;
t3451 = t3116 * t3747;
t3455 = t3109 * t3765;
t3496 = t2714 * t3010;
t3520 = t3136 * t3896;
t3531 = (t3055 + t3166) * t3973;
t3538 = t2699 * t3068;
t3543 = t2654 * t3068;
t3556 = pkin(6) * t3858;
t3557 = pkin(6) * t3859;
t3631 = 0.2e1 * t3949;
t3643 = t3023 + t3183;
t2483 = (t2540 * t3145 * t3451 + ((t3032 * t3760 + t3145 * t4036) * t3093 + t3137 * t3145 * t3407 - t3270) * t2654 + (((-0.4e1 / 0.3e1 + t3109) * t3760 + ((-0.2e1 / 0.3e1 * t3023 + t3652) * t3109 + 0.2e1 / 0.3e1 * t3361 + 0.4e1 / 0.3e1 * t3023 + t3418) * t3145 - 0.2e1 / 0.3e1 * t3847) * t4015 + (-0.3e1 * t3270 + ((t2924 + t3643) * t4009 + (-pkin(2) * t3687 - t4004) * t4005 - 0.2e1 * t2967 - t2884) * t3145) * t3116 - t3238 * t4081 * t3956) * t2714 + (t4050 * t3093 + (pkin(2) * t3992 + 0.2e1 * t2927) * t3556 + ((t3785 + (t3158 + t3246) * pkin(1)) * t3898 + (-t3992 * t3083 + ((t3017 - t3455) * t3093 + t3455 + t2885) * t3137 + (t3708 * t4025 + ((t3108 - t3146) * t4081 - 0.2e1 * t3108 + t4005) * t3158) * pkin(2)) * t2714) * t3115 - t4050) * t3136 + (t2552 * t3093 - t4066 - t3913 - t2552 + (t3093 * t3286 - t3286 + t4066) * t3109 + (t4075 * t2714 * t4014 + (-t2648 * t3146 - 0.3e1 * t2645 - t3919) * t3093 + (-(t2672 + 0.4e1 * t3980) * t3109 - (-t3574 + t3631) * t3146 + 0.2e1 * t2672 + t2708) * t3116 + t3919 + t2645) * t3107 + ((-(-0.4e1 * t3557 - t3922) * t3107 - t3922) * t3093 + (-(0.4e1 * t3496 - (t2642 + t4022) * t3115) * t3107 + 0.2e1 * t3496 - t2699 * t3745) * t3116 - (0.2e1 * t3557 + t3922) * t3107 + t3922) * t3137 + (((t4022 - t3381) * t3093 - 0.4e1 * t3556 - t2675 - t2678 + ((0.2e1 * t2693 + t3538) * t3093 - t3538) * t3137 + (((pkin(1) * t3896 - t4044) * t3146 + t3896 * t3177) * t3116 + ((-0.4e1 * t3010 + 0.2e1 * t3690 + 0.4e1 * t3973) * t3093 - 0.2e1 * t3690 + t2964 * t4005) * t2714) * t3115 + t3381) * t3145 + (-t2714 + 0.4e1 * t3861 + 0.2e1 * t3898) * t3115 * t3535) * t3136) * pkin(3)) / (t2810 + (t2826 * t3145 + t3273) * t3115) * t2714 + ((-t3432 - ((t2705 + t2654 * (t3065 + t3178)) * t3116 + (-t3538 - t4109) * t3115) * t3961 + ((-pkin(1) * t3543 + t2964 * t3537 - (t2967 + t3018) * t2654) * t3116 + (-t2534 * t3955 + t3137 * t3544) * t3115) * t3145 + t2537 * t3839) * t2654 + (t3839 * t3899 + (t3552 * t3897 + (pkin(1) * t3520 + t2537) * t3116) * t3145 + (-t3543 + (t3537 - t4044) * t3137 - t2648) * t3115 - t2699 * (t3065 + pkin(2)) * t3116) * t3967 + ((-((-t3064 + (-t3687 + pkin(1)) * t3146 + t3177) * t3093 + t4075) * t3961 + (-(t3109 * t3964 - t3023 - t4036) * t3093 + (((t3071 - t3158) * t3055 - t3954) * t3146 + 0.3e1 * t3531) * t3758 + t3766 * t3964) * t3145 - t4075 * t3809 - t3115 * (-t3246 * pkin(1) - t3083 - t3785) * t3739 + t3847) * t2654 + ((-(-t3068 + t3076 + t3179 - t3707) * t3758 - t3471 * t3955) * t3107 + (t2986 * t3451 + ((t3086 * t3109 + t3565 / 0.2e1 + t2964) * t4081 - t2832) * t3136) * t3145 + (t3076 - t2945) * t3758 + t3093 * t3438 - t3438) * t3967) * t2714) * t2780;
t2555 = t2654 + t3858;
t2777 = 0.1e1 / ((t2820 * t3115 + t2845) * t3145 + t3305);
t3249 = t3455 + t3643;
t3371 = pkin(2) * t3520;
t2492 = ((-t3368 * t3145 + (pkin(2) * t3634 + t3018 * t3145 + t3760) * t2555) * t2654 - ((t2555 * t3711 - t3967) * t3145 - t3981) * t3967) * t2777 + ((t3432 + (((t3168 + t3649) * t4013 + 0.2e1 * t3064 + t3826 - pkin(2)) * t3961 + (-(-t3185 + t3249 + 0.2e1 * t3361) * t3093 + pkin(2) * t3826 + t2967 + t3114 + t3249) * t3145 + (t2986 - t3809) * pkin(2)) * t2714 + ((t2705 + 0.2e1 * t2645) * t3961 + (t2654 * t3018 - t3368) * t3145) * t3116) * t2780 + (((-t3371 + t3925) * pkin(2) + ((0.2e1 * t2973 * t3010 - 0.3e1 * t3531) * t3145 + t3136 * t3946) * t3858 + (-(t2614 + t2678) * t3759 + (-0.2e1 * t3371 + t3925) * t3145) * pkin(3)) * t2780 + (-(t3107 * t3687 + t3146 * t4070) * t3967 + (t3946 + ((t3010 - 0.2e1 * t3973) * t3145 - t3535) * pkin(3)) * t3897) * t2777) * t3115) * t2714;
t2596 = -0.2e1 * t3900;
t2597 = 0.2e1 * t3900;
t2621 = t2654 * t3930;
t2651 = t2654 ^ 2;
t2895 = t3137 * t2949;
t2771 = -((-t3710 - (t2975 * t3146 + t3151) * m(3)) * t3145 + (t2895 + (t2978 * t3146 + t3150) * m(3)) * t3136 - t2931 * t3146) * t3115 + (-Icges(3,5) * t3136 - Icges(3,6) * t3145 + t4041 * m(3) * (t3148 + t3071)) * t3116;
t2829 = t2898 + t3822;
t3342 = t3929 * t3498;
t3296 = -0.4e1 * t3342;
t3347 = t2654 * t3498;
t3299 = 0.2e1 * t3347;
t3300 = -0.2e1 * t3347;
t3319 = t2907 * t3498;
t3497 = t2714 * t3747;
t3604 = rSges(3,2) * t2645;
t3680 = -t2480 * t2931 + t2483 * t2829 + t2492 * t2771 + (0.2e1 * (t2596 + t3319) * t3858 + t2907 * t3299) * t3107 + (-(t2952 * t3497 - (t2976 * t3498 + 0.2e1 * t3604) * m(3)) * t3858 + (t2654 * t3594 + (t2895 + t3094) * t2714) * t3856 - m(3) * (-t2651 * t3153 + t3300 * t3999) + (-(t2907 * t3782 + t2949 * t3708 - t2941) * t3093 + t3109 * t4094 + (-t3109 * t3406 - t3998) * m(3)) * t2711) * t3145 + (-t3319 + t2597) * t3858 + t2902 * t3299 + ((-(t2654 * t4018 + t3296) * t3858 + 0.4e1 * t2654 * t3342 - t2907 * t3916) * t3145 - (t2952 * t3708 + (rSges(3,1) * t3064 - t2976) * m(3)) * t3875 + (t2949 * t3497 - (t2977 * t3498 + t2621) * m(3)) * t3858 + (t2654 * t3595 + (t3095 + t3710) * t2714) * t3856 + (t2711 * t3152 + (rSges(3,2) * t3300 + (t2651 + t3874) * rSges(3,1)) * pkin(2)) * m(3)) * t3136 - (0.2e1 * (-t3916 + (-t3032 * t3093 + t3109) * t2711) * t3107 + t3032 * t3875 - t3874 + t3916) * t3929;
t3431 = m(3) * t3606;
t3676 = (t2664 - 0.2e1 * t3431) * t3130 + t2814 * t2652;
t3430 = m(3) * t3605;
t3675 = (t2665 - 0.2e1 * t3430) * t3133 + t2814 * t2653;
t3429 = m(3) * t3604;
t3674 = (t2666 - 0.2e1 * t3429) * t3136 + t2814 * t2654;
t3673 = t2697 * t2941 - t2589;
t3672 = t2698 * t2941 - t2590;
t3671 = t2699 * t2941 - t2591;
t2694 = t2697 ^ 2;
t3658 = -t2649 + t2694;
t2695 = t2698 ^ 2;
t3657 = -t2650 + t2695;
t2696 = t2699 ^ 2;
t3656 = -t2651 + t2696;
t3637 = -0.2e1 * t2941;
t3630 = 0.2e1 * t3944;
t3629 = m(3) * t3985;
t3621 = t3161 / 0.2e1;
t3620 = 0.2e1 * t2652;
t3619 = 0.2e1 * t2653;
t3618 = 0.2e1 * t2654;
t3616 = 0.2e1 * t3115;
t3615 = m(3) * t3940;
t3614 = m(3) * t3939;
t3613 = m(3) * t3938;
t3612 = t2697 * t4000;
t3611 = t2698 * t4000;
t3610 = t2699 * t4000;
t3609 = rSges(3,2) * t3989;
t3608 = rSges(3,2) * t3988;
t3607 = rSges(3,2) * t3987;
t3602 = 0.2e1 * t3893;
t3601 = 0.2e1 * t3888;
t3600 = 0.2e1 * t3883;
t3596 = t2902 * t4008;
t3593 = 0.2e1 * t3794;
t3592 = 0.2e1 * t3793;
t3591 = 0.2e1 * t3792;
t3589 = -0.2e1 * t3685;
t3588 = 0.2e1 * t3685;
t3587 = -0.2e1 * t3095;
t3049 = t3152 * t3928;
t3519 = t2697 * t3794;
t3516 = t2698 * t3793;
t3513 = t2699 * t3792;
t3492 = t2907 * t3757;
t3491 = t2907 * t3755;
t3490 = t2907 * t3753;
t3428 = pkin(2) * t3609;
t3427 = pkin(2) * t3608;
t3426 = pkin(2) * t3607;
t3424 = rSges(3,1) * t3621;
t3423 = rSges(3,2) * t3621;
t3419 = 0.2e1 * t2889;
t3410 = t2694 * t3629;
t3409 = t2695 * t3629;
t3408 = t2696 * t3629;
t2661 = t2949 * t2697;
t3261 = t3684 + t3790;
t2517 = t3261 * t3620 + t2661;
t2544 = t2649 + t2694;
t2568 = t4086 * t2652;
t2571 = t2652 * t4096;
t2574 = t2889 * t2652;
t2583 = t2938 * t2652;
t2586 = t2949 * t2652;
t2655 = -0.4e1 * t3519;
t2700 = t2712 * t3492;
t2886 = t3609 - t2979;
t2957 = -0.2e1 * t3428;
t2751 = -(t4067 + (t3593 + t4106) * t3131) * t3115 - (t2957 + (-t2938 * t3131 + (t3139 * t4001 - t2886) * t3140) * pkin(1) - t4051) * t3116;
t3228 = t2957 + t2814;
t2793 = t3228 - t4090;
t2906 = t3045 * t3928 - 0.2e1 * Icges(3,1) + 0.2e1 * Icges(3,2);
t2928 = 0.2e1 * t3990;
t2950 = 0.2e1 * t2949;
t2951 = 0.2e1 * t2952;
t2953 = -0.2e1 * m(3) * t3173 - Icges(3,3) - t3931;
t2956 = 0.2e1 * t3428;
t3016 = 0.4e1 * t3929;
t3051 = -0.2e1 * t3684;
t3052 = 0.2e1 * t3095;
t3209 = -(rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) - (t3172 + (0.2e1 * pkin(6) + rSges(2,3)) * rSges(2,3) + t3639) * m(2) - (t3173 + (0.2e1 * pkin(7) + rSges(3,3)) * rSges(3,3) + t3415) * m(3) - Icges(1,3) - t3933;
t3212 = -t3014 * t3099 - t4106;
t3216 = -(rSges(2,1) + t3149) * (-rSges(2,1) + t3149) * m(2) - Icges(2,1) + Icges(2,3) + (-t3173 - t3182 + t3641) * m(3) - t3931;
t3405 = t2778 * ((-((-t4099 + (-t3797 + t3051) * t3139 + t2956 - t2814) * t3101 - 0.2e1 * t3205 * t3726 + t2906 * t3099 + (t3016 * t3130 + t2928) * t3139 + t3130 * t3637 + t3216) * t3093 + (t3131 * t3212 - t4067) * t3590 - t2793 * t3101 - ((t2951 * t3131 + t3052) * t3139 + (-t2950 * t3130 + t3419) * t3131 + t2886 * t3179) * t3140 + t4099 - (-t3797 + t3049) * t3139 + t3131 * t3630 + t3130 * t3589 + t3209) * t2490 + t2751 * t2482 + t2769 * t2478 + 0.4e1 * t2712 * (-t3519 + (-t2589 + (t4096 / 0.2e1 + t3423) * t2697) * t3139 + (t2697 * t3424 + t2586) * t3130 - t2574 + t3894 / 0.2e1) * t3477 + ((t2517 * t3139 + t2652 * t4099 + t3676) * t3869 * t4081 + ((-t2697 * t3928 * t4039 - t2583) * t2646 + ((-t2571 + t2664) * t3139 - t2661 * t3130 + (-t2941 * t3139 - t3990 * t3130 + t3593 + t4087) * t2652) * t2712 * t3616) * t3116 + 0.2e1 * (t2652 * t3791 - t2907 * t3869) * t3911 + ((-t2649 * t4096 - (t2649 * t2977 - t2694 * t2978) * m(3)) * t3115 + (-pkin(1) * t3612 - t2517 * t3131) * t4085) * t3139 - 0.2e1 * t3676 * t3869 + ((-t2649 * t2976 + t2694 * t2975) * t3989 + t4087 * t2649) * t3115 - 0.2e1 * (t2697 * t3615 + t2583) * t3953) * t3140 - 0.2e1 * (t2655 + (-t4021 * t4096 + t3673) * t3139 + (t2697 * t3990 + t2586) * t3130 - t2574 + 0.2e1 * t3894) * t3873 + (0.4e1 * (-t2700 + t3912) * t3893 + ((-0.2e1 * (t2586 + (0.4e1 * t3790 + t3990) * t2697) * t3871 - t2544 * t3095) * t3131 + 0.2e1 * t2697 * (-t2571 - t3431 - t2664 / 0.2e1)) * t3139 + ((t2697 * t2907 + t3130 * t3673 + t2568) * t3599 - (-t2544 * t3609 + t2649 * t2979) * pkin(1)) * t3131 + t2697 * ((m(3) * t2619 + t2661) * t3130 + t2592)) * t3116 + (-t2652 * t3492 + t2712 * t4017) * t3602 + ((t3658 * t3825 + (t2712 * t3587 + (t3049 - 0.4e1 * t3790) * t3892) * t2652) * t3131 + rSges(3,2) * t3410 - 0.2e1 * t2712 * (t2589 + (-t3685 - t4096) * t2697)) * t3139 + (((t2652 * t2697 * t3588 + t2952 * t3658) * t3130 + (-t2697 * t2953 + t2568) * t2652) * t3115 + t2652 * t2886 * t3633) * t3131 + t3410 * t3940 + ((-pkin(6) * t3612 + t2586) * t3130 - t2574 + t3894) * t4085);
t2562 = -0.2e1 * t3576 + t3953;
t3404 = t2784 * (t2751 * t2490 + (t2956 + t4051) * t2482 + t2827 * t2478 + (t3264 * t2697 * t3616 + (t3212 * t3758 + t3944 + (-t2793 * t3093 + 0.2e1 * t3139 * t3261 + t3228 + t4099) * t3131) * t2712) * t3868 - (t2655 + (-t2949 * t3508 + t4021 * t4063) * t3139 + t2821 * t3508 + (-pkin(2) * t3615 - t3929) * t4021) * t3870 + (-t2700 + t2593) * t3602 + (t2562 * t3869 * t4001 + (t3130 * t3298 + t3620 * t4063 - t2664) * t2697) * t3139 + (-t2562 * t3609 + t2697 * t3596 + t2712 * t3942) * t3869 + t2697 * ((t2697 * t3934 + t2619) * m(3) - Icges(3,6) * t2697) * t3130 + t2697 * t2592 + (-t3879 + (-t3390 + 0.1e1) * t2709) * t3205);
t3403 = t2787 * t3682;
t3402 = t2788 * t3681;
t2662 = t2949 * t2698;
t3260 = t3684 + t3789;
t2518 = t3260 * t3619 + t2662;
t2545 = t2650 + t2695;
t2569 = t4086 * t2653;
t2572 = t2653 * t4095;
t2575 = t2889 * t2653;
t2584 = t2938 * t2653;
t2587 = t2949 * t2653;
t2656 = -0.4e1 * t3516;
t2701 = t2713 * t3491;
t2887 = t3608 - t2979;
t2959 = -0.2e1 * t3427;
t2752 = -(t4068 + (t3592 + t4105) * t3134) * t3115 - (t2959 + (-t2938 * t3134 + (t3142 * t4001 - t2887) * t3143) * pkin(1) - t4052) * t3116;
t3227 = t2959 + t2814;
t2794 = t3227 - t4089;
t2958 = 0.2e1 * t3427;
t3211 = -t3014 * t3103 - t4105;
t3401 = ((-((-t4098 + (-t3796 + t3051) * t3142 + t2958 - t2814) * t3105 - 0.2e1 * t3204 * t3717 + t2906 * t3103 + (t3016 * t3133 + t2928) * t3142 + t3133 * t3637 + t3216) * t3093 + (t3134 * t3211 - t4068) * t3590 - t2794 * t3105 - ((t2951 * t3134 + t3052) * t3142 + (-t2950 * t3133 + t3419) * t3134 + t2887 * t3179) * t3143 + t4098 - (-t3796 + t3049) * t3142 + t3134 * t3630 + t3133 * t3589 + t3209) * t2491 + t2752 * t2481 + t2770 * t2479 + 0.4e1 * t2713 * (-t3516 + (-t2590 + (t4095 / 0.2e1 + t3423) * t2698) * t3142 + (t2698 * t3424 + t2587) * t3133 - t2575 + t3889 / 0.2e1) * t3476 + ((t2518 * t3142 + t2653 * t4098 + t3675) * t3863 * t4081 + ((-t2698 * t3928 * t4040 - t2584) * t2647 + ((-t2572 + t2665) * t3142 - t2662 * t3133 + (-t2941 * t3142 - t3990 * t3133 + t3592 + t4087) * t2653) * t2713 * t3616) * t3116 + 0.2e1 * (t2653 * t3791 - t2907 * t3863) * t3905 + ((-t2650 * t4095 - (t2650 * t2977 - t2695 * t2978) * m(3)) * t3115 + (-pkin(1) * t3611 - t2518 * t3134) * t4084) * t3142 - 0.2e1 * t3675 * t3863 + ((-t2650 * t2976 + t2695 * t2975) * t3988 + t4087 * t2650) * t3115 - 0.2e1 * (t2698 * t3614 + t2584) * t3951) * t3143 - 0.2e1 * (t2656 + (-t4020 * t4095 + t3672) * t3142 + (t2698 * t3990 + t2587) * t3133 - t2575 + 0.2e1 * t3889) * t3867 + (0.4e1 * (-t2701 + t3906) * t3888 + ((-0.2e1 * (t2587 + (0.4e1 * t3789 + t3990) * t2698) * t3865 - t2545 * t3095) * t3134 + 0.2e1 * t2698 * (-t2572 - t3430 - t2665 / 0.2e1)) * t3142 + ((t2698 * t2907 + t3133 * t3672 + t2569) * t3598 - (-t2545 * t3608 + t2650 * t2979) * pkin(1)) * t3134 + t2698 * ((m(3) * t2620 + t2662) * t3133 + t2594)) * t3116 + (-t2653 * t3491 + t2713 * t4017) * t3601 + ((t3657 * t3825 + (t2713 * t3587 + (t3049 - 0.4e1 * t3789) * t3887) * t2653) * t3134 + rSges(3,2) * t3409 - 0.2e1 * t2713 * (t2590 + (-t3685 - t4095) * t2698)) * t3142 + (((t2653 * t2698 * t3588 + t2952 * t3657) * t3133 + (-t2698 * t2953 + t2569) * t2653) * t3115 + t2653 * t2887 * t3632) * t3134 + t3409 * t3939 + ((-pkin(6) * t3611 + t2587) * t3133 - t2575 + t3889) * t4084) * t2779;
t2663 = t2949 * t2699;
t3259 = t3684 + t3788;
t2519 = t3259 * t3618 + t2663;
t2546 = t2651 + t2696;
t2570 = t4086 * t2654;
t2573 = t2654 * t4094;
t2576 = t2889 * t2654;
t2585 = t2938 * t2654;
t2588 = t2949 * t2654;
t2657 = -0.4e1 * t3513;
t2702 = t2714 * t3490;
t2888 = t3607 - t2979;
t2961 = -0.2e1 * t3426;
t2753 = -(t4069 + (t3591 + t4104) * t3137) * t3115 - (t2961 + (-t2938 * t3137 + (t3145 * t4001 - t2888) * t3146) * pkin(1) - t4053) * t3116;
t3226 = t2961 + t2814;
t2795 = t3226 - t4088;
t2960 = 0.2e1 * t3426;
t3210 = -t3014 * t3107 - t4104;
t3400 = ((-((-t4097 + (-t3795 + t3051) * t3145 + t2960 - t2814) * t3109 - 0.2e1 * t3203 * t3708 + t2906 * t3107 + (t3016 * t3136 + t2928) * t3145 + t3136 * t3637 + t3216) * t3093 + (t3137 * t3210 - t4069) * t3590 - t2795 * t3109 - ((t2951 * t3137 + t3052) * t3145 + (-t2950 * t3136 + t3419) * t3137 + t2888 * t3179) * t3146 + t4097 - (-t3795 + t3049) * t3145 + t3137 * t3630 + t3136 * t3589 + t3209) * t2492 + t2753 * t2483 + t2771 * t2480 + 0.4e1 * t2714 * (-t3513 + (-t2591 + (t4094 / 0.2e1 + t3423) * t2699) * t3145 + (t2699 * t3424 + t2588) * t3136 - t2576 + t3884 / 0.2e1) * t3475 + ((t2519 * t3145 + t2654 * t4097 + t3674) * t3857 * t4081 + ((-t2699 * t3928 * t4041 - t2585) * t2648 + ((-t2573 + t2666) * t3145 - t2663 * t3136 + (-t2941 * t3145 - t3990 * t3136 + t3591 + t4087) * t2654) * t2714 * t3616) * t3116 + 0.2e1 * (t2654 * t3791 - t2907 * t3857) * t3899 + ((-t2651 * t4094 - (t2651 * t2977 - t2696 * t2978) * m(3)) * t3115 + (-pkin(1) * t3610 - t2519 * t3137) * t4083) * t3145 - 0.2e1 * t3674 * t3857 + ((-t2651 * t2976 + t2696 * t2975) * t3987 + t4087 * t2651) * t3115 - 0.2e1 * (t2699 * t3613 + t2585) * t3949) * t3146 - 0.2e1 * (t2657 + (-t4019 * t4094 + t3671) * t3145 + (t2699 * t3990 + t2588) * t3136 - t2576 + 0.2e1 * t3884) * t3861 + (0.4e1 * (-t2702 + t3900) * t3883 + ((-0.2e1 * (t2588 + (0.4e1 * t3788 + t3990) * t2699) * t3859 - t2546 * t3095) * t3137 + 0.2e1 * t2699 * (-t2573 - t3429 - t2666 / 0.2e1)) * t3145 + ((t2699 * t2907 + t3136 * t3671 + t2570) * t3597 - (-t2546 * t3607 + t2651 * t2979) * pkin(1)) * t3137 + t2699 * ((m(3) * t2621 + t2663) * t3136 + t2596)) * t3116 + (-t2654 * t3490 + t2714 * t4017) * t3600 + ((t3656 * t3825 + (t2714 * t3587 + (t3049 - 0.4e1 * t3788) * t3882) * t2654) * t3137 + rSges(3,2) * t3408 - 0.2e1 * t2714 * (t2591 + (-t3685 - t4094) * t2699)) * t3145 + (((t2654 * t2699 * t3588 + t2952 * t3656) * t3136 + (-t2699 * t2953 + t2570) * t2654) * t3115 + t2654 * t2888 * t3631) * t3137 + t3408 * t3938 + ((-pkin(6) * t3610 + t2588) * t3136 - t2576 + t3884) * t4083) * t2780;
t2563 = -0.2e1 * t3575 + t3951;
t3399 = (t2752 * t2491 + (t2958 + t4052) * t2481 + t2828 * t2479 + (t3263 * t2698 * t3616 + (t3211 * t3758 + t3944 + (-t2794 * t3093 + 0.2e1 * t3142 * t3260 + t3227 + t4098) * t3134) * t2713) * t3862 - (t2656 + (-t2949 * t3503 + t4020 * t4062) * t3142 + t2822 * t3503 + (-pkin(2) * t3614 - t3929) * t4020) * t3864 + (-t2701 + t2595) * t3601 + (t2563 * t3863 * t4001 + (t3133 * t3297 + t3619 * t4062 - t2665) * t2698) * t3142 + (-t2563 * t3608 + t2698 * t3596 + t2713 * t3942) * t3863 + t2698 * ((t2698 * t3934 + t2620) * m(3) - Icges(3,6) * t2698) * t3133 + t2698 * t2594 + (-t3877 + (-t3389 + 0.1e1) * t2710) * t3204) * t2785;
t2564 = -0.2e1 * t3574 + t3949;
t3398 = (t2753 * t2492 + (t2960 + t4053) * t2483 + t2829 * t2480 + (t3262 * t2699 * t3616 + (t3210 * t3758 + t3944 + (-t2795 * t3093 + 0.2e1 * t3145 * t3259 + t3226 + t4097) * t3137) * t2714) * t3856 - (t2657 + (-t2949 * t3498 + t4019 * t4061) * t3145 + t2823 * t3498 + (-pkin(2) * t3613 - t3929) * t4019) * t3858 + (-t2702 + t2597) * t3600 + (t2564 * t3857 * t4001 + (t3136 * t3296 + t3618 * t4061 - t2666) * t2699) * t3145 + (-t2564 * t3607 + t2699 * t3596 + t2714 * t3942) * t3857 + t2699 * ((t2699 * t3934 + t2621) * m(3) - Icges(3,6) * t2699) * t3136 + t2699 * t2596 + (-t3875 + (-t3388 + 0.1e1) * t2711) * t3203) * t2786;
t3397 = t3680 * t2789;
t1 = [t2765 * t3400 + t2764 * t3401 + t2763 * t3405 + t2732 * t3398 + t2731 * t3399 + t2730 * t3404 + (t2736 * t3403 + t2737 * t3402 + t2738 * t3397) * t3184; t2768 * t3400 + t2767 * t3401 + t2766 * t3405 + t2729 * t3398 + t2728 * t3399 + t2727 * t3404 + (t2733 * t3403 + t2734 * t3402 + t2735 * t3397) * t3184; t2792 * t3400 + t2791 * t3401 + t2790 * t3405 + t2759 * t3398 + t2758 * t3399 + t2757 * t3404 + (t3680 * t3853 + t3681 * t3854 + t3682 * t3855) * t3744;];
taucX  = t1;
