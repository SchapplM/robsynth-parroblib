% Calculate inertia matrix for parallel robot
% P3RRRRR10V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [3x3]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:25
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 02:26:44
% EndTime: 2020-08-07 02:26:59
% DurationCPUTime: 16.14s
% Computational Cost: add. (22035->792), mult. (38655->1257), div. (432->13), fcn. (27738->26), ass. (0->540)
t2323 = 2 * pkin(2);
t2322 = m(2) + m(3);
t2260 = m(3) * pkin(2) + mrSges(2,1);
t1921 = cos(qJ(3,3));
t1879 = t1921 * pkin(3);
t1847 = t1879 + pkin(2);
t1913 = sin(qJ(2,3));
t2321 = t1847 * t1913;
t1924 = cos(qJ(3,2));
t1880 = t1924 * pkin(3);
t1848 = t1880 + pkin(2);
t1916 = sin(qJ(2,2));
t2320 = t1848 * t1916;
t1927 = cos(qJ(3,1));
t1881 = t1927 * pkin(3);
t1849 = t1881 + pkin(2);
t1919 = sin(qJ(2,1));
t2319 = t1849 * t1919;
t1904 = t1927 ^ 2;
t1908 = Ifges(3,2) - Ifges(3,1);
t2150 = t1908 * t1904;
t1918 = sin(qJ(3,1));
t2264 = mrSges(3,2) * t1918;
t2318 = t2264 * t2323 - t2150;
t1902 = t1924 ^ 2;
t2151 = t1908 * t1902;
t1915 = sin(qJ(3,2));
t2265 = mrSges(3,2) * t1915;
t2317 = t2265 * t2323 - t2151;
t1900 = t1921 ^ 2;
t2152 = t1908 * t1900;
t1912 = sin(qJ(3,3));
t2266 = mrSges(3,2) * t1912;
t2316 = t2266 * t2323 - t2152;
t1865 = mrSges(3,2) * pkin(7) - Ifges(3,6);
t1866 = pkin(7) * mrSges(3,1) - Ifges(3,5);
t1779 = -t1865 * t1921 - t1866 * t1912;
t1930 = pkin(6) * mrSges(3,2);
t2285 = pkin(2) * mrSges(3,1);
t1834 = -t1930 + t2285;
t1922 = cos(qJ(2,3));
t2030 = -t2260 * pkin(6) - Ifges(3,4) + Ifges(2,5);
t1931 = pkin(6) * mrSges(3,1);
t1933 = pkin(2) * mrSges(3,2);
t2113 = t1931 + t1933;
t1875 = pkin(7) * m(3) + mrSges(3,3);
t1860 = -mrSges(2,2) + t1875;
t2258 = t1860 * pkin(6) + Ifges(2,6);
t2293 = -0.2e1 * Ifges(3,4);
t2315 = -(t1834 * t1912 + t1900 * t2293 + (t1908 * t1912 + t2113) * t1921 - t2030) * t1913 + t1922 * (-t1779 + t2258);
t1780 = -t1865 * t1924 - t1866 * t1915;
t1925 = cos(qJ(2,2));
t2314 = -(t1834 * t1915 + t1902 * t2293 + (t1908 * t1915 + t2113) * t1924 - t2030) * t1916 + t1925 * (-t1780 + t2258);
t1781 = -t1865 * t1927 - t1866 * t1918;
t1928 = cos(qJ(2,1));
t2313 = -(t1834 * t1918 + t1904 * t2293 + (t1908 * t1918 + t2113) * t1927 - t2030) * t1919 + t1928 * (-t1781 + t2258);
t2312 = Ifges(3,1) + Ifges(2,3);
t2311 = t1875 * pkin(2) + Ifges(2,4);
t1901 = t1922 ^ 2;
t1935 = pkin(8) + pkin(7);
t2310 = t1901 * t1935;
t1903 = t1925 ^ 2;
t2309 = t1903 * t1935;
t1905 = t1928 ^ 2;
t2308 = t1905 * t1935;
t1859 = t1935 * t1928;
t1803 = -pkin(2) * t1919 + t1859;
t1906 = sin(pkin(4));
t1974 = t1906 * t1803;
t1858 = t1935 * t1925;
t1802 = -pkin(2) * t1916 + t1858;
t1975 = t1906 * t1802;
t1857 = t1935 * t1922;
t1801 = -pkin(2) * t1913 + t1857;
t1976 = t1906 * t1801;
t2307 = (-t2322 * pkin(6) - (2 * mrSges(2,3))) * pkin(6);
t2263 = Ifges(3,4) * t1912;
t1810 = t2263 + t2285;
t2291 = 0.2e1 * t1921;
t2306 = t1810 * t2291 - t2316;
t2262 = Ifges(3,4) * t1915;
t1811 = t2262 + t2285;
t2290 = 0.2e1 * t1924;
t2305 = t1811 * t2290 - t2317;
t2261 = Ifges(3,4) * t1918;
t1812 = t2261 + t2285;
t2289 = 0.2e1 * t1927;
t2304 = t1812 * t2289 - t2318;
t2080 = t1912 * pkin(6) + pkin(3);
t2272 = t1900 * pkin(3);
t2275 = pkin(2) * t1921;
t2303 = (-t2080 + 0.2e1 * t2272 + t2275) * t1913 - t1921 * t1857;
t2079 = t1915 * pkin(6) + pkin(3);
t2270 = t1902 * pkin(3);
t2274 = pkin(2) * t1924;
t2302 = (-t2079 + 0.2e1 * t2270 + t2274) * t1916 - t1924 * t1858;
t2078 = t1918 * pkin(6) + pkin(3);
t2268 = t1904 * pkin(3);
t2273 = pkin(2) * t1927;
t2301 = (-t2078 + 0.2e1 * t2268 + t2273) * t1919 - t1927 * t1859;
t1856 = t1935 * t1919;
t1884 = pkin(2) * t1928;
t2116 = t1856 + t1884;
t1800 = pkin(1) + t2116;
t1929 = cos(qJ(1,1));
t1878 = t1918 * pkin(3);
t2021 = (t1905 - 0.2e1) * t1878 - pkin(6);
t1920 = sin(qJ(1,1));
t2167 = t1906 * t1920;
t2297 = -t1800 * t1929 + t2021 * t2167;
t1855 = t1935 * t1916;
t1883 = pkin(2) * t1925;
t2117 = t1855 + t1883;
t1799 = pkin(1) + t2117;
t1926 = cos(qJ(1,2));
t1877 = t1915 * pkin(3);
t2022 = (t1903 - 0.2e1) * t1877 - pkin(6);
t1917 = sin(qJ(1,2));
t2169 = t1906 * t1917;
t2296 = -t1799 * t1926 + t2022 * t2169;
t1854 = t1935 * t1913;
t1882 = pkin(2) * t1922;
t2118 = t1854 + t1882;
t1798 = pkin(1) + t2118;
t1923 = cos(qJ(1,3));
t1876 = t1912 * pkin(3);
t2023 = (t1901 - 0.2e1) * t1876 - pkin(6);
t1914 = sin(qJ(1,3));
t2171 = t1906 * t1914;
t2295 = -t1798 * t1923 + t2023 * t2171;
t2294 = -0.2e1 * pkin(1);
t2292 = -0.2e1 * t2113;
t2287 = mrSges(3,3) * pkin(7);
t2286 = pkin(1) * mrSges(3,1);
t1907 = cos(pkin(4));
t2284 = t1907 / 0.2e1;
t2283 = (-Ifges(2,1) - Ifges(3,2));
t2282 = pkin(1) * t1907;
t1885 = pkin(1) * t1913;
t1886 = pkin(1) * t1916;
t1887 = pkin(1) * t1919;
t2281 = pkin(2) * t1912;
t2279 = pkin(2) * t1915;
t2277 = pkin(2) * t1918;
t2271 = t1901 * pkin(2);
t2269 = t1903 * pkin(2);
t2267 = t1905 * pkin(2);
t1864 = t1907 * pkin(2);
t2257 = 0.2e1 * t1931;
t1893 = pkin(2) - t1935;
t1892 = pkin(2) + t1935;
t1909 = legFrame(3,2);
t1869 = sin(t1909);
t1872 = cos(t1909);
t1891 = t1907 ^ 2;
t1973 = t1913 * t1857 - pkin(2) + t2271;
t1951 = -t1973 * t1912 - t2023 * t1921;
t2149 = t1912 * t1914;
t1960 = t1973 * t2149;
t1825 = t1885 + t1935;
t2147 = t1913 * t1922;
t2148 = t1913 * t1914;
t2165 = t1906 * t1923;
t1970 = pkin(6) * t2148 + (pkin(2) * t2147 + t1825 - t2310) * t2165;
t1820 = t1854 + pkin(1);
t1986 = t1820 * t1922 + t2271;
t2128 = t1923 * t1913;
t2166 = t1906 * t1922;
t2014 = t2128 * t2166;
t2055 = t1869 * t2148;
t2029 = pkin(3) * t2055;
t2172 = t1906 * t1913;
t2051 = t1872 * t2172;
t2129 = t1922 * t1923;
t2183 = t1872 * t1913;
t2188 = t1869 * t1914;
t1716 = (t1951 * t1872 + t2303 * t2188) * t1891 + (-(t1869 * t2129 - 0.2e1 * t2051) * t2272 + (t2295 * t1869 - t1872 * t1976) * t1921 + t1906 * (t1869 * t1960 - t2080 * t2183)) * t1907 - t1900 * t2029 + ((t1869 * t2014 + t1872 * t1901 - t1872) * t1876 - t1872 * pkin(6)) * t1921 + (t1970 * t1869 + t1986 * t1872) * t1912 + t2029;
t1850 = t1882 + pkin(1);
t2089 = t1798 * t2281;
t2159 = t1907 * t1921;
t2095 = pkin(1) * t2159;
t2107 = pkin(6) * t2272;
t1755 = 0.1e1 / ((-t1922 * t2107 + (-pkin(6) * t2118 + t1850 * t1876) * t1921 + t2089) * t1906 + (t1857 - t2321) * t2095);
t2256 = t1716 * t1755;
t1910 = legFrame(2,2);
t1870 = sin(t1910);
t1873 = cos(t1910);
t1972 = t1916 * t1858 - pkin(2) + t2269;
t1950 = -t1972 * t1915 - t2022 * t1924;
t2143 = t1915 * t1917;
t1959 = t1972 * t2143;
t1826 = t1886 + t1935;
t2140 = t1916 * t1925;
t2141 = t1916 * t1917;
t2163 = t1906 * t1926;
t1969 = pkin(6) * t2141 + (pkin(2) * t2140 + t1826 - t2309) * t2163;
t1821 = t1855 + pkin(1);
t1985 = t1821 * t1925 + t2269;
t2125 = t1926 * t1916;
t2164 = t1906 * t1925;
t2013 = t2125 * t2164;
t2053 = t1870 * t2141;
t2027 = pkin(3) * t2053;
t2170 = t1906 * t1916;
t2037 = t1873 * t2170;
t2126 = t1925 * t1926;
t2181 = t1873 * t1916;
t2186 = t1870 * t1917;
t1717 = (t1950 * t1873 + t2302 * t2186) * t1891 + (-(t1870 * t2126 - 0.2e1 * t2037) * t2270 + (t2296 * t1870 - t1873 * t1975) * t1924 + t1906 * (t1870 * t1959 - t2079 * t2181)) * t1907 - t1902 * t2027 + ((t1870 * t2013 + t1873 * t1903 - t1873) * t1877 - t1873 * pkin(6)) * t1924 + (t1969 * t1870 + t1985 * t1873) * t1915 + t2027;
t1851 = t1883 + pkin(1);
t2088 = t1799 * t2279;
t2157 = t1907 * t1924;
t2094 = pkin(1) * t2157;
t2106 = pkin(6) * t2270;
t1756 = 0.1e1 / ((-t1925 * t2106 + (-pkin(6) * t2117 + t1851 * t1877) * t1924 + t2088) * t1906 + (t1858 - t2320) * t2094);
t2255 = t1717 * t1756;
t1911 = legFrame(1,2);
t1871 = sin(t1911);
t1874 = cos(t1911);
t1971 = t1919 * t1859 - pkin(2) + t2267;
t1949 = -t1971 * t1918 - t2021 * t1927;
t2136 = t1918 * t1920;
t1958 = t1971 * t2136;
t1827 = t1887 + t1935;
t2133 = t1919 * t1928;
t2134 = t1919 * t1920;
t2161 = t1906 * t1929;
t1968 = pkin(6) * t2134 + (pkin(2) * t2133 + t1827 - t2308) * t2161;
t1822 = t1856 + pkin(1);
t1984 = t1822 * t1928 + t2267;
t2122 = t1929 * t1919;
t2162 = t1906 * t1928;
t2012 = t2122 * t2162;
t2052 = t1871 * t2134;
t2025 = pkin(3) * t2052;
t2168 = t1906 * t1919;
t2035 = t1874 * t2168;
t2123 = t1928 * t1929;
t2178 = t1874 * t1919;
t2185 = t1871 * t1920;
t1718 = (t1949 * t1874 + t2301 * t2185) * t1891 + (-(t1871 * t2123 - 0.2e1 * t2035) * t2268 + (t2297 * t1871 - t1874 * t1974) * t1927 + t1906 * (t1871 * t1958 - t2078 * t2178)) * t1907 - t1904 * t2025 + ((t1871 * t2012 + t1874 * t1905 - t1874) * t1878 - t1874 * pkin(6)) * t1927 + (t1968 * t1871 + t1984 * t1874) * t1918 + t2025;
t1852 = t1884 + pkin(1);
t2087 = t1800 * t2277;
t2155 = t1907 * t1927;
t2093 = pkin(1) * t2155;
t2105 = pkin(6) * t2268;
t1757 = 0.1e1 / ((-t1928 * t2105 + (-pkin(6) * t2116 + t1852 * t1878) * t1927 + t2087) * t1906 + (t1859 - t2319) * t2093);
t2254 = t1718 * t1757;
t1996 = t1913 * t2080;
t2050 = t1872 * t2148;
t2028 = pkin(3) * t2050;
t2056 = t1869 * t2172;
t2182 = t1872 * t1914;
t1719 = (t1951 * t1869 - t2303 * t2182) * t1891 + ((t1872 * t2129 + 0.2e1 * t2056) * t2272 + (-t1869 * t1976 - t2295 * t1872) * t1921 - t1906 * (t1869 * t1996 + t1872 * t1960)) * t1907 + t1900 * t2028 + (-(-t1869 * t1901 + t1872 * t2014 + t1869) * t1876 - t1869 * pkin(6)) * t1921 + (t1986 * t1869 - t1970 * t1872) * t1912 - t2028;
t2253 = t1719 * t1755;
t1995 = t1916 * t2079;
t2049 = t1873 * t2141;
t2026 = pkin(3) * t2049;
t2054 = t1870 * t2170;
t2180 = t1873 * t1917;
t1720 = (t1950 * t1870 - t2302 * t2180) * t1891 + ((t1873 * t2126 + 0.2e1 * t2054) * t2270 + (-t1870 * t1975 - t2296 * t1873) * t1924 - t1906 * (t1870 * t1995 + t1873 * t1959)) * t1907 + t1902 * t2026 + (-(-t1870 * t1903 + t1873 * t2013 + t1870) * t1877 - t1870 * pkin(6)) * t1924 + (t1985 * t1870 - t1969 * t1873) * t1915 - t2026;
t2252 = t1720 * t1756;
t1994 = t1919 * t2078;
t2048 = t1874 * t2134;
t2024 = pkin(3) * t2048;
t2036 = t1871 * t2168;
t2177 = t1874 * t1920;
t1721 = (t1949 * t1871 - t2301 * t2177) * t1891 + ((t1874 * t2123 + 0.2e1 * t2036) * t2268 + (-t1871 * t1974 - t2297 * t1874) * t1927 - t1906 * (t1871 * t1994 + t1874 * t1958)) * t1907 + t1904 * t2024 + (-(-t1871 * t1905 + t1874 * t2012 + t1871) * t1878 - t1871 * pkin(6)) * t1927 + (t1984 * t1871 - t1968 * t1874) * t1918 - t2024;
t2251 = t1721 * t1757;
t1890 = pkin(1) * t1935;
t2208 = (t1879 + t1892) * (t1879 + t1893);
t2065 = t1913 * t2208;
t1773 = t1890 - t2065;
t1841 = t1876 + pkin(6);
t2189 = (t1907 + 0.1e1) * (t1907 - 0.1e1);
t2101 = -0.2e1 * t2189;
t1993 = t1847 * t1901 * t2101;
t2009 = t1841 * t2055;
t2062 = t1847 * t2188;
t2011 = t1841 * t2062;
t2017 = t1914 * t2065;
t1804 = pkin(1) + 0.2e1 * t1854;
t2068 = t1804 * t1847 * t1923;
t2144 = t1914 * t1935;
t2042 = t1907 * t2144;
t2071 = (0.2e1 * t1847 * t2042 + t1923 * t2208) * t1906 * t1901;
t2184 = t1872 * t1825;
t2198 = t1847 * t1872;
t1722 = t1869 * t2071 + (((-t1841 * t2198 - t1869 * t2017) * t1907 + t1869 * t2068) * t1906 + (t1872 * t2065 - t2011) * t1891 + t2011 + t1872 * t1773) * t1922 - t1847 * t2184 + (t1872 * t1993 + ((-t1841 * t2183 - t2062) * t1907 + t1923 * t1869 * t1825) * t1906 + (-t2009 + t2198) * t1891 + t2009) * t1935;
t1807 = t1921 * pkin(6) - t2281;
t2153 = t1907 * t1935;
t1823 = pkin(1) * t2153;
t2205 = t1823 * t1921;
t1758 = 0.1e1 / ((-t1807 * t1847 * t1906 + t2205) * t1922 + (pkin(1) * t1847 * t1912 - t1807 * t1854) * t1906 - t2095 * t2321);
t2250 = t1722 * t1758;
t2207 = (t1880 + t1892) * (t1880 + t1893);
t2064 = t1916 * t2207;
t1774 = t1890 - t2064;
t1843 = t1877 + pkin(6);
t1992 = t1848 * t1903 * t2101;
t2005 = t1843 * t2053;
t2060 = t1848 * t2186;
t2007 = t1843 * t2060;
t2016 = t1917 * t2064;
t1805 = pkin(1) + 0.2e1 * t1855;
t2067 = t1805 * t1848 * t1926;
t2137 = t1917 * t1935;
t2040 = t1907 * t2137;
t2070 = (0.2e1 * t1848 * t2040 + t1926 * t2207) * t1906 * t1903;
t2187 = t1870 * t1826;
t2196 = t1848 * t1873;
t1723 = t1870 * t2070 + (((-t1843 * t2196 - t1870 * t2016) * t1907 + t1870 * t2067) * t1906 + (t1873 * t2064 - t2007) * t1891 + t2007 + t1873 * t1774) * t1925 - t1826 * t2196 + (t1873 * t1992 + ((-t1843 * t2181 - t2060) * t1907 + t1926 * t2187) * t1906 + (-t2005 + t2196) * t1891 + t2005) * t1935;
t1808 = t1924 * pkin(6) - t2279;
t2204 = t1823 * t1924;
t1759 = 0.1e1 / ((-t1808 * t1848 * t1906 + t2204) * t1925 + (pkin(1) * t1848 * t1915 - t1808 * t1855) * t1906 - t2094 * t2320);
t2249 = t1723 * t1759;
t2206 = (t1881 + t1892) * (t1881 + t1893);
t2063 = t1919 * t2206;
t1775 = t1890 - t2063;
t1845 = t1878 + pkin(6);
t1991 = t1849 * t1905 * t2101;
t2001 = t1845 * t2052;
t2058 = t1849 * t2185;
t2003 = t1845 * t2058;
t2015 = t1920 * t2063;
t1806 = pkin(1) + 0.2e1 * t1856;
t2066 = t1806 * t1849 * t1929;
t2130 = t1920 * t1935;
t2038 = t1907 * t2130;
t2069 = (0.2e1 * t1849 * t2038 + t1929 * t2206) * t1906 * t1905;
t2179 = t1874 * t1827;
t2194 = t1849 * t1874;
t1724 = t1871 * t2069 + (((-t1845 * t2194 - t1871 * t2015) * t1907 + t1871 * t2066) * t1906 + (t1874 * t2063 - t2003) * t1891 + t2003 + t1874 * t1775) * t1928 - t1849 * t2179 + (t1874 * t1991 + ((-t1845 * t2178 - t2058) * t1907 + t1929 * t1871 * t1827) * t1906 + (-t2001 + t2194) * t1891 + t2001) * t1935;
t1809 = t1927 * pkin(6) - t2277;
t2203 = t1823 * t1927;
t1760 = 0.1e1 / ((-t1809 * t1849 * t1906 + t2203) * t1928 + (pkin(1) * t1849 * t1918 - t1809 * t1856) * t1906 - t2093 * t2319);
t2248 = t1724 * t1760;
t2008 = t1841 * t2050;
t2061 = t1847 * t2182;
t2010 = t1841 * t2061;
t2199 = t1847 * t1869;
t1725 = -t1872 * t2071 + (((-t1841 * t2199 + t1872 * t2017) * t1907 - t1872 * t2068) * t1906 + (t1869 * t2065 + t2010) * t1891 - t2010 + t1869 * t1773) * t1922 - t1825 * t2199 + (t1869 * t1993 - ((t1841 * t1869 * t1913 - t2061) * t1907 + t1923 * t2184) * t1906 + (t2008 + t2199) * t1891 - t2008) * t1935;
t2247 = t1725 * t1758;
t2004 = t1843 * t2049;
t2059 = t1848 * t2180;
t2006 = t1843 * t2059;
t2197 = t1848 * t1870;
t1726 = -t1873 * t2070 + (((-t1843 * t2197 + t1873 * t2016) * t1907 - t1873 * t2067) * t1906 + (t1870 * t2064 + t2006) * t1891 - t2006 + t1870 * t1774) * t1925 - t1848 * t2187 + (t1870 * t1992 - ((t1843 * t1870 * t1916 - t2059) * t1907 + t1926 * t1873 * t1826) * t1906 + (t2004 + t2197) * t1891 - t2004) * t1935;
t2246 = t1726 * t1759;
t2000 = t1845 * t2048;
t2057 = t1849 * t2177;
t2002 = t1845 * t2057;
t2195 = t1849 * t1871;
t1727 = -t1874 * t2069 + (((-t1845 * t2195 + t1874 * t2015) * t1907 - t1874 * t2066) * t1906 + (t1871 * t2063 + t2002) * t1891 - t2002 + t1871 * t1775) * t1928 - t1827 * t2195 + (t1871 * t1991 - ((t1845 * t1871 * t1919 - t2057) * t1907 + t1929 * t2179) * t1906 + (t2000 + t2195) * t1891 - t2000) * t1935;
t2245 = t1727 * t1760;
t2127 = t1923 * t1935;
t1791 = -pkin(2) * t1914 + t1907 * t2127;
t1794 = -pkin(6) * t1906 * t1935 - pkin(1) * t1864;
t1842 = t1876 - pkin(6);
t1947 = pkin(2) ^ 2;
t2031 = -0.2e1 * pkin(2) * t2153;
t2043 = t1907 * t2128;
t2176 = t1892 * t1893;
t2047 = t1907 * t2176;
t2098 = t1907 * t1885;
t2110 = pkin(1) * t1876;
t2111 = 0.2e1 * t1864;
t2146 = t1914 * t1804;
t1945 = pkin(3) ^ 2;
t2175 = t1900 * t1945;
t2202 = t1841 * t1906;
t2244 = ((t1923 * t2031 - 0.2e1 * t1791 * t1879 + (t2175 + t2176) * t1914) * t1901 + (t2043 * t2175 + ((t1913 * t2111 - t2202) * t1923 + t2146) * t1879 + (-pkin(2) * t2202 + t1913 * t2047) * t1923 + pkin(2) * t2146) * t1922 + t1935 * (t1914 * t1825 + (pkin(3) * t2159 - t1841 * t2172 + t1864) * t1923)) / ((t2205 + (t1842 * t2275 + t1912 * t1947 - t2107) * t1906) * t1922 - t2098 * t2272 + (t1794 * t1913 + t1906 * t2110) * t1921 + t1820 * t1906 * t2281);
t2124 = t1926 * t1935;
t1792 = -pkin(2) * t1917 + t1907 * t2124;
t1844 = t1877 - pkin(6);
t2041 = t1907 * t2125;
t2097 = t1907 * t1886;
t2109 = pkin(1) * t1877;
t2139 = t1917 * t1805;
t2174 = t1902 * t1945;
t2201 = t1843 * t1906;
t2243 = ((t1926 * t2031 - 0.2e1 * t1792 * t1880 + (t2174 + t2176) * t1917) * t1903 + (t2041 * t2174 + ((t1916 * t2111 - t2201) * t1926 + t2139) * t1880 + (-pkin(2) * t2201 + t1916 * t2047) * t1926 + pkin(2) * t2139) * t1925 + t1935 * (t1917 * t1826 + (pkin(3) * t2157 - t1843 * t2170 + t1864) * t1926)) / ((t2204 + (t1844 * t2274 + t1915 * t1947 - t2106) * t1906) * t1925 - t2097 * t2270 + (t1794 * t1916 + t1906 * t2109) * t1924 + t1821 * t1906 * t2279);
t2121 = t1929 * t1935;
t1793 = -pkin(2) * t1920 + t1907 * t2121;
t1846 = t1878 - pkin(6);
t2039 = t1907 * t2122;
t2096 = t1907 * t1887;
t2108 = pkin(1) * t1878;
t2132 = t1920 * t1806;
t2173 = t1904 * t1945;
t2200 = t1845 * t1906;
t2242 = ((t1929 * t2031 - 0.2e1 * t1793 * t1881 + (t2173 + t2176) * t1920) * t1905 + (t2039 * t2173 + ((t1919 * t2111 - t2200) * t1929 + t2132) * t1881 + (-pkin(2) * t2200 + t1919 * t2047) * t1929 + pkin(2) * t2132) * t1928 + t1935 * (t1920 * t1827 + (pkin(3) * t2155 - t1845 * t2168 + t1864) * t1929)) / ((t2203 + (t1846 * t2273 + t1918 * t1947 - t2105) * t1906) * t1928 - t2096 * t2268 + (t1794 * t1919 + t1906 * t2108) * t1927 + t1822 * t1906 * t2277);
t2092 = pkin(3) * t2149;
t2115 = t1891 - 0.1e1 / 0.2e1;
t2145 = t1914 * t1922;
t2158 = t1907 * t1923;
t1734 = ((-t2023 * t2158 + t2092 * t2147) * t1921 + (-t1973 * t2158 + t1914 * (t1850 * t1913 + t1935 - t2310)) * t1912) * t1906 - 0.2e1 * (t2115 * t2128 + t2145 * t2284) * t2272 - (t1798 * t1914 - t1801 * t2158) * t2159 + t1923 * t1996 * t2189;
t2241 = t1734 * t1755;
t2091 = pkin(3) * t2143;
t2138 = t1917 * t1925;
t2156 = t1907 * t1926;
t1735 = ((-t2022 * t2156 + t2091 * t2140) * t1924 + (-t1972 * t2156 + t1917 * (t1851 * t1916 + t1935 - t2309)) * t1915) * t1906 - 0.2e1 * (t2115 * t2125 + t2138 * t2284) * t2270 - (t1799 * t1917 - t1802 * t2156) * t2157 + t1926 * t1995 * t2189;
t2240 = t1735 * t1756;
t2090 = pkin(3) * t2136;
t2131 = t1920 * t1928;
t2154 = t1907 * t1929;
t1736 = ((-t2021 * t2154 + t2090 * t2133) * t1927 + (-t1971 * t2154 + t1920 * (t1852 * t1919 + t1935 - t2308)) * t1918) * t1906 - 0.2e1 * (t2115 * t2122 + t2131 * t2284) * t2268 - (t1800 * t1920 - t1803 * t2154) * t2155 + t1929 * t1994 * t2189;
t2239 = t1736 * t1757;
t1782 = -t1907 * t2148 + t2129;
t1954 = -t1907 * t1876 + t1976;
t1957 = (-t1914 * t1864 + t2127) * t1913 + (pkin(2) * t1923 + t2042) * t1922 + t1906 * t2092;
t1737 = -(t1782 * t1872 + t2056) * t2272 + (t1869 * t1954 - t1872 * t1957) * t1921 - (t1869 * t1907 + t1872 * t2171) * t2281;
t1752 = 0.1e1 / (-(pkin(6) * t2166 + t2098) * t2272 + ((-pkin(6) * t1854 + t1842 * t1882 + t2110) * t1906 + t1801 * t2282) * t1921 + t1906 * t2089);
t2238 = t1737 * t1752;
t1783 = -t1907 * t2141 + t2126;
t1953 = -t1907 * t1877 + t1975;
t1956 = (-t1917 * t1864 + t2124) * t1916 + (pkin(2) * t1926 + t2040) * t1925 + t1906 * t2091;
t1738 = -(t1783 * t1873 + t2054) * t2270 + (t1870 * t1953 - t1873 * t1956) * t1924 - (t1870 * t1907 + t1873 * t2169) * t2279;
t1753 = 0.1e1 / (-(pkin(6) * t2164 + t2097) * t2270 + ((-pkin(6) * t1855 + t1844 * t1883 + t2109) * t1906 + t1802 * t2282) * t1924 + t1906 * t2088);
t2237 = t1738 * t1753;
t1784 = -t1907 * t2134 + t2123;
t1952 = -t1907 * t1878 + t1974;
t1955 = (-t1920 * t1864 + t2121) * t1919 + (pkin(2) * t1929 + t2038) * t1928 + t1906 * t2090;
t1739 = -(t1784 * t1874 + t2036) * t2268 + (t1871 * t1952 - t1874 * t1955) * t1927 - (t1871 * t1907 + t1874 * t2167) * t2277;
t1754 = 0.1e1 / (-(pkin(6) * t2162 + t2096) * t2268 + ((-pkin(6) * t1856 + t1846 * t1884 + t2108) * t1906 + t1803 * t2282) * t1927 + t1906 * t2087);
t2236 = t1739 * t1754;
t1740 = (t1782 * t1869 - t2051) * t2272 + (t1869 * t1957 + t1872 * t1954) * t1921 + (t1869 * t2171 - t1872 * t1907) * t2281;
t2235 = t1740 * t1752;
t1741 = (t1783 * t1870 - t2037) * t2270 + (t1870 * t1956 + t1873 * t1953) * t1924 + (t1870 * t2169 - t1873 * t1907) * t2279;
t2234 = t1741 * t1753;
t1742 = (t1784 * t1871 - t2035) * t2268 + (t1871 * t1955 + t1874 * t1952) * t1927 + (t1871 * t2167 - t1874 * t1907) * t2277;
t2233 = t1742 * t1754;
t1938 = m(3) * t1947;
t1895 = 0.2e1 * t2287;
t1937 = m(3) * pkin(7) ^ 2;
t2114 = t1895 + t1937;
t1990 = t1938 + t2114 + t2312;
t1764 = t1990 + t2306;
t1999 = -t2260 + t2266;
t1743 = t2315 * t1906 + ((t1860 * t1913 + (mrSges(3,1) * t1921 - t1999) * t1922) * pkin(1) + t1764) * t1907;
t2232 = t1743 * t1752;
t2231 = t1743 * t1755;
t1765 = t1990 + t2305;
t1998 = -t2260 + t2265;
t1744 = t2314 * t1906 + ((t1860 * t1916 + (mrSges(3,1) * t1924 - t1998) * t1925) * pkin(1) + t1765) * t1907;
t2230 = t1744 * t1753;
t2229 = t1744 * t1756;
t1766 = t1990 + t2304;
t1997 = -t2260 + t2264;
t1745 = t2313 * t1906 + ((t1860 * t1919 + (mrSges(3,1) * t1927 - t1997) * t1928) * pkin(1) + t1766) * t1907;
t2228 = t1745 * t1754;
t2227 = t1745 * t1757;
t1835 = -t1930 - t2285;
t1836 = -t1931 + t1933;
t1934 = pkin(1) * mrSges(3,2);
t2083 = pkin(7) + t1885;
t2190 = t1866 * t1913;
t1749 = ((t1835 * t1922 - t2190 - t2286) * t1921 + (t1836 * t1922 + t1865 * t1913 + t1934) * t1912 - t1922 * Ifges(3,3)) * t1906 - t1907 * ((t2083 * mrSges(3,2) - Ifges(3,6)) * t1921 + t1912 * (t2083 * mrSges(3,1) - Ifges(3,5)));
t2226 = t1749 * t1752;
t2082 = pkin(7) + t1886;
t2142 = t1916 * t1866;
t1750 = ((t1835 * t1925 - t2142 - t2286) * t1924 + (t1836 * t1925 + t1916 * t1865 + t1934) * t1915 - t1925 * Ifges(3,3)) * t1906 - t1907 * ((t2082 * mrSges(3,2) - Ifges(3,6)) * t1924 + t1915 * (t2082 * mrSges(3,1) - Ifges(3,5)));
t2225 = t1750 * t1753;
t2081 = pkin(7) + t1887;
t2135 = t1919 * t1866;
t1751 = ((t1835 * t1928 - t2135 - t2286) * t1927 + (t1836 * t1928 + t1919 * t1865 + t1934) * t1918 - t1928 * Ifges(3,3)) * t1906 - t1907 * ((t2081 * mrSges(3,2) - Ifges(3,6)) * t1927 + t1918 * (t2081 * mrSges(3,1) - Ifges(3,5)));
t2224 = t1751 * t1754;
t2046 = t1912 * t2165;
t2223 = t1752 * ((t2043 + t2145) * t2272 + (-pkin(3) * t2046 - t1791 * t1922 + (pkin(2) * t2158 + t2144) * t1913) * t1921 - pkin(2) * t2046);
t2045 = t1915 * t2163;
t2222 = t1753 * ((t2041 + t2138) * t2270 + (-pkin(3) * t2045 - t1792 * t1925 + (pkin(2) * t2156 + t2137) * t1916) * t1924 - pkin(2) * t2045);
t2044 = t1918 * t2161;
t2221 = t1754 * ((t2039 + t2131) * t2268 + (-pkin(3) * t2044 - t1793 * t1928 + (pkin(2) * t2154 + t2130) * t1919) * t1927 - pkin(2) * t2044);
t2220 = t1755 * t1764;
t2219 = t1755 * t1779;
t2218 = t1756 * t1765;
t2217 = t1756 * t1780;
t2216 = t1757 * t1766;
t2215 = t1757 * t1781;
t1946 = 0.1e1 / pkin(3);
t2214 = t1758 * t1946;
t2213 = t1759 * t1946;
t2212 = t1760 * t1946;
t2193 = t1865 * t1912;
t2192 = t1865 * t1915;
t2191 = t1865 * t1918;
t2160 = t1906 * t1946;
t2119 = 0.2e1 * t2311;
t2112 = 0.2e1 * t1860 * pkin(1);
t2100 = 0.2e1 * t1906 * t1907;
t2099 = t1938 + t2283;
t2086 = Ifges(3,3) * t2214;
t2085 = Ifges(3,3) * t2213;
t2084 = Ifges(3,3) * t2212;
t2077 = t1749 * t2214;
t2076 = t1750 * t2213;
t2075 = t1751 * t2212;
t2074 = t1779 * t2214;
t2073 = t1780 * t2213;
t2072 = t1781 * t2212;
t2020 = t2160 * t2244;
t2019 = t2160 * t2243;
t2018 = t2160 * t2242;
t1980 = Ifges(2,2) + Ifges(3,3) - t1937 + t2099;
t1979 = t1895 - t1980;
t1978 = t2099 + t2307 + t2312;
t1977 = -0.2e1 * t2287 + t1980;
t1964 = t2322 * pkin(1) ^ 2 + Ifges(1,3) + t2114 - t2283 - t2307;
t1894 = 0.2e1 * t2286;
t1730 = -t2150 + (t1977 + t2304) * t1905 + (t1930 - t2261) * t2289 + ((t1979 + t2318) * t1905 + 0.2e1 * (-t1866 * t1927 + t2191 - t2311) * t2133 + t1918 * t2292 + 0.2e1 * t2150 + (-t1812 * t1905 + t1834 + 0.2e1 * t2261) * t2289 + t1978) * t1891 + ((t1894 + 0.2e1 * t2135) * t1927 + (t2119 - 0.2e1 * t2191) * t1919 + t1997 * t2294) * t1928 + t1964 + t1919 * t2112 + t1918 * t2257 + t2313 * t2100;
t1729 = (t1930 - t2262) * t2290 + (t1977 + t2305) * t1903 + ((t1979 + t2317) * t1903 + 0.2e1 * (-t1866 * t1924 + t2192 - t2311) * t2140 + t1915 * t2292 + 0.2e1 * t2151 + (-t1811 * t1903 + t1834 + 0.2e1 * t2262) * t2290 + t1978) * t1891 + t1964 + ((t1894 + 0.2e1 * t2142) * t1924 + (t2119 - 0.2e1 * t2192) * t1916 + t1998 * t2294) * t1925 - t2151 + t1915 * t2257 + t1916 * t2112 + t2314 * t2100;
t1728 = (t1930 - t2263) * t2291 + (t1977 + t2306) * t1901 + t1913 * t2112 + t1912 * t2257 + t1964 + ((t1979 + t2316) * t1901 + 0.2e1 * (-t1866 * t1921 + t2193 - t2311) * t2147 + t1912 * t2292 + 0.2e1 * t2152 + (-t1810 * t1901 + t1834 + 0.2e1 * t2263) * t2291 + t1978) * t1891 + ((t1894 + 0.2e1 * t2190) * t1921 + (t2119 - 0.2e1 * t2193) * t1913 + t1999 * t2294) * t1922 - t2152 + t2315 * t2100;
t1715 = Ifges(3,3) * t2018 + t1736 * t2215 + t1751 * t2221;
t1714 = Ifges(3,3) * t2019 + t1735 * t2217 + t1750 * t2222;
t1713 = Ifges(3,3) * t2020 + t1734 * t2219 + t1749 * t2223;
t1712 = t1736 * t2216 + t1745 * t2221 + t1781 * t2018;
t1711 = t1735 * t2218 + t1744 * t2222 + t1780 * t2019;
t1710 = t1734 * t2220 + t1743 * t2223 + t1779 * t2020;
t1709 = t1718 * t2215 + t1724 * t2084 + t1742 * t2224;
t1708 = t1717 * t2217 + t1723 * t2085 + t1741 * t2225;
t1707 = t1716 * t2219 + t1722 * t2086 + t1740 * t2226;
t1706 = t1721 * t2215 + t1727 * t2084 + t1739 * t2224;
t1705 = t1720 * t2217 + t1726 * t2085 + t1738 * t2225;
t1704 = t1719 * t2219 + t1725 * t2086 + t1737 * t2226;
t1703 = t1730 * t2221 + t1736 * t2227 + t1751 * t2018;
t1702 = t1729 * t2222 + t1735 * t2229 + t1750 * t2019;
t1701 = t1728 * t2223 + t1734 * t2231 + t1749 * t2020;
t1700 = t1718 * t2216 + t1724 * t2072 + t1742 * t2228;
t1699 = t1717 * t2218 + t1723 * t2073 + t1741 * t2230;
t1698 = t1716 * t2220 + t1722 * t2074 + t1740 * t2232;
t1697 = t1721 * t2216 + t1727 * t2072 + t1739 * t2228;
t1696 = t1720 * t2218 + t1726 * t2073 + t1738 * t2230;
t1695 = t1719 * t2220 + t1725 * t2074 + t1737 * t2232;
t1694 = t1718 * t2227 + t1724 * t2075 + t1730 * t2233;
t1693 = t1717 * t2229 + t1723 * t2076 + t1729 * t2234;
t1692 = t1716 * t2231 + t1722 * t2077 + t1728 * t2235;
t1691 = t1721 * t2227 + t1727 * t2075 + t1730 * t2236;
t1690 = t1720 * t2229 + t1726 * t2076 + t1729 * t2237;
t1689 = t1719 * t2231 + t1725 * t2077 + t1728 * t2238;
t1 = [t1689 * t2238 + t1690 * t2237 + t1691 * t2236 + t1695 * t2253 + t1696 * t2252 + t1697 * t2251 + m(4) + (t1704 * t2247 + t1705 * t2246 + t1706 * t2245) * t1946, t1689 * t2235 + t1690 * t2234 + t1691 * t2233 + t1695 * t2256 + t1696 * t2255 + t1697 * t2254 + (t1704 * t2250 + t1705 * t2249 + t1706 * t2248) * t1946, t1689 * t2223 + t1690 * t2222 + t1691 * t2221 + t1695 * t2241 + t1696 * t2240 + t1697 * t2239 + (t1704 * t2244 + t1705 * t2243 + t1706 * t2242) * t2160; t1692 * t2238 + t1693 * t2237 + t1694 * t2236 + t1698 * t2253 + t1699 * t2252 + t1700 * t2251 + (t1707 * t2247 + t1708 * t2246 + t1709 * t2245) * t1946, t1692 * t2235 + t1693 * t2234 + t1694 * t2233 + t1698 * t2256 + t1699 * t2255 + t1700 * t2254 + m(4) + (t1707 * t2250 + t1708 * t2249 + t1709 * t2248) * t1946, t1692 * t2223 + t1693 * t2222 + t1694 * t2221 + t1698 * t2241 + t1699 * t2240 + t1700 * t2239 + (t1707 * t2244 + t1708 * t2243 + t1709 * t2242) * t2160; t1701 * t2238 + t1702 * t2237 + t1703 * t2236 + t1710 * t2253 + t1711 * t2252 + t1712 * t2251 + (t1713 * t2247 + t1714 * t2246 + t1715 * t2245) * t1946, t1701 * t2235 + t1702 * t2234 + t1703 * t2233 + t1710 * t2256 + t1711 * t2255 + t1712 * t2254 + (t1713 * t2250 + t1714 * t2249 + t1715 * t2248) * t1946, t1701 * t2223 + t1702 * t2222 + t1703 * t2221 + t1710 * t2241 + t1711 * t2240 + t1712 * t2239 + m(4) + (t1713 * t2244 + t1714 * t2243 + t1715 * t2242) * t2160;];
MX  = t1;
