% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRRRR7V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3x18]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 09:03
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(5,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin: pkin has to be [5x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 08:56:17
% EndTime: 2020-08-07 08:58:17
% DurationCPUTime: 126.30s
% Computational Cost: add. (1402026->1248), mult. (3654879->2153), div. (37308->31), fcn. (2279457->159), ass. (0->905)
t2266 = 0.1e1 / pkin(1);
t2217 = sin(qJ(3,1));
t2168 = 0.1e1 / t2217;
t2796 = legFrame(1,2);
t2597 = sin(t2796);
t2800 = xDP(2);
t2377 = t2597 * t2800;
t2799 = sin(qJ(1,1));
t2048 = t2799 * t2377;
t2229 = xDP(1);
t2129 = cos(t2796);
t2571 = t2129 * t2799;
t2459 = t2229 * t2571;
t2227 = cos(qJ(1,1));
t2228 = xDP(3);
t2643 = t2227 * t2228;
t1964 = t2459 / 0.2e1 - t2048 / 0.2e1 + t2643;
t2059 = t2228 * t2799;
t2287 = -t2129 * t2229 + t2377;
t2859 = t2287 * t2227;
t1977 = t2059 + t2859;
t2225 = cos(qJ(3,1));
t2755 = t2225 * pkin(2);
t2065 = pkin(1) + t2755;
t2218 = sin(qJ(2,1));
t2226 = cos(qJ(2,1));
t2655 = t2217 * t2226;
t2670 = (t2225 + 0.1e1) * (t2225 - 0.1e1);
t1988 = pkin(2) * t2218 * t2670 + t2065 * t2655;
t2026 = t2129 * t2800 + t2597 * t2229;
t2683 = t2026 * t2218;
t2000 = pkin(1) * t2683;
t2006 = pkin(2) * t2026;
t2009 = pkin(1) * t2026;
t2230 = -pkin(5) - pkin(4);
t2068 = t2799 * t2230;
t2132 = t2225 * pkin(1);
t2261 = pkin(2) ^ 2;
t2265 = pkin(1) ^ 2;
t2142 = t2261 + t2265;
t2254 = 0.2e1 * qJ(3,1);
t2151 = sin(t2254);
t2180 = t2225 ^ 2;
t2179 = t2225 * t2180;
t2182 = t2226 ^ 2;
t2181 = t2226 * t2182;
t2276 = 0.2e1 * t2859;
t2133 = t2227 * pkin(2);
t2455 = t2217 * t2068;
t2308 = t2218 * t2455 + t2133;
t2656 = t2217 * t2218;
t2333 = pkin(2) * t2656 - t2065 * t2226;
t2341 = t2068 * t2287 + t2000;
t2515 = t2217 * t2859;
t2627 = -pkin(1) * t2515 + t2006;
t2769 = pkin(2) * t2180;
t2342 = -0.2e1 * t2026 * t2769 + t2627;
t2258 = 0.2e1 * qJ(2,1);
t2161 = cos(t2258);
t2366 = t1988 * t2161 * t2059;
t2645 = t2225 * t2217;
t2502 = t2218 * t2645;
t2405 = t2226 * t2502;
t2152 = sin(t2258);
t2456 = t2152 * t2059;
t1975 = -t2048 + t2459 + t2643;
t2697 = t1975 * t2230;
t2594 = pkin(1) * t2697;
t2477 = t2218 * t2594;
t2766 = pkin(2) * t2217;
t2614 = 0.2e1 * t2766;
t2485 = t2227 * t2614;
t2642 = t2228 * t2230;
t2499 = t2227 * t2642;
t2653 = t2218 * t2227;
t2514 = t2287 * t2653;
t2641 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t2598 = 0.2e1 * t2641;
t2654 = t2218 * t2226;
t2599 = 0.2e1 * t2654;
t2609 = pkin(1) * t2766;
t2623 = 0.4e1 * t2179 - 0.5e1 * t2225;
t2638 = t2261 * t2026;
t2652 = t2218 * t2230;
t2712 = (-pkin(1) * t2859 + t2026 * t2614) * t2225;
t2754 = t2226 * pkin(2);
t2159 = cos(t2254);
t2772 = pkin(2) * t2159;
t2778 = pkin(1) * t2228;
t2779 = pkin(1) * t2217;
t2782 = 0.2e1 * t2180 - 0.1e1;
t2801 = pkin(1) * pkin(2);
t2807 = 0.4e1 * t2180;
t2822 = 0.2e1 * pkin(2);
t2823 = -0.2e1 * pkin(2);
t2824 = -0.3e1 * pkin(2);
t2212 = -t2261 / 0.2e1;
t2125 = t2212 + t2265;
t2853 = -0.2e1 * t2180 * t2641 + 0.2e1 * t2125;
t2855 = 0.2e1 * t2230;
t1916 = -(t2366 + ((-t2515 * t2823 + t2009) * t2225 - t2342) * t2181 + (-t2341 * t2217 + (pkin(2) * t2782 * t2859 - t2712) * t2218) * t2182 + ((-t2009 - (t2218 * t2068 + t2485) * t2287) * t2225 + t2342) * t2226 - t2514 * t2769 + t2502 * t2006 + (pkin(2) * t2653 + t2455) * t2287) * t2772 + (t1988 * t2456 + ((t2026 * t2779 + t2712) * t2182 + (-t2627 * t2218 + t2341 * t2225) * t2226 - t2308 * t2287) * t2226 + ((t2180 * t2599 - t2645) * t2026 - (t2782 * t2182 - t2180 - 0.2e1 * t2405) * t2859) * t2754) * pkin(2) * t2151 + t2333 * pkin(1) * t2456 * t2670 - t2366 * t2132 + (-t2225 * t2515 * t2598 + t2026 * t2853 + (-(t2807 - 0.3e1) * t2515 - t2623 * t2026) * t2801) * t2181 + ((((t2000 - t2499) * t2807 - 0.3e1 * t2000 + t1964 * t2855) * t2217 - t2623 * pkin(1) * t2514) * pkin(2) + 0.2e1 * (t2641 * t2683 - t2594) * t2645 + t2514 * t2853) * t2182 + ((-0.2e1 * t2218 * t2499 + t2009) * t2179 * t2822 + (-(t2059 - t2276) * t2609 - 0.2e1 * t2477 - 0.2e1 * t2638) * t2180 + ((-t2142 * t2059 - t2261 * t2276) * t2217 + (-0.4e1 / 0.3e1 * (t2459 / 0.4e1 - t2048 / 0.4e1 + t2643) * t2652 + t2009) * t2824) * t2225 - (t2059 + 0.3e1 * t2859) * t2609 + 0.2e1 * t2477 + t2638) * t2226 - pkin(2) * ((-t2180 * t2643 + t1964) * t2217 * t2855 + ((t1977 * t2180 - t2026 * t2645 - t1977) * pkin(2) + (t2179 - t2225) * t2778 * t2799) * t2218);
t2070 = pkin(1) * t2755;
t2235 = -0.3e1 / 0.2e1 * pkin(1);
t2789 = t2261 / 0.2e1;
t1937 = (t2065 * t2654 + (t2182 - 0.1e1) * t2766) * t2772 / 0.2e1 - t2333 * t2151 * t2754 / 0.2e1 + pkin(2) * (pkin(1) * t2180 - t2755 / 0.2e1 + t2235) * t2654 + ((t2070 + t2125) * t2182 + t2789) * t2217;
t2730 = t1916 / t1937;
t2550 = t2168 * t2730;
t2397 = t2550 / 0.2e1;
t1907 = t2266 * t2397;
t1982 = t2227 * t2230 - t2333 * t2799;
t2589 = pkin(2) * t2655;
t2015 = t2065 * t2218 + t2589;
t2317 = t2227 * t2333 + t2068;
t1922 = (-t2015 * t2800 + t2229 * t2317) * t2129 + (-t2015 * t2229 - t2317 * t2800) * t2597 + t2228 * t1982;
t2262 = 0.1e1 / pkin(2);
t2636 = t2262 * t2266;
t2429 = t1922 * t2168 * t2636;
t1895 = t1907 + t2429;
t1886 = t2261 * t1895;
t1889 = t1907 + t2429 / 0.2e1;
t1910 = pkin(1) * t2397;
t1919 = 0.2e1 / 0.3e1 * t2429;
t2252 = 0.4e1 * qJ(3,1);
t2201 = t2252 + t2258;
t2090 = sin(t2201);
t2253 = 0.3e1 * qJ(3,1);
t2202 = t2253 + t2258;
t2091 = sin(t2202);
t2205 = t2258 + t2254;
t2093 = sin(t2205);
t2206 = t2258 + qJ(3,1);
t2094 = sin(t2206);
t2255 = -0.2e1 * qJ(3,1);
t2207 = t2258 + t2255;
t2095 = sin(t2207);
t2257 = 0.3e1 * qJ(2,1);
t2115 = cos(t2252 + t2257);
t2116 = cos(t2253 + qJ(2,1));
t2203 = t2254 + qJ(2,1);
t2117 = cos(t2203);
t2118 = cos(t2257 + t2253);
t2119 = cos(t2257 + t2254);
t2120 = cos(t2257 + qJ(3,1));
t2208 = qJ(2,1) + qJ(3,1);
t2121 = cos(t2208);
t2209 = qJ(2,1) - qJ(3,1);
t2122 = cos(t2209);
t2788 = -t2265 / 0.2e1;
t2124 = t2788 + t2261;
t2143 = -0.3e1 * t2261 + t2265;
t2150 = sin(t2253);
t2204 = -qJ(3,1) + t2258;
t2256 = 0.4e1 * qJ(2,1);
t2260 = pkin(2) * t2261;
t2264 = pkin(1) * t2265;
t2267 = 0.1e1 / pkin(1) ^ 2;
t2045 = pkin(1) * t2226 + pkin(2) * t2121;
t2041 = 0.1e1 / t2045;
t2522 = t2041 * t2697;
t2390 = t2522 * t2801;
t2493 = -t2730 / 0.2e1;
t2398 = t2168 * t2493;
t2765 = pkin(2) * t2265;
t2612 = 0.3e1 * t2765;
t2483 = -t2260 + t2612;
t2484 = t2641 * t2823;
t2488 = t2641 / 0.2e1;
t2492 = -t2730 / 0.4e1;
t2498 = t2230 * t2641;
t2637 = t2261 * t2266;
t2505 = t2168 * t2637;
t2699 = t1975 * t2041;
t2520 = t2266 * t2699;
t2521 = t2261 * t2699;
t2633 = t2265 * sin(t2204);
t2580 = pkin(2) * t2633;
t2606 = 0.3e1 * t2261;
t2613 = -0.3e1 * t2765;
t2210 = t2230 ^ 2;
t2069 = t2210 + t2261;
t2617 = -0.4e1 * pkin(2) * t2069;
t2622 = 0.2e1 / 0.3e1 * t2261 + t2265;
t2618 = 0.6e1 * pkin(2) * (0.2e1 / 0.3e1 * t2210 + t2622);
t2619 = 0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t2210 + t2622);
t2620 = 0.5e1 * pkin(1) * t2261;
t2630 = t1886 + t1910;
t2727 = t1922 * t2262;
t2786 = t2266 / 0.3e1;
t2791 = -t2226 / 0.4e1;
t2626 = 0.4e1 / 0.3e1 * t2210 + t2265;
t2854 = 0.2e1 * t2261;
t2812 = 0.3e1 * t2854 + 0.3e1 * t2626;
t2813 = 0.9e1 * t2261 + 0.3e1 * t2626;
t2814 = -0.9e1 * t2261 - 0.2e1 * t2265 - 0.4e1 * t2210;
t2821 = 0.4e1 * t1889;
t2825 = -0.2e1 * pkin(1);
t2826 = t2226 + t2119;
t2829 = cos(qJ(2,1) + t2255) + cos(t2257);
t2830 = t2115 + t2117;
t2847 = 0.4e1 * pkin(2);
t1839 = (((t2830 * t1895 * t2854 + (-t2829 * t2550 + ((t1907 - t2429 / 0.2e1) * t2121 + (t2118 - t2120) * t1889) * t2847) * pkin(1)) * t2230 + (t2483 * sin(t2256 + t2253) + sin(qJ(3,1) + t2256) * t2613 + t2260 * sin(t2256 + 0.5e1 * qJ(3,1)) + t2150 * t2612 - 0.6e1 * t2580 + t2091 * t2618 + t2094 * t2617 + t2217 * t2619 + (-sin(t2256) - t2095) * t2264 + (t2143 * sin(t2256 + t2254) + t2152 * t2814 + t2151 * t2813 + t2093 * t2812 + (sin(t2256 + t2252) + t2090) * t2606) * pkin(1)) * t2699 + ((-pkin(2) * t2122 * t2730 + t1922 * t2116) * t2168 + t2826 * (t1910 - t1886)) * t2855) * t2520 / 0.4e1 + ((-(t1910 + (0.4e1 * t2727 + 0.2e1 * t2730) * t2505) * pkin(1) * t2093 + t2630 * t2091 * t2823 + t2580 * t2821 + t2265 * t2095 * t2397 + t2261 * t2090 * t2398 + t1895 * t2094 * t2484 + (t1910 + (0.3e1 / 0.2e1 * t2730 + 0.2e1 * t2727) * t2505) * t2151 * t2825 + (t1907 + 0.4e1 / 0.5e1 * t2429) * t2152 * t2620 - t2150 * t2550 * t2801 - 0.6e1 * ((t2550 * t2786 + t1919) * t2261 + t2265 * (t1907 + t1919)) * t2766 - t2830 * t2230 * t2521 + t2829 * t2265 * t2522 - 0.2e1 * (t2118 + t2121) * t2390 + 0.2e1 * (t2122 + t2120) * t2390 - t2826 * t2498 * t2699) * t2492 + 0.2e1 * ((-t2633 / 0.2e1 + t2091 * t2789 + t2094 * t2488 + t2142 * t2217 + (t2093 + t2151 - t2152) * t2801) * t1895 + ((-t2119 / 0.4e1 + t2115 / 0.4e1 + t2117 / 0.4e1 + t2791) * pkin(2) + (t2118 / 0.4e1 - t2120 / 0.4e1 + t2116 / 0.4e1 - t2121 / 0.4e1) * pkin(1)) * t2522) * t1922) * t2168 * t2267) / (t2124 * cos(t2205) + cos(t2207) * t2788 + cos(t2201) * t2212 + t2125 * t2161 - t2142 * t2159 + t2070 + (-cos(t2204) - cos(t2202) + 0.2e1 * cos(t2206) - cos(t2253)) * t2801 + t2142);
t2036 = t2218 * t2225 + t2655;
t2523 = t2218 * t2699;
t2468 = pkin(1) * t2523;
t1865 = -t2230 * t2468 + (0.2e1 * t1889 * t2132 - t2036 * t2522) * pkin(2) + t2630;
t2524 = t2182 * t2699;
t2621 = t2265 - t2261;
t2790 = -t2230 / 0.2e1;
t2360 = (-(t2180 * t2854 + 0.2e1 * t2070 + t2621) * t2524 - 0.2e1 * (t1895 * t2790 - t2065 * t2523) * t2589 + t2180 * t2521 - t2069 * t2699 + (t1895 * t2755 + t2397) * t2652) * t2168 * t2520;
t2169 = 0.1e1 / t2217 ^ 2;
t2667 = t2169 * t2267;
t2096 = sin(t2208);
t2733 = (-t2096 * t2522 + t1895 * (t2132 + pkin(2))) * t1922;
t1827 = (t2360 + (t1865 * t2493 - t2733) * t2667) * t2262 + t1839;
t1892 = t1895 ^ 2;
t2042 = 0.1e1 / t2045 ^ 2;
t2698 = t1975 * t2042;
t2775 = pkin(2) * t2096;
t2787 = -t2266 / 0.2e1;
t1862 = (-t1895 * t2775 + t2522 + (-t2096 * t1922 * t2266 + (-t2218 / 0.2e1 + (pkin(1) * t2218 + t2775) * t2787) * t2730) * t2168) * t2698;
t2736 = t1862 * t2218;
t2762 = pkin(4) * t2218;
t2803 = pkin(4) / 0.2e1;
t2864 = pkin(1) * t2524 * t2821 + t1892 * t2762 + 0.2e1 * t2398 * t2699 - 0.2e1 * (pkin(1) * t2736 + t1827 * t2803) * t2226;
t2215 = sin(qJ(3,2));
t2165 = 0.1e1 / t2215;
t2795 = legFrame(2,2);
t2596 = sin(t2795);
t2376 = t2596 * t2800;
t2798 = sin(qJ(1,2));
t2047 = t2798 * t2376;
t2128 = cos(t2795);
t2572 = t2128 * t2798;
t2460 = t2229 * t2572;
t2224 = cos(qJ(1,2));
t2646 = t2224 * t2228;
t1963 = t2460 / 0.2e1 - t2047 / 0.2e1 + t2646;
t2058 = t2228 * t2798;
t2286 = -t2128 * t2229 + t2376;
t2860 = t2286 * t2224;
t1979 = t2058 + t2860;
t2222 = cos(qJ(3,2));
t2757 = t2222 * pkin(2);
t2063 = pkin(1) + t2757;
t2216 = sin(qJ(2,2));
t2223 = cos(qJ(2,2));
t2660 = t2215 * t2223;
t2671 = (t2222 + 0.1e1) * (t2222 - 0.1e1);
t1987 = pkin(2) * t2216 * t2671 + t2063 * t2660;
t2024 = t2128 * t2800 + t2596 * t2229;
t2685 = t2024 * t2216;
t1999 = pkin(1) * t2685;
t2005 = pkin(2) * t2024;
t2008 = pkin(1) * t2024;
t2067 = t2798 * t2230;
t2135 = pkin(1) * t2222;
t2246 = 0.2e1 * qJ(3,2);
t2148 = sin(t2246);
t2176 = t2222 ^ 2;
t2175 = t2222 * t2176;
t2178 = t2223 ^ 2;
t2177 = t2223 * t2178;
t2277 = 0.2e1 * t2860;
t2131 = t2224 * pkin(2);
t2454 = t2215 * t2067;
t2307 = t2216 * t2454 + t2131;
t2661 = t2215 * t2216;
t2334 = pkin(2) * t2661 - t2063 * t2223;
t2340 = t2067 * t2286 + t1999;
t2517 = t2215 * t2860;
t2628 = -pkin(1) * t2517 + t2005;
t2770 = pkin(2) * t2176;
t2343 = -0.2e1 * t2024 * t2770 + t2628;
t2250 = 0.2e1 * qJ(2,2);
t2158 = cos(t2250);
t2367 = t1987 * t2158 * t2058;
t2648 = t2222 * t2215;
t2503 = t2216 * t2648;
t2406 = t2223 * t2503;
t2149 = sin(t2250);
t2457 = t2149 * t2058;
t1973 = -t2047 + t2460 + t2646;
t2700 = t1973 * t2230;
t2592 = pkin(1) * t2700;
t2478 = t2216 * t2592;
t2767 = pkin(2) * t2215;
t2615 = 0.2e1 * t2767;
t2486 = t2224 * t2615;
t2500 = t2224 * t2642;
t2658 = t2216 * t2224;
t2516 = t2286 * t2658;
t2659 = t2216 * t2223;
t2600 = 0.2e1 * t2659;
t2610 = pkin(1) * t2767;
t2624 = 0.4e1 * t2175 - 0.5e1 * t2222;
t2639 = t2261 * t2024;
t2657 = t2216 * t2230;
t2713 = (-pkin(1) * t2860 + t2024 * t2615) * t2222;
t2756 = t2223 * pkin(2);
t2156 = cos(t2246);
t2773 = pkin(2) * t2156;
t2780 = pkin(1) * t2215;
t2783 = 0.2e1 * t2176 - 0.1e1;
t2809 = 0.4e1 * t2176;
t2852 = -0.2e1 * t2176 * t2641 + 0.2e1 * t2125;
t1915 = -(t2367 + ((-t2517 * t2823 + t2008) * t2222 - t2343) * t2177 + (-t2340 * t2215 + (pkin(2) * t2783 * t2860 - t2713) * t2216) * t2178 + ((-t2008 - (t2216 * t2067 + t2486) * t2286) * t2222 + t2343) * t2223 - t2516 * t2770 + t2503 * t2005 + (pkin(2) * t2658 + t2454) * t2286) * t2773 + (t1987 * t2457 + ((t2024 * t2780 + t2713) * t2178 + (-t2628 * t2216 + t2340 * t2222) * t2223 - t2307 * t2286) * t2223 + ((t2176 * t2600 - t2648) * t2024 - (t2783 * t2178 - t2176 - 0.2e1 * t2406) * t2860) * t2756) * pkin(2) * t2148 + t2334 * pkin(1) * t2457 * t2671 - t2367 * t2135 + (-t2222 * t2517 * t2598 + t2024 * t2852 + (-(t2809 - 0.3e1) * t2517 - t2624 * t2024) * t2801) * t2177 + ((((t1999 - t2500) * t2809 - 0.3e1 * t1999 + t1963 * t2855) * t2215 - t2624 * pkin(1) * t2516) * pkin(2) + 0.2e1 * (t2641 * t2685 - t2592) * t2648 + t2516 * t2852) * t2178 + ((-0.2e1 * t2216 * t2500 + t2008) * t2175 * t2822 + (-(t2058 - t2277) * t2610 - 0.2e1 * t2478 - 0.2e1 * t2639) * t2176 + ((-t2142 * t2058 - t2261 * t2277) * t2215 + (-0.4e1 / 0.3e1 * (t2460 / 0.4e1 - t2047 / 0.4e1 + t2646) * t2657 + t2008) * t2824) * t2222 - (t2058 + 0.3e1 * t2860) * t2610 + 0.2e1 * t2478 + t2639) * t2223 - pkin(2) * ((-t2176 * t2646 + t1963) * t2215 * t2855 + ((t1979 * t2176 - t2024 * t2648 - t1979) * pkin(2) + (t2175 - t2222) * t2778 * t2798) * t2216);
t2072 = pkin(1) * t2757;
t1936 = (t2063 * t2659 + (t2178 - 0.1e1) * t2767) * t2773 / 0.2e1 - t2334 * t2148 * t2756 / 0.2e1 + pkin(2) * (t2176 * pkin(1) - t2757 / 0.2e1 + t2235) * t2659 + ((t2072 + t2125) * t2178 + t2789) * t2215;
t2731 = t1915 / t1936;
t2551 = t2165 * t2731;
t2399 = t2551 / 0.2e1;
t1906 = t2266 * t2399;
t1981 = t2224 * t2230 - t2334 * t2798;
t2590 = pkin(2) * t2660;
t2014 = t2063 * t2216 + t2590;
t2316 = t2224 * t2334 + t2067;
t1921 = (-t2014 * t2800 + t2229 * t2316) * t2128 + (-t2014 * t2229 - t2316 * t2800) * t2596 + t2228 * t1981;
t2430 = t1921 * t2165 * t2636;
t1894 = t1906 + t2430;
t1885 = t2261 * t1894;
t1888 = t1906 + t2430 / 0.2e1;
t1909 = pkin(1) * t2399;
t1918 = 0.2e1 / 0.3e1 * t2430;
t2192 = t2246 + t2250;
t2083 = sin(t2192);
t2247 = -0.2e1 * qJ(3,2);
t2195 = t2247 + t2250;
t2085 = sin(t2195);
t2244 = 0.4e1 * qJ(3,2);
t2196 = t2250 + t2244;
t2086 = sin(t2196);
t2245 = 0.3e1 * qJ(3,2);
t2197 = t2250 + t2245;
t2087 = sin(t2197);
t2198 = t2250 + qJ(3,2);
t2088 = sin(t2198);
t2249 = 0.3e1 * qJ(2,2);
t2106 = cos(t2244 + t2249);
t2107 = cos(t2245 + t2249);
t2108 = cos(t2245 + qJ(2,2));
t2109 = cos(t2246 + t2249);
t2193 = t2246 + qJ(2,2);
t2110 = cos(t2193);
t2111 = cos(t2249 + qJ(3,2));
t2199 = qJ(2,2) + qJ(3,2);
t2112 = cos(t2199);
t2200 = qJ(2,2) - qJ(3,2);
t2113 = cos(t2200);
t2147 = sin(t2245);
t2194 = -qJ(3,2) + t2250;
t2248 = 0.4e1 * qJ(2,2);
t2044 = pkin(1) * t2223 + pkin(2) * t2112;
t2039 = 0.1e1 / t2044;
t2527 = t2039 * t2700;
t2391 = t2527 * t2801;
t2495 = -t2731 / 0.2e1;
t2400 = t2165 * t2495;
t2494 = -t2731 / 0.4e1;
t2506 = t2165 * t2637;
t2702 = t1973 * t2039;
t2525 = t2266 * t2702;
t2526 = t2261 * t2702;
t2634 = t2265 * sin(t2194);
t2581 = pkin(2) * t2634;
t2631 = t1885 + t1909;
t2728 = t1921 * t2262;
t2792 = -t2223 / 0.4e1;
t2827 = t2223 + t2109;
t2831 = cos(qJ(2,2) + t2247) + cos(t2249);
t2832 = t2106 + t2110;
t1841 = (((t2832 * t1894 * t2854 + (-t2831 * t2551 + ((t1906 - t2430 / 0.2e1) * t2112 + (-t2111 + t2107) * t1888) * t2847) * pkin(1)) * t2230 + (sin(t2248 + qJ(3,2)) * t2613 + t2260 * sin(t2248 + 0.5e1 * qJ(3,2)) + t2483 * sin(t2245 + t2248) + t2087 * t2618 + t2088 * t2617 + t2147 * t2612 - 0.6e1 * t2581 + t2215 * t2619 + (-sin(t2248) - t2085) * t2264 + (t2143 * sin(t2248 + t2246) + t2149 * t2814 + t2148 * t2813 + t2083 * t2812 + (sin(t2244 + t2248) + t2086) * t2606) * pkin(1)) * t2702 + ((-pkin(2) * t2113 * t2731 + t1921 * t2108) * t2165 + t2827 * (t1909 - t1885)) * t2855) * t2525 / 0.4e1 + ((t2631 * t2087 * t2823 - (t1909 + (0.4e1 * t2728 + 0.2e1 * t2731) * t2506) * pkin(1) * t2083 + 0.4e1 * t1888 * t2581 + t2261 * t2086 * t2400 + t2265 * t2085 * t2399 + t1894 * t2088 * t2484 + (t1909 + (0.3e1 / 0.2e1 * t2731 + 0.2e1 * t2728) * t2506) * t2148 * t2825 + (t1906 + 0.4e1 / 0.5e1 * t2430) * t2149 * t2620 - t2147 * t2551 * t2801 - 0.6e1 * ((t2551 * t2786 + t1918) * t2261 + t2265 * (t1906 + t1918)) * t2767 - t2832 * t2230 * t2526 + t2831 * t2265 * t2527 - 0.2e1 * (t2107 + t2112) * t2391 + 0.2e1 * (t2113 + t2111) * t2391 - t2827 * t2498 * t2702) * t2494 + 0.2e1 * ((t2087 * t2789 - t2634 / 0.2e1 + t2088 * t2488 + t2142 * t2215 + (t2083 + t2148 - t2149) * t2801) * t1894 + ((-t2109 / 0.4e1 + t2106 / 0.4e1 + t2110 / 0.4e1 + t2792) * pkin(2) + (t2107 / 0.4e1 - t2111 / 0.4e1 + t2108 / 0.4e1 - t2112 / 0.4e1) * pkin(1)) * t2527) * t1921) * t2165 * t2267) / (t2124 * cos(t2192) + cos(t2196) * t2212 + cos(t2195) * t2788 + t2125 * t2158 - t2142 * t2156 + t2072 + (-cos(t2197) - cos(t2194) + 0.2e1 * cos(t2198) - cos(t2245)) * t2801 + t2142);
t2035 = t2216 * t2222 + t2660;
t2528 = t2216 * t2702;
t2469 = pkin(1) * t2528;
t2760 = t1888 * pkin(1);
t1864 = -t2230 * t2469 + (-t2035 * t2527 + 0.2e1 * t2222 * t2760) * pkin(2) + t2631;
t2529 = t2178 * t2702;
t2361 = (-(t2176 * t2854 + 0.2e1 * t2072 + t2621) * t2529 - 0.2e1 * (t1894 * t2790 - t2063 * t2528) * t2590 + t2176 * t2526 - t2069 * t2702 + (t1894 * t2757 + t2399) * t2657) * t2165 * t2525;
t2166 = 0.1e1 / t2215 ^ 2;
t2668 = t2166 * t2267;
t2089 = sin(t2199);
t2734 = (-t2089 * t2527 + t1894 * (t2135 + pkin(2))) * t1921;
t1829 = (t2361 + (t1864 * t2495 - t2734) * t2668) * t2262 + t1841;
t1891 = t1894 ^ 2;
t2040 = 0.1e1 / t2044 ^ 2;
t2701 = t1973 * t2040;
t2776 = pkin(2) * t2089;
t1861 = (-t1894 * t2776 + t2527 + (-t2089 * t1921 * t2266 + (-t2216 / 0.2e1 + (pkin(1) * t2216 + t2776) * t2787) * t2731) * t2165) * t2701;
t2739 = t1861 * t2216;
t2763 = pkin(4) * t2216;
t2863 = t1891 * t2763 + 0.2e1 * t2400 * t2702 + 0.4e1 * t2529 * t2760 - 0.2e1 * (pkin(1) * t2739 + t1829 * t2803) * t2223;
t2213 = sin(qJ(3,3));
t2162 = 0.1e1 / t2213;
t2794 = legFrame(3,2);
t2595 = sin(t2794);
t2375 = t2595 * t2800;
t2797 = sin(qJ(1,3));
t2046 = t2797 * t2375;
t2127 = cos(t2794);
t2573 = t2127 * t2797;
t2461 = t2229 * t2573;
t2221 = cos(qJ(1,3));
t2649 = t2221 * t2228;
t1962 = t2461 / 0.2e1 - t2046 / 0.2e1 + t2649;
t2057 = t2228 * t2797;
t2285 = -t2127 * t2229 + t2375;
t2861 = t2285 * t2221;
t1978 = t2057 + t2861;
t2219 = cos(qJ(3,3));
t2759 = t2219 * pkin(2);
t2061 = pkin(1) + t2759;
t2214 = sin(qJ(2,3));
t2220 = cos(qJ(2,3));
t2665 = t2213 * t2220;
t2672 = (t2219 + 0.1e1) * (t2219 - 0.1e1);
t1986 = pkin(2) * t2214 * t2672 + t2061 * t2665;
t2022 = t2127 * t2800 + t2595 * t2229;
t2687 = t2022 * t2214;
t1998 = pkin(1) * t2687;
t2004 = pkin(2) * t2022;
t2007 = pkin(1) * t2022;
t2066 = t2797 * t2230;
t2134 = pkin(1) * t2219;
t2238 = 0.2e1 * qJ(3,3);
t2145 = sin(t2238);
t2172 = t2219 ^ 2;
t2171 = t2219 * t2172;
t2174 = t2220 ^ 2;
t2173 = t2220 * t2174;
t2278 = 0.2e1 * t2861;
t2130 = t2221 * pkin(2);
t2453 = t2213 * t2066;
t2306 = t2214 * t2453 + t2130;
t2666 = t2213 * t2214;
t2335 = pkin(2) * t2666 - t2061 * t2220;
t2339 = t2066 * t2285 + t1998;
t2519 = t2213 * t2861;
t2629 = -pkin(1) * t2519 + t2004;
t2771 = pkin(2) * t2172;
t2344 = -0.2e1 * t2022 * t2771 + t2629;
t2242 = 0.2e1 * qJ(2,3);
t2155 = cos(t2242);
t2368 = t1986 * t2155 * t2057;
t2651 = t2219 * t2213;
t2504 = t2214 * t2651;
t2407 = t2220 * t2504;
t2146 = sin(t2242);
t2458 = t2146 * t2057;
t1971 = -t2046 + t2461 + t2649;
t2703 = t1971 * t2230;
t2593 = pkin(1) * t2703;
t2479 = t2214 * t2593;
t2768 = pkin(2) * t2213;
t2616 = 0.2e1 * t2768;
t2487 = t2221 * t2616;
t2501 = t2221 * t2642;
t2663 = t2214 * t2221;
t2518 = t2285 * t2663;
t2664 = t2214 * t2220;
t2601 = 0.2e1 * t2664;
t2611 = pkin(1) * t2768;
t2625 = 0.4e1 * t2171 - 0.5e1 * t2219;
t2640 = t2261 * t2022;
t2662 = t2214 * t2230;
t2714 = (-pkin(1) * t2861 + t2022 * t2616) * t2219;
t2758 = t2220 * pkin(2);
t2153 = cos(t2238);
t2774 = pkin(2) * t2153;
t2781 = pkin(1) * t2213;
t2784 = 0.2e1 * t2172 - 0.1e1;
t2811 = 0.4e1 * t2172;
t2851 = -0.2e1 * t2172 * t2641 + 0.2e1 * t2125;
t1914 = -(t2368 + ((-t2519 * t2823 + t2007) * t2219 - t2344) * t2173 + (-t2339 * t2213 + (pkin(2) * t2784 * t2861 - t2714) * t2214) * t2174 + ((-t2007 - (t2214 * t2066 + t2487) * t2285) * t2219 + t2344) * t2220 - t2518 * t2771 + t2504 * t2004 + (pkin(2) * t2663 + t2453) * t2285) * t2774 + pkin(2) * (t1986 * t2458 + ((t2022 * t2781 + t2714) * t2174 + (-t2629 * t2214 + t2339 * t2219) * t2220 - t2306 * t2285) * t2220 + ((t2172 * t2601 - t2651) * t2022 - (t2784 * t2174 - t2172 - 0.2e1 * t2407) * t2861) * t2758) * t2145 + t2335 * pkin(1) * t2458 * t2672 - t2368 * t2134 + (-t2219 * t2519 * t2598 + t2022 * t2851 + (-(t2811 - 0.3e1) * t2519 - t2625 * t2022) * t2801) * t2173 + ((((t1998 - t2501) * t2811 - 0.3e1 * t1998 + t1962 * t2855) * t2213 - t2625 * pkin(1) * t2518) * pkin(2) + 0.2e1 * (t2641 * t2687 - t2593) * t2651 + t2518 * t2851) * t2174 + ((-0.2e1 * t2214 * t2501 + t2007) * t2171 * t2822 + (-(t2057 - t2278) * t2611 - 0.2e1 * t2479 - 0.2e1 * t2640) * t2172 + ((-t2142 * t2057 - t2261 * t2278) * t2213 + (-0.4e1 / 0.3e1 * (t2461 / 0.4e1 - t2046 / 0.4e1 + t2649) * t2662 + t2007) * t2824) * t2219 - (t2057 + 0.3e1 * t2861) * t2611 + 0.2e1 * t2479 + t2640) * t2220 - pkin(2) * ((-t2172 * t2649 + t1962) * t2213 * t2855 + ((t1978 * t2172 - t2022 * t2651 - t1978) * pkin(2) + (t2171 - t2219) * t2778 * t2797) * t2214);
t2071 = pkin(1) * t2759;
t1935 = (t2061 * t2664 + (t2174 - 0.1e1) * t2768) * t2774 / 0.2e1 - t2335 * t2145 * t2758 / 0.2e1 + pkin(2) * (pkin(1) * t2172 - t2759 / 0.2e1 + t2235) * t2664 + ((t2071 + t2125) * t2174 + t2789) * t2213;
t2732 = t1914 / t1935;
t2552 = t2162 * t2732;
t2401 = t2552 / 0.2e1;
t1905 = t2266 * t2401;
t1980 = t2221 * t2230 - t2335 * t2797;
t2591 = pkin(2) * t2665;
t2013 = t2061 * t2214 + t2591;
t2315 = t2221 * t2335 + t2066;
t1920 = (-t2013 * t2800 + t2229 * t2315) * t2127 + (-t2013 * t2229 - t2315 * t2800) * t2595 + t2228 * t1980;
t2431 = t1920 * t2162 * t2636;
t1893 = t1905 + t2431;
t1884 = t2261 * t1893;
t1887 = t1905 + t2431 / 0.2e1;
t1908 = pkin(1) * t2401;
t1917 = 0.2e1 / 0.3e1 * t2431;
t2236 = 0.4e1 * qJ(3,3);
t2185 = t2242 + t2236;
t2077 = sin(t2185);
t2237 = 0.3e1 * qJ(3,3);
t2186 = t2242 + t2237;
t2078 = sin(t2186);
t2187 = t2242 + t2238;
t2079 = sin(t2187);
t2188 = t2242 + qJ(3,3);
t2080 = sin(t2188);
t2239 = -0.2e1 * qJ(3,3);
t2189 = t2242 + t2239;
t2081 = sin(t2189);
t2241 = 0.3e1 * qJ(2,3);
t2097 = cos(t2236 + t2241);
t2098 = cos(t2237 + qJ(2,3));
t2183 = t2238 + qJ(2,3);
t2099 = cos(t2183);
t2100 = cos(t2241 + t2237);
t2101 = cos(t2241 + t2238);
t2102 = cos(t2241 + qJ(3,3));
t2190 = qJ(2,3) + qJ(3,3);
t2103 = cos(t2190);
t2191 = qJ(2,3) - qJ(3,3);
t2104 = cos(t2191);
t2144 = sin(t2237);
t2184 = -qJ(3,3) + t2242;
t2240 = 0.4e1 * qJ(2,3);
t2043 = pkin(1) * t2220 + pkin(2) * t2103;
t2037 = 0.1e1 / t2043;
t2532 = t2037 * t2703;
t2392 = t2532 * t2801;
t2497 = -t2732 / 0.2e1;
t2402 = t2162 * t2497;
t2496 = -t2732 / 0.4e1;
t2507 = t2162 * t2637;
t2705 = t1971 * t2037;
t2530 = t2266 * t2705;
t2531 = t2261 * t2705;
t2635 = t2265 * sin(t2184);
t2582 = pkin(2) * t2635;
t2632 = t1884 + t1908;
t2729 = t1920 * t2262;
t2793 = -t2220 / 0.4e1;
t2828 = t2220 + t2101;
t2833 = cos(qJ(2,3) + t2239) + cos(t2241);
t2834 = t2097 + t2099;
t1840 = (((t2834 * t1893 * t2854 + (-t2833 * t2552 + ((t1905 - t2431 / 0.2e1) * t2103 + (t2100 - t2102) * t1887) * t2847) * pkin(1)) * t2230 + (sin(t2240 + qJ(3,3)) * t2613 + t2483 * sin(t2240 + t2237) + t2260 * sin(t2240 + 0.5e1 * qJ(3,3)) + t2144 * t2612 - 0.6e1 * t2582 + t2213 * t2619 + t2078 * t2618 + t2080 * t2617 + (-sin(t2240) - t2081) * t2264 + (t2143 * sin(t2240 + t2238) + t2146 * t2814 + t2145 * t2813 + t2079 * t2812 + (sin(t2236 + t2240) + t2077) * t2606) * pkin(1)) * t2705 + ((-pkin(2) * t2104 * t2732 + t1920 * t2098) * t2162 + t2828 * (t1908 - t1884)) * t2855) * t2530 / 0.4e1 + ((-(t1908 + (0.4e1 * t2729 + 0.2e1 * t2732) * t2507) * pkin(1) * t2079 + t2632 * t2078 * t2823 + 0.4e1 * t1887 * t2582 + t2265 * t2081 * t2401 + t2261 * t2077 * t2402 + t1893 * t2080 * t2484 + (t1908 + (0.3e1 / 0.2e1 * t2732 + 0.2e1 * t2729) * t2507) * t2145 * t2825 + (t1905 + 0.4e1 / 0.5e1 * t2431) * t2146 * t2620 - t2144 * t2552 * t2801 - 0.6e1 * ((t2552 * t2786 + t1917) * t2261 + t2265 * (t1905 + t1917)) * t2768 - t2834 * t2230 * t2531 + t2833 * t2265 * t2532 - 0.2e1 * (t2100 + t2103) * t2392 + 0.2e1 * (t2104 + t2102) * t2392 - t2828 * t2498 * t2705) * t2496 + 0.2e1 * ((t2078 * t2789 - t2635 / 0.2e1 + t2080 * t2488 + t2142 * t2213 + (t2079 + t2145 - t2146) * t2801) * t1893 + ((-t2101 / 0.4e1 + t2097 / 0.4e1 + t2099 / 0.4e1 + t2793) * pkin(2) + (t2100 / 0.4e1 - t2102 / 0.4e1 + t2098 / 0.4e1 - t2103 / 0.4e1) * pkin(1)) * t2532) * t1920) * t2162 * t2267) / (t2124 * cos(t2187) + cos(t2189) * t2788 + cos(t2185) * t2212 + t2125 * t2155 - t2142 * t2153 + t2071 + (-cos(t2186) - cos(t2184) + 0.2e1 * cos(t2188) - cos(t2237)) * t2801 + t2142);
t2034 = t2214 * t2219 + t2665;
t2533 = t2214 * t2705;
t2470 = pkin(1) * t2533;
t2761 = t1887 * pkin(1);
t1863 = -t2230 * t2470 + (-t2034 * t2532 + 0.2e1 * t2219 * t2761) * pkin(2) + t2632;
t2534 = t2174 * t2705;
t2362 = (-(t2172 * t2854 + 0.2e1 * t2071 + t2621) * t2534 - 0.2e1 * (t1893 * t2790 - t2061 * t2533) * t2591 + t2172 * t2531 - t2069 * t2705 + (t1893 * t2759 + t2401) * t2662) * t2162 * t2530;
t2163 = 0.1e1 / t2213 ^ 2;
t2669 = t2163 * t2267;
t2082 = sin(t2190);
t2735 = (-t2082 * t2532 + t1893 * (t2134 + pkin(2))) * t1920;
t1828 = (t2362 + (t1863 * t2497 - t2735) * t2669) * t2262 + t1840;
t1890 = t1893 ^ 2;
t2038 = 0.1e1 / t2043 ^ 2;
t2704 = t1971 * t2038;
t2777 = pkin(2) * t2082;
t1860 = (-t1893 * t2777 + t2532 + (-t2082 * t1920 * t2266 + (-t2214 / 0.2e1 + (pkin(1) * t2214 + t2777) * t2787) * t2732) * t2162) * t2704;
t2742 = t1860 * t2214;
t2764 = pkin(4) * t2214;
t2862 = t1890 * t2764 + 0.2e1 * t2402 * t2705 + 0.4e1 * t2534 * t2761 - 0.2e1 * (pkin(1) * t2742 + t1828 * t2803) * t2220;
t2810 = 0.2e1 * t2174;
t2073 = t2810 - 0.1e1;
t1983 = -0.4e1 * t2407 + (0.4e1 * t2174 - 0.2e1) * t2172 - t2073;
t2858 = 0.2e1 * t1983;
t2808 = 0.2e1 * t2178;
t2074 = t2808 - 0.1e1;
t1984 = -0.4e1 * t2406 + (0.4e1 * t2178 - 0.2e1) * t2176 - t2074;
t2857 = 0.2e1 * t1984;
t2806 = 0.2e1 * t2182;
t2075 = t2806 - 0.1e1;
t1985 = -0.4e1 * t2405 + (0.4e1 * t2182 - 0.2e1) * t2180 - t2075;
t2856 = 0.2e1 * t1985;
t2850 = t2214 / 0.4e1;
t2849 = t2216 / 0.4e1;
t2848 = t2218 / 0.4e1;
t2378 = t2797 * t2595;
t2323 = t2037 * t2378;
t2846 = t2038 * t2073;
t2379 = t2798 * t2596;
t2322 = t2039 * t2379;
t2845 = t2040 * t2074;
t2380 = t2799 * t2597;
t2321 = t2041 * t2380;
t2844 = t2042 * t2075;
t2677 = t2041 * t2129;
t2843 = t2677 * t2799;
t2679 = t2039 * t2128;
t2842 = t2679 * t2798;
t2681 = t2037 * t2127;
t2841 = t2681 * t2797;
t2802 = pkin(4) / 0.4e1;
t1866 = -t1887 * t2470 + t1890 * t2802;
t2310 = pkin(1) * t1860 * t2810 - t1828 * t2764;
t2650 = t2219 * t2220;
t2840 = -0.4e1 * t1866 * t2650 + t2862 * t2213 + t2219 * t2310;
t2839 = 0.4e1 * t1866 * t2665 - t2213 * t2310 + t2862 * t2219;
t1868 = -t1888 * t2469 + t1891 * t2802;
t2309 = pkin(1) * t1861 * t2808 - t1829 * t2763;
t2647 = t2222 * t2223;
t2838 = -0.4e1 * t1868 * t2647 + t2863 * t2215 + t2222 * t2309;
t2837 = 0.4e1 * t1868 * t2660 - t2215 * t2309 + t2863 * t2222;
t1867 = -t1889 * t2468 + t1892 * t2802;
t2311 = pkin(1) * t1862 * t2806 - t1827 * t2762;
t2644 = t2225 * t2226;
t2836 = -0.4e1 * t1867 * t2644 + t2864 * t2217 + t2225 * t2311;
t2835 = 0.4e1 * t1867 * t2655 - t2217 * t2311 + t2864 * t2225;
t1968 = (t2172 - 0.1e1 / 0.2e1) * t2664 + (t2174 - 0.1e1 / 0.2e1) * t2651;
t2820 = -0.4e1 * t1968;
t2819 = 0.4e1 * t1968;
t1969 = (t2176 - 0.1e1 / 0.2e1) * t2659 + (t2178 - 0.1e1 / 0.2e1) * t2648;
t2818 = -0.4e1 * t1969;
t2817 = 0.4e1 * t1969;
t1970 = (t2180 - 0.1e1 / 0.2e1) * t2654 + (t2182 - 0.1e1 / 0.2e1) * t2645;
t2816 = -0.4e1 * t1970;
t2815 = 0.4e1 * t1970;
t2785 = t2267 / 0.4e1;
t2753 = -qJ(3,1) + qJ(1,1);
t2752 = qJ(3,1) + qJ(1,1);
t2751 = -qJ(3,2) + qJ(1,2);
t2750 = qJ(3,2) + qJ(1,2);
t2749 = -qJ(3,3) + qJ(1,3);
t2748 = qJ(3,3) + qJ(1,3);
t2747 = qJ(1,1) - 0.2e1 * qJ(2,1);
t2746 = qJ(1,2) - 0.2e1 * qJ(2,2);
t2745 = -0.2e1 * qJ(2,3) + qJ(1,3);
t2744 = t1860 * t2037;
t2743 = t1860 * t2162;
t2741 = t1861 * t2039;
t2740 = t1861 * t2165;
t2738 = t1862 * t2041;
t2737 = t1862 * t2168;
t1965 = t1971 ^ 2;
t2710 = t1965 * t2038;
t1956 = t2174 * t2710;
t1938 = -0.2e1 * t1956 + t2710;
t2010 = 0.1e1 / t2335;
t2726 = t1938 * t2010;
t1966 = t1973 ^ 2;
t2708 = t1966 * t2040;
t1957 = t2178 * t2708;
t1939 = -0.2e1 * t1957 + t2708;
t2011 = 0.1e1 / t2334;
t2725 = t1939 * t2011;
t1967 = t1975 ^ 2;
t2706 = t1967 * t2042;
t1958 = t2182 * t2706;
t1940 = -0.2e1 * t1958 + t2706;
t2012 = 0.1e1 / t2333;
t2724 = t1940 * t2012;
t2723 = ((cos(qJ(2,3) - t2749) + cos(qJ(2,3) + t2748)) * t2855 + (sin(t2239 + t2745) + sin(qJ(1,3) + t2187) + 0.2e1 * t2797) * pkin(2) + (-sin(qJ(3,3) - t2745) + sin(qJ(1,3) + t2188) + sin(t2749) + sin(t2748)) * pkin(1)) / ((-sin(t2183) + t2214) * pkin(2) + (sin(t2191) - t2082) * pkin(1));
t2722 = ((cos(qJ(2,2) - t2751) + cos(qJ(2,2) + t2750)) * t2855 + (sin(t2247 + t2746) + sin(qJ(1,2) + t2192) + 0.2e1 * t2798) * pkin(2) + (-sin(qJ(3,2) - t2746) + sin(qJ(1,2) + t2198) + sin(t2751) + sin(t2750)) * pkin(1)) / ((-sin(t2193) + t2216) * pkin(2) + (sin(t2200) - t2089) * pkin(1));
t2721 = ((cos(qJ(2,1) - t2753) + cos(qJ(2,1) + t2752)) * t2855 + (sin(t2255 + t2747) + sin(qJ(1,1) + t2205) + 0.2e1 * t2799) * pkin(2) + (-sin(qJ(3,1) - t2747) + sin(qJ(1,1) + t2206) + sin(t2753) + sin(t2752)) * pkin(1)) / ((-sin(t2203) + t2218) * pkin(2) + (sin(t2209) - t2096) * pkin(1));
t1947 = -t2127 * t2013 - t2315 * t2595;
t2720 = t1947 * t2162;
t1948 = -t2595 * t2013 + t2315 * t2127;
t2719 = t1948 * t2162;
t1949 = -t2128 * t2014 - t2316 * t2596;
t2718 = t1949 * t2165;
t1950 = -t2596 * t2014 + t2316 * t2128;
t2717 = t1950 * t2165;
t1951 = -t2129 * t2015 - t2317 * t2597;
t2716 = t1951 * t2168;
t1952 = -t2597 * t2015 + t2317 * t2129;
t2715 = t1952 * t2168;
t2711 = t1965 * t2010;
t2709 = t1966 * t2011;
t2707 = t1967 * t2012;
t2696 = t1980 * t2162;
t2695 = t1981 * t2165;
t2694 = t1982 * t2168;
t2693 = t2010 * t2162;
t2692 = t2011 * t2165;
t2691 = t2012 * t2168;
t2680 = t2037 * t2221;
t2678 = t2039 * t2224;
t2676 = t2041 * t2227;
t2049 = -pkin(2) + t2134 + 0.2e1 * t2771;
t2675 = t2049 * t2127;
t2050 = -pkin(2) + t2135 + 0.2e1 * t2770;
t2674 = t2050 * t2128;
t2051 = -pkin(2) + t2132 + 0.2e1 * t2769;
t2673 = t2051 * t2129;
t2605 = 0.2e1 * t2262;
t2588 = pkin(4) * t1860 * t2220;
t2587 = pkin(4) * t1861 * t2223;
t2586 = pkin(4) * t1862 * t2226;
t2585 = pkin(4) * t2742;
t2584 = pkin(4) * t2739;
t2583 = pkin(4) * t2736;
t2031 = t2650 - t2666;
t2579 = t2031 * t2797;
t2032 = t2647 - t2661;
t2578 = t2032 * t2798;
t2033 = t2644 - t2656;
t2577 = t2033 * t2799;
t2576 = t2034 * t2797;
t2575 = t2035 * t2798;
t2574 = t2036 * t2799;
t2570 = t1860 * t2693;
t2569 = t2031 * t2743;
t2568 = t2034 * t2743;
t2567 = t1860 * t2680;
t2566 = t1861 * t2692;
t2565 = t2032 * t2740;
t2564 = t2035 * t2740;
t2563 = t1861 * t2678;
t2562 = t1862 * t2691;
t2561 = t2033 * t2737;
t2560 = t2036 * t2737;
t2559 = t1862 * t2676;
t2558 = t1893 * t2704;
t2557 = t1894 * t2701;
t2556 = t1895 * t2698;
t2555 = t1914 ^ 2 / t1935 ^ 2 * t2163;
t2554 = t1915 ^ 2 / t1936 ^ 2 * t2166;
t2553 = t1916 ^ 2 / t1937 ^ 2 * t2169;
t1992 = t2172 * t2130 - t2306;
t2060 = pkin(1) + 0.2e1 * t2759;
t2305 = (t2214 * t2487 + t2066) * t2219 + t2663 * t2781;
t2452 = t2049 * t2595;
t1923 = (t2213 * t2127 * t2060 - t2221 * t2452) * t2174 + (t2214 * t2675 + t2305 * t2595) * t2220 + t1992 * t2595 - t2127 * pkin(2) * t2651;
t2549 = t1923 * t2693;
t2449 = t2213 * t2595;
t1924 = (t2060 * t2449 + t2221 * t2675) * t2174 + (-t2127 * t2305 + t2214 * t2452) * t2220 - t1992 * t2127 - t2449 * t2759;
t2548 = t1924 * t2693;
t1993 = t2176 * t2131 - t2307;
t2062 = pkin(1) + 0.2e1 * t2757;
t2304 = (t2216 * t2486 + t2067) * t2222 + t2658 * t2780;
t2451 = t2050 * t2596;
t1925 = (t2215 * t2128 * t2062 - t2224 * t2451) * t2178 + (t2216 * t2674 + t2304 * t2596) * t2223 + t1993 * t2596 - t2128 * pkin(2) * t2648;
t2547 = t1925 * t2692;
t2448 = t2215 * t2596;
t1926 = (t2062 * t2448 + t2224 * t2674) * t2178 + (-t2128 * t2304 + t2216 * t2451) * t2223 - t1993 * t2128 - t2448 * t2757;
t2546 = t1926 * t2692;
t1994 = t2180 * t2133 - t2308;
t2064 = pkin(1) + 0.2e1 * t2755;
t2303 = (t2218 * t2485 + t2068) * t2225 + t2653 * t2779;
t2450 = t2051 * t2597;
t1927 = (t2217 * t2129 * t2064 - t2227 * t2450) * t2182 + (t2218 * t2673 + t2303 * t2597) * t2226 + t1994 * t2597 - t2129 * pkin(2) * t2645;
t2545 = t1927 * t2691;
t2447 = t2217 * t2597;
t1928 = (t2064 * t2447 + t2227 * t2673) * t2182 + (-t2129 * t2303 + t2218 * t2450) * t2226 - t1994 * t2129 - t2447 * t2755;
t2544 = t1928 * t2691;
t2540 = t1965 * t2723;
t2539 = t1966 * t2722;
t2538 = t1967 * t2721;
t2537 = t2162 * t2710;
t2536 = t2165 * t2708;
t2535 = t2168 * t2706;
t2513 = t2220 * t2680;
t2512 = t2038 * t2664;
t2511 = t2223 * t2678;
t2510 = t2040 * t2659;
t2509 = t2226 * t2676;
t2508 = t2042 * t2654;
t2491 = t2723 / 0.2e1;
t2490 = t2722 / 0.2e1;
t2489 = t2721 / 0.2e1;
t2425 = t1965 * t2512;
t1953 = t2219 * t2425;
t1875 = (t1956 - t2710 / 0.2e1 - t1887 * t2431) * t2213 + t1953;
t2482 = -0.2e1 * t1875 * t2693;
t2421 = t1966 * t2510;
t1954 = t2222 * t2421;
t1876 = (t1957 - t2708 / 0.2e1 - t1888 * t2430) * t2215 + t1954;
t2481 = -0.2e1 * t1876 * t2692;
t2417 = t1967 * t2508;
t1955 = t2225 * t2417;
t1877 = (t1958 - t2706 / 0.2e1 - t1889 * t2429) * t2217 + t1955;
t2480 = -0.2e1 * t1877 * t2691;
t2476 = t2213 * t2588;
t2475 = t2219 * t2588;
t2474 = t2215 * t2587;
t2473 = t2222 * t2587;
t2472 = t2217 * t2586;
t2471 = t2225 * t2586;
t2467 = t2797 * t2744;
t2466 = t2798 * t2741;
t2465 = t2799 * t2738;
t2464 = t2037 * t2573;
t2463 = t2039 * t2572;
t2462 = t2041 * t2571;
t2446 = t2010 * t2569;
t2445 = t2010 * t2568;
t2444 = t2214 * t2570;
t2443 = t2220 * t2570;
t2442 = t2011 * t2565;
t2441 = t2011 * t2564;
t2440 = t2216 * t2566;
t2439 = t2223 * t2566;
t2438 = t2012 * t2561;
t2437 = t2012 * t2560;
t2436 = t2218 * t2562;
t2435 = t2226 * t2562;
t2434 = t2037 * t2555;
t2433 = t2039 * t2554;
t2432 = t2041 * t2553;
t2428 = t1968 * t2537;
t2427 = t1983 * t2537;
t2426 = t2010 * t2537;
t2424 = t1969 * t2536;
t2423 = t1984 * t2536;
t2422 = t2011 * t2536;
t2420 = t1970 * t2535;
t2419 = t1985 * t2535;
t2418 = t2012 * t2535;
t2410 = t2162 * t2512;
t2409 = t2165 * t2510;
t2408 = t2168 * t2508;
t2404 = t1861 * t2490;
t2403 = t1862 * t2489;
t2396 = t1860 * t2491;
t2395 = -t2540 / 0.2e1;
t2394 = -t2539 / 0.2e1;
t2393 = -t2538 / 0.2e1;
t2374 = t1839 * t2462;
t2373 = t1840 * t2464;
t2372 = t1841 * t2463;
t2371 = t2797 * t2558;
t2370 = t2798 * t2557;
t2369 = t2799 * t2556;
t2365 = t1860 * t2464;
t2364 = t1861 * t2463;
t2363 = t1862 * t2462;
t2359 = t2221 * t2434;
t2358 = t2224 * t2433;
t2357 = t2227 * t2432;
t2356 = t1983 * t2426;
t2355 = t1984 * t2422;
t2354 = t1985 * t2418;
t2350 = t2213 * t2425;
t2349 = t2221 * t1971 * t2552;
t2348 = t2215 * t2421;
t2347 = t2224 * t1973 * t2551;
t2346 = t2217 * t2417;
t2345 = t2227 * t1975 * t2550;
t2338 = 0.2e1 * t1968 * t2426;
t2337 = 0.2e1 * t1969 * t2422;
t2336 = 0.2e1 * t1970 * t2418;
t2332 = t1971 * t2378;
t2331 = t1973 * t2379;
t2330 = t1975 * t2380;
t2329 = t2031 * t2378;
t2328 = t2032 * t2379;
t2327 = t2033 * t2380;
t2326 = t2034 * t2378;
t2325 = t2035 * t2379;
t2324 = t2036 * t2380;
t2320 = t1975 * t2571 * t2730;
t2319 = t1973 * t2572 * t2731;
t2318 = t1971 * t2573 * t2732;
t2302 = t1839 * t2321;
t2301 = t1840 * t2323;
t2300 = t1841 * t2322;
t2299 = t1862 * t2321;
t2298 = t1861 * t2322;
t2297 = t1860 * t2323;
t2296 = t2434 * t2573;
t2295 = t2433 * t2572;
t2294 = t2432 * t2571;
t2293 = t1893 * t2038 * t2332;
t2292 = t1894 * t2040 * t2331;
t2291 = t1895 * t2042 * t2330;
t2290 = t2331 * t2731;
t2289 = t2332 * t2732;
t2288 = t2330 * t2730;
t2284 = t2323 * t2555;
t2283 = t2322 * t2554;
t2282 = t2321 * t2553;
t2263 = 0.1e1 / pkin(2) ^ 2;
t2170 = t2218 ^ 2;
t2167 = t2216 ^ 2;
t2164 = t2214 ^ 2;
t2030 = t2036 ^ 2;
t2029 = t2035 ^ 2;
t2028 = t2034 ^ 2;
t1904 = t2553 * t2785 + t1958;
t1903 = t2554 * t2785 + t1957;
t1902 = t2555 * t2785 + t1956;
t1901 = t1904 * t2225 - t2346;
t1900 = t1904 * t2217 + t1955;
t1899 = t1903 * t2222 - t2348;
t1898 = t1903 * t2215 + t1954;
t1897 = t1902 * t2219 - t2350;
t1896 = t1902 * t2213 + t1953;
t1880 = -0.2e1 * t2346 + (t2075 * t2706 + (-t1922 * t2263 - t2262 * t2730) * t1922 * t2667) * t2225;
t1879 = -0.2e1 * t2348 + (t2074 * t2708 + (-t1921 * t2263 - t2262 * t2731) * t1921 * t2668) * t2222;
t1878 = -0.2e1 * t2350 + (t2073 * t2710 + (-t1920 * t2263 - t2262 * t2732) * t1920 * t2669) * t2219;
t1838 = pkin(1) * t1839 - t2583;
t1837 = pkin(1) * t1841 - t2584;
t1836 = pkin(1) * t1840 - t2585;
t1835 = -t1838 * t2217 - t2471;
t1834 = -t1837 * t2215 - t2473;
t1833 = -t1836 * t2213 - t2475;
t1832 = t1838 * t2225 - t2472;
t1831 = t1837 * t2222 - t2474;
t1830 = t1836 * t2219 - t2476;
t1823 = t2583 + ((t2360 / 0.2e1 + (t1865 * t2492 - t2733 / 0.2e1) * t2667) * t2262 + t1839) * t2825;
t1822 = t2584 + ((t2361 / 0.2e1 + (t1864 * t2494 - t2734 / 0.2e1) * t2668) * t2262 + t1841) * t2825;
t1821 = t2585 + ((t2362 / 0.2e1 + (t1863 * t2496 - t2735 / 0.2e1) * t2669) * t2262 + t1840) * t2825;
t1820 = -t1823 * t2225 - t2472;
t1819 = t1823 * t2217 - t2471;
t1818 = -t1822 * t2222 - t2474;
t1817 = t1822 * t2215 - t2473;
t1816 = -t1821 * t2219 - t2476;
t1815 = t1821 * t2213 - t2475;
t1 = [-t2363 - t2364 - t2365, 0, 0, -t2164 * t2365 - t2167 * t2364 - t2170 * t2363 + ((t1928 * t2707 + t2320) * t2408 + (t1926 * t2709 + t2319) * t2409 + (t1924 * t2711 + t2318) * t2410) * t2266, -0.2e1 * t2365 * t2664 - 0.2e1 * t2364 * t2659 - 0.2e1 * t2363 * t2654 + ((-t1928 * t2724 + t2320 * t2844) * t2168 + (-t1926 * t2725 + t2319 * t2845) * t2165 + (-t1924 * t2726 + t2318 * t2846) * t2162) * t2266, -t2214 * t2373 - t2216 * t2372 - t2218 * t2374 + (t2294 * t2791 + t2295 * t2792 + t2296 * t2793) * t2267 + (-t1924 * t2444 - t1926 * t2440 - t1928 * t2436) * t2266, -t2220 * t2373 - t2223 * t2372 - t2226 * t2374 + (t2294 * t2848 + t2295 * t2849 + t2296 * t2850) * t2267 + (-t1924 * t2443 - t1926 * t2439 - t1928 * t2435) * t2266, (-t1839 * t2544 - t1840 * t2548 - t1841 * t2546) * t2266, 0, 0, (-t2030 * t2465 + t2369 * t2815) * t2129 + (-t2029 * t2466 + t2370 * t2817) * t2128 + (-t2028 * t2467 + t2371 * t2819) * t2127 + (t1924 * t2338 + t1926 * t2337 + t1928 * t2336 + (-t1948 * t2428 - t1950 * t2424 - t1952 * t2420) * t2605) * t2266, (t2369 * t2856 + t2465 * t2816) * t2129 + (t2370 * t2857 + t2466 * t2818) * t2128 + (t2371 * t2858 + t2467 * t2820) * t2127 + (t1924 * t2356 + t1926 * t2355 + t1928 * t2354 + (-t1948 * t2427 - t1950 * t2423 - t1952 * t2419) * t2262) * t2266, (-t1827 * t2574 - t1892 * t2577) * t2677 + (-t1829 * t2575 - t1891 * t2578) * t2679 + (-t1828 * t2576 - t1890 * t2579) * t2681 + (-t1924 * t2445 - t1926 * t2441 - t1928 * t2437 + (t1948 * t2568 + t1950 * t2564 + t1952 * t2560) * t2262) * t2266, (-t1827 * t2577 + t1892 * t2574) * t2677 + (-t1829 * t2578 + t1891 * t2575) * t2679 + (-t1828 * t2579 + t1890 * t2576) * t2681 + (-t1924 * t2446 - t1926 * t2442 - t1928 * t2438 + (t1948 * t2569 + t1950 * t2565 + t1952 * t2561) * t2262) * t2266, (-t1827 * t2544 - t1828 * t2548 - t1829 * t2546 + (t1827 * t2715 + t1828 * t2719 + t1829 * t2717) * t2262) * t2266, t1924 * t2482 + t1926 * t2481 + t1928 * t2480 + (-t1816 * t2548 - t1818 * t2546 - t1820 * t2544) * t2266 + (t1896 * t2719 + t1898 * t2717 + t1900 * t2715 + (t1830 * t2719 + t1831 * t2717 + t1832 * t2715) * t2266) * t2262 - t2836 * t2843 - t2838 * t2842 - t2840 * t2841, -t1878 * t2548 - t1879 * t2546 - t1880 * t2544 + (-t1815 * t2548 - t1817 * t2546 - t1819 * t2544) * t2266 + (t1897 * t2719 + t1899 * t2717 + t1901 * t2715 + (t1833 * t2719 + t1834 * t2717 + t1835 * t2715) * t2266) * t2262 - t2835 * t2843 - t2837 * t2842 - t2839 * t2841, 0; t2299 + t2298 + t2297, 0, 0, t2164 * t2297 + t2170 * t2299 + t2167 * t2298 + ((t1927 * t2707 - t2288) * t2408 + (t1925 * t2709 - t2290) * t2409 + (t1923 * t2711 - t2289) * t2410) * t2266, t2297 * t2601 + t2299 * t2599 + t2298 * t2600 + ((-t1927 * t2724 - t2288 * t2844) * t2168 + (-t1925 * t2725 - t2290 * t2845) * t2165 + (-t1923 * t2726 - t2289 * t2846) * t2162) * t2266, t2214 * t2301 + t2218 * t2302 + t2216 * t2300 + (t2226 * t2282 / 0.4e1 + t2223 * t2283 / 0.4e1 + t2220 * t2284 / 0.4e1) * t2267 + (-t1923 * t2444 - t1925 * t2440 - t1927 * t2436) * t2266, t2220 * t2301 + t2226 * t2302 + t2223 * t2300 + (-t2218 * t2282 / 0.4e1 - t2216 * t2283 / 0.4e1 - t2214 * t2284 / 0.4e1) * t2267 + (-t1923 * t2443 - t1925 * t2439 - t1927 * t2435) * t2266, (-t1839 * t2545 - t1840 * t2549 - t1841 * t2547) * t2266, 0, 0, t2293 * t2820 + t2291 * t2816 + t2292 * t2818 + t2028 * t2297 + t2030 * t2299 + t2029 * t2298 + (t1923 * t2338 + t1925 * t2337 + t1927 * t2336 + (-t1947 * t2428 - t1949 * t2424 - t1951 * t2420) * t2605) * t2266, -0.2e1 * t1983 * t2293 - 0.2e1 * t1985 * t2291 - 0.2e1 * t1984 * t2292 + t2297 * t2819 + t2299 * t2815 + t2298 * t2817 + (t1923 * t2356 + t1925 * t2355 + t1927 * t2354 + (-t1947 * t2427 - t1949 * t2423 - t1951 * t2419) * t2262) * t2266, (t1827 * t2324 + t1892 * t2327) * t2041 + (t1829 * t2325 + t1891 * t2328) * t2039 + (t1828 * t2326 + t1890 * t2329) * t2037 + (-t1923 * t2445 - t1925 * t2441 - t1927 * t2437 + (t1947 * t2568 + t1949 * t2564 + t1951 * t2560) * t2262) * t2266, (t1827 * t2327 - t1892 * t2324) * t2041 + (t1829 * t2328 - t1891 * t2325) * t2039 + (t1828 * t2329 - t1890 * t2326) * t2037 + (-t1923 * t2446 - t1925 * t2442 - t1927 * t2438 + (t1947 * t2569 + t1949 * t2565 + t1951 * t2561) * t2262) * t2266, (-t1827 * t2545 - t1828 * t2549 - t1829 * t2547 + (t1827 * t2716 + t1828 * t2720 + t1829 * t2718) * t2262) * t2266, t1923 * t2482 + t1925 * t2481 + t1927 * t2480 + (-t1816 * t2549 - t1818 * t2547 - t1820 * t2545) * t2266 + (t1896 * t2720 + t1898 * t2718 + t1900 * t2716 + (t1830 * t2720 + t1831 * t2718 + t1832 * t2716) * t2266) * t2262 + t2836 * t2321 + t2838 * t2322 + t2840 * t2323, -t1878 * t2549 - t1879 * t2547 - t1880 * t2545 + (-t1815 * t2549 - t1817 * t2547 - t1819 * t2545) * t2266 + (t1897 * t2720 + t1899 * t2718 + t1901 * t2716 + (t1833 * t2720 + t1834 * t2718 + t1835 * t2716) * t2266) * t2262 + t2835 * t2321 + t2837 * t2322 + t2839 * t2323, 0; -t2559 - t2563 - t2567, 0, 0, -t2164 * t2567 - t2167 * t2563 - t2170 * t2559 + ((t2345 + t2393) * t2508 + (t2347 + t2394) * t2510 + (t2349 + t2395) * t2512) * t2266, -0.2e1 * t2513 * t2742 - 0.2e1 * t2511 * t2739 - 0.2e1 * t2509 * t2736 + (t1938 * t2491 + t1939 * t2490 + t1940 * t2489 + t2345 * t2844 + t2347 * t2845 + t2349 * t2846) * t2266, -t2041 * t1839 * t2653 - t2037 * t1840 * t2663 - t2039 * t1841 * t2658 + (t2357 * t2791 + t2358 * t2792 + t2359 * t2793) * t2267 + (t2214 * t2396 + t2216 * t2404 + t2218 * t2403) * t2266, -t1839 * t2509 - t1840 * t2513 - t1841 * t2511 + (t2357 * t2848 + t2358 * t2849 + t2359 * t2850) * t2267 + (t2220 * t2396 + t2223 * t2404 + t2226 * t2403) * t2266, (t1839 * t2489 + t1840 * t2491 + t1841 * t2490) * t2266, 0, 0, (-t2030 * t2738 + t2556 * t2815) * t2227 + (-t2029 * t2741 + t2557 * t2817) * t2224 + (-t2028 * t2744 + t2558 * t2819) * t2221 + (-t1968 * t2038 * t2540 - t1969 * t2040 * t2539 - t1970 * t2042 * t2538 + (-t1980 * t2428 - t1981 * t2424 - t1982 * t2420) * t2605) * t2266, (t2556 * t2856 + t2738 * t2816) * t2227 + (t2557 * t2857 + t2741 * t2818) * t2224 + (t2558 * t2858 + t2744 * t2820) * t2221 + (t2042 * t1985 * t2393 + t2040 * t1984 * t2394 + t2038 * t1983 * t2395 + (-t1980 * t2427 - t1981 * t2423 - t1982 * t2419) * t2262) * t2266, (-t1827 * t2036 - t1892 * t2033) * t2676 + (-t1829 * t2035 - t1891 * t2032) * t2678 + (-t1828 * t2034 - t1890 * t2031) * t2680 + (t2036 * t2403 + t2035 * t2404 + t2034 * t2396 + (t1980 * t2568 + t1981 * t2564 + t1982 * t2560) * t2262) * t2266, (-t1827 * t2033 + t1892 * t2036) * t2676 + (-t1829 * t2032 + t1891 * t2035) * t2678 + (-t1828 * t2031 + t1890 * t2034) * t2680 + (t2033 * t2403 + t2032 * t2404 + t2031 * t2396 + (t1980 * t2569 + t1981 * t2565 + t1982 * t2561) * t2262) * t2266, (t1827 * t2489 + t1829 * t2490 + t1828 * t2491 + (t1827 * t2694 + t1828 * t2696 + t1829 * t2695) * t2262) * t2266, t1875 * t2723 + t1876 * t2722 + t1877 * t2721 - t2836 * t2676 - t2838 * t2678 - t2840 * t2680 + (t1816 * t2491 + t1818 * t2490 + t1820 * t2489) * t2266 + (t1896 * t2696 + t1898 * t2695 + t1900 * t2694 + (t1830 * t2696 + t1831 * t2695 + t1832 * t2694) * t2266) * t2262, t1880 * t2489 + t1879 * t2490 + t1878 * t2491 - t2835 * t2676 - t2837 * t2678 - t2839 * t2680 + (t1815 * t2491 + t1817 * t2490 + t1819 * t2489) * t2266 + (t1897 * t2696 + t1899 * t2695 + t1901 * t2694 + (t1833 * t2696 + t1834 * t2695 + t1835 * t2694) * t2266) * t2262, 0;];
tau_reg  = t1;
