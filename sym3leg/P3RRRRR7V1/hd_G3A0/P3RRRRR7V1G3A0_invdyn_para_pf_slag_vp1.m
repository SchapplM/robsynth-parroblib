% Calculate vector of inverse dynamics forces for parallel robot
% P3RRRRR7V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% tauX [3x1]
%   forces of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)
%   in platform coordinates xP

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 09:03
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(5,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 08:51:27
% EndTime: 2020-08-07 08:51:50
% DurationCPUTime: 24.30s
% Computational Cost: add. (137856->968), mult. (234642->1407), div. (24864->17), fcn. (173292->159), ass. (0->614)
t719 = (-pkin(5) - pkin(4));
t720 = pkin(1) * pkin(2);
t554 = (t719 * t720);
t754 = 4 * t554;
t753 = 2 * t719;
t369 = rSges(3,3) + pkin(4);
t705 = m(3) * t369;
t717 = m(2) * rSges(2,3);
t476 = m(1) * rSges(1,2) - t705 - t717;
t386 = 2 * qJ(3,3);
t318 = t386 + qJ(2,3);
t244 = cos(t318);
t384 = 4 * qJ(3,3);
t389 = 3 * qJ(2,3);
t246 = cos((t389 + t384));
t752 = t246 + t244;
t387 = -2 * qJ(3,3);
t751 = cos((qJ(2,3) + t387)) + cos(t389);
t394 = 2 * qJ(3,2);
t327 = t394 + qJ(2,2);
t254 = cos(t327);
t392 = 4 * qJ(3,2);
t397 = 3 * qJ(2,2);
t257 = cos((t397 + t392));
t750 = t257 + t254;
t403 = -2 * qJ(3,1);
t405 = 3 * qJ(2,1);
t749 = cos((t403 + qJ(2,1))) + cos(t405);
t402 = 2 * qJ(3,1);
t336 = t402 + qJ(2,1);
t266 = cos(t336);
t400 = 4 * qJ(3,1);
t268 = cos((t405 + t400));
t748 = t268 + t266;
t395 = -2 * qJ(3,2);
t747 = cos(t397) + cos((t395 + qJ(2,2)));
t247 = cos((t389 + t386));
t361 = cos(qJ(2,3));
t746 = t361 + t247;
t259 = cos((t397 + t394));
t364 = cos(qJ(2,2));
t745 = t364 + t259;
t269 = cos((t405 + t402));
t367 = cos(qJ(2,1));
t744 = t367 + t269;
t353 = sin(qJ(1,3));
t207 = t353 * t719;
t362 = cos(qJ(1,3));
t360 = cos(qJ(3,3));
t702 = pkin(2) * t360;
t202 = pkin(1) + t702;
t351 = sin(qJ(3,3));
t352 = sin(qJ(2,3));
t598 = t351 * t352;
t433 = pkin(2) * t598 - t202 * t361;
t743 = t362 * t433 + t207;
t356 = sin(qJ(1,2));
t208 = t356 * t719;
t365 = cos(qJ(1,2));
t363 = cos(qJ(3,2));
t701 = pkin(2) * t363;
t204 = pkin(1) + t701;
t354 = sin(qJ(3,2));
t355 = sin(qJ(2,2));
t595 = t354 * t355;
t432 = pkin(2) * t595 - t204 * t364;
t742 = t365 * t432 + t208;
t359 = sin(qJ(1,1));
t209 = t359 * t719;
t368 = cos(qJ(1,1));
t366 = cos(qJ(3,1));
t700 = pkin(2) * t366;
t206 = pkin(1) + t700;
t357 = sin(qJ(3,1));
t358 = sin(qJ(2,1));
t592 = t357 * t358;
t431 = pkin(2) * t592 - t206 * t367;
t741 = t368 * t431 + t209;
t740 = 0.2e1 * pkin(1);
t726 = -0.2e1 * pkin(2);
t413 = pkin(2) ^ 2;
t417 = 0.1e1 / pkin(1);
t586 = t413 * t417;
t739 = 0.2e1 * t586;
t738 = 0.4e1 * t586;
t376 = xDP(3);
t323 = qJ(2,3) + qJ(3,3);
t226 = sin(t323);
t390 = 2 * qJ(2,3);
t317 = t386 + t390;
t321 = t390 + qJ(3,3);
t324 = qJ(2,3) - qJ(3,3);
t391 = -2 * qJ(2,3);
t572 = qJ(3,3) + qJ(1,3);
t573 = -qJ(3,3) + qJ(1,3);
t674 = ((cos(qJ(2,3) - t573) + cos(qJ(2,3) + t572)) * t753 + (sin(qJ(1,3) + t391 + t387) + sin(qJ(1,3) + t317) + 0.2e1 * t353) * pkin(2) + (sin(t391 + t573) + sin(qJ(1,3) + t321) + sin(t573) + sin(t572)) * pkin(1)) / ((-sin(t318) + t352) * pkin(2) + (sin(t324) - t226) * pkin(1));
t492 = t674 / 0.2e1;
t446 = t417 * t492;
t377 = xDP(2);
t145 = 0.1e1 / t433;
t307 = 0.1e1 / t351;
t606 = t307 * t417;
t514 = t145 * t606;
t310 = t360 ^ 2;
t139 = -t207 * t598 + (t310 - 0.1e1) * t362 * pkin(2);
t345 = legFrame(3,2);
t277 = sin(t345);
t280 = cos(t345);
t311 = t361 ^ 2;
t502 = t362 * t598;
t725 = 0.2e1 * pkin(2);
t429 = pkin(1) * t502 + (t502 * t725 + t207) * t360;
t538 = t351 * t702;
t559 = 0.2e1 * t702;
t619 = (pkin(1) + t559) * t351;
t286 = pkin(1) * t360;
t178 = t310 * t725 - pkin(2) + t286;
t625 = t178 * t362;
t626 = t178 * t352;
t79 = (-t277 * t625 + t280 * t619) * t311 + (t277 * t429 + t280 * t626) * t361 + t139 * t277 - t280 * t538;
t461 = t79 * t514;
t73 = t377 * t461;
t378 = xDP(1);
t80 = (t277 * t619 + t280 * t625) * t311 + (t277 * t626 - t280 * t429) * t361 - t139 * t280 - t277 * t538;
t460 = t80 * t514;
t74 = t378 * t460;
t695 = -t73 - t74;
t46 = t376 * t446 + t695;
t414 = 0.1e1 / pkin(2);
t607 = t307 * t414;
t130 = -t353 * t433 + t362 * t719;
t653 = t130 * t376;
t597 = t351 * t361;
t537 = pkin(2) * t597;
t618 = t202 * t352;
t148 = t537 + t618;
t116 = -t277 * t148 + t280 * t743;
t666 = t116 * t378;
t115 = -t280 * t148 - t277 * t743;
t668 = t115 * t377;
t423 = (t653 + t666 + t668) * t607;
t70 = t417 * t423;
t31 = t70 + t46;
t332 = qJ(2,2) + qJ(3,2);
t233 = sin(t332);
t398 = 2 * qJ(2,2);
t326 = t394 + t398;
t329 = t398 + qJ(3,2);
t333 = qJ(2,2) - qJ(3,2);
t399 = -2 * qJ(2,2);
t574 = qJ(3,2) + qJ(1,2);
t575 = -qJ(3,2) + qJ(1,2);
t673 = ((cos(qJ(2,2) - t575) + cos(qJ(2,2) + t574)) * t753 + (sin(qJ(1,2) + t399 + t395) + sin(qJ(1,2) + t326) + 0.2e1 * t356) * pkin(2) + (sin(t399 + t575) + sin(qJ(1,2) + t329) + sin(t575) + sin(t574)) * pkin(1)) / ((-sin(t327) + t355) * pkin(2) + (sin(t333) - t233) * pkin(1));
t491 = t673 / 0.2e1;
t445 = t417 * t491;
t146 = 0.1e1 / t432;
t308 = 0.1e1 / t354;
t604 = t308 * t417;
t513 = t146 * t604;
t312 = t363 ^ 2;
t140 = -t208 * t595 + (t312 - 0.1e1) * t365 * pkin(2);
t346 = legFrame(2,2);
t278 = sin(t346);
t281 = cos(t346);
t313 = t364 ^ 2;
t501 = t365 * t595;
t428 = pkin(1) * t501 + (t501 * t725 + t208) * t363;
t536 = t354 * t701;
t558 = 0.2e1 * t701;
t617 = (pkin(1) + t558) * t354;
t287 = pkin(1) * t363;
t179 = t312 * t725 - pkin(2) + t287;
t623 = t179 * t365;
t624 = t179 * t355;
t81 = (-t278 * t623 + t281 * t617) * t313 + (t278 * t428 + t281 * t624) * t364 + t140 * t278 - t281 * t536;
t459 = t81 * t513;
t75 = t377 * t459;
t82 = (t278 * t617 + t281 * t623) * t313 + (t278 * t624 - t281 * t428) * t364 - t140 * t281 - t278 * t536;
t458 = t82 * t513;
t76 = t378 * t458;
t694 = -t75 - t76;
t47 = t376 * t445 + t694;
t605 = t308 * t414;
t131 = -t356 * t432 + t365 * t719;
t652 = t131 * t376;
t594 = t354 * t364;
t535 = pkin(2) * t594;
t616 = t204 * t355;
t149 = t535 + t616;
t118 = -t278 * t149 + t281 * t742;
t662 = t118 * t378;
t117 = -t281 * t149 - t278 * t742;
t664 = t117 * t377;
t422 = (t652 + t662 + t664) * t605;
t71 = t417 * t422;
t32 = t71 + t47;
t341 = qJ(2,1) + qJ(3,1);
t240 = sin(t341);
t406 = 2 * qJ(2,1);
t335 = t402 + t406;
t339 = t406 + qJ(3,1);
t342 = qJ(2,1) - qJ(3,1);
t407 = -2 * qJ(2,1);
t576 = qJ(3,1) + qJ(1,1);
t577 = -qJ(3,1) + qJ(1,1);
t672 = ((cos(qJ(2,1) - t577) + cos(qJ(2,1) + t576)) * t753 + (sin(qJ(1,1) + t407 + t403) + sin(qJ(1,1) + t335) + 0.2e1 * t359) * pkin(2) + (sin(t407 + t577) + sin(qJ(1,1) + t339) + sin(t577) + sin(t576)) * pkin(1)) / ((-sin(t336) + t358) * pkin(2) + (sin(t342) - t240) * pkin(1));
t490 = t672 / 0.2e1;
t444 = t417 * t490;
t147 = 0.1e1 / t431;
t309 = 0.1e1 / t357;
t602 = t309 * t417;
t512 = t147 * t602;
t314 = t366 ^ 2;
t141 = -t209 * t592 + (t314 - 0.1e1) * t368 * pkin(2);
t347 = legFrame(1,2);
t279 = sin(t347);
t282 = cos(t347);
t315 = t367 ^ 2;
t500 = t368 * t592;
t427 = pkin(1) * t500 + (t500 * t725 + t209) * t366;
t534 = t357 * t700;
t557 = 0.2e1 * t700;
t615 = (pkin(1) + t557) * t357;
t288 = pkin(1) * t366;
t180 = t314 * t725 - pkin(2) + t288;
t621 = t180 * t368;
t622 = t180 * t358;
t83 = (-t279 * t621 + t282 * t615) * t315 + (t279 * t427 + t282 * t622) * t367 + t141 * t279 - t282 * t534;
t457 = t83 * t512;
t77 = t377 * t457;
t84 = (t279 * t615 + t282 * t621) * t315 + (t279 * t622 - t282 * t427) * t367 - t141 * t282 - t279 * t534;
t456 = t84 * t512;
t78 = t378 * t456;
t693 = -t77 - t78;
t48 = t376 * t444 + t693;
t603 = t309 * t414;
t132 = -t359 * t431 + t368 * t719;
t651 = t132 * t376;
t591 = t357 * t367;
t533 = pkin(2) * t591;
t614 = t206 * t358;
t150 = t533 + t614;
t120 = -t279 * t150 + t282 * t741;
t658 = t120 * t378;
t119 = -t282 * t150 - t279 * t741;
t660 = t119 * t377;
t421 = (t651 + t658 + t660) * t603;
t72 = t417 * t421;
t33 = t72 + t48;
t585 = t414 * t417;
t503 = t309 * t585;
t736 = (t658 / 0.2e1 + t660 / 0.2e1 + t651 / 0.2e1) * t503;
t504 = t308 * t585;
t735 = (t662 / 0.2e1 + t664 / 0.2e1 + t652 / 0.2e1) * t504;
t505 = t307 * t585;
t734 = (t666 / 0.2e1 + t668 / 0.2e1 + t653 / 0.2e1) * t505;
t716 = m(3) * rSges(3,2);
t548 = t357 * t716;
t383 = pkin(1) * m(3);
t569 = -m(2) * rSges(2,1) - t383;
t690 = rSges(3,1) * t366;
t156 = -m(3) * t690 + t548 + t569;
t183 = rSges(3,1) * t357 + rSges(3,2) * t366;
t374 = m(2) * rSges(2,2);
t162 = m(3) * t183 + t374;
t733 = -t156 * t367 - t162 * t358;
t549 = t354 * t716;
t691 = rSges(3,1) * t363;
t155 = -m(3) * t691 + t549 + t569;
t182 = rSges(3,1) * t354 + rSges(3,2) * t363;
t161 = m(3) * t182 + t374;
t732 = -t155 * t364 - t161 * t355;
t550 = t351 * t716;
t692 = rSges(3,1) * t360;
t154 = -m(3) * t692 + t550 + t569;
t181 = rSges(3,1) * t351 + rSges(3,2) * t360;
t160 = m(3) * t181 + t374;
t731 = -t154 * t361 - t160 * t352;
t729 = -0.3e1 * pkin(1);
t728 = -0.2e1 * pkin(1);
t727 = -0.6e1 * pkin(2);
t724 = -0.2e1 * t46;
t723 = -0.2e1 * t47;
t722 = -0.2e1 * t48;
t718 = m(1) * rSges(1,1);
t409 = rSges(2,2) ^ 2;
t411 = rSges(2,1) ^ 2;
t416 = pkin(1) ^ 2;
t176 = t416 * m(3) + (-t409 + t411) * m(2) + Icges(2,2) - Icges(2,1);
t715 = t176 / 0.2e1;
t408 = rSges(3,2) ^ 2;
t410 = rSges(3,1) ^ 2;
t184 = m(3) * (-t408 + t410) - Icges(3,1) + Icges(3,2);
t714 = t184 / 0.2e1;
t221 = sin(t317);
t712 = t221 / 0.2e1;
t228 = sin(t326);
t711 = t228 / 0.2e1;
t235 = sin(t335);
t710 = t235 / 0.2e1;
t708 = -t413 / 0.2e1;
t707 = t413 / 0.2e1;
t706 = -t416 / 0.2e1;
t704 = pkin(1) * (-0.3e1 * t413 + t416);
t703 = pkin(1) * t413;
t699 = pkin(2) * t416;
t25 = t413 * t31;
t40 = t416 * t46;
t698 = t25 + t40;
t26 = t413 * t32;
t41 = t416 * t47;
t697 = t26 + t41;
t27 = t413 * t33;
t42 = t416 * t48;
t696 = t27 + t42;
t689 = t145 * t79;
t688 = t145 * t80;
t177 = rSges(2,1) * t717 + pkin(1) * t705 - Icges(2,5);
t193 = rSges(3,2) * t705 - Icges(3,6);
t194 = rSges(3,1) * t705 - Icges(3,5);
t212 = rSges(2,2) * t717 - Icges(2,6);
t97 = (t193 * t351 - t194 * t360 - t177) * t352 - (t193 * t360 + t194 * t351 + t212) * t361;
t687 = t145 * t97;
t686 = t146 * t81;
t685 = t146 * t82;
t98 = (t193 * t354 - t194 * t363 - t177) * t355 - (t193 * t363 + t194 * t354 + t212) * t364;
t684 = t146 * t98;
t683 = t147 * t83;
t682 = t147 * t84;
t99 = (t193 * t357 - t194 * t366 - t177) * t358 - (t193 * t366 + t194 * t357 + t212) * t367;
t681 = t147 * t99;
t680 = t181 * t70;
t679 = t182 * t71;
t678 = t183 * t72;
t249 = cos(t323);
t173 = 0.1e1 / (pkin(1) * t361 + pkin(2) * t249);
t112 = (-t362 * t376 + (t277 * t377 - t280 * t378) * t353) * t173;
t671 = t112 * t719;
t261 = cos(t332);
t174 = 0.1e1 / (pkin(1) * t364 + pkin(2) * t261);
t113 = (-t365 * t376 + (t278 * t377 - t281 * t378) * t356) * t174;
t670 = t113 * t719;
t272 = cos(t341);
t175 = 0.1e1 / (pkin(1) * t367 + pkin(2) * t272);
t114 = (-t368 * t376 + (t279 * t377 - t282 * t378) * t359) * t175;
t669 = t114 * t719;
t667 = t115 * t414;
t665 = t116 * t414;
t663 = t117 * t414;
t661 = t118 * t414;
t659 = t119 * t414;
t657 = t120 * t414;
t196 = pkin(1) * t550;
t283 = t408 + t410;
t200 = t416 + t283;
t285 = t409 + t411;
t440 = m(2) * t285 + Icges(2,3) + Icges(3,3);
t547 = pkin(1) * t692;
t127 = -0.2e1 * t196 + (t200 + 0.2e1 * t547) * m(3) + t440;
t656 = t127 * t145;
t197 = pkin(1) * t549;
t546 = pkin(1) * t691;
t128 = -0.2e1 * t197 + (t200 + 0.2e1 * t546) * m(3) + t440;
t655 = t128 * t146;
t198 = pkin(1) * t548;
t545 = pkin(1) * t690;
t129 = -0.2e1 * t198 + (t200 + 0.2e1 * t545) * m(3) + t440;
t654 = t129 * t147;
t133 = -t193 * t249 - t194 * t226;
t650 = t133 * t414;
t134 = -t193 * t261 - t194 * t233;
t649 = t134 * t414;
t135 = -t193 * t272 - t194 * t240;
t648 = t135 * t414;
t142 = Icges(3,3) - t196 + (t283 + t547) * m(3);
t647 = t142 * t145;
t646 = t142 * t414;
t143 = Icges(3,3) - t197 + (t283 + t546) * m(3);
t645 = t143 * t146;
t644 = t143 * t414;
t144 = Icges(3,3) - t198 + (t283 + t545) * m(3);
t643 = t144 * t147;
t642 = t144 * t414;
t635 = t173 * t353;
t634 = t173 * t362;
t633 = t174 * t356;
t632 = t174 * t365;
t631 = t175 * t359;
t630 = t175 * t368;
t294 = sin(t390);
t629 = t176 * t294;
t297 = sin(t398);
t628 = t176 * t297;
t300 = sin(t406);
t627 = t176 * t300;
t192 = m(3) * t283 + Icges(3,3);
t620 = t192 * t414;
t210 = rSges(3,1) * t716 - Icges(3,4);
t243 = cos(t317);
t613 = t210 * t243;
t253 = cos(t326);
t612 = t210 * t253;
t265 = cos(t335);
t611 = t210 * t265;
t213 = rSges(2,1) * t374 - Icges(2,4);
t302 = cos(t390);
t610 = t213 * t302;
t304 = cos(t398);
t609 = t213 * t304;
t306 = cos(t406);
t608 = t213 * t306;
t601 = t310 * t413;
t600 = t312 * t413;
t599 = t314 * t413;
t596 = t352 * t719;
t593 = t355 * t719;
t590 = t358 * t719;
t589 = t719 * t413;
t588 = t719 * t416;
t587 = (pkin(2) + pkin(1)) * (-pkin(2) + pkin(1));
t319 = t387 + t390;
t415 = pkin(1) * t416;
t584 = t415 * sin(t319);
t331 = t398 + t395;
t583 = t415 * sin(t331);
t337 = t403 + t406;
t582 = t415 * sin(t337);
t322 = t390 - qJ(3,3);
t581 = t416 * sin(t322);
t330 = t398 - qJ(3,2);
t580 = t416 * sin(t330);
t340 = t406 - qJ(3,1);
t579 = t416 * sin(t340);
t578 = -0.2e1 * t383;
t343 = t719 ^ 2;
t571 = 0.4e1 / 0.3e1 * t343 + t416;
t570 = 0.2e1 / 0.3e1 * t413 + t416;
t289 = t413 + t416;
t568 = t416 - t413;
t567 = (0.9e1 / 0.2e1 * t413 + t416 + (2 * t343)) * t740;
t566 = (0.3e1 * t413 + t571) * t729;
t565 = (0.2e1 * t413 + t571) * t729;
t564 = -0.3e1 * t703;
t563 = 0.5e1 * t703;
t562 = -0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t343 + t570);
t561 = (0.2e1 / 0.3e1 * t343 + t570) * t727;
t215 = t343 + t413;
t560 = 0.4e1 * pkin(2) * t215;
t556 = 0.3e1 * t699;
t555 = t417 * t726;
t544 = t383 / 0.2e1;
t543 = 0.2e1 * t589;
t542 = -0.2e1 * t588;
t532 = pkin(2) * t581;
t531 = pkin(2) * t580;
t530 = pkin(2) * t579;
t385 = 3 * qJ(3,3);
t529 = sin(t385) * t699;
t393 = 3 * qJ(3,2);
t528 = sin(t393) * t699;
t401 = 3 * qJ(3,1);
t527 = sin(t401) * t699;
t526 = t376 * t674;
t525 = t376 * t673;
t524 = t376 * t672;
t517 = t130 * t607;
t516 = t131 * t605;
t515 = t132 * t603;
t511 = t277 * t635;
t510 = t280 * t635;
t509 = t278 * t633;
t508 = t281 * t633;
t507 = t279 * t631;
t506 = t282 * t631;
t499 = t719 * t587;
t497 = 2 * t554;
t496 = -4 * t554;
t487 = 0.2e1 / 0.3e1 * t585;
t441 = t378 * t487;
t442 = t377 * t487;
t443 = t376 * t487;
t495 = (t115 * t442 + t116 * t441 + t130 * t443) * t307;
t494 = (t117 * t442 + t118 * t441 + t131 * t443) * t308;
t493 = (t119 * t442 + t120 * t441 + t132 * t443) * t309;
t489 = t376 * t417 / 0.3e1;
t488 = t587 / 0.2e1;
t486 = t413 * t695;
t485 = t413 * t694;
t484 = t413 * t693;
t477 = t587 * t726;
t412 = pkin(2) * t413;
t475 = t412 - 0.3e1 * t699;
t474 = t476 * g(3);
t473 = t112 * t554;
t472 = t113 * t554;
t471 = t114 * t554;
t109 = t112 ^ 2;
t22 = t46 + t734;
t316 = t385 + t390;
t220 = sin(t316);
t320 = t390 + t384;
t223 = sin(t320);
t224 = sin(t321);
t241 = cos((t385 + t389));
t242 = cos((t385 + qJ(2,3)));
t245 = cos((qJ(3,3) + t389));
t248 = cos(t321);
t250 = cos(t324);
t274 = t706 + t413;
t275 = t416 + t708;
t293 = sin(t386);
t388 = 4 * qJ(2,3);
t12 = (((-t581 / 0.2e1 + t220 * t707 + t224 * t488 + t289 * t351 + (t221 + t293 - t294) * t720) * t31 - ((-t247 / 0.4e1 + t246 / 0.4e1 + t244 / 0.4e1 - t361 / 0.4e1) * pkin(2) + (t241 / 0.4e1 - t245 / 0.4e1 + t242 / 0.4e1 - t249 / 0.4e1) * pkin(1)) * t671) * t70 * t555 + ((t70 * t242 * t497 + t746 * (t40 - t25) * t753 + t752 * t31 * t543 + ((sin((t388 + t384)) + t223) * t564 + sin((qJ(3,3) + t388)) * t556 - sin((t386 + t388)) * t704 + t475 * sin((t388 + t385)) - t412 * sin((5 * qJ(3,3) + t388)) + t415 * sin(t388) + t220 * t561 + t221 * t565 + t224 * t560 + t293 * t566 + t294 * t567 + t351 * t562 - 0.3e1 * t529 + 0.6e1 * t532 + t584) * t112 + (t250 * t496 + t751 * t542) * t46 + ((t46 - t734) * t249 - (-t241 + t245) * t22) * t754) * t112 / 0.4e1 + (-(t423 * t738 + t526 * t739 + t40 + 0.4e1 * t486) * pkin(1) * t221 + t698 * t220 * t726 + 0.4e1 * t22 * t532 - t46 * t223 * t703 + t46 * t584 + t31 * t224 * t477 + (0.3e1 * t486 + t40 + (0.3e1 / 0.2e1 * t526 + 0.2e1 * t423) * t586) * t293 * t728 + ((0.4e1 / 0.5e1 * t666 + 0.4e1 / 0.5e1 * t668 + 0.4e1 / 0.5e1 * t653) * t505 + t46) * t294 * t563 + t529 * t724 + t351 * ((-0.2e1 / 0.3e1 * t74 - 0.2e1 / 0.3e1 * t73 + t489 * t674 + t495) * t413 + t416 * (t495 + t46)) * t727 + 0.2e1 * (t241 + t249) * t473 - 0.2e1 * (t250 + t245) * t473 + (t746 * t499 - t751 * t588 + t752 * t589) * t112) * t46 / 0.2e1) * t417) / (t274 * t243 + cos(t320) * t708 + cos(t319) * t706 + t275 * t302 - t289 * cos(t386) + (-cos(t322) - cos(t316) - cos(t385) + 0.2e1 * t248 + t360) * t720 + t289);
t13 = (t226 * t671 + t31 * (t286 + pkin(2))) * t70 * t606 + (((0.2e1 * t22 * t286 - (-t352 * t360 - t597) * t671) * pkin(2) + t698) * t46 + (t46 * t596 * t740 + ((pkin(1) * t559 + t568 + 0.2e1 * t601) * t311 - 0.2e1 * t618 * t537 - t601 + t215) * t112 + (t537 * t719 + t596 * t702) * t31) * t112) * t505;
t16 = (t352 * pkin(1) * t724 + t31 * t226 * t726 - t671) * t112 * t173;
t166 = g(1) * t277 + g(2) * t280;
t43 = t46 ^ 2;
t169 = g(1) * t280 - g(2) * t277;
t436 = g(3) * t353 - t169 * t362;
t439 = rSges(3,1) * t224 + rSges(3,2) * t248;
t94 = t109 * t184 * t712;
t464 = (-t133 * t16 - t142 * t12 - t192 * t13 + t94 + t109 * t613 + (0.2e1 * t43 * t181 + (t181 + t439) * t109) * t544 + ((-rSges(3,1) * t166 - rSges(3,2) * t436) * t249 + t226 * (-rSges(3,1) * t436 + rSges(3,2) * t166)) * m(3)) * t505;
t325 = t392 + t398;
t227 = sin(t325);
t328 = t398 + t393;
t229 = sin(t328);
t23 = t47 + t735;
t230 = sin(t329);
t252 = cos((t393 + qJ(2,2)));
t255 = cos((qJ(3,2) + t397));
t258 = cos((t397 + t393));
t260 = cos(t329);
t262 = cos(t333);
t296 = sin(t394);
t396 = 4 * qJ(2,2);
t10 = (((-t580 / 0.2e1 + t229 * t707 + t230 * t488 + t289 * t354 + (t228 + t296 - t297) * t720) * t32 - ((-t259 / 0.4e1 + t257 / 0.4e1 + t254 / 0.4e1 - t364 / 0.4e1) * pkin(2) + (t258 / 0.4e1 - t255 / 0.4e1 + t252 / 0.4e1 - t261 / 0.4e1) * pkin(1)) * t670) * t71 * t555 + ((t71 * t252 * t497 + t745 * (t41 - t26) * t753 + t750 * t32 * t543 + ((sin((t396 + t392)) + t227) * t564 + sin((qJ(3,2) + t396)) * t556 + t475 * sin((t393 + t396)) - t412 * sin((5 * qJ(3,2) + t396)) - sin((t396 + t394)) * t704 + t415 * sin(t396) + t228 * t565 + t229 * t561 + t230 * t560 + t296 * t566 + t297 * t567 + t354 * t562 - 0.3e1 * t528 + 0.6e1 * t531 + t583) * t113 + (t262 * t496 + t747 * t542) * t47 + ((t47 - t735) * t261 - (-t258 + t255) * t23) * t754) * t113 / 0.4e1 + (t697 * t229 * t726 - (t422 * t738 + t525 * t739 + t41 + 0.4e1 * t485) * pkin(1) * t228 + 0.4e1 * t23 * t531 + t47 * t583 - t47 * t227 * t703 + t32 * t230 * t477 + (0.3e1 * t485 + t41 + (0.3e1 / 0.2e1 * t525 + 0.2e1 * t422) * t586) * t296 * t728 + ((0.4e1 / 0.5e1 * t662 + 0.4e1 / 0.5e1 * t664 + 0.4e1 / 0.5e1 * t652) * t504 + t47) * t297 * t563 + t528 * t723 + t354 * ((-0.2e1 / 0.3e1 * t76 - 0.2e1 / 0.3e1 * t75 + t489 * t673 + t494) * t413 + t416 * (t494 + t47)) * t727 + 0.2e1 * (t258 + t261) * t472 - 0.2e1 * (t262 + t255) * t472 + (t745 * t499 - t747 * t588 + t750 * t589) * t113) * t47 / 0.2e1) * t417) / (t274 * t253 + cos(t331) * t706 + cos(t325) * t708 + t275 * t304 - t289 * cos(t394) + (-cos(t330) - cos(t328) - cos(t393) + 0.2e1 * t260 + t363) * t720 + t289);
t110 = t113 ^ 2;
t14 = (t233 * t670 + t32 * (t287 + pkin(2))) * t71 * t604 + (((0.2e1 * t23 * t287 - (-t355 * t363 - t594) * t670) * pkin(2) + t697) * t47 + (t47 * t593 * t740 + ((pkin(1) * t558 + t568 + 0.2e1 * t600) * t313 - 0.2e1 * t616 * t535 - t600 + t215) * t113 + (t535 * t719 + t593 * t701) * t32) * t113) * t504;
t167 = g(1) * t278 + g(2) * t281;
t17 = (t355 * pkin(1) * t723 + t32 * t233 * t726 - t670) * t113 * t174;
t170 = g(1) * t281 - g(2) * t278;
t435 = g(3) * t356 - t170 * t365;
t438 = rSges(3,1) * t230 + rSges(3,2) * t260;
t44 = t47 ^ 2;
t95 = t110 * t184 * t711;
t463 = (-t134 * t17 - t143 * t10 - t192 * t14 + t95 + t110 * t612 + (0.2e1 * t44 * t182 + (t182 + t438) * t110) * t544 + ((-rSges(3,1) * t167 - rSges(3,2) * t435) * t261 + t233 * (-rSges(3,1) * t435 + rSges(3,2) * t167)) * m(3)) * t504;
t334 = t401 + t406;
t234 = sin(t334);
t338 = t406 + t400;
t237 = sin(t338);
t238 = sin(t339);
t24 = t48 + t736;
t263 = cos((t401 + t405));
t264 = cos((t401 + qJ(2,1)));
t270 = cos((t405 + qJ(3,1)));
t271 = cos(t339);
t273 = cos(t342);
t299 = sin(t402);
t404 = 4 * qJ(2,1);
t11 = (((-t579 / 0.2e1 + t234 * t707 + t238 * t488 + t289 * t357 + (t235 + t299 - t300) * t720) * t33 - ((-t269 / 0.4e1 + t268 / 0.4e1 + t266 / 0.4e1 - t367 / 0.4e1) * pkin(2) + (t263 / 0.4e1 - t270 / 0.4e1 + t264 / 0.4e1 - t272 / 0.4e1) * pkin(1)) * t669) * t72 * t555 + ((t72 * t264 * t497 + t744 * (t42 - t27) * t753 + t748 * t33 * t543 + ((sin((t404 + t400)) + t237) * t564 + sin((t404 + qJ(3,1))) * t556 - sin((t404 + t402)) * t704 + t475 * sin((t404 + t401)) - t412 * sin((5 * qJ(3,1) + t404)) + t415 * sin(t404) + t234 * t561 + t235 * t565 + t238 * t560 + t299 * t566 + t300 * t567 + t357 * t562 - 0.3e1 * t527 + 0.6e1 * t530 + t582) * t114 + (t273 * t496 + t749 * t542) * t48 + ((t48 - t736) * t272 - (-t263 + t270) * t24) * t754) * t114 / 0.4e1 + (-(t421 * t738 + t524 * t739 + t42 + 0.4e1 * t484) * pkin(1) * t235 + t696 * t234 * t726 + 0.4e1 * t24 * t530 - t48 * t237 * t703 + t48 * t582 + t33 * t238 * t477 + (0.3e1 * t484 + t42 + (0.3e1 / 0.2e1 * t524 + 0.2e1 * t421) * t586) * t299 * t728 + ((0.4e1 / 0.5e1 * t658 + 0.4e1 / 0.5e1 * t660 + 0.4e1 / 0.5e1 * t651) * t503 + t48) * t300 * t563 + t527 * t722 + t357 * ((-0.2e1 / 0.3e1 * t78 - 0.2e1 / 0.3e1 * t77 + t489 * t672 + t493) * t413 + t416 * (t493 + t48)) * t727 + 0.2e1 * (t263 + t272) * t471 - 0.2e1 * (t273 + t270) * t471 + (t744 * t499 - t749 * t588 + t748 * t589) * t114) * t48 / 0.2e1) * t417) / (t274 * t265 + cos(t338) * t708 + cos(t337) * t706 + t275 * t306 - t289 * cos(t402) + (-cos(t340) - cos(t334) - cos(t401) + 0.2e1 * t271 + t366) * t720 + t289);
t111 = t114 ^ 2;
t15 = (t240 * t669 + t33 * (t288 + pkin(2))) * t72 * t602 + (((0.2e1 * t24 * t288 - (-t358 * t366 - t591) * t669) * pkin(2) + t696) * t48 + (t48 * t590 * t740 + ((pkin(1) * t557 + t568 + 0.2e1 * t599) * t315 - 0.2e1 * t614 * t533 - t599 + t215) * t114 + (t533 * t719 + t590 * t700) * t33) * t114) * t503;
t168 = g(1) * t279 + g(2) * t282;
t18 = (t358 * pkin(1) * t722 + t33 * t240 * t726 - t669) * t114 * t175;
t171 = g(1) * t282 - g(2) * t279;
t434 = g(3) * t359 - t171 * t368;
t437 = rSges(3,1) * t238 + rSges(3,2) * t271;
t45 = t48 ^ 2;
t96 = t111 * t184 * t710;
t462 = (-t135 * t18 - t144 * t11 - t192 * t15 + t96 + t111 * t611 + (0.2e1 * t45 * t183 + (t183 + t437) * t111) * t544 + ((-rSges(3,1) * t168 - rSges(3,2) * t434) * t272 + t240 * (-rSges(3,1) * t434 + rSges(3,2) * t168)) * m(3)) * t503;
t430 = t369 ^ 2 + t408 / 0.2e1 + t410 / 0.2e1 + t416 / 0.2e1;
t420 = Icges(1,3) + Icges(2,1) / 0.2e1 + Icges(3,1) / 0.2e1 + Icges(2,2) / 0.2e1 + Icges(3,2) / 0.2e1 + ((2 * rSges(2,3) ^ 2) + t285) * m(2) / 0.2e1 + (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1);
t350 = xDDP(1);
t349 = xDDP(2);
t348 = xDDP(3);
t291 = g(3) * t718;
t211 = 0.2e1 * t210;
t87 = t265 * t714 - t211 * t710 + t306 * t715 - t300 * t213 - t198 + ((-rSges(3,2) * t238 + (t271 + t366) * rSges(3,1)) * pkin(1) + t430) * m(3) + t420;
t86 = t253 * t714 - t211 * t711 + t304 * t715 - t297 * t213 - t197 + ((-rSges(3,2) * t230 + (t260 + t363) * rSges(3,1)) * pkin(1) + t430) * m(3) + t420;
t85 = t243 * t714 - t211 * t712 + t302 * t715 - t294 * t213 - t196 + ((-rSges(3,2) * t224 + (t248 + t360) * rSges(3,1)) * pkin(1) + t430) * m(3) + t420;
t69 = -t135 * t630 + (t144 * t490 + t192 * t515) * t417;
t68 = -t134 * t632 + (t143 * t491 + t192 * t516) * t417;
t67 = -t133 * t634 + (t142 * t492 + t192 * t517) * t417;
t66 = -t99 * t630 + (t129 * t490 + t144 * t515) * t417;
t65 = -t98 * t632 + (t128 * t491 + t143 * t516) * t417;
t64 = -t97 * t634 + (t127 * t492 + t142 * t517) * t417;
t63 = -t135 * t506 + (t120 * t620 - t643 * t84) * t602;
t62 = -t134 * t508 + (t118 * t620 - t645 * t82) * t604;
t61 = -t133 * t510 + (t116 * t620 - t647 * t80) * t606;
t60 = t135 * t507 + (t119 * t620 - t643 * t83) * t602;
t59 = t134 * t509 + (t117 * t620 - t645 * t81) * t604;
t58 = t133 * t511 + (t115 * t620 - t647 * t79) * t606;
t57 = -t99 * t506 + (t120 * t642 - t654 * t84) * t602;
t56 = -t98 * t508 + (t118 * t644 - t655 * t82) * t604;
t55 = -t97 * t510 + (t116 * t646 - t656 * t80) * t606;
t54 = t99 * t507 + (t119 * t642 - t654 * t83) * t602;
t53 = t98 * t509 + (t117 * t644 - t655 * t81) * t604;
t52 = t97 * t511 + (t115 * t646 - t656 * t79) * t606;
t51 = -t87 * t630 + (t135 * t515 + t490 * t99) * t417;
t50 = -t86 * t632 + (t134 * t516 + t491 * t98) * t417;
t49 = -t85 * t634 + (t133 * t517 + t492 * t97) * t417;
t39 = -t87 * t506 + (t120 * t648 - t681 * t84) * t602;
t38 = -t86 * t508 + (t118 * t649 - t684 * t82) * t604;
t37 = -t85 * t510 + (t116 * t650 - t687 * t80) * t606;
t36 = t87 * t507 + (t119 * t648 - t681 * t83) * t602;
t35 = t86 * t509 + (t117 * t649 - t684 * t81) * t604;
t34 = t85 * t511 + (t115 * t650 - t687 * t79) * t606;
t6 = -t99 * t18 - t129 * t11 - t144 * t15 + t96 + t24 * t578 * t678 + (t156 * t434 + t162 * t168) * t358 + (t156 * t168 - t162 * t434) * t367 + (t611 + t627 / 0.2e1 + t608 + t437 * t383) * t111;
t5 = -t98 * t17 - t128 * t10 - t143 * t14 + t95 + t23 * t578 * t679 + (t155 * t435 + t161 * t167) * t355 + (t155 * t167 - t161 * t435) * t364 + (t612 + t628 / 0.2e1 + t609 + t438 * t383) * t110;
t4 = -t97 * t16 - t127 * t12 - t142 * t13 + t94 + t22 * t578 * t680 + (t154 * t436 + t160 * t166) * t352 + (t154 * t166 - t160 * t436) * t361 + (t613 + t629 / 0.2e1 + t610 + t439 * t383) * t109;
t3 = -t87 * t18 - t99 * t11 - t135 * t15 + (t733 * g(3) + t291) * t368 - t474 * t359 + (-t177 * t367 + t212 * t358) * t45 + (t193 * t240 - t194 * t272) * t33 ^ 2 + (t476 * t368 + (t718 + t733) * t359) * t171 + ((-0.2e1 * t608 - t627) * t48 + (-t184 * t235 - 0.2e1 * t611) * t33 + (-0.2e1 * t24 * t437 - t678) * t383) * t114;
t2 = -t86 * t17 - t98 * t10 - t134 * t14 + (t732 * g(3) + t291) * t365 - t474 * t356 + (-t177 * t364 + t212 * t355) * t44 + (t193 * t233 - t194 * t261) * t32 ^ 2 + (t476 * t365 + (t718 + t732) * t356) * t170 + ((-0.2e1 * t609 - t628) * t47 + (-t184 * t228 - 0.2e1 * t612) * t32 + (-0.2e1 * t23 * t438 - t679) * t383) * t113;
t1 = -t85 * t16 - t97 * t12 - t133 * t13 + (t731 * g(3) + t291) * t362 - t474 * t353 + (-t177 * t361 + t212 * t352) * t43 + (t193 * t226 - t194 * t249) * t31 ^ 2 + (t476 * t362 + (t718 + t731) * t353) * t169 + ((-0.2e1 * t610 - t629) * t46 + (-t184 * t221 - 0.2e1 * t613) * t31 + (-0.2e1 * t22 * t439 - t680) * t383) * t112;
t7 = [-m(4) * g(1) - t1 * t510 + t116 * t464 + t118 * t463 + t120 * t462 - t2 * t508 - t3 * t506 - t4 * t460 - t6 * t456 - t5 * t458 + (t39 * t507 + (-t57 * t683 + t63 * t659) * t602 + t38 * t509 + (-t56 * t686 + t62 * t663) * t604 + t37 * t511 + (-t55 * t689 + t61 * t667) * t606) * t349 + (-t37 * t634 - t38 * t632 - t39 * t630 + (t490 * t57 + t491 * t56 + t492 * t55 + t515 * t63 + t516 * t62 + t517 * t61) * t417) * t348 + (-t39 * t506 + (-t57 * t682 + t63 * t657) * t602 - t38 * t508 + (-t56 * t685 + t62 * t661) * t604 - t37 * t510 + (-t55 * t688 + t61 * t665) * t606 + m(4)) * t350; -m(4) * g(2) + t1 * t511 + t115 * t464 + t117 * t463 + t119 * t462 + t2 * t509 + t3 * t507 - t4 * t461 - t6 * t457 - t5 * t459 + (-t36 * t506 + (-t54 * t682 + t60 * t657) * t602 - t35 * t508 + (-t53 * t685 + t59 * t661) * t604 - t34 * t510 + (-t52 * t688 + t58 * t665) * t606) * t350 + (-t34 * t634 - t35 * t632 - t36 * t630 + (t490 * t54 + t491 * t53 + t492 * t52 + t515 * t60 + t516 * t59 + t517 * t58) * t417) * t348 + (t36 * t507 + (-t54 * t683 + t60 * t659) * t602 + t35 * t509 + (-t53 * t686 + t59 * t663) * t604 + t34 * t511 + (-t52 * t689 + t58 * t667) * t606 + m(4)) * t349; -m(4) * g(3) - t1 * t634 + t130 * t464 + t131 * t463 + t132 * t462 - t2 * t632 - t3 * t630 + t4 * t446 + t6 * t444 + t5 * t445 + (-t51 * t506 + (t657 * t69 - t66 * t682) * t602 - t50 * t508 + (-t65 * t685 + t661 * t68) * t604 - t49 * t510 + (-t64 * t688 + t665 * t67) * t606) * t350 + (t51 * t507 + (t659 * t69 - t66 * t683) * t602 + t50 * t509 + (-t65 * t686 + t663 * t68) * t604 + t49 * t511 + (-t64 * t689 + t667 * t67) * t606) * t349 + (-t49 * t634 - t50 * t632 - t51 * t630 + m(4) + (t490 * t66 + t491 * t65 + t492 * t64 + t515 * t69 + t516 * t68 + t517 * t67) * t417) * t348;];
tauX  = t7;
