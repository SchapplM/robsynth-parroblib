% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRRRR7V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3x18]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 10:08
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(7,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V2G2A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 09:52:28
% EndTime: 2020-08-07 09:57:40
% DurationCPUTime: 332.94s
% Computational Cost: add. (4691421->1800), mult. (10213713->3000), div. (74106->37), fcn. (5728686->186), ass. (0->1237)
t3959 = 2 * pkin(1);
t3958 = 4 * pkin(2);
t3957 = 2 * pkin(1);
t3053 = sin(qJ(3,3));
t2975 = 0.1e1 / t3053;
t3050 = legFrame(3,2);
t2919 = sin(t3050);
t2922 = cos(t3050);
t3072 = xDP(2);
t3073 = xDP(1);
t2676 = -t2919 * t3072 + t2922 * t3073;
t3074 = pkin(5) + pkin(6);
t2974 = pkin(7) + t3074;
t3055 = sin(qJ(1,3));
t2789 = t3055 * t2974;
t3064 = cos(qJ(1,3));
t2944 = pkin(1) * t3064;
t3071 = xDP(3);
t2684 = t3071 * (t2944 + t2789);
t2939 = pkin(1) * t3055;
t3639 = t3064 * t2974;
t2597 = t2684 / 0.2e1 + t2676 * (t2939 - t3639 / 0.2e1);
t2673 = t2919 * t3073 + t2922 * t3072;
t2667 = pkin(1) * t2673;
t3054 = sin(qJ(2,3));
t3665 = t3054 * t3055;
t3440 = t2676 * t3665;
t2598 = -pkin(2) * t3440 + t2667;
t3660 = t3055 * t3073;
t3661 = t3055 * t3072;
t3251 = -t2919 * t3661 + t2922 * t3660;
t2604 = t3251 * pkin(1) + t2684;
t3062 = cos(qJ(3,3));
t2929 = t3062 * pkin(3);
t2802 = t2929 + pkin(2);
t2925 = t3053 * pkin(1);
t2985 = t3062 ^ 2;
t3844 = t2985 - 0.1e1;
t3560 = pkin(3) * t3844;
t3063 = cos(qJ(2,3));
t3666 = t3053 * t3063;
t2616 = t2802 * t3666 + t3054 * t3560 + t2925;
t3725 = t2676 * t3055;
t2646 = pkin(2) * t3725;
t3732 = t2673 * t3054;
t2649 = pkin(2) * t3732;
t2652 = pkin(1) * t3732;
t3667 = t3053 * t3054;
t3527 = pkin(3) * t3667;
t2751 = pkin(1) - t3527;
t3704 = t2802 * t3063;
t2664 = t2751 + t3704;
t2725 = t2939 - t3639;
t2779 = pkin(1) * t2789;
t3112 = pkin(3) ^ 2;
t3045 = t3112 / 0.2e1;
t3119 = pkin(1) ^ 2;
t2912 = t3045 + t3119;
t3116 = pkin(2) ^ 2;
t3049 = t3116 / 0.2e1;
t2782 = t3049 + t2912;
t2826 = 0.2e1 / 0.3e1 * pkin(5) + 0.2e1 / 0.3e1 * pkin(6) + 0.2e1 / 0.3e1 * pkin(7);
t3046 = -t3112 / 0.2e1;
t2911 = t3046 + t3116;
t2935 = pkin(3) * t2985;
t2954 = t3112 + t3119;
t3084 = 0.2e1 * qJ(3,3);
t2956 = sin(t3084);
t2984 = t3062 * t2985;
t2987 = t3063 ^ 2;
t2986 = t3063 * t2987;
t3254 = t2676 * (t2939 - t3639 / 0.3e1);
t3623 = (pkin(2) + pkin(3)) * (pkin(2) - pkin(3));
t3563 = 0.2e1 * t3623;
t3257 = t3563 * t3725;
t3088 = 0.2e1 * qJ(2,3);
t2966 = cos(t3088);
t3629 = t3071 * t3064;
t3290 = t2616 * t2966 * t3629;
t3640 = t3062 * t3063;
t3292 = t3640 * t3667;
t3518 = pkin(2) * t3629;
t3367 = t3054 * t3518;
t3726 = t2676 * t2725;
t3385 = t2649 + t3726;
t2957 = sin(t3088);
t3423 = t2957 * t3629;
t3426 = t2725 * t3667;
t3439 = t3062 * t3725;
t3441 = t3053 * t3725;
t2938 = pkin(1) * t3054;
t3814 = pkin(3) * t3053;
t2748 = t2938 - t3814;
t3712 = t2748 * t3062;
t3444 = t2673 * t3712;
t3835 = pkin(2) * t2673;
t3586 = pkin(1) * t3835;
t3510 = 0.4e1 * t3586;
t3831 = pkin(2) * t3054;
t3528 = t2597 * t3831;
t3554 = pkin(1) * t3639;
t3880 = 0.2e1 * t2912;
t3572 = t2673 * t3880;
t3601 = -0.4e1 * t2984 + 0.5e1 * t3062;
t3641 = t3062 * t3053;
t3673 = t2985 * t3054;
t3731 = t2673 * t3062;
t3755 = (t3071 * (t2912 * t3064 + t2779) + t2676 * (t2912 * t3055 - t3554)) * t3054;
t3800 = t3063 * pkin(3);
t3801 = t3062 * pkin(2);
t2964 = cos(t3084);
t3820 = pkin(3) * t2964;
t3875 = 0.2e1 * t2985;
t3843 = t3875 - 0.1e1;
t3854 = pkin(2) * pkin(3);
t3860 = -pkin(2) / 0.2e1;
t3866 = 0.2e1 * t3071;
t3874 = 0.4e1 * t2985;
t3876 = -0.2e1 * t2954;
t3881 = -0.2e1 * t2911;
t3886 = -0.2e1 * t2673;
t3891 = -0.3e1 * pkin(3);
t3892 = -0.5e1 * pkin(3);
t3932 = (t2985 * t3886 + 0.2e1 * t3053 * t3439 + t2673) * pkin(3);
t3940 = 0.2e1 * t2987;
t2544 = -(-t3290 + ((-t3441 + t3731) * pkin(2) - t3932) * t2986 + (t2667 * t3062 - t3385 * t3053 + (-pkin(2) * t3439 + (t3641 * t3886 - t3725 * t3843) * pkin(3)) * t3054) * t2987 + ((-t3054 * t3726 - t3835) * t3062 + (-t2652 + t2646) * t3053 + t3932) * t3063 + t3440 * t2935 - t2751 * t3731 + (-pkin(3) * t3665 + t2725 * t3053) * t2676) * t3820 + (-t2616 * t3423 + t3063 * ((t2646 * t3062 + t3053 * t3835) * t2987 + (t2598 * t3053 + t3062 * t3385) * t3063 + t3444 - t2676 * t3426) + ((t3641 * t3940 + (-t3054 + 0.2e1 * t3673) * t3063) * t2673 + (t2987 * t3843 - 0.2e1 * t3292 - t3844) * t3725) * t3800) * pkin(3) * t2956 + t2664 * (t3062 + 0.1e1) * (t3062 - 0.1e1) * pkin(2) * t3423 + t3290 * t3801 + (t3257 * t3641 + 0.2e1 * (-t2985 * t3623 + t2911) * t2673 + ((t3874 - 0.3e1) * t3441 + t3601 * t2673) * t3854) * t2986 + ((t3054 * t3257 - 0.4e1 * t3586) * t2985 + (t2597 * t3958 + t3563 * t3732) * t3641 + t3440 * t3881 + t3510 + ((t2604 + t2649) * t3053 * t3874 - 0.3e1 * (t2649 + 0.2e1 / 0.3e1 * t2684 + t3254) * t3053 + t3601 * t2598) * pkin(3)) * t2987 + ((0.4e1 * (t2652 + (-t3629 / 0.2e1 + t3251) * t3860) * t3814 + 0.4e1 * t3528 + t2673 * t3876) * t2985 + ((t3054 * t3510 + (t2782 * t3064 + t2779) * t3866 + 0.2e1 * t2676 * (t2954 * t3055 - t3554)) * t3053 + ((0.4e1 / 0.5e1 * t2684 + t2676 * (t2939 - t3639 / 0.5e1)) * t3054 + 0.3e1 / 0.5e1 * t3835) * t3892) * t3062 - 0.3e1 * (t2652 - (t3629 / 0.3e1 + t3251) * pkin(2)) * t3814 - 0.4e1 * t3528 + t3572) * t3063 + (-t2604 * t3814 + t3755) * t3875 + ((pkin(1) * t3518 + t3054 * t3572) * t3053 + (t3367 / 0.3e1 + t2667) * t3891) * t3062 + 0.3e1 * (t3071 * (t2826 * t3055 + t2944) + t3254) * t3814 - 0.2e1 * t3755 + ((0.4e1 * t2604 * t3054 + 0.2e1 * t3835) * t3063 + t3367 + 0.2e1 * t2667) * pkin(3) * t2984;
t2828 = pkin(2) * t2929;
t3855 = pkin(1) * pkin(3);
t3583 = -0.3e1 / 0.2e1 * t3855;
t3663 = t3054 * t3063;
t3672 = t2987 * t3053;
t3813 = pkin(3) * t3054;
t3851 = t2956 / 0.2e1;
t3879 = 0.2e1 * t2925;
t2574 = (t2802 * t3663 + t2938 + (t2987 - 0.1e1) * t3814) * t3820 / 0.2e1 + t2664 * t3800 * t3851 + (t2828 + t2911) * t3672 + ((t2925 - t3813 / 0.2e1) * t2929 + (t3879 + (t2985 - 0.3e1 / 0.2e1) * t3813) * pkin(2)) * t3063 + t3673 * t3855 + t2912 * t3053 + t3054 * t3583;
t3764 = t2544 / t2574;
t3468 = t2975 * t3764;
t3283 = t3468 / 0.2e1;
t2535 = pkin(2) * t3283;
t3117 = 1 / pkin(2);
t2536 = t3117 * t3283;
t3417 = t3053 * t3665;
t2717 = t2974 * t3417;
t3594 = t3112 - t3116;
t2746 = t3594 * t3072;
t2747 = t3594 * t3073;
t2786 = pkin(1) * t3667;
t2757 = t2786 - pkin(3);
t2752 = pkin(1) - 0.2e1 * t3527;
t3188 = t2752 * t3055 - t3639;
t2928 = t2985 * t3112;
t3410 = (t3251 + t3629) * t2928;
t3414 = t3071 * t3623;
t3420 = t3054 * t3639;
t3790 = -0.2e1 * t3854;
t3506 = t3073 * t3790;
t3507 = t3072 * t3790;
t3806 = pkin(3) * t3073;
t3535 = t3053 * t3806;
t3807 = pkin(3) * t3072;
t3536 = t3053 * t3807;
t3824 = pkin(2) * t3073;
t3549 = t3054 * t3824;
t3825 = pkin(2) * t3072;
t3550 = t3054 * t3825;
t3569 = -0.2e1 * t2928;
t2658 = t2752 * t3064 + t2789;
t3632 = t3071 * t2658;
t3808 = pkin(3) * t3071;
t2553 = (-0.2e1 * t3410 - 0.2e1 * ((pkin(2) * t3660 + t3536) * t2922 + (-pkin(2) * t3661 + t3535) * t2919 + t3518) * t2929 + (t2747 * t3055 + t3053 * t3507) * t2922 + (-t2746 * t3055 + t3053 * t3506) * t2919 - t3064 * t3414) * t2987 + (t3569 * t3732 - ((t3073 * t3188 + 0.2e1 * t3550) * t2922 + (-t3072 * t3188 + 0.2e1 * t3549) * t2919 + t3632) * t2929 + (-pkin(1) * t3536 + t2746 * t3054 - t3188 * t3824) * t2922 + (-pkin(1) * t3535 + t2747 * t3054 + t3188 * t3825) * t2919 - pkin(2) * t3632) * t3063 + t3410 - pkin(3) * t3444 + (-pkin(1) * t3550 + (t2757 * t3660 + (-t3073 * t3420 + t3825) * t3053) * pkin(3)) * t2922 + (-pkin(1) * t3549 + (-t2757 * t3661 + (t3072 * t3420 + t3824) * t3053) * pkin(3)) * t2919 + (t2757 * t3064 + t2717) * t3808;
t3113 = 0.1e1 / pkin(3);
t2661 = 0.1e1 / t2664;
t3679 = t2975 * t3117;
t3447 = t2661 * t3679;
t3299 = t3113 * t3447;
t3221 = t2553 * t3299;
t2520 = t2536 + t3221;
t3770 = t2520 * t3112;
t2499 = t2535 - t3770;
t2502 = t2535 + t3770;
t2548 = t3221 / 0.2e1;
t2514 = t2536 + t2548;
t3083 = 0.3e1 * qJ(3,3);
t2997 = t3083 + qJ(2,3);
t2837 = sin(t2997);
t2999 = t3084 + t3088;
t2838 = sin(t2999);
t3000 = t3084 + qJ(2,3);
t2839 = sin(t3000);
t3001 = qJ(3,3) + t3088;
t2840 = sin(t3001);
t3085 = -0.2e1 * qJ(3,3);
t3003 = t3085 + t3088;
t2842 = sin(t3003);
t3082 = 0.4e1 * qJ(3,3);
t3006 = t3088 + t3082;
t2843 = sin(t3006);
t3007 = t3088 + t3083;
t2844 = sin(t3007);
t3008 = qJ(2,3) + qJ(3,3);
t2845 = sin(t3008);
t3009 = qJ(2,3) - qJ(3,3);
t2846 = sin(t3009);
t3010 = qJ(2,3) + t3085;
t2847 = sin(t3010);
t3087 = 0.3e1 * qJ(2,3);
t2996 = t3082 + t3087;
t2870 = cos(t2996);
t2871 = cos(t2997);
t2998 = t3084 + t3087;
t2872 = cos(t2998);
t2874 = cos(t3000);
t2875 = cos(t3001);
t3004 = t3087 + t3083;
t2876 = cos(t3004);
t3005 = t3087 + qJ(3,3);
t2877 = cos(t3005);
t2878 = cos(t3007);
t2879 = cos(t3008);
t2880 = cos(t3009);
t2953 = -0.3e1 * t3112 + t3116;
t2955 = sin(t3083);
t3086 = 0.4e1 * qJ(2,3);
t3111 = pkin(3) * t3112;
t3115 = pkin(2) * t3116;
t2628 = t2676 * t3064 - t3055 * t3071;
t3828 = pkin(2) * t3063;
t2714 = pkin(3) * t2879 + pkin(1) + t3828;
t2699 = 0.1e1 / t2714;
t3744 = t2628 * t2699;
t3308 = t3623 * t3744;
t3203 = t2974 * t3308;
t3456 = t2974 * t3744;
t3372 = pkin(3) * t3456;
t3272 = pkin(2) * t3372;
t3284 = -t3468 / 0.2e1;
t3329 = t3117 * t3468;
t3369 = pkin(2) * t3468;
t3380 = pkin(2) * t3456;
t3805 = pkin(3) * t3116;
t3591 = 0.3e1 * t3805;
t3393 = -t3111 + t3591;
t3394 = pkin(3) * t3563;
t3400 = (t2839 - t3054) * pkin(3);
t3404 = t3623 / 0.4e1;
t3454 = t3112 * t3744;
t3511 = 0.12e2 * t3854;
t3512 = t2878 * t3805;
t3002 = -qJ(3,3) + t3088;
t3620 = t3116 * sin(t3002);
t3515 = pkin(3) * t3620;
t3823 = pkin(3) * t2845;
t3542 = t2520 * t3823;
t3561 = -0.12e2 * pkin(1) * t3854;
t3562 = 0.6e1 * t3623;
t3573 = 6 * t3116;
t3575 = 0.3e1 * t3112;
t2949 = t2974 ^ 2;
t3602 = t2949 / 0.3e1 + t3119;
t2745 = t3112 / 0.3e1 + t3602;
t3580 = -0.12e2 * pkin(3) * t2745;
t3581 = 0.12e2 * pkin(3) * (t3049 + t2745);
t3847 = t3112 / 0.4e1;
t3582 = 0.24e2 * pkin(3) * (t3847 + 0.3e1 / 0.8e1 * t3116 + t3602);
t3592 = -0.3e1 * t3805;
t3593 = -0.5e1 * pkin(2) * t3112;
t3622 = t3112 * t3117;
t3737 = t2661 * t3113;
t3738 = t2661 * t2975;
t3048 = t3116 / 0.4e1;
t3403 = t3048 + t3602;
t3857 = 0.12e2 * t3045 + 0.12e2 * t3403;
t3043 = 0.3e1 / 0.4e1 * t3112;
t3858 = 0.12e2 * t3043 + 0.12e2 * t3403;
t3078 = -2 * t3116;
t3859 = -0.12e2 * t3043 + t3078 - 0.12e2 * t3602;
t3863 = 0.6e1 * t3112;
t3402 = t2949 + 0.9e1 / 0.4e1 * t3112 + t3119;
t3882 = (12 * t3116) + 0.8e1 * t3402;
t3883 = -(6 * t3116) - 0.8e1 * t3402;
t3889 = 0.2e1 * pkin(3);
t3890 = -0.2e1 * pkin(3);
t3894 = 2 * pkin(2);
t3898 = -2 * pkin(1);
t3900 = -8 * pkin(1);
t2881 = cos(t3010);
t3922 = -t2881 - cos(t3087);
t3923 = -t2875 + t2878;
t3924 = t2872 + t3063;
t3925 = t2870 + t2874;
t3856 = pkin(1) * pkin(2);
t3936 = 8 * t3856;
t3937 = 0.2e1 * t3112;
t3941 = 4 * pkin(1);
t2808 = -0.2e1 * t2828;
t2873 = cos(t2999);
t3077 = -0.2e1 * t3112;
t3401 = t3077 + t3078 - (4 * t3119);
t3789 = 0.2e1 * t3854;
t3791 = -0.4e1 * t3854;
t3792 = 0.4e1 * t3855;
t3793 = -0.8e1 * t3855;
t3794 = 4 * t3856;
t3795 = -8 * t3856;
t3910 = t3077 + t3116;
t3946 = (4 * t3119) + (2 * t3116) + t3937;
t3950 = t3078 + t3112;
t3945 = t2873 * t3910 + cos(t3003) * t3116 + cos(t3006) * t3112 + t2875 * t3791 + t2879 * t3793 + t3063 * t3795 + t2808 + t3401 + (t2874 + t2881) * t3794 + (t2871 + t2880) * t3792 + (cos(t3002) + cos(t3083)) * t3789 + t3950 * t2966 + t3946 * t2964;
t3953 = t2873 - t2966 - t2964;
t2463 = -((0.2e1 * t2553 * t2871 * t3738 + t3925 * t2520 * t3937 + 0.2e1 * t3924 * t2499 + (t3923 * t2520 * t3941 + ((t2536 - t3221 / 0.2e1) * t2879 + (t2876 - t2877) * t2514) * t3958) * pkin(3) + (t2880 * t3890 + t3922 * pkin(2) + (0.1e1 + t3953) * t3959) * t3468) * t2974 + (t3111 * sin(0.5e1 * qJ(3,3) + t3086) + t3393 * sin(t3083 + t3086) + t2844 * t3581 + sin(qJ(3,3) + t3086) * t3592 + t2955 * t3591 - 0.6e1 * t3515 + t3053 * t3582 + t2840 * t3580 + (-sin(t3086) - t2842) * t3115 + (t2953 * sin(t3084 + t3086) + t2957 * t3859 + t2956 * t3858 + t2838 * t3857 + (sin(t3082 + t3086) + t2843) * t3575) * pkin(2) + (sin(t2998) * t3562 + sin(t2996) * t3863 + t3054 * t3883 + t2839 * t3882 + (-sin(t3087) - t2847) * t3573 + (sin(t3004) - sin(t3005) + t2837 + t2845 - 0.2e1 * t2846) * t3511) * pkin(1)) * t3744) / (t3894 * t3945 + 0.4e1 * t3512) * t3744 + (((t3369 / 0.4e1 + (0.3e1 / 0.4e1 * t3764 + t2553 * t3737) * t2975 * t3622 + t3119 * t2536) * t2956 * t3958 + (t2535 + 0.2e1 * t3770) * t2839 * t3941 + t2847 * t3369 * t3898 + t2520 * t2840 * t3394 + (t2536 + 0.2e1 / 0.3e1 * t3221) * t2846 * t3561 + t2502 * t2844 * t3889 + pkin(3) * t2955 * t3369 - 0.4e1 * t2514 * t3515 + 0.2e1 * t2837 * t3468 * t3855 + (t2536 + 0.4e1 / 0.5e1 * t3221) * t2957 * t3593 + t3112 * t2843 * t3283 + t3116 * t2842 * t3284 + t3542 * t3936 + (t2535 + 0.4e1 * t3770) * pkin(2) * t2838 + 0.8e1 * ((0.3e1 / 0.8e1 * t3329 + t2548) * t3116 + t2520 * t2912) * t3814 + (t3054 * t3770 - t3380 / 0.4e1) * t3900 + t3925 * t2974 * t3454 + t3922 * t3116 * t3456 + t3923 * t3372 * t3959 - 0.2e1 * (t2880 + t2877) * t3272 + 0.2e1 * (t2879 + t2876) * t3272 + t3924 * t3203 + t3953 * t3380 * t3957) * t3117 * t3284 - 0.8e1 * (((t2878 / 0.4e1 - t2875 / 0.4e1) * pkin(1) + (-t2872 / 0.8e1 + t2870 / 0.8e1 + t2874 / 0.8e1 - t3063 / 0.8e1) * pkin(3) + (t2876 / 0.8e1 + t2871 / 0.8e1 - t2877 / 0.8e1 - t2879 / 0.8e1) * pkin(2)) * t3456 + (t2844 * t3847 - t3620 / 0.4e1 + t2840 * t3404 + t2782 * t3053 + pkin(1) * t3400 + ((-t2846 + t2845) * pkin(1) + (t2838 / 0.2e1 - t2957 / 0.2e1 + t3851) * pkin(3)) * pkin(2)) * t2520) * t2553 * t3447) / (pkin(2) * t3945 + 0.2e1 * t3512);
t3106 = 0.2e1 * pkin(7);
t3596 = 0.2e1 * pkin(6) + t3106;
t3158 = pkin(7) ^ 2 + t3119 + (t3106 + pkin(6)) * pkin(6) + (t3596 + pkin(5)) * pkin(5);
t2683 = t3112 + t3158;
t2682 = t3575 + t3158;
t3899 = -4 * pkin(1);
t3236 = t3527 * t3899 + t2682;
t3455 = t3054 * t3744;
t3379 = pkin(2) * t3455;
t3557 = pkin(1) * t3744;
t3589 = 0.2e1 * t2929;
t3597 = -0.3e1 / 0.4e1 * t3112 + t3048;
t3832 = pkin(2) * t2974;
t3852 = 0.3e1 / 0.2e1 * t3116 + t3046;
t3865 = -0.3e1 * t3111;
t2479 = 0.4e1 * t2802 * (t2928 + t2828 / 0.2e1 + t3597) * t2986 * t3744 + (t2751 * t3454 * t3875 + (-(t2520 * t2974 + 0.3e1 * t3379) * t3814 / 0.2e1 + pkin(2) * t3557) * t3589 - (t2514 * t3832 + t3455 * t3852) * t3814 + pkin(1) * t3308) * t3940 + ((t2514 * t2808 + t2520 * t3569 - t2499) * t3054 * t2974 + (t2984 * t3865 + t3236 * t2929 + (t3236 - 0.3e1 * t2928) * pkin(2)) * t3744) * t3063 - ((-t2520 * t2929 + t3284) * t3053 * t2974 + (t2683 * t3667 + (-t2985 * t3527 + (t3875 - 0.2e1) * pkin(1)) * pkin(3)) * t3744) * pkin(3);
t2619 = t2628 ^ 2;
t2700 = 0.1e1 / t2714 ^ 2;
t2601 = t2619 * t2700;
t2547 = t3221 / 0.3e1;
t3311 = t2974 * t3455;
t3407 = -t3744 / 0.2e1;
t3568 = 0.2e1 * t2928;
t2976 = 0.1e1 / t3053 ^ 2;
t3118 = 1 / pkin(2) ^ 2;
t3678 = t2976 * t3118;
t3838 = pkin(2) * t2514;
t3935 = -0.2e1 / 0.3e1 * pkin(2);
t3233 = (-0.2e1 * t2802 * t3372 * t3672 + ((-t3311 + t3838) * t3568 + 0.3e1 * (t3311 * t3935 + (t3329 / 0.6e1 + t2547) * t3112 + t3116 * (t2536 + t2547)) * t2929 - t3054 * t3203 + t2502 * pkin(2)) * t3063 + (-(t2514 * t3831 + t2974 * t3407) * t3814 + pkin(1) * t3838) * t3589 - (t2502 * t3054 - t3380) * t3814 + pkin(1) * t2502) * t3678 * t3764;
t3743 = t2628 * t2700;
t3846 = t3117 / 0.2e1;
t2490 = (t3542 - t3456 + (t2845 * t2553 * t2661 * t3117 + (t3054 / 0.2e1 + (t3823 + t3831) * t3846) * t3764) * t2975) * t3743;
t3662 = t3054 * t3074;
t3488 = t2490 * t3662;
t2607 = 0.1e1 / (pkin(2) * (pkin(2) * t2845 + t3400 + t3879) - t2846 * t3116);
t2950 = t3937 + t3116;
t3788 = 0.3e1 * t3854;
t3495 = ((-pkin(3) * t2838 + (-t2840 - t3053) * pkin(2)) * t3456 + (t3116 * t2880 + t2874 * t3854 + t2950 * t2879 + t3063 * t3788 + (pkin(3) + t3801) * t3959) * t2520) * t2553 * t2607;
t3895 = -2 * pkin(2);
t3956 = t3488 + ((-t3233 / 0.4e1 + (t2479 * t3407 - t3495 / 0.2e1) * t3679) * t3737 + t2463) * t3895 - (pkin(1) + 0.2e1 * t3828) * t3054 * t2601;
t3056 = sin(qJ(3,2));
t2978 = 0.1e1 / t3056;
t3051 = legFrame(2,2);
t2920 = sin(t3051);
t2923 = cos(t3051);
t2677 = -t2920 * t3072 + t2923 * t3073;
t3058 = sin(qJ(1,2));
t2790 = t3058 * t2974;
t3067 = cos(qJ(1,2));
t2945 = pkin(1) * t3067;
t2685 = t3071 * (t2945 + t2790);
t2941 = pkin(1) * t3058;
t3636 = t3067 * t2974;
t2595 = t2685 / 0.2e1 + t2677 * (t2941 - t3636 / 0.2e1);
t2674 = t2920 * t3073 + t2923 * t3072;
t2668 = pkin(1) * t2674;
t3057 = sin(qJ(2,2));
t3653 = t3058 * t2677;
t3437 = t3057 * t3653;
t2599 = -pkin(2) * t3437 + t2668;
t3651 = t3058 * t3073;
t3652 = t3058 * t3072;
t3250 = -t2920 * t3652 + t2923 * t3651;
t2605 = t3250 * pkin(1) + t2685;
t3065 = cos(qJ(3,2));
t2931 = t3065 * pkin(3);
t2804 = t2931 + pkin(2);
t2926 = t3056 * pkin(1);
t2989 = t3065 ^ 2;
t3842 = t2989 - 0.1e1;
t3559 = pkin(3) * t3842;
t3066 = cos(qJ(2,2));
t3658 = t3056 * t3066;
t2617 = t2804 * t3658 + t3057 * t3559 + t2926;
t2647 = pkin(2) * t3653;
t3730 = t2674 * t3057;
t2650 = pkin(2) * t3730;
t2653 = pkin(1) * t3730;
t3659 = t3056 * t3057;
t3525 = pkin(3) * t3659;
t2753 = pkin(1) - t3525;
t3701 = t2804 * t3066;
t2665 = t2753 + t3701;
t2726 = t2941 - t3636;
t2780 = pkin(1) * t2790;
t2936 = pkin(3) * t2989;
t3092 = 0.2e1 * qJ(3,2);
t2959 = sin(t3092);
t2988 = t3065 * t2989;
t2991 = t3066 ^ 2;
t2990 = t3066 * t2991;
t3253 = t2677 * (t2941 - t3636 / 0.3e1);
t3256 = t3563 * t3653;
t3096 = 0.2e1 * qJ(2,2);
t2969 = cos(t3096);
t3628 = t3071 * t3067;
t3289 = t2617 * t2969 * t3628;
t3637 = t3065 * t3066;
t3291 = t3637 * t3659;
t3517 = pkin(2) * t3628;
t3366 = t3057 * t3517;
t3724 = t2677 * t2726;
t3384 = t2650 + t3724;
t2960 = sin(t3096);
t3422 = t2960 * t3628;
t3425 = t2726 * t3659;
t3436 = t3065 * t3653;
t3438 = t3056 * t3653;
t2940 = pkin(1) * t3057;
t3812 = pkin(3) * t3056;
t2749 = t2940 - t3812;
t3711 = t2749 * t3065;
t3443 = t2674 * t3711;
t3834 = pkin(2) * t2674;
t3585 = pkin(1) * t3834;
t3509 = 0.4e1 * t3585;
t3830 = pkin(2) * t3057;
t3530 = t2595 * t3830;
t3553 = pkin(1) * t3636;
t3571 = t2674 * t3880;
t3600 = -0.4e1 * t2988 + 0.5e1 * t3065;
t3638 = t3065 * t3056;
t3657 = t3057 * t3058;
t3671 = t2989 * t3057;
t3729 = t2674 * t3065;
t3754 = (t3071 * (t2912 * t3067 + t2780) + t2677 * (t2912 * t3058 - t3553)) * t3057;
t3798 = t3066 * pkin(3);
t3799 = t3065 * pkin(2);
t2967 = cos(t3092);
t3819 = pkin(3) * t2967;
t3872 = 0.2e1 * t2989;
t3841 = t3872 - 0.1e1;
t3871 = 0.4e1 * t2989;
t3885 = -0.2e1 * t2674;
t3933 = (t2989 * t3885 + 0.2e1 * t3056 * t3436 + t2674) * pkin(3);
t3939 = 0.2e1 * t2991;
t2545 = -(-t3289 + ((-t3438 + t3729) * pkin(2) - t3933) * t2990 + (t2668 * t3065 - t3384 * t3056 + (-pkin(2) * t3436 + (t3638 * t3885 - t3653 * t3841) * pkin(3)) * t3057) * t2991 + ((-t3057 * t3724 - t3834) * t3065 + (-t2653 + t2647) * t3056 + t3933) * t3066 + t3437 * t2936 - t2753 * t3729 + t2677 * (-pkin(3) * t3657 + t2726 * t3056)) * t3819 + (-t2617 * t3422 + t3066 * ((t2647 * t3065 + t3056 * t3834) * t2991 + (t2599 * t3056 + t3065 * t3384) * t3066 + t3443 - t2677 * t3425) + ((t3638 * t3939 + (-t3057 + 0.2e1 * t3671) * t3066) * t2674 + (t2991 * t3841 - 0.2e1 * t3291 - t3842) * t3653) * t3798) * pkin(3) * t2959 + t2665 * (t3065 + 0.1e1) * (t3065 - 0.1e1) * pkin(2) * t3422 + t3289 * t3799 + (t3256 * t3638 + 0.2e1 * (-t2989 * t3623 + t2911) * t2674 + ((t3871 - 0.3e1) * t3438 + t3600 * t2674) * t3854) * t2990 + ((t3057 * t3256 - 0.4e1 * t3585) * t2989 + (t2595 * t3958 + t3563 * t3730) * t3638 + t3437 * t3881 + t3509 + ((t2605 + t2650) * t3056 * t3871 - 0.3e1 * (t2650 + 0.2e1 / 0.3e1 * t2685 + t3253) * t3056 + t3600 * t2599) * pkin(3)) * t2991 + ((0.4e1 * (t2653 + (-t3628 / 0.2e1 + t3250) * t3860) * t3812 + 0.4e1 * t3530 + t2674 * t3876) * t2989 + ((t3057 * t3509 + (t2782 * t3067 + t2780) * t3866 + 0.2e1 * t2677 * (t2954 * t3058 - t3553)) * t3056 + ((0.4e1 / 0.5e1 * t2685 + t2677 * (t2941 - t3636 / 0.5e1)) * t3057 + 0.3e1 / 0.5e1 * t3834) * t3892) * t3065 - 0.3e1 * (t2653 - (t3628 / 0.3e1 + t3250) * pkin(2)) * t3812 - 0.4e1 * t3530 + t3571) * t3066 + (-t2605 * t3812 + t3754) * t3872 + ((pkin(1) * t3517 + t3057 * t3571) * t3056 + (t3366 / 0.3e1 + t2668) * t3891) * t3065 + 0.3e1 * (t3071 * (t2826 * t3058 + t2945) + t3253) * t3812 - 0.2e1 * t3754 + ((0.4e1 * t2605 * t3057 + 0.2e1 * t3834) * t3066 + t3366 + 0.2e1 * t2668) * pkin(3) * t2988;
t2829 = pkin(2) * t2931;
t3655 = t3057 * t3066;
t3670 = t2991 * t3056;
t3811 = pkin(3) * t3057;
t3850 = t2959 / 0.2e1;
t3878 = 0.2e1 * t2926;
t2575 = (t2804 * t3655 + t2940 + (t2991 - 0.1e1) * t3812) * t3819 / 0.2e1 + t2665 * t3798 * t3850 + (t2829 + t2911) * t3670 + ((t2926 - t3811 / 0.2e1) * t2931 + (t3878 + (t2989 - 0.3e1 / 0.2e1) * t3811) * pkin(2)) * t3066 + t3671 * t3855 + t2912 * t3056 + t3057 * t3583;
t3763 = t2545 / t2575;
t3467 = t2978 * t3763;
t3281 = t3467 / 0.2e1;
t2539 = pkin(2) * t3281;
t2537 = t3117 * t3281;
t3416 = t3056 * t3657;
t2718 = t2974 * t3416;
t2787 = pkin(1) * t3659;
t2758 = t2787 - pkin(3);
t2754 = pkin(1) - 0.2e1 * t3525;
t3187 = t2754 * t3058 - t3636;
t2930 = t2989 * t3112;
t3409 = (t3250 + t3628) * t2930;
t3419 = t3057 * t3636;
t3533 = t3056 * t3806;
t3534 = t3056 * t3807;
t3546 = t3057 * t3824;
t3547 = t3057 * t3825;
t3567 = -0.2e1 * t2930;
t2659 = t2754 * t3067 + t2790;
t3631 = t3071 * t2659;
t2554 = (-0.2e1 * t3409 - 0.2e1 * ((pkin(2) * t3651 + t3534) * t2923 + (-pkin(2) * t3652 + t3533) * t2920 + t3517) * t2931 + (t2747 * t3058 + t3056 * t3507) * t2923 + (-t2746 * t3058 + t3056 * t3506) * t2920 - t3067 * t3414) * t2991 + (t3567 * t3730 - ((t3073 * t3187 + 0.2e1 * t3547) * t2923 + (-t3072 * t3187 + 0.2e1 * t3546) * t2920 + t3631) * t2931 + (-pkin(1) * t3534 + t2746 * t3057 - t3187 * t3824) * t2923 + (-pkin(1) * t3533 + t2747 * t3057 + t3187 * t3825) * t2920 - pkin(2) * t3631) * t3066 + t3409 - pkin(3) * t3443 + (-pkin(1) * t3547 + (t2758 * t3651 + (-t3073 * t3419 + t3825) * t3056) * pkin(3)) * t2923 + (-pkin(1) * t3546 + (-t2758 * t3652 + (t3072 * t3419 + t3824) * t3056) * pkin(3)) * t2920 + (t2758 * t3067 + t2718) * t3808;
t2662 = 0.1e1 / t2665;
t3677 = t2978 * t3117;
t3446 = t2662 * t3677;
t3298 = t3113 * t3446;
t3220 = t2554 * t3298;
t2521 = t2537 + t3220;
t3769 = t2521 * t3112;
t2500 = t2539 - t3769;
t2503 = t2539 + t3769;
t2550 = t3220 / 0.2e1;
t2515 = t2537 + t2550;
t3090 = 0.4e1 * qJ(3,2);
t3011 = t3090 + t3096;
t2848 = sin(t3011);
t3014 = t3092 + t3096;
t2849 = sin(t3014);
t3015 = t3092 + qJ(2,2);
t2850 = sin(t3015);
t3016 = qJ(3,2) + t3096;
t2851 = sin(t3016);
t3091 = 0.3e1 * qJ(3,2);
t3020 = t3096 + t3091;
t2853 = sin(t3020);
t3093 = -0.2e1 * qJ(3,2);
t3021 = t3096 + t3093;
t2854 = sin(t3021);
t3022 = qJ(2,2) + t3091;
t2855 = sin(t3022);
t3023 = qJ(2,2) + qJ(3,2);
t2856 = sin(t3023);
t3024 = qJ(2,2) - qJ(3,2);
t2857 = sin(t3024);
t3025 = qJ(2,2) + t3093;
t2858 = sin(t3025);
t3095 = 0.3e1 * qJ(2,2);
t3012 = t3091 + t3095;
t2882 = cos(t3012);
t3013 = t3092 + t3095;
t2883 = cos(t3013);
t2885 = cos(t3015);
t2886 = cos(t3016);
t3017 = -qJ(3,2) + t3096;
t2887 = cos(t3017);
t3018 = t3095 + t3090;
t2888 = cos(t3018);
t3019 = t3095 + qJ(3,2);
t2889 = cos(t3019);
t2890 = cos(t3020);
t2891 = cos(t3021);
t2892 = cos(t3022);
t2893 = cos(t3023);
t2894 = cos(t3024);
t2958 = sin(t3091);
t3094 = 0.4e1 * qJ(2,2);
t2629 = t2677 * t3067 - t3058 * t3071;
t3827 = pkin(2) * t3066;
t2715 = pkin(3) * t2893 + pkin(1) + t3827;
t2701 = 0.1e1 / t2715;
t3742 = t2629 * t2701;
t3304 = t3623 * t3742;
t3202 = t2974 * t3304;
t3453 = t2974 * t3742;
t3371 = pkin(3) * t3453;
t3271 = pkin(2) * t3371;
t3282 = -t3467 / 0.2e1;
t3325 = t3117 * t3467;
t3374 = pkin(3) * t3467;
t3378 = pkin(2) * t3453;
t3382 = pkin(2) * t3467;
t3399 = (t2850 - t3057) * pkin(3);
t3451 = t3112 * t3742;
t3502 = 0.2e1 * t3805;
t3619 = t3116 * sin(t3017);
t3514 = pkin(3) * t3619;
t3822 = pkin(3) * t2856;
t3541 = t2521 * t3822;
t3590 = 0.4e1 * t3805;
t3735 = t2662 * t3113;
t3736 = t2662 * t2978;
t2895 = cos(t3025);
t3918 = -t2895 - cos(t3095);
t3919 = -t2886 + t2890;
t3920 = t2885 + t2888;
t3921 = t2883 + t3066;
t2810 = -0.2e1 * t2829;
t2884 = cos(t3014);
t3944 = t2884 * t3910 + cos(t3091) * t3789 + cos(t3011) * t3112 + t2886 * t3791 + t2893 * t3793 + t3066 * t3795 + t2810 + t3401 + (t2885 + t2895) * t3794 + (t2892 + t2894) * t3792 + t3950 * t2969 + t3946 * t2967;
t3952 = t2884 - t2969 - t2967;
t2464 = -((0.2e1 * t2554 * t2892 * t3736 + t3920 * t2521 * t3937 + 0.2e1 * t3921 * t2500 + (t3919 * t2521 * t3941 + ((t2537 - t3220 / 0.2e1) * t2893 + (t2882 - t2889) * t2515) * t3958) * pkin(3) + (t2894 * t3890 + t3918 * pkin(2) + (0.1e1 + t3952) * t3959) * t3467) * t2974 + (t3111 * sin(0.5e1 * qJ(3,2) + t3094) + t3393 * sin(t3091 + t3094) + t2851 * t3580 + t2853 * t3581 + sin(qJ(3,2) + t3094) * t3592 + t2958 * t3591 - 0.6e1 * t3514 + t3056 * t3582 + (-t2854 - sin(t3094)) * t3115 + (t2953 * sin(t3094 + t3092) + t2960 * t3859 + t2959 * t3858 + t2849 * t3857 + (sin(t3090 + t3094) + t2848) * t3575) * pkin(2) + (sin(t3013) * t3562 + sin(t3018) * t3863 + t3057 * t3883 + t2850 * t3882 + (-sin(t3095) - t2858) * t3573 + (sin(t3012) - sin(t3019) + t2855 + t2856 - 0.2e1 * t2857) * t3511) * pkin(1)) * t3742) / (t2890 * t3590 + (t2887 * t3789 + t2891 * t3116 + t3944) * t3894) * t3742 + (((t2539 + 0.2e1 * t3769) * t2850 * t3941 + t2858 * t3382 * t3898 + (t2537 + 0.2e1 / 0.3e1 * t3220) * t2857 * t3561 + t2521 * t2851 * t3394 - 0.4e1 * t2515 * t3514 + t2503 * t2853 * t3889 + (t3382 / 0.4e1 + (0.3e1 / 0.4e1 * t3763 + t2554 * t3735) * t2978 * t3622 + t3119 * t2537) * t2959 * t3958 + (t2537 + 0.4e1 / 0.5e1 * t3220) * t2960 * t3593 + t3112 * t2848 * t3281 + t3116 * t2854 * t3282 + t3541 * t3936 + 0.8e1 * ((0.3e1 / 0.8e1 * t3325 + t2550) * t3116 + t2521 * t2912) * t3812 + (t3057 * t3769 - t3378 / 0.4e1) * t3900 + t3920 * t2974 * t3451 + t3918 * t3116 * t3453 - 0.2e1 * (t2894 + t2889) * t3271 + 0.2e1 * (t2893 + t2882) * t3271 + t3921 * t3202 + (t2958 * t3374 + (t2539 + 0.4e1 * t3769) * t2849) * pkin(2) + t3952 * t3378 * t3957 + (t2855 * t3374 + t3919 * t3371) * t3959) * t3117 * t3282 - 0.8e1 * (((t2890 / 0.4e1 - t2886 / 0.4e1) * pkin(1) + (t2888 / 0.8e1 - t2883 / 0.8e1 + t2885 / 0.8e1 - t3066 / 0.8e1) * pkin(3) + (t2882 / 0.8e1 + t2892 / 0.8e1 - t2889 / 0.8e1 - t2893 / 0.8e1) * pkin(2)) * t3453 + (t2853 * t3847 - t3619 / 0.4e1 + t2851 * t3404 + t2782 * t3056 + pkin(1) * t3399 + ((-t2857 + t2856) * pkin(1) + (t2849 / 0.2e1 - t2960 / 0.2e1 + t3850) * pkin(3)) * pkin(2)) * t2521) * t2554 * t3446) / (t3115 * t2891 + (t2887 + t2890) * t3502 + t3944 * pkin(2));
t3235 = t3525 * t3899 + t2682;
t3452 = t3057 * t3742;
t3377 = pkin(2) * t3452;
t3556 = pkin(1) * t3742;
t3588 = 0.2e1 * t2931;
t2480 = 0.4e1 * t2804 * (t2930 + t2829 / 0.2e1 + t3597) * t2990 * t3742 + (t2753 * t3451 * t3872 + (-(t2521 * t2974 + 0.3e1 * t3377) * t3812 / 0.2e1 + pkin(2) * t3556) * t3588 - (t2515 * t3832 + t3452 * t3852) * t3812 + pkin(1) * t3304) * t3939 + ((t2515 * t2810 + t2521 * t3567 - t2500) * t3057 * t2974 + (t2988 * t3865 + t3235 * t2931 + (t3235 - 0.3e1 * t2930) * pkin(2)) * t3742) * t3066 - ((-t2521 * t2931 + t3282) * t3056 * t2974 + (t2683 * t3659 + (-t2989 * t3525 + (t3872 - 0.2e1) * pkin(1)) * pkin(3)) * t3742) * pkin(3);
t2620 = t2629 ^ 2;
t2702 = 0.1e1 / t2715 ^ 2;
t2602 = t2620 * t2702;
t2549 = t3220 / 0.3e1;
t3307 = t2974 * t3452;
t3406 = -t3742 / 0.2e1;
t3566 = 0.2e1 * t2930;
t2979 = 0.1e1 / t3056 ^ 2;
t3676 = t2979 * t3118;
t3837 = pkin(2) * t2515;
t3232 = (-0.2e1 * t2804 * t3371 * t3670 + ((-t3307 + t3837) * t3566 + 0.3e1 * (t3307 * t3935 + (t3325 / 0.6e1 + t2549) * t3112 + t3116 * (t2537 + t2549)) * t2931 - t3057 * t3202 + t2503 * pkin(2)) * t3066 + (-(t2515 * t3830 + t2974 * t3406) * t3812 + pkin(1) * t3837) * t3588 - (t2503 * t3057 - t3378) * t3812 + pkin(1) * t2503) * t3676 * t3763;
t3741 = t2629 * t2702;
t2491 = (t3541 - t3453 + (t2856 * t2554 * t2662 * t3117 + (t3057 / 0.2e1 + (t3822 + t3830) * t3846) * t3763) * t2978) * t3741;
t3654 = t3057 * t3074;
t3483 = t2491 * t3654;
t2609 = 0.1e1 / (pkin(2) * (pkin(2) * t2856 + t3399 + t3878) - t2857 * t3116);
t3494 = ((-pkin(3) * t2849 + (-t2851 - t3056) * pkin(2)) * t3453 + (t3116 * t2894 + t2885 * t3854 + t2950 * t2893 + t3066 * t3788 + (pkin(3) + t3799) * t3959) * t2521) * t2554 * t2609;
t3955 = t3483 + ((-t3232 / 0.4e1 + (t2480 * t3406 - t3494 / 0.2e1) * t3677) * t3735 + t2464) * t3895 - (pkin(1) + 0.2e1 * t3827) * t3057 * t2602;
t3059 = sin(qJ(3,1));
t2981 = 0.1e1 / t3059;
t3052 = legFrame(1,2);
t2921 = sin(t3052);
t2924 = cos(t3052);
t2678 = -t2921 * t3072 + t2924 * t3073;
t3061 = sin(qJ(1,1));
t2791 = t3061 * t2974;
t3070 = cos(qJ(1,1));
t2946 = pkin(1) * t3070;
t2686 = t3071 * (t2946 + t2791);
t2943 = pkin(1) * t3061;
t3633 = t3070 * t2974;
t2596 = t2686 / 0.2e1 + t2678 * (t2943 - t3633 / 0.2e1);
t2675 = t2921 * t3073 + t2924 * t3072;
t2669 = pkin(1) * t2675;
t3060 = sin(qJ(2,1));
t3647 = t3060 * t3061;
t3434 = t2678 * t3647;
t2600 = -pkin(2) * t3434 + t2669;
t3642 = t3061 * t3073;
t3643 = t3061 * t3072;
t3249 = -t2921 * t3643 + t2924 * t3642;
t2606 = pkin(1) * t3249 + t2686;
t3068 = cos(qJ(3,1));
t2933 = t3068 * pkin(3);
t2806 = t2933 + pkin(2);
t2927 = t3059 * pkin(1);
t2993 = t3068 ^ 2;
t3840 = t2993 - 0.1e1;
t3558 = pkin(3) * t3840;
t3069 = cos(qJ(2,1));
t3649 = t3059 * t3069;
t2618 = t2806 * t3649 + t3060 * t3558 + t2927;
t3722 = t2678 * t3061;
t2648 = pkin(2) * t3722;
t3728 = t2675 * t3060;
t2651 = pkin(2) * t3728;
t2654 = pkin(1) * t3728;
t3650 = t3059 * t3060;
t3523 = pkin(3) * t3650;
t2755 = pkin(1) - t3523;
t3698 = t2806 * t3069;
t2666 = t2755 + t3698;
t2727 = t2943 - t3633;
t2781 = pkin(1) * t2791;
t2937 = pkin(3) * t2993;
t3100 = 0.2e1 * qJ(3,1);
t2962 = sin(t3100);
t2992 = t3068 * t2993;
t2995 = t3069 ^ 2;
t2994 = t3069 * t2995;
t3252 = t2678 * (t2943 - t3633 / 0.3e1);
t3255 = t3563 * t3722;
t3104 = 0.2e1 * qJ(2,1);
t2972 = cos(t3104);
t3627 = t3071 * t3070;
t3288 = t2618 * t2972 * t3627;
t3634 = t3068 * t3069;
t3293 = t3634 * t3650;
t3516 = pkin(2) * t3627;
t3368 = t3060 * t3516;
t3723 = t2678 * t2727;
t3383 = t2651 + t3723;
t2963 = sin(t3104);
t3421 = t2963 * t3627;
t3424 = t2727 * t3650;
t3433 = t3068 * t3722;
t3435 = t3059 * t3722;
t2942 = pkin(1) * t3060;
t3810 = pkin(3) * t3059;
t2750 = t2942 - t3810;
t3710 = t2750 * t3068;
t3442 = t2675 * t3710;
t3833 = pkin(2) * t2675;
t3584 = pkin(1) * t3833;
t3508 = 0.4e1 * t3584;
t3829 = pkin(2) * t3060;
t3529 = t2596 * t3829;
t3552 = pkin(1) * t3633;
t3570 = t2675 * t3880;
t3599 = -0.4e1 * t2992 + 0.5e1 * t3068;
t3635 = t3068 * t3059;
t3648 = t3060 * (t3071 * (t2912 * t3070 + t2781) + t2678 * (t2912 * t3061 - t3552));
t3669 = t2993 * t3060;
t3727 = t2675 * t3068;
t3796 = t3069 * pkin(3);
t3797 = t3068 * pkin(2);
t2970 = cos(t3100);
t3818 = pkin(3) * t2970;
t3869 = 0.2e1 * t2993;
t3839 = t3869 - 0.1e1;
t3868 = 0.4e1 * t2993;
t3884 = -0.2e1 * t2675;
t3934 = (t2993 * t3884 + 0.2e1 * t3059 * t3433 + t2675) * pkin(3);
t3938 = 0.2e1 * t2995;
t2546 = -(-t3288 + ((-t3435 + t3727) * pkin(2) - t3934) * t2994 + (t2669 * t3068 - t3383 * t3059 + (-pkin(2) * t3433 + (t3635 * t3884 - t3722 * t3839) * pkin(3)) * t3060) * t2995 + ((-t3060 * t3723 - t3833) * t3068 + (-t2654 + t2648) * t3059 + t3934) * t3069 + t3434 * t2937 - t2755 * t3727 + t2678 * (-pkin(3) * t3647 + t2727 * t3059)) * t3818 + pkin(3) * (-t2618 * t3421 + t3069 * ((t2648 * t3068 + t3059 * t3833) * t2995 + (t2600 * t3059 + t3068 * t3383) * t3069 + t3442 - t2678 * t3424) + ((t3635 * t3938 + (-t3060 + 0.2e1 * t3669) * t3069) * t2675 + (t2995 * t3839 - 0.2e1 * t3293 - t3840) * t3722) * t3796) * t2962 + t2666 * (t3068 + 0.1e1) * pkin(2) * (t3068 - 0.1e1) * t3421 + t3288 * t3797 + (t3255 * t3635 + 0.2e1 * (-t2993 * t3623 + t2911) * t2675 + ((t3868 - 0.3e1) * t3435 + t3599 * t2675) * t3854) * t2994 + ((t3060 * t3255 - 0.4e1 * t3584) * t2993 + (t2596 * t3958 + t3563 * t3728) * t3635 + t3434 * t3881 + t3508 + ((t2606 + t2651) * t3059 * t3868 - 0.3e1 * (t2651 + 0.2e1 / 0.3e1 * t2686 + t3252) * t3059 + t3599 * t2600) * pkin(3)) * t2995 + ((0.4e1 * (t2654 + (-t3627 / 0.2e1 + t3249) * t3860) * t3810 + 0.4e1 * t3529 + t2675 * t3876) * t2993 + ((t3060 * t3508 + (t2782 * t3070 + t2781) * t3866 + 0.2e1 * t2678 * (t2954 * t3061 - t3552)) * t3059 + ((0.4e1 / 0.5e1 * t2686 + t2678 * (t2943 - t3633 / 0.5e1)) * t3060 + 0.3e1 / 0.5e1 * t3833) * t3892) * t3068 - 0.3e1 * (t2654 - (t3627 / 0.3e1 + t3249) * pkin(2)) * t3810 - 0.4e1 * t3529 + t3570) * t3069 + (-t2606 * t3810 + t3648) * t3869 + ((pkin(1) * t3516 + t3060 * t3570) * t3059 + (t3368 / 0.3e1 + t2669) * t3891) * t3068 + 0.3e1 * (t3071 * (t2826 * t3061 + t2946) + t3252) * t3810 - 0.2e1 * t3648 + ((0.4e1 * t2606 * t3060 + 0.2e1 * t3833) * t3069 + t3368 + 0.2e1 * t2669) * pkin(3) * t2992;
t2830 = pkin(2) * t2933;
t3645 = t3060 * t3069;
t3668 = t2995 * t3059;
t3809 = pkin(3) * t3060;
t3849 = t2962 / 0.2e1;
t3877 = 0.2e1 * t2927;
t2576 = (t2806 * t3645 + t2942 + (t2995 - 0.1e1) * t3810) * t3818 / 0.2e1 + t2666 * t3796 * t3849 + (t2830 + t2911) * t3668 + ((t2927 - t3809 / 0.2e1) * t2933 + (t3877 + (t2993 - 0.3e1 / 0.2e1) * t3809) * pkin(2)) * t3069 + t3669 * t3855 + t2912 * t3059 + t3060 * t3583;
t3762 = t2546 / t2576;
t3466 = t2981 * t3762;
t3279 = t3466 / 0.2e1;
t2540 = pkin(2) * t3279;
t2538 = t3117 * t3279;
t3415 = t3059 * t3647;
t2719 = t2974 * t3415;
t2788 = pkin(1) * t3650;
t2759 = t2788 - pkin(3);
t2756 = pkin(1) - 0.2e1 * t3523;
t3186 = t2756 * t3061 - t3633;
t2932 = t2993 * t3112;
t3408 = (t3249 + t3627) * t2932;
t3418 = t3060 * t3633;
t3531 = t3059 * t3806;
t3532 = t3059 * t3807;
t3543 = t3060 * t3824;
t3544 = t3060 * t3825;
t3565 = -0.2e1 * t2932;
t2660 = t2756 * t3070 + t2791;
t3630 = t3071 * t2660;
t2555 = (-0.2e1 * t3408 - 0.2e1 * ((pkin(2) * t3642 + t3532) * t2924 + (-pkin(2) * t3643 + t3531) * t2921 + t3516) * t2933 + (t2747 * t3061 + t3059 * t3507) * t2924 + (-t2746 * t3061 + t3059 * t3506) * t2921 - t3070 * t3414) * t2995 + (t3565 * t3728 - ((t3073 * t3186 + 0.2e1 * t3544) * t2924 + (-t3072 * t3186 + 0.2e1 * t3543) * t2921 + t3630) * t2933 + (-pkin(1) * t3532 + t2746 * t3060 - t3186 * t3824) * t2924 + (-pkin(1) * t3531 + t2747 * t3060 + t3186 * t3825) * t2921 - pkin(2) * t3630) * t3069 + t3408 - pkin(3) * t3442 + (-pkin(1) * t3544 + (t2759 * t3642 + (-t3073 * t3418 + t3825) * t3059) * pkin(3)) * t2924 + (-pkin(1) * t3543 + (-t2759 * t3643 + (t3072 * t3418 + t3824) * t3059) * pkin(3)) * t2921 + (t2759 * t3070 + t2719) * t3808;
t2663 = 0.1e1 / t2666;
t3675 = t2981 * t3117;
t3445 = t2663 * t3675;
t3297 = t3113 * t3445;
t3219 = t2555 * t3297;
t2522 = t2538 + t3219;
t3768 = t2522 * t3112;
t2501 = t2540 - t3768;
t2504 = t2540 + t3768;
t2552 = t3219 / 0.2e1;
t2516 = t2538 + t2552;
t3098 = 0.4e1 * qJ(3,1);
t3027 = t3098 + t3104;
t2859 = sin(t3027);
t3099 = 0.3e1 * qJ(3,1);
t3029 = t3099 + t3104;
t2860 = sin(t3029);
t3030 = t3099 + qJ(2,1);
t2861 = sin(t3030);
t3032 = t3100 + t3104;
t2862 = sin(t3032);
t3033 = t3100 + qJ(2,1);
t2863 = sin(t3033);
t3035 = qJ(3,1) + t3104;
t2864 = sin(t3035);
t3101 = -0.2e1 * qJ(3,1);
t3037 = t3101 + qJ(2,1);
t2866 = sin(t3037);
t3038 = t3104 + t3101;
t2867 = sin(t3038);
t3039 = qJ(2,1) + qJ(3,1);
t2868 = sin(t3039);
t3040 = qJ(2,1) - qJ(3,1);
t2869 = sin(t3040);
t3103 = 0.3e1 * qJ(2,1);
t3026 = t3098 + t3103;
t2896 = cos(t3026);
t3028 = t3099 + t3103;
t2897 = cos(t3028);
t2898 = cos(t3029);
t2899 = cos(t3030);
t3031 = t3100 + t3103;
t2900 = cos(t3031);
t2902 = cos(t3033);
t3034 = qJ(3,1) + t3103;
t2903 = cos(t3034);
t2904 = cos(t3035);
t3036 = -qJ(3,1) + t3104;
t2905 = cos(t3036);
t2907 = cos(t3038);
t2908 = cos(t3039);
t2909 = cos(t3040);
t2961 = sin(t3099);
t3102 = 0.4e1 * qJ(2,1);
t2630 = t2678 * t3070 - t3061 * t3071;
t3826 = pkin(2) * t3069;
t2716 = pkin(3) * t2908 + pkin(1) + t3826;
t2703 = 0.1e1 / t2716;
t3740 = t2630 * t2703;
t3300 = t3623 * t3740;
t3201 = t2974 * t3300;
t3450 = t2974 * t3740;
t3370 = pkin(3) * t3450;
t3270 = pkin(2) * t3370;
t3280 = -t3466 / 0.2e1;
t3321 = t3117 * t3466;
t3373 = pkin(3) * t3466;
t3376 = pkin(2) * t3450;
t3381 = pkin(2) * t3466;
t3398 = (t2863 - t3060) * pkin(3);
t3448 = t3112 * t3740;
t3618 = t3116 * sin(t3036);
t3513 = pkin(3) * t3618;
t3821 = pkin(3) * t2868;
t3540 = t2522 * t3821;
t3733 = t2663 * t3113;
t3734 = t2663 * t2981;
t2906 = cos(t3037);
t3914 = -t2906 - cos(t3103);
t3915 = t2900 + t3069;
t3916 = t2898 - t2904;
t3917 = t2896 + t2902;
t2812 = -0.2e1 * t2830;
t2901 = cos(t3032);
t3943 = t2901 * t3910 + cos(t3099) * t3789 + cos(t3027) * t3112 + t2904 * t3791 + t2908 * t3793 + t3069 * t3795 + t2812 + t3401 + (t2902 + t2906) * t3794 + (t2899 + t2909) * t3792 + t3950 * t2972 + t3946 * t2970;
t3951 = t2901 - t2972 - t2970;
t2465 = -((0.2e1 * t2555 * t2899 * t3734 + t3917 * t2522 * t3937 + 0.2e1 * t3915 * t2501 + (t3916 * t2522 * t3941 + ((t2538 - t3219 / 0.2e1) * t2908 + (-t2903 + t2897) * t2516) * t3958) * pkin(3) + (t2909 * t3890 + t3914 * pkin(2) + (0.1e1 + t3951) * t3959) * t3466) * t2974 + (t3393 * sin(t3099 + t3102) + t3111 * sin(0.5e1 * qJ(3,1) + t3102) + sin(qJ(3,1) + t3102) * t3592 + t2961 * t3591 - 0.6e1 * t3513 + t3059 * t3582 + t2860 * t3581 + t2864 * t3580 + (-t2867 - sin(t3102)) * t3115 + (t2953 * sin(t3102 + t3100) + t2963 * t3859 + t2962 * t3858 + t2862 * t3857 + (sin(t3102 + t3098) + t2859) * t3575) * pkin(2) + (sin(t3031) * t3562 + sin(t3026) * t3863 + t3060 * t3883 + t2863 * t3882 + (-sin(t3103) - t2866) * t3573 + (sin(t3028) - sin(t3034) + t2861 + t2868 - 0.2e1 * t2869) * t3511) * pkin(1)) * t3740) / (t2898 * t3590 + (t2905 * t3789 + t2907 * t3116 + t3943) * t3894) * t3740 + (((t3381 / 0.4e1 + (0.3e1 / 0.4e1 * t3762 + t2555 * t3733) * t2981 * t3622 + t3119 * t2538) * t2962 * t3958 + (t2540 + 0.2e1 * t3768) * t2863 * t3941 + t2866 * t3381 * t3898 + (t2538 + 0.4e1 / 0.5e1 * t3219) * t2963 * t3593 + t2522 * t2864 * t3394 + (t2538 + 0.2e1 / 0.3e1 * t3219) * t2869 * t3561 + t2504 * t2860 * t3889 - 0.4e1 * t2516 * t3513 + t3112 * t2859 * t3279 + t3116 * t2867 * t3280 + t3540 * t3936 + 0.8e1 * ((0.3e1 / 0.8e1 * t3321 + t2552) * t3116 + t2522 * t2912) * t3810 + (t3060 * t3768 - t3376 / 0.4e1) * t3900 + t3917 * t2974 * t3448 + t3914 * t3116 * t3450 - 0.2e1 * (t2903 + t2909) * t3270 + 0.2e1 * (t2908 + t2897) * t3270 + t3915 * t3201 + ((t2540 + 0.4e1 * t3768) * t2862 + t2961 * t3373) * pkin(2) + t3951 * t3376 * t3957 + (t2861 * t3373 + t3916 * t3370) * t3959) * t3117 * t3280 - 0.8e1 * (((t2898 / 0.4e1 - t2904 / 0.4e1) * pkin(1) + (-t2900 / 0.8e1 + t2896 / 0.8e1 + t2902 / 0.8e1 - t3069 / 0.8e1) * pkin(3) + (t2897 / 0.8e1 + t2899 / 0.8e1 - t2903 / 0.8e1 - t2908 / 0.8e1) * pkin(2)) * t3450 + (-t3618 / 0.4e1 + t2860 * t3847 + t2864 * t3404 + t2782 * t3059 + pkin(1) * t3398 + ((-t2869 + t2868) * pkin(1) + (t2862 / 0.2e1 - t2963 / 0.2e1 + t3849) * pkin(3)) * pkin(2)) * t2522) * t2555 * t3445) / (t3115 * t2907 + (t2898 + t2905) * t3502 + t3943 * pkin(2));
t3234 = t3523 * t3899 + t2682;
t3449 = t3060 * t3740;
t3375 = pkin(2) * t3449;
t3555 = pkin(1) * t3740;
t3587 = 0.2e1 * t2933;
t2478 = 0.4e1 * (t2932 + t2830 / 0.2e1 + t3597) * t2806 * t2994 * t3740 + (t2755 * t3448 * t3869 + (-(t2522 * t2974 + 0.3e1 * t3375) * t3810 / 0.2e1 + pkin(2) * t3555) * t3587 - (t2516 * t3832 + t3449 * t3852) * t3810 + pkin(1) * t3300) * t3938 + ((t2516 * t2812 + t2522 * t3565 - t2501) * t3060 * t2974 + (t2992 * t3865 + t3234 * t2933 + (t3234 - 0.3e1 * t2932) * pkin(2)) * t3740) * t3069 - ((-t2522 * t2933 + t3280) * t3059 * t2974 + (t2683 * t3650 + (-t2993 * t3523 + (t3869 - 0.2e1) * pkin(1)) * pkin(3)) * t3740) * pkin(3);
t2621 = t2630 ^ 2;
t2704 = 0.1e1 / t2716 ^ 2;
t2603 = t2621 * t2704;
t2551 = t3219 / 0.3e1;
t3303 = t2974 * t3449;
t3405 = -t3740 / 0.2e1;
t3564 = 0.2e1 * t2932;
t2982 = 0.1e1 / t3059 ^ 2;
t3674 = t2982 * t3118;
t3836 = pkin(2) * t2516;
t3231 = (-0.2e1 * t2806 * t3370 * t3668 + ((-t3303 + t3836) * t3564 + 0.3e1 * (t3303 * t3935 + (t3321 / 0.6e1 + t2551) * t3112 + t3116 * (t2538 + t2551)) * t2933 - t3060 * t3201 + t2504 * pkin(2)) * t3069 + (-(t2516 * t3829 + t2974 * t3405) * t3810 + pkin(1) * t3836) * t3587 - (t2504 * t3060 - t3376) * t3810 + pkin(1) * t2504) * t3674 * t3762;
t3739 = t2630 * t2704;
t2492 = (t3540 - t3450 + (t2868 * t2555 * t2663 * t3117 + (t3060 / 0.2e1 + (t3821 + t3829) * t3846) * t3762) * t2981) * t3739;
t3644 = t3060 * t3074;
t3478 = t2492 * t3644;
t2611 = 0.1e1 / (pkin(2) * (pkin(2) * t2868 + t3398 + t3877) - t2869 * t3116);
t3493 = ((-pkin(3) * t2862 + (-t2864 - t3059) * pkin(2)) * t3450 + (t3116 * t2909 + t2902 * t3854 + t2950 * t2908 + t3069 * t3788 + (pkin(3) + t3797) * t3959) * t2522) * t2555 * t2611;
t3954 = t3478 + ((-t3231 / 0.4e1 + (t2478 * t3405 - t3493 / 0.2e1) * t3675) * t3733 + t2465) * t3895 - (pkin(1) + 0.2e1 * t3826) * t3060 * t2603;
t3646 = t3060 * t3068;
t2698 = t3646 + t3649;
t3656 = t3057 * t3065;
t2697 = t3656 + t3658;
t3664 = t3054 * t3062;
t2696 = t3664 + t3666;
t3605 = pkin(2) * t3664 + t2925;
t3949 = -pkin(1) * t3664 - pkin(2) * t3672 - t3063 * t3605;
t3604 = pkin(2) * t3656 + t2926;
t3948 = -pkin(1) * t3656 - pkin(2) * t3670 - t3066 * t3604;
t3603 = pkin(2) * t3646 + t2927;
t3947 = -pkin(1) * t3646 - pkin(2) * t3668 - t3069 * t3603;
t3598 = t3046 + t3049;
t2689 = t2932 + t2830 + t3598;
t2591 = -0.2e1 * t2689 * t3070 * t2995 - t2660 * t3698 + pkin(3) * ((t2937 + t2759) * t3070 + t2719);
t3786 = qJ(3,1) + qJ(1,1);
t2917 = qJ(2,1) + t3786;
t3787 = -qJ(3,1) + qJ(1,1);
t2918 = -qJ(2,1) + t3787;
t2973 = 0.2e1 * pkin(5) + t3596;
t3781 = qJ(1,1) - 0.2e1 * qJ(2,1);
t3756 = ((sin(t2918) + sin(t2917)) * t2973 + (cos(t2918) + cos(t2917)) * t3959 + (cos(t3101 + t3781) + cos(qJ(1,1) + t3032) + 0.2e1 * t3070) * pkin(3) + (cos(qJ(3,1) - t3781) + cos(qJ(1,1) + t3035) + cos(t3787) + cos(t3786)) * pkin(2)) * t2611 / 0.2e1;
t3143 = t2591 * t3297 + t3756;
t3929 = t2621 * t3143;
t3906 = 0.2e1 * t2490;
t3905 = 0.2e1 * t2491;
t3904 = 0.2e1 * t2492;
t3903 = t3063 * (pkin(1) * t3062 - pkin(2) * t3667) + t2987 * t3801;
t3902 = t3066 * (pkin(1) * t3065 - pkin(2) * t3659) + t2991 * t3799;
t3901 = t3069 * (pkin(1) * t3068 - pkin(2) * t3650) + t2995 * t3797;
t2625 = (t2985 - 0.1e1 / 0.2e1) * t3663 + (t2987 - 0.1e1 / 0.2e1) * t3641;
t3888 = 0.4e1 * t2625;
t2626 = (t2989 - 0.1e1 / 0.2e1) * t3655 + (t2991 - 0.1e1 / 0.2e1) * t3638;
t3887 = 0.4e1 * t2626;
t3867 = -0.4e1 * t2995;
t3848 = t3074 / 0.4e1;
t3845 = t3117 / 0.4e1;
t2836 = t3938 - 0.1e1;
t2834 = t3940 - 0.1e1;
t2835 = t3939 - 0.1e1;
t3804 = pkin(5) * t2463;
t3803 = pkin(5) * t2464;
t3802 = pkin(5) * t2465;
t3785 = -qJ(3,2) + qJ(1,2);
t3784 = qJ(3,2) + qJ(1,2);
t3783 = -qJ(3,3) + qJ(1,3);
t3782 = qJ(3,3) + qJ(1,3);
t3780 = qJ(1,2) - 0.2e1 * qJ(2,2);
t3779 = -0.2e1 * qJ(2,3) + qJ(1,3);
t3776 = t2490 * t2699;
t3775 = t2490 * t3063;
t3774 = t2491 * t2701;
t3773 = t2491 * t3066;
t3772 = t2492 * t2703;
t3771 = t2492 * t3069;
t3767 = t2544 ^ 2 / t2574 ^ 2;
t3766 = t2545 ^ 2 / t2575 ^ 2;
t3765 = t2546 ^ 2 / t2576 ^ 2;
t3459 = t2987 * t2601;
t2583 = t2601 - 0.2e1 * t3459;
t3761 = t2583 * t2661;
t3458 = t2991 * t2602;
t2584 = t2602 - 0.2e1 * t3458;
t3760 = t2584 * t2662;
t3457 = t2995 * t2603;
t2585 = t2603 - 0.2e1 * t3457;
t3759 = t2585 * t2663;
t2913 = qJ(2,3) + t3782;
t2914 = -qJ(2,3) + t3783;
t3758 = ((sin(t2914) + sin(t2913)) * t2973 + (cos(t2914) + cos(t2913)) * t3959 + (cos(t3085 + t3779) + cos(qJ(1,3) + t2999) + 0.2e1 * t3064) * pkin(3) + (cos(qJ(3,3) - t3779) + cos(qJ(1,3) + t3001) + cos(t3783) + cos(t3782)) * pkin(2)) * t2607 / 0.2e1;
t2915 = qJ(2,2) + t3784;
t2916 = -qJ(2,2) + t3785;
t3757 = ((sin(t2916) + sin(t2915)) * t2973 + (cos(t2916) + cos(t2915)) * t3959 + (cos(t3093 + t3780) + cos(qJ(1,2) + t3014) + 0.2e1 * t3067) * pkin(3) + (cos(qJ(3,2) - t3780) + cos(qJ(1,2) + t3016) + cos(t3785) + cos(t3784)) * pkin(2)) * t2609 / 0.2e1;
t2613 = t3055 * t3560 + t3426;
t3753 = t2613 * t2919;
t3752 = t2613 * t2922;
t2614 = t3058 * t3559 + t3425;
t3751 = t2614 * t2920;
t3750 = t2614 * t2923;
t2615 = t3061 * t3558 + t3424;
t3749 = t2615 * t2921;
t3748 = t2615 * t2924;
t3747 = t2619 * t2661;
t3746 = t2620 * t2662;
t3745 = t2621 * t2663;
t3721 = t2699 * t3055;
t3720 = t2699 * t3064;
t3719 = t2700 * t2975;
t3718 = t2701 * t3058;
t3717 = t2701 * t3067;
t3716 = t2702 * t2978;
t3715 = t2703 * t3061;
t3714 = t2703 * t3070;
t3713 = t2704 * t2981;
t3081 = pkin(2) / 0.2e1;
t3709 = (t2929 + t3081) * t3053;
t3708 = (t2931 + t3081) * t3056;
t3707 = (t2933 + t3081) * t3059;
t3706 = t2802 * t2919;
t3705 = t2802 * t2922;
t3703 = t2804 * t2920;
t3702 = t2804 * t2923;
t3700 = t2806 * t2921;
t3699 = t2806 * t2924;
t3697 = t2919 * t3055;
t3696 = t2919 * t3064;
t3694 = t2920 * t3058;
t3693 = t2920 * t3067;
t3691 = t2921 * t3061;
t3690 = t2921 * t3070;
t3688 = t2922 * t3055;
t3687 = t2922 * t3064;
t3685 = t2923 * t3058;
t3684 = t2923 * t3067;
t3682 = t2924 * t3061;
t3681 = t2924 * t3070;
t2445 = (-t3233 / 0.2e1 + (-t2479 * t3744 - t3495) * t3679) * t3737 + t2463;
t3626 = t3074 * t2445;
t2446 = (-t3232 / 0.2e1 + (-t2480 * t3742 - t3494) * t3677) * t3735 + t2464;
t3625 = t3074 * t2446;
t2447 = (-t3231 / 0.2e1 + (-t2478 * t3740 - t3493) * t3675) * t3733 + t2465;
t3624 = t3074 * t2447;
t3621 = t3113 * t3117;
t2517 = t2520 ^ 2;
t2493 = t2514 * t3379 + t2517 * t3848;
t3331 = t2699 * t3468;
t2496 = t2517 * t3662 + t2628 * t3331;
t3397 = -0.4e1 * t2987 * t3838;
t3505 = t2520 * t3959;
t3617 = -t2696 * t3626 + (-t3054 * t2925 + t3903) * t3906 - 0.4e1 * t2493 * t3640 + t2496 * t3053 + (-t2696 * t3505 + t3053 * t3397) * t3744;
t2518 = t2521 ^ 2;
t2494 = t2515 * t3377 + t2518 * t3848;
t3327 = t2701 * t3467;
t2497 = t2518 * t3654 + t2629 * t3327;
t3396 = -0.4e1 * t2991 * t3837;
t3504 = t2521 * t3959;
t3616 = -t2697 * t3625 + (-t3057 * t2926 + t3902) * t3905 - 0.4e1 * t2494 * t3637 + t2497 * t3056 + (-t2697 * t3504 + t3056 * t3396) * t3742;
t2519 = t2522 ^ 2;
t2495 = t2516 * t3375 + t2519 * t3848;
t3323 = t2703 * t3466;
t2498 = t2519 * t3644 + t2630 * t3323;
t3395 = t3836 * t3867;
t3503 = t2522 * t3959;
t3615 = -t2698 * t3624 + (-t3060 * t2927 + t3901) * t3904 - 0.4e1 * t2495 * t3634 + t2498 * t3059 + (-t2698 * t3503 + t3059 * t3395) * t3740;
t3185 = -t3640 + t3667;
t3614 = t3185 * t3626 + t3949 * t3906 + 0.4e1 * t2493 * t3666 + t2496 * t3062 + (t3062 * t3397 + t3185 * t3505) * t3744;
t3184 = -t3637 + t3659;
t3613 = t3184 * t3625 + t3948 * t3905 + 0.4e1 * t2494 * t3658 + t2497 * t3065 + (t3065 * t3396 + t3184 * t3504) * t3742;
t3183 = -t3634 + t3650;
t3612 = t3183 * t3624 + t3947 * t3904 + 0.4e1 * t2495 * t3649 + t2498 * t3068 + (t3068 * t3395 + t3183 * t3503) * t3740;
t3114 = 0.1e1 / pkin(3) ^ 2;
t2511 = t3459 * t3894 + pkin(1) * t3063 * t2601 - pkin(2) * (t2601 + (t3737 * t3764 + 0.1e1 / t2664 ^ 2 * t3114 * t2553) * t2553 * t3678);
t3489 = t3074 * t3775;
t3352 = t3062 * t3489;
t3611 = t2511 * t3062 + t3956 * t3053 - t3352;
t3353 = t3053 * t3489;
t3610 = t2511 * t3053 - t3956 * t3062 - t3353;
t2512 = t3458 * t3894 + pkin(1) * t3066 * t2602 - pkin(2) * (t2602 + (t3735 * t3763 + 0.1e1 / t2665 ^ 2 * t3114 * t2554) * t2554 * t3676);
t3484 = t3074 * t3773;
t3344 = t3065 * t3484;
t3609 = t2512 * t3065 + t3955 * t3056 - t3344;
t3345 = t3056 * t3484;
t3608 = t2512 * t3056 - t3955 * t3065 - t3345;
t2513 = t3457 * t3894 + pkin(1) * t3069 * t2603 - pkin(2) * (t2603 + (t3733 * t3762 + 0.1e1 / t2666 ^ 2 * t3114 * t2555) * t2555 * t3674);
t3479 = t3074 * t3771;
t3336 = t3068 * t3479;
t3607 = t2513 * t3068 + t3954 * t3059 - t3336;
t3337 = t3059 * t3479;
t3606 = t2513 * t3059 - t3954 * t3068 - t3337;
t3574 = 0.2e1 * t3113;
t3539 = t2802 * t3814;
t3538 = t2804 * t3812;
t3537 = t2806 * t3810;
t3501 = t2445 * t3738;
t3500 = t2446 * t3736;
t3499 = t2447 * t3734;
t3498 = t2463 * t3720;
t3497 = t2464 * t3717;
t3496 = t2465 * t3714;
t3492 = t2490 * t3758;
t3491 = t2490 * t3738;
t3490 = t2490 * t3721;
t3487 = t2491 * t3757;
t3486 = t2491 * t3736;
t3485 = t2491 * t3718;
t3482 = t2492 * t3756;
t3481 = t2492 * t3734;
t3480 = t2492 * t3715;
t3477 = t2517 * t3721;
t3476 = t2518 * t3718;
t3475 = t2519 * t3715;
t3474 = t2520 * t3743;
t3473 = t2520 * t2628 * t3055;
t3472 = t2521 * t3741;
t3471 = t2521 * t2629 * t3058;
t3470 = t2522 * t3739;
t3469 = t2522 * t2630 * t3061;
t2637 = t3813 * t3843 + t3605;
t3080 = -pkin(3) / 0.2e1;
t2731 = t2935 + t3801 / 0.2e1 + t3080;
t2643 = t3417 * t3889 - t2725;
t3157 = pkin(2) * t3417 + t2643 * t3062;
t2562 = (-t2731 * t3697 + t2922 * t3709) * t3940 + (t2922 * t2637 + t2919 * t3157) * t3063 + t3753 + t2922 * t3712;
t3465 = t2562 * t3738;
t2563 = (t2731 * t3688 + t2919 * t3709) * t3940 + (t2919 * t2637 - t2922 * t3157) * t3063 - t3752 + t2919 * t3712;
t3464 = t2563 * t3738;
t2638 = t3811 * t3841 + t3604;
t2732 = t2936 + t3799 / 0.2e1 + t3080;
t2644 = t3416 * t3889 - t2726;
t3156 = pkin(2) * t3416 + t2644 * t3065;
t2564 = (-t2732 * t3694 + t2923 * t3708) * t3939 + (t2923 * t2638 + t2920 * t3156) * t3066 + t3751 + t2923 * t3711;
t3463 = t2564 * t3736;
t2565 = (t2732 * t3685 + t2920 * t3708) * t3939 + (t2920 * t2638 - t2923 * t3156) * t3066 - t3750 + t2920 * t3711;
t3462 = t2565 * t3736;
t2639 = t3809 * t3839 + t3603;
t2733 = t2937 + t3797 / 0.2e1 + t3080;
t2645 = t3415 * t3889 - t2727;
t3155 = pkin(2) * t3415 + t2645 * t3068;
t2566 = (-t2733 * t3691 + t2924 * t3707) * t3938 + (t2924 * t2639 + t2921 * t3155) * t3069 + t3749 + t2924 * t3710;
t3461 = t2566 * t3734;
t2567 = (t2733 * t3682 + t2921 * t3707) * t3938 + (t2921 * t2639 - t2924 * t3155) * t3069 - t3748 + t2921 * t3710;
t3460 = t2567 * t3734;
t3432 = t2699 * t3696;
t3431 = t2699 * t3687;
t3430 = t2701 * t3693;
t3429 = t2701 * t3684;
t3428 = t2703 * t3690;
t3427 = t2703 * t3681;
t3392 = t2699 * t3617;
t3391 = t2699 * t3614;
t3390 = t2701 * t3616;
t3389 = t2701 * t3613;
t3388 = t2703 * t3615;
t3387 = t2703 * t3612;
t2627 = (t2993 - 0.1e1 / 0.2e1) * t3645 + (t2995 - 0.1e1 / 0.2e1) * t3635;
t3386 = -0.4e1 * t2627 * t3772;
t3365 = t3054 * t3498;
t3364 = t3063 * t3498;
t3363 = t3057 * t3497;
t3362 = t3066 * t3497;
t3361 = t3060 * t3496;
t3360 = t3069 * t3496;
t3359 = t3185 * t3491;
t3358 = t2696 * t3491;
t3357 = t3054 * t3491;
t3356 = t3063 * t3491;
t2977 = t3054 ^ 2;
t3355 = t2490 * t2977 * t3720;
t3354 = t3663 * t3776;
t3351 = t3184 * t3486;
t3350 = t2697 * t3486;
t3349 = t3057 * t3486;
t3348 = t3066 * t3486;
t2980 = t3057 ^ 2;
t3347 = t2491 * t2980 * t3717;
t3346 = t3655 * t3774;
t3343 = t3183 * t3481;
t3342 = t2698 * t3481;
t3341 = t3060 * t3481;
t3340 = t3069 * t3481;
t2983 = t3060 ^ 2;
t3339 = t2492 * t2983 * t3714;
t3338 = t3645 * t3772;
t3335 = t2699 * t2976 * t3767;
t3334 = t2701 * t2979 * t3766;
t3333 = t2703 * t2982 * t3765;
t3332 = t2628 * t3064 * t3764;
t3330 = t3055 * t3468;
t3328 = t2629 * t3067 * t3763;
t3326 = t3058 * t3467;
t3324 = t2630 * t3070 * t3762;
t3322 = t3061 * t3466;
t3320 = t2601 * t3758;
t3319 = t2602 * t3757;
t3318 = t2603 * t3756;
t3317 = t3719 * t3747;
t3315 = t3716 * t3746;
t3313 = t3713 * t3745;
t3296 = t3663 * t3719;
t3295 = t3655 * t3716;
t3294 = t3645 * t3713;
t3287 = t3767 * t3845;
t3286 = t3766 * t3845;
t3285 = t3765 * t3845;
t3269 = t3611 * t3738;
t3268 = t3610 * t3738;
t2460 = -pkin(2) * t2463 + t3488;
t3267 = (t2460 * t3053 + t3062 * t2976 * t3287 + (-t2786 + t3903) * t2601 - t3352) * t3738;
t3266 = (-t2460 * t3062 - t2601 * t3949 + t2975 * t3287 - t3353) * t3738;
t3265 = t3609 * t3736;
t3264 = t3608 * t3736;
t2461 = -pkin(2) * t2464 + t3483;
t3263 = (t2461 * t3056 + t3065 * t2979 * t3286 + (-t2787 + t3902) * t2602 - t3344) * t3736;
t3262 = (-t2461 * t3065 - t2602 * t3948 + t2978 * t3286 - t3345) * t3736;
t3261 = t3607 * t3734;
t3260 = t3606 * t3734;
t2462 = -pkin(2) * t2465 + t3478;
t3259 = (t2462 * t3059 + t3068 * t2982 * t3285 + (-t2788 + t3901) * t2603 - t3336) * t3734;
t3258 = (-t2462 * t3068 - t2603 * t3947 + t2981 * t3285 - t3337) * t3734;
t3248 = pkin(5) * t3329;
t3247 = pkin(5) * t3325;
t3246 = pkin(5) * t3321;
t3230 = t3064 * t3354;
t3229 = t3067 * t3346;
t3228 = t3070 * t3338;
t3227 = t2699 * t3330;
t3226 = t3064 * t3331;
t3225 = t2701 * t3326;
t3224 = t3067 * t3327;
t3223 = t2703 * t3322;
t3222 = t3070 * t3323;
t3218 = t3063 * t3320;
t3217 = t3066 * t3319;
t3216 = t3069 * t3318;
t3215 = t2625 * t3317;
t2635 = -0.4e1 * t3292 + (0.4e1 * t2987 - 0.2e1) * t2985 - t2834;
t3214 = t2635 * t3317;
t3213 = t3054 * t3317;
t3212 = t3063 * t3317;
t3211 = t2626 * t3315;
t2636 = -0.4e1 * t3291 + (0.4e1 * t2991 - 0.2e1) * t2989 - t2835;
t3210 = t2636 * t3315;
t3209 = t3057 * t3315;
t3208 = t3066 * t3315;
t3207 = t2627 * t3313;
t2634 = 0.4e1 * t3293 + (t3867 + 0.2e1) * t2993 + t2836;
t3206 = t2634 * t3313;
t3205 = t3060 * t3313;
t3204 = t3069 * t3313;
t3200 = -t3335 / 0.4e1;
t3199 = t3335 / 0.4e1;
t3198 = -t3334 / 0.4e1;
t3197 = t3334 / 0.4e1;
t3196 = -t3333 / 0.4e1;
t3195 = t3333 / 0.4e1;
t3194 = t2445 * t2696 - t2517 * t3185;
t3193 = -t2445 * t3185 - t2517 * t2696;
t3192 = t2446 * t2697 - t2518 * t3184;
t3191 = -t2446 * t3184 - t2518 * t2697;
t3190 = t2447 * t2698 - t2519 * t3183;
t3189 = -t2447 * t3183 - t2519 * t2698;
t3179 = -0.2e1 * t3215;
t3178 = -0.2e1 * t3211;
t3177 = -0.2e1 * t3207;
t3176 = t2700 * t2834 * t3332;
t3175 = t3330 * t3743;
t3174 = t2919 * t3226;
t3173 = t2922 * t3226;
t3172 = t2702 * t2835 * t3328;
t3171 = t3326 * t3741;
t3170 = t2920 * t3224;
t3169 = t2923 * t3224;
t3168 = t2704 * t2836 * t3324;
t3167 = t3322 * t3739;
t3166 = t2921 * t3222;
t3165 = t2924 * t3222;
t3164 = t3064 * t3200;
t3163 = t3064 * t3199;
t3162 = t3067 * t3198;
t3161 = t3067 * t3197;
t3160 = t3070 * t3196;
t3159 = t3070 * t3195;
t3154 = -t2463 * t3721 + t3492;
t3153 = -t2464 * t3718 + t3487;
t3152 = -t2465 * t3715 + t3482;
t3151 = 0.2e1 * t2635 * t3474 + t3776 * t3888;
t2690 = t2696 ^ 2;
t3150 = t2690 * t3776 + t3474 * t3888;
t3149 = 0.2e1 * t2636 * t3472 + t3774 * t3887;
t2691 = t2697 ^ 2;
t3148 = t2691 * t3774 + t3472 * t3887;
t3147 = 0.2e1 * t2634 * t3470 + t3386;
t2692 = t2698 ^ 2;
t3146 = 0.4e1 * t2627 * t3470 + t2692 * t3772;
t2687 = t2928 + t2828 + t3598;
t2589 = -0.2e1 * t2687 * t3064 * t2987 - t2658 * t3704 + pkin(3) * ((t2935 + t2757) * t3064 + t2717);
t3145 = t2589 * t3299 + t3758;
t2688 = t2930 + t2829 + t3598;
t2590 = -0.2e1 * t2688 * t3067 * t2991 - t2659 * t3701 + pkin(3) * ((t2936 + t2758) * t3067 + t2718);
t3144 = t2590 * t3298 + t3757;
t3139 = t3145 * t2619;
t3138 = t3144 * t2620;
t3137 = -t2445 * t3721 + t2490 * t3145;
t3136 = -t2446 * t3718 + t2491 * t3144;
t3135 = -t2447 * t3715 + t2492 * t3143;
t3134 = t2562 * t3357 + t2564 * t3349 + t2566 * t3341;
t3133 = t2562 * t3356 + t2564 * t3348 + t2566 * t3340;
t3132 = t2563 * t3357 + t2565 * t3349 + t2567 * t3341;
t3131 = t2563 * t3356 + t2565 * t3348 + t2567 * t3340;
t2624 = pkin(3) * t2927 + (-t3594 + t3564 + 0.2e1 * t2830) * t3060;
t2623 = pkin(3) * t2926 + (-t3594 + t3566 + 0.2e1 * t2829) * t3057;
t2622 = pkin(3) * t2925 + (-t3594 + t3568 + 0.2e1 * t2828) * t3054;
t2561 = (-t2689 * t3682 - t2921 * t3537) * t3938 + (-t2624 * t2921 + t2645 * t3699) * t3069 + pkin(3) * t3748 - t2750 * t3700;
t2560 = (t2689 * t3691 - t2924 * t3537) * t3938 + (-t2624 * t2924 - t2645 * t3700) * t3069 - pkin(3) * t3749 - t2750 * t3699;
t2559 = (-t2688 * t3685 - t2920 * t3538) * t3939 + (-t2623 * t2920 + t2644 * t3702) * t3066 + pkin(3) * t3750 - t2749 * t3703;
t2558 = (t2688 * t3694 - t2923 * t3538) * t3939 + (-t2623 * t2923 - t2644 * t3703) * t3066 - pkin(3) * t3751 - t2749 * t3702;
t2557 = (-t2687 * t3688 - t2919 * t3539) * t3940 + (-t2622 * t2919 + t2643 * t3705) * t3063 + pkin(3) * t3752 - t2748 * t3706;
t2556 = (t2687 * t3697 - t2922 * t3539) * t3940 + (-t2622 * t2922 - t2643 * t3706) * t3063 - pkin(3) * t3753 - t2748 * t3705;
t2534 = t3069 * t3555 - t3060 * t3246 / 0.4e1;
t2533 = t3066 * t3556 - t3057 * t3247 / 0.4e1;
t2532 = t3063 * t3557 - t3054 * t3248 / 0.4e1;
t2531 = pkin(1) * t3449 + t3069 * t3246 / 0.4e1;
t2530 = pkin(1) * t3452 + t3066 * t3247 / 0.4e1;
t2529 = pkin(1) * t3455 + t3063 * t3248 / 0.4e1;
t2459 = -0.2e1 * t2492 * t2942 - t3069 * t3802;
t2458 = -0.2e1 * t2491 * t2940 - t3066 * t3803;
t2457 = -0.2e1 * t2490 * t2938 - t3063 * t3804;
t2456 = -t3060 * t3802 + t3771 * t3959;
t2455 = -t3057 * t3803 + t3773 * t3959;
t2454 = -t3054 * t3804 + t3775 * t3959;
t1 = [t2490 * t3431 + t2491 * t3429 + t2492 * t3427, 0, 0, t2922 * t3355 + t2923 * t3347 + t2924 * t3339 + ((-t2567 * t3745 + t2924 * t3324) * t3294 + (-t2565 * t3746 + t2923 * t3328) * t3295 + (-t2563 * t3747 + t2922 * t3332) * t3296) * t3117, 0.2e1 * t2922 * t3230 + 0.2e1 * t2923 * t3229 + 0.2e1 * t2924 * t3228 + ((t2567 * t3759 + t2924 * t3168) * t2981 + (t2565 * t3760 + t2923 * t3172) * t2978 + (t2563 * t3761 + t2922 * t3176) * t2975) * t3117, t2922 * t3365 + t2923 * t3363 + t2924 * t3361 + (t2922 * t3063 * t3163 + t2923 * t3066 * t3161 + t2924 * t3069 * t3159) * t3118 + t3132 * t3117, t2922 * t3364 + t2923 * t3362 + t2924 * t3360 + (t2922 * t3054 * t3164 + t2923 * t3057 * t3162 + t2924 * t3060 * t3160) * t3118 + t3131 * t3117, (t2463 * t3464 + t2464 * t3462 + t2465 * t3460) * t3117, t2454 * t3431 + t2455 * t3429 + t2456 * t3427 + (-t2529 * t3173 - t2530 * t3169 - t2531 * t3165 - t3132 * pkin(5) + (t2563 * t3213 + t2565 * t3209 + t2567 * t3205) * pkin(1)) * t3117, t2457 * t3431 + t2458 * t3429 + t2459 * t3427 + (-t2532 * t3173 - t2533 * t3169 - t2534 * t3165 - t3131 * pkin(5) + (t2563 * t3212 + t2565 * t3208 + t2567 * t3204) * pkin(1)) * t3117, t3146 * t3681 + t3148 * t3684 + t3150 * t3687 + (t2563 * t3179 + t2565 * t3178 + t2567 * t3177 + (-t2557 * t3215 - t2559 * t3211 - t2561 * t3207) * t3574) * t3117, -t3147 * t3681 + t3149 * t3684 + t3151 * t3687 + (-t2563 * t3214 - t2565 * t3210 + t2567 * t3206 + (-t2557 * t3214 - t2559 * t3210 + t2561 * t3206) * t3113) * t3117, t3190 * t3427 + t3192 * t3429 + t3194 * t3431 + (t2563 * t3358 + t2565 * t3350 + t2567 * t3342 + (t2557 * t3358 + t2559 * t3350 + t2561 * t3342) * t3113) * t3117, t3189 * t3427 + t3191 * t3429 + t3193 * t3431 + (-t2563 * t3359 - t2565 * t3351 - t2567 * t3343 + (-t2557 * t3359 - t2559 * t3351 - t2561 * t3343) * t3113) * t3117, (t2445 * t3464 + t2446 * t3462 + t2447 * t3460 + (t2557 * t3501 + t2559 * t3500 + t2561 * t3499) * t3113) * t3117, t3615 * t3427 + t3616 * t3429 + t3617 * t3431 + (t2567 * t3260 + t2565 * t3264 + t2563 * t3268 + (t2557 * t3266 + t2559 * t3262 + t2561 * t3258) * t3113) * t3117, t3612 * t3427 + t3613 * t3429 + t3614 * t3431 + (t2567 * t3261 + t2565 * t3265 + t2563 * t3269 + (t2557 * t3267 + t2559 * t3263 + t2561 * t3259) * t3113) * t3117, 0; -t2490 * t3432 - t2491 * t3430 - t2492 * t3428, 0, 0, -t2919 * t3355 - t2920 * t3347 - t2921 * t3339 + ((-t2566 * t3745 - t2921 * t3324) * t3294 + (-t2564 * t3746 - t2920 * t3328) * t3295 + (-t2562 * t3747 - t2919 * t3332) * t3296) * t3117, -0.2e1 * t2919 * t3230 - 0.2e1 * t2920 * t3229 - 0.2e1 * t2921 * t3228 + ((t2566 * t3759 - t2921 * t3168) * t2981 + (t2564 * t3760 - t2920 * t3172) * t2978 + (t2562 * t3761 - t2919 * t3176) * t2975) * t3117, -t2919 * t3365 - t2920 * t3363 - t2921 * t3361 + (t2919 * t3063 * t3164 + t2920 * t3066 * t3162 + t2921 * t3069 * t3160) * t3118 + t3134 * t3117, -t2919 * t3364 - t2920 * t3362 - t2921 * t3360 + (t2919 * t3054 * t3163 + t2920 * t3057 * t3161 + t2921 * t3060 * t3159) * t3118 + t3133 * t3117, (t2463 * t3465 + t2464 * t3463 + t2465 * t3461) * t3117, -t2454 * t3432 - t2455 * t3430 - t2456 * t3428 + (t2529 * t3174 + t2530 * t3170 + t2531 * t3166 - t3134 * pkin(5) + (t2562 * t3213 + t2564 * t3209 + t2566 * t3205) * pkin(1)) * t3117, -t2457 * t3432 - t2458 * t3430 - t2459 * t3428 + (t2532 * t3174 + t2533 * t3170 + t2534 * t3166 - t3133 * pkin(5) + (t2562 * t3212 + t2564 * t3208 + t2566 * t3204) * pkin(1)) * t3117, -t3146 * t3690 - t3148 * t3693 - t3150 * t3696 + (t2562 * t3179 + t2564 * t3178 + t2566 * t3177 + (-t2556 * t3215 - t2558 * t3211 - t2560 * t3207) * t3574) * t3117, t3147 * t3690 - t3149 * t3693 - t3151 * t3696 + (-t2562 * t3214 - t2564 * t3210 + t2566 * t3206 + (-t2556 * t3214 - t2558 * t3210 + t2560 * t3206) * t3113) * t3117, -t3190 * t3428 - t3192 * t3430 - t3194 * t3432 + (t2562 * t3358 + t2564 * t3350 + t2566 * t3342 + (t2556 * t3358 + t2558 * t3350 + t2560 * t3342) * t3113) * t3117, -t3189 * t3428 - t3191 * t3430 - t3193 * t3432 + (-t2562 * t3359 - t2564 * t3351 - t2566 * t3343 + (-t2556 * t3359 - t2558 * t3351 - t2560 * t3343) * t3113) * t3117, (t2445 * t3465 + t2446 * t3463 + t2447 * t3461 + (t2556 * t3501 + t2558 * t3500 + t2560 * t3499) * t3113) * t3117, -t3388 * t3690 - t3390 * t3693 - t3392 * t3696 + (t2566 * t3260 + t2564 * t3264 + t2562 * t3268 + (t2556 * t3266 + t2558 * t3262 + t2560 * t3258) * t3113) * t3117, -t3387 * t3690 - t3389 * t3693 - t3391 * t3696 + (t2566 * t3261 + t2564 * t3265 + t2562 * t3269 + (t2556 * t3267 + t2558 * t3263 + t2560 * t3259) * t3113) * t3117, 0; -t3480 - t3485 - t3490, 0, 0, -t3054 * t3218 - t3057 * t3217 - t3060 * t3216 - t2977 * t3490 - t2980 * t3485 - t2983 * t3480 + (-t3167 * t3645 - t3171 * t3655 - t3175 * t3663) * t3117, -0.2e1 * t3055 * t3354 - 0.2e1 * t3058 * t3346 - 0.2e1 * t3061 * t3338 + t2583 * t3758 + t2584 * t3757 + t2585 * t3756 + (-t2834 * t3175 - t2835 * t3171 - t2836 * t3167) * t3117, t3152 * t3060 + t3153 * t3057 + t3154 * t3054 + (t3055 * t3063 * t3200 + t3058 * t3066 * t3198 + t3061 * t3069 * t3196) * t3118, t3152 * t3069 + t3153 * t3066 + t3154 * t3063 + (t3195 * t3647 + t3197 * t3657 + t3199 * t3665) * t3118, t2463 * t3758 + t2464 * t3757 + t2465 * t3756, -t2454 * t3721 - t2455 * t3718 - t2456 * t3715 + (t2529 * t3227 + t2530 * t3225 + t2531 * t3223) * t3117 + (-t3054 * t3492 - t3057 * t3487 - t3060 * t3482) * pkin(5) + (t3054 * t3320 + t3057 * t3319 + t3060 * t3318) * pkin(1), -t2457 * t3721 - t2458 * t3718 - t2459 * t3715 + (t2532 * t3227 + t2533 * t3225 + t2534 * t3223) * t3117 + (-t3063 * t3492 - t3066 * t3487 - t3069 * t3482) * pkin(5) + (t3216 + t3217 + t3218) * pkin(1), -t2690 * t3490 - t2691 * t3485 - t2692 * t3480 + (-0.4e1 * t3469 - 0.2e1 * t3929) * t2704 * t2627 + (-0.2e1 * t3138 - 0.4e1 * t3471) * t2702 * t2626 + (-0.2e1 * t3139 - 0.4e1 * t3473) * t2700 * t2625, -0.4e1 * t2625 * t3490 - 0.4e1 * t2626 * t3485 + t3061 * t3386 + (-t3138 - 0.2e1 * t3471) * t2702 * t2636 + (-t3139 - 0.2e1 * t3473) * t2700 * t2635 + (0.2e1 * t3469 + t3929) * t2704 * t2634, t2696 * t3137 + t2697 * t3136 + t2698 * t3135 + t3183 * t3475 + t3184 * t3476 + t3185 * t3477, t2696 * t3477 + t2697 * t3476 + t2698 * t3475 - t3135 * t3183 - t3136 * t3184 - t3137 * t3185, t2445 * t3758 + t2446 * t3757 + t2447 * t3756 + (t2589 * t3501 + t2590 * t3500 + t2591 * t3499) * t3621, -t3061 * t3388 - t3058 * t3390 - t3055 * t3392 + t3606 * t3756 + t3608 * t3757 + t3610 * t3758 + (t2589 * t3266 + t2590 * t3262 + t2591 * t3258) * t3621, -t3061 * t3387 - t3058 * t3389 - t3055 * t3391 + t3607 * t3756 + t3609 * t3757 + t3611 * t3758 + (t2589 * t3267 + t2590 * t3263 + t2591 * t3259) * t3621, 0;];
tau_reg  = t1;
