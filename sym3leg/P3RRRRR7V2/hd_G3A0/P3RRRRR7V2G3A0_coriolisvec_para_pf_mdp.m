% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRRRR7V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR7V2G3A0_convert_par2_MPV_fixb.m

% Output:
% taucX [3x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 10:47
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(7,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P3RRRRR7V2G3A0_coriolisvec_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 10:42:16
% EndTime: 2020-08-07 10:47:45
% DurationCPUTime: 347.87s
% Computational Cost: add. (4691463->1844), mult. (10213962->3027), div. (74106->37), fcn. (5728686->186), ass. (0->1239)
t8365 = 2 * pkin(1);
t8364 = 4 * pkin(2);
t8363 = 2 * pkin(1);
t7440 = sin(qJ(3,3));
t7362 = 0.1e1 / t7440;
t7461 = pkin(5) + pkin(6);
t7359 = -pkin(7) - t7461;
t7442 = sin(qJ(1,3));
t7172 = t7442 * t7359;
t7451 = cos(qJ(1,3));
t7331 = pkin(1) * t7451;
t7175 = t7451 * t7359;
t7326 = pkin(1) * t7442;
t7458 = xDP(3);
t8115 = (t7175 + t7326) * t7458;
t7437 = legFrame(3,2);
t7306 = sin(t7437);
t7309 = cos(t7437);
t7459 = xDP(2);
t7460 = xDP(1);
t8353 = -t7306 * t7459 + t7309 * t7460;
t6982 = -t8115 / 0.2e1 + t8353 * (t7331 - t7172 / 0.2e1);
t7060 = t7306 * t7460 + t7309 * t7459;
t7054 = pkin(1) * t7060;
t7441 = sin(qJ(2,3));
t8062 = t7441 * t7451;
t7831 = t8353 * t8062;
t6985 = -pkin(2) * t7831 + t7054;
t8040 = t7451 * t7460;
t8041 = t7451 * t7459;
t7642 = -t7306 * t8041 + t7309 * t8040;
t6991 = t7642 * pkin(1) - t8115;
t7112 = t7331 - t7172;
t7003 = t7112 * t8353;
t7449 = cos(qJ(3,3));
t7316 = t7449 * pkin(3);
t7187 = t7316 + pkin(2);
t7312 = t7440 * pkin(1);
t7372 = t7449 ^ 2;
t8248 = t7372 - 0.1e1;
t7956 = pkin(3) * t8248;
t7450 = cos(qJ(2,3));
t8066 = t7440 * t7450;
t7006 = t7187 * t8066 + t7441 * t7956 + t7312;
t8133 = t7060 * t7441;
t7036 = pkin(2) * t8133;
t7039 = pkin(1) * t8133;
t8067 = t7440 * t7441;
t7921 = pkin(3) * t8067;
t7135 = pkin(1) - t7921;
t8104 = t7187 * t7450;
t7051 = t7135 + t8104;
t7162 = pkin(1) * t7172;
t7499 = pkin(3) ^ 2;
t7432 = t7499 / 0.2e1;
t7506 = pkin(1) ^ 2;
t7299 = t7432 + t7506;
t7503 = pkin(2) ^ 2;
t7436 = t7503 / 0.2e1;
t7165 = t7436 + t7299;
t7211 = -0.2e1 / 0.3e1 * pkin(5) - 0.2e1 / 0.3e1 * pkin(6) - 0.2e1 / 0.3e1 * pkin(7);
t7433 = -t7499 / 0.2e1;
t7298 = t7433 + t7503;
t7322 = pkin(3) * t7372;
t7340 = t7499 + t7506;
t7471 = 0.2e1 * qJ(3,3);
t7342 = sin(t7471);
t7371 = t7449 * t7372;
t7374 = t7450 ^ 2;
t7373 = t7450 * t7374;
t7645 = t8353 * (t7331 - t7172 / 0.3e1);
t8025 = (pkin(2) + pkin(3)) * (pkin(2) - pkin(3));
t7959 = 0.2e1 * t8025;
t8127 = t8353 * t7451;
t7648 = t7959 * t8127;
t8042 = t7449 * t7450;
t7684 = t8042 * t8067;
t7475 = 0.2e1 * qJ(2,3);
t7352 = cos(t7475);
t8031 = t7458 * t7442;
t7687 = t7006 * t7352 * t8031;
t7914 = pkin(2) * t8031;
t7762 = t7441 * t7914;
t7830 = t7449 * t8127;
t7765 = pkin(2) * t7830;
t7343 = sin(t7475);
t7814 = t7343 * t8031;
t7817 = t7112 * t8067;
t7832 = t7440 * t8127;
t7325 = pkin(1) * t7441;
t8220 = pkin(3) * t7440;
t7132 = t7325 - t8220;
t8112 = t7132 * t7449;
t7835 = t7060 * t8112;
t8239 = pkin(2) * t7060;
t7985 = pkin(1) * t8239;
t7907 = 0.4e1 * t7985;
t8204 = t7441 * pkin(2);
t7922 = t6982 * t8204;
t7950 = pkin(1) * t7175;
t8043 = t7449 * t7440;
t7962 = 0.2e1 * t8043;
t8284 = 0.2e1 * t7299;
t7966 = t7060 * t8284;
t8000 = -0.4e1 * t7371 + 0.5e1 * t7449;
t8007 = t7036 + t7003;
t8065 = t7441 * (-(t7299 * t7442 + t7950) * t7458 + t8353 * (t7299 * t7451 - t7162));
t8073 = t7372 * t7441;
t8132 = t7060 * t7449;
t8202 = t7449 * pkin(2);
t8214 = pkin(3) * t7450;
t7350 = cos(t7471);
t8226 = pkin(3) * t7350;
t8279 = 0.2e1 * t7372;
t8247 = t8279 - 0.1e1;
t8258 = pkin(2) * pkin(3);
t8264 = -pkin(2) / 0.2e1;
t8270 = -0.2e1 * t7458;
t8278 = 0.4e1 * t7372;
t8280 = -0.2e1 * t7340;
t8285 = -0.2e1 * t7298;
t8292 = -0.3e1 * pkin(3);
t8293 = -0.5e1 * pkin(3);
t7971 = -0.2e1 * t7060 * t7372;
t8335 = (0.2e1 * t7440 * t7830 + t7060 + t7971) * pkin(3);
t6931 = (-t7687 + ((t7832 - t8132) * pkin(2) + t8335) * t7373 + (-t7054 * t7449 + t8007 * t7440 + (t7765 + (t7060 * t7962 + t8127 * t8247) * pkin(3)) * t7441) * t7374 + ((t7003 * t7441 + t8239) * t7449 + (-pkin(2) * t8127 + t7039) * t7440 - t8335) * t7450 - t7831 * t7322 + t7135 * t8132 - t8353 * (-pkin(3) * t8062 + t7112 * t7440)) * t8226 + pkin(3) * (t7006 * t7814 + ((t7440 * t8239 + t7765) * t7374 + (t6985 * t7440 + t7449 * t8007) * t7450 + t7835 - t8353 * t7817) * t7450 + ((t7374 * t7962 + (-t7441 + 0.2e1 * t8073) * t7450) * t7060 + (t7374 * t8247 - 0.2e1 * t7684 - t8248) * t8127) * t8214) * t7342 - (t7449 + 0.1e1) * t7051 * pkin(2) * (t7449 - 0.1e1) * t7814 - t7687 * t8202 + (t7648 * t8043 + 0.2e1 * (-t7372 * t8025 + t7298) * t7060 + ((t8278 - 0.3e1) * t7832 + t8000 * t7060) * t8258) * t7373 + ((t7441 * t7648 - 0.4e1 * t7985) * t7372 + (t6982 * t8364 + t7959 * t8133) * t8043 + t7831 * t8285 + t7907 + ((t6991 + t7036) * t7440 * t8278 - 0.3e1 * (t7036 - 0.2e1 / 0.3e1 * t8115 + t7645) * t7440 + t8000 * t6985) * pkin(3)) * t7374 + ((0.4e1 * (t7039 + (t8031 / 0.2e1 + t7642) * t8264) * t8220 + 0.4e1 * t7922 + t7060 * t8280) * t7372 + ((t7441 * t7907 + (t7165 * t7442 + t7950) * t8270 + 0.2e1 * t8353 * (t7340 * t7451 - t7162)) * t7440 + ((-0.4e1 / 0.5e1 * t8115 + t8353 * (t7331 - t7172 / 0.5e1)) * t7441 + 0.3e1 / 0.5e1 * t8239) * t8293) * t7449 - 0.3e1 * (t7039 - pkin(2) * (-t8031 / 0.3e1 + t7642)) * t8220 - 0.4e1 * t7922 + t7966) * t7450 + (-t6991 * t8220 + t8065) * t8279 + ((-pkin(1) * t7914 + t7441 * t7966) * t7440 + (-t7762 / 0.3e1 + t7054) * t8292) * t7449 + 0.3e1 * (-(t7211 * t7451 + t7326) * t7458 + t7645) * t8220 - 0.2e1 * t8065 + ((0.4e1 * t6991 * t7441 + 0.2e1 * t8239) * t7450 - t7762 + 0.2e1 * t7054) * pkin(3) * t7371;
t7213 = pkin(2) * t7316;
t8259 = pkin(1) * pkin(3);
t7982 = -0.3e1 / 0.2e1 * t8259;
t8063 = t7441 * t7450;
t8072 = t7374 * t7440;
t8219 = pkin(3) * t7441;
t8255 = t7342 / 0.2e1;
t8283 = 0.2e1 * t7312;
t6962 = (t7187 * t8063 + t7325 + (t7374 - 0.1e1) * t8220) * t8226 / 0.2e1 + t7051 * t8214 * t8255 + (t7213 + t7298) * t8072 + ((t7312 - t8219 / 0.2e1) * t7316 + (t8283 + (t7372 - 0.3e1 / 0.2e1) * t8219) * pkin(2)) * t7450 + t8073 * t8259 + t7299 * t7440 + t7441 * t7982;
t8166 = t6931 / t6962;
t7859 = t7362 * t8166;
t7674 = t7859 / 0.2e1;
t6925 = pkin(2) * t7674;
t7504 = 1 / pkin(2);
t6922 = t7504 * t7674;
t7993 = t7499 - t7503;
t7130 = t7993 * t7459;
t7131 = t7993 * t7460;
t7169 = pkin(1) * t8067;
t7141 = t7169 - pkin(3);
t7136 = pkin(1) - 0.2e1 * t7921;
t7579 = t7136 * t7451 - t7172;
t7808 = t7440 * t8062;
t7683 = t7359 * t7808;
t7315 = t7372 * t7499;
t7801 = (t7642 - t8031) * t7315;
t7805 = t7458 * t8025;
t7811 = t7441 * t7172;
t8194 = -0.2e1 * t8258;
t7903 = t7460 * t8194;
t7904 = t7459 * t8194;
t8209 = pkin(3) * t7460;
t7927 = t7440 * t8209;
t8210 = pkin(3) * t7459;
t7928 = t7440 * t8210;
t7941 = t7460 * t8204;
t7942 = t7459 * t8204;
t8060 = t7441 * t7499;
t8329 = t7136 * t7442 + t7175;
t8142 = t8329 * t7458;
t8211 = pkin(3) * t7458;
t8230 = pkin(2) * t7460;
t8231 = pkin(2) * t7459;
t6940 = (-0.2e1 * t7801 - 0.2e1 * ((pkin(2) * t8040 + t7928) * t7309 + (-pkin(2) * t8041 + t7927) * t7306 - t7914) * t7316 + (t7131 * t7451 + t7440 * t7904) * t7309 + (-t7130 * t7451 + t7440 * t7903) * t7306 + t7442 * t7805) * t7374 + (t7971 * t8060 - ((t7460 * t7579 + 0.2e1 * t7942) * t7309 + (-t7459 * t7579 + 0.2e1 * t7941) * t7306 - t8142) * t7316 + (-pkin(1) * t7928 + t7130 * t7441 - t7579 * t8230) * t7309 + (-pkin(1) * t7927 + t7131 * t7441 + t7579 * t8231) * t7306 + pkin(2) * t8142) * t7450 + t7801 - pkin(3) * t7835 + (-pkin(1) * t7942 + (t7141 * t8040 + (-t7460 * t7811 + t8231) * t7440) * pkin(3)) * t7309 + (-pkin(1) * t7941 + (-t7141 * t8041 + (t7459 * t7811 + t8230) * t7440) * pkin(3)) * t7306 - (t7141 * t7442 + t7683) * t8211;
t7500 = 0.1e1 / pkin(3);
t7048 = 0.1e1 / t7051;
t8079 = t7362 * t7504;
t7838 = t7048 * t8079;
t7695 = t7500 * t7838;
t7612 = t6940 * t7695;
t6907 = t6922 + t7612;
t8172 = t6907 * t7499;
t6886 = t6925 - t8172;
t6889 = t6925 + t8172;
t6935 = t7612 / 0.2e1;
t6901 = t6922 + t6935;
t7469 = 0.4e1 * qJ(3,3);
t7384 = t7469 + t7475;
t7222 = sin(t7384);
t7470 = 0.3e1 * qJ(3,3);
t7385 = t7470 + t7475;
t7223 = sin(t7385);
t7386 = t7471 + t7475;
t7224 = sin(t7386);
t7387 = t7471 + qJ(2,3);
t7225 = sin(t7387);
t7388 = qJ(3,3) + t7475;
t7226 = sin(t7388);
t7472 = -0.2e1 * qJ(3,3);
t7390 = t7472 + t7475;
t7228 = sin(t7390);
t7394 = qJ(2,3) + t7470;
t7229 = sin(t7394);
t7395 = qJ(2,3) + qJ(3,3);
t7230 = sin(t7395);
t7396 = qJ(2,3) - qJ(3,3);
t7231 = sin(t7396);
t7397 = qJ(2,3) + t7472;
t7232 = sin(t7397);
t7474 = 0.3e1 * qJ(2,3);
t7383 = t7469 + t7474;
t7255 = cos(t7383);
t7256 = cos(t7385);
t7258 = cos(t7387);
t7259 = cos(t7388);
t7389 = -qJ(3,3) + t7475;
t7260 = cos(t7389);
t7261 = cos(t7390);
t7391 = t7474 + t7470;
t7262 = cos(t7391);
t7392 = t7474 + t7471;
t7263 = cos(t7392);
t7393 = t7474 + qJ(3,3);
t7264 = cos(t7393);
t7265 = cos(t7394);
t7266 = cos(t7395);
t7267 = cos(t7396);
t7339 = -0.3e1 * t7499 + t7503;
t7341 = sin(t7470);
t7473 = 0.4e1 * qJ(2,3);
t7498 = pkin(3) * t7499;
t7502 = pkin(2) * t7503;
t7018 = -t7442 * t8353 - t7451 * t7458;
t8234 = pkin(2) * t7450;
t7098 = pkin(3) * t7266 + pkin(1) + t8234;
t7083 = 0.1e1 / t7098;
t8148 = t7018 * t7083;
t7704 = t8025 * t8148;
t7594 = t7359 * t7704;
t7847 = t7359 * t8148;
t7768 = pkin(3) * t7847;
t7663 = pkin(2) * t7768;
t7675 = -t7859 / 0.2e1;
t7725 = t7504 * t7859;
t7771 = pkin(3) * t7859;
t7777 = pkin(2) * t7847;
t7780 = pkin(2) * t7859;
t8208 = pkin(3) * t7503;
t7990 = 0.3e1 * t8208;
t7787 = -t7498 + t7990;
t7788 = pkin(3) * t7959;
t7794 = (t7225 - t7441) * pkin(3);
t7798 = t8025 / 0.4e1;
t7845 = t7499 * t8148;
t7896 = 0.2e1 * t8208;
t7908 = 0.12e2 * t8258;
t8022 = t7503 * sin(t7389);
t7911 = pkin(3) * t8022;
t8229 = pkin(3) * t7230;
t7934 = t6907 * t8229;
t7957 = -0.12e2 * pkin(1) * t8258;
t7958 = 0.6e1 * t8025;
t7972 = 6 * t7503;
t7974 = 0.3e1 * t7499;
t7335 = t7359 ^ 2;
t8001 = t7335 / 0.3e1 + t7506;
t7129 = t7499 / 0.3e1 + t8001;
t7979 = -0.12e2 * pkin(3) * t7129;
t7980 = 0.12e2 * pkin(3) * (t7436 + t7129);
t8251 = t7499 / 0.4e1;
t7981 = 0.24e2 * pkin(3) * (t8251 + 0.3e1 / 0.8e1 * t7503 + t8001);
t7989 = 0.4e1 * t8208;
t7991 = -0.3e1 * t8208;
t7992 = -0.5e1 * pkin(2) * t7499;
t8024 = t7499 * t7504;
t8138 = t7048 * t7500;
t8139 = t7048 * t7362;
t8193 = 0.2e1 * t8258;
t7435 = t7503 / 0.4e1;
t7797 = t7435 + t8001;
t8261 = 0.12e2 * t7432 + 0.12e2 * t7797;
t7430 = 0.3e1 / 0.4e1 * t7499;
t8262 = 0.12e2 * t7430 + 0.12e2 * t7797;
t7465 = -2 * t7503;
t8263 = -0.12e2 * t7430 + t7465 - 0.12e2 * t8001;
t8267 = 0.6e1 * t7499;
t7796 = t7335 + 0.9e1 / 0.4e1 * t7499 + t7506;
t8286 = (12 * t7503) + 0.8e1 * t7796;
t8287 = -(6 * t7503) - 0.8e1 * t7796;
t8291 = 0.2e1 * pkin(3);
t8295 = 2 * pkin(2);
t8299 = -2 * pkin(1);
t8301 = -8 * pkin(1);
t7268 = cos(t7397);
t8323 = t7268 + cos(t7474);
t8324 = -t7263 - t7450;
t8325 = -t7256 + t7259;
t8326 = -t7255 - t7258;
t8260 = pkin(1) * pkin(2);
t8339 = 8 * t8260;
t8340 = 0.2e1 * t7499;
t8344 = 4 * pkin(1);
t7257 = cos(t7386);
t7464 = -0.2e1 * t7499;
t7795 = t7464 + t7465 - (4 * t7506);
t8195 = -0.4e1 * t8258;
t8196 = 0.4e1 * t8259;
t8197 = -0.8e1 * t8259;
t8198 = 4 * t8260;
t8199 = -8 * t8260;
t8311 = t7464 + t7503;
t8349 = (4 * t7506) + (2 * t7503) + t8340;
t8356 = t7465 + t7499;
t8348 = t7257 * t8311 + cos(t7470) * t8193 + cos(t7384) * t7499 + t7259 * t8195 + t7266 * t8197 + t7450 * t8199 - 0.2e1 * t7213 + t7795 + (t7258 + t7268) * t8198 + (t7265 + t7267) * t8196 + t8356 * t7352 + t8349 * t7350;
t8359 = -t7257 + t7352 + t7350;
t6850 = -((-0.2e1 * t6940 * t7265 * t8139 + t8326 * t6907 * t8340 + 0.2e1 * t8324 * t6886 + (t8325 * t6907 * t8344 + (-(t6922 - t7612 / 0.2e1) * t7266 + (-t7262 + t7264) * t6901) * t8364) * pkin(3) + (t7267 * t8291 + t8323 * pkin(2) + (-0.1e1 + t8359) * t8365) * t7859) * t7359 + (sin(qJ(3,3) + t7473) * t7991 - 0.6e1 * t7911 + t7341 * t7990 + t7440 * t7981 + t7223 * t7980 + t7226 * t7979 + t7787 * sin(t7470 + t7473) + t7498 * sin(0.5e1 * qJ(3,3) + t7473) + (-sin(t7473) - t7228) * t7502 + (t7339 * sin(t7473 + t7471) + t7343 * t8263 + t7342 * t8262 + t7224 * t8261 + (sin(t7469 + t7473) + t7222) * t7974) * pkin(2) + (sin(t7392) * t7958 + sin(t7383) * t8267 + t7441 * t8287 + t7225 * t8286 + (-sin(t7474) - t7232) * t7972 + (sin(t7391) - sin(t7393) + t7229 + t7230 - 0.2e1 * t7231) * t7908) * pkin(1)) * t8148) / (t7256 * t7989 + (t7260 * t8193 + t7261 * t7503 + t8348) * t8295) * t8148 + (((t6907 * t8060 + t7777 / 0.4e1) * t8301 + t7499 * t7222 * t7674 + t7503 * t7228 * t7675 + t6889 * t7223 * t8291 + (t7780 / 0.4e1 + (0.3e1 / 0.4e1 * t8166 + t6940 * t8138) * t7362 * t8024 + t7506 * t6922) * t7342 * t8364 + (t6925 + 0.2e1 * t8172) * t7225 * t8344 + (t6922 + 0.2e1 / 0.3e1 * t7612) * t7231 * t7957 + 0.8e1 * ((0.3e1 / 0.8e1 * t7725 + t6935) * t7503 + t7299 * t6907) * t8220 - 0.4e1 * t6901 * t7911 + t7934 * t8339 + (t6922 + 0.4e1 / 0.5e1 * t7612) * t7343 * t7992 + t6907 * t7226 * t7788 + t7232 * t7780 * t8299 + t8326 * t7359 * t7845 + t8323 * t7503 * t7847 - 0.2e1 * (t7266 + t7262) * t7663 + 0.2e1 * (t7267 + t7264) * t7663 + t8324 * t7594 + (t7341 * t7771 + (t6925 + 0.4e1 * t8172) * t7224) * pkin(2) + t8359 * t7777 * t8363 + (t7229 * t7771 + t8325 * t7768) * t8365) * t7504 * t7675 - 0.8e1 * (((-t7256 / 0.4e1 + t7259 / 0.4e1) * pkin(1) + (t7263 / 0.8e1 - t7255 / 0.8e1 - t7258 / 0.8e1 + t7450 / 0.8e1) * pkin(3) + (-t7262 / 0.8e1 - t7265 / 0.8e1 + t7264 / 0.8e1 + t7266 / 0.8e1) * pkin(2)) * t7847 + (-t8022 / 0.4e1 + t7223 * t8251 + t7226 * t7798 + t7165 * t7440 + pkin(1) * t7794 + ((-t7231 + t7230) * pkin(1) + (t7224 / 0.2e1 - t7343 / 0.2e1 + t8255) * pkin(3)) * pkin(2)) * t6907) * t6940 * t7838) / (t7502 * t7261 + (t7256 + t7260) * t7896 + t8348 * pkin(2));
t7009 = t7018 ^ 2;
t7084 = 0.1e1 / t7098 ^ 2;
t6988 = t7009 * t7084;
t6934 = t7612 / 0.3e1;
t7846 = t7441 * t8148;
t7707 = t7359 * t7846;
t7965 = 0.2e1 * t7315;
t7988 = 0.2e1 * t7316;
t7363 = 0.1e1 / t7440 ^ 2;
t7505 = 1 / pkin(2) ^ 2;
t8078 = t7363 * t7505;
t8242 = pkin(2) * t6901;
t8338 = 0.2e1 / 0.3e1 * pkin(2);
t7624 = (0.2e1 * t7187 * t7768 * t8072 + ((t7707 + t8242) * t7965 + 0.3e1 * (t7707 * t8338 + (t7725 / 0.6e1 + t6934) * t7499 + t7503 * (t6922 + t6934)) * t7316 + t7441 * t7594 + t6889 * pkin(2)) * t7450 + (-(t6901 * t8204 + t7847 / 0.2e1) * t8220 + pkin(1) * t8242) * t7988 - (t6889 * t7441 + t7777) * t8220 + pkin(1) * t6889) * t8078 * t8166;
t8147 = t7018 * t7084;
t8250 = t7504 / 0.2e1;
t6877 = (t7934 + t7847 + (t7230 * t6940 * t7048 * t7504 + (t7441 / 0.2e1 + (t8204 + t8229) * t8250) * t8166) * t7362) * t8147;
t8061 = t7441 * t7461;
t7879 = t6877 * t8061;
t6994 = 0.1e1 / (pkin(2) * (pkin(2) * t7230 + t7794 + t8283) - t7231 * t7503);
t7336 = t8340 + t7503;
t8192 = 0.3e1 * t8258;
t7886 = ((pkin(3) * t7224 + (t7226 + t7440) * pkin(2)) * t7847 + (t7503 * t7267 + t7258 * t8258 + t7336 * t7266 + t7450 * t8192 + (pkin(3) + t8202) * t8365) * t6907) * t6940 * t6994;
t7493 = 0.2e1 * pkin(7);
t7995 = 0.2e1 * pkin(6) + t7493;
t7546 = pkin(7) ^ 2 + t7506 + (t7493 + pkin(6)) * pkin(6) + (t7995 + pkin(5)) * pkin(5);
t7070 = t7499 + t7546;
t7069 = t7974 + t7546;
t8300 = -4 * pkin(1);
t7627 = t7921 * t8300 + t7069;
t7776 = pkin(2) * t7846;
t7902 = 0.2e1 * t7213;
t7953 = pkin(1) * t8148;
t7996 = -0.3e1 / 0.4e1 * t7499 + t7435;
t8236 = pkin(2) * t7359;
t8256 = 0.3e1 / 0.2e1 * t7503 + t7433;
t8269 = -0.3e1 * t7498;
t8343 = 0.2e1 * t7374;
t7888 = (0.4e1 * (t7315 + t7213 / 0.2e1 + t7996) * t7187 * t7373 * t8148 + (t7135 * t7845 * t8279 + (-(-t6907 * t7359 + 0.3e1 * t7776) * t8220 / 0.2e1 + pkin(2) * t7953) * t7988 - (-t6901 * t8236 + t7846 * t8256) * t8220 + pkin(1) * t7704) * t8343 + ((t6901 * t7902 + t6907 * t7965 + t6886) * t7441 * t7359 + (t7371 * t8269 + t7627 * t7316 + (t7627 - 0.3e1 * t7315) * pkin(2)) * t8148) * t7450 - pkin(3) * ((t6907 * t7316 + t7674) * t7440 * t7359 + (t7070 * t8067 + (-t7372 * t7921 + (t8279 - 0.2e1) * pkin(1)) * pkin(3)) * t8148)) * t8148;
t8296 = -2 * pkin(2);
t8362 = t7879 + ((-t7624 / 0.4e1 + (-t7888 / 0.2e1 - t7886 / 0.2e1) * t8079) * t8138 + t6850) * t8296 - (pkin(1) + 0.2e1 * t8234) * t7441 * t6988;
t7443 = sin(qJ(3,2));
t7365 = 0.1e1 / t7443;
t7445 = sin(qJ(1,2));
t7173 = t7445 * t7359;
t7454 = cos(qJ(1,2));
t7332 = pkin(1) * t7454;
t7176 = t7454 * t7359;
t7328 = pkin(1) * t7445;
t8114 = (t7176 + t7328) * t7458;
t7438 = legFrame(2,2);
t7307 = sin(t7438);
t7310 = cos(t7438);
t8354 = -t7307 * t7459 + t7310 * t7460;
t6983 = -t8114 / 0.2e1 + t8354 * (t7332 - t7173 / 0.2e1);
t7061 = t7307 * t7460 + t7310 * t7459;
t7055 = pkin(1) * t7061;
t7444 = sin(qJ(2,2));
t8054 = t7444 * t7454;
t7828 = t8354 * t8054;
t6986 = -pkin(2) * t7828 + t7055;
t8036 = t7454 * t7460;
t8037 = t7454 * t7459;
t7641 = -t7307 * t8037 + t7310 * t8036;
t6992 = t7641 * pkin(1) - t8114;
t7113 = t7332 - t7173;
t7004 = t7113 * t8354;
t7452 = cos(qJ(3,2));
t7318 = t7452 * pkin(3);
t7189 = t7318 + pkin(2);
t7313 = t7443 * pkin(1);
t7376 = t7452 ^ 2;
t8246 = t7376 - 0.1e1;
t7955 = pkin(3) * t8246;
t7453 = cos(qJ(2,2));
t8058 = t7443 * t7453;
t7007 = t7189 * t8058 + t7444 * t7955 + t7313;
t8131 = t7061 * t7444;
t7037 = pkin(2) * t8131;
t7040 = pkin(1) * t8131;
t8059 = t7443 * t7444;
t7920 = pkin(3) * t8059;
t7137 = pkin(1) - t7920;
t8101 = t7189 * t7453;
t7052 = t7137 + t8101;
t7163 = pkin(1) * t7173;
t7323 = pkin(3) * t7376;
t7479 = 0.2e1 * qJ(3,2);
t7345 = sin(t7479);
t7375 = t7452 * t7376;
t7378 = t7453 ^ 2;
t7377 = t7453 * t7378;
t7644 = t8354 * (t7332 - t7173 / 0.3e1);
t8126 = t8354 * t7454;
t7647 = t7959 * t8126;
t8038 = t7452 * t7453;
t7682 = t8038 * t8059;
t7483 = 0.2e1 * qJ(2,2);
t7355 = cos(t7483);
t8030 = t7458 * t7445;
t7686 = t7007 * t7355 * t8030;
t7913 = pkin(2) * t8030;
t7761 = t7444 * t7913;
t7827 = t7452 * t8126;
t7764 = pkin(2) * t7827;
t7346 = sin(t7483);
t7813 = t7346 * t8030;
t7816 = t7113 * t8059;
t7829 = t7443 * t8126;
t7327 = pkin(1) * t7444;
t8218 = pkin(3) * t7443;
t7133 = t7327 - t8218;
t8111 = t7133 * t7452;
t7834 = t7061 * t8111;
t8238 = pkin(2) * t7061;
t7984 = pkin(1) * t8238;
t7906 = 0.4e1 * t7984;
t8203 = t7444 * pkin(2);
t7945 = t6983 * t8203;
t7949 = pkin(1) * t7176;
t8039 = t7452 * t7443;
t7961 = 0.2e1 * t8039;
t7970 = t7061 * t8284;
t7999 = -0.4e1 * t7375 + 0.5e1 * t7452;
t8006 = t7037 + t7004;
t8057 = t7444 * (-(t7299 * t7445 + t7949) * t7458 + t8354 * (t7299 * t7454 - t7163));
t8071 = t7376 * t7444;
t8130 = t7061 * t7452;
t8201 = t7452 * pkin(2);
t8213 = pkin(3) * t7453;
t7353 = cos(t7479);
t8225 = pkin(3) * t7353;
t8276 = 0.2e1 * t7376;
t8245 = t8276 - 0.1e1;
t8275 = 0.4e1 * t7376;
t7969 = -0.2e1 * t7061 * t7376;
t8336 = (0.2e1 * t7443 * t7827 + t7061 + t7969) * pkin(3);
t6932 = (-t7686 + ((t7829 - t8130) * pkin(2) + t8336) * t7377 + (-t7055 * t7452 + t8006 * t7443 + (t7764 + (t7061 * t7961 + t8126 * t8245) * pkin(3)) * t7444) * t7378 + ((t7004 * t7444 + t8238) * t7452 + (-pkin(2) * t8126 + t7040) * t7443 - t8336) * t7453 - t7828 * t7323 + t7137 * t8130 - t8354 * (-pkin(3) * t8054 + t7113 * t7443)) * t8225 + pkin(3) * (t7007 * t7813 + ((t7443 * t8238 + t7764) * t7378 + (t6986 * t7443 + t7452 * t8006) * t7453 + t7834 - t8354 * t7816) * t7453 + ((t7378 * t7961 + (-t7444 + 0.2e1 * t8071) * t7453) * t7061 + (t7378 * t8245 - 0.2e1 * t7682 - t8246) * t8126) * t8213) * t7345 - t7052 * pkin(2) * (t7452 + 0.1e1) * (t7452 - 0.1e1) * t7813 - t7686 * t8201 + (t7647 * t8039 + 0.2e1 * (-t7376 * t8025 + t7298) * t7061 + ((t8275 - 0.3e1) * t7829 + t7999 * t7061) * t8258) * t7377 + ((t7444 * t7647 - 0.4e1 * t7984) * t7376 + (t6983 * t8364 + t7959 * t8131) * t8039 + t7828 * t8285 + t7906 + ((t6992 + t7037) * t7443 * t8275 - 0.3e1 * (t7037 - 0.2e1 / 0.3e1 * t8114 + t7644) * t7443 + t7999 * t6986) * pkin(3)) * t7378 + ((0.4e1 * (t7040 + (t8030 / 0.2e1 + t7641) * t8264) * t8218 + 0.4e1 * t7945 + t7061 * t8280) * t7376 + ((t7444 * t7906 + (t7165 * t7445 + t7949) * t8270 + 0.2e1 * t8354 * (t7340 * t7454 - t7163)) * t7443 + ((-0.4e1 / 0.5e1 * t8114 + t8354 * (t7332 - t7173 / 0.5e1)) * t7444 + 0.3e1 / 0.5e1 * t8238) * t8293) * t7452 - 0.3e1 * (t7040 - (-t8030 / 0.3e1 + t7641) * pkin(2)) * t8218 - 0.4e1 * t7945 + t7970) * t7453 + (-t6992 * t8218 + t8057) * t8276 + ((-pkin(1) * t7913 + t7444 * t7970) * t7443 + (-t7761 / 0.3e1 + t7055) * t8292) * t7452 + 0.3e1 * (-(t7211 * t7454 + t7328) * t7458 + t7644) * t8218 - 0.2e1 * t8057 + ((0.4e1 * t6992 * t7444 + 0.2e1 * t8238) * t7453 - t7761 + 0.2e1 * t7055) * pkin(3) * t7375;
t7214 = pkin(2) * t7318;
t8055 = t7444 * t7453;
t8070 = t7378 * t7443;
t8217 = pkin(3) * t7444;
t8254 = t7345 / 0.2e1;
t8282 = 0.2e1 * t7313;
t6963 = (t7189 * t8055 + t7327 + (t7378 - 0.1e1) * t8218) * t8225 / 0.2e1 + t7052 * t8213 * t8254 + (t7214 + t7298) * t8070 + ((t7313 - t8217 / 0.2e1) * t7318 + (t8282 + (t7376 - 0.3e1 / 0.2e1) * t8217) * pkin(2)) * t7453 + t8071 * t8259 + t7299 * t7443 + t7444 * t7982;
t8165 = t6932 / t6963;
t7858 = t7365 * t8165;
t7672 = t7858 / 0.2e1;
t6926 = pkin(2) * t7672;
t6923 = t7504 * t7672;
t7170 = pkin(1) * t8059;
t7142 = t7170 - pkin(3);
t7138 = pkin(1) - 0.2e1 * t7920;
t7578 = t7138 * t7454 - t7173;
t7807 = t7443 * t8054;
t7681 = t7359 * t7807;
t7317 = t7376 * t7499;
t7800 = (t7641 - t8030) * t7317;
t7810 = t7444 * t7173;
t7925 = t7443 * t8209;
t7926 = t7443 * t8210;
t7938 = t7460 * t8203;
t7939 = t7459 * t8203;
t8052 = t7444 * t7499;
t8328 = t7138 * t7445 + t7176;
t8141 = t8328 * t7458;
t6941 = (-0.2e1 * t7800 - 0.2e1 * ((pkin(2) * t8036 + t7926) * t7310 + (-pkin(2) * t8037 + t7925) * t7307 - t7913) * t7318 + (t7131 * t7454 + t7443 * t7904) * t7310 + (-t7130 * t7454 + t7443 * t7903) * t7307 + t7445 * t7805) * t7378 + (t7969 * t8052 - ((t7460 * t7578 + 0.2e1 * t7939) * t7310 + (-t7459 * t7578 + 0.2e1 * t7938) * t7307 - t8141) * t7318 + (-pkin(1) * t7926 + t7130 * t7444 - t7578 * t8230) * t7310 + (-pkin(1) * t7925 + t7131 * t7444 + t7578 * t8231) * t7307 + pkin(2) * t8141) * t7453 + t7800 - pkin(3) * t7834 + (-pkin(1) * t7939 + (t7142 * t8036 + (-t7460 * t7810 + t8231) * t7443) * pkin(3)) * t7310 + (-pkin(1) * t7938 + (-t7142 * t8037 + (t7459 * t7810 + t8230) * t7443) * pkin(3)) * t7307 - (t7142 * t7445 + t7681) * t8211;
t7049 = 0.1e1 / t7052;
t8077 = t7365 * t7504;
t7837 = t7049 * t8077;
t7694 = t7500 * t7837;
t7611 = t6941 * t7694;
t6908 = t6923 + t7611;
t8171 = t6908 * t7499;
t6887 = t6926 - t8171;
t6890 = t6926 + t8171;
t6937 = t7611 / 0.2e1;
t6902 = t6923 + t6937;
t7477 = 0.4e1 * qJ(3,2);
t7399 = t7477 + t7483;
t7233 = sin(t7399);
t7478 = 0.3e1 * qJ(3,2);
t7401 = t7478 + t7483;
t7234 = sin(t7401);
t7403 = t7479 + t7483;
t7235 = sin(t7403);
t7404 = t7479 + qJ(2,2);
t7236 = sin(t7404);
t7405 = qJ(3,2) + t7483;
t7237 = sin(t7405);
t7480 = -0.2e1 * qJ(3,2);
t7407 = t7480 + qJ(2,2);
t7239 = sin(t7407);
t7409 = t7483 + t7480;
t7240 = sin(t7409);
t7410 = qJ(2,2) + t7478;
t7241 = sin(t7410);
t7411 = qJ(2,2) + qJ(3,2);
t7242 = sin(t7411);
t7412 = qJ(2,2) - qJ(3,2);
t7243 = sin(t7412);
t7482 = 0.3e1 * qJ(2,2);
t7398 = t7477 + t7482;
t7269 = cos(t7398);
t7400 = t7478 + t7482;
t7270 = cos(t7400);
t7271 = cos(t7401);
t7402 = t7479 + t7482;
t7272 = cos(t7402);
t7274 = cos(t7404);
t7275 = cos(t7405);
t7406 = -qJ(3,2) + t7483;
t7276 = cos(t7406);
t7408 = t7482 + qJ(3,2);
t7278 = cos(t7408);
t7279 = cos(t7409);
t7280 = cos(t7410);
t7281 = cos(t7411);
t7282 = cos(t7412);
t7344 = sin(t7478);
t7481 = 0.4e1 * qJ(2,2);
t7019 = -t7445 * t8354 - t7454 * t7458;
t8233 = pkin(2) * t7453;
t7099 = pkin(3) * t7281 + pkin(1) + t8233;
t7085 = 0.1e1 / t7099;
t8146 = t7019 * t7085;
t7700 = t8025 * t8146;
t7593 = t7359 * t7700;
t7844 = t7359 * t8146;
t7767 = pkin(3) * t7844;
t7662 = pkin(2) * t7767;
t7673 = -t7858 / 0.2e1;
t7721 = t7504 * t7858;
t7770 = pkin(3) * t7858;
t7775 = pkin(2) * t7844;
t7779 = pkin(2) * t7858;
t7793 = (t7236 - t7444) * pkin(3);
t7842 = t7499 * t8146;
t8021 = t7503 * sin(t7406);
t7910 = pkin(3) * t8021;
t8228 = pkin(3) * t7242;
t7933 = t6908 * t8228;
t8136 = t7049 * t7500;
t8137 = t7049 * t7365;
t7277 = cos(t7407);
t8319 = t7277 + cos(t7482);
t8320 = -t7272 - t7453;
t8321 = -t7271 + t7275;
t8322 = -t7269 - t7274;
t7273 = cos(t7403);
t8347 = t7273 * t8311 + cos(t7478) * t8193 + cos(t7399) * t7499 + t7275 * t8195 + t7281 * t8197 + t7453 * t8199 - 0.2e1 * t7214 + t7795 + (t7274 + t7277) * t8198 + (t7280 + t7282) * t8196 + t8356 * t7355 + t8349 * t7353;
t8358 = -t7273 + t7355 + t7353;
t6851 = -((-0.2e1 * t6941 * t7280 * t8137 + t8322 * t6908 * t8340 + 0.2e1 * t8320 * t6887 + (t8321 * t6908 * t8344 + (-(t6923 - t7611 / 0.2e1) * t7281 + (-t7270 + t7278) * t6902) * t8364) * pkin(3) + (t7282 * t8291 + t8319 * pkin(2) + (-0.1e1 + t8358) * t8365) * t7858) * t7359 + (t7787 * sin(t7478 + t7481) + t7498 * sin(t7481 + 0.5e1 * qJ(3,2)) + sin(t7481 + qJ(3,2)) * t7991 - 0.6e1 * t7910 + t7344 * t7990 + t7443 * t7981 + t7234 * t7980 + t7237 * t7979 + (-sin(t7481) - t7240) * t7502 + (t7339 * sin(t7479 + t7481) + t7346 * t8263 + t7345 * t8262 + t7235 * t8261 + (sin(t7477 + t7481) + t7233) * t7974) * pkin(2) + (sin(t7402) * t7958 + sin(t7398) * t8267 + t7444 * t8287 + t7236 * t8286 + (-sin(t7482) - t7239) * t7972 + (sin(t7400) - sin(t7408) + t7241 + t7242 - 0.2e1 * t7243) * t7908) * pkin(1)) * t8146) / (t7271 * t7989 + (t7276 * t8193 + t7279 * t7503 + t8347) * t8295) * t8146 + ((-0.4e1 * t6902 * t7910 + 0.8e1 * ((0.3e1 / 0.8e1 * t7721 + t6937) * t7503 + t7299 * t6908) * t8218 + (t6908 * t8052 + t7775 / 0.4e1) * t8301 + t7499 * t7233 * t7672 + t7503 * t7240 * t7673 + t6890 * t7234 * t8291 + (t7779 / 0.4e1 + (0.3e1 / 0.4e1 * t8165 + t6941 * t8136) * t7365 * t8024 + t7506 * t6923) * t7345 * t8364 + (t6926 + 0.2e1 * t8171) * t7236 * t8344 + (t6923 + 0.2e1 / 0.3e1 * t7611) * t7243 * t7957 + t7933 * t8339 + (t6923 + 0.4e1 / 0.5e1 * t7611) * t7346 * t7992 + t6908 * t7237 * t7788 + t7239 * t7779 * t8299 + t8322 * t7359 * t7842 + t8319 * t7503 * t7844 - 0.2e1 * (t7281 + t7270) * t7662 + 0.2e1 * (t7282 + t7278) * t7662 + t8320 * t7593 + (t7344 * t7770 + (t6926 + 0.4e1 * t8171) * t7235) * pkin(2) + t8358 * t7775 * t8363 + (t7241 * t7770 + t8321 * t7767) * t8365) * t7504 * t7673 - 0.8e1 * (((-t7271 / 0.4e1 + t7275 / 0.4e1) * pkin(1) + (t7272 / 0.8e1 - t7269 / 0.8e1 - t7274 / 0.8e1 + t7453 / 0.8e1) * pkin(3) + (-t7270 / 0.8e1 - t7280 / 0.8e1 + t7278 / 0.8e1 + t7281 / 0.8e1) * pkin(2)) * t7844 + (-t8021 / 0.4e1 + t7234 * t8251 + t7237 * t7798 + t7165 * t7443 + pkin(1) * t7793 + ((-t7243 + t7242) * pkin(1) + (t7235 / 0.2e1 - t7346 / 0.2e1 + t8254) * pkin(3)) * pkin(2)) * t6908) * t6941 * t7837) / (t7502 * t7279 + (t7271 + t7276) * t7896 + t8347 * pkin(2));
t7010 = t7019 ^ 2;
t7086 = 0.1e1 / t7099 ^ 2;
t6989 = t7010 * t7086;
t6936 = t7611 / 0.3e1;
t7843 = t7444 * t8146;
t7703 = t7359 * t7843;
t7964 = 0.2e1 * t7317;
t7987 = 0.2e1 * t7318;
t7366 = 0.1e1 / t7443 ^ 2;
t8076 = t7366 * t7505;
t8241 = pkin(2) * t6902;
t7623 = (0.2e1 * t7189 * t7767 * t8070 + ((t7703 + t8241) * t7964 + 0.3e1 * (t7703 * t8338 + (t7721 / 0.6e1 + t6936) * t7499 + t7503 * (t6923 + t6936)) * t7318 + t7444 * t7593 + t6890 * pkin(2)) * t7453 + (-(t6902 * t8203 + t7844 / 0.2e1) * t8218 + pkin(1) * t8241) * t7987 - (t6890 * t7444 + t7775) * t8218 + pkin(1) * t6890) * t8076 * t8165;
t8145 = t7019 * t7086;
t6878 = (t7933 + t7844 + (t7242 * t6941 * t7049 * t7504 + (t7444 / 0.2e1 + (t8203 + t8228) * t8250) * t8165) * t7365) * t8145;
t8053 = t7444 * t7461;
t7874 = t6878 * t8053;
t6996 = 0.1e1 / (pkin(2) * (pkin(2) * t7242 + t7793 + t8282) - t7243 * t7503);
t7885 = ((pkin(3) * t7235 + (t7237 + t7443) * pkin(2)) * t7844 + (t7503 * t7282 + t7274 * t8258 + t7336 * t7281 + t7453 * t8192 + (pkin(3) + t8201) * t8365) * t6908) * t6941 * t6996;
t7626 = t7920 * t8300 + t7069;
t7774 = pkin(2) * t7843;
t7901 = 0.2e1 * t7214;
t7952 = pkin(1) * t8146;
t8342 = 0.2e1 * t7378;
t7887 = (0.4e1 * (t7317 + t7214 / 0.2e1 + t7996) * t7189 * t7377 * t8146 + (t7137 * t7842 * t8276 + (-(-t6908 * t7359 + 0.3e1 * t7774) * t8218 / 0.2e1 + pkin(2) * t7952) * t7987 - (-t6902 * t8236 + t7843 * t8256) * t8218 + pkin(1) * t7700) * t8342 + ((t6902 * t7901 + t6908 * t7964 + t6887) * t7444 * t7359 + (t7375 * t8269 + t7626 * t7318 + (t7626 - 0.3e1 * t7317) * pkin(2)) * t8146) * t7453 - pkin(3) * ((t6908 * t7318 + t7672) * t7443 * t7359 + (t7070 * t8059 + (-t7376 * t7920 + (t8276 - 0.2e1) * pkin(1)) * pkin(3)) * t8146)) * t8146;
t8361 = t7874 + ((-t7623 / 0.4e1 + (-t7887 / 0.2e1 - t7885 / 0.2e1) * t8077) * t8136 + t6851) * t8296 - (pkin(1) + 0.2e1 * t8233) * t7444 * t6989;
t7446 = sin(qJ(3,1));
t7368 = 0.1e1 / t7446;
t7448 = sin(qJ(1,1));
t7174 = t7448 * t7359;
t7457 = cos(qJ(1,1));
t7333 = pkin(1) * t7457;
t7177 = t7457 * t7359;
t7330 = pkin(1) * t7448;
t8113 = (t7177 + t7330) * t7458;
t7439 = legFrame(1,2);
t7308 = sin(t7439);
t7311 = cos(t7439);
t8355 = -t7308 * t7459 + t7311 * t7460;
t6984 = -t8113 / 0.2e1 + t8355 * (t7333 - t7174 / 0.2e1);
t7062 = t7308 * t7460 + t7311 * t7459;
t7056 = pkin(1) * t7062;
t7447 = sin(qJ(2,1));
t8046 = t7447 * t7457;
t7825 = t8355 * t8046;
t6987 = -pkin(2) * t7825 + t7056;
t8032 = t7457 * t7460;
t8033 = t7457 * t7459;
t7640 = -t7308 * t8033 + t7311 * t8032;
t6993 = t7640 * pkin(1) - t8113;
t7114 = t7333 - t7174;
t7005 = t7114 * t8355;
t7455 = cos(qJ(3,1));
t7320 = t7455 * pkin(3);
t7191 = t7320 + pkin(2);
t7314 = t7446 * pkin(1);
t7380 = t7455 ^ 2;
t8244 = t7380 - 0.1e1;
t7954 = pkin(3) * t8244;
t7456 = cos(qJ(2,1));
t8050 = t7446 * t7456;
t7008 = t7191 * t8050 + t7447 * t7954 + t7314;
t8129 = t7062 * t7447;
t7038 = pkin(2) * t8129;
t7041 = pkin(1) * t8129;
t8051 = t7446 * t7447;
t7918 = pkin(3) * t8051;
t7139 = pkin(1) - t7918;
t8098 = t7191 * t7456;
t7053 = t7139 + t8098;
t7164 = pkin(1) * t7174;
t7324 = pkin(3) * t7380;
t7487 = 0.2e1 * qJ(3,1);
t7348 = sin(t7487);
t7379 = t7455 * t7380;
t7382 = t7456 ^ 2;
t7381 = t7456 * t7382;
t7643 = t8355 * (t7333 - t7174 / 0.3e1);
t8125 = t8355 * t7457;
t7646 = t7959 * t8125;
t8034 = t7455 * t7456;
t7680 = t8034 * t8051;
t7491 = 0.2e1 * qJ(2,1);
t7358 = cos(t7491);
t8029 = t7458 * t7448;
t7685 = t7008 * t7358 * t8029;
t7912 = pkin(2) * t8029;
t7760 = t7447 * t7912;
t7824 = t7455 * t8125;
t7763 = pkin(2) * t7824;
t7349 = sin(t7491);
t7812 = t7349 * t8029;
t7815 = t7114 * t8051;
t7826 = t7446 * t8125;
t7329 = pkin(1) * t7447;
t8216 = pkin(3) * t7446;
t7134 = t7329 - t8216;
t8110 = t7134 * t7455;
t7833 = t7062 * t8110;
t8237 = pkin(2) * t7062;
t7983 = pkin(1) * t8237;
t7905 = 0.4e1 * t7983;
t8235 = pkin(2) * t7447;
t7944 = t6984 * t8235;
t7948 = pkin(1) * t7177;
t8035 = t7455 * t7446;
t7960 = 0.2e1 * t8035;
t7968 = t7062 * t8284;
t7998 = -0.4e1 * t7379 + 0.5e1 * t7455;
t8005 = t7038 + t7005;
t8049 = t7447 * (-(t7299 * t7448 + t7948) * t7458 + t8355 * (t7299 * t7457 - t7164));
t8069 = t7380 * t7447;
t8128 = t7062 * t7455;
t8200 = t7455 * pkin(2);
t8212 = pkin(3) * t7456;
t7356 = cos(t7487);
t8224 = pkin(3) * t7356;
t8273 = 0.2e1 * t7380;
t8243 = t8273 - 0.1e1;
t8272 = 0.4e1 * t7380;
t7967 = -0.2e1 * t7062 * t7380;
t8337 = (0.2e1 * t7446 * t7824 + t7062 + t7967) * pkin(3);
t6933 = (-t7685 + ((t7826 - t8128) * pkin(2) + t8337) * t7381 + (-t7056 * t7455 + t8005 * t7446 + (t7763 + (t7062 * t7960 + t8125 * t8243) * pkin(3)) * t7447) * t7382 + ((t7005 * t7447 + t8237) * t7455 + (-pkin(2) * t8125 + t7041) * t7446 - t8337) * t7456 - t7825 * t7324 + t7139 * t8128 - (-pkin(3) * t8046 + t7114 * t7446) * t8355) * t8224 + (t7008 * t7812 + ((t7446 * t8237 + t7763) * t7382 + (t6987 * t7446 + t7455 * t8005) * t7456 + t7833 - t8355 * t7815) * t7456 + ((t7382 * t7960 + (-t7447 + 0.2e1 * t8069) * t7456) * t7062 + (t7382 * t8243 - 0.2e1 * t7680 - t8244) * t8125) * t8212) * pkin(3) * t7348 - t7053 * pkin(2) * (t7455 + 0.1e1) * (t7455 - 0.1e1) * t7812 - t7685 * t8200 + (t7646 * t8035 + 0.2e1 * (-t7380 * t8025 + t7298) * t7062 + ((t8272 - 0.3e1) * t7826 + t7998 * t7062) * t8258) * t7381 + ((t7447 * t7646 - 0.4e1 * t7983) * t7380 + (t6984 * t8364 + t7959 * t8129) * t8035 + t7825 * t8285 + t7905 + ((t6993 + t7038) * t7446 * t8272 - 0.3e1 * (t7038 - 0.2e1 / 0.3e1 * t8113 + t7643) * t7446 + t7998 * t6987) * pkin(3)) * t7382 + ((0.4e1 * (t7041 + (t8029 / 0.2e1 + t7640) * t8264) * t8216 + 0.4e1 * t7944 + t7062 * t8280) * t7380 + ((t7447 * t7905 + (t7165 * t7448 + t7948) * t8270 + 0.2e1 * t8355 * (t7340 * t7457 - t7164)) * t7446 + ((-0.4e1 / 0.5e1 * t8113 + t8355 * (t7333 - t7174 / 0.5e1)) * t7447 + 0.3e1 / 0.5e1 * t8237) * t8293) * t7455 - 0.3e1 * (t7041 - (-t8029 / 0.3e1 + t7640) * pkin(2)) * t8216 - 0.4e1 * t7944 + t7968) * t7456 + (-t6993 * t8216 + t8049) * t8273 + ((-pkin(1) * t7912 + t7447 * t7968) * t7446 + (-t7760 / 0.3e1 + t7056) * t8292) * t7455 + 0.3e1 * (-t7458 * (t7211 * t7457 + t7330) + t7643) * t8216 - 0.2e1 * t8049 + ((0.4e1 * t6993 * t7447 + 0.2e1 * t8237) * t7456 - t7760 + 0.2e1 * t7056) * pkin(3) * t7379;
t7215 = pkin(2) * t7320;
t8047 = t7447 * t7456;
t8068 = t7382 * t7446;
t8215 = pkin(3) * t7447;
t8253 = t7348 / 0.2e1;
t8281 = 0.2e1 * t7314;
t6961 = (t7191 * t8047 + t7329 + (t7382 - 0.1e1) * t8216) * t8224 / 0.2e1 + t7053 * t8212 * t8253 + (t7215 + t7298) * t8068 + ((t7314 - t8215 / 0.2e1) * t7320 + (t8281 + (t7380 - 0.3e1 / 0.2e1) * t8215) * pkin(2)) * t7456 + t8069 * t8259 + t7299 * t7446 + t7447 * t7982;
t8164 = t6933 / t6961;
t7857 = t7368 * t8164;
t7670 = t7857 / 0.2e1;
t6927 = pkin(2) * t7670;
t6924 = t7504 * t7670;
t7171 = pkin(1) * t8051;
t7143 = t7171 - pkin(3);
t7140 = pkin(1) - 0.2e1 * t7918;
t7577 = t7140 * t7457 - t7174;
t7806 = t7446 * t8046;
t7679 = t7359 * t7806;
t7319 = t7380 * t7499;
t7799 = (t7640 - t8029) * t7319;
t7809 = t7447 * t7174;
t7923 = t7446 * t8209;
t7924 = t7446 * t8210;
t7935 = t7447 * t8230;
t7936 = t7447 * t8231;
t8044 = t7447 * t7499;
t8327 = t7140 * t7448 + t7177;
t8140 = t8327 * t7458;
t6942 = (-0.2e1 * t7799 - 0.2e1 * ((pkin(2) * t8032 + t7924) * t7311 + (-pkin(2) * t8033 + t7923) * t7308 - t7912) * t7320 + (t7131 * t7457 + t7446 * t7904) * t7311 + (-t7130 * t7457 + t7446 * t7903) * t7308 + t7448 * t7805) * t7382 + (t7967 * t8044 - ((t7460 * t7577 + 0.2e1 * t7936) * t7311 + (-t7459 * t7577 + 0.2e1 * t7935) * t7308 - t8140) * t7320 + (-pkin(1) * t7924 + t7130 * t7447 - t7577 * t8230) * t7311 + (-pkin(1) * t7923 + t7131 * t7447 + t7577 * t8231) * t7308 + pkin(2) * t8140) * t7456 + t7799 - pkin(3) * t7833 + (-pkin(1) * t7936 + (t7143 * t8032 + (-t7460 * t7809 + t8231) * t7446) * pkin(3)) * t7311 + (-pkin(1) * t7935 + (-t7143 * t8033 + (t7459 * t7809 + t8230) * t7446) * pkin(3)) * t7308 - (t7143 * t7448 + t7679) * t8211;
t7050 = 0.1e1 / t7053;
t8075 = t7368 * t7504;
t7836 = t7050 * t8075;
t7693 = t7500 * t7836;
t7610 = t6942 * t7693;
t6909 = t6924 + t7610;
t8170 = t6909 * t7499;
t6888 = t6927 - t8170;
t6891 = t6927 + t8170;
t6939 = t7610 / 0.2e1;
t6903 = t6924 + t6939;
t7485 = 0.4e1 * qJ(3,1);
t7413 = t7485 + t7491;
t7244 = sin(t7413);
t7486 = 0.3e1 * qJ(3,1);
t7414 = t7486 + t7491;
t7245 = sin(t7414);
t7415 = t7487 + t7491;
t7246 = sin(t7415);
t7416 = t7487 + qJ(2,1);
t7247 = sin(t7416);
t7418 = qJ(3,1) + t7491;
t7248 = sin(t7418);
t7488 = -0.2e1 * qJ(3,1);
t7420 = t7488 + t7491;
t7250 = sin(t7420);
t7421 = t7488 + qJ(2,1);
t7251 = sin(t7421);
t7425 = qJ(2,1) + t7486;
t7252 = sin(t7425);
t7426 = qJ(2,1) + qJ(3,1);
t7253 = sin(t7426);
t7427 = qJ(2,1) - qJ(3,1);
t7254 = sin(t7427);
t7283 = cos(t7414);
t7285 = cos(t7416);
t7490 = 0.3e1 * qJ(2,1);
t7417 = qJ(3,1) + t7490;
t7286 = cos(t7417);
t7287 = cos(t7418);
t7419 = -qJ(3,1) + t7491;
t7288 = cos(t7419);
t7289 = cos(t7420);
t7422 = t7490 + t7485;
t7291 = cos(t7422);
t7423 = t7490 + t7486;
t7292 = cos(t7423);
t7424 = t7490 + t7487;
t7293 = cos(t7424);
t7294 = cos(t7425);
t7295 = cos(t7426);
t7296 = cos(t7427);
t7347 = sin(t7486);
t7489 = 0.4e1 * qJ(2,1);
t7020 = -t7448 * t8355 - t7457 * t7458;
t8232 = pkin(2) * t7456;
t7100 = pkin(3) * t7295 + pkin(1) + t8232;
t7087 = 0.1e1 / t7100;
t8144 = t7020 * t7087;
t7696 = t8025 * t8144;
t7592 = t7359 * t7696;
t7841 = t7359 * t8144;
t7766 = pkin(3) * t7841;
t7661 = pkin(2) * t7766;
t7671 = -t7857 / 0.2e1;
t7717 = t7504 * t7857;
t7769 = pkin(3) * t7857;
t7773 = pkin(2) * t7841;
t7778 = pkin(2) * t7857;
t7792 = (t7247 - t7447) * pkin(3);
t7839 = t7499 * t8144;
t8020 = t7503 * sin(t7419);
t7909 = pkin(3) * t8020;
t8227 = pkin(3) * t7253;
t7932 = t6909 * t8227;
t8134 = t7050 * t7500;
t8135 = t7050 * t7368;
t8315 = -t7293 - t7456;
t7290 = cos(t7421);
t8316 = t7290 + cos(t7490);
t8317 = -t7285 - t7291;
t8318 = -t7283 + t7287;
t7284 = cos(t7415);
t8346 = t7284 * t8311 + cos(t7486) * t8193 + cos(t7413) * t7499 + t7287 * t8195 + t7295 * t8197 + t7456 * t8199 - 0.2e1 * t7215 + t7795 + (t7285 + t7290) * t8198 + (t7294 + t7296) * t8196 + t8356 * t7358 + t8349 * t7356;
t8357 = -t7284 + t7356 + t7358;
t6852 = -((-0.2e1 * t6942 * t7294 * t8135 + t8317 * t6909 * t8340 + 0.2e1 * t8315 * t6888 + (t8318 * t6909 * t8344 + (-(t6924 - t7610 / 0.2e1) * t7295 + (t7286 - t7292) * t6903) * t8364) * pkin(3) + (t7296 * t8291 + t8316 * pkin(2) + (-0.1e1 + t8357) * t8365) * t7857) * t7359 + (t7787 * sin(t7486 + t7489) + t7498 * sin(t7489 + 0.5e1 * qJ(3,1)) - 0.6e1 * t7909 + t7347 * t7990 + sin(t7489 + qJ(3,1)) * t7991 + t7446 * t7981 + t7245 * t7980 + t7248 * t7979 + (-sin(t7489) - t7250) * t7502 + (t7339 * sin(t7489 + t7487) + t7349 * t8263 + t7348 * t8262 + t7246 * t8261 + (sin(t7489 + t7485) + t7244) * t7974) * pkin(2) + (sin(t7424) * t7958 + sin(t7422) * t8267 + t7447 * t8287 + t7247 * t8286 + (-sin(t7490) - t7251) * t7972 + (-sin(t7417) + sin(t7423) + t7252 + t7253 - 0.2e1 * t7254) * t7908) * pkin(1)) * t8144) / (t7283 * t7989 + (t7288 * t8193 + t7289 * t7503 + t8346) * t8295) * t8144 + (((t6909 * t8044 + t7773 / 0.4e1) * t8301 + t7499 * t7244 * t7670 + t7503 * t7250 * t7671 + t6891 * t7245 * t8291 + (t7778 / 0.4e1 + (0.3e1 / 0.4e1 * t8164 + t6942 * t8134) * t7368 * t8024 + t7506 * t6924) * t7348 * t8364 + (t6927 + 0.2e1 * t8170) * t7247 * t8344 + (t6924 + 0.2e1 / 0.3e1 * t7610) * t7254 * t7957 + t7932 * t8339 + (t6924 + 0.4e1 / 0.5e1 * t7610) * t7349 * t7992 + 0.8e1 * ((0.3e1 / 0.8e1 * t7717 + t6939) * t7503 + t7299 * t6909) * t8216 - 0.4e1 * t6903 * t7909 + t6909 * t7248 * t7788 + t7251 * t7778 * t8299 + t8317 * t7359 * t7839 + t8316 * t7503 * t7841 - 0.2e1 * (t7295 + t7292) * t7661 + 0.2e1 * (t7296 + t7286) * t7661 + t8315 * t7592 + (t7347 * t7769 + (t6927 + 0.4e1 * t8170) * t7246) * pkin(2) + t8357 * t7773 * t8363 + (t7252 * t7769 + t8318 * t7766) * t8365) * t7504 * t7671 - 0.8e1 * (((-t7283 / 0.4e1 + t7287 / 0.4e1) * pkin(1) + (t7293 / 0.8e1 - t7291 / 0.8e1 - t7285 / 0.8e1 + t7456 / 0.8e1) * pkin(3) + (-t7292 / 0.8e1 - t7294 / 0.8e1 + t7286 / 0.8e1 + t7295 / 0.8e1) * pkin(2)) * t7841 + (-t8020 / 0.4e1 + t7245 * t8251 + t7248 * t7798 + t7165 * t7446 + pkin(1) * t7792 + ((-t7254 + t7253) * pkin(1) + (t7246 / 0.2e1 - t7349 / 0.2e1 + t8253) * pkin(3)) * pkin(2)) * t6909) * t6942 * t7836) / (t7502 * t7289 + (t7283 + t7288) * t7896 + t8346 * pkin(2));
t7011 = t7020 ^ 2;
t7088 = 0.1e1 / t7100 ^ 2;
t6990 = t7011 * t7088;
t6938 = t7610 / 0.3e1;
t7840 = t7447 * t8144;
t7699 = t7359 * t7840;
t7963 = 0.2e1 * t7319;
t7986 = 0.2e1 * t7320;
t7369 = 0.1e1 / t7446 ^ 2;
t8074 = t7369 * t7505;
t8240 = pkin(2) * t6903;
t7622 = (0.2e1 * t7191 * t7766 * t8068 + ((t7699 + t8240) * t7963 + 0.3e1 * (t7699 * t8338 + (t7717 / 0.6e1 + t6938) * t7499 + t7503 * (t6924 + t6938)) * t7320 + t7447 * t7592 + pkin(2) * t6891) * t7456 + (-(t6903 * t8235 + t7841 / 0.2e1) * t8216 + pkin(1) * t8240) * t7986 - (t6891 * t7447 + t7773) * t8216 + pkin(1) * t6891) * t8074 * t8164;
t8143 = t7020 * t7088;
t6879 = (t7932 + t7841 + (t7253 * t6942 * t7050 * t7504 + (t7447 / 0.2e1 + (t8227 + t8235) * t8250) * t8164) * t7368) * t8143;
t8045 = t7447 * t7461;
t7869 = t6879 * t8045;
t6998 = 0.1e1 / (pkin(2) * (pkin(2) * t7253 + t7792 + t8281) - t7254 * t7503);
t7884 = ((pkin(3) * t7246 + (t7248 + t7446) * pkin(2)) * t7841 + (t7503 * t7296 + t7285 * t8258 + t7336 * t7295 + t7456 * t8192 + (pkin(3) + t8200) * t8365) * t6909) * t6942 * t6998;
t7625 = t7918 * t8300 + t7069;
t7772 = pkin(2) * t7840;
t7900 = 0.2e1 * t7215;
t7951 = pkin(1) * t8144;
t8341 = 0.2e1 * t7382;
t7889 = (0.4e1 * (t7319 + t7215 / 0.2e1 + t7996) * t7191 * t7381 * t8144 + (t7139 * t7839 * t8273 + (-(-t6909 * t7359 + 0.3e1 * t7772) * t8216 / 0.2e1 + pkin(2) * t7951) * t7986 - (-t6903 * t8236 + t7840 * t8256) * t8216 + pkin(1) * t7696) * t8341 + ((t6903 * t7900 + t6909 * t7963 + t6888) * t7447 * t7359 + (t7379 * t8269 + t7625 * t7320 + (t7625 - 0.3e1 * t7319) * pkin(2)) * t8144) * t7456 - pkin(3) * ((t6909 * t7320 + t7670) * t7446 * t7359 + (t7070 * t8051 + (-t7380 * t7918 + (t8273 - 0.2e1) * pkin(1)) * pkin(3)) * t8144)) * t8144;
t8360 = t7869 + ((-t7622 / 0.4e1 + (-t7889 / 0.2e1 - t7884 / 0.2e1) * t8075) * t8134 + t6852) * t8296 - (pkin(1) + 0.2e1 * t8232) * t7447 * t6990;
t8048 = t7447 * t7455;
t7082 = t8048 + t8050;
t8056 = t7444 * t7452;
t7081 = t8056 + t8058;
t8064 = t7441 * t7449;
t7080 = t8064 + t8066;
t8004 = pkin(2) * t8064 + t7312;
t8352 = -pkin(1) * t8064 - pkin(2) * t8072 - t7450 * t8004;
t8002 = pkin(2) * t8048 + t7314;
t8351 = -pkin(1) * t8048 - pkin(2) * t8068 - t7456 * t8002;
t8003 = pkin(2) * t8056 + t7313;
t8350 = -pkin(1) * t8056 - pkin(2) * t8070 - t7453 * t8003;
t8307 = 0.2e1 * t6877;
t8306 = 0.2e1 * t6878;
t8305 = 0.2e1 * t6879;
t8304 = t7450 * (pkin(1) * t7449 - pkin(2) * t8067) + t7374 * t8202;
t8303 = t7453 * (pkin(1) * t7452 - pkin(2) * t8059) + t7378 * t8201;
t8302 = t7456 * (pkin(1) * t7455 - pkin(2) * t8051) + t7382 * t8200;
t7015 = (t7372 - 0.1e1 / 0.2e1) * t8063 + (t7374 - 0.1e1 / 0.2e1) * t8043;
t8290 = 0.4e1 * t7015;
t7016 = (t7376 - 0.1e1 / 0.2e1) * t8055 + (t7378 - 0.1e1 / 0.2e1) * t8039;
t8289 = 0.4e1 * t7016;
t7017 = (t7380 - 0.1e1 / 0.2e1) * t8047 + (t7382 - 0.1e1 / 0.2e1) * t8035;
t8288 = 0.4e1 * t7017;
t8252 = t7461 / 0.4e1;
t8249 = t7504 / 0.4e1;
t7219 = t8343 - 0.1e1;
t7220 = t8342 - 0.1e1;
t7221 = t8341 - 0.1e1;
t8207 = pkin(5) * t6850;
t8206 = pkin(5) * t6851;
t8205 = pkin(5) * t6852;
t8191 = -qJ(3,1) + qJ(1,1);
t8190 = qJ(3,1) + qJ(1,1);
t8189 = -qJ(3,2) + qJ(1,2);
t8188 = qJ(3,2) + qJ(1,2);
t8187 = -qJ(3,3) + qJ(1,3);
t8186 = qJ(3,3) + qJ(1,3);
t8185 = MDP(8) * t7504;
t8184 = qJ(1,1) - 0.2e1 * qJ(2,1);
t8183 = qJ(1,2) - 0.2e1 * qJ(2,2);
t8182 = -0.2e1 * qJ(2,3) + qJ(1,3);
t8181 = MDP(15) * t7504;
t8178 = t6877 * t7083;
t8177 = t6877 * t7450;
t8176 = t6878 * t7085;
t8175 = t6878 * t7453;
t8174 = t6879 * t7087;
t8173 = t6879 * t7456;
t8169 = t6931 ^ 2 / t6962 ^ 2;
t8168 = t6932 ^ 2 / t6963 ^ 2;
t8167 = t6933 ^ 2 / t6961 ^ 2;
t7850 = t7374 * t6988;
t6970 = t6988 - 0.2e1 * t7850;
t8163 = t6970 * t7048;
t7849 = t7378 * t6989;
t6971 = t6989 - 0.2e1 * t7849;
t8162 = t6971 * t7049;
t7848 = t7382 * t6990;
t6972 = t6990 - 0.2e1 * t7848;
t8161 = t6972 * t7050;
t7300 = qJ(2,3) + t8186;
t7301 = -qJ(2,3) + t8187;
t7360 = 0.2e1 * pkin(5) + t7995;
t8160 = ((cos(t7301) + cos(t7300)) * t7360 + (-sin(t7301) - sin(t7300)) * t8365 + (-sin(t7472 + t8182) - sin(qJ(1,3) + t7386) - 0.2e1 * t7442) * pkin(3) + (sin(qJ(3,3) - t8182) - sin(qJ(1,3) + t7388) - sin(t8187) - sin(t8186)) * pkin(2)) * t6994 / 0.2e1;
t7302 = qJ(2,2) + t8188;
t7303 = -qJ(2,2) + t8189;
t8159 = ((cos(t7303) + cos(t7302)) * t7360 + (-sin(t7303) - sin(t7302)) * t8365 + (-sin(t7480 + t8183) - sin(qJ(1,2) + t7403) - 0.2e1 * t7445) * pkin(3) + (sin(qJ(3,2) - t8183) - sin(qJ(1,2) + t7405) - sin(t8189) - sin(t8188)) * pkin(2)) * t6996 / 0.2e1;
t7304 = qJ(2,1) + t8190;
t7305 = -qJ(2,1) + t8191;
t8158 = ((cos(t7305) + cos(t7304)) * t7360 + (-sin(t7305) - sin(t7304)) * t8365 + (-sin(t7488 + t8184) - sin(qJ(1,1) + t7415) - 0.2e1 * t7448) * pkin(3) + (sin(qJ(3,1) - t8184) - sin(qJ(1,1) + t7418) - sin(t8191) - sin(t8190)) * pkin(2)) * t6998 / 0.2e1;
t7000 = t7451 * t7956 + t7817;
t8157 = t7000 * t7306;
t8156 = t7000 * t7309;
t7001 = t7454 * t7955 + t7816;
t8155 = t7001 * t7307;
t8154 = t7001 * t7310;
t7002 = t7457 * t7954 + t7815;
t8153 = t7002 * t7308;
t8152 = t7002 * t7311;
t8151 = t7009 * t7048;
t8150 = t7010 * t7049;
t8149 = t7011 * t7050;
t8124 = t7083 * t7442;
t8123 = t7083 * t7451;
t8122 = t7084 * t7362;
t8121 = t7085 * t7445;
t8120 = t7085 * t7454;
t8119 = t7086 * t7365;
t8118 = t7087 * t7448;
t8117 = t7087 * t7457;
t8116 = t7088 * t7368;
t7468 = pkin(2) / 0.2e1;
t8109 = (t7316 + t7468) * t7440;
t8108 = (t7318 + t7468) * t7443;
t8107 = (t7320 + t7468) * t7446;
t8106 = t7187 * t7306;
t8105 = t7187 * t7309;
t8103 = t7189 * t7307;
t8102 = t7189 * t7310;
t8100 = t7191 * t7308;
t8099 = t7191 * t7311;
t8097 = t7306 * t7442;
t8096 = t7306 * t7451;
t8094 = t7307 * t7445;
t8093 = t7307 * t7454;
t8091 = t7308 * t7448;
t8090 = t7308 * t7457;
t8088 = t7309 * t7442;
t8087 = t7309 * t7451;
t8085 = t7310 * t7445;
t8084 = t7310 * t7454;
t8082 = t7311 * t7448;
t8081 = t7311 * t7457;
t6832 = (-t7624 / 0.2e1 + (-t7886 - t7888) * t8079) * t8138 + t6850;
t8028 = t7461 * t6832;
t6833 = (-t7623 / 0.2e1 + (-t7885 - t7887) * t8077) * t8136 + t6851;
t8027 = t7461 * t6833;
t6834 = (-t7622 / 0.2e1 + (-t7884 - t7889) * t8075) * t8134 + t6852;
t8026 = t7461 * t6834;
t8023 = t7500 * t7504;
t6904 = t6907 ^ 2;
t6881 = t6901 * t7776 + t6904 * t8252;
t7727 = t7083 * t7859;
t6883 = t6904 * t8061 + t7018 * t7727;
t7791 = -0.4e1 * t7374 * t8242;
t7899 = t6907 * t8365;
t8019 = -t7080 * t8028 + (-t7312 * t7441 + t8304) * t8307 - 0.4e1 * t6881 * t8042 + t6883 * t7440 + (-t7080 * t7899 + t7440 * t7791) * t8148;
t6905 = t6908 ^ 2;
t6882 = t6902 * t7774 + t6905 * t8252;
t7723 = t7085 * t7858;
t6884 = t6905 * t8053 + t7019 * t7723;
t7790 = -0.4e1 * t7378 * t8241;
t7898 = t6908 * t8365;
t8018 = -t7081 * t8027 + (-t7313 * t7444 + t8303) * t8306 - 0.4e1 * t6882 * t8038 + t6884 * t7443 + (-t7081 * t7898 + t7443 * t7790) * t8146;
t6906 = t6909 ^ 2;
t6880 = t6903 * t7772 + t6906 * t8252;
t7719 = t7087 * t7857;
t6885 = t6906 * t8045 + t7020 * t7719;
t7789 = -0.4e1 * t7382 * t8240;
t7897 = t6909 * t8365;
t8017 = -t7082 * t8026 + (-t7314 * t7447 + t8302) * t8305 - 0.4e1 * t6880 * t8034 + t6885 * t7446 + (-t7082 * t7897 + t7446 * t7789) * t8144;
t7573 = -t8042 + t8067;
t8016 = t7573 * t8028 + t8352 * t8307 + 0.4e1 * t6881 * t8066 + t6883 * t7449 + (t7449 * t7791 + t7573 * t7899) * t8148;
t7572 = -t8038 + t8059;
t8015 = t7572 * t8027 + t8350 * t8306 + 0.4e1 * t6882 * t8058 + t6884 * t7452 + (t7452 * t7790 + t7572 * t7898) * t8146;
t7571 = -t8034 + t8051;
t8014 = t7571 * t8026 + t8351 * t8305 + 0.4e1 * t6880 * t8050 + t6885 * t7455 + (t7455 * t7789 + t7571 * t7897) * t8144;
t7501 = 0.1e1 / pkin(3) ^ 2;
t6898 = t7850 * t8295 + pkin(1) * t7450 * t6988 - pkin(2) * (t6988 + (t8138 * t8166 + t7501 / t7051 ^ 2 * t6940) * t6940 * t8078);
t7880 = t7461 * t8177;
t7748 = t7449 * t7880;
t8013 = t6898 * t7449 + t8362 * t7440 - t7748;
t7749 = t7440 * t7880;
t8012 = t6898 * t7440 - t8362 * t7449 - t7749;
t6899 = t7849 * t8295 + pkin(1) * t7453 * t6989 - pkin(2) * (t6989 + (t8136 * t8165 + t7501 / t7052 ^ 2 * t6941) * t6941 * t8076);
t7875 = t7461 * t8175;
t7740 = t7452 * t7875;
t8011 = t6899 * t7452 + t8361 * t7443 - t7740;
t7741 = t7443 * t7875;
t8010 = t6899 * t7443 - t8361 * t7452 - t7741;
t6900 = t7848 * t8295 + pkin(1) * t7456 * t6990 - pkin(2) * (t6990 + (t8134 * t8164 + t7501 / t7053 ^ 2 * t6942) * t6942 * t8074);
t7870 = t7461 * t8173;
t7732 = t7455 * t7870;
t8009 = t6900 * t7455 + t8360 * t7446 - t7732;
t7733 = t7446 * t7870;
t8008 = t6900 * t7446 - t8360 * t7455 - t7733;
t7997 = t7433 + t7436;
t7973 = 0.2e1 * t7500;
t7931 = t7187 * t8220;
t7930 = t7189 * t8218;
t7929 = t7191 * t8216;
t7895 = t6832 * t8139;
t7894 = t6833 * t8137;
t7893 = t6834 * t8135;
t7892 = t6850 * t8124;
t7891 = t6851 * t8121;
t7890 = t6852 * t8118;
t7883 = t6877 * t8160;
t7882 = t6877 * t8139;
t7881 = t6877 * t8123;
t7878 = t6878 * t8159;
t7877 = t6878 * t8137;
t7876 = t6878 * t8120;
t7873 = t6879 * t8158;
t7872 = t6879 * t8135;
t7871 = t6879 * t8117;
t7868 = t6904 * t8123;
t7867 = t6905 * t8120;
t7866 = t6906 * t8117;
t7865 = t6907 * t8147;
t7864 = t6907 * t7018 * t7451;
t7863 = t6908 * t8145;
t7862 = t6908 * t7019 * t7454;
t7861 = t6909 * t8143;
t7860 = t6909 * t7020 * t7457;
t7027 = t8219 * t8247 + t8004;
t7467 = -pkin(3) / 0.2e1;
t7115 = t7322 + t8202 / 0.2e1 + t7467;
t7033 = t7808 * t8291 - t7112;
t7545 = pkin(2) * t7808 + t7033 * t7449;
t6949 = (-t7115 * t8096 + t7309 * t8109) * t8343 + (t7309 * t7027 + t7306 * t7545) * t7450 + t8157 + t7309 * t8112;
t7856 = t6949 * t8139;
t6950 = (t7115 * t8087 + t7306 * t8109) * t8343 + (t7306 * t7027 - t7309 * t7545) * t7450 - t8156 + t7306 * t8112;
t7855 = t6950 * t8139;
t7028 = t8217 * t8245 + t8003;
t7116 = t7323 + t8201 / 0.2e1 + t7467;
t7034 = t7807 * t8291 - t7113;
t7544 = pkin(2) * t7807 + t7034 * t7452;
t6951 = (-t7116 * t8093 + t7310 * t8108) * t8342 + (t7310 * t7028 + t7307 * t7544) * t7453 + t8155 + t7310 * t8111;
t7854 = t6951 * t8137;
t6952 = (t7116 * t8084 + t7307 * t8108) * t8342 + (t7307 * t7028 - t7310 * t7544) * t7453 - t8154 + t7307 * t8111;
t7853 = t6952 * t8137;
t7029 = t8215 * t8243 + t8002;
t7117 = t7324 + t8200 / 0.2e1 + t7467;
t7035 = t7806 * t8291 - t7114;
t7543 = pkin(2) * t7806 + t7035 * t7455;
t6953 = (-t7117 * t8090 + t7311 * t8107) * t8341 + (t7311 * t7029 + t7308 * t7543) * t7456 + t8153 + t7311 * t8110;
t7852 = t6953 * t8135;
t6954 = (t7117 * t8081 + t7308 * t8107) * t8341 + (t7308 * t7029 - t7311 * t7543) * t7456 - t8152 + t7308 * t8110;
t7851 = t6954 * t8135;
t7823 = t7083 * t8097;
t7822 = t7083 * t8088;
t7821 = t7085 * t8094;
t7820 = t7085 * t8085;
t7819 = t7087 * t8091;
t7818 = t7087 * t8082;
t7786 = t7083 * t8019;
t7785 = t7083 * t8016;
t7784 = t7085 * t8018;
t7783 = t7085 * t8015;
t7782 = t7087 * t8017;
t7781 = t7087 * t8014;
t7759 = t7444 * t7891;
t7758 = t7453 * t7891;
t7757 = t7447 * t7890;
t7756 = t7456 * t7890;
t7755 = t7573 * t7882;
t7754 = t7080 * t7882;
t7753 = t7441 * t7882;
t7752 = t7450 * t7882;
t7364 = t7441 ^ 2;
t7751 = t6877 * t7364 * t8124;
t7750 = t8063 * t8178;
t7747 = t7572 * t7877;
t7746 = t7081 * t7877;
t7745 = t7444 * t7877;
t7744 = t7453 * t7877;
t7367 = t7444 ^ 2;
t7743 = t6878 * t7367 * t8121;
t7742 = t8055 * t8176;
t7739 = t7571 * t7872;
t7738 = t7082 * t7872;
t7737 = t7447 * t7872;
t7736 = t7456 * t7872;
t7370 = t7447 ^ 2;
t7735 = t6879 * t7370 * t8118;
t7734 = t8047 * t8174;
t7731 = t7083 * t7363 * t8169;
t7730 = t7085 * t7366 * t8168;
t7729 = t7087 * t7369 * t8167;
t7728 = t7018 * t7442 * t8166;
t7726 = t7451 * t7859;
t7724 = t7019 * t7445 * t8165;
t7722 = t7454 * t7858;
t7720 = t7020 * t7448 * t8164;
t7718 = t7457 * t7857;
t7716 = t6988 * t8160;
t7715 = t6989 * t8159;
t7714 = t6990 * t8158;
t7713 = t8122 * t8151;
t7711 = t8119 * t8150;
t7709 = t8116 * t8149;
t7692 = t8063 * t8122;
t7691 = t8055 * t8119;
t7690 = t8047 * t8116;
t7689 = t7441 * t7892;
t7688 = t7450 * t7892;
t7678 = t8169 * t8249;
t7677 = t8168 * t8249;
t7676 = t8167 * t8249;
t7660 = t8013 * t8139;
t7659 = t8012 * t8139;
t6847 = -pkin(2) * t6850 + t7879;
t7658 = (t6847 * t7440 + t7449 * t7363 * t7678 + (-t7169 + t8304) * t6988 - t7748) * t8139;
t7657 = (-t6847 * t7449 - t8352 * t6988 + t7362 * t7678 - t7749) * t8139;
t7656 = t8011 * t8137;
t7655 = t8010 * t8137;
t6848 = -pkin(2) * t6851 + t7874;
t7654 = (t6848 * t7443 + t7452 * t7366 * t7677 + (-t7170 + t8303) * t6989 - t7740) * t8137;
t7653 = (-t6848 * t7452 - t8350 * t6989 + t7365 * t7677 - t7741) * t8137;
t7652 = t8009 * t8135;
t7651 = t8008 * t8135;
t6849 = -pkin(2) * t6852 + t7869;
t7650 = (t6849 * t7446 + t7455 * t7369 * t7676 + (-t7171 + t8302) * t6990 - t7732) * t8135;
t7649 = (-t6849 * t7455 - t8351 * t6990 + t7368 * t7676 - t7733) * t8135;
t7639 = pkin(5) * t7725;
t7638 = pkin(5) * t7721;
t7637 = pkin(5) * t7717;
t7621 = t7442 * t7750;
t7620 = t7445 * t7742;
t7619 = t7448 * t7734;
t7618 = t7442 * t7727;
t7617 = t7083 * t7726;
t7616 = t7445 * t7723;
t7615 = t7085 * t7722;
t7614 = t7448 * t7719;
t7613 = t7087 * t7718;
t7609 = t7450 * t7716;
t7608 = t7453 * t7715;
t7607 = t7456 * t7714;
t7606 = t7015 * t7713;
t7024 = -0.4e1 * t7684 + (0.4e1 * t7374 - 0.2e1) * t7372 - t7219;
t7605 = t7024 * t7713;
t7604 = t7441 * t7713;
t7603 = t7450 * t7713;
t7602 = t7016 * t7711;
t7025 = -0.4e1 * t7682 + (0.4e1 * t7378 - 0.2e1) * t7376 - t7220;
t7601 = t7025 * t7711;
t7600 = t7444 * t7711;
t7599 = t7453 * t7711;
t7598 = t7017 * t7709;
t7026 = -0.4e1 * t7680 + (0.4e1 * t7382 - 0.2e1) * t7380 - t7221;
t7597 = t7026 * t7709;
t7596 = t7447 * t7709;
t7595 = t7456 * t7709;
t7591 = -t7731 / 0.4e1;
t7590 = t7731 / 0.4e1;
t7589 = -t7730 / 0.4e1;
t7588 = t7730 / 0.4e1;
t7587 = -t7729 / 0.4e1;
t7586 = t7729 / 0.4e1;
t7585 = t6832 * t7080 - t6904 * t7573;
t7584 = -t6832 * t7573 - t6904 * t7080;
t7583 = t6833 * t7081 - t6905 * t7572;
t7582 = -t6833 * t7572 - t6905 * t7081;
t7581 = t6834 * t7082 - t6906 * t7571;
t7580 = -t6834 * t7571 - t6906 * t7082;
t7567 = -0.2e1 * t7606;
t7566 = -0.2e1 * t7602;
t7565 = -0.2e1 * t7598;
t7564 = t7084 * t7219 * t7728;
t7563 = t7726 * t8147;
t7562 = t7306 * t7618;
t7561 = t7309 * t7618;
t7560 = t7086 * t7220 * t7724;
t7559 = t7722 * t8145;
t7558 = t7307 * t7616;
t7557 = t7310 * t7616;
t7556 = t7088 * t7221 * t7720;
t7555 = t7718 * t8143;
t7554 = t7308 * t7614;
t7553 = t7311 * t7614;
t7552 = t7442 * t7590;
t7551 = t7450 * t7591;
t7550 = t7445 * t7588;
t7549 = t7453 * t7589;
t7548 = t7448 * t7586;
t7547 = t7456 * t7587;
t7542 = -t6850 * t8123 + t7883;
t7541 = -t6851 * t8120 + t7878;
t7540 = -t6852 * t8117 + t7873;
t7539 = 0.2e1 * t7024 * t7865 + t8178 * t8290;
t7074 = t7080 ^ 2;
t7538 = t7074 * t8178 + t7865 * t8290;
t7537 = 0.2e1 * t7025 * t7863 + t8176 * t8289;
t7075 = t7081 ^ 2;
t7536 = t7075 * t8176 + t7863 * t8289;
t7535 = 0.2e1 * t7026 * t7861 + t8174 * t8288;
t7076 = t7082 ^ 2;
t7534 = t7076 * t8174 + t7861 * t8288;
t7071 = t7315 + t7213 + t7997;
t6976 = t7071 * t7442 * t8343 + t8329 * t8104 - pkin(3) * ((t7322 + t7141) * t7442 + t7683);
t7533 = t6976 * t7695 + t8160;
t7072 = t7317 + t7214 + t7997;
t6977 = t7072 * t7445 * t8342 + t8328 * t8101 - pkin(3) * ((t7323 + t7142) * t7445 + t7681);
t7532 = t6977 * t7694 + t8159;
t7073 = t7319 + t7215 + t7997;
t6978 = t7073 * t7448 * t8341 + t8327 * t8098 - pkin(3) * ((t7324 + t7143) * t7448 + t7679);
t7531 = t6978 * t7693 + t8158;
t7527 = t7533 * t7009;
t7526 = t7532 * t7010;
t7525 = t7531 * t7011;
t7524 = -t6832 * t8123 + t6877 * t7533;
t7523 = -t6833 * t8120 + t6878 * t7532;
t7522 = -t6834 * t8117 + t6879 * t7531;
t7521 = t6949 * t7753 + t6951 * t7745 + t6953 * t7737;
t7520 = t6949 * t7752 + t6951 * t7744 + t6953 * t7736;
t7519 = t6950 * t7753 + t6952 * t7745 + t6954 * t7737;
t7518 = t6950 * t7752 + t6952 * t7744 + t6954 * t7736;
t7014 = pkin(3) * t7314 + (-t7993 + t7900 + t7963) * t7447;
t7013 = pkin(3) * t7313 + (-t7993 + t7901 + t7964) * t7444;
t7012 = pkin(3) * t7312 + (-t7993 + t7902 + t7965) * t7441;
t6948 = (-t7073 * t8081 - t7308 * t7929) * t8341 + (-t7014 * t7308 + t7035 * t8099) * t7456 + pkin(3) * t8152 - t7134 * t8100;
t6947 = (t7073 * t8090 - t7311 * t7929) * t8341 + (-t7014 * t7311 - t7035 * t8100) * t7456 - pkin(3) * t8153 - t7134 * t8099;
t6946 = (-t7072 * t8084 - t7307 * t7930) * t8342 + (-t7013 * t7307 + t7034 * t8102) * t7453 + pkin(3) * t8154 - t7133 * t8103;
t6945 = (t7072 * t8093 - t7310 * t7930) * t8342 + (-t7013 * t7310 - t7034 * t8103) * t7453 - pkin(3) * t8155 - t7133 * t8102;
t6944 = (-t7071 * t8087 - t7306 * t7931) * t8343 + (-t7012 * t7306 + t7033 * t8105) * t7450 + pkin(3) * t8156 - t7132 * t8106;
t6943 = (t7071 * t8096 - t7309 * t7931) * t8343 + (-t7012 * t7309 - t7033 * t8106) * t7450 - pkin(3) * t8157 - t7132 * t8105;
t6921 = t7456 * t7951 - t7447 * t7637 / 0.4e1;
t6920 = t7453 * t7952 - t7444 * t7638 / 0.4e1;
t6919 = t7450 * t7953 - t7441 * t7639 / 0.4e1;
t6918 = pkin(1) * t7840 + t7456 * t7637 / 0.4e1;
t6917 = pkin(1) * t7843 + t7453 * t7638 / 0.4e1;
t6916 = pkin(1) * t7846 + t7450 * t7639 / 0.4e1;
t6846 = -0.2e1 * t6879 * t7329 - t7456 * t8205;
t6845 = -0.2e1 * t6878 * t7327 - t7453 * t8206;
t6844 = -0.2e1 * t6877 * t7325 - t7450 * t8207;
t6843 = -t7447 * t8205 + t8173 * t8365;
t6842 = -t7444 * t8206 + t8175 * t8365;
t6841 = -t7441 * t8207 + t8177 * t8365;
t1 = [(-t6877 * t7822 - t6878 * t7820 - t6879 * t7818) * MDP(1) + (-t7309 * t7751 - t7310 * t7743 - t7311 * t7735 + ((-t6954 * t8149 - t7311 * t7720) * t7690 + (-t6952 * t8150 - t7310 * t7724) * t7691 + (-t6950 * t8151 - t7309 * t7728) * t7692) * t7504) * MDP(4) + (-0.2e1 * t7309 * t7621 - 0.2e1 * t7310 * t7620 - 0.2e1 * t7311 * t7619 + ((t6954 * t8161 - t7311 * t7556) * t7368 + (t6952 * t8162 - t7310 * t7560) * t7365 + (t6950 * t8163 - t7309 * t7564) * t7362) * t7504) * MDP(5) + (-t7309 * t7689 - t7310 * t7759 - t7311 * t7757 + (t7547 * t8082 + t7549 * t8085 + t7551 * t8088) * t7505 + t7519 * t7504) * MDP(6) + (-t7309 * t7688 - t7310 * t7758 - t7311 * t7756 + (t7309 * t7441 * t7552 + t7310 * t7444 * t7550 + t7311 * t7447 * t7548) * t7505 + t7518 * t7504) * MDP(7) + (t6850 * t7855 + t6851 * t7853 + t6852 * t7851) * t8185 + (-t6841 * t7822 - t6842 * t7820 - t6843 * t7818 + (t6916 * t7561 + t6917 * t7557 + t6918 * t7553 - t7519 * pkin(5) + (t6950 * t7604 + t6952 * t7600 + t6954 * t7596) * pkin(1)) * t7504) * MDP(9) + (-t6844 * t7822 - t6845 * t7820 - t6846 * t7818 + (t6919 * t7561 + t6920 * t7557 + t6921 * t7553 - t7518 * pkin(5) + (t6950 * t7603 + t6952 * t7599 + t6954 * t7595) * pkin(1)) * t7504) * MDP(10) + (-t7534 * t8082 - t7536 * t8085 - t7538 * t8088 + (t6950 * t7567 + t6952 * t7566 + t6954 * t7565 + (-t6944 * t7606 - t6946 * t7602 - t6948 * t7598) * t7973) * t7504) * MDP(11) + (-t7535 * t8082 - t7537 * t8085 - t7539 * t8088 + (-t6950 * t7605 - t6952 * t7601 - t6954 * t7597 + (-t6944 * t7605 - t6946 * t7601 - t6948 * t7597) * t7500) * t7504) * MDP(12) + (-t7581 * t7818 - t7583 * t7820 - t7585 * t7822 + (t6950 * t7754 + t6952 * t7746 + t6954 * t7738 + (t6944 * t7754 + t6946 * t7746 + t6948 * t7738) * t7500) * t7504) * MDP(13) + (-t7580 * t7818 - t7582 * t7820 - t7584 * t7822 + (-t6950 * t7755 - t6952 * t7747 - t6954 * t7739 + (-t6944 * t7755 - t6946 * t7747 - t6948 * t7739) * t7500) * t7504) * MDP(14) + (t6832 * t7855 + t6833 * t7853 + t6834 * t7851 + (t6944 * t7895 + t6946 * t7894 + t6948 * t7893) * t7500) * t8181 + (-t7782 * t8082 - t7784 * t8085 - t7786 * t8088 + (t6954 * t7651 + t6952 * t7655 + t6950 * t7659 + (t6944 * t7657 + t6946 * t7653 + t6948 * t7649) * t7500) * t7504) * MDP(16) + (-t7781 * t8082 - t7783 * t8085 - t7785 * t8088 + (t6954 * t7652 + t6952 * t7656 + t6950 * t7660 + (t6944 * t7658 + t6946 * t7654 + t6948 * t7650) * t7500) * t7504) * MDP(17); (t6877 * t7823 + t6878 * t7821 + t6879 * t7819) * MDP(1) + (t7306 * t7751 + t7307 * t7743 + t7308 * t7735 + ((-t6953 * t8149 + t7308 * t7720) * t7690 + (-t6951 * t8150 + t7307 * t7724) * t7691 + (-t6949 * t8151 + t7306 * t7728) * t7692) * t7504) * MDP(4) + (0.2e1 * t7306 * t7621 + 0.2e1 * t7307 * t7620 + 0.2e1 * t7308 * t7619 + ((t6953 * t8161 + t7308 * t7556) * t7368 + (t6951 * t8162 + t7307 * t7560) * t7365 + (t6949 * t8163 + t7306 * t7564) * t7362) * t7504) * MDP(5) + (t7306 * t7689 + t7307 * t7759 + t7308 * t7757 + (t7306 * t7450 * t7552 + t7307 * t7453 * t7550 + t7308 * t7456 * t7548) * t7505 + t7521 * t7504) * MDP(6) + (t7306 * t7688 + t7307 * t7758 + t7308 * t7756 + (t7441 * t7591 * t8097 + t7444 * t7589 * t8094 + t7447 * t7587 * t8091) * t7505 + t7520 * t7504) * MDP(7) + (t6850 * t7856 + t6851 * t7854 + t6852 * t7852) * t8185 + (t6841 * t7823 + t6842 * t7821 + t6843 * t7819 + (-t6916 * t7562 - t6917 * t7558 - t6918 * t7554 - t7521 * pkin(5) + (t6949 * t7604 + t6951 * t7600 + t6953 * t7596) * pkin(1)) * t7504) * MDP(9) + (t6844 * t7823 + t6845 * t7821 + t6846 * t7819 + (-t6919 * t7562 - t6920 * t7558 - t6921 * t7554 - t7520 * pkin(5) + (t6949 * t7603 + t6951 * t7599 + t6953 * t7595) * pkin(1)) * t7504) * MDP(10) + (t7534 * t8091 + t7536 * t8094 + t7538 * t8097 + (t6949 * t7567 + t6951 * t7566 + t6953 * t7565 + (-t6943 * t7606 - t6945 * t7602 - t6947 * t7598) * t7973) * t7504) * MDP(11) + (t7535 * t8091 + t7537 * t8094 + t7539 * t8097 + (-t6949 * t7605 - t6951 * t7601 - t6953 * t7597 + (-t6943 * t7605 - t6945 * t7601 - t6947 * t7597) * t7500) * t7504) * MDP(12) + (t7581 * t7819 + t7583 * t7821 + t7585 * t7823 + (t6949 * t7754 + t6951 * t7746 + t6953 * t7738 + (t6943 * t7754 + t6945 * t7746 + t6947 * t7738) * t7500) * t7504) * MDP(13) + (t7580 * t7819 + t7582 * t7821 + t7584 * t7823 + (-t6949 * t7755 - t6951 * t7747 - t6953 * t7739 + (-t6943 * t7755 - t6945 * t7747 - t6947 * t7739) * t7500) * t7504) * MDP(14) + (t6832 * t7856 + t6833 * t7854 + t6834 * t7852 + (t6943 * t7895 + t6945 * t7894 + t6947 * t7893) * t7500) * t8181 + (t8017 * t7819 + t8018 * t7821 + t8019 * t7823 + (t6953 * t7651 + t6951 * t7655 + t6949 * t7659 + (t6943 * t7657 + t6945 * t7653 + t6947 * t7649) * t7500) * t7504) * MDP(16) + (t8014 * t7819 + t8015 * t7821 + t8016 * t7823 + (t6953 * t7652 + t6951 * t7656 + t6949 * t7660 + (t6943 * t7658 + t6945 * t7654 + t6947 * t7650) * t7500) * t7504) * MDP(17); (-t7871 - t7876 - t7881) * MDP(1) + (-t7441 * t7609 - t7444 * t7608 - t7447 * t7607 - t7364 * t7881 - t7367 * t7876 - t7370 * t7871 + (-t7555 * t8047 - t7559 * t8055 - t7563 * t8063) * t7504) * MDP(4) + (-0.2e1 * t7451 * t7750 - 0.2e1 * t7454 * t7742 - 0.2e1 * t7457 * t7734 + t6970 * t8160 + t6971 * t8159 + t6972 * t8158 + (-t7219 * t7563 - t7220 * t7559 - t7221 * t7555) * t7504) * MDP(5) + (t7540 * t7447 + t7541 * t7444 + t7542 * t7441 + (t7451 * t7551 + t7454 * t7549 + t7457 * t7547) * t7505) * MDP(6) + (t7540 * t7456 + t7541 * t7453 + t7542 * t7450 + (t7586 * t8046 + t7588 * t8054 + t7590 * t8062) * t7505) * MDP(7) + (t6850 * t8160 + t6851 * t8159 + t6852 * t8158) * MDP(8) + (-t6841 * t8123 - t6842 * t8120 - t6843 * t8117 + (t6916 * t7617 + t6917 * t7615 + t6918 * t7613) * t7504 + (-t7441 * t7883 - t7444 * t7878 - t7447 * t7873) * pkin(5) + (t7441 * t7716 + t7444 * t7715 + t7447 * t7714) * pkin(1)) * MDP(9) + (-t6844 * t8123 - t6845 * t8120 - t6846 * t8117 + (t6919 * t7617 + t6920 * t7615 + t6921 * t7613) * t7504 + (-t7450 * t7883 - t7453 * t7878 - t7456 * t7873) * pkin(5) + (t7607 + t7608 + t7609) * pkin(1)) * MDP(10) + (-t7074 * t7881 - t7075 * t7876 - t7076 * t7871 + (-0.2e1 * t7525 - 0.4e1 * t7860) * t7088 * t7017 + (-0.2e1 * t7526 - 0.4e1 * t7862) * t7086 * t7016 + (-0.2e1 * t7527 - 0.4e1 * t7864) * t7084 * t7015) * MDP(11) + (-0.4e1 * t7015 * t7881 - 0.4e1 * t7016 * t7876 - 0.4e1 * t7017 * t7871 + (-t7525 - 0.2e1 * t7860) * t7088 * t7026 + (-t7526 - 0.2e1 * t7862) * t7086 * t7025 + (-t7527 - 0.2e1 * t7864) * t7084 * t7024) * MDP(12) + (t7080 * t7524 + t7081 * t7523 + t7082 * t7522 + t7571 * t7866 + t7572 * t7867 + t7573 * t7868) * MDP(13) + (t7080 * t7868 + t7081 * t7867 + t7082 * t7866 - t7522 * t7571 - t7523 * t7572 - t7524 * t7573) * MDP(14) + (t6832 * t8160 + t6833 * t8159 + t6834 * t8158 + (t6976 * t7895 + t6977 * t7894 + t6978 * t7893) * t8023) * MDP(15) + (-t7457 * t7782 - t7454 * t7784 - t7451 * t7786 + t8008 * t8158 + t8010 * t8159 + t8012 * t8160 + (t6976 * t7657 + t6977 * t7653 + t6978 * t7649) * t8023) * MDP(16) + (-t7457 * t7781 - t7454 * t7783 - t7451 * t7785 + t8009 * t8158 + t8011 * t8159 + t8013 * t8160 + (t6976 * t7658 + t6977 * t7654 + t6978 * t7650) * t8023) * MDP(17);];
taucX  = t1;
