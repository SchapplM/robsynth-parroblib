% Calculate minimal parameter regressor of inverse dynamics forces for
% P4PRRRR8V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% xDDP [4x1]
%   Generalized platform accelerations
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d2,d3,d4,theta1]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [4x15]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 11:22
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P4PRRRR8V2G2A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,4),zeros(3,1),zeros(4,3),zeros(4,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: xDP has to be [4x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [4 1]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: xDDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: qJ has to be [3x4] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4PRRRR8V2G2A0_invdyn_para_pf_regmin: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 11:17:30
% EndTime: 2020-08-07 11:17:58
% DurationCPUTime: 29.32s
% Computational Cost: add. (185813->822), mult. (377780->1488), div. (10692->22), fcn. (300388->30), ass. (0->573)
t360 = sin(qJ(2,4));
t361 = cos(qJ(3,4));
t557 = t360 * t361;
t362 = cos(qJ(2,4));
t387 = pkin(7) + pkin(6);
t323 = t362 * t387;
t698 = pkin(2) * t360 - t323;
t261 = pkin(3) * t557 + t698;
t663 = t361 * pkin(3);
t321 = pkin(2) + t663;
t358 = cos(pkin(4));
t359 = sin(qJ(3,4));
t572 = t358 * t359;
t291 = t321 * t572;
t356 = sin(pkin(4));
t589 = t356 * t361;
t192 = t261 * t589 + t291;
t189 = 0.1e1 / t192;
t372 = sin(qJ(2,3));
t377 = cos(qJ(3,3));
t554 = t372 * t377;
t378 = cos(qJ(2,3));
t330 = t378 * t387;
t697 = pkin(2) * t372 - t330;
t262 = pkin(3) * t554 + t697;
t662 = t377 * pkin(3);
t324 = pkin(2) + t662;
t371 = sin(qJ(3,3));
t569 = t358 * t371;
t292 = t324 * t569;
t582 = t356 * t377;
t214 = t262 * t582 + t292;
t205 = 0.1e1 / t214;
t374 = sin(qJ(2,2));
t379 = cos(qJ(3,2));
t552 = t374 * t379;
t380 = cos(qJ(2,2));
t331 = t380 * t387;
t696 = pkin(2) * t374 - t331;
t263 = pkin(3) * t552 + t696;
t661 = t379 * pkin(3);
t325 = pkin(2) + t661;
t373 = sin(qJ(3,2));
t567 = t358 * t373;
t293 = t325 * t567;
t581 = t356 * t379;
t215 = t263 * t581 + t293;
t207 = 0.1e1 / t215;
t376 = sin(qJ(2,1));
t381 = cos(qJ(3,1));
t550 = t376 * t381;
t382 = cos(qJ(2,1));
t332 = t382 * t387;
t695 = pkin(2) * t376 - t332;
t264 = pkin(3) * t550 + t695;
t660 = t381 * pkin(3);
t326 = pkin(2) + t660;
t375 = sin(qJ(3,1));
t565 = t358 * t375;
t294 = t326 * t565;
t580 = t356 * t381;
t216 = t264 * t580 + t294;
t209 = 0.1e1 / t216;
t252 = pkin(3) * t565 + t356 * t695;
t353 = t381 ^ 2;
t665 = pkin(3) * t353;
t541 = t376 * t665;
t184 = 0.1e1 / (pkin(2) * t565 + t252 * t381 + t356 * t541);
t251 = pkin(3) * t567 + t356 * t696;
t352 = t379 ^ 2;
t666 = pkin(3) * t352;
t542 = t374 * t666;
t183 = 0.1e1 / (pkin(2) * t567 + t251 * t379 + t356 * t542);
t250 = pkin(3) * t569 + t356 * t697;
t351 = t377 ^ 2;
t667 = pkin(3) * t351;
t543 = t372 * t667;
t182 = 0.1e1 / (pkin(2) * t569 + t250 * t377 + t356 * t543);
t249 = pkin(3) * t572 + t356 * t698;
t350 = t361 ^ 2;
t668 = pkin(3) * t350;
t544 = t360 * t668;
t181 = 0.1e1 / (pkin(2) * t572 + t249 * t361 + t356 * t544);
t388 = xP(4);
t348 = sin(t388);
t349 = cos(t388);
t392 = koppelP(1,2);
t396 = koppelP(1,1);
t284 = t348 * t396 + t349 * t392;
t366 = legFrame(1,2);
t340 = sin(t366);
t344 = cos(t366);
t383 = xDP(4);
t385 = xDP(2);
t386 = xDP(1);
t437 = t348 * t392 - t349 * t396;
t174 = -t340 * (t383 * t437 - t385) + (t284 * t383 - t386) * t344;
t355 = sin(pkin(8));
t357 = cos(pkin(8));
t384 = xDP(3);
t573 = t357 * t384;
t168 = t174 * t355 - t573;
t276 = t376 * t326 - t332;
t320 = t384 * t355;
t329 = t376 * t387;
t148 = (t326 * t382 + t329) * t168 * t358 + (t174 * t357 + t320) * t276;
t228 = t276 * t580 + t294;
t399 = 0.1e1 / pkin(3) ^ 2;
t520 = t148 ^ 2 * t399 / t228 ^ 2;
t560 = t358 * t384;
t564 = t358 * t376;
t134 = ((t174 * t564 - t382 * t384) * t355 - (t174 * t382 + t376 * t560) * t357) * t375 + t168 * t580;
t642 = t134 * t209;
t525 = t387 * t642;
t461 = t375 * t525;
t638 = t148 / t228;
t117 = t461 - t638;
t269 = t355 * t564 - t357 * t382;
t236 = t375 * t269 + t355 * t580;
t272 = t355 * t382 + t357 * t564;
t574 = t357 * t381;
t240 = -t272 * t375 - t356 * t574;
t368 = xDDP(3);
t485 = t375 * t638;
t398 = 0.1e1 / pkin(3);
t517 = t398 * t638;
t526 = t382 * t642;
t584 = t356 * t375;
t354 = t383 ^ 2;
t367 = xDDP(4);
t369 = xDDP(2);
t200 = -t354 * t284 - t367 * t437 + t369;
t370 = xDDP(1);
t204 = -t284 * t367 + t354 * t437 + t370;
t690 = t340 * t200 - t344 * t204;
t48 = (-((t356 * t526 + t358 * t517) * t665 + ((-t485 + t525) * t376 + pkin(2) * t526) * t580 + t117 * t358) * t642 + t240 * t368 - (t382 * t356 * t517 + (t353 * t358 - t550 * t584 - t358) * t642) * t638 + t690 * t236) * t184;
t679 = 0.2e1 * t48;
t578 = t357 * t358;
t289 = -t356 * g(1) + g(2) * t578;
t290 = g(1) * t578 + t356 * g(2);
t593 = t355 * t358;
t307 = g(3) * t593;
t333 = pkin(2) ^ 2 + t387 ^ 2;
t397 = pkin(3) ^ 2;
t549 = 0.2e1 * pkin(2) * pkin(3);
t469 = (-t387 * t485 + (t353 * t397 + t381 * t549 + t333) * t642) * t184 * t642;
t302 = pkin(2) * t382 + t329;
t425 = pkin(3) * t584 - t358 * t695;
t164 = -t269 * t665 + t302 * t574 + (pkin(2) * t584 + t381 * t425) * t355;
t626 = t164 * t184;
t188 = -t302 * t355 + t357 * t425;
t583 = t356 * t376;
t592 = t356 * t357;
t670 = pkin(2) * t375;
t156 = -(t272 * t340 - t344 * t583) * t665 + (t188 * t340 + t344 * t252) * t381 + (t340 * t592 + t358 * t344) * t670;
t630 = t156 * t184;
t153 = (t272 * t344 + t340 * t583) * t665 + (-t188 * t344 + t340 * t252) * t381 + (t358 * t340 - t344 * t592) * t670;
t633 = t153 * t184;
t96 = t381 * t469 + (pkin(2) * t517 - t117 * t381) * t184 * t638 + t204 * t633 + t200 * t630 + t368 * t626;
t408 = t289 * t340 - t290 * t344 + t96 * t356 + t307;
t79 = t408 * t382;
t726 = pkin(2) * t679 - pkin(6) * t520 + t79;
t391 = koppelP(2,2);
t395 = koppelP(2,1);
t283 = t348 * t395 + t349 * t391;
t365 = legFrame(2,2);
t339 = sin(t365);
t343 = cos(t365);
t438 = t348 * t391 - t349 * t395;
t173 = -t339 * (t383 * t438 - t385) + (t283 * t383 - t386) * t343;
t167 = t173 * t355 - t573;
t275 = t374 * t325 - t331;
t328 = t374 * t387;
t147 = (t325 * t380 + t328) * t167 * t358 + (t173 * t357 + t320) * t275;
t227 = t275 * t581 + t293;
t521 = t147 ^ 2 * t399 / t227 ^ 2;
t566 = t358 * t374;
t133 = ((t173 * t566 - t380 * t384) * t355 - (t173 * t380 + t374 * t560) * t357) * t373 + t167 * t581;
t643 = t133 * t207;
t527 = t387 * t643;
t462 = t373 * t527;
t639 = t147 / t227;
t116 = t462 - t639;
t268 = t355 * t566 - t357 * t380;
t234 = t373 * t268 + t355 * t581;
t271 = t355 * t380 + t357 * t566;
t575 = t357 * t379;
t239 = -t373 * t271 - t356 * t575;
t486 = t373 * t639;
t518 = t398 * t639;
t528 = t380 * t643;
t586 = t356 * t373;
t199 = -t354 * t283 - t367 * t438 + t369;
t203 = -t283 * t367 + t354 * t438 + t370;
t689 = t339 * t199 - t343 * t203;
t47 = (-((t356 * t528 + t358 * t518) * t666 + ((-t486 + t527) * t374 + pkin(2) * t528) * t581 + t116 * t358) * t643 + t239 * t368 - (t380 * t356 * t518 + (t352 * t358 - t552 * t586 - t358) * t643) * t639 + t689 * t234) * t183;
t680 = 0.2e1 * t47;
t470 = (-t387 * t486 + (t352 * t397 + t379 * t549 + t333) * t643) * t183 * t643;
t301 = pkin(2) * t380 + t328;
t426 = pkin(3) * t586 - t358 * t696;
t163 = -t268 * t666 + t301 * t575 + (pkin(2) * t586 + t379 * t426) * t355;
t627 = t163 * t183;
t187 = -t301 * t355 + t357 * t426;
t585 = t356 * t374;
t671 = pkin(2) * t373;
t155 = -(t271 * t339 - t343 * t585) * t666 + (t187 * t339 + t343 * t251) * t379 + (t339 * t592 + t358 * t343) * t671;
t631 = t155 * t183;
t152 = (t271 * t343 + t339 * t585) * t666 + (-t187 * t343 + t339 * t251) * t379 + (t358 * t339 - t343 * t592) * t671;
t634 = t152 * t183;
t95 = t379 * t470 + (pkin(2) * t518 - t116 * t379) * t183 * t639 + t203 * t634 + t199 * t631 + t368 * t627;
t409 = t289 * t339 - t290 * t343 + t95 * t356 + t307;
t78 = t409 * t380;
t725 = pkin(2) * t680 - pkin(6) * t521 + t78;
t390 = koppelP(3,2);
t394 = koppelP(3,1);
t282 = t348 * t394 + t349 * t390;
t364 = legFrame(3,2);
t338 = sin(t364);
t342 = cos(t364);
t439 = t348 * t390 - t349 * t394;
t172 = -t338 * (t383 * t439 - t385) + (t282 * t383 - t386) * t342;
t166 = t172 * t355 - t573;
t274 = t372 * t324 - t330;
t327 = t372 * t387;
t146 = (t324 * t378 + t327) * t166 * t358 + (t172 * t357 + t320) * t274;
t226 = t274 * t582 + t292;
t522 = t146 ^ 2 * t399 / t226 ^ 2;
t568 = t358 * t372;
t132 = ((t172 * t568 - t378 * t384) * t355 - (t172 * t378 + t372 * t560) * t357) * t371 + t166 * t582;
t644 = t132 * t205;
t529 = t387 * t644;
t463 = t371 * t529;
t640 = t146 / t226;
t115 = t463 - t640;
t267 = t355 * t568 - t357 * t378;
t232 = t371 * t267 + t355 * t582;
t270 = t355 * t378 + t357 * t568;
t576 = t357 * t377;
t238 = -t371 * t270 - t356 * t576;
t487 = t371 * t640;
t519 = t398 * t640;
t530 = t378 * t644;
t588 = t356 * t371;
t198 = -t354 * t282 - t367 * t439 + t369;
t202 = -t282 * t367 + t354 * t439 + t370;
t688 = t338 * t198 - t342 * t202;
t46 = (-((t356 * t530 + t358 * t519) * t667 + ((-t487 + t529) * t372 + pkin(2) * t530) * t582 + t115 * t358) * t644 + t238 * t368 - (t378 * t356 * t519 + (t351 * t358 - t554 * t588 - t358) * t644) * t640 + t688 * t232) * t182;
t681 = 0.2e1 * t46;
t471 = (-t387 * t487 + (t351 * t397 + t377 * t549 + t333) * t644) * t182 * t644;
t300 = pkin(2) * t378 + t327;
t427 = pkin(3) * t588 - t358 * t697;
t162 = -t267 * t667 + t300 * t576 + (pkin(2) * t588 + t377 * t427) * t355;
t628 = t162 * t182;
t186 = -t300 * t355 + t357 * t427;
t587 = t356 * t372;
t672 = pkin(2) * t371;
t154 = -(t270 * t338 - t342 * t587) * t667 + (t186 * t338 + t342 * t250) * t377 + (t338 * t592 + t358 * t342) * t672;
t632 = t154 * t182;
t151 = (t270 * t342 + t338 * t587) * t667 + (-t186 * t342 + t338 * t250) * t377 + (t358 * t338 - t342 * t592) * t672;
t635 = t151 * t182;
t94 = t377 * t471 + (pkin(2) * t519 - t115 * t377) * t182 * t640 + t202 * t635 + t198 * t632 + t368 * t628;
t410 = t289 * t338 - t290 * t342 + t94 * t356 + t307;
t77 = t410 * t378;
t724 = pkin(2) * t681 - pkin(6) * t522 + t77;
t389 = koppelP(4,2);
t393 = koppelP(4,1);
t281 = t348 * t393 + t349 * t389;
t363 = legFrame(4,2);
t337 = sin(t363);
t341 = cos(t363);
t440 = t348 * t389 - t349 * t393;
t171 = -t337 * (t383 * t440 - t385) + (t281 * t383 - t386) * t341;
t165 = t171 * t355 - t573;
t273 = t360 * t321 - t323;
t322 = t360 * t387;
t142 = (t321 * t362 + t322) * t165 * t358 + t273 * (t171 * t357 + t320);
t219 = t273 * t589 + t291;
t524 = t142 ^ 2 * t399 / t219 ^ 2;
t571 = t358 * t360;
t128 = ((t171 * t571 - t362 * t384) * t355 - (t171 * t362 + t360 * t560) * t357) * t359 + t165 * t589;
t648 = t128 * t189;
t531 = t387 * t648;
t464 = t359 * t531;
t641 = t142 / t219;
t113 = t464 - t641;
t197 = -t354 * t281 - t367 * t440 + t369;
t201 = -t281 * t367 + t354 * t440 + t370;
t488 = t359 * t641;
t472 = (-t387 * t488 + (t350 * t397 + t361 * t549 + t333) * t648) * t181 * t648;
t523 = t398 * t641;
t265 = t355 * t571 - t357 * t362;
t296 = pkin(2) * t362 + t322;
t591 = t356 * t359;
t428 = pkin(3) * t591 - t358 * t698;
t577 = t357 * t361;
t161 = -t265 * t668 + t296 * t577 + (pkin(2) * t591 + t361 * t428) * t355;
t629 = t161 * t181;
t185 = -t296 * t355 + t357 * t428;
t266 = t355 * t362 + t357 * t571;
t590 = t356 * t360;
t673 = pkin(2) * t359;
t150 = -(t266 * t337 - t341 * t590) * t668 + (t185 * t337 + t341 * t249) * t361 + (t337 * t592 + t358 * t341) * t673;
t636 = t150 * t181;
t149 = (t266 * t341 + t337 * t590) * t668 + (-t185 * t341 + t337 * t249) * t361 + (t358 * t337 - t341 * t592) * t673;
t637 = t149 * t181;
t90 = t361 * t472 + (pkin(2) * t523 - t113 * t361) * t181 * t641 + t201 * t637 + t197 * t636 + t368 * t629;
t411 = t289 * t337 - t290 * t341 + t90 * t356 + t307;
t67 = t411 * t362;
t231 = -t359 * t266 - t356 * t577;
t416 = t359 * t265 + t355 * t589;
t532 = t362 * t648;
t687 = t337 * t197 - t341 * t201;
t45 = (-((t356 * t532 + t358 * t523) * t668 + ((-t488 + t531) * t360 + pkin(2) * t532) * t589 + t113 * t358) * t648 + t231 * t368 - (t362 * t356 * t523 + (t350 * t358 - t557 * t591 - t358) * t648) * t641 + t687 * t416) * t181;
t682 = 0.2e1 * t45;
t723 = pkin(2) * t682 - pkin(6) * t524 + t67;
t718 = t356 * (t381 * t695 + t541);
t717 = t356 * (t379 * t696 + t542);
t716 = t356 * (t377 * t697 + t543);
t715 = t356 * (t361 * t698 + t544);
t335 = g(3) * t357;
t460 = g(1) * t341 - g(2) * t337;
t691 = t460 * t355 + t335;
t714 = t360 * t691;
t459 = g(1) * t342 - g(2) * t338;
t692 = t459 * t355 + t335;
t713 = t372 * t692;
t458 = g(1) * t343 - g(2) * t339;
t693 = t458 * t355 + t335;
t712 = t374 * t693;
t457 = g(1) * t344 - g(2) * t340;
t694 = t457 * t355 + t335;
t711 = t376 * t694;
t710 = t691 * t362;
t709 = t692 * t378;
t708 = t693 * t380;
t707 = t694 * t382;
t702 = t321 * t358;
t701 = t324 * t358;
t700 = t325 * t358;
t699 = t326 * t358;
t468 = t189 * t523;
t451 = t128 * t468;
t674 = pkin(6) / 0.2e1;
t556 = t368 * t398;
t559 = t358 * t398;
t579 = t356 * t398;
t570 = t358 * t362;
t170 = (t355 * t570 + t357 * t360) * t663 + t296 * t593 + t698 * t357;
t624 = t170 * t181;
t169 = (t355 * t360 - t357 * t570) * t663 - t296 * t578 + t698 * t355;
t625 = t169 * t181;
t669 = pkin(2) * t398;
t76 = t556 * t625 - t472 * t559 - (-t358 * t464 + (-t261 * t359 * t579 + (t361 * t669 + t350) * t358) * t641) * t468 + t687 * t398 * t624;
t678 = -0.2e1 * pkin(2) * t451 - 0.2e1 * t76 * t674;
t467 = t205 * t519;
t447 = t132 * t467;
t563 = t358 * t378;
t178 = (t355 * t563 + t357 * t372) * t662 + t300 * t593 + t697 * t357;
t620 = t178 * t182;
t175 = (t355 * t372 - t357 * t563) * t662 - t300 * t578 + t697 * t355;
t623 = t175 * t182;
t87 = t556 * t623 - t471 * t559 - (-t358 * t463 + (-t262 * t371 * t579 + (t377 * t669 + t351) * t358) * t640) * t467 + t688 * t398 * t620;
t677 = -0.2e1 * pkin(2) * t447 - 0.2e1 * t87 * t674;
t466 = t207 * t518;
t446 = t133 * t466;
t562 = t358 * t380;
t179 = (t355 * t562 + t357 * t374) * t661 + t301 * t593 + t696 * t357;
t619 = t179 * t183;
t176 = (t355 * t374 - t357 * t562) * t661 - t301 * t578 + t696 * t355;
t622 = t176 * t183;
t88 = t556 * t622 - t470 * t559 - (-t358 * t462 + (-t263 * t373 * t579 + (t379 * t669 + t352) * t358) * t639) * t466 + t689 * t398 * t619;
t676 = -0.2e1 * pkin(2) * t446 - 0.2e1 * t88 * t674;
t465 = t209 * t517;
t445 = t134 * t465;
t561 = t358 * t382;
t180 = (t355 * t561 + t357 * t376) * t660 + t302 * t593 + t695 * t357;
t618 = t180 * t184;
t177 = (t355 * t376 - t357 * t561) * t660 - t302 * t578 + t695 * t355;
t621 = t177 * t184;
t89 = t556 * t621 - t469 * t559 - (-t358 * t461 + (-t264 * t375 * t579 + (t381 * t669 + t353) * t358) * t638) * t465 + t690 * t398 * t618;
t675 = -0.2e1 * pkin(2) * t445 - 0.2e1 * t89 * t674;
t664 = t355 * g(3);
t659 = t369 - g(2);
t658 = t370 - g(1);
t657 = t362 * t45;
t656 = t378 * t46;
t655 = t380 * t47;
t654 = t382 * t48;
t653 = t45 * t359;
t652 = t46 * t371;
t651 = t47 * t373;
t650 = t48 * t375;
t649 = t128 ^ 2 / t192 ^ 2;
t647 = t132 ^ 2 / t214 ^ 2;
t646 = t133 ^ 2 / t215 ^ 2;
t645 = t134 ^ 2 / t216 ^ 2;
t193 = t281 * t341 - t337 * t440;
t617 = t181 * t193;
t616 = t181 * t231;
t194 = t282 * t342 - t338 * t439;
t615 = t182 * t194;
t614 = t182 * t238;
t195 = t283 * t343 - t339 * t438;
t613 = t183 * t195;
t612 = t183 * t239;
t196 = t284 * t344 - t340 * t437;
t611 = t184 * t196;
t610 = t184 * t240;
t609 = t416 * t337;
t608 = t416 * t341;
t607 = t232 * t338;
t606 = t232 * t342;
t605 = t234 * t339;
t604 = t234 * t343;
t603 = t236 * t340;
t602 = t236 * t344;
t558 = t359 * t361;
t555 = t371 * t377;
t553 = t373 * t379;
t551 = t375 * t381;
t540 = t181 * t653;
t539 = t181 * t361 * t45;
t538 = t182 * t652;
t537 = t182 * t377 * t46;
t536 = t183 * t651;
t535 = t183 * t379 * t47;
t534 = t184 * t650;
t533 = t184 * t381 * t48;
t516 = t170 * t617;
t515 = t337 * t624;
t514 = t341 * t624;
t512 = t178 * t615;
t511 = t338 * t620;
t510 = t342 * t620;
t508 = t179 * t613;
t507 = t339 * t619;
t506 = t343 * t619;
t504 = t180 * t611;
t503 = t340 * t618;
t502 = t344 * t618;
t500 = t416 * t617;
t499 = t181 * t609;
t498 = t181 * t608;
t497 = t232 * t615;
t496 = t182 * t607;
t495 = t182 * t606;
t494 = t234 * t613;
t493 = t183 * t605;
t492 = t183 * t604;
t491 = t236 * t611;
t490 = t184 * t603;
t489 = t184 * t602;
t480 = t170 * t540;
t479 = t170 * t539;
t478 = t178 * t538;
t477 = t178 * t537;
t476 = t179 * t536;
t475 = t179 * t535;
t474 = t180 * t534;
t473 = t180 * t533;
t452 = t181 * t558 * t649;
t450 = t182 * t555 * t647;
t449 = t183 * t553 * t646;
t448 = t184 * t551 * t645;
t444 = (t524 + t649) * t360 - t657;
t443 = (t522 + t647) * t372 - t656;
t442 = (t521 + t646) * t374 - t655;
t441 = (t520 + t645) * t376 - t654;
t436 = t321 * t592;
t435 = t324 * t592;
t434 = t325 * t592;
t433 = t326 * t592;
t432 = 0.2e1 * t451;
t431 = 0.2e1 * t447;
t430 = 0.2e1 * t446;
t429 = 0.2e1 * t445;
t424 = t170 * t452;
t423 = t178 * t450;
t422 = t179 * t449;
t421 = t180 * t448;
t279 = t355 * pkin(2) - t387 * t578;
t280 = pkin(2) * t578 + t355 * t387;
t403 = t266 * t668 + (t279 * t362 + t280 * t360) * t361;
t402 = t270 * t667 + (t279 * t378 + t280 * t372) * t377;
t401 = t271 * t666 + (t279 * t380 + t280 * t374) * t379;
t400 = t272 * t665 + (t279 * t382 + t280 * t376) * t381;
t278 = -t348 * t367 - t349 * t354;
t277 = -t348 * t354 + t349 * t367;
t244 = t457 * t357 - t664;
t243 = t458 * t357 - t664;
t242 = t459 * t357 - t664;
t241 = t460 * t357 - t664;
t124 = ((-t284 * t400 - t437 * t718 + (t284 * t433 - t437 * t699) * t375) * t344 + (-t284 * t718 + t437 * t400 + (-t284 * t699 - t433 * t437) * t375) * t340) * t209;
t123 = ((-t401 * t283 - t438 * t717 + (t283 * t434 - t438 * t700) * t373) * t343 + (-t283 * t717 + t438 * t401 + (-t283 * t700 - t434 * t438) * t373) * t339) * t207;
t122 = ((-t402 * t282 - t439 * t716 + (t282 * t435 - t439 * t701) * t371) * t342 + (-t282 * t716 + t439 * t402 + (-t282 * t701 - t435 * t439) * t371) * t338) * t205;
t121 = ((-t403 * t281 - t440 * t715 + (t281 * t436 - t440 * t702) * t359) * t341 + (-t281 * t715 + t403 * t440 + (-t281 * t702 - t436 * t440) * t359) * t337) * t189;
t112 = (-0.2e1 * t353 + 0.1e1) * t645;
t111 = (-0.2e1 * t352 + 0.1e1) * t646;
t110 = (-0.2e1 * t351 + 0.1e1) * t647;
t109 = (-0.2e1 * t350 + 0.1e1) * t649;
t93 = -t340 * g(1) - t344 * g(2) + t96;
t92 = -t339 * g(1) - t343 * g(2) + t95;
t91 = -t338 * g(1) - t342 * g(2) + t94;
t86 = t356 * t244 + t93 * t358;
t85 = t356 * t243 + t92 * t358;
t84 = t356 * t242 + t91 * t358;
t83 = -t337 * g(1) - t341 * g(2) + t90;
t75 = t79 + t711;
t74 = t78 + t712;
t73 = t77 + t713;
t72 = -t376 * t408 + t707;
t71 = -t374 * t409 + t708;
t70 = -t372 * t410 + t709;
t69 = t356 * t241 + t83 * t358;
t66 = t67 + t714;
t65 = -t360 * t411 + t710;
t64 = -t375 * t520 + t89 * t381;
t63 = t89 * t375 + t381 * t520;
t62 = -t373 * t521 + t88 * t379;
t61 = t88 * t373 + t379 * t521;
t60 = -t371 * t522 + t87 * t377;
t59 = t87 * t371 + t377 * t522;
t58 = -t359 * t524 + t76 * t361;
t57 = t76 * t359 + t361 * t524;
t53 = t376 * t89 + t382 * t429;
t52 = t374 * t88 + t380 * t430;
t51 = t372 * t87 + t378 * t431;
t49 = t360 * t76 + t362 * t432;
t44 = t374 * t47 + t380 * t646;
t43 = t374 * t646 - t655;
t42 = t376 * t48 + t382 * t645;
t41 = t372 * t46 + t378 * t647;
t40 = t376 * t645 - t654;
t39 = t372 * t647 - t656;
t38 = t360 * t45 + t362 * t649;
t37 = t360 * t649 - t657;
t36 = (t381 * t429 + t650) * t375;
t35 = (t379 * t430 + t651) * t373;
t34 = (t377 * t431 + t652) * t371;
t33 = (t361 * t432 + t653) * t359;
t32 = t551 * t679 + (0.4e1 * t353 - 0.2e1) * t445;
t31 = t553 * t680 + (0.4e1 * t352 - 0.2e1) * t446;
t30 = t555 * t681 + (0.4e1 * t351 - 0.2e1) * t447;
t29 = t558 * t682 + (0.4e1 * t350 - 0.2e1) * t451;
t28 = pkin(2) * t645 - t48 * pkin(6) + (t244 * t358 - t356 * t93) * t376 + t707;
t27 = pkin(2) * t646 - t47 * pkin(6) + (t243 * t358 - t356 * t92) * t374 + t708;
t26 = pkin(2) * t647 - t46 * pkin(6) + (t242 * t358 - t356 * t91) * t372 + t709;
t25 = pkin(2) * t649 - t45 * pkin(6) + (t241 * t358 - t356 * t83) * t360 + t710;
t24 = t28 * t381 - t86 * t375;
t23 = t28 * t375 + t86 * t381;
t22 = t27 * t379 - t85 * t373;
t21 = t27 * t373 + t85 * t379;
t20 = t26 * t377 - t84 * t371;
t19 = t26 * t371 + t84 * t377;
t18 = t25 * t361 - t359 * t69;
t17 = t25 * t359 + t69 * t361;
t16 = t375 * t675 + t726 * t381 + t694 * t550;
t15 = t373 * t676 + t725 * t379 + t693 * t552;
t14 = t371 * t677 + t724 * t377 + t692 * t554;
t13 = t381 * t675 + (-t711 - t726) * t375;
t12 = t379 * t676 + (-t712 - t725) * t373;
t11 = t377 * t677 + (-t713 - t724) * t371;
t10 = t359 * t678 + t723 * t361 + t691 * t557;
t9 = t361 * t678 + (-t714 - t723) * t359;
t8 = (-t375 * t53 - t381 * t441) * t356 + t358 * t64;
t7 = (t375 * t441 - t381 * t53) * t356 - t358 * t63;
t6 = (-t373 * t52 - t379 * t442) * t356 + t358 * t62;
t5 = (t373 * t442 - t379 * t52) * t356 - t358 * t61;
t4 = (-t371 * t51 - t377 * t443) * t356 + t358 * t60;
t3 = (t371 * t443 - t377 * t51) * t356 - t358 * t59;
t2 = (-t359 * t49 - t361 * t444) * t356 + t358 * t58;
t1 = (t359 * t444 - t361 * t49) * t356 - t358 * t57;
t50 = [t93 * t633 + t92 * t634 + t91 * t635 + t83 * t637, -t45 * t498 - t46 * t495 - t47 * t492 - t48 * t489, -t66 * t498 - t73 * t495 - t74 * t492 - t75 * t489 + (-t37 * t637 - t39 * t635 - t40 * t633 - t43 * t634) * t356, -t65 * t498 - t70 * t495 - t71 * t492 - t72 * t489 + (-t38 * t637 - t41 * t635 - t42 * t633 - t44 * t634) * t356, -t33 * t498 - t34 * t495 - t35 * t492 - t36 * t489 + (t341 * t424 + t342 * t423 + t343 * t422 + t344 * t421) * t398, -t29 * t498 - t30 * t495 - t31 * t492 - t32 * t489 + (-t109 * t514 - t110 * t510 - t111 * t506 - t112 * t502) * t398, -t57 * t498 - t59 * t495 - t61 * t492 - t63 * t489 + (-t341 * t480 - t342 * t478 - t343 * t476 - t344 * t474) * t398, -t58 * t498 - t60 * t495 - t62 * t492 - t64 * t489 + (-t341 * t479 - t342 * t477 - t343 * t475 - t344 * t473) * t398, (-t502 * t89 - t506 * t88 - t510 * t87 - t514 * t76) * t398, (t153 * t8 - t16 * t602) * t184 + (-t15 * t604 + t152 * t6) * t183 + (-t14 * t606 + t151 * t4) * t182 + (-t10 * t608 + t149 * t2) * t181 + (-t17 * t514 - t19 * t510 - t21 * t506 - t23 * t502) * t398, (-t13 * t602 + t153 * t7) * t184 + (-t12 * t604 + t152 * t5) * t183 + (-t11 * t606 + t151 * t3) * t182 + (t149 * t1 - t608 * t9) * t181 + (-t18 * t514 - t20 * t510 - t22 * t506 - t24 * t502) * t398, 0, t278, -t277, t658; t93 * t630 + t92 * t631 + t91 * t632 + t83 * t636, t45 * t499 + t46 * t496 + t47 * t493 + t48 * t490, t66 * t499 + t73 * t496 + t74 * t493 + t75 * t490 + (-t37 * t636 - t39 * t632 - t40 * t630 - t43 * t631) * t356, t65 * t499 + t70 * t496 + t71 * t493 + t72 * t490 + (-t38 * t636 - t41 * t632 - t42 * t630 - t44 * t631) * t356, t33 * t499 + t34 * t496 + t35 * t493 + t36 * t490 + (-t337 * t424 - t338 * t423 - t339 * t422 - t340 * t421) * t398, t29 * t499 + t30 * t496 + t31 * t493 + t32 * t490 + (t109 * t515 + t110 * t511 + t111 * t507 + t112 * t503) * t398, t57 * t499 + t59 * t496 + t61 * t493 + t63 * t490 + (t337 * t480 + t338 * t478 + t339 * t476 + t340 * t474) * t398, t58 * t499 + t60 * t496 + t62 * t493 + t64 * t490 + (t337 * t479 + t338 * t477 + t339 * t475 + t340 * t473) * t398, (t503 * t89 + t507 * t88 + t511 * t87 + t515 * t76) * t398, (t156 * t8 + t16 * t603) * t184 + (t15 * t605 + t155 * t6) * t183 + (t14 * t607 + t154 * t4) * t182 + (t10 * t609 + t150 * t2) * t181 + (t17 * t515 + t19 * t511 + t21 * t507 + t23 * t503) * t398, (t13 * t603 + t156 * t7) * t184 + (t12 * t605 + t155 * t5) * t183 + (t11 * t607 + t154 * t3) * t182 + (t150 * t1 + t609 * t9) * t181 + (t18 * t515 + t20 * t511 + t22 * t507 + t24 * t503) * t398, 0, t277, t278, t659; t93 * t626 + t92 * t627 + t91 * t628 + t83 * t629, t45 * t616 + t46 * t614 + t47 * t612 + t48 * t610, t66 * t616 + t73 * t614 + t74 * t612 + t75 * t610 + (-t37 * t629 - t39 * t628 - t40 * t626 - t43 * t627) * t356, t65 * t616 + t70 * t614 + t71 * t612 + t72 * t610 + (-t38 * t629 - t41 * t628 - t42 * t626 - t44 * t627) * t356, t33 * t616 + t34 * t614 + t35 * t612 + t36 * t610 + (-t169 * t452 - t175 * t450 - t176 * t449 - t177 * t448) * t398, t29 * t616 + t30 * t614 + t31 * t612 + t32 * t610 + (t109 * t625 + t110 * t623 + t111 * t622 + t112 * t621) * t398, t57 * t616 + t59 * t614 + t61 * t612 + t63 * t610 + (t169 * t540 + t175 * t538 + t176 * t536 + t177 * t534) * t398, t58 * t616 + t60 * t614 + t62 * t612 + t64 * t610 + (t169 * t539 + t175 * t537 + t176 * t535 + t177 * t533) * t398, (t621 * t89 + t622 * t88 + t623 * t87 + t625 * t76) * t398, (t16 * t240 + t164 * t8) * t184 + (t15 * t239 + t163 * t6) * t183 + (t14 * t238 + t162 * t4) * t182 + (t10 * t231 + t161 * t2) * t181 + (t17 * t625 + t19 * t623 + t21 * t622 + t23 * t621) * t398, (t13 * t240 + t164 * t7) * t184 + (t12 * t239 + t163 * t5) * t183 + (t11 * t238 + t162 * t3) * t182 + (t1 * t161 + t231 * t9) * t181 + (t18 * t625 + t20 * t623 + t22 * t622 + t24 * t621) * t398, 0, 0, 0, t368 - g(3); t121 * t83 + t122 * t91 + t123 * t92 + t124 * t93, t45 * t500 + t46 * t497 + t47 * t494 + t48 * t491, t66 * t500 + t73 * t497 + t74 * t494 + t75 * t491 + (-t121 * t37 - t122 * t39 - t123 * t43 - t124 * t40) * t356, t65 * t500 + t70 * t497 + t71 * t494 + t72 * t491 + (-t121 * t38 - t122 * t41 - t123 * t44 - t124 * t42) * t356, t33 * t500 + t34 * t497 + t35 * t494 + t36 * t491 + (-t193 * t424 - t194 * t423 - t195 * t422 - t196 * t421) * t398, t29 * t500 + t30 * t497 + t31 * t494 + t32 * t491 + (t109 * t516 + t110 * t512 + t111 * t508 + t112 * t504) * t398, t57 * t500 + t59 * t497 + t61 * t494 + t63 * t491 + (t193 * t480 + t194 * t478 + t195 * t476 + t196 * t474) * t398, t58 * t500 + t60 * t497 + t62 * t494 + t64 * t491 + (t193 * t479 + t194 * t477 + t195 * t475 + t196 * t473) * t398, (t504 * t89 + t508 * t88 + t512 * t87 + t516 * t76) * t398, t10 * t500 + t14 * t497 + t15 * t494 + t16 * t491 + t121 * t2 + t122 * t4 + t123 * t6 + t124 * t8 + (t17 * t516 + t19 * t512 + t21 * t508 + t23 * t504) * t398, t11 * t497 + t12 * t494 + t13 * t491 + t9 * t500 + t121 * t1 + t122 * t3 + t123 * t5 + t124 * t7 + (t18 * t516 + t20 * t512 + t22 * t508 + t24 * t504) * t398, t367, -t348 * t658 + t349 * t659, -t348 * t659 - t349 * t658, 0;];
tauX_reg  = t50;
