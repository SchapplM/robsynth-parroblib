% Calculate inertia matrix for parallel robot
% P4RRRRR10V1G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [4x4]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 13:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(6,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: xP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V1G1A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 11:45:14
% EndTime: 2020-08-07 11:45:30
% DurationCPUTime: 16.90s
% Computational Cost: add. (31612->794), mult. (73736->1283), div. (1920->17), fcn. (63240->36), ass. (0->526)
t1875 = cos(pkin(3));
t1858 = t1875 ^ 2;
t2190 = t1858 * pkin(6);
t1887 = mrSges(3,3) - mrSges(2,2);
t2257 = t1887 * pkin(5) + Ifges(2,6);
t1874 = sin(pkin(3));
t2112 = t1874 * t1875;
t1880 = sin(qJ(3,4));
t1883 = cos(qJ(3,4));
t1770 = Ifges(3,5) * t1880 + Ifges(3,6) * t1883;
t1859 = t1883 ^ 2;
t1881 = sin(qJ(2,4));
t1884 = cos(qJ(2,4));
t1886 = Ifges(3,2) - Ifges(3,1);
t2098 = t1880 * t1883;
t2208 = Ifges(2,5) - Ifges(3,4);
t2213 = 2 * Ifges(3,4);
t1779 = t1880 * mrSges(3,2) - mrSges(2,1);
t2238 = -mrSges(3,1) * t1883 + t1779;
t2256 = (-t1770 + t2257) * t1884 + (t2238 * pkin(5) + t1859 * t2213 - t1886 * t2098 + t2208) * t1881;
t1888 = sin(qJ(3,3));
t1897 = cos(qJ(3,3));
t1771 = Ifges(3,5) * t1888 + Ifges(3,6) * t1897;
t1865 = t1897 ^ 2;
t1889 = sin(qJ(2,3));
t1898 = cos(qJ(2,3));
t2089 = t1888 * t1897;
t1782 = t1888 * mrSges(3,2) - mrSges(2,1);
t2237 = -mrSges(3,1) * t1897 + t1782;
t2255 = (-t1771 + t2257) * t1898 + (t2237 * pkin(5) + t1865 * t2213 - t1886 * t2089 + t2208) * t1889;
t1891 = sin(qJ(3,2));
t1900 = cos(qJ(3,2));
t1772 = Ifges(3,5) * t1891 + Ifges(3,6) * t1900;
t1868 = t1900 ^ 2;
t1892 = sin(qJ(2,2));
t1901 = cos(qJ(2,2));
t2086 = t1891 * t1900;
t1783 = t1891 * mrSges(3,2) - mrSges(2,1);
t2236 = -mrSges(3,1) * t1900 + t1783;
t2254 = (-t1772 + t2257) * t1901 + (t2236 * pkin(5) + t1868 * t2213 - t1886 * t2086 + t2208) * t1892;
t1894 = sin(qJ(3,1));
t1903 = cos(qJ(3,1));
t1773 = Ifges(3,5) * t1894 + Ifges(3,6) * t1903;
t1871 = t1903 ^ 2;
t1895 = sin(qJ(2,1));
t1904 = cos(qJ(2,1));
t2083 = t1894 * t1903;
t1784 = t1894 * mrSges(3,2) - mrSges(2,1);
t2235 = -mrSges(3,1) * t1903 + t1784;
t2253 = (-t1773 + t2257) * t1904 + (t2235 * pkin(5) + t1871 * t2213 - t1886 * t2083 + t2208) * t1895;
t2081 = t1895 * t1904;
t1995 = t1894 * t2081;
t2195 = pkin(2) * t1903;
t2063 = t1874 * t2195;
t2107 = t1874 * t1894;
t2199 = pkin(2) * t1871;
t1843 = t1895 * pkin(6);
t2243 = t1843 + pkin(1);
t2252 = t1875 * (t1903 * t2243 + t1904 * t2199) - t1995 * t2063 + pkin(6) * (t1904 - 0.1e1) * (t1904 + 0.1e1) * t2107;
t2084 = t1892 * t1901;
t1997 = t1891 * t2084;
t2196 = pkin(2) * t1900;
t2064 = t1874 * t2196;
t2108 = t1874 * t1891;
t2200 = pkin(2) * t1868;
t1842 = t1892 * pkin(6);
t2244 = t1842 + pkin(1);
t2251 = t1875 * (t1900 * t2244 + t1901 * t2200) - t1997 * t2064 + pkin(6) * (t1901 - 0.1e1) * (t1901 + 0.1e1) * t2108;
t2087 = t1889 * t1898;
t1999 = t1888 * t2087;
t2197 = pkin(2) * t1897;
t2065 = t1874 * t2197;
t2109 = t1874 * t1888;
t2201 = pkin(2) * t1865;
t1841 = t1889 * pkin(6);
t2245 = t1841 + pkin(1);
t2250 = (t1897 * t2245 + t1898 * t2201) * t1875 - t1999 * t2065 + pkin(6) * (t1898 - 0.1e1) * (t1898 + 0.1e1) * t2109;
t2096 = t1881 * t1884;
t2001 = t1880 * t2096;
t2198 = pkin(2) * t1883;
t2066 = t1874 * t2198;
t2094 = t1884 * t1859;
t2111 = t1874 * t1880;
t1826 = t1881 * pkin(6);
t2246 = t1826 + pkin(1);
t2249 = (pkin(2) * t2094 + t1883 * t2246) * t1875 - t2001 * t2066 + pkin(6) * (t1884 - 0.1e1) * (t1884 + 0.1e1) * t2111;
t2248 = -0.2e1 * pkin(6);
t2247 = 0.2e1 * pkin(6);
t2182 = t1894 * pkin(2);
t1812 = pkin(1) * t2182;
t2078 = t1903 * t1904;
t2047 = t1895 * t2195;
t1761 = -t1904 * pkin(6) + t2047;
t2125 = t1761 * t1875;
t1710 = 0.1e1 / (pkin(1) * t2125 + (-t1812 + (pkin(2) * t2078 + t1843) * pkin(5)) * t1874);
t2184 = t1891 * pkin(2);
t1811 = pkin(1) * t2184;
t2079 = t1900 * t1901;
t2049 = t1892 * t2196;
t1760 = -t1901 * pkin(6) + t2049;
t2126 = t1760 * t1875;
t1709 = 0.1e1 / (pkin(1) * t2126 + (-t1811 + (pkin(2) * t2079 + t1842) * pkin(5)) * t1874);
t2186 = t1888 * pkin(2);
t1810 = pkin(1) * t2186;
t2080 = t1897 * t1898;
t2051 = t1889 * t2197;
t1759 = -t1898 * pkin(6) + t2051;
t2127 = t1759 * t1875;
t1708 = 0.1e1 / (pkin(1) * t2127 + (-t1810 + (pkin(2) * t2080 + t1841) * pkin(5)) * t1874);
t2189 = t1880 * pkin(2);
t1809 = pkin(1) * t2189;
t2095 = t1883 * t1884;
t2053 = t1881 * t2198;
t1758 = -t1884 * pkin(6) + t2053;
t2128 = t1758 * t1875;
t1706 = 0.1e1 / (pkin(1) * t2128 + (-t1809 + (pkin(2) * t2095 + t1826) * pkin(5)) * t1874);
t2206 = pkin(1) * t1881;
t2205 = pkin(1) * t1889;
t2204 = pkin(1) * t1892;
t2203 = pkin(1) * t1895;
t1879 = legFrame(1,3);
t1819 = sin(t1879);
t1823 = cos(t1879);
t1896 = sin(qJ(1,1));
t1905 = cos(qJ(1,1));
t1743 = t1819 * t1896 - t1905 * t1823;
t1921 = pkin(6) ^ 2;
t1923 = pkin(2) ^ 2;
t1980 = t1871 * t1923 - t1921;
t2242 = t1980 * t1743;
t1878 = legFrame(2,3);
t1818 = sin(t1878);
t1822 = cos(t1878);
t1893 = sin(qJ(1,2));
t1902 = cos(qJ(1,2));
t1742 = t1818 * t1893 - t1902 * t1822;
t1981 = t1868 * t1923 - t1921;
t2241 = t1981 * t1742;
t1877 = legFrame(3,3);
t1817 = sin(t1877);
t1821 = cos(t1877);
t1890 = sin(qJ(1,3));
t1899 = cos(qJ(1,3));
t1741 = t1817 * t1890 - t1899 * t1821;
t1982 = t1865 * t1923 - t1921;
t2240 = t1982 * t1741;
t1876 = legFrame(4,3);
t1816 = sin(t1876);
t1820 = cos(t1876);
t1882 = sin(qJ(1,4));
t1885 = cos(qJ(1,4));
t1739 = t1816 * t1882 - t1885 * t1820;
t1983 = t1859 * t1923 - t1921;
t2239 = t1983 * t1739;
t2046 = Ifges(3,4) * t2098;
t1774 = 0.2e1 * t2046;
t2093 = t1886 * t1859;
t2209 = Ifges(3,1) + Ifges(2,3);
t1738 = t1774 + t2093 + t2209;
t2045 = Ifges(3,4) * t2089;
t1775 = 0.2e1 * t2045;
t2092 = t1886 * t1865;
t1747 = t1775 + t2092 + t2209;
t2044 = Ifges(3,4) * t2086;
t1776 = 0.2e1 * t2044;
t2091 = t1886 * t1868;
t1748 = t1776 + t2091 + t2209;
t2043 = Ifges(3,4) * t2083;
t1777 = 0.2e1 * t2043;
t2090 = t1886 * t1871;
t1749 = t1777 + t2090 + t2209;
t2210 = Ifges(2,1) + Ifges(3,2);
t1993 = Ifges(2,2) + Ifges(3,3) - t2210;
t2230 = -t1993 - t2090;
t2229 = -t1993 - t2091;
t2228 = -t1993 - t2092;
t2227 = -t1993 - t2093;
t1909 = m(2) + m(3);
t2226 = (-t1909 * pkin(5) - (2 * mrSges(2,3))) * pkin(5);
t1861 = t1884 ^ 2;
t1766 = (t1861 - 0.2e1) * t2189 - pkin(5);
t2188 = t1880 * pkin(5);
t1792 = pkin(2) + t2188;
t2202 = pkin(2) * t1859;
t1992 = t1792 - 0.2e1 * t2202;
t2217 = (-pkin(6) * t2001 - t1766 * t1883) * t2112 + t2095 * t2190 + (t1992 * t1858 - t1792 + t2202) * t1881;
t1867 = t1898 ^ 2;
t1767 = (t1867 - 0.2e1) * t2186 - pkin(5);
t2185 = t1888 * pkin(5);
t1796 = pkin(2) + t2185;
t1991 = t1796 - 0.2e1 * t2201;
t2216 = (-pkin(6) * t1999 - t1767 * t1897) * t2112 + t2080 * t2190 + (t1991 * t1858 - t1796 + t2201) * t1889;
t1870 = t1901 ^ 2;
t1768 = (t1870 - 0.2e1) * t2184 - pkin(5);
t2183 = t1891 * pkin(5);
t1799 = pkin(2) + t2183;
t1990 = t1799 - 0.2e1 * t2200;
t2215 = (-pkin(6) * t1997 - t1768 * t1900) * t2112 + t2079 * t2190 + (t1990 * t1858 - t1799 + t2200) * t1892;
t1873 = t1904 ^ 2;
t1769 = (t1873 - 0.2e1) * t2182 - pkin(5);
t2181 = t1894 * pkin(5);
t1802 = pkin(2) + t2181;
t1989 = t1802 - 0.2e1 * t2199;
t2214 = (-pkin(6) * t1995 - t1769 * t1903) * t2112 + t2078 * t2190 + (t1989 * t1858 - t1802 + t2199) * t1895;
t2212 = (t1858 - 0.1e1) * t2247;
t2207 = pkin(1) * t1875;
t2194 = pkin(5) * t1884;
t2193 = pkin(5) * t1898;
t2192 = pkin(5) * t1901;
t2191 = pkin(5) * t1904;
t2172 = Ifges(3,4) * t1880;
t2171 = Ifges(3,4) * t1888;
t2170 = Ifges(3,4) * t1891;
t2169 = Ifges(3,4) * t1894;
t2168 = Ifges(3,6) * t1880 + Ifges(2,4);
t2167 = Ifges(3,6) * t1888 + Ifges(2,4);
t2166 = Ifges(3,6) * t1891 + Ifges(2,4);
t2165 = Ifges(3,6) * t1894 + Ifges(2,4);
t1740 = t1816 * t1885 + t1882 * t1820;
t2017 = t1740 * t2111;
t1650 = t2217 * t1739 + t2249 * t1740 - t2017 * t2206;
t1860 = 0.1e1 / t1883;
t2164 = t1650 * t1860;
t2018 = t1739 * t2111;
t1651 = -t2249 * t1739 + t2217 * t1740 + t2018 * t2206;
t2163 = t1651 * t1860;
t1744 = t1817 * t1899 + t1890 * t1821;
t2013 = t1744 * t2109;
t1653 = t2216 * t1741 + t2250 * t1744 - t2013 * t2205;
t1866 = 0.1e1 / t1897;
t2162 = t1653 * t1866;
t1745 = t1818 * t1902 + t1893 * t1822;
t2012 = t1745 * t2108;
t1654 = t2215 * t1742 + t2251 * t1745 - t2012 * t2204;
t1869 = 0.1e1 / t1900;
t2161 = t1654 * t1869;
t1746 = t1819 * t1905 + t1896 * t1823;
t2011 = t1746 * t2107;
t1655 = t2214 * t1743 + t2252 * t1746 - t2011 * t2203;
t1872 = 0.1e1 / t1903;
t2160 = t1655 * t1872;
t2016 = t1741 * t2109;
t1656 = -t2250 * t1741 + t2216 * t1744 + t2016 * t2205;
t2159 = t1656 * t1866;
t2015 = t1742 * t2108;
t1657 = -t2251 * t1742 + t2215 * t1745 + t2015 * t2204;
t2158 = t1657 * t1869;
t2014 = t1743 * t2107;
t1658 = -t2252 * t1743 + t2214 * t1746 + t2014 * t2203;
t2157 = t1658 * t1872;
t1676 = t2256 * t1874 + ((t1887 * t1881 - t2238 * t1884) * pkin(1) + t1738) * t1875;
t2156 = t1676 * t1860;
t1683 = t2255 * t1874 + ((t1887 * t1889 - t2237 * t1898) * pkin(1) + t1747) * t1875;
t2155 = t1683 * t1866;
t1684 = t2254 * t1874 + ((t1887 * t1892 - t2236 * t1901) * pkin(1) + t1748) * t1875;
t2154 = t1684 * t1869;
t1685 = t2253 * t1874 + ((t1887 * t1895 - t2235 * t1904) * pkin(1) + t1749) * t1875;
t2153 = t1685 * t1872;
t1793 = pkin(5) + t2189;
t1795 = pkin(6) + t2206;
t2110 = t1874 * t1884;
t2005 = t1875 * t2110;
t2010 = (t1875 + 0.1e1) * (t1875 - 0.1e1) * t1923;
t2102 = t1875 * t1881;
t2120 = t1793 * t1874;
t1686 = -t1881 * t2010 * t2094 + (t1793 * t2005 + t1861 * t2212 + t1795 - t2190) * t2198 - ((-t1858 * t1826 + t2246) * t1884 - t2102 * t2120) * pkin(6);
t1924 = 0.1e1 / pkin(2);
t2152 = t1686 * t1924;
t1797 = pkin(5) + t2186;
t1805 = pkin(6) + t2205;
t2106 = t1874 * t1898;
t2004 = t1875 * t2106;
t2101 = t1875 * t1889;
t2119 = t1797 * t1874;
t1688 = -t1865 * t2010 * t2087 + (t1797 * t2004 + t1867 * t2212 + t1805 - t2190) * t2197 - ((-t1858 * t1841 + t2245) * t1898 - t2101 * t2119) * pkin(6);
t2151 = t1688 * t1924;
t1800 = pkin(5) + t2184;
t1806 = pkin(6) + t2204;
t2105 = t1874 * t1901;
t2003 = t1875 * t2105;
t2100 = t1875 * t1892;
t2118 = t1800 * t1874;
t1689 = -t1868 * t2010 * t2084 + (t1800 * t2003 + t1870 * t2212 + t1806 - t2190) * t2196 - ((-t1858 * t1842 + t2244) * t1901 - t2100 * t2118) * pkin(6);
t2150 = t1689 * t1924;
t1803 = pkin(5) + t2182;
t1807 = pkin(6) + t2203;
t2104 = t1874 * t1904;
t2002 = t1875 * t2104;
t2099 = t1875 * t1895;
t2117 = t1803 * t1874;
t1690 = -t1871 * t2010 * t2081 + (t1803 * t2002 + t1873 * t2212 + t1807 - t2190) * t2195 - ((-t1858 * t1843 + t2243) * t1904 - t2099 * t2117) * pkin(6);
t2149 = t1690 * t1924;
t1808 = pkin(6) * t2207;
t2116 = t1874 * (-pkin(5) * t1826 + t1809);
t2148 = 0.1e1 / ((-pkin(5) * t2066 + t1808) * t1884 - t2053 * t2207 + t2116) * t1860;
t2147 = 0.1e1 / ((pkin(1) * t2102 + pkin(5) * t2110) * t2198 - t1884 * t1808 - t2116) * t1860;
t2115 = t1874 * (-pkin(5) * t1841 + t1810);
t2146 = 0.1e1 / ((-pkin(5) * t2065 + t1808) * t1898 - t2051 * t2207 + t2115) * t1866;
t2114 = t1874 * (-pkin(5) * t1842 + t1811);
t2145 = 0.1e1 / ((-pkin(5) * t2064 + t1808) * t1901 - t2049 * t2207 + t2114) * t1869;
t2113 = t1874 * (-pkin(5) * t1843 + t1812);
t2144 = 0.1e1 / ((-pkin(5) * t2063 + t1808) * t1904 - t2047 * t2207 + t2113) * t1872;
t2143 = 0.1e1 / ((pkin(1) * t2101 + pkin(5) * t2106) * t2197 - t1898 * t1808 - t2115) * t1866;
t2142 = 0.1e1 / ((pkin(1) * t2100 + pkin(5) * t2105) * t2196 - t1901 * t1808 - t2114) * t1869;
t2141 = 0.1e1 / ((pkin(1) * t2099 + pkin(5) * t2104) * t2195 - t1904 * t1808 - t2113) * t1872;
t2140 = t1706 * (t1758 * t1874 + t1875 * t2189);
t2139 = t1708 * (t1759 * t1874 + t1875 * t2186);
t2138 = t1709 * (t1760 * t1874 + t1875 * t2184);
t2137 = t1710 * (t1761 * t1874 + t1875 * t2182);
t2132 = t1738 * t1860;
t2131 = t1747 * t1866;
t2130 = t1748 * t1869;
t2129 = t1749 * t1872;
t2124 = t1770 * t1860;
t2123 = t1771 * t1866;
t2122 = t1772 * t1869;
t2121 = t1773 * t1872;
t2103 = t1874 * t1924;
t2097 = t1880 * t1884;
t2088 = t1888 * t1898;
t2085 = t1891 * t1901;
t2082 = t1894 * t1904;
t2076 = 0.2e1 * pkin(1) * t1887;
t2075 = mrSges(3,1) * t2188;
t2074 = mrSges(3,1) * t2185;
t2073 = mrSges(3,1) * t2183;
t2072 = mrSges(3,1) * t2181;
t2071 = 0.2e1 * t2112;
t2062 = t1875 * t2198;
t2061 = t1875 * t2197;
t2060 = t1875 * t2196;
t2059 = t1875 * t2195;
t2009 = t1885 * t2120;
t1718 = t1882 * t1795 - t1881 * t2009;
t1794 = 0.2e1 * t1826 + pkin(1);
t1730 = t1882 * t1794 - t2009;
t2000 = t1882 * t2120;
t1932 = t1795 * t1885 + t1881 * t2000;
t1936 = t1794 * t1885 + t2000;
t1959 = t1983 * t1740;
t1978 = t1740 * t2062;
t1662 = (t1978 * t2248 + t2239) * t1861 + ((t1816 * t1730 - t1936 * t1820) * t2198 + t1959 * t2102) * t1884 + (t1816 * t1718 - t1932 * t1820 + t1978) * pkin(6);
t2034 = t1662 * t2148;
t1979 = t1739 * t2062;
t1663 = (t1979 * t2247 + t1959) * t1861 + ((t1730 * t1820 + t1936 * t1816) * t2198 - t2102 * t2239) * t1884 + (t1718 * t1820 + t1816 * t1932 - t1979) * pkin(6);
t2033 = t1663 * t2148;
t2008 = t1899 * t2119;
t1720 = t1890 * t1805 - t1889 * t2008;
t1798 = 0.2e1 * t1841 + pkin(1);
t1731 = t1890 * t1798 - t2008;
t1998 = t1890 * t2119;
t1931 = t1805 * t1899 + t1889 * t1998;
t1935 = t1798 * t1899 + t1998;
t1958 = t1982 * t1744;
t1974 = t1744 * t2061;
t1664 = (t1974 * t2248 + t2240) * t1867 + ((t1817 * t1731 - t1935 * t1821) * t2197 + t1958 * t2101) * t1898 + (t1817 * t1720 - t1931 * t1821 + t1974) * pkin(6);
t2032 = t1664 * t2146;
t2007 = t1902 * t2118;
t1721 = t1893 * t1806 - t1892 * t2007;
t1801 = 0.2e1 * t1842 + pkin(1);
t1732 = t1893 * t1801 - t2007;
t1996 = t1893 * t2118;
t1930 = t1806 * t1902 + t1892 * t1996;
t1934 = t1801 * t1902 + t1996;
t1957 = t1981 * t1745;
t1973 = t1745 * t2060;
t1665 = (t1973 * t2248 + t2241) * t1870 + ((t1818 * t1732 - t1934 * t1822) * t2196 + t1957 * t2100) * t1901 + (t1818 * t1721 - t1930 * t1822 + t1973) * pkin(6);
t2031 = t1665 * t2145;
t2006 = t1905 * t2117;
t1722 = t1896 * t1807 - t1895 * t2006;
t1804 = 0.2e1 * t1843 + pkin(1);
t1733 = t1896 * t1804 - t2006;
t1994 = t1896 * t2117;
t1929 = t1807 * t1905 + t1895 * t1994;
t1933 = t1804 * t1905 + t1994;
t1956 = t1980 * t1746;
t1972 = t1746 * t2059;
t1666 = (t1972 * t2248 + t2242) * t1873 + ((t1819 * t1733 - t1933 * t1823) * t2195 + t1956 * t2099) * t1904 + (t1819 * t1722 - t1929 * t1823 + t1972) * pkin(6);
t2030 = t1666 * t2144;
t1977 = t1741 * t2061;
t1667 = (t1977 * t2247 + t1958) * t1867 + ((t1731 * t1821 + t1935 * t1817) * t2197 - t2101 * t2240) * t1898 + (t1720 * t1821 + t1817 * t1931 - t1977) * pkin(6);
t2029 = t1667 * t2146;
t1976 = t1742 * t2060;
t1668 = (t1976 * t2247 + t1957) * t1870 + ((t1732 * t1822 + t1934 * t1818) * t2196 - t2100 * t2241) * t1901 + (t1721 * t1822 + t1818 * t1930 - t1976) * pkin(6);
t2028 = t1668 * t2145;
t1975 = t1743 * t2059;
t1669 = (t1975 * t2247 + t1956) * t1873 + ((t1733 * t1823 + t1933 * t1819) * t2195 - t2099 * t2242) * t1904 + (t1722 * t1823 + t1819 * t1929 - t1975) * pkin(6);
t2027 = t1669 * t2144;
t2026 = t1686 * t2147;
t1687 = (pkin(6) * t2005 + t1766 * t1858 + pkin(5) + (-t1861 + 0.1e1) * t2189) * t1883 - t2246 * t2097 + (t1992 * t2112 + t2097 * t2190) * t1881;
t2025 = t1687 * t2147;
t2024 = t1688 * t2143;
t2023 = t1689 * t2142;
t2022 = t1690 * t2141;
t1691 = (pkin(6) * t2004 + t1767 * t1858 + pkin(5) + (-t1867 + 0.1e1) * t2186) * t1897 - t2245 * t2088 + (t1991 * t2112 + t2088 * t2190) * t1889;
t2021 = t1691 * t2143;
t1692 = (pkin(6) * t2003 + t1768 * t1858 + pkin(5) + (-t1870 + 0.1e1) * t2184) * t1900 - t2244 * t2085 + (t1990 * t2112 + t2085 * t2190) * t1892;
t2020 = t1692 * t2142;
t1693 = (pkin(6) * t2002 + t1769 * t1858 + pkin(5) + (-t1873 + 0.1e1) * t2182) * t1903 - t2243 * t2082 + (t1989 * t2112 + t2082 * t2190) * t1895;
t2019 = t1693 * t2141;
t1908 = pkin(1) * mrSges(3,1);
t1988 = -t1881 * Ifges(3,5) + t1908;
t1987 = -t1889 * Ifges(3,5) + t1908;
t1986 = -t1892 * Ifges(3,5) + t1908;
t1985 = -t1895 * Ifges(3,5) + t1908;
t1910 = xP(4);
t1856 = sin(t1910);
t1857 = cos(t1910);
t1911 = mrSges(4,2);
t1912 = mrSges(4,1);
t1984 = -t1856 * t1911 + t1857 * t1912;
t1971 = t2103 * t2148;
t1970 = t2103 * t2146;
t1969 = t2103 * t2145;
t1968 = t2103 * t2144;
t1963 = Ifges(3,3) * t1971;
t1962 = Ifges(3,3) * t1970;
t1961 = Ifges(3,3) * t1969;
t1960 = Ifges(3,3) * t1968;
t1907 = pkin(1) * mrSges(3,2);
t1694 = ((-mrSges(3,1) * t2194 - t1881 * Ifges(3,6) + t1907) * t1880 + (-mrSges(3,2) * t2194 - t1988) * t1883 - Ifges(3,3) * t1884) * t1874 - t1875 * ((mrSges(3,1) * t2206 - Ifges(3,5)) * t1880 + t1883 * (mrSges(3,2) * t2206 - Ifges(3,6)));
t1955 = t1694 * t1971;
t1695 = ((-mrSges(3,1) * t2193 - t1889 * Ifges(3,6) + t1907) * t1888 + (-mrSges(3,2) * t2193 - t1987) * t1897 - Ifges(3,3) * t1898) * t1874 - t1875 * ((mrSges(3,1) * t2205 - Ifges(3,5)) * t1888 + t1897 * (mrSges(3,2) * t2205 - Ifges(3,6)));
t1954 = t1695 * t1970;
t1696 = ((-mrSges(3,1) * t2192 - t1892 * Ifges(3,6) + t1907) * t1891 + (-mrSges(3,2) * t2192 - t1986) * t1900 - Ifges(3,3) * t1901) * t1874 - t1875 * ((mrSges(3,1) * t2204 - Ifges(3,5)) * t1891 + t1900 * (mrSges(3,2) * t2204 - Ifges(3,6)));
t1953 = t1696 * t1969;
t1697 = ((-mrSges(3,1) * t2191 - t1895 * Ifges(3,6) + t1907) * t1894 + (-mrSges(3,2) * t2191 - t1985) * t1903 - Ifges(3,3) * t1904) * t1874 - t1875 * ((mrSges(3,1) * t2203 - Ifges(3,5)) * t1894 + t1903 * (mrSges(3,2) * t2203 - Ifges(3,6)));
t1952 = t1697 * t1968;
t1951 = t1770 * t1971;
t1950 = t1771 * t1970;
t1949 = t1772 * t1969;
t1948 = t1773 * t1968;
t1947 = Ifges(2,3) - Ifges(2,1) - t1886 + t2226;
t1946 = -t1856 * t1912 - t1857 * t1911;
t1945 = t1909 * pkin(1) ^ 2 + Ifges(1,3) + t2210 - t2226;
t1920 = koppelP(1,1);
t1919 = koppelP(2,1);
t1918 = koppelP(3,1);
t1917 = koppelP(4,1);
t1916 = koppelP(1,2);
t1915 = koppelP(2,2);
t1914 = koppelP(3,2);
t1913 = koppelP(4,2);
t1906 = pkin(5) * mrSges(3,2);
t1862 = -0.2e1 * t1906;
t1757 = -t1856 * t1916 + t1857 * t1920;
t1756 = -t1856 * t1915 + t1857 * t1919;
t1755 = -t1856 * t1914 + t1857 * t1918;
t1754 = -t1856 * t1913 + t1857 * t1917;
t1753 = -t1856 * t1920 - t1857 * t1916;
t1752 = -t1856 * t1919 - t1857 * t1915;
t1751 = -t1856 * t1918 - t1857 * t1914;
t1750 = -t1856 * t1917 - t1857 * t1913;
t1682 = t1743 * t1843 + t1746 * t2125 + (t1743 * t2078 - t2011) * pkin(2);
t1681 = t1742 * t1842 + t1745 * t2126 + (t1742 * t2079 - t2012) * pkin(2);
t1680 = t1741 * t1841 + t1744 * t2127 + (t1741 * t2080 - t2013) * pkin(2);
t1679 = -t1746 * t1843 + t1743 * t2125 + (-t1746 * t2078 - t2014) * pkin(2);
t1678 = -t1745 * t1842 + t1742 * t2126 + (-t1745 * t2079 - t2015) * pkin(2);
t1677 = -t1744 * t1841 + t1741 * t2127 + (-t1744 * t2080 - t2016) * pkin(2);
t1675 = t1739 * t1826 + t1740 * t2128 + (t1739 * t2095 - t2017) * pkin(2);
t1674 = -t1740 * t1826 + t1739 * t2128 + (-t1740 * t2095 - t2018) * pkin(2);
t1673 = ((-0.2e1 * t2043 + t2230) * t1873 - 0.2e1 * (-Ifges(3,5) * t1903 + t2165) * t2081 + 0.2e1 * t2090 + (t1862 + 0.4e1 * t2169) * t1903 - 0.2e1 * t2072 + t1947) * t1858 + t2253 * t2071 + (t1777 - t2230) * t1873 + 0.2e1 * (-pkin(1) * t1784 + t2165 * t1895 + t1985 * t1903) * t1904 - t2090 + 0.2e1 * (t1906 - t2169) * t1903 + t1895 * t2076 + 0.2e1 * t2072 + t1945;
t1672 = ((-0.2e1 * t2044 + t2229) * t1870 - 0.2e1 * (-Ifges(3,5) * t1900 + t2166) * t2084 + 0.2e1 * t2091 + (t1862 + 0.4e1 * t2170) * t1900 - 0.2e1 * t2073 + t1947) * t1858 + t2254 * t2071 + (t1776 - t2229) * t1870 + 0.2e1 * (-pkin(1) * t1783 + t2166 * t1892 + t1986 * t1900) * t1901 - t2091 + 0.2e1 * (t1906 - t2170) * t1900 + t1892 * t2076 + 0.2e1 * t2073 + t1945;
t1671 = ((-0.2e1 * t2045 + t2228) * t1867 - 0.2e1 * (-Ifges(3,5) * t1897 + t2167) * t2087 + 0.2e1 * t2092 + (t1862 + 0.4e1 * t2171) * t1897 - 0.2e1 * t2074 + t1947) * t1858 + t2255 * t2071 + (t1775 - t2228) * t1867 + 0.2e1 * (-pkin(1) * t1782 + t2167 * t1889 + t1987 * t1897) * t1898 - t2092 + 0.2e1 * (t1906 - t2171) * t1897 + t1889 * t2076 + 0.2e1 * t2074 + t1945;
t1670 = ((-0.2e1 * t2046 + t2227) * t1861 - 0.2e1 * (-Ifges(3,5) * t1883 + t2168) * t2096 + 0.2e1 * t2093 + (t1862 + 0.4e1 * t2172) * t1883 - 0.2e1 * t2075 + t1947) * t1858 + t2256 * t2071 + (t1774 - t2227) * t1861 + 0.2e1 * (-pkin(1) * t1779 + t2168 * t1881 + t1988 * t1883) * t1884 - t2093 + 0.2e1 * (t1906 - t2172) * t1883 + t1881 * t2076 + 0.2e1 * t2075 + t1945;
t1661 = (t1679 * t1757 + t1682 * t1753) * t1710;
t1660 = (t1678 * t1756 + t1681 * t1752) * t1709;
t1659 = (t1677 * t1755 + t1680 * t1751) * t1708;
t1652 = (t1674 * t1754 + t1675 * t1750) * t1706;
t1649 = t1697 * t2137 + (Ifges(3,3) * t2149 + t1693 * t1773) * t2141;
t1648 = t1696 * t2138 + (Ifges(3,3) * t2150 + t1692 * t1772) * t2142;
t1647 = t1695 * t2139 + (Ifges(3,3) * t2151 + t1691 * t1771) * t2143;
t1646 = t1694 * t2140 + (Ifges(3,3) * t2152 + t1687 * t1770) * t2147;
t1645 = t1685 * t2137 + (t1693 * t1749 + t1773 * t2149) * t2141;
t1644 = t1684 * t2138 + (t1692 * t1748 + t1772 * t2150) * t2142;
t1643 = t1683 * t2139 + (t1691 * t1747 + t1771 * t2151) * t2143;
t1642 = t1676 * t2140 + (t1687 * t1738 + t1770 * t2152) * t2147;
t1641 = (t1666 * t1753 - t1669 * t1757) * t1968;
t1640 = (t1665 * t1752 - t1668 * t1756) * t1969;
t1639 = (t1664 * t1751 - t1667 * t1755) * t1970;
t1638 = (t1662 * t1750 - t1663 * t1754) * t1971;
t1637 = (t1655 * t1757 + t1658 * t1753) * t1872 * t1710;
t1636 = (t1654 * t1756 + t1657 * t1752) * t1869 * t1709;
t1635 = (t1653 * t1755 + t1656 * t1751) * t1866 * t1708;
t1634 = t1673 * t2137 + (t1685 * t1693 + t1697 * t2149) * t2141;
t1633 = t1672 * t2138 + (t1684 * t1692 + t1696 * t2150) * t2142;
t1632 = t1671 * t2139 + (t1683 * t1691 + t1695 * t2151) * t2143;
t1631 = (t1650 * t1754 + t1651 * t1750) * t1860 * t1706;
t1630 = t1670 * t2140 + (t1676 * t1687 + t1694 * t2152) * t2147;
t1629 = t1666 * t1960 - (t1658 * t2121 + t1682 * t1697) * t1710;
t1628 = t1665 * t1961 - (t1657 * t2122 + t1681 * t1696) * t1709;
t1627 = t1664 * t1962 - (t1656 * t2123 + t1680 * t1695) * t1708;
t1626 = -t1669 * t1960 - (t1655 * t2121 + t1679 * t1697) * t1710;
t1625 = -t1668 * t1961 - (t1654 * t2122 + t1678 * t1696) * t1709;
t1624 = -t1667 * t1962 - (t1653 * t2123 + t1677 * t1695) * t1708;
t1623 = t1662 * t1963 - (t1651 * t2124 + t1675 * t1694) * t1706;
t1622 = -t1663 * t1963 - (t1650 * t2124 + t1674 * t1694) * t1706;
t1621 = t1666 * t1948 - (t1658 * t2129 + t1682 * t1685) * t1710;
t1620 = t1665 * t1949 - (t1657 * t2130 + t1681 * t1684) * t1709;
t1619 = t1664 * t1950 - (t1656 * t2131 + t1680 * t1683) * t1708;
t1618 = -t1669 * t1948 - (t1655 * t2129 + t1679 * t1685) * t1710;
t1617 = -t1668 * t1949 - (t1654 * t2130 + t1678 * t1684) * t1709;
t1616 = -t1667 * t1950 - (t1653 * t2131 + t1677 * t1683) * t1708;
t1615 = t1662 * t1951 - (t1651 * t2132 + t1675 * t1676) * t1706;
t1614 = -t1663 * t1951 - (t1650 * t2132 + t1674 * t1676) * t1706;
t1613 = t1666 * t1952 - (t1658 * t2153 + t1673 * t1682) * t1710;
t1612 = t1665 * t1953 - (t1657 * t2154 + t1672 * t1681) * t1709;
t1611 = t1664 * t1954 - (t1656 * t2155 + t1671 * t1680) * t1708;
t1610 = -t1669 * t1952 - (t1655 * t2153 + t1673 * t1679) * t1710;
t1609 = -t1668 * t1953 - (t1654 * t2154 + t1672 * t1678) * t1709;
t1608 = -t1667 * t1954 - (t1653 * t2155 + t1671 * t1677) * t1708;
t1607 = t1662 * t1955 - (t1651 * t2156 + t1670 * t1675) * t1706;
t1606 = -t1663 * t1955 - (t1650 * t2156 + t1670 * t1674) * t1706;
t1605 = t1641 * Ifges(3,3) - t1637 * t1773 - t1661 * t1697;
t1604 = t1640 * Ifges(3,3) - t1636 * t1772 - t1660 * t1696;
t1603 = t1639 * Ifges(3,3) - t1635 * t1771 - t1659 * t1695;
t1602 = -t1637 * t1749 + t1641 * t1773 - t1661 * t1685;
t1601 = -t1636 * t1748 + t1640 * t1772 - t1660 * t1684;
t1600 = -t1635 * t1747 + t1639 * t1771 - t1659 * t1683;
t1599 = t1638 * Ifges(3,3) - t1631 * t1770 - t1652 * t1694;
t1598 = -t1631 * t1738 + t1638 * t1770 - t1652 * t1676;
t1597 = -t1637 * t1685 + t1641 * t1697 - t1661 * t1673;
t1596 = -t1636 * t1684 + t1640 * t1696 - t1660 * t1672;
t1595 = -t1635 * t1683 + t1639 * t1695 - t1659 * t1671;
t1594 = -t1631 * t1676 + t1638 * t1694 - t1652 * t1670;
t1 = [m(4) - (t1613 * t1682 + t1621 * t2157) * t1710 - (t1612 * t1681 + t1620 * t2158) * t1709 - (t1611 * t1680 + t1619 * t2159) * t1708 - (t1607 * t1675 + t1615 * t2163) * t1706 + (t1623 * t2034 + t1627 * t2032 + t1628 * t2031 + t1629 * t2030) * t2103, -(t1613 * t1679 + t1621 * t2160) * t1710 - (t1612 * t1678 + t1620 * t2161) * t1709 - (t1611 * t1677 + t1619 * t2162) * t1708 - (t1607 * t1674 + t1615 * t2164) * t1706 + (-t1623 * t2033 - t1627 * t2029 - t1628 * t2028 - t1629 * t2027) * t2103, t1615 * t2025 + t1619 * t2021 + t1620 * t2020 + t1621 * t2019 + t1607 * t2140 + t1611 * t2139 + t1612 * t2138 + t1613 * t2137 + (t1623 * t2026 + t1627 * t2024 + t1628 * t2023 + t1629 * t2022) * t1924, -t1607 * t1652 - t1611 * t1659 - t1612 * t1660 - t1613 * t1661 - t1615 * t1631 - t1619 * t1635 - t1620 * t1636 - t1621 * t1637 + t1623 * t1638 + t1627 * t1639 + t1628 * t1640 + t1629 * t1641 + t1946; -(t1610 * t1682 + t1618 * t2157) * t1710 - (t1609 * t1681 + t1617 * t2158) * t1709 - (t1608 * t1680 + t1616 * t2159) * t1708 - (t1606 * t1675 + t1614 * t2163) * t1706 + (t1622 * t2034 + t1624 * t2032 + t1625 * t2031 + t1626 * t2030) * t2103, m(4) - (t1610 * t1679 + t1618 * t2160) * t1710 - (t1609 * t1678 + t1617 * t2161) * t1709 - (t1608 * t1677 + t1616 * t2162) * t1708 - (t1606 * t1674 + t1614 * t2164) * t1706 + (-t1622 * t2033 - t1624 * t2029 - t1625 * t2028 - t1626 * t2027) * t2103, t1614 * t2025 + t1616 * t2021 + t1617 * t2020 + t1618 * t2019 + t1606 * t2140 + t1608 * t2139 + t1609 * t2138 + t1610 * t2137 + (t1622 * t2026 + t1624 * t2024 + t1625 * t2023 + t1626 * t2022) * t1924, -t1606 * t1652 - t1608 * t1659 - t1609 * t1660 - t1610 * t1661 - t1614 * t1631 - t1616 * t1635 - t1617 * t1636 - t1618 * t1637 + t1622 * t1638 + t1624 * t1639 + t1625 * t1640 + t1626 * t1641 + t1984; -(t1634 * t1682 + t1645 * t2157) * t1710 - (t1633 * t1681 + t1644 * t2158) * t1709 - (t1632 * t1680 + t1643 * t2159) * t1708 - (t1630 * t1675 + t1642 * t2163) * t1706 + (t1646 * t2034 + t1647 * t2032 + t1648 * t2031 + t1649 * t2030) * t2103, -(t1634 * t1679 + t1645 * t2160) * t1710 - (t1633 * t1678 + t1644 * t2161) * t1709 - (t1632 * t1677 + t1643 * t2162) * t1708 - (t1630 * t1674 + t1642 * t2164) * t1706 + (-t1646 * t2033 - t1647 * t2029 - t1648 * t2028 - t1649 * t2027) * t2103, t1642 * t2025 + t1643 * t2021 + t1644 * t2020 + t1645 * t2019 + t1630 * t2140 + t1632 * t2139 + t1633 * t2138 + t1634 * t2137 + m(4) + (t1646 * t2026 + t1647 * t2024 + t1648 * t2023 + t1649 * t2022) * t1924, -t1630 * t1652 - t1642 * t1631 - t1632 * t1659 - t1633 * t1660 - t1634 * t1661 - t1643 * t1635 - t1644 * t1636 - t1645 * t1637 + t1646 * t1638 + t1647 * t1639 + t1648 * t1640 + t1649 * t1641; -(t1597 * t1682 + t1602 * t2157) * t1710 - (t1596 * t1681 + t1601 * t2158) * t1709 - (t1595 * t1680 + t1600 * t2159) * t1708 - (t1594 * t1675 + t1598 * t2163) * t1706 + (t1599 * t2034 + t1603 * t2032 + t1604 * t2031 + t1605 * t2030) * t2103 + t1946, -(t1597 * t1679 + t1602 * t2160) * t1710 - (t1596 * t1678 + t1601 * t2161) * t1709 - (t1595 * t1677 + t1600 * t2162) * t1708 - (t1594 * t1674 + t1598 * t2164) * t1706 + (-t1599 * t2033 - t1603 * t2029 - t1604 * t2028 - t1605 * t2027) * t2103 + t1984, t1598 * t2025 + t1600 * t2021 + t1601 * t2020 + t1602 * t2019 + t1594 * t2140 + t1595 * t2139 + t1596 * t2138 + t1597 * t2137 + (t1599 * t2026 + t1603 * t2024 + t1604 * t2023 + t1605 * t2022) * t1924, -t1594 * t1652 - t1595 * t1659 - t1596 * t1660 - t1597 * t1661 - t1598 * t1631 + t1599 * t1638 - t1600 * t1635 - t1601 * t1636 - t1602 * t1637 + t1603 * t1639 + t1604 * t1640 + t1605 * t1641 + Ifges(4,3);];
MX  = t1;
