% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P4RRRRR10V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [4x21]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 17:14
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin: xDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 14:59:09
% EndTime: 2020-08-07 15:39:44
% DurationCPUTime: 2574.95s
% Computational Cost: add. (31781959->3932), mult. (60986512->6176), div. (388588->58), fcn. (44969040->36), ass. (0->2316)
t7747 = -4 * pkin(2);
t6203 = cos(qJ(2,1));
t6110 = t6203 * pkin(2);
t6194 = sin(qJ(2,1));
t6208 = pkin(8) + pkin(7);
t7373 = t6208 * t6194;
t5905 = t7373 + t6110;
t6193 = sin(qJ(3,1));
t6098 = t6193 * pkin(3);
t7812 = t6110 + pkin(1);
t5774 = -pkin(6) * t5905 + t7812 * t6098;
t6168 = cos(pkin(4));
t7694 = pkin(1) * t6168;
t6043 = t6208 * t6203;
t7683 = pkin(2) * t6194;
t7786 = -t6043 + t7683;
t5837 = t7786 * t7694;
t6167 = sin(pkin(4));
t6202 = cos(qJ(3,1));
t5886 = pkin(1) + t5905;
t7684 = pkin(2) * t6193;
t5829 = t5886 * t7684;
t7457 = t6167 * t6203;
t7153 = pkin(6) * t7457;
t7438 = t6168 * t6194;
t7208 = pkin(1) * t7438;
t5847 = t7153 + t7208;
t6159 = t6202 ^ 2;
t7654 = t6159 * pkin(3);
t7277 = t6167 * t5829 - t5847 * t7654;
t5609 = 0.1e1 / ((-t5774 * t6167 + t5837) * t6202 - t7277);
t6200 = cos(qJ(2,2));
t6106 = t6200 * pkin(2);
t6191 = sin(qJ(2,2));
t7374 = t6208 * t6191;
t5904 = t7374 + t6106;
t6190 = sin(qJ(3,2));
t6097 = t6190 * pkin(3);
t7813 = t6106 + pkin(1);
t5773 = -pkin(6) * t5904 + t7813 * t6097;
t6042 = t6208 * t6200;
t7685 = pkin(2) * t6191;
t7787 = -t6042 + t7685;
t5836 = t7787 * t7694;
t6199 = cos(qJ(3,2));
t5885 = pkin(1) + t5904;
t7686 = pkin(2) * t6190;
t5828 = t5885 * t7686;
t7459 = t6167 * t6200;
t7154 = pkin(6) * t7459;
t7440 = t6168 * t6191;
t7209 = pkin(1) * t7440;
t5849 = t7154 + t7209;
t6155 = t6199 ^ 2;
t7655 = t6155 * pkin(3);
t7278 = t6167 * t5828 - t5849 * t7655;
t5611 = 0.1e1 / ((-t5773 * t6167 + t5836) * t6199 - t7278);
t6197 = cos(qJ(2,3));
t6102 = t6197 * pkin(2);
t6188 = sin(qJ(2,3));
t7375 = t6208 * t6188;
t5903 = t7375 + t6102;
t6187 = sin(qJ(3,3));
t6096 = t6187 * pkin(3);
t7814 = t6102 + pkin(1);
t5772 = -pkin(6) * t5903 + t7814 * t6096;
t6041 = t6208 * t6197;
t7687 = pkin(2) * t6188;
t7788 = -t6041 + t7687;
t5835 = t7788 * t7694;
t6196 = cos(qJ(3,3));
t5884 = pkin(1) + t5903;
t7688 = pkin(2) * t6187;
t5827 = t5884 * t7688;
t7461 = t6167 * t6197;
t7155 = pkin(6) * t7461;
t7442 = t6168 * t6188;
t7210 = pkin(1) * t7442;
t5848 = t7155 + t7210;
t6151 = t6196 ^ 2;
t7656 = t6151 * pkin(3);
t7279 = t6167 * t5827 - t5848 * t7656;
t5610 = 0.1e1 / ((-t5772 * t6167 + t5835) * t6196 - t7279);
t6185 = cos(qJ(2,4));
t6089 = t6185 * pkin(2);
t6182 = sin(qJ(2,4));
t7376 = t6208 * t6182;
t5899 = t7376 + t6089;
t6181 = sin(qJ(3,4));
t6085 = t6181 * pkin(3);
t7815 = t6089 + pkin(1);
t5770 = -pkin(6) * t5899 + t7815 * t6085;
t6005 = t6208 * t6185;
t7689 = pkin(2) * t6182;
t7792 = t6005 - t7689;
t5830 = t7792 * t7694;
t6184 = cos(qJ(3,4));
t5883 = pkin(1) + t5899;
t7690 = pkin(2) * t6181;
t5820 = t5883 * t7690;
t7469 = t6167 * t6185;
t7144 = pkin(6) * t7469;
t7446 = t6168 * t6182;
t7212 = pkin(1) * t7446;
t5834 = t7144 + t7212;
t6142 = t6184 ^ 2;
t7657 = t6142 * pkin(3);
t7280 = t6167 * t5820 - t5834 * t7657;
t5603 = 0.1e1 / ((t5770 * t6167 + t5830) * t6184 + t7280);
t7430 = t6168 * t6208;
t5974 = pkin(1) * t7430;
t7130 = pkin(2) * (t6098 - pkin(6));
t5809 = -t6167 * t7130 - t5974;
t7691 = pkin(2) * t6168;
t7252 = pkin(1) * t7691;
t7456 = t6167 * t6208;
t5875 = pkin(6) * t7456 + t7252;
t7464 = t6167 * t6193;
t7172 = pkin(3) * t7464;
t7848 = pkin(1) * t7172 - t5875 * t6194;
t7829 = t6202 * (t5809 * t6203 - t7848) - t7277;
t7896 = 0.1e1 / t7829;
t7131 = pkin(2) * (t6097 - pkin(6));
t5808 = -t6167 * t7131 - t5974;
t7466 = t6167 * t6190;
t7173 = pkin(3) * t7466;
t7849 = pkin(1) * t7173 - t5875 * t6191;
t7830 = t6199 * (t5808 * t6200 - t7849) - t7278;
t7895 = 0.1e1 / t7830;
t7132 = pkin(2) * (t6096 - pkin(6));
t5807 = -t6167 * t7132 - t5974;
t7468 = t6167 * t6187;
t7174 = pkin(3) * t7468;
t7850 = pkin(1) * t7174 - t5875 * t6188;
t7831 = t6196 * (t5807 * t6197 - t7850) - t7279;
t7894 = 0.1e1 / t7831;
t7133 = pkin(2) * (t6085 - pkin(6));
t5806 = -t6167 * t7133 - t5974;
t7471 = t6167 * t6181;
t7175 = pkin(3) * t7471;
t7851 = pkin(1) * t7175 - t5875 * t6182;
t7832 = t6184 * (t5806 * t6185 - t7851) - t7280;
t7893 = 0.1e1 / t7832;
t6363 = t7792 * t6167;
t7447 = t6168 * t6181;
t7892 = -pkin(3) * t7447 + t6363;
t6139 = t6168 ^ 2;
t7705 = t6139 - 0.1e1;
t6237 = 0.1e1 / pkin(3);
t6207 = xDP(1);
t6210 = xP(4);
t6131 = sin(t6210);
t6132 = cos(t6210);
t6219 = koppelP(4,2);
t6223 = koppelP(4,1);
t6444 = t6131 * t6223 + t6132 * t6219;
t7708 = xDP(4);
t5786 = t6444 * t7708 - t6207;
t6206 = xDP(2);
t6443 = t6131 * t6219 - t6132 * t6223;
t5787 = -t6443 * t7708 + t6206;
t6183 = sin(qJ(1,4));
t6186 = cos(qJ(1,4));
t5678 = t5786 * t6186 - t5787 * t6183;
t5679 = t5786 * t6183 + t5787 * t6186;
t6177 = legFrame(4,3);
t6075 = sin(t6177);
t6079 = cos(t6177);
t5558 = -t5678 * t6079 + t6075 * t5679;
t6209 = 0.2e1 * t6208;
t7412 = t6182 * t6209;
t5963 = pkin(1) + t7412;
t6091 = pkin(1) * t6182;
t6000 = t6091 + pkin(7);
t5975 = pkin(8) + t6000;
t5995 = t6085 + pkin(6);
t6087 = t6184 * pkin(3);
t5996 = t6087 + pkin(2);
t6144 = t6185 ^ 2;
t6464 = t5678 * t6075 + t5679 * t6079;
t6346 = t6464 * t5996;
t6205 = xDP(3);
t7488 = (t6168 + 0.1e1) * (t6168 - 0.1e1);
t6976 = t6208 * t7488;
t6600 = -0.2e1 * t6205 * t6976;
t6813 = t7705 * t6205;
t7431 = t6168 * t6205;
t6931 = t6167 * t7431;
t6145 = pkin(2) + t6208;
t6146 = pkin(2) - t6208;
t7523 = (t6087 + t6145) * (t6087 + t6146);
t6996 = t6182 * t7523;
t7230 = 0.2e1 * t7430;
t7413 = t6182 * t6205;
t7472 = t6167 * t6168;
t7478 = t6139 * t6208;
t6130 = pkin(1) * t6208;
t7483 = t6130 * t6205;
t7512 = t5996 * t6205;
t7871 = t5995 * t6464;
t5380 = ((-t5558 * t7523 + t6346 * t7230) * t6167 + t5996 * t6600) * t6144 + (t7483 + (-t6464 * t7472 + t6813) * t6996 + (-t5558 * t5963 * t6167 + (-t6139 * t6464 + t6464 - t6931) * t5995) * t5996) * t6185 - ((t5995 * t7413 + t6346) * t6168 + t5558 * t5975) * t7456 - (t6182 * t7871 - t7512) * t7478 - t5975 * t7512 + t7376 * t7871;
t7679 = pkin(6) * t6184;
t5928 = -t7679 + t7690;
t7415 = t6182 * t6184;
t6935 = t6168 * t7415;
t7514 = t5996 * t6167;
t6270 = (t5928 * t7514 + t6184 * t5974) * t6185 - pkin(1) * t5996 * t6935;
t7513 = t5996 * t6181;
t7217 = pkin(1) * t7513;
t5630 = (t5928 * t7376 + t7217) * t6167 + t6270;
t7612 = t5380 / t5630;
t7085 = t6237 * t7612;
t5340 = pkin(6) * t7085;
t5815 = t6075 * t6186 + t6079 * t6183;
t5816 = -t6075 * t6183 + t6079 * t6186;
t5701 = pkin(2) * t5816 + t5815 * t7430;
t5703 = t5815 * t7691 - t5816 * t6208;
t7417 = t6182 * t5703;
t6460 = t5701 * t6185 - t7417;
t7419 = t6181 * t6185;
t6950 = t6167 * t7419;
t6642 = t6182 * t6950;
t6592 = pkin(3) * t6642;
t6967 = t5703 * t7471;
t7653 = t6181 * pkin(6);
t5994 = pkin(3) + t7653;
t6992 = t5994 * t7488;
t7006 = t5816 * t7471;
t7444 = t6168 * t6185;
t6031 = t6139 - 0.1e1 / 0.2e1;
t7496 = t6031 * t6182;
t6217 = pkin(6) / 0.2e1;
t5984 = t6085 + t6217;
t7730 = -0.2e1 * t5984;
t7807 = t6167 * (t6085 * t6144 + t7730);
t5502 = t5786 * ((-0.2e1 * t5815 * t7496 + t5816 * t7444) * t7657 + (-t5816 * t6592 + (pkin(1) * t5816 - t5815 * t7807 + t6460) * t6168) * t6184 - t6144 * t6967 - t5701 * t6642 + (-pkin(1) * t7006 + t5815 * t6992) * t6182 + t6967) * t7893;
t7445 = t6168 * t6184;
t5766 = (t5996 * t6182 - t6005) * pkin(1) * t7445;
t5876 = -pkin(1) * t6085 + pkin(6) * t7376;
t5962 = t7376 + pkin(1);
t6410 = -t5876 * t6184 + t5962 * t7690;
t6980 = t6144 * t7488;
t6915 = t6205 * ((-t6184 * t6005 + t6182 * (pkin(2) * t6184 - t5994 + 0.2e1 * t7657)) * t7472 - t6980 * t7513 + (-t6182 * t6976 + pkin(1)) * t7419 + ((0.2e1 * t6085 + pkin(6)) * t6139 - t5995) * t6184 + t6139 * t7690) / ((-t5928 * t5996 * t6185 - t6410) * t6167 + t5766);
t5702 = -pkin(2) * t5815 + t5816 * t7430;
t5704 = t5815 * t6208 + t5816 * t7691;
t7416 = t6182 * t5704;
t6459 = -t5702 * t6185 + t7416;
t6952 = t5704 * t7471;
t7007 = t5815 * t7471;
t7008 = t5787 * ((t5815 * t7444 + 0.2e1 * t5816 * t7496) * t7657 + (-t5815 * t6592 + (pkin(1) * t5815 + t5816 * t7807 + t6459) * t6168) * t6184 + t6144 * t6952 + t5702 * t6642 + (-pkin(1) * t7007 - t5816 * t6992) * t6182 - t6952) * t7893;
t5402 = t5502 - t6915 - t7008;
t7602 = t5402 * t6208;
t7304 = -t7602 + t5340;
t7887 = t6182 * t7304;
t6220 = koppelP(3,2);
t6224 = koppelP(3,1);
t6442 = t6131 * t6224 + t6132 * t6220;
t5782 = t6442 * t7708 - t6207;
t6441 = t6131 * t6220 - t6132 * t6224;
t5784 = -t6441 * t7708 + t6206;
t6189 = sin(qJ(1,3));
t6198 = cos(qJ(1,3));
t5680 = t5782 * t6198 - t5784 * t6189;
t5682 = t5782 * t6189 + t5784 * t6198;
t6178 = legFrame(3,3);
t6076 = sin(t6178);
t6080 = cos(t6178);
t5559 = -t5680 * t6080 + t6076 * t5682;
t7401 = t6188 * t6209;
t5970 = pkin(1) + t7401;
t6115 = pkin(1) * t6188;
t6025 = t6115 + pkin(7);
t5980 = pkin(8) + t6025;
t6008 = t6096 + pkin(6);
t6100 = t6196 * pkin(3);
t6013 = t6100 + pkin(2);
t6153 = t6197 ^ 2;
t6463 = t5680 * t6076 + t5682 * t6080;
t6345 = t6463 * t6013;
t7522 = (t6100 + t6145) * (t6100 + t6146);
t6995 = t6188 * t7522;
t7402 = t6188 * t6205;
t7503 = t6013 * t6205;
t7510 = t6008 * t6188;
t5384 = ((-t5559 * t7522 + t6345 * t7230) * t6167 + t6013 * t6600) * t6153 + (t7483 + (-t6463 * t7472 + t6813) * t6995 + (-t5559 * t5970 * t6167 + (-t6139 * t6463 + t6463 - t6931) * t6008) * t6013) * t6197 - ((t6008 * t7402 + t6345) * t6168 + t5559 * t5980) * t7456 - (t6463 * t7510 - t7503) * t7478 - t5980 * t7503 + t6463 * t6008 * t7375;
t7678 = pkin(6) * t6196;
t5930 = -t7678 + t7688;
t7404 = t6188 * t6196;
t6934 = t6168 * t7404;
t7505 = t6013 * t6167;
t6269 = (t5930 * t7505 + t6196 * t5974) * t6197 - pkin(1) * t6013 * t6934;
t7504 = t6013 * t6187;
t7216 = pkin(1) * t7504;
t5643 = (t5930 * t7375 + t7216) * t6167 + t6269;
t7611 = t5384 / t5643;
t5374 = t6237 * t7611;
t5367 = pkin(6) * t5374;
t5821 = t6076 * t6198 + t6080 * t6189;
t5822 = -t6076 * t6189 + t6080 * t6198;
t5711 = pkin(2) * t5822 + t5821 * t7430;
t5717 = t5821 * t7691 - t5822 * t6208;
t7406 = t6188 * t5717;
t6458 = t5711 * t6197 - t7406;
t7408 = t6187 * t6197;
t6946 = t6167 * t7408;
t6640 = t6188 * t6946;
t6591 = pkin(3) * t6640;
t7652 = t6187 * pkin(6);
t6007 = pkin(3) + t7652;
t6989 = t6007 * t7488;
t7004 = t5822 * t7468;
t7010 = t5717 * t7468;
t7436 = t6168 * t6197;
t7495 = t6031 * t6188;
t5989 = t6096 + t6217;
t7808 = t6167 * (t6096 * t6153 - 0.2e1 * t5989);
t5504 = t5782 * ((-0.2e1 * t5821 * t7495 + t5822 * t7436) * t7656 + (-t5822 * t6591 + (pkin(1) * t5822 - t5821 * t7808 + t6458) * t6168) * t6196 - t6153 * t7010 - t5711 * t6640 + (-pkin(1) * t7004 + t5821 * t6989) * t6188 + t7010) * t7894;
t7437 = t6168 * t6196;
t5767 = (t6013 * t6188 - t6041) * pkin(1) * t7437;
t5880 = -pkin(1) * t6096 + pkin(6) * t7375;
t5967 = t7375 + pkin(1);
t6409 = -t5880 * t6196 + t5967 * t7688;
t6979 = t6153 * t7488;
t7259 = 0.2e1 * t7656;
t7481 = t6139 * t6187;
t6914 = t6205 * ((-t6196 * t6041 + t6188 * (pkin(2) * t6196 - t6007 + t7259)) * t7472 - t6979 * t7504 + (-t6188 * t6976 + pkin(1)) * t7408 + ((0.2e1 * t6096 + pkin(6)) * t6139 - t6008) * t6196 + pkin(2) * t7481) / ((-t5930 * t6013 * t6197 - t6409) * t6167 + t5767);
t5712 = -pkin(2) * t5821 + t5822 * t7430;
t5718 = t5821 * t6208 + t5822 * t7691;
t7405 = t6188 * t5718;
t6457 = -t5712 * t6197 + t7405;
t6948 = t5718 * t7468;
t7005 = t5821 * t7468;
t7014 = ((t5821 * t7436 + 0.2e1 * t5822 * t7495) * t7656 + (-t5821 * t6591 + (pkin(1) * t5821 + t5822 * t7808 + t6457) * t6168) * t6196 + t6153 * t6948 + t5712 * t6640 + (-pkin(1) * t7005 - t5822 * t6989) * t6188 - t6948) * t5784 * t7894;
t5452 = t5504 - t6914 - t7014;
t7589 = t5452 * t6208;
t7298 = -t7589 + t5367;
t7886 = t6188 * t7298;
t6221 = koppelP(2,2);
t6225 = koppelP(2,1);
t6440 = t6131 * t6225 + t6132 * t6221;
t5783 = t6440 * t7708 - t6207;
t6439 = t6131 * t6221 - t6132 * t6225;
t5785 = -t6439 * t7708 + t6206;
t6192 = sin(qJ(1,2));
t6201 = cos(qJ(1,2));
t5681 = t5783 * t6201 - t5785 * t6192;
t5683 = t5783 * t6192 + t5785 * t6201;
t6179 = legFrame(2,3);
t6077 = sin(t6179);
t6081 = cos(t6179);
t5560 = -t5681 * t6081 + t6077 * t5683;
t7391 = t6191 * t6209;
t5971 = pkin(1) + t7391;
t6116 = pkin(1) * t6191;
t6026 = t6116 + pkin(7);
t5981 = pkin(8) + t6026;
t6010 = t6097 + pkin(6);
t6104 = t6199 * pkin(3);
t6016 = t6104 + pkin(2);
t6157 = t6200 ^ 2;
t6462 = t5681 * t6077 + t5683 * t6081;
t6344 = t6462 * t6016;
t7521 = (t6104 + t6145) * (t6104 + t6146);
t6994 = t6191 * t7521;
t7392 = t6191 * t6205;
t7500 = t6016 * t6205;
t7508 = t6010 * t6191;
t5386 = ((-t5560 * t7521 + t6344 * t7230) * t6167 + t6016 * t6600) * t6157 + (t7483 + (-t6462 * t7472 + t6813) * t6994 + (-t5971 * t5560 * t6167 + (-t6139 * t6462 + t6462 - t6931) * t6010) * t6016) * t6200 - ((t6010 * t7392 + t6344) * t6168 + t5981 * t5560) * t7456 - (t6462 * t7508 - t7500) * t7478 - t5981 * t7500 + t6462 * t6010 * t7374;
t7677 = pkin(6) * t6199;
t5931 = -t7677 + t7686;
t7394 = t6191 * t6199;
t6933 = t6168 * t7394;
t7502 = t6016 * t6167;
t6268 = (t5931 * t7502 + t6199 * t5974) * t6200 - pkin(1) * t6016 * t6933;
t7501 = t6016 * t6190;
t7215 = pkin(1) * t7501;
t5644 = (t5931 * t7374 + t7215) * t6167 + t6268;
t7609 = t5386 / t5644;
t5378 = t6237 * t7609;
t5369 = pkin(6) * t5378;
t5823 = t6077 * t6201 + t6081 * t6192;
t5824 = -t6077 * t6192 + t6081 * t6201;
t5713 = pkin(2) * t5824 + t5823 * t7430;
t5719 = t5823 * t7691 - t5824 * t6208;
t7396 = t6191 * t5719;
t6456 = t5713 * t6200 - t7396;
t7398 = t6190 * t6200;
t6941 = t6167 * t7398;
t6638 = t6191 * t6941;
t6590 = pkin(3) * t6638;
t6944 = t5719 * t7466;
t7651 = t6190 * pkin(6);
t6009 = pkin(3) + t7651;
t6987 = t6009 * t7488;
t7002 = t5824 * t7466;
t7434 = t6168 * t6200;
t7494 = t6031 * t6191;
t5991 = t6097 + t6217;
t7809 = t6167 * (t6097 * t6157 - 0.2e1 * t5991);
t5503 = ((-0.2e1 * t5823 * t7494 + t5824 * t7434) * t7655 + (-t5824 * t6590 + (pkin(1) * t5824 - t5823 * t7809 + t6456) * t6168) * t6199 - t6157 * t6944 - t5713 * t6638 + (-pkin(1) * t7002 + t5823 * t6987) * t6191 + t6944) * t5783 * t7895;
t5714 = -pkin(2) * t5823 + t5824 * t7430;
t5720 = t5823 * t6208 + t5824 * t7691;
t7395 = t6191 * t5720;
t6455 = -t5714 * t6200 + t7395;
t6943 = t5720 * t7466;
t7003 = t5823 * t7466;
t7009 = t5785 * ((t5823 * t7434 + 0.2e1 * t5824 * t7494) * t7655 + (-t5823 * t6590 + (pkin(1) * t5823 + t5824 * t7809 + t6455) * t6168) * t6199 + t6157 * t6943 + t5714 * t6638 + (-pkin(1) * t7003 - t5824 * t6987) * t6191 - t6943) * t7895;
t7435 = t6168 * t6199;
t5768 = (t6016 * t6191 - t6042) * pkin(1) * t7435;
t5881 = -pkin(1) * t6097 + pkin(6) * t7374;
t5968 = t7374 + pkin(1);
t6408 = -t5881 * t6199 + t5968 * t7686;
t6978 = t6157 * t7488;
t7258 = 0.2e1 * t7655;
t7480 = t6139 * t6190;
t7012 = ((-t6199 * t6042 + t6191 * (pkin(2) * t6199 - t6009 + t7258)) * t7472 - t6978 * t7501 + (-t6191 * t6976 + pkin(1)) * t7398 + ((0.2e1 * t6097 + pkin(6)) * t6139 - t6010) * t6199 + pkin(2) * t7480) * t6205 / ((-t5931 * t6016 * t6200 - t6408) * t6167 + t5768);
t5451 = t5503 - t7009 - t7012;
t7596 = t5451 * t6208;
t7299 = -t7596 + t5369;
t7885 = t6191 * t7299;
t6222 = koppelP(1,2);
t6226 = koppelP(1,1);
t6438 = t6131 * t6226 + t6132 * t6222;
t5788 = t6438 * t7708 - t6207;
t6437 = t6131 * t6222 - t6132 * t6226;
t5789 = -t6437 * t7708 + t6206;
t6195 = sin(qJ(1,1));
t6204 = cos(qJ(1,1));
t5684 = t5788 * t6204 - t5789 * t6195;
t5685 = t5788 * t6195 + t5789 * t6204;
t6180 = legFrame(1,3);
t6078 = sin(t6180);
t6082 = cos(t6180);
t5561 = -t5684 * t6082 + t6078 * t5685;
t7381 = t6194 * t6209;
t5972 = pkin(1) + t7381;
t6117 = pkin(1) * t6194;
t6027 = t6117 + pkin(7);
t5982 = pkin(8) + t6027;
t6012 = t6098 + pkin(6);
t6108 = t6202 * pkin(3);
t6019 = t6108 + pkin(2);
t6161 = t6203 ^ 2;
t6461 = t5684 * t6078 + t5685 * t6082;
t6343 = t6461 * t6019;
t7520 = (t6108 + t6145) * (t6108 + t6146);
t6993 = t6194 * t7520;
t7382 = t6194 * t6205;
t7497 = t6019 * t6205;
t7506 = t6012 * t6194;
t5385 = ((-t5561 * t7520 + t6343 * t7230) * t6167 + t6019 * t6600) * t6161 + (t7483 + (-t6461 * t7472 + t6813) * t6993 + (-t5561 * t5972 * t6167 + (-t6139 * t6461 + t6461 - t6931) * t6012) * t6019) * t6203 - ((t6012 * t7382 + t6343) * t6168 + t5561 * t5982) * t7456 - (t6461 * t7506 - t7497) * t7478 - t5982 * t7497 + t6461 * t6012 * t7373;
t7676 = pkin(6) * t6202;
t5935 = t7676 - t7684;
t7384 = t6194 * t6202;
t6932 = t6168 * t7384;
t7499 = t6019 * t6167;
t6267 = (-t5935 * t7499 + t6202 * t5974) * t6203 - pkin(1) * t6019 * t6932;
t7498 = t6019 * t6193;
t7214 = pkin(1) * t7498;
t5645 = (-t5935 * t7373 + t7214) * t6167 + t6267;
t7610 = t5385 / t5645;
t5376 = t6237 * t7610;
t5368 = pkin(6) * t5376;
t5825 = t6078 * t6204 + t6082 * t6195;
t5826 = -t6078 * t6195 + t6082 * t6204;
t5715 = pkin(2) * t5826 + t5825 * t7430;
t5721 = t5825 * t7691 - t5826 * t6208;
t7386 = t6194 * t5721;
t6454 = t5715 * t6203 - t7386;
t7388 = t6193 * t6203;
t6938 = t6167 * t7388;
t6636 = t6194 * t6938;
t6589 = pkin(3) * t6636;
t6966 = t5721 * t7464;
t7650 = t6193 * pkin(6);
t6011 = pkin(3) + t7650;
t6985 = t6011 * t7488;
t7000 = t5826 * t7464;
t7432 = t6168 * t6203;
t7493 = t6031 * t6194;
t5993 = t6098 + t6217;
t7810 = t6167 * (t6098 * t6161 - 0.2e1 * t5993);
t5505 = t5788 * ((-0.2e1 * t5825 * t7493 + t5826 * t7432) * t7654 + (-t5826 * t6589 + (pkin(1) * t5826 - t5825 * t7810 + t6454) * t6168) * t6202 - t6161 * t6966 - t5715 * t6636 + (-pkin(1) * t7000 + t5825 * t6985) * t6194 + t6966) * t7896;
t7433 = t6168 * t6202;
t5769 = (t6019 * t6194 - t6043) * pkin(1) * t7433;
t5882 = -pkin(1) * t6098 + pkin(6) * t7373;
t5969 = t7373 + pkin(1);
t6407 = -t5882 * t6202 + t5969 * t7684;
t6977 = t6161 * t7488;
t7257 = 0.2e1 * t7654;
t7479 = t6139 * t6193;
t7011 = ((-t6202 * t6043 + t6194 * (pkin(2) * t6202 - t6011 + t7257)) * t7472 - t6977 * t7498 + (-t6194 * t6976 + pkin(1)) * t7388 + ((0.2e1 * t6098 + pkin(6)) * t6139 - t6012) * t6202 + pkin(2) * t7479) * t6205 / ((t5935 * t6019 * t6203 - t6407) * t6167 + t5769);
t5716 = -pkin(2) * t5825 + t5826 * t7430;
t5722 = t5825 * t6208 + t5826 * t7691;
t7385 = t6194 * t5722;
t6453 = -t5716 * t6203 + t7385;
t6965 = t5722 * t7464;
t7001 = t5825 * t7464;
t7013 = ((t5825 * t7432 + 0.2e1 * t5826 * t7493) * t7654 + (-t5825 * t6589 + (pkin(1) * t5825 + t5826 * t7810 + t6453) * t6168) * t6202 + t6161 * t6965 + t5716 * t6636 + (-pkin(1) * t7001 - t5826 * t6985) * t6194 - t6965) * t5789 * t7896;
t5453 = t5505 - t7011 - t7013;
t7583 = t5453 * t6208;
t7297 = -t7583 + t5368;
t7884 = t6194 * t7297;
t6232 = pkin(8) ^ 2;
t6233 = pkin(7) ^ 2;
t7265 = -t6233 - t6232;
t7709 = pkin(8) * pkin(7);
t7781 = 0.2e1 * t7709 - t7265;
t5341 = pkin(1) * t7085;
t7606 = t5402 * t6181;
t5388 = pkin(3) * t7606;
t5339 = pkin(7) * t7085;
t5337 = pkin(8) * t7085;
t5396 = t5402 * pkin(6);
t7301 = t5396 + t5337;
t6904 = -t5339 - t7301;
t7773 = t6904 - t5388;
t7879 = -t6182 * t7773 + t5341;
t5370 = pkin(1) * t5374;
t7592 = t5452 * t6187;
t5410 = pkin(3) * t7592;
t5365 = pkin(7) * t5374;
t5362 = pkin(8) * t5374;
t5434 = t5452 * pkin(6);
t7293 = t5434 + t5362;
t6902 = -t5365 - t7293;
t7775 = t6902 - t5410;
t7878 = -t6188 * t7775 + t5370;
t5371 = pkin(1) * t5376;
t7586 = t5453 * t6193;
t5411 = pkin(3) * t7586;
t5360 = pkin(7) * t5376;
t5359 = pkin(8) * t5376;
t5440 = t5453 * pkin(6);
t7291 = t5440 + t5359;
t6901 = -t5360 - t7291;
t7776 = t6901 - t5411;
t7877 = -t6194 * t7776 + t5371;
t5372 = pkin(1) * t5378;
t7599 = t5451 * t6190;
t5409 = pkin(3) * t7599;
t5366 = pkin(7) * t5378;
t5363 = pkin(8) * t5378;
t5429 = t5451 * pkin(6);
t7295 = t5429 + t5363;
t6903 = -t5366 - t7295;
t7774 = t6903 - t5409;
t7876 = -t6191 * t7774 + t5372;
t7826 = 0.2e1 * t6185;
t7235 = 0.2e1 * t6197;
t7234 = 0.2e1 * t6200;
t7233 = 0.2e1 * t6203;
t7703 = 0.2e1 * t6142 - 0.1e1;
t5547 = (pkin(2) * t5782 + t5784 * t7430) * t6197 + (t5782 * t6208 - t5784 * t7691) * t6188 + t5784 * t7174;
t5667 = t5782 * t7442 + t5784 * t6197;
t6294 = (-pkin(2) * t5784 + t5782 * t7430) * t6197 - (t5782 * t7691 + t5784 * t6208) * t6188 + t5782 * t7174;
t6367 = -t5782 * t6197 + t5784 * t7442;
t7443 = t6168 * t6187;
t7837 = -pkin(3) * t7443 - t6167 * t7788;
t5487 = -((t5667 * t6189 + t6198 * t6367) * t6080 + (t5667 * t6198 - t6189 * t6367) * t6076 + t6167 * t7402) * t7656 + ((t5547 * t6198 + t6189 * t6294) * t6080 + (-t5547 * t6189 + t6198 * t6294) * t6076 + t7837 * t6205) * t6196 + (t6167 * t6463 - t7431) * t7688;
t7582 = t5487 * t7894;
t7040 = t6188 * t7582;
t6677 = t6167 * t7040;
t7870 = t6008 * t6677;
t5548 = (pkin(2) * t5783 + t5785 * t7430) * t6200 + (t5783 * t6208 - t5785 * t7691) * t6191 + t5785 * t7173;
t5668 = t5783 * t7440 + t5785 * t6200;
t6293 = (-pkin(2) * t5785 + t5783 * t7430) * t6200 - (t5783 * t7691 + t5785 * t6208) * t6191 + t5783 * t7173;
t6366 = -t5783 * t6200 + t5785 * t7440;
t7441 = t6168 * t6190;
t7838 = -pkin(3) * t7441 - t6167 * t7787;
t5488 = -((t5668 * t6192 + t6201 * t6366) * t6081 + (t5668 * t6201 - t6192 * t6366) * t6077 + t6167 * t7392) * t7655 + ((t5548 * t6201 + t6192 * t6293) * t6081 + (-t5548 * t6192 + t6201 * t6293) * t6077 + t7838 * t6205) * t6199 + (t6167 * t6462 - t7431) * t7686;
t7581 = t5488 * t7895;
t7029 = t6191 * t7581;
t6667 = t6167 * t7029;
t7869 = t6010 * t6667;
t5549 = (pkin(2) * t5788 + t5789 * t7430) * t6203 + (t5788 * t6208 - t5789 * t7691) * t6194 + t5789 * t7172;
t5669 = t5788 * t7438 + t5789 * t6203;
t6291 = (-pkin(2) * t5789 + t5788 * t7430) * t6203 - (t5788 * t7691 + t5789 * t6208) * t6194 + t5788 * t7172;
t6364 = -t5788 * t6203 + t5789 * t7438;
t7439 = t6168 * t6193;
t7839 = -pkin(3) * t7439 - t6167 * t7786;
t5489 = -((t5669 * t6195 + t6204 * t6364) * t6082 + (t5669 * t6204 - t6195 * t6364) * t6078 + t6167 * t7382) * t7654 + ((t5549 * t6204 + t6195 * t6291) * t6082 + (-t6195 * t5549 + t6204 * t6291) * t6078 + t7839 * t6205) * t6202 + (t6167 * t6461 - t7431) * t7684;
t7580 = t5489 * t7896;
t7018 = t6194 * t7580;
t6657 = t6167 * t7018;
t7868 = t6012 * t6657;
t5546 = (pkin(2) * t5786 + t5787 * t7430) * t6185 + (t5786 * t6208 - t5787 * t7691) * t6182 + t5787 * t7175;
t5666 = t5786 * t7446 + t5787 * t6185;
t6292 = (-pkin(2) * t5787 + t5786 * t7430) * t6185 - (t5786 * t7691 + t5787 * t6208) * t6182 + t5786 * t7175;
t6365 = -t5786 * t6185 + t5787 * t7446;
t5483 = -((t5666 * t6183 + t6186 * t6365) * t6079 + (t5666 * t6186 - t6183 * t6365) * t6075 + t6167 * t7413) * t7657 + ((t5546 * t6186 + t6183 * t6292) * t6079 + (-t5546 * t6183 + t6186 * t6292) * t6075 + t7892 * t6205) * t6184 + (t6167 * t6464 - t7431) * t7690;
t5466 = t5483 * t7893;
t6512 = t7085 * t5466;
t6069 = t6144 - 0.2e1;
t7492 = t6069 * t6139;
t6784 = -t6144 + t7492;
t6623 = t6784 + 0.1e1;
t7867 = t6623 * t6512;
t6930 = t6181 * t7612;
t5231 = t7602 - t6930;
t5400 = pkin(1) * t5402;
t7056 = t6185 * t5466;
t5456 = t6167 * t7056;
t5462 = t6168 * t5466;
t5771 = t6185 * t7133 - t5876;
t5605 = 0.1e1 / ((t5771 * t6167 + t5830) * t6184 + t7280);
t6092 = pkin(1) * t6144;
t6093 = pkin(1) * t6185;
t6215 = -pkin(7) / 0.2e1;
t6135 = t6215 - pkin(8) / 0.2e1;
t6231 = -0.2e1 * pkin(1);
t7414 = t6182 * t6185;
t7054 = t5483 * t7414;
t6697 = t7893 * t7054;
t6508 = t5995 * t6697;
t7143 = pkin(2) * t7414;
t7161 = pkin(6) * t7488;
t7377 = t6208 * t6144;
t7603 = t5402 * t6185;
t7726 = -0.2e1 * t6139;
t5052 = (((-(-t6089 + t6092 + t6231 - t7412) * t5462 - t5402 * t5883) * t6167 - t6697 * t7161) * t6142 + ((t5456 * t5994 + t7612) * t6168 + (-((t6135 * t6144 + t5975) * t7726 - t7377 - t7705 * t7143 + t5975) * t5466 + (-t7144 + (-t6208 - t6091) * t6168) * t5402) * t6181) * t6184 + ((t6092 - t5962) * t5462 + pkin(2) * t7603 + (t5231 - t5340) * t6182 + t5400) * t6167 + t6139 * t6508 + (t6093 + pkin(2)) * t6168 * t7085 - t6508) * t5605 * t7612;
t5942 = t6182 * t6005;
t6088 = t6144 * pkin(2);
t7270 = t5942 + t6088;
t5851 = -pkin(2) + t7270;
t7145 = t6182 * t7657;
t7276 = t6184 * t7792 - 0.2e1 * t7145;
t7847 = -t5994 + t7657;
t6298 = ((t6069 * t6085 - pkin(6)) * t6184 + t6181 * t5851) * t7472 - (t5994 * t6182 + t7276) * t6139 - t7847 * t6182;
t7411 = t6184 * t6185;
t5973 = pkin(3) * t7411;
t6900 = t5973 + t5899;
t7487 = (t6185 + 0.1e1) * (t6185 - 0.1e1);
t6334 = -(-t6208 * t7487 + (t7815 + t5973) * t6182) * t7471 + (pkin(1) + t6900) * t7445;
t5531 = t5815 * t6334 + t5816 * t6298;
t6361 = t5531 * t6444;
t5530 = -t5815 * t6298 + t5816 * t6334;
t6362 = t5530 * t6443;
t5225 = t5339 + t5337;
t5390 = pkin(6) * t7602;
t5234 = pkin(3) * t7612 - t5390;
t7058 = t6182 * t5466;
t6699 = t6167 * t7058;
t6511 = t6181 * t6699;
t5455 = pkin(3) * t6511;
t7662 = t5402 * pkin(2);
t6889 = -t5455 - t7662;
t5297 = t6889 * t6144;
t6575 = pkin(6) * t6699;
t5298 = -t6575 - t7662 / 0.2e1;
t6650 = t6167 * t7085;
t5332 = pkin(1) * t6650;
t6741 = t6182 * t7085;
t5333 = pkin(1) * t6741;
t7605 = t5402 * t6182;
t5389 = pkin(1) * t7605;
t5393 = t5396 / 0.2e1;
t5394 = pkin(2) * t5396;
t6236 = pkin(3) ^ 2;
t5397 = t5402 * t6236;
t7055 = t6208 * t5466;
t5457 = t6167 * t7055;
t7198 = pkin(2) * t5466;
t5463 = -0.2e1 * t7198;
t5464 = pkin(6) * t5466;
t6234 = pkin(6) ^ 2;
t7264 = pkin(1) ^ 2 + t6234;
t6466 = t7781 + t7264;
t5896 = 0.3e1 * t6236 + t6466;
t5897 = t6236 + t6466;
t7476 = t6145 * t6146;
t5912 = t6144 * t7476;
t6239 = pkin(2) ^ 2;
t7263 = t6239 - t6236;
t6048 = -t6234 + t7263;
t6053 = pkin(3) * t7653;
t6141 = t6184 * t6142;
t6143 = t6185 * t6144;
t6509 = t6143 * t5457;
t6397 = t6181 * t6509;
t7247 = pkin(6) * t7657;
t6566 = -t6185 * t7247 + t5820;
t6911 = -t7612 / 0.2e1;
t6631 = t6237 * t6911;
t6571 = pkin(2) * t6631;
t7421 = t6181 * t6182;
t6951 = t6167 * t7421;
t6720 = t5402 * t6951;
t6580 = pkin(3) * t6720;
t7060 = t6167 * t5466;
t7745 = -0.2e1 * pkin(6);
t6615 = t7060 * t7745;
t6779 = pkin(2) * t7060;
t6619 = -0.2e1 * t6779;
t6763 = pkin(2) * t5942;
t5398 = t5402 * t6239;
t6166 = t6208 ^ 2;
t6792 = t6166 * t5402 + t5398;
t6822 = -0.2e1 * t7055;
t6880 = -0.2e1 * t5466;
t6881 = pkin(2) * t5464;
t6893 = t6234 / 0.3e1 - t6239 / 0.3e1 + t6236;
t6974 = t6182 * t7476;
t7061 = t6144 * t5466;
t7470 = t6167 * t6182;
t7077 = t5402 * t7470;
t7607 = t5402 * t6167;
t7203 = pkin(2) * t7607;
t7213 = pkin(1) * t7456;
t7221 = pkin(1) * t7602;
t7237 = 0.2e1 * t6184;
t7262 = -0.2e1 * t6130;
t5941 = -t7476 / 0.2e1;
t7271 = t5941 + t6236;
t7272 = t7476 / 0.3e1 - 0.2e1 / 0.3e1 * t6236;
t7311 = 0.2e1 * t5225;
t7312 = t5332 + t5463;
t7477 = t6141 * t6236;
t7608 = t5402 * t6144;
t7661 = t5402 * pkin(3);
t7619 = ((-pkin(2) * t6699 + t5393 + t5339 / 0.2e1 + t5337 / 0.2e1) * t6181 + t7661 / 0.2e1) * t6144;
t7682 = pkin(2) * t6208;
t6138 = t6168 * t6139;
t7727 = 0.3e1 * t6138;
t7729 = 0.2e1 * t6130;
t7746 = -2 * pkin(2);
t6750 = (-((t6144 - 0.4e1 / 0.3e1) * t7477 + ((-0.2e1 / 0.3e1 * t6053 + t7272) * t6144 + 0.2e1 / 0.3e1 * t6763 + 0.4e1 / 0.3e1 * t6053 + t6893) * t6184 + (0.4e1 / 0.3e1 * t7657 - 0.2e1 / 0.3e1 * t5994) * t5851) * t5466 * t7727 + (t5402 * t6069 * t7477 + ((-pkin(1) * t7662 - t6208 * t6615) * t6185 + (pkin(6) * t6619 - t7221) * t6182 + t5397 - t6792) * t6184 + (t5234 * t7414 - t5394 * t6144 + t5394 - ((t6048 - t5912) * t6182 + 0.2e1 * (t6143 - t6185) * t7682) * t7060) * t6181 + (-(t5297 + (t5400 + t7887) * t6185 + 0.4e1 * t5455 + 0.4e1 * t6575 + 0.3e1 * t7662) * t6142 + (-t6397 - t7619 - 0.2e1 * (-pkin(2) * t6741 / 0.4e1 - t5457) * t7419 + ((t5341 + t6619) * t6182 + t5393 + t5225) * t6181) * t7237 - pkin(2) * t7608 + t7304 * t7414 - 0.2e1 * t5298) * pkin(3)) * t6139 + (-(-0.3e1 * t6144 + 0.3e1) * t7477 * t5466 - 0.2e1 * ((t5332 / 0.2e1 + t5463) * t6144 + (t6167 * t6571 - (pkin(1) + 0.2e1 * t7376) * t5466) * t6185 - t6580 - (t5396 + t7311) * t7470 / 0.2e1 - t5332 + t7198) * t7657 + (-0.2e1 * (t6053 + t7271) * t7061 + (((t5389 + t7304) * t6085 + t5234) * t6167 - t5962 * pkin(2) * t6880) * t6185 - 0.4e1 * (-0.3e1 / 0.4e1 * pkin(2) * t7077 - t5464) * t6085 + (pkin(6) * t7203 - t6231 * t7055) * t6182 + t5896 * t5466) * t6184 + ((-t5402 * t7213 - 0.2e1 * t6881) * t6181 + pkin(3) * t7312) * t6144 + ((pkin(1) * t7203 + pkin(6) * t6822) * t6181 + pkin(3) * t6822) * t7414 + (0.2e1 * t6881 + (t6182 * t6792 + t7221) * t6167) * t6181 - (t5225 * t7470 + t7312) * pkin(3)) * t6168 + (-t6144 + 0.1e1) * t5397 * t6141 + (t5297 + (t6185 * t7304 - t6615) * t6182 - t6889) * t7657 + (-t5397 + (0.2e1 * t7619 + (0.2e1 * t6509 + ((-pkin(1) * t7060 + t6571) * t6182 - t5457) * t7826 - t5333 + t6904) * t6181) * pkin(3)) * t6184 - t6397 * t7746 + ((t5394 - (t6974 + t7262) * t7060) * t6181 + pkin(2) * t7661) * t6144 + (((pkin(1) * t6619 - t5234) * t6182 + t6208 * t6619) * t6181 - pkin(3) * t7887) * t6185 + (-t5394 - (t5897 * t6182 + t7729) * t7060) * t6181 + 0.2e1 * t5298 * pkin(3)) / (-t5766 + (t5771 * t6184 + t6566) * t6167) * t5466;
t7418 = t6181 * t6208;
t5232 = t5402 * t7418 - t7612;
t5454 = t6699 * t7730;
t6230 = 2 * pkin(2);
t6001 = t6093 + t6230;
t6052 = t6166 + t6239;
t6229 = 3 * pkin(2);
t7064 = t5994 * t5466;
t6652 = t5851 * t7064;
t7059 = t6181 * t5466;
t6700 = t6167 * t7059;
t6739 = t6185 * t7085;
t6894 = t6166 + t7263;
t7450 = t6168 * t5402;
t6912 = (-t5466 * t6784 - t5466 - t7450) * t7477;
t7062 = t6139 * t5466;
t6216 = pkin(6) / 0.3e1;
t7194 = (t6085 + t6216) * t7689;
t7202 = pkin(2) * t7605;
t7675 = pkin(6) * t6208;
t5979 = pkin(1) * t7376;
t6056 = pkin(1) * t6089;
t7797 = -t5979 - t6056;
t7094 = (t6912 - ((t5402 * t6001 - t5454) * t6168 + (-pkin(2) * t6739 - t7879) * t6167 - ((-t6088 + (-t7376 + pkin(1)) * t6185 + t6229) * t6139 + t5851) * t5466) * t7657 + ((pkin(3) * t5994 * t6144 - t6053 + t6894 - t7797) * t7062 + (-(((t6091 - t6208) * t6085 - t7675) * t6185 + 0.3e1 * t7194) * t7060 + t5975 * t6930 + (-t6052 + t7797) * t5402) * t6168 + (-pkin(6) * t5231 * t6185 + t5995 * t7202) * t6167 - pkin(3) * t7064 * t7487) * t6184 + t6139 * t6652 + (-t6052 * t6182 - t6130 + (-t7143 + t7377) * pkin(1)) * t6168 * t6700 + t5232 * t5883 * t6167 - t6652) * t5605 * t5402;
t5619 = 0.1e1 / (-t5766 + t6167 * (t5770 * t6184 + t6566));
t7647 = t7708 ^ 2;
t7124 = t5619 * t7647;
t5003 = t6750 - t7094 + t5052 + (t6362 - t6361) * t7124;
t5273 = -t5456 - t7085;
t5303 = t5402 - t5462;
t5687 = t5815 * t6185 + t5816 * t7446;
t5538 = -t5687 * t7657 + (pkin(3) * t7006 - t6459) * t6184 + pkin(2) * t7006;
t5688 = -t5815 * t7446 + t5816 * t6185;
t5539 = -t5688 * t7657 + (-pkin(3) * t7007 - t6460) * t6184 - pkin(2) * t7007;
t6218 = -0.3e1 / 0.2e1 * pkin(2);
t6510 = t6182 * t5457;
t7086 = t6208 * t7612;
t7118 = t7705 * t5994;
t7183 = t5225 * t6085;
t7260 = 0.2e1 * t7662;
t7266 = t6166 + t6236;
t7681 = pkin(3) * t6167;
t7693 = pkin(2) * t5303;
t7801 = t5912 + t6053;
t5022 = ((-t6912 + ((-t5454 + t7260) * t6168 - (t5388 + t5225) * t7470 - ((t6218 + t7270) * t7726 + 0.2e1 * t6088 + t5963 * t6185 - pkin(2)) * t5466) * t7657 + ((0.2e1 * t6763 - t7263 + t7801) * t7062 + (-t7183 + t5402 * t6052 - (0.2e1 * t5984 * t6005 - 0.3e1 * t7194) * t7060) * t6168 + (t5232 * t7681 - t5963 * t7198) * t6185 + t6580 * t7746 - (t5979 + t7266 + t7801) * t5466) * t6184 + pkin(2) * ((t5232 * t6185 - t6181 * t7202) * t6167 - (t6363 * t7447 - t7118) * t5466)) * t5466 + (-t5538 * t6444 + t5539 * t6443) * t7647) * t5605 + (-(t5303 * t7477 - (-t5455 - 0.2e1 * t7693) * t7657 + (t6052 * t5303 + (-pkin(3) * (t6005 - 0.2e1 * t7689) * t7060 - t7086) * t6181) * t6184 - pkin(2) * t7792 * t6700) * t5402 + (-t6142 * t6510 + (-pkin(3) * t5456 + t5303 * t7418 - t7612) * t6184 + pkin(2) * t5273) * t7612) * t5603;
t6238 = 0.1e1 / pkin(3) ^ 2;
t5342 = t5380 ^ 2 / t5630 ^ 2 * t6238;
t5338 = pkin(7) * t5342;
t5580 = 0.1e1 / t7832 ^ 2;
t5465 = t5483 ^ 2 * t5580;
t6402 = t6167 * t6512;
t6326 = t6402 * t6230;
t7067 = t6182 * t5465;
t7159 = pkin(6) * t7470;
t7666 = pkin(7) * t6144;
t7725 = 0.2e1 * t6139;
t6963 = t6167 * t7444;
t7785 = pkin(6) * t6963 + t6091;
t7866 = t5003 * t7746 + (-t6001 * t6168 + t7159) * t5022 - t5465 * ((t6215 - t7143 + t7666) * t7725 + pkin(7) - 0.2e1 * t7666 + t7785) - (pkin(2) * t7067 - pkin(7) * t6402) * t7826 - t6182 * t6326 + t5338;
t7407 = t6187 * t6208;
t5246 = t5452 * t7407 - t7611;
t5447 = pkin(1) * t5452;
t6118 = pkin(1) * t6153;
t6119 = pkin(1) * t6197;
t7403 = t6188 * t6197;
t7138 = pkin(2) * t7403;
t6406 = t6153 * t6208 - t7138;
t6926 = t6187 * t7611;
t6956 = t6167 * t7436;
t7410 = t6187 * t6188;
t7071 = t5452 * t7410;
t7409 = t6187 * t6196;
t5057 = ((pkin(1) * t7071 + t5246) * t6196 - (t6119 + pkin(2)) * t5374) * t6168 + ((t6926 + t7298) * t6188 - t5447 + (t5884 * t6151 + (pkin(6) * t7409 - pkin(2)) * t6197) * t5452) * t6167 - ((-(-t6102 + t6118 + t6231 - t7401) * t7472 - t7161 * t7403) * t6151 + (t6007 * t6956 + 0.2e1 * (t6135 * t6153 + t7138 / 0.2e1 + t5980) * t7481 - (-t6406 + t5980) * t6187) * t6196 + (t6118 - t5967) * t7472 + t7705 * t6008 * t7403) * t7582;
t5776 = t6197 * t7132 - t5880;
t5615 = 0.1e1 / ((t5776 * t6167 - t5835) * t6196 + t7279);
t5943 = t6188 * t6041;
t6101 = t6153 * pkin(2);
t7269 = t5943 + t6101;
t5858 = -pkin(2) + t7269;
t6070 = t6153 - 0.2e1;
t7142 = t6188 * t7656;
t7275 = -t6196 * t7788 - 0.2e1 * t7142;
t7846 = -t6007 + t7656;
t6297 = ((t6070 * t6096 - pkin(6)) * t6196 + t6187 * t5858) * t7472 - (t6007 * t6188 + t7275) * t6139 - t7846 * t6188;
t7380 = t6196 * t6197;
t5976 = pkin(3) * t7380;
t6899 = t5976 + t5903;
t7486 = (t6197 + 0.1e1) * (t6197 - 0.1e1);
t6333 = -(-t6208 * t7486 + (t7814 + t5976) * t6188) * t7468 + (pkin(1) + t6899) * t7437;
t5533 = t5821 * t6333 + t5822 * t6297;
t6359 = t5533 * t6442;
t5532 = -t5821 * t6297 + t5822 * t6333;
t6360 = t5532 * t6441;
t5227 = t5365 + t5362;
t5416 = pkin(6) * t7589;
t5251 = pkin(3) * t7611 - t5416;
t6649 = t6167 * t5374;
t5343 = pkin(1) * t6649;
t6736 = t6188 * t5374;
t5346 = pkin(1) * t6736;
t7591 = t5452 * t6188;
t5413 = pkin(1) * t7591;
t5425 = pkin(2) * t5434;
t5435 = t5452 * t6236;
t5437 = t5452 * pkin(2);
t6057 = pkin(3) * t7652;
t6150 = t6196 * t6151;
t6152 = t6197 * t6153;
t7037 = t6208 * t7582;
t6646 = t6167 * t7037;
t6432 = -0.2e1 * t6152 * t6646;
t6606 = 0.2e1 * t6677;
t6290 = pkin(3) * (pkin(6) * t6606 + t5437) + t6432 * t7688;
t6734 = t6197 * t5374;
t6526 = t6188 * t6734;
t7246 = pkin(6) * t7656;
t6565 = -t6197 * t7246 + t5827;
t6578 = pkin(2) * t6646;
t6586 = pkin(2) * t6734;
t7042 = t6167 * t7582;
t6778 = pkin(2) * t7042;
t6618 = -0.2e1 * t6778;
t6762 = pkin(2) * t5943;
t5436 = t5452 * t6239;
t6790 = t6166 * t5452 + t5436;
t6821 = -0.2e1 * t7037;
t6879 = -0.2e1 * t7582;
t7164 = pkin(6) * t7582;
t6884 = pkin(2) * t7164;
t6973 = t6188 * t7476;
t7043 = t6153 * t7582;
t7467 = t6167 * t6188;
t7072 = t5452 * t7467;
t7149 = pkin(3) * t7886;
t7594 = t5452 * t6167;
t7200 = pkin(2) * t7594;
t7219 = pkin(1) * t7589;
t7659 = t5452 * pkin(3);
t7249 = pkin(2) * t7659;
t7306 = 0.2e1 * t5227;
t7197 = pkin(2) * t7582;
t7310 = t5343 - 0.2e1 * t7197;
t7475 = t6150 * t6236;
t6676 = t6187 * t7040;
t6489 = t6167 * t6676;
t6413 = pkin(3) * t6489;
t7615 = (-t5437 - t6413) * t6153;
t6605 = -0.2e1 * t6677;
t7618 = ((pkin(2) * t6605 - t6902) * t6187 + t7659) * t6153;
t7744 = 0.2e1 * pkin(6);
t7748 = 0.2e1 * pkin(1);
t7771 = t7306 + 0.2e1 * t5410;
t7822 = -t6153 + 0.1e1;
t7825 = 0.2e1 * t6188;
t6749 = (-((t6153 - 0.4e1 / 0.3e1) * t7475 + ((-0.2e1 / 0.3e1 * t6057 + t7272) * t6153 + 0.2e1 / 0.3e1 * t6762 + 0.4e1 / 0.3e1 * t6057 + t6893) * t6196 + (0.4e1 / 0.3e1 * t7656 - 0.2e1 / 0.3e1 * t6007) * t5858) * t7582 * t7727 + (t5452 * t6070 * t7475 - (t7615 + (t5447 + t7886) * t6197 + 0.3e1 * t5437 + 0.4e1 * t7870) * t7656 + ((-pkin(1) * t5437 - t6646 * t7745) * t6197 + (pkin(6) * t6618 - t7219) * t6188 + t5435 + (-t7618 + (t6432 + (pkin(2) * t6736 + 0.4e1 * t6646) * t6197 + (t5370 + t6618) * t7825 + t5434 + t7306) * t6187) * pkin(3) - t6790) * t6196 + ((t6677 * t7476 - t5425) * t6187 - t7249) * t6153 + ((t5251 * t6188 + 0.2e1 * t6578) * t6187 + t7149) * t6197 + (-t6048 * t6677 + t5425) * t6187 + t6290) * t6139 + (-(-0.3e1 * t6153 + 0.3e1) * t7475 * t7582 - (t6070 * t5343 + (-t6586 + (-t5434 - t7771) * t6188) * t6167 - ((t7748 + 0.4e1 * t7375) * t6197 + (0.4e1 * t6153 - 0.2e1) * pkin(2)) * t7582) * t7656 + (-0.2e1 * (t6057 + t7271) * t7043 + (((t5413 + t7298) * t6096 + t5251) * t6167 - t5967 * pkin(2) * t6879) * t6197 + (t7072 * t6229 + 0.4e1 * t7164) * t6096 + (pkin(6) * t7200 - t6231 * t7037) * t6188 + t5896 * t7582) * t6196 + ((-t5452 * t7213 - 0.2e1 * t6884) * t6187 + pkin(3) * t7310) * t6153 + ((pkin(1) * t7200 + pkin(6) * t6821) * t6187 + pkin(3) * t6821) * t7403 + (0.2e1 * t6884 + (t6188 * t6790 + t7219) * t6167) * t6187 - (t5227 * t7467 + t7310) * pkin(3)) * t6168 + t7822 * t5435 * t6150 - (-t7615 - t5437 + (-t7298 * t6197 - (t7744 + t6096) * t7042) * t6188) * t7656 + (-t5435 + (t7618 + (-pkin(2) * t6526 - t5346 + (-t6208 * t6152 + (t6208 + t6115) * t6197) * t6167 * t6879 + t6902) * t6187) * pkin(3)) * t6196 + ((t5425 - (t6973 + t7262) * t7042) * t6187 + t7249) * t6153 + (((pkin(1) * t6618 - t5251) * t6188 - 0.2e1 * t6578) * t6187 - t7149) * t6197 + (-t5425 - (t5897 * t6188 + t7729) * t7042) * t6187 - t6290) / (-t5767 + (t5776 * t6196 + t6565) * t6167) * t7582;
t5627 = 0.1e1 / (-t5767 + t6167 * (t5772 * t6196 + t6565));
t7123 = t5627 * t7647;
t5242 = t7589 - t6926;
t5458 = t5989 * t6606;
t6028 = t6119 + t6230;
t7046 = t6007 * t7582;
t6654 = t5858 * t7046;
t7041 = t6187 * t7582;
t6678 = t6167 * t7041;
t7044 = t6139 * t7582;
t7491 = t6070 * t6139;
t7593 = t5452 * t6168;
t7093 = (t7593 - (-t7491 - t7822) * t7582) * t7475;
t7186 = (t6096 + t6216) * t7687;
t5985 = pkin(1) * t7375;
t6066 = pkin(1) * t6102;
t7796 = -t5985 - t6066;
t7622 = (-t7093 - ((t5452 * t6028 + t5458) * t6168 + (-t6586 - t7878) * t6167 - ((-t6101 + (-t7375 + pkin(1)) * t6197 + t6229) * t6139 + t5858) * t7582) * t7656 + ((pkin(3) * t6007 * t6153 - t6057 + t6894 - t7796) * t7044 + (-(((t6115 - t6208) * t6096 - t7675) * t6197 + 0.3e1 * t7186) * t7042 + t5980 * t6926 + (-t6052 + t7796) * t5452) * t6168 + (-pkin(6) * t5242 * t6197 + t5437 * t7510) * t6167 - pkin(3) * t7046 * t7486) * t6196 + t6139 * t6654 + (pkin(1) * t6406 - t6052 * t6188 - t6130) * t6168 * t6678 + t5246 * t5884 * t6167 - t6654) * t5452;
t5004 = t6749 + (-t5057 * t7611 - t7622) * t5615 + (t6360 - t6359) * t7123;
t7038 = t6197 * t7582;
t5467 = t6167 * t7038;
t5286 = -t5467 - t5374;
t5473 = t6168 * t7582;
t5321 = t5452 - t5473;
t5316 = t5321 * pkin(2);
t5692 = t5821 * t6197 + t5822 * t7442;
t5540 = -t5692 * t7656 + (pkin(3) * t7004 - t6457) * t6196 + pkin(2) * t7004;
t5693 = -t5821 * t7442 + t5822 * t6197;
t5541 = -t5693 * t7656 + (-pkin(3) * t7005 - t6458) * t6196 - pkin(2) * t7005;
t6488 = t6188 * t6646;
t6947 = t6167 * t7410;
t6714 = t5452 * t6947;
t6962 = t6167 * t7443;
t7083 = t6208 * t7611;
t7117 = t7705 * t6007;
t7181 = t5227 * t6096;
t7648 = pkin(3) * t7746;
t5921 = t6153 * t7476;
t7800 = t5921 + t6057;
t5018 = ((t7093 + ((t5458 + 0.2e1 * t5437) * t6168 - (t5410 + t5227) * t7467 - ((t6218 + t7269) * t7726 + 0.2e1 * t6101 + t5970 * t6197 - pkin(2)) * t7582) * t7656 + ((0.2e1 * t6762 - t7263 + t7800) * t7044 + (-t7181 + t5452 * t6052 - (0.2e1 * t5989 * t6041 - 0.3e1 * t7186) * t7042) * t6168 + (t5246 * t7681 - t5970 * t7197) * t6197 + t6714 * t7648 - (t5985 + t7266 + t7800) * t7582) * t6196 + pkin(2) * ((-pkin(2) * t7071 + t5246 * t6197) * t6167 - (-t6962 * t7788 - t7117) * t7582)) * t7582 + (-t5540 * t6442 + t5541 * t6441) * t7647) * t5615 - (-(t5321 * t7475 + (t6413 / 0.2e1 + t5316) * t7259 + (t6052 * t5321 + (-pkin(3) * (t6041 - 0.2e1 * t7687) * t7042 - t7083) * t6187) * t6196 + pkin(2) * t7788 * t6678) * t5452 + (-t6151 * t6488 + (-pkin(3) * t5467 + t5321 * t7407 - t7611) * t6196 + pkin(2) * t5286) * t7611) * t5610;
t5373 = t5384 ^ 2 / t5643 ^ 2 * t6238;
t5364 = pkin(7) * t5373;
t5595 = 0.1e1 / t7831 ^ 2;
t5479 = t5487 ^ 2 * t5595;
t6490 = t5374 * t7582;
t6401 = t6167 * t6490;
t6325 = t6401 * t6230;
t7053 = t6188 * t5479;
t7158 = pkin(6) * t7467;
t7665 = pkin(7) * t6153;
t7784 = pkin(6) * t6956 + t6115;
t7865 = t5004 * t7746 + (-t6028 * t6168 + t7158) * t5018 - t5479 * ((t6215 - t7138 + t7665) * t7725 + pkin(7) - 0.2e1 * t7665 + t7784) - (pkin(2) * t7053 - pkin(7) * t6401) * t7235 - t6188 * t6325 + t5364;
t7397 = t6190 * t6208;
t5245 = t5451 * t7397 - t7609;
t5446 = pkin(1) * t5451;
t6120 = pkin(1) * t6157;
t6121 = pkin(1) * t6200;
t7393 = t6191 * t6200;
t7136 = pkin(2) * t7393;
t6405 = t6157 * t6208 - t7136;
t6923 = t6190 * t7609;
t6955 = t6167 * t7434;
t7400 = t6190 * t6191;
t7074 = t5451 * t7400;
t7399 = t6190 * t6199;
t5058 = ((pkin(1) * t7074 + t5245) * t6199 - (t6121 + pkin(2)) * t5378) * t6168 + ((t6923 + t7299) * t6191 - t5446 + (t5885 * t6155 + (pkin(6) * t7399 - pkin(2)) * t6200) * t5451) * t6167 - ((-(-t6106 + t6120 + t6231 - t7391) * t7472 - t7161 * t7393) * t6155 + (t6009 * t6955 + 0.2e1 * (t6135 * t6157 + t7136 / 0.2e1 + t5981) * t7480 - (-t6405 + t5981) * t6190) * t6199 + (t6120 - t5968) * t7472 + t7705 * t6010 * t7393) * t7581;
t5777 = t6200 * t7131 - t5881;
t5617 = 0.1e1 / ((t5777 * t6167 - t5836) * t6199 + t7278);
t5944 = t6191 * t6042;
t6105 = t6157 * pkin(2);
t7268 = t5944 + t6105;
t5859 = -pkin(2) + t7268;
t6071 = t6157 - 0.2e1;
t7141 = t6191 * t7655;
t7274 = -t6199 * t7787 - 0.2e1 * t7141;
t7845 = -t6009 + t7655;
t6296 = ((t6071 * t6097 - pkin(6)) * t6199 + t6190 * t5859) * t7472 - (t6009 * t6191 + t7274) * t6139 - t7845 * t6191;
t7379 = t6199 * t6200;
t5977 = pkin(3) * t7379;
t6898 = t5977 + t5904;
t7485 = (t6200 + 0.1e1) * (t6200 - 0.1e1);
t6332 = -(-t6208 * t7485 + (t7813 + t5977) * t6191) * t7466 + (pkin(1) + t6898) * t7435;
t5535 = t5823 * t6332 + t5824 * t6296;
t6357 = t5535 * t6440;
t5534 = -t5823 * t6296 + t5824 * t6332;
t6358 = t5534 * t6439;
t5228 = t5366 + t5363;
t5415 = pkin(6) * t7596;
t5253 = pkin(3) * t7609 - t5415;
t6647 = t6167 * t5378;
t5345 = pkin(1) * t6647;
t6726 = t6191 * t5378;
t5348 = pkin(1) * t6726;
t7598 = t5451 * t6191;
t5412 = pkin(1) * t7598;
t5424 = pkin(2) * t5429;
t5431 = t5451 * pkin(2);
t5445 = t6236 * t5451;
t6058 = pkin(3) * t7651;
t6156 = t6200 * t6157;
t7026 = t6208 * t7581;
t6645 = t6167 * t7026;
t6431 = -0.2e1 * t6156 * t6645;
t6604 = 0.2e1 * t6667;
t6289 = pkin(3) * (pkin(6) * t6604 + t5431) + t6431 * t7686;
t6724 = t6200 * t5378;
t6524 = t6191 * t6724;
t7245 = pkin(6) * t7655;
t6564 = -t6200 * t7245 + t5828;
t6577 = pkin(2) * t6645;
t6582 = pkin(2) * t6724;
t7031 = t6167 * t7581;
t6777 = pkin(2) * t7031;
t6617 = -0.2e1 * t6777;
t6761 = pkin(2) * t5944;
t5430 = t5451 * t6239;
t6791 = t6166 * t5451 + t5430;
t6820 = -0.2e1 * t7026;
t6878 = -0.2e1 * t7581;
t7163 = pkin(6) * t7581;
t6883 = pkin(2) * t7163;
t6972 = t6191 * t7476;
t7032 = t6157 * t7581;
t7465 = t6167 * t6191;
t7075 = t5451 * t7465;
t7147 = pkin(3) * t7885;
t7600 = t5451 * t6167;
t7201 = pkin(2) * t7600;
t7220 = pkin(1) * t7596;
t7660 = t5451 * pkin(3);
t7250 = pkin(2) * t7660;
t7305 = 0.2e1 * t5228;
t7196 = pkin(2) * t7581;
t7308 = t5345 - 0.2e1 * t7196;
t6154 = t6199 * t6155;
t7474 = t6154 * t6236;
t6666 = t6190 * t7029;
t6481 = t6167 * t6666;
t6412 = pkin(3) * t6481;
t7614 = (-t5431 - t6412) * t6157;
t6603 = -0.2e1 * t6667;
t7617 = ((pkin(2) * t6603 - t6903) * t6190 + t7660) * t6157;
t7772 = t7305 + 0.2e1 * t5409;
t7811 = t6154 * t5445;
t7821 = -t6157 + 0.1e1;
t7824 = 0.2e1 * t6191;
t6748 = (-((-0.4e1 / 0.3e1 + t6157) * t7474 + ((-0.2e1 / 0.3e1 * t6058 + t7272) * t6157 + 0.2e1 / 0.3e1 * t6761 + 0.4e1 / 0.3e1 * t6058 + t6893) * t6199 + (0.4e1 / 0.3e1 * t7655 - 0.2e1 / 0.3e1 * t6009) * t5859) * t7581 * t7727 + (t6071 * t7811 - (t7614 + (t5446 + t7885) * t6200 + 0.3e1 * t5431 + 0.4e1 * t7869) * t7655 + ((-pkin(1) * t5431 - t6645 * t7745) * t6200 + (pkin(6) * t6617 - t7220) * t6191 + t5445 + (-t7617 + (t6431 + (pkin(2) * t6726 + 0.4e1 * t6645) * t6200 + (t5372 + t6617) * t7824 + t5429 + t7305) * t6190) * pkin(3) - t6791) * t6199 + ((t6667 * t7476 - t5424) * t6190 - t7250) * t6157 + ((t5253 * t6191 + 0.2e1 * t6577) * t6190 + t7147) * t6200 + (-t6048 * t6667 + t5424) * t6190 + t6289) * t6139 + (-(-0.3e1 * t6157 + 0.3e1) * t7474 * t7581 - (t6071 * t5345 + (-t6582 + (-t5429 - t7772) * t6191) * t6167 - ((t7748 + 0.4e1 * t7374) * t6200 + (0.4e1 * t6157 - 0.2e1) * pkin(2)) * t7581) * t7655 + (-0.2e1 * (t6058 + t7271) * t7032 + (((t5412 + t7299) * t6097 + t5253) * t6167 - t5968 * pkin(2) * t6878) * t6200 + (t6229 * t7075 + 0.4e1 * t7163) * t6097 + (pkin(6) * t7201 - t6231 * t7026) * t6191 + t5896 * t7581) * t6199 + ((-t5451 * t7213 - 0.2e1 * t6883) * t6190 + pkin(3) * t7308) * t6157 + ((pkin(1) * t7201 + pkin(6) * t6820) * t6190 + pkin(3) * t6820) * t7393 + (0.2e1 * t6883 + (t6191 * t6791 + t7220) * t6167) * t6190 - (t5228 * t7465 + t7308) * pkin(3)) * t6168 + t7821 * t7811 - (-t7614 - t5431 + (-t7299 * t6200 - (t7744 + t6097) * t7031) * t6191) * t7655 + (-t5445 + (t7617 + (-pkin(2) * t6524 - t5348 + (-t6208 * t6156 + (t6208 + t6116) * t6200) * t6167 * t6878 + t6903) * t6190) * pkin(3)) * t6199 + ((t5424 - (t6972 + t7262) * t7031) * t6190 + t7250) * t6157 + (((pkin(1) * t6617 - t5253) * t6191 - 0.2e1 * t6577) * t6190 - t7147) * t6200 + (-t5424 - (t5897 * t6191 + t7729) * t7031) * t6190 - t6289) / (-t5768 + (t5777 * t6199 + t6564) * t6167) * t7581;
t5628 = 0.1e1 / (-t5768 + t6167 * (t5773 * t6199 + t6564));
t7122 = t5628 * t7647;
t5243 = t7596 - t6923;
t5459 = t5991 * t6604;
t6029 = t6121 + t6230;
t7035 = t6009 * t7581;
t6653 = t5859 * t7035;
t7030 = t6190 * t7581;
t6668 = t6167 * t7030;
t7033 = t6139 * t7581;
t7449 = t6168 * t5451;
t7490 = t6071 * t6139;
t7092 = (t7449 - (-t7490 - t7821) * t7581) * t7474;
t7146 = (t6097 + t6216) * t7685;
t5986 = pkin(1) * t7374;
t6067 = pkin(1) * t6106;
t7795 = -t5986 - t6067;
t7621 = (-t7092 - ((t5451 * t6029 + t5459) * t6168 + (-t6582 - t7876) * t6167 - ((-t6105 + (-t7374 + pkin(1)) * t6200 + t6229) * t6139 + t5859) * t7581) * t7655 + ((pkin(3) * t6009 * t6157 - t6058 + t6894 - t7795) * t7033 + (-(((t6116 - t6208) * t6097 - t7675) * t6200 + 0.3e1 * t7146) * t7031 + t5981 * t6923 + (-t6052 + t7795) * t5451) * t6168 + (-pkin(6) * t5243 * t6200 + t5431 * t7508) * t6167 - pkin(3) * t7035 * t7485) * t6199 + t6139 * t6653 + (pkin(1) * t6405 - t6052 * t6191 - t6130) * t6168 * t6668 + t5245 * t5885 * t6167 - t6653) * t5451;
t5005 = t6748 + (-t5058 * t7609 - t7621) * t5617 + (t6358 - t6357) * t7122;
t7027 = t6200 * t7581;
t5468 = t6167 * t7027;
t5288 = -t5468 - t5378;
t5474 = t6168 * t7581;
t5324 = t5451 - t5474;
t5317 = t5324 * pkin(2);
t5694 = t5823 * t6200 + t5824 * t7440;
t5542 = -t5694 * t7655 + (pkin(3) * t7002 - t6455) * t6199 + pkin(2) * t7002;
t5695 = -t5823 * t7440 + t5824 * t6200;
t5543 = -t5695 * t7655 + (-pkin(3) * t7003 - t6456) * t6199 - pkin(2) * t7003;
t6480 = t6191 * t6645;
t6942 = t6167 * t7400;
t6717 = t5451 * t6942;
t6960 = t6167 * t7441;
t7079 = t6208 * t7609;
t7116 = t7705 * t6009;
t7180 = t5228 * t6097;
t5922 = t6157 * t7476;
t7799 = t5922 + t6058;
t5019 = ((t7092 + ((t5459 + 0.2e1 * t5431) * t6168 - (t5409 + t5228) * t7465 - ((t6218 + t7268) * t7726 + 0.2e1 * t6105 + t5971 * t6200 - pkin(2)) * t7581) * t7655 + ((0.2e1 * t6761 - t7263 + t7799) * t7033 + (-t7180 + t5451 * t6052 - (0.2e1 * t5991 * t6042 - 0.3e1 * t7146) * t7031) * t6168 + (t5245 * t7681 - t5971 * t7196) * t6200 + t6717 * t7648 - (t5986 + t7266 + t7799) * t7581) * t6199 + pkin(2) * ((-pkin(2) * t7074 + t5245 * t6200) * t6167 - (-t6960 * t7787 - t7116) * t7581)) * t7581 + (-t5542 * t6440 + t5543 * t6439) * t7647) * t5617 - (-(t5324 * t7474 + (t6412 / 0.2e1 + t5317) * t7258 + (t6052 * t5324 + (-pkin(3) * (t6042 - 0.2e1 * t7685) * t7031 - t7079) * t6190) * t6199 + pkin(2) * t7787 * t6668) * t5451 + (-t6155 * t6480 + (-pkin(3) * t5468 + t5324 * t7397 - t7609) * t6199 + pkin(2) * t5288) * t7609) * t5611;
t5377 = t5386 ^ 2 / t5644 ^ 2 * t6238;
t5361 = pkin(7) * t5377;
t5598 = 0.1e1 / t7830 ^ 2;
t5480 = t5488 ^ 2 * t5598;
t6482 = t5378 * t7581;
t6399 = t6167 * t6482;
t6323 = t6399 * t6230;
t7051 = t6191 * t5480;
t7157 = pkin(6) * t7465;
t7664 = pkin(7) * t6157;
t7783 = pkin(6) * t6955 + t6116;
t7864 = t5005 * t7746 + (-t6029 * t6168 + t7157) * t5019 - t5480 * ((t6215 - t7136 + t7664) * t7725 + pkin(7) - 0.2e1 * t7664 + t7783) - (pkin(2) * t7051 - pkin(7) * t6399) * t7234 - t6191 * t6323 + t5361;
t7387 = t6193 * t6208;
t5247 = t5453 * t7387 - t7610;
t5444 = t5453 * pkin(1);
t6122 = pkin(1) * t6161;
t6123 = pkin(1) * t6203;
t7383 = t6194 * t6203;
t7134 = pkin(2) * t7383;
t6404 = t6161 * t6208 - t7134;
t6920 = t6193 * t7610;
t6954 = t6167 * t7432;
t7390 = t6193 * t6194;
t7068 = t5453 * t7390;
t7389 = t6193 * t6202;
t5059 = ((pkin(1) * t7068 + t5247) * t6202 - (t6123 + pkin(2)) * t5376) * t6168 + ((t6920 + t7297) * t6194 - t5444 + (t5886 * t6159 + (pkin(6) * t7389 - pkin(2)) * t6203) * t5453) * t6167 - ((-(-t6110 + t6122 + t6231 - t7381) * t7472 - t7161 * t7383) * t6159 + (t6011 * t6954 + 0.2e1 * (t6135 * t6161 + t7134 / 0.2e1 + t5982) * t7479 - (-t6404 + t5982) * t6193) * t6202 + (t6122 - t5969) * t7472 + t7705 * t6012 * t7383) * t7580;
t5778 = t6203 * t7130 - t5882;
t5613 = 0.1e1 / ((t5778 * t6167 - t5837) * t6202 + t7277);
t5945 = t6194 * t6043;
t6109 = t6161 * pkin(2);
t7267 = t5945 + t6109;
t5860 = -pkin(2) + t7267;
t6072 = t6161 - 0.2e1;
t7140 = t6194 * t7654;
t7273 = -t6202 * t7786 - 0.2e1 * t7140;
t7844 = -t6011 + t7654;
t6295 = ((t6072 * t6098 - pkin(6)) * t6202 + t6193 * t5860) * t7472 - (t6011 * t6194 + t7273) * t6139 - t7844 * t6194;
t7378 = t6202 * t6203;
t5978 = pkin(3) * t7378;
t6897 = t5978 + t5905;
t7484 = (t6203 + 0.1e1) * (t6203 - 0.1e1);
t6331 = -(-t6208 * t7484 + (t7812 + t5978) * t6194) * t7464 + (pkin(1) + t6897) * t7433;
t5537 = t5825 * t6331 + t5826 * t6295;
t6355 = t5537 * t6438;
t5536 = -t5825 * t6295 + t5826 * t6331;
t6356 = t5536 * t6437;
t5226 = t5360 + t5359;
t5417 = pkin(6) * t7583;
t5252 = pkin(3) * t7610 - t5417;
t6648 = t6167 * t5376;
t5344 = pkin(1) * t6648;
t6731 = t6194 * t5376;
t5347 = pkin(1) * t6731;
t7585 = t5453 * t6194;
t5414 = pkin(1) * t7585;
t5426 = pkin(2) * t5440;
t5441 = t5453 * t6236;
t5443 = t5453 * pkin(2);
t6059 = pkin(3) * t7650;
t6158 = t6202 * t6159;
t6160 = t6203 * t6161;
t7015 = t6208 * t7580;
t6644 = t6167 * t7015;
t6430 = -0.2e1 * t6160 * t6644;
t6602 = 0.2e1 * t6657;
t6288 = pkin(3) * (pkin(6) * t6602 + t5443) + t6430 * t7684;
t6729 = t6203 * t5376;
t6525 = t6194 * t6729;
t7244 = pkin(6) * t7654;
t6563 = -t6203 * t7244 + t5829;
t6576 = pkin(2) * t6644;
t6584 = pkin(2) * t6729;
t7020 = t6167 * t7580;
t6776 = pkin(2) * t7020;
t6616 = -0.2e1 * t6776;
t6760 = pkin(2) * t5945;
t5442 = t5453 * t6239;
t6789 = t6166 * t5453 + t5442;
t6819 = -0.2e1 * t7015;
t6877 = -0.2e1 * t7580;
t7162 = pkin(6) * t7580;
t6882 = pkin(2) * t7162;
t6971 = t6194 * t7476;
t7021 = t6161 * t7580;
t7463 = t6167 * t6194;
t7069 = t5453 * t7463;
t7148 = pkin(3) * t7884;
t7587 = t5453 * t6167;
t7199 = pkin(2) * t7587;
t7218 = pkin(1) * t7583;
t7658 = t5453 * pkin(3);
t7248 = pkin(2) * t7658;
t7307 = 0.2e1 * t5226;
t7195 = pkin(2) * t7580;
t7309 = t5344 - 0.2e1 * t7195;
t7473 = t6158 * t6236;
t6656 = t6193 * t7018;
t6473 = t6167 * t6656;
t6411 = pkin(3) * t6473;
t7613 = (-t5443 - t6411) * t6161;
t6601 = -0.2e1 * t6657;
t7616 = ((pkin(2) * t6601 - t6901) * t6193 + t7658) * t6161;
t7770 = t7307 + 0.2e1 * t5411;
t7820 = -t6161 + 0.1e1;
t7823 = 0.2e1 * t6194;
t6747 = (-((-0.4e1 / 0.3e1 + t6161) * t7473 + ((-0.2e1 / 0.3e1 * t6059 + t7272) * t6161 + 0.2e1 / 0.3e1 * t6760 + 0.4e1 / 0.3e1 * t6059 + t6893) * t6202 + (0.4e1 / 0.3e1 * t7654 - 0.2e1 / 0.3e1 * t6011) * t5860) * t7580 * t7727 + (t5453 * t6072 * t7473 - (t7613 + (t5444 + t7884) * t6203 + 0.3e1 * t5443 + 0.4e1 * t7868) * t7654 + ((-pkin(1) * t5443 - t6644 * t7745) * t6203 + (pkin(6) * t6616 - t7218) * t6194 + t5441 + (-t7616 + (t6430 + (pkin(2) * t6731 + 0.4e1 * t6644) * t6203 + (t5371 + t6616) * t7823 + t5440 + t7307) * t6193) * pkin(3) - t6789) * t6202 + ((t6657 * t7476 - t5426) * t6193 - t7248) * t6161 + ((t5252 * t6194 + 0.2e1 * t6576) * t6193 + t7148) * t6203 + (-t6048 * t6657 + t5426) * t6193 + t6288) * t6139 + (-(-0.3e1 * t6161 + 0.3e1) * t7473 * t7580 - (t6072 * t5344 + (-t6584 + (-t5440 - t7770) * t6194) * t6167 - ((t7748 + 0.4e1 * t7373) * t6203 + (0.4e1 * t6161 - 0.2e1) * pkin(2)) * t7580) * t7654 + (-0.2e1 * (t6059 + t7271) * t7021 + (((t5414 + t7297) * t6098 + t5252) * t6167 - t5969 * pkin(2) * t6877) * t6203 + (t7069 * t6229 + 0.4e1 * t7162) * t6098 + (pkin(6) * t7199 - t6231 * t7015) * t6194 + t5896 * t7580) * t6202 + ((-t5453 * t7213 - 0.2e1 * t6882) * t6193 + pkin(3) * t7309) * t6161 + ((pkin(1) * t7199 + pkin(6) * t6819) * t6193 + pkin(3) * t6819) * t7383 + (0.2e1 * t6882 + (t6194 * t6789 + t7218) * t6167) * t6193 - (t5226 * t7463 + t7309) * pkin(3)) * t6168 + t7820 * t5441 * t6158 - (-t7613 - t5443 + (-t7297 * t6203 - (t7744 + t6098) * t7020) * t6194) * t7654 + (-t5441 + (t7616 + (-pkin(2) * t6525 - t5347 + (-t6208 * t6160 + (t6208 + t6117) * t6203) * t6167 * t6877 + t6901) * t6193) * pkin(3)) * t6202 + ((t5426 - (t6971 + t7262) * t7020) * t6193 + t7248) * t6161 + (((pkin(1) * t6616 - t5252) * t6194 - 0.2e1 * t6576) * t6193 - t7148) * t6203 + (-t5426 - (t5897 * t6194 + t7729) * t7020) * t6193 - t6288) / (-t5769 + (t5778 * t6202 + t6563) * t6167) * t7580;
t5629 = 0.1e1 / (-t5769 + t6167 * (t5774 * t6202 + t6563));
t7121 = t5629 * t7647;
t5244 = t7583 - t6920;
t5460 = t5993 * t6602;
t6030 = t6123 + t6230;
t7024 = t6011 * t7580;
t6651 = t5860 * t7024;
t7019 = t6193 * t7580;
t6658 = t6167 * t7019;
t7448 = t6168 * t5453;
t7489 = t6072 * t6139;
t6913 = (t7448 - (-t7489 - t7820) * t7580) * t7473;
t7022 = t6139 * t7580;
t7185 = (t6098 + t6216) * t7683;
t5987 = pkin(1) * t7373;
t6068 = pkin(1) * t6110;
t7794 = -t5987 - t6068;
t7620 = (-t6913 - ((t5453 * t6030 + t5460) * t6168 + (-t6584 - t7877) * t6167 - ((-t6109 + (-t7373 + pkin(1)) * t6203 + t6229) * t6139 + t5860) * t7580) * t7654 + ((pkin(3) * t6011 * t6161 - t6059 + t6894 - t7794) * t7022 + (-(((t6117 - t6208) * t6098 - t7675) * t6203 + 0.3e1 * t7185) * t7020 + t5982 * t6920 + (-t6052 + t7794) * t5453) * t6168 + (-pkin(6) * t5244 * t6203 + t5443 * t7506) * t6167 - pkin(3) * t7024 * t7484) * t6202 + t6139 * t6651 + (pkin(1) * t6404 - t6052 * t6194 - t6130) * t6168 * t6658 + t5247 * t5886 * t6167 - t6651) * t5453;
t5006 = t6747 + (-t5059 * t7610 - t7620) * t5613 + (t6356 - t6355) * t7121;
t7016 = t6203 * t7580;
t5469 = t6167 * t7016;
t5290 = -t5469 - t5376;
t5475 = t6168 * t7580;
t5327 = t5453 - t5475;
t5318 = t5327 * pkin(2);
t5696 = t5825 * t6203 + t5826 * t7438;
t5544 = -t5696 * t7654 + (pkin(3) * t7000 - t6453) * t6202 + pkin(2) * t7000;
t5697 = -t5825 * t7438 + t5826 * t6203;
t5545 = -t5697 * t7654 + (-pkin(3) * t7001 - t6454) * t6202 - pkin(2) * t7001;
t6472 = t6194 * t6644;
t6939 = t6167 * t7390;
t6711 = t5453 * t6939;
t6958 = t6167 * t7439;
t7081 = t6208 * t7610;
t7115 = t7705 * t6011;
t7182 = t5226 * t6098;
t5923 = t6161 * t7476;
t7798 = t5923 + t6059;
t5020 = ((t6913 + ((t5460 + 0.2e1 * t5443) * t6168 - (t5411 + t5226) * t7463 - ((t6218 + t7267) * t7726 + 0.2e1 * t6109 + t5972 * t6203 - pkin(2)) * t7580) * t7654 + ((0.2e1 * t6760 - t7263 + t7798) * t7022 + (-t7182 + t5453 * t6052 - (0.2e1 * t5993 * t6043 - 0.3e1 * t7185) * t7020) * t6168 + (t5247 * t7681 - t5972 * t7195) * t6203 + t6711 * t7648 - (t5987 + t7266 + t7798) * t7580) * t6202 + pkin(2) * ((-pkin(2) * t7068 + t5247 * t6203) * t6167 - (-t6958 * t7786 - t7115) * t7580)) * t7580 + (-t5544 * t6438 + t5545 * t6437) * t7647) * t5613 - (-(t5327 * t7473 + (t6411 / 0.2e1 + t5318) * t7257 + (t6052 * t5327 + (-pkin(3) * (t6043 - 0.2e1 * t7683) * t7020 - t7081) * t6193) * t6202 + pkin(2) * t7786 * t6658) * t5453 + (-t6159 * t6472 + (-pkin(3) * t5469 + t5327 * t7387 - t7610) * t6202 + pkin(2) * t5290) * t7610) * t5609;
t5375 = t5385 ^ 2 / t5645 ^ 2 * t6238;
t5358 = pkin(7) * t5375;
t5592 = 0.1e1 / t7829 ^ 2;
t5481 = t5489 ^ 2 * t5592;
t6474 = t5376 * t7580;
t6400 = t6167 * t6474;
t6324 = t6400 * t6230;
t7049 = t6194 * t5481;
t7156 = pkin(6) * t7463;
t7663 = pkin(7) * t6161;
t7782 = pkin(6) * t6954 + t6117;
t7863 = t5006 * t7746 + (-t6030 * t6168 + t7156) * t5020 - t5481 * ((t6215 - t7134 + t7663) * t7725 + pkin(7) - 0.2e1 * t7663 + t7782) - (pkin(2) * t7049 - pkin(7) * t6400) * t7233 - t6194 * t6324 + t5358;
t5395 = t5402 * pkin(7);
t5399 = pkin(8) * t5402;
t7302 = t5395 + t5399;
t7320 = (-t5340 / 0.2e1 + t7302) * t6085 + pkin(3) * t6911;
t5148 = t5390 + t7320;
t5187 = -t5340 + t7302;
t5951 = t6239 + t7781;
t6738 = t6208 * t6930;
t6425 = t5402 * t5951 - t6738;
t5201 = -t5462 * t5951 + t6425;
t5269 = t5388 + t5396;
t5947 = pkin(1) * t7476;
t5895 = t6168 * t5947;
t5914 = -0.2e1 / 0.3e1 * t7709 - t6232 / 0.3e1 - t6233 / 0.3e1 + t6239;
t7187 = pkin(2) * t7430;
t5953 = pkin(1) * t7187;
t6054 = pkin(2) * t6087;
t6086 = t6142 * t6236;
t6133 = t6236 + t6239;
t6134 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t6235 = pkin(3) * t6236;
t7160 = pkin(6) * t7476;
t6279 = (t5402 * t7160 + (((t5340 - 0.2e1 * t5399) * pkin(7) + t5398 + pkin(6) * t5337 + t7265 * t5402) * t6181 + t7086) * pkin(3)) * t6182 + ((0.2e1 * t5388 + 0.2e1 * t5396 + t7311) * t6182 + t5341) * t6054 + t7879 * t6086;
t6436 = 0.2e1 * t6054 + t6086;
t6302 = t6436 + t7476;
t5700 = (-t5806 * t6184 + (t6181 * t6239 - t7247) * t6167) * t6185;
t7251 = pkin(3) * t7694;
t6888 = t6142 * t7251;
t7193 = pkin(2) * t7471;
t6338 = t5962 * t7193 - t6182 * t6888 + t5700;
t6353 = t6167 * t6443;
t6354 = t6167 * t6444;
t6892 = -t6234 / 0.2e1 - t6236 / 0.2e1 + t6239 / 0.2e1;
t6384 = t6892 - t7781;
t7765 = 0.3e1 * t7781;
t6385 = t6236 + t7264 + t7765;
t7063 = t5995 * t5466;
t6703 = t5996 * t7063;
t6507 = t6208 * t6703;
t6395 = t6138 * t6507;
t6396 = t6996 * t7063;
t6742 = t6237 * t6930;
t6417 = t6742 * t7694;
t6429 = -t5462 * t5975 + t5187;
t6465 = -t7781 + t6133;
t6506 = t5995 * t5457;
t6905 = t6232 / 0.2e1 + t6233 / 0.2e1;
t6567 = t6905 + t7709;
t6624 = t6239 - t7765;
t6628 = t6181 * t6911;
t6629 = t6167 * t5941;
t6701 = t7488 * t5466;
t6702 = t5996 * t7060;
t6758 = t7705 * t5466;
t7087 = t6142 * t7612;
t6775 = pkin(3) * t7087;
t6953 = t6167 * t7430;
t6780 = pkin(1) * t6953;
t7189 = pkin(2) * t7456;
t6891 = 0.2e1 * t7189;
t6906 = 0.3e1 / 0.2e1 * t5914 * t6208;
t7707 = 0.3e1 / 0.2e1 * t6239 + t6567;
t6907 = t6168 * t7707;
t5618 = 0.1e1 / (t6167 * t6410 + t6270);
t7065 = t5618 * t5466;
t6403 = t6237 * (-t6239 / 0.2e1 + t6905);
t7152 = (pkin(7) * t7301 + pkin(8) * t5396 + t6403 * t7612 + t7320) * t6087;
t7455 = t6167 * t6237;
t7188 = pkin(2) * t7455;
t7204 = t6236 * t7694;
t7238 = 0.2e1 * t6168;
t7256 = 0.2e1 * t6087;
t7515 = t5995 * t6167;
t5726 = -t5995 * t7514 + t6168 * t6996;
t7519 = t5963 * t5996;
t5658 = -t5726 * t6183 + t6186 * t7519;
t5659 = t5726 * t6186 + t6183 * t7519;
t5775 = -t5995 * t7470 + t5996 * t6168;
t5730 = -t5775 * t6183 + t5975 * t6186;
t5731 = t5775 * t6186 + t5975 * t6183;
t6990 = t5996 * t7430;
t5746 = 0.2e1 * t6183 * t6990 + t6186 * t7523;
t6635 = t6186 * t6990;
t6928 = t6183 * t7523;
t5523 = ((-0.2e1 * t6635 + t6928) * t6079 + t5746 * t6075) * t6144 + (t5658 * t6075 + t5659 * t6079) * t6185 + t6208 * (t5730 * t6075 + t5731 * t6079);
t5574 = 0.1e1 / (t5700 + (-t5875 * t6184 + t6181 * t7189 - t6888) * t6182 + t6167 * t7217);
t7570 = t5523 * t5574;
t5522 = (t5746 * t6079 + 0.2e1 * (t6635 - t6928 / 0.2e1) * t6075) * t6144 + (t5658 * t6079 - t5659 * t6075) * t6185 + (t5730 * t6079 - t5731 * t6075) * t6208;
t7571 = t5522 * t5574;
t7692 = pkin(2) * t6167;
t7695 = pkin(1) * t6167;
t7728 = 0.2e1 * t6138;
t7769 = t6054 + t6086 - t6053;
t7793 = 0.2e1 * t6053 - t6086;
t7805 = t5303 * t7376 + t5400;
t7806 = t6237 * t7647;
t4999 = -t6237 * ((-(t6181 * t6780 + ((t6053 + t6465) * t6184 + (t5994 + t7657) * pkin(2)) * t7488) * t7061 + ((pkin(2) * t6650 - t5962 * t6701) * t7657 + ((-t6085 * t6429 + t6133 * t7085) * t6167 - pkin(2) * t5963 * t6701) * t6184 - (t6181 * t6429 - t7612) * t7692 - t6208 * (t7058 * t7118 + t6417)) * t6185 + t7087 * t7695 + (-t6208 * t5975 * t6758 + (t5962 * t7188 + t6181 * t7212) * t7612) * t6184 - (-t6182 * t7612 + (t5187 * t6182 - t5462 * t5962 + t5400) * t6181) * t7456 + t6417 * t7689) / ((-pkin(2) * t7212 - t5876 * t6167) * t6184 + t6338) * t7612 + (-(t6142 * t7204 + (t5995 * t7456 + t7252) * t7256 + t5995 * t6891 + t5895) * t7061 + (t6235 * t5303 * t6141 - (-t5995 * t6699 - 0.3e1 * t7693) * t6086 + (t6208 * t6628 + t5402 * t7707 - ((-pkin(2) * t7515 + t5974) * t6182 + t6907) * t5466) * t7256 - 0.2e1 * (t5995 * t6629 + t5953) * t7058 + pkin(2) * t5201) * t6185 + t7805 * t6086 + (t6506 / 0.2e1 + t7805 * pkin(2)) * t7256 + t5201 * t7376 + pkin(2) * t6506 + (-t5462 * t6166 + t6425) * pkin(1)) / (t6184 * t7851 + t6338) * t7607 - ((t6624 + t6436) * t6143 * t6701 * t7514 + (0.4e1 * t6395 + (0.3e1 * (t5914 + t6436) * t6510 - 0.2e1 * t7152 + (-0.2e1 * t5148 + t6775) * pkin(2)) * t6139 + ((t5402 * t6302 + t6738) * t7695 - 0.4e1 * t6507) * t6168 - 0.2e1 * (t6182 * t6906 + t5947 + t6436 * (t6134 * t6182 + pkin(1))) * t7060 - pkin(2) * t6775 + 0.2e1 * t7152 + t5148 * t6230) * t6144 + (-t6396 * t7728 + (-0.2e1 * (t6384 + t7769) * t6702 + t6279) * t6139 + (t6396 + ((t6628 + t7602) * t6091 - t7183 / 0.2e1 + t5398 / 0.2e1 + (t6086 / 0.2e1 + t6054 + t6567) * t5402) * t7514) * t7238 - (0.4e1 * t5979 + t6385 + t7793) * t6702 - t6279) * t6185 - 0.2e1 * t6395 + (-0.2e1 * (t6892 + t7769) * t6699 + (t5333 - t7773) * t6087 + pkin(2) * t5269) * t7478 + (((t5398 - t7183) * t6182 + pkin(1) * t5231) * t6167 + 0.2e1 * t6703 + (t6436 + t7781) * t7077) * t7430 - (t7729 + (t5897 + t7793) * t6182) * t5457 - (t5225 * t6091 - t6208 * t7773) * t6087 - t5269 * t7682) * t7065) + (-t6353 * t7571 + t6354 * t7570) * t7806;
t4968 = t5022 * t7469 - t4999;
t6964 = t6167 * t7446;
t7862 = -t6964 * t5465 - t4968;
t6716 = t5452 * t5374;
t6594 = pkin(2) * t6716;
t5261 = -0.2e1 * t6594;
t5932 = pkin(7) * t6197 - t7687;
t7287 = -t5467 - 0.2e1 * t5374;
t7633 = t5018 * t6167;
t5432 = t5452 * pkin(8);
t5433 = t5452 * pkin(7);
t6910 = -t7611 / 0.2e1;
t7318 = (t5433 + t5432 - t5367 / 0.2e1) * t6096 + pkin(3) * t6910;
t5151 = t5416 + t7318;
t7294 = t5433 - t5367;
t5195 = t5432 + t7294;
t6733 = t6208 * t6926;
t6424 = t5452 * t5951 - t6733;
t5202 = -t5473 * t5951 + t6424;
t5277 = t5410 + t5434;
t6060 = pkin(2) * t6100;
t6099 = t6151 * t6236;
t6276 = (t5452 * t7160 + (((t5367 - 0.2e1 * t5432) * pkin(7) + t5436 + pkin(6) * t5362 + t7265 * t5452) * t6187 + t7083) * pkin(3)) * t6188 + ((0.2e1 * t5434 + t7771) * t6188 + t5370) * t6060 + t7878 * t6099;
t6435 = 0.2e1 * t6060 + t6099;
t6301 = t6435 + t7476;
t5723 = (-t5807 * t6196 + (t6187 * t6239 - t7246) * t6167) * t6197;
t6887 = t6151 * t7251;
t7192 = pkin(2) * t7468;
t6337 = t5967 * t7192 - t6188 * t6887 + t5723;
t6351 = t6167 * t6441;
t6352 = t6167 * t6442;
t7045 = t6008 * t7582;
t6388 = t6995 * t7045;
t6681 = t6013 * t7045;
t6487 = t6208 * t6681;
t6393 = t6138 * t6487;
t6737 = t6237 * t6926;
t6416 = t6737 * t7694;
t6428 = -t5473 * t5980 + t5195;
t6486 = t6008 * t6646;
t6627 = t6187 * t6910;
t6679 = t7488 * t7582;
t6680 = t6013 * t7042;
t6757 = t7705 * t7582;
t7084 = t6151 * t7611;
t6774 = pkin(3) * t7084;
t5622 = 0.1e1 / (t6167 * t6409 + t6269);
t7047 = t5622 * t7582;
t7184 = (pkin(6) * t5432 + pkin(7) * t7293 + t6403 * t7611 + t7318) * t6100;
t7255 = 0.2e1 * t6100;
t7511 = t6008 * t6167;
t5727 = -t6008 * t7505 + t6168 * t6995;
t7518 = t5970 * t6013;
t5660 = -t5727 * t6189 + t6198 * t7518;
t5663 = t5727 * t6198 + t6189 * t7518;
t5779 = -t6008 * t7467 + t6013 * t6168;
t5734 = -t5779 * t6189 + t5980 * t6198;
t5737 = t5779 * t6198 + t5980 * t6189;
t6983 = t6013 * t7430;
t5747 = 0.2e1 * t6189 * t6983 + t6198 * t7522;
t6634 = t6198 * t6983;
t6924 = t6189 * t7522;
t5527 = ((-0.2e1 * t6634 + t6924) * t6080 + t5747 * t6076) * t6153 + (t5660 * t6076 + t5663 * t6080) * t6197 + t6208 * (t5734 * t6076 + t5737 * t6080);
t5575 = 0.1e1 / (t5723 + (-t5875 * t6196 + t6187 * t7189 - t6887) * t6188 + t6167 * t7216);
t7566 = t5527 * t5575;
t5524 = (t5747 * t6080 + 0.2e1 * (t6634 - t6924 / 0.2e1) * t6076) * t6153 + (t5660 * t6080 - t5663 * t6076) * t6197 + (t5734 * t6080 - t5737 * t6076) * t6208;
t7569 = t5524 * t5575;
t7768 = t6060 + t6099 - t6057;
t7791 = 0.2e1 * t6057 - t6099;
t7802 = t5321 * t7375 + t5447;
t5000 = -t6237 * ((-(t6187 * t6780 + ((t6057 + t6465) * t6196 + (t6007 + t7656) * pkin(2)) * t7488) * t7043 + ((pkin(2) * t6649 - t5967 * t6679) * t7656 + ((t5374 * t6133 - t6096 * t6428) * t6167 - pkin(2) * t5970 * t6679) * t6196 - (t6187 * t6428 - t7611) * t7692 - t6208 * (t7040 * t7117 + t6416)) * t6197 + t7084 * t7695 + (-t6208 * t5980 * t6757 + (t5967 * t7188 + t6187 * t7210) * t7611) * t6196 - (-t6188 * t7611 + (t5195 * t6188 - t5473 * t5967 + t5447) * t6187) * t7456 + t6416 * t7687) / ((-pkin(2) * t7210 - t5880 * t6167) * t6196 + t6337) * t7611 + (-(t6151 * t7204 + (t6008 * t7456 + t7252) * t7255 + t6008 * t6891 + t5895) * t7043 + (t6235 * t5321 * t6150 + (t6208 * t6627 + t5452 * t7707 - ((-pkin(2) * t7511 + t5974) * t6188 + t6907) * t7582) * t7255 - 0.2e1 * (t6008 * t6629 + t5953) * t7040 + pkin(2) * t5202) * t6197 + (t6486 / 0.2e1 + t7802 * pkin(2)) * t7255 + t5202 * t7375 + pkin(2) * t6486 + (-t5473 * t6166 + t6424) * pkin(1) + ((0.3e1 * t5316 + t7870) * t6197 + t7802) * t6099) / (t6196 * t7850 + t6337) * t7594 - ((t6624 + t6435) * t6152 * t6679 * t7505 + (0.4e1 * t6393 + (0.3e1 * (t5914 + t6435) * t6488 - 0.2e1 * t7184 + (-0.2e1 * t5151 + t6774) * pkin(2)) * t6139 + ((t5452 * t6301 + t6733) * t7695 - 0.4e1 * t6487) * t6168 - 0.2e1 * (t6188 * t6906 + t5947 + t6435 * (t6134 * t6188 + pkin(1))) * t7042 - pkin(2) * t6774 + 0.2e1 * t7184 + t5151 * t6230) * t6153 + (-t6388 * t7728 + (-0.2e1 * (t6384 + t7768) * t6680 + t6276) * t6139 + (t6388 + ((t6627 + t7589) * t6115 - t7181 / 0.2e1 + t5436 / 0.2e1 + (t6099 / 0.2e1 + t6060 + t6567) * t5452) * t7505) * t7238 - (0.4e1 * t5985 + t6385 + t7791) * t6680 - t6276) * t6197 - 0.2e1 * t6393 + ((t6892 + t7768) * t6605 + (t5346 - t7775) * t6100 + pkin(2) * t5277) * t7478 + (((t5436 - t7181) * t6188 + t5242 * pkin(1)) * t6167 + 0.2e1 * t6681 + (t6435 + t7781) * t7072) * t7430 - (t7729 + (t5897 + t7791) * t6188) * t6646 - (t5227 * t6115 - t6208 * t7775) * t6100 - t5277 * t7682) * t7047) + (-t6351 * t7569 + t6352 * t7566) * t7806;
t7673 = pkin(7) * t5000;
t7861 = t5932 * t7633 - (pkin(2) * t7287 - pkin(7) * t6677) * t5473 + t5261 - t7673;
t6719 = t5451 * t5378;
t6579 = pkin(2) * t6719;
t5260 = -0.2e1 * t6579;
t5933 = pkin(7) * t6200 - t7685;
t7286 = -t5468 - 0.2e1 * t5378;
t7630 = t5019 * t6167;
t5427 = t5451 * pkin(8);
t5428 = t5451 * pkin(7);
t6908 = -t7609 / 0.2e1;
t7319 = (t5428 + t5427 - t5369 / 0.2e1) * t6097 + pkin(3) * t6908;
t5150 = t5415 + t7319;
t7296 = t5428 - t5369;
t5197 = t5427 + t7296;
t6723 = t6208 * t6923;
t6422 = t5451 * t5951 - t6723;
t5203 = -t5474 * t5951 + t6422;
t5276 = t5409 + t5429;
t6061 = pkin(2) * t6104;
t6103 = t6155 * t6236;
t6278 = (t5451 * t7160 + (((t5369 - 0.2e1 * t5427) * pkin(7) + t5430 + pkin(6) * t5363 + t7265 * t5451) * t6190 + t7079) * pkin(3)) * t6191 + ((0.2e1 * t5429 + t7772) * t6191 + t5372) * t6061 + t7876 * t6103;
t6434 = 0.2e1 * t6061 + t6103;
t6300 = t6434 + t7476;
t5724 = (-t5808 * t6199 + (t6190 * t6239 - t7245) * t6167) * t6200;
t6886 = t6155 * t7251;
t7191 = pkin(2) * t7466;
t6336 = t5968 * t7191 - t6191 * t6886 + t5724;
t6349 = t6167 * t6439;
t6350 = t6167 * t6440;
t7034 = t6010 * t7581;
t6387 = t6994 * t7034;
t6671 = t6016 * t7034;
t6479 = t6208 * t6671;
t6391 = t6138 * t6479;
t6727 = t6237 * t6923;
t6414 = t6727 * t7694;
t6426 = -t5474 * t5981 + t5197;
t6478 = t6010 * t6645;
t6626 = t6190 * t6908;
t6669 = t7488 * t7581;
t6670 = t6016 * t7031;
t6756 = t7705 * t7581;
t7080 = t6155 * t7609;
t6772 = pkin(3) * t7080;
t5623 = 0.1e1 / (t6167 * t6408 + t6268);
t7036 = t5623 * t7581;
t7151 = (pkin(6) * t5427 + pkin(7) * t7295 + t6403 * t7609 + t7319) * t6104;
t7254 = 0.2e1 * t6104;
t7509 = t6010 * t6167;
t5728 = -t6010 * t7502 + t6168 * t6994;
t7517 = t5971 * t6016;
t5661 = -t5728 * t6192 + t6201 * t7517;
t5664 = t5728 * t6201 + t6192 * t7517;
t5780 = -t6010 * t7465 + t6016 * t6168;
t5735 = -t5780 * t6192 + t5981 * t6201;
t5738 = t5780 * t6201 + t5981 * t6192;
t6982 = t6016 * t7430;
t5748 = 0.2e1 * t6192 * t6982 + t6201 * t7521;
t6633 = t6201 * t6982;
t6921 = t6192 * t7521;
t5528 = ((-0.2e1 * t6633 + t6921) * t6081 + t5748 * t6077) * t6157 + (t5661 * t6077 + t5664 * t6081) * t6200 + t6208 * (t5735 * t6077 + t5738 * t6081);
t5576 = 0.1e1 / (t5724 + (-t5875 * t6199 + t6190 * t7189 - t6886) * t6191 + t6167 * t7215);
t7565 = t5528 * t5576;
t5525 = (t5748 * t6081 + 0.2e1 * (t6633 - t6921 / 0.2e1) * t6077) * t6157 + (t5661 * t6081 - t5664 * t6077) * t6200 + (t5735 * t6081 - t5738 * t6077) * t6208;
t7568 = t5525 * t5576;
t7767 = t6061 + t6103 - t6058;
t7790 = 0.2e1 * t6058 - t6103;
t7803 = t5324 * t7374 + t5446;
t5001 = -t6237 * ((-(t6190 * t6780 + ((t6058 + t6465) * t6199 + (t6009 + t7655) * pkin(2)) * t7488) * t7032 + ((pkin(2) * t6647 - t5968 * t6669) * t7655 + ((t5378 * t6133 - t6097 * t6426) * t6167 - pkin(2) * t5971 * t6669) * t6199 - (t6190 * t6426 - t7609) * t7692 - t6208 * (t7029 * t7116 + t6414)) * t6200 + t7080 * t7695 + (-t6208 * t5981 * t6756 + (t5968 * t7188 + t6190 * t7209) * t7609) * t6199 - (-t6191 * t7609 + (t5197 * t6191 - t5474 * t5968 + t5446) * t6190) * t7456 + t6414 * t7685) / ((-pkin(2) * t7209 - t5881 * t6167) * t6199 + t6336) * t7609 + (-(t6155 * t7204 + (t6010 * t7456 + t7252) * t7254 + t6010 * t6891 + t5895) * t7032 + (t6235 * t5324 * t6154 + (t6208 * t6626 + t5451 * t7707 - ((-pkin(2) * t7509 + t5974) * t6191 + t6907) * t7581) * t7254 - 0.2e1 * (t6010 * t6629 + t5953) * t7029 + pkin(2) * t5203) * t6200 + (t6478 / 0.2e1 + t7803 * pkin(2)) * t7254 + t5203 * t7374 + pkin(2) * t6478 + (-t5474 * t6166 + t6422) * pkin(1) + ((0.3e1 * t5317 + t7869) * t6200 + t7803) * t6103) / (t6199 * t7849 + t6336) * t7600 - ((t6624 + t6434) * t6156 * t6669 * t7502 + (0.4e1 * t6391 + (0.3e1 * (t5914 + t6434) * t6480 - 0.2e1 * t7151 + (-0.2e1 * t5150 + t6772) * pkin(2)) * t6139 + ((t5451 * t6300 + t6723) * t7695 - 0.4e1 * t6479) * t6168 - 0.2e1 * (t6191 * t6906 + t5947 + t6434 * (t6134 * t6191 + pkin(1))) * t7031 - pkin(2) * t6772 + 0.2e1 * t7151 + t5150 * t6230) * t6157 + (-t6387 * t7728 + (-0.2e1 * (t6384 + t7767) * t6670 + t6278) * t6139 + (t6387 + ((t6626 + t7596) * t6116 - t7180 / 0.2e1 + t5430 / 0.2e1 + (t6103 / 0.2e1 + t6061 + t6567) * t5451) * t7502) * t7238 - (0.4e1 * t5986 + t6385 + t7790) * t6670 - t6278) * t6200 - 0.2e1 * t6391 + ((t6892 + t7767) * t6603 + (t5348 - t7774) * t6104 + pkin(2) * t5276) * t7478 + (((t5430 - t7180) * t6191 + pkin(1) * t5243) * t6167 + 0.2e1 * t6671 + (t6434 + t7781) * t7075) * t7430 - (t7729 + (t5897 + t7790) * t6191) * t6645 - (t5228 * t6116 - t6208 * t7774) * t6104 - t5276 * t7682) * t7036) + (-t6349 * t7568 + t6350 * t7565) * t7806;
t7672 = pkin(7) * t5001;
t7860 = t5933 * t7630 - (pkin(2) * t7286 - pkin(7) * t6667) * t5474 + t5260 - t7672;
t6713 = t5453 * t5376;
t6593 = pkin(2) * t6713;
t5262 = -0.2e1 * t6593;
t5934 = pkin(7) * t6203 - t7683;
t7285 = -t5469 - 0.2e1 * t5376;
t7627 = t5020 * t6167;
t5438 = t5453 * pkin(8);
t5439 = t5453 * pkin(7);
t6909 = -t7610 / 0.2e1;
t7317 = (t5439 + t5438 - t5368 / 0.2e1) * t6098 + pkin(3) * t6909;
t5152 = t5417 + t7317;
t7292 = t5439 - t5368;
t5196 = t5438 + t7292;
t6728 = t6208 * t6920;
t6423 = t5453 * t5951 - t6728;
t5204 = -t5475 * t5951 + t6423;
t5278 = t5411 + t5440;
t6062 = pkin(2) * t6108;
t6107 = t6159 * t6236;
t6277 = (t5453 * t7160 + (((t5368 - 0.2e1 * t5438) * pkin(7) + t5442 + pkin(6) * t5359 + t7265 * t5453) * t6193 + t7081) * pkin(3)) * t6194 + ((0.2e1 * t5440 + t7770) * t6194 + t5371) * t6062 + t7877 * t6107;
t6433 = 0.2e1 * t6062 + t6107;
t6299 = t6433 + t7476;
t5725 = (-t5809 * t6202 + (t6193 * t6239 - t7244) * t6167) * t6203;
t6885 = t6159 * t7251;
t7190 = pkin(2) * t7464;
t6335 = t5969 * t7190 - t6194 * t6885 + t5725;
t6347 = t6167 * t6437;
t6348 = t6167 * t6438;
t7023 = t6012 * t7580;
t6386 = t6993 * t7023;
t6661 = t6019 * t7023;
t6471 = t6208 * t6661;
t6389 = t6138 * t6471;
t6732 = t6237 * t6920;
t6415 = t6732 * t7694;
t6427 = -t5475 * t5982 + t5196;
t6470 = t6012 * t6644;
t6625 = t6193 * t6909;
t6659 = t7488 * t7580;
t6660 = t6019 * t7020;
t6755 = t7705 * t7580;
t7082 = t6159 * t7610;
t6773 = pkin(3) * t7082;
t5624 = 0.1e1 / (t6167 * t6407 + t6267);
t7025 = t5624 * t7580;
t7150 = (pkin(6) * t5438 + pkin(7) * t7291 + t6403 * t7610 + t7317) * t6108;
t7253 = 0.2e1 * t6108;
t7507 = t6012 * t6167;
t5729 = -t6012 * t7499 + t6168 * t6993;
t7516 = t5972 * t6019;
t5662 = -t5729 * t6195 + t6204 * t7516;
t5665 = t5729 * t6204 + t6195 * t7516;
t5781 = -t6012 * t7463 + t6019 * t6168;
t5736 = -t5781 * t6195 + t5982 * t6204;
t5739 = t5781 * t6204 + t5982 * t6195;
t6981 = t6019 * t7430;
t5749 = 0.2e1 * t6195 * t6981 + t6204 * t7520;
t6632 = t6204 * t6981;
t6918 = t6195 * t7520;
t5529 = ((-0.2e1 * t6632 + t6918) * t6082 + t5749 * t6078) * t6161 + (t5662 * t6078 + t5665 * t6082) * t6203 + t6208 * (t5736 * t6078 + t5739 * t6082);
t5577 = 0.1e1 / (t5725 + (-t5875 * t6202 + t6193 * t7189 - t6885) * t6194 + t6167 * t7214);
t7564 = t5529 * t5577;
t5526 = (t5749 * t6082 + 0.2e1 * (t6632 - t6918 / 0.2e1) * t6078) * t6161 + (t5662 * t6082 - t5665 * t6078) * t6203 + (t5736 * t6082 - t5739 * t6078) * t6208;
t7567 = t5526 * t5577;
t7766 = t6062 + t6107 - t6059;
t7789 = 0.2e1 * t6059 - t6107;
t7804 = t5327 * t7373 + t5444;
t5002 = -t6237 * ((-(t6193 * t6780 + ((t6059 + t6465) * t6202 + (t6011 + t7654) * pkin(2)) * t7488) * t7021 + ((pkin(2) * t6648 - t5969 * t6659) * t7654 + ((t5376 * t6133 - t6098 * t6427) * t6167 - pkin(2) * t5972 * t6659) * t6202 - (t6193 * t6427 - t7610) * t7692 - t6208 * (t7018 * t7115 + t6415)) * t6203 + t7082 * t7695 + (-t6208 * t5982 * t6755 + (t5969 * t7188 + t6193 * t7208) * t7610) * t6202 - (-t6194 * t7610 + (t5196 * t6194 - t5475 * t5969 + t5444) * t6193) * t7456 + t6415 * t7683) / ((-pkin(2) * t7208 - t5882 * t6167) * t6202 + t6335) * t7610 + (-(t6159 * t7204 + (t6012 * t7456 + t7252) * t7253 + t6012 * t6891 + t5895) * t7021 + (t6235 * t5327 * t6158 + (t6208 * t6625 + t5453 * t7707 - ((-pkin(2) * t7507 + t5974) * t6194 + t6907) * t7580) * t7253 - 0.2e1 * (t6012 * t6629 + t5953) * t7018 + pkin(2) * t5204) * t6203 + (t6470 / 0.2e1 + t7804 * pkin(2)) * t7253 + t5204 * t7373 + pkin(2) * t6470 + (-t5475 * t6166 + t6423) * pkin(1) + ((0.3e1 * t5318 + t7868) * t6203 + t7804) * t6107) / (t6202 * t7848 + t6335) * t7587 - ((t6624 + t6433) * t6160 * t6659 * t7499 + (0.4e1 * t6389 + (0.3e1 * (t5914 + t6433) * t6472 - 0.2e1 * t7150 + (-0.2e1 * t5152 + t6773) * pkin(2)) * t6139 + ((t5453 * t6299 + t6728) * t7695 - 0.4e1 * t6471) * t6168 - 0.2e1 * (t6194 * t6906 + t5947 + t6433 * (t6134 * t6194 + pkin(1))) * t7020 - pkin(2) * t6773 + 0.2e1 * t7150 + t5152 * t6230) * t6161 + (-t6386 * t7728 + (-0.2e1 * (t6384 + t7766) * t6660 + t6277) * t6139 + (t6386 + ((t6625 + t7583) * t6117 - t7182 / 0.2e1 + t5442 / 0.2e1 + (t6107 / 0.2e1 + t6062 + t6567) * t5453) * t7499) * t7238 - (0.4e1 * t5987 + t6385 + t7789) * t6660 - t6277) * t6203 - 0.2e1 * t6389 + ((t6892 + t7766) * t6601 + (t5347 - t7776) * t6108 + pkin(2) * t5278) * t7478 + (((t5442 - t7182) * t6194 + pkin(1) * t5244) * t6167 + 0.2e1 * t6661 + (t6433 + t7781) * t7069) * t7430 - (t7729 + (t5897 + t7789) * t6194) * t6644 - (t5226 * t6117 - t6208 * t7776) * t6108 - t5278 * t7682) * t7025) + (-t6347 * t7567 + t6348 * t7564) * t7806;
t7671 = pkin(7) * t5002;
t7859 = t5934 * t7627 - (pkin(2) * t7285 - pkin(7) * t6657) * t5475 + t5262 - t7671;
t4972 = t5018 * t7461 - t5000;
t6961 = t6167 * t7442;
t7858 = -t6961 * t5479 - t4972;
t4973 = t5019 * t7459 - t5001;
t6959 = t6167 * t7440;
t7857 = -t6959 * t5480 - t4973;
t4974 = t5020 * t7457 - t5002;
t6957 = t6167 * t7438;
t7856 = -t6957 * t5481 - t4974;
t5021 = t6168 * t5022;
t6090 = pkin(7) * t6182;
t5999 = t6090 + pkin(1);
t5401 = t5402 ^ 2;
t7734 = -0.2e1 * t5462;
t6421 = t5402 * t7734 + t5401;
t6771 = pkin(6) * t6964;
t7527 = (pkin(7) * t7414 - pkin(2) + t6088) * t6139;
t7670 = pkin(7) * t5003;
t7855 = -t5021 * t6000 + t6421 * pkin(2) + (t5999 * t6185 + t6088 - t6771 - t7527) * t5465 - t7670;
t5015 = t6168 * t5018;
t6022 = pkin(7) * t6188 + pkin(1);
t5449 = t5452 ^ 2;
t7733 = -0.2e1 * t5473;
t6419 = t5452 * t7733 + t5449;
t6769 = pkin(6) * t6961;
t7526 = (pkin(7) * t7403 - pkin(2) + t6101) * t6139;
t7669 = pkin(7) * t5004;
t7854 = -t5015 * t6025 + t6419 * pkin(2) + (t6022 * t6197 + t6101 - t6769 - t7526) * t5479 - t7669;
t5016 = t6168 * t5019;
t6023 = pkin(7) * t6191 + pkin(1);
t5448 = t5451 ^ 2;
t7732 = -0.2e1 * t5474;
t6420 = t5451 * t7732 + t5448;
t6768 = pkin(6) * t6959;
t7525 = (pkin(7) * t7393 - pkin(2) + t6105) * t6139;
t7668 = pkin(7) * t5005;
t7853 = -t5016 * t6026 + t6420 * pkin(2) + (t6023 * t6200 + t6105 - t6768 - t7525) * t5480 - t7668;
t5017 = t6168 * t5020;
t6024 = pkin(7) * t6194 + pkin(1);
t5450 = t5453 ^ 2;
t7731 = -0.2e1 * t5475;
t6418 = t5453 * t7731 + t5450;
t6767 = pkin(6) * t6957;
t7524 = (pkin(7) * t7383 - pkin(2) + t6109) * t6139;
t7667 = pkin(7) * t5006;
t7852 = -t5017 * t6027 + t6418 * pkin(2) + (t6024 * t6203 + t6109 - t6767 - t7524) * t5481 - t7667;
t5908 = t6089 + t5999;
t7240 = 0.2e1 * t5022;
t7674 = pkin(7) * t4999;
t7836 = -t6167 * (t4999 * t7815 + (pkin(6) * t5003 + t7674) * t6182) - (-t5908 * t6185 + t7527) * t7240 - (-t5003 * t6001 + t7159 * t7240) * t6168;
t5916 = t6102 + t6022;
t7243 = 0.2e1 * t5018;
t7835 = t6167 * (t5000 * t7814 + (pkin(6) * t5004 + t7673) * t6188) + (-t5916 * t6197 + t7526) * t7243 + (-t5004 * t6028 + t7158 * t7243) * t6168;
t5918 = t6106 + t6023;
t7242 = 0.2e1 * t5019;
t7834 = t6167 * (t5001 * t7813 + (pkin(6) * t5005 + t7672) * t6191) + (-t5918 * t6200 + t7525) * t7242 + (-t5005 * t6029 + t7157 * t7242) * t6168;
t5920 = t6110 + t6024;
t7241 = 0.2e1 * t5020;
t7833 = t6167 * (t5002 * t7812 + (pkin(6) * t5006 + t7671) * t6194) + (-t5920 * t6203 + t7524) * t7241 + (-t5006 * t6030 + t7156 * t7241) * t6168;
t7828 = 0.2e1 * t5402;
t7827 = 0.2e1 * t6167;
t7649 = t7705 * pkin(6);
t7597 = t5451 * t6199;
t7590 = t5452 * t6196;
t7584 = t5453 * t6202;
t6047 = t6144 - 0.1e1 / 0.2e1;
t6818 = t6047 * t7230;
t7756 = pkin(2) * t6818 + t5899 * t7515 + t6087 * (t5995 * t7469 + t6818) - t6974 * t7444;
t6049 = t6153 - 0.1e1 / 0.2e1;
t6890 = -0.2e1 * t7187;
t7755 = t5903 * t7511 - t6049 * t6890 + t6100 * (t6008 * t7461 + t6049 * t7230) - t6973 * t7436;
t6050 = t6157 - 0.1e1 / 0.2e1;
t7754 = t5904 * t7509 - t6050 * t6890 + t6104 * (t6010 * t7459 + t6050 * t7230) - t6972 * t7434;
t6051 = t6161 - 0.1e1 / 0.2e1;
t7753 = t5905 * t7507 - t6051 * t6890 + t6108 * (t6012 * t7457 + t6051 * t7230) - t6971 * t7432;
t7743 = 0.2e1 * pkin(7);
t7742 = 0.2e1 * t5456 - 0.2e1 * t6631;
t7741 = 0.2e1 * t5467 + t5374;
t7740 = 0.2e1 * t5468 + t5378;
t7739 = 0.2e1 * t5469 + t5376;
t7738 = -0.2e1 * t5402;
t7737 = -0.2e1 * t5451;
t7736 = -0.2e1 * t5452;
t7735 = -0.2e1 * t5453;
t7724 = -0.2e1 * t6153;
t7723 = -0.2e1 * t6157;
t7722 = -0.2e1 * t6161;
t7721 = -0.2e1 * t6167;
t7719 = -0.2e1 * t6168;
t7718 = -0.2e1 * t6181;
t7717 = -0.2e1 * t6184;
t7715 = -0.2e1 * t6187;
t7714 = -0.2e1 * t6190;
t7713 = -0.2e1 * t6193;
t7712 = -0.2e1 * t6196;
t7711 = -0.2e1 * t6199;
t7710 = -0.2e1 * t6202;
t7706 = -0.4e1 * t6139 + 0.4e1;
t7704 = t7725 - 0.2e1;
t7702 = 0.4e1 * t6142 - 0.2e1;
t7701 = 0.2e1 * t6151 - 0.1e1;
t7700 = 0.4e1 * t6151 - 0.2e1;
t7699 = 0.2e1 * t6155 - 0.1e1;
t7698 = 0.4e1 * t6155 - 0.2e1;
t7697 = 0.2e1 * t6159 - 0.1e1;
t7696 = 0.4e1 * t6159 - 0.2e1;
t7680 = pkin(6) * t6167;
t7642 = t4968 * t6185;
t7641 = t4972 * t6197;
t7640 = t4973 * t6200;
t7639 = t4974 * t6203;
t7634 = t5018 * t6188 ^ 2;
t7632 = t5018 * t6197;
t7631 = t5019 * t6191 ^ 2;
t7629 = t5019 * t6200;
t7628 = t5020 * t6194 ^ 2;
t7626 = t5020 * t6203;
t7625 = t5022 * t6182 ^ 2;
t7624 = t5022 * t6167;
t7623 = t5022 * t6185;
t7604 = t5402 * t6184;
t7601 = t5451 * t5488;
t7595 = t5452 * t5487;
t7588 = t5453 * t5489;
t5887 = t6183 * t6223 - t6186 * t6219;
t5888 = t6183 * t6219 + t6186 * t6223;
t5751 = t5887 * t6131 + t5888 * t6132;
t6448 = t5887 * t6132 - t5888 * t6131;
t5647 = t5751 * t6079 - t6075 * t6448;
t7579 = (t6334 * (t5751 * t6075 + t6079 * t6448) + (-t7276 * t6139 + ((t6069 * t6087 + t5851) * t6181 - t7679) * t7472 + (-t5994 * t6139 - t7847) * t6182) * t5647) / (-t5766 + t6167 * ((pkin(2) * t5883 + t6087 * t7815) * t6181 - t6900 * t7679));
t5891 = t6192 * t6225 - t6201 * t6221;
t5892 = t6192 * t6221 + t6201 * t6225;
t5753 = t5891 * t6131 + t5892 * t6132;
t6446 = t5891 * t6132 - t5892 * t6131;
t5652 = t5753 * t6081 - t6077 * t6446;
t7578 = (t6332 * (t6077 * t5753 + t6081 * t6446) + (-t7274 * t6139 + ((t6071 * t6104 + t5859) * t6190 - t7677) * t7472 + (-t6009 * t6139 - t7845) * t6191) * t5652) / (-t5768 + t6167 * ((pkin(2) * t5885 + t6104 * t7813) * t6190 - t6898 * t7677));
t5893 = t6195 * t6226 - t6204 * t6222;
t5894 = t6195 * t6222 + t6204 * t6226;
t5754 = t5893 * t6131 + t5894 * t6132;
t6445 = t5893 * t6132 - t5894 * t6131;
t5654 = t5754 * t6082 - t6078 * t6445;
t7577 = (t6331 * (t6078 * t5754 + t6082 * t6445) + (-t7273 * t6139 + ((t6072 * t6108 + t5860) * t6193 - t7676) * t7472 + (-t6011 * t6139 - t7844) * t6194) * t5654) / (-t5769 + ((pkin(2) * t5886 + t6108 * t7812) * t6193 - t6897 * t7676) * t6167);
t5889 = t6189 * t6224 - t6198 * t6220;
t5890 = t6189 * t6220 + t6198 * t6224;
t5752 = t5889 * t6131 + t5890 * t6132;
t6447 = t5889 * t6132 - t5890 * t6131;
t5650 = t5752 * t6080 - t6076 * t6447;
t7576 = (t6333 * (t5752 * t6076 + t6080 * t6447) + (-t7275 * t6139 + ((t6070 * t6100 + t5858) * t6187 - t7678) * t7472 + (-t6007 * t6139 - t7846) * t6188) * t5650) / (-t5767 + t6167 * ((pkin(2) * t5884 + t6100 * t7814) * t6187 - t6899 * t7678));
t7368 = t6208 * t6223;
t7372 = t6208 * t6219;
t7429 = t6168 * t6219;
t5698 = (pkin(2) * t6223 - t6168 * t7372) * t6185 + (pkin(2) * t7429 + t7368) * t6182 - t6219 * t7175;
t7425 = t6168 * t6223;
t5699 = (pkin(2) * t6219 + t6168 * t7368) * t6185 + (-pkin(2) * t7425 + t7372) * t6182 + t6223 * t7175;
t5581 = t5698 * t6186 + t5699 * t6183;
t5582 = -t5698 * t6183 + t5699 * t6186;
t5852 = t6182 * t7429 + t6185 * t6223;
t5853 = t6182 * t7425 - t6185 * t6219;
t5732 = t5852 * t6186 - t5853 * t6183;
t5733 = t5852 * t6183 + t5853 * t6186;
t5498 = -((-t5732 * t6131 + t5733 * t6132) * t6079 + (t5732 * t6132 + t5733 * t6131) * t6075) * t7657 + ((t5581 * t6131 + t5582 * t6132) * t6079 - (t5581 * t6132 - t5582 * t6131) * t6075) * t6184 + t5647 * t7193;
t7575 = t5498 * t7893;
t7367 = t6208 * t6224;
t7371 = t6208 * t6220;
t7428 = t6168 * t6220;
t5705 = (pkin(2) * t6224 - t6168 * t7371) * t6197 + (pkin(2) * t7428 + t7367) * t6188 - t6220 * t7174;
t7424 = t6168 * t6224;
t5708 = (pkin(2) * t6220 + t6168 * t7367) * t6197 + (-pkin(2) * t7424 + t7371) * t6188 + t6224 * t7174;
t5584 = t5705 * t6198 + t5708 * t6189;
t5587 = -t5705 * t6189 + t5708 * t6198;
t5861 = t6188 * t7428 + t6197 * t6224;
t5864 = t6188 * t7424 - t6197 * t6220;
t5740 = t5861 * t6198 - t5864 * t6189;
t5743 = t5861 * t6189 + t5864 * t6198;
t5499 = -((-t5740 * t6131 + t5743 * t6132) * t6080 + (t5740 * t6132 + t5743 * t6131) * t6076) * t7656 + ((t5584 * t6131 + t5587 * t6132) * t6080 - (t5584 * t6132 - t5587 * t6131) * t6076) * t6196 + t5650 * t7192;
t7574 = t5499 * t7894;
t7366 = t6208 * t6225;
t7370 = t6208 * t6221;
t7427 = t6168 * t6221;
t5706 = (pkin(2) * t6225 - t6168 * t7370) * t6200 + (pkin(2) * t7427 + t7366) * t6191 - t6221 * t7173;
t7423 = t6168 * t6225;
t5709 = (pkin(2) * t6221 + t6168 * t7366) * t6200 + (-pkin(2) * t7423 + t7370) * t6191 + t6225 * t7173;
t5585 = t5706 * t6201 + t5709 * t6192;
t5588 = -t5706 * t6192 + t5709 * t6201;
t5862 = t6191 * t7427 + t6200 * t6225;
t5865 = t6191 * t7423 - t6200 * t6221;
t5741 = t5862 * t6201 - t5865 * t6192;
t5744 = t5862 * t6192 + t5865 * t6201;
t5500 = -((-t5741 * t6131 + t5744 * t6132) * t6081 + (t5741 * t6132 + t5744 * t6131) * t6077) * t7655 + ((t5585 * t6131 + t5588 * t6132) * t6081 - (t5585 * t6132 - t5588 * t6131) * t6077) * t6199 + t5652 * t7191;
t7573 = t5500 * t7895;
t7365 = t6208 * t6226;
t7369 = t6208 * t6222;
t7426 = t6168 * t6222;
t5707 = (pkin(2) * t6226 - t6168 * t7369) * t6203 + (pkin(2) * t7426 + t7365) * t6194 - t6222 * t7172;
t7422 = t6168 * t6226;
t5710 = (pkin(2) * t6222 + t6168 * t7365) * t6203 + (-pkin(2) * t7422 + t7369) * t6194 + t6226 * t7172;
t5586 = t5707 * t6204 + t5710 * t6195;
t5589 = -t5707 * t6195 + t5710 * t6204;
t5863 = t6194 * t7426 + t6203 * t6226;
t5866 = t6194 * t7422 - t6203 * t6222;
t5742 = t5863 * t6204 - t5866 * t6195;
t5745 = t5863 * t6195 + t5866 * t6204;
t5501 = -((-t5742 * t6131 + t5745 * t6132) * t6082 + (t5742 * t6132 + t5745 * t6131) * t6078) * t7654 + ((t5586 * t6131 + t5589 * t6132) * t6082 - (t5586 * t6132 - t5589 * t6131) * t6078) * t6202 + t5654 * t7190;
t7572 = t5501 * t7896;
t7563 = t5530 * t5619;
t7562 = t5531 * t5619;
t7561 = t5532 * t5627;
t7560 = t5533 * t5627;
t7559 = t5534 * t5628;
t7558 = t5535 * t5628;
t7557 = t5536 * t5629;
t7556 = t5537 * t5629;
t7555 = t5538 * t5605;
t7554 = t5539 * t5605;
t7553 = t5540 * t5615;
t7552 = t5541 * t5615;
t7551 = t5542 * t5617;
t7550 = t5543 * t5617;
t7549 = t5544 * t5613;
t7548 = t5545 * t5613;
t5550 = t6130 * t6185 + (-t5995 * t6963 - t5975 + (t6139 - 0.2e1 * t6980) * t6208) * t5996 + ((t6139 * t7523 - t6302) * t6185 - t5995 * t6953) * t6182;
t7547 = t5550 * t5618;
t5551 = t6130 * t6197 + (-t6008 * t6956 - t5980 + (t6139 - 0.2e1 * t6979) * t6208) * t6013 + ((t6139 * t7522 - t6301) * t6197 - t6008 * t6953) * t6188;
t7546 = t5551 * t5622;
t5552 = t6130 * t6200 + (-t6010 * t6955 - t5981 + (t6139 - 0.2e1 * t6978) * t6208) * t6016 + ((t6139 * t7521 - t6300) * t6200 - t6010 * t6953) * t6191;
t7545 = t5552 * t5623;
t5553 = t6130 * t6203 + (-t6012 * t6954 - t5982 + (t6139 - 0.2e1 * t6977) * t6208) * t6019 + ((t6139 * t7520 - t6299) * t6203 - t6012 * t6953) * t6194;
t7544 = t5553 * t5624;
t6754 = t7703 * t7470;
t7420 = t6181 * t6184;
t7543 = ((-t7472 * t7792 + t7649) * t6184 + (-t5851 * t6139 + t5883 * t6185 - t6771) * t6181 + (t6168 * t6754 - t6623 * t7420) * pkin(3)) * t5603;
t6783 = -t6153 + t7491;
t6622 = t6783 + 0.1e1;
t6753 = t7701 * t7467;
t7542 = ((t7472 * t7788 + t7649) * t6196 + (-t5858 * t6139 + t5884 * t6197 - t6769) * t6187 + (t6168 * t6753 - t6622 * t7409) * pkin(3)) * t5610;
t6782 = -t6157 + t7490;
t6621 = t6782 + 0.1e1;
t6752 = t7699 * t7465;
t7541 = ((t7472 * t7787 + t7649) * t6199 + (-t5859 * t6139 + t5885 * t6200 - t6768) * t6190 + (t6168 * t6752 - t6621 * t7399) * pkin(3)) * t5611;
t6781 = -t6161 + t7489;
t6620 = t6781 + 0.1e1;
t6751 = t7697 * t7463;
t7540 = ((t7472 * t7786 + t7649) * t6202 + (-t5860 * t6139 + t5886 * t6203 - t6767) * t6193 + (t6168 * t6751 - t6620 * t7389) * pkin(3)) * t5609;
t5686 = -pkin(2) * t7447 - t6167 * t7145 + t7892 * t6184;
t7539 = t5605 * t5686;
t5691 = -pkin(2) * t7439 - t6167 * t7140 + t6202 * t7839;
t7538 = t5613 * t5691;
t5689 = -pkin(2) * t7443 - t6167 * t7142 + t6196 * t7837;
t7537 = t5615 * t5689;
t5690 = -pkin(2) * t7441 - t6167 * t7141 + t6199 * t7838;
t7536 = t5617 * t5690;
t6137 = t6167 ^ 2;
t7482 = t6137 * t6237;
t7462 = t6167 * t6196;
t7460 = t6167 * t6199;
t7458 = t6167 * t6202;
t7454 = t6168 * t5003;
t7453 = t6168 * t5004;
t7452 = t6168 * t5005;
t7451 = t6168 * t5006;
t5929 = pkin(7) * t6185 - t7689;
t7222 = t7704 * pkin(6);
t7231 = -0.2e1 * t7472;
t4899 = t4999 * t6000 * t6168 + ((pkin(6) * t4999 - t7670) * t6185 + t5003 * t7689) * t6167 + (t5929 * t7231 + t7222) * t5022;
t6722 = t5402 * t7085;
t5138 = (-pkin(7) * t5401 + t6722 * t7744 + t5338) * t6182 + pkin(1) * t5342;
t5237 = t5401 + t5342;
t5149 = t5338 + (pkin(1) * t5237 - t6326) * t6182;
t6721 = t5402 * t7058;
t5175 = t5237 * t7680 + t6721 * t7747;
t7303 = t5395 - t5340;
t5186 = t5389 + t7303;
t6740 = t6184 * t7085;
t6587 = pkin(2) * t6740;
t5230 = t7606 * t7743 + t6587;
t5236 = -t5396 + t5339;
t5275 = t5341 - t6779;
t6595 = pkin(2) * t6722;
t6275 = t6699 * t7303 - t6595;
t6398 = t5999 * t6512;
t6823 = 0.2e1 * t7061;
t6824 = -0.2e1 * t7062;
t7300 = t5401 - t5342;
t7364 = (t5230 * t6144 + (pkin(7) * t6740 + t7606 * t7746) * t7414 - t6587) * t6824 + ((t5236 * t6700 - t5275 * t7604) * t7826 + t6275 * t7237) * t6168 + t5230 * t6823 - 0.2e1 * t5186 * t7059 + (t5149 * t6168 + t5175 * t6185 - t6824 * t7303 - t7836) * t6181 + (-t4899 + (-t7300 * t7692 + 0.2e1 * t6398) * t6185 + t5138 * t6167) * t6184;
t6588 = pkin(2) * t6742;
t7232 = -0.2e1 * t7604;
t5229 = pkin(7) * t7232 + t6588;
t7057 = t6184 * t5466;
t7363 = t7836 * t6184 - t6181 * t4899 + (t5229 * t6144 + (pkin(7) * t6742 + t6184 * t7260) * t7414 + t7303 * t6184 - t6588) * t6824 + ((-t5236 * t6167 * t7057 - t5275 * t7606) * t7826 - t5149 * t6184 + 0.2e1 * t6275 * t6181) * t6168 + t5229 * t6823 + (-t5175 * t6184 + (-t6398 + (-t5342 / 0.2e1 + t5401 / 0.2e1) * t7692) * t7718) * t6185 + 0.2e1 * t5186 * t7057 + t5138 * t7471;
t6999 = t5932 * t7472;
t4900 = t5000 * t6025 * t6168 + ((pkin(6) * t5000 - t7669) * t6197 + t5004 * t7687) * t6167 + (-0.2e1 * t6999 + t7222) * t5018;
t5146 = (-pkin(7) * t5449 + t6716 * t7744 + t5364) * t6188 + pkin(1) * t5373;
t5264 = t5449 + t5373;
t5153 = t5364 + (pkin(1) * t5264 - t6325) * t6188;
t5193 = t5413 + t7294;
t6735 = t6196 * t5374;
t6585 = pkin(2) * t6735;
t5239 = t7592 * t7743 + t6585;
t5258 = t5434 - t5365;
t5294 = t5370 - t6778;
t6394 = t6022 * t6490;
t6534 = t7294 * t6677;
t7166 = t5264 * t7680;
t7289 = t5449 - t5373;
t7362 = t7835 * t6187 - t6196 * t4900 - 0.2e1 * (t5239 * t6153 + (pkin(7) * t6735 + t7592 * t7746) * t7403 - t6585 - t6187 * t7294) * t7044 + ((-t5258 * t6678 - t5294 * t7590) * t7235 + (t5261 + 0.2e1 * t6534) * t6196 + t5153 * t6187) * t6168 + 0.2e1 * t5239 * t7043 + (-t6394 * t7712 + t6187 * t7166 + (-0.4e1 * t5452 * t6676 - t7289 * t7462) * pkin(2)) * t6197 + t5146 * t7462 - 0.2e1 * t5193 * t7041;
t6469 = t6737 / 0.2e1;
t6574 = pkin(2) * t6737;
t6715 = t5452 * t7040;
t7039 = t6196 * t7582;
t7139 = pkin(7) * t7590;
t7361 = -t7835 * t6196 - t4900 * t6187 + 0.4e1 * ((t7139 - t6574 / 0.2e1) * t6153 - (pkin(2) * t7590 + pkin(7) * t6469) * t7403 + (t5367 / 0.2e1 - t5433 / 0.2e1) * t6196 + pkin(2) * t6469) * t7044 + ((t5258 * t6167 * t7039 - t5294 * t7592) * t7235 - t5153 * t6196 + 0.2e1 * (t6534 - t6594) * t6187) * t6168 - (-0.2e1 * t6574 + 0.4e1 * t7139) * t7043 + ((-t6715 * t7747 - t7166) * t6196 + ((t5449 / 0.2e1 - t5373 / 0.2e1) * t7692 - t6394) * t7715) * t6197 + 0.2e1 * t5193 * t7039 + t5146 * t7468;
t6998 = t5933 * t7472;
t4901 = t5001 * t6026 * t6168 + ((pkin(6) * t5001 - t7668) * t6200 + t5005 * t7685) * t6167 + (-0.2e1 * t6998 + t7222) * t5019;
t5145 = (-pkin(7) * t5448 + t6719 * t7744 + t5361) * t6191 + pkin(1) * t5377;
t5263 = t5448 + t5377;
t5155 = t5361 + (pkin(1) * t5263 - t6323) * t6191;
t5192 = t5412 + t7296;
t6725 = t6199 * t5378;
t6581 = pkin(2) * t6725;
t5241 = t7599 * t7743 + t6581;
t5257 = t5429 - t5366;
t5295 = t5372 - t6777;
t6392 = t6023 * t6482;
t6532 = t7296 * t6667;
t7167 = t5263 * t7680;
t7290 = t5448 - t5377;
t7360 = t7834 * t6190 - t4901 * t6199 - 0.2e1 * (t5241 * t6157 + (pkin(7) * t6725 + t7599 * t7746) * t7393 - t6581 - t6190 * t7296) * t7033 + ((-t5257 * t6668 - t5295 * t7597) * t7234 + (t5260 + 0.2e1 * t6532) * t6199 + t5155 * t6190) * t6168 + 0.2e1 * t5241 * t7032 + (-t6392 * t7711 + t6190 * t7167 + (-0.4e1 * t5451 * t6666 - t7290 * t7460) * pkin(2)) * t6200 + t5145 * t7460 - 0.2e1 * t5192 * t7030;
t6467 = t6727 / 0.2e1;
t6573 = pkin(2) * t6727;
t6718 = t5451 * t7029;
t7028 = t6199 * t7581;
t7137 = pkin(7) * t7597;
t7359 = -t7834 * t6199 - t4901 * t6190 + 0.4e1 * ((t7137 - t6573 / 0.2e1) * t6157 - (pkin(2) * t7597 + pkin(7) * t6467) * t7393 + (t5369 / 0.2e1 - t5428 / 0.2e1) * t6199 + pkin(2) * t6467) * t7033 + ((t5257 * t6167 * t7028 - t5295 * t7599) * t7234 - t5155 * t6199 + 0.2e1 * (t6532 - t6579) * t6190) * t6168 - (-0.2e1 * t6573 + 0.4e1 * t7137) * t7032 + ((-t6718 * t7747 - t7167) * t6199 + ((t5448 / 0.2e1 - t5377 / 0.2e1) * t7692 - t6392) * t7714) * t6200 + 0.2e1 * t5192 * t7028 + t5145 * t7466;
t6997 = t5934 * t7472;
t4902 = t5002 * t6027 * t6168 + ((pkin(6) * t5002 - t7667) * t6203 + t5006 * t7683) * t6167 + (-0.2e1 * t6997 + t7222) * t5020;
t5147 = (-pkin(7) * t5450 + t6713 * t7744 + t5358) * t6194 + pkin(1) * t5375;
t5265 = t5450 + t5375;
t5154 = t5358 + (pkin(1) * t5265 - t6324) * t6194;
t5194 = t5414 + t7292;
t6730 = t6202 * t5376;
t6583 = pkin(2) * t6730;
t5240 = t7586 * t7743 + t6583;
t5259 = t5440 - t5360;
t5296 = t5371 - t6776;
t6390 = t6024 * t6474;
t6533 = t7292 * t6657;
t7165 = t5265 * t7680;
t7288 = t5450 - t5375;
t7358 = t7833 * t6193 - t4902 * t6202 - 0.2e1 * (t5240 * t6161 + (pkin(7) * t6730 + t7586 * t7746) * t7383 - t6583 - t6193 * t7292) * t7022 + ((-t5259 * t6658 - t5296 * t7584) * t7233 + (t5262 + 0.2e1 * t6533) * t6202 + t5154 * t6193) * t6168 + 0.2e1 * t5240 * t7021 + (-t6390 * t7710 + t6193 * t7165 + (-0.4e1 * t5453 * t6656 - t7288 * t7458) * pkin(2)) * t6203 + t5147 * t7458 - 0.2e1 * t5194 * t7019;
t6468 = t6732 / 0.2e1;
t6572 = pkin(2) * t6732;
t6712 = t5453 * t7018;
t7017 = t6202 * t7580;
t7135 = pkin(7) * t7584;
t7357 = -t7833 * t6202 - t4902 * t6193 + 0.4e1 * ((t7135 - t6572 / 0.2e1) * t6161 - (pkin(2) * t7584 + pkin(7) * t6468) * t7383 + (t5368 / 0.2e1 - t5439 / 0.2e1) * t6202 + pkin(2) * t6468) * t7022 + ((t5259 * t6167 * t7017 - t5296 * t7586) * t7233 - t5154 * t6202 + 0.2e1 * (t6533 - t6593) * t6193) * t6168 - (-0.2e1 * t6572 + 0.4e1 * t7135) * t7021 + ((-t6712 * t7747 - t7165) * t6202 + ((t5450 / 0.2e1 - t5375 / 0.2e1) * t7692 - t6390) * t7713) * t6203 + 0.2e1 * t5194 * t7017 + t5147 * t7464;
t4940 = t5022 * t6784 + t5022 - t7454;
t6538 = t6185 * t6758;
t5124 = -t6402 * t7719 + (-t6538 - t6650) * t5402;
t6927 = t5401 * t7469;
t6929 = t6181 * t7415;
t7078 = (-t5456 + t7085) * t7450;
t4977 = t5021 + t6750 / 0.2e1 - t7094 / 0.2e1 + t5052 / 0.2e1 + (t6362 / 0.2e1 - t6361 / 0.2e1) * t7124;
t7114 = t4977 * t7470;
t7229 = -0.2e1 * t7420;
t7356 = t4940 * t7229 + t7114 * t7702 + (0.2e1 * t6927 + 0.4e1 * t7078) * t6142 + 0.4e1 * t5124 * t6929 - 0.2e1 * t7078 - t6927 + 0.2e1 * t7703 * t7867;
t4980 = t5021 + t5003;
t5299 = -t5462 + t5502 / 0.2e1 - t7008 / 0.2e1 - t6915 / 0.2e1;
t6643 = t6167 * t6929;
t7355 = t4940 * t6142 + 0.2e1 * t4977 * t6643 + t4980 * t6168 + (-t7078 - t6927 / 0.2e1 - t7867) * t7229 + 0.2e1 * (-t5124 * t6142 - t5299 * t6650) * t6182;
t4944 = t5018 * t6783 + t5018 - t7453;
t6537 = t6197 * t6757;
t5126 = -t6401 * t7719 + (-t6537 - t6649) * t5452;
t6917 = t5449 * t7461;
t6925 = t6187 * t7404;
t7073 = (-t5467 + t5374) * t7593;
t4987 = t5015 + t6749 / 0.2e1 + (-t7622 / 0.2e1 + t5057 * t6910) * t5615 + (t6360 / 0.2e1 - t6359 / 0.2e1) * t7123;
t7113 = t4987 * t7467;
t7228 = -0.2e1 * t7409;
t7354 = t4944 * t7228 + t7113 * t7700 + (0.2e1 * t6917 + 0.4e1 * t7073) * t6151 + 0.4e1 * t5126 * t6925 - 0.2e1 * t7073 - t6917 - (-0.4e1 * t6151 * t6622 + 0.2e1 * t7491 + t7724 + 0.2e1) * t6490;
t4945 = t5019 * t6782 + t5019 - t7452;
t6536 = t6200 * t6756;
t5125 = -t6399 * t7719 + (-t6536 - t6647) * t5451;
t6916 = t5448 * t7459;
t6922 = t6190 * t7394;
t7076 = (-t5468 + t5378) * t7449;
t4988 = t5016 + t6748 / 0.2e1 + (-t7621 / 0.2e1 + t5058 * t6908) * t5617 + (t6358 / 0.2e1 - t6357 / 0.2e1) * t7122;
t7112 = t4988 * t7465;
t7226 = -0.2e1 * t7399;
t7353 = t4945 * t7226 + t7112 * t7698 + (0.2e1 * t6916 + 0.4e1 * t7076) * t6155 + 0.4e1 * t5125 * t6922 - 0.2e1 * t7076 - t6916 - (-0.4e1 * t6155 * t6621 + 0.2e1 * t7490 + t7723 + 0.2e1) * t6482;
t4946 = t5020 * t6781 + t5020 - t7451;
t6535 = t6203 * t6755;
t5127 = -t6400 * t7719 + (-t6535 - t6648) * t5453;
t6919 = t6193 * t7384;
t6936 = t5450 * t7457;
t7070 = (-t5469 + t5376) * t7448;
t4989 = t5017 + t6747 / 0.2e1 + (-t7620 / 0.2e1 + t5059 * t6909) * t5613 + (t6356 / 0.2e1 - t6355 / 0.2e1) * t7121;
t7111 = t4989 * t7463;
t7224 = -0.2e1 * t7389;
t7352 = t4946 * t7224 + t7111 * t7696 + (0.2e1 * t6936 + 0.4e1 * t7070) * t6159 + 0.4e1 * t5127 * t6919 - 0.2e1 * t7070 - t6936 - (-0.4e1 * t6159 * t6620 + 0.2e1 * t7489 + t7722 + 0.2e1) * t6474;
t4994 = t5015 + t5004;
t5310 = -t5473 + t5504 / 0.2e1 - t7014 / 0.2e1 - t6914 / 0.2e1;
t6641 = t6167 * t6925;
t7351 = t4944 * t6151 + 0.2e1 * t4987 * t6641 + t4994 * t6168 + (-t7073 - t6917 / 0.2e1 - t6622 * t6490) * t7228 + (-t5126 * t6151 - t5310 * t6649) * t7825;
t4996 = t5016 + t5005;
t5311 = -t5474 + t5503 / 0.2e1 - t7009 / 0.2e1 - t7012 / 0.2e1;
t6639 = t6167 * t6922;
t7350 = t4945 * t6155 + 0.2e1 * t4988 * t6639 + t4996 * t6168 + (-t7076 - t6916 / 0.2e1 - t6621 * t6482) * t7226 + (-t5125 * t6155 - t5311 * t6647) * t7824;
t4998 = t5017 + t5006;
t5312 = -t5475 + t5505 / 0.2e1 - t7013 / 0.2e1 - t7011 / 0.2e1;
t6637 = t6167 * t6919;
t7349 = t4946 * t6159 + 0.2e1 * t4989 * t6637 + t4998 * t6168 + (-t7070 - t6936 / 0.2e1 - t6620 * t6474) * t7224 + (-t5127 * t6159 - t5312 * t6648) * t7823;
t6342 = t6512 * t7826;
t5171 = t6167 * t7300 - t6342;
t5188 = -t6167 * t6342 - t5342;
t6527 = t6182 * t6739;
t7348 = -t6167 * t5003 * t7411 - t4999 * (t6951 - t7445) + (t6184 * t7231 - t7421 * t7704) * t7623 + t5171 * t7415 + t5188 * t7447 - (t6139 * t6527 * t7717 + (t6047 * t6181 * t7706 + t6935 * t7827) * t5402) * t5466;
t6949 = t6167 * t7415;
t7347 = -t5003 * t6950 + t4999 * (t6949 + t7447) + (t6181 * t7231 + t7415 * t7704) * t7623 + t5171 * t7421 - t5188 * t7445 + (-((t5402 - 0.2e1 * t7608) * t6184 + t6181 * t6527) * t6139 + t6168 * t6720 + t6047 * t7232) * t6880;
t4967 = -t5929 * t7624 + t7674;
t6630 = t7060 / 0.2e1;
t5132 = -(t6630 * t6090 + (t6185 * t6630 + t7085) * pkin(2)) * t5462 + t6595;
t7346 = -t4967 * t6184 + t5132 * t7717 + t6181 * t7866;
t7345 = -t4967 * t6181 + t5132 * t7718 - t6184 * t7866;
t6341 = t6490 * t7235;
t5172 = t6167 * t7289 - t6341;
t5198 = -t6167 * t6341 - t5373;
t7344 = -t6167 * t5004 * t7380 - t5000 * (t6947 - t7437) + (t6196 * t7231 - t7410 * t7704) * t7632 + t5172 * t7404 + t5198 * t7443 - (t6139 * t6526 * t7712 + (t6049 * t6187 * t7706 + t6934 * t7827) * t5452) * t7582;
t6340 = t6482 * t7234;
t5173 = t6167 * t7290 - t6340;
t5199 = -t6167 * t6340 - t5377;
t7343 = -t6167 * t5005 * t7379 - t5001 * (t6942 - t7435) + (t6199 * t7231 - t7400 * t7704) * t7629 + t5173 * t7394 + t5199 * t7441 - (t6139 * t6524 * t7711 + (t6050 * t6190 * t7706 + t6933 * t7827) * t5451) * t7581;
t6339 = t6474 * t7233;
t5174 = t6167 * t7288 - t6339;
t5200 = -t6167 * t6339 - t5375;
t7342 = -t6167 * t5006 * t7378 - t5002 * (t6939 - t7433) + (t6202 * t7231 - t7390 * t7704) * t7626 + t5174 * t7384 + t5200 * t7439 - (t6139 * t6525 * t7710 + (t6051 * t6193 * t7706 + t6932 * t7827) * t5453) * t7580;
t6945 = t6167 * t7404;
t7341 = -t5004 * t6946 + t5000 * (t6945 + t7443) + (t7404 * t7704 - 0.2e1 * t6962) * t7632 + t5172 * t7410 - t5198 * t7437 + (-(t6187 * t6526 + (t7724 + 0.1e1) * t7590) * t6139 + t6168 * t6714 - 0.2e1 * t6049 * t7590) * t6879;
t6940 = t6167 * t7394;
t7340 = -t5005 * t6941 + t5001 * (t6940 + t7441) + (t7394 * t7704 - 0.2e1 * t6960) * t7629 + t5173 * t7400 - t5199 * t7435 + (-(t6190 * t6524 + (t7723 + 0.1e1) * t7597) * t6139 + t6168 * t6717 - 0.2e1 * t6050 * t7597) * t6878;
t6937 = t6167 * t7384;
t7339 = -t5006 * t6938 + t5002 * (t6937 + t7439) + (t7384 * t7704 - 0.2e1 * t6958) * t7626 + t5174 * t7390 - t5200 * t7433 + (-(t6193 * t6525 + (t7722 + 0.1e1) * t7584) * t6139 + t6168 * t6711 - 0.2e1 * t6051 * t7584) * t6877;
t7338 = t6187 * t7865 + t6196 * t7861;
t7337 = t6187 * t7861 - t6196 * t7865;
t7336 = t6190 * t7864 + t6199 * t7860;
t7335 = t6190 * t7860 - t6199 * t7864;
t7334 = t6193 * t7863 + t6202 * t7859;
t7333 = t6193 * t7859 - t6202 * t7863;
t5205 = -t6538 + 0.2e1 * t6650;
t6698 = t6182 * t7057;
t7066 = t6185 * t5465;
t7316 = -(-t5456 - 0.2e1 * t7085) * t5462 - 0.2e1 * t6722;
t7332 = 0.2e1 * t4980 * t7420 + t5022 * t6754 + ((t7066 * t7721 - 0.4e1 * t6512) * t6168 + 0.4e1 * t6722) * t6142 - t5205 * t6698 * t7718 + t7316;
t5210 = -t6535 + 0.2e1 * t6648;
t6655 = t6194 * t7017;
t7048 = t6203 * t5481;
t7313 = -t7285 * t5475 - 0.2e1 * t6713;
t7331 = 0.2e1 * t4998 * t7389 + t5020 * t6751 + ((t7048 * t7721 - 0.4e1 * t6474) * t6168 + 0.4e1 * t6713) * t6159 - t5210 * t6655 * t7713 + t7313;
t5208 = -t6537 + 0.2e1 * t6649;
t6675 = t6188 * t7039;
t7052 = t6197 * t5479;
t7315 = -t7287 * t5473 - 0.2e1 * t6716;
t7330 = 0.2e1 * t4994 * t7409 + t5018 * t6753 + ((t7052 * t7721 - 0.4e1 * t6490) * t6168 + 0.4e1 * t6716) * t6151 - t5208 * t6675 * t7715 + t7315;
t5209 = -t6536 + 0.2e1 * t6647;
t6665 = t6191 * t7028;
t7050 = t6200 * t5480;
t7314 = -t7286 * t5474 - 0.2e1 * t6719;
t7329 = 0.2e1 * t4996 * t7399 + t5019 * t6752 + ((t7050 * t7721 - 0.4e1 * t6482) * t6168 + 0.4e1 * t6719) * t6155 - t5209 * t6665 * t7714 + t7314;
t5160 = pkin(6) * t7062 - t5464 + (t7828 - t5462) * t6167 * t5929;
t7328 = t5160 * t7057 - (pkin(6) * t7419 + t5908 * t6184) * t7624 + t7855 * t6181;
t7327 = -t5160 * t7059 + (-pkin(6) * t7411 + t5908 * t6181) * t7624 + t7855 * t6184;
t5161 = t5932 * t5452 * t7827 - (t6999 - t7649) * t7582;
t7326 = t5161 * t7039 - (pkin(6) * t7408 + t5916 * t6196) * t7633 + t7854 * t6187;
t7325 = -t5161 * t7041 + (-pkin(6) * t7380 + t5916 * t6187) * t7633 + t7854 * t6196;
t5162 = t5933 * t5451 * t7827 - (t6998 - t7649) * t7581;
t7324 = t5162 * t7028 - (pkin(6) * t7398 + t5918 * t6199) * t7630 + t7853 * t6190;
t7323 = -t5162 * t7030 + (-pkin(6) * t7379 + t5918 * t6190) * t7630 + t7853 * t6199;
t5163 = t5934 * t5453 * t7827 - (t6997 - t7649) * t7580;
t7322 = t5163 * t7017 - (pkin(6) * t7388 + t5920 * t6202) * t7627 + t7852 * t6193;
t7321 = -t5163 * t7019 + (-pkin(6) * t7378 + t5920 * t6193) * t7627 + t7852 * t6202;
t7227 = 0.2e1 * t7403;
t7225 = 0.2e1 * t7393;
t7223 = 0.2e1 * t7383;
t7120 = t6131 * t7647;
t7119 = t6132 * t7647;
t7110 = t5018 * t7576;
t7109 = t5018 * t7542;
t7108 = t5018 * t5627 * t6188;
t7107 = t5627 * t7632;
t7106 = t5019 * t7578;
t7105 = t5019 * t7541;
t7104 = t5019 * t5628 * t6191;
t7103 = t5628 * t7629;
t7102 = t5020 * t7577;
t7101 = t5020 * t7540;
t7100 = t5020 * t5629 * t6194;
t7099 = t5629 * t7626;
t7098 = t5022 * t7579;
t7097 = t5022 * t7543;
t7096 = t5022 * t5619 * t6182;
t7095 = t5619 * t7623;
t6975 = t6144 * t5465;
t6970 = t6153 * t5479;
t6969 = t6157 * t5480;
t6968 = t6161 * t5481;
t6876 = t5574 * t7327;
t6875 = t5574 * t7328;
t6874 = t5575 * t7326;
t6873 = t5575 * t7325;
t6872 = t5576 * t7324;
t6871 = t5576 * t7323;
t6870 = t5577 * t7322;
t6869 = t5577 * t7321;
t6868 = t5605 * t7364;
t6867 = t5605 * t7363;
t6866 = t5605 * t7356;
t6865 = t5605 * t7355;
t6864 = t5605 * t7348;
t6863 = t5605 * t7347;
t6862 = t5613 * t7358;
t6861 = t5613 * t7357;
t6860 = t5613 * t7352;
t6859 = t5613 * t7349;
t6858 = t5613 * t7342;
t6857 = t5613 * t7339;
t6856 = t5615 * t7362;
t6855 = t5615 * t7361;
t6854 = t5615 * t7354;
t6853 = t5615 * t7351;
t6852 = t5615 * t7344;
t6851 = t5615 * t7341;
t6850 = t5617 * t7360;
t6849 = t5617 * t7359;
t6848 = t5617 * t7353;
t6847 = t5617 * t7350;
t6846 = t5617 * t7343;
t6845 = t5617 * t7340;
t6844 = t5619 * t7346;
t6843 = t5619 * t7345;
t6842 = t5619 * t7332;
t6841 = t5627 * t7338;
t6840 = t5627 * t7337;
t6839 = t5627 * t7330;
t6838 = t5628 * t7336;
t6837 = t5628 * t7335;
t6836 = t5628 * t7329;
t6835 = t5629 * t7334;
t6834 = t5629 * t7333;
t6833 = t5629 * t7331;
t6832 = t5018 * t7227;
t6831 = t5019 * t7225;
t6830 = t5020 * t7223;
t6829 = t7414 * t7240;
t6828 = 0.4e1 * t5402 * t5483 * t6047;
t6827 = 0.4e1 * t6050 * t7601;
t6826 = 0.4e1 * t6049 * t7595;
t6825 = 0.4e1 * t6051 * t7588;
t6817 = 0.2e1 * t6975;
t6816 = 0.2e1 * t6970;
t6815 = 0.2e1 * t6969;
t6814 = 0.2e1 * t6968;
t4978 = t7454 / 0.2e1 + t5022;
t5300 = t7450 / 0.2e1 - t5466;
t6812 = (t5299 * t7144 + t5300 * t6091) * t7738 + t7114 * t7745 + 0.2e1 * t4978 * t6093;
t6811 = (-t5299 * t7159 + t5300 * t6093) * t7738 - 0.2e1 * t4977 * t7144 - 0.2e1 * t4978 * t6091;
t4990 = t7453 / 0.2e1 + t5018;
t5315 = t7593 / 0.2e1 - t7582;
t6810 = (t5310 * t7155 + t5315 * t6115) * t7736 + t7113 * t7745 + 0.2e1 * t4990 * t6119;
t4991 = t7452 / 0.2e1 + t5019;
t5313 = t7449 / 0.2e1 - t7581;
t6809 = (t5311 * t7154 + t5313 * t6116) * t7737 + t7112 * t7745 + 0.2e1 * t4991 * t6121;
t6808 = (-t5310 * t7158 + t5315 * t6119) * t7736 - 0.2e1 * t4987 * t7155 - 0.2e1 * t4990 * t6115;
t6807 = (-t5311 * t7157 + t5313 * t6121) * t7737 - 0.2e1 * t4988 * t7154 - 0.2e1 * t4991 * t6116;
t4992 = t7451 / 0.2e1 + t5020;
t5314 = t7448 / 0.2e1 - t7580;
t6806 = (t5312 * t7153 + t5314 * t6117) * t7735 + t7111 * t7745 + 0.2e1 * t4992 * t6123;
t6805 = (-t5312 * t7156 + t5314 * t6123) * t7735 - 0.2e1 * t4989 * t7153 - 0.2e1 * t4992 * t6117;
t4951 = t4980 * t6181 + t5022 * t6949;
t6804 = t4951 * t6181 - t7316 * t7420 - (t5205 * t6142 - t6650) * t7058;
t4964 = t4994 * t6187 + t5018 * t6945;
t6803 = t4964 * t6187 - t7315 * t7409 - (t5208 * t6151 - t6649) * t7040;
t4965 = t4996 * t6190 + t5019 * t6940;
t6802 = t4965 * t6190 - t7314 * t7399 - (t5209 * t6155 - t6647) * t7029;
t4966 = t4998 * t6193 + t5020 * t6937;
t6801 = t4966 * t6193 - t7313 * t7389 - (t5210 * t6159 - t6648) * t7018;
t5461 = -0.2e1 * t6975;
t5328 = -t5465 + t6817;
t6262 = t5328 * t6139 + t5188 + t5465;
t6800 = (t5461 + t6262) * t6181 + t7862 * t6184;
t6799 = (-t6262 + t6817) * t6184 + t7862 * t6181;
t5470 = -0.2e1 * t6970;
t5329 = -t5479 + t6816;
t6261 = t5329 * t6139 + t5198 + t5479;
t6798 = (t5470 + t6261) * t6187 + t7858 * t6196;
t6797 = (-t6261 + t6816) * t6196 + t7858 * t6187;
t5471 = -0.2e1 * t6969;
t5330 = -t5480 + t6815;
t6260 = t5330 * t6139 + t5199 + t5480;
t6796 = (t5471 + t6260) * t6190 + t7857 * t6199;
t6795 = (-t6260 + t6815) * t6199 + t7857 * t6190;
t5472 = -0.2e1 * t6968;
t5331 = -t5481 + t6814;
t6259 = t5331 * t6139 + t5200 + t5481;
t6794 = (t5472 + t6259) * t6193 + t7856 * t6202;
t6793 = (-t6259 + t6814) * t6202 + t7856 * t6193;
t6746 = t5273 * t7058;
t6745 = t5286 * t7040;
t6744 = t5288 * t7029;
t6743 = t5290 * t7018;
t6710 = t7579 * t5465;
t6709 = t7543 * t5465;
t6708 = t5619 * t7067;
t6707 = t5619 * t7066;
t5997 = 0.2e1 * t6089 + pkin(1);
t6599 = t5997 * t7376 + t5912 + t6056 + t6166;
t5490 = (-(t6599 * t5816 + (t5688 * t6086 + (t5816 * t5997 - 0.2e1 * t7417) * t6087) * t6185 + t7756 * t5815) * t6354 - (t6599 * t5815 + (t5687 * t6086 + (t5815 * t5997 + 0.2e1 * t7416) * t6087) * t6185 - t7756 * t5816) * t6353) * t6237 * t5603;
t6706 = t5490 * t7056;
t6705 = t5550 * t7065;
t6704 = t5574 * t7056;
t6696 = t7576 * t5479;
t6695 = t7542 * t5479;
t6694 = t5627 * t7053;
t6693 = t5627 * t7052;
t6692 = t7578 * t5480;
t6691 = t7541 * t5480;
t6690 = t5628 * t7051;
t6689 = t5628 * t7050;
t6688 = t7577 * t5481;
t6687 = t7540 * t5481;
t6686 = t5629 * t7049;
t6685 = t5629 * t7048;
t6014 = 0.2e1 * t6102 + pkin(1);
t6598 = t6014 * t7375 + t5921 + t6066 + t6166;
t5491 = (-(t6598 * t5822 + (t5693 * t6099 + (t5822 * t6014 - 0.2e1 * t7406) * t6100) * t6197 + t7755 * t5821) * t6352 - (t6598 * t5821 + (t5692 * t6099 + (t5821 * t6014 + 0.2e1 * t7405) * t6100) * t6197 - t7755 * t5822) * t6351) * t6237 * t5610;
t6684 = t5491 * t7038;
t6683 = t5551 * t7047;
t6682 = t5575 * t7038;
t6017 = 0.2e1 * t6106 + pkin(1);
t6597 = t6017 * t7374 + t5922 + t6067 + t6166;
t5492 = (-(t6597 * t5824 + (t5695 * t6103 + (t5824 * t6017 - 0.2e1 * t7396) * t6104) * t6200 + t7754 * t5823) * t6350 - (t6597 * t5823 + (t5694 * t6103 + (t5823 * t6017 + 0.2e1 * t7395) * t6104) * t6200 - t7754 * t5824) * t6349) * t6237 * t5611;
t6674 = t5492 * t7027;
t6673 = t5552 * t7036;
t6672 = t5576 * t7027;
t6020 = 0.2e1 * t6110 + pkin(1);
t6596 = t6020 * t7373 + t5923 + t6068 + t6166;
t5493 = (-(t6596 * t5826 + (t5697 * t6107 + (t5826 * t6020 - 0.2e1 * t7386) * t6108) * t6203 + t7753 * t5825) * t6348 - (t6596 * t5825 + (t5696 * t6107 + (t5825 * t6020 + 0.2e1 * t7385) * t6108) * t6203 - t7753 * t5826) * t6347) * t6237 * t5609;
t6664 = t5493 * t7016;
t6663 = t5553 * t7025;
t6662 = t5577 * t7016;
t6610 = t7054 * t7828;
t6609 = t7225 * t7601;
t6608 = t7227 * t7595;
t6607 = t7223 * t7588;
t6562 = t5605 * t6812;
t6561 = t5605 * t6811;
t6560 = t5613 * t6806;
t6559 = t5613 * t6805;
t6558 = t5615 * t6810;
t6557 = t5615 * t6808;
t6556 = t5617 * t6809;
t6555 = t5617 * t6807;
t6554 = t5619 * t6804;
t6553 = t5619 * t6800;
t6552 = t5619 * t6799;
t6551 = t5627 * t6803;
t6550 = t5627 * t6798;
t6549 = t5627 * t6797;
t6548 = t5628 * t6802;
t6547 = t5628 * t6796;
t6546 = t5628 * t6795;
t6545 = t5629 * t6801;
t6544 = t5629 * t6794;
t6543 = t5629 * t6793;
t6531 = t5619 * t6746;
t6530 = t5627 * t6745;
t6529 = t5628 * t6744;
t6528 = t5629 * t6743;
t6523 = t5574 * t6721;
t6522 = t5576 * t6718;
t6521 = t5575 * t6715;
t6520 = t5577 * t6712;
t6519 = t6185 * t6710;
t6518 = t6185 * t6709;
t6517 = t6182 * t6707;
t6515 = t5522 * t6704;
t6514 = t5523 * t6704;
t6513 = t6185 * t6705;
t6505 = t6197 * t6696;
t6504 = t6197 * t6695;
t6503 = t6188 * t6693;
t6501 = t6200 * t6692;
t6500 = t6200 * t6691;
t6499 = t6191 * t6689;
t6497 = t6203 * t6688;
t6496 = t6203 * t6687;
t6495 = t6194 * t6685;
t6493 = t5524 * t6682;
t6492 = t5527 * t6682;
t6491 = t6197 * t6683;
t6485 = t5525 * t6672;
t6484 = t5528 * t6672;
t6483 = t6200 * t6673;
t6477 = t5526 * t6662;
t6476 = t5529 * t6662;
t6475 = t6203 * t6663;
t4979 = 0.2e1 * t5021 + t5003;
t5301 = t5402 + t7734;
t6383 = t4979 * t6182 + t5301 * t7603;
t6382 = t4979 * t6185 - t5301 * t7605;
t4993 = 0.2e1 * t5015 + t5004;
t5319 = t5452 + t7733;
t6381 = t5319 * t5452 * t6197 + t4993 * t6188;
t6380 = t4993 * t6197 - t5319 * t7591;
t4995 = 0.2e1 * t5016 + t5005;
t5322 = t5451 + t7732;
t6379 = t5322 * t5451 * t6200 + t4995 * t6191;
t6378 = t4995 * t6200 - t5322 * t7598;
t4997 = 0.2e1 * t5017 + t5006;
t5325 = t5453 + t7731;
t6377 = t5325 * t5453 * t6203 + t4997 * t6194;
t6376 = t4997 * t6203 - t5325 * t7585;
t6375 = -t5018 * t5848 + t5479 * (t6119 - t6769);
t6374 = t5018 * (pkin(1) * t7436 - t7158) + t5479 * t7784;
t6373 = -t5019 * t5849 + t5480 * (t6121 - t6768);
t6372 = t5019 * (pkin(1) * t7434 - t7157) + t5480 * t7783;
t6371 = -t5020 * t5847 + t5481 * (t6123 - t6767);
t6370 = t5020 * (pkin(1) * t7432 - t7156) + t5481 * t7782;
t6369 = -t5022 * t5834 + t5465 * (t6093 - t6771);
t6368 = t5022 * (pkin(1) * t7444 - t7159) + t5465 * t7785;
t6322 = t5605 * (t7605 * t7742 + t7642);
t6321 = t5605 * t6383;
t6320 = t5605 * t6382;
t6319 = t5613 * (t7585 * t7739 + t7639);
t6318 = t5613 * t6377;
t6317 = t5613 * t6376;
t6316 = t5615 * (t7591 * t7741 + t7641);
t6315 = t5615 * t6381;
t6314 = t5615 * t6380;
t6313 = t5617 * (t7598 * t7740 + t7640);
t6312 = t5617 * t6379;
t6311 = t5617 * t6378;
t6310 = t5619 * t6369;
t6309 = t5619 * t6368;
t6308 = t5627 * t6375;
t6307 = t5627 * t6374;
t6306 = t5628 * t6373;
t6305 = t5628 * t6372;
t6304 = t5629 * t6371;
t6303 = t5629 * t6370;
t6287 = t5605 * (-t6828 * t7893 + t6829);
t6286 = t5605 * (-t6610 * t7893 + t7625);
t6285 = t5613 * (-t6825 * t7896 + t6830);
t6284 = t5613 * (-t6607 * t7896 + t7628);
t6283 = t5615 * (-t6826 * t7894 + t6832);
t6282 = t5615 * (-t6608 * t7894 + t7634);
t6281 = t5617 * (-t6827 * t7895 + t6831);
t6280 = t5617 * (-t6609 * t7895 + t7631);
t5326 = -t5475 + 0.2e1 * t5505 - 0.2e1 * t7011 - 0.2e1 * t7013;
t5323 = -t5474 + 0.2e1 * t5503 - 0.2e1 * t7009 - 0.2e1 * t7012;
t5320 = -t5473 + 0.2e1 * t5504 - 0.2e1 * t6914 - 0.2e1 * t7014;
t5302 = -t5462 + 0.2e1 * t5502 - 0.2e1 * t6915 - 0.2e1 * t7008;
t5224 = t5326 * t6193 - t6167 * t6655;
t5223 = t5323 * t6190 - t6167 * t6665;
t5222 = t5320 * t6187 - t6167 * t6675;
t5221 = t5326 * t6202 + t6473;
t5220 = t5323 * t6199 + t6481;
t5219 = t5320 * t6196 + t6489;
t5218 = t5302 * t6181 - t6167 * t6698;
t5217 = t5302 * t6184 + t6511;
t5103 = (t5481 * t6781 + t5481 - t6418) * t7389 + t7697 * t5327 * t6657;
t5102 = (t5480 * t6782 + t5480 - t6420) * t7399 + t7699 * t5324 * t6667;
t5101 = (t5479 * t6783 + t5479 - t6419) * t7409 + t7701 * t5321 * t6677;
t5096 = (t5465 * t6784 + t5465 - t6421) * t7420 + t7703 * t5303 * t6699;
t5083 = (-0.2e1 * t5450 + t5472 + 0.2e1 * t5481) * t6159 - t5481 + t5450 - (0.4e1 * t5327 * t6637 - t7448 * t7696) * t7580 + (t7489 * t7697 + t6161) * t5481;
t5082 = (-0.2e1 * t5448 + t5471 + 0.2e1 * t5480) * t6155 - t5480 + t5448 - (0.4e1 * t5324 * t6639 - t7449 * t7698) * t7581 + (t7490 * t7699 + t6157) * t5480;
t5081 = (-0.2e1 * t5449 + t5470 + 0.2e1 * t5479) * t6151 - t5479 + t5449 - (0.4e1 * t5321 * t6641 - t7593 * t7700) * t7582 + (t7491 * t7701 + t6153) * t5479;
t5080 = (-0.2e1 * t5401 + t5461 + 0.2e1 * t5465) * t6142 - t5465 + t5401 - (0.4e1 * t5303 * t6643 - t7450 * t7702) * t5466 + (t7492 * t7703 + t6144) * t5465;
t4963 = t4998 * t6202 - t5020 * t6939;
t4962 = t4996 * t6199 - t5019 * t6942;
t4961 = t4994 * t6196 - t5018 * t6947;
t4950 = t4980 * t6184 - t5022 * t6951;
t1 = [t5018 * t7552 + t5019 * t7550 + t5020 * t7548 + t5022 * t7554, 0, 0, (-t5530 * t6517 - t5532 * t6503 - t5534 * t6499 - t5536 * t6495 + t5539 * t6286 + t5541 * t6282 + t5543 * t6280 + t5545 * t6284) * t6137, (-t5328 * t7563 - t5329 * t7561 - t5330 * t7559 - t5331 * t7557 + t5539 * t6287 + t5541 * t6283 + t5543 * t6281 + t5545 * t6285) * t6137, (t5532 * t7108 + t5534 * t7104 + t5536 * t7100 + t5530 * t7096 + t5545 * t6318 + t5543 * t6312 + t5541 * t6315 + t5539 * t6321 + (-t5530 * t6707 - t5532 * t6693 - t5534 * t6689 - t5536 * t6685) * t6168) * t6167, (t5532 * t7107 + t5534 * t7103 + t5536 * t7099 + t5530 * t7095 + t5545 * t6317 + t5543 * t6311 + t5541 * t6314 + t5539 * t6320 + (t5530 * t6708 + t5532 * t6694 + t5534 * t6690 + t5536 * t6686) * t6168) * t6167, t4980 * t7563 + t4994 * t7561 + t4996 * t7559 + t4998 * t7557 + (t4980 * t7554 + t4994 * t7552 + t4996 * t7550 + t4998 * t7548) * t6168, t5530 * t6309 + t5532 * t6307 + t5534 * t6305 + t5536 * t6303 + t5539 * t6562 + t5541 * t6558 + t5543 * t6556 + t5545 * t6560, t5530 * t6310 + t5532 * t6308 + t5534 * t6306 + t5536 * t6304 + t5539 * t6561 + t5541 * t6557 + t5543 * t6555 + t5545 * t6559, t5545 * t6859 + t5543 * t6847 + t5541 * t6853 + t5539 * t6865 + t5536 * t6545 + t5534 * t6548 + t5532 * t6551 + t5530 * t6554 + (-t5096 * t7571 - t5101 * t7569 - t5102 * t7568 - t5103 * t7567) * t7455, t5545 * t6860 + t5543 * t6848 + t5541 * t6854 + t5539 * t6866 + t5536 * t6833 + t5534 * t6836 + t5532 * t6839 + t5530 * t6842 + (-t5080 * t7571 - t5081 * t7569 - t5082 * t7568 - t5083 * t7567) * t7455, t5545 * t6857 + t5543 * t6845 + t5541 * t6851 + t5539 * t6863 + t5536 * t6543 + t5534 * t6546 + t5532 * t6549 + t5530 * t6552 + ((-t4951 * t7571 - t4964 * t7569 - t4965 * t7568 - t4966 * t7567) * t6167 + (t5217 * t6515 + t5219 * t6493 + t5220 * t6485 + t5221 * t6477) * t6137) * t6237, t5545 * t6858 + t5543 * t6846 + t5541 * t6852 + t5539 * t6864 + t5536 * t6544 + t5534 * t6547 + t5532 * t6550 + t5530 * t6553 + ((-t4950 * t7571 - t4961 * t7569 - t4962 * t7568 - t4963 * t7567) * t6167 + (-t5218 * t6515 - t5222 * t6493 - t5223 * t6485 - t5224 * t6477) * t6137) * t6237, (t5522 * t6523 + t5524 * t6521 + t5525 * t6522 + t5526 * t6520) * t7482 + (-t5530 * t6531 - t5532 * t6530 - t5534 * t6529 - t5536 * t6528 + t5545 * t6319 + t5543 * t6313 + t5541 * t6316 + t5539 * t6322 + (t4968 * t7571 + t4972 * t7569 + t4973 * t7568 + t4974 * t7567) * t6237) * t6167, t5545 * t6861 + t5543 * t6849 + t5541 * t6855 + t5539 * t6867 + t5536 * t6834 + t5534 * t6837 + t5532 * t6840 + t5530 * t6843 + (-t5522 * t6875 - t5524 * t6874 - t5525 * t6872 - t5526 * t6870) * t7455, t5545 * t6862 + t5543 * t6850 + t5541 * t6856 + t5539 * t6868 + t5536 * t6835 + t5534 * t6838 + t5532 * t6841 + t5530 * t6844 + (-t5522 * t6876 - t5524 * t6873 - t5525 * t6871 - t5526 * t6869) * t7455, 0, -t7119, t7120, 0; t5018 * t7553 + t5019 * t7551 + t5020 * t7549 + t5022 * t7555, 0, 0, (-t5531 * t6517 - t5533 * t6503 - t5535 * t6499 - t5537 * t6495 + t5538 * t6286 + t5540 * t6282 + t5542 * t6280 + t5544 * t6284) * t6137, (-t5328 * t7562 - t5329 * t7560 - t5330 * t7558 - t5331 * t7556 + t5538 * t6287 + t5540 * t6283 + t5542 * t6281 + t5544 * t6285) * t6137, (t5533 * t7108 + t5535 * t7104 + t5537 * t7100 + t5531 * t7096 + t5544 * t6318 + t5542 * t6312 + t5540 * t6315 + t5538 * t6321 + (-t5531 * t6707 - t5533 * t6693 - t5535 * t6689 - t5537 * t6685) * t6168) * t6167, (t5533 * t7107 + t5535 * t7103 + t5537 * t7099 + t5531 * t7095 + t5544 * t6317 + t5542 * t6311 + t5540 * t6314 + t5538 * t6320 + (t5531 * t6708 + t5533 * t6694 + t5535 * t6690 + t5537 * t6686) * t6168) * t6167, t4980 * t7562 + t4994 * t7560 + t4996 * t7558 + t4998 * t7556 + (t4980 * t7555 + t4994 * t7553 + t4996 * t7551 + t4998 * t7549) * t6168, t5531 * t6309 + t5533 * t6307 + t5535 * t6305 + t5537 * t6303 + t5538 * t6562 + t5540 * t6558 + t5542 * t6556 + t5544 * t6560, t5531 * t6310 + t5533 * t6308 + t5535 * t6306 + t5537 * t6304 + t5538 * t6561 + t5540 * t6557 + t5542 * t6555 + t5544 * t6559, t5544 * t6859 + t5542 * t6847 + t5540 * t6853 + t5538 * t6865 + t5537 * t6545 + t5535 * t6548 + t5533 * t6551 + t5531 * t6554 + (-t5096 * t7570 - t5101 * t7566 - t5102 * t7565 - t5103 * t7564) * t7455, t5544 * t6860 + t5542 * t6848 + t5540 * t6854 + t5538 * t6866 + t5537 * t6833 + t5535 * t6836 + t5533 * t6839 + t5531 * t6842 + (-t5080 * t7570 - t5081 * t7566 - t5082 * t7565 - t5083 * t7564) * t7455, t5544 * t6857 + t5542 * t6845 + t5540 * t6851 + t5538 * t6863 + t5537 * t6543 + t5535 * t6546 + t5533 * t6549 + t5531 * t6552 + ((-t4951 * t7570 - t4964 * t7566 - t4965 * t7565 - t4966 * t7564) * t6167 + (t5217 * t6514 + t5219 * t6492 + t5220 * t6484 + t5221 * t6476) * t6137) * t6237, t5544 * t6858 + t5542 * t6846 + t5540 * t6852 + t5538 * t6864 + t5537 * t6544 + t5535 * t6547 + t5533 * t6550 + t5531 * t6553 + ((-t4950 * t7570 - t4961 * t7566 - t4962 * t7565 - t4963 * t7564) * t6167 + (-t5218 * t6514 - t5222 * t6492 - t5223 * t6484 - t5224 * t6476) * t6137) * t6237, (t5523 * t6523 + t5527 * t6521 + t5528 * t6522 + t5529 * t6520) * t7482 + (-t5531 * t6531 - t5533 * t6530 - t5535 * t6529 - t5537 * t6528 + t5544 * t6319 + t5542 * t6313 + t5540 * t6316 + t5538 * t6322 + (t4968 * t7570 + t4972 * t7566 + t4973 * t7565 + t4974 * t7564) * t6237) * t6167, t5544 * t6861 + t5542 * t6849 + t5540 * t6855 + t5538 * t6867 + t5537 * t6834 + t5535 * t6837 + t5533 * t6840 + t5531 * t6843 + (-t5523 * t6875 - t5527 * t6874 - t5528 * t6872 - t5529 * t6870) * t7455, t5544 * t6862 + t5542 * t6850 + t5540 * t6856 + t5538 * t6868 + t5537 * t6835 + t5535 * t6838 + t5533 * t6841 + t5531 * t6844 + (-t5523 * t6876 - t5527 * t6873 - t5528 * t6871 - t5529 * t6869) * t7455, 0, -t7120, -t7119, 0; t5018 * t7537 + t5019 * t7536 + t5020 * t7538 + t5022 * t7539, 0, 0, (t5686 * t6286 + t5689 * t6282 + t5690 * t6280 + t5691 * t6284 - t6182 * t6518 + t6188 * t6504 + t6191 * t6500 + t6194 * t6496) * t6137, (-t5328 * t7543 + t5329 * t7542 + t5330 * t7541 + t5331 * t7540 + t5686 * t6287 + t5689 * t6283 + t5690 * t6281 + t5691 * t6285) * t6137, (-t6188 * t7109 - t6191 * t7105 - t6194 * t7101 + t6182 * t7097 + t5690 * t6312 + t5689 * t6315 + t5691 * t6318 + t5686 * t6321 + (t6496 + t6500 + t6504 - t6518) * t6168) * t6167, (-t6197 * t7109 - t6200 * t7105 - t6203 * t7101 + t6185 * t7097 + t5690 * t6311 + t5689 * t6314 + t5691 * t6317 + t5686 * t6320 + (t6182 * t6709 - t6188 * t6695 - t6191 * t6691 - t6194 * t6687) * t6168) * t6167, t4980 * t7543 - t4994 * t7542 - t4996 * t7541 - t4998 * t7540 + (t4980 * t7539 + t4994 * t7537 + t4996 * t7536 + t4998 * t7538) * t6168, t5686 * t6562 + t5689 * t6558 + t5690 * t6556 + t5691 * t6560 + t6368 * t7543 - t6370 * t7540 - t6372 * t7541 - t6374 * t7542, t5686 * t6561 + t5689 * t6557 + t5690 * t6555 + t5691 * t6559 + t6369 * t7543 - t6371 * t7540 - t6373 * t7541 - t6375 * t7542, t5690 * t6847 + t5689 * t6853 + t5691 * t6859 + t5686 * t6865 - t6801 * t7540 - t6802 * t7541 - t6803 * t7542 + t6804 * t7543 + (t5096 * t7547 + t5101 * t7546 + t5102 * t7545 + t5103 * t7544) * t6237, t5690 * t6848 + t5689 * t6854 + t5691 * t6860 + t5686 * t6866 - t7331 * t7540 - t7329 * t7541 - t7330 * t7542 + t7332 * t7543 + (t5080 * t7547 + t5081 * t7546 + t5082 * t7545 + t5083 * t7544) * t6237, t5690 * t6845 + t5689 * t6851 + t5691 * t6857 + t5686 * t6863 - t6793 * t7540 - t6795 * t7541 - t6797 * t7542 + t6799 * t7543 + (t4951 * t7547 + t4964 * t7546 + t4965 * t7545 + t4966 * t7544 + (-t5217 * t6513 - t5219 * t6491 - t5220 * t6483 - t5221 * t6475) * t6167) * t6237, t5690 * t6846 + t5689 * t6852 + t5691 * t6858 + t5686 * t6864 - t6794 * t7540 - t6796 * t7541 - t6798 * t7542 + t6800 * t7543 + (t4950 * t7547 + t4961 * t7546 + t4962 * t7545 + t4963 * t7544 + (t5218 * t6513 + t5222 * t6491 + t5223 * t6483 + t5224 * t6475) * t6167) * t6237, (-t4968 * t7547 - t4972 * t7546 - t4973 * t7545 - t4974 * t7544) * t6237 + (-t6746 * t7543 + t6745 * t7542 + t6744 * t7541 + t6743 * t7540 + t5690 * t6313 + t5689 * t6316 + t5691 * t6319 + t5686 * t6322 + (-t6663 * t7585 - t6673 * t7598 - t6683 * t7591 - t6705 * t7605) * t6237) * t6167, t5690 * t6849 + t5689 * t6855 + t5691 * t6861 + t5686 * t6867 - t7333 * t7540 - t7335 * t7541 - t7337 * t7542 + t7345 * t7543 + (t7322 * t7544 + t7324 * t7545 + t7326 * t7546 + t7328 * t7547) * t6237, t5690 * t6850 + t5689 * t6856 + t5691 * t6862 + t5686 * t6868 - t7334 * t7540 - t7336 * t7541 - t7338 * t7542 + t7346 * t7543 + (t7321 * t7544 + t7323 * t7545 + t7325 * t7546 + t7327 * t7547) * t6237, 0, 0, 0, 0; -t5018 * t7574 - t5019 * t7573 - t5020 * t7572 - t5022 * t7575, 0, 0, (-t6182 * t6519 - t6188 * t6505 - t6191 * t6501 - t6194 * t6497 + (t5592 * t6607 - t7628 * t7896) * t5501 + (t5598 * t6609 - t7631 * t7895) * t5500 + (t5595 * t6608 - t7634 * t7894) * t5499 + (t5580 * t6610 - t7625 * t7893) * t5498) * t6137, (-t5328 * t7579 - t5329 * t7576 - t5330 * t7578 - t5331 * t7577 + (t5592 * t6825 - t6830 * t7896) * t5501 + (t5598 * t6827 - t6831 * t7895) * t5500 + (t5595 * t6826 - t6832 * t7894) * t5499 + (t5580 * t6828 - t6829 * t7893) * t5498) * t6137, (t6188 * t7110 + t6191 * t7106 + t6194 * t7102 + t6182 * t7098 - t6377 * t7572 - t6379 * t7573 - t6381 * t7574 - t6383 * t7575 + (-t6497 - t6501 - t6505 - t6519) * t6168) * t6167, (t6197 * t7110 + t6200 * t7106 + t6203 * t7102 + t6185 * t7098 - t6376 * t7572 - t6378 * t7573 - t6380 * t7574 - t6382 * t7575 + (t6182 * t6710 + t6188 * t6696 + t6191 * t6692 + t6194 * t6688) * t6168) * t6167, t4980 * t7579 + t4994 * t7576 + t4996 * t7578 + t4998 * t7577 + (-t4980 * t7575 - t4994 * t7574 - t4996 * t7573 - t4998 * t7572) * t6168, t6368 * t7579 + t6370 * t7577 + t6372 * t7578 + t6374 * t7576 - t6806 * t7572 - t6809 * t7573 - t6810 * t7574 - t6812 * t7575, t6369 * t7579 + t6371 * t7577 + t6373 * t7578 + t6375 * t7576 - t6805 * t7572 - t6807 * t7573 - t6808 * t7574 - t6811 * t7575, -t5490 * t5096 + t5491 * t5101 + t5492 * t5102 + t5493 * t5103 + t6801 * t7577 + t6802 * t7578 + t6803 * t7576 + t6804 * t7579 - t7349 * t7572 - t7350 * t7573 - t7351 * t7574 - t7355 * t7575, -t5490 * t5080 + t5491 * t5081 + t5492 * t5082 + t5493 * t5083 + t7329 * t7578 + t7330 * t7576 + t7331 * t7577 + t7332 * t7579 - t7352 * t7572 - t7353 * t7573 - t7354 * t7574 - t7356 * t7575, -t5490 * t4951 + t5491 * t4964 + t5492 * t4965 + t5493 * t4966 - t7339 * t7572 - t7340 * t7573 - t7341 * t7574 - t7347 * t7575 + t6797 * t7576 + t6793 * t7577 + t6795 * t7578 + t6799 * t7579 + (t5217 * t6706 - t5219 * t6684 - t5220 * t6674 - t5221 * t6664) * t6167, -t5490 * t4950 + t5491 * t4961 + t5492 * t4962 + t5493 * t4963 - t7342 * t7572 - t7343 * t7573 - t7344 * t7574 - t7348 * t7575 + t6798 * t7576 + t6794 * t7577 + t6796 * t7578 + t6800 * t7579 + (-t5218 * t6706 + t5222 * t6684 + t5223 * t6674 + t5224 * t6664) * t6167, t5490 * t4968 - t5491 * t4972 - t5492 * t4973 - t5493 * t4974 + (-(t5500 * t7640 + (t5288 * t5488 * t7578 + (t5488 * t5492 + t5500 * t7740) * t5451) * t6191) * t7895 - (t5499 * t7641 + (t5286 * t5487 * t7576 + (t5487 * t5491 + t5499 * t7741) * t5452) * t6188) * t7894 - (t5501 * t7639 + (t5290 * t5489 * t7577 + (t5489 * t5493 + t5501 * t7739) * t5453) * t6194) * t7896 - (t5498 * t7642 + (t5273 * t5483 * t7579 + (-t5483 * t5490 + t5498 * t7742) * t5402) * t6182) * t7893) * t6167, -t5490 * t7328 + t5491 * t7326 + t5492 * t7324 + t5493 * t7322 + t7333 * t7577 + t7335 * t7578 + t7337 * t7576 + t7345 * t7579 - t7357 * t7572 - t7359 * t7573 - t7361 * t7574 - t7363 * t7575, -t5490 * t7327 + t5491 * t7325 + t5492 * t7323 + t5493 * t7321 + t7334 * t7577 + t7336 * t7578 + t7338 * t7576 + t7346 * t7579 - t7358 * t7572 - t7360 * t7573 - t7362 * t7574 - t7364 * t7575, 0, 0, 0, 0;];
tau_reg  = t1;
