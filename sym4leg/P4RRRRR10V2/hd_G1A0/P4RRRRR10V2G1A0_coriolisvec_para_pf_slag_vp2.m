% Calculate vector of centrifugal and coriolis load on the joints for
% P4RRRRR10V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% taucX [4x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 17:14
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: xDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp2: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 13:50:45
% EndTime: 2020-08-07 13:58:48
% DurationCPUTime: 468.76s
% Computational Cost: add. (3146592->3051), mult. (5299968->4432), div. (89400->33), fcn. (4292076->36), ass. (0->1624)
t4610 = mrSges(3,2) * pkin(7);
t3548 = -Ifges(3,6) + t4610;
t3551 = pkin(7) * mrSges(3,1) - Ifges(3,5);
t3652 = sin(qJ(3,4));
t3655 = cos(qJ(3,4));
t3310 = -t3548 * t3655 - t3551 * t3652;
t3561 = pkin(7) * m(3) + mrSges(3,3);
t3513 = -mrSges(2,2) + t3561;
t4737 = t3513 * pkin(6) + Ifges(2,6);
t4741 = t4737 - t3310;
t3660 = sin(qJ(3,3));
t3669 = cos(qJ(3,3));
t3318 = -t3548 * t3669 - t3551 * t3660;
t4740 = t4737 - t3318;
t3663 = sin(qJ(3,2));
t3672 = cos(qJ(3,2));
t3319 = -t3548 * t3672 - t3551 * t3663;
t4739 = t4737 - t3319;
t3666 = sin(qJ(3,1));
t3675 = cos(qJ(3,1));
t3320 = -t3548 * t3675 - t3551 * t3666;
t4738 = t4737 - t3320;
t3670 = cos(qJ(2,3));
t3687 = pkin(8) + pkin(7);
t3504 = t3687 * t3670;
t3661 = sin(qJ(2,3));
t4567 = pkin(2) * t3661;
t3370 = t3504 - t4567;
t4735 = t3370 * t3669;
t3673 = cos(qJ(2,2));
t3505 = t3687 * t3673;
t3664 = sin(qJ(2,2));
t4565 = pkin(2) * t3664;
t3371 = t3505 - t4565;
t4734 = t3371 * t3672;
t3676 = cos(qJ(2,1));
t3506 = t3687 * t3676;
t3667 = sin(qJ(2,1));
t4563 = pkin(2) * t3667;
t3372 = t3506 - t4563;
t4733 = t3372 * t3675;
t3565 = t3660 * pkin(3);
t3477 = t3565 + pkin(6);
t3639 = cos(pkin(4));
t3569 = t3669 * pkin(3);
t3608 = pkin(2) + t3687;
t3609 = pkin(2) - t3687;
t4373 = (t3569 + t3608) * (t3569 + t3609);
t3999 = t3661 * t4373;
t3638 = sin(pkin(4));
t4707 = t3569 + pkin(2);
t4349 = t4707 * t3638;
t3229 = -t3477 * t4349 + t3639 * t3999;
t3662 = sin(qJ(1,3));
t3671 = cos(qJ(1,3));
t3688 = 0.2e1 * t3687;
t4285 = t3661 * t3688;
t3424 = pkin(1) + t4285;
t4368 = t3424 * t4707;
t3210 = -t3229 * t3662 + t3671 * t4368;
t3213 = t3229 * t3671 + t3662 * t4368;
t4313 = t3638 * t3661;
t3993 = t3477 * t4313;
t3289 = t3639 * t4707 - t3993;
t3578 = pkin(1) * t3661;
t3431 = t3687 + t3578;
t3234 = -t3289 * t3662 + t3431 * t3671;
t3237 = t3289 * t3671 + t3431 * t3662;
t4291 = t3639 * t3687;
t3990 = t4707 * t4291;
t3245 = 0.2e1 * t3662 * t3990 + t3671 * t4373;
t3649 = legFrame(3,3);
t3541 = sin(t3649);
t3545 = cos(t3649);
t3623 = t3670 ^ 2;
t3849 = t3671 * t3990;
t3960 = t3662 * t4373;
t3127 = (t3245 * t3545 + 0.2e1 * (t3849 - t3960 / 0.2e1) * t3541) * t3623 + (t3210 * t3545 - t3213 * t3541) * t3670 + (t3234 * t3545 - t3237 * t3541) * t3687;
t3130 = ((-0.2e1 * t3849 + t3960) * t3545 + t3245 * t3541) * t3623 + (t3210 * t3541 + t3213 * t3545) * t3670 + t3687 * (t3234 * t3541 + t3237 * t3545);
t3693 = xP(4);
t3594 = sin(t3693);
t3595 = cos(t3693);
t3704 = koppelP(3,2);
t3708 = koppelP(3,1);
t3345 = -t3594 * t3704 + t3595 * t3708;
t3683 = xDP(4);
t3685 = xDP(2);
t3293 = t3345 * t3683 + t3685;
t3341 = t3594 * t3708 + t3595 * t3704;
t3686 = xDP(1);
t3297 = -t3341 * t3683 + t3686;
t3684 = xDP(3);
t3478 = t3565 - pkin(6);
t3723 = pkin(2) ^ 2;
t3621 = t3669 ^ 2;
t4553 = pkin(3) * t3621;
t4211 = pkin(6) * t4553;
t3427 = pkin(1) * t4291;
t4361 = t3427 * t3669;
t3221 = (t4361 + (pkin(2) * t3478 * t3669 + t3660 * t3723 - t4211) * t3638) * t3670;
t4571 = pkin(2) * t3639;
t3512 = pkin(1) * t4571;
t4305 = t3638 * t3687;
t3348 = -pkin(6) * t4305 - t3512;
t4579 = pkin(1) * t3639;
t4213 = pkin(3) * t4579;
t3933 = t3621 * t4213;
t4132 = pkin(2) * t4305;
t4314 = t3638 * t3660;
t4155 = pkin(1) * t4314;
t3722 = 0.1e1 / pkin(3);
t4304 = t3638 * t3722;
t4011 = 0.1e1 / (t3221 + (t3348 * t3669 + t3660 * t4132 - t3933) * t3661 + t4707 * t4155) * t4304;
t3593 = pkin(1) * t3687;
t3603 = t3639 ^ 2;
t3528 = pkin(2) * t3569;
t3721 = pkin(3) ^ 2;
t3568 = t3621 * t3721;
t3785 = 0.2e1 * t3528 + t3568;
t4329 = t3608 * t3609;
t3746 = t3785 + t4329;
t3968 = t3638 * t4291;
t4308 = t3638 * t3670;
t3971 = t3639 * t4308;
t4337 = (t3639 + 0.1e1) * (t3639 - 0.1e1);
t3986 = t3623 * t4337;
t4274 = t3687 * t3661;
t3351 = pkin(1) * t3565 - pkin(6) * t4274;
t3421 = t4274 + pkin(1);
t4568 = pkin(2) * t3660;
t4135 = t3421 * t4568;
t4294 = t3639 * t3669;
t4147 = pkin(1) * t4294;
t4723 = t3661 * t4707;
t4386 = 0.1e1 / ((t4361 - (pkin(6) * t3669 - t4568) * t4349) * t3670 - t4147 * t4723 + t3638 * (t3351 * t3669 + t4135)) * t3722;
t4015 = (t3593 * t3670 + (-t3477 * t3971 - t3431 + (t3603 - 0.2e1 * t3986) * t3687) * t4707 + ((t3603 * t4373 - t3746) * t3670 - t3477 * t3968) * t3661) * t4386;
t2969 = t3684 * t4015 + (-t3127 * t3297 - t3130 * t3293) * t4011;
t2960 = pkin(6) * t2969;
t3570 = t3670 * pkin(2);
t3367 = t3570 + t4274;
t3486 = t3570 + pkin(1);
t3282 = -pkin(6) * t3367 + t3486 * t3565;
t3326 = t3370 * t4579;
t3355 = pkin(1) + t3367;
t3321 = t3355 * t4568;
t4109 = pkin(6) * t4308;
t4299 = t3639 * t3661;
t4150 = pkin(1) * t4299;
t3836 = t3638 * t3321 - (t4109 + t4150) * t4553;
t3194 = 0.1e1 / ((t3282 * t3638 + t3326) * t3669 + t3836);
t3961 = t3661 * t3504;
t4536 = t3623 * pkin(2);
t3777 = t3961 + t4536;
t3337 = -pkin(2) + t3777;
t3535 = t3623 - 0.2e1;
t4597 = t3623 - 0.1e1;
t3843 = t3535 * t3603 - t4597;
t3974 = t3638 * t4299;
t4318 = t3638 * t3639;
t3539 = pkin(6) * t3603;
t4533 = t3539 - pkin(6);
t4727 = 0.2e1 * t3621;
t4598 = t4727 - 0.1e1;
t4400 = ((-t3370 * t4318 + t4533) * t3669 + (-pkin(6) * t3974 - t3337 * t3603 + t3355 * t3670) * t3660 + (-t3660 * t3669 * t3843 + t3974 * t4598) * pkin(3)) * t3194;
t3312 = t3541 * t3671 + t3545 * t3662;
t3313 = -t3541 * t3662 + t3545 * t3671;
t3476 = pkin(6) * t3660 + pkin(3);
t3742 = ((t3535 * t3565 - pkin(6)) * t3669 + t3660 * t3337) * t4318 - (t4735 + (t3476 - 0.2e1 * t4553) * t3661) * t3603 - (-t3476 + t4553) * t3661;
t4120 = t3670 * t3569;
t4335 = (t3670 + 0.1e1) * (t3670 - 0.1e1);
t3753 = -(-t3687 * t4335 + (t3486 + t4120) * t3661) * t4314 + (t3355 + t4120) * t4294;
t3144 = t3312 * t3753 + t3313 * t3742;
t3273 = (t3504 - t4723) * t4147;
t3813 = -t3670 * t4211 + t3321;
t3205 = 0.1e1 / (t3273 + t3638 * (t3282 * t3669 + t3813));
t4422 = t3144 * t3205;
t3143 = -t3312 * t3742 + t3313 * t3753;
t4423 = t3143 * t3205;
t3068 = t3293 * t4422 + t3297 * t4423 + t3684 * t4400;
t4471 = t3068 * t3687;
t4652 = t4471 - t2960;
t4496 = t4652 * t3670;
t3566 = t3663 * pkin(3);
t3480 = t3566 + pkin(6);
t3572 = t3672 * pkin(3);
t4372 = (t3572 + t3608) * (t3572 + t3609);
t3998 = t3664 * t4372;
t4706 = t3572 + pkin(2);
t4348 = t4706 * t3638;
t3230 = -t3480 * t4348 + t3639 * t3998;
t3665 = sin(qJ(1,2));
t3674 = cos(qJ(1,2));
t4282 = t3664 * t3688;
t3425 = pkin(1) + t4282;
t4366 = t3425 * t4706;
t3211 = -t3230 * t3665 + t3674 * t4366;
t3214 = t3230 * t3674 + t3665 * t4366;
t4311 = t3638 * t3664;
t3992 = t3480 * t4311;
t3290 = t3639 * t4706 - t3992;
t3579 = pkin(1) * t3664;
t3432 = t3687 + t3579;
t3235 = -t3290 * t3665 + t3432 * t3674;
t3238 = t3290 * t3674 + t3432 * t3665;
t3989 = t4706 * t4291;
t3246 = 0.2e1 * t3665 * t3989 + t3674 * t4372;
t3650 = legFrame(2,3);
t3542 = sin(t3650);
t3546 = cos(t3650);
t3627 = t3673 ^ 2;
t3848 = t3674 * t3989;
t3958 = t3665 * t4372;
t3128 = (t3246 * t3546 + 0.2e1 * (t3848 - t3958 / 0.2e1) * t3542) * t3627 + (t3211 * t3546 - t3214 * t3542) * t3673 + (t3235 * t3546 - t3238 * t3542) * t3687;
t3131 = ((-0.2e1 * t3848 + t3958) * t3546 + t3246 * t3542) * t3627 + (t3211 * t3542 + t3214 * t3546) * t3673 + t3687 * (t3235 * t3542 + t3238 * t3546);
t3705 = koppelP(2,2);
t3709 = koppelP(2,1);
t3346 = -t3594 * t3705 + t3595 * t3709;
t3294 = t3346 * t3683 + t3685;
t3342 = t3594 * t3709 + t3595 * t3705;
t3298 = -t3342 * t3683 + t3686;
t3481 = t3566 - pkin(6);
t3625 = t3672 ^ 2;
t4552 = pkin(3) * t3625;
t4210 = pkin(6) * t4552;
t4360 = t3427 * t3672;
t3222 = (t4360 + (pkin(2) * t3481 * t3672 + t3663 * t3723 - t4210) * t3638) * t3673;
t3932 = t3625 * t4213;
t4312 = t3638 * t3663;
t4154 = pkin(1) * t4312;
t4010 = 0.1e1 / (t3222 + (t3348 * t3672 + t3663 * t4132 - t3932) * t3664 + t4706 * t4154) * t4304;
t3529 = pkin(2) * t3572;
t3571 = t3625 * t3721;
t3784 = 0.2e1 * t3529 + t3571;
t3745 = t3784 + t4329;
t4307 = t3638 * t3673;
t3970 = t3639 * t4307;
t3985 = t3627 * t4337;
t4273 = t3687 * t3664;
t3352 = pkin(1) * t3566 - pkin(6) * t4273;
t3422 = t4273 + pkin(1);
t4566 = pkin(2) * t3663;
t4134 = t3422 * t4566;
t4293 = t3639 * t3672;
t4146 = pkin(1) * t4293;
t4722 = t3664 * t4706;
t4385 = 0.1e1 / ((t4360 - (pkin(6) * t3672 - t4566) * t4348) * t3673 - t4146 * t4722 + t3638 * (t3352 * t3672 + t4134)) * t3722;
t4014 = (t3593 * t3673 + (-t3480 * t3970 - t3432 + (t3603 - 0.2e1 * t3985) * t3687) * t4706 + ((t3603 * t4372 - t3745) * t3673 - t3480 * t3968) * t3664) * t4385;
t2970 = t3684 * t4014 + (-t3128 * t3298 - t3131 * t3294) * t4010;
t2961 = pkin(6) * t2970;
t3573 = t3673 * pkin(2);
t3368 = t3573 + t4273;
t3488 = t3573 + pkin(1);
t3283 = -pkin(6) * t3368 + t3488 * t3566;
t3327 = t3371 * t4579;
t3356 = pkin(1) + t3368;
t3322 = t3356 * t4566;
t4108 = pkin(6) * t4307;
t4297 = t3639 * t3664;
t4149 = pkin(1) * t4297;
t3835 = t3638 * t3322 - (t4108 + t4149) * t4552;
t3195 = 0.1e1 / ((t3283 * t3638 + t3327) * t3672 + t3835);
t3959 = t3664 * t3505;
t4535 = t3627 * pkin(2);
t3775 = t3959 + t4535;
t3338 = -pkin(2) + t3775;
t3536 = t3627 - 0.2e1;
t4594 = t3627 - 0.1e1;
t3842 = t3536 * t3603 - t4594;
t3973 = t3638 * t4297;
t4726 = 0.2e1 * t3625;
t4595 = t4726 - 0.1e1;
t4399 = ((-t3371 * t4318 + t4533) * t3672 + (-pkin(6) * t3973 - t3338 * t3603 + t3356 * t3673) * t3663 + (-t3663 * t3672 * t3842 + t3973 * t4595) * pkin(3)) * t3195;
t3314 = t3542 * t3674 + t3546 * t3665;
t3315 = -t3542 * t3665 + t3546 * t3674;
t3479 = pkin(6) * t3663 + pkin(3);
t3741 = ((t3536 * t3566 - pkin(6)) * t3672 + t3663 * t3338) * t4318 - (t4734 + (t3479 - 0.2e1 * t4552) * t3664) * t3603 - (-t3479 + t4552) * t3664;
t4119 = t3673 * t3572;
t4334 = (t3673 + 0.1e1) * (t3673 - 0.1e1);
t3752 = -(-t3687 * t4334 + (t3488 + t4119) * t3664) * t4312 + (t3356 + t4119) * t4293;
t3146 = t3314 * t3752 + t3315 * t3741;
t3274 = (t3505 - t4722) * t4146;
t3812 = -t3673 * t4210 + t3322;
t3206 = 0.1e1 / (t3274 + t3638 * (t3283 * t3672 + t3812));
t4420 = t3146 * t3206;
t3145 = -t3314 * t3741 + t3315 * t3752;
t4421 = t3145 * t3206;
t3069 = t3294 * t4420 + t3298 * t4421 + t3684 * t4399;
t4467 = t3069 * t3687;
t4653 = t4467 - t2961;
t4495 = t4653 * t3673;
t3567 = t3666 * pkin(3);
t3483 = t3567 + pkin(6);
t3575 = t3675 * pkin(3);
t4371 = (t3575 + t3608) * (t3575 + t3609);
t3997 = t3667 * t4371;
t4705 = t3575 + pkin(2);
t4347 = t4705 * t3638;
t3231 = -t3483 * t4347 + t3639 * t3997;
t3668 = sin(qJ(1,1));
t3677 = cos(qJ(1,1));
t4279 = t3667 * t3688;
t3426 = pkin(1) + t4279;
t4364 = t3426 * t4705;
t3212 = -t3231 * t3668 + t3677 * t4364;
t3215 = t3231 * t3677 + t3668 * t4364;
t4309 = t3638 * t3667;
t3991 = t3483 * t4309;
t3291 = t3639 * t4705 - t3991;
t3580 = pkin(1) * t3667;
t3433 = t3687 + t3580;
t3236 = -t3291 * t3668 + t3433 * t3677;
t3239 = t3291 * t3677 + t3433 * t3668;
t3988 = t4705 * t4291;
t3247 = 0.2e1 * t3668 * t3988 + t3677 * t4371;
t3651 = legFrame(1,3);
t3543 = sin(t3651);
t3547 = cos(t3651);
t3631 = t3676 ^ 2;
t3847 = t3677 * t3988;
t3956 = t3668 * t4371;
t3129 = (t3247 * t3547 + 0.2e1 * (t3847 - t3956 / 0.2e1) * t3543) * t3631 + (t3212 * t3547 - t3215 * t3543) * t3676 + (t3236 * t3547 - t3239 * t3543) * t3687;
t3132 = ((-0.2e1 * t3847 + t3956) * t3547 + t3247 * t3543) * t3631 + (t3212 * t3543 + t3215 * t3547) * t3676 + t3687 * (t3236 * t3543 + t3239 * t3547);
t3706 = koppelP(1,2);
t3710 = koppelP(1,1);
t3347 = -t3594 * t3706 + t3595 * t3710;
t3295 = t3347 * t3683 + t3685;
t3343 = t3594 * t3710 + t3595 * t3706;
t3299 = -t3343 * t3683 + t3686;
t3484 = t3567 - pkin(6);
t3629 = t3675 ^ 2;
t4551 = pkin(3) * t3629;
t4209 = pkin(6) * t4551;
t4359 = t3427 * t3675;
t3223 = (t4359 + (pkin(2) * t3484 * t3675 + t3666 * t3723 - t4209) * t3638) * t3676;
t3931 = t3629 * t4213;
t4310 = t3638 * t3666;
t4153 = pkin(1) * t4310;
t4009 = 0.1e1 / (t3223 + (t3348 * t3675 + t3666 * t4132 - t3931) * t3667 + t4705 * t4153) * t4304;
t3530 = pkin(2) * t3575;
t3574 = t3629 * t3721;
t3783 = 0.2e1 * t3530 + t3574;
t3744 = t3783 + t4329;
t4306 = t3638 * t3676;
t3969 = t3639 * t4306;
t3984 = t3631 * t4337;
t4272 = t3687 * t3667;
t3353 = pkin(1) * t3567 - pkin(6) * t4272;
t3423 = t4272 + pkin(1);
t4564 = pkin(2) * t3666;
t4133 = t3423 * t4564;
t4292 = t3639 * t3675;
t4145 = pkin(1) * t4292;
t4721 = t3667 * t4705;
t4384 = 0.1e1 / ((t4359 - (pkin(6) * t3675 - t4564) * t4347) * t3676 - t4145 * t4721 + t3638 * (t3353 * t3675 + t4133)) * t3722;
t4013 = (t3593 * t3676 + (-t3483 * t3969 - t3433 + (t3603 - 0.2e1 * t3984) * t3687) * t4705 + ((t3603 * t4371 - t3744) * t3676 - t3483 * t3968) * t3667) * t4384;
t2971 = t3684 * t4013 + (-t3129 * t3299 - t3132 * t3295) * t4009;
t2962 = pkin(6) * t2971;
t3576 = t3676 * pkin(2);
t3369 = t3576 + t4272;
t3490 = t3576 + pkin(1);
t3284 = -pkin(6) * t3369 + t3490 * t3567;
t3328 = t3372 * t4579;
t3357 = pkin(1) + t3369;
t3323 = t3357 * t4564;
t4107 = pkin(6) * t4306;
t4295 = t3639 * t3667;
t4148 = pkin(1) * t4295;
t3834 = t3638 * t3323 - (t4107 + t4148) * t4551;
t3196 = 0.1e1 / ((t3284 * t3638 + t3328) * t3675 + t3834);
t3957 = t3667 * t3506;
t4534 = t3631 * pkin(2);
t3773 = t3957 + t4534;
t3339 = -pkin(2) + t3773;
t3537 = t3631 - 0.2e1;
t4591 = t3631 - 0.1e1;
t3841 = t3537 * t3603 - t4591;
t3972 = t3638 * t4295;
t4725 = 0.2e1 * t3629;
t4592 = t4725 - 0.1e1;
t4398 = ((-t3372 * t4318 + t4533) * t3675 + (-pkin(6) * t3972 - t3339 * t3603 + t3357 * t3676) * t3666 + (-t3666 * t3675 * t3841 + t3972 * t4592) * pkin(3)) * t3196;
t3316 = t3543 * t3677 + t3547 * t3668;
t3317 = -t3543 * t3668 + t3547 * t3677;
t3482 = pkin(6) * t3666 + pkin(3);
t3740 = ((t3537 * t3567 - pkin(6)) * t3675 + t3666 * t3339) * t4318 - (t4733 + (t3482 - 0.2e1 * t4551) * t3667) * t3603 - (-t3482 + t4551) * t3667;
t4118 = t3676 * t3575;
t4333 = (t3676 + 0.1e1) * (t3676 - 0.1e1);
t3751 = -(-t3687 * t4333 + (t3490 + t4118) * t3667) * t4310 + (t3357 + t4118) * t4292;
t3148 = t3316 * t3751 + t3317 * t3740;
t3275 = (t3506 - t4721) * t4145;
t3811 = -t3676 * t4209 + t3323;
t3207 = 0.1e1 / (t3275 + t3638 * (t3284 * t3675 + t3811));
t4418 = t3148 * t3207;
t3147 = -t3316 * t3740 + t3317 * t3751;
t4419 = t3147 * t3207;
t3070 = t3295 * t4418 + t3299 * t4419 + t3684 * t4398;
t4463 = t3070 * t3687;
t4654 = t4463 - t2962;
t4494 = t4654 * t3676;
t3418 = t3561 * pkin(2) + Ifges(2,4);
t3791 = t3548 * t3666 - t3551 * t3675;
t3281 = -t3791 + t3418;
t3792 = t3548 * t3663 - t3551 * t3672;
t3280 = -t3792 + t3418;
t3793 = t3548 * t3660 - t3551 * t3669;
t3279 = -t3793 + t3418;
t3794 = t3548 * t3652 - t3551 * t3655;
t3277 = -t3794 + t3418;
t3717 = pkin(8) ^ 2;
t3718 = pkin(7) ^ 2;
t4226 = (-t3718 - t3717);
t4611 = (pkin(8) * pkin(7));
t4666 = 2 * t4611 - t4226;
t3554 = t3652 * pkin(3);
t3461 = t3554 + pkin(6);
t3653 = sin(qJ(2,4));
t3556 = t3655 * pkin(3);
t4374 = (t3556 + t3608) * (t3556 + t3609);
t4000 = t3653 * t4374;
t4708 = t3556 + pkin(2);
t4354 = t4708 * t3638;
t3225 = -t3461 * t4354 + t3639 * t4000;
t3654 = sin(qJ(1,4));
t3657 = cos(qJ(1,4));
t4288 = t3653 * t3688;
t3420 = pkin(1) + t4288;
t4370 = t3420 * t4708;
t3208 = -t3225 * t3654 + t3657 * t4370;
t3209 = t3225 * t3657 + t3654 * t4370;
t4316 = t3638 * t3653;
t3996 = t3461 * t4316;
t3285 = t3639 * t4708 - t3996;
t3558 = pkin(1) * t3653;
t4665 = -t3687 - t3558;
t3232 = -t3285 * t3654 - t3657 * t4665;
t3233 = t3285 * t3657 - t3654 * t4665;
t3994 = t4708 * t4291;
t3244 = 0.2e1 * t3654 * t3994 + t3657 * t4374;
t3648 = legFrame(4,3);
t3540 = sin(t3648);
t3544 = cos(t3648);
t3656 = cos(qJ(2,4));
t3607 = t3656 ^ 2;
t3850 = t3657 * t3994;
t3962 = t3654 * t4374;
t3125 = (t3244 * t3544 + 0.2e1 * (t3850 - t3962 / 0.2e1) * t3540) * t3607 + (t3208 * t3544 - t3209 * t3540) * t3656 + (t3232 * t3544 - t3233 * t3540) * t3687;
t3126 = ((-0.2e1 * t3850 + t3962) * t3544 + t3244 * t3540) * t3607 + (t3208 * t3540 + t3209 * t3544) * t3656 + t3687 * (t3232 * t3540 + t3233 * t3544);
t3517 = pkin(2) * t3556;
t3605 = t3655 ^ 2;
t3555 = t3605 * t3721;
t3786 = 0.2e1 * t3517 + t3555;
t3747 = t3786 + t4329;
t3987 = t3607 * t4337;
t4315 = t3638 * t3656;
t3165 = t3593 * t3656 + (-t3461 * t3639 * t4315 + t4665 + (t3603 - 0.2e1 * t3987) * t3687) * t4708 + ((t3603 * t4374 - t3747) * t3656 - t3461 * t3968) * t3653;
t3462 = t3554 - pkin(6);
t4554 = pkin(3) * t3605;
t4212 = pkin(6) * t4554;
t4362 = t3427 * t3655;
t3220 = (t4362 + (pkin(2) * t3462 * t3655 + t3652 * t3723 - t4212) * t3638) * t3656;
t3934 = t3605 * t4213;
t4317 = t3638 * t3652;
t4156 = pkin(1) * t4317;
t3180 = 0.1e1 / (t3220 + (t3348 * t3655 + t3652 * t4132 - t3934) * t3653 + t4708 * t4156);
t4275 = t3687 * t3653;
t3349 = pkin(1) * t3554 - pkin(6) * t4275;
t3419 = t4275 + pkin(1);
t4570 = pkin(2) * t3652;
t4136 = t3419 * t4570;
t4301 = t3639 * t3655;
t4151 = pkin(1) * t4301;
t4724 = t3653 * t4708;
t3200 = 0.1e1 / ((t4362 - (pkin(6) * t3655 - t4570) * t4354) * t3656 - t4151 * t4724 + t3638 * (t3349 * t3655 + t4136));
t3703 = koppelP(4,2);
t3707 = koppelP(4,1);
t3344 = -t3594 * t3703 + t3595 * t3707;
t3292 = t3344 * t3683 + t3685;
t3340 = t3594 * t3707 + t3595 * t3703;
t3296 = -t3340 * t3683 + t3686;
t2938 = (t3165 * t3200 * t3684 + (-t3125 * t3296 - t3126 * t3292) * t3638 * t3180) * t3722;
t2936 = pkin(1) * t2938;
t3557 = t3656 * pkin(2);
t3362 = t3557 + t4275;
t3464 = t3557 + pkin(1);
t3276 = -pkin(6) * t3362 + t3464 * t3554;
t3474 = t3687 * t3656;
t4569 = pkin(2) * t3653;
t3363 = t3474 - t4569;
t3324 = t3363 * t4579;
t3354 = pkin(1) + t3362;
t3311 = t3354 * t4570;
t4106 = pkin(6) * t4315;
t4302 = t3639 * t3653;
t4152 = pkin(1) * t4302;
t3837 = t3638 * t3311 - (t4106 + t4152) * t4554;
t3186 = 0.1e1 / ((t3276 * t3638 + t3324) * t3655 + t3837);
t3963 = t3653 * t3474;
t4537 = t3607 * pkin(2);
t3778 = t3963 + t4537;
t3333 = -pkin(2) + t3778;
t3534 = t3607 - 0.2e1;
t3919 = t3534 * t3603 - t3607;
t3844 = t3919 + 0.1e1;
t3975 = t3638 * t4302;
t4728 = 0.2e1 * t3605;
t4599 = t4728 - 0.1e1;
t4401 = ((-t3363 * t4318 + t4533) * t3655 + (-pkin(6) * t3975 - t3333 * t3603 + t3354 * t3656) * t3652 + (-t3652 * t3655 * t3844 + t3975 * t4599) * pkin(3)) * t3186;
t3308 = t3540 * t3657 + t3544 * t3654;
t3309 = -t3540 * t3654 + t3544 * t3657;
t3460 = pkin(6) * t3652 + pkin(3);
t4218 = -0.2e1 * t4554;
t3743 = ((t3534 * t3554 - pkin(6)) * t3655 + t3652 * t3333) * t4318 - (t3363 * t3655 + (t3460 + t4218) * t3653) * t3603 - (-t3460 + t4554) * t3653;
t4121 = t3656 * t3556;
t4336 = (t3656 + 0.1e1) * (t3656 - 0.1e1);
t3754 = -(-t3687 * t4336 + (t3464 + t4121) * t3653) * t4317 + (t3354 + t4121) * t4301;
t3142 = t3308 * t3754 + t3309 * t3743;
t3272 = (t3474 - t4724) * t4151;
t3814 = -t3656 * t4212 + t3311;
t3201 = 0.1e1 / (t3272 + t3638 * (t3276 * t3655 + t3814));
t4424 = t3142 * t3201;
t3141 = -t3308 * t3743 + t3309 * t3754;
t4425 = t3141 * t3201;
t2995 = t3292 * t4424 + t3296 * t4425 + t3684 * t4401;
t4477 = t2995 * t3652;
t2979 = pkin(3) * t4477;
t2934 = pkin(7) * t2938;
t2933 = pkin(8) * t2938;
t2992 = pkin(6) * t2995;
t4252 = t2992 + t2933;
t3946 = -t2934 - t4252;
t4655 = t3946 - t2979;
t4732 = -t3653 * t4655 + t2936;
t2963 = pkin(1) * t2969;
t4473 = t3068 * t3660;
t3020 = pkin(3) * t4473;
t2957 = pkin(7) * t2969;
t2954 = pkin(8) * t2969;
t3057 = pkin(6) * t3068;
t4245 = t3057 + t2954;
t3945 = -t2957 - t4245;
t4656 = t3945 - t3020;
t4731 = -t3661 * t4656 + t2963;
t2964 = pkin(1) * t2970;
t4469 = t3069 * t3663;
t3021 = pkin(3) * t4469;
t2958 = pkin(7) * t2970;
t2955 = pkin(8) * t2970;
t3058 = pkin(6) * t3069;
t4244 = t3058 + t2955;
t3944 = -t2958 - t4244;
t4657 = t3944 - t3021;
t4730 = -t3664 * t4657 + t2964;
t2965 = pkin(1) * t2971;
t4465 = t3070 * t3666;
t3022 = pkin(3) * t4465;
t2959 = pkin(7) * t2971;
t2956 = pkin(8) * t2971;
t3059 = pkin(6) * t3070;
t4243 = t3059 + t2956;
t3943 = -t2959 - t4243;
t4658 = t3943 - t3022;
t4729 = -t3667 * t4658 + t2965;
t4162 = t4591 * pkin(2);
t4164 = t4597 * pkin(2);
t3562 = m(3) * pkin(2) + mrSges(2,1);
t2858 = t2957 + t2954;
t2859 = t2958 + t2955;
t2860 = t2959 + t2956;
t2994 = t2995 ^ 2;
t3278 = t3462 * t3557 + t3349;
t3190 = 0.1e1 / ((t3278 * t3638 + t3324) * t3655 + t3837);
t4550 = pkin(3) * t3653;
t4125 = t3605 * t4550;
t4303 = t3639 * t3652;
t4393 = t3190 * (-t3638 * t4125 + (-pkin(3) * t4303 + t3363 * t3638) * t3655 - pkin(2) * t4303);
t4008 = t3308 * t4317;
t3157 = -(-t3308 * t4302 + t3309 * t3656) * t4554 + (-pkin(3) * t4008 + (-pkin(2) * t3309 - t3308 * t4291) * t3656 + t3653 * (t3308 * t4571 - t3309 * t3687)) * t3655 - pkin(2) * t4008;
t4416 = t3157 * t3190;
t4007 = t3309 * t4317;
t3156 = -(t3308 * t3656 + t3309 * t4302) * t4554 + (pkin(3) * t4007 + (-pkin(2) * t3308 + t3309 * t4291) * t3656 - t3653 * (t3308 * t3687 + t3309 * t4571)) * t3655 + pkin(2) * t4007;
t4417 = t3156 * t3190;
t3085 = t3292 * t4417 + t3296 * t4416 + t3684 * t4393;
t3084 = t3085 ^ 2;
t4461 = t3084 * t3607;
t4685 = t2994 + t4461;
t4260 = 0.2e1 * t2858;
t4720 = t3057 + t4260;
t4259 = 0.2e1 * t2859;
t4719 = t3058 + t4259;
t4258 = 0.2e1 * t2860;
t4718 = t3059 + t4258;
t3436 = pkin(1) * t4274;
t3637 = t3687 ^ 2;
t4717 = t3436 + t3637;
t3437 = pkin(1) * t4273;
t4716 = t3437 + t3637;
t3438 = pkin(1) * t4272;
t4715 = t3438 + t3637;
t4713 = 0.2e1 * pkin(2);
t4638 = 0.2e1 * t2938;
t4637 = 0.2e1 * t2969;
t4636 = 0.2e1 * t2970;
t4635 = 0.2e1 * t2971;
t4712 = 0.2e1 * t3603;
t4196 = 0.2e1 * t3638;
t4618 = 0.2e1 * t3670;
t4617 = 0.2e1 * t3673;
t4616 = 0.2e1 * t3676;
t4711 = Ifges(3,1) + Ifges(2,3);
t4600 = t3603 - 0.1e1;
t4710 = t3607 - 0.1e1;
t4709 = t4712 - 0.2e1;
t3065 = t3068 ^ 2;
t4704 = Ifges(3,4) * t3065;
t3066 = t3069 ^ 2;
t4703 = Ifges(3,4) * t3066;
t3067 = t3070 ^ 2;
t4702 = Ifges(3,4) * t3067;
t4005 = t3313 * t4314;
t3158 = -(t3312 * t3670 + t3313 * t4299) * t4553 + (pkin(3) * t4005 + (-pkin(2) * t3312 + t3313 * t4291) * t3670 - t3661 * (t3312 * t3687 + t3313 * t4571)) * t3669 + pkin(2) * t4005;
t3286 = t3478 * t3570 + t3351;
t3197 = 0.1e1 / ((t3286 * t3638 + t3326) * t3669 + t3836);
t4415 = t3158 * t3197;
t3135 = t3293 * t4415;
t4006 = t3312 * t4314;
t3159 = -(-t3312 * t4299 + t3313 * t3670) * t4553 + (-pkin(3) * t4006 + (-pkin(2) * t3313 - t3312 * t4291) * t3670 + t3661 * (t3312 * t4571 - t3313 * t3687)) * t3669 - pkin(2) * t4006;
t4414 = t3159 * t3197;
t3136 = t3297 * t4414;
t4124 = t3661 * t4553;
t3906 = t3638 * t4124;
t4300 = t3639 * t3660;
t4392 = t3197 * (-t3906 + (-pkin(3) * t4300 + t3370 * t3638) * t3669 - pkin(2) * t4300);
t3173 = t3684 * t4392;
t3098 = t3136 + t3135 + t3173;
t3095 = t3098 ^ 2;
t4701 = Ifges(3,4) * t3095;
t4003 = t3315 * t4312;
t3160 = -(t3314 * t3673 + t3315 * t4297) * t4552 + (pkin(3) * t4003 + (-pkin(2) * t3314 + t3315 * t4291) * t3673 - t3664 * (t3314 * t3687 + t3315 * t4571)) * t3672 + pkin(2) * t4003;
t3287 = t3481 * t3573 + t3352;
t3198 = 0.1e1 / ((t3287 * t3638 + t3327) * t3672 + t3835);
t4413 = t3160 * t3198;
t3137 = t3294 * t4413;
t4004 = t3314 * t4312;
t3161 = -(-t3314 * t4297 + t3315 * t3673) * t4552 + (-pkin(3) * t4004 + (-pkin(2) * t3315 - t3314 * t4291) * t3673 + t3664 * (t3314 * t4571 - t3315 * t3687)) * t3672 - pkin(2) * t4004;
t4412 = t3161 * t3198;
t3138 = t3298 * t4412;
t4123 = t3664 * t4552;
t3905 = t3638 * t4123;
t4298 = t3639 * t3663;
t4391 = t3198 * (-t3905 + (-pkin(3) * t4298 + t3371 * t3638) * t3672 - pkin(2) * t4298);
t3174 = t3684 * t4391;
t3099 = t3138 + t3137 + t3174;
t3096 = t3099 ^ 2;
t4700 = Ifges(3,4) * t3096;
t4001 = t3317 * t4310;
t3162 = -(t3316 * t3676 + t3317 * t4295) * t4551 + (pkin(3) * t4001 + (-pkin(2) * t3316 + t3317 * t4291) * t3676 - t3667 * (t3316 * t3687 + t3317 * t4571)) * t3675 + pkin(2) * t4001;
t3288 = t3484 * t3576 + t3353;
t3199 = 0.1e1 / ((t3288 * t3638 + t3328) * t3675 + t3834);
t4411 = t3162 * t3199;
t3139 = t3295 * t4411;
t4002 = t3316 * t4310;
t3163 = -(-t3316 * t4295 + t3317 * t3676) * t4551 + (-pkin(3) * t4002 + (-pkin(2) * t3317 - t3316 * t4291) * t3676 + t3667 * (t3316 * t4571 - t3317 * t3687)) * t3675 - pkin(2) * t4002;
t4410 = t3163 * t3199;
t3140 = t3299 * t4410;
t4122 = t3667 * t4551;
t3904 = t3638 * t4122;
t4296 = t3639 * t3666;
t4390 = t3199 * (-t3904 + (-pkin(3) * t4296 + t3372 * t3638) * t3675 - pkin(2) * t4296);
t3175 = t3684 * t4390;
t3100 = t3140 + t3139 + t3175;
t3097 = t3100 ^ 2;
t4699 = Ifges(3,4) * t3097;
t4492 = t2938 * t3652;
t4488 = t2969 * t3660;
t4484 = t2970 * t3663;
t4480 = t2971 * t3666;
t4065 = t4600 * t3653;
t4475 = t2995 * t3687;
t2980 = pkin(6) * t4475;
t2935 = pkin(6) * t2938;
t2988 = t2995 * pkin(8);
t4253 = t2995 * pkin(7) + t2988;
t4490 = t2938 * t3721;
t4270 = (-t2935 / 0.2e1 + t4253) * t3554 - t4490 / 0.2e1;
t2817 = t2980 + t4270;
t2834 = -t2935 + t4253;
t3392 = t3723 + t4666;
t4096 = pkin(3) * t4492;
t3903 = t3687 * t4096;
t3790 = t2995 * t3392 - t3903;
t4375 = t3392 * t3639;
t2841 = t3085 * t4375 + t3790;
t2854 = t2934 + t2933;
t2861 = t4475 - t4096;
t2881 = t2979 + t2992;
t4455 = t3085 * t3639;
t2887 = t2995 + t4455;
t4491 = t2938 * t3653;
t2923 = pkin(1) * t4491;
t2991 = t2995 * t3723;
t2993 = pkin(1) * t2995;
t3079 = t3085 * t4305;
t3391 = pkin(1) * t4329;
t3359 = t3639 * t3391;
t3719 = pkin(6) ^ 2;
t3724 = pkin(1) ^ 2;
t4225 = t3719 + t3724;
t3797 = t4666 + t4225;
t3361 = t3721 + t3797;
t3375 = -0.2e1 / 0.3e1 * t4611 - t3717 / 0.3e1 - t3718 / 0.3e1 + t3723;
t3394 = pkin(2) * t3427;
t3429 = pkin(1) * t4275;
t3516 = pkin(6) * t3554;
t3538 = 0.2e1 * t3593;
t3596 = t3721 + t3723;
t3599 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t3604 = t3655 * t3605;
t3606 = t3656 * t3607;
t3720 = pkin(3) * t3721;
t4110 = pkin(6) * t4329;
t4265 = 0.2e1 * t2854;
t4271 = t3687 * t3721;
t3739 = t3653 * (((t2935 - 0.2e1 * t2988) * pkin(7) + t2991 + pkin(6) * t2933 + t4226 * t2995) * t3554 + t2938 * t4271 + t2995 * t4110) + ((0.2e1 * t2979 + 0.2e1 * t2992 + t4265) * t3653 + t2936) * t3517 + t4732 * t3555;
t3758 = t3638 * t4136 - t3653 * t3934 + t3220;
t3939 = -t3719 / 0.2e1 - t3721 / 0.2e1 + t3723 / 0.2e1;
t3765 = t3939 - t4666;
t4643 = 3 * t4666;
t3766 = t3721 + t4225 + t4643;
t3796 = -t4666 + t3596;
t3602 = t3639 * t3603;
t4459 = t3085 * t4708;
t4036 = t3461 * t4459;
t3874 = t3687 * t4036;
t3804 = t3602 * t3874;
t3805 = t3085 * t3461 * t4000;
t3947 = t3717 / 0.2e1 + t3718 / 0.2e1;
t3815 = t3947 + t4611;
t3823 = -t4455 * t4665 + t2834;
t3845 = t3723 - t4643;
t3387 = -t4329 / 0.2e1;
t3846 = t3638 * t3387;
t3995 = t3461 * t4305;
t3873 = t3085 * t3995;
t4085 = -t3554 / 0.2e1;
t3893 = t2938 * t4085;
t3913 = t3652 * t4152;
t3914 = pkin(1) * t3968;
t3937 = 0.2e1 * t4132;
t3948 = 0.3e1 / 0.2e1 * t3375 * t3687;
t4605 = 0.3e1 / 0.2e1 * t3723 + t3815;
t3949 = t3639 * t4605;
t3983 = t3638 * t4337;
t4033 = t3085 * t4316;
t4034 = t3085 * t4337;
t4035 = t3085 * t4354;
t4043 = t2995 * t4316;
t4050 = t2938 * t3555;
t4493 = t2938 * t3638;
t4051 = t3605 * t4493;
t4064 = t4600 * t3687;
t3825 = -t3723 / 0.2e1 + t3947;
t4105 = (pkin(6) * t2988 + pkin(7) * t4252 + t2938 * t3825 + t4270) * t3556;
t4129 = t2854 * t3554;
t4144 = t3721 * t4579;
t4456 = t3085 * t3638;
t4174 = 0.2e1 * t4456;
t4195 = 0.2e1 * t3639;
t4217 = 0.2e1 * t3556;
t4319 = t3637 * t3639;
t4332 = t3603 * t3687;
t4389 = t3200 * t3722;
t4454 = t3085 * t3653;
t4457 = t3085 * t3607;
t4460 = t3085 * t3460;
t4561 = pkin(3) * t2938;
t4562 = pkin(2) * t3687;
t4572 = pkin(2) * t3638;
t4577 = pkin(2) * t2938;
t4578 = pkin(2) * t2887;
t4580 = pkin(1) * t3638;
t4613 = pkin(1) * pkin(3);
t4626 = 0.2e1 * t3602;
t4647 = t3517 + t3555 - t3516;
t4670 = 0.2e1 * t3516 - t3555;
t4686 = t2887 * t4275 + t2993;
t2773 = (-(t3845 + t3786) * t3606 * t3983 * t4459 + (-0.4e1 * t3804 + (-0.3e1 * (t3375 + t3786) * t3653 * t3079 - 0.2e1 * t4105 + (-0.2e1 * t2817 + t4050) * pkin(2)) * t3603 + ((t2995 * t3747 + t3903) * t4580 + 0.4e1 * t3874) * t3639 + (t3653 * t3948 + t3391 + t3786 * (t3599 * t3653 + pkin(1))) * t4174 - pkin(2) * t4050 + 0.2e1 * t4105 + t2817 * t4713) * t3607 + (t3805 * t4626 + (0.2e1 * (t3765 + t4647) * t4035 + t3739) * t3603 + (-t3805 + ((t3893 + t4475) * t3558 + t2854 * t4085 + t2991 / 0.2e1 + (t3555 / 0.2e1 + t3517 + t3815) * t2995) * t4354) * t4195 + (0.4e1 * t3429 + t3766 + t4670) * t4035 - t3739) * t3656 + 0.2e1 * t3804 + (0.2e1 * (t3939 + t4647) * t4033 + (t2923 - t4655) * t3556 + pkin(2) * t2881) * t4332 + (((t2991 - t4129) * t3653 + pkin(1) * t2861) * t3638 - 0.2e1 * t4036 + (t3786 + t4666) * t4043) * t4291 + (t3538 + (t3361 + t4670) * t3653) * t3079 - (t2854 * t3558 - t3687 * t4655) * t3556 - t2881 * t4562) * t3085 * t4389 + ((t3605 * t4144 + (t3512 + t3995) * t4217 + t3461 * t3937 + t3359) * t4457 + (t3720 * t2887 * t3604 - (t3085 * t3996 - 0.3e1 * t4578) * t3555 + (t3687 * t3893 + t2995 * t4605 + ((-t3461 * t4572 + t3427) * t3653 + t3949) * t3085) * t4217 + 0.2e1 * (t3461 * t3846 + t3394) * t4454 + t2841 * pkin(2)) * t3656 + t4686 * t3555 + (-t3873 / 0.2e1 + t4686 * pkin(2)) * t4217 + t2841 * t4275 - pkin(2) * t3873 + pkin(1) * (t3085 * t4319 + t3790)) / ((pkin(3) * t4156 + t3348 * t3653) * t3655 + t3758) * t2995 * t4304 + ((t3652 * t3914 + ((t3516 + t3796) * t3655 + (t3460 + t4554) * pkin(2)) * t4337) * t4457 + ((pkin(2) * t4493 + t3419 * t4034) * t4554 + ((t2938 * t3596 - t3554 * t3823) * t3638 + t3420 * pkin(2) * t4034) * t3655 - (t3652 * t3823 - t4561) * t4572 - t3687 * (t2936 * t4303 - t4065 * t4460)) * t3656 + t4051 * t4613 + (-t4665 * t3085 * t4064 + (pkin(3) * t3913 + t3419 * t4572) * t2938) * t3655 - (-pkin(3) * t4491 + (t2834 * t3653 + t3419 * t4455 + t2993) * t3652) * t4305 + t3913 * t4577) / ((-pkin(2) * t4152 + t3349 * t3638) * t3655 + t3758) * t2938;
t4290 = t3652 * t3687;
t4041 = t2995 * t4290;
t2862 = t4041 - t4561;
t2863 = -t2980 + t4490;
t2864 = t4475 - t2935;
t3077 = t4033 * t3554;
t4544 = t2995 * pkin(2);
t3935 = t3077 - t4544;
t2885 = t3935 * t3607;
t3898 = pkin(6) * t4033;
t2886 = t3898 - t4544 / 0.2e1;
t2922 = pkin(1) * t4493;
t2985 = t2992 / 0.2e1;
t2987 = pkin(6) * t4544;
t2990 = t2995 * t3721;
t3699 = pkin(6) / 0.2e1;
t3435 = t3554 + t3699;
t3076 = -0.2e1 * t3435 * t4033;
t4542 = t3085 * pkin(2);
t3083 = 0.2e1 * t4542;
t3360 = 0.3e1 * t3721 + t3797;
t4224 = t3723 - t3721;
t3510 = -t3719 + t4224;
t3511 = t3637 + t3723;
t3559 = pkin(1) * t3607;
t3560 = pkin(1) * t3656;
t3600 = -pkin(7) / 0.2e1 - pkin(8) / 0.2e1;
t3714 = 0.3e1 * pkin(2);
t3716 = -0.2e1 * pkin(1);
t3767 = -pkin(1) * t3557 - t3429 - t3511;
t3876 = t3606 * t3079;
t3806 = t3652 * t3876;
t4289 = t3653 * t3656;
t4032 = t3085 * t4289;
t3875 = t3461 * t4032;
t3897 = pkin(2) * t3963;
t4476 = t2995 * t3653;
t4042 = t3652 * t4476;
t3899 = pkin(3) * t4042;
t3920 = t3637 * t2995 + t2991;
t4175 = -0.2e1 * t4456;
t3936 = pkin(6) * t4175;
t3938 = pkin(2) * t4174;
t3940 = t3719 / 0.3e1 - t3723 / 0.3e1 + t3721;
t3982 = t3607 * t4329;
t4037 = t3333 * t4460;
t4331 = t3604 * t3721;
t4059 = (-t2995 * t3639 + t3085 * t3919 + t3085) * t4331;
t4086 = -t4577 / 0.2e1;
t3698 = pkin(6) / 0.3e1;
t4095 = (t3554 + t3698) * t4569;
t4111 = pkin(6) * t4337;
t4140 = t3638 * t4544;
t4161 = pkin(1) * t4475;
t4173 = t3085 * t3688;
t4198 = 0.2e1 * t3085;
t4541 = t3085 * pkin(6);
t4208 = pkin(2) * t4541;
t4219 = -0.2e1 * t3593;
t4232 = t3516 + t3721;
t4238 = t4329 / 0.3e1 - 0.2e1 / 0.3e1 * t3721;
t4266 = t2922 + t3083;
t4330 = t3607 * t3687;
t4458 = t3085 * t3603;
t4543 = t2995 * pkin(3);
t4497 = ((pkin(2) * t4033 + t2985 + t2934 / 0.2e1 + t2933 / 0.2e1) * t3652 + t4543 / 0.2e1) * t3607;
t4545 = pkin(6) * t3687;
t4623 = -0.2e1 * t3603;
t4625 = 0.3e1 * t3602;
t4642 = -0.2e1 * pkin(2);
t2777 = (((t3607 - 0.4e1 / 0.3e1) * t4331 + ((-0.2e1 / 0.3e1 * t3516 + t4238) * t3607 + 0.2e1 / 0.3e1 * t3897 + 0.4e1 / 0.3e1 * t3516 + t3940) * t3655 + (0.4e1 / 0.3e1 * t4554 - 0.2e1 / 0.3e1 * t3460) * t3333) * t3085 * t4625 + (t2995 * t3534 * t4331 + ((-pkin(1) * t4544 + t3687 * t3936) * t3656 + (pkin(6) * t3938 - t4161) * t3653 + t2990 - t3920) * t3655 + (t2863 * t4289 - t2987 * t3607 + t2987 + ((t3510 - t3982) * t3653 + (t3606 - t3656) * t3687 * t4713) * t4456) * t3652 + (-(t2885 + (-t2864 * t3653 + t2993) * t3656 - 0.4e1 * t3077 - 0.4e1 * t3898 + 0.3e1 * t4544) * t3605 + 0.2e1 * (t3806 - t4497 + (-0.2e1 * (-pkin(2) * t4491 / 0.4e1 + t3079) * t3656 + (t2936 + t3938) * t3653 + t2985 + t2854) * t3652) * t3655 - t2995 * t4537 - t2864 * t4289 - 0.2e1 * t2886) * pkin(3)) * t3603 + ((-0.3e1 * t3607 + 0.3e1) * t3085 * t4331 + ((t2922 / 0.2e1 + t3083) * t3607 + (t3638 * t4086 + (pkin(1) + 0.2e1 * t4275) * t3085) * t3656 - t3638 * t3899 - (t2992 + t4265) * t4316 / 0.2e1 - t2922 - t4542) * t4218 + (0.2e1 * (t3387 + t4232) * t4457 + (((pkin(1) * t4476 - t2864) * t3554 + t2863) * t3638 - t3419 * pkin(2) * t4198) * t3656 - 0.4e1 * (-0.3e1 / 0.4e1 * pkin(2) * t4043 + t4541) * t3554 + (pkin(6) * t4140 + t3085 * t4219) * t3653 - t3085 * t3360) * t3655 + ((-t3638 * t4161 + 0.2e1 * t4208) * t3652 + pkin(3) * t4266) * t3607 + ((pkin(1) * t4140 + pkin(6) * t4173) * t3652 + pkin(3) * t4173) * t4289 + (-0.2e1 * t4208 + (t3653 * t3920 + t4161) * t3638) * t3652 - (t2854 * t4316 + t4266) * pkin(3)) * t3639 - t4710 * t2990 * t3604 + (t2885 + (-t2864 * t3656 + t3936) * t3653 - t3935) * t4554 + (-t2990 + (0.2e1 * t4497 + (-0.2e1 * t3876 + 0.2e1 * ((pkin(1) * t4456 + t4086) * t3653 + t3079) * t3656 - t2923 + t3946) * t3652) * pkin(3)) * t3655 + t3806 * t4642 + ((t2987 + (t3653 * t4329 + t4219) * t4456) * t3652 + pkin(2) * t4543) * t3607 + (((pkin(1) * t3938 - t2863) * t3653 + t3085 * t3937) * t3652 + t2864 * t4550) * t3656 + (-t2987 + (t3361 * t3653 + t3538) * t4456) * t3652 + 0.2e1 * t2886 * pkin(3)) / (t3272 + (t3278 * t3655 + t3814) * t3638) * t3085 + ((t4059 - ((-t4537 + (-t4275 + pkin(1)) * t3656 + t3714) * t4458 + (t3076 + t2995 * (t3560 + t4713)) * t3639 + (-t2938 * t3557 - t4732) * t3638 + t3085 * t3333) * t4554 + (-(pkin(3) * t3460 * t3607 - t3767 - t4232) * t4458 + ((((t3558 - t3687) * t3554 - t4545) * t3656 + 0.3e1 * t4095) * t4456 - t4665 * t4096 + t3767 * t2995) * t3639 + (pkin(2) * t3461 * t4476 - pkin(6) * t2861 * t3656) * t3638 + pkin(3) * t4336 * t4460) * t3655 - t3603 * t4037 - (-t3511 * t3653 - t3593 + (-pkin(2) * t4289 + t4330) * pkin(1)) * t4303 * t4456 + t2862 * t3354 * t3638 + t4037) * t2995 - ((((-t3557 + t3559 + t3716 - t4288) * t4455 - t3354 * t2995) * t3638 + t4032 * t4111) * t3605 + ((-t4315 * t4460 + t4561) * t3639 + (((t3600 * t3607 - t4665) * t4623 - t4330 - t4065 * t3557 - t4665) * t3085 + (t3639 * t4665 - t4106) * t2995) * t3652) * t3655 + (-(t3559 - t3419) * t4455 + t2995 * t3557 + (t2861 - t2935) * t3653 + t2993) * t3638 - t3603 * t3875 + t2938 * (t3560 + pkin(2)) * t3639 + t3875) * t4561) * t3190;
t3700 = -0.3e1 / 0.2e1 * pkin(2);
t3782 = t3982 + t4232;
t4012 = t3180 * t4304;
t3865 = t3126 * t4012;
t3866 = t3125 * t4012;
t4016 = t3165 * t4389;
t4369 = t3420 * t3656;
t2785 = ((t2887 * t4331 - (t3077 - 0.2e1 * t4578) * t4554 + (t2887 * t3511 - t3903) * t3655) * t2995 - ((t2887 * t4290 - t4561) * t3655 + pkin(2) * (t3292 * t3865 + t3296 * t3866 - t3684 * t4016)) * t4561) * t3186 + ((-t4059 + (((t3700 + t3778) * t4623 + 0.2e1 * t4537 + t4369 - pkin(2)) * t4554 + (-(-t3723 + t3782 + 0.2e1 * t3897) * t3603 + pkin(2) * t4369 + t3429 + t3637 + t3782) * t3655 - t4600 * t3460 * pkin(2)) * t3085 + ((t3076 + 0.2e1 * t4544) * t4554 + (t2995 * t3511 - t4129) * t3655) * t3639) * t3190 + ((-(t2979 + t2854) * t4125 + ((pkin(3) * t4041 - t4490) * t3656 + t3899 * t4642) * t3655 + (-pkin(2) * t4042 + t2862 * t3656) * pkin(2) + ((0.2e1 * t3435 * t3474 - 0.3e1 * t4095) * t3655 + t3363 * t4570) * t4455) * t3190 + (-(t3605 * t4275 + t3656 * t4708) * t4561 + ((t3474 - 0.2e1 * t4569) * t3556 + t3363 * pkin(2)) * t4477) * t3186) * t3638) * t3085;
t2937 = t2938 ^ 2;
t2865 = t2994 + t2937;
t2972 = t4737 * t2995;
t2974 = t3418 * t2995;
t3658 = Ifges(3,2) - Ifges(3,1);
t3446 = t3658 * t3652;
t2975 = t2995 * t3446;
t2976 = t2995 * t3513;
t2977 = t3548 * t2995;
t2978 = t3551 * t2995;
t4184 = mrSges(3,2) * t4544;
t2981 = -0.2e1 * t4184;
t4185 = mrSges(3,1) * t4544;
t2982 = 0.2e1 * t4185;
t3924 = -pkin(6) * t3562 - Ifges(3,4) + Ifges(2,5);
t3678 = pkin(6) * mrSges(3,2);
t4608 = pkin(2) * mrSges(3,1);
t3456 = -t3678 + t4608;
t4358 = t3456 * t3652;
t3762 = t3924 - t4358;
t4607 = pkin(2) * mrSges(3,2);
t3833 = t3446 + t4607;
t4517 = Ifges(3,4) * t3605;
t4606 = pkin(6) * mrSges(3,1);
t3224 = -0.2e1 * t4517 + (t3833 + t4606) * t3655 - t3762;
t3690 = m(3) * t3718;
t3691 = m(3) * t3723;
t4601 = -Ifges(2,1) - Ifges(3,2);
t4166 = t3691 + t4601;
t3795 = Ifges(2,2) + Ifges(3,3) - t3690 + t4166;
t4609 = mrSges(3,3) * pkin(7);
t3350 = -0.2e1 * t4609 + t3795;
t4525 = mrSges(3,2) * t3652;
t4189 = pkin(2) * t4525;
t3448 = -0.2e1 * t4189;
t3445 = t3658 * t3605;
t3612 = 0.2e1 * t4608;
t4513 = Ifges(3,4) * t3652;
t4205 = 0.2e1 * t4513;
t4678 = (t3612 + t4205) * t3655 + t3445;
t4651 = t3448 + t4678;
t3240 = t3350 + t4651;
t3268 = t3656 * t4741;
t3457 = t4606 + t4607;
t3459 = 0.2e1 * t3457;
t3549 = 0.2e1 * t3548;
t3550 = 0.2e1 * t3551;
t3681 = pkin(1) * mrSges(3,1);
t3614 = 0.2e1 * t3681;
t3659 = 0.2e1 * t3658;
t3689 = m(2) + m(3);
t3592 = t3689 * t3719;
t3615 = 0.2e1 * t4609;
t4227 = t3615 + t3690;
t3735 = t3689 * t3724 + Ifges(1,3) + t3592 + t4227 - t4601;
t3763 = -0.2e1 * mrSges(2,3) * pkin(6) - t3592 + t4166 + t4711;
t3764 = t3615 - t3795;
t4170 = 0.2e1 * t4318;
t4581 = pkin(1) * t3513;
t4220 = 0.2e1 * t4581;
t4228 = -0.2e1 * t3678 + t3612;
t4233 = t3561 * t4713 + 0.2e1 * Ifges(2,4);
t4498 = 0.2e1 * pkin(6);
t4529 = mrSges(3,1) * t3652;
t3382 = -t3562 + t4525;
t4585 = pkin(1) * t3382;
t4615 = 0.2e1 * t3678;
t3115 = ((t3764 + 0.2e1 * t4189 - t4678) * t3607 - 0.2e1 * t3277 * t4289 + t3659 * t3605 + (t4228 + 0.4e1 * t4513) * t3655 - t3459 * t3652 + t3763) * t3603 + (-t3224 * t3653 + t3268) * t4170 + t3240 * t3607 + ((t3550 * t3653 + t3614) * t3655 + (-t3549 * t3652 + t4233) * t3653 - 0.2e1 * t4585) * t3656 - t3445 + (t4615 - 0.2e1 * t4513) * t3655 + t3653 * t4220 + (mrSges(2,3) + t4529) * t4498 + t3735;
t3824 = t3691 + t4227 + t4711;
t3248 = t3824 + t4651;
t3515 = 0.2e1 * t4517;
t4674 = -t3446 - t3457;
t3164 = ((t3655 * t4674 + t3515 + t3762) * t3653 + t3268) * t3638 + t3639 * ((t3513 * t3653 + (mrSges(3,1) * t3655 - t3382) * t3656) * pkin(1) + t3248);
t3455 = t3678 + t4608;
t3458 = -t4606 + t4607;
t3918 = t3551 * t3653 + t3681;
t4073 = pkin(7) + t3558;
t3680 = pkin(1) * mrSges(3,2);
t4237 = t3548 * t3653 + t3680;
t3185 = ((-t3455 * t3656 - t3918) * t3655 + (t3458 * t3656 + t4237) * t3652 - Ifges(3,3) * t3656) * t3638 - ((mrSges(3,2) * t4073 - Ifges(3,6)) * t3655 + t3652 * (mrSges(3,1) * t4073 - Ifges(3,5))) * t3639;
t3491 = t4610 / 0.4e1 - Ifges(3,6) / 0.4e1;
t3598 = -Ifges(3,3) - t3658;
t3884 = t3658 * t4051;
t3829 = -0.2e1 * t3884;
t4509 = t2995 * Ifges(3,4);
t4077 = t3605 * t4509;
t4081 = t2938 * t4517;
t4160 = t3085 * t4585;
t4176 = -t4607 / 0.2e1;
t4589 = pkin(1) * t3085;
t4193 = mrSges(3,1) * t4589;
t4194 = mrSges(3,2) * t4580;
t4206 = -0.4e1 * t4513;
t4207 = Ifges(3,4) * t4196;
t4341 = t3551 * t2938;
t4342 = t3548 * t3638;
t4346 = t3548 * t2938;
t4501 = 0.2e1 * t4606;
t4503 = -0.2e1 * t3680;
t4521 = Ifges(3,4) * t2938;
t4603 = t3456 / 0.4e1;
t4633 = -0.2e1 * t3085;
t4634 = -0.4e1 * t3085;
t4698 = -t2773 * t3185 - t2777 * t3164 - t2785 * t3115 + (t4081 + (t2978 + (-t3446 / 0.2e1 + t4176) * t2938) * t3655 + (mrSges(3,1) * t4086 - t2977) * t3652 + t2974 - t4521 / 0.2e1) * t3987 * t4634 + (((t2976 + (-mrSges(3,2) * t3655 - t4529) * t4638) * t2993 + (0.2e1 * t4077 + (-t2995 * t3457 - t2975 + t4341) * t3655 - (t2995 * t3456 + t4346) * t3652 + t2995 * t3924) * t3085 * t4196) * t3639 + t2994 * t3605 * t4207 + ((t2937 * t3458 + t2994 * t4674) * t3638 + t3085 * t2938 * t4503) * t3655 + ((t2937 * t3455 - t2994 * t3456) * t3652 + t2994 * t3924) * t3638 + 0.2e1 * (-mrSges(3,1) * t4492 + t2976) * t4589 + t4709 * ((t2982 + t4346) * t3655 + (t2981 + t4341) * t3652 + (t3655 * t4205 + t3350 + t3445) * t2995) * t4454) * t3656 + 0.2e1 * (-t2977 * t3652 + t2978 * t3655 + t2974 + ((-t3457 - 0.2e1 * t3446) * t3655 - t4358 + (0.4e1 * t3605 - 0.2e1) * Ifges(3,4)) * t2938) * t4458 + ((t3884 * t4634 + (-0.8e1 * (t3491 * t2995 + (t4513 + t4603) * t2938) * t4456 - t2865 * t3681) * t3655 + ((-t2938 * t3457 + t2978) * t3652 + t2972 - t2938 * t3658) * t4175 - (-t2865 * t4525 + t2994 * t3562) * pkin(1)) * t3653 + ((-t2975 - t4184 - t4341 / 0.2e1) * t3655 + (-t4185 + t4346 / 0.2e1) * t3652 + t4599 * t4509) * t4638) * t3639 + ((t3551 * t4317 + t4342 * t3655) * (t2937 - t2994) + (t3829 + (-0.2e1 * t4193 + (t4206 + t4615) * t4493) * t3655 + (-t2938 * t3598 + t4492 * t4501 - t2972) * t3638 + 0.2e1 * t4160) * t2995) * t3653 + t4081 * t4634 + (t2937 * t4194 + (t2978 + (-t3446 - t4606) * t2938) * t4633) * t3655 + mrSges(3,1) * t2937 * t4156 + ((mrSges(3,2) * t2935 - t2977) * t3652 + t2974 - t4521) * t4633;
t3023 = pkin(6) * t4471;
t3044 = t3068 * pkin(8);
t4248 = t3068 * pkin(7) + t3044;
t4486 = t2969 * t3721;
t4269 = (-t2960 / 0.2e1 + t4248) * t3565 - t4486 / 0.2e1;
t2818 = t3023 + t4269;
t2838 = -t2960 + t4248;
t4094 = pkin(3) * t4488;
t3902 = t3687 * t4094;
t3789 = t3068 * t3392 - t3902;
t2842 = t3098 * t4375 + t3789;
t2866 = t4471 - t4094;
t2882 = t3020 + t3057;
t4442 = t3098 * t3639;
t2897 = t3068 + t4442;
t2895 = pkin(2) * t2897;
t4487 = t2969 * t3661;
t2942 = pkin(1) * t4487;
t3047 = t3068 * t3723;
t3062 = pkin(1) * t3068;
t3525 = pkin(6) * t3565;
t3620 = t3669 * t3621;
t3622 = t3670 * t3623;
t3738 = t3661 * (((t2960 - 0.2e1 * t3044) * pkin(7) + t3047 + pkin(6) * t2954 + t4226 * t3068) * t3565 + t2969 * t4271 + t3068 * t4110) + ((0.2e1 * t3020 + 0.2e1 * t3057 + t4260) * t3661 + t2963) * t3528 + t4731 * t3568;
t3757 = t3638 * t4135 - t3661 * t3933 + t3221;
t3800 = t3098 * t3477 * t3999;
t4446 = t3098 * t4707;
t4031 = t3477 * t4446;
t3872 = t3687 * t4031;
t3803 = t3602 * t3872;
t3822 = t3431 * t4442 + t2838;
t3978 = t3098 * t4305;
t3871 = t3477 * t3978;
t4084 = -t3565 / 0.2e1;
t3892 = t2969 * t4084;
t3912 = t3660 * t4150;
t4028 = t3098 * t4313;
t3929 = 0.2e1 * t4028;
t4029 = t3098 * t4337;
t4030 = t3098 * t4349;
t4048 = t2969 * t3568;
t4327 = t3621 * t3638;
t4049 = t2969 * t4327;
t4104 = (pkin(6) * t3044 + pkin(7) * t4245 + t2969 * t3825 + t4269) * t3569;
t4128 = t2858 * t3565;
t4489 = t2969 * t3638;
t4143 = pkin(2) * t4489;
t4216 = 0.2e1 * t3569;
t4441 = t3098 * t3661;
t4443 = t3098 * t3638;
t4444 = t3098 * t3623;
t4560 = pkin(3) * t2969;
t4576 = pkin(2) * t2969;
t4646 = t3528 + t3568 - t3525;
t4669 = 0.2e1 * t3525 - t3568;
t4684 = t2897 * t4274 + t3062;
t2774 = (-(t3845 + t3785) * t3622 * t3983 * t4446 + (-0.4e1 * t3803 + (-0.3e1 * (t3375 + t3785) * t3661 * t3978 - 0.2e1 * t4104 + (-0.2e1 * t2818 + t4048) * pkin(2)) * t3603 + ((t3068 * t3746 + t3902) * t4580 + 0.4e1 * t3872) * t3639 + 0.2e1 * (t3661 * t3948 + t3391 + t3785 * (t3599 * t3661 + pkin(1))) * t4443 - pkin(2) * t4048 + 0.2e1 * t4104 + t2818 * t4713) * t3623 + (t3800 * t4626 + (0.2e1 * (t3765 + t4646) * t4030 + t3738) * t3603 + (-t3800 + ((t3892 + t4471) * t3578 + t2858 * t4084 + t3047 / 0.2e1 + (t3568 / 0.2e1 + t3528 + t3815) * t3068) * t4349) * t4195 + (0.4e1 * t3436 + t3766 + t4669) * t4030 - t3738) * t3670 + 0.2e1 * t3803 + ((t3939 + t4646) * t3929 + (t2942 - t4656) * t3569 + pkin(2) * t2882) * t4332 + (((t3047 - t4128) * t3661 + pkin(1) * t2866) * t3638 - 0.2e1 * t4031 + (t3785 + t4666) * t3068 * t4313) * t4291 + (t3538 + (t3361 + t4669) * t3661) * t3978 - (t2858 * t3578 - t3687 * t4656) * t3569 - t2882 * t4562) * t3098 * t4386 + ((t3621 * t4144 + (t3477 * t4305 + t3512) * t4216 + t3477 * t3937 + t3359) * t4444 + (t3720 * t2897 * t3620 + (t3687 * t3892 + t3068 * t4605 + ((-t3477 * t4572 + t3427) * t3661 + t3949) * t3098) * t4216 + 0.2e1 * (t3477 * t3846 + t3394) * t4441 + t2842 * pkin(2)) * t3670 + (-t3871 / 0.2e1 + t4684 * pkin(2)) * t4216 + t2842 * t4274 - pkin(2) * t3871 + pkin(1) * (t3098 * t4319 + t3789) + ((-t3098 * t3993 + 0.3e1 * t2895) * t3670 + t4684) * t3568) / ((pkin(3) * t4155 + t3348 * t3661) * t3669 + t3757) * t3068 * t4304 + ((t3660 * t3914 + ((t3525 + t3796) * t3669 + (t3476 + t4553) * pkin(2)) * t4337) * t4444 + ((t3421 * t4029 + t4143) * t4553 + ((t2969 * t3596 - t3565 * t3822) * t3638 + t3424 * pkin(2) * t4029) * t3669 - (t3660 * t3822 - t4560) * t4572 - t3687 * (-t3476 * t4441 * t4600 + t2963 * t4300)) * t3670 + t4049 * t4613 + (t3431 * t3098 * t4064 + (pkin(3) * t3912 + t3421 * t4572) * t2969) * t3669 - (-pkin(3) * t4487 + (t2838 * t3661 + t3421 * t4442 + t3062) * t3660) * t4305 + t3912 * t4576) / ((-pkin(2) * t4150 + t3351 * t3638) * t3669 + t3757) * t2969;
t4287 = t3660 * t3687;
t3011 = t3068 * t4287;
t2869 = t3011 - t4560;
t2872 = -t3023 + t4486;
t3060 = pkin(2) * t3068;
t3930 = -0.2e1 * t4028;
t2891 = pkin(6) * t3930 + t3060;
t2939 = pkin(1) * t4489;
t3046 = t3068 * t3721;
t3440 = t3565 + t3699;
t3086 = t3440 * t3930;
t4540 = t3098 * pkin(2);
t3092 = 0.2e1 * t4540;
t3581 = pkin(1) * t3623;
t3582 = pkin(1) * t3670;
t3840 = pkin(2) * t3929;
t3750 = ((t3840 - t3945) * t3660 + t3068 * pkin(3)) * t3669 + (t3565 * t4028 - t3060) * t3621 + t3060;
t4286 = t3661 * t3670;
t4089 = pkin(2) * t4286;
t3776 = -t3623 * t3687 + t4089;
t3885 = t4196 * t3539;
t3896 = pkin(2) * t3961;
t4328 = t3620 * t3721;
t4474 = t3068 * t3639;
t3952 = ((0.2e1 * t3135 + 0.2e1 * t3136 + 0.2e1 * t3173 - t4444) * t3603 + t4474 + t4444 - t3098) * t4328;
t3955 = t3477 * t4286;
t3981 = t3623 * t4329;
t4027 = t3098 * t3504;
t4472 = t3068 * t3661;
t4040 = t3660 * t4472;
t4093 = (t3565 + t3698) * t4567;
t4100 = t3068 * t3570;
t4103 = t2969 * t3570;
t4116 = pkin(6) * t4442;
t4117 = pkin(6) * t4443;
t4139 = pkin(2) * t4472;
t4169 = 0.2e1 * t4286;
t4588 = pkin(1) * t3098;
t4223 = 0.2e1 * t4588;
t4231 = t3525 + t3721;
t4263 = -t2939 - t3092;
t4278 = t3687 * t3622;
t4326 = t3623 * t3721;
t4353 = t3476 * t3603;
t4377 = t3337 * t3476;
t4445 = t3098 * t3603;
t4557 = pkin(3) * t3476;
t4621 = 0.2e1 * t3623;
t4596 = t4621 - 0.2e1;
t4614 = pkin(1) * pkin(2);
t4624 = 0.4e1 * t3602;
t4659 = t2872 * t4286 - t3057 * t4164;
t4662 = -pkin(1) * t3570 - t4717;
t2778 = (t3046 * t3620 + ((t3046 - t3047) * t3603 - t3046) * t3669 + ((t3535 * t4328 + t3669 * t4662) * t3603 - t3620 * t4326) * t3068 + (pkin(6) * t4139 + t2872 * t3670) * t3638 * t4294 + (((-0.4e1 / 0.3e1 + t3623) * t4328 + ((-0.2e1 / 0.3e1 * t3525 + t4238) * t3623 + 0.2e1 / 0.3e1 * t3896 + 0.4e1 / 0.3e1 * t3525 + t3940) * t3669 - 0.2e1 / 0.3e1 * t4377) * t4625 + (0.3e1 * (t3721 - t4326) * t3620 + ((t3387 + t4231) * t4621 + (-pkin(2) * t4274 - t4614) * t4618 - 0.2e1 * t3436 - t3360) * t3669) * t3639 - t3885 * t4735) * t3098 + (t4659 * t3603 + (pkin(2) * t4596 + 0.2e1 * t3961) * t4116 + (((t3637 * t3068 + t3047) * t3661 + (t3687 + t3776) * t3062) * t3639 + (-t4596 * t3593 + ((t3510 - t3981) * t3603 + t3981 + t3361) * t3661 + (pkin(1) * t4169 + ((t3622 - t3670) * t4712 - 0.2e1 * t3622 + t4618) * t3687) * pkin(2)) * t3098) * t3638 - t4659) * t3660 + (t2891 * t3603 + t4263 * t3639 - t2891 + (t3337 * t3098 * t4624 + (-t3062 * t3670 - 0.3e1 * t3060) * t3603 + (-(-t4143 + t4223) * t3670 + 0.2e1 * t2939 + t3092) * t3639 + t3060) * t3621 + ((-(-0.4e1 * t4117 - t4496) * t3621 - t4496) * t3603 + (-(-t3638 * t4720 + 0.4e1 * t4027) * t3621 + 0.2e1 * t4027 - t2858 * t3638) * t3639 - (0.2e1 * t4117 + t4496) * t3621 + t4496) * t3661 + (-t3750 * t3603 + (-(t2939 + 0.4e1 * t4540) * t3621 - t4263) * t3639 + t3750) * t3623 + ((t4720 * t3603 - 0.4e1 * t4116 - t2942 + ((0.2e1 * t2963 + t4103) * t3603 - t4103) * t3661 + (((pkin(1) * t4472 - t4652) * t3670 + 0.3e1 * t4139) * t3639 + ((-0.4e1 * t3504 + 0.2e1 * t4278 + 0.4e1 * t4567) * t3603 - 0.2e1 * t4278 + t3431 * t4618) * t3098) * t3638 + t3945) * t3669 + (-t3098 + 0.4e1 * t4445 + 0.2e1 * t4474) * t3906) * t3660) * pkin(3)) / (t3273 + t3638 * (t3286 * t3669 + t3813)) * t3098 + ((-t3952 - ((t3086 + t3068 * (t3582 + t4713)) * t3639 + (-t4103 - t4731) * t3638) * t4553 + ((-pkin(1) * t4100 + t3431 * t4094 - t3068 * (t3436 + t3511)) * t3639 + (-pkin(6) * t2866 * t3670 + t3477 * t4139) * t3638) * t3669 + t3355 * t2869 * t3638) * t3068 + (t3355 * t3068 * t4327 + (t4109 * t4473 + (pkin(1) * t4040 + t2869) * t3639) * t3669 + (-t4100 + (t4094 - t4652) * t3661 - t3062) * t3638 - t2969 * (t3582 + pkin(2)) * t3639) * t4560 + ((-((-t4536 + (-t4274 + pkin(1)) * t3670 + t3714) * t3603 + t3337) * t4553 + (-(t3623 * t4557 - t3525 + t4224 - t4662) * t3603 + (((t3578 - t3687) * t3565 - t4545) * t3670 + 0.3e1 * t4093) * t4318 + t4335 * t4557) * t3669 - t3337 * t4353 - (-pkin(1) * t3776 - t3511 * t3661 - t3593) * t3638 * t4300 + t4377) * t3068 + ((-(-t3570 + t3581 + t3716 - t4285) * t4318 - t4111 * t4286) * t3621 + (t3476 * t3971 + ((t3600 * t3623 + t4089 / 0.2e1 + t3431) * t4712 - t3776 - t3431) * t3660) * t3669 + (t3581 - t3421) * t4318 + t3603 * t3955 - t3955) * t4560) * t3098) * t3197;
t3781 = t3981 + t4231;
t3909 = pkin(2) * t4040;
t4367 = t3424 * t3670;
t4641 = -0.2e1 * pkin(3);
t2786 = ((t2897 * t4328 + 0.2e1 * t2895 * t4553 + (t3511 * t2897 - t3902) * t3669) * t3068 - ((t2897 * t4287 - t4560) * t3669 - t4576) * t4560) * t3194 + ((t3952 + (((t3700 + t3777) * t4623 + 0.2e1 * t4536 + t4367 - pkin(2)) * t4553 + (-(-t3723 + t3781 + 0.2e1 * t3896) * t3603 + pkin(2) * t4367 + t3781 + t4717) * t3669 + (t3476 - t4353) * pkin(2)) * t3098 + ((t3086 + 0.2e1 * t3060) * t4553 + (t3068 * t3511 - t4128) * t3669) * t3639) * t3197 + ((-(t3020 + t2858) * t4124 + ((pkin(3) * t3011 - t4486) * t3670 + t3909 * t4641) * t3669 + (t2869 * t3670 - t3909) * pkin(2) + ((0.2e1 * t3440 * t3504 - 0.3e1 * t4093) * t3669 + t3370 * t4568) * t4442) * t3197 + (-(t3621 * t4274 + t3670 * t4707) * t4560 + (t3370 * pkin(2) + ((t3504 - 0.2e1 * t4567) * t3669 - t4124) * pkin(3)) * t4473) * t3194) * t3638) * t3098;
t2966 = t2969 ^ 2;
t2878 = t3065 + t2966;
t2996 = t4737 * t3068;
t3002 = t3418 * t3068;
t3452 = t3658 * t3660;
t3005 = t3068 * t3452;
t3008 = t3068 * t3513;
t3014 = t3548 * t3068;
t3017 = t3551 * t3068;
t4182 = mrSges(3,2) * t3060;
t3026 = -0.2e1 * t4182;
t4532 = mrSges(3,1) * t3068;
t4183 = pkin(2) * t4532;
t3027 = 0.2e1 * t4183;
t4357 = t3456 * t3660;
t3761 = t3924 - t4357;
t3832 = t3452 + t4607;
t4516 = Ifges(3,4) * t3621;
t3226 = -0.2e1 * t4516 + (t3832 + t4606) * t3669 - t3761;
t4524 = mrSges(3,2) * t3660;
t4188 = pkin(2) * t4524;
t3468 = -0.2e1 * t4188;
t3449 = t3658 * t3621;
t4512 = Ifges(3,4) * t3660;
t4203 = 0.2e1 * t4512;
t4677 = (t3612 + t4203) * t3669 + t3449;
t4650 = t3468 + t4677;
t3241 = t3350 + t4650;
t3269 = t3670 * t4740;
t4528 = mrSges(3,1) * t3660;
t3388 = -t3562 + t4524;
t4584 = pkin(1) * t3388;
t3122 = ((t3764 + 0.2e1 * t4188 - t4677) * t3623 - t3279 * t4169 + t3659 * t3621 + (t4228 + 0.4e1 * t4512) * t3669 - t3459 * t3660 + t3763) * t3603 + (-t3226 * t3661 + t3269) * t4170 + t3241 * t3623 + ((t3550 * t3661 + t3614) * t3669 + (-t3549 * t3660 + t4233) * t3661 - 0.2e1 * t4584) * t3670 - t3449 + (t4615 - 0.2e1 * t4512) * t3669 + t3661 * t4220 + (mrSges(2,3) + t4528) * t4498 + t3735;
t3250 = t3824 + t4650;
t3522 = 0.2e1 * t4516;
t4673 = -t3452 - t3457;
t3166 = ((t3669 * t4673 + t3522 + t3761) * t3661 + t3269) * t3638 + t3639 * ((t3513 * t3661 + (mrSges(3,1) * t3669 - t3388) * t3670) * pkin(1) + t3250);
t3917 = t3551 * t3661 + t3681;
t4072 = pkin(7) + t3578;
t4236 = t3548 * t3661 + t3680;
t3187 = ((-t3455 * t3670 - t3917) * t3669 + (t3458 * t3670 + t4236) * t3660 - Ifges(3,3) * t3670) * t3638 - ((mrSges(3,2) * t4072 - Ifges(3,6)) * t3669 + t3660 * (mrSges(3,1) * t4072 - Ifges(3,5))) * t3639;
t3883 = t3658 * t4049;
t3828 = -0.2e1 * t3883;
t4508 = t3068 * Ifges(3,4);
t4076 = t3621 * t4508;
t4080 = t2969 * t4516;
t4159 = t3098 * t4584;
t4177 = -t4608 / 0.2e1;
t4192 = mrSges(3,1) * t4588;
t4204 = -0.4e1 * t4512;
t4340 = t3551 * t2969;
t4345 = t3548 * t2969;
t4520 = Ifges(3,4) * t2969;
t4631 = -0.2e1 * t3098;
t4632 = -0.4e1 * t3098;
t4697 = -t2774 * t3187 - t2778 * t3166 - t2786 * t3122 + (t4080 + (t3017 + (-t3452 / 0.2e1 + t4176) * t2969) * t3669 + (t2969 * t4177 - t3014) * t3660 + t3002 - t4520 / 0.2e1) * t3986 * t4632 + (((t3008 + (-mrSges(3,2) * t3669 - t4528) * t4637) * t3062 + (0.2e1 * t4076 + (-t3068 * t3457 - t3005 + t4340) * t3669 - (t3068 * t3456 + t4345) * t3660 + t3068 * t3924) * t3098 * t4196) * t3639 + t3065 * t3621 * t4207 + ((t2966 * t3458 + t3065 * t4673) * t3638 + t3098 * t2969 * t4503) * t3669 + ((t2966 * t3455 - t3065 * t3456) * t3660 + t3065 * t3924) * t3638 + (-mrSges(3,1) * t4488 + t3008) * t4223 + t4709 * ((t3027 + t4345) * t3669 + (t3026 + t4340) * t3660 + (t3669 * t4203 + t3350 + t3449) * t3068) * t4441) * t3670 + 0.2e1 * (-t3014 * t3660 + t3017 * t3669 + t3002 + ((-t3457 - 0.2e1 * t3452) * t3669 - t4357 + (0.4e1 * t3621 - 0.2e1) * Ifges(3,4)) * t2969) * t4445 + ((t3883 * t4632 + (-0.8e1 * (t3491 * t3068 + (t4512 + t4603) * t2969) * t4443 - t2878 * t3681) * t3669 - 0.2e1 * ((-t2969 * t3457 + t3017) * t3660 + t2996 - t2969 * t3658) * t4443 - (-t2878 * t4524 + t3065 * t3562) * pkin(1)) * t3661 + ((-t3005 - t4182 - t4340 / 0.2e1) * t3669 + (-t4183 + t4345 / 0.2e1) * t3660 + t4598 * t4508) * t4637) * t3639 + ((t3551 * t4314 + t4342 * t3669) * (t2966 - t3065) + (t3828 + (-0.2e1 * t4192 + (t4204 + t4615) * t4489) * t3669 + (-t2969 * t3598 + t4488 * t4501 - t2996) * t3638 + 0.2e1 * t4159) * t3068) * t3661 + t4080 * t4632 + (t2966 * t4194 + (t3017 + (-t3452 - t4606) * t2969) * t4631) * t3669 + mrSges(3,1) * t2966 * t4155 + ((mrSges(3,2) * t2960 - t3014) * t3660 + t3002 - t4520) * t4631;
t3024 = pkin(6) * t4467;
t3048 = t3069 * pkin(8);
t4247 = t3069 * pkin(7) + t3048;
t4482 = t2970 * t3721;
t4268 = (-t2961 / 0.2e1 + t4247) * t3566 - t4482 / 0.2e1;
t2819 = t3024 + t4268;
t2839 = -t2961 + t4247;
t4092 = pkin(3) * t4484;
t3901 = t3687 * t4092;
t3788 = t3069 * t3392 - t3901;
t2843 = t3099 * t4375 + t3788;
t2867 = t4467 - t4092;
t2883 = t3021 + t3058;
t4435 = t3099 * t3639;
t2898 = t3069 + t4435;
t2896 = pkin(2) * t2898;
t4483 = t2970 * t3664;
t2943 = pkin(1) * t4483;
t3051 = t3069 * t3723;
t3063 = pkin(1) * t3069;
t3526 = pkin(6) * t3566;
t3624 = t3672 * t3625;
t3626 = t3673 * t3627;
t3737 = t3664 * (((t2961 - 0.2e1 * t3048) * pkin(7) + t3051 + pkin(6) * t2955 + t4226 * t3069) * t3566 + t2970 * t4271 + t3069 * t4110) + ((0.2e1 * t3021 + 0.2e1 * t3058 + t4259) * t3664 + t2964) * t3529 + t4730 * t3571;
t3756 = t3638 * t4134 - t3664 * t3932 + t3222;
t3799 = t3099 * t3480 * t3998;
t4439 = t3099 * t4706;
t4026 = t3480 * t4439;
t3870 = t3687 * t4026;
t3802 = t3602 * t3870;
t3821 = t3432 * t4435 + t2839;
t3977 = t3099 * t4305;
t3869 = t3480 * t3977;
t4083 = -t3566 / 0.2e1;
t3891 = t2970 * t4083;
t3911 = t3663 * t4149;
t4023 = t3099 * t4311;
t3927 = 0.2e1 * t4023;
t4024 = t3099 * t4337;
t4025 = t3099 * t4348;
t4046 = t2970 * t3571;
t4324 = t3625 * t3638;
t4047 = t2970 * t4324;
t4127 = t2859 * t3566;
t4131 = (pkin(6) * t3048 + pkin(7) * t4244 + t2970 * t3825 + t4268) * t3572;
t4485 = t2970 * t3638;
t4142 = pkin(2) * t4485;
t4215 = 0.2e1 * t3572;
t4434 = t3099 * t3664;
t4436 = t3099 * t3638;
t4437 = t3099 * t3627;
t4559 = pkin(3) * t2970;
t4575 = pkin(2) * t2970;
t4645 = t3529 + t3571 - t3526;
t4668 = 0.2e1 * t3526 - t3571;
t4683 = t2898 * t4273 + t3063;
t2775 = (-(t3845 + t3784) * t3626 * t3983 * t4439 + (-0.4e1 * t3802 + (-0.3e1 * (t3375 + t3784) * t3664 * t3977 - 0.2e1 * t4131 + (-0.2e1 * t2819 + t4046) * pkin(2)) * t3603 + ((t3069 * t3745 + t3901) * t4580 + 0.4e1 * t3870) * t3639 + 0.2e1 * (t3664 * t3948 + t3391 + t3784 * (t3599 * t3664 + pkin(1))) * t4436 - pkin(2) * t4046 + 0.2e1 * t4131 + t2819 * t4713) * t3627 + (t3799 * t4626 + (0.2e1 * (t3765 + t4645) * t4025 + t3737) * t3603 + (-t3799 + ((t3891 + t4467) * t3579 + t2859 * t4083 + t3051 / 0.2e1 + (t3571 / 0.2e1 + t3529 + t3815) * t3069) * t4348) * t4195 + (0.4e1 * t3437 + t3766 + t4668) * t4025 - t3737) * t3673 + 0.2e1 * t3802 + ((t3939 + t4645) * t3927 + (t2943 - t4657) * t3572 + pkin(2) * t2883) * t4332 + (((t3051 - t4127) * t3664 + pkin(1) * t2867) * t3638 - 0.2e1 * t4026 + (t3784 + t4666) * t3069 * t4311) * t4291 + (t3538 + (t3361 + t4668) * t3664) * t3977 - (t2859 * t3579 - t3687 * t4657) * t3572 - t2883 * t4562) * t3099 * t4385 + ((t3625 * t4144 + (t3480 * t4305 + t3512) * t4215 + t3480 * t3937 + t3359) * t4437 + (t3720 * t2898 * t3624 + (t3687 * t3891 + t3069 * t4605 + ((-t3480 * t4572 + t3427) * t3664 + t3949) * t3099) * t4215 + 0.2e1 * (t3480 * t3846 + t3394) * t4434 + t2843 * pkin(2)) * t3673 + (-t3869 / 0.2e1 + t4683 * pkin(2)) * t4215 + t2843 * t4273 - pkin(2) * t3869 + pkin(1) * (t3099 * t4319 + t3788) + ((-t3099 * t3992 + 0.3e1 * t2896) * t3673 + t4683) * t3571) / ((pkin(3) * t4154 + t3348 * t3664) * t3672 + t3756) * t3069 * t4304 + ((t3663 * t3914 + ((t3526 + t3796) * t3672 + (t3479 + t4552) * pkin(2)) * t4337) * t4437 + ((t3422 * t4024 + t4142) * t4552 + ((t2970 * t3596 - t3566 * t3821) * t3638 + t3425 * pkin(2) * t4024) * t3672 - (t3663 * t3821 - t4559) * t4572 - t3687 * (-t3479 * t4434 * t4600 + t2964 * t4298)) * t3673 + t4047 * t4613 + (t3432 * t3099 * t4064 + (pkin(3) * t3911 + t3422 * t4572) * t2970) * t3672 - (-pkin(3) * t4483 + (t2839 * t3664 + t3422 * t4435 + t3063) * t3663) * t4305 + t3911 * t4575) / ((-pkin(2) * t4149 + t3352 * t3638) * t3672 + t3756) * t2970;
t4284 = t3663 * t3687;
t3012 = t3069 * t4284;
t2870 = t3012 - t4559;
t2873 = -t3024 + t4482;
t3052 = t3069 * pkin(2);
t3928 = -0.2e1 * t4023;
t2892 = pkin(6) * t3928 + t3052;
t2940 = pkin(1) * t4485;
t3050 = t3069 * t3721;
t3442 = t3566 + t3699;
t3087 = t3442 * t3928;
t4573 = pkin(2) * t3099;
t3094 = 0.2e1 * t4573;
t3583 = pkin(1) * t3627;
t3584 = pkin(1) * t3673;
t3839 = pkin(2) * t3927;
t3749 = ((t3839 - t3944) * t3663 + t3069 * pkin(3)) * t3672 + (t3566 * t4023 - t3052) * t3625 + t3052;
t4283 = t3664 * t3673;
t4088 = pkin(2) * t4283;
t3774 = -t3627 * t3687 + t4088;
t3895 = pkin(2) * t3959;
t4325 = t3624 * t3721;
t4470 = t3069 * t3639;
t3951 = ((0.2e1 * t3137 + 0.2e1 * t3138 + 0.2e1 * t3174 - t4437) * t3603 + t4470 + t4437 - t3099) * t4325;
t3954 = t3480 * t4283;
t3980 = t3627 * t4329;
t4022 = t3099 * t3505;
t4468 = t3069 * t3664;
t4039 = t3663 * t4468;
t4091 = (t3566 + t3698) * t4565;
t4099 = t3069 * t3573;
t4102 = t2970 * t3573;
t4114 = pkin(6) * t4435;
t4115 = pkin(6) * t4436;
t4138 = pkin(2) * t4468;
t4168 = 0.2e1 * t4283;
t4587 = pkin(1) * t3099;
t4222 = 0.2e1 * t4587;
t4230 = t3526 + t3721;
t4262 = -t2940 - t3094;
t4277 = t3687 * t3626;
t4323 = t3627 * t3721;
t4352 = t3479 * t3603;
t4376 = t3338 * t3479;
t4438 = t3099 * t3603;
t4556 = pkin(3) * t3479;
t4620 = 0.2e1 * t3627;
t4593 = t4620 - 0.2e1;
t4660 = -t4594 * pkin(6) * t3052 + t2873 * t4283;
t4663 = -pkin(1) * t3573 - t4716;
t2779 = (t3050 * t3624 + ((t3050 - t3051) * t3603 - t3050) * t3672 + ((t3536 * t4325 + t3672 * t4663) * t3603 - t3624 * t4323) * t3069 + (pkin(6) * t4138 + t2873 * t3673) * t3638 * t4293 + (((-0.4e1 / 0.3e1 + t3627) * t4325 + ((-0.2e1 / 0.3e1 * t3526 + t4238) * t3627 + 0.2e1 / 0.3e1 * t3895 + 0.4e1 / 0.3e1 * t3526 + t3940) * t3672 - 0.2e1 / 0.3e1 * t4376) * t4625 + (0.3e1 * (t3721 - t4323) * t3624 + ((t3387 + t4230) * t4620 + (-pkin(2) * t4273 - t4614) * t4617 - 0.2e1 * t3437 - t3360) * t3672) * t3639 - t3885 * t4734) * t3099 + (t4660 * t3603 + (pkin(2) * t4593 + 0.2e1 * t3959) * t4114 + (((t3637 * t3069 + t3051) * t3664 + (t3687 + t3774) * t3063) * t3639 + (-t4593 * t3593 + ((t3510 - t3980) * t3603 + t3980 + t3361) * t3664 + (pkin(1) * t4168 + ((t3626 - t3673) * t4712 - 0.2e1 * t3626 + t4617) * t3687) * pkin(2)) * t3099) * t3638 - t4660) * t3663 + (t2892 * t3603 + t4262 * t3639 - t2892 + (t3099 * t3338 * t4624 + (-t3063 * t3673 - 0.3e1 * t3052) * t3603 + (-(-t4142 + t4222) * t3673 + 0.2e1 * t2940 + t3094) * t3639 + t3052) * t3625 + ((-(-0.4e1 * t4115 - t4495) * t3625 - t4495) * t3603 + (-(-t3638 * t4719 + 0.4e1 * t4022) * t3625 + 0.2e1 * t4022 - t2859 * t3638) * t3639 - (0.2e1 * t4115 + t4495) * t3625 + t4495) * t3664 + (-t3749 * t3603 + (-(t2940 + 0.4e1 * t4573) * t3625 - t4262) * t3639 + t3749) * t3627 + ((t4719 * t3603 - 0.4e1 * t4114 - t2943 + ((0.2e1 * t2964 + t4102) * t3603 - t4102) * t3664 + (((pkin(1) * t4468 - t4653) * t3673 + 0.3e1 * t4138) * t3639 + ((-0.4e1 * t3505 + 0.2e1 * t4277 + 0.4e1 * t4565) * t3603 - 0.2e1 * t4277 + t3432 * t4617) * t3099) * t3638 + t3944) * t3672 + (-t3099 + 0.4e1 * t4438 + 0.2e1 * t4470) * t3905) * t3663) * pkin(3)) / (t3274 + t3638 * (t3287 * t3672 + t3812)) * t3099 + ((-t3951 - ((t3087 + t3069 * (t3584 + t4713)) * t3639 + (-t4102 - t4730) * t3638) * t4552 + ((-pkin(1) * t4099 + t3432 * t4092 - t3069 * (t3437 + t3511)) * t3639 + (-pkin(6) * t2867 * t3673 + t3480 * t4138) * t3638) * t3672 + t3356 * t2870 * t3638) * t3069 + (t3356 * t3069 * t4324 + (t4108 * t4469 + (pkin(1) * t4039 + t2870) * t3639) * t3672 + (-t4099 + (t4092 - t4653) * t3664 - t3063) * t3638 - t2970 * (t3584 + pkin(2)) * t3639) * t4559 + ((-((-t4535 + (-t4273 + pkin(1)) * t3673 + t3714) * t3603 + t3338) * t4552 + (-(t3627 * t4556 - t3526 + t4224 - t4663) * t3603 + (((t3579 - t3687) * t3566 - t4545) * t3673 + 0.3e1 * t4091) * t4318 + t4334 * t4556) * t3672 - t3338 * t4352 - (-pkin(1) * t3774 - t3511 * t3664 - t3593) * t3638 * t4298 + t4376) * t3069 + ((-(-t3573 + t3583 + t3716 - t4282) * t4318 - t4111 * t4283) * t3625 + (t3479 * t3970 + ((t3600 * t3627 + t4088 / 0.2e1 + t3432) * t4712 - t3774 - t3432) * t3663) * t3672 + (t3583 - t3422) * t4318 + t3603 * t3954 - t3954) * t4559) * t3099) * t3198;
t3780 = t3980 + t4230;
t3908 = pkin(2) * t4039;
t4365 = t3425 * t3673;
t2787 = ((t2898 * t4325 + 0.2e1 * t2896 * t4552 + (t3511 * t2898 - t3901) * t3672) * t3069 - ((t2898 * t4284 - t4559) * t3672 - t4575) * t4559) * t3195 + ((t3951 + (((t3700 + t3775) * t4623 + 0.2e1 * t4535 + t4365 - pkin(2)) * t4552 + (-(-t3723 + t3780 + 0.2e1 * t3895) * t3603 + pkin(2) * t4365 + t3780 + t4716) * t3672 + (t3479 - t4352) * pkin(2)) * t3099 + ((t3087 + 0.2e1 * t3052) * t4552 + (t3069 * t3511 - t4127) * t3672) * t3639) * t3198 + ((-(t3021 + t2859) * t4123 + ((pkin(3) * t3012 - t4482) * t3673 + t3908 * t4641) * t3672 + (t2870 * t3673 - t3908) * pkin(2) + ((0.2e1 * t3442 * t3505 - 0.3e1 * t4091) * t3672 + t3371 * t4566) * t4435) * t3198 + (-(t3625 * t4273 + t3673 * t4706) * t4559 + (t3371 * pkin(2) + ((t3505 - 0.2e1 * t4565) * t3672 - t4123) * pkin(3)) * t4469) * t3195) * t3638) * t3099;
t2967 = t2970 ^ 2;
t2879 = t3066 + t2967;
t2997 = t4737 * t3069;
t3003 = t3418 * t3069;
t3453 = t3658 * t3663;
t3006 = t3069 * t3453;
t3009 = t3069 * t3513;
t3015 = t3548 * t3069;
t3018 = t3551 * t3069;
t4180 = mrSges(3,2) * t3052;
t3028 = -0.2e1 * t4180;
t4531 = mrSges(3,1) * t3069;
t4181 = pkin(2) * t4531;
t3029 = 0.2e1 * t4181;
t4356 = t3456 * t3663;
t3760 = t3924 - t4356;
t3831 = t3453 + t4607;
t4515 = Ifges(3,4) * t3625;
t3227 = -0.2e1 * t4515 + (t3831 + t4606) * t3672 - t3760;
t4523 = mrSges(3,2) * t3663;
t4187 = pkin(2) * t4523;
t3470 = -0.2e1 * t4187;
t3450 = t3658 * t3625;
t4511 = Ifges(3,4) * t3663;
t4201 = 0.2e1 * t4511;
t4676 = (t3612 + t4201) * t3672 + t3450;
t4649 = t3470 + t4676;
t3242 = t3350 + t4649;
t3270 = t3673 * t4739;
t4527 = mrSges(3,1) * t3663;
t3389 = -t3562 + t4523;
t4583 = pkin(1) * t3389;
t3123 = ((t3764 + 0.2e1 * t4187 - t4676) * t3627 - t3280 * t4168 + t3659 * t3625 + (t4228 + 0.4e1 * t4511) * t3672 - t3459 * t3663 + t3763) * t3603 + (-t3227 * t3664 + t3270) * t4170 + t3242 * t3627 + ((t3550 * t3664 + t3614) * t3672 + (-t3549 * t3663 + t4233) * t3664 - 0.2e1 * t4583) * t3673 - t3450 + (t4615 - 0.2e1 * t4511) * t3672 + t3664 * t4220 + (mrSges(2,3) + t4527) * t4498 + t3735;
t3251 = t3824 + t4649;
t3523 = 0.2e1 * t4515;
t4672 = -t3453 - t3457;
t3167 = ((t3672 * t4672 + t3523 + t3760) * t3664 + t3270) * t3638 + t3639 * ((t3513 * t3664 + (mrSges(3,1) * t3672 - t3389) * t3673) * pkin(1) + t3251);
t3916 = t3551 * t3664 + t3681;
t4071 = pkin(7) + t3579;
t4235 = t3548 * t3664 + t3680;
t3188 = ((-t3455 * t3673 - t3916) * t3672 + (t3458 * t3673 + t4235) * t3663 - Ifges(3,3) * t3673) * t3638 - ((mrSges(3,2) * t4071 - Ifges(3,6)) * t3672 + t3663 * (mrSges(3,1) * t4071 - Ifges(3,5))) * t3639;
t3882 = t3658 * t4047;
t3827 = -0.2e1 * t3882;
t4507 = t3069 * Ifges(3,4);
t4075 = t3625 * t4507;
t4079 = t2970 * t4515;
t4158 = t3099 * t4583;
t4191 = mrSges(3,1) * t4587;
t4202 = -0.4e1 * t4511;
t4339 = t3551 * t2970;
t4344 = t3548 * t2970;
t4519 = Ifges(3,4) * t2970;
t4629 = -0.2e1 * t3099;
t4630 = -0.4e1 * t3099;
t4696 = -t2775 * t3188 - t2779 * t3167 - t2787 * t3123 + (t4079 + (t3018 + (-t3453 / 0.2e1 + t4176) * t2970) * t3672 + (t2970 * t4177 - t3015) * t3663 + t3003 - t4519 / 0.2e1) * t3985 * t4630 + (((t3009 + (-mrSges(3,2) * t3672 - t4527) * t4636) * t3063 + (0.2e1 * t4075 + (-t3069 * t3457 - t3006 + t4339) * t3672 - (t3069 * t3456 + t4344) * t3663 + t3069 * t3924) * t3099 * t4196) * t3639 + t3066 * t3625 * t4207 + ((t2967 * t3458 + t3066 * t4672) * t3638 + t3099 * t2970 * t4503) * t3672 + ((t2967 * t3455 - t3066 * t3456) * t3663 + t3066 * t3924) * t3638 + (-mrSges(3,1) * t4484 + t3009) * t4222 + t4709 * ((t3029 + t4344) * t3672 + (t3028 + t4339) * t3663 + (t3672 * t4201 + t3350 + t3450) * t3069) * t4434) * t3673 + 0.2e1 * (-t3015 * t3663 + t3018 * t3672 + t3003 + ((-t3457 - 0.2e1 * t3453) * t3672 - t4356 + (0.4e1 * t3625 - 0.2e1) * Ifges(3,4)) * t2970) * t4438 + ((t3882 * t4630 + (-0.8e1 * (t3491 * t3069 + (t4511 + t4603) * t2970) * t4436 - t2879 * t3681) * t3672 - 0.2e1 * ((-t2970 * t3457 + t3018) * t3663 + t2997 - t2970 * t3658) * t4436 - (-t2879 * t4523 + t3066 * t3562) * pkin(1)) * t3664 + ((-t3006 - t4180 - t4339 / 0.2e1) * t3672 + (-t4181 + t4344 / 0.2e1) * t3663 + t4595 * t4507) * t4636) * t3639 + ((t3551 * t4312 + t4342 * t3672) * (t2967 - t3066) + (t3827 + (-0.2e1 * t4191 + (t4202 + t4615) * t4485) * t3672 + (-t2970 * t3598 + t4484 * t4501 - t2997) * t3638 + 0.2e1 * t4158) * t3069) * t3664 + t4079 * t4630 + (t2967 * t4194 + (t3018 + (-t3453 - t4606) * t2970) * t4629) * t3672 + mrSges(3,1) * t2967 * t4154 + ((mrSges(3,2) * t2961 - t3015) * t3663 + t3003 - t4519) * t4629;
t3025 = pkin(6) * t4463;
t3053 = t3070 * pkin(8);
t4246 = t3070 * pkin(7) + t3053;
t4478 = t2971 * t3721;
t4267 = (-t2962 / 0.2e1 + t4246) * t3567 - t4478 / 0.2e1;
t2820 = t3025 + t4267;
t2840 = -t2962 + t4246;
t4090 = pkin(3) * t4480;
t3900 = t3687 * t4090;
t3787 = t3070 * t3392 - t3900;
t2844 = t3100 * t4375 + t3787;
t2868 = t4463 - t4090;
t2884 = t3022 + t3059;
t4428 = t3100 * t3639;
t2899 = t3070 + t4428;
t2894 = t2899 * pkin(2);
t4479 = t2971 * t3667;
t2944 = pkin(1) * t4479;
t3056 = t3070 * t3723;
t3064 = pkin(1) * t3070;
t3527 = pkin(6) * t3567;
t3628 = t3675 * t3629;
t3630 = t3676 * t3631;
t3736 = t3667 * (((t2962 - 0.2e1 * t3053) * pkin(7) + t3056 + pkin(6) * t2956 + t4226 * t3070) * t3567 + t2971 * t4271 + t3070 * t4110) + ((0.2e1 * t3022 + 0.2e1 * t3059 + t4258) * t3667 + t2965) * t3530 + t4729 * t3574;
t3755 = t3638 * t4133 - t3667 * t3931 + t3223;
t3798 = t3100 * t3483 * t3997;
t4432 = t3100 * t4705;
t4021 = t3483 * t4432;
t3868 = t3687 * t4021;
t3801 = t3602 * t3868;
t3820 = t3433 * t4428 + t2840;
t3976 = t3100 * t4305;
t3867 = t3483 * t3976;
t4082 = -t3567 / 0.2e1;
t3890 = t2971 * t4082;
t3910 = t3666 * t4148;
t4018 = t3100 * t4309;
t3925 = 0.2e1 * t4018;
t4019 = t3100 * t4337;
t4020 = t3100 * t4347;
t4044 = t2971 * t3574;
t4321 = t3629 * t3638;
t4045 = t2971 * t4321;
t4126 = t2860 * t3567;
t4130 = (pkin(6) * t3053 + pkin(7) * t4243 + t2971 * t3825 + t4267) * t3575;
t4481 = t2971 * t3638;
t4141 = pkin(2) * t4481;
t4214 = 0.2e1 * t3575;
t4427 = t3100 * t3667;
t4429 = t3100 * t3638;
t4430 = t3100 * t3631;
t4558 = pkin(3) * t2971;
t4574 = pkin(2) * t2971;
t4644 = t3530 + t3574 - t3527;
t4667 = 0.2e1 * t3527 - t3574;
t4682 = t2899 * t4272 + t3064;
t2776 = (-(t3845 + t3783) * t3630 * t3983 * t4432 + (-0.4e1 * t3801 + (-0.3e1 * (t3375 + t3783) * t3667 * t3976 - 0.2e1 * t4130 + (-0.2e1 * t2820 + t4044) * pkin(2)) * t3603 + ((t3070 * t3744 + t3900) * t4580 + 0.4e1 * t3868) * t3639 + 0.2e1 * (t3667 * t3948 + t3391 + t3783 * (t3599 * t3667 + pkin(1))) * t4429 - pkin(2) * t4044 + 0.2e1 * t4130 + t2820 * t4713) * t3631 + (t3798 * t4626 + (0.2e1 * (t3765 + t4644) * t4020 + t3736) * t3603 + (-t3798 + ((t3890 + t4463) * t3580 + t2860 * t4082 + t3056 / 0.2e1 + (t3574 / 0.2e1 + t3530 + t3815) * t3070) * t4347) * t4195 + (0.4e1 * t3438 + t3766 + t4667) * t4020 - t3736) * t3676 + 0.2e1 * t3801 + ((t3939 + t4644) * t3925 + (t2944 - t4658) * t3575 + pkin(2) * t2884) * t4332 + (((t3056 - t4126) * t3667 + pkin(1) * t2868) * t3638 - 0.2e1 * t4021 + (t3783 + t4666) * t3070 * t4309) * t4291 + (t3538 + (t3361 + t4667) * t3667) * t3976 - (t2860 * t3580 - t3687 * t4658) * t3575 - t2884 * t4562) * t3100 * t4384 + ((t3629 * t4144 + (t3483 * t4305 + t3512) * t4214 + t3483 * t3937 + t3359) * t4430 + (t3720 * t2899 * t3628 + (t3687 * t3890 + t3070 * t4605 + ((-t3483 * t4572 + t3427) * t3667 + t3949) * t3100) * t4214 + 0.2e1 * (t3483 * t3846 + t3394) * t4427 + t2844 * pkin(2)) * t3676 + (-t3867 / 0.2e1 + t4682 * pkin(2)) * t4214 + t2844 * t4272 - pkin(2) * t3867 + pkin(1) * (t3100 * t4319 + t3787) + ((-t3100 * t3991 + 0.3e1 * t2894) * t3676 + t4682) * t3574) / ((pkin(3) * t4153 + t3348 * t3667) * t3675 + t3755) * t3070 * t4304 + ((t3666 * t3914 + ((t3527 + t3796) * t3675 + (t3482 + t4551) * pkin(2)) * t4337) * t4430 + ((t3423 * t4019 + t4141) * t4551 + ((t2971 * t3596 - t3567 * t3820) * t3638 + t3426 * pkin(2) * t4019) * t3675 - (t3666 * t3820 - t4558) * t4572 - t3687 * (-t3482 * t4427 * t4600 + t2965 * t4296)) * t3676 + t4045 * t4613 + (t3433 * t3100 * t4064 + (pkin(3) * t3910 + t3423 * t4572) * t2971) * t3675 - (-pkin(3) * t4479 + (t2840 * t3667 + t3423 * t4428 + t3064) * t3666) * t4305 + t3910 * t4574) / ((-pkin(2) * t4148 + t3353 * t3638) * t3675 + t3755) * t2971;
t4281 = t3666 * t3687;
t3013 = t3070 * t4281;
t2871 = t3013 - t4558;
t2874 = -t3025 + t4478;
t3061 = pkin(2) * t3070;
t3926 = -0.2e1 * t4018;
t2893 = pkin(6) * t3926 + t3061;
t2941 = pkin(1) * t4481;
t3055 = t3070 * t3721;
t3444 = t3567 + t3699;
t3088 = t3444 * t3926;
t4539 = t3100 * pkin(2);
t3093 = 0.2e1 * t4539;
t3577 = t3676 * pkin(1);
t3585 = pkin(1) * t3631;
t3838 = pkin(2) * t3925;
t3748 = ((t3838 - t3943) * t3666 + t3070 * pkin(3)) * t3675 + (t3567 * t4018 - t3061) * t3629 + t3061;
t4280 = t3667 * t3676;
t4087 = pkin(2) * t4280;
t3772 = -t3631 * t3687 + t4087;
t3894 = pkin(2) * t3957;
t4322 = t3628 * t3721;
t4466 = t3070 * t3639;
t3950 = ((0.2e1 * t3139 + 0.2e1 * t3140 + 0.2e1 * t3175 - t4430) * t3603 + t4466 + t4430 - t3100) * t4322;
t3953 = t3483 * t4280;
t3979 = t3631 * t4329;
t4017 = t3100 * t3506;
t4464 = t3070 * t3667;
t4038 = t3666 * t4464;
t4097 = (t3567 + t3698) * t4563;
t4098 = t3070 * t3576;
t4101 = t2971 * t3576;
t4112 = pkin(6) * t4428;
t4113 = pkin(6) * t4429;
t4137 = pkin(2) * t4464;
t4167 = 0.2e1 * t4280;
t4586 = pkin(1) * t3100;
t4221 = 0.2e1 * t4586;
t4229 = t3527 + t3721;
t4261 = -t2941 - t3093;
t4276 = t3687 * t3630;
t4320 = t3631 * t3721;
t4350 = t3482 * t3603;
t4351 = t3482 * t3339;
t4431 = t3100 * t3603;
t4555 = pkin(3) * t3482;
t4619 = 0.2e1 * t3631;
t4590 = t4619 - 0.2e1;
t4661 = t2874 * t4280 - t3059 * t4162;
t4664 = -pkin(1) * t3576 - t4715;
t2780 = (t3055 * t3628 + ((t3055 - t3056) * t3603 - t3055) * t3675 + ((t3537 * t4322 + t3675 * t4664) * t3603 - t3628 * t4320) * t3070 + (pkin(6) * t4137 + t2874 * t3676) * t3638 * t4292 + (((-0.4e1 / 0.3e1 + t3631) * t4322 + ((-0.2e1 / 0.3e1 * t3527 + t4238) * t3631 + 0.2e1 / 0.3e1 * t3894 + 0.4e1 / 0.3e1 * t3527 + t3940) * t3675 - 0.2e1 / 0.3e1 * t4351) * t4625 + (0.3e1 * (t3721 - t4320) * t3628 + ((t3387 + t4229) * t4619 + (-pkin(2) * t4272 - t4614) * t4616 - 0.2e1 * t3438 - t3360) * t3675) * t3639 - t3885 * t4733) * t3100 + (t4661 * t3603 + (pkin(2) * t4590 + 0.2e1 * t3957) * t4112 + (((t3637 * t3070 + t3056) * t3667 + (t3687 + t3772) * t3064) * t3639 + (-t4590 * t3593 + ((t3510 - t3979) * t3603 + t3979 + t3361) * t3667 + (pkin(1) * t4167 + ((t3630 - t3676) * t4712 - 0.2e1 * t3630 + t4616) * t3687) * pkin(2)) * t3100) * t3638 - t4661) * t3666 + (t2893 * t3603 + t4261 * t3639 - t2893 + (t3100 * t3339 * t4624 + (-t3064 * t3676 - 0.3e1 * t3061) * t3603 + (-(-t4141 + t4221) * t3676 + 0.2e1 * t2941 + t3093) * t3639 + t3061) * t3629 + ((-(-0.4e1 * t4113 - t4494) * t3629 - t4494) * t3603 + (-(-t3638 * t4718 + 0.4e1 * t4017) * t3629 + 0.2e1 * t4017 - t2860 * t3638) * t3639 - (0.2e1 * t4113 + t4494) * t3629 + t4494) * t3667 + (-t3748 * t3603 + (-(t2941 + 0.4e1 * t4539) * t3629 - t4261) * t3639 + t3748) * t3631 + ((t4718 * t3603 - 0.4e1 * t4112 - t2944 + ((0.2e1 * t2965 + t4101) * t3603 - t4101) * t3667 + (((pkin(1) * t4464 - t4654) * t3676 + 0.3e1 * t4137) * t3639 + ((-0.4e1 * t3506 + 0.2e1 * t4276 + 0.4e1 * t4563) * t3603 - 0.2e1 * t4276 + t3433 * t4616) * t3100) * t3638 + t3943) * t3675 + (-t3100 + 0.4e1 * t4431 + 0.2e1 * t4466) * t3904) * t3666) * pkin(3)) / (t3275 + (t3288 * t3675 + t3811) * t3638) * t3100 + ((-t3950 - ((t3088 + t3070 * (t3577 + t4713)) * t3639 + (-t4101 - t4729) * t3638) * t4551 + ((-pkin(1) * t4098 + t3433 * t4090 - t3070 * (t3438 + t3511)) * t3639 + (-pkin(6) * t2868 * t3676 + t3483 * t4137) * t3638) * t3675 + t3357 * t2871 * t3638) * t3070 + (t3357 * t3070 * t4321 + (t4107 * t4465 + (pkin(1) * t4038 + t2871) * t3639) * t3675 + (-t4098 + (t4090 - t4654) * t3667 - t3064) * t3638 - t2971 * (t3577 + pkin(2)) * t3639) * t4558 + ((-((-t4534 + (-t4272 + pkin(1)) * t3676 + t3714) * t3603 + t3339) * t4551 + (-(t3631 * t4555 - t3527 + t4224 - t4664) * t3603 + (((t3580 - t3687) * t3567 - t4545) * t3676 + 0.3e1 * t4097) * t4318 + t4333 * t4555) * t3675 - t3339 * t4350 - (-pkin(1) * t3772 - t3511 * t3667 - t3593) * t3638 * t4296 + t4351) * t3070 + ((-(-t3576 + t3585 + t3716 - t4279) * t4318 - t4111 * t4280) * t3629 + (t3482 * t3969 + ((t3600 * t3631 + t4087 / 0.2e1 + t3433) * t4712 - t3772 - t3433) * t3666) * t3675 + (t3585 - t3423) * t4318 + t3603 * t3953 - t3953) * t4558) * t3100) * t3199;
t3779 = t3979 + t4229;
t3907 = pkin(2) * t4038;
t4363 = t3426 * t3676;
t2788 = ((t2899 * t4322 + 0.2e1 * t2894 * t4551 + (t3511 * t2899 - t3900) * t3675) * t3070 - ((t2899 * t4281 - t4558) * t3675 - t4574) * t4558) * t3196 + ((t3950 + (((t3700 + t3773) * t4623 + 0.2e1 * t4534 + t4363 - pkin(2)) * t4551 + (-(-t3723 + t3779 + 0.2e1 * t3894) * t3603 + pkin(2) * t4363 + t3779 + t4715) * t3675 + (t3482 - t4350) * pkin(2)) * t3100 + ((t3088 + 0.2e1 * t3061) * t4551 + (t3070 * t3511 - t4126) * t3675) * t3639) * t3199 + ((-(t3022 + t2860) * t4122 + ((pkin(3) * t3013 - t4478) * t3676 + t3907 * t4641) * t3675 + (t2871 * t3676 - t3907) * pkin(2) + ((0.2e1 * t3444 * t3506 - 0.3e1 * t4097) * t3675 + t3372 * t4564) * t4428) * t3199 + (-(t3629 * t4272 + t3676 * t4705) * t4558 + (t3372 * pkin(2) + ((t3506 - 0.2e1 * t4563) * t3675 - t4122) * pkin(3)) * t4465) * t3196) * t3638) * t3100;
t2968 = t2971 ^ 2;
t2880 = t3067 + t2968;
t2998 = t4737 * t3070;
t3004 = t3418 * t3070;
t3454 = t3658 * t3666;
t3007 = t3070 * t3454;
t3010 = t3070 * t3513;
t3016 = t3548 * t3070;
t3019 = t3551 * t3070;
t4178 = mrSges(3,2) * t3061;
t3030 = -0.2e1 * t4178;
t4530 = mrSges(3,1) * t3070;
t4179 = pkin(2) * t4530;
t3031 = 0.2e1 * t4179;
t4355 = t3456 * t3666;
t3759 = t3924 - t4355;
t3830 = t3454 + t4607;
t4514 = Ifges(3,4) * t3629;
t3228 = -0.2e1 * t4514 + (t3830 + t4606) * t3675 - t3759;
t4522 = mrSges(3,2) * t3666;
t4186 = pkin(2) * t4522;
t3472 = -0.2e1 * t4186;
t3451 = t3658 * t3629;
t4510 = Ifges(3,4) * t3666;
t4199 = 0.2e1 * t4510;
t4675 = (t3612 + t4199) * t3675 + t3451;
t4648 = t3472 + t4675;
t3243 = t3350 + t4648;
t3271 = t3676 * t4738;
t4526 = mrSges(3,1) * t3666;
t3390 = -t3562 + t4522;
t4582 = pkin(1) * t3390;
t3124 = ((t3764 + 0.2e1 * t4186 - t4675) * t3631 - t3281 * t4167 + t3659 * t3629 + (t4228 + 0.4e1 * t4510) * t3675 - t3459 * t3666 + t3763) * t3603 + (-t3228 * t3667 + t3271) * t4170 + t3243 * t3631 + ((t3550 * t3667 + t3614) * t3675 + (-t3549 * t3666 + t4233) * t3667 - 0.2e1 * t4582) * t3676 - t3451 + (t4615 - 0.2e1 * t4510) * t3675 + t3667 * t4220 + (mrSges(2,3) + t4526) * t4498 + t3735;
t3252 = t3824 + t4648;
t3524 = 0.2e1 * t4514;
t4671 = -t3454 - t3457;
t3168 = ((t3675 * t4671 + t3524 + t3759) * t3667 + t3271) * t3638 + t3639 * ((t3513 * t3667 + (mrSges(3,1) * t3675 - t3390) * t3676) * pkin(1) + t3252);
t3915 = t3551 * t3667 + t3681;
t4070 = pkin(7) + t3580;
t4234 = t3548 * t3667 + t3680;
t3189 = ((-t3455 * t3676 - t3915) * t3675 + (t3458 * t3676 + t4234) * t3666 - Ifges(3,3) * t3676) * t3638 - ((mrSges(3,2) * t4070 - Ifges(3,6)) * t3675 + t3666 * (mrSges(3,1) * t4070 - Ifges(3,5))) * t3639;
t3881 = t3658 * t4045;
t3826 = -0.2e1 * t3881;
t4506 = t3070 * Ifges(3,4);
t4074 = t3629 * t4506;
t4078 = t2971 * t4514;
t4157 = t3100 * t4582;
t4190 = mrSges(3,1) * t4586;
t4200 = -0.4e1 * t4510;
t4338 = t3551 * t2971;
t4343 = t3548 * t2971;
t4518 = Ifges(3,4) * t2971;
t4627 = -0.2e1 * t3100;
t4628 = -0.4e1 * t3100;
t4695 = -t2776 * t3189 - t2780 * t3168 - t2788 * t3124 + (t4078 + (t3019 + (-t3454 / 0.2e1 + t4176) * t2971) * t3675 + (t2971 * t4177 - t3016) * t3666 + t3004 - t4518 / 0.2e1) * t3984 * t4628 + (((t3010 + (-mrSges(3,2) * t3675 - t4526) * t4635) * t3064 + (0.2e1 * t4074 + (-t3070 * t3457 - t3007 + t4338) * t3675 - (t3070 * t3456 + t4343) * t3666 + t3070 * t3924) * t3100 * t4196) * t3639 + t3067 * t3629 * t4207 + ((t2968 * t3458 + t3067 * t4671) * t3638 + t3100 * t2971 * t4503) * t3675 + ((t2968 * t3455 - t3067 * t3456) * t3666 + t3067 * t3924) * t3638 + (-mrSges(3,1) * t4480 + t3010) * t4221 + t4709 * ((t3031 + t4343) * t3675 + (t3030 + t4338) * t3666 + (t3675 * t4199 + t3350 + t3451) * t3070) * t4427) * t3676 + 0.2e1 * (-t3016 * t3666 + t3019 * t3675 + t3004 + ((-t3457 - 0.2e1 * t3454) * t3675 - t4355 + (0.4e1 * t3629 - 0.2e1) * Ifges(3,4)) * t2971) * t4431 + ((t3881 * t4628 + (-0.8e1 * (t3491 * t3070 + (t4510 + t4603) * t2971) * t4429 - t2880 * t3681) * t3675 - 0.2e1 * ((-t2971 * t3457 + t3019) * t3666 + t2998 - t2971 * t3658) * t4429 - (-t2880 * t4522 + t3067 * t3562) * pkin(1)) * t3667 + ((-t3007 - t4178 - t4338 / 0.2e1) * t3675 + (-t4179 + t4343 / 0.2e1) * t3666 + t4592 * t4506) * t4635) * t3639 + ((t3551 * t4310 + t4342 * t3675) * (t2968 - t3067) + (t3826 + (-0.2e1 * t4190 + (t4200 + t4615) * t4481) * t3675 + (-t2971 * t3598 + t4480 * t4501 - t2998) * t3638 + 0.2e1 * t4157) * t3070) * t3667 + t4078 * t4628 + (t2968 * t4194 + (t3019 + (-t3454 - t4606) * t2971) * t4627) * t3675 + mrSges(3,1) * t2968 * t4153 + ((mrSges(3,2) * t2962 - t3016) * t3666 + t3004 - t4518) * t4627;
t3597 = -Ifges(3,3) + t3658;
t3880 = t2995 * t4033;
t3967 = t3658 * t4316;
t4165 = t4710 * pkin(2);
t4171 = -0.2e1 * t3551 * t3638;
t4172 = 0.2e1 * t4342;
t2986 = -0.2e1 * t4509;
t4242 = t3085 * t3967 + t2986;
t4453 = t3085 * t3656;
t4462 = t3084 * t3603;
t4549 = pkin(6) * t3084;
t4602 = -t3551 / 0.2e1;
t4604 = t3456 / 0.2e1;
t4639 = 0.4e1 * Ifges(3,4);
t4640 = -0.2e1 * mrSges(3,2);
t4694 = -Ifges(3,3) * t2773 - t2777 * t3310 - t2785 * t3185 + (t2995 * t3967 + t3639 * t4242) * t4198 * t3605 + (-(mrSges(3,2) * t4165 + t3446 * t3534 + t3548 * t4289 - t4606) * t4462 + 0.2e1 * (t3833 * t2995 + (t3656 * t4602 + (t4205 + t4604) * t3653) * t4456) * t4455 + (t2995 * t4171 + t3085 * t4237) * t4453 + t3880 * t3612 - mrSges(3,1) * t4549 + t4685 * t4607) * t3655 - t4242 * t4455 - t3597 * t3880 + ((t3880 * t4639 + (t4461 - (t3085 - t2995) * (t3085 + t2995)) * t3658) * t3655 - (mrSges(3,1) * t4165 + t3551 * t4289 + t3678) * t4462 - (-0.2e1 * t4185 + (t3457 * t3653 - t3548 * t3656) * t4456) * t4455 + (t2995 * t4172 + t3085 * t3918) * t4453 + mrSges(3,2) * t4549 + (mrSges(3,1) * t4685 + t3880 * t4640) * pkin(2)) * t3652 + ((t3084 * t3844 - t2994) * t4728 - t3534 * t4462 - t3084 + t4685) * Ifges(3,4);
t3879 = t3068 * t4028;
t3966 = t3658 * t4313;
t3038 = -0.2e1 * t4508;
t4241 = t3098 * t3966 + t3038;
t4440 = t3098 * t3670;
t4451 = t3095 * t3623;
t4452 = t3095 * t3603;
t4548 = pkin(6) * t3095;
t4681 = t3065 + t4451;
t4693 = -Ifges(3,3) * t2774 - t2778 * t3318 - t2786 * t3187 + (-t4704 + (t3068 * t3966 + t3639 * t4241) * t3098 + t3843 * t4701) * t4727 + (-(mrSges(3,2) * t4164 + t3452 * t3535 + t3548 * t4286 - t4606) * t4452 + 0.2e1 * (t3832 * t3068 + (t3670 * t4602 + (t4203 + t4604) * t3661) * t4443) * t4442 + (t3879 * t4639 + (t4451 - (t3098 - t3068) * (t3098 + t3068)) * t3658) * t3660 + (t3068 * t4171 + t3098 * t4236) * t4440 + t3840 * t4532 - mrSges(3,1) * t4548 + t4681 * t4607) * t3669 - ((mrSges(3,1) * t4164 + t3551 * t4286 + t3678) * t3660 + Ifges(3,4) * t3535) * t4452 - ((-0.2e1 * t4183 + (t3457 * t3661 - t3548 * t3670) * t4443) * t3660 + t4241) * t4442 + ((t3068 * t4172 + t3098 * t3917) * t4440 + mrSges(3,2) * t4548 + (mrSges(3,1) * t4681 + t3879 * t4640) * pkin(2)) * t3660 + Ifges(3,4) * t4451 - t3597 * t3879 - t4701 + t4704;
t3878 = t3069 * t4023;
t3965 = t3658 * t4311;
t4163 = t4594 * pkin(2);
t3039 = -0.2e1 * t4507;
t4240 = t3099 * t3965 + t3039;
t4433 = t3099 * t3673;
t4449 = t3096 * t3627;
t4450 = t3096 * t3603;
t4547 = pkin(6) * t3096;
t4680 = t3066 + t4449;
t4692 = -Ifges(3,3) * t2775 - t2779 * t3319 - t2787 * t3188 + (-t4703 + (t3069 * t3965 + t3639 * t4240) * t3099 + t3842 * t4700) * t4726 + (-(mrSges(3,2) * t4163 + t3453 * t3536 + t3548 * t4283 - t4606) * t4450 + 0.2e1 * (t3831 * t3069 + (t3673 * t4602 + (t4201 + t4604) * t3664) * t4436) * t4435 + (t3878 * t4639 + (t4449 - (t3099 - t3069) * (t3099 + t3069)) * t3658) * t3663 + (t3069 * t4171 + t3099 * t4235) * t4433 + t3839 * t4531 - mrSges(3,1) * t4547 + t4680 * t4607) * t3672 - ((mrSges(3,1) * t4163 + t3551 * t4283 + t3678) * t3663 + Ifges(3,4) * t3536) * t4450 - ((-0.2e1 * t4181 + (t3457 * t3664 - t3548 * t3673) * t4436) * t3663 + t4240) * t4435 + ((t3069 * t4172 + t3099 * t3916) * t4433 + mrSges(3,2) * t4547 + (mrSges(3,1) * t4680 + t3878 * t4640) * pkin(2)) * t3663 + Ifges(3,4) * t4449 - t3597 * t3878 - t4700 + t4703;
t3877 = t3070 * t4018;
t3964 = t3658 * t4309;
t3040 = -0.2e1 * t4506;
t4239 = t3100 * t3964 + t3040;
t4426 = t3100 * t3676;
t4447 = t3097 * t3631;
t4448 = t3097 * t3603;
t4546 = pkin(6) * t3097;
t4679 = t3067 + t4447;
t4691 = -Ifges(3,3) * t2776 - t2780 * t3320 - t2788 * t3189 + (-t4702 + (t3070 * t3964 + t3639 * t4239) * t3100 + t3841 * t4699) * t4725 + (-(mrSges(3,2) * t4162 + t3454 * t3537 + t3548 * t4280 - t4606) * t4448 + 0.2e1 * (t3830 * t3070 + (t3676 * t4602 + (t4199 + t4604) * t3667) * t4429) * t4428 + (t3877 * t4639 + (t4447 - (t3100 - t3070) * (t3100 + t3070)) * t3658) * t3666 + (t3070 * t4171 + t3100 * t4234) * t4426 + t3838 * t4530 - mrSges(3,1) * t4546 + t4679 * t4607) * t3675 - ((mrSges(3,1) * t4162 + t3551 * t4280 + t3678) * t3666 + Ifges(3,4) * t3537) * t4448 - ((-0.2e1 * t4179 + (t3457 * t3667 - t3548 * t3676) * t4429) * t3666 + t4239) * t4428 + ((t3070 * t4172 + t3100 * t3915) * t4426 + mrSges(3,2) * t4546 + (mrSges(3,1) * t4679 + t3877 * t4640) * pkin(2)) * t3666 + Ifges(3,4) * t4447 - t3597 * t3877 - t4699 + t4702;
t4502 = -0.2e1 * t4608;
t4690 = -t2773 * t3310 - t2777 * t3248 - t2785 * t3164 - (-t3224 * t4318 + t3240 * t4065 + t4581) * t3085 * t4453 + (t4741 * t4033 + (-pkin(2) * t4529 - t3655 * t3833 - Ifges(3,4) + t3515) * t4638) * t4455 + (t3829 + (t4193 + (t4206 + t4502) * t4493) * t3655 - (t3448 - t3597) * t4493 - t4160) * t4454 + (-t3794 * t4196 * t4453 + 0.4e1 * t4077 + (-0.2e1 * t2975 + t2981 - t4341) * t3655 + (-t2982 + t4346) * t3652 + t2986) * t2938 + (-t4462 + (0.2e1 * t3987 + 0.1e1) * t3084) * t3277;
t4689 = -t2774 * t3318 - t2778 * t3250 - t2786 * t3166 - (t3241 * t3661 * t4600 - t3226 * t4318 + t4581) * t3098 * t4440 + (t4740 * t4028 + (-pkin(2) * t4528 - t3669 * t3832 - Ifges(3,4) + t3522) * t4637) * t4442 + (t3828 + (t4192 + (t4204 + t4502) * t4489) * t3669 - (t3468 - t3597) * t4489 - t4159) * t4441 + (-t3793 * t4196 * t4440 + 0.4e1 * t4076 + (-0.2e1 * t3005 + t3026 - t4340) * t3669 + (-t3027 + t4345) * t3660 + t3038) * t2969 + (-t4452 + (0.2e1 * t3986 + 0.1e1) * t3095) * t3279;
t4688 = -t2775 * t3319 - t2779 * t3251 - t2787 * t3167 - (t3242 * t3664 * t4600 - t3227 * t4318 + t4581) * t3099 * t4433 + (t4739 * t4023 + (-pkin(2) * t4527 - t3672 * t3831 - Ifges(3,4) + t3523) * t4636) * t4435 + (t3827 + (t4191 + (t4202 + t4502) * t4485) * t3672 - (t3470 - t3597) * t4485 - t4158) * t4434 + (-t3792 * t4196 * t4433 + 0.4e1 * t4075 + (-0.2e1 * t3006 + t3028 - t4339) * t3672 + (-t3029 + t4344) * t3663 + t3039) * t2970 + (-t4450 + (0.2e1 * t3985 + 0.1e1) * t3096) * t3280;
t4687 = -t2776 * t3320 - t2780 * t3252 - t2788 * t3168 - (t3243 * t3667 * t4600 - t3228 * t4318 + t4581) * t3100 * t4426 + (t4738 * t4018 + (-pkin(2) * t4526 - t3675 * t3830 - Ifges(3,4) + t3524) * t4635) * t4428 + (t3826 + (t4190 + (t4200 + t4502) * t4481) * t3675 - (t3472 - t3597) * t4481 - t4157) * t4427 + (-t3791 * t4196 * t4426 + 0.4e1 * t4074 + (-0.2e1 * t3007 + t3030 - t4338) * t3675 + (-t3031 + t4343) * t3666 + t3040) * t2971 + (-t4448 + (0.2e1 * t3984 + 0.1e1) * t3097) * t3281;
t3632 = t3683 ^ 2;
t4409 = t3164 * t3190;
t4408 = t3164 * t3201;
t4407 = t3166 * t3197;
t4406 = t3166 * t3205;
t4405 = t3167 * t3198;
t4404 = t3167 * t3206;
t4403 = t3168 * t3199;
t4402 = t3168 * t3207;
t4397 = t3185 * t3190;
t4396 = t3187 * t3197;
t4395 = t3188 * t3198;
t4394 = t3189 * t3199;
t4388 = t3201 * t3248;
t4387 = t3201 * t3310;
t4383 = t3205 * t3250;
t4382 = t3205 * t3318;
t4381 = t3206 * t3251;
t4380 = t3206 * t3319;
t4379 = t3207 * t3252;
t4378 = t3207 * t3320;
t3864 = t3127 * t4011;
t3863 = t3128 * t4010;
t3862 = t3129 * t4009;
t3861 = t3130 * t4011;
t3860 = t3131 * t4010;
t3859 = t3132 * t4009;
t3858 = t3185 * t4012;
t3857 = t3310 * t4012;
t3856 = t3187 * t4011;
t3855 = t3318 * t4011;
t3854 = t3188 * t4010;
t3853 = t3319 * t4010;
t3852 = t3189 * t4009;
t3851 = t3320 * t4009;
t3702 = mrSges(4,1);
t3701 = mrSges(4,2);
t3112 = (t3162 * t3347 - t3163 * t3343) * t3199;
t3111 = (t3160 * t3346 - t3161 * t3342) * t3198;
t3110 = (t3158 * t3345 - t3159 * t3341) * t3197;
t3109 = (t3156 * t3344 - t3157 * t3340) * t3190;
t3108 = (-t3147 * t3343 + t3148 * t3347) * t3207;
t3107 = (-t3145 * t3342 + t3146 * t3346) * t3206;
t3106 = (-t3143 * t3341 + t3144 * t3345) * t3205;
t3105 = Ifges(3,3) * t4013 + t3189 * t4390 + t3320 * t4398;
t3104 = Ifges(3,3) * t4014 + t3188 * t4391 + t3319 * t4399;
t3103 = Ifges(3,3) * t4015 + t3187 * t4392 + t3318 * t4400;
t3102 = (-t3141 * t3340 + t3142 * t3344) * t3201;
t3101 = Ifges(3,3) * t4016 + t3185 * t4393 + t3310 * t4401;
t3082 = t3168 * t4390 + t3252 * t4398 + t3320 * t4013;
t3081 = t3167 * t4391 + t3251 * t4399 + t3319 * t4014;
t3080 = t3166 * t4392 + t3250 * t4400 + t3318 * t4015;
t3075 = t3164 * t4393 + t3248 * t4401 + t3310 * t4016;
t3074 = (t3129 * t3343 - t3132 * t3347) * t4009;
t3073 = (t3128 * t3342 - t3131 * t3346) * t4010;
t3072 = (t3127 * t3341 - t3130 * t3345) * t4011;
t3071 = (t3125 * t3340 - t3126 * t3344) * t4012;
t2932 = -Ifges(3,3) * t3859 + t3148 * t4378 + t3162 * t4394;
t2931 = -Ifges(3,3) * t3860 + t3146 * t4380 + t3160 * t4395;
t2930 = -Ifges(3,3) * t3861 + t3144 * t4382 + t3158 * t4396;
t2927 = -Ifges(3,3) * t3862 + t3147 * t4378 + t3163 * t4394;
t2926 = -Ifges(3,3) * t3863 + t3145 * t4380 + t3161 * t4395;
t2925 = -Ifges(3,3) * t3864 + t3143 * t4382 + t3159 * t4396;
t2921 = t3124 * t4390 + t3168 * t4398 + t3189 * t4013;
t2920 = t3123 * t4391 + t3167 * t4399 + t3188 * t4014;
t2919 = t3122 * t4392 + t3166 * t4400 + t3187 * t4015;
t2918 = -Ifges(3,3) * t3865 + t3142 * t4387 + t3156 * t4397;
t2917 = -Ifges(3,3) * t3866 + t3141 * t4387 + t3157 * t4397;
t2916 = t3115 * t4393 + t3164 * t4401 + t3185 * t4016;
t2915 = -t3132 * t3851 + t3148 * t4379 + t3162 * t4403;
t2914 = -t3131 * t3853 + t3146 * t4381 + t3160 * t4405;
t2913 = -t3130 * t3855 + t3144 * t4383 + t3158 * t4407;
t2912 = -t3129 * t3851 + t3147 * t4379 + t3163 * t4403;
t2911 = -t3128 * t3853 + t3145 * t4381 + t3161 * t4405;
t2910 = -t3127 * t3855 + t3143 * t4383 + t3159 * t4407;
t2909 = -t3126 * t3857 + t3142 * t4388 + t3156 * t4409;
t2908 = -t3125 * t3857 + t3141 * t4388 + t3157 * t4409;
t2907 = t3124 * t4411 - t3132 * t3852 + t3148 * t4402;
t2906 = t3123 * t4413 - t3131 * t3854 + t3146 * t4404;
t2905 = t3122 * t4415 - t3130 * t3856 + t3144 * t4406;
t2904 = t3124 * t4410 - t3129 * t3852 + t3147 * t4402;
t2903 = t3123 * t4412 - t3128 * t3854 + t3145 * t4404;
t2902 = t3122 * t4414 - t3127 * t3856 + t3143 * t4406;
t2901 = t3115 * t4417 - t3126 * t3858 + t3142 * t4408;
t2900 = t3115 * t4416 - t3125 * t3858 + t3141 * t4408;
t2857 = Ifges(3,3) * t3074 + t3108 * t3320 + t3112 * t3189;
t2856 = Ifges(3,3) * t3073 + t3107 * t3319 + t3111 * t3188;
t2855 = Ifges(3,3) * t3072 + t3106 * t3318 + t3110 * t3187;
t2853 = Ifges(3,3) * t3071 + t3102 * t3310 + t3109 * t3185;
t2852 = t3074 * t3320 + t3108 * t3252 + t3112 * t3168;
t2851 = t3073 * t3319 + t3107 * t3251 + t3111 * t3167;
t2850 = t3072 * t3318 + t3106 * t3250 + t3110 * t3166;
t2849 = t3071 * t3310 + t3102 * t3248 + t3109 * t3164;
t2848 = t3074 * t3189 + t3108 * t3168 + t3112 * t3124;
t2847 = t3073 * t3188 + t3107 * t3167 + t3111 * t3123;
t2846 = t3072 * t3187 + t3106 * t3166 + t3110 * t3122;
t2845 = t3071 * t3185 + t3102 * t3164 + t3109 * t3115;
t1 = [t4690 * t4425 + t4689 * t4423 + t4688 * t4421 + t4687 * t4419 + t4698 * t4416 + t4697 * t4414 + t4696 * t4412 + t4695 * t4410 - t4694 * t3866 - t4693 * t3864 - t4692 * t3863 - t4691 * t3862 + (t3594 * t3701 - t3595 * t3702 - (t2902 * t4414 + t2910 * t4423 - t2925 * t3864) * t3345 - (t2902 * t4415 + t2910 * t4422 - t2925 * t3861) * t3341 - (t2900 * t4416 + t2908 * t4425 - t2917 * t3866) * t3344 - (t2900 * t4417 + t2908 * t4424 - t2917 * t3865) * t3340 - (t2904 * t4410 + t2912 * t4419 - t2927 * t3862) * t3347 - (t2904 * t4411 + t2912 * t4418 - t2927 * t3859) * t3343 - (t2903 * t4412 + t2911 * t4421 - t2926 * t3863) * t3346 - (t2903 * t4413 + t2911 * t4420 - t2926 * t3860) * t3342) * t3632; t4690 * t4424 + t4689 * t4422 + t4688 * t4420 + t4687 * t4418 + t4698 * t4417 + t4697 * t4415 + t4696 * t4413 + t4695 * t4411 - t4694 * t3865 - t4693 * t3861 - t4692 * t3860 - t4691 * t3859 + (-t3594 * t3702 - t3595 * t3701 - (t2905 * t4414 + t2913 * t4423 - t2930 * t3864) * t3345 - (t2905 * t4415 + t2913 * t4422 - t2930 * t3861) * t3341 - (t2901 * t4416 + t2909 * t4425 - t2918 * t3866) * t3344 - (t2901 * t4417 + t2909 * t4424 - t2918 * t3865) * t3340 - (t2907 * t4410 + t2915 * t4419 - t2932 * t3862) * t3347 - (t2907 * t4411 + t2915 * t4418 - t2932 * t3859) * t3343 - (t2906 * t4412 + t2914 * t4421 - t2931 * t3863) * t3346 - (t2906 * t4413 + t2914 * t4420 - t2931 * t3860) * t3342) * t3632; t4690 * t4401 + t4689 * t4400 + t4688 * t4399 + t4687 * t4398 + t4698 * t4393 + t4697 * t4392 + t4696 * t4391 + t4695 * t4390 + t4694 * t4016 + t4693 * t4015 + t4692 * t4014 + t4691 * t4013 + (-(t2919 * t4414 + t3080 * t4423 - t3103 * t3864) * t3345 - (t2919 * t4415 + t3080 * t4422 - t3103 * t3861) * t3341 - (t2916 * t4416 + t3075 * t4425 - t3101 * t3866) * t3344 - (t2916 * t4417 + t3075 * t4424 - t3101 * t3865) * t3340 - (t2921 * t4410 + t3082 * t4419 - t3105 * t3862) * t3347 - (t2921 * t4411 + t3082 * t4418 - t3105 * t3859) * t3343 - (t2920 * t4412 + t3081 * t4421 - t3104 * t3863) * t3346 - (t2920 * t4413 + t3081 * t4420 - t3104 * t3860) * t3342) * t3632; t4695 * t3112 + t4696 * t3111 + t4697 * t3110 + t4698 * t3109 + t4687 * t3108 + t4688 * t3107 + t4689 * t3106 + t4690 * t3102 + t4691 * t3074 + t4692 * t3073 + t4693 * t3072 + t4694 * t3071 + (-(t2845 * t4416 + t2849 * t4425 - t2853 * t3866) * t3344 - (t2845 * t4417 + t2849 * t4424 - t2853 * t3865) * t3340 - (t2846 * t4414 + t2850 * t4423 - t2855 * t3864) * t3345 - (t2846 * t4415 + t2850 * t4422 - t2855 * t3861) * t3341 - (t2848 * t4410 + t2852 * t4419 - t2857 * t3862) * t3347 - (t2848 * t4411 + t2852 * t4418 - t2857 * t3859) * t3343 - (t2847 * t4412 + t2851 * t4421 - t2856 * t3863) * t3346 - (t2847 * t4413 + t2851 * t4420 - t2856 * t3860) * t3342) * t3632;];
taucX  = t1;
