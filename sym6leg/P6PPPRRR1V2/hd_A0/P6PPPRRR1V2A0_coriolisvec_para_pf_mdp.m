% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PPPRRR1V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d4,theta1,theta2,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [13x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PPPRRR1V2A0_convert_par2_MPV_fixb.m

% Output:
% taucX [6x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 19:43
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6PPPRRR1V2A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(13,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [13 1]), ...
  'P6PPPRRR1V2A0_coriolisvec_para_pf_mdp: MDP has to be [13x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 19:40:52
% EndTime: 2019-05-16 19:42:11
% DurationCPUTime: 86.81s
% Computational Cost: add. (111262->1236), mult. (249505->2203), div. (4500->3), fcn. (233591->50), ass. (0->779)
t8326 = xP(5);
t8288 = sin(t8326);
t8328 = koppelP(6,3);
t8291 = cos(t8326);
t8325 = xP(6);
t8287 = sin(t8325);
t8290 = cos(t8325);
t8334 = koppelP(6,2);
t8340 = koppelP(6,1);
t8725 = -t8287 * t8334 + t8340 * t8290;
t8647 = t8291 * t8725;
t8081 = t8288 * t8328 + t8647;
t8304 = legFrame(6,3);
t8251 = sin(t8304);
t8263 = cos(t8304);
t8297 = sin(pkin(8));
t8301 = cos(pkin(8));
t8310 = legFrame(6,1);
t8269 = cos(t8310);
t8611 = t8269 * t8301;
t8612 = t8269 * t8297;
t8316 = legFrame(6,2);
t8281 = cos(t8316);
t8257 = sin(t8310);
t8275 = sin(t8316);
t8631 = t8257 * t8275;
t8327 = xP(4);
t8292 = cos(t8327);
t8514 = t8292 * t8340;
t8520 = t8292 * t8334;
t8289 = sin(t8327);
t8541 = t8289 * t8340;
t8547 = t8289 * t8334;
t8026 = (t8288 * t8541 + t8520) * t8290 + t8287 * (-t8288 * t8547 + t8514);
t8528 = t8291 * t8328;
t8731 = t8289 * t8528 - t8026;
t8761 = t8081 * t8631 + t8281 * t8731;
t8773 = t8263 * (t8081 * t8612 + t8301 * t8761) + t8251 * (t8081 * t8611 - t8297 * t8761);
t8329 = koppelP(5,3);
t8335 = koppelP(5,2);
t8341 = koppelP(5,1);
t8726 = -t8287 * t8335 + t8341 * t8290;
t8646 = t8291 * t8726;
t8082 = t8288 * t8329 + t8646;
t8305 = legFrame(5,3);
t8252 = sin(t8305);
t8264 = cos(t8305);
t8311 = legFrame(5,1);
t8270 = cos(t8311);
t8608 = t8270 * t8301;
t8609 = t8270 * t8297;
t8317 = legFrame(5,2);
t8282 = cos(t8317);
t8258 = sin(t8311);
t8276 = sin(t8317);
t8628 = t8258 * t8276;
t8513 = t8292 * t8341;
t8519 = t8292 * t8335;
t8540 = t8289 * t8341;
t8546 = t8289 * t8335;
t8027 = (t8288 * t8540 + t8519) * t8290 + t8287 * (-t8288 * t8546 + t8513);
t8527 = t8291 * t8329;
t8732 = t8289 * t8527 - t8027;
t8760 = t8082 * t8628 + t8282 * t8732;
t8772 = t8264 * (t8082 * t8609 + t8301 * t8760) + t8252 * (t8082 * t8608 - t8297 * t8760);
t8330 = koppelP(4,3);
t8336 = koppelP(4,2);
t8342 = koppelP(4,1);
t8727 = -t8287 * t8336 + t8342 * t8290;
t8645 = t8291 * t8727;
t8083 = t8288 * t8330 + t8645;
t8306 = legFrame(4,3);
t8253 = sin(t8306);
t8265 = cos(t8306);
t8312 = legFrame(4,1);
t8271 = cos(t8312);
t8605 = t8271 * t8301;
t8606 = t8271 * t8297;
t8318 = legFrame(4,2);
t8283 = cos(t8318);
t8259 = sin(t8312);
t8277 = sin(t8318);
t8625 = t8259 * t8277;
t8512 = t8292 * t8342;
t8518 = t8292 * t8336;
t8539 = t8289 * t8342;
t8545 = t8289 * t8336;
t8028 = (t8288 * t8539 + t8518) * t8290 + t8287 * (-t8288 * t8545 + t8512);
t8526 = t8291 * t8330;
t8733 = t8289 * t8526 - t8028;
t8759 = t8083 * t8625 + t8283 * t8733;
t8771 = t8265 * (t8083 * t8606 + t8301 * t8759) + t8253 * (t8083 * t8605 - t8297 * t8759);
t8331 = koppelP(3,3);
t8337 = koppelP(3,2);
t8343 = koppelP(3,1);
t8728 = -t8287 * t8337 + t8343 * t8290;
t8644 = t8291 * t8728;
t8084 = t8288 * t8331 + t8644;
t8307 = legFrame(3,3);
t8254 = sin(t8307);
t8266 = cos(t8307);
t8313 = legFrame(3,1);
t8272 = cos(t8313);
t8602 = t8272 * t8301;
t8603 = t8272 * t8297;
t8319 = legFrame(3,2);
t8284 = cos(t8319);
t8260 = sin(t8313);
t8278 = sin(t8319);
t8622 = t8260 * t8278;
t8511 = t8292 * t8343;
t8517 = t8292 * t8337;
t8538 = t8289 * t8343;
t8544 = t8289 * t8337;
t8029 = (t8288 * t8538 + t8517) * t8290 + t8287 * (-t8288 * t8544 + t8511);
t8525 = t8291 * t8331;
t8734 = t8289 * t8525 - t8029;
t8758 = t8084 * t8622 + t8284 * t8734;
t8770 = t8266 * (t8084 * t8603 + t8301 * t8758) + t8254 * (t8084 * t8602 - t8297 * t8758);
t8332 = koppelP(2,3);
t8338 = koppelP(2,2);
t8344 = koppelP(2,1);
t8729 = -t8287 * t8338 + t8344 * t8290;
t8643 = t8291 * t8729;
t8085 = t8288 * t8332 + t8643;
t8308 = legFrame(2,3);
t8255 = sin(t8308);
t8267 = cos(t8308);
t8314 = legFrame(2,1);
t8273 = cos(t8314);
t8599 = t8273 * t8301;
t8600 = t8273 * t8297;
t8320 = legFrame(2,2);
t8285 = cos(t8320);
t8261 = sin(t8314);
t8279 = sin(t8320);
t8619 = t8261 * t8279;
t8510 = t8292 * t8344;
t8516 = t8292 * t8338;
t8537 = t8289 * t8344;
t8543 = t8289 * t8338;
t8030 = (t8288 * t8537 + t8516) * t8290 + t8287 * (-t8288 * t8543 + t8510);
t8524 = t8291 * t8332;
t8735 = t8289 * t8524 - t8030;
t8757 = t8085 * t8619 + t8285 * t8735;
t8769 = t8267 * (t8085 * t8600 + t8301 * t8757) + t8255 * (t8085 * t8599 - t8297 * t8757);
t8333 = koppelP(1,3);
t8339 = koppelP(1,2);
t8345 = koppelP(1,1);
t8724 = -t8287 * t8339 + t8290 * t8345;
t8642 = t8291 * t8724;
t8086 = t8288 * t8333 + t8642;
t8309 = legFrame(1,3);
t8256 = sin(t8309);
t8268 = cos(t8309);
t8315 = legFrame(1,1);
t8274 = cos(t8315);
t8596 = t8274 * t8301;
t8597 = t8274 * t8297;
t8321 = legFrame(1,2);
t8286 = cos(t8321);
t8262 = sin(t8315);
t8280 = sin(t8321);
t8616 = t8262 * t8280;
t8509 = t8292 * t8345;
t8515 = t8292 * t8339;
t8536 = t8289 * t8345;
t8542 = t8289 * t8339;
t8031 = (t8288 * t8536 + t8515) * t8290 + t8287 * (-t8288 * t8542 + t8509);
t8523 = t8291 * t8333;
t8730 = t8289 * t8523 - t8031;
t8756 = t8086 * t8616 + t8286 * t8730;
t8768 = t8268 * (t8086 * t8597 + t8301 * t8756) + t8256 * (t8086 * t8596 - t8297 * t8756);
t8222 = t8287 * t8340 + t8290 * t8334;
t8323 = xDP(5);
t8392 = -t8288 * t8725 + t8528;
t8322 = xDP(6);
t8530 = t8291 * t8322;
t7993 = t8222 * t8530 - t8323 * t8392;
t8755 = t7993 * t8289;
t8754 = t7993 * t8292;
t8223 = t8287 * t8341 + t8290 * t8335;
t8391 = -t8288 * t8726 + t8527;
t7994 = t8223 * t8530 - t8323 * t8391;
t8753 = t7994 * t8289;
t8752 = t7994 * t8292;
t8224 = t8287 * t8342 + t8290 * t8336;
t8390 = -t8288 * t8727 + t8526;
t7995 = t8224 * t8530 - t8323 * t8390;
t8751 = t7995 * t8289;
t8750 = t7995 * t8292;
t8225 = t8287 * t8343 + t8290 * t8337;
t8389 = -t8288 * t8728 + t8525;
t7996 = t8225 * t8530 - t8323 * t8389;
t8749 = t7996 * t8289;
t8748 = t7996 * t8292;
t8226 = t8287 * t8344 + t8290 * t8338;
t8388 = -t8288 * t8729 + t8524;
t7997 = t8226 * t8530 - t8323 * t8388;
t8747 = t7997 * t8289;
t8746 = t7997 * t8292;
t8227 = t8287 * t8345 + t8290 * t8339;
t8387 = -t8288 * t8724 + t8523;
t7998 = t8227 * t8530 - t8323 * t8387;
t8745 = t7998 * t8289;
t8744 = t7998 * t8292;
t8324 = xDP(4);
t8529 = t8291 * t8324;
t8533 = t8290 * t8323;
t8160 = t8287 * t8529 - t8533;
t8564 = t8287 * t8323;
t8162 = t8290 * t8529 + t8564;
t8228 = t8288 * t8324 + t8322;
t8743 = (MDP(6) * t8228 + t8162 * (MDP(4) - MDP(7))) * t8160;
t8163 = t8289 * t8222;
t8742 = t8392 * t8292 + t8163;
t8164 = t8289 * t8223;
t8741 = t8391 * t8292 + t8164;
t8165 = t8289 * t8224;
t8740 = t8390 * t8292 + t8165;
t8166 = t8289 * t8225;
t8739 = t8389 * t8292 + t8166;
t8167 = t8289 * t8226;
t8738 = t8388 * t8292 + t8167;
t8168 = t8289 * t8227;
t8737 = t8387 * t8292 + t8168;
t8169 = t8292 * t8222;
t7974 = -t8392 * t8289 + t8169;
t8170 = t8292 * t8223;
t7975 = -t8391 * t8289 + t8170;
t8171 = t8292 * t8224;
t7976 = -t8390 * t8289 + t8171;
t8549 = t8289 * t8323;
t8687 = t8737 * t8324;
t7839 = -(t8168 * t8288 - t8292 * t8724) * t8322 + t8086 * t8549 - t8687;
t8688 = t8738 * t8324;
t7837 = -(t8167 * t8288 - t8292 * t8729) * t8322 + t8085 * t8549 - t8688;
t8689 = t8739 * t8324;
t7835 = -(t8166 * t8288 - t8292 * t8728) * t8322 + t8084 * t8549 - t8689;
t8522 = t8292 * t8323;
t8693 = t7976 * t8324;
t7834 = -(t8171 * t8288 + t8289 * t8727) * t8322 + t8083 * t8522 - t8693;
t8696 = t8740 * t8324;
t7833 = -(t8165 * t8288 - t8292 * t8727) * t8322 + t8083 * t8549 - t8696;
t8694 = t7975 * t8324;
t7832 = -(t8170 * t8288 + t8289 * t8726) * t8322 + t8082 * t8522 - t8694;
t8697 = t8741 * t8324;
t7831 = -(t8164 * t8288 - t8292 * t8726) * t8322 + t8082 * t8549 - t8697;
t8695 = t7974 * t8324;
t7830 = -(t8169 * t8288 + t8289 * t8725) * t8322 + t8081 * t8522 - t8695;
t8698 = t8742 * t8324;
t7829 = -(t8163 * t8288 - t8292 * t8725) * t8322 + t8081 * t8549 - t8698;
t8210 = t8251 * t8301 + t8263 * t8297;
t8364 = t8281 * t8210;
t8211 = t8252 * t8301 + t8264 * t8297;
t8362 = t8282 * t8211;
t8212 = t8253 * t8301 + t8265 * t8297;
t8360 = t8283 * t8212;
t8213 = t8254 * t8301 + t8266 * t8297;
t8358 = t8284 * t8213;
t8214 = t8255 * t8301 + t8267 * t8297;
t8356 = t8285 * t8214;
t8215 = t8256 * t8301 + t8268 * t8297;
t8354 = t8286 * t8215;
t8534 = t8290 * t8292;
t8565 = t8287 * t8289;
t8135 = -t8288 * t8534 + t8565;
t8501 = t8323 * t8324;
t8675 = t8160 * t8228;
t8736 = t8291 * (t8135 * t8501 + t8292 * t8675);
t8557 = t8288 * t8292;
t8716 = t8227 * t8292 - t8289 * t8387;
t8690 = t8716 * t8324;
t7840 = -(t8227 * t8557 + t8289 * t8724) * t8322 + t8086 * t8522 - t8690;
t8715 = t8226 * t8292 - t8289 * t8388;
t8691 = t8715 * t8324;
t7838 = -(t8226 * t8557 + t8289 * t8729) * t8322 + t8085 * t8522 - t8691;
t8714 = t8225 * t8292 - t8289 * t8389;
t8692 = t8714 * t8324;
t7836 = -(t8225 * t8557 + t8289 * t8728) * t8322 + t8084 * t8522 - t8692;
t8593 = t8275 * t8301;
t8594 = t8275 * t8297;
t8722 = t8269 * ((-t7974 * t8594 + t8301 * t8742) * t8251 + (t7974 * t8593 + t8297 * t8742) * t8263) + ((-t7974 * t8297 + t8593 * t8742) * t8263 - (t7974 * t8301 + t8594 * t8742) * t8251) * t8257;
t8590 = t8276 * t8301;
t8591 = t8276 * t8297;
t8721 = t8270 * ((-t7975 * t8591 + t8301 * t8741) * t8252 + (t7975 * t8590 + t8297 * t8741) * t8264) + ((-t7975 * t8297 + t8590 * t8741) * t8264 - t8252 * (t7975 * t8301 + t8591 * t8741)) * t8258;
t8587 = t8277 * t8301;
t8588 = t8277 * t8297;
t8720 = t8271 * ((-t7976 * t8588 + t8301 * t8740) * t8253 + (t7976 * t8587 + t8297 * t8740) * t8265) + ((-t7976 * t8297 + t8587 * t8740) * t8265 - t8253 * (t7976 * t8301 + t8588 * t8740)) * t8259;
t8584 = t8278 * t8301;
t8585 = t8278 * t8297;
t8719 = t8272 * ((t8301 * t8739 - t8585 * t8714) * t8254 + (t8297 * t8739 + t8584 * t8714) * t8266) + ((-t8297 * t8714 + t8584 * t8739) * t8266 - t8254 * (t8301 * t8714 + t8585 * t8739)) * t8260;
t8581 = t8279 * t8301;
t8582 = t8279 * t8297;
t8718 = t8273 * ((t8301 * t8738 - t8582 * t8715) * t8255 + (t8297 * t8738 + t8581 * t8715) * t8267) + ((-t8297 * t8715 + t8581 * t8738) * t8267 - t8255 * (t8301 * t8715 + t8582 * t8738)) * t8261;
t8578 = t8280 * t8301;
t8579 = t8280 * t8297;
t8717 = t8274 * ((t8301 * t8737 - t8579 * t8716) * t8256 + (t8297 * t8737 + t8578 * t8716) * t8268) + ((-t8297 * t8716 + t8578 * t8737) * t8268 - (t8301 * t8716 + t8579 * t8737) * t8256) * t8262;
t8064 = t8160 ^ 2;
t8065 = t8162 ^ 2;
t8131 = t8228 ^ 2;
t8298 = sin(pkin(5));
t8294 = 0.1e1 / t8298;
t8712 = MDP(3) * t8294;
t8204 = t8251 * t8297 - t8301 * t8263;
t8296 = sin(pkin(9));
t8300 = cos(pkin(9));
t8303 = cos(pkin(4));
t8503 = t8300 * t8303;
t8202 = t8296 * t8301 + t8297 * t8503;
t8203 = t8296 * t8297 - t8301 * t8503;
t8403 = t8202 * t8251 + t8203 * t8263;
t8299 = sin(pkin(4));
t8302 = cos(pkin(5));
t8504 = t8299 * t8302;
t7917 = t8204 * t8504 + t8298 * t8403;
t8704 = t7917 * t8281;
t8205 = t8252 * t8297 - t8301 * t8264;
t8401 = t8202 * t8252 + t8203 * t8264;
t7918 = t8205 * t8504 + t8298 * t8401;
t8703 = t7918 * t8282;
t8206 = t8253 * t8297 - t8301 * t8265;
t8399 = t8202 * t8253 + t8203 * t8265;
t7919 = t8206 * t8504 + t8298 * t8399;
t8702 = t7919 * t8283;
t8207 = t8254 * t8297 - t8301 * t8266;
t8397 = t8202 * t8254 + t8203 * t8266;
t7920 = t8207 * t8504 + t8298 * t8397;
t8701 = t7920 * t8284;
t8208 = t8255 * t8297 - t8301 * t8267;
t8395 = t8202 * t8255 + t8203 * t8267;
t7921 = t8208 * t8504 + t8298 * t8395;
t8700 = t7921 * t8285;
t8209 = t8256 * t8297 - t8301 * t8268;
t8393 = t8202 * t8256 + t8203 * t8268;
t7922 = t8209 * t8504 + t8298 * t8393;
t8699 = t7922 * t8286;
t8502 = t8322 * t8323;
t8067 = (t8288 * t8564 - t8290 * t8530) * t8324 - t8287 * t8502;
t8686 = t8067 * t8288;
t8676 = t8160 * t8162;
t8674 = t8160 * t8290;
t8673 = t8162 * t8228;
t8672 = t8162 * t8287;
t8671 = t8202 * t8275;
t8670 = t8202 * t8276;
t8669 = t8202 * t8277;
t8668 = t8202 * t8278;
t8667 = t8202 * t8279;
t8666 = t8202 * t8280;
t8665 = t8203 * t8275;
t8664 = t8203 * t8276;
t8663 = t8203 * t8277;
t8662 = t8203 * t8278;
t8661 = t8203 * t8279;
t8660 = t8203 * t8280;
t8659 = t8204 * t8281;
t8658 = t8204 * t8303;
t8657 = t8205 * t8282;
t8656 = t8205 * t8303;
t8655 = t8206 * t8283;
t8654 = t8206 * t8303;
t8653 = t8207 * t8284;
t8652 = t8207 * t8303;
t8651 = t8208 * t8285;
t8650 = t8208 * t8303;
t8649 = t8209 * t8286;
t8648 = t8209 * t8303;
t8638 = t8228 * t8288;
t8630 = t8257 * t8297;
t8629 = t8257 * t8301;
t8627 = t8258 * t8297;
t8626 = t8258 * t8301;
t8624 = t8259 * t8297;
t8623 = t8259 * t8301;
t8621 = t8260 * t8297;
t8620 = t8260 * t8301;
t8618 = t8261 * t8297;
t8617 = t8261 * t8301;
t8615 = t8262 * t8297;
t8614 = t8262 * t8301;
t8613 = t8269 * t8275;
t8610 = t8270 * t8276;
t8607 = t8271 * t8277;
t8604 = t8272 * t8278;
t8601 = t8273 * t8279;
t8598 = t8274 * t8280;
t8595 = t8275 * t8296;
t8592 = t8276 * t8296;
t8589 = t8277 * t8296;
t8586 = t8278 * t8296;
t8583 = t8279 * t8296;
t8580 = t8280 * t8296;
t8577 = t8281 * t8296;
t8576 = t8281 * t8299;
t8575 = t8282 * t8296;
t8574 = t8282 * t8299;
t8573 = t8283 * t8296;
t8572 = t8283 * t8299;
t8571 = t8284 * t8296;
t8570 = t8284 * t8299;
t8569 = t8285 * t8296;
t8568 = t8285 * t8299;
t8567 = t8286 * t8296;
t8566 = t8286 * t8299;
t8550 = t8289 * t8290;
t8548 = t8289 * t8324;
t8535 = t8290 * t8291;
t8531 = t8291 * t8292;
t8521 = t8292 * t8324;
t8293 = 0.1e1 / t8296;
t8508 = t8293 * t8294;
t8295 = 0.1e1 / t8299;
t8507 = t8293 * t8295;
t8506 = t8296 * t8299;
t8505 = t8296 * t8303;
t8132 = -t8288 * t8565 + t8534;
t8133 = t8287 * t8292 + t8288 * t8550;
t8495 = t8133 * t8067 - t8132 * t8675;
t8134 = t8287 * t8557 + t8550;
t8494 = t8135 * t8067 - t8134 * t8675;
t8068 = (-t8287 * t8530 - t8288 * t8533) * t8324 + t8290 * t8502;
t8493 = t8068 * t8531 - t8135 * t8676;
t8492 = t8288 * t8068 - t8535 * t8676;
t8462 = t8291 * t8501;
t8488 = t8162 * t8531;
t8491 = t8134 * t8462 + t8228 * t8488;
t8490 = t8132 * t8676;
t8489 = t8133 * t8501;
t8487 = t8291 ^ 2 * t8501;
t8485 = t8275 * t8503;
t8483 = t8276 * t8503;
t8481 = t8277 * t8503;
t8479 = t8278 * t8503;
t8477 = t8279 * t8503;
t8475 = t8280 * t8503;
t8474 = t8281 * t8503;
t8473 = t8282 * t8503;
t8472 = t8283 * t8503;
t8471 = t8284 * t8503;
t8470 = t8285 * t8503;
t8469 = t8286 * t8503;
t8461 = t8294 * t8507;
t8454 = t8298 * t8299 * t8300;
t8111 = -t8288 * t8522 - t8289 * t8529;
t7766 = t7830 * t8324 + (t8081 * t8521 - t8755) * t8323 + (t7830 * t8288 + t8081 * t8111 + (-t8323 * t8742 - t8754) * t8291) * t8322;
t8112 = t8288 * t8549 - t8291 * t8521;
t7767 = t7829 * t8324 + (t8081 * t8548 + t8754) * t8323 + (t7829 * t8288 - t8081 * t8112 + (t7974 * t8323 - t8755) * t8291) * t8322;
t8404 = t8202 * t8263 - t8203 * t8251;
t8428 = t8204 * t8613 + t8257 * t8210;
t7790 = (-t8257 * t8404 - t8403 * t8613) * t8298 - t8428 * t8504;
t8371 = t8204 * t8631 - t8210 * t8269;
t7796 = (-t8269 * t8404 + t8403 * t8631) * t8298 + t8371 * t8504;
t7700 = (-t7974 * t8111 + t8112 * t8742) * t8322 + ((-t7830 - t8695) * t8292 + (-t7829 - t8698) * t8289) * t8323 + (-t7829 * t8292 + t7830 * t8289) * t8530;
t8447 = t7700 * t8281 * t8508;
t8453 = t7917 * t8295 * t8447 + (t7766 * t7796 + t7767 * t7790) * t8461;
t7768 = t7832 * t8324 + (t8082 * t8521 - t8753) * t8323 + (t7832 * t8288 + t8082 * t8111 + (-t8323 * t8741 - t8752) * t8291) * t8322;
t7769 = t7831 * t8324 + (t8082 * t8548 + t8752) * t8323 + (t7831 * t8288 - t8082 * t8112 + (t7975 * t8323 - t8753) * t8291) * t8322;
t8402 = t8202 * t8264 - t8203 * t8252;
t8427 = t8205 * t8610 + t8258 * t8211;
t7791 = (-t8258 * t8402 - t8401 * t8610) * t8298 - t8427 * t8504;
t8370 = t8205 * t8628 - t8211 * t8270;
t7797 = (-t8270 * t8402 + t8401 * t8628) * t8298 + t8370 * t8504;
t7701 = (-t7975 * t8111 + t8112 * t8741) * t8322 + ((-t7832 - t8694) * t8292 + (-t7831 - t8697) * t8289) * t8323 + (-t7831 * t8292 + t7832 * t8289) * t8530;
t8446 = t7701 * t8282 * t8508;
t8452 = t7918 * t8295 * t8446 + (t7768 * t7797 + t7769 * t7791) * t8461;
t7770 = t7834 * t8324 + (t8083 * t8521 - t8751) * t8323 + (t7834 * t8288 + t8083 * t8111 + (-t8323 * t8740 - t8750) * t8291) * t8322;
t7771 = t7833 * t8324 + (t8083 * t8548 + t8750) * t8323 + (t7833 * t8288 - t8083 * t8112 + (t7976 * t8323 - t8751) * t8291) * t8322;
t8400 = t8202 * t8265 - t8203 * t8253;
t8426 = t8206 * t8607 + t8259 * t8212;
t7792 = (-t8259 * t8400 - t8399 * t8607) * t8298 - t8426 * t8504;
t8369 = t8206 * t8625 - t8212 * t8271;
t7798 = (-t8271 * t8400 + t8399 * t8625) * t8298 + t8369 * t8504;
t7702 = (-t7976 * t8111 + t8112 * t8740) * t8322 + ((-t7834 - t8693) * t8292 + (-t7833 - t8696) * t8289) * t8323 + (-t7833 * t8292 + t7834 * t8289) * t8530;
t8445 = t7702 * t8283 * t8508;
t8451 = t7919 * t8295 * t8445 + (t7770 * t7798 + t7771 * t7792) * t8461;
t7772 = t7836 * t8324 + (t8084 * t8521 - t8749) * t8323 + (t7836 * t8288 + t8084 * t8111 + (-t8323 * t8739 - t8748) * t8291) * t8322;
t7773 = t7835 * t8324 + (t8084 * t8548 + t8748) * t8323 + (t7835 * t8288 - t8084 * t8112 + (t8323 * t8714 - t8749) * t8291) * t8322;
t8398 = t8202 * t8266 - t8203 * t8254;
t8425 = t8207 * t8604 + t8260 * t8213;
t7793 = (-t8260 * t8398 - t8397 * t8604) * t8298 - t8425 * t8504;
t8368 = t8207 * t8622 - t8213 * t8272;
t7799 = (-t8272 * t8398 + t8397 * t8622) * t8298 + t8368 * t8504;
t7703 = (-t8111 * t8714 + t8112 * t8739) * t8322 + ((-t7836 - t8692) * t8292 + (-t7835 - t8689) * t8289) * t8323 + (-t7835 * t8292 + t7836 * t8289) * t8530;
t8444 = t7703 * t8284 * t8508;
t8450 = t7920 * t8295 * t8444 + (t7772 * t7799 + t7773 * t7793) * t8461;
t7774 = t7838 * t8324 + (t8085 * t8521 - t8747) * t8323 + (t7838 * t8288 + t8085 * t8111 + (-t8323 * t8738 - t8746) * t8291) * t8322;
t7775 = t7837 * t8324 + (t8085 * t8548 + t8746) * t8323 + (t7837 * t8288 - t8085 * t8112 + (t8323 * t8715 - t8747) * t8291) * t8322;
t8396 = t8202 * t8267 - t8203 * t8255;
t8424 = t8208 * t8601 + t8261 * t8214;
t7794 = (-t8261 * t8396 - t8395 * t8601) * t8298 - t8424 * t8504;
t8367 = t8208 * t8619 - t8214 * t8273;
t7800 = (-t8273 * t8396 + t8395 * t8619) * t8298 + t8367 * t8504;
t7704 = (-t8111 * t8715 + t8112 * t8738) * t8322 + ((-t7838 - t8691) * t8292 + (-t7837 - t8688) * t8289) * t8323 + (-t7837 * t8292 + t7838 * t8289) * t8530;
t8443 = t7704 * t8285 * t8508;
t8449 = t7921 * t8295 * t8443 + (t7774 * t7800 + t7775 * t7794) * t8461;
t7776 = t7840 * t8324 + (t8086 * t8521 - t8745) * t8323 + (t7840 * t8288 + t8086 * t8111 + (-t8323 * t8737 - t8744) * t8291) * t8322;
t7777 = t7839 * t8324 + (t8086 * t8548 + t8744) * t8323 + (t7839 * t8288 - t8086 * t8112 + (t8323 * t8716 - t8745) * t8291) * t8322;
t8394 = t8202 * t8268 - t8203 * t8256;
t8423 = t8209 * t8598 + t8262 * t8215;
t7795 = (-t8262 * t8394 - t8393 * t8598) * t8298 - t8423 * t8504;
t8366 = t8209 * t8616 - t8215 * t8274;
t7801 = (-t8274 * t8394 + t8393 * t8616) * t8298 + t8366 * t8504;
t7705 = (-t8111 * t8716 + t8112 * t8737) * t8322 + ((-t7840 - t8690) * t8292 + (-t7839 - t8687) * t8289) * t8323 + (-t7839 * t8292 + t7840 * t8289) * t8530;
t8442 = t7705 * t8286 * t8508;
t8448 = t7922 * t8295 * t8442 + (t7776 * t7801 + t7777 * t7795) * t8461;
t8058 = t8210 * t8275 * t8303 + t8576;
t7844 = (t8058 * t8269 - t8257 * t8658) * t8296 + t8300 * t8428;
t7845 = (-t8058 * t8257 - t8269 * t8658) * t8296 - t8371 * t8300;
t7923 = (-t8204 * t8300 - t8210 * t8505) * t8281 + t8275 * t8506;
t7652 = (t7700 * t7923 + t7766 * t7845 + t7767 * t7844) * t8507;
t8059 = t8211 * t8276 * t8303 + t8574;
t7846 = (t8059 * t8270 - t8258 * t8656) * t8296 + t8300 * t8427;
t7847 = (-t8059 * t8258 - t8270 * t8656) * t8296 - t8370 * t8300;
t7924 = (-t8205 * t8300 - t8211 * t8505) * t8282 + t8276 * t8506;
t7653 = (t7701 * t7924 + t7768 * t7847 + t7769 * t7846) * t8507;
t8060 = t8212 * t8277 * t8303 + t8572;
t7848 = (t8060 * t8271 - t8259 * t8654) * t8296 + t8300 * t8426;
t7849 = (-t8060 * t8259 - t8271 * t8654) * t8296 - t8369 * t8300;
t7925 = (-t8206 * t8300 - t8212 * t8505) * t8283 + t8277 * t8506;
t7654 = (t7702 * t7925 + t7770 * t7849 + t7771 * t7848) * t8507;
t8061 = t8213 * t8278 * t8303 + t8570;
t7850 = (t8061 * t8272 - t8260 * t8652) * t8296 + t8300 * t8425;
t7851 = (-t8061 * t8260 - t8272 * t8652) * t8296 - t8368 * t8300;
t7926 = (-t8207 * t8300 - t8213 * t8505) * t8284 + t8278 * t8506;
t7655 = (t7703 * t7926 + t7772 * t7851 + t7773 * t7850) * t8507;
t8062 = t8214 * t8279 * t8303 + t8568;
t7852 = (t8062 * t8273 - t8261 * t8650) * t8296 + t8300 * t8424;
t7853 = (-t8062 * t8261 - t8273 * t8650) * t8296 - t8367 * t8300;
t7927 = (-t8208 * t8300 - t8214 * t8505) * t8285 + t8279 * t8506;
t7656 = (t7704 * t7927 + t7774 * t7853 + t7775 * t7852) * t8507;
t8063 = t8215 * t8280 * t8303 + t8566;
t7854 = (t8063 * t8274 - t8262 * t8648) * t8296 + t8300 * t8423;
t7855 = (-t8063 * t8262 - t8274 * t8648) * t8296 - t8366 * t8300;
t7928 = (-t8209 * t8300 - t8215 * t8505) * t8286 + t8280 * t8506;
t7657 = (t7705 * t7928 + t7776 * t7855 + t7777 * t7854) * t8507;
t7664 = -t8204 * t8447 + (-t7766 * t8371 + t7767 * t8428) * t8508;
t7665 = -t8205 * t8446 + (-t7768 * t8370 + t7769 * t8427) * t8508;
t7666 = -t8206 * t8445 + (-t7770 * t8369 + t7771 * t8426) * t8508;
t7667 = -t8207 * t8444 + (-t7772 * t8368 + t7773 * t8425) * t8508;
t7668 = -t8208 * t8443 + (-t7774 * t8367 + t7775 * t8424) * t8508;
t7669 = -t8209 * t8442 + (-t7776 * t8366 + t7777 * t8423) * t8508;
t8441 = t8290 * t8487;
t8440 = t8302 * t7664 + t8453;
t8439 = t8302 * t7665 + t8452;
t8438 = t8302 * t7666 + t8451;
t8437 = t8302 * t7667 + t8450;
t8436 = t8302 * t7668 + t8449;
t8435 = t8302 * t7669 + t8448;
t8032 = -(t8288 * t8520 + t8541) * t8287 + (t8288 * t8514 - t8547) * t8290;
t7942 = t8292 * t8528 - t8032;
t8033 = -(t8288 * t8519 + t8540) * t8287 + (t8288 * t8513 - t8546) * t8290;
t7943 = t8292 * t8527 - t8033;
t8034 = -(t8288 * t8518 + t8539) * t8287 + (t8288 * t8512 - t8545) * t8290;
t7944 = t8292 * t8526 - t8034;
t8035 = -(t8288 * t8517 + t8538) * t8287 + (t8288 * t8511 - t8544) * t8290;
t7945 = t8292 * t8525 - t8035;
t8036 = -(t8288 * t8516 + t8537) * t8287 + (t8288 * t8510 - t8543) * t8290;
t7946 = t8292 * t8524 - t8036;
t8037 = -(t8288 * t8515 + t8536) * t8287 + (t8288 * t8509 - t8542) * t8290;
t7947 = t8292 * t8523 - t8037;
t8136 = -t8257 * t8594 + t8611;
t8148 = t8257 * t8593 + t8612;
t8416 = t8136 * t8263 - t8148 * t8251;
t8137 = t8269 * t8594 + t8629;
t8149 = t8269 * t8593 - t8630;
t8415 = t8137 * t8263 + t8149 * t8251;
t8138 = -t8258 * t8591 + t8608;
t8150 = t8258 * t8590 + t8609;
t8414 = t8138 * t8264 - t8150 * t8252;
t8139 = t8270 * t8591 + t8626;
t8151 = t8270 * t8590 - t8627;
t8413 = t8139 * t8264 + t8151 * t8252;
t8140 = -t8259 * t8588 + t8605;
t8152 = t8259 * t8587 + t8606;
t8412 = t8140 * t8265 - t8152 * t8253;
t8141 = t8271 * t8588 + t8623;
t8153 = t8271 * t8587 - t8624;
t8411 = t8141 * t8265 + t8153 * t8253;
t8142 = -t8260 * t8585 + t8602;
t8154 = t8260 * t8584 + t8603;
t8410 = t8142 * t8266 - t8154 * t8254;
t8143 = t8272 * t8585 + t8620;
t8155 = t8272 * t8584 - t8621;
t8409 = t8143 * t8266 + t8155 * t8254;
t8144 = -t8261 * t8582 + t8599;
t8156 = t8261 * t8581 + t8600;
t8408 = t8144 * t8267 - t8156 * t8255;
t8145 = t8273 * t8582 + t8617;
t8157 = t8273 * t8581 - t8618;
t8407 = t8145 * t8267 + t8157 * t8255;
t8146 = -t8262 * t8579 + t8596;
t8158 = t8262 * t8578 + t8597;
t8406 = t8146 * t8268 - t8158 * t8256;
t8147 = t8274 * t8579 + t8614;
t8159 = t8274 * t8578 - t8615;
t8405 = t8147 * t8268 + t8159 * t8256;
t8386 = t8162 * t8638 - t8287 * t8487;
t8373 = t8068 * t8132 - t8133 * t8673;
t8372 = -t8068 * t8134 + t8135 * t8673;
t8365 = t8281 * t8081;
t8363 = t8282 * t8082;
t8361 = t8283 * t8083;
t8359 = t8284 * t8084;
t8357 = t8285 * t8085;
t8355 = t8286 * t8086;
t8353 = -t8067 * t8531 - t8134 * t8676;
t8351 = t8291 * t8364;
t8350 = t8291 * t8362;
t8349 = t8291 * t8360;
t8348 = t8291 * t8358;
t8347 = t8291 * t8356;
t8346 = t8291 * t8354;
t8070 = t8132 * t8462;
t8044 = -t8131 + t8064;
t8024 = t8067 * t8535;
t7986 = -t8065 + t8131;
t7971 = t8227 * t8578 + t8297 * t8387;
t7970 = t8226 * t8581 + t8297 * t8388;
t7969 = t8225 * t8584 + t8297 * t8389;
t7968 = t8224 * t8587 + t8297 * t8390;
t7967 = t8223 * t8590 + t8297 * t8391;
t7966 = t8222 * t8593 + t8297 * t8392;
t7965 = -t8227 * t8297 + t8387 * t8578;
t7964 = -t8226 * t8297 + t8388 * t8581;
t7963 = -t8225 * t8297 + t8389 * t8584;
t7962 = -t8224 * t8297 + t8390 * t8587;
t7961 = -t8223 * t8297 + t8391 * t8590;
t7960 = -t8222 * t8297 + t8392 * t8593;
t7959 = -t8227 * t8579 + t8301 * t8387;
t7958 = -t8226 * t8582 + t8301 * t8388;
t7957 = -t8225 * t8585 + t8301 * t8389;
t7956 = -t8224 * t8588 + t8301 * t8390;
t7955 = -t8223 * t8591 + t8301 * t8391;
t7954 = -t8222 * t8594 + t8301 * t8392;
t7953 = t8227 * t8301 + t8387 * t8579;
t7952 = t8226 * t8301 + t8388 * t8582;
t7951 = t8225 * t8301 + t8389 * t8585;
t7950 = t8224 * t8301 + t8390 * t8588;
t7949 = t8223 * t8301 + t8391 * t8591;
t7948 = t8222 * t8301 + t8392 * t8594;
t7933 = -t8064 + t8065;
t7931 = t8133 * t8676;
t7930 = -t8131 - t8065;
t7929 = -t8131 - t8064;
t7916 = -t8064 - t8065;
t7915 = t7947 * t8286 + t8086 * t8598;
t7914 = t7946 * t8285 + t8085 * t8601;
t7913 = t7945 * t8284 + t8084 * t8604;
t7912 = t7944 * t8283 + t8083 * t8607;
t7911 = t7943 * t8282 + t8082 * t8610;
t7910 = t7942 * t8281 + t8081 * t8613;
t7903 = t7947 * t8567 + t8086 * (t8262 * t8503 + t8274 * t8580);
t7902 = t7946 * t8569 + t8085 * (t8261 * t8503 + t8273 * t8583);
t7901 = t7945 * t8571 + t8084 * (t8260 * t8503 + t8272 * t8586);
t7900 = t7944 * t8573 + t8083 * (t8259 * t8503 + t8271 * t8589);
t7899 = t7943 * t8575 + t8082 * (t8258 * t8503 + t8270 * t8592);
t7898 = t7942 * t8577 + t8081 * (t8257 * t8503 + t8269 * t8595);
t7897 = -t8730 * t8567 + t8086 * (-t8262 * t8580 + t8274 * t8503);
t7896 = -t8735 * t8569 + t8085 * (-t8261 * t8583 + t8273 * t8503);
t7895 = -t8734 * t8571 + t8084 * (-t8260 * t8586 + t8272 * t8503);
t7894 = -t8733 * t8573 + t8083 * (-t8259 * t8589 + t8271 * t8503);
t7893 = -t8732 * t8575 + t8082 * (-t8258 * t8592 + t8270 * t8503);
t7892 = -t8731 * t8577 + t8081 * (-t8257 * t8595 + t8269 * t8503);
t7879 = t7947 * t8469 + t8086 * (-t8262 * t8296 + t8274 * t8475);
t7878 = t7946 * t8470 + t8085 * (-t8261 * t8296 + t8273 * t8477);
t7877 = t7945 * t8471 + t8084 * (-t8260 * t8296 + t8272 * t8479);
t7876 = t7944 * t8472 + t8083 * (-t8259 * t8296 + t8271 * t8481);
t7875 = t7943 * t8473 + t8082 * (-t8258 * t8296 + t8270 * t8483);
t7874 = t7942 * t8474 + t8081 * (-t8257 * t8296 + t8269 * t8485);
t7873 = -t8730 * t8469 - t8086 * (t8262 * t8475 + t8274 * t8296);
t7872 = -t8735 * t8470 - t8085 * (t8261 * t8477 + t8273 * t8296);
t7871 = -t8734 * t8471 - t8084 * (t8260 * t8479 + t8272 * t8296);
t7870 = -t8733 * t8472 - t8083 * (t8259 * t8481 + t8271 * t8296);
t7869 = -t8732 * t8473 - t8082 * (t8258 * t8483 + t8270 * t8296);
t7868 = -t8731 * t8474 - t8081 * (t8257 * t8485 + t8269 * t8296);
t7867 = t7959 * t8256 + t7971 * t8268;
t7866 = t7958 * t8255 + t7970 * t8267;
t7865 = t7957 * t8254 + t7969 * t8266;
t7864 = t7956 * t8253 + t7968 * t8265;
t7863 = t7955 * t8252 + t7967 * t8264;
t7862 = t7954 * t8251 + t7966 * t8263;
t7861 = -t7953 * t8256 + t7965 * t8268;
t7860 = -t7952 * t8255 + t7964 * t8267;
t7859 = -t7951 * t8254 + t7963 * t8266;
t7858 = -t7950 * t8253 + t7962 * t8265;
t7857 = -t7949 * t8252 + t7961 * t8264;
t7856 = -t7948 * t8251 + t7960 * t8263;
t7813 = -t8227 * t8566 + (t7959 * t8268 - t7971 * t8256) * t8303;
t7812 = -t8226 * t8568 + (t7958 * t8267 - t7970 * t8255) * t8303;
t7811 = -t8225 * t8570 + (t7957 * t8266 - t7969 * t8254) * t8303;
t7810 = -t8224 * t8572 + (t7956 * t8265 - t7968 * t8253) * t8303;
t7809 = -t8223 * t8574 + (t7955 * t8264 - t7967 * t8252) * t8303;
t7808 = -t8222 * t8576 + (t7954 * t8263 - t7966 * t8251) * t8303;
t7807 = t8387 * t8566 + (t7953 * t8268 + t7965 * t8256) * t8303;
t7806 = t8388 * t8568 + (t7952 * t8267 + t7964 * t8255) * t8303;
t7805 = t8389 * t8570 + (t7951 * t8266 + t7963 * t8254) * t8303;
t7804 = t8390 * t8572 + (t7950 * t8265 + t7962 * t8253) * t8303;
t7803 = t8391 * t8574 + (t7949 * t8264 + t7961 * t8252) * t8303;
t7802 = t8392 * t8576 + (t7948 * t8263 + t7960 * t8251) * t8303;
t7783 = (t7915 * t8301 - t8086 * t8615) * t8268 - t8256 * (t7915 * t8297 + t8086 * t8614);
t7782 = (t7914 * t8301 - t8085 * t8618) * t8267 - t8255 * (t7914 * t8297 + t8085 * t8617);
t7781 = (t7913 * t8301 - t8084 * t8621) * t8266 - t8254 * (t7913 * t8297 + t8084 * t8620);
t7780 = (t7912 * t8301 - t8083 * t8624) * t8265 - t8253 * (t7912 * t8297 + t8083 * t8623);
t7779 = (t7911 * t8301 - t8082 * t8627) * t8264 - t8252 * (t7911 * t8297 + t8082 * t8626);
t7778 = (t7910 * t8301 - t8081 * t8630) * t8263 - t8251 * (t7910 * t8297 + t8081 * t8629);
t7765 = t8300 * (-t7946 * t8651 + (-t8145 * t8255 + t8157 * t8267) * t8085) + (t7946 * t8279 - t8273 * t8357) * t8506 + (-t8407 * t8643 + t8036 * t8356 + (-t8288 * t8407 - t8292 * t8347) * t8332) * t8505;
t7764 = t8300 * (-t7945 * t8653 + (-t8143 * t8254 + t8155 * t8266) * t8084) + (t7945 * t8278 - t8272 * t8359) * t8506 + (-t8409 * t8644 + t8035 * t8358 + (-t8288 * t8409 - t8292 * t8348) * t8331) * t8505;
t7763 = t8300 * (-t7944 * t8655 + (-t8141 * t8253 + t8153 * t8265) * t8083) + (t7944 * t8277 - t8271 * t8361) * t8506 + (-t8411 * t8645 + t8034 * t8360 + (-t8288 * t8411 - t8292 * t8349) * t8330) * t8505;
t7762 = t8300 * (-t7943 * t8657 + (-t8139 * t8252 + t8151 * t8264) * t8082) + (t7943 * t8276 - t8270 * t8363) * t8506 + (-t8413 * t8646 + t8033 * t8362 + (-t8288 * t8413 - t8292 * t8350) * t8329) * t8505;
t7761 = t8300 * (-t7942 * t8659 + (-t8137 * t8251 + t8149 * t8263) * t8081) + (t7942 * t8275 - t8269 * t8365) * t8506 + (-t8415 * t8647 + t8032 * t8364 + (-t8288 * t8415 - t8292 * t8351) * t8328) * t8505;
t7760 = t8300 * (-t7947 * t8649 + (-t8147 * t8256 + t8159 * t8268) * t8086) + (t7947 * t8280 - t8274 * t8355) * t8506 + (-t8405 * t8642 + t8037 * t8354 + (-t8288 * t8405 - t8292 * t8346) * t8333) * t8505;
t7759 = -t8300 * (t8735 * t8651 - (t8144 * t8255 + t8156 * t8267) * t8085) + (-t8261 * t8357 + t8279 * t8735) * t8506 + (t8408 * t8643 + t8030 * t8356 + (t8288 * t8408 - t8289 * t8347) * t8332) * t8505;
t7758 = -t8300 * (t8734 * t8653 - (t8142 * t8254 + t8154 * t8266) * t8084) + (-t8260 * t8359 + t8278 * t8734) * t8506 + (t8410 * t8644 + t8029 * t8358 + (t8288 * t8410 - t8289 * t8348) * t8331) * t8505;
t7757 = -t8300 * (t8733 * t8655 - (t8140 * t8253 + t8152 * t8265) * t8083) + (-t8259 * t8361 + t8277 * t8733) * t8506 + (t8412 * t8645 + t8028 * t8360 + (t8288 * t8412 - t8289 * t8349) * t8330) * t8505;
t7756 = -t8300 * (t8732 * t8657 - (t8138 * t8252 + t8150 * t8264) * t8082) + (-t8258 * t8363 + t8276 * t8732) * t8506 + (t8414 * t8646 + t8027 * t8362 + (t8288 * t8414 - t8289 * t8350) * t8329) * t8505;
t7755 = -t8300 * (t8731 * t8659 - (t8136 * t8251 + t8148 * t8263) * t8081) + (-t8257 * t8365 + t8275 * t8731) * t8506 + (t8416 * t8647 + t8026 * t8364 + (t8288 * t8416 - t8289 * t8351) * t8328) * t8505;
t7754 = -t8300 * (t8730 * t8649 - (t8146 * t8256 + t8158 * t8268) * t8086) + (-t8262 * t8355 + t8280 * t8730) * t8506 + (t8406 * t8642 + t8031 * t8354 + (t8288 * t8406 - t8289 * t8346) * t8333) * t8505;
t7717 = ((-t7879 * t8301 + t7903 * t8297) * t8268 + (t7879 * t8297 + t7903 * t8301) * t8256) * t8298 - t7783 * t8504;
t7716 = ((-t7878 * t8301 + t7902 * t8297) * t8267 + (t7878 * t8297 + t7902 * t8301) * t8255) * t8298 - t7782 * t8504;
t7715 = ((-t7877 * t8301 + t7901 * t8297) * t8266 + (t7877 * t8297 + t7901 * t8301) * t8254) * t8298 - t7781 * t8504;
t7714 = ((-t7876 * t8301 + t7900 * t8297) * t8265 + (t7876 * t8297 + t7900 * t8301) * t8253) * t8298 - t7780 * t8504;
t7713 = ((-t7875 * t8301 + t7899 * t8297) * t8264 + (t7875 * t8297 + t7899 * t8301) * t8252) * t8298 - t7779 * t8504;
t7712 = ((-t7874 * t8301 + t7898 * t8297) * t8263 + (t7874 * t8297 + t7898 * t8301) * t8251) * t8298 - t7778 * t8504;
t7711 = ((t7873 * t8301 - t7897 * t8297) * t8268 - (t7873 * t8297 + t7897 * t8301) * t8256) * t8298 - t8768 * t8504;
t7710 = ((t7872 * t8301 - t7896 * t8297) * t8267 - (t7872 * t8297 + t7896 * t8301) * t8255) * t8298 - t8769 * t8504;
t7709 = ((t7871 * t8301 - t7895 * t8297) * t8266 - (t7871 * t8297 + t7895 * t8301) * t8254) * t8298 - t8770 * t8504;
t7708 = ((t7870 * t8301 - t7894 * t8297) * t8265 - (t7870 * t8297 + t7894 * t8301) * t8253) * t8298 - t8771 * t8504;
t7707 = ((t7869 * t8301 - t7893 * t8297) * t8264 - (t7869 * t8297 + t7893 * t8301) * t8252) * t8298 - t8772 * t8504;
t7706 = ((t7868 * t8301 - t7892 * t8297) * t8263 - (t7868 * t8297 + t7892 * t8301) * t8251) * t8298 - t8773 * t8504;
t7681 = (((t8202 * t8737 - t8660 * t8716) * t8268 + (-t8203 * t8737 - t8666 * t8716) * t8256) * t8274 + t8262 * ((-t8202 * t8716 - t8660 * t8737) * t8268 - (-t8203 * t8716 + t8666 * t8737) * t8256)) * t8298 + t8717 * t8504;
t7680 = (((t8202 * t8738 - t8661 * t8715) * t8267 + (-t8203 * t8738 - t8667 * t8715) * t8255) * t8273 + t8261 * ((-t8202 * t8715 - t8661 * t8738) * t8267 - (-t8203 * t8715 + t8667 * t8738) * t8255)) * t8298 + t8718 * t8504;
t7679 = (((t8202 * t8739 - t8662 * t8714) * t8266 + (-t8203 * t8739 - t8668 * t8714) * t8254) * t8272 + t8260 * ((-t8202 * t8714 - t8662 * t8739) * t8266 - (-t8203 * t8714 + t8668 * t8739) * t8254)) * t8298 + t8719 * t8504;
t7678 = (((-t7976 * t8663 + t8202 * t8740) * t8265 + (-t7976 * t8669 - t8203 * t8740) * t8253) * t8271 + t8259 * ((-t7976 * t8202 - t8663 * t8740) * t8265 - (-t7976 * t8203 + t8669 * t8740) * t8253)) * t8298 + t8720 * t8504;
t7677 = (((-t7975 * t8664 + t8202 * t8741) * t8264 + (-t7975 * t8670 - t8203 * t8741) * t8252) * t8270 + t8258 * ((-t7975 * t8202 - t8664 * t8741) * t8264 - (-t7975 * t8203 + t8670 * t8741) * t8252)) * t8298 + t8721 * t8504;
t7676 = (((-t7974 * t8665 + t8202 * t8742) * t8263 + (-t7974 * t8671 - t8203 * t8742) * t8251) * t8269 + t8257 * ((-t7974 * t8202 - t8665 * t8742) * t8263 - (-t7974 * t8203 + t8671 * t8742) * t8251)) * t8298 + t8722 * t8504;
t7675 = ((-t7807 * t8289 - t7813 * t8292) * t8274 + t8262 * (t7807 * t8292 - t7813 * t8289)) * t8296 - t8300 * ((-t7861 * t8289 + t7867 * t8292) * t8274 + (t7861 * t8292 + t7867 * t8289) * t8262);
t7674 = ((-t7806 * t8289 - t7812 * t8292) * t8273 + t8261 * (t7806 * t8292 - t7812 * t8289)) * t8296 - t8300 * ((-t7860 * t8289 + t7866 * t8292) * t8273 + (t7860 * t8292 + t7866 * t8289) * t8261);
t7673 = ((-t7805 * t8289 - t7811 * t8292) * t8272 + t8260 * (t7805 * t8292 - t7811 * t8289)) * t8296 - t8300 * ((-t7859 * t8289 + t7865 * t8292) * t8272 + (t7859 * t8292 + t7865 * t8289) * t8260);
t7672 = ((-t7804 * t8289 - t7810 * t8292) * t8271 + t8259 * (t7804 * t8292 - t7810 * t8289)) * t8296 - t8300 * ((-t7858 * t8289 + t7864 * t8292) * t8271 + (t7858 * t8292 + t7864 * t8289) * t8259);
t7671 = ((-t7803 * t8289 - t7809 * t8292) * t8270 + t8258 * (t7803 * t8292 - t7809 * t8289)) * t8296 - t8300 * ((-t7857 * t8289 + t7863 * t8292) * t8270 + (t7857 * t8292 + t7863 * t8289) * t8258);
t7670 = ((-t7802 * t8289 - t7808 * t8292) * t8269 + t8257 * (t7802 * t8292 - t7808 * t8289)) * t8296 - t8300 * ((-t7856 * t8289 + t7862 * t8292) * t8269 + (t7856 * t8292 + t7862 * t8289) * t8257);
t7651 = t8303 * t7657;
t7650 = t8303 * t7656;
t7649 = t8303 * t7655;
t7648 = t8303 * t7654;
t7647 = t8303 * t7653;
t7646 = t8303 * t7652;
t7645 = t7651 + t8448;
t7644 = t7650 + t8449;
t7643 = t7649 + t8450;
t7642 = t7648 + t8451;
t7641 = t7647 + t8452;
t7640 = t7646 + t8453;
t7639 = t8303 * t8448 + t7657;
t7638 = t8303 * t8449 + t7656;
t7637 = t8303 * t8450 + t7655;
t7636 = t8303 * t8451 + t7654;
t7635 = t8303 * t8452 + t7653;
t7634 = t8303 * t8453 + t7652;
t7633 = t7651 + t8435;
t7632 = t7650 + t8436;
t7631 = t7649 + t8437;
t7630 = t7648 + t8438;
t7629 = t7647 + t8439;
t7628 = t7646 + t8440;
t7627 = -t7669 * t8454 + t8303 * t8435 + t7657;
t7626 = -t7668 * t8454 + t8303 * t8436 + t7656;
t7625 = -t7667 * t8454 + t8303 * t8437 + t7655;
t7624 = -t7666 * t8454 + t8303 * t8438 + t7654;
t7623 = -t7665 * t8454 + t8303 * t8439 + t7653;
t7622 = -t7664 * t8454 + t8303 * t8440 + t7652;
t7621 = t7645 * t8302 - t7657 * t8454 + t7669;
t7620 = t7644 * t8302 - t7656 * t8454 + t7668;
t7619 = t7643 * t8302 - t7655 * t8454 + t7667;
t7618 = t7642 * t8302 - t7654 * t8454 + t7666;
t7617 = t7641 * t8302 - t7653 * t8454 + t7665;
t7616 = t7640 * t8302 - t7652 * t8454 + t7664;
t1 = [(t8386 - t8686) * MDP(10) + (-t8160 * t8638 - t8441 + t8492) * MDP(11) + (t7916 * t8288 + t8024) * MDP(12) + ((MDP(10) * t7929 + MDP(12) * t8673) * t8290 + (MDP(10) * t8676 - t7930 * MDP(11) + (t8068 + t8675) * MDP(12)) * t8287) * t8291 + ((-t7616 * t8659 - t7617 * t8657 - t7618 * t8655 - t7619 * t8653 - t7620 * t8651 - t7621 * t8649) * t8712 + ((t7652 * t7923 + t7653 * t7924 + t7654 * t7925 + t7655 * t7926 + t7656 * t7927 + t7657 * t7928) * MDP(1) + (t7923 * t7634 + t7924 * t7635 + t7925 * t7636 + t7926 * t7637 + t7927 * t7638 + t7928 * t7639) * MDP(2) + (t7923 * t7622 + t7924 * t7623 + t7925 * t7624 + t7926 * t7625 + t7927 * t7626 + t7928 * t7627) * MDP(3) + ((t7640 * t8704 + t7641 * t8703 + t7642 * t8702 + t7643 * t8701 + t7644 * t8700 + t7645 * t8699) * MDP(2) + (t7628 * t8704 + t7629 * t8703 + t7630 * t8702 + t7631 * t8701 + t7632 * t8700 + t7633 * t8699) * MDP(3)) * t8294) * t8295) * t8293; (t7929 * t8133 + t8070 - t8490) * MDP(10) + (t7930 * t8132 - t7931) * MDP(11) + (-t8373 + t8495) * MDP(12) + (-MDP(11) * t8489 + ((t8067 - t8673) * MDP(10) + (-t8068 + t8675) * MDP(11) - t7916 * MDP(12)) * t8289) * t8291 + ((-t7616 * t8371 - t7617 * t8370 - t7618 * t8369 - t7619 * t8368 - t7620 * t8367 - t7621 * t8366) * t8712 + ((t7652 * t7845 + t7653 * t7847 + t7654 * t7849 + t7655 * t7851 + t7656 * t7853 + t7657 * t7855) * MDP(1) + (t7634 * t7845 + t7635 * t7847 + t7636 * t7849 + t7637 * t7851 + t7638 * t7853 + t7639 * t7855) * MDP(2) + (t7622 * t7845 + t7623 * t7847 + t7624 * t7849 + t7625 * t7851 + t7626 * t7853 + t7627 * t7855) * MDP(3) + ((t7640 * t7796 + t7641 * t7797 + t7642 * t7798 + t7643 * t7799 + t7644 * t7800 + t7645 * t7801) * MDP(2) + (t7628 * t7796 + t7629 * t7797 + t7630 * t7798 + t7631 * t7799 + t7632 * t7800 + t7633 * t7801) * MDP(3)) * t8294) * t8295) * t8293; (t7929 * t8135 + t8353 + t8491) * MDP(10) + (t7930 * t8134 + t8493 - t8736) * MDP(11) + (t7916 * t8531 + t8372 + t8494) * MDP(12) + ((t7616 * t8428 + t7617 * t8427 + t7618 * t8426 + t7619 * t8425 + t7620 * t8424 + t7621 * t8423) * t8712 + ((t7652 * t7844 + t7653 * t7846 + t7654 * t7848 + t7655 * t7850 + t7656 * t7852 + t7657 * t7854) * MDP(1) + (t7634 * t7844 + t7635 * t7846 + t7636 * t7848 + t7637 * t7850 + t7638 * t7852 + t7639 * t7854) * MDP(2) + (t7622 * t7844 + t7623 * t7846 + t7624 * t7848 + t7625 * t7850 + t7626 * t7852 + t7627 * t7854) * MDP(3) + ((t7640 * t7790 + t7641 * t7791 + t7642 * t7792 + t7643 * t7793 + t7644 * t7794 + t7645 * t7795) * MDP(2) + (t7628 * t7790 + t7629 * t7791 + t7630 * t7792 + t7631 * t7793 + t7632 * t7794 + t7633 * t7795) * MDP(3)) * t8294) * t8295) * t8293; (t7933 * t8288 + t8024) * MDP(5) + (t8441 + t8492) * MDP(6) + (t8386 + t8686) * MDP(8) + t8288 * t8743 + (t8288 * MDP(9) * t8501 + (MDP(4) * t8068 + MDP(8) * t8044) * t8290 + (-MDP(5) * t8068 - MDP(6) * t7986 - MDP(7) * t8067 - MDP(8) * t8676) * t8287 + (-MDP(4) * t8672 + (t8160 * t8287 - t8162 * t8290) * MDP(5) + MDP(7) * t8674 + (t8672 - t8674) * MDP(9)) * t8228) * t8291 + ((-t7616 * t8722 - t7617 * t8721 - t7618 * t8720 - t7619 * t8719 - t7620 * t8718 - t7621 * t8717) * t8712 + ((t7652 * t7670 + t7653 * t7671 + t7654 * t7672 + t7655 * t7673 + t7656 * t7674 + t7657 * t7675) * MDP(1) + (t7634 * t7670 + t7635 * t7671 + t7636 * t7672 + t7637 * t7673 + t7638 * t7674 + t7639 * t7675) * MDP(2) + (t7622 * t7670 + t7623 * t7671 + t7624 * t7672 + t7625 * t7673 + t7626 * t7674 + t7627 * t7675) * MDP(3) + ((t7640 * t7676 + t7641 * t7677 + t7642 * t7678 + t7643 * t7679 + t7644 * t7680 + t7645 * t7681) * MDP(2) + (t7628 * t7676 + t7629 * t7677 + t7630 * t7678 + t7631 * t7679 + t7632 * t7680 + t7633 * t7681) * MDP(3)) * t8294) * t8295) * t8293; (t8068 * t8133 + t8132 * t8673) * MDP(4) + (t8373 + t8495) * MDP(5) + (t7986 * t8132 - t7931) * MDP(6) + (t8067 * t8132 + t8133 * t8675) * MDP(7) + (t8044 * t8133 + t8070 + t8490) * MDP(8) + (-t8289 * t8487 + (-t8132 * t8162 - t8133 * t8160) * t8228) * MDP(9) + (MDP(6) * t8489 + (-t7933 * MDP(5) - t8068 * MDP(6) + (-t8067 - t8673) * MDP(8) - t8743) * t8289) * t8291 + ((t7778 * t7616 + t7779 * t7617 + t7780 * t7618 + t7781 * t7619 + t7782 * t7620 + t7783 * t7621) * t8712 + ((t7652 * t7761 + t7653 * t7762 + t7654 * t7763 + t7655 * t7764 + t7656 * t7765 + t7657 * t7760) * MDP(1) + (t7634 * t7761 + t7635 * t7762 + t7636 * t7763 + t7637 * t7764 + t7638 * t7765 + t7639 * t7760) * MDP(2) + (t7622 * t7761 + t7623 * t7762 + t7624 * t7763 + t7625 * t7764 + t7626 * t7765 + t7627 * t7760) * MDP(3) + ((t7640 * t7712 + t7641 * t7713 + t7642 * t7714 + t7643 * t7715 + t7644 * t7716 + t7645 * t7717) * MDP(2) + (t7628 * t7712 + t7629 * t7713 + t7630 * t7714 + t7631 * t7715 + t7632 * t7716 + t7633 * t7717) * MDP(3)) * t8294) * t8295) * t8293; (t8068 * t8135 + (t8134 * t8228 + t8160 * t8531) * t8162) * MDP(4) + (t7933 * t8531 - t8372 + t8494) * MDP(5) + (t7986 * t8134 + t8493 + t8736) * MDP(6) + (t8067 * t8134 + (t8135 * t8228 - t8488) * t8160) * MDP(7) + (t8044 * t8135 - t8353 + t8491) * MDP(8) + (t8292 * t8487 + (-t8134 * t8162 - t8135 * t8160) * t8228) * MDP(9) + ((t7616 * t8773 + t8772 * t7617 + t8771 * t7618 + t8770 * t7619 + t8769 * t7620 + t8768 * t7621) * t8712 + ((t7652 * t7755 + t7653 * t7756 + t7654 * t7757 + t7655 * t7758 + t7656 * t7759 + t7657 * t7754) * MDP(1) + (t7634 * t7755 + t7635 * t7756 + t7636 * t7757 + t7637 * t7758 + t7638 * t7759 + t7639 * t7754) * MDP(2) + (t7622 * t7755 + t7623 * t7756 + t7624 * t7757 + t7625 * t7758 + t7626 * t7759 + t7627 * t7754) * MDP(3) + ((t7640 * t7706 + t7641 * t7707 + t7642 * t7708 + t7643 * t7709 + t7644 * t7710 + t7645 * t7711) * MDP(2) + (t7628 * t7706 + t7629 * t7707 + t7630 * t7708 + t7631 * t7709 + t7632 * t7710 + t7633 * t7711) * MDP(3)) * t8294) * t8295) * t8293;];
taucX  = t1;
