% Calculate minimal parameter regressor of inverse dynamics forces for
% P6PPPRRR1V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d4,theta1,theta2,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [13x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PPPRRR1V2A0_convert_par2_MPV_fixb.m

% Output:
% tauX [6x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 19:43
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P6PPPRRR1V2A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(13,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [13 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_mdp: MDP has to be [13x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 19:36:49
% EndTime: 2019-05-16 19:38:22
% DurationCPUTime: 98.99s
% Computational Cost: add. (145782->1494), mult. (317034->2578), div. (4500->3), fcn. (296538->50), ass. (0->821)
t5606 = xP(5);
t5562 = sin(t5606);
t5608 = koppelP(6,3);
t5565 = cos(t5606);
t5605 = xP(6);
t5561 = sin(t5605);
t5564 = cos(t5605);
t5614 = koppelP(6,2);
t5620 = koppelP(6,1);
t6032 = -t5561 * t5614 + t5620 * t5564;
t5952 = t5565 * t6032;
t5299 = t5562 * t5608 + t5952;
t5578 = legFrame(6,3);
t5524 = sin(t5578);
t5536 = cos(t5578);
t5571 = sin(pkin(8));
t5575 = cos(pkin(8));
t5584 = legFrame(6,1);
t5542 = cos(t5584);
t5911 = t5542 * t5575;
t5912 = t5542 * t5571;
t5590 = legFrame(6,2);
t5555 = cos(t5590);
t5530 = sin(t5584);
t5549 = sin(t5590);
t5937 = t5530 * t5549;
t5607 = xP(4);
t5566 = cos(t5607);
t5814 = t5566 * t5620;
t5820 = t5566 * t5614;
t5563 = sin(t5607);
t5840 = t5563 * t5620;
t5846 = t5563 * t5614;
t5247 = (t5562 * t5840 + t5820) * t5564 + t5561 * (-t5562 * t5846 + t5814);
t5827 = t5565 * t5608;
t6038 = t5563 * t5827 - t5247;
t6064 = t5299 * t5937 + t5555 * t6038;
t6076 = t5536 * (t5299 * t5912 + t5575 * t6064) + t5524 * (t5299 * t5911 - t5571 * t6064);
t5609 = koppelP(5,3);
t5615 = koppelP(5,2);
t5621 = koppelP(5,1);
t6033 = -t5561 * t5615 + t5621 * t5564;
t5951 = t5565 * t6033;
t5300 = t5562 * t5609 + t5951;
t5579 = legFrame(5,3);
t5525 = sin(t5579);
t5537 = cos(t5579);
t5585 = legFrame(5,1);
t5543 = cos(t5585);
t5908 = t5543 * t5575;
t5909 = t5543 * t5571;
t5591 = legFrame(5,2);
t5556 = cos(t5591);
t5531 = sin(t5585);
t5550 = sin(t5591);
t5933 = t5531 * t5550;
t5813 = t5566 * t5621;
t5819 = t5566 * t5615;
t5839 = t5563 * t5621;
t5845 = t5563 * t5615;
t5248 = (t5562 * t5839 + t5819) * t5564 + t5561 * (-t5562 * t5845 + t5813);
t5826 = t5565 * t5609;
t6039 = t5563 * t5826 - t5248;
t6063 = t5300 * t5933 + t5556 * t6039;
t6075 = t5537 * (t5300 * t5909 + t5575 * t6063) + t5525 * (t5300 * t5908 - t5571 * t6063);
t5610 = koppelP(4,3);
t5616 = koppelP(4,2);
t5622 = koppelP(4,1);
t6034 = -t5561 * t5616 + t5622 * t5564;
t5950 = t5565 * t6034;
t5301 = t5562 * t5610 + t5950;
t5580 = legFrame(4,3);
t5526 = sin(t5580);
t5538 = cos(t5580);
t5586 = legFrame(4,1);
t5544 = cos(t5586);
t5905 = t5544 * t5575;
t5906 = t5544 * t5571;
t5592 = legFrame(4,2);
t5557 = cos(t5592);
t5532 = sin(t5586);
t5551 = sin(t5592);
t5929 = t5532 * t5551;
t5812 = t5566 * t5622;
t5818 = t5566 * t5616;
t5838 = t5563 * t5622;
t5844 = t5563 * t5616;
t5249 = (t5562 * t5838 + t5818) * t5564 + t5561 * (-t5562 * t5844 + t5812);
t5825 = t5565 * t5610;
t6040 = t5563 * t5825 - t5249;
t6062 = t5301 * t5929 + t5557 * t6040;
t6074 = t5538 * (t5301 * t5906 + t5575 * t6062) + t5526 * (t5301 * t5905 - t5571 * t6062);
t5611 = koppelP(3,3);
t5617 = koppelP(3,2);
t5623 = koppelP(3,1);
t6035 = -t5561 * t5617 + t5623 * t5564;
t5949 = t5565 * t6035;
t5302 = t5562 * t5611 + t5949;
t5581 = legFrame(3,3);
t5527 = sin(t5581);
t5539 = cos(t5581);
t5587 = legFrame(3,1);
t5545 = cos(t5587);
t5902 = t5545 * t5575;
t5903 = t5545 * t5571;
t5593 = legFrame(3,2);
t5558 = cos(t5593);
t5533 = sin(t5587);
t5552 = sin(t5593);
t5925 = t5533 * t5552;
t5811 = t5566 * t5623;
t5817 = t5566 * t5617;
t5837 = t5563 * t5623;
t5843 = t5563 * t5617;
t5250 = (t5562 * t5837 + t5817) * t5564 + t5561 * (-t5562 * t5843 + t5811);
t5824 = t5565 * t5611;
t6041 = t5563 * t5824 - t5250;
t6061 = t5302 * t5925 + t5558 * t6041;
t6073 = t5539 * (t5302 * t5903 + t5575 * t6061) + t5527 * (t5302 * t5902 - t5571 * t6061);
t5612 = koppelP(2,3);
t5618 = koppelP(2,2);
t5624 = koppelP(2,1);
t6036 = -t5561 * t5618 + t5624 * t5564;
t5948 = t5565 * t6036;
t5303 = t5562 * t5612 + t5948;
t5582 = legFrame(2,3);
t5528 = sin(t5582);
t5540 = cos(t5582);
t5588 = legFrame(2,1);
t5546 = cos(t5588);
t5899 = t5546 * t5575;
t5900 = t5546 * t5571;
t5594 = legFrame(2,2);
t5559 = cos(t5594);
t5534 = sin(t5588);
t5553 = sin(t5594);
t5921 = t5534 * t5553;
t5810 = t5566 * t5624;
t5816 = t5566 * t5618;
t5836 = t5563 * t5624;
t5842 = t5563 * t5618;
t5251 = (t5562 * t5836 + t5816) * t5564 + t5561 * (-t5562 * t5842 + t5810);
t5823 = t5565 * t5612;
t6042 = t5563 * t5823 - t5251;
t6060 = t5303 * t5921 + t5559 * t6042;
t6072 = t5540 * (t5303 * t5900 + t5575 * t6060) + t5528 * (t5303 * t5899 - t5571 * t6060);
t5613 = koppelP(1,3);
t5619 = koppelP(1,2);
t5625 = koppelP(1,1);
t6031 = -t5561 * t5619 + t5564 * t5625;
t5947 = t5565 * t6031;
t5304 = t5562 * t5613 + t5947;
t5583 = legFrame(1,3);
t5529 = sin(t5583);
t5541 = cos(t5583);
t5589 = legFrame(1,1);
t5547 = cos(t5589);
t5896 = t5547 * t5575;
t5897 = t5547 * t5571;
t5595 = legFrame(1,2);
t5560 = cos(t5595);
t5535 = sin(t5589);
t5554 = sin(t5595);
t5917 = t5535 * t5554;
t5809 = t5566 * t5625;
t5815 = t5566 * t5619;
t5835 = t5563 * t5625;
t5841 = t5563 * t5619;
t5252 = (t5562 * t5835 + t5815) * t5564 + t5561 * (-t5562 * t5841 + t5809);
t5822 = t5565 * t5613;
t6037 = t5563 * t5822 - t5252;
t6059 = t5304 * t5917 + t5560 * t6037;
t6071 = t5541 * (t5304 * t5897 + t5575 * t6059) + t5529 * (t5304 * t5896 - t5571 * t6059);
t5474 = t5561 * t5620 + t5564 * t5614;
t5391 = t5563 * t5474;
t5693 = -t5562 * t6032 + t5827;
t6058 = t5693 * t5566 + t5391;
t5475 = t5561 * t5621 + t5564 * t5615;
t5392 = t5563 * t5475;
t5692 = -t5562 * t6033 + t5826;
t6057 = t5692 * t5566 + t5392;
t5476 = t5561 * t5622 + t5564 * t5616;
t5393 = t5563 * t5476;
t5691 = -t5562 * t6034 + t5825;
t6056 = t5691 * t5566 + t5393;
t5397 = t5566 * t5474;
t5186 = -t5693 * t5563 + t5397;
t5398 = t5566 * t5475;
t5187 = -t5692 * t5563 + t5398;
t5399 = t5566 * t5476;
t5188 = -t5691 * t5563 + t5399;
t5479 = t5561 * t5625 + t5564 * t5619;
t5396 = t5563 * t5479;
t5688 = -t5562 * t6031 + t5822;
t6055 = t5688 * t5566 + t5396;
t5478 = t5561 * t5624 + t5564 * t5618;
t5395 = t5563 * t5478;
t5689 = -t5562 * t6036 + t5823;
t6054 = t5689 * t5566 + t5395;
t5477 = t5561 * t5623 + t5564 * t5617;
t5394 = t5563 * t5477;
t5690 = -t5562 * t6035 + t5824;
t6053 = t5690 * t5566 + t5394;
t5602 = xDP(6);
t5603 = xDP(5);
t5847 = t5563 * t5603;
t5604 = xDP(4);
t5979 = t6055 * t5604;
t5035 = -(t5396 * t5562 - t5566 * t6031) * t5602 + t5304 * t5847 - t5979;
t5980 = t6054 * t5604;
t5033 = -(t5395 * t5562 - t5566 * t6036) * t5602 + t5303 * t5847 - t5980;
t5981 = t6053 * t5604;
t5031 = -(t5394 * t5562 - t5566 * t6035) * t5602 + t5302 * t5847 - t5981;
t5821 = t5566 * t5603;
t5985 = t5188 * t5604;
t5030 = -(t5399 * t5562 + t5563 * t6034) * t5602 + t5301 * t5821 - t5985;
t5988 = t6056 * t5604;
t5029 = -(t5393 * t5562 - t5566 * t6034) * t5602 + t5301 * t5847 - t5988;
t5986 = t5187 * t5604;
t5028 = -(t5398 * t5562 + t5563 * t6033) * t5602 + t5300 * t5821 - t5986;
t5989 = t6057 * t5604;
t5027 = -(t5392 * t5562 - t5566 * t6033) * t5602 + t5300 * t5847 - t5989;
t5987 = t5186 * t5604;
t5026 = -(t5397 * t5562 + t5563 * t6032) * t5602 + t5299 * t5821 - t5987;
t5990 = t6058 * t5604;
t5025 = -(t5391 * t5562 - t5566 * t6032) * t5602 + t5299 * t5847 - t5990;
t5856 = t5562 * t5566;
t6024 = t5479 * t5566 - t5688 * t5563;
t5982 = t6024 * t5604;
t5036 = -(t5479 * t5856 + t5563 * t6031) * t5602 + t5304 * t5821 - t5982;
t5828 = t5565 * t5604;
t5338 = -t5562 * t5821 - t5563 * t5828;
t5339 = t5562 * t5847 - t5566 * t5828;
t5596 = xDDP(6);
t5597 = xDDP(5);
t5601 = xDDP(1);
t4901 = t5601 + (-t5563 * t6024 + t5566 * t6055) * t5597 + (-t5338 * t6024 + t5339 * t6055) * t5602 + ((-t5036 - t5982) * t5566 + (-t5035 - t5979) * t5563) * t5603 + ((-t5563 * t6055 - t5566 * t6024) * t5596 + (-t5035 * t5566 + t5036 * t5563) * t5602) * t5565;
t5829 = t5565 * t5602;
t5210 = t5479 * t5829 - t5603 * t5688;
t5599 = xDDP(3);
t5800 = t5603 * t5604;
t5687 = t5565 * t5596 + t5800;
t5632 = -t5339 * t5602 + t5563 * t5687 - t5566 * t5597;
t5598 = xDDP(4);
t5801 = t5602 * t5603;
t5652 = t5562 * t5596 + t5565 * t5801 + t5598;
t5848 = t5563 * t5565;
t4955 = t5599 + t5035 * t5604 + t5210 * t5821 + (t5035 * t5562 - t5210 * t5848) * t5602 + t5652 * t6024 + t5632 * t5304;
t5600 = xDDP(2);
t5633 = t5338 * t5602 + t5563 * t5597 + t5566 * t5687;
t5831 = t5565 * t5566;
t4961 = t5600 + t5036 * t5604 - t5210 * t5847 + (t5036 * t5562 - t5210 * t5831) * t5602 - t5652 * t6055 + t5633 * t5304;
t5467 = t5529 * t5575 + t5541 * t5571;
t5577 = cos(pkin(4));
t5573 = sin(pkin(4));
t5865 = t5560 * t5573;
t5283 = t5467 * t5554 * t5577 + t5865;
t5461 = t5529 * t5571 - t5575 * t5541;
t5570 = sin(pkin(9));
t5574 = cos(pkin(9));
t5898 = t5547 * t5554;
t5724 = t5461 * t5898 + t5535 * t5467;
t5914 = t5535 * t5577;
t5050 = (t5283 * t5547 - t5461 * t5914) * t5570 + t5574 * t5724;
t5668 = t5461 * t5917 - t5467 * t5547;
t5051 = (-t5461 * t5547 * t5577 - t5283 * t5535) * t5570 - t5668 * t5574;
t5805 = t5570 * t5577;
t5806 = t5570 * t5573;
t5140 = (-t5461 * t5574 - t5467 * t5805) * t5560 + t5554 * t5806;
t5567 = 0.1e1 / t5570;
t5569 = 0.1e1 / t5573;
t5807 = t5567 * t5569;
t6052 = (t4901 * t5140 + t4955 * t5050 + t4961 * t5051) * t5807 - t5554 * g(1);
t6023 = t5478 * t5566 - t5689 * t5563;
t5983 = t6023 * t5604;
t5034 = -(t5478 * t5856 + t5563 * t6036) * t5602 + t5303 * t5821 - t5983;
t4900 = t5601 + (-t5563 * t6023 + t5566 * t6054) * t5597 + (-t5338 * t6023 + t5339 * t6054) * t5602 + ((-t5034 - t5983) * t5566 + (-t5033 - t5980) * t5563) * t5603 + ((-t5563 * t6054 - t5566 * t6023) * t5596 + (-t5033 * t5566 + t5034 * t5563) * t5602) * t5565;
t5209 = t5478 * t5829 - t5603 * t5689;
t4954 = t5599 + t5033 * t5604 + t5209 * t5821 + (t5033 * t5562 - t5209 * t5848) * t5602 + t5652 * t6023 + t5632 * t5303;
t4960 = t5600 + t5034 * t5604 - t5209 * t5847 + (t5034 * t5562 - t5209 * t5831) * t5602 - t5652 * t6054 + t5633 * t5303;
t5466 = t5528 * t5575 + t5540 * t5571;
t5867 = t5559 * t5573;
t5282 = t5466 * t5553 * t5577 + t5867;
t5460 = t5528 * t5571 - t5575 * t5540;
t5901 = t5546 * t5553;
t5725 = t5460 * t5901 + t5534 * t5466;
t5918 = t5534 * t5577;
t5048 = (t5282 * t5546 - t5460 * t5918) * t5570 + t5574 * t5725;
t5669 = t5460 * t5921 - t5466 * t5546;
t5049 = (-t5460 * t5546 * t5577 - t5282 * t5534) * t5570 - t5669 * t5574;
t5139 = (-t5460 * t5574 - t5466 * t5805) * t5559 + t5553 * t5806;
t6051 = (t4900 * t5139 + t4954 * t5048 + t4960 * t5049) * t5807 - t5553 * g(1);
t6022 = t5477 * t5566 - t5690 * t5563;
t5984 = t6022 * t5604;
t5032 = -(t5477 * t5856 + t5563 * t6035) * t5602 + t5302 * t5821 - t5984;
t4899 = t5601 + (-t5563 * t6022 + t5566 * t6053) * t5597 + (-t5338 * t6022 + t5339 * t6053) * t5602 + ((-t5032 - t5984) * t5566 + (-t5031 - t5981) * t5563) * t5603 + ((-t5563 * t6053 - t5566 * t6022) * t5596 + (-t5031 * t5566 + t5032 * t5563) * t5602) * t5565;
t5208 = t5477 * t5829 - t5603 * t5690;
t4953 = t5599 + t5031 * t5604 + t5208 * t5821 + (t5031 * t5562 - t5208 * t5848) * t5602 + t5652 * t6022 + t5632 * t5302;
t4959 = t5600 + t5032 * t5604 - t5208 * t5847 + (t5032 * t5562 - t5208 * t5831) * t5602 - t5652 * t6053 + t5633 * t5302;
t5465 = t5527 * t5575 + t5539 * t5571;
t5869 = t5558 * t5573;
t5281 = t5465 * t5552 * t5577 + t5869;
t5459 = t5527 * t5571 - t5575 * t5539;
t5904 = t5545 * t5552;
t5726 = t5459 * t5904 + t5533 * t5465;
t5922 = t5533 * t5577;
t5046 = (t5281 * t5545 - t5459 * t5922) * t5570 + t5574 * t5726;
t5670 = t5459 * t5925 - t5465 * t5545;
t5047 = (-t5459 * t5545 * t5577 - t5281 * t5533) * t5570 - t5670 * t5574;
t5138 = (-t5459 * t5574 - t5465 * t5805) * t5558 + t5552 * t5806;
t6050 = (t4899 * t5138 + t4953 * t5046 + t4959 * t5047) * t5807 - t5552 * g(1);
t4898 = t5601 + (-t5188 * t5563 + t5566 * t6056) * t5597 + (-t5188 * t5338 + t5339 * t6056) * t5602 + ((-t5030 - t5985) * t5566 + (-t5029 - t5988) * t5563) * t5603 + ((-t5188 * t5566 - t5563 * t6056) * t5596 + (-t5029 * t5566 + t5030 * t5563) * t5602) * t5565;
t5207 = t5476 * t5829 - t5603 * t5691;
t4952 = t5599 + t5029 * t5604 + t5207 * t5821 + (t5029 * t5562 - t5207 * t5848) * t5602 + t5652 * t5188 + t5632 * t5301;
t4958 = t5600 + t5030 * t5604 - t5207 * t5847 + (t5030 * t5562 - t5207 * t5831) * t5602 - t5652 * t6056 + t5633 * t5301;
t5464 = t5526 * t5575 + t5538 * t5571;
t5871 = t5557 * t5573;
t5280 = t5464 * t5551 * t5577 + t5871;
t5458 = t5526 * t5571 - t5575 * t5538;
t5907 = t5544 * t5551;
t5727 = t5458 * t5907 + t5532 * t5464;
t5926 = t5532 * t5577;
t5044 = (t5280 * t5544 - t5458 * t5926) * t5570 + t5574 * t5727;
t5671 = t5458 * t5929 - t5464 * t5544;
t5045 = (-t5458 * t5544 * t5577 - t5280 * t5532) * t5570 - t5671 * t5574;
t5137 = (-t5458 * t5574 - t5464 * t5805) * t5557 + t5551 * t5806;
t6049 = (t4898 * t5137 + t4952 * t5044 + t4958 * t5045) * t5807 - t5551 * g(1);
t4897 = t5601 + (-t5187 * t5563 + t5566 * t6057) * t5597 + (-t5187 * t5338 + t5339 * t6057) * t5602 + ((-t5028 - t5986) * t5566 + (-t5027 - t5989) * t5563) * t5603 + ((-t5187 * t5566 - t5563 * t6057) * t5596 + (-t5027 * t5566 + t5028 * t5563) * t5602) * t5565;
t5206 = t5475 * t5829 - t5603 * t5692;
t4951 = t5599 + t5027 * t5604 + t5206 * t5821 + (t5027 * t5562 - t5206 * t5848) * t5602 + t5652 * t5187 + t5632 * t5300;
t4957 = t5600 + t5028 * t5604 - t5206 * t5847 + (t5028 * t5562 - t5206 * t5831) * t5602 - t5652 * t6057 + t5633 * t5300;
t5463 = t5525 * t5575 + t5537 * t5571;
t5873 = t5556 * t5573;
t5279 = t5463 * t5550 * t5577 + t5873;
t5457 = t5525 * t5571 - t5575 * t5537;
t5910 = t5543 * t5550;
t5728 = t5457 * t5910 + t5531 * t5463;
t5930 = t5531 * t5577;
t5042 = (t5279 * t5543 - t5457 * t5930) * t5570 + t5574 * t5728;
t5672 = t5457 * t5933 - t5463 * t5543;
t5043 = (-t5457 * t5543 * t5577 - t5279 * t5531) * t5570 - t5672 * t5574;
t5136 = (-t5457 * t5574 - t5463 * t5805) * t5556 + t5550 * t5806;
t6048 = (t4897 * t5136 + t4951 * t5042 + t4957 * t5043) * t5807 - t5550 * g(1);
t4896 = t5601 + (-t5186 * t5563 + t5566 * t6058) * t5597 + (-t5186 * t5338 + t5339 * t6058) * t5602 + ((-t5026 - t5987) * t5566 + (-t5025 - t5990) * t5563) * t5603 + ((-t5186 * t5566 - t5563 * t6058) * t5596 + (-t5025 * t5566 + t5026 * t5563) * t5602) * t5565;
t5205 = t5474 * t5829 - t5603 * t5693;
t4950 = t5599 + t5025 * t5604 + t5205 * t5821 + (t5025 * t5562 - t5205 * t5848) * t5602 + t5652 * t5186 + t5632 * t5299;
t4956 = t5600 + t5026 * t5604 - t5205 * t5847 + (t5026 * t5562 - t5205 * t5831) * t5602 - t5652 * t6058 + t5633 * t5299;
t5462 = t5524 * t5575 + t5536 * t5571;
t5875 = t5555 * t5573;
t5278 = t5462 * t5549 * t5577 + t5875;
t5456 = t5524 * t5571 - t5575 * t5536;
t5913 = t5542 * t5549;
t5729 = t5456 * t5913 + t5530 * t5462;
t5934 = t5530 * t5577;
t5040 = (t5278 * t5542 - t5456 * t5934) * t5570 + t5574 * t5729;
t5673 = t5456 * t5937 - t5462 * t5542;
t5041 = (-t5456 * t5542 * t5577 - t5278 * t5530) * t5570 - t5673 * t5574;
t5135 = (-t5456 * t5574 - t5462 * t5805) * t5555 + t5549 * t5806;
t6047 = (t4896 * t5135 + t4950 * t5040 + t4956 * t5041) * t5807 - t5549 * g(1);
t6046 = t5565 * t5598 + t5801;
t5666 = t5555 * t5462;
t5664 = t5556 * t5463;
t5662 = t5557 * t5464;
t5660 = t5558 * t5465;
t5658 = t5559 * t5466;
t5656 = t5560 * t5467;
t5863 = t5561 * t5603;
t5148 = -t5561 * t6046 + (t5562 * t5863 - t5564 * t5829) * t5604 + t5564 * t5597;
t5390 = t5564 * t5828 + t5863;
t5494 = t5562 * t5604 + t5602;
t5288 = t5390 * t5494;
t5119 = t5148 - t5288;
t5833 = t5564 * t5603;
t5388 = t5561 * t5828 - t5833;
t5285 = t5388 * t5390;
t5387 = t5562 * t5598 + t5565 * t5800 + t5596;
t6045 = -t5285 + t5387;
t6044 = t5288 + t5148;
t5149 = (-t5561 * t5829 - t5562 * t5833) * t5604 + t5561 * t5597 + t6046 * t5564;
t5289 = t5388 * t5494;
t5125 = -t5289 - t5149;
t6043 = -t5289 + t5149;
t5145 = t5387 + t5285;
t5892 = t5549 * t5575;
t5893 = t5549 * t5571;
t6030 = t5542 * ((-t5186 * t5893 + t5575 * t6058) * t5524 + (t5186 * t5892 + t5571 * t6058) * t5536) + ((-t5186 * t5571 + t5892 * t6058) * t5536 - (t5186 * t5575 + t5893 * t6058) * t5524) * t5530;
t5889 = t5550 * t5575;
t5890 = t5550 * t5571;
t6029 = t5543 * ((-t5187 * t5890 + t5575 * t6057) * t5525 + (t5187 * t5889 + t5571 * t6057) * t5537) + ((-t5187 * t5571 + t5889 * t6057) * t5537 - t5525 * (t5187 * t5575 + t5890 * t6057)) * t5531;
t5886 = t5551 * t5575;
t5887 = t5551 * t5571;
t6028 = t5544 * ((-t5188 * t5887 + t5575 * t6056) * t5526 + (t5188 * t5886 + t5571 * t6056) * t5538) + ((-t5188 * t5571 + t5886 * t6056) * t5538 - t5526 * (t5188 * t5575 + t5887 * t6056)) * t5532;
t5883 = t5552 * t5575;
t5884 = t5552 * t5571;
t6027 = t5545 * ((t5575 * t6053 - t5884 * t6022) * t5527 + (t5571 * t6053 + t5883 * t6022) * t5539) + ((-t5571 * t6022 + t5883 * t6053) * t5539 - t5527 * (t5575 * t6022 + t5884 * t6053)) * t5533;
t5880 = t5553 * t5575;
t5881 = t5553 * t5571;
t6026 = t5546 * ((t5575 * t6054 - t5881 * t6023) * t5528 + (t5571 * t6054 + t5880 * t6023) * t5540) + ((-t5571 * t6023 + t5880 * t6054) * t5540 - t5528 * (t5575 * t6023 + t5881 * t6054)) * t5534;
t5877 = t5554 * t5575;
t5878 = t5554 * t5571;
t6025 = t5547 * ((t5575 * t6055 - t5878 * t6024) * t5529 + (t5571 * t6055 + t5877 * t6024) * t5541) + ((-t5571 * t6024 + t5877 * t6055) * t5541 - (t5575 * t6024 + t5878 * t6055) * t5529) * t5535;
t5284 = t5388 ^ 2;
t5286 = t5390 ^ 2;
t5358 = t5494 ^ 2;
t6021 = g(1) * t5571;
t6020 = g(1) * t5575;
t6019 = g(2) * t5571;
t6018 = g(3) * t5542;
t6017 = g(3) * t5543;
t6016 = g(3) * t5544;
t6015 = g(3) * t5545;
t6014 = g(3) * t5546;
t6013 = g(3) * t5547;
t6012 = g(3) * t5570;
t6005 = t5599 - g(3);
t6004 = t5600 - g(2);
t5572 = sin(pkin(5));
t5568 = 0.1e1 / t5572;
t6003 = MDP(3) * t5568;
t5802 = t5574 * t5577;
t5442 = t5570 * t5575 + t5571 * t5802;
t5443 = t5570 * t5571 - t5575 * t5802;
t5704 = t5442 * t5524 + t5443 * t5536;
t5576 = cos(pkin(5));
t5803 = t5573 * t5576;
t5127 = t5456 * t5803 + t5572 * t5704;
t5996 = t5127 * t5555;
t5702 = t5442 * t5525 + t5443 * t5537;
t5128 = t5457 * t5803 + t5572 * t5702;
t5995 = t5128 * t5556;
t5700 = t5442 * t5526 + t5443 * t5538;
t5129 = t5458 * t5803 + t5572 * t5700;
t5994 = t5129 * t5557;
t5698 = t5442 * t5527 + t5443 * t5539;
t5130 = t5459 * t5803 + t5572 * t5698;
t5993 = t5130 * t5558;
t5696 = t5442 * t5528 + t5443 * t5540;
t5131 = t5460 * t5803 + t5572 * t5696;
t5992 = t5131 * t5559;
t5694 = t5442 * t5529 + t5443 * t5541;
t5132 = t5461 * t5803 + t5572 * t5694;
t5991 = t5132 * t5560;
t5972 = t5388 * t5564;
t5971 = t5390 * t5561;
t5970 = t5442 * t5549;
t5969 = t5442 * t5550;
t5968 = t5442 * t5551;
t5967 = t5442 * t5552;
t5966 = t5442 * t5553;
t5965 = t5442 * t5554;
t5964 = t5443 * t5549;
t5963 = t5443 * t5550;
t5962 = t5443 * t5551;
t5961 = t5443 * t5552;
t5960 = t5443 * t5553;
t5959 = t5443 * t5554;
t5958 = t5456 * t5555;
t5957 = t5457 * t5556;
t5956 = t5458 * t5557;
t5955 = t5459 * t5558;
t5954 = t5460 * t5559;
t5953 = t5461 * t5560;
t5936 = t5530 * t5571;
t5935 = t5530 * t5575;
t5932 = t5531 * t5571;
t5931 = t5531 * t5575;
t5928 = t5532 * t5571;
t5927 = t5532 * t5575;
t5924 = t5533 * t5571;
t5923 = t5533 * t5575;
t5920 = t5534 * t5571;
t5919 = t5534 * t5575;
t5916 = t5535 * t5571;
t5915 = t5535 * t5575;
t5548 = t5601 - g(1);
t5895 = t5548 * t5565;
t5894 = t5549 * t5570;
t5891 = t5550 * t5570;
t5888 = t5551 * t5570;
t5885 = t5552 * t5570;
t5882 = t5553 * t5570;
t5879 = t5554 * t5570;
t5876 = t5555 * t5570;
t5874 = t5556 * t5570;
t5872 = t5557 * t5570;
t5870 = t5558 * t5570;
t5868 = t5559 * t5570;
t5866 = t5560 * t5570;
t5864 = t5561 * t5563;
t5849 = t5563 * t5564;
t5834 = t5564 * t5566;
t5808 = t5567 * t5568;
t5804 = t5573 * t5574;
t5793 = g(2) * t5802;
t5792 = g(3) * t5802;
t5790 = t5549 * t5802;
t5788 = t5550 * t5802;
t5786 = t5551 * t5802;
t5784 = t5552 * t5802;
t5782 = t5553 * t5802;
t5780 = t5554 * t5802;
t5779 = t5555 * t5802;
t5778 = t5556 * t5802;
t5777 = t5557 * t5802;
t5776 = t5558 * t5802;
t5775 = t5559 * t5802;
t5774 = t5560 * t5802;
t5767 = t5568 * t5807;
t5760 = t5572 * t5804;
t5705 = t5442 * t5536 - t5443 * t5524;
t4986 = (-t5530 * t5705 - t5704 * t5913) * t5572 - t5729 * t5803;
t4992 = (-t5542 * t5705 + t5704 * t5937) * t5572 + t5673 * t5803;
t5747 = t4896 * t5555 * t5808;
t5759 = t5127 * t5569 * t5747 + (t4950 * t4986 + t4956 * t4992) * t5767;
t5703 = t5442 * t5537 - t5443 * t5525;
t4987 = (-t5531 * t5703 - t5702 * t5910) * t5572 - t5728 * t5803;
t4993 = (-t5543 * t5703 + t5702 * t5933) * t5572 + t5672 * t5803;
t5746 = t4897 * t5556 * t5808;
t5758 = t5128 * t5569 * t5746 + (t4951 * t4987 + t4957 * t4993) * t5767;
t5701 = t5442 * t5538 - t5443 * t5526;
t4988 = (-t5532 * t5701 - t5700 * t5907) * t5572 - t5727 * t5803;
t4994 = (-t5544 * t5701 + t5700 * t5929) * t5572 + t5671 * t5803;
t5745 = t4898 * t5557 * t5808;
t5757 = t5129 * t5569 * t5745 + (t4952 * t4988 + t4958 * t4994) * t5767;
t5699 = t5442 * t5539 - t5443 * t5527;
t4989 = (-t5533 * t5699 - t5698 * t5904) * t5572 - t5726 * t5803;
t4995 = (-t5545 * t5699 + t5698 * t5925) * t5572 + t5670 * t5803;
t5744 = t4899 * t5558 * t5808;
t5756 = t5130 * t5569 * t5744 + (t4953 * t4989 + t4959 * t4995) * t5767;
t5697 = t5442 * t5540 - t5443 * t5528;
t4990 = (-t5534 * t5697 - t5696 * t5901) * t5572 - t5725 * t5803;
t4996 = (-t5546 * t5697 + t5696 * t5921) * t5572 + t5669 * t5803;
t5743 = t4900 * t5559 * t5808;
t5755 = t5131 * t5569 * t5743 + (t4954 * t4990 + t4960 * t4996) * t5767;
t5695 = t5442 * t5541 - t5443 * t5529;
t4991 = (-t5535 * t5695 - t5694 * t5898) * t5572 - t5724 * t5803;
t4997 = (-t5547 * t5695 + t5694 * t5917) * t5572 + t5668 * t5803;
t5742 = t4901 * t5560 * t5808;
t5754 = t5132 * t5569 * t5742 + (t4955 * t4991 + t4961 * t4997) * t5767;
t4860 = -t5456 * t5747 + (t4950 * t5729 - t4956 * t5673) * t5808;
t4861 = -t5457 * t5746 + (t4951 * t5728 - t4957 * t5672) * t5808;
t4862 = -t5458 * t5745 + (t4952 * t5727 - t4958 * t5671) * t5808;
t4863 = -t5459 * t5744 + (t4953 * t5726 - t4959 * t5670) * t5808;
t4864 = -t5460 * t5743 + (t4954 * t5725 - t4960 * t5669) * t5808;
t4865 = -t5461 * t5742 + (t4955 * t5724 - t4961 * t5668) * t5808;
t5741 = g(2) * t5530 - t6018;
t5740 = g(2) * t5531 - t6017;
t5739 = g(2) * t5532 - t6016;
t5738 = g(2) * t5533 - t6015;
t5737 = g(2) * t5534 - t6014;
t5736 = g(2) * t5535 - t6013;
t5253 = -(t5562 * t5820 + t5840) * t5561 + (t5562 * t5814 - t5846) * t5564;
t5156 = t5566 * t5827 - t5253;
t5254 = -(t5562 * t5819 + t5839) * t5561 + (t5562 * t5813 - t5845) * t5564;
t5157 = t5566 * t5826 - t5254;
t5255 = -(t5562 * t5818 + t5838) * t5561 + (t5562 * t5812 - t5844) * t5564;
t5158 = t5566 * t5825 - t5255;
t5256 = -(t5562 * t5817 + t5837) * t5561 + (t5562 * t5811 - t5843) * t5564;
t5159 = t5566 * t5824 - t5256;
t5257 = -(t5562 * t5816 + t5836) * t5561 + (t5562 * t5810 - t5842) * t5564;
t5160 = t5566 * t5823 - t5257;
t5258 = -(t5562 * t5815 + t5835) * t5561 + (t5562 * t5809 - t5841) * t5564;
t5161 = t5566 * t5822 - t5258;
t5363 = -t5530 * t5893 + t5911;
t5375 = t5530 * t5892 + t5912;
t5717 = t5363 * t5536 - t5375 * t5524;
t5364 = t5542 * t5893 + t5935;
t5376 = t5542 * t5892 - t5936;
t5716 = t5364 * t5536 + t5376 * t5524;
t5365 = -t5531 * t5890 + t5908;
t5377 = t5531 * t5889 + t5909;
t5715 = t5365 * t5537 - t5377 * t5525;
t5366 = t5543 * t5890 + t5931;
t5378 = t5543 * t5889 - t5932;
t5714 = t5366 * t5537 + t5378 * t5525;
t5367 = -t5532 * t5887 + t5905;
t5379 = t5532 * t5886 + t5906;
t5713 = t5367 * t5538 - t5379 * t5526;
t5368 = t5544 * t5887 + t5927;
t5380 = t5544 * t5886 - t5928;
t5712 = t5368 * t5538 + t5380 * t5526;
t5369 = -t5533 * t5884 + t5902;
t5381 = t5533 * t5883 + t5903;
t5711 = t5369 * t5539 - t5381 * t5527;
t5370 = t5545 * t5884 + t5923;
t5382 = t5545 * t5883 - t5924;
t5710 = t5370 * t5539 + t5382 * t5527;
t5371 = -t5534 * t5881 + t5899;
t5383 = t5534 * t5880 + t5900;
t5709 = t5371 * t5540 - t5383 * t5528;
t5372 = t5546 * t5881 + t5919;
t5384 = t5546 * t5880 - t5920;
t5708 = t5372 * t5540 + t5384 * t5528;
t5373 = -t5535 * t5878 + t5896;
t5385 = t5535 * t5877 + t5897;
t5707 = t5373 * t5541 - t5385 * t5529;
t5374 = t5547 * t5878 + t5915;
t5386 = t5547 * t5877 - t5916;
t5706 = t5374 * t5541 + t5386 * t5529;
t5667 = t5555 * t5299;
t5665 = t5556 * t5300;
t5663 = t5557 * t5301;
t5661 = t5558 * t5302;
t5659 = t5559 * t5303;
t5657 = t5560 * t5304;
t5651 = t5565 * t5666;
t5650 = t5565 * t5664;
t5649 = t5565 * t5662;
t5648 = t5565 * t5660;
t5647 = t5565 * t5658;
t5646 = t5565 * t5656;
t5645 = g(1) * t5876 - (-g(2) * t5894 + t5792) * t5530 - (g(3) * t5894 + t5793) * t5542;
t5644 = g(1) * t5874 - (-g(2) * t5891 + t5792) * t5531 - (g(3) * t5891 + t5793) * t5543;
t5643 = g(1) * t5872 - (-g(2) * t5888 + t5792) * t5532 - (g(3) * t5888 + t5793) * t5544;
t5642 = g(1) * t5870 - (-g(2) * t5885 + t5792) * t5533 - (g(3) * t5885 + t5793) * t5545;
t5641 = g(1) * t5868 - (-g(2) * t5882 + t5792) * t5534 - (g(3) * t5882 + t5793) * t5546;
t5640 = g(1) * t5866 - (-g(2) * t5879 + t5792) * t5535 - (g(3) * t5879 + t5793) * t5547;
t5523 = g(2) * t5570;
t5639 = g(1) * t5779 - (g(3) * t5790 - t5523) * t5542 + (g(2) * t5790 + t6012) * t5530;
t5638 = g(1) * t5778 - (g(3) * t5788 - t5523) * t5543 + (g(2) * t5788 + t6012) * t5531;
t5637 = g(1) * t5777 - (g(3) * t5786 - t5523) * t5544 + (g(2) * t5786 + t6012) * t5532;
t5636 = g(1) * t5776 - (g(3) * t5784 - t5523) * t5545 + (g(2) * t5784 + t6012) * t5533;
t5635 = g(1) * t5775 - (g(3) * t5782 - t5523) * t5546 + (g(2) * t5782 + t6012) * t5534;
t5634 = g(1) * t5774 - (g(3) * t5780 - t5523) * t5547 + (g(2) * t5780 + t6012) * t5535;
t4842 = t5555 * t5741 + t6047;
t4843 = t5556 * t5740 + t6048;
t4844 = t5557 * t5739 + t6049;
t4845 = t5558 * t5738 + t6050;
t4846 = t5559 * t5737 + t6051;
t4847 = t5560 * t5736 + t6052;
t5631 = t5555 * g(2) * t5934 + t5759 + (-t5555 * t6018 + t6047) * t5577;
t5630 = t5556 * g(2) * t5930 + t5758 + (-t5556 * t6017 + t6048) * t5577;
t5629 = t5557 * g(2) * t5926 + t5757 + (-t5557 * t6016 + t6049) * t5577;
t5628 = t5558 * g(2) * t5922 + t5756 + (-t5558 * t6015 + t6050) * t5577;
t5627 = t5559 * g(2) * t5918 + t5755 + (-t5559 * t6014 + t6051) * t5577;
t5626 = t5560 * g(2) * t5914 + t5754 + (-t5560 * t6013 + t6052) * t5577;
t5520 = t5571 * g(3);
t5521 = t5575 * g(3);
t5522 = t5575 * g(2);
t4830 = (((g(3) * t5893 + t5522) * t5536 + t5524 * (g(3) * t5892 - t6019)) * t5542 + ((-g(2) * t5893 + t5521) * t5530 - t5555 * t6021) * t5536 - ((g(2) * t5892 + t5520) * t5530 + t5555 * t6020) * t5524) * t5573 + t5631;
t4831 = (((g(3) * t5890 + t5522) * t5537 + t5525 * (g(3) * t5889 - t6019)) * t5543 + ((-g(2) * t5890 + t5521) * t5531 - t5556 * t6021) * t5537 - ((g(2) * t5889 + t5520) * t5531 + t5556 * t6020) * t5525) * t5573 + t5630;
t4832 = (((g(3) * t5887 + t5522) * t5538 + t5526 * (g(3) * t5886 - t6019)) * t5544 + ((-g(2) * t5887 + t5521) * t5532 - t5557 * t6021) * t5538 - ((g(2) * t5886 + t5520) * t5532 + t5557 * t6020) * t5526) * t5573 + t5629;
t4833 = (((g(3) * t5884 + t5522) * t5539 + t5527 * (g(3) * t5883 - t6019)) * t5545 + ((-g(2) * t5884 + t5521) * t5533 - t5558 * t6021) * t5539 - ((g(2) * t5883 + t5520) * t5533 + t5558 * t6020) * t5527) * t5573 + t5628;
t4834 = (((g(3) * t5881 + t5522) * t5540 + t5528 * (g(3) * t5880 - t6019)) * t5546 + ((-g(2) * t5881 + t5521) * t5534 - t5559 * t6021) * t5540 - ((g(2) * t5880 + t5520) * t5534 + t5559 * t6020) * t5528) * t5573 + t5627;
t4835 = (((g(3) * t5878 + t5522) * t5541 + t5529 * (g(3) * t5877 - t6019)) * t5547 + ((-g(2) * t5878 + t5521) * t5535 - t5560 * t6021) * t5541 - ((g(2) * t5877 + t5520) * t5535 + t5560 * t6020) * t5529) * t5573 + t5626;
t5492 = g(2) * t5547 + g(3) * t5535;
t5491 = g(2) * t5546 + g(3) * t5534;
t5490 = g(2) * t5545 + g(3) * t5533;
t5489 = g(2) * t5544 + g(3) * t5532;
t5488 = g(2) * t5543 + g(3) * t5531;
t5487 = g(2) * t5542 + g(3) * t5530;
t5362 = -t5562 * t5834 + t5864;
t5361 = t5561 * t5856 + t5849;
t5360 = t5561 * t5566 + t5562 * t5849;
t5359 = -t5562 * t5864 + t5834;
t5310 = g(1) * t5560 + t5554 * t5736;
t5309 = g(1) * t5559 + t5553 * t5737;
t5308 = g(1) * t5558 + t5552 * t5738;
t5307 = g(1) * t5557 + t5551 * t5739;
t5306 = g(1) * t5556 + t5550 * t5740;
t5305 = g(1) * t5555 + t5549 * t5741;
t5287 = t5562 * t5548 + t5831 * t6005 - t5848 * t6004;
t5265 = -t5358 + t5284;
t5198 = -t5286 + t5358;
t5185 = t5479 * t5877 + t5571 * t5688;
t5184 = t5478 * t5880 + t5571 * t5689;
t5183 = t5477 * t5883 + t5571 * t5690;
t5182 = t5476 * t5886 + t5571 * t5691;
t5181 = t5475 * t5889 + t5571 * t5692;
t5180 = t5474 * t5892 + t5571 * t5693;
t5179 = -t5479 * t5571 + t5688 * t5877;
t5178 = -t5478 * t5571 + t5689 * t5880;
t5177 = -t5477 * t5571 + t5690 * t5883;
t5176 = -t5476 * t5571 + t5691 * t5886;
t5175 = -t5475 * t5571 + t5692 * t5889;
t5174 = -t5474 * t5571 + t5693 * t5892;
t5173 = -t5479 * t5878 + t5575 * t5688;
t5172 = -t5478 * t5881 + t5575 * t5689;
t5171 = -t5477 * t5884 + t5575 * t5690;
t5170 = -t5476 * t5887 + t5575 * t5691;
t5169 = -t5475 * t5890 + t5575 * t5692;
t5168 = -t5474 * t5893 + t5575 * t5693;
t5167 = t5479 * t5575 + t5688 * t5878;
t5166 = t5478 * t5575 + t5689 * t5881;
t5165 = t5477 * t5575 + t5690 * t5884;
t5164 = t5476 * t5575 + t5691 * t5887;
t5163 = t5475 * t5575 + t5692 * t5890;
t5162 = t5474 * t5575 + t5693 * t5893;
t5147 = -t5284 + t5286;
t5142 = -t5358 - t5286;
t5141 = -t5358 - t5284;
t5134 = t5360 * t6004 + t5362 * t6005 + t5564 * t5895;
t5133 = -t5359 * t6004 - t5361 * t6005 + t5561 * t5895;
t5126 = -t5284 - t5286;
t5117 = t5161 * t5560 + t5304 * t5898;
t5116 = t5160 * t5559 + t5303 * t5901;
t5115 = t5159 * t5558 + t5302 * t5904;
t5114 = t5158 * t5557 + t5301 * t5907;
t5113 = t5157 * t5556 + t5300 * t5910;
t5112 = t5156 * t5555 + t5299 * t5913;
t5105 = t5161 * t5866 + t5304 * (t5535 * t5802 + t5547 * t5879);
t5104 = t5160 * t5868 + t5303 * (t5534 * t5802 + t5546 * t5882);
t5103 = t5159 * t5870 + t5302 * (t5533 * t5802 + t5545 * t5885);
t5102 = t5158 * t5872 + t5301 * (t5532 * t5802 + t5544 * t5888);
t5101 = t5157 * t5874 + t5300 * (t5531 * t5802 + t5543 * t5891);
t5100 = t5156 * t5876 + t5299 * (t5530 * t5802 + t5542 * t5894);
t5099 = -t6037 * t5866 + t5304 * (-t5535 * t5879 + t5547 * t5802);
t5098 = -t6042 * t5868 + t5303 * (-t5534 * t5882 + t5546 * t5802);
t5097 = -t6041 * t5870 + t5302 * (-t5533 * t5885 + t5545 * t5802);
t5096 = -t6040 * t5872 + t5301 * (-t5532 * t5888 + t5544 * t5802);
t5095 = -t6039 * t5874 + t5300 * (-t5531 * t5891 + t5543 * t5802);
t5094 = -t6038 * t5876 + t5299 * (-t5530 * t5894 + t5542 * t5802);
t5075 = t5161 * t5774 + t5304 * (-t5535 * t5570 + t5547 * t5780);
t5074 = t5160 * t5775 + t5303 * (-t5534 * t5570 + t5546 * t5782);
t5073 = t5159 * t5776 + t5302 * (-t5533 * t5570 + t5545 * t5784);
t5072 = t5158 * t5777 + t5301 * (-t5532 * t5570 + t5544 * t5786);
t5071 = t5157 * t5778 + t5300 * (-t5531 * t5570 + t5543 * t5788);
t5070 = t5156 * t5779 + t5299 * (-t5530 * t5570 + t5542 * t5790);
t5069 = -t6037 * t5774 - t5304 * (t5535 * t5780 + t5547 * t5570);
t5068 = -t6042 * t5775 - t5303 * (t5534 * t5782 + t5546 * t5570);
t5067 = -t6041 * t5776 - t5302 * (t5533 * t5784 + t5545 * t5570);
t5066 = -t6040 * t5777 - t5301 * (t5532 * t5786 + t5544 * t5570);
t5065 = -t6039 * t5778 - t5300 * (t5531 * t5788 + t5543 * t5570);
t5064 = -t6038 * t5779 - t5299 * (t5530 * t5790 + t5542 * t5570);
t5063 = t5173 * t5529 + t5185 * t5541;
t5062 = t5172 * t5528 + t5184 * t5540;
t5061 = t5171 * t5527 + t5183 * t5539;
t5060 = t5170 * t5526 + t5182 * t5538;
t5059 = t5169 * t5525 + t5181 * t5537;
t5058 = t5168 * t5524 + t5180 * t5536;
t5057 = -t5167 * t5529 + t5179 * t5541;
t5056 = -t5166 * t5528 + t5178 * t5540;
t5055 = -t5165 * t5527 + t5177 * t5539;
t5054 = -t5164 * t5526 + t5176 * t5538;
t5053 = -t5163 * t5525 + t5175 * t5537;
t5052 = -t5162 * t5524 + t5174 * t5536;
t5009 = -t5479 * t5865 + (t5173 * t5541 - t5185 * t5529) * t5577;
t5008 = -t5478 * t5867 + (t5172 * t5540 - t5184 * t5528) * t5577;
t5007 = -t5477 * t5869 + (t5171 * t5539 - t5183 * t5527) * t5577;
t5006 = -t5476 * t5871 + (t5170 * t5538 - t5182 * t5526) * t5577;
t5005 = -t5475 * t5873 + (t5169 * t5537 - t5181 * t5525) * t5577;
t5004 = -t5474 * t5875 + (t5168 * t5536 - t5180 * t5524) * t5577;
t5003 = t5688 * t5865 + (t5167 * t5541 + t5179 * t5529) * t5577;
t5002 = t5689 * t5867 + (t5166 * t5540 + t5178 * t5528) * t5577;
t5001 = t5690 * t5869 + (t5165 * t5539 + t5177 * t5527) * t5577;
t5000 = t5691 * t5871 + (t5164 * t5538 + t5176 * t5526) * t5577;
t4999 = t5692 * t5873 + (t5163 * t5537 + t5175 * t5525) * t5577;
t4998 = t5693 * t5875 + (t5162 * t5536 + t5174 * t5524) * t5577;
t4979 = (t5117 * t5575 - t5304 * t5916) * t5541 - t5529 * (t5117 * t5571 + t5304 * t5915);
t4978 = (t5116 * t5575 - t5303 * t5920) * t5540 - t5528 * (t5116 * t5571 + t5303 * t5919);
t4977 = (t5115 * t5575 - t5302 * t5924) * t5539 - t5527 * (t5115 * t5571 + t5302 * t5923);
t4976 = (t5114 * t5575 - t5301 * t5928) * t5538 - t5526 * (t5114 * t5571 + t5301 * t5927);
t4975 = (t5113 * t5575 - t5300 * t5932) * t5537 - t5525 * (t5113 * t5571 + t5300 * t5931);
t4974 = (t5112 * t5575 - t5299 * t5936) * t5536 - t5524 * (t5112 * t5571 + t5299 * t5935);
t4973 = t5574 * (-t5160 * t5954 + (-t5372 * t5528 + t5384 * t5540) * t5303) + (t5160 * t5553 - t5546 * t5659) * t5806 + (-t5708 * t5948 + t5257 * t5658 + (-t5562 * t5708 - t5566 * t5647) * t5612) * t5805;
t4972 = t5574 * (-t5159 * t5955 + (-t5370 * t5527 + t5382 * t5539) * t5302) + (t5159 * t5552 - t5545 * t5661) * t5806 + (-t5710 * t5949 + t5256 * t5660 + (-t5562 * t5710 - t5566 * t5648) * t5611) * t5805;
t4971 = t5574 * (-t5158 * t5956 + (-t5368 * t5526 + t5380 * t5538) * t5301) + (t5158 * t5551 - t5544 * t5663) * t5806 + (-t5712 * t5950 + t5255 * t5662 + (-t5562 * t5712 - t5566 * t5649) * t5610) * t5805;
t4970 = t5574 * (-t5157 * t5957 + (-t5366 * t5525 + t5378 * t5537) * t5300) + (t5157 * t5550 - t5543 * t5665) * t5806 + (-t5714 * t5951 + t5254 * t5664 + (-t5562 * t5714 - t5566 * t5650) * t5609) * t5805;
t4969 = t5574 * (-t5156 * t5958 + (-t5364 * t5524 + t5376 * t5536) * t5299) + (t5156 * t5549 - t5542 * t5667) * t5806 + (-t5716 * t5952 + t5253 * t5666 + (-t5562 * t5716 - t5566 * t5651) * t5608) * t5805;
t4968 = t5574 * (-t5161 * t5953 + (-t5374 * t5529 + t5386 * t5541) * t5304) + (t5161 * t5554 - t5547 * t5657) * t5806 + (-t5706 * t5947 + t5258 * t5656 + (-t5562 * t5706 - t5566 * t5646) * t5613) * t5805;
t4967 = -t5574 * (t6042 * t5954 - (t5371 * t5528 + t5383 * t5540) * t5303) + (-t5534 * t5659 + t5553 * t6042) * t5806 + (t5709 * t5948 + t5251 * t5658 + (t5562 * t5709 - t5563 * t5647) * t5612) * t5805;
t4966 = -t5574 * (t6041 * t5955 - (t5369 * t5527 + t5381 * t5539) * t5302) + (-t5533 * t5661 + t5552 * t6041) * t5806 + (t5711 * t5949 + t5250 * t5660 + (t5562 * t5711 - t5563 * t5648) * t5611) * t5805;
t4965 = -t5574 * (t6040 * t5956 - (t5367 * t5526 + t5379 * t5538) * t5301) + (-t5532 * t5663 + t5551 * t6040) * t5806 + (t5713 * t5950 + t5249 * t5662 + (t5562 * t5713 - t5563 * t5649) * t5610) * t5805;
t4964 = -t5574 * (t6039 * t5957 - (t5365 * t5525 + t5377 * t5537) * t5300) + (-t5531 * t5665 + t5550 * t6039) * t5806 + (t5715 * t5951 + t5248 * t5664 + (t5562 * t5715 - t5563 * t5650) * t5609) * t5805;
t4963 = -t5574 * (t6038 * t5958 - (t5363 * t5524 + t5375 * t5536) * t5299) + (-t5530 * t5667 + t5549 * t6038) * t5806 + (t5717 * t5952 + t5247 * t5666 + (t5562 * t5717 - t5563 * t5651) * t5608) * t5805;
t4962 = -t5574 * (t6037 * t5953 - (t5373 * t5529 + t5385 * t5541) * t5304) + (-t5535 * t5657 + t5554 * t6037) * t5806 + (t5707 * t5947 + t5252 * t5656 + (t5562 * t5707 - t5563 * t5646) * t5613) * t5805;
t4949 = ((-t5075 * t5575 + t5105 * t5571) * t5541 + (t5075 * t5571 + t5105 * t5575) * t5529) * t5572 - t4979 * t5803;
t4948 = ((-t5074 * t5575 + t5104 * t5571) * t5540 + (t5074 * t5571 + t5104 * t5575) * t5528) * t5572 - t4978 * t5803;
t4947 = ((-t5073 * t5575 + t5103 * t5571) * t5539 + (t5073 * t5571 + t5103 * t5575) * t5527) * t5572 - t4977 * t5803;
t4946 = ((-t5072 * t5575 + t5102 * t5571) * t5538 + (t5072 * t5571 + t5102 * t5575) * t5526) * t5572 - t4976 * t5803;
t4945 = ((-t5071 * t5575 + t5101 * t5571) * t5537 + (t5071 * t5571 + t5101 * t5575) * t5525) * t5572 - t4975 * t5803;
t4944 = ((-t5070 * t5575 + t5100 * t5571) * t5536 + (t5070 * t5571 + t5100 * t5575) * t5524) * t5572 - t4974 * t5803;
t4943 = ((t5069 * t5575 - t5099 * t5571) * t5541 - (t5069 * t5571 + t5099 * t5575) * t5529) * t5572 - t6071 * t5803;
t4942 = ((t5068 * t5575 - t5098 * t5571) * t5540 - (t5068 * t5571 + t5098 * t5575) * t5528) * t5572 - t6072 * t5803;
t4941 = ((t5067 * t5575 - t5097 * t5571) * t5539 - (t5067 * t5571 + t5097 * t5575) * t5527) * t5572 - t6073 * t5803;
t4940 = ((t5066 * t5575 - t5096 * t5571) * t5538 - (t5066 * t5571 + t5096 * t5575) * t5526) * t5572 - t6074 * t5803;
t4939 = ((t5065 * t5575 - t5095 * t5571) * t5537 - (t5065 * t5571 + t5095 * t5575) * t5525) * t5572 - t6075 * t5803;
t4938 = ((t5064 * t5575 - t5094 * t5571) * t5536 - (t5064 * t5571 + t5094 * t5575) * t5524) * t5572 - t6076 * t5803;
t4889 = (((t5442 * t6055 - t5959 * t6024) * t5541 + (-t5443 * t6055 - t5965 * t6024) * t5529) * t5547 + t5535 * ((-t5442 * t6024 - t5959 * t6055) * t5541 - (-t5443 * t6024 + t5965 * t6055) * t5529)) * t5572 + t6025 * t5803;
t4888 = (((t5442 * t6054 - t5960 * t6023) * t5540 + (-t5443 * t6054 - t5966 * t6023) * t5528) * t5546 + t5534 * ((-t5442 * t6023 - t5960 * t6054) * t5540 - (-t5443 * t6023 + t5966 * t6054) * t5528)) * t5572 + t6026 * t5803;
t4887 = (((t5442 * t6053 - t5961 * t6022) * t5539 + (-t5443 * t6053 - t5967 * t6022) * t5527) * t5545 + t5533 * ((-t5442 * t6022 - t5961 * t6053) * t5539 - (-t5443 * t6022 + t5967 * t6053) * t5527)) * t5572 + t6027 * t5803;
t4886 = (((-t5188 * t5962 + t5442 * t6056) * t5538 + (-t5188 * t5968 - t5443 * t6056) * t5526) * t5544 + t5532 * ((-t5188 * t5442 - t5962 * t6056) * t5538 - (-t5188 * t5443 + t5968 * t6056) * t5526)) * t5572 + t6028 * t5803;
t4885 = (((-t5187 * t5963 + t5442 * t6057) * t5537 + (-t5187 * t5969 - t5443 * t6057) * t5525) * t5543 + t5531 * ((-t5187 * t5442 - t5963 * t6057) * t5537 - (-t5187 * t5443 + t5969 * t6057) * t5525)) * t5572 + t6029 * t5803;
t4884 = (((-t5186 * t5964 + t5442 * t6058) * t5536 + (-t5186 * t5970 - t5443 * t6058) * t5524) * t5542 + t5530 * ((-t5186 * t5442 - t5964 * t6058) * t5536 - (-t5186 * t5443 + t5970 * t6058) * t5524)) * t5572 + t6030 * t5803;
t4871 = ((-t5003 * t5563 - t5009 * t5566) * t5547 + t5535 * (t5003 * t5566 - t5009 * t5563)) * t5570 - t5574 * ((-t5057 * t5563 + t5063 * t5566) * t5547 + (t5057 * t5566 + t5063 * t5563) * t5535);
t4870 = ((-t5002 * t5563 - t5008 * t5566) * t5546 + t5534 * (t5002 * t5566 - t5008 * t5563)) * t5570 - t5574 * ((-t5056 * t5563 + t5062 * t5566) * t5546 + (t5056 * t5566 + t5062 * t5563) * t5534);
t4869 = ((-t5001 * t5563 - t5007 * t5566) * t5545 + t5533 * (t5001 * t5566 - t5007 * t5563)) * t5570 - t5574 * ((-t5055 * t5563 + t5061 * t5566) * t5545 + (t5055 * t5566 + t5061 * t5563) * t5533);
t4868 = ((-t5000 * t5563 - t5006 * t5566) * t5544 + t5532 * (t5000 * t5566 - t5006 * t5563)) * t5570 - t5574 * ((-t5054 * t5563 + t5060 * t5566) * t5544 + (t5054 * t5566 + t5060 * t5563) * t5532);
t4867 = ((-t4999 * t5563 - t5005 * t5566) * t5543 + t5531 * (t4999 * t5566 - t5005 * t5563)) * t5570 - t5574 * ((-t5053 * t5563 + t5059 * t5566) * t5543 + (t5053 * t5566 + t5059 * t5563) * t5531);
t4866 = ((-t4998 * t5563 - t5004 * t5566) * t5542 + t5530 * (t4998 * t5566 - t5004 * t5563)) * t5570 - t5574 * ((-t5052 * t5563 + t5058 * t5566) * t5542 + (t5052 * t5566 + t5058 * t5563) * t5530);
t4859 = t5576 * t4865;
t4858 = t5576 * t4864;
t4857 = t5576 * t4863;
t4856 = t5576 * t4862;
t4855 = t5576 * t4861;
t4854 = t5576 * t4860;
t4841 = t5577 * t5754 + t4847;
t4840 = t5577 * t5755 + t4846;
t4839 = t5577 * t5756 + t4845;
t4838 = t5577 * t5757 + t4844;
t4837 = t5577 * t5758 + t4843;
t4836 = t5577 * t5759 + t4842;
t4829 = t4859 + t4835;
t4828 = t4858 + t4834;
t4827 = t4857 + t4833;
t4826 = t4856 + t4832;
t4825 = t4855 + t4831;
t4824 = t4854 + t4830;
t4823 = (t4859 + t5754) * t5577 - t4865 * t5760 + t4847;
t4822 = (t4858 + t5755) * t5577 - t4864 * t5760 + t4846;
t4821 = (t4857 + t5756) * t5577 - t4863 * t5760 + t4845;
t4820 = (t4856 + t5757) * t5577 - t4862 * t5760 + t4844;
t4819 = (t4855 + t5758) * t5577 - t4861 * t5760 + t4843;
t4818 = (t4854 + t5759) * t5577 - t4860 * t5760 + t4842;
t4817 = ((-t5571 * t5635 - t5575 * t5641) * t5540 + (t5571 * t5641 - t5575 * t5635) * t5528 - t4846 * t5804) * t5572 + ((-(t5309 * t5571 - t5491 * t5575) * t5540 - (t5309 * t5575 + t5491 * t5571) * t5528) * t5573 + t5627) * t5576 + t4864;
t4816 = ((-t5571 * t5636 - t5575 * t5642) * t5539 + (t5571 * t5642 - t5575 * t5636) * t5527 - t4845 * t5804) * t5572 + ((-(t5308 * t5571 - t5490 * t5575) * t5539 - (t5308 * t5575 + t5490 * t5571) * t5527) * t5573 + t5628) * t5576 + t4863;
t4815 = ((-t5571 * t5637 - t5575 * t5643) * t5538 + (t5571 * t5643 - t5575 * t5637) * t5526 - t4844 * t5804) * t5572 + ((-(t5307 * t5571 - t5489 * t5575) * t5538 - (t5307 * t5575 + t5489 * t5571) * t5526) * t5573 + t5629) * t5576 + t4862;
t4814 = ((-t5571 * t5638 - t5575 * t5644) * t5537 + (t5571 * t5644 - t5575 * t5638) * t5525 - t4843 * t5804) * t5572 + ((-(t5306 * t5571 - t5488 * t5575) * t5537 - (t5306 * t5575 + t5488 * t5571) * t5525) * t5573 + t5630) * t5576 + t4861;
t4813 = ((-t5571 * t5634 - t5575 * t5640) * t5541 + (t5571 * t5640 - t5575 * t5634) * t5529 - t4847 * t5804) * t5572 + ((-(t5310 * t5571 - t5492 * t5575) * t5541 - (t5310 * t5575 + t5492 * t5571) * t5529) * t5573 + t5626) * t5576 + t4865;
t4812 = ((-t5571 * t5639 - t5575 * t5645) * t5536 + (t5571 * t5645 - t5575 * t5639) * t5524 - t4842 * t5804) * t5572 + ((-(t5305 * t5571 - t5487 * t5575) * t5536 - (t5305 * t5575 + t5487 * t5571) * t5524) * t5573 + t5631) * t5576 + t4860;
t1 = [(-MDP(10) * t5119 + MDP(11) * t6043 + MDP(12) * t5126 + MDP(13) * t5287) * t5562 + ((t5141 * t5564 - t5561 * t6045) * MDP(10) + (-t5142 * t5561 - t5145 * t5564) * MDP(11) + (-t5125 * t5561 + t5564 * t6044) * MDP(12) + (t5133 * t5561 + t5134 * t5564) * MDP(13)) * t5565 + ((-t4812 * t5958 - t4813 * t5953 - t4814 * t5957 - t4815 * t5956 - t4816 * t5955 - t4817 * t5954) * t6003 + ((t4842 * t5135 + t4843 * t5136 + t4844 * t5137 + t4845 * t5138 + t4846 * t5139 + t4847 * t5140) * MDP(1) + (t5135 * t4836 + t5136 * t4837 + t5137 * t4838 + t5138 * t4839 + t5139 * t4840 + t5140 * t4841) * MDP(2) + (t5135 * t4818 + t5136 * t4819 + t5137 * t4820 + t5138 * t4821 + t5139 * t4822 + t5140 * t4823) * MDP(3) + ((t4830 * t5996 + t4831 * t5995 + t4832 * t5994 + t4833 * t5993 + t4834 * t5992 + t4835 * t5991) * MDP(2) + (t4824 * t5996 + t4825 * t5995 + t4826 * t5994 + t4827 * t5993 + t4828 * t5992 + t4829 * t5991) * MDP(3)) * t5568) * t5569) * t5567; (t5119 * t5848 + t5141 * t5360 + t5359 * t6045) * MDP(10) + (t5142 * t5359 - t5145 * t5360 - t5848 * t6043) * MDP(11) + (t5125 * t5359 - t5126 * t5848 + t5360 * t6044) * MDP(12) + (-t5133 * t5359 + t5134 * t5360 - t5287 * t5848) * MDP(13) + ((-t4812 * t5673 - t4813 * t5668 - t4814 * t5672 - t4815 * t5671 - t4816 * t5670 - t4817 * t5669) * t6003 + ((t4842 * t5041 + t4843 * t5043 + t4844 * t5045 + t4845 * t5047 + t4846 * t5049 + t4847 * t5051) * MDP(1) + (t4836 * t5041 + t4837 * t5043 + t4838 * t5045 + t4839 * t5047 + t4840 * t5049 + t4841 * t5051) * MDP(2) + (t4818 * t5041 + t4819 * t5043 + t4820 * t5045 + t4821 * t5047 + t4822 * t5049 + t4823 * t5051) * MDP(3) + ((t4830 * t4992 + t4831 * t4993 + t4832 * t4994 + t4833 * t4995 + t4834 * t4996 + t4835 * t4997) * MDP(2) + (t4824 * t4992 + t4825 * t4993 + t4826 * t4994 + t4827 * t4995 + t4828 * t4996 + t4829 * t4997) * MDP(3)) * t5568) * t5569) * t5567; (-t5119 * t5831 + t5141 * t5362 + t5361 * t6045) * MDP(10) + (t5142 * t5361 - t5145 * t5362 + t5831 * t6043) * MDP(11) + (t5125 * t5361 + t5126 * t5831 + t5362 * t6044) * MDP(12) + (-t5133 * t5361 + t5134 * t5362 + t5287 * t5831) * MDP(13) + ((t4812 * t5729 + t4813 * t5724 + t4814 * t5728 + t4815 * t5727 + t4816 * t5726 + t4817 * t5725) * t6003 + ((t4842 * t5040 + t4843 * t5042 + t4844 * t5044 + t4845 * t5046 + t4846 * t5048 + t4847 * t5050) * MDP(1) + (t4836 * t5040 + t4837 * t5042 + t4838 * t5044 + t4839 * t5046 + t4840 * t5048 + t4841 * t5050) * MDP(2) + (t4818 * t5040 + t4819 * t5042 + t4820 * t5044 + t4821 * t5046 + t4822 * t5048 + t4823 * t5050) * MDP(3) + ((t4830 * t4986 + t4831 * t4987 + t4832 * t4988 + t4833 * t4989 + t4834 * t4990 + t4835 * t4991) * MDP(2) + (t4824 * t4986 + t4825 * t4987 + t4826 * t4988 + t4827 * t4989 + t4828 * t4990 + t4829 * t4991) * MDP(3)) * t5568) * t5569) * t5567; (-t5133 * MDP(10) - t5134 * MDP(11) + t5147 * MDP(5) - t5125 * MDP(6) + t6044 * MDP(8) + t5387 * MDP(9) + (MDP(4) - MDP(7)) * t5285) * t5562 + (t5149 * t5564 * MDP(4) + (t5119 * t5564 - t5561 * t6043) * MDP(5) + (-t5198 * t5561 + t5564 * t6045) * MDP(6) - t5148 * t5561 * MDP(7) + (-t5145 * t5561 + t5265 * t5564) * MDP(8) + (t5133 * t5564 - t5134 * t5561) * MDP(12) + (-MDP(4) * t5971 + MDP(7) * t5972 + (t5971 - t5972) * MDP(9)) * t5494 + (MDP(10) * t5561 + MDP(11) * t5564) * t5287) * t5565 + ((-t4812 * t6030 - t4813 * t6025 - t4814 * t6029 - t4815 * t6028 - t4816 * t6027 - t4817 * t6026) * t6003 + ((t4842 * t4866 + t4843 * t4867 + t4844 * t4868 + t4845 * t4869 + t4846 * t4870 + t4847 * t4871) * MDP(1) + (t4836 * t4866 + t4837 * t4867 + t4838 * t4868 + t4839 * t4869 + t4840 * t4870 + t4841 * t4871) * MDP(2) + (t4818 * t4866 + t4819 * t4867 + t4820 * t4868 + t4821 * t4869 + t4822 * t4870 + t4823 * t4871) * MDP(3) + ((t4830 * t4884 + t4831 * t4885 + t4832 * t4886 + t4833 * t4887 + t4834 * t4888 + t4835 * t4889) * MDP(2) + (t4824 * t4884 + t4825 * t4885 + t4826 * t4886 + t4827 * t4887 + t4828 * t4888 + t4829 * t4889) * MDP(3)) * t5568) * t5569) * t5567; (t5149 * t5360 + (t5359 * t5494 - t5388 * t5848) * t5390) * MDP(4) + (t5119 * t5360 - t5147 * t5848 + t5359 * t6043) * MDP(5) + (t5125 * t5848 + t5198 * t5359 + t5360 * t6045) * MDP(6) + (t5148 * t5359 + (t5360 * t5494 + t5390 * t5848) * t5388) * MDP(7) + (t5145 * t5359 + t5265 * t5360 - t5848 * t6044) * MDP(8) + (-t5387 * t5848 + (-t5359 * t5390 - t5360 * t5388) * t5494) * MDP(9) + (t5133 * t5848 - t5287 * t5359) * MDP(10) + (t5134 * t5848 + t5287 * t5360) * MDP(11) + (t5133 * t5360 + t5134 * t5359) * MDP(12) + ((t4974 * t4812 + t4979 * t4813 + t4975 * t4814 + t4976 * t4815 + t4977 * t4816 + t4978 * t4817) * t6003 + ((t4842 * t4969 + t4843 * t4970 + t4844 * t4971 + t4845 * t4972 + t4846 * t4973 + t4847 * t4968) * MDP(1) + (t4836 * t4969 + t4837 * t4970 + t4838 * t4971 + t4839 * t4972 + t4840 * t4973 + t4841 * t4968) * MDP(2) + (t4818 * t4969 + t4819 * t4970 + t4820 * t4971 + t4821 * t4972 + t4822 * t4973 + t4823 * t4968) * MDP(3) + ((t4830 * t4944 + t4831 * t4945 + t4832 * t4946 + t4833 * t4947 + t4834 * t4948 + t4835 * t4949) * MDP(2) + (t4824 * t4944 + t4825 * t4945 + t4826 * t4946 + t4827 * t4947 + t4828 * t4948 + t4829 * t4949) * MDP(3)) * t5568) * t5569) * t5567; (t5149 * t5362 + (t5361 * t5494 + t5388 * t5831) * t5390) * MDP(4) + (t5119 * t5362 + t5147 * t5831 + t5361 * t6043) * MDP(5) + (-t5125 * t5831 + t5198 * t5361 + t5362 * t6045) * MDP(6) + (t5148 * t5361 + (t5362 * t5494 - t5390 * t5831) * t5388) * MDP(7) + (t5145 * t5361 + t5265 * t5362 + t5831 * t6044) * MDP(8) + (t5387 * t5831 + (-t5361 * t5390 - t5362 * t5388) * t5494) * MDP(9) + (-t5133 * t5831 - t5287 * t5361) * MDP(10) + (-t5134 * t5831 + t5287 * t5362) * MDP(11) + (t5133 * t5362 + t5134 * t5361) * MDP(12) + ((t4812 * t6076 + t6071 * t4813 + t6075 * t4814 + t6074 * t4815 + t6073 * t4816 + t6072 * t4817) * t6003 + ((t4842 * t4963 + t4843 * t4964 + t4844 * t4965 + t4845 * t4966 + t4846 * t4967 + t4847 * t4962) * MDP(1) + (t4836 * t4963 + t4837 * t4964 + t4838 * t4965 + t4839 * t4966 + t4840 * t4967 + t4841 * t4962) * MDP(2) + (t4818 * t4963 + t4819 * t4964 + t4820 * t4965 + t4821 * t4966 + t4822 * t4967 + t4823 * t4962) * MDP(3) + ((t4830 * t4938 + t4831 * t4939 + t4832 * t4940 + t4833 * t4941 + t4834 * t4942 + t4835 * t4943) * MDP(2) + (t4824 * t4938 + t4825 * t4939 + t4826 * t4940 + t4827 * t4941 + t4828 * t4942 + t4829 * t4943) * MDP(3)) * t5568) * t5569) * t5567;];
tauX  = t1;
