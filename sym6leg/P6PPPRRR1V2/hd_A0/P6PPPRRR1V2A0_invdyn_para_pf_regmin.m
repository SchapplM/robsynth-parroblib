% Calculate minimal parameter regressor of inverse dynamics forces for
% P6PPPRRR1V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d4,theta1,theta2,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [6x13]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 19:43
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P6PPPRRR1V2A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPPRRR1V2A0_invdyn_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 19:31:19
% EndTime: 2019-05-16 19:32:37
% DurationCPUTime: 82.82s
% Computational Cost: add. (145731->1443), mult. (316977->2536), div. (4500->3), fcn. (296538->50), ass. (0->819)
t778 = legFrame(1,1);
t736 = cos(t778);
t764 = cos(pkin(8));
t1086 = t736 * t764;
t760 = sin(pkin(8));
t1087 = t736 * t760;
t724 = sin(t778);
t784 = legFrame(1,2);
t743 = sin(t784);
t1107 = t724 * t743;
t795 = xP(5);
t754 = cos(t795);
t802 = koppelP(1,3);
t1011 = t754 * t802;
t796 = xP(4);
t755 = cos(t796);
t808 = koppelP(1,2);
t1004 = t755 * t808;
t752 = sin(t796);
t814 = koppelP(1,1);
t1025 = t752 * t814;
t1031 = t752 * t808;
t794 = xP(6);
t750 = sin(t794);
t751 = sin(t795);
t753 = cos(t794);
t998 = t755 * t814;
t441 = (t1025 * t751 + t1004) * t753 + t750 * (-t1031 * t751 + t998);
t1219 = t752 * t1011 - t441;
t1218 = -t750 * t808 + t753 * t814;
t1137 = t1218 * t754;
t493 = t751 * t802 + t1137;
t749 = cos(t784);
t1246 = t1107 * t493 + t1219 * t749;
t772 = legFrame(1,3);
t718 = sin(t772);
t730 = cos(t772);
t1258 = (t1087 * t493 + t1246 * t764) * t730 + t718 * (t1086 * t493 - t1246 * t760);
t777 = legFrame(2,1);
t735 = cos(t777);
t1089 = t735 * t764;
t1090 = t735 * t760;
t723 = sin(t777);
t783 = legFrame(2,2);
t742 = sin(t783);
t1111 = t723 * t742;
t801 = koppelP(2,3);
t1012 = t754 * t801;
t807 = koppelP(2,2);
t1005 = t755 * t807;
t813 = koppelP(2,1);
t1026 = t752 * t813;
t1032 = t752 * t807;
t999 = t755 * t813;
t440 = (t1026 * t751 + t1005) * t753 + t750 * (-t1032 * t751 + t999);
t1224 = t752 * t1012 - t440;
t661 = t750 * t807 - t813 * t753;
t1138 = t661 * t754;
t492 = t751 * t801 - t1138;
t748 = cos(t783);
t1241 = t1111 * t492 + t1224 * t748;
t771 = legFrame(2,3);
t717 = sin(t771);
t729 = cos(t771);
t1257 = (t492 * t1090 + t1241 * t764) * t729 + t717 * (t1089 * t492 - t1241 * t760);
t776 = legFrame(3,1);
t734 = cos(t776);
t1092 = t734 * t764;
t1093 = t734 * t760;
t722 = sin(t776);
t782 = legFrame(3,2);
t741 = sin(t782);
t1115 = t722 * t741;
t800 = koppelP(3,3);
t1013 = t754 * t800;
t812 = koppelP(3,1);
t1000 = t755 * t812;
t806 = koppelP(3,2);
t1006 = t755 * t806;
t1027 = t752 * t812;
t1033 = t752 * t806;
t439 = (t1027 * t751 + t1006) * t753 + t750 * (-t1033 * t751 + t1000);
t1223 = t752 * t1013 - t439;
t660 = t750 * t806 - t812 * t753;
t1139 = t660 * t754;
t491 = t751 * t800 - t1139;
t747 = cos(t782);
t1242 = t1115 * t491 + t1223 * t747;
t770 = legFrame(3,3);
t716 = sin(t770);
t728 = cos(t770);
t1256 = (t491 * t1093 + t1242 * t764) * t728 + t716 * (t1092 * t491 - t1242 * t760);
t775 = legFrame(4,1);
t733 = cos(t775);
t1095 = t733 * t764;
t1096 = t733 * t760;
t721 = sin(t775);
t781 = legFrame(4,2);
t740 = sin(t781);
t1119 = t721 * t740;
t799 = koppelP(4,3);
t1014 = t754 * t799;
t811 = koppelP(4,1);
t1001 = t755 * t811;
t805 = koppelP(4,2);
t1007 = t755 * t805;
t1028 = t752 * t811;
t1034 = t752 * t805;
t438 = (t1028 * t751 + t1007) * t753 + t750 * (-t1034 * t751 + t1001);
t1222 = t752 * t1014 - t438;
t659 = t750 * t805 - t811 * t753;
t1140 = t659 * t754;
t490 = t751 * t799 - t1140;
t746 = cos(t781);
t1243 = t1119 * t490 + t1222 * t746;
t769 = legFrame(4,3);
t715 = sin(t769);
t727 = cos(t769);
t1255 = (t490 * t1096 + t1243 * t764) * t727 + t715 * (t1095 * t490 - t1243 * t760);
t774 = legFrame(5,1);
t732 = cos(t774);
t1098 = t732 * t764;
t1099 = t732 * t760;
t720 = sin(t774);
t780 = legFrame(5,2);
t739 = sin(t780);
t1123 = t720 * t739;
t798 = koppelP(5,3);
t1015 = t754 * t798;
t810 = koppelP(5,1);
t1002 = t755 * t810;
t804 = koppelP(5,2);
t1008 = t755 * t804;
t1029 = t752 * t810;
t1035 = t752 * t804;
t437 = (t1029 * t751 + t1008) * t753 + t750 * (-t1035 * t751 + t1002);
t1221 = t752 * t1015 - t437;
t658 = t750 * t804 - t810 * t753;
t1141 = t658 * t754;
t489 = t751 * t798 - t1141;
t745 = cos(t780);
t1244 = t1123 * t489 + t1221 * t745;
t768 = legFrame(5,3);
t714 = sin(t768);
t726 = cos(t768);
t1254 = (t489 * t1099 + t1244 * t764) * t726 + t714 * (t1098 * t489 - t1244 * t760);
t773 = legFrame(6,1);
t731 = cos(t773);
t1101 = t731 * t764;
t1102 = t731 * t760;
t719 = sin(t773);
t779 = legFrame(6,2);
t738 = sin(t779);
t1127 = t719 * t738;
t797 = koppelP(6,3);
t1016 = t754 * t797;
t809 = koppelP(6,1);
t1003 = t755 * t809;
t803 = koppelP(6,2);
t1009 = t755 * t803;
t1030 = t752 * t809;
t1036 = t752 * t803;
t436 = (t1030 * t751 + t1009) * t753 + t750 * (-t1036 * t751 + t1003);
t1220 = t752 * t1016 - t436;
t657 = t750 * t803 - t809 * t753;
t1142 = t657 * t754;
t488 = t751 * t797 - t1142;
t744 = cos(t779);
t1245 = t1127 * t488 + t1220 * t744;
t767 = legFrame(6,3);
t713 = sin(t767);
t725 = cos(t767);
t1253 = (t488 * t1102 + t1245 * t764) * t725 + t713 * (t1101 * t488 - t1245 * t760);
t668 = t750 * t814 + t753 * t808;
t585 = t752 * t668;
t877 = -t1218 * t751 + t1011;
t1240 = t877 * t755 + t585;
t667 = t750 * t813 + t753 * t807;
t584 = t752 * t667;
t878 = t661 * t751 + t1012;
t1239 = t878 * t755 + t584;
t666 = t750 * t812 + t753 * t806;
t583 = t752 * t666;
t879 = t660 * t751 + t1013;
t1238 = t879 * t755 + t583;
t663 = t750 * t809 + t753 * t803;
t580 = t752 * t663;
t882 = t657 * t751 + t1016;
t1237 = t882 * t755 + t580;
t664 = t750 * t810 + t753 * t804;
t581 = t752 * t664;
t881 = t658 * t751 + t1015;
t1236 = t881 * t755 + t581;
t665 = t750 * t811 + t753 * t805;
t582 = t752 * t665;
t880 = t659 * t751 + t1014;
t1235 = t880 * t755 + t582;
t586 = t755 * t663;
t375 = -t882 * t752 + t586;
t587 = t755 * t664;
t376 = -t881 * t752 + t587;
t588 = t755 * t665;
t377 = -t880 * t752 + t588;
t792 = xDP(5);
t1037 = t752 * t792;
t793 = xDP(4);
t1167 = t1240 * t793;
t791 = xDP(6);
t224 = t1037 * t493 - (-t1218 * t755 + t585 * t751) * t791 - t1167;
t1168 = t1239 * t793;
t222 = t1037 * t492 - (t584 * t751 + t661 * t755) * t791 - t1168;
t1169 = t1238 * t793;
t220 = t1037 * t491 - (t583 * t751 + t660 * t755) * t791 - t1169;
t1010 = t755 * t792;
t1173 = t377 * t793;
t219 = t1010 * t490 - (t588 * t751 - t659 * t752) * t791 - t1173;
t1176 = t1235 * t793;
t218 = t1037 * t490 - (t582 * t751 + t659 * t755) * t791 - t1176;
t1174 = t376 * t793;
t217 = t1010 * t489 - (t587 * t751 - t658 * t752) * t791 - t1174;
t1177 = t1236 * t793;
t216 = t1037 * t489 - (t581 * t751 + t658 * t755) * t791 - t1177;
t1175 = t375 * t793;
t215 = t1010 * t488 - (t586 * t751 - t657 * t752) * t791 - t1175;
t1178 = t1237 * t793;
t214 = t1037 * t488 - (t580 * t751 + t657 * t755) * t791 - t1178;
t1038 = t752 * t754;
t1217 = t668 * t755 - t877 * t752;
t1018 = t754 * t791;
t399 = t1018 * t668 - t792 * t877;
t788 = xDDP(3);
t1017 = t754 * t793;
t528 = -t1017 * t755 + t1037 * t751;
t786 = xDDP(5);
t785 = xDDP(6);
t989 = t792 * t793;
t876 = t754 * t785 + t989;
t815 = -t528 * t791 + t752 * t876 - t755 * t786;
t787 = xDDP(4);
t990 = t791 * t792;
t841 = t751 * t785 + t754 * t990 + t787;
t144 = t788 + t224 * t793 + t399 * t1010 + (-t1038 * t399 + t224 * t751) * t791 + t841 * t1217 + t815 * t493;
t1020 = t754 * t755;
t1046 = t751 * t755;
t1170 = t1217 * t793;
t225 = t1010 * t493 - (t1046 * t668 + t1218 * t752) * t791 - t1170;
t789 = xDDP(2);
t527 = -t1010 * t751 - t1017 * t752;
t816 = t527 * t791 + t752 * t786 + t755 * t876;
t150 = t789 + t225 * t793 - t399 * t1037 + (-t1020 * t399 + t225 * t751) * t791 - t841 * t1240 + t816 * t493;
t766 = cos(pkin(4));
t1104 = t724 * t766;
t762 = sin(pkin(4));
t1056 = t749 * t762;
t656 = t718 * t764 + t730 * t760;
t472 = t656 * t743 * t766 + t1056;
t650 = t718 * t760 - t764 * t730;
t759 = sin(pkin(9));
t763 = cos(pkin(9));
t1088 = t736 * t743;
t913 = t1088 * t650 + t724 * t656;
t239 = (-t1104 * t650 + t472 * t736) * t759 + t763 * t913;
t857 = t1107 * t650 - t656 * t736;
t240 = (-t650 * t736 * t766 - t472 * t724) * t759 - t857 * t763;
t994 = t759 * t766;
t995 = t759 * t762;
t329 = (-t650 * t763 - t656 * t994) * t749 + t743 * t995;
t790 = xDDP(1);
t90 = t790 + (-t1217 * t752 + t1240 * t755) * t786 + (-t1217 * t527 + t1240 * t528) * t791 + ((-t225 - t1170) * t755 + (-t224 - t1167) * t752) * t792 + ((-t1217 * t755 - t1240 * t752) * t785 + (-t224 * t755 + t225 * t752) * t791) * t754;
t756 = 0.1e1 / t759;
t758 = 0.1e1 / t762;
t996 = t756 * t758;
t1234 = (t144 * t239 + t150 * t240 + t329 * t90) * t996 - t743 * g(1);
t1216 = t667 * t755 - t878 * t752;
t398 = t1018 * t667 - t792 * t878;
t143 = t788 + t222 * t793 + t398 * t1010 + (-t1038 * t398 + t222 * t751) * t791 + t841 * t1216 + t815 * t492;
t1171 = t1216 * t793;
t223 = t1010 * t492 - (t1046 * t667 - t661 * t752) * t791 - t1171;
t149 = t789 + t223 * t793 - t398 * t1037 + (-t1020 * t398 + t223 * t751) * t791 - t841 * t1239 + t816 * t492;
t1108 = t723 * t766;
t1058 = t748 * t762;
t655 = t717 * t764 + t729 * t760;
t471 = t655 * t742 * t766 + t1058;
t649 = t717 * t760 - t764 * t729;
t1091 = t735 * t742;
t914 = t1091 * t649 + t723 * t655;
t237 = (-t1108 * t649 + t471 * t735) * t759 + t763 * t914;
t858 = t1111 * t649 - t655 * t735;
t238 = (-t649 * t735 * t766 - t471 * t723) * t759 - t858 * t763;
t328 = (-t649 * t763 - t655 * t994) * t748 + t742 * t995;
t89 = t790 + (-t1216 * t752 + t1239 * t755) * t786 + (-t1216 * t527 + t1239 * t528) * t791 + ((-t223 - t1171) * t755 + (-t222 - t1168) * t752) * t792 + ((-t1216 * t755 - t1239 * t752) * t785 + (-t222 * t755 + t223 * t752) * t791) * t754;
t1233 = (t143 * t237 + t149 * t238 + t328 * t89) * t996 - t742 * g(1);
t1215 = t666 * t755 - t879 * t752;
t397 = t1018 * t666 - t792 * t879;
t142 = t788 + t220 * t793 + t397 * t1010 + (-t1038 * t397 + t220 * t751) * t791 + t841 * t1215 + t815 * t491;
t1172 = t1215 * t793;
t221 = t1010 * t491 - (t1046 * t666 - t660 * t752) * t791 - t1172;
t148 = t789 + t221 * t793 - t397 * t1037 + (-t1020 * t397 + t221 * t751) * t791 - t841 * t1238 + t816 * t491;
t1112 = t722 * t766;
t1060 = t747 * t762;
t654 = t716 * t764 + t728 * t760;
t470 = t654 * t741 * t766 + t1060;
t648 = t716 * t760 - t764 * t728;
t1094 = t734 * t741;
t915 = t1094 * t648 + t722 * t654;
t235 = (-t1112 * t648 + t470 * t734) * t759 + t763 * t915;
t859 = t1115 * t648 - t654 * t734;
t236 = (-t648 * t734 * t766 - t470 * t722) * t759 - t859 * t763;
t327 = (-t648 * t763 - t654 * t994) * t747 + t741 * t995;
t88 = t790 + (-t1215 * t752 + t1238 * t755) * t786 + (-t1215 * t527 + t1238 * t528) * t791 + ((-t221 - t1172) * t755 + (-t220 - t1169) * t752) * t792 + ((-t1215 * t755 - t1238 * t752) * t785 + (-t220 * t755 + t221 * t752) * t791) * t754;
t1232 = (t142 * t235 + t148 * t236 + t327 * t88) * t996 - t741 * g(1);
t396 = t1018 * t665 - t792 * t880;
t141 = t788 + t218 * t793 + t396 * t1010 + (-t1038 * t396 + t218 * t751) * t791 + t841 * t377 + t815 * t490;
t147 = t789 + t219 * t793 - t396 * t1037 + (-t1020 * t396 + t219 * t751) * t791 - t841 * t1235 + t816 * t490;
t1116 = t721 * t766;
t1062 = t746 * t762;
t653 = t715 * t764 + t727 * t760;
t469 = t653 * t740 * t766 + t1062;
t647 = t715 * t760 - t764 * t727;
t1097 = t733 * t740;
t916 = t1097 * t647 + t721 * t653;
t233 = (-t1116 * t647 + t469 * t733) * t759 + t763 * t916;
t860 = t1119 * t647 - t653 * t733;
t234 = (-t647 * t733 * t766 - t469 * t721) * t759 - t860 * t763;
t326 = (-t647 * t763 - t653 * t994) * t746 + t740 * t995;
t87 = t790 + (t1235 * t755 - t377 * t752) * t786 + (t1235 * t528 - t377 * t527) * t791 + ((-t219 - t1173) * t755 + (-t218 - t1176) * t752) * t792 + ((-t1235 * t752 - t377 * t755) * t785 + (-t218 * t755 + t219 * t752) * t791) * t754;
t1231 = (t141 * t233 + t147 * t234 + t326 * t87) * t996 - t740 * g(1);
t395 = t1018 * t664 - t792 * t881;
t140 = t788 + t216 * t793 + t395 * t1010 + (-t1038 * t395 + t216 * t751) * t791 + t841 * t376 + t815 * t489;
t146 = t789 + t217 * t793 - t395 * t1037 + (-t1020 * t395 + t217 * t751) * t791 - t841 * t1236 + t816 * t489;
t1120 = t720 * t766;
t1064 = t745 * t762;
t652 = t714 * t764 + t726 * t760;
t468 = t652 * t739 * t766 + t1064;
t646 = t714 * t760 - t764 * t726;
t1100 = t732 * t739;
t917 = t1100 * t646 + t720 * t652;
t231 = (-t1120 * t646 + t468 * t732) * t759 + t763 * t917;
t861 = t1123 * t646 - t652 * t732;
t232 = (-t646 * t732 * t766 - t468 * t720) * t759 - t861 * t763;
t325 = (-t646 * t763 - t652 * t994) * t745 + t739 * t995;
t86 = t790 + (t1236 * t755 - t376 * t752) * t786 + (t1236 * t528 - t376 * t527) * t791 + ((-t217 - t1174) * t755 + (-t216 - t1177) * t752) * t792 + ((-t1236 * t752 - t376 * t755) * t785 + (-t216 * t755 + t217 * t752) * t791) * t754;
t1230 = (t140 * t231 + t146 * t232 + t325 * t86) * t996 - t739 * g(1);
t394 = t1018 * t663 - t792 * t882;
t139 = t788 + t214 * t793 + t394 * t1010 + (-t1038 * t394 + t214 * t751) * t791 + t841 * t375 + t815 * t488;
t145 = t789 + t215 * t793 - t394 * t1037 + (-t1020 * t394 + t215 * t751) * t791 - t841 * t1237 + t816 * t488;
t1124 = t719 * t766;
t1066 = t744 * t762;
t651 = t713 * t764 + t725 * t760;
t467 = t651 * t738 * t766 + t1066;
t645 = t713 * t760 - t764 * t725;
t1103 = t731 * t738;
t918 = t1103 * t645 + t719 * t651;
t229 = (-t1124 * t645 + t467 * t731) * t759 + t763 * t918;
t862 = t1127 * t645 - t651 * t731;
t230 = (-t645 * t731 * t766 - t467 * t719) * t759 - t862 * t763;
t324 = (-t645 * t763 - t651 * t994) * t744 + t738 * t995;
t85 = t790 + (t1237 * t755 - t375 * t752) * t786 + (t1237 * t528 - t375 * t527) * t791 + ((-t215 - t1175) * t755 + (-t214 - t1178) * t752) * t792 + ((-t1237 * t752 - t375 * t755) * t785 + (-t214 * t755 + t215 * t752) * t791) * t754;
t1229 = (t139 * t229 + t145 * t230 + t324 * t85) * t996 - t738 * g(1);
t1228 = t754 * t787 + t990;
t855 = t744 * t651;
t853 = t745 * t652;
t851 = t746 * t653;
t849 = t747 * t654;
t847 = t748 * t655;
t845 = t749 * t656;
t1053 = t750 * t792;
t337 = -t750 * t1228 + (-t1018 * t753 + t1053 * t751) * t793 + t753 * t786;
t579 = t1017 * t753 + t1053;
t683 = t751 * t793 + t791;
t477 = t579 * t683;
t308 = t337 - t477;
t1022 = t753 * t792;
t577 = t1017 * t750 - t1022;
t474 = t577 * t579;
t576 = t751 * t787 + t754 * t989 + t785;
t1227 = -t474 + t576;
t1226 = t477 + t337;
t338 = (-t1018 * t750 - t1022 * t751) * t793 + t750 * t786 + t1228 * t753;
t478 = t577 * t683;
t314 = -t478 - t338;
t1225 = -t478 + t338;
t334 = t576 + t474;
t1068 = t743 * t764;
t1069 = t743 * t760;
t1214 = t736 * ((-t1069 * t1217 + t1240 * t764) * t718 + (t1068 * t1217 + t1240 * t760) * t730) + ((t1068 * t1240 - t1217 * t760) * t730 - (t1069 * t1240 + t1217 * t764) * t718) * t724;
t1071 = t742 * t764;
t1072 = t742 * t760;
t1213 = t735 * ((-t1072 * t1216 + t1239 * t764) * t717 + (t1071 * t1216 + t1239 * t760) * t729) + ((t1071 * t1239 - t1216 * t760) * t729 - t717 * (t1072 * t1239 + t1216 * t764)) * t723;
t1074 = t741 * t764;
t1075 = t741 * t760;
t1212 = t734 * ((-t1075 * t1215 + t1238 * t764) * t716 + (t1074 * t1215 + t1238 * t760) * t728) + ((t1074 * t1238 - t1215 * t760) * t728 - t716 * (t1075 * t1238 + t1215 * t764)) * t722;
t1077 = t740 * t764;
t1078 = t740 * t760;
t1211 = t733 * ((-t1078 * t377 + t1235 * t764) * t715 + (t1077 * t377 + t1235 * t760) * t727) + ((t1077 * t1235 - t377 * t760) * t727 - t715 * (t1078 * t1235 + t377 * t764)) * t721;
t1080 = t739 * t764;
t1081 = t739 * t760;
t1210 = t732 * ((-t1081 * t376 + t1236 * t764) * t714 + (t1080 * t376 + t1236 * t760) * t726) + ((t1080 * t1236 - t376 * t760) * t726 - t714 * (t1081 * t1236 + t376 * t764)) * t720;
t1083 = t738 * t764;
t1084 = t738 * t760;
t1209 = t731 * ((-t1084 * t375 + t1237 * t764) * t713 + (t1083 * t375 + t1237 * t760) * t725) + ((t1083 * t1237 - t375 * t760) * t725 - (t1084 * t1237 + t375 * t764) * t713) * t719;
t473 = t577 ^ 2;
t475 = t579 ^ 2;
t547 = t683 ^ 2;
t1208 = g(1) * t760;
t1207 = g(1) * t764;
t1206 = g(2) * t760;
t1205 = g(3) * t731;
t1204 = g(3) * t732;
t1203 = g(3) * t733;
t1202 = g(3) * t734;
t1201 = g(3) * t735;
t1200 = g(3) * t736;
t1199 = g(3) * t759;
t1192 = t788 - g(3);
t1191 = t789 - g(2);
t761 = sin(pkin(5));
t991 = t763 * t766;
t631 = t759 * t764 + t760 * t991;
t632 = t759 * t760 - t764 * t991;
t893 = t631 * t713 + t632 * t725;
t765 = cos(pkin(5));
t992 = t762 * t765;
t316 = t645 * t992 + t761 * t893;
t1184 = t316 * t744;
t891 = t631 * t714 + t632 * t726;
t317 = t646 * t992 + t761 * t891;
t1183 = t317 * t745;
t889 = t631 * t715 + t632 * t727;
t318 = t647 * t992 + t761 * t889;
t1182 = t318 * t746;
t887 = t631 * t716 + t632 * t728;
t319 = t648 * t992 + t761 * t887;
t1181 = t319 * t747;
t885 = t631 * t717 + t632 * t729;
t320 = t649 * t992 + t761 * t885;
t1180 = t320 * t748;
t883 = t631 * t718 + t632 * t730;
t321 = t650 * t992 + t761 * t883;
t1179 = t321 * t749;
t1160 = t631 * t738;
t1159 = t631 * t739;
t1158 = t631 * t740;
t1157 = t631 * t741;
t1156 = t631 * t742;
t1155 = t631 * t743;
t1154 = t632 * t738;
t1153 = t632 * t739;
t1152 = t632 * t740;
t1151 = t632 * t741;
t1150 = t632 * t742;
t1149 = t632 * t743;
t1148 = t645 * t744;
t1147 = t646 * t745;
t1146 = t647 * t746;
t1145 = t648 * t747;
t1144 = t649 * t748;
t1143 = t650 * t749;
t1126 = t719 * t760;
t1125 = t719 * t764;
t1122 = t720 * t760;
t1121 = t720 * t764;
t1118 = t721 * t760;
t1117 = t721 * t764;
t1114 = t722 * t760;
t1113 = t722 * t764;
t1110 = t723 * t760;
t1109 = t723 * t764;
t1106 = t724 * t760;
t1105 = t724 * t764;
t1085 = t738 * t759;
t1082 = t739 * t759;
t1079 = t740 * t759;
t1076 = t741 * t759;
t1073 = t742 * t759;
t1070 = t743 * t759;
t1067 = t744 * t759;
t1065 = t745 * t759;
t1063 = t746 * t759;
t1061 = t747 * t759;
t1059 = t748 * t759;
t1057 = t749 * t759;
t1055 = t750 * t752;
t1054 = t750 * t754;
t1039 = t752 * t753;
t1024 = t753 * t754;
t1023 = t753 * t755;
t757 = 0.1e1 / t761;
t997 = t756 * t757;
t993 = t762 * t763;
t894 = t631 * t725 - t632 * t713;
t175 = (-t1103 * t893 - t719 * t894) * t761 - t918 * t992;
t181 = (t1127 * t893 - t731 * t894) * t761 + t862 * t992;
t936 = t744 * t85 * t997;
t944 = t757 * t996;
t982 = t316 * t758 * t936 + (t139 * t175 + t145 * t181) * t944;
t892 = t631 * t726 - t632 * t714;
t176 = (-t1100 * t891 - t720 * t892) * t761 - t917 * t992;
t182 = (t1123 * t891 - t732 * t892) * t761 + t861 * t992;
t935 = t745 * t86 * t997;
t981 = t317 * t758 * t935 + (t140 * t176 + t146 * t182) * t944;
t890 = t631 * t727 - t632 * t715;
t177 = (-t1097 * t889 - t721 * t890) * t761 - t916 * t992;
t183 = (t1119 * t889 - t733 * t890) * t761 + t860 * t992;
t934 = t746 * t87 * t997;
t980 = t318 * t758 * t934 + (t141 * t177 + t147 * t183) * t944;
t979 = g(2) * t991;
t978 = g(3) * t991;
t888 = t631 * t728 - t632 * t716;
t178 = (-t1094 * t887 - t722 * t888) * t761 - t915 * t992;
t184 = (t1115 * t887 - t734 * t888) * t761 + t859 * t992;
t933 = t747 * t88 * t997;
t977 = t319 * t758 * t933 + (t142 * t178 + t148 * t184) * t944;
t886 = t631 * t729 - t632 * t717;
t179 = (-t1091 * t885 - t723 * t886) * t761 - t914 * t992;
t185 = (t1111 * t885 - t735 * t886) * t761 + t858 * t992;
t932 = t748 * t89 * t997;
t976 = t320 * t758 * t932 + (t143 * t179 + t149 * t185) * t944;
t884 = t631 * t730 - t632 * t718;
t180 = (-t1088 * t883 - t724 * t884) * t761 - t913 * t992;
t186 = (t1107 * t883 - t736 * t884) * t761 + t857 * t992;
t931 = t749 * t90 * t997;
t975 = t321 * t758 * t931 + (t144 * t180 + t150 * t186) * t944;
t49 = -t645 * t936 + (t139 * t918 - t145 * t862) * t997;
t50 = -t646 * t935 + (t140 * t917 - t146 * t861) * t997;
t51 = -t647 * t934 + (t141 * t916 - t147 * t860) * t997;
t52 = -t648 * t933 + (t142 * t915 - t148 * t859) * t997;
t53 = -t649 * t932 + (t143 * t914 - t149 * t858) * t997;
t54 = -t650 * t931 + (t144 * t913 - t150 * t857) * t997;
t967 = t738 * t991;
t965 = t739 * t991;
t963 = t740 * t991;
t961 = t741 * t991;
t959 = t742 * t991;
t957 = t743 * t991;
t956 = t744 * t991;
t955 = t745 * t991;
t954 = t746 * t991;
t953 = t747 * t991;
t952 = t748 * t991;
t951 = t749 * t991;
t937 = t761 * t993;
t930 = g(2) * t719 - t1205;
t929 = g(2) * t720 - t1204;
t928 = g(2) * t721 - t1203;
t927 = g(2) * t722 - t1202;
t926 = g(2) * t723 - t1201;
t925 = g(2) * t724 - t1200;
t442 = -(t1009 * t751 + t1030) * t750 + (t1003 * t751 - t1036) * t753;
t345 = t1016 * t755 - t442;
t443 = -(t1008 * t751 + t1029) * t750 + (t1002 * t751 - t1035) * t753;
t346 = t1015 * t755 - t443;
t444 = -(t1007 * t751 + t1028) * t750 + (t1001 * t751 - t1034) * t753;
t347 = t1014 * t755 - t444;
t445 = -(t1006 * t751 + t1027) * t750 + (t1000 * t751 - t1033) * t753;
t348 = t1013 * t755 - t445;
t446 = -(t1005 * t751 + t1026) * t750 + (t751 * t999 - t1032) * t753;
t349 = t1012 * t755 - t446;
t447 = -(t1004 * t751 + t1025) * t750 + (t751 * t998 - t1031) * t753;
t350 = t1011 * t755 - t447;
t552 = -t1084 * t719 + t1101;
t564 = t1083 * t719 + t1102;
t906 = t552 * t725 - t564 * t713;
t553 = t1084 * t731 + t1125;
t565 = t1083 * t731 - t1126;
t905 = t553 * t725 + t565 * t713;
t554 = -t1081 * t720 + t1098;
t566 = t1080 * t720 + t1099;
t904 = t554 * t726 - t566 * t714;
t555 = t1081 * t732 + t1121;
t567 = t1080 * t732 - t1122;
t903 = t555 * t726 + t567 * t714;
t556 = -t1078 * t721 + t1095;
t568 = t1077 * t721 + t1096;
t902 = t556 * t727 - t568 * t715;
t557 = t1078 * t733 + t1117;
t569 = t1077 * t733 - t1118;
t901 = t557 * t727 + t569 * t715;
t558 = -t1075 * t722 + t1092;
t570 = t1074 * t722 + t1093;
t900 = t558 * t728 - t570 * t716;
t559 = t1075 * t734 + t1113;
t571 = t1074 * t734 - t1114;
t899 = t559 * t728 + t571 * t716;
t560 = -t1072 * t723 + t1089;
t572 = t1071 * t723 + t1090;
t898 = t560 * t729 - t572 * t717;
t561 = t1072 * t735 + t1109;
t573 = t1071 * t735 - t1110;
t897 = t561 * t729 + t573 * t717;
t562 = -t1069 * t724 + t1086;
t574 = t1068 * t724 + t1087;
t896 = t562 * t730 - t574 * t718;
t563 = t1069 * t736 + t1105;
t575 = t1068 * t736 - t1106;
t895 = t563 * t730 + t575 * t718;
t856 = t744 * t488;
t854 = t745 * t489;
t852 = t746 * t490;
t850 = t747 * t491;
t848 = t748 * t492;
t846 = t749 * t493;
t840 = t754 * t855;
t839 = t754 * t853;
t838 = t754 * t851;
t837 = t754 * t849;
t836 = t754 * t847;
t835 = t754 * t845;
t834 = g(1) * t1067 - (-g(2) * t1085 + t978) * t719 - (g(3) * t1085 + t979) * t731;
t833 = g(1) * t1065 - (-g(2) * t1082 + t978) * t720 - (g(3) * t1082 + t979) * t732;
t832 = g(1) * t1063 - (-g(2) * t1079 + t978) * t721 - (g(3) * t1079 + t979) * t733;
t831 = g(1) * t1061 - (-g(2) * t1076 + t978) * t722 - (g(3) * t1076 + t979) * t734;
t830 = g(1) * t1059 - (-g(2) * t1073 + t978) * t723 - (g(3) * t1073 + t979) * t735;
t829 = g(1) * t1057 - (-g(2) * t1070 + t978) * t724 - (g(3) * t1070 + t979) * t736;
t712 = g(2) * t759;
t828 = g(1) * t956 - (g(3) * t967 - t712) * t731 + (g(2) * t967 + t1199) * t719;
t827 = g(1) * t955 - (g(3) * t965 - t712) * t732 + (g(2) * t965 + t1199) * t720;
t826 = g(1) * t954 - (g(3) * t963 - t712) * t733 + (g(2) * t963 + t1199) * t721;
t825 = g(1) * t953 - (g(3) * t961 - t712) * t734 + (g(2) * t961 + t1199) * t722;
t824 = g(1) * t952 - (g(3) * t959 - t712) * t735 + (g(2) * t959 + t1199) * t723;
t823 = g(1) * t951 - (g(3) * t957 - t712) * t736 + (g(2) * t957 + t1199) * t724;
t31 = t744 * t930 + t1229;
t32 = t745 * t929 + t1230;
t33 = t746 * t928 + t1231;
t34 = t747 * t927 + t1232;
t35 = t748 * t926 + t1233;
t36 = t749 * t925 + t1234;
t822 = t744 * g(2) * t1124 + t982 + (-t1205 * t744 + t1229) * t766;
t821 = t745 * g(2) * t1120 + t981 + (-t1204 * t745 + t1230) * t766;
t820 = t746 * g(2) * t1116 + t980 + (-t1203 * t746 + t1231) * t766;
t819 = t747 * g(2) * t1112 + t977 + (-t1202 * t747 + t1232) * t766;
t818 = t748 * g(2) * t1108 + t976 + (-t1201 * t748 + t1233) * t766;
t817 = t749 * g(2) * t1104 + t975 + (-t1200 * t749 + t1234) * t766;
t709 = t760 * g(3);
t710 = t764 * g(3);
t711 = t764 * g(2);
t19 = (((g(3) * t1084 + t711) * t725 + t713 * (g(3) * t1083 - t1206)) * t731 + ((-g(2) * t1084 + t710) * t719 - t744 * t1208) * t725 - ((g(2) * t1083 + t709) * t719 + t744 * t1207) * t713) * t762 + t822;
t20 = (((g(3) * t1081 + t711) * t726 + t714 * (g(3) * t1080 - t1206)) * t732 + ((-g(2) * t1081 + t710) * t720 - t745 * t1208) * t726 - ((g(2) * t1080 + t709) * t720 + t745 * t1207) * t714) * t762 + t821;
t21 = (((g(3) * t1078 + t711) * t727 + t715 * (g(3) * t1077 - t1206)) * t733 + ((-g(2) * t1078 + t710) * t721 - t746 * t1208) * t727 - ((g(2) * t1077 + t709) * t721 + t746 * t1207) * t715) * t762 + t820;
t22 = (((g(3) * t1075 + t711) * t728 + t716 * (g(3) * t1074 - t1206)) * t734 + ((-g(2) * t1075 + t710) * t722 - t747 * t1208) * t728 - ((g(2) * t1074 + t709) * t722 + t747 * t1207) * t716) * t762 + t819;
t23 = (((g(3) * t1072 + t711) * t729 + t717 * (g(3) * t1071 - t1206)) * t735 + ((-g(2) * t1072 + t710) * t723 - t748 * t1208) * t729 - ((g(2) * t1071 + t709) * t723 + t748 * t1207) * t717) * t762 + t818;
t24 = (((g(3) * t1069 + t711) * t730 + t718 * (g(3) * t1068 - t1206)) * t736 + ((-g(2) * t1069 + t710) * t724 - t749 * t1208) * t730 - ((g(2) * t1068 + t709) * t724 + t749 * t1207) * t718) * t762 + t817;
t737 = t790 - g(1);
t681 = g(2) * t736 + g(3) * t724;
t680 = g(2) * t735 + g(3) * t723;
t679 = g(2) * t734 + g(3) * t722;
t678 = g(2) * t733 + g(3) * t721;
t677 = g(2) * t732 + g(3) * t720;
t676 = g(2) * t731 + g(3) * t719;
t551 = -t1023 * t751 + t1055;
t550 = t1046 * t750 + t1039;
t549 = t1039 * t751 + t750 * t755;
t548 = -t1055 * t751 + t1023;
t499 = g(1) * t749 + t743 * t925;
t498 = g(1) * t748 + t742 * t926;
t497 = g(1) * t747 + t741 * t927;
t496 = g(1) * t746 + t740 * t928;
t495 = g(1) * t745 + t739 * t929;
t494 = g(1) * t744 + t738 * t930;
t476 = t1020 * t1192 - t1038 * t1191 + t751 * t737;
t454 = -t547 + t473;
t387 = -t475 + t547;
t374 = t1068 * t668 + t760 * t877;
t373 = t1071 * t667 + t760 * t878;
t372 = t1074 * t666 + t760 * t879;
t371 = t1077 * t665 + t760 * t880;
t370 = t1080 * t664 + t760 * t881;
t369 = t1083 * t663 + t760 * t882;
t368 = t1068 * t877 - t668 * t760;
t367 = t1071 * t878 - t667 * t760;
t366 = t1074 * t879 - t666 * t760;
t365 = t1077 * t880 - t665 * t760;
t364 = t1080 * t881 - t664 * t760;
t363 = t1083 * t882 - t663 * t760;
t362 = -t1069 * t668 + t764 * t877;
t361 = -t1072 * t667 + t764 * t878;
t360 = -t1075 * t666 + t764 * t879;
t359 = -t1078 * t665 + t764 * t880;
t358 = -t1081 * t664 + t764 * t881;
t357 = -t1084 * t663 + t764 * t882;
t356 = t1069 * t877 + t668 * t764;
t355 = t1072 * t878 + t667 * t764;
t354 = t1075 * t879 + t666 * t764;
t353 = t1078 * t880 + t665 * t764;
t352 = t1081 * t881 + t664 * t764;
t351 = t1084 * t882 + t663 * t764;
t336 = -t473 + t475;
t331 = -t547 - t475;
t330 = -t547 - t473;
t323 = t1024 * t737 + t1191 * t549 + t1192 * t551;
t322 = t1054 * t737 - t1191 * t548 - t1192 * t550;
t315 = -t473 - t475;
t306 = t1088 * t493 + t350 * t749;
t305 = t1091 * t492 + t349 * t748;
t304 = t1094 * t491 + t348 * t747;
t303 = t1097 * t490 + t347 * t746;
t302 = t1100 * t489 + t346 * t745;
t301 = t1103 * t488 + t345 * t744;
t294 = t350 * t1057 + t493 * (t1070 * t736 + t724 * t991);
t293 = t349 * t1059 + t492 * (t1073 * t735 + t723 * t991);
t292 = t348 * t1061 + t491 * (t1076 * t734 + t722 * t991);
t291 = t347 * t1063 + t490 * (t1079 * t733 + t721 * t991);
t290 = t346 * t1065 + t489 * (t1082 * t732 + t720 * t991);
t289 = t345 * t1067 + t488 * (t1085 * t731 + t719 * t991);
t288 = -t1219 * t1057 + t493 * (-t1070 * t724 + t736 * t991);
t287 = -t1224 * t1059 + t492 * (-t1073 * t723 + t735 * t991);
t286 = -t1223 * t1061 + t491 * (-t1076 * t722 + t734 * t991);
t285 = -t1222 * t1063 + t490 * (-t1079 * t721 + t733 * t991);
t284 = -t1221 * t1065 + t489 * (-t1082 * t720 + t732 * t991);
t283 = -t1220 * t1067 + t488 * (-t1085 * t719 + t731 * t991);
t264 = t350 * t951 + t493 * (-t724 * t759 + t736 * t957);
t263 = t349 * t952 + t492 * (-t723 * t759 + t735 * t959);
t262 = t348 * t953 + t491 * (-t722 * t759 + t734 * t961);
t261 = t347 * t954 + t490 * (-t721 * t759 + t733 * t963);
t260 = t346 * t955 + t489 * (-t720 * t759 + t732 * t965);
t259 = t345 * t956 + t488 * (-t719 * t759 + t731 * t967);
t258 = -t1219 * t951 - t493 * (t724 * t957 + t736 * t759);
t257 = -t1224 * t952 - t492 * (t723 * t959 + t735 * t759);
t256 = -t1223 * t953 - t491 * (t722 * t961 + t734 * t759);
t255 = -t1222 * t954 - t490 * (t721 * t963 + t733 * t759);
t254 = -t1221 * t955 - t489 * (t720 * t965 + t732 * t759);
t253 = -t1220 * t956 - t488 * (t719 * t967 + t731 * t759);
t252 = t362 * t718 + t374 * t730;
t251 = t361 * t717 + t373 * t729;
t250 = t360 * t716 + t372 * t728;
t249 = t359 * t715 + t371 * t727;
t248 = t358 * t714 + t370 * t726;
t247 = t357 * t713 + t369 * t725;
t246 = -t356 * t718 + t368 * t730;
t245 = -t355 * t717 + t367 * t729;
t244 = -t354 * t716 + t366 * t728;
t243 = -t353 * t715 + t365 * t727;
t242 = -t352 * t714 + t364 * t726;
t241 = -t351 * t713 + t363 * t725;
t198 = -t668 * t1056 + (t362 * t730 - t374 * t718) * t766;
t197 = -t667 * t1058 + (t361 * t729 - t373 * t717) * t766;
t196 = -t666 * t1060 + (t360 * t728 - t372 * t716) * t766;
t195 = -t665 * t1062 + (t359 * t727 - t371 * t715) * t766;
t194 = -t664 * t1064 + (t358 * t726 - t370 * t714) * t766;
t193 = -t663 * t1066 + (t357 * t725 - t369 * t713) * t766;
t192 = t877 * t1056 + (t356 * t730 + t368 * t718) * t766;
t191 = t878 * t1058 + (t355 * t729 + t367 * t717) * t766;
t190 = t879 * t1060 + (t354 * t728 + t366 * t716) * t766;
t189 = t880 * t1062 + (t353 * t727 + t365 * t715) * t766;
t188 = t881 * t1064 + (t352 * t726 + t364 * t714) * t766;
t187 = t882 * t1066 + (t351 * t725 + t363 * t713) * t766;
t168 = (-t1106 * t493 + t306 * t764) * t730 - t718 * (t1105 * t493 + t306 * t760);
t167 = (-t1110 * t492 + t305 * t764) * t729 - t717 * (t1109 * t492 + t305 * t760);
t166 = (-t1114 * t491 + t304 * t764) * t728 - t716 * (t1113 * t491 + t304 * t760);
t165 = (-t1118 * t490 + t303 * t764) * t727 - t715 * (t1117 * t490 + t303 * t760);
t164 = (-t1122 * t489 + t302 * t764) * t726 - t714 * (t1121 * t489 + t302 * t760);
t163 = (-t1126 * t488 + t301 * t764) * t725 - t713 * (t1125 * t488 + t301 * t760);
t162 = t763 * (-t349 * t1144 + (-t561 * t717 + t573 * t729) * t492) + (t349 * t742 - t735 * t848) * t995 + (t897 * t1138 + t446 * t847 + (-t751 * t897 - t755 * t836) * t801) * t994;
t161 = t763 * (-t348 * t1145 + (-t559 * t716 + t571 * t728) * t491) + (t348 * t741 - t734 * t850) * t995 + (t899 * t1139 + t445 * t849 + (-t751 * t899 - t755 * t837) * t800) * t994;
t160 = t763 * (-t347 * t1146 + (-t557 * t715 + t569 * t727) * t490) + (t347 * t740 - t733 * t852) * t995 + (t901 * t1140 + t444 * t851 + (-t751 * t901 - t755 * t838) * t799) * t994;
t159 = t763 * (-t346 * t1147 + (-t555 * t714 + t567 * t726) * t489) + (t346 * t739 - t732 * t854) * t995 + (t903 * t1141 + t443 * t853 + (-t751 * t903 - t755 * t839) * t798) * t994;
t158 = t763 * (-t345 * t1148 + (-t553 * t713 + t565 * t725) * t488) + (t345 * t738 - t731 * t856) * t995 + (t905 * t1142 + t442 * t855 + (-t751 * t905 - t755 * t840) * t797) * t994;
t157 = t763 * (-t350 * t1143 + (-t563 * t718 + t575 * t730) * t493) + (t350 * t743 - t736 * t846) * t995 + (-t895 * t1137 + t447 * t845 + (-t751 * t895 - t755 * t835) * t802) * t994;
t156 = -t763 * (t1224 * t1144 - (t560 * t717 + t572 * t729) * t492) + (t1224 * t742 - t723 * t848) * t995 + (-t898 * t1138 + t440 * t847 + (t751 * t898 - t752 * t836) * t801) * t994;
t155 = -t763 * (t1223 * t1145 - (t558 * t716 + t570 * t728) * t491) + (t1223 * t741 - t722 * t850) * t995 + (-t900 * t1139 + t439 * t849 + (t751 * t900 - t752 * t837) * t800) * t994;
t154 = -t763 * (t1222 * t1146 - (t556 * t715 + t568 * t727) * t490) + (t1222 * t740 - t721 * t852) * t995 + (-t902 * t1140 + t438 * t851 + (t751 * t902 - t752 * t838) * t799) * t994;
t153 = -t763 * (t1221 * t1147 - (t554 * t714 + t566 * t726) * t489) + (t1221 * t739 - t720 * t854) * t995 + (-t904 * t1141 + t437 * t853 + (t751 * t904 - t752 * t839) * t798) * t994;
t152 = -t763 * (t1220 * t1148 - (t552 * t713 + t564 * t725) * t488) + (t1220 * t738 - t719 * t856) * t995 + (-t906 * t1142 + t436 * t855 + (t751 * t906 - t752 * t840) * t797) * t994;
t151 = -t763 * (t1219 * t1143 - (t562 * t718 + t574 * t730) * t493) + (t1219 * t743 - t724 * t846) * t995 + (t896 * t1137 + t441 * t845 + (t751 * t896 - t752 * t835) * t802) * t994;
t138 = ((-t264 * t764 + t294 * t760) * t730 + (t264 * t760 + t294 * t764) * t718) * t761 - t168 * t992;
t137 = ((-t263 * t764 + t293 * t760) * t729 + (t263 * t760 + t293 * t764) * t717) * t761 - t167 * t992;
t136 = ((-t262 * t764 + t292 * t760) * t728 + (t262 * t760 + t292 * t764) * t716) * t761 - t166 * t992;
t135 = ((-t261 * t764 + t291 * t760) * t727 + (t261 * t760 + t291 * t764) * t715) * t761 - t165 * t992;
t134 = ((-t260 * t764 + t290 * t760) * t726 + (t260 * t760 + t290 * t764) * t714) * t761 - t164 * t992;
t133 = ((-t259 * t764 + t289 * t760) * t725 + (t259 * t760 + t289 * t764) * t713) * t761 - t163 * t992;
t132 = ((t258 * t764 - t288 * t760) * t730 - (t258 * t760 + t288 * t764) * t718) * t761 - t1258 * t992;
t131 = ((t257 * t764 - t287 * t760) * t729 - (t257 * t760 + t287 * t764) * t717) * t761 - t1257 * t992;
t130 = ((t256 * t764 - t286 * t760) * t728 - (t256 * t760 + t286 * t764) * t716) * t761 - t1256 * t992;
t129 = ((t255 * t764 - t285 * t760) * t727 - (t255 * t760 + t285 * t764) * t715) * t761 - t1255 * t992;
t128 = ((t254 * t764 - t284 * t760) * t726 - (t254 * t760 + t284 * t764) * t714) * t761 - t1254 * t992;
t127 = ((t253 * t764 - t283 * t760) * t725 - (t253 * t760 + t283 * t764) * t713) * t761 - t1253 * t992;
t78 = (((-t1149 * t1217 + t1240 * t631) * t730 + (-t1155 * t1217 - t1240 * t632) * t718) * t736 + t724 * ((-t1149 * t1240 - t1217 * t631) * t730 - (t1155 * t1240 - t1217 * t632) * t718)) * t761 + t1214 * t992;
t77 = (((-t1150 * t1216 + t1239 * t631) * t729 + (-t1156 * t1216 - t1239 * t632) * t717) * t735 + t723 * ((-t1150 * t1239 - t1216 * t631) * t729 - (t1156 * t1239 - t1216 * t632) * t717)) * t761 + t1213 * t992;
t76 = (((-t1151 * t1215 + t1238 * t631) * t728 + (-t1157 * t1215 - t1238 * t632) * t716) * t734 + t722 * ((-t1151 * t1238 - t1215 * t631) * t728 - (t1157 * t1238 - t1215 * t632) * t716)) * t761 + t1212 * t992;
t75 = (((-t1152 * t377 + t1235 * t631) * t727 + (-t1158 * t377 - t1235 * t632) * t715) * t733 + t721 * ((-t1152 * t1235 - t377 * t631) * t727 - (t1158 * t1235 - t377 * t632) * t715)) * t761 + t1211 * t992;
t74 = (((-t1153 * t376 + t1236 * t631) * t726 + (-t1159 * t376 - t1236 * t632) * t714) * t732 + t720 * ((-t1153 * t1236 - t376 * t631) * t726 - (t1159 * t1236 - t376 * t632) * t714)) * t761 + t1210 * t992;
t73 = (((-t1154 * t375 + t1237 * t631) * t725 + (-t1160 * t375 - t1237 * t632) * t713) * t731 + t719 * ((-t1154 * t1237 - t375 * t631) * t725 - (t1160 * t1237 - t375 * t632) * t713)) * t761 + t1209 * t992;
t60 = ((-t192 * t752 - t198 * t755) * t736 + t724 * (t192 * t755 - t198 * t752)) * t759 - t763 * ((-t246 * t752 + t252 * t755) * t736 + (t246 * t755 + t252 * t752) * t724);
t59 = ((-t191 * t752 - t197 * t755) * t735 + t723 * (t191 * t755 - t197 * t752)) * t759 - t763 * ((-t245 * t752 + t251 * t755) * t735 + (t245 * t755 + t251 * t752) * t723);
t58 = ((-t190 * t752 - t196 * t755) * t734 + t722 * (t190 * t755 - t196 * t752)) * t759 - t763 * ((-t244 * t752 + t250 * t755) * t734 + (t244 * t755 + t250 * t752) * t722);
t57 = ((-t189 * t752 - t195 * t755) * t733 + t721 * (t189 * t755 - t195 * t752)) * t759 - t763 * ((-t243 * t752 + t249 * t755) * t733 + (t243 * t755 + t249 * t752) * t721);
t56 = ((-t188 * t752 - t194 * t755) * t732 + t720 * (t188 * t755 - t194 * t752)) * t759 - t763 * ((-t242 * t752 + t248 * t755) * t732 + (t242 * t755 + t248 * t752) * t720);
t55 = ((-t187 * t752 - t193 * t755) * t731 + t719 * (t187 * t755 - t193 * t752)) * t759 - t763 * ((-t241 * t752 + t247 * t755) * t731 + (t241 * t755 + t247 * t752) * t719);
t48 = t765 * t54;
t47 = t765 * t53;
t46 = t765 * t52;
t45 = t765 * t51;
t44 = t765 * t50;
t43 = t765 * t49;
t30 = t766 * t975 + t36;
t29 = t766 * t976 + t35;
t28 = t766 * t977 + t34;
t27 = t766 * t980 + t33;
t26 = t766 * t981 + t32;
t25 = t766 * t982 + t31;
t18 = t48 + t24;
t17 = t47 + t23;
t16 = t46 + t22;
t15 = t45 + t21;
t14 = t44 + t20;
t13 = t43 + t19;
t12 = (t48 + t975) * t766 - t54 * t937 + t36;
t11 = (t47 + t976) * t766 - t53 * t937 + t35;
t10 = (t46 + t977) * t766 - t52 * t937 + t34;
t9 = (t45 + t980) * t766 - t51 * t937 + t33;
t8 = (t44 + t981) * t766 - t50 * t937 + t32;
t7 = (t43 + t982) * t766 - t49 * t937 + t31;
t6 = ((-t760 * t824 - t764 * t830) * t729 + (t760 * t830 - t764 * t824) * t717 - t35 * t993) * t761 + ((-(t498 * t760 - t680 * t764) * t729 - (t498 * t764 + t680 * t760) * t717) * t762 + t818) * t765 + t53;
t5 = ((-t760 * t825 - t764 * t831) * t728 + (t760 * t831 - t764 * t825) * t716 - t34 * t993) * t761 + ((-(t497 * t760 - t679 * t764) * t728 - (t497 * t764 + t679 * t760) * t716) * t762 + t819) * t765 + t52;
t4 = ((-t760 * t826 - t764 * t832) * t727 + (t760 * t832 - t764 * t826) * t715 - t33 * t993) * t761 + ((-(t496 * t760 - t678 * t764) * t727 - (t496 * t764 + t678 * t760) * t715) * t762 + t820) * t765 + t51;
t3 = ((-t760 * t827 - t764 * t833) * t726 + (t760 * t833 - t764 * t827) * t714 - t32 * t993) * t761 + ((-(t495 * t760 - t677 * t764) * t726 - (t495 * t764 + t677 * t760) * t714) * t762 + t821) * t765 + t50;
t2 = ((-t760 * t823 - t764 * t829) * t730 + (t760 * t829 - t764 * t823) * t718 - t36 * t993) * t761 + ((-(t499 * t760 - t681 * t764) * t730 - (t499 * t764 + t681 * t760) * t718) * t762 + t817) * t765 + t54;
t1 = ((-t760 * t828 - t764 * t834) * t725 + (t760 * t834 - t764 * t828) * t713 - t31 * t993) * t761 + ((-(t494 * t760 - t676 * t764) * t725 - (t494 * t764 + t676 * t760) * t713) * t762 + t822) * t765 + t49;
t37 = [(t31 * t324 + t32 * t325 + t326 * t33 + t327 * t34 + t328 * t35 + t329 * t36) * t996, (t324 * t25 + t325 * t26 + t326 * t27 + t327 * t28 + t328 * t29 + t329 * t30 + (t1179 * t24 + t1180 * t23 + t1181 * t22 + t1182 * t21 + t1183 * t20 + t1184 * t19) * t757) * t996, ((t327 * t10 + t328 * t11 + t329 * t12 + t324 * t7 + t325 * t8 + t326 * t9) * t758 + (-t1 * t1148 - t2 * t1143 - t3 * t1147 - t4 * t1146 - t5 * t1145 - t6 * t1144 + (t1179 * t18 + t1180 * t17 + t1181 * t16 + t1182 * t15 + t1183 * t14 + t1184 * t13) * t758) * t757) * t756, 0, 0, 0, 0, 0, 0, -t308 * t751 + (-t1227 * t750 + t330 * t753) * t754, t1225 * t751 + (-t331 * t750 - t334 * t753) * t754, t315 * t751 + (t1226 * t753 - t314 * t750) * t754, t476 * t751 + (t322 * t750 + t323 * t753) * t754; (t230 * t31 + t232 * t32 + t234 * t33 + t236 * t34 + t238 * t35 + t240 * t36) * t996, (t230 * t25 + t232 * t26 + t234 * t27 + t236 * t28 + t238 * t29 + t240 * t30 + (t181 * t19 + t182 * t20 + t183 * t21 + t184 * t22 + t185 * t23 + t186 * t24) * t757) * t996, ((t10 * t236 + t11 * t238 + t12 * t240 + t230 * t7 + t232 * t8 + t234 * t9) * t758 + (-t862 * t1 - t857 * t2 - t861 * t3 - t860 * t4 - t859 * t5 - t858 * t6 + (t13 * t181 + t14 * t182 + t15 * t183 + t16 * t184 + t17 * t185 + t18 * t186) * t758) * t757) * t756, 0, 0, 0, 0, 0, 0, t1038 * t308 + t1227 * t548 + t330 * t549, -t1038 * t1225 + t331 * t548 - t334 * t549, -t1038 * t315 + t1226 * t549 + t314 * t548, -t1038 * t476 - t322 * t548 + t323 * t549; (t229 * t31 + t231 * t32 + t233 * t33 + t235 * t34 + t237 * t35 + t239 * t36) * t996, (t229 * t25 + t231 * t26 + t233 * t27 + t235 * t28 + t237 * t29 + t239 * t30 + (t175 * t19 + t176 * t20 + t177 * t21 + t178 * t22 + t179 * t23 + t180 * t24) * t757) * t996, ((t10 * t235 + t11 * t237 + t12 * t239 + t229 * t7 + t231 * t8 + t233 * t9) * t758 + (t918 * t1 + t913 * t2 + t917 * t3 + t916 * t4 + t915 * t5 + t914 * t6 + (t13 * t175 + t14 * t176 + t15 * t177 + t16 * t178 + t17 * t179 + t18 * t180) * t758) * t757) * t756, 0, 0, 0, 0, 0, 0, -t1020 * t308 + t1227 * t550 + t330 * t551, t1020 * t1225 + t331 * t550 - t334 * t551, t1020 * t315 + t1226 * t551 + t314 * t550, t1020 * t476 - t322 * t550 + t323 * t551; (t31 * t55 + t32 * t56 + t33 * t57 + t34 * t58 + t35 * t59 + t36 * t60) * t996, (t25 * t55 + t26 * t56 + t27 * t57 + t28 * t58 + t29 * t59 + t30 * t60 + (t19 * t73 + t20 * t74 + t21 * t75 + t22 * t76 + t23 * t77 + t24 * t78) * t757) * t996, ((t10 * t58 + t11 * t59 + t12 * t60 + t55 * t7 + t56 * t8 + t57 * t9) * t758 + (-t1214 * t2 - t1213 * t6 - t1212 * t5 - t1211 * t4 - t1210 * t3 - t1209 * t1 + (t13 * t73 + t14 * t74 + t15 * t75 + t16 * t76 + t17 * t77 + t18 * t78) * t758) * t757) * t756, t338 * t1024 + (-t1054 * t683 + t577 * t751) * t579, t336 * t751 + (-t1225 * t750 + t308 * t753) * t754, -t314 * t751 + (t1227 * t753 - t387 * t750) * t754, -t337 * t1054 + (t1024 * t683 - t579 * t751) * t577, t1226 * t751 + (-t334 * t750 + t454 * t753) * t754, t576 * t751 + (-t577 * t753 + t579 * t750) * t754 * t683, t1054 * t476 - t322 * t751, t1024 * t476 - t323 * t751, (t322 * t753 - t323 * t750) * t754, 0; (t157 * t36 + t158 * t31 + t159 * t32 + t160 * t33 + t161 * t34 + t162 * t35) * t996, (t157 * t30 + t158 * t25 + t159 * t26 + t160 * t27 + t161 * t28 + t162 * t29 + (t133 * t19 + t134 * t20 + t135 * t21 + t136 * t22 + t137 * t23 + t138 * t24) * t757) * t996, ((t10 * t161 + t11 * t162 + t12 * t157 + t158 * t7 + t159 * t8 + t160 * t9) * t758 + (t163 * t1 + t164 * t3 + t165 * t4 + t166 * t5 + t167 * t6 + t168 * t2 + (t13 * t133 + t134 * t14 + t135 * t15 + t136 * t16 + t137 * t17 + t138 * t18) * t758) * t757) * t756, t338 * t549 + (-t1038 * t577 + t548 * t683) * t579, -t1038 * t336 + t1225 * t548 + t308 * t549, t1038 * t314 + t1227 * t549 + t387 * t548, t337 * t548 + (t1038 * t579 + t549 * t683) * t577, -t1038 * t1226 + t334 * t548 + t454 * t549, -t576 * t1038 + (-t548 * t579 - t549 * t577) * t683, t1038 * t322 - t476 * t548, t1038 * t323 + t476 * t549, t322 * t549 + t323 * t548, 0; (t151 * t36 + t152 * t31 + t153 * t32 + t154 * t33 + t155 * t34 + t156 * t35) * t996, (t151 * t30 + t152 * t25 + t153 * t26 + t154 * t27 + t155 * t28 + t156 * t29 + (t127 * t19 + t128 * t20 + t129 * t21 + t130 * t22 + t131 * t23 + t132 * t24) * t757) * t996, ((t10 * t155 + t11 * t156 + t12 * t151 + t152 * t7 + t153 * t8 + t154 * t9) * t758 + (t1258 * t2 + t1257 * t6 + t1256 * t5 + t1255 * t4 + t1254 * t3 + t1253 * t1 + (t127 * t13 + t128 * t14 + t129 * t15 + t130 * t16 + t131 * t17 + t132 * t18) * t758) * t757) * t756, t338 * t551 + (t1020 * t577 + t550 * t683) * t579, t1020 * t336 + t1225 * t550 + t308 * t551, -t1020 * t314 + t1227 * t551 + t387 * t550, t337 * t550 + (-t1020 * t579 + t551 * t683) * t577, t1020 * t1226 + t334 * t550 + t454 * t551, t576 * t1020 + (-t550 * t579 - t551 * t577) * t683, -t1020 * t322 - t476 * t550, -t1020 * t323 + t476 * t551, t322 * t551 + t323 * t550, 0;];
tauX_reg  = t37;
