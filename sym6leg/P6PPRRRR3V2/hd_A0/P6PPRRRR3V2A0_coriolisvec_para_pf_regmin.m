% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PPRRRR3V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d3,d4,theta1,theta2]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x15]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 22:25
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PPRRRR3V2A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPRRRR3V2A0_coriolisvec_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PPRRRR3V2A0_coriolisvec_para_pf_regmin: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPRRRR3V2A0_coriolisvec_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPRRRR3V2A0_coriolisvec_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPRRRR3V2A0_coriolisvec_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPRRRR3V2A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 22:03:36
% EndTime: 2019-05-16 22:06:50
% DurationCPUTime: 259.68s
% Computational Cost: add. (276001->1909), mult. (649114->3621), div. (5436->19), fcn. (566195->64), ass. (0->1272)
t5177 = sin(pkin(9));
t5181 = cos(pkin(10));
t5182 = cos(pkin(9));
t5176 = sin(pkin(10));
t5185 = cos(pkin(4));
t5551 = t5176 * t5185;
t5056 = t5177 * t5551 - t5181 * t5182;
t5538 = t5182 * t5185;
t5061 = t5176 * t5538 + t5177 * t5181;
t5186 = legFrame(6,3);
t5133 = sin(t5186);
t5145 = cos(t5186);
t4817 = -t5056 * t5133 + t5061 * t5145;
t5204 = legFrame(6,2);
t5163 = cos(t5204);
t5198 = sin(qJ(3,6));
t5201 = cos(qJ(3,6));
t5907 = pkin(8) * sin(pkin(6));
t5184 = cos(pkin(5));
t5539 = t5181 * t5185;
t5179 = sin(pkin(5));
t5180 = sin(pkin(4));
t5542 = t5179 * t5180;
t4888 = (t5176 * t5182 + t5177 * t5539) * t5184 - t5177 * t5542;
t4889 = (t5176 * t5177 - t5181 * t5538) * t5184 + t5182 * t5542;
t5974 = t4888 * t5133 + t4889 * t5145;
t6034 = t5163 * (pkin(3) * (t5198 * t4817 + t5201 * t5974) - (t4817 * t5201 - t5198 * t5974) * t5907);
t5187 = legFrame(5,3);
t5134 = sin(t5187);
t5146 = cos(t5187);
t4818 = -t5056 * t5134 + t5061 * t5146;
t5205 = legFrame(5,2);
t5164 = cos(t5205);
t5199 = sin(qJ(3,5));
t5202 = cos(qJ(3,5));
t5973 = t4888 * t5134 + t4889 * t5146;
t6033 = t5164 * (pkin(3) * (t5199 * t4818 + t5202 * t5973) - (t4818 * t5202 - t5199 * t5973) * t5907);
t5188 = legFrame(4,3);
t5135 = sin(t5188);
t5147 = cos(t5188);
t4819 = -t5056 * t5135 + t5061 * t5147;
t5206 = legFrame(4,2);
t5165 = cos(t5206);
t5200 = sin(qJ(3,4));
t5203 = cos(qJ(3,4));
t5972 = t4888 * t5135 + t4889 * t5147;
t6032 = t5165 * (pkin(3) * (t5200 * t4819 + t5203 * t5972) - (t4819 * t5203 - t5200 * t5972) * t5907);
t5222 = xP(6);
t5169 = sin(t5222);
t5236 = koppelP(1,2);
t5172 = cos(t5222);
t5242 = koppelP(1,1);
t5583 = t5172 * t5242;
t5097 = t5169 * t5236 - t5583;
t5223 = xP(5);
t5173 = cos(t5223);
t5170 = sin(t5223);
t5230 = koppelP(1,3);
t5608 = t5170 * t5230;
t4931 = t5097 * t5173 - t5608;
t5103 = t5169 * t5242 + t5172 * t5236;
t5224 = xP(4);
t5174 = cos(t5224);
t5025 = t5174 * t5103;
t5171 = sin(t5224);
t5216 = xDP(6);
t5217 = xDP(5);
t5567 = t5174 * t5217;
t5574 = t5173 * t5230;
t5333 = t5097 * t5170 + t5574;
t4740 = -t5333 * t5171 + t5025;
t5218 = xDP(4);
t6025 = t5218 * t4740;
t4610 = -(t5025 * t5170 - t5097 * t5171) * t5216 - t4931 * t5567 - t6025;
t5235 = koppelP(2,2);
t5241 = koppelP(2,1);
t5584 = t5172 * t5241;
t5096 = t5169 * t5235 - t5584;
t5229 = koppelP(2,3);
t5609 = t5170 * t5229;
t4930 = t5096 * t5173 - t5609;
t5102 = t5169 * t5241 + t5172 * t5235;
t5024 = t5174 * t5102;
t5575 = t5173 * t5229;
t5334 = t5096 * t5170 + t5575;
t4739 = -t5334 * t5171 + t5024;
t6024 = t5218 * t4739;
t4608 = -(t5024 * t5170 - t5096 * t5171) * t5216 - t4930 * t5567 - t6024;
t5234 = koppelP(3,2);
t5240 = koppelP(3,1);
t5585 = t5172 * t5240;
t5095 = t5169 * t5234 - t5585;
t5228 = koppelP(3,3);
t5610 = t5170 * t5228;
t4929 = t5095 * t5173 - t5610;
t5101 = t5169 * t5240 + t5172 * t5234;
t5023 = t5174 * t5101;
t5576 = t5173 * t5228;
t5335 = t5095 * t5170 + t5576;
t4738 = -t5335 * t5171 + t5023;
t6023 = t5218 * t4738;
t4606 = -(t5023 * t5170 - t5095 * t5171) * t5216 - t4929 * t5567 - t6023;
t5233 = koppelP(4,2);
t5239 = koppelP(4,1);
t5586 = t5172 * t5239;
t5094 = t5169 * t5233 - t5586;
t5227 = koppelP(4,3);
t5611 = t5170 * t5227;
t4928 = t5094 * t5173 - t5611;
t5100 = t5169 * t5239 + t5172 * t5233;
t5022 = t5174 * t5100;
t5577 = t5173 * t5227;
t5336 = t5094 * t5170 + t5577;
t4737 = -t5336 * t5171 + t5022;
t6022 = t5218 * t4737;
t4604 = -(t5022 * t5170 - t5094 * t5171) * t5216 - t4928 * t5567 - t6022;
t5232 = koppelP(5,2);
t5238 = koppelP(5,1);
t5587 = t5172 * t5238;
t5093 = t5169 * t5232 - t5587;
t5226 = koppelP(5,3);
t5612 = t5170 * t5226;
t4927 = t5093 * t5173 - t5612;
t5099 = t5169 * t5238 + t5172 * t5232;
t5021 = t5174 * t5099;
t5578 = t5173 * t5226;
t5337 = t5093 * t5170 + t5578;
t4736 = -t5337 * t5171 + t5021;
t6021 = t5218 * t4736;
t4602 = -(t5021 * t5170 - t5093 * t5171) * t5216 - t4927 * t5567 - t6021;
t5231 = koppelP(6,2);
t5237 = koppelP(6,1);
t5588 = t5172 * t5237;
t5092 = t5169 * t5231 - t5588;
t5225 = koppelP(6,3);
t5613 = t5170 * t5225;
t4926 = t5092 * t5173 - t5613;
t5098 = t5169 * t5237 + t5172 * t5231;
t5020 = t5174 * t5098;
t5579 = t5173 * t5225;
t5338 = t5092 * t5170 + t5579;
t4735 = -t5338 * t5171 + t5020;
t6020 = t5218 * t4735;
t4600 = -(t5020 * t5170 - t5092 * t5171) * t5216 - t4926 * t5567 - t6020;
t5537 = t5184 * t5185;
t5060 = t5181 * t5537 - t5542;
t5552 = t5176 * t5184;
t4887 = t5060 * t5177 + t5182 * t5552;
t4890 = t5060 * t5182 - t5177 * t5552;
t4677 = t4887 * t5147 + t4890 * t5135;
t4683 = -t4887 * t5135 + t4890 * t5147;
t5194 = legFrame(4,1);
t5153 = cos(t5194);
t5141 = sin(t5194);
t5159 = sin(t5206);
t5689 = t5141 * t5159;
t4532 = t4677 * t5153 + t4683 * t5689;
t4807 = t5056 * t5147 + t5061 * t5135;
t4670 = t4807 * t5153 + t4819 * t5689;
t4409 = pkin(3) * (-t4532 * t5203 + t5200 * t4670) - (t4532 * t5200 + t4670 * t5203) * t5907;
t4676 = t4887 * t5146 + t4890 * t5134;
t4682 = -t4887 * t5134 + t4890 * t5146;
t5193 = legFrame(5,1);
t5152 = cos(t5193);
t5140 = sin(t5193);
t5158 = sin(t5205);
t5692 = t5140 * t5158;
t4531 = t4676 * t5152 + t4682 * t5692;
t4806 = t5056 * t5146 + t5061 * t5134;
t4669 = t4806 * t5152 + t4818 * t5692;
t4408 = pkin(3) * (-t4531 * t5202 + t5199 * t4669) - (t4531 * t5199 + t4669 * t5202) * t5907;
t4675 = t4887 * t5145 + t4890 * t5133;
t4681 = -t4887 * t5133 + t4890 * t5145;
t5192 = legFrame(6,1);
t5151 = cos(t5192);
t5139 = sin(t5192);
t5157 = sin(t5204);
t5695 = t5139 * t5157;
t4530 = t4675 * t5151 + t4681 * t5695;
t4805 = t5056 * t5145 + t5061 * t5133;
t4668 = t4805 * t5151 + t4817 * t5695;
t4407 = pkin(3) * (-t4530 * t5201 + t5198 * t4668) - (t4530 * t5198 + t4668 * t5201) * t5907;
t5677 = t5151 * t5157;
t5559 = t5174 * t5237;
t5565 = t5174 * t5231;
t5597 = t5171 * t5237;
t5603 = t5171 * t5231;
t4811 = -(t5170 * t5559 - t5603) * t5172 + t5169 * (t5170 * t5565 + t5597);
t5989 = t5174 * t5579 + t4811;
t6019 = -t4926 * t5677 + t5163 * t5989;
t4799 = (t5170 * t5597 + t5565) * t5172 - (t5170 * t5603 - t5559) * t5169;
t5995 = -t5171 * t5579 + t4799;
t6018 = t4926 * t5695 + t5163 * t5995;
t5674 = t5152 * t5158;
t5558 = t5174 * t5238;
t5564 = t5174 * t5232;
t5596 = t5171 * t5238;
t5602 = t5171 * t5232;
t4812 = -(t5170 * t5558 - t5602) * t5172 + t5169 * (t5170 * t5564 + t5596);
t5988 = t5174 * t5578 + t4812;
t6017 = -t4927 * t5674 + t5164 * t5988;
t4800 = (t5170 * t5596 + t5564) * t5172 - (t5170 * t5602 - t5558) * t5169;
t5994 = -t5171 * t5578 + t4800;
t6016 = t4927 * t5692 + t5164 * t5994;
t5671 = t5153 * t5159;
t5557 = t5174 * t5239;
t5563 = t5174 * t5233;
t5595 = t5171 * t5239;
t5601 = t5171 * t5233;
t4813 = -(t5170 * t5557 - t5601) * t5172 + t5169 * (t5170 * t5563 + t5595);
t5987 = t5174 * t5577 + t4813;
t6015 = -t4928 * t5671 + t5165 * t5987;
t4801 = (t5170 * t5595 + t5563) * t5172 - (t5170 * t5601 - t5557) * t5169;
t5993 = -t5171 * t5577 + t4801;
t6014 = t4928 * t5689 + t5165 * t5993;
t5207 = legFrame(3,2);
t5166 = cos(t5207);
t5195 = legFrame(3,1);
t5154 = cos(t5195);
t5160 = sin(t5207);
t5668 = t5154 * t5160;
t5556 = t5174 * t5240;
t5562 = t5174 * t5234;
t5594 = t5171 * t5240;
t5600 = t5171 * t5234;
t4814 = -(t5170 * t5556 - t5600) * t5172 + t5169 * (t5170 * t5562 + t5594);
t5986 = t5174 * t5576 + t4814;
t6013 = -t4929 * t5668 + t5166 * t5986;
t5142 = sin(t5195);
t5686 = t5142 * t5160;
t4802 = (t5170 * t5594 + t5562) * t5172 - (t5170 * t5600 - t5556) * t5169;
t5992 = -t5171 * t5576 + t4802;
t6012 = t4929 * t5686 + t5166 * t5992;
t5208 = legFrame(2,2);
t5167 = cos(t5208);
t5196 = legFrame(2,1);
t5155 = cos(t5196);
t5161 = sin(t5208);
t5665 = t5155 * t5161;
t5555 = t5174 * t5241;
t5561 = t5174 * t5235;
t5593 = t5171 * t5241;
t5599 = t5171 * t5235;
t4815 = -(t5170 * t5555 - t5599) * t5172 + t5169 * (t5170 * t5561 + t5593);
t5985 = t5174 * t5575 + t4815;
t6011 = -t4930 * t5665 + t5167 * t5985;
t5143 = sin(t5196);
t5683 = t5143 * t5161;
t4803 = (t5170 * t5593 + t5561) * t5172 - (t5170 * t5599 - t5555) * t5169;
t5991 = -t5171 * t5575 + t4803;
t6010 = t4930 * t5683 + t5167 * t5991;
t5209 = legFrame(1,2);
t5168 = cos(t5209);
t5197 = legFrame(1,1);
t5156 = cos(t5197);
t5162 = sin(t5209);
t5662 = t5156 * t5162;
t5554 = t5174 * t5242;
t5560 = t5174 * t5236;
t5592 = t5171 * t5242;
t5598 = t5171 * t5236;
t4816 = -(t5170 * t5554 - t5598) * t5172 + t5169 * (t5170 * t5560 + t5592);
t5984 = t5174 * t5574 + t4816;
t6009 = -t4931 * t5662 + t5168 * t5984;
t5144 = sin(t5197);
t5680 = t5144 * t5162;
t4804 = (t5170 * t5592 + t5560) * t5172 - (t5170 * t5598 - t5554) * t5169;
t5990 = -t5171 * t5574 + t4804;
t6008 = t4931 * t5680 + t5168 * t5990;
t5581 = t5173 * t5216;
t4760 = t5098 * t5581 - t5217 * t5338;
t6007 = t4760 * t5171;
t6006 = t4760 * t5174;
t4761 = t5099 * t5581 - t5217 * t5337;
t6005 = t4761 * t5171;
t6004 = t4761 * t5174;
t4762 = t5100 * t5581 - t5217 * t5336;
t6003 = t4762 * t5171;
t6002 = t4762 * t5174;
t4763 = t5101 * t5581 - t5217 * t5335;
t6001 = t4763 * t5171;
t6000 = t4763 * t5174;
t4764 = t5102 * t5581 - t5217 * t5334;
t5999 = t4764 * t5171;
t5998 = t4764 * t5174;
t4765 = t5103 * t5581 - t5217 * t5333;
t5997 = t4765 * t5171;
t5996 = t4765 * t5174;
t5008 = t5171 * t5098;
t5983 = t5338 * t5174 + t5008;
t5009 = t5171 * t5099;
t5982 = t5337 * t5174 + t5009;
t5010 = t5171 * t5100;
t5981 = t5336 * t5174 + t5010;
t5011 = t5171 * t5101;
t5980 = t5335 * t5174 + t5011;
t5012 = t5171 * t5102;
t5979 = t5334 * t5174 + t5012;
t5013 = t5171 * t5103;
t5978 = t5333 * t5174 + t5013;
t5605 = t5171 * t5217;
t5802 = t5978 * t5218;
t4609 = -(t5013 * t5170 + t5097 * t5174) * t5216 - t4931 * t5605 - t5802;
t5803 = t5979 * t5218;
t4607 = -(t5012 * t5170 + t5096 * t5174) * t5216 - t4930 * t5605 - t5803;
t5804 = t5980 * t5218;
t4605 = -(t5011 * t5170 + t5095 * t5174) * t5216 - t4929 * t5605 - t5804;
t5805 = t5981 * t5218;
t4603 = -(t5010 * t5170 + t5094 * t5174) * t5216 - t4928 * t5605 - t5805;
t5806 = t5982 * t5218;
t4601 = -(t5009 * t5170 + t5093 * t5174) * t5216 - t4927 * t5605 - t5806;
t5807 = t5983 * t5218;
t4599 = -(t5008 * t5170 + t5092 * t5174) * t5216 - t4926 * t5605 - t5807;
t5189 = legFrame(3,3);
t5136 = sin(t5189);
t5148 = cos(t5189);
t5971 = t4888 * t5136 + t4889 * t5148;
t5190 = legFrame(2,3);
t5137 = sin(t5190);
t5149 = cos(t5190);
t5970 = t4888 * t5137 + t4889 * t5149;
t5191 = legFrame(1,3);
t5138 = sin(t5191);
t5150 = cos(t5191);
t5969 = t4888 * t5138 + t4889 * t5150;
t5580 = t5173 * t5218;
t4956 = -t5170 * t5567 - t5171 * t5580;
t5566 = t5174 * t5218;
t4957 = t5170 * t5605 - t5173 * t5566;
t4371 = (-t4738 * t4956 + t4957 * t5980) * t5216 + ((-t4606 - t6023) * t5174 + (-t4605 - t5804) * t5171) * t5217 + (-t4605 * t5174 + t4606 * t5171) * t5581;
t5570 = t5173 * t5234;
t4917 = -t5169 * t5570 + t5173 * t5585 + t5610;
t4422 = t4606 * t5218 + (t4917 * t5566 - t6001) * t5217 + (t4606 * t5170 + t4917 * t4956 + (-t5217 * t5980 - t6000) * t5173) * t5216;
t5604 = t5171 * t5218;
t4423 = t4605 * t5218 + (t4917 * t5604 + t6000) * t5217 + (t4605 * t5170 - t4917 * t4957 + (t4738 * t5217 - t6001) * t5173) * t5216;
t5623 = t5166 * t5180;
t5065 = t5136 * t5182 + t5148 * t5177;
t5950 = t5065 * t5185;
t4852 = t5160 * t5950 + t5623;
t5071 = -t5136 * t5177 + t5148 * t5182;
t5210 = sin(qJ(3,3));
t5213 = cos(qJ(3,3));
t5113 = pkin(3) * t5210 - t5213 * t5907;
t5641 = t5160 * t5181;
t5644 = t5160 * t5176;
t5110 = pkin(3) * t5213 + t5210 * t5907;
t5700 = t5110 * t5184;
t4521 = (t4852 * t5176 - t5071 * t5641) * t5700 + t5113 * (t4852 * t5181 + t5071 * t5644);
t4623 = (t5065 * t5181 + t5071 * t5551) * t5700 + (-t5065 * t5176 + t5071 * t5539) * t5113;
t4470 = t4521 * t5154 + t4623 * t5142;
t4471 = -t4521 * t5142 + t4623 * t5154;
t4881 = t5110 * t5552 + t5113 * t5181;
t5642 = t5160 * t5180;
t4515 = (-(t5065 * t5551 - t5071 * t5181) * t5700 - t5113 * (t5065 * t5539 + t5071 * t5176)) * t5166 + t4881 * t5642;
t4872 = 0.1e1 / t4881;
t5175 = 0.1e1 / t5180;
t5183 = cos(pkin(6));
t5243 = pkin(8) ^ 2;
t5696 = (-t5183 ^ 2 * t5243 + pkin(3) ^ 2 + t5243) * t5175;
t5116 = t5170 * t5218 + t5216;
t5348 = t5169 * t5116;
t4769 = -t5116 * t5585 + t5218 * t5576 + t5234 * t5348;
t5220 = xDP(2);
t5379 = -t5170 * t5216 - t5218;
t5503 = t5217 * t5240;
t5509 = t5217 * t5234;
t5515 = t5217 * t5228;
t5522 = t5216 * t5240;
t5265 = (t5173 * t5503 + t5234 * t5379) * t5172 - (t5169 * t5522 - t5515) * t5170 - (t5173 * t5509 + t5218 * t5240) * t5169;
t4584 = t4769 * t5174 - t5171 * t5265 - t5220;
t5219 = xDP(3);
t4590 = t4769 * t5171 + t5174 * t5265 - t5219;
t5221 = xDP(1);
t4461 = -((-t5170 * t5503 - t5216 * t5570) * t5172 + t5173 * t5515 + t5221 + (t5170 * t5509 - t5173 * t5522) * t5169) * t5166 + (t4584 * t5142 - t4590 * t5154) * t5160;
t4497 = t4584 * t5154 + t4590 * t5142;
t4317 = (t4461 * t5182 + t4497 * t5177) * t5148 + t5136 * (-t4461 * t5177 + t4497 * t5182);
t5879 = t4317 ^ 2 / t4881 ^ 2;
t5878 = t4872 * t5879;
t5375 = t5696 * t5878;
t4269 = t5184 * t5375 + (t4371 * t4515 + t4422 * t4471 + t4423 * t4470) * t4872 * t5175;
t4678 = t4887 * t5148 + t4890 * t5136;
t4684 = -t4887 * t5136 + t4890 * t5148;
t4527 = -t4678 * t5142 + t4684 * t5668;
t4808 = t5056 * t5148 + t5061 * t5136;
t4820 = -t5056 * t5136 + t5061 * t5148;
t4665 = -t4808 * t5142 + t4820 * t5668;
t4410 = (t4527 * t5210 + t4665 * t5213) * t5907 - (-t4527 * t5213 + t4665 * t5210) * pkin(3);
t4671 = t4808 * t5154 + t4820 * t5686;
t5914 = t4678 * t5154 + t4684 * t5686;
t4413 = -(t4671 * t5213 + t5210 * t5914) * t5907 + pkin(3) * (t5210 * t4671 - t5213 * t5914);
t5540 = t5180 * t5181;
t5057 = -t5179 * t5540 + t5537;
t5544 = t5176 * t5213;
t5547 = t5176 * t5210;
t5351 = 0.1e1 / ((-t5181 * t5213 + t5184 * t5547) * t5907 + pkin(3) * (t5181 * t5210 + t5184 * t5544));
t5965 = (-(t4820 * t5213 - t5210 * t5971) * t5907 + pkin(3) * (t5210 * t4820 + t5213 * t5971)) * t5166;
t5486 = t5351 * t5965;
t5258 = -t5057 * t5375 + (t4371 * t5486 + (t4410 * t4423 + t4413 * t4422) * t5351) * t5175;
t4263 = t4269 * t5185 + t5258;
t5968 = t4263 * t5351;
t4372 = (-t4739 * t4956 + t4957 * t5979) * t5216 + ((-t4608 - t6024) * t5174 + (-t4607 - t5803) * t5171) * t5217 + (-t4607 * t5174 + t4608 * t5171) * t5581;
t5569 = t5173 * t5235;
t4918 = -t5169 * t5569 + t5173 * t5584 + t5609;
t4424 = t4608 * t5218 + (t4918 * t5566 - t5999) * t5217 + (t4608 * t5170 + t4918 * t4956 + (-t5217 * t5979 - t5998) * t5173) * t5216;
t4425 = t4607 * t5218 + (t4918 * t5604 + t5998) * t5217 + (t4607 * t5170 - t4918 * t4957 + (t4739 * t5217 - t5999) * t5173) * t5216;
t5621 = t5167 * t5180;
t5066 = t5137 * t5182 + t5149 * t5177;
t5949 = t5066 * t5185;
t4853 = t5161 * t5949 + t5621;
t5072 = -t5137 * t5177 + t5149 * t5182;
t5211 = sin(qJ(3,2));
t5214 = cos(qJ(3,2));
t5114 = pkin(3) * t5211 - t5214 * t5907;
t5636 = t5161 * t5181;
t5639 = t5161 * t5176;
t5111 = pkin(3) * t5214 + t5211 * t5907;
t5699 = t5111 * t5184;
t4522 = (t4853 * t5176 - t5072 * t5636) * t5699 + t5114 * (t4853 * t5181 + t5072 * t5639);
t4624 = (t5066 * t5181 + t5072 * t5551) * t5699 + (-t5066 * t5176 + t5072 * t5539) * t5114;
t4472 = t4522 * t5155 + t4624 * t5143;
t4473 = -t4522 * t5143 + t4624 * t5155;
t4882 = t5111 * t5552 + t5114 * t5181;
t5637 = t5161 * t5180;
t4516 = (-(t5066 * t5551 - t5072 * t5181) * t5699 - t5114 * (t5066 * t5539 + t5072 * t5176)) * t5167 + t4882 * t5637;
t4875 = 0.1e1 / t4882;
t4770 = -t5116 * t5584 + t5218 * t5575 + t5235 * t5348;
t5502 = t5217 * t5241;
t5508 = t5217 * t5235;
t5514 = t5217 * t5229;
t5521 = t5216 * t5241;
t5264 = (t5173 * t5502 + t5235 * t5379) * t5172 - (t5169 * t5521 - t5514) * t5170 - (t5173 * t5508 + t5218 * t5241) * t5169;
t4585 = t4770 * t5174 - t5171 * t5264 - t5220;
t4591 = t4770 * t5171 + t5174 * t5264 - t5219;
t4462 = -((-t5170 * t5502 - t5216 * t5569) * t5172 + t5173 * t5514 + t5221 + (t5170 * t5508 - t5173 * t5521) * t5169) * t5167 + (t4585 * t5143 - t4591 * t5155) * t5161;
t4498 = t4585 * t5155 + t4591 * t5143;
t4318 = (t4462 * t5182 + t4498 * t5177) * t5149 + t5137 * (-t4462 * t5177 + t4498 * t5182);
t5877 = t4318 ^ 2 / t4882 ^ 2;
t5876 = t4875 * t5877;
t5374 = t5696 * t5876;
t4270 = t5184 * t5374 + (t4372 * t4516 + t4424 * t4473 + t4425 * t4472) * t4875 * t5175;
t4679 = t4887 * t5149 + t4890 * t5137;
t4685 = -t4887 * t5137 + t4890 * t5149;
t4528 = -t4679 * t5143 + t4685 * t5665;
t4809 = t5056 * t5149 + t5061 * t5137;
t4821 = -t5056 * t5137 + t5061 * t5149;
t4666 = -t4809 * t5143 + t4821 * t5665;
t4411 = (t4528 * t5211 + t4666 * t5214) * t5907 - (-t4528 * t5214 + t4666 * t5211) * pkin(3);
t4672 = t4809 * t5155 + t4821 * t5683;
t5915 = t4679 * t5155 + t4685 * t5683;
t4414 = -(t4672 * t5214 + t5211 * t5915) * t5907 + pkin(3) * (t5211 * t4672 - t5214 * t5915);
t5533 = t5184 * t5214;
t5546 = t5176 * t5211;
t5350 = 0.1e1 / ((-t5181 * t5214 + t5184 * t5546) * t5907 + pkin(3) * (t5176 * t5533 + t5181 * t5211));
t5964 = (-(t4821 * t5214 - t5211 * t5970) * t5907 + pkin(3) * (t5211 * t4821 + t5214 * t5970)) * t5167;
t5485 = t5350 * t5964;
t5257 = -t5057 * t5374 + (t4372 * t5485 + (t4411 * t4425 + t4414 * t4424) * t5350) * t5175;
t4264 = t4270 * t5185 + t5257;
t5967 = t4264 * t5350;
t4373 = (-t4740 * t4956 + t4957 * t5978) * t5216 + ((-t4610 - t6025) * t5174 + (-t4609 - t5802) * t5171) * t5217 + (-t4609 * t5174 + t4610 * t5171) * t5581;
t5568 = t5173 * t5236;
t4919 = -t5169 * t5568 + t5173 * t5583 + t5608;
t4426 = t4610 * t5218 + (t4919 * t5566 - t5997) * t5217 + (t4610 * t5170 + t4919 * t4956 + (-t5217 * t5978 - t5996) * t5173) * t5216;
t4427 = t4609 * t5218 + (t4919 * t5604 + t5996) * t5217 + (t4609 * t5170 - t4919 * t4957 + (t4740 * t5217 - t5997) * t5173) * t5216;
t5619 = t5168 * t5180;
t5067 = t5138 * t5182 + t5150 * t5177;
t5948 = t5067 * t5185;
t4854 = t5162 * t5948 + t5619;
t5073 = -t5138 * t5177 + t5150 * t5182;
t5212 = sin(qJ(3,1));
t5215 = cos(qJ(3,1));
t5115 = pkin(3) * t5212 - t5215 * t5907;
t5631 = t5162 * t5181;
t5634 = t5162 * t5176;
t5112 = pkin(3) * t5215 + t5212 * t5907;
t5698 = t5112 * t5184;
t4523 = (t4854 * t5176 - t5073 * t5631) * t5698 + t5115 * (t4854 * t5181 + t5073 * t5634);
t4625 = (t5067 * t5181 + t5073 * t5551) * t5698 + (-t5067 * t5176 + t5073 * t5539) * t5115;
t4474 = t4523 * t5156 + t4625 * t5144;
t4475 = -t4523 * t5144 + t4625 * t5156;
t4883 = t5112 * t5552 + t5115 * t5181;
t5632 = t5162 * t5180;
t4517 = (-(t5067 * t5551 - t5073 * t5181) * t5698 - t5115 * (t5067 * t5539 + t5073 * t5176)) * t5168 + t4883 * t5632;
t4878 = 0.1e1 / t4883;
t4771 = -t5116 * t5583 + t5218 * t5574 + t5236 * t5348;
t5501 = t5217 * t5242;
t5507 = t5217 * t5236;
t5513 = t5217 * t5230;
t5520 = t5216 * t5242;
t5263 = (t5173 * t5501 + t5236 * t5379) * t5172 - (t5169 * t5520 - t5513) * t5170 - (t5173 * t5507 + t5218 * t5242) * t5169;
t4586 = t4771 * t5174 - t5171 * t5263 - t5220;
t4592 = t4771 * t5171 + t5174 * t5263 - t5219;
t4463 = -((-t5170 * t5501 - t5216 * t5568) * t5172 + t5173 * t5513 + t5221 + (t5170 * t5507 - t5173 * t5520) * t5169) * t5168 + (t4586 * t5144 - t4592 * t5156) * t5162;
t4499 = t4586 * t5156 + t4592 * t5144;
t4319 = (t4463 * t5182 + t4499 * t5177) * t5150 + t5138 * (-t4463 * t5177 + t4499 * t5182);
t5875 = t4319 ^ 2 / t4883 ^ 2;
t5874 = t4878 * t5875;
t5373 = t5696 * t5874;
t4271 = t5184 * t5373 + (t4373 * t4517 + t4426 * t4475 + t4427 * t4474) * t4878 * t5175;
t4680 = t4887 * t5150 + t4890 * t5138;
t4686 = -t4887 * t5138 + t4890 * t5150;
t4529 = -t4680 * t5144 + t4686 * t5662;
t4810 = t5056 * t5150 + t5061 * t5138;
t4822 = -t5056 * t5138 + t5061 * t5150;
t4667 = -t4810 * t5144 + t4822 * t5662;
t4412 = (t4529 * t5212 + t4667 * t5215) * t5907 - (-t4529 * t5215 + t4667 * t5212) * pkin(3);
t4673 = t4810 * t5156 + t4822 * t5680;
t5916 = t4680 * t5156 + t4686 * t5680;
t4415 = -(t4673 * t5215 + t5212 * t5916) * t5907 + pkin(3) * (t5212 * t4673 - t5215 * t5916);
t5543 = t5176 * t5215;
t5545 = t5176 * t5212;
t5349 = 0.1e1 / ((-t5181 * t5215 + t5184 * t5545) * t5907 + pkin(3) * (t5181 * t5212 + t5184 * t5543));
t5963 = (-(t4822 * t5215 - t5212 * t5969) * t5907 + pkin(3) * (t5212 * t4822 + t5215 * t5969)) * t5168;
t5484 = t5349 * t5963;
t5256 = -t5057 * t5373 + (t4373 * t5484 + (t4412 * t4427 + t4415 * t4426) * t5349) * t5175;
t4265 = t4271 * t5185 + t5256;
t5966 = t4265 * t5349;
t4766 = -t5116 * t5588 + t5218 * t5579 + t5231 * t5348;
t5506 = t5217 * t5237;
t5512 = t5217 * t5231;
t5518 = t5217 * t5225;
t5525 = t5216 * t5237;
t5268 = (t5173 * t5506 + t5231 * t5379) * t5172 - (t5169 * t5525 - t5518) * t5170 - (t5173 * t5512 + t5218 * t5237) * t5169;
t4581 = t4766 * t5174 - t5171 * t5268 - t5220;
t4587 = t4766 * t5171 + t5174 * t5268 - t5219;
t5573 = t5173 * t5231;
t4458 = -((-t5170 * t5506 - t5216 * t5573) * t5172 + t5173 * t5518 + t5221 + (t5170 * t5512 - t5173 * t5525) * t5169) * t5163 + (t4581 * t5139 - t4587 * t5151) * t5157;
t4494 = t4581 * t5151 + t4587 * t5139;
t4314 = (t4458 * t5182 + t4494 * t5177) * t5145 + t5133 * (-t4458 * t5177 + t4494 * t5182);
t5104 = pkin(3) * t5201 + t5198 * t5907;
t5107 = pkin(3) * t5198 - t5201 * t5907;
t4869 = t5104 * t5552 + t5107 * t5181;
t5885 = t4314 ^ 2 / t4869 ^ 2;
t4767 = -t5116 * t5587 + t5218 * t5578 + t5232 * t5348;
t5505 = t5217 * t5238;
t5511 = t5217 * t5232;
t5517 = t5217 * t5226;
t5524 = t5216 * t5238;
t5267 = (t5173 * t5505 + t5232 * t5379) * t5172 - (t5169 * t5524 - t5517) * t5170 - (t5173 * t5511 + t5218 * t5238) * t5169;
t4582 = t4767 * t5174 - t5171 * t5267 - t5220;
t4588 = t4767 * t5171 + t5174 * t5267 - t5219;
t5572 = t5173 * t5232;
t4459 = -((-t5170 * t5505 - t5216 * t5572) * t5172 + t5173 * t5517 + t5221 + (t5170 * t5511 - t5173 * t5524) * t5169) * t5164 + (t4582 * t5140 - t4588 * t5152) * t5158;
t4495 = t4582 * t5152 + t4588 * t5140;
t4315 = (t4459 * t5182 + t4495 * t5177) * t5146 + t5134 * (-t4459 * t5177 + t4495 * t5182);
t5105 = pkin(3) * t5202 + t5199 * t5907;
t5108 = pkin(3) * t5199 - t5202 * t5907;
t4870 = t5105 * t5552 + t5108 * t5181;
t5883 = t4315 ^ 2 / t4870 ^ 2;
t4768 = -t5116 * t5586 + t5218 * t5577 + t5233 * t5348;
t5504 = t5217 * t5239;
t5510 = t5217 * t5233;
t5516 = t5217 * t5227;
t5523 = t5216 * t5239;
t5266 = (t5173 * t5504 + t5233 * t5379) * t5172 - (t5169 * t5523 - t5516) * t5170 - (t5173 * t5510 + t5218 * t5239) * t5169;
t4583 = t4768 * t5174 - t5171 * t5266 - t5220;
t4589 = t4768 * t5171 + t5174 * t5266 - t5219;
t5571 = t5173 * t5233;
t4460 = -((-t5170 * t5504 - t5216 * t5571) * t5172 + t5173 * t5516 + t5221 + (t5170 * t5510 - t5173 * t5523) * t5169) * t5165 + (t4583 * t5141 - t4589 * t5153) * t5159;
t4496 = t4583 * t5153 + t4589 * t5141;
t4316 = (t4460 * t5182 + t4496 * t5177) * t5147 + t5135 * (-t4460 * t5177 + t4496 * t5182);
t5106 = pkin(3) * t5203 + t5200 * t5907;
t5109 = pkin(3) * t5200 - t5203 * t5907;
t4871 = t5106 * t5552 + t5109 * t5181;
t5881 = t4316 ^ 2 / t4871 ^ 2;
t5959 = t4926 * t5180;
t5958 = t4927 * t5180;
t5957 = t4928 * t5180;
t5956 = t4929 * t5180;
t5955 = t4930 * t5180;
t5954 = t4931 * t5180;
t5062 = t5133 * t5182 + t5145 * t5177;
t5953 = t5062 * t5185;
t5063 = t5134 * t5182 + t5146 * t5177;
t5952 = t5063 * t5185;
t5064 = t5135 * t5182 + t5147 * t5177;
t5951 = t5064 * t5185;
t5590 = t5172 * t5174;
t5617 = t5169 * t5171;
t4980 = -t5170 * t5590 + t5617;
t5519 = t5217 * t5218;
t5589 = t5172 * t5217;
t5005 = t5169 * t5580 - t5589;
t5743 = t5005 * t5116;
t5947 = t5173 * (t4980 * t5519 + t5174 * t5743);
t4789 = -t5067 * t5144 + t5073 * t5662;
t4795 = -t5067 * t5156 - t5073 * t5680;
t5710 = t5073 * t5168;
t4277 = (-t5112 * t5181 + t5115 * t5552) * t5874 + (-t4373 * t5710 + t4426 * t4795 + t4427 * t4789) * t4878;
t5946 = (t4277 * t5215 - t5212 * t5875) * t5349;
t4788 = -t5066 * t5143 + t5072 * t5665;
t4794 = -t5066 * t5155 - t5072 * t5683;
t5711 = t5072 * t5167;
t4276 = (-t5111 * t5181 + t5114 * t5552) * t5876 + (-t4372 * t5711 + t4424 * t4794 + t4425 * t4788) * t4875;
t5945 = (t4276 * t5214 - t5211 * t5877) * t5350;
t5944 = (-t4276 * t5211 - t5214 * t5877) * t5350;
t4787 = -t5065 * t5142 + t5071 * t5668;
t4793 = -t5065 * t5154 - t5071 * t5686;
t5712 = t5071 * t5166;
t4275 = (-t5110 * t5181 + t5113 * t5552) * t5878 + (-t4371 * t5712 + t4422 * t4793 + t4423 * t4787) * t4872;
t5943 = (t4275 * t5213 - t5210 * t5879) * t5351;
t5936 = t5349 * (-t4277 * t5212 - t5215 * t5875);
t5935 = t5351 * (-t4275 * t5210 - t5213 * t5879);
t4524 = -t4675 * t5139 + t4681 * t5677;
t4662 = -t4805 * t5139 + t4817 * t5677;
t4404 = pkin(3) * (t4524 * t5201 - t4662 * t5198) + (t4524 * t5198 + t4662 * t5201) * t5907;
t4525 = -t4676 * t5140 + t4682 * t5674;
t4663 = -t4806 * t5140 + t4818 * t5674;
t4405 = pkin(3) * (t4525 * t5202 - t4663 * t5199) + (t4525 * t5199 + t4663 * t5202) * t5907;
t4526 = -t4677 * t5141 + t4683 * t5671;
t4664 = -t4807 * t5141 + t4819 * t5671;
t4406 = pkin(3) * (t4526 * t5203 - t4664 * t5200) + (t4526 * t5200 + t4664 * t5203) * t5907;
t5658 = t5157 * t5177;
t4709 = t5098 * t5182 + t5338 * t5658;
t5655 = t5157 * t5182;
t4721 = -t5098 * t5177 + t5338 * t5655;
t4626 = t4709 * t5133 - t4721 * t5145;
t4715 = -t5098 * t5658 + t5182 * t5338;
t4727 = t5098 * t5655 + t5177 * t5338;
t4632 = t4715 * t5133 + t4727 * t5145;
t5913 = t5151 * (t4626 * t5171 + t4632 * t5174) - (t4626 * t5174 - t4632 * t5171) * t5139;
t5653 = t5158 * t5177;
t4710 = t5099 * t5182 + t5337 * t5653;
t5650 = t5158 * t5182;
t4722 = -t5099 * t5177 + t5337 * t5650;
t4627 = t4710 * t5134 - t4722 * t5146;
t4716 = -t5099 * t5653 + t5182 * t5337;
t4728 = t5099 * t5650 + t5177 * t5337;
t4633 = t4716 * t5134 + t4728 * t5146;
t5912 = t5152 * (t4627 * t5171 + t4633 * t5174) - (t4627 * t5174 - t4633 * t5171) * t5140;
t5648 = t5159 * t5177;
t4711 = t5100 * t5182 + t5336 * t5648;
t5645 = t5159 * t5182;
t4723 = -t5100 * t5177 + t5336 * t5645;
t4628 = t4711 * t5135 - t4723 * t5147;
t4717 = -t5100 * t5648 + t5182 * t5336;
t4729 = t5100 * t5645 + t5177 * t5336;
t4634 = t4717 * t5135 + t4729 * t5147;
t5911 = t5153 * (t4628 * t5171 + t4634 * t5174) - (t4628 * t5174 - t4634 * t5171) * t5141;
t5643 = t5160 * t5177;
t4712 = t5101 * t5182 + t5335 * t5643;
t5640 = t5160 * t5182;
t4724 = -t5101 * t5177 + t5335 * t5640;
t4629 = t4712 * t5136 - t4724 * t5148;
t4718 = -t5101 * t5643 + t5182 * t5335;
t4730 = t5101 * t5640 + t5177 * t5335;
t4635 = t4718 * t5136 + t4730 * t5148;
t5910 = t5154 * (t4629 * t5171 + t4635 * t5174) - (t4629 * t5174 - t4635 * t5171) * t5142;
t5638 = t5161 * t5177;
t4713 = t5102 * t5182 + t5334 * t5638;
t5635 = t5161 * t5182;
t4725 = -t5102 * t5177 + t5334 * t5635;
t4630 = t4713 * t5137 - t4725 * t5149;
t4719 = -t5102 * t5638 + t5182 * t5334;
t4731 = t5102 * t5635 + t5177 * t5334;
t4636 = t4719 * t5137 + t4731 * t5149;
t5909 = t5155 * (t4630 * t5171 + t4636 * t5174) - (t4630 * t5174 - t4636 * t5171) * t5143;
t5633 = t5162 * t5177;
t4714 = t5103 * t5182 + t5333 * t5633;
t5630 = t5162 * t5182;
t4726 = -t5103 * t5177 + t5333 * t5630;
t4631 = t4714 * t5138 - t4726 * t5150;
t4720 = -t5103 * t5633 + t5182 * t5333;
t4732 = t5103 * t5630 + t5177 * t5333;
t4637 = t4720 * t5138 + t4732 * t5150;
t5908 = t5156 * (t4631 * t5171 + t4637 * t5174) - (t4631 * t5174 - t4637 * t5171) * t5144;
t4860 = 0.1e1 / t4869;
t4863 = 0.1e1 / t4870;
t4866 = 0.1e1 / t4871;
t4855 = t5005 ^ 2;
t5614 = t5169 * t5217;
t5007 = t5172 * t5580 + t5614;
t4856 = t5007 ^ 2;
t4976 = t5116 ^ 2;
t4368 = (-t4735 * t4956 + t4957 * t5983) * t5216 + ((-t4600 - t6020) * t5174 + (-t4599 - t5807) * t5171) * t5217 + (-t4599 * t5174 + t4600 * t5171) * t5581;
t4914 = -t5169 * t5573 + t5173 * t5588 + t5613;
t4416 = t4600 * t5218 + (t4914 * t5566 - t6007) * t5217 + (t4600 * t5170 + t4914 * t4956 + (-t5217 * t5983 - t6006) * t5173) * t5216;
t4417 = t4599 * t5218 + (t4914 * t5604 + t6006) * t5217 + (t4599 * t5170 - t4914 * t4957 + (t4735 * t5217 - t6007) * t5173) * t5216;
t5629 = t5163 * t5180;
t4849 = t5157 * t5953 + t5629;
t5068 = -t5133 * t5177 + t5145 * t5182;
t5656 = t5157 * t5181;
t5659 = t5157 * t5176;
t5703 = t5104 * t5184;
t4518 = (t4849 * t5176 - t5068 * t5656) * t5703 + t5107 * (t4849 * t5181 + t5068 * t5659);
t4620 = (t5062 * t5181 + t5068 * t5551) * t5703 + (-t5062 * t5176 + t5068 * t5539) * t5107;
t4464 = t4518 * t5151 + t4620 * t5139;
t4465 = -t4518 * t5139 + t4620 * t5151;
t5657 = t5157 * t5180;
t4512 = (-(t5062 * t5551 - t5068 * t5181) * t5703 - t5107 * (t5062 * t5539 + t5068 * t5176)) * t5163 + t4869 * t5657;
t5884 = t4860 * t5885;
t5378 = t5696 * t5884;
t4266 = t5184 * t5378 + (t4368 * t4512 + t4416 * t4465 + t4417 * t4464) * t4860 * t5175;
t5536 = t5184 * t5201;
t5550 = t5176 * t5198;
t5354 = 0.1e1 / ((-t5181 * t5201 + t5184 * t5550) * t5907 + pkin(3) * (t5176 * t5536 + t5181 * t5198));
t5261 = -t5057 * t5378 + (t4368 * t6034 + t4404 * t4417 + t4407 * t4416) * t5354 * t5175;
t4257 = t4266 * t5185 + t5261;
t5906 = t4257 * t5354;
t4369 = (-t4736 * t4956 + t4957 * t5982) * t5216 + ((-t4602 - t6021) * t5174 + (-t4601 - t5806) * t5171) * t5217 + (-t4601 * t5174 + t4602 * t5171) * t5581;
t4915 = -t5169 * t5572 + t5173 * t5587 + t5612;
t4418 = t4602 * t5218 + (t4915 * t5566 - t6005) * t5217 + (t4602 * t5170 + t4915 * t4956 + (-t5217 * t5982 - t6004) * t5173) * t5216;
t4419 = t4601 * t5218 + (t4915 * t5604 + t6004) * t5217 + (t4601 * t5170 - t4915 * t4957 + (t4736 * t5217 - t6005) * t5173) * t5216;
t5627 = t5164 * t5180;
t4850 = t5158 * t5952 + t5627;
t5069 = -t5134 * t5177 + t5146 * t5182;
t5651 = t5158 * t5181;
t5654 = t5158 * t5176;
t5702 = t5105 * t5184;
t4519 = (t4850 * t5176 - t5069 * t5651) * t5702 + t5108 * (t4850 * t5181 + t5069 * t5654);
t4621 = (t5063 * t5181 + t5069 * t5551) * t5702 + (-t5063 * t5176 + t5069 * t5539) * t5108;
t4466 = t4519 * t5152 + t4621 * t5140;
t4467 = -t4519 * t5140 + t4621 * t5152;
t5652 = t5158 * t5180;
t4513 = (-(t5063 * t5551 - t5069 * t5181) * t5702 - t5108 * (t5063 * t5539 + t5069 * t5176)) * t5164 + t4870 * t5652;
t5882 = t4863 * t5883;
t5377 = t5696 * t5882;
t4267 = t5184 * t5377 + (t4369 * t4513 + t4418 * t4467 + t4419 * t4466) * t4863 * t5175;
t5535 = t5184 * t5202;
t5549 = t5176 * t5199;
t5353 = 0.1e1 / ((-t5181 * t5202 + t5184 * t5549) * t5907 + pkin(3) * (t5176 * t5535 + t5181 * t5199));
t5260 = -t5057 * t5377 + (t4369 * t6033 + t4405 * t4419 + t4408 * t4418) * t5353 * t5175;
t4258 = t4267 * t5185 + t5260;
t5905 = t4258 * t5353;
t4370 = (-t4737 * t4956 + t4957 * t5981) * t5216 + ((-t4604 - t6022) * t5174 + (-t4603 - t5805) * t5171) * t5217 + (-t4603 * t5174 + t4604 * t5171) * t5581;
t4916 = -t5169 * t5571 + t5173 * t5586 + t5611;
t4420 = t4604 * t5218 + (t4916 * t5566 - t6003) * t5217 + (t4604 * t5170 + t4916 * t4956 + (-t5217 * t5981 - t6002) * t5173) * t5216;
t4421 = t4603 * t5218 + (t4916 * t5604 + t6002) * t5217 + (t4603 * t5170 - t4916 * t4957 + (t4737 * t5217 - t6003) * t5173) * t5216;
t5625 = t5165 * t5180;
t4851 = t5159 * t5951 + t5625;
t5070 = -t5135 * t5177 + t5147 * t5182;
t5646 = t5159 * t5181;
t5649 = t5159 * t5176;
t5701 = t5106 * t5184;
t4520 = (t4851 * t5176 - t5070 * t5646) * t5701 + t5109 * (t4851 * t5181 + t5070 * t5649);
t4622 = (t5064 * t5181 + t5070 * t5551) * t5701 + (-t5064 * t5176 + t5070 * t5539) * t5109;
t4468 = t4520 * t5153 + t4622 * t5141;
t4469 = -t4520 * t5141 + t4622 * t5153;
t5647 = t5159 * t5180;
t4514 = (-(t5064 * t5551 - t5070 * t5181) * t5701 - t5109 * (t5064 * t5539 + t5070 * t5176)) * t5165 + t4871 * t5647;
t5880 = t4866 * t5881;
t5376 = t5696 * t5880;
t4268 = t5184 * t5376 + (t4370 * t4514 + t4420 * t4469 + t4421 * t4468) * t4866 * t5175;
t5534 = t5184 * t5203;
t5548 = t5176 * t5200;
t5352 = 0.1e1 / ((-t5181 * t5203 + t5184 * t5548) * t5907 + pkin(3) * (t5176 * t5534 + t5181 * t5200));
t5259 = -t5057 * t5376 + (t4370 * t6032 + t4406 * t4421 + t4409 * t4420) * t5352 * t5175;
t4259 = t4268 * t5185 + t5259;
t5904 = t4259 * t5352;
t4784 = -t5062 * t5139 + t5068 * t5677;
t4790 = -t5062 * t5151 - t5068 * t5695;
t5715 = t5068 * t5163;
t4272 = (-t5104 * t5181 + t5107 * t5552) * t5884 + (-t4368 * t5715 + t4416 * t4790 + t4417 * t4784) * t4860;
t5897 = t4272 * t4860;
t4785 = -t5063 * t5140 + t5069 * t5674;
t4791 = -t5063 * t5152 - t5069 * t5692;
t5714 = t5069 * t5164;
t4273 = (-t5105 * t5181 + t5108 * t5552) * t5882 + (-t4369 * t5714 + t4418 * t4791 + t4419 * t4785) * t4863;
t5896 = t4273 * t4863;
t4786 = -t5064 * t5141 + t5070 * t5671;
t4792 = -t5064 * t5153 - t5070 * t5689;
t5713 = t5070 * t5165;
t4274 = (-t5106 * t5181 + t5109 * t5552) * t5880 + (-t4370 * t5713 + t4420 * t4792 + t4421 * t4786) * t4866;
t5895 = t4274 * t4866;
t5894 = t4275 * t4872;
t5893 = t4276 * t4875;
t5892 = t4277 * t4878;
t4533 = t5338 * t5629 + (t4709 * t5145 + t4721 * t5133) * t5185;
t4563 = t5098 * t5629 + (-t4715 * t5145 + t4727 * t5133) * t5185;
t4380 = (-t4533 * t5171 + t4563 * t5174) * t5151 + t5139 * (t4533 * t5174 + t4563 * t5171);
t4284 = (t4380 * t5176 - t5181 * t5913) * t5703 + t5107 * (t4380 * t5181 + t5176 * t5913);
t5891 = t4284 * t4860;
t4534 = t5337 * t5627 + (t4710 * t5146 + t4722 * t5134) * t5185;
t4564 = t5099 * t5627 + (-t4716 * t5146 + t4728 * t5134) * t5185;
t4381 = (-t4534 * t5171 + t4564 * t5174) * t5152 + t5140 * (t4534 * t5174 + t4564 * t5171);
t4285 = (t4381 * t5176 - t5181 * t5912) * t5702 + t5108 * (t4381 * t5181 + t5176 * t5912);
t5890 = t4285 * t4863;
t4535 = t5336 * t5625 + (t4711 * t5147 + t4723 * t5135) * t5185;
t4565 = t5100 * t5625 + (-t4717 * t5147 + t4729 * t5135) * t5185;
t4382 = (-t4535 * t5171 + t4565 * t5174) * t5153 + t5141 * (t4535 * t5174 + t4565 * t5171);
t4286 = (t4382 * t5176 - t5181 * t5911) * t5701 + t5109 * (t4382 * t5181 + t5176 * t5911);
t5889 = t4286 * t4866;
t4536 = t5335 * t5623 + (t4712 * t5148 + t4724 * t5136) * t5185;
t4566 = t5101 * t5623 + (-t4718 * t5148 + t4730 * t5136) * t5185;
t4383 = (-t4536 * t5171 + t4566 * t5174) * t5154 + t5142 * (t4536 * t5174 + t4566 * t5171);
t4287 = (t4383 * t5176 - t5181 * t5910) * t5700 + t5113 * (t4383 * t5181 + t5176 * t5910);
t5888 = t4287 * t4872;
t4537 = t5334 * t5621 + (t4713 * t5149 + t4725 * t5137) * t5185;
t4567 = t5102 * t5621 + (-t4719 * t5149 + t4731 * t5137) * t5185;
t4384 = (-t4537 * t5171 + t4567 * t5174) * t5155 + t5143 * (t4537 * t5174 + t4567 * t5171);
t4288 = (t4384 * t5176 - t5181 * t5909) * t5699 + t5114 * (t4384 * t5181 + t5176 * t5909);
t5887 = t4288 * t4875;
t4538 = t5333 * t5619 + (t4714 * t5150 + t4726 * t5138) * t5185;
t4568 = t5103 * t5619 + (-t4720 * t5150 + t4732 * t5138) * t5185;
t4385 = (-t4538 * t5171 + t4568 * t5174) * t5156 + t5144 * (t4538 * t5174 + t4568 * t5171);
t4289 = (t4385 * t5176 - t5181 * t5908) * t5698 + t5115 * (t4385 * t5181 + t5176 * t5908);
t5886 = t4289 * t4878;
t5675 = t5151 * t5182;
t4981 = -t5139 * t5658 + t5675;
t5676 = t5151 * t5177;
t4993 = t5139 * t5655 + t5676;
t5423 = t5185 * t5613;
t5366 = t5145 * t5423;
t5372 = t5133 * t5423;
t5452 = t5225 * t5657;
t5709 = t5092 * t5185;
t4446 = (t5139 * t5959 + t5953 * t5995) * t5163 + (t5171 * t5452 + (-t4981 * t5145 + t4993 * t5133) * t5709) * t5173 + t4981 * t5366 - t4993 * t5372 - t4799 * t5657;
t4539 = t5995 * t5715 + t4926 * (t4981 * t5133 + t4993 * t5145);
t4320 = (t4446 * t5176 - t4539 * t5181) * t5703 + (t4446 * t5181 + t4539 * t5176) * t5107;
t5873 = t4320 * t4860;
t5693 = t5139 * t5182;
t4982 = t5151 * t5658 + t5693;
t5694 = t5139 * t5177;
t4994 = t5151 * t5655 - t5694;
t4447 = (-t5151 * t5959 + t5953 * t5989) * t5163 + (-t5174 * t5452 + (-t4982 * t5145 - t4994 * t5133) * t5709) * t5173 + t4982 * t5366 + t4994 * t5372 - t4811 * t5657;
t4545 = t5989 * t5715 - (-t4982 * t5133 + t4994 * t5145) * t4926;
t4321 = -(t4447 * t5176 - t4545 * t5181) * t5703 - t5107 * (t4447 * t5181 + t4545 * t5176);
t5872 = t4321 * t4860;
t5672 = t5152 * t5182;
t4983 = -t5140 * t5653 + t5672;
t5673 = t5152 * t5177;
t4995 = t5140 * t5650 + t5673;
t5422 = t5185 * t5612;
t5365 = t5146 * t5422;
t5371 = t5134 * t5422;
t5449 = t5226 * t5652;
t5708 = t5093 * t5185;
t4448 = (t5140 * t5958 + t5952 * t5994) * t5164 + (t5171 * t5449 + (-t4983 * t5146 + t4995 * t5134) * t5708) * t5173 + t4983 * t5365 - t4995 * t5371 - t4800 * t5652;
t4540 = t5994 * t5714 + t4927 * (t4983 * t5134 + t4995 * t5146);
t4322 = (t4448 * t5176 - t4540 * t5181) * t5702 + (t4448 * t5181 + t4540 * t5176) * t5108;
t5871 = t4322 * t4863;
t5690 = t5140 * t5182;
t4984 = t5152 * t5653 + t5690;
t5691 = t5140 * t5177;
t4996 = t5152 * t5650 - t5691;
t4449 = (-t5152 * t5958 + t5952 * t5988) * t5164 + (-t5174 * t5449 + (-t4984 * t5146 - t4996 * t5134) * t5708) * t5173 + t4984 * t5365 + t4996 * t5371 - t4812 * t5652;
t4546 = t5988 * t5714 - (-t4984 * t5134 + t4996 * t5146) * t4927;
t4323 = -(t4449 * t5176 - t4546 * t5181) * t5702 - t5108 * (t4449 * t5181 + t4546 * t5176);
t5870 = t4323 * t4863;
t5669 = t5153 * t5182;
t4985 = -t5141 * t5648 + t5669;
t5670 = t5153 * t5177;
t4997 = t5141 * t5645 + t5670;
t5421 = t5185 * t5611;
t5364 = t5147 * t5421;
t5370 = t5135 * t5421;
t5446 = t5227 * t5647;
t5707 = t5094 * t5185;
t4450 = (t5141 * t5957 + t5951 * t5993) * t5165 + (t5171 * t5446 + (-t4985 * t5147 + t4997 * t5135) * t5707) * t5173 + t4985 * t5364 - t4997 * t5370 - t4801 * t5647;
t4541 = t5993 * t5713 + t4928 * (t4985 * t5135 + t4997 * t5147);
t4324 = (t4450 * t5176 - t4541 * t5181) * t5701 + (t4450 * t5181 + t4541 * t5176) * t5109;
t5869 = t4324 * t4866;
t5687 = t5141 * t5182;
t4986 = t5153 * t5648 + t5687;
t5688 = t5141 * t5177;
t4998 = t5153 * t5645 - t5688;
t4451 = (-t5153 * t5957 + t5951 * t5987) * t5165 + (-t5174 * t5446 + (-t4986 * t5147 - t4998 * t5135) * t5707) * t5173 + t4986 * t5364 + t4998 * t5370 - t4813 * t5647;
t4547 = t5987 * t5713 - (-t4986 * t5135 + t4998 * t5147) * t4928;
t4325 = -(t4451 * t5176 - t4547 * t5181) * t5701 - t5109 * (t4451 * t5181 + t4547 * t5176);
t5868 = t4325 * t4866;
t5666 = t5154 * t5182;
t4987 = -t5142 * t5643 + t5666;
t5667 = t5154 * t5177;
t4999 = t5142 * t5640 + t5667;
t5420 = t5185 * t5610;
t5363 = t5148 * t5420;
t5369 = t5136 * t5420;
t5443 = t5228 * t5642;
t5706 = t5095 * t5185;
t4452 = (t5142 * t5956 + t5950 * t5992) * t5166 + (t5171 * t5443 + (-t4987 * t5148 + t4999 * t5136) * t5706) * t5173 + t4987 * t5363 - t4999 * t5369 - t4802 * t5642;
t4542 = t5992 * t5712 + t4929 * (t4987 * t5136 + t4999 * t5148);
t4326 = (t4452 * t5176 - t4542 * t5181) * t5700 + (t4452 * t5181 + t4542 * t5176) * t5113;
t5867 = t4326 * t4872;
t5684 = t5142 * t5182;
t4988 = t5154 * t5643 + t5684;
t5685 = t5142 * t5177;
t5000 = t5154 * t5640 - t5685;
t4453 = (-t5154 * t5956 + t5950 * t5986) * t5166 + (-t5174 * t5443 + (-t4988 * t5148 - t5000 * t5136) * t5706) * t5173 + t4988 * t5363 + t5000 * t5369 - t4814 * t5642;
t4548 = t5986 * t5712 - (-t4988 * t5136 + t5000 * t5148) * t4929;
t4327 = -(t4453 * t5176 - t4548 * t5181) * t5700 - t5113 * (t4453 * t5181 + t4548 * t5176);
t5866 = t4327 * t4872;
t5663 = t5155 * t5182;
t4989 = -t5143 * t5638 + t5663;
t5664 = t5155 * t5177;
t5001 = t5143 * t5635 + t5664;
t5419 = t5185 * t5609;
t5362 = t5149 * t5419;
t5368 = t5137 * t5419;
t5440 = t5229 * t5637;
t5705 = t5096 * t5185;
t4454 = (t5143 * t5955 + t5949 * t5991) * t5167 + (t5171 * t5440 + (-t4989 * t5149 + t5001 * t5137) * t5705) * t5173 + t4989 * t5362 - t5001 * t5368 - t4803 * t5637;
t4543 = t5991 * t5711 + t4930 * (t4989 * t5137 + t5001 * t5149);
t4328 = (t4454 * t5176 - t4543 * t5181) * t5699 + (t4454 * t5181 + t4543 * t5176) * t5114;
t5865 = t4328 * t4875;
t5681 = t5143 * t5182;
t4990 = t5155 * t5638 + t5681;
t5682 = t5143 * t5177;
t5002 = t5155 * t5635 - t5682;
t4455 = (-t5155 * t5955 + t5949 * t5985) * t5167 + (-t5174 * t5440 + (-t4990 * t5149 - t5002 * t5137) * t5705) * t5173 + t4990 * t5362 + t5002 * t5368 - t4815 * t5637;
t4549 = t5985 * t5711 - (-t4990 * t5137 + t5002 * t5149) * t4930;
t4329 = -(t4455 * t5176 - t4549 * t5181) * t5699 - t5114 * (t4455 * t5181 + t4549 * t5176);
t5864 = t4329 * t4875;
t5660 = t5156 * t5182;
t4991 = -t5144 * t5633 + t5660;
t5661 = t5156 * t5177;
t5003 = t5144 * t5630 + t5661;
t5418 = t5185 * t5608;
t5361 = t5150 * t5418;
t5367 = t5138 * t5418;
t5437 = t5230 * t5632;
t5704 = t5097 * t5185;
t4456 = (t5144 * t5954 + t5948 * t5990) * t5168 + (t5171 * t5437 + (-t4991 * t5150 + t5003 * t5138) * t5704) * t5173 + t4991 * t5361 - t5003 * t5367 - t4804 * t5632;
t4544 = t5990 * t5710 + t4931 * (t4991 * t5138 + t5003 * t5150);
t4330 = (t4456 * t5176 - t4544 * t5181) * t5698 + (t4456 * t5181 + t4544 * t5176) * t5115;
t5863 = t4330 * t4878;
t5678 = t5144 * t5182;
t4992 = t5156 * t5633 + t5678;
t5679 = t5144 * t5177;
t5004 = t5156 * t5630 - t5679;
t4457 = (-t5156 * t5954 + t5948 * t5984) * t5168 + (-t5174 * t5437 + (-t4992 * t5150 - t5004 * t5138) * t5704) * t5173 + t4992 * t5361 + t5004 * t5367 - t4816 * t5632;
t4550 = t5984 * t5710 - (-t4992 * t5138 + t5004 * t5150) * t4931;
t4331 = -(t4457 * t5176 - t4550 * t5181) * t5698 - t5115 * (t4457 * t5181 + t4550 * t5176);
t5862 = t4331 * t4878;
t5861 = (((t4738 * t5640 + t5177 * t5980) * t5148 + t5136 * (-t4738 * t5643 + t5182 * t5980)) * t5154 + ((-t4738 * t5177 + t5640 * t5980) * t5148 + (-t4738 * t5182 - t5643 * t5980) * t5136) * t5142) * t4872;
t5860 = (((t4735 * t5655 + t5177 * t5983) * t5145 + t5133 * (-t4735 * t5658 + t5182 * t5983)) * t5151 + t5139 * ((-t4735 * t5177 + t5655 * t5983) * t5145 + (-t4735 * t5182 - t5658 * t5983) * t5133)) * t4860;
t5859 = (((t4736 * t5650 + t5177 * t5982) * t5146 + (-t4736 * t5653 + t5182 * t5982) * t5134) * t5152 + ((-t4736 * t5177 + t5650 * t5982) * t5146 + t5134 * (-t4736 * t5182 - t5653 * t5982)) * t5140) * t4863;
t5858 = (((t4737 * t5645 + t5177 * t5981) * t5147 + (-t4737 * t5648 + t5182 * t5981) * t5135) * t5153 + ((-t4737 * t5177 + t5645 * t5981) * t5147 + t5135 * (-t4737 * t5182 - t5648 * t5981)) * t5141) * t4866;
t5857 = (((t4739 * t5635 + t5177 * t5979) * t5149 + t5137 * (-t4739 * t5638 + t5182 * t5979)) * t5155 + ((-t4739 * t5177 + t5635 * t5979) * t5149 + (-t4739 * t5182 - t5638 * t5979) * t5137) * t5143) * t4875;
t5856 = (((t4740 * t5630 + t5177 * t5978) * t5150 + t5138 * (-t4740 * t5633 + t5182 * t5978)) * t5156 + t5144 * ((-t4740 * t5177 + t5630 * t5978) * t5150 + t5138 * (-t4740 * t5182 - t5633 * t5978))) * t4878;
t5855 = t4464 * t4860;
t5854 = t4465 * t4860;
t5853 = t4466 * t4863;
t5852 = t4467 * t4863;
t5851 = t4468 * t4866;
t5850 = t4469 * t4866;
t5849 = t4470 * t4872;
t5848 = t4471 * t4872;
t5847 = t4472 * t4875;
t5846 = t4473 * t4875;
t5845 = t4474 * t4878;
t5844 = t4475 * t4878;
t5843 = ((t4926 * t5676 + t5182 * t6018) * t5145 - (-t4926 * t5675 + t5177 * t6018) * t5133) * t4860;
t5842 = ((-t4926 * t5694 - t5182 * t6019) * t5145 + (-t4926 * t5693 + t5177 * t6019) * t5133) * t4860;
t5841 = ((t4927 * t5673 + t5182 * t6016) * t5146 - (-t4927 * t5672 + t5177 * t6016) * t5134) * t4863;
t5840 = ((-t4927 * t5691 - t5182 * t6017) * t5146 + (-t4927 * t5690 + t5177 * t6017) * t5134) * t4863;
t5839 = ((t4928 * t5670 + t5182 * t6014) * t5147 - (-t4928 * t5669 + t5177 * t6014) * t5135) * t4866;
t5838 = ((-t4928 * t5688 - t5182 * t6015) * t5147 + (-t4928 * t5687 + t5177 * t6015) * t5135) * t4866;
t5837 = ((t4929 * t5667 + t5182 * t6012) * t5148 - (-t4929 * t5666 + t5177 * t6012) * t5136) * t4872;
t5836 = ((-t4929 * t5685 - t5182 * t6013) * t5148 + (-t4929 * t5684 + t5177 * t6013) * t5136) * t4872;
t5835 = ((t4930 * t5664 + t5182 * t6010) * t5149 - (-t4930 * t5663 + t5177 * t6010) * t5137) * t4875;
t5834 = ((-t4930 * t5682 - t5182 * t6011) * t5149 + (-t4930 * t5681 + t5177 * t6011) * t5137) * t4875;
t5833 = ((t4931 * t5661 + t5182 * t6008) * t5150 - (-t4931 * t5660 + t5177 * t6008) * t5138) * t4878;
t5832 = ((-t4931 * t5679 - t5182 * t6009) * t5150 + (-t4931 * t5678 + t5177 * t6009) * t5138) * t4878;
t5825 = t4512 * t4860;
t5824 = t4513 * t4863;
t5823 = t4514 * t4866;
t5822 = t4515 * t4872;
t5821 = t4516 * t4875;
t5820 = t4517 * t4878;
t5801 = t4784 * t4860;
t5800 = t4785 * t4863;
t5799 = t4786 * t4866;
t5798 = t4787 * t4872;
t5797 = t4788 * t4875;
t5796 = t4789 * t4878;
t5795 = t4790 * t4860;
t5794 = t4791 * t4863;
t5793 = t4792 * t4866;
t5792 = t4793 * t4872;
t5791 = t4794 * t4875;
t5790 = t4795 * t4878;
t5526 = t5216 * t5217;
t4858 = (t5170 * t5614 - t5172 * t5581) * t5218 - t5169 * t5526;
t5783 = t4858 * t5170;
t4859 = (-t5169 * t5581 - t5170 * t5589) * t5218 + t5172 * t5526;
t5782 = t4859 * t5169;
t5775 = t4887 * t5157;
t5774 = t4887 * t5158;
t5773 = t4887 * t5159;
t5772 = t4887 * t5160;
t5771 = t4887 * t5161;
t5770 = t4887 * t5162;
t5763 = t4890 * t5157;
t5762 = t4890 * t5158;
t5761 = t4890 * t5159;
t5760 = t4890 * t5160;
t5759 = t4890 * t5161;
t5758 = t4890 * t5162;
t4977 = -t5170 * t5617 + t5590;
t5745 = t4977 * t5005;
t5744 = t5005 * t5007;
t5742 = t5005 * t5169;
t5741 = t5007 * t5116;
t5740 = t5007 * t5172;
t5733 = t5056 * t5157;
t5732 = t5056 * t5158;
t5731 = t5056 * t5159;
t5730 = t5056 * t5160;
t5729 = t5056 * t5161;
t5728 = t5056 * t5162;
t5727 = t5060 * t5163;
t5726 = t5060 * t5164;
t5725 = t5060 * t5165;
t5724 = t5060 * t5166;
t5723 = t5060 * t5167;
t5722 = t5060 * t5168;
t5721 = t5061 * t5157;
t5720 = t5061 * t5158;
t5719 = t5061 * t5159;
t5718 = t5061 * t5160;
t5717 = t5061 * t5161;
t5716 = t5061 * t5162;
t5697 = t5116 * t5170;
t5628 = t5163 * t5181;
t5626 = t5164 * t5181;
t5624 = t5165 * t5181;
t5622 = t5166 * t5181;
t5620 = t5167 * t5181;
t5618 = t5168 * t5181;
t5616 = t5169 * t5173;
t5615 = t5169 * t5174;
t5607 = t5171 * t5172;
t5606 = t5171 * t5173;
t5591 = t5172 * t5173;
t5582 = t5173 * t5174;
t5553 = t5176 * t5180;
t5541 = t5179 * t5185;
t4978 = t5170 * t5607 + t5615;
t5500 = t4978 * t4858 - t4977 * t5743;
t4979 = t5170 * t5615 + t5607;
t5499 = t4980 * t4858 - t4979 * t5743;
t5498 = t4859 * t5582 - t4980 * t5744;
t5464 = t5173 * t5744;
t5497 = t5170 * t4859 - t5172 * t5464;
t5405 = t5173 * t5519;
t5463 = t5007 * t5582;
t5496 = t4979 * t5405 + t5116 * t5463;
t5489 = t5354 * t6034;
t5488 = t5353 * t6033;
t5487 = t5352 * t6032;
t5477 = t4858 * t5606;
t5476 = t4860 * t5715;
t5475 = t4863 * t5714;
t5474 = t4866 * t5713;
t5473 = t4872 * t5712;
t5472 = t4875 * t5711;
t5471 = t4878 * t5710;
t5465 = t4978 * t5519;
t5462 = t5116 * t5606;
t5461 = t5173 ^ 2 * t5519;
t5453 = t5157 * t5551;
t5451 = t5157 * t5539;
t5450 = t5158 * t5551;
t5448 = t5158 * t5539;
t5447 = t5159 * t5551;
t5445 = t5159 * t5539;
t5444 = t5160 * t5551;
t5442 = t5160 * t5539;
t5441 = t5161 * t5551;
t5439 = t5161 * t5539;
t5438 = t5162 * t5551;
t5436 = t5162 * t5539;
t5435 = t5163 * t5552;
t5434 = t5163 * t5551;
t5433 = t5164 * t5552;
t5432 = t5164 * t5551;
t5431 = t5165 * t5552;
t5430 = t5165 * t5551;
t5429 = t5166 * t5552;
t5428 = t5166 * t5551;
t5427 = t5167 * t5552;
t5426 = t5167 * t5551;
t5425 = t5168 * t5552;
t5424 = t5168 * t5551;
t5404 = t5180 * t5550;
t5403 = t5180 * t5549;
t5402 = t5180 * t5548;
t5401 = t5201 * t5553;
t5400 = t5202 * t5553;
t5399 = t5203 * t5553;
t5398 = t5180 * t5547;
t5397 = t5180 * t5546;
t5396 = t5180 * t5545;
t5395 = t5180 * t5544;
t5394 = t5214 * t5553;
t5393 = t5180 * t5543;
t5392 = t5139 * t5542;
t5391 = t5140 * t5542;
t5390 = t5141 * t5542;
t5389 = t5142 * t5542;
t5388 = t5143 * t5542;
t5387 = t5144 * t5542;
t5386 = t5151 * t5542;
t5385 = t5152 * t5542;
t5384 = t5153 * t5542;
t5383 = t5154 * t5542;
t5382 = t5155 * t5542;
t5381 = t5156 * t5542;
t5380 = t5184 * t5540;
t5332 = t4272 * t5198 + t5201 * t5885;
t5331 = -t4272 * t5201 + t5198 * t5885;
t5330 = t4273 * t5199 + t5202 * t5883;
t5329 = -t4273 * t5202 + t5199 * t5883;
t5328 = t4274 * t5200 + t5203 * t5881;
t5327 = -t4274 * t5203 + t5200 * t5881;
t5308 = -t4859 * t4977 + t4978 * t5741;
t5307 = -t4859 * t4979 + t4980 * t5741;
t5059 = t5380 + t5541;
t4892 = t5059 * t5198 + t5401;
t5300 = -t4892 * t5897 - (t5059 * t5201 - t5404) * t5884;
t5299 = -t4892 * t5884 + ((t5181 * t5536 - t5550) * t5180 + t5201 * t5541) * t5897;
t4893 = t5059 * t5199 + t5400;
t5298 = -t4893 * t5896 - (t5059 * t5202 - t5403) * t5882;
t5297 = -t4893 * t5882 + ((t5181 * t5535 - t5549) * t5180 + t5202 * t5541) * t5896;
t4894 = t5059 * t5200 + t5399;
t5296 = -t4894 * t5895 - (t5059 * t5203 - t5402) * t5880;
t5295 = -t4894 * t5880 + ((t5181 * t5534 - t5548) * t5180 + t5203 * t5541) * t5895;
t4901 = t5059 * t5210 + t5395;
t4904 = t5059 * t5213 - t5398;
t5294 = -t4901 * t5878 + t4904 * t5894;
t5293 = -t4901 * t5894 - t4904 * t5878;
t4902 = t5059 * t5211 + t5394;
t5292 = -t4902 * t5893 - (t5059 * t5214 - t5397) * t5876;
t5291 = -t4902 * t5876 + ((t5181 * t5533 - t5546) * t5180 + t5214 * t5541) * t5893;
t4903 = t5059 * t5212 + t5393;
t4906 = t5059 * t5215 - t5396;
t5290 = -t4903 * t5874 + t4906 * t5892;
t5289 = -t4903 * t5892 - t4906 * t5874;
t5288 = -t4858 * t5582 - t4979 * t5744;
t5286 = t5354 * t5332;
t5285 = t5354 * t5331;
t5284 = t5353 * t5330;
t5283 = t5353 * t5329;
t5282 = t5352 * t5328;
t5281 = t5352 * t5327;
t5262 = -t5005 * t5697 - t5172 * t5461;
t4885 = t4977 * t5405;
t4884 = t5007 * t5697;
t4823 = -t4976 + t4855;
t4797 = t4858 * t5591;
t4753 = -t4856 + t4976;
t4694 = -t4855 + t4856;
t4692 = t4978 * t5744;
t4691 = -t4976 - t4856;
t4690 = -t4976 - t4855;
t4674 = -t4855 - t4856;
t4661 = t5984 * t5618 + (t5144 * t5551 - t5156 * t5631) * t4931;
t4660 = t5990 * t5618 + t4931 * (t5144 * t5631 + t5156 * t5551);
t4659 = t5985 * t5620 + t4930 * (t5143 * t5551 - t5155 * t5636);
t4658 = t5991 * t5620 + t4930 * (t5143 * t5636 + t5155 * t5551);
t4657 = t5986 * t5622 + t4929 * (t5142 * t5551 - t5154 * t5641);
t4656 = t5992 * t5622 + t4929 * (t5142 * t5641 + t5154 * t5551);
t4655 = t5987 * t5624 + t4928 * (t5141 * t5551 - t5153 * t5646);
t4654 = t5988 * t5626 + t4927 * (t5140 * t5551 - t5152 * t5651);
t4653 = t5994 * t5626 + t4927 * (t5140 * t5651 + t5152 * t5551);
t4652 = t5989 * t5628 + t4926 * (t5139 * t5551 - t5151 * t5656);
t4651 = t5995 * t5628 + t4926 * (t5139 * t5656 + t5151 * t5551);
t4650 = t5993 * t5624 + t4928 * (t5141 * t5646 + t5153 * t5551);
t4649 = t5990 * t5424 + (t5144 * t5438 - t5156 * t5181) * t4931;
t4648 = t5991 * t5426 + t4930 * (t5143 * t5441 - t5155 * t5181);
t4647 = t5992 * t5428 + t4929 * (t5142 * t5444 - t5154 * t5181);
t4646 = t5994 * t5432 + t4927 * (t5140 * t5450 - t5152 * t5181);
t4645 = t5995 * t5434 + t4926 * (t5139 * t5453 - t5151 * t5181);
t4644 = t5984 * t5424 - t4931 * (t5144 * t5181 + t5156 * t5438);
t4643 = t5985 * t5426 - t4930 * (t5143 * t5181 + t5155 * t5441);
t4642 = t5986 * t5428 - t4929 * (t5142 * t5181 + t5154 * t5444);
t4641 = t5987 * t5430 - t4928 * (t5141 * t5181 + t5153 * t5447);
t4640 = t5988 * t5432 - (t5140 * t5181 + t5152 * t5450) * t4927;
t4639 = t5989 * t5434 - t4926 * (t5139 * t5181 + t5151 * t5453);
t4638 = t5993 * t5430 + t4928 * (t5141 * t5447 - t5153 * t5181);
t4580 = -t5990 * t5425 + ((-t5144 * t5634 + t5156 * t5539) * t5184 - t5381) * t4931;
t4579 = -t5991 * t5427 + t4930 * ((-t5143 * t5639 + t5155 * t5539) * t5184 - t5382);
t4578 = -t5992 * t5429 + t4929 * ((-t5142 * t5644 + t5154 * t5539) * t5184 - t5383);
t4577 = -t5994 * t5433 + t4927 * ((-t5140 * t5654 + t5152 * t5539) * t5184 - t5385);
t4576 = -t5995 * t5435 + t4926 * ((-t5139 * t5659 + t5151 * t5539) * t5184 - t5386);
t4575 = -t5984 * t5425 + ((t5144 * t5539 + t5156 * t5634) * t5184 - t5387) * t4931;
t4574 = -t5985 * t5427 + t4930 * ((t5143 * t5539 + t5155 * t5639) * t5184 - t5388);
t4573 = -t5986 * t5429 + t4929 * ((t5142 * t5539 + t5154 * t5644) * t5184 - t5389);
t4572 = -t5987 * t5431 + t4928 * ((t5141 * t5539 + t5153 * t5649) * t5184 - t5390);
t4571 = -t5993 * t5431 + t4928 * ((-t5141 * t5649 + t5153 * t5539) * t5184 - t5384);
t4570 = -t5988 * t5433 + t4927 * ((t5140 * t5539 + t5152 * t5654) * t5184 - t5391);
t4569 = -t5989 * t5435 + t4926 * ((t5139 * t5539 + t5151 * t5659) * t5184 - t5392);
t4562 = t5984 * t5722 - ((-t5144 * t5176 + t5156 * t5436) * t5184 - t5162 * t5381) * t4931;
t4561 = t5986 * t5724 - t4929 * ((-t5142 * t5176 + t5154 * t5442) * t5184 - t5160 * t5383);
t4560 = t5992 * t5724 + t4929 * ((t5142 * t5442 + t5154 * t5176) * t5184 - t5160 * t5389);
t4559 = t5993 * t5725 + ((t5141 * t5445 + t5153 * t5176) * t5184 - t5159 * t5390) * t4928;
t4558 = t5988 * t5726 - ((-t5140 * t5176 + t5152 * t5448) * t5184 - t5158 * t5385) * t4927;
t4557 = t5989 * t5727 - t4926 * ((-t5139 * t5176 + t5151 * t5451) * t5184 - t5157 * t5386);
t4556 = t5990 * t5722 + ((t5144 * t5436 + t5156 * t5176) * t5184 - t5162 * t5387) * t4931;
t4555 = t5985 * t5723 - t4930 * ((-t5143 * t5176 + t5155 * t5439) * t5184 - t5161 * t5382);
t4554 = t5991 * t5723 + ((t5143 * t5439 + t5155 * t5176) * t5184 - t5161 * t5388) * t4930;
t4553 = t5987 * t5725 - t4928 * ((-t5141 * t5176 + t5153 * t5445) * t5184 - t5159 * t5384);
t4552 = t5994 * t5726 + ((t5140 * t5448 + t5152 * t5176) * t5184 - t5158 * t5391) * t4927;
t4551 = t5995 * t5727 + t4926 * ((t5139 * t5451 + t5151 * t5176) * t5184 - t5157 * t5392);
t4445 = (t4649 * t5182 + t4660 * t5177) * t5150 + (-t4649 * t5177 + t4660 * t5182) * t5138;
t4444 = (t4648 * t5182 + t4658 * t5177) * t5149 + (-t4648 * t5177 + t4658 * t5182) * t5137;
t4443 = (t4647 * t5182 + t4656 * t5177) * t5148 + (-t4647 * t5177 + t4656 * t5182) * t5136;
t4442 = (t4646 * t5182 + t4653 * t5177) * t5146 + (-t4646 * t5177 + t4653 * t5182) * t5134;
t4441 = (t4645 * t5182 + t4651 * t5177) * t5145 + (-t4645 * t5177 + t4651 * t5182) * t5133;
t4440 = (t4644 * t5182 + t4661 * t5177) * t5150 + (-t4644 * t5177 + t4661 * t5182) * t5138;
t4439 = (t4643 * t5182 + t4659 * t5177) * t5149 + t5137 * (-t4643 * t5177 + t4659 * t5182);
t4438 = (t4642 * t5182 + t4657 * t5177) * t5148 + t5136 * (-t4642 * t5177 + t4657 * t5182);
t4437 = (t4641 * t5182 + t4655 * t5177) * t5147 + t5135 * (-t4641 * t5177 + t4655 * t5182);
t4436 = (t4640 * t5182 + t4654 * t5177) * t5146 + t5134 * (-t4640 * t5177 + t4654 * t5182);
t4435 = (t4639 * t5182 + t4652 * t5177) * t5145 + (-t4639 * t5177 + t4652 * t5182) * t5133;
t4434 = (t4638 * t5182 + t4650 * t5177) * t5147 + (-t4638 * t5177 + t4650 * t5182) * t5135;
t4403 = (t4562 * t5182 + t4575 * t5177) * t5150 + (-t4562 * t5177 + t4575 * t5182) * t5138;
t4402 = (t4561 * t5182 + t4573 * t5177) * t5148 + t5136 * (-t4561 * t5177 + t4573 * t5182);
t4401 = (t4560 * t5182 + t4578 * t5177) * t5148 + (-t4560 * t5177 + t4578 * t5182) * t5136;
t4400 = (t4559 * t5182 + t4571 * t5177) * t5147 + (-t4559 * t5177 + t4571 * t5182) * t5135;
t4399 = (t4558 * t5182 + t4570 * t5177) * t5146 + (-t4558 * t5177 + t4570 * t5182) * t5134;
t4398 = (t4557 * t5182 + t4569 * t5177) * t5145 + (-t4557 * t5177 + t4569 * t5182) * t5133;
t4397 = (t4556 * t5182 + t4580 * t5177) * t5150 + (-t4556 * t5177 + t4580 * t5182) * t5138;
t4396 = (t4555 * t5182 + t4574 * t5177) * t5149 + t5137 * (-t4555 * t5177 + t4574 * t5182);
t4395 = (t4554 * t5182 + t4579 * t5177) * t5149 + (-t4554 * t5177 + t4579 * t5182) * t5137;
t4394 = (t4553 * t5182 + t4572 * t5177) * t5147 + (-t4553 * t5177 + t4572 * t5182) * t5135;
t4393 = (t4552 * t5182 + t4577 * t5177) * t5146 + (-t4552 * t5177 + t4577 * t5182) * t5134;
t4392 = (t4551 * t5182 + t4576 * t5177) * t5145 + (-t4551 * t5177 + t4576 * t5182) * t5133;
t4391 = ((t4740 * t5716 + t5056 * t5978) * t5150 + t5138 * (-t4740 * t5728 + t5061 * t5978)) * t5156 - ((t4740 * t5056 - t5716 * t5978) * t5150 + (t4740 * t5061 + t5728 * t5978) * t5138) * t5144;
t4390 = ((t4739 * t5717 + t5056 * t5979) * t5149 + t5137 * (-t4739 * t5729 + t5061 * t5979)) * t5155 - t5143 * ((t4739 * t5056 - t5717 * t5979) * t5149 + (t4739 * t5061 + t5729 * t5979) * t5137);
t4389 = ((t4738 * t5718 + t5056 * t5980) * t5148 + t5136 * (-t4738 * t5730 + t5061 * t5980)) * t5154 - ((t4738 * t5056 - t5718 * t5980) * t5148 + t5136 * (t4738 * t5061 + t5730 * t5980)) * t5142;
t4388 = ((t4736 * t5720 + t5056 * t5982) * t5146 + t5134 * (-t4736 * t5732 + t5061 * t5982)) * t5152 - ((t4736 * t5056 - t5720 * t5982) * t5146 + t5134 * (t4736 * t5061 + t5732 * t5982)) * t5140;
t4387 = ((t4735 * t5721 + t5056 * t5983) * t5145 + t5133 * (-t4735 * t5733 + t5061 * t5983)) * t5151 - ((t4735 * t5056 - t5721 * t5983) * t5145 + t5133 * (t4735 * t5061 + t5733 * t5983)) * t5139;
t4386 = ((t4737 * t5719 + t5056 * t5981) * t5147 + t5135 * (-t4737 * t5731 + t5061 * t5981)) * t5153 - ((t4737 * t5056 - t5719 * t5981) * t5147 + t5135 * (t4737 * t5061 + t5731 * t5981)) * t5141;
t4379 = ((t4737 * t5761 + t4887 * t5981) * t5147 + (-t4737 * t5773 + t4890 * t5981) * t5135) * t5153 - t5141 * ((t4737 * t4887 - t5761 * t5981) * t5147 + t5135 * (t4737 * t4890 + t5773 * t5981));
t4378 = ((t4740 * t5758 + t4887 * t5978) * t5150 + t5138 * (-t4740 * t5770 + t4890 * t5978)) * t5156 - ((t4740 * t4887 - t5758 * t5978) * t5150 + t5138 * (t4740 * t4890 + t5770 * t5978)) * t5144;
t4377 = ((t4739 * t5759 + t4887 * t5979) * t5149 + t5137 * (-t4739 * t5771 + t4890 * t5979)) * t5155 - t5143 * ((t4739 * t4887 - t5759 * t5979) * t5149 + t5137 * (t4739 * t4890 + t5771 * t5979));
t4376 = ((t4738 * t5760 + t4887 * t5980) * t5148 + t5136 * (-t4738 * t5772 + t4890 * t5980)) * t5154 - ((t4738 * t4887 - t5760 * t5980) * t5148 + t5136 * (t4738 * t4890 + t5772 * t5980)) * t5142;
t4375 = ((t4736 * t5762 + t4887 * t5982) * t5146 + t5134 * (-t4736 * t5774 + t4890 * t5982)) * t5152 - ((t4736 * t4887 - t5762 * t5982) * t5146 + t5134 * (t4736 * t4890 + t5774 * t5982)) * t5140;
t4374 = ((t4735 * t5763 + t4887 * t5983) * t5145 + t5133 * (-t4735 * t5775 + t4890 * t5983)) * t5151 - ((t4735 * t4887 - t5763 * t5983) * t5145 + t5133 * (t4735 * t4890 + t5775 * t5983)) * t5139;
t4301 = (t4397 * t5212 + t4445 * t5215) * t5907 + pkin(3) * (t4397 * t5215 - t4445 * t5212);
t4300 = (t4395 * t5211 + t4444 * t5214) * t5907 + pkin(3) * (t4395 * t5214 - t4444 * t5211);
t4299 = (t4401 * t5210 + t4443 * t5213) * t5907 + (t4401 * t5213 - t4443 * t5210) * pkin(3);
t4298 = -(t4403 * t5212 + t4440 * t5215) * t5907 - pkin(3) * (t4403 * t5215 - t4440 * t5212);
t4297 = -(t4396 * t5211 + t4439 * t5214) * t5907 - (t4396 * t5214 - t4439 * t5211) * pkin(3);
t4296 = -(t4402 * t5210 + t4438 * t5213) * t5907 - pkin(3) * (t4402 * t5213 - t4438 * t5210);
t4295 = (t4392 * t5198 + t4441 * t5201) * t5907 + pkin(3) * (t4392 * t5201 - t4441 * t5198);
t4294 = -(t4398 * t5198 + t4435 * t5201) * t5907 - (t4398 * t5201 - t4435 * t5198) * pkin(3);
t4293 = (t4393 * t5199 + t4442 * t5202) * t5907 + pkin(3) * (t4393 * t5202 - t4442 * t5199);
t4292 = -(t4394 * t5200 + t4437 * t5203) * t5907 - pkin(3) * (t4394 * t5203 - t4437 * t5200);
t4291 = -(t4399 * t5199 + t4436 * t5202) * t5907 - pkin(3) * (t4399 * t5202 - t4436 * t5199);
t4290 = (t4400 * t5200 + t4434 * t5203) * t5907 + pkin(3) * (t4400 * t5203 - t4434 * t5200);
t4283 = (t4377 * t5211 + t4390 * t5214) * t5907 + pkin(3) * (t4377 * t5214 - t4390 * t5211);
t4282 = (t4378 * t5212 + t4391 * t5215) * t5907 + pkin(3) * (t4378 * t5215 - t4391 * t5212);
t4281 = (t4376 * t5210 + t4389 * t5213) * t5907 + (t4376 * t5213 - t4389 * t5210) * pkin(3);
t4280 = (t4375 * t5199 + t4388 * t5202) * t5907 + pkin(3) * (t4375 * t5202 - t4388 * t5199);
t4279 = (t4374 * t5198 + t4387 * t5201) * t5907 + pkin(3) * (t4374 * t5201 - t4387 * t5198);
t4278 = (t4379 * t5200 + t4386 * t5203) * t5907 + pkin(3) * (t4379 * t5203 - t4386 * t5200);
t4262 = t5185 * t5256 + t4271;
t4261 = t5185 * t5257 + t4270;
t4260 = t5185 * t5258 + t4269;
t4256 = t5185 * t5259 + t4268;
t4255 = t5185 * t5260 + t4267;
t4254 = t5185 * t5261 + t4266;
t4253 = t4265 * t5179 + t4271 * t5380;
t4252 = t4264 * t5179 + t4270 * t5380;
t4251 = t4263 * t5179 + t4269 * t5380;
t4250 = t4259 * t5179 + t4268 * t5380;
t4249 = t4258 * t5179 + t4267 * t5380;
t4248 = t4257 * t5179 + t4266 * t5380;
t4247 = -t4253 * t5212 - t4271 * t5393;
t4246 = t4253 * t5215 - t4271 * t5396;
t4245 = -t4252 * t5211 - t4270 * t5394;
t4244 = t4252 * t5214 - t4270 * t5397;
t4243 = -t4251 * t5210 - t4269 * t5395;
t4242 = t4251 * t5213 - t4269 * t5398;
t4241 = -t4250 * t5200 - t4268 * t5399;
t4240 = t4250 * t5203 - t4268 * t5402;
t4239 = -t4249 * t5199 - t4267 * t5400;
t4238 = t4249 * t5202 - t4267 * t5403;
t4237 = -t4248 * t5198 - t4266 * t5401;
t4236 = t4248 * t5201 - t4266 * t5404;
t1 = [(t4266 * t5825 + t4267 * t5824 + t4268 * t5823 + t4269 * t5822 + t4270 * t5821 + t4271 * t5820) * t5175, (t4254 * t5825 + t4255 * t5824 + t4256 * t5823 + t4257 * t5489 + t4258 * t5488 + t4259 * t5487 + t4260 * t5822 + t4261 * t5821 + t4262 * t5820 + t4263 * t5486 + t4264 * t5485 + t4265 * t5484) * t5175, -t4272 * t5476 - t4273 * t5475 - t4274 * t5474 - t4275 * t5473 - t4276 * t5472 - t4277 * t5471, -t4236 * t5476 - t4238 * t5475 - t4240 * t5474 - t4242 * t5473 - t4244 * t5472 - t4246 * t5471 + (t5290 * t4517 + t5291 * t4516 + t5294 * t4515 + t5295 * t4514 + t5297 * t4513 + t5299 * t4512 + (-t5327 * t5487 - t5329 * t5488 - t5331 * t5489 + t5943 * t5965 + t5945 * t5964 + t5946 * t5963) * t5179) * t5175, -t4237 * t5476 - t4239 * t5475 - t4241 * t5474 - t4243 * t5473 - t4245 * t5472 - t4247 * t5471 + (t5289 * t4517 + t5292 * t4516 + t5293 * t4515 + t5296 * t4514 + t5298 * t4513 + t5300 * t4512 + (-t5328 * t5487 - t5330 * t5488 - t5332 * t5489 + t5935 * t5965 + t5936 * t5963 + t5944 * t5964) * t5179) * t5175, 0, 0, 0, 0, 0, 0, t4690 * t5591 - t5783 + t4884 + (-t5461 + t5464) * t5169, -t4691 * t5616 + t5262 + t5497, t4674 * t5170 + t4797 + (t5782 + (t5740 + t5742) * t5116) * t5173, 0; (t4266 * t5854 + t4267 * t5852 + t4268 * t5850 + t4269 * t5848 + t4270 * t5846 + t4271 * t5844) * t5175, (t4254 * t5854 + t4255 * t5852 + t4256 * t5850 + t4260 * t5848 + t4261 * t5846 + t4262 * t5844 + t4407 * t5906 + t4408 * t5905 + t4409 * t5904 + t4413 * t5968 + t4414 * t5967 + t4415 * t5966) * t5175, t4272 * t5795 + t4273 * t5794 + t4274 * t5793 + t4275 * t5792 + t4276 * t5791 + t4277 * t5790, t4236 * t5795 + t4238 * t5794 + t4240 * t5793 + t4242 * t5792 + t4244 * t5791 + t4246 * t5790 + (t5290 * t4475 + t5291 * t4473 + t5294 * t4471 + t5295 * t4469 + t5297 * t4467 + t5299 * t4465 + (-t4407 * t5285 - t4408 * t5283 - t4409 * t5281 + t4413 * t5943 + t4414 * t5945 + t4415 * t5946) * t5179) * t5175, t4237 * t5795 + t4239 * t5794 + t4241 * t5793 + t4243 * t5792 + t4245 * t5791 + t4247 * t5790 + (t5289 * t4475 + t5292 * t4473 + t5293 * t4471 + t5296 * t4469 + t5298 * t4467 + t5300 * t4465 + (-t4407 * t5286 - t4408 * t5284 - t4409 * t5282 + t4413 * t5935 + t4414 * t5944 + t4415 * t5936) * t5179) * t5175, 0, 0, 0, 0, 0, 0, t5477 + t4690 * t4978 + t4885 + (-t5462 - t5745) * t5007, t4691 * t4977 - t4692 + (-t5465 + (-t4859 + t5743) * t5171) * t5173, -t4674 * t5606 + t5308 + t5500, 0; (t4266 * t5855 + t4267 * t5853 + t4268 * t5851 + t4269 * t5849 + t4270 * t5847 + t4271 * t5845) * t5175, (t4254 * t5855 + t4255 * t5853 + t4256 * t5851 + t4260 * t5849 + t4261 * t5847 + t4262 * t5845 + t4404 * t5906 + t4405 * t5905 + t4406 * t5904 + t4410 * t5968 + t4411 * t5967 + t4412 * t5966) * t5175, t4272 * t5801 + t4273 * t5800 + t4274 * t5799 + t4275 * t5798 + t4276 * t5797 + t4277 * t5796, t4236 * t5801 + t4238 * t5800 + t4240 * t5799 + t4242 * t5798 + t4244 * t5797 + t4246 * t5796 + (t5290 * t4474 + t5291 * t4472 + t5294 * t4470 + t5295 * t4468 + t5297 * t4466 + t5299 * t4464 + (-t4404 * t5285 - t4405 * t5283 - t4406 * t5281 + t4410 * t5943 + t4411 * t5945 + t4412 * t5946) * t5179) * t5175, t4237 * t5801 + t4239 * t5800 + t4241 * t5799 + t4243 * t5798 + t4245 * t5797 + t4247 * t5796 + (t5289 * t4474 + t5292 * t4472 + t5293 * t4470 + t5296 * t4468 + t5298 * t4466 + t5300 * t4464 + (-t4404 * t5286 - t4405 * t5284 - t4406 * t5282 + t4410 * t5935 + t4411 * t5944 + t4412 * t5936) * t5179) * t5175, 0, 0, 0, 0, 0, 0, t4690 * t4980 + t5288 + t5496, t4691 * t4979 + t5498 - t5947, t4674 * t5582 + t5307 + t5499, 0; (t4266 * t5891 + t4267 * t5890 + t4268 * t5889 + t4269 * t5888 + t4270 * t5887 + t4271 * t5886) * t5175, (t4254 * t5891 + t4255 * t5890 + t4256 * t5889 + t4260 * t5888 + t4261 * t5887 + t4262 * t5886 + t4278 * t5904 + t4279 * t5906 + t4280 * t5905 + t4281 * t5968 + t4282 * t5966 + t4283 * t5967) * t5175, t4272 * t5860 + t4273 * t5859 + t4274 * t5858 + t4275 * t5861 + t4276 * t5857 + t4277 * t5856, t4236 * t5860 + t4238 * t5859 + t4240 * t5858 + t4242 * t5861 + t4244 * t5857 + t4246 * t5856 + (t5290 * t4289 + t5291 * t4288 + t5294 * t4287 + t5295 * t4286 + t5297 * t4285 + t5299 * t4284 + (-t4278 * t5281 - t4279 * t5285 - t4280 * t5283 + t4281 * t5943 + t4282 * t5946 + t4283 * t5945) * t5179) * t5175, t4237 * t5860 + t4239 * t5859 + t4241 * t5858 + t4243 * t5861 + t4245 * t5857 + t4247 * t5856 + (t5289 * t4289 + t5292 * t4288 + t5293 * t4287 + t5296 * t4286 + t5298 * t4285 + t5300 * t4284 + (-t4278 * t5282 - t4279 * t5286 - t4280 * t5284 + t4281 * t5935 + t4282 * t5936 + t4283 * t5944) * t5179) * t5175, t4859 * t5591 + (t5005 * t5170 - t5116 * t5616) * t5007, t4694 * t5170 + t4797 + (-t5782 + (-t5740 + t5742) * t5116) * t5173, -t4753 * t5616 - t5262 + t5497, -t4858 * t5616 + (-t5007 * t5170 + t5116 * t5591) * t5005, t4823 * t5591 + t5783 + t4884 + (-t5461 - t5464) * t5169, (t5170 * t5519 + (-t5005 * t5172 + t5007 * t5169) * t5116) * t5173, 0, 0, 0, 0; (t4266 * t5872 + t4267 * t5870 + t4268 * t5868 + t4269 * t5866 + t4270 * t5864 + t4271 * t5862) * t5175, (t4254 * t5872 + t4255 * t5870 + t4256 * t5868 + t4260 * t5866 + t4261 * t5864 + t4262 * t5862 + t4291 * t5905 + t4292 * t5904 + t4294 * t5906 + t4296 * t5968 + t4297 * t5967 + t4298 * t5966) * t5175, t4272 * t5842 + t4273 * t5840 + t4274 * t5838 + t4275 * t5836 + t4276 * t5834 + t4277 * t5832, t4236 * t5842 + t4238 * t5840 + t4240 * t5838 + t4242 * t5836 + t4244 * t5834 + t4246 * t5832 + (t5290 * t4331 + t5291 * t4329 + t5294 * t4327 + t5295 * t4325 + t5297 * t4323 + t5299 * t4321 + (-t4291 * t5283 - t4292 * t5281 - t4294 * t5285 + t4296 * t5943 + t4297 * t5945 + t4298 * t5946) * t5179) * t5175, t4237 * t5842 + t4239 * t5840 + t4241 * t5838 + t4243 * t5836 + t4245 * t5834 + t4247 * t5832 + (t5289 * t4331 + t5292 * t4329 + t5293 * t4327 + t5296 * t4325 + t5298 * t4323 + t5300 * t4321 + (-t4291 * t5284 - t4292 * t5282 - t4294 * t5286 + t4296 * t5935 + t4297 * t5944 + t4298 * t5936) * t5179) * t5175, t4859 * t4978 + (t4977 * t5116 - t5005 * t5606) * t5007, -t4694 * t5606 - t5308 + t5500, t4753 * t4977 - t4692 + (t5465 + (-t4859 - t5743) * t5171) * t5173, t4858 * t4977 + (t4978 * t5116 + t5007 * t5606) * t5005, -t5477 + t4823 * t4978 + t4885 + (-t5462 + t5745) * t5007, -t5171 * t5461 + (-t4977 * t5007 - t4978 * t5005) * t5116, 0, 0, 0, 0; (t4266 * t5873 + t4267 * t5871 + t4268 * t5869 + t4269 * t5867 + t4270 * t5865 + t4271 * t5863) * t5175, (t4254 * t5873 + t4255 * t5871 + t4256 * t5869 + t4260 * t5867 + t4261 * t5865 + t4262 * t5863 + t4290 * t5904 + t4293 * t5905 + t4295 * t5906 + t4299 * t5968 + t4300 * t5967 + t4301 * t5966) * t5175, t4272 * t5843 + t4273 * t5841 + t4274 * t5839 + t4275 * t5837 + t4276 * t5835 + t4277 * t5833, t4236 * t5843 + t4238 * t5841 + t4240 * t5839 + t4242 * t5837 + t4244 * t5835 + t4246 * t5833 + (t5290 * t4330 + t5291 * t4328 + t5294 * t4326 + t5295 * t4324 + t5297 * t4322 + t5299 * t4320 + (-t4290 * t5281 - t4293 * t5283 - t4295 * t5285 + t4299 * t5943 + t4300 * t5945 + t4301 * t5946) * t5179) * t5175, t4237 * t5843 + t4239 * t5841 + t4241 * t5839 + t4243 * t5837 + t4245 * t5835 + t4247 * t5833 + (t5289 * t4330 + t5292 * t4328 + t5293 * t4326 + t5296 * t4324 + t5298 * t4322 + t5300 * t4320 + (-t4290 * t5282 - t4293 * t5284 - t4295 * t5286 + t4299 * t5935 + t4300 * t5944 + t4301 * t5936) * t5179) * t5175, t4859 * t4980 + (t4979 * t5116 + t5005 * t5582) * t5007, t4694 * t5582 - t5307 + t5499, t4753 * t4979 + t5498 + t5947, t4858 * t4979 + (t4980 * t5116 - t5463) * t5005, t4823 * t4980 - t5288 + t5496, t5174 * t5461 + (-t4979 * t5007 - t4980 * t5005) * t5116, 0, 0, 0, 0;];
tau_reg  = t1;
