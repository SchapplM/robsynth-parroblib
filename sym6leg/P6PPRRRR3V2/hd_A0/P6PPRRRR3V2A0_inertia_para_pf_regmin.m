% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P6PPRRRR3V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d3,d4,theta1,theta2]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6*6x15]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 22:25
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PPRRRR3V2A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 21:54:28
% EndTime: 2019-05-16 22:03:36
% DurationCPUTime: 826.82s
% Computational Cost: add. (320887->3380), mult. (849636->5859), div. (14976->20), fcn. (984098->63), ass. (0->1799)
t2983 = legFrame(6,2);
t2942 = cos(t2983);
t2956 = sin(pkin(10));
t2961 = cos(pkin(10));
t2963 = cos(pkin(5));
t2977 = sin(qJ(3,6));
t2980 = cos(qJ(3,6));
t3571 = t2963 * t2980;
t3588 = t2956 * t2977;
t4078 = pkin(8) * sin(pkin(6));
t3076 = 0.1e1 / ((-t2961 * t2980 + t2963 * t3588) * t4078 + pkin(3) * (t2956 * t3571 + t2961 * t2977));
t2957 = sin(pkin(9));
t2962 = cos(pkin(9));
t2964 = cos(pkin(4));
t3589 = t2956 * t2964;
t2821 = t2957 * t3589 - t2961 * t2962;
t3572 = t2962 * t2964;
t2825 = t2956 * t3572 + t2957 * t2961;
t2965 = legFrame(6,3);
t2912 = sin(t2965);
t2924 = cos(t2965);
t2628 = -t2821 * t2912 + t2825 * t2924;
t3573 = t2961 * t2964;
t2959 = sin(pkin(5));
t2960 = sin(pkin(4));
t3576 = t2959 * t2960;
t2675 = (t2956 * t2962 + t2957 * t3573) * t2963 - t2957 * t3576;
t2676 = (t2956 * t2957 - t2961 * t3572) * t2963 + t2962 * t3576;
t4151 = t2675 * t2912 + t2676 * t2924;
t4230 = pkin(3) * (t2977 * t2628 + t2980 * t4151) - (t2628 * t2980 - t2977 * t4151) * t4078;
t3912 = t4230 * t3076;
t4235 = t2942 * t3912;
t2984 = legFrame(5,2);
t2943 = cos(t2984);
t2978 = sin(qJ(3,5));
t2981 = cos(qJ(3,5));
t3570 = t2963 * t2981;
t3587 = t2956 * t2978;
t3075 = 0.1e1 / ((-t2961 * t2981 + t2963 * t3587) * t4078 + pkin(3) * (t2956 * t3570 + t2961 * t2978));
t2966 = legFrame(5,3);
t2913 = sin(t2966);
t2925 = cos(t2966);
t2629 = -t2821 * t2913 + t2825 * t2925;
t4150 = t2675 * t2913 + t2676 * t2925;
t4231 = pkin(3) * (t2978 * t2629 + t2981 * t4150) - (t2629 * t2981 - t2978 * t4150) * t4078;
t3911 = t4231 * t3075;
t4234 = t2943 * t3911;
t2985 = legFrame(4,2);
t2944 = cos(t2985);
t2979 = sin(qJ(3,4));
t2982 = cos(qJ(3,4));
t3569 = t2963 * t2982;
t3586 = t2956 * t2979;
t3074 = 0.1e1 / ((-t2961 * t2982 + t2963 * t3586) * t4078 + pkin(3) * (t2956 * t3569 + t2961 * t2979));
t2967 = legFrame(4,3);
t2914 = sin(t2967);
t2926 = cos(t2967);
t2630 = -t2821 * t2914 + t2825 * t2926;
t4149 = t2675 * t2914 + t2676 * t2926;
t4232 = pkin(3) * (t2979 * t2630 + t2982 * t4149) - (t2630 * t2982 - t2979 * t4149) * t4078;
t3910 = t4232 * t3074;
t4233 = t2944 * t3910;
t2824 = t2963 * t3573 - t3576;
t3590 = t2956 * t2963;
t2674 = t2824 * t2957 + t2962 * t3590;
t2677 = t2824 * t2962 - t2957 * t3590;
t2500 = t2674 * t2924 + t2677 * t2912;
t2506 = -t2674 * t2912 + t2677 * t2924;
t2971 = legFrame(6,1);
t2930 = cos(t2971);
t2918 = sin(t2971);
t2936 = sin(t2983);
t3709 = t2918 * t2936;
t2367 = t2500 * t2930 + t2506 * t3709;
t2616 = t2821 * t2924 + t2825 * t2912;
t2481 = t2616 * t2930 + t2628 * t3709;
t4215 = pkin(3) * (-t2367 * t2980 + t2977 * t2481) - (t2367 * t2977 + t2481 * t2980) * t4078;
t4229 = t4215 * t3076;
t2501 = t2674 * t2925 + t2677 * t2913;
t2507 = -t2674 * t2913 + t2677 * t2925;
t2972 = legFrame(5,1);
t2931 = cos(t2972);
t2919 = sin(t2972);
t2937 = sin(t2984);
t3706 = t2919 * t2937;
t2368 = t2501 * t2931 + t2507 * t3706;
t2617 = t2821 * t2925 + t2825 * t2913;
t2482 = t2617 * t2931 + t2629 * t3706;
t4216 = pkin(3) * (-t2368 * t2981 + t2978 * t2482) - (t2368 * t2978 + t2482 * t2981) * t4078;
t4228 = t4216 * t3075;
t2502 = t2674 * t2926 + t2677 * t2914;
t2508 = -t2674 * t2914 + t2677 * t2926;
t2973 = legFrame(4,1);
t2932 = cos(t2973);
t2920 = sin(t2973);
t2938 = sin(t2985);
t3703 = t2920 * t2938;
t2369 = t2502 * t2932 + t2508 * t3703;
t2618 = t2821 * t2926 + t2825 * t2914;
t2483 = t2618 * t2932 + t2630 * t3703;
t4217 = pkin(3) * (-t2369 * t2982 + t2979 * t2483) - (t2369 * t2979 + t2483 * t2982) * t4078;
t4227 = t4217 * t3074;
t2995 = xP(6);
t2948 = sin(t2995);
t2951 = cos(t2995);
t3004 = koppelP(6,2);
t3010 = koppelP(6,1);
t2850 = t2948 * t3010 + t2951 * t3004;
t2997 = xP(4);
t2950 = sin(t2997);
t2953 = cos(t2997);
t3561 = t3010 * t2951;
t2844 = t2948 * t3004 - t3561;
t2996 = xP(5);
t2952 = cos(t2996);
t2998 = koppelP(6,3);
t2884 = t2952 * t2998;
t2949 = sin(t2996);
t3178 = t2844 * t2949 + t2884;
t4223 = t2953 * t2850 - t3178 * t2950;
t3005 = koppelP(5,2);
t3011 = koppelP(5,1);
t2851 = t2948 * t3011 + t2951 * t3005;
t3560 = t3011 * t2951;
t2845 = t2948 * t3005 - t3560;
t2999 = koppelP(5,3);
t2885 = t2952 * t2999;
t3177 = t2845 * t2949 + t2885;
t4222 = t2953 * t2851 - t3177 * t2950;
t3006 = koppelP(4,2);
t3012 = koppelP(4,1);
t2852 = t2948 * t3012 + t2951 * t3006;
t3559 = t3012 * t2951;
t2846 = t2948 * t3006 - t3559;
t3000 = koppelP(4,3);
t2886 = t2952 * t3000;
t3176 = t2846 * t2949 + t2886;
t4221 = t2953 * t2852 - t3176 * t2950;
t3007 = koppelP(3,2);
t3013 = koppelP(3,1);
t2853 = t2948 * t3013 + t2951 * t3007;
t3558 = t3013 * t2951;
t2847 = t2948 * t3007 - t3558;
t3001 = koppelP(3,3);
t2887 = t2952 * t3001;
t3175 = t2847 * t2949 + t2887;
t4220 = t2953 * t2853 - t3175 * t2950;
t3008 = koppelP(2,2);
t3014 = koppelP(2,1);
t2854 = t2948 * t3014 + t2951 * t3008;
t3557 = t3014 * t2951;
t2848 = t2948 * t3008 - t3557;
t3002 = koppelP(2,3);
t2888 = t2952 * t3002;
t3174 = t2848 * t2949 + t2888;
t4219 = t2953 * t2854 - t3174 * t2950;
t3009 = koppelP(1,2);
t3015 = koppelP(1,1);
t2855 = t2948 * t3015 + t2951 * t3009;
t2849 = t2948 * t3009 - t2951 * t3015;
t3003 = koppelP(1,3);
t2889 = t2952 * t3003;
t3173 = t2849 * t2949 + t2889;
t4218 = t2953 * t2855 - t3173 * t2950;
t3629 = t2949 * t2998;
t2707 = t2844 * t2952 - t3629;
t3691 = t2930 * t2936;
t3596 = t2953 * t3010;
t3602 = t2953 * t3004;
t3613 = t2950 * t3010;
t3619 = t2950 * t3004;
t2622 = -(t2949 * t3596 - t3619) * t2951 + t2948 * (t2949 * t3602 + t3613);
t3604 = t2953 * t2952;
t4160 = t2998 * t3604 + t2622;
t4214 = -t2707 * t3691 + t2942 * t4160;
t2610 = (t2949 * t3613 + t3602) * t2951 - (t2949 * t3619 - t3596) * t2948;
t4166 = -t2950 * t2884 + t2610;
t4213 = t2707 * t3709 + t2942 * t4166;
t3628 = t2949 * t2999;
t2708 = t2845 * t2952 - t3628;
t3688 = t2931 * t2937;
t3595 = t2953 * t3011;
t3601 = t2953 * t3005;
t3612 = t2950 * t3011;
t3618 = t2950 * t3005;
t2623 = -(t2949 * t3595 - t3618) * t2951 + t2948 * (t2949 * t3601 + t3612);
t4159 = t2999 * t3604 + t2623;
t4212 = -t2708 * t3688 + t2943 * t4159;
t2611 = (t2949 * t3612 + t3601) * t2951 - (t2949 * t3618 - t3595) * t2948;
t4165 = -t2950 * t2885 + t2611;
t4211 = t2708 * t3706 + t2943 * t4165;
t3627 = t2949 * t3000;
t2709 = t2846 * t2952 - t3627;
t3685 = t2932 * t2938;
t3594 = t2953 * t3012;
t3600 = t2953 * t3006;
t3611 = t2950 * t3012;
t3617 = t2950 * t3006;
t2624 = -(t2949 * t3594 - t3617) * t2951 + t2948 * (t2949 * t3600 + t3611);
t4158 = t3000 * t3604 + t2624;
t4210 = -t2709 * t3685 + t2944 * t4158;
t2612 = (t2949 * t3611 + t3600) * t2951 - (t2949 * t3617 - t3594) * t2948;
t4164 = -t2950 * t2886 + t2612;
t4209 = t2709 * t3703 + t2944 * t4164;
t3626 = t2949 * t3001;
t2710 = t2847 * t2952 - t3626;
t2986 = legFrame(3,2);
t2945 = cos(t2986);
t2974 = legFrame(3,1);
t2933 = cos(t2974);
t2939 = sin(t2986);
t3682 = t2933 * t2939;
t3593 = t2953 * t3013;
t3599 = t2953 * t3007;
t3610 = t2950 * t3013;
t3616 = t2950 * t3007;
t2625 = -(t2949 * t3593 - t3616) * t2951 + t2948 * (t2949 * t3599 + t3610);
t4157 = t3001 * t3604 + t2625;
t4208 = -t2710 * t3682 + t2945 * t4157;
t2921 = sin(t2974);
t3700 = t2921 * t2939;
t2613 = (t2949 * t3610 + t3599) * t2951 - (t2949 * t3616 - t3593) * t2948;
t4163 = -t2950 * t2887 + t2613;
t4207 = t2710 * t3700 + t2945 * t4163;
t3625 = t2949 * t3002;
t2711 = t2848 * t2952 - t3625;
t2987 = legFrame(2,2);
t2946 = cos(t2987);
t2975 = legFrame(2,1);
t2934 = cos(t2975);
t2940 = sin(t2987);
t3679 = t2934 * t2940;
t3592 = t2953 * t3014;
t3598 = t2953 * t3008;
t3609 = t2950 * t3014;
t3615 = t2950 * t3008;
t2626 = -(t2949 * t3592 - t3615) * t2951 + t2948 * (t2949 * t3598 + t3609);
t4156 = t3002 * t3604 + t2626;
t4206 = -t2711 * t3679 + t2946 * t4156;
t2922 = sin(t2975);
t3697 = t2922 * t2940;
t2614 = (t2949 * t3609 + t3598) * t2951 - (t2949 * t3615 - t3592) * t2948;
t4162 = -t2950 * t2888 + t2614;
t4205 = t2711 * t3697 + t2946 * t4162;
t3624 = t2949 * t3003;
t2712 = t2849 * t2952 - t3624;
t2988 = legFrame(1,2);
t2947 = cos(t2988);
t2976 = legFrame(1,1);
t2935 = cos(t2976);
t2941 = sin(t2988);
t3676 = t2935 * t2941;
t3591 = t2953 * t3015;
t3597 = t2953 * t3009;
t3608 = t2950 * t3015;
t3614 = t2950 * t3009;
t2627 = -(t2949 * t3591 - t3614) * t2951 + t2948 * (t2949 * t3597 + t3608);
t4155 = t3003 * t3604 + t2627;
t4204 = -t2712 * t3676 + t2947 * t4155;
t2923 = sin(t2976);
t3694 = t2923 * t2941;
t2615 = (t2949 * t3608 + t3597) * t2951 - (t2949 * t3614 - t3591) * t2948;
t4161 = -t2950 * t2889 + t2615;
t4203 = t2712 * t3694 + t2947 * t4161;
t4087 = t2950 * t2853 + t2953 * t3175;
t2454 = (-t2950 * t4087 - t2953 * t4220) * t2952;
t3607 = t2952 * t2948;
t2696 = t2952 * t3558 - t3007 * t3607 + t3626;
t3621 = t2950 * t2952;
t2494 = t2696 * t3621 + t2949 * t4220;
t2495 = t2696 * t3604 - t2949 * t4087;
t2968 = legFrame(3,3);
t2915 = sin(t2968);
t2927 = cos(t2968);
t2829 = t2915 * t2962 + t2927 * t2957;
t2835 = -t2915 * t2957 + t2927 * t2962;
t2601 = -t2829 * t2921 + t2835 * t3682;
t2607 = -t2829 * t2933 - t2835 * t3700;
t2989 = sin(qJ(3,3));
t2992 = cos(qJ(3,3));
t2866 = pkin(3) * t2992 + t2989 * t4078;
t2869 = pkin(3) * t2989 - t2992 * t4078;
t2671 = t2866 * t3590 + t2869 * t2961;
t2665 = 0.1e1 / t2671;
t3725 = t2835 * t2945;
t2187 = (-t2454 * t3725 + t2494 * t2601 + t2495 * t2607) * t2665;
t3579 = t2956 * t2992;
t3582 = t2956 * t2989;
t3073 = 0.1e1 / ((-t2961 * t2992 + t2963 * t3582) * t4078 + pkin(3) * (t2961 * t2989 + t2963 * t3579));
t4113 = t3073 * t2992;
t4202 = t2187 * t4113;
t4114 = t3073 * t2989;
t4201 = t2187 * t4114;
t4086 = t2950 * t2854 + t2953 * t3174;
t2455 = (-t2950 * t4086 - t2953 * t4219) * t2952;
t2697 = t2952 * t3557 - t3008 * t3607 + t3625;
t2496 = t2697 * t3621 + t2949 * t4219;
t2497 = t2697 * t3604 - t2949 * t4086;
t2969 = legFrame(2,3);
t2916 = sin(t2969);
t2928 = cos(t2969);
t2830 = t2916 * t2962 + t2928 * t2957;
t2836 = -t2916 * t2957 + t2928 * t2962;
t2602 = -t2830 * t2922 + t2836 * t3679;
t2608 = -t2830 * t2934 - t2836 * t3697;
t2990 = sin(qJ(3,2));
t2993 = cos(qJ(3,2));
t2867 = pkin(3) * t2993 + t2990 * t4078;
t2870 = pkin(3) * t2990 - t2993 * t4078;
t2672 = t2867 * t3590 + t2870 * t2961;
t2667 = 0.1e1 / t2672;
t3724 = t2836 * t2946;
t2188 = (-t2455 * t3724 + t2496 * t2602 + t2497 * t2608) * t2667;
t3568 = t2963 * t2993;
t3581 = t2956 * t2990;
t3072 = 0.1e1 / ((-t2961 * t2993 + t2963 * t3581) * t4078 + pkin(3) * (t2956 * t3568 + t2961 * t2990));
t4119 = t3072 * t2993;
t4200 = t2188 * t4119;
t4120 = t3072 * t2990;
t4199 = t2188 * t4120;
t4085 = t2950 * t2855 + t2953 * t3173;
t2456 = (-t2950 * t4085 - t2953 * t4218) * t2952;
t3606 = t2952 * t2951;
t2698 = -t3009 * t3607 + t3015 * t3606 + t3624;
t2498 = t2698 * t3621 + t2949 * t4218;
t2499 = t2698 * t3604 - t2949 * t4085;
t2970 = legFrame(1,3);
t2917 = sin(t2970);
t2929 = cos(t2970);
t2831 = t2917 * t2962 + t2929 * t2957;
t2837 = -t2917 * t2957 + t2929 * t2962;
t2603 = -t2831 * t2923 + t2837 * t3676;
t2609 = -t2831 * t2935 - t2837 * t3694;
t2991 = sin(qJ(3,1));
t2994 = cos(qJ(3,1));
t2868 = pkin(3) * t2994 + t2991 * t4078;
t2871 = pkin(3) * t2991 - t2994 * t4078;
t2673 = t2868 * t3590 + t2871 * t2961;
t2669 = 0.1e1 / t2673;
t3723 = t2837 * t2947;
t2189 = (-t2456 * t3723 + t2498 * t2603 + t2499 * t2609) * t2669;
t3577 = t2956 * t2994;
t3580 = t2956 * t2991;
t3071 = 0.1e1 / ((-t2961 * t2994 + t2963 * t3580) * t4078 + pkin(3) * (t2961 * t2991 + t2963 * t3577));
t4125 = t3071 * t2994;
t4198 = t2189 * t4125;
t4126 = t3071 * t2991;
t4197 = t2189 * t4126;
t2472 = -t2950 * t4220 + t2953 * t4087;
t2259 = (-t2472 * t3725 + (-t2601 * t2953 + t2607 * t2950) * t2696) * t2665;
t4196 = t2259 * t4113;
t4195 = t2259 * t4114;
t2473 = -t2950 * t4219 + t2953 * t4086;
t2260 = (-t2473 * t3724 + (-t2602 * t2953 + t2608 * t2950) * t2697) * t2667;
t4194 = t2260 * t4119;
t4193 = t2260 * t4120;
t2474 = -t2950 * t4218 + t2953 * t4085;
t2261 = (-t2474 * t3723 + (-t2603 * t2953 + t2609 * t2950) * t2698) * t2669;
t4192 = t2261 * t4125;
t4191 = t2261 * t4126;
t2331 = (t2601 * t4220 - t2607 * t4087) * t2665;
t4190 = t2331 * t4113;
t4189 = t2331 * t4114;
t2332 = (t2602 * t4219 - t2608 * t4086) * t2667;
t4188 = t2332 * t4119;
t4187 = t2332 * t4120;
t2333 = (t2603 * t4218 - t2609 * t4085) * t2669;
t4186 = t2333 * t4125;
t4185 = t2333 * t4126;
t4109 = t2665 * t4114;
t4184 = t2601 * t4109;
t4110 = t2665 * t4113;
t4183 = t2601 * t4110;
t4115 = t2667 * t4120;
t4182 = t2602 * t4115;
t4116 = t2667 * t4119;
t4181 = t2602 * t4116;
t4121 = t2669 * t4126;
t4180 = t2603 * t4121;
t4122 = t2669 * t4125;
t4179 = t2603 * t4122;
t4178 = t2607 * t4109;
t4177 = t2607 * t4110;
t4176 = t2608 * t4115;
t4175 = t2608 * t4116;
t4174 = t2609 * t4121;
t4173 = t2609 * t4122;
t3300 = t2669 * t3723;
t4172 = t3071 * t3300;
t3305 = t2667 * t3724;
t4171 = t3072 * t3305;
t3310 = t2665 * t3725;
t4170 = t3073 * t3310;
t2363 = -t2502 * t2920 + t2508 * t3685;
t2477 = -t2618 * t2920 + t2630 * t3685;
t4091 = pkin(3) * (t2363 * t2982 - t2477 * t2979) + (t2363 * t2979 + t2477 * t2982) * t4078;
t4169 = t4091 * t3074;
t2362 = -t2501 * t2919 + t2507 * t3688;
t2476 = -t2617 * t2919 + t2629 * t3688;
t4092 = pkin(3) * (t2362 * t2981 - t2476 * t2978) + (t2362 * t2978 + t2476 * t2981) * t4078;
t4168 = t4092 * t3075;
t2361 = -t2500 * t2918 + t2506 * t3691;
t2475 = -t2616 * t2918 + t2628 * t3691;
t4093 = pkin(3) * (t2361 * t2980 - t2475 * t2977) + (t2361 * t2977 + t2475 * t2980) * t4078;
t4167 = t4093 * t3076;
t4148 = t2675 * t2915 + t2676 * t2927;
t4147 = t2675 * t2916 + t2676 * t2928;
t4146 = t2675 * t2917 + t2676 * t2929;
t4090 = t2950 * t2850 + t2953 * t3178;
t4089 = t2950 * t2851 + t2953 * t3177;
t4088 = t2950 * t2852 + t2953 * t3176;
t3656 = t2939 * t2960;
t3713 = t2866 * t2963;
t2352 = (-(t2829 * t3589 - t2835 * t2961) * t3713 - t2869 * (t2829 * t3573 + t2835 * t2956)) * t2945 + t2671 * t3656;
t2954 = 0.1e1 / t2960;
t2631 = -t2821 * t2915 + t2825 * t2927;
t3909 = (-(t2631 * t2992 - t2989 * t4148) * t4078 + pkin(3) * (t2989 * t2631 + t2992 * t4148)) * t3073;
t3400 = t2945 * t3909;
t3807 = t2665 * t2964;
t2196 = (t2352 * t3807 + t3400) * t2954;
t4145 = t2196 * t3073;
t3651 = t2940 * t2960;
t3712 = t2867 * t2963;
t2353 = (-(t2830 * t3589 - t2836 * t2961) * t3712 - t2870 * (t2830 * t3573 + t2836 * t2956)) * t2946 + t2672 * t3651;
t2632 = -t2821 * t2916 + t2825 * t2928;
t3908 = (-(t2632 * t2993 - t2990 * t4147) * t4078 + pkin(3) * (t2990 * t2632 + t2993 * t4147)) * t3072;
t3399 = t2946 * t3908;
t3799 = t2667 * t2964;
t2197 = (t2353 * t3799 + t3399) * t2954;
t4144 = t2197 * t3072;
t3646 = t2941 * t2960;
t3711 = t2868 * t2963;
t2354 = (-(t2831 * t3589 - t2837 * t2961) * t3711 - t2871 * (t2831 * t3573 + t2837 * t2956)) * t2947 + t2673 * t3646;
t2633 = -t2821 * t2917 + t2825 * t2929;
t3907 = (-(t2633 * t2994 - t2991 * t4146) * t4078 + pkin(3) * (t2991 * t2633 + t2994 * t4146)) * t3071;
t3398 = t2947 * t3907;
t3791 = t2669 * t2964;
t2198 = (t2354 * t3791 + t3398) * t2954;
t4143 = t2198 * t3071;
t4139 = t2707 * t2960;
t4138 = t2708 * t2960;
t4137 = t2709 * t2960;
t4136 = t2710 * t2960;
t4135 = t2711 * t2960;
t4134 = t2712 * t2960;
t2826 = t2912 * t2962 + t2924 * t2957;
t4133 = t2826 * t2964;
t2827 = t2913 * t2962 + t2925 * t2957;
t4132 = t2827 * t2964;
t2828 = t2914 * t2962 + t2926 * t2957;
t4131 = t2828 * t2964;
t4130 = t2829 * t2964;
t4129 = t2830 * t2964;
t4128 = t2831 * t2964;
t3605 = t2953 * t2951;
t3623 = t2950 * t2948;
t2753 = t2949 * t3605 - t3623;
t3754 = t2753 * t2948;
t2878 = t2949 * t2948;
t3622 = t2950 * t2951;
t2752 = t2878 * t2953 + t3622;
t3755 = t2752 * t2951;
t2519 = (-t3754 + t3755) * t2952;
t3631 = t2948 * t2953;
t2751 = t2949 * t3622 + t3631;
t4127 = (t2751 * t2953 - t2753 * t2950) * t2952;
t3759 = t2751 * t2948;
t2749 = t2949 * t3623 - t3605;
t3760 = t2749 * t2951;
t2518 = (-t3759 + t3760) * t2952;
t4124 = t2994 * t4172;
t4123 = t2991 * t4172;
t4118 = t2993 * t4171;
t4117 = t2990 * t4171;
t4112 = t2992 * t4170;
t4111 = t2989 * t4170;
t2505 = t2674 * t2929 + t2677 * t2917;
t2511 = -t2674 * t2917 + t2677 * t2929;
t4096 = t2505 * t2935 + t2511 * t3694;
t2504 = t2674 * t2928 + t2677 * t2916;
t2510 = -t2674 * t2916 + t2677 * t2928;
t4095 = t2504 * t2934 + t2510 * t3697;
t2503 = t2674 * t2927 + t2677 * t2915;
t2509 = -t2674 * t2915 + t2677 * t2927;
t4094 = t2503 * t2933 + t2509 * t3700;
t3672 = t2936 * t2957;
t2532 = t2850 * t2962 + t3178 * t3672;
t3669 = t2936 * t2962;
t2544 = -t2850 * t2957 + t3178 * t3669;
t2427 = t2532 * t2912 - t2544 * t2924;
t2538 = -t2850 * t3672 + t2962 * t3178;
t2550 = t2850 * t3669 + t2957 * t3178;
t2433 = t2538 * t2912 + t2550 * t2924;
t4084 = t2930 * (t2427 * t2950 + t2433 * t2953) - (t2427 * t2953 - t2433 * t2950) * t2918;
t3667 = t2937 * t2957;
t2533 = t2851 * t2962 + t3177 * t3667;
t3664 = t2937 * t2962;
t2545 = -t2851 * t2957 + t3177 * t3664;
t2428 = t2533 * t2913 - t2545 * t2925;
t2539 = -t2851 * t3667 + t2962 * t3177;
t2551 = t2851 * t3664 + t2957 * t3177;
t2434 = t2539 * t2913 + t2551 * t2925;
t4083 = t2931 * (t2428 * t2950 + t2434 * t2953) - (t2428 * t2953 - t2434 * t2950) * t2919;
t3662 = t2938 * t2957;
t2534 = t2852 * t2962 + t3176 * t3662;
t3659 = t2938 * t2962;
t2546 = -t2852 * t2957 + t3176 * t3659;
t2429 = t2534 * t2914 - t2546 * t2926;
t2540 = -t2852 * t3662 + t2962 * t3176;
t2552 = t2852 * t3659 + t2957 * t3176;
t2435 = t2540 * t2914 + t2552 * t2926;
t4082 = t2932 * (t2429 * t2950 + t2435 * t2953) - (t2429 * t2953 - t2435 * t2950) * t2920;
t3657 = t2939 * t2957;
t2535 = t2853 * t2962 + t3175 * t3657;
t3654 = t2939 * t2962;
t2547 = -t2853 * t2957 + t3175 * t3654;
t2430 = t2535 * t2915 - t2547 * t2927;
t2541 = -t2853 * t3657 + t2962 * t3175;
t2553 = t2853 * t3654 + t2957 * t3175;
t2436 = t2541 * t2915 + t2553 * t2927;
t4081 = t2933 * (t2430 * t2950 + t2436 * t2953) - (t2430 * t2953 - t2436 * t2950) * t2921;
t3652 = t2940 * t2957;
t2536 = t2854 * t2962 + t3174 * t3652;
t3649 = t2940 * t2962;
t2548 = -t2854 * t2957 + t3174 * t3649;
t2431 = t2536 * t2916 - t2548 * t2928;
t2542 = -t2854 * t3652 + t2962 * t3174;
t2554 = t2854 * t3649 + t2957 * t3174;
t2437 = t2542 * t2916 + t2554 * t2928;
t4080 = t2934 * (t2431 * t2950 + t2437 * t2953) - (t2431 * t2953 - t2437 * t2950) * t2922;
t3647 = t2941 * t2957;
t2537 = t2855 * t2962 + t3173 * t3647;
t3644 = t2941 * t2962;
t2549 = -t2855 * t2957 + t3173 * t3644;
t2432 = t2537 * t2917 - t2549 * t2929;
t2543 = -t2855 * t3647 + t2962 * t3173;
t2555 = t2855 * t3644 + t2957 * t3173;
t2438 = t2543 * t2917 + t2555 * t2929;
t4079 = t2935 * (t2432 * t2950 + t2438 * t2953) - (t2432 * t2953 - t2438 * t2950) * t2923;
t3772 = t2677 * t2938;
t3784 = t2674 * t2938;
t2103 = ((t2674 * t4088 + t3772 * t4221) * t2926 + (t2677 * t4088 - t3784 * t4221) * t2914) * t2932 - t2920 * ((t2674 * t4221 - t3772 * t4088) * t2926 + t2914 * (t2677 * t4221 + t3784 * t4088));
t3732 = t2825 * t2938;
t3744 = t2821 * t2938;
t2148 = ((t2821 * t4088 + t3732 * t4221) * t2926 + t2914 * (t2825 * t4088 - t3744 * t4221)) * t2932 - ((t2821 * t4221 - t3732 * t4088) * t2926 + t2914 * (t2825 * t4221 + t3744 * t4088)) * t2920;
t1953 = (t2103 * t2979 + t2148 * t2982) * t4078 + pkin(3) * (t2103 * t2982 - t2148 * t2979);
t4077 = t1953 * t3074;
t3774 = t2677 * t2936;
t3786 = t2674 * t2936;
t2098 = ((t2674 * t4090 + t3774 * t4223) * t2924 + t2912 * (t2677 * t4090 - t3786 * t4223)) * t2930 - ((t2674 * t4223 - t3774 * t4090) * t2924 + t2912 * (t2677 * t4223 + t3786 * t4090)) * t2918;
t3734 = t2825 * t2936;
t3746 = t2821 * t2936;
t2149 = ((t2821 * t4090 + t3734 * t4223) * t2924 + t2912 * (t2825 * t4090 - t3746 * t4223)) * t2930 - ((t2821 * t4223 - t3734 * t4090) * t2924 + t2912 * (t2825 * t4223 + t3746 * t4090)) * t2918;
t1954 = (t2098 * t2977 + t2149 * t2980) * t4078 + pkin(3) * (t2098 * t2980 - t2149 * t2977);
t4076 = t1954 * t3076;
t3773 = t2677 * t2937;
t3785 = t2674 * t2937;
t2099 = ((t2674 * t4089 + t3773 * t4222) * t2925 + t2913 * (t2677 * t4089 - t3785 * t4222)) * t2931 - ((t2674 * t4222 - t3773 * t4089) * t2925 + t2913 * (t2677 * t4222 + t3785 * t4089)) * t2919;
t3733 = t2825 * t2937;
t3745 = t2821 * t2937;
t2150 = ((t2821 * t4089 + t3733 * t4222) * t2925 + t2913 * (t2825 * t4089 - t3745 * t4222)) * t2931 - ((t2821 * t4222 - t3733 * t4089) * t2925 + t2913 * (t2825 * t4222 + t3745 * t4089)) * t2919;
t1955 = (t2099 * t2978 + t2150 * t2981) * t4078 + pkin(3) * (t2099 * t2981 - t2150 * t2978);
t4075 = t1955 * t3075;
t3771 = t2677 * t2939;
t3783 = t2674 * t2939;
t2100 = ((t2674 * t4087 + t3771 * t4220) * t2927 + t2915 * (t2677 * t4087 - t3783 * t4220)) * t2933 - ((t2674 * t4220 - t3771 * t4087) * t2927 + t2915 * (t2677 * t4220 + t3783 * t4087)) * t2921;
t3731 = t2825 * t2939;
t3743 = t2821 * t2939;
t2151 = ((t2821 * t4087 + t3731 * t4220) * t2927 + t2915 * (t2825 * t4087 - t3743 * t4220)) * t2933 - ((t2821 * t4220 - t3731 * t4087) * t2927 + t2915 * (t2825 * t4220 + t3743 * t4087)) * t2921;
t1956 = (t2100 * t2989 + t2151 * t2992) * t4078 + (t2100 * t2992 - t2151 * t2989) * pkin(3);
t4074 = t1956 * t3073;
t3769 = t2677 * t2941;
t3781 = t2674 * t2941;
t2102 = ((t2674 * t4085 + t3769 * t4218) * t2929 + t2917 * (t2677 * t4085 - t3781 * t4218)) * t2935 - ((t2674 * t4218 - t3769 * t4085) * t2929 + t2917 * (t2677 * t4218 + t3781 * t4085)) * t2923;
t3729 = t2825 * t2941;
t3741 = t2821 * t2941;
t2153 = ((t2821 * t4085 + t3729 * t4218) * t2929 + t2917 * (t2825 * t4085 - t3741 * t4218)) * t2935 - ((t2821 * t4218 - t3729 * t4085) * t2929 + (t2825 * t4218 + t3741 * t4085) * t2917) * t2923;
t1957 = (t2102 * t2991 + t2153 * t2994) * t4078 + pkin(3) * (t2102 * t2994 - t2153 * t2991);
t4073 = t1957 * t3071;
t3770 = t2677 * t2940;
t3782 = t2674 * t2940;
t2101 = ((t2674 * t4086 + t3770 * t4219) * t2928 + t2916 * (t2677 * t4086 - t3782 * t4219)) * t2934 - t2922 * ((t2674 * t4219 - t3770 * t4086) * t2928 + t2916 * (t2677 * t4219 + t3782 * t4086));
t3730 = t2825 * t2940;
t3742 = t2821 * t2940;
t2152 = ((t2821 * t4086 + t3730 * t4219) * t2928 + t2916 * (t2825 * t4086 - t3742 * t4219)) * t2934 - t2922 * ((t2821 * t4219 - t3730 * t4086) * t2928 + (t2825 * t4219 + t3742 * t4086) * t2916);
t1958 = (t2101 * t2990 + t2152 * t2993) * t4078 + pkin(3) * (t2101 * t2993 - t2152 * t2990);
t4072 = t1958 * t3072;
t3643 = t2942 * t2960;
t2370 = t3178 * t3643 + (t2532 * t2924 + t2544 * t2912) * t2964;
t2400 = t2850 * t3643 + (-t2538 * t2924 + t2550 * t2912) * t2964;
t2128 = (-t2370 * t2950 + t2400 * t2953) * t2930 + t2918 * (t2370 * t2953 + t2400 * t2950);
t2859 = pkin(3) * t2977 - t2980 * t4078;
t2856 = pkin(3) * t2980 + t2977 * t4078;
t3716 = t2856 * t2963;
t1959 = (t2128 * t2956 - t2961 * t4084) * t3716 + t2859 * (t2128 * t2961 + t2956 * t4084);
t2662 = t2856 * t3590 + t2859 * t2961;
t2656 = 0.1e1 / t2662;
t4071 = t1959 * t2656;
t3641 = t2943 * t2960;
t2371 = t3177 * t3641 + (t2533 * t2925 + t2545 * t2913) * t2964;
t2401 = t2851 * t3641 + (-t2539 * t2925 + t2551 * t2913) * t2964;
t2129 = (-t2371 * t2950 + t2401 * t2953) * t2931 + t2919 * (t2371 * t2953 + t2401 * t2950);
t2860 = pkin(3) * t2978 - t2981 * t4078;
t2857 = pkin(3) * t2981 + t2978 * t4078;
t3715 = t2857 * t2963;
t1960 = (t2129 * t2956 - t2961 * t4083) * t3715 + t2860 * (t2129 * t2961 + t2956 * t4083);
t2663 = t2857 * t3590 + t2860 * t2961;
t2658 = 0.1e1 / t2663;
t4070 = t1960 * t2658;
t3639 = t2944 * t2960;
t2372 = t3176 * t3639 + (t2534 * t2926 + t2546 * t2914) * t2964;
t2402 = t2852 * t3639 + (-t2540 * t2926 + t2552 * t2914) * t2964;
t2130 = (-t2372 * t2950 + t2402 * t2953) * t2932 + t2920 * (t2372 * t2953 + t2402 * t2950);
t2861 = pkin(3) * t2979 - t2982 * t4078;
t2858 = pkin(3) * t2982 + t2979 * t4078;
t3714 = t2858 * t2963;
t1961 = (t2130 * t2956 - t2961 * t4082) * t3714 + t2861 * (t2130 * t2961 + t2956 * t4082);
t2664 = t2858 * t3590 + t2861 * t2961;
t2660 = 0.1e1 / t2664;
t4069 = t1961 * t2660;
t3637 = t2945 * t2960;
t2373 = t3175 * t3637 + (t2535 * t2927 + t2547 * t2915) * t2964;
t2403 = t2853 * t3637 + (-t2541 * t2927 + t2553 * t2915) * t2964;
t2131 = (-t2373 * t2950 + t2403 * t2953) * t2933 + t2921 * (t2373 * t2953 + t2403 * t2950);
t1962 = (t2131 * t2956 - t2961 * t4081) * t3713 + t2869 * (t2131 * t2961 + t2956 * t4081);
t4068 = t1962 * t2665;
t3635 = t2946 * t2960;
t2374 = t3174 * t3635 + (t2536 * t2928 + t2548 * t2916) * t2964;
t2404 = t2854 * t3635 + (-t2542 * t2928 + t2554 * t2916) * t2964;
t2132 = (-t2374 * t2950 + t2404 * t2953) * t2934 + t2922 * (t2374 * t2953 + t2404 * t2950);
t1963 = (t2132 * t2956 - t2961 * t4080) * t3712 + t2870 * (t2132 * t2961 + t2956 * t4080);
t4067 = t1963 * t2667;
t3633 = t2947 * t2960;
t2375 = t3173 * t3633 + (t2537 * t2929 + t2549 * t2917) * t2964;
t2405 = t2855 * t3633 + (-t2543 * t2929 + t2555 * t2917) * t2964;
t2133 = (-t2375 * t2950 + t2405 * t2953) * t2935 + t2923 * (t2375 * t2953 + t2405 * t2950);
t1964 = (t2133 * t2956 - t2961 * t4079) * t3711 + t2871 * (t2133 * t2961 + t2956 * t4079);
t4066 = t1964 * t2669;
t3202 = t2920 * t3576;
t3261 = t2938 * t3573;
t3738 = t2824 * t2944;
t2396 = t4164 * t3738 + ((t2920 * t3261 + t2932 * t2956) * t2963 - t2938 * t3202) * t2709;
t3196 = t2932 * t3576;
t3247 = t2944 * t3590;
t3663 = t2938 * t2956;
t2408 = -t4164 * t3247 + t2709 * ((-t2920 * t3663 + t2932 * t3573) * t2963 - t3196);
t2162 = (t2396 * t2962 + t2408 * t2957) * t2926 + (-t2396 * t2957 + t2408 * t2962) * t2914;
t3246 = t2944 * t3589;
t3263 = t2938 * t3589;
t2439 = t4164 * t3246 + t2709 * (t2920 * t3263 - t2932 * t2961);
t3638 = t2944 * t2961;
t3660 = t2938 * t2961;
t2457 = t4164 * t3638 + t2709 * (t2920 * t3660 + t2932 * t3589);
t2208 = (t2439 * t2962 + t2457 * t2957) * t2926 + (-t2439 * t2957 + t2457 * t2962) * t2914;
t1965 = (t2162 * t2979 + t2208 * t2982) * t4078 + pkin(3) * (t2162 * t2982 - t2208 * t2979);
t4065 = t1965 * t3074;
t3197 = t2931 * t3576;
t3264 = t2937 * t3573;
t3739 = t2824 * t2943;
t2395 = t4159 * t3739 - ((-t2919 * t2956 + t2931 * t3264) * t2963 - t2937 * t3197) * t2708;
t3203 = t2919 * t3576;
t3249 = t2943 * t3590;
t3668 = t2937 * t2956;
t2407 = -t4159 * t3249 + t2708 * ((t2919 * t3573 + t2931 * t3668) * t2963 - t3203);
t2161 = (t2395 * t2962 + t2407 * t2957) * t2925 + (-t2395 * t2957 + t2407 * t2962) * t2913;
t3248 = t2943 * t3589;
t3266 = t2937 * t3589;
t2441 = t4159 * t3248 - (t2919 * t2961 + t2931 * t3266) * t2708;
t3640 = t2943 * t2961;
t3665 = t2937 * t2961;
t2461 = t4159 * t3640 + t2708 * (t2919 * t3589 - t2931 * t3665);
t2210 = (t2441 * t2962 + t2461 * t2957) * t2925 + t2913 * (-t2441 * t2957 + t2461 * t2962);
t1966 = -(t2161 * t2978 + t2210 * t2981) * t4078 - pkin(3) * (t2161 * t2981 - t2210 * t2978);
t4064 = t1966 * t3075;
t2390 = t4158 * t3738 - t2709 * ((-t2920 * t2956 + t2932 * t3261) * t2963 - t2938 * t3196);
t2409 = -t4158 * t3247 + t2709 * ((t2920 * t3573 + t2932 * t3663) * t2963 - t3202);
t2156 = (t2390 * t2962 + t2409 * t2957) * t2926 + (-t2390 * t2957 + t2409 * t2962) * t2914;
t2442 = t4158 * t3246 - t2709 * (t2920 * t2961 + t2932 * t3263);
t2462 = t4158 * t3638 + t2709 * (t2920 * t3589 - t2932 * t3660);
t2211 = (t2442 * t2962 + t2462 * t2957) * t2926 + t2914 * (-t2442 * t2957 + t2462 * t2962);
t1967 = -(t2156 * t2979 + t2211 * t2982) * t4078 - pkin(3) * (t2156 * t2982 - t2211 * t2979);
t4063 = t1967 * t3074;
t2389 = t4165 * t3739 + ((t2919 * t3264 + t2931 * t2956) * t2963 - t2937 * t3203) * t2708;
t2414 = -t4165 * t3249 + t2708 * ((-t2919 * t3668 + t2931 * t3573) * t2963 - t3197);
t2155 = (t2389 * t2962 + t2414 * t2957) * t2925 + (-t2389 * t2957 + t2414 * t2962) * t2913;
t2447 = t4165 * t3248 + t2708 * (t2919 * t3266 - t2931 * t2961);
t2460 = t4165 * t3640 + t2708 * (t2919 * t3665 + t2931 * t3589);
t2216 = (t2447 * t2962 + t2460 * t2957) * t2925 + (-t2447 * t2957 + t2460 * t2962) * t2913;
t1968 = (t2155 * t2978 + t2216 * t2981) * t4078 + pkin(3) * (t2155 * t2981 - t2216 * t2978);
t4062 = t1968 * t3075;
t3198 = t2930 * t3576;
t3267 = t2936 * t3573;
t3740 = t2824 * t2942;
t2394 = t4160 * t3740 - t2707 * ((-t2918 * t2956 + t2930 * t3267) * t2963 - t2936 * t3198);
t3204 = t2918 * t3576;
t3251 = t2942 * t3590;
t3673 = t2936 * t2956;
t2406 = -t4160 * t3251 + t2707 * ((t2918 * t3573 + t2930 * t3673) * t2963 - t3204);
t2160 = (t2394 * t2962 + t2406 * t2957) * t2924 + (-t2394 * t2957 + t2406 * t2962) * t2912;
t3250 = t2942 * t3589;
t3269 = t2936 * t3589;
t2440 = t4160 * t3250 - t2707 * (t2918 * t2961 + t2930 * t3269);
t3642 = t2942 * t2961;
t3670 = t2936 * t2961;
t2459 = t4160 * t3642 + t2707 * (t2918 * t3589 - t2930 * t3670);
t2209 = (t2440 * t2962 + t2459 * t2957) * t2924 + (-t2440 * t2957 + t2459 * t2962) * t2912;
t1969 = -(t2160 * t2977 + t2209 * t2980) * t4078 - (t2160 * t2980 - t2209 * t2977) * pkin(3);
t4061 = t1969 * t3076;
t2388 = t4166 * t3740 + t2707 * ((t2918 * t3267 + t2930 * t2956) * t2963 - t2936 * t3204);
t2413 = -t4166 * t3251 + t2707 * ((-t2918 * t3673 + t2930 * t3573) * t2963 - t3198);
t2154 = (t2388 * t2962 + t2413 * t2957) * t2924 + (-t2388 * t2957 + t2413 * t2962) * t2912;
t2446 = t4166 * t3250 + t2707 * (t2918 * t3269 - t2930 * t2961);
t2458 = t4166 * t3642 + t2707 * (t2918 * t3670 + t2930 * t3589);
t2215 = (t2446 * t2962 + t2458 * t2957) * t2924 + (-t2446 * t2957 + t2458 * t2962) * t2912;
t1970 = (t2154 * t2977 + t2215 * t2980) * t4078 + pkin(3) * (t2154 * t2980 - t2215 * t2977);
t4060 = t1970 * t3076;
t3195 = t2933 * t3576;
t3258 = t2939 * t3573;
t3737 = t2824 * t2945;
t2398 = t4157 * t3737 - t2710 * ((-t2921 * t2956 + t2933 * t3258) * t2963 - t2939 * t3195);
t3201 = t2921 * t3576;
t3245 = t2945 * t3590;
t3658 = t2939 * t2956;
t2410 = -t4157 * t3245 + t2710 * ((t2921 * t3573 + t2933 * t3658) * t2963 - t3201);
t2164 = (t2398 * t2962 + t2410 * t2957) * t2927 + t2915 * (-t2398 * t2957 + t2410 * t2962);
t3244 = t2945 * t3589;
t3260 = t2939 * t3589;
t2443 = t4157 * t3244 - t2710 * (t2921 * t2961 + t2933 * t3260);
t3636 = t2945 * t2961;
t3655 = t2939 * t2961;
t2464 = t4157 * t3636 + t2710 * (t2921 * t3589 - t2933 * t3655);
t2212 = (t2443 * t2962 + t2464 * t2957) * t2927 + t2915 * (-t2443 * t2957 + t2464 * t2962);
t1971 = -(t2164 * t2989 + t2212 * t2992) * t4078 - pkin(3) * (t2164 * t2992 - t2212 * t2989);
t4059 = t1971 * t3073;
t3194 = t2934 * t3576;
t3255 = t2940 * t3573;
t3736 = t2824 * t2946;
t2392 = t4156 * t3736 - t2711 * ((-t2922 * t2956 + t2934 * t3255) * t2963 - t2940 * t3194);
t3200 = t2922 * t3576;
t3243 = t2946 * t3590;
t3653 = t2940 * t2956;
t2411 = -t4156 * t3243 + t2711 * ((t2922 * t3573 + t2934 * t3653) * t2963 - t3200);
t2158 = (t2392 * t2962 + t2411 * t2957) * t2928 + t2916 * (-t2392 * t2957 + t2411 * t2962);
t3242 = t2946 * t3589;
t3257 = t2940 * t3589;
t2444 = t4156 * t3242 - t2711 * (t2922 * t2961 + t2934 * t3257);
t3634 = t2946 * t2961;
t3650 = t2940 * t2961;
t2466 = t4156 * t3634 + t2711 * (t2922 * t3589 - t2934 * t3650);
t2213 = (t2444 * t2962 + t2466 * t2957) * t2928 + t2916 * (-t2444 * t2957 + t2466 * t2962);
t1972 = -(t2158 * t2990 + t2213 * t2993) * t4078 - (t2158 * t2993 - t2213 * t2990) * pkin(3);
t4058 = t1972 * t3072;
t3193 = t2935 * t3576;
t3252 = t2941 * t3573;
t3735 = t2824 * t2947;
t2399 = t4155 * t3735 - ((-t2923 * t2956 + t2935 * t3252) * t2963 - t2941 * t3193) * t2712;
t3199 = t2923 * t3576;
t3241 = t2947 * t3590;
t3648 = t2941 * t2956;
t2412 = -t4155 * t3241 + ((t2923 * t3573 + t2935 * t3648) * t2963 - t3199) * t2712;
t2165 = (t2399 * t2962 + t2412 * t2957) * t2929 + (-t2399 * t2957 + t2412 * t2962) * t2917;
t3240 = t2947 * t3589;
t3254 = t2941 * t3589;
t2445 = t4155 * t3240 - t2712 * (t2923 * t2961 + t2935 * t3254);
t3632 = t2947 * t2961;
t3645 = t2941 * t2961;
t2468 = t4155 * t3632 + (t2923 * t3589 - t2935 * t3645) * t2712;
t2214 = (t2445 * t2962 + t2468 * t2957) * t2929 + (-t2445 * t2957 + t2468 * t2962) * t2917;
t1973 = -(t2165 * t2991 + t2214 * t2994) * t4078 - pkin(3) * (t2165 * t2994 - t2214 * t2991);
t4057 = t1973 * t3071;
t2397 = t4163 * t3737 + t2710 * ((t2921 * t3258 + t2933 * t2956) * t2963 - t2939 * t3201);
t2415 = -t4163 * t3245 + t2710 * ((-t2921 * t3658 + t2933 * t3573) * t2963 - t3195);
t2163 = (t2397 * t2962 + t2415 * t2957) * t2927 + (-t2397 * t2957 + t2415 * t2962) * t2915;
t2448 = t4163 * t3244 + t2710 * (t2921 * t3260 - t2933 * t2961);
t2463 = t4163 * t3636 + t2710 * (t2921 * t3655 + t2933 * t3589);
t2217 = (t2448 * t2962 + t2463 * t2957) * t2927 + (-t2448 * t2957 + t2463 * t2962) * t2915;
t1974 = (t2163 * t2989 + t2217 * t2992) * t4078 + (t2163 * t2992 - t2217 * t2989) * pkin(3);
t4056 = t1974 * t3073;
t2391 = t4162 * t3736 + ((t2922 * t3255 + t2934 * t2956) * t2963 - t2940 * t3200) * t2711;
t2416 = -t4162 * t3243 + t2711 * ((-t2922 * t3653 + t2934 * t3573) * t2963 - t3194);
t2157 = (t2391 * t2962 + t2416 * t2957) * t2928 + (-t2391 * t2957 + t2416 * t2962) * t2916;
t2449 = t4162 * t3242 + t2711 * (t2922 * t3257 - t2934 * t2961);
t2465 = t4162 * t3634 + t2711 * (t2922 * t3650 + t2934 * t3589);
t2218 = (t2449 * t2962 + t2465 * t2957) * t2928 + (-t2449 * t2957 + t2465 * t2962) * t2916;
t1975 = (t2157 * t2990 + t2218 * t2993) * t4078 + pkin(3) * (t2157 * t2993 - t2218 * t2990);
t4055 = t1975 * t3072;
t2393 = t4161 * t3735 + ((t2923 * t3252 + t2935 * t2956) * t2963 - t2941 * t3199) * t2712;
t2417 = -t4161 * t3241 + ((-t2923 * t3648 + t2935 * t3573) * t2963 - t3193) * t2712;
t2159 = (t2393 * t2962 + t2417 * t2957) * t2929 + (-t2393 * t2957 + t2417 * t2962) * t2917;
t2450 = t4161 * t3240 + (t2923 * t3254 - t2935 * t2961) * t2712;
t2467 = t4161 * t3632 + t2712 * (t2923 * t3645 + t2935 * t3589);
t2219 = (t2450 * t2962 + t2467 * t2957) * t2929 + (-t2450 * t2957 + t2467 * t2962) * t2917;
t1976 = (t2159 * t2991 + t2219 * t2994) * t4078 + pkin(3) * (t2159 * t2994 - t2219 * t2991);
t4054 = t1976 * t3071;
t2646 = t2936 * t4133 + t3643;
t2832 = -t2912 * t2957 + t2924 * t2962;
t2355 = (t2646 * t2956 - t2832 * t3670) * t3716 + t2859 * (t2646 * t2961 + t2832 * t3673);
t2421 = (t2826 * t2961 + t2832 * t3589) * t3716 + (-t2826 * t2956 + t2832 * t3573) * t2859;
t2299 = -t2355 * t2918 + t2421 * t2930;
t3826 = t2656 * t2954;
t3467 = t2299 * t3826;
t2298 = t2355 * t2930 + t2421 * t2918;
t3470 = t2298 * t3826;
t2086 = -t3467 * t4090 + t3470 * t4223;
t3858 = t3076 * t2954;
t3541 = t4215 * t3858;
t3544 = t4093 * t3858;
t3556 = -t3541 * t4090 + t3544 * t4223;
t1980 = t2086 * t2964 + t3556;
t4053 = t1980 * t3076;
t2647 = t2937 * t4132 + t3641;
t2833 = -t2913 * t2957 + t2925 * t2962;
t2356 = (t2647 * t2956 - t2833 * t3665) * t3715 + t2860 * (t2647 * t2961 + t2833 * t3668);
t2422 = (t2827 * t2961 + t2833 * t3589) * t3715 + (-t2827 * t2956 + t2833 * t3573) * t2860;
t2301 = -t2356 * t2919 + t2422 * t2931;
t3820 = t2658 * t2954;
t3461 = t2301 * t3820;
t2300 = t2356 * t2931 + t2422 * t2919;
t3464 = t2300 * t3820;
t2087 = -t3461 * t4089 + t3464 * t4222;
t3854 = t3075 * t2954;
t3540 = t4216 * t3854;
t3543 = t4092 * t3854;
t3555 = -t3540 * t4089 + t3543 * t4222;
t1981 = t2087 * t2964 + t3555;
t4052 = t1981 * t3075;
t2648 = t2938 * t4131 + t3639;
t2834 = -t2914 * t2957 + t2926 * t2962;
t2357 = (t2648 * t2956 - t2834 * t3660) * t3714 + t2861 * (t2648 * t2961 + t2834 * t3663);
t2423 = (t2828 * t2961 + t2834 * t3589) * t3714 + (-t2828 * t2956 + t2834 * t3573) * t2861;
t2303 = -t2357 * t2920 + t2423 * t2932;
t3814 = t2660 * t2954;
t3455 = t2303 * t3814;
t2302 = t2357 * t2932 + t2423 * t2920;
t3458 = t2302 * t3814;
t2088 = -t3455 * t4088 + t3458 * t4221;
t3850 = t3074 * t2954;
t3539 = t4217 * t3850;
t3542 = t4091 * t3850;
t3554 = -t3539 * t4088 + t3542 * t4221;
t1982 = t2088 * t2964 + t3554;
t4051 = t1982 * t3074;
t2649 = t2939 * t4130 + t3637;
t2358 = (t2649 * t2956 - t2835 * t3655) * t3713 + t2869 * (t2649 * t2961 + t2835 * t3658);
t2424 = (t2829 * t2961 + t2835 * t3589) * t3713 + (-t2829 * t2956 + t2835 * t3573) * t2869;
t2305 = -t2358 * t2921 + t2424 * t2933;
t3808 = t2665 * t2954;
t3449 = t2305 * t3808;
t2304 = t2358 * t2933 + t2424 * t2921;
t3452 = t2304 * t3808;
t2089 = -t3449 * t4087 + t3452 * t4220;
t2619 = t2821 * t2927 + t2825 * t2915;
t2484 = t2619 * t2933 + t2631 * t3700;
t2181 = -(t2484 * t2992 + t2989 * t4094) * t4078 + pkin(3) * (t2989 * t2484 - t2992 * t4094);
t3846 = t3073 * t2954;
t3535 = t2181 * t3846;
t2364 = -t2503 * t2921 + t2509 * t3682;
t2478 = -t2619 * t2921 + t2631 * t3682;
t2178 = (t2364 * t2989 + t2478 * t2992) * t4078 - (-t2364 * t2992 + t2478 * t2989) * pkin(3);
t3538 = t2178 * t3846;
t3553 = -t3535 * t4087 + t3538 * t4220;
t1986 = t2089 * t2964 + t3553;
t4050 = t1986 * t3073;
t2650 = t2940 * t4129 + t3635;
t2359 = (t2650 * t2956 - t2836 * t3650) * t3712 + t2870 * (t2650 * t2961 + t2836 * t3653);
t2425 = (t2830 * t2961 + t2836 * t3589) * t3712 + (-t2830 * t2956 + t2836 * t3573) * t2870;
t2307 = -t2359 * t2922 + t2425 * t2934;
t3800 = t2667 * t2954;
t3443 = t2307 * t3800;
t2306 = t2359 * t2934 + t2425 * t2922;
t3446 = t2306 * t3800;
t2090 = -t3443 * t4086 + t3446 * t4219;
t2620 = t2821 * t2928 + t2825 * t2916;
t2485 = t2620 * t2934 + t2632 * t3697;
t2182 = -(t2485 * t2993 + t2990 * t4095) * t4078 + pkin(3) * (t2990 * t2485 - t2993 * t4095);
t3840 = t3072 * t2954;
t3534 = t2182 * t3840;
t2365 = -t2504 * t2922 + t2510 * t3679;
t2479 = -t2620 * t2922 + t2632 * t3679;
t2179 = (t2365 * t2990 + t2479 * t2993) * t4078 - (-t2365 * t2993 + t2479 * t2990) * pkin(3);
t3537 = t2179 * t3840;
t3552 = -t3534 * t4086 + t3537 * t4219;
t1987 = t2090 * t2964 + t3552;
t4049 = t1987 * t3072;
t2651 = t2941 * t4128 + t3633;
t2360 = (t2651 * t2956 - t2837 * t3645) * t3711 + t2871 * (t2651 * t2961 + t2837 * t3648);
t2426 = (t2831 * t2961 + t2837 * t3589) * t3711 + (-t2831 * t2956 + t2837 * t3573) * t2871;
t2309 = -t2360 * t2923 + t2426 * t2935;
t3792 = t2669 * t2954;
t3437 = t2309 * t3792;
t2308 = t2360 * t2935 + t2426 * t2923;
t3440 = t2308 * t3792;
t2091 = -t3437 * t4085 + t3440 * t4218;
t2621 = t2821 * t2929 + t2825 * t2917;
t2486 = t2621 * t2935 + t2633 * t3694;
t2183 = -(t2486 * t2994 + t2991 * t4096) * t4078 + pkin(3) * (t2991 * t2486 - t2994 * t4096);
t3834 = t3071 * t2954;
t3533 = t2183 * t3834;
t2366 = -t2505 * t2923 + t2511 * t3676;
t2480 = -t2621 * t2923 + t2633 * t3676;
t2180 = (t2366 * t2991 + t2480 * t2994) * t4078 - (-t2366 * t2994 + t2480 * t2991) * pkin(3);
t3536 = t2180 * t3834;
t3551 = -t3533 * t4085 + t3536 * t4218;
t1988 = t2091 * t2964 + t3551;
t4048 = t1988 * t3071;
t3689 = t2930 * t2962;
t2755 = -t2918 * t3672 + t3689;
t3690 = t2930 * t2957;
t2767 = t2918 * t3669 + t3690;
t3239 = t2964 * t3629;
t3088 = t2924 * t3239;
t3094 = t2912 * t3239;
t3671 = t2936 * t2960;
t3268 = t2998 * t3671;
t3722 = t2844 * t2964;
t2238 = (t2918 * t4139 + t4133 * t4166) * t2942 + (t2950 * t3268 + (-t2755 * t2924 + t2767 * t2912) * t3722) * t2952 + t2755 * t3088 - t2767 * t3094 - t2610 * t3671;
t3728 = t2832 * t2942;
t2376 = t4166 * t3728 + t2707 * (t2755 * t2912 + t2767 * t2924);
t2025 = (t2238 * t2956 - t2376 * t2961) * t3716 + (t2238 * t2961 + t2376 * t2956) * t2859;
t4047 = t2025 * t2656;
t3707 = t2918 * t2962;
t2756 = t2930 * t3672 + t3707;
t3708 = t2918 * t2957;
t2768 = t2930 * t3669 - t3708;
t2239 = (-t2930 * t4139 + t4133 * t4160) * t2942 + (-t2953 * t3268 + (-t2756 * t2924 - t2768 * t2912) * t3722) * t2952 + t2756 * t3088 + t2768 * t3094 - t2622 * t3671;
t2382 = t4160 * t3728 - (-t2756 * t2912 + t2768 * t2924) * t2707;
t2026 = -(t2239 * t2956 - t2382 * t2961) * t3716 - t2859 * (t2239 * t2961 + t2382 * t2956);
t4046 = t2026 * t2656;
t3686 = t2931 * t2962;
t2757 = -t2919 * t3667 + t3686;
t3687 = t2931 * t2957;
t2769 = t2919 * t3664 + t3687;
t3238 = t2964 * t3628;
t3087 = t2925 * t3238;
t3093 = t2913 * t3238;
t3666 = t2937 * t2960;
t3265 = t2999 * t3666;
t3721 = t2845 * t2964;
t2240 = (t2919 * t4138 + t4132 * t4165) * t2943 + (t2950 * t3265 + (-t2757 * t2925 + t2769 * t2913) * t3721) * t2952 + t2757 * t3087 - t2769 * t3093 - t2611 * t3666;
t3727 = t2833 * t2943;
t2377 = t4165 * t3727 + t2708 * (t2757 * t2913 + t2769 * t2925);
t2027 = (t2240 * t2956 - t2377 * t2961) * t3715 + (t2240 * t2961 + t2377 * t2956) * t2860;
t4045 = t2027 * t2658;
t3704 = t2919 * t2962;
t2758 = t2931 * t3667 + t3704;
t3705 = t2919 * t2957;
t2770 = t2931 * t3664 - t3705;
t2241 = (-t2931 * t4138 + t4132 * t4159) * t2943 + (-t2953 * t3265 + (-t2758 * t2925 - t2770 * t2913) * t3721) * t2952 + t2758 * t3087 + t2770 * t3093 - t2623 * t3666;
t2383 = t4159 * t3727 - (-t2758 * t2913 + t2770 * t2925) * t2708;
t2028 = -(t2241 * t2956 - t2383 * t2961) * t3715 - t2860 * (t2241 * t2961 + t2383 * t2956);
t4044 = t2028 * t2658;
t3683 = t2932 * t2962;
t2759 = -t2920 * t3662 + t3683;
t3684 = t2932 * t2957;
t2771 = t2920 * t3659 + t3684;
t3237 = t2964 * t3627;
t3086 = t2926 * t3237;
t3092 = t2914 * t3237;
t3661 = t2938 * t2960;
t3262 = t3000 * t3661;
t3720 = t2846 * t2964;
t2242 = (t2920 * t4137 + t4131 * t4164) * t2944 + (t2950 * t3262 + (-t2759 * t2926 + t2771 * t2914) * t3720) * t2952 + t2759 * t3086 - t2771 * t3092 - t2612 * t3661;
t3726 = t2834 * t2944;
t2378 = t4164 * t3726 + t2709 * (t2759 * t2914 + t2771 * t2926);
t2029 = (t2242 * t2956 - t2378 * t2961) * t3714 + (t2242 * t2961 + t2378 * t2956) * t2861;
t4043 = t2029 * t2660;
t3701 = t2920 * t2962;
t2760 = t2932 * t3662 + t3701;
t3702 = t2920 * t2957;
t2772 = t2932 * t3659 - t3702;
t2243 = (-t2932 * t4137 + t4131 * t4158) * t2944 + (-t2953 * t3262 + (-t2760 * t2926 - t2772 * t2914) * t3720) * t2952 + t2760 * t3086 + t2772 * t3092 - t2624 * t3661;
t2384 = t4158 * t3726 - (-t2760 * t2914 + t2772 * t2926) * t2709;
t2030 = -(t2243 * t2956 - t2384 * t2961) * t3714 - t2861 * (t2243 * t2961 + t2384 * t2956);
t4042 = t2030 * t2660;
t3680 = t2933 * t2962;
t2761 = -t2921 * t3657 + t3680;
t3681 = t2933 * t2957;
t2773 = t2921 * t3654 + t3681;
t3236 = t2964 * t3626;
t3085 = t2927 * t3236;
t3091 = t2915 * t3236;
t3259 = t3001 * t3656;
t3719 = t2847 * t2964;
t2244 = (t2921 * t4136 + t4130 * t4163) * t2945 + (t2950 * t3259 + (-t2761 * t2927 + t2773 * t2915) * t3719) * t2952 + t2761 * t3085 - t2773 * t3091 - t2613 * t3656;
t2379 = t4163 * t3725 + t2710 * (t2761 * t2915 + t2773 * t2927);
t2031 = (t2244 * t2956 - t2379 * t2961) * t3713 + (t2244 * t2961 + t2379 * t2956) * t2869;
t4041 = t2031 * t2665;
t3698 = t2921 * t2962;
t2762 = t2933 * t3657 + t3698;
t3699 = t2921 * t2957;
t2774 = t2933 * t3654 - t3699;
t2245 = (-t2933 * t4136 + t4130 * t4157) * t2945 + (-t2953 * t3259 + (-t2762 * t2927 - t2774 * t2915) * t3719) * t2952 + t2762 * t3085 + t2774 * t3091 - t2625 * t3656;
t2385 = t4157 * t3725 - (-t2762 * t2915 + t2774 * t2927) * t2710;
t2032 = -(t2245 * t2956 - t2385 * t2961) * t3713 - t2869 * (t2245 * t2961 + t2385 * t2956);
t4040 = t2032 * t2665;
t3677 = t2934 * t2962;
t2763 = -t2922 * t3652 + t3677;
t3678 = t2934 * t2957;
t2775 = t2922 * t3649 + t3678;
t3235 = t2964 * t3625;
t3084 = t2928 * t3235;
t3090 = t2916 * t3235;
t3256 = t3002 * t3651;
t3718 = t2848 * t2964;
t2246 = (t2922 * t4135 + t4129 * t4162) * t2946 + (t2950 * t3256 + (-t2763 * t2928 + t2775 * t2916) * t3718) * t2952 + t2763 * t3084 - t2775 * t3090 - t2614 * t3651;
t2380 = t4162 * t3724 + t2711 * (t2763 * t2916 + t2775 * t2928);
t2033 = (t2246 * t2956 - t2380 * t2961) * t3712 + (t2246 * t2961 + t2380 * t2956) * t2870;
t4039 = t2033 * t2667;
t3695 = t2922 * t2962;
t2764 = t2934 * t3652 + t3695;
t3696 = t2922 * t2957;
t2776 = t2934 * t3649 - t3696;
t2247 = (-t2934 * t4135 + t4129 * t4156) * t2946 + (-t2953 * t3256 + (-t2764 * t2928 - t2776 * t2916) * t3718) * t2952 + t2764 * t3084 + t2776 * t3090 - t2626 * t3651;
t2386 = t4156 * t3724 - (-t2764 * t2916 + t2776 * t2928) * t2711;
t2034 = -(t2247 * t2956 - t2386 * t2961) * t3712 - t2870 * (t2247 * t2961 + t2386 * t2956);
t4038 = t2034 * t2667;
t3674 = t2935 * t2962;
t2765 = -t2923 * t3647 + t3674;
t3675 = t2935 * t2957;
t2777 = t2923 * t3644 + t3675;
t3234 = t2964 * t3624;
t3083 = t2929 * t3234;
t3089 = t2917 * t3234;
t3253 = t3003 * t3646;
t3717 = t2849 * t2964;
t2248 = (t2923 * t4134 + t4128 * t4161) * t2947 + (t2950 * t3253 + (-t2765 * t2929 + t2777 * t2917) * t3717) * t2952 + t2765 * t3083 - t2777 * t3089 - t2615 * t3646;
t2381 = t4161 * t3723 + t2712 * (t2765 * t2917 + t2777 * t2929);
t2035 = (t2248 * t2956 - t2381 * t2961) * t3711 + (t2248 * t2961 + t2381 * t2956) * t2871;
t4037 = t2035 * t2669;
t3692 = t2923 * t2962;
t2766 = t2935 * t3647 + t3692;
t3693 = t2923 * t2957;
t2778 = t2935 * t3644 - t3693;
t2249 = (-t2935 * t4134 + t4128 * t4155) * t2947 + (-t2953 * t3253 + (-t2766 * t2929 - t2778 * t2917) * t3717) * t2952 + t2766 * t3083 + t2778 * t3089 - t2627 * t3646;
t2387 = t4155 * t3723 - (-t2766 * t2917 + t2778 * t2929) * t2712;
t2036 = -(t2249 * t2956 - t2387 * t2961) * t3711 - t2871 * (t2249 * t2961 + t2387 * t2956);
t4036 = t2036 * t2669;
t2451 = (-t2950 * t4090 - t2953 * t4223) * t2952;
t2693 = t2952 * t3561 - t3004 * t3607 + t3629;
t2488 = t2693 * t3621 + t2949 * t4223;
t2489 = t2693 * t3604 - t2949 * t4090;
t2349 = (-(t2826 * t3589 - t2832 * t2961) * t3716 - t2859 * (t2826 * t3573 + t2832 * t2956)) * t2942 + t2662 * t3671;
t3395 = t2349 * t3826;
t2037 = t2451 * t3395 + t2488 * t3470 + t2489 * t3467;
t4035 = t2037 * t2656;
t2452 = (-t2950 * t4089 - t2953 * t4222) * t2952;
t2694 = t2952 * t3560 - t3005 * t3607 + t3628;
t2490 = t2694 * t3621 + t2949 * t4222;
t2491 = t2694 * t3604 - t2949 * t4089;
t2350 = (-(t2827 * t3589 - t2833 * t2961) * t3715 - t2860 * (t2827 * t3573 + t2833 * t2956)) * t2943 + t2663 * t3666;
t3392 = t2350 * t3820;
t2038 = t2452 * t3392 + t2490 * t3464 + t2491 * t3461;
t4034 = t2038 * t2658;
t2453 = (-t2950 * t4088 - t2953 * t4221) * t2952;
t2695 = t2952 * t3559 - t3006 * t3607 + t3627;
t2492 = t2695 * t3621 + t2949 * t4221;
t2493 = t2695 * t3604 - t2949 * t4088;
t2351 = (-(t2828 * t3589 - t2834 * t2961) * t3714 - t2861 * (t2828 * t3573 + t2834 * t2956)) * t2944 + t2664 * t3661;
t3389 = t2351 * t3814;
t2039 = t2453 * t3389 + t2492 * t3458 + t2493 * t3455;
t4033 = t2039 * t2660;
t3386 = t2352 * t3808;
t2040 = t2454 * t3386 + t2494 * t3452 + t2495 * t3449;
t4032 = t2040 * t2665;
t3383 = t2353 * t3800;
t2041 = t2455 * t3383 + t2496 * t3446 + t2497 * t3443;
t4031 = t2041 * t2667;
t3380 = t2354 * t3792;
t2042 = t2456 * t3380 + t2498 * t3440 + t2499 * t3437;
t4030 = t2042 * t2669;
t2469 = -t2950 * t4223 + t2953 * t4090;
t3603 = t2953 * t2954;
t3294 = t2693 * t3603;
t3620 = t2950 * t2954;
t3295 = t2693 * t3620;
t3952 = t2299 * t2656;
t3954 = t2298 * t2656;
t2043 = t2469 * t3395 - t3294 * t3954 + t3295 * t3952;
t4029 = t2043 * t2656;
t2470 = -t2950 * t4222 + t2953 * t4089;
t3292 = t2694 * t3603;
t3293 = t2694 * t3620;
t3948 = t2301 * t2658;
t3950 = t2300 * t2658;
t2044 = t2470 * t3392 - t3292 * t3950 + t3293 * t3948;
t4028 = t2044 * t2658;
t2471 = -t2950 * t4221 + t2953 * t4088;
t3290 = t2695 * t3603;
t3291 = t2695 * t3620;
t3944 = t2303 * t2660;
t3946 = t2302 * t2660;
t2045 = t2471 * t3389 - t3290 * t3946 + t3291 * t3944;
t4027 = t2045 * t2660;
t3288 = t2696 * t3603;
t3289 = t2696 * t3620;
t3940 = t2305 * t2665;
t3942 = t2304 * t2665;
t2046 = t2472 * t3386 - t3288 * t3942 + t3289 * t3940;
t4026 = t2046 * t2665;
t3286 = t2697 * t3603;
t3287 = t2697 * t3620;
t3936 = t2307 * t2667;
t3938 = t2306 * t2667;
t2047 = t2473 * t3383 - t3286 * t3938 + t3287 * t3936;
t4025 = t2047 * t2667;
t3284 = t2698 * t3603;
t3285 = t2698 * t3620;
t3932 = t2309 * t2669;
t3934 = t2308 * t2669;
t2048 = t2474 * t3380 - t3284 * t3934 + t3285 * t3932;
t4024 = t2048 * t2669;
t3825 = t2656 * t2964;
t2061 = (t2298 * t3825 + t4167) * t2954;
t4023 = t2061 * t3076;
t2062 = (t2299 * t3825 + t4229) * t2954;
t4022 = t2062 * t3076;
t3819 = t2658 * t2964;
t2063 = (t2300 * t3819 + t4168) * t2954;
t4021 = t2063 * t3075;
t2064 = (t2301 * t3819 + t4228) * t2954;
t4020 = t2064 * t3075;
t3813 = t2660 * t2964;
t2065 = (t2302 * t3813 + t4169) * t2954;
t4019 = t2065 * t3074;
t2066 = (t2303 * t3813 + t4227) * t2954;
t4018 = t2066 * t3074;
t3857 = t3076 * t2964;
t2067 = (t3857 * t4093 + t3954) * t2954;
t4017 = t2067 * t2656;
t2068 = (t3857 * t4215 + t3952) * t2954;
t4016 = t2068 * t2656;
t3853 = t3075 * t2964;
t2069 = (t3853 * t4092 + t3950) * t2954;
t4015 = t2069 * t2658;
t2070 = (t3853 * t4216 + t3948) * t2954;
t4014 = t2070 * t2658;
t3849 = t3074 * t2964;
t2071 = (t3849 * t4091 + t3946) * t2954;
t4013 = t2071 * t2660;
t2072 = (t3849 * t4217 + t3944) * t2954;
t4012 = t2072 * t2660;
t3981 = t2178 * t3073;
t2073 = (t2304 * t3807 + t3981) * t2954;
t4011 = t2073 * t3073;
t3978 = t2181 * t3073;
t2074 = (t2305 * t3807 + t3978) * t2954;
t4010 = t2074 * t3073;
t3980 = t2179 * t3072;
t2075 = (t2306 * t3799 + t3980) * t2954;
t4009 = t2075 * t3072;
t3977 = t2182 * t3072;
t2076 = (t2307 * t3799 + t3977) * t2954;
t4008 = t2076 * t3072;
t3979 = t2180 * t3071;
t2077 = (t2308 * t3791 + t3979) * t2954;
t4007 = t2077 * t3071;
t3976 = t2183 * t3071;
t2078 = (t2309 * t3791 + t3976) * t2954;
t4006 = t2078 * t3071;
t3845 = t3073 * t2964;
t2079 = (t2178 * t3845 + t3942) * t2954;
t4005 = t2079 * t2665;
t2080 = (t2181 * t3845 + t3940) * t2954;
t4004 = t2080 * t2665;
t3839 = t3072 * t2964;
t2081 = (t2179 * t3839 + t3938) * t2954;
t4003 = t2081 * t2667;
t2082 = (t2182 * t3839 + t3936) * t2954;
t4002 = t2082 * t2667;
t3833 = t3071 * t2964;
t2083 = (t2180 * t3833 + t3934) * t2954;
t4001 = t2083 * t2669;
t2084 = (t2183 * t3833 + t3932) * t2954;
t4000 = t2084 * t2669;
t3999 = t2086 * t2656;
t3998 = t2087 * t2658;
t3997 = t2088 * t2660;
t3996 = t2089 * t2665;
t3995 = t2090 * t2667;
t3994 = t2091 * t2669;
t2190 = (t2349 * t3825 + t4235) * t2954;
t3975 = t2190 * t3076;
t2191 = (t2350 * t3819 + t4234) * t2954;
t3974 = t2191 * t3075;
t2192 = (t2351 * t3813 + t4233) * t2954;
t3973 = t2192 * t3074;
t3900 = t2349 * t2656;
t2193 = (t2964 * t4235 + t3900) * t2954;
t3972 = t2193 * t2656;
t3898 = t2350 * t2658;
t2194 = (t2964 * t4234 + t3898) * t2954;
t3971 = t2194 * t2658;
t3896 = t2351 * t2660;
t2195 = (t2964 * t4233 + t3896) * t2954;
t3970 = t2195 * t2660;
t3894 = t2352 * t2665;
t2199 = (t2964 * t3400 + t3894) * t2954;
t3963 = t2199 * t2665;
t3892 = t2353 * t2667;
t2200 = (t2964 * t3399 + t3892) * t2954;
t3962 = t2200 * t2667;
t3890 = t2354 * t2669;
t2201 = (t2964 * t3398 + t3890) * t2954;
t3961 = t2201 * t2669;
t2202 = ((t2957 * t4087 + t3654 * t4220) * t2927 + t2915 * (t2962 * t4087 - t3657 * t4220)) * t2933 + ((-t2957 * t4220 + t3654 * t4087) * t2927 + (-t2962 * t4220 - t3657 * t4087) * t2915) * t2921;
t3960 = t2202 * t2665;
t2203 = ((t2957 * t4090 + t3669 * t4223) * t2924 + t2912 * (t2962 * t4090 - t3672 * t4223)) * t2930 + t2918 * ((-t2957 * t4223 + t3669 * t4090) * t2924 + (-t2962 * t4223 - t3672 * t4090) * t2912);
t3959 = t2203 * t2656;
t2204 = ((t2957 * t4089 + t3664 * t4222) * t2925 + (t2962 * t4089 - t3667 * t4222) * t2913) * t2931 + ((-t2957 * t4222 + t3664 * t4089) * t2925 + t2913 * (-t2962 * t4222 - t3667 * t4089)) * t2919;
t3958 = t2204 * t2658;
t2205 = ((t2957 * t4088 + t3659 * t4221) * t2926 + (t2962 * t4088 - t3662 * t4221) * t2914) * t2932 + ((-t2957 * t4221 + t3659 * t4088) * t2926 + t2914 * (-t2962 * t4221 - t3662 * t4088)) * t2920;
t3957 = t2205 * t2660;
t2206 = ((t2957 * t4086 + t3649 * t4219) * t2928 + t2916 * (t2962 * t4086 - t3652 * t4219)) * t2934 + ((-t2957 * t4219 + t3649 * t4086) * t2928 + (-t2962 * t4219 - t3652 * t4086) * t2916) * t2922;
t3956 = t2206 * t2667;
t2207 = ((t2957 * t4085 + t3644 * t4218) * t2929 + t2917 * (t2962 * t4085 - t3647 * t4218)) * t2935 + t2923 * ((-t2957 * t4218 + t3644 * t4085) * t2929 + t2917 * (-t2962 * t4218 - t3647 * t4085));
t3955 = t2207 * t2669;
t2657 = 0.1e1 / t2662 ^ 2;
t3953 = t2298 * t2657;
t3951 = t2299 * t2657;
t2659 = 0.1e1 / t2663 ^ 2;
t3949 = t2300 * t2659;
t3947 = t2301 * t2659;
t2661 = 0.1e1 / t2664 ^ 2;
t3945 = t2302 * t2661;
t3943 = t2303 * t2661;
t2666 = 0.1e1 / t2671 ^ 2;
t3941 = t2304 * t2666;
t3939 = t2305 * t2666;
t2668 = 0.1e1 / t2672 ^ 2;
t3937 = t2306 * t2668;
t3935 = t2307 * t2668;
t2670 = 0.1e1 / t2673 ^ 2;
t3933 = t2308 * t2670;
t3931 = t2309 * t2670;
t2313 = (t2707 * t3690 + t2962 * t4213) * t2924 - (-t2707 * t3689 + t2957 * t4213) * t2912;
t3930 = t2313 * t2656;
t2314 = (-t2707 * t3708 - t2962 * t4214) * t2924 + (-t2707 * t3707 + t2957 * t4214) * t2912;
t3929 = t2314 * t2656;
t2315 = (t2708 * t3687 + t2962 * t4211) * t2925 - (-t2708 * t3686 + t2957 * t4211) * t2913;
t3928 = t2315 * t2658;
t2316 = (-t2708 * t3705 - t2962 * t4212) * t2925 + (-t2708 * t3704 + t2957 * t4212) * t2913;
t3927 = t2316 * t2658;
t2317 = (t2709 * t3684 + t2962 * t4209) * t2926 - (-t2709 * t3683 + t2957 * t4209) * t2914;
t3926 = t2317 * t2660;
t2318 = (-t2709 * t3702 - t2962 * t4210) * t2926 + (-t2709 * t3701 + t2957 * t4210) * t2914;
t3925 = t2318 * t2660;
t2319 = (t2710 * t3681 + t2962 * t4207) * t2927 - (-t2710 * t3680 + t2957 * t4207) * t2915;
t3924 = t2319 * t2665;
t2320 = (-t2710 * t3699 - t2962 * t4208) * t2927 + (-t2710 * t3698 + t2957 * t4208) * t2915;
t3923 = t2320 * t2665;
t2321 = (t2711 * t3678 + t2962 * t4205) * t2928 - (-t2711 * t3677 + t2957 * t4205) * t2916;
t3922 = t2321 * t2667;
t2322 = (-t2711 * t3696 - t2962 * t4206) * t2928 + (-t2711 * t3695 + t2957 * t4206) * t2916;
t3921 = t2322 * t2667;
t2323 = (t2712 * t3675 + t2962 * t4203) * t2929 - (-t2712 * t3674 + t2957 * t4203) * t2917;
t3920 = t2323 * t2669;
t2324 = (-t2712 * t3693 - t2962 * t4204) * t2929 + (-t2712 * t3692 + t2957 * t4204) * t2917;
t3919 = t2324 * t2669;
t2599 = -t2827 * t2919 + t2833 * t3688;
t2605 = -t2827 * t2931 - t2833 * t3706;
t2328 = (t2599 * t4222 - t2605 * t4089) * t2658;
t3918 = t2328 * t2658;
t2600 = -t2828 * t2920 + t2834 * t3685;
t2606 = -t2828 * t2932 - t2834 * t3703;
t2329 = (t2600 * t4221 - t2606 * t4088) * t2660;
t3917 = t2329 * t2660;
t2598 = -t2826 * t2918 + t2832 * t3691;
t2604 = -t2826 * t2930 - t2832 * t3709;
t2330 = (t2598 * t4223 - t2604 * t4090) * t2656;
t3916 = t2330 * t2656;
t3915 = t2331 * t2665;
t3914 = t2332 * t2667;
t3913 = t2333 * t2669;
t3899 = t2349 * t2657;
t3897 = t2350 * t2659;
t3895 = t2351 * t2661;
t3893 = t2352 * t2666;
t3891 = t2353 * t2668;
t3889 = t2354 * t2670;
t3882 = t2598 * t2656;
t3881 = t2598 * t2657;
t3880 = t2599 * t2658;
t3879 = t2599 * t2659;
t3878 = t2600 * t2660;
t3877 = t2600 * t2661;
t3876 = t2601 * t2665;
t3875 = t2601 * t2666;
t3874 = t2602 * t2667;
t3873 = t2602 * t2668;
t3872 = t2603 * t2669;
t3871 = t2603 * t2670;
t3870 = t2604 * t2656;
t3869 = t2604 * t2657;
t3868 = t2605 * t2658;
t3867 = t2605 * t2659;
t3866 = t2606 * t2660;
t3865 = t2606 * t2661;
t3864 = t2607 * t2665;
t3863 = t2607 * t2666;
t3862 = t2608 * t2667;
t3861 = t2608 * t2668;
t3860 = t2609 * t2669;
t3859 = t2609 * t2670;
t3856 = t3076 * t2977;
t3855 = t3076 * t2980;
t3852 = t3075 * t2978;
t3851 = t3075 * t2981;
t3848 = t3074 * t2979;
t3847 = t3074 * t2982;
t3574 = t2961 * t2963;
t3192 = t2960 * t3574;
t3575 = t2959 * t2964;
t2823 = t3192 + t3575;
t3585 = t2956 * t2980;
t3213 = t2960 * t3585;
t2679 = t2823 * t2977 + t3213;
t3828 = t2656 * t2679;
t2682 = (t2961 * t3571 - t3588) * t2960 + t2980 * t3575;
t3827 = t2656 * t2682;
t3824 = t2657 * t2679;
t3823 = t2657 * t2682;
t3584 = t2956 * t2981;
t3212 = t2960 * t3584;
t2680 = t2823 * t2978 + t3212;
t3822 = t2658 * t2680;
t2683 = (t2961 * t3570 - t3587) * t2960 + t2981 * t3575;
t3821 = t2658 * t2683;
t3818 = t2659 * t2680;
t3817 = t2659 * t2683;
t3583 = t2956 * t2982;
t3211 = t2960 * t3583;
t2681 = t2823 * t2979 + t3211;
t3816 = t2660 * t2681;
t2684 = (t2961 * t3569 - t3586) * t2960 + t2982 * t3575;
t3815 = t2660 * t2684;
t3812 = t2661 * t2681;
t3811 = t2661 * t2684;
t3207 = t2960 * t3579;
t2685 = t2823 * t2989 + t3207;
t3810 = t2665 * t2685;
t3210 = t2960 * t3582;
t2688 = t2823 * t2992 - t3210;
t3809 = t2665 * t2688;
t3804 = t2666 * t2685;
t3803 = t2666 * t2688;
t3578 = t2956 * t2993;
t3206 = t2960 * t3578;
t2686 = t2823 * t2990 + t3206;
t3802 = t2667 * t2686;
t2690 = (t2961 * t3568 - t3581) * t2960 + t2993 * t3575;
t3801 = t2667 * t2690;
t3796 = t2668 * t2686;
t3795 = t2668 * t2690;
t3205 = t2960 * t3577;
t2687 = t2823 * t2991 + t3205;
t3794 = t2669 * t2687;
t3208 = t2960 * t3580;
t2689 = t2823 * t2994 - t3208;
t3793 = t2669 * t2689;
t3788 = t2670 * t2687;
t3787 = t2670 * t2689;
t3762 = t2749 * t2948;
t3761 = t2749 * t2949;
t3758 = t2751 * t2949;
t3757 = t2752 * t2948;
t3756 = t2752 * t2949;
t3753 = t2753 * t2949;
t2908 = t2948 ^ 2;
t3710 = t2908 * t2952;
t3630 = t2949 * t2951;
t2184 = (-t2451 * t3728 + t2488 * t2598 + t2489 * t2604) * t2656;
t3532 = t2184 * t3856;
t3531 = t2184 * t3855;
t3530 = t2184 * t3828;
t3529 = t2184 * t3827;
t2185 = (-t2452 * t3727 + t2490 * t2599 + t2491 * t2605) * t2658;
t3528 = t2185 * t3852;
t3527 = t2185 * t3851;
t3526 = t2185 * t3822;
t3525 = t2185 * t3821;
t2186 = (-t2453 * t3726 + t2492 * t2600 + t2493 * t2606) * t2660;
t3524 = t2186 * t3848;
t3523 = t2186 * t3847;
t3522 = t2186 * t3816;
t3521 = t2186 * t3815;
t3516 = t2187 * t3810;
t3515 = t2187 * t3809;
t3510 = t2188 * t3802;
t3509 = t2188 * t3801;
t3504 = t2189 * t3794;
t3503 = t2189 * t3793;
t2256 = (-t2469 * t3728 + (-t2598 * t2953 + t2604 * t2950) * t2693) * t2656;
t3502 = t2256 * t3856;
t3501 = t2256 * t3855;
t3500 = t2256 * t3828;
t3499 = t2256 * t3827;
t2257 = (-t2470 * t3727 + (-t2599 * t2953 + t2605 * t2950) * t2694) * t2658;
t3498 = t2257 * t3852;
t3497 = t2257 * t3851;
t3496 = t2257 * t3822;
t3495 = t2257 * t3821;
t2258 = (-t2471 * t3726 + (-t2600 * t2953 + t2606 * t2950) * t2695) * t2660;
t3494 = t2258 * t3848;
t3493 = t2258 * t3847;
t3492 = t2258 * t3816;
t3491 = t2258 * t3815;
t3486 = t2259 * t3810;
t3485 = t2259 * t3809;
t3480 = t2260 * t3802;
t3479 = t2260 * t3801;
t3474 = t2261 * t3794;
t3473 = t2261 * t3793;
t3472 = t2298 * t3828;
t3471 = t2298 * t3827;
t3469 = t2299 * t3828;
t3468 = t2299 * t3827;
t3466 = t2300 * t3822;
t3465 = t2300 * t3821;
t3463 = t2301 * t3822;
t3462 = t2301 * t3821;
t3460 = t2302 * t3816;
t3459 = t2302 * t3815;
t3457 = t2303 * t3816;
t3456 = t2303 * t3815;
t3454 = t2304 * t3810;
t3453 = t2304 * t3809;
t3451 = t2305 * t3810;
t3450 = t2305 * t3809;
t3448 = t2306 * t3802;
t3447 = t2306 * t3801;
t3445 = t2307 * t3802;
t3444 = t2307 * t3801;
t3442 = t2308 * t3794;
t3441 = t2308 * t3793;
t3439 = t2309 * t3794;
t3438 = t2309 * t3793;
t3436 = t2328 * t3852;
t3435 = t2328 * t3851;
t3434 = t2328 * t3822;
t3433 = t2328 * t3821;
t3432 = t2329 * t3848;
t3431 = t2329 * t3847;
t3430 = t2329 * t3816;
t3429 = t2329 * t3815;
t3428 = t2330 * t3856;
t3427 = t2330 * t3855;
t3426 = t2330 * t3828;
t3425 = t2330 * t3827;
t3420 = t2331 * t3810;
t3419 = t2331 * t3809;
t3414 = t2332 * t3802;
t3413 = t2332 * t3801;
t3408 = t2333 * t3794;
t3407 = t2333 * t3793;
t3397 = t2349 * t3828;
t3396 = t2349 * t3827;
t3394 = t2350 * t3822;
t3393 = t2350 * t3821;
t3391 = t2351 * t3816;
t3390 = t2351 * t3815;
t3388 = t2352 * t3810;
t3387 = t2352 * t3809;
t3385 = t2353 * t3802;
t3384 = t2353 * t3801;
t3382 = t2354 * t3794;
t3381 = t2354 * t3793;
t3373 = t2598 * t3824;
t3372 = t2598 * t3823;
t3371 = t2599 * t3818;
t3370 = t2599 * t3817;
t3369 = t2600 * t3812;
t3368 = t2600 * t3811;
t3367 = t2601 * t3804;
t3366 = t2601 * t3803;
t3365 = t2602 * t3796;
t3364 = t2602 * t3795;
t3363 = t2603 * t3788;
t3362 = t2603 * t3787;
t3361 = t2604 * t3824;
t3360 = t2604 * t3823;
t3359 = t2605 * t3818;
t3358 = t2605 * t3817;
t3357 = t2606 * t3812;
t3356 = t2606 * t3811;
t3355 = t2607 * t3804;
t3354 = t2607 * t3803;
t3353 = t2608 * t3796;
t3352 = t2608 * t3795;
t3351 = t2609 * t3788;
t3350 = t2609 * t3787;
t3349 = t2656 * t3856;
t3348 = t2656 * t3855;
t3347 = t2942 * t3856;
t3346 = t2942 * t3855;
t3345 = t2658 * t3852;
t3344 = t2658 * t3851;
t3343 = t2943 * t3852;
t3342 = t2943 * t3851;
t3341 = t2660 * t3848;
t3340 = t2660 * t3847;
t3339 = t2944 * t3848;
t3338 = t2944 * t3847;
t3325 = t2656 * t3728;
t3324 = t2656 * t3588;
t3323 = t2656 * t3585;
t3322 = t2656 * t3574;
t3321 = t2657 * t3728;
t3320 = t2658 * t3727;
t3319 = t2658 * t3587;
t3318 = t2658 * t3584;
t3317 = t2658 * t3574;
t3316 = t2659 * t3727;
t3315 = t2660 * t3726;
t3314 = t2660 * t3586;
t3313 = t2660 * t3583;
t3312 = t2660 * t3574;
t3311 = t2661 * t3726;
t3309 = t2665 * t3582;
t3308 = t2665 * t3579;
t3307 = t2665 * t3574;
t3306 = t2666 * t3725;
t3304 = t2667 * t3581;
t3303 = t2667 * t3578;
t3302 = t2667 * t3574;
t3301 = t2668 * t3724;
t3299 = t2669 * t3580;
t3298 = t2669 * t3577;
t3297 = t2669 * t3574;
t3296 = t2670 * t3723;
t2911 = t2952 ^ 2;
t3278 = t2911 * t3631;
t3277 = t2911 * t3622;
t3233 = t2950 * t3607;
t3232 = t2950 * t3606;
t3225 = t2752 * t3607;
t3224 = t2948 * t3606;
t3217 = t2951 * t3604;
t3216 = t2960 * t3588;
t3215 = t2960 * t3587;
t3214 = t2960 * t3586;
t3209 = t2960 * t3581;
t3170 = t2954 * t4235;
t3191 = t2451 * t3170 + t2488 * t3544 + t2489 * t3541;
t3167 = t2954 * t4234;
t3190 = t2452 * t3167 + t2490 * t3543 + t2491 * t3540;
t3164 = t2954 * t4233;
t3189 = t2453 * t3164 + t2492 * t3542 + t2493 * t3539;
t3163 = t2954 * t3400;
t3188 = t2454 * t3163 + t2494 * t3538 + t2495 * t3535;
t3160 = t2954 * t3399;
t3187 = t2455 * t3160 + t2496 * t3537 + t2497 * t3534;
t3157 = t2954 * t3398;
t3186 = t2456 * t3157 + t2498 * t3536 + t2499 * t3533;
t3185 = t2469 * t3170 - t3294 * t4167 + t3295 * t4229;
t3184 = t2470 * t3167 - t3292 * t4168 + t3293 * t4228;
t3183 = t2471 * t3164 - t3290 * t4169 + t3291 * t4227;
t3182 = t2472 * t3163 - t3288 * t3981 + t3289 * t3978;
t3181 = t2473 * t3160 - t3286 * t3980 + t3287 * t3977;
t3180 = t2474 * t3157 - t3284 * t3979 + t3285 * t3976;
t2864 = t2911 * t3605;
t3179 = t2864 + t3753;
t3172 = t4230 * t3347;
t3171 = t4230 * t3346;
t3169 = t4231 * t3343;
t3168 = t4231 * t3342;
t3166 = t4232 * t3339;
t3165 = t4232 * t3338;
t3162 = t2989 * t3400;
t3161 = t2992 * t3400;
t3159 = t2990 * t3399;
t3158 = t2993 * t3399;
t3156 = t2991 * t3398;
t3155 = t2994 * t3398;
t3154 = t2598 * t3349;
t3153 = t2598 * t3348;
t3152 = t2599 * t3345;
t3151 = t2599 * t3344;
t3150 = t2600 * t3341;
t3149 = t2600 * t3340;
t3136 = t2604 * t3349;
t3135 = t2604 * t3348;
t3134 = t2605 * t3345;
t3133 = t2605 * t3344;
t3132 = t2606 * t3341;
t3131 = t2606 * t3340;
t3118 = t2656 * t3347;
t3117 = t2656 * t3346;
t3116 = t2658 * t3343;
t3115 = t2658 * t3342;
t3114 = t2660 * t3339;
t3113 = t2660 * t3338;
t3112 = t2679 * t3321;
t3111 = t2682 * t3321;
t3110 = t2680 * t3316;
t3109 = t2683 * t3316;
t3108 = t2681 * t3311;
t3107 = t2684 * t3311;
t3104 = t2685 * t3306;
t3103 = t2688 * t3306;
t3100 = t2686 * t3301;
t3099 = t2690 * t3301;
t3096 = t2687 * t3296;
t3095 = t2689 * t3296;
t2902 = t2942 ^ 2;
t3070 = t2656 * t2832 * t2902 * t3912;
t3069 = t4230 * t3118;
t3068 = t4230 * t3117;
t2903 = t2943 ^ 2;
t3067 = t2658 * t2833 * t2903 * t3911;
t3066 = t4231 * t3116;
t3065 = t4231 * t3115;
t2904 = t2944 ^ 2;
t3064 = t2660 * t2834 * t2904 * t3910;
t3063 = t4232 * t3114;
t3062 = t4232 * t3113;
t2905 = t2945 ^ 2;
t3061 = t2665 * t2835 * t2905 * t3909;
t3060 = t2665 * t3162;
t3059 = t2665 * t3161;
t2906 = t2946 ^ 2;
t3058 = t2667 * t2836 * t2906 * t3908;
t3057 = t2667 * t3159;
t3056 = t2667 * t3158;
t2907 = t2947 ^ 2;
t3055 = t2669 * t2837 * t2907 * t3907;
t3054 = t2669 * t3156;
t3053 = t2669 * t3155;
t3052 = t2832 * t3118;
t3051 = t2832 * t3117;
t3050 = t2833 * t3116;
t3049 = t2833 * t3115;
t3048 = t2834 * t3114;
t3047 = t2834 * t3113;
t3025 = t2749 * t2753 - t2751 * t2752;
t2653 = t3277 + t3758;
t2955 = 0.1e1 / t2960 ^ 2;
t2910 = t2951 ^ 2;
t2909 = t2949 ^ 2;
t2882 = t2952 * t2910;
t2881 = t2911 * t2910;
t2880 = t2911 * t2908;
t2865 = t2948 * t3604;
t2863 = t2911 * t3623;
t2862 = t2949 * t3604;
t2706 = t2753 * t2951;
t2705 = t2751 * t2951;
t2692 = t2753 * t3606;
t2691 = t2751 * t3606;
t2654 = t3278 + t3756;
t2652 = -t2863 - t3761;
t2517 = (-t2749 * t2953 + t2752 * t2950) * t2952;
t2516 = -t2692 + t2862 - t3225;
t2515 = t2691 + (-t2949 * t2950 + t3762) * t2952;
t2487 = -t2911 * t2950 * t2953 - t2749 * t2752 - t2751 * t2753;
t2135 = -t2604 * t3321 - t2605 * t3316 - t2606 * t3311 - t2607 * t3306 - t2608 * t3301 - t2609 * t3296;
t2134 = -t2598 * t3321 - t2599 * t3316 - t2600 * t3311 - t2601 * t3306 - t2602 * t3301 - t2603 * t3296;
t2097 = t2198 * t2959 + t2354 * t3297;
t2096 = t2197 * t2959 + t2353 * t3302;
t2095 = t2196 * t2959 + t2352 * t3307;
t2094 = t2192 * t2959 + t2351 * t3312;
t2093 = t2191 * t2959 + t2350 * t3317;
t2092 = t2190 * t2959 + t2349 * t3322;
t2085 = t2598 * t3869 + t2599 * t3867 + t2600 * t3865 + t2601 * t3863 + t2602 * t3861 + t2603 * t3859;
t2060 = -t2097 * t2991 - t2354 * t3298;
t2059 = t2097 * t2994 - t2354 * t3299;
t2058 = -t2096 * t2990 - t2353 * t3303;
t2057 = t2096 * t2993 - t2353 * t3304;
t2056 = -t2095 * t2989 - t2352 * t3308;
t2055 = t2095 * t2992 - t2352 * t3309;
t2054 = -t2094 * t2979 - t2351 * t3313;
t2053 = t2094 * t2982 - t2351 * t3314;
t2052 = -t2093 * t2978 - t2350 * t3318;
t2051 = t2093 * t2981 - t2350 * t3319;
t2050 = -t2092 * t2977 - t2349 * t3323;
t2049 = t2092 * t2980 - t2349 * t3324;
t2024 = t2078 * t2959 + t2309 * t3297;
t2023 = t2077 * t2959 + t2308 * t3297;
t2022 = t2076 * t2959 + t2307 * t3302;
t2021 = t2075 * t2959 + t2306 * t3302;
t2020 = t2074 * t2959 + t2305 * t3307;
t2019 = t2073 * t2959 + t2304 * t3307;
t2018 = t2066 * t2959 + t2303 * t3312;
t2017 = t2065 * t2959 + t2302 * t3312;
t2016 = t2064 * t2959 + t2301 * t3317;
t2015 = t2063 * t2959 + t2300 * t3317;
t2014 = t2062 * t2959 + t2299 * t3322;
t2013 = t2061 * t2959 + t2298 * t3322;
t2012 = -t2024 * t2991 - t2309 * t3298;
t2011 = t2024 * t2994 - t2309 * t3299;
t2010 = -t2023 * t2991 - t2308 * t3298;
t2009 = t2023 * t2994 - t2308 * t3299;
t2008 = -t2022 * t2990 - t2307 * t3303;
t2007 = t2022 * t2993 - t2307 * t3304;
t2006 = -t2021 * t2990 - t2306 * t3303;
t2005 = t2021 * t2993 - t2306 * t3304;
t2004 = -t2020 * t2989 - t2305 * t3308;
t2003 = t2020 * t2992 - t2305 * t3309;
t2002 = -t2019 * t2989 - t2304 * t3308;
t2001 = t2019 * t2992 - t2304 * t3309;
t2000 = -t2018 * t2979 - t2303 * t3313;
t1999 = t2018 * t2982 - t2303 * t3314;
t1998 = -t2017 * t2979 - t2302 * t3313;
t1997 = t2017 * t2982 - t2302 * t3314;
t1996 = -t2016 * t2978 - t2301 * t3318;
t1995 = t2016 * t2981 - t2301 * t3319;
t1994 = -t2015 * t2978 - t2300 * t3318;
t1993 = t2015 * t2981 - t2300 * t3319;
t1992 = -t2014 * t2977 - t2299 * t3323;
t1991 = t2014 * t2980 - t2299 * t3324;
t1990 = -t2013 * t2977 - t2298 * t3323;
t1989 = t2013 * t2980 - t2298 * t3324;
t1985 = t2964 * t3551 + t2091;
t1984 = t2964 * t3552 + t2090;
t1983 = t2964 * t3553 + t2089;
t1979 = t2964 * t3554 + t2088;
t1978 = t2964 * t3555 + t2087;
t1977 = t2964 * t3556 + t2086;
t1952 = t2048 * t2964 + t3180;
t1951 = t2047 * t2964 + t3181;
t1950 = t2046 * t2964 + t3182;
t1949 = t2964 * t3180 + t2048;
t1948 = t2964 * t3181 + t2047;
t1947 = t2964 * t3182 + t2046;
t1946 = t2045 * t2964 + t3183;
t1945 = t2044 * t2964 + t3184;
t1944 = t2043 * t2964 + t3185;
t1943 = t2964 * t3183 + t2045;
t1942 = t2964 * t3184 + t2044;
t1941 = t2964 * t3185 + t2043;
t1940 = t1988 * t2959 + t2091 * t3192;
t1939 = t1987 * t2959 + t2090 * t3192;
t1938 = t1986 * t2959 + t2089 * t3192;
t1937 = t1982 * t2959 + t2088 * t3192;
t1936 = t1981 * t2959 + t2087 * t3192;
t1935 = t1980 * t2959 + t2086 * t3192;
t1934 = t2042 * t2964 + t3186;
t1933 = t2041 * t2964 + t3187;
t1932 = t2040 * t2964 + t3188;
t1931 = t2964 * t3186 + t2042;
t1930 = t2964 * t3187 + t2041;
t1929 = t2964 * t3188 + t2040;
t1928 = t2039 * t2964 + t3189;
t1927 = t2038 * t2964 + t3190;
t1926 = t2037 * t2964 + t3191;
t1925 = t2964 * t3189 + t2039;
t1924 = t2964 * t3190 + t2038;
t1923 = t2964 * t3191 + t2037;
t1922 = (t2299 * t3899 + t2301 * t3897 + t2303 * t3895 + t2305 * t3893 + t2307 * t3891 + t2309 * t3889) * t2955;
t1921 = (t2298 * t3899 + t2300 * t3897 + t2302 * t3895 + t2304 * t3893 + t2306 * t3891 + t2308 * t3889) * t2955;
t1920 = -t1940 * t2991 - t2091 * t3205;
t1919 = t1940 * t2994 - t2091 * t3208;
t1918 = -t1939 * t2990 - t2090 * t3206;
t1917 = t1939 * t2993 - t2090 * t3209;
t1916 = -t1938 * t2989 - t2089 * t3207;
t1915 = t1938 * t2992 - t2089 * t3210;
t1914 = -t1937 * t2979 - t2088 * t3211;
t1913 = t1937 * t2982 - t2088 * t3214;
t1912 = -t1936 * t2978 - t2087 * t3212;
t1911 = t1936 * t2981 - t2087 * t3215;
t1910 = -t1935 * t2977 - t2086 * t3213;
t1909 = t1935 * t2980 - t2086 * t3216;
t1908 = t1952 * t2959 + t2048 * t3192;
t1907 = t1951 * t2959 + t2047 * t3192;
t1906 = t1950 * t2959 + t2046 * t3192;
t1905 = (t2298 * t3951 + t2300 * t3947 + t2302 * t3943 + t2304 * t3939 + t2306 * t3935 + t2308 * t3931) * t2955;
t1904 = t1946 * t2959 + t2045 * t3192;
t1903 = t1945 * t2959 + t2044 * t3192;
t1902 = t1944 * t2959 + t2043 * t3192;
t1901 = t1934 * t2959 + t2042 * t3192;
t1900 = t1933 * t2959 + t2041 * t3192;
t1899 = t1932 * t2959 + t2040 * t3192;
t1898 = t1928 * t2959 + t2039 * t3192;
t1897 = t1927 * t2959 + t2038 * t3192;
t1896 = t1926 * t2959 + t2037 * t3192;
t1895 = -t1908 * t2991 - t2048 * t3205;
t1894 = t1908 * t2994 - t2048 * t3208;
t1893 = -t1907 * t2990 - t2047 * t3206;
t1892 = t1907 * t2993 - t2047 * t3209;
t1891 = -t1906 * t2989 - t2046 * t3207;
t1890 = t1906 * t2992 - t2046 * t3210;
t1889 = -t1904 * t2979 - t2045 * t3211;
t1888 = t1904 * t2982 - t2045 * t3214;
t1887 = -t1903 * t2978 - t2044 * t3212;
t1886 = t1903 * t2981 - t2044 * t3215;
t1885 = -t1902 * t2977 - t2043 * t3213;
t1884 = t1902 * t2980 - t2043 * t3216;
t1883 = -t1901 * t2991 - t2042 * t3205;
t1882 = t1901 * t2994 - t2042 * t3208;
t1881 = -t1900 * t2990 - t2041 * t3206;
t1880 = t1900 * t2993 - t2041 * t3209;
t1879 = -t1899 * t2989 - t2040 * t3207;
t1878 = t1899 * t2992 - t2040 * t3210;
t1877 = -t1898 * t2979 - t2039 * t3211;
t1876 = t1898 * t2982 - t2039 * t3214;
t1875 = -t1897 * t2978 - t2038 * t3212;
t1874 = t1897 * t2981 - t2038 * t3215;
t1873 = -t1896 * t2977 - t2037 * t3213;
t1872 = t1896 * t2980 - t2037 * t3216;
t1 = [(t2349 ^ 2 * t2657 + t2350 ^ 2 * t2659 + t2351 ^ 2 * t2661 + t2352 ^ 2 * t2666 + t2353 ^ 2 * t2668 + t2354 ^ 2 * t2670) * t2955, (t2190 * t4235 + t2191 * t4234 + t2192 * t4233 + t2193 * t3900 + t2194 * t3898 + t2195 * t3896 + t2196 * t3400 + t2197 * t3399 + t2198 * t3398 + t2199 * t3894 + t2200 * t3892 + t2201 * t3890) * t2954, t2657 * t2832 ^ 2 * t2902 + t2659 * t2833 ^ 2 * t2903 + t2661 * t2834 ^ 2 * t2904 + t2666 * t2835 ^ 2 * t2905 + t2668 * t2836 ^ 2 * t2906 + t2670 * t2837 ^ 2 * t2907, -t2049 * t3325 - t2051 * t3320 - t2053 * t3315 - t2055 * t3310 - t2057 * t3305 - t2059 * t3300 + (-t2349 * t3111 - t2350 * t3109 - t2351 * t3107 - t2352 * t3103 - t2353 * t3099 - t2354 * t3095 + (-t2980 * t3070 - t2981 * t3067 - t2982 * t3064 - t2992 * t3061 - t2993 * t3058 - t2994 * t3055) * t2959) * t2954, -t2050 * t3325 - t2052 * t3320 - t2054 * t3315 - t2056 * t3310 - t2058 * t3305 - t2060 * t3300 + (t2349 * t3112 + t2350 * t3110 + t2351 * t3108 + t2352 * t3104 + t2353 * t3100 + t2354 * t3096 + (t2977 * t3070 + t2978 * t3067 + t2979 * t3064 + t2989 * t3061 + t2990 * t3058 + t2991 * t3055) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2881 + t2880 + t2909; t1922, (t2062 * t4235 + t2064 * t4234 + t2066 * t4233 + t2068 * t3900 + t2070 * t3898 + t2072 * t3896 + t2074 * t3400 + t2076 * t3399 + t2078 * t3398 + t2080 * t3894 + t2082 * t3892 + t2084 * t3890) * t2954, t2135, -t1991 * t3325 - t1995 * t3320 - t1999 * t3315 - t2003 * t3310 - t2007 * t3305 - t2011 * t3300 + (t2349 * t3360 + t2350 * t3358 + t2351 * t3356 + t2352 * t3354 + t2353 * t3352 + t2354 * t3350 + (t2604 * t3068 + t2605 * t3065 + t2606 * t3062 + t2607 * t3059 + t2608 * t3056 + t2609 * t3053) * t2959) * t2954, -t1992 * t3325 - t1996 * t3320 - t2000 * t3315 - t2004 * t3310 - t2008 * t3305 - t2012 * t3300 + (-t2349 * t3361 - t2350 * t3359 - t2351 * t3357 - t2352 * t3355 - t2353 * t3353 - t2354 * t3351 + (-t2604 * t3069 - t2605 * t3066 - t2606 * t3063 - t2607 * t3060 - t2608 * t3057 - t2609 * t3054) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2515; t1921, (t2061 * t4235 + t2063 * t4234 + t2065 * t4233 + t2067 * t3900 + t2069 * t3898 + t2071 * t3896 + t2073 * t3400 + t2075 * t3399 + t2077 * t3398 + t2079 * t3894 + t2081 * t3892 + t2083 * t3890) * t2954, t2134, -t1989 * t3325 - t1993 * t3320 - t1997 * t3315 - t2001 * t3310 - t2005 * t3305 - t2009 * t3300 + (t2349 * t3372 + t2350 * t3370 + t2351 * t3368 + t2352 * t3366 + t2353 * t3364 + t2354 * t3362 + (t2598 * t3068 + t2599 * t3065 + t2600 * t3062 + t2601 * t3059 + t2602 * t3056 + t2603 * t3053) * t2959) * t2954, -t1990 * t3325 - t1994 * t3320 - t1998 * t3315 - t2002 * t3310 - t2006 * t3305 - t2010 * t3300 + (-t2349 * t3373 - t2350 * t3371 - t2351 * t3369 - t2352 * t3367 - t2353 * t3365 - t2354 * t3363 + (-t2598 * t3069 - t2599 * t3066 - t2600 * t3063 - t2601 * t3060 - t2602 * t3057 - t2603 * t3054) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2516; (t2086 * t3900 + t2087 * t3898 + t2088 * t3896 + t2089 * t3894 + t2090 * t3892 + t2091 * t3890) * t2954, (t1977 * t3900 + t1978 * t3898 + t1979 * t3896 + t1980 * t4235 + t1981 * t4234 + t1982 * t4233 + t1983 * t3894 + t1984 * t3892 + t1985 * t3890 + t1986 * t3400 + t1987 * t3399 + t1988 * t3398) * t2954, -t2328 * t3320 - t2329 * t3315 - t2330 * t3325 - t2331 * t3310 - t2332 * t3305 - t2333 * t3300, -t1909 * t3325 - t1911 * t3320 - t1913 * t3315 - t1915 * t3310 - t1917 * t3305 - t1919 * t3300 + (t2328 * t3393 + t2329 * t3390 + t2330 * t3396 + t2331 * t3387 + t2332 * t3384 + t2333 * t3381 + (t2328 * t3168 + t2329 * t3165 + t2330 * t3171 + t2331 * t3161 + t2332 * t3158 + t2333 * t3155) * t2959) * t2954, -t1910 * t3325 - t1912 * t3320 - t1914 * t3315 - t1916 * t3310 - t1918 * t3305 - t1920 * t3300 + (-t2328 * t3394 - t2329 * t3391 - t2330 * t3397 - t2331 * t3388 - t2332 * t3385 - t2333 * t3382 + (-t2328 * t3169 - t2329 * t3166 - t2330 * t3172 - t2331 * t3162 - t2332 * t3159 - t2333 * t3156) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; (t2043 * t3900 + t2044 * t3898 + t2045 * t3896 + t2046 * t3894 + t2047 * t3892 + t2048 * t3890) * t2954, (t1941 * t3900 + t1942 * t3898 + t1943 * t3896 + t1944 * t4235 + t1945 * t4234 + t1946 * t4233 + t1947 * t3894 + t1948 * t3892 + t1949 * t3890 + t1950 * t3400 + t1951 * t3399 + t1952 * t3398) * t2954, -t2256 * t3325 - t2257 * t3320 - t2258 * t3315 - t2259 * t3310 - t2260 * t3305 - t2261 * t3300, -t1884 * t3325 - t1886 * t3320 - t1888 * t3315 - t1890 * t3310 - t1892 * t3305 - t1894 * t3300 + (t2256 * t3396 + t2257 * t3393 + t2258 * t3390 + t2259 * t3387 + t2260 * t3384 + t2261 * t3381 + (t2256 * t3171 + t2257 * t3168 + t2258 * t3165 + t2259 * t3161 + t2260 * t3158 + t2261 * t3155) * t2959) * t2954, -t1885 * t3325 - t1887 * t3320 - t1889 * t3315 - t1891 * t3310 - t1893 * t3305 - t1895 * t3300 + (-t2256 * t3397 - t2257 * t3394 - t2258 * t3391 - t2259 * t3388 - t2260 * t3385 - t2261 * t3382 + (-t2256 * t3172 - t2257 * t3169 - t2258 * t3166 - t2259 * t3162 - t2260 * t3159 - t2261 * t3156) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t3630, t2878, t2882 + t3710, 0; (t2037 * t3900 + t2038 * t3898 + t2039 * t3896 + t2040 * t3894 + t2041 * t3892 + t2042 * t3890) * t2954, (t1923 * t3900 + t1924 * t3898 + t1925 * t3896 + t1926 * t4235 + t1927 * t4234 + t1928 * t4233 + t1929 * t3894 + t1930 * t3892 + t1931 * t3890 + t1932 * t3400 + t1933 * t3399 + t1934 * t3398) * t2954, -t2184 * t3325 - t2185 * t3320 - t2186 * t3315 - t2187 * t3310 - t2188 * t3305 - t2189 * t3300, -t1872 * t3325 - t1874 * t3320 - t1876 * t3315 - t1878 * t3310 - t1880 * t3305 - t1882 * t3300 + (t2184 * t3396 + t2185 * t3393 + t2186 * t3390 + t2187 * t3387 + t2188 * t3384 + t2189 * t3381 + (t2184 * t3171 + t2185 * t3168 + t2186 * t3165 + t2187 * t3161 + t2188 * t3158 + t2189 * t3155) * t2959) * t2954, -t1873 * t3325 - t1875 * t3320 - t1877 * t3315 - t1879 * t3310 - t1881 * t3305 - t1883 * t3300 + (-t2184 * t3397 - t2185 * t3394 - t2186 * t3391 - t2187 * t3388 - t2188 * t3385 - t2189 * t3382 + (-t2184 * t3172 - t2185 * t3169 - t2186 * t3166 - t2187 * t3162 - t2188 * t3159 - t2189 * t3156) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t3607, -t3606, 0, 0; t1922, (t2181 * t4145 + t2182 * t4144 + t2183 * t4143 + t2193 * t3952 + t2194 * t3948 + t2195 * t3944 + t2199 * t3940 + t2200 * t3936 + t2201 * t3932 + t3973 * t4217 + t3974 * t4216 + t3975 * t4215) * t2954, t2135, t2049 * t3870 + t2051 * t3868 + t2053 * t3866 + t2055 * t3864 + t2057 * t3862 + t2059 * t3860 + (-t2299 * t3111 - t2301 * t3109 - t2303 * t3107 - t2305 * t3103 - t2307 * t3099 - t2309 * t3095 + (-t2181 * t4112 - t2182 * t4118 - t2183 * t4124 - t3047 * t4217 - t3049 * t4216 - t3051 * t4215) * t2959) * t2954, t2050 * t3870 + t2052 * t3868 + t2054 * t3866 + t2056 * t3864 + t2058 * t3862 + t2060 * t3860 + (t2299 * t3112 + t2301 * t3110 + t2303 * t3108 + t2305 * t3104 + t2307 * t3100 + t2309 * t3096 + (t2181 * t4111 + t2182 * t4117 + t2183 * t4123 + t3048 * t4217 + t3050 * t4216 + t3052 * t4215) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2515; (t2299 ^ 2 * t2657 + t2301 ^ 2 * t2659 + t2303 ^ 2 * t2661 + t2305 ^ 2 * t2666 + t2307 ^ 2 * t2668 + t2309 ^ 2 * t2670) * t2955, (t2062 * t4229 + t2064 * t4228 + t2066 * t4227 + t2068 * t3952 + t2070 * t3948 + t2072 * t3944 + t2074 * t3978 + t2076 * t3977 + t2078 * t3976 + t2080 * t3940 + t2082 * t3936 + t2084 * t3932) * t2954, t2604 ^ 2 * t2657 + t2605 ^ 2 * t2659 + t2606 ^ 2 * t2661 + t2607 ^ 2 * t2666 + t2608 ^ 2 * t2668 + t2609 ^ 2 * t2670, t1991 * t3870 + t1995 * t3868 + t1999 * t3866 + t2003 * t3864 + t2007 * t3862 + t2011 * t3860 + (t2299 * t3360 + t2301 * t3358 + t2303 * t3356 + t2305 * t3354 + t2307 * t3352 + t2309 * t3350 + (t2181 * t4177 + t2182 * t4175 + t2183 * t4173 + t3131 * t4217 + t3133 * t4216 + t3135 * t4215) * t2959) * t2954, t1992 * t3870 + t1996 * t3868 + t2000 * t3866 + t2004 * t3864 + t2008 * t3862 + t2012 * t3860 + (-t2299 * t3361 - t2301 * t3359 - t2303 * t3357 - t2305 * t3355 - t2307 * t3353 - t2309 * t3351 + (-t2181 * t4178 - t2182 * t4176 - t2183 * t4174 - t3132 * t4217 - t3134 * t4216 - t3136 * t4215) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2911 * t2950 ^ 2 + t2749 ^ 2 + t2751 ^ 2; t1905, (t2061 * t4229 + t2063 * t4228 + t2065 * t4227 + t2067 * t3952 + t2069 * t3948 + t2071 * t3944 + t2073 * t3978 + t2075 * t3977 + t2077 * t3976 + t2079 * t3940 + t2081 * t3936 + t2083 * t3932) * t2954, t2085, t1989 * t3870 + t1993 * t3868 + t1997 * t3866 + t2001 * t3864 + t2005 * t3862 + t2009 * t3860 + (t2299 * t3372 + t2301 * t3370 + t2303 * t3368 + t2305 * t3366 + t2307 * t3364 + t2309 * t3362 + (t2181 * t4183 + t2182 * t4181 + t2183 * t4179 + t3149 * t4217 + t3151 * t4216 + t3153 * t4215) * t2959) * t2954, t1990 * t3870 + t1994 * t3868 + t1998 * t3866 + t2002 * t3864 + t2006 * t3862 + t2010 * t3860 + (-t2299 * t3373 - t2301 * t3371 - t2303 * t3369 - t2305 * t3367 - t2307 * t3365 - t2309 * t3363 + (-t2181 * t4184 - t2182 * t4182 - t2183 * t4180 - t3150 * t4217 - t3152 * t4216 - t3154 * t4215) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2487; (t2086 * t3952 + t2087 * t3948 + t2088 * t3944 + t2089 * t3940 + t2090 * t3936 + t2091 * t3932) * t2954, (t1977 * t3952 + t1978 * t3948 + t1979 * t3944 + t1980 * t4229 + t1981 * t4228 + t1982 * t4227 + t1983 * t3940 + t1984 * t3936 + t1985 * t3932 + t1986 * t3978 + t1987 * t3977 + t1988 * t3976) * t2954, t2328 * t3868 + t2329 * t3866 + t2330 * t3870 + t2331 * t3864 + t2332 * t3862 + t2333 * t3860, t1909 * t3870 + t1911 * t3868 + t1913 * t3866 + t1915 * t3864 + t1917 * t3862 + t1919 * t3860 + (t2299 * t3425 + t2301 * t3433 + t2303 * t3429 + t2305 * t3419 + t2307 * t3413 + t2309 * t3407 + (t2181 * t4190 + t2182 * t4188 + t2183 * t4186 + t3427 * t4215 + t3431 * t4217 + t3435 * t4216) * t2959) * t2954, t1910 * t3870 + t1912 * t3868 + t1914 * t3866 + t1916 * t3864 + t1918 * t3862 + t1920 * t3860 + (-t2299 * t3426 - t2301 * t3434 - t2303 * t3430 - t2305 * t3420 - t2307 * t3414 - t2309 * t3408 + (-t2181 * t4189 - t2182 * t4187 - t2183 * t4185 - t3428 * t4215 - t3432 * t4217 - t3436 * t4216) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t2652, -t2653, t2518, 0; (t2043 * t3952 + t2044 * t3948 + t2045 * t3944 + t2046 * t3940 + t2047 * t3936 + t2048 * t3932) * t2954, (t1941 * t3952 + t1942 * t3948 + t1943 * t3944 + t1944 * t4229 + t1945 * t4228 + t1946 * t4227 + t1947 * t3940 + t1948 * t3936 + t1949 * t3932 + t1950 * t3978 + t1951 * t3977 + t1952 * t3976) * t2954, t2256 * t3870 + t2257 * t3868 + t2258 * t3866 + t2259 * t3864 + t2260 * t3862 + t2261 * t3860, t1884 * t3870 + t1886 * t3868 + t1888 * t3866 + t1890 * t3864 + t1892 * t3862 + t1894 * t3860 + (t2256 * t3468 + t2257 * t3462 + t2258 * t3456 + t2259 * t3450 + t2260 * t3444 + t2261 * t3438 + (t2181 * t4196 + t2182 * t4194 + t2183 * t4192 + t3493 * t4217 + t3497 * t4216 + t3501 * t4215) * t2959) * t2954, t1885 * t3870 + t1887 * t3868 + t1889 * t3866 + t1891 * t3864 + t1893 * t3862 + t1895 * t3860 + (-t2256 * t3469 - t2257 * t3463 - t2258 * t3457 - t2259 * t3451 - t2260 * t3445 - t2261 * t3439 + (-t2181 * t4195 - t2182 * t4193 - t2183 * t4191 - t3494 * t4217 - t3498 * t4216 - t3502 * t4215) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t3232, -t3233, t2705 + t3762, 0; (t2037 * t3952 + t2038 * t3948 + t2039 * t3944 + t2040 * t3940 + t2041 * t3936 + t2042 * t3932) * t2954, (t1923 * t3952 + t1924 * t3948 + t1925 * t3944 + t1926 * t4229 + t1927 * t4228 + t1928 * t4227 + t1929 * t3940 + t1930 * t3936 + t1931 * t3932 + t1932 * t3978 + t1933 * t3977 + t1934 * t3976) * t2954, t2184 * t3870 + t2185 * t3868 + t2186 * t3866 + t2187 * t3864 + t2188 * t3862 + t2189 * t3860, t1872 * t3870 + t1874 * t3868 + t1876 * t3866 + t1878 * t3864 + t1880 * t3862 + t1882 * t3860 + (t2184 * t3468 + t2185 * t3462 + t2186 * t3456 + t2187 * t3450 + t2188 * t3444 + t2189 * t3438 + (t2181 * t4202 + t2182 * t4200 + t2183 * t4198 + t3523 * t4217 + t3527 * t4216 + t3531 * t4215) * t2959) * t2954, t1873 * t3870 + t1875 * t3868 + t1877 * t3866 + t1879 * t3864 + t1881 * t3862 + t1883 * t3860 + (-t2184 * t3469 - t2185 * t3463 - t2186 * t3457 - t2187 * t3451 - t2188 * t3445 - t2189 * t3439 + (-t2181 * t4201 - t2182 * t4199 - t2183 * t4197 - t3524 * t4217 - t3528 * t4216 - t3532 * t4215) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t2749, -t2751, 0, 0; t1921, (t2178 * t4145 + t2179 * t4144 + t2180 * t4143 + t2193 * t3954 + t2194 * t3950 + t2195 * t3946 + t2199 * t3942 + t2200 * t3938 + t2201 * t3934 + t3973 * t4091 + t3974 * t4092 + t3975 * t4093) * t2954, t2134, t2049 * t3882 + t2051 * t3880 + t2053 * t3878 + t2055 * t3876 + t2057 * t3874 + t2059 * t3872 + (-t2298 * t3111 - t2300 * t3109 - t2302 * t3107 - t2304 * t3103 - t2306 * t3099 - t2308 * t3095 + (-t2178 * t4112 - t2179 * t4118 - t2180 * t4124 - t3047 * t4091 - t3049 * t4092 - t3051 * t4093) * t2959) * t2954, t2050 * t3882 + t2052 * t3880 + t2054 * t3878 + t2056 * t3876 + t2058 * t3874 + t2060 * t3872 + (t2298 * t3112 + t2300 * t3110 + t2302 * t3108 + t2304 * t3104 + t2306 * t3100 + t2308 * t3096 + (t2178 * t4111 + t2179 * t4117 + t2180 * t4123 + t3048 * t4091 + t3050 * t4092 + t3052 * t4093) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2516; t1905, (t2062 * t4167 + t2064 * t4168 + t2066 * t4169 + t2068 * t3954 + t2070 * t3950 + t2072 * t3946 + t2074 * t3981 + t2076 * t3980 + t2078 * t3979 + t2080 * t3942 + t2082 * t3938 + t2084 * t3934) * t2954, t2085, t1991 * t3882 + t1995 * t3880 + t1999 * t3878 + t2003 * t3876 + t2007 * t3874 + t2011 * t3872 + (t2298 * t3360 + t2300 * t3358 + t2302 * t3356 + t2304 * t3354 + t2306 * t3352 + t2308 * t3350 + (t2178 * t4177 + t2179 * t4175 + t2180 * t4173 + t3131 * t4091 + t3133 * t4092 + t3135 * t4093) * t2959) * t2954, t1992 * t3882 + t1996 * t3880 + t2000 * t3878 + t2004 * t3876 + t2008 * t3874 + t2012 * t3872 + (-t2298 * t3361 - t2300 * t3359 - t2302 * t3357 - t2304 * t3355 - t2306 * t3353 - t2308 * t3351 + (-t2178 * t4178 - t2179 * t4176 - t2180 * t4174 - t3132 * t4091 - t3134 * t4092 - t3136 * t4093) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2487; (t2298 ^ 2 * t2657 + t2300 ^ 2 * t2659 + t2302 ^ 2 * t2661 + t2304 ^ 2 * t2666 + t2306 ^ 2 * t2668 + t2308 ^ 2 * t2670) * t2955, (t2061 * t4167 + t2063 * t4168 + t2065 * t4169 + t2067 * t3954 + t2069 * t3950 + t2071 * t3946 + t2073 * t3981 + t2075 * t3980 + t2077 * t3979 + t2079 * t3942 + t2081 * t3938 + t2083 * t3934) * t2954, t2598 ^ 2 * t2657 + t2599 ^ 2 * t2659 + t2600 ^ 2 * t2661 + t2601 ^ 2 * t2666 + t2602 ^ 2 * t2668 + t2603 ^ 2 * t2670, t1989 * t3882 + t1993 * t3880 + t1997 * t3878 + t2001 * t3876 + t2005 * t3874 + t2009 * t3872 + (t2298 * t3372 + t2300 * t3370 + t2302 * t3368 + t2304 * t3366 + t2306 * t3364 + t2308 * t3362 + (t2178 * t4183 + t2179 * t4181 + t2180 * t4179 + t3149 * t4091 + t3151 * t4092 + t3153 * t4093) * t2959) * t2954, t1990 * t3882 + t1994 * t3880 + t1998 * t3878 + t2002 * t3876 + t2006 * t3874 + t2010 * t3872 + (-t2298 * t3373 - t2300 * t3371 - t2302 * t3369 - t2304 * t3367 - t2306 * t3365 - t2308 * t3363 + (-t2178 * t4184 - t2179 * t4182 - t2180 * t4180 - t3150 * t4091 - t3152 * t4092 - t3154 * t4093) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, t2911 * t2953 ^ 2 + t2752 ^ 2 + t2753 ^ 2; (t2086 * t3954 + t2087 * t3950 + t2088 * t3946 + t2089 * t3942 + t2090 * t3938 + t2091 * t3934) * t2954, (t1977 * t3954 + t1978 * t3950 + t1979 * t3946 + t1980 * t4167 + t1981 * t4168 + t1982 * t4169 + t1983 * t3942 + t1984 * t3938 + t1985 * t3934 + t1986 * t3981 + t1987 * t3980 + t1988 * t3979) * t2954, t2328 * t3880 + t2329 * t3878 + t2330 * t3882 + t2331 * t3876 + t2332 * t3874 + t2333 * t3872, t1909 * t3882 + t1911 * t3880 + t1913 * t3878 + t1915 * t3876 + t1917 * t3874 + t1919 * t3872 + (t2298 * t3425 + t2300 * t3433 + t2302 * t3429 + t2304 * t3419 + t2306 * t3413 + t2308 * t3407 + (t2178 * t4190 + t2179 * t4188 + t2180 * t4186 + t3427 * t4093 + t3431 * t4091 + t3435 * t4092) * t2959) * t2954, t1910 * t3882 + t1912 * t3880 + t1914 * t3878 + t1916 * t3876 + t1918 * t3874 + t1920 * t3872 + (-t2298 * t3426 - t2300 * t3434 - t2302 * t3430 - t2304 * t3420 - t2306 * t3414 - t2308 * t3408 + (-t2178 * t4189 - t2179 * t4187 - t2180 * t4185 - t3428 * t4093 - t3432 * t4091 - t3436 * t4092) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t2654, t3179, -t2519, 0; (t2043 * t3954 + t2044 * t3950 + t2045 * t3946 + t2046 * t3942 + t2047 * t3938 + t2048 * t3934) * t2954, (t1941 * t3954 + t1942 * t3950 + t1943 * t3946 + t1944 * t4167 + t1945 * t4168 + t1946 * t4169 + t1947 * t3942 + t1948 * t3938 + t1949 * t3934 + t1950 * t3981 + t1951 * t3980 + t1952 * t3979) * t2954, t2256 * t3882 + t2257 * t3880 + t2258 * t3878 + t2259 * t3876 + t2260 * t3874 + t2261 * t3872, t1884 * t3882 + t1886 * t3880 + t1888 * t3878 + t1890 * t3876 + t1892 * t3874 + t1894 * t3872 + (t2256 * t3471 + t2257 * t3465 + t2258 * t3459 + t2259 * t3453 + t2260 * t3447 + t2261 * t3441 + (t2178 * t4196 + t2179 * t4194 + t2180 * t4192 + t3493 * t4091 + t3497 * t4092 + t3501 * t4093) * t2959) * t2954, t1885 * t3882 + t1887 * t3880 + t1889 * t3878 + t1891 * t3876 + t1893 * t3874 + t1895 * t3872 + (-t2256 * t3472 - t2257 * t3466 - t2258 * t3460 - t2259 * t3454 - t2260 * t3448 - t2261 * t3442 + (-t2178 * t4195 - t2179 * t4193 - t2180 * t4191 - t3494 * t4091 - t3498 * t4092 - t3502 * t4093) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t3217, t2865, -t2706 - t3757, 0; (t2037 * t3954 + t2038 * t3950 + t2039 * t3946 + t2040 * t3942 + t2041 * t3938 + t2042 * t3934) * t2954, (t1923 * t3954 + t1924 * t3950 + t1925 * t3946 + t1926 * t4167 + t1927 * t4168 + t1928 * t4169 + t1929 * t3942 + t1930 * t3938 + t1931 * t3934 + t1932 * t3981 + t1933 * t3980 + t1934 * t3979) * t2954, t2184 * t3882 + t2185 * t3880 + t2186 * t3878 + t2187 * t3876 + t2188 * t3874 + t2189 * t3872, t1872 * t3882 + t1874 * t3880 + t1876 * t3878 + t1878 * t3876 + t1880 * t3874 + t1882 * t3872 + (t2184 * t3471 + t2185 * t3465 + t2186 * t3459 + t2187 * t3453 + t2188 * t3447 + t2189 * t3441 + (t2178 * t4202 + t2179 * t4200 + t2180 * t4198 + t3523 * t4091 + t3527 * t4092 + t3531 * t4093) * t2959) * t2954, t1873 * t3882 + t1875 * t3880 + t1877 * t3878 + t1879 * t3876 + t1881 * t3874 + t1883 * t3872 + (-t2184 * t3472 - t2185 * t3466 - t2186 * t3460 - t2187 * t3454 - t2188 * t3448 - t2189 * t3442 + (-t2178 * t4201 - t2179 * t4199 - t2180 * t4197 - t3524 * t4091 - t3528 * t4092 - t3532 * t4093) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t2752, t2753, 0, 0; (t1959 * t3899 + t1960 * t3897 + t1961 * t3895 + t1962 * t3893 + t1963 * t3891 + t1964 * t3889) * t2955, (t1953 * t3973 + t1954 * t3975 + t1955 * t3974 + t1956 * t4145 + t1957 * t4143 + t1958 * t4144 + t1959 * t3972 + t1960 * t3971 + t1961 * t3970 + t1962 * t3963 + t1963 * t3962 + t1964 * t3961) * t2954, -t2202 * t3306 - t2203 * t3321 - t2204 * t3316 - t2205 * t3311 - t2206 * t3301 - t2207 * t3296, t2049 * t3959 + t2051 * t3958 + t2053 * t3957 + t2055 * t3960 + t2057 * t3956 + t2059 * t3955 + (-t1959 * t3111 - t1960 * t3109 - t1961 * t3107 - t1962 * t3103 - t1963 * t3099 - t1964 * t3095 + (-t1953 * t3047 - t1954 * t3051 - t1955 * t3049 - t1956 * t4112 - t1957 * t4124 - t1958 * t4118) * t2959) * t2954, t2050 * t3959 + t2052 * t3958 + t2054 * t3957 + t2056 * t3960 + t2058 * t3956 + t2060 * t3955 + (t1959 * t3112 + t1960 * t3110 + t1961 * t3108 + t1962 * t3104 + t1963 * t3100 + t1964 * t3096 + (t1953 * t3048 + t1954 * t3052 + t1955 * t3050 + t1956 * t4111 + t1957 * t4123 + t1958 * t4117) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; (t1959 * t3951 + t1960 * t3947 + t1961 * t3943 + t1962 * t3939 + t1963 * t3935 + t1964 * t3931) * t2955, (t1953 * t4018 + t1954 * t4022 + t1955 * t4020 + t1956 * t4010 + t1957 * t4006 + t1958 * t4008 + t1959 * t4016 + t1960 * t4014 + t1961 * t4012 + t1962 * t4004 + t1963 * t4002 + t1964 * t4000) * t2954, t2202 * t3863 + t2203 * t3869 + t2204 * t3867 + t2205 * t3865 + t2206 * t3861 + t2207 * t3859, t1991 * t3959 + t1995 * t3958 + t1999 * t3957 + t2003 * t3960 + t2007 * t3956 + t2011 * t3955 + (t1959 * t3360 + t1960 * t3358 + t1961 * t3356 + t1962 * t3354 + t1963 * t3352 + t1964 * t3350 + (t1953 * t3131 + t1954 * t3135 + t1955 * t3133 + t1956 * t4177 + t1957 * t4173 + t1958 * t4175) * t2959) * t2954, t1992 * t3959 + t1996 * t3958 + t2000 * t3957 + t2004 * t3960 + t2008 * t3956 + t2012 * t3955 + (-t1959 * t3361 - t1960 * t3359 - t1961 * t3357 - t1962 * t3355 - t1963 * t3353 - t1964 * t3351 + (-t1953 * t3132 - t1954 * t3136 - t1955 * t3134 - t1956 * t4178 - t1957 * t4174 - t1958 * t4176) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t2652, -t2653, t2518, 0; (t1959 * t3953 + t1960 * t3949 + t1961 * t3945 + t1962 * t3941 + t1963 * t3937 + t1964 * t3933) * t2955, (t1953 * t4019 + t1954 * t4023 + t1955 * t4021 + t1956 * t4011 + t1957 * t4007 + t1958 * t4009 + t1959 * t4017 + t1960 * t4015 + t1961 * t4013 + t1962 * t4005 + t1963 * t4003 + t1964 * t4001) * t2954, t2202 * t3875 + t2203 * t3881 + t2204 * t3879 + t2205 * t3877 + t2206 * t3873 + t2207 * t3871, t1989 * t3959 + t1993 * t3958 + t1997 * t3957 + t2001 * t3960 + t2005 * t3956 + t2009 * t3955 + (t1959 * t3372 + t1960 * t3370 + t1961 * t3368 + t1962 * t3366 + t1963 * t3364 + t1964 * t3362 + (t1953 * t3149 + t1954 * t3153 + t1955 * t3151 + t1956 * t4183 + t1957 * t4179 + t1958 * t4181) * t2959) * t2954, t1990 * t3959 + t1994 * t3958 + t1998 * t3957 + t2002 * t3960 + t2006 * t3956 + t2010 * t3955 + (-t1959 * t3373 - t1960 * t3371 - t1961 * t3369 - t1962 * t3367 - t1963 * t3365 - t1964 * t3363 + (-t1953 * t3150 - t1954 * t3154 - t1955 * t3152 - t1956 * t4184 - t1957 * t4180 - t1958 * t4182) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t2654, t3179, -t2519, 0; (t1959 * t3999 + t1960 * t3998 + t1961 * t3997 + t1962 * t3996 + t1963 * t3995 + t1964 * t3994) * t2954, (t1953 * t4051 + t1954 * t4053 + t1955 * t4052 + t1956 * t4050 + t1957 * t4048 + t1958 * t4049 + t1977 * t4071 + t1978 * t4070 + t1979 * t4069 + t1983 * t4068 + t1984 * t4067 + t1985 * t4066) * t2954, t2202 * t3915 + t2203 * t3916 + t2204 * t3918 + t2205 * t3917 + t2206 * t3914 + t2207 * t3913, t1909 * t3959 + t1911 * t3958 + t1913 * t3957 + t1915 * t3960 + t1917 * t3956 + t1919 * t3955 + (t1959 * t3425 + t1960 * t3433 + t1961 * t3429 + t1962 * t3419 + t1963 * t3413 + t1964 * t3407 + (t1953 * t3431 + t1954 * t3427 + t1955 * t3435 + t1956 * t4190 + t1957 * t4186 + t1958 * t4188) * t2959) * t2954, t1910 * t3959 + t1912 * t3958 + t1914 * t3957 + t1916 * t3960 + t1918 * t3956 + t1920 * t3955 + (-t1959 * t3426 - t1960 * t3434 - t1961 * t3430 - t1962 * t3420 - t1963 * t3414 - t1964 * t3408 + (-t1953 * t3432 - t1954 * t3428 - t1955 * t3436 - t1956 * t4189 - t1957 * t4185 - t1958 * t4187) * t2959) * t2954, t2881, -0.2e1 * t2911 * t2951 * t2948, 0.2e1 * t2949 * t3606, t2880, -0.2e1 * t2949 * t3607, t2909, 0, 0, 0, 0; (t1959 * t4029 + t1960 * t4028 + t1961 * t4027 + t1962 * t4026 + t1963 * t4025 + t1964 * t4024) * t2954, (t1941 * t4071 + t1942 * t4070 + t1943 * t4069 + t1944 * t4076 + t1945 * t4075 + t1946 * t4077 + t1947 * t4068 + t1948 * t4067 + t1949 * t4066 + t1950 * t4074 + t1951 * t4072 + t1952 * t4073) * t2954, t2256 * t3959 + t2257 * t3958 + t2258 * t3957 + t2259 * t3960 + t2260 * t3956 + t2261 * t3955, t1884 * t3959 + t1886 * t3958 + t1888 * t3957 + t1890 * t3960 + t1892 * t3956 + t1894 * t3955 + (t1959 * t3499 + t1960 * t3495 + t1961 * t3491 + t1962 * t3485 + t1963 * t3479 + t1964 * t3473 + (t1953 * t3493 + t1954 * t3501 + t1955 * t3497 + t1956 * t4196 + t1957 * t4192 + t1958 * t4194) * t2959) * t2954, t1885 * t3959 + t1887 * t3958 + t1889 * t3957 + t1891 * t3960 + t1893 * t3956 + t1895 * t3955 + (-t1959 * t3500 - t1960 * t3496 - t1961 * t3492 - t1962 * t3486 - t1963 * t3480 - t1964 * t3474 + (-t1953 * t3494 - t1954 * t3502 - t1955 * t3498 - t1956 * t4195 - t1957 * t4191 - t1958 * t4193) * t2959) * t2954, t3224, t2882 - t3710, t2878, -t3224, t3630, 0, 0, 0, 0, 0; (t1959 * t4035 + t1960 * t4034 + t1961 * t4033 + t1962 * t4032 + t1963 * t4031 + t1964 * t4030) * t2954, (t1923 * t4071 + t1924 * t4070 + t1925 * t4069 + t1926 * t4076 + t1927 * t4075 + t1928 * t4077 + t1929 * t4068 + t1930 * t4067 + t1931 * t4066 + t1932 * t4074 + t1933 * t4072 + t1934 * t4073) * t2954, t2184 * t3959 + t2185 * t3958 + t2186 * t3957 + t2187 * t3960 + t2188 * t3956 + t2189 * t3955, t1872 * t3959 + t1874 * t3958 + t1876 * t3957 + t1878 * t3960 + t1880 * t3956 + t1882 * t3955 + (t1959 * t3529 + t1960 * t3525 + t1961 * t3521 + t1962 * t3515 + t1963 * t3509 + t1964 * t3503 + (t1953 * t3523 + t1954 * t3531 + t1955 * t3527 + t1956 * t4202 + t1957 * t4198 + t1958 * t4200) * t2959) * t2954, t1873 * t3959 + t1875 * t3958 + t1877 * t3957 + t1879 * t3960 + t1881 * t3956 + t1883 * t3955 + (-t1959 * t3530 - t1960 * t3526 - t1961 * t3522 - t1962 * t3516 - t1963 * t3510 - t1964 * t3504 + (-t1953 * t3524 - t1954 * t3532 - t1955 * t3528 - t1956 * t4201 - t1957 * t4197 - t1958 * t4199) * t2959) * t2954, 0, 0, t3606, 0, -t3607, t2949, 0, 0, 0, 0; (t2026 * t3899 + t2028 * t3897 + t2030 * t3895 + t2032 * t3893 + t2034 * t3891 + t2036 * t3889) * t2955, (t1966 * t3974 + t1967 * t3973 + t1969 * t3975 + t1971 * t4145 + t1972 * t4144 + t1973 * t4143 + t2026 * t3972 + t2028 * t3971 + t2030 * t3970 + t2032 * t3963 + t2034 * t3962 + t2036 * t3961) * t2954, -t2314 * t3321 - t2316 * t3316 - t2318 * t3311 - t2320 * t3306 - t2322 * t3301 - t2324 * t3296, t2049 * t3929 + t2051 * t3927 + t2053 * t3925 + t2055 * t3923 + t2057 * t3921 + t2059 * t3919 + (-t2026 * t3111 - t2028 * t3109 - t2030 * t3107 - t2032 * t3103 - t2034 * t3099 - t2036 * t3095 + (-t1966 * t3049 - t1967 * t3047 - t1969 * t3051 - t1971 * t4112 - t1972 * t4118 - t1973 * t4124) * t2959) * t2954, t2050 * t3929 + t2052 * t3927 + t2054 * t3925 + t2056 * t3923 + t2058 * t3921 + t2060 * t3919 + (t2026 * t3112 + t2028 * t3110 + t2030 * t3108 + t2032 * t3104 + t2034 * t3100 + t2036 * t3096 + (t1966 * t3050 + t1967 * t3048 + t1969 * t3052 + t1971 * t4111 + t1972 * t4117 + t1973 * t4123) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t2652, t2653, -t2518, 0; (t2026 * t3951 + t2028 * t3947 + t2030 * t3943 + t2032 * t3939 + t2034 * t3935 + t2036 * t3931) * t2955, (t1966 * t4020 + t1967 * t4018 + t1969 * t4022 + t1971 * t4010 + t1972 * t4008 + t1973 * t4006 + t2026 * t4016 + t2028 * t4014 + t2030 * t4012 + t2032 * t4004 + t2034 * t4002 + t2036 * t4000) * t2954, t2314 * t3869 + t2316 * t3867 + t2318 * t3865 + t2320 * t3863 + t2322 * t3861 + t2324 * t3859, t1991 * t3929 + t1995 * t3927 + t1999 * t3925 + t2003 * t3923 + t2007 * t3921 + t2011 * t3919 + (t2026 * t3360 + t2028 * t3358 + t2030 * t3356 + t2032 * t3354 + t2034 * t3352 + t2036 * t3350 + (t1966 * t3133 + t1967 * t3131 + t1969 * t3135 + t1971 * t4177 + t1972 * t4175 + t1973 * t4173) * t2959) * t2954, t1992 * t3929 + t1996 * t3927 + t2000 * t3925 + t2004 * t3923 + t2008 * t3921 + t2012 * t3919 + (-t2026 * t3361 - t2028 * t3359 - t2030 * t3357 - t2032 * t3355 - t2034 * t3353 - t2036 * t3351 + (-t1966 * t3134 - t1967 * t3132 - t1969 * t3136 - t1971 * t4178 - t1972 * t4176 - t1973 * t4174) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; (t2026 * t3953 + t2028 * t3949 + t2030 * t3945 + t2032 * t3941 + t2034 * t3937 + t2036 * t3933) * t2955, (t1966 * t4021 + t1967 * t4019 + t1969 * t4023 + t1971 * t4011 + t1972 * t4009 + t1973 * t4007 + t2026 * t4017 + t2028 * t4015 + t2030 * t4013 + t2032 * t4005 + t2034 * t4003 + t2036 * t4001) * t2954, t2314 * t3881 + t2316 * t3879 + t2318 * t3877 + t2320 * t3875 + t2322 * t3873 + t2324 * t3871, t1989 * t3929 + t1993 * t3927 + t1997 * t3925 + t2001 * t3923 + t2005 * t3921 + t2009 * t3919 + (t2026 * t3372 + t2028 * t3370 + t2030 * t3368 + t2032 * t3366 + t2034 * t3364 + t2036 * t3362 + (t1966 * t3151 + t1967 * t3149 + t1969 * t3153 + t1971 * t4183 + t1972 * t4181 + t1973 * t4179) * t2959) * t2954, t1990 * t3929 + t1994 * t3927 + t1998 * t3925 + t2002 * t3923 + t2006 * t3921 + t2010 * t3919 + (-t2026 * t3373 - t2028 * t3371 - t2030 * t3369 - t2032 * t3367 - t2034 * t3365 - t2036 * t3363 + (-t1966 * t3152 - t1967 * t3150 - t1969 * t3154 - t1971 * t4184 - t1972 * t4182 - t1973 * t4180) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t2517, t4127, t3025, 0; (t2026 * t3999 + t2028 * t3998 + t2030 * t3997 + t2032 * t3996 + t2034 * t3995 + t2036 * t3994) * t2954, (t1966 * t4052 + t1967 * t4051 + t1969 * t4053 + t1971 * t4050 + t1972 * t4049 + t1973 * t4048 + t1977 * t4046 + t1978 * t4044 + t1979 * t4042 + t1983 * t4040 + t1984 * t4038 + t1985 * t4036) * t2954, t2314 * t3916 + t2316 * t3918 + t2318 * t3917 + t2320 * t3915 + t2322 * t3914 + t2324 * t3913, t1909 * t3929 + t1911 * t3927 + t1913 * t3925 + t1915 * t3923 + t1917 * t3921 + t1919 * t3919 + (t2026 * t3425 + t2028 * t3433 + t2030 * t3429 + t2032 * t3419 + t2034 * t3413 + t2036 * t3407 + (t1966 * t3435 + t1967 * t3431 + t1969 * t3427 + t1971 * t4190 + t1972 * t4188 + t1973 * t4186) * t2959) * t2954, t1910 * t3929 + t1912 * t3927 + t1914 * t3925 + t1916 * t3923 + t1918 * t3921 + t1920 * t3919 + (-t2026 * t3426 - t2028 * t3434 - t2030 * t3430 - t2032 * t3420 - t2034 * t3414 - t2036 * t3408 + (-t1966 * t3436 - t1967 * t3432 - t1969 * t3428 - t1971 * t4189 - t1972 * t4187 - t1973 * t4185) * t2959) * t2954, t2691, (-t3759 - t3760) * t2952, -t3277 + t3758, t2749 * t3607, t2863 - t3761, -t2949 * t3621, 0, 0, 0, 0; (t2026 * t4029 + t2028 * t4028 + t2030 * t4027 + t2032 * t4026 + t2034 * t4025 + t2036 * t4024) * t2954, (t1941 * t4046 + t1942 * t4044 + t1943 * t4042 + t1944 * t4061 + t1945 * t4064 + t1946 * t4063 + t1947 * t4040 + t1948 * t4038 + t1949 * t4036 + t1950 * t4059 + t1951 * t4058 + t1952 * t4057) * t2954, t2256 * t3929 + t2257 * t3927 + t2258 * t3925 + t2259 * t3923 + t2260 * t3921 + t2261 * t3919, t1884 * t3929 + t1886 * t3927 + t1888 * t3925 + t1890 * t3923 + t1892 * t3921 + t1894 * t3919 + (t2026 * t3499 + t2028 * t3495 + t2030 * t3491 + t2032 * t3485 + t2034 * t3479 + t2036 * t3473 + (t1966 * t3497 + t1967 * t3493 + t1969 * t3501 + t1971 * t4196 + t1972 * t4194 + t1973 * t4192) * t2959) * t2954, t1885 * t3929 + t1887 * t3927 + t1889 * t3925 + t1891 * t3923 + t1893 * t3921 + t1895 * t3919 + (-t2026 * t3500 - t2028 * t3496 - t2030 * t3492 - t2032 * t3486 - t2034 * t3480 - t2036 * t3474 + (-t1966 * t3498 - t1967 * t3494 - t1969 * t3502 - t1971 * t4195 - t1972 * t4193 - t1973 * t4191) * t2959) * t2954, t3759, t2705 - t3762, -t3233, -t3760, -t3232, 0, 0, 0, 0, 0; (t2026 * t4035 + t2028 * t4034 + t2030 * t4033 + t2032 * t4032 + t2034 * t4031 + t2036 * t4030) * t2954, (t1923 * t4046 + t1924 * t4044 + t1925 * t4042 + t1926 * t4061 + t1927 * t4064 + t1928 * t4063 + t1929 * t4040 + t1930 * t4038 + t1931 * t4036 + t1932 * t4059 + t1933 * t4058 + t1934 * t4057) * t2954, t2184 * t3929 + t2185 * t3927 + t2186 * t3925 + t2187 * t3923 + t2188 * t3921 + t2189 * t3919, t1872 * t3929 + t1874 * t3927 + t1876 * t3925 + t1878 * t3923 + t1880 * t3921 + t1882 * t3919 + (t2026 * t3529 + t2028 * t3525 + t2030 * t3521 + t2032 * t3515 + t2034 * t3509 + t2036 * t3503 + (t1966 * t3527 + t1967 * t3523 + t1969 * t3531 + t1971 * t4202 + t1972 * t4200 + t1973 * t4198) * t2959) * t2954, t1873 * t3929 + t1875 * t3927 + t1877 * t3925 + t1879 * t3923 + t1881 * t3921 + t1883 * t3919 + (-t2026 * t3530 - t2028 * t3526 - t2030 * t3522 - t2032 * t3516 - t2034 * t3510 - t2036 * t3504 + (-t1966 * t3528 - t1967 * t3524 - t1969 * t3532 - t1971 * t4201 - t1972 * t4199 - t1973 * t4197) * t2959) * t2954, 0, 0, t2751, 0, -t2749, -t3621, 0, 0, 0, 0; (t2025 * t3899 + t2027 * t3897 + t2029 * t3895 + t2031 * t3893 + t2033 * t3891 + t2035 * t3889) * t2955, (t1965 * t3973 + t1968 * t3974 + t1970 * t3975 + t1974 * t4145 + t1975 * t4144 + t1976 * t4143 + t2025 * t3972 + t2027 * t3971 + t2029 * t3970 + t2031 * t3963 + t2033 * t3962 + t2035 * t3961) * t2954, -t2313 * t3321 - t2315 * t3316 - t2317 * t3311 - t2319 * t3306 - t2321 * t3301 - t2323 * t3296, t2049 * t3930 + t2051 * t3928 + t2053 * t3926 + t2055 * t3924 + t2057 * t3922 + t2059 * t3920 + (-t2025 * t3111 - t2027 * t3109 - t2029 * t3107 - t2031 * t3103 - t2033 * t3099 - t2035 * t3095 + (-t1965 * t3047 - t1968 * t3049 - t1970 * t3051 - t1974 * t4112 - t1975 * t4118 - t1976 * t4124) * t2959) * t2954, t2050 * t3930 + t2052 * t3928 + t2054 * t3926 + t2056 * t3924 + t2058 * t3922 + t2060 * t3920 + (t2025 * t3112 + t2027 * t3110 + t2029 * t3108 + t2031 * t3104 + t2033 * t3100 + t2035 * t3096 + (t1965 * t3048 + t1968 * t3050 + t1970 * t3052 + t1974 * t4111 + t1975 * t4117 + t1976 * t4123) * t2959) * t2954, 0, 0, 0, 0, 0, 0, -t2654, -t3179, t2519, 0; (t2025 * t3951 + t2027 * t3947 + t2029 * t3943 + t2031 * t3939 + t2033 * t3935 + t2035 * t3931) * t2955, (t1965 * t4018 + t1968 * t4020 + t1970 * t4022 + t1974 * t4010 + t1975 * t4008 + t1976 * t4006 + t2025 * t4016 + t2027 * t4014 + t2029 * t4012 + t2031 * t4004 + t2033 * t4002 + t2035 * t4000) * t2954, t2313 * t3869 + t2315 * t3867 + t2317 * t3865 + t2319 * t3863 + t2321 * t3861 + t2323 * t3859, t1991 * t3930 + t1995 * t3928 + t1999 * t3926 + t2003 * t3924 + t2007 * t3922 + t2011 * t3920 + (t2025 * t3360 + t2027 * t3358 + t2029 * t3356 + t2031 * t3354 + t2033 * t3352 + t2035 * t3350 + (t1965 * t3131 + t1968 * t3133 + t1970 * t3135 + t1974 * t4177 + t1975 * t4175 + t1976 * t4173) * t2959) * t2954, t1992 * t3930 + t1996 * t3928 + t2000 * t3926 + t2004 * t3924 + t2008 * t3922 + t2012 * t3920 + (-t2025 * t3361 - t2027 * t3359 - t2029 * t3357 - t2031 * t3355 - t2033 * t3353 - t2035 * t3351 + (-t1965 * t3132 - t1968 * t3134 - t1970 * t3136 - t1974 * t4178 - t1975 * t4176 - t1976 * t4174) * t2959) * t2954, 0, 0, 0, 0, 0, 0, t2517, -t4127, -t3025, 0; (t2025 * t3953 + t2027 * t3949 + t2029 * t3945 + t2031 * t3941 + t2033 * t3937 + t2035 * t3933) * t2955, (t1965 * t4019 + t1968 * t4021 + t1970 * t4023 + t1974 * t4011 + t1975 * t4009 + t1976 * t4007 + t2025 * t4017 + t2027 * t4015 + t2029 * t4013 + t2031 * t4005 + t2033 * t4003 + t2035 * t4001) * t2954, t2313 * t3881 + t2315 * t3879 + t2317 * t3877 + t2319 * t3875 + t2321 * t3873 + t2323 * t3871, t1989 * t3930 + t1993 * t3928 + t1997 * t3926 + t2001 * t3924 + t2005 * t3922 + t2009 * t3920 + (t2025 * t3372 + t2027 * t3370 + t2029 * t3368 + t2031 * t3366 + t2033 * t3364 + t2035 * t3362 + (t1965 * t3149 + t1968 * t3151 + t1970 * t3153 + t1974 * t4183 + t1975 * t4181 + t1976 * t4179) * t2959) * t2954, t1990 * t3930 + t1994 * t3928 + t1998 * t3926 + t2002 * t3924 + t2006 * t3922 + t2010 * t3920 + (-t2025 * t3373 - t2027 * t3371 - t2029 * t3369 - t2031 * t3367 - t2033 * t3365 - t2035 * t3363 + (-t1965 * t3150 - t1968 * t3152 - t1970 * t3154 - t1974 * t4184 - t1975 * t4182 - t1976 * t4180) * t2959) * t2954, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; (t2025 * t3999 + t2027 * t3998 + t2029 * t3997 + t2031 * t3996 + t2033 * t3995 + t2035 * t3994) * t2954, (t1965 * t4051 + t1968 * t4052 + t1970 * t4053 + t1974 * t4050 + t1975 * t4049 + t1976 * t4048 + t1977 * t4047 + t1978 * t4045 + t1979 * t4043 + t1983 * t4041 + t1984 * t4039 + t1985 * t4037) * t2954, t2313 * t3916 + t2315 * t3918 + t2317 * t3917 + t2319 * t3915 + t2321 * t3914 + t2323 * t3913, t1909 * t3930 + t1911 * t3928 + t1913 * t3926 + t1915 * t3924 + t1917 * t3922 + t1919 * t3920 + (t2025 * t3425 + t2027 * t3433 + t2029 * t3429 + t2031 * t3419 + t2033 * t3413 + t2035 * t3407 + (t1965 * t3431 + t1968 * t3435 + t1970 * t3427 + t1974 * t4190 + t1975 * t4188 + t1976 * t4186) * t2959) * t2954, t1910 * t3930 + t1912 * t3928 + t1914 * t3926 + t1916 * t3924 + t1918 * t3922 + t1920 * t3920 + (-t2025 * t3426 - t2027 * t3434 - t2029 * t3430 - t2031 * t3420 - t2033 * t3414 - t2035 * t3408 + (-t1965 * t3432 - t1968 * t3436 - t1970 * t3428 - t1974 * t4189 - t1975 * t4187 - t1976 * t4185) * t2959) * t2954, -t2692, (t3754 + t3755) * t2952, t2864 - t3753, -t3225, -t3278 + t3756, t2862, 0, 0, 0, 0; (t2025 * t4029 + t2027 * t4028 + t2029 * t4027 + t2031 * t4026 + t2033 * t4025 + t2035 * t4024) * t2954, (t1941 * t4047 + t1942 * t4045 + t1943 * t4043 + t1944 * t4060 + t1945 * t4062 + t1946 * t4065 + t1947 * t4041 + t1948 * t4039 + t1949 * t4037 + t1950 * t4056 + t1951 * t4055 + t1952 * t4054) * t2954, t2256 * t3930 + t2257 * t3928 + t2258 * t3926 + t2259 * t3924 + t2260 * t3922 + t2261 * t3920, t1884 * t3930 + t1886 * t3928 + t1888 * t3926 + t1890 * t3924 + t1892 * t3922 + t1894 * t3920 + (t2025 * t3499 + t2027 * t3495 + t2029 * t3491 + t2031 * t3485 + t2033 * t3479 + t2035 * t3473 + (t1965 * t3493 + t1968 * t3497 + t1970 * t3501 + t1974 * t4196 + t1975 * t4194 + t1976 * t4192) * t2959) * t2954, t1885 * t3930 + t1887 * t3928 + t1889 * t3926 + t1891 * t3924 + t1893 * t3922 + t1895 * t3920 + (-t2025 * t3500 - t2027 * t3496 - t2029 * t3492 - t2031 * t3486 - t2033 * t3480 - t2035 * t3474 + (-t1965 * t3494 - t1968 * t3498 - t1970 * t3502 - t1974 * t4195 - t1975 * t4193 - t1976 * t4191) * t2959) * t2954, -t3754, -t2706 + t3757, t2865, t3755, t3217, 0, 0, 0, 0, 0; (t2025 * t4035 + t2027 * t4034 + t2029 * t4033 + t2031 * t4032 + t2033 * t4031 + t2035 * t4030) * t2954, (t1923 * t4047 + t1924 * t4045 + t1925 * t4043 + t1926 * t4060 + t1927 * t4062 + t1928 * t4065 + t1929 * t4041 + t1930 * t4039 + t1931 * t4037 + t1932 * t4056 + t1933 * t4055 + t1934 * t4054) * t2954, t2184 * t3930 + t2185 * t3928 + t2186 * t3926 + t2187 * t3924 + t2188 * t3922 + t2189 * t3920, t1872 * t3930 + t1874 * t3928 + t1876 * t3926 + t1878 * t3924 + t1880 * t3922 + t1882 * t3920 + (t2025 * t3529 + t2027 * t3525 + t2029 * t3521 + t2031 * t3515 + t2033 * t3509 + t2035 * t3503 + (t1965 * t3523 + t1968 * t3527 + t1970 * t3531 + t1974 * t4202 + t1975 * t4200 + t1976 * t4198) * t2959) * t2954, t1873 * t3930 + t1875 * t3928 + t1877 * t3926 + t1879 * t3924 + t1881 * t3922 + t1883 * t3920 + (-t2025 * t3530 - t2027 * t3526 - t2029 * t3522 - t2031 * t3516 - t2033 * t3510 - t2035 * t3504 + (-t1965 * t3524 - t1968 * t3528 - t1970 * t3532 - t1974 * t4201 - t1975 * t4199 - t1976 * t4197) * t2959) * t2954, 0, 0, -t2753, 0, t2752, t3604, 0, 0, 0, 0;];
tau_reg  = t1;
