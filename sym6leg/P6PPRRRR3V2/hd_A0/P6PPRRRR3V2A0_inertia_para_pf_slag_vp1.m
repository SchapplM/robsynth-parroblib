% Calculate inertia matrix for parallel robot
% P6PPRRRR3V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d3,d4,theta1,theta2]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 22:25
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6PPRRRR3V2A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPRRRR3V2A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 21:43:10
% EndTime: 2019-05-16 21:43:46
% DurationCPUTime: 39.50s
% Computational Cost: add. (149276->1298), mult. (394514->2165), div. (9990->13), fcn. (483860->63), ass. (0->729)
t2010 = xP(4);
t1962 = cos(t2010);
t2008 = xP(6);
t1957 = sin(t2008);
t1960 = cos(t2008);
t2012 = rSges(4,2);
t2013 = rSges(4,1);
t1870 = t1957 * t2013 + t1960 * t2012;
t1959 = sin(t2010);
t2172 = t1870 * t1959;
t1869 = t1957 * t2012 - t1960 * t2013;
t2009 = xP(5);
t1958 = sin(t2009);
t1961 = cos(t2009);
t2011 = rSges(4,3);
t2316 = t1869 * t1958 + t1961 * t2011;
t1740 = (t1962 * t2316 + t2172) * m(4);
t1914 = m(4) * t2011 * t2012 - Icges(4,6);
t2276 = m(4) * t2013;
t1915 = t2011 * t2276 - Icges(4,5);
t2047 = t1957 * t1914 - t1915 * t1960;
t2317 = t1958 * t2047;
t1965 = sin(pkin(10));
t1966 = sin(pkin(9));
t1971 = cos(pkin(9));
t1972 = cos(pkin(5));
t1970 = cos(pkin(10));
t1973 = cos(pkin(4));
t2115 = t1970 * t1973;
t1968 = sin(pkin(5));
t1969 = sin(pkin(4));
t2118 = t1968 * t1969;
t1827 = (t1965 * t1971 + t1966 * t2115) * t1972 - t1966 * t2118;
t2114 = t1971 * t1973;
t1828 = (t1965 * t1966 - t1970 * t2114) * t1972 + t1971 * t2118;
t1977 = legFrame(6,3);
t1921 = sin(t1977);
t1933 = cos(t1977);
t2314 = t1827 * t1921 + t1828 * t1933;
t1978 = legFrame(5,3);
t1922 = sin(t1978);
t1934 = cos(t1978);
t2313 = t1827 * t1922 + t1828 * t1934;
t1979 = legFrame(4,3);
t1923 = sin(t1979);
t1935 = cos(t1979);
t2312 = t1827 * t1923 + t1828 * t1935;
t1980 = legFrame(3,3);
t1924 = sin(t1980);
t1936 = cos(t1980);
t2311 = t1827 * t1924 + t1828 * t1936;
t1981 = legFrame(2,3);
t1925 = sin(t1981);
t1937 = cos(t1981);
t2310 = t1827 * t1925 + t1828 * t1937;
t1982 = legFrame(1,3);
t1926 = sin(t1982);
t1938 = cos(t1982);
t2309 = t1827 * t1926 + t1828 * t1938;
t2014 = koppelP(6,3);
t2020 = koppelP(6,1);
t2286 = koppelP(6,2);
t2297 = t1957 * t2286 - t1960 * t2020;
t1839 = t1958 * t2297 + t1961 * t2014;
t1877 = t1957 * t2020 + t1960 * t2286;
t1749 = t1839 * t1959 - t1877 * t1962;
t1750 = t1839 * t1962 + t1877 * t1959;
t2015 = koppelP(5,3);
t2021 = koppelP(5,1);
t2287 = koppelP(5,2);
t2296 = t1957 * t2287 - t1960 * t2021;
t1841 = t1958 * t2296 + t1961 * t2015;
t1878 = t1957 * t2021 + t1960 * t2287;
t1753 = t1841 * t1959 - t1878 * t1962;
t1754 = t1841 * t1962 + t1878 * t1959;
t2016 = koppelP(4,3);
t2022 = koppelP(4,1);
t2288 = koppelP(4,2);
t2295 = t1957 * t2288 - t1960 * t2022;
t1843 = t1958 * t2295 + t1961 * t2016;
t1879 = t1957 * t2022 + t1960 * t2288;
t1757 = t1843 * t1959 - t1879 * t1962;
t1758 = t1843 * t1962 + t1879 * t1959;
t2017 = koppelP(3,3);
t2023 = koppelP(3,1);
t2289 = koppelP(3,2);
t2294 = t1957 * t2289 - t1960 * t2023;
t1845 = t1958 * t2294 + t1961 * t2017;
t1880 = t1957 * t2023 + t1960 * t2289;
t1761 = t1845 * t1959 - t1880 * t1962;
t1762 = t1845 * t1962 + t1880 * t1959;
t2018 = koppelP(2,3);
t2024 = koppelP(2,1);
t2290 = koppelP(2,2);
t2293 = t1957 * t2290 - t1960 * t2024;
t1847 = t1958 * t2293 + t1961 * t2018;
t1881 = t1957 * t2024 + t1960 * t2290;
t1765 = t1847 * t1959 - t1881 * t1962;
t1766 = t1847 * t1962 + t1881 * t1959;
t2019 = koppelP(1,3);
t2025 = koppelP(1,1);
t2291 = koppelP(1,2);
t2292 = t1957 * t2291 - t1960 * t2025;
t1849 = t1958 * t2292 + t1961 * t2019;
t1882 = t1957 * t2025 + t1960 * t2291;
t1769 = t1849 * t1959 - t1882 * t1962;
t1770 = t1849 * t1962 + t1882 * t1959;
t1916 = t2012 * t2276 - Icges(4,4);
t2308 = -0.2e1 * t1916;
t1920 = t1961 ^ 2;
t2307 = -0.2e1 * t1920;
t2306 = m(4) * t1869;
t2277 = (t1869 * t1961 - t1958 * t2011) * m(4);
t1855 = t1972 * t2115 - t2118;
t2120 = t1965 * t1972;
t1826 = t1855 * t1966 + t1971 * t2120;
t1829 = t1855 * t1971 - t1966 * t2120;
t1728 = t1826 * t1933 + t1829 * t1921;
t1734 = -t1826 * t1921 + t1829 * t1933;
t1983 = legFrame(6,1);
t1927 = sin(t1983);
t1939 = cos(t1983);
t1995 = legFrame(6,2);
t1945 = sin(t1995);
t2138 = t1939 * t1945;
t1704 = -t1728 * t1927 + t1734 * t2138;
t2119 = t1965 * t1973;
t1853 = t1966 * t2119 - t1970 * t1971;
t1856 = t1965 * t2114 + t1966 * t1970;
t1786 = t1853 * t1933 + t1856 * t1921;
t1792 = -t1853 * t1921 + t1856 * t1933;
t1716 = -t1786 * t1927 + t1792 * t2138;
t1989 = sin(qJ(3,6));
t1992 = cos(qJ(3,6));
t2278 = pkin(8) * sin(pkin(6));
t1644 = (t1704 * t1989 + t1716 * t1992) * t2278 - (-t1704 * t1992 + t1716 * t1989) * pkin(3);
t2144 = t1927 * t1945;
t1722 = t1786 * t1939 + t1792 * t2144;
t2298 = t1728 * t1939 + t1734 * t2144;
t1647 = -(t1722 * t1992 + t1989 * t2298) * t2278 + pkin(3) * (t1989 * t1722 - t1992 * t2298);
t1799 = 0.1e1 / ((-t1970 * t1992 + t1989 * t2120) * t2278 + pkin(3) * (t1970 * t1989 + t1992 * t2120));
t1963 = 0.1e1 / t1969;
t2215 = t1799 * t1963;
t1548 = (-t1644 * t1749 - t1647 * t1750) * t2215;
t1857 = t1921 * t1971 + t1933 * t1966;
t1951 = cos(t1995);
t1806 = t1857 * t1945 * t1973 + t1969 * t1951;
t1888 = pkin(3) * t1989 - t1992 * t2278;
t1885 = pkin(3) * t1992 + t1989 * t2278;
t2158 = t1885 * t1972;
t1863 = -t1921 * t1966 + t1933 * t1971;
t2189 = t1863 * t1970;
t2190 = t1863 * t1965;
t1698 = (t1806 * t1965 - t1945 * t2189) * t2158 + t1888 * (t1806 * t1970 + t1945 * t2190);
t1710 = (t1857 * t1970 + t1863 * t2119) * t2158 + (-t1857 * t1965 + t1863 * t2115) * t1888;
t1656 = t1698 * t1939 + t1710 * t1927;
t1657 = -t1698 * t1927 + t1710 * t1939;
t1815 = t1885 * t2120 + t1888 * t1970;
t1812 = 0.1e1 / t1815;
t2208 = t1812 * t1963;
t1608 = (-t1656 * t1749 - t1657 * t1750) * t2208;
t1773 = -t1857 * t1927 + t1863 * t2138;
t1779 = -t1857 * t1939 - t1863 * t2144;
t1668 = (-t1749 * t1773 - t1750 * t1779) * t1812;
t2116 = t1970 * t1972;
t1883 = rSges(3,1) * t1965 + rSges(3,2) * t2116;
t1884 = rSges(3,1) * t2116 - rSges(3,2) * t1965;
t1904 = rSges(3,1) * t1992 - rSges(3,2) * t1989;
t2117 = t1968 * t1973;
t1741 = (-t1883 * t1989 + t1884 * t1992) * t1969 + t1904 * t2117;
t1917 = (rSges(3,1) ^ 2 + rSges(3,2) ^ 2) * m(3) + Icges(3,3);
t2152 = t1904 * t1968;
t1434 = t1668 * t1917 + (t1548 * t2152 + t1608 * t1741) * m(3);
t1729 = t1826 * t1934 + t1829 * t1922;
t1735 = -t1826 * t1922 + t1829 * t1934;
t1984 = legFrame(5,1);
t1928 = sin(t1984);
t1940 = cos(t1984);
t1996 = legFrame(5,2);
t1946 = sin(t1996);
t2137 = t1940 * t1946;
t1705 = -t1729 * t1928 + t1735 * t2137;
t1787 = t1853 * t1934 + t1856 * t1922;
t1793 = -t1853 * t1922 + t1856 * t1934;
t1717 = -t1787 * t1928 + t1793 * t2137;
t1990 = sin(qJ(3,5));
t1993 = cos(qJ(3,5));
t1645 = (t1705 * t1990 + t1717 * t1993) * t2278 - (-t1705 * t1993 + t1717 * t1990) * pkin(3);
t2143 = t1928 * t1946;
t1723 = t1787 * t1940 + t1793 * t2143;
t2299 = t1729 * t1940 + t1735 * t2143;
t1648 = -(t1723 * t1993 + t1990 * t2299) * t2278 + pkin(3) * (t1990 * t1723 - t1993 * t2299);
t1800 = 0.1e1 / ((-t1970 * t1993 + t1990 * t2120) * t2278 + pkin(3) * (t1970 * t1990 + t1993 * t2120));
t2214 = t1800 * t1963;
t1549 = (-t1645 * t1753 - t1648 * t1754) * t2214;
t1858 = t1922 * t1971 + t1934 * t1966;
t1952 = cos(t1996);
t1807 = t1858 * t1946 * t1973 + t1969 * t1952;
t1889 = pkin(3) * t1990 - t1993 * t2278;
t1886 = pkin(3) * t1993 + t1990 * t2278;
t2157 = t1886 * t1972;
t1864 = -t1922 * t1966 + t1934 * t1971;
t2186 = t1864 * t1970;
t2187 = t1864 * t1965;
t1699 = (t1807 * t1965 - t1946 * t2186) * t2157 + t1889 * (t1807 * t1970 + t1946 * t2187);
t1711 = (t1858 * t1970 + t1864 * t2119) * t2157 + (-t1858 * t1965 + t1864 * t2115) * t1889;
t1658 = t1699 * t1940 + t1711 * t1928;
t1659 = -t1699 * t1928 + t1711 * t1940;
t1816 = t1886 * t2120 + t1889 * t1970;
t1813 = 0.1e1 / t1816;
t2206 = t1813 * t1963;
t1609 = (-t1658 * t1753 - t1659 * t1754) * t2206;
t1774 = -t1858 * t1928 + t1864 * t2137;
t1780 = -t1858 * t1940 - t1864 * t2143;
t1669 = (-t1753 * t1774 - t1754 * t1780) * t1813;
t1905 = rSges(3,1) * t1993 - rSges(3,2) * t1990;
t1742 = (-t1883 * t1990 + t1884 * t1993) * t1969 + t1905 * t2117;
t2151 = t1905 * t1968;
t1435 = t1669 * t1917 + (t1549 * t2151 + t1609 * t1742) * m(3);
t1730 = t1826 * t1935 + t1829 * t1923;
t1736 = -t1826 * t1923 + t1829 * t1935;
t1985 = legFrame(4,1);
t1929 = sin(t1985);
t1941 = cos(t1985);
t1997 = legFrame(4,2);
t1947 = sin(t1997);
t2136 = t1941 * t1947;
t1706 = -t1730 * t1929 + t1736 * t2136;
t1788 = t1853 * t1935 + t1856 * t1923;
t1794 = -t1853 * t1923 + t1856 * t1935;
t1718 = -t1788 * t1929 + t1794 * t2136;
t1991 = sin(qJ(3,4));
t1994 = cos(qJ(3,4));
t1646 = (t1706 * t1991 + t1718 * t1994) * t2278 - (-t1706 * t1994 + t1718 * t1991) * pkin(3);
t2142 = t1929 * t1947;
t1724 = t1788 * t1941 + t1794 * t2142;
t2300 = t1730 * t1941 + t1736 * t2142;
t1649 = -(t1724 * t1994 + t1991 * t2300) * t2278 + pkin(3) * (t1991 * t1724 - t1994 * t2300);
t1801 = 0.1e1 / ((-t1970 * t1994 + t1991 * t2120) * t2278 + pkin(3) * (t1970 * t1991 + t1994 * t2120));
t2213 = t1801 * t1963;
t1550 = (-t1646 * t1757 - t1649 * t1758) * t2213;
t1859 = t1923 * t1971 + t1935 * t1966;
t1953 = cos(t1997);
t1808 = t1859 * t1947 * t1973 + t1969 * t1953;
t1890 = pkin(3) * t1991 - t1994 * t2278;
t1887 = pkin(3) * t1994 + t1991 * t2278;
t2156 = t1887 * t1972;
t1865 = -t1923 * t1966 + t1935 * t1971;
t2183 = t1865 * t1970;
t2184 = t1865 * t1965;
t1700 = (t1808 * t1965 - t1947 * t2183) * t2156 + t1890 * (t1808 * t1970 + t1947 * t2184);
t1712 = (t1859 * t1970 + t1865 * t2119) * t2156 + (-t1859 * t1965 + t1865 * t2115) * t1890;
t1660 = t1700 * t1941 + t1712 * t1929;
t1661 = -t1700 * t1929 + t1712 * t1941;
t1817 = t1887 * t2120 + t1890 * t1970;
t1814 = 0.1e1 / t1817;
t2204 = t1814 * t1963;
t1610 = (-t1660 * t1757 - t1661 * t1758) * t2204;
t1775 = -t1859 * t1929 + t1865 * t2136;
t1781 = -t1859 * t1941 - t1865 * t2142;
t1670 = (-t1757 * t1775 - t1758 * t1781) * t1814;
t1906 = rSges(3,1) * t1994 - rSges(3,2) * t1991;
t1743 = (-t1883 * t1991 + t1884 * t1994) * t1969 + t1906 * t2117;
t2150 = t1906 * t1968;
t1436 = t1670 * t1917 + (t1550 * t2150 + t1610 * t1743) * m(3);
t1731 = t1826 * t1936 + t1829 * t1924;
t1737 = -t1826 * t1924 + t1829 * t1936;
t1986 = legFrame(3,1);
t1930 = sin(t1986);
t1942 = cos(t1986);
t1998 = legFrame(3,2);
t1948 = sin(t1998);
t2135 = t1942 * t1948;
t1707 = -t1731 * t1930 + t1737 * t2135;
t1789 = t1853 * t1936 + t1856 * t1924;
t1795 = -t1853 * t1924 + t1856 * t1936;
t1719 = -t1789 * t1930 + t1795 * t2135;
t2001 = sin(qJ(3,3));
t2004 = cos(qJ(3,3));
t1650 = (t1707 * t2001 + t1719 * t2004) * t2278 - (-t1707 * t2004 + t1719 * t2001) * pkin(3);
t2141 = t1930 * t1948;
t1725 = t1789 * t1942 + t1795 * t2141;
t2301 = t1731 * t1942 + t1737 * t2141;
t1653 = -(t1725 * t2004 + t2001 * t2301) * t2278 + pkin(3) * (t2001 * t1725 - t2004 * t2301);
t1802 = 0.1e1 / ((-t1970 * t2004 + t2001 * t2120) * t2278 + pkin(3) * (t1970 * t2001 + t2004 * t2120));
t2212 = t1802 * t1963;
t1551 = (-t1650 * t1761 - t1653 * t1762) * t2212;
t1860 = t1924 * t1971 + t1936 * t1966;
t1954 = cos(t1998);
t1809 = t1860 * t1948 * t1973 + t1969 * t1954;
t1894 = pkin(3) * t2001 - t2004 * t2278;
t1891 = pkin(3) * t2004 + t2001 * t2278;
t2155 = t1891 * t1972;
t1866 = -t1924 * t1966 + t1936 * t1971;
t2180 = t1866 * t1970;
t2181 = t1866 * t1965;
t1701 = (t1809 * t1965 - t1948 * t2180) * t2155 + t1894 * (t1809 * t1970 + t1948 * t2181);
t1713 = (t1860 * t1970 + t1866 * t2119) * t2155 + (-t1860 * t1965 + t1866 * t2115) * t1894;
t1662 = t1701 * t1942 + t1713 * t1930;
t1663 = -t1701 * t1930 + t1713 * t1942;
t1821 = t1891 * t2120 + t1894 * t1970;
t1818 = 0.1e1 / t1821;
t2202 = t1818 * t1963;
t1611 = (-t1662 * t1761 - t1663 * t1762) * t2202;
t1776 = -t1860 * t1930 + t1866 * t2135;
t1782 = -t1860 * t1942 - t1866 * t2141;
t1671 = (-t1761 * t1776 - t1762 * t1782) * t1818;
t1909 = rSges(3,1) * t2004 - rSges(3,2) * t2001;
t1745 = (-t1883 * t2001 + t1884 * t2004) * t1969 + t1909 * t2117;
t2149 = t1909 * t1968;
t1437 = t1671 * t1917 + (t1551 * t2149 + t1611 * t1745) * m(3);
t1732 = t1826 * t1937 + t1829 * t1925;
t1738 = -t1826 * t1925 + t1829 * t1937;
t1987 = legFrame(2,1);
t1931 = sin(t1987);
t1943 = cos(t1987);
t1999 = legFrame(2,2);
t1949 = sin(t1999);
t2134 = t1943 * t1949;
t1708 = -t1732 * t1931 + t1738 * t2134;
t1790 = t1853 * t1937 + t1856 * t1925;
t1796 = -t1853 * t1925 + t1856 * t1937;
t1720 = -t1790 * t1931 + t1796 * t2134;
t2002 = sin(qJ(3,2));
t2005 = cos(qJ(3,2));
t1651 = (t1708 * t2002 + t1720 * t2005) * t2278 - (-t1708 * t2005 + t1720 * t2002) * pkin(3);
t2140 = t1931 * t1949;
t1726 = t1790 * t1943 + t1796 * t2140;
t2302 = t1732 * t1943 + t1738 * t2140;
t1654 = -(t1726 * t2005 + t2002 * t2302) * t2278 + pkin(3) * (t2002 * t1726 - t2005 * t2302);
t1803 = 0.1e1 / ((-t1970 * t2005 + t2002 * t2120) * t2278 + pkin(3) * (t1970 * t2002 + t2005 * t2120));
t2211 = t1803 * t1963;
t1552 = (-t1651 * t1765 - t1654 * t1766) * t2211;
t1861 = t1925 * t1971 + t1937 * t1966;
t1955 = cos(t1999);
t1810 = t1861 * t1949 * t1973 + t1969 * t1955;
t1895 = pkin(3) * t2002 - t2005 * t2278;
t1892 = pkin(3) * t2005 + t2002 * t2278;
t2154 = t1892 * t1972;
t1867 = -t1925 * t1966 + t1937 * t1971;
t2177 = t1867 * t1970;
t2178 = t1867 * t1965;
t1702 = (t1810 * t1965 - t1949 * t2177) * t2154 + t1895 * (t1810 * t1970 + t1949 * t2178);
t1714 = (t1861 * t1970 + t1867 * t2119) * t2154 + (-t1861 * t1965 + t1867 * t2115) * t1895;
t1664 = t1702 * t1943 + t1714 * t1931;
t1665 = -t1702 * t1931 + t1714 * t1943;
t1822 = t1892 * t2120 + t1895 * t1970;
t1819 = 0.1e1 / t1822;
t2200 = t1819 * t1963;
t1612 = (-t1664 * t1765 - t1665 * t1766) * t2200;
t1777 = -t1861 * t1931 + t1867 * t2134;
t1783 = -t1861 * t1943 - t1867 * t2140;
t1672 = (-t1765 * t1777 - t1766 * t1783) * t1819;
t1910 = rSges(3,1) * t2005 - rSges(3,2) * t2002;
t1746 = (-t1883 * t2002 + t1884 * t2005) * t1969 + t1910 * t2117;
t2148 = t1910 * t1968;
t1438 = t1672 * t1917 + (t1552 * t2148 + t1612 * t1746) * m(3);
t1733 = t1826 * t1938 + t1829 * t1926;
t1739 = -t1826 * t1926 + t1829 * t1938;
t1988 = legFrame(1,1);
t1932 = sin(t1988);
t1944 = cos(t1988);
t2000 = legFrame(1,2);
t1950 = sin(t2000);
t2133 = t1944 * t1950;
t1709 = -t1733 * t1932 + t1739 * t2133;
t1791 = t1853 * t1938 + t1856 * t1926;
t1797 = -t1853 * t1926 + t1856 * t1938;
t1721 = -t1791 * t1932 + t1797 * t2133;
t2003 = sin(qJ(3,1));
t2006 = cos(qJ(3,1));
t1652 = (t1709 * t2003 + t1721 * t2006) * t2278 - (-t1709 * t2006 + t1721 * t2003) * pkin(3);
t2139 = t1932 * t1950;
t1727 = t1791 * t1944 + t1797 * t2139;
t2303 = t1733 * t1944 + t1739 * t2139;
t1655 = -(t1727 * t2006 + t2003 * t2303) * t2278 + pkin(3) * (t2003 * t1727 - t2006 * t2303);
t1804 = 0.1e1 / ((-t1970 * t2006 + t2003 * t2120) * t2278 + pkin(3) * (t1970 * t2003 + t2006 * t2120));
t2210 = t1804 * t1963;
t1553 = (-t1652 * t1769 - t1655 * t1770) * t2210;
t1862 = t1926 * t1971 + t1938 * t1966;
t1956 = cos(t2000);
t1811 = t1862 * t1950 * t1973 + t1969 * t1956;
t1896 = pkin(3) * t2003 - t2006 * t2278;
t1893 = pkin(3) * t2006 + t2003 * t2278;
t2153 = t1893 * t1972;
t1868 = -t1926 * t1966 + t1938 * t1971;
t2174 = t1868 * t1970;
t2175 = t1868 * t1965;
t1703 = (t1811 * t1965 - t1950 * t2174) * t2153 + t1896 * (t1811 * t1970 + t1950 * t2175);
t1715 = (t1862 * t1970 + t1868 * t2119) * t2153 + (-t1862 * t1965 + t1868 * t2115) * t1896;
t1666 = t1703 * t1944 + t1715 * t1932;
t1667 = -t1703 * t1932 + t1715 * t1944;
t1823 = t1893 * t2120 + t1896 * t1970;
t1820 = 0.1e1 / t1823;
t2198 = t1820 * t1963;
t1613 = (-t1666 * t1769 - t1667 * t1770) * t2198;
t1778 = -t1862 * t1932 + t1868 * t2133;
t1784 = -t1862 * t1944 - t1868 * t2139;
t1673 = (-t1769 * t1778 - t1770 * t1784) * t1820;
t1911 = rSges(3,1) * t2006 - rSges(3,2) * t2003;
t1747 = (-t1883 * t2003 + t1884 * t2006) * t1969 + t1911 * t2117;
t2147 = t1911 * t1968;
t1439 = t1673 * t1917 + (t1553 * t2147 + t1613 * t1747) * m(3);
t2007 = m(2) + m(3);
t1964 = m(1) + t2007;
t2113 = t1973 * t2007;
t2285 = m(3) * t1741;
t1440 = t1548 * t2113 + t1608 * t1964 + t1668 * t2285;
t2284 = m(3) * t1742;
t1441 = t1549 * t2113 + t1609 * t1964 + t1669 * t2284;
t2283 = m(3) * t1743;
t1442 = t1550 * t2113 + t1610 * t1964 + t1670 * t2283;
t2282 = m(3) * t1745;
t1443 = t1551 * t2113 + t1611 * t1964 + t1671 * t2282;
t2281 = m(3) * t1746;
t1444 = t1552 * t2113 + t1612 * t1964 + t1672 * t2281;
t2280 = m(3) * t1747;
t1445 = t1553 * t2113 + t1613 * t1964 + t1673 * t2280;
t2105 = m(3) * t2152;
t1446 = t1668 * t2105 + (t1608 * t1973 + t1548) * t2007;
t2104 = m(3) * t2151;
t1447 = t1669 * t2104 + (t1609 * t1973 + t1549) * t2007;
t2103 = m(3) * t2150;
t1448 = t1670 * t2103 + (t1610 * t1973 + t1550) * t2007;
t2102 = m(3) * t2149;
t1449 = t1671 * t2102 + (t1611 * t1973 + t1551) * t2007;
t2101 = m(3) * t2148;
t1450 = t1672 * t2101 + (t1612 * t1973 + t1552) * t2007;
t2100 = m(3) * t2147;
t1451 = t1673 * t2100 + (t1613 * t1973 + t1553) * t2007;
t1975 = t2012 ^ 2;
t1976 = t2013 ^ 2;
t1908 = m(4) * (t1975 + t1976) + Icges(4,3);
t2304 = t1434 * t1668 + t1440 * t1608 + t1441 * t1609 + t1442 * t1610 + t1443 * t1611 + t1444 * t1612 + t1445 * t1613 + t1446 * t1548 + t1447 * t1549 + t1448 * t1550 + t1449 * t1551 + t1450 * t1552 + t1451 * t1553 + t1435 * t1669 + t1436 * t1670 + t1437 * t1671 + t1438 * t1672 + t1439 * t1673 + t1908;
t2279 = m(3) * t1963;
t2275 = t1644 * t1799;
t2274 = t1645 * t1800;
t2273 = t1646 * t1801;
t2272 = t1647 * t1799;
t2271 = t1648 * t1800;
t2270 = t1649 * t1801;
t2269 = t1650 * t1802;
t2268 = t1651 * t1803;
t2267 = t1652 * t1804;
t2266 = t1653 * t1802;
t2265 = t1654 * t1803;
t2264 = t1655 * t1804;
t2263 = t1656 * t1812;
t2262 = t1657 * t1812;
t2261 = t1658 * t1813;
t2260 = t1659 * t1813;
t2259 = t1660 * t1814;
t2258 = t1661 * t1814;
t2257 = t1662 * t1818;
t2256 = t1663 * t1818;
t2255 = t1664 * t1819;
t2254 = t1665 * t1819;
t2253 = t1666 * t1820;
t2252 = t1667 * t1820;
t1674 = -(t1792 * t1992 - t1989 * t2314) * t2278 + pkin(3) * (t1989 * t1792 + t1992 * t2314);
t2251 = t1674 * t1951;
t1675 = -(t1793 * t1993 - t1990 * t2313) * t2278 + pkin(3) * (t1990 * t1793 + t1993 * t2313);
t2250 = t1675 * t1952;
t1676 = -(t1794 * t1994 - t1991 * t2312) * t2278 + pkin(3) * (t1991 * t1794 + t1994 * t2312);
t2249 = t1676 * t1953;
t1677 = -(t1795 * t2004 - t2001 * t2311) * t2278 + pkin(3) * (t2001 * t1795 + t2004 * t2311);
t2248 = t1677 * t1954;
t1678 = -(t1796 * t2005 - t2002 * t2310) * t2278 + pkin(3) * (t2002 * t1796 + t2005 * t2310);
t2247 = t1678 * t1955;
t1679 = -(t1797 * t2006 - t2003 * t2309) * t2278 + pkin(3) * (t2003 * t1797 + t2006 * t2309);
t2246 = t1679 * t1956;
t1692 = (-(t1857 * t2119 - t2189) * t2158 - t1888 * (t1857 * t2115 + t2190)) * t1951 + t1945 * t1815 * t1969;
t2245 = t1692 * t1812;
t1693 = (-(t1858 * t2119 - t2186) * t2157 - t1889 * (t1858 * t2115 + t2187)) * t1952 + t1946 * t1816 * t1969;
t2244 = t1693 * t1813;
t1694 = (-(t1859 * t2119 - t2183) * t2156 - t1890 * (t1859 * t2115 + t2184)) * t1953 + t1947 * t1817 * t1969;
t2243 = t1694 * t1814;
t1695 = (-(t1860 * t2119 - t2180) * t2155 - t1894 * (t1860 * t2115 + t2181)) * t1954 + t1948 * t1821 * t1969;
t2242 = t1695 * t1818;
t1696 = (-(t1861 * t2119 - t2177) * t2154 - t1895 * (t1861 * t2115 + t2178)) * t1955 + t1949 * t1822 * t1969;
t2241 = t1696 * t1819;
t1697 = (-(t1862 * t2119 - t2174) * t2153 - t1896 * (t1862 * t2115 + t2175)) * t1956 + t1950 * t1823 * t1969;
t2240 = t1697 * t1820;
t2233 = t1741 * t1812;
t2232 = t1742 * t1813;
t2231 = t1743 * t1814;
t2230 = t1745 * t1818;
t2229 = t1746 * t1819;
t2228 = t1747 * t1820;
t2227 = t1773 * t1812;
t2226 = t1774 * t1813;
t2225 = t1775 * t1814;
t2224 = t1776 * t1818;
t2223 = t1777 * t1819;
t2222 = t1778 * t1820;
t2221 = t1779 * t1812;
t2220 = t1780 * t1813;
t2219 = t1781 * t1814;
t2218 = t1782 * t1818;
t2217 = t1783 * t1819;
t2216 = t1784 * t1820;
t2209 = t1812 * t1917;
t2207 = t1813 * t1917;
t2205 = t1814 * t1917;
t2203 = t1818 * t1917;
t2201 = t1819 * t1917;
t2199 = t1820 * t1917;
t2191 = t1863 * t1951;
t2188 = t1864 * t1952;
t2185 = t1865 * t1953;
t2182 = t1866 * t1954;
t2179 = t1867 * t1955;
t2176 = t1868 * t1956;
t2171 = t1870 * t1962;
t2146 = t1915 * t1957;
t2145 = t1916 * t1958;
t2132 = t1957 * t1960;
t2131 = t1958 * t1959;
t2130 = t1958 * t1962;
t2123 = t1962 * t1916;
t2122 = t1963 * t1964;
t2121 = t1963 * t2007;
t1974 = t2011 ^ 2;
t2112 = (t1974 - t1975) * m(4) + Icges(4,2) - Icges(4,3);
t2099 = t1799 * t2251;
t2098 = t1800 * t2250;
t2097 = t1801 * t2249;
t2096 = t1802 * t2248;
t2095 = t1803 * t2247;
t2094 = t1804 * t2246;
t2087 = t1799 * t2152;
t2086 = t1799 * t2121;
t2085 = t1800 * t2151;
t2084 = t1800 * t2121;
t2083 = t1801 * t2150;
t2082 = t1801 * t2121;
t2081 = t1802 * t2149;
t2080 = t1802 * t2121;
t2079 = t1803 * t2148;
t2078 = t1803 * t2121;
t2077 = t1804 * t2147;
t2076 = t1804 * t2121;
t2075 = t1812 * t2191;
t2074 = t1813 * t2188;
t2073 = t1814 * t2185;
t2072 = t1818 * t2182;
t2071 = t1819 * t2179;
t2070 = t1820 * t2176;
t2069 = t1951 * t2152;
t2068 = t1952 * t2151;
t2067 = t1953 * t2150;
t2066 = t1954 * t2149;
t2065 = t1955 * t2148;
t2064 = t1956 * t2147;
t2063 = t1916 * t2132;
t2062 = t1963 * t2113;
t2061 = t1799 * t2062;
t2060 = t1800 * t2062;
t2059 = t1801 * t2062;
t2058 = t1802 * t2062;
t2057 = t1803 * t2062;
t2056 = t1804 * t2062;
t2055 = t2086 * t2251;
t2054 = t2084 * t2250;
t2053 = t2082 * t2249;
t2052 = t2080 * t2248;
t2051 = t2078 * t2247;
t2050 = t2076 * t2246;
t2048 = t1914 * t1960 + t2146;
t1833 = t1958 * t2014 - t1961 * t2297;
t1590 = (t1647 * t1833 + t1749 * t2251) * t2215;
t1834 = t1958 * t2015 - t1961 * t2296;
t1592 = (t1648 * t1834 + t1753 * t2250) * t2214;
t1835 = t1958 * t2016 - t1961 * t2295;
t1594 = (t1649 * t1835 + t1757 * t2249) * t2213;
t1836 = t1958 * t2017 - t1961 * t2294;
t1596 = (t1653 * t1836 + t1761 * t2248) * t2212;
t1837 = t1958 * t2018 - t1961 * t2293;
t1598 = (t1654 * t1837 + t1765 * t2247) * t2211;
t1838 = t1958 * t2019 - t1961 * t2292;
t1600 = (t1655 * t1838 + t1769 * t2246) * t2210;
t1626 = (t1657 * t1833 + t1692 * t1749) * t2208;
t1628 = (t1659 * t1834 + t1693 * t1753) * t2206;
t1630 = (t1661 * t1835 + t1694 * t1757) * t2204;
t1632 = (t1663 * t1836 + t1695 * t1761) * t2202;
t1634 = (t1665 * t1837 + t1696 * t1765) * t2200;
t1636 = (t1667 * t1838 + t1697 * t1769) * t2198;
t1680 = (-t1749 * t2191 + t1779 * t1833) * t1812;
t1682 = (-t1753 * t2188 + t1780 * t1834) * t1813;
t1684 = (-t1757 * t2185 + t1781 * t1835) * t1814;
t1686 = (-t1761 * t2182 + t1782 * t1836) * t1818;
t1688 = (-t1765 * t2179 + t1783 * t1837) * t1819;
t1690 = (-t1769 * t2176 + t1784 * t1838) * t1820;
t2046 = t1434 * t1680 + t1435 * t1682 + t1436 * t1684 + t1437 * t1686 + t1438 * t1688 + t1440 * t1626 + t1441 * t1628 + t1442 * t1630 + t1443 * t1632 + t1444 * t1634 + t1446 * t1590 + t1447 * t1592 + t1448 * t1594 + t1449 * t1596 + t1450 * t1598 + t1439 * t1690 + t1445 * t1636 + t1451 * t1600;
t1591 = (-t1644 * t1833 + t1750 * t2251) * t2215;
t1593 = (-t1645 * t1834 + t1754 * t2250) * t2214;
t1595 = (-t1646 * t1835 + t1758 * t2249) * t2213;
t1597 = (-t1650 * t1836 + t1762 * t2248) * t2212;
t1599 = (-t1651 * t1837 + t1766 * t2247) * t2211;
t1601 = (-t1652 * t1838 + t1770 * t2246) * t2210;
t1627 = (-t1656 * t1833 + t1692 * t1750) * t2208;
t1629 = (-t1658 * t1834 + t1693 * t1754) * t2206;
t1631 = (-t1660 * t1835 + t1694 * t1758) * t2204;
t1633 = (-t1662 * t1836 + t1695 * t1762) * t2202;
t1635 = (-t1664 * t1837 + t1696 * t1766) * t2200;
t1637 = (-t1666 * t1838 + t1697 * t1770) * t2198;
t1681 = (-t1750 * t2191 - t1773 * t1833) * t1812;
t1683 = (-t1754 * t2188 - t1774 * t1834) * t1813;
t1685 = (-t1758 * t2185 - t1775 * t1835) * t1814;
t1687 = (-t1762 * t2182 - t1776 * t1836) * t1818;
t1689 = (-t1766 * t2179 - t1777 * t1837) * t1819;
t1691 = (-t1770 * t2176 - t1778 * t1838) * t1820;
t2045 = t1434 * t1681 + t1435 * t1683 + t1436 * t1685 + t1437 * t1687 + t1438 * t1689 + t1440 * t1627 + t1441 * t1629 + t1442 * t1631 + t1443 * t1633 + t1444 * t1635 + t1446 * t1591 + t1447 * t1593 + t1448 * t1595 + t1449 * t1597 + t1450 * t1599 + t1439 * t1691 + t1445 * t1637 + t1451 * t1601;
t1476 = t1680 * t1917 + (t1590 * t2152 + t1626 * t1741) * m(3);
t1478 = t1682 * t1917 + (t1592 * t2151 + t1628 * t1742) * m(3);
t1480 = t1684 * t1917 + (t1594 * t2150 + t1630 * t1743) * m(3);
t1482 = t1686 * t1917 + (t1596 * t2149 + t1632 * t1745) * m(3);
t1484 = t1688 * t1917 + (t1598 * t2148 + t1634 * t1746) * m(3);
t1486 = t1690 * t1917 + (t1600 * t2147 + t1636 * t1747) * m(3);
t1488 = t1590 * t2113 + t1626 * t1964 + t1680 * t2285;
t1490 = t1592 * t2113 + t1628 * t1964 + t1682 * t2284;
t1492 = t1594 * t2113 + t1630 * t1964 + t1684 * t2283;
t1497 = t1596 * t2113 + t1632 * t1964 + t1686 * t2282;
t1499 = t1598 * t2113 + t1634 * t1964 + t1688 * t2281;
t1501 = t1600 * t2113 + t1636 * t1964 + t1690 * t2280;
t1512 = t1680 * t2105 + (t1626 * t1973 + t1590) * t2007;
t1514 = t1682 * t2104 + (t1628 * t1973 + t1592) * t2007;
t1516 = t1684 * t2103 + (t1630 * t1973 + t1594) * t2007;
t1524 = t1686 * t2102 + (t1632 * t1973 + t1596) * t2007;
t1526 = t1688 * t2101 + (t1634 * t1973 + t1598) * t2007;
t1528 = t1690 * t2100 + (t1636 * t1973 + t1600) * t2007;
t2044 = t1476 * t1680 + t1478 * t1682 + t1480 * t1684 + t1482 * t1686 + t1484 * t1688 + t1488 * t1626 + t1490 * t1628 + t1492 * t1630 + t1497 * t1632 + t1499 * t1634 + t1512 * t1590 + t1514 * t1592 + t1516 * t1594 + t1524 * t1596 + t1526 * t1598 + t1486 * t1690 + t1501 * t1636 + t1528 * t1600;
t2043 = -t1476 * t1681 - t1478 * t1683 - t1480 * t1685 - t1482 * t1687 - t1484 * t1689 - t1488 * t1627 - t1490 * t1629 - t1492 * t1631 - t1497 * t1633 - t1499 * t1635 - t1512 * t1591 - t1514 * t1593 - t1516 * t1595 - t1524 * t1597 - t1526 * t1599 - t1486 * t1691 - t1501 * t1637 - t1528 * t1601;
t1477 = t1681 * t1917 + (t1591 * t2152 + t1627 * t1741) * m(3);
t1479 = t1683 * t1917 + (t1593 * t2151 + t1629 * t1742) * m(3);
t1481 = t1685 * t1917 + (t1595 * t2150 + t1631 * t1743) * m(3);
t1483 = t1687 * t1917 + (t1597 * t2149 + t1633 * t1745) * m(3);
t1485 = t1689 * t1917 + (t1599 * t2148 + t1635 * t1746) * m(3);
t1487 = t1691 * t1917 + (t1601 * t2147 + t1637 * t1747) * m(3);
t1489 = t1591 * t2113 + t1627 * t1964 + t1681 * t2285;
t1491 = t1593 * t2113 + t1629 * t1964 + t1683 * t2284;
t1493 = t1595 * t2113 + t1631 * t1964 + t1685 * t2283;
t1498 = t1597 * t2113 + t1633 * t1964 + t1687 * t2282;
t1500 = t1599 * t2113 + t1635 * t1964 + t1689 * t2281;
t1502 = t1601 * t2113 + t1637 * t1964 + t1691 * t2280;
t1513 = t1681 * t2105 + (t1627 * t1973 + t1591) * t2007;
t1515 = t1683 * t2104 + (t1629 * t1973 + t1593) * t2007;
t1517 = t1685 * t2103 + (t1631 * t1973 + t1595) * t2007;
t1525 = t1687 * t2102 + (t1633 * t1973 + t1597) * t2007;
t1527 = t1689 * t2101 + (t1635 * t1973 + t1599) * t2007;
t1529 = t1691 * t2100 + (t1637 * t1973 + t1601) * t2007;
t2042 = t1477 * t1680 + t1479 * t1682 + t1481 * t1684 + t1483 * t1686 + t1485 * t1688 + t1489 * t1626 + t1491 * t1628 + t1493 * t1630 + t1498 * t1632 + t1500 * t1634 + t1513 * t1590 + t1515 * t1592 + t1517 * t1594 + t1525 * t1596 + t1527 * t1598 + t1487 * t1690 + t1502 * t1636 + t1529 * t1600;
t2041 = -t1477 * t1681 - t1479 * t1683 - t1481 * t1685 - t1483 * t1687 - t1485 * t1689 - t1489 * t1627 - t1491 * t1629 - t1493 * t1631 - t1498 * t1633 - t1500 * t1635 - t1513 * t1591 - t1515 * t1593 - t1517 * t1595 - t1525 * t1597 - t1527 * t1599 - t1487 * t1691 - t1502 * t1637 - t1529 * t1601;
t1554 = t1773 * t2209 + (t1644 * t2087 + t1656 * t2233) * t2279;
t1556 = t1774 * t2207 + (t1645 * t2085 + t1658 * t2232) * t2279;
t1558 = t1775 * t2205 + (t1646 * t2083 + t1660 * t2231) * t2279;
t1560 = t1776 * t2203 + (t1650 * t2081 + t1662 * t2230) * t2279;
t1562 = t1777 * t2201 + (t1651 * t2079 + t1664 * t2229) * t2279;
t1564 = t1778 * t2199 + (t1652 * t2077 + t1666 * t2228) * t2279;
t1566 = t1644 * t2061 + (t1656 * t2122 + t1773 * t2285) * t1812;
t1568 = t1645 * t2060 + (t1658 * t2122 + t1774 * t2284) * t1813;
t1570 = t1646 * t2059 + (t1660 * t2122 + t1775 * t2283) * t1814;
t1572 = t1650 * t2058 + (t1662 * t2122 + t1776 * t2282) * t1818;
t1574 = t1651 * t2057 + (t1664 * t2122 + t1777 * t2281) * t1819;
t1576 = t1652 * t2056 + (t1666 * t2122 + t1778 * t2280) * t1820;
t1578 = t1644 * t2086 + (t1656 * t2062 + t1773 * t2105) * t1812;
t1580 = t1645 * t2084 + (t1658 * t2062 + t1774 * t2104) * t1813;
t1582 = t1646 * t2082 + (t1660 * t2062 + t1775 * t2103) * t1814;
t1584 = t1650 * t2080 + (t1662 * t2062 + t1776 * t2102) * t1818;
t1586 = t1651 * t2078 + (t1664 * t2062 + t1777 * t2101) * t1819;
t1588 = t1652 * t2076 + (t1666 * t2062 + t1778 * t2100) * t1820;
t2040 = t1554 * t1680 + t1556 * t1682 + t1558 * t1684 + t1560 * t1686 + t1562 * t1688 + t1566 * t1626 + t1568 * t1628 + t1570 * t1630 + t1572 * t1632 + t1574 * t1634 + t1578 * t1590 + t1580 * t1592 + t1582 * t1594 + t1584 * t1596 + t1586 * t1598 + t1564 * t1690 + t1576 * t1636 + t1588 * t1600;
t2039 = -t1554 * t1681 - t1556 * t1683 - t1558 * t1685 - t1560 * t1687 - t1562 * t1689 - t1566 * t1627 - t1568 * t1629 - t1570 * t1631 - t1572 * t1633 - t1574 * t1635 - t1578 * t1591 - t1580 * t1593 - t1582 * t1595 - t1584 * t1597 - t1586 * t1599 - t1564 * t1691 - t1576 * t1637 - t1588 * t1601;
t1555 = t1779 * t2209 + (t1647 * t2087 + t1657 * t2233) * t2279;
t1557 = t1780 * t2207 + (t1648 * t2085 + t1659 * t2232) * t2279;
t1559 = t1781 * t2205 + (t1649 * t2083 + t1661 * t2231) * t2279;
t1561 = t1782 * t2203 + (t1653 * t2081 + t1663 * t2230) * t2279;
t1563 = t1783 * t2201 + (t1654 * t2079 + t1665 * t2229) * t2279;
t1565 = t1784 * t2199 + (t1655 * t2077 + t1667 * t2228) * t2279;
t1567 = t1647 * t2061 + (t1657 * t2122 + t1779 * t2285) * t1812;
t1569 = t1648 * t2060 + (t1659 * t2122 + t1780 * t2284) * t1813;
t1571 = t1649 * t2059 + (t1661 * t2122 + t1781 * t2283) * t1814;
t1573 = t1653 * t2058 + (t1663 * t2122 + t1782 * t2282) * t1818;
t1575 = t1654 * t2057 + (t1665 * t2122 + t1783 * t2281) * t1819;
t1577 = t1655 * t2056 + (t1667 * t2122 + t1784 * t2280) * t1820;
t1579 = t1647 * t2086 + (t1657 * t2062 + t1779 * t2105) * t1812;
t1581 = t1648 * t2084 + (t1659 * t2062 + t1780 * t2104) * t1813;
t1583 = t1649 * t2082 + (t1661 * t2062 + t1781 * t2103) * t1814;
t1585 = t1653 * t2080 + (t1663 * t2062 + t1782 * t2102) * t1818;
t1587 = t1654 * t2078 + (t1665 * t2062 + t1783 * t2101) * t1819;
t1589 = t1655 * t2076 + (t1667 * t2062 + t1784 * t2100) * t1820;
t2038 = t1555 * t1680 + t1557 * t1682 + t1559 * t1684 + t1561 * t1686 + t1563 * t1688 + t1567 * t1626 + t1569 * t1628 + t1571 * t1630 + t1573 * t1632 + t1575 * t1634 + t1579 * t1590 + t1581 * t1592 + t1583 * t1594 + t1585 * t1596 + t1587 * t1598 + t1565 * t1690 + t1577 * t1636 + t1589 * t1600;
t2037 = t1555 * t1681 + t1557 * t1683 + t1559 * t1685 + t1561 * t1687 + t1563 * t1689 + t1567 * t1627 + t1569 * t1629 + t1571 * t1631 + t1573 * t1633 + t1575 * t1635 + t1579 * t1591 + t1581 * t1593 + t1583 * t1595 + t1585 * t1597 + t1587 * t1599 + t1565 * t1691 + t1577 * t1637 + t1589 * t1601;
t1614 = -t1917 * t2075 + (t1674 * t1799 * t2069 + t1692 * t2233) * t2279;
t1615 = -t1917 * t2074 + (t1675 * t1800 * t2068 + t1693 * t2232) * t2279;
t1616 = -t1917 * t2073 + (t1676 * t1801 * t2067 + t1694 * t2231) * t2279;
t1617 = -t1917 * t2072 + (t1677 * t1802 * t2066 + t1695 * t2230) * t2279;
t1618 = -t1917 * t2071 + (t1678 * t1803 * t2065 + t1696 * t2229) * t2279;
t1619 = -t1917 * t2070 + (t1679 * t1804 * t2064 + t1697 * t2228) * t2279;
t1620 = t1973 * t2055 + (t1692 * t2122 - t2191 * t2285) * t1812;
t1621 = t1973 * t2054 + (t1693 * t2122 - t2188 * t2284) * t1813;
t1622 = t1973 * t2053 + (t1694 * t2122 - t2185 * t2283) * t1814;
t1623 = t1973 * t2052 + (t1695 * t2122 - t2182 * t2282) * t1818;
t1624 = t1973 * t2051 + (t1696 * t2122 - t2179 * t2281) * t1819;
t1625 = t1973 * t2050 + (t1697 * t2122 - t2176 * t2280) * t1820;
t1638 = t2055 + (-m(3) * t1863 * t2069 + t1692 * t2062) * t1812;
t1639 = t2054 + (-m(3) * t1864 * t2068 + t1693 * t2062) * t1813;
t1640 = t2053 + (-m(3) * t1865 * t2067 + t1694 * t2062) * t1814;
t1641 = t2052 + (-m(3) * t1866 * t2066 + t1695 * t2062) * t1818;
t1642 = t2051 + (-m(3) * t1867 * t2065 + t1696 * t2062) * t1819;
t1643 = t2050 + (-m(3) * t1868 * t2064 + t1697 * t2062) * t1820;
t2036 = t1590 * t1638 + t1592 * t1639 + t1594 * t1640 + t1596 * t1641 + t1598 * t1642 + t1614 * t1680 + t1615 * t1682 + t1616 * t1684 + t1617 * t1686 + t1618 * t1688 + t1620 * t1626 + t1621 * t1628 + t1622 * t1630 + t1623 * t1632 + t1624 * t1634 + t1600 * t1643 + t1619 * t1690 + t1625 * t1636;
t2035 = t1591 * t1638 + t1593 * t1639 + t1595 * t1640 + t1597 * t1641 + t1599 * t1642 + t1614 * t1681 + t1615 * t1683 + t1616 * t1685 + t1617 * t1687 + t1618 * t1689 + t1620 * t1627 + t1621 * t1629 + t1622 * t1631 + t1623 * t1633 + t1624 * t1635 + t1601 * t1643 + t1619 * t1691 + t1625 * t1637;
t1897 = (t1975 - t1976) * m(4) + Icges(4,1) - Icges(4,2);
t2034 = -(t1897 * t1957 * t1958 + t1914 * t1961) * t1960 - t1961 * t2146;
t1919 = t1960 ^ 2;
t2033 = t1897 * t1919 + 0.2e1 * t2063;
t2030 = t1476 * t1668 + t1488 * t1608 + t1490 * t1609 + t1492 * t1610 + t1497 * t1611 + t1499 * t1612 + t1501 * t1613 + t1512 * t1548 + t1514 * t1549 + t1516 * t1550 + t1524 * t1551 + t1526 * t1552 + t1528 * t1553 + t1478 * t1669 + t1480 * t1670 + t1482 * t1671 + t1484 * t1672 + t1486 * t1673;
t2029 = t1477 * t1668 + t1489 * t1608 + t1491 * t1609 + t1493 * t1610 + t1498 * t1611 + t1500 * t1612 + t1502 * t1613 + t1513 * t1548 + t1515 * t1549 + t1517 * t1550 + t1525 * t1551 + t1527 * t1552 + t1529 * t1553 + t1479 * t1669 + t1481 * t1670 + t1483 * t1671 + t1485 * t1672 + t1487 * t1673;
t2028 = t1578 * t1548 + t1580 * t1549 + t1582 * t1550 + t1584 * t1551 + t1586 * t1552 + t1588 * t1553 + t1554 * t1668 + t1566 * t1608 + t1568 * t1609 + t1570 * t1610 + t1572 * t1611 + t1574 * t1612 + t1576 * t1613 + t1556 * t1669 + t1558 * t1670 + t1560 * t1671 + t1562 * t1672 + t1564 * t1673;
t2027 = t1579 * t1548 + t1581 * t1549 + t1583 * t1550 + t1585 * t1551 + t1587 * t1552 + t1589 * t1553 + t1555 * t1668 + t1567 * t1608 + t1569 * t1609 + t1571 * t1610 + t1573 * t1611 + t1575 * t1612 + t1577 * t1613 + t1557 * t1669 + t1559 * t1670 + t1561 * t1671 + t1563 * t1672 + t1565 * t1673;
t2026 = t1638 * t1548 + t1639 * t1549 + t1640 * t1550 + t1641 * t1551 + t1642 * t1552 + t1643 * t1553 + t1620 * t1608 + t1621 * t1609 + t1622 * t1610 + t1623 * t1611 + t1624 * t1612 + t1625 * t1613 + t1614 * t1668 + t1615 * t1669 + t1616 * t1670 + t1617 * t1671 + t1618 * t1672 + t1619 * t1673;
t1907 = m(4) * (t1974 + t1975) + Icges(4,1);
t1825 = -t1897 * t1962 + t2131 * t2308;
t1805 = t1897 * t2132 + t1919 * t2308 + t1916;
t1798 = t2033 + t2112;
t1785 = -t1961 * t1908 + t2317;
t1744 = (-t1959 * t2316 + t2171) * m(4);
t1 = [-t1614 * t2075 - t1615 * t2074 - t1616 * t2073 - t1617 * t2072 - t1618 * t2071 - t1619 * t2070 + m(4) + (t1620 * t2245 + t1621 * t2244 + t1622 * t2243 + t1623 * t2242 + t1624 * t2241 + t1625 * t2240 + t1638 * t2099 + t1639 * t2098 + t1640 * t2097 + t1641 * t2096 + t1642 * t2095 + t1643 * t2094) * t1963, t1614 * t2221 + t1615 * t2220 + t1616 * t2219 + t1617 * t2218 + t1618 * t2217 + t1619 * t2216 + (t1620 * t2262 + t1621 * t2260 + t1622 * t2258 + t1623 * t2256 + t1624 * t2254 + t1625 * t2252 + t1638 * t2272 + t1639 * t2271 + t1640 * t2270 + t1641 * t2266 + t1642 * t2265 + t1643 * t2264) * t1963, t1614 * t2227 + t1615 * t2226 + t1616 * t2225 + t1617 * t2224 + t1618 * t2223 + t1619 * t2222 + (t1620 * t2263 + t1621 * t2261 + t1622 * t2259 + t1623 * t2257 + t1624 * t2255 + t1625 * t2253 + t1638 * t2275 + t1639 * t2274 + t1640 * t2273 + t1641 * t2269 + t1642 * t2268 + t1643 * t2267) * t1963, t2026, m(4) * t2316 + t2036 * t1959 + t2035 * t1962, t2026 * t1958 + (-m(4) * t1870 - t1959 * t2035 + t1962 * t2036) * t1961; -t1555 * t2075 - t1557 * t2074 - t1559 * t2073 - t1561 * t2072 - t1563 * t2071 - t1565 * t2070 + (t1567 * t2245 + t1569 * t2244 + t1571 * t2243 + t1573 * t2242 + t1575 * t2241 + t1577 * t2240 + t1579 * t2099 + t1581 * t2098 + t1583 * t2097 + t1585 * t2096 + t1587 * t2095 + t1589 * t2094) * t1963, t1555 * t2221 + t1557 * t2220 + t1559 * t2219 + t1561 * t2218 + t1563 * t2217 + t1565 * t2216 + m(4) + (t1567 * t2262 + t1569 * t2260 + t1571 * t2258 + t1573 * t2256 + t1575 * t2254 + t1577 * t2252 + t1579 * t2272 + t1581 * t2271 + t1583 * t2270 + t1585 * t2266 + t1587 * t2265 + t1589 * t2264) * t1963, t1555 * t2227 + t1557 * t2226 + t1559 * t2225 + t1561 * t2224 + t1563 * t2223 + t1565 * t2222 + (t1567 * t2263 + t1569 * t2261 + t1571 * t2259 + t1573 * t2257 + t1575 * t2255 + t1577 * t2253 + t1579 * t2275 + t1581 * t2274 + t1583 * t2273 + t1585 * t2269 + t1587 * t2268 + t1589 * t2267) * t1963, t2027 - t1740, t2037 * t1962 + (t2038 - t2277) * t1959, -t1962 * t2306 + (-m(4) * t2172 + t2027) * t1958 + (-t1959 * t2037 + t1962 * t2038) * t1961; -t1554 * t2075 - t1556 * t2074 - t1558 * t2073 - t1560 * t2072 - t1562 * t2071 - t1564 * t2070 + (t1566 * t2245 + t1568 * t2244 + t1570 * t2243 + t1572 * t2242 + t1574 * t2241 + t1576 * t2240 + t1578 * t2099 + t1580 * t2098 + t1582 * t2097 + t1584 * t2096 + t1586 * t2095 + t1588 * t2094) * t1963, t1554 * t2221 + t1556 * t2220 + t1558 * t2219 + t1560 * t2218 + t1562 * t2217 + t1564 * t2216 + (t1566 * t2262 + t1568 * t2260 + t1570 * t2258 + t1572 * t2256 + t1574 * t2254 + t1576 * t2252 + t1578 * t2272 + t1580 * t2271 + t1582 * t2270 + t1584 * t2266 + t1586 * t2265 + t1588 * t2264) * t1963, t1554 * t2227 + t1556 * t2226 + t1558 * t2225 + t1560 * t2224 + t1562 * t2223 + t1564 * t2222 + m(4) + (t1566 * t2263 + t1568 * t2261 + t1570 * t2259 + t1572 * t2257 + t1574 * t2255 + t1576 * t2253 + t1578 * t2275 + t1580 * t2274 + t1582 * t2273 + t1584 * t2269 + t1586 * t2268 + t1588 * t2267) * t1963, t2028 + t1744, t2040 * t1959 + (-t2039 + t2277) * t1962, -t1959 * t2306 + (m(4) * t2171 + t2028) * t1958 + (t1959 * t2039 + t1962 * t2040) * t1961; -t1434 * t2075 - t1435 * t2074 - t1436 * t2073 - t1437 * t2072 - t1438 * t2071 - t1439 * t2070 + (t1440 * t2245 + t1441 * t2244 + t1442 * t2243 + t1443 * t2242 + t1444 * t2241 + t1445 * t2240 + t1446 * t2099 + t1447 * t2098 + t1448 * t2097 + t1449 * t2096 + t1450 * t2095 + t1451 * t2094) * t1963, t1434 * t2221 + t1435 * t2220 + t1436 * t2219 + t1437 * t2218 + t1438 * t2217 + t1439 * t2216 - t1740 + (t1440 * t2262 + t1441 * t2260 + t1442 * t2258 + t1443 * t2256 + t1444 * t2254 + t1445 * t2252 + t1446 * t2272 + t1447 * t2271 + t1448 * t2270 + t1449 * t2266 + t1450 * t2265 + t1451 * t2264) * t1963, t1434 * t2227 + t1435 * t2226 + t1436 * t2225 + t1437 * t2224 + t1438 * t2223 + t1439 * t2222 + t1744 + (t1440 * t2263 + t1441 * t2261 + t1442 * t2259 + t1443 * t2257 + t1444 * t2255 + t1445 * t2253 + t1446 * t2275 + t1447 * t2274 + t1448 * t2273 + t1449 * t2269 + t1450 * t2268 + t1451 * t2267) * t1963, t1798 * t1920 + 0.2e1 * t1961 * t2317 + t2304, t1805 * t1961 - t1958 * t2048 + t1959 * t2046 + t1962 * t2045, t2304 * t1958 + (-t1959 * t2045 + t1962 * t2046 + t2047) * t1961; -t1487 * t2070 - t1485 * t2071 - t1483 * t2072 - t1481 * t2073 - t1479 * t2074 - t1477 * t2075 + t1740 + (t1489 * t2245 + t1491 * t2244 + t1493 * t2243 + t1498 * t2242 + t1500 * t2241 + t1502 * t2240 + t1513 * t2099 + t1515 * t2098 + t1517 * t2097 + t1525 * t2096 + t1527 * t2095 + t1529 * t2094) * t1963, t1477 * t2221 + t1479 * t2220 + t1481 * t2219 + t1483 * t2218 + t1485 * t2217 + t1487 * t2216 + (t1489 * t2262 + t1491 * t2260 + t1493 * t2258 + t1498 * t2256 + t1500 * t2254 + t1502 * t2252 + t1513 * t2272 + t1515 * t2271 + t1517 * t2270 + t1525 * t2266 + t1527 * t2265 + t1529 * t2264) * t1963, t1487 * t2222 + t1485 * t2223 + t1483 * t2224 + t1481 * t2225 + t1479 * t2226 + t1477 * t2227 + t2277 + (t1489 * t2263 + t1491 * t2261 + t1493 * t2259 + t1498 * t2257 + t1500 * t2255 + t1502 * t2253 + t1513 * t2275 + t1515 * t2274 + t1517 * t2273 + t1525 * t2269 + t1527 * t2268 + t1529 * t2267) * t1963, t2029 + t1959 * t2047 * t2307 + ((t1897 * t2131 - 0.2e1 * t2123) * t1919 - t1825 * t2132 + t2112 * t2131 + t2123) * t1961 + (-t1914 * t2130 - t1915 * t1959) * t1960 - t1957 * (-t1914 * t1959 + t1915 * t2130), t1825 * t1919 + (t1907 - t2041 - 0.2e1 * t2063) * t1962 + (-t2034 + t2042 + t2145) * t1959, t1785 * t1959 - t1962 * t2048 + t2029 * t1958 + (t1959 * t2041 + t1962 * t2042) * t1961; -t1476 * t2075 - t1478 * t2074 - t1480 * t2073 - t1482 * t2072 - t1484 * t2071 - t1486 * t2070 - t1744 + (t1488 * t2245 + t1490 * t2244 + t1492 * t2243 + t1497 * t2242 + t1499 * t2241 + t1501 * t2240 + t1512 * t2099 + t1514 * t2098 + t1516 * t2097 + t1524 * t2096 + t1526 * t2095 + t1528 * t2094) * t1963, t1476 * t2221 + t1478 * t2220 + t1480 * t2219 + t1482 * t2218 + t1484 * t2217 + t1486 * t2216 - t2277 + (t1488 * t2262 + t1490 * t2260 + t1492 * t2258 + t1497 * t2256 + t1499 * t2254 + t1501 * t2252 + t1512 * t2272 + t1514 * t2271 + t1516 * t2270 + t1524 * t2266 + t1526 * t2265 + t1528 * t2264) * t1963, t1476 * t2227 + t1478 * t2226 + t1480 * t2225 + t1482 * t2224 + t1484 * t2223 + t1486 * t2222 + (t1488 * t2263 + t1490 * t2261 + t1492 * t2259 + t1497 * t2257 + t1499 * t2255 + t1501 * t2253 + t1512 * t2275 + t1514 * t2274 + t1516 * t2273 + t1524 * t2269 + t1526 * t2268 + t1528 * t2267) * t1963, t2030 - t2048 * t2131 + (-t1798 * t2130 + t1805 * t1959) * t1961 - (t2307 + 0.1e1) * t1962 * t2047, ((0.2e1 * t1919 - 0.1e1) * t2145 + t2034 - t2043) * t1962 + (t1907 - t2033 + t2044) * t1959, -t1785 * t1962 - t1959 * t2048 + t2030 * t1958 + (t1959 * t2043 + t1962 * t2044) * t1961;];
MX  = t1;
