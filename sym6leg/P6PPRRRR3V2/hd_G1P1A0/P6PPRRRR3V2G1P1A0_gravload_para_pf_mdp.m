% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PPRRRR3V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d3,d4,theta1,theta2]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [15x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PPRRRR3V2G1P1A0_convert_par2_MPV_fixb.m

% Output:
% taugX [6x1]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 22:25
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp(xP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(15,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [15 1]), ...
  'P6PPRRRR3V2G1P1A0_gravload_para_pf_mdp: MDP has to be [15x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 22:24:20
% EndTime: 2019-05-16 22:25:57
% DurationCPUTime: 125.73s
% Computational Cost: add. (14967->1446), mult. (40014->2845), div. (288->13), fcn. (42810->63), ass. (0->868)
t13899 = xP(6);
t13853 = sin(t13899);
t13856 = cos(t13899);
t13908 = koppelP(6,2);
t13914 = koppelP(6,1);
t13776 = t13853 * t13908 - t13856 * t13914;
t13900 = xP(5);
t13857 = cos(t13900);
t13854 = sin(t13900);
t13902 = koppelP(6,3);
t14124 = t13854 * t13902;
t13655 = t13776 * t13857 - t14124;
t13887 = legFrame(6,2);
t13847 = cos(t13887);
t13875 = legFrame(6,1);
t13835 = cos(t13875);
t13841 = sin(t13887);
t14180 = t13835 * t13841;
t13901 = xP(4);
t13858 = cos(t13901);
t14090 = t13858 * t13914;
t14096 = t13858 * t13908;
t13855 = sin(t13901);
t14110 = t13855 * t13914;
t14116 = t13855 * t13908;
t13575 = -(t13854 * t14090 - t14116) * t13856 + t13853 * (t13854 * t14096 + t14110);
t14102 = t13857 * t13902;
t14376 = t13858 * t14102 + t13575;
t14394 = -t13655 * t14180 + t13847 * t14376;
t13823 = sin(t13875);
t14198 = t13823 * t13841;
t13563 = (t13854 * t14110 + t14096) * t13856 - (t13854 * t14116 - t14090) * t13853;
t14382 = -t13855 * t14102 + t13563;
t14393 = t13655 * t14198 + t13847 * t14382;
t13909 = koppelP(5,2);
t13915 = koppelP(5,1);
t13777 = t13853 * t13909 - t13856 * t13915;
t13903 = koppelP(5,3);
t14123 = t13854 * t13903;
t13656 = t13777 * t13857 - t14123;
t13888 = legFrame(5,2);
t13848 = cos(t13888);
t13876 = legFrame(5,1);
t13836 = cos(t13876);
t13842 = sin(t13888);
t14177 = t13836 * t13842;
t14089 = t13858 * t13915;
t14095 = t13858 * t13909;
t14109 = t13855 * t13915;
t14115 = t13855 * t13909;
t13576 = -(t13854 * t14089 - t14115) * t13856 + t13853 * (t13854 * t14095 + t14109);
t14101 = t13857 * t13903;
t14375 = t13858 * t14101 + t13576;
t14392 = -t13656 * t14177 + t13848 * t14375;
t13824 = sin(t13876);
t14195 = t13824 * t13842;
t13564 = (t13854 * t14109 + t14095) * t13856 - (t13854 * t14115 - t14089) * t13853;
t14381 = -t13855 * t14101 + t13564;
t14391 = t13656 * t14195 + t13848 * t14381;
t13910 = koppelP(4,2);
t13916 = koppelP(4,1);
t13778 = t13853 * t13910 - t13856 * t13916;
t13904 = koppelP(4,3);
t14122 = t13854 * t13904;
t13657 = t13778 * t13857 - t14122;
t13889 = legFrame(4,2);
t13849 = cos(t13889);
t13877 = legFrame(4,1);
t13837 = cos(t13877);
t13843 = sin(t13889);
t14174 = t13837 * t13843;
t14088 = t13858 * t13916;
t14094 = t13858 * t13910;
t14108 = t13855 * t13916;
t14114 = t13855 * t13910;
t13577 = -(t13854 * t14088 - t14114) * t13856 + t13853 * (t13854 * t14094 + t14108);
t14100 = t13857 * t13904;
t14374 = t13858 * t14100 + t13577;
t14390 = -t13657 * t14174 + t13849 * t14374;
t13825 = sin(t13877);
t14192 = t13825 * t13843;
t13565 = (t13854 * t14108 + t14094) * t13856 - (t13854 * t14114 - t14088) * t13853;
t14380 = -t13855 * t14100 + t13565;
t14389 = t13657 * t14192 + t13849 * t14380;
t13911 = koppelP(3,2);
t13917 = koppelP(3,1);
t13779 = t13853 * t13911 - t13856 * t13917;
t13905 = koppelP(3,3);
t14121 = t13854 * t13905;
t13658 = t13779 * t13857 - t14121;
t13890 = legFrame(3,2);
t13850 = cos(t13890);
t13878 = legFrame(3,1);
t13838 = cos(t13878);
t13844 = sin(t13890);
t14171 = t13838 * t13844;
t14087 = t13858 * t13917;
t14093 = t13858 * t13911;
t14107 = t13855 * t13917;
t14113 = t13855 * t13911;
t13578 = -(t13854 * t14087 - t14113) * t13856 + t13853 * (t13854 * t14093 + t14107);
t14099 = t13857 * t13905;
t14373 = t13858 * t14099 + t13578;
t14388 = -t13658 * t14171 + t13850 * t14373;
t13826 = sin(t13878);
t14189 = t13826 * t13844;
t13566 = (t13854 * t14107 + t14093) * t13856 - (t13854 * t14113 - t14087) * t13853;
t14379 = -t13855 * t14099 + t13566;
t14387 = t13658 * t14189 + t13850 * t14379;
t13912 = koppelP(2,2);
t13918 = koppelP(2,1);
t13780 = t13853 * t13912 - t13856 * t13918;
t13906 = koppelP(2,3);
t14120 = t13854 * t13906;
t13659 = t13780 * t13857 - t14120;
t13891 = legFrame(2,2);
t13851 = cos(t13891);
t13879 = legFrame(2,1);
t13839 = cos(t13879);
t13845 = sin(t13891);
t14168 = t13839 * t13845;
t14086 = t13858 * t13918;
t14092 = t13858 * t13912;
t14106 = t13855 * t13918;
t14112 = t13855 * t13912;
t13579 = -(t13854 * t14086 - t14112) * t13856 + t13853 * (t13854 * t14092 + t14106);
t14098 = t13857 * t13906;
t14372 = t13858 * t14098 + t13579;
t14386 = -t13659 * t14168 + t13851 * t14372;
t13827 = sin(t13879);
t14186 = t13827 * t13845;
t13567 = (t13854 * t14106 + t14092) * t13856 - (t13854 * t14112 - t14086) * t13853;
t14378 = -t13855 * t14098 + t13567;
t14385 = t13659 * t14186 + t13851 * t14378;
t13913 = koppelP(1,2);
t13919 = koppelP(1,1);
t13781 = t13853 * t13913 - t13856 * t13919;
t13907 = koppelP(1,3);
t14119 = t13854 * t13907;
t13660 = t13781 * t13857 - t14119;
t13892 = legFrame(1,2);
t13852 = cos(t13892);
t13880 = legFrame(1,1);
t13840 = cos(t13880);
t13846 = sin(t13892);
t14165 = t13840 * t13846;
t14085 = t13858 * t13919;
t14091 = t13858 * t13913;
t14105 = t13855 * t13919;
t14111 = t13855 * t13913;
t13580 = -(t13854 * t14085 - t14111) * t13856 + t13853 * (t13854 * t14091 + t14105);
t14097 = t13857 * t13907;
t14371 = t13858 * t14097 + t13580;
t14384 = -t13660 * t14165 + t13852 * t14371;
t13828 = sin(t13880);
t14183 = t13828 * t13846;
t13568 = (t13854 * t14105 + t14091) * t13856 - (t13854 * t14111 - t14085) * t13853;
t14377 = -t13855 * t14097 + t13568;
t14383 = t13660 * t14183 + t13852 * t14377;
t13860 = sin(pkin(10));
t13861 = sin(pkin(9));
t13866 = cos(pkin(9));
t13867 = cos(pkin(5));
t13865 = cos(pkin(10));
t13868 = cos(pkin(4));
t14074 = t13865 * t13868;
t13863 = sin(pkin(5));
t13864 = sin(pkin(4));
t14081 = t13863 * t13864;
t13639 = (t13860 * t13866 + t13861 * t14074) * t13867 - t13861 * t14081;
t14073 = t13866 * t13868;
t13640 = (t13860 * t13861 - t13865 * t14073) * t13867 + t13866 * t14081;
t13872 = legFrame(3,3);
t13820 = sin(t13872);
t13832 = cos(t13872);
t14370 = t13639 * t13820 + t13640 * t13832;
t13873 = legFrame(2,3);
t13821 = sin(t13873);
t13833 = cos(t13873);
t14369 = t13639 * t13821 + t13640 * t13833;
t13874 = legFrame(1,3);
t13822 = sin(t13874);
t13834 = cos(t13874);
t14368 = t13639 * t13822 + t13640 * t13834;
t14367 = MDP(1) + MDP(2);
t13652 = g(1) * t13844 + (-g(2) * t13826 + g(3) * t13838) * t13850;
t13814 = t13861 * g(3);
t13815 = t13866 * g(3);
t13816 = t13866 * g(2);
t13893 = sin(qJ(3,3));
t13896 = cos(qJ(3,3));
t14083 = t13860 * t13867;
t14143 = t13844 * t13866;
t14146 = t13844 * t13861;
t14319 = g(2) * t13861;
t14321 = g(1) * t13866;
t14322 = g(1) * t13861;
t14324 = pkin(8) * sin(pkin(6));
t14366 = ((((g(3) * t14146 + t13816) * t13832 + t13820 * (g(3) * t14143 - t14319)) * t13838 + ((-g(2) * t14146 + t13815) * t13826 - t13850 * t14322) * t13832 - ((g(2) * t14143 + t13814) * t13826 + t13850 * t14321) * t13820) * t13864 - t13652 * t13868) / ((-t13865 * t13896 + t13893 * t14083) * t14324 + pkin(3) * (t13865 * t13893 + t13896 * t14083));
t13653 = g(1) * t13845 + (-g(2) * t13827 + g(3) * t13839) * t13851;
t13894 = sin(qJ(3,2));
t13897 = cos(qJ(3,2));
t14138 = t13845 * t13866;
t14141 = t13845 * t13861;
t14365 = ((((g(3) * t14141 + t13816) * t13833 + t13821 * (g(3) * t14138 - t14319)) * t13839 + ((-g(2) * t14141 + t13815) * t13827 - t13851 * t14322) * t13833 - t13821 * ((g(2) * t14138 + t13814) * t13827 + t13851 * t14321)) * t13864 - t13653 * t13868) / ((-t13865 * t13897 + t13894 * t14083) * t14324 + pkin(3) * (t13865 * t13894 + t13897 * t14083));
t13654 = g(1) * t13846 + (-g(2) * t13828 + g(3) * t13840) * t13852;
t13895 = sin(qJ(3,1));
t13898 = cos(qJ(3,1));
t14133 = t13846 * t13866;
t14136 = t13846 * t13861;
t14364 = ((((g(3) * t14136 + t13816) * t13834 + t13822 * (g(3) * t14133 - t14319)) * t13840 + ((-g(2) * t14136 + t13815) * t13828 - t13852 * t14322) * t13834 - ((g(2) * t14133 + t13814) * t13828 + t13852 * t14321) * t13822) * t13864 - t13654 * t13868) / ((-t13865 * t13898 + t13895 * t14083) * t14324 + pkin(3) * (t13865 * t13895 + t13898 * t14083));
t14363 = t13655 * t13864;
t14362 = t13656 * t13864;
t14361 = t13657 * t13864;
t14360 = t13658 * t13864;
t14359 = t13659 * t13864;
t14358 = t13660 * t13864;
t13869 = legFrame(6,3);
t13817 = sin(t13869);
t13829 = cos(t13869);
t13761 = t13817 * t13866 + t13829 * t13861;
t14357 = t13761 * t13868;
t13870 = legFrame(5,3);
t13818 = sin(t13870);
t13830 = cos(t13870);
t13762 = t13818 * t13866 + t13830 * t13861;
t14356 = t13762 * t13868;
t13871 = legFrame(4,3);
t13819 = sin(t13871);
t13831 = cos(t13871);
t13763 = t13819 * t13866 + t13831 * t13861;
t14355 = t13763 * t13868;
t13764 = t13820 * t13866 + t13832 * t13861;
t14354 = t13764 * t13868;
t13765 = t13821 * t13866 + t13833 * t13861;
t14353 = t13765 * t13868;
t13766 = t13822 * t13866 + t13834 * t13861;
t14352 = t13766 * t13868;
t13753 = t13867 * t14074 - t14081;
t13626 = t13753 * t13861 + t13866 * t14083;
t13641 = t13753 * t13866 - t13861 * t14083;
t13479 = t13626 * t13834 + t13641 * t13822;
t13485 = -t13626 * t13822 + t13641 * t13834;
t14339 = t13479 * t13840 + t13485 * t14183;
t13478 = t13626 * t13833 + t13641 * t13821;
t13484 = -t13626 * t13821 + t13641 * t13833;
t14338 = t13478 * t13839 + t13484 * t14186;
t13477 = t13626 * t13832 + t13641 * t13820;
t13483 = -t13626 * t13820 + t13641 * t13832;
t14337 = t13477 * t13838 + t13483 * t14189;
t13643 = t13776 * t13854 + t14102;
t13782 = t13853 * t13914 + t13856 * t13908;
t14161 = t13841 * t13861;
t13509 = t13643 * t14161 + t13782 * t13866;
t14158 = t13841 * t13866;
t13521 = t13643 * t14158 - t13782 * t13861;
t13414 = t13509 * t13817 - t13521 * t13829;
t13515 = t13643 * t13866 - t13782 * t14161;
t13527 = t13643 * t13861 + t13782 * t14158;
t13420 = t13515 * t13817 + t13527 * t13829;
t14336 = t13835 * (t13414 * t13855 + t13420 * t13858) - (t13414 * t13858 - t13420 * t13855) * t13823;
t13644 = t13777 * t13854 + t14101;
t13783 = t13853 * t13915 + t13856 * t13909;
t14156 = t13842 * t13861;
t13510 = t13644 * t14156 + t13783 * t13866;
t14153 = t13842 * t13866;
t13522 = t13644 * t14153 - t13783 * t13861;
t13415 = t13510 * t13818 - t13522 * t13830;
t13516 = t13644 * t13866 - t13783 * t14156;
t13528 = t13644 * t13861 + t13783 * t14153;
t13421 = t13516 * t13818 + t13528 * t13830;
t14335 = t13836 * (t13415 * t13855 + t13421 * t13858) - (t13415 * t13858 - t13421 * t13855) * t13824;
t13645 = t13778 * t13854 + t14100;
t13784 = t13853 * t13916 + t13856 * t13910;
t14151 = t13843 * t13861;
t13511 = t13645 * t14151 + t13784 * t13866;
t14148 = t13843 * t13866;
t13523 = t13645 * t14148 - t13784 * t13861;
t13416 = t13511 * t13819 - t13523 * t13831;
t13517 = t13645 * t13866 - t13784 * t14151;
t13529 = t13645 * t13861 + t13784 * t14148;
t13422 = t13517 * t13819 + t13529 * t13831;
t14334 = t13837 * (t13416 * t13855 + t13422 * t13858) - (t13416 * t13858 - t13422 * t13855) * t13825;
t13646 = t13779 * t13854 + t14099;
t13785 = t13853 * t13917 + t13856 * t13911;
t13512 = t13646 * t14146 + t13785 * t13866;
t13524 = t13646 * t14143 - t13785 * t13861;
t13417 = t13512 * t13820 - t13524 * t13832;
t13518 = t13646 * t13866 - t13785 * t14146;
t13530 = t13646 * t13861 + t13785 * t14143;
t13423 = t13518 * t13820 + t13530 * t13832;
t14333 = t13838 * (t13417 * t13855 + t13423 * t13858) - (t13417 * t13858 - t13423 * t13855) * t13826;
t13647 = t13780 * t13854 + t14098;
t13786 = t13853 * t13918 + t13856 * t13912;
t13513 = t13647 * t14141 + t13786 * t13866;
t13525 = t13647 * t14138 - t13786 * t13861;
t13418 = t13513 * t13821 - t13525 * t13833;
t13519 = t13647 * t13866 - t13786 * t14141;
t13531 = t13647 * t13861 + t13786 * t14138;
t13424 = t13519 * t13821 + t13531 * t13833;
t14332 = t13839 * (t13418 * t13855 + t13424 * t13858) - (t13418 * t13858 - t13424 * t13855) * t13827;
t13648 = t13781 * t13854 + t14097;
t13787 = t13853 * t13919 + t13856 * t13913;
t13514 = t13648 * t14136 + t13787 * t13866;
t13526 = t13648 * t14133 - t13787 * t13861;
t13419 = t13514 * t13822 - t13526 * t13834;
t13520 = t13648 * t13866 - t13787 * t14136;
t13532 = t13648 * t13861 + t13787 * t14133;
t13425 = t13520 * t13822 + t13532 * t13834;
t14331 = t13840 * (t13419 * t13855 + t13425 * t13858) - (t13419 * t13858 - t13425 * t13855) * t13828;
t13807 = g(2) * t14083;
t14071 = g(3) * t14083;
t14228 = t13753 * t13847;
t14234 = t13753 * t13841;
t13462 = g(1) * t14228 - (g(3) * t14234 - t13807) * t13835 + (g(2) * t14234 + t14071) * t13823;
t13716 = g(3) * t13753;
t14018 = t13847 * t14083;
t14042 = t13841 * t14083;
t14320 = g(2) * t13753;
t13468 = g(1) * t14018 - (g(3) * t14042 + t14320) * t13835 + (g(2) * t14042 - t13716) * t13823;
t13649 = g(1) * t13841 + (-g(2) * t13823 + g(3) * t13835) * t13847;
t13746 = t13864 * t13865 * t13867 + t13863 * t13868;
t14330 = t13817 * (t13462 * t13866 - t13861 * t13468) + t13829 * (t13861 * t13462 + t13468 * t13866) - t13746 * t13649;
t14227 = t13753 * t13848;
t14233 = t13753 * t13842;
t13463 = g(1) * t14227 - (g(3) * t14233 - t13807) * t13836 + (g(2) * t14233 + t14071) * t13824;
t14016 = t13848 * t14083;
t14038 = t13842 * t14083;
t13469 = g(1) * t14016 - (g(3) * t14038 + t14320) * t13836 + (g(2) * t14038 - t13716) * t13824;
t13650 = g(1) * t13842 + (-g(2) * t13824 + g(3) * t13836) * t13848;
t14329 = t13818 * (t13463 * t13866 - t13861 * t13469) + t13830 * (t13861 * t13463 + t13469 * t13866) - t13746 * t13650;
t14226 = t13753 * t13849;
t14232 = t13753 * t13843;
t13464 = g(1) * t14226 - (g(3) * t14232 - t13807) * t13837 + (g(2) * t14232 + t14071) * t13825;
t14014 = t13849 * t14083;
t14034 = t13843 * t14083;
t13470 = g(1) * t14014 - (g(3) * t14034 + t14320) * t13837 + (g(2) * t14034 - t13716) * t13825;
t13651 = g(1) * t13843 + (-g(2) * t13825 + g(3) * t13837) * t13849;
t14328 = t13819 * (t13464 * t13866 - t13861 * t13470) + t13831 * (t13861 * t13464 + t13470 * t13866) - t13746 * t13651;
t14225 = t13753 * t13850;
t14231 = t13753 * t13844;
t13465 = g(1) * t14225 - (g(3) * t14231 - t13807) * t13838 + (g(2) * t14231 + t14071) * t13826;
t14012 = t13850 * t14083;
t14030 = t13844 * t14083;
t13471 = g(1) * t14012 - (g(3) * t14030 + t14320) * t13838 + (g(2) * t14030 - t13716) * t13826;
t14327 = t13820 * (t13465 * t13866 - t13861 * t13471) + t13832 * (t13861 * t13465 + t13471 * t13866) - t13746 * t13652;
t14224 = t13753 * t13851;
t14230 = t13753 * t13845;
t13466 = g(1) * t14224 - (g(3) * t14230 - t13807) * t13839 + (g(2) * t14230 + t14071) * t13827;
t14010 = t13851 * t14083;
t14026 = t13845 * t14083;
t13472 = g(1) * t14010 - (g(3) * t14026 + t14320) * t13839 + (g(2) * t14026 - t13716) * t13827;
t14326 = t13821 * (t13466 * t13866 - t13861 * t13472) + t13833 * (t13861 * t13466 + t13472 * t13866) - t13746 * t13653;
t14223 = t13753 * t13852;
t14229 = t13753 * t13846;
t13467 = g(1) * t14223 - (g(3) * t14229 - t13807) * t13840 + (g(2) * t14229 + t14071) * t13828;
t14008 = t13852 * t14083;
t14022 = t13846 * t14083;
t13473 = g(1) * t14008 - (g(3) * t14022 + t14320) * t13840 + (g(2) * t14022 - t13716) * t13828;
t14325 = t13822 * (t13467 * t13866 - t13861 * t13473) + t13834 * (t13861 * t13467 + t13473 * t13866) - t13746 * t13654;
t14323 = g(1) * t13857;
t14318 = g(2) * t13865;
t14317 = g(3) * t13865;
t13859 = 0.1e1 / t13864;
t14316 = MDP(2) * t13859;
t13542 = t13646 * t13858 + t13785 * t13855;
t13548 = t13646 * t13855 - t13785 * t13858;
t13794 = pkin(3) * t13896 + t13893 * t14324;
t13797 = pkin(3) * t13893 - t13896 * t14324;
t13611 = t13794 * t14083 + t13797 * t13865;
t13608 = 0.1e1 / t13611;
t14315 = (((t13542 * t13861 - t13548 * t14143) * t13832 + t13820 * (t13542 * t13866 + t13548 * t14146)) * t13838 + ((t13542 * t14143 + t13548 * t13861) * t13832 + (-t13542 * t14146 + t13548 * t13866) * t13820) * t13826) * t13608;
t13539 = t13643 * t13858 + t13782 * t13855;
t13545 = t13643 * t13855 - t13782 * t13858;
t13881 = sin(qJ(3,6));
t13884 = cos(qJ(3,6));
t13788 = pkin(3) * t13884 + t13881 * t14324;
t13791 = pkin(3) * t13881 - t13884 * t14324;
t13605 = t13788 * t14083 + t13791 * t13865;
t13602 = 0.1e1 / t13605;
t14314 = (((t13539 * t13861 - t13545 * t14158) * t13829 + t13817 * (t13539 * t13866 + t13545 * t14161)) * t13835 + t13823 * ((t13539 * t14158 + t13545 * t13861) * t13829 + (-t13539 * t14161 + t13545 * t13866) * t13817)) * t13602;
t13540 = t13644 * t13858 + t13783 * t13855;
t13546 = t13644 * t13855 - t13783 * t13858;
t13882 = sin(qJ(3,5));
t13885 = cos(qJ(3,5));
t13789 = pkin(3) * t13885 + t13882 * t14324;
t13792 = pkin(3) * t13882 - t13885 * t14324;
t13606 = t13789 * t14083 + t13792 * t13865;
t13603 = 0.1e1 / t13606;
t14313 = (((t13540 * t13861 - t13546 * t14153) * t13830 + (t13540 * t13866 + t13546 * t14156) * t13818) * t13836 + ((t13540 * t14153 + t13546 * t13861) * t13830 + t13818 * (-t13540 * t14156 + t13546 * t13866)) * t13824) * t13603;
t13541 = t13645 * t13858 + t13784 * t13855;
t13547 = t13645 * t13855 - t13784 * t13858;
t13883 = sin(qJ(3,4));
t13886 = cos(qJ(3,4));
t13790 = pkin(3) * t13886 + t13883 * t14324;
t13793 = pkin(3) * t13883 - t13886 * t14324;
t13607 = t13790 * t14083 + t13793 * t13865;
t13604 = 0.1e1 / t13607;
t14312 = (((t13541 * t13861 - t13547 * t14148) * t13831 + (t13541 * t13866 + t13547 * t14151) * t13819) * t13837 + ((t13541 * t14148 + t13547 * t13861) * t13831 + t13819 * (-t13541 * t14151 + t13547 * t13866)) * t13825) * t13604;
t13543 = t13647 * t13858 + t13786 * t13855;
t13549 = t13647 * t13855 - t13786 * t13858;
t13795 = pkin(3) * t13897 + t13894 * t14324;
t13798 = pkin(3) * t13894 - t13897 * t14324;
t13612 = t13795 * t14083 + t13798 * t13865;
t13609 = 0.1e1 / t13612;
t14311 = (((t13543 * t13861 - t13549 * t14138) * t13833 + t13821 * (t13543 * t13866 + t13549 * t14141)) * t13839 + ((t13543 * t14138 + t13549 * t13861) * t13833 + (-t13543 * t14141 + t13549 * t13866) * t13821) * t13827) * t13609;
t13544 = t13648 * t13858 + t13787 * t13855;
t13550 = t13648 * t13855 - t13787 * t13858;
t13796 = pkin(3) * t13898 + t13895 * t14324;
t13799 = pkin(3) * t13895 - t13898 * t14324;
t13613 = t13796 * t14083 + t13799 * t13865;
t13610 = 0.1e1 / t13613;
t14310 = (((t13544 * t13861 - t13550 * t14133) * t13834 + t13822 * (t13544 * t13866 + t13550 * t14136)) * t13840 + t13828 * ((t13544 * t14133 + t13550 * t13861) * t13834 + t13822 * (-t13544 * t14136 + t13550 * t13866))) * t13610;
t14178 = t13835 * t13866;
t14179 = t13835 * t13861;
t14309 = ((t13655 * t14179 + t13866 * t14393) * t13829 - (-t13655 * t14178 + t13861 * t14393) * t13817) * t13602;
t14196 = t13823 * t13866;
t14197 = t13823 * t13861;
t14308 = ((-t13655 * t14197 - t13866 * t14394) * t13829 + (-t13655 * t14196 + t13861 * t14394) * t13817) * t13602;
t14175 = t13836 * t13866;
t14176 = t13836 * t13861;
t14307 = ((t13656 * t14176 + t13866 * t14391) * t13830 - (-t13656 * t14175 + t13861 * t14391) * t13818) * t13603;
t14193 = t13824 * t13866;
t14194 = t13824 * t13861;
t14306 = ((-t13656 * t14194 - t13866 * t14392) * t13830 + (-t13656 * t14193 + t13861 * t14392) * t13818) * t13603;
t14172 = t13837 * t13866;
t14173 = t13837 * t13861;
t14305 = ((t13657 * t14173 + t13866 * t14389) * t13831 - (-t13657 * t14172 + t13861 * t14389) * t13819) * t13604;
t14190 = t13825 * t13866;
t14191 = t13825 * t13861;
t14304 = ((-t13657 * t14191 - t13866 * t14390) * t13831 + (-t13657 * t14190 + t13861 * t14390) * t13819) * t13604;
t14169 = t13838 * t13866;
t14170 = t13838 * t13861;
t14303 = ((t13658 * t14170 + t13866 * t14387) * t13832 - (-t13658 * t14169 + t13861 * t14387) * t13820) * t13608;
t14187 = t13826 * t13866;
t14188 = t13826 * t13861;
t14302 = ((-t13658 * t14188 - t13866 * t14388) * t13832 + (-t13658 * t14187 + t13861 * t14388) * t13820) * t13608;
t14166 = t13839 * t13866;
t14167 = t13839 * t13861;
t14301 = ((t13659 * t14167 + t13866 * t14385) * t13833 - (-t13659 * t14166 + t13861 * t14385) * t13821) * t13609;
t14184 = t13827 * t13866;
t14185 = t13827 * t13861;
t14300 = ((-t13659 * t14185 - t13866 * t14386) * t13833 + (-t13659 * t14184 + t13861 * t14386) * t13821) * t13609;
t14163 = t13840 * t13866;
t14164 = t13840 * t13861;
t14299 = ((t13660 * t14164 + t13866 * t14383) * t13834 - (-t13660 * t14163 + t13861 * t14383) * t13822) * t13610;
t14181 = t13828 * t13866;
t14182 = t13828 * t13861;
t14298 = ((-t13660 * t14182 - t13866 * t14384) * t13834 + (-t13660 * t14181 + t13861 * t14384) * t13822) * t13610;
t14291 = ((((g(3) * t14161 + t13816) * t13829 + t13817 * (g(3) * t14158 - t14319)) * t13835 + ((-g(2) * t14161 + t13815) * t13823 - t13847 * t14322) * t13829 - ((g(2) * t14158 + t13814) * t13823 + t13847 * t14321) * t13817) * t13864 - t13649 * t13868) / (-(t13865 * t13884 - t13881 * t14083) * t14324 + pkin(3) * (t13865 * t13881 + t13884 * t14083));
t14290 = ((((g(3) * t14156 + t13816) * t13830 + t13818 * (g(3) * t14153 - t14319)) * t13836 + ((-g(2) * t14156 + t13815) * t13824 - t13848 * t14322) * t13830 - t13818 * ((g(2) * t14153 + t13814) * t13824 + t13848 * t14321)) * t13864 - t13650 * t13868) / (-(t13865 * t13885 - t13882 * t14083) * t14324 + pkin(3) * (t13865 * t13882 + t13885 * t14083));
t14289 = ((((g(3) * t14151 + t13816) * t13831 + t13819 * (g(3) * t14148 - t14319)) * t13837 + ((-g(2) * t14151 + t13815) * t13825 - t13849 * t14322) * t13831 - ((g(2) * t14148 + t13814) * t13825 + t13849 * t14321) * t13819) * t13864 - t13651 * t13868) / (-(t13865 * t13886 - t13883 * t14083) * t14324 + pkin(3) * (t13865 * t13883 + t13886 * t14083));
t13767 = -t13817 * t13861 + t13829 * t13866;
t14279 = (-t13761 * t13823 + t13767 * t14180) * t13602;
t13768 = -t13818 * t13861 + t13830 * t13866;
t14278 = (-t13762 * t13824 + t13768 * t14177) * t13603;
t13769 = -t13819 * t13861 + t13831 * t13866;
t14277 = (-t13763 * t13825 + t13769 * t14174) * t13604;
t13770 = -t13820 * t13861 + t13832 * t13866;
t14276 = (-t13764 * t13826 + t13770 * t14171) * t13608;
t13771 = -t13821 * t13861 + t13833 * t13866;
t14275 = (-t13765 * t13827 + t13771 * t14168) * t13609;
t13772 = -t13822 * t13861 + t13834 * t13866;
t14274 = (-t13766 * t13828 + t13772 * t14165) * t13610;
t14273 = (-t13761 * t13835 - t13767 * t14198) * t13602;
t14272 = (-t13762 * t13836 - t13768 * t14195) * t13603;
t14271 = (-t13763 * t13837 - t13769 * t14192) * t13604;
t14270 = (-t13764 * t13838 - t13770 * t14189) * t13608;
t14269 = (-t13765 * t13839 - t13771 * t14186) * t13609;
t14268 = (-t13766 * t13840 - t13772 * t14183) * t13610;
t14267 = t13626 * t13841;
t14266 = t13626 * t13842;
t14265 = t13626 * t13843;
t14264 = t13626 * t13844;
t14263 = t13626 * t13845;
t14262 = t13626 * t13846;
t14258 = t13641 * t13841;
t14257 = t13641 * t13842;
t14256 = t13641 * t13843;
t14255 = t13641 * t13844;
t14254 = t13641 * t13845;
t14253 = t13641 * t13846;
t14082 = t13860 * t13868;
t13744 = t13861 * t14082 - t13865 * t13866;
t14246 = t13744 * t13841;
t14245 = t13744 * t13842;
t14244 = t13744 * t13843;
t14243 = t13744 * t13844;
t14242 = t13744 * t13845;
t14241 = t13744 * t13846;
t13760 = t13860 * t14073 + t13861 * t13865;
t14222 = t13760 * t13841;
t14221 = t13760 * t13842;
t14220 = t13760 * t13843;
t14219 = t13760 * t13844;
t14218 = t13760 * t13845;
t14217 = t13760 * t13846;
t14216 = t13767 * t13847;
t14215 = t13768 * t13848;
t14214 = t13769 * t13849;
t14213 = t13770 * t13850;
t14212 = t13771 * t13851;
t14211 = t13772 * t13852;
t14210 = t13776 * t13868;
t14209 = t13777 * t13868;
t14208 = t13778 * t13868;
t14207 = t13779 * t13868;
t14206 = t13780 * t13868;
t14205 = t13781 * t13868;
t14204 = t13788 * t13867;
t14203 = t13789 * t13867;
t14202 = t13790 * t13867;
t14201 = t13794 * t13867;
t14200 = t13795 * t13867;
t14199 = t13796 * t13867;
t14162 = t13841 * t13860;
t14160 = t13841 * t13864;
t14159 = t13841 * t13865;
t14157 = t13842 * t13860;
t14155 = t13842 * t13864;
t14154 = t13842 * t13865;
t14152 = t13843 * t13860;
t14150 = t13843 * t13864;
t14149 = t13843 * t13865;
t14147 = t13844 * t13860;
t14145 = t13844 * t13864;
t14144 = t13844 * t13865;
t14142 = t13845 * t13860;
t14140 = t13845 * t13864;
t14139 = t13845 * t13865;
t14137 = t13846 * t13860;
t14135 = t13846 * t13864;
t14134 = t13846 * t13865;
t14132 = t13847 * t13865;
t14131 = t13848 * t13865;
t14130 = t13849 * t13865;
t14129 = t13850 * t13865;
t14128 = t13851 * t13865;
t14127 = t13852 * t13865;
t14126 = t13853 * t13855;
t14125 = t13853 * t13858;
t14118 = t13855 * t13856;
t14117 = t13855 * t13857;
t14104 = t13856 * t13858;
t14103 = t13857 * t13858;
t14084 = t13860 * t13864;
t14080 = t13864 * t13847;
t14079 = t13864 * t13848;
t14078 = t13864 * t13849;
t14077 = t13864 * t13850;
t14076 = t13864 * t13851;
t14075 = t13864 * t13852;
t14072 = g(2) * t14082;
t14070 = g(3) * t14082;
t14066 = t13602 * t13649 * t13859;
t14065 = t13602 * t14216;
t14064 = t13603 * t13650 * t13859;
t14063 = t13603 * t14215;
t14062 = t13604 * t13651 * t13859;
t14061 = t13604 * t14214;
t14060 = t13608 * t13652 * t13859;
t14059 = t13608 * t14213;
t14058 = t13609 * t13653 * t13859;
t14057 = t13609 * t14212;
t14056 = t13610 * t13654 * t13859;
t14055 = t13610 * t14211;
t14041 = t13841 * t14082;
t14040 = t13902 * t14160;
t14039 = t13841 * t14074;
t14037 = t13842 * t14082;
t14036 = t13903 * t14155;
t14035 = t13842 * t14074;
t14033 = t13843 * t14082;
t14032 = t13904 * t14150;
t14031 = t13843 * t14074;
t14029 = t13844 * t14082;
t14028 = t13905 * t14145;
t14027 = t13844 * t14074;
t14025 = t13845 * t14082;
t14024 = t13906 * t14140;
t14023 = t13845 * t14074;
t14021 = t13846 * t14082;
t14020 = t13907 * t14135;
t14019 = t13846 * t14074;
t14017 = t13847 * t14082;
t14015 = t13848 * t14082;
t14013 = t13849 * t14082;
t14011 = t13850 * t14082;
t14009 = t13851 * t14082;
t14007 = t13852 * t14082;
t14006 = t13868 * t14124;
t14005 = t13868 * t14123;
t14004 = t13868 * t14122;
t14003 = t13868 * t14121;
t14002 = t13868 * t14120;
t14001 = t13868 * t14119;
t13988 = t13823 * t14081;
t13987 = t13824 * t14081;
t13986 = t13825 * t14081;
t13985 = t13826 * t14081;
t13984 = t13827 * t14081;
t13983 = t13828 * t14081;
t13982 = t13835 * t14081;
t13981 = t13836 * t14081;
t13980 = t13837 * t14081;
t13979 = t13838 * t14081;
t13978 = t13839 * t14081;
t13977 = t13840 * t14081;
t13976 = t13817 * t14006;
t13975 = t13818 * t14005;
t13974 = t13819 * t14004;
t13973 = t13820 * t14003;
t13972 = t13821 * t14002;
t13971 = t13822 * t14001;
t13970 = t13829 * t14006;
t13969 = t13830 * t14005;
t13968 = t13831 * t14004;
t13967 = t13832 * t14003;
t13966 = t13833 * t14002;
t13965 = t13834 * t14001;
t13925 = g(1) * t14132 + (g(2) * t14159 + t14070) * t13823 + (-g(3) * t14159 + t14072) * t13835;
t13924 = g(1) * t14131 + (g(2) * t14154 + t14070) * t13824 + (-g(3) * t14154 + t14072) * t13836;
t13923 = g(1) * t14130 + (g(2) * t14149 + t14070) * t13825 + (-g(3) * t14149 + t14072) * t13837;
t13922 = g(1) * t14129 + (g(2) * t14144 + t14070) * t13826 + (-g(3) * t14144 + t14072) * t13838;
t13921 = g(1) * t14128 + (g(2) * t14139 + t14070) * t13827 + (-g(3) * t14139 + t14072) * t13839;
t13920 = g(1) * t14127 + (g(2) * t14134 + t14070) * t13828 + (-g(3) * t14134 + t14072) * t13840;
t13715 = t13840 * t14133 - t14182;
t13714 = t13828 * t14133 + t14164;
t13713 = t13839 * t14138 - t14185;
t13712 = t13827 * t14138 + t14167;
t13711 = t13838 * t14143 - t14188;
t13710 = t13826 * t14143 + t14170;
t13709 = t13837 * t14148 - t14191;
t13708 = t13825 * t14148 + t14173;
t13707 = t13836 * t14153 - t14194;
t13706 = t13824 * t14153 + t14176;
t13705 = t13835 * t14158 - t14197;
t13704 = t13823 * t14158 + t14179;
t13703 = t13840 * t14136 + t14181;
t13702 = -t13828 * t14136 + t14163;
t13701 = t13839 * t14141 + t14184;
t13700 = -t13827 * t14141 + t14166;
t13699 = t13838 * t14146 + t14187;
t13698 = -t13826 * t14146 + t14169;
t13697 = t13837 * t14151 + t14190;
t13696 = -t13825 * t14151 + t14172;
t13695 = t13836 * t14156 + t14193;
t13694 = -t13824 * t14156 + t14175;
t13693 = t13835 * t14161 + t14196;
t13692 = -t13823 * t14161 + t14178;
t13691 = -t13854 * t14104 + t14126;
t13690 = t13854 * t14125 + t14118;
t13689 = t13854 * t14118 + t14125;
t13688 = -t13854 * t14126 + t14104;
t13667 = g(1) * t13854 - g(2) * t14117 + g(3) * t14103;
t13601 = t13846 * t14352 + t14075;
t13600 = t13845 * t14353 + t14076;
t13599 = t13844 * t14354 + t14077;
t13598 = t13843 * t14355 + t14078;
t13597 = t13842 * t14356 + t14079;
t13596 = t13841 * t14357 + t14080;
t13586 = -t13744 * t13822 + t13760 * t13834;
t13585 = -t13744 * t13821 + t13760 * t13833;
t13584 = -t13744 * t13820 + t13760 * t13832;
t13583 = -t13744 * t13819 + t13760 * t13831;
t13582 = -t13744 * t13818 + t13760 * t13830;
t13581 = -t13744 * t13817 + t13760 * t13829;
t13574 = t13744 * t13834 + t13760 * t13822;
t13573 = t13744 * t13833 + t13760 * t13821;
t13572 = t13744 * t13832 + t13760 * t13820;
t13571 = t13744 * t13831 + t13760 * t13819;
t13570 = t13744 * t13830 + t13760 * t13818;
t13569 = t13744 * t13829 + t13760 * t13817;
t13496 = g(2) * t13689 + g(3) * t13691 + t13856 * t14323;
t13495 = -t13688 * g(2) - t13690 * g(3) + t13853 * t14323;
t13494 = (-g(3) * t14021 - t14318) * t13840 + (g(2) * t14021 - t14317) * t13828 + g(1) * t14007;
t13493 = (-g(3) * t14025 - t14318) * t13839 + (g(2) * t14025 - t14317) * t13827 + g(1) * t14009;
t13492 = (-g(3) * t14029 - t14318) * t13838 + (g(2) * t14029 - t14317) * t13826 + g(1) * t14011;
t13491 = (-g(3) * t14033 - t14318) * t13837 + (g(2) * t14033 - t14317) * t13825 + g(1) * t14013;
t13490 = (-g(3) * t14037 - t14318) * t13836 + (g(2) * t14037 - t14317) * t13824 + g(1) * t14015;
t13489 = (-g(3) * t14041 - t14318) * t13835 + (g(2) * t14041 - t14317) * t13823 + g(1) * t14017;
t13488 = -t13639 * t13819 - t13640 * t13831;
t13487 = -t13639 * t13818 - t13640 * t13830;
t13486 = -t13639 * t13817 - t13640 * t13829;
t13482 = -t13626 * t13819 + t13641 * t13831;
t13481 = -t13626 * t13818 + t13641 * t13830;
t13480 = -t13626 * t13817 + t13641 * t13829;
t13476 = t13626 * t13831 + t13641 * t13819;
t13475 = t13626 * t13830 + t13641 * t13818;
t13474 = t13626 * t13829 + t13641 * t13817;
t13461 = t13574 * t13840 + t13586 * t14183;
t13460 = t13573 * t13839 + t13585 * t14186;
t13459 = t13572 * t13838 + t13584 * t14189;
t13458 = t13571 * t13837 + t13583 * t14192;
t13457 = t13570 * t13836 + t13582 * t14195;
t13456 = t13569 * t13835 + t13581 * t14198;
t13455 = -t13574 * t13828 + t13586 * t14165;
t13454 = -t13573 * t13827 + t13585 * t14168;
t13453 = -t13572 * t13826 + t13584 * t14171;
t13452 = -t13571 * t13825 + t13583 * t14174;
t13451 = -t13570 * t13824 + t13582 * t14177;
t13450 = -t13569 * t13823 + t13581 * t14180;
t13449 = t14371 * t14127 + (t13828 * t14082 - t13840 * t14134) * t13660;
t13448 = t14377 * t14127 + t13660 * (t13828 * t14134 + t13840 * t14082);
t13447 = t14372 * t14128 + t13659 * (t13827 * t14082 - t13839 * t14139);
t13446 = t14378 * t14128 + t13659 * (t13827 * t14139 + t13839 * t14082);
t13445 = t14373 * t14129 + t13658 * (t13826 * t14082 - t13838 * t14144);
t13444 = t14379 * t14129 + t13658 * (t13826 * t14144 + t13838 * t14082);
t13443 = t14374 * t14130 + t13657 * (t13825 * t14082 - t13837 * t14149);
t13442 = t14375 * t14131 + t13656 * (t13824 * t14082 - t13836 * t14154);
t13441 = t14381 * t14131 + t13656 * (t13824 * t14154 + t13836 * t14082);
t13440 = t14376 * t14132 + t13655 * (t13823 * t14082 - t13835 * t14159);
t13439 = t14382 * t14132 + t13655 * (t13823 * t14159 + t13835 * t14082);
t13438 = t14380 * t14130 + t13657 * (t13825 * t14149 + t13837 * t14082);
t13437 = t14377 * t14007 + (t13828 * t14021 - t13840 * t13865) * t13660;
t13436 = t14378 * t14009 + t13659 * (t13827 * t14025 - t13839 * t13865);
t13435 = t14379 * t14011 + t13658 * (t13826 * t14029 - t13838 * t13865);
t13434 = t14381 * t14015 + t13656 * (t13824 * t14037 - t13836 * t13865);
t13433 = t14382 * t14017 + t13655 * (t13823 * t14041 - t13835 * t13865);
t13432 = t14371 * t14007 - t13660 * (t13828 * t13865 + t13840 * t14021);
t13431 = t14372 * t14009 - t13659 * (t13827 * t13865 + t13839 * t14025);
t13430 = t14373 * t14011 - t13658 * (t13826 * t13865 + t13838 * t14029);
t13429 = t14374 * t14013 - t13657 * (t13825 * t13865 + t13837 * t14033);
t13428 = t14375 * t14015 - (t13824 * t13865 + t13836 * t14037) * t13656;
t13427 = t14376 * t14017 - t13655 * (t13823 * t13865 + t13835 * t14041);
t13426 = t14380 * t14013 + t13657 * (t13825 * t14033 - t13837 * t13865);
t13413 = (t13766 * t13865 + t13772 * t14082) * t14199 + (-t13766 * t13860 + t13772 * t14074) * t13799;
t13412 = (t13765 * t13865 + t13771 * t14082) * t14200 + (-t13765 * t13860 + t13771 * t14074) * t13798;
t13411 = (t13764 * t13865 + t13770 * t14082) * t14201 + (-t13764 * t13860 + t13770 * t14074) * t13797;
t13410 = (t13763 * t13865 + t13769 * t14082) * t14202 + (-t13763 * t13860 + t13769 * t14074) * t13793;
t13409 = (t13762 * t13865 + t13768 * t14082) * t14203 + (-t13762 * t13860 + t13768 * t14074) * t13792;
t13408 = (t13761 * t13865 + t13767 * t14082) * t14204 + (-t13761 * t13860 + t13767 * t14074) * t13791;
t13407 = -t14377 * t14008 + ((-t13828 * t14137 + t13840 * t14074) * t13867 - t13977) * t13660;
t13406 = -t14378 * t14010 + t13659 * ((-t13827 * t14142 + t13839 * t14074) * t13867 - t13978);
t13405 = -t14379 * t14012 + t13658 * ((-t13826 * t14147 + t13838 * t14074) * t13867 - t13979);
t13404 = -t14381 * t14016 + t13656 * ((-t13824 * t14157 + t13836 * t14074) * t13867 - t13981);
t13403 = -t14382 * t14018 + t13655 * ((-t13823 * t14162 + t13835 * t14074) * t13867 - t13982);
t13402 = -t14371 * t14008 + ((t13828 * t14074 + t13840 * t14137) * t13867 - t13983) * t13660;
t13401 = -t14372 * t14010 + t13659 * ((t13827 * t14074 + t13839 * t14142) * t13867 - t13984);
t13400 = -t14373 * t14012 + t13658 * ((t13826 * t14074 + t13838 * t14147) * t13867 - t13985);
t13399 = -t14374 * t14014 + t13657 * ((t13825 * t14074 + t13837 * t14152) * t13867 - t13986);
t13398 = -t14380 * t14014 + t13657 * ((-t13825 * t14152 + t13837 * t14074) * t13867 - t13980);
t13397 = -t14375 * t14016 + t13656 * ((t13824 * t14074 + t13836 * t14157) * t13867 - t13987);
t13396 = -t14376 * t14018 + t13655 * ((t13823 * t14074 + t13835 * t14162) * t13867 - t13988);
t13395 = t13787 * t14075 + (-t13520 * t13834 + t13532 * t13822) * t13868;
t13394 = t13786 * t14076 + (-t13519 * t13833 + t13531 * t13821) * t13868;
t13393 = t13785 * t14077 + (-t13518 * t13832 + t13530 * t13820) * t13868;
t13392 = t13784 * t14078 + (-t13517 * t13831 + t13529 * t13819) * t13868;
t13391 = t13783 * t14079 + (-t13516 * t13830 + t13528 * t13818) * t13868;
t13390 = t13782 * t14080 + (-t13515 * t13829 + t13527 * t13817) * t13868;
t13383 = t14371 * t14223 - ((-t13828 * t13860 + t13840 * t14019) * t13867 - t13846 * t13977) * t13660;
t13382 = t14373 * t14225 - t13658 * ((-t13826 * t13860 + t13838 * t14027) * t13867 - t13844 * t13979);
t13381 = t14379 * t14225 + t13658 * ((t13826 * t14027 + t13838 * t13860) * t13867 - t13844 * t13985);
t13380 = t14380 * t14226 + ((t13825 * t14031 + t13837 * t13860) * t13867 - t13843 * t13986) * t13657;
t13379 = t14375 * t14227 - ((-t13824 * t13860 + t13836 * t14035) * t13867 - t13842 * t13981) * t13656;
t13378 = t14376 * t14228 - t13655 * ((-t13823 * t13860 + t13835 * t14039) * t13867 - t13841 * t13982);
t13377 = t14377 * t14223 + ((t13828 * t14019 + t13840 * t13860) * t13867 - t13846 * t13983) * t13660;
t13376 = t14372 * t14224 - t13659 * ((-t13827 * t13860 + t13839 * t14023) * t13867 - t13845 * t13978);
t13375 = t14378 * t14224 + ((t13827 * t14023 + t13839 * t13860) * t13867 - t13845 * t13984) * t13659;
t13374 = t14374 * t14226 - t13657 * ((-t13825 * t13860 + t13837 * t14031) * t13867 - t13843 * t13980);
t13373 = t14381 * t14227 + ((t13824 * t14035 + t13836 * t13860) * t13867 - t13842 * t13987) * t13656;
t13372 = t14382 * t14228 + t13655 * ((t13823 * t14039 + t13835 * t13860) * t13867 - t13841 * t13988);
t13371 = t14371 * t14211 - (-t13703 * t13822 + t13715 * t13834) * t13660;
t13370 = t14372 * t14212 - (-t13701 * t13821 + t13713 * t13833) * t13659;
t13369 = t14373 * t14213 - (-t13699 * t13820 + t13711 * t13832) * t13658;
t13368 = t14374 * t14214 - (-t13697 * t13819 + t13709 * t13831) * t13657;
t13367 = t14375 * t14215 - (-t13695 * t13818 + t13707 * t13830) * t13656;
t13366 = t14376 * t14216 - (-t13693 * t13817 + t13705 * t13829) * t13655;
t13365 = t14377 * t14211 + t13660 * (t13702 * t13822 + t13714 * t13834);
t13364 = t14378 * t14212 + t13659 * (t13700 * t13821 + t13712 * t13833);
t13363 = t14379 * t14213 + t13658 * (t13698 * t13820 + t13710 * t13832);
t13362 = t14380 * t14214 + t13657 * (t13696 * t13819 + t13708 * t13831);
t13361 = t14381 * t14215 + t13656 * (t13694 * t13818 + t13706 * t13830);
t13360 = t14382 * t14216 + t13655 * (t13692 * t13817 + t13704 * t13829);
t13359 = t13648 * t14075 + (t13514 * t13834 + t13526 * t13822) * t13868;
t13358 = t13647 * t14076 + (t13513 * t13833 + t13525 * t13821) * t13868;
t13357 = t13646 * t14077 + (t13512 * t13832 + t13524 * t13820) * t13868;
t13356 = t13645 * t14078 + (t13511 * t13831 + t13523 * t13819) * t13868;
t13355 = t13644 * t14079 + (t13510 * t13830 + t13522 * t13818) * t13868;
t13354 = t13643 * t14080 + (t13509 * t13829 + t13521 * t13817) * t13868;
t13353 = t13476 * t13837 + t13482 * t14192;
t13352 = t13475 * t13836 + t13481 * t14195;
t13351 = t13474 * t13835 + t13480 * t14198;
t13350 = -t13479 * t13828 + t13485 * t14165;
t13349 = -t13478 * t13827 + t13484 * t14168;
t13348 = -t13477 * t13826 + t13483 * t14171;
t13347 = -t13476 * t13825 + t13482 * t14174;
t13346 = -t13475 * t13824 + t13481 * t14177;
t13345 = -t13474 * t13823 + t13480 * t14180;
t13344 = (t13601 * t13860 - t13772 * t14134) * t14199 + t13799 * (t13601 * t13865 + t13772 * t14137);
t13343 = (t13600 * t13860 - t13771 * t14139) * t14200 + t13798 * (t13600 * t13865 + t13771 * t14142);
t13342 = (t13599 * t13860 - t13770 * t14144) * t14201 + t13797 * (t13599 * t13865 + t13770 * t14147);
t13341 = (t13598 * t13860 - t13769 * t14149) * t14202 + t13793 * (t13598 * t13865 + t13769 * t14152);
t13340 = (t13597 * t13860 - t13768 * t14154) * t14203 + t13792 * (t13597 * t13865 + t13768 * t14157);
t13339 = (t13596 * t13860 - t13767 * t14159) * t14204 + t13791 * (t13596 * t13865 + t13767 * t14162);
t13314 = (t13861 * t13494 - t13866 * t13920) * t13834 + (t13494 * t13866 + t13861 * t13920) * t13822 - t13654 * t14084;
t13313 = (t13861 * t13493 - t13866 * t13921) * t13833 + (t13493 * t13866 + t13861 * t13921) * t13821 - t13653 * t14084;
t13312 = (t13861 * t13492 - t13866 * t13922) * t13832 + (t13492 * t13866 + t13861 * t13922) * t13820 - t13652 * t14084;
t13311 = (t13861 * t13491 - t13866 * t13923) * t13831 + (t13491 * t13866 + t13861 * t13923) * t13819 - t13651 * t14084;
t13310 = (t13861 * t13490 - t13866 * t13924) * t13830 + (t13490 * t13866 + t13861 * t13924) * t13818 - t13650 * t14084;
t13309 = (t13861 * t13489 - t13866 * t13925) * t13829 + (t13489 * t13866 + t13861 * t13925) * t13817 - t13649 * t14084;
t13296 = (-t13840 * t14358 + t14352 * t14371) * t13852 + (-t13858 * t14020 + (-t13703 * t13834 - t13715 * t13822) * t14205) * t13857 + t13703 * t13965 + t13715 * t13971 - t13580 * t14135;
t13295 = (t13828 * t14358 + t14352 * t14377) * t13852 + (t13855 * t14020 + (-t13702 * t13834 + t13714 * t13822) * t14205) * t13857 + t13702 * t13965 - t13714 * t13971 - t13568 * t14135;
t13294 = (-t13839 * t14359 + t14353 * t14372) * t13851 + (-t13858 * t14024 + (-t13701 * t13833 - t13713 * t13821) * t14206) * t13857 + t13701 * t13966 + t13713 * t13972 - t13579 * t14140;
t13293 = (t13827 * t14359 + t14353 * t14378) * t13851 + (t13855 * t14024 + (-t13700 * t13833 + t13712 * t13821) * t14206) * t13857 + t13700 * t13966 - t13712 * t13972 - t13567 * t14140;
t13292 = (-t13838 * t14360 + t14354 * t14373) * t13850 + (-t13858 * t14028 + (-t13699 * t13832 - t13711 * t13820) * t14207) * t13857 + t13699 * t13967 + t13711 * t13973 - t13578 * t14145;
t13291 = (t13826 * t14360 + t14354 * t14379) * t13850 + (t13855 * t14028 + (-t13698 * t13832 + t13710 * t13820) * t14207) * t13857 + t13698 * t13967 - t13710 * t13973 - t13566 * t14145;
t13290 = (-t13837 * t14361 + t14355 * t14374) * t13849 + (-t13858 * t14032 + (-t13697 * t13831 - t13709 * t13819) * t14208) * t13857 + t13697 * t13968 + t13709 * t13974 - t13577 * t14150;
t13289 = (t13825 * t14361 + t14355 * t14380) * t13849 + (t13855 * t14032 + (-t13696 * t13831 + t13708 * t13819) * t14208) * t13857 + t13696 * t13968 - t13708 * t13974 - t13565 * t14150;
t13288 = (-t13836 * t14362 + t14356 * t14375) * t13848 + (-t13858 * t14036 + (-t13695 * t13830 - t13707 * t13818) * t14209) * t13857 + t13695 * t13969 + t13707 * t13975 - t13576 * t14155;
t13287 = (t13824 * t14362 + t14356 * t14381) * t13848 + (t13855 * t14036 + (-t13694 * t13830 + t13706 * t13818) * t14209) * t13857 + t13694 * t13969 - t13706 * t13975 - t13564 * t14155;
t13286 = (-t13835 * t14363 + t14357 * t14376) * t13847 + (-t13858 * t14040 + (-t13693 * t13829 - t13705 * t13817) * t14210) * t13857 + t13693 * t13970 + t13705 * t13976 - t13575 * t14160;
t13285 = (t13823 * t14363 + t14357 * t14382) * t13847 + (t13855 * t14040 + (-t13692 * t13829 + t13704 * t13817) * t14210) * t13857 + t13692 * t13970 - t13704 * t13976 - t13563 * t14160;
t13284 = (t13437 * t13866 + t13448 * t13861) * t13834 + (-t13437 * t13861 + t13448 * t13866) * t13822;
t13283 = (t13436 * t13866 + t13446 * t13861) * t13833 + (-t13436 * t13861 + t13446 * t13866) * t13821;
t13282 = (t13435 * t13866 + t13444 * t13861) * t13832 + (-t13435 * t13861 + t13444 * t13866) * t13820;
t13281 = (t13434 * t13866 + t13441 * t13861) * t13830 + (-t13434 * t13861 + t13441 * t13866) * t13818;
t13280 = (t13433 * t13866 + t13439 * t13861) * t13829 + (-t13433 * t13861 + t13439 * t13866) * t13817;
t13279 = (t13432 * t13866 + t13449 * t13861) * t13834 + (-t13432 * t13861 + t13449 * t13866) * t13822;
t13278 = (t13431 * t13866 + t13447 * t13861) * t13833 + t13821 * (-t13431 * t13861 + t13447 * t13866);
t13277 = (t13430 * t13866 + t13445 * t13861) * t13832 + t13820 * (-t13430 * t13861 + t13445 * t13866);
t13276 = (t13429 * t13866 + t13443 * t13861) * t13831 + t13819 * (-t13429 * t13861 + t13443 * t13866);
t13275 = (t13428 * t13866 + t13442 * t13861) * t13830 + t13818 * (-t13428 * t13861 + t13442 * t13866);
t13274 = (t13427 * t13866 + t13440 * t13861) * t13829 + (-t13427 * t13861 + t13440 * t13866) * t13817;
t13273 = (t13426 * t13866 + t13438 * t13861) * t13831 + (-t13426 * t13861 + t13438 * t13866) * t13819;
t13266 = (t13383 * t13866 + t13402 * t13861) * t13834 + (-t13383 * t13861 + t13402 * t13866) * t13822;
t13265 = (t13382 * t13866 + t13400 * t13861) * t13832 + t13820 * (-t13382 * t13861 + t13400 * t13866);
t13264 = (t13381 * t13866 + t13405 * t13861) * t13832 + (-t13381 * t13861 + t13405 * t13866) * t13820;
t13263 = (t13380 * t13866 + t13398 * t13861) * t13831 + (-t13380 * t13861 + t13398 * t13866) * t13819;
t13262 = (t13379 * t13866 + t13397 * t13861) * t13830 + (-t13379 * t13861 + t13397 * t13866) * t13818;
t13261 = (t13378 * t13866 + t13396 * t13861) * t13829 + (-t13378 * t13861 + t13396 * t13866) * t13817;
t13260 = (t13377 * t13866 + t13407 * t13861) * t13834 + (-t13377 * t13861 + t13407 * t13866) * t13822;
t13259 = (t13376 * t13866 + t13401 * t13861) * t13833 + t13821 * (-t13376 * t13861 + t13401 * t13866);
t13258 = (t13375 * t13866 + t13406 * t13861) * t13833 + (-t13375 * t13861 + t13406 * t13866) * t13821;
t13257 = (t13374 * t13866 + t13399 * t13861) * t13831 + (-t13374 * t13861 + t13399 * t13866) * t13819;
t13256 = (t13373 * t13866 + t13404 * t13861) * t13830 + (-t13373 * t13861 + t13404 * t13866) * t13818;
t13255 = (t13372 * t13866 + t13403 * t13861) * t13829 + (-t13372 * t13861 + t13403 * t13866) * t13817;
t13254 = ((t13544 * t13744 - t13550 * t14217) * t13834 + t13822 * (t13544 * t13760 + t13550 * t14241)) * t13840 - ((-t13544 * t14217 - t13550 * t13744) * t13834 + (t13544 * t14241 - t13550 * t13760) * t13822) * t13828;
t13253 = ((t13543 * t13744 - t13549 * t14218) * t13833 + t13821 * (t13543 * t13760 + t13549 * t14242)) * t13839 - t13827 * ((-t13543 * t14218 - t13549 * t13744) * t13833 + (t13543 * t14242 - t13549 * t13760) * t13821);
t13252 = ((t13542 * t13744 - t13548 * t14219) * t13832 + t13820 * (t13542 * t13760 + t13548 * t14243)) * t13838 - ((-t13542 * t14219 - t13548 * t13744) * t13832 + t13820 * (t13542 * t14243 - t13548 * t13760)) * t13826;
t13251 = ((t13540 * t13744 - t13546 * t14221) * t13830 + t13818 * (t13540 * t13760 + t13546 * t14245)) * t13836 - ((-t13540 * t14221 - t13546 * t13744) * t13830 + t13818 * (t13540 * t14245 - t13546 * t13760)) * t13824;
t13250 = ((t13539 * t13744 - t13545 * t14222) * t13829 + t13817 * (t13539 * t13760 + t13545 * t14246)) * t13835 - ((-t13539 * t14222 - t13545 * t13744) * t13829 + t13817 * (t13539 * t14246 - t13545 * t13760)) * t13823;
t13249 = ((t13541 * t13744 - t13547 * t14220) * t13831 + t13819 * (t13541 * t13760 + t13547 * t14244)) * t13837 - ((-t13541 * t14220 - t13547 * t13744) * t13831 + t13819 * (t13541 * t14244 - t13547 * t13760)) * t13825;
t13248 = (-t13359 * t13855 + t13395 * t13858) * t13840 + t13828 * (t13359 * t13858 + t13395 * t13855);
t13247 = (-t13358 * t13855 + t13394 * t13858) * t13839 + t13827 * (t13358 * t13858 + t13394 * t13855);
t13246 = (-t13357 * t13855 + t13393 * t13858) * t13838 + t13826 * (t13357 * t13858 + t13393 * t13855);
t13245 = (-t13356 * t13855 + t13392 * t13858) * t13837 + t13825 * (t13356 * t13858 + t13392 * t13855);
t13244 = (-t13355 * t13855 + t13391 * t13858) * t13836 + t13824 * (t13355 * t13858 + t13391 * t13855);
t13243 = (-t13354 * t13855 + t13390 * t13858) * t13835 + t13823 * (t13354 * t13858 + t13390 * t13855);
t13242 = ((t13541 * t13626 - t13547 * t14256) * t13831 + (t13541 * t13641 + t13547 * t14265) * t13819) * t13837 - t13825 * ((-t13541 * t14256 - t13547 * t13626) * t13831 + t13819 * (t13541 * t14265 - t13547 * t13641));
t13241 = ((t13544 * t13626 - t13550 * t14253) * t13834 + t13822 * (t13544 * t13641 + t13550 * t14262)) * t13840 - ((-t13544 * t14253 - t13550 * t13626) * t13834 + t13822 * (t13544 * t14262 - t13550 * t13641)) * t13828;
t13240 = ((t13543 * t13626 - t13549 * t14254) * t13833 + t13821 * (t13543 * t13641 + t13549 * t14263)) * t13839 - t13827 * ((-t13543 * t14254 - t13549 * t13626) * t13833 + t13821 * (t13543 * t14263 - t13549 * t13641));
t13239 = ((t13542 * t13626 - t13548 * t14255) * t13832 + t13820 * (t13542 * t13641 + t13548 * t14264)) * t13838 - ((-t13542 * t14255 - t13548 * t13626) * t13832 + t13820 * (t13542 * t14264 - t13548 * t13641)) * t13826;
t13238 = ((t13540 * t13626 - t13546 * t14257) * t13830 + t13818 * (t13540 * t13641 + t13546 * t14266)) * t13836 - ((-t13540 * t14257 - t13546 * t13626) * t13830 + t13818 * (t13540 * t14266 - t13546 * t13641)) * t13824;
t13237 = ((t13539 * t13626 - t13545 * t14258) * t13829 + t13817 * (t13539 * t13641 + t13545 * t14267)) * t13835 - ((-t13539 * t14258 - t13545 * t13626) * t13829 + t13817 * (t13539 * t14267 - t13545 * t13641)) * t13823;
t13236 = -t13895 * t13314 + t13898 * t14325;
t13235 = -t13898 * t13314 - t13895 * t14325;
t13234 = -t13313 * t13894 + t13897 * t14326;
t13233 = -t13313 * t13897 - t13894 * t14326;
t13232 = -t13893 * t13312 + t13896 * t14327;
t13231 = -t13896 * t13312 - t13893 * t14327;
t13230 = -t13311 * t13883 + t13886 * t14328;
t13229 = -t13311 * t13886 - t13883 * t14328;
t13228 = -t13310 * t13882 + t13885 * t14329;
t13227 = -t13310 * t13885 - t13882 * t14329;
t13226 = -t13309 * t13881 + t13884 * t14330;
t13225 = -t13309 * t13884 - t13881 * t14330;
t1 = [(-t13226 * t14065 - t13228 * t14063 - t13230 * t14061 - t13232 * t14059 - t13234 * t14057 - t13236 * t14055) * MDP(4) + (-t13225 * t14065 - t13227 * t14063 - t13229 * t14061 - t13231 * t14059 - t13233 * t14057 - t13235 * t14055) * MDP(5) + (-t13854 * t13667 + (-t13495 * t13853 - t13496 * t13856) * t13857) * MDP(15) + (t13852 * (-(t13586 * t13898 - t13895 * t14368) * t14324 + pkin(3) * (t13895 * t13586 + t13898 * t14368)) * t14364 + t13851 * (-(t13585 * t13897 - t13894 * t14369) * t14324 + pkin(3) * (t13894 * t13585 + t13897 * t14369)) * t14365 + t13850 * (-(t13584 * t13896 - t13893 * t14370) * t14324 + pkin(3) * (t13893 * t13584 + t13896 * t14370)) * t14366 - t13849 * ((t13488 * t13883 + t13583 * t13886) * t14324 + (t13488 * t13886 - t13583 * t13883) * pkin(3)) * t14289 - t13848 * ((t13487 * t13882 + t13582 * t13885) * t14324 + pkin(3) * (t13487 * t13885 - t13582 * t13882)) * t14290 - t13847 * ((t13486 * t13881 + t13581 * t13884) * t14324 + pkin(3) * (t13486 * t13884 - t13581 * t13881)) * t14291) * t14316 + t14367 * (-((-(t13766 * t14082 - t13772 * t13865) * t14199 - t13799 * (t13766 * t14074 + t13772 * t13860)) * t13852 + t13613 * t14135) * t14056 - ((-(t13765 * t14082 - t13771 * t13865) * t14200 - t13798 * (t13765 * t14074 + t13771 * t13860)) * t13851 + t13612 * t14140) * t14058 - ((-(t13764 * t14082 - t13770 * t13865) * t14201 - t13797 * (t13764 * t14074 + t13770 * t13860)) * t13850 + t13611 * t14145) * t14060 - ((-(t13763 * t14082 - t13769 * t13865) * t14202 - t13793 * (t13763 * t14074 + t13769 * t13860)) * t13849 + t13607 * t14150) * t14062 - ((-(t13762 * t14082 - t13768 * t13865) * t14203 - t13792 * (t13762 * t14074 + t13768 * t13860)) * t13848 + t13606 * t14155) * t14064 - ((-(t13761 * t14082 - t13767 * t13865) * t14204 - t13791 * (t13761 * t14074 + t13767 * t13860)) * t13847 + t13605 * t14160) * t14066); (t13226 * t14273 + t13228 * t14272 + t13230 * t14271 + t13232 * t14270 + t13234 * t14269 + t13236 * t14268) * MDP(4) + (t13225 * t14273 + t13227 * t14272 + t13229 * t14271 + t13231 * t14270 + t13233 * t14269 + t13235 * t14268) * MDP(5) + (t13495 * t13688 - t13496 * t13689 + t13667 * t14117) * MDP(15) + ((-(t13461 * t13898 + t13895 * t14339) * t14324 + pkin(3) * (t13895 * t13461 - t13898 * t14339)) * t14364 + (-(t13460 * t13897 + t13894 * t14338) * t14324 + pkin(3) * (t13894 * t13460 - t13897 * t14338)) * t14365 + (-(t13459 * t13896 + t13893 * t14337) * t14324 + pkin(3) * (t13893 * t13459 - t13896 * t14337)) * t14366 + (-(t13353 * t13883 + t13458 * t13886) * t14324 - pkin(3) * (t13353 * t13886 - t13458 * t13883)) * t14289 + (-(t13352 * t13882 + t13457 * t13885) * t14324 - pkin(3) * (t13352 * t13885 - t13457 * t13882)) * t14290 + (-(t13351 * t13881 + t13456 * t13884) * t14324 - pkin(3) * (t13351 * t13884 - t13456 * t13881)) * t14291) * t14316 + t14367 * (-(-t13344 * t13828 + t13413 * t13840) * t14056 - (-t13343 * t13827 + t13412 * t13839) * t14058 - (-t13342 * t13826 + t13411 * t13838) * t14060 - (-t13341 * t13825 + t13410 * t13837) * t14062 - (-t13340 * t13824 + t13409 * t13836) * t14064 - (-t13339 * t13823 + t13408 * t13835) * t14066); (t13226 * t14279 + t13228 * t14278 + t13230 * t14277 + t13232 * t14276 + t13234 * t14275 + t13236 * t14274) * MDP(4) + (t13225 * t14279 + t13227 * t14278 + t13229 * t14277 + t13231 * t14276 + t13233 * t14275 + t13235 * t14274) * MDP(5) + (t13495 * t13690 - t13496 * t13691 - t13667 * t14103) * MDP(15) + (((t13350 * t13895 + t13455 * t13898) * t14324 - (-t13350 * t13898 + t13455 * t13895) * pkin(3)) * t14364 + ((t13349 * t13894 + t13454 * t13897) * t14324 - (-t13349 * t13897 + t13454 * t13894) * pkin(3)) * t14365 + ((t13348 * t13893 + t13453 * t13896) * t14324 - (-t13348 * t13896 + t13453 * t13893) * pkin(3)) * t14366 + ((t13347 * t13883 + t13452 * t13886) * t14324 + pkin(3) * (t13347 * t13886 - t13452 * t13883)) * t14289 + ((t13346 * t13882 + t13451 * t13885) * t14324 + pkin(3) * (t13346 * t13885 - t13451 * t13882)) * t14290 + ((t13345 * t13881 + t13450 * t13884) * t14324 + pkin(3) * (t13345 * t13884 - t13450 * t13881)) * t14291) * t14316 + t14367 * (-(t13344 * t13840 + t13413 * t13828) * t14056 - (t13343 * t13839 + t13412 * t13827) * t14058 - (t13342 * t13838 + t13411 * t13826) * t14060 - (t13341 * t13837 + t13410 * t13825) * t14062 - (t13340 * t13836 + t13409 * t13824) * t14064 - (t13339 * t13835 + t13408 * t13823) * t14066); (t13226 * t14314 + t13228 * t14313 + t13230 * t14312 + t13232 * t14315 + t13234 * t14311 + t13236 * t14310) * MDP(4) + (t13225 * t14314 + t13227 * t14313 + t13229 * t14312 + t13231 * t14315 + t13233 * t14311 + t13235 * t14310) * MDP(5) + (MDP(12) * t13495 + MDP(13) * t13496) * t13854 + ((-t13495 * t13856 + t13496 * t13853) * MDP(14) + (-MDP(12) * t13853 - MDP(13) * t13856) * t13667) * t13857 + (((t13241 * t13895 + t13254 * t13898) * t14324 + pkin(3) * (t13241 * t13898 - t13254 * t13895)) * t14364 + ((t13240 * t13894 + t13253 * t13897) * t14324 + pkin(3) * (t13240 * t13897 - t13253 * t13894)) * t14365 + ((t13239 * t13893 + t13252 * t13896) * t14324 + (t13239 * t13896 - t13252 * t13893) * pkin(3)) * t14366 + ((t13242 * t13883 + t13249 * t13886) * t14324 + pkin(3) * (t13242 * t13886 - t13249 * t13883)) * t14289 + ((t13238 * t13882 + t13251 * t13885) * t14324 + pkin(3) * (t13238 * t13885 - t13251 * t13882)) * t14290 + ((t13237 * t13881 + t13250 * t13884) * t14324 + pkin(3) * (t13237 * t13884 - t13250 * t13881)) * t14291) * t14316 + t14367 * (-((t13248 * t13860 - t13865 * t14331) * t14199 + t13799 * (t13248 * t13865 + t13860 * t14331)) * t14056 - ((t13247 * t13860 - t13865 * t14332) * t14200 + t13798 * (t13247 * t13865 + t13860 * t14332)) * t14058 - ((t13246 * t13860 - t13865 * t14333) * t14201 + t13797 * (t13246 * t13865 + t13860 * t14333)) * t14060 - ((t13245 * t13860 - t13865 * t14334) * t14202 + t13793 * (t13245 * t13865 + t13860 * t14334)) * t14062 - ((t13244 * t13860 - t13865 * t14335) * t14203 + t13792 * (t13244 * t13865 + t13860 * t14335)) * t14064 - ((t13243 * t13860 - t13865 * t14336) * t14204 + t13791 * (t13243 * t13865 + t13860 * t14336)) * t14066); (t13226 * t14308 + t13228 * t14306 + t13230 * t14304 + t13232 * t14302 + t13234 * t14300 + t13236 * t14298) * MDP(4) + (t13225 * t14308 + t13227 * t14306 + t13229 * t14304 + t13231 * t14302 + t13233 * t14300 + t13235 * t14298) * MDP(5) + (-t13495 * t14117 + t13667 * t13688) * MDP(12) + (-t13496 * t14117 - t13667 * t13689) * MDP(13) + (-t13495 * t13689 - t13496 * t13688) * MDP(14) + ((-(t13266 * t13895 + t13279 * t13898) * t14324 - pkin(3) * (t13266 * t13898 - t13279 * t13895)) * t14364 + (-(t13259 * t13894 + t13278 * t13897) * t14324 - (t13259 * t13897 - t13278 * t13894) * pkin(3)) * t14365 + (-(t13265 * t13893 + t13277 * t13896) * t14324 - pkin(3) * (t13265 * t13896 - t13277 * t13893)) * t14366 + (-(t13257 * t13883 + t13276 * t13886) * t14324 - pkin(3) * (t13257 * t13886 - t13276 * t13883)) * t14289 + (-(t13262 * t13882 + t13275 * t13885) * t14324 - pkin(3) * (t13262 * t13885 - t13275 * t13882)) * t14290 + (-(t13261 * t13881 + t13274 * t13884) * t14324 - (t13261 * t13884 - t13274 * t13881) * pkin(3)) * t14291) * t14316 + t14367 * (-(-(t13296 * t13860 - t13371 * t13865) * t14199 - t13799 * (t13296 * t13865 + t13371 * t13860)) * t14056 - (-(t13294 * t13860 - t13370 * t13865) * t14200 - t13798 * (t13294 * t13865 + t13370 * t13860)) * t14058 - (-(t13292 * t13860 - t13369 * t13865) * t14201 - t13797 * (t13292 * t13865 + t13369 * t13860)) * t14060 - (-(t13290 * t13860 - t13368 * t13865) * t14202 - t13793 * (t13290 * t13865 + t13368 * t13860)) * t14062 - (-(t13288 * t13860 - t13367 * t13865) * t14203 - t13792 * (t13288 * t13865 + t13367 * t13860)) * t14064 - (-(t13286 * t13860 - t13366 * t13865) * t14204 - t13791 * (t13286 * t13865 + t13366 * t13860)) * t14066); (t13226 * t14309 + t13228 * t14307 + t13230 * t14305 + t13232 * t14303 + t13234 * t14301 + t13236 * t14299) * MDP(4) + (t13225 * t14309 + t13227 * t14307 + t13229 * t14305 + t13231 * t14303 + t13233 * t14301 + t13235 * t14299) * MDP(5) + (t13495 * t14103 + t13667 * t13690) * MDP(12) + (t13496 * t14103 - t13667 * t13691) * MDP(13) + (-t13495 * t13691 - t13496 * t13690) * MDP(14) + (((t13260 * t13895 + t13284 * t13898) * t14324 + pkin(3) * (t13260 * t13898 - t13284 * t13895)) * t14364 + ((t13258 * t13894 + t13283 * t13897) * t14324 + pkin(3) * (t13258 * t13897 - t13283 * t13894)) * t14365 + ((t13264 * t13893 + t13282 * t13896) * t14324 + (t13264 * t13896 - t13282 * t13893) * pkin(3)) * t14366 + ((t13263 * t13883 + t13273 * t13886) * t14324 + pkin(3) * (t13263 * t13886 - t13273 * t13883)) * t14289 + ((t13256 * t13882 + t13281 * t13885) * t14324 + pkin(3) * (t13256 * t13885 - t13281 * t13882)) * t14290 + ((t13255 * t13881 + t13280 * t13884) * t14324 + pkin(3) * (t13255 * t13884 - t13280 * t13881)) * t14291) * t14316 + t14367 * (-((t13295 * t13860 - t13365 * t13865) * t14199 + (t13295 * t13865 + t13365 * t13860) * t13799) * t14056 - ((t13293 * t13860 - t13364 * t13865) * t14200 + (t13293 * t13865 + t13364 * t13860) * t13798) * t14058 - ((t13291 * t13860 - t13363 * t13865) * t14201 + (t13291 * t13865 + t13363 * t13860) * t13797) * t14060 - ((t13289 * t13860 - t13362 * t13865) * t14202 + (t13289 * t13865 + t13362 * t13860) * t13793) * t14062 - ((t13287 * t13860 - t13361 * t13865) * t14203 + (t13287 * t13865 + t13361 * t13860) * t13792) * t14064 - ((t13285 * t13860 - t13360 * t13865) * t14204 + (t13285 * t13865 + t13360 * t13860) * t13791) * t14066);];
taugX  = t1;
