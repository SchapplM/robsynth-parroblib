% Calculate minimal parameter regressor of inverse dynamics forces for
% P6PPRRRR3V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d3,d4,theta1,theta2]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [15x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PPRRRR3V2G1P1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [6x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-16 22:25
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(15,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [15 1]), ...
  'P6PPRRRR3V2G1P1A0_invdyn_para_pf_mdp: MDP has to be [15x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-16 22:08:11
% EndTime: 2019-05-16 22:12:06
% DurationCPUTime: 287.54s
% Computational Cost: add. (372516->2197), mult. (846588->4029), div. (5940->19), fcn. (717774->64), ass. (0->1278)
t8250 = sin(pkin(9));
t8254 = cos(pkin(10));
t8255 = cos(pkin(9));
t8249 = sin(pkin(10));
t8258 = cos(pkin(4));
t8586 = t8249 * t8258;
t8103 = t8250 * t8586 - t8254 * t8255;
t8575 = t8255 * t8258;
t8107 = t8249 * t8575 + t8250 * t8254;
t8259 = legFrame(6,3);
t8205 = sin(t8259);
t8217 = cos(t8259);
t7864 = -t8103 * t8205 + t8107 * t8217;
t8277 = legFrame(6,2);
t8236 = cos(t8277);
t8271 = sin(qJ(3,6));
t8274 = cos(qJ(3,6));
t8954 = pkin(8) * sin(pkin(6));
t8257 = cos(pkin(5));
t8576 = t8254 * t8258;
t8252 = sin(pkin(5));
t8253 = sin(pkin(4));
t8579 = t8252 * t8253;
t7936 = (t8249 * t8255 + t8250 * t8576) * t8257 - t8250 * t8579;
t7937 = (t8249 * t8250 - t8254 * t8575) * t8257 + t8255 * t8579;
t9020 = t7936 * t8205 + t7937 * t8217;
t9084 = t8236 * (pkin(3) * (t8271 * t7864 + t8274 * t9020) - (t7864 * t8274 - t8271 * t9020) * t8954);
t8260 = legFrame(5,3);
t8206 = sin(t8260);
t8218 = cos(t8260);
t7865 = -t8103 * t8206 + t8107 * t8218;
t8278 = legFrame(5,2);
t8237 = cos(t8278);
t8272 = sin(qJ(3,5));
t8275 = cos(qJ(3,5));
t9019 = t7936 * t8206 + t7937 * t8218;
t9083 = t8237 * (pkin(3) * (t8272 * t7865 + t8275 * t9019) - (t7865 * t8275 - t8272 * t9019) * t8954);
t8261 = legFrame(4,3);
t8207 = sin(t8261);
t8219 = cos(t8261);
t7866 = -t8103 * t8207 + t8107 * t8219;
t8279 = legFrame(4,2);
t8238 = cos(t8279);
t8273 = sin(qJ(3,4));
t8276 = cos(qJ(3,4));
t9018 = t7936 * t8207 + t7937 * t8219;
t9082 = t8238 * (pkin(3) * (t8273 * t7866 + t8276 * t9018) - (t7866 * t8276 - t8273 * t9018) * t8954);
t8301 = xP(6);
t8242 = sin(t8301);
t8315 = koppelP(1,2);
t8245 = cos(t8301);
t8321 = koppelP(1,1);
t8618 = t8245 * t8321;
t8143 = t8242 * t8315 - t8618;
t8302 = xP(5);
t8246 = cos(t8302);
t8243 = sin(t8302);
t8309 = koppelP(1,3);
t8642 = t8243 * t8309;
t7975 = t8143 * t8246 - t8642;
t8149 = t8242 * t8321 + t8245 * t8315;
t8303 = xP(4);
t8247 = cos(t8303);
t8072 = t8247 * t8149;
t8244 = sin(t8303);
t8295 = xDP(6);
t8296 = xDP(5);
t8601 = t8247 * t8296;
t8608 = t8246 * t8309;
t8377 = t8143 * t8243 + t8608;
t7766 = -t8377 * t8244 + t8072;
t8297 = xDP(4);
t9075 = t8297 * t7766;
t7614 = -(t8072 * t8243 - t8143 * t8244) * t8295 - t7975 * t8601 - t9075;
t8314 = koppelP(2,2);
t8320 = koppelP(2,1);
t8619 = t8245 * t8320;
t8142 = t8242 * t8314 - t8619;
t8308 = koppelP(2,3);
t8643 = t8243 * t8308;
t7974 = t8142 * t8246 - t8643;
t8148 = t8242 * t8320 + t8245 * t8314;
t8071 = t8247 * t8148;
t8609 = t8246 * t8308;
t8378 = t8142 * t8243 + t8609;
t7765 = -t8378 * t8244 + t8071;
t9074 = t8297 * t7765;
t7612 = -(t8071 * t8243 - t8142 * t8244) * t8295 - t7974 * t8601 - t9074;
t8313 = koppelP(3,2);
t8319 = koppelP(3,1);
t8620 = t8245 * t8319;
t8141 = t8242 * t8313 - t8620;
t8307 = koppelP(3,3);
t8644 = t8243 * t8307;
t7973 = t8141 * t8246 - t8644;
t8147 = t8242 * t8319 + t8245 * t8313;
t8070 = t8247 * t8147;
t8610 = t8246 * t8307;
t8379 = t8141 * t8243 + t8610;
t7764 = -t8379 * t8244 + t8070;
t9073 = t8297 * t7764;
t7610 = -(t8070 * t8243 - t8141 * t8244) * t8295 - t7973 * t8601 - t9073;
t8312 = koppelP(4,2);
t8318 = koppelP(4,1);
t8621 = t8245 * t8318;
t8140 = t8242 * t8312 - t8621;
t8306 = koppelP(4,3);
t8645 = t8243 * t8306;
t7972 = t8140 * t8246 - t8645;
t8146 = t8242 * t8318 + t8245 * t8312;
t8069 = t8247 * t8146;
t8611 = t8246 * t8306;
t8380 = t8140 * t8243 + t8611;
t7763 = -t8380 * t8244 + t8069;
t9072 = t8297 * t7763;
t7608 = -(t8069 * t8243 - t8140 * t8244) * t8295 - t7972 * t8601 - t9072;
t8311 = koppelP(5,2);
t8317 = koppelP(5,1);
t8622 = t8245 * t8317;
t8139 = t8242 * t8311 - t8622;
t8305 = koppelP(5,3);
t8646 = t8243 * t8305;
t7971 = t8139 * t8246 - t8646;
t8145 = t8242 * t8317 + t8245 * t8311;
t8068 = t8247 * t8145;
t8612 = t8246 * t8305;
t8381 = t8139 * t8243 + t8612;
t7762 = -t8381 * t8244 + t8068;
t9071 = t8297 * t7762;
t7606 = -(t8068 * t8243 - t8139 * t8244) * t8295 - t7971 * t8601 - t9071;
t8310 = koppelP(6,2);
t8316 = koppelP(6,1);
t8623 = t8245 * t8316;
t8138 = t8242 * t8310 - t8623;
t8304 = koppelP(6,3);
t8647 = t8243 * t8304;
t7970 = t8138 * t8246 - t8647;
t8144 = t8242 * t8316 + t8245 * t8310;
t8067 = t8247 * t8144;
t8613 = t8246 * t8304;
t8382 = t8138 * t8243 + t8613;
t7761 = -t8382 * t8244 + t8067;
t9070 = t8297 * t7761;
t7604 = -(t8067 * t8243 - t8138 * t8244) * t8295 - t7970 * t8601 - t9070;
t8230 = sin(t8277);
t8265 = legFrame(6,1);
t8211 = sin(t8265);
t8223 = cos(t8265);
t8423 = g(2) * t8211 - g(3) * t8223;
t9069 = -t8230 * g(1) + t8236 * t8423;
t8231 = sin(t8278);
t8266 = legFrame(5,1);
t8212 = sin(t8266);
t8224 = cos(t8266);
t8422 = g(2) * t8212 - g(3) * t8224;
t9068 = -t8231 * g(1) + t8237 * t8422;
t8232 = sin(t8279);
t8267 = legFrame(4,1);
t8213 = sin(t8267);
t8225 = cos(t8267);
t8421 = g(2) * t8213 - g(3) * t8225;
t9067 = -t8232 * g(1) + t8238 * t8421;
t8280 = legFrame(3,2);
t8233 = sin(t8280);
t8239 = cos(t8280);
t8268 = legFrame(3,1);
t8214 = sin(t8268);
t8226 = cos(t8268);
t8420 = g(2) * t8214 - g(3) * t8226;
t9066 = -t8233 * g(1) + t8239 * t8420;
t8281 = legFrame(2,2);
t8234 = sin(t8281);
t8240 = cos(t8281);
t8269 = legFrame(2,1);
t8215 = sin(t8269);
t8227 = cos(t8269);
t8419 = g(2) * t8215 - g(3) * t8227;
t9065 = -t8234 * g(1) + t8240 * t8419;
t8282 = legFrame(1,2);
t8235 = sin(t8282);
t8241 = cos(t8282);
t8270 = legFrame(1,1);
t8216 = sin(t8270);
t8228 = cos(t8270);
t8418 = g(2) * t8216 - g(3) * t8228;
t9064 = -t8235 * g(1) + t8241 * t8418;
t8574 = t8257 * t8258;
t8106 = t8254 * t8574 - t8579;
t8587 = t8249 * t8257;
t7935 = t8106 * t8250 + t8255 * t8587;
t7938 = t8106 * t8255 - t8250 * t8587;
t7701 = t7935 * t8219 + t7938 * t8207;
t7707 = -t7935 * t8207 + t7938 * t8219;
t8723 = t8213 * t8232;
t7536 = t7701 * t8225 + t7707 * t8723;
t7854 = t8103 * t8219 + t8107 * t8207;
t7674 = t7854 * t8225 + t7866 * t8723;
t9063 = pkin(3) * (-t7536 * t8276 + t8273 * t7674) - (t7536 * t8273 + t7674 * t8276) * t8954;
t7700 = t7935 * t8218 + t7938 * t8206;
t7706 = -t7935 * t8206 + t7938 * t8218;
t8726 = t8212 * t8231;
t7535 = t7700 * t8224 + t7706 * t8726;
t7853 = t8103 * t8218 + t8107 * t8206;
t7673 = t7853 * t8224 + t7865 * t8726;
t9062 = pkin(3) * (-t7535 * t8275 + t8272 * t7673) - (t7535 * t8272 + t7673 * t8275) * t8954;
t7699 = t7935 * t8217 + t7938 * t8205;
t7705 = -t7935 * t8205 + t7938 * t8217;
t8729 = t8211 * t8230;
t7534 = t7699 * t8223 + t7705 * t8729;
t7852 = t8103 * t8217 + t8107 * t8205;
t7672 = t7852 * t8223 + t7864 * t8729;
t9061 = pkin(3) * (-t7534 * t8274 + t8271 * t7672) - (t7534 * t8271 + t7672 * t8274) * t8954;
t8711 = t8223 * t8230;
t8594 = t8247 * t8316;
t8600 = t8247 * t8310;
t8632 = t8244 * t8316;
t8638 = t8244 * t8310;
t7858 = -(t8243 * t8594 - t8638) * t8245 + t8242 * (t8243 * t8600 + t8632);
t9036 = t8247 * t8613 + t7858;
t9060 = -t7970 * t8711 + t8236 * t9036;
t7846 = (t8243 * t8632 + t8600) * t8245 - (t8243 * t8638 - t8594) * t8242;
t9042 = -t8244 * t8613 + t7846;
t9059 = t7970 * t8729 + t8236 * t9042;
t8708 = t8224 * t8231;
t8593 = t8247 * t8317;
t8599 = t8247 * t8311;
t8631 = t8244 * t8317;
t8637 = t8244 * t8311;
t7859 = -(t8243 * t8593 - t8637) * t8245 + t8242 * (t8243 * t8599 + t8631);
t9035 = t8247 * t8612 + t7859;
t9058 = -t7971 * t8708 + t8237 * t9035;
t7847 = (t8243 * t8631 + t8599) * t8245 - (t8243 * t8637 - t8593) * t8242;
t9041 = -t8244 * t8612 + t7847;
t9057 = t7971 * t8726 + t8237 * t9041;
t8705 = t8225 * t8232;
t8592 = t8247 * t8318;
t8598 = t8247 * t8312;
t8630 = t8244 * t8318;
t8636 = t8244 * t8312;
t7860 = -(t8243 * t8592 - t8636) * t8245 + t8242 * (t8243 * t8598 + t8630);
t9034 = t8247 * t8611 + t7860;
t9056 = -t7972 * t8705 + t8238 * t9034;
t7848 = (t8243 * t8630 + t8598) * t8245 - (t8243 * t8636 - t8592) * t8242;
t9040 = -t8244 * t8611 + t7848;
t9055 = t7972 * t8723 + t8238 * t9040;
t8702 = t8226 * t8233;
t8591 = t8247 * t8319;
t8597 = t8247 * t8313;
t8629 = t8244 * t8319;
t8635 = t8244 * t8313;
t7861 = -(t8243 * t8591 - t8635) * t8245 + t8242 * (t8243 * t8597 + t8629);
t9033 = t8247 * t8610 + t7861;
t9054 = -t7973 * t8702 + t8239 * t9033;
t8720 = t8214 * t8233;
t7849 = (t8243 * t8629 + t8597) * t8245 - (t8243 * t8635 - t8591) * t8242;
t9039 = -t8244 * t8610 + t7849;
t9053 = t7973 * t8720 + t8239 * t9039;
t8699 = t8227 * t8234;
t8590 = t8247 * t8320;
t8596 = t8247 * t8314;
t8628 = t8244 * t8320;
t8634 = t8244 * t8314;
t7862 = -(t8243 * t8590 - t8634) * t8245 + t8242 * (t8243 * t8596 + t8628);
t9032 = t8247 * t8609 + t7862;
t9052 = -t7974 * t8699 + t8240 * t9032;
t8717 = t8215 * t8234;
t7850 = (t8243 * t8628 + t8596) * t8245 - (t8243 * t8634 - t8590) * t8242;
t9038 = -t8244 * t8609 + t7850;
t9051 = t7974 * t8717 + t8240 * t9038;
t8696 = t8228 * t8235;
t8589 = t8247 * t8321;
t8595 = t8247 * t8315;
t8627 = t8244 * t8321;
t8633 = t8244 * t8315;
t7863 = -(t8243 * t8589 - t8633) * t8245 + t8242 * (t8243 * t8595 + t8627);
t9031 = t8247 * t8608 + t7863;
t9050 = -t7975 * t8696 + t8241 * t9031;
t8714 = t8216 * t8235;
t7851 = (t8243 * t8627 + t8595) * t8245 - (t8243 * t8633 - t8589) * t8242;
t9037 = -t8244 * t8608 + t7851;
t9049 = t7975 * t8714 + t8241 * t9037;
t8060 = t8244 * t8149;
t9030 = t8377 * t8247 + t8060;
t8059 = t8244 * t8148;
t9029 = t8378 * t8247 + t8059;
t8058 = t8244 * t8147;
t9028 = t8379 * t8247 + t8058;
t8057 = t8244 * t8146;
t9027 = t8380 * t8247 + t8057;
t8056 = t8244 * t8145;
t9026 = t8381 * t8247 + t8056;
t8055 = t8244 * t8144;
t9025 = t8382 * t8247 + t8055;
t8639 = t8244 * t8296;
t8815 = t9030 * t8297;
t7613 = -(t8060 * t8243 + t8143 * t8247) * t8295 - t7975 * t8639 - t8815;
t8816 = t9029 * t8297;
t7611 = -(t8059 * t8243 + t8142 * t8247) * t8295 - t7974 * t8639 - t8816;
t8817 = t9028 * t8297;
t7609 = -(t8058 * t8243 + t8141 * t8247) * t8295 - t7973 * t8639 - t8817;
t8818 = t9027 * t8297;
t7607 = -(t8057 * t8243 + t8140 * t8247) * t8295 - t7972 * t8639 - t8818;
t8819 = t9026 * t8297;
t7605 = -(t8056 * t8243 + t8139 * t8247) * t8295 - t7971 * t8639 - t8819;
t8820 = t9025 * t8297;
t7603 = -(t8055 * t8243 + t8138 * t8247) * t8295 - t7970 * t8639 - t8820;
t8285 = xDDP(4);
t8567 = t8295 * t8296;
t9024 = t8246 * t8285 + t8567;
t8262 = legFrame(3,3);
t8208 = sin(t8262);
t8220 = cos(t8262);
t9017 = t7936 * t8208 + t7937 * t8220;
t8263 = legFrame(2,3);
t8209 = sin(t8263);
t8221 = cos(t8263);
t9016 = t7936 * t8209 + t7937 * t8221;
t8264 = legFrame(1,3);
t8210 = sin(t8264);
t8222 = cos(t8264);
t9015 = t7936 * t8210 + t7937 * t8222;
t8170 = t8243 * t8297 + t8295;
t8404 = t8242 * t8170;
t7804 = -t8170 * t8623 + t8297 * t8613 + t8310 * t8404;
t8299 = xDP(2);
t8436 = -t8243 * t8295 - t8297;
t8547 = t8296 * t8316;
t8553 = t8296 * t8310;
t8559 = t8296 * t8304;
t8566 = t8295 * t8316;
t8348 = (t8246 * t8547 + t8310 * t8436) * t8245 - (t8242 * t8566 - t8559) * t8243 - (t8246 * t8553 + t8297 * t8316) * t8242;
t7585 = t7804 * t8247 - t8244 * t8348 - t8299;
t8298 = xDP(3);
t7591 = t7804 * t8244 + t8247 * t8348 - t8298;
t8300 = xDP(1);
t8607 = t8246 * t8310;
t7462 = -((-t8243 * t8547 - t8295 * t8607) * t8245 + t8246 * t8559 + t8300 + (t8243 * t8553 - t8246 * t8566) * t8242) * t8236 + (t7585 * t8211 - t7591 * t8223) * t8230;
t7498 = t7585 * t8223 + t7591 * t8211;
t7354 = (t7462 * t8255 + t7498 * t8250) * t8217 + t8205 * (-t7462 * t8250 + t7498 * t8255);
t8157 = pkin(3) * t8274 + t8271 * t8954;
t8160 = pkin(3) * t8271 - t8274 * t8954;
t7913 = t8157 * t8587 + t8160 * t8254;
t8910 = t7354 ^ 2 / t7913 ^ 2;
t7805 = -t8170 * t8622 + t8297 * t8612 + t8311 * t8404;
t8546 = t8296 * t8317;
t8552 = t8296 * t8311;
t8558 = t8296 * t8305;
t8565 = t8295 * t8317;
t8347 = (t8246 * t8546 + t8311 * t8436) * t8245 - (t8242 * t8565 - t8558) * t8243 - (t8246 * t8552 + t8297 * t8317) * t8242;
t7586 = t7805 * t8247 - t8244 * t8347 - t8299;
t7592 = t7805 * t8244 + t8247 * t8347 - t8298;
t8606 = t8246 * t8311;
t7463 = -((-t8243 * t8546 - t8295 * t8606) * t8245 + t8246 * t8558 + t8300 + (t8243 * t8552 - t8246 * t8565) * t8242) * t8237 + (t7586 * t8212 - t7592 * t8224) * t8231;
t7499 = t7586 * t8224 + t7592 * t8212;
t7355 = (t7463 * t8255 + t7499 * t8250) * t8218 + t8206 * (-t7463 * t8250 + t7499 * t8255);
t8158 = pkin(3) * t8275 + t8272 * t8954;
t8161 = pkin(3) * t8272 - t8275 * t8954;
t7914 = t8158 * t8587 + t8161 * t8254;
t8908 = t7355 ^ 2 / t7914 ^ 2;
t7806 = -t8170 * t8621 + t8297 * t8611 + t8312 * t8404;
t8545 = t8296 * t8318;
t8551 = t8296 * t8312;
t8557 = t8296 * t8306;
t8564 = t8295 * t8318;
t8346 = (t8246 * t8545 + t8312 * t8436) * t8245 - (t8242 * t8564 - t8557) * t8243 - (t8246 * t8551 + t8297 * t8318) * t8242;
t7587 = t7806 * t8247 - t8244 * t8346 - t8299;
t7593 = t7806 * t8244 + t8247 * t8346 - t8298;
t8605 = t8246 * t8312;
t7464 = -((-t8243 * t8545 - t8295 * t8605) * t8245 + t8246 * t8557 + t8300 + (t8243 * t8551 - t8246 * t8564) * t8242) * t8238 + (t7587 * t8213 - t7593 * t8225) * t8232;
t7500 = t7587 * t8225 + t7593 * t8213;
t7356 = (t7464 * t8255 + t7500 * t8250) * t8219 + t8207 * (-t7464 * t8250 + t7500 * t8255);
t8159 = pkin(3) * t8276 + t8273 * t8954;
t8162 = pkin(3) * t8273 - t8276 * t8954;
t7915 = t8159 * t8587 + t8162 * t8254;
t8906 = t7356 ^ 2 / t7915 ^ 2;
t7807 = -t8170 * t8620 + t8297 * t8610 + t8313 * t8404;
t8544 = t8296 * t8319;
t8550 = t8296 * t8313;
t8556 = t8296 * t8307;
t8563 = t8295 * t8319;
t8345 = (t8246 * t8544 + t8313 * t8436) * t8245 - (t8242 * t8563 - t8556) * t8243 - (t8246 * t8550 + t8297 * t8319) * t8242;
t7588 = t7807 * t8247 - t8244 * t8345 - t8299;
t7594 = t7807 * t8244 + t8247 * t8345 - t8298;
t8604 = t8246 * t8313;
t7465 = -((-t8243 * t8544 - t8295 * t8604) * t8245 + t8246 * t8556 + t8300 + (t8243 * t8550 - t8246 * t8563) * t8242) * t8239 + (t7588 * t8214 - t7594 * t8226) * t8233;
t7501 = t7588 * t8226 + t7594 * t8214;
t7357 = (t7465 * t8255 + t7501 * t8250) * t8220 + t8208 * (-t7465 * t8250 + t7501 * t8255);
t8289 = sin(qJ(3,3));
t8292 = cos(qJ(3,3));
t8163 = pkin(3) * t8292 + t8289 * t8954;
t8166 = pkin(3) * t8289 - t8292 * t8954;
t7926 = t8163 * t8587 + t8166 * t8254;
t8904 = t7357 ^ 2 / t7926 ^ 2;
t7808 = -t8170 * t8619 + t8297 * t8609 + t8314 * t8404;
t8543 = t8296 * t8320;
t8549 = t8296 * t8314;
t8555 = t8296 * t8308;
t8562 = t8295 * t8320;
t8344 = (t8246 * t8543 + t8314 * t8436) * t8245 - (t8242 * t8562 - t8555) * t8243 - (t8246 * t8549 + t8297 * t8320) * t8242;
t7589 = t7808 * t8247 - t8244 * t8344 - t8299;
t7595 = t7808 * t8244 + t8247 * t8344 - t8298;
t8603 = t8246 * t8314;
t7466 = -((-t8243 * t8543 - t8295 * t8603) * t8245 + t8246 * t8555 + t8300 + (t8243 * t8549 - t8246 * t8562) * t8242) * t8240 + (t7589 * t8215 - t7595 * t8227) * t8234;
t7502 = t7589 * t8227 + t7595 * t8215;
t7358 = (t7466 * t8255 + t7502 * t8250) * t8221 + t8209 * (-t7466 * t8250 + t7502 * t8255);
t8290 = sin(qJ(3,2));
t8293 = cos(qJ(3,2));
t8164 = pkin(3) * t8293 + t8290 * t8954;
t8167 = pkin(3) * t8290 - t8293 * t8954;
t7927 = t8164 * t8587 + t8167 * t8254;
t8902 = t7358 ^ 2 / t7927 ^ 2;
t7809 = -t8170 * t8618 + t8297 * t8608 + t8315 * t8404;
t8542 = t8296 * t8321;
t8548 = t8296 * t8315;
t8554 = t8296 * t8309;
t8561 = t8295 * t8321;
t8343 = (t8246 * t8542 + t8315 * t8436) * t8245 - (t8242 * t8561 - t8554) * t8243 - (t8246 * t8548 + t8297 * t8321) * t8242;
t7590 = t7809 * t8247 - t8244 * t8343 - t8299;
t7596 = t7809 * t8244 + t8247 * t8343 - t8298;
t8602 = t8246 * t8315;
t7467 = -((-t8243 * t8542 - t8295 * t8602) * t8245 + t8246 * t8554 + t8300 + (t8243 * t8548 - t8246 * t8561) * t8242) * t8241 + (t7590 * t8216 - t7596 * t8228) * t8235;
t7503 = t7590 * t8228 + t7596 * t8216;
t7359 = (t7467 * t8255 + t7503 * t8250) * t8222 + t8210 * (-t7467 * t8250 + t7503 * t8255);
t8291 = sin(qJ(3,1));
t8294 = cos(qJ(3,1));
t8165 = pkin(3) * t8294 + t8291 * t8954;
t8168 = pkin(3) * t8291 - t8294 * t8954;
t7928 = t8165 * t8587 + t8168 * t8254;
t8900 = t7359 ^ 2 / t7928 ^ 2;
t9011 = t7970 * t8253;
t9010 = t7971 * t8253;
t9009 = t7972 * t8253;
t9008 = t7973 * t8253;
t9007 = t7974 * t8253;
t9006 = t7975 * t8253;
t8108 = t8205 * t8255 + t8217 * t8250;
t9005 = t8108 * t8258;
t8109 = t8206 * t8255 + t8218 * t8250;
t9004 = t8109 * t8258;
t8110 = t8207 * t8255 + t8219 * t8250;
t9003 = t8110 * t8258;
t8111 = t8208 * t8255 + t8220 * t8250;
t9002 = t8111 * t8258;
t8112 = t8209 * t8255 + t8221 * t8250;
t9001 = t8112 * t8258;
t8113 = t8210 * t8255 + t8222 * t8250;
t9000 = t8113 * t8258;
t8284 = xDDP(5);
t8615 = t8246 * t8295;
t8648 = t8242 * t8296;
t7723 = -t8242 * t9024 + (t8243 * t8648 - t8245 * t8615) * t8297 + t8245 * t8284;
t8614 = t8246 * t8297;
t8054 = t8245 * t8614 + t8648;
t7940 = t8054 * t8170;
t7685 = t7723 - t7940;
t8624 = t8245 * t8296;
t8052 = t8242 * t8614 - t8624;
t7902 = t8052 * t8054;
t8283 = xDDP(6);
t8560 = t8296 * t8297;
t8045 = t8243 * t8285 + t8246 * t8560 + t8283;
t8993 = -t7902 + t8045;
t8992 = t7940 + t7723;
t7724 = (-t8242 * t8615 - t8243 * t8624) * t8297 + t8242 * t8284 + t9024 * t8245;
t7941 = t8052 * t8170;
t7691 = -t7941 - t7724;
t8991 = -t7941 + t7724;
t7720 = t8045 + t7902;
t7704 = t7935 * t8222 + t7938 * t8210;
t7710 = -t7935 * t8210 + t7938 * t8222;
t8972 = t7704 * t8228 + t7710 * t8714;
t7703 = t7935 * t8221 + t7938 * t8209;
t7709 = -t7935 * t8209 + t7938 * t8221;
t8971 = t7703 * t8227 + t7709 * t8717;
t7702 = t7935 * t8220 + t7938 * t8208;
t7708 = -t7935 * t8208 + t7938 * t8220;
t8970 = t7702 * t8226 + t7708 * t8720;
t7528 = -t7699 * t8211 + t7705 * t8711;
t7666 = -t7852 * t8211 + t7864 * t8711;
t8969 = pkin(3) * (t7528 * t8274 - t7666 * t8271) + (t7528 * t8271 + t7666 * t8274) * t8954;
t7529 = -t7700 * t8212 + t7706 * t8708;
t7667 = -t7853 * t8212 + t7865 * t8708;
t8968 = pkin(3) * (t7529 * t8275 - t7667 * t8272) + (t7529 * t8272 + t7667 * t8275) * t8954;
t7530 = -t7701 * t8213 + t7707 * t8705;
t7668 = -t7854 * t8213 + t7866 * t8705;
t8967 = pkin(3) * (t7530 * t8276 - t7668 * t8273) + (t7530 * t8273 + t7668 * t8276) * t8954;
t8692 = t8230 * t8250;
t7737 = t8144 * t8255 + t8382 * t8692;
t8689 = t8230 * t8255;
t7749 = -t8144 * t8250 + t8382 * t8689;
t7630 = t7737 * t8205 - t7749 * t8217;
t7743 = -t8144 * t8692 + t8255 * t8382;
t7755 = t8144 * t8689 + t8250 * t8382;
t7636 = t7743 * t8205 + t7755 * t8217;
t8966 = t8223 * (t7630 * t8244 + t7636 * t8247) - (t7630 * t8247 - t7636 * t8244) * t8211;
t8687 = t8231 * t8250;
t7738 = t8145 * t8255 + t8381 * t8687;
t8684 = t8231 * t8255;
t7750 = -t8145 * t8250 + t8381 * t8684;
t7631 = t7738 * t8206 - t7750 * t8218;
t7744 = -t8145 * t8687 + t8255 * t8381;
t7756 = t8145 * t8684 + t8250 * t8381;
t7637 = t7744 * t8206 + t7756 * t8218;
t8965 = t8224 * (t7631 * t8244 + t7637 * t8247) - (t7631 * t8247 - t7637 * t8244) * t8212;
t8682 = t8232 * t8250;
t7739 = t8146 * t8255 + t8380 * t8682;
t8679 = t8232 * t8255;
t7751 = -t8146 * t8250 + t8380 * t8679;
t7632 = t7739 * t8207 - t7751 * t8219;
t7745 = -t8146 * t8682 + t8255 * t8380;
t7757 = t8146 * t8679 + t8250 * t8380;
t7638 = t7745 * t8207 + t7757 * t8219;
t8964 = t8225 * (t7632 * t8244 + t7638 * t8247) - (t7632 * t8247 - t7638 * t8244) * t8213;
t8677 = t8233 * t8250;
t7740 = t8147 * t8255 + t8379 * t8677;
t8674 = t8233 * t8255;
t7752 = -t8147 * t8250 + t8379 * t8674;
t7633 = t7740 * t8208 - t7752 * t8220;
t7746 = -t8147 * t8677 + t8255 * t8379;
t7758 = t8147 * t8674 + t8250 * t8379;
t7639 = t7746 * t8208 + t7758 * t8220;
t8963 = t8226 * (t7633 * t8244 + t7639 * t8247) - (t7633 * t8247 - t7639 * t8244) * t8214;
t8672 = t8234 * t8250;
t7741 = t8148 * t8255 + t8378 * t8672;
t8669 = t8234 * t8255;
t7753 = -t8148 * t8250 + t8378 * t8669;
t7634 = t7741 * t8209 - t7753 * t8221;
t7747 = -t8148 * t8672 + t8255 * t8378;
t7759 = t8148 * t8669 + t8250 * t8378;
t7640 = t7747 * t8209 + t7759 * t8221;
t8962 = t8227 * (t7634 * t8244 + t7640 * t8247) - (t7634 * t8247 - t7640 * t8244) * t8215;
t8667 = t8235 * t8250;
t7742 = t8149 * t8255 + t8377 * t8667;
t8664 = t8235 * t8255;
t7754 = -t8149 * t8250 + t8377 * t8664;
t7635 = t7742 * t8210 - t7754 * t8222;
t7748 = -t8149 * t8667 + t8255 * t8377;
t7760 = t8149 * t8664 + t8250 * t8377;
t7641 = t7748 * t8210 + t7760 * t8222;
t8961 = t8228 * (t7635 * t8244 + t7641 * t8247) - (t7635 * t8247 - t7641 * t8244) * t8216;
t7996 = -t8243 * t8601 - t8244 * t8614;
t7997 = t8243 * t8639 - t8247 * t8614;
t8288 = xDDP(1);
t7372 = t8288 + (-t7761 * t8244 + t8247 * t9025) * t8284 + (-t7761 * t7996 + t7997 * t9025) * t8295 + ((-t7604 - t9070) * t8247 + (-t7603 - t8820) * t8244) * t8296 + ((-t7761 * t8247 - t8244 * t9025) * t8283 + (-t7603 * t8247 + t7604 * t8244) * t8295) * t8246;
t7798 = t8144 * t8615 - t8296 * t8382;
t7948 = -t8242 * t8607 + t8246 * t8623 + t8647;
t8286 = xDDP(3);
t8376 = t8246 * t8283 + t8560;
t8335 = -t7997 * t8295 + t8244 * t8376 - t8247 * t8284;
t8349 = t8243 * t8283 + t8246 * t8567 + t8285;
t8640 = t8244 * t8246;
t7378 = t8286 + t7603 * t8297 + t7798 * t8601 + (t7603 * t8243 - t7798 * t8640) * t8295 + t8349 * t7761 + t8335 * t7948;
t8287 = xDDP(2);
t8336 = t7996 * t8295 + t8244 * t8284 + t8247 * t8376;
t8617 = t8246 * t8247;
t7384 = t8287 + t7604 * t8297 - t7798 * t8639 + (t7604 * t8243 - t7798 * t8617) * t8295 - t8349 * t9025 + t8336 * t7948;
t8248 = 0.1e1 / t8253;
t8411 = 0.1e1 / ((-t8254 * t8274 + t8271 * t8587) * t8954 + pkin(3) * (t8254 * t8271 + t8274 * t8587));
t8442 = (t7372 * t9084 + t8969 * t7378 + t9061 * t7384) * t8411 * t8248;
t8104 = -t8254 * t8579 + t8574;
t8256 = cos(pkin(6));
t8322 = pkin(8) ^ 2;
t8185 = -t8256 ^ 2 * t8322 + pkin(3) ^ 2 + t8322;
t8511 = t8104 * t8185 * t8248;
t7904 = 0.1e1 / t7913;
t8909 = t7904 * t8910;
t7282 = -t8511 * t8909 + t8442;
t8663 = t8236 * t8253;
t7895 = t8230 * t9005 + t8663;
t8114 = -t8205 * t8250 + t8217 * t8255;
t8690 = t8230 * t8254;
t8693 = t8230 * t8249;
t8736 = t8157 * t8257;
t7522 = (t7895 * t8249 - t8114 * t8690) * t8736 + t8160 * (t7895 * t8254 + t8114 * t8693);
t7624 = (t8108 * t8254 + t8114 * t8586) * t8736 + (-t8108 * t8249 + t8114 * t8576) * t8160;
t7468 = t7522 * t8223 + t7624 * t8211;
t7469 = -t7522 * t8211 + t7624 * t8223;
t8691 = t8230 * t8253;
t7516 = (-(t8108 * t8586 - t8114 * t8254) * t8736 - t8160 * (t8108 * t8576 + t8114 * t8249)) * t8236 + t7913 * t8691;
t8342 = (t7372 * t7516 + t7378 * t7468 + t7384 * t7469) * t7904;
t8730 = t8185 * t8257;
t7294 = (t8730 * t8909 + t8342) * t8248 + t9069;
t7960 = g(1) * t8236 + t8230 * t8423;
t8151 = g(2) * t8223 + g(3) * t8211;
t7678 = t7960 * t8106 + t8151 * t8587;
t7693 = -t7960 * t8587 + t8106 * t8151;
t8577 = t8254 * t8257;
t8578 = t8252 * t8258;
t8356 = t8253 * t8577 + t8578;
t8960 = t7294 * t8356 + t8205 * (t7678 * t8255 + t7693 * t8250) + t8217 * (t7678 * t8250 - t7693 * t8255) + t8252 * t7282;
t7373 = t8288 + (-t7762 * t8244 + t8247 * t9026) * t8284 + (-t7762 * t7996 + t7997 * t9026) * t8295 + ((-t7606 - t9071) * t8247 + (-t7605 - t8819) * t8244) * t8296 + ((-t7762 * t8247 - t8244 * t9026) * t8283 + (-t7605 * t8247 + t7606 * t8244) * t8295) * t8246;
t7799 = t8145 * t8615 - t8296 * t8381;
t7949 = -t8242 * t8606 + t8246 * t8622 + t8646;
t7379 = t8286 + t7605 * t8297 + t7799 * t8601 + (t7605 * t8243 - t7799 * t8640) * t8295 + t8349 * t7762 + t8335 * t7949;
t7385 = t8287 + t7606 * t8297 - t7799 * t8639 + (t7606 * t8243 - t7799 * t8617) * t8295 - t8349 * t9026 + t8336 * t7949;
t8410 = 0.1e1 / ((-t8254 * t8275 + t8272 * t8587) * t8954 + pkin(3) * (t8254 * t8272 + t8275 * t8587));
t8441 = (t7373 * t9083 + t8968 * t7379 + t9062 * t7385) * t8410 * t8248;
t7907 = 0.1e1 / t7914;
t8907 = t7907 * t8908;
t7283 = -t8511 * t8907 + t8441;
t8661 = t8237 * t8253;
t7896 = t8231 * t9004 + t8661;
t8115 = -t8206 * t8250 + t8218 * t8255;
t8685 = t8231 * t8254;
t8688 = t8231 * t8249;
t8735 = t8158 * t8257;
t7523 = (t7896 * t8249 - t8115 * t8685) * t8735 + t8161 * (t7896 * t8254 + t8115 * t8688);
t7625 = (t8109 * t8254 + t8115 * t8586) * t8735 + (-t8109 * t8249 + t8115 * t8576) * t8161;
t7470 = t7523 * t8224 + t7625 * t8212;
t7471 = -t7523 * t8212 + t7625 * t8224;
t8686 = t8231 * t8253;
t7517 = (-(t8109 * t8586 - t8115 * t8254) * t8735 - t8161 * (t8109 * t8576 + t8115 * t8249)) * t8237 + t7914 * t8686;
t8341 = (t7373 * t7517 + t7379 * t7470 + t7385 * t7471) * t7907;
t7295 = (t8730 * t8907 + t8341) * t8248 + t9068;
t7961 = g(1) * t8237 + t8231 * t8422;
t8152 = g(2) * t8224 + g(3) * t8212;
t7679 = t7961 * t8106 + t8152 * t8587;
t7694 = -t7961 * t8587 + t8106 * t8152;
t8959 = t7295 * t8356 + t8206 * (t7679 * t8255 + t7694 * t8250) + t8218 * (t7679 * t8250 - t7694 * t8255) + t8252 * t7283;
t7374 = t8288 + (-t7763 * t8244 + t8247 * t9027) * t8284 + (-t7763 * t7996 + t7997 * t9027) * t8295 + ((-t7608 - t9072) * t8247 + (-t7607 - t8818) * t8244) * t8296 + ((-t7763 * t8247 - t8244 * t9027) * t8283 + (-t7607 * t8247 + t7608 * t8244) * t8295) * t8246;
t7800 = t8146 * t8615 - t8296 * t8380;
t7950 = -t8242 * t8605 + t8246 * t8621 + t8645;
t7380 = t8286 + t7607 * t8297 + t7800 * t8601 + (t7607 * t8243 - t7800 * t8640) * t8295 + t8349 * t7763 + t8335 * t7950;
t7386 = t8287 + t7608 * t8297 - t7800 * t8639 + (t7608 * t8243 - t7800 * t8617) * t8295 - t8349 * t9027 + t8336 * t7950;
t8409 = 0.1e1 / ((-t8254 * t8276 + t8273 * t8587) * t8954 + pkin(3) * (t8254 * t8273 + t8276 * t8587));
t8440 = (t7374 * t9082 + t8967 * t7380 + t9063 * t7386) * t8409 * t8248;
t7910 = 0.1e1 / t7915;
t8905 = t7910 * t8906;
t7284 = -t8511 * t8905 + t8440;
t8659 = t8238 * t8253;
t7897 = t8232 * t9003 + t8659;
t8116 = -t8207 * t8250 + t8219 * t8255;
t8680 = t8232 * t8254;
t8683 = t8232 * t8249;
t8734 = t8159 * t8257;
t7524 = (t7897 * t8249 - t8116 * t8680) * t8734 + t8162 * (t7897 * t8254 + t8116 * t8683);
t7626 = (t8110 * t8254 + t8116 * t8586) * t8734 + (-t8110 * t8249 + t8116 * t8576) * t8162;
t7472 = t7524 * t8225 + t7626 * t8213;
t7473 = -t7524 * t8213 + t7626 * t8225;
t8681 = t8232 * t8253;
t7518 = (-(t8110 * t8586 - t8116 * t8254) * t8734 - t8162 * (t8110 * t8576 + t8116 * t8249)) * t8238 + t7915 * t8681;
t8340 = (t7374 * t7518 + t7380 * t7472 + t7386 * t7473) * t7910;
t7296 = (t8730 * t8905 + t8340) * t8248 + t9067;
t7965 = g(1) * t8238 + t8232 * t8421;
t8156 = g(2) * t8225 + g(3) * t8213;
t7683 = t7965 * t8106 + t8156 * t8587;
t7698 = -t7965 * t8587 + t8106 * t8156;
t8958 = t7296 * t8356 + t8207 * (t7683 * t8255 + t7698 * t8250) + t8219 * (t7683 * t8250 - t7698 * t8255) + t8252 * t7284;
t7375 = t8288 + (-t7764 * t8244 + t8247 * t9028) * t8284 + (-t7764 * t7996 + t7997 * t9028) * t8295 + ((-t7610 - t9073) * t8247 + (-t7609 - t8817) * t8244) * t8296 + ((-t7764 * t8247 - t8244 * t9028) * t8283 + (-t7609 * t8247 + t7610 * t8244) * t8295) * t8246;
t7801 = t8147 * t8615 - t8296 * t8379;
t7951 = -t8242 * t8604 + t8246 * t8620 + t8644;
t7381 = t8286 + t7609 * t8297 + t7801 * t8601 + (t7609 * t8243 - t7801 * t8640) * t8295 + t8349 * t7764 + t8335 * t7951;
t7387 = t8287 + t7610 * t8297 - t7801 * t8639 + (t7610 * t8243 - t7801 * t8617) * t8295 - t8349 * t9028 + t8336 * t7951;
t7531 = -t7702 * t8214 + t7708 * t8702;
t7855 = t8103 * t8220 + t8107 * t8208;
t7867 = -t8103 * t8208 + t8107 * t8220;
t7669 = -t7855 * t8214 + t7867 * t8702;
t7426 = (t7531 * t8289 + t7669 * t8292) * t8954 - (-t7531 * t8292 + t7669 * t8289) * pkin(3);
t7675 = t7855 * t8226 + t7867 * t8720;
t7429 = -(t7675 * t8292 + t8289 * t8970) * t8954 + pkin(3) * (t8289 * t7675 - t8292 * t8970);
t8408 = 0.1e1 / ((-t8254 * t8292 + t8289 * t8587) * t8954 + pkin(3) * (t8254 * t8289 + t8292 * t8587));
t8531 = (-(t7867 * t8292 - t8289 * t9017) * t8954 + pkin(3) * (t8289 * t7867 + t8292 * t9017)) * t8408 * t8239;
t8439 = (t7375 * t8531 + (t7381 * t7426 + t7387 * t7429) * t8408) * t8248;
t7916 = 0.1e1 / t7926;
t8903 = t7916 * t8904;
t7285 = -t8511 * t8903 + t8439;
t8657 = t8239 * t8253;
t7898 = t8233 * t9002 + t8657;
t8117 = -t8208 * t8250 + t8220 * t8255;
t8675 = t8233 * t8254;
t8678 = t8233 * t8249;
t8733 = t8163 * t8257;
t7525 = (t7898 * t8249 - t8117 * t8675) * t8733 + t8166 * (t7898 * t8254 + t8117 * t8678);
t7627 = (t8111 * t8254 + t8117 * t8586) * t8733 + (-t8111 * t8249 + t8117 * t8576) * t8166;
t7474 = t7525 * t8226 + t7627 * t8214;
t7475 = -t7525 * t8214 + t7627 * t8226;
t8676 = t8233 * t8253;
t7519 = (-(t8111 * t8586 - t8117 * t8254) * t8733 - t8166 * (t8111 * t8576 + t8117 * t8249)) * t8239 + t7926 * t8676;
t8339 = (t7375 * t7519 + t7381 * t7474 + t7387 * t7475) * t7916;
t7297 = (t8730 * t8903 + t8339) * t8248 + t9066;
t7962 = g(1) * t8239 + t8233 * t8420;
t8153 = g(2) * t8226 + g(3) * t8214;
t7680 = t7962 * t8106 + t8153 * t8587;
t7695 = -t7962 * t8587 + t8106 * t8153;
t8957 = t7297 * t8356 + t8208 * (t7680 * t8255 + t7695 * t8250) + t8220 * (t7680 * t8250 - t7695 * t8255) + t8252 * t7285;
t7376 = t8288 + (-t7765 * t8244 + t8247 * t9029) * t8284 + (-t7765 * t7996 + t7997 * t9029) * t8295 + ((-t7612 - t9074) * t8247 + (-t7611 - t8816) * t8244) * t8296 + ((-t7765 * t8247 - t8244 * t9029) * t8283 + (-t7611 * t8247 + t7612 * t8244) * t8295) * t8246;
t7802 = t8148 * t8615 - t8296 * t8378;
t7952 = -t8242 * t8603 + t8246 * t8619 + t8643;
t7382 = t8286 + t7611 * t8297 + t7802 * t8601 + (t7611 * t8243 - t7802 * t8640) * t8295 + t8349 * t7765 + t8335 * t7952;
t7388 = t8287 + t7612 * t8297 - t7802 * t8639 + (t7612 * t8243 - t7802 * t8617) * t8295 - t8349 * t9029 + t8336 * t7952;
t7532 = -t7703 * t8215 + t7709 * t8699;
t7856 = t8103 * t8221 + t8107 * t8209;
t7868 = -t8103 * t8209 + t8107 * t8221;
t7670 = -t7856 * t8215 + t7868 * t8699;
t7427 = (t7532 * t8290 + t7670 * t8293) * t8954 - (-t7532 * t8293 + t7670 * t8290) * pkin(3);
t7676 = t7856 * t8227 + t7868 * t8717;
t7430 = -(t7676 * t8293 + t8290 * t8971) * t8954 + pkin(3) * (t8290 * t7676 - t8293 * t8971);
t8407 = 0.1e1 / ((-t8254 * t8293 + t8290 * t8587) * t8954 + pkin(3) * (t8254 * t8290 + t8293 * t8587));
t8530 = (-(t7868 * t8293 - t8290 * t9016) * t8954 + pkin(3) * (t8290 * t7868 + t8293 * t9016)) * t8407 * t8240;
t8438 = (t7376 * t8530 + (t7382 * t7427 + t7388 * t7430) * t8407) * t8248;
t7919 = 0.1e1 / t7927;
t8901 = t7919 * t8902;
t7286 = -t8511 * t8901 + t8438;
t8655 = t8240 * t8253;
t7899 = t8234 * t9001 + t8655;
t8118 = -t8209 * t8250 + t8221 * t8255;
t8670 = t8234 * t8254;
t8673 = t8234 * t8249;
t8732 = t8164 * t8257;
t7526 = (t7899 * t8249 - t8118 * t8670) * t8732 + t8167 * (t7899 * t8254 + t8118 * t8673);
t7628 = (t8112 * t8254 + t8118 * t8586) * t8732 + (-t8112 * t8249 + t8118 * t8576) * t8167;
t7476 = t7526 * t8227 + t7628 * t8215;
t7477 = -t7526 * t8215 + t7628 * t8227;
t8671 = t8234 * t8253;
t7520 = (-(t8112 * t8586 - t8118 * t8254) * t8732 - t8167 * (t8112 * t8576 + t8118 * t8249)) * t8240 + t7927 * t8671;
t8338 = (t7376 * t7520 + t7382 * t7476 + t7388 * t7477) * t7919;
t7298 = (t8730 * t8901 + t8338) * t8248 + t9065;
t7963 = g(1) * t8240 + t8234 * t8419;
t8154 = g(2) * t8227 + g(3) * t8215;
t7681 = t7963 * t8106 + t8154 * t8587;
t7696 = -t7963 * t8587 + t8106 * t8154;
t8956 = t7298 * t8356 + t8209 * (t7681 * t8255 + t7696 * t8250) + t8221 * (t7681 * t8250 - t7696 * t8255) + t8252 * t7286;
t7377 = t8288 + (-t7766 * t8244 + t8247 * t9030) * t8284 + (-t7766 * t7996 + t7997 * t9030) * t8295 + ((-t7614 - t9075) * t8247 + (-t7613 - t8815) * t8244) * t8296 + ((-t7766 * t8247 - t8244 * t9030) * t8283 + (-t7613 * t8247 + t7614 * t8244) * t8295) * t8246;
t7803 = t8149 * t8615 - t8296 * t8377;
t7953 = -t8242 * t8602 + t8246 * t8618 + t8642;
t7383 = t8286 + t7613 * t8297 + t7803 * t8601 + (t7613 * t8243 - t7803 * t8640) * t8295 + t8349 * t7766 + t8335 * t7953;
t7389 = t8287 + t7614 * t8297 - t7803 * t8639 + (t7614 * t8243 - t7803 * t8617) * t8295 - t8349 * t9030 + t8336 * t7953;
t7533 = -t7704 * t8216 + t7710 * t8696;
t7857 = t8103 * t8222 + t8107 * t8210;
t7869 = -t8103 * t8210 + t8107 * t8222;
t7671 = -t7857 * t8216 + t7869 * t8696;
t7428 = (t7533 * t8291 + t7671 * t8294) * t8954 - (-t7533 * t8294 + t7671 * t8291) * pkin(3);
t7677 = t7857 * t8228 + t7869 * t8714;
t7431 = -(t7677 * t8294 + t8291 * t8972) * t8954 + pkin(3) * (t8291 * t7677 - t8294 * t8972);
t8406 = 0.1e1 / ((-t8254 * t8294 + t8291 * t8587) * t8954 + pkin(3) * (t8254 * t8291 + t8294 * t8587));
t8529 = (-(t7869 * t8294 - t8291 * t9015) * t8954 + pkin(3) * (t8291 * t7869 + t8294 * t9015)) * t8406 * t8241;
t8437 = (t7377 * t8529 + (t7383 * t7428 + t7389 * t7431) * t8406) * t8248;
t7922 = 0.1e1 / t7928;
t8899 = t7922 * t8900;
t7287 = -t8511 * t8899 + t8437;
t8653 = t8241 * t8253;
t7900 = t8235 * t9000 + t8653;
t8119 = -t8210 * t8250 + t8222 * t8255;
t8665 = t8235 * t8254;
t8668 = t8235 * t8249;
t8731 = t8165 * t8257;
t7527 = (t7900 * t8249 - t8119 * t8665) * t8731 + t8168 * (t7900 * t8254 + t8119 * t8668);
t7629 = (t8113 * t8254 + t8119 * t8586) * t8731 + (-t8113 * t8249 + t8119 * t8576) * t8168;
t7478 = t7527 * t8228 + t7629 * t8216;
t7479 = -t7527 * t8216 + t7629 * t8228;
t8666 = t8235 * t8253;
t7521 = (-(t8113 * t8586 - t8119 * t8254) * t8731 - t8168 * (t8113 * t8576 + t8119 * t8249)) * t8241 + t7928 * t8666;
t8337 = (t7377 * t7521 + t7383 * t7478 + t7389 * t7479) * t7922;
t7299 = (t8730 * t8899 + t8337) * t8248 + t9064;
t7964 = g(1) * t8241 + t8235 * t8418;
t8155 = g(2) * t8228 + g(3) * t8216;
t7682 = t7964 * t8106 + t8155 * t8587;
t7697 = -t7964 * t8587 + t8106 * t8155;
t8955 = t7299 * t8356 + t8210 * (t7682 * t8255 + t7697 * t8250) + t8222 * (t7682 * t8250 - t7697 * t8255) + t8252 * t7287;
t7901 = t8052 ^ 2;
t7903 = t8054 ^ 2;
t8016 = t8170 ^ 2;
t8953 = g(1) * t8250;
t8952 = g(1) * t8255;
t8945 = g(2) * t8250;
t8938 = t8286 - g(3);
t8937 = t8287 - g(2);
t8936 = MDP(1) * t8248;
t8935 = MDP(2) * t8248;
t8782 = t7938 * t8232;
t8794 = t7935 * t8232;
t7395 = ((t7763 * t8782 + t7935 * t9027) * t8219 + (-t7763 * t8794 + t7938 * t9027) * t8207) * t8225 - t8213 * ((t7763 * t7935 - t8782 * t9027) * t8219 + t8207 * (t7763 * t7938 + t8794 * t9027));
t8752 = t8107 * t8232;
t8764 = t8103 * t8232;
t7402 = ((t7763 * t8752 + t8103 * t9027) * t8219 + t8207 * (-t7763 * t8764 + t8107 * t9027)) * t8225 - ((t7763 * t8103 - t8752 * t9027) * t8219 + t8207 * (t7763 * t8107 + t8764 * t9027)) * t8213;
t8934 = ((t7395 * t8273 + t7402 * t8276) * t8954 + pkin(3) * (t7395 * t8276 - t7402 * t8273)) * t8409;
t8784 = t7938 * t8230;
t8796 = t7935 * t8230;
t7390 = ((t7761 * t8784 + t7935 * t9025) * t8217 + t8205 * (-t7761 * t8796 + t7938 * t9025)) * t8223 - ((t7761 * t7935 - t8784 * t9025) * t8217 + t8205 * (t7761 * t7938 + t8796 * t9025)) * t8211;
t8754 = t8107 * t8230;
t8766 = t8103 * t8230;
t7403 = ((t7761 * t8754 + t8103 * t9025) * t8217 + t8205 * (-t7761 * t8766 + t8107 * t9025)) * t8223 - ((t7761 * t8103 - t8754 * t9025) * t8217 + t8205 * (t7761 * t8107 + t8766 * t9025)) * t8211;
t8933 = ((t7390 * t8271 + t7403 * t8274) * t8954 + pkin(3) * (t7390 * t8274 - t7403 * t8271)) * t8411;
t8783 = t7938 * t8231;
t8795 = t7935 * t8231;
t7391 = ((t7762 * t8783 + t7935 * t9026) * t8218 + t8206 * (-t7762 * t8795 + t7938 * t9026)) * t8224 - ((t7762 * t7935 - t8783 * t9026) * t8218 + t8206 * (t7762 * t7938 + t8795 * t9026)) * t8212;
t8753 = t8107 * t8231;
t8765 = t8103 * t8231;
t7404 = ((t7762 * t8753 + t8103 * t9026) * t8218 + t8206 * (-t7762 * t8765 + t8107 * t9026)) * t8224 - ((t7762 * t8103 - t8753 * t9026) * t8218 + t8206 * (t7762 * t8107 + t8765 * t9026)) * t8212;
t8932 = ((t7391 * t8272 + t7404 * t8275) * t8954 + pkin(3) * (t7391 * t8275 - t7404 * t8272)) * t8410;
t8781 = t7938 * t8233;
t8793 = t7935 * t8233;
t7392 = ((t7764 * t8781 + t7935 * t9028) * t8220 + t8208 * (-t7764 * t8793 + t7938 * t9028)) * t8226 - ((t7764 * t7935 - t8781 * t9028) * t8220 + t8208 * (t7764 * t7938 + t8793 * t9028)) * t8214;
t8751 = t8107 * t8233;
t8763 = t8103 * t8233;
t7405 = ((t7764 * t8751 + t8103 * t9028) * t8220 + t8208 * (-t7764 * t8763 + t8107 * t9028)) * t8226 - ((t7764 * t8103 - t8751 * t9028) * t8220 + t8208 * (t7764 * t8107 + t8763 * t9028)) * t8214;
t8931 = ((t7392 * t8289 + t7405 * t8292) * t8954 + (t7392 * t8292 - t7405 * t8289) * pkin(3)) * t8408;
t8779 = t7938 * t8235;
t8791 = t7935 * t8235;
t7394 = ((t7766 * t8779 + t7935 * t9030) * t8222 + t8210 * (-t7766 * t8791 + t7938 * t9030)) * t8228 - ((t7766 * t7935 - t8779 * t9030) * t8222 + t8210 * (t7766 * t7938 + t8791 * t9030)) * t8216;
t8749 = t8107 * t8235;
t8761 = t8103 * t8235;
t7407 = ((t7766 * t8749 + t8103 * t9030) * t8222 + t8210 * (-t7766 * t8761 + t8107 * t9030)) * t8228 - ((t7766 * t8103 - t8749 * t9030) * t8222 + (t7766 * t8107 + t8761 * t9030) * t8210) * t8216;
t8930 = ((t7394 * t8291 + t7407 * t8294) * t8954 + pkin(3) * (t7394 * t8294 - t7407 * t8291)) * t8406;
t8780 = t7938 * t8234;
t8792 = t7935 * t8234;
t7393 = ((t7765 * t8780 + t7935 * t9029) * t8221 + t8209 * (-t7765 * t8792 + t7938 * t9029)) * t8227 - t8215 * ((t7765 * t7935 - t8780 * t9029) * t8221 + t8209 * (t7765 * t7938 + t8792 * t9029));
t8750 = t8107 * t8234;
t8762 = t8103 * t8234;
t7406 = ((t7765 * t8750 + t8103 * t9029) * t8221 + t8209 * (-t7765 * t8762 + t8107 * t9029)) * t8227 - t8215 * ((t7765 * t8103 - t8750 * t9029) * t8221 + (t7765 * t8107 + t8762 * t9029) * t8209);
t8929 = ((t7393 * t8290 + t7406 * t8293) * t8954 + pkin(3) * (t7393 * t8293 - t7406 * t8290)) * t8407;
t7537 = t8382 * t8663 + (t7737 * t8217 + t7749 * t8205) * t8258;
t7567 = t8144 * t8663 + (-t7743 * t8217 + t7755 * t8205) * t8258;
t7396 = (-t7537 * t8244 + t7567 * t8247) * t8223 + t8211 * (t7537 * t8247 + t7567 * t8244);
t8928 = ((t7396 * t8249 - t8254 * t8966) * t8736 + t8160 * (t7396 * t8254 + t8249 * t8966)) * t7904;
t7538 = t8381 * t8661 + (t7738 * t8218 + t7750 * t8206) * t8258;
t7568 = t8145 * t8661 + (-t7744 * t8218 + t7756 * t8206) * t8258;
t7397 = (-t7538 * t8244 + t7568 * t8247) * t8224 + t8212 * (t7538 * t8247 + t7568 * t8244);
t8927 = ((t7397 * t8249 - t8254 * t8965) * t8735 + t8161 * (t7397 * t8254 + t8249 * t8965)) * t7907;
t7539 = t8380 * t8659 + (t7739 * t8219 + t7751 * t8207) * t8258;
t7569 = t8146 * t8659 + (-t7745 * t8219 + t7757 * t8207) * t8258;
t7398 = (-t7539 * t8244 + t7569 * t8247) * t8225 + t8213 * (t7539 * t8247 + t7569 * t8244);
t8926 = ((t7398 * t8249 - t8254 * t8964) * t8734 + t8162 * (t7398 * t8254 + t8249 * t8964)) * t7910;
t7540 = t8379 * t8657 + (t7740 * t8220 + t7752 * t8208) * t8258;
t7570 = t8147 * t8657 + (-t7746 * t8220 + t7758 * t8208) * t8258;
t7399 = (-t7540 * t8244 + t7570 * t8247) * t8226 + t8214 * (t7540 * t8247 + t7570 * t8244);
t8925 = ((t7399 * t8249 - t8254 * t8963) * t8733 + t8166 * (t7399 * t8254 + t8249 * t8963)) * t7916;
t7541 = t8378 * t8655 + (t7741 * t8221 + t7753 * t8209) * t8258;
t7571 = t8148 * t8655 + (-t7747 * t8221 + t7759 * t8209) * t8258;
t7400 = (-t7541 * t8244 + t7571 * t8247) * t8227 + t8215 * (t7541 * t8247 + t7571 * t8244);
t8924 = ((t7400 * t8249 - t8254 * t8962) * t8732 + t8167 * (t7400 * t8254 + t8249 * t8962)) * t7919;
t7542 = t8377 * t8653 + (t7742 * t8222 + t7754 * t8210) * t8258;
t7572 = t8149 * t8653 + (-t7748 * t8222 + t7760 * t8210) * t8258;
t7401 = (-t7542 * t8244 + t7572 * t8247) * t8228 + t8216 * (t7542 * t8247 + t7572 * t8244);
t8923 = ((t7401 * t8249 - t8254 * t8961) * t8731 + t8168 * (t7401 * t8254 + t8249 * t8961)) * t7922;
t8453 = t8213 * t8579;
t8495 = t8232 * t8576;
t8758 = t8106 * t8238;
t7563 = t9040 * t8758 + ((t8213 * t8495 + t8225 * t8249) * t8257 - t8232 * t8453) * t7972;
t8447 = t8225 * t8579;
t8481 = t8238 * t8587;
t7575 = -t9040 * t8481 + t7972 * ((-t8213 * t8683 + t8225 * t8576) * t8257 - t8447);
t7416 = (t7563 * t8255 + t7575 * t8250) * t8219 + (-t7563 * t8250 + t7575 * t8255) * t8207;
t8480 = t8238 * t8586;
t8497 = t8232 * t8586;
t7642 = t9040 * t8480 + t7972 * (t8213 * t8497 - t8225 * t8254);
t8658 = t8238 * t8254;
t7654 = t9040 * t8658 + t7972 * (t8213 * t8680 + t8225 * t8586);
t7438 = (t7642 * t8255 + t7654 * t8250) * t8219 + (-t7642 * t8250 + t7654 * t8255) * t8207;
t8922 = ((t7416 * t8273 + t7438 * t8276) * t8954 + pkin(3) * (t7416 * t8276 - t7438 * t8273)) * t8409;
t8448 = t8224 * t8579;
t8498 = t8231 * t8576;
t8759 = t8106 * t8237;
t7562 = t9035 * t8759 - ((-t8212 * t8249 + t8224 * t8498) * t8257 - t8231 * t8448) * t7971;
t8454 = t8212 * t8579;
t8483 = t8237 * t8587;
t7574 = -t9035 * t8483 + t7971 * ((t8212 * t8576 + t8224 * t8688) * t8257 - t8454);
t7415 = (t7562 * t8255 + t7574 * t8250) * t8218 + (-t7562 * t8250 + t7574 * t8255) * t8206;
t8482 = t8237 * t8586;
t8500 = t8231 * t8586;
t7644 = t9035 * t8482 - (t8212 * t8254 + t8224 * t8500) * t7971;
t8660 = t8237 * t8254;
t7658 = t9035 * t8660 + t7971 * (t8212 * t8586 - t8224 * t8685);
t7440 = (t7644 * t8255 + t7658 * t8250) * t8218 + t8206 * (-t7644 * t8250 + t7658 * t8255);
t8921 = (-(t7415 * t8272 + t7440 * t8275) * t8954 - pkin(3) * (t7415 * t8275 - t7440 * t8272)) * t8410;
t7557 = t9034 * t8758 - t7972 * ((-t8213 * t8249 + t8225 * t8495) * t8257 - t8232 * t8447);
t7576 = -t9034 * t8481 + t7972 * ((t8213 * t8576 + t8225 * t8683) * t8257 - t8453);
t7410 = (t7557 * t8255 + t7576 * t8250) * t8219 + (-t7557 * t8250 + t7576 * t8255) * t8207;
t7645 = t9034 * t8480 - t7972 * (t8213 * t8254 + t8225 * t8497);
t7659 = t9034 * t8658 + t7972 * (t8213 * t8586 - t8225 * t8680);
t7441 = (t7645 * t8255 + t7659 * t8250) * t8219 + t8207 * (-t7645 * t8250 + t7659 * t8255);
t8920 = (-(t7410 * t8273 + t7441 * t8276) * t8954 - pkin(3) * (t7410 * t8276 - t7441 * t8273)) * t8409;
t7556 = t9041 * t8759 + ((t8212 * t8498 + t8224 * t8249) * t8257 - t8231 * t8454) * t7971;
t7581 = -t9041 * t8483 + t7971 * ((-t8212 * t8688 + t8224 * t8576) * t8257 - t8448);
t7409 = (t7556 * t8255 + t7581 * t8250) * t8218 + (-t7556 * t8250 + t7581 * t8255) * t8206;
t7650 = t9041 * t8482 + t7971 * (t8212 * t8500 - t8224 * t8254);
t7657 = t9041 * t8660 + t7971 * (t8212 * t8685 + t8224 * t8586);
t7446 = (t7650 * t8255 + t7657 * t8250) * t8218 + (-t7650 * t8250 + t7657 * t8255) * t8206;
t8919 = ((t7409 * t8272 + t7446 * t8275) * t8954 + pkin(3) * (t7409 * t8275 - t7446 * t8272)) * t8410;
t8449 = t8223 * t8579;
t8501 = t8230 * t8576;
t8760 = t8106 * t8236;
t7561 = t9036 * t8760 - t7970 * ((-t8211 * t8249 + t8223 * t8501) * t8257 - t8230 * t8449);
t8455 = t8211 * t8579;
t8485 = t8236 * t8587;
t7573 = -t9036 * t8485 + t7970 * ((t8211 * t8576 + t8223 * t8693) * t8257 - t8455);
t7414 = (t7561 * t8255 + t7573 * t8250) * t8217 + (-t7561 * t8250 + t7573 * t8255) * t8205;
t8484 = t8236 * t8586;
t8503 = t8230 * t8586;
t7643 = t9036 * t8484 - t7970 * (t8211 * t8254 + t8223 * t8503);
t8662 = t8236 * t8254;
t7656 = t9036 * t8662 + t7970 * (t8211 * t8586 - t8223 * t8690);
t7439 = (t7643 * t8255 + t7656 * t8250) * t8217 + (-t7643 * t8250 + t7656 * t8255) * t8205;
t8918 = (-(t7414 * t8271 + t7439 * t8274) * t8954 - (t7414 * t8274 - t7439 * t8271) * pkin(3)) * t8411;
t7555 = t9042 * t8760 + t7970 * ((t8211 * t8501 + t8223 * t8249) * t8257 - t8230 * t8455);
t7580 = -t9042 * t8485 + t7970 * ((-t8211 * t8693 + t8223 * t8576) * t8257 - t8449);
t7408 = (t7555 * t8255 + t7580 * t8250) * t8217 + (-t7555 * t8250 + t7580 * t8255) * t8205;
t7649 = t9042 * t8484 + t7970 * (t8211 * t8503 - t8223 * t8254);
t7655 = t9042 * t8662 + t7970 * (t8211 * t8690 + t8223 * t8586);
t7445 = (t7649 * t8255 + t7655 * t8250) * t8217 + (-t7649 * t8250 + t7655 * t8255) * t8205;
t8917 = ((t7408 * t8271 + t7445 * t8274) * t8954 + pkin(3) * (t7408 * t8274 - t7445 * t8271)) * t8411;
t8446 = t8226 * t8579;
t8492 = t8233 * t8576;
t8757 = t8106 * t8239;
t7565 = t9033 * t8757 - t7973 * ((-t8214 * t8249 + t8226 * t8492) * t8257 - t8233 * t8446);
t8452 = t8214 * t8579;
t8479 = t8239 * t8587;
t7577 = -t9033 * t8479 + t7973 * ((t8214 * t8576 + t8226 * t8678) * t8257 - t8452);
t7418 = (t7565 * t8255 + t7577 * t8250) * t8220 + t8208 * (-t7565 * t8250 + t7577 * t8255);
t8478 = t8239 * t8586;
t8494 = t8233 * t8586;
t7646 = t9033 * t8478 - t7973 * (t8214 * t8254 + t8226 * t8494);
t8656 = t8239 * t8254;
t7661 = t9033 * t8656 + t7973 * (t8214 * t8586 - t8226 * t8675);
t7442 = (t7646 * t8255 + t7661 * t8250) * t8220 + t8208 * (-t7646 * t8250 + t7661 * t8255);
t8916 = (-(t7418 * t8289 + t7442 * t8292) * t8954 - pkin(3) * (t7418 * t8292 - t7442 * t8289)) * t8408;
t8445 = t8227 * t8579;
t8489 = t8234 * t8576;
t8756 = t8106 * t8240;
t7559 = t9032 * t8756 - t7974 * ((-t8215 * t8249 + t8227 * t8489) * t8257 - t8234 * t8445);
t8451 = t8215 * t8579;
t8477 = t8240 * t8587;
t7578 = -t9032 * t8477 + t7974 * ((t8215 * t8576 + t8227 * t8673) * t8257 - t8451);
t7412 = (t7559 * t8255 + t7578 * t8250) * t8221 + t8209 * (-t7559 * t8250 + t7578 * t8255);
t8476 = t8240 * t8586;
t8491 = t8234 * t8586;
t7647 = t9032 * t8476 - t7974 * (t8215 * t8254 + t8227 * t8491);
t8654 = t8240 * t8254;
t7663 = t9032 * t8654 + t7974 * (t8215 * t8586 - t8227 * t8670);
t7443 = (t7647 * t8255 + t7663 * t8250) * t8221 + t8209 * (-t7647 * t8250 + t7663 * t8255);
t8915 = (-(t7412 * t8290 + t7443 * t8293) * t8954 - (t7412 * t8293 - t7443 * t8290) * pkin(3)) * t8407;
t8444 = t8228 * t8579;
t8486 = t8235 * t8576;
t8755 = t8106 * t8241;
t7566 = t9031 * t8755 - ((-t8216 * t8249 + t8228 * t8486) * t8257 - t8235 * t8444) * t7975;
t8450 = t8216 * t8579;
t8475 = t8241 * t8587;
t7579 = -t9031 * t8475 + ((t8216 * t8576 + t8228 * t8668) * t8257 - t8450) * t7975;
t7419 = (t7566 * t8255 + t7579 * t8250) * t8222 + (-t7566 * t8250 + t7579 * t8255) * t8210;
t8474 = t8241 * t8586;
t8488 = t8235 * t8586;
t7648 = t9031 * t8474 - t7975 * (t8216 * t8254 + t8228 * t8488);
t8652 = t8241 * t8254;
t7665 = t9031 * t8652 + (t8216 * t8586 - t8228 * t8665) * t7975;
t7444 = (t7648 * t8255 + t7665 * t8250) * t8222 + (-t7648 * t8250 + t7665 * t8255) * t8210;
t8914 = (-(t7419 * t8291 + t7444 * t8294) * t8954 - pkin(3) * (t7419 * t8294 - t7444 * t8291)) * t8406;
t7564 = t9039 * t8757 + t7973 * ((t8214 * t8492 + t8226 * t8249) * t8257 - t8233 * t8452);
t7582 = -t9039 * t8479 + t7973 * ((-t8214 * t8678 + t8226 * t8576) * t8257 - t8446);
t7417 = (t7564 * t8255 + t7582 * t8250) * t8220 + (-t7564 * t8250 + t7582 * t8255) * t8208;
t7651 = t9039 * t8478 + t7973 * (t8214 * t8494 - t8226 * t8254);
t7660 = t9039 * t8656 + t7973 * (t8214 * t8675 + t8226 * t8586);
t7447 = (t7651 * t8255 + t7660 * t8250) * t8220 + (-t7651 * t8250 + t7660 * t8255) * t8208;
t8913 = ((t7417 * t8289 + t7447 * t8292) * t8954 + (t7417 * t8292 - t7447 * t8289) * pkin(3)) * t8408;
t7558 = t9038 * t8756 + ((t8215 * t8489 + t8227 * t8249) * t8257 - t8234 * t8451) * t7974;
t7583 = -t9038 * t8477 + t7974 * ((-t8215 * t8673 + t8227 * t8576) * t8257 - t8445);
t7411 = (t7558 * t8255 + t7583 * t8250) * t8221 + (-t7558 * t8250 + t7583 * t8255) * t8209;
t7652 = t9038 * t8476 + t7974 * (t8215 * t8491 - t8227 * t8254);
t7662 = t9038 * t8654 + t7974 * (t8215 * t8670 + t8227 * t8586);
t7448 = (t7652 * t8255 + t7662 * t8250) * t8221 + (-t7652 * t8250 + t7662 * t8255) * t8209;
t8912 = ((t7411 * t8290 + t7448 * t8293) * t8954 + pkin(3) * (t7411 * t8293 - t7448 * t8290)) * t8407;
t7560 = t9037 * t8755 + ((t8216 * t8486 + t8228 * t8249) * t8257 - t8235 * t8450) * t7975;
t7584 = -t9037 * t8475 + ((-t8216 * t8668 + t8228 * t8576) * t8257 - t8444) * t7975;
t7413 = (t7560 * t8255 + t7584 * t8250) * t8222 + (-t7560 * t8250 + t7584 * t8255) * t8210;
t7653 = t9037 * t8474 + (t8216 * t8488 - t8228 * t8254) * t7975;
t7664 = t9037 * t8652 + t7975 * (t8216 * t8665 + t8228 * t8586);
t7449 = (t7653 * t8255 + t7664 * t8250) * t8222 + (-t7653 * t8250 + t7664 * t8255) * t8210;
t8911 = ((t7413 * t8291 + t7449 * t8294) * t8954 + pkin(3) * (t7413 * t8294 - t7449 * t8291)) * t8406;
t8709 = t8223 * t8255;
t8021 = -t8211 * t8692 + t8709;
t8710 = t8223 * t8250;
t8033 = t8211 * t8689 + t8710;
t8473 = t8258 * t8647;
t8429 = t8217 * t8473;
t8435 = t8205 * t8473;
t8502 = t8304 * t8691;
t8742 = t8138 * t8258;
t7450 = (t8211 * t9011 + t9005 * t9042) * t8236 + (t8244 * t8502 + (-t8021 * t8217 + t8033 * t8205) * t8742) * t8246 + t8021 * t8429 - t8033 * t8435 - t7846 * t8691;
t8748 = t8114 * t8236;
t7543 = t9042 * t8748 + t7970 * (t8021 * t8205 + t8033 * t8217);
t8898 = ((t7450 * t8249 - t7543 * t8254) * t8736 + (t7450 * t8254 + t7543 * t8249) * t8160) * t7904;
t8727 = t8211 * t8255;
t8022 = t8223 * t8692 + t8727;
t8728 = t8211 * t8250;
t8034 = t8223 * t8689 - t8728;
t7451 = (-t8223 * t9011 + t9005 * t9036) * t8236 + (-t8247 * t8502 + (-t8022 * t8217 - t8034 * t8205) * t8742) * t8246 + t8022 * t8429 + t8034 * t8435 - t7858 * t8691;
t7549 = t9036 * t8748 - (-t8022 * t8205 + t8034 * t8217) * t7970;
t8897 = (-(t7451 * t8249 - t7549 * t8254) * t8736 - t8160 * (t7451 * t8254 + t7549 * t8249)) * t7904;
t8706 = t8224 * t8255;
t8023 = -t8212 * t8687 + t8706;
t8707 = t8224 * t8250;
t8035 = t8212 * t8684 + t8707;
t8472 = t8258 * t8646;
t8428 = t8218 * t8472;
t8434 = t8206 * t8472;
t8499 = t8305 * t8686;
t8741 = t8139 * t8258;
t7452 = (t8212 * t9010 + t9004 * t9041) * t8237 + (t8244 * t8499 + (-t8023 * t8218 + t8035 * t8206) * t8741) * t8246 + t8023 * t8428 - t8035 * t8434 - t7847 * t8686;
t8747 = t8115 * t8237;
t7544 = t9041 * t8747 + t7971 * (t8023 * t8206 + t8035 * t8218);
t8896 = ((t7452 * t8249 - t7544 * t8254) * t8735 + (t7452 * t8254 + t7544 * t8249) * t8161) * t7907;
t8724 = t8212 * t8255;
t8024 = t8224 * t8687 + t8724;
t8725 = t8212 * t8250;
t8036 = t8224 * t8684 - t8725;
t7453 = (-t8224 * t9010 + t9004 * t9035) * t8237 + (-t8247 * t8499 + (-t8024 * t8218 - t8036 * t8206) * t8741) * t8246 + t8024 * t8428 + t8036 * t8434 - t7859 * t8686;
t7550 = t9035 * t8747 - (-t8024 * t8206 + t8036 * t8218) * t7971;
t8895 = (-(t7453 * t8249 - t7550 * t8254) * t8735 - t8161 * (t7453 * t8254 + t7550 * t8249)) * t7907;
t8703 = t8225 * t8255;
t8025 = -t8213 * t8682 + t8703;
t8704 = t8225 * t8250;
t8037 = t8213 * t8679 + t8704;
t8471 = t8258 * t8645;
t8427 = t8219 * t8471;
t8433 = t8207 * t8471;
t8496 = t8306 * t8681;
t8740 = t8140 * t8258;
t7454 = (t8213 * t9009 + t9003 * t9040) * t8238 + (t8244 * t8496 + (-t8025 * t8219 + t8037 * t8207) * t8740) * t8246 + t8025 * t8427 - t8037 * t8433 - t7848 * t8681;
t8746 = t8116 * t8238;
t7545 = t9040 * t8746 + t7972 * (t8025 * t8207 + t8037 * t8219);
t8894 = ((t7454 * t8249 - t7545 * t8254) * t8734 + (t7454 * t8254 + t7545 * t8249) * t8162) * t7910;
t8721 = t8213 * t8255;
t8026 = t8225 * t8682 + t8721;
t8722 = t8213 * t8250;
t8038 = t8225 * t8679 - t8722;
t7455 = (-t8225 * t9009 + t9003 * t9034) * t8238 + (-t8247 * t8496 + (-t8026 * t8219 - t8038 * t8207) * t8740) * t8246 + t8026 * t8427 + t8038 * t8433 - t7860 * t8681;
t7551 = t9034 * t8746 - (-t8026 * t8207 + t8038 * t8219) * t7972;
t8893 = (-(t7455 * t8249 - t7551 * t8254) * t8734 - t8162 * (t7455 * t8254 + t7551 * t8249)) * t7910;
t8700 = t8226 * t8255;
t8027 = -t8214 * t8677 + t8700;
t8701 = t8226 * t8250;
t8039 = t8214 * t8674 + t8701;
t8470 = t8258 * t8644;
t8426 = t8220 * t8470;
t8432 = t8208 * t8470;
t8493 = t8307 * t8676;
t8739 = t8141 * t8258;
t7456 = (t8214 * t9008 + t9002 * t9039) * t8239 + (t8244 * t8493 + (-t8027 * t8220 + t8039 * t8208) * t8739) * t8246 + t8027 * t8426 - t8039 * t8432 - t7849 * t8676;
t8745 = t8117 * t8239;
t7546 = t9039 * t8745 + t7973 * (t8027 * t8208 + t8039 * t8220);
t8892 = ((t7456 * t8249 - t7546 * t8254) * t8733 + (t7456 * t8254 + t7546 * t8249) * t8166) * t7916;
t8718 = t8214 * t8255;
t8028 = t8226 * t8677 + t8718;
t8719 = t8214 * t8250;
t8040 = t8226 * t8674 - t8719;
t7457 = (-t8226 * t9008 + t9002 * t9033) * t8239 + (-t8247 * t8493 + (-t8028 * t8220 - t8040 * t8208) * t8739) * t8246 + t8028 * t8426 + t8040 * t8432 - t7861 * t8676;
t7552 = t9033 * t8745 - (-t8028 * t8208 + t8040 * t8220) * t7973;
t8891 = (-(t7457 * t8249 - t7552 * t8254) * t8733 - t8166 * (t7457 * t8254 + t7552 * t8249)) * t7916;
t8697 = t8227 * t8255;
t8029 = -t8215 * t8672 + t8697;
t8698 = t8227 * t8250;
t8041 = t8215 * t8669 + t8698;
t8469 = t8258 * t8643;
t8425 = t8221 * t8469;
t8431 = t8209 * t8469;
t8490 = t8308 * t8671;
t8738 = t8142 * t8258;
t7458 = (t8215 * t9007 + t9001 * t9038) * t8240 + (t8244 * t8490 + (-t8029 * t8221 + t8041 * t8209) * t8738) * t8246 + t8029 * t8425 - t8041 * t8431 - t7850 * t8671;
t8744 = t8118 * t8240;
t7547 = t9038 * t8744 + t7974 * (t8029 * t8209 + t8041 * t8221);
t8890 = ((t7458 * t8249 - t7547 * t8254) * t8732 + (t7458 * t8254 + t7547 * t8249) * t8167) * t7919;
t8715 = t8215 * t8255;
t8030 = t8227 * t8672 + t8715;
t8716 = t8215 * t8250;
t8042 = t8227 * t8669 - t8716;
t7459 = (-t8227 * t9007 + t9001 * t9032) * t8240 + (-t8247 * t8490 + (-t8030 * t8221 - t8042 * t8209) * t8738) * t8246 + t8030 * t8425 + t8042 * t8431 - t7862 * t8671;
t7553 = t9032 * t8744 - (-t8030 * t8209 + t8042 * t8221) * t7974;
t8889 = (-(t7459 * t8249 - t7553 * t8254) * t8732 - t8167 * (t7459 * t8254 + t7553 * t8249)) * t7919;
t8694 = t8228 * t8255;
t8031 = -t8216 * t8667 + t8694;
t8695 = t8228 * t8250;
t8043 = t8216 * t8664 + t8695;
t8468 = t8258 * t8642;
t8424 = t8222 * t8468;
t8430 = t8210 * t8468;
t8487 = t8309 * t8666;
t8737 = t8143 * t8258;
t7460 = (t8216 * t9006 + t9000 * t9037) * t8241 + (t8244 * t8487 + (-t8031 * t8222 + t8043 * t8210) * t8737) * t8246 + t8031 * t8424 - t8043 * t8430 - t7851 * t8666;
t8743 = t8119 * t8241;
t7548 = t9037 * t8743 + t7975 * (t8031 * t8210 + t8043 * t8222);
t8888 = ((t7460 * t8249 - t7548 * t8254) * t8731 + (t7460 * t8254 + t7548 * t8249) * t8168) * t7922;
t8712 = t8216 * t8255;
t8032 = t8228 * t8667 + t8712;
t8713 = t8216 * t8250;
t8044 = t8228 * t8664 - t8713;
t7461 = (-t8228 * t9006 + t9000 * t9031) * t8241 + (-t8247 * t8487 + (-t8032 * t8222 - t8044 * t8210) * t8737) * t8246 + t8032 * t8424 + t8044 * t8430 - t7863 * t8666;
t7554 = t9031 * t8743 - (-t8032 * t8210 + t8044 * t8222) * t7975;
t8887 = (-(t7461 * t8249 - t7554 * t8254) * t8731 - t8168 * (t7461 * t8254 + t7554 * t8249)) * t7922;
t8886 = t8969 * t8411;
t8885 = t8968 * t8410;
t8884 = t8967 * t8409;
t8883 = t9061 * t8411;
t8882 = t9062 * t8410;
t8881 = t9063 * t8409;
t8880 = t7426 * t8408;
t8879 = t7427 * t8407;
t8878 = t7428 * t8406;
t8877 = t7429 * t8408;
t8876 = t7430 * t8407;
t8875 = t7431 * t8406;
t8874 = (((t7764 * t8674 + t8250 * t9028) * t8220 + t8208 * (-t7764 * t8677 + t8255 * t9028)) * t8226 + ((-t7764 * t8250 + t8674 * t9028) * t8220 + (-t7764 * t8255 - t8677 * t9028) * t8208) * t8214) * t7916;
t8873 = (((t7761 * t8689 + t8250 * t9025) * t8217 + t8205 * (-t7761 * t8692 + t8255 * t9025)) * t8223 + t8211 * ((-t7761 * t8250 + t8689 * t9025) * t8217 + (-t7761 * t8255 - t8692 * t9025) * t8205)) * t7904;
t8872 = (((t7762 * t8684 + t8250 * t9026) * t8218 + (-t7762 * t8687 + t8255 * t9026) * t8206) * t8224 + ((-t7762 * t8250 + t8684 * t9026) * t8218 + t8206 * (-t7762 * t8255 - t8687 * t9026)) * t8212) * t7907;
t8871 = (((t7763 * t8679 + t8250 * t9027) * t8219 + (-t7763 * t8682 + t8255 * t9027) * t8207) * t8225 + ((-t7763 * t8250 + t8679 * t9027) * t8219 + t8207 * (-t7763 * t8255 - t8682 * t9027)) * t8213) * t7910;
t8870 = (((t7765 * t8669 + t8250 * t9029) * t8221 + t8209 * (-t7765 * t8672 + t8255 * t9029)) * t8227 + ((-t7765 * t8250 + t8669 * t9029) * t8221 + (-t7765 * t8255 - t8672 * t9029) * t8209) * t8215) * t7919;
t8869 = (((t7766 * t8664 + t8250 * t9030) * t8222 + t8210 * (-t7766 * t8667 + t8255 * t9030)) * t8228 + t8216 * ((-t7766 * t8250 + t8664 * t9030) * t8222 + t8210 * (-t7766 * t8255 - t8667 * t9030))) * t7922;
t8868 = t7468 * t7904;
t8867 = t7469 * t7904;
t8866 = t7470 * t7907;
t8865 = t7471 * t7907;
t8864 = t7472 * t7910;
t8863 = t7473 * t7910;
t8862 = t7474 * t7916;
t8861 = t7475 * t7916;
t8860 = t7476 * t7919;
t8859 = t7477 * t7919;
t8858 = t7478 * t7922;
t8857 = t7479 * t7922;
t8856 = ((t7970 * t8710 + t8255 * t9059) * t8217 - (-t7970 * t8709 + t8250 * t9059) * t8205) * t7904;
t8855 = ((-t7970 * t8728 - t8255 * t9060) * t8217 + (-t7970 * t8727 + t8250 * t9060) * t8205) * t7904;
t8854 = ((t7971 * t8707 + t8255 * t9057) * t8218 - (-t7971 * t8706 + t8250 * t9057) * t8206) * t7907;
t8853 = ((-t7971 * t8725 - t8255 * t9058) * t8218 + (-t7971 * t8724 + t8250 * t9058) * t8206) * t7907;
t8852 = ((t7972 * t8704 + t8255 * t9055) * t8219 - (-t7972 * t8703 + t8250 * t9055) * t8207) * t7910;
t8851 = ((-t7972 * t8722 - t8255 * t9056) * t8219 + (-t7972 * t8721 + t8250 * t9056) * t8207) * t7910;
t8850 = ((t7973 * t8701 + t8255 * t9053) * t8220 - (-t7973 * t8700 + t8250 * t9053) * t8208) * t7916;
t8849 = ((-t7973 * t8719 - t8255 * t9054) * t8220 + (-t7973 * t8718 + t8250 * t9054) * t8208) * t7916;
t8848 = ((t7974 * t8698 + t8255 * t9051) * t8221 - (-t7974 * t8697 + t8250 * t9051) * t8209) * t7919;
t8847 = ((-t7974 * t8716 - t8255 * t9052) * t8221 + (-t7974 * t8715 + t8250 * t9052) * t8209) * t7919;
t8846 = ((t7975 * t8695 + t8255 * t9049) * t8222 - (-t7975 * t8694 + t8250 * t9049) * t8210) * t7922;
t8845 = ((-t7975 * t8713 - t8255 * t9050) * t8222 + (-t7975 * t8712 + t8250 * t9050) * t8210) * t7922;
t8838 = t7516 * t7904;
t8837 = t7517 * t7907;
t8836 = t7518 * t7910;
t8835 = t7519 * t7916;
t8834 = t7520 * t7919;
t8833 = t7521 * t7922;
t7834 = -t8108 * t8211 + t8114 * t8711;
t8814 = t7834 * t7904;
t7835 = -t8109 * t8212 + t8115 * t8708;
t8813 = t7835 * t7907;
t7836 = -t8110 * t8213 + t8116 * t8705;
t8812 = t7836 * t7910;
t7837 = -t8111 * t8214 + t8117 * t8702;
t8811 = t7837 * t7916;
t7838 = -t8112 * t8215 + t8118 * t8699;
t8810 = t7838 * t7919;
t7839 = -t8113 * t8216 + t8119 * t8696;
t8809 = t7839 * t7922;
t7840 = -t8108 * t8223 - t8114 * t8729;
t8808 = t7840 * t7904;
t7841 = -t8109 * t8224 - t8115 * t8726;
t8807 = t7841 * t7907;
t7842 = -t8110 * t8225 - t8116 * t8723;
t8806 = t7842 * t7910;
t7843 = -t8111 * t8226 - t8117 * t8720;
t8805 = t7843 * t7916;
t7844 = -t8112 * t8227 - t8118 * t8717;
t8804 = t7844 * t7919;
t7845 = -t8113 * t8228 - t8119 * t8714;
t8803 = t7845 * t7922;
t8651 = t8242 * t8244;
t8650 = t8242 * t8246;
t8649 = t8242 * t8247;
t8641 = t8244 * t8245;
t8626 = t8245 * t8246;
t8625 = t8245 * t8247;
t8588 = t8249 * t8253;
t8534 = t8411 * t9084;
t8533 = t8410 * t9083;
t8532 = t8409 * t9082;
t8522 = t7904 * t8748;
t8521 = t7907 * t8747;
t8520 = t7910 * t8746;
t8519 = t7916 * t8745;
t8518 = t7919 * t8744;
t8517 = t7922 * t8743;
t8405 = t8185 * (-t8104 + t8574);
t8229 = t8288 - g(1);
t8204 = t8255 * g(2);
t8203 = t8255 * g(3);
t8202 = t8250 * g(3);
t8020 = -t8243 * t8625 + t8651;
t8019 = t8243 * t8649 + t8641;
t8018 = t8243 * t8641 + t8649;
t8017 = -t8243 * t8651 + t8625;
t7925 = t8243 * t8229 + t8617 * t8938 - t8640 * t8937;
t7870 = -t8016 + t7901;
t7791 = -t7903 + t8016;
t7790 = t7965 * t8254 + t8156 * t8586;
t7789 = t7964 * t8254 + t8155 * t8586;
t7788 = t7963 * t8254 + t8154 * t8586;
t7787 = t7962 * t8254 + t8153 * t8586;
t7786 = t7961 * t8254 + t8152 * t8586;
t7785 = t7960 * t8254 + t8151 * t8586;
t7784 = t7965 * t8586 - t8156 * t8254;
t7783 = t7964 * t8586 - t8155 * t8254;
t7782 = t7963 * t8586 - t8154 * t8254;
t7781 = t7962 * t8586 - t8153 * t8254;
t7780 = t7961 * t8586 - t8152 * t8254;
t7779 = t7960 * t8586 - t8151 * t8254;
t7722 = -t7901 + t7903;
t7717 = -t8016 - t7903;
t7716 = -t8016 - t7901;
t7715 = t8018 * t8937 + t8020 * t8938 + t8229 * t8626;
t7714 = -t8017 * t8937 - t8019 * t8938 + t8229 * t8650;
t7692 = -t7901 - t7903;
t7305 = (-t8165 * t8254 + t8168 * t8587) * t8899 + (-t7377 * t8743 + t7383 * t7839 + t7389 * t7845) * t7922;
t7304 = (-t8164 * t8254 + t8167 * t8587) * t8901 + (-t7376 * t8744 + t7382 * t7838 + t7388 * t7844) * t7919;
t7303 = (-t8163 * t8254 + t8166 * t8587) * t8903 + (-t7375 * t8745 + t7381 * t7837 + t7387 * t7843) * t7916;
t7302 = (-t8159 * t8254 + t8162 * t8587) * t8905 + (-t7374 * t8746 + t7380 * t7836 + t7386 * t7842) * t7910;
t7301 = (-t8158 * t8254 + t8161 * t8587) * t8907 + (-t7373 * t8747 + t7379 * t7835 + t7385 * t7841) * t7907;
t7300 = (-t8157 * t8254 + t8160 * t8587) * t8909 + (-t7372 * t8748 + t7378 * t7834 + t7384 * t7840) * t7904;
t7293 = (t7783 * t8250 - t7789 * t8255) * t8222 + (t7783 * t8255 + t7789 * t8250) * t8210 + t7299 * t8588;
t7292 = (t7782 * t8250 - t7788 * t8255) * t8221 + (t7782 * t8255 + t7788 * t8250) * t8209 + t7298 * t8588;
t7291 = (t7781 * t8250 - t7787 * t8255) * t8220 + (t7781 * t8255 + t7787 * t8250) * t8208 + t7297 * t8588;
t7290 = (t7784 * t8250 - t7790 * t8255) * t8219 + (t7784 * t8255 + t7790 * t8250) * t8207 + t7296 * t8588;
t7289 = (t7780 * t8250 - t7786 * t8255) * t8218 + (t7780 * t8255 + t7786 * t8250) * t8206 + t7295 * t8588;
t7288 = (t7779 * t8250 - t7785 * t8255) * t8217 + (t7779 * t8255 + t7785 * t8250) * t8205 + t7294 * t8588;
t7281 = t7305 * t8291 + t8294 * t8900;
t7280 = t7304 * t8290 + t8293 * t8902;
t7279 = t7303 * t8289 + t8292 * t8904;
t7278 = -t7305 * t8294 + t8291 * t8900;
t7277 = -t7304 * t8293 + t8290 * t8902;
t7276 = -t7303 * t8292 + t8289 * t8904;
t7275 = t7305 * t8577 - t8249 * t8900;
t7274 = t7304 * t8577 - t8249 * t8902;
t7273 = t7303 * t8577 - t8249 * t8904;
t7272 = t7305 * t8249 + t8577 * t8900;
t7271 = t7304 * t8249 + t8577 * t8902;
t7270 = t7303 * t8249 + t8577 * t8904;
t7269 = t7302 * t8273 + t8276 * t8906;
t7268 = t7301 * t8272 + t8275 * t8908;
t7267 = t7300 * t8271 + t8274 * t8910;
t7266 = -t7302 * t8276 + t8273 * t8906;
t7265 = -t7301 * t8275 + t8272 * t8908;
t7264 = -t7300 * t8274 + t8271 * t8910;
t7263 = t7302 * t8577 - t8249 * t8906;
t7262 = t7301 * t8577 - t8249 * t8908;
t7261 = t7300 * t8577 - t8249 * t8910;
t7260 = t7302 * t8249 + t8577 * t8906;
t7259 = t7301 * t8249 + t8577 * t8908;
t7258 = t7300 * t8249 + t8577 * t8910;
t7257 = t7287 * t8258 + t7299;
t7256 = t7286 * t8258 + t7298;
t7255 = t7285 * t8258 + t7297;
t7254 = t7284 * t8258 + t7296;
t7253 = t7283 * t8258 + t7295;
t7252 = t7282 * t8258 + t7294;
t7251 = (((g(3) * t8667 + t8204) * t8222 + t8210 * (g(3) * t8664 - t8945)) * t8228 + ((-g(2) * t8667 + t8203) * t8216 - t8241 * t8953) * t8222 - ((g(2) * t8664 + t8202) * t8216 + t8241 * t8952) * t8210) * t8253 + t9064 * t8258 + (t8258 * t8337 + t8405 * t8899) * t8248 + t8437;
t7250 = (((g(3) * t8672 + t8204) * t8221 + t8209 * (g(3) * t8669 - t8945)) * t8227 + ((-g(2) * t8672 + t8203) * t8215 - t8240 * t8953) * t8221 - t8209 * ((g(2) * t8669 + t8202) * t8215 + t8240 * t8952)) * t8253 + t9065 * t8258 + (t8258 * t8338 + t8405 * t8901) * t8248 + t8438;
t7249 = (((g(3) * t8677 + t8204) * t8220 + t8208 * (g(3) * t8674 - t8945)) * t8226 + ((-g(2) * t8677 + t8203) * t8214 - t8239 * t8953) * t8220 - ((g(2) * t8674 + t8202) * t8214 + t8239 * t8952) * t8208) * t8253 + t9066 * t8258 + (t8258 * t8339 + t8405 * t8903) * t8248 + t8439;
t7248 = (((g(3) * t8682 + t8204) * t8219 + t8207 * (g(3) * t8679 - t8945)) * t8225 + ((-g(2) * t8682 + t8203) * t8213 - t8238 * t8953) * t8219 - ((g(2) * t8679 + t8202) * t8213 + t8238 * t8952) * t8207) * t8253 + t9067 * t8258 + (t8258 * t8340 + t8405 * t8905) * t8248 + t8440;
t7247 = (((g(3) * t8687 + t8204) * t8218 + t8206 * (g(3) * t8684 - t8945)) * t8224 + ((-g(2) * t8687 + t8203) * t8212 - t8237 * t8953) * t8218 - t8206 * ((g(2) * t8684 + t8202) * t8212 + t8237 * t8952)) * t8253 + t9068 * t8258 + (t8258 * t8341 + t8405 * t8907) * t8248 + t8441;
t7246 = (((g(3) * t8692 + t8204) * t8217 + t8205 * (g(3) * t8689 - t8945)) * t8223 + ((-g(2) * t8692 + t8203) * t8211 - t8236 * t8953) * t8217 - ((g(2) * t8689 + t8202) * t8211 + t8236 * t8952) * t8205) * t8253 + t9069 * t8258 + (t8258 * t8342 + t8405 * t8909) * t8248 + t8442;
t7245 = (-t7272 * t8291 + t7275 * t8294) * t8253 - t7278 * t8578;
t7244 = (-t7271 * t8290 + t7274 * t8293) * t8253 - t7277 * t8578;
t7243 = (-t7270 * t8289 + t7273 * t8292) * t8253 - t7276 * t8578;
t7242 = (-t7272 * t8294 - t7275 * t8291) * t8253 - t7281 * t8578;
t7241 = (-t7271 * t8293 - t7274 * t8290) * t8253 - t7280 * t8578;
t7240 = (-t7270 * t8292 - t7273 * t8289) * t8253 - t7279 * t8578;
t7239 = (-t7260 * t8273 + t7263 * t8276) * t8253 - t7266 * t8578;
t7238 = (-t7259 * t8272 + t7262 * t8275) * t8253 - t7265 * t8578;
t7237 = (-t7258 * t8271 + t7261 * t8274) * t8253 - t7264 * t8578;
t7236 = (-t7260 * t8276 - t7263 * t8273) * t8253 - t7269 * t8578;
t7235 = (-t7259 * t8275 - t7262 * t8272) * t8253 - t7268 * t8578;
t7234 = (-t7258 * t8274 - t7261 * t8271) * t8253 - t7267 * t8578;
t7233 = -t7293 * t8291 + t8294 * t8955;
t7232 = -t7293 * t8294 - t8291 * t8955;
t7231 = -t8290 * t7292 + t8293 * t8956;
t7230 = -t7292 * t8293 - t8290 * t8956;
t7229 = -t8289 * t7291 + t8292 * t8957;
t7228 = -t7291 * t8292 - t8289 * t8957;
t7227 = -t8273 * t7290 + t8276 * t8958;
t7226 = -t7290 * t8276 - t8273 * t8958;
t7225 = -t8272 * t7289 + t8275 * t8959;
t7224 = -t8275 * t7289 - t8272 * t8959;
t7223 = -t8271 * t7288 + t8274 * t8960;
t7222 = -t7288 * t8274 - t8271 * t8960;
t1 = [(-t7300 * t8522 - t7301 * t8521 - t7302 * t8520 - t7303 * t8519 - t7304 * t8518 - t7305 * t8517) * MDP(3) + (-t7223 * t8522 - t7225 * t8521 - t7227 * t8520 - t7229 * t8519 - t7231 * t8518 - t7233 * t8517) * MDP(4) + (-t7222 * t8522 - t7224 * t8521 - t7226 * t8520 - t7228 * t8519 - t7230 * t8518 - t7232 * t8517) * MDP(5) + (-MDP(12) * t7685 + MDP(13) * t8991 + MDP(14) * t7692 + MDP(15) * t7925) * t8243 + ((t7716 * t8245 - t8242 * t8993) * MDP(12) + (-t7717 * t8242 - t7720 * t8245) * MDP(13) + (-t7691 * t8242 + t8245 * t8992) * MDP(14) + (t7714 * t8242 + t7715 * t8245) * MDP(15)) * t8246 + ((t7294 * t8838 + t7295 * t8837 + t7296 * t8836 + t7297 * t8835 + t7298 * t8834 + t7299 * t8833) * MDP(1) + (t7246 * t8534 + t7247 * t8533 + t7248 * t8532 + t7249 * t8531 + t7250 * t8530 + t7251 * t8529 + t7252 * t8838 + t7253 * t8837 + t7254 * t8836 + t7255 * t8835 + t7256 * t8834 + t7257 * t8833) * MDP(2) + (t7237 * t8838 + t7238 * t8837 + t7239 * t8836 + t7243 * t8835 + t7244 * t8834 + t7245 * t8833) * MDP(4) + (t7234 * t8838 + t7235 * t8837 + t7236 * t8836 + t7240 * t8835 + t7241 * t8834 + t7242 * t8833) * MDP(5) + ((-t7264 * t8534 - t7265 * t8533 - t7266 * t8532 - t7276 * t8531 - t7277 * t8530 - t7278 * t8529) * MDP(4) + (-t7267 * t8534 - t7268 * t8533 - t7269 * t8532 - t7279 * t8531 - t7280 * t8530 - t7281 * t8529) * MDP(5)) * t8252) * t8248; (t7300 * t8808 + t7301 * t8807 + t7302 * t8806 + t7303 * t8805 + t7304 * t8804 + t7305 * t8803) * MDP(3) + (t7223 * t8808 + t7225 * t8807 + t7227 * t8806 + t7229 * t8805 + t7231 * t8804 + t7233 * t8803) * MDP(4) + (t7222 * t8808 + t7224 * t8807 + t7226 * t8806 + t7228 * t8805 + t7230 * t8804 + t7232 * t8803) * MDP(5) + (t7685 * t8640 + t7716 * t8018 + t8017 * t8993) * MDP(12) + (t7717 * t8017 - t7720 * t8018 - t8640 * t8991) * MDP(13) + (t7691 * t8017 - t7692 * t8640 + t8018 * t8992) * MDP(14) + (-t7714 * t8017 + t7715 * t8018 - t7925 * t8640) * MDP(15) + ((t7294 * t8867 + t7295 * t8865 + t7296 * t8863 + t7297 * t8861 + t7298 * t8859 + t7299 * t8857) * MDP(1) + (t7246 * t8883 + t7247 * t8882 + t7248 * t8881 + t7249 * t8877 + t7250 * t8876 + t7251 * t8875 + t7252 * t8867 + t7253 * t8865 + t7254 * t8863 + t7255 * t8861 + t7256 * t8859 + t7257 * t8857) * MDP(2) + (t7237 * t8867 + t7238 * t8865 + t7239 * t8863 + t7243 * t8861 + t7244 * t8859 + t7245 * t8857) * MDP(4) + (t7234 * t8867 + t7235 * t8865 + t7236 * t8863 + t7240 * t8861 + t7241 * t8859 + t7242 * t8857) * MDP(5) + ((-t7264 * t8883 - t7265 * t8882 - t7266 * t8881 - t7276 * t8877 - t7277 * t8876 - t7278 * t8875) * MDP(4) + (-t7267 * t8883 - t7268 * t8882 - t7269 * t8881 - t7279 * t8877 - t7280 * t8876 - t7281 * t8875) * MDP(5)) * t8252) * t8248; (t7300 * t8814 + t7301 * t8813 + t7302 * t8812 + t7303 * t8811 + t7304 * t8810 + t7305 * t8809) * MDP(3) + (t7223 * t8814 + t7225 * t8813 + t7227 * t8812 + t7229 * t8811 + t7231 * t8810 + t7233 * t8809) * MDP(4) + (t7222 * t8814 + t7224 * t8813 + t7226 * t8812 + t7228 * t8811 + t7230 * t8810 + t7232 * t8809) * MDP(5) + (-t7685 * t8617 + t7716 * t8020 + t8019 * t8993) * MDP(12) + (t7717 * t8019 - t7720 * t8020 + t8617 * t8991) * MDP(13) + (t7691 * t8019 + t7692 * t8617 + t8020 * t8992) * MDP(14) + (-t7714 * t8019 + t7715 * t8020 + t7925 * t8617) * MDP(15) + ((t7294 * t8868 + t7295 * t8866 + t7296 * t8864 + t7297 * t8862 + t7298 * t8860 + t7299 * t8858) * MDP(1) + (t7246 * t8886 + t7247 * t8885 + t7248 * t8884 + t7249 * t8880 + t7250 * t8879 + t7251 * t8878 + t7252 * t8868 + t7253 * t8866 + t7254 * t8864 + t7255 * t8862 + t7256 * t8860 + t7257 * t8858) * MDP(2) + (t7237 * t8868 + t7238 * t8866 + t7239 * t8864 + t7243 * t8862 + t7244 * t8860 + t7245 * t8858) * MDP(4) + (t7234 * t8868 + t7235 * t8866 + t7236 * t8864 + t7240 * t8862 + t7241 * t8860 + t7242 * t8858) * MDP(5) + ((-t7264 * t8886 - t7265 * t8885 - t7266 * t8884 - t7276 * t8880 - t7277 * t8879 - t7278 * t8878) * MDP(4) + (-t7267 * t8886 - t7268 * t8885 - t7269 * t8884 - t7279 * t8880 - t7280 * t8879 - t7281 * t8878) * MDP(5)) * t8252) * t8248; (t7294 * t8928 + t7295 * t8927 + t7296 * t8926 + t7297 * t8925 + t7298 * t8924 + t7299 * t8923) * t8936 + (t7246 * t8933 + t7247 * t8932 + t7248 * t8934 + t7249 * t8931 + t7250 * t8929 + t7251 * t8930 + t7252 * t8928 + t7253 * t8927 + t7254 * t8926 + t7255 * t8925 + t7256 * t8924 + t7257 * t8923) * t8935 + (t7300 * t8873 + t7301 * t8872 + t7302 * t8871 + t7303 * t8874 + t7304 * t8870 + t7305 * t8869) * MDP(3) + (t7223 * t8873 + t7225 * t8872 + t7227 * t8871 + t7229 * t8874 + t7231 * t8870 + t7233 * t8869 + (t7237 * t8928 + t7238 * t8927 + t7239 * t8926 + t7243 * t8925 + t7244 * t8924 + t7245 * t8923 + (-t7264 * t8933 - t7265 * t8932 - t7266 * t8934 - t7276 * t8931 - t7277 * t8929 - t7278 * t8930) * t8252) * t8248) * MDP(4) + (t7222 * t8873 + t7224 * t8872 + t7226 * t8871 + t7228 * t8874 + t7230 * t8870 + t7232 * t8869 + (t7234 * t8928 + t7235 * t8927 + t7236 * t8926 + t7240 * t8925 + t7241 * t8924 + t7242 * t8923 + (-t7267 * t8933 - t7268 * t8932 - t7269 * t8934 - t7279 * t8931 - t7280 * t8929 - t7281 * t8930) * t8252) * t8248) * MDP(5) + (t7724 * t8626 + (t8052 * t8243 - t8170 * t8650) * t8054) * MDP(6) + (t7722 * t8243 + (t7685 * t8245 - t8242 * t8991) * t8246) * MDP(7) + (-t7691 * t8243 + (-t7791 * t8242 + t8245 * t8993) * t8246) * MDP(8) + (-t7723 * t8650 + (-t8054 * t8243 + t8170 * t8626) * t8052) * MDP(9) + (t8992 * t8243 + (-t7720 * t8242 + t7870 * t8245) * t8246) * MDP(10) + (t8045 * t8243 + (-t8052 * t8245 + t8054 * t8242) * t8246 * t8170) * MDP(11) + (-t7714 * t8243 + t7925 * t8650) * MDP(12) + (-t7715 * t8243 + t7925 * t8626) * MDP(13) + (t7714 * t8245 - t7715 * t8242) * t8246 * MDP(14); (t7294 * t8897 + t7295 * t8895 + t7296 * t8893 + t7297 * t8891 + t7298 * t8889 + t7299 * t8887) * t8936 + (t7246 * t8918 + t7247 * t8921 + t7248 * t8920 + t7249 * t8916 + t7250 * t8915 + t7251 * t8914 + t7252 * t8897 + t7253 * t8895 + t7254 * t8893 + t7255 * t8891 + t7256 * t8889 + t7257 * t8887) * t8935 + (t7300 * t8855 + t7301 * t8853 + t7302 * t8851 + t7303 * t8849 + t7304 * t8847 + t7305 * t8845) * MDP(3) + (t7223 * t8855 + t7225 * t8853 + t7227 * t8851 + t7229 * t8849 + t7231 * t8847 + t7233 * t8845 + (t7237 * t8897 + t7238 * t8895 + t7239 * t8893 + t7243 * t8891 + t7244 * t8889 + t7245 * t8887 + (-t7264 * t8918 - t7265 * t8921 - t7266 * t8920 - t7276 * t8916 - t7277 * t8915 - t7278 * t8914) * t8252) * t8248) * MDP(4) + (t7222 * t8855 + t7224 * t8853 + t7226 * t8851 + t7228 * t8849 + t7230 * t8847 + t7232 * t8845 + (t7234 * t8897 + t7235 * t8895 + t7236 * t8893 + t7240 * t8891 + t7241 * t8889 + t7242 * t8887 + (-t7267 * t8918 - t7268 * t8921 - t7269 * t8920 - t7279 * t8916 - t7280 * t8915 - t7281 * t8914) * t8252) * t8248) * MDP(5) + (t7724 * t8018 + (t8017 * t8170 - t8052 * t8640) * t8054) * MDP(6) + (t7685 * t8018 - t7722 * t8640 + t8017 * t8991) * MDP(7) + (t7691 * t8640 + t7791 * t8017 + t8018 * t8993) * MDP(8) + (t7723 * t8017 + (t8018 * t8170 + t8054 * t8640) * t8052) * MDP(9) + (t7720 * t8017 + t7870 * t8018 - t8640 * t8992) * MDP(10) + (-t8045 * t8640 + (-t8017 * t8054 - t8018 * t8052) * t8170) * MDP(11) + (t7714 * t8640 - t7925 * t8017) * MDP(12) + (t7715 * t8640 + t7925 * t8018) * MDP(13) + (t7714 * t8018 + t7715 * t8017) * MDP(14); (t7294 * t8898 + t7295 * t8896 + t7296 * t8894 + t7297 * t8892 + t7298 * t8890 + t7299 * t8888) * t8936 + (t7246 * t8917 + t7247 * t8919 + t7248 * t8922 + t7249 * t8913 + t7250 * t8912 + t7251 * t8911 + t7252 * t8898 + t7253 * t8896 + t7254 * t8894 + t7255 * t8892 + t7256 * t8890 + t7257 * t8888) * t8935 + (t7300 * t8856 + t7301 * t8854 + t7302 * t8852 + t7303 * t8850 + t7304 * t8848 + t7305 * t8846) * MDP(3) + (t7223 * t8856 + t7225 * t8854 + t7227 * t8852 + t7229 * t8850 + t7231 * t8848 + t7233 * t8846 + (t7237 * t8898 + t7238 * t8896 + t7239 * t8894 + t7243 * t8892 + t7244 * t8890 + t7245 * t8888 + (-t7264 * t8917 - t7265 * t8919 - t7266 * t8922 - t7276 * t8913 - t7277 * t8912 - t7278 * t8911) * t8252) * t8248) * MDP(4) + (t7222 * t8856 + t7224 * t8854 + t7226 * t8852 + t7228 * t8850 + t7230 * t8848 + t7232 * t8846 + (t7234 * t8898 + t7235 * t8896 + t7236 * t8894 + t7240 * t8892 + t7241 * t8890 + t7242 * t8888 + (-t7267 * t8917 - t7268 * t8919 - t7269 * t8922 - t7279 * t8913 - t7280 * t8912 - t7281 * t8911) * t8252) * t8248) * MDP(5) + (t7724 * t8020 + (t8019 * t8170 + t8052 * t8617) * t8054) * MDP(6) + (t7685 * t8020 + t7722 * t8617 + t8019 * t8991) * MDP(7) + (-t7691 * t8617 + t7791 * t8019 + t8020 * t8993) * MDP(8) + (t7723 * t8019 + (t8020 * t8170 - t8054 * t8617) * t8052) * MDP(9) + (t7720 * t8019 + t7870 * t8020 + t8617 * t8992) * MDP(10) + (t8045 * t8617 + (-t8019 * t8054 - t8020 * t8052) * t8170) * MDP(11) + (-t7714 * t8617 - t7925 * t8019) * MDP(12) + (-t7715 * t8617 + t7925 * t8020) * MDP(13) + (t7714 * t8020 + t7715 * t8019) * MDP(14);];
tauX  = t1;
