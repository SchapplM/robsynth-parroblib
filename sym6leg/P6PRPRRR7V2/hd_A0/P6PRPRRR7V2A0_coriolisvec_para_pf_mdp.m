% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PRPRRR7V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d4,theta1,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRPRRR7V2G1P1A0_convert_par2_MPV_fixb.m

% Output:
% taucX [6x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-17 04:21
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P6PRPRRR7V2G1P1A0_coriolisvec_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-17 04:08:13
% EndTime: 2019-05-17 04:18:59
% DurationCPUTime: 721.41s
% Computational Cost: add. (4887040->2823), mult. (10907791->4985), div. (20772->36), fcn. (7320035->64), ass. (0->1802)
t16858 = cos(pkin(5));
t16886 = sin(qJ(2,1));
t16850 = sin(pkin(10));
t17916 = sin(pkin(6)) * pkin(8);
t16785 = t16850 * t17916;
t16782 = t16785 + pkin(2);
t16855 = cos(pkin(10));
t17917 = pkin(3) * t16855;
t17984 = t16782 + t17917;
t16674 = t16886 * t17984;
t16889 = cos(qJ(2,1));
t16857 = cos(pkin(6));
t16803 = t16857 * pkin(8);
t16795 = t16803 + qJ(3,1);
t16853 = sin(pkin(5));
t18065 = t16795 * t16853;
t16511 = -t16889 * t18065 + t16674;
t16756 = -pkin(3) * t16850 + t16855 * t17916;
t16859 = cos(pkin(4));
t16708 = t16859 * t16756;
t16644 = t16853 * t16708;
t16854 = sin(pkin(4));
t17382 = t16511 * t16854 - t16644;
t18088 = t16858 * t17382;
t16885 = sin(qJ(2,2));
t16673 = t16885 * t17984;
t16888 = cos(qJ(2,2));
t16794 = t16803 + qJ(3,2);
t18066 = t16794 * t16853;
t16510 = -t16888 * t18066 + t16673;
t17383 = t16510 * t16854 - t16644;
t18087 = t16858 * t17383;
t16884 = sin(qJ(2,3));
t16672 = t16884 * t17984;
t16887 = cos(qJ(2,3));
t16793 = t16803 + qJ(3,3);
t18067 = t16793 * t16853;
t16509 = -t16887 * t18067 + t16672;
t17384 = t16509 * t16854 - t16644;
t18086 = t16858 * t17384;
t16874 = sin(qJ(2,4));
t16668 = t16874 * t17984;
t16877 = cos(qJ(2,4));
t16791 = t16803 + qJ(3,4);
t18068 = t16791 * t16853;
t16505 = -t16877 * t18068 + t16668;
t17385 = t16505 * t16854 - t16644;
t18085 = t16858 * t17385;
t16873 = sin(qJ(2,5));
t16667 = t16873 * t17984;
t16876 = cos(qJ(2,5));
t16790 = t16803 + qJ(3,5);
t18069 = t16790 * t16853;
t16504 = -t16876 * t18069 + t16667;
t17386 = t16504 * t16854 - t16644;
t18084 = t16858 * t17386;
t16872 = sin(qJ(2,6));
t16666 = t16872 * t17984;
t16875 = cos(qJ(2,6));
t16789 = t16803 + qJ(3,6);
t18070 = t16789 * t16853;
t16503 = -t16875 * t18070 + t16666;
t17387 = t16503 * t16854 - t16644;
t18083 = t16858 * t17387;
t16896 = xP(5);
t16843 = sin(t16896);
t17920 = xP(6);
t16842 = sin(t17920);
t16910 = koppelP(6,2);
t17380 = cos(t17920);
t17934 = koppelP(6,1);
t17201 = t17934 * t17380;
t17092 = -t16842 * t16910 + t17201;
t16845 = cos(t16896);
t16904 = koppelP(6,3);
t17502 = t16845 * t16904;
t16545 = t16843 * t17092 - t17502;
t16747 = t16842 * t17934 + t16910 * t17380;
t16897 = xP(4);
t16844 = sin(t16897);
t16846 = cos(t16897);
t18082 = t16545 * t16844 + t16747 * t16846;
t16357 = t16545 * t16846 - t16747 * t16844;
t16911 = koppelP(5,2);
t17935 = koppelP(5,1);
t17202 = t17935 * t17380;
t17093 = -t16842 * t16911 + t17202;
t16905 = koppelP(5,3);
t17501 = t16845 * t16905;
t16546 = t16843 * t17093 - t17501;
t16748 = t16842 * t17935 + t16911 * t17380;
t18081 = t16546 * t16844 + t16748 * t16846;
t16358 = t16546 * t16846 - t16748 * t16844;
t16912 = koppelP(4,2);
t17936 = koppelP(4,1);
t17203 = t17936 * t17380;
t17094 = -t16842 * t16912 + t17203;
t16906 = koppelP(4,3);
t17500 = t16845 * t16906;
t16547 = t16843 * t17094 - t17500;
t16749 = t16842 * t17936 + t16912 * t17380;
t18080 = t16547 * t16844 + t16749 * t16846;
t16359 = t16547 * t16846 - t16749 * t16844;
t16913 = koppelP(3,2);
t17937 = koppelP(3,1);
t17204 = t17937 * t17380;
t17095 = -t16842 * t16913 + t17204;
t16907 = koppelP(3,3);
t17499 = t16845 * t16907;
t16548 = t16843 * t17095 - t17499;
t16750 = t16842 * t17937 + t16913 * t17380;
t18079 = t16548 * t16844 + t16750 * t16846;
t16360 = t16548 * t16846 - t16750 * t16844;
t16914 = koppelP(2,2);
t17938 = koppelP(2,1);
t17205 = t17938 * t17380;
t17096 = -t16842 * t16914 + t17205;
t16908 = koppelP(2,3);
t17498 = t16845 * t16908;
t16549 = t16843 * t17096 - t17498;
t16751 = t16842 * t17938 + t16914 * t17380;
t18078 = t16549 * t16844 + t16751 * t16846;
t16361 = t16549 * t16846 - t16751 * t16844;
t16915 = koppelP(1,2);
t17939 = koppelP(1,1);
t17206 = t17939 * t17380;
t17097 = -t16842 * t16915 + t17206;
t16909 = koppelP(1,3);
t17497 = t16845 * t16909;
t16550 = t16843 * t17097 - t17497;
t16752 = t16842 * t17939 + t16915 * t17380;
t18077 = t16550 * t16844 + t16752 * t16846;
t16362 = t16550 * t16846 - t16752 * t16844;
t16860 = legFrame(6,3);
t16818 = cos(t16860);
t16851 = sin(pkin(9));
t17424 = t16859 * t16875;
t17105 = t16756 * t17424 + t16789 * t16854;
t16856 = cos(pkin(9));
t17449 = t16856 * t16872;
t18015 = -t16756 * t17449 - t16851 * t17105;
t18064 = t16818 * t18015;
t16861 = legFrame(5,3);
t16819 = cos(t16861);
t17423 = t16859 * t16876;
t17104 = t16756 * t17423 + t16790 * t16854;
t17448 = t16856 * t16873;
t18014 = -t16756 * t17448 - t16851 * t17104;
t18063 = t16819 * t18014;
t16862 = legFrame(4,3);
t16820 = cos(t16862);
t17422 = t16859 * t16877;
t17103 = t16756 * t17422 + t16791 * t16854;
t17447 = t16856 * t16874;
t18013 = -t16756 * t17447 - t16851 * t17103;
t18062 = t16820 * t18013;
t16863 = legFrame(3,3);
t16821 = cos(t16863);
t17421 = t16859 * t16887;
t17102 = t16756 * t17421 + t16793 * t16854;
t17446 = t16856 * t16884;
t18012 = -t16756 * t17446 - t16851 * t17102;
t18061 = t16821 * t18012;
t16864 = legFrame(2,3);
t16822 = cos(t16864);
t17420 = t16859 * t16888;
t17101 = t16756 * t17420 + t16794 * t16854;
t17445 = t16856 * t16885;
t18011 = -t16756 * t17445 - t16851 * t17101;
t18060 = t16822 * t18011;
t16865 = legFrame(1,3);
t16823 = cos(t16865);
t17419 = t16859 * t16889;
t17100 = t16756 * t17419 + t16795 * t16854;
t17444 = t16856 * t16886;
t18010 = -t16756 * t17444 - t16851 * t17100;
t18059 = t16823 * t18010;
t16878 = legFrame(6,2);
t16830 = sin(t16878);
t16769 = t16859 * t16789;
t17456 = t16854 * t16875;
t17978 = t16756 * t17456 - t16769;
t18058 = t17978 * t16830;
t16879 = legFrame(5,2);
t16831 = sin(t16879);
t16770 = t16859 * t16790;
t17455 = t16854 * t16876;
t17979 = t16756 * t17455 - t16770;
t18057 = t17979 * t16831;
t16880 = legFrame(4,2);
t16832 = sin(t16880);
t16771 = t16859 * t16791;
t17454 = t16854 * t16877;
t17980 = t16756 * t17454 - t16771;
t18056 = t17980 * t16832;
t16881 = legFrame(3,2);
t16833 = sin(t16881);
t16775 = t16859 * t16793;
t17453 = t16854 * t16887;
t17981 = t16756 * t17453 - t16775;
t18055 = t17981 * t16833;
t16882 = legFrame(2,2);
t16834 = sin(t16882);
t16776 = t16859 * t16794;
t17452 = t16854 * t16888;
t17982 = t16756 * t17452 - t16776;
t18054 = t17982 * t16834;
t16883 = legFrame(1,2);
t16835 = sin(t16883);
t16777 = t16859 * t16795;
t17451 = t16854 * t16889;
t17983 = t16756 * t17451 - t16777;
t18053 = t17983 * t16835;
t16849 = t16858 ^ 2;
t17471 = t16853 * t16858;
t16643 = t16756 * t17471;
t17169 = -t16643 - t16803;
t17457 = t16854 * t16858;
t16709 = t16756 * t16858;
t16551 = -t16709 - t18070;
t18033 = t16551 * t16875 + t16666;
t16203 = 0.1e1 / (t17457 * t18033 + (t16789 * t16849 - qJ(3,6) + t17169) * t16859);
t16552 = -t16709 - t18069;
t18032 = t16552 * t16876 + t16667;
t16204 = 0.1e1 / (t17457 * t18032 + (t16790 * t16849 - qJ(3,5) + t17169) * t16859);
t16553 = -t16709 - t18068;
t18031 = t16553 * t16877 + t16668;
t16205 = 0.1e1 / (t17457 * t18031 + (t16791 * t16849 - qJ(3,4) + t17169) * t16859);
t16554 = -t16709 - t18067;
t18030 = t16554 * t16887 + t16672;
t16206 = 0.1e1 / (t17457 * t18030 + (t16793 * t16849 - qJ(3,3) + t17169) * t16859);
t16555 = -t16709 - t18066;
t18029 = t16555 * t16888 + t16673;
t16207 = 0.1e1 / (t17457 * t18029 + (t16794 * t16849 - qJ(3,2) + t17169) * t16859);
t16556 = -t16709 - t18065;
t18028 = t16556 * t16889 + t16674;
t16208 = 0.1e1 / (t17457 * t18028 + (t16795 * t16849 - qJ(3,1) + t17169) * t16859);
t16891 = xDP(5);
t16890 = xDP(6);
t17504 = t16845 * t16890;
t16373 = t16545 * t16891 + t16747 * t17504;
t18052 = t16373 * t16844;
t18051 = t16373 * t16846;
t16374 = t16546 * t16891 + t16748 * t17504;
t18050 = t16374 * t16844;
t18049 = t16374 * t16846;
t16375 = t16547 * t16891 + t16749 * t17504;
t18048 = t16375 * t16844;
t18047 = t16375 * t16846;
t16376 = t16548 * t16891 + t16750 * t17504;
t18046 = t16376 * t16844;
t18045 = t16376 * t16846;
t16377 = t16549 * t16891 + t16751 * t17504;
t18044 = t16377 * t16844;
t18043 = t16377 * t16846;
t16378 = t16550 * t16891 + t16752 * t17504;
t18042 = t16378 * t16844;
t18041 = t16378 * t16846;
t18034 = t17984 * t16853;
t17394 = -t16849 * t17983 - t16777;
t18027 = 0.1e1 / (t17394 + t18088);
t17395 = -t16849 * t17982 - t16776;
t18026 = 0.1e1 / (t17395 + t18087);
t17396 = -t16849 * t17981 - t16775;
t18025 = 0.1e1 / (t17396 + t18086);
t17397 = -t16849 * t17980 - t16771;
t18024 = 0.1e1 / (t17397 + t18085);
t17398 = -t16849 * t17979 - t16770;
t18023 = 0.1e1 / (t17398 + t18084);
t17399 = -t16849 * t17978 - t16769;
t18022 = 0.1e1 / (t17399 + t18083);
t16892 = xDP(4);
t16762 = t16843 * t16892 + t16890;
t17168 = t16842 * t16762;
t16382 = t16762 * t17201 - t16892 * t17502 - t16910 * t17168;
t16894 = xDP(2);
t17207 = -t16843 * t16890 - t16892;
t17356 = t16891 * t17934;
t17362 = t16890 * t17934;
t17411 = t16891 * t16910;
t17417 = t16891 * t16904;
t17010 = (t16845 * t17356 + t16910 * t17207) * t17380 - t16842 * (t16845 * t17411 + t16892 * t17934) - (t16842 * t17362 - t17417) * t16843;
t16035 = t16382 * t16846 + t16844 * t17010 + t16894;
t16893 = xDP(3);
t16041 = t16382 * t16844 - t16846 * t17010 + t16893;
t16895 = xDP(1);
t17496 = t16845 * t16910;
t16282 = (t16843 * t17356 + t16890 * t17496) * t17380 - t16845 * t17417 - t16895 + (-t16843 * t17411 + t16845 * t17362) * t16842;
t16866 = legFrame(6,1);
t16812 = sin(t16866);
t16824 = cos(t16866);
t16836 = cos(t16878);
t15867 = -t16282 * t16836 + (t16035 * t16812 - t16041 * t16824) * t16830;
t15897 = t16035 * t16824 + t16812 * t16041;
t18021 = -t15867 * t16851 + t15897 * t16856;
t16383 = t16762 * t17202 - t16892 * t17501 - t16911 * t17168;
t17357 = t16891 * t17935;
t17363 = t16890 * t17935;
t17410 = t16891 * t16911;
t17416 = t16891 * t16905;
t17009 = (t16845 * t17357 + t16911 * t17207) * t17380 - t16842 * (t16845 * t17410 + t16892 * t17935) - (t16842 * t17363 - t17416) * t16843;
t16036 = t16383 * t16846 + t16844 * t17009 + t16894;
t16042 = t16383 * t16844 - t16846 * t17009 + t16893;
t17495 = t16845 * t16911;
t16283 = (t16843 * t17357 + t16890 * t17495) * t17380 - t16845 * t17416 - t16895 + (-t16843 * t17410 + t16845 * t17363) * t16842;
t16867 = legFrame(5,1);
t16813 = sin(t16867);
t16825 = cos(t16867);
t16837 = cos(t16879);
t15868 = -t16283 * t16837 + (t16036 * t16813 - t16042 * t16825) * t16831;
t15898 = t16036 * t16825 + t16813 * t16042;
t18020 = -t15868 * t16851 + t15898 * t16856;
t16384 = t16762 * t17203 - t16892 * t17500 - t16912 * t17168;
t17358 = t16891 * t17936;
t17364 = t16890 * t17936;
t17409 = t16891 * t16912;
t17415 = t16891 * t16906;
t17008 = (t16845 * t17358 + t16912 * t17207) * t17380 - t16842 * (t16845 * t17409 + t16892 * t17936) - (t16842 * t17364 - t17415) * t16843;
t16037 = t16384 * t16846 + t16844 * t17008 + t16894;
t16043 = t16384 * t16844 - t16846 * t17008 + t16893;
t17494 = t16845 * t16912;
t16284 = (t16843 * t17358 + t16890 * t17494) * t17380 - t16845 * t17415 - t16895 + (-t16843 * t17409 + t16845 * t17364) * t16842;
t16868 = legFrame(4,1);
t16814 = sin(t16868);
t16826 = cos(t16868);
t16838 = cos(t16880);
t15869 = -t16284 * t16838 + (t16037 * t16814 - t16043 * t16826) * t16832;
t15899 = t16037 * t16826 + t16814 * t16043;
t18019 = -t15869 * t16851 + t15899 * t16856;
t16385 = t16762 * t17204 - t16892 * t17499 - t16913 * t17168;
t17359 = t16891 * t17937;
t17365 = t16890 * t17937;
t17408 = t16891 * t16913;
t17414 = t16891 * t16907;
t17007 = (t16845 * t17359 + t16913 * t17207) * t17380 - t16842 * (t16845 * t17408 + t16892 * t17937) - (t16842 * t17365 - t17414) * t16843;
t16038 = t16385 * t16846 + t16844 * t17007 + t16894;
t16044 = t16385 * t16844 - t16846 * t17007 + t16893;
t17493 = t16845 * t16913;
t16285 = (t16843 * t17359 + t16890 * t17493) * t17380 - t16845 * t17414 - t16895 + (-t16843 * t17408 + t16845 * t17365) * t16842;
t16869 = legFrame(3,1);
t16815 = sin(t16869);
t16827 = cos(t16869);
t16839 = cos(t16881);
t15870 = -t16285 * t16839 + (t16038 * t16815 - t16044 * t16827) * t16833;
t15900 = t16038 * t16827 + t16815 * t16044;
t18018 = -t15870 * t16851 + t15900 * t16856;
t16386 = t16762 * t17205 - t16892 * t17498 - t16914 * t17168;
t17360 = t16891 * t17938;
t17366 = t16890 * t17938;
t17407 = t16891 * t16914;
t17413 = t16891 * t16908;
t17006 = (t16845 * t17360 + t16914 * t17207) * t17380 - t16842 * (t16845 * t17407 + t16892 * t17938) - (t16842 * t17366 - t17413) * t16843;
t16039 = t16386 * t16846 + t16844 * t17006 + t16894;
t16045 = t16386 * t16844 - t16846 * t17006 + t16893;
t17492 = t16845 * t16914;
t16286 = (t16843 * t17360 + t16890 * t17492) * t17380 - t16845 * t17413 - t16895 + (-t16843 * t17407 + t16845 * t17366) * t16842;
t16870 = legFrame(2,1);
t16816 = sin(t16870);
t16828 = cos(t16870);
t16840 = cos(t16882);
t15871 = -t16286 * t16840 + (t16039 * t16816 - t16045 * t16828) * t16834;
t15901 = t16039 * t16828 + t16816 * t16045;
t18017 = -t15871 * t16851 + t15901 * t16856;
t16387 = t16762 * t17206 - t16892 * t17497 - t16915 * t17168;
t17361 = t16891 * t17939;
t17367 = t16890 * t17939;
t17406 = t16891 * t16915;
t17412 = t16891 * t16909;
t17005 = (t16845 * t17361 + t16915 * t17207) * t17380 - t16842 * (t16845 * t17406 + t16892 * t17939) - (t16842 * t17367 - t17412) * t16843;
t16040 = t16387 * t16846 + t16844 * t17005 + t16894;
t16046 = t16387 * t16844 - t16846 * t17005 + t16893;
t17491 = t16845 * t16915;
t16287 = (t16843 * t17361 + t16890 * t17491) * t17380 - t16845 * t17412 - t16895 + (-t16843 * t17406 + t16845 * t17367) * t16842;
t16871 = legFrame(1,1);
t16817 = sin(t16871);
t16829 = cos(t16871);
t16841 = cos(t16883);
t15872 = -t16287 * t16841 + (t16040 * t16817 - t16046 * t16829) * t16835;
t15902 = t16040 * t16829 + t16817 * t16046;
t18016 = -t15872 * t16851 + t15902 * t16856;
t17472 = t16853 * t16854;
t17266 = t16756 * t17472;
t16323 = t16503 * t16859 + t17266;
t16669 = t17984 * t16875;
t17470 = t16853 * t16872;
t16506 = t16789 * t17470 + t16669;
t16482 = t16506 * t16856;
t16233 = -t16323 * t16851 + t16482;
t17478 = t16851 * t16872;
t16340 = t16756 * t17478 - t16856 * t17105;
t16806 = sin(t16860);
t17430 = t16859 * t16830;
t17458 = t16854 * t16856;
t17480 = t16851 * t16854;
t17738 = t17387 * t16830;
t17225 = t16323 * t16856 + t16851 * t16506;
t18003 = t16806 * t17225;
t16943 = t16789 * (t16836 * (t16806 * t17458 + t16818 * t17480) + t17430) + t16849 * (t16836 * (t16340 * t16806 + t18064) + t18058) - t16858 * (t16836 * (t16233 * t16818 - t18003) + t17738);
t16325 = t16504 * t16859 + t17266;
t16670 = t17984 * t16876;
t17469 = t16853 * t16873;
t16507 = t16790 * t17469 + t16670;
t16483 = t16507 * t16856;
t16234 = -t16325 * t16851 + t16483;
t17477 = t16851 * t16873;
t16341 = t16756 * t17477 - t16856 * t17104;
t16807 = sin(t16861);
t17429 = t16859 * t16831;
t17737 = t17386 * t16831;
t17224 = t16325 * t16856 + t16851 * t16507;
t18002 = t16807 * t17224;
t16942 = t16790 * (t16837 * (t16807 * t17458 + t16819 * t17480) + t17429) + t16849 * (t16837 * (t16341 * t16807 + t18063) + t18057) - t16858 * (t16837 * (t16234 * t16819 - t18002) + t17737);
t16327 = t16505 * t16859 + t17266;
t16671 = t17984 * t16877;
t17468 = t16853 * t16874;
t16508 = t16791 * t17468 + t16671;
t16484 = t16508 * t16856;
t16235 = -t16327 * t16851 + t16484;
t17476 = t16851 * t16874;
t16342 = t16756 * t17476 - t16856 * t17103;
t16808 = sin(t16862);
t17428 = t16859 * t16832;
t17736 = t17385 * t16832;
t17223 = t16327 * t16856 + t16851 * t16508;
t18001 = t16808 * t17223;
t16941 = t16791 * (t16838 * (t16808 * t17458 + t16820 * t17480) + t17428) + t16849 * (t16838 * (t16342 * t16808 + t18062) + t18056) - t16858 * (t16838 * (t16235 * t16820 - t18001) + t17736);
t16332 = t16509 * t16859 + t17266;
t16675 = t17984 * t16887;
t17464 = t16853 * t16884;
t16512 = t16793 * t17464 + t16675;
t16491 = t16512 * t16856;
t16239 = -t16332 * t16851 + t16491;
t17475 = t16851 * t16884;
t16346 = t16756 * t17475 - t16856 * t17102;
t16809 = sin(t16863);
t17427 = t16859 * t16833;
t17735 = t17384 * t16833;
t17222 = t16332 * t16856 + t16851 * t16512;
t18000 = t16809 * t17222;
t16940 = t16793 * (t16839 * (t16809 * t17458 + t16821 * t17480) + t17427) + t16849 * (t16839 * (t16346 * t16809 + t18061) + t18055) - t16858 * (t16839 * (t16239 * t16821 - t18000) + t17735);
t16334 = t16510 * t16859 + t17266;
t16676 = t17984 * t16888;
t17463 = t16853 * t16885;
t16513 = t16794 * t17463 + t16676;
t16492 = t16513 * t16856;
t16240 = -t16334 * t16851 + t16492;
t17474 = t16851 * t16885;
t16347 = t16756 * t17474 - t16856 * t17101;
t16810 = sin(t16864);
t17426 = t16859 * t16834;
t17734 = t17383 * t16834;
t17221 = t16334 * t16856 + t16851 * t16513;
t17999 = t16810 * t17221;
t16939 = t16794 * (t16840 * (t16810 * t17458 + t16822 * t17480) + t17426) + t16849 * (t16840 * (t16347 * t16810 + t18060) + t18054) - t16858 * (t16840 * (t16240 * t16822 - t17999) + t17734);
t16336 = t16511 * t16859 + t17266;
t16677 = t17984 * t16889;
t17462 = t16853 * t16886;
t16514 = t16795 * t17462 + t16677;
t16493 = t16514 * t16856;
t16241 = -t16336 * t16851 + t16493;
t17473 = t16851 * t16886;
t16348 = t16756 * t17473 - t16856 * t17100;
t16811 = sin(t16865);
t17425 = t16859 * t16835;
t17733 = t17382 * t16835;
t17220 = t16336 * t16856 + t16851 * t16514;
t17998 = t16811 * t17220;
t16938 = t16795 * (t16841 * (t16811 * t17458 + t16823 * t17480) + t17425) + t16849 * (t16841 * (t16348 * t16811 + t18059) + t18053) - t16858 * (t16841 * (t16241 * t16823 - t17998) + t17733);
t16678 = t16806 * t16856 + t16818 * t16851;
t16684 = -t16806 * t16851 + t16818 * t16856;
t16246 = t16684 * t17457 + t16853 * (-t16678 * t16872 + t16684 * t17424);
t15813 = t15867 * t16856 + t15897 * t16851;
t15735 = t15813 * t16818 + t16806 * t18021;
t17726 = (-t16551 * t16872 + t16669) * t16859;
t15711 = -t15735 * t17726 + (t16806 * t15813 - t16818 * t18021) * t18033;
t17536 = t16836 * t16872;
t17560 = t16830 * t16872;
t15807 = (t16035 * t17424 + t16041 * t17560) * t16824 + (-t16035 * t17560 + t16041 * t17424) * t16812 + t16282 * t17536;
t17246 = t16836 * t17424;
t17252 = t16830 * t17424;
t16973 = (-t16035 * t16872 + t16041 * t17252) * t16824 - (t16035 * t17252 + t16041 * t16872) * t16812 + t16282 * t17246;
t15690 = ((-t16851 * t15807 + t16856 * t16973) * t16818 - (t15807 * t16856 + t16851 * t16973) * t16806) * t16853 - t15735 * t17457;
t16517 = t16789 * t17456 + t16708;
t17272 = t16854 * t16666;
t16152 = -t16517 * t17471 + t16858 * t17272 + t17399;
t17933 = 0.1e1 / t16152;
t17861 = t15690 * t17933;
t17306 = t15711 * t17861;
t17194 = t16203 * t17306;
t17442 = t16858 * t16872;
t17750 = (t16684 * (t16756 * t17442 + t16506) * t16859 - t18033 * t16678) * t16203;
t17864 = t15690 ^ 2 / t16152 ^ 2;
t17997 = t16836 * (0.2e1 * t16246 * t17194 * t18022 - t17750 * t17864);
t16679 = t16807 * t16856 + t16819 * t16851;
t16685 = -t16807 * t16851 + t16819 * t16856;
t16247 = t16685 * t17457 + t16853 * (-t16679 * t16873 + t16685 * t17423);
t15814 = t15868 * t16856 + t15898 * t16851;
t15736 = t15814 * t16819 + t16807 * t18020;
t17725 = (-t16552 * t16873 + t16670) * t16859;
t15712 = -t15736 * t17725 + (t16807 * t15814 - t16819 * t18020) * t18032;
t17534 = t16837 * t16873;
t17555 = t16831 * t16873;
t15808 = (t16036 * t17423 + t16042 * t17555) * t16825 + (-t16036 * t17555 + t16042 * t17423) * t16813 + t16283 * t17534;
t17245 = t16837 * t17423;
t17251 = t16831 * t17423;
t16972 = (-t16036 * t16873 + t16042 * t17251) * t16825 - (t16036 * t17251 + t16042 * t16873) * t16813 + t16283 * t17245;
t15691 = ((-t16851 * t15808 + t16856 * t16972) * t16819 - (t15808 * t16856 + t16851 * t16972) * t16807) * t16853 - t15736 * t17457;
t16520 = t16790 * t17455 + t16708;
t17271 = t16854 * t16667;
t16153 = -t16520 * t17471 + t16858 * t17271 + t17398;
t17932 = 0.1e1 / t16153;
t17860 = t15691 * t17932;
t17303 = t15712 * t17860;
t17193 = t16204 * t17303;
t17441 = t16858 * t16873;
t17749 = (t16685 * (t16756 * t17441 + t16507) * t16859 - t18032 * t16679) * t16204;
t17863 = t15691 ^ 2 / t16153 ^ 2;
t17996 = t16837 * (0.2e1 * t16247 * t17193 * t18023 - t17749 * t17863);
t16680 = t16808 * t16856 + t16820 * t16851;
t16686 = -t16808 * t16851 + t16820 * t16856;
t16248 = t16686 * t17457 + t16853 * (-t16680 * t16874 + t16686 * t17422);
t15815 = t15869 * t16856 + t15899 * t16851;
t15737 = t15815 * t16820 + t16808 * t18019;
t17724 = (-t16553 * t16874 + t16671) * t16859;
t15713 = -t15737 * t17724 + (t16808 * t15815 - t16820 * t18019) * t18031;
t17532 = t16838 * t16874;
t17550 = t16832 * t16874;
t15809 = (t16037 * t17422 + t16043 * t17550) * t16826 + (-t16037 * t17550 + t16043 * t17422) * t16814 + t16284 * t17532;
t17244 = t16838 * t17422;
t17250 = t16832 * t17422;
t16971 = (-t16037 * t16874 + t16043 * t17250) * t16826 - (t16037 * t17250 + t16043 * t16874) * t16814 + t16284 * t17244;
t15692 = ((-t16851 * t15809 + t16856 * t16971) * t16820 - (t15809 * t16856 + t16851 * t16971) * t16808) * t16853 - t15737 * t17457;
t16523 = t16791 * t17454 + t16708;
t17270 = t16854 * t16668;
t16154 = -t16523 * t17471 + t16858 * t17270 + t17397;
t17931 = 0.1e1 / t16154;
t17859 = t15692 * t17931;
t17300 = t15713 * t17859;
t17192 = t16205 * t17300;
t17440 = t16858 * t16874;
t17748 = (t16686 * (t16756 * t17440 + t16508) * t16859 - t18031 * t16680) * t16205;
t17862 = t15692 ^ 2 / t16154 ^ 2;
t17995 = t16838 * (0.2e1 * t16248 * t17192 * t18024 - t17748 * t17862);
t16681 = t16809 * t16856 + t16821 * t16851;
t16687 = -t16809 * t16851 + t16821 * t16856;
t16249 = t16687 * t17457 + t16853 * (-t16681 * t16884 + t16687 * t17421);
t15816 = t15870 * t16856 + t15900 * t16851;
t15738 = t15816 * t16821 + t16809 * t18018;
t17717 = (-t16554 * t16884 + t16675) * t16859;
t15714 = -t15738 * t17717 + (t16809 * t15816 - t16821 * t18018) * t18030;
t17530 = t16839 * t16884;
t17546 = t16833 * t16884;
t15810 = (t16038 * t17421 + t16044 * t17546) * t16827 + (-t16038 * t17546 + t16044 * t17421) * t16815 + t16285 * t17530;
t17243 = t16839 * t17421;
t17249 = t16833 * t17421;
t16970 = -(t16038 * t17249 + t16044 * t16884) * t16815 + (-t16038 * t16884 + t16044 * t17249) * t16827 + t16285 * t17243;
t15696 = ((-t16851 * t15810 + t16856 * t16970) * t16821 - t16809 * (t15810 * t16856 + t16851 * t16970)) * t16853 - t15738 * t17457;
t16526 = t16793 * t17453 + t16708;
t17269 = t16854 * t16672;
t16173 = -t16526 * t17471 + t16858 * t17269 + t17396;
t17930 = 0.1e1 / t16173;
t17855 = t15696 * t17930;
t17297 = t15714 * t17855;
t17191 = t16206 * t17297;
t17436 = t16858 * t16884;
t17747 = (t16687 * (t16756 * t17436 + t16512) * t16859 - t18030 * t16681) * t16206;
t17858 = t15696 ^ 2 / t16173 ^ 2;
t17994 = t16839 * (0.2e1 * t16249 * t17191 * t18025 - t17747 * t17858);
t16682 = t16810 * t16856 + t16822 * t16851;
t16688 = -t16810 * t16851 + t16822 * t16856;
t16250 = t16688 * t17457 + t16853 * (-t16682 * t16885 + t16688 * t17420);
t15817 = t15871 * t16856 + t15901 * t16851;
t15739 = t15817 * t16822 + t16810 * t18017;
t17716 = (-t16555 * t16885 + t16676) * t16859;
t15715 = -t15739 * t17716 + t18029 * (t16810 * t15817 - t16822 * t18017);
t17528 = t16840 * t16885;
t17542 = t16834 * t16885;
t15811 = (t16039 * t17420 + t16045 * t17542) * t16828 + (-t16039 * t17542 + t16045 * t17420) * t16816 + t16286 * t17528;
t17242 = t16840 * t17420;
t17248 = t16834 * t17420;
t16969 = -(t16039 * t17248 + t16045 * t16885) * t16816 + (-t16039 * t16885 + t16045 * t17248) * t16828 + t16286 * t17242;
t15697 = ((-t16851 * t15811 + t16856 * t16969) * t16822 - t16810 * (t15811 * t16856 + t16851 * t16969)) * t16853 - t15739 * t17457;
t16529 = t16794 * t17452 + t16708;
t17268 = t16854 * t16673;
t16174 = -t16529 * t17471 + t16858 * t17268 + t17395;
t17929 = 0.1e1 / t16174;
t17854 = t15697 * t17929;
t17294 = t15715 * t17854;
t17190 = t16207 * t17294;
t17435 = t16858 * t16885;
t17746 = (t16688 * (t16756 * t17435 + t16513) * t16859 - t18029 * t16682) * t16207;
t17857 = t15697 ^ 2 / t16174 ^ 2;
t17993 = t16840 * (0.2e1 * t16250 * t17190 * t18026 - t17746 * t17857);
t16683 = t16811 * t16856 + t16823 * t16851;
t16689 = -t16811 * t16851 + t16823 * t16856;
t16251 = t16689 * t17457 + t16853 * (-t16683 * t16886 + t16689 * t17419);
t15818 = t15872 * t16856 + t15902 * t16851;
t15740 = t15818 * t16823 + t16811 * t18016;
t17715 = (-t16556 * t16886 + t16677) * t16859;
t15716 = -t15740 * t17715 + t18028 * (t16811 * t15818 - t16823 * t18016);
t17526 = t16841 * t16886;
t17538 = t16835 * t16886;
t15812 = (t16040 * t17419 + t16046 * t17538) * t16829 + (-t16040 * t17538 + t16046 * t17419) * t16817 + t16287 * t17526;
t17241 = t16841 * t17419;
t17247 = t16835 * t17419;
t16968 = -(t16040 * t17247 + t16046 * t16886) * t16817 + (-t16040 * t16886 + t16046 * t17247) * t16829 + t16287 * t17241;
t15698 = ((-t16851 * t15812 + t16856 * t16968) * t16823 - t16811 * (t15812 * t16856 + t16851 * t16968)) * t16853 - t15740 * t17457;
t16532 = t16795 * t17451 + t16708;
t17267 = t16854 * t16674;
t16175 = -t16532 * t17471 + t16858 * t17267 + t17394;
t17928 = 0.1e1 / t16175;
t17853 = t15698 * t17928;
t17291 = t15716 * t17853;
t17189 = t16208 * t17291;
t17434 = t16858 * t16886;
t17745 = (t16689 * (t16756 * t17434 + t16514) * t16859 - t18028 * t16683) * t16208;
t17856 = t15698 ^ 2 / t16175 ^ 2;
t17992 = t16841 * (0.2e1 * t16251 * t17189 * t18027 - t17745 * t17856);
t17235 = t16846 * t17380;
t17514 = t16844 * t16842;
t16618 = -t16843 * t17235 + t17514;
t17418 = t16891 * t16892;
t17233 = t17380 * t16891;
t17503 = t16845 * t16892;
t16651 = t16842 * t17503 - t17233;
t17697 = t16651 * t16762;
t17991 = t16845 * (t16618 * t17418 + t16846 * t17697);
t17515 = t16843 * t16909;
t17675 = t17097 * t16845;
t16562 = -t17515 - t17675;
t17489 = t16846 * t16891;
t17521 = t16843 * t16846;
t17727 = t18077 * t16892;
t16064 = -(t16752 * t17521 + t16844 * t17097) * t16890 - t16562 * t17489 - t17727;
t17513 = t16844 * t16891;
t17522 = t16843 * t16844;
t17718 = t16362 * t16892;
t16063 = -(t16752 * t17522 - t16846 * t17097) * t16890 - t16562 * t17513 + t17718;
t17516 = t16843 * t16908;
t17676 = t17096 * t16845;
t16561 = -t17516 - t17676;
t17728 = t18078 * t16892;
t16062 = -(t16751 * t17521 + t16844 * t17096) * t16890 - t16561 * t17489 - t17728;
t17719 = t16361 * t16892;
t16061 = -(t16751 * t17522 - t16846 * t17096) * t16890 - t16561 * t17513 + t17719;
t17517 = t16843 * t16907;
t17677 = t17095 * t16845;
t16560 = -t17517 - t17677;
t17729 = t18079 * t16892;
t16060 = -(t16750 * t17521 + t16844 * t17095) * t16890 - t16560 * t17489 - t17729;
t17720 = t16360 * t16892;
t16059 = -(t16750 * t17522 - t16846 * t17095) * t16890 - t16560 * t17513 + t17720;
t17518 = t16843 * t16906;
t17678 = t17094 * t16845;
t16559 = -t17518 - t17678;
t17730 = t18080 * t16892;
t16058 = -(t16749 * t17521 + t16844 * t17094) * t16890 - t16559 * t17489 - t17730;
t17721 = t16359 * t16892;
t16057 = -(t16749 * t17522 - t16846 * t17094) * t16890 - t16559 * t17513 + t17721;
t17519 = t16843 * t16905;
t17679 = t17093 * t16845;
t16558 = -t17519 - t17679;
t17731 = t18081 * t16892;
t16056 = -(t16748 * t17521 + t16844 * t17093) * t16890 - t16558 * t17489 - t17731;
t17722 = t16358 * t16892;
t16055 = -(t16748 * t17522 - t16846 * t17093) * t16890 - t16558 * t17513 + t17722;
t17520 = t16843 * t16904;
t17680 = t17092 * t16845;
t16557 = -t17520 - t17680;
t17732 = t18082 * t16892;
t16054 = -(t16747 * t17521 + t16844 * t17092) * t16890 - t16557 * t17489 - t17732;
t17723 = t16357 * t16892;
t16053 = -(t16747 * t17522 - t16846 * t17092) * t16890 - t16557 * t17513 + t17723;
t17977 = -MDP(5) * t16855 + MDP(6) * t16850;
t17976 = t16858 * (MDP(5) * t16850 + MDP(6) * t16855);
t17046 = t16323 * t16824;
t16134 = t16506 * t16812 + t16830 * t17046;
t17047 = t16323 * t16812;
t17594 = t16824 * t16830;
t16176 = t16506 * t17594 - t17047;
t17081 = -t16812 * t16872 + t16824 * t17252;
t17562 = t16830 * t16854;
t17259 = t16789 * t17562;
t16259 = -t16756 * t17081 - t16824 * t17259;
t17083 = t16812 * t17424 + t16824 * t17560;
t17632 = t16812 * t16854;
t16270 = -t16756 * t17083 - t16789 * t17632;
t17537 = t16836 * t16859;
t17561 = t16830 * t16856;
t17563 = t16830 * t16851;
t17593 = t16824 * t16836;
t17600 = t16818 * t16854;
t17631 = t16812 * t16856;
t17633 = t16812 * t16851;
t17642 = t16806 * t16854;
t17951 = t16789 * ((t16824 * t17563 + t17631) * t17600 + (t16824 * t17561 - t17633) * t17642 - t16824 * t17537) + t16849 * ((t16259 * t16856 - t16270 * t16851) * t16806 + (t16259 * t16851 + t16270 * t16856) * t16818 - t17978 * t17593) + t16858 * ((t16134 * t16856 + t16176 * t16851) * t16806 - (-t16134 * t16851 + t16176 * t16856) * t16818 + t17387 * t17593);
t16131 = t16506 * t16824 - t16830 * t17047;
t17635 = t16812 * t16830;
t16179 = t16506 * t17635 + t17046;
t17080 = t16812 * t17252 + t16824 * t16872;
t16258 = -t16756 * t17080 - t16812 * t17259;
t17082 = t16812 * t17560 - t16824 * t17424;
t17591 = t16824 * t16854;
t16271 = t16756 * t17082 - t16789 * t17591;
t17590 = t16824 * t16856;
t17592 = t16824 * t16851;
t17634 = t16812 * t16836;
t17950 = t16789 * ((-t16812 * t17563 + t17590) * t17600 - (t16812 * t17561 + t17592) * t17642 + t16812 * t17537) - t16849 * ((t16258 * t16856 + t16271 * t16851) * t16806 - (-t16258 * t16851 + t16271 * t16856) * t16818 - t17978 * t17634) - t16858 * (-(t16131 * t16856 - t16179 * t16851) * t16806 - (t16131 * t16851 + t16179 * t16856) * t16818 + t17387 * t17634);
t17044 = t16325 * t16825;
t16135 = t16507 * t16813 + t16831 * t17044;
t17045 = t16325 * t16813;
t17589 = t16825 * t16831;
t16177 = t16507 * t17589 - t17045;
t17077 = -t16813 * t16873 + t16825 * t17251;
t17557 = t16831 * t16854;
t17258 = t16790 * t17557;
t16261 = -t16756 * t17077 - t16825 * t17258;
t17079 = t16813 * t17423 + t16825 * t17555;
t17626 = t16813 * t16854;
t16272 = -t16756 * t17079 - t16790 * t17626;
t17535 = t16837 * t16859;
t17556 = t16831 * t16856;
t17558 = t16831 * t16851;
t17588 = t16825 * t16837;
t17599 = t16819 * t16854;
t17625 = t16813 * t16856;
t17627 = t16813 * t16851;
t17641 = t16807 * t16854;
t17949 = t16790 * ((t16825 * t17558 + t17625) * t17599 + (t16825 * t17556 - t17627) * t17641 - t16825 * t17535) + t16849 * ((t16261 * t16856 - t16272 * t16851) * t16807 + (t16261 * t16851 + t16272 * t16856) * t16819 - t17979 * t17588) + t16858 * ((t16135 * t16856 + t16177 * t16851) * t16807 - (-t16135 * t16851 + t16177 * t16856) * t16819 + t17386 * t17588);
t16132 = t16507 * t16825 - t16831 * t17045;
t17629 = t16813 * t16831;
t16180 = t16507 * t17629 + t17044;
t17076 = t16813 * t17251 + t16825 * t16873;
t16260 = -t16756 * t17076 - t16813 * t17258;
t17078 = t16813 * t17555 - t16825 * t17423;
t17586 = t16825 * t16854;
t16273 = t16756 * t17078 - t16790 * t17586;
t17585 = t16825 * t16856;
t17587 = t16825 * t16851;
t17628 = t16813 * t16837;
t17948 = t16790 * ((-t16813 * t17558 + t17585) * t17599 - (t16813 * t17556 + t17587) * t17641 + t16813 * t17535) - t16849 * ((t16260 * t16856 + t16273 * t16851) * t16807 - (-t16260 * t16851 + t16273 * t16856) * t16819 - t17979 * t17628) - t16858 * (-(t16132 * t16856 - t16180 * t16851) * t16807 - (t16132 * t16851 + t16180 * t16856) * t16819 + t17386 * t17628);
t17042 = t16327 * t16826;
t16136 = t16508 * t16814 + t16832 * t17042;
t17043 = t16327 * t16814;
t17584 = t16826 * t16832;
t16178 = t16508 * t17584 - t17043;
t17073 = -t16814 * t16874 + t16826 * t17250;
t17552 = t16832 * t16854;
t17257 = t16791 * t17552;
t16263 = -t16756 * t17073 - t16826 * t17257;
t17075 = t16814 * t17422 + t16826 * t17550;
t17620 = t16814 * t16854;
t16274 = -t16756 * t17075 - t16791 * t17620;
t17533 = t16838 * t16859;
t17551 = t16832 * t16856;
t17553 = t16832 * t16851;
t17583 = t16826 * t16838;
t17598 = t16820 * t16854;
t17619 = t16814 * t16856;
t17621 = t16814 * t16851;
t17640 = t16808 * t16854;
t17947 = t16791 * ((t16826 * t17553 + t17619) * t17598 + (t16826 * t17551 - t17621) * t17640 - t16826 * t17533) + t16849 * ((t16263 * t16856 - t16274 * t16851) * t16808 + (t16263 * t16851 + t16274 * t16856) * t16820 - t17980 * t17583) + t16858 * ((t16136 * t16856 + t16178 * t16851) * t16808 - (-t16136 * t16851 + t16178 * t16856) * t16820 + t17385 * t17583);
t16133 = t16508 * t16826 - t16832 * t17043;
t17623 = t16814 * t16832;
t16181 = t16508 * t17623 + t17042;
t17072 = t16814 * t17250 + t16826 * t16874;
t16262 = -t16756 * t17072 - t16814 * t17257;
t17074 = t16814 * t17550 - t16826 * t17422;
t17581 = t16826 * t16854;
t16275 = t16756 * t17074 - t16791 * t17581;
t17580 = t16826 * t16856;
t17582 = t16826 * t16851;
t17622 = t16814 * t16838;
t17946 = t16791 * ((-t16814 * t17553 + t17580) * t17598 - (t16814 * t17551 + t17582) * t17640 + t16814 * t17533) - t16849 * ((t16262 * t16856 + t16275 * t16851) * t16808 - (-t16262 * t16851 + t16275 * t16856) * t16820 - t17980 * t17622) - t16858 * (-(t16133 * t16856 - t16181 * t16851) * t16808 - (t16133 * t16851 + t16181 * t16856) * t16820 + t17385 * t17622);
t17040 = t16332 * t16827;
t16140 = t16512 * t16815 + t16833 * t17040;
t17041 = t16332 * t16815;
t17579 = t16827 * t16833;
t16191 = t16512 * t17579 - t17041;
t17069 = -t16815 * t16884 + t16827 * t17249;
t17548 = t16833 * t16854;
t17256 = t16793 * t17548;
t16265 = -t16756 * t17069 - t16827 * t17256;
t17071 = t16815 * t17421 + t16827 * t17546;
t17614 = t16815 * t16854;
t16276 = -t16756 * t17071 - t16793 * t17614;
t17531 = t16839 * t16859;
t17547 = t16833 * t16856;
t17549 = t16833 * t16851;
t17578 = t16827 * t16839;
t17597 = t16821 * t16854;
t17613 = t16815 * t16856;
t17615 = t16815 * t16851;
t17639 = t16809 * t16854;
t17945 = t16793 * ((t16827 * t17549 + t17613) * t17597 + (t16827 * t17547 - t17615) * t17639 - t16827 * t17531) + t16849 * ((t16265 * t16856 - t16276 * t16851) * t16809 + (t16265 * t16851 + t16276 * t16856) * t16821 - t17981 * t17578) + t16858 * ((t16140 * t16856 + t16191 * t16851) * t16809 - (-t16140 * t16851 + t16191 * t16856) * t16821 + t17384 * t17578);
t16137 = t16512 * t16827 - t16833 * t17041;
t17617 = t16815 * t16833;
t16194 = t16512 * t17617 + t17040;
t17068 = t16815 * t17249 + t16827 * t16884;
t16264 = -t16756 * t17068 - t16815 * t17256;
t17070 = t16815 * t17546 - t16827 * t17421;
t17576 = t16827 * t16854;
t16277 = t16756 * t17070 - t16793 * t17576;
t17575 = t16827 * t16856;
t17577 = t16827 * t16851;
t17616 = t16815 * t16839;
t17944 = t16793 * ((-t16815 * t17549 + t17575) * t17597 - (t16815 * t17547 + t17577) * t17639 + t16815 * t17531) - t16849 * ((t16264 * t16856 + t16277 * t16851) * t16809 - (-t16264 * t16851 + t16277 * t16856) * t16821 - t17981 * t17616) - t16858 * (-(t16137 * t16856 - t16194 * t16851) * t16809 - (t16137 * t16851 + t16194 * t16856) * t16821 + t17384 * t17616);
t17038 = t16334 * t16828;
t16141 = t16513 * t16816 + t16834 * t17038;
t17039 = t16334 * t16816;
t17574 = t16828 * t16834;
t16192 = t16513 * t17574 - t17039;
t17065 = -t16816 * t16885 + t16828 * t17248;
t17544 = t16834 * t16854;
t17255 = t16794 * t17544;
t16267 = -t16756 * t17065 - t16828 * t17255;
t17067 = t16816 * t17420 + t16828 * t17542;
t17608 = t16816 * t16854;
t16278 = -t16756 * t17067 - t16794 * t17608;
t17529 = t16840 * t16859;
t17543 = t16834 * t16856;
t17545 = t16834 * t16851;
t17573 = t16828 * t16840;
t17596 = t16822 * t16854;
t17607 = t16816 * t16856;
t17609 = t16816 * t16851;
t17638 = t16810 * t16854;
t17943 = t16794 * ((t16828 * t17545 + t17607) * t17596 + (t16828 * t17543 - t17609) * t17638 - t16828 * t17529) + t16849 * ((t16267 * t16856 - t16278 * t16851) * t16810 + (t16267 * t16851 + t16278 * t16856) * t16822 - t17982 * t17573) + t16858 * ((t16141 * t16856 + t16192 * t16851) * t16810 - (-t16141 * t16851 + t16192 * t16856) * t16822 + t17383 * t17573);
t16138 = t16513 * t16828 - t16834 * t17039;
t17611 = t16816 * t16834;
t16195 = t16513 * t17611 + t17038;
t17064 = t16816 * t17248 + t16828 * t16885;
t16266 = -t16756 * t17064 - t16816 * t17255;
t17066 = t16816 * t17542 - t16828 * t17420;
t17571 = t16828 * t16854;
t16279 = t16756 * t17066 - t16794 * t17571;
t17570 = t16828 * t16856;
t17572 = t16828 * t16851;
t17610 = t16816 * t16840;
t17942 = t16794 * ((-t16816 * t17545 + t17570) * t17596 - (t16816 * t17543 + t17572) * t17638 + t16816 * t17529) - t16849 * ((t16266 * t16856 + t16279 * t16851) * t16810 - (-t16266 * t16851 + t16279 * t16856) * t16822 - t17982 * t17610) - t16858 * (-(t16138 * t16856 - t16195 * t16851) * t16810 - (t16138 * t16851 + t16195 * t16856) * t16822 + t17383 * t17610);
t17036 = t16336 * t16829;
t16142 = t16514 * t16817 + t16835 * t17036;
t17037 = t16336 * t16817;
t17569 = t16829 * t16835;
t16193 = t16514 * t17569 - t17037;
t17061 = -t16817 * t16886 + t16829 * t17247;
t17540 = t16835 * t16854;
t17254 = t16795 * t17540;
t16269 = -t16756 * t17061 - t16829 * t17254;
t17063 = t16817 * t17419 + t16829 * t17538;
t17602 = t16817 * t16854;
t16280 = -t16756 * t17063 - t16795 * t17602;
t17527 = t16841 * t16859;
t17539 = t16835 * t16856;
t17541 = t16835 * t16851;
t17568 = t16829 * t16841;
t17595 = t16823 * t16854;
t17601 = t16817 * t16856;
t17603 = t16817 * t16851;
t17637 = t16811 * t16854;
t17941 = t16795 * ((t16829 * t17541 + t17601) * t17595 + (t16829 * t17539 - t17603) * t17637 - t16829 * t17527) + t16849 * ((t16269 * t16856 - t16280 * t16851) * t16811 + (t16269 * t16851 + t16280 * t16856) * t16823 - t17983 * t17568) + t16858 * ((t16142 * t16856 + t16193 * t16851) * t16811 - (-t16142 * t16851 + t16193 * t16856) * t16823 + t17382 * t17568);
t16139 = t16514 * t16829 - t16835 * t17037;
t17605 = t16817 * t16835;
t16196 = t16514 * t17605 + t17036;
t17060 = t16817 * t17247 + t16829 * t16886;
t16268 = -t16756 * t17060 - t16817 * t17254;
t17062 = t16817 * t17538 - t16829 * t17419;
t17566 = t16829 * t16854;
t16281 = t16756 * t17062 - t16795 * t17566;
t17565 = t16829 * t16856;
t17567 = t16829 * t16851;
t17604 = t16817 * t16841;
t17940 = t16795 * ((-t16817 * t17541 + t17565) * t17595 - (t16817 * t17539 + t17567) * t17637 + t16817 * t17527) - t16849 * ((t16268 * t16856 + t16281 * t16851) * t16811 - (-t16268 * t16851 + t16281 * t16856) * t16823 - t17983 * t17604) - t16858 * (-(t16139 * t16856 - t16196 * t16851) * t16811 - (t16139 * t16851 + t16196 * t16856) * t16823 + t17382 * t17604);
t16471 = t16651 ^ 2;
t17236 = t16845 * t17380;
t17524 = t16842 * t16891;
t16653 = t16892 * t17236 + t17524;
t16472 = t16653 ^ 2;
t16614 = t16762 ^ 2;
t16593 = -t16843 * t17489 - t16844 * t17503;
t17488 = t16846 * t16892;
t16594 = t16843 * t17513 - t16845 * t17488;
t15777 = (-t16357 * t16594 - t16593 * t18082) * t16890 + ((-t16054 - t17732) * t16846 + (-t16053 + t17723) * t16844) * t16891 + (-t16053 * t16846 + t16054 * t16844) * t17504;
t16539 = -t16842 * t17496 + t16845 * t17201 + t17520;
t15831 = t16054 * t16892 + (t16539 * t17488 - t18052) * t16891 + (t16054 * t16843 + t16539 * t16593 + (t16357 * t16891 - t18051) * t16845) * t16890;
t17512 = t16844 * t16892;
t15832 = t16053 * t16892 + (t16539 * t17512 + t18051) * t16891 + (t16053 * t16843 - t16539 * t16594 + (t16891 * t18082 - t18052) * t16845) * t16890;
t16406 = t16678 * t17594 + t16684 * t16812;
t16407 = -t16678 * t16812 + t16684 * t17594;
t15951 = t16407 * t17457 + t16853 * (-t16406 * t16872 + t16407 * t17424);
t16418 = t16678 * t16824 + t16684 * t17635;
t16424 = t16678 * t17635 - t16684 * t16824;
t15954 = -t16418 * t17457 - t16853 * (t16418 * t17424 - t16424 * t16872);
t16166 = 0.1e1 / ((-t16517 * t16853 + t17272) * t16858 + t17399);
t16792 = t16853 * t16859;
t17149 = t16853 * t17194;
t17304 = t16875 * t17861;
t17305 = t16872 * t17861;
t17439 = t16858 * t16875;
t17650 = t16756 * t16854;
t17744 = t16246 * t16836;
t17840 = t15711 * t16203;
t15651 = (t15831 * t15954 + t15832 * t15951) * t16166 + (-t15777 * t17744 - ((t16859 * t17840 + t17305 * t17650) * t16849 + ((t16789 * t17305 - t16875 * t17840) * t16853 + t17984 * t17304) * t17457 + (t17861 * t18034 - t17840) * t16859) * t17861 + (t16854 * t17439 + t16792) * t17149) * t18022;
t17927 = 0.2e1 * t15651;
t15778 = (-t16358 * t16594 - t16593 * t18081) * t16890 + ((-t16056 - t17731) * t16846 + (-t16055 + t17722) * t16844) * t16891 + (-t16055 * t16846 + t16056 * t16844) * t17504;
t16540 = -t16842 * t17495 + t16845 * t17202 + t17519;
t15833 = t16056 * t16892 + (t16540 * t17488 - t18050) * t16891 + (t16056 * t16843 + t16540 * t16593 + (t16358 * t16891 - t18049) * t16845) * t16890;
t15834 = t16055 * t16892 + (t16540 * t17512 + t18049) * t16891 + (t16055 * t16843 - t16540 * t16594 + (t16891 * t18081 - t18050) * t16845) * t16890;
t16408 = t16679 * t17589 + t16685 * t16813;
t16409 = -t16679 * t16813 + t16685 * t17589;
t15952 = t16409 * t17457 + t16853 * (-t16408 * t16873 + t16409 * t17423);
t16419 = t16679 * t16825 + t16685 * t17629;
t16425 = t16679 * t17629 - t16685 * t16825;
t15955 = -t16419 * t17457 - t16853 * (t16419 * t17423 - t16425 * t16873);
t16169 = 0.1e1 / ((-t16520 * t16853 + t17271) * t16858 + t17398);
t17148 = t16853 * t17193;
t17301 = t16876 * t17860;
t17302 = t16873 * t17860;
t17438 = t16858 * t16876;
t17743 = t16247 * t16837;
t17839 = t15712 * t16204;
t15652 = (t15833 * t15955 + t15834 * t15952) * t16169 + (-t15778 * t17743 - ((t16859 * t17839 + t17302 * t17650) * t16849 + ((t16790 * t17302 - t16876 * t17839) * t16853 + t17984 * t17301) * t17457 + (t17860 * t18034 - t17839) * t16859) * t17860 + (t16854 * t17438 + t16792) * t17148) * t18023;
t17926 = 0.2e1 * t15652;
t15779 = (-t16359 * t16594 - t16593 * t18080) * t16890 + ((-t16058 - t17730) * t16846 + (-t16057 + t17721) * t16844) * t16891 + (-t16057 * t16846 + t16058 * t16844) * t17504;
t16541 = -t16842 * t17494 + t16845 * t17203 + t17518;
t15835 = t16058 * t16892 + (t16541 * t17488 - t18048) * t16891 + (t16058 * t16843 + t16541 * t16593 + (t16359 * t16891 - t18047) * t16845) * t16890;
t15836 = t16057 * t16892 + (t16541 * t17512 + t18047) * t16891 + (t16057 * t16843 - t16541 * t16594 + (t16891 * t18080 - t18048) * t16845) * t16890;
t16410 = t16680 * t17584 + t16686 * t16814;
t16411 = -t16680 * t16814 + t16686 * t17584;
t15953 = t16411 * t17457 + t16853 * (-t16410 * t16874 + t16411 * t17422);
t16420 = t16680 * t16826 + t16686 * t17623;
t16426 = t16680 * t17623 - t16686 * t16826;
t15956 = -t16420 * t17457 - t16853 * (t16420 * t17422 - t16426 * t16874);
t16172 = 0.1e1 / ((-t16523 * t16853 + t17270) * t16858 + t17397);
t17147 = t16853 * t17192;
t17298 = t16877 * t17859;
t17299 = t16874 * t17859;
t17437 = t16858 * t16877;
t17742 = t16248 * t16838;
t17838 = t15713 * t16205;
t15653 = (t15835 * t15956 + t15836 * t15953) * t16172 + (-t15779 * t17742 - ((t16859 * t17838 + t17299 * t17650) * t16849 + ((t16791 * t17299 - t16877 * t17838) * t16853 + t17984 * t17298) * t17457 + (t17859 * t18034 - t17838) * t16859) * t17859 + (t16854 * t17437 + t16792) * t17147) * t18024;
t17925 = 0.2e1 * t15653;
t15780 = (-t16360 * t16594 - t16593 * t18079) * t16890 + ((-t16060 - t17729) * t16846 + (-t16059 + t17720) * t16844) * t16891 + (-t16059 * t16846 + t16060 * t16844) * t17504;
t16542 = -t16842 * t17493 + t16845 * t17204 + t17517;
t15837 = t16060 * t16892 + (t16542 * t17488 - t18046) * t16891 + (t16060 * t16843 + t16542 * t16593 + (t16360 * t16891 - t18045) * t16845) * t16890;
t15838 = t16059 * t16892 + (t16542 * t17512 + t18045) * t16891 + (t16059 * t16843 - t16542 * t16594 + (t16891 * t18079 - t18046) * t16845) * t16890;
t16412 = t16681 * t17579 + t16687 * t16815;
t16413 = -t16681 * t16815 + t16687 * t17579;
t15957 = t16413 * t17457 + t16853 * (-t16412 * t16884 + t16413 * t17421);
t16421 = t16681 * t16827 + t16687 * t17617;
t16427 = t16681 * t17617 - t16687 * t16827;
t15960 = -t16421 * t17457 - t16853 * (t16421 * t17421 - t16427 * t16884);
t16184 = 0.1e1 / ((-t16526 * t16853 + t17269) * t16858 + t17396);
t17146 = t16853 * t17191;
t17295 = t16887 * t17855;
t17296 = t16884 * t17855;
t17433 = t16858 * t16887;
t17741 = t16249 * t16839;
t17837 = t15714 * t16206;
t15654 = (t15837 * t15960 + t15838 * t15957) * t16184 + (-t15780 * t17741 - ((t16859 * t17837 + t17296 * t17650) * t16849 + ((t16793 * t17296 - t16887 * t17837) * t16853 + t17984 * t17295) * t17457 + (t17855 * t18034 - t17837) * t16859) * t17855 + (t16854 * t17433 + t16792) * t17146) * t18025;
t17924 = 0.2e1 * t15654;
t15781 = (-t16361 * t16594 - t16593 * t18078) * t16890 + ((-t16062 - t17728) * t16846 + (-t16061 + t17719) * t16844) * t16891 + (-t16061 * t16846 + t16062 * t16844) * t17504;
t16543 = -t16842 * t17492 + t16845 * t17205 + t17516;
t15839 = t16062 * t16892 + (t16543 * t17488 - t18044) * t16891 + (t16062 * t16843 + t16543 * t16593 + (t16361 * t16891 - t18043) * t16845) * t16890;
t15840 = t16061 * t16892 + (t16543 * t17512 + t18043) * t16891 + (t16061 * t16843 - t16543 * t16594 + (t16891 * t18078 - t18044) * t16845) * t16890;
t16414 = t16682 * t17574 + t16688 * t16816;
t16415 = -t16682 * t16816 + t16688 * t17574;
t15958 = t16415 * t17457 + t16853 * (-t16414 * t16885 + t16415 * t17420);
t16422 = t16682 * t16828 + t16688 * t17611;
t16428 = t16682 * t17611 - t16688 * t16828;
t15961 = -t16422 * t17457 - t16853 * (t16422 * t17420 - t16428 * t16885);
t16187 = 0.1e1 / ((-t16529 * t16853 + t17268) * t16858 + t17395);
t17145 = t16853 * t17190;
t17292 = t16888 * t17854;
t17293 = t16885 * t17854;
t17432 = t16858 * t16888;
t17740 = t16250 * t16840;
t17836 = t15715 * t16207;
t15655 = (t15839 * t15961 + t15840 * t15958) * t16187 + (-t15781 * t17740 - ((t16859 * t17836 + t17293 * t17650) * t16849 + ((t16794 * t17293 - t16888 * t17836) * t16853 + t17984 * t17292) * t17457 + (t17854 * t18034 - t17836) * t16859) * t17854 + (t16854 * t17432 + t16792) * t17145) * t18026;
t17923 = 0.2e1 * t15655;
t15782 = (-t16362 * t16594 - t16593 * t18077) * t16890 + ((-t16064 - t17727) * t16846 + (-t16063 + t17718) * t16844) * t16891 + (-t16063 * t16846 + t16064 * t16844) * t17504;
t16544 = -t16842 * t17491 + t16845 * t17206 + t17515;
t15841 = t16064 * t16892 + (t16544 * t17488 - t18042) * t16891 + (t16064 * t16843 + t16544 * t16593 + (t16362 * t16891 - t18041) * t16845) * t16890;
t15842 = t16063 * t16892 + (t16544 * t17512 + t18041) * t16891 + (t16063 * t16843 - t16544 * t16594 + (t16891 * t18077 - t18042) * t16845) * t16890;
t16416 = t16683 * t17569 + t16689 * t16817;
t16417 = -t16683 * t16817 + t16689 * t17569;
t15959 = t16417 * t17457 + t16853 * (-t16416 * t16886 + t16417 * t17419);
t16423 = t16683 * t16829 + t16689 * t17605;
t16429 = t16683 * t17605 - t16689 * t16829;
t15962 = -t16423 * t17457 - t16853 * (t16423 * t17419 - t16429 * t16886);
t16190 = 0.1e1 / ((-t16532 * t16853 + t17267) * t16858 + t17394);
t17144 = t16853 * t17189;
t17289 = t16889 * t17853;
t17290 = t16886 * t17853;
t17431 = t16858 * t16889;
t17739 = t16251 * t16841;
t17835 = t15716 * t16208;
t15656 = (t15841 * t15962 + t15842 * t15959) * t16190 + (-t15782 * t17739 - ((t16859 * t17835 + t17290 * t17650) * t16849 + ((t16795 * t17290 - t16889 * t17835) * t16853 + t17984 * t17289) * t17457 + (t17853 * t18034 - t17835) * t16859) * t17853 + (t16854 * t17431 + t16792) * t17144) * t18027;
t17922 = 0.2e1 * t15656;
t17921 = -0.2e1 * t16853;
t17919 = pkin(2) * t16853;
t17915 = MDP(3) * t16854;
t17914 = MDP(4) * t16854;
t16802 = t16849 - 0.1e1;
t17909 = MDP(7) * t16802;
t17908 = MDP(7) * t16853;
t16847 = t16853 ^ 2;
t17907 = MDP(8) * t16847;
t17906 = qJ(3,1) * t16208;
t17905 = qJ(3,2) * t16207;
t17904 = qJ(3,3) * t16206;
t17903 = qJ(3,4) * t16205;
t17902 = qJ(3,5) * t16204;
t17901 = qJ(3,6) * t16203;
t17059 = t18022 * t17984 * t17149;
t16786 = t16859 * t16803;
t16898 = qJ(3,6) ^ 2;
t16916 = pkin(8) ^ 2;
t16761 = (t16857 ^ 2 * t16916 + pkin(3) ^ 2 - t16916) * t16855 ^ 2;
t16917 = pkin(2) ^ 2;
t17239 = 0.2e1 * t16785;
t17011 = pkin(2) * t17239 + 0.2e1 * t16782 * t17917 + t16761 + t16916 + t16917;
t17226 = 0.2e1 * t16643;
t17381 = t17239 * t17917 + t16761;
t17405 = 0.2e1 * t16803;
t17200 = (-t18034 * t17840 + (-((pkin(3) + t16789) * (-pkin(3) + t16789) + t17381) * t16849 + t16789 * t17226 + qJ(3,6) * t17405 + t16898 + t17011) * t17861) / ((qJ(3,6) * t16859 - t16875 * t17650 + t16786) * t16849 + t18083 - t16769) * t17861;
t15849 = ((t16684 * t16756 * t16872 + t16678 * t17105) * t16836 - t18058) * t16849 + ((-t16323 * t16678 + t16506 * t16684) * t16836 + t17738) * t16858 - t16789 * (t16678 * t16836 * t16854 + t17430);
t17786 = t15849 * t18022;
t16595 = t16851 * t17266;
t17479 = t16851 * t16859;
t16209 = -t16503 * t17479 + t16482 - t16595;
t15903 = -t17387 * t16836 + (t16209 * t16818 - t18003) * t16830;
t15933 = t16209 * t16806 + t16818 * t17225;
t16705 = t16856 * t17424 - t17478;
t16296 = -t16705 * t16756 - t16789 * t17458;
t15963 = -t17978 * t16836 + (t16296 * t16806 + t18064) * t16830;
t16077 = t16296 * t16818 - t16806 * t18015;
t16465 = -t16678 * t17562 + t17537;
t15754 = (-t15963 * t16812 + t16077 * t16824) * t16849 + (t15903 * t16812 + t15933 * t16824) * t16858 + t16789 * (t16465 * t16812 + t16684 * t17591);
t17821 = t15754 * t18022;
t15753 = (t15963 * t16824 + t16077 * t16812) * t16849 + (-t15903 * t16824 + t15933 * t16812) * t16858 - t16789 * (t16465 * t16824 - t16684 * t17632);
t17822 = t15753 * t18022;
t17188 = t15777 * t17786 + t15831 * t17821 + t15832 * t17822 + t16858 * t17200;
t15639 = -t16858 * t17059 + t17188;
t17900 = t15639 * t16872;
t17899 = t15639 * t16875;
t17058 = t18023 * t17984 * t17148;
t16899 = qJ(3,5) ^ 2;
t17199 = (-t18034 * t17839 + (-((pkin(3) + t16790) * (-pkin(3) + t16790) + t17381) * t16849 + t16790 * t17226 + qJ(3,5) * t17405 + t16899 + t17011) * t17860) / ((qJ(3,5) * t16859 - t16876 * t17650 + t16786) * t16849 + t18084 - t16770) * t17860;
t15850 = ((t16685 * t16756 * t16873 + t16679 * t17104) * t16837 - t18057) * t16849 + ((-t16325 * t16679 + t16507 * t16685) * t16837 + t17737) * t16858 - t16790 * (t16679 * t16837 * t16854 + t17429);
t17785 = t15850 * t18023;
t16210 = -t16504 * t17479 + t16483 - t16595;
t15904 = -t17386 * t16837 + (t16210 * t16819 - t18002) * t16831;
t15934 = t16210 * t16807 + t16819 * t17224;
t16706 = t16856 * t17423 - t17477;
t16298 = -t16706 * t16756 - t16790 * t17458;
t15964 = -t17979 * t16837 + (t16298 * t16807 + t18063) * t16831;
t16078 = t16298 * t16819 - t16807 * t18014;
t16466 = -t16679 * t17557 + t17535;
t15756 = (-t15964 * t16813 + t16078 * t16825) * t16849 + (t15904 * t16813 + t15934 * t16825) * t16858 + t16790 * (t16466 * t16813 + t16685 * t17586);
t17819 = t15756 * t18023;
t15755 = (t15964 * t16825 + t16078 * t16813) * t16849 + (-t15904 * t16825 + t15934 * t16813) * t16858 - t16790 * (t16466 * t16825 - t16685 * t17626);
t17820 = t15755 * t18023;
t17187 = t15778 * t17785 + t15833 * t17819 + t15834 * t17820 + t16858 * t17199;
t15640 = -t16858 * t17058 + t17187;
t17898 = t15640 * t16873;
t17897 = t15640 * t16876;
t17057 = t18024 * t17984 * t17147;
t16900 = qJ(3,4) ^ 2;
t17198 = (-t18034 * t17838 + (-((pkin(3) + t16791) * (-pkin(3) + t16791) + t17381) * t16849 + t16791 * t17226 + qJ(3,4) * t17405 + t16900 + t17011) * t17859) / ((qJ(3,4) * t16859 - t16877 * t17650 + t16786) * t16849 + t18085 - t16771) * t17859;
t15851 = ((t16686 * t16756 * t16874 + t16680 * t17103) * t16838 - t18056) * t16849 + ((-t16327 * t16680 + t16508 * t16686) * t16838 + t17736) * t16858 - t16791 * (t16680 * t16838 * t16854 + t17428);
t17784 = t15851 * t18024;
t16211 = -t16505 * t17479 + t16484 - t16595;
t15905 = -t17385 * t16838 + (t16211 * t16820 - t18001) * t16832;
t15935 = t16211 * t16808 + t16820 * t17223;
t16707 = t16856 * t17422 - t17476;
t16300 = -t16707 * t16756 - t16791 * t17458;
t15965 = -t17980 * t16838 + (t16300 * t16808 + t18062) * t16832;
t16079 = t16300 * t16820 - t16808 * t18013;
t16467 = -t16680 * t17552 + t17533;
t15758 = (-t15965 * t16814 + t16079 * t16826) * t16849 + (t15905 * t16814 + t15935 * t16826) * t16858 + t16791 * (t16467 * t16814 + t16686 * t17581);
t17817 = t15758 * t18024;
t15757 = (t15965 * t16826 + t16079 * t16814) * t16849 + (-t15905 * t16826 + t15935 * t16814) * t16858 - t16791 * (t16467 * t16826 - t16686 * t17620);
t17818 = t15757 * t18024;
t17186 = t15779 * t17784 + t15835 * t17817 + t15836 * t17818 + t16858 * t17198;
t15641 = -t16858 * t17057 + t17186;
t17896 = t15641 * t16874;
t17895 = t15641 * t16877;
t17056 = t18025 * t17984 * t17146;
t16901 = qJ(3,3) ^ 2;
t17197 = (-t18034 * t17837 + (-((pkin(3) + t16793) * (-pkin(3) + t16793) + t17381) * t16849 + t16793 * t17226 + qJ(3,3) * t17405 + t16901 + t17011) * t17855) / ((qJ(3,3) * t16859 - t16887 * t17650 + t16786) * t16849 + t18086 - t16775) * t17855;
t15852 = ((t16687 * t16756 * t16884 + t16681 * t17102) * t16839 - t18055) * t16849 + ((-t16332 * t16681 + t16512 * t16687) * t16839 + t17735) * t16858 - t16793 * (t16681 * t16839 * t16854 + t17427);
t17783 = t15852 * t18025;
t16227 = -t16509 * t17479 + t16491 - t16595;
t15906 = -t17384 * t16839 + (t16227 * t16821 - t18000) * t16833;
t15942 = t16227 * t16809 + t16821 * t17222;
t16725 = t16856 * t17421 - t17475;
t16314 = -t16725 * t16756 - t16793 * t17458;
t15966 = -t17981 * t16839 + (t16314 * t16809 + t18061) * t16833;
t16080 = t16314 * t16821 - t16809 * t18012;
t16468 = -t16681 * t17548 + t17531;
t15760 = (-t15966 * t16815 + t16080 * t16827) * t16849 + (t15906 * t16815 + t15942 * t16827) * t16858 + t16793 * (t16468 * t16815 + t16687 * t17576);
t17815 = t15760 * t18025;
t15759 = (t15966 * t16827 + t16080 * t16815) * t16849 + (-t15906 * t16827 + t15942 * t16815) * t16858 - t16793 * (t16468 * t16827 - t16687 * t17614);
t17816 = t15759 * t18025;
t17185 = t15780 * t17783 + t15837 * t17815 + t15838 * t17816 + t16858 * t17197;
t15642 = -t16858 * t17056 + t17185;
t17894 = t15642 * t16884;
t17893 = t15642 * t16887;
t17055 = t18026 * t17984 * t17145;
t16902 = qJ(3,2) ^ 2;
t17196 = (-t18034 * t17836 + (-((pkin(3) + t16794) * (-pkin(3) + t16794) + t17381) * t16849 + t16794 * t17226 + qJ(3,2) * t17405 + t16902 + t17011) * t17854) / ((qJ(3,2) * t16859 - t16888 * t17650 + t16786) * t16849 + t18087 - t16776) * t17854;
t15853 = ((t16688 * t16756 * t16885 + t16682 * t17101) * t16840 - t18054) * t16849 + ((-t16334 * t16682 + t16513 * t16688) * t16840 + t17734) * t16858 - t16794 * (t16682 * t16840 * t16854 + t17426);
t17782 = t15853 * t18026;
t16228 = -t16510 * t17479 + t16492 - t16595;
t15907 = -t17383 * t16840 + (t16228 * t16822 - t17999) * t16834;
t15943 = t16228 * t16810 + t16822 * t17221;
t16726 = t16856 * t17420 - t17474;
t16316 = -t16726 * t16756 - t16794 * t17458;
t15967 = -t17982 * t16840 + (t16316 * t16810 + t18060) * t16834;
t16081 = t16316 * t16822 - t16810 * t18011;
t16469 = -t16682 * t17544 + t17529;
t15762 = (-t15967 * t16816 + t16081 * t16828) * t16849 + (t15907 * t16816 + t15943 * t16828) * t16858 + t16794 * (t16469 * t16816 + t16688 * t17571);
t17813 = t15762 * t18026;
t15761 = (t15967 * t16828 + t16081 * t16816) * t16849 + (-t15907 * t16828 + t15943 * t16816) * t16858 - t16794 * (t16469 * t16828 - t16688 * t17608);
t17814 = t15761 * t18026;
t17184 = t15781 * t17782 + t15839 * t17813 + t15840 * t17814 + t16858 * t17196;
t15643 = -t16858 * t17055 + t17184;
t17892 = t15643 * t16885;
t17891 = t15643 * t16888;
t17054 = t18027 * t17984 * t17144;
t16903 = qJ(3,1) ^ 2;
t17195 = (-t18034 * t17835 + (-((pkin(3) + t16795) * (-pkin(3) + t16795) + t17381) * t16849 + t16795 * t17226 + qJ(3,1) * t17405 + t16903 + t17011) * t17853) / ((qJ(3,1) * t16859 - t16889 * t17650 + t16786) * t16849 + t18088 - t16777) * t17853;
t15854 = ((t16689 * t16756 * t16886 + t16683 * t17100) * t16841 - t18053) * t16849 + ((-t16336 * t16683 + t16514 * t16689) * t16841 + t17733) * t16858 - t16795 * (t16683 * t16841 * t16854 + t17425);
t17781 = t15854 * t18027;
t16229 = -t16511 * t17479 + t16493 - t16595;
t15908 = -t17382 * t16841 + (t16229 * t16823 - t17998) * t16835;
t15944 = t16229 * t16811 + t16823 * t17220;
t16727 = t16856 * t17419 - t17473;
t16318 = -t16727 * t16756 - t16795 * t17458;
t15968 = -t17983 * t16841 + (t16318 * t16811 + t18059) * t16835;
t16082 = t16318 * t16823 - t16811 * t18010;
t16470 = -t16683 * t17540 + t17527;
t15764 = (-t15968 * t16817 + t16082 * t16829) * t16849 + (t15908 * t16817 + t15944 * t16829) * t16858 + t16795 * (t16470 * t16817 + t16689 * t17566);
t17811 = t15764 * t18027;
t15763 = (t15968 * t16829 + t16082 * t16817) * t16849 + (-t15908 * t16829 + t15944 * t16817) * t16858 - t16795 * (t16470 * t16829 - t16689 * t17602);
t17812 = t15763 * t18027;
t17183 = t15782 * t17781 + t15841 * t17811 + t15842 * t17812 + t16858 * t17195;
t15644 = -t16858 * t17054 + t17183;
t17890 = t15644 * t16886;
t17889 = t15644 * t16889;
t17288 = t16836 * t17750;
t15937 = -t16418 * t17726 + t16424 * t18033;
t17773 = t15937 * t16203;
t15936 = -t16406 * t18033 + t16407 * t17726;
t17774 = t15936 * t16203;
t15645 = -t15777 * t17288 + t15831 * t17773 + t15832 * t17774 + (t17059 - t17200) * t16859;
t17888 = t15645 * t16853;
t17287 = t16837 * t17749;
t15939 = -t16419 * t17725 + t16425 * t18032;
t17771 = t15939 * t16204;
t15938 = -t16408 * t18032 + t16409 * t17725;
t17772 = t15938 * t16204;
t15646 = -t15778 * t17287 + t15833 * t17771 + t15834 * t17772 + (t17058 - t17199) * t16859;
t17887 = t15646 * t16853;
t17286 = t16838 * t17748;
t15941 = -t16420 * t17724 + t16426 * t18031;
t17769 = t15941 * t16205;
t15940 = -t16410 * t18031 + t16411 * t17724;
t17770 = t15940 * t16205;
t15647 = -t15779 * t17286 + t15835 * t17769 + t15836 * t17770 + (t17057 - t17198) * t16859;
t17886 = t15647 * t16853;
t17285 = t16839 * t17747;
t15946 = -t16421 * t17717 + t16427 * t18030;
t17767 = t15946 * t16206;
t15945 = -t16412 * t18030 + t16413 * t17717;
t17768 = t15945 * t16206;
t15648 = -t15780 * t17285 + t15837 * t17767 + t15838 * t17768 + (t17056 - t17197) * t16859;
t17885 = t15648 * t16853;
t17284 = t16840 * t17746;
t15948 = -t16422 * t17716 + t16428 * t18029;
t17765 = t15948 * t16207;
t15947 = -t16414 * t18029 + t16415 * t17716;
t17766 = t15947 * t16207;
t15649 = -t15781 * t17284 + t15839 * t17765 + t15840 * t17766 + (t17055 - t17196) * t16859;
t17884 = t15649 * t16853;
t17283 = t16841 * t17745;
t15950 = -t16423 * t17715 + t16429 * t18028;
t17763 = t15950 * t16208;
t15949 = -t16416 * t18028 + t16417 * t17715;
t17764 = t15949 * t16208;
t15650 = -t15782 * t17283 + t15841 * t17763 + t15842 * t17764 + (t17054 - t17195) * t16859;
t17883 = t15650 * t16853;
t17882 = t15651 * t16872;
t17881 = t15651 * t16875;
t17880 = t15652 * t16873;
t17879 = t15652 * t16876;
t17878 = t15653 * t16874;
t17877 = t15653 * t16877;
t17876 = t15654 * t16884;
t17875 = t15654 * t16887;
t17874 = t15655 * t16885;
t17873 = t15655 * t16888;
t17872 = t15656 * t16886;
t17871 = t15656 * t16889;
t17709 = t16545 * t16836;
t17710 = t16545 * t16830;
t15819 = (t16233 * t17710 + t16747 * t17225) * t16818 + (t16233 * t16747 - t17225 * t17710) * t16806 - t17387 * t17709;
t17673 = t16747 * t16836;
t17674 = t16747 * t16830;
t15825 = (-t16233 * t17674 + t16545 * t17225) * t16818 + (t16233 * t16545 + t17225 * t17674) * t16806 + t17387 * t17673;
t15855 = (-t16340 * t16747 + t17710 * t18015) * t16818 + (t16340 * t17710 + t16747 * t18015) * t16806 - t17978 * t17709;
t15861 = (t16340 * t16545 + t17674 * t18015) * t16818 + (t16340 * t17674 - t16545 * t18015) * t16806 - t17978 * t17673;
t15969 = t16545 * t17537 + ((-t16545 * t17563 + t16747 * t16856) * t16818 - (t16545 * t17561 + t16747 * t16851) * t16806) * t16854;
t15975 = -t16747 * t17537 + ((t16545 * t16856 + t16747 * t17563) * t16818 + (-t16545 * t16851 + t16747 * t17561) * t16806) * t16854;
t15681 = ((t15855 * t16844 + t15861 * t16846) * t16824 - t16812 * (t15855 * t16846 - t15861 * t16844)) * t16849 + ((-t15819 * t16844 + t15825 * t16846) * t16824 + (t15819 * t16846 + t15825 * t16844) * t16812) * t16858 + ((-t15969 * t16844 + t15975 * t16846) * t16824 + t16812 * (t15969 * t16846 + t15975 * t16844)) * t16789;
t17870 = t15681 * t18022;
t17707 = t16546 * t16837;
t17708 = t16546 * t16831;
t15820 = (t16234 * t17708 + t16748 * t17224) * t16819 + (t16234 * t16748 - t17224 * t17708) * t16807 - t17386 * t17707;
t17669 = t16748 * t16837;
t17670 = t16748 * t16831;
t15826 = (-t16234 * t17670 + t16546 * t17224) * t16819 + (t16234 * t16546 + t17224 * t17670) * t16807 + t17386 * t17669;
t15856 = (-t16341 * t16748 + t17708 * t18014) * t16819 + (t16341 * t17708 + t16748 * t18014) * t16807 - t17979 * t17707;
t15862 = (t16341 * t16546 + t17670 * t18014) * t16819 + (t16341 * t17670 - t16546 * t18014) * t16807 - t17979 * t17669;
t15970 = t16546 * t17535 + ((-t16546 * t17558 + t16748 * t16856) * t16819 - (t16546 * t17556 + t16748 * t16851) * t16807) * t16854;
t15976 = -t16748 * t17535 + ((t16546 * t16856 + t16748 * t17558) * t16819 + (-t16546 * t16851 + t16748 * t17556) * t16807) * t16854;
t15682 = ((t15856 * t16844 + t15862 * t16846) * t16825 - t16813 * (t15856 * t16846 - t15862 * t16844)) * t16849 + ((-t15820 * t16844 + t15826 * t16846) * t16825 + (t15820 * t16846 + t15826 * t16844) * t16813) * t16858 + ((-t15970 * t16844 + t15976 * t16846) * t16825 + t16813 * (t15970 * t16846 + t15976 * t16844)) * t16790;
t17869 = t15682 * t18023;
t17705 = t16547 * t16838;
t17706 = t16547 * t16832;
t15821 = (t16235 * t17706 + t16749 * t17223) * t16820 + (t16235 * t16749 - t17223 * t17706) * t16808 - t17385 * t17705;
t17665 = t16749 * t16838;
t17666 = t16749 * t16832;
t15827 = (-t16235 * t17666 + t16547 * t17223) * t16820 + (t16235 * t16547 + t17223 * t17666) * t16808 + t17385 * t17665;
t15857 = (-t16342 * t16749 + t17706 * t18013) * t16820 + (t16342 * t17706 + t16749 * t18013) * t16808 - t17980 * t17705;
t15863 = (t16342 * t16547 + t17666 * t18013) * t16820 + (t16342 * t17666 - t16547 * t18013) * t16808 - t17980 * t17665;
t15971 = t16547 * t17533 + ((-t16547 * t17553 + t16749 * t16856) * t16820 - (t16547 * t17551 + t16749 * t16851) * t16808) * t16854;
t15977 = -t16749 * t17533 + ((t16547 * t16856 + t16749 * t17553) * t16820 + (-t16547 * t16851 + t16749 * t17551) * t16808) * t16854;
t15683 = ((t15857 * t16844 + t15863 * t16846) * t16826 - t16814 * (t15857 * t16846 - t15863 * t16844)) * t16849 + ((-t15821 * t16844 + t15827 * t16846) * t16826 + (t15821 * t16846 + t15827 * t16844) * t16814) * t16858 + ((-t15971 * t16844 + t15977 * t16846) * t16826 + t16814 * (t15971 * t16846 + t15977 * t16844)) * t16791;
t17868 = t15683 * t18024;
t17703 = t16548 * t16839;
t17704 = t16548 * t16833;
t15822 = (t16239 * t17704 + t16750 * t17222) * t16821 + (t16239 * t16750 - t17222 * t17704) * t16809 - t17384 * t17703;
t17661 = t16750 * t16839;
t17662 = t16750 * t16833;
t15828 = (-t16239 * t17662 + t16548 * t17222) * t16821 + (t16239 * t16548 + t17222 * t17662) * t16809 + t17384 * t17661;
t15858 = (-t16346 * t16750 + t17704 * t18012) * t16821 + (t16346 * t17704 + t16750 * t18012) * t16809 - t17981 * t17703;
t15864 = (t16346 * t16548 + t17662 * t18012) * t16821 + (t16346 * t17662 - t16548 * t18012) * t16809 - t17981 * t17661;
t15972 = t16548 * t17531 + ((-t16548 * t17549 + t16750 * t16856) * t16821 - (t16548 * t17547 + t16750 * t16851) * t16809) * t16854;
t15978 = -t16750 * t17531 + ((t16548 * t16856 + t16750 * t17549) * t16821 + (-t16548 * t16851 + t16750 * t17547) * t16809) * t16854;
t15684 = ((t15858 * t16844 + t15864 * t16846) * t16827 - t16815 * (t15858 * t16846 - t15864 * t16844)) * t16849 + ((-t15822 * t16844 + t15828 * t16846) * t16827 + (t15822 * t16846 + t15828 * t16844) * t16815) * t16858 + ((-t15972 * t16844 + t15978 * t16846) * t16827 + t16815 * (t15972 * t16846 + t15978 * t16844)) * t16793;
t17867 = t15684 * t18025;
t17701 = t16549 * t16840;
t17702 = t16549 * t16834;
t15823 = (t16240 * t17702 + t16751 * t17221) * t16822 + (t16240 * t16751 - t17221 * t17702) * t16810 - t17383 * t17701;
t17657 = t16751 * t16840;
t17658 = t16751 * t16834;
t15829 = (-t16240 * t17658 + t16549 * t17221) * t16822 + (t16240 * t16549 + t17221 * t17658) * t16810 + t17383 * t17657;
t15859 = (-t16347 * t16751 + t17702 * t18011) * t16822 + (t16347 * t17702 + t16751 * t18011) * t16810 - t17982 * t17701;
t15865 = (t16347 * t16549 + t17658 * t18011) * t16822 + (t16347 * t17658 - t16549 * t18011) * t16810 - t17982 * t17657;
t15973 = t16549 * t17529 + ((-t16549 * t17545 + t16751 * t16856) * t16822 - (t16549 * t17543 + t16751 * t16851) * t16810) * t16854;
t15979 = -t16751 * t17529 + ((t16549 * t16856 + t16751 * t17545) * t16822 + (-t16549 * t16851 + t16751 * t17543) * t16810) * t16854;
t15685 = ((t15859 * t16844 + t15865 * t16846) * t16828 - t16816 * (t15859 * t16846 - t15865 * t16844)) * t16849 + ((-t15823 * t16844 + t15829 * t16846) * t16828 + (t15823 * t16846 + t15829 * t16844) * t16816) * t16858 + ((-t15973 * t16844 + t15979 * t16846) * t16828 + t16816 * (t15973 * t16846 + t15979 * t16844)) * t16794;
t17866 = t15685 * t18026;
t17699 = t16550 * t16841;
t17700 = t16550 * t16835;
t15824 = (t16241 * t17700 + t16752 * t17220) * t16823 + (t16241 * t16752 - t17220 * t17700) * t16811 - t17382 * t17699;
t17653 = t16752 * t16841;
t17654 = t16752 * t16835;
t15830 = (-t16241 * t17654 + t16550 * t17220) * t16823 + (t16241 * t16550 + t17220 * t17654) * t16811 + t17382 * t17653;
t15860 = (-t16348 * t16752 + t17700 * t18010) * t16823 + (t16348 * t17700 + t16752 * t18010) * t16811 - t17983 * t17699;
t15866 = (t16348 * t16550 + t17654 * t18010) * t16823 + (t16348 * t17654 - t16550 * t18010) * t16811 - t17983 * t17653;
t15974 = t16550 * t17527 + ((-t16550 * t17541 + t16752 * t16856) * t16823 - (t16550 * t17539 + t16752 * t16851) * t16811) * t16854;
t15980 = -t16752 * t17527 + ((t16550 * t16856 + t16752 * t17541) * t16823 + (-t16550 * t16851 + t16752 * t17539) * t16811) * t16854;
t15686 = ((t15860 * t16844 + t15866 * t16846) * t16829 - t16817 * (t15860 * t16846 - t15866 * t16844)) * t16849 + ((-t15824 * t16844 + t15830 * t16846) * t16829 + (t15824 * t16846 + t15830 * t16844) * t16817) * t16858 + ((-t15974 * t16844 + t15980 * t16846) * t16829 + t16817 * (t15974 * t16846 + t15980 * t16844)) * t16795;
t17865 = t15686 * t18027;
t16931 = t16845 * t16943;
t17368 = t16846 * t17934;
t17374 = t16844 * t17934;
t17487 = t16846 * t16910;
t17511 = t16844 * t16910;
t17213 = -(t16843 * t17487 + t17374) * t16842 + (t16843 * t17368 - t17511) * t17380;
t15699 = -t17951 * t17680 + t16943 * t17213 + (-t16843 * t17951 - t16846 * t16931) * t16904;
t17852 = t15699 * t18022;
t16930 = t16845 * t16942;
t17369 = t16846 * t17935;
t17375 = t16844 * t17935;
t17486 = t16846 * t16911;
t17510 = t16844 * t16911;
t17212 = -(t16843 * t17486 + t17375) * t16842 + (t16843 * t17369 - t17510) * t17380;
t15700 = -t17949 * t17679 + t16942 * t17212 + (-t16843 * t17949 - t16846 * t16930) * t16905;
t17851 = t15700 * t18023;
t16929 = t16845 * t16941;
t17370 = t16846 * t17936;
t17376 = t16844 * t17936;
t17485 = t16846 * t16912;
t17509 = t16844 * t16912;
t17211 = -(t16843 * t17485 + t17376) * t16842 + (t16843 * t17370 - t17509) * t17380;
t15701 = -t17947 * t17678 + t16941 * t17211 + (-t16843 * t17947 - t16846 * t16929) * t16906;
t17850 = t15701 * t18024;
t17393 = (t16843 * t17374 + t17487) * t17380 + t16842 * (-t16843 * t17511 + t17368);
t15702 = t17950 * t17680 + t16943 * t17393 + (t16843 * t17950 - t16844 * t16931) * t16904;
t17849 = t15702 * t18022;
t17392 = (t16843 * t17375 + t17486) * t17380 + t16842 * (-t16843 * t17510 + t17369);
t15703 = t17948 * t17679 + t16942 * t17392 + (t16843 * t17948 - t16844 * t16930) * t16905;
t17848 = t15703 * t18023;
t17391 = (t16843 * t17376 + t17485) * t17380 + t16842 * (-t16843 * t17509 + t17370);
t15704 = t17946 * t17678 + t16941 * t17391 + (t16843 * t17946 - t16844 * t16929) * t16906;
t17847 = t15704 * t18024;
t16928 = t16845 * t16940;
t17371 = t16846 * t17937;
t17377 = t16844 * t17937;
t17484 = t16846 * t16913;
t17508 = t16844 * t16913;
t17210 = -(t16843 * t17484 + t17377) * t16842 + (t16843 * t17371 - t17508) * t17380;
t15705 = -t17945 * t17677 + t16940 * t17210 + (-t16843 * t17945 - t16846 * t16928) * t16907;
t17846 = t15705 * t18025;
t17390 = (t16843 * t17377 + t17484) * t17380 + t16842 * (-t16843 * t17508 + t17371);
t15706 = t17944 * t17677 + t16940 * t17390 + (t16843 * t17944 - t16844 * t16928) * t16907;
t17845 = t15706 * t18025;
t16927 = t16845 * t16939;
t17372 = t16846 * t17938;
t17378 = t16844 * t17938;
t17483 = t16846 * t16914;
t17507 = t16844 * t16914;
t17209 = -(t16843 * t17483 + t17378) * t16842 + (t16843 * t17372 - t17507) * t17380;
t15707 = -t17943 * t17676 + t16939 * t17209 + (-t16843 * t17943 - t16846 * t16927) * t16908;
t17844 = t15707 * t18026;
t17389 = (t16843 * t17378 + t17483) * t17380 + t16842 * (-t16843 * t17507 + t17372);
t15708 = t17942 * t17676 + t16939 * t17389 + (t16843 * t17942 - t16844 * t16927) * t16908;
t17843 = t15708 * t18026;
t16926 = t16845 * t16938;
t17373 = t16846 * t17939;
t17379 = t16844 * t17939;
t17482 = t16846 * t16915;
t17506 = t16844 * t16915;
t17208 = -(t16843 * t17482 + t17379) * t16842 + (t16843 * t17373 - t17506) * t17380;
t15709 = -t17941 * t17675 + t16938 * t17208 + (-t16843 * t17941 - t16846 * t16926) * t16909;
t17842 = t15709 * t18027;
t17388 = (t16843 * t17379 + t17482) * t17380 + t16842 * (-t16843 * t17506 + t17373);
t15710 = t17940 * t17675 + t16938 * t17388 + (t16843 * t17940 - t16844 * t16926) * t16909;
t17841 = t15710 * t18027;
t16096 = t16358 * t16856 + t17558 * t18081;
t16102 = t16358 * t17558 - t16856 * t18081;
t16108 = -t16358 * t16851 + t17556 * t18081;
t16116 = t16358 * t17556 + t16851 * t18081;
t15844 = (t16096 * t16807 - t16108 * t16819) * t16825 + t16813 * (-t16102 * t16807 + t16116 * t16819);
t16691 = t16851 * t17423 + t17448;
t17689 = t16706 * t16831;
t17692 = t16691 * t16831;
t15741 = (((-t16358 * t16691 + t17689 * t18081) * t16819 - (t16358 * t16706 + t17692 * t18081) * t16807) * t16825 - ((t16358 * t17689 + t16691 * t18081) * t16819 + t16807 * (-t16358 * t17692 + t16706 * t18081)) * t16813) * t16853 - t15844 * t17457;
t17834 = t15741 * t17932;
t16097 = t16359 * t16856 + t17553 * t18080;
t16103 = t16359 * t17553 - t16856 * t18080;
t16109 = -t16359 * t16851 + t17551 * t18080;
t16112 = t16359 * t17551 + t16851 * t18080;
t15845 = (t16097 * t16808 - t16109 * t16820) * t16826 + t16814 * (-t16103 * t16808 + t16112 * t16820);
t16692 = t16851 * t17422 + t17447;
t17688 = t16707 * t16832;
t17691 = t16692 * t16832;
t15742 = (((-t16359 * t16692 + t17688 * t18080) * t16820 - t16808 * (t16359 * t16707 + t17691 * t18080)) * t16826 - t16814 * ((t16359 * t17688 + t16692 * t18080) * t16820 + (-t16359 * t17691 + t16707 * t18080) * t16808)) * t16853 - t15845 * t17457;
t17833 = t15742 * t17931;
t16095 = t16357 * t16856 + t17563 * t18082;
t16101 = t16357 * t17563 - t16856 * t18082;
t16107 = -t16357 * t16851 + t17561 * t18082;
t16115 = t16357 * t17561 + t16851 * t18082;
t15843 = (t16095 * t16806 - t16107 * t16818) * t16824 + t16812 * (-t16101 * t16806 + t16115 * t16818);
t16690 = t16851 * t17424 + t17449;
t17690 = t16705 * t16830;
t17693 = t16690 * t16830;
t15743 = (((-t16357 * t16690 + t17690 * t18082) * t16818 - t16806 * (t16357 * t16705 + t17693 * t18082)) * t16824 - t16812 * ((t16357 * t17690 + t16690 * t18082) * t16818 + t16806 * (-t16357 * t17693 + t16705 * t18082))) * t16853 - t15843 * t17457;
t17832 = t15743 * t17933;
t16099 = t16361 * t16856 + t17545 * t18078;
t16105 = t16361 * t17545 - t16856 * t18078;
t16110 = -t16361 * t16851 + t17543 * t18078;
t16113 = t16361 * t17543 + t16851 * t18078;
t15846 = (t16099 * t16810 - t16110 * t16822) * t16828 + t16816 * (-t16105 * t16810 + t16113 * t16822);
t16712 = t16851 * t17420 + t17445;
t17683 = t16726 * t16834;
t17686 = t16712 * t16834;
t15744 = (((-t16361 * t16712 + t17683 * t18078) * t16822 - t16810 * (t16361 * t16726 + t17686 * t18078)) * t16828 - t16816 * ((t16361 * t17683 + t16712 * t18078) * t16822 + (-t16361 * t17686 + t16726 * t18078) * t16810)) * t16853 - t15846 * t17457;
t17831 = t15744 * t17929;
t16100 = t16362 * t16856 + t17541 * t18077;
t16106 = t16362 * t17541 - t16856 * t18077;
t16111 = -t16362 * t16851 + t17539 * t18077;
t16118 = t16362 * t17539 + t16851 * t18077;
t15847 = (t16100 * t16811 - t16111 * t16823) * t16829 + t16817 * (-t16106 * t16811 + t16118 * t16823);
t16713 = t16851 * t17419 + t17444;
t17682 = t16727 * t16835;
t17685 = t16713 * t16835;
t15745 = (((-t16362 * t16713 + t17682 * t18077) * t16823 - t16811 * (t16362 * t16727 + t17685 * t18077)) * t16829 - t16817 * ((t16362 * t17682 + t16713 * t18077) * t16823 + t16811 * (-t16362 * t17685 + t16727 * t18077))) * t16853 - t15847 * t17457;
t17830 = t15745 * t17928;
t16098 = t16360 * t16856 + t17549 * t18079;
t16104 = t16360 * t17549 - t16856 * t18079;
t16114 = -t16360 * t16851 + t17547 * t18079;
t16117 = t16360 * t17547 + t16851 * t18079;
t15848 = (t16098 * t16809 - t16114 * t16821) * t16827 + t16815 * (-t16104 * t16809 + t16117 * t16821);
t16711 = t16851 * t17421 + t17446;
t17684 = t16725 * t16833;
t17687 = t16711 * t16833;
t15746 = (((-t16360 * t16711 + t17684 * t18079) * t16821 - (t16360 * t16725 + t17687 * t18079) * t16809) * t16827 - t16815 * ((t16360 * t17684 + t16711 * t18079) * t16821 + (-t16360 * t17687 + t16725 * t18079) * t16809)) * t16853 - t15848 * t17457;
t17829 = t15746 * t17930;
t15747 = -t15843 * t17726 + t18033 * ((-t16095 * t16818 - t16107 * t16806) * t16824 + t16812 * (t16101 * t16818 + t16115 * t16806));
t17828 = t15747 * t16203;
t15748 = -t15844 * t17725 + ((-t16096 * t16819 - t16108 * t16807) * t16825 + t16813 * (t16102 * t16819 + t16116 * t16807)) * t18032;
t17827 = t15748 * t16204;
t15749 = -t15845 * t17724 + ((-t16097 * t16820 - t16109 * t16808) * t16826 + t16814 * (t16103 * t16820 + t16112 * t16808)) * t18031;
t17826 = t15749 * t16205;
t15750 = -t15848 * t17717 + ((-t16098 * t16821 - t16114 * t16809) * t16827 + t16815 * (t16104 * t16821 + t16117 * t16809)) * t18030;
t17825 = t15750 * t16206;
t15751 = -t15846 * t17716 + ((-t16099 * t16822 - t16110 * t16810) * t16828 + (t16105 * t16822 + t16113 * t16810) * t16816) * t18029;
t17824 = t15751 * t16207;
t15752 = -t15847 * t17715 + ((-t16100 * t16823 - t16111 * t16811) * t16829 + (t16106 * t16823 + t16118 * t16811) * t16817) * t18028;
t17823 = t15752 * t16208;
t16301 = -t16844 * t17502 + t17393;
t16215 = t16301 * t16836 + t16557 * t17635;
t16014 = t16215 * t16851 - t16557 * t17590;
t16023 = t16215 * t16856 + t16557 * t17592;
t15873 = -t16014 * t16806 + t16023 * t16818;
t16083 = t16301 * t17246 + t16557 * t17080;
t16119 = t16301 * t17536 + t16557 * t17082;
t15783 = ((t16083 * t16856 - t16119 * t16851) * t16818 - (t16083 * t16851 + t16119 * t16856) * t16806) * t16853 + t15873 * t17457;
t17810 = t15783 * t17933;
t16303 = -t16844 * t17501 + t17392;
t16217 = t16303 * t16837 + t16558 * t17629;
t16015 = t16217 * t16851 - t16558 * t17585;
t16025 = t16217 * t16856 + t16558 * t17587;
t15875 = -t16015 * t16807 + t16025 * t16819;
t16084 = t16303 * t17245 + t16558 * t17076;
t16121 = t16303 * t17534 + t16558 * t17078;
t15784 = ((t16084 * t16856 - t16121 * t16851) * t16819 - (t16084 * t16851 + t16121 * t16856) * t16807) * t16853 + t15875 * t17457;
t17809 = t15784 * t17932;
t16302 = -t16846 * t17502 + t17213;
t16216 = t16302 * t16836 + t16557 * t17594;
t16011 = -t16216 * t16851 - t16557 * t17631;
t16024 = t16216 * t16856 - t16557 * t17633;
t15874 = t16011 * t16806 + t16024 * t16818;
t16085 = t16302 * t17246 + t16557 * t17081;
t16120 = -t16302 * t17536 - t16557 * t17083;
t15785 = ((t16085 * t16856 + t16120 * t16851) * t16818 + (-t16085 * t16851 + t16120 * t16856) * t16806) * t16853 + t15874 * t17457;
t17808 = t15785 * t17933;
t16304 = -t16846 * t17501 + t17212;
t16218 = t16304 * t16837 + t16558 * t17589;
t16012 = -t16218 * t16851 - t16558 * t17625;
t16026 = t16218 * t16856 - t16558 * t17627;
t15876 = t16012 * t16807 + t16026 * t16819;
t16086 = t16304 * t17245 + t16558 * t17077;
t16124 = -t16304 * t17534 - t16558 * t17079;
t15786 = ((t16086 * t16856 + t16124 * t16851) * t16819 + (-t16086 * t16851 + t16124 * t16856) * t16807) * t16853 + t15876 * t17457;
t17807 = t15786 * t17932;
t16305 = -t16844 * t17500 + t17391;
t16219 = t16305 * t16838 + t16559 * t17623;
t16016 = t16219 * t16851 - t16559 * t17580;
t16027 = t16219 * t16856 + t16559 * t17582;
t15877 = -t16016 * t16808 + t16027 * t16820;
t16087 = t16305 * t17244 + t16559 * t17072;
t16122 = t16305 * t17532 + t16559 * t17074;
t15787 = ((t16087 * t16856 - t16122 * t16851) * t16820 - (t16087 * t16851 + t16122 * t16856) * t16808) * t16853 + t15877 * t17457;
t17806 = t15787 * t17931;
t16306 = -t16846 * t17500 + t17211;
t16220 = t16306 * t16838 + t16559 * t17584;
t16013 = -t16220 * t16851 - t16559 * t17619;
t16028 = t16220 * t16856 - t16559 * t17621;
t15878 = t16013 * t16808 + t16028 * t16820;
t16088 = t16306 * t17244 + t16559 * t17073;
t16123 = -t16306 * t17532 - t16559 * t17075;
t15788 = ((t16088 * t16856 + t16123 * t16851) * t16820 + (-t16088 * t16851 + t16123 * t16856) * t16808) * t16853 + t15878 * t17457;
t17805 = t15788 * t17931;
t16307 = -t16844 * t17499 + t17390;
t16221 = t16307 * t16839 + t16560 * t17617;
t16018 = t16221 * t16851 - t16560 * t17575;
t16029 = t16221 * t16856 + t16560 * t17577;
t15879 = -t16018 * t16809 + t16029 * t16821;
t16089 = t16307 * t17243 + t16560 * t17068;
t16125 = t16307 * t17530 + t16560 * t17070;
t15789 = ((t16089 * t16856 - t16125 * t16851) * t16821 - (t16089 * t16851 + t16125 * t16856) * t16809) * t16853 + t15879 * t17457;
t17804 = t15789 * t17930;
t16308 = -t16846 * t17499 + t17210;
t16222 = t16308 * t16839 + t16560 * t17579;
t16017 = -t16222 * t16851 - t16560 * t17613;
t16030 = t16222 * t16856 - t16560 * t17615;
t15880 = t16017 * t16809 + t16030 * t16821;
t16090 = t16308 * t17243 + t16560 * t17069;
t16126 = -t16308 * t17530 - t16560 * t17071;
t15790 = ((t16090 * t16856 + t16126 * t16851) * t16821 + (-t16090 * t16851 + t16126 * t16856) * t16809) * t16853 + t15880 * t17457;
t17803 = t15790 * t17930;
t16309 = -t16844 * t17498 + t17389;
t16223 = t16309 * t16840 + t16561 * t17611;
t16020 = t16223 * t16851 - t16561 * t17570;
t16031 = t16223 * t16856 + t16561 * t17572;
t15881 = -t16020 * t16810 + t16031 * t16822;
t16091 = t16309 * t17242 + t16561 * t17064;
t16127 = t16309 * t17528 + t16561 * t17066;
t15791 = ((t16091 * t16856 - t16127 * t16851) * t16822 - (t16091 * t16851 + t16127 * t16856) * t16810) * t16853 + t15881 * t17457;
t17802 = t15791 * t17929;
t16310 = -t16846 * t17498 + t17209;
t16224 = t16310 * t16840 + t16561 * t17574;
t16019 = -t16224 * t16851 - t16561 * t17607;
t16032 = t16224 * t16856 - t16561 * t17609;
t15882 = t16019 * t16810 + t16032 * t16822;
t16092 = t16310 * t17242 + t16561 * t17065;
t16128 = -t16310 * t17528 - t16561 * t17067;
t15792 = ((t16092 * t16856 + t16128 * t16851) * t16822 + (-t16092 * t16851 + t16128 * t16856) * t16810) * t16853 + t15882 * t17457;
t17801 = t15792 * t17929;
t16311 = -t16844 * t17497 + t17388;
t16225 = t16311 * t16841 + t16562 * t17605;
t16022 = t16225 * t16851 - t16562 * t17565;
t16033 = t16225 * t16856 + t16562 * t17567;
t15883 = -t16022 * t16811 + t16033 * t16823;
t16093 = t16311 * t17241 + t16562 * t17060;
t16129 = t16311 * t17526 + t16562 * t17062;
t15793 = ((t16093 * t16856 - t16129 * t16851) * t16823 - (t16093 * t16851 + t16129 * t16856) * t16811) * t16853 + t15883 * t17457;
t17800 = t15793 * t17928;
t16312 = -t16846 * t17497 + t17208;
t16226 = t16312 * t16841 + t16562 * t17569;
t16021 = -t16226 * t16851 - t16562 * t17601;
t16034 = t16226 * t16856 - t16562 * t17603;
t15884 = t16021 * t16811 + t16034 * t16823;
t16094 = t16312 * t17241 + t16562 * t17061;
t16130 = -t16312 * t17526 - t16562 * t17063;
t15794 = ((t16094 * t16856 + t16130 * t16851) * t16823 + (-t16094 * t16851 + t16130 * t16856) * t16811) * t16853 + t15884 * t17457;
t17799 = t15794 * t17928;
t15795 = t15875 * t17725 - (t16015 * t16819 + t16025 * t16807) * t18032;
t17798 = t15795 * t16204;
t15796 = t15876 * t17725 - (-t16012 * t16819 + t16026 * t16807) * t18032;
t17797 = t15796 * t16204;
t15797 = t15873 * t17726 - t18033 * (t16014 * t16818 + t16023 * t16806);
t17796 = t15797 * t16203;
t15798 = t15874 * t17726 - t18033 * (-t16011 * t16818 + t16024 * t16806);
t17795 = t15798 * t16203;
t15799 = t15877 * t17724 - (t16016 * t16820 + t16027 * t16808) * t18031;
t17794 = t15799 * t16205;
t15800 = t15878 * t17724 - (-t16013 * t16820 + t16028 * t16808) * t18031;
t17793 = t15800 * t16205;
t15801 = t15879 * t17717 - (t16018 * t16821 + t16029 * t16809) * t18030;
t17792 = t15801 * t16206;
t15802 = t15881 * t17716 - (t16020 * t16822 + t16031 * t16810) * t18029;
t17791 = t15802 * t16207;
t15803 = t15882 * t17716 - (-t16019 * t16822 + t16032 * t16810) * t18029;
t17790 = t15803 * t16207;
t15804 = t15883 * t17715 - t18028 * (t16022 * t16823 + t16033 * t16811);
t17789 = t15804 * t16208;
t15805 = t15880 * t17717 - (-t16017 * t16821 + t16030 * t16809) * t18030;
t17788 = t15805 * t16206;
t15806 = t15884 * t17715 - t18028 * (-t16021 * t16823 + t16034 * t16811);
t17787 = t15806 * t16208;
t17762 = t15951 * t16166;
t17761 = t15952 * t16169;
t17760 = t15953 * t16172;
t17759 = t15954 * t16166;
t17758 = t15955 * t16169;
t17757 = t15956 * t16172;
t17756 = t15957 * t16184;
t17755 = t15958 * t16187;
t17754 = t15959 * t16190;
t17753 = t15960 * t16184;
t17752 = t15961 * t16187;
t17751 = t15962 * t16190;
t16475 = (-t16842 * t17504 - t16843 * t17233) * t16892 + t16890 * t17233;
t17714 = t16475 * t16842;
t17698 = t16651 * t16653;
t17696 = t16651 * t16842;
t17695 = t16651 * t16845;
t17694 = t16653 * t16762;
t17649 = t16762 * t16843;
t17525 = t16842 * t16845;
t16474 = (t16843 * t17524 - t16890 * t17236) * t16892 - t16890 * t17524;
t17523 = t16843 * t16474;
t17505 = t16845 * t16846;
t17490 = t16846 * t16842;
t17481 = t16850 * t16858;
t17450 = t16855 * t16858;
t17443 = t16858 * t16859;
t16615 = -t16843 * t17514 + t17235;
t17237 = t16844 * t17380;
t16616 = t16843 * t17237 + t17490;
t17404 = t16616 * t16474 - t16615 * t17697;
t16617 = t16843 * t17490 + t17237;
t17403 = t16618 * t16474 - t16617 * t17697;
t17402 = t16475 * t17505 - t16618 * t17698;
t17234 = t17380 * t16653;
t17401 = t16843 * t16475 - t17234 * t17695;
t17240 = t16845 * t17418;
t17273 = t16653 * t17505;
t17400 = t16617 * t17240 + t16762 * t17273;
t17355 = qJ(3,1) * t17922;
t17354 = qJ(3,2) * t17923;
t17353 = qJ(3,3) * t17924;
t17352 = qJ(3,4) * t17925;
t17351 = qJ(3,5) * t17926;
t17350 = qJ(3,6) * t17927;
t17348 = t17933 * t17900;
t17347 = t17933 * t17899;
t17346 = t16166 * t17900;
t17345 = t16166 * t17899;
t17344 = t15639 * t17744;
t17343 = t16854 * t17900;
t17342 = t17932 * t17898;
t17341 = t17932 * t17897;
t17340 = t16169 * t17898;
t17339 = t16169 * t17897;
t17338 = t15640 * t17743;
t17337 = t16854 * t17898;
t17336 = t17931 * t17896;
t17335 = t17931 * t17895;
t17334 = t16172 * t17896;
t17333 = t16172 * t17895;
t17332 = t15641 * t17742;
t17331 = t16854 * t17896;
t17330 = t17930 * t17894;
t17329 = t17930 * t17893;
t17328 = t16184 * t17894;
t17327 = t16184 * t17893;
t17326 = t15642 * t17741;
t17325 = t16854 * t17894;
t17324 = t17929 * t17892;
t17323 = t17929 * t17891;
t17322 = t16187 * t17892;
t17321 = t16187 * t17891;
t17320 = t15643 * t17740;
t17319 = t16854 * t17892;
t17318 = t17928 * t17890;
t17317 = t17928 * t17889;
t17316 = t16190 * t17890;
t17315 = t16190 * t17889;
t17314 = t15644 * t17739;
t17313 = t16854 * t17890;
t17312 = ((pkin(2) * t17861 + t17840 * t17921) * t16872 - t16853 * qJ(3,6) * t17304) * t17861;
t17311 = ((pkin(2) * t17860 + t17839 * t17921) * t16873 - t16853 * qJ(3,5) * t17301) * t17860;
t17310 = ((pkin(2) * t17859 + t17838 * t17921) * t16874 - t16853 * qJ(3,4) * t17298) * t17859;
t17309 = ((pkin(2) * t17855 + t17837 * t17921) * t16884 - t16853 * qJ(3,3) * t17295) * t17855;
t17308 = ((pkin(2) * t17854 + t17836 * t17921) * t16885 - t16853 * qJ(3,2) * t17292) * t17854;
t17307 = ((pkin(2) * t17853 + t17835 * t17921) * t16886 - t16853 * qJ(3,1) * t17289) * t17853;
t17282 = t18022 * t17744;
t17281 = t18023 * t17743;
t17280 = t18024 * t17742;
t17279 = t18025 * t17741;
t17278 = t18026 * t17740;
t17277 = t18027 * t17739;
t17276 = t16615 * t17698;
t17275 = t16616 * t17418;
t17274 = t16653 * t17695;
t16805 = t16845 ^ 2;
t17253 = t16805 * t17418;
t17232 = 0.2e1 * t17306;
t17231 = 0.2e1 * t17303;
t17230 = 0.2e1 * t17300;
t17229 = 0.2e1 * t17297;
t17228 = 0.2e1 * t17294;
t17227 = 0.2e1 * t17291;
t17181 = t17933 * t17232;
t17180 = t16166 * t17232;
t17179 = t17932 * t17231;
t17178 = t16169 * t17231;
t17177 = t17931 * t17230;
t17176 = t16172 * t17230;
t17175 = t17930 * t17229;
t17174 = t16184 * t17229;
t17173 = t17929 * t17228;
t17172 = t16187 * t17228;
t17171 = t17928 * t17227;
t17170 = t16190 * t17227;
t17143 = -t15651 * (t16850 * t17442 - t16855 * t16875) - (t16850 * t17439 + t16855 * t16872) * t17864;
t17142 = -t15651 * (t16850 * t16875 + t16855 * t17442) + (t16850 * t16872 - t16855 * t17439) * t17864;
t17141 = t16875 * t17864 + t17882;
t17140 = -t16872 * t17864 + t17881;
t17139 = -t15652 * (t16850 * t17441 - t16855 * t16876) - (t16850 * t17438 + t16855 * t16873) * t17863;
t17138 = -t15652 * (t16850 * t16876 + t16855 * t17441) + (t16850 * t16873 - t16855 * t17438) * t17863;
t17137 = t16876 * t17863 + t17880;
t17136 = -t16873 * t17863 + t17879;
t17135 = -t15653 * (t16850 * t17440 - t16855 * t16877) - (t16850 * t17437 + t16855 * t16874) * t17862;
t17134 = -t15653 * (t16850 * t16877 + t16855 * t17440) + (t16850 * t16874 - t16855 * t17437) * t17862;
t17133 = t16877 * t17862 + t17878;
t17132 = -t16874 * t17862 + t17877;
t17131 = -t15654 * (t16850 * t17436 - t16855 * t16887) - (t16850 * t17433 + t16855 * t16884) * t17858;
t17130 = -t15654 * (t16850 * t16887 + t16855 * t17436) + (t16850 * t16884 - t16855 * t17433) * t17858;
t17129 = t16887 * t17858 + t17876;
t17128 = -t16884 * t17858 + t17875;
t17127 = -t15655 * (t16850 * t17435 - t16855 * t16888) - (t16850 * t17432 + t16855 * t16885) * t17857;
t17126 = -t15655 * (t16850 * t16888 + t16855 * t17435) + (t16850 * t16885 - t16855 * t17432) * t17857;
t17125 = t16888 * t17857 + t17874;
t17124 = -t16885 * t17857 + t17873;
t17123 = -t15656 * (t16850 * t17434 - t16855 * t16889) - (t16850 * t17431 + t16855 * t16886) * t17856;
t17122 = -t15656 * (t16850 * t16889 + t16855 * t17434) + (t16850 * t16886 - t16855 * t17431) * t17856;
t17121 = t16889 * t17856 + t17872;
t17120 = -t16886 * t17856 + t17871;
t17107 = t16475 * t16615 - t16616 * t17694;
t17106 = -t16475 * t16617 + t16618 * t17694;
t17085 = -t16474 * t17505 - t16617 * t17698;
t17053 = t18022 * t17141;
t17052 = t18023 * t17137;
t17051 = t18024 * t17133;
t17050 = t18025 * t17129;
t17049 = t18026 * t17125;
t17048 = t18027 * t17121;
t17004 = t15743 * t17181 - t15747 * t17864;
t17003 = t15783 * t17181 - t15797 * t17864;
t17002 = t15785 * t17181 - t15798 * t17864;
t17001 = -t15936 * t17864 + t15951 * t17180;
t17000 = -t15937 * t17864 + t15954 * t17180;
t16999 = t15741 * t17179 - t15748 * t17863;
t16998 = t15784 * t17179 - t15795 * t17863;
t16997 = t15786 * t17179 - t15796 * t17863;
t16996 = -t15938 * t17863 + t15952 * t17178;
t16995 = -t15939 * t17863 + t15955 * t17178;
t16994 = t15742 * t17177 - t15749 * t17862;
t16993 = t15787 * t17177 - t15799 * t17862;
t16992 = t15788 * t17177 - t15800 * t17862;
t16991 = -t15940 * t17862 + t15953 * t17176;
t16990 = -t15941 * t17862 + t15956 * t17176;
t16989 = t15746 * t17175 - t15750 * t17858;
t16988 = t15789 * t17175 - t15801 * t17858;
t16987 = t15790 * t17175 - t15805 * t17858;
t16986 = -t15945 * t17858 + t15957 * t17174;
t16985 = -t15946 * t17858 + t15960 * t17174;
t16984 = t15744 * t17173 - t15751 * t17857;
t16983 = t15791 * t17173 - t15802 * t17857;
t16982 = t15792 * t17173 - t15803 * t17857;
t16981 = -t15947 * t17857 + t15958 * t17172;
t16980 = -t15948 * t17857 + t15961 * t17172;
t16979 = t15745 * t17171 - t15752 * t17856;
t16978 = t15793 * t17171 - t15804 * t17856;
t16977 = t15794 * t17171 - t15806 * t17856;
t16976 = -t15949 * t17856 + t15959 * t17170;
t16975 = -t15950 * t17856 + t15962 * t17170;
t16974 = -t16805 * t16892 * t17233 - t16651 * t17649;
t16949 = t15651 * t17828 + t15652 * t17827 + t15653 * t17826 + t15654 * t17825 + t15655 * t17824 + t15656 * t17823;
t16944 = t15651 * t17288 + t15652 * t17287 + t15653 * t17286 + t15654 * t17285 + t15655 * t17284 + t15656 * t17283;
t16937 = t18022 * (MDP(3) * t17140 - MDP(4) * t17141 + MDP(5) * t17143 + MDP(6) * t17142 - MDP(8) * t17312);
t16936 = t18023 * (MDP(3) * t17136 - MDP(4) * t17137 + MDP(5) * t17139 + MDP(6) * t17138 - MDP(8) * t17311);
t16935 = t18024 * (MDP(3) * t17132 - MDP(4) * t17133 + MDP(5) * t17135 + MDP(6) * t17134 - MDP(8) * t17310);
t16934 = t18025 * (MDP(3) * t17128 - MDP(4) * t17129 + MDP(5) * t17131 + MDP(6) * t17130 - MDP(8) * t17309);
t16933 = t18026 * (MDP(3) * t17124 - MDP(4) * t17125 + MDP(5) * t17127 + MDP(6) * t17126 - MDP(8) * t17308);
t16932 = t18027 * (MDP(3) * t17120 - MDP(4) * t17121 + MDP(5) * t17123 + MDP(6) * t17122 - MDP(8) * t17307);
t16925 = -t16203 * t17004 - t16204 * t16999 - t16205 * t16994 - t16206 * t16989 - t16207 * t16984 - t16208 * t16979;
t16924 = -t16203 * t17003 - t16204 * t16998 - t16205 * t16993 - t16206 * t16988 - t16207 * t16983 - t16208 * t16978;
t16923 = -t16203 * t17002 - t16204 * t16997 - t16205 * t16992 - t16206 * t16987 - t16207 * t16982 - t16208 * t16977;
t16922 = -t16203 * t17001 - t16204 * t16996 - t16205 * t16991 - t16206 * t16986 - t16207 * t16981 - t16208 * t16976;
t16921 = -t16203 * t17000 - t16204 * t16995 - t16205 * t16990 - t16206 * t16985 - t16207 * t16980 - t16208 * t16975;
t16920 = t16858 * t16925;
t16919 = t17992 + t17993 + t17994 + t17995 + t17996 + t17997;
t16918 = t16858 * t16919;
t16501 = t16615 * t17240;
t16494 = t16653 * t17649;
t16451 = -t16614 + t16471;
t16437 = t16474 * t17236;
t16363 = -t16472 + t16614;
t16292 = -t16471 + t16472;
t16290 = t16616 * t17698;
t16289 = -t16614 - t16472;
t16288 = -t16614 - t16471;
t16245 = -t16471 - t16472;
t15638 = t16853 * t17355 + t17313;
t15637 = t16853 * t17354 + t17319;
t15636 = t16853 * t17353 + t17325;
t15635 = t16847 * t17354 + t16853 * t17319;
t15634 = t16847 * t17353 + t16853 * t17325;
t15633 = t16847 * t17355 + t16853 * t17313;
t15632 = t16853 * t17352 + t17331;
t15631 = t16853 * t17351 + t17337;
t15630 = t16853 * t17350 + t17343;
t15629 = t16847 * t17352 + t16853 * t17331;
t15628 = t16847 * t17351 + t16853 * t17337;
t15627 = t16847 * t17350 + t16853 * t17343;
t15626 = pkin(2) * t17922 + t15644 * t17451 - t17883;
t15625 = pkin(2) * t17923 + t15643 * t17452 - t17884;
t15624 = pkin(2) * t17924 + t15642 * t17453 - t17885;
t15623 = t15644 * (pkin(2) * t16889 + qJ(3,1) * t17462) * t16854 - pkin(2) * t17883 + t15656 * (-t16849 * t16903 + t16903 + t16917);
t15622 = t15643 * (pkin(2) * t16888 + qJ(3,2) * t17463) * t16854 - pkin(2) * t17884 + t15655 * (-t16849 * t16902 + t16902 + t16917);
t15621 = t15642 * (pkin(2) * t16887 + qJ(3,3) * t17464) * t16854 - pkin(2) * t17885 + t15654 * (-t16849 * t16901 + t16901 + t16917);
t15620 = pkin(2) * t17925 + t15641 * t17454 - t17886;
t15619 = pkin(2) * t17926 + t15640 * t17455 - t17887;
t15618 = pkin(2) * t17927 + t15639 * t17456 - t17888;
t15617 = t15641 * (pkin(2) * t16877 + qJ(3,4) * t17468) * t16854 - pkin(2) * t17886 + t15653 * (-t16849 * t16900 + t16900 + t16917);
t15616 = t15640 * (pkin(2) * t16876 + qJ(3,5) * t17469) * t16854 - pkin(2) * t17887 + t15652 * (-t16849 * t16899 + t16899 + t16917);
t15615 = t15639 * (pkin(2) * t16875 + qJ(3,6) * t17470) * t16854 - pkin(2) * t17888 + t15651 * (-t16849 * t16898 + t16898 + t16917);
t15614 = -t15656 * t17919 + (-t16853 * t17451 + t17443) * t15644 + t15650;
t15613 = -t15655 * t17919 + (-t16853 * t17452 + t17443) * t15643 + t15649;
t15612 = -t15654 * t17919 + (-t16853 * t17453 + t17443) * t15642 + t15648;
t15611 = -t15653 * t17919 + (-t16853 * t17454 + t17443) * t15641 + t15647;
t15610 = -t15652 * t17919 + (-t16853 * t17455 + t17443) * t15640 + t15646;
t15609 = -t15651 * t17919 + (-t16853 * t17456 + t17443) * t15639 + t15645;
t15608 = ((qJ(3,1) * t17872 - t15650 * t16889) * t16853 + pkin(2) * t17871) * t16854 + (t15650 * t16859 - t17054) * t16858 + t17183;
t15607 = ((qJ(3,2) * t17874 - t15649 * t16888) * t16853 + pkin(2) * t17873) * t16854 + (t15649 * t16859 - t17055) * t16858 + t17184;
t15606 = ((qJ(3,3) * t17876 - t15648 * t16887) * t16853 + pkin(2) * t17875) * t16854 + (t15648 * t16859 - t17056) * t16858 + t17185;
t15605 = ((qJ(3,4) * t17878 - t15647 * t16877) * t16853 + pkin(2) * t17877) * t16854 + (t15647 * t16859 - t17057) * t16858 + t17186;
t15604 = ((qJ(3,5) * t17880 - t15646 * t16876) * t16853 + pkin(2) * t17879) * t16854 + (t15646 * t16859 - t17058) * t16858 + t17187;
t15603 = ((qJ(3,6) * t17882 - t15645 * t16875) * t16853 + pkin(2) * t17881) * t16854 + (t15645 * t16859 - t17059) * t16858 + t17188;
t15602 = -t15626 * t16850 - t15638 * t17450;
t15601 = t15626 * t16855 - t15638 * t17481;
t15600 = -t15625 * t16850 - t15637 * t17450;
t15599 = t15625 * t16855 - t15637 * t17481;
t15598 = -t15624 * t16850 - t15636 * t17450;
t15597 = t15624 * t16855 - t15636 * t17481;
t15596 = -t15620 * t16850 - t15632 * t17450;
t15595 = t15620 * t16855 - t15632 * t17481;
t15594 = -t15619 * t16850 - t15631 * t17450;
t15593 = t15619 * t16855 - t15631 * t17481;
t15592 = -t15618 * t16850 - t15630 * t17450;
t15591 = t15618 * t16855 - t15630 * t17481;
t1 = [(t15639 * t17786 + t15640 * t17785 + t15641 * t17784 + t15642 * t17783 + t15643 * t17782 + t15644 * t17781) * MDP(1) + (-t15651 * t17282 - t15652 * t17281 - t15653 * t17280 - t15654 * t17279 - t15655 * t17278 - t15656 * t17277) * MDP(2) + ((t15854 * t17120 - t16889 * t17314) * t18027 + (t15853 * t17124 - t16888 * t17320) * t18026 + (t15852 * t17128 - t16887 * t17326) * t18025 + (t15851 * t17132 - t16877 * t17332) * t18024 + (t15850 * t17136 - t16876 * t17338) * t18023 + (t15849 * t17140 - t16875 * t17344) * t18022) * t17915 + ((-t15854 * t17121 + t16886 * t17314) * t18027 + (-t15853 * t17125 + t16885 * t17320) * t18026 + (-t15852 * t17129 + t16884 * t17326) * t18025 + (-t15851 * t17133 + t16874 * t17332) * t18024 + (-t15850 * t17137 + t16873 * t17338) * t18023 + (-t15849 * t17141 + t16872 * t17344) * t18022) * t17914 + (-t15591 * t17282 - t15593 * t17281 - t15595 * t17280 - t15597 * t17279 - t15599 * t17278 - t15601 * t17277 + (t17123 * t17781 + t17127 * t17782 + t17131 * t17783 + t17135 * t17784 + t17139 * t17785 + t17143 * t17786) * t16854 + (t16850 * t16918 + t16855 * t16944) * t16853) * MDP(5) + (-t15592 * t17282 - t15594 * t17281 - t15596 * t17280 - t15598 * t17279 - t15600 * t17278 - t15602 * t17277 + (t17122 * t17781 + t17126 * t17782 + t17130 * t17783 + t17134 * t17784 + t17138 * t17785 + t17142 * t17786) * t16854 + (-t16850 * t16944 + t16855 * t16918) * t16853) * MDP(6) + (-t15627 * t17282 - t15628 * t17281 - t15629 * t17280 - t15633 * t17277 - t15634 * t17279 - t15635 * t17278 + (t17121 * t17781 + t17125 * t17782 + t17129 * t17783 + t17133 * t17784 + t17137 * t17785 + t17141 * t17786) * t17472 + t16919 * t16802) * MDP(7) + (-t15609 * t17288 - t15610 * t17287 - t15611 * t17286 - t15612 * t17285 - t15613 * t17284 - t15614 * t17283 + (t15608 * t15854 - t15623 * t17739) * t18027 + (t15607 * t15853 - t15622 * t17740) * t18026 + (t15606 * t15852 - t15621 * t17741) * t18025 + (t15605 * t15851 - t15617 * t17742) * t18024 + (t15604 * t15850 - t15616 * t17743) * t18023 + (t15603 * t15849 - t15615 * t17744) * t18022 + (-t17307 * t17781 - t17308 * t17782 - t17309 * t17783 - t17310 * t17784 - t17311 * t17785 - t17312 * t17786) * t16854 + (-qJ(3,4) * t17995 - qJ(3,5) * t17996 - qJ(3,6) * t17997 - qJ(3,1) * t17992 - qJ(3,2) * t17993 - qJ(3,3) * t17994) * t16847) * MDP(8) + (t16288 * t17236 - t17523 + t16494 + (-t17253 + t17274) * t16842) * MDP(15) + (-t16289 * t17525 + t16974 + t17401) * MDP(16) + (t16843 * t16245 + t16437 + (t17714 + (t17234 + t17696) * t16762) * t16845) * MDP(17); (t15639 * t17821 + t15640 * t17819 + t15641 * t17817 + t15642 * t17815 + t15643 * t17813 + t15644 * t17811) * MDP(1) + (t15651 * t17759 + t15652 * t17758 + t15653 * t17757 + t15654 * t17753 + t15655 * t17752 + t15656 * t17751) * MDP(2) + (t15591 * t17759 + t15593 * t17758 + t15595 * t17757 + t15597 * t17753 + t15599 * t17752 + t15601 * t17751) * MDP(5) + (t15592 * t17759 + t15594 * t17758 + t15596 * t17757 + t15598 * t17753 + t15600 * t17752 + t15602 * t17751) * MDP(6) + (t15627 * t17759 + t15628 * t17758 + t15629 * t17757 + t15633 * t17751 + t15634 * t17753 + t15635 * t17752) * MDP(7) + (t15606 * t17815 + t15621 * t17753 + t15607 * t17813 + t15622 * t17752 + t15608 * t17811 + t15623 * t17751 + t15616 * t17758 + t15605 * t17817 + t15617 * t17757 + t15609 * t17773 + t15610 * t17771 + t15611 * t17769 + t15603 * t17821 + t15615 * t17759 + t15604 * t17819 + t15612 * t17767 + t15613 * t17765 + t15614 * t17763) * MDP(8) + (t16288 * t16616 + t16501 - t17276) * MDP(15) + (t16289 * t16615 - t16290) * MDP(16) + (-t17107 + t17404) * MDP(17) + (-MDP(16) * t17275 + ((t16474 - t17694) * MDP(15) + (-t16475 + t17697) * MDP(16) - t16245 * MDP(17)) * t16844) * t16845 + (t16975 * t17906 + t16980 * t17905 + t16985 * t17904 + t16990 * t17903 + t16995 * t17902 + t17000 * t17901) * t17907 + t16921 * t17909 + (t17977 * (t15651 * t17773 + t15652 * t17771 + t15653 * t17769 + t15654 * t17767 + t15655 * t17765 + t15656 * t17763) + t16921 * t17976) * t16853 + ((t15954 * t17345 + t15955 * t17339 + t15956 * t17333 + t15960 * t17327 + t15961 * t17321 + t15962 * t17315) * MDP(3) + (-t15954 * t17346 - t15955 * t17340 - t15956 * t17334 - t15960 * t17328 - t15961 * t17322 - t15962 * t17316) * MDP(4) + t15764 * t16932 + t15762 * t16933 + t15760 * t16934 + t15758 * t16935 + t15756 * t16936 + t15754 * t16937 + (t15754 * t17053 + t15756 * t17052 + t15758 * t17051 + t15760 * t17050 + t15762 * t17049 + t15764 * t17048) * t17908) * t16854; (t15639 * t17822 + t15640 * t17820 + t15641 * t17818 + t15642 * t17816 + t15643 * t17814 + t15644 * t17812) * MDP(1) + (t15651 * t17762 + t15652 * t17761 + t15653 * t17760 + t15654 * t17756 + t15655 * t17755 + t15656 * t17754) * MDP(2) + (t15591 * t17762 + t15593 * t17761 + t15595 * t17760 + t15597 * t17756 + t15599 * t17755 + t15601 * t17754) * MDP(5) + (t15592 * t17762 + t15594 * t17761 + t15596 * t17760 + t15598 * t17756 + t15600 * t17755 + t15602 * t17754) * MDP(6) + (t15627 * t17762 + t15628 * t17761 + t15629 * t17760 + t15633 * t17754 + t15634 * t17756 + t15635 * t17755) * MDP(7) + (t15606 * t17816 + t15621 * t17756 + t15607 * t17814 + t15622 * t17755 + t15608 * t17812 + t15623 * t17754 + t15616 * t17761 + t15605 * t17818 + t15617 * t17760 + t15609 * t17774 + t15610 * t17772 + t15611 * t17770 + t15603 * t17822 + t15615 * t17762 + t15604 * t17820 + t15612 * t17768 + t15613 * t17766 + t15614 * t17764) * MDP(8) + (t16288 * t16618 + t17085 + t17400) * MDP(15) + (t16289 * t16617 + t17402 - t17991) * MDP(16) + (t16245 * t17505 + t17106 + t17403) * MDP(17) + (t16976 * t17906 + t16981 * t17905 + t16986 * t17904 + t16991 * t17903 + t16996 * t17902 + t17001 * t17901) * t17907 + t16922 * t17909 + (t17977 * (t15651 * t17774 + t15652 * t17772 + t15653 * t17770 + t15654 * t17768 + t15655 * t17766 + t15656 * t17764) + t16922 * t17976) * t16853 + ((t15951 * t17345 + t15952 * t17339 + t15953 * t17333 + t15957 * t17327 + t15958 * t17321 + t15959 * t17315) * MDP(3) + (-t15951 * t17346 - t15952 * t17340 - t15953 * t17334 - t15957 * t17328 - t15958 * t17322 - t15959 * t17316) * MDP(4) + t15763 * t16932 + t15761 * t16933 + t15759 * t16934 + t15757 * t16935 + t15755 * t16936 + t15753 * t16937 + (t15753 * t17053 + t15755 * t17052 + t15757 * t17051 + t15759 * t17050 + t15761 * t17049 + t15763 * t17048) * t17908) * t16854; (t15639 * t17870 + t15640 * t17869 + t15641 * t17868 + t15642 * t17867 + t15643 * t17866 + t15644 * t17865) * MDP(1) + (t15651 * t17832 + t15652 * t17834 + t15653 * t17833 + t15654 * t17829 + t15655 * t17831 + t15656 * t17830) * MDP(2) + (t15741 * t17341 + t15742 * t17335 + t15743 * t17347 + t15744 * t17323 + t15745 * t17317 + t15746 * t17329 + t17120 * t17865 + t17124 * t17866 + t17128 * t17867 + t17132 * t17868 + t17136 * t17869 + t17140 * t17870) * t17915 + (-t15741 * t17342 - t15742 * t17336 - t15743 * t17348 - t15744 * t17324 - t15745 * t17318 - t15746 * t17330 - t17121 * t17865 - t17125 * t17866 - t17129 * t17867 - t17133 * t17868 - t17137 * t17869 - t17141 * t17870) * t17914 + (t15591 * t17832 + t15593 * t17834 + t15595 * t17833 + t15597 * t17829 + t15599 * t17831 + t15601 * t17830 + (t17123 * t17865 + t17127 * t17866 + t17131 * t17867 + t17135 * t17868 + t17139 * t17869 + t17143 * t17870) * t16854 + (t16850 * t16920 - t16855 * t16949) * t16853) * MDP(5) + (t15592 * t17832 + t15594 * t17834 + t15596 * t17833 + t15598 * t17829 + t15600 * t17831 + t15602 * t17830 + (t17122 * t17865 + t17126 * t17866 + t17130 * t17867 + t17134 * t17868 + t17138 * t17869 + t17142 * t17870) * t16854 + (t16850 * t16949 + t16855 * t16920) * t16853) * MDP(6) + (t15627 * t17832 + t15628 * t17834 + t15629 * t17833 + t15633 * t17830 + t15634 * t17829 + t15635 * t17831 + (t15681 * t17053 + t15682 * t17052 + t15683 * t17051 + t15684 * t17050 + t15685 * t17049 + t15686 * t17048) * t17472 + t16925 * t16802) * MDP(7) + (t15606 * t17867 + t15607 * t17866 + t15622 * t17831 + t15623 * t17830 + t15621 * t17829 + t15608 * t17865 + t15615 * t17832 + t15605 * t17868 + t15609 * t17828 + t15610 * t17827 + t15611 * t17826 + t15603 * t17870 + t15604 * t17869 + t15612 * t17825 + t15613 * t17824 + t15614 * t17823 + t15617 * t17833 + t15616 * t17834 + (-t17307 * t17865 - t17308 * t17866 - t17309 * t17867 - t17310 * t17868 - t17311 * t17869 - t17312 * t17870) * t16854 + (t16979 * t17906 + t16984 * t17905 + t16989 * t17904 + t16994 * t17903 + t16999 * t17902 + t17004 * t17901) * t16847) * MDP(8) + (t16475 * t17236 + (t16651 * t16843 - t16762 * t17525) * t16653) * MDP(9) + (t16843 * t16292 + t16437 + (-t17714 + (-t17234 + t17696) * t16762) * t16845) * MDP(10) + (-t16363 * t17525 - t16974 + t17401) * MDP(11) + (-t16474 * t17525 + (-t16653 * t16843 + t16762 * t17236) * t16651) * MDP(12) + (t16451 * t17236 + t17523 + t16494 + (-t17253 - t17274) * t16842) * MDP(13) + (t16843 * t17418 + (-t16651 * t17380 + t16653 * t16842) * t16762) * t16845 * MDP(14); (t15639 * t17852 + t15640 * t17851 + t15641 * t17850 + t15642 * t17846 + t15643 * t17844 + t15644 * t17842) * MDP(1) + (t15651 * t17808 + t15652 * t17807 + t15653 * t17805 + t15654 * t17803 + t15655 * t17801 + t15656 * t17799) * MDP(2) + (t15591 * t17808 + t15593 * t17807 + t15595 * t17805 + t15597 * t17803 + t15599 * t17801 + t15601 * t17799) * MDP(5) + (t15592 * t17808 + t15594 * t17807 + t15596 * t17805 + t15598 * t17803 + t15600 * t17801 + t15602 * t17799) * MDP(6) + (t15627 * t17808 + t15628 * t17807 + t15629 * t17805 + t15633 * t17799 + t15634 * t17803 + t15635 * t17801) * MDP(7) + (t15606 * t17846 + t15607 * t17844 + t15622 * t17801 + t15623 * t17799 + t15621 * t17803 + t15608 * t17842 + t15615 * t17808 + t15605 * t17850 + t15609 * t17795 + t15610 * t17797 + t15611 * t17793 + t15603 * t17852 + t15604 * t17851 + t15612 * t17788 + t15613 * t17790 + t15614 * t17787 + t15617 * t17805 + t15616 * t17807) * MDP(8) + (t16475 * t16616 + t16615 * t17694) * MDP(9) + (t17107 + t17404) * MDP(10) + (t16363 * t16615 - t16290) * MDP(11) + (t16474 * t16615 + t16616 * t17697) * MDP(12) + (t16451 * t16616 + t16501 + t17276) * MDP(13) + (-t16844 * t17253 + (-t16615 * t16653 - t16616 * t16651) * t16762) * MDP(14) + (MDP(11) * t17275 + (-t16292 * MDP(10) - t16475 * MDP(11) + (-t16474 - t17694) * MDP(13) + (-MDP(11) * t16762 + (MDP(12) - MDP(9)) * t16653) * t16651) * t16844) * t16845 + (t16977 * t17906 + t16982 * t17905 + t16987 * t17904 + t16992 * t17903 + t16997 * t17902 + t17002 * t17901) * t17907 + t16923 * t17909 + (t17977 * (t15651 * t17795 + t15652 * t17797 + t15653 * t17793 + t15654 * t17788 + t15655 * t17790 + t15656 * t17787) + t16923 * t17976) * t16853 + ((t15785 * t17347 + t15786 * t17341 + t15788 * t17335 + t15790 * t17329 + t15792 * t17323 + t15794 * t17317) * MDP(3) + (-t15785 * t17348 - t15786 * t17342 - t15788 * t17336 - t15790 * t17330 - t15792 * t17324 - t15794 * t17318) * MDP(4) + t15709 * t16932 + t15707 * t16933 + t15705 * t16934 + t15701 * t16935 + t15700 * t16936 + t15699 * t16937 + (t15699 * t17053 + t15700 * t17052 + t15701 * t17051 + t15705 * t17050 + t15707 * t17049 + t15709 * t17048) * t17908) * t16854; (t15639 * t17849 + t15640 * t17848 + t15641 * t17847 + t15642 * t17845 + t15643 * t17843 + t15644 * t17841) * MDP(1) + (t15651 * t17810 + t15652 * t17809 + t15653 * t17806 + t15654 * t17804 + t15655 * t17802 + t15656 * t17800) * MDP(2) + (t15591 * t17810 + t15593 * t17809 + t15595 * t17806 + t15597 * t17804 + t15599 * t17802 + t15601 * t17800) * MDP(5) + (t15592 * t17810 + t15594 * t17809 + t15596 * t17806 + t15598 * t17804 + t15600 * t17802 + t15602 * t17800) * MDP(6) + (t15627 * t17810 + t15628 * t17809 + t15629 * t17806 + t15633 * t17800 + t15634 * t17804 + t15635 * t17802) * MDP(7) + (t15606 * t17845 + t15607 * t17843 + t15622 * t17802 + t15623 * t17800 + t15621 * t17804 + t15608 * t17841 + t15615 * t17810 + t15605 * t17847 + t15609 * t17796 + t15610 * t17798 + t15611 * t17794 + t15603 * t17849 + t15604 * t17848 + t15612 * t17792 + t15613 * t17791 + t15614 * t17789 + t15617 * t17806 + t15616 * t17809) * MDP(8) + (t16475 * t16618 + (t16617 * t16762 + t16651 * t17505) * t16653) * MDP(9) + (t16292 * t17505 - t17106 + t17403) * MDP(10) + (t16363 * t16617 + t17402 + t17991) * MDP(11) + (t16474 * t16617 + (t16618 * t16762 - t17273) * t16651) * MDP(12) + (t16451 * t16618 - t17085 + t17400) * MDP(13) + (t16846 * t17253 + (-t16617 * t16653 - t16618 * t16651) * t16762) * MDP(14) + (t16978 * t17906 + t16983 * t17905 + t16988 * t17904 + t16993 * t17903 + t16998 * t17902 + t17003 * t17901) * t17907 + t16924 * t17909 + (t17977 * (t15651 * t17796 + t15652 * t17798 + t15653 * t17794 + t15654 * t17792 + t15655 * t17791 + t15656 * t17789) + t16924 * t17976) * t16853 + ((t15783 * t17347 + t15784 * t17341 + t15787 * t17335 + t15789 * t17329 + t15791 * t17323 + t15793 * t17317) * MDP(3) + (-t15783 * t17348 - t15784 * t17342 - t15787 * t17336 - t15789 * t17330 - t15791 * t17324 - t15793 * t17318) * MDP(4) + t15710 * t16932 + t15708 * t16933 + t15706 * t16934 + t15704 * t16935 + t15703 * t16936 + t15702 * t16937 + (t15702 * t17053 + t15703 * t17052 + t15704 * t17051 + t15706 * t17050 + t15708 * t17049 + t15710 * t17048) * t17908) * t16854;];
taucX  = t1;
