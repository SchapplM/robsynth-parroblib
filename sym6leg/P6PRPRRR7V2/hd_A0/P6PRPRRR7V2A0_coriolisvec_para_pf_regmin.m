% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PRPRRR7V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d4,theta1,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x18]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-17 04:21
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PRPRRR7V2A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRPRRR7V2A0_coriolisvec_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRPRRR7V2A0_coriolisvec_para_pf_regmin: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRPRRR7V2A0_coriolisvec_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRPRRR7V2A0_coriolisvec_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRPRRR7V2A0_coriolisvec_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRPRRR7V2A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-17 03:30:08
% EndTime: 2019-05-17 03:39:49
% DurationCPUTime: 643.32s
% Computational Cost: add. (4886971->2816), mult. (10907716->4990), div. (20772->39), fcn. (7320035->64), ass. (0->1835)
t6936 = cos(pkin(5));
t6964 = sin(qJ(2,1));
t6928 = sin(pkin(10));
t8016 = sin(pkin(6)) * pkin(8);
t6863 = t6928 * t8016;
t6860 = t6863 + pkin(2);
t6933 = cos(pkin(10));
t8017 = pkin(3) * t6933;
t8079 = t6860 + t8017;
t6752 = t6964 * t8079;
t6967 = cos(qJ(2,1));
t6935 = cos(pkin(6));
t6881 = t6935 * pkin(8);
t6873 = t6881 + qJ(3,1);
t6931 = sin(pkin(5));
t8177 = t6873 * t6931;
t6589 = -t6967 * t8177 + t6752;
t6834 = -pkin(3) * t6928 + t6933 * t8016;
t6937 = cos(pkin(4));
t6786 = t6937 * t6834;
t6722 = t6931 * t6786;
t6932 = sin(pkin(4));
t7490 = t6589 * t6932 - t6722;
t8197 = t6936 * t7490;
t6963 = sin(qJ(2,2));
t6751 = t6963 * t8079;
t6966 = cos(qJ(2,2));
t6872 = t6881 + qJ(3,2);
t8178 = t6872 * t6931;
t6588 = -t6966 * t8178 + t6751;
t7491 = t6588 * t6932 - t6722;
t8196 = t6936 * t7491;
t6962 = sin(qJ(2,3));
t6750 = t6962 * t8079;
t6965 = cos(qJ(2,3));
t6871 = t6881 + qJ(3,3);
t8179 = t6871 * t6931;
t6587 = -t6965 * t8179 + t6750;
t7492 = t6587 * t6932 - t6722;
t8195 = t6936 * t7492;
t6952 = sin(qJ(2,4));
t6746 = t6952 * t8079;
t6955 = cos(qJ(2,4));
t6869 = t6881 + qJ(3,4);
t8147 = t6869 * t6931;
t6583 = -t6955 * t8147 + t6746;
t7493 = t6583 * t6932 - t6722;
t8194 = t6936 * t7493;
t6951 = sin(qJ(2,5));
t6745 = t6951 * t8079;
t6954 = cos(qJ(2,5));
t6868 = t6881 + qJ(3,5);
t8148 = t6868 * t6931;
t6582 = -t6954 * t8148 + t6745;
t7494 = t6582 * t6932 - t6722;
t8193 = t6936 * t7494;
t6950 = sin(qJ(2,6));
t6744 = t6950 * t8079;
t6953 = cos(qJ(2,6));
t6867 = t6881 + qJ(3,6);
t8149 = t6867 * t6931;
t6581 = -t6953 * t8149 + t6744;
t7495 = t6581 * t6932 - t6722;
t8192 = t6936 * t7495;
t6974 = xP(5);
t6921 = sin(t6974);
t8020 = xP(6);
t6920 = sin(t8020);
t6988 = koppelP(6,2);
t7487 = cos(t8020);
t8034 = koppelP(6,1);
t7283 = t8034 * t7487;
t7154 = -t6920 * t6988 + t7283;
t6923 = cos(t6974);
t6982 = koppelP(6,3);
t7609 = t6923 * t6982;
t6623 = t6921 * t7154 - t7609;
t6825 = t6920 * t8034 + t6988 * t7487;
t6975 = xP(4);
t6922 = sin(t6975);
t6924 = cos(t6975);
t8191 = t6623 * t6922 + t6825 * t6924;
t6435 = t6623 * t6924 - t6825 * t6922;
t6989 = koppelP(5,2);
t8035 = koppelP(5,1);
t7284 = t8035 * t7487;
t7155 = -t6920 * t6989 + t7284;
t6983 = koppelP(5,3);
t7608 = t6923 * t6983;
t6624 = t6921 * t7155 - t7608;
t6826 = t6920 * t8035 + t6989 * t7487;
t8190 = t6624 * t6922 + t6826 * t6924;
t6436 = t6624 * t6924 - t6826 * t6922;
t6990 = koppelP(4,2);
t8036 = koppelP(4,1);
t7285 = t8036 * t7487;
t7156 = -t6920 * t6990 + t7285;
t6984 = koppelP(4,3);
t7607 = t6923 * t6984;
t6625 = t6921 * t7156 - t7607;
t6827 = t6920 * t8036 + t6990 * t7487;
t8189 = t6625 * t6922 + t6827 * t6924;
t6437 = t6625 * t6924 - t6827 * t6922;
t6991 = koppelP(3,2);
t8037 = koppelP(3,1);
t7286 = t8037 * t7487;
t7157 = -t6920 * t6991 + t7286;
t6985 = koppelP(3,3);
t7606 = t6923 * t6985;
t6626 = t6921 * t7157 - t7606;
t6828 = t6920 * t8037 + t6991 * t7487;
t8188 = t6626 * t6922 + t6828 * t6924;
t6438 = t6626 * t6924 - t6828 * t6922;
t6992 = koppelP(2,2);
t8038 = koppelP(2,1);
t7287 = t8038 * t7487;
t7158 = -t6920 * t6992 + t7287;
t6986 = koppelP(2,3);
t7605 = t6923 * t6986;
t6627 = t6921 * t7158 - t7605;
t6829 = t6920 * t8038 + t6992 * t7487;
t8187 = t6627 * t6922 + t6829 * t6924;
t6439 = t6627 * t6924 - t6829 * t6922;
t6993 = koppelP(1,2);
t8039 = koppelP(1,1);
t7288 = t8039 * t7487;
t7159 = -t6920 * t6993 + t7288;
t6987 = koppelP(1,3);
t7604 = t6923 * t6987;
t6628 = t6921 * t7159 - t7604;
t6830 = t6920 * t8039 + t6993 * t7487;
t8186 = t6628 * t6922 + t6830 * t6924;
t6440 = t6628 * t6924 - t6830 * t6922;
t6938 = legFrame(6,3);
t6896 = cos(t6938);
t6929 = sin(pkin(9));
t7531 = t6937 * t6953;
t7205 = t6834 * t7531 + t6867 * t6932;
t6934 = cos(pkin(9));
t7556 = t6934 * t6950;
t8124 = -t6834 * t7556 - t6929 * t7205;
t8176 = t6896 * t8124;
t6939 = legFrame(5,3);
t6897 = cos(t6939);
t7530 = t6937 * t6954;
t7204 = t6834 * t7530 + t6868 * t6932;
t7555 = t6934 * t6951;
t8123 = -t6834 * t7555 - t6929 * t7204;
t8175 = t6897 * t8123;
t6940 = legFrame(4,3);
t6898 = cos(t6940);
t7529 = t6937 * t6955;
t7203 = t6834 * t7529 + t6869 * t6932;
t7554 = t6934 * t6952;
t8122 = -t6834 * t7554 - t6929 * t7203;
t8174 = t6898 * t8122;
t6941 = legFrame(3,3);
t6899 = cos(t6941);
t7528 = t6937 * t6965;
t7202 = t6834 * t7528 + t6871 * t6932;
t7553 = t6934 * t6962;
t8121 = -t6834 * t7553 - t6929 * t7202;
t8173 = t6899 * t8121;
t6942 = legFrame(2,3);
t6900 = cos(t6942);
t7527 = t6937 * t6966;
t7201 = t6834 * t7527 + t6872 * t6932;
t7552 = t6934 * t6963;
t8120 = -t6834 * t7552 - t6929 * t7201;
t8172 = t6900 * t8120;
t6943 = legFrame(1,3);
t6901 = cos(t6943);
t7526 = t6937 * t6967;
t7200 = t6834 * t7526 + t6873 * t6932;
t7551 = t6934 * t6964;
t8119 = -t6834 * t7551 - t6929 * t7200;
t8171 = t6901 * t8119;
t6956 = legFrame(6,2);
t6908 = sin(t6956);
t6847 = t6937 * t6867;
t7563 = t6932 * t6953;
t8073 = t6834 * t7563 - t6847;
t8170 = t8073 * t6908;
t6957 = legFrame(5,2);
t6909 = sin(t6957);
t6848 = t6937 * t6868;
t7562 = t6932 * t6954;
t8074 = t6834 * t7562 - t6848;
t8169 = t8074 * t6909;
t6958 = legFrame(4,2);
t6910 = sin(t6958);
t6849 = t6937 * t6869;
t7561 = t6932 * t6955;
t8075 = t6834 * t7561 - t6849;
t8168 = t8075 * t6910;
t6959 = legFrame(3,2);
t6911 = sin(t6959);
t6853 = t6937 * t6871;
t7560 = t6932 * t6965;
t8076 = t6834 * t7560 - t6853;
t8167 = t8076 * t6911;
t6960 = legFrame(2,2);
t6912 = sin(t6960);
t6854 = t6937 * t6872;
t7559 = t6932 * t6966;
t8077 = t6834 * t7559 - t6854;
t8166 = t8077 * t6912;
t6961 = legFrame(1,2);
t6913 = sin(t6961);
t6855 = t6937 * t6873;
t7558 = t6932 * t6967;
t8078 = t6834 * t7558 - t6855;
t8165 = t8078 * t6913;
t7564 = t6932 * t6936;
t6787 = t6834 * t6936;
t6631 = -t6787 - t8147;
t8140 = t6631 * t6955 + t6746;
t8164 = t8140 * t7564;
t6630 = -t6787 - t8148;
t8141 = t6630 * t6954 + t6745;
t8163 = t8141 * t7564;
t6629 = -t6787 - t8149;
t8142 = t6629 * t6953 + t6744;
t8162 = t8142 * t7564;
t6927 = t6936 ^ 2;
t7578 = t6931 * t6936;
t6721 = t6834 * t7578;
t7270 = -t6721 - t6881;
t6632 = -t6787 - t8179;
t8139 = t6632 * t6965 + t6750;
t6284 = 0.1e1 / (t7564 * t8139 + (t6871 * t6927 - qJ(3,3) + t7270) * t6937);
t6633 = -t6787 - t8178;
t8138 = t6633 * t6966 + t6751;
t6285 = 0.1e1 / (t7564 * t8138 + (t6872 * t6927 - qJ(3,2) + t7270) * t6937);
t6634 = -t6787 - t8177;
t8137 = t6634 * t6967 + t6752;
t6286 = 0.1e1 / (t7564 * t8137 + (t6873 * t6927 - qJ(3,1) + t7270) * t6937);
t6969 = xDP(5);
t6968 = xDP(6);
t7611 = t6923 * t6968;
t6451 = t6623 * t6969 + t6825 * t7611;
t8161 = t6451 * t6922;
t8160 = t6451 * t6924;
t6452 = t6624 * t6969 + t6826 * t7611;
t8159 = t6452 * t6922;
t8158 = t6452 * t6924;
t6453 = t6625 * t6969 + t6827 * t7611;
t8157 = t6453 * t6922;
t8156 = t6453 * t6924;
t6454 = t6626 * t6969 + t6828 * t7611;
t8155 = t6454 * t6922;
t8154 = t6454 * t6924;
t6455 = t6627 * t6969 + t6829 * t7611;
t8153 = t6455 * t6922;
t8152 = t6455 * t6924;
t6456 = t6628 * t6969 + t6830 * t7611;
t8151 = t6456 * t6922;
t8150 = t6456 * t6924;
t8143 = t8079 * t6931;
t7502 = -t6927 * t8078 - t6855;
t8136 = 0.1e1 / (t7502 + t8197);
t7503 = -t6927 * t8077 - t6854;
t8135 = 0.1e1 / (t7503 + t8196);
t7504 = -t6927 * t8076 - t6853;
t8134 = 0.1e1 / (t7504 + t8195);
t7505 = -t6927 * t8075 - t6849;
t8133 = 0.1e1 / (t7505 + t8194);
t7506 = -t6927 * t8074 - t6848;
t8132 = 0.1e1 / (t7506 + t8193);
t7507 = -t6927 * t8073 - t6847;
t8131 = 0.1e1 / (t7507 + t8192);
t6970 = xDP(4);
t6840 = t6921 * t6970 + t6968;
t7268 = t6920 * t6840;
t6460 = t6840 * t7283 - t6970 * t7609 - t6988 * t7268;
t6972 = xDP(2);
t7318 = -t6921 * t6968 - t6970;
t7463 = t6969 * t8034;
t7469 = t6968 * t8034;
t7518 = t6969 * t6988;
t7524 = t6969 * t6982;
t7056 = (t6923 * t7463 + t6988 * t7318) * t7487 - t6920 * (t6923 * t7518 + t6970 * t8034) - (t6920 * t7469 - t7524) * t6921;
t6113 = t6460 * t6924 + t6922 * t7056 + t6972;
t6971 = xDP(3);
t6119 = t6460 * t6922 - t6924 * t7056 + t6971;
t6973 = xDP(1);
t7603 = t6923 * t6988;
t6360 = (t6921 * t7463 + t6968 * t7603) * t7487 - t6923 * t7524 - t6973 + (-t6921 * t7518 + t6923 * t7469) * t6920;
t6944 = legFrame(6,1);
t6890 = sin(t6944);
t6902 = cos(t6944);
t6914 = cos(t6956);
t5945 = -t6360 * t6914 + (t6113 * t6890 - t6119 * t6902) * t6908;
t5975 = t6113 * t6902 + t6890 * t6119;
t8130 = -t5945 * t6929 + t5975 * t6934;
t6461 = t6840 * t7284 - t6970 * t7608 - t6989 * t7268;
t7464 = t6969 * t8035;
t7470 = t6968 * t8035;
t7517 = t6969 * t6989;
t7523 = t6969 * t6983;
t7055 = (t6923 * t7464 + t6989 * t7318) * t7487 - t6920 * (t6923 * t7517 + t6970 * t8035) - (t6920 * t7470 - t7523) * t6921;
t6114 = t6461 * t6924 + t6922 * t7055 + t6972;
t6120 = t6461 * t6922 - t6924 * t7055 + t6971;
t7602 = t6923 * t6989;
t6361 = (t6921 * t7464 + t6968 * t7602) * t7487 - t6923 * t7523 - t6973 + (-t6921 * t7517 + t6923 * t7470) * t6920;
t6945 = legFrame(5,1);
t6891 = sin(t6945);
t6903 = cos(t6945);
t6915 = cos(t6957);
t5946 = -t6361 * t6915 + (t6114 * t6891 - t6120 * t6903) * t6909;
t5976 = t6114 * t6903 + t6891 * t6120;
t8129 = -t5946 * t6929 + t5976 * t6934;
t6462 = t6840 * t7285 - t6970 * t7607 - t6990 * t7268;
t7465 = t6969 * t8036;
t7471 = t6968 * t8036;
t7516 = t6969 * t6990;
t7522 = t6969 * t6984;
t7054 = (t6923 * t7465 + t6990 * t7318) * t7487 - t6920 * (t6923 * t7516 + t6970 * t8036) - (t6920 * t7471 - t7522) * t6921;
t6115 = t6462 * t6924 + t6922 * t7054 + t6972;
t6121 = t6462 * t6922 - t6924 * t7054 + t6971;
t7601 = t6923 * t6990;
t6362 = (t6921 * t7465 + t6968 * t7601) * t7487 - t6923 * t7522 - t6973 + (-t6921 * t7516 + t6923 * t7471) * t6920;
t6946 = legFrame(4,1);
t6892 = sin(t6946);
t6904 = cos(t6946);
t6916 = cos(t6958);
t5947 = -t6362 * t6916 + (t6115 * t6892 - t6121 * t6904) * t6910;
t5977 = t6115 * t6904 + t6892 * t6121;
t8128 = -t5947 * t6929 + t5977 * t6934;
t6463 = t6840 * t7286 - t6970 * t7606 - t6991 * t7268;
t7466 = t6969 * t8037;
t7472 = t6968 * t8037;
t7515 = t6969 * t6991;
t7521 = t6969 * t6985;
t7053 = (t6923 * t7466 + t6991 * t7318) * t7487 - t6920 * (t6923 * t7515 + t6970 * t8037) - (t6920 * t7472 - t7521) * t6921;
t6116 = t6463 * t6924 + t6922 * t7053 + t6972;
t6122 = t6463 * t6922 - t6924 * t7053 + t6971;
t7600 = t6923 * t6991;
t6363 = (t6921 * t7466 + t6968 * t7600) * t7487 - t6923 * t7521 - t6973 + (-t6921 * t7515 + t6923 * t7472) * t6920;
t6947 = legFrame(3,1);
t6893 = sin(t6947);
t6905 = cos(t6947);
t6917 = cos(t6959);
t5948 = -t6363 * t6917 + (t6116 * t6893 - t6122 * t6905) * t6911;
t5978 = t6116 * t6905 + t6893 * t6122;
t8127 = -t5948 * t6929 + t5978 * t6934;
t6464 = t6840 * t7287 - t6970 * t7605 - t6992 * t7268;
t7467 = t6969 * t8038;
t7473 = t6968 * t8038;
t7514 = t6969 * t6992;
t7520 = t6969 * t6986;
t7052 = (t6923 * t7467 + t6992 * t7318) * t7487 - t6920 * (t6923 * t7514 + t6970 * t8038) - (t6920 * t7473 - t7520) * t6921;
t6117 = t6464 * t6924 + t6922 * t7052 + t6972;
t6123 = t6464 * t6922 - t6924 * t7052 + t6971;
t7599 = t6923 * t6992;
t6364 = (t6921 * t7467 + t6968 * t7599) * t7487 - t6923 * t7520 - t6973 + (-t6921 * t7514 + t6923 * t7473) * t6920;
t6948 = legFrame(2,1);
t6894 = sin(t6948);
t6906 = cos(t6948);
t6918 = cos(t6960);
t5949 = -t6364 * t6918 + (t6117 * t6894 - t6123 * t6906) * t6912;
t5979 = t6117 * t6906 + t6894 * t6123;
t8126 = -t5949 * t6929 + t5979 * t6934;
t6465 = t6840 * t7288 - t6970 * t7604 - t6993 * t7268;
t7468 = t6969 * t8039;
t7474 = t6968 * t8039;
t7513 = t6969 * t6993;
t7519 = t6969 * t6987;
t7051 = (t6923 * t7468 + t6993 * t7318) * t7487 - t6920 * (t6923 * t7513 + t6970 * t8039) - (t6920 * t7474 - t7519) * t6921;
t6118 = t6465 * t6924 + t6922 * t7051 + t6972;
t6124 = t6465 * t6922 - t6924 * t7051 + t6971;
t7598 = t6923 * t6993;
t6365 = (t6921 * t7468 + t6968 * t7598) * t7487 - t6923 * t7519 - t6973 + (-t6921 * t7513 + t6923 * t7474) * t6920;
t6949 = legFrame(1,1);
t6895 = sin(t6949);
t6907 = cos(t6949);
t6919 = cos(t6961);
t5950 = -t6365 * t6919 + (t6118 * t6895 - t6124 * t6907) * t6913;
t5980 = t6118 * t6907 + t6895 * t6124;
t8125 = -t5950 * t6929 + t5980 * t6934;
t7579 = t6931 * t6932;
t7373 = t6834 * t7579;
t6401 = t6581 * t6937 + t7373;
t6747 = t8079 * t6953;
t7577 = t6931 * t6950;
t6584 = t6867 * t7577 + t6747;
t6560 = t6584 * t6934;
t6311 = -t6401 * t6929 + t6560;
t7585 = t6929 * t6950;
t6418 = t6834 * t7585 - t6934 * t7205;
t6884 = sin(t6938);
t7537 = t6937 * t6908;
t7565 = t6932 * t6934;
t7587 = t6929 * t6932;
t7847 = t7495 * t6908;
t7336 = t6401 * t6934 + t6929 * t6584;
t8098 = t6884 * t7336;
t7019 = t6867 * (t6914 * (t6884 * t7565 + t6896 * t7587) + t7537) + t6927 * (t6914 * (t6418 * t6884 + t8176) + t8170) - t6936 * (t6914 * (t6311 * t6896 - t8098) + t7847);
t6403 = t6582 * t6937 + t7373;
t6748 = t8079 * t6954;
t7576 = t6931 * t6951;
t6585 = t6868 * t7576 + t6748;
t6561 = t6585 * t6934;
t6312 = -t6403 * t6929 + t6561;
t7584 = t6929 * t6951;
t6419 = t6834 * t7584 - t6934 * t7204;
t6885 = sin(t6939);
t7536 = t6937 * t6909;
t7846 = t7494 * t6909;
t7335 = t6403 * t6934 + t6929 * t6585;
t8097 = t6885 * t7335;
t7018 = t6868 * (t6915 * (t6885 * t7565 + t6897 * t7587) + t7536) + t6927 * (t6915 * (t6419 * t6885 + t8175) + t8169) - t6936 * (t6915 * (t6312 * t6897 - t8097) + t7846);
t6405 = t6583 * t6937 + t7373;
t6749 = t8079 * t6955;
t7575 = t6931 * t6952;
t6586 = t6869 * t7575 + t6749;
t6562 = t6586 * t6934;
t6313 = -t6405 * t6929 + t6562;
t7583 = t6929 * t6952;
t6420 = t6834 * t7583 - t6934 * t7203;
t6886 = sin(t6940);
t7535 = t6937 * t6910;
t7845 = t7493 * t6910;
t7334 = t6405 * t6934 + t6929 * t6586;
t8096 = t6886 * t7334;
t7017 = t6869 * (t6916 * (t6886 * t7565 + t6898 * t7587) + t7535) + t6927 * (t6916 * (t6420 * t6886 + t8174) + t8168) - t6936 * (t6916 * (t6313 * t6898 - t8096) + t7845);
t6410 = t6587 * t6937 + t7373;
t6753 = t8079 * t6965;
t7571 = t6931 * t6962;
t6590 = t6871 * t7571 + t6753;
t6569 = t6590 * t6934;
t6317 = -t6410 * t6929 + t6569;
t7582 = t6929 * t6962;
t6424 = t6834 * t7582 - t6934 * t7202;
t6887 = sin(t6941);
t7534 = t6937 * t6911;
t7844 = t7492 * t6911;
t7333 = t6410 * t6934 + t6929 * t6590;
t8095 = t6887 * t7333;
t7016 = t6871 * (t6917 * (t6887 * t7565 + t6899 * t7587) + t7534) + t6927 * (t6917 * (t6424 * t6887 + t8173) + t8167) - t6936 * (t6917 * (t6317 * t6899 - t8095) + t7844);
t6412 = t6588 * t6937 + t7373;
t6754 = t8079 * t6966;
t7570 = t6931 * t6963;
t6591 = t6872 * t7570 + t6754;
t6570 = t6591 * t6934;
t6318 = -t6412 * t6929 + t6570;
t7581 = t6929 * t6963;
t6425 = t6834 * t7581 - t6934 * t7201;
t6888 = sin(t6942);
t7533 = t6937 * t6912;
t7843 = t7491 * t6912;
t7332 = t6412 * t6934 + t6929 * t6591;
t8094 = t6888 * t7332;
t7015 = t6872 * (t6918 * (t6888 * t7565 + t6900 * t7587) + t7533) + t6927 * (t6918 * (t6425 * t6888 + t8172) + t8166) - t6936 * (t6918 * (t6318 * t6900 - t8094) + t7843);
t6414 = t6589 * t6937 + t7373;
t6755 = t8079 * t6967;
t7569 = t6931 * t6964;
t6592 = t6873 * t7569 + t6755;
t6571 = t6592 * t6934;
t6319 = -t6414 * t6929 + t6571;
t7580 = t6929 * t6964;
t6426 = t6834 * t7580 - t6934 * t7200;
t6889 = sin(t6943);
t7532 = t6937 * t6913;
t7842 = t7490 * t6913;
t7331 = t6414 * t6934 + t6929 * t6592;
t8093 = t6889 * t7331;
t7014 = t6873 * (t6919 * (t6889 * t7565 + t6901 * t7587) + t7532) + t6927 * (t6919 * (t6426 * t6889 + t8171) + t8165) - t6936 * (t6919 * (t6319 * t6901 - t8093) + t7842);
t7818 = t6623 * t6914;
t7819 = t6623 * t6908;
t5897 = (t6311 * t7819 + t6825 * t7336) * t6896 + (t6311 * t6825 - t7336 * t7819) * t6884 - t7495 * t7818;
t7781 = t6825 * t6914;
t7782 = t6825 * t6908;
t5903 = (-t6311 * t7782 + t6623 * t7336) * t6896 + (t6311 * t6623 + t7336 * t7782) * t6884 + t7495 * t7781;
t5933 = (-t6418 * t6825 + t7819 * t8124) * t6896 + (t6418 * t7819 + t6825 * t8124) * t6884 - t8073 * t7818;
t5939 = (t6418 * t6623 + t7782 * t8124) * t6896 + (t6418 * t7782 - t6623 * t8124) * t6884 - t8073 * t7781;
t7645 = t6914 * t6937;
t7669 = t6908 * t6934;
t7671 = t6908 * t6929;
t6047 = t6623 * t7645 + ((-t6623 * t7671 + t6825 * t6934) * t6896 - (t6623 * t7669 + t6825 * t6929) * t6884) * t6932;
t6053 = -t6825 * t7645 + ((t6623 * t6934 + t6825 * t7671) * t6896 + (-t6623 * t6929 + t6825 * t7669) * t6884) * t6932;
t5759 = ((t5933 * t6922 + t5939 * t6924) * t6902 - t6890 * (t5933 * t6924 - t5939 * t6922)) * t6927 + ((-t5897 * t6922 + t5903 * t6924) * t6902 + (t5897 * t6924 + t5903 * t6922) * t6890) * t6936 + ((-t6047 * t6922 + t6053 * t6924) * t6902 + t6890 * (t6047 * t6924 + t6053 * t6922)) * t6867;
t7816 = t6624 * t6915;
t7817 = t6624 * t6909;
t5898 = (t6312 * t7817 + t6826 * t7335) * t6897 + (t6312 * t6826 - t7335 * t7817) * t6885 - t7494 * t7816;
t7777 = t6826 * t6915;
t7778 = t6826 * t6909;
t5904 = (-t6312 * t7778 + t6624 * t7335) * t6897 + (t6312 * t6624 + t7335 * t7778) * t6885 + t7494 * t7777;
t5934 = (-t6419 * t6826 + t7817 * t8123) * t6897 + (t6419 * t7817 + t6826 * t8123) * t6885 - t8074 * t7816;
t5940 = (t6419 * t6624 + t7778 * t8123) * t6897 + (t6419 * t7778 - t6624 * t8123) * t6885 - t8074 * t7777;
t7643 = t6915 * t6937;
t7664 = t6909 * t6934;
t7666 = t6909 * t6929;
t6048 = t6624 * t7643 + ((-t6624 * t7666 + t6826 * t6934) * t6897 - (t6624 * t7664 + t6826 * t6929) * t6885) * t6932;
t6054 = -t6826 * t7643 + ((t6624 * t6934 + t6826 * t7666) * t6897 + (-t6624 * t6929 + t6826 * t7664) * t6885) * t6932;
t5760 = ((t5934 * t6922 + t5940 * t6924) * t6903 - t6891 * (t5934 * t6924 - t5940 * t6922)) * t6927 + ((-t5898 * t6922 + t5904 * t6924) * t6903 + (t5898 * t6924 + t5904 * t6922) * t6891) * t6936 + ((-t6048 * t6922 + t6054 * t6924) * t6903 + t6891 * (t6048 * t6924 + t6054 * t6922)) * t6868;
t7814 = t6625 * t6916;
t7815 = t6625 * t6910;
t5899 = (t6313 * t7815 + t6827 * t7334) * t6898 + (t6313 * t6827 - t7334 * t7815) * t6886 - t7493 * t7814;
t7773 = t6827 * t6916;
t7774 = t6827 * t6910;
t5905 = (-t6313 * t7774 + t6625 * t7334) * t6898 + (t6313 * t6625 + t7334 * t7774) * t6886 + t7493 * t7773;
t5935 = (-t6420 * t6827 + t7815 * t8122) * t6898 + (t6420 * t7815 + t6827 * t8122) * t6886 - t8075 * t7814;
t5941 = (t6420 * t6625 + t7774 * t8122) * t6898 + (t6420 * t7774 - t6625 * t8122) * t6886 - t8075 * t7773;
t7641 = t6916 * t6937;
t7659 = t6910 * t6934;
t7661 = t6910 * t6929;
t6049 = t6625 * t7641 + ((-t6625 * t7661 + t6827 * t6934) * t6898 - (t6625 * t7659 + t6827 * t6929) * t6886) * t6932;
t6055 = -t6827 * t7641 + ((t6625 * t6934 + t6827 * t7661) * t6898 + (-t6625 * t6929 + t6827 * t7659) * t6886) * t6932;
t5761 = ((t5935 * t6922 + t5941 * t6924) * t6904 - t6892 * (t5935 * t6924 - t5941 * t6922)) * t6927 + ((-t5899 * t6922 + t5905 * t6924) * t6904 + (t5899 * t6924 + t5905 * t6922) * t6892) * t6936 + ((-t6049 * t6922 + t6055 * t6924) * t6904 + t6892 * (t6049 * t6924 + t6055 * t6922)) * t6869;
t7812 = t6626 * t6917;
t7813 = t6626 * t6911;
t5900 = (t6317 * t7813 + t6828 * t7333) * t6899 + (t6317 * t6828 - t7333 * t7813) * t6887 - t7492 * t7812;
t7769 = t6828 * t6917;
t7770 = t6828 * t6911;
t5906 = (-t6317 * t7770 + t6626 * t7333) * t6899 + (t6317 * t6626 + t7333 * t7770) * t6887 + t7492 * t7769;
t5936 = (-t6424 * t6828 + t7813 * t8121) * t6899 + (t6424 * t7813 + t6828 * t8121) * t6887 - t8076 * t7812;
t5942 = (t6424 * t6626 + t7770 * t8121) * t6899 + (t6424 * t7770 - t6626 * t8121) * t6887 - t8076 * t7769;
t7639 = t6917 * t6937;
t7655 = t6911 * t6934;
t7657 = t6911 * t6929;
t6050 = t6626 * t7639 + ((-t6626 * t7657 + t6828 * t6934) * t6899 - (t6626 * t7655 + t6828 * t6929) * t6887) * t6932;
t6056 = -t6828 * t7639 + ((t6626 * t6934 + t6828 * t7657) * t6899 + (-t6626 * t6929 + t6828 * t7655) * t6887) * t6932;
t5762 = ((t5936 * t6922 + t5942 * t6924) * t6905 - t6893 * (t5936 * t6924 - t5942 * t6922)) * t6927 + ((-t5900 * t6922 + t5906 * t6924) * t6905 + (t5900 * t6924 + t5906 * t6922) * t6893) * t6936 + ((-t6050 * t6922 + t6056 * t6924) * t6905 + t6893 * (t6050 * t6924 + t6056 * t6922)) * t6871;
t7810 = t6627 * t6918;
t7811 = t6627 * t6912;
t5901 = (t6318 * t7811 + t6829 * t7332) * t6900 + (t6318 * t6829 - t7332 * t7811) * t6888 - t7491 * t7810;
t7765 = t6829 * t6918;
t7766 = t6829 * t6912;
t5907 = (-t6318 * t7766 + t6627 * t7332) * t6900 + (t6318 * t6627 + t7332 * t7766) * t6888 + t7491 * t7765;
t5937 = (-t6425 * t6829 + t7811 * t8120) * t6900 + (t6425 * t7811 + t6829 * t8120) * t6888 - t8077 * t7810;
t5943 = (t6425 * t6627 + t7766 * t8120) * t6900 + (t6425 * t7766 - t6627 * t8120) * t6888 - t8077 * t7765;
t7637 = t6918 * t6937;
t7651 = t6912 * t6934;
t7653 = t6912 * t6929;
t6051 = t6627 * t7637 + ((-t6627 * t7653 + t6829 * t6934) * t6900 - (t6627 * t7651 + t6829 * t6929) * t6888) * t6932;
t6057 = -t6829 * t7637 + ((t6627 * t6934 + t6829 * t7653) * t6900 + (-t6627 * t6929 + t6829 * t7651) * t6888) * t6932;
t5763 = ((t5937 * t6922 + t5943 * t6924) * t6906 - t6894 * (t5937 * t6924 - t5943 * t6922)) * t6927 + ((-t5901 * t6922 + t5907 * t6924) * t6906 + (t5901 * t6924 + t5907 * t6922) * t6894) * t6936 + ((-t6051 * t6922 + t6057 * t6924) * t6906 + t6894 * (t6051 * t6924 + t6057 * t6922)) * t6872;
t7808 = t6628 * t6919;
t7809 = t6628 * t6913;
t5902 = (t6319 * t7809 + t6830 * t7331) * t6901 + (t6319 * t6830 - t7331 * t7809) * t6889 - t7490 * t7808;
t7761 = t6830 * t6919;
t7762 = t6830 * t6913;
t5908 = (-t6319 * t7762 + t6628 * t7331) * t6901 + (t6319 * t6628 + t7331 * t7762) * t6889 + t7490 * t7761;
t5938 = (-t6426 * t6830 + t7809 * t8119) * t6901 + (t6426 * t7809 + t6830 * t8119) * t6889 - t8078 * t7808;
t5944 = (t6426 * t6628 + t7762 * t8119) * t6901 + (t6426 * t7762 - t6628 * t8119) * t6889 - t8078 * t7761;
t7635 = t6919 * t6937;
t7647 = t6913 * t6934;
t7649 = t6913 * t6929;
t6052 = t6628 * t7635 + ((-t6628 * t7649 + t6830 * t6934) * t6901 - (t6628 * t7647 + t6830 * t6929) * t6889) * t6932;
t6058 = -t6830 * t7635 + ((t6628 * t6934 + t6830 * t7649) * t6901 + (-t6628 * t6929 + t6830 * t7647) * t6889) * t6932;
t5764 = ((t5938 * t6922 + t5944 * t6924) * t6907 - t6895 * (t5938 * t6924 - t5944 * t6922)) * t6927 + ((-t5902 * t6922 + t5908 * t6924) * t6907 + (t5902 * t6924 + t5908 * t6922) * t6895) * t6936 + ((-t6052 * t6922 + t6058 * t6924) * t6907 + t6895 * (t6052 * t6924 + t6058 * t6922)) * t6873;
t5896 = t5950 * t6934 + t5980 * t6929;
t5818 = t5896 * t6901 + t6889 * t8125;
t7634 = t6919 * t6964;
t7646 = t6913 * t6964;
t5890 = (t6118 * t7526 + t6124 * t7646) * t6907 + (-t6118 * t7646 + t6124 * t7526) * t6895 + t6365 * t7634;
t7347 = t6919 * t7526;
t7353 = t6913 * t7526;
t7045 = -(t6118 * t7353 + t6124 * t6964) * t6895 + (-t6118 * t6964 + t6124 * t7353) * t6907 + t6365 * t7347;
t5776 = ((-t6929 * t5890 + t6934 * t7045) * t6901 - t6889 * (t5890 * t6934 + t6929 * t7045)) * t6931 - t5818 * t7564;
t6610 = t6873 * t7558 + t6786;
t7374 = t6932 * t6752;
t6253 = -t6610 * t7578 + t6936 * t7374 + t7502;
t7965 = t5776 ^ 2 / t6253 ^ 2;
t7623 = t6921 * t6987;
t7783 = t7159 * t6923;
t6640 = -t7623 - t7783;
t7620 = t6922 * t6969;
t7630 = t6921 * t6922;
t7827 = t6440 * t6970;
t6141 = -(t6830 * t7630 - t6924 * t7159) * t6968 - t6640 * t7620 + t7827;
t7596 = t6924 * t6969;
t7629 = t6921 * t6924;
t7836 = t8186 * t6970;
t6142 = -(t6830 * t7629 + t6922 * t7159) * t6968 - t6640 * t7596 - t7836;
t7610 = t6923 * t6970;
t6671 = -t6921 * t7596 - t6922 * t7610;
t7595 = t6924 * t6970;
t6672 = t6921 * t7620 - t6923 * t7595;
t5860 = (-t6440 * t6672 - t6671 * t8186) * t6968 + ((-t6142 - t7836) * t6924 + (-t6141 + t7827) * t6922) * t6969 + (-t6141 * t6924 + t6142 * t6922) * t7611;
t6622 = -t6920 * t7598 + t6923 * t7288 + t7623;
t5919 = t6142 * t6970 + (t6622 * t7595 - t8151) * t6969 + (t6142 * t6921 + t6622 * t6671 + (t6440 * t6969 - t8150) * t6923) * t6968;
t7619 = t6922 * t6970;
t5920 = t6141 * t6970 + (t6622 * t7619 + t8150) * t6969 + (t6141 * t6921 - t6622 * t6672 + (t6969 * t8186 - t8151) * t6923) * t6968;
t6761 = t6889 * t6934 + t6901 * t6929;
t6767 = -t6889 * t6929 + t6901 * t6934;
t7677 = t6907 * t6913;
t6494 = t6761 * t7677 + t6767 * t6895;
t6495 = -t6761 * t6895 + t6767 * t7677;
t6037 = t6495 * t7564 + t6931 * (-t6494 * t6964 + t6495 * t7526);
t7713 = t6895 * t6913;
t6501 = t6761 * t6907 + t6767 * t7713;
t6507 = t6761 * t7713 - t6767 * t6907;
t6040 = -t6501 * t7564 - t6931 * (t6501 * t7526 - t6507 * t6964);
t6268 = 0.1e1 / ((-t6610 * t6931 + t7374) * t6936 + t7502);
t6870 = t6931 * t6937;
t7824 = (-t6634 * t6964 + t6755) * t6937;
t5794 = -t5818 * t7824 + t8137 * (t6889 * t5896 - t6901 * t8125);
t8028 = 0.1e1 / t6253;
t7962 = t5776 * t8028;
t7398 = t5794 * t7962;
t7295 = t6286 * t7398;
t7262 = t6931 * t7295;
t7396 = t6967 * t7962;
t7397 = t6964 * t7962;
t7538 = t6936 * t6967;
t7758 = t6834 * t6932;
t6329 = t6767 * t7564 + t6931 * (-t6761 * t6964 + t6767 * t7526);
t7848 = t6329 * t6919;
t7944 = t5794 * t6286;
t5734 = (t5919 * t6040 + t5920 * t6037) * t6268 + (-t5860 * t7848 - ((t6937 * t7944 + t7397 * t7758) * t6927 + ((t6873 * t7397 - t6967 * t7944) * t6931 + t8079 * t7396) * t7564 + (t7962 * t8143 - t7944) * t6937) * t7962 + (t6932 * t7538 + t6870) * t7262) * t8136;
t7981 = t5734 * t6964;
t7221 = t6967 * t7965 + t7981;
t8108 = t8136 * t7221;
t5895 = t5949 * t6934 + t5979 * t6929;
t5817 = t5895 * t6900 + t6888 * t8126;
t7636 = t6918 * t6963;
t7650 = t6912 * t6963;
t5889 = (t6117 * t7527 + t6123 * t7650) * t6906 + (-t6117 * t7650 + t6123 * t7527) * t6894 + t6364 * t7636;
t7348 = t6918 * t7527;
t7354 = t6912 * t7527;
t7046 = -(t6117 * t7354 + t6123 * t6963) * t6894 + (-t6117 * t6963 + t6123 * t7354) * t6906 + t6364 * t7348;
t5775 = ((-t6929 * t5889 + t6934 * t7046) * t6900 - t6888 * (t5889 * t6934 + t6929 * t7046)) * t6931 - t5817 * t7564;
t6607 = t6872 * t7559 + t6786;
t7375 = t6932 * t6751;
t6252 = -t6607 * t7578 + t6936 * t7375 + t7503;
t7966 = t5775 ^ 2 / t6252 ^ 2;
t7624 = t6921 * t6986;
t7784 = t7158 * t6923;
t6639 = -t7624 - t7784;
t7828 = t6439 * t6970;
t6139 = -(t6829 * t7630 - t6924 * t7158) * t6968 - t6639 * t7620 + t7828;
t7837 = t8187 * t6970;
t6140 = -(t6829 * t7629 + t6922 * t7158) * t6968 - t6639 * t7596 - t7837;
t5859 = (-t6439 * t6672 - t6671 * t8187) * t6968 + ((-t6140 - t7837) * t6924 + (-t6139 + t7828) * t6922) * t6969 + (-t6139 * t6924 + t6140 * t6922) * t7611;
t6621 = -t6920 * t7599 + t6923 * t7287 + t7624;
t5917 = t6140 * t6970 + (t6621 * t7595 - t8153) * t6969 + (t6140 * t6921 + t6621 * t6671 + (t6439 * t6969 - t8152) * t6923) * t6968;
t5918 = t6139 * t6970 + (t6621 * t7619 + t8152) * t6969 + (t6139 * t6921 - t6621 * t6672 + (t6969 * t8187 - t8153) * t6923) * t6968;
t6760 = t6888 * t6934 + t6900 * t6929;
t6766 = -t6888 * t6929 + t6900 * t6934;
t7682 = t6906 * t6912;
t6492 = t6760 * t7682 + t6766 * t6894;
t6493 = -t6760 * t6894 + t6766 * t7682;
t6036 = t6493 * t7564 + t6931 * (-t6492 * t6963 + t6493 * t7527);
t7719 = t6894 * t6912;
t6500 = t6760 * t6906 + t6766 * t7719;
t6506 = t6760 * t7719 - t6766 * t6906;
t6039 = -t6500 * t7564 - t6931 * (t6500 * t7527 - t6506 * t6963);
t6265 = 0.1e1 / ((-t6607 * t6931 + t7375) * t6936 + t7503);
t7825 = (-t6633 * t6963 + t6754) * t6937;
t5793 = -t5817 * t7825 + t8138 * (t6888 * t5895 - t6900 * t8126);
t8029 = 0.1e1 / t6252;
t7963 = t5775 * t8029;
t7401 = t5793 * t7963;
t7296 = t6285 * t7401;
t7263 = t6931 * t7296;
t7399 = t6966 * t7963;
t7400 = t6963 * t7963;
t7539 = t6936 * t6966;
t6328 = t6766 * t7564 + t6931 * (-t6760 * t6963 + t6766 * t7527);
t7849 = t6328 * t6918;
t7945 = t5793 * t6285;
t5733 = (t5917 * t6039 + t5918 * t6036) * t6265 + (-t5859 * t7849 - ((t6937 * t7945 + t7400 * t7758) * t6927 + ((t6872 * t7400 - t6966 * t7945) * t6931 + t8079 * t7399) * t7564 + (t7963 * t8143 - t7945) * t6937) * t7963 + (t6932 * t7539 + t6870) * t7263) * t8135;
t7983 = t5733 * t6963;
t7225 = t6966 * t7966 + t7983;
t8109 = t8135 * t7225;
t5894 = t5948 * t6934 + t5978 * t6929;
t5816 = t5894 * t6899 + t6887 * t8127;
t7638 = t6917 * t6962;
t7654 = t6911 * t6962;
t5888 = (t6116 * t7528 + t6122 * t7654) * t6905 + (-t6116 * t7654 + t6122 * t7528) * t6893 + t6363 * t7638;
t7349 = t6917 * t7528;
t7355 = t6911 * t7528;
t7047 = -(t6116 * t7355 + t6122 * t6962) * t6893 + (-t6116 * t6962 + t6122 * t7355) * t6905 + t6363 * t7349;
t5774 = ((-t6929 * t5888 + t6934 * t7047) * t6899 - t6887 * (t5888 * t6934 + t6929 * t7047)) * t6931 - t5816 * t7564;
t6604 = t6871 * t7560 + t6786;
t7376 = t6932 * t6750;
t6251 = -t6604 * t7578 + t6936 * t7376 + t7504;
t7967 = t5774 ^ 2 / t6251 ^ 2;
t7625 = t6921 * t6985;
t7785 = t7157 * t6923;
t6638 = -t7625 - t7785;
t7829 = t6438 * t6970;
t6137 = -(t6828 * t7630 - t6924 * t7157) * t6968 - t6638 * t7620 + t7829;
t7838 = t8188 * t6970;
t6138 = -(t6828 * t7629 + t6922 * t7157) * t6968 - t6638 * t7596 - t7838;
t5858 = (-t6438 * t6672 - t6671 * t8188) * t6968 + ((-t6138 - t7838) * t6924 + (-t6137 + t7829) * t6922) * t6969 + (-t6137 * t6924 + t6138 * t6922) * t7611;
t6620 = -t6920 * t7600 + t6923 * t7286 + t7625;
t5915 = t6138 * t6970 + (t6620 * t7595 - t8155) * t6969 + (t6138 * t6921 + t6620 * t6671 + (t6438 * t6969 - t8154) * t6923) * t6968;
t5916 = t6137 * t6970 + (t6620 * t7619 + t8154) * t6969 + (t6137 * t6921 - t6620 * t6672 + (t6969 * t8188 - t8155) * t6923) * t6968;
t6759 = t6887 * t6934 + t6899 * t6929;
t6765 = -t6887 * t6929 + t6899 * t6934;
t7687 = t6905 * t6911;
t6490 = t6759 * t7687 + t6765 * t6893;
t6491 = -t6759 * t6893 + t6765 * t7687;
t6035 = t6491 * t7564 + t6931 * (-t6490 * t6962 + t6491 * t7528);
t7725 = t6893 * t6911;
t6499 = t6759 * t6905 + t6765 * t7725;
t6505 = t6759 * t7725 - t6765 * t6905;
t6038 = -t6499 * t7564 - t6931 * (t6499 * t7528 - t6505 * t6962);
t6262 = 0.1e1 / ((-t6604 * t6931 + t7376) * t6936 + t7504);
t7826 = (-t6632 * t6962 + t6753) * t6937;
t5792 = -t5816 * t7826 + (t6887 * t5894 - t6899 * t8127) * t8139;
t8030 = 0.1e1 / t6251;
t7964 = t5774 * t8030;
t7404 = t5792 * t7964;
t7297 = t6284 * t7404;
t7264 = t6931 * t7297;
t7402 = t6965 * t7964;
t7403 = t6962 * t7964;
t7540 = t6936 * t6965;
t6327 = t6765 * t7564 + t6931 * (-t6759 * t6962 + t6765 * t7528);
t7850 = t6327 * t6917;
t7946 = t5792 * t6284;
t5732 = (t5915 * t6038 + t5916 * t6035) * t6262 + (-t5858 * t7850 - ((t6937 * t7946 + t7403 * t7758) * t6927 + ((t6871 * t7403 - t6965 * t7946) * t6931 + t8079 * t7402) * t7564 + (t7964 * t8143 - t7946) * t6937) * t7964 + (t6932 * t7540 + t6870) * t7264) * t8134;
t7985 = t5732 * t6962;
t7229 = t6965 * t7967 + t7985;
t8110 = t8134 * t7229;
t5893 = t5947 * t6934 + t5977 * t6929;
t5815 = t5893 * t6898 + t6886 * t8128;
t7640 = t6916 * t6952;
t7658 = t6910 * t6952;
t5887 = (t6115 * t7529 + t6121 * t7658) * t6904 + (-t6115 * t7658 + t6121 * t7529) * t6892 + t6362 * t7640;
t7350 = t6916 * t7529;
t7356 = t6910 * t7529;
t7048 = (-t6115 * t6952 + t6121 * t7356) * t6904 - (t6115 * t7356 + t6121 * t6952) * t6892 + t6362 * t7350;
t5770 = ((-t6929 * t5887 + t6934 * t7048) * t6898 - (t5887 * t6934 + t6929 * t7048) * t6886) * t6931 - t5815 * t7564;
t6601 = t6869 * t7561 + t6786;
t7377 = t6932 * t6746;
t6232 = -t6601 * t7578 + t6936 * t7377 + t7505;
t7971 = t5770 ^ 2 / t6232 ^ 2;
t7626 = t6921 * t6984;
t7786 = t7156 * t6923;
t6637 = -t7626 - t7786;
t7830 = t6437 * t6970;
t6135 = -(t6827 * t7630 - t6924 * t7156) * t6968 - t6637 * t7620 + t7830;
t7839 = t8189 * t6970;
t6136 = -(t6827 * t7629 + t6922 * t7156) * t6968 - t6637 * t7596 - t7839;
t5857 = (-t6437 * t6672 - t6671 * t8189) * t6968 + ((-t6136 - t7839) * t6924 + (-t6135 + t7830) * t6922) * t6969 + (-t6135 * t6924 + t6136 * t6922) * t7611;
t6619 = -t6920 * t7601 + t6923 * t7285 + t7626;
t5913 = t6136 * t6970 + (t6619 * t7595 - t8157) * t6969 + (t6136 * t6921 + t6619 * t6671 + (t6437 * t6969 - t8156) * t6923) * t6968;
t5914 = t6135 * t6970 + (t6619 * t7619 + t8156) * t6969 + (t6135 * t6921 - t6619 * t6672 + (t6969 * t8189 - t8157) * t6923) * t6968;
t6758 = t6886 * t6934 + t6898 * t6929;
t6764 = -t6886 * t6929 + t6898 * t6934;
t7692 = t6904 * t6910;
t6488 = t6758 * t7692 + t6764 * t6892;
t6489 = -t6758 * t6892 + t6764 * t7692;
t6031 = t6489 * t7564 + t6931 * (-t6488 * t6952 + t6489 * t7529);
t7731 = t6892 * t6910;
t6498 = t6758 * t6904 + t6764 * t7731;
t6504 = t6758 * t7731 - t6764 * t6904;
t6034 = -t6498 * t7564 - t6931 * (t6498 * t7529 - t6504 * t6952);
t6250 = 0.1e1 / ((-t6601 * t6931 + t7377) * t6936 + t7505);
t6852 = t6869 * t6927;
t6283 = 0.1e1 / ((t6852 - t6721 - t6869) * t6937 + t8164);
t7833 = (-t6631 * t6952 + t6749) * t6937;
t5791 = -t5815 * t7833 + (t6886 * t5893 - t6898 * t8128) * t8140;
t8031 = 0.1e1 / t6232;
t7968 = t5770 * t8031;
t7407 = t5791 * t7968;
t7298 = t6283 * t7407;
t7265 = t6931 * t7298;
t7405 = t6955 * t7968;
t7406 = t6952 * t7968;
t7544 = t6936 * t6955;
t6326 = t6764 * t7564 + t6931 * (-t6758 * t6952 + t6764 * t7529);
t7851 = t6326 * t6916;
t7947 = t5791 * t6283;
t5731 = (t5913 * t6034 + t5914 * t6031) * t6250 + (-t5857 * t7851 - ((t6937 * t7947 + t7406 * t7758) * t6927 + ((t6869 * t7406 - t6955 * t7947) * t6931 + t8079 * t7405) * t7564 + (t7968 * t8143 - t7947) * t6937) * t7968 + (t6932 * t7544 + t6870) * t7265) * t8133;
t7987 = t5731 * t6952;
t7233 = t6955 * t7971 + t7987;
t8111 = t8133 * t7233;
t5892 = t5946 * t6934 + t5976 * t6929;
t5814 = t5892 * t6897 + t6885 * t8129;
t7642 = t6915 * t6951;
t7663 = t6909 * t6951;
t5886 = (t6114 * t7530 + t6120 * t7663) * t6903 + (-t6114 * t7663 + t6120 * t7530) * t6891 + t6361 * t7642;
t7351 = t6915 * t7530;
t7357 = t6909 * t7530;
t7049 = (-t6114 * t6951 + t6120 * t7357) * t6903 - (t6114 * t7357 + t6120 * t6951) * t6891 + t6361 * t7351;
t5769 = ((-t6929 * t5886 + t6934 * t7049) * t6897 - (t5886 * t6934 + t6929 * t7049) * t6885) * t6931 - t5814 * t7564;
t6598 = t6868 * t7562 + t6786;
t7378 = t6932 * t6745;
t6231 = -t6598 * t7578 + t6936 * t7378 + t7506;
t7972 = t5769 ^ 2 / t6231 ^ 2;
t7627 = t6921 * t6983;
t7787 = t7155 * t6923;
t6636 = -t7627 - t7787;
t7831 = t6436 * t6970;
t6133 = -(t6826 * t7630 - t6924 * t7155) * t6968 - t6636 * t7620 + t7831;
t7840 = t8190 * t6970;
t6134 = -(t6826 * t7629 + t6922 * t7155) * t6968 - t6636 * t7596 - t7840;
t5856 = (-t6436 * t6672 - t6671 * t8190) * t6968 + ((-t6134 - t7840) * t6924 + (-t6133 + t7831) * t6922) * t6969 + (-t6133 * t6924 + t6134 * t6922) * t7611;
t6618 = -t6920 * t7602 + t6923 * t7284 + t7627;
t5911 = t6134 * t6970 + (t6618 * t7595 - t8159) * t6969 + (t6134 * t6921 + t6618 * t6671 + (t6436 * t6969 - t8158) * t6923) * t6968;
t5912 = t6133 * t6970 + (t6618 * t7619 + t8158) * t6969 + (t6133 * t6921 - t6618 * t6672 + (t6969 * t8190 - t8159) * t6923) * t6968;
t6757 = t6885 * t6934 + t6897 * t6929;
t6763 = -t6885 * t6929 + t6897 * t6934;
t7697 = t6903 * t6909;
t6486 = t6757 * t7697 + t6763 * t6891;
t6487 = -t6757 * t6891 + t6763 * t7697;
t6030 = t6487 * t7564 + t6931 * (-t6486 * t6951 + t6487 * t7530);
t7737 = t6891 * t6909;
t6497 = t6757 * t6903 + t6763 * t7737;
t6503 = t6757 * t7737 - t6763 * t6903;
t6033 = -t6497 * t7564 - t6931 * (t6497 * t7530 - t6503 * t6951);
t6247 = 0.1e1 / ((-t6598 * t6931 + t7378) * t6936 + t7506);
t6851 = t6868 * t6927;
t6282 = 0.1e1 / ((t6851 - t6721 - t6868) * t6937 + t8163);
t7834 = (-t6630 * t6951 + t6748) * t6937;
t5790 = -t5814 * t7834 + (t6885 * t5892 - t6897 * t8129) * t8141;
t8032 = 0.1e1 / t6231;
t7969 = t5769 * t8032;
t7410 = t5790 * t7969;
t7299 = t6282 * t7410;
t7266 = t6931 * t7299;
t7408 = t6954 * t7969;
t7409 = t6951 * t7969;
t7545 = t6936 * t6954;
t6325 = t6763 * t7564 + t6931 * (-t6757 * t6951 + t6763 * t7530);
t7852 = t6325 * t6915;
t7948 = t5790 * t6282;
t5730 = (t5911 * t6033 + t5912 * t6030) * t6247 + (-t5856 * t7852 - ((t6937 * t7948 + t7409 * t7758) * t6927 + ((t6868 * t7409 - t6954 * t7948) * t6931 + t8079 * t7408) * t7564 + (t7969 * t8143 - t7948) * t6937) * t7969 + (t6932 * t7545 + t6870) * t7266) * t8132;
t7989 = t5730 * t6951;
t7237 = t6954 * t7972 + t7989;
t8112 = t8132 * t7237;
t5891 = t5945 * t6934 + t5975 * t6929;
t5813 = t5891 * t6896 + t6884 * t8130;
t7644 = t6914 * t6950;
t7668 = t6908 * t6950;
t5885 = (t6113 * t7531 + t6119 * t7668) * t6902 + (-t6113 * t7668 + t6119 * t7531) * t6890 + t6360 * t7644;
t7352 = t6914 * t7531;
t7358 = t6908 * t7531;
t7050 = (-t6113 * t6950 + t6119 * t7358) * t6902 - (t6113 * t7358 + t6119 * t6950) * t6890 + t6360 * t7352;
t5768 = ((-t6929 * t5885 + t6934 * t7050) * t6896 - (t5885 * t6934 + t6929 * t7050) * t6884) * t6931 - t5813 * t7564;
t6595 = t6867 * t7563 + t6786;
t7379 = t6932 * t6744;
t6230 = -t6595 * t7578 + t6936 * t7379 + t7507;
t7973 = t5768 ^ 2 / t6230 ^ 2;
t7628 = t6921 * t6982;
t7788 = t7154 * t6923;
t6635 = -t7628 - t7788;
t7832 = t6435 * t6970;
t6131 = -(t6825 * t7630 - t6924 * t7154) * t6968 - t6635 * t7620 + t7832;
t7841 = t8191 * t6970;
t6132 = -(t6825 * t7629 + t6922 * t7154) * t6968 - t6635 * t7596 - t7841;
t5855 = (-t6435 * t6672 - t6671 * t8191) * t6968 + ((-t6132 - t7841) * t6924 + (-t6131 + t7832) * t6922) * t6969 + (-t6131 * t6924 + t6132 * t6922) * t7611;
t6617 = -t6920 * t7603 + t6923 * t7283 + t7628;
t5909 = t6132 * t6970 + (t6617 * t7595 - t8161) * t6969 + (t6132 * t6921 + t6617 * t6671 + (t6435 * t6969 - t8160) * t6923) * t6968;
t5910 = t6131 * t6970 + (t6617 * t7619 + t8160) * t6969 + (t6131 * t6921 - t6617 * t6672 + (t6969 * t8191 - t8161) * t6923) * t6968;
t6756 = t6884 * t6934 + t6896 * t6929;
t6762 = -t6884 * t6929 + t6896 * t6934;
t7702 = t6902 * t6908;
t6484 = t6756 * t7702 + t6762 * t6890;
t6485 = -t6756 * t6890 + t6762 * t7702;
t6029 = t6485 * t7564 + t6931 * (-t6484 * t6950 + t6485 * t7531);
t7743 = t6890 * t6908;
t6496 = t6756 * t6902 + t6762 * t7743;
t6502 = t6756 * t7743 - t6762 * t6902;
t6032 = -t6496 * t7564 - t6931 * (t6496 * t7531 - t6502 * t6950);
t6244 = 0.1e1 / ((-t6595 * t6931 + t7379) * t6936 + t7507);
t6850 = t6867 * t6927;
t6281 = 0.1e1 / ((t6850 - t6721 - t6867) * t6937 + t8162);
t7835 = (-t6629 * t6950 + t6747) * t6937;
t5789 = -t5813 * t7835 + (t6884 * t5891 - t6896 * t8130) * t8142;
t8033 = 0.1e1 / t6230;
t7970 = t5768 * t8033;
t7413 = t5789 * t7970;
t7300 = t6281 * t7413;
t7267 = t6931 * t7300;
t7411 = t6953 * t7970;
t7412 = t6950 * t7970;
t7546 = t6936 * t6953;
t6324 = t6762 * t7564 + t6931 * (-t6756 * t6950 + t6762 * t7531);
t7853 = t6324 * t6914;
t7949 = t5789 * t6281;
t5729 = (t5909 * t6032 + t5910 * t6029) * t6244 + (-t5855 * t7853 - ((t6937 * t7949 + t7412 * t7758) * t6927 + ((t6867 * t7412 - t6953 * t7949) * t6931 + t8079 * t7411) * t7564 + (t7970 * t8143 - t7949) * t6937) * t7970 + (t6932 * t7546 + t6870) * t7267) * t8131;
t7991 = t5729 * t6950;
t7241 = t6953 * t7973 + t7991;
t8113 = t8131 * t7241;
t8118 = t5759 * t8113 + t5760 * t8112 + t5761 * t8111 + t5762 * t8110 + t5763 * t8109 + t5764 * t8108;
t7013 = t6923 * t7019;
t7475 = t6924 * t8034;
t7481 = t6922 * t8034;
t7594 = t6924 * t6988;
t7618 = t6922 * t6988;
t7324 = -(t6921 * t7594 + t7481) * t6920 + (t6921 * t7475 - t7618) * t7487;
t7122 = t6401 * t6902;
t6212 = t6584 * t6890 + t6908 * t7122;
t7123 = t6401 * t6890;
t6254 = t6584 * t7702 - t7123;
t7181 = -t6890 * t6950 + t6902 * t7358;
t7670 = t6908 * t6932;
t7365 = t6867 * t7670;
t6337 = -t6834 * t7181 - t6902 * t7365;
t7183 = t6890 * t7531 + t6902 * t7668;
t7740 = t6890 * t6932;
t6348 = -t6834 * t7183 - t6867 * t7740;
t7701 = t6902 * t6914;
t7708 = t6896 * t6932;
t7739 = t6890 * t6934;
t7741 = t6890 * t6929;
t7750 = t6884 * t6932;
t8051 = t6867 * ((t6902 * t7671 + t7739) * t7708 + (t6902 * t7669 - t7741) * t7750 - t6902 * t7645) + t6927 * ((t6337 * t6934 - t6348 * t6929) * t6884 + (t6337 * t6929 + t6348 * t6934) * t6896 - t8073 * t7701) + t6936 * ((t6212 * t6934 + t6254 * t6929) * t6884 - (-t6212 * t6929 + t6254 * t6934) * t6896 + t7495 * t7701);
t5777 = -t8051 * t7788 + t7019 * t7324 + (-t6921 * t8051 - t6924 * t7013) * t6982;
t7012 = t6923 * t7018;
t7476 = t6924 * t8035;
t7482 = t6922 * t8035;
t7593 = t6924 * t6989;
t7617 = t6922 * t6989;
t7323 = -(t6921 * t7593 + t7482) * t6920 + (t6921 * t7476 - t7617) * t7487;
t7120 = t6403 * t6903;
t6213 = t6585 * t6891 + t6909 * t7120;
t7121 = t6403 * t6891;
t6255 = t6585 * t7697 - t7121;
t7177 = -t6891 * t6951 + t6903 * t7357;
t7665 = t6909 * t6932;
t7364 = t6868 * t7665;
t6339 = -t6834 * t7177 - t6903 * t7364;
t7179 = t6891 * t7530 + t6903 * t7663;
t7734 = t6891 * t6932;
t6350 = -t6834 * t7179 - t6868 * t7734;
t7696 = t6903 * t6915;
t7707 = t6897 * t6932;
t7733 = t6891 * t6934;
t7735 = t6891 * t6929;
t7749 = t6885 * t6932;
t8049 = t6868 * ((t6903 * t7666 + t7733) * t7707 + (t6903 * t7664 - t7735) * t7749 - t6903 * t7643) + t6927 * ((t6339 * t6934 - t6350 * t6929) * t6885 + (t6339 * t6929 + t6350 * t6934) * t6897 - t8074 * t7696) + t6936 * ((t6213 * t6934 + t6255 * t6929) * t6885 - (-t6213 * t6929 + t6255 * t6934) * t6897 + t7494 * t7696);
t5778 = -t8049 * t7787 + t7018 * t7323 + (-t6921 * t8049 - t6924 * t7012) * t6983;
t7011 = t6923 * t7017;
t7477 = t6924 * t8036;
t7483 = t6922 * t8036;
t7592 = t6924 * t6990;
t7616 = t6922 * t6990;
t7322 = -(t6921 * t7592 + t7483) * t6920 + (t6921 * t7477 - t7616) * t7487;
t7118 = t6405 * t6904;
t6214 = t6586 * t6892 + t6910 * t7118;
t7119 = t6405 * t6892;
t6256 = t6586 * t7692 - t7119;
t7173 = -t6892 * t6952 + t6904 * t7356;
t7660 = t6910 * t6932;
t7363 = t6869 * t7660;
t6341 = -t6834 * t7173 - t6904 * t7363;
t7175 = t6892 * t7529 + t6904 * t7658;
t7728 = t6892 * t6932;
t6352 = -t6834 * t7175 - t6869 * t7728;
t7691 = t6904 * t6916;
t7706 = t6898 * t6932;
t7727 = t6892 * t6934;
t7729 = t6892 * t6929;
t7748 = t6886 * t6932;
t8047 = t6869 * ((t6904 * t7661 + t7727) * t7706 + (t6904 * t7659 - t7729) * t7748 - t6904 * t7641) + t6927 * ((t6341 * t6934 - t6352 * t6929) * t6886 + (t6341 * t6929 + t6352 * t6934) * t6898 - t8075 * t7691) + t6936 * ((t6214 * t6934 + t6256 * t6929) * t6886 - (-t6214 * t6929 + t6256 * t6934) * t6898 + t7493 * t7691);
t5779 = -t8047 * t7786 + t7017 * t7322 + (-t6921 * t8047 - t6924 * t7011) * t6984;
t7010 = t6923 * t7016;
t7478 = t6924 * t8037;
t7484 = t6922 * t8037;
t7591 = t6924 * t6991;
t7615 = t6922 * t6991;
t7321 = -(t6921 * t7591 + t7484) * t6920 + (t6921 * t7478 - t7615) * t7487;
t7116 = t6410 * t6905;
t6218 = t6590 * t6893 + t6911 * t7116;
t7117 = t6410 * t6893;
t6269 = t6590 * t7687 - t7117;
t7169 = -t6893 * t6962 + t6905 * t7355;
t7656 = t6911 * t6932;
t7362 = t6871 * t7656;
t6343 = -t6834 * t7169 - t6905 * t7362;
t7171 = t6893 * t7528 + t6905 * t7654;
t7722 = t6893 * t6932;
t6354 = -t6834 * t7171 - t6871 * t7722;
t7686 = t6905 * t6917;
t7705 = t6899 * t6932;
t7721 = t6893 * t6934;
t7723 = t6893 * t6929;
t7747 = t6887 * t6932;
t8045 = t6871 * ((t6905 * t7657 + t7721) * t7705 + (t6905 * t7655 - t7723) * t7747 - t6905 * t7639) + t6927 * ((t6343 * t6934 - t6354 * t6929) * t6887 + (t6343 * t6929 + t6354 * t6934) * t6899 - t8076 * t7686) + t6936 * ((t6218 * t6934 + t6269 * t6929) * t6887 - (-t6218 * t6929 + t6269 * t6934) * t6899 + t7492 * t7686);
t5783 = -t8045 * t7785 + t7016 * t7321 + (-t6921 * t8045 - t6924 * t7010) * t6985;
t7009 = t6923 * t7015;
t7479 = t6924 * t8038;
t7485 = t6922 * t8038;
t7590 = t6924 * t6992;
t7614 = t6922 * t6992;
t7320 = -(t6921 * t7590 + t7485) * t6920 + (t6921 * t7479 - t7614) * t7487;
t7114 = t6412 * t6906;
t6219 = t6591 * t6894 + t6912 * t7114;
t7115 = t6412 * t6894;
t6270 = t6591 * t7682 - t7115;
t7165 = -t6894 * t6963 + t6906 * t7354;
t7652 = t6912 * t6932;
t7361 = t6872 * t7652;
t6345 = -t6834 * t7165 - t6906 * t7361;
t7167 = t6894 * t7527 + t6906 * t7650;
t7716 = t6894 * t6932;
t6356 = -t6834 * t7167 - t6872 * t7716;
t7681 = t6906 * t6918;
t7704 = t6900 * t6932;
t7715 = t6894 * t6934;
t7717 = t6894 * t6929;
t7746 = t6888 * t6932;
t8043 = t6872 * ((t6906 * t7653 + t7715) * t7704 + (t6906 * t7651 - t7717) * t7746 - t6906 * t7637) + t6927 * ((t6345 * t6934 - t6356 * t6929) * t6888 + (t6345 * t6929 + t6356 * t6934) * t6900 - t8077 * t7681) + t6936 * ((t6219 * t6934 + t6270 * t6929) * t6888 - (-t6219 * t6929 + t6270 * t6934) * t6900 + t7491 * t7681);
t5785 = -t8043 * t7784 + t7015 * t7320 + (-t6921 * t8043 - t6924 * t7009) * t6986;
t7008 = t6923 * t7014;
t7480 = t6924 * t8039;
t7486 = t6922 * t8039;
t7589 = t6924 * t6993;
t7613 = t6922 * t6993;
t7319 = -(t6921 * t7589 + t7486) * t6920 + (t6921 * t7480 - t7613) * t7487;
t7112 = t6414 * t6907;
t6220 = t6592 * t6895 + t6913 * t7112;
t7113 = t6414 * t6895;
t6271 = t6592 * t7677 - t7113;
t7161 = -t6895 * t6964 + t6907 * t7353;
t7648 = t6913 * t6932;
t7360 = t6873 * t7648;
t6347 = -t6834 * t7161 - t6907 * t7360;
t7163 = t6895 * t7526 + t6907 * t7646;
t7710 = t6895 * t6932;
t6358 = -t6834 * t7163 - t6873 * t7710;
t7676 = t6907 * t6919;
t7703 = t6901 * t6932;
t7709 = t6895 * t6934;
t7711 = t6895 * t6929;
t7745 = t6889 * t6932;
t8041 = t6873 * ((t6907 * t7649 + t7709) * t7703 + (t6907 * t7647 - t7711) * t7745 - t6907 * t7635) + t6927 * ((t6347 * t6934 - t6358 * t6929) * t6889 + (t6347 * t6929 + t6358 * t6934) * t6901 - t8078 * t7676) + t6936 * ((t6220 * t6934 + t6271 * t6929) * t6889 - (-t6220 * t6929 + t6271 * t6934) * t6901 + t7490 * t7676);
t5787 = -t8041 * t7783 + t7014 * t7319 + (-t6921 * t8041 - t6924 * t7008) * t6987;
t8117 = t5777 * t8113 + t5778 * t8112 + t5779 * t8111 + t5783 * t8110 + t5785 * t8109 + t5787 * t8108;
t7501 = (t6921 * t7481 + t7594) * t7487 + t6920 * (-t6921 * t7618 + t7475);
t6209 = t6584 * t6902 - t6908 * t7123;
t6257 = t6584 * t7743 + t7122;
t7180 = t6890 * t7358 + t6902 * t6950;
t6336 = -t6834 * t7180 - t6890 * t7365;
t7182 = t6890 * t7668 - t6902 * t7531;
t7699 = t6902 * t6932;
t6349 = t6834 * t7182 - t6867 * t7699;
t7698 = t6902 * t6934;
t7700 = t6902 * t6929;
t7742 = t6890 * t6914;
t8050 = t6867 * ((-t6890 * t7671 + t7698) * t7708 - (t6890 * t7669 + t7700) * t7750 + t6890 * t7645) - t6927 * ((t6336 * t6934 + t6349 * t6929) * t6884 - (-t6336 * t6929 + t6349 * t6934) * t6896 - t8073 * t7742) - t6936 * (-(t6209 * t6934 - t6257 * t6929) * t6884 - (t6209 * t6929 + t6257 * t6934) * t6896 + t7495 * t7742);
t5780 = t8050 * t7788 + t7019 * t7501 + (t6921 * t8050 - t6922 * t7013) * t6982;
t7500 = (t6921 * t7482 + t7593) * t7487 + t6920 * (-t6921 * t7617 + t7476);
t6210 = t6585 * t6903 - t6909 * t7121;
t6258 = t6585 * t7737 + t7120;
t7176 = t6891 * t7357 + t6903 * t6951;
t6338 = -t6834 * t7176 - t6891 * t7364;
t7178 = t6891 * t7663 - t6903 * t7530;
t7694 = t6903 * t6932;
t6351 = t6834 * t7178 - t6868 * t7694;
t7693 = t6903 * t6934;
t7695 = t6903 * t6929;
t7736 = t6891 * t6915;
t8048 = t6868 * ((-t6891 * t7666 + t7693) * t7707 - (t6891 * t7664 + t7695) * t7749 + t6891 * t7643) - t6927 * ((t6338 * t6934 + t6351 * t6929) * t6885 - (-t6338 * t6929 + t6351 * t6934) * t6897 - t8074 * t7736) - t6936 * (-(t6210 * t6934 - t6258 * t6929) * t6885 - (t6210 * t6929 + t6258 * t6934) * t6897 + t7494 * t7736);
t5781 = t8048 * t7787 + t7018 * t7500 + (t6921 * t8048 - t6922 * t7012) * t6983;
t7499 = (t6921 * t7483 + t7592) * t7487 + t6920 * (-t6921 * t7616 + t7477);
t6211 = t6586 * t6904 - t6910 * t7119;
t6259 = t6586 * t7731 + t7118;
t7172 = t6892 * t7356 + t6904 * t6952;
t6340 = -t6834 * t7172 - t6892 * t7363;
t7174 = t6892 * t7658 - t6904 * t7529;
t7689 = t6904 * t6932;
t6353 = t6834 * t7174 - t6869 * t7689;
t7688 = t6904 * t6934;
t7690 = t6904 * t6929;
t7730 = t6892 * t6916;
t8046 = t6869 * ((-t6892 * t7661 + t7688) * t7706 - (t6892 * t7659 + t7690) * t7748 + t6892 * t7641) - t6927 * ((t6340 * t6934 + t6353 * t6929) * t6886 - (-t6340 * t6929 + t6353 * t6934) * t6898 - t8075 * t7730) - t6936 * (-(t6211 * t6934 - t6259 * t6929) * t6886 - (t6211 * t6929 + t6259 * t6934) * t6898 + t7493 * t7730);
t5782 = t8046 * t7786 + t7017 * t7499 + (t6921 * t8046 - t6922 * t7011) * t6984;
t7498 = (t6921 * t7484 + t7591) * t7487 + t6920 * (-t6921 * t7615 + t7478);
t6215 = t6590 * t6905 - t6911 * t7117;
t6272 = t6590 * t7725 + t7116;
t7168 = t6893 * t7355 + t6905 * t6962;
t6342 = -t6834 * t7168 - t6893 * t7362;
t7170 = t6893 * t7654 - t6905 * t7528;
t7684 = t6905 * t6932;
t6355 = t6834 * t7170 - t6871 * t7684;
t7683 = t6905 * t6934;
t7685 = t6905 * t6929;
t7724 = t6893 * t6917;
t8044 = t6871 * ((-t6893 * t7657 + t7683) * t7705 - (t6893 * t7655 + t7685) * t7747 + t6893 * t7639) - t6927 * ((t6342 * t6934 + t6355 * t6929) * t6887 - (-t6342 * t6929 + t6355 * t6934) * t6899 - t8076 * t7724) - t6936 * (-(t6215 * t6934 - t6272 * t6929) * t6887 - (t6215 * t6929 + t6272 * t6934) * t6899 + t7492 * t7724);
t5784 = t8044 * t7785 + t7016 * t7498 + (t6921 * t8044 - t6922 * t7010) * t6985;
t7497 = (t6921 * t7485 + t7590) * t7487 + t6920 * (-t6921 * t7614 + t7479);
t6216 = t6591 * t6906 - t6912 * t7115;
t6273 = t6591 * t7719 + t7114;
t7164 = t6894 * t7354 + t6906 * t6963;
t6344 = -t6834 * t7164 - t6894 * t7361;
t7166 = t6894 * t7650 - t6906 * t7527;
t7679 = t6906 * t6932;
t6357 = t6834 * t7166 - t6872 * t7679;
t7678 = t6906 * t6934;
t7680 = t6906 * t6929;
t7718 = t6894 * t6918;
t8042 = t6872 * ((-t6894 * t7653 + t7678) * t7704 - (t6894 * t7651 + t7680) * t7746 + t6894 * t7637) - t6927 * ((t6344 * t6934 + t6357 * t6929) * t6888 - (-t6344 * t6929 + t6357 * t6934) * t6900 - t8077 * t7718) - t6936 * (-(t6216 * t6934 - t6273 * t6929) * t6888 - (t6216 * t6929 + t6273 * t6934) * t6900 + t7491 * t7718);
t5786 = t8042 * t7784 + t7015 * t7497 + (t6921 * t8042 - t6922 * t7009) * t6986;
t7496 = (t6921 * t7486 + t7589) * t7487 + t6920 * (-t6921 * t7613 + t7480);
t6217 = t6592 * t6907 - t6913 * t7113;
t6274 = t6592 * t7713 + t7112;
t7160 = t6895 * t7353 + t6907 * t6964;
t6346 = -t6834 * t7160 - t6895 * t7360;
t7162 = t6895 * t7646 - t6907 * t7526;
t7674 = t6907 * t6932;
t6359 = t6834 * t7162 - t6873 * t7674;
t7673 = t6907 * t6934;
t7675 = t6907 * t6929;
t7712 = t6895 * t6919;
t8040 = t6873 * ((-t6895 * t7649 + t7673) * t7703 - (t6895 * t7647 + t7675) * t7745 + t6895 * t7635) - t6927 * ((t6346 * t6934 + t6359 * t6929) * t6889 - (-t6346 * t6929 + t6359 * t6934) * t6901 - t8078 * t7712) - t6936 * (-(t6217 * t6934 - t6274 * t6929) * t6889 - (t6217 * t6929 + t6274 * t6934) * t6901 + t7490 * t7712);
t5788 = t8040 * t7783 + t7014 * t7496 + (t6921 * t8040 - t6922 * t7008) * t6987;
t8116 = t5780 * t8113 + t5781 * t8112 + t5782 * t8111 + t5784 * t8110 + t5786 * t8109 + t5788 * t8108;
t6673 = t6929 * t7373;
t7586 = t6929 * t6937;
t6287 = -t6581 * t7586 + t6560 - t6673;
t5981 = -t7495 * t6914 + (t6287 * t6896 - t8098) * t6908;
t6011 = t6287 * t6884 + t6896 * t7336;
t6783 = t6934 * t7531 - t7585;
t6374 = -t6783 * t6834 - t6867 * t7565;
t6041 = -t8073 * t6914 + (t6374 * t6884 + t8176) * t6908;
t6155 = t6374 * t6896 - t6884 * t8124;
t6543 = -t6756 * t7670 + t7645;
t5831 = (t6041 * t6902 + t6155 * t6890) * t6927 + (-t5981 * t6902 + t6011 * t6890) * t6936 - t6867 * (t6543 * t6902 - t6762 * t7740);
t6288 = -t6582 * t7586 + t6561 - t6673;
t5982 = -t7494 * t6915 + (t6288 * t6897 - t8097) * t6909;
t6012 = t6288 * t6885 + t6897 * t7335;
t6784 = t6934 * t7530 - t7584;
t6376 = -t6784 * t6834 - t6868 * t7565;
t6042 = -t8074 * t6915 + (t6376 * t6885 + t8175) * t6909;
t6156 = t6376 * t6897 - t6885 * t8123;
t6544 = -t6757 * t7665 + t7643;
t5833 = (t6042 * t6903 + t6156 * t6891) * t6927 + (-t5982 * t6903 + t6012 * t6891) * t6936 - t6868 * (t6544 * t6903 - t6763 * t7734);
t6289 = -t6583 * t7586 + t6562 - t6673;
t5983 = -t7493 * t6916 + (t6289 * t6898 - t8096) * t6910;
t6013 = t6289 * t6886 + t6898 * t7334;
t6785 = t6934 * t7529 - t7583;
t6378 = -t6785 * t6834 - t6869 * t7565;
t6043 = -t8075 * t6916 + (t6378 * t6886 + t8174) * t6910;
t6157 = t6378 * t6898 - t6886 * t8122;
t6545 = -t6758 * t7660 + t7641;
t5835 = (t6043 * t6904 + t6157 * t6892) * t6927 + (-t5983 * t6904 + t6013 * t6892) * t6936 - t6869 * (t6545 * t6904 - t6764 * t7728);
t6305 = -t6587 * t7586 + t6569 - t6673;
t5984 = -t7492 * t6917 + (t6305 * t6899 - t8095) * t6911;
t6020 = t6305 * t6887 + t6899 * t7333;
t6803 = t6934 * t7528 - t7582;
t6392 = -t6803 * t6834 - t6871 * t7565;
t6044 = -t8076 * t6917 + (t6392 * t6887 + t8173) * t6911;
t6158 = t6392 * t6899 - t6887 * t8121;
t6546 = -t6759 * t7656 + t7639;
t5837 = (t6044 * t6905 + t6158 * t6893) * t6927 + (-t5984 * t6905 + t6020 * t6893) * t6936 - t6871 * (t6546 * t6905 - t6765 * t7722);
t6306 = -t6588 * t7586 + t6570 - t6673;
t5985 = -t7491 * t6918 + (t6306 * t6900 - t8094) * t6912;
t6021 = t6306 * t6888 + t6900 * t7332;
t6804 = t6934 * t7527 - t7581;
t6394 = -t6804 * t6834 - t6872 * t7565;
t6045 = -t8077 * t6918 + (t6394 * t6888 + t8172) * t6912;
t6159 = t6394 * t6900 - t6888 * t8120;
t6547 = -t6760 * t7652 + t7637;
t5839 = (t6045 * t6906 + t6159 * t6894) * t6927 + (-t5985 * t6906 + t6021 * t6894) * t6936 - t6872 * (t6547 * t6906 - t6766 * t7716);
t6307 = -t6589 * t7586 + t6571 - t6673;
t5986 = -t7490 * t6919 + (t6307 * t6901 - t8093) * t6913;
t6022 = t6307 * t6889 + t6901 * t7331;
t6805 = t6934 * t7526 - t7580;
t6396 = -t6805 * t6834 - t6873 * t7565;
t6046 = -t8078 * t6919 + (t6396 * t6889 + t8171) * t6913;
t6160 = t6396 * t6901 - t6889 * t8119;
t6548 = -t6761 * t7648 + t7635;
t5841 = (t6046 * t6907 + t6160 * t6895) * t6927 + (-t5986 * t6907 + t6022 * t6895) * t6936 - t6873 * (t6548 * t6907 - t6767 * t7710);
t8115 = t5831 * t8113 + t5833 * t8112 + t5835 * t8111 + t5837 * t8110 + t5839 * t8109 + t5841 * t8108;
t5832 = (-t6041 * t6890 + t6155 * t6902) * t6927 + (t5981 * t6890 + t6011 * t6902) * t6936 + t6867 * (t6543 * t6890 + t6762 * t7699);
t5834 = (-t6042 * t6891 + t6156 * t6903) * t6927 + (t5982 * t6891 + t6012 * t6903) * t6936 + t6868 * (t6544 * t6891 + t6763 * t7694);
t5836 = (-t6043 * t6892 + t6157 * t6904) * t6927 + (t5983 * t6892 + t6013 * t6904) * t6936 + t6869 * (t6545 * t6892 + t6764 * t7689);
t5838 = (-t6044 * t6893 + t6158 * t6905) * t6927 + (t5984 * t6893 + t6020 * t6905) * t6936 + t6871 * (t6546 * t6893 + t6765 * t7684);
t5840 = (-t6045 * t6894 + t6159 * t6906) * t6927 + (t5985 * t6894 + t6021 * t6906) * t6936 + t6872 * (t6547 * t6894 + t6766 * t7679);
t5842 = (-t6046 * t6895 + t6160 * t6907) * t6927 + (t5986 * t6895 + t6022 * t6907) * t6936 + t6873 * (t6548 * t6895 + t6767 * t7674);
t8114 = t5832 * t8113 + t5834 * t8112 + t5836 * t8111 + t5838 * t8110 + t5840 * t8109 + t5842 * t8108;
t7549 = t6936 * t6950;
t7859 = (t6762 * (t6834 * t7549 + t6584) * t6937 - t8142 * t6756) / ((-qJ(3,6) + t6850 + t7270) * t6937 + t8162);
t8092 = t6914 * (0.2e1 * t6324 * t7300 * t8131 - t7859 * t7973);
t7548 = t6936 * t6951;
t7858 = (t6763 * (t6834 * t7548 + t6585) * t6937 - t8141 * t6757) / ((-qJ(3,5) + t6851 + t7270) * t6937 + t8163);
t8091 = t6915 * (0.2e1 * t6325 * t7299 * t8132 - t7858 * t7972);
t7547 = t6936 * t6952;
t7857 = (t6764 * (t6834 * t7547 + t6586) * t6937 - t8140 * t6758) / ((-qJ(3,4) + t6852 + t7270) * t6937 + t8164);
t8090 = t6916 * (0.2e1 * t6326 * t7298 * t8133 - t7857 * t7971);
t7543 = t6936 * t6962;
t7856 = (t6765 * (t6834 * t7543 + t6590) * t6937 - t8139 * t6759) * t6284;
t8089 = t6917 * (0.2e1 * t6327 * t7297 * t8134 - t7856 * t7967);
t7542 = t6936 * t6963;
t7855 = (t6766 * (t6834 * t7542 + t6591) * t6937 - t8138 * t6760) * t6285;
t8088 = t6918 * (0.2e1 * t6328 * t7296 * t8135 - t7855 * t7966);
t7541 = t6936 * t6964;
t7854 = (t6767 * (t6834 * t7541 + t6592) * t6937 - t8137 * t6761) * t6286;
t8087 = t6919 * (0.2e1 * t6329 * t7295 * t8136 - t7854 * t7965);
t7315 = t6924 * t7487;
t7622 = t6922 * t6920;
t6696 = -t6921 * t7315 + t7622;
t7525 = t6969 * t6970;
t7313 = t7487 * t6969;
t6729 = t6920 * t7610 - t7313;
t7805 = t6729 * t6840;
t8086 = t6923 * (t6696 * t7525 + t6924 * t7805);
t6549 = t6729 ^ 2;
t7316 = t6923 * t7487;
t7632 = t6920 * t6969;
t6731 = t6970 * t7316 + t7632;
t6550 = t6731 ^ 2;
t6692 = t6840 ^ 2;
t8027 = 0.2e1 * t5729;
t8026 = 0.2e1 * t5730;
t8025 = 0.2e1 * t5731;
t8024 = 0.2e1 * t5732;
t8023 = 0.2e1 * t5733;
t8022 = 0.2e1 * t5734;
t8021 = -0.2e1 * t6931;
t8019 = pkin(2) * t6931;
t8015 = qJ(3,1) * t6286;
t8014 = qJ(3,2) * t6285;
t8013 = qJ(3,3) * t6284;
t8012 = qJ(3,4) * t6283;
t8011 = qJ(3,5) * t6282;
t8010 = qJ(3,6) * t6281;
t7197 = t8131 * t8079 * t7267;
t6864 = t6937 * t6881;
t6976 = qJ(3,6) ^ 2;
t6994 = pkin(8) ^ 2;
t6839 = (t6935 ^ 2 * t6994 + pkin(3) ^ 2 - t6994) * t6933 ^ 2;
t6995 = pkin(2) ^ 2;
t7345 = 0.2e1 * t6863;
t7087 = pkin(2) * t7345 + 0.2e1 * t6860 * t8017 + t6839 + t6994 + t6995;
t7337 = 0.2e1 * t6721;
t7488 = 0.2e1 * t6881;
t7489 = t7345 * t8017 + t6839;
t7312 = (-t8143 * t7949 + (-((pkin(3) + t6867) * (-pkin(3) + t6867) + t7489) * t6927 + t6867 * t7337 + qJ(3,6) * t7488 + t6976 + t7087) * t7970) / ((qJ(3,6) * t6937 - t6953 * t7758 + t6864) * t6927 + t8192 - t6847) * t7970;
t5927 = ((t6762 * t6834 * t6950 + t6756 * t7205) * t6914 - t8170) * t6927 + ((-t6401 * t6756 + t6584 * t6762) * t6914 + t7847) * t6936 - t6867 * (t6756 * t6914 * t6932 + t7537);
t7895 = t5927 * t8131;
t7930 = t5832 * t8131;
t7931 = t5831 * t8131;
t7294 = t5855 * t7895 + t5909 * t7930 + t5910 * t7931 + t6936 * t7312;
t5717 = -t6936 * t7197 + t7294;
t8009 = t5717 * t6950;
t8008 = t5717 * t6953;
t7196 = t8132 * t8079 * t7266;
t6977 = qJ(3,5) ^ 2;
t7311 = (-t8143 * t7948 + (-((pkin(3) + t6868) * (-pkin(3) + t6868) + t7489) * t6927 + t6868 * t7337 + qJ(3,5) * t7488 + t6977 + t7087) * t7969) / ((qJ(3,5) * t6937 - t6954 * t7758 + t6864) * t6927 + t8193 - t6848) * t7969;
t5928 = ((t6763 * t6834 * t6951 + t6757 * t7204) * t6915 - t8169) * t6927 + ((-t6403 * t6757 + t6585 * t6763) * t6915 + t7846) * t6936 - t6868 * (t6757 * t6915 * t6932 + t7536);
t7894 = t5928 * t8132;
t7928 = t5834 * t8132;
t7929 = t5833 * t8132;
t7293 = t5856 * t7894 + t5911 * t7928 + t5912 * t7929 + t6936 * t7311;
t5718 = -t6936 * t7196 + t7293;
t8007 = t5718 * t6951;
t8006 = t5718 * t6954;
t7195 = t8133 * t8079 * t7265;
t6978 = qJ(3,4) ^ 2;
t7310 = (-t8143 * t7947 + (-((pkin(3) + t6869) * (-pkin(3) + t6869) + t7489) * t6927 + t6869 * t7337 + qJ(3,4) * t7488 + t6978 + t7087) * t7968) / ((qJ(3,4) * t6937 - t6955 * t7758 + t6864) * t6927 + t8194 - t6849) * t7968;
t5929 = ((t6764 * t6834 * t6952 + t6758 * t7203) * t6916 - t8168) * t6927 + ((-t6405 * t6758 + t6586 * t6764) * t6916 + t7845) * t6936 - t6869 * (t6758 * t6916 * t6932 + t7535);
t7893 = t5929 * t8133;
t7926 = t5836 * t8133;
t7927 = t5835 * t8133;
t7292 = t5857 * t7893 + t5913 * t7926 + t5914 * t7927 + t6936 * t7310;
t5719 = -t6936 * t7195 + t7292;
t8005 = t5719 * t6952;
t8004 = t5719 * t6955;
t7194 = t8134 * t8079 * t7264;
t6979 = qJ(3,3) ^ 2;
t7309 = (-t8143 * t7946 + (-((pkin(3) + t6871) * (-pkin(3) + t6871) + t7489) * t6927 + t6871 * t7337 + qJ(3,3) * t7488 + t6979 + t7087) * t7964) / ((qJ(3,3) * t6937 - t6965 * t7758 + t6864) * t6927 + t8195 - t6853) * t7964;
t5930 = ((t6765 * t6834 * t6962 + t6759 * t7202) * t6917 - t8167) * t6927 + ((-t6410 * t6759 + t6590 * t6765) * t6917 + t7844) * t6936 - t6871 * (t6759 * t6917 * t6932 + t7534);
t7892 = t5930 * t8134;
t7924 = t5838 * t8134;
t7925 = t5837 * t8134;
t7291 = t5858 * t7892 + t5915 * t7924 + t5916 * t7925 + t6936 * t7309;
t5720 = -t6936 * t7194 + t7291;
t8003 = t5720 * t6962;
t8002 = t5720 * t6965;
t7193 = t8135 * t8079 * t7263;
t6980 = qJ(3,2) ^ 2;
t7308 = (-t8143 * t7945 + (-((pkin(3) + t6872) * (-pkin(3) + t6872) + t7489) * t6927 + t6872 * t7337 + qJ(3,2) * t7488 + t6980 + t7087) * t7963) / ((qJ(3,2) * t6937 - t6966 * t7758 + t6864) * t6927 + t8196 - t6854) * t7963;
t5931 = ((t6766 * t6834 * t6963 + t6760 * t7201) * t6918 - t8166) * t6927 + ((-t6412 * t6760 + t6591 * t6766) * t6918 + t7843) * t6936 - t6872 * (t6760 * t6918 * t6932 + t7533);
t7891 = t5931 * t8135;
t7922 = t5840 * t8135;
t7923 = t5839 * t8135;
t7290 = t5859 * t7891 + t5917 * t7922 + t5918 * t7923 + t6936 * t7308;
t5721 = -t6936 * t7193 + t7290;
t8001 = t5721 * t6963;
t8000 = t5721 * t6966;
t7192 = t8136 * t8079 * t7262;
t6981 = qJ(3,1) ^ 2;
t7307 = (-t8143 * t7944 + (-((pkin(3) + t6873) * (-pkin(3) + t6873) + t7489) * t6927 + t6873 * t7337 + qJ(3,1) * t7488 + t6981 + t7087) * t7962) / ((qJ(3,1) * t6937 - t6967 * t7758 + t6864) * t6927 + t8197 - t6855) * t7962;
t5932 = ((t6767 * t6834 * t6964 + t6761 * t7200) * t6919 - t8165) * t6927 + ((-t6414 * t6761 + t6592 * t6767) * t6919 + t7842) * t6936 - t6873 * (t6761 * t6919 * t6932 + t7532);
t7890 = t5932 * t8136;
t7920 = t5842 * t8136;
t7921 = t5841 * t8136;
t7289 = t5860 * t7890 + t5919 * t7920 + t5920 * t7921 + t6936 * t7307;
t5722 = -t6936 * t7192 + t7289;
t7999 = t5722 * t6964;
t7998 = t5722 * t6967;
t7395 = t6914 * t7859;
t6015 = -t6496 * t7835 + t6502 * t8142;
t7882 = t6015 * t6281;
t6014 = -t6484 * t8142 + t6485 * t7835;
t7883 = t6014 * t6281;
t5723 = -t5855 * t7395 + t5909 * t7882 + t5910 * t7883 + (t7197 - t7312) * t6937;
t7997 = t5723 * t6931;
t7394 = t6915 * t7858;
t6017 = -t6497 * t7834 + t6503 * t8141;
t7880 = t6017 * t6282;
t6016 = -t6486 * t8141 + t6487 * t7834;
t7881 = t6016 * t6282;
t5724 = -t5856 * t7394 + t5911 * t7880 + t5912 * t7881 + (t7196 - t7311) * t6937;
t7996 = t5724 * t6931;
t7393 = t6916 * t7857;
t6019 = -t6498 * t7833 + t6504 * t8140;
t7878 = t6019 * t6283;
t6018 = -t6488 * t8140 + t6489 * t7833;
t7879 = t6018 * t6283;
t5725 = -t5857 * t7393 + t5913 * t7878 + t5914 * t7879 + (t7195 - t7310) * t6937;
t7995 = t5725 * t6931;
t7392 = t6917 * t7856;
t6024 = -t6499 * t7826 + t6505 * t8139;
t7876 = t6024 * t6284;
t6023 = -t6490 * t8139 + t6491 * t7826;
t7877 = t6023 * t6284;
t5726 = -t5858 * t7392 + t5915 * t7876 + t5916 * t7877 + (t7194 - t7309) * t6937;
t7994 = t5726 * t6931;
t7391 = t6918 * t7855;
t6026 = -t6500 * t7825 + t6506 * t8138;
t7874 = t6026 * t6285;
t6025 = -t6492 * t8138 + t6493 * t7825;
t7875 = t6025 * t6285;
t5727 = -t5859 * t7391 + t5917 * t7874 + t5918 * t7875 + (t7193 - t7308) * t6937;
t7993 = t5727 * t6931;
t7390 = t6919 * t7854;
t6028 = -t6501 * t7824 + t6507 * t8137;
t7872 = t6028 * t6286;
t6027 = -t6494 * t8137 + t6495 * t7824;
t7873 = t6027 * t6286;
t5728 = -t5860 * t7390 + t5919 * t7872 + t5920 * t7873 + (t7192 - t7307) * t6937;
t7992 = t5728 * t6931;
t7990 = t5729 * t6953;
t7988 = t5730 * t6954;
t7986 = t5731 * t6955;
t7984 = t5732 * t6965;
t7982 = t5733 * t6966;
t7980 = t5734 * t6967;
t7979 = t5759 * t8131;
t7978 = t5760 * t8132;
t7977 = t5761 * t8133;
t7976 = t5762 * t8134;
t7975 = t5763 * t8135;
t7974 = t5764 * t8136;
t7961 = t5777 * t8131;
t7960 = t5778 * t8132;
t7959 = t5779 * t8133;
t7958 = t5780 * t8131;
t7957 = t5781 * t8132;
t7956 = t5782 * t8133;
t7955 = t5783 * t8134;
t7954 = t5784 * t8134;
t7953 = t5785 * t8135;
t7952 = t5786 * t8135;
t7951 = t5787 * t8136;
t7950 = t5788 * t8136;
t6174 = t6436 * t6934 + t7666 * t8190;
t6180 = t6436 * t7666 - t6934 * t8190;
t6186 = -t6436 * t6929 + t7664 * t8190;
t6194 = t6436 * t7664 + t6929 * t8190;
t5922 = (t6174 * t6885 - t6186 * t6897) * t6903 + t6891 * (-t6180 * t6885 + t6194 * t6897);
t6769 = t6929 * t7530 + t7555;
t7797 = t6784 * t6909;
t7800 = t6769 * t6909;
t5819 = (((-t6436 * t6769 + t7797 * t8190) * t6897 - (t6436 * t6784 + t7800 * t8190) * t6885) * t6903 - ((t6436 * t7797 + t6769 * t8190) * t6897 + t6885 * (-t6436 * t7800 + t6784 * t8190)) * t6891) * t6931 - t5922 * t7564;
t7943 = t5819 * t8032;
t6175 = t6437 * t6934 + t7661 * t8189;
t6181 = t6437 * t7661 - t6934 * t8189;
t6187 = -t6437 * t6929 + t7659 * t8189;
t6190 = t6437 * t7659 + t6929 * t8189;
t5923 = (t6175 * t6886 - t6187 * t6898) * t6904 + t6892 * (-t6181 * t6886 + t6190 * t6898);
t6770 = t6929 * t7529 + t7554;
t7796 = t6785 * t6910;
t7799 = t6770 * t6910;
t5820 = (((-t6437 * t6770 + t7796 * t8189) * t6898 - t6886 * (t6437 * t6785 + t7799 * t8189)) * t6904 - t6892 * ((t6437 * t7796 + t6770 * t8189) * t6898 + (-t6437 * t7799 + t6785 * t8189) * t6886)) * t6931 - t5923 * t7564;
t7942 = t5820 * t8031;
t6173 = t6435 * t6934 + t7671 * t8191;
t6179 = t6435 * t7671 - t6934 * t8191;
t6185 = -t6435 * t6929 + t7669 * t8191;
t6193 = t6435 * t7669 + t6929 * t8191;
t5921 = (t6173 * t6884 - t6185 * t6896) * t6902 + t6890 * (-t6179 * t6884 + t6193 * t6896);
t6768 = t6929 * t7531 + t7556;
t7798 = t6783 * t6908;
t7801 = t6768 * t6908;
t5821 = (((-t6435 * t6768 + t7798 * t8191) * t6896 - t6884 * (t6435 * t6783 + t7801 * t8191)) * t6902 - t6890 * ((t6435 * t7798 + t6768 * t8191) * t6896 + t6884 * (-t6435 * t7801 + t6783 * t8191))) * t6931 - t5921 * t7564;
t7941 = t5821 * t8033;
t6177 = t6439 * t6934 + t7653 * t8187;
t6183 = t6439 * t7653 - t6934 * t8187;
t6188 = -t6439 * t6929 + t7651 * t8187;
t6191 = t6439 * t7651 + t6929 * t8187;
t5924 = (t6177 * t6888 - t6188 * t6900) * t6906 + t6894 * (-t6183 * t6888 + t6191 * t6900);
t6790 = t6929 * t7527 + t7552;
t7791 = t6804 * t6912;
t7794 = t6790 * t6912;
t5822 = (((-t6439 * t6790 + t7791 * t8187) * t6900 - t6888 * (t6439 * t6804 + t7794 * t8187)) * t6906 - t6894 * ((t6439 * t7791 + t6790 * t8187) * t6900 + (-t6439 * t7794 + t6804 * t8187) * t6888)) * t6931 - t5924 * t7564;
t7940 = t5822 * t8029;
t6178 = t6440 * t6934 + t7649 * t8186;
t6184 = t6440 * t7649 - t6934 * t8186;
t6189 = -t6440 * t6929 + t7647 * t8186;
t6196 = t6440 * t7647 + t6929 * t8186;
t5925 = (t6178 * t6889 - t6189 * t6901) * t6907 + t6895 * (-t6184 * t6889 + t6196 * t6901);
t6791 = t6929 * t7526 + t7551;
t7790 = t6805 * t6913;
t7793 = t6791 * t6913;
t5823 = (((-t6440 * t6791 + t7790 * t8186) * t6901 - t6889 * (t6440 * t6805 + t7793 * t8186)) * t6907 - t6895 * ((t6440 * t7790 + t6791 * t8186) * t6901 + t6889 * (-t6440 * t7793 + t6805 * t8186))) * t6931 - t5925 * t7564;
t7939 = t5823 * t8028;
t6176 = t6438 * t6934 + t7657 * t8188;
t6182 = t6438 * t7657 - t6934 * t8188;
t6192 = -t6438 * t6929 + t7655 * t8188;
t6195 = t6438 * t7655 + t6929 * t8188;
t5926 = (t6176 * t6887 - t6192 * t6899) * t6905 + t6893 * (-t6182 * t6887 + t6195 * t6899);
t6789 = t6929 * t7528 + t7553;
t7792 = t6803 * t6911;
t7795 = t6789 * t6911;
t5824 = (((-t6438 * t6789 + t7792 * t8188) * t6899 - (t6438 * t6803 + t7795 * t8188) * t6887) * t6905 - t6893 * ((t6438 * t7792 + t6789 * t8188) * t6899 + (-t6438 * t7795 + t6803 * t8188) * t6887)) * t6931 - t5926 * t7564;
t7938 = t5824 * t8030;
t5825 = -t5921 * t7835 + t8142 * ((-t6173 * t6896 - t6185 * t6884) * t6902 + t6890 * (t6179 * t6896 + t6193 * t6884));
t7937 = t5825 * t6281;
t5826 = -t5922 * t7834 + ((-t6174 * t6897 - t6186 * t6885) * t6903 + t6891 * (t6180 * t6897 + t6194 * t6885)) * t8141;
t7936 = t5826 * t6282;
t5827 = -t5923 * t7833 + ((-t6175 * t6898 - t6187 * t6886) * t6904 + t6892 * (t6181 * t6898 + t6190 * t6886)) * t8140;
t7935 = t5827 * t6283;
t5828 = -t5926 * t7826 + ((-t6176 * t6899 - t6192 * t6887) * t6905 + t6893 * (t6182 * t6899 + t6195 * t6887)) * t8139;
t7934 = t5828 * t6284;
t5829 = -t5924 * t7825 + ((-t6177 * t6900 - t6188 * t6888) * t6906 + (t6183 * t6900 + t6191 * t6888) * t6894) * t8138;
t7933 = t5829 * t6285;
t5830 = -t5925 * t7824 + ((-t6178 * t6901 - t6189 * t6889) * t6907 + (t6184 * t6901 + t6196 * t6889) * t6895) * t8137;
t7932 = t5830 * t6286;
t6379 = -t6922 * t7609 + t7501;
t6293 = t6379 * t6914 + t6635 * t7743;
t6092 = t6293 * t6929 - t6635 * t7698;
t6101 = t6293 * t6934 + t6635 * t7700;
t5951 = -t6092 * t6884 + t6101 * t6896;
t6161 = t6379 * t7352 + t6635 * t7180;
t6197 = t6379 * t7644 + t6635 * t7182;
t5861 = ((t6161 * t6934 - t6197 * t6929) * t6896 - (t6161 * t6929 + t6197 * t6934) * t6884) * t6931 + t5951 * t7564;
t7919 = t5861 * t8033;
t6381 = -t6922 * t7608 + t7500;
t6295 = t6381 * t6915 + t6636 * t7737;
t6093 = t6295 * t6929 - t6636 * t7693;
t6103 = t6295 * t6934 + t6636 * t7695;
t5953 = -t6093 * t6885 + t6103 * t6897;
t6162 = t6381 * t7351 + t6636 * t7176;
t6199 = t6381 * t7642 + t6636 * t7178;
t5862 = ((t6162 * t6934 - t6199 * t6929) * t6897 - (t6162 * t6929 + t6199 * t6934) * t6885) * t6931 + t5953 * t7564;
t7918 = t5862 * t8032;
t6380 = -t6924 * t7609 + t7324;
t6294 = t6380 * t6914 + t6635 * t7702;
t6089 = -t6294 * t6929 - t6635 * t7739;
t6102 = t6294 * t6934 - t6635 * t7741;
t5952 = t6089 * t6884 + t6102 * t6896;
t6163 = t6380 * t7352 + t6635 * t7181;
t6198 = -t6380 * t7644 - t6635 * t7183;
t5863 = ((t6163 * t6934 + t6198 * t6929) * t6896 + (-t6163 * t6929 + t6198 * t6934) * t6884) * t6931 + t5952 * t7564;
t7917 = t5863 * t8033;
t6382 = -t6924 * t7608 + t7323;
t6296 = t6382 * t6915 + t6636 * t7697;
t6090 = -t6296 * t6929 - t6636 * t7733;
t6104 = t6296 * t6934 - t6636 * t7735;
t5954 = t6090 * t6885 + t6104 * t6897;
t6164 = t6382 * t7351 + t6636 * t7177;
t6202 = -t6382 * t7642 - t6636 * t7179;
t5864 = ((t6164 * t6934 + t6202 * t6929) * t6897 + (-t6164 * t6929 + t6202 * t6934) * t6885) * t6931 + t5954 * t7564;
t7916 = t5864 * t8032;
t6383 = -t6922 * t7607 + t7499;
t6297 = t6383 * t6916 + t6637 * t7731;
t6094 = t6297 * t6929 - t6637 * t7688;
t6105 = t6297 * t6934 + t6637 * t7690;
t5955 = -t6094 * t6886 + t6105 * t6898;
t6165 = t6383 * t7350 + t6637 * t7172;
t6200 = t6383 * t7640 + t6637 * t7174;
t5865 = ((t6165 * t6934 - t6200 * t6929) * t6898 - (t6165 * t6929 + t6200 * t6934) * t6886) * t6931 + t5955 * t7564;
t7915 = t5865 * t8031;
t6384 = -t6924 * t7607 + t7322;
t6298 = t6384 * t6916 + t6637 * t7692;
t6091 = -t6298 * t6929 - t6637 * t7727;
t6106 = t6298 * t6934 - t6637 * t7729;
t5956 = t6091 * t6886 + t6106 * t6898;
t6166 = t6384 * t7350 + t6637 * t7173;
t6201 = -t6384 * t7640 - t6637 * t7175;
t5866 = ((t6166 * t6934 + t6201 * t6929) * t6898 + (-t6166 * t6929 + t6201 * t6934) * t6886) * t6931 + t5956 * t7564;
t7914 = t5866 * t8031;
t6385 = -t6922 * t7606 + t7498;
t6299 = t6385 * t6917 + t6638 * t7725;
t6096 = t6299 * t6929 - t6638 * t7683;
t6107 = t6299 * t6934 + t6638 * t7685;
t5957 = -t6096 * t6887 + t6107 * t6899;
t6167 = t6385 * t7349 + t6638 * t7168;
t6203 = t6385 * t7638 + t6638 * t7170;
t5867 = ((t6167 * t6934 - t6203 * t6929) * t6899 - (t6167 * t6929 + t6203 * t6934) * t6887) * t6931 + t5957 * t7564;
t7913 = t5867 * t8030;
t6386 = -t6924 * t7606 + t7321;
t6300 = t6386 * t6917 + t6638 * t7687;
t6095 = -t6300 * t6929 - t6638 * t7721;
t6108 = t6300 * t6934 - t6638 * t7723;
t5958 = t6095 * t6887 + t6108 * t6899;
t6168 = t6386 * t7349 + t6638 * t7169;
t6204 = -t6386 * t7638 - t6638 * t7171;
t5868 = ((t6168 * t6934 + t6204 * t6929) * t6899 + (-t6168 * t6929 + t6204 * t6934) * t6887) * t6931 + t5958 * t7564;
t7912 = t5868 * t8030;
t6387 = -t6922 * t7605 + t7497;
t6301 = t6387 * t6918 + t6639 * t7719;
t6098 = t6301 * t6929 - t6639 * t7678;
t6109 = t6301 * t6934 + t6639 * t7680;
t5959 = -t6098 * t6888 + t6109 * t6900;
t6169 = t6387 * t7348 + t6639 * t7164;
t6205 = t6387 * t7636 + t6639 * t7166;
t5869 = ((t6169 * t6934 - t6205 * t6929) * t6900 - (t6169 * t6929 + t6205 * t6934) * t6888) * t6931 + t5959 * t7564;
t7911 = t5869 * t8029;
t6388 = -t6924 * t7605 + t7320;
t6302 = t6388 * t6918 + t6639 * t7682;
t6097 = -t6302 * t6929 - t6639 * t7715;
t6110 = t6302 * t6934 - t6639 * t7717;
t5960 = t6097 * t6888 + t6110 * t6900;
t6170 = t6388 * t7348 + t6639 * t7165;
t6206 = -t6388 * t7636 - t6639 * t7167;
t5870 = ((t6170 * t6934 + t6206 * t6929) * t6900 + (-t6170 * t6929 + t6206 * t6934) * t6888) * t6931 + t5960 * t7564;
t7910 = t5870 * t8029;
t6389 = -t6922 * t7604 + t7496;
t6303 = t6389 * t6919 + t6640 * t7713;
t6100 = t6303 * t6929 - t6640 * t7673;
t6111 = t6303 * t6934 + t6640 * t7675;
t5961 = -t6100 * t6889 + t6111 * t6901;
t6171 = t6389 * t7347 + t6640 * t7160;
t6207 = t6389 * t7634 + t6640 * t7162;
t5871 = ((t6171 * t6934 - t6207 * t6929) * t6901 - (t6171 * t6929 + t6207 * t6934) * t6889) * t6931 + t5961 * t7564;
t7909 = t5871 * t8028;
t6390 = -t6924 * t7604 + t7319;
t6304 = t6390 * t6919 + t6640 * t7677;
t6099 = -t6304 * t6929 - t6640 * t7709;
t6112 = t6304 * t6934 - t6640 * t7711;
t5962 = t6099 * t6889 + t6112 * t6901;
t6172 = t6390 * t7347 + t6640 * t7161;
t6208 = -t6390 * t7634 - t6640 * t7163;
t5872 = ((t6172 * t6934 + t6208 * t6929) * t6901 + (-t6172 * t6929 + t6208 * t6934) * t6889) * t6931 + t5962 * t7564;
t7908 = t5872 * t8028;
t5873 = t5953 * t7834 - (t6093 * t6897 + t6103 * t6885) * t8141;
t7907 = t5873 * t6282;
t5874 = t5954 * t7834 - (-t6090 * t6897 + t6104 * t6885) * t8141;
t7906 = t5874 * t6282;
t5875 = t5951 * t7835 - t8142 * (t6092 * t6896 + t6101 * t6884);
t7905 = t5875 * t6281;
t5876 = t5952 * t7835 - t8142 * (-t6089 * t6896 + t6102 * t6884);
t7904 = t5876 * t6281;
t5877 = t5955 * t7833 - (t6094 * t6898 + t6105 * t6886) * t8140;
t7903 = t5877 * t6283;
t5878 = t5956 * t7833 - (-t6091 * t6898 + t6106 * t6886) * t8140;
t7902 = t5878 * t6283;
t5879 = t5957 * t7826 - (t6096 * t6899 + t6107 * t6887) * t8139;
t7901 = t5879 * t6284;
t5880 = t5959 * t7825 - (t6098 * t6900 + t6109 * t6888) * t8138;
t7900 = t5880 * t6285;
t5881 = t5960 * t7825 - (-t6097 * t6900 + t6110 * t6888) * t8138;
t7899 = t5881 * t6285;
t5882 = t5961 * t7824 - t8137 * (t6100 * t6901 + t6111 * t6889);
t7898 = t5882 * t6286;
t5883 = t5958 * t7826 - (-t6095 * t6899 + t6108 * t6887) * t8139;
t7897 = t5883 * t6284;
t5884 = t5962 * t7824 - t8137 * (-t6099 * t6901 + t6112 * t6889);
t7896 = t5884 * t6286;
t7871 = t6029 * t6244;
t7870 = t6030 * t6247;
t7869 = t6031 * t6250;
t7868 = t6032 * t6244;
t7867 = t6033 * t6247;
t7866 = t6034 * t6250;
t7865 = t6035 * t6262;
t7864 = t6036 * t6265;
t7863 = t6037 * t6268;
t7862 = t6038 * t6262;
t7861 = t6039 * t6265;
t7860 = t6040 * t6268;
t6553 = (-t6920 * t7611 - t6921 * t7313) * t6970 + t6968 * t7313;
t7823 = t6553 * t6920;
t6693 = -t6921 * t7622 + t7315;
t7807 = t6693 * t6729;
t7806 = t6729 * t6731;
t7804 = t6729 * t6920;
t7803 = t6729 * t6923;
t7802 = t6731 * t6840;
t7757 = t6840 * t6921;
t7633 = t6920 * t6923;
t6552 = (t6921 * t7632 - t6968 * t7316) * t6970 - t6968 * t7632;
t7631 = t6921 * t6552;
t7621 = t6922 * t6923;
t7612 = t6923 * t6924;
t7597 = t6924 * t6920;
t7588 = t6928 * t6936;
t7557 = t6933 * t6936;
t7550 = t6936 * t6937;
t7317 = t6922 * t7487;
t6694 = t6921 * t7317 + t7597;
t7512 = t6694 * t6552 - t6693 * t7805;
t6695 = t6921 * t7597 + t7317;
t7511 = t6696 * t6552 - t6695 * t7805;
t7510 = t6553 * t7612 - t6696 * t7806;
t7314 = t7487 * t6731;
t7509 = t6921 * t6553 - t7314 * t7803;
t7346 = t6923 * t7525;
t7380 = t6731 * t7612;
t7508 = t6695 * t7346 + t6840 * t7380;
t7462 = qJ(3,1) * t8022;
t7461 = qJ(3,2) * t8023;
t7460 = qJ(3,3) * t8024;
t7459 = qJ(3,4) * t8025;
t7458 = qJ(3,5) * t8026;
t7457 = qJ(3,6) * t8027;
t7455 = t8033 * t8009;
t7454 = t8033 * t8008;
t7453 = t6244 * t8009;
t7452 = t6244 * t8008;
t7451 = t5717 * t7853;
t7450 = t6932 * t8009;
t7449 = t8032 * t8007;
t7448 = t8032 * t8006;
t7447 = t6247 * t8007;
t7446 = t6247 * t8006;
t7445 = t5718 * t7852;
t7444 = t6932 * t8007;
t7443 = t8031 * t8005;
t7442 = t8031 * t8004;
t7441 = t6250 * t8005;
t7440 = t6250 * t8004;
t7439 = t5719 * t7851;
t7438 = t6932 * t8005;
t7437 = t8030 * t8003;
t7436 = t8030 * t8002;
t7435 = t6262 * t8003;
t7434 = t6262 * t8002;
t7433 = t5720 * t7850;
t7432 = t6932 * t8003;
t7431 = t8029 * t8001;
t7430 = t8029 * t8000;
t7429 = t6265 * t8001;
t7428 = t6265 * t8000;
t7427 = t5721 * t7849;
t7426 = t6932 * t8001;
t7425 = t8028 * t7999;
t7424 = t8028 * t7998;
t7423 = t6268 * t7999;
t7422 = t6268 * t7998;
t7421 = t5722 * t7848;
t7420 = t6932 * t7999;
t7419 = ((pkin(2) * t7970 + t7949 * t8021) * t6950 - t6931 * qJ(3,6) * t7411) * t7970;
t7418 = ((pkin(2) * t7969 + t7948 * t8021) * t6951 - t6931 * qJ(3,5) * t7408) * t7969;
t7417 = ((pkin(2) * t7968 + t7947 * t8021) * t6952 - t6931 * qJ(3,4) * t7405) * t7968;
t7416 = ((pkin(2) * t7964 + t7946 * t8021) * t6962 - t6931 * qJ(3,3) * t7402) * t7964;
t7415 = ((pkin(2) * t7963 + t7945 * t8021) * t6963 - t6931 * qJ(3,2) * t7399) * t7963;
t7414 = ((pkin(2) * t7962 + t7944 * t8021) * t6964 - t6931 * qJ(3,1) * t7396) * t7962;
t7389 = t8131 * t7853;
t7388 = t8132 * t7852;
t7387 = t8133 * t7851;
t7386 = t8134 * t7850;
t7385 = t8135 * t7849;
t7384 = t8136 * t7848;
t7383 = t6552 * t7621;
t7382 = t6694 * t7525;
t7381 = t6731 * t7803;
t7366 = t6840 * t7621;
t6883 = t6923 ^ 2;
t7359 = t6883 * t7525;
t7343 = 0.2e1 * t7413;
t7342 = 0.2e1 * t7410;
t7341 = 0.2e1 * t7407;
t7340 = 0.2e1 * t7404;
t7339 = 0.2e1 * t7401;
t7338 = 0.2e1 * t7398;
t7306 = t8131 * t7419;
t7305 = t8132 * t7418;
t7304 = t8133 * t7417;
t7303 = t8134 * t7416;
t7302 = t8135 * t7415;
t7301 = t8136 * t7414;
t7282 = t8033 * t7343;
t7281 = t6244 * t7343;
t7280 = t8032 * t7342;
t7279 = t6247 * t7342;
t7278 = t8031 * t7341;
t7277 = t6250 * t7341;
t7276 = t8030 * t7340;
t7275 = t6262 * t7340;
t7274 = t8029 * t7339;
t7273 = t6265 * t7339;
t7272 = t8028 * t7338;
t7271 = t6268 * t7338;
t7243 = -t5729 * (t6928 * t7549 - t6933 * t6953) - (t6928 * t7546 + t6933 * t6950) * t7973;
t7242 = -t5729 * (t6928 * t6953 + t6933 * t7549) + (t6928 * t6950 - t6933 * t7546) * t7973;
t7240 = -t6950 * t7973 + t7990;
t7239 = -t5730 * (t6928 * t7548 - t6933 * t6954) - (t6928 * t7545 + t6933 * t6951) * t7972;
t7238 = -t5730 * (t6928 * t6954 + t6933 * t7548) + (t6928 * t6951 - t6933 * t7545) * t7972;
t7236 = -t6951 * t7972 + t7988;
t7235 = -t5731 * (t6928 * t7547 - t6933 * t6955) - (t6928 * t7544 + t6933 * t6952) * t7971;
t7234 = -t5731 * (t6928 * t6955 + t6933 * t7547) + (t6928 * t6952 - t6933 * t7544) * t7971;
t7232 = -t6952 * t7971 + t7986;
t7231 = -t5732 * (t6928 * t7543 - t6933 * t6965) - (t6928 * t7540 + t6933 * t6962) * t7967;
t7230 = -t5732 * (t6928 * t6965 + t6933 * t7543) + (t6928 * t6962 - t6933 * t7540) * t7967;
t7228 = -t6962 * t7967 + t7984;
t7227 = -t5733 * (t6928 * t7542 - t6933 * t6966) - (t6928 * t7539 + t6933 * t6963) * t7966;
t7226 = -t5733 * (t6928 * t6966 + t6933 * t7542) + (t6928 * t6963 - t6933 * t7539) * t7966;
t7224 = -t6963 * t7966 + t7982;
t7223 = -t5734 * (t6928 * t7541 - t6933 * t6967) - (t6928 * t7538 + t6933 * t6964) * t7965;
t7222 = -t5734 * (t6928 * t6967 + t6933 * t7541) + (t6928 * t6964 - t6933 * t7538) * t7965;
t7220 = -t6964 * t7965 + t7980;
t7207 = -t6553 * t6693 + t6694 * t7802;
t7206 = -t6553 * t6695 + t6696 * t7802;
t7185 = -t6552 * t7612 - t6695 * t7806;
t7153 = t8131 * t7243;
t7152 = t8131 * t7242;
t7149 = t8131 * t7240;
t7148 = t8132 * t7239;
t7147 = t8132 * t7238;
t7144 = t8132 * t7236;
t7143 = t8133 * t7235;
t7142 = t8133 * t7234;
t7139 = t8133 * t7232;
t7138 = t8134 * t7231;
t7137 = t8134 * t7230;
t7134 = t8134 * t7228;
t7133 = t8135 * t7227;
t7132 = t8135 * t7226;
t7129 = t8135 * t7224;
t7128 = t8136 * t7223;
t7127 = t8136 * t7222;
t7124 = t8136 * t7220;
t7086 = t5821 * t7282 - t5825 * t7973;
t7085 = t5861 * t7282 - t5875 * t7973;
t7084 = t5863 * t7282 - t5876 * t7973;
t7083 = -t6014 * t7973 + t6029 * t7281;
t7082 = -t6015 * t7973 + t6032 * t7281;
t7081 = t5819 * t7280 - t5826 * t7972;
t7080 = t5862 * t7280 - t5873 * t7972;
t7079 = t5864 * t7280 - t5874 * t7972;
t7078 = -t6016 * t7972 + t6030 * t7279;
t7077 = -t6017 * t7972 + t6033 * t7279;
t7076 = t5820 * t7278 - t5827 * t7971;
t7075 = t5865 * t7278 - t5877 * t7971;
t7074 = t5866 * t7278 - t5878 * t7971;
t7073 = -t6018 * t7971 + t6031 * t7277;
t7072 = -t6019 * t7971 + t6034 * t7277;
t7071 = t5824 * t7276 - t5828 * t7967;
t7070 = t5867 * t7276 - t5879 * t7967;
t7069 = t5868 * t7276 - t5883 * t7967;
t7068 = -t6023 * t7967 + t6035 * t7275;
t7067 = -t6024 * t7967 + t6038 * t7275;
t7066 = t5822 * t7274 - t5829 * t7966;
t7065 = t5869 * t7274 - t5880 * t7966;
t7064 = t5870 * t7274 - t5881 * t7966;
t7063 = -t6025 * t7966 + t6036 * t7273;
t7062 = -t6026 * t7966 + t6039 * t7273;
t7061 = t5823 * t7272 - t5830 * t7965;
t7060 = t5871 * t7272 - t5882 * t7965;
t7059 = t5872 * t7272 - t5884 * t7965;
t7058 = -t6027 * t7965 + t6037 * t7271;
t7057 = -t6028 * t7965 + t6040 * t7271;
t7044 = -t6883 * t6970 * t7313 - t6729 * t7757;
t7025 = t5729 * t7937 + t5730 * t7936 + t5731 * t7935 + t5732 * t7934 + t5733 * t7933 + t5734 * t7932;
t7024 = t5729 * t7905 + t5730 * t7907 + t5731 * t7903 + t5732 * t7901 + t5733 * t7900 + t5734 * t7898;
t7023 = t5729 * t7904 + t5730 * t7906 + t5731 * t7902 + t5732 * t7897 + t5733 * t7899 + t5734 * t7896;
t7022 = t5729 * t7883 + t5730 * t7881 + t5731 * t7879 + t5732 * t7877 + t5733 * t7875 + t5734 * t7873;
t7021 = t5729 * t7882 + t5730 * t7880 + t5731 * t7878 + t5732 * t7876 + t5733 * t7874 + t5734 * t7872;
t7020 = t5729 * t7395 + t5730 * t7394 + t5731 * t7393 + t5732 * t7392 + t5733 * t7391 + t5734 * t7390;
t7007 = -t6281 * t7086 - t6282 * t7081 - t6283 * t7076 - t6284 * t7071 - t6285 * t7066 - t6286 * t7061;
t7006 = -t6281 * t7085 - t6282 * t7080 - t6283 * t7075 - t6284 * t7070 - t6285 * t7065 - t6286 * t7060;
t7005 = -t6281 * t7084 - t6282 * t7079 - t6283 * t7074 - t6284 * t7069 - t6285 * t7064 - t6286 * t7059;
t7004 = -t6281 * t7083 - t6282 * t7078 - t6283 * t7073 - t6284 * t7068 - t6285 * t7063 - t6286 * t7058;
t7003 = -t6281 * t7082 - t6282 * t7077 - t6283 * t7072 - t6284 * t7067 - t6285 * t7062 - t6286 * t7057;
t7002 = t6936 * t7007;
t7001 = t6936 * t7006;
t7000 = t6936 * t7005;
t6999 = t6936 * t7004;
t6998 = t6936 * t7003;
t6997 = t8087 + t8088 + t8089 + t8090 + t8091 + t8092;
t6996 = t6936 * t6997;
t6925 = t6931 ^ 2;
t6880 = t6927 - 0.1e1;
t6579 = t6693 * t7346;
t6572 = t6731 * t7757;
t6529 = -t6692 + t6549;
t6515 = t6552 * t7316;
t6441 = -t6550 + t6692;
t6370 = -t6549 + t6550;
t6368 = t6694 * t7806;
t6367 = -t6692 - t6550;
t6366 = -t6692 - t6549;
t6323 = -t6549 - t6550;
t5716 = t6931 * t7462 + t7420;
t5715 = t6931 * t7461 + t7426;
t5714 = t6931 * t7460 + t7432;
t5713 = t6925 * t7461 + t6931 * t7426;
t5712 = t6925 * t7460 + t6931 * t7432;
t5711 = t6925 * t7462 + t6931 * t7420;
t5710 = t6931 * t7459 + t7438;
t5709 = t6931 * t7458 + t7444;
t5708 = t6931 * t7457 + t7450;
t5707 = t6925 * t7459 + t6931 * t7438;
t5706 = t6925 * t7458 + t6931 * t7444;
t5705 = t6925 * t7457 + t6931 * t7450;
t5704 = pkin(2) * t8022 + t5722 * t7558 - t7992;
t5703 = pkin(2) * t8023 + t5721 * t7559 - t7993;
t5702 = pkin(2) * t8024 + t5720 * t7560 - t7994;
t5701 = t5722 * (pkin(2) * t6967 + qJ(3,1) * t7569) * t6932 - pkin(2) * t7992 + t5734 * (-t6927 * t6981 + t6981 + t6995);
t5700 = t5721 * (pkin(2) * t6966 + qJ(3,2) * t7570) * t6932 - pkin(2) * t7993 + t5733 * (-t6927 * t6980 + t6980 + t6995);
t5699 = t5720 * (pkin(2) * t6965 + qJ(3,3) * t7571) * t6932 - pkin(2) * t7994 + t5732 * (-t6927 * t6979 + t6979 + t6995);
t5698 = pkin(2) * t8025 + t5719 * t7561 - t7995;
t5697 = pkin(2) * t8026 + t5718 * t7562 - t7996;
t5696 = pkin(2) * t8027 + t5717 * t7563 - t7997;
t5695 = t5719 * (pkin(2) * t6955 + qJ(3,4) * t7575) * t6932 - pkin(2) * t7995 + t5731 * (-t6927 * t6978 + t6978 + t6995);
t5694 = t5718 * (pkin(2) * t6954 + qJ(3,5) * t7576) * t6932 - pkin(2) * t7996 + t5730 * (-t6927 * t6977 + t6977 + t6995);
t5693 = t5717 * (pkin(2) * t6953 + qJ(3,6) * t7577) * t6932 - pkin(2) * t7997 + t5729 * (-t6927 * t6976 + t6976 + t6995);
t5692 = -t5734 * t8019 + (-t6931 * t7558 + t7550) * t5722 + t5728;
t5691 = -t5733 * t8019 + (-t6931 * t7559 + t7550) * t5721 + t5727;
t5690 = -t5732 * t8019 + (-t6931 * t7560 + t7550) * t5720 + t5726;
t5689 = -t5731 * t8019 + (-t6931 * t7561 + t7550) * t5719 + t5725;
t5688 = -t5730 * t8019 + (-t6931 * t7562 + t7550) * t5718 + t5724;
t5687 = -t5729 * t8019 + (-t6931 * t7563 + t7550) * t5717 + t5723;
t5686 = ((qJ(3,1) * t7981 - t5728 * t6967) * t6931 + pkin(2) * t7980) * t6932 + (t5728 * t6937 - t7192) * t6936 + t7289;
t5685 = ((qJ(3,2) * t7983 - t5727 * t6966) * t6931 + pkin(2) * t7982) * t6932 + (t5727 * t6937 - t7193) * t6936 + t7290;
t5684 = ((qJ(3,3) * t7985 - t5726 * t6965) * t6931 + pkin(2) * t7984) * t6932 + (t5726 * t6937 - t7194) * t6936 + t7291;
t5683 = ((qJ(3,4) * t7987 - t5725 * t6955) * t6931 + pkin(2) * t7986) * t6932 + (t5725 * t6937 - t7195) * t6936 + t7292;
t5682 = ((qJ(3,5) * t7989 - t5724 * t6954) * t6931 + pkin(2) * t7988) * t6932 + (t5724 * t6937 - t7196) * t6936 + t7293;
t5681 = ((qJ(3,6) * t7991 - t5723 * t6953) * t6931 + pkin(2) * t7990) * t6932 + (t5723 * t6937 - t7197) * t6936 + t7294;
t5680 = -t5704 * t6928 - t5716 * t7557;
t5679 = t5704 * t6933 - t5716 * t7588;
t5678 = -t5703 * t6928 - t5715 * t7557;
t5677 = t5703 * t6933 - t5715 * t7588;
t5676 = -t5702 * t6928 - t5714 * t7557;
t5675 = t5702 * t6933 - t5714 * t7588;
t5674 = -t5698 * t6928 - t5710 * t7557;
t5673 = t5698 * t6933 - t5710 * t7588;
t5672 = -t5697 * t6928 - t5709 * t7557;
t5671 = t5697 * t6933 - t5709 * t7588;
t5670 = -t5696 * t6928 - t5708 * t7557;
t5669 = t5696 * t6933 - t5708 * t7588;
t1 = [t5717 * t7895 + t5718 * t7894 + t5719 * t7893 + t5720 * t7892 + t5721 * t7891 + t5722 * t7890, -t5729 * t7389 - t5730 * t7388 - t5731 * t7387 - t5732 * t7386 - t5733 * t7385 - t5734 * t7384, ((t5932 * t7220 - t6967 * t7421) * t8136 + (t5931 * t7224 - t6966 * t7427) * t8135 + (t5930 * t7228 - t6965 * t7433) * t8134 + (t5929 * t7232 - t6955 * t7439) * t8133 + (t5928 * t7236 - t6954 * t7445) * t8132 + (t5927 * t7240 - t6953 * t7451) * t8131) * t6932, ((-t5932 * t7221 + t6964 * t7421) * t8136 + (-t5931 * t7225 + t6963 * t7427) * t8135 + (-t5930 * t7229 + t6962 * t7433) * t8134 + (-t5929 * t7233 + t6952 * t7439) * t8133 + (-t5928 * t7237 + t6951 * t7445) * t8132 + (-t5927 * t7241 + t6950 * t7451) * t8131) * t6932, -t5669 * t7389 - t5671 * t7388 - t5673 * t7387 - t5675 * t7386 - t5677 * t7385 - t5679 * t7384 + (t7223 * t7890 + t7227 * t7891 + t7231 * t7892 + t7235 * t7893 + t7239 * t7894 + t7243 * t7895) * t6932 + (t6928 * t6996 + t6933 * t7020) * t6931, -t5670 * t7389 - t5672 * t7388 - t5674 * t7387 - t5676 * t7386 - t5678 * t7385 - t5680 * t7384 + (t7222 * t7890 + t7226 * t7891 + t7230 * t7892 + t7234 * t7893 + t7238 * t7894 + t7242 * t7895) * t6932 + (-t6928 * t7020 + t6933 * t6996) * t6931, -t5705 * t7389 - t5706 * t7388 - t5707 * t7387 - t5711 * t7384 - t5712 * t7386 - t5713 * t7385 + (t7221 * t7890 + t7225 * t7891 + t7229 * t7892 + t7233 * t7893 + t7237 * t7894 + t7241 * t7895) * t7579 + t6997 * t6880, -t5687 * t7395 - t5688 * t7394 - t5689 * t7393 - t5690 * t7392 - t5691 * t7391 - t5692 * t7390 + (t5686 * t5932 - t5701 * t7848) * t8136 + (t5685 * t5931 - t5700 * t7849) * t8135 + (t5684 * t5930 - t5699 * t7850) * t8134 + (t5683 * t5929 - t5695 * t7851) * t8133 + (t5682 * t5928 - t5694 * t7852) * t8132 + (t5681 * t5927 - t5693 * t7853) * t8131 + (-t7414 * t7890 - t7415 * t7891 - t7416 * t7892 - t7417 * t7893 - t7418 * t7894 - t7419 * t7895) * t6932 + (-qJ(3,4) * t8090 - qJ(3,5) * t8091 - qJ(3,6) * t8092 - qJ(3,1) * t8087 - qJ(3,2) * t8088 - qJ(3,3) * t8089) * t6925, 0, 0, 0, 0, 0, 0, t6366 * t7316 - t7631 + t6572 + (-t7359 + t7381) * t6920, -t6367 * t7633 + t7044 + t7509, t6921 * t6323 + t6515 + (t7823 + (t7314 + t7804) * t6840) * t6923, 0; t5717 * t7930 + t5718 * t7928 + t5719 * t7926 + t5720 * t7924 + t5721 * t7922 + t5722 * t7920, t5729 * t7868 + t5730 * t7867 + t5731 * t7866 + t5732 * t7862 + t5733 * t7861 + t5734 * t7860, (t5832 * t7149 + t5834 * t7144 + t5836 * t7139 + t5838 * t7134 + t5840 * t7129 + t5842 * t7124 + t6032 * t7452 + t6033 * t7446 + t6034 * t7440 + t6038 * t7434 + t6039 * t7428 + t6040 * t7422) * t6932, (-t6032 * t7453 - t6033 * t7447 - t6034 * t7441 - t6038 * t7435 - t6039 * t7429 - t6040 * t7423 - t8114) * t6932, t5669 * t7868 + t5671 * t7867 + t5673 * t7866 + t5675 * t7862 + t5677 * t7861 + t5679 * t7860 + (t5832 * t7153 + t5834 * t7148 + t5836 * t7143 + t5838 * t7138 + t5840 * t7133 + t5842 * t7128) * t6932 + (t6928 * t6998 - t6933 * t7021) * t6931, t5670 * t7868 + t5672 * t7867 + t5674 * t7866 + t5676 * t7862 + t5678 * t7861 + t5680 * t7860 + (t5832 * t7152 + t5834 * t7147 + t5836 * t7142 + t5838 * t7137 + t5840 * t7132 + t5842 * t7127) * t6932 + (t6928 * t7021 + t6933 * t6998) * t6931, t5705 * t7868 + t5706 * t7867 + t5707 * t7866 + t5711 * t7860 + t5712 * t7862 + t5713 * t7861 + t7003 * t6880 + t7579 * t8114, t5695 * t7866 + t5687 * t7882 + t5684 * t7924 + t5699 * t7862 + t5685 * t7922 + t5700 * t7861 + t5686 * t7920 + t5701 * t7860 + t5688 * t7880 + t5689 * t7878 + t5690 * t7876 + t5691 * t7874 + t5692 * t7872 + t5681 * t7930 + t5693 * t7868 + t5682 * t7928 + t5694 * t7867 + t5683 * t7926 + (-t5832 * t7306 - t5834 * t7305 - t5836 * t7304 - t5838 * t7303 - t5840 * t7302 - t5842 * t7301) * t6932 + (t7057 * t8015 + t7062 * t8014 + t7067 * t8013 + t7072 * t8012 + t7077 * t8011 + t7082 * t8010) * t6925, 0, 0, 0, 0, 0, 0, t7383 + t6366 * t6694 + t6579 + (-t7366 - t7807) * t6731, t6367 * t6693 - t6368 + (-t7382 + (-t6553 + t7805) * t6922) * t6923, -t6323 * t7621 + t7207 + t7512, 0; t5717 * t7931 + t5718 * t7929 + t5719 * t7927 + t5720 * t7925 + t5721 * t7923 + t5722 * t7921, t5729 * t7871 + t5730 * t7870 + t5731 * t7869 + t5732 * t7865 + t5733 * t7864 + t5734 * t7863, (t5831 * t7149 + t5833 * t7144 + t5835 * t7139 + t5837 * t7134 + t5839 * t7129 + t5841 * t7124 + t6029 * t7452 + t6030 * t7446 + t6031 * t7440 + t6035 * t7434 + t6036 * t7428 + t6037 * t7422) * t6932, (-t6029 * t7453 - t6030 * t7447 - t6031 * t7441 - t6035 * t7435 - t6036 * t7429 - t6037 * t7423 - t8115) * t6932, t5669 * t7871 + t5671 * t7870 + t5673 * t7869 + t5675 * t7865 + t5677 * t7864 + t5679 * t7863 + (t5831 * t7153 + t5833 * t7148 + t5835 * t7143 + t5837 * t7138 + t5839 * t7133 + t5841 * t7128) * t6932 + (t6928 * t6999 - t6933 * t7022) * t6931, t5670 * t7871 + t5672 * t7870 + t5674 * t7869 + t5676 * t7865 + t5678 * t7864 + t5680 * t7863 + (t5831 * t7152 + t5833 * t7147 + t5835 * t7142 + t5837 * t7137 + t5839 * t7132 + t5841 * t7127) * t6932 + (t6928 * t7022 + t6933 * t6999) * t6931, t5705 * t7871 + t5706 * t7870 + t5707 * t7869 + t5711 * t7863 + t5712 * t7865 + t5713 * t7864 + t7004 * t6880 + t7579 * t8115, t5687 * t7883 + t5684 * t7925 + t5699 * t7865 + t5685 * t7923 + t5700 * t7864 + t5686 * t7921 + t5701 * t7863 + t5688 * t7881 + t5689 * t7879 + t5690 * t7877 + t5691 * t7875 + t5692 * t7873 + t5681 * t7931 + t5693 * t7871 + t5682 * t7929 + t5694 * t7870 + t5683 * t7927 + t5695 * t7869 + (-t5831 * t7306 - t5833 * t7305 - t5835 * t7304 - t5837 * t7303 - t5839 * t7302 - t5841 * t7301) * t6932 + (t7058 * t8015 + t7063 * t8014 + t7068 * t8013 + t7073 * t8012 + t7078 * t8011 + t7083 * t8010) * t6925, 0, 0, 0, 0, 0, 0, t6366 * t6696 + t7185 + t7508, t6367 * t6695 + t7510 - t8086, t6323 * t7612 + t7206 + t7511, 0; t5717 * t7979 + t5718 * t7978 + t5719 * t7977 + t5720 * t7976 + t5721 * t7975 + t5722 * t7974, t5729 * t7941 + t5730 * t7943 + t5731 * t7942 + t5732 * t7938 + t5733 * t7940 + t5734 * t7939, (t5759 * t7149 + t5760 * t7144 + t5761 * t7139 + t5762 * t7134 + t5763 * t7129 + t5764 * t7124 + t5819 * t7448 + t5820 * t7442 + t5821 * t7454 + t5822 * t7430 + t5823 * t7424 + t5824 * t7436) * t6932, (-t5819 * t7449 - t5820 * t7443 - t5821 * t7455 - t5822 * t7431 - t5823 * t7425 - t5824 * t7437 - t8118) * t6932, t5669 * t7941 + t5671 * t7943 + t5673 * t7942 + t5675 * t7938 + t5677 * t7940 + t5679 * t7939 + (t5759 * t7153 + t5760 * t7148 + t5761 * t7143 + t5762 * t7138 + t5763 * t7133 + t5764 * t7128) * t6932 + (t6928 * t7002 - t6933 * t7025) * t6931, t5670 * t7941 + t5672 * t7943 + t5674 * t7942 + t5676 * t7938 + t5678 * t7940 + t5680 * t7939 + (t5759 * t7152 + t5760 * t7147 + t5761 * t7142 + t5762 * t7137 + t5763 * t7132 + t5764 * t7127) * t6932 + (t6928 * t7025 + t6933 * t7002) * t6931, t5705 * t7941 + t5706 * t7943 + t5707 * t7942 + t5711 * t7939 + t5712 * t7938 + t5713 * t7940 + t7007 * t6880 + t7579 * t8118, t5700 * t7940 + t5701 * t7939 + t5699 * t7938 + t5687 * t7937 + t5684 * t7976 + t5685 * t7975 + t5686 * t7974 + t5688 * t7936 + t5689 * t7935 + t5690 * t7934 + t5691 * t7933 + t5692 * t7932 + t5693 * t7941 + t5695 * t7942 + t5694 * t7943 + t5681 * t7979 + t5682 * t7978 + t5683 * t7977 + (-t5759 * t7306 - t5760 * t7305 - t5761 * t7304 - t5762 * t7303 - t5763 * t7302 - t5764 * t7301) * t6932 + (t7061 * t8015 + t7066 * t8014 + t7071 * t8013 + t7076 * t8012 + t7081 * t8011 + t7086 * t8010) * t6925, t6553 * t7316 + (t6729 * t6921 - t6840 * t7633) * t6731, t6921 * t6370 + t6515 + (-t7823 + (-t7314 + t7804) * t6840) * t6923, -t6441 * t7633 - t7044 + t7509, -t6552 * t7633 + (-t6731 * t6921 + t6840 * t7316) * t6729, t6529 * t7316 + t7631 + t6572 + (-t7359 - t7381) * t6920, (t6921 * t7525 + (-t6729 * t7487 + t6731 * t6920) * t6840) * t6923, 0, 0, 0, 0; t5717 * t7961 + t5718 * t7960 + t5719 * t7959 + t5720 * t7955 + t5721 * t7953 + t5722 * t7951, t5729 * t7917 + t5730 * t7916 + t5731 * t7914 + t5732 * t7912 + t5733 * t7910 + t5734 * t7908, (t5777 * t7149 + t5778 * t7144 + t5779 * t7139 + t5783 * t7134 + t5785 * t7129 + t5787 * t7124 + t5863 * t7454 + t5864 * t7448 + t5866 * t7442 + t5868 * t7436 + t5870 * t7430 + t5872 * t7424) * t6932, (-t5863 * t7455 - t5864 * t7449 - t5866 * t7443 - t5868 * t7437 - t5870 * t7431 - t5872 * t7425 - t8117) * t6932, t5669 * t7917 + t5671 * t7916 + t5673 * t7914 + t5675 * t7912 + t5677 * t7910 + t5679 * t7908 + (t5777 * t7153 + t5778 * t7148 + t5779 * t7143 + t5783 * t7138 + t5785 * t7133 + t5787 * t7128) * t6932 + (t6928 * t7000 - t6933 * t7023) * t6931, t5670 * t7917 + t5672 * t7916 + t5674 * t7914 + t5676 * t7912 + t5678 * t7910 + t5680 * t7908 + (t5777 * t7152 + t5778 * t7147 + t5779 * t7142 + t5783 * t7137 + t5785 * t7132 + t5787 * t7127) * t6932 + (t6928 * t7023 + t6933 * t7000) * t6931, t5705 * t7917 + t5706 * t7916 + t5707 * t7914 + t5711 * t7908 + t5712 * t7912 + t5713 * t7910 + t7005 * t6880 + t7579 * t8117, t5700 * t7910 + t5701 * t7908 + t5699 * t7912 + t5687 * t7904 + t5684 * t7955 + t5685 * t7953 + t5686 * t7951 + t5693 * t7917 + t5688 * t7906 + t5689 * t7902 + t5690 * t7897 + t5691 * t7899 + t5692 * t7896 + t5695 * t7914 + t5694 * t7916 + t5681 * t7961 + t5682 * t7960 + t5683 * t7959 + (-t5777 * t7306 - t5778 * t7305 - t5779 * t7304 - t5783 * t7303 - t5785 * t7302 - t5787 * t7301) * t6932 + (t7059 * t8015 + t7064 * t8014 + t7069 * t8013 + t7074 * t8012 + t7079 * t8011 + t7084 * t8010) * t6925, t6553 * t6694 + (t6693 * t6840 - t6729 * t7621) * t6731, -t6370 * t7621 - t7207 + t7512, t6441 * t6693 - t6368 + (t7382 + (-t6553 - t7805) * t6922) * t6923, t6552 * t6693 + (t6694 * t6840 + t6731 * t7621) * t6729, -t7383 + t6529 * t6694 + t6579 + (-t7366 + t7807) * t6731, -t6922 * t7359 + (-t6693 * t6731 - t6694 * t6729) * t6840, 0, 0, 0, 0; t5717 * t7958 + t5718 * t7957 + t5719 * t7956 + t5720 * t7954 + t5721 * t7952 + t5722 * t7950, t5729 * t7919 + t5730 * t7918 + t5731 * t7915 + t5732 * t7913 + t5733 * t7911 + t5734 * t7909, (t5780 * t7149 + t5781 * t7144 + t5782 * t7139 + t5784 * t7134 + t5786 * t7129 + t5788 * t7124 + t5861 * t7454 + t5862 * t7448 + t5865 * t7442 + t5867 * t7436 + t5869 * t7430 + t5871 * t7424) * t6932, (-t5861 * t7455 - t5862 * t7449 - t5865 * t7443 - t5867 * t7437 - t5869 * t7431 - t5871 * t7425 - t8116) * t6932, t5669 * t7919 + t5671 * t7918 + t5673 * t7915 + t5675 * t7913 + t5677 * t7911 + t5679 * t7909 + (t5780 * t7153 + t5781 * t7148 + t5782 * t7143 + t5784 * t7138 + t5786 * t7133 + t5788 * t7128) * t6932 + (t6928 * t7001 - t6933 * t7024) * t6931, t5670 * t7919 + t5672 * t7918 + t5674 * t7915 + t5676 * t7913 + t5678 * t7911 + t5680 * t7909 + (t5780 * t7152 + t5781 * t7147 + t5782 * t7142 + t5784 * t7137 + t5786 * t7132 + t5788 * t7127) * t6932 + (t6928 * t7024 + t6933 * t7001) * t6931, t5705 * t7919 + t5706 * t7918 + t5707 * t7915 + t5711 * t7909 + t5712 * t7913 + t5713 * t7911 + t7006 * t6880 + t7579 * t8116, t5684 * t7954 + t5700 * t7911 + t5701 * t7909 + t5699 * t7913 + t5687 * t7905 + t5685 * t7952 + t5686 * t7950 + t5693 * t7919 + t5688 * t7907 + t5689 * t7903 + t5690 * t7901 + t5691 * t7900 + t5692 * t7898 + t5695 * t7915 + t5694 * t7918 + t5681 * t7958 + t5682 * t7957 + t5683 * t7956 + (-t5780 * t7306 - t5781 * t7305 - t5782 * t7304 - t5784 * t7303 - t5786 * t7302 - t5788 * t7301) * t6932 + (t7060 * t8015 + t7065 * t8014 + t7070 * t8013 + t7075 * t8012 + t7080 * t8011 + t7085 * t8010) * t6925, t6553 * t6696 + (t6695 * t6840 + t6729 * t7612) * t6731, t6370 * t7612 - t7206 + t7511, t6441 * t6695 + t7510 + t8086, t6552 * t6695 + (t6696 * t6840 - t7380) * t6729, t6529 * t6696 - t7185 + t7508, t6924 * t7359 + (-t6695 * t6731 - t6696 * t6729) * t6840, 0, 0, 0, 0;];
tau_reg  = t1;
