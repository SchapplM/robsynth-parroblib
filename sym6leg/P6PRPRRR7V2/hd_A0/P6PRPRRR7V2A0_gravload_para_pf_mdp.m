% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PRPRRR7V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d4,theta1,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRPRRR7V2G1P1A0_convert_par2_MPV_fixb.m

% Output:
% taugX [6x1]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-17 04:21
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp(xP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P6PRPRRR7V2G1P1A0_gravload_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-17 04:18:59
% EndTime: 2019-05-17 04:21:58
% DurationCPUTime: 203.13s
% Computational Cost: add. (38067->1746), mult. (89142->3220), div. (324->18), fcn. (89244->64), ass. (0->1100)
t19010 = sin(pkin(5));
t19716 = -MDP(7) * t19010 + MDP(4);
t19041 = sin(qJ(2,3));
t19044 = cos(qJ(2,3));
t19038 = legFrame(3,2);
t18992 = sin(t19038);
t19026 = legFrame(3,1);
t18986 = cos(t19026);
t18998 = cos(t19038);
t19379 = t18986 * t18998;
t18974 = sin(t19026);
t19415 = t18974 * t18998;
t18772 = g(1) * t18992 - g(2) * t19415 + g(3) * t19379;
t19011 = sin(pkin(4));
t19016 = cos(pkin(4));
t19380 = t18986 * t18992;
t19416 = t18974 * t18992;
t18766 = -t18998 * g(1) - g(2) * t19416 + g(3) * t19380;
t18930 = g(2) * t18986 + g(3) * t18974;
t19008 = sin(pkin(9));
t19013 = cos(pkin(9));
t18673 = t18766 * t19008 + t18930 * t19013;
t19020 = legFrame(3,3);
t18968 = sin(t19020);
t18980 = cos(t19020);
t19167 = t18766 * t19013 - t18930 * t19008;
t19170 = -t18673 * t18980 - t19167 * t18968;
t19683 = -t18772 * t19011 + t19016 * t19170;
t19688 = -t18673 * t18968 + t18980 * t19167;
t19719 = t19041 * t19683 + t19044 * t19688;
t19042 = sin(qJ(2,2));
t19045 = cos(qJ(2,2));
t19039 = legFrame(2,2);
t18993 = sin(t19039);
t19027 = legFrame(2,1);
t18987 = cos(t19027);
t18999 = cos(t19039);
t19374 = t18987 * t18999;
t18975 = sin(t19027);
t19410 = t18975 * t18999;
t18773 = g(1) * t18993 - g(2) * t19410 + g(3) * t19374;
t19375 = t18987 * t18993;
t19411 = t18975 * t18993;
t18767 = -t18999 * g(1) - g(2) * t19411 + g(3) * t19375;
t18931 = g(2) * t18987 + g(3) * t18975;
t18675 = t18767 * t19008 + t18931 * t19013;
t19021 = legFrame(2,3);
t18969 = sin(t19021);
t18981 = cos(t19021);
t19166 = t18767 * t19013 - t18931 * t19008;
t19169 = -t18675 * t18981 - t19166 * t18969;
t19684 = -t18773 * t19011 + t19016 * t19169;
t19687 = -t18675 * t18969 + t18981 * t19166;
t19718 = t19042 * t19684 + t19045 * t19687;
t19043 = sin(qJ(2,1));
t19046 = cos(qJ(2,1));
t19040 = legFrame(1,2);
t18994 = sin(t19040);
t19028 = legFrame(1,1);
t18988 = cos(t19028);
t19000 = cos(t19040);
t19369 = t18988 * t19000;
t18976 = sin(t19028);
t19405 = t18976 * t19000;
t18774 = g(1) * t18994 - g(2) * t19405 + g(3) * t19369;
t19370 = t18988 * t18994;
t19406 = t18976 * t18994;
t18768 = -t19000 * g(1) - g(2) * t19406 + g(3) * t19370;
t18932 = g(2) * t18988 + g(3) * t18976;
t18677 = t18768 * t19008 + t18932 * t19013;
t19022 = legFrame(1,3);
t18970 = sin(t19022);
t18982 = cos(t19022);
t19165 = t18768 * t19013 - t18932 * t19008;
t19168 = -t18677 * t18982 - t19165 * t18970;
t19685 = -t18774 * t19011 + t19016 * t19168;
t19686 = -t18677 * t18970 + t18982 * t19165;
t19717 = t19043 * t19685 + t19046 * t19686;
t18227 = -t19041 * t19688 + t19044 * t19683;
t18231 = -t19042 * t19687 + t19045 * t19684;
t18229 = -t19043 * t19686 + t19046 * t19685;
t19029 = sin(qJ(2,6));
t19032 = cos(qJ(2,6));
t19023 = legFrame(6,1);
t18971 = sin(t19023);
t18983 = cos(t19023);
t19035 = legFrame(6,2);
t18989 = sin(t19035);
t18995 = cos(t19035);
t18763 = g(1) * t18995 + (g(2) * t18971 - g(3) * t18983) * t18989;
t18927 = g(2) * t18983 + g(3) * t18971;
t18661 = t18763 * t19013 + t18927 * t19008;
t18668 = t18763 * t19008 - t18927 * t19013;
t19017 = legFrame(6,3);
t18965 = sin(t19017);
t18977 = cos(t19017);
t19652 = t18661 * t18977 - t18668 * t18965;
t19394 = t18983 * t18995;
t19430 = t18971 * t18995;
t18769 = g(1) * t18989 - g(2) * t19430 + g(3) * t19394;
t19173 = t18661 * t18965 + t18668 * t18977;
t19680 = -t18769 * t19011 + t19016 * t19173;
t18215 = t19029 * t19680 - t19032 * t19652;
t19030 = sin(qJ(2,5));
t19033 = cos(qJ(2,5));
t19024 = legFrame(5,1);
t18972 = sin(t19024);
t18984 = cos(t19024);
t19036 = legFrame(5,2);
t18990 = sin(t19036);
t18996 = cos(t19036);
t18764 = g(1) * t18996 + (g(2) * t18972 - g(3) * t18984) * t18990;
t18928 = g(2) * t18984 + g(3) * t18972;
t18662 = t18764 * t19013 + t18928 * t19008;
t18670 = t18764 * t19008 - t18928 * t19013;
t19018 = legFrame(5,3);
t18966 = sin(t19018);
t18978 = cos(t19018);
t19651 = t18662 * t18978 - t18670 * t18966;
t19389 = t18984 * t18996;
t19425 = t18972 * t18996;
t18770 = g(1) * t18990 - g(2) * t19425 + g(3) * t19389;
t19172 = t18662 * t18966 + t18670 * t18978;
t19681 = -t18770 * t19011 + t19016 * t19172;
t18218 = t19030 * t19681 - t19033 * t19651;
t19031 = sin(qJ(2,4));
t19034 = cos(qJ(2,4));
t19025 = legFrame(4,1);
t18973 = sin(t19025);
t18985 = cos(t19025);
t19037 = legFrame(4,2);
t18991 = sin(t19037);
t18997 = cos(t19037);
t18765 = g(1) * t18997 + (g(2) * t18973 - g(3) * t18985) * t18991;
t18929 = g(2) * t18985 + g(3) * t18973;
t18663 = t18765 * t19013 + t18929 * t19008;
t18672 = t18765 * t19008 - t18929 * t19013;
t19019 = legFrame(4,3);
t18967 = sin(t19019);
t18979 = cos(t19019);
t19650 = t18663 * t18979 - t18672 * t18967;
t19384 = t18985 * t18997;
t19420 = t18973 * t18997;
t18771 = g(1) * t18991 - g(2) * t19420 + g(3) * t19384;
t19171 = t18663 * t18967 + t18672 * t18979;
t19682 = -t18771 * t19011 + t19016 * t19171;
t18221 = t19031 * t19682 - t19034 * t19650;
t18216 = t19029 * t19652 + t19032 * t19680;
t18219 = t19030 * t19651 + t19033 * t19681;
t18222 = t19031 * t19650 + t19034 * t19682;
t19012 = cos(pkin(10));
t19590 = sin(pkin(6)) * pkin(8);
t19591 = sin(pkin(10));
t18907 = pkin(3) * t19012 + t19590 * t19591 + pkin(2);
t18851 = t19041 * t18907;
t18923 = -pkin(3) * t19591 + t19012 * t19590;
t18887 = t19016 * t18923;
t19589 = cos(pkin(6)) * pkin(8);
t18958 = qJ(3,3) + t19589;
t19015 = cos(pkin(5));
t18948 = t19016 * t18958;
t19007 = t19015 ^ 2;
t19279 = t19011 * t19044;
t19613 = t18923 * t19279 - t18948;
t19248 = -t19007 * t19613 - t18948;
t19094 = 0.1e1 / ((-(t18958 * t19279 + t18887) * t19010 + t18851 * t19011) * t19015 + t19248);
t19709 = t19719 * t19094;
t18852 = t19042 * t18907;
t18959 = qJ(3,2) + t19589;
t18949 = t19016 * t18959;
t19278 = t19011 * t19045;
t19614 = t18923 * t19278 - t18949;
t19247 = -t19007 * t19614 - t18949;
t19093 = 0.1e1 / ((-(t18959 * t19278 + t18887) * t19010 + t18852 * t19011) * t19015 + t19247);
t19708 = t19718 * t19093;
t18853 = t19043 * t18907;
t18960 = qJ(3,1) + t19589;
t18950 = t19016 * t18960;
t19277 = t19011 * t19046;
t19615 = t18923 * t19277 - t18950;
t19246 = -t19007 * t19615 - t18950;
t19092 = 0.1e1 / ((-(t18960 * t19277 + t18887) * t19010 + t18853 * t19011) * t19015 + t19246);
t19707 = t19717 * t19092;
t18845 = t19029 * t18907;
t18955 = qJ(3,6) + t19589;
t19445 = t18955 * t19010;
t18721 = -t19032 * t19445 + t18845;
t18832 = t19010 * t18887;
t19239 = t18721 * t19011 - t18832;
t18933 = t19016 * t18955;
t19282 = t19011 * t19032;
t19610 = t18923 * t19282 - t18933;
t19251 = -t19007 * t19610 - t18933;
t18443 = 0.1e1 / (t19015 * t19239 + t19251);
t19528 = t18443 * t18769;
t18846 = t19030 * t18907;
t18956 = qJ(3,5) + t19589;
t19444 = t18956 * t19010;
t18722 = -t19033 * t19444 + t18846;
t19238 = t18722 * t19011 - t18832;
t18934 = t19016 * t18956;
t19281 = t19011 * t19033;
t19611 = t18923 * t19281 - t18934;
t19250 = -t19007 * t19611 - t18934;
t18446 = 0.1e1 / (t19015 * t19238 + t19250);
t19526 = t18446 * t18770;
t18847 = t19031 * t18907;
t18957 = qJ(3,4) + t19589;
t19443 = t18957 * t19010;
t18723 = -t19034 * t19443 + t18847;
t19237 = t18723 * t19011 - t18832;
t18935 = t19016 * t18957;
t19280 = t19011 * t19034;
t19612 = t18923 * t19280 - t18935;
t19249 = -t19007 * t19612 - t18935;
t18449 = 0.1e1 / (t19015 * t19237 + t19249);
t19524 = t18449 * t18771;
t19442 = t18958 * t19010;
t18727 = -t19044 * t19442 + t18851;
t19236 = t18727 * t19011 - t18832;
t18458 = 0.1e1 / (t19015 * t19236 + t19248);
t19522 = t18458 * t18772;
t19441 = t18959 * t19010;
t18728 = -t19045 * t19441 + t18852;
t19235 = t18728 * t19011 - t18832;
t18461 = 0.1e1 / (t19015 * t19235 + t19247);
t19520 = t18461 * t18773;
t19440 = t18960 * t19010;
t18729 = -t19046 * t19440 + t18853;
t19234 = t18729 * t19011 - t18832;
t18464 = 0.1e1 / (t19015 * t19234 + t19246);
t19518 = t18464 * t18774;
t19257 = t19016 * t19032;
t19163 = t18923 * t19257 + t18955 * t19011;
t19275 = t19013 * t19029;
t19649 = -t18923 * t19275 - t19008 * t19163;
t19706 = t18977 * t19649;
t19256 = t19016 * t19033;
t19162 = t18923 * t19256 + t18956 * t19011;
t19274 = t19013 * t19030;
t19648 = -t18923 * t19274 - t19008 * t19162;
t19705 = t18978 * t19648;
t19255 = t19016 * t19034;
t19161 = t18923 * t19255 + t18957 * t19011;
t19273 = t19013 * t19031;
t19647 = -t18923 * t19273 - t19008 * t19161;
t19704 = t18979 * t19647;
t19254 = t19016 * t19044;
t19160 = t18923 * t19254 + t18958 * t19011;
t19272 = t19013 * t19041;
t19646 = -t18923 * t19272 - t19008 * t19160;
t19703 = t18980 * t19646;
t19253 = t19016 * t19045;
t19159 = t18923 * t19253 + t18959 * t19011;
t19271 = t19013 * t19042;
t19645 = -t18923 * t19271 - t19008 * t19159;
t19702 = t18981 * t19645;
t19252 = t19016 * t19046;
t19158 = t18923 * t19252 + t18960 * t19011;
t19270 = t19013 * t19043;
t19644 = -t18923 * t19270 - t19008 * t19158;
t19701 = t18982 * t19644;
t19694 = t19610 * t18989;
t19693 = t19611 * t18990;
t19692 = t19612 * t18991;
t19691 = t19613 * t18992;
t19690 = t19614 * t18993;
t19689 = t19615 * t18994;
t19207 = t18995 * t19257;
t19213 = t18989 * t19257;
t19103 = g(1) * t19207 - (-g(2) * t19029 + g(3) * t19213) * t18983 + (g(2) * t19213 + g(3) * t19029) * t18971;
t19338 = t18995 * t19029;
t19361 = t18989 * t19029;
t19109 = g(1) * t19338 + (-g(2) * t19257 - g(3) * t19361) * t18983 + (g(2) * t19361 - g(3) * t19257) * t18971;
t19283 = t19011 * t19015;
t18888 = t18923 * t19015;
t19616 = -t19010 * t18888 - t19589;
t18757 = -t18888 - t19445;
t19664 = t18757 * t19032 + t18845;
t19568 = (((-t19008 * t19103 - t19013 * t19109) * t18977 + (t19008 * t19109 - t19013 * t19103) * t18965 + t18769 * t19282) * t19010 - (t18769 * t19016 + t19011 * t19173) * t19015) / (t19283 * t19664 + (t18955 * t19007 - qJ(3,6) + t19616) * t19016);
t19206 = t18996 * t19256;
t19212 = t18990 * t19256;
t19102 = g(1) * t19206 - (-g(2) * t19030 + g(3) * t19212) * t18984 + (g(2) * t19212 + g(3) * t19030) * t18972;
t19337 = t18996 * t19030;
t19356 = t18990 * t19030;
t19108 = g(1) * t19337 + (-g(2) * t19256 - g(3) * t19356) * t18984 + (g(2) * t19356 - g(3) * t19256) * t18972;
t18758 = -t18888 - t19444;
t19663 = t18758 * t19033 + t18846;
t19567 = (((-t19008 * t19102 - t19013 * t19108) * t18978 + (t19008 * t19108 - t19013 * t19102) * t18966 + t18770 * t19281) * t19010 - (t18770 * t19016 + t19011 * t19172) * t19015) / (t19283 * t19663 + (t18956 * t19007 - qJ(3,5) + t19616) * t19016);
t19205 = t18997 * t19255;
t19211 = t18991 * t19255;
t19101 = g(1) * t19205 - (-g(2) * t19031 + g(3) * t19211) * t18985 + (g(2) * t19211 + g(3) * t19031) * t18973;
t19335 = t18997 * t19031;
t19351 = t18991 * t19031;
t19107 = g(1) * t19335 + (-g(2) * t19255 - g(3) * t19351) * t18985 + (g(2) * t19351 - g(3) * t19255) * t18973;
t18759 = -t18888 - t19443;
t19662 = t18759 * t19034 + t18847;
t19566 = (((-t19008 * t19101 - t19013 * t19107) * t18979 + (t19008 * t19107 - t19013 * t19101) * t18967 + t18771 * t19280) * t19010 - t19015 * (t18771 * t19016 + t19011 * t19171)) / (t19283 * t19662 + (t18957 * t19007 - qJ(3,4) + t19616) * t19016);
t19204 = t18998 * t19254;
t19210 = t18992 * t19254;
t19100 = g(1) * t19204 - (-g(2) * t19041 + g(3) * t19210) * t18986 + (g(2) * t19210 + g(3) * t19041) * t18974;
t19333 = t18998 * t19041;
t19347 = t18992 * t19041;
t19106 = g(1) * t19333 - (-g(2) * t19347 + g(3) * t19254) * t18974 - (g(2) * t19254 + g(3) * t19347) * t18986;
t18760 = -t18888 - t19442;
t19661 = t18760 * t19044 + t18851;
t19565 = (((-t19008 * t19100 - t19013 * t19106) * t18980 + (t19008 * t19106 - t19013 * t19100) * t18968 + t18772 * t19279) * t19010 - t19015 * (t18772 * t19016 + t19011 * t19170)) / (t19283 * t19661 + (t18958 * t19007 - qJ(3,3) + t19616) * t19016);
t19203 = t18999 * t19253;
t19209 = t18993 * t19253;
t19099 = g(1) * t19203 - (-g(2) * t19042 + g(3) * t19209) * t18987 + (g(2) * t19209 + g(3) * t19042) * t18975;
t19331 = t18999 * t19042;
t19343 = t18993 * t19042;
t19105 = g(1) * t19331 - (-g(2) * t19343 + g(3) * t19253) * t18975 - (g(2) * t19253 + g(3) * t19343) * t18987;
t18761 = -t18888 - t19441;
t19660 = t18761 * t19045 + t18852;
t19564 = (((-t19008 * t19099 - t19013 * t19105) * t18981 + (t19008 * t19105 - t19013 * t19099) * t18969 + t18773 * t19278) * t19010 - t19015 * (t18773 * t19016 + t19011 * t19169)) / (t19283 * t19660 + (t18959 * t19007 - qJ(3,2) + t19616) * t19016);
t19202 = t19000 * t19252;
t19208 = t18994 * t19252;
t19098 = g(1) * t19202 - (-g(2) * t19043 + g(3) * t19208) * t18988 + (g(2) * t19208 + g(3) * t19043) * t18976;
t19329 = t19000 * t19043;
t19339 = t18994 * t19043;
t19104 = g(1) * t19329 - (-g(2) * t19339 + g(3) * t19252) * t18976 - (g(2) * t19252 + g(3) * t19339) * t18988;
t18762 = -t18888 - t19440;
t19659 = t18762 * t19046 + t18853;
t19563 = (((-t19008 * t19098 - t19013 * t19104) * t18982 + (t19008 * t19104 - t19013 * t19098) * t18970 + t18774 * t19277) * t19010 - (t18774 * t19016 + t19011 * t19168) * t19015) / (t19283 * t19659 + (t18960 * t19007 - qJ(3,1) + t19616) * t19016);
t19097 = 0.1e1 / ((-(t18955 * t19282 + t18887) * t19010 + t18845 * t19011) * t19015 + t19251);
t19673 = t18215 * t19097;
t19096 = 0.1e1 / ((-(t18956 * t19281 + t18887) * t19010 + t18846 * t19011) * t19015 + t19250);
t19672 = t18218 * t19096;
t19095 = 0.1e1 / ((-(t18957 * t19280 + t18887) * t19010 + t18847 * t19011) * t19015 + t19249);
t19671 = t18221 * t19095;
t19226 = t18923 * t19010 * t19011;
t18575 = t18721 * t19016 + t19226;
t18848 = t18907 * t19032;
t18724 = t19029 * t19445 + t18848;
t18703 = t18724 * t19013;
t18503 = -t18575 * t19008 + t18703;
t19290 = t19008 * t19029;
t18592 = t18923 * t19290 - t19013 * t19163;
t19269 = t19016 * t18989;
t19284 = t19011 * t19013;
t19292 = t19008 * t19011;
t19517 = t19239 * t18989;
t19200 = t18575 * t19013 + t19008 * t18724;
t19628 = t18965 * t19200;
t19079 = t18955 * (t18995 * (t18965 * t19284 + t18977 * t19292) + t19269) + t19007 * (t18995 * (t18592 * t18965 + t19706) + t19694) - t19015 * (t18995 * (t18503 * t18977 - t19628) + t19517);
t18577 = t18722 * t19016 + t19226;
t18849 = t18907 * t19033;
t18725 = t19030 * t19444 + t18849;
t18704 = t18725 * t19013;
t18504 = -t18577 * t19008 + t18704;
t19289 = t19008 * t19030;
t18593 = t18923 * t19289 - t19013 * t19162;
t19268 = t19016 * t18990;
t19516 = t19238 * t18990;
t19199 = t18577 * t19013 + t19008 * t18725;
t19627 = t18966 * t19199;
t19078 = t18956 * (t18996 * (t18966 * t19284 + t18978 * t19292) + t19268) + t19007 * (t18996 * (t18593 * t18966 + t19705) + t19693) - t19015 * (t18996 * (t18504 * t18978 - t19627) + t19516);
t18579 = t18723 * t19016 + t19226;
t18850 = t18907 * t19034;
t18726 = t19031 * t19443 + t18850;
t18705 = t18726 * t19013;
t18505 = -t18579 * t19008 + t18705;
t19288 = t19008 * t19031;
t18594 = t18923 * t19288 - t19013 * t19161;
t19267 = t19016 * t18991;
t19515 = t19237 * t18991;
t19198 = t18579 * t19013 + t19008 * t18726;
t19626 = t18967 * t19198;
t19077 = t18957 * (t18997 * (t18967 * t19284 + t18979 * t19292) + t19267) + t19007 * (t18997 * (t18594 * t18967 + t19704) + t19692) - t19015 * (t18997 * (t18505 * t18979 - t19626) + t19515);
t18584 = t18727 * t19016 + t19226;
t18854 = t18907 * t19044;
t18730 = t19041 * t19442 + t18854;
t18712 = t18730 * t19013;
t18509 = -t18584 * t19008 + t18712;
t19287 = t19008 * t19041;
t18598 = t18923 * t19287 - t19013 * t19160;
t19266 = t19016 * t18992;
t19513 = t19236 * t18992;
t19197 = t18584 * t19013 + t19008 * t18730;
t19625 = t18968 * t19197;
t19076 = t18958 * (t18998 * (t18968 * t19284 + t18980 * t19292) + t19266) + t19007 * (t18998 * (t18598 * t18968 + t19703) + t19691) - t19015 * (t18998 * (t18509 * t18980 - t19625) + t19513);
t18586 = t18728 * t19016 + t19226;
t18855 = t18907 * t19045;
t18731 = t19042 * t19441 + t18855;
t18713 = t18731 * t19013;
t18510 = -t18586 * t19008 + t18713;
t19286 = t19008 * t19042;
t18599 = t18923 * t19286 - t19013 * t19159;
t19265 = t19016 * t18993;
t19511 = t19235 * t18993;
t19196 = t18586 * t19013 + t19008 * t18731;
t19624 = t18969 * t19196;
t19075 = t18959 * (t18999 * (t18969 * t19284 + t18981 * t19292) + t19265) + t19007 * (t18999 * (t18599 * t18969 + t19702) + t19690) - t19015 * (t18999 * (t18510 * t18981 - t19624) + t19511);
t18588 = t18729 * t19016 + t19226;
t18856 = t18907 * t19046;
t18732 = t19043 * t19440 + t18856;
t18714 = t18732 * t19013;
t18511 = -t18588 * t19008 + t18714;
t19285 = t19008 * t19043;
t18600 = t18923 * t19285 - t19013 * t19158;
t19264 = t19016 * t18994;
t19509 = t19234 * t18994;
t19195 = t18588 * t19013 + t19008 * t18732;
t19623 = t18970 * t19195;
t19074 = t18960 * (t19000 * (t18970 * t19284 + t18982 * t19292) + t19264) + t19007 * (t19000 * (t18600 * t18970 + t19701) + t19689) - t19015 * (t19000 * (t18511 * t18982 - t19623) + t19509);
t19048 = xP(5);
t19005 = cos(t19048);
t19588 = g(1) * t19005;
t19233 = t19015 * t19591;
t18149 = -t18218 * t19233 + t18219 * t19012;
t19586 = t18149 * t19096;
t18150 = -t18215 * t19233 + t18216 * t19012;
t19585 = t18150 * t19097;
t19276 = t19012 * t19015;
t18151 = -t18215 * t19276 - t18216 * t19591;
t19584 = t18151 * t19097;
t18152 = -t18218 * t19276 - t18219 * t19591;
t19583 = t18152 * t19096;
t18153 = -t18221 * t19233 + t18222 * t19012;
t19582 = t18153 * t19095;
t18154 = -t18221 * t19276 - t18222 * t19591;
t19581 = t18154 * t19095;
t18155 = t18229 * t19012 - t19233 * t19717;
t19580 = t18155 * t19092;
t18156 = -t18229 * t19591 - t19276 * t19717;
t19579 = t18156 * t19092;
t18157 = t18227 * t19012 - t19233 * t19719;
t19578 = t18157 * t19094;
t18158 = -t18227 * t19591 - t19276 * t19719;
t19577 = t18158 * t19094;
t18159 = t18231 * t19012 - t19233 * t19718;
t19576 = t18159 * t19093;
t18160 = -t18231 * t19591 - t19276 * t19718;
t19575 = t18160 * t19093;
t18164 = qJ(3,6) * t18215 * t19010 + pkin(2) * t18216;
t19574 = t18164 * t19097;
t18165 = qJ(3,5) * t18218 * t19010 + pkin(2) * t18219;
t19573 = t18165 * t19096;
t18166 = qJ(3,4) * t18221 * t19010 + pkin(2) * t18222;
t19572 = t18166 * t19095;
t18167 = qJ(3,3) * t19010 * t19719 + pkin(2) * t18227;
t19571 = t18167 * t19094;
t18168 = qJ(3,2) * t19010 * t19718 + pkin(2) * t18231;
t19570 = t18168 * t19093;
t18169 = qJ(3,1) * t19010 * t19717 + pkin(2) * t18229;
t19569 = t18169 * t19092;
t19561 = t18216 * t19097;
t19558 = t18219 * t19096;
t19555 = t18222 * t19095;
t19550 = t18227 * t19094;
t19548 = t18229 * t19092;
t19546 = t18231 * t19093;
t18857 = t18965 * t19013 + t18977 * t19008;
t18863 = -t18965 * t19008 + t18977 * t19013;
t19395 = t18983 * t18989;
t18631 = t18857 * t19395 + t18863 * t18971;
t18632 = -t18857 * t18971 + t18863 * t19395;
t19544 = (t18632 * t19283 + t19010 * (-t18631 * t19029 + t18632 * t19257)) * t19097;
t18858 = t18966 * t19013 + t18978 * t19008;
t18864 = -t18966 * t19008 + t18978 * t19013;
t19390 = t18984 * t18990;
t18633 = t18858 * t19390 + t18864 * t18972;
t18634 = -t18858 * t18972 + t18864 * t19390;
t19543 = (t18634 * t19283 + t19010 * (-t18633 * t19030 + t18634 * t19256)) * t19096;
t18859 = t18967 * t19013 + t18979 * t19008;
t18865 = -t18967 * t19008 + t18979 * t19013;
t19385 = t18985 * t18991;
t18635 = t18859 * t19385 + t18865 * t18973;
t18636 = -t18859 * t18973 + t18865 * t19385;
t19542 = (t18636 * t19283 + t19010 * (-t18635 * t19031 + t18636 * t19255)) * t19095;
t19431 = t18971 * t18989;
t18643 = t18857 * t18983 + t18863 * t19431;
t18649 = t18857 * t19431 - t18863 * t18983;
t19541 = (-t18643 * t19283 - t19010 * (t18643 * t19257 - t18649 * t19029)) * t19097;
t19426 = t18972 * t18990;
t18644 = t18858 * t18984 + t18864 * t19426;
t18650 = t18858 * t19426 - t18864 * t18984;
t19540 = (-t18644 * t19283 - t19010 * (t18644 * t19256 - t18650 * t19030)) * t19096;
t19421 = t18973 * t18991;
t18645 = t18859 * t18985 + t18865 * t19421;
t18651 = t18859 * t19421 - t18865 * t18985;
t19539 = (-t18645 * t19283 - t19010 * (t18645 * t19255 - t18651 * t19031)) * t19095;
t18860 = t18968 * t19013 + t18980 * t19008;
t18866 = -t18968 * t19008 + t18980 * t19013;
t18637 = t18860 * t19380 + t18866 * t18974;
t18638 = -t18860 * t18974 + t18866 * t19380;
t19538 = (t18638 * t19283 + t19010 * (-t18637 * t19041 + t18638 * t19254)) * t19094;
t18861 = t18969 * t19013 + t18981 * t19008;
t18867 = -t18969 * t19008 + t18981 * t19013;
t18639 = t18861 * t19375 + t18867 * t18975;
t18640 = -t18861 * t18975 + t18867 * t19375;
t19537 = (t18640 * t19283 + t19010 * (-t18639 * t19042 + t18640 * t19253)) * t19093;
t18862 = t18970 * t19013 + t18982 * t19008;
t18868 = -t18970 * t19008 + t18982 * t19013;
t18641 = t18862 * t19370 + t18868 * t18976;
t18642 = -t18862 * t18976 + t18868 * t19370;
t19536 = (t18642 * t19283 + t19010 * (-t18641 * t19043 + t18642 * t19252)) * t19092;
t18646 = t18860 * t18986 + t18866 * t19416;
t18652 = t18860 * t19416 - t18866 * t18986;
t19535 = (-t18646 * t19283 - t19010 * (t18646 * t19254 - t18652 * t19041)) * t19094;
t18647 = t18861 * t18987 + t18867 * t19411;
t18653 = t18861 * t19411 - t18867 * t18987;
t19534 = (-t18647 * t19283 - t19010 * (t18647 * t19253 - t18653 * t19042)) * t19093;
t18648 = t18862 * t18988 + t18868 * t19406;
t18654 = t18862 * t19406 - t18868 * t18988;
t19533 = (-t18648 * t19283 - t19010 * (t18648 * t19252 - t18654 * t19043)) * t19092;
t19529 = t18443 * (t18863 * t19283 + t19010 * (-t18857 * t19029 + t18863 * t19257));
t19527 = t18446 * (t18864 * t19283 + t19010 * (-t18858 * t19030 + t18864 * t19256));
t19525 = t18449 * (t18865 * t19283 + t19010 * (-t18859 * t19031 + t18865 * t19255));
t19523 = t18458 * (t18866 * t19283 + t19010 * (-t18860 * t19041 + t18866 * t19254));
t19521 = t18461 * (t18867 * t19283 + t19010 * (-t18861 * t19042 + t18867 * t19253));
t19519 = t18464 * (t18868 * t19283 + t19010 * (-t18862 * t19043 + t18868 * t19252));
t19514 = t19237 * t18997;
t19512 = t19236 * t18998;
t19510 = t19235 * t18999;
t19508 = t19234 * t19000;
t19507 = (-t18757 * t19029 + t18848) * t19016;
t19506 = (-t18758 * t19030 + t18849) * t19016;
t19505 = (-t18759 * t19031 + t18850) * t19016;
t19504 = (-t18760 * t19041 + t18854) * t19016;
t19503 = (-t18761 * t19042 + t18855) * t19016;
t19502 = (-t18762 * t19043 + t18856) * t19016;
t19047 = xP(6);
t19001 = sin(t19047);
t19004 = cos(t19047);
t19056 = koppelP(6,2);
t19062 = koppelP(6,1);
t18908 = -t19001 * t19056 + t19004 * t19062;
t19002 = sin(t19048);
t19050 = koppelP(6,3);
t19310 = t19005 * t19050;
t18751 = t18908 * t19002 - t19310;
t19491 = t18751 * t18989;
t19490 = t18751 * t18995;
t19057 = koppelP(5,2);
t19063 = koppelP(5,1);
t18909 = -t19001 * t19057 + t19004 * t19063;
t19051 = koppelP(5,3);
t19309 = t19005 * t19051;
t18752 = t18909 * t19002 - t19309;
t19489 = t18752 * t18990;
t19488 = t18752 * t18996;
t19058 = koppelP(4,2);
t19064 = koppelP(4,1);
t18910 = -t19001 * t19058 + t19004 * t19064;
t19052 = koppelP(4,3);
t19308 = t19005 * t19052;
t18753 = t18910 * t19002 - t19308;
t19487 = t18753 * t18991;
t19059 = koppelP(3,2);
t19065 = koppelP(3,1);
t18911 = -t19001 * t19059 + t19004 * t19065;
t19053 = koppelP(3,3);
t19307 = t19005 * t19053;
t18754 = t18911 * t19002 - t19307;
t19486 = t18754 * t18992;
t19060 = koppelP(2,2);
t19066 = koppelP(2,1);
t18912 = -t19001 * t19060 + t19004 * t19066;
t19054 = koppelP(2,3);
t19306 = t19005 * t19054;
t18755 = t18912 * t19002 - t19306;
t19485 = t18755 * t18993;
t19061 = koppelP(1,2);
t19067 = koppelP(1,1);
t18913 = -t19001 * t19061 + t19004 * t19067;
t19055 = koppelP(1,3);
t19305 = t19005 * t19055;
t18756 = t18913 * t19002 - t19305;
t19484 = t18756 * t18994;
t18875 = t19008 * t19257 + t19275;
t19477 = t18875 * t18989;
t18876 = t19008 * t19256 + t19274;
t19476 = t18876 * t18990;
t18877 = t19008 * t19255 + t19273;
t19475 = t18877 * t18991;
t18884 = t19013 * t19257 - t19290;
t19474 = t18884 * t18989;
t18885 = t19013 * t19256 - t19289;
t19473 = t18885 * t18990;
t18886 = t19013 * t19255 - t19288;
t19472 = t18886 * t18991;
t18895 = t19008 * t19254 + t19272;
t19471 = t18895 * t18992;
t18896 = t19008 * t19253 + t19271;
t19470 = t18896 * t18993;
t18897 = t19008 * t19252 + t19270;
t19469 = t18897 * t18994;
t18904 = t19013 * t19254 - t19287;
t19468 = t18904 * t18992;
t18905 = t19013 * t19253 - t19286;
t19467 = t18905 * t18993;
t18906 = t19013 * t19252 - t19285;
t19466 = t18906 * t18994;
t19465 = t18908 * t19005;
t19464 = t18909 * t19005;
t19463 = t18910 * t19005;
t19462 = t18911 * t19005;
t19461 = t18912 * t19005;
t19460 = t18913 * t19005;
t18914 = t19001 * t19062 + t19004 * t19056;
t19459 = t18914 * t18989;
t19458 = t18914 * t18995;
t18915 = t19001 * t19063 + t19004 * t19057;
t19457 = t18915 * t18990;
t19456 = t18915 * t18996;
t18916 = t19001 * t19064 + t19004 * t19058;
t19455 = t18916 * t18991;
t18917 = t19001 * t19065 + t19004 * t19059;
t19454 = t18917 * t18992;
t18918 = t19001 * t19066 + t19004 * t19060;
t19453 = t18918 * t18993;
t18919 = t19001 * t19067 + t19004 * t19061;
t19452 = t18919 * t18994;
t19451 = t18923 * t19029;
t19450 = t18923 * t19030;
t19449 = t18923 * t19031;
t19448 = t18923 * t19041;
t19447 = t18923 * t19042;
t19446 = t18923 * t19043;
t19439 = t18965 * t19011;
t19438 = t18966 * t19011;
t19437 = t18967 * t19011;
t19435 = t18968 * t19011;
t19434 = t18969 * t19011;
t19432 = t18970 * t19011;
t19429 = t18971 * t19008;
t19428 = t18971 * t19011;
t19427 = t18971 * t19013;
t19424 = t18972 * t19008;
t19423 = t18972 * t19011;
t19422 = t18972 * t19013;
t19419 = t18973 * t19008;
t19418 = t18973 * t19011;
t19417 = t18973 * t19013;
t19414 = t18974 * t19008;
t19413 = t18974 * t19011;
t19412 = t18974 * t19013;
t19409 = t18975 * t19008;
t19408 = t18975 * t19011;
t19407 = t18975 * t19013;
t19404 = t18976 * t19008;
t19403 = t18976 * t19011;
t19402 = t18976 * t19013;
t19401 = t18977 * t19011;
t19400 = t18978 * t19011;
t19399 = t18979 * t19011;
t19398 = t18980 * t19011;
t19397 = t18981 * t19011;
t19396 = t18982 * t19011;
t19393 = t18983 * t19008;
t19392 = t18983 * t19011;
t19391 = t18983 * t19013;
t19388 = t18984 * t19008;
t19387 = t18984 * t19011;
t19386 = t18984 * t19013;
t19383 = t18985 * t19008;
t19382 = t18985 * t19011;
t19381 = t18985 * t19013;
t19378 = t18986 * t19008;
t19377 = t18986 * t19011;
t19376 = t18986 * t19013;
t19373 = t18987 * t19008;
t19372 = t18987 * t19011;
t19371 = t18987 * t19013;
t19368 = t18988 * t19008;
t19367 = t18988 * t19011;
t19366 = t18988 * t19013;
t19364 = t18989 * t19008;
t19363 = t18989 * t19011;
t19362 = t18989 * t19013;
t19359 = t18990 * t19008;
t19358 = t18990 * t19011;
t19357 = t18990 * t19013;
t19354 = t18991 * t19008;
t19353 = t18991 * t19011;
t19352 = t18991 * t19013;
t19350 = t18992 * t19008;
t19349 = t18992 * t19011;
t19348 = t18992 * t19013;
t19346 = t18993 * t19008;
t19345 = t18993 * t19011;
t19344 = t18993 * t19013;
t19342 = t18994 * t19008;
t19341 = t18994 * t19011;
t19340 = t18994 * t19013;
t19336 = t18997 * t19612;
t19334 = t18998 * t19613;
t19332 = t18999 * t19614;
t19330 = t19000 * t19615;
t19049 = xP(4);
t19003 = sin(t19049);
t19328 = t19001 * t19003;
t19006 = cos(t19049);
t19327 = t19001 * t19006;
t19326 = t19003 * t19004;
t19325 = t19003 * t19005;
t19324 = t19003 * t19056;
t19323 = t19003 * t19057;
t19322 = t19003 * t19058;
t19321 = t19003 * t19059;
t19320 = t19003 * t19060;
t19319 = t19003 * t19061;
t19318 = t19003 * t19062;
t19317 = t19003 * t19063;
t19316 = t19003 * t19064;
t19315 = t19003 * t19065;
t19314 = t19003 * t19066;
t19313 = t19003 * t19067;
t19312 = t19004 * t19006;
t19311 = t19005 * t19006;
t19304 = t19006 * t19056;
t19303 = t19006 * t19057;
t19302 = t19006 * t19058;
t19301 = t19006 * t19059;
t19300 = t19006 * t19060;
t19299 = t19006 * t19061;
t19298 = t19006 * t19062;
t19297 = t19006 * t19063;
t19296 = t19006 * t19064;
t19295 = t19006 * t19065;
t19294 = t19006 * t19066;
t19293 = t19006 * t19067;
t19291 = t19008 * t19016;
t19263 = t19016 * t18995;
t19262 = t19016 * t18996;
t19261 = t19016 * t18997;
t19260 = t19016 * t18998;
t19259 = t19016 * t18999;
t19258 = t19016 * t19000;
t19245 = (t19002 * t19318 + t19304) * t19004 + t19001 * (-t19002 * t19324 + t19298);
t19244 = (t19002 * t19317 + t19303) * t19004 + t19001 * (-t19002 * t19323 + t19297);
t19243 = (t19002 * t19316 + t19302) * t19004 + t19001 * (-t19002 * t19322 + t19296);
t19242 = (t19002 * t19315 + t19301) * t19004 + t19001 * (-t19002 * t19321 + t19295);
t19241 = (t19002 * t19314 + t19300) * t19004 + t19001 * (-t19002 * t19320 + t19294);
t19240 = (t19002 * t19313 + t19299) * t19004 + t19001 * (-t19002 * t19319 + t19293);
t19232 = t18995 * t19529;
t19231 = t18996 * t19527;
t19230 = t18997 * t19525;
t19229 = t18998 * t19523;
t19228 = t18999 * t19521;
t19227 = t19000 * t19519;
t19219 = t18955 * t19363;
t19218 = t18956 * t19358;
t19217 = t18957 * t19353;
t19216 = t18958 * t19349;
t19215 = t18959 * t19345;
t19214 = t18960 * t19341;
t19191 = -(t19002 * t19304 + t19318) * t19001 + (t19002 * t19298 - t19324) * t19004;
t19190 = -(t19002 * t19303 + t19317) * t19001 + (t19002 * t19297 - t19323) * t19004;
t19189 = -(t19002 * t19302 + t19316) * t19001 + (t19002 * t19296 - t19322) * t19004;
t19188 = -(t19002 * t19301 + t19315) * t19001 + (t19002 * t19295 - t19321) * t19004;
t19187 = -(t19002 * t19300 + t19314) * t19001 + (t19002 * t19294 - t19320) * t19004;
t19186 = -(t19002 * t19299 + t19313) * t19001 + (t19002 * t19293 - t19319) * t19004;
t18137 = (t18503 * t19491 + t18914 * t19200) * t18977 + (t18503 * t18914 - t19200 * t19491) * t18965 - t19239 * t19490;
t18138 = (t18504 * t19489 + t18915 * t19199) * t18978 + (t18504 * t18915 - t19199 * t19489) * t18966 - t19238 * t19488;
t18139 = (t18505 * t19487 + t18916 * t19198) * t18979 + (t18505 * t18916 - t19198 * t19487) * t18967 - t18753 * t19514;
t18140 = (t18509 * t19486 + t18917 * t19197) * t18980 + (t18509 * t18917 - t19197 * t19486) * t18968 - t18754 * t19512;
t18141 = (t18510 * t19485 + t18918 * t19196) * t18981 + (t18510 * t18918 - t19196 * t19485) * t18969 - t18755 * t19510;
t18142 = (t18511 * t19484 + t18919 * t19195) * t18982 + (t18511 * t18919 - t19195 * t19484) * t18970 - t18756 * t19508;
t18143 = (-t18503 * t19459 + t18751 * t19200) * t18977 + (t18503 * t18751 + t19200 * t19459) * t18965 + t19239 * t19458;
t18144 = (-t18504 * t19457 + t18752 * t19199) * t18978 + (t18504 * t18752 + t19199 * t19457) * t18966 + t19238 * t19456;
t18145 = (-t18505 * t19455 + t18753 * t19198) * t18979 + (t18505 * t18753 + t19198 * t19455) * t18967 + t18916 * t19514;
t18146 = (-t18509 * t19454 + t18754 * t19197) * t18980 + (t18509 * t18754 + t19197 * t19454) * t18968 + t18917 * t19512;
t18147 = (-t18510 * t19453 + t18755 * t19196) * t18981 + (t18510 * t18755 + t19196 * t19453) * t18969 + t18918 * t19510;
t18148 = (-t18511 * t19452 + t18756 * t19195) * t18982 + (t18511 * t18756 + t19195 * t19452) * t18970 + t18919 * t19508;
t18185 = (-t18592 * t18914 + t19491 * t19649) * t18977 + (t18592 * t19491 + t18914 * t19649) * t18965 - t19610 * t19490;
t18186 = (-t18593 * t18915 + t19489 * t19648) * t18978 + (t18593 * t19489 + t18915 * t19648) * t18966 - t19611 * t19488;
t18187 = (-t18594 * t18916 + t19487 * t19647) * t18979 + (t18594 * t19487 + t18916 * t19647) * t18967 - t18753 * t19336;
t18188 = (-t18598 * t18917 + t19486 * t19646) * t18980 + (t18598 * t19486 + t18917 * t19646) * t18968 - t18754 * t19334;
t18189 = (-t18599 * t18918 + t19485 * t19645) * t18981 + (t18599 * t19485 + t18918 * t19645) * t18969 - t18755 * t19332;
t18190 = (-t18600 * t18919 + t19484 * t19644) * t18982 + (t18600 * t19484 + t18919 * t19644) * t18970 - t18756 * t19330;
t18191 = (t18592 * t18751 + t19459 * t19649) * t18977 + (t18592 * t19459 - t18751 * t19649) * t18965 - t19610 * t19458;
t18192 = (t18593 * t18752 + t19457 * t19648) * t18978 + (t18593 * t19457 - t18752 * t19648) * t18966 - t19611 * t19456;
t18193 = (t18594 * t18753 + t19455 * t19647) * t18979 + (t18594 * t19455 - t18753 * t19647) * t18967 - t18916 * t19336;
t18194 = (t18598 * t18754 + t19454 * t19646) * t18980 + (t18598 * t19454 - t18754 * t19646) * t18968 - t18917 * t19334;
t18195 = (t18599 * t18755 + t19453 * t19645) * t18981 + (t18599 * t19453 - t18755 * t19645) * t18969 - t18918 * t19332;
t18196 = (t18600 * t18756 + t19452 * t19644) * t18982 + (t18600 * t19452 - t18756 * t19644) * t18970 - t18919 * t19330;
t18284 = t18751 * t19263 + ((-t18751 * t19364 + t18914 * t19013) * t18977 - (t18751 * t19362 + t18914 * t19008) * t18965) * t19011;
t18285 = t18752 * t19262 + ((-t18752 * t19359 + t18915 * t19013) * t18978 - (t18752 * t19357 + t18915 * t19008) * t18966) * t19011;
t18286 = t18753 * t19261 + ((-t18753 * t19354 + t18916 * t19013) * t18979 - (t18753 * t19352 + t18916 * t19008) * t18967) * t19011;
t18287 = t18754 * t19260 + ((-t18754 * t19350 + t18917 * t19013) * t18980 - (t18754 * t19348 + t18917 * t19008) * t18968) * t19011;
t18288 = t18755 * t19259 + ((-t18755 * t19346 + t18918 * t19013) * t18981 - (t18755 * t19344 + t18918 * t19008) * t18969) * t19011;
t18289 = t18756 * t19258 + ((-t18756 * t19342 + t18919 * t19013) * t18982 - (t18756 * t19340 + t18919 * t19008) * t18970) * t19011;
t18290 = -t18914 * t19263 + ((t18751 * t19013 + t18914 * t19364) * t18977 + (-t18751 * t19008 + t18914 * t19362) * t18965) * t19011;
t18291 = -t18915 * t19262 + ((t18752 * t19013 + t18915 * t19359) * t18978 + (-t18752 * t19008 + t18915 * t19357) * t18966) * t19011;
t18292 = -t18916 * t19261 + ((t18753 * t19013 + t18916 * t19354) * t18979 + (-t18753 * t19008 + t18916 * t19352) * t18967) * t19011;
t18293 = -t18917 * t19260 + ((t18754 * t19013 + t18917 * t19350) * t18980 + (-t18754 * t19008 + t18917 * t19348) * t18968) * t19011;
t18294 = -t18918 * t19259 + ((t18755 * t19013 + t18918 * t19346) * t18981 + (-t18755 * t19008 + t18918 * t19344) * t18969) * t19011;
t18295 = -t18919 * t19258 + ((t18756 * t19013 + t18919 * t19342) * t18982 + (-t18756 * t19008 + t18919 * t19340) * t18970) * t19011;
t19157 = -(((t18190 * t19003 + t18196 * t19006) * t18988 - t18976 * (t18190 * t19006 - t18196 * t19003)) * t19007 + ((-t18142 * t19003 + t18148 * t19006) * t18988 + (t18142 * t19006 + t18148 * t19003) * t18976) * t19015 + ((-t18289 * t19003 + t18295 * t19006) * t18988 + t18976 * (t18289 * t19006 + t18295 * t19003)) * t18960) * t19518 - (((t18189 * t19003 + t18195 * t19006) * t18987 - t18975 * (t18189 * t19006 - t18195 * t19003)) * t19007 + ((-t18141 * t19003 + t18147 * t19006) * t18987 + (t18141 * t19006 + t18147 * t19003) * t18975) * t19015 + ((-t18288 * t19003 + t18294 * t19006) * t18987 + t18975 * (t18288 * t19006 + t18294 * t19003)) * t18959) * t19520 - (((t18188 * t19003 + t18194 * t19006) * t18986 - t18974 * (t18188 * t19006 - t18194 * t19003)) * t19007 + ((-t18140 * t19003 + t18146 * t19006) * t18986 + (t18140 * t19006 + t18146 * t19003) * t18974) * t19015 + ((-t18287 * t19003 + t18293 * t19006) * t18986 + t18974 * (t18287 * t19006 + t18293 * t19003)) * t18958) * t19522 - (((t18187 * t19003 + t18193 * t19006) * t18985 - t18973 * (t18187 * t19006 - t18193 * t19003)) * t19007 + ((-t18139 * t19003 + t18145 * t19006) * t18985 + (t18139 * t19006 + t18145 * t19003) * t18973) * t19015 + ((-t18286 * t19003 + t18292 * t19006) * t18985 + t18973 * (t18286 * t19006 + t18292 * t19003)) * t18957) * t19524 - (((t18186 * t19003 + t18192 * t19006) * t18984 - t18972 * (t18186 * t19006 - t18192 * t19003)) * t19007 + ((-t18138 * t19003 + t18144 * t19006) * t18984 + (t18138 * t19006 + t18144 * t19003) * t18972) * t19015 + ((-t18285 * t19003 + t18291 * t19006) * t18984 + t18972 * (t18285 * t19006 + t18291 * t19003)) * t18956) * t19526 - (((t18185 * t19003 + t18191 * t19006) * t18983 - t18971 * (t18185 * t19006 - t18191 * t19003)) * t19007 + ((-t18137 * t19003 + t18143 * t19006) * t18983 + (t18137 * t19006 + t18143 * t19003) * t18971) * t19015 + ((-t18284 * t19003 + t18290 * t19006) * t18983 + t18971 * (t18284 * t19006 + t18290 * t19003)) * t18955) * t19528;
t19068 = t19005 * t19074;
t19069 = t19005 * t19075;
t19070 = t19005 * t19076;
t19071 = t19005 * t19077;
t19072 = t19005 * t19078;
t19073 = t19005 * t19079;
t19110 = t18588 * t18988;
t18427 = t18732 * t18976 + t18994 * t19110;
t19111 = t18588 * t18976;
t18469 = t18732 * t19370 - t19111;
t19123 = -t18976 * t19043 + t18988 * t19208;
t18532 = -t18923 * t19123 - t18988 * t19214;
t19125 = t18976 * t19252 + t18988 * t19339;
t18543 = -t18923 * t19125 - t18960 * t19403;
t19080 = (-(t18532 * t19013 - t18543 * t19008) * t18970 - (t18532 * t19008 + t18543 * t19013) * t18982 + t18988 * t19330) * t19007 + (-(t18427 * t19013 + t18469 * t19008) * t18970 + (-t18427 * t19008 + t18469 * t19013) * t18982 - t19234 * t19369) * t19015 + (-(t18988 * t19342 + t19402) * t19396 - (t18988 * t19340 - t19404) * t19432 + t18988 * t19258) * t18960;
t19112 = t18586 * t18987;
t18426 = t18731 * t18975 + t18993 * t19112;
t19113 = t18586 * t18975;
t18468 = t18731 * t19375 - t19113;
t19127 = -t18975 * t19042 + t18987 * t19209;
t18530 = -t18923 * t19127 - t18987 * t19215;
t19129 = t18975 * t19253 + t18987 * t19343;
t18541 = -t18923 * t19129 - t18959 * t19408;
t19082 = (-(t18530 * t19013 - t18541 * t19008) * t18969 - (t18530 * t19008 + t18541 * t19013) * t18981 + t18987 * t19332) * t19007 + (-(t18426 * t19013 + t18468 * t19008) * t18969 + (-t18426 * t19008 + t18468 * t19013) * t18981 - t19235 * t19374) * t19015 + (-(t18987 * t19346 + t19407) * t19397 - (t18987 * t19344 - t19409) * t19434 + t18987 * t19259) * t18959;
t19114 = t18584 * t18986;
t18425 = t18730 * t18974 + t18992 * t19114;
t19115 = t18584 * t18974;
t18467 = t18730 * t19380 - t19115;
t19131 = -t18974 * t19041 + t18986 * t19210;
t18528 = -t18923 * t19131 - t18986 * t19216;
t19133 = t18974 * t19254 + t18986 * t19347;
t18539 = -t18923 * t19133 - t18958 * t19413;
t19084 = (-(t18528 * t19013 - t18539 * t19008) * t18968 - (t18528 * t19008 + t18539 * t19013) * t18980 + t18986 * t19334) * t19007 + (-(t18425 * t19013 + t18467 * t19008) * t18968 + (-t18425 * t19008 + t18467 * t19013) * t18980 - t19236 * t19379) * t19015 + (-(t18986 * t19350 + t19412) * t19398 - (t18986 * t19348 - t19414) * t19435 + t18986 * t19260) * t18958;
t19116 = t18579 * t18985;
t18421 = t18726 * t18973 + t18991 * t19116;
t19117 = t18579 * t18973;
t18454 = t18726 * t19385 - t19117;
t19135 = -t18973 * t19031 + t18985 * t19211;
t18526 = -t18923 * t19135 - t18985 * t19217;
t19137 = t18973 * t19255 + t18985 * t19351;
t18537 = -t18923 * t19137 - t18957 * t19418;
t19086 = (-(t18526 * t19013 - t18537 * t19008) * t18967 - (t18526 * t19008 + t18537 * t19013) * t18979 + t18985 * t19336) * t19007 + (-(t18421 * t19013 + t18454 * t19008) * t18967 + (-t18421 * t19008 + t18454 * t19013) * t18979 - t19237 * t19384) * t19015 + (-(t18985 * t19354 + t19417) * t19399 - (t18985 * t19352 - t19419) * t19437 + t18985 * t19261) * t18957;
t19118 = t18577 * t18984;
t18420 = t18725 * t18972 + t18990 * t19118;
t19119 = t18577 * t18972;
t18453 = t18725 * t19390 - t19119;
t19139 = -t18972 * t19030 + t18984 * t19212;
t18524 = -t18923 * t19139 - t18984 * t19218;
t19141 = t18972 * t19256 + t18984 * t19356;
t18535 = -t18923 * t19141 - t18956 * t19423;
t19088 = (-(t18524 * t19013 - t18535 * t19008) * t18966 - (t18524 * t19008 + t18535 * t19013) * t18978 + t19611 * t19389) * t19007 + (-(t18420 * t19013 + t18453 * t19008) * t18966 + (-t18420 * t19008 + t18453 * t19013) * t18978 - t19238 * t19389) * t19015 + (-(t18984 * t19359 + t19422) * t19400 - (t18984 * t19357 - t19424) * t19438 + t18984 * t19262) * t18956;
t19120 = t18575 * t18983;
t18419 = t18724 * t18971 + t18989 * t19120;
t19121 = t18575 * t18971;
t18452 = t18724 * t19395 - t19121;
t19143 = -t18971 * t19029 + t18983 * t19213;
t18522 = -t18923 * t19143 - t18983 * t19219;
t19145 = t18971 * t19257 + t18983 * t19361;
t18533 = -t18923 * t19145 - t18955 * t19428;
t19090 = (-(t18522 * t19013 - t18533 * t19008) * t18965 - (t18522 * t19008 + t18533 * t19013) * t18977 + t19610 * t19394) * t19007 + (-(t18419 * t19013 + t18452 * t19008) * t18965 + (-t18419 * t19008 + t18452 * t19013) * t18977 - t19239 * t19394) * t19015 + (-(t18983 * t19364 + t19427) * t19401 - (t18983 * t19362 - t19429) * t19439 + t18983 * t19263) * t18955;
t19156 = -(t19080 * t19460 + t19074 * t19186 + (t19002 * t19080 - t19006 * t19068) * t19055) * t19518 - (t19082 * t19461 + t19075 * t19187 + (t19002 * t19082 - t19006 * t19069) * t19054) * t19520 - (t19084 * t19462 + t19076 * t19188 + (t19002 * t19084 - t19006 * t19070) * t19053) * t19522 - (t19086 * t19463 + t19077 * t19189 + (t19002 * t19086 - t19006 * t19071) * t19052) * t19524 - (t19088 * t19464 + t19078 * t19190 + (t19002 * t19088 - t19006 * t19072) * t19051) * t19526 - (t19090 * t19465 + t19079 * t19191 + (t19002 * t19090 - t19006 * t19073) * t19050) * t19528;
t18424 = t18732 * t18988 - t18994 * t19111;
t18472 = t18732 * t19406 + t19110;
t19122 = t18976 * t19208 + t18988 * t19043;
t18531 = -t18923 * t19122 - t18976 * t19214;
t19124 = t18976 * t19339 - t18988 * t19252;
t18544 = t18923 * t19124 - t18960 * t19367;
t19081 = (-(t18531 * t19013 + t18544 * t19008) * t18970 + (-t18531 * t19008 + t18544 * t19013) * t18982 + t18976 * t19330) * t19007 + ((t18424 * t19013 - t18472 * t19008) * t18970 + (t18424 * t19008 + t18472 * t19013) * t18982 - t19234 * t19405) * t19015 + ((-t18976 * t19342 + t19366) * t19396 - (t18976 * t19340 + t19368) * t19432 + t18976 * t19258) * t18960;
t18423 = t18731 * t18987 - t18993 * t19113;
t18471 = t18731 * t19411 + t19112;
t19126 = t18975 * t19209 + t18987 * t19042;
t18529 = -t18923 * t19126 - t18975 * t19215;
t19128 = t18975 * t19343 - t18987 * t19253;
t18542 = t18923 * t19128 - t18959 * t19372;
t19083 = (-(t18529 * t19013 + t18542 * t19008) * t18969 + (-t18529 * t19008 + t18542 * t19013) * t18981 + t18975 * t19332) * t19007 + ((t18423 * t19013 - t18471 * t19008) * t18969 + (t18423 * t19008 + t18471 * t19013) * t18981 - t19235 * t19410) * t19015 + ((-t18975 * t19346 + t19371) * t19397 - (t18975 * t19344 + t19373) * t19434 + t18975 * t19259) * t18959;
t18422 = t18730 * t18986 - t18992 * t19115;
t18470 = t18730 * t19416 + t19114;
t19130 = t18974 * t19210 + t18986 * t19041;
t18527 = -t18923 * t19130 - t18974 * t19216;
t19132 = t18974 * t19347 - t18986 * t19254;
t18540 = t18923 * t19132 - t18958 * t19377;
t19085 = (-(t18527 * t19013 + t18540 * t19008) * t18968 + (-t18527 * t19008 + t18540 * t19013) * t18980 + t18974 * t19334) * t19007 + ((t18422 * t19013 - t18470 * t19008) * t18968 + (t18422 * t19008 + t18470 * t19013) * t18980 - t19236 * t19415) * t19015 + ((-t18974 * t19350 + t19376) * t19398 - (t18974 * t19348 + t19378) * t19435 + t18974 * t19260) * t18958;
t18418 = t18726 * t18985 - t18991 * t19117;
t18457 = t18726 * t19421 + t19116;
t19134 = t18973 * t19211 + t18985 * t19031;
t18525 = -t18923 * t19134 - t18973 * t19217;
t19136 = t18973 * t19351 - t18985 * t19255;
t18538 = t18923 * t19136 - t18957 * t19382;
t19087 = (-(t18525 * t19013 + t18538 * t19008) * t18967 + (-t18525 * t19008 + t18538 * t19013) * t18979 + t18973 * t19336) * t19007 + ((t18418 * t19013 - t18457 * t19008) * t18967 + (t18418 * t19008 + t18457 * t19013) * t18979 - t19237 * t19420) * t19015 + ((-t18973 * t19354 + t19381) * t19399 - (t18973 * t19352 + t19383) * t19437 + t18973 * t19261) * t18957;
t18417 = t18725 * t18984 - t18990 * t19119;
t18456 = t18725 * t19426 + t19118;
t19138 = t18972 * t19212 + t18984 * t19030;
t18523 = -t18923 * t19138 - t18972 * t19218;
t19140 = t18972 * t19356 - t18984 * t19256;
t18536 = t18923 * t19140 - t18956 * t19387;
t19089 = (-(t18523 * t19013 + t18536 * t19008) * t18966 + (-t18523 * t19008 + t18536 * t19013) * t18978 + t19611 * t19425) * t19007 + ((t18417 * t19013 - t18456 * t19008) * t18966 + (t18417 * t19008 + t18456 * t19013) * t18978 - t19238 * t19425) * t19015 + ((-t18972 * t19359 + t19386) * t19400 - (t18972 * t19357 + t19388) * t19438 + t18972 * t19262) * t18956;
t18416 = t18724 * t18983 - t18989 * t19121;
t18455 = t18724 * t19431 + t19120;
t19142 = t18971 * t19213 + t18983 * t19029;
t18521 = -t18923 * t19142 - t18971 * t19219;
t19144 = t18971 * t19361 - t18983 * t19257;
t18534 = t18923 * t19144 - t18955 * t19392;
t19091 = (-(t18521 * t19013 + t18534 * t19008) * t18965 + (-t18521 * t19008 + t18534 * t19013) * t18977 + t19610 * t19430) * t19007 + ((t18416 * t19013 - t18455 * t19008) * t18965 + (t18416 * t19008 + t18455 * t19013) * t18977 - t19239 * t19430) * t19015 + ((-t18971 * t19364 + t19391) * t19401 - (t18971 * t19362 + t19393) * t19439 + t18971 * t19263) * t18955;
t19155 = -(t19081 * t19460 + t19074 * t19240 + (t19002 * t19081 - t19003 * t19068) * t19055) * t19518 - (t19083 * t19461 + t19075 * t19241 + (t19002 * t19083 - t19003 * t19069) * t19054) * t19520 - (t19085 * t19462 + t19076 * t19242 + (t19002 * t19085 - t19003 * t19070) * t19053) * t19522 - (t19087 * t19463 + t19077 * t19243 + (t19002 * t19087 - t19003 * t19071) * t19052) * t19524 - (t19089 * t19464 + t19078 * t19244 + (t19002 * t19089 - t19003 * t19072) * t19051) * t19526 - (t19091 * t19465 + t19079 * t19245 + (t19002 * t19091 - t19003 * t19073) * t19050) * t19528;
t18784 = t19008 * t19226;
t18479 = -t18721 * t19291 + t18703 - t18784;
t18209 = -t19239 * t18995 + (t18479 * t18977 - t19628) * t18989;
t18480 = -t18722 * t19291 + t18704 - t18784;
t18210 = -t19238 * t18996 + (t18480 * t18978 - t19627) * t18990;
t18481 = -t18723 * t19291 + t18705 - t18784;
t18211 = -t19514 + (t18481 * t18979 - t19626) * t18991;
t18497 = -t18727 * t19291 + t18712 - t18784;
t18212 = -t19512 + (t18497 * t18980 - t19625) * t18992;
t18498 = -t18728 * t19291 + t18713 - t18784;
t18213 = -t19510 + (t18498 * t18981 - t19624) * t18993;
t18499 = -t18729 * t19291 + t18714 - t18784;
t18214 = -t19508 + (t18499 * t18982 - t19623) * t18994;
t18260 = t18479 * t18965 + t18977 * t19200;
t18261 = t18480 * t18966 + t18978 * t19199;
t18262 = t18481 * t18967 + t18979 * t19198;
t18263 = t18497 * t18968 + t18980 * t19197;
t18264 = t18498 * t18969 + t18981 * t19196;
t18265 = t18499 * t18970 + t18982 * t19195;
t18548 = -t18884 * t18923 - t18955 * t19284;
t18278 = -t19610 * t18995 + (t18548 * t18965 + t19706) * t18989;
t18550 = -t18885 * t18923 - t18956 * t19284;
t18279 = -t19611 * t18996 + (t18550 * t18966 + t19705) * t18990;
t18552 = -t18886 * t18923 - t18957 * t19284;
t18280 = -t19336 + (t18552 * t18967 + t19704) * t18991;
t18566 = -t18904 * t18923 - t18958 * t19284;
t18281 = -t19334 + (t18566 * t18968 + t19703) * t18992;
t18568 = -t18905 * t18923 - t18959 * t19284;
t18282 = -t19332 + (t18568 * t18969 + t19702) * t18993;
t18570 = -t18906 * t18923 - t18960 * t19284;
t18283 = -t19330 + (t18570 * t18970 + t19701) * t18994;
t18359 = t18548 * t18977 - t18965 * t19649;
t18360 = t18550 * t18978 - t18966 * t19648;
t18361 = t18552 * t18979 - t18967 * t19647;
t18362 = t18566 * t18980 - t18968 * t19646;
t18363 = t18568 * t18981 - t18969 * t19645;
t18364 = t18570 * t18982 - t18970 * t19644;
t18691 = -t18857 * t19363 + t19263;
t18692 = -t18858 * t19358 + t19262;
t18693 = -t18859 * t19353 + t19261;
t18694 = -t18860 * t19349 + t19260;
t18695 = -t18861 * t19345 + t19259;
t18696 = -t18862 * t19341 + t19258;
t19154 = -((t18283 * t18988 + t18364 * t18976) * t19007 + (-t18214 * t18988 + t18265 * t18976) * t19015 - t18960 * (t18696 * t18988 - t18868 * t19403)) * t19518 - ((t18282 * t18987 + t18363 * t18975) * t19007 + (-t18213 * t18987 + t18264 * t18975) * t19015 - t18959 * (t18695 * t18987 - t18867 * t19408)) * t19520 - ((t18281 * t18986 + t18362 * t18974) * t19007 + (-t18212 * t18986 + t18263 * t18974) * t19015 - t18958 * (t18694 * t18986 - t18866 * t19413)) * t19522 - ((t18280 * t18985 + t18361 * t18973) * t19007 + (-t18211 * t18985 + t18262 * t18973) * t19015 - t18957 * (t18693 * t18985 - t18865 * t19418)) * t19524 - ((t18279 * t18984 + t18360 * t18972) * t19007 + (-t18210 * t18984 + t18261 * t18972) * t19015 - t18956 * (t18692 * t18984 - t18864 * t19423)) * t19526 - ((t18278 * t18983 + t18359 * t18971) * t19007 + (-t18209 * t18983 + t18260 * t18971) * t19015 - t18955 * (t18691 * t18983 - t18863 * t19428)) * t19528;
t19153 = -((-t18283 * t18976 + t18364 * t18988) * t19007 + (t18214 * t18976 + t18265 * t18988) * t19015 + t18960 * (t18696 * t18976 + t18868 * t19367)) * t19518 - ((-t18282 * t18975 + t18363 * t18987) * t19007 + (t18213 * t18975 + t18264 * t18987) * t19015 + t18959 * (t18695 * t18975 + t18867 * t19372)) * t19520 - ((-t18281 * t18974 + t18362 * t18986) * t19007 + (t18212 * t18974 + t18263 * t18986) * t19015 + t18958 * (t18694 * t18974 + t18866 * t19377)) * t19522 - ((-t18280 * t18973 + t18361 * t18985) * t19007 + (t18211 * t18973 + t18262 * t18985) * t19015 + t18957 * (t18693 * t18973 + t18865 * t19382)) * t19524 - ((-t18279 * t18972 + t18360 * t18984) * t19007 + (t18210 * t18972 + t18261 * t18984) * t19015 + t18956 * (t18692 * t18972 + t18864 * t19387)) * t19526 - ((-t18278 * t18971 + t18359 * t18983) * t19007 + (t18209 * t18971 + t18260 * t18983) * t19015 + t18955 * (t18691 * t18971 + t18863 * t19392)) * t19528;
t19152 = -(((t18862 * t19158 + t18868 * t19446) * t19000 - t19689) * t19007 + ((-t18588 * t18862 + t18732 * t18868) * t19000 + t19509) * t19015 - t18960 * (t18862 * t19000 * t19011 + t19264)) * t19518 - (((t18861 * t19159 + t18867 * t19447) * t18999 - t19690) * t19007 + ((-t18586 * t18861 + t18731 * t18867) * t18999 + t19511) * t19015 - t18959 * (t18861 * t18999 * t19011 + t19265)) * t19520 - (((t18860 * t19160 + t18866 * t19448) * t18998 - t19691) * t19007 + ((-t18584 * t18860 + t18730 * t18866) * t18998 + t19513) * t19015 - t18958 * (t18860 * t18998 * t19011 + t19266)) * t19522 - (((t18859 * t19161 + t18865 * t19449) * t18997 - t19692) * t19007 + ((-t18579 * t18859 + t18726 * t18865) * t18997 + t19515) * t19015 - t18957 * (t18859 * t18997 * t19011 + t19267)) * t19524 - (((t18858 * t19162 + t18864 * t19450) * t18996 - t19693) * t19007 + ((-t18577 * t18858 + t18725 * t18864) * t18996 + t19516) * t19015 - t18956 * (t18858 * t18996 * t19011 + t19268)) * t19526 - (((t18857 * t19163 + t18863 * t19451) * t18995 - t19694) * t19007 + ((-t18575 * t18857 + t18724 * t18863) * t18995 + t19517) * t19015 - t18955 * (t18857 * t18995 * t19011 + t19269)) * t19528;
t18806 = -t19002 * t19312 + t19328;
t18805 = t19002 * t19327 + t19326;
t18804 = t19002 * t19326 + t19327;
t18803 = -t19002 * t19328 + t19312;
t18781 = g(1) * t19002 - g(2) * t19325 + g(3) * t19311;
t18780 = t19002 * t19055 + t19460;
t18779 = t19002 * t19054 + t19461;
t18778 = t19002 * t19053 + t19462;
t18777 = t19002 * t19052 + t19463;
t18776 = t19002 * t19051 + t19464;
t18775 = t19002 * t19050 + t19465;
t18618 = t18756 * t19006 - t18919 * t19003;
t18617 = t18755 * t19006 - t18918 * t19003;
t18616 = t18754 * t19006 - t18917 * t19003;
t18615 = t18753 * t19006 - t18916 * t19003;
t18614 = t18752 * t19006 - t18915 * t19003;
t18613 = t18751 * t19006 - t18914 * t19003;
t18612 = t18756 * t19003 + t18919 * t19006;
t18611 = t18755 * t19003 + t18918 * t19006;
t18610 = t18754 * t19003 + t18917 * t19006;
t18609 = t18753 * t19003 + t18916 * t19006;
t18608 = t18752 * t19003 + t18915 * t19006;
t18607 = t18751 * t19003 + t18914 * t19006;
t18564 = -t19006 * t19305 + t19186;
t18563 = -t19003 * t19305 + t19240;
t18562 = -t19006 * t19306 + t19187;
t18561 = -t19003 * t19306 + t19241;
t18560 = -t19006 * t19307 + t19188;
t18559 = -t19003 * t19307 + t19242;
t18558 = -t19006 * t19308 + t19189;
t18557 = -t19003 * t19308 + t19243;
t18556 = -t19006 * t19309 + t19190;
t18555 = -t19003 * t19309 + t19244;
t18554 = -t19006 * t19310 + t19191;
t18553 = -t19003 * t19310 + t19245;
t18546 = g(2) * t18804 + g(3) * t18806 + t19004 * t19588;
t18545 = -t18803 * g(2) - t18805 * g(3) + t19001 * t19588;
t18496 = t18564 * t19000 - t18780 * t19370;
t18495 = t18563 * t19000 - t18780 * t19406;
t18494 = t18562 * t18999 - t18779 * t19375;
t18493 = t18561 * t18999 - t18779 * t19411;
t18492 = t18560 * t18998 - t18778 * t19380;
t18491 = t18559 * t18998 - t18778 * t19416;
t18490 = t18558 * t18997 - t18777 * t19385;
t18489 = t18557 * t18997 - t18777 * t19421;
t18488 = t18556 * t18996 - t18776 * t19390;
t18487 = t18555 * t18996 - t18776 * t19426;
t18486 = t18554 * t18995 - t18775 * t19395;
t18485 = t18553 * t18995 - t18775 * t19431;
t18412 = -t18564 * t19329 + t18780 * t19125;
t18411 = t18563 * t19329 - t18780 * t19124;
t18410 = -t18562 * t19331 + t18779 * t19129;
t18409 = t18561 * t19331 - t18779 * t19128;
t18408 = -t18560 * t19333 + t18778 * t19133;
t18407 = t18559 * t19333 - t18778 * t19132;
t18406 = -t18556 * t19337 + t18776 * t19141;
t18405 = -t18558 * t19335 + t18777 * t19137;
t18404 = t18557 * t19335 - t18777 * t19136;
t18403 = t18555 * t19337 - t18776 * t19140;
t18402 = -t18554 * t19338 + t18775 * t19145;
t18401 = t18553 * t19338 - t18775 * t19144;
t18400 = t18612 * t19008 + t18618 * t19340;
t18399 = t18610 * t19008 + t18616 * t19348;
t18398 = t18608 * t19008 + t18614 * t19357;
t18397 = t18607 * t19008 + t18613 * t19362;
t18396 = t18610 * t19348 - t18616 * t19008;
t18395 = t18611 * t19008 + t18617 * t19344;
t18394 = t18609 * t19008 + t18615 * t19352;
t18393 = t18612 * t19340 - t18618 * t19008;
t18392 = t18611 * t19344 - t18617 * t19008;
t18391 = t18609 * t19352 - t18615 * t19008;
t18390 = t18608 * t19357 - t18614 * t19008;
t18389 = t18607 * t19362 - t18613 * t19008;
t18388 = -t18612 * t19013 + t18618 * t19342;
t18387 = -t18611 * t19013 + t18617 * t19346;
t18386 = -t18610 * t19013 + t18616 * t19350;
t18385 = -t18609 * t19013 + t18615 * t19354;
t18384 = -t18608 * t19013 + t18614 * t19359;
t18383 = -t18607 * t19013 + t18613 * t19364;
t18382 = t18612 * t19342 + t18618 * t19013;
t18381 = t18611 * t19346 + t18617 * t19013;
t18380 = t18610 * t19350 + t18616 * t19013;
t18379 = t18609 * t19354 + t18615 * t19013;
t18378 = t18608 * t19359 + t18614 * t19013;
t18377 = t18607 * t19364 + t18613 * t19013;
t18376 = t18564 * t19202 - t18780 * t19123;
t18375 = t18563 * t19202 - t18780 * t19122;
t18374 = t18562 * t19203 - t18779 * t19127;
t18373 = t18561 * t19203 - t18779 * t19126;
t18372 = t18560 * t19204 - t18778 * t19131;
t18371 = t18559 * t19204 - t18778 * t19130;
t18370 = t18558 * t19205 - t18777 * t19135;
t18369 = t18557 * t19205 - t18777 * t19134;
t18368 = t18556 * t19206 - t18776 * t19139;
t18367 = t18554 * t19207 - t18775 * t19143;
t18366 = t18555 * t19206 - t18776 * t19138;
t18365 = t18553 * t19207 - t18775 * t19142;
t18358 = t18496 * t19013 + t18780 * t19404;
t18357 = t18495 * t19013 - t18780 * t19368;
t18356 = t18494 * t19013 + t18779 * t19409;
t18355 = t18493 * t19013 - t18779 * t19373;
t18354 = t18492 * t19013 + t18778 * t19414;
t18353 = t18491 * t19013 - t18778 * t19378;
t18352 = t18490 * t19013 + t18777 * t19419;
t18351 = t18489 * t19013 - t18777 * t19383;
t18350 = t18488 * t19013 + t18776 * t19424;
t18349 = t18487 * t19013 - t18776 * t19388;
t18348 = t18486 * t19013 + t18775 * t19429;
t18347 = t18485 * t19013 - t18775 * t19393;
t18346 = t18495 * t19008 + t18780 * t19366;
t18345 = -t18496 * t19008 + t18780 * t19402;
t18344 = t18493 * t19008 + t18779 * t19371;
t18343 = -t18494 * t19008 + t18779 * t19407;
t18342 = t18491 * t19008 + t18778 * t19376;
t18341 = -t18492 * t19008 + t18778 * t19412;
t18340 = t18489 * t19008 + t18777 * t19381;
t18339 = t18487 * t19008 + t18776 * t19386;
t18338 = t18485 * t19008 + t18775 * t19391;
t18337 = -t18490 * t19008 + t18777 * t19417;
t18336 = -t18488 * t19008 + t18776 * t19422;
t18335 = -t18486 * t19008 + t18775 * t19427;
t18208 = t18345 * t18970 + t18358 * t18982;
t18207 = -t18346 * t18970 + t18357 * t18982;
t18206 = t18343 * t18969 + t18356 * t18981;
t18205 = -t18344 * t18969 + t18355 * t18981;
t18204 = t18341 * t18968 + t18354 * t18980;
t18203 = -t18342 * t18968 + t18353 * t18980;
t18202 = t18337 * t18967 + t18352 * t18979;
t18201 = -t18340 * t18967 + t18351 * t18979;
t18200 = t18336 * t18966 + t18350 * t18978;
t18199 = -t18339 * t18966 + t18349 * t18978;
t18198 = t18335 * t18965 + t18348 * t18977;
t18197 = -t18338 * t18965 + t18347 * t18977;
t18178 = (t18380 * t18968 - t18396 * t18980) * t18986 + t18974 * (-t18386 * t18968 + t18399 * t18980);
t18177 = (t18382 * t18970 - t18393 * t18982) * t18988 + t18976 * (-t18388 * t18970 + t18400 * t18982);
t18176 = (t18381 * t18969 - t18392 * t18981) * t18987 + t18975 * (-t18387 * t18969 + t18395 * t18981);
t18175 = (t18379 * t18967 - t18391 * t18979) * t18985 + t18973 * (-t18385 * t18967 + t18394 * t18979);
t18174 = (t18378 * t18966 - t18390 * t18978) * t18984 + t18972 * (-t18384 * t18966 + t18398 * t18978);
t18173 = (t18377 * t18965 - t18389 * t18977) * t18983 + t18971 * (-t18383 * t18965 + t18397 * t18977);
t18136 = ((t18376 * t19013 + t18412 * t19008) * t18982 + (-t18376 * t19008 + t18412 * t19013) * t18970) * t19010 + t18208 * t19283;
t18135 = ((t18375 * t19013 - t18411 * t19008) * t18982 - (t18375 * t19008 + t18411 * t19013) * t18970) * t19010 + t18207 * t19283;
t18134 = ((t18374 * t19013 + t18410 * t19008) * t18981 + (-t18374 * t19008 + t18410 * t19013) * t18969) * t19010 + t18206 * t19283;
t18133 = ((t18373 * t19013 - t18409 * t19008) * t18981 - (t18373 * t19008 + t18409 * t19013) * t18969) * t19010 + t18205 * t19283;
t18132 = ((t18372 * t19013 + t18408 * t19008) * t18980 + (-t18372 * t19008 + t18408 * t19013) * t18968) * t19010 + t18204 * t19283;
t18131 = ((t18371 * t19013 - t18407 * t19008) * t18980 - (t18371 * t19008 + t18407 * t19013) * t18968) * t19010 + t18203 * t19283;
t18130 = ((t18370 * t19013 + t18405 * t19008) * t18979 + (-t18370 * t19008 + t18405 * t19013) * t18967) * t19010 + t18202 * t19283;
t18129 = ((t18369 * t19013 - t18404 * t19008) * t18979 - (t18369 * t19008 + t18404 * t19013) * t18967) * t19010 + t18201 * t19283;
t18128 = ((t18368 * t19013 + t18406 * t19008) * t18978 + (-t18368 * t19008 + t18406 * t19013) * t18966) * t19010 + t18200 * t19283;
t18127 = ((t18367 * t19013 + t18402 * t19008) * t18977 + (-t18367 * t19008 + t18402 * t19013) * t18965) * t19010 + t18198 * t19283;
t18126 = ((t18366 * t19013 - t18403 * t19008) * t18978 - (t18366 * t19008 + t18403 * t19013) * t18966) * t19010 + t18199 * t19283;
t18125 = ((t18365 * t19013 - t18401 * t19008) * t18977 - (t18365 * t19008 + t18401 * t19013) * t18965) * t19010 + t18197 * t19283;
t18112 = (((t18610 * t19468 - t18616 * t18895) * t18980 - (t18610 * t19471 + t18616 * t18904) * t18968) * t18986 - t18974 * ((t18610 * t18895 + t18616 * t19468) * t18980 + (t18610 * t18904 - t18616 * t19471) * t18968)) * t19010 - t18178 * t19283;
t18111 = (((t18612 * t19466 - t18618 * t18897) * t18982 - t18970 * (t18612 * t19469 + t18618 * t18906)) * t18988 - t18976 * ((t18612 * t18897 + t18618 * t19466) * t18982 + t18970 * (t18612 * t18906 - t18618 * t19469))) * t19010 - t18177 * t19283;
t18110 = (((t18611 * t19467 - t18617 * t18896) * t18981 - t18969 * (t18611 * t19470 + t18617 * t18905)) * t18987 - t18975 * ((t18611 * t18896 + t18617 * t19467) * t18981 + (t18611 * t18905 - t18617 * t19470) * t18969)) * t19010 - t18176 * t19283;
t18109 = (((t18607 * t19474 - t18613 * t18875) * t18977 - t18965 * (t18607 * t19477 + t18613 * t18884)) * t18983 - t18971 * ((t18607 * t18875 + t18613 * t19474) * t18977 + t18965 * (t18607 * t18884 - t18613 * t19477))) * t19010 - t18173 * t19283;
t18108 = (((t18609 * t19472 - t18615 * t18877) * t18979 - t18967 * (t18609 * t19475 + t18615 * t18886)) * t18985 - t18973 * ((t18609 * t18877 + t18615 * t19472) * t18979 + (t18609 * t18886 - t18615 * t19475) * t18967)) * t19010 - t18175 * t19283;
t18107 = (((t18608 * t19473 - t18614 * t18876) * t18978 - (t18608 * t19476 + t18614 * t18885) * t18966) * t18984 - ((t18608 * t18876 + t18614 * t19473) * t18978 + t18966 * (t18608 * t18885 - t18614 * t19476)) * t18972) * t19010 - t18174 * t19283;
t1 = [t19152 * MDP(1) + (-t18216 * t19232 - t18219 * t19231 - t18222 * t19230 - t18227 * t19229 - t18229 * t19227 - t18231 * t19228) * MDP(3) + (-t18149 * t19231 - t18150 * t19232 - t18153 * t19230 - t18155 * t19227 - t18157 * t19229 - t18159 * t19228) * MDP(5) + (-t18151 * t19232 - t18152 * t19231 - t18154 * t19230 - t18156 * t19227 - t18158 * t19229 - t18160 * t19228) * MDP(6) + ((-t18169 * t19519 - (t18868 * (t19015 * t19446 + t18732) * t19016 - t19659 * t18862) * t19563) * t19000 + (-t18168 * t19521 - (t18867 * (t19015 * t19447 + t18731) * t19016 - t19660 * t18861) * t19564) * t18999 + (-t18167 * t19523 - (t18866 * (t19015 * t19448 + t18730) * t19016 - t19661 * t18860) * t19565) * t18998 + (-t18166 * t19525 - (t18865 * (t19015 * t19449 + t18726) * t19016 - t19662 * t18859) * t19566) * t18997 + (-t18165 * t19527 - (t18864 * (t19015 * t19450 + t18725) * t19016 - t19663 * t18858) * t19567) * t18996 + (-t18164 * t19529 - (t18863 * (t19015 * t19451 + t18724) * t19016 - t19664 * t18857) * t19568) * t18995 + t19152) * MDP(8) + (-t18781 * t19002 + (-t18545 * t19001 - t18546 * t19004) * t19005) * MDP(18) + t19716 * (t18215 * t19232 + t18218 * t19231 + t18221 * t19230 + t19227 * t19717 + t19228 * t19718 + t19229 * t19719); t19153 * MDP(1) + (t18216 * t19541 + t18219 * t19540 + t18222 * t19539 + t18227 * t19535 + t18229 * t19533 + t18231 * t19534) * MDP(3) + (t18149 * t19540 + t18150 * t19541 + t18153 * t19539 + t18155 * t19533 + t18157 * t19535 + t18159 * t19534) * MDP(5) + (t18151 * t19541 + t18152 * t19540 + t18154 * t19539 + t18156 * t19533 + t18158 * t19535 + t18160 * t19534) * MDP(6) + (t19153 + (-t18648 * t19502 + t18654 * t19659) * t19563 + (-t18647 * t19503 + t18653 * t19660) * t19564 + (-t18646 * t19504 + t18652 * t19661) * t19565 + (-t18645 * t19505 + t18651 * t19662) * t19566 + (-t18644 * t19506 + t18650 * t19663) * t19567 + (-t18643 * t19507 + t18649 * t19664) * t19568 + t18168 * t19534 + t18169 * t19533 + t18167 * t19535 + t18165 * t19540 + t18166 * t19539 + t18164 * t19541) * MDP(8) + (t18545 * t18803 - t18546 * t18804 + t18781 * t19325) * MDP(18) - t19716 * (t18215 * t19541 + t18218 * t19540 + t18221 * t19539 + t19533 * t19717 + t19534 * t19718 + t19535 * t19719); t19154 * MDP(1) + (t18216 * t19544 + t18219 * t19543 + t18222 * t19542 + t18227 * t19538 + t18229 * t19536 + t18231 * t19537) * MDP(3) + (t18149 * t19543 + t18150 * t19544 + t18153 * t19542 + t18155 * t19536 + t18157 * t19538 + t18159 * t19537) * MDP(5) + (t18151 * t19544 + t18152 * t19543 + t18154 * t19542 + t18156 * t19536 + t18158 * t19538 + t18160 * t19537) * MDP(6) + (t19154 + (-t18641 * t19659 + t18642 * t19502) * t19563 + (-t18639 * t19660 + t18640 * t19503) * t19564 + (-t18637 * t19661 + t18638 * t19504) * t19565 + (-t18635 * t19662 + t18636 * t19505) * t19566 + (-t18633 * t19663 + t18634 * t19506) * t19567 + (-t18631 * t19664 + t18632 * t19507) * t19568 + t18168 * t19537 + t18169 * t19536 + t18167 * t19538 + t18165 * t19543 + t18166 * t19542 + t18164 * t19544) * MDP(8) + (t18545 * t18805 - t18546 * t18806 - t18781 * t19311) * MDP(18) - t19716 * (t18215 * t19544 + t18218 * t19543 + t18221 * t19542 + t19536 * t19717 + t19537 * t19718 + t19538 * t19719); t19157 * MDP(1) + (t18107 * t19558 + t18108 * t19555 + t18109 * t19561 + t18110 * t19546 + t18111 * t19548 + t18112 * t19550) * MDP(3) + (t18107 * t19586 + t18108 * t19582 + t18109 * t19585 + t18110 * t19576 + t18111 * t19580 + t18112 * t19578) * MDP(5) + (t18107 * t19583 + t18108 * t19581 + t18109 * t19584 + t18110 * t19575 + t18111 * t19579 + t18112 * t19577) * MDP(6) + (t19157 + (-t18177 * t19502 + ((-t18382 * t18982 - t18393 * t18970) * t18988 + (t18388 * t18982 + t18400 * t18970) * t18976) * t19659) * t19563 + (-t18176 * t19503 + ((-t18381 * t18981 - t18392 * t18969) * t18987 + (t18387 * t18981 + t18395 * t18969) * t18975) * t19660) * t19564 + (-t18178 * t19504 + ((-t18380 * t18980 - t18396 * t18968) * t18986 + t18974 * (t18386 * t18980 + t18399 * t18968)) * t19661) * t19565 + (-t18175 * t19505 + ((-t18379 * t18979 - t18391 * t18967) * t18985 + t18973 * (t18385 * t18979 + t18394 * t18967)) * t19662) * t19566 + (-t18174 * t19506 + ((-t18378 * t18978 - t18390 * t18966) * t18984 + t18972 * (t18384 * t18978 + t18398 * t18966)) * t19663) * t19567 + (-t18173 * t19507 + t19664 * ((-t18377 * t18977 - t18389 * t18965) * t18983 + t18971 * (t18383 * t18977 + t18397 * t18965))) * t19568 + t18111 * t19569 + t18112 * t19571 + t18108 * t19572 + t18107 * t19573 + t18110 * t19570 + t18109 * t19574) * MDP(8) + (MDP(15) * t18545 + MDP(16) * t18546) * t19002 + ((-t18545 * t19004 + t18546 * t19001) * MDP(17) + (-MDP(15) * t19001 - MDP(16) * t19004) * t18781) * t19005 - t19716 * (t18107 * t19672 + t18108 * t19671 + t18109 * t19673 + t18110 * t19708 + t18111 * t19707 + t18112 * t19709); t19156 * MDP(1) + (t18127 * t19561 + t18128 * t19558 + t18130 * t19555 + t18132 * t19550 + t18134 * t19546 + t18136 * t19548) * MDP(3) + (t18127 * t19585 + t18128 * t19586 + t18130 * t19582 + t18132 * t19578 + t18134 * t19576 + t18136 * t19580) * MDP(5) + (t18127 * t19584 + t18128 * t19583 + t18130 * t19581 + t18132 * t19577 + t18134 * t19575 + t18136 * t19579) * MDP(6) + (t19156 + (t18208 * t19502 - t19659 * (-t18345 * t18982 + t18358 * t18970)) * t19563 + (t18206 * t19503 - (-t18343 * t18981 + t18356 * t18969) * t19660) * t19564 + (t18204 * t19504 - (-t18341 * t18980 + t18354 * t18968) * t19661) * t19565 + (t18202 * t19505 - (-t18337 * t18979 + t18352 * t18967) * t19662) * t19566 + (t18200 * t19506 - (-t18336 * t18978 + t18350 * t18966) * t19663) * t19567 + (t18198 * t19507 - t19664 * (-t18335 * t18977 + t18348 * t18965)) * t19568 + t18132 * t19571 + t18128 * t19573 + t18134 * t19570 + t18136 * t19569 + t18127 * t19574 + t18130 * t19572) * MDP(8) + (-t18545 * t19325 + t18781 * t18803) * MDP(15) + (-t18546 * t19325 - t18781 * t18804) * MDP(16) + (-t18545 * t18804 - t18546 * t18803) * MDP(17) - t19716 * (t18127 * t19673 + t18128 * t19672 + t18130 * t19671 + t18132 * t19709 + t18134 * t19708 + t18136 * t19707); t19155 * MDP(1) + (t18125 * t19561 + t18126 * t19558 + t18129 * t19555 + t18131 * t19550 + t18133 * t19546 + t18135 * t19548) * MDP(3) + (t18125 * t19585 + t18126 * t19586 + t18129 * t19582 + t18131 * t19578 + t18133 * t19576 + t18135 * t19580) * MDP(5) + (t18125 * t19584 + t18126 * t19583 + t18129 * t19581 + t18131 * t19577 + t18133 * t19575 + t18135 * t19579) * MDP(6) + (t19155 + (t18203 * t19504 - (t18342 * t18980 + t18353 * t18968) * t19661) * t19565 + (t18201 * t19505 - (t18340 * t18979 + t18351 * t18967) * t19662) * t19566 + (t18199 * t19506 - (t18339 * t18978 + t18349 * t18966) * t19663) * t19567 + (t18197 * t19507 - t19664 * (t18338 * t18977 + t18347 * t18965)) * t19568 + (t18207 * t19502 - t19659 * (t18346 * t18982 + t18357 * t18970)) * t19563 + (t18205 * t19503 - (t18344 * t18981 + t18355 * t18969) * t19660) * t19564 + t18131 * t19571 + t18126 * t19573 + t18133 * t19570 + t18135 * t19569 + t18125 * t19574 + t18129 * t19572) * MDP(8) + (t18545 * t19311 + t18781 * t18805) * MDP(15) + (t18546 * t19311 - t18781 * t18806) * MDP(16) + (-t18545 * t18806 - t18546 * t18805) * MDP(17) - t19716 * (t18125 * t19673 + t18126 * t19672 + t18129 * t19671 + t18131 * t19709 + t18133 * t19708 + t18135 * t19707);];
taugX  = t1;
