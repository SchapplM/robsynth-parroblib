% Calculate minimal parameter regressor of inverse dynamics forces for
% P6PRPRRR7V2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d4,theta1,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRPRRR7V2A0_convert_par2_MPV_fixb.m

% Output:
% tauX [6x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-17 04:21
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P6PRPRRR7V2A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P6PRPRRR7V2A0_invdyn_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-17 03:42:05
% EndTime: 2019-05-17 03:55:27
% DurationCPUTime: 865.45s
% Computational Cost: add. (5604264->3327), mult. (12473496->5731), div. (23184->36), fcn. (8351214->64), ass. (0->1963)
t10956 = sin(pkin(5));
t12466 = -0.2e1 * t10956;
t12239 = xP(5);
t11813 = sin(t12239);
t12235 = xDP(6);
t12237 = xDP(4);
t10877 = t11813 * t12237 + t12235;
t12238 = xP(6);
t11812 = sin(t12238);
t11545 = t11813 * t11812;
t11816 = cos(t12239);
t12250 = koppelP(3,3);
t11656 = t11816 * t12250;
t12256 = koppelP(3,2);
t11309 = -t11545 * t12256 - t11656;
t11622 = t12235 * t11812;
t11815 = cos(t12238);
t12262 = koppelP(3,1);
t11662 = t12262 * t11815;
t10583 = t10877 * t11662 + t11309 * t12237 - t11622 * t12256;
t10992 = xDP(2);
t11480 = -t11813 * t12235 - t12237;
t12236 = xDP(5);
t11625 = t12236 * t11816;
t11272 = (t11480 * t12256 + t11625 * t12262) * t11815 - (t11625 * t12256 + t12237 * t12262) * t11812 - (t11622 * t12262 - t12236 * t12250) * t11813;
t12240 = xP(4);
t11814 = sin(t12240);
t11817 = cos(t12240);
t10298 = t10583 * t11817 + t11272 * t11814 + t10992;
t10991 = xDP(3);
t10304 = t10583 * t11814 - t11272 * t11817 + t10991;
t10993 = xDP(1);
t11549 = t11816 * t11812;
t11471 = t12235 * t11549;
t11472 = t12236 * t11545;
t11623 = t12235 * t11816;
t11624 = t12236 * t11813;
t10507 = (t11623 * t12256 + t11624 * t12262) * t11815 + t12262 * t11471 - t12256 * t11472 - t12250 * t11625 - t10993;
t10970 = legFrame(3,1);
t10926 = sin(t10970);
t10938 = cos(t10970);
t10982 = legFrame(3,2);
t10945 = sin(t10982);
t10951 = cos(t10982);
t10148 = -t10507 * t10951 + (t10298 * t10926 - t10304 * t10938) * t10945;
t10178 = t10298 * t10938 + t10926 * t10304;
t10955 = sin(pkin(9));
t10958 = cos(pkin(9));
t10112 = t10148 * t10958 + t10178 * t10955;
t10964 = legFrame(3,3);
t10920 = sin(t10964);
t10932 = cos(t10964);
t12398 = -t10148 * t10955 + t10178 * t10958;
t10052 = t10112 * t10932 + t10920 * t12398;
t12219 = sin(pkin(6));
t12220 = cos(pkin(10));
t11646 = t12220 * t12219;
t12218 = sin(pkin(10));
t11796 = pkin(3) * t12218;
t10865 = pkin(8) * t11646 - t11796;
t10959 = cos(pkin(5));
t10836 = t10865 * t10959;
t12221 = cos(pkin(6));
t11795 = t12221 * pkin(8);
t10909 = t11795 + qJ(3,3);
t11977 = t10909 * t10956;
t10707 = -t10836 - t11977;
t11645 = t12219 * t12218;
t11615 = pkin(8) * t11645;
t11507 = t11615 + pkin(2);
t11797 = pkin(3) * t12220;
t10861 = t11797 + t11507;
t10988 = cos(qJ(2,3));
t10808 = t10861 * t10988;
t10960 = cos(pkin(4));
t10985 = sin(qJ(2,3));
t12042 = (-t10707 * t10985 + t10808) * t10960;
t10805 = t10985 * t10861;
t12429 = t10707 * t10988 + t10805;
t10028 = -t10052 * t12042 + (t10920 * t10112 - t10932 * t12398) * t12429;
t10954 = t10959 ^ 2;
t10957 = sin(pkin(4));
t11861 = t10957 * t10959;
t11863 = t10956 * t10959;
t10788 = t10865 * t11863;
t12332 = -t10788 - t11795;
t10430 = 0.1e1 / (t11861 * t12429 + (t10909 * t10954 - qJ(3,3) + t12332) * t10960);
t12144 = t10028 * t10430;
t11838 = t10960 * t10988;
t11887 = t10951 * t10985;
t11903 = t10945 * t10985;
t10106 = (t10298 * t11838 + t10304 * t11903) * t10938 + (-t10298 * t11903 + t10304 * t11838) * t10926 + t10507 * t11887;
t11699 = t10951 * t11838;
t11705 = t10945 * t11838;
t11398 = -(t10298 * t11705 + t10304 * t10985) * t10926 + (-t10298 * t10985 + t10304 * t11705) * t10938 + t10507 * t11699;
t10010 = ((-t10955 * t10106 + t10958 * t11398) * t10932 - t10920 * (t10106 * t10958 + t10955 * t11398)) * t10956 - t10052 * t11861;
t10835 = t10960 * t10865;
t11857 = t10957 * t10988;
t11713 = t10909 * t11857;
t10688 = t10835 + t11713;
t11730 = t10957 * t10805;
t10893 = t10960 * t10909;
t12323 = t10865 * t11857 - t10893;
t11832 = -t10954 * t12323 - t10893;
t10397 = -t10688 * t11863 + t10959 * t11730 + t11832;
t10384 = 0.1e1 / t10397;
t12162 = t10010 * t10384;
t11635 = t12144 * t12162;
t11423 = t11812 * t12262 + t11815 * t12256;
t11297 = t11817 * t11423;
t11417 = t11812 * t12256 - t11662;
t11303 = t11417 * t11813;
t12417 = t11656 + t11303;
t11129 = -t11814 * t12417 + t11297;
t11279 = t11814 * t11417;
t11081 = (t11297 * t11813 - t11279) * t12235 + t11129 * t12237;
t11285 = t11814 * t11423;
t11141 = t11817 * t12417 + t11285;
t11291 = t11817 * t11417;
t11087 = (t11285 * t11813 + t11291) * t12235 + t11141 * t12237;
t11548 = t11814 * t11816;
t11551 = t11817 * t11813;
t11256 = -t11548 * t12237 - t11551 * t12236;
t11547 = t11814 * t11813;
t11552 = t11817 * t11816;
t11257 = t11547 * t12236 - t11552 * t12237;
t12230 = xDDP(5);
t12234 = xDDP(1);
t12229 = xDDP(6);
t12414 = t11816 * t12229 + t12237 * t12236;
t11650 = t11813 * t12250;
t12289 = t11417 * t11816 - t11650;
t11222 = t12236 * t12289;
t12452 = t11817 * t11222 + t11081;
t12453 = t11814 * t11222 + t11087;
t11009 = t12234 + (-t11129 * t11814 + t11141 * t11817) * t12230 + (t11814 * t12453 + t11817 * t12452) * t12236 + (-t11081 * t11548 + t11087 * t11552 - t11129 * t11256 + t11141 * t11257) * t12235 + t12414 * (-(t11291 * t11813 + t11285) * t11814 + (t11279 * t11813 - t11297) * t11817);
t11117 = -t11423 * t11623 + t12236 * t12417;
t11550 = t11816 * t11815;
t11261 = t11549 * t12256 - t11550 * t12262;
t11228 = t11650 - t11261;
t11621 = t11817 * t12236;
t12232 = xDDP(3);
t11619 = t11814 * t12236;
t12281 = -t11257 * t12235 + t12237 * t11619 - t12230 * t11817;
t12231 = xDDP(4);
t12286 = t11625 * t12235 + t12231;
t11015 = t12232 + ((-t11303 * t11814 + t11297) * t11813 - t11261 * t11548) * t12229 - t12453 * t12237 - t11117 * t11621 + (t11117 * t11548 - t11813 * t12453) * t12235 + t12286 * t11129 + t12281 * t11228;
t12233 = xDDP(2);
t12282 = t11256 * t12235 + t12237 * t11621 + t12230 * t11814;
t11021 = t12233 + ((-t11303 * t11817 - t11285) * t11813 - t11261 * t11552) * t12229 - t12452 * t12237 + t11117 * t11619 + (t11117 * t11552 - t11813 * t12452) * t12235 - t12286 * t11141 + t12282 * t11228;
t11845 = t10958 * t10985;
t10843 = t10955 * t11838 + t11845;
t11866 = t10955 * t10985;
t10846 = t10958 * t11838 - t11866;
t11514 = t10920 * t10955 - t10932 * t10958;
t11976 = t10909 * t10957;
t11176 = t11514 * t11976 + (t10843 * t10920 - t10846 * t10932) * t10865;
t10669 = -t10988 * t11977 + t10805;
t11990 = t10865 * t10957;
t11727 = t10956 * t11990;
t10540 = t10669 * t10960 + t11727;
t10672 = t10985 * t11977 + t10808;
t11525 = -t10540 * t10955 + t10672 * t10958;
t11526 = t10540 * t10958 + t10672 * t10955;
t11185 = t10920 * t11525 + t10932 * t11526;
t10814 = t10920 * t10958 + t10932 * t10955;
t11476 = t10814 * t10945;
t11888 = t10951 * t10960;
t11950 = t10926 * t11514;
t10789 = t10956 * t10835;
t11820 = t10669 * t10957 - t10789;
t12270 = t10920 * t11526 - t10932 * t11525;
t12304 = -t10945 * t12270 - t11820 * t10951;
t12389 = t12323 * t10951 + t10945 * (t10814 * t11976 - t10865 * (-t10843 * t10932 - t10846 * t10920));
t12411 = 0.1e1 / (t10959 * t11820 + t11832);
t11058 = t12411 * ((t10926 * t11176 - t10938 * t12389) * t10954 + (t10926 * t11185 - t10938 * t12304) * t10959 - t10909 * (t10938 * t11888 + (-t10938 * t11476 + t11950) * t10957));
t12005 = t11514 * t10938;
t11059 = t12411 * ((t10926 * t12389 + t11176 * t10938) * t10954 + (t10926 * t12304 + t11185 * t10938) * t10959 + t10909 * (t10926 * t11888 + (-t10926 * t11476 - t12005) * t10957));
t11489 = t10865 * t11838 + t11976;
t11904 = t10945 * t10960;
t11986 = t10865 * t10985;
t12339 = t11820 * t10945;
t12462 = t12323 * t10945;
t11104 = ((t10814 * t11489 - t11514 * t11986) * t10951 - t12462) * t10954 + ((-t10540 * t10814 - t10672 * t11514) * t10951 + t12339) * t10959 - t10909 * (t10814 * t10951 * t10957 + t11904);
t11426 = (pkin(3) ^ 2 + (t12221 ^ 2 - 0.1e1) * pkin(8) ^ 2) * t12220 ^ 2;
t11776 = 0.2e1 * t11797;
t11249 = t11615 * t11776 + t11426;
t11469 = t10957 * t11507;
t11470 = t10956 * t11507;
t11483 = t12411 * t10956 * t11635;
t11511 = 0.2e1 * pkin(2) * t11645 + pkin(8);
t11553 = t10957 * t11646;
t10908 = t10956 * t10960;
t11614 = t12219 * pkin(8) * t10908;
t11665 = 0.2e1 * t10788;
t11666 = t10960 * t11796;
t11667 = t10957 * t11796;
t11786 = t12221 * t10960;
t12060 = t10430 * t10956;
t12175 = 0.2e1 * t12221;
t12217 = pkin(3) * t10957;
t12244 = qJ(3,3) ^ 2;
t12265 = pkin(2) ^ 2;
t12280 = t11507 * t11776 + t11426 + t12265;
t12383 = -t11776 / 0.2e1;
t12421 = -0.1e1 / ((t10988 * t11667 + t10960 * qJ(3,3) + (-t10988 * t11553 + t11786) * pkin(8)) * t10954 + ((t10985 * t12217 - t11614) * t12220 + (t11666 - t11713) * t10956 + t10985 * t11469) * t10959 - t10893) * (t10028 * t12060 * t12383 - t11470 * t12144 + (-((pkin(3) + t10909) * (-pkin(3) + t10909) + t11249) * t10954 + t10909 * t11665 + t12244 + (qJ(3,3) * t12175 + t11511) * pkin(8) + t12280) * t12162) * t12162 + t10861 * t11483;
t12386 = -t11104 * t12411 * t11009 + t10945 * g(1) + t10951 * (-g(2) * t10926 + g(3) * t10938) + t10959 * t12421 - t11015 * t11058 - t11021 * t11059;
t12181 = t10957 * t12386;
t11949 = t10926 * t10945;
t10890 = g(2) * t11949;
t10912 = t10951 * g(1);
t11927 = t10938 * t10945;
t11794 = g(3) * t11927;
t10713 = -t10890 - t10912 + t11794;
t10873 = g(2) * t10938 + g(3) * t10926;
t10631 = -t10713 * t10955 - t10873 * t10958;
t12030 = t10631 * t10932;
t11873 = t10955 * t10873;
t11520 = t10713 * t10958 - t11873;
t12036 = t11520 * t10920;
t12317 = t12030 - t12036;
t11404 = t10960 * t12317 - t12181;
t11968 = t10920 * t10631;
t12395 = t10932 * t11520 + t11968;
t9933 = -t11404 * t10985 - t10988 * t12395;
t10469 = -t11514 * t11861 + t10956 * (-t10814 * t10985 - t11514 * t11838);
t11002 = t10951 * t11009;
t11756 = t10985 * t12162;
t11757 = t10861 * t12162;
t10607 = t10814 * t10938 - t11514 * t11949;
t10613 = t10814 * t11949 + t12005;
t10226 = -t10607 * t11861 - t10956 * (t10607 * t11838 - t10613 * t10985);
t10408 = 0.1e1 / ((-t10688 * t10956 + t11730) * t10959 + t11832);
t12078 = t10226 * t10408;
t10598 = t10814 * t11927 - t11950;
t10599 = -t10814 * t10926 - t11514 * t11927;
t10223 = t10599 * t11861 + t10956 * (-t10598 * t10985 + t10599 * t11838);
t12081 = t10223 * t10408;
t9980 = t11021 * t12078 + t11015 * t12081 + (t10959 * t11857 + t10908) * t11483 + (-t10469 * t11002 - ((t10960 * t12144 + t11756 * t11990) * t10954 + ((t10909 * t11756 - t10988 * t12144) * t10956 + t10988 * t11757) * t11861 + (t10956 * t11757 - t12144) * t10960) * t12162) * t12411;
t9977 = t9980 * qJ(3,3);
t9878 = t9933 + (t9977 + t11635) * t12466;
t12252 = koppelP(1,3);
t11658 = t11816 * t12252;
t12258 = koppelP(1,2);
t11311 = -t11545 * t12258 - t11658;
t12264 = koppelP(1,1);
t11664 = t12264 * t11815;
t10585 = t10877 * t11664 + t11311 * t12237 - t11622 * t12258;
t11270 = (t11480 * t12258 + t11625 * t12264) * t11815 - (t11625 * t12258 + t12237 * t12264) * t11812 - (t11622 * t12264 - t12236 * t12252) * t11813;
t10300 = t10585 * t11817 + t11270 * t11814 + t10992;
t10306 = t10585 * t11814 - t11270 * t11817 + t10991;
t10509 = (t11623 * t12258 + t11624 * t12264) * t11815 + t12264 * t11471 - t12258 * t11472 - t12252 * t11625 - t10993;
t10972 = legFrame(1,1);
t10928 = sin(t10972);
t10940 = cos(t10972);
t10984 = legFrame(1,2);
t10947 = sin(t10984);
t10953 = cos(t10984);
t10150 = -t10509 * t10953 + (t10300 * t10928 - t10306 * t10940) * t10947;
t10180 = t10300 * t10940 + t10928 * t10306;
t10114 = t10150 * t10958 + t10180 * t10955;
t10966 = legFrame(1,3);
t10922 = sin(t10966);
t10934 = cos(t10966);
t12396 = -t10150 * t10955 + t10180 * t10958;
t10054 = t10114 * t10934 + t10922 * t12396;
t10911 = t11795 + qJ(3,1);
t11973 = t10911 * t10956;
t10709 = -t10836 - t11973;
t10990 = cos(qJ(2,1));
t10810 = t10861 * t10990;
t10987 = sin(qJ(2,1));
t12040 = (-t10709 * t10987 + t10810) * t10960;
t10807 = t10987 * t10861;
t12427 = t10709 * t10990 + t10807;
t10030 = -t10054 * t12040 + t12427 * (t10922 * t10114 - t10934 * t12396);
t10432 = 0.1e1 / (t11861 * t12427 + (t10911 * t10954 - qJ(3,1) + t12332) * t10960);
t12142 = t10030 * t10432;
t11836 = t10960 * t10990;
t11883 = t10953 * t10987;
t11895 = t10947 * t10987;
t10108 = (t10300 * t11836 + t10306 * t11895) * t10940 + (-t10300 * t11895 + t10306 * t11836) * t10928 + t10509 * t11883;
t11697 = t10953 * t11836;
t11703 = t10947 * t11836;
t11396 = -(t10300 * t11703 + t10306 * t10987) * t10928 + (-t10300 * t10987 + t10306 * t11703) * t10940 + t10509 * t11697;
t10012 = ((-t10955 * t10108 + t10958 * t11396) * t10934 - t10922 * (t10108 * t10958 + t10955 * t11396)) * t10956 - t10054 * t11861;
t11855 = t10957 * t10990;
t11709 = t10911 * t11855;
t10694 = t10835 + t11709;
t11728 = t10957 * t10807;
t10895 = t10960 * t10911;
t12325 = t10865 * t11855 - t10895;
t11830 = -t10954 * t12325 - t10895;
t10399 = -t10694 * t11863 + t10959 * t11728 + t11830;
t10383 = 0.1e1 / t10399;
t12160 = t10012 * t10383;
t11633 = t12142 * t12160;
t11425 = t11812 * t12264 + t11815 * t12258;
t11299 = t11817 * t11425;
t11419 = t11812 * t12258 - t11664;
t11305 = t11419 * t11813;
t12415 = t11658 + t11305;
t11131 = -t11814 * t12415 + t11299;
t11281 = t11814 * t11419;
t11083 = (t11299 * t11813 - t11281) * t12235 + t11131 * t12237;
t11287 = t11814 * t11425;
t11147 = t11817 * t12415 + t11287;
t11293 = t11817 * t11419;
t11089 = (t11287 * t11813 + t11293) * t12235 + t11147 * t12237;
t11652 = t11813 * t12252;
t12287 = t11419 * t11816 - t11652;
t11224 = t12236 * t12287;
t12448 = t11817 * t11224 + t11083;
t12449 = t11814 * t11224 + t11089;
t11011 = t12234 + (-t11131 * t11814 + t11147 * t11817) * t12230 + (t11814 * t12449 + t11817 * t12448) * t12236 + (-t11083 * t11548 + t11089 * t11552 - t11131 * t11256 + t11147 * t11257) * t12235 + t12414 * (-(t11293 * t11813 + t11287) * t11814 + (t11281 * t11813 - t11299) * t11817);
t11119 = -t11425 * t11623 + t12236 * t12415;
t11263 = t11549 * t12258 - t11550 * t12264;
t11230 = t11652 - t11263;
t11017 = t12232 + ((-t11305 * t11814 + t11299) * t11813 - t11263 * t11548) * t12229 - t12449 * t12237 - t11119 * t11621 + (t11119 * t11548 - t11813 * t12449) * t12235 + t12286 * t11131 + t12281 * t11230;
t11023 = t12233 + ((-t11305 * t11817 - t11287) * t11813 - t11263 * t11552) * t12229 - t12448 * t12237 + t11119 * t11619 + (t11119 * t11552 - t11813 * t12448) * t12235 - t12286 * t11147 + t12282 * t11230;
t11843 = t10958 * t10987;
t10845 = t10955 * t11836 + t11843;
t11864 = t10955 * t10987;
t10848 = t10958 * t11836 - t11864;
t11512 = t10922 * t10955 - t10934 * t10958;
t11972 = t10911 * t10957;
t11174 = t11512 * t11972 + (t10845 * t10922 - t10848 * t10934) * t10865;
t10671 = -t10990 * t11973 + t10807;
t10542 = t10671 * t10960 + t11727;
t10674 = t10987 * t11973 + t10810;
t11521 = -t10542 * t10955 + t10674 * t10958;
t11522 = t10542 * t10958 + t10674 * t10955;
t11181 = t10922 * t11521 + t10934 * t11522;
t10816 = t10922 * t10958 + t10934 * t10955;
t11474 = t10816 * t10947;
t11884 = t10953 * t10960;
t11940 = t10928 * t11512;
t11818 = t10671 * t10957 - t10789;
t12268 = t10922 * t11522 - t10934 * t11521;
t12302 = -t10947 * t12268 - t11818 * t10953;
t12387 = t12325 * t10953 + t10947 * (t10816 * t11972 - t10865 * (-t10845 * t10934 - t10848 * t10922));
t12413 = 0.1e1 / (t10959 * t11818 + t11830);
t11054 = t12413 * ((t10928 * t11174 - t10940 * t12387) * t10954 + (t10928 * t11181 - t10940 * t12302) * t10959 - t10911 * (t10940 * t11884 + (-t10940 * t11474 + t11940) * t10957));
t12003 = t11512 * t10940;
t11055 = t12413 * ((t10928 * t12387 + t11174 * t10940) * t10954 + (t10928 * t12302 + t11181 * t10940) * t10959 + t10911 * (t10928 * t11884 + (-t10928 * t11474 - t12003) * t10957));
t11487 = t10865 * t11836 + t11972;
t11896 = t10947 * t10960;
t11984 = t10865 * t10987;
t12341 = t11818 * t10947;
t12460 = t12325 * t10947;
t11102 = ((t10816 * t11487 - t11512 * t11984) * t10953 - t12460) * t10954 + ((-t10542 * t10816 - t10674 * t11512) * t10953 + t12341) * t10959 - t10911 * (t10816 * t10953 * t10957 + t11896);
t11481 = t12413 * t10956 * t11633;
t12058 = t10432 * t10956;
t12246 = qJ(3,1) ^ 2;
t12423 = -0.1e1 / ((t10990 * t11667 + t10960 * qJ(3,1) + (-t10990 * t11553 + t11786) * pkin(8)) * t10954 + ((t10987 * t12217 - t11614) * t12220 + (t11666 - t11709) * t10956 + t10987 * t11469) * t10959 - t10895) * (t10030 * t12058 * t12383 - t11470 * t12142 + (-((pkin(3) + t10911) * (-pkin(3) + t10911) + t11249) * t10954 + t10911 * t11665 + t12246 + (qJ(3,1) * t12175 + t11511) * pkin(8) + t12280) * t12160) * t12160 + t10861 * t11481;
t12384 = -t11102 * t12413 * t11011 + t10947 * g(1) + t10953 * (-g(2) * t10928 + g(3) * t10940) + t10959 * t12423 - t11017 * t11054 - t11023 * t11055;
t12179 = t10957 * t12384;
t11939 = t10928 * t10947;
t10892 = g(2) * t11939;
t10914 = t10953 * g(1);
t11921 = t10940 * t10947;
t11792 = g(3) * t11921;
t10715 = -t10892 - t10914 + t11792;
t10875 = g(2) * t10940 + g(3) * t10928;
t10633 = -t10715 * t10955 - t10875 * t10958;
t12027 = t10633 * t10934;
t11871 = t10955 * t10875;
t11518 = t10715 * t10958 - t11871;
t12034 = t11518 * t10922;
t12319 = t12027 - t12034;
t11402 = t10960 * t12319 - t12179;
t11967 = t10922 * t10633;
t12393 = t10934 * t11518 + t11967;
t9935 = -t11402 * t10987 - t10990 * t12393;
t10471 = -t11512 * t11861 + t10956 * (-t10816 * t10987 - t11512 * t11836);
t11000 = t10953 * t11011;
t11752 = t10987 * t12160;
t11753 = t10861 * t12160;
t10609 = t10816 * t10940 - t11512 * t11939;
t10615 = t10816 * t11939 + t12003;
t10228 = -t10609 * t11861 - t10956 * (t10609 * t11836 - t10615 * t10987);
t10414 = 0.1e1 / ((-t10694 * t10956 + t11728) * t10959 + t11830);
t12076 = t10228 * t10414;
t10602 = t10816 * t11921 - t11940;
t10603 = -t10816 * t10928 - t11512 * t11921;
t10225 = t10603 * t11861 + t10956 * (-t10602 * t10987 + t10603 * t11836);
t12079 = t10225 * t10414;
t9982 = t11023 * t12076 + t11017 * t12079 + (t10959 * t11855 + t10908) * t11481 + (-t10471 * t11000 - ((t10960 * t12142 + t11752 * t11990) * t10954 + ((t10911 * t11752 - t10990 * t12142) * t10956 + t10990 * t11753) * t11861 + (t10956 * t11753 - t12142) * t10960) * t12160) * t12413;
t9979 = qJ(3,1) * t9982;
t9879 = t9935 + (t9979 + t11633) * t12466;
t12251 = koppelP(2,3);
t11657 = t11816 * t12251;
t12257 = koppelP(2,2);
t11310 = -t11545 * t12257 - t11657;
t12263 = koppelP(2,1);
t11663 = t12263 * t11815;
t10584 = t10877 * t11663 + t11310 * t12237 - t11622 * t12257;
t11271 = (t11480 * t12257 + t11625 * t12263) * t11815 - (t11625 * t12257 + t12237 * t12263) * t11812 - (t11622 * t12263 - t12236 * t12251) * t11813;
t10299 = t10584 * t11817 + t11271 * t11814 + t10992;
t10305 = t10584 * t11814 - t11271 * t11817 + t10991;
t10508 = (t11623 * t12257 + t11624 * t12263) * t11815 + t12263 * t11471 - t12257 * t11472 - t12251 * t11625 - t10993;
t10971 = legFrame(2,1);
t10927 = sin(t10971);
t10939 = cos(t10971);
t10983 = legFrame(2,2);
t10946 = sin(t10983);
t10952 = cos(t10983);
t10149 = -t10508 * t10952 + (t10299 * t10927 - t10305 * t10939) * t10946;
t10179 = t10299 * t10939 + t10927 * t10305;
t10113 = t10149 * t10958 + t10179 * t10955;
t10965 = legFrame(2,3);
t10921 = sin(t10965);
t10933 = cos(t10965);
t12397 = -t10149 * t10955 + t10179 * t10958;
t10053 = t10113 * t10933 + t10921 * t12397;
t10910 = t11795 + qJ(3,2);
t11975 = t10910 * t10956;
t10708 = -t10836 - t11975;
t10989 = cos(qJ(2,2));
t10809 = t10861 * t10989;
t10986 = sin(qJ(2,2));
t12041 = (-t10708 * t10986 + t10809) * t10960;
t10806 = t10986 * t10861;
t12428 = t10708 * t10989 + t10806;
t10029 = -t10053 * t12041 + t12428 * (t10921 * t10113 - t10933 * t12397);
t10431 = 0.1e1 / (t11861 * t12428 + (t10910 * t10954 - qJ(3,2) + t12332) * t10960);
t12143 = t10029 * t10431;
t11837 = t10960 * t10989;
t11885 = t10952 * t10986;
t11899 = t10946 * t10986;
t10107 = (t10299 * t11837 + t10305 * t11899) * t10939 + (-t10299 * t11899 + t10305 * t11837) * t10927 + t10508 * t11885;
t11698 = t10952 * t11837;
t11704 = t10946 * t11837;
t11397 = -(t10299 * t11704 + t10305 * t10986) * t10927 + (-t10299 * t10986 + t10305 * t11704) * t10939 + t10508 * t11698;
t10011 = ((-t10955 * t10107 + t10958 * t11397) * t10933 - t10921 * (t10107 * t10958 + t10955 * t11397)) * t10956 - t10053 * t11861;
t11856 = t10957 * t10989;
t11711 = t10910 * t11856;
t10691 = t10835 + t11711;
t11729 = t10957 * t10806;
t10894 = t10960 * t10910;
t12324 = t10865 * t11856 - t10894;
t11831 = -t10954 * t12324 - t10894;
t10398 = -t10691 * t11863 + t10959 * t11729 + t11831;
t10382 = 0.1e1 / t10398;
t12161 = t10011 * t10382;
t11634 = t12143 * t12161;
t11424 = t11812 * t12263 + t11815 * t12257;
t11298 = t11817 * t11424;
t11418 = t11812 * t12257 - t11663;
t11304 = t11418 * t11813;
t12416 = t11657 + t11304;
t11130 = -t11814 * t12416 + t11298;
t11280 = t11814 * t11418;
t11082 = (t11298 * t11813 - t11280) * t12235 + t11130 * t12237;
t11286 = t11814 * t11424;
t11144 = t11817 * t12416 + t11286;
t11292 = t11817 * t11418;
t11088 = (t11286 * t11813 + t11292) * t12235 + t11144 * t12237;
t11651 = t11813 * t12251;
t12288 = t11418 * t11816 - t11651;
t11223 = t12236 * t12288;
t12450 = t11817 * t11223 + t11082;
t12451 = t11814 * t11223 + t11088;
t11010 = t12234 + (-t11130 * t11814 + t11144 * t11817) * t12230 + (t11814 * t12451 + t11817 * t12450) * t12236 + (-t11082 * t11548 + t11088 * t11552 - t11130 * t11256 + t11144 * t11257) * t12235 + t12414 * (-(t11292 * t11813 + t11286) * t11814 + (t11280 * t11813 - t11298) * t11817);
t11118 = -t11424 * t11623 + t12236 * t12416;
t11262 = t11549 * t12257 - t11550 * t12263;
t11229 = t11651 - t11262;
t11016 = t12232 + ((-t11304 * t11814 + t11298) * t11813 - t11262 * t11548) * t12229 - t12451 * t12237 - t11118 * t11621 + (t11118 * t11548 - t11813 * t12451) * t12235 + t12286 * t11130 + t12281 * t11229;
t11022 = t12233 + ((-t11304 * t11817 - t11286) * t11813 - t11262 * t11552) * t12229 - t12450 * t12237 + t11118 * t11619 + (t11118 * t11552 - t11813 * t12450) * t12235 - t12286 * t11144 + t12282 * t11229;
t11844 = t10958 * t10986;
t10844 = t10955 * t11837 + t11844;
t11865 = t10955 * t10986;
t10847 = t10958 * t11837 - t11865;
t11513 = t10921 * t10955 - t10933 * t10958;
t11974 = t10910 * t10957;
t11175 = t11513 * t11974 + (t10844 * t10921 - t10847 * t10933) * t10865;
t10670 = -t10989 * t11975 + t10806;
t10541 = t10670 * t10960 + t11727;
t10673 = t10986 * t11975 + t10809;
t11523 = -t10541 * t10955 + t10673 * t10958;
t11524 = t10541 * t10958 + t10673 * t10955;
t11183 = t10921 * t11523 + t10933 * t11524;
t10815 = t10921 * t10958 + t10933 * t10955;
t11475 = t10815 * t10946;
t11886 = t10952 * t10960;
t11945 = t10927 * t11513;
t11819 = t10670 * t10957 - t10789;
t12269 = t10921 * t11524 - t10933 * t11523;
t12303 = -t10946 * t12269 - t11819 * t10952;
t12388 = t12324 * t10952 + t10946 * (t10815 * t11974 - t10865 * (-t10844 * t10933 - t10847 * t10921));
t12412 = 0.1e1 / (t10959 * t11819 + t11831);
t11056 = t12412 * ((t10927 * t11175 - t10939 * t12388) * t10954 + (t10927 * t11183 - t10939 * t12303) * t10959 - t10910 * (t10939 * t11886 + (-t10939 * t11475 + t11945) * t10957));
t12004 = t11513 * t10939;
t11057 = t12412 * ((t10927 * t12388 + t11175 * t10939) * t10954 + (t10927 * t12303 + t11183 * t10939) * t10959 + t10910 * (t10927 * t11886 + (-t10927 * t11475 - t12004) * t10957));
t11488 = t10865 * t11837 + t11974;
t11900 = t10946 * t10960;
t11985 = t10865 * t10986;
t12340 = t11819 * t10946;
t12461 = t12324 * t10946;
t11103 = ((t10815 * t11488 - t11513 * t11985) * t10952 - t12461) * t10954 + ((-t10541 * t10815 - t10673 * t11513) * t10952 + t12340) * t10959 - t10910 * (t10815 * t10952 * t10957 + t11900);
t11482 = t12412 * t10956 * t11634;
t12059 = t10431 * t10956;
t12245 = qJ(3,2) ^ 2;
t12422 = -0.1e1 / ((t10989 * t11667 + t10960 * qJ(3,2) + (-t10989 * t11553 + t11786) * pkin(8)) * t10954 + ((t10986 * t12217 - t11614) * t12220 + (t11666 - t11711) * t10956 + t10986 * t11469) * t10959 - t10894) * (t10029 * t12059 * t12383 - t11470 * t12143 + (-((pkin(3) + t10910) * (-pkin(3) + t10910) + t11249) * t10954 + t10910 * t11665 + t12245 + (qJ(3,2) * t12175 + t11511) * pkin(8) + t12280) * t12161) * t12161 + t10861 * t11482;
t12385 = -t11103 * t12412 * t11010 + t10946 * g(1) + t10952 * (-g(2) * t10927 + g(3) * t10939) + t10959 * t12422 - t11016 * t11056 - t11022 * t11057;
t12180 = t10957 * t12385;
t11944 = t10927 * t10946;
t10891 = g(2) * t11944;
t10913 = t10952 * g(1);
t11924 = t10939 * t10946;
t11793 = g(3) * t11924;
t10714 = -t10891 - t10913 + t11793;
t10874 = g(2) * t10939 + g(3) * t10927;
t10632 = -t10714 * t10955 - t10874 * t10958;
t12028 = t10632 * t10933;
t11872 = t10955 * t10874;
t11519 = t10714 * t10958 - t11872;
t12035 = t11519 * t10921;
t12318 = t12028 - t12035;
t11403 = t10960 * t12318 - t12180;
t12029 = t10632 * t10921;
t12394 = t10933 * t11519 + t12029;
t9937 = -t11403 * t10986 - t10989 * t12394;
t10470 = -t11513 * t11861 + t10956 * (-t10815 * t10986 - t11513 * t11837);
t11001 = t10952 * t11010;
t11754 = t10986 * t12161;
t11755 = t10861 * t12161;
t10608 = t10815 * t10939 - t11513 * t11944;
t10614 = t10815 * t11944 + t12004;
t10227 = -t10608 * t11861 - t10956 * (t10608 * t11837 - t10614 * t10986);
t10411 = 0.1e1 / ((-t10691 * t10956 + t11729) * t10959 + t11831);
t12077 = t10227 * t10411;
t10600 = t10815 * t11924 - t11945;
t10601 = -t10815 * t10927 - t11513 * t11924;
t10224 = t10601 * t11861 + t10956 * (-t10600 * t10986 + t10601 * t11837);
t12080 = t10224 * t10411;
t9981 = t11022 * t12077 + t11016 * t12080 + (t10959 * t11856 + t10908) * t11482 + (-t10470 * t11001 - ((t10960 * t12143 + t11754 * t11990) * t10954 + ((t10910 * t11754 - t10989 * t12143) * t10956 + t10989 * t11755) * t11861 + (t10956 * t11755 - t12143) * t10960) * t12161) * t12412;
t9978 = qJ(3,2) * t9981;
t9880 = t9937 + (t9978 + t11634) * t12466;
t10979 = legFrame(6,2);
t10942 = sin(t10979);
t10905 = t11795 + qJ(3,6);
t10878 = t10960 * t10905;
t10976 = cos(qJ(2,6));
t11860 = t10957 * t10976;
t12320 = t10865 * t11860 - t10878;
t12465 = t12320 * t10942;
t10980 = legFrame(5,2);
t10943 = sin(t10980);
t10906 = t11795 + qJ(3,5);
t10879 = t10960 * t10906;
t10977 = cos(qJ(2,5));
t11859 = t10957 * t10977;
t12321 = t10865 * t11859 - t10879;
t12464 = t12321 * t10943;
t10981 = legFrame(4,2);
t10944 = sin(t10981);
t10907 = t11795 + qJ(3,4);
t10880 = t10960 * t10907;
t10978 = cos(qJ(2,4));
t11858 = t10957 * t10978;
t12322 = t10865 * t11858 - t10880;
t12463 = t12322 * t10944;
t12253 = koppelP(6,2);
t12259 = koppelP(6,1);
t11420 = t11812 * t12259 + t11815 * t12253;
t11282 = t11814 * t11420;
t11659 = t12259 * t11815;
t11414 = t11812 * t12253 - t11659;
t11300 = t11414 * t11813;
t12247 = koppelP(6,3);
t11653 = t11816 * t12247;
t12420 = t11653 + t11300;
t11132 = t11817 * t12420 + t11282;
t11288 = t11817 * t11414;
t11084 = (t11282 * t11813 + t11288) * t12235 + t11132 * t12237;
t11647 = t11813 * t12247;
t12292 = t11414 * t11816 - t11647;
t11219 = t12236 * t12292;
t12459 = t11814 * t11219 + t11084;
t11294 = t11817 * t11420;
t11126 = -t11814 * t12420 + t11294;
t11276 = t11814 * t11414;
t11078 = (t11294 * t11813 - t11276) * t12235 + t11126 * t12237;
t12458 = t11817 * t11219 + t11078;
t12254 = koppelP(5,2);
t12260 = koppelP(5,1);
t11421 = t11812 * t12260 + t11815 * t12254;
t11283 = t11814 * t11421;
t11660 = t12260 * t11815;
t11415 = t11812 * t12254 - t11660;
t11301 = t11415 * t11813;
t12248 = koppelP(5,3);
t11654 = t11816 * t12248;
t12419 = t11654 + t11301;
t11135 = t11817 * t12419 + t11283;
t11289 = t11817 * t11415;
t11085 = (t11283 * t11813 + t11289) * t12235 + t11135 * t12237;
t11648 = t11813 * t12248;
t12291 = t11415 * t11816 - t11648;
t11220 = t12236 * t12291;
t12457 = t11814 * t11220 + t11085;
t11295 = t11817 * t11421;
t11127 = -t11814 * t12419 + t11295;
t11277 = t11814 * t11415;
t11079 = (t11295 * t11813 - t11277) * t12235 + t11127 * t12237;
t12456 = t11817 * t11220 + t11079;
t12255 = koppelP(4,2);
t12261 = koppelP(4,1);
t11422 = t11812 * t12261 + t11815 * t12255;
t11284 = t11814 * t11422;
t11661 = t12261 * t11815;
t11416 = t11812 * t12255 - t11661;
t11302 = t11416 * t11813;
t12249 = koppelP(4,3);
t11655 = t11816 * t12249;
t12418 = t11655 + t11302;
t11138 = t11817 * t12418 + t11284;
t11290 = t11817 * t11416;
t11086 = (t11284 * t11813 + t11290) * t12235 + t11138 * t12237;
t11649 = t11813 * t12249;
t12290 = t11416 * t11816 - t11649;
t11221 = t12236 * t12290;
t12455 = t11814 * t11221 + t11086;
t11296 = t11817 * t11422;
t11128 = -t11814 * t12418 + t11296;
t11278 = t11814 * t11416;
t11080 = (t11296 * t11813 - t11278) * t12235 + t11128 * t12237;
t12454 = t11817 * t11221 + t11080;
t10948 = cos(t10979);
t11006 = t12234 + (-t11126 * t11814 + t11132 * t11817) * t12230 + (t11814 * t12459 + t11817 * t12458) * t12236 + (-t11078 * t11548 + t11084 * t11552 - t11126 * t11256 + t11132 * t11257) * t12235 + t12414 * (-(t11288 * t11813 + t11282) * t11814 + (t11276 * t11813 - t11294) * t11817);
t11114 = -t11420 * t11623 + t12236 * t12420;
t11258 = t11549 * t12253 - t11550 * t12259;
t11225 = t11647 - t11258;
t11012 = t12232 + ((-t11300 * t11814 + t11294) * t11813 - t11258 * t11548) * t12229 - t12459 * t12237 - t11114 * t11621 + (t11114 * t11548 - t11813 * t12459) * t12235 + t12286 * t11126 + t12281 * t11225;
t11018 = t12233 + ((-t11300 * t11817 - t11282) * t11813 - t11258 * t11552) * t12229 - t12458 * t12237 + t11114 * t11619 + (t11114 * t11552 - t11813 * t12458) * t12235 - t12286 * t11132 + t12282 * t11225;
t10967 = legFrame(6,1);
t10923 = sin(t10967);
t10935 = cos(t10967);
t11841 = t10960 * t10976;
t10973 = sin(qJ(2,6));
t11848 = t10958 * t10973;
t10829 = t10955 * t11841 + t11848;
t11869 = t10955 * t10973;
t10832 = t10958 * t11841 - t11869;
t10961 = legFrame(6,3);
t10917 = sin(t10961);
t10929 = cos(t10961);
t11517 = t10917 * t10955 - t10929 * t10958;
t11982 = t10905 * t10957;
t11179 = t11517 * t11982 + (t10829 * t10917 - t10832 * t10929) * t10865;
t10799 = t10973 * t10861;
t11983 = t10905 * t10956;
t10663 = -t10976 * t11983 + t10799;
t10534 = t10663 * t10960 + t11727;
t10802 = t10861 * t10976;
t10666 = t10973 * t11983 + t10802;
t11531 = -t10534 * t10955 + t10666 * t10958;
t11532 = t10534 * t10958 + t10666 * t10955;
t11191 = t10917 * t11531 + t10929 * t11532;
t10811 = t10917 * t10958 + t10929 * t10955;
t11479 = t10811 * t10942;
t11894 = t10948 * t10960;
t11965 = t10923 * t11517;
t11823 = t10663 * t10957 - t10789;
t12273 = t10917 * t11532 - t10929 * t11531;
t12307 = -t10942 * t12273 - t11823 * t10948;
t12392 = t12320 * t10948 + t10942 * (t10811 * t11982 - t10865 * (-t10829 * t10929 - t10832 * t10917));
t11835 = -t10954 * t12320 - t10878;
t12408 = 0.1e1 / (t10959 * t11823 + t11835);
t11064 = t12408 * ((t10923 * t11179 - t10935 * t12392) * t10954 + (t10923 * t11191 - t10935 * t12307) * t10959 - t10905 * (t10935 * t11894 + (-t10935 * t11479 + t11965) * t10957));
t12008 = t11517 * t10935;
t11065 = t12408 * ((t10923 * t12392 + t11179 * t10935) * t10954 + (t10923 * t12307 + t11191 * t10935) * t10959 + t10905 * (t10923 * t11894 + (-t10923 * t11479 - t12008) * t10957));
t11492 = t10865 * t11841 + t11982;
t11916 = t10942 * t10960;
t11989 = t10865 * t10973;
t12336 = t11823 * t10942;
t11107 = ((t10811 * t11492 - t11517 * t11989) * t10948 - t12465) * t10954 + ((-t10534 * t10811 - t10666 * t11517) * t10948 + t12336) * t10959 - t10905 * (t10811 * t10948 * t10957 + t11916);
t12207 = t10935 * g(3);
t12210 = t10923 * g(2);
t12311 = t12207 - t12210;
t11306 = -t11545 * t12253 - t11653;
t10580 = t10877 * t11659 + t11306 * t12237 - t11622 * t12253;
t11275 = (t11480 * t12253 + t11625 * t12259) * t11815 - (t11625 * t12253 + t12237 * t12259) * t11812 - (t11622 * t12259 - t12236 * t12247) * t11813;
t10295 = t10580 * t11817 + t11275 * t11814 + t10992;
t10301 = t10580 * t11814 - t11275 * t11817 + t10991;
t10504 = (t11623 * t12253 + t11624 * t12259) * t11815 + t12259 * t11471 - t12253 * t11472 - t12247 * t11625 - t10993;
t10145 = -t10504 * t10948 + (t10295 * t10923 - t10301 * t10935) * t10942;
t10175 = t10295 * t10935 + t10923 * t10301;
t10109 = t10145 * t10958 + t10175 * t10955;
t12401 = -t10145 * t10955 + t10175 * t10958;
t10049 = t10109 * t10929 + t10917 * t12401;
t10704 = -t10836 - t11983;
t12045 = (-t10704 * t10973 + t10802) * t10960;
t12432 = t10704 * t10976 + t10799;
t10025 = -t10049 * t12045 + (t10917 * t10109 - t10929 * t12401) * t12432;
t10427 = 0.1e1 / (t11861 * t12432 + (t10905 * t10954 - qJ(3,6) + t12332) * t10960);
t12147 = t10025 * t10427;
t11893 = t10948 * t10973;
t11915 = t10942 * t10973;
t10103 = (t10295 * t11841 + t10301 * t11915) * t10935 + (-t10295 * t11915 + t10301 * t11841) * t10923 + t10504 * t11893;
t11702 = t10948 * t11841;
t11708 = t10942 * t11841;
t11401 = (-t10295 * t10973 + t10301 * t11708) * t10935 - (t10295 * t11708 + t10301 * t10973) * t10923 + t10504 * t11702;
t10004 = ((-t10955 * t10103 + t10958 * t11401) * t10929 - (t10103 * t10958 + t10955 * t11401) * t10917) * t10956 - t10049 * t11861;
t11719 = t10905 * t11860;
t10677 = t10835 + t11719;
t11733 = t10957 * t10799;
t10379 = -t10677 * t11863 + t10959 * t11733 + t11835;
t10373 = 0.1e1 / t10379;
t12168 = t10004 * t10373;
t11632 = t12147 * t12168;
t11486 = t12408 * t10956 * t11632;
t12063 = t10427 * t10956;
t12241 = qJ(3,6) ^ 2;
t12424 = -0.1e1 / ((t10976 * t11667 + t10960 * qJ(3,6) + (-t10976 * t11553 + t11786) * pkin(8)) * t10954 + ((t10973 * t12217 - t11614) * t12220 + (t11666 - t11719) * t10956 + t10973 * t11469) * t10959 - t10878) * (t10025 * t12063 * t12383 - t11470 * t12147 + (-((pkin(3) + t10905) * (-pkin(3) + t10905) + t11249) * t10954 + t10905 * t11665 + t12241 + (qJ(3,6) * t12175 + t11511) * pkin(8) + t12280) * t12168) * t12168 + t10861 * t11486;
t12447 = -t11006 * t11107 * t12408 + t10942 * g(1) + t10948 * t12311 + t10959 * t12424 - t11012 * t11064 - t11018 * t11065;
t10949 = cos(t10980);
t11007 = t12234 + (-t11127 * t11814 + t11135 * t11817) * t12230 + (t11814 * t12457 + t11817 * t12456) * t12236 + (-t11079 * t11548 + t11085 * t11552 - t11127 * t11256 + t11135 * t11257) * t12235 + t12414 * (-(t11289 * t11813 + t11283) * t11814 + (t11277 * t11813 - t11295) * t11817);
t11115 = -t11421 * t11623 + t12236 * t12419;
t11259 = t11549 * t12254 - t11550 * t12260;
t11226 = t11648 - t11259;
t11013 = t12232 + ((-t11301 * t11814 + t11295) * t11813 - t11259 * t11548) * t12229 - t12457 * t12237 - t11115 * t11621 + (t11115 * t11548 - t11813 * t12457) * t12235 + t12286 * t11127 + t12281 * t11226;
t11019 = t12233 + ((-t11301 * t11817 - t11283) * t11813 - t11259 * t11552) * t12229 - t12456 * t12237 + t11115 * t11619 + (t11115 * t11552 - t11813 * t12456) * t12235 - t12286 * t11135 + t12282 * t11226;
t10968 = legFrame(5,1);
t10924 = sin(t10968);
t10936 = cos(t10968);
t11840 = t10960 * t10977;
t10974 = sin(qJ(2,5));
t11847 = t10958 * t10974;
t10830 = t10955 * t11840 + t11847;
t11868 = t10955 * t10974;
t10833 = t10958 * t11840 - t11868;
t10962 = legFrame(5,3);
t10918 = sin(t10962);
t10930 = cos(t10962);
t11516 = t10918 * t10955 - t10930 * t10958;
t11980 = t10906 * t10957;
t11178 = t11516 * t11980 + (t10830 * t10918 - t10833 * t10930) * t10865;
t10800 = t10974 * t10861;
t11981 = t10906 * t10956;
t10664 = -t10977 * t11981 + t10800;
t10535 = t10664 * t10960 + t11727;
t10803 = t10861 * t10977;
t10667 = t10974 * t11981 + t10803;
t11529 = -t10535 * t10955 + t10667 * t10958;
t11530 = t10535 * t10958 + t10667 * t10955;
t11189 = t10918 * t11529 + t10930 * t11530;
t10812 = t10918 * t10958 + t10930 * t10955;
t11478 = t10812 * t10943;
t11892 = t10949 * t10960;
t11960 = t10924 * t11516;
t11822 = t10664 * t10957 - t10789;
t12272 = t10918 * t11530 - t10930 * t11529;
t12306 = -t10943 * t12272 - t11822 * t10949;
t12391 = t12321 * t10949 + t10943 * (t10812 * t11980 - t10865 * (-t10830 * t10930 - t10833 * t10918));
t11834 = -t10954 * t12321 - t10879;
t12409 = 0.1e1 / (t10959 * t11822 + t11834);
t11062 = t12409 * ((t10924 * t11178 - t10936 * t12391) * t10954 + (t10924 * t11189 - t10936 * t12306) * t10959 - t10906 * (t10936 * t11892 + (-t10936 * t11478 + t11960) * t10957));
t12007 = t11516 * t10936;
t11063 = t12409 * ((t10924 * t12391 + t11178 * t10936) * t10954 + (t10924 * t12306 + t11189 * t10936) * t10959 + t10906 * (t10924 * t11892 + (-t10924 * t11478 - t12007) * t10957));
t11491 = t10865 * t11840 + t11980;
t11912 = t10943 * t10960;
t11988 = t10865 * t10974;
t12337 = t11822 * t10943;
t11106 = ((t10812 * t11491 - t11516 * t11988) * t10949 - t12464) * t10954 + ((-t10535 * t10812 - t10667 * t11516) * t10949 + t12337) * t10959 - t10906 * (t10812 * t10949 * t10957 + t11912);
t12206 = t10936 * g(3);
t12209 = t10924 * g(2);
t12312 = t12206 - t12209;
t11307 = -t11545 * t12254 - t11654;
t10581 = t10877 * t11660 + t11307 * t12237 - t11622 * t12254;
t11274 = (t11480 * t12254 + t11625 * t12260) * t11815 - (t11625 * t12254 + t12237 * t12260) * t11812 - (t11622 * t12260 - t12236 * t12248) * t11813;
t10296 = t10581 * t11817 + t11274 * t11814 + t10992;
t10302 = t10581 * t11814 - t11274 * t11817 + t10991;
t10505 = (t11623 * t12254 + t11624 * t12260) * t11815 + t12260 * t11471 - t12254 * t11472 - t12248 * t11625 - t10993;
t10146 = -t10505 * t10949 + (t10296 * t10924 - t10302 * t10936) * t10943;
t10176 = t10296 * t10936 + t10924 * t10302;
t10110 = t10146 * t10958 + t10176 * t10955;
t12400 = -t10146 * t10955 + t10176 * t10958;
t10050 = t10110 * t10930 + t10918 * t12400;
t10705 = -t10836 - t11981;
t12044 = (-t10705 * t10974 + t10803) * t10960;
t12431 = t10705 * t10977 + t10800;
t10026 = -t10050 * t12044 + (t10918 * t10110 - t10930 * t12400) * t12431;
t10428 = 0.1e1 / (t11861 * t12431 + (t10906 * t10954 - qJ(3,5) + t12332) * t10960);
t12146 = t10026 * t10428;
t11891 = t10949 * t10974;
t11911 = t10943 * t10974;
t10104 = (t10296 * t11840 + t10302 * t11911) * t10936 + (-t10296 * t11911 + t10302 * t11840) * t10924 + t10505 * t11891;
t11701 = t10949 * t11840;
t11707 = t10943 * t11840;
t11400 = (-t10296 * t10974 + t10302 * t11707) * t10936 - (t10296 * t11707 + t10302 * t10974) * t10924 + t10505 * t11701;
t10005 = ((-t10955 * t10104 + t10958 * t11400) * t10930 - (t10104 * t10958 + t10955 * t11400) * t10918) * t10956 - t10050 * t11861;
t11717 = t10906 * t11859;
t10680 = t10835 + t11717;
t11732 = t10957 * t10800;
t10380 = -t10680 * t11863 + t10959 * t11732 + t11834;
t10376 = 0.1e1 / t10380;
t12167 = t10005 * t10376;
t11640 = t12146 * t12167;
t11485 = t12409 * t10956 * t11640;
t12062 = t10428 * t10956;
t12242 = qJ(3,5) ^ 2;
t12425 = -0.1e1 / ((t10977 * t11667 + t10960 * qJ(3,5) + (-t10977 * t11553 + t11786) * pkin(8)) * t10954 + ((t10974 * t12217 - t11614) * t12220 + (t11666 - t11717) * t10956 + t10974 * t11469) * t10959 - t10879) * (t10026 * t12062 * t12383 - t11470 * t12146 + (-((pkin(3) + t10906) * (-pkin(3) + t10906) + t11249) * t10954 + t10906 * t11665 + t12242 + (qJ(3,5) * t12175 + t11511) * pkin(8) + t12280) * t12167) * t12167 + t10861 * t11485;
t12446 = -t11007 * t11106 * t12409 + t10943 * g(1) + t10949 * t12312 + t10959 * t12425 - t11013 * t11062 - t11019 * t11063;
t10950 = cos(t10981);
t11008 = t12234 + (-t11128 * t11814 + t11138 * t11817) * t12230 + (t11814 * t12455 + t11817 * t12454) * t12236 + (-t11080 * t11548 + t11086 * t11552 - t11128 * t11256 + t11138 * t11257) * t12235 + t12414 * (-(t11290 * t11813 + t11284) * t11814 + (t11278 * t11813 - t11296) * t11817);
t11116 = -t11422 * t11623 + t12236 * t12418;
t11260 = t11549 * t12255 - t11550 * t12261;
t11227 = t11649 - t11260;
t11014 = t12232 + ((-t11302 * t11814 + t11296) * t11813 - t11260 * t11548) * t12229 - t12455 * t12237 - t11116 * t11621 + (t11116 * t11548 - t11813 * t12455) * t12235 + t12286 * t11128 + t12281 * t11227;
t11020 = t12233 + ((-t11302 * t11817 - t11284) * t11813 - t11260 * t11552) * t12229 - t12454 * t12237 + t11116 * t11619 + (t11116 * t11552 - t11813 * t12454) * t12235 - t12286 * t11138 + t12282 * t11227;
t10969 = legFrame(4,1);
t10925 = sin(t10969);
t10937 = cos(t10969);
t11839 = t10960 * t10978;
t10975 = sin(qJ(2,4));
t11846 = t10958 * t10975;
t10831 = t10955 * t11839 + t11846;
t11867 = t10955 * t10975;
t10834 = t10958 * t11839 - t11867;
t10963 = legFrame(4,3);
t10919 = sin(t10963);
t10931 = cos(t10963);
t11515 = t10919 * t10955 - t10931 * t10958;
t11978 = t10907 * t10957;
t11177 = t11515 * t11978 + (t10831 * t10919 - t10834 * t10931) * t10865;
t10801 = t10975 * t10861;
t11979 = t10907 * t10956;
t10665 = -t10978 * t11979 + t10801;
t10536 = t10665 * t10960 + t11727;
t10804 = t10861 * t10978;
t10668 = t10975 * t11979 + t10804;
t11527 = -t10536 * t10955 + t10668 * t10958;
t11528 = t10536 * t10958 + t10668 * t10955;
t11187 = t10919 * t11527 + t10931 * t11528;
t10813 = t10919 * t10958 + t10931 * t10955;
t11477 = t10813 * t10944;
t11890 = t10950 * t10960;
t11955 = t10925 * t11515;
t11821 = t10665 * t10957 - t10789;
t12271 = t10919 * t11528 - t10931 * t11527;
t12305 = -t10944 * t12271 - t11821 * t10950;
t12390 = t12322 * t10950 + t10944 * (t10813 * t11978 - t10865 * (-t10831 * t10931 - t10834 * t10919));
t11833 = -t10954 * t12322 - t10880;
t12410 = 0.1e1 / (t10959 * t11821 + t11833);
t11060 = t12410 * ((t10925 * t11177 - t10937 * t12390) * t10954 + (t10925 * t11187 - t10937 * t12305) * t10959 - t10907 * (t10937 * t11890 + (-t10937 * t11477 + t11955) * t10957));
t12006 = t11515 * t10937;
t11061 = t12410 * ((t10925 * t12390 + t11177 * t10937) * t10954 + (t10925 * t12305 + t11187 * t10937) * t10959 + t10907 * (t10925 * t11890 + (-t10925 * t11477 - t12006) * t10957));
t11490 = t10865 * t11839 + t11978;
t11908 = t10944 * t10960;
t11987 = t10865 * t10975;
t12338 = t11821 * t10944;
t11105 = ((t10813 * t11490 - t11515 * t11987) * t10950 - t12463) * t10954 + ((-t10536 * t10813 - t10668 * t11515) * t10950 + t12338) * t10959 - t10907 * (t10813 * t10950 * t10957 + t11908);
t12205 = t10937 * g(3);
t12208 = t10925 * g(2);
t12313 = t12205 - t12208;
t11308 = -t11545 * t12255 - t11655;
t10582 = t10877 * t11661 + t11308 * t12237 - t11622 * t12255;
t11273 = (t11480 * t12255 + t11625 * t12261) * t11815 - (t11625 * t12255 + t12237 * t12261) * t11812 - (t11622 * t12261 - t12236 * t12249) * t11813;
t10297 = t10582 * t11817 + t11273 * t11814 + t10992;
t10303 = t10582 * t11814 - t11273 * t11817 + t10991;
t10506 = (t11623 * t12255 + t11624 * t12261) * t11815 + t12261 * t11471 - t12255 * t11472 - t12249 * t11625 - t10993;
t10147 = -t10506 * t10950 + (t10297 * t10925 - t10303 * t10937) * t10944;
t10177 = t10297 * t10937 + t10925 * t10303;
t10111 = t10147 * t10958 + t10177 * t10955;
t12399 = -t10147 * t10955 + t10177 * t10958;
t10051 = t10111 * t10931 + t10919 * t12399;
t10706 = -t10836 - t11979;
t12043 = (-t10706 * t10975 + t10804) * t10960;
t12430 = t10706 * t10978 + t10801;
t10027 = -t10051 * t12043 + (t10919 * t10111 - t10931 * t12399) * t12430;
t10429 = 0.1e1 / (t11861 * t12430 + (t10907 * t10954 - qJ(3,4) + t12332) * t10960);
t12145 = t10027 * t10429;
t11889 = t10950 * t10975;
t11907 = t10944 * t10975;
t10105 = (t10297 * t11839 + t10303 * t11907) * t10937 + (-t10297 * t11907 + t10303 * t11839) * t10925 + t10506 * t11889;
t11700 = t10950 * t11839;
t11706 = t10944 * t11839;
t11399 = (-t10297 * t10975 + t10303 * t11706) * t10937 - (t10297 * t11706 + t10303 * t10975) * t10925 + t10506 * t11700;
t10006 = ((-t10955 * t10105 + t10958 * t11399) * t10931 - (t10105 * t10958 + t10955 * t11399) * t10919) * t10956 - t10051 * t11861;
t11715 = t10907 * t11858;
t10683 = t10835 + t11715;
t11731 = t10957 * t10801;
t10381 = -t10683 * t11863 + t10959 * t11731 + t11833;
t10374 = 0.1e1 / t10381;
t12166 = t10006 * t10374;
t11639 = t12145 * t12166;
t11484 = t12410 * t10956 * t11639;
t12061 = t10429 * t10956;
t12243 = qJ(3,4) ^ 2;
t12426 = -0.1e1 / ((t10978 * t11667 + t10960 * qJ(3,4) + (-t10978 * t11553 + t11786) * pkin(8)) * t10954 + ((t10975 * t12217 - t11614) * t12220 + (t11666 - t11715) * t10956 + t10975 * t11469) * t10959 - t10880) * (t10027 * t12061 * t12383 - t11470 * t12145 + (-((pkin(3) + t10907) * (-pkin(3) + t10907) + t11249) * t10954 + t10907 * t11665 + t12243 + (qJ(3,4) * t12175 + t11511) * pkin(8) + t12280) * t12166) * t12166 + t10861 * t11484;
t12445 = -t11008 * t11105 * t12410 + t10944 * g(1) + t10950 * t12313 + t10959 * t12426 - t11014 * t11060 - t11020 * t11061;
t12382 = MDP(7) * t10956;
t12375 = (-t11517 * (t10959 * t11989 + t10666) * t10960 - t12432 * t10811) * t10427;
t12374 = (-t11516 * (t10959 * t11988 + t10667) * t10960 - t12431 * t10812) * t10428;
t12373 = (-t11515 * (t10959 * t11987 + t10668) * t10960 - t12430 * t10813) * t10429;
t12372 = (-t11514 * (t10959 * t11986 + t10672) * t10960 - t12429 * t10814) * t10430;
t12371 = (-t11513 * (t10959 * t11985 + t10673) * t10960 - t12428 * t10815) * t10431;
t12370 = (-t11512 * (t10959 * t11984 + t10674) * t10960 - t12427 * t10816) * t10432;
t11428 = t10542 * t10928;
t10363 = t10674 * t10940 - t10947 * t11428;
t11427 = t10542 * t10940;
t10420 = t10674 * t11939 + t11427;
t10195 = t10363 * t10958 - t10420 * t10955;
t10204 = t10363 * t10955 + t10420 * t10958;
t11445 = t10928 * t11703 + t10940 * t10987;
t11710 = t10947 * t11972;
t10488 = -t10865 * t11445 - t10928 * t11710;
t11447 = t10928 * t11895 - t10940 * t11836;
t10503 = t10865 * t11447 - t10940 * t11972;
t10260 = t10488 * t10958 + t10503 * t10955;
t10267 = -t10488 * t10955 + t10503 * t10958;
t10551 = -t10865 * t11843 - t10955 * t11487;
t10554 = t10865 * t11864 - t10958 * t11487;
t11898 = t10947 * t10955;
t11919 = t10940 * t10958;
t10773 = -t10928 * t11898 + t11919;
t11897 = t10947 * t10958;
t11920 = t10940 * t10955;
t10785 = t10928 * t11897 + t11920;
t11862 = t10957 * t10958;
t11870 = t10955 * t10957;
t11108 = ((t10551 * t10934 + t10554 * t10922) * t10953 + t12460) * t10954 + (t10953 * t12268 - t12341) * t10959 + ((t10922 * t11862 + t10934 * t11870) * t10953 + t11896) * t10911;
t11347 = t10960 * t11419;
t11372 = t10934 * t11419;
t11378 = t10928 * t11419;
t11384 = t10922 * t11419;
t11565 = t10957 * t11652;
t11495 = t10934 * t11565;
t11501 = t10922 * t11565;
t11559 = t10960 * t11652;
t11806 = t10947 * t12252;
t11566 = t11814 * t11806;
t11584 = t10934 * t11652;
t11590 = t10928 * t11652;
t11596 = t10922 * t11652;
t11668 = t10958 * t11814;
t11670 = t10955 * t11814;
t11672 = t10934 * t11814;
t11684 = t10922 * t11814;
t11805 = t10957 * t12252;
t11824 = (t11547 * t12264 + t11817 * t12258) * t11815 + t11812 * (-t11547 * t12258 + t11817 * t12264);
t12148 = ((((-t12325 * t11378 + (-t10551 * t11672 - t10554 * t11684) * t12252) * t11816 + t12325 * t11590) * t10953 + (t10260 * t11384 - t10267 * t11372 - t11566 * t12325) * t11816 + t10267 * t11584 - t10260 * t11596) * t10954 + (((t11818 * t11378 + (t11521 * t11672 - t11522 * t11684) * t12252) * t11816 - t11818 * t11590) * t10953 + (-t10195 * t11384 - t10204 * t11372 + t11566 * t11818) * t11816 + t10204 * t11584 + t10195 * t11596) * t10959 + (((-t10928 * t11347 + (-t10922 * t11668 - t10934 * t11670) * t11805) * t11816 + t10928 * t11559) * t10953 + (-t10960 * t11566 + (-t10773 * t11372 + t10785 * t11384) * t10957) * t11816 + t10773 * t11495 - t10785 * t11501) * t10911 + t11108 * t11824) * t12413;
t11430 = t10541 * t10927;
t10362 = t10673 * t10939 - t10946 * t11430;
t11429 = t10541 * t10939;
t10419 = t10673 * t11944 + t11429;
t10194 = t10362 * t10958 - t10419 * t10955;
t10203 = t10362 * t10955 + t10419 * t10958;
t11449 = t10927 * t11704 + t10939 * t10986;
t11712 = t10946 * t11974;
t10486 = -t10865 * t11449 - t10927 * t11712;
t11451 = t10927 * t11899 - t10939 * t11837;
t10501 = t10865 * t11451 - t10939 * t11974;
t10258 = t10486 * t10958 + t10501 * t10955;
t10265 = -t10486 * t10955 + t10501 * t10958;
t10550 = -t10865 * t11844 - t10955 * t11488;
t10553 = t10865 * t11865 - t10958 * t11488;
t11902 = t10946 * t10955;
t11922 = t10939 * t10958;
t10771 = -t10927 * t11902 + t11922;
t11901 = t10946 * t10958;
t11923 = t10939 * t10955;
t10783 = t10927 * t11901 + t11923;
t11109 = ((t10550 * t10933 + t10553 * t10921) * t10952 + t12461) * t10954 + (t10952 * t12269 - t12340) * t10959 + ((t10921 * t11862 + t10933 * t11870) * t10952 + t11900) * t10910;
t11346 = t10960 * t11418;
t11373 = t10933 * t11418;
t11379 = t10927 * t11418;
t11385 = t10921 * t11418;
t11564 = t10957 * t11651;
t11496 = t10933 * t11564;
t11502 = t10921 * t11564;
t11558 = t10960 * t11651;
t11807 = t10946 * t12251;
t11568 = t11814 * t11807;
t11585 = t10933 * t11651;
t11591 = t10927 * t11651;
t11597 = t10921 * t11651;
t11674 = t10933 * t11814;
t11686 = t10921 * t11814;
t11804 = t10957 * t12251;
t11825 = (t11547 * t12263 + t11817 * t12257) * t11815 + t11812 * (-t11547 * t12257 + t11817 * t12263);
t12150 = ((((-t12324 * t11379 + (-t10550 * t11674 - t10553 * t11686) * t12251) * t11816 + t12324 * t11591) * t10952 + (t10258 * t11385 - t10265 * t11373 - t11568 * t12324) * t11816 + t10265 * t11585 - t10258 * t11597) * t10954 + (((t11819 * t11379 + (t11523 * t11674 - t11524 * t11686) * t12251) * t11816 - t11819 * t11591) * t10952 + (-t10194 * t11385 - t10203 * t11373 + t11568 * t11819) * t11816 + t10203 * t11585 + t10194 * t11597) * t10959 + (((-t10927 * t11346 + (-t10921 * t11668 - t10933 * t11670) * t11804) * t11816 + t10927 * t11558) * t10952 + (-t10960 * t11568 + (-t10771 * t11373 + t10783 * t11385) * t10957) * t11816 + t10771 * t11496 - t10783 * t11502) * t10910 + t11109 * t11825) * t12412;
t11432 = t10540 * t10926;
t10361 = t10672 * t10938 - t10945 * t11432;
t11431 = t10540 * t10938;
t10418 = t10672 * t11949 + t11431;
t10193 = t10361 * t10958 - t10418 * t10955;
t10202 = t10361 * t10955 + t10418 * t10958;
t11453 = t10926 * t11705 + t10938 * t10985;
t11714 = t10945 * t11976;
t10484 = -t10865 * t11453 - t10926 * t11714;
t11455 = t10926 * t11903 - t10938 * t11838;
t10499 = t10865 * t11455 - t10938 * t11976;
t10256 = t10484 * t10958 + t10499 * t10955;
t10263 = -t10484 * t10955 + t10499 * t10958;
t10549 = -t10865 * t11845 - t10955 * t11489;
t10552 = t10865 * t11866 - t10958 * t11489;
t11906 = t10945 * t10955;
t11925 = t10938 * t10958;
t10769 = -t10926 * t11906 + t11925;
t11905 = t10945 * t10958;
t11926 = t10938 * t10955;
t10781 = t10926 * t11905 + t11926;
t11110 = ((t10549 * t10932 + t10552 * t10920) * t10951 + t12462) * t10954 + (t10951 * t12270 - t12339) * t10959 + ((t10920 * t11862 + t10932 * t11870) * t10951 + t11904) * t10909;
t11345 = t10960 * t11417;
t11374 = t10932 * t11417;
t11380 = t10926 * t11417;
t11386 = t10920 * t11417;
t11563 = t10957 * t11650;
t11497 = t10932 * t11563;
t11503 = t10920 * t11563;
t11557 = t10960 * t11650;
t11808 = t10945 * t12250;
t11570 = t11814 * t11808;
t11586 = t10932 * t11650;
t11592 = t10926 * t11650;
t11598 = t10920 * t11650;
t11676 = t10932 * t11814;
t11688 = t10920 * t11814;
t11803 = t10957 * t12250;
t11826 = (t11547 * t12262 + t11817 * t12256) * t11815 + t11812 * (-t11547 * t12256 + t11817 * t12262);
t12152 = ((((-t12323 * t11380 + (-t10549 * t11676 - t10552 * t11688) * t12250) * t11816 + t12323 * t11592) * t10951 + (t10256 * t11386 - t10263 * t11374 - t11570 * t12323) * t11816 + t10263 * t11586 - t10256 * t11598) * t10954 + (((t11820 * t11380 + (t11525 * t11676 - t11526 * t11688) * t12250) * t11816 - t11820 * t11592) * t10951 + (-t10193 * t11386 - t10202 * t11374 + t11570 * t11820) * t11816 + t10202 * t11586 + t10193 * t11598) * t10959 + (((-t10926 * t11345 + (-t10920 * t11668 - t10932 * t11670) * t11803) * t11816 + t10926 * t11557) * t10951 + (-t10960 * t11570 + (-t10769 * t11374 + t10781 * t11386) * t10957) * t11816 + t10769 * t11497 - t10781 * t11503) * t10909 + t11110 * t11826) * t12411;
t11434 = t10536 * t10925;
t10357 = t10668 * t10937 - t10944 * t11434;
t11433 = t10536 * t10937;
t11954 = t10925 * t10944;
t10405 = t10668 * t11954 + t11433;
t10183 = t10357 * t10958 - t10405 * t10955;
t10192 = t10357 * t10955 + t10405 * t10958;
t11457 = t10925 * t11706 + t10937 * t10975;
t11716 = t10944 * t11978;
t10482 = -t10865 * t11457 - t10925 * t11716;
t11459 = t10925 * t11907 - t10937 * t11839;
t10497 = t10865 * t11459 - t10937 * t11978;
t10245 = t10482 * t10958 + t10497 * t10955;
t10252 = -t10482 * t10955 + t10497 * t10958;
t10545 = -t10865 * t11846 - t10955 * t11490;
t10548 = t10865 * t11867 - t10958 * t11490;
t11910 = t10944 * t10955;
t11928 = t10937 * t10958;
t10767 = -t10925 * t11910 + t11928;
t11909 = t10944 * t10958;
t11929 = t10937 * t10955;
t10779 = t10925 * t11909 + t11929;
t11111 = ((t10545 * t10931 + t10548 * t10919) * t10950 + t12463) * t10954 + (t10950 * t12271 - t12338) * t10959 + ((t10919 * t11862 + t10931 * t11870) * t10950 + t11908) * t10907;
t11344 = t10960 * t11416;
t11375 = t10931 * t11416;
t11381 = t10925 * t11416;
t11387 = t10919 * t11416;
t11562 = t10957 * t11649;
t11498 = t10931 * t11562;
t11504 = t10919 * t11562;
t11556 = t10960 * t11649;
t11809 = t10944 * t12249;
t11572 = t11814 * t11809;
t11587 = t10931 * t11649;
t11593 = t10925 * t11649;
t11599 = t10919 * t11649;
t11678 = t10931 * t11814;
t11690 = t10919 * t11814;
t11802 = t10957 * t12249;
t11827 = (t11547 * t12261 + t11817 * t12255) * t11815 + t11812 * (-t11547 * t12255 + t11817 * t12261);
t12154 = ((((-t12322 * t11381 + (-t10545 * t11678 - t10548 * t11690) * t12249) * t11816 + t12322 * t11593) * t10950 + (t10245 * t11387 - t10252 * t11375 - t11572 * t12322) * t11816 + t10252 * t11587 - t10245 * t11599) * t10954 + (((t11821 * t11381 + (t11527 * t11678 - t11528 * t11690) * t12249) * t11816 - t11821 * t11593) * t10950 + (-t10183 * t11387 - t10192 * t11375 + t11572 * t11821) * t11816 + t10192 * t11587 + t10183 * t11599) * t10959 + (((-t10925 * t11344 + (-t10919 * t11668 - t10931 * t11670) * t11802) * t11816 + t10925 * t11556) * t10950 + (-t10960 * t11572 + (-t10767 * t11375 + t10779 * t11387) * t10957) * t11816 + t10767 * t11498 - t10779 * t11504) * t10907 + t11111 * t11827) * t12410;
t11436 = t10535 * t10924;
t10356 = t10667 * t10936 - t10943 * t11436;
t11435 = t10535 * t10936;
t11959 = t10924 * t10943;
t10404 = t10667 * t11959 + t11435;
t10182 = t10356 * t10958 - t10404 * t10955;
t10191 = t10356 * t10955 + t10404 * t10958;
t11461 = t10924 * t11707 + t10936 * t10974;
t11718 = t10943 * t11980;
t10480 = -t10865 * t11461 - t10924 * t11718;
t11463 = t10924 * t11911 - t10936 * t11840;
t10495 = t10865 * t11463 - t10936 * t11980;
t10243 = t10480 * t10958 + t10495 * t10955;
t10250 = -t10480 * t10955 + t10495 * t10958;
t10544 = -t10865 * t11847 - t10955 * t11491;
t10547 = t10865 * t11868 - t10958 * t11491;
t11914 = t10943 * t10955;
t11931 = t10936 * t10958;
t10765 = -t10924 * t11914 + t11931;
t11913 = t10943 * t10958;
t11932 = t10936 * t10955;
t10777 = t10924 * t11913 + t11932;
t11112 = ((t10544 * t10930 + t10547 * t10918) * t10949 + t12464) * t10954 + (t10949 * t12272 - t12337) * t10959 + ((t10918 * t11862 + t10930 * t11870) * t10949 + t11912) * t10906;
t11343 = t10960 * t11415;
t11376 = t10930 * t11415;
t11382 = t10924 * t11415;
t11388 = t10918 * t11415;
t11561 = t10957 * t11648;
t11499 = t10930 * t11561;
t11505 = t10918 * t11561;
t11555 = t10960 * t11648;
t11810 = t10943 * t12248;
t11574 = t11814 * t11810;
t11588 = t10930 * t11648;
t11594 = t10924 * t11648;
t11600 = t10918 * t11648;
t11680 = t10930 * t11814;
t11692 = t10918 * t11814;
t11801 = t10957 * t12248;
t11828 = (t11547 * t12260 + t11817 * t12254) * t11815 + t11812 * (-t11547 * t12254 + t11817 * t12260);
t12155 = ((((-t12321 * t11382 + (-t10544 * t11680 - t10547 * t11692) * t12248) * t11816 + t12321 * t11594) * t10949 + (t10243 * t11388 - t10250 * t11376 - t11574 * t12321) * t11816 + t10250 * t11588 - t10243 * t11600) * t10954 + (((t11822 * t11382 + (t11529 * t11680 - t11530 * t11692) * t12248) * t11816 - t11822 * t11594) * t10949 + (-t10182 * t11388 - t10191 * t11376 + t11574 * t11822) * t11816 + t10191 * t11588 + t10182 * t11600) * t10959 + (((-t10924 * t11343 + (-t10918 * t11668 - t10930 * t11670) * t11801) * t11816 + t10924 * t11555) * t10949 + (-t10960 * t11574 + (-t10765 * t11376 + t10777 * t11388) * t10957) * t11816 + t10765 * t11499 - t10777 * t11505) * t10906 + t11112 * t11828) * t12409;
t11438 = t10534 * t10923;
t10355 = t10666 * t10935 - t10942 * t11438;
t11437 = t10534 * t10935;
t11964 = t10923 * t10942;
t10403 = t10666 * t11964 + t11437;
t10181 = t10355 * t10958 - t10403 * t10955;
t10190 = t10355 * t10955 + t10403 * t10958;
t11465 = t10923 * t11708 + t10935 * t10973;
t11720 = t10942 * t11982;
t10478 = -t10865 * t11465 - t10923 * t11720;
t11467 = t10923 * t11915 - t10935 * t11841;
t10493 = t10865 * t11467 - t10935 * t11982;
t10241 = t10478 * t10958 + t10493 * t10955;
t10248 = -t10478 * t10955 + t10493 * t10958;
t10543 = -t10865 * t11848 - t10955 * t11492;
t10546 = t10865 * t11869 - t10958 * t11492;
t11918 = t10942 * t10955;
t11934 = t10935 * t10958;
t10763 = -t10923 * t11918 + t11934;
t11917 = t10942 * t10958;
t11935 = t10935 * t10955;
t10775 = t10923 * t11917 + t11935;
t11113 = ((t10543 * t10929 + t10546 * t10917) * t10948 + t12465) * t10954 + (t10948 * t12273 - t12336) * t10959 + ((t10917 * t11862 + t10929 * t11870) * t10948 + t11916) * t10905;
t11342 = t10960 * t11414;
t11377 = t10929 * t11414;
t11383 = t10923 * t11414;
t11389 = t10917 * t11414;
t11560 = t10957 * t11647;
t11500 = t10929 * t11560;
t11506 = t10917 * t11560;
t11554 = t10960 * t11647;
t11811 = t10942 * t12247;
t11576 = t11814 * t11811;
t11589 = t10929 * t11647;
t11595 = t10923 * t11647;
t11601 = t10917 * t11647;
t11682 = t10929 * t11814;
t11694 = t10917 * t11814;
t11800 = t10957 * t12247;
t11829 = (t11547 * t12259 + t11817 * t12253) * t11815 + t11812 * (-t11547 * t12253 + t11817 * t12259);
t12156 = ((((-t12320 * t11383 + (-t10543 * t11682 - t10546 * t11694) * t12247) * t11816 + t12320 * t11595) * t10948 + (t10241 * t11389 - t10248 * t11377 - t11576 * t12320) * t11816 + t10248 * t11589 - t10241 * t11601) * t10954 + (((t11823 * t11383 + (t11531 * t11682 - t11532 * t11694) * t12247) * t11816 - t11823 * t11595) * t10948 + (-t10181 * t11389 - t10190 * t11377 + t11576 * t11823) * t11816 + t10190 * t11589 + t10181 * t11601) * t10959 + (((-t10923 * t11342 + (-t10917 * t11668 - t10929 * t11670) * t11800) * t11816 + t10923 * t11554) * t10948 + (-t10960 * t11576 + (-t10763 * t11377 + t10775 * t11389) * t10957) * t11816 + t10763 * t11500 - t10775 * t11506) * t10905 + t11113 * t11829) * t12408;
t12171 = t10004 ^ 2 / t10379 ^ 2;
t10466 = -t11517 * t11861 + t10956 * (-t10811 * t10973 - t11517 * t11841);
t11005 = t10948 * t11006;
t11768 = t10973 * t12168;
t11769 = t10861 * t12168;
t10604 = t10811 * t10935 - t11517 * t11964;
t10610 = t10811 * t11964 + t12008;
t10220 = -t10604 * t11861 - t10956 * (t10604 * t11841 - t10610 * t10973);
t10390 = 0.1e1 / ((-t10677 * t10956 + t11733) * t10959 + t11835);
t12084 = t10220 * t10390;
t11936 = t10935 * t10942;
t10592 = t10811 * t11936 - t11965;
t10593 = -t10811 * t10923 - t11517 * t11936;
t10217 = t10593 * t11861 + t10956 * (-t10592 * t10973 + t10593 * t11841);
t12087 = t10217 * t10390;
t9974 = t11018 * t12084 + t11012 * t12087 + (t10959 * t11860 + t10908) * t11486 + (-t10466 * t11005 - ((t10960 * t12147 + t11768 * t11990) * t10954 + ((t10905 * t11768 - t10976 * t12147) * t10956 + t10976 * t11769) * t11861 + (t10956 * t11769 - t12147) * t10960) * t12168) * t12408;
t9911 = t10973 * t9974 + t10976 * t12171;
t12170 = t10005 ^ 2 / t10380 ^ 2;
t10467 = -t11516 * t11861 + t10956 * (-t10812 * t10974 - t11516 * t11840);
t11004 = t10949 * t11007;
t11766 = t10974 * t12167;
t11767 = t10861 * t12167;
t10605 = t10812 * t10936 - t11516 * t11959;
t10611 = t10812 * t11959 + t12007;
t10221 = -t10605 * t11861 - t10956 * (t10605 * t11840 - t10611 * t10974);
t10393 = 0.1e1 / ((-t10680 * t10956 + t11732) * t10959 + t11834);
t12083 = t10221 * t10393;
t11933 = t10936 * t10943;
t10594 = t10812 * t11933 - t11960;
t10595 = -t10812 * t10924 - t11516 * t11933;
t10218 = t10595 * t11861 + t10956 * (-t10594 * t10974 + t10595 * t11840);
t12086 = t10218 * t10393;
t9975 = t11019 * t12083 + t11013 * t12086 + (t10959 * t11859 + t10908) * t11485 + (-t10467 * t11004 - ((t10960 * t12146 + t11766 * t11990) * t10954 + ((t10906 * t11766 - t10977 * t12146) * t10956 + t10977 * t11767) * t11861 + (t10956 * t11767 - t12146) * t10960) * t12167) * t12409;
t9912 = t10974 * t9975 + t10977 * t12170;
t12169 = t10006 ^ 2 / t10381 ^ 2;
t10468 = -t11515 * t11861 + t10956 * (-t10813 * t10975 - t11515 * t11839);
t11003 = t10950 * t11008;
t11764 = t10975 * t12166;
t11765 = t10861 * t12166;
t10606 = t10813 * t10937 - t11515 * t11954;
t10612 = t10813 * t11954 + t12006;
t10222 = -t10606 * t11861 - t10956 * (t10606 * t11839 - t10612 * t10975);
t10396 = 0.1e1 / ((-t10683 * t10956 + t11731) * t10959 + t11833);
t12082 = t10222 * t10396;
t11930 = t10937 * t10944;
t10596 = t10813 * t11930 - t11955;
t10597 = -t10813 * t10925 - t11515 * t11930;
t10219 = t10597 * t11861 + t10956 * (-t10596 * t10975 + t10597 * t11839);
t12085 = t10219 * t10396;
t9976 = t11020 * t12082 + t11014 * t12085 + (t10959 * t11858 + t10908) * t11484 + (-t10468 * t11003 - ((t10960 * t12145 + t11764 * t11990) * t10954 + ((t10907 * t11764 - t10978 * t12145) * t10956 + t10978 * t11765) * t11861 + (t10956 * t11765 - t12145) * t10960) * t12166) * t12410;
t9913 = t10975 * t9976 + t10978 * t12169;
t12165 = t10010 ^ 2 / t10397 ^ 2;
t9923 = t10985 * t9980 + t10988 * t12165;
t12164 = t10011 ^ 2 / t10398 ^ 2;
t9924 = t10986 * t9981 + t10989 * t12164;
t12163 = t10012 ^ 2 / t10399 ^ 2;
t9925 = t10987 * t9982 + t10990 * t12163;
t12363 = t10957 * (t12148 * t9925 + t12150 * t9924 + t12152 * t9923 + t12154 * t9913 + t12155 * t9912 + t12156 * t9911);
t10366 = t10674 * t10928 + t10947 * t11427;
t10417 = t10674 * t11921 - t11428;
t10198 = t10366 * t10958 + t10417 * t10955;
t10201 = -t10366 * t10955 + t10417 * t10958;
t11446 = -t10928 * t10987 + t10940 * t11703;
t10489 = -t10865 * t11446 - t10940 * t11710;
t11448 = t10928 * t11836 + t10940 * t11895;
t10502 = -t10865 * t11448 - t10928 * t11972;
t10261 = t10489 * t10958 - t10502 * t10955;
t10266 = t10489 * t10955 + t10502 * t10958;
t11937 = t10928 * t10958;
t10774 = t10940 * t11898 + t11937;
t11938 = t10928 * t10955;
t10786 = t10940 * t11897 - t11938;
t11366 = t10940 * t11419;
t11539 = -(t11551 * t12258 + t11814 * t12264) * t11812 + (t11551 * t12264 - t11814 * t12258) * t11815;
t11567 = t11817 * t11806;
t11578 = t10940 * t11652;
t11669 = t10958 * t11817;
t11671 = t10955 * t11817;
t11673 = t10934 * t11817;
t11685 = t10922 * t11817;
t12149 = ((((-t12325 * t11366 + (-t10551 * t11673 - t10554 * t11685) * t12252) * t11816 + t12325 * t11578) * t10953 + (t10261 * t11384 + t10266 * t11372 - t11567 * t12325) * t11816 - t10266 * t11584 - t10261 * t11596) * t10954 + (((t11818 * t11366 + (t11521 * t11673 - t11522 * t11685) * t12252) * t11816 - t11818 * t11578) * t10953 + (t10198 * t11384 - t10201 * t11372 + t11567 * t11818) * t11816 + t10201 * t11584 - t10198 * t11596) * t10959 + (((-t10940 * t11347 + (-t10922 * t11669 - t10934 * t11671) * t11805) * t11816 + t10940 * t11559) * t10953 + (-t10960 * t11567 + (t10774 * t11372 + t10786 * t11384) * t10957) * t11816 - t10774 * t11495 - t10786 * t11501) * t10911 + t11108 * t11539) * t12413;
t10365 = t10673 * t10927 + t10946 * t11429;
t10416 = t10673 * t11924 - t11430;
t10197 = t10365 * t10958 + t10416 * t10955;
t10200 = -t10365 * t10955 + t10416 * t10958;
t11450 = -t10927 * t10986 + t10939 * t11704;
t10487 = -t10865 * t11450 - t10939 * t11712;
t11452 = t10927 * t11837 + t10939 * t11899;
t10500 = -t10865 * t11452 - t10927 * t11974;
t10259 = t10487 * t10958 - t10500 * t10955;
t10264 = t10487 * t10955 + t10500 * t10958;
t11942 = t10927 * t10958;
t10772 = t10939 * t11902 + t11942;
t11943 = t10927 * t10955;
t10784 = t10939 * t11901 - t11943;
t11367 = t10939 * t11418;
t11540 = -(t11551 * t12257 + t11814 * t12263) * t11812 + (t11551 * t12263 - t11814 * t12257) * t11815;
t11569 = t11817 * t11807;
t11579 = t10939 * t11651;
t11675 = t10933 * t11817;
t11687 = t10921 * t11817;
t12151 = ((((-t12324 * t11367 + (-t10550 * t11675 - t10553 * t11687) * t12251) * t11816 + t12324 * t11579) * t10952 + (t10259 * t11385 + t10264 * t11373 - t11569 * t12324) * t11816 - t10264 * t11585 - t10259 * t11597) * t10954 + (((t11819 * t11367 + (t11523 * t11675 - t11524 * t11687) * t12251) * t11816 - t11819 * t11579) * t10952 + (t10197 * t11385 - t10200 * t11373 + t11569 * t11819) * t11816 + t10200 * t11585 - t10197 * t11597) * t10959 + (((-t10939 * t11346 + (-t10921 * t11669 - t10933 * t11671) * t11804) * t11816 + t10939 * t11558) * t10952 + (-t10960 * t11569 + (t10772 * t11373 + t10784 * t11385) * t10957) * t11816 - t10772 * t11496 - t10784 * t11502) * t10910 + t11109 * t11540) * t12412;
t10364 = t10672 * t10926 + t10945 * t11431;
t10415 = t10672 * t11927 - t11432;
t10196 = t10364 * t10958 + t10415 * t10955;
t10199 = -t10364 * t10955 + t10415 * t10958;
t11454 = -t10926 * t10985 + t10938 * t11705;
t10485 = -t10865 * t11454 - t10938 * t11714;
t11456 = t10926 * t11838 + t10938 * t11903;
t10498 = -t10865 * t11456 - t10926 * t11976;
t10257 = t10485 * t10958 - t10498 * t10955;
t10262 = t10485 * t10955 + t10498 * t10958;
t11947 = t10926 * t10958;
t10770 = t10938 * t11906 + t11947;
t11948 = t10926 * t10955;
t10782 = t10938 * t11905 - t11948;
t11368 = t10938 * t11417;
t11541 = -(t11551 * t12256 + t11814 * t12262) * t11812 + (t11551 * t12262 - t11814 * t12256) * t11815;
t11571 = t11817 * t11808;
t11580 = t10938 * t11650;
t11677 = t10932 * t11817;
t11689 = t10920 * t11817;
t12153 = ((((-t12323 * t11368 + (-t10549 * t11677 - t10552 * t11689) * t12250) * t11816 + t12323 * t11580) * t10951 + (t10257 * t11386 + t10262 * t11374 - t11571 * t12323) * t11816 - t10262 * t11586 - t10257 * t11598) * t10954 + (((t11820 * t11368 + (t11525 * t11677 - t11526 * t11689) * t12250) * t11816 - t11820 * t11580) * t10951 + (t10196 * t11386 - t10199 * t11374 + t11571 * t11820) * t11816 + t10199 * t11586 - t10196 * t11598) * t10959 + (((-t10938 * t11345 + (-t10920 * t11669 - t10932 * t11671) * t11803) * t11816 + t10938 * t11557) * t10951 + (-t10960 * t11571 + (t10770 * t11374 + t10782 * t11386) * t10957) * t11816 - t10770 * t11497 - t10782 * t11503) * t10909 + t11110 * t11541) * t12411;
t10360 = t10668 * t10925 + t10944 * t11433;
t10402 = t10668 * t11930 - t11434;
t10186 = t10360 * t10958 + t10402 * t10955;
t10189 = -t10360 * t10955 + t10402 * t10958;
t11458 = -t10925 * t10975 + t10937 * t11706;
t10483 = -t10865 * t11458 - t10937 * t11716;
t11460 = t10925 * t11839 + t10937 * t11907;
t10496 = -t10865 * t11460 - t10925 * t11978;
t10246 = t10483 * t10958 - t10496 * t10955;
t10251 = t10483 * t10955 + t10496 * t10958;
t11952 = t10925 * t10958;
t10768 = t10937 * t11910 + t11952;
t11953 = t10925 * t10955;
t10780 = t10937 * t11909 - t11953;
t11369 = t10937 * t11416;
t11542 = -(t11551 * t12255 + t11814 * t12261) * t11812 + (t11551 * t12261 - t11814 * t12255) * t11815;
t11573 = t11817 * t11809;
t11581 = t10937 * t11649;
t11679 = t10931 * t11817;
t11691 = t10919 * t11817;
t12157 = ((((-t12322 * t11369 + (-t10545 * t11679 - t10548 * t11691) * t12249) * t11816 + t12322 * t11581) * t10950 + (t10246 * t11387 + t10251 * t11375 - t11573 * t12322) * t11816 - t10251 * t11587 - t10246 * t11599) * t10954 + (((t11821 * t11369 + (t11527 * t11679 - t11528 * t11691) * t12249) * t11816 - t11821 * t11581) * t10950 + (t10186 * t11387 - t10189 * t11375 + t11573 * t11821) * t11816 + t10189 * t11587 - t10186 * t11599) * t10959 + (((-t10937 * t11344 + (-t10919 * t11669 - t10931 * t11671) * t11802) * t11816 + t10937 * t11556) * t10950 + (-t10960 * t11573 + (t10768 * t11375 + t10780 * t11387) * t10957) * t11816 - t10768 * t11498 - t10780 * t11504) * t10907 + t11111 * t11542) * t12410;
t10359 = t10667 * t10924 + t10943 * t11435;
t10401 = t10667 * t11933 - t11436;
t10185 = t10359 * t10958 + t10401 * t10955;
t10188 = -t10359 * t10955 + t10401 * t10958;
t11462 = -t10924 * t10974 + t10936 * t11707;
t10481 = -t10865 * t11462 - t10936 * t11718;
t11464 = t10924 * t11840 + t10936 * t11911;
t10494 = -t10865 * t11464 - t10924 * t11980;
t10244 = t10481 * t10958 - t10494 * t10955;
t10249 = t10481 * t10955 + t10494 * t10958;
t11957 = t10924 * t10958;
t10766 = t10936 * t11914 + t11957;
t11958 = t10924 * t10955;
t10778 = t10936 * t11913 - t11958;
t11370 = t10936 * t11415;
t11543 = -(t11551 * t12254 + t11814 * t12260) * t11812 + (t11551 * t12260 - t11814 * t12254) * t11815;
t11575 = t11817 * t11810;
t11582 = t10936 * t11648;
t11681 = t10930 * t11817;
t11693 = t10918 * t11817;
t12158 = ((((-t12321 * t11370 + (-t10544 * t11681 - t10547 * t11693) * t12248) * t11816 + t12321 * t11582) * t10949 + (t10244 * t11388 + t10249 * t11376 - t11575 * t12321) * t11816 - t10249 * t11588 - t10244 * t11600) * t10954 + (((t11822 * t11370 + (t11529 * t11681 - t11530 * t11693) * t12248) * t11816 - t11822 * t11582) * t10949 + (t10185 * t11388 - t10188 * t11376 + t11575 * t11822) * t11816 + t10188 * t11588 - t10185 * t11600) * t10959 + (((-t10936 * t11343 + (-t10918 * t11669 - t10930 * t11671) * t11801) * t11816 + t10936 * t11555) * t10949 + (-t10960 * t11575 + (t10766 * t11376 + t10778 * t11388) * t10957) * t11816 - t10766 * t11499 - t10778 * t11505) * t10906 + t11112 * t11543) * t12409;
t10358 = t10666 * t10923 + t10942 * t11437;
t10400 = t10666 * t11936 - t11438;
t10184 = t10358 * t10958 + t10400 * t10955;
t10187 = -t10358 * t10955 + t10400 * t10958;
t11466 = -t10923 * t10973 + t10935 * t11708;
t10479 = -t10865 * t11466 - t10935 * t11720;
t11468 = t10923 * t11841 + t10935 * t11915;
t10492 = -t10865 * t11468 - t10923 * t11982;
t10242 = t10479 * t10958 - t10492 * t10955;
t10247 = t10479 * t10955 + t10492 * t10958;
t11962 = t10923 * t10958;
t10764 = t10935 * t11918 + t11962;
t11963 = t10923 * t10955;
t10776 = t10935 * t11917 - t11963;
t11371 = t10935 * t11414;
t11544 = -(t11551 * t12253 + t11814 * t12259) * t11812 + (t11551 * t12259 - t11814 * t12253) * t11815;
t11577 = t11817 * t11811;
t11583 = t10935 * t11647;
t11683 = t10929 * t11817;
t11695 = t10917 * t11817;
t12159 = ((((-t12320 * t11371 + (-t10543 * t11683 - t10546 * t11695) * t12247) * t11816 + t12320 * t11583) * t10948 + (t10242 * t11389 + t10247 * t11377 - t11577 * t12320) * t11816 - t10247 * t11589 - t10242 * t11601) * t10954 + (((t11823 * t11371 + (t11531 * t11683 - t11532 * t11695) * t12247) * t11816 - t11823 * t11583) * t10948 + (t10184 * t11389 - t10187 * t11377 + t11577 * t11823) * t11816 + t10187 * t11589 - t10184 * t11601) * t10959 + (((-t10935 * t11342 + (-t10917 * t11669 - t10929 * t11671) * t11800) * t11816 + t10935 * t11554) * t10948 + (-t10960 * t11577 + (t10764 * t11377 + t10776 * t11389) * t10957) * t11816 - t10764 * t11500 - t10776 * t11506) * t10905 + t11113 * t11544) * t12408;
t12362 = t10957 * (t12149 * t9925 + t12151 * t9924 + t12153 * t9923 + t12157 * t9913 + t12158 * t9912 + t12159 * t9911);
t11340 = t11425 * t11522;
t11341 = t11425 * t11521;
t11546 = t11813 * t11815;
t10703 = t11546 * t12264 + t11311;
t12009 = t10703 * t10953;
t12010 = t10703 * t10947;
t10120 = (t11521 * t12010 + t11340) * t10934 + (-t11522 * t12010 + t11341) * t10922 - t11818 * t12009;
t11360 = t10953 * t11425;
t10126 = (t10703 * t11522 - t10947 * t11341) * t10934 + (t10703 * t11521 + t10947 * t11340) * t10922 + t11818 * t11360;
t11339 = t11425 * t10554;
t11390 = t10551 * t11425;
t10138 = (t10551 * t12010 - t11339) * t10934 + (t10554 * t12010 + t11390) * t10922 - t12325 * t12009;
t10144 = (t10703 * t10554 + t10947 * t11390) * t10934 + (-t10703 * t10551 + t10947 * t11339) * t10922 - t12325 * t11360;
t11353 = t10958 * t11425;
t11359 = t10955 * t11425;
t11849 = t10958 * t10703;
t11877 = t10955 * t10703;
t10234 = t10703 * t11884 + ((-t10947 * t11877 + t11353) * t10934 - (t10947 * t11849 + t11359) * t10922) * t10957;
t10240 = -t10960 * t11360 + ((t10947 * t11359 + t11849) * t10934 + (t10947 * t11353 - t11877) * t10922) * t10957;
t12172 = (((t10138 * t11814 + t10144 * t11817) * t10940 - t10928 * (t10138 * t11817 - t10144 * t11814)) * t10954 + ((-t10120 * t11814 + t10126 * t11817) * t10940 + (t10120 * t11817 + t10126 * t11814) * t10928) * t10959 + ((-t10234 * t11814 + t10240 * t11817) * t10940 + t10928 * (t10234 * t11817 + t10240 * t11814)) * t10911) * t12413;
t11337 = t11424 * t11524;
t11338 = t11424 * t11523;
t10702 = t11546 * t12263 + t11310;
t12011 = t10702 * t10952;
t12012 = t10702 * t10946;
t10119 = (t11523 * t12012 + t11337) * t10933 + (-t11524 * t12012 + t11338) * t10921 - t11819 * t12011;
t11361 = t10952 * t11424;
t10125 = (t10702 * t11524 - t10946 * t11338) * t10933 + (t10702 * t11523 + t10946 * t11337) * t10921 + t11819 * t11361;
t11336 = t11424 * t10553;
t11391 = t10550 * t11424;
t10137 = (t10550 * t12012 - t11336) * t10933 + (t10553 * t12012 + t11391) * t10921 - t12324 * t12011;
t10143 = (t10702 * t10553 + t10946 * t11391) * t10933 + (-t10702 * t10550 + t10946 * t11336) * t10921 - t12324 * t11361;
t11352 = t10958 * t11424;
t11358 = t10955 * t11424;
t11850 = t10958 * t10702;
t11878 = t10955 * t10702;
t10233 = t10702 * t11886 + ((-t10946 * t11878 + t11352) * t10933 - (t10946 * t11850 + t11358) * t10921) * t10957;
t10239 = -t10960 * t11361 + ((t10946 * t11358 + t11850) * t10933 + (t10946 * t11352 - t11878) * t10921) * t10957;
t12197 = t12412 * (((t10137 * t11814 + t10143 * t11817) * t10939 - t10927 * (t10137 * t11817 - t10143 * t11814)) * t10954 + ((-t10119 * t11814 + t10125 * t11817) * t10939 + (t10119 * t11817 + t10125 * t11814) * t10927) * t10959 + ((-t10233 * t11814 + t10239 * t11817) * t10939 + t10927 * (t10233 * t11817 + t10239 * t11814)) * t10910);
t11334 = t11423 * t11526;
t11335 = t11423 * t11525;
t10701 = t11546 * t12262 + t11309;
t12013 = t10701 * t10951;
t12014 = t10701 * t10945;
t10118 = (t11525 * t12014 + t11334) * t10932 + (-t11526 * t12014 + t11335) * t10920 - t11820 * t12013;
t11362 = t10951 * t11423;
t10124 = (t10701 * t11526 - t10945 * t11335) * t10932 + (t10701 * t11525 + t10945 * t11334) * t10920 + t11820 * t11362;
t11333 = t11423 * t10552;
t11392 = t10549 * t11423;
t10136 = (t10549 * t12014 - t11333) * t10932 + (t10552 * t12014 + t11392) * t10920 - t12323 * t12013;
t10142 = (t10701 * t10552 + t10945 * t11392) * t10932 + (-t10701 * t10549 + t10945 * t11333) * t10920 - t12323 * t11362;
t11351 = t10958 * t11423;
t11357 = t10955 * t11423;
t11851 = t10958 * t10701;
t11879 = t10955 * t10701;
t10232 = t10701 * t11888 + ((-t10945 * t11879 + t11351) * t10932 - (t10945 * t11851 + t11357) * t10920) * t10957;
t10238 = -t10960 * t11362 + ((t10945 * t11357 + t11851) * t10932 + (t10945 * t11351 - t11879) * t10920) * t10957;
t12198 = t12411 * (((t10136 * t11814 + t10142 * t11817) * t10938 - t10926 * (t10136 * t11817 - t10142 * t11814)) * t10954 + ((-t10118 * t11814 + t10124 * t11817) * t10938 + (t10118 * t11817 + t10124 * t11814) * t10926) * t10959 + ((-t10232 * t11814 + t10238 * t11817) * t10938 + t10926 * (t10232 * t11817 + t10238 * t11814)) * t10909);
t11331 = t11422 * t11528;
t11332 = t11422 * t11527;
t10700 = t11546 * t12261 + t11308;
t12015 = t10700 * t10950;
t12016 = t10700 * t10944;
t10117 = (t11527 * t12016 + t11331) * t10931 + (-t11528 * t12016 + t11332) * t10919 - t11821 * t12015;
t11363 = t10950 * t11422;
t10123 = (t10700 * t11528 - t10944 * t11332) * t10931 + (t10700 * t11527 + t10944 * t11331) * t10919 + t11821 * t11363;
t11330 = t11422 * t10545;
t11393 = t10548 * t11422;
t10135 = (t10545 * t12016 - t11393) * t10931 + (t10548 * t12016 + t11330) * t10919 - t12322 * t12015;
t10141 = (t10548 * t10700 + t10944 * t11330) * t10931 + (-t10700 * t10545 + t10944 * t11393) * t10919 - t12322 * t11363;
t11350 = t10958 * t11422;
t11356 = t10955 * t11422;
t11852 = t10958 * t10700;
t11880 = t10955 * t10700;
t10231 = t10700 * t11890 + ((-t10944 * t11880 + t11350) * t10931 - (t10944 * t11852 + t11356) * t10919) * t10957;
t10237 = -t10960 * t11363 + ((t10944 * t11356 + t11852) * t10931 + (t10944 * t11350 - t11880) * t10919) * t10957;
t12199 = t12410 * (((t10135 * t11814 + t10141 * t11817) * t10937 - t10925 * (t10135 * t11817 - t10141 * t11814)) * t10954 + ((-t10117 * t11814 + t10123 * t11817) * t10937 + (t10117 * t11817 + t10123 * t11814) * t10925) * t10959 + ((-t10231 * t11814 + t10237 * t11817) * t10937 + t10925 * (t10231 * t11817 + t10237 * t11814)) * t10907);
t11328 = t11421 * t11530;
t11329 = t11421 * t11529;
t10699 = t11546 * t12260 + t11307;
t12017 = t10699 * t10949;
t12018 = t10699 * t10943;
t10116 = (t11529 * t12018 + t11328) * t10930 + (-t11530 * t12018 + t11329) * t10918 - t11822 * t12017;
t11364 = t10949 * t11421;
t10122 = (t10699 * t11530 - t10943 * t11329) * t10930 + (t10699 * t11529 + t10943 * t11328) * t10918 + t11822 * t11364;
t11327 = t11421 * t10544;
t11394 = t10547 * t11421;
t10134 = (t10544 * t12018 - t11394) * t10930 + (t10547 * t12018 + t11327) * t10918 - t12321 * t12017;
t10140 = (t10547 * t10699 + t10943 * t11327) * t10930 + (-t10699 * t10544 + t10943 * t11394) * t10918 - t12321 * t11364;
t11349 = t10958 * t11421;
t11355 = t10955 * t11421;
t11853 = t10958 * t10699;
t11881 = t10955 * t10699;
t10230 = t10699 * t11892 + ((-t10943 * t11881 + t11349) * t10930 - (t10943 * t11853 + t11355) * t10918) * t10957;
t10236 = -t10960 * t11364 + ((t10943 * t11355 + t11853) * t10930 + (t10943 * t11349 - t11881) * t10918) * t10957;
t12200 = t12409 * (((t10134 * t11814 + t10140 * t11817) * t10936 - t10924 * (t10134 * t11817 - t10140 * t11814)) * t10954 + ((-t10116 * t11814 + t10122 * t11817) * t10936 + (t10116 * t11817 + t10122 * t11814) * t10924) * t10959 + ((-t10230 * t11814 + t10236 * t11817) * t10936 + t10924 * (t10230 * t11817 + t10236 * t11814)) * t10906);
t11325 = t11420 * t11532;
t11326 = t11420 * t11531;
t10698 = t11546 * t12259 + t11306;
t12019 = t10698 * t10948;
t12020 = t10698 * t10942;
t10115 = (t11531 * t12020 + t11325) * t10929 + (-t11532 * t12020 + t11326) * t10917 - t11823 * t12019;
t11365 = t10948 * t11420;
t10121 = (t10698 * t11532 - t10942 * t11326) * t10929 + (t10698 * t11531 + t10942 * t11325) * t10917 + t11823 * t11365;
t11324 = t11420 * t10543;
t11395 = t10546 * t11420;
t10133 = (t10543 * t12020 - t11395) * t10929 + (t10546 * t12020 + t11324) * t10917 - t12320 * t12019;
t10139 = (t10546 * t10698 + t10942 * t11324) * t10929 + (-t10698 * t10543 + t10942 * t11395) * t10917 - t12320 * t11365;
t11348 = t10958 * t11420;
t11354 = t10955 * t11420;
t11854 = t10958 * t10698;
t11882 = t10955 * t10698;
t10229 = t10698 * t11894 + ((-t10942 * t11882 + t11348) * t10929 - (t10942 * t11854 + t11354) * t10917) * t10957;
t10235 = -t10960 * t11365 + ((t10942 * t11354 + t11854) * t10929 + (t10942 * t11348 - t11882) * t10917) * t10957;
t12201 = t12408 * (((t10133 * t11814 + t10139 * t11817) * t10935 - t10923 * (t10133 * t11817 - t10139 * t11814)) * t10954 + ((-t10115 * t11814 + t10121 * t11817) * t10935 + (t10115 * t11817 + t10121 * t11814) * t10923) * t10959 + ((-t10229 * t11814 + t10235 * t11817) * t10935 + t10923 * (t10229 * t11817 + t10235 * t11814)) * t10905);
t12361 = t10957 * (t12172 * t9925 + t12197 * t9924 + t12198 * t9923 + t12199 * t9913 + t12200 * t9912 + t12201 * t9911);
t11620 = t11815 * t12236;
t10790 = t11549 * t12237 - t11620;
t11618 = t11812 * t12236;
t10792 = t11550 * t12237 + t11618;
t10648 = t10790 * t10792;
t10787 = t12237 * t11625 + t11813 * t12231 + t12229;
t12335 = -t10648 + t10787;
t10517 = -t11549 * t12231 - t11618 * t12235 + (-t11550 * t12235 + t11472) * t12237 + t11815 * t12230;
t10684 = t10792 * t10877;
t10460 = t10684 - t10517;
t12334 = t10684 + t10517;
t10518 = (-t11546 * t12236 - t11471) * t12237 + t12235 * t11620 + t12231 * t11550 + t11812 * t12230;
t10685 = t10790 * t10877;
t10464 = -t10685 - t10518;
t12333 = -t10685 + t10518;
t10514 = t10787 + t10648;
t12202 = t10950 * g(1);
t10712 = -t10944 * t12313 + t12202;
t10872 = g(2) * t10937 + g(3) * t10925;
t10630 = t10712 * t10955 - t10872 * t10958;
t12031 = t10630 * t10931;
t11874 = t10955 * t10872;
t10624 = t10712 * t10958 + t11874;
t12037 = t10624 * t10919;
t12316 = t12031 + t12037;
t12203 = t10949 * g(1);
t10711 = -t10943 * t12312 + t12203;
t10871 = g(2) * t10936 + g(3) * t10924;
t10629 = t10711 * t10955 - t10871 * t10958;
t12032 = t10629 * t10930;
t11875 = t10955 * t10871;
t10623 = t10711 * t10958 + t11875;
t12038 = t10623 * t10918;
t12315 = t12032 + t12038;
t12204 = t10948 * g(1);
t10710 = -t10942 * t12311 + t12204;
t10870 = g(2) * t10935 + g(3) * t10923;
t10628 = t10710 * t10955 - t10870 * t10958;
t12033 = t10628 * t10929;
t11876 = t10955 * t10870;
t10622 = t10710 * t10958 + t11876;
t12039 = t10622 * t10917;
t12314 = t12033 + t12039;
t11971 = t10917 * t10628;
t10367 = t10622 * t10929 - t11971;
t12184 = t10957 * t12447;
t11407 = t10960 * t12314 - t12184;
t12295 = -t10367 * t10976 + t10973 * t11407;
t11970 = t10918 * t10629;
t10368 = t10623 * t10930 - t11970;
t12183 = t10957 * t12446;
t11406 = t10960 * t12315 - t12183;
t12294 = -t10368 * t10977 + t10974 * t11406;
t11969 = t10919 * t10630;
t10369 = t10624 * t10931 - t11969;
t12182 = t10957 * t12445;
t11405 = t10960 * t12316 - t12182;
t12293 = -t10369 * t10978 + t10975 * t11405;
t9926 = t10367 * t10973 + t10976 * t11407;
t9928 = t10368 * t10974 + t10977 * t11406;
t9930 = t10369 * t10975 + t10978 * t11405;
t9932 = -t10985 * t12395 + t10988 * t11404;
t9936 = -t10986 * t12394 + t10989 * t11403;
t9934 = -t10987 * t12393 + t10990 * t11402;
t12285 = ((-t12202 / 0.2e1 + (t12205 / 0.2e1 - t12208 / 0.2e1) * t10944) * t10958 - t11874 / 0.2e1) * t10931 + t11969 / 0.2e1;
t12284 = ((-t12203 / 0.2e1 + (t12206 / 0.2e1 - t12209 / 0.2e1) * t10943) * t10958 - t11875 / 0.2e1) * t10930 + t11970 / 0.2e1;
t12283 = ((-t12204 / 0.2e1 + (t12207 / 0.2e1 - t12210 / 0.2e1) * t10942) * t10958 - t11876 / 0.2e1) * t10929 + t11971 / 0.2e1;
t11042 = t10957 * t11054;
t11044 = t10957 * t11056;
t11046 = t10957 * t11058;
t11048 = t10957 * t11060;
t11050 = t10957 * t11062;
t11052 = t10957 * t11064;
t12267 = t9925 * t11042 + t9924 * t11044 + t9923 * t11046 + t9913 * t11048 + t9912 * t11050 + t9911 * t11052;
t11043 = t10957 * t11055;
t11045 = t10957 * t11057;
t11047 = t10957 * t11059;
t11049 = t10957 * t11061;
t11051 = t10957 * t11063;
t11053 = t10957 * t11065;
t12266 = t9925 * t11043 + t9924 * t11045 + t9923 * t11047 + t9913 * t11049 + t9912 * t11051 + t9911 * t11053;
t10647 = t10790 ^ 2;
t10649 = t10792 ^ 2;
t10758 = t10877 ^ 2;
t12228 = t9974 * pkin(2);
t12227 = t9975 * pkin(2);
t12226 = t9976 * pkin(2);
t12225 = t9980 * pkin(2);
t12224 = t9981 * pkin(2);
t12223 = t9982 * pkin(2);
t12222 = -t10956 / 0.2e1;
t9973 = qJ(3,4) * t9976;
t9972 = qJ(3,5) * t9975;
t9971 = qJ(3,6) * t9974;
t12190 = t10956 * (t9971 + t11632);
t9875 = -t12295 - 0.2e1 * t12190;
t12196 = t10956 * t9875;
t12189 = t10956 * (t9972 + t11640);
t9876 = -t12294 - 0.2e1 * t12189;
t12195 = t10956 * t9876;
t12188 = t10956 * (t9973 + t11639);
t9877 = -t12293 - 0.2e1 * t12188;
t12194 = t10956 * t9877;
t12193 = t10956 * t9878;
t12192 = t10956 * t9879;
t12191 = t10956 * t9880;
t12174 = 0.2e1 * t12220;
t12173 = -0.2e1 * t12218;
t10562 = t10699 * t11814 + t11295;
t10568 = t10699 * t11817 - t11283;
t10320 = t10562 * t11914 + t10568 * t10958;
t10326 = -t10562 * t10958 + t10568 * t11914;
t10332 = t10562 * t11913 - t10568 * t10955;
t10340 = t10562 * t10955 + t10568 * t11913;
t10128 = (t10320 * t10918 - t10332 * t10930) * t10936 + t10924 * (-t10326 * t10918 + t10340 * t10930);
t11998 = t10833 * t10943;
t12001 = t10830 * t10943;
t12141 = ((((t10562 * t11998 - t10568 * t10830) * t10930 - (t10562 * t12001 + t10568 * t10833) * t10918) * t10936 - ((t10562 * t10830 + t10568 * t11998) * t10930 + t10918 * (t10562 * t10833 - t10568 * t12001)) * t10924) * t10956 - t10128 * t11861) * t10376;
t10563 = t10700 * t11814 + t11296;
t10569 = t10700 * t11817 - t11284;
t10321 = t10563 * t11910 + t10569 * t10958;
t10327 = -t10563 * t10958 + t10569 * t11910;
t10333 = t10563 * t11909 - t10569 * t10955;
t10336 = t10563 * t10955 + t10569 * t11909;
t10129 = (t10321 * t10919 - t10333 * t10931) * t10937 + t10925 * (-t10327 * t10919 + t10336 * t10931);
t11997 = t10834 * t10944;
t12000 = t10831 * t10944;
t12140 = ((((t10563 * t11997 - t10569 * t10831) * t10931 - t10919 * (t10563 * t12000 + t10569 * t10834)) * t10937 - t10925 * ((t10563 * t10831 + t10569 * t11997) * t10931 + (t10563 * t10834 - t10569 * t12000) * t10919)) * t10956 - t10129 * t11861) * t10374;
t10561 = t10698 * t11814 + t11294;
t10567 = t10698 * t11817 - t11282;
t10319 = t10561 * t11918 + t10567 * t10958;
t10325 = -t10561 * t10958 + t10567 * t11918;
t10331 = t10561 * t11917 - t10567 * t10955;
t10339 = t10561 * t10955 + t10567 * t11917;
t10127 = (t10319 * t10917 - t10331 * t10929) * t10935 + t10923 * (-t10325 * t10917 + t10339 * t10929);
t11999 = t10832 * t10942;
t12002 = t10829 * t10942;
t12139 = ((((t10561 * t11999 - t10567 * t10829) * t10929 - t10917 * (t10561 * t12002 + t10567 * t10832)) * t10935 - t10923 * ((t10561 * t10829 + t10567 * t11999) * t10929 + t10917 * (t10561 * t10832 - t10567 * t12002))) * t10956 - t10127 * t11861) * t10373;
t10565 = t10702 * t11814 + t11298;
t10571 = t10702 * t11817 - t11286;
t10323 = t10565 * t11902 + t10571 * t10958;
t10329 = -t10565 * t10958 + t10571 * t11902;
t10334 = t10565 * t11901 - t10571 * t10955;
t10337 = t10565 * t10955 + t10571 * t11901;
t10130 = (t10323 * t10921 - t10334 * t10933) * t10939 + t10927 * (-t10329 * t10921 + t10337 * t10933);
t11992 = t10847 * t10946;
t11995 = t10844 * t10946;
t12138 = ((((t10565 * t11992 - t10571 * t10844) * t10933 - t10921 * (t10565 * t11995 + t10571 * t10847)) * t10939 - t10927 * ((t10565 * t10844 + t10571 * t11992) * t10933 + (t10565 * t10847 - t10571 * t11995) * t10921)) * t10956 - t10130 * t11861) * t10382;
t10566 = t10703 * t11814 + t11299;
t10572 = t10703 * t11817 - t11287;
t10324 = t10566 * t11898 + t10572 * t10958;
t10330 = -t10566 * t10958 + t10572 * t11898;
t10335 = t10566 * t11897 - t10572 * t10955;
t10342 = t10566 * t10955 + t10572 * t11897;
t10131 = (t10324 * t10922 - t10335 * t10934) * t10940 + t10928 * (-t10330 * t10922 + t10342 * t10934);
t11991 = t10848 * t10947;
t11994 = t10845 * t10947;
t12137 = ((((t10566 * t11991 - t10572 * t10845) * t10934 - t10922 * (t10566 * t11994 + t10572 * t10848)) * t10940 - t10928 * ((t10566 * t10845 + t10572 * t11991) * t10934 + t10922 * (t10566 * t10848 - t10572 * t11994))) * t10956 - t10131 * t11861) * t10383;
t10564 = t10701 * t11814 + t11297;
t10570 = t10701 * t11817 - t11285;
t10322 = t10564 * t11906 + t10570 * t10958;
t10328 = -t10564 * t10958 + t10570 * t11906;
t10338 = t10564 * t11905 - t10570 * t10955;
t10341 = t10564 * t10955 + t10570 * t11905;
t10132 = (t10322 * t10920 - t10338 * t10932) * t10938 + t10926 * (-t10328 * t10920 + t10341 * t10932);
t11993 = t10846 * t10945;
t11996 = t10843 * t10945;
t12136 = ((((t10564 * t11993 - t10570 * t10843) * t10932 - (t10564 * t11996 + t10570 * t10846) * t10920) * t10938 - t10926 * ((t10564 * t10843 + t10570 * t11993) * t10932 + (t10564 * t10846 - t10570 * t11996) * t10920)) * t10956 - t10132 * t11861) * t10384;
t10061 = -t10127 * t12045 + t12432 * ((-t10319 * t10929 - t10331 * t10917) * t10935 + t10923 * (t10325 * t10929 + t10339 * t10917));
t12135 = t10061 * t10427;
t10062 = -t10128 * t12044 + ((-t10320 * t10930 - t10332 * t10918) * t10936 + t10924 * (t10326 * t10930 + t10340 * t10918)) * t12431;
t12134 = t10062 * t10428;
t10063 = -t10129 * t12043 + ((-t10321 * t10931 - t10333 * t10919) * t10937 + t10925 * (t10327 * t10931 + t10336 * t10919)) * t12430;
t12133 = t10063 * t10429;
t10064 = -t10132 * t12042 + ((-t10322 * t10932 - t10338 * t10920) * t10938 + t10926 * (t10328 * t10932 + t10341 * t10920)) * t12429;
t12132 = t10064 * t10430;
t10065 = -t10130 * t12041 + ((-t10323 * t10933 - t10334 * t10921) * t10939 + (t10329 * t10933 + t10337 * t10921) * t10927) * t12428;
t12131 = t10065 * t10431;
t10066 = -t10131 * t12040 + ((-t10324 * t10934 - t10335 * t10922) * t10940 + (t10330 * t10934 + t10342 * t10922) * t10928) * t12427;
t12130 = t10066 * t10432;
t10519 = -t11548 * t12247 + t11829;
t10433 = t10519 * t10948 + t11964 * t12292;
t10274 = t10433 * t10955 - t11934 * t12292;
t10283 = t10433 * t10958 + t11935 * t12292;
t10151 = -t10274 * t10917 + t10283 * t10929;
t10307 = t10519 * t11702 + t11465 * t12292;
t10343 = t10519 * t11893 + t11467 * t12292;
t12129 = (((t10307 * t10958 - t10343 * t10955) * t10929 - (t10307 * t10955 + t10343 * t10958) * t10917) * t10956 + t10151 * t11861) * t10373;
t10521 = -t11548 * t12248 + t11828;
t10435 = t10521 * t10949 + t11959 * t12291;
t10275 = t10435 * t10955 - t11931 * t12291;
t10285 = t10435 * t10958 + t11932 * t12291;
t10153 = -t10275 * t10918 + t10285 * t10930;
t10308 = t10521 * t11701 + t11461 * t12291;
t10345 = t10521 * t11891 + t11463 * t12291;
t12128 = (((t10308 * t10958 - t10345 * t10955) * t10930 - (t10308 * t10955 + t10345 * t10958) * t10918) * t10956 + t10153 * t11861) * t10376;
t10520 = -t11552 * t12247 + t11544;
t10434 = t10520 * t10948 + t11936 * t12292;
t10271 = -t10434 * t10955 - t11962 * t12292;
t10284 = t10434 * t10958 - t11963 * t12292;
t10152 = t10271 * t10917 + t10284 * t10929;
t10309 = t10520 * t11702 + t11466 * t12292;
t10344 = -t10520 * t11893 - t11468 * t12292;
t12127 = (((t10309 * t10958 + t10344 * t10955) * t10929 + (-t10309 * t10955 + t10344 * t10958) * t10917) * t10956 + t10152 * t11861) * t10373;
t10522 = -t11552 * t12248 + t11543;
t10436 = t10522 * t10949 + t11933 * t12291;
t10272 = -t10436 * t10955 - t11957 * t12291;
t10286 = t10436 * t10958 - t11958 * t12291;
t10154 = t10272 * t10918 + t10286 * t10930;
t10310 = t10522 * t11701 + t11462 * t12291;
t10348 = -t10522 * t11891 - t11464 * t12291;
t12126 = (((t10310 * t10958 + t10348 * t10955) * t10930 + (-t10310 * t10955 + t10348 * t10958) * t10918) * t10956 + t10154 * t11861) * t10376;
t10523 = -t11548 * t12249 + t11827;
t10437 = t10523 * t10950 + t11954 * t12290;
t10276 = t10437 * t10955 - t11928 * t12290;
t10287 = t10437 * t10958 + t11929 * t12290;
t10155 = -t10276 * t10919 + t10287 * t10931;
t10311 = t10523 * t11700 + t11457 * t12290;
t10346 = t10523 * t11889 + t11459 * t12290;
t12125 = (((t10311 * t10958 - t10346 * t10955) * t10931 - (t10311 * t10955 + t10346 * t10958) * t10919) * t10956 + t10155 * t11861) * t10374;
t10524 = -t11552 * t12249 + t11542;
t10438 = t10524 * t10950 + t11930 * t12290;
t10273 = -t10438 * t10955 - t11952 * t12290;
t10288 = t10438 * t10958 - t11953 * t12290;
t10156 = t10273 * t10919 + t10288 * t10931;
t10312 = t10524 * t11700 + t11458 * t12290;
t10347 = -t10524 * t11889 - t11460 * t12290;
t12124 = (((t10312 * t10958 + t10347 * t10955) * t10931 + (-t10312 * t10955 + t10347 * t10958) * t10919) * t10956 + t10156 * t11861) * t10374;
t10525 = -t11548 * t12250 + t11826;
t10439 = t10525 * t10951 + t11949 * t12289;
t10278 = t10439 * t10955 - t11925 * t12289;
t10289 = t10439 * t10958 + t11926 * t12289;
t10157 = -t10278 * t10920 + t10289 * t10932;
t10313 = t10525 * t11699 + t11453 * t12289;
t10349 = t10525 * t11887 + t11455 * t12289;
t12123 = (((t10313 * t10958 - t10349 * t10955) * t10932 - (t10313 * t10955 + t10349 * t10958) * t10920) * t10956 + t10157 * t11861) * t10384;
t10526 = -t11552 * t12250 + t11541;
t10440 = t10526 * t10951 + t11927 * t12289;
t10277 = -t10440 * t10955 - t11947 * t12289;
t10290 = t10440 * t10958 - t11948 * t12289;
t10158 = t10277 * t10920 + t10290 * t10932;
t10314 = t10526 * t11699 + t11454 * t12289;
t10350 = -t10526 * t11887 - t11456 * t12289;
t12122 = (((t10314 * t10958 + t10350 * t10955) * t10932 + (-t10314 * t10955 + t10350 * t10958) * t10920) * t10956 + t10158 * t11861) * t10384;
t10527 = -t11548 * t12251 + t11825;
t10441 = t10527 * t10952 + t11944 * t12288;
t10280 = t10441 * t10955 - t11922 * t12288;
t10291 = t10441 * t10958 + t11923 * t12288;
t10159 = -t10280 * t10921 + t10291 * t10933;
t10315 = t10527 * t11698 + t11449 * t12288;
t10351 = t10527 * t11885 + t11451 * t12288;
t12121 = (((t10315 * t10958 - t10351 * t10955) * t10933 - (t10315 * t10955 + t10351 * t10958) * t10921) * t10956 + t10159 * t11861) * t10382;
t10528 = -t11552 * t12251 + t11540;
t10442 = t10528 * t10952 + t11924 * t12288;
t10279 = -t10442 * t10955 - t11942 * t12288;
t10292 = t10442 * t10958 - t11943 * t12288;
t10160 = t10279 * t10921 + t10292 * t10933;
t10316 = t10528 * t11698 + t11450 * t12288;
t10352 = -t10528 * t11885 - t11452 * t12288;
t12120 = (((t10316 * t10958 + t10352 * t10955) * t10933 + (-t10316 * t10955 + t10352 * t10958) * t10921) * t10956 + t10160 * t11861) * t10382;
t10529 = -t11548 * t12252 + t11824;
t10443 = t10529 * t10953 + t11939 * t12287;
t10282 = t10443 * t10955 - t11919 * t12287;
t10293 = t10443 * t10958 + t11920 * t12287;
t10161 = -t10282 * t10922 + t10293 * t10934;
t10317 = t10529 * t11697 + t11445 * t12287;
t10353 = t10529 * t11883 + t11447 * t12287;
t12119 = (((t10317 * t10958 - t10353 * t10955) * t10934 - (t10317 * t10955 + t10353 * t10958) * t10922) * t10956 + t10161 * t11861) * t10383;
t10530 = -t11552 * t12252 + t11539;
t10444 = t10530 * t10953 + t11921 * t12287;
t10281 = -t10444 * t10955 - t11937 * t12287;
t10294 = t10444 * t10958 - t11938 * t12287;
t10162 = t10281 * t10922 + t10294 * t10934;
t10318 = t10530 * t11697 + t11446 * t12287;
t10354 = -t10530 * t11883 - t11448 * t12287;
t12118 = (((t10318 * t10958 + t10354 * t10955) * t10934 + (-t10318 * t10955 + t10354 * t10958) * t10922) * t10956 + t10162 * t11861) * t10383;
t10091 = t10153 * t12044 - (t10275 * t10930 + t10285 * t10918) * t12431;
t12117 = t10091 * t10428;
t10092 = t10154 * t12044 - (-t10272 * t10930 + t10286 * t10918) * t12431;
t12116 = t10092 * t10428;
t10093 = t10151 * t12045 - t12432 * (t10274 * t10929 + t10283 * t10917);
t12115 = t10093 * t10427;
t10094 = t10152 * t12045 - t12432 * (-t10271 * t10929 + t10284 * t10917);
t12114 = t10094 * t10427;
t10095 = t10155 * t12043 - (t10276 * t10931 + t10287 * t10919) * t12430;
t12113 = t10095 * t10429;
t10096 = t10156 * t12043 - (-t10273 * t10931 + t10288 * t10919) * t12430;
t12112 = t10096 * t10429;
t10097 = t10157 * t12042 - (t10278 * t10932 + t10289 * t10920) * t12429;
t12111 = t10097 * t10430;
t10098 = t10159 * t12041 - (t10280 * t10933 + t10291 * t10921) * t12428;
t12110 = t10098 * t10431;
t10099 = t10160 * t12041 - (-t10279 * t10933 + t10292 * t10921) * t12428;
t12109 = t10099 * t10431;
t10100 = t10161 * t12040 - t12427 * (t10282 * t10934 + t10293 * t10922);
t12108 = t10100 * t10432;
t10101 = t10158 * t12042 - (-t10277 * t10932 + t10290 * t10920) * t12429;
t12107 = t10101 * t10430;
t10102 = t10162 * t12040 - t12427 * (-t10281 * t10934 + t10294 * t10922);
t12106 = t10102 * t10432;
t10205 = -t10592 * t12432 + t10593 * t12045;
t12099 = t10205 * t10427;
t10206 = -t10604 * t12045 + t10610 * t12432;
t12098 = t10206 * t10427;
t10207 = -t10594 * t12431 + t10595 * t12044;
t12097 = t10207 * t10428;
t10208 = -t10605 * t12044 + t10611 * t12431;
t12096 = t10208 * t10428;
t10209 = -t10596 * t12430 + t10597 * t12043;
t12095 = t10209 * t10429;
t10210 = -t10606 * t12043 + t10612 * t12430;
t12094 = t10210 * t10429;
t10211 = -t10598 * t12429 + t10599 * t12042;
t12093 = t10211 * t10430;
t10212 = -t10607 * t12042 + t10613 * t12429;
t12092 = t10212 * t10430;
t10213 = -t10600 * t12428 + t10601 * t12041;
t12091 = t10213 * t10431;
t10214 = -t10608 * t12041 + t10614 * t12428;
t12090 = t10214 * t10431;
t10215 = -t10602 * t12427 + t10603 * t12040;
t12089 = t10215 * t10432;
t10216 = -t10609 * t12040 + t10615 * t12427;
t12088 = t10216 * t10432;
t12057 = t10466 * t10948;
t12056 = t10467 * t10949;
t12055 = t10468 * t10950;
t12054 = t10469 * t10951;
t12053 = t10470 * t10952;
t12052 = t10471 * t10953;
t11842 = t10959 * t10960;
t11799 = t12233 - g(2);
t11798 = t12232 - g(3);
t11791 = qJ(3,1) * t12163;
t11790 = qJ(3,2) * t12164;
t11789 = qJ(3,3) * t12165;
t11788 = t10959 * t12220;
t11787 = t10959 * t12218;
t11785 = qJ(3,4) * t12169;
t11784 = qJ(3,5) * t12170;
t11783 = qJ(3,6) * t12171;
t11782 = t10390 * t12196;
t11781 = t10393 * t12195;
t11780 = t10396 * t12194;
t11779 = t10408 * t12193;
t11778 = t10411 * t12191;
t11777 = t10414 * t12192;
t11775 = t10427 * t12171;
t11774 = t10959 * t12171;
t11773 = t10428 * t12170;
t11772 = t10959 * t12170;
t11771 = t10429 * t12169;
t11770 = t10959 * t12169;
t11763 = t10430 * t12165;
t11762 = t10959 * t12165;
t11761 = t10431 * t12164;
t11760 = t10959 * t12164;
t11759 = t10432 * t12163;
t11758 = t10959 * t12163;
t11751 = t10205 * t12063;
t11750 = t10206 * t12063;
t11749 = t10207 * t12062;
t11748 = t10208 * t12062;
t11747 = t10209 * t12061;
t11746 = t10210 * t12061;
t11745 = t10211 * t12060;
t11744 = t10212 * t12060;
t11743 = t10213 * t12059;
t11742 = t10214 * t12059;
t11741 = t10215 * t12058;
t11740 = t10216 * t12058;
t11739 = t10948 * t12375;
t11738 = t10949 * t12374;
t11737 = t10950 * t12373;
t11736 = t10951 * t12372;
t11735 = t10952 * t12371;
t11734 = t10953 * t12370;
t10915 = t10954 - 0.1e1;
t11643 = t10915 * t11775;
t11642 = t10915 * t11773;
t11641 = t10915 * t11771;
t11638 = t10915 * t11763;
t11637 = t10915 * t11761;
t11636 = t10915 * t11759;
t11613 = 0.2e1 * t11640;
t11612 = 0.2e1 * t11639;
t11611 = 0.2e1 * t11635;
t11610 = 0.2e1 * t11634;
t11609 = 0.2e1 * t11633;
t11608 = 0.2e1 * t11632;
t11413 = g(1) * t11702 - (-g(2) * t10973 + g(3) * t11708) * t10935 + (g(2) * t11708 + g(3) * t10973) * t10923;
t11412 = g(1) * t11701 - (-g(2) * t10974 + g(3) * t11707) * t10936 + (g(2) * t11707 + g(3) * t10974) * t10924;
t11411 = g(1) * t11700 - (-g(2) * t10975 + g(3) * t11706) * t10937 + (g(2) * t11706 + g(3) * t10975) * t10925;
t11410 = g(1) * t11699 - (-g(2) * t10985 + g(3) * t11705) * t10938 + (g(2) * t11705 + g(3) * t10985) * t10926;
t11409 = g(1) * t11698 - (-g(2) * t10986 + g(3) * t11704) * t10939 + (g(2) * t11704 + g(3) * t10986) * t10927;
t11408 = g(1) * t11697 - (-g(2) * t10987 + g(3) * t11703) * t10940 + (g(2) * t11703 + g(3) * t10987) * t10928;
t11101 = t10957 * t11107;
t11100 = t10957 * t11106;
t11099 = t10957 * t11105;
t11098 = t10957 * t11104;
t11097 = t10957 * t11103;
t11096 = t10957 * t11102;
t11095 = t9911 * t11101;
t11094 = t9912 * t11100;
t11093 = t9913 * t11099;
t11092 = t9923 * t11098;
t11091 = t9924 * t11097;
t11090 = t9925 * t11096;
t9968 = t10960 * t12421 - t11002 * t12372 + t11015 * t12093 + t11021 * t12092;
t9969 = t10960 * t12422 - t11001 * t12371 + t11016 * t12091 + t11022 * t12090;
t9970 = t10960 * t12423 - t11000 * t12370 + t11017 * t12089 + t11023 * t12088;
t9965 = t10960 * t12424 - t11005 * t12375 + t11012 * t12099 + t11018 * t12098;
t9966 = t10960 * t12425 - t11004 * t12374 + t11013 * t12097 + t11019 * t12096;
t9967 = t10960 * t12426 - t11003 * t12373 + t11014 * t12095 + t11020 * t12094;
t10999 = -t9970 + t11791;
t10998 = -t9969 + t11790;
t10997 = -t9968 + t11789;
t10996 = -t9967 + t11785;
t10995 = -t9966 + t11784;
t10994 = -t9965 + t11783;
t10941 = t12234 - g(1);
t10762 = -t11546 * t11817 + t11812 * t11814;
t10761 = t11545 * t11817 + t11814 * t11815;
t10760 = t11546 * t11814 + t11812 * t11817;
t10759 = -t11545 * t11814 + t11815 * t11817;
t10650 = t10941 * t11813 - t11548 * t11799 + t11552 * t11798;
t10646 = -t10758 + t10647;
t10573 = -t10649 + t10758;
t10560 = (g(2) * t11836 + g(3) * t11895) * t10940 + (-g(2) * t11895 + g(3) * t11836) * t10928 - g(1) * t11883;
t10559 = (g(2) * t11837 + g(3) * t11899) * t10939 + (-g(2) * t11899 + g(3) * t11837) * t10927 - g(1) * t11885;
t10558 = (g(2) * t11838 + g(3) * t11903) * t10938 + (-g(2) * t11903 + g(3) * t11838) * t10926 - g(1) * t11887;
t10557 = (g(2) * t11839 + g(3) * t11907) * t10937 + (-g(2) * t11907 + g(3) * t11839) * t10925 - g(1) * t11889;
t10556 = (g(2) * t11840 + g(3) * t11911) * t10936 + (-g(2) * t11911 + g(3) * t11840) * t10924 - g(1) * t11891;
t10555 = (g(2) * t11841 + g(3) * t11915) * t10935 + (-g(2) * t11915 + g(3) * t11841) * t10923 - g(1) * t11893;
t10516 = -t10647 + t10649;
t10511 = -t10758 - t10649;
t10510 = -t10758 - t10647;
t10491 = t10760 * t11799 + t10762 * t11798 + t10941 * t11550;
t10490 = -t10759 * t11799 - t10761 * t11798 + t10941 * t11549;
t10465 = -t10647 - t10649;
t9943 = -t12182 / 0.2e1 + (t12031 / 0.2e1 + t12037 / 0.2e1) * t10960;
t9942 = -t12183 / 0.2e1 + (t12032 / 0.2e1 + t12038 / 0.2e1) * t10960;
t9941 = -t12184 / 0.2e1 + (t12033 / 0.2e1 + t12039 / 0.2e1) * t10960;
t9922 = t10987 * t12163 - t10990 * t9982;
t9921 = t10986 * t12164 - t10989 * t9981;
t9920 = t10985 * t12165 - t10988 * t9980;
t9919 = t11758 * t12220 + t12218 * t9982;
t9918 = t11760 * t12220 + t12218 * t9981;
t9917 = t11762 * t12220 + t12218 * t9980;
t9916 = t11758 * t12218 - t12220 * t9982;
t9915 = t11760 * t12218 - t12220 * t9981;
t9914 = t11762 * t12218 - t12220 * t9980;
t9910 = t10975 * t12169 - t10978 * t9976;
t9909 = t10974 * t12170 - t10977 * t9975;
t9908 = t10973 * t12171 - t10976 * t9974;
t9907 = t11770 * t12220 + t12218 * t9976;
t9906 = t11772 * t12220 + t12218 * t9975;
t9905 = t11774 * t12220 + t12218 * t9974;
t9904 = t11770 * t12218 - t12220 * t9976;
t9903 = t11772 * t12218 - t12220 * t9975;
t9902 = t11774 * t12218 - t12220 * t9974;
t9895 = t11788 * t9925 - t12218 * t9922;
t9894 = t11788 * t9924 - t12218 * t9921;
t9893 = t11788 * t9923 - t12218 * t9920;
t9892 = t11787 * t9925 + t12220 * t9922;
t9891 = t11787 * t9924 + t12220 * t9921;
t9890 = t11787 * t9923 + t12220 * t9920;
t9889 = t11788 * t9913 - t12218 * t9910;
t9888 = t11788 * t9912 - t12218 * t9909;
t9887 = t11788 * t9911 - t12218 * t9908;
t9886 = t11787 * t9913 + t12220 * t9910;
t9885 = t11787 * t9912 + t12220 * t9909;
t9884 = t11787 * t9911 + t12220 * t9908;
t9874 = t9943 * t10975 + t10978 * t12285 + t12188;
t9873 = t9942 * t10974 + t10977 * t12284 + t12189;
t9872 = t9941 * t10973 + t10976 * t12283 + t12190;
t9871 = (-t12180 / 0.2e1 + (t12028 / 0.2e1 - t12035 / 0.2e1) * t10960) * t10989 + (((-t11793 / 0.2e1 + t10891 / 0.2e1 + t10913 / 0.2e1) * t10958 + t11872 / 0.2e1) * t10933 - t12029 / 0.2e1) * t10986 + t9969 * t12222 + t12224;
t9870 = (-t12179 / 0.2e1 + (t12027 / 0.2e1 - t12034 / 0.2e1) * t10960) * t10990 + (((-t11792 / 0.2e1 + t10892 / 0.2e1 + t10914 / 0.2e1) * t10958 + t11871 / 0.2e1) * t10934 - t11967 / 0.2e1) * t10987 + t12223 + t9970 * t12222;
t9869 = (-t12181 / 0.2e1 + (t12030 / 0.2e1 - t12036 / 0.2e1) * t10960) * t10988 + (((t10912 / 0.2e1 - t11794 / 0.2e1 + t10890 / 0.2e1) * t10958 + t11873 / 0.2e1) * t10932 - t11968 / 0.2e1) * t10985 + t9968 * t12222 + t12225;
t9868 = -t10975 * t12285 + t9943 * t10978 + t9967 * t12222 + t12226;
t9867 = -t10974 * t12284 + t9942 * t10977 + t9966 * t12222 + t12227;
t9866 = -t10973 * t12283 + t9941 * t10976 + t9965 * t12222 + t12228;
t9865 = ((t10560 * t10958 - t10955 * t11408) * t10934 + (-t10560 * t10955 - t10958 * t11408) * t10922 - t12223 + t12384 * t11855) * t10956 + t10954 * t11791 - t12384 * t11842 - t10999 - t12319 * t11861;
t9864 = ((t10559 * t10958 - t10955 * t11409) * t10933 + (-t10559 * t10955 - t10958 * t11409) * t10921 - t12224 + t12385 * t11856) * t10956 + t10954 * t11790 - t12385 * t11842 - t10998 - t12318 * t11861;
t9863 = ((t10558 * t10958 - t10955 * t11410) * t10932 + (-t10558 * t10955 - t10958 * t11410) * t10920 - t12225 + t12386 * t11857) * t10956 + t10954 * t11789 - t12386 * t11842 - t10997 - t12317 * t11861;
t9862 = ((t10557 * t10958 - t10955 * t11411) * t10931 + (-t10557 * t10955 - t10958 * t11411) * t10919 - t12226 + t12445 * t11858) * t10956 + t10954 * t11785 - t12445 * t11842 - t10996 - t12316 * t11861;
t9861 = ((t10556 * t10958 - t10955 * t11412) * t10930 + (-t10556 * t10955 - t10958 * t11412) * t10918 - t12227 + t12446 * t11859) * t10956 + t10954 * t11784 - t12446 * t11842 - t10995 - t12315 * t11861;
t9860 = ((t10555 * t10958 - t10955 * t11413) * t10929 + (-t10555 * t10955 - t10958 * t11413) * t10917 - t12228 + t12447 * t11860) * t10956 + t10954 * t11783 - t12447 * t11842 - t10994 - t12314 * t11861;
t9859 = t11788 * t9879 + t12173 * t9870;
t9858 = t11788 * t9880 + t12173 * t9871;
t9857 = t11788 * t9878 + t12173 * t9869;
t9856 = t11787 * t9879 + t12174 * t9870;
t9855 = t11787 * t9880 + t12174 * t9871;
t9854 = t11787 * t9878 + t12174 * t9869;
t9853 = -0.2e1 * t11788 * t9873 - 0.2e1 * t12218 * t9867;
t9852 = -0.2e1 * t11788 * t9872 - 0.2e1 * t12218 * t9866;
t9851 = -0.2e1 * t11788 * t9874 - 0.2e1 * t12218 * t9868;
t9850 = -0.2e1 * t11787 * t9874 + 0.2e1 * t12220 * t9868;
t9849 = -0.2e1 * t11787 * t9873 + 0.2e1 * t12220 * t9867;
t9848 = -0.2e1 * t11787 * t9872 + 0.2e1 * t12220 * t9866;
t9847 = ((t10999 * t10990 + t10987 * (t9979 + t11609)) * t10956 - pkin(2) * t9922) * t10957 + t9970 * t11842 - t12384;
t9846 = ((t10998 * t10989 + t10986 * (t9978 + t11610)) * t10956 - pkin(2) * t9921) * t10957 + t9969 * t11842 - t12385;
t9845 = ((t10997 * t10988 + t10985 * (t9977 + t11611)) * t10956 - pkin(2) * t9920) * t10957 + t9968 * t11842 - t12386;
t9844 = ((t10996 * t10978 + t10975 * (t9973 + t11612)) * t10956 - pkin(2) * t9910) * t10957 + t9967 * t11842 - t12445;
t9843 = ((t10995 * t10977 + t10974 * (t9972 + t11613)) * t10956 - pkin(2) * t9909) * t10957 + t9966 * t11842 - t12446;
t9842 = ((t10994 * t10976 + t10973 * (t9971 + t11608)) * t10956 - pkin(2) * t9908) * t10957 + t9965 * t11842 - t12447;
t9841 = (t12265 + t12246) * t9982 + (-t9935 * t10956 + (-0.2e1 * t11633 - t9979) * t10954 + t11609) * qJ(3,1) + (-t9970 * t10956 + t9934) * pkin(2);
t9840 = (t12265 + t12245) * t9981 + (-t9937 * t10956 + (-0.2e1 * t11634 - t9978) * t10954 + t11610) * qJ(3,2) + (-t9969 * t10956 + t9936) * pkin(2);
t9839 = (t12265 + t12244) * t9980 + (-t9933 * t10956 + (-0.2e1 * t11635 - t9977) * t10954 + t11611) * qJ(3,3) + (-t9968 * t10956 + t9932) * pkin(2);
t9838 = (t12265 + t12243) * t9976 + (t12293 * t10956 + (-0.2e1 * t11639 - t9973) * t10954 + t11612) * qJ(3,4) + (-t9967 * t10956 + t9930) * pkin(2);
t9837 = (t12265 + t12241) * t9974 + (t12295 * t10956 + (-0.2e1 * t11632 - t9971) * t10954 + t11608) * qJ(3,6) + (-t9965 * t10956 + t9926) * pkin(2);
t9836 = (t12265 + t12242) * t9975 + (t12294 * t10956 + (-0.2e1 * t11640 - t9972) * t10954 + t11613) * qJ(3,5) + (-t9966 * t10956 + t9928) * pkin(2);
t1 = [(-t11734 * t9865 - t11735 * t9864 - t11736 * t9863 - t11737 * t9862 - t11738 * t9861 - t11739 * t9860) * MDP(8) + (t10460 * t11813 + t10510 * t11550 - t11549 * t12335) * MDP(15) + (-t10511 * t11549 - t10514 * t11550 + t11813 * t12333) * MDP(16) + (-t10464 * t11549 + t10465 * t11813 + t11550 * t12334) * MDP(17) + (t10490 * t11549 + t10491 * t11550 + t10650 * t11813) * MDP(18) + (-t11734 * t12163 - t11735 * t12164 - t11736 * t12165 - t11737 * t12169 - t11738 * t12170 - t11739 * t12171) * MDP(7) * t10915 + ((-t11734 * t9916 - t11735 * t9915 - t11736 * t9914 - t11737 * t9904 - t11738 * t9903 - t11739 * t9902) * MDP(5) + (-t11734 * t9919 - t11735 * t9918 - t11736 * t9917 - t11737 * t9907 - t11738 * t9906 - t11739 * t9905) * MDP(6)) * t10956 + (-t11102 * t12384 * MDP(1) - t9982 * MDP(2) * t12052 + (-t11096 * t9922 - t12052 * t9934) * MDP(3) + (-t12052 * t9935 - t11090) * MDP(4) + (-t11096 * t9892 - t12052 * t9856) * MDP(5) + (-t11096 * t9895 - t12052 * t9859) * MDP(6) + (t10956 * t11090 + t12052 * t12192) * MDP(7) + (t11102 * t9847 - t12052 * t9841) * MDP(8)) * t12413 + (-t11103 * t12385 * MDP(1) - t9981 * MDP(2) * t12053 + (-t11097 * t9921 - t12053 * t9936) * MDP(3) + (-t12053 * t9937 - t11091) * MDP(4) + (-t11097 * t9891 - t12053 * t9855) * MDP(5) + (-t11097 * t9894 - t12053 * t9858) * MDP(6) + (t10956 * t11091 + t12053 * t12191) * MDP(7) + (t11103 * t9846 - t12053 * t9840) * MDP(8)) * t12412 + (-t11104 * t12386 * MDP(1) - t9980 * MDP(2) * t12054 + (-t11098 * t9920 - t12054 * t9932) * MDP(3) + (-t12054 * t9933 - t11092) * MDP(4) + (-t11098 * t9890 - t12054 * t9854) * MDP(5) + (-t11098 * t9893 - t12054 * t9857) * MDP(6) + (t10956 * t11092 + t12054 * t12193) * MDP(7) + (t11104 * t9845 - t12054 * t9839) * MDP(8)) * t12411 + (-t11105 * t12445 * MDP(1) - t9976 * MDP(2) * t12055 + (-t11099 * t9910 - t12055 * t9930) * MDP(3) + (t12055 * t12293 - t11093) * MDP(4) + (-t11099 * t9886 - t12055 * t9850) * MDP(5) + (-t11099 * t9889 - t12055 * t9851) * MDP(6) + (t10956 * t11093 + t12055 * t12194) * MDP(7) + (t11105 * t9844 - t12055 * t9838) * MDP(8)) * t12410 + (-t11106 * t12446 * MDP(1) - t9975 * MDP(2) * t12056 + (-t11100 * t9909 - t12056 * t9928) * MDP(3) + (t12056 * t12294 - t11094) * MDP(4) + (-t11100 * t9885 - t12056 * t9849) * MDP(5) + (-t11100 * t9888 - t12056 * t9853) * MDP(6) + (t10956 * t11094 + t12056 * t12195) * MDP(7) + (t11106 * t9843 - t12056 * t9836) * MDP(8)) * t12409 + (-t11107 * t12447 * MDP(1) - t9974 * MDP(2) * t12057 + (-t11101 * t9908 - t12057 * t9926) * MDP(3) + (t12057 * t12295 - t11095) * MDP(4) + (-t11101 * t9884 - t12057 * t9848) * MDP(5) + (-t11101 * t9887 - t12057 * t9852) * MDP(6) + (t10956 * t11095 + t12057 * t12196) * MDP(7) + (t11107 * t9842 - t12057 * t9837) * MDP(8)) * t12408; (-t11055 * t12384 - t11057 * t12385 - t11059 * t12386 - t11061 * t12445 - t11063 * t12446 - t11065 * t12447) * MDP(1) + (t12076 * t9982 + t12077 * t9981 + t12078 * t9980 + t12082 * t9976 + t12083 * t9975 + t12084 * t9974) * MDP(2) + (-t11043 * t9922 - t11045 * t9921 - t11047 * t9920 - t11049 * t9910 - t11051 * t9909 - t11053 * t9908 + t12076 * t9934 + t12077 * t9936 + t12078 * t9932 + t12082 * t9930 + t12083 * t9928 + t12084 * t9926) * MDP(3) + (t12076 * t9935 + t12077 * t9937 + t12078 * t9933 - t12082 * t12293 - t12083 * t12294 - t12084 * t12295 - t12266) * MDP(4) + (-t9892 * t11043 + t9856 * t12076 + t9916 * t11740 - t9891 * t11045 + t9855 * t12077 + t9915 * t11742 - t9890 * t11047 + t9854 * t12078 + t9914 * t11744 - t9886 * t11049 + t9850 * t12082 + t9904 * t11746 - t9885 * t11051 + t9849 * t12083 + t9903 * t11748 - t9884 * t11053 + t9848 * t12084 + t9902 * t11750) * MDP(5) + (-t9895 * t11043 + t9859 * t12076 + t9919 * t11740 - t9894 * t11045 + t9858 * t12077 + t9918 * t11742 - t9893 * t11047 + t9857 * t12078 + t9917 * t11744 - t9889 * t11049 + t9851 * t12082 + t9907 * t11746 - t9888 * t11051 + t9853 * t12083 + t9906 * t11748 - t9887 * t11053 + t9852 * t12084 + t9905 * t11750) * MDP(6) + (t10206 * t11643 + t10208 * t11642 + t10210 * t11641 + t10212 * t11638 + t10214 * t11637 + t10216 * t11636 - t10220 * t11782 - t10221 * t11781 - t10222 * t11780 - t10226 * t11779 - t10227 * t11778 - t10228 * t11777) * MDP(7) + (t9847 * t11055 + t9841 * t12076 + t9865 * t12088 + t9846 * t11057 + t9840 * t12077 + t9864 * t12090 + t9845 * t11059 + t9839 * t12078 + t9863 * t12092 + t9844 * t11061 + t9838 * t12082 + t9862 * t12094 + t9843 * t11063 + t9836 * t12083 + t9861 * t12096 + t9842 * t11065 + t9837 * t12084 + t9860 * t12098) * MDP(8) + (-t10460 * t11548 + t10760 * t10510 + t10759 * t12335) * MDP(15) + (t10759 * t10511 - t10514 * t10760 - t11548 * t12333) * MDP(16) + (t10759 * t10464 - t10465 * t11548 + t10760 * t12334) * MDP(17) + (-t10759 * t10490 + t10760 * t10491 - t10650 * t11548) * MDP(18) + t12266 * t12382; (-t11054 * t12384 - t11056 * t12385 - t11058 * t12386 - t11060 * t12445 - t11062 * t12446 - t11064 * t12447) * MDP(1) + (t12079 * t9982 + t12080 * t9981 + t12081 * t9980 + t12085 * t9976 + t12086 * t9975 + t12087 * t9974) * MDP(2) + (-t11042 * t9922 - t11044 * t9921 - t11046 * t9920 - t11048 * t9910 - t11050 * t9909 - t11052 * t9908 + t12079 * t9934 + t12080 * t9936 + t12081 * t9932 + t12085 * t9930 + t12086 * t9928 + t12087 * t9926) * MDP(3) + (t12079 * t9935 + t12080 * t9937 + t12081 * t9933 - t12085 * t12293 - t12086 * t12294 - t12087 * t12295 - t12267) * MDP(4) + (-t9892 * t11042 + t9856 * t12079 + t9916 * t11741 - t9891 * t11044 + t9855 * t12080 + t9915 * t11743 - t9890 * t11046 + t9854 * t12081 + t9914 * t11745 - t9886 * t11048 + t9850 * t12085 + t9904 * t11747 - t9885 * t11050 + t9849 * t12086 + t9903 * t11749 - t9884 * t11052 + t9848 * t12087 + t9902 * t11751) * MDP(5) + (-t9895 * t11042 + t9859 * t12079 + t9919 * t11741 - t9894 * t11044 + t9858 * t12080 + t9918 * t11743 - t9893 * t11046 + t9857 * t12081 + t9917 * t11745 - t9889 * t11048 + t9851 * t12085 + t9907 * t11747 - t9888 * t11050 + t9853 * t12086 + t9906 * t11749 - t9887 * t11052 + t9852 * t12087 + t9905 * t11751) * MDP(6) + (t10205 * t11643 + t10207 * t11642 + t10209 * t11641 + t10211 * t11638 + t10213 * t11637 + t10215 * t11636 - t10217 * t11782 - t10218 * t11781 - t10219 * t11780 - t10223 * t11779 - t10224 * t11778 - t10225 * t11777) * MDP(7) + (t9847 * t11054 + t9841 * t12079 + t9865 * t12089 + t9846 * t11056 + t9840 * t12080 + t9864 * t12091 + t9845 * t11058 + t9839 * t12081 + t9863 * t12093 + t9844 * t11060 + t9838 * t12085 + t9862 * t12095 + t9843 * t11062 + t9836 * t12086 + t9861 * t12097 + t9842 * t11064 + t9837 * t12087 + t9860 * t12099) * MDP(8) + (t10460 * t11552 + t10762 * t10510 + t10761 * t12335) * MDP(15) + (t10761 * t10511 - t10514 * t10762 + t11552 * t12333) * MDP(16) + (t10761 * t10464 + t10465 * t11552 + t10762 * t12334) * MDP(17) + (-t10761 * t10490 + t10762 * t10491 + t10650 * t11552) * MDP(18) + t12267 * t12382; (-t12172 * t12384 - t12197 * t12385 - t12198 * t12386 - t12199 * t12445 - t12200 * t12446 - t12201 * t12447) * MDP(1) + (t12136 * t9980 + t12137 * t9982 + t12138 * t9981 + t12139 * t9974 + t12140 * t9976 + t12141 * t9975) * MDP(2) + (t9928 * t12141 + t9930 * t12140 + t9926 * t12139 + t9936 * t12138 + t9934 * t12137 + t9932 * t12136 + (-t12172 * t9922 - t12197 * t9921 - t12198 * t9920 - t12199 * t9910 - t12200 * t9909 - t12201 * t9908) * t10957) * MDP(3) + (t12136 * t9933 + t12137 * t9935 + t12138 * t9937 - t12139 * t12295 - t12140 * t12293 - t12141 * t12294 - t12361) * MDP(4) + (t9849 * t12141 + t9850 * t12140 + t9848 * t12139 + t9855 * t12138 + t9856 * t12137 + t9854 * t12136 + (-t12172 * t9892 - t12197 * t9891 - t12198 * t9890 - t12199 * t9886 - t12200 * t9885 - t12201 * t9884) * t10957 + (t12130 * t9916 + t12131 * t9915 + t12132 * t9914 + t12133 * t9904 + t12134 * t9903 + t12135 * t9902) * t10956) * MDP(5) + (t9853 * t12141 + t9851 * t12140 + t9852 * t12139 + t9858 * t12138 + t9859 * t12137 + t9857 * t12136 + (-t12172 * t9895 - t12197 * t9894 - t12198 * t9893 - t12199 * t9889 - t12200 * t9888 - t12201 * t9887) * t10957 + (t12130 * t9919 + t12131 * t9918 + t12132 * t9917 + t12133 * t9907 + t12134 * t9906 + t12135 * t9905) * t10956) * MDP(6) + ((t10061 * t11775 + t10062 * t11773 + t10063 * t11771 + t10064 * t11763 + t10065 * t11761 + t10066 * t11759) * t10915 + (-t12136 * t9878 - t12137 * t9879 - t12138 * t9880 - t12139 * t9875 - t12140 * t9877 - t12141 * t9876 + t12361) * t10956) * MDP(7) + (t9847 * t12172 + t9841 * t12137 + t9865 * t12130 + t9846 * t12197 + t9840 * t12138 + t9864 * t12131 + t9845 * t12198 + t9839 * t12136 + t9863 * t12132 + t9844 * t12199 + t9838 * t12140 + t9862 * t12133 + t9843 * t12200 + t9836 * t12141 + t9861 * t12134 + t9842 * t12201 + t9837 * t12139 + t9860 * t12135) * MDP(8) + (t10518 * t11550 + (t10790 * t11813 - t10877 * t11549) * t10792) * MDP(9) + (-t10460 * t11550 + t10516 * t11813 - t11549 * t12333) * MDP(10) + (-t10464 * t11813 - t10573 * t11549 + t11550 * t12335) * MDP(11) + (-t10517 * t11549 + (-t10792 * t11813 + t10877 * t11550) * t10790) * MDP(12) + (-t10514 * t11549 + t10646 * t11550 + t11813 * t12334) * MDP(13) + (t11813 * t10787 + (-t10790 * t11550 + t10792 * t11549) * t10877) * MDP(14) + (-t10490 * t11813 + t10650 * t11549) * MDP(15) + (-t10491 * t11813 + t10650 * t11550) * MDP(16) + (t10490 * t11550 - t10491 * t11549) * MDP(17); (-t12149 * t12384 - t12151 * t12385 - t12153 * t12386 - t12157 * t12445 - t12158 * t12446 - t12159 * t12447) * MDP(1) + (t12118 * t9982 + t12120 * t9981 + t12122 * t9980 + t12124 * t9976 + t12126 * t9975 + t12127 * t9974) * MDP(2) + (t9926 * t12127 + t9928 * t12126 + t9930 * t12124 + t9932 * t12122 + t9936 * t12120 + t9934 * t12118 + (-t12149 * t9922 - t12151 * t9921 - t12153 * t9920 - t12157 * t9910 - t12158 * t9909 - t12159 * t9908) * t10957) * MDP(3) + (t12118 * t9935 + t12120 * t9937 + t12122 * t9933 - t12124 * t12293 - t12126 * t12294 - t12127 * t12295 - t12362) * MDP(4) + (t9848 * t12127 + t9849 * t12126 + t9850 * t12124 + t9854 * t12122 + t9855 * t12120 + t9856 * t12118 + (-t12149 * t9892 - t12151 * t9891 - t12153 * t9890 - t12157 * t9886 - t12158 * t9885 - t12159 * t9884) * t10957 + (t12106 * t9916 + t12107 * t9914 + t12109 * t9915 + t12112 * t9904 + t12114 * t9902 + t12116 * t9903) * t10956) * MDP(5) + (t9852 * t12127 + t9853 * t12126 + t9851 * t12124 + t9857 * t12122 + t9858 * t12120 + t9859 * t12118 + (-t12149 * t9895 - t12151 * t9894 - t12153 * t9893 - t12157 * t9889 - t12158 * t9888 - t12159 * t9887) * t10957 + (t12106 * t9919 + t12107 * t9917 + t12109 * t9918 + t12112 * t9907 + t12114 * t9905 + t12116 * t9906) * t10956) * MDP(6) + ((t10092 * t11773 + t10094 * t11775 + t10096 * t11771 + t10099 * t11761 + t10101 * t11763 + t10102 * t11759) * t10915 + (-t12118 * t9879 - t12120 * t9880 - t12122 * t9878 - t12124 * t9877 - t12126 * t9876 - t12127 * t9875 + t12362) * t10956) * MDP(7) + (t9847 * t12149 + t9841 * t12118 + t9865 * t12106 + t9846 * t12151 + t9840 * t12120 + t9864 * t12109 + t9845 * t12153 + t9839 * t12122 + t9863 * t12107 + t9844 * t12157 + t9838 * t12124 + t9862 * t12112 + t9843 * t12158 + t9836 * t12126 + t9861 * t12116 + t9842 * t12159 + t9837 * t12127 + t9860 * t12114) * MDP(8) + (t10760 * t10518 + (t10759 * t10877 - t10790 * t11548) * t10792) * MDP(9) + (-t10460 * t10760 - t10516 * t11548 + t10759 * t12333) * MDP(10) + (t10464 * t11548 + t10759 * t10573 + t10760 * t12335) * MDP(11) + (t10759 * t10517 + (t10760 * t10877 + t10792 * t11548) * t10790) * MDP(12) + (t10759 * t10514 + t10760 * t10646 - t11548 * t12334) * MDP(13) + (-t10787 * t11548 + (-t10759 * t10792 - t10760 * t10790) * t10877) * MDP(14) + (t10490 * t11548 - t10759 * t10650) * MDP(15) + (t10491 * t11548 + t10760 * t10650) * MDP(16) + (t10490 * t10760 + t10491 * t10759) * MDP(17); (-t12148 * t12384 - t12150 * t12385 - t12152 * t12386 - t12154 * t12445 - t12155 * t12446 - t12156 * t12447) * MDP(1) + (t12119 * t9982 + t12121 * t9981 + t12123 * t9980 + t12125 * t9976 + t12128 * t9975 + t12129 * t9974) * MDP(2) + (t9926 * t12129 + t9928 * t12128 + t9930 * t12125 + t9932 * t12123 + t9936 * t12121 + t9934 * t12119 + (-t12148 * t9922 - t12150 * t9921 - t12152 * t9920 - t12154 * t9910 - t12155 * t9909 - t12156 * t9908) * t10957) * MDP(3) + (t12119 * t9935 + t12121 * t9937 + t12123 * t9933 - t12125 * t12293 - t12128 * t12294 - t12129 * t12295 - t12363) * MDP(4) + (t9848 * t12129 + t9849 * t12128 + t9850 * t12125 + t9854 * t12123 + t9855 * t12121 + t9856 * t12119 + (-t12148 * t9892 - t12150 * t9891 - t12152 * t9890 - t12154 * t9886 - t12155 * t9885 - t12156 * t9884) * t10957 + (t12108 * t9916 + t12110 * t9915 + t12111 * t9914 + t12113 * t9904 + t12115 * t9902 + t12117 * t9903) * t10956) * MDP(5) + (t9852 * t12129 + t9853 * t12128 + t9851 * t12125 + t9857 * t12123 + t9858 * t12121 + t9859 * t12119 + (-t12148 * t9895 - t12150 * t9894 - t12152 * t9893 - t12154 * t9889 - t12155 * t9888 - t12156 * t9887) * t10957 + (t12108 * t9919 + t12110 * t9918 + t12111 * t9917 + t12113 * t9907 + t12115 * t9905 + t12117 * t9906) * t10956) * MDP(6) + ((t10091 * t11773 + t10093 * t11775 + t10095 * t11771 + t10097 * t11763 + t10098 * t11761 + t10100 * t11759) * t10915 + (-t12119 * t9879 - t12121 * t9880 - t12123 * t9878 - t12125 * t9877 - t12128 * t9876 - t12129 * t9875 + t12363) * t10956) * MDP(7) + (t9847 * t12148 + t9841 * t12119 + t9865 * t12108 + t9846 * t12150 + t9840 * t12121 + t9864 * t12110 + t9845 * t12152 + t9839 * t12123 + t9863 * t12111 + t9844 * t12154 + t9838 * t12125 + t9862 * t12113 + t9843 * t12155 + t9836 * t12128 + t9861 * t12117 + t9842 * t12156 + t9837 * t12129 + t9860 * t12115) * MDP(8) + (t10762 * t10518 + (t10761 * t10877 + t10790 * t11552) * t10792) * MDP(9) + (-t10460 * t10762 + t10516 * t11552 + t10761 * t12333) * MDP(10) + (-t10464 * t11552 + t10761 * t10573 + t10762 * t12335) * MDP(11) + (t10761 * t10517 + (t10762 * t10877 - t10792 * t11552) * t10790) * MDP(12) + (t10761 * t10514 + t10762 * t10646 + t11552 * t12334) * MDP(13) + (t10787 * t11552 + (-t10761 * t10792 - t10762 * t10790) * t10877) * MDP(14) + (-t10490 * t11552 - t10761 * t10650) * MDP(15) + (-t10491 * t11552 + t10762 * t10650) * MDP(16) + (t10490 * t10762 + t10491 * t10761) * MDP(17);];
tauX  = t1;
