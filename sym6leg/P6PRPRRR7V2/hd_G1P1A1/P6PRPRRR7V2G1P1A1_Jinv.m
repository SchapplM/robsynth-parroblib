% Analytische Jacobi-Matrix für parallelen Roboter
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorpose und aktiven Gelenkkoordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d4,theta1,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% Jinv [6x6]
%   Analytische Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-17 04:36
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jinv = P6PRPRRR7V2G1P1A1_Jinv(xP, qJ, pkin, koppelP, ...
legFrame)


%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(10,1),zeros(6,3),zeros(6,3)}
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRPRRR7V2G1P1A1_Jinv: qJ has to be [3x6] (double)');
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRPRRR7V2G1P1A1_Jinv: xP has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRPRRR7V2G1P1A1_Jinv: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRPRRR7V2G1P1A1_Jinv: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRPRRR7V2G1P1A1_Jinv: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From Jinv_para_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-17 04:29:38
% EndTime: 2019-05-17 04:29:58
% DurationCPUTime: 21.12s
% Computational Cost: add. (8112->849), mult. (19080->1682), div. (36->6), fcn. (18606->64), ass. (0->588)
t418 = legFrame(6,3);
t378 = cos(t418);
t409 = sin(pkin(9));
t414 = cos(pkin(9));
t413 = cos(pkin(10));
t744 = sin(pkin(10));
t746 = sin(pkin(6)) * pkin(8);
t352 = -pkin(3) * t744 + t413 * t746;
t745 = cos(pkin(6)) * pkin(8);
t359 = qJ(3,6) + t745;
t412 = sin(pkin(4));
t417 = cos(pkin(4));
t433 = cos(qJ(2,6));
t565 = t417 * t433;
t516 = t352 * t565 + t359 * t412;
t430 = sin(qJ(2,6));
t694 = t352 * t430;
t782 = -t409 * t516 - t414 * t694;
t794 = t378 * t782;
t419 = legFrame(5,3);
t379 = cos(t419);
t360 = qJ(3,5) + t745;
t434 = cos(qJ(2,5));
t564 = t417 * t434;
t515 = t352 * t564 + t360 * t412;
t431 = sin(qJ(2,5));
t693 = t352 * t431;
t781 = -t409 * t515 - t414 * t693;
t793 = t379 * t781;
t420 = legFrame(4,3);
t380 = cos(t420);
t361 = qJ(3,4) + t745;
t435 = cos(qJ(2,4));
t563 = t417 * t435;
t514 = t352 * t563 + t361 * t412;
t432 = sin(qJ(2,4));
t692 = t352 * t432;
t780 = -t409 * t514 - t414 * t692;
t792 = t380 * t780;
t421 = legFrame(3,3);
t381 = cos(t421);
t362 = qJ(3,3) + t745;
t445 = cos(qJ(2,3));
t562 = t417 * t445;
t513 = t352 * t562 + t362 * t412;
t442 = sin(qJ(2,3));
t691 = t352 * t442;
t779 = -t409 * t513 - t414 * t691;
t791 = t381 * t779;
t422 = legFrame(2,3);
t382 = cos(t422);
t363 = qJ(3,2) + t745;
t446 = cos(qJ(2,2));
t561 = t417 * t446;
t512 = t352 * t561 + t363 * t412;
t443 = sin(qJ(2,2));
t690 = t352 * t443;
t778 = -t409 * t512 - t414 * t690;
t790 = t382 * t778;
t423 = legFrame(1,3);
t383 = cos(t423);
t364 = qJ(3,1) + t745;
t447 = cos(qJ(2,1));
t560 = t417 * t447;
t511 = t352 * t560 + t364 * t412;
t444 = sin(qJ(2,1));
t689 = t352 * t444;
t777 = -t409 * t511 - t414 * t689;
t789 = t383 * t777;
t436 = legFrame(6,2);
t390 = sin(t436);
t353 = t417 * t359;
t695 = t352 * t412;
t765 = t433 * t695 - t353;
t788 = t765 * t390;
t437 = legFrame(5,2);
t391 = sin(t437);
t354 = t417 * t360;
t766 = t434 * t695 - t354;
t787 = t766 * t391;
t438 = legFrame(4,2);
t392 = sin(t438);
t355 = t417 * t361;
t767 = t435 * t695 - t355;
t786 = t767 * t392;
t439 = legFrame(3,2);
t393 = sin(t439);
t356 = t417 * t362;
t768 = t445 * t695 - t356;
t785 = t768 * t393;
t440 = legFrame(2,2);
t394 = sin(t440);
t357 = t417 * t363;
t769 = t446 * t695 - t357;
t784 = t769 * t394;
t441 = legFrame(1,2);
t395 = sin(t441);
t358 = t417 * t364;
t770 = t447 * t695 - t358;
t783 = t770 * t395;
t339 = pkin(3) * t413 + t744 * t746 + pkin(2);
t411 = sin(pkin(5));
t688 = t359 * t411;
t265 = t339 * t430 - t433 * t688;
t553 = t411 * t695;
t203 = t265 * t417 + t553;
t268 = t339 * t433 + t430 * t688;
t251 = t268 * t414;
t151 = -t203 * t409 + t251;
t584 = t409 * t430;
t220 = t352 * t584 - t414 * t516;
t366 = sin(t418);
t396 = cos(t436);
t416 = cos(pkin(5));
t408 = t416 ^ 2;
t571 = t417 * t390;
t577 = t414 * t366;
t586 = t409 * t412;
t320 = t417 * t411 * t352;
t559 = t265 * t412 - t320;
t646 = t390 * t559;
t534 = t203 * t414 + t268 * t409;
t776 = t366 * t534;
t480 = t359 * (t396 * (t378 * t586 + t412 * t577) + t571) + t408 * ((t220 * t366 + t794) * t396 + t788) - t416 * ((t151 * t378 - t776) * t396 + t646);
t687 = t360 * t411;
t266 = t339 * t431 - t434 * t687;
t205 = t266 * t417 + t553;
t269 = t339 * t434 + t431 * t687;
t253 = t269 * t414;
t152 = -t205 * t409 + t253;
t583 = t409 * t431;
t221 = t352 * t583 - t414 * t515;
t367 = sin(t419);
t397 = cos(t437);
t570 = t417 * t391;
t576 = t414 * t367;
t558 = t266 * t412 - t320;
t641 = t391 * t558;
t533 = t205 * t414 + t269 * t409;
t775 = t367 * t533;
t479 = t360 * (t397 * (t379 * t586 + t412 * t576) + t570) + t408 * ((t221 * t367 + t793) * t397 + t787) - t416 * ((t152 * t379 - t775) * t397 + t641);
t686 = t361 * t411;
t267 = t339 * t432 - t435 * t686;
t207 = t267 * t417 + t553;
t270 = t339 * t435 + t432 * t686;
t255 = t270 * t414;
t153 = -t207 * t409 + t255;
t582 = t409 * t432;
t222 = t352 * t582 - t414 * t514;
t368 = sin(t420);
t398 = cos(t438);
t569 = t417 * t392;
t575 = t414 * t368;
t557 = t267 * t412 - t320;
t636 = t392 * t557;
t532 = t207 * t414 + t270 * t409;
t774 = t368 * t532;
t478 = t361 * (t398 * (t380 * t586 + t412 * t575) + t569) + t408 * ((t222 * t368 + t792) * t398 + t786) - t416 * ((t153 * t380 - t774) * t398 + t636);
t685 = t362 * t411;
t271 = t339 * t442 - t445 * t685;
t212 = t271 * t417 + t553;
t274 = t339 * t445 + t442 * t685;
t260 = t274 * t414;
t157 = -t212 * t409 + t260;
t581 = t409 * t442;
t226 = t352 * t581 - t414 * t513;
t369 = sin(t421);
t399 = cos(t439);
t568 = t417 * t393;
t574 = t414 * t369;
t556 = t271 * t412 - t320;
t631 = t393 * t556;
t531 = t212 * t414 + t274 * t409;
t773 = t369 * t531;
t477 = t362 * (t399 * (t381 * t586 + t412 * t574) + t568) + t408 * ((t226 * t369 + t791) * t399 + t785) - t416 * ((t157 * t381 - t773) * t399 + t631);
t684 = t363 * t411;
t272 = t339 * t443 - t446 * t684;
t214 = t272 * t417 + t553;
t275 = t339 * t446 + t443 * t684;
t262 = t275 * t414;
t158 = -t214 * t409 + t262;
t580 = t409 * t443;
t227 = t352 * t580 - t414 * t512;
t370 = sin(t422);
t400 = cos(t440);
t567 = t417 * t394;
t573 = t414 * t370;
t555 = t272 * t412 - t320;
t626 = t394 * t555;
t530 = t214 * t414 + t275 * t409;
t772 = t370 * t530;
t476 = t363 * (t400 * (t382 * t586 + t412 * t573) + t567) + t408 * ((t227 * t370 + t790) * t400 + t784) - t416 * ((t158 * t382 - t772) * t400 + t626);
t683 = t364 * t411;
t273 = t339 * t444 - t447 * t683;
t216 = t273 * t417 + t553;
t276 = t339 * t447 + t444 * t683;
t264 = t276 * t414;
t159 = -t216 * t409 + t264;
t579 = t409 * t444;
t228 = t352 * t579 - t414 * t511;
t371 = sin(t423);
t401 = cos(t441);
t566 = t417 * t395;
t572 = t414 * t371;
t554 = t273 * t412 - t320;
t621 = t395 * t554;
t529 = t216 * t414 + t276 * t409;
t771 = t371 * t529;
t475 = t364 * (t401 * (t383 * t586 + t412 * t572) + t566) + t408 * ((t228 * t371 + t789) * t401 + t783) - t416 * ((t159 * t383 - t771) * t401 + t621);
t121 = 0.1e1 / (-t408 * t765 + t416 * t559 - t353);
t122 = 0.1e1 / (-t408 * t766 + t416 * t558 - t354);
t123 = 0.1e1 / (-t408 * t767 + t416 * t557 - t355);
t130 = 0.1e1 / (-t408 * t768 + t416 * t556 - t356);
t131 = 0.1e1 / (-t408 * t769 + t416 * t555 - t357);
t132 = 0.1e1 / (-t408 * t770 + t416 * t554 - t358);
t743 = t268 * t390;
t742 = t269 * t391;
t741 = t270 * t392;
t740 = t274 * t393;
t739 = t275 * t394;
t738 = t276 * t395;
t448 = xP(6);
t402 = sin(t448);
t405 = cos(t448);
t457 = koppelP(6,2);
t463 = koppelP(6,1);
t340 = -t402 * t457 + t405 * t463;
t449 = xP(5);
t403 = sin(t449);
t406 = cos(t449);
t451 = koppelP(6,3);
t289 = t340 * t403 - t406 * t451;
t725 = t289 * t390;
t724 = t289 * t396;
t458 = koppelP(5,2);
t464 = koppelP(5,1);
t341 = -t402 * t458 + t405 * t464;
t452 = koppelP(5,3);
t290 = t341 * t403 - t406 * t452;
t723 = t290 * t391;
t722 = t290 * t397;
t459 = koppelP(4,2);
t465 = koppelP(4,1);
t342 = -t402 * t459 + t405 * t465;
t453 = koppelP(4,3);
t291 = t342 * t403 - t406 * t453;
t721 = t291 * t392;
t720 = t291 * t398;
t460 = koppelP(3,2);
t466 = koppelP(3,1);
t343 = -t402 * t460 + t405 * t466;
t454 = koppelP(3,3);
t292 = t343 * t403 - t406 * t454;
t719 = t292 * t393;
t718 = t292 * t399;
t461 = koppelP(2,2);
t467 = koppelP(2,1);
t344 = -t402 * t461 + t405 * t467;
t455 = koppelP(2,3);
t293 = t344 * t403 - t406 * t455;
t717 = t293 * t394;
t716 = t293 * t400;
t462 = koppelP(1,2);
t468 = koppelP(1,1);
t345 = -t402 * t462 + t405 * t468;
t456 = koppelP(1,3);
t294 = t345 * t403 - t406 * t456;
t715 = t294 * t395;
t714 = t294 * t401;
t713 = t340 * t406;
t712 = t341 * t406;
t711 = t342 * t406;
t710 = t343 * t406;
t709 = t344 * t406;
t708 = t345 * t406;
t346 = t402 * t463 + t405 * t457;
t707 = t346 * t390;
t706 = t346 * t396;
t347 = t402 * t464 + t405 * t458;
t705 = t347 * t391;
t704 = t347 * t397;
t348 = t402 * t465 + t405 * t459;
t703 = t348 * t392;
t702 = t348 * t398;
t349 = t402 * t466 + t405 * t460;
t701 = t349 * t393;
t700 = t349 * t399;
t350 = t402 * t467 + t405 * t461;
t699 = t350 * t394;
t698 = t350 * t400;
t351 = t402 * t468 + t405 * t462;
t697 = t351 * t395;
t696 = t351 * t401;
t682 = t366 * t412;
t681 = t367 * t412;
t680 = t368 * t412;
t679 = t369 * t412;
t678 = t370 * t412;
t677 = t371 * t412;
t424 = legFrame(6,1);
t372 = sin(t424);
t676 = t372 * t396;
t675 = t372 * t412;
t425 = legFrame(5,1);
t373 = sin(t425);
t674 = t373 * t397;
t673 = t373 * t412;
t426 = legFrame(4,1);
t374 = sin(t426);
t672 = t374 * t398;
t671 = t374 * t412;
t427 = legFrame(3,1);
t375 = sin(t427);
t670 = t375 * t399;
t669 = t375 * t412;
t428 = legFrame(2,1);
t376 = sin(t428);
t668 = t376 * t400;
t667 = t376 * t412;
t429 = legFrame(1,1);
t377 = sin(t429);
t666 = t377 * t401;
t665 = t377 * t412;
t664 = t378 * t412;
t663 = t379 * t412;
t662 = t380 * t412;
t661 = t381 * t412;
t660 = t382 * t412;
t659 = t383 * t412;
t384 = cos(t424);
t658 = t384 * t396;
t657 = t384 * t412;
t385 = cos(t425);
t656 = t385 * t397;
t655 = t385 * t412;
t386 = cos(t426);
t654 = t386 * t398;
t653 = t386 * t412;
t387 = cos(t427);
t652 = t387 * t399;
t651 = t387 * t412;
t388 = cos(t428);
t650 = t388 * t400;
t649 = t388 * t412;
t389 = cos(t429);
t648 = t389 * t401;
t647 = t389 * t412;
t645 = t390 * t409;
t644 = t390 * t412;
t643 = t390 * t414;
t642 = t390 * t430;
t640 = t391 * t409;
t639 = t391 * t412;
t638 = t391 * t414;
t637 = t391 * t431;
t635 = t392 * t409;
t634 = t392 * t412;
t633 = t392 * t414;
t632 = t392 * t432;
t630 = t393 * t409;
t629 = t393 * t412;
t628 = t393 * t414;
t627 = t393 * t442;
t625 = t394 * t409;
t624 = t394 * t412;
t623 = t394 * t414;
t622 = t394 * t443;
t620 = t395 * t409;
t619 = t395 * t412;
t618 = t395 * t414;
t617 = t395 * t444;
t616 = t396 * t417;
t615 = t397 * t417;
t614 = t398 * t417;
t613 = t399 * t417;
t612 = t400 * t417;
t611 = t401 * t417;
t450 = xP(4);
t404 = sin(t450);
t610 = t404 * t457;
t609 = t404 * t458;
t608 = t404 * t459;
t607 = t404 * t460;
t606 = t404 * t461;
t605 = t404 * t462;
t604 = t404 * t463;
t603 = t404 * t464;
t602 = t404 * t465;
t601 = t404 * t466;
t600 = t404 * t467;
t599 = t404 * t468;
t407 = cos(t450);
t598 = t407 * t457;
t597 = t407 * t458;
t596 = t407 * t459;
t595 = t407 * t460;
t594 = t407 * t461;
t593 = t407 * t462;
t592 = t407 * t463;
t591 = t407 * t464;
t590 = t407 * t465;
t589 = t407 * t466;
t588 = t407 * t467;
t587 = t407 * t468;
t585 = t409 * t417;
t578 = t412 * t414;
t546 = t359 * t644;
t545 = t360 * t639;
t544 = t361 * t634;
t543 = t362 * t629;
t542 = t363 * t624;
t541 = t364 * t619;
t540 = t390 * t565;
t539 = t391 * t564;
t538 = t392 * t563;
t537 = t393 * t562;
t536 = t394 * t561;
t535 = t395 * t560;
t327 = t409 * t378 + t577;
t328 = t409 * t379 + t576;
t329 = t409 * t380 + t575;
t330 = t409 * t381 + t574;
t331 = t409 * t382 + t573;
t332 = t409 * t383 + t572;
t504 = t203 * t372;
t503 = t203 * t384;
t502 = t205 * t373;
t501 = t205 * t385;
t500 = t207 * t374;
t499 = t207 * t386;
t498 = t212 * t375;
t497 = t212 * t387;
t496 = t214 * t376;
t495 = t214 * t388;
t494 = t216 * t377;
t493 = t216 * t389;
t109 = t268 * t384 - t390 * t504;
t125 = t372 * t743 + t503;
t163 = -t372 * t546 + (-t372 * t540 - t384 * t430) * t352;
t176 = -t359 * t657 + (t372 * t642 - t384 * t565) * t352;
t492 = (t765 * t676 - t366 * (t163 * t414 + t176 * t409) + t378 * (-t163 * t409 + t176 * t414)) * t408 + (-t559 * t676 + (t109 * t414 - t125 * t409) * t366 + t378 * (t109 * t409 + t125 * t414)) * t416 + ((-t372 * t645 + t384 * t414) * t664 - (t372 * t643 + t384 * t409) * t682 + t372 * t616) * t359;
t110 = t268 * t372 + t390 * t503;
t124 = t384 * t743 - t504;
t164 = -t384 * t546 + (t372 * t430 - t384 * t540) * t352;
t175 = -t359 * t675 + (-t372 * t565 - t384 * t642) * t352;
t491 = (t765 * t658 - t366 * (t164 * t414 - t175 * t409) - t378 * (t164 * t409 + t175 * t414)) * t408 + (-t559 * t658 - (t110 * t414 + t124 * t409) * t366 + (-t110 * t409 + t124 * t414) * t378) * t416 + t359 * (-(t372 * t414 + t384 * t645) * t664 - (-t372 * t409 + t384 * t643) * t682 + t384 * t616);
t111 = t269 * t385 - t391 * t502;
t127 = t373 * t742 + t501;
t165 = -t373 * t545 + (-t373 * t539 - t385 * t431) * t352;
t178 = -t360 * t655 + (t373 * t637 - t385 * t564) * t352;
t490 = (t766 * t674 - t367 * (t165 * t414 + t178 * t409) + t379 * (-t165 * t409 + t178 * t414)) * t408 + (-t558 * t674 + (t111 * t414 - t127 * t409) * t367 + t379 * (t111 * t409 + t127 * t414)) * t416 + ((-t373 * t640 + t385 * t414) * t663 - (t373 * t638 + t385 * t409) * t681 + t373 * t615) * t360;
t112 = t269 * t373 + t391 * t501;
t126 = t385 * t742 - t502;
t166 = -t385 * t545 + (t373 * t431 - t385 * t539) * t352;
t177 = -t360 * t673 + (-t373 * t564 - t385 * t637) * t352;
t489 = (t766 * t656 - t367 * (t166 * t414 - t177 * t409) - t379 * (t166 * t409 + t177 * t414)) * t408 + (-t558 * t656 - (t112 * t414 + t126 * t409) * t367 + t379 * (-t112 * t409 + t126 * t414)) * t416 + t360 * (-(t373 * t414 + t385 * t640) * t663 - (-t373 * t409 + t385 * t638) * t681 + t385 * t615);
t113 = t270 * t386 - t392 * t500;
t129 = t374 * t741 + t499;
t167 = -t374 * t544 + (-t374 * t538 - t386 * t432) * t352;
t180 = -t361 * t653 + (t374 * t632 - t386 * t563) * t352;
t488 = (t767 * t672 - t368 * (t167 * t414 + t180 * t409) + t380 * (-t167 * t409 + t180 * t414)) * t408 + (-t557 * t672 + (t113 * t414 - t129 * t409) * t368 + t380 * (t113 * t409 + t129 * t414)) * t416 + ((-t374 * t635 + t386 * t414) * t662 - (t374 * t633 + t386 * t409) * t680 + t374 * t614) * t361;
t114 = t270 * t374 + t392 * t499;
t128 = t386 * t741 - t500;
t168 = -t386 * t544 + (t374 * t432 - t386 * t538) * t352;
t179 = -t361 * t671 + (-t374 * t563 - t386 * t632) * t352;
t487 = (t767 * t654 - t368 * (t168 * t414 - t179 * t409) - t380 * (t168 * t409 + t179 * t414)) * t408 + (-t557 * t654 - (t114 * t414 + t128 * t409) * t368 + t380 * (-t114 * t409 + t128 * t414)) * t416 + t361 * (-(t374 * t414 + t386 * t635) * t662 - (-t374 * t409 + t386 * t633) * t680 + t386 * t614);
t115 = t274 * t387 - t393 * t498;
t134 = t375 * t740 + t497;
t169 = -t375 * t543 + (-t375 * t537 - t387 * t442) * t352;
t182 = -t362 * t651 + (t375 * t627 - t387 * t562) * t352;
t486 = (t768 * t670 - t369 * (t169 * t414 + t182 * t409) + t381 * (-t169 * t409 + t182 * t414)) * t408 + (-t556 * t670 + t369 * (t115 * t414 - t134 * t409) + t381 * (t115 * t409 + t134 * t414)) * t416 + ((-t375 * t630 + t387 * t414) * t661 - (t375 * t628 + t387 * t409) * t679 + t375 * t613) * t362;
t116 = t274 * t375 + t393 * t497;
t133 = t387 * t740 - t498;
t170 = -t387 * t543 + (t375 * t442 - t387 * t537) * t352;
t181 = -t362 * t669 + (-t375 * t562 - t387 * t627) * t352;
t485 = (t768 * t652 - t369 * (t170 * t414 - t181 * t409) - t381 * (t170 * t409 + t181 * t414)) * t408 + (-t556 * t652 - t369 * (t116 * t414 + t133 * t409) + t381 * (-t116 * t409 + t133 * t414)) * t416 + t362 * (-(t375 * t414 + t387 * t630) * t661 - (-t375 * t409 + t387 * t628) * t679 + t387 * t613);
t118 = t275 * t376 + t394 * t495;
t135 = t388 * t739 - t496;
t172 = -t388 * t542 + (t376 * t443 - t388 * t536) * t352;
t183 = -t363 * t667 + (-t376 * t561 - t388 * t622) * t352;
t484 = (t769 * t650 - t370 * (t172 * t414 - t183 * t409) - t382 * (t172 * t409 + t183 * t414)) * t408 + (-t555 * t650 - t370 * (t118 * t414 + t135 * t409) + t382 * (-t118 * t409 + t135 * t414)) * t416 + t363 * (-(t376 * t414 + t388 * t625) * t660 - (-t376 * t409 + t388 * t623) * t678 + t388 * t612);
t117 = t275 * t388 - t394 * t496;
t136 = t376 * t739 + t495;
t171 = -t376 * t542 + (-t376 * t536 - t388 * t443) * t352;
t184 = -t363 * t649 + (t376 * t622 - t388 * t561) * t352;
t483 = ((-t171 * t409 + t184 * t414) * t382 + t769 * t668 - t370 * (t171 * t414 + t184 * t409)) * t408 + (-t555 * t668 + t370 * (t117 * t414 - t136 * t409) + t382 * (t117 * t409 + t136 * t414)) * t416 + ((-t376 * t625 + t388 * t414) * t660 - (t376 * t623 + t388 * t409) * t678 + t376 * t612) * t363;
t120 = t276 * t377 + t395 * t493;
t137 = t389 * t738 - t494;
t174 = -t389 * t541 + (t377 * t444 - t389 * t535) * t352;
t185 = -t364 * t665 + (-t377 * t560 - t389 * t617) * t352;
t482 = (-(t174 * t409 + t185 * t414) * t383 + t770 * t648 - t371 * (t174 * t414 - t185 * t409)) * t408 + (-t554 * t648 - t371 * (t120 * t414 + t137 * t409) + t383 * (-t120 * t409 + t137 * t414)) * t416 + t364 * (-(t377 * t414 + t389 * t620) * t659 - (-t377 * t409 + t389 * t618) * t677 + t389 * t611);
t119 = t276 * t389 - t395 * t494;
t138 = t377 * t738 + t493;
t173 = -t377 * t541 + (-t377 * t535 - t389 * t444) * t352;
t186 = -t364 * t647 + (t377 * t617 - t389 * t560) * t352;
t481 = ((-t173 * t409 + t186 * t414) * t383 + t770 * t666 - t371 * (t173 * t414 + t186 * t409)) * t408 + (-t554 * t666 + t371 * (t119 * t414 - t138 * t409) + t383 * (t119 * t409 + t138 * t414)) * t416 + ((-t377 * t620 + t389 * t414) * t659 - (t377 * t618 + t389 * t409) * t677 + t377 * t611) * t364;
t474 = t406 * t480;
t473 = t406 * t479;
t472 = t406 * t478;
t471 = t406 * t477;
t470 = t406 * t476;
t469 = t406 * t475;
t338 = -t371 * t409 + t383 * t414;
t337 = -t370 * t409 + t382 * t414;
t336 = -t369 * t409 + t381 * t414;
t335 = -t368 * t409 + t380 * t414;
t334 = -t367 * t409 + t379 * t414;
t333 = -t366 * t409 + t378 * t414;
t295 = t409 * t553;
t246 = -t332 * t619 + t611;
t245 = -t331 * t624 + t612;
t244 = -t330 * t629 + t613;
t243 = -t329 * t634 + t614;
t242 = -t328 * t639 + t615;
t241 = -t327 * t644 + t616;
t198 = -t364 * t578 + (-t414 * t560 + t579) * t352;
t196 = -t363 * t578 + (-t414 * t561 + t580) * t352;
t194 = -t362 * t578 + (-t414 * t562 + t581) * t352;
t192 = -t361 * t578 + (-t414 * t563 + t582) * t352;
t190 = -t360 * t578 + (-t414 * t564 + t583) * t352;
t188 = -t359 * t578 + (-t414 * t565 + t584) * t352;
t149 = -t273 * t585 + t264 - t295;
t147 = -t272 * t585 + t262 - t295;
t145 = -t271 * t585 + t260 - t295;
t143 = -t267 * t585 + t255 - t295;
t141 = -t266 * t585 + t253 - t295;
t139 = -t265 * t585 + t251 - t295;
t108 = t198 * t383 - t371 * t777;
t107 = t196 * t382 - t370 * t778;
t106 = t194 * t381 - t369 * t779;
t105 = t192 * t380 - t368 * t780;
t104 = t190 * t379 - t367 * t781;
t103 = t188 * t378 - t366 * t782;
t78 = -t351 * t611 + ((t294 * t414 + t351 * t620) * t383 + (-t294 * t409 + t351 * t618) * t371) * t412;
t77 = -t350 * t612 + ((t293 * t414 + t350 * t625) * t382 + (-t293 * t409 + t350 * t623) * t370) * t412;
t76 = -t349 * t613 + ((t292 * t414 + t349 * t630) * t381 + (-t292 * t409 + t349 * t628) * t369) * t412;
t75 = -t348 * t614 + ((t291 * t414 + t348 * t635) * t380 + (-t291 * t409 + t348 * t633) * t368) * t412;
t74 = -t347 * t615 + ((t290 * t414 + t347 * t640) * t379 + (-t290 * t409 + t347 * t638) * t367) * t412;
t73 = -t346 * t616 + ((t289 * t414 + t346 * t645) * t378 + (-t289 * t409 + t346 * t643) * t366) * t412;
t72 = t294 * t611 + ((-t294 * t620 + t351 * t414) * t383 - (t294 * t618 + t351 * t409) * t371) * t412;
t71 = t293 * t612 + ((-t293 * t625 + t350 * t414) * t382 - (t293 * t623 + t350 * t409) * t370) * t412;
t70 = t292 * t613 + ((-t292 * t630 + t349 * t414) * t381 - (t292 * t628 + t349 * t409) * t369) * t412;
t69 = t291 * t614 + ((-t291 * t635 + t348 * t414) * t380 - (t291 * t633 + t348 * t409) * t368) * t412;
t68 = t290 * t615 + ((-t290 * t640 + t347 * t414) * t379 - (t290 * t638 + t347 * t409) * t367) * t412;
t67 = t289 * t616 + ((-t289 * t645 + t346 * t414) * t378 - (t289 * t643 + t346 * t409) * t366) * t412;
t66 = -t770 * t401 + (t198 * t371 + t789) * t395;
t65 = -t769 * t400 + (t196 * t370 + t790) * t394;
t64 = -t768 * t399 + (t194 * t369 + t791) * t393;
t63 = -t767 * t398 + (t192 * t368 + t792) * t392;
t62 = -t766 * t397 + (t190 * t367 + t793) * t391;
t61 = -t765 * t396 + (t188 * t366 + t794) * t390;
t60 = t149 * t371 + t383 * t529;
t59 = t147 * t370 + t382 * t530;
t58 = t145 * t369 + t381 * t531;
t57 = t143 * t368 + t380 * t532;
t56 = t141 * t367 + t379 * t533;
t55 = t139 * t366 + t378 * t534;
t30 = -t554 * t401 + (t149 * t383 - t771) * t395;
t29 = -t555 * t400 + (t147 * t382 - t772) * t394;
t28 = -t556 * t399 + (t145 * t381 - t773) * t393;
t27 = -t557 * t398 + (t143 * t380 - t774) * t392;
t26 = -t558 * t397 + (t141 * t379 - t775) * t391;
t25 = -t559 * t396 + (t139 * t378 - t776) * t390;
t24 = (t228 * t294 + t697 * t777) * t383 + (t228 * t697 - t294 * t777) * t371 - t770 * t696;
t23 = (t227 * t293 + t699 * t778) * t382 + (t227 * t699 - t293 * t778) * t370 - t769 * t698;
t22 = (t226 * t292 + t701 * t779) * t381 + (t226 * t701 - t292 * t779) * t369 - t768 * t700;
t21 = (t222 * t291 + t703 * t780) * t380 + (t222 * t703 - t291 * t780) * t368 - t767 * t702;
t20 = (t221 * t290 + t705 * t781) * t379 + (t221 * t705 - t290 * t781) * t367 - t766 * t704;
t19 = (t220 * t289 + t707 * t782) * t378 + (t220 * t707 - t289 * t782) * t366 - t765 * t706;
t18 = (-t228 * t351 + t715 * t777) * t383 + (t228 * t715 + t351 * t777) * t371 - t770 * t714;
t17 = (-t227 * t350 + t717 * t778) * t382 + (t227 * t717 + t350 * t778) * t370 - t769 * t716;
t16 = (-t226 * t349 + t719 * t779) * t381 + (t226 * t719 + t349 * t779) * t369 - t768 * t718;
t15 = (-t222 * t348 + t721 * t780) * t380 + (t222 * t721 + t348 * t780) * t368 - t767 * t720;
t14 = (-t221 * t347 + t723 * t781) * t379 + (t221 * t723 + t347 * t781) * t367 - t766 * t722;
t13 = (-t220 * t346 + t725 * t782) * t378 + (t220 * t725 + t346 * t782) * t366 - t765 * t724;
t12 = (-t159 * t697 + t294 * t529) * t383 + (t159 * t294 + t529 * t697) * t371 + t554 * t696;
t11 = (-t158 * t699 + t293 * t530) * t382 + (t158 * t293 + t530 * t699) * t370 + t555 * t698;
t10 = (-t157 * t701 + t292 * t531) * t381 + (t157 * t292 + t531 * t701) * t369 + t556 * t700;
t9 = (-t153 * t703 + t291 * t532) * t380 + (t153 * t291 + t532 * t703) * t368 + t557 * t702;
t8 = (-t152 * t705 + t290 * t533) * t379 + (t152 * t290 + t533 * t705) * t367 + t558 * t704;
t7 = (-t151 * t707 + t289 * t534) * t378 + (t151 * t289 + t534 * t707) * t366 + t559 * t706;
t6 = (t159 * t715 + t351 * t529) * t383 + (t159 * t351 - t529 * t715) * t371 - t554 * t714;
t5 = (t158 * t717 + t350 * t530) * t382 + (t158 * t350 - t530 * t717) * t370 - t555 * t716;
t4 = (t157 * t719 + t349 * t531) * t381 + (t157 * t349 - t531 * t719) * t369 - t556 * t718;
t3 = (t153 * t721 + t348 * t532) * t380 + (t153 * t348 - t532 * t721) * t368 - t557 * t720;
t2 = (t152 * t723 + t347 * t533) * t379 + (t152 * t347 - t533 * t723) * t367 - t558 * t722;
t1 = (t151 * t725 + t346 * t534) * t378 + (t151 * t346 - t534 * t725) * t366 - t559 * t724;
t31 = [(((t332 * t511 + t338 * t689) * t401 - t783) * t408 + ((-t216 * t332 + t276 * t338) * t401 + t621) * t416 - t364 * (t332 * t401 * t412 + t566)) * t132, ((t108 * t389 - t377 * t66) * t408 + (t30 * t377 + t389 * t60) * t416 + (t246 * t377 + t338 * t647) * t364) * t132, ((t108 * t377 + t389 * t66) * t408 + (-t30 * t389 + t377 * t60) * t416 - t364 * (t246 * t389 - t338 * t665)) * t132, (((t18 * t404 + t24 * t407) * t389 - t377 * (t18 * t407 - t24 * t404)) * t408 + ((t12 * t407 - t404 * t6) * t389 + (t12 * t404 + t407 * t6) * t377) * t416 + ((-t404 * t72 + t407 * t78) * t389 + t377 * (t404 * t78 + t407 * t72)) * t364) * t132, (t482 * t708 + t475 * ((t403 * t587 - t605) * t405 - t402 * (t403 * t593 + t599)) + (t403 * t482 - t407 * t469) * t456) * t132, (t481 * t708 + t475 * ((t403 * t599 + t593) * t405 + t402 * (-t403 * t605 + t587)) + (t403 * t481 - t404 * t469) * t456) * t132; (((t331 * t512 + t337 * t690) * t400 - t784) * t408 + ((-t214 * t331 + t275 * t337) * t400 + t626) * t416 - t363 * (t331 * t400 * t412 + t567)) * t131, ((t107 * t388 - t376 * t65) * t408 + (t29 * t376 + t388 * t59) * t416 + (t245 * t376 + t337 * t649) * t363) * t131, ((t107 * t376 + t388 * t65) * t408 + (-t29 * t388 + t376 * t59) * t416 - t363 * (t245 * t388 - t337 * t667)) * t131, (((t17 * t404 + t23 * t407) * t388 - (t17 * t407 - t23 * t404) * t376) * t408 + ((t11 * t407 - t404 * t5) * t388 + (t11 * t404 + t407 * t5) * t376) * t416 + ((-t404 * t71 + t407 * t77) * t388 + t376 * (t404 * t77 + t407 * t71)) * t363) * t131, (t484 * t709 + t476 * ((t403 * t588 - t606) * t405 - t402 * (t403 * t594 + t600)) + (t403 * t484 - t407 * t470) * t455) * t131, (t483 * t709 + t476 * ((t403 * t600 + t594) * t405 + t402 * (-t403 * t606 + t588)) + (t403 * t483 - t404 * t470) * t455) * t131; (((t330 * t513 + t336 * t691) * t399 - t785) * t408 + ((-t212 * t330 + t274 * t336) * t399 + t631) * t416 - t362 * (t330 * t399 * t412 + t568)) * t130, ((t106 * t387 - t375 * t64) * t408 + (t28 * t375 + t387 * t58) * t416 + (t244 * t375 + t336 * t651) * t362) * t130, ((t106 * t375 + t387 * t64) * t408 + (-t28 * t387 + t375 * t58) * t416 - t362 * (t244 * t387 - t336 * t669)) * t130, (((t16 * t404 + t22 * t407) * t387 - (t16 * t407 - t22 * t404) * t375) * t408 + ((t10 * t407 - t4 * t404) * t387 + (t10 * t404 + t4 * t407) * t375) * t416 + ((-t404 * t70 + t407 * t76) * t387 + t375 * (t404 * t76 + t407 * t70)) * t362) * t130, (t485 * t710 + t477 * ((t403 * t589 - t607) * t405 - t402 * (t403 * t595 + t601)) + (t403 * t485 - t407 * t471) * t454) * t130, (t486 * t710 + t477 * ((t403 * t601 + t595) * t405 + t402 * (-t403 * t607 + t589)) + (t403 * t486 - t404 * t471) * t454) * t130; (((t329 * t514 + t335 * t692) * t398 - t786) * t408 + ((-t207 * t329 + t270 * t335) * t398 + t636) * t416 - t361 * (t329 * t398 * t412 + t569)) * t123, ((t105 * t386 - t374 * t63) * t408 + (t27 * t374 + t386 * t57) * t416 + (t243 * t374 + t335 * t653) * t361) * t123, ((t105 * t374 + t386 * t63) * t408 + (-t27 * t386 + t374 * t57) * t416 - t361 * (t243 * t386 - t335 * t671)) * t123, (((t15 * t404 + t21 * t407) * t386 - t374 * (t15 * t407 - t21 * t404)) * t408 + ((-t3 * t404 + t407 * t9) * t386 + (t3 * t407 + t404 * t9) * t374) * t416 + ((-t404 * t69 + t407 * t75) * t386 + t374 * (t404 * t75 + t407 * t69)) * t361) * t123, (t487 * t711 + t478 * ((t403 * t590 - t608) * t405 - t402 * (t403 * t596 + t602)) + (t403 * t487 - t407 * t472) * t453) * t123, (t488 * t711 + t478 * ((t403 * t602 + t596) * t405 + t402 * (-t403 * t608 + t590)) + (t403 * t488 - t404 * t472) * t453) * t123; (((t328 * t515 + t334 * t693) * t397 - t787) * t408 + ((-t205 * t328 + t269 * t334) * t397 + t641) * t416 - t360 * (t328 * t397 * t412 + t570)) * t122, ((t104 * t385 - t373 * t62) * t408 + (t26 * t373 + t385 * t56) * t416 + (t242 * t373 + t334 * t655) * t360) * t122, ((t104 * t373 + t385 * t62) * t408 + (-t26 * t385 + t373 * t56) * t416 - t360 * (t242 * t385 - t334 * t673)) * t122, (((t14 * t404 + t20 * t407) * t385 - t373 * (t14 * t407 - t20 * t404)) * t408 + ((-t2 * t404 + t407 * t8) * t385 + (t2 * t407 + t404 * t8) * t373) * t416 + ((-t404 * t68 + t407 * t74) * t385 + t373 * (t404 * t74 + t407 * t68)) * t360) * t122, (t489 * t712 + t479 * ((t403 * t591 - t609) * t405 - t402 * (t403 * t597 + t603)) + (t403 * t489 - t407 * t473) * t452) * t122, (t490 * t712 + t479 * ((t403 * t603 + t597) * t405 + t402 * (-t403 * t609 + t591)) + (t403 * t490 - t404 * t473) * t452) * t122; (((t327 * t516 + t333 * t694) * t396 - t788) * t408 + ((-t203 * t327 + t268 * t333) * t396 + t646) * t416 - t359 * (t327 * t396 * t412 + t571)) * t121, ((t103 * t384 - t372 * t61) * t408 + (t25 * t372 + t384 * t55) * t416 + (t241 * t372 + t333 * t657) * t359) * t121, ((t103 * t372 + t384 * t61) * t408 + (-t25 * t384 + t372 * t55) * t416 - t359 * (t241 * t384 - t333 * t675)) * t121, (((t13 * t404 + t19 * t407) * t384 - t372 * (t13 * t407 - t19 * t404)) * t408 + ((-t1 * t404 + t407 * t7) * t384 + (t1 * t407 + t404 * t7) * t372) * t416 + ((-t404 * t67 + t407 * t73) * t384 + t372 * (t404 * t73 + t407 * t67)) * t359) * t121, (t491 * t713 + t480 * ((t403 * t592 - t610) * t405 - t402 * (t403 * t598 + t604)) + (t403 * t491 - t407 * t474) * t451) * t121, (t492 * t713 + t480 * ((t403 * t604 + t598) * t405 + t402 * (-t403 * t610 + t592)) + (t403 * t492 - t404 * t474) * t451) * t121;];
Jinv  = t31;
