% Calculate vector of centrifugal and coriolis load on the joints for
% P6PRRRRR6V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% taucX [6x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2019-09-11 16:13
% Revision: 7993d029b5937b704dcf3fc7d8ae322038cdcbdd (2019-09-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1A0_coriolisvec_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2019-09-11 13:27:49
% EndTime: 2019-09-11 13:34:54
% DurationCPUTime: 445.10s
% Computational Cost: add. (1694884->2928), mult. (4496343->4603), div. (24420->48), fcn. (3670856->50), ass. (0->1717)
t4567 = xP(5);
t4498 = sin(t4567);
t4501 = cos(t4567);
t5524 = koppelP(6,3);
t4566 = xP(6);
t4497 = sin(t4566);
t4500 = cos(t4566);
t5530 = koppelP(6,2);
t5536 = koppelP(6,1);
t5612 = -t4497 * t5530 + t4500 * t5536;
t4177 = t4498 * t5524 + t5612 * t4501;
t4568 = xP(4);
t4499 = sin(t4568);
t4561 = xDP(5);
t5230 = t4499 * t4561;
t4502 = cos(t4568);
t4356 = t4497 * t5536 + t4500 * t5530;
t5238 = t4499 * t4356;
t5557 = -t4498 * t5612 + t4501 * t5524;
t4024 = t4502 * t5557 + t5238;
t4562 = xDP(4);
t5327 = t4024 * t4562;
t5641 = -t4177 * t5230 + t5327;
t5525 = koppelP(5,3);
t5531 = koppelP(5,2);
t5537 = koppelP(5,1);
t5611 = -t4497 * t5531 + t4500 * t5537;
t4178 = t4498 * t5525 + t5611 * t4501;
t4357 = t4497 * t5537 + t4500 * t5531;
t5237 = t4499 * t4357;
t5556 = -t4498 * t5611 + t4501 * t5525;
t4026 = t4502 * t5556 + t5237;
t5326 = t4026 * t4562;
t5640 = -t4178 * t5230 + t5326;
t5526 = koppelP(4,3);
t5532 = koppelP(4,2);
t5538 = koppelP(4,1);
t5610 = -t4497 * t5532 + t4500 * t5538;
t4179 = t4498 * t5526 + t5610 * t4501;
t4358 = t4497 * t5538 + t4500 * t5532;
t5236 = t4499 * t4358;
t5555 = -t4498 * t5610 + t4501 * t5526;
t4028 = t4502 * t5555 + t5236;
t5325 = t4028 * t4562;
t5639 = -t4179 * t5230 + t5325;
t5527 = koppelP(3,3);
t5533 = koppelP(3,2);
t5539 = koppelP(3,1);
t5609 = -t4497 * t5533 + t4500 * t5539;
t4180 = t4498 * t5527 + t5609 * t4501;
t4359 = t4497 * t5539 + t4500 * t5533;
t5235 = t4499 * t4359;
t5554 = -t4498 * t5609 + t4501 * t5527;
t4030 = t4502 * t5554 + t5235;
t5324 = t4030 * t4562;
t5638 = -t4180 * t5230 + t5324;
t5528 = koppelP(2,3);
t5534 = koppelP(2,2);
t5540 = koppelP(2,1);
t5608 = -t4497 * t5534 + t4500 * t5540;
t4181 = t4498 * t5528 + t5608 * t4501;
t4360 = t4497 * t5540 + t4500 * t5534;
t5234 = t4499 * t4360;
t5553 = -t4498 * t5608 + t4501 * t5528;
t4032 = t4502 * t5553 + t5234;
t5323 = t4032 * t4562;
t5637 = -t4181 * t5230 + t5323;
t5529 = koppelP(1,3);
t5535 = koppelP(1,2);
t5541 = koppelP(1,1);
t5607 = -t4497 * t5535 + t4500 * t5541;
t4182 = t4498 * t5529 + t5607 * t4501;
t4361 = t4497 * t5541 + t4500 * t5535;
t5233 = t4499 * t4361;
t5552 = -t4498 * t5607 + t4501 * t5529;
t4034 = t4502 * t5552 + t5233;
t5322 = t4034 * t4562;
t5636 = -t4182 * t5230 + t5322;
t4524 = cos(pkin(5));
t4505 = t4524 ^ 2;
t5510 = t4505 - 0.1e1;
t4523 = cos(pkin(6));
t4457 = t4523 * pkin(9);
t4446 = t4457 + pkin(8);
t4541 = cos(qJ(2,6));
t5263 = t4446 * t4541;
t4543 = cos(qJ(2,5));
t5262 = t4446 * t4543;
t4545 = cos(qJ(2,4));
t5261 = t4446 * t4545;
t4554 = cos(qJ(2,3));
t5257 = t4446 * t4554;
t4556 = cos(qJ(2,2));
t5256 = t4446 * t4556;
t4558 = cos(qJ(2,1));
t5255 = t4446 * t4558;
t4540 = cos(qJ(3,6));
t4506 = t4540 ^ 2;
t4519 = sin(pkin(6));
t5180 = t4524 * t4541;
t4924 = t4519 * t5180;
t4823 = pkin(9) * t4924;
t4762 = pkin(3) * t4823;
t4525 = cos(pkin(4));
t5480 = pkin(3) * t4525;
t4439 = t4519 * t5480;
t4429 = pkin(9) * t4439;
t4834 = t4505 * t4439;
t5544 = 0.2e1 * pkin(9);
t5110 = t4834 * t5544 - 0.2e1 * t4429;
t4575 = pkin(3) ^ 2;
t4573 = pkin(9) ^ 2;
t4503 = t4523 ^ 2;
t5218 = t4503 * t4573;
t4863 = -t4573 + t5218;
t4427 = t4575 + t4863;
t4535 = sin(qJ(2,6));
t5156 = t4535 * t4427;
t4520 = sin(pkin(5));
t4521 = sin(pkin(4));
t5199 = t4520 * t4521;
t3971 = ((-0.2e1 * t4762 + t5156) * t5199 + t5110) * t4506;
t4456 = t4519 * pkin(9);
t5025 = t4521 * t4456;
t4764 = 0.2e1 * t4520 * t5025;
t4727 = pkin(3) * t4764;
t4336 = t4535 * t4727;
t5198 = t4520 * t4524;
t4440 = pkin(3) * t5198;
t4534 = sin(qJ(3,6));
t4663 = pkin(9) * (t4439 - t4834);
t4942 = t4427 * t5180;
t4784 = t4534 * t4942;
t4724 = t4520 * t4784;
t4362 = t4446 * t4440;
t4453 = pkin(2) * t4456;
t4883 = t4525 * t4453;
t4726 = t4525 * t4362 - t4883;
t5251 = (t4523 + 0.1e1) * (t4523 - 0.1e1);
t5028 = pkin(9) * t5251;
t4831 = t4520 * t5028;
t4733 = t4535 * t4831;
t4371 = t4525 * t4427;
t4737 = t5510 * t4371;
t5196 = t4520 * t4535;
t4264 = pkin(2) * t5196 - t5263;
t4743 = t4505 * t5263 + t4264;
t4452 = pkin(2) * t5480;
t5026 = t4520 * t4456;
t4824 = t4524 * t5026;
t4734 = t4446 * t4824;
t5111 = t4525 * t4734 + t4452;
t3808 = 0.1e1 / (t3971 + ((t4336 - t4737) * t4534 + t4726) * t4540 + t5111 * t4534 + t4663 + ((pkin(3) * t4743 + t4724) * t4540 + (-t4733 + (t4440 * t4541 + t4534 * t4743) * t4519) * pkin(9)) * t4521);
t4528 = legFrame(6,3);
t4469 = sin(t4528);
t4475 = cos(t4528);
t4518 = sin(pkin(10));
t4522 = cos(pkin(10));
t4270 = t4469 * t4522 + t4475 * t4518;
t4276 = -t4469 * t4518 + t4475 * t4522;
t5170 = t4525 * t4535;
t4043 = -t4270 * t5170 + t4276 * t4541;
t5167 = t4525 * t4541;
t4682 = (t4270 * t5167 + t4276 * t4535) * t4524 - t4270 * t5199;
t3845 = (pkin(3) * t4682 - t4043 * t4456) * t4540 + t4534 * (pkin(3) * t4043 + t4456 * t4682);
t4044 = t4270 * t4541 + t4276 * t5170;
t4681 = (-t4270 * t4535 + t4276 * t5167) * t4524 - t4276 * t5199;
t3846 = (pkin(3) * t4681 + t4044 * t4456) * t4540 + t4534 * (-pkin(3) * t4044 + t4456 * t4681);
t4564 = xDP(1);
t4560 = xDP(6);
t5226 = t4501 * t4560;
t5601 = t4356 * t4502 - t4499 * t5557;
t3859 = t4564 + (t4024 * t4502 - t4499 * t5601) * t4561 + (-t4024 * t4499 - t4502 * t5601) * t5226;
t4563 = xDP(2);
t5227 = t4501 * t4502;
t3867 = t4563 + (-t4024 * t4498 + t4177 * t5227) * t4560 - t5641;
t3707 = (t3845 * t3867 + t3846 * t3859) * t3808;
t4238 = t4502 * t5226 + t5230;
t5220 = t4502 * t4561;
t4239 = -t4499 * t5226 + t5220;
t3889 = t4024 * t4239 - t4238 * t5601 + t4564;
t5240 = t4498 * t4560;
t4387 = t4562 + t5240;
t3926 = -t4024 * t4387 + t4177 * t4238 + t4563;
t3722 = (t3845 * t3926 + t3846 * t3889) * t3808;
t4833 = t4446 * t5026;
t3713 = t3722 * t4833;
t5000 = t4427 * t5510;
t4803 = t4534 * t5000;
t5106 = t4453 - t4362;
t4012 = (-t4803 - t5106) * t4525;
t5483 = pkin(3) * t4446;
t4891 = t5510 * t5483;
t5250 = (t4524 + 0.1e1) * (t4524 - 0.1e1);
t4707 = t4429 * t5250;
t4260 = 0.2e1 * t4707;
t4967 = (t4762 - t5156 / 0.2e1) * t5199;
t3985 = (t4260 - 0.2e1 * t4967) * t4506;
t5467 = pkin(9) * t4503;
t5011 = pkin(9) - t5467;
t5211 = t4519 * t4534;
t4363 = pkin(2) * t5211 + t5011;
t4225 = t4363 * t5196;
t4232 = t4534 * t4734;
t4487 = pkin(2) * t4534;
t4401 = t4487 + t4456;
t4999 = t4446 * t5510;
t4603 = (t4534 * t4999 + t4440) * t4541;
t5027 = t4505 * t4456;
t5465 = pkin(9) * t4521;
t4903 = (t4519 * t4603 + t4225) * t5465 + t3985 + (t4232 + (t4401 - t5027) * pkin(3)) * t4525;
t5024 = pkin(9) * t5211;
t4414 = pkin(2) + 0.2e1 * t5024;
t4911 = t4414 * t5196;
t4949 = t4427 * t5198;
t3839 = 0.1e1 / ((t4012 + t4521 * ((t4534 * t4949 + t4891) * t4541 + pkin(3) * t4911)) * t4540 + t4903);
t5183 = t4524 * t4534;
t5267 = t4446 * t4520;
t4257 = pkin(3) * t5183 - t5267;
t4415 = pkin(2) + t5024;
t4131 = t4257 * t4541 + t4415 * t4535;
t5479 = pkin(3) * t4535;
t4327 = t4823 - t5479;
t5210 = t4519 * t4535;
t5023 = pkin(9) * t5210;
t5303 = (pkin(3) * t4541 + t4524 * t5023) * t4525;
t5309 = (-t4257 * t4535 + t4415 * t4541) * t4525;
t3874 = (-t4270 * t5303 + t4276 * t4327) * t4540 - t4270 * t5309 - t4276 * t4131;
t3877 = (-t4270 * t4327 - t4276 * t5303) * t4540 - t4276 * t5309 + t4270 * t4131;
t3731 = (t3859 * t3877 + t3867 * t3874) * t3839;
t3764 = (t3874 * t3926 + t3877 * t3889) * t3839;
t3965 = t4521 * (t4724 + (t4541 * t4999 + t4911) * pkin(3));
t4428 = -t4575 + t4863;
t4431 = pkin(2) * t5024;
t5036 = pkin(3) * t5267;
t4609 = ((-t4428 + t4431) * t4524 - t4534 * t5036) * t3722;
t4934 = t4573 * t5251;
t4648 = (t4505 * t4934 - t4575) * t4525;
t4661 = -t4505 * t4863 + t4575;
t4763 = t4456 - t5027;
t4766 = t4524 * t4934;
t4935 = t4446 * t5250;
t4775 = t4541 * t4935;
t4778 = t4535 * t4935;
t4785 = t4371 * t5250;
t4882 = pkin(3) * t5023;
t4811 = 0.2e1 * t4882;
t4830 = t4541 * t5028;
t5096 = pkin(3) * t4456;
t4879 = t4541 * t5096;
t5042 = t4414 * t5479;
t5495 = pkin(3) * t3722;
t5099 = pkin(2) * t5495;
t5157 = t4534 * t4541;
t5158 = t4534 * t4540;
t4372 = t4534 * t4427;
t5575 = t5510 * t4372;
t5171 = t4525 * (t5106 + t5575);
t5184 = t4524 * t4525;
t5190 = t4521 * t4541;
t5274 = t4427 * t4541;
t5288 = t4363 * t4535;
t5341 = (-t4785 + (t4811 + t4942) * t5199) * t4506;
t5428 = t3764 * t4428;
t5502 = pkin(2) * t4524;
t5520 = -0.2e1 * t3764;
t5523 = 0.2e1 * t3722;
t5509 = 0.2e1 * t4505 - 0.2e1;
t5578 = t5509 * t4456;
t5621 = t4534 * t5578;
t3491 = ((((t3722 * t4811 + t3764 * t5274) * t4524 + t3764 * t4811 + t3722 * t5274) * t5199 - t3764 * t4785) * t4506 + (((t4541 * t5099 + (-(t3722 * t5156 + t4879 * t5520) * t4524 + t4879 * t5523 - t3764 * t5156) * t4534) * t4520 - t4778 * t5495) * t4521 - t4525 * (t3713 + pkin(3) * (t3722 * t5502 + t3764 * t5621))) * t4540 + ((-pkin(3) * t5210 - t4524 * t4830) * t4520 * t3764 + (-t4520 * t4830 + ((pkin(2) * t5157 - t4524 * t5479) * t4520 - t4534 * t4778) * t4519) * t3722) * t5465 - (t3764 * t4661 + t4609) * t4525) / (t3985 + (((t4784 + t5042) * t4520 + pkin(3) * t4775) * t4521 - t5171) * t4540 + ((pkin(3) * t4924 + t5288) * t4520 + t4775 * t5211) * t5465 + (t4232 + pkin(3) * (t4487 + t4763)) * t4525) * t3707 + ((-t4520 * t5190 + t5184) * t5428 + (t5341 + 0.2e1 * (-t4707 + t4967) * t5158 - (t4541 * t4766 + t4882) * t5199 + t4648) * t3722) / ((t3965 - t5171) * t4540 + t4903) * t3731;
t4384 = t4446 * t5480;
t4917 = t4521 * t5157;
t4166 = t4427 * t4917 + t4384;
t4124 = t4166 * t5198;
t4339 = t4525 * t4372;
t5034 = pkin(3) * t5190;
t4817 = t4446 * t5034;
t4142 = (-t4339 + t4817) * t4505;
t4691 = t4142 + t4339 - t4883;
t4698 = t4519 * (-pkin(8) * pkin(9) - t4523 * t4573);
t4174 = (t4446 * t4917 - t5480) * t5027;
t5266 = t4446 * t4534;
t4216 = t4525 * t5266 + t5034;
t4704 = t4216 * t4824 + t4452 * t4534 + t3971 + t4174;
t5476 = pkin(3) * t4540;
t3814 = 0.1e1 / ((t4124 + t4691) * t4540 + t4429 + (pkin(9) * t4225 + t4698 * t5157 + (t4911 - t5263) * t5476) * t4521 + t4704);
t4104 = pkin(2) * t4949 - t5483 * t5578;
t4379 = pkin(2) * t5028;
t4186 = t4428 * t5211 + t4379;
t4896 = -t5218 / 0.2e1 + t4573 / 0.2e1 + t4575 / 0.2e1;
t4240 = t4431 + t4896;
t4396 = pkin(2) * t4427;
t5482 = pkin(3) * t4520;
t4709 = 0.3e1 * (t4575 / 0.3e1 + t4863) * t5250 * t5482;
t5095 = pkin(8) * t4457;
t4574 = pkin(8) ^ 2;
t5104 = pkin(2) ^ 2 + t4574;
t4897 = 0.2e1 * t5095 + t5104;
t4718 = -0.2e1 * t5218 + 0.3e1 * t4573 + t4897;
t4381 = t4573 + t4897;
t4936 = (pkin(3) + t4446) * (-pkin(3) + t4446) * t4505;
t4736 = -t4381 + t4936;
t4504 = t4524 * t4505;
t4805 = 0.4e1 * t4504 - 0.4e1 * t4524;
t4835 = (-0.2e1 * t5095 - t4574 + t4575 + (t4503 - 0.2e1) * t4573) * t4505 * t5482;
t4864 = t5510 * (0.3e1 * t4575 + t4863);
t4893 = -0.2e1 * t4440;
t4997 = t5509 * t4506;
t5052 = -0.2e1 * t4396 * t4520;
t5514 = 0.2e1 * t4524;
t5105 = -0.2e1 * t4504 + t5514;
t5107 = (-0.2e1 * t5467 + t5544) * pkin(2);
t5268 = t4428 * t4520;
t5383 = t3814 * t4520;
t5560 = t5105 * t4427 * t4446;
t3500 = (((pkin(9) * t4186 - 0.2e1 * t4240 * t5476 - t4506 * t4396) * t5198 + (-t4540 * t4803 + (t4997 - t5510) * t5096) * t4446) * t3707 + (t4415 + t5476) * t3731 * t5268) * t3814 * t3764 + ((((-t4835 - (0.4e1 * t4431 + t4718) * t5482 + t5560 * t4534) * t4540 + (t4540 * t4709 + t5052) * t4506) * t3707 + (-t4104 * t4506 + (t4240 * t4893 - t5575 * t4446) * t4540) * t3731) * t3814 + ((t4186 * t4524 * t3731 - t3707 * t5107) * t5383 + ((t4506 * t4864 + t4736) * t4534 * t3707 * t5383 + ((t4506 * t4805 + t5105) * t3707 - t5510 * t3731) * t3814 * t5483) * t4519) * pkin(9)) * t3722;
t3755 = t3764 * t4833;
t4708 = t4524 * t4764;
t4735 = t4999 * t4456;
t5481 = pkin(3) * t4521;
t5100 = pkin(2) * t5481;
t4890 = t4520 * t5100;
t4892 = -0.2e1 * t5027;
t4894 = -0.2e1 * t5036;
t4933 = t4506 * t5250;
t5012 = 0.2e1 * t4453;
t5217 = t4505 * t4575;
t5501 = pkin(2) * t4540;
t5545 = 0.2e1 * pkin(2);
t3512 = t4525 * (-t3722 * t4427 * t4933 + (t3713 * t5514 + t3755 + (t3764 * t5502 + (t5545 - t5621) * t3722) * pkin(3)) * t4540 - t3722 * t4936 + ((t3722 * t4894 + t3764 * t4453) * t4534 - t5428) * t4524 + (t3722 * t5012 - t3764 * t5036) * t4534 + t3722 * t4381) / ((t4142 + t4124 + (t4336 + t4371) * t4534 + t4535 * t4890 - t4817) * t4540 + (-t4521 * t4733 + t4439 + (t4264 * t4521 * t4534 - t4525 * t5501) * t4519) * pkin(9) + t4704) * t3707 + ((((t3755 + t5099) * t4524 + t3713) * t4540 + t4609) * t4525 + (t5341 + (((-t4372 + t4453) * t5196 + t4541 * t4735) * t4521 + ((t4534 * t4892 + t4414) * t4525 + t4708 * t5157) * pkin(3)) * t4540 + (pkin(9) * t4363 - t4362 * t4534 + t5217) * t4525 - (t4401 * t5196 + t4603) * t5481) * t3764) / ((t4012 + t3965) * t4540 + t4903) * t3731;
t4481 = mrSges(3,2) * pkin(8) - Ifges(3,6);
t4482 = pkin(8) * mrSges(3,1) - Ifges(3,5);
t4301 = -t4481 * t4540 - t4482 * t4534;
t5513 = mrSges(3,1) * pkin(2);
t4511 = 0.2e1 * t5513;
t5597 = -0.2e1 * mrSges(3,3) * pkin(8) - Ifges(3,1);
t4597 = Ifges(2,3) + (-t4505 * t4574 + t5104) * m(3) - t5597;
t5049 = Ifges(3,3) + t5597;
t5050 = 0.2e1 * t5198;
t4546 = Ifges(3,1) - Ifges(3,2);
t5149 = t4546 * t4506;
t4559 = pkin(2) * mrSges(3,2);
t5438 = -0.2e1 * t4559;
t5542 = 2 * Ifges(3,4);
t5543 = -2 * Ifges(3,4);
t3944 = (t5158 * t5543 + t5049 + t5149) * t4505 + t4301 * t5050 - t5149 + (t4534 * t5542 + t4511) * t4540 + t4534 * t5438 + t4597;
t5567 = mrSges(3,1) * t4540 - mrSges(3,2) * t4534;
t4117 = t4301 * t4520 + t4524 * (pkin(2) * t5567 + Ifges(3,3));
t4662 = mrSges(3,2) * t5502 / 0.2e1 + t4482 * t4520 / 0.2e1;
t5252 = t4481 * t4520;
t4904 = -t5252 / 0.2e1;
t5051 = -0.2e1 * t5252;
t4397 = mrSges(3,1) * t4534 + mrSges(3,2) * t4540;
t4400 = (m(3) * pkin(8) + mrSges(3,3)) * t4520 - mrSges(2,2);
t4493 = m(3) * pkin(2) + mrSges(2,1);
t5315 = ((-t4397 * t4524 + t4400) * t4535 + t4541 * (t5567 + t4493)) * t4521;
t5452 = t4505 * Ifges(3,4);
t5458 = Ifges(3,4) * t3722;
t5569 = t4482 * t5198 + t4559;
t5614 = t5510 * t4546;
t4861 = -t3491 * t3944 - t3500 * t5315 - t3512 * t4117 + (t4997 * t5458 + (t4662 * t3764 + (t4534 * t5614 + t5569) * t3722) * t4540 - t3722 * t5452 + (t3722 * t5051 + t3764 * t5513) * t5183 / 0.2e1 + (t3722 * t5513 + t3764 * t4904) * t4534 + t5458) * t5520;
t4542 = cos(qJ(3,5));
t4507 = t4542 ^ 2;
t5179 = t4524 * t4543;
t4923 = t4519 * t5179;
t4822 = pkin(9) * t4923;
t4761 = pkin(3) * t4822;
t4537 = sin(qJ(2,5));
t5153 = t4537 * t4427;
t3972 = ((-0.2e1 * t4761 + t5153) * t5199 + t5110) * t4507;
t4337 = t4537 * t4727;
t4536 = sin(qJ(3,5));
t4941 = t4427 * t5179;
t4783 = t4536 * t4941;
t4723 = t4520 * t4783;
t4732 = t4537 * t4831;
t5195 = t4520 * t4537;
t4265 = pkin(2) * t5195 - t5262;
t4742 = t4505 * t5262 + t4265;
t3809 = 0.1e1 / (t3972 + ((t4337 - t4737) * t4536 + t4726) * t4542 + t5111 * t4536 + t4663 + ((pkin(3) * t4742 + t4723) * t4542 + (-t4732 + (t4440 * t4543 + t4536 * t4742) * t4519) * pkin(9)) * t4521);
t4529 = legFrame(5,3);
t4470 = sin(t4529);
t4476 = cos(t4529);
t4271 = t4470 * t4522 + t4476 * t4518;
t4277 = -t4470 * t4518 + t4476 * t4522;
t5169 = t4525 * t4537;
t4045 = -t4271 * t5169 + t4277 * t4543;
t5166 = t4525 * t4543;
t4680 = (t4271 * t5166 + t4277 * t4537) * t4524 - t4271 * t5199;
t3847 = (pkin(3) * t4680 - t4045 * t4456) * t4542 + t4536 * (pkin(3) * t4045 + t4456 * t4680);
t4046 = t4271 * t4543 + t4277 * t5169;
t4679 = (-t4271 * t4537 + t4277 * t5166) * t4524 - t4277 * t5199;
t3848 = (pkin(3) * t4679 + t4046 * t4456) * t4542 + t4536 * (-pkin(3) * t4046 + t4456 * t4679);
t5602 = t4357 * t4502 - t4499 * t5556;
t3860 = t4564 + (t4026 * t4502 - t4499 * t5602) * t4561 + (-t4026 * t4499 - t4502 * t5602) * t5226;
t3868 = t4563 + (-t4026 * t4498 + t4178 * t5227) * t4560 - t5640;
t3708 = (t3847 * t3868 + t3848 * t3860) * t3809;
t3890 = t4026 * t4239 - t4238 * t5602 + t4564;
t3927 = -t4026 * t4387 + t4178 * t4238 + t4563;
t3723 = (t3847 * t3927 + t3848 * t3890) * t3809;
t3714 = t3723 * t4833;
t4802 = t4536 * t5000;
t4013 = (-t4802 - t5106) * t4525;
t4966 = (t4761 - t5153 / 0.2e1) * t5199;
t3986 = (t4260 - 0.2e1 * t4966) * t4507;
t5209 = t4519 * t4536;
t4364 = pkin(2) * t5209 + t5011;
t4226 = t4364 * t5195;
t4233 = t4536 * t4734;
t4488 = pkin(2) * t4536;
t4402 = t4488 + t4456;
t4602 = (t4536 * t4999 + t4440) * t4543;
t4902 = (t4519 * t4602 + t4226) * t5465 + t3986 + (t4233 + (t4402 - t5027) * pkin(3)) * t4525;
t5022 = pkin(9) * t5209;
t4416 = pkin(2) + 0.2e1 * t5022;
t4910 = t4416 * t5195;
t3840 = 0.1e1 / ((t4013 + t4521 * ((t4536 * t4949 + t4891) * t4543 + pkin(3) * t4910)) * t4542 + t4902);
t5182 = t4524 * t4536;
t4258 = pkin(3) * t5182 - t5267;
t4417 = pkin(2) + t5022;
t4133 = t4258 * t4543 + t4417 * t4537;
t5478 = pkin(3) * t4537;
t4328 = t4822 - t5478;
t5208 = t4519 * t4537;
t5021 = pkin(9) * t5208;
t5302 = (pkin(3) * t4543 + t4524 * t5021) * t4525;
t5308 = (-t4258 * t4537 + t4417 * t4543) * t4525;
t3875 = (-t4271 * t5302 + t4277 * t4328) * t4542 - t4271 * t5308 - t4277 * t4133;
t3878 = (-t4271 * t4328 - t4277 * t5302) * t4542 - t4277 * t5308 + t4271 * t4133;
t3732 = (t3860 * t3878 + t3868 * t3875) * t3840;
t3765 = (t3875 * t3927 + t3878 * t3890) * t3840;
t3966 = t4521 * (t4723 + (t4543 * t4999 + t4910) * pkin(3));
t4432 = pkin(2) * t5022;
t4608 = ((-t4428 + t4432) * t4524 - t4536 * t5036) * t3723;
t4774 = t4543 * t4935;
t4777 = t4537 * t4935;
t4881 = pkin(3) * t5021;
t4810 = 0.2e1 * t4881;
t4829 = t4543 * t5028;
t4878 = t4543 * t5096;
t5041 = t4416 * t5478;
t5494 = pkin(3) * t3723;
t5098 = pkin(2) * t5494;
t5154 = t4536 * t4543;
t5155 = t4536 * t4542;
t5189 = t4521 * t4543;
t5273 = t4427 * t4543;
t5286 = t4364 * t4537;
t4373 = t4536 * t4427;
t5574 = t5510 * t4373;
t5321 = (t5106 + t5574) * t4525;
t5340 = (-t4785 + (t4810 + t4941) * t5199) * t4507;
t5427 = t3765 * t4428;
t5519 = -0.2e1 * t3765;
t5522 = 0.2e1 * t3723;
t5620 = t4536 * t5578;
t3492 = ((((t3723 * t4810 + t3765 * t5273) * t4524 + t3765 * t4810 + t3723 * t5273) * t5199 - t3765 * t4785) * t4507 + (((t4543 * t5098 + (-(t3723 * t5153 + t4878 * t5519) * t4524 + t4878 * t5522 - t3765 * t5153) * t4536) * t4520 - t4777 * t5494) * t4521 - t4525 * (t3714 + pkin(3) * (t3723 * t5502 + t3765 * t5620))) * t4542 + ((-pkin(3) * t5208 - t4524 * t4829) * t4520 * t3765 + (-t4520 * t4829 + ((pkin(2) * t5154 - t4524 * t5478) * t4520 - t4536 * t4777) * t4519) * t3723) * t5465 - (t3765 * t4661 + t4608) * t4525) / (t3986 + (((t4783 + t5041) * t4520 + pkin(3) * t4774) * t4521 - t5321) * t4542 + ((pkin(3) * t4923 + t5286) * t4520 + t4774 * t5209) * t5465 + (t4233 + pkin(3) * (t4488 + t4763)) * t4525) * t3708 + ((-t4520 * t5189 + t5184) * t5427 + (t5340 + 0.2e1 * (-t4707 + t4966) * t5155 - (t4543 * t4766 + t4881) * t5199 + t4648) * t3723) / ((t3966 - t5321) * t4542 + t4902) * t3732;
t4916 = t4521 * t5154;
t4167 = t4427 * t4916 + t4384;
t4125 = t4167 * t5198;
t4340 = t4525 * t4373;
t5033 = pkin(3) * t5189;
t4816 = t4446 * t5033;
t4143 = (-t4340 + t4816) * t4505;
t4690 = t4143 + t4340 - t4883;
t4175 = (t4446 * t4916 - t5480) * t5027;
t5265 = t4446 * t4536;
t4217 = t4525 * t5265 + t5033;
t4703 = t4217 * t4824 + t4452 * t4536 + t3972 + t4175;
t5475 = pkin(3) * t4542;
t3815 = 0.1e1 / ((t4125 + t4690) * t4542 + t4429 + (pkin(9) * t4226 + t4698 * t5154 + (t4910 - t5262) * t5475) * t4521 + t4703);
t4187 = t4428 * t5209 + t4379;
t4241 = t4432 + t4896;
t4996 = t5509 * t4507;
t5382 = t3815 * t4520;
t3501 = (((pkin(9) * t4187 - 0.2e1 * t4241 * t5475 - t4507 * t4396) * t5198 + (-t4542 * t4802 + (t4996 - t5510) * t5096) * t4446) * t3708 + (t4417 + t5475) * t3732 * t5268) * t3815 * t3765 + ((((-t4835 - (0.4e1 * t4432 + t4718) * t5482 + t5560 * t4536) * t4542 + (t4542 * t4709 + t5052) * t4507) * t3708 + (-t4104 * t4507 + (t4241 * t4893 - t5574 * t4446) * t4542) * t3732) * t3815 + ((t4187 * t4524 * t3732 - t3708 * t5107) * t5382 + ((t4507 * t4864 + t4736) * t4536 * t3708 * t5382 + ((t4507 * t4805 + t5105) * t3708 - t5510 * t3732) * t3815 * t5483) * t4519) * pkin(9)) * t3723;
t3756 = t3765 * t4833;
t4932 = t4507 * t5250;
t5500 = pkin(2) * t4542;
t3513 = t4525 * (-t3723 * t4427 * t4932 + (t3714 * t5514 + t3756 + (t3765 * t5502 + (t5545 - t5620) * t3723) * pkin(3)) * t4542 - t3723 * t4936 + ((t3723 * t4894 + t3765 * t4453) * t4536 - t5427) * t4524 + (t3723 * t5012 - t3765 * t5036) * t4536 + t3723 * t4381) / ((t4143 + t4125 + (t4337 + t4371) * t4536 + t4537 * t4890 - t4816) * t4542 + (-t4521 * t4732 + t4439 + (t4265 * t4521 * t4536 - t4525 * t5500) * t4519) * pkin(9) + t4703) * t3708 + ((((t3756 + t5098) * t4524 + t3714) * t4542 + t4608) * t4525 + (t5340 + (((-t4373 + t4453) * t5195 + t4543 * t4735) * t4521 + ((t4536 * t4892 + t4416) * t4525 + t4708 * t5154) * pkin(3)) * t4542 + (pkin(9) * t4364 - t4362 * t4536 + t5217) * t4525 - (t4402 * t5195 + t4602) * t5481) * t3765) / ((t4013 + t3966) * t4542 + t4902) * t3732;
t4302 = -t4481 * t4542 - t4482 * t4536;
t5148 = t4546 * t4507;
t3945 = (t5155 * t5543 + t5049 + t5148) * t4505 + t4302 * t5050 - t5148 + (t4536 * t5542 + t4511) * t4542 + t4536 * t5438 + t4597;
t5566 = mrSges(3,1) * t4542 - mrSges(3,2) * t4536;
t4118 = t4302 * t4520 + t4524 * (pkin(2) * t5566 + Ifges(3,3));
t4398 = mrSges(3,1) * t4536 + mrSges(3,2) * t4542;
t5314 = ((-t4398 * t4524 + t4400) * t4537 + t4543 * (t5566 + t4493)) * t4521;
t5457 = Ifges(3,4) * t3723;
t4860 = -t3492 * t3945 - t3501 * t5314 - t3513 * t4118 + (t4996 * t5457 + (t4662 * t3765 + (t4536 * t5614 + t5569) * t3723) * t4542 - t3723 * t5452 + (t3723 * t5051 + t3765 * t5513) * t5182 / 0.2e1 + (t3723 * t5513 + t3765 * t4904) * t4536 + t5457) * t5519;
t4544 = cos(qJ(3,4));
t4508 = t4544 ^ 2;
t5178 = t4524 * t4545;
t4922 = t4519 * t5178;
t4821 = pkin(9) * t4922;
t4760 = pkin(3) * t4821;
t4539 = sin(qJ(2,4));
t5150 = t4539 * t4427;
t3973 = ((-0.2e1 * t4760 + t5150) * t5199 + t5110) * t4508;
t4338 = t4539 * t4727;
t4538 = sin(qJ(3,4));
t4940 = t4427 * t5178;
t4782 = t4538 * t4940;
t4722 = t4520 * t4782;
t4731 = t4539 * t4831;
t5194 = t4520 * t4539;
t4266 = pkin(2) * t5194 - t5261;
t4741 = t4505 * t5261 + t4266;
t3810 = 0.1e1 / (t3973 + ((t4338 - t4737) * t4538 + t4726) * t4544 + t5111 * t4538 + t4663 + ((pkin(3) * t4741 + t4722) * t4544 + (-t4731 + (t4440 * t4545 + t4538 * t4741) * t4519) * pkin(9)) * t4521);
t4530 = legFrame(4,3);
t4471 = sin(t4530);
t4477 = cos(t4530);
t4272 = t4471 * t4522 + t4477 * t4518;
t4278 = -t4471 * t4518 + t4477 * t4522;
t5168 = t4525 * t4539;
t4047 = -t4272 * t5168 + t4278 * t4545;
t5165 = t4525 * t4545;
t4678 = (t4272 * t5165 + t4278 * t4539) * t4524 - t4272 * t5199;
t3849 = (pkin(3) * t4678 - t4047 * t4456) * t4544 + t4538 * (pkin(3) * t4047 + t4456 * t4678);
t4048 = t4272 * t4545 + t4278 * t5168;
t4677 = (-t4272 * t4539 + t4278 * t5165) * t4524 - t4278 * t5199;
t3850 = (pkin(3) * t4677 + t4048 * t4456) * t4544 + t4538 * (-pkin(3) * t4048 + t4456 * t4677);
t5603 = t4358 * t4502 - t4499 * t5555;
t3861 = t4564 + (t4028 * t4502 - t4499 * t5603) * t4561 + (-t4028 * t4499 - t4502 * t5603) * t5226;
t3869 = t4563 + (-t4028 * t4498 + t4179 * t5227) * t4560 - t5639;
t3709 = (t3849 * t3869 + t3850 * t3861) * t3810;
t3891 = t4028 * t4239 - t4238 * t5603 + t4564;
t3928 = -t4028 * t4387 + t4179 * t4238 + t4563;
t3724 = (t3849 * t3928 + t3850 * t3891) * t3810;
t3715 = t3724 * t4833;
t4801 = t4538 * t5000;
t4014 = (-t4801 - t5106) * t4525;
t4965 = (t4760 - t5150 / 0.2e1) * t5199;
t3987 = (t4260 - 0.2e1 * t4965) * t4508;
t5207 = t4519 * t4538;
t4365 = pkin(2) * t5207 + t5011;
t4227 = t4365 * t5194;
t4234 = t4538 * t4734;
t4489 = pkin(2) * t4538;
t4403 = t4489 + t4456;
t4601 = (t4538 * t4999 + t4440) * t4545;
t4901 = (t4519 * t4601 + t4227) * t5465 + t3987 + (t4234 + (t4403 - t5027) * pkin(3)) * t4525;
t5020 = pkin(9) * t5207;
t4418 = pkin(2) + 0.2e1 * t5020;
t4909 = t4418 * t5194;
t3841 = 0.1e1 / ((t4014 + t4521 * ((t4538 * t4949 + t4891) * t4545 + pkin(3) * t4909)) * t4544 + t4901);
t5181 = t4524 * t4538;
t4259 = pkin(3) * t5181 - t5267;
t4419 = pkin(2) + t5020;
t4135 = t4259 * t4545 + t4419 * t4539;
t5477 = pkin(3) * t4539;
t4329 = t4821 - t5477;
t5206 = t4519 * t4539;
t5019 = pkin(9) * t5206;
t5301 = (pkin(3) * t4545 + t4524 * t5019) * t4525;
t5307 = (-t4259 * t4539 + t4419 * t4545) * t4525;
t3876 = (-t4272 * t5301 + t4278 * t4329) * t4544 - t4272 * t5307 - t4278 * t4135;
t3879 = (-t4272 * t4329 - t4278 * t5301) * t4544 - t4278 * t5307 + t4272 * t4135;
t3733 = (t3861 * t3879 + t3869 * t3876) * t3841;
t3766 = (t3876 * t3928 + t3879 * t3891) * t3841;
t3967 = t4521 * (t4722 + (t4545 * t4999 + t4909) * pkin(3));
t4433 = pkin(2) * t5020;
t4607 = ((-t4428 + t4433) * t4524 - t4538 * t5036) * t3724;
t4773 = t4545 * t4935;
t4776 = t4539 * t4935;
t4880 = pkin(3) * t5019;
t4809 = 0.2e1 * t4880;
t4828 = t4545 * t5028;
t4877 = t4545 * t5096;
t5040 = t4418 * t5477;
t5493 = pkin(3) * t3724;
t5097 = pkin(2) * t5493;
t5151 = t4538 * t4545;
t5152 = t4538 * t4544;
t5188 = t4521 * t4545;
t5272 = t4427 * t4545;
t5284 = t4365 * t4539;
t4374 = t4538 * t4427;
t5573 = t5510 * t4374;
t5320 = (t5106 + t5573) * t4525;
t5339 = (-t4785 + (t4809 + t4940) * t5199) * t4508;
t5426 = t3766 * t4428;
t5518 = -0.2e1 * t3766;
t5521 = 0.2e1 * t3724;
t5619 = t4538 * t5578;
t3493 = ((((t3724 * t4809 + t3766 * t5272) * t4524 + t3766 * t4809 + t3724 * t5272) * t5199 - t3766 * t4785) * t4508 + (((t4545 * t5097 + (-(t3724 * t5150 + t4877 * t5518) * t4524 + t4877 * t5521 - t3766 * t5150) * t4538) * t4520 - t4776 * t5493) * t4521 - t4525 * (t3715 + pkin(3) * (t3724 * t5502 + t3766 * t5619))) * t4544 + ((-pkin(3) * t5206 - t4524 * t4828) * t4520 * t3766 + (-t4520 * t4828 + ((pkin(2) * t5151 - t4524 * t5477) * t4520 - t4538 * t4776) * t4519) * t3724) * t5465 - (t3766 * t4661 + t4607) * t4525) / (t3987 + (((t4782 + t5040) * t4520 + pkin(3) * t4773) * t4521 - t5320) * t4544 + ((pkin(3) * t4922 + t5284) * t4520 + t4773 * t5207) * t5465 + (t4234 + pkin(3) * (t4489 + t4763)) * t4525) * t3709 + ((-t4520 * t5188 + t5184) * t5426 + (t5339 + 0.2e1 * (-t4707 + t4965) * t5152 - (t4545 * t4766 + t4880) * t5199 + t4648) * t3724) / ((t3967 - t5320) * t4544 + t4901) * t3733;
t4915 = t4521 * t5151;
t4168 = t4427 * t4915 + t4384;
t4126 = t4168 * t5198;
t4341 = t4525 * t4374;
t5032 = pkin(3) * t5188;
t4815 = t4446 * t5032;
t4144 = (-t4341 + t4815) * t4505;
t4689 = t4144 + t4341 - t4883;
t4176 = (t4446 * t4915 - t5480) * t5027;
t5264 = t4446 * t4538;
t4218 = t4525 * t5264 + t5032;
t4702 = t4218 * t4824 + t4452 * t4538 + t3973 + t4176;
t5474 = pkin(3) * t4544;
t3816 = 0.1e1 / ((t4126 + t4689) * t4544 + t4429 + (pkin(9) * t4227 + t4698 * t5151 + (t4909 - t5261) * t5474) * t4521 + t4702);
t4188 = t4428 * t5207 + t4379;
t4242 = t4433 + t4896;
t4995 = t5509 * t4508;
t5381 = t3816 * t4520;
t3502 = (((pkin(9) * t4188 - 0.2e1 * t4242 * t5474 - t4508 * t4396) * t5198 + (-t4544 * t4801 + (t4995 - t5510) * t5096) * t4446) * t3709 + (t4419 + t5474) * t3733 * t5268) * t3816 * t3766 + ((((-t4835 - (0.4e1 * t4433 + t4718) * t5482 + t5560 * t4538) * t4544 + (t4544 * t4709 + t5052) * t4508) * t3709 + (-t4104 * t4508 + (t4242 * t4893 - t5573 * t4446) * t4544) * t3733) * t3816 + ((t4188 * t4524 * t3733 - t3709 * t5107) * t5381 + ((t4508 * t4864 + t4736) * t4538 * t3709 * t5381 + ((t4508 * t4805 + t5105) * t3709 - t5510 * t3733) * t3816 * t5483) * t4519) * pkin(9)) * t3724;
t3757 = t3766 * t4833;
t4931 = t4508 * t5250;
t5499 = pkin(2) * t4544;
t3514 = t4525 * (-t3724 * t4427 * t4931 + (t3715 * t5514 + t3757 + (t3766 * t5502 + (t5545 - t5619) * t3724) * pkin(3)) * t4544 - t3724 * t4936 + ((t3724 * t4894 + t3766 * t4453) * t4538 - t5426) * t4524 + (t3724 * t5012 - t3766 * t5036) * t4538 + t3724 * t4381) / ((t4144 + t4126 + (t4338 + t4371) * t4538 + t4539 * t4890 - t4815) * t4544 + (-t4521 * t4731 + t4439 + (t4266 * t4521 * t4538 - t4525 * t5499) * t4519) * pkin(9) + t4702) * t3709 + ((((t3757 + t5097) * t4524 + t3715) * t4544 + t4607) * t4525 + (t5339 + (((-t4374 + t4453) * t5194 + t4545 * t4735) * t4521 + ((t4538 * t4892 + t4418) * t4525 + t4708 * t5151) * pkin(3)) * t4544 + (pkin(9) * t4365 - t4362 * t4538 + t5217) * t4525 - (t4403 * t5194 + t4601) * t5481) * t3766) / ((t4014 + t3967) * t4544 + t4901) * t3733;
t4303 = -t4481 * t4544 - t4482 * t4538;
t5147 = t4546 * t4508;
t3946 = (t5152 * t5543 + t5049 + t5147) * t4505 + t4303 * t5050 - t5147 + (t4538 * t5542 + t4511) * t4544 + t4538 * t5438 + t4597;
t5565 = mrSges(3,1) * t4544 - mrSges(3,2) * t4538;
t4119 = t4303 * t4520 + t4524 * (pkin(2) * t5565 + Ifges(3,3));
t4399 = mrSges(3,1) * t4538 + mrSges(3,2) * t4544;
t5313 = ((-t4399 * t4524 + t4400) * t4539 + t4545 * (t5565 + t4493)) * t4521;
t5456 = Ifges(3,4) * t3724;
t4859 = -t3493 * t3946 - t3502 * t5313 - t3514 * t4119 + (t4995 * t5456 + (t4662 * t3766 + (t4538 * t5614 + t5569) * t3724) * t4544 - t3724 * t5452 + (t3724 * t5051 + t3766 * t5513) * t5181 / 0.2e1 + (t3724 * t5513 + t3766 * t4904) * t4538 + t5456) * t5518;
t3719 = t3722 ^ 2;
t5197 = t4520 * t4525;
t3977 = (t4540 * (mrSges(3,1) * t5180 - mrSges(3,2) * t4535) - t4534 * (mrSges(3,1) * t4535 + mrSges(3,2) * t5180)) * t4521 + t5567 * t5197;
t4445 = t5509 * Ifges(3,4);
t4706 = -t4481 * t5198 + t5513;
t4895 = Ifges(3,4) - t5452;
t4858 = -Ifges(3,3) * t3512 - t3491 * t4117 - t3500 * t3977 + t3719 * (t4445 * t4506 + t5569 * t4540 + (t4540 * t5614 + t4706) * t4534 + t4895);
t3720 = t3723 ^ 2;
t3978 = (t4542 * (mrSges(3,1) * t5179 - mrSges(3,2) * t4537) - t4536 * (mrSges(3,1) * t4537 + mrSges(3,2) * t5179)) * t4521 + t5566 * t5197;
t4857 = -Ifges(3,3) * t3513 - t3492 * t4118 - t3501 * t3978 + t3720 * (t4445 * t4507 + t5569 * t4542 + (t4542 * t5614 + t4706) * t4536 + t4895);
t3721 = t3724 ^ 2;
t3979 = (t4544 * (mrSges(3,1) * t5178 - mrSges(3,2) * t4539) - t4538 * (mrSges(3,1) * t4539 + mrSges(3,2) * t5178)) * t4521 + t5565 * t5197;
t4856 = -Ifges(3,3) * t3514 - t3493 * t4119 - t3502 * t3979 + t3721 * (t4445 * t4508 + t5569 * t4544 + (t4544 * t5614 + t4706) * t4538 + t4895);
t4553 = cos(qJ(3,3));
t4512 = t4553 ^ 2;
t5174 = t4524 * t4554;
t4921 = t4519 * t5174;
t4820 = pkin(9) * t4921;
t4759 = pkin(3) * t4820;
t4548 = sin(qJ(2,3));
t5141 = t4548 * t4427;
t3974 = ((-0.2e1 * t4759 + t5141) * t5199 + t5110) * t4512;
t4342 = t4548 * t4727;
t4547 = sin(qJ(3,3));
t4939 = t4427 * t5174;
t4781 = t4547 * t4939;
t4721 = t4520 * t4781;
t4730 = t4548 * t4831;
t5193 = t4520 * t4548;
t4267 = pkin(2) * t5193 - t5257;
t4740 = t4505 * t5257 + t4267;
t3811 = 0.1e1 / (t3974 + ((t4342 - t4737) * t4547 + t4726) * t4553 + t5111 * t4547 + t4663 + ((pkin(3) * t4740 + t4721) * t4553 + (-t4730 + (t4440 * t4554 + t4547 * t4740) * t4519) * pkin(9)) * t4521);
t4531 = legFrame(3,3);
t4472 = sin(t4531);
t4478 = cos(t4531);
t4273 = t4472 * t4522 + t4478 * t4518;
t4279 = -t4472 * t4518 + t4478 * t4522;
t5164 = t4525 * t4548;
t4071 = -t4273 * t5164 + t4279 * t4554;
t5161 = t4525 * t4554;
t4676 = (t4273 * t5161 + t4279 * t4548) * t4524 - t4273 * t5199;
t3851 = (pkin(3) * t4676 - t4071 * t4456) * t4553 + t4547 * (pkin(3) * t4071 + t4456 * t4676);
t4072 = t4273 * t4554 + t4279 * t5164;
t4675 = (-t4273 * t4548 + t4279 * t5161) * t4524 - t4279 * t5199;
t3852 = (pkin(3) * t4675 + t4072 * t4456) * t4553 + t4547 * (-pkin(3) * t4072 + t4456 * t4675);
t5604 = t4359 * t4502 - t4499 * t5554;
t3862 = t4564 + (t4030 * t4502 - t4499 * t5604) * t4561 + (-t4030 * t4499 - t4502 * t5604) * t5226;
t3870 = t4563 + (-t4030 * t4498 + t4180 * t5227) * t4560 - t5638;
t3710 = (t3851 * t3870 + t3852 * t3862) * t3811;
t3892 = t4030 * t4239 - t4238 * t5604 + t4564;
t3929 = -t4030 * t4387 + t4180 * t4238 + t4563;
t3728 = (t3851 * t3929 + t3852 * t3892) * t3811;
t3716 = t3728 * t4833;
t4800 = t4547 * t5000;
t4015 = (-t4800 - t5106) * t4525;
t4964 = (t4759 - t5141 / 0.2e1) * t5199;
t3993 = (t4260 - 0.2e1 * t4964) * t4512;
t5205 = t4519 * t4547;
t4366 = pkin(2) * t5205 + t5011;
t4229 = t4366 * t5193;
t4235 = t4547 * t4734;
t4494 = pkin(2) * t4547;
t4407 = t4494 + t4456;
t4600 = (t4547 * t4999 + t4440) * t4554;
t4900 = (t4519 * t4600 + t4229) * t5465 + t3993 + (t4235 + (t4407 - t5027) * pkin(3)) * t4525;
t5018 = pkin(9) * t5205;
t4420 = pkin(2) + 0.2e1 * t5018;
t4908 = t4420 * t5193;
t3842 = 0.1e1 / ((t4015 + t4521 * ((t4547 * t4949 + t4891) * t4554 + pkin(3) * t4908)) * t4553 + t4900);
t5177 = t4524 * t4547;
t4261 = pkin(3) * t5177 - t5267;
t4421 = pkin(2) + t5018;
t4137 = t4261 * t4554 + t4421 * t4548;
t5473 = pkin(3) * t4548;
t4333 = t4820 - t5473;
t5204 = t4519 * t4548;
t5017 = pkin(9) * t5204;
t5300 = (pkin(3) * t4554 + t4524 * t5017) * t4525;
t5306 = (-t4261 * t4548 + t4421 * t4554) * t4525;
t3881 = (-t4273 * t5300 + t4279 * t4333) * t4553 - t4273 * t5306 - t4279 * t4137;
t3884 = (-t4273 * t4333 - t4279 * t5300) * t4553 - t4279 * t5306 + t4273 * t4137;
t3734 = (t3862 * t3884 + t3870 * t3881) * t3842;
t3770 = (t3881 * t3929 + t3884 * t3892) * t3842;
t3968 = t4521 * (t4721 + (t4554 * t4999 + t4908) * pkin(3));
t4434 = pkin(2) * t5018;
t4606 = ((-t4428 + t4434) * t4524 - t4547 * t5036) * t3728;
t4769 = t4554 * t4935;
t4772 = t4548 * t4935;
t4876 = pkin(3) * t5017;
t4808 = 0.2e1 * t4876;
t4827 = t4554 * t5028;
t4836 = 0.2e1 * t5096;
t5039 = t4420 * t5473;
t5492 = pkin(3) * t3728;
t5103 = pkin(2) * t5492;
t5142 = t4547 * t4554;
t5143 = t4547 * t4553;
t5187 = t4521 * t4554;
t5271 = t4427 * t4554;
t5282 = t4366 * t4548;
t4375 = t4547 * t4427;
t5572 = t5510 * t4375;
t5319 = (t5106 + t5572) * t4525;
t5338 = (-t4785 + (t4808 + t4939) * t5199) * t4512;
t5424 = t3770 * t4524;
t5425 = t3770 * t4428;
t5431 = t3728 * t4524;
t5618 = t4547 * t5578;
t3494 = ((((t3728 * t4808 + t3770 * t5271) * t4524 + t3770 * t4808 + t3728 * t5271) * t5199 - t3770 * t4785) * t4512 + (((t4554 * t5103 + ((-t3770 - t5431) * t5141 + (t3728 + t5424) * t4554 * t4836) * t4547) * t4520 - t4772 * t5492) * t4521 - t4525 * (t3716 + pkin(3) * (pkin(2) * t5431 + t3770 * t5618))) * t4553 + ((-pkin(3) * t5204 - t4524 * t4827) * t4520 * t3770 + (-t4520 * t4827 + ((pkin(2) * t5142 - t4524 * t5473) * t4520 - t4547 * t4772) * t4519) * t3728) * t5465 - (t3770 * t4661 + t4606) * t4525) / (t3993 + (((t4781 + t5039) * t4520 + pkin(3) * t4769) * t4521 - t5319) * t4553 + ((pkin(3) * t4921 + t5282) * t4520 + t4769 * t5205) * t5465 + t4525 * (t4235 + pkin(3) * (t4494 + t4763))) * t3710 + ((-t4520 * t5187 + t5184) * t5425 + (t5338 + 0.2e1 * (-t4707 + t4964) * t5143 - (t4554 * t4766 + t4876) * t5199 + t4648) * t3728) / ((t3968 - t5319) * t4553 + t4900) * t3734;
t4914 = t4521 * t5142;
t4171 = t4427 * t4914 + t4384;
t4127 = t4171 * t5198;
t4345 = t4525 * t4375;
t5031 = pkin(3) * t5187;
t4814 = t4446 * t5031;
t4145 = (-t4345 + t4814) * t4505;
t4688 = t4145 + t4345 - t4883;
t4183 = (t4446 * t4914 - t5480) * t5027;
t5260 = t4446 * t4547;
t4220 = t4525 * t5260 + t5031;
t4701 = t4220 * t4824 + t4452 * t4547 + t3974 + t4183;
t5470 = pkin(3) * t4553;
t3817 = 0.1e1 / ((t4127 + t4688) * t4553 + t4429 + (pkin(9) * t4229 + t4698 * t5142 + (t4908 - t5257) * t5470) * t4521 + t4701);
t4189 = t4428 * t5205 + t4379;
t4243 = t4434 + t4896;
t4994 = t5509 * t4512;
t5380 = t3817 * t4520;
t3507 = (((pkin(9) * t4189 - 0.2e1 * t4243 * t5470 - t4512 * t4396) * t5198 + (-t4553 * t4800 + (t4994 - t5510) * t5096) * t4446) * t3710 + (t4421 + t5470) * t3734 * t5268) * t3817 * t3770 + ((((-t4835 - (0.4e1 * t4434 + t4718) * t5482 + t5560 * t4547) * t4553 + (t4553 * t4709 + t5052) * t4512) * t3710 + (-t4104 * t4512 + (t4243 * t4893 - t5572 * t4446) * t4553) * t3734) * t3817 + ((t4189 * t4524 * t3734 - t3710 * t5107) * t5380 + ((t4512 * t4864 + t4736) * t4547 * t3710 * t5380 + ((t4512 * t4805 + t5105) * t3710 - t5510 * t3734) * t3817 * t5483) * t4519) * pkin(9)) * t3728;
t3758 = t3770 * t4833;
t4930 = t4512 * t5250;
t5498 = pkin(2) * t4553;
t3518 = (-t3728 * t4427 * t4930 + (t3716 * t5514 + t3758 + (pkin(2) * t5424 + (t5545 - t5618) * t3728) * pkin(3)) * t4553 - t3728 * t4936 + ((t3728 * t4894 + t3770 * t4453) * t4547 - t5425) * t4524 + (t3728 * t5012 - t3770 * t5036) * t4547 + t3728 * t4381) * t4525 / ((t4145 + t4127 + (t4342 + t4371) * t4547 + t4548 * t4890 - t4814) * t4553 + (-t4521 * t4730 + t4439 + (t4267 * t4521 * t4547 - t4525 * t5498) * t4519) * pkin(9) + t4701) * t3710 + ((((t3758 + t5103) * t4524 + t3716) * t4553 + t4606) * t4525 + (t5338 + (((-t4375 + t4453) * t5193 + t4554 * t4735) * t4521 + ((t4547 * t4892 + t4420) * t4525 + t4708 * t5142) * pkin(3)) * t4553 + (pkin(9) * t4366 - t4362 * t4547 + t5217) * t4525 - (t4407 * t5193 + t4600) * t5481) * t3770) / ((t4015 + t3968) * t4553 + t4900) * t3734;
t4316 = -t4481 * t4553 - t4482 * t4547;
t5146 = t4546 * t4512;
t3947 = (t5143 * t5543 + t5049 + t5146) * t4505 + t4316 * t5050 - t5146 + (t4547 * t5542 + t4511) * t4553 + t4547 * t5438 + t4597;
t5564 = mrSges(3,1) * t4553 - mrSges(3,2) * t4547;
t4120 = t4316 * t4520 + t4524 * (pkin(2) * t5564 + Ifges(3,3));
t4404 = mrSges(3,1) * t4547 + mrSges(3,2) * t4553;
t5312 = ((-t4404 * t4524 + t4400) * t4548 + t4554 * (t5564 + t4493)) * t4521;
t5455 = Ifges(3,4) * t3728;
t4855 = -t3494 * t3947 - t3507 * t5312 - t3518 * t4120 - 0.2e1 * (t4994 * t5455 + (t4662 * t3770 + (t4547 * t5614 + t5569) * t3728) * t4553 - t3728 * t5452 + (t3728 * t5051 + t3770 * t5513) * t5177 / 0.2e1 + (t3728 * t5513 + t3770 * t4904) * t4547 + t5455) * t3770;
t4555 = cos(qJ(3,2));
t4513 = t4555 ^ 2;
t5173 = t4524 * t4556;
t4920 = t4519 * t5173;
t4819 = pkin(9) * t4920;
t4758 = pkin(3) * t4819;
t4550 = sin(qJ(2,2));
t5138 = t4550 * t4427;
t3975 = ((-0.2e1 * t4758 + t5138) * t5199 + t5110) * t4513;
t4343 = t4550 * t4727;
t4549 = sin(qJ(3,2));
t4938 = t4427 * t5173;
t4780 = t4549 * t4938;
t4720 = t4520 * t4780;
t4729 = t4550 * t4831;
t5192 = t4520 * t4550;
t4268 = pkin(2) * t5192 - t5256;
t4739 = t4505 * t5256 + t4268;
t3812 = 0.1e1 / (t3975 + ((t4343 - t4737) * t4549 + t4726) * t4555 + t5111 * t4549 + t4663 + ((pkin(3) * t4739 + t4720) * t4555 + (-t4729 + (t4440 * t4556 + t4549 * t4739) * t4519) * pkin(9)) * t4521);
t4532 = legFrame(2,3);
t4473 = sin(t4532);
t4479 = cos(t4532);
t4274 = t4473 * t4522 + t4479 * t4518;
t4280 = -t4473 * t4518 + t4479 * t4522;
t5163 = t4525 * t4550;
t4073 = -t4274 * t5163 + t4280 * t4556;
t5160 = t4525 * t4556;
t4674 = (t4274 * t5160 + t4280 * t4550) * t4524 - t4274 * t5199;
t3853 = (pkin(3) * t4674 - t4073 * t4456) * t4555 + t4549 * (pkin(3) * t4073 + t4456 * t4674);
t4074 = t4274 * t4556 + t4280 * t5163;
t4673 = (-t4274 * t4550 + t4280 * t5160) * t4524 - t4280 * t5199;
t3854 = (pkin(3) * t4673 + t4074 * t4456) * t4555 + t4549 * (-pkin(3) * t4074 + t4456 * t4673);
t5605 = t4360 * t4502 - t4499 * t5553;
t3863 = t4564 + (t4032 * t4502 - t4499 * t5605) * t4561 + (-t4032 * t4499 - t4502 * t5605) * t5226;
t3871 = t4563 + (-t4032 * t4498 + t4181 * t5227) * t4560 - t5637;
t3711 = (t3853 * t3871 + t3854 * t3863) * t3812;
t3893 = t4032 * t4239 - t4238 * t5605 + t4564;
t3930 = -t4032 * t4387 + t4181 * t4238 + t4563;
t3729 = (t3853 * t3930 + t3854 * t3893) * t3812;
t3717 = t3729 * t4833;
t4799 = t4549 * t5000;
t4016 = (-t4799 - t5106) * t4525;
t4963 = (t4758 - t5138 / 0.2e1) * t5199;
t3994 = (t4260 - 0.2e1 * t4963) * t4513;
t5203 = t4519 * t4549;
t4367 = pkin(2) * t5203 + t5011;
t4230 = t4367 * t5192;
t4236 = t4549 * t4734;
t4495 = pkin(2) * t4549;
t4408 = t4495 + t4456;
t4599 = (t4549 * t4999 + t4440) * t4556;
t4899 = (t4519 * t4599 + t4230) * t5465 + t3994 + (t4236 + (t4408 - t5027) * pkin(3)) * t4525;
t5016 = pkin(9) * t5203;
t4422 = pkin(2) + 0.2e1 * t5016;
t4907 = t4422 * t5192;
t3843 = 0.1e1 / ((t4016 + t4521 * ((t4549 * t4949 + t4891) * t4556 + pkin(3) * t4907)) * t4555 + t4899);
t5176 = t4524 * t4549;
t4262 = pkin(3) * t5176 - t5267;
t4423 = pkin(2) + t5016;
t4139 = t4262 * t4556 + t4423 * t4550;
t5472 = pkin(3) * t4550;
t4334 = t4819 - t5472;
t5202 = t4519 * t4550;
t5015 = pkin(9) * t5202;
t5299 = (pkin(3) * t4556 + t4524 * t5015) * t4525;
t5305 = (-t4262 * t4550 + t4423 * t4556) * t4525;
t3882 = (-t4274 * t5299 + t4280 * t4334) * t4555 - t4274 * t5305 - t4280 * t4139;
t3885 = (-t4274 * t4334 - t4280 * t5299) * t4555 - t4280 * t5305 + t4274 * t4139;
t3735 = (t3863 * t3885 + t3871 * t3882) * t3843;
t3771 = (t3882 * t3930 + t3885 * t3893) * t3843;
t3969 = t4521 * (t4720 + (t4556 * t4999 + t4907) * pkin(3));
t4435 = pkin(2) * t5016;
t4605 = ((-t4428 + t4435) * t4524 - t4549 * t5036) * t3729;
t4768 = t4556 * t4935;
t4771 = t4550 * t4935;
t4875 = pkin(3) * t5015;
t4807 = 0.2e1 * t4875;
t4826 = t4556 * t5028;
t5038 = t4422 * t5472;
t5491 = pkin(3) * t3729;
t5102 = pkin(2) * t5491;
t5139 = t4549 * t4556;
t5140 = t4549 * t4555;
t5186 = t4521 * t4556;
t5270 = t4427 * t4556;
t5280 = t4367 * t4550;
t4376 = t4549 * t4427;
t5571 = t5510 * t4376;
t5318 = (t5106 + t5571) * t4525;
t5337 = (-t4785 + (t4807 + t4938) * t5199) * t4513;
t5422 = t3771 * t4524;
t5423 = t3771 * t4428;
t5430 = t3729 * t4524;
t5617 = t4549 * t5578;
t3495 = ((((t3729 * t4807 + t3771 * t5270) * t4524 + t3771 * t4807 + t3729 * t5270) * t5199 - t3771 * t4785) * t4513 + (((t4556 * t5102 + ((-t3771 - t5430) * t5138 + (t3729 + t5422) * t4556 * t4836) * t4549) * t4520 - t4771 * t5491) * t4521 - t4525 * (t3717 + pkin(3) * (pkin(2) * t5430 + t3771 * t5617))) * t4555 + ((-pkin(3) * t5202 - t4524 * t4826) * t4520 * t3771 + (-t4520 * t4826 + ((pkin(2) * t5139 - t4524 * t5472) * t4520 - t4549 * t4771) * t4519) * t3729) * t5465 - (t3771 * t4661 + t4605) * t4525) / (t3994 + (((t4780 + t5038) * t4520 + pkin(3) * t4768) * t4521 - t5318) * t4555 + ((pkin(3) * t4920 + t5280) * t4520 + t4768 * t5203) * t5465 + t4525 * (t4236 + pkin(3) * (t4495 + t4763))) * t3711 + ((-t4520 * t5186 + t5184) * t5423 + (t5337 + 0.2e1 * (-t4707 + t4963) * t5140 - (t4556 * t4766 + t4875) * t5199 + t4648) * t3729) / ((t3969 - t5318) * t4555 + t4899) * t3735;
t4913 = t4521 * t5139;
t4172 = t4427 * t4913 + t4384;
t4128 = t4172 * t5198;
t4346 = t4525 * t4376;
t5030 = pkin(3) * t5186;
t4813 = t4446 * t5030;
t4146 = (-t4346 + t4813) * t4505;
t4687 = t4146 + t4346 - t4883;
t4184 = (t4446 * t4913 - t5480) * t5027;
t5259 = t4446 * t4549;
t4221 = t4525 * t5259 + t5030;
t4700 = t4221 * t4824 + t4452 * t4549 + t3975 + t4184;
t5469 = pkin(3) * t4555;
t3818 = 0.1e1 / ((t4128 + t4687) * t4555 + t4429 + (pkin(9) * t4230 + t4698 * t5139 + (t4907 - t5256) * t5469) * t4521 + t4700);
t4190 = t4428 * t5203 + t4379;
t4244 = t4435 + t4896;
t4993 = t5509 * t4513;
t5379 = t3818 * t4520;
t3508 = (((pkin(9) * t4190 - 0.2e1 * t4244 * t5469 - t4513 * t4396) * t5198 + (-t4555 * t4799 + (t4993 - t5510) * t5096) * t4446) * t3711 + (t4423 + t5469) * t3735 * t5268) * t3818 * t3771 + ((((-t4835 - (0.4e1 * t4435 + t4718) * t5482 + t5560 * t4549) * t4555 + (t4555 * t4709 + t5052) * t4513) * t3711 + (-t4104 * t4513 + (t4244 * t4893 - t5571 * t4446) * t4555) * t3735) * t3818 + ((t4190 * t4524 * t3735 - t3711 * t5107) * t5379 + ((t4513 * t4864 + t4736) * t4549 * t3711 * t5379 + ((t4513 * t4805 + t5105) * t3711 - t5510 * t3735) * t3818 * t5483) * t4519) * pkin(9)) * t3729;
t3759 = t3771 * t4833;
t4929 = t4513 * t5250;
t5497 = pkin(2) * t4555;
t3519 = (-t3729 * t4427 * t4929 + (t3717 * t5514 + t3759 + (pkin(2) * t5422 + (t5545 - t5617) * t3729) * pkin(3)) * t4555 - t3729 * t4936 + ((t3729 * t4894 + t3771 * t4453) * t4549 - t5423) * t4524 + (t3729 * t5012 - t3771 * t5036) * t4549 + t3729 * t4381) * t4525 / ((t4146 + t4128 + (t4343 + t4371) * t4549 + t4550 * t4890 - t4813) * t4555 + (-t4521 * t4729 + t4439 + (t4268 * t4521 * t4549 - t4525 * t5497) * t4519) * pkin(9) + t4700) * t3711 + ((((t3759 + t5102) * t4524 + t3717) * t4555 + t4605) * t4525 + (t5337 + (t4521 * ((-t4376 + t4453) * t5192 + t4556 * t4735) + ((t4549 * t4892 + t4422) * t4525 + t4708 * t5139) * pkin(3)) * t4555 + (pkin(9) * t4367 - t4362 * t4549 + t5217) * t4525 - (t4408 * t5192 + t4599) * t5481) * t3771) / ((t4016 + t3969) * t4555 + t4899) * t3735;
t4317 = -t4481 * t4555 - t4482 * t4549;
t5145 = t4546 * t4513;
t3948 = (t5140 * t5543 + t5049 + t5145) * t4505 + t4317 * t5050 - t5145 + (t4549 * t5542 + t4511) * t4555 + t4549 * t5438 + t4597;
t5563 = mrSges(3,1) * t4555 - mrSges(3,2) * t4549;
t4121 = t4317 * t4520 + t4524 * (pkin(2) * t5563 + Ifges(3,3));
t4405 = mrSges(3,1) * t4549 + mrSges(3,2) * t4555;
t5311 = ((-t4405 * t4524 + t4400) * t4550 + t4556 * (t5563 + t4493)) * t4521;
t5454 = Ifges(3,4) * t3729;
t4854 = -t3495 * t3948 - t3508 * t5311 - t3519 * t4121 - 0.2e1 * (t4993 * t5454 + (t4662 * t3771 + (t4549 * t5614 + t5569) * t3729) * t4555 - t3729 * t5452 + (t3729 * t5051 + t3771 * t5513) * t5176 / 0.2e1 + (t3729 * t5513 + t3771 * t4904) * t4549 + t5454) * t3771;
t4557 = cos(qJ(3,1));
t4514 = t4557 ^ 2;
t5172 = t4524 * t4558;
t4919 = t4519 * t5172;
t4818 = pkin(9) * t4919;
t4757 = pkin(3) * t4818;
t4552 = sin(qJ(2,1));
t5135 = t4552 * t4427;
t3976 = ((-0.2e1 * t4757 + t5135) * t5199 + t5110) * t4514;
t4344 = t4552 * t4727;
t4551 = sin(qJ(3,1));
t4937 = t4427 * t5172;
t4779 = t4551 * t4937;
t4719 = t4520 * t4779;
t4728 = t4552 * t4831;
t5191 = t4520 * t4552;
t4269 = pkin(2) * t5191 - t5255;
t4738 = t4505 * t5255 + t4269;
t3813 = 0.1e1 / (t3976 + ((t4344 - t4737) * t4551 + t4726) * t4557 + t5111 * t4551 + t4663 + ((pkin(3) * t4738 + t4719) * t4557 + (-t4728 + (t4440 * t4558 + t4551 * t4738) * t4519) * pkin(9)) * t4521);
t4533 = legFrame(1,3);
t4474 = sin(t4533);
t4480 = cos(t4533);
t4275 = t4474 * t4522 + t4480 * t4518;
t4281 = -t4474 * t4518 + t4480 * t4522;
t5162 = t4525 * t4552;
t4075 = -t4275 * t5162 + t4281 * t4558;
t5159 = t4525 * t4558;
t4672 = (t4275 * t5159 + t4281 * t4552) * t4524 - t4275 * t5199;
t3855 = (pkin(3) * t4672 - t4075 * t4456) * t4557 + t4551 * (pkin(3) * t4075 + t4456 * t4672);
t4076 = t4275 * t4558 + t4281 * t5162;
t4671 = (-t4275 * t4552 + t4281 * t5159) * t4524 - t4281 * t5199;
t3856 = (pkin(3) * t4671 + t4076 * t4456) * t4557 + t4551 * (-pkin(3) * t4076 + t4456 * t4671);
t5606 = t4361 * t4502 - t4499 * t5552;
t3864 = t4564 + (t4034 * t4502 - t4499 * t5606) * t4561 + (-t4034 * t4499 - t4502 * t5606) * t5226;
t3872 = t4563 + (-t4034 * t4498 + t4182 * t5227) * t4560 - t5636;
t3712 = (t3855 * t3872 + t3856 * t3864) * t3813;
t3894 = t4034 * t4239 - t4238 * t5606 + t4564;
t3931 = -t4034 * t4387 + t4182 * t4238 + t4563;
t3730 = (t3855 * t3931 + t3856 * t3894) * t3813;
t3718 = t3730 * t4833;
t4798 = t4551 * t5000;
t4017 = (-t4798 - t5106) * t4525;
t4962 = (t4757 - t5135 / 0.2e1) * t5199;
t3995 = (t4260 - 0.2e1 * t4962) * t4514;
t5201 = t4519 * t4551;
t4368 = pkin(2) * t5201 + t5011;
t4231 = t4368 * t5191;
t4237 = t4551 * t4734;
t4496 = pkin(2) * t4551;
t4409 = t4496 + t4456;
t4598 = (t4551 * t4999 + t4440) * t4558;
t4898 = (t4519 * t4598 + t4231) * t5465 + t3995 + (t4237 + (t4409 - t5027) * pkin(3)) * t4525;
t5014 = pkin(9) * t5201;
t4424 = pkin(2) + 0.2e1 * t5014;
t4906 = t4424 * t5191;
t3844 = 0.1e1 / ((t4017 + t4521 * ((t4551 * t4949 + t4891) * t4558 + pkin(3) * t4906)) * t4557 + t4898);
t5175 = t4524 * t4551;
t4263 = pkin(3) * t5175 - t5267;
t4425 = pkin(2) + t5014;
t4141 = t4263 * t4558 + t4425 * t4552;
t5471 = pkin(3) * t4552;
t4335 = t4818 - t5471;
t5200 = t4519 * t4552;
t5013 = pkin(9) * t5200;
t5298 = (pkin(3) * t4558 + t4524 * t5013) * t4525;
t5304 = (-t4263 * t4552 + t4425 * t4558) * t4525;
t3883 = (-t4275 * t5298 + t4281 * t4335) * t4557 - t4275 * t5304 - t4281 * t4141;
t3886 = (-t4275 * t4335 - t4281 * t5298) * t4557 - t4281 * t5304 + t4275 * t4141;
t3736 = (t3864 * t3886 + t3872 * t3883) * t3844;
t3772 = (t3883 * t3931 + t3886 * t3894) * t3844;
t3970 = t4521 * (t4719 + (t4558 * t4999 + t4906) * pkin(3));
t4436 = pkin(2) * t5014;
t4604 = ((-t4428 + t4436) * t4524 - t4551 * t5036) * t3730;
t4767 = t4558 * t4935;
t4770 = t4552 * t4935;
t4874 = pkin(3) * t5013;
t4806 = 0.2e1 * t4874;
t4825 = t4558 * t5028;
t5037 = t4424 * t5471;
t5490 = pkin(3) * t3730;
t5101 = pkin(2) * t5490;
t5136 = t4551 * t4558;
t5137 = t4551 * t4557;
t5185 = t4521 * t4558;
t5269 = t4427 * t4558;
t5278 = t4368 * t4552;
t4377 = t4551 * t4427;
t5570 = t5510 * t4377;
t5317 = (t5106 + t5570) * t4525;
t5336 = (-t4785 + (t4806 + t4937) * t5199) * t4514;
t5420 = t3772 * t4524;
t5421 = t3772 * t4428;
t5429 = t3730 * t4524;
t5616 = t4551 * t5578;
t3496 = ((((t3730 * t4806 + t3772 * t5269) * t4524 + t3772 * t4806 + t3730 * t5269) * t5199 - t3772 * t4785) * t4514 + (((t4558 * t5101 + ((-t3772 - t5429) * t5135 + (t3730 + t5420) * t4558 * t4836) * t4551) * t4520 - t4770 * t5490) * t4521 - t4525 * (t3718 + pkin(3) * (pkin(2) * t5429 + t3772 * t5616))) * t4557 + ((-pkin(3) * t5200 - t4524 * t4825) * t4520 * t3772 + (-t4520 * t4825 + ((pkin(2) * t5136 - t4524 * t5471) * t4520 - t4551 * t4770) * t4519) * t3730) * t5465 - (t3772 * t4661 + t4604) * t4525) / (t3995 + (((t4779 + t5037) * t4520 + pkin(3) * t4767) * t4521 - t5317) * t4557 + ((pkin(3) * t4919 + t5278) * t4520 + t4767 * t5201) * t5465 + t4525 * (t4237 + pkin(3) * (t4496 + t4763))) * t3712 + ((-t4520 * t5185 + t5184) * t5421 + (t5336 + 0.2e1 * (-t4707 + t4962) * t5137 - (t4558 * t4766 + t4874) * t5199 + t4648) * t3730) / ((t3970 - t5317) * t4557 + t4898) * t3736;
t4912 = t4521 * t5136;
t4173 = t4427 * t4912 + t4384;
t4129 = t4173 * t5198;
t4347 = t4525 * t4377;
t5029 = pkin(3) * t5185;
t4812 = t4446 * t5029;
t4147 = (-t4347 + t4812) * t4505;
t4686 = t4147 + t4347 - t4883;
t4185 = (t4446 * t4912 - t5480) * t5027;
t5258 = t4446 * t4551;
t4222 = t4525 * t5258 + t5029;
t4699 = t4222 * t4824 + t4452 * t4551 + t3976 + t4185;
t5468 = pkin(3) * t4557;
t3819 = 0.1e1 / ((t4129 + t4686) * t4557 + t4429 + (pkin(9) * t4231 + t4698 * t5136 + (t4906 - t5255) * t5468) * t4521 + t4699);
t4191 = t4428 * t5201 + t4379;
t4245 = t4436 + t4896;
t4992 = t5509 * t4514;
t5378 = t3819 * t4520;
t3506 = (((pkin(9) * t4191 - 0.2e1 * t4245 * t5468 - t4514 * t4396) * t5198 + (-t4557 * t4798 + (t4992 - t5510) * t5096) * t4446) * t3712 + (t4425 + t5468) * t3736 * t5268) * t3819 * t3772 + ((((-t4835 - (0.4e1 * t4436 + t4718) * t5482 + t5560 * t4551) * t4557 + (t4557 * t4709 + t5052) * t4514) * t3712 + (-t4104 * t4514 + (t4245 * t4893 - t5570 * t4446) * t4557) * t3736) * t3819 + ((t4191 * t4524 * t3736 - t3712 * t5107) * t5378 + ((t4514 * t4864 + t4736) * t4551 * t3712 * t5378 + ((t4514 * t4805 + t5105) * t3712 - t5510 * t3736) * t3819 * t5483) * t4519) * pkin(9)) * t3730;
t3760 = t3772 * t4833;
t4928 = t4514 * t5250;
t5496 = pkin(2) * t4557;
t3520 = (-t3730 * t4427 * t4928 + (t3718 * t5514 + t3760 + (pkin(2) * t5420 + (t5545 - t5616) * t3730) * pkin(3)) * t4557 - t3730 * t4936 + ((t3730 * t4894 + t3772 * t4453) * t4551 - t5421) * t4524 + (t3730 * t5012 - t3772 * t5036) * t4551 + t3730 * t4381) * t4525 / ((t4147 + t4129 + (t4344 + t4371) * t4551 + t4552 * t4890 - t4812) * t4557 + (-t4521 * t4728 + t4439 + (t4269 * t4521 * t4551 - t4525 * t5496) * t4519) * pkin(9) + t4699) * t3712 + ((((t3760 + t5101) * t4524 + t3718) * t4557 + t4604) * t4525 + (t5336 + (t4521 * ((-t4377 + t4453) * t5191 + t4558 * t4735) + ((t4551 * t4892 + t4424) * t4525 + t4708 * t5136) * pkin(3)) * t4557 + (pkin(9) * t4368 - t4362 * t4551 + t5217) * t4525 - (t4409 * t5191 + t4598) * t5481) * t3772) / ((t4017 + t3970) * t4557 + t4898) * t3736;
t4318 = -t4481 * t4557 - t4482 * t4551;
t5144 = t4546 * t4514;
t3949 = (t5137 * t5543 + t5049 + t5144) * t4505 + t4318 * t5050 - t5144 + (t4551 * t5542 + t4511) * t4557 + t4551 * t5438 + t4597;
t5562 = mrSges(3,1) * t4557 - mrSges(3,2) * t4551;
t4122 = t4318 * t4520 + t4524 * (pkin(2) * t5562 + Ifges(3,3));
t4406 = mrSges(3,1) * t4551 + mrSges(3,2) * t4557;
t5310 = ((-t4406 * t4524 + t4400) * t4552 + t4558 * (t5562 + t4493)) * t4521;
t5453 = Ifges(3,4) * t3730;
t4853 = -t3496 * t3949 - t3506 * t5310 - t3520 * t4122 - 0.2e1 * (t4992 * t5453 + (t4662 * t3772 + (t4551 * t5614 + t5569) * t3730) * t4557 - t3730 * t5452 + (t3730 * t5051 + t3772 * t5513) * t5175 / 0.2e1 + (t3730 * t5513 + t3772 * t4904) * t4551 + t5453) * t3772;
t3725 = t3728 ^ 2;
t3982 = (t4553 * (mrSges(3,1) * t5174 - mrSges(3,2) * t4548) - t4547 * (mrSges(3,1) * t4548 + mrSges(3,2) * t5174)) * t4521 + t5564 * t5197;
t4852 = -Ifges(3,3) * t3518 - t3494 * t4120 - t3507 * t3982 + t3725 * (t4445 * t4512 + t5569 * t4553 + (t4553 * t5614 + t4706) * t4547 + t4895);
t3726 = t3729 ^ 2;
t3983 = (t4555 * (mrSges(3,1) * t5173 - mrSges(3,2) * t4550) - t4549 * (mrSges(3,1) * t4550 + mrSges(3,2) * t5173)) * t4521 + t5563 * t5197;
t4851 = -Ifges(3,3) * t3519 - t3495 * t4121 - t3508 * t3983 + t3726 * (t4445 * t4513 + t5569 * t4555 + (t4555 * t5614 + t4706) * t4549 + t4895);
t3727 = t3730 ^ 2;
t3984 = (t4557 * (mrSges(3,1) * t5172 - mrSges(3,2) * t4552) - t4551 * (mrSges(3,1) * t4552 + mrSges(3,2) * t5172)) * t4521 + t5562 * t5197;
t4850 = -Ifges(3,3) * t3520 - t3496 * t4122 - t3506 * t3984 + t3727 * (t4445 * t4514 + t5569 * t4557 + (t4557 * t5614 + t4706) * t4551 + t4895);
t4571 = mrSges(4,2);
t4572 = mrSges(4,1);
t5244 = t4497 * t4572;
t4349 = t4500 * t4571 + t5244;
t4570 = mrSges(4,3);
t4451 = t4561 * t4570;
t5239 = t4498 * t4561;
t5228 = t4500 * t4572;
t5558 = -t4497 * t4571 + t5228;
t3991 = (t4349 * t4560 - t4451) * t4501 + t5558 * t5239;
t5635 = t3991 * t4499;
t5634 = t3991 * t4502;
t4006 = t4356 * t5226 - t4561 * t5557;
t5633 = t4006 * t4499;
t5632 = t4006 * t4502;
t4007 = t4357 * t5226 - t4561 * t5556;
t5631 = t4007 * t4499;
t5630 = t4007 * t4502;
t4008 = t4358 * t5226 - t4561 * t5555;
t5629 = t4008 * t4499;
t5628 = t4008 * t4502;
t4009 = t4359 * t5226 - t4561 * t5554;
t5627 = t4009 * t4499;
t5626 = t4009 * t4502;
t4010 = t4360 * t5226 - t4561 * t5553;
t5625 = t4010 * t4499;
t5624 = t4010 * t4502;
t4011 = t4361 * t5226 - t4561 * t5552;
t5623 = t4011 * t4499;
t5622 = t4011 * t4502;
t4516 = Ifges(4,1) - Ifges(4,2);
t5247 = t4497 * t4516;
t4441 = t4498 * t4562;
t5568 = t4441 + t4560;
t5615 = t5247 * t5568;
t4461 = Ifges(4,4) * t4560;
t5246 = t4497 * t4561;
t5007 = Ifges(4,6) * t5246;
t4352 = -t4461 + 0.2e1 * t5007;
t4467 = t4501 ^ 2;
t5613 = t4352 * t4467 - t5007;
t5222 = t4501 * t4572;
t5223 = t4501 * t4571;
t3953 = (-t4387 * t4571 + t4561 * t5222) * t4500 - (t4561 * t5223 + t4562 * t4572) * t4497 - (t4560 * t5244 - t4451) * t4498;
t4725 = t4497 * t5568;
t5224 = t4501 * t4570;
t3999 = -t4562 * t5224 - t4571 * t4725 + t5228 * t5568;
t3896 = t3953 * t4499 + t3999 * t4502;
t3897 = t3953 * t4502 - t3999 * t4499;
t4459 = Ifges(4,6) * t4560;
t5002 = Ifges(4,4) * t5246;
t4355 = -t4459 + 0.2e1 * t5002;
t4247 = t4355 * t4498;
t4460 = Ifges(4,5) * t4561;
t5214 = t4516 * t4560;
t4322 = t4497 * t5214 - 0.2e1 * t4460;
t5112 = t4322 * t4467 + t4460;
t5441 = Ifges(4,6) * t4562;
t5600 = -(t4247 - 0.2e1 * t5441) * t4501 + t5112;
t5447 = Ifges(4,5) * t4497;
t4430 = t4560 * t5447;
t4515 = Ifges(4,2) - Ifges(4,3);
t5133 = t4561 * t4515;
t4321 = t4430 + t5133;
t4223 = t4321 * t4498;
t4466 = t4500 ^ 2;
t5213 = t4516 * t4561;
t4925 = t4501 * t5213;
t4765 = t4498 * t4925;
t5001 = t4562 * t5447;
t5006 = Ifges(4,4) * t4441;
t5067 = -0.2e1 * t4461;
t5134 = t4560 * t4467;
t5599 = -(-0.2e1 * t5001 - t4223) * t4501 + (t4765 + (-0.4e1 * t5568 + 0.2e1 * t5134) * Ifges(4,4)) * t4466 + 0.2e1 * t5006 - t5067 + t5613;
t5598 = 0.2e1 * Ifges(4,4);
t5590 = t4521 * (0.2e1 * t4928 - t5510);
t5589 = t4521 * (0.2e1 * t4929 - t5510);
t5588 = t4521 * (0.2e1 * t4930 - t5510);
t5587 = t4521 * (0.2e1 * t4931 - t5510);
t5586 = t4521 * (0.2e1 * t4932 - t5510);
t5585 = t4521 * (0.2e1 * t4933 - t5510);
t5584 = t5198 * (0.2e1 * t4514 - 0.1e1);
t5583 = t5198 * (0.2e1 * t4513 - 0.1e1);
t5582 = t5198 * (0.2e1 * t4512 - 0.1e1);
t5581 = t5198 * (0.2e1 * t4508 - 0.1e1);
t5580 = t5198 * (0.2e1 * t4507 - 0.1e1);
t5579 = t5198 * (0.2e1 * t4506 - 0.1e1);
t3761 = t3764 ^ 2;
t4509 = m(1) + m(2) + m(3);
t5059 = t3764 * t5523;
t5125 = t3719 + t3761;
t5131 = -t3491 * t5315 - t4509 * t3500 - t3977 * t3512 - t3761 * t4397 * t5197 + ((t3719 * t4400 - t4397 * (t4524 * t5125 + t5059)) * t4541 - t4535 * (t3719 * t4493 + t5567 * (t4524 * t5059 + t5125))) * t4521;
t3762 = t3765 ^ 2;
t5058 = t3765 * t5522;
t5124 = t3720 + t3762;
t5130 = -t3492 * t5314 - t4509 * t3501 - t3978 * t3513 - t3762 * t4398 * t5197 + ((t3720 * t4400 - t4398 * (t4524 * t5124 + t5058)) * t4543 - t4537 * (t3720 * t4493 + t5566 * (t4524 * t5058 + t5124))) * t4521;
t3763 = t3766 ^ 2;
t5057 = t3766 * t5521;
t5123 = t3721 + t3763;
t5129 = -t3493 * t5313 - t4509 * t3502 - t3979 * t3514 - t3763 * t4399 * t5197 + ((t3721 * t4400 - t4399 * (t4524 * t5123 + t5057)) * t4545 - t4539 * (t3721 * t4493 + t5565 * (t4524 * t5057 + t5123))) * t4521;
t3769 = t3772 ^ 2;
t5054 = 0.2e1 * t3730 * t3772;
t5120 = t3727 + t3769;
t5128 = -t3496 * t5310 - t4509 * t3506 - t3984 * t3520 - t3769 * t4406 * t5197 + ((t3727 * t4400 - t4406 * (t4524 * t5120 + t5054)) * t4558 - t4552 * (t3727 * t4493 + t5562 * (t4524 * t5054 + t5120))) * t4521;
t3767 = t3770 ^ 2;
t5056 = 0.2e1 * t3728 * t3770;
t5122 = t3725 + t3767;
t5127 = -t3494 * t5312 - t4509 * t3507 - t3982 * t3518 - t3767 * t4404 * t5197 + ((t3725 * t4400 - t4404 * (t4524 * t5122 + t5056)) * t4554 - t4548 * (t3725 * t4493 + t5564 * (t4524 * t5056 + t5122))) * t4521;
t3768 = t3771 ^ 2;
t5055 = 0.2e1 * t3729 * t3771;
t5121 = t3726 + t3768;
t5126 = -t3495 * t5311 - t4509 * t3508 - t3983 * t3519 - t3768 * t4405 * t5197 + ((t3726 * t4400 - t4405 * (t4524 * t5121 + t5055)) * t4556 - t4550 * (t3726 * t4493 + t5563 * (t4524 * t5055 + t5121))) * t4521;
t4438 = t4515 * t4467;
t5446 = Ifges(4,5) * t4501;
t5066 = -0.2e1 * t5446;
t4867 = t4498 * t5066;
t5215 = t4516 * t4466;
t5450 = Ifges(4,4) * t4497;
t5516 = 0.2e1 * t4467;
t5511 = t5516 - 0.4e1;
t5561 = (t5511 * t5450 + t4867) * t4500 - (t4467 - 0.2e1) * t5215 - t4516 - t4438;
t5241 = t4498 * t4502;
t5328 = t5606 * t4562;
t3917 = -(t4361 * t5241 + t4499 * t5607) * t4560 + t4182 * t5220 - t5328;
t5329 = t5605 * t4562;
t3915 = -(t4360 * t5241 + t4499 * t5608) * t4560 + t4181 * t5220 - t5329;
t5330 = t5604 * t4562;
t3913 = -(t4359 * t5241 + t4499 * t5609) * t4560 + t4180 * t5220 - t5330;
t5331 = t5603 * t4562;
t3911 = -(t4358 * t5241 + t4499 * t5610) * t4560 + t4179 * t5220 - t5331;
t5332 = t5602 * t4562;
t3909 = -(t4357 * t5241 + t4499 * t5611) * t4560 + t4178 * t5220 - t5332;
t5333 = t5601 * t4562;
t3907 = -(t4356 * t5241 + t4499 * t5612) * t4560 + t4177 * t5220 - t5333;
t5296 = t4355 * t4500;
t4055 = t4561 * (t4515 + t5215) + t4430 - t5296;
t5345 = t3844 * t3883;
t5387 = t3813 * t3855;
t5551 = t4850 * t5345 + t4853 * t5387;
t5349 = t3843 * t3882;
t5391 = t3812 * t3853;
t5550 = t4851 * t5349 + t4854 * t5391;
t5353 = t3842 * t3881;
t5395 = t3811 * t3851;
t5549 = t4852 * t5353 + t4855 * t5395;
t5357 = t3841 * t3876;
t5399 = t3810 * t3849;
t5548 = t4856 * t5357 + t4859 * t5399;
t5361 = t3840 * t3875;
t5403 = t3809 * t3847;
t5547 = t4857 * t5361 + t4860 * t5403;
t5365 = t3839 * t3874;
t5407 = t3808 * t3845;
t5546 = t4858 * t5365 + t4861 * t5407;
t5517 = 0.2e1 * t4466;
t5489 = pkin(3) * t4414;
t5488 = pkin(3) * t4416;
t5487 = pkin(3) * t4418;
t5486 = pkin(3) * t4420;
t5485 = pkin(3) * t4422;
t5484 = pkin(3) * t4424;
t5466 = pkin(9) * t4520;
t5451 = Ifges(4,4) * t5568;
t5449 = Ifges(4,4) * t4502;
t5448 = Ifges(4,4) * t4561;
t5445 = Ifges(4,6) * t4497;
t5444 = Ifges(4,6) * t4499;
t5443 = Ifges(4,6) * t4500;
t5442 = Ifges(4,6) * t4501;
t5440 = t4498 * Ifges(4,4);
t5439 = t4562 * Ifges(4,4);
t4285 = t4518 * t5167 + t4522 * t4535;
t4288 = -t4518 * t4535 + t4522 * t5167;
t4062 = -t4285 * t4469 + t4288 * t4475;
t4291 = t4518 * t4541 + t4522 * t5170;
t4294 = -t4518 * t5170 + t4522 * t4541;
t4065 = t4291 * t4475 + t4294 * t4469;
t4948 = t4521 * t4372;
t4632 = t4062 * t5483 + t4276 * t4948;
t4889 = t4534 * t5100;
t4918 = t4521 * t5198;
t5275 = t4427 * t4520;
t4955 = t4506 * t5275;
t5035 = t4446 * t5481;
t5048 = t4521 * t5501;
t5289 = t4363 * t4520;
t3779 = t4065 * t4955 + (((t4062 * t4372 - t4276 * t5035) * t4524 + t4065 * t5489) * t4520 + t4632 * t4505 - t4632) * t4540 - t4276 * t4889 + (t4065 * t5289 + (t4276 * t5048 + (t4062 * t4505 - t4276 * t4918 - t4062) * t5266 + (-t4062 * t5579 - t4276 * t5585) * pkin(3)) * t4519) * pkin(9);
t4832 = t4446 * t5025;
t5212 = t4519 * t4524;
t3832 = 0.1e1 / (t3985 + ((t4166 * t4524 + t4521 * t5042) * t4520 - t4817 + t4691) * t4540 + (t4216 * t5212 + t4521 * t5288) * t5466 + t4174 + (-t4541 * t4832 + t4452) * t4534 + t4429);
t5419 = t3779 * t3832;
t4286 = t4518 * t5166 + t4522 * t4537;
t4289 = -t4518 * t4537 + t4522 * t5166;
t4063 = -t4286 * t4470 + t4289 * t4476;
t4292 = t4518 * t4543 + t4522 * t5169;
t4295 = -t4518 * t5169 + t4522 * t4543;
t4066 = t4292 * t4476 + t4295 * t4470;
t4947 = t4521 * t4373;
t4631 = t4063 * t5483 + t4277 * t4947;
t4888 = t4536 * t5100;
t4954 = t4507 * t5275;
t5047 = t4521 * t5500;
t5287 = t4364 * t4520;
t3780 = t4066 * t4954 + (((t4063 * t4373 - t4277 * t5035) * t4524 + t4066 * t5488) * t4520 + t4631 * t4505 - t4631) * t4542 - t4277 * t4888 + (t4066 * t5287 + (t4277 * t5047 + (t4063 * t4505 - t4277 * t4918 - t4063) * t5265 + (-t4063 * t5580 - t4277 * t5586) * pkin(3)) * t4519) * pkin(9);
t3833 = 0.1e1 / (t3986 + ((t4167 * t4524 + t4521 * t5041) * t4520 - t4816 + t4690) * t4542 + (t4217 * t5212 + t4521 * t5286) * t5466 + t4175 + (-t4543 * t4832 + t4452) * t4536 + t4429);
t5418 = t3780 * t3833;
t4287 = t4518 * t5165 + t4522 * t4539;
t4290 = -t4518 * t4539 + t4522 * t5165;
t4064 = -t4287 * t4471 + t4290 * t4477;
t4293 = t4518 * t4545 + t4522 * t5168;
t4296 = -t4518 * t5168 + t4522 * t4545;
t4067 = t4293 * t4477 + t4296 * t4471;
t4946 = t4521 * t4374;
t4630 = t4064 * t5483 + t4278 * t4946;
t4887 = t4538 * t5100;
t4953 = t4508 * t5275;
t5046 = t4521 * t5499;
t5285 = t4365 * t4520;
t3781 = t4067 * t4953 + (((t4064 * t4374 - t4278 * t5035) * t4524 + t4067 * t5487) * t4520 + t4630 * t4505 - t4630) * t4544 - t4278 * t4887 + (t4067 * t5285 + (t4278 * t5046 + (t4064 * t4505 - t4278 * t4918 - t4064) * t5264 + (-t4064 * t5581 - t4278 * t5587) * pkin(3)) * t4519) * pkin(9);
t3834 = 0.1e1 / (t3987 + ((t4168 * t4524 + t4521 * t5040) * t4520 - t4815 + t4689) * t4544 + (t4218 * t5212 + t4521 * t5284) * t5466 + t4176 + (-t4545 * t4832 + t4452) * t4538 + t4429);
t5417 = t3781 * t3834;
t4059 = t4285 * t4475 + t4288 * t4469;
t4068 = -t4291 * t4469 + t4294 * t4475;
t4635 = -t4059 * t5483 - t4270 * t4948;
t3782 = t4068 * t4955 + (((-t4059 * t4372 + t4270 * t5035) * t4524 + t4068 * t5489) * t4520 + t4635 * t4505 - t4635) * t4540 + t4270 * t4889 + (t4068 * t5289 + (-t4270 * t5048 + (-t4059 * t4505 + t4270 * t4918 + t4059) * t5266 + (t4059 * t5579 + t4270 * t5585) * pkin(3)) * t4519) * pkin(9);
t5416 = t3782 * t3832;
t4060 = t4286 * t4476 + t4289 * t4470;
t4069 = -t4292 * t4470 + t4295 * t4476;
t4634 = -t4060 * t5483 - t4271 * t4947;
t3783 = t4069 * t4954 + (((-t4060 * t4373 + t4271 * t5035) * t4524 + t4069 * t5488) * t4520 + t4634 * t4505 - t4634) * t4542 + t4271 * t4888 + (t4069 * t5287 + (-t4271 * t5047 + (-t4060 * t4505 + t4271 * t4918 + t4060) * t5265 + (t4060 * t5580 + t4271 * t5586) * pkin(3)) * t4519) * pkin(9);
t5415 = t3783 * t3833;
t4061 = t4287 * t4477 + t4290 * t4471;
t4070 = -t4293 * t4471 + t4296 * t4477;
t4633 = -t4061 * t5483 - t4272 * t4946;
t3784 = t4070 * t4953 + (((-t4061 * t4374 + t4272 * t5035) * t4524 + t4070 * t5487) * t4520 + t4633 * t4505 - t4633) * t4544 + t4272 * t4887 + (t4070 * t5285 + (-t4272 * t5046 + (-t4061 * t4505 + t4272 * t4918 + t4061) * t5264 + (t4061 * t5581 + t4272 * t5587) * pkin(3)) * t4519) * pkin(9);
t5414 = t3784 * t3834;
t4304 = t4518 * t5161 + t4522 * t4548;
t4307 = -t4518 * t4548 + t4522 * t5161;
t4086 = -t4304 * t4472 + t4307 * t4478;
t4310 = t4518 * t4554 + t4522 * t5164;
t4313 = -t4518 * t5164 + t4522 * t4554;
t4089 = t4310 * t4478 + t4313 * t4472;
t4945 = t4521 * t4375;
t4626 = t4086 * t5483 + t4279 * t4945;
t4886 = t4547 * t5100;
t4952 = t4512 * t5275;
t5045 = t4521 * t5498;
t5283 = t4366 * t4520;
t3785 = t4089 * t4952 + (((t4086 * t4375 - t4279 * t5035) * t4524 + t4089 * t5486) * t4520 + t4626 * t4505 - t4626) * t4553 - t4279 * t4886 + (t4089 * t5283 + (t4279 * t5045 + (t4086 * t4505 - t4279 * t4918 - t4086) * t5260 + (-t4086 * t5582 - t4279 * t5588) * pkin(3)) * t4519) * pkin(9);
t3835 = 0.1e1 / (t3993 + ((t4171 * t4524 + t4521 * t5039) * t4520 - t4814 + t4688) * t4553 + (t4220 * t5212 + t4521 * t5282) * t5466 + t4183 + (-t4554 * t4832 + t4452) * t4547 + t4429);
t5413 = t3785 * t3835;
t4305 = t4518 * t5160 + t4522 * t4550;
t4308 = -t4518 * t4550 + t4522 * t5160;
t4087 = -t4305 * t4473 + t4308 * t4479;
t4311 = t4518 * t4556 + t4522 * t5163;
t4314 = -t4518 * t5163 + t4522 * t4556;
t4090 = t4311 * t4479 + t4314 * t4473;
t4944 = t4521 * t4376;
t4625 = t4087 * t5483 + t4280 * t4944;
t4885 = t4549 * t5100;
t4951 = t4513 * t5275;
t5044 = t4521 * t5497;
t5281 = t4367 * t4520;
t3786 = t4090 * t4951 + (((t4087 * t4376 - t4280 * t5035) * t4524 + t4090 * t5485) * t4520 + t4625 * t4505 - t4625) * t4555 - t4280 * t4885 + (t4090 * t5281 + (t4280 * t5044 + (t4087 * t4505 - t4280 * t4918 - t4087) * t5259 + (-t4087 * t5583 - t4280 * t5589) * pkin(3)) * t4519) * pkin(9);
t3836 = 0.1e1 / (t3994 + ((t4172 * t4524 + t4521 * t5038) * t4520 - t4813 + t4687) * t4555 + (t4221 * t5212 + t4521 * t5280) * t5466 + t4184 + (-t4556 * t4832 + t4452) * t4549 + t4429);
t5412 = t3786 * t3836;
t4306 = t4518 * t5159 + t4522 * t4552;
t4309 = -t4518 * t4552 + t4522 * t5159;
t4088 = -t4306 * t4474 + t4309 * t4480;
t4312 = t4518 * t4558 + t4522 * t5162;
t4315 = -t4518 * t5162 + t4522 * t4558;
t4091 = t4312 * t4480 + t4315 * t4474;
t4943 = t4521 * t4377;
t4624 = t4088 * t5483 + t4281 * t4943;
t4884 = t4551 * t5100;
t4950 = t4514 * t5275;
t5043 = t4521 * t5496;
t5279 = t4368 * t4520;
t3787 = t4091 * t4950 + (((t4088 * t4377 - t4281 * t5035) * t4524 + t4091 * t5484) * t4520 + t4624 * t4505 - t4624) * t4557 - t4281 * t4884 + (t4091 * t5279 + (t4281 * t5043 + (t4088 * t4505 - t4281 * t4918 - t4088) * t5258 + (-t4088 * t5584 - t4281 * t5590) * pkin(3)) * t4519) * pkin(9);
t3837 = 0.1e1 / (t3995 + ((t4173 * t4524 + t4521 * t5037) * t4520 - t4812 + t4686) * t4557 + (t4222 * t5212 + t4521 * t5278) * t5466 + t4185 + (-t4558 * t4832 + t4452) * t4551 + t4429);
t5411 = t3787 * t3837;
t4083 = t4304 * t4478 + t4307 * t4472;
t4092 = -t4310 * t4472 + t4313 * t4478;
t4629 = -t4083 * t5483 - t4273 * t4945;
t3788 = t4092 * t4952 + (((-t4083 * t4375 + t4273 * t5035) * t4524 + t4092 * t5486) * t4520 + t4629 * t4505 - t4629) * t4553 + t4273 * t4886 + (t4092 * t5283 + (-t4273 * t5045 + (-t4083 * t4505 + t4273 * t4918 + t4083) * t5260 + (t4083 * t5582 + t4273 * t5588) * pkin(3)) * t4519) * pkin(9);
t5410 = t3788 * t3835;
t4084 = t4305 * t4479 + t4308 * t4473;
t4093 = -t4311 * t4473 + t4314 * t4479;
t4628 = -t4084 * t5483 - t4274 * t4944;
t3789 = t4093 * t4951 + (((-t4084 * t4376 + t4274 * t5035) * t4524 + t4093 * t5485) * t4520 + t4628 * t4505 - t4628) * t4555 + t4274 * t4885 + (t4093 * t5281 + (-t4274 * t5044 + (-t4084 * t4505 + t4274 * t4918 + t4084) * t5259 + (t4084 * t5583 + t4274 * t5589) * pkin(3)) * t4519) * pkin(9);
t5409 = t3789 * t3836;
t4085 = t4306 * t4480 + t4309 * t4474;
t4094 = -t4312 * t4474 + t4315 * t4480;
t4627 = -t4085 * t5483 - t4275 * t4943;
t3790 = t4094 * t4950 + (((-t4085 * t4377 + t4275 * t5035) * t4524 + t4094 * t5484) * t4520 + t4627 * t4505 - t4627) * t4557 + t4275 * t4884 + (t4094 * t5279 + (-t4275 * t5043 + (-t4085 * t4505 + t4275 * t4918 + t4085) * t5258 + (t4085 * t5584 + t4275 * t5590) * pkin(3)) * t4519) * pkin(9);
t5408 = t3790 * t3837;
t5406 = t3808 * t3846;
t5405 = t3808 * t3944;
t5404 = t3808 * t4117;
t5402 = t3809 * t3848;
t5401 = t3809 * t3945;
t5400 = t3809 * t4118;
t5398 = t3810 * t3850;
t5397 = t3810 * t3946;
t5396 = t3810 * t4119;
t5394 = t3811 * t3852;
t5393 = t3811 * t3947;
t5392 = t3811 * t4120;
t5390 = t3812 * t3854;
t5389 = t3812 * t3948;
t5388 = t3812 * t4121;
t5386 = t3813 * t3856;
t5385 = t3813 * t3949;
t5384 = t3813 * t4122;
t5377 = t3832 * t3977;
t5376 = t3832 * t4509;
t5375 = t3833 * t3978;
t5374 = t3833 * t4509;
t5373 = t3834 * t3979;
t5372 = t3834 * t4509;
t5371 = t3835 * t3982;
t5370 = t3835 * t4509;
t5369 = t3836 * t3983;
t5368 = t3836 * t4509;
t5367 = t3837 * t3984;
t5366 = t3837 * t4509;
t5364 = t3839 * t3877;
t5363 = t3839 * t3977;
t5362 = t3839 * t4117;
t5360 = t3840 * t3878;
t5359 = t3840 * t3978;
t5358 = t3840 * t4118;
t5356 = t3841 * t3879;
t5355 = t3841 * t3979;
t5354 = t3841 * t4119;
t5352 = t3842 * t3884;
t5351 = t3842 * t3982;
t5350 = t3842 * t4120;
t5348 = t3843 * t3885;
t5347 = t3843 * t3983;
t5346 = t3843 * t4121;
t5344 = t3844 * t3886;
t5343 = t3844 * t3984;
t5342 = t3844 * t4122;
t5316 = t4055 * t4467;
t5297 = t4352 * t4498;
t4369 = Ifges(4,5) * t4500 - t5445;
t5277 = t4369 * t4499;
t5254 = t4466 * t4560;
t5253 = t4467 * t4562;
t5249 = t4497 * t4500;
t5248 = t4497 * t4502;
t5243 = t4498 * t4499;
t5242 = t4498 * t4501;
t5232 = t4499 * t4502;
t5231 = t4499 * t4516;
t5229 = t4499 * t4562;
t5225 = t4501 * t4562;
t5221 = t4502 * t4516;
t5219 = t4502 * t4562;
t5216 = t4515 * t4562;
t5132 = t4562 * t4516;
t4839 = t4560 + 0.2e1 * t4441;
t4905 = t4467 * t5216;
t5005 = t4501 * t5448;
t5008 = Ifges(4,5) * t5246;
t3880 = (-0.2e1 * t5005 + (-0.2e1 * t4387 + t5253) * t4516) * t4466 + ((Ifges(4,5) * t4839 - t4497 * t5213) * t4501 - Ifges(4,6) * t5239 + (-t5511 * t4562 + 0.4e1 * t5240) * t5450) * t4500 + t4905 + (-t4839 * t5445 + t5448) * t4501 + (-t5008 + t5214) * t4498 + t5132;
t4348 = t5007 - t4461 / 0.2e1;
t4468 = t4502 ^ 2;
t4756 = -t4461 - t5006;
t5119 = 0.2e1 * ((-t4765 / 0.2e1 + (0.2e1 * t5568 - t5134) * Ifges(4,4)) * t4466 + (((t5002 - t4459 / 0.2e1) * t4498 - t5441) * t4501 + (t4467 - 0.1e1 / 0.2e1) * t4460 + (-t5134 / 0.2e1 + t5568) * t5247) * t4500 - t4348 * t4467 + ((-t4430 / 0.2e1 - t5133 / 0.2e1) * t4498 - t5001) * t4501 + t5007 / 0.2e1 + t4756) * t5232 + t3880 * t4468;
t5108 = t4560 * Ifges(4,2) + t4498 * t5216;
t5082 = 0.2e1 * t4500;
t5069 = Ifges(4,4) * t5517;
t5068 = -0.2e1 * Ifges(4,4) * t4499;
t5053 = -0.2e1 * t5277;
t5009 = Ifges(4,4) * t5243;
t5004 = t4497 * t5446;
t5003 = Ifges(4,4) * t5241;
t4991 = t3808 * t5315;
t4990 = t3809 * t5314;
t4989 = t3810 * t5313;
t4988 = t3811 * t5312;
t4987 = t3812 * t5311;
t4986 = t3813 * t5310;
t4985 = t3832 * t5315;
t4984 = t3833 * t5314;
t4983 = t3834 * t5313;
t4982 = t3835 * t5312;
t4981 = t3836 * t5311;
t4980 = t3837 * t5310;
t4927 = t3880 * t5232;
t4684 = t4498 * t5247 - t5442;
t4036 = t4498 * t5069 + t4684 * t4500 - t5004 - t5440;
t4926 = t4036 * t5232;
t4842 = -t4387 + t5253;
t4804 = t5242 * t5445;
t4169 = t4498 * t5558 - t5224;
t4717 = t4169 * t4502 - t4349 * t4499;
t4716 = t4169 * t4499 + t4349 * t4502;
t4685 = t5249 * t5598 - t5215;
t4683 = t4516 * t4725;
t4664 = t4322 * t4498 + t4497 * t5132;
t4660 = Ifges(3,3) * t5365 + t3845 * t5404;
t4659 = Ifges(3,3) * t5364 + t3846 * t5404;
t4658 = Ifges(3,3) * t5361 + t3847 * t5400;
t4657 = Ifges(3,3) * t5360 + t3848 * t5400;
t4656 = Ifges(3,3) * t5357 + t3849 * t5396;
t4655 = Ifges(3,3) * t5356 + t3850 * t5396;
t4654 = Ifges(3,3) * t5353 + t3851 * t5392;
t4653 = Ifges(3,3) * t5352 + t3852 * t5392;
t4652 = Ifges(3,3) * t5349 + t3853 * t5388;
t4651 = Ifges(3,3) * t5348 + t3854 * t5388;
t4650 = Ifges(3,3) * t5345 + t3855 * t5384;
t4649 = Ifges(3,3) * t5344 + t3856 * t5384;
t4647 = t3845 * t5405 + t3874 * t5362;
t4646 = t3846 * t5405 + t3877 * t5362;
t4645 = t3847 * t5401 + t3875 * t5358;
t4644 = t3848 * t5401 + t3878 * t5358;
t4643 = t3849 * t5397 + t3876 * t5354;
t4642 = t3850 * t5397 + t3879 * t5354;
t4641 = t3851 * t5393 + t3881 * t5350;
t4640 = t3852 * t5393 + t3884 * t5350;
t4639 = t3853 * t5389 + t3882 * t5346;
t4638 = t3854 * t5389 + t3885 * t5346;
t4637 = t3855 * t5385 + t3883 * t5342;
t4636 = t3856 * t5385 + t3886 * t5342;
t4623 = Ifges(4,3) * t4561 - t4498 * t5001 - t4430;
t4621 = t3845 * t4991 + t3874 * t5363;
t4620 = t3846 * t4991 + t3877 * t5363;
t4619 = t3847 * t4990 + t3875 * t5359;
t4618 = t3848 * t4990 + t3878 * t5359;
t4617 = t3849 * t4989 + t3876 * t5355;
t4616 = t3850 * t4989 + t3879 * t5355;
t4615 = t3851 * t4988 + t3881 * t5351;
t4614 = t3852 * t4988 + t3884 * t5351;
t4613 = t3853 * t4987 + t3882 * t5347;
t4612 = t3854 * t4987 + t3885 * t5347;
t4611 = t3855 * t4986 + t3883 * t5343;
t4610 = t3856 * t4986 + t3886 * t5343;
t3918 = (t4498 * t5238 - t4502 * t5612) * t4560 + t5641;
t3919 = (t4498 * t5237 - t4502 * t5611) * t4560 + t5640;
t3920 = (t4498 * t5236 - t4502 * t5610) * t4560 + t5639;
t3921 = (t4498 * t5235 - t4502 * t5609) * t4560 + t5638;
t3922 = (t4498 * t5234 - t4502 * t5608) * t4560 + t5637;
t3923 = (t4498 * t5233 - t4502 * t5607) * t4560 + t5636;
t4589 = t4858 * t5364 + t4861 * t5406;
t4588 = t4857 * t5360 + t4860 * t5402;
t4587 = t4856 * t5356 + t4859 * t5398;
t4586 = t4852 * t5352 + t4855 * t5394;
t4585 = t4851 * t5348 + t4854 * t5390;
t4584 = t4850 * t5344 + t4853 * t5386;
t4378 = t4441 + t4560 / 0.2e1;
t4354 = -Ifges(4,1) * t4560 + t5008;
t4353 = Ifges(4,6) * t4561 + t4497 * t5067;
t4351 = 0.2e1 * t4804;
t4256 = 0.2e1 * t5003 + t5231;
t4255 = -0.2e1 * t5009 + t5221;
t4254 = t4498 * t5231 + 0.2e1 * t5449;
t4219 = -t4685 + t4515;
t4214 = t4498 * t5230 - t4501 * t5219;
t4213 = -t4498 * t5220 - t4499 * t5225;
t4170 = -t4497 * t5223 + t4498 * t4570 + t4500 * t5222;
t3961 = -0.2e1 * t4804 - t5561;
t3943 = t4182 * t5229 + t5622;
t3942 = t4182 * t5219 - t5623;
t3941 = t4181 * t5229 + t5624;
t3940 = t4181 * t5219 - t5625;
t3939 = t4180 * t5229 + t5626;
t3938 = t4180 * t5219 - t5627;
t3937 = t4179 * t5229 + t5628;
t3936 = t4179 * t5219 - t5629;
t3935 = t4178 * t5229 + t5630;
t3934 = t4178 * t5219 - t5631;
t3933 = t4177 * t5229 + t5632;
t3932 = t4177 * t5219 - t5633;
t3925 = (-t4322 * t4500 + t4466 * t5067 - t4352) * t4467 - t4055 * t5242 - t4561 * t4369;
t3924 = (-t4219 * t5241 + t4499 * (t4500 * t5247 - Ifges(4,4) + t5069)) * t4501 + (t5443 + t5447) * t5243 + (t5516 - 0.1e1) * t4502 * t4369;
t3895 = t4467 * t5053 + (t4254 * t4466 + t4255 * t5249 + t4515 * t5243 - t5449) * t4501 + (Ifges(4,5) * t4499 + Ifges(4,6) * t5241) * t4500 + t4497 * (Ifges(4,5) * t5241 - t5444);
t3888 = (t4351 + t5561) * t4468 - 0.2e1 * t4926 + Ifges(4,1) + t4685;
t3887 = (-t4684 * t5082 + 0.2e1 * t5004 + (-0.4e1 * t4466 + 0.2e1) * t5440) * t4468 + t3961 * t5232 + t4036;
t3866 = t3961 * t4468 + 0.2e1 * t4926 + t5215 + (t4867 + (t5516 - 0.2e1) * t5450) * t4500 - t4438 + t4351 + Ifges(4,2) - t5215 * t4467;
t3858 = t4499 * t5316 + (t4255 * t5254 + (-t4322 * t5243 + t4353 * t4502) * t4500 - 0.2e1 * t4348 * t5243 + t4502 * t4354) * t4501 - (t4256 * t4466 + (t4498 * t5221 + t5068) * t5249 - t5003 + Ifges(4,2) * t4499) * t4561;
t3857 = -t4502 * t5316 + (t4256 * t5254 + (t4322 * t5241 + t4353 * t4499) * t4500 + 0.2e1 * t4348 * t5241 + t4499 * t4354) * t4501 + (Ifges(4,2) * t4502 - t4254 * t5249 + t4255 * t4466 + t5009) * t4561;
t3838 = (-t4055 * t4502 + t4562 * t5053) * t4467 + ((t4664 * t4500 + t5297 + (t4387 * t5517 - t4562) * Ifges(4,4)) * t4502 + t4499 * (-t4685 * t5568 + t5108)) * t4501 + (t5443 * t5568 - t4623) * t4502 + t4387 * t5277;
t3831 = t3917 * t4498 + t4182 * t4213 + (-t4034 * t4561 - t5622) * t4501;
t3830 = -t3923 * t4498 - t4182 * t4214 + (t4561 * t5606 - t5623) * t4501;
t3829 = t3915 * t4498 + t4181 * t4213 + (-t4032 * t4561 - t5624) * t4501;
t3828 = -t3922 * t4498 - t4181 * t4214 + (t4561 * t5605 - t5625) * t4501;
t3827 = t3913 * t4498 + t4180 * t4213 + (-t4030 * t4561 - t5626) * t4501;
t3826 = -t3921 * t4498 - t4180 * t4214 + (t4561 * t5604 - t5627) * t4501;
t3825 = t3911 * t4498 + t4179 * t4213 + (-t4028 * t4561 - t5628) * t4501;
t3824 = -t3920 * t4498 - t4179 * t4214 + (t4561 * t5603 - t5629) * t4501;
t3823 = t3909 * t4498 + t4178 * t4213 + (-t4026 * t4561 - t5630) * t4501;
t3822 = -t3919 * t4498 - t4178 * t4214 + (t4561 * t5602 - t5631) * t4501;
t3821 = t3907 * t4498 + t4177 * t4213 + (-t4024 * t4561 - t5632) * t4501;
t3820 = -t3918 * t4498 - t4177 * t4214 + (t4561 * t5601 - t5633) * t4501;
t3807 = (-0.2e1 * t4369 * t5219 + (t4466 * t5213 + t4321 - t5296) * t4499) * t4467 + ((t4387 * t5068 + t5221 * t5568) * t4466 + (-t4499 * t4664 - 0.2e1 * t5248 * t5451) * t4500 + (-t5297 + t5439) * t4499 + t5108 * t4502) * t4501 + (Ifges(4,5) * t4387 * t4502 - t5444 * t5568) * t4500 + t4623 * t4499 - Ifges(4,6) * t4387 * t5248;
t3806 = (-t3917 - t5328) * t4502 + (t3923 - t5322) * t4499;
t3805 = (-t3915 - t5329) * t4502 + (t3922 - t5323) * t4499;
t3804 = (-t3913 - t5330) * t4502 + (t3921 - t5324) * t4499;
t3803 = (-t3911 - t5331) * t4502 + (t3920 - t5325) * t4499;
t3802 = (-t3909 - t5332) * t4502 + (t3919 - t5326) * t4499;
t3801 = (-t3907 - t5333) * t4502 + (t3918 - t5327) * t4499;
t3800 = -t5606 * t4213 + t4034 * t4214 + (t3917 * t4499 + t3923 * t4502) * t4501;
t3799 = -t5605 * t4213 + t4032 * t4214 + (t3915 * t4499 + t3922 * t4502) * t4501;
t3798 = -t5604 * t4213 + t4030 * t4214 + (t3913 * t4499 + t3921 * t4502) * t4501;
t3797 = -t5603 * t4213 + t4028 * t4214 + (t3911 * t4499 + t3920 * t4502) * t4501;
t3796 = -t5602 * t4213 + t4026 * t4214 + (t3909 * t4499 + t3919 * t4502) * t4501;
t3795 = -t5601 * t4213 + t4024 * t4214 + (t3907 * t4499 + t3918 * t4502) * t4501;
t3794 = ((-0.2e1 * t4683 + t5600) * t4500 + t5599) * t4468 + t4927 + t5568 * t5069 + (-Ifges(4,6) * t5225 + t5615) * t4500 - t4501 * t5001 - t5451;
t3793 = (t4387 * t4516 + 0.2e1 * t5005) * t4466 + (t4353 * t4498 + (t4925 - 0.2e1 * t5439) * t4497) * t4500 - t5005 + t4354 * t4498 - Ifges(4,1) * t4562 + t5119;
t3792 = -t4842 * t5215 + t4378 * t4500 * t5066 - t4905 + Ifges(4,2) * t4387 + (Ifges(4,4) * t4842 * t5082 + 0.2e1 * t4378 * t5442) * t4497 + t5119;
t3791 = ((-t5600 + 0.2e1 * t5615) * t4500 - t5599) * t4468 - t4927 + (t4765 + (-t5568 + t5134) * t5598) * t4466 + ((-t4247 + t5441) * t4501 - t4683 + t5112) * t4500 + (t4223 + t5001) * t4501 - t4756 + t5613;
t3778 = (t3883 * t4182 - t3886 * t5606) * t3844;
t3777 = (t3882 * t4181 - t3885 * t5605) * t3843;
t3776 = (t3881 * t4180 - t3884 * t5604) * t3842;
t3775 = (t3876 * t4179 - t3879 * t5603) * t3841;
t3774 = (t3875 * t4178 - t3878 * t5602) * t3840;
t3773 = (t3874 * t4177 - t3877 * t5601) * t3839;
t3754 = t4034 * t5408 - t4182;
t3753 = t4032 * t5409 - t4181;
t3752 = t4030 * t5410 - t4180;
t3751 = t4028 * t5414 - t4179;
t3750 = t4026 * t5415 - t4178;
t3749 = t4024 * t5416 - t4177;
t3748 = -t4034 * t5411 + t5606;
t3747 = -t4032 * t5412 + t5605;
t3746 = -t4030 * t5413 + t5604;
t3745 = -t4028 * t5417 + t5603;
t3744 = -t4026 * t5418 + t5602;
t3743 = -t4024 * t5419 + t5601;
t3742 = (t3855 * t4182 - t3856 * t5606) * t3813;
t3741 = (t3853 * t4181 - t3854 * t5605) * t3812;
t3740 = (t3851 * t4180 - t3852 * t5604) * t3811;
t3739 = (t3849 * t4179 - t3850 * t5603) * t3810;
t3738 = (t3847 * t4178 - t3848 * t5602) * t3809;
t3737 = (t3845 * t4177 - t3846 * t5601) * t3808;
t3706 = t3790 * t5367 + t4649;
t3705 = t3789 * t5369 + t4651;
t3704 = t3788 * t5371 + t4653;
t3703 = t3787 * t5367 + t4650;
t3702 = t3786 * t5369 + t4652;
t3701 = t3785 * t5371 + t4654;
t3700 = t3790 * t5366 + t4610;
t3699 = t3789 * t5368 + t4612;
t3698 = t3788 * t5370 + t4614;
t3697 = t3787 * t5366 + t4611;
t3696 = t3786 * t5368 + t4613;
t3695 = t3785 * t5370 + t4615;
t3694 = t3784 * t5373 + t4655;
t3693 = t3783 * t5375 + t4657;
t3692 = t3782 * t5377 + t4659;
t3691 = t3781 * t5373 + t4656;
t3690 = t3780 * t5375 + t4658;
t3689 = t3779 * t5377 + t4660;
t3688 = t3784 * t5372 + t4616;
t3687 = t3783 * t5374 + t4618;
t3686 = t3782 * t5376 + t4620;
t3685 = t3781 * t5372 + t4617;
t3684 = t3780 * t5374 + t4619;
t3683 = t3779 * t5376 + t4621;
t3682 = t3790 * t4980 + t4636;
t3681 = t3789 * t4981 + t4638;
t3680 = t3788 * t4982 + t4640;
t3679 = t3787 * t4980 + t4637;
t3678 = t3786 * t4981 + t4639;
t3677 = t3785 * t4982 + t4641;
t3676 = (t3787 * t4182 - t3790 * t5606) * t3837;
t3675 = (t3786 * t4181 - t3789 * t5605) * t3836;
t3674 = (t3785 * t4180 - t3788 * t5604) * t3835;
t3673 = t3784 * t4983 + t4642;
t3672 = t3783 * t4984 + t4644;
t3671 = t3782 * t4985 + t4646;
t3670 = t3781 * t4983 + t4643;
t3669 = t3780 * t4984 + t4645;
t3668 = t3779 * t4985 + t4647;
t3667 = (t3781 * t4179 - t3784 * t5603) * t3834;
t3666 = (t3780 * t4178 - t3783 * t5602) * t3833;
t3665 = (t3779 * t4177 - t3782 * t5601) * t3832;
t3664 = t3754 * t3984 + t4034 * t4649;
t3663 = t3753 * t3983 + t4032 * t4651;
t3662 = t3752 * t3982 + t4030 * t4653;
t3661 = t3754 * t4509 + t4034 * t4610;
t3660 = t3753 * t4509 + t4032 * t4612;
t3659 = t3752 * t4509 + t4030 * t4614;
t3658 = t3748 * t3984 - t4034 * t4650;
t3657 = t3747 * t3983 - t4032 * t4652;
t3656 = t3746 * t3982 - t4030 * t4654;
t3655 = t3751 * t3979 + t4028 * t4655;
t3654 = t3750 * t3978 + t4026 * t4657;
t3653 = t3749 * t3977 + t4024 * t4659;
t3652 = t3748 * t4509 - t4034 * t4611;
t3651 = t3747 * t4509 - t4032 * t4613;
t3650 = t3746 * t4509 - t4030 * t4615;
t3649 = t3751 * t4509 + t4028 * t4616;
t3648 = t3750 * t4509 + t4026 * t4618;
t3647 = t3749 * t4509 + t4024 * t4620;
t3646 = t3745 * t3979 - t4028 * t4656;
t3645 = t3744 * t3978 - t4026 * t4658;
t3644 = t3743 * t3977 - t4024 * t4660;
t3643 = t3745 * t4509 - t4028 * t4617;
t3642 = t3744 * t4509 - t4026 * t4619;
t3641 = t3743 * t4509 - t4024 * t4621;
t3640 = t3754 * t5310 + t4034 * t4636;
t3639 = t3753 * t5311 + t4032 * t4638;
t3638 = t3752 * t5312 + t4030 * t4640;
t3637 = t3748 * t5310 - t4034 * t4637;
t3636 = t3747 * t5311 - t4032 * t4639;
t3635 = t3746 * t5312 - t4030 * t4641;
t3634 = t3751 * t5313 + t4028 * t4642;
t3633 = t3750 * t5314 + t4026 * t4644;
t3632 = t3749 * t5315 + t4024 * t4646;
t3631 = t3745 * t5313 - t4028 * t4643;
t3630 = t3744 * t5314 - t4026 * t4645;
t3629 = t3743 * t5315 - t4024 * t4647;
t3628 = Ifges(3,3) * t3778 + t3676 * t3984 + t3742 * t4122;
t3627 = Ifges(3,3) * t3777 + t3675 * t3983 + t3741 * t4121;
t3626 = Ifges(3,3) * t3776 + t3674 * t3982 + t3740 * t4120;
t3625 = t3676 * t4509 + t3742 * t5310 + t3778 * t3984;
t3624 = t3675 * t4509 + t3741 * t5311 + t3777 * t3983;
t3623 = t3674 * t4509 + t3740 * t5312 + t3776 * t3982;
t3622 = Ifges(3,3) * t3775 + t3667 * t3979 + t3739 * t4119;
t3621 = Ifges(3,3) * t3774 + t3666 * t3978 + t3738 * t4118;
t3620 = Ifges(3,3) * t3773 + t3665 * t3977 + t3737 * t4117;
t3619 = t3667 * t4509 + t3739 * t5313 + t3775 * t3979;
t3618 = t3666 * t4509 + t3738 * t5314 + t3774 * t3978;
t3617 = t3665 * t4509 + t3737 * t5315 + t3773 * t3977;
t3616 = t3676 * t5310 + t3742 * t3949 + t3778 * t4122;
t3615 = t3675 * t5311 + t3741 * t3948 + t3777 * t4121;
t3614 = t3674 * t5312 + t3740 * t3947 + t3776 * t4120;
t3613 = t3667 * t5313 + t3739 * t3946 + t3775 * t4119;
t3612 = t3666 * t5314 + t3738 * t3945 + t3774 * t4118;
t3611 = t3665 * t5315 + t3737 * t3944 + t3773 * t4117;
t3598 = t3682 * t5386 + t3700 * t5408 + t3706 * t5344;
t3597 = t3682 * t5387 + t3700 * t5411 + t3706 * t5345;
t3596 = t3681 * t5390 + t3699 * t5409 + t3705 * t5348;
t3595 = t3681 * t5391 + t3699 * t5412 + t3705 * t5349;
t3594 = t3680 * t5394 + t3698 * t5410 + t3704 * t5352;
t3593 = t3680 * t5395 + t3698 * t5413 + t3704 * t5353;
t3592 = t3679 * t5386 + t3697 * t5408 + t3703 * t5344;
t3591 = t3679 * t5387 + t3697 * t5411 + t3703 * t5345;
t3590 = t3678 * t5390 + t3696 * t5409 + t3702 * t5348;
t3589 = t3678 * t5391 + t3696 * t5412 + t3702 * t5349;
t3588 = t3677 * t5394 + t3695 * t5410 + t3701 * t5352;
t3587 = t3677 * t5395 + t3695 * t5413 + t3701 * t5353;
t3586 = t3673 * t5398 + t3688 * t5414 + t3694 * t5356;
t3585 = t3673 * t5399 + t3688 * t5417 + t3694 * t5357;
t3584 = t3672 * t5402 + t3687 * t5415 + t3693 * t5360;
t3583 = t3672 * t5403 + t3687 * t5418 + t3693 * t5361;
t3582 = t3671 * t5406 + t3686 * t5416 + t3692 * t5364;
t3581 = t3671 * t5407 + t3686 * t5419 + t3692 * t5365;
t3580 = t3670 * t5398 + t3685 * t5414 + t3691 * t5356;
t3579 = t3670 * t5399 + t3685 * t5417 + t3691 * t5357;
t3578 = t3669 * t5402 + t3684 * t5415 + t3690 * t5360;
t3577 = t3669 * t5403 + t3684 * t5418 + t3690 * t5361;
t3576 = t3668 * t5406 + t3683 * t5416 + t3689 * t5364;
t3575 = t3668 * t5407 + t3683 * t5419 + t3689 * t5365;
t3574 = t3640 * t5386 + t3661 * t5408 + t3664 * t5344;
t3573 = t3640 * t5387 + t3661 * t5411 + t3664 * t5345;
t3572 = t3639 * t5390 + t3660 * t5409 + t3663 * t5348;
t3571 = t3639 * t5391 + t3660 * t5412 + t3663 * t5349;
t3570 = t3638 * t5394 + t3659 * t5410 + t3662 * t5352;
t3569 = t3638 * t5395 + t3659 * t5413 + t3662 * t5353;
t3568 = t3637 * t5386 + t3652 * t5408 + t3658 * t5344;
t3567 = t3637 * t5387 + t3652 * t5411 + t3658 * t5345;
t3566 = t3636 * t5390 + t3651 * t5409 + t3657 * t5348;
t3565 = t3636 * t5391 + t3651 * t5412 + t3657 * t5349;
t3564 = t3635 * t5394 + t3650 * t5410 + t3656 * t5352;
t3563 = t3635 * t5395 + t3650 * t5413 + t3656 * t5353;
t3562 = t3634 * t5398 + t3649 * t5414 + t3655 * t5356;
t3561 = t3634 * t5399 + t3649 * t5417 + t3655 * t5357;
t3560 = t3633 * t5402 + t3648 * t5415 + t3654 * t5360;
t3559 = t3633 * t5403 + t3648 * t5418 + t3654 * t5361;
t3558 = t3632 * t5406 + t3647 * t5416 + t3653 * t5364;
t3557 = t3632 * t5407 + t3647 * t5419 + t3653 * t5365;
t3556 = t3631 * t5398 + t3643 * t5414 + t3646 * t5356;
t3555 = t3631 * t5399 + t3643 * t5417 + t3646 * t5357;
t3554 = t3630 * t5402 + t3642 * t5415 + t3645 * t5360;
t3553 = t3630 * t5403 + t3642 * t5418 + t3645 * t5361;
t3552 = t3629 * t5406 + t3641 * t5416 + t3644 * t5364;
t3551 = t3629 * t5407 + t3641 * t5419 + t3644 * t5365;
t3550 = t3616 * t5386 + t3625 * t5408 + t3628 * t5344;
t3549 = t3616 * t5387 + t3625 * t5411 + t3628 * t5345;
t3548 = t3615 * t5390 + t3624 * t5409 + t3627 * t5348;
t3547 = t3615 * t5391 + t3624 * t5412 + t3627 * t5349;
t3546 = t3614 * t5394 + t3623 * t5410 + t3626 * t5352;
t3545 = t3614 * t5395 + t3623 * t5413 + t3626 * t5353;
t3544 = t3613 * t5398 + t3619 * t5414 + t3622 * t5356;
t3543 = t3613 * t5399 + t3619 * t5417 + t3622 * t5357;
t3542 = t3612 * t5402 + t3618 * t5415 + t3621 * t5360;
t3541 = t3612 * t5403 + t3618 * t5418 + t3621 * t5361;
t3540 = t3611 * t5406 + t3617 * t5416 + t3620 * t5364;
t3539 = t3611 * t5407 + t3617 * t5419 + t3620 * t5365;
t1 = [t5128 * t5408 + t5126 * t5409 + t5127 * t5410 + t5129 * t5414 + t5130 * t5415 + t5131 * t5416 + (t3581 * t3907 + t3583 * t3909 + t3585 * t3911 + t3593 * t3913 + t3595 * t3915 + t3597 * t3917 - t3686 * t3918 - t3687 * t3919 - t3688 * t3920 - t3698 * t3921 - t3699 * t3922 - t3700 * t3923) * t4562 + (t3597 * t3942 + t3598 * t3806 + t3700 * t3943 + t3583 * t3934 + t3584 * t3802 + t3687 * t3935 + t3585 * t3936 + t3586 * t3803 + t3688 * t3937 + t3593 * t3938 + t3594 * t3804 + t3698 * t3939 + t3595 * t3940 + t3596 * t3805 + t3699 * t3941 + t3581 * t3932 + t3582 * t3801 + t3686 * t3933 + (-t4562 * t4716 - t3897) * t4502 + (t4562 * t4717 - t3896) * t4499) * t4561 + (t3595 * t3829 + t3596 * t3799 + t3699 * t3828 + t3597 * t3831 + t3598 * t3800 + t3700 * t3830 + t3583 * t3823 + t3584 * t3796 + t3687 * t3822 + t3585 * t3825 + t3586 * t3797 + t3688 * t3824 + t3593 * t3827 + t3594 * t3798 + t3698 * t3826 - t4716 * t4213 - t4717 * t4214 + t3581 * t3821 + t3582 * t3795 + t3686 * t3820 + (-t3896 * t4502 + t3897 * t4499) * t4501) * t4560 + t4584 + t4585 + t4586 + t4587 + t4588 + t4589; t5130 * t5418 + t5126 * t5412 + (t3575 * t3907 + t3577 * t3909 + t3579 * t3911 + t3587 * t3913 + t3589 * t3915 + t3591 * t3917 - t3683 * t3918 - t3684 * t3919 - t3685 * t3920 - t3695 * t3921 - t3696 * t3922 - t3697 * t3923 + t3897) * t4562 + (t3589 * t3829 + t3590 * t3799 + t3696 * t3828 + t3591 * t3831 + t3592 * t3800 + t3697 * t3830 + t3577 * t3823 + t3578 * t3796 + t3684 * t3822 + t3579 * t3825 + t3580 * t3797 + t3685 * t3824 + t3587 * t3827 + t3588 * t3798 + t3695 * t3826 + t3575 * t3821 + t3576 * t3795 + t3683 * t3820 + t3897 * t4498 + t4170 * t4213 + (t4561 * t4717 - t5634) * t4501) * t4560 + (-t5635 + t4170 * t5219 + t3591 * t3942 + t3592 * t3806 + t3697 * t3943 + t3579 * t3936 + t3580 * t3803 + t3685 * t3937 + t3587 * t3938 + t3588 * t3804 + t3695 * t3939 + t3589 * t3940 + t3590 * t3805 + t3696 * t3941 + t3575 * t3932 + t3576 * t3801 + t3683 * t3933 + t3577 * t3934 + t3578 * t3802 + t3684 * t3935) * t4561 + t5131 * t5419 + t5127 * t5413 + t5128 * t5411 + t5546 + t5547 + t5548 + t5549 + t5550 + t5129 * t5417 + t5551; t5126 + t5127 + t5128 + t5129 + t5130 + t5131 + (t3683 * t3907 + t3684 * t3909 + t3685 * t3911 + t3695 * t3913 + t3696 * t3915 + t3697 * t3917 + t3896 + (-t3918 - t3919 - t3920 - t3921 - t3922 - t3923) * t4509) * t4562 + (t3683 * t3932 + t3684 * t3934 + t3685 * t3936 + t3686 * t3801 + t3687 * t3802 + t3688 * t3803 + t3695 * t3938 + t3696 * t3940 + t3697 * t3942 + t3698 * t3804 + t3699 * t3805 + t3700 * t3806 + t5634 + t4170 * t5229 + (t3943 + t3937 + t3939 + t3941 + t3933 + t3935) * t4509) * t4561 + (t3696 * t3829 + t3699 * t3799 + t3697 * t3831 + t3700 * t3800 + t3684 * t3823 + t3687 * t3796 + t3685 * t3825 + t3688 * t3797 + t3695 * t3827 + t3698 * t3798 + t3683 * t3821 + t3686 * t3795 + t3896 * t4498 - t4170 * t4214 + (t4561 * t4716 - t5635) * t4501 + (t3828 + t3830 + t3822 + t3824 + t3826 + t3820) * t4509) * t4560; t5128 * t3748 + t5126 * t3747 + t5127 * t3746 + t5129 * t3745 + t5130 * t3744 + t5131 * t3743 - t5551 * t4034 - t5550 * t4032 - t5549 * t4030 - t5548 * t4028 - t5547 * t4026 - t5546 * t4024 + (t3551 * t3907 + t3553 * t3909 + t3555 * t3911 + t3563 * t3913 + t3565 * t3915 + t3567 * t3917 - t3641 * t3918 - t3642 * t3919 - t3643 * t3920 - t3650 * t3921 - t3651 * t3922 - t3652 * t3923 + t3925) * t4562 + (t3567 * t3942 + t3568 * t3806 + t3652 * t3943 + t3555 * t3936 + t3556 * t3803 + t3643 * t3937 + t3563 * t3938 + t3564 * t3804 + t3650 * t3939 + t3565 * t3940 + t3566 * t3805 + t3651 * t3941 + t3551 * t3932 + t3552 * t3801 + t3641 * t3933 + t3553 * t3934 + t3554 * t3802 + t3642 * t3935 + (t3924 * t4562 + t3858) * t4502 + (-t3895 * t4562 + t3857) * t4499) * t4561 + (t3565 * t3829 + t3566 * t3799 + t3651 * t3828 + t3567 * t3831 + t3568 * t3800 + t3652 * t3830 + t3553 * t3823 + t3554 * t3796 + t3642 * t3822 + t3555 * t3825 + t3556 * t3797 + t3643 * t3824 + t3563 * t3827 + t3564 * t3798 + t3650 * t3826 + t3551 * t3821 + t3552 * t3795 + t3641 * t3820 + t3895 * t4214 + t3924 * t4213 + t3925 * t4498 + (t3857 * t4502 - t3858 * t4499 + (t4219 * t4467 + 0.2e1 * t4369 * t5242 + Ifges(4,3)) * t4561) * t4501) * t4560; t5128 * t3754 + t5126 * t3753 + t5127 * t3752 + t5129 * t3751 + t5130 * t3750 + t5131 * t3749 + t4584 * t4034 + t4585 * t4032 + t4586 * t4030 + t4587 * t4028 + t4588 * t4026 + t4589 * t4024 + (t3791 * t4502 + t3793 * t4499 + t3573 * t3942 + t3574 * t3806 + t3661 * t3943 + t3561 * t3936 + t3562 * t3803 + t3649 * t3937 + t3569 * t3938 + t3570 * t3804 + t3659 * t3939 + t3571 * t3940 + t3572 * t3805 + t3660 * t3941 + t3557 * t3932 + t3558 * t3801 + t3647 * t3933 + t3559 * t3934 + t3560 * t3802 + t3648 * t3935) * t4561 + (t3571 * t3829 + t3572 * t3799 + t3660 * t3828 + t3573 * t3831 + t3574 * t3800 + t3661 * t3830 + t3559 * t3823 + t3560 * t3796 + t3648 * t3822 + t3561 * t3825 + t3562 * t3797 + t3649 * t3824 + t3569 * t3827 + t3570 * t3798 + t3659 * t3826 + t3557 * t3821 + t3558 * t3795 + t3647 * t3820 + t3807 * t4498 + t3866 * t4214 + t3887 * t4213 + (-t3791 * t4499 + t3793 * t4502 + t3895 * t4561) * t4501) * t4560 + (t3573 * t3917 - t3661 * t3923 + t3807 + t3557 * t3907 - t3647 * t3918 + t3559 * t3909 - t3648 * t3919 + t3561 * t3911 - t3649 * t3920 + t3569 * t3913 - t3659 * t3921 + t3571 * t3915 - t3660 * t3922 + (-t3866 * t4499 + t3887 * t4502) * t4561) * t4562; t4850 * t3778 + t4851 * t3777 + t4852 * t3776 + t4856 * t3775 + t4857 * t3774 + t4858 * t3773 + t4853 * t3742 + t4854 * t3741 + t4855 * t3740 + t4859 * t3739 + t4860 * t3738 + t4861 * t3737 + t5128 * t3676 + t5126 * t3675 + t5127 * t3674 + t5129 * t3667 + t5130 * t3666 + t5131 * t3665 + (t3792 * t4502 + t3794 * t4499 + t3549 * t3942 + t3550 * t3806 + t3625 * t3943 + t3543 * t3936 + t3544 * t3803 + t3619 * t3937 + t3545 * t3938 + t3546 * t3804 + t3623 * t3939 + t3547 * t3940 + t3548 * t3805 + t3624 * t3941 + t3539 * t3932 + t3540 * t3801 + t3617 * t3933 + t3541 * t3934 + t3542 * t3802 + t3618 * t3935) * t4561 + (t3547 * t3829 + t3548 * t3799 + t3624 * t3828 + t3549 * t3831 + t3550 * t3800 + t3625 * t3830 + t3541 * t3823 + t3542 * t3796 + t3618 * t3822 + t3543 * t3825 + t3544 * t3797 + t3619 * t3824 + t3545 * t3827 + t3546 * t3798 + t3623 * t3826 + t3539 * t3821 + t3540 * t3795 + t3617 * t3820 + t3838 * t4498 + t3887 * t4214 + t3888 * t4213 + (-t3792 * t4499 + t3794 * t4502 + t3924 * t4561) * t4501) * t4560 + (t3549 * t3917 - t3625 * t3923 + t3539 * t3907 - t3617 * t3918 + t3838 + t3541 * t3909 - t3618 * t3919 + t3543 * t3911 - t3619 * t3920 + t3545 * t3913 - t3623 * t3921 + t3547 * t3915 - t3624 * t3922 + (-t3887 * t4499 + t3888 * t4502) * t4561) * t4562;];
taucX  = t1;
