% Calculate minimal parameter regressor of inverse dynamics forces for
% P6PRRRRR6V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRRRRR6V2G1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [6x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-09-11 16:13
% Revision: 7993d029b5937b704dcf3fc7d8ae322038cdcbdd (2019-09-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P6PRRRRR6V2G1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P6PRRRRR6V2G1A0_invdyn_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-09-11 15:04:57
% EndTime: 2019-09-11 15:30:28
% DurationCPUTime: 1569.83s
% Computational Cost: add. (16399718->3667), mult. (40930463->5772), div. (61200->84), fcn. (27427392->50), ass. (0->2171)
t11824 = sin(pkin(6));
t11776 = t11824 * pkin(9);
t11828 = cos(pkin(6));
t13011 = pkin(9) * t11828;
t11769 = pkin(8) + t13011;
t11825 = sin(pkin(5));
t11875 = xP(5);
t11807 = sin(t11875);
t11869 = xDP(6);
t11871 = xDP(4);
t11701 = t11807 * t11871 + t11869;
t11874 = xP(6);
t11806 = sin(t11874);
t11876 = xP(4);
t11808 = sin(t11876);
t11809 = cos(t11874);
t11810 = cos(t11875);
t11811 = cos(t11876);
t11872 = xDP(2);
t11884 = koppelP(6,2);
t11890 = koppelP(6,1);
t12056 = t11806 * t11701;
t12207 = -t11807 * t11869 - t11871;
t11870 = xDP(5);
t12592 = t11870 * t11890;
t12598 = t11870 * t11884;
t11878 = koppelP(6,3);
t12604 = t11870 * t11878;
t12611 = t11869 * t11890;
t12737 = t11810 * t11878;
t12748 = t11809 * t11890;
t10948 = t11872 + ((t11810 * t12592 + t12207 * t11884) * t11809 + (-t11806 * t12611 + t12604) * t11807 - t11806 * (t11810 * t12598 + t11871 * t11890)) * t11808 + (t11701 * t12748 - t11871 * t12737 - t11884 * t12056) * t11811;
t11829 = cos(pkin(5));
t11840 = sin(qJ(2,6));
t11830 = cos(pkin(4));
t11846 = cos(qJ(2,6));
t12651 = t11830 * t11846;
t11826 = sin(pkin(4));
t12688 = t11825 * t11826;
t11873 = xDP(1);
t12731 = t11810 * t11884;
t13088 = t11806 * (t11807 * t12598 - t11810 * t12611) - (t11807 * t12592 + t11869 * t12731) * t11809 + t11810 * t12604 + t11873;
t10780 = (t10948 * t12651 - t11840 * t13088) * t11829 - t10948 * t12688;
t10819 = (t10948 * t11840 + t12651 * t13088) * t11829 - t13088 * t12688;
t11833 = legFrame(6,3);
t11777 = sin(t11833);
t11783 = cos(t11833);
t11823 = sin(pkin(10));
t11827 = cos(pkin(10));
t10684 = (t10780 * t11823 + t10819 * t11827) * t11783 + (t10780 * t11827 - t10819 * t11823) * t11777;
t12654 = t11830 * t11840;
t10894 = t10948 * t11846 - t12654 * t13088;
t10897 = t10948 * t12654 + t11846 * t13088;
t10726 = (t10894 * t11827 - t10897 * t11823) * t11783 - t11777 * (t10894 * t11823 + t10897 * t11827);
t11839 = sin(qJ(3,6));
t11845 = cos(qJ(3,6));
t10651 = (pkin(3) * t10684 - t10726 * t11776) * t11845 + t11839 * (pkin(3) * t10726 + t10684 * t11776);
t12687 = t11825 * t11829;
t12322 = t11769 * t12687;
t11587 = t11830 * t12322;
t12685 = t11825 * t11840;
t11751 = pkin(2) * t12685;
t11815 = t11829 ^ 2;
t13051 = t11815 - 0.1e1;
t12480 = t11769 * t13051;
t11112 = t11587 + (t11846 * t12480 + t11751) * t11826;
t12220 = t13051 * t11830;
t12663 = t11829 * t11846;
t12300 = t11825 * t12663;
t11431 = t11826 * t12300 - t12220;
t11898 = pkin(3) ^ 2;
t11896 = pkin(9) ^ 2;
t11813 = t11828 ^ 2;
t12586 = t11896 * t11813;
t12221 = -t11896 + t12586;
t11734 = t11898 + t12221;
t12344 = t11734 * t12688;
t11505 = t11840 * t12344;
t12497 = t11826 * t11776;
t12185 = t11825 * t12497;
t12098 = 0.2e1 * t12185;
t12059 = pkin(3) * t12098;
t11613 = t11840 * t12059;
t13028 = pkin(3) * t11830;
t11773 = pkin(2) * t13028;
t11816 = t11845 ^ 2;
t12784 = (t11828 + 0.1e1) * (t11828 - 0.1e1);
t12499 = pkin(9) * t12784;
t12192 = t11825 * t12499;
t12069 = t11840 * t12192;
t12009 = t11826 * t12069;
t11774 = pkin(2) * t11776;
t12251 = t11830 * t11774;
t12558 = pkin(3) * t11776;
t12483 = -0.2e1 * t12558;
t13030 = pkin(3) * t11824;
t10834 = (t11431 * t12483 + t11505) * t11816 + ((t11431 * t11734 + t11613) * t11839 - t12251 + pkin(3) * t11112) * t11845 + (t11112 * t11776 + t11773) * t11839 + pkin(9) * (t11431 * t13030 - t12009);
t12972 = t10651 / t10834;
t12451 = t11825 * t12972;
t12138 = t11769 * t12451;
t10642 = t12138 * t11776;
t11631 = t11806 * t11884 - t12748;
t12778 = t11807 * t11878;
t11407 = t11631 * t11810 - t12778;
t11637 = t11806 * t11890 + t11809 * t11884;
t12724 = t11811 * t11870;
t12779 = t11807 * t11811;
t11413 = t11631 * t11807 + t12737;
t13094 = -t11413 * t11808 + t11637 * t11811;
t12867 = t13094 * t11871;
t10973 = -(-t11631 * t11808 + t11637 * t12779) * t11869 - t11407 * t12724 - t12867;
t12764 = t11808 * t11870;
t12772 = t11808 * t11637;
t11136 = -t11413 * t11811 - t12772;
t12861 = t11136 * t11871;
t10984 = (t11631 * t11811 + t11807 * t12772) * t11869 + t11407 * t12764 - t12861;
t12738 = t11810 * t11871;
t11436 = -t11807 * t12724 - t11808 * t12738;
t11437 = t11807 * t12764 - t11811 * t12738;
t11851 = xDDP(6);
t11852 = xDDP(5);
t11856 = xDDP(1);
t10708 = t11856 + (-t11136 * t11811 - t11808 * t13094) * t11852 + (-t11136 * t11437 - t11436 * t13094) * t11869 + ((-t10973 - t12867) * t11811 + (t10984 + t12861) * t11808) * t11870 + ((t11136 * t11808 - t11811 * t13094) * t11851 + (t10973 * t11808 + t10984 * t11811) * t11869) * t11810;
t12740 = t11810 * t11869;
t11149 = -t11413 * t11870 + t11637 * t12740;
t11382 = -t11806 * t12731 + t11810 * t12748 + t12778;
t11855 = xDDP(2);
t12605 = t11870 * t11871;
t11913 = t11436 * t11869 + t11808 * t11852 + (t11810 * t11851 + t12605) * t11811;
t11853 = xDDP(4);
t12612 = t11869 * t11870;
t11957 = t11807 * t11851 + t11810 * t12612 + t11853;
t12742 = t11810 * t11811;
t10756 = t11855 + t10973 * t11871 - t11149 * t12764 + (t10973 * t11807 - t11149 * t12742) * t11869 + t11957 * t11136 + t11913 * t11382;
t12343 = t11734 * t12687;
t11504 = t11839 * t12343;
t11450 = t11846 * t11504;
t12799 = t11769 * t11846;
t12328 = t11815 * t12799;
t12577 = pkin(3) * t12328 + t11450;
t12709 = t11824 * t11839;
t11745 = pkin(9) * t12709;
t11721 = 0.2e1 * t11745 + pkin(2);
t12368 = t11721 * t12685;
t13100 = t12368 - t12799;
t11067 = (t13100 * pkin(3) + t12577) * t11826;
t12783 = (t11829 + 0.1e1) * (t11829 - 0.1e1);
t12093 = t12558 * t12783;
t12023 = t11830 * t12093;
t11503 = 0.2e1 * t12023;
t12307 = t11824 * t12663;
t12183 = pkin(9) * t12307;
t12092 = pkin(3) * t12183;
t12639 = t11840 * t11734;
t12374 = (t12092 - t12639 / 0.2e1) * t12688;
t11118 = (t11503 - 0.2e1 * t12374) * t11816;
t12710 = t11824 * t11829;
t12496 = pkin(9) * t12710;
t12184 = t11825 * t12496;
t12070 = t11769 * t12184;
t11467 = t11839 * t12070;
t12329 = t11769 * t12783;
t11571 = pkin(3) * t12329;
t13014 = pkin(9) * t11813;
t12482 = pkin(9) - t13014;
t11644 = pkin(2) * t12709 + t12482;
t11797 = pkin(2) * t11839;
t11735 = -t11898 + t12221;
t11737 = pkin(2) * t11745;
t12803 = t11769 * t11825;
t12514 = pkin(3) * t12803;
t11925 = ((-t11735 + t11737) * t11829 - t11839 * t12514) * t12972;
t12321 = t11896 * t12784;
t11970 = (t11815 * t12321 - t11898) * t11830;
t11971 = -t12221 * t11815 + t11898;
t12585 = 0.2e1 * t11776;
t12104 = t12585 * t12972;
t12063 = pkin(3) * t12104;
t10906 = t10948 * t11827 - t11823 * t13088;
t10912 = t10948 * t11823 + t13088 * t11827;
t12666 = t11829 * t11839;
t11500 = pkin(3) * t12666 - t12803;
t11373 = t11845 * t12496 - t11500;
t11722 = t11745 + pkin(2);
t13027 = pkin(3) * t11845;
t11650 = t11722 + t13027;
t11161 = -t11373 * t11846 + t11650 * t11840;
t12055 = t11830 * (t11373 * t11840 + t11846 * t11650);
t10717 = -(t10906 * t11777 + t10912 * t11783) * t12055 - (t10906 * t11783 - t10912 * t11777) * t11161;
t13020 = pkin(9) * t11644;
t11265 = t11721 * t13027 + t11734 * t11816 + t13020;
t11191 = t11265 * t12685;
t12481 = t11734 * t13051;
t11643 = pkin(3) * t12322;
t12562 = t11774 - t11643;
t11195 = -t11839 * t12481 - t12562;
t13031 = pkin(3) * t11769;
t12265 = t13051 * t13031;
t11286 = t11504 + t12265;
t11744 = pkin(3) * t12687;
t11329 = t11839 * t12480 + t11744;
t12060 = 0.2e1 * t12093;
t11522 = t11816 * t12060;
t13068 = -0.2e1 * pkin(3);
t12058 = t12184 * t13068;
t11616 = t11816 * t12058;
t11713 = t11797 + t11776;
t12498 = t11815 * t11776;
t12250 = pkin(3) * t12498;
t11996 = pkin(3) * t11713 + t11467 - t12250;
t10858 = (t11195 * t11845 + t11522 + t11996) * t11830 + ((t11286 * t11845 + t11329 * t11776 + t11616) * t11846 + t11191) * t11826;
t10852 = 0.1e1 / t10858;
t12960 = t10717 * t10852;
t12199 = t12960 * t11776;
t12096 = pkin(3) * t12199;
t12097 = t11776 - t12498;
t12105 = t11829 * t12321;
t12641 = t11839 * t11846;
t12804 = t11769 * t11824;
t12111 = t12641 * t12804;
t12117 = t11840 * t12329;
t11682 = t11830 * t11734;
t12118 = t11682 * t12783;
t12191 = t11846 * t12499;
t12708 = t11824 * t11840;
t12495 = pkin(9) * t12708;
t12249 = pkin(3) * t12495;
t12526 = pkin(3) * t12972;
t12254 = pkin(2) * t12526;
t11459 = t11644 * t12685;
t12171 = pkin(3) * t12300;
t12570 = t11815 * t12111 + t11824 * t12171;
t11257 = t11996 * t11830;
t12584 = t11118 + t11257;
t13012 = pkin(9) * t11826;
t12273 = (t11459 - t12111 + t12570) * t13012 + t12584;
t12288 = t11829 * t12972;
t12336 = t11734 * t12663;
t12435 = t11825 * t12960;
t12436 = t11735 * t12960;
t12437 = t11734 * t12960;
t12452 = t11734 * t12972;
t13008 = t11840 * pkin(3);
t12505 = t11829 * t13008;
t12520 = t11721 * t13008;
t12642 = t11839 * t11845;
t12667 = t11829 * t11830;
t12676 = t11826 * t11846;
t11683 = t11839 * t11734;
t12356 = t11815 * t11683;
t12855 = (-t11683 + t12356 + t12562) * t11830;
t12879 = (-t12118 + (0.2e1 * t12249 + t12336) * t12688) * t11816;
t12003 = t11826 * t12058;
t11743 = t11824 * t13028;
t11736 = pkin(9) * t11743;
t12200 = t11815 * t11743;
t13067 = 0.2e1 * pkin(9);
t12564 = t12200 * t13067 - 0.2e1 * t11736;
t11085 = (t11846 * t12003 + t11505 + t12564) * t11816;
t11972 = pkin(9) * (t11743 - t12200);
t12057 = pkin(3) * t11587 - t12251;
t12072 = t13051 * t11682;
t11519 = t11751 - t12799;
t12078 = t11519 + t12328;
t12571 = t11830 * t12070 + t11773;
t10789 = 0.1e1 / (t11085 + ((t11613 - t12072) * t11839 + t12057) * t11845 + t12571 * t11839 + t11972 + ((t12078 * pkin(3) + t11450) * t11845 + (-t12069 + (t12078 * t11839 + t12171) * t11824) * pkin(9)) * t11826);
t11537 = t11777 * t11827 + t11783 * t11823;
t11543 = -t11777 * t11823 + t11783 * t11827;
t11209 = -t11537 * t12654 + t11543 * t11846;
t11984 = (t11537 * t12651 + t11543 * t11840) * t11829 - t11537 * t12688;
t10861 = (pkin(3) * t11984 - t11209 * t11776) * t11845 + t11839 * (pkin(3) * t11209 + t11984 * t11776);
t12933 = t10789 * t10861;
t13050 = 0.2e1 * t11815 - 0.2e1;
t11210 = t11537 * t11846 + t11543 * t12654;
t11216 = -t11537 * t11840 + t11543 * t12651;
t11391 = t11543 * t12185;
t12213 = (-pkin(3) * t11210 + t11216 * t12496 - t11391) * t11839 + (t11210 * t11776 + (t11216 * t11829 - t11543 * t12688) * pkin(3)) * t11845;
t13133 = t10789 * t12213;
t10519 = t10708 * t13133 + t10756 * t12933 - ((((t11840 * t12063 + t11846 * t12437) * t11829 + 0.2e1 * t11840 * t12096 + t11846 * t12452) * t12688 - t12118 * t12960) * t11816 + (((t11846 * t12254 + (-(t11840 * t12452 - 0.2e1 * t11846 * t12096) * t11829 + t11846 * t12063 - t11840 * t12437) * t11839) * t11825 - t12117 * t12526) * t11826 - t11830 * (t10642 + pkin(3) * (t13050 * t11839 * t12199 + pkin(2) * t12288))) * t11845 + ((-pkin(3) * t12708 - t11829 * t12191) * t12435 + (-t11825 * t12191 + ((pkin(2) * t12641 - t12505) * t11825 - t11839 * t12117) * t11824) * t12972) * t13012 - (t11971 * t12960 + t11925) * t11830) / (t11118 + (((t11839 * t12336 + t12520) * t11825 + t11846 * t11571) * t11826 - t12855) * t11845 + ((pkin(3) * t12307 + t11644 * t11840) * t11825 + t12111 * t12783) * t13012 + t11830 * (t11467 + pkin(3) * (t11797 + t12097))) * t12972 - ((-t11825 * t12676 + t12667) * t12436 + (t12879 + 0.2e1 * (-t12023 + t12374) * t12642 - (t11846 * t12105 + t12249) * t12688 + t11970) * t12972) / ((t11067 - t12855) * t11845 + t12273) * t12960;
t12975 = t10651 ^ 2 / t10834 ^ 2;
t10486 = t10519 * t11845 + t12666 * t12975;
t11155 = t11195 * t11830;
t12703 = t11824 * t11846;
t10846 = 0.1e1 / ((t11155 + t11826 * (pkin(3) * t12368 + t11286 * t11846)) * t11845 + (t11329 * t12703 + t11459) * t13012 + t12584);
t11306 = t11500 * t11846 + t11722 * t11840;
t11592 = t12183 - t13008;
t11589 = pkin(3) * t11846 + t11829 * t12495;
t12831 = t11589 * t11830;
t12849 = (-t11500 * t11840 + t11722 * t11846) * t11830;
t10930 = (t11537 * t11592 + t11543 * t12831) * t11845 - t11306 * t11537 + t11543 * t12849;
t13170 = t10846 * t10930;
t13243 = t10486 * t13170;
t11885 = koppelP(5,2);
t11891 = koppelP(5,1);
t12591 = t11870 * t11891;
t12597 = t11870 * t11885;
t11879 = koppelP(5,3);
t12603 = t11870 * t11879;
t12610 = t11869 * t11891;
t12736 = t11810 * t11879;
t12747 = t11809 * t11891;
t10949 = t11872 + ((t11810 * t12591 + t12207 * t11885) * t11809 + (-t11806 * t12610 + t12603) * t11807 - t11806 * (t11810 * t12597 + t11871 * t11891)) * t11808 + (t11701 * t12747 - t11871 * t12736 - t11885 * t12056) * t11811;
t11842 = sin(qJ(2,5));
t11848 = cos(qJ(2,5));
t12650 = t11830 * t11848;
t12730 = t11810 * t11885;
t13089 = t11806 * (t11807 * t12597 - t11810 * t12610) - (t11807 * t12591 + t11869 * t12730) * t11809 + t11810 * t12603 + t11873;
t10781 = (t10949 * t12650 - t11842 * t13089) * t11829 - t10949 * t12688;
t10820 = (t10949 * t11842 + t12650 * t13089) * t11829 - t13089 * t12688;
t11834 = legFrame(5,3);
t11778 = sin(t11834);
t11784 = cos(t11834);
t10685 = (t10781 * t11823 + t10820 * t11827) * t11784 + (t10781 * t11827 - t10820 * t11823) * t11778;
t12653 = t11830 * t11842;
t10895 = t10949 * t11848 - t12653 * t13089;
t10898 = t10949 * t12653 + t11848 * t13089;
t10727 = (t10895 * t11827 - t10898 * t11823) * t11784 - t11778 * (t10895 * t11823 + t10898 * t11827);
t11841 = sin(qJ(3,5));
t11847 = cos(qJ(3,5));
t10652 = (pkin(3) * t10685 - t10727 * t11776) * t11847 + t11841 * (pkin(3) * t10727 + t10685 * t11776);
t12684 = t11825 * t11842;
t11752 = pkin(2) * t12684;
t11113 = t11587 + (t11848 * t12480 + t11752) * t11826;
t12662 = t11829 * t11848;
t12299 = t11825 * t12662;
t11432 = t11826 * t12299 - t12220;
t11507 = t11842 * t12344;
t11614 = t11842 * t12059;
t11817 = t11847 ^ 2;
t12068 = t11842 * t12192;
t12008 = t11826 * t12068;
t10835 = (t11432 * t12483 + t11507) * t11817 + ((t11432 * t11734 + t11614) * t11841 - t12251 + pkin(3) * t11113) * t11847 + (t11113 * t11776 + t11773) * t11841 + pkin(9) * (t11432 * t13030 - t12008);
t12971 = t10652 / t10835;
t12449 = t11825 * t12971;
t12136 = t11769 * t12449;
t10643 = t12136 * t11776;
t11632 = t11806 * t11885 - t12747;
t12777 = t11807 * t11879;
t11408 = t11632 * t11810 - t12777;
t11638 = t11806 * t11891 + t11809 * t11885;
t11414 = t11632 * t11807 + t12736;
t13095 = -t11414 * t11808 + t11638 * t11811;
t12866 = t13095 * t11871;
t10975 = -(-t11632 * t11808 + t11638 * t12779) * t11869 - t11408 * t12724 - t12866;
t12771 = t11808 * t11638;
t11137 = -t11414 * t11811 - t12771;
t12860 = t11137 * t11871;
t10985 = (t11632 * t11811 + t11807 * t12771) * t11869 + t11408 * t12764 - t12860;
t10709 = t11856 + (-t11137 * t11811 - t11808 * t13095) * t11852 + (-t11137 * t11437 - t11436 * t13095) * t11869 + ((-t10975 - t12866) * t11811 + (t10985 + t12860) * t11808) * t11870 + ((t11137 * t11808 - t11811 * t13095) * t11851 + (t10975 * t11808 + t10985 * t11811) * t11869) * t11810;
t11150 = -t11414 * t11870 + t11638 * t12740;
t11383 = -t11806 * t12730 + t11810 * t12747 + t12777;
t10757 = t11855 + t10975 * t11871 - t11150 * t12764 + (t10975 * t11807 - t11150 * t12742) * t11869 + t11957 * t11137 + t11913 * t11383;
t11506 = t11841 * t12343;
t11451 = t11848 * t11506;
t12798 = t11769 * t11848;
t12327 = t11815 * t12798;
t12576 = pkin(3) * t12327 + t11451;
t12707 = t11824 * t11841;
t11747 = pkin(9) * t12707;
t11723 = 0.2e1 * t11747 + pkin(2);
t12367 = t11723 * t12684;
t13101 = t12367 - t12798;
t11068 = (pkin(3) * t13101 + t12576) * t11826;
t12306 = t11824 * t12662;
t12182 = pkin(9) * t12306;
t12091 = pkin(3) * t12182;
t12635 = t11842 * t11734;
t12373 = (t12091 - t12635 / 0.2e1) * t12688;
t11119 = (t11503 - 0.2e1 * t12373) * t11817;
t11468 = t11841 * t12070;
t11645 = pkin(2) * t12707 + t12482;
t11798 = pkin(2) * t11841;
t11738 = pkin(2) * t11747;
t11924 = ((-t11735 + t11738) * t11829 - t11841 * t12514) * t12971;
t12103 = t12585 * t12971;
t12062 = pkin(3) * t12103;
t10907 = t10949 * t11827 - t11823 * t13089;
t10913 = t10949 * t11823 + t13089 * t11827;
t12665 = t11829 * t11841;
t11501 = pkin(3) * t12665 - t12803;
t11374 = t11847 * t12496 - t11501;
t11724 = t11747 + pkin(2);
t13026 = pkin(3) * t11847;
t11651 = t11724 + t13026;
t11162 = -t11374 * t11848 + t11651 * t11842;
t12054 = t11830 * (t11374 * t11842 + t11848 * t11651);
t10718 = -(t10907 * t11778 + t10913 * t11784) * t12054 - t11162 * (t10907 * t11784 - t10913 * t11778);
t13019 = pkin(9) * t11645;
t11266 = t11723 * t13026 + t11734 * t11817 + t13019;
t11192 = t11266 * t12684;
t11197 = -t11841 * t12481 - t12562;
t11287 = t11506 + t12265;
t11330 = t11841 * t12480 + t11744;
t11523 = t11817 * t12060;
t11617 = t11817 * t12058;
t11714 = t11798 + t11776;
t11995 = pkin(3) * t11714 + t11468 - t12250;
t10859 = (t11197 * t11847 + t11523 + t11995) * t11830 + ((t11287 * t11847 + t11330 * t11776 + t11617) * t11848 + t11192) * t11826;
t10854 = 0.1e1 / t10859;
t12959 = t10718 * t10854;
t12198 = t12959 * t11776;
t12095 = pkin(3) * t12198;
t12637 = t11841 * t11848;
t12110 = t12637 * t12804;
t12116 = t11842 * t12329;
t12190 = t11848 * t12499;
t12706 = t11824 * t11842;
t12494 = pkin(9) * t12706;
t12248 = pkin(3) * t12494;
t12525 = pkin(3) * t12971;
t12253 = pkin(2) * t12525;
t11460 = t11645 * t12684;
t12169 = pkin(3) * t12299;
t12569 = t11815 * t12110 + t11824 * t12169;
t11258 = t11995 * t11830;
t12583 = t11119 + t11258;
t12272 = (t11460 - t12110 + t12569) * t13012 + t12583;
t12287 = t11829 * t12971;
t12335 = t11734 * t12662;
t12430 = t11825 * t12959;
t12431 = t11735 * t12959;
t12432 = t11734 * t12959;
t12450 = t11734 * t12971;
t13007 = t11842 * pkin(3);
t12504 = t11829 * t13007;
t12519 = t11723 * t13007;
t12638 = t11841 * t11847;
t12675 = t11826 * t11848;
t11684 = t11841 * t11734;
t12355 = t11815 * t11684;
t12854 = (-t11684 + t12355 + t12562) * t11830;
t12878 = (-t12118 + (0.2e1 * t12248 + t12335) * t12688) * t11817;
t11086 = (t11848 * t12003 + t11507 + t12564) * t11817;
t11520 = t11752 - t12798;
t12077 = t11520 + t12327;
t10790 = 0.1e1 / (t11086 + ((t11614 - t12072) * t11841 + t12057) * t11847 + t12571 * t11841 + t11972 + ((t12077 * pkin(3) + t11451) * t11847 + (-t12068 + (t12077 * t11841 + t12169) * t11824) * pkin(9)) * t11826);
t11538 = t11778 * t11827 + t11784 * t11823;
t11544 = -t11778 * t11823 + t11784 * t11827;
t11211 = -t11538 * t12653 + t11544 * t11848;
t11983 = (t11538 * t12650 + t11544 * t11842) * t11829 - t11538 * t12688;
t10864 = (pkin(3) * t11983 - t11211 * t11776) * t11847 + t11841 * (pkin(3) * t11211 + t11983 * t11776);
t12929 = t10790 * t10864;
t11212 = t11538 * t11848 + t11544 * t12653;
t11218 = -t11538 * t11842 + t11544 * t12650;
t11392 = t11544 * t12185;
t12212 = (-pkin(3) * t11212 + t11218 * t12496 - t11392) * t11841 + (t11212 * t11776 + (t11218 * t11829 - t11544 * t12688) * pkin(3)) * t11847;
t13132 = t10790 * t12212;
t10520 = t10709 * t13132 + t10757 * t12929 - ((((t11842 * t12062 + t11848 * t12432) * t11829 + 0.2e1 * t11842 * t12095 + t11848 * t12450) * t12688 - t12118 * t12959) * t11817 + (((t11848 * t12253 + (-(t11842 * t12450 - 0.2e1 * t11848 * t12095) * t11829 + t11848 * t12062 - t11842 * t12432) * t11841) * t11825 - t12116 * t12525) * t11826 - t11830 * (t10643 + pkin(3) * (t13050 * t11841 * t12198 + pkin(2) * t12287))) * t11847 + ((-pkin(3) * t12706 - t11829 * t12190) * t12430 + (-t11825 * t12190 + ((pkin(2) * t12637 - t12504) * t11825 - t11841 * t12116) * t11824) * t12971) * t13012 - (t11971 * t12959 + t11924) * t11830) / (t11119 + (((t11841 * t12335 + t12519) * t11825 + t11848 * t11571) * t11826 - t12854) * t11847 + ((pkin(3) * t12306 + t11645 * t11842) * t11825 + t12110 * t12783) * t13012 + t11830 * (t11468 + pkin(3) * (t11798 + t12097))) * t12971 - ((-t11825 * t12675 + t12667) * t12431 + (t12878 + 0.2e1 * (-t12023 + t12373) * t12638 - (t11848 * t12105 + t12248) * t12688 + t11970) * t12971) / ((t11068 - t12854) * t11847 + t12272) * t12959;
t12974 = t10652 ^ 2 / t10835 ^ 2;
t10487 = t10520 * t11847 + t12665 * t12974;
t11156 = t11197 * t11830;
t12702 = t11824 * t11848;
t10847 = 0.1e1 / ((t11156 + t11826 * (pkin(3) * t12367 + t11287 * t11848)) * t11847 + (t11330 * t12702 + t11460) * t13012 + t12583);
t11308 = t11501 * t11848 + t11724 * t11842;
t11593 = t12182 - t13007;
t11590 = pkin(3) * t11848 + t11829 * t12494;
t12830 = t11590 * t11830;
t12848 = (-t11501 * t11842 + t11724 * t11848) * t11830;
t10932 = (t11538 * t11593 + t11544 * t12830) * t11847 - t11308 * t11538 + t11544 * t12848;
t13168 = t10847 * t10932;
t13242 = t10487 * t13168;
t11886 = koppelP(4,2);
t11892 = koppelP(4,1);
t12590 = t11870 * t11892;
t12596 = t11870 * t11886;
t11880 = koppelP(4,3);
t12602 = t11870 * t11880;
t12609 = t11869 * t11892;
t12735 = t11810 * t11880;
t12746 = t11809 * t11892;
t10950 = t11872 + ((t11810 * t12590 + t12207 * t11886) * t11809 + (-t11806 * t12609 + t12602) * t11807 - t11806 * (t11810 * t12596 + t11871 * t11892)) * t11808 + (t11701 * t12746 - t11871 * t12735 - t11886 * t12056) * t11811;
t11844 = sin(qJ(2,4));
t11850 = cos(qJ(2,4));
t12649 = t11830 * t11850;
t12729 = t11810 * t11886;
t13090 = t11806 * (t11807 * t12596 - t11810 * t12609) - (t11807 * t12590 + t11869 * t12729) * t11809 + t11810 * t12602 + t11873;
t10782 = (t10950 * t12649 - t11844 * t13090) * t11829 - t10950 * t12688;
t10821 = (t10950 * t11844 + t12649 * t13090) * t11829 - t13090 * t12688;
t11835 = legFrame(4,3);
t11779 = sin(t11835);
t11785 = cos(t11835);
t10686 = (t10782 * t11823 + t10821 * t11827) * t11785 + t11779 * (t10782 * t11827 - t10821 * t11823);
t12652 = t11830 * t11844;
t10896 = t10950 * t11850 - t12652 * t13090;
t10899 = t10950 * t12652 + t11850 * t13090;
t10728 = (t10896 * t11827 - t10899 * t11823) * t11785 - t11779 * (t10896 * t11823 + t10899 * t11827);
t11843 = sin(qJ(3,4));
t11849 = cos(qJ(3,4));
t10653 = (pkin(3) * t10686 - t10728 * t11776) * t11849 + (pkin(3) * t10728 + t10686 * t11776) * t11843;
t12683 = t11825 * t11844;
t11753 = pkin(2) * t12683;
t11114 = t11587 + (t11850 * t12480 + t11753) * t11826;
t12661 = t11829 * t11850;
t12298 = t11825 * t12661;
t11433 = t11826 * t12298 - t12220;
t11509 = t11844 * t12344;
t11615 = t11844 * t12059;
t11818 = t11849 ^ 2;
t12067 = t11844 * t12192;
t12007 = t11826 * t12067;
t10836 = (t11433 * t12483 + t11509) * t11818 + ((t11433 * t11734 + t11615) * t11843 - t12251 + pkin(3) * t11114) * t11849 + (t11114 * t11776 + t11773) * t11843 + pkin(9) * (t11433 * t13030 - t12007);
t12970 = t10653 / t10836;
t12447 = t11825 * t12970;
t12134 = t11769 * t12447;
t10644 = t12134 * t11776;
t11633 = t11806 * t11886 - t12746;
t12776 = t11807 * t11880;
t11409 = t11633 * t11810 - t12776;
t11639 = t11806 * t11892 + t11809 * t11886;
t11415 = t11633 * t11807 + t12735;
t13096 = -t11415 * t11808 + t11639 * t11811;
t12865 = t13096 * t11871;
t10977 = -(-t11633 * t11808 + t11639 * t12779) * t11869 - t11409 * t12724 - t12865;
t12770 = t11808 * t11639;
t11138 = -t11415 * t11811 - t12770;
t12859 = t11138 * t11871;
t10986 = (t11633 * t11811 + t11807 * t12770) * t11869 + t11409 * t12764 - t12859;
t10710 = t11856 + (-t11138 * t11811 - t11808 * t13096) * t11852 + (-t11138 * t11437 - t11436 * t13096) * t11869 + ((-t10977 - t12865) * t11811 + (t10986 + t12859) * t11808) * t11870 + ((t11138 * t11808 - t11811 * t13096) * t11851 + (t10977 * t11808 + t10986 * t11811) * t11869) * t11810;
t11151 = -t11415 * t11870 + t11639 * t12740;
t11384 = -t11806 * t12729 + t11810 * t12746 + t12776;
t10758 = t11855 + t10977 * t11871 - t11151 * t12764 + (t10977 * t11807 - t11151 * t12742) * t11869 + t11957 * t11138 + t11913 * t11384;
t11508 = t11843 * t12343;
t11452 = t11850 * t11508;
t12797 = t11769 * t11850;
t12326 = t11815 * t12797;
t12575 = pkin(3) * t12326 + t11452;
t12705 = t11824 * t11843;
t11749 = pkin(9) * t12705;
t11725 = 0.2e1 * t11749 + pkin(2);
t12366 = t11725 * t12683;
t13102 = t12366 - t12797;
t11069 = (pkin(3) * t13102 + t12575) * t11826;
t12305 = t11824 * t12661;
t12181 = pkin(9) * t12305;
t12090 = pkin(3) * t12181;
t12631 = t11844 * t11734;
t12372 = (t12090 - t12631 / 0.2e1) * t12688;
t11120 = (t11503 - 0.2e1 * t12372) * t11818;
t11469 = t11843 * t12070;
t11646 = pkin(2) * t12705 + t12482;
t11799 = pkin(2) * t11843;
t11739 = pkin(2) * t11749;
t11923 = ((-t11735 + t11739) * t11829 - t11843 * t12514) * t12970;
t12102 = t12585 * t12970;
t12061 = pkin(3) * t12102;
t10908 = t10950 * t11827 - t11823 * t13090;
t10914 = t10950 * t11823 + t13090 * t11827;
t12664 = t11829 * t11843;
t11502 = pkin(3) * t12664 - t12803;
t11375 = t11849 * t12496 - t11502;
t11726 = t11749 + pkin(2);
t13025 = pkin(3) * t11849;
t11652 = t11726 + t13025;
t11163 = -t11375 * t11850 + t11652 * t11844;
t12053 = t11830 * (t11375 * t11844 + t11850 * t11652);
t10719 = -(t10908 * t11779 + t10914 * t11785) * t12053 - t11163 * (t10908 * t11785 - t10914 * t11779);
t13018 = pkin(9) * t11646;
t11267 = t11725 * t13025 + t11734 * t11818 + t13018;
t11193 = t11267 * t12683;
t11199 = -t11843 * t12481 - t12562;
t11288 = t11508 + t12265;
t11331 = t11843 * t12480 + t11744;
t11524 = t11818 * t12060;
t11618 = t11818 * t12058;
t11715 = t11799 + t11776;
t11994 = pkin(3) * t11715 + t11469 - t12250;
t10860 = (t11199 * t11849 + t11524 + t11994) * t11830 + ((t11288 * t11849 + t11331 * t11776 + t11618) * t11850 + t11193) * t11826;
t10856 = 0.1e1 / t10860;
t12958 = t10719 * t10856;
t12197 = t12958 * t11776;
t12094 = pkin(3) * t12197;
t12633 = t11843 * t11850;
t12109 = t12633 * t12804;
t12115 = t11844 * t12329;
t12189 = t11850 * t12499;
t12704 = t11824 * t11844;
t12493 = pkin(9) * t12704;
t12247 = pkin(3) * t12493;
t12524 = pkin(3) * t12970;
t12252 = pkin(2) * t12524;
t11461 = t11646 * t12683;
t12167 = pkin(3) * t12298;
t12568 = t11815 * t12109 + t11824 * t12167;
t11259 = t11994 * t11830;
t12582 = t11120 + t11259;
t12271 = (t11461 - t12109 + t12568) * t13012 + t12582;
t12286 = t11829 * t12970;
t12334 = t11734 * t12661;
t12425 = t11825 * t12958;
t12426 = t11735 * t12958;
t12427 = t11734 * t12958;
t12448 = t11734 * t12970;
t13006 = t11844 * pkin(3);
t12503 = t11829 * t13006;
t12518 = t11725 * t13006;
t12634 = t11843 * t11849;
t12674 = t11826 * t11850;
t11685 = t11843 * t11734;
t12354 = t11815 * t11685;
t12853 = (-t11685 + t12354 + t12562) * t11830;
t12877 = (-t12118 + (0.2e1 * t12247 + t12334) * t12688) * t11818;
t11087 = (t11850 * t12003 + t11509 + t12564) * t11818;
t11521 = t11753 - t12797;
t12076 = t11521 + t12326;
t10791 = 0.1e1 / (t11087 + ((t11615 - t12072) * t11843 + t12057) * t11849 + t12571 * t11843 + t11972 + ((t12076 * pkin(3) + t11452) * t11849 + (-t12067 + (t12076 * t11843 + t12167) * t11824) * pkin(9)) * t11826);
t11539 = t11779 * t11827 + t11785 * t11823;
t11545 = -t11779 * t11823 + t11785 * t11827;
t11213 = -t11539 * t12652 + t11545 * t11850;
t11982 = (t11539 * t12649 + t11545 * t11844) * t11829 - t11539 * t12688;
t10867 = (pkin(3) * t11982 - t11213 * t11776) * t11849 + t11843 * (pkin(3) * t11213 + t11982 * t11776);
t12925 = t10791 * t10867;
t11214 = t11539 * t11850 + t11545 * t12652;
t11220 = -t11539 * t11844 + t11545 * t12649;
t11393 = t11545 * t12185;
t12211 = (-pkin(3) * t11214 + t11220 * t12496 - t11393) * t11843 + (t11214 * t11776 + (t11220 * t11829 - t11545 * t12688) * pkin(3)) * t11849;
t13131 = t10791 * t12211;
t10521 = t10710 * t13131 + t10758 * t12925 - ((((t11844 * t12061 + t11850 * t12427) * t11829 + 0.2e1 * t11844 * t12094 + t11850 * t12448) * t12688 - t12118 * t12958) * t11818 + (((t11850 * t12252 + (-(t11844 * t12448 - 0.2e1 * t11850 * t12094) * t11829 + t11850 * t12061 - t11844 * t12427) * t11843) * t11825 - t12115 * t12524) * t11826 - t11830 * (t10644 + pkin(3) * (t13050 * t11843 * t12197 + pkin(2) * t12286))) * t11849 + ((-pkin(3) * t12704 - t11829 * t12189) * t12425 + (-t11825 * t12189 + ((pkin(2) * t12633 - t12503) * t11825 - t11843 * t12115) * t11824) * t12970) * t13012 - (t11971 * t12958 + t11923) * t11830) / (t11120 + (((t11843 * t12334 + t12518) * t11825 + t11850 * t11571) * t11826 - t12853) * t11849 + ((pkin(3) * t12305 + t11646 * t11844) * t11825 + t12109 * t12783) * t13012 + t11830 * (t11469 + pkin(3) * (t11799 + t12097))) * t12970 - ((-t11825 * t12674 + t12667) * t12426 + (t12877 + 0.2e1 * (-t12023 + t12372) * t12634 - (t11850 * t12105 + t12247) * t12688 + t11970) * t12970) / ((t11069 - t12853) * t11849 + t12271) * t12958;
t12973 = t10653 ^ 2 / t10836 ^ 2;
t10488 = t10521 * t11849 + t12664 * t12973;
t11157 = t11199 * t11830;
t12701 = t11824 * t11850;
t10848 = 0.1e1 / ((t11157 + t11826 * (pkin(3) * t12366 + t11288 * t11850)) * t11849 + (t11331 * t12701 + t11461) * t13012 + t12582);
t11310 = t11502 * t11850 + t11726 * t11844;
t11594 = t12181 - t13006;
t11591 = pkin(3) * t11850 + t11829 * t12493;
t12829 = t11591 * t11830;
t12847 = (-t11502 * t11844 + t11726 * t11850) * t11830;
t10934 = (t11539 * t11594 + t11545 * t12829) * t11849 - t11310 * t11539 + t11545 * t12847;
t13166 = t10848 * t10934;
t13241 = t10488 * t13166;
t12455 = t11845 * t12975;
t12990 = t10519 * t11839;
t10489 = t11829 * t12455 - t12990;
t13240 = t10489 * t13170;
t12454 = t11847 * t12974;
t12989 = t10520 * t11841;
t10490 = t11829 * t12454 - t12989;
t13239 = t10490 * t13168;
t12453 = t11849 * t12973;
t12988 = t10521 * t11843;
t10491 = t11829 * t12453 - t12988;
t13238 = t10491 * t13166;
t11887 = koppelP(3,2);
t11893 = koppelP(3,1);
t12589 = t11870 * t11893;
t12595 = t11870 * t11887;
t11881 = koppelP(3,3);
t12601 = t11870 * t11881;
t12608 = t11869 * t11893;
t12734 = t11810 * t11881;
t12745 = t11809 * t11893;
t10951 = t11872 + ((t11810 * t12589 + t12207 * t11887) * t11809 + (-t11806 * t12608 + t12601) * t11807 - t11806 * (t11810 * t12595 + t11871 * t11893)) * t11808 + (t11701 * t12745 - t11871 * t12734 - t11887 * t12056) * t11811;
t11858 = sin(qJ(2,3));
t11864 = cos(qJ(2,3));
t12645 = t11830 * t11864;
t12728 = t11810 * t11887;
t13091 = t11806 * (t11807 * t12595 - t11810 * t12608) - (t11807 * t12589 + t11869 * t12728) * t11809 + t11810 * t12601 + t11873;
t10784 = (t10951 * t12645 - t11858 * t13091) * t11829 - t10951 * t12688;
t10822 = (t10951 * t11858 + t12645 * t13091) * t11829 - t13091 * t12688;
t11836 = legFrame(3,3);
t11780 = sin(t11836);
t11786 = cos(t11836);
t10687 = (t10784 * t11823 + t10822 * t11827) * t11786 + t11780 * (t10784 * t11827 - t10822 * t11823);
t12648 = t11830 * t11858;
t10900 = t10951 * t11864 - t12648 * t13091;
t10904 = t10951 * t12648 + t11864 * t13091;
t10729 = (t10900 * t11827 - t10904 * t11823) * t11786 - t11780 * (t10900 * t11823 + t10904 * t11827);
t11857 = sin(qJ(3,3));
t11863 = cos(qJ(3,3));
t10657 = (pkin(3) * t10687 - t10729 * t11776) * t11863 + (pkin(3) * t10729 + t10687 * t11776) * t11857;
t12682 = t11825 * t11858;
t11763 = pkin(2) * t12682;
t11115 = t11587 + (t11864 * t12480 + t11763) * t11826;
t12657 = t11829 * t11864;
t12297 = t11825 * t12657;
t11438 = t11826 * t12297 - t12220;
t11526 = t11858 * t12344;
t11622 = t11858 * t12059;
t11819 = t11863 ^ 2;
t12066 = t11858 * t12192;
t12006 = t11826 * t12066;
t10843 = (t11438 * t12483 + t11526) * t11819 + ((t11438 * t11734 + t11622) * t11857 - t12251 + pkin(3) * t11115) * t11863 + (t11115 * t11776 + t11773) * t11857 + pkin(9) * (t11438 * t13030 - t12006);
t12966 = t10657 / t10843;
t12442 = t11825 * t12966;
t12129 = t11769 * t12442;
t10645 = t12129 * t11776;
t11634 = t11806 * t11887 - t12745;
t12775 = t11807 * t11881;
t11410 = t11634 * t11810 - t12775;
t11640 = t11806 * t11893 + t11809 * t11887;
t11416 = t11634 * t11807 + t12734;
t13097 = -t11416 * t11808 + t11640 * t11811;
t12864 = t13097 * t11871;
t10979 = -(-t11634 * t11808 + t11640 * t12779) * t11869 - t11410 * t12724 - t12864;
t12769 = t11808 * t11640;
t11139 = -t11416 * t11811 - t12769;
t12858 = t11139 * t11871;
t10987 = (t11634 * t11811 + t11807 * t12769) * t11869 + t11410 * t12764 - t12858;
t10711 = t11856 + (-t11139 * t11811 - t11808 * t13097) * t11852 + (-t11139 * t11437 - t11436 * t13097) * t11869 + ((-t10979 - t12864) * t11811 + (t10987 + t12858) * t11808) * t11870 + ((t11139 * t11808 - t11811 * t13097) * t11851 + (t10979 * t11808 + t10987 * t11811) * t11869) * t11810;
t11152 = -t11416 * t11870 + t11640 * t12740;
t11385 = -t11806 * t12728 + t11810 * t12745 + t12775;
t10759 = t11855 + t10979 * t11871 - t11152 * t12764 + (t10979 * t11807 - t11152 * t12742) * t11869 + t11957 * t11139 + t11913 * t11385;
t11525 = t11857 * t12343;
t11456 = t11864 * t11525;
t12793 = t11769 * t11864;
t12325 = t11815 * t12793;
t12574 = pkin(3) * t12325 + t11456;
t12700 = t11824 * t11857;
t11757 = pkin(9) * t12700;
t11727 = 0.2e1 * t11757 + pkin(2);
t12365 = t11727 * t12682;
t13103 = t12365 - t12793;
t11070 = (pkin(3) * t13103 + t12574) * t11826;
t12304 = t11824 * t12657;
t12180 = pkin(9) * t12304;
t12089 = pkin(3) * t12180;
t12624 = t11858 * t11734;
t12371 = (t12089 - t12624 / 0.2e1) * t12688;
t11130 = (t11503 - 0.2e1 * t12371) * t11819;
t11470 = t11857 * t12070;
t11653 = pkin(2) * t12700 + t12482;
t11803 = pkin(2) * t11857;
t11740 = pkin(2) * t11757;
t11922 = ((-t11735 + t11740) * t11829 - t11857 * t12514) * t12966;
t12101 = t12585 * t12966;
t12626 = t11857 * t11864;
t12108 = t12626 * t12804;
t12114 = t11858 * t12329;
t12699 = t11824 * t11858;
t12492 = pkin(9) * t12699;
t12246 = pkin(3) * t12492;
t12159 = 0.2e1 * t12246;
t12188 = t11864 * t12499;
t10909 = t10951 * t11827 - t11823 * t13091;
t10915 = t10951 * t11823 + t13091 * t11827;
t12660 = t11829 * t11857;
t11516 = pkin(3) * t12660 - t12803;
t11379 = t11863 * t12496 - t11516;
t11728 = t11757 + pkin(2);
t13024 = pkin(3) * t11863;
t11665 = t11728 + t13024;
t11188 = -t11379 * t11864 + t11665 * t11858;
t12052 = t11830 * (t11379 * t11858 + t11864 * t11665);
t10723 = -(t10909 * t11780 + t10915 * t11786) * t12052 - t11188 * (t10909 * t11786 - t10915 * t11780);
t13017 = pkin(9) * t11653;
t11280 = t11727 * t13024 + t11734 * t11819 + t13017;
t11200 = t11280 * t12682;
t11204 = -t11857 * t12481 - t12562;
t11289 = t11525 + t12265;
t11344 = t11857 * t12480 + t11744;
t11531 = t11819 * t12060;
t11625 = t11819 * t12058;
t11716 = t11803 + t11776;
t11993 = pkin(3) * t11716 + t11470 - t12250;
t10885 = (t11204 * t11863 + t11531 + t11993) * t11830 + ((t11289 * t11863 + t11344 * t11776 + t11625) * t11864 + t11200) * t11826;
t10870 = 0.1e1 / t10885;
t12954 = t10723 * t10870;
t12196 = t12954 * t11776;
t12243 = 0.2e1 * t12558;
t12523 = pkin(3) * t12966;
t12264 = pkin(2) * t12523;
t11464 = t11653 * t12682;
t12165 = pkin(3) * t12297;
t12567 = t11815 * t12108 + t11824 * t12165;
t11260 = t11993 * t11830;
t12581 = t11130 + t11260;
t12270 = (t11464 - t12108 + t12567) * t13012 + t12581;
t12285 = t11829 * t12966;
t12333 = t11734 * t12657;
t12420 = t11829 * t12954;
t12421 = t11825 * t12954;
t12422 = t11735 * t12954;
t12443 = t11734 * t12966;
t13005 = t11858 * pkin(3);
t12502 = t11829 * t13005;
t12517 = t11727 * t13005;
t12627 = t11857 * t11863;
t12670 = t11826 * t11864;
t11686 = t11857 * t11734;
t12353 = t11815 * t11686;
t12852 = (-t11686 + t12353 + t12562) * t11830;
t12876 = (-t12118 + (t12159 + t12333) * t12688) * t11819;
t11089 = (t11864 * t12003 + t11526 + t12564) * t11819;
t11534 = t11763 - t12793;
t12075 = t11534 + t12325;
t10795 = 0.1e1 / (t11089 + ((t11622 - t12072) * t11857 + t12057) * t11863 + t12571 * t11857 + t11972 + ((t12075 * pkin(3) + t11456) * t11863 + (-t12066 + (t12075 * t11857 + t12165) * t11824) * pkin(9)) * t11826);
t11540 = t11780 * t11827 + t11786 * t11823;
t11546 = -t11780 * t11823 + t11786 * t11827;
t11233 = -t11540 * t12648 + t11546 * t11864;
t11981 = (t11540 * t12645 + t11546 * t11858) * t11829 - t11540 * t12688;
t10876 = (pkin(3) * t11981 - t11233 * t11776) * t11863 + t11857 * (pkin(3) * t11233 + t11981 * t11776);
t12921 = t10795 * t10876;
t11234 = t11540 * t11864 + t11546 * t12648;
t11240 = -t11540 * t11858 + t11546 * t12645;
t11394 = t11546 * t12185;
t12210 = (-pkin(3) * t11234 + t11240 * t12496 - t11394) * t11857 + (t11234 * t11776 + (t11240 * t11829 - t11546 * t12688) * pkin(3)) * t11863;
t13130 = t10795 * t12210;
t10531 = t10711 * t13130 + t10759 * t12921 - ((((t11734 * t11864 * t12954 + t12101 * t13005) * t11829 + t12159 * t12954 + t11864 * t12443) * t12688 - t12118 * t12954) * t11819 + (((t11864 * t12264 + ((-t12285 - t12954) * t12624 + (t12420 + t12966) * t11864 * t12243) * t11857) * t11825 - t12114 * t12523) * t11826 - t11830 * (t10645 + pkin(3) * (t13050 * t11857 * t12196 + pkin(2) * t12285))) * t11863 + ((-pkin(3) * t12699 - t11829 * t12188) * t12421 + (-t11825 * t12188 + ((pkin(2) * t12626 - t12502) * t11825 - t11857 * t12114) * t11824) * t12966) * t13012 - (t11971 * t12954 + t11922) * t11830) / (t11130 + (((t11857 * t12333 + t12517) * t11825 + t11864 * t11571) * t11826 - t12852) * t11863 + ((pkin(3) * t12304 + t11653 * t11858) * t11825 + t12108 * t12783) * t13012 + t11830 * (t11470 + pkin(3) * (t11803 + t12097))) * t12966 - ((-t11825 * t12670 + t12667) * t12422 + (t12876 + 0.2e1 * (-t12023 + t12371) * t12627 - (t11864 * t12105 + t12246) * t12688 + t11970) * t12966) / ((t11070 - t12852) * t11863 + t12270) * t12954;
t12969 = t10657 ^ 2 / t10843 ^ 2;
t10498 = t10531 * t11863 + t12660 * t12969;
t11158 = t11204 * t11830;
t12694 = t11824 * t11864;
t10849 = 0.1e1 / ((t11158 + t11826 * (pkin(3) * t12365 + t11289 * t11864)) * t11863 + (t11344 * t12694 + t11464) * t13012 + t12581);
t11312 = t11516 * t11864 + t11728 * t11858;
t11604 = t12180 - t13005;
t11601 = pkin(3) * t11864 + t11829 * t12492;
t12825 = t11601 * t11830;
t12846 = (-t11516 * t11858 + t11728 * t11864) * t11830;
t10942 = (t11540 * t11604 + t11546 * t12825) * t11863 - t11312 * t11540 + t11546 * t12846;
t13164 = t10849 * t10942;
t13237 = t10498 * t13164;
t11888 = koppelP(2,2);
t11894 = koppelP(2,1);
t12588 = t11870 * t11894;
t12594 = t11870 * t11888;
t11882 = koppelP(2,3);
t12600 = t11870 * t11882;
t12607 = t11869 * t11894;
t12733 = t11810 * t11882;
t12744 = t11809 * t11894;
t10952 = t11872 + ((t11810 * t12588 + t12207 * t11888) * t11809 + (-t11806 * t12607 + t12600) * t11807 - t11806 * (t11810 * t12594 + t11871 * t11894)) * t11808 + (t11701 * t12744 - t11871 * t12733 - t11888 * t12056) * t11811;
t11860 = sin(qJ(2,2));
t11866 = cos(qJ(2,2));
t12644 = t11830 * t11866;
t12727 = t11810 * t11888;
t13092 = t11806 * (t11807 * t12594 - t11810 * t12607) - (t11807 * t12588 + t11869 * t12727) * t11809 + t11810 * t12600 + t11873;
t10785 = (t10952 * t12644 - t11860 * t13092) * t11829 - t10952 * t12688;
t10823 = (t10952 * t11860 + t12644 * t13092) * t11829 - t13092 * t12688;
t11837 = legFrame(2,3);
t11781 = sin(t11837);
t11787 = cos(t11837);
t10688 = (t10785 * t11823 + t10823 * t11827) * t11787 + t11781 * (t10785 * t11827 - t10823 * t11823);
t12647 = t11830 * t11860;
t10901 = t10952 * t11866 - t12647 * t13092;
t10905 = t10952 * t12647 + t11866 * t13092;
t10730 = (t10901 * t11827 - t10905 * t11823) * t11787 - t11781 * (t10901 * t11823 + t10905 * t11827);
t11859 = sin(qJ(3,2));
t11865 = cos(qJ(3,2));
t10658 = (pkin(3) * t10688 - t10730 * t11776) * t11865 + t11859 * (pkin(3) * t10730 + t10688 * t11776);
t12681 = t11825 * t11860;
t11764 = pkin(2) * t12681;
t11116 = t11587 + (t11866 * t12480 + t11764) * t11826;
t12656 = t11829 * t11866;
t12296 = t11825 * t12656;
t11439 = t11826 * t12296 - t12220;
t11528 = t11860 * t12344;
t11623 = t11860 * t12059;
t11820 = t11865 ^ 2;
t12065 = t11860 * t12192;
t12005 = t11826 * t12065;
t10844 = (t11439 * t12483 + t11528) * t11820 + ((t11439 * t11734 + t11623) * t11859 - t12251 + pkin(3) * t11116) * t11865 + (t11116 * t11776 + t11773) * t11859 + pkin(9) * (t11439 * t13030 - t12005);
t12965 = t10658 / t10844;
t12440 = t11825 * t12965;
t12127 = t11769 * t12440;
t10646 = t12127 * t11776;
t11635 = t11806 * t11888 - t12744;
t12774 = t11807 * t11882;
t11411 = t11635 * t11810 - t12774;
t11641 = t11806 * t11894 + t11809 * t11888;
t11417 = t11635 * t11807 + t12733;
t13098 = -t11417 * t11808 + t11641 * t11811;
t12863 = t13098 * t11871;
t10981 = -(-t11635 * t11808 + t11641 * t12779) * t11869 - t11411 * t12724 - t12863;
t12768 = t11808 * t11641;
t11140 = -t11417 * t11811 - t12768;
t12857 = t11140 * t11871;
t10988 = (t11635 * t11811 + t11807 * t12768) * t11869 + t11411 * t12764 - t12857;
t10712 = t11856 + (-t11140 * t11811 - t11808 * t13098) * t11852 + (-t11140 * t11437 - t11436 * t13098) * t11869 + ((-t10981 - t12863) * t11811 + (t10988 + t12857) * t11808) * t11870 + ((t11140 * t11808 - t11811 * t13098) * t11851 + (t10981 * t11808 + t10988 * t11811) * t11869) * t11810;
t11153 = -t11417 * t11870 + t11641 * t12740;
t11386 = -t11806 * t12727 + t11810 * t12744 + t12774;
t10760 = t11855 + t10981 * t11871 - t11153 * t12764 + (t10981 * t11807 - t11153 * t12742) * t11869 + t11957 * t11140 + t11913 * t11386;
t11527 = t11859 * t12343;
t11457 = t11866 * t11527;
t12792 = t11769 * t11866;
t12324 = t11815 * t12792;
t12573 = pkin(3) * t12324 + t11457;
t12698 = t11824 * t11859;
t11759 = pkin(9) * t12698;
t11729 = 0.2e1 * t11759 + pkin(2);
t12364 = t11729 * t12681;
t13104 = t12364 - t12792;
t11071 = (pkin(3) * t13104 + t12573) * t11826;
t12303 = t11824 * t12656;
t12179 = pkin(9) * t12303;
t12088 = pkin(3) * t12179;
t12620 = t11860 * t11734;
t12370 = (t12088 - t12620 / 0.2e1) * t12688;
t11131 = (t11503 - 0.2e1 * t12370) * t11820;
t11471 = t11859 * t12070;
t11654 = pkin(2) * t12698 + t12482;
t11804 = pkin(2) * t11859;
t11741 = pkin(2) * t11759;
t11921 = ((-t11735 + t11741) * t11829 - t11859 * t12514) * t12965;
t12100 = t12585 * t12965;
t12622 = t11859 * t11866;
t12107 = t12622 * t12804;
t12113 = t11860 * t12329;
t12697 = t11824 * t11860;
t12491 = pkin(9) * t12697;
t12245 = pkin(3) * t12491;
t12158 = 0.2e1 * t12245;
t12187 = t11866 * t12499;
t10910 = t10952 * t11827 - t11823 * t13092;
t10916 = t10952 * t11823 + t13092 * t11827;
t12659 = t11829 * t11859;
t11517 = pkin(3) * t12659 - t12803;
t11380 = t11865 * t12496 - t11517;
t11730 = t11759 + pkin(2);
t13023 = pkin(3) * t11865;
t11666 = t11730 + t13023;
t11189 = -t11380 * t11866 + t11666 * t11860;
t12051 = t11830 * (t11380 * t11860 + t11866 * t11666);
t10724 = -(t10910 * t11781 + t10916 * t11787) * t12051 - (t10910 * t11787 - t10916 * t11781) * t11189;
t13016 = pkin(9) * t11654;
t11281 = t11729 * t13023 + t11734 * t11820 + t13016;
t11201 = t11281 * t12681;
t11206 = -t11859 * t12481 - t12562;
t11290 = t11527 + t12265;
t11345 = t11859 * t12480 + t11744;
t11532 = t11820 * t12060;
t11626 = t11820 * t12058;
t11717 = t11804 + t11776;
t11992 = pkin(3) * t11717 + t11471 - t12250;
t10886 = (t11206 * t11865 + t11532 + t11992) * t11830 + ((t11290 * t11865 + t11345 * t11776 + t11626) * t11866 + t11201) * t11826;
t10872 = 0.1e1 / t10886;
t12953 = t10724 * t10872;
t12195 = t12953 * t11776;
t12522 = pkin(3) * t12965;
t12263 = pkin(2) * t12522;
t11465 = t11654 * t12681;
t12163 = pkin(3) * t12296;
t12566 = t11815 * t12107 + t11824 * t12163;
t11261 = t11992 * t11830;
t12580 = t11131 + t11261;
t12269 = (t11465 - t12107 + t12566) * t13012 + t12580;
t12284 = t11829 * t12965;
t12332 = t11734 * t12656;
t12416 = t11829 * t12953;
t12417 = t11825 * t12953;
t12418 = t11735 * t12953;
t12441 = t11734 * t12965;
t13004 = t11860 * pkin(3);
t12501 = t11829 * t13004;
t12516 = t11729 * t13004;
t12623 = t11859 * t11865;
t12669 = t11826 * t11866;
t11687 = t11859 * t11734;
t12352 = t11815 * t11687;
t12851 = (-t11687 + t12352 + t12562) * t11830;
t12875 = (-t12118 + (t12158 + t12332) * t12688) * t11820;
t11090 = (t11866 * t12003 + t11528 + t12564) * t11820;
t11535 = t11764 - t12792;
t12074 = t11535 + t12324;
t10796 = 0.1e1 / (t11090 + ((t11623 - t12072) * t11859 + t12057) * t11865 + t12571 * t11859 + t11972 + ((t12074 * pkin(3) + t11457) * t11865 + (-t12065 + (t12074 * t11859 + t12163) * t11824) * pkin(9)) * t11826);
t11541 = t11781 * t11827 + t11787 * t11823;
t11547 = -t11781 * t11823 + t11787 * t11827;
t11235 = -t11541 * t12647 + t11547 * t11866;
t11980 = (t11541 * t12644 + t11547 * t11860) * t11829 - t11541 * t12688;
t10879 = (pkin(3) * t11980 - t11235 * t11776) * t11865 + t11859 * (pkin(3) * t11235 + t11980 * t11776);
t12917 = t10796 * t10879;
t11236 = t11541 * t11866 + t11547 * t12647;
t11242 = -t11541 * t11860 + t11547 * t12644;
t11395 = t11547 * t12185;
t12209 = (-pkin(3) * t11236 + t11242 * t12496 - t11395) * t11859 + (t11236 * t11776 + (t11242 * t11829 - t11547 * t12688) * pkin(3)) * t11865;
t13129 = t10796 * t12209;
t10532 = t10712 * t13129 + t10760 * t12917 - ((((t11734 * t11866 * t12953 + t12100 * t13004) * t11829 + t12158 * t12953 + t11866 * t12441) * t12688 - t12118 * t12953) * t11820 + (((t11866 * t12263 + ((-t12284 - t12953) * t12620 + (t12416 + t12965) * t11866 * t12243) * t11859) * t11825 - t12113 * t12522) * t11826 - t11830 * (t10646 + pkin(3) * (t13050 * t11859 * t12195 + pkin(2) * t12284))) * t11865 + ((-pkin(3) * t12697 - t11829 * t12187) * t12417 + (-t11825 * t12187 + ((pkin(2) * t12622 - t12501) * t11825 - t11859 * t12113) * t11824) * t12965) * t13012 - (t11971 * t12953 + t11921) * t11830) / (t11131 + (((t11859 * t12332 + t12516) * t11825 + t11866 * t11571) * t11826 - t12851) * t11865 + ((pkin(3) * t12303 + t11654 * t11860) * t11825 + t12107 * t12783) * t13012 + t11830 * (t11471 + pkin(3) * (t11804 + t12097))) * t12965 - ((-t11825 * t12669 + t12667) * t12418 + (t12875 + 0.2e1 * (-t12023 + t12370) * t12623 - (t11866 * t12105 + t12245) * t12688 + t11970) * t12965) / ((t11071 - t12851) * t11865 + t12269) * t12953;
t12968 = t10658 ^ 2 / t10844 ^ 2;
t10499 = t10532 * t11865 + t12659 * t12968;
t11159 = t11206 * t11830;
t12693 = t11824 * t11866;
t10850 = 0.1e1 / ((t11159 + t11826 * (pkin(3) * t12364 + t11290 * t11866)) * t11865 + (t11345 * t12693 + t11465) * t13012 + t12580);
t11314 = t11517 * t11866 + t11730 * t11860;
t11605 = t12179 - t13004;
t11602 = pkin(3) * t11866 + t11829 * t12491;
t12824 = t11602 * t11830;
t12845 = (-t11517 * t11860 + t11730 * t11866) * t11830;
t10944 = (t11541 * t11605 + t11547 * t12824) * t11865 - t11314 * t11541 + t11547 * t12845;
t13162 = t10850 * t10944;
t13236 = t10499 * t13162;
t12446 = t11863 * t12969;
t12987 = t10531 * t11857;
t10500 = t11829 * t12446 - t12987;
t13235 = t10500 * t13164;
t12445 = t11865 * t12968;
t12986 = t10532 * t11859;
t10501 = t11829 * t12445 - t12986;
t13234 = t10501 * t13162;
t11889 = koppelP(1,2);
t11895 = koppelP(1,1);
t12587 = t11870 * t11895;
t12593 = t11870 * t11889;
t11883 = koppelP(1,3);
t12599 = t11870 * t11883;
t12606 = t11869 * t11895;
t12732 = t11810 * t11883;
t12743 = t11809 * t11895;
t10953 = t11872 + ((t11810 * t12587 + t12207 * t11889) * t11809 + (-t11806 * t12606 + t12599) * t11807 - t11806 * (t11810 * t12593 + t11871 * t11895)) * t11808 + (t11701 * t12743 - t11871 * t12732 - t11889 * t12056) * t11811;
t11862 = sin(qJ(2,1));
t11868 = cos(qJ(2,1));
t12643 = t11830 * t11868;
t12726 = t11810 * t11889;
t13093 = t11806 * (t11807 * t12593 - t11810 * t12606) - (t11807 * t12587 + t11869 * t12726) * t11809 + t11810 * t12599 + t11873;
t10783 = (t10953 * t12643 - t11862 * t13093) * t11829 - t10953 * t12688;
t10824 = (t10953 * t11862 + t12643 * t13093) * t11829 - t13093 * t12688;
t11838 = legFrame(1,3);
t11782 = sin(t11838);
t11788 = cos(t11838);
t10689 = (t10783 * t11823 + t10824 * t11827) * t11788 + t11782 * (t10783 * t11827 - t10824 * t11823);
t12646 = t11830 * t11862;
t10902 = t10953 * t12646 + t11868 * t13093;
t10903 = t10953 * t11868 - t12646 * t13093;
t10731 = (-t10902 * t11823 + t10903 * t11827) * t11788 - t11782 * (t10902 * t11827 + t10903 * t11823);
t11861 = sin(qJ(3,1));
t11867 = cos(qJ(3,1));
t10659 = (pkin(3) * t10689 - t10731 * t11776) * t11867 + t11861 * (pkin(3) * t10731 + t10689 * t11776);
t12680 = t11825 * t11862;
t11765 = pkin(2) * t12680;
t11117 = t11587 + (t11868 * t12480 + t11765) * t11826;
t12655 = t11829 * t11868;
t12295 = t11825 * t12655;
t11440 = t11826 * t12295 - t12220;
t11530 = t11862 * t12344;
t11624 = t11862 * t12059;
t11821 = t11867 ^ 2;
t12064 = t11862 * t12192;
t12004 = t11826 * t12064;
t10845 = (t11440 * t12483 + t11530) * t11821 + ((t11440 * t11734 + t11624) * t11861 - t12251 + pkin(3) * t11117) * t11867 + (t11117 * t11776 + t11773) * t11861 + pkin(9) * (t11440 * t13030 - t12004);
t12964 = t10659 / t10845;
t12438 = t11825 * t12964;
t12125 = t11769 * t12438;
t10647 = t12125 * t11776;
t11636 = t11806 * t11889 - t12743;
t12773 = t11807 * t11883;
t11412 = t11636 * t11810 - t12773;
t11642 = t11806 * t11895 + t11809 * t11889;
t11418 = t11636 * t11807 + t12732;
t13099 = -t11418 * t11808 + t11642 * t11811;
t12862 = t13099 * t11871;
t10983 = -(-t11636 * t11808 + t11642 * t12779) * t11869 - t11412 * t12724 - t12862;
t12767 = t11808 * t11642;
t11141 = -t11418 * t11811 - t12767;
t12856 = t11141 * t11871;
t10989 = (t11636 * t11811 + t11807 * t12767) * t11869 + t11412 * t12764 - t12856;
t10713 = t11856 + (-t11141 * t11811 - t11808 * t13099) * t11852 + (-t11141 * t11437 - t11436 * t13099) * t11869 + ((-t10983 - t12862) * t11811 + (t10989 + t12856) * t11808) * t11870 + ((t11141 * t11808 - t11811 * t13099) * t11851 + (t10983 * t11808 + t10989 * t11811) * t11869) * t11810;
t11154 = -t11418 * t11870 + t11642 * t12740;
t11387 = -t11806 * t12726 + t11810 * t12743 + t12773;
t10761 = t11855 + t10983 * t11871 - t11154 * t12764 + (t10983 * t11807 - t11154 * t12742) * t11869 + t11957 * t11141 + t11913 * t11387;
t11529 = t11861 * t12343;
t11458 = t11868 * t11529;
t12791 = t11769 * t11868;
t12323 = t11815 * t12791;
t12572 = pkin(3) * t12323 + t11458;
t12696 = t11824 * t11861;
t11761 = pkin(9) * t12696;
t11731 = 0.2e1 * t11761 + pkin(2);
t12363 = t11731 * t12680;
t13105 = t12363 - t12791;
t11072 = (pkin(3) * t13105 + t12572) * t11826;
t12302 = t11824 * t12655;
t12178 = pkin(9) * t12302;
t12087 = pkin(3) * t12178;
t12616 = t11862 * t11734;
t12369 = (t12087 - t12616 / 0.2e1) * t12688;
t11132 = (t11503 - 0.2e1 * t12369) * t11821;
t11472 = t11861 * t12070;
t11655 = pkin(2) * t12696 + t12482;
t11805 = pkin(2) * t11861;
t11742 = pkin(2) * t11761;
t11920 = ((-t11735 + t11742) * t11829 - t11861 * t12514) * t12964;
t12099 = t12585 * t12964;
t12618 = t11861 * t11868;
t12106 = t12618 * t12804;
t12112 = t11862 * t12329;
t12695 = t11824 * t11862;
t12490 = pkin(9) * t12695;
t12244 = pkin(3) * t12490;
t12157 = 0.2e1 * t12244;
t12186 = t11868 * t12499;
t10911 = t10953 * t11827 - t11823 * t13093;
t10917 = t11823 * t10953 + t13093 * t11827;
t12658 = t11829 * t11861;
t11518 = pkin(3) * t12658 - t12803;
t11381 = t11867 * t12496 - t11518;
t11732 = t11761 + pkin(2);
t13022 = pkin(3) * t11867;
t11667 = t11732 + t13022;
t11190 = -t11381 * t11868 + t11667 * t11862;
t12050 = t11830 * (t11381 * t11862 + t11868 * t11667);
t10725 = -(t10911 * t11782 + t10917 * t11788) * t12050 - (t10911 * t11788 - t10917 * t11782) * t11190;
t13015 = pkin(9) * t11655;
t11282 = t11731 * t13022 + t11734 * t11821 + t13015;
t11202 = t11282 * t12680;
t11208 = -t11861 * t12481 - t12562;
t11291 = t11529 + t12265;
t11346 = t11861 * t12480 + t11744;
t11533 = t11821 * t12060;
t11627 = t11821 * t12058;
t11718 = t11805 + t11776;
t11991 = pkin(3) * t11718 + t11472 - t12250;
t10887 = (t11208 * t11867 + t11533 + t11991) * t11830 + ((t11291 * t11867 + t11346 * t11776 + t11627) * t11868 + t11202) * t11826;
t10874 = 0.1e1 / t10887;
t12952 = t10725 * t10874;
t12194 = t12952 * t11776;
t12521 = pkin(3) * t12964;
t12262 = pkin(2) * t12521;
t11466 = t11655 * t12680;
t12161 = pkin(3) * t12295;
t12565 = t11815 * t12106 + t11824 * t12161;
t11262 = t11991 * t11830;
t12579 = t11132 + t11262;
t12268 = (t11466 - t12106 + t12565) * t13012 + t12579;
t12283 = t11829 * t12964;
t12331 = t11734 * t12655;
t12412 = t11829 * t12952;
t12413 = t11825 * t12952;
t12414 = t11735 * t12952;
t12439 = t11734 * t12964;
t13003 = t11862 * pkin(3);
t12500 = t11829 * t13003;
t12515 = t11731 * t13003;
t12619 = t11861 * t11867;
t12668 = t11826 * t11868;
t11688 = t11861 * t11734;
t12351 = t11815 * t11688;
t12850 = (-t11688 + t12351 + t12562) * t11830;
t12874 = (-t12118 + (t12157 + t12331) * t12688) * t11821;
t11091 = (t11868 * t12003 + t11530 + t12564) * t11821;
t11536 = t11765 - t12791;
t12073 = t11536 + t12323;
t10797 = 0.1e1 / (t11091 + ((t11624 - t12072) * t11861 + t12057) * t11867 + t12571 * t11861 + t11972 + ((t12073 * pkin(3) + t11458) * t11867 + (-t12064 + (t12073 * t11861 + t12161) * t11824) * pkin(9)) * t11826);
t11542 = t11782 * t11827 + t11788 * t11823;
t11548 = -t11782 * t11823 + t11788 * t11827;
t11237 = -t11542 * t12646 + t11548 * t11868;
t11979 = (t11542 * t12643 + t11548 * t11862) * t11829 - t11542 * t12688;
t10882 = (pkin(3) * t11979 - t11237 * t11776) * t11867 + t11861 * (pkin(3) * t11237 + t11979 * t11776);
t12913 = t10797 * t10882;
t11238 = t11542 * t11868 + t11548 * t12646;
t11244 = -t11542 * t11862 + t11548 * t12643;
t11396 = t11548 * t12185;
t12208 = (-pkin(3) * t11238 + t11244 * t12496 - t11396) * t11861 + (t11238 * t11776 + (t11244 * t11829 - t11548 * t12688) * pkin(3)) * t11867;
t13128 = t10797 * t12208;
t10533 = t10713 * t13128 + t10761 * t12913 - ((((t11734 * t11868 * t12952 + t12099 * t13003) * t11829 + t12157 * t12952 + t11868 * t12439) * t12688 - t12118 * t12952) * t11821 + (((t11868 * t12262 + ((-t12283 - t12952) * t12616 + (t12412 + t12964) * t11868 * t12243) * t11861) * t11825 - t12112 * t12521) * t11826 - t11830 * (t10647 + pkin(3) * (t13050 * t11861 * t12194 + pkin(2) * t12283))) * t11867 + ((-pkin(3) * t12695 - t11829 * t12186) * t12413 + (-t11825 * t12186 + ((pkin(2) * t12618 - t12500) * t11825 - t11861 * t12112) * t11824) * t12964) * t13012 - (t11971 * t12952 + t11920) * t11830) / (t11132 + (((t11861 * t12331 + t12515) * t11825 + t11868 * t11571) * t11826 - t12850) * t11867 + ((pkin(3) * t12302 + t11655 * t11862) * t11825 + t12106 * t12783) * t13012 + t11830 * (t11472 + pkin(3) * (t11805 + t12097))) * t12964 - ((-t11825 * t12668 + t12667) * t12414 + (t12874 + 0.2e1 * (-t12023 + t12369) * t12619 - (t11868 * t12105 + t12244) * t12688 + t11970) * t12964) / ((t11072 - t12850) * t11867 + t12268) * t12952;
t12967 = t10659 ^ 2 / t10845 ^ 2;
t10502 = t10533 * t11867 + t12658 * t12967;
t11160 = t11208 * t11830;
t12692 = t11824 * t11868;
t10851 = 0.1e1 / ((t11160 + t11826 * (pkin(3) * t12363 + t11291 * t11868)) * t11867 + (t11346 * t12692 + t11466) * t13012 + t12579);
t11316 = t11518 * t11868 + t11732 * t11862;
t11606 = t12178 - t13003;
t11603 = pkin(3) * t11868 + t11829 * t12490;
t12823 = t11603 * t11830;
t12844 = (-t11518 * t11862 + t11732 * t11868) * t11830;
t10946 = (t11542 * t11606 + t11548 * t12823) * t11867 - t11316 * t11542 + t11548 * t12844;
t13160 = t10851 * t10946;
t13233 = t10502 * t13160;
t12444 = t11867 * t12967;
t12985 = t10533 * t11861;
t10503 = t11829 * t12444 - t12985;
t13232 = t10503 * t13160;
t13049 = 0.2e1 * t11816 - 0.1e1;
t10624 = t13049 * t12975;
t13231 = t10624 * t13170;
t13048 = 0.2e1 * t11817 - 0.1e1;
t10625 = t13048 * t12974;
t13230 = t10625 * t13168;
t13047 = 0.2e1 * t11818 - 0.1e1;
t10626 = t13047 * t12973;
t13229 = t10626 * t13166;
t13046 = 0.2e1 * t11819 - 0.1e1;
t10627 = t13046 * t12969;
t13228 = t10627 * t13164;
t13045 = 0.2e1 * t11820 - 0.1e1;
t10628 = t13045 * t12968;
t13227 = t10628 * t13162;
t13044 = 0.2e1 * t11821 - 0.1e1;
t10629 = t13044 * t12967;
t13226 = t10629 * t13160;
t10516 = t10519 * pkin(2);
t12308 = t11808 * t12605;
t11854 = xDDP(3);
t12996 = t11854 - g(3);
t12242 = t13050 * t11776;
t11263 = pkin(2) * t12343 - t12242 * t13031;
t11699 = t11769 * t13028;
t12294 = t11826 * t12641;
t11367 = t11734 * t12294 + t11699;
t11292 = t11367 * t12687;
t11690 = pkin(2) * t12499;
t11397 = t11735 * t12709 + t11690;
t12266 = -t12586 / 0.2e1 + t11896 / 0.2e1 + t11898 / 0.2e1;
t11482 = t11737 + t12266;
t13112 = (-0.2e1 * t13011 - pkin(8)) * pkin(8);
t12267 = pkin(2) ^ 2 - t13112;
t11944 = -(t11898 + (t11813 - 0.2e1) * t11896 + t13112) * t11815 + 0.2e1 * t12586 - 0.3e1 * t11896 - t12267;
t11619 = t11830 * t11683;
t12511 = pkin(3) * t12676;
t12170 = t11769 * t12511;
t11317 = (-t11619 + t12170) * t11815;
t12002 = t11317 + t11619 - t12251;
t11376 = (t11769 * t12294 - t13028) * t12498;
t12802 = t11769 * t11839;
t11447 = t11830 * t12802 + t12511;
t12015 = t11447 * t12184 + t11773 * t11839 + t11085 + t11376;
t12022 = t11824 * (-pkin(8) * pkin(9) - t11828 * t11896);
t11698 = t11896 + t12267;
t12330 = (pkin(3) + t11769) * (-pkin(3) + t11769) * t11815;
t12071 = -t11698 + t12330;
t12085 = t13051 * pkin(3) * t12804;
t11814 = t11829 * t11815;
t12560 = t11814 - t11829;
t12155 = 0.4e1 * t12560;
t12156 = 0.2e1 * t12560;
t12434 = t11829 * t12960;
t12206 = pkin(2) * t12434;
t12222 = t13051 * (0.3e1 * t11898 + t12221);
t12223 = 0.3e1 * (t11898 / 0.3e1 + t12221) * t12783;
t12276 = -0.2e1 * t11744;
t12362 = t11769 * t11683;
t12433 = t11845 * t12960;
t13052 = 0.2e1 * t11829;
t12561 = -0.2e1 * t11814 + t13052;
t13134 = -0.2e1 * pkin(2);
t12563 = pkin(2) * t13067 + t13014 * t13134;
t12725 = t11811 * t11852;
t12739 = t11810 * t11870;
t12765 = t11808 * t11810;
t12193 = t11769 * t12497;
t12679 = t11826 * t11840;
t13013 = pkin(9) * t11825;
t10807 = 0.1e1 / (t11118 + ((t11367 * t11829 + t11826 * t12520) * t11825 - t12170 + t12002) * t11845 + (t11447 * t12710 + t11644 * t12679) * t13013 + t11376 + (-t11846 * t12193 + t11773) * t11839 + t11736);
t11555 = t11823 * t12651 + t11827 * t11840;
t11558 = -t11823 * t11840 + t11827 * t12651;
t11221 = t11555 * t11783 + t11558 * t11777;
t11561 = t11823 * t11846 + t11827 * t12654;
t11564 = -t11823 * t12654 + t11827 * t11846;
t11230 = -t11561 * t11777 + t11564 * t11783;
t12342 = t11826 * t11683;
t11956 = -t11221 * t13031 - t11537 * t12342;
t13029 = pkin(3) * t11826;
t12559 = pkin(2) * t13029;
t12260 = t11839 * t12559;
t12301 = t11826 * t12687;
t12805 = t11734 * t11825;
t12350 = t11816 * t12805;
t12513 = t11769 * t13029;
t13043 = pkin(2) * t11845;
t12532 = t11826 * t13043;
t12813 = t11644 * t11825;
t13037 = pkin(3) * t11721;
t13116 = t12687 * t13049;
t12320 = t11816 * t12783;
t13122 = t11826 * (0.2e1 * t12320 - t13051);
t12948 = (t11230 * t12350 + (((-t11221 * t11683 + t11537 * t12513) * t11829 + t11230 * t13037) * t11825 + t11956 * t11815 - t11956) * t11845 + t11537 * t12260 + (t11230 * t12813 + (-t11537 * t12532 + (-t11221 * t11815 + t11537 * t12301 + t11221) * t12802 + (t11221 * t13116 + t11537 * t13122) * pkin(3)) * t11824) * pkin(9)) * t10807;
t11224 = -t11555 * t11777 + t11558 * t11783;
t11227 = t11561 * t11783 + t11564 * t11777;
t11953 = t11224 * t13031 + t11543 * t12342;
t12951 = (t11227 * t12350 + (((t11224 * t11683 - t11543 * t12513) * t11829 + t11227 * t13037) * t11825 + t11953 * t11815 - t11953) * t11845 - t11543 * t12260 + (t11227 * t12813 + (t11543 * t12532 + (t11224 * t11815 - t11543 * t12301 - t11224) * t12802 + (-t11224 * t13116 - t11543 * t13122) * pkin(3)) * t11824) * pkin(9)) * t10807;
t13053 = -0.2e1 * t11829;
t13054 = t11734 * t13134;
t13070 = -t10708 * t12948 - t10756 * t12951 + t10984 * t11871 - (t11382 * t12765 + t11807 * t13094) * t11851 - t11149 * t12724 - t13094 * t11853 + t11382 * t12725 - (-t10984 * t11807 - t11149 * t12765 - t11382 * t11437 + t12739 * t13094) * t11869 - (-(t11650 * t11735 * t12435 + (-t11263 * t11816 + (t11482 * t12276 - t11769 * t12356 + t12362) * t11845 + (t11397 * t12687 - t12085) * pkin(9)) * t12972) * t12960 - ((-t12156 * t12972 - t13051 * t12960) * t11845 * t12362 + ((-t11734 * t12206 + t12972 * t13054) * t11816 + (t11482 * t12433 * t13053 + (t11816 * t12223 - 0.4e1 * t11737 + t11944) * t12972 * t11845) * pkin(3)) * t11825 + ((t11397 * t12434 - t12563 * t12972) * t11825 + ((t12222 * t11816 + t12071) * t11839 * t12451 + ((t13050 * t11816 - t13051) * t12960 + (t11816 * t12155 + t12561) * t12972) * t13031) * t11824) * pkin(9)) * t12972) / ((t11292 + t12002) * t11845 + t11736 + (pkin(9) * t11459 + t12022 * t12641 + t13100 * t13027) * t11826 + t12015);
t13002 = -t11382 * t12308 - t12996 + t13070;
t10546 = t11826 * t13002;
t13009 = t11827 * g(1);
t13010 = t11823 * g(2);
t11710 = t13009 + t13010;
t12806 = t11710 * t11830;
t11510 = t11777 * t12806;
t11709 = -g(1) * t11823 + g(2) * t11827;
t12807 = t11709 * t11830;
t12282 = t11783 * t12807;
t10543 = t10546 - t11510 + t12282;
t10672 = t10708 * t13170;
t10924 = (t11537 * t12831 - t11543 * t11592) * t11845 + t11306 * t11543 + t11537 * t12849;
t13171 = t10846 * t10924;
t10696 = t10756 * t13171;
t12124 = t11769 * t12435;
t10690 = t12124 * t11776;
t12512 = pkin(3) * t12688;
t12261 = pkin(2) * t12512;
t13069 = 0.2e1 * pkin(2);
t12032 = t11830 * (-t12320 * t12452 + (t10642 * t13052 + t10690 + (t12206 + (-t11839 * t12242 + t13069) * t12972) * pkin(3)) * t11845 - t12330 * t12972 + ((pkin(2) * t12199 + t12138 * t13068) * t11839 - t12436) * t11829 + (pkin(2) * t12104 - pkin(3) * t12124) * t11839 + t11698 * t12972) / ((t11317 + t11292 + (t11613 + t11682) * t11839 + t11840 * t12261 - t12170) * t11845 + (-t12009 + t11743 + (t11519 * t11839 * t11826 - t11830 * t13043) * t11824) * pkin(9) + t12015) * t12972;
t12024 = t11829 * t12098;
t12086 = t12480 * t11776;
t12275 = -0.2e1 * t12498;
t12711 = t11815 * t11898;
t12148 = ((((t10690 + t12254) * t11829 + t10642) * t11845 + t11925) * t11830 + (t12879 + (((-t11683 + t11774) * t12685 + t11846 * t12086) * t11826 + ((t11839 * t12275 + t11721) * t11830 + t12024 * t12641) * pkin(3)) * t11845 + (-t11839 * t11643 + t12711 + t13020) * t11830 - (t11329 * t11846 + t11713 * t12685) * t13029) * t12960) / ((t11155 + t11067) * t11845 + t12273) * t12960;
t10594 = -t10672 - t10696 - t12032 - t12148;
t12139 = t12960 * t12972;
t12084 = -0.2e1 * t12139;
t13021 = pkin(8) * t11825;
t10576 = pkin(2) * t10594 + t12084 * t13021;
t12790 = t11777 * t11709;
t11332 = t11710 * t11783 + t12790;
t11937 = pkin(2) * t12084 - t10594 * t13021;
t12963 = t10717 ^ 2 / t10858 ^ 2;
t12177 = t12963 * t13021;
t12489 = t10519 * t13021;
t13106 = -pkin(2) * t12963 + t10543 * t11840 + t11332 * t11846 - 0.2e1 * t12489;
t10399 = (-t10543 * t11846 + t10576 * t11829 + t11332 * t11840 + 0.2e1 * t10516 - t12177) * t11845 + (t13106 * t11829 + t11937) * t11839;
t13148 = t13002 * t12679;
t10444 = -t12489 + (t11709 * t12654 + t11710 * t11846) * t11783 + (t11709 * t11846 - t11710 * t12654) * t11777 + t13148 + pkin(2) * t12975;
t13149 = t13002 * t12676;
t13082 = t11829 * (-t13149 - (t11709 * t12651 - t11710 * t11840) * t11783 + (t11709 * t11840 + t11710 * t12651) * t11777 + t12975 * t13021 + t10516) + t11825 * (-t13002 * t11830 + (t11709 * t11783 - t11710 * t11777) * t11826);
t10408 = t10444 * t11839 + t13082 * t11845;
t13225 = t10399 * t12933 - t10408 * t13171;
t13224 = -t10399 * t13133 + t10408 * t13170;
t11689 = t13009 / 0.2e1 + t13010 / 0.2e1;
t10396 = (-t11839 * t10576 + t13106 * t11845) * t11829 + t11937 * t11845 - 0.2e1 * ((-t12282 / 0.2e1 + t11510 / 0.2e1 - t10546 / 0.2e1) * t11846 + (t11689 * t11783 + t12790 / 0.2e1) * t11840 - t12177 / 0.2e1 + t10516) * t11839;
t10409 = t10444 * t11845 - t13082 * t11839;
t13223 = t10396 * t12933 - t10409 * t13171;
t13222 = -t10396 * t13133 + t10409 * t13170;
t10517 = t10520 * pkin(2);
t12293 = t11826 * t12637;
t11368 = t11734 * t12293 + t11699;
t11293 = t11368 * t12687;
t11398 = t11735 * t12707 + t11690;
t11483 = t11738 + t12266;
t11620 = t11830 * t11684;
t12510 = pkin(3) * t12675;
t12168 = t11769 * t12510;
t11318 = (-t11620 + t12168) * t11815;
t12001 = t11318 + t11620 - t12251;
t11377 = (t11769 * t12293 - t13028) * t12498;
t12801 = t11769 * t11841;
t11448 = t11830 * t12801 + t12510;
t12014 = t11448 * t12184 + t11773 * t11841 + t11086 + t11377;
t12429 = t11829 * t12959;
t12205 = pkin(2) * t12429;
t12361 = t11769 * t11684;
t12428 = t11847 * t12959;
t12678 = t11826 * t11842;
t10808 = 0.1e1 / (t11119 + ((t11368 * t11829 + t11826 * t12519) * t11825 - t12168 + t12001) * t11847 + (t11448 * t12710 + t11645 * t12678) * t13013 + t11377 + (-t11848 * t12193 + t11773) * t11841 + t11736);
t11556 = t11823 * t12650 + t11827 * t11842;
t11559 = -t11823 * t11842 + t11827 * t12650;
t11222 = t11556 * t11784 + t11559 * t11778;
t11562 = t11823 * t11848 + t11827 * t12653;
t11565 = -t11823 * t12653 + t11827 * t11848;
t11231 = -t11562 * t11778 + t11565 * t11784;
t12341 = t11826 * t11684;
t11955 = -t11222 * t13031 - t11538 * t12341;
t12259 = t11841 * t12559;
t12349 = t11817 * t12805;
t13042 = pkin(2) * t11847;
t12531 = t11826 * t13042;
t12812 = t11645 * t11825;
t13036 = pkin(3) * t11723;
t13117 = t12687 * t13048;
t12319 = t11817 * t12783;
t13123 = t11826 * (0.2e1 * t12319 - t13051);
t12947 = (t11231 * t12349 + (((-t11222 * t11684 + t11538 * t12513) * t11829 + t11231 * t13036) * t11825 + t11955 * t11815 - t11955) * t11847 + t11538 * t12259 + (t11231 * t12812 + (-t11538 * t12531 + (-t11222 * t11815 + t11538 * t12301 + t11222) * t12801 + (t11222 * t13117 + t11538 * t13123) * pkin(3)) * t11824) * pkin(9)) * t10808;
t11225 = -t11556 * t11778 + t11559 * t11784;
t11228 = t11562 * t11784 + t11565 * t11778;
t11952 = t11225 * t13031 + t11544 * t12341;
t12950 = (t11228 * t12349 + (((t11225 * t11684 - t11544 * t12513) * t11829 + t11228 * t13036) * t11825 + t11952 * t11815 - t11952) * t11847 - t11544 * t12259 + (t11228 * t12812 + (t11544 * t12531 + (t11225 * t11815 - t11544 * t12301 - t11225) * t12801 + (-t11225 * t13117 - t11544 * t13123) * pkin(3)) * t11824) * pkin(9)) * t10808;
t13071 = -t10709 * t12947 - t10757 * t12950 + t10985 * t11871 - (t11383 * t12765 + t11807 * t13095) * t11851 - t11150 * t12724 - t13095 * t11853 + t11383 * t12725 - (-t10985 * t11807 - t11150 * t12765 - t11383 * t11437 + t12739 * t13095) * t11869 - (-(t11651 * t11735 * t12430 + (-t11263 * t11817 + (t11483 * t12276 - t11769 * t12355 + t12361) * t11847 + (t11398 * t12687 - t12085) * pkin(9)) * t12971) * t12959 - ((-t12156 * t12971 - t13051 * t12959) * t11847 * t12361 + ((-t11734 * t12205 + t12971 * t13054) * t11817 + (t11483 * t12428 * t13053 + (t11817 * t12223 - 0.4e1 * t11738 + t11944) * t12971 * t11847) * pkin(3)) * t11825 + ((t11398 * t12429 - t12563 * t12971) * t11825 + ((t12222 * t11817 + t12071) * t11841 * t12449 + ((t13050 * t11817 - t13051) * t12959 + (t11817 * t12155 + t12561) * t12971) * t13031) * t11824) * pkin(9)) * t12971) / ((t11293 + t12001) * t11847 + t11736 + (pkin(9) * t11460 + t12022 * t12637 + t13101 * t13026) * t11826 + t12014);
t13001 = -t11383 * t12308 - t12996 + t13071;
t10547 = t11826 * t13001;
t11511 = t11778 * t12806;
t12281 = t11784 * t12807;
t10544 = t10547 - t11511 + t12281;
t10673 = t10709 * t13168;
t10926 = (t11538 * t12830 - t11544 * t11593) * t11847 + t11308 * t11544 + t11538 * t12848;
t13169 = t10847 * t10926;
t10697 = t10757 * t13169;
t12123 = t11769 * t12430;
t10691 = t12123 * t11776;
t12031 = t11830 * (-t12319 * t12450 + (t10643 * t13052 + t10691 + (t12205 + (-t11841 * t12242 + t13069) * t12971) * pkin(3)) * t11847 - t12330 * t12971 + ((pkin(2) * t12198 + t12136 * t13068) * t11841 - t12431) * t11829 + (pkin(2) * t12103 - pkin(3) * t12123) * t11841 + t11698 * t12971) / ((t11318 + t11293 + (t11614 + t11682) * t11841 + t11842 * t12261 - t12168) * t11847 + (-t12008 + t11743 + (t11520 * t11841 * t11826 - t11830 * t13042) * t11824) * pkin(9) + t12014) * t12971;
t12147 = ((((t10691 + t12253) * t11829 + t10643) * t11847 + t11924) * t11830 + (t12878 + (((-t11684 + t11774) * t12684 + t11848 * t12086) * t11826 + ((t11841 * t12275 + t11723) * t11830 + t12024 * t12637) * pkin(3)) * t11847 + (-t11841 * t11643 + t12711 + t13019) * t11830 - (t11330 * t11848 + t11714 * t12684) * t13029) * t12959) / ((t11156 + t11068) * t11847 + t12272) * t12959;
t10595 = -t10673 - t10697 - t12031 - t12147;
t12137 = t12959 * t12971;
t12083 = -0.2e1 * t12137;
t10577 = pkin(2) * t10595 + t12083 * t13021;
t12789 = t11778 * t11709;
t11333 = t11710 * t11784 + t12789;
t11936 = pkin(2) * t12083 - t10595 * t13021;
t12962 = t10718 ^ 2 / t10859 ^ 2;
t12176 = t12962 * t13021;
t12488 = t10520 * t13021;
t13107 = -pkin(2) * t12962 + t10544 * t11842 + t11333 * t11848 - 0.2e1 * t12488;
t10400 = (-t10544 * t11848 + t10577 * t11829 + t11333 * t11842 + 0.2e1 * t10517 - t12176) * t11847 + (t13107 * t11829 + t11936) * t11841;
t13150 = t13001 * t12678;
t10445 = -t12488 + (t11709 * t12653 + t11710 * t11848) * t11784 + (t11709 * t11848 - t11710 * t12653) * t11778 + t13150 + pkin(2) * t12974;
t13151 = t13001 * t12675;
t13083 = t11829 * (-t13151 - (t11709 * t12650 - t11710 * t11842) * t11784 + (t11709 * t11842 + t11710 * t12650) * t11778 + t12974 * t13021 + t10517) + (-t13001 * t11830 + (t11709 * t11784 - t11710 * t11778) * t11826) * t11825;
t10410 = t10445 * t11841 + t13083 * t11847;
t13221 = t10400 * t12929 - t10410 * t13169;
t13220 = -t10400 * t13132 + t10410 * t13168;
t10397 = (-t11841 * t10577 + t13107 * t11847) * t11829 + t11936 * t11847 - 0.2e1 * ((-t12281 / 0.2e1 + t11511 / 0.2e1 - t10547 / 0.2e1) * t11848 + (t11689 * t11784 + t12789 / 0.2e1) * t11842 - t12176 / 0.2e1 + t10517) * t11841;
t10411 = t10445 * t11847 - t13083 * t11841;
t13219 = t10397 * t12929 - t10411 * t13169;
t13218 = -t10397 * t13132 + t10411 * t13168;
t10518 = t10521 * pkin(2);
t12292 = t11826 * t12633;
t11369 = t11734 * t12292 + t11699;
t11294 = t11369 * t12687;
t11399 = t11735 * t12705 + t11690;
t11484 = t11739 + t12266;
t11621 = t11830 * t11685;
t12509 = pkin(3) * t12674;
t12166 = t11769 * t12509;
t11319 = (-t11621 + t12166) * t11815;
t12000 = t11319 + t11621 - t12251;
t11378 = (t11769 * t12292 - t13028) * t12498;
t12800 = t11769 * t11843;
t11449 = t11830 * t12800 + t12509;
t12013 = t11449 * t12184 + t11773 * t11843 + t11087 + t11378;
t12424 = t11829 * t12958;
t12204 = pkin(2) * t12424;
t12360 = t11769 * t11685;
t12423 = t11849 * t12958;
t12677 = t11826 * t11844;
t10809 = 0.1e1 / (t11120 + ((t11369 * t11829 + t11826 * t12518) * t11825 - t12166 + t12000) * t11849 + (t11449 * t12710 + t11646 * t12677) * t13013 + t11378 + (-t11850 * t12193 + t11773) * t11843 + t11736);
t11557 = t11823 * t12649 + t11827 * t11844;
t11560 = -t11823 * t11844 + t11827 * t12649;
t11223 = t11557 * t11785 + t11560 * t11779;
t11563 = t11823 * t11850 + t11827 * t12652;
t11566 = -t11823 * t12652 + t11827 * t11850;
t11232 = -t11563 * t11779 + t11566 * t11785;
t12340 = t11826 * t11685;
t11954 = -t11223 * t13031 - t11539 * t12340;
t12258 = t11843 * t12559;
t12348 = t11818 * t12805;
t13041 = pkin(2) * t11849;
t12530 = t11826 * t13041;
t12811 = t11646 * t11825;
t13035 = pkin(3) * t11725;
t13118 = t12687 * t13047;
t12318 = t11818 * t12783;
t13124 = t11826 * (0.2e1 * t12318 - t13051);
t12946 = (t11232 * t12348 + (((-t11223 * t11685 + t11539 * t12513) * t11829 + t11232 * t13035) * t11825 + t11954 * t11815 - t11954) * t11849 + t11539 * t12258 + (t11232 * t12811 + (-t11539 * t12530 + (-t11223 * t11815 + t11539 * t12301 + t11223) * t12800 + (t11223 * t13118 + t11539 * t13124) * pkin(3)) * t11824) * pkin(9)) * t10809;
t11226 = -t11557 * t11779 + t11560 * t11785;
t11229 = t11563 * t11785 + t11566 * t11779;
t11951 = t11226 * t13031 + t11545 * t12340;
t12949 = (t11229 * t12348 + (((t11226 * t11685 - t11545 * t12513) * t11829 + t11229 * t13035) * t11825 + t11951 * t11815 - t11951) * t11849 - t11545 * t12258 + (t11229 * t12811 + (t11545 * t12530 + (t11226 * t11815 - t11545 * t12301 - t11226) * t12800 + (-t11226 * t13118 - t11545 * t13124) * pkin(3)) * t11824) * pkin(9)) * t10809;
t13072 = -t10710 * t12946 - t10758 * t12949 + t10986 * t11871 - (t11384 * t12765 + t11807 * t13096) * t11851 - t11151 * t12724 - t13096 * t11853 + t11384 * t12725 - (-t10986 * t11807 - t11151 * t12765 - t11384 * t11437 + t12739 * t13096) * t11869 - (-(t11652 * t11735 * t12425 + (-t11263 * t11818 + (t11484 * t12276 - t11769 * t12354 + t12360) * t11849 + (t11399 * t12687 - t12085) * pkin(9)) * t12970) * t12958 - ((-t12156 * t12970 - t13051 * t12958) * t11849 * t12360 + ((-t11734 * t12204 + t12970 * t13054) * t11818 + (t11484 * t12423 * t13053 + (t11818 * t12223 - 0.4e1 * t11739 + t11944) * t12970 * t11849) * pkin(3)) * t11825 + ((t11399 * t12424 - t12563 * t12970) * t11825 + ((t12222 * t11818 + t12071) * t11843 * t12447 + ((t13050 * t11818 - t13051) * t12958 + (t11818 * t12155 + t12561) * t12970) * t13031) * t11824) * pkin(9)) * t12970) / ((t11294 + t12000) * t11849 + t11736 + (pkin(9) * t11461 + t12022 * t12633 + t13102 * t13025) * t11826 + t12013);
t13000 = -t11384 * t12308 - t12996 + t13072;
t10548 = t11826 * t13000;
t11512 = t11779 * t12806;
t12280 = t11785 * t12807;
t10545 = t10548 - t11512 + t12280;
t10674 = t10710 * t13166;
t10928 = (t11539 * t12829 - t11545 * t11594) * t11849 + t11310 * t11545 + t11539 * t12847;
t13167 = t10848 * t10928;
t10698 = t10758 * t13167;
t12122 = t11769 * t12425;
t10692 = t12122 * t11776;
t12036 = (-t12318 * t12448 + (t10644 * t13052 + t10692 + (t12204 + (-t11843 * t12242 + t13069) * t12970) * pkin(3)) * t11849 - t12330 * t12970 + ((pkin(2) * t12197 + t12134 * t13068) * t11843 - t12426) * t11829 + (pkin(2) * t12102 - pkin(3) * t12122) * t11843 + t11698 * t12970) * t11830 / ((t11319 + t11294 + (t11615 + t11682) * t11843 + t11844 * t12261 - t12166) * t11849 + (-t12007 + t11743 + (t11521 * t11843 * t11826 - t11830 * t13041) * t11824) * pkin(9) + t12013) * t12970;
t12146 = ((((t10692 + t12252) * t11829 + t10644) * t11849 + t11923) * t11830 + (t12877 + (((-t11685 + t11774) * t12683 + t11850 * t12086) * t11826 + ((t11843 * t12275 + t11725) * t11830 + t12024 * t12633) * pkin(3)) * t11849 + (-t11843 * t11643 + t12711 + t13018) * t11830 - (t11331 * t11850 + t11715 * t12683) * t13029) * t12958) / ((t11157 + t11069) * t11849 + t12271) * t12958;
t10596 = -t10674 - t10698 - t12036 - t12146;
t12135 = t12958 * t12970;
t12082 = -0.2e1 * t12135;
t10578 = pkin(2) * t10596 + t12082 * t13021;
t12788 = t11779 * t11709;
t11334 = t11710 * t11785 + t12788;
t11935 = pkin(2) * t12082 - t10596 * t13021;
t12961 = t10719 ^ 2 / t10860 ^ 2;
t12175 = t12961 * t13021;
t12487 = t10521 * t13021;
t13108 = -pkin(2) * t12961 + t10545 * t11844 + t11334 * t11850 - 0.2e1 * t12487;
t10401 = (-t10545 * t11850 + t10578 * t11829 + t11334 * t11844 + 0.2e1 * t10518 - t12175) * t11849 + (t13108 * t11829 + t11935) * t11843;
t13152 = t13000 * t12677;
t10446 = -t12487 + (t11709 * t12652 + t11710 * t11850) * t11785 + (t11709 * t11850 - t11710 * t12652) * t11779 + t13152 + pkin(2) * t12973;
t13153 = t13000 * t12674;
t13084 = t11829 * (-t13153 - (t11709 * t12649 - t11710 * t11844) * t11785 + (t11709 * t11844 + t11710 * t12649) * t11779 + t12973 * t13021 + t10518) + t11825 * (-t13000 * t11830 + (t11709 * t11785 - t11710 * t11779) * t11826);
t10412 = t10446 * t11843 + t13084 * t11849;
t13217 = t10401 * t12925 - t10412 * t13167;
t13216 = -t10401 * t13131 + t10412 * t13166;
t10398 = (-t11843 * t10578 + t13108 * t11849) * t11829 + t11935 * t11849 - 0.2e1 * ((-t12280 / 0.2e1 + t11512 / 0.2e1 - t10548 / 0.2e1) * t11850 + (t11689 * t11785 + t12788 / 0.2e1) * t11844 - t12175 / 0.2e1 + t10518) * t11843;
t10413 = t10446 * t11849 - t13084 * t11843;
t13215 = t10398 * t12925 - t10413 * t13167;
t13214 = -t10398 * t13131 + t10413 * t13166;
t10528 = t10531 * pkin(2);
t12291 = t11826 * t12626;
t11370 = t11734 * t12291 + t11699;
t11295 = t11370 * t12687;
t11400 = t11735 * t12700 + t11690;
t11485 = t11740 + t12266;
t11628 = t11830 * t11686;
t12508 = pkin(3) * t12670;
t12164 = t11769 * t12508;
t11320 = (-t11628 + t12164) * t11815;
t11999 = t11320 + t11628 - t12251;
t11388 = (t11769 * t12291 - t13028) * t12498;
t12796 = t11769 * t11857;
t11453 = t11830 * t12796 + t12508;
t12012 = t11453 * t12184 + t11773 * t11857 + t11089 + t11388;
t12203 = pkin(2) * t12420;
t12359 = t11769 * t11686;
t12419 = t11863 * t12954;
t12673 = t11826 * t11858;
t10813 = 0.1e1 / (t11130 + ((t11370 * t11829 + t11826 * t12517) * t11825 - t12164 + t11999) * t11863 + (t11453 * t12710 + t11653 * t12673) * t13013 + t11388 + (-t11864 * t12193 + t11773) * t11857 + t11736);
t11572 = t11823 * t12645 + t11827 * t11858;
t11575 = -t11823 * t11858 + t11827 * t12645;
t11245 = t11572 * t11786 + t11575 * t11780;
t11578 = t11823 * t11864 + t11827 * t12648;
t11581 = -t11823 * t12648 + t11827 * t11864;
t11254 = -t11578 * t11780 + t11581 * t11786;
t12339 = t11826 * t11686;
t11950 = -t11245 * t13031 - t11540 * t12339;
t12257 = t11857 * t12559;
t12347 = t11819 * t12805;
t13040 = pkin(2) * t11863;
t12529 = t11826 * t13040;
t12810 = t11653 * t11825;
t13034 = pkin(3) * t11727;
t13119 = t12687 * t13046;
t12317 = t11819 * t12783;
t13125 = t11826 * (0.2e1 * t12317 - t13051);
t12942 = (t11254 * t12347 + (((-t11245 * t11686 + t11540 * t12513) * t11829 + t11254 * t13034) * t11825 + t11950 * t11815 - t11950) * t11863 + t11540 * t12257 + (t11254 * t12810 + (-t11540 * t12529 + (-t11245 * t11815 + t11540 * t12301 + t11245) * t12796 + (t11245 * t13119 + t11540 * t13125) * pkin(3)) * t11824) * pkin(9)) * t10813;
t11248 = -t11572 * t11780 + t11575 * t11786;
t11251 = t11578 * t11786 + t11581 * t11780;
t11947 = t11248 * t13031 + t11546 * t12339;
t12945 = (t11251 * t12347 + (((t11248 * t11686 - t11546 * t12513) * t11829 + t11251 * t13034) * t11825 + t11947 * t11815 - t11947) * t11863 - t11546 * t12257 + (t11251 * t12810 + (t11546 * t12529 + (t11248 * t11815 - t11546 * t12301 - t11248) * t12796 + (-t11248 * t13119 - t11546 * t13125) * pkin(3)) * t11824) * pkin(9)) * t10813;
t13073 = -t10711 * t12942 - t10759 * t12945 + t10987 * t11871 - (t11385 * t12765 + t11807 * t13097) * t11851 - t11152 * t12724 - t13097 * t11853 + t11385 * t12725 - (-t10987 * t11807 - t11152 * t12765 - t11385 * t11437 + t12739 * t13097) * t11869 - (-(t11665 * t11735 * t12421 + (-t11263 * t11819 + (t11485 * t12276 - t11769 * t12353 + t12359) * t11863 + (t11400 * t12687 - t12085) * pkin(9)) * t12966) * t12954 - ((-t12156 * t12966 - t13051 * t12954) * t11863 * t12359 + ((-t11734 * t12203 + t12966 * t13054) * t11819 + (t11485 * t12419 * t13053 + (t11819 * t12223 - 0.4e1 * t11740 + t11944) * t12966 * t11863) * pkin(3)) * t11825 + ((t11400 * t12420 - t12563 * t12966) * t11825 + ((t12222 * t11819 + t12071) * t11857 * t12442 + ((t13050 * t11819 - t13051) * t12954 + (t11819 * t12155 + t12561) * t12966) * t13031) * t11824) * pkin(9)) * t12966) / ((t11295 + t11999) * t11863 + t11736 + (pkin(9) * t11464 + t12022 * t12626 + t13103 * t13024) * t11826 + t12012);
t12999 = -t11385 * t12308 - t12996 + t13073;
t10567 = t11826 * t12999;
t11513 = t11780 * t12806;
t12279 = t11786 * t12807;
t10564 = t10567 - t11513 + t12279;
t10675 = t10711 * t13164;
t10936 = (t11540 * t12825 - t11546 * t11604) * t11863 + t11312 * t11546 + t11540 * t12846;
t13165 = t10849 * t10936;
t10699 = t10759 * t13165;
t12121 = t11769 * t12421;
t10693 = t12121 * t11776;
t12035 = (-t12317 * t12443 + (t10645 * t13052 + t10693 + (t12203 + (-t11857 * t12242 + t13069) * t12966) * pkin(3)) * t11863 - t12330 * t12966 + ((pkin(2) * t12196 + t12129 * t13068) * t11857 - t12422) * t11829 + (pkin(2) * t12101 - pkin(3) * t12121) * t11857 + t11698 * t12966) * t11830 / ((t11320 + t11295 + (t11622 + t11682) * t11857 + t11858 * t12261 - t12164) * t11863 + (-t12006 + t11743 + (t11534 * t11857 * t11826 - t11830 * t13040) * t11824) * pkin(9) + t12012) * t12966;
t12145 = ((((t10693 + t12264) * t11829 + t10645) * t11863 + t11922) * t11830 + (t12876 + (((-t11686 + t11774) * t12682 + t11864 * t12086) * t11826 + ((t11857 * t12275 + t11727) * t11830 + t12024 * t12626) * pkin(3)) * t11863 + (-t11857 * t11643 + t12711 + t13017) * t11830 - (t11344 * t11864 + t11716 * t12682) * t13029) * t12954) / ((t11158 + t11070) * t11863 + t12270) * t12954;
t10597 = -t10675 - t10699 - t12035 - t12145;
t12130 = t12954 * t12966;
t12081 = -0.2e1 * t12130;
t10579 = pkin(2) * t10597 + t12081 * t13021;
t12787 = t11780 * t11709;
t11335 = t11710 * t11786 + t12787;
t11934 = pkin(2) * t12081 - t10597 * t13021;
t12957 = t10723 ^ 2 / t10885 ^ 2;
t12174 = t12957 * t13021;
t12486 = t10531 * t13021;
t13109 = -pkin(2) * t12957 + t10564 * t11858 + t11335 * t11864 - 0.2e1 * t12486;
t10405 = (-t10564 * t11864 + t10579 * t11829 + t11335 * t11858 + 0.2e1 * t10528 - t12174) * t11863 + (t13109 * t11829 + t11934) * t11857;
t13154 = t12999 * t12673;
t10447 = -t12486 + (t11709 * t12648 + t11710 * t11864) * t11786 + (t11709 * t11864 - t11710 * t12648) * t11780 + t13154 + pkin(2) * t12969;
t13155 = t12999 * t12670;
t13085 = t11829 * (-t13155 - (t11709 * t12645 - t11710 * t11858) * t11786 + (t11709 * t11858 + t11710 * t12645) * t11780 + t12969 * t13021 + t10528) + t11825 * (-t12999 * t11830 + (t11709 * t11786 - t11710 * t11780) * t11826);
t10414 = t10447 * t11857 + t13085 * t11863;
t13213 = t10405 * t12921 - t10414 * t13165;
t13212 = -t10405 * t13130 + t10414 * t13164;
t10402 = (-t11857 * t10579 + t13109 * t11863) * t11829 + t11934 * t11863 - 0.2e1 * t11857 * ((-t12279 / 0.2e1 + t11513 / 0.2e1 - t10567 / 0.2e1) * t11864 + (t11689 * t11786 + t12787 / 0.2e1) * t11858 - t12174 / 0.2e1 + t10528);
t10415 = t10447 * t11863 - t13085 * t11857;
t13211 = t10402 * t12921 - t10415 * t13165;
t13210 = -t10402 * t13130 + t10415 * t13164;
t10529 = t10532 * pkin(2);
t12290 = t11826 * t12622;
t11371 = t11734 * t12290 + t11699;
t11296 = t11371 * t12687;
t11401 = t11735 * t12698 + t11690;
t11486 = t11741 + t12266;
t11629 = t11830 * t11687;
t12507 = pkin(3) * t12669;
t12162 = t11769 * t12507;
t11321 = (-t11629 + t12162) * t11815;
t11998 = t11321 + t11629 - t12251;
t11389 = (t11769 * t12290 - t13028) * t12498;
t12795 = t11769 * t11859;
t11454 = t11830 * t12795 + t12507;
t12011 = t11454 * t12184 + t11773 * t11859 + t11090 + t11389;
t12202 = pkin(2) * t12416;
t12358 = t11769 * t11687;
t12415 = t11865 * t12953;
t12672 = t11826 * t11860;
t10814 = 0.1e1 / (t11131 + ((t11371 * t11829 + t11826 * t12516) * t11825 - t12162 + t11998) * t11865 + (t11454 * t12710 + t11654 * t12672) * t13013 + t11389 + (-t11866 * t12193 + t11773) * t11859 + t11736);
t11573 = t11823 * t12644 + t11827 * t11860;
t11576 = -t11823 * t11860 + t11827 * t12644;
t11246 = t11573 * t11787 + t11576 * t11781;
t11579 = t11823 * t11866 + t11827 * t12647;
t11582 = -t11823 * t12647 + t11827 * t11866;
t11255 = -t11579 * t11781 + t11582 * t11787;
t12338 = t11826 * t11687;
t11949 = -t11246 * t13031 - t11541 * t12338;
t12256 = t11859 * t12559;
t12346 = t11820 * t12805;
t13039 = pkin(2) * t11865;
t12528 = t11826 * t13039;
t12809 = t11654 * t11825;
t13033 = pkin(3) * t11729;
t13120 = t12687 * t13045;
t12316 = t11820 * t12783;
t13126 = t11826 * (0.2e1 * t12316 - t13051);
t12941 = (t11255 * t12346 + (((-t11246 * t11687 + t11541 * t12513) * t11829 + t11255 * t13033) * t11825 + t11949 * t11815 - t11949) * t11865 + t11541 * t12256 + (t11255 * t12809 + (-t11541 * t12528 + (-t11246 * t11815 + t11541 * t12301 + t11246) * t12795 + (t11246 * t13120 + t11541 * t13126) * pkin(3)) * t11824) * pkin(9)) * t10814;
t11249 = -t11573 * t11781 + t11576 * t11787;
t11252 = t11579 * t11787 + t11582 * t11781;
t11946 = t11249 * t13031 + t11547 * t12338;
t12944 = (t11252 * t12346 + (((t11249 * t11687 - t11547 * t12513) * t11829 + t11252 * t13033) * t11825 + t11946 * t11815 - t11946) * t11865 - t11547 * t12256 + (t11252 * t12809 + (t11547 * t12528 + (t11249 * t11815 - t11547 * t12301 - t11249) * t12795 + (-t11249 * t13120 - t11547 * t13126) * pkin(3)) * t11824) * pkin(9)) * t10814;
t13074 = -t10712 * t12941 - t10760 * t12944 + t10988 * t11871 - (t11386 * t12765 + t11807 * t13098) * t11851 - t11153 * t12724 - t13098 * t11853 + t11386 * t12725 - (-t10988 * t11807 - t11153 * t12765 - t11386 * t11437 + t12739 * t13098) * t11869 - (-(t11666 * t11735 * t12417 + (-t11263 * t11820 + (t11486 * t12276 - t11769 * t12352 + t12358) * t11865 + (t11401 * t12687 - t12085) * pkin(9)) * t12965) * t12953 - ((-t12156 * t12965 - t13051 * t12953) * t11865 * t12358 + ((-t11734 * t12202 + t12965 * t13054) * t11820 + (t11486 * t12415 * t13053 + (t11820 * t12223 - 0.4e1 * t11741 + t11944) * t12965 * t11865) * pkin(3)) * t11825 + ((t11401 * t12416 - t12563 * t12965) * t11825 + ((t12222 * t11820 + t12071) * t11859 * t12440 + ((t13050 * t11820 - t13051) * t12953 + (t11820 * t12155 + t12561) * t12965) * t13031) * t11824) * pkin(9)) * t12965) / ((t11296 + t11998) * t11865 + t11736 + (pkin(9) * t11465 + t12022 * t12622 + t13104 * t13023) * t11826 + t12011);
t12998 = -t11386 * t12308 - t12996 + t13074;
t10568 = t11826 * t12998;
t11514 = t11781 * t12806;
t12278 = t11787 * t12807;
t10565 = t10568 - t11514 + t12278;
t10676 = t10712 * t13162;
t10938 = (t11541 * t12824 - t11547 * t11605) * t11865 + t11314 * t11547 + t11541 * t12845;
t13163 = t10850 * t10938;
t10700 = t10760 * t13163;
t12120 = t11769 * t12417;
t10694 = t12120 * t11776;
t12034 = (-t12316 * t12441 + (t10646 * t13052 + t10694 + (t12202 + (-t11859 * t12242 + t13069) * t12965) * pkin(3)) * t11865 - t12330 * t12965 + ((pkin(2) * t12195 + t12127 * t13068) * t11859 - t12418) * t11829 + (pkin(2) * t12100 - pkin(3) * t12120) * t11859 + t11698 * t12965) * t11830 / ((t11321 + t11296 + (t11623 + t11682) * t11859 + t11860 * t12261 - t12162) * t11865 + (-t12005 + t11743 + (t11535 * t11859 * t11826 - t11830 * t13039) * t11824) * pkin(9) + t12011) * t12965;
t12144 = ((((t10694 + t12263) * t11829 + t10646) * t11865 + t11921) * t11830 + (t12875 + (((-t11687 + t11774) * t12681 + t11866 * t12086) * t11826 + ((t11859 * t12275 + t11729) * t11830 + t12024 * t12622) * pkin(3)) * t11865 + (-t11859 * t11643 + t12711 + t13016) * t11830 - (t11345 * t11866 + t11717 * t12681) * t13029) * t12953) / ((t11159 + t11071) * t11865 + t12269) * t12953;
t10598 = -t10676 - t10700 - t12034 - t12144;
t12128 = t12953 * t12965;
t12080 = -0.2e1 * t12128;
t10580 = pkin(2) * t10598 + t12080 * t13021;
t12786 = t11781 * t11709;
t11336 = t11710 * t11787 + t12786;
t11933 = pkin(2) * t12080 - t10598 * t13021;
t12956 = t10724 ^ 2 / t10886 ^ 2;
t12173 = t12956 * t13021;
t12485 = t10532 * t13021;
t13110 = -pkin(2) * t12956 + t10565 * t11860 + t11336 * t11866 - 0.2e1 * t12485;
t10406 = (-t10565 * t11866 + t10580 * t11829 + t11336 * t11860 + 0.2e1 * t10529 - t12173) * t11865 + (t13110 * t11829 + t11933) * t11859;
t13156 = t12998 * t12672;
t10448 = -t12485 + (t11709 * t12647 + t11710 * t11866) * t11787 + (t11709 * t11866 - t11710 * t12647) * t11781 + t13156 + pkin(2) * t12968;
t13157 = t12998 * t12669;
t13086 = t11829 * (-t13157 - (t11709 * t12644 - t11710 * t11860) * t11787 + (t11709 * t11860 + t11710 * t12644) * t11781 + t12968 * t13021 + t10529) + (-t12998 * t11830 + (t11709 * t11787 - t11710 * t11781) * t11826) * t11825;
t10416 = t10448 * t11859 + t13086 * t11865;
t13209 = t10406 * t12917 - t10416 * t13163;
t13208 = -t10406 * t13129 + t10416 * t13162;
t10403 = (-t11859 * t10580 + t13110 * t11865) * t11829 + t11933 * t11865 - 0.2e1 * ((-t12278 / 0.2e1 + t11514 / 0.2e1 - t10568 / 0.2e1) * t11866 + (t11689 * t11787 + t12786 / 0.2e1) * t11860 - t12173 / 0.2e1 + t10529) * t11859;
t10417 = t10448 * t11865 - t13086 * t11859;
t13207 = t10403 * t12917 - t10417 * t13163;
t13206 = -t10403 * t13129 + t10417 * t13162;
t10530 = t10533 * pkin(2);
t12289 = t11826 * t12618;
t11372 = t11734 * t12289 + t11699;
t11297 = t11372 * t12687;
t11402 = t11735 * t12696 + t11690;
t11487 = t11742 + t12266;
t11630 = t11830 * t11688;
t12506 = pkin(3) * t12668;
t12160 = t11769 * t12506;
t11322 = (-t11630 + t12160) * t11815;
t11997 = t11322 + t11630 - t12251;
t11390 = (t11769 * t12289 - t13028) * t12498;
t12794 = t11769 * t11861;
t11455 = t11830 * t12794 + t12506;
t12010 = t11455 * t12184 + t11773 * t11861 + t11091 + t11390;
t12201 = pkin(2) * t12412;
t12357 = t11769 * t11688;
t12411 = t11867 * t12952;
t12671 = t11826 * t11862;
t10815 = 0.1e1 / (t11132 + ((t11372 * t11829 + t11826 * t12515) * t11825 - t12160 + t11997) * t11867 + (t11455 * t12710 + t11655 * t12671) * t13013 + t11390 + (-t11868 * t12193 + t11773) * t11861 + t11736);
t11574 = t11823 * t12643 + t11827 * t11862;
t11577 = -t11823 * t11862 + t11827 * t12643;
t11247 = t11574 * t11788 + t11577 * t11782;
t11580 = t11823 * t11868 + t11827 * t12646;
t11583 = -t11823 * t12646 + t11827 * t11868;
t11256 = -t11580 * t11782 + t11583 * t11788;
t12337 = t11826 * t11688;
t11948 = -t11247 * t13031 - t11542 * t12337;
t12255 = t11861 * t12559;
t12345 = t11821 * t12805;
t13038 = pkin(2) * t11867;
t12527 = t11826 * t13038;
t12808 = t11655 * t11825;
t13032 = pkin(3) * t11731;
t13121 = t12687 * t13044;
t12315 = t11821 * t12783;
t13127 = t11826 * (0.2e1 * t12315 - t13051);
t12940 = (t11256 * t12345 + (((-t11247 * t11688 + t11542 * t12513) * t11829 + t11256 * t13032) * t11825 + t11948 * t11815 - t11948) * t11867 + t11542 * t12255 + (t11256 * t12808 + (-t11542 * t12527 + (-t11247 * t11815 + t11542 * t12301 + t11247) * t12794 + (t11247 * t13121 + t11542 * t13127) * pkin(3)) * t11824) * pkin(9)) * t10815;
t11250 = -t11574 * t11782 + t11577 * t11788;
t11253 = t11580 * t11788 + t11583 * t11782;
t11945 = t11250 * t13031 + t11548 * t12337;
t12943 = (t11253 * t12345 + (((t11250 * t11688 - t11548 * t12513) * t11829 + t11253 * t13032) * t11825 + t11945 * t11815 - t11945) * t11867 - t11548 * t12255 + (t11253 * t12808 + (t11548 * t12527 + (t11250 * t11815 - t11548 * t12301 - t11250) * t12794 + (-t11250 * t13121 - t11548 * t13127) * pkin(3)) * t11824) * pkin(9)) * t10815;
t13075 = -t10713 * t12940 - t10761 * t12943 + t10989 * t11871 - (t11387 * t12765 + t11807 * t13099) * t11851 - t11154 * t12724 - t13099 * t11853 + t11387 * t12725 - (-t10989 * t11807 - t11154 * t12765 - t11387 * t11437 + t12739 * t13099) * t11869 - (-(t11667 * t11735 * t12413 + (-t11263 * t11821 + (t11487 * t12276 - t11769 * t12351 + t12357) * t11867 + (t11402 * t12687 - t12085) * pkin(9)) * t12964) * t12952 - ((-t12156 * t12964 - t13051 * t12952) * t11867 * t12357 + ((-t11734 * t12201 + t12964 * t13054) * t11821 + (t11487 * t12411 * t13053 + (t11821 * t12223 - 0.4e1 * t11742 + t11944) * t12964 * t11867) * pkin(3)) * t11825 + ((t11402 * t12412 - t12563 * t12964) * t11825 + ((t12222 * t11821 + t12071) * t11861 * t12438 + ((t13050 * t11821 - t13051) * t12952 + (t11821 * t12155 + t12561) * t12964) * t13031) * t11824) * pkin(9)) * t12964) / ((t11297 + t11997) * t11867 + t11736 + (pkin(9) * t11466 + t12022 * t12618 + t13105 * t13022) * t11826 + t12010);
t12997 = -t11387 * t12308 - t12996 + t13075;
t10569 = t11826 * t12997;
t11515 = t11782 * t12806;
t12277 = t11788 * t12807;
t10566 = t10569 - t11515 + t12277;
t10677 = t10713 * t13160;
t10940 = (t11542 * t12823 - t11548 * t11606) * t11867 + t11316 * t11548 + t11542 * t12844;
t13161 = t10851 * t10940;
t10701 = t10761 * t13161;
t12119 = t11769 * t12413;
t10695 = t12119 * t11776;
t12033 = (-t12315 * t12439 + (t10647 * t13052 + t10695 + (t12201 + (-t11861 * t12242 + t13069) * t12964) * pkin(3)) * t11867 - t12330 * t12964 + ((pkin(2) * t12194 + t12125 * t13068) * t11861 - t12414) * t11829 + (pkin(2) * t12099 - pkin(3) * t12119) * t11861 + t11698 * t12964) * t11830 / ((t11322 + t11297 + (t11624 + t11682) * t11861 + t11862 * t12261 - t12160) * t11867 + (-t12004 + t11743 + (t11536 * t11861 * t11826 - t11830 * t13038) * t11824) * pkin(9) + t12010) * t12964;
t12143 = ((((t10695 + t12262) * t11829 + t10647) * t11867 + t11920) * t11830 + (t12874 + (((-t11688 + t11774) * t12680 + t11868 * t12086) * t11826 + ((t11861 * t12275 + t11731) * t11830 + t12024 * t12618) * pkin(3)) * t11867 + (-t11861 * t11643 + t12711 + t13015) * t11830 - (t11346 * t11868 + t11718 * t12680) * t13029) * t12952) / ((t11160 + t11072) * t11867 + t12268) * t12952;
t10599 = -t10677 - t10701 - t12033 - t12143;
t12126 = t12952 * t12964;
t12079 = -0.2e1 * t12126;
t10581 = pkin(2) * t10599 + t12079 * t13021;
t12785 = t11782 * t11709;
t11337 = t11710 * t11788 + t12785;
t11932 = pkin(2) * t12079 - t10599 * t13021;
t12955 = t10725 ^ 2 / t10887 ^ 2;
t12172 = t12955 * t13021;
t12484 = t10533 * t13021;
t13111 = -pkin(2) * t12955 + t10566 * t11862 + t11337 * t11868 - 0.2e1 * t12484;
t10407 = (-t10566 * t11868 + t10581 * t11829 + t11337 * t11862 + 0.2e1 * t10530 - t12172) * t11867 + (t13111 * t11829 + t11932) * t11861;
t13158 = t12997 * t12671;
t10449 = -t12484 + (t11709 * t12646 + t11710 * t11868) * t11788 + (t11709 * t11868 - t11710 * t12646) * t11782 + t13158 + pkin(2) * t12967;
t13159 = t12997 * t12668;
t13087 = t11829 * (-t13159 - (t11709 * t12643 - t11710 * t11862) * t11788 + (t11709 * t11862 + t11710 * t12643) * t11782 + t12967 * t13021 + t10530) + (-t12997 * t11830 + (t11709 * t11788 - t11710 * t11782) * t11826) * t11825;
t10418 = t10449 * t11861 + t13087 * t11867;
t13205 = t10407 * t12913 - t10418 * t13161;
t13204 = -t10407 * t13128 + t10418 * t13160;
t10404 = (-t11861 * t10581 + t13111 * t11867) * t11829 + t11932 * t11867 - 0.2e1 * ((-t12277 / 0.2e1 + t11515 / 0.2e1 - t10569 / 0.2e1) * t11868 + (t11689 * t11788 + t12785 / 0.2e1) * t11862 - t12172 / 0.2e1 + t10530) * t11861;
t10419 = t10449 * t11867 - t13087 * t11861;
t13203 = t10404 * t12913 - t10419 * t13161;
t13202 = -t10404 * t13128 + t10419 * t13160;
t10510 = t11829 * t10519;
t10462 = t10510 - t10672 / 0.2e1 - t10696 / 0.2e1 - t12032 / 0.2e1 - t12148 / 0.2e1;
t10630 = t12288 + t12960 / 0.2e1;
t10450 = t10630 * t11839 * t12960 - t10462 * t11845;
t13066 = -0.2e1 * t10450;
t12556 = t10789 * t13066;
t13201 = -t10486 * t13171 + t10861 * t12556;
t10511 = t11829 * t10520;
t10463 = t10511 - t10673 / 0.2e1 - t10697 / 0.2e1 - t12031 / 0.2e1 - t12147 / 0.2e1;
t10631 = t12287 + t12959 / 0.2e1;
t10452 = t10631 * t11841 * t12959 - t10463 * t11847;
t13065 = -0.2e1 * t10452;
t12555 = t10790 * t13065;
t13200 = -t10487 * t13169 + t10864 * t12555;
t10512 = t11829 * t10521;
t10464 = t10512 - t10674 / 0.2e1 - t10698 / 0.2e1 - t12036 / 0.2e1 - t12146 / 0.2e1;
t10632 = t12286 + t12958 / 0.2e1;
t10454 = t10632 * t11843 * t12958 - t10464 * t11849;
t13064 = -0.2e1 * t10454;
t12554 = t10791 * t13064;
t13199 = -t10488 * t13167 + t10867 * t12554;
t10451 = t10462 * t11839 + t10630 * t12433;
t12550 = 0.2e1 * t12933;
t13198 = t10451 * t12550 + t10489 * t13171;
t10453 = t10463 * t11841 + t10631 * t12428;
t12547 = 0.2e1 * t12929;
t13197 = t10453 * t12547 + t10490 * t13169;
t10455 = t10464 * t11843 + t10632 * t12423;
t12544 = 0.2e1 * t12925;
t13196 = t10455 * t12544 + t10491 * t13167;
t10522 = t11829 * t10531;
t10468 = t10522 - t10675 / 0.2e1 - t10699 / 0.2e1 - t12035 / 0.2e1 - t12145 / 0.2e1;
t10636 = t12285 + t12954 / 0.2e1;
t10456 = t10636 * t11857 * t12954 - t10468 * t11863;
t13063 = -0.2e1 * t10456;
t12553 = t10795 * t13063;
t13195 = -t10498 * t13165 + t10876 * t12553;
t10523 = t11829 * t10532;
t10469 = t10523 - t10676 / 0.2e1 - t10700 / 0.2e1 - t12034 / 0.2e1 - t12144 / 0.2e1;
t10637 = t12284 + t12953 / 0.2e1;
t10458 = t10637 * t11859 * t12953 - t10469 * t11865;
t13062 = -0.2e1 * t10458;
t12552 = t10796 * t13062;
t13194 = -t10499 * t13163 + t10879 * t12552;
t10457 = t10468 * t11857 + t10636 * t12419;
t12541 = 0.2e1 * t12921;
t13193 = t10457 * t12541 + t10500 * t13165;
t10459 = t10469 * t11859 + t10637 * t12415;
t12538 = 0.2e1 * t12917;
t13192 = t10459 * t12538 + t10501 * t13163;
t10524 = t11829 * t10533;
t10470 = t10524 - t10677 / 0.2e1 - t10701 / 0.2e1 - t12033 / 0.2e1 - t12143 / 0.2e1;
t10638 = t12283 + t12952 / 0.2e1;
t10460 = t10638 * t11861 * t12952 - t10470 * t11867;
t13061 = -0.2e1 * t10460;
t12551 = t10797 * t13061;
t13191 = -t10502 * t13161 + t10882 * t12551;
t10461 = t10470 * t11861 + t10638 * t12411;
t12535 = 0.2e1 * t12913;
t13190 = t10461 * t12535 + t10503 * t13161;
t10474 = t10519 * t12642 + t13049 * t12139;
t13189 = t10474 * t12550 + t10624 * t13171;
t10475 = t10520 * t12638 + t13048 * t12137;
t13188 = t10475 * t12547 + t10625 * t13169;
t10476 = t10521 * t12634 + t13047 * t12135;
t13187 = t10476 * t12544 + t10626 * t13167;
t10477 = t10531 * t12627 + t13046 * t12130;
t13186 = t10477 * t12541 + t10627 * t13165;
t10478 = t10532 * t12623 + t13045 * t12128;
t13185 = t10478 * t12538 + t10628 * t13163;
t10479 = t10533 * t12619 + t13044 * t12126;
t13184 = t10479 * t12535 + t10629 * t13161;
t12534 = 0.2e1 * t13128;
t12537 = 0.2e1 * t13129;
t12540 = 0.2e1 * t13130;
t12543 = 0.2e1 * t13131;
t12546 = 0.2e1 * t13132;
t12549 = 0.2e1 * t13133;
t13147 = t11810 * t11853 + t12612;
t10480 = 0.2e1 * t11845 * t12139 + t12990;
t12142 = t10846 * t12455;
t13146 = t10480 * t12933 + t10924 * t12142;
t10481 = 0.2e1 * t11847 * t12137 + t12989;
t12141 = t10847 * t12454;
t13145 = t10481 * t12929 + t10926 * t12141;
t10482 = 0.2e1 * t11849 * t12135 + t12988;
t12140 = t10848 * t12453;
t13144 = t10482 * t12925 + t10928 * t12140;
t10483 = 0.2e1 * t11863 * t12130 + t12987;
t12133 = t10849 * t12446;
t13143 = t10483 * t12921 + t10936 * t12133;
t10485 = 0.2e1 * t11865 * t12128 + t12986;
t12132 = t10850 * t12445;
t13142 = t10485 * t12917 + t10938 * t12132;
t10484 = 0.2e1 * t11867 * t12126 + t12985;
t12131 = t10851 * t12444;
t13141 = t10484 * t12913 + t10940 * t12131;
t13140 = t10480 * t13133 + t10930 * t12142;
t13139 = t10481 * t13132 + t10932 * t12141;
t13138 = t10482 * t13131 + t10934 * t12140;
t13137 = t10483 * t13130 + t10942 * t12133;
t13136 = t10484 * t13128 + t10946 * t12131;
t13135 = t10485 * t13129 + t10944 * t12132;
t12780 = t11806 * t11870;
t11098 = -t11806 * t13147 + (t11807 * t12780 - t11809 * t12740) * t11871 + t11809 * t11852;
t11475 = t11809 * t12738 + t12780;
t11347 = t11475 * t11701;
t11033 = t11098 - t11347;
t12749 = t11809 * t11870;
t11473 = t11806 * t12738 - t12749;
t11284 = t11473 * t11475;
t11446 = t11807 * t11853 + t11810 * t12605 + t11851;
t13115 = -t11284 + t11446;
t13114 = t11347 + t11098;
t11099 = (-t11806 * t12740 - t11807 * t12749) * t11871 + t11806 * t11852 + t13147 * t11809;
t11348 = t11473 * t11701;
t11039 = -t11348 - t11099;
t13113 = -t11348 + t11099;
t11083 = t11446 + t11284;
t10527 = t11862 * t10533;
t10641 = t12955 + t12967;
t13081 = t11862 * t10599 + (t10641 * t11868 + t10527) * t11829 - t11868 * t12079;
t10526 = t11860 * t10532;
t10640 = t12956 + t12968;
t13080 = t11860 * t10598 + (t10640 * t11866 + t10526) * t11829 - t11866 * t12080;
t10525 = t11858 * t10531;
t10639 = t12957 + t12969;
t13079 = t11858 * t10597 + (t10639 * t11864 + t10525) * t11829 - t11864 * t12081;
t10515 = t11844 * t10521;
t10635 = t12961 + t12973;
t13078 = t11844 * t10596 + (t10635 * t11850 + t10515) * t11829 - t11850 * t12082;
t10514 = t11842 * t10520;
t10634 = t12962 + t12974;
t13077 = t11842 * t10595 + (t10634 * t11848 + t10514) * t11829 - t11848 * t12083;
t10513 = t11840 * t10519;
t10633 = t12963 + t12975;
t13076 = t11840 * t10594 + (t10633 * t11846 + t10513) * t11829 - t11846 * t12084;
t11283 = t11473 ^ 2;
t11285 = t11475 ^ 2;
t11441 = t11701 ^ 2;
t12716 = t11811 * t11891;
t12722 = t11811 * t11885;
t12756 = t11808 * t11891;
t12762 = t11808 * t11885;
t11101 = -t11808 * t12736 + (t11807 * t12756 + t12722) * t11809 + t11806 * (-t11807 * t12762 + t12716);
t11596 = -pkin(9) * t12702 + t12504;
t12020 = (pkin(3) * t12662 + t12494) * t11830 - t12512;
t12274 = t11825 * t12585;
t12827 = t11593 * t11830;
t10702 = (-t11101 * ((-t11538 * t11596 + t11544 * t12020) * t11847 - t11841 * (t11538 * t11590 - t11544 * t12827 + t11392)) - ((t11590 * t11841 + t11596 * t11847) * t11544 + (t12020 * t11847 + (-t12185 + t12827) * t11841) * t11538) * t11408) / (((-0.2e1 * t12091 + t12635) * t12688 + t11503) * t11817 + ((pkin(3) * (t11841 * t11842 * t12274 + t11520) + t12576) * t11826 - t12854) * t11847 + (t11520 * t12707 - t12068 + t12569) * t13012 + t11258);
t13060 = 0.2e1 * t10702;
t12715 = t11811 * t11892;
t12721 = t11811 * t11886;
t12755 = t11808 * t11892;
t12761 = t11808 * t11886;
t11102 = -t11808 * t12735 + (t11807 * t12755 + t12721) * t11809 + t11806 * (-t11807 * t12761 + t12715);
t11597 = -pkin(9) * t12701 + t12503;
t12019 = (pkin(3) * t12661 + t12493) * t11830 - t12512;
t12826 = t11594 * t11830;
t10703 = (-t11102 * ((-t11539 * t11597 + t11545 * t12019) * t11849 - t11843 * (t11539 * t11591 - t11545 * t12826 + t11393)) - t11409 * ((t11591 * t11843 + t11597 * t11849) * t11545 + (t12019 * t11849 + (-t12185 + t12826) * t11843) * t11539)) / (((-0.2e1 * t12090 + t12631) * t12688 + t11503) * t11818 + ((pkin(3) * (t11843 * t11844 * t12274 + t11521) + t12575) * t11826 - t12853) * t11849 + (t11521 * t12705 - t12067 + t12568) * t13012 + t11259);
t13059 = 0.2e1 * t10703;
t12717 = t11811 * t11890;
t12723 = t11811 * t11884;
t12757 = t11808 * t11890;
t12763 = t11808 * t11884;
t11100 = -t11808 * t12737 + (t11807 * t12757 + t12723) * t11809 + t11806 * (-t11807 * t12763 + t12717);
t11595 = -pkin(9) * t12703 + t12505;
t12021 = (pkin(3) * t12663 + t12495) * t11830 - t12512;
t12828 = t11592 * t11830;
t10704 = (-((-t11537 * t11595 + t11543 * t12021) * t11845 - t11839 * (t11537 * t11589 - t11543 * t12828 + t11391)) * t11100 - t11407 * ((t11589 * t11839 + t11595 * t11845) * t11543 + (t12021 * t11845 + (-t12185 + t12828) * t11839) * t11537)) / (((-0.2e1 * t12092 + t12639) * t12688 + t11503) * t11816 + ((pkin(3) * (t11839 * t11840 * t12274 + t11519) + t12577) * t11826 - t12855) * t11845 + (t11519 * t12709 - t12069 + t12570) * t13012 + t11257);
t13058 = 0.2e1 * t10704;
t12713 = t11811 * t11894;
t12719 = t11811 * t11888;
t12753 = t11808 * t11894;
t12759 = t11808 * t11888;
t11104 = -t11808 * t12733 + (t11807 * t12753 + t12719) * t11809 + t11806 * (-t11807 * t12759 + t12713);
t11608 = -pkin(9) * t12693 + t12501;
t12017 = (pkin(3) * t12656 + t12491) * t11830 - t12512;
t12821 = t11605 * t11830;
t10705 = (-t11104 * ((-t11541 * t11608 + t11547 * t12017) * t11865 - t11859 * (t11541 * t11602 - t11547 * t12821 + t11395)) - t11411 * ((t11602 * t11859 + t11608 * t11865) * t11547 + (t12017 * t11865 + (-t12185 + t12821) * t11859) * t11541)) / (((-0.2e1 * t12088 + t12620) * t12688 + t11503) * t11820 + (((t11859 * t11860 * t12274 + t11535) * pkin(3) + t12573) * t11826 - t12851) * t11865 + (t11535 * t12698 - t12065 + t12566) * t13012 + t11261);
t13057 = 0.2e1 * t10705;
t12714 = t11811 * t11893;
t12720 = t11811 * t11887;
t12754 = t11808 * t11893;
t12760 = t11808 * t11887;
t11103 = -t11808 * t12734 + (t11807 * t12754 + t12720) * t11809 + t11806 * (-t11807 * t12760 + t12714);
t11607 = -pkin(9) * t12694 + t12502;
t12018 = (pkin(3) * t12657 + t12492) * t11830 - t12512;
t12822 = t11604 * t11830;
t10706 = (-((-t11540 * t11607 + t11546 * t12018) * t11863 - t11857 * (t11540 * t11601 - t11546 * t12822 + t11394)) * t11103 - ((t11601 * t11857 + t11607 * t11863) * t11546 + (t12018 * t11863 + (-t12185 + t12822) * t11857) * t11540) * t11410) / (((-0.2e1 * t12089 + t12624) * t12688 + t11503) * t11819 + ((pkin(3) * (t11857 * t11858 * t12274 + t11534) + t12574) * t11826 - t12852) * t11863 + (t11534 * t12700 - t12066 + t12567) * t13012 + t11260);
t13056 = 0.2e1 * t10706;
t12712 = t11811 * t11895;
t12718 = t11811 * t11889;
t12752 = t11808 * t11895;
t12758 = t11808 * t11889;
t11105 = -t11808 * t12732 + (t11807 * t12752 + t12718) * t11809 + t11806 * (-t11807 * t12758 + t12712);
t11609 = -pkin(9) * t12692 + t12500;
t12016 = (pkin(3) * t12655 + t12490) * t11830 - t12512;
t12820 = t11606 * t11830;
t10707 = (-((-t11542 * t11609 + t11548 * t12016) * t11867 - (t11542 * t11603 - t11548 * t12820 + t11396) * t11861) * t11105 - ((t11603 * t11861 + t11609 * t11867) * t11548 + (t12016 * t11867 + t11861 * (-t12185 + t12820)) * t11542) * t11412) / (((-0.2e1 * t12087 + t12616) * t12688 + t11503) * t11821 + (((t11861 * t11862 * t12274 + t11536) * pkin(3) + t12572) * t11826 - t12850) * t11867 + (t11536 * t12696 - t12064 + t12565) * t13012 + t11262);
t13055 = 0.2e1 * t10707;
t12995 = t11855 - g(2);
t11812 = t11825 ^ 2;
t12994 = MDP(5) * t11812;
t12993 = MDP(6) * t11812;
t12992 = MDP(7) * t11825;
t12991 = MDP(8) * t11825;
t12981 = t10594 * t11846;
t12980 = t10595 * t11848;
t12979 = t10596 * t11850;
t12978 = t10597 * t11864;
t12977 = t10598 * t11866;
t12976 = t10599 * t11868;
t11020 = t11100 * t11827 + t11407 * t11823;
t11026 = t11100 * t11823 - t11407 * t11827;
t12939 = ((t11020 * t11783 - t11026 * t11777) * t12055 - (t11020 * t11777 + t11026 * t11783) * t11161) * t10852;
t11021 = t11101 * t11827 + t11408 * t11823;
t11027 = t11101 * t11823 - t11408 * t11827;
t12938 = ((t11021 * t11784 - t11027 * t11778) * t12054 - t11162 * (t11021 * t11778 + t11027 * t11784)) * t10854;
t11022 = t11102 * t11827 + t11409 * t11823;
t11028 = t11102 * t11823 - t11409 * t11827;
t12937 = ((t11022 * t11785 - t11028 * t11779) * t12053 - t11163 * (t11022 * t11779 + t11028 * t11785)) * t10856;
t11023 = t11103 * t11827 + t11410 * t11823;
t11029 = t11103 * t11823 - t11410 * t11827;
t12936 = ((t11023 * t11786 - t11029 * t11780) * t12052 - (t11023 * t11780 + t11029 * t11786) * t11188) * t10870;
t11024 = t11104 * t11827 + t11411 * t11823;
t11030 = t11104 * t11823 - t11411 * t11827;
t12935 = ((t11024 * t11787 - t11030 * t11781) * t12051 - t11189 * (t11024 * t11781 + t11030 * t11787)) * t10872;
t11025 = t11105 * t11827 + t11412 * t11823;
t11031 = t11105 * t11823 - t11412 * t11827;
t12934 = ((t11025 * t11788 - t11031 * t11782) * t12050 - t11190 * (t11025 * t11782 + t11031 * t11788)) * t10874;
t12930 = t10789 * t11136;
t12926 = t10790 * t11137;
t12922 = t10791 * t11138;
t12918 = t10795 * t11139;
t12914 = t10796 * t11140;
t12910 = t10797 * t11141;
t12314 = t11839 * t12783;
t11040 = t11616 + (t11504 + t11571) * t11845 + (t11769 * t12314 + t11744) * t11776;
t10954 = t11040 * t11846 + t11191;
t11462 = pkin(2) * pkin(3) + t12070;
t11008 = t11522 + (-t11734 * t12314 - t12562) * t11845 + t11462 * t11839 - t12093;
t10888 = 0.1e1 / (t10954 * t11826 + t11008 * t11830);
t12885 = t10888 * ((t11807 * t12717 - t12763) * t11809 + (-t11807 * t12723 - t12757) * t11806 - t11811 * t12737);
t12313 = t11841 * t12783;
t11041 = t11617 + (t11506 + t11571) * t11847 + (t11769 * t12313 + t11744) * t11776;
t10955 = t11041 * t11848 + t11192;
t11009 = t11523 + (-t11734 * t12313 - t12562) * t11847 + t11462 * t11841 - t12093;
t10889 = 0.1e1 / (t10955 * t11826 + t11009 * t11830);
t12884 = t10889 * ((t11807 * t12716 - t12762) * t11809 + (-t11807 * t12722 - t12756) * t11806 - t11811 * t12736);
t12312 = t11843 * t12783;
t11042 = t11618 + (t11508 + t11571) * t11849 + (t11769 * t12312 + t11744) * t11776;
t10956 = t11042 * t11850 + t11193;
t11010 = t11524 + (-t11734 * t12312 - t12562) * t11849 + t11462 * t11843 - t12093;
t10890 = 0.1e1 / (t10956 * t11826 + t11010 * t11830);
t12883 = t10890 * ((t11807 * t12715 - t12761) * t11809 + (-t11807 * t12721 - t12755) * t11806 - t11811 * t12735);
t12311 = t11857 * t12783;
t11043 = t11625 + (t11525 + t11571) * t11863 + (t11769 * t12311 + t11744) * t11776;
t10957 = t11043 * t11864 + t11200;
t11011 = t11531 + (-t11734 * t12311 - t12562) * t11863 + t11462 * t11857 - t12093;
t10891 = 0.1e1 / (t10957 * t11826 + t11011 * t11830);
t12882 = t10891 * ((t11807 * t12714 - t12760) * t11809 + (-t11807 * t12720 - t12754) * t11806 - t11811 * t12734);
t12310 = t11859 * t12783;
t11044 = t11626 + (t11527 + t11571) * t11865 + (t11769 * t12310 + t11744) * t11776;
t10958 = t11044 * t11866 + t11201;
t11012 = t11532 + (-t11734 * t12310 - t12562) * t11865 + t11462 * t11859 - t12093;
t10892 = 0.1e1 / (t10958 * t11826 + t11012 * t11830);
t12881 = t10892 * ((t11807 * t12713 - t12759) * t11809 + (-t11807 * t12719 - t12753) * t11806 - t11811 * t12733);
t12309 = t11861 * t12783;
t11045 = t11627 + (t11529 + t11571) * t11867 + (t11769 * t12309 + t11744) * t11776;
t10959 = t11045 * t11868 + t11202;
t11013 = t11533 + (-t11734 * t12309 - t12562) * t11867 + t11462 * t11861 - t12093;
t10893 = 0.1e1 / (t10959 * t11826 + t11013 * t11830);
t12880 = t10893 * ((t11807 * t12712 - t12758) * t11809 + (-t11807 * t12718 - t12752) * t11806 - t11811 * t12732);
t12873 = t11136 * t11839;
t12872 = t11137 * t11841;
t12871 = t11138 * t11843;
t12870 = t11139 * t11857;
t12869 = t11140 * t11859;
t12868 = t11141 * t11861;
t12782 = t11806 * t11808;
t12781 = t11806 * t11810;
t12766 = t11808 * t11809;
t12751 = t11809 * t11810;
t12750 = t11809 * t11811;
t12686 = t11825 * t11830;
t12640 = t11840 * t10633;
t12636 = t11842 * t10634;
t12632 = t11844 * t10635;
t12630 = t11846 * t10519;
t12629 = t11848 * t10520;
t12628 = t11850 * t10521;
t12625 = t11858 * t10639;
t12621 = t11860 * t10640;
t12617 = t11862 * t10641;
t12615 = t11864 * t10531;
t12614 = t11866 * t10532;
t12613 = t11868 * t10533;
t12030 = t11840 * t12139;
t10423 = (((-0.2e1 * t12030 + t12981) * t11829 + t12630 - t12640) * t11845 - t11839 * t13076) * t11826 + (t10594 * t11845 - t11839 * t12963) * t12686;
t12029 = t11842 * t12137;
t10424 = (((-0.2e1 * t12029 + t12980) * t11829 + t12629 - t12636) * t11847 - t13077 * t11841) * t11826 + (t10595 * t11847 - t11841 * t12962) * t12686;
t12028 = t11844 * t12135;
t10425 = (((-0.2e1 * t12028 + t12979) * t11829 + t12628 - t12632) * t11849 - t13078 * t11843) * t11826 + (t10596 * t11849 - t11843 * t12961) * t12686;
t12027 = t11858 * t12130;
t10429 = (((-0.2e1 * t12027 + t12978) * t11829 + t12615 - t12625) * t11863 - t13079 * t11857) * t11826 + (t10597 * t11863 - t11857 * t12957) * t12686;
t12026 = t11860 * t12128;
t10430 = (((-0.2e1 * t12026 + t12977) * t11829 + t12614 - t12621) * t11865 - t13080 * t11859) * t11826 + (t10598 * t11865 - t11859 * t12956) * t12686;
t12025 = t11862 * t12126;
t10431 = (((-0.2e1 * t12025 + t12976) * t11829 + t12613 - t12617) * t11867 - t11861 * t13081) * t11826 + (t10599 * t11867 - t11861 * t12955) * t12686;
t12548 = -0.2e1 * t13133;
t12545 = -0.2e1 * t13132;
t12542 = -0.2e1 * t13131;
t12539 = -0.2e1 * t13130;
t12536 = -0.2e1 * t13129;
t12533 = -0.2e1 * t13128;
t10465 = t10510 + t10594;
t12479 = t10465 * t10846 * t11136;
t10466 = t10511 + t10595;
t12478 = t10466 * t10847 * t11137;
t10467 = t10512 + t10596;
t12477 = t10467 * t10848 * t11138;
t10471 = t10522 + t10597;
t12476 = t10471 * t10849 * t11139;
t10472 = t10523 + t10598;
t12475 = t10472 * t10850 * t11140;
t10473 = t10524 + t10599;
t12474 = t10473 * t10851 * t11141;
t12410 = t10861 * t12930;
t12409 = t12213 * t12930;
t12408 = t10864 * t12926;
t12407 = t12212 * t12926;
t12406 = t10867 * t12922;
t12405 = t12211 * t12922;
t12404 = t10876 * t12918;
t12403 = t12210 * t12918;
t12402 = t10879 * t12914;
t12401 = t12209 * t12914;
t12400 = t10882 * t12910;
t12399 = t12208 * t12910;
t11669 = g(1) * t11777 - g(2) * t11783;
t11675 = g(1) * t11783 + g(2) * t11777;
t10534 = -t11561 * t11669 + t11564 * t11675 + t13148;
t12396 = t10534 * t12933;
t10537 = t11555 * t11675 + t11558 * t11669 - t13149;
t12395 = t10537 * t12933;
t11670 = g(1) * t11778 - g(2) * t11784;
t11676 = g(1) * t11784 + g(2) * t11778;
t10535 = -t11562 * t11670 + t11565 * t11676 + t13150;
t12392 = t10535 * t12929;
t10538 = t11556 * t11676 + t11559 * t11670 - t13151;
t12391 = t10538 * t12929;
t11671 = g(1) * t11779 - g(2) * t11785;
t11677 = g(1) * t11785 + g(2) * t11779;
t10536 = -t11563 * t11671 + t11566 * t11677 + t13152;
t12388 = t10536 * t12925;
t10539 = t11557 * t11677 + t11560 * t11671 - t13153;
t12387 = t10539 * t12925;
t11672 = g(1) * t11780 - g(2) * t11786;
t11678 = g(1) * t11786 + g(2) * t11780;
t10555 = -t11578 * t11672 + t11581 * t11678 + t13154;
t12384 = t10555 * t12921;
t10558 = t11572 * t11678 + t11575 * t11672 - t13155;
t12383 = t10558 * t12921;
t11673 = g(1) * t11781 - g(2) * t11787;
t11679 = g(1) * t11787 + g(2) * t11781;
t10556 = -t11579 * t11673 + t11582 * t11679 + t13156;
t12380 = t10556 * t12917;
t10559 = t11573 * t11679 + t11576 * t11673 - t13157;
t12379 = t10559 * t12917;
t11674 = g(1) * t11782 - g(2) * t11788;
t11680 = g(1) * t11788 + g(2) * t11782;
t10557 = -t11580 * t11674 + t11583 * t11680 + t13158;
t12376 = t10557 * t12913;
t10560 = t11574 * t11680 + t11577 * t11674 - t13159;
t12375 = t10560 * t12913;
t12049 = t10954 * t11830 - t11008 * t11826;
t12048 = t10955 * t11830 - t11009 * t11826;
t12047 = t10956 * t11830 - t11010 * t11826;
t12046 = t10957 * t11830 - t11011 * t11826;
t12045 = t10958 * t11830 - t11012 * t11826;
t12044 = t10959 * t11830 - t11013 * t11826;
t11990 = t11265 * t11825 * t11846 - t11040 * t11840;
t11989 = t11266 * t11825 * t11848 - t11041 * t11842;
t11988 = t11267 * t11825 * t11850 - t11042 * t11844;
t11987 = t11280 * t11825 * t11864 - t11043 * t11858;
t11986 = t11281 * t11825 * t11866 - t11044 * t11860;
t11985 = t11282 * t11825 * t11868 - t11045 * t11862;
t11793 = t11856 - g(1);
t11445 = -t11807 * t12750 + t12782;
t11444 = t11806 * t12779 + t12766;
t11443 = t11806 * t11811 + t11807 * t12766;
t11442 = -t11807 * t12782 + t12750;
t11298 = t11807 * t11793 + t12996 * t12742 - t12995 * t12765;
t11264 = -t11441 + t11283;
t11142 = -t11285 + t11441;
t11088 = -t11283 + t11285;
t11080 = -t11441 - t11285;
t11079 = -t11441 - t11283;
t11066 = t11443 * t12995 + t11445 * t12996 + t11793 * t12751;
t11065 = -t11442 * t12995 - t11444 * t12996 + t11793 * t12781;
t11046 = -t11283 - t11285;
t10779 = t11985 * t11542 + t12044 * t11548;
t10778 = -t12044 * t11542 + t11985 * t11548;
t10777 = -t12045 * t11541 + t11986 * t11547;
t10776 = -t12046 * t11540 + t11987 * t11546;
t10775 = t11986 * t11541 + t12045 * t11547;
t10774 = t11987 * t11540 + t12046 * t11546;
t10773 = -t12047 * t11539 + t11988 * t11545;
t10772 = -t12048 * t11538 + t11989 * t11544;
t10771 = -t12049 * t11537 + t11990 * t11543;
t10770 = t11988 * t11539 + t12047 * t11545;
t10769 = t11989 * t11538 + t12048 * t11544;
t10768 = t11990 * t11537 + t12049 * t11543;
t10755 = -t10777 * t12881 - t11386;
t10754 = -t10776 * t12882 - t11385;
t10753 = -t10778 * t12880 - t11387;
t10752 = -t10773 * t12883 - t11384;
t10751 = -t10772 * t12884 - t11383;
t10750 = -t10771 * t12885 - t11382;
t10749 = t10779 * t12880 + t13099;
t10748 = t10775 * t12881 + t13098;
t10747 = t10774 * t12882 + t13097;
t10746 = t10770 * t12883 + t13096;
t10745 = t10769 * t12884 + t13095;
t10744 = t10768 * t12885 + t13094;
t10683 = (-t10778 * t11105 - t10779 * t11412) * t10893;
t10682 = (-t10775 * t11411 - t10777 * t11104) * t10892;
t10681 = (-t10774 * t11410 - t10776 * t11103) * t10891;
t10680 = (-t10770 * t11409 - t10773 * t11102) * t10890;
t10679 = (-t10769 * t11408 - t10772 * t11101) * t10889;
t10678 = (-t10768 * t11407 - t10771 * t11100) * t10888;
t10593 = t10599 * t11861 + t11867 * t12955;
t10592 = t10598 * t11859 + t11865 * t12956;
t10591 = t10597 * t11857 + t11863 * t12957;
t10587 = t10596 * t11843 + t11849 * t12961;
t10586 = t10595 * t11841 + t11847 * t12962;
t10585 = t10594 * t11839 + t11845 * t12963;
t10509 = t11868 * t12967 + t10527;
t10508 = t11866 * t12968 + t10526;
t10507 = t11864 * t12969 + t10525;
t10506 = t11862 * t12967 - t12613;
t10505 = t11860 * t12968 - t12614;
t10504 = t11858 * t12969 - t12615;
t10497 = t11850 * t12973 + t10515;
t10496 = t11848 * t12974 + t10514;
t10495 = t11846 * t12975 + t10513;
t10494 = t11844 * t12973 - t12628;
t10493 = t11842 * t12974 - t12629;
t10492 = t11840 * t12975 - t12630;
t10440 = (-t13081 * t11867 + 0.2e1 * ((t12025 - t12976 / 0.2e1) * t11829 - t12613 / 0.2e1 + t12617 / 0.2e1) * t11861) * t11826;
t10439 = (-t13080 * t11865 + 0.2e1 * ((t12026 - t12977 / 0.2e1) * t11829 - t12614 / 0.2e1 + t12621 / 0.2e1) * t11859) * t11826;
t10438 = (-t13079 * t11863 + 0.2e1 * ((t12027 - t12978 / 0.2e1) * t11829 - t12615 / 0.2e1 + t12625 / 0.2e1) * t11857) * t11826;
t10434 = (-t13078 * t11849 + 0.2e1 * ((t12028 - t12979 / 0.2e1) * t11829 - t12628 / 0.2e1 + t12632 / 0.2e1) * t11843) * t11826;
t10433 = (-t13077 * t11847 + 0.2e1 * ((t12029 - t12980 / 0.2e1) * t11829 - t12629 / 0.2e1 + t12636 / 0.2e1) * t11841) * t11826;
t10432 = (-t13076 * t11845 + 0.2e1 * ((t12030 - t12981 / 0.2e1) * t11829 - t12630 / 0.2e1 + t12640 / 0.2e1) * t11839) * t11826;
t10428 = -t10593 * t12686 + t10440;
t10427 = -t10592 * t12686 + t10439;
t10426 = -t10591 * t12686 + t10438;
t10422 = -t10587 * t12686 + t10434;
t10421 = -t10586 * t12686 + t10433;
t10420 = -t10585 * t12686 + t10432;
t1 = [(-t12940 * t12997 - t12941 * t12998 - t12942 * t12999 - t12946 * t13000 - t12947 * t13001 - t12948 * t13002) * MDP(1) + (t10519 * t13133 + t10520 * t13132 + t10521 * t13131 + t10531 * t13130 + t10532 * t13129 + t10533 * t13128) * MDP(2) + (t10537 * t13133 + t10538 * t13132 + t10539 * t13131 + t10558 * t13130 + t10559 * t13129 + t10560 * t13128 + (-t10492 * t12948 - t10493 * t12947 - t10494 * t12946 - t10504 * t12942 - t10505 * t12941 - t10506 * t12940) * t11826) * MDP(3) + (t10534 * t13133 + t10535 * t13132 + t10536 * t13131 + t10555 * t13130 + t10556 * t13129 + t10557 * t13128 + (-t10495 * t12948 - t10496 * t12947 - t10497 * t12946 - t10507 * t12942 - t10508 * t12941 - t10509 * t12940) * t11826) * MDP(4) + (t13140 * t11839 + t13139 * t11841 + t13138 * t11843 + t13137 * t11857 + t13135 * t11859 + t13136 * t11861) * t12994 + (t10474 * t12549 + t10475 * t12546 + t10476 * t12543 + t10477 * t12540 + t10478 * t12537 + t10479 * t12534 + t13226 + t13227 + t13228 + t13229 + t13230 + t13231) * t12993 + (t10451 * t12549 + t10453 * t12546 + t10455 * t12543 + t10457 * t12540 + t10459 * t12537 + t10461 * t12534 + t13232 + t13234 + t13235 + t13238 + t13239 + t13240) * t12992 + (t12208 * t12551 + t12209 * t12552 + t12210 * t12553 + t12211 * t12554 + t12212 * t12555 + t12213 * t12556 - t13233 - t13236 - t13237 - t13241 - t13242 - t13243) * t12991 + (-t10465 * t13170 - t10466 * t13168 - t10467 * t13166 - t10471 * t13164 - t10472 * t13162 - t10473 * t13160 + (t10465 * t13133 + t10466 * t13132 + t10467 * t13131 + t10471 * t13130 + t10472 * t13129 + t10473 * t13128) * t11829) * MDP(9) + (t10423 * t12948 + t10424 * t12947 + t10425 * t12946 + t10429 * t12942 + t10430 * t12941 + t10431 * t12940 - t13204 - t13208 - t13212 - t13216 - t13220 - t13224) * MDP(10) + (t10420 * t12948 + t10421 * t12947 + t10422 * t12946 + t10426 * t12942 + t10427 * t12941 + t10428 * t12940 - t13202 - t13206 - t13210 - t13214 - t13218 - t13222) * MDP(11) + (-t11033 * t11807 + (t11079 * t11809 - t11806 * t13115) * t11810) * MDP(18) + (t13113 * t11807 + (-t11080 * t11806 - t11083 * t11809) * t11810) * MDP(19) + (t11046 * t11807 + (-t11039 * t11806 + t11809 * t13114) * t11810) * MDP(20) + (t11298 * t11807 + (t11065 * t11806 + t11066 * t11809) * t11810) * MDP(21); (-t12943 * t12997 - t12944 * t12998 - t12945 * t12999 - t12949 * t13000 - t12950 * t13001 - t12951 * t13002) * MDP(1) + (t10519 * t12933 + t10520 * t12929 + t10521 * t12925 + t10531 * t12921 + t10532 * t12917 + t10533 * t12913) * MDP(2) + (t12395 + t12391 + t12387 + t12383 + t12379 + t12375 + (-t10492 * t12951 - t10493 * t12950 - t10494 * t12949 - t10504 * t12945 - t10505 * t12944 - t10506 * t12943) * t11826) * MDP(3) + (t12396 + t12392 + t12388 + t12384 + t12380 + t12376 + (-t10495 * t12951 - t10496 * t12950 - t10497 * t12949 - t10507 * t12945 - t10508 * t12944 - t10509 * t12943) * t11826) * MDP(4) + (t13146 * t11839 + t13145 * t11841 + t13144 * t11843 + t13143 * t11857 + t13142 * t11859 + t13141 * t11861) * t12994 + (t13184 + t13185 + t13186 + t13187 + t13188 + t13189) * t12993 + (t13190 + t13192 + t13193 + t13196 + t13197 + t13198) * t12992 + (t13191 + t13194 + t13195 + t13199 + t13200 + t13201) * t12991 + (-t10465 * t13171 - t10466 * t13169 - t10467 * t13167 - t10471 * t13165 - t10472 * t13163 - t10473 * t13161 + (t10465 * t12933 + t10466 * t12929 + t10467 * t12925 + t10471 * t12921 + t10472 * t12917 + t10473 * t12913) * t11829) * MDP(9) + (t10423 * t12951 + t10424 * t12950 + t10425 * t12949 + t10429 * t12945 + t10430 * t12944 + t10431 * t12943 + t13205 + t13209 + t13213 + t13217 + t13221 + t13225) * MDP(10) + (t10420 * t12951 + t10421 * t12950 + t10422 * t12949 + t10426 * t12945 + t10427 * t12944 + t10428 * t12943 + t13203 + t13207 + t13211 + t13215 + t13219 + t13223) * MDP(11) + (t11033 * t12765 + t11079 * t11443 + t11442 * t13115) * MDP(18) + (t11080 * t11442 - t11083 * t11443 - t12765 * t13113) * MDP(19) + (t11039 * t11442 - t11046 * t12765 + t11443 * t13114) * MDP(20) + (-t11065 * t11442 + t11066 * t11443 - t11298 * t12765) * MDP(21); (t10431 + t10430 + t10429 + t10425 + t10424 + t10423) * MDP(10) + (-t11033 * t12742 + t11079 * t11445 + t11444 * t13115) * MDP(18) + (t11080 * t11444 - t11083 * t11445 + t12742 * t13113) * MDP(19) + (t11039 * t11444 + t11046 * t12742 + t11445 * t13114) * MDP(20) + (-t11065 * t11444 + t11066 * t11445 + t11298 * t12742) * MDP(21) + ((-t10492 - t10493 - t10494 - t10504 - t10505 - t10506) * MDP(3) + (-t10495 - t10496 - t10497 - t10507 - t10508 - t10509) * MDP(4)) * t11826 + (t10432 + t10433 + t10434 + t10438 + t10439 + t10440 + (-t10585 - t10586 - t10587 - t10591 - t10592 - t10593) * t12686) * MDP(11) + (-(6 * g(3)) + (6 * t11854) + (t11382 + t11383 + t11384 + t11385 + t11386 + t11387) * t12308 - t13070 - t13071 - t13072 - t13073 - t13074 - t13075) * MDP(1); (-t10744 * t13002 - t10745 * t13001 - t10746 * t13000 - t10747 * t12999 - t10748 * t12998 - t10749 * t12997) * MDP(1) + (t10519 * t12410 + t10520 * t12408 + t10521 * t12406 + t10531 * t12404 + t10532 * t12402 + t10533 * t12400) * MDP(2) + (t11136 * t12395 + t11137 * t12391 + t11138 * t12387 + t11139 * t12383 + t11140 * t12379 + t11141 * t12375 + (-t10492 * t10744 - t10493 * t10745 - t10494 * t10746 - t10504 * t10747 - t10505 * t10748 - t10506 * t10749) * t11826) * MDP(3) + (t11136 * t12396 + t11137 * t12392 + t11138 * t12388 + t11139 * t12384 + t11140 * t12380 + t11141 * t12376 + (-t10495 * t10744 - t10496 * t10745 - t10497 * t10746 - t10507 * t10747 - t10508 * t10748 - t10509 * t10749) * t11826) * MDP(4) + (t13141 * t12868 + t13142 * t12869 + t13143 * t12870 + t13144 * t12871 + t13145 * t12872 + t13146 * t12873) * t12994 + (t11136 * t13189 + t11137 * t13188 + t11138 * t13187 + t11139 * t13186 + t11140 * t13185 + t11141 * t13184) * t12993 + (t11136 * t13198 + t11137 * t13197 + t11138 * t13196 + t11139 * t13193 + t11140 * t13192 + t11141 * t13190) * t12992 + (t11136 * t13201 + t11137 * t13200 + t11138 * t13199 + t11139 * t13195 + t11140 * t13194 + t11141 * t13191) * t12991 + (-t10924 * t12479 - t10926 * t12478 - t10928 * t12477 - t10936 * t12476 - t10938 * t12475 - t10940 * t12474 + (t10465 * t12410 + t10466 * t12408 + t10467 * t12406 + t10471 * t12404 + t10472 * t12402 + t10473 * t12400) * t11829) * MDP(9) + (t10744 * t10423 + t10745 * t10424 + t10746 * t10425 + t10747 * t10429 + t10748 * t10430 + t10749 * t10431 + t11136 * t13225 + t13221 * t11137 + t13217 * t11138 + t13213 * t11139 + t13209 * t11140 + t13205 * t11141) * MDP(10) + (t10744 * t10420 + t10745 * t10421 + t10746 * t10422 + t10747 * t10426 + t10748 * t10427 + t10749 * t10428 + t11136 * t13223 + t11137 * t13219 + t11138 * t13215 + t11139 * t13211 + t11140 * t13207 + t11141 * t13203) * MDP(11) + (t11099 * t12751 + (t11473 * t11807 - t11701 * t12781) * t11475) * MDP(12) + (t11088 * t11807 + (t11033 * t11809 - t11806 * t13113) * t11810) * MDP(13) + (-t11039 * t11807 + (-t11142 * t11806 + t11809 * t13115) * t11810) * MDP(14) + (-t11098 * t12781 + (-t11475 * t11807 + t11701 * t12751) * t11473) * MDP(15) + (t13114 * t11807 + (-t11083 * t11806 + t11264 * t11809) * t11810) * MDP(16) + (t11446 * t11807 + (-t11473 * t11809 + t11475 * t11806) * t11810 * t11701) * MDP(17) + (-t11065 * t11807 + t11298 * t12781) * MDP(18) + (-t11066 * t11807 + t11298 * t12751) * MDP(19) + (t11065 * t11809 - t11066 * t11806) * t11810 * MDP(20); (-t10750 * t13002 - t10751 * t13001 - t10752 * t13000 - t10753 * t12997 - t10754 * t12999 - t10755 * t12998) * MDP(1) + (-t10519 * t12409 - t10520 * t12407 - t10521 * t12405 - t10531 * t12403 - t10532 * t12401 - t10533 * t12399) * MDP(2) + (-t10537 * t12409 - t10538 * t12407 - t10539 * t12405 - t10558 * t12403 - t10559 * t12401 - t10560 * t12399 + (-t10492 * t10750 - t10493 * t10751 - t10494 * t10752 - t10504 * t10754 - t10505 * t10755 - t10506 * t10753) * t11826) * MDP(3) + (-t10534 * t12409 - t10535 * t12407 - t10536 * t12405 - t10555 * t12403 - t10556 * t12401 - t10557 * t12399 + (-t10495 * t10750 - t10496 * t10751 - t10497 * t10752 - t10507 * t10754 - t10508 * t10755 - t10509 * t10753) * t11826) * MDP(4) + (-t13136 * t12868 - t13135 * t12869 - t13137 * t12870 - t13138 * t12871 - t13139 * t12872 - t13140 * t12873) * t12994 + ((t10479 * t12533 - t13226) * t11141 + (t10478 * t12536 - t13227) * t11140 + (t10477 * t12539 - t13228) * t11139 + (t10476 * t12542 - t13229) * t11138 + (t10475 * t12545 - t13230) * t11137 + (t10474 * t12548 - t13231) * t11136) * t12993 + ((t10461 * t12533 - t13232) * t11141 + (t10459 * t12536 - t13234) * t11140 + (t10457 * t12539 - t13235) * t11139 + (t10455 * t12542 - t13238) * t11138 + (t10453 * t12545 - t13239) * t11137 + (t10451 * t12548 - t13240) * t11136) * t12992 + ((t10460 * t12534 + t13233) * t11141 + (t10458 * t12537 + t13236) * t11140 + (t10456 * t12540 + t13237) * t11139 + (t10454 * t12543 + t13241) * t11138 + (t10452 * t12546 + t13242) * t11137 + (t10450 * t12549 + t13243) * t11136) * t12991 + (t10930 * t12479 + t10932 * t12478 + t10934 * t12477 + t10942 * t12476 + t10944 * t12475 + t10946 * t12474 + (-t10465 * t12409 - t10466 * t12407 - t10467 * t12405 - t10471 * t12403 - t10472 * t12401 - t10473 * t12399) * t11829) * MDP(9) + (t10750 * t10423 + t10751 * t10424 + t10752 * t10425 + t10754 * t10429 + t10755 * t10430 + t10753 * t10431 + t11136 * t13224 + t11137 * t13220 + t11138 * t13216 + t11139 * t13212 + t11140 * t13208 + t11141 * t13204) * MDP(10) + (t10750 * t10420 + t10751 * t10421 + t10752 * t10422 + t10754 * t10426 + t10755 * t10427 + t10753 * t10428 + t11136 * t13222 + t11137 * t13218 + t11138 * t13214 + t11139 * t13210 + t11140 * t13206 + t11141 * t13202) * MDP(11) + (t11099 * t11443 + (t11442 * t11701 - t11473 * t12765) * t11475) * MDP(12) + (t11033 * t11443 - t11088 * t12765 + t11442 * t13113) * MDP(13) + (t11039 * t12765 + t11142 * t11442 + t11443 * t13115) * MDP(14) + (t11098 * t11442 + (t11443 * t11701 + t11475 * t12765) * t11473) * MDP(15) + (t11083 * t11442 + t11264 * t11443 - t12765 * t13114) * MDP(16) + (-t11446 * t12765 + (-t11442 * t11475 - t11443 * t11473) * t11701) * MDP(17) + (t11065 * t12765 - t11298 * t11442) * MDP(18) + (t11066 * t12765 + t11298 * t11443) * MDP(19) + (t11065 * t11443 + t11066 * t11442) * MDP(20); (-t10678 * t13002 - t10679 * t13001 - t10680 * t13000 - t10681 * t12999 - t10682 * t12998 - t10683 * t12997) * MDP(1) + (t10519 * t10704 + t10520 * t10702 + t10521 * t10703 + t10531 * t10706 + t10532 * t10705 + t10533 * t10707) * MDP(2) + (t10537 * t10704 + t10538 * t10702 + t10539 * t10703 + t10558 * t10706 + t10559 * t10705 + t10560 * t10707 + (-t10492 * t10678 - t10493 * t10679 - t10494 * t10680 - t10504 * t10681 - t10505 * t10682 - t10506 * t10683) * t11826) * MDP(3) + (t10534 * t10704 + t10535 * t10702 + t10536 * t10703 + t10555 * t10706 + t10556 * t10705 + t10557 * t10707 + (-t10495 * t10678 - t10496 * t10679 - t10497 * t10680 - t10507 * t10681 - t10508 * t10682 - t10509 * t10683) * t11826) * MDP(4) + ((t10484 * t10707 - t12444 * t12934) * t11861 + (t10485 * t10705 - t12445 * t12935) * t11859 + (t10483 * t10706 - t12446 * t12936) * t11857 + (t10482 * t10703 - t12453 * t12937) * t11843 + (t10481 * t10702 - t12454 * t12938) * t11841 + (t10480 * t10704 - t12455 * t12939) * t11839) * t12994 + (t10474 * t13058 + t10475 * t13060 + t10476 * t13059 + t10477 * t13056 + t10478 * t13057 + t10479 * t13055 - t10624 * t12939 - t10625 * t12938 - t10626 * t12937 - t10627 * t12936 - t10628 * t12935 - t10629 * t12934) * t12993 + (t10451 * t13058 + t10453 * t13060 + t10455 * t13059 + t10457 * t13056 + t10459 * t13057 + t10461 * t13055 - t10489 * t12939 - t10490 * t12938 - t10491 * t12937 - t10500 * t12936 - t10501 * t12935 - t10503 * t12934) * t12992 + (t10486 * t12939 + t10487 * t12938 + t10488 * t12937 + t10498 * t12936 + t10499 * t12935 + t10502 * t12934 + t10702 * t13065 + t10703 * t13064 + t10704 * t13066 + t10705 * t13062 + t10706 * t13063 + t10707 * t13061) * t12991 + (t10465 * t12939 + t10466 * t12938 + t10467 * t12937 + t10471 * t12936 + t10472 * t12935 + t10473 * t12934 + (t10465 * t10704 + t10466 * t10702 + t10467 * t10703 + t10471 * t10706 + t10472 * t10705 + t10473 * t10707) * t11829) * MDP(9) + (t10683 * t10431 + t10707 * t10407 + t10418 * t12934 + t10682 * t10430 + t10705 * t10406 + t10416 * t12935 + t10681 * t10429 + t10706 * t10405 + t10414 * t12936 + t10680 * t10425 + t10703 * t10401 + t10412 * t12937 + t10679 * t10424 + t10702 * t10400 + t10410 * t12938 + t10678 * t10423 + t10704 * t10399 + t10408 * t12939) * MDP(10) + (t10683 * t10428 + t10707 * t10404 + t10419 * t12934 + t10682 * t10427 + t10705 * t10403 + t10417 * t12935 + t10681 * t10426 + t10706 * t10402 + t10415 * t12936 + t10680 * t10422 + t10703 * t10398 + t10413 * t12937 + t10679 * t10421 + t10702 * t10397 + t10411 * t12938 + t10678 * t10420 + t10704 * t10396 + t10409 * t12939) * MDP(11) + (t11099 * t11445 + (t11444 * t11701 + t11473 * t12742) * t11475) * MDP(12) + (t11033 * t11445 + t11088 * t12742 + t11444 * t13113) * MDP(13) + (-t11039 * t12742 + t11142 * t11444 + t11445 * t13115) * MDP(14) + (t11098 * t11444 + (t11445 * t11701 - t11475 * t12742) * t11473) * MDP(15) + (t11083 * t11444 + t11264 * t11445 + t12742 * t13114) * MDP(16) + (t11446 * t12742 + (-t11444 * t11475 - t11445 * t11473) * t11701) * MDP(17) + (-t11065 * t12742 - t11298 * t11444) * MDP(18) + (-t11066 * t12742 + t11298 * t11445) * MDP(19) + (t11065 * t11445 + t11066 * t11444) * MDP(20);];
tauX  = t1;
