% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PRRRRR6V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRRRRR6V2G1P1A0_convert_par2_MPV_fixb.m

% Output:
% taucX [6x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-09-11 16:13
% Revision: 7993d029b5937b704dcf3fc7d8ae322038cdcbdd (2019-09-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-09-11 15:44:46
% EndTime: 2019-09-11 16:11:34
% DurationCPUTime: 1650.73s
% Computational Cost: add. (16316788->3552), mult. (40768756->5702), div. (61500->84), fcn. (27296567->50), ass. (0->2272)
t18047 = xP(5);
t17979 = sin(t18047);
t18041 = xDP(6);
t18043 = xDP(4);
t17873 = t17979 * t18043 + t18041;
t18046 = xP(6);
t17978 = sin(t18046);
t18048 = xP(4);
t17980 = sin(t18048);
t17981 = cos(t18046);
t17982 = cos(t18047);
t17983 = cos(t18048);
t18044 = xDP(2);
t18056 = koppelP(6,2);
t18062 = koppelP(6,1);
t18380 = t17978 * t17873;
t18579 = -t17979 * t18041 - t18043;
t18042 = xDP(5);
t18986 = t18042 * t18062;
t18992 = t18042 * t18056;
t18050 = koppelP(6,3);
t18998 = t18042 * t18050;
t19005 = t18041 * t18062;
t19146 = t17982 * t18050;
t19156 = t17981 * t18062;
t17182 = t18044 + ((t17982 * t18986 + t18056 * t18579) * t17981 + (-t17978 * t19005 + t18998) * t17979 - t17978 * (t17982 * t18992 + t18043 * t18062)) * t17980 + (t17873 * t19156 - t18043 * t19146 - t18056 * t18380) * t17983;
t18007 = cos(pkin(5));
t18018 = sin(qJ(2,6));
t18008 = cos(pkin(4));
t18024 = cos(qJ(2,6));
t19062 = t18008 * t18024;
t18003 = sin(pkin(5));
t18004 = sin(pkin(4));
t19100 = t18003 * t18004;
t18045 = xDP(1);
t19140 = t17982 * t18056;
t19467 = t17978 * (t17979 * t18992 - t17982 * t19005) - (t17979 * t18986 + t18041 * t19140) * t17981 + t17982 * t18998 + t18045;
t17002 = (t17182 * t19062 - t18018 * t19467) * t18007 - t17182 * t19100;
t17044 = (t17182 * t18018 + t19062 * t19467) * t18007 - t19467 * t19100;
t18011 = legFrame(6,3);
t17950 = sin(t18011);
t17956 = cos(t18011);
t18001 = sin(pkin(10));
t18005 = cos(pkin(10));
t16894 = (t17002 * t18001 + t17044 * t18005) * t17956 + (t17002 * t18005 - t17044 * t18001) * t17950;
t19066 = t18008 * t18018;
t17128 = t17182 * t18024 - t19066 * t19467;
t17131 = t17182 * t19066 + t18024 * t19467;
t16942 = (t17128 * t18005 - t17131 * t18001) * t17956 - t17950 * (t17128 * t18001 + t17131 * t18005);
t18002 = sin(pkin(6));
t17948 = t18002 * pkin(9);
t18017 = sin(qJ(3,6));
t18023 = cos(qJ(3,6));
t16861 = (pkin(3) * t16894 - t16942 * t17948) * t18023 + t18017 * (pkin(3) * t16942 + t16894 * t17948);
t18006 = cos(pkin(6));
t19403 = pkin(9) * t18006;
t17935 = pkin(8) + t19403;
t19099 = t18003 * t18007;
t18696 = t17935 * t19099;
t17762 = t18008 * t18696;
t19097 = t18003 * t18018;
t17920 = pkin(2) * t19097;
t17987 = t18007 ^ 2;
t19449 = t17987 - 0.1e1;
t18864 = t17935 * t19449;
t17328 = t17762 + (t18024 * t18864 + t17920) * t18004;
t18592 = t19449 * t18008;
t19075 = t18007 * t18024;
t18669 = t18003 * t19075;
t17615 = t18004 * t18669 - t18592;
t18070 = pkin(3) ^ 2;
t18068 = pkin(9) ^ 2;
t17985 = t18006 ^ 2;
t18980 = t18068 * t17985;
t18593 = -t18068 + t18980;
t17903 = t18070 + t18593;
t18717 = t17903 * t19100;
t17686 = t18018 * t18717;
t18875 = t18004 * t17948;
t18557 = t18003 * t18875;
t18446 = 0.2e1 * t18557;
t18383 = pkin(3) * t18446;
t17800 = t18018 * t18383;
t19420 = pkin(3) * t18008;
t17945 = pkin(2) * t19420;
t17991 = t18023 ^ 2;
t19192 = (t18006 + 0.1e1) * (t18006 - 0.1e1);
t18877 = pkin(9) * t19192;
t18564 = t18003 * t18877;
t18393 = t18018 * t18564;
t18302 = t18004 * t18393;
t17946 = pkin(2) * t17948;
t18617 = t18008 * t17946;
t18936 = pkin(3) * t17948;
t18867 = -0.2e1 * t18936;
t19422 = pkin(3) * t18002;
t17062 = (t17615 * t18867 + t17686) * t17991 + ((t17615 * t17903 + t17800) * t18017 - t18617 + pkin(3) * t17328) * t18023 + (t17328 * t17948 + t17945) * t18017 + pkin(9) * (t17615 * t19422 - t18302);
t16852 = t16861 ^ 2 / t17062 ^ 2;
t19447 = 0.2e1 * t17991 - 0.1e1;
t16822 = t19447 * t16852;
t17712 = t17950 * t18005 + t17956 * t18001;
t17718 = -t17950 * t18001 + t17956 * t18005;
t17412 = -t17712 * t19066 + t17718 * t18024;
t18237 = (t17712 * t19062 + t17718 * t18018) * t18007 - t17712 * t19100;
t17095 = (pkin(3) * t18237 - t17412 * t17948) * t18023 + t18017 * (pkin(3) * t17412 + t18237 * t17948);
t19119 = t18002 * t18007;
t18874 = pkin(9) * t19119;
t18556 = t18003 * t18874;
t19453 = -0.2e1 * pkin(3);
t18382 = t18556 * t19453;
t18298 = t18004 * t18382;
t17912 = t18002 * t19420;
t17905 = pkin(9) * t17912;
t18572 = t17987 * t17912;
t19452 = 0.2e1 * pkin(9);
t18942 = t18572 * t19452 - 0.2e1 * t17905;
t17301 = (t18024 * t18298 + t17686 + t18942) * t17991;
t19078 = t18007 * t18017;
t18672 = t18003 * t19078;
t17685 = t17903 * t18672;
t17631 = t18024 * t17685;
t18217 = pkin(9) * (t17912 - t18572);
t18381 = pkin(3) * t17762 - t18617;
t17856 = t18008 * t17903;
t18396 = t19449 * t17856;
t19201 = t17935 * t18024;
t17694 = t17920 - t19201;
t18702 = t17987 * t19201;
t18402 = t17694 + t18702;
t18549 = pkin(3) * t18669;
t18394 = t17935 * t18556;
t18949 = t18008 * t18394 + t17945;
t17011 = 0.1e1 / (t17301 + ((t17800 - t18396) * t18017 + t18381) * t18023 + t18949 * t18017 + t18217 + ((t18402 * pkin(3) + t17631) * t18023 + (-t18393 + (t18017 * t18402 + t18549) * t18002) * pkin(9)) * t18004);
t19354 = t16861 / t17062;
t18793 = t18003 * t19354;
t18510 = t17935 * t18793;
t16846 = t18510 * t17948;
t17818 = t17978 * t18056 - t19156;
t19186 = t17979 * t18050;
t17585 = t17818 * t17982 - t19186;
t19172 = t17980 * t18042;
t17824 = t17978 * t18062 + t17981 * t18056;
t19180 = t17980 * t17824;
t18367 = t17818 * t17979 + t19146;
t17382 = t17983 * t18367 + t19180;
t19258 = t17382 * t18043;
t17206 = -(t17818 * t17983 + t17979 * t19180) * t18041 - t17585 * t19172 - t19258;
t19134 = t17983 * t18042;
t19187 = t17979 * t17983;
t19461 = t17824 * t17983 - t17980 * t18367;
t19264 = t19461 * t18043;
t17207 = -(-t17818 * t17980 + t17824 * t19187) * t18041 - t17585 * t19134 - t19264;
t19147 = t17982 * t18043;
t17618 = -t17979 * t19134 - t17980 * t19147;
t19133 = t17983 * t18043;
t17619 = t17979 * t19172 - t17982 * t19133;
t19149 = t17982 * t18041;
t16960 = (t17382 * t17619 - t17618 * t19461) * t18041 + ((-t17207 - t19264) * t17983 + (-t17206 - t19258) * t17980) * t18042 + (-t17206 * t17983 + t17207 * t17980) * t19149;
t17361 = t17824 * t19149 - t18042 * t18367;
t17564 = -t17978 * t19140 + t17982 * t19156 + t19186;
t16978 = t17207 * t18043 + (-t17361 * t17980 + t17564 * t19133) * t18042 + (t17207 * t17979 + t17564 * t17618 + (-t17361 * t17983 - t17382 * t18042) * t17982) * t18041;
t18955 = pkin(3) * t18702 + t17631;
t19118 = t18002 * t18017;
t17914 = pkin(9) * t19118;
t17890 = 0.2e1 * t17914 + pkin(2);
t18741 = t17890 * t19097;
t19473 = t18741 - t19201;
t17285 = (t19473 * pkin(3) + t18955) * t18004;
t19191 = (t18007 + 0.1e1) * (t18007 - 0.1e1);
t18441 = t18936 * t19191;
t18318 = t18008 * t18441;
t17684 = 0.2e1 * t18318;
t18679 = t18002 * t19075;
t18555 = pkin(9) * t18679;
t18440 = pkin(3) * t18555;
t19044 = t18018 * t17903;
t18751 = (t18440 - t19044 / 0.2e1) * t19100;
t17334 = (t17684 - 0.2e1 * t18751) * t17991;
t17648 = t18017 * t18394;
t18703 = t17935 * t19191;
t17746 = pkin(3) * t18703;
t19406 = pkin(9) * t17985;
t18866 = pkin(9) - t19406;
t17831 = pkin(2) * t19118 + t18866;
t17969 = pkin(2) * t18017;
t17904 = -t18070 + t18593;
t17906 = pkin(2) * t17914;
t19205 = t17935 * t18003;
t18904 = pkin(3) * t19205;
t18132 = ((-t17904 + t17906) * t18007 - t18017 * t18904) * t19354;
t18694 = t18068 * t19192;
t18209 = (t17987 * t18694 - t18070) * t18008;
t18210 = -t18593 * t17987 + t18070;
t18979 = 0.2e1 * t17948;
t18452 = t18979 * t19354;
t18387 = pkin(3) * t18452;
t17140 = t17182 * t18005 - t18001 * t19467;
t17146 = t17182 * t18001 + t19467 * t18005;
t17681 = pkin(3) * t19078 - t19205;
t17555 = t18023 * t18874 - t17681;
t17891 = t17914 + pkin(2);
t19419 = pkin(3) * t18023;
t17837 = t17891 + t19419;
t17373 = -t17555 * t18024 + t17837 * t18018;
t18379 = t18008 * (t17555 * t18018 + t18024 * t17837);
t16933 = -(t17140 * t17950 + t17146 * t17956) * t18379 - (t17140 * t17956 - t17146 * t17950) * t17373;
t19412 = pkin(9) * t17831;
t17469 = t17890 * t19419 + t17903 * t17991 + t19412;
t17391 = t17469 * t19097;
t18865 = t17903 * t19449;
t17830 = pkin(3) * t18696;
t18940 = t17946 - t17830;
t17395 = -t18017 * t18865 - t18940;
t19423 = pkin(3) * t17935;
t18631 = t19449 * t19423;
t17490 = t17685 + t18631;
t17913 = pkin(3) * t19099;
t17531 = t18017 * t18864 + t17913;
t18384 = 0.2e1 * t18441;
t17697 = t17991 * t18384;
t17803 = t17991 * t18382;
t17882 = t17969 + t17948;
t18876 = t17987 * t17948;
t18616 = pkin(3) * t18876;
t18291 = pkin(3) * t17882 + t17648 - t18616;
t17092 = (t17395 * t18023 + t17697 + t18291) * t18008 + ((t17490 * t18023 + t17531 * t17948 + t17803) * t18024 + t17391) * t18004;
t17086 = 0.1e1 / t17092;
t19345 = t16933 * t17086;
t18571 = t19345 * t17948;
t18444 = pkin(3) * t18571;
t18445 = t17948 - t18876;
t18453 = t18007 * t18694;
t19045 = t18017 * t18024;
t19206 = t17935 * t18002;
t18459 = t19045 * t19206;
t18465 = t18018 * t18703;
t18466 = t17856 * t19191;
t18563 = t18024 * t18877;
t19117 = t18002 * t18018;
t18873 = pkin(9) * t19117;
t18615 = pkin(3) * t18873;
t18916 = pkin(3) * t19354;
t18620 = pkin(2) * t18916;
t17640 = t17831 * t19097;
t18948 = t17987 * t18459 + t18002 * t18549;
t17460 = t18291 * t18008;
t18964 = t17334 + t17460;
t19404 = pkin(9) * t18004;
t18639 = (t17640 - t18459 + t18948) * t19404 + t18964;
t18654 = t18007 * t19354;
t18710 = t17903 * t19075;
t18777 = t18003 * t19345;
t18778 = t17904 * t19345;
t18779 = t17903 * t19345;
t18794 = t17903 * t19354;
t19402 = t18018 * pkin(3);
t18895 = t18007 * t19402;
t18910 = t17890 * t19402;
t19046 = t18017 * t18023;
t18928 = 0.2e1 * t19046;
t19079 = t18007 * t18008;
t19088 = t18004 * t18024;
t17857 = t18017 * t17903;
t18729 = t17987 * t17857;
t19252 = (-t17857 + t18729 + t18940) * t18008;
t19270 = (-t18466 + (0.2e1 * t18615 + t18710) * t19100) * t17991;
t19318 = t17011 * t17095;
t19448 = 0.2e1 * t17987 - 0.2e1;
t17413 = t17712 * t18024 + t17718 * t19066;
t17419 = -t17712 * t18018 + t17718 * t19062;
t17573 = t17718 * t18557;
t18591 = (-pkin(3) * t17413 + t17419 * t18874 - t17573) * t18017 + (t17413 * t17948 + (t17419 * t18007 - t17718 * t19100) * pkin(3)) * t18023;
t19510 = t17011 * t18591;
t16708 = -((((t18018 * t18387 + t18024 * t18779) * t18007 + 0.2e1 * t18018 * t18444 + t18024 * t18794) * t19100 - t18466 * t19345) * t17991 + (((t18024 * t18620 + (-(t18018 * t18794 - 0.2e1 * t18024 * t18444) * t18007 + t18024 * t18387 - t18018 * t18779) * t18017) * t18003 - t18465 * t18916) * t18004 - t18008 * (t16846 + pkin(3) * (t19448 * t18017 * t18571 + pkin(2) * t18654))) * t18023 + ((-pkin(3) * t19117 - t18007 * t18563) * t18777 + (-t18003 * t18563 + ((pkin(2) * t19045 - t18895) * t18003 - t18017 * t18465) * t18002) * t19354) * t19404 - (t18210 * t19345 + t18132) * t18008) / (t17334 + (((t18017 * t18710 + t18910) * t18003 + t18024 * t17746) * t18004 - t19252) * t18023 + ((pkin(3) * t18679 + t17831 * t18018) * t18003 + t18459 * t19191) * t19404 + t18008 * (t17648 + pkin(3) * (t17969 + t18445))) * t19354 - ((-t18003 * t19088 + t19079) * t18778 + (t19270 + (-t18318 + t18751) * t18928 - (t18024 * t18453 + t18615) * t19100 + t18209) * t19354) / ((t17285 - t19252) * t18023 + t18639) * t19345 + t16960 * t19510 + t16978 * t19318;
t18511 = t19345 * t19354;
t18126 = t16708 * t18928 + 0.4e1 * (t17991 - 0.1e1 / 0.2e1) * t18511;
t18102 = t17011 * t18126;
t17367 = t17395 * t18008;
t19112 = t18002 * t18024;
t17074 = 0.1e1 / ((t17367 + t18004 * (pkin(3) * t18741 + t17490 * t18024)) * t18023 + (t17531 * t19112 + t17640) * t19404 + t18964);
t17505 = t17681 * t18024 + t17891 * t18018;
t17771 = t18555 - t19402;
t17765 = pkin(3) * t18024 + t18007 * t18873;
t19232 = t17765 * t18008;
t19244 = (-t17681 * t18018 + t17891 * t18024) * t18008;
t17158 = (t17712 * t19232 - t17718 * t17771) * t18023 + t17505 * t17718 + t17712 * t19244;
t19552 = t17074 * t17158;
t19564 = t16822 * t19552 + t17095 * t18102;
t18057 = koppelP(5,2);
t18063 = koppelP(5,1);
t18985 = t18042 * t18063;
t18991 = t18042 * t18057;
t18051 = koppelP(5,3);
t18997 = t18042 * t18051;
t19004 = t18041 * t18063;
t19145 = t17982 * t18051;
t19155 = t17981 * t18063;
t17183 = t18044 + ((t17982 * t18985 + t18057 * t18579) * t17981 + (-t17978 * t19004 + t18997) * t17979 - t17978 * (t17982 * t18991 + t18043 * t18063)) * t17980 + (t17873 * t19155 - t18043 * t19145 - t18057 * t18380) * t17983;
t18020 = sin(qJ(2,5));
t18026 = cos(qJ(2,5));
t19060 = t18008 * t18026;
t19139 = t17982 * t18057;
t19468 = t17978 * (t17979 * t18991 - t17982 * t19004) - (t17979 * t18985 + t18041 * t19139) * t17981 + t17982 * t18997 + t18045;
t17003 = (t17183 * t19060 - t18020 * t19468) * t18007 - t17183 * t19100;
t17045 = (t17183 * t18020 + t19060 * t19468) * t18007 - t19468 * t19100;
t18012 = legFrame(5,3);
t17951 = sin(t18012);
t17957 = cos(t18012);
t16895 = (t17003 * t18001 + t17045 * t18005) * t17957 + (t17003 * t18005 - t17045 * t18001) * t17951;
t19065 = t18008 * t18020;
t17129 = t17183 * t18026 - t19065 * t19468;
t17132 = t17183 * t19065 + t18026 * t19468;
t16943 = (t17129 * t18005 - t17132 * t18001) * t17957 - t17951 * (t17129 * t18001 + t17132 * t18005);
t18019 = sin(qJ(3,5));
t18025 = cos(qJ(3,5));
t16862 = (pkin(3) * t16895 - t16943 * t17948) * t18025 + t18019 * (pkin(3) * t16943 + t16895 * t17948);
t19096 = t18003 * t18020;
t17921 = pkin(2) * t19096;
t17329 = t17762 + (t18026 * t18864 + t17921) * t18004;
t19074 = t18007 * t18026;
t18668 = t18003 * t19074;
t17616 = t18004 * t18668 - t18592;
t17688 = t18020 * t18717;
t17801 = t18020 * t18383;
t17992 = t18025 ^ 2;
t18392 = t18020 * t18564;
t18301 = t18004 * t18392;
t17063 = (t17616 * t18867 + t17688) * t17992 + ((t17616 * t17903 + t17801) * t18019 - t18617 + pkin(3) * t17329) * t18025 + (t17329 * t17948 + t17945) * t18019 + pkin(9) * (t17616 * t19422 - t18301);
t16853 = t16862 ^ 2 / t17063 ^ 2;
t19446 = 0.2e1 * t17992 - 0.1e1;
t16823 = t19446 * t16853;
t17713 = t17951 * t18005 + t17957 * t18001;
t17719 = -t17951 * t18001 + t17957 * t18005;
t17414 = -t17713 * t19065 + t17719 * t18026;
t18236 = (t17713 * t19060 + t17719 * t18020) * t18007 - t17713 * t19100;
t17098 = (pkin(3) * t18236 - t17414 * t17948) * t18025 + t18019 * (pkin(3) * t17414 + t18236 * t17948);
t17302 = (t18026 * t18298 + t17688 + t18942) * t17992;
t19077 = t18007 * t18019;
t18671 = t18003 * t19077;
t17687 = t17903 * t18671;
t17632 = t18026 * t17687;
t19200 = t17935 * t18026;
t17695 = t17921 - t19200;
t18701 = t17987 * t19200;
t18401 = t17695 + t18701;
t18547 = pkin(3) * t18668;
t17012 = 0.1e1 / (t17302 + ((t17801 - t18396) * t18019 + t18381) * t18025 + t18949 * t18019 + t18217 + ((t18401 * pkin(3) + t17632) * t18025 + (-t18392 + (t18019 * t18401 + t18547) * t18002) * pkin(9)) * t18004);
t19353 = t16862 / t17063;
t18791 = t18003 * t19353;
t18508 = t17935 * t18791;
t16847 = t18508 * t17948;
t17819 = t17978 * t18057 - t19155;
t19185 = t17979 * t18051;
t17586 = t17819 * t17982 - t19185;
t17825 = t17978 * t18063 + t17981 * t18057;
t19179 = t17980 * t17825;
t18366 = t17819 * t17979 + t19145;
t17383 = t17983 * t18366 + t19179;
t19257 = t17383 * t18043;
t17208 = -(t17819 * t17983 + t17979 * t19179) * t18041 - t17586 * t19172 - t19257;
t19462 = t17825 * t17983 - t17980 * t18366;
t19263 = t19462 * t18043;
t17209 = -(-t17819 * t17980 + t17825 * t19187) * t18041 - t17586 * t19134 - t19263;
t16961 = (t17383 * t17619 - t17618 * t19462) * t18041 + ((-t17209 - t19263) * t17983 + (-t17208 - t19257) * t17980) * t18042 + (-t17208 * t17983 + t17209 * t17980) * t19149;
t17362 = t17825 * t19149 - t18042 * t18366;
t17565 = -t17978 * t19139 + t17982 * t19155 + t19185;
t16979 = t17209 * t18043 + (-t17362 * t17980 + t17565 * t19133) * t18042 + (t17209 * t17979 + t17565 * t17618 + (-t17362 * t17983 - t17383 * t18042) * t17982) * t18041;
t18954 = pkin(3) * t18701 + t17632;
t19116 = t18002 * t18019;
t17916 = pkin(9) * t19116;
t17892 = 0.2e1 * t17916 + pkin(2);
t18740 = t17892 * t19096;
t19474 = t18740 - t19200;
t17286 = (pkin(3) * t19474 + t18954) * t18004;
t18678 = t18002 * t19074;
t18554 = pkin(9) * t18678;
t18439 = pkin(3) * t18554;
t19038 = t18020 * t17903;
t18750 = (t18439 - t19038 / 0.2e1) * t19100;
t17335 = (t17684 - 0.2e1 * t18750) * t17992;
t17649 = t18019 * t18394;
t17832 = pkin(2) * t19116 + t18866;
t17970 = pkin(2) * t18019;
t17907 = pkin(2) * t17916;
t18131 = ((-t17904 + t17907) * t18007 - t18019 * t18904) * t19353;
t18451 = t18979 * t19353;
t18386 = pkin(3) * t18451;
t17141 = t17183 * t18005 - t18001 * t19468;
t17147 = t17183 * t18001 + t19468 * t18005;
t17682 = pkin(3) * t19077 - t19205;
t17556 = t18025 * t18874 - t17682;
t17893 = t17916 + pkin(2);
t19418 = pkin(3) * t18025;
t17838 = t17893 + t19418;
t17374 = -t17556 * t18026 + t17838 * t18020;
t18378 = t18008 * (t17556 * t18020 + t18026 * t17838);
t16934 = -(t17141 * t17951 + t17147 * t17957) * t18378 - t17374 * (t17141 * t17957 - t17147 * t17951);
t19411 = pkin(9) * t17832;
t17470 = t17892 * t19418 + t17903 * t17992 + t19411;
t17392 = t17470 * t19096;
t17397 = -t18019 * t18865 - t18940;
t17491 = t17687 + t18631;
t17532 = t18019 * t18864 + t17913;
t17698 = t17992 * t18384;
t17804 = t17992 * t18382;
t17883 = t17970 + t17948;
t18290 = pkin(3) * t17883 + t17649 - t18616;
t17093 = (t17397 * t18025 + t17698 + t18290) * t18008 + ((t17491 * t18025 + t17532 * t17948 + t17804) * t18026 + t17392) * t18004;
t17088 = 0.1e1 / t17093;
t19344 = t16934 * t17088;
t18570 = t19344 * t17948;
t18443 = pkin(3) * t18570;
t19039 = t18019 * t18026;
t18458 = t19039 * t19206;
t18464 = t18020 * t18703;
t18562 = t18026 * t18877;
t19115 = t18002 * t18020;
t18872 = pkin(9) * t19115;
t18614 = pkin(3) * t18872;
t18915 = pkin(3) * t19353;
t18619 = pkin(2) * t18915;
t17641 = t17832 * t19096;
t18947 = t17987 * t18458 + t18002 * t18547;
t17461 = t18290 * t18008;
t18963 = t17335 + t17461;
t18638 = (t17641 - t18458 + t18947) * t19404 + t18963;
t18653 = t18007 * t19353;
t18709 = t17903 * t19074;
t18774 = t18003 * t19344;
t18775 = t17904 * t19344;
t18776 = t17903 * t19344;
t18792 = t17903 * t19353;
t19401 = t18020 * pkin(3);
t18894 = t18007 * t19401;
t18909 = t17892 * t19401;
t19040 = t18019 * t18025;
t18927 = 0.2e1 * t19040;
t19087 = t18004 * t18026;
t17858 = t18019 * t17903;
t18728 = t17987 * t17858;
t19251 = (-t17858 + t18728 + t18940) * t18008;
t19269 = (-t18466 + (0.2e1 * t18614 + t18709) * t19100) * t17992;
t19314 = t17012 * t17098;
t17415 = t17713 * t18026 + t17719 * t19065;
t17421 = -t17713 * t18020 + t17719 * t19060;
t17574 = t17719 * t18557;
t18590 = (-pkin(3) * t17415 + t17421 * t18874 - t17574) * t18019 + (t17415 * t17948 + (t17421 * t18007 - t17719 * t19100) * pkin(3)) * t18025;
t19509 = t17012 * t18590;
t16709 = -((((t18020 * t18386 + t18026 * t18776) * t18007 + 0.2e1 * t18020 * t18443 + t18026 * t18792) * t19100 - t18466 * t19344) * t17992 + (((t18026 * t18619 + (-(t18020 * t18792 - 0.2e1 * t18026 * t18443) * t18007 + t18026 * t18386 - t18020 * t18776) * t18019) * t18003 - t18464 * t18915) * t18004 - t18008 * (t16847 + pkin(3) * (t19448 * t18019 * t18570 + pkin(2) * t18653))) * t18025 + ((-pkin(3) * t19115 - t18007 * t18562) * t18774 + (-t18003 * t18562 + ((pkin(2) * t19039 - t18894) * t18003 - t18019 * t18464) * t18002) * t19353) * t19404 - (t18210 * t19344 + t18131) * t18008) / (t17335 + (((t18019 * t18709 + t18909) * t18003 + t18026 * t17746) * t18004 - t19251) * t18025 + ((pkin(3) * t18678 + t17832 * t18020) * t18003 + t18458 * t19191) * t19404 + t18008 * (t17649 + pkin(3) * (t17970 + t18445))) * t19353 - ((-t18003 * t19087 + t19079) * t18775 + (t19269 + (-t18318 + t18750) * t18927 - (t18026 * t18453 + t18614) * t19100 + t18209) * t19353) / ((t17286 - t19251) * t18025 + t18638) * t19344 + t16961 * t19509 + t16979 * t19314;
t18509 = t19344 * t19353;
t18124 = t16709 * t18927 + 0.4e1 * (t17992 - 0.1e1 / 0.2e1) * t18509;
t18100 = t17012 * t18124;
t17368 = t17397 * t18008;
t19111 = t18002 * t18026;
t17075 = 0.1e1 / ((t17368 + t18004 * (pkin(3) * t18740 + t17491 * t18026)) * t18025 + (t17532 * t19111 + t17641) * t19404 + t18963);
t17507 = t17682 * t18026 + t17893 * t18020;
t17773 = t18554 - t19401;
t17767 = pkin(3) * t18026 + t18007 * t18872;
t19231 = t17767 * t18008;
t19243 = (-t17682 * t18020 + t17893 * t18026) * t18008;
t17160 = (t17713 * t19231 - t17719 * t17773) * t18025 + t17507 * t17719 + t17713 * t19243;
t19551 = t17075 * t17160;
t19563 = t16823 * t19551 + t17098 * t18100;
t18058 = koppelP(4,2);
t18064 = koppelP(4,1);
t18984 = t18042 * t18064;
t18990 = t18042 * t18058;
t18052 = koppelP(4,3);
t18996 = t18042 * t18052;
t19003 = t18041 * t18064;
t19144 = t17982 * t18052;
t19154 = t17981 * t18064;
t17184 = t18044 + ((t17982 * t18984 + t18058 * t18579) * t17981 + (-t17978 * t19003 + t18996) * t17979 - t17978 * (t17982 * t18990 + t18043 * t18064)) * t17980 + (t17873 * t19154 - t18043 * t19144 - t18058 * t18380) * t17983;
t18022 = sin(qJ(2,4));
t18028 = cos(qJ(2,4));
t19058 = t18008 * t18028;
t19138 = t17982 * t18058;
t19469 = t17978 * (t17979 * t18990 - t17982 * t19003) - (t17979 * t18984 + t18041 * t19138) * t17981 + t17982 * t18996 + t18045;
t17004 = (t17184 * t19058 - t18022 * t19469) * t18007 - t17184 * t19100;
t17046 = (t17184 * t18022 + t19058 * t19469) * t18007 - t19469 * t19100;
t18013 = legFrame(4,3);
t17952 = sin(t18013);
t17958 = cos(t18013);
t16896 = (t17004 * t18001 + t17046 * t18005) * t17958 + t17952 * (t17004 * t18005 - t17046 * t18001);
t19064 = t18008 * t18022;
t17130 = t17184 * t18028 - t19064 * t19469;
t17133 = t17184 * t19064 + t18028 * t19469;
t16944 = (t17130 * t18005 - t17133 * t18001) * t17958 - t17952 * (t17130 * t18001 + t17133 * t18005);
t18021 = sin(qJ(3,4));
t18027 = cos(qJ(3,4));
t16863 = (pkin(3) * t16896 - t16944 * t17948) * t18027 + (pkin(3) * t16944 + t16896 * t17948) * t18021;
t19095 = t18003 * t18022;
t17922 = pkin(2) * t19095;
t17330 = t17762 + (t18028 * t18864 + t17922) * t18004;
t19073 = t18007 * t18028;
t18667 = t18003 * t19073;
t17617 = t18004 * t18667 - t18592;
t17690 = t18022 * t18717;
t17802 = t18022 * t18383;
t17993 = t18027 ^ 2;
t18391 = t18022 * t18564;
t18300 = t18004 * t18391;
t17064 = (t17617 * t18867 + t17690) * t17993 + ((t17617 * t17903 + t17802) * t18021 - t18617 + pkin(3) * t17330) * t18027 + (t17330 * t17948 + t17945) * t18021 + pkin(9) * (t17617 * t19422 - t18300);
t16854 = t16863 ^ 2 / t17064 ^ 2;
t19445 = 0.2e1 * t17993 - 0.1e1;
t16824 = t19445 * t16854;
t17714 = t17952 * t18005 + t17958 * t18001;
t17720 = -t17952 * t18001 + t17958 * t18005;
t17416 = -t17714 * t19064 + t17720 * t18028;
t18235 = (t17714 * t19058 + t17720 * t18022) * t18007 - t17714 * t19100;
t17101 = (pkin(3) * t18235 - t17416 * t17948) * t18027 + t18021 * (pkin(3) * t17416 + t18235 * t17948);
t17303 = (t18028 * t18298 + t17690 + t18942) * t17993;
t19076 = t18007 * t18021;
t18670 = t18003 * t19076;
t17689 = t17903 * t18670;
t17633 = t18028 * t17689;
t19199 = t17935 * t18028;
t17696 = t17922 - t19199;
t18700 = t17987 * t19199;
t18400 = t17696 + t18700;
t18545 = pkin(3) * t18667;
t17013 = 0.1e1 / (t17303 + ((t17802 - t18396) * t18021 + t18381) * t18027 + t18949 * t18021 + t18217 + ((t18400 * pkin(3) + t17633) * t18027 + (-t18391 + (t18021 * t18400 + t18545) * t18002) * pkin(9)) * t18004);
t19352 = t16863 / t17064;
t18789 = t18003 * t19352;
t18506 = t17935 * t18789;
t16848 = t18506 * t17948;
t17820 = t17978 * t18058 - t19154;
t19184 = t17979 * t18052;
t17587 = t17820 * t17982 - t19184;
t17826 = t17978 * t18064 + t17981 * t18058;
t19178 = t17980 * t17826;
t18365 = t17820 * t17979 + t19144;
t17384 = t17983 * t18365 + t19178;
t19256 = t17384 * t18043;
t17210 = -(t17820 * t17983 + t17979 * t19178) * t18041 - t17587 * t19172 - t19256;
t19463 = t17826 * t17983 - t17980 * t18365;
t19262 = t19463 * t18043;
t17211 = -(-t17820 * t17980 + t17826 * t19187) * t18041 - t17587 * t19134 - t19262;
t16962 = (t17384 * t17619 - t17618 * t19463) * t18041 + ((-t17211 - t19262) * t17983 + (-t17210 - t19256) * t17980) * t18042 + (-t17210 * t17983 + t17211 * t17980) * t19149;
t17363 = t17826 * t19149 - t18042 * t18365;
t17566 = -t17978 * t19138 + t17982 * t19154 + t19184;
t16980 = t17211 * t18043 + (-t17363 * t17980 + t17566 * t19133) * t18042 + (t17211 * t17979 + t17566 * t17618 + (-t17363 * t17983 - t17384 * t18042) * t17982) * t18041;
t18953 = pkin(3) * t18700 + t17633;
t19114 = t18002 * t18021;
t17918 = pkin(9) * t19114;
t17894 = 0.2e1 * t17918 + pkin(2);
t18739 = t17894 * t19095;
t19475 = t18739 - t19199;
t17287 = (pkin(3) * t19475 + t18953) * t18004;
t18677 = t18002 * t19073;
t18553 = pkin(9) * t18677;
t18438 = pkin(3) * t18553;
t19032 = t18022 * t17903;
t18749 = (t18438 - t19032 / 0.2e1) * t19100;
t17336 = (t17684 - 0.2e1 * t18749) * t17993;
t17650 = t18021 * t18394;
t17833 = pkin(2) * t19114 + t18866;
t17971 = pkin(2) * t18021;
t17908 = pkin(2) * t17918;
t18130 = ((-t17904 + t17908) * t18007 - t18021 * t18904) * t19352;
t18450 = t18979 * t19352;
t18385 = pkin(3) * t18450;
t17142 = t17184 * t18005 - t18001 * t19469;
t17148 = t17184 * t18001 + t19469 * t18005;
t17683 = pkin(3) * t19076 - t19205;
t17557 = t18027 * t18874 - t17683;
t17895 = t17918 + pkin(2);
t19417 = pkin(3) * t18027;
t17839 = t17895 + t19417;
t17375 = -t17557 * t18028 + t17839 * t18022;
t18377 = t18008 * (t17557 * t18022 + t18028 * t17839);
t16935 = -(t17142 * t17952 + t17148 * t17958) * t18377 - t17375 * (t17142 * t17958 - t17148 * t17952);
t19410 = pkin(9) * t17833;
t17471 = t17894 * t19417 + t17903 * t17993 + t19410;
t17393 = t17471 * t19095;
t17399 = -t18021 * t18865 - t18940;
t17492 = t17689 + t18631;
t17533 = t18021 * t18864 + t17913;
t17699 = t17993 * t18384;
t17805 = t17993 * t18382;
t17884 = t17971 + t17948;
t18289 = pkin(3) * t17884 + t17650 - t18616;
t17094 = (t17399 * t18027 + t17699 + t18289) * t18008 + ((t17492 * t18027 + t17533 * t17948 + t17805) * t18028 + t17393) * t18004;
t17090 = 0.1e1 / t17094;
t19343 = t16935 * t17090;
t18569 = t19343 * t17948;
t18442 = pkin(3) * t18569;
t19033 = t18021 * t18028;
t18457 = t19033 * t19206;
t18463 = t18022 * t18703;
t18561 = t18028 * t18877;
t19113 = t18002 * t18022;
t18871 = pkin(9) * t19113;
t18613 = pkin(3) * t18871;
t18914 = pkin(3) * t19352;
t18618 = pkin(2) * t18914;
t17642 = t17833 * t19095;
t18946 = t17987 * t18457 + t18002 * t18545;
t17462 = t18289 * t18008;
t18962 = t17336 + t17462;
t18637 = (t17642 - t18457 + t18946) * t19404 + t18962;
t18652 = t18007 * t19352;
t18708 = t17903 * t19073;
t18771 = t18003 * t19343;
t18772 = t17904 * t19343;
t18773 = t17903 * t19343;
t18790 = t17903 * t19352;
t19400 = t18022 * pkin(3);
t18893 = t18007 * t19400;
t18908 = t17894 * t19400;
t19034 = t18021 * t18027;
t18926 = 0.2e1 * t19034;
t19086 = t18004 * t18028;
t17859 = t18021 * t17903;
t18727 = t17987 * t17859;
t19250 = (-t17859 + t18727 + t18940) * t18008;
t19268 = (-t18466 + (0.2e1 * t18613 + t18708) * t19100) * t17993;
t19310 = t17013 * t17101;
t17417 = t17714 * t18028 + t17720 * t19064;
t17423 = -t17714 * t18022 + t17720 * t19058;
t17575 = t17720 * t18557;
t18589 = (-pkin(3) * t17417 + t17423 * t18874 - t17575) * t18021 + (t17417 * t17948 + (t17423 * t18007 - t17720 * t19100) * pkin(3)) * t18027;
t19508 = t17013 * t18589;
t16710 = -((((t18022 * t18385 + t18028 * t18773) * t18007 + 0.2e1 * t18022 * t18442 + t18028 * t18790) * t19100 - t18466 * t19343) * t17993 + (((t18028 * t18618 + (-(t18022 * t18790 - 0.2e1 * t18028 * t18442) * t18007 + t18028 * t18385 - t18022 * t18773) * t18021) * t18003 - t18463 * t18914) * t18004 - t18008 * (t16848 + pkin(3) * (t19448 * t18021 * t18569 + pkin(2) * t18652))) * t18027 + ((-pkin(3) * t19113 - t18007 * t18561) * t18771 + (-t18003 * t18561 + ((pkin(2) * t19033 - t18893) * t18003 - t18021 * t18463) * t18002) * t19352) * t19404 - (t18210 * t19343 + t18130) * t18008) / (t17336 + (((t18021 * t18708 + t18908) * t18003 + t18028 * t17746) * t18004 - t19250) * t18027 + ((pkin(3) * t18677 + t17833 * t18022) * t18003 + t18457 * t19191) * t19404 + t18008 * (t17650 + pkin(3) * (t17971 + t18445))) * t19352 - ((-t18003 * t19086 + t19079) * t18772 + (t19268 + (-t18318 + t18749) * t18926 - (t18028 * t18453 + t18613) * t19100 + t18209) * t19352) / ((t17287 - t19250) * t18027 + t18637) * t19343 + t16962 * t19508 + t16980 * t19310;
t18507 = t19343 * t19352;
t18122 = t16710 * t18926 + 0.4e1 * (t17993 - 0.1e1 / 0.2e1) * t18507;
t18098 = t17013 * t18122;
t17369 = t17399 * t18008;
t19110 = t18002 * t18028;
t17076 = 0.1e1 / ((t17369 + t18004 * (pkin(3) * t18739 + t17492 * t18028)) * t18027 + (t17533 * t19110 + t17642) * t19404 + t18962);
t17509 = t17683 * t18028 + t17895 * t18022;
t17775 = t18553 - t19400;
t17769 = pkin(3) * t18028 + t18007 * t18871;
t19230 = t17769 * t18008;
t19242 = (-t17683 * t18022 + t17895 * t18028) * t18008;
t17162 = (t17714 * t19230 - t17720 * t17775) * t18027 + t17509 * t17720 + t17714 * t19242;
t19550 = t17076 * t17162;
t19562 = t16824 * t19550 + t17101 * t18098;
t18059 = koppelP(3,2);
t18065 = koppelP(3,1);
t18983 = t18042 * t18065;
t18989 = t18042 * t18059;
t18053 = koppelP(3,3);
t18995 = t18042 * t18053;
t19002 = t18041 * t18065;
t19143 = t17982 * t18053;
t19153 = t17981 * t18065;
t17185 = t18044 + ((t17982 * t18983 + t18059 * t18579) * t17981 + (-t17978 * t19002 + t18995) * t17979 - t17978 * (t17982 * t18989 + t18043 * t18065)) * t17980 + (t17873 * t19153 - t18043 * t19143 - t18059 * t18380) * t17983;
t18030 = sin(qJ(2,3));
t18036 = cos(qJ(2,3));
t19053 = t18008 * t18036;
t19137 = t17982 * t18059;
t19470 = t17978 * (t17979 * t18989 - t17982 * t19002) - (t17979 * t18983 + t18041 * t19137) * t17981 + t17982 * t18995 + t18045;
t17006 = (t17185 * t19053 - t18030 * t19470) * t18007 - t17185 * t19100;
t17047 = (t17185 * t18030 + t19053 * t19470) * t18007 - t19470 * t19100;
t18014 = legFrame(3,3);
t17953 = sin(t18014);
t17959 = cos(t18014);
t16897 = (t17006 * t18001 + t17047 * t18005) * t17959 + t17953 * (t17006 * t18005 - t17047 * t18001);
t19057 = t18008 * t18030;
t17134 = t17185 * t18036 - t19057 * t19470;
t17138 = t17185 * t19057 + t18036 * t19470;
t16945 = (t17134 * t18005 - t17138 * t18001) * t17959 - t17953 * (t17134 * t18001 + t17138 * t18005);
t18029 = sin(qJ(3,3));
t18035 = cos(qJ(3,3));
t16867 = (pkin(3) * t16897 - t16945 * t17948) * t18035 + (pkin(3) * t16945 + t16897 * t17948) * t18029;
t19094 = t18003 * t18030;
t17929 = pkin(2) * t19094;
t17331 = t17762 + (t18036 * t18864 + t17929) * t18004;
t19069 = t18007 * t18036;
t18663 = t18003 * t19069;
t17620 = t18004 * t18663 - t18592;
t17701 = t18030 * t18717;
t17809 = t18030 * t18383;
t17997 = t18035 ^ 2;
t18390 = t18030 * t18564;
t18304 = t18004 * t18390;
t17071 = (t17620 * t18867 + t17701) * t17997 + ((t17620 * t17903 + t17809) * t18029 - t18617 + pkin(3) * t17331) * t18035 + (t17331 * t17948 + t17945) * t18029 + pkin(9) * (t17620 * t19422 - t18304);
t16855 = t16867 ^ 2 / t17071 ^ 2;
t19444 = 0.2e1 * t17997 - 0.1e1;
t16825 = t19444 * t16855;
t17715 = t17953 * t18005 + t17959 * t18001;
t17721 = -t17953 * t18001 + t17959 * t18005;
t17436 = -t17715 * t19057 + t17721 * t18036;
t18234 = (t17715 * t19053 + t17721 * t18030) * t18007 - t17715 * t19100;
t17110 = (pkin(3) * t18234 - t17436 * t17948) * t18035 + t18029 * (pkin(3) * t17436 + t18234 * t17948);
t17307 = (t18036 * t18298 + t17701 + t18942) * t17997;
t19072 = t18007 * t18029;
t18666 = t18003 * t19072;
t17700 = t17903 * t18666;
t17637 = t18036 * t17700;
t19195 = t17935 * t18036;
t17709 = t17929 - t19195;
t18699 = t17987 * t19195;
t18399 = t17709 + t18699;
t18543 = pkin(3) * t18663;
t17017 = 0.1e1 / (t17307 + ((t17809 - t18396) * t18029 + t18381) * t18035 + t18949 * t18029 + t18217 + ((t18399 * pkin(3) + t17637) * t18035 + (-t18390 + (t18029 * t18399 + t18543) * t18002) * pkin(9)) * t18004);
t19351 = t16867 / t17071;
t18784 = t18003 * t19351;
t18495 = t17935 * t18784;
t16849 = t18495 * t17948;
t17821 = t17978 * t18059 - t19153;
t19183 = t17979 * t18053;
t17588 = t17821 * t17982 - t19183;
t17827 = t17978 * t18065 + t17981 * t18059;
t19177 = t17980 * t17827;
t18364 = t17821 * t17979 + t19143;
t17385 = t17983 * t18364 + t19177;
t19255 = t17385 * t18043;
t17212 = -(t17821 * t17983 + t17979 * t19177) * t18041 - t17588 * t19172 - t19255;
t19464 = t17827 * t17983 - t17980 * t18364;
t19261 = t19464 * t18043;
t17213 = -(-t17821 * t17980 + t17827 * t19187) * t18041 - t17588 * t19134 - t19261;
t16963 = (t17385 * t17619 - t17618 * t19464) * t18041 + ((-t17213 - t19261) * t17983 + (-t17212 - t19255) * t17980) * t18042 + (-t17212 * t17983 + t17213 * t17980) * t19149;
t17364 = t17827 * t19149 - t18042 * t18364;
t17567 = -t17978 * t19137 + t17982 * t19153 + t19183;
t16981 = t17213 * t18043 + (-t17364 * t17980 + t17567 * t19133) * t18042 + (t17213 * t17979 + t17567 * t17618 + (-t17364 * t17983 - t17385 * t18042) * t17982) * t18041;
t18952 = pkin(3) * t18699 + t17637;
t19109 = t18002 * t18029;
t17923 = pkin(9) * t19109;
t17896 = 0.2e1 * t17923 + pkin(2);
t18738 = t17896 * t19094;
t19476 = t18738 - t19195;
t17288 = (pkin(3) * t19476 + t18952) * t18004;
t18676 = t18002 * t19069;
t18552 = pkin(9) * t18676;
t18437 = pkin(3) * t18552;
t19023 = t18030 * t17903;
t18748 = (t18437 - t19023 / 0.2e1) * t19100;
t17340 = (t17684 - 0.2e1 * t18748) * t17997;
t17651 = t18029 * t18394;
t17840 = pkin(2) * t19109 + t18866;
t17975 = pkin(2) * t18029;
t17909 = pkin(2) * t17923;
t18129 = ((-t17904 + t17909) * t18007 - t18029 * t18904) * t19351;
t18449 = t18979 * t19351;
t19024 = t18029 * t18036;
t18456 = t19024 * t19206;
t18462 = t18030 * t18703;
t19108 = t18002 * t18030;
t18870 = pkin(9) * t19108;
t18612 = pkin(3) * t18870;
t18537 = 0.2e1 * t18612;
t18560 = t18036 * t18877;
t17143 = t17185 * t18005 - t18001 * t19470;
t17149 = t17185 * t18001 + t19470 * t18005;
t17691 = pkin(3) * t19072 - t19205;
t17561 = t18035 * t18874 - t17691;
t17897 = t17923 + pkin(2);
t19416 = pkin(3) * t18035;
t17852 = t17897 + t19416;
t17388 = -t17561 * t18036 + t17852 * t18030;
t18376 = t18008 * (t17561 * t18030 + t18036 * t17852);
t16939 = -(t17143 * t17953 + t17149 * t17959) * t18376 - t17388 * (t17143 * t17959 - t17149 * t17953);
t19409 = pkin(9) * t17840;
t17484 = t17896 * t19416 + t17903 * t17997 + t19409;
t17400 = t17484 * t19094;
t17404 = -t18029 * t18865 - t18940;
t17493 = t17700 + t18631;
t17534 = t18029 * t18864 + t17913;
t17706 = t17997 * t18384;
t17812 = t17997 * t18382;
t17885 = t17975 + t17948;
t18288 = pkin(3) * t17885 + t17651 - t18616;
t17119 = (t17404 * t18035 + t17706 + t18288) * t18008 + ((t17493 * t18035 + t17534 * t17948 + t17812) * t18036 + t17400) * t18004;
t17104 = 0.1e1 / t17119;
t19339 = t16939 * t17104;
t18568 = t19339 * t17948;
t18609 = 0.2e1 * t18936;
t18913 = pkin(3) * t19351;
t18630 = pkin(2) * t18913;
t17645 = t17840 * t19094;
t18945 = t17987 * t18456 + t18002 * t18543;
t17463 = t18288 * t18008;
t18961 = t17340 + t17463;
t18636 = (t17645 - t18456 + t18945) * t19404 + t18961;
t18645 = t18007 * t19339;
t18651 = t18007 * t19351;
t18707 = t17903 * t19069;
t18769 = t18003 * t19339;
t18770 = t17904 * t19339;
t18785 = t17903 * t19351;
t19399 = t18030 * pkin(3);
t18892 = t18007 * t19399;
t18907 = t17896 * t19399;
t19025 = t18029 * t18035;
t18925 = 0.2e1 * t19025;
t19082 = t18004 * t18036;
t17860 = t18029 * t17903;
t18726 = t17987 * t17860;
t19249 = (-t17860 + t18726 + t18940) * t18008;
t19267 = (-t18466 + (t18537 + t18707) * t19100) * t17997;
t19306 = t17017 * t17110;
t17437 = t17715 * t18036 + t17721 * t19057;
t17443 = -t17715 * t18030 + t17721 * t19053;
t17576 = t17721 * t18557;
t18588 = (-pkin(3) * t17437 + t17443 * t18874 - t17576) * t18029 + (t17437 * t17948 + (t17443 * t18007 - t17721 * t19100) * pkin(3)) * t18035;
t19507 = t17017 * t18588;
t16711 = -((((t17903 * t18036 * t19339 + t18449 * t19399) * t18007 + t18537 * t19339 + t18036 * t18785) * t19100 - t18466 * t19339) * t17997 + (((t18036 * t18630 + ((-t18651 - t19339) * t19023 + (t18645 + t19351) * t18036 * t18609) * t18029) * t18003 - t18462 * t18913) * t18004 - t18008 * (t16849 + pkin(3) * (t19448 * t18029 * t18568 + pkin(2) * t18651))) * t18035 + ((-pkin(3) * t19108 - t18007 * t18560) * t18769 + (-t18003 * t18560 + ((pkin(2) * t19024 - t18892) * t18003 - t18029 * t18462) * t18002) * t19351) * t19404 - (t18210 * t19339 + t18129) * t18008) / (t17340 + (((t18029 * t18707 + t18907) * t18003 + t18036 * t17746) * t18004 - t19249) * t18035 + ((pkin(3) * t18676 + t17840 * t18030) * t18003 + t18456 * t19191) * t19404 + t18008 * (t17651 + pkin(3) * (t17975 + t18445))) * t19351 - ((-t18003 * t19082 + t19079) * t18770 + (t19267 + (-t18318 + t18748) * t18925 - (t18036 * t18453 + t18612) * t19100 + t18209) * t19351) / ((t17288 - t19249) * t18035 + t18636) * t19339 + t16963 * t19507 + t16981 * t19306;
t18496 = t19339 * t19351;
t18120 = t16711 * t18925 + 0.4e1 * (t17997 - 0.1e1 / 0.2e1) * t18496;
t18096 = t17017 * t18120;
t17370 = t17404 * t18008;
t19103 = t18002 * t18036;
t17077 = 0.1e1 / ((t17370 + t18004 * (pkin(3) * t18738 + t17493 * t18036)) * t18035 + (t17534 * t19103 + t17645) * t19404 + t18961);
t17512 = t17691 * t18036 + t17897 * t18030;
t17788 = t18552 - t19399;
t17783 = pkin(3) * t18036 + t18007 * t18870;
t19226 = t17783 * t18008;
t19241 = (-t17691 * t18030 + t17897 * t18036) * t18008;
t17170 = (t17715 * t19226 - t17721 * t17788) * t18035 + t17512 * t17721 + t17715 * t19241;
t19549 = t17077 * t17170;
t19561 = t16825 * t19549 + t17110 * t18096;
t18060 = koppelP(2,2);
t18066 = koppelP(2,1);
t18982 = t18042 * t18066;
t18988 = t18042 * t18060;
t18054 = koppelP(2,3);
t18994 = t18042 * t18054;
t19001 = t18041 * t18066;
t19142 = t17982 * t18054;
t19152 = t17981 * t18066;
t17186 = t18044 + ((t17982 * t18982 + t18060 * t18579) * t17981 + (-t17978 * t19001 + t18994) * t17979 - t17978 * (t17982 * t18988 + t18043 * t18066)) * t17980 + (t17873 * t19152 - t18043 * t19142 - t18060 * t18380) * t17983;
t18032 = sin(qJ(2,2));
t18038 = cos(qJ(2,2));
t19051 = t18008 * t18038;
t19136 = t17982 * t18060;
t19471 = t17978 * (t17979 * t18988 - t17982 * t19001) - (t17979 * t18982 + t18041 * t19136) * t17981 + t17982 * t18994 + t18045;
t17007 = (t17186 * t19051 - t18032 * t19471) * t18007 - t17186 * t19100;
t17048 = (t17186 * t18032 + t19051 * t19471) * t18007 - t19471 * t19100;
t18015 = legFrame(2,3);
t17954 = sin(t18015);
t17960 = cos(t18015);
t16898 = (t17007 * t18001 + t17048 * t18005) * t17960 + t17954 * (t17007 * t18005 - t17048 * t18001);
t19056 = t18008 * t18032;
t17135 = t17186 * t18038 - t19056 * t19471;
t17139 = t17186 * t19056 + t18038 * t19471;
t16946 = (t17135 * t18005 - t17139 * t18001) * t17960 - t17954 * (t17135 * t18001 + t17139 * t18005);
t18031 = sin(qJ(3,2));
t18037 = cos(qJ(3,2));
t16868 = (pkin(3) * t16898 - t16946 * t17948) * t18037 + t18031 * (pkin(3) * t16946 + t16898 * t17948);
t19093 = t18003 * t18032;
t17930 = pkin(2) * t19093;
t17332 = t17762 + (t18038 * t18864 + t17930) * t18004;
t19068 = t18007 * t18038;
t18662 = t18003 * t19068;
t17621 = t18004 * t18662 - t18592;
t17703 = t18032 * t18717;
t17810 = t18032 * t18383;
t17998 = t18037 ^ 2;
t18389 = t18032 * t18564;
t18299 = t18004 * t18389;
t17072 = (t17621 * t18867 + t17703) * t17998 + ((t17621 * t17903 + t17810) * t18031 - t18617 + pkin(3) * t17332) * t18037 + (t17332 * t17948 + t17945) * t18031 + pkin(9) * (t17621 * t19422 - t18299);
t16856 = t16868 ^ 2 / t17072 ^ 2;
t19443 = 0.2e1 * t17998 - 0.1e1;
t16826 = t19443 * t16856;
t17716 = t17954 * t18005 + t17960 * t18001;
t17722 = -t17954 * t18001 + t17960 * t18005;
t17438 = -t17716 * t19056 + t17722 * t18038;
t18233 = (t17716 * t19051 + t17722 * t18032) * t18007 - t17716 * t19100;
t17113 = (pkin(3) * t18233 - t17438 * t17948) * t18037 + t18031 * (pkin(3) * t17438 + t18233 * t17948);
t17308 = (t18038 * t18298 + t17703 + t18942) * t17998;
t19071 = t18007 * t18031;
t18665 = t18003 * t19071;
t17702 = t17903 * t18665;
t17638 = t18038 * t17702;
t19194 = t17935 * t18038;
t17710 = t17930 - t19194;
t18698 = t17987 * t19194;
t18398 = t17710 + t18698;
t18541 = pkin(3) * t18662;
t17018 = 0.1e1 / (t17308 + ((t17810 - t18396) * t18031 + t18381) * t18037 + t18949 * t18031 + t18217 + ((t18398 * pkin(3) + t17638) * t18037 + (-t18389 + (t18031 * t18398 + t18541) * t18002) * pkin(9)) * t18004);
t19350 = t16868 / t17072;
t18782 = t18003 * t19350;
t18493 = t17935 * t18782;
t16850 = t18493 * t17948;
t17822 = t17978 * t18060 - t19152;
t19182 = t17979 * t18054;
t17589 = t17822 * t17982 - t19182;
t17828 = t17978 * t18066 + t17981 * t18060;
t19176 = t17980 * t17828;
t18363 = t17822 * t17979 + t19142;
t17386 = t17983 * t18363 + t19176;
t19254 = t17386 * t18043;
t17214 = -(t17822 * t17983 + t17979 * t19176) * t18041 - t17589 * t19172 - t19254;
t19465 = t17828 * t17983 - t17980 * t18363;
t19260 = t19465 * t18043;
t17215 = -(-t17822 * t17980 + t17828 * t19187) * t18041 - t17589 * t19134 - t19260;
t16964 = (t17386 * t17619 - t17618 * t19465) * t18041 + ((-t17215 - t19260) * t17983 + (-t17214 - t19254) * t17980) * t18042 + (-t17214 * t17983 + t17215 * t17980) * t19149;
t17365 = t17828 * t19149 - t18042 * t18363;
t17568 = -t17978 * t19136 + t17982 * t19152 + t19182;
t16982 = t17215 * t18043 + (-t17365 * t17980 + t17568 * t19133) * t18042 + (t17215 * t17979 + t17568 * t17618 + (-t17365 * t17983 - t17386 * t18042) * t17982) * t18041;
t18951 = pkin(3) * t18698 + t17638;
t19107 = t18002 * t18031;
t17925 = pkin(9) * t19107;
t17898 = 0.2e1 * t17925 + pkin(2);
t18737 = t17898 * t19093;
t19477 = t18737 - t19194;
t17289 = (pkin(3) * t19477 + t18951) * t18004;
t18675 = t18002 * t19068;
t18551 = pkin(9) * t18675;
t18436 = pkin(3) * t18551;
t19017 = t18032 * t17903;
t18747 = (t18436 - t19017 / 0.2e1) * t19100;
t17341 = (t17684 - 0.2e1 * t18747) * t17998;
t17652 = t18031 * t18394;
t17841 = pkin(2) * t19107 + t18866;
t17976 = pkin(2) * t18031;
t17910 = pkin(2) * t17925;
t18128 = ((-t17904 + t17910) * t18007 - t18031 * t18904) * t19350;
t18448 = t18979 * t19350;
t19018 = t18031 * t18038;
t18455 = t19018 * t19206;
t18461 = t18032 * t18703;
t19106 = t18002 * t18032;
t18869 = pkin(9) * t19106;
t18611 = pkin(3) * t18869;
t18536 = 0.2e1 * t18611;
t18559 = t18038 * t18877;
t17144 = t17186 * t18005 - t18001 * t19471;
t17150 = t17186 * t18001 + t19471 * t18005;
t17692 = pkin(3) * t19071 - t19205;
t17562 = t18037 * t18874 - t17692;
t17899 = t17925 + pkin(2);
t19415 = pkin(3) * t18037;
t17853 = t17899 + t19415;
t17389 = -t17562 * t18038 + t17853 * t18032;
t18375 = t18008 * (t17562 * t18032 + t18038 * t17853);
t16940 = -(t17144 * t17954 + t17150 * t17960) * t18375 - (t17144 * t17960 - t17150 * t17954) * t17389;
t19408 = pkin(9) * t17841;
t17485 = t17898 * t19415 + t17903 * t17998 + t19408;
t17401 = t17485 * t19093;
t17406 = -t18031 * t18865 - t18940;
t17494 = t17702 + t18631;
t17535 = t18031 * t18864 + t17913;
t17707 = t17998 * t18384;
t17813 = t17998 * t18382;
t17886 = t17976 + t17948;
t18287 = pkin(3) * t17886 + t17652 - t18616;
t17120 = (t17406 * t18037 + t17707 + t18287) * t18008 + ((t17494 * t18037 + t17535 * t17948 + t17813) * t18038 + t17401) * t18004;
t17106 = 0.1e1 / t17120;
t19338 = t16940 * t17106;
t18567 = t19338 * t17948;
t18912 = pkin(3) * t19350;
t18629 = pkin(2) * t18912;
t17646 = t17841 * t19093;
t18944 = t17987 * t18455 + t18002 * t18541;
t17464 = t18287 * t18008;
t18960 = t17341 + t17464;
t18635 = (t17646 - t18455 + t18944) * t19404 + t18960;
t18644 = t18007 * t19338;
t18650 = t18007 * t19350;
t18706 = t17903 * t19068;
t18767 = t18003 * t19338;
t18768 = t17904 * t19338;
t18783 = t17903 * t19350;
t19398 = t18032 * pkin(3);
t18891 = t18007 * t19398;
t18906 = t17898 * t19398;
t19019 = t18031 * t18037;
t18924 = 0.2e1 * t19019;
t19081 = t18004 * t18038;
t17861 = t18031 * t17903;
t18725 = t17987 * t17861;
t19248 = (-t17861 + t18725 + t18940) * t18008;
t19266 = (-t18466 + (t18536 + t18706) * t19100) * t17998;
t19302 = t17018 * t17113;
t17439 = t17716 * t18038 + t17722 * t19056;
t17445 = -t17716 * t18032 + t17722 * t19051;
t17577 = t17722 * t18557;
t18587 = (-pkin(3) * t17439 + t17445 * t18874 - t17577) * t18031 + (t17439 * t17948 + (t17445 * t18007 - t17722 * t19100) * pkin(3)) * t18037;
t19506 = t17018 * t18587;
t16712 = -((((t17903 * t18038 * t19338 + t18448 * t19398) * t18007 + t18536 * t19338 + t18038 * t18783) * t19100 - t18466 * t19338) * t17998 + (((t18038 * t18629 + ((-t18650 - t19338) * t19017 + (t18644 + t19350) * t18038 * t18609) * t18031) * t18003 - t18461 * t18912) * t18004 - t18008 * (t16850 + pkin(3) * (t19448 * t18031 * t18567 + pkin(2) * t18650))) * t18037 + ((-pkin(3) * t19106 - t18007 * t18559) * t18767 + (-t18003 * t18559 + ((pkin(2) * t19018 - t18891) * t18003 - t18031 * t18461) * t18002) * t19350) * t19404 - (t18210 * t19338 + t18128) * t18008) / (t17341 + (((t18031 * t18706 + t18906) * t18003 + t18038 * t17746) * t18004 - t19248) * t18037 + ((pkin(3) * t18675 + t17841 * t18032) * t18003 + t18455 * t19191) * t19404 + t18008 * (t17652 + pkin(3) * (t17976 + t18445))) * t19350 - ((-t18003 * t19081 + t19079) * t18768 + (t19266 + (-t18318 + t18747) * t18924 - (t18038 * t18453 + t18611) * t19100 + t18209) * t19350) / ((t17289 - t19248) * t18037 + t18635) * t19338 + t16964 * t19506 + t16982 * t19302;
t18494 = t19338 * t19350;
t18118 = t16712 * t18924 + 0.4e1 * (t17998 - 0.1e1 / 0.2e1) * t18494;
t18094 = t17018 * t18118;
t17371 = t17406 * t18008;
t19102 = t18002 * t18038;
t17078 = 0.1e1 / ((t17371 + t18004 * (pkin(3) * t18737 + t17494 * t18038)) * t18037 + (t17535 * t19102 + t17646) * t19404 + t18960);
t17514 = t17692 * t18038 + t17899 * t18032;
t17790 = t18551 - t19398;
t17785 = pkin(3) * t18038 + t18007 * t18869;
t19225 = t17785 * t18008;
t19240 = (-t17692 * t18032 + t17899 * t18038) * t18008;
t17172 = (t17716 * t19225 - t17722 * t17790) * t18037 + t17514 * t17722 + t17716 * t19240;
t19548 = t17078 * t17172;
t19560 = t16826 * t19548 + t17113 * t18094;
t18061 = koppelP(1,2);
t18067 = koppelP(1,1);
t18981 = t18042 * t18067;
t18987 = t18042 * t18061;
t18055 = koppelP(1,3);
t18993 = t18042 * t18055;
t19000 = t18041 * t18067;
t19141 = t17982 * t18055;
t19151 = t17981 * t18067;
t17187 = t18044 + ((t17982 * t18981 + t18061 * t18579) * t17981 + (-t17978 * t19000 + t18993) * t17979 - t17978 * (t17982 * t18987 + t18043 * t18067)) * t17980 + (t17873 * t19151 - t18043 * t19141 - t18061 * t18380) * t17983;
t18034 = sin(qJ(2,1));
t18040 = cos(qJ(2,1));
t19049 = t18008 * t18040;
t19135 = t17982 * t18061;
t19472 = t17978 * (t17979 * t18987 - t17982 * t19000) - (t17979 * t18981 + t18041 * t19135) * t17981 + t17982 * t18993 + t18045;
t17005 = (t17187 * t19049 - t18034 * t19472) * t18007 - t17187 * t19100;
t17049 = (t17187 * t18034 + t19049 * t19472) * t18007 - t19472 * t19100;
t18016 = legFrame(1,3);
t17955 = sin(t18016);
t17961 = cos(t18016);
t16899 = (t17005 * t18001 + t17049 * t18005) * t17961 + t17955 * (t17005 * t18005 - t17049 * t18001);
t19055 = t18008 * t18034;
t17136 = t17187 * t19055 + t18040 * t19472;
t17137 = t17187 * t18040 - t19055 * t19472;
t16947 = (-t17136 * t18001 + t17137 * t18005) * t17961 - t17955 * (t17136 * t18005 + t17137 * t18001);
t18033 = sin(qJ(3,1));
t18039 = cos(qJ(3,1));
t16869 = (pkin(3) * t16899 - t16947 * t17948) * t18039 + t18033 * (pkin(3) * t16947 + t16899 * t17948);
t19092 = t18003 * t18034;
t17931 = pkin(2) * t19092;
t17333 = t17762 + (t18040 * t18864 + t17931) * t18004;
t19067 = t18007 * t18040;
t18661 = t18003 * t19067;
t17622 = t18004 * t18661 - t18592;
t17705 = t18034 * t18717;
t17811 = t18034 * t18383;
t17999 = t18039 ^ 2;
t18388 = t18034 * t18564;
t18303 = t18004 * t18388;
t17073 = (t17622 * t18867 + t17705) * t17999 + ((t17622 * t17903 + t17811) * t18033 - t18617 + pkin(3) * t17333) * t18039 + (t17333 * t17948 + t17945) * t18033 + pkin(9) * (t17622 * t19422 - t18303);
t16857 = t16869 ^ 2 / t17073 ^ 2;
t19442 = 0.2e1 * t17999 - 0.1e1;
t16827 = t19442 * t16857;
t17717 = t17955 * t18005 + t17961 * t18001;
t17723 = -t17955 * t18001 + t17961 * t18005;
t17440 = -t17717 * t19055 + t17723 * t18040;
t18232 = (t17717 * t19049 + t17723 * t18034) * t18007 - t17717 * t19100;
t17116 = (pkin(3) * t18232 - t17440 * t17948) * t18039 + t18033 * (pkin(3) * t17440 + t18232 * t17948);
t17309 = (t18040 * t18298 + t17705 + t18942) * t17999;
t19070 = t18007 * t18033;
t18664 = t18003 * t19070;
t17704 = t17903 * t18664;
t17639 = t18040 * t17704;
t19193 = t17935 * t18040;
t17711 = t17931 - t19193;
t18697 = t17987 * t19193;
t18397 = t17711 + t18697;
t18539 = pkin(3) * t18661;
t17019 = 0.1e1 / (t17309 + ((t17811 - t18396) * t18033 + t18381) * t18039 + t18949 * t18033 + t18217 + ((t18397 * pkin(3) + t17639) * t18039 + (-t18388 + (t18033 * t18397 + t18539) * t18002) * pkin(9)) * t18004);
t19349 = t16869 / t17073;
t18780 = t18003 * t19349;
t18491 = t17935 * t18780;
t16851 = t18491 * t17948;
t17823 = t17978 * t18061 - t19151;
t19181 = t17979 * t18055;
t17590 = t17823 * t17982 - t19181;
t17829 = t17978 * t18067 + t17981 * t18061;
t19175 = t17980 * t17829;
t18362 = t17823 * t17979 + t19141;
t17387 = t17983 * t18362 + t19175;
t19253 = t17387 * t18043;
t17216 = -(t17823 * t17983 + t17979 * t19175) * t18041 - t17590 * t19172 - t19253;
t19466 = t17829 * t17983 - t17980 * t18362;
t19259 = t19466 * t18043;
t17217 = -(-t17823 * t17980 + t17829 * t19187) * t18041 - t17590 * t19134 - t19259;
t16965 = (t17387 * t17619 - t17618 * t19466) * t18041 + ((-t17217 - t19259) * t17983 + (-t17216 - t19253) * t17980) * t18042 + (-t17216 * t17983 + t17217 * t17980) * t19149;
t17366 = t17829 * t19149 - t18042 * t18362;
t17569 = -t17978 * t19135 + t17982 * t19151 + t19181;
t16983 = t17217 * t18043 + (-t17366 * t17980 + t17569 * t19133) * t18042 + (t17217 * t17979 + t17569 * t17618 + (-t17366 * t17983 - t17387 * t18042) * t17982) * t18041;
t18950 = pkin(3) * t18697 + t17639;
t19105 = t18002 * t18033;
t17927 = pkin(9) * t19105;
t17900 = 0.2e1 * t17927 + pkin(2);
t18736 = t17900 * t19092;
t19478 = t18736 - t19193;
t17290 = (pkin(3) * t19478 + t18950) * t18004;
t18674 = t18002 * t19067;
t18550 = pkin(9) * t18674;
t18435 = pkin(3) * t18550;
t19011 = t18034 * t17903;
t18746 = (t18435 - t19011 / 0.2e1) * t19100;
t17342 = (t17684 - 0.2e1 * t18746) * t17999;
t17653 = t18033 * t18394;
t17842 = pkin(2) * t19105 + t18866;
t17977 = pkin(2) * t18033;
t17911 = pkin(2) * t17927;
t18127 = ((-t17904 + t17911) * t18007 - t18033 * t18904) * t19349;
t18447 = t18979 * t19349;
t19012 = t18033 * t18040;
t18454 = t19012 * t19206;
t18460 = t18034 * t18703;
t19104 = t18002 * t18034;
t18868 = pkin(9) * t19104;
t18610 = pkin(3) * t18868;
t18535 = 0.2e1 * t18610;
t18558 = t18040 * t18877;
t17145 = t17187 * t18005 - t18001 * t19472;
t17151 = t18001 * t17187 + t19472 * t18005;
t17693 = pkin(3) * t19070 - t19205;
t17563 = t18039 * t18874 - t17693;
t17901 = t17927 + pkin(2);
t19414 = pkin(3) * t18039;
t17854 = t17901 + t19414;
t17390 = -t17563 * t18040 + t17854 * t18034;
t18374 = t18008 * (t17563 * t18034 + t18040 * t17854);
t16941 = -(t17145 * t17955 + t17151 * t17961) * t18374 - (t17145 * t17961 - t17151 * t17955) * t17390;
t19407 = pkin(9) * t17842;
t17486 = t17900 * t19414 + t17903 * t17999 + t19407;
t17402 = t17486 * t19092;
t17408 = -t18033 * t18865 - t18940;
t17495 = t17704 + t18631;
t17536 = t18033 * t18864 + t17913;
t17708 = t17999 * t18384;
t17814 = t17999 * t18382;
t17887 = t17977 + t17948;
t18286 = pkin(3) * t17887 + t17653 - t18616;
t17121 = (t17408 * t18039 + t17708 + t18286) * t18008 + ((t17495 * t18039 + t17536 * t17948 + t17814) * t18040 + t17402) * t18004;
t17108 = 0.1e1 / t17121;
t19337 = t16941 * t17108;
t18566 = t19337 * t17948;
t18911 = pkin(3) * t19349;
t18628 = pkin(2) * t18911;
t17647 = t17842 * t19092;
t18943 = t17987 * t18454 + t18002 * t18539;
t17465 = t18286 * t18008;
t18959 = t17342 + t17465;
t18634 = (t17647 - t18454 + t18943) * t19404 + t18959;
t18643 = t18007 * t19337;
t18649 = t18007 * t19349;
t18705 = t17903 * t19067;
t18765 = t18003 * t19337;
t18766 = t17904 * t19337;
t18781 = t17903 * t19349;
t19397 = t18034 * pkin(3);
t18890 = t18007 * t19397;
t18905 = t17900 * t19397;
t19013 = t18033 * t18039;
t18923 = 0.2e1 * t19013;
t19080 = t18004 * t18040;
t17862 = t18033 * t17903;
t18724 = t17987 * t17862;
t19247 = (-t17862 + t18724 + t18940) * t18008;
t19265 = (-t18466 + (t18535 + t18705) * t19100) * t17999;
t19298 = t17019 * t17116;
t17441 = t17717 * t18040 + t17723 * t19055;
t17447 = -t17717 * t18034 + t17723 * t19049;
t17578 = t17723 * t18557;
t18586 = (-pkin(3) * t17441 + t17447 * t18874 - t17578) * t18033 + (t17441 * t17948 + (t17447 * t18007 - t17723 * t19100) * pkin(3)) * t18039;
t19505 = t17019 * t18586;
t16713 = -((((t17903 * t18040 * t19337 + t18447 * t19397) * t18007 + t18535 * t19337 + t18040 * t18781) * t19100 - t18466 * t19337) * t17999 + (((t18040 * t18628 + ((-t18649 - t19337) * t19011 + (t18643 + t19349) * t18040 * t18609) * t18033) * t18003 - t18460 * t18911) * t18004 - t18008 * (t16851 + pkin(3) * (t19448 * t18033 * t18566 + pkin(2) * t18649))) * t18039 + ((-pkin(3) * t19104 - t18007 * t18558) * t18765 + (-t18003 * t18558 + ((pkin(2) * t19012 - t18890) * t18003 - t18033 * t18460) * t18002) * t19349) * t19404 - (t18210 * t19337 + t18127) * t18008) / (t17342 + (((t18033 * t18705 + t18905) * t18003 + t18040 * t17746) * t18004 - t19247) * t18039 + ((pkin(3) * t18674 + t17842 * t18034) * t18003 + t18454 * t19191) * t19404 + t18008 * (t17653 + pkin(3) * (t17977 + t18445))) * t19349 - ((-t18003 * t19080 + t19079) * t18766 + (t19265 + (-t18318 + t18746) * t18923 - (t18040 * t18453 + t18610) * t19100 + t18209) * t19349) / ((t17290 - t19247) * t18039 + t18634) * t19337 + t16965 * t19505 + t16983 * t19298;
t18492 = t19337 * t19349;
t18116 = t16713 * t18923 + 0.4e1 * (t17999 - 0.1e1 / 0.2e1) * t18492;
t18092 = t17019 * t18116;
t17372 = t17408 * t18008;
t19101 = t18002 * t18040;
t17079 = 0.1e1 / ((t17372 + t18004 * (pkin(3) * t18736 + t17495 * t18040)) * t18039 + (t17536 * t19101 + t17647) * t19404 + t18959);
t17516 = t17693 * t18040 + t17901 * t18034;
t17791 = t18550 - t19397;
t17786 = pkin(3) * t18040 + t18007 * t18868;
t19224 = t17786 * t18008;
t19239 = (-t17693 * t18034 + t17901 * t18040) * t18008;
t17174 = (t17717 * t19224 - t17723 * t17791) * t18039 + t17516 * t17723 + t17717 * t19239;
t19547 = t17079 * t17174;
t19559 = t16827 * t19547 + t17116 * t18092;
t17164 = (t17712 * t17771 + t17718 * t19232) * t18023 - t17505 * t17712 + t17718 * t19244;
t19292 = t17074 * t17164;
t19558 = t16822 * t19292;
t17166 = (t17713 * t17773 + t17719 * t19231) * t18025 - t17507 * t17713 + t17719 * t19243;
t19289 = t17075 * t17166;
t19557 = t16823 * t19289;
t17168 = (t17714 * t17775 + t17720 * t19230) * t18027 - t17509 * t17714 + t17720 * t19242;
t19286 = t17076 * t17168;
t19556 = t16824 * t19286;
t17176 = (t17715 * t17788 + t17721 * t19226) * t18035 - t17512 * t17715 + t17721 * t19241;
t19283 = t17077 * t17176;
t19555 = t16825 * t19283;
t17178 = (t17716 * t17790 + t17722 * t19225) * t18037 - t17514 * t17716 + t17722 * t19240;
t19280 = t17078 * t17178;
t19554 = t16826 * t19280;
t17180 = (t17717 * t17791 + t17723 * t19224) * t18039 - t17516 * t17717 + t17723 * t19239;
t19277 = t17079 * t17180;
t19553 = t16827 * t19277;
t18999 = t18042 * t18043;
t18681 = t17980 * t18999;
t17880 = pkin(2) * t17903;
t18596 = t19448 * t17948;
t17466 = t19099 * t17880 - t18596 * t19423;
t17871 = t17935 * t19420;
t18660 = t18004 * t19045;
t17549 = t17903 * t18660 + t17871;
t17498 = t17549 * t19099;
t17863 = pkin(2) * t18877;
t17579 = t17904 * t19118 + t17863;
t18632 = -t18980 / 0.2e1 + t18068 / 0.2e1 + t18070 / 0.2e1;
t17663 = t17906 + t18632;
t19479 = (-0.2e1 * t19403 - pkin(8)) * pkin(8);
t18633 = pkin(2) ^ 2 - t19479;
t18146 = -(t18070 + (t17985 - 0.2e1) * t18068 + t19479) * t17987 + 0.2e1 * t18980 - 0.3e1 * t18068 - t18633;
t17806 = t18008 * t17857;
t18901 = pkin(3) * t19088;
t18548 = t17935 * t18901;
t17517 = (-t17806 + t18548) * t17987;
t18297 = t17517 + t17806 - t18617;
t17558 = (t17935 * t18660 - t19420) * t18876;
t19204 = t17935 * t18017;
t17628 = t18008 * t19204 + t18901;
t18310 = t17628 * t18556 + t17945 * t18017 + t17301 + t17558;
t18317 = t18002 * (-pkin(8) * pkin(9) - t18006 * t18068);
t17870 = t18068 + t18633;
t18704 = (pkin(3) + t17935) * (-pkin(3) + t17935) * t17987;
t18395 = -t17870 + t18704;
t18433 = t19449 * pkin(3) * t19206;
t17986 = t18007 * t17987;
t18938 = t17986 - t18007;
t18533 = 0.4e1 * t18938;
t18534 = 0.2e1 * t18938;
t18648 = t18007 * t19345;
t18578 = pkin(2) * t18648;
t18594 = t19449 * (0.3e1 * t18070 + t18593);
t18595 = 0.3e1 * (t18070 / 0.3e1 + t18593) * t19191;
t18642 = -0.2e1 * t17913;
t18735 = t17935 * t17857;
t19450 = 0.2e1 * t18007;
t18939 = -0.2e1 * t17986 + t19450;
t18941 = (-0.2e1 * t19406 + t19452) * pkin(2);
t19148 = t17982 * t18042;
t19173 = t17980 * t17982;
t17730 = t18001 * t19062 + t18005 * t18018;
t17733 = -t18001 * t18018 + t18005 * t19062;
t17424 = t17730 * t17956 + t17733 * t17950;
t17736 = t18001 * t18024 + t18005 * t19066;
t17739 = -t18001 * t19066 + t18005 * t18024;
t17433 = -t17736 * t17950 + t17739 * t17956;
t18716 = t18004 * t17857;
t18158 = -t17424 * t19423 - t17712 * t18716;
t19421 = pkin(3) * t18004;
t18937 = pkin(2) * t19421;
t18626 = t18017 * t18937;
t18673 = t18004 * t19099;
t19207 = t17903 * t18003;
t18723 = t17991 * t19207;
t18903 = t17935 * t19421;
t19435 = pkin(2) * t18023;
t18922 = t18004 * t19435;
t19214 = t17831 * t18003;
t19429 = pkin(3) * t17890;
t19492 = t19099 * t19447;
t18693 = t17991 * t19191;
t19498 = t18004 * (0.2e1 * t18693 - t19449);
t16951 = t17433 * t18723 + (((-t17424 * t17857 + t17712 * t18903) * t18007 + t17433 * t19429) * t18003 + t18158 * t17987 - t18158) * t18023 + t17712 * t18626 + (t17433 * t19214 + (-t17712 * t18922 + (-t17424 * t17987 + t17712 * t18673 + t17424) * t19204 + (t17424 * t19492 + t17712 * t19498) * pkin(3)) * t18002) * pkin(9);
t18565 = t17935 * t18875;
t19091 = t18004 * t18018;
t19405 = pkin(9) * t18003;
t17029 = 0.1e1 / (t17334 + ((t17549 * t18007 + t18004 * t18910) * t18003 - t18548 + t18297) * t18023 + (t17628 * t19119 + t17831 * t19091) * t19405 + t17558 + (-t18024 * t18565 + t17945) * t18017 + t17905);
t19333 = t16951 * t17029;
t17427 = -t17730 * t17950 + t17733 * t17956;
t17430 = t17736 * t17956 + t17739 * t17950;
t18155 = t17427 * t19423 + t17718 * t18716;
t16948 = t17430 * t18723 + (((t17427 * t17857 - t17718 * t18903) * t18007 + t17430 * t19429) * t18003 + t18155 * t17987 - t18155) * t18023 - t17718 * t18626 + (t17430 * t19214 + (t17718 * t18922 + (t17427 * t17987 - t17718 * t18673 - t17427) * t19204 + (-t17427 * t19492 - t17718 * t19498) * pkin(3)) * t18002) * pkin(9);
t19336 = t16948 * t17029;
t19451 = -0.2e1 * t17880;
t19455 = t16960 * t19333 + t16978 * t19336 + t17206 * t18043 + t17361 * t19134 + (t17206 * t17979 - t17361 * t19173 - t17564 * t17619 + t19148 * t19461) * t18041 + (-(t17837 * t17904 * t18777 + (-t17466 * t17991 + (t17663 * t18642 - t17935 * t18729 + t18735) * t18023 + (t17579 * t19099 - t18433) * pkin(9)) * t19354) * t19345 - ((-t18534 * t19354 - t19449 * t19345) * t18023 * t18735 + ((-t17903 * t18578 + t19354 * t19451) * t17991 + (-0.2e1 * t17663 * t18648 + (t17991 * t18595 - 0.4e1 * t17906 + t18146) * t19354) * t19419) * t18003 + ((t17579 * t18648 - t18941 * t19354) * t18003 + ((t17991 * t18594 + t18395) * t18017 * t18793 + ((t19448 * t17991 - t19449) * t19345 + (t17991 * t18533 + t18939) * t19354) * t19423) * t18002) * pkin(9)) * t19354) / ((t17498 + t18297) * t18023 + t17905 + (pkin(9) * t17640 + t18317 * t19045 + t19473 * t19419) * t18004 + t18310);
t16717 = t17564 * t18681 + t19455;
t16714 = t16717 * t19091;
t19413 = pkin(8) * t18003;
t18889 = t16708 * t19413;
t16673 = t16714 + t18889;
t18837 = t16717 * t19088;
t19098 = t18003 * t18008;
t19441 = pkin(2) * t16708;
t18261 = (t18837 + t19441) * t18007 + t16717 * t19098;
t18413 = -t18023 * t16673 + (-pkin(8) * t18672 + t19435) * t16852 - t18017 * t18261;
t18272 = t17074 * t18413;
t19546 = t17164 * t18272;
t18883 = t18023 * t19413;
t18414 = -t18017 * t16673 + (t18007 * t18883 + t17969) * t16852 + t18023 * t18261;
t18273 = t17074 * t18414;
t19545 = t17164 * t18273;
t19390 = t16708 * t17074;
t18855 = t18023 * t19390;
t19544 = t17164 * t18855;
t18856 = t18017 * t19390;
t19543 = t17164 * t18856;
t18659 = t18004 * t19039;
t17550 = t17903 * t18659 + t17871;
t17499 = t17550 * t19099;
t17580 = t17904 * t19116 + t17863;
t17664 = t17907 + t18632;
t17807 = t18008 * t17858;
t18900 = pkin(3) * t19087;
t18546 = t17935 * t18900;
t17518 = (-t17807 + t18546) * t17987;
t18296 = t17518 + t17807 - t18617;
t17559 = (t17935 * t18659 - t19420) * t18876;
t19203 = t17935 * t18019;
t17629 = t18008 * t19203 + t18900;
t18309 = t17629 * t18556 + t17945 * t18019 + t17302 + t17559;
t18647 = t18007 * t19344;
t18577 = pkin(2) * t18647;
t18734 = t17935 * t17858;
t17731 = t18001 * t19060 + t18005 * t18020;
t17734 = -t18001 * t18020 + t18005 * t19060;
t17425 = t17731 * t17957 + t17734 * t17951;
t17737 = t18001 * t18026 + t18005 * t19065;
t17740 = -t18001 * t19065 + t18005 * t18026;
t17434 = -t17737 * t17951 + t17740 * t17957;
t18715 = t18004 * t17858;
t18157 = -t17425 * t19423 - t17713 * t18715;
t18625 = t18019 * t18937;
t18722 = t17992 * t19207;
t19434 = pkin(2) * t18025;
t18921 = t18004 * t19434;
t19213 = t17832 * t18003;
t19428 = pkin(3) * t17892;
t19493 = t19099 * t19446;
t18692 = t17992 * t19191;
t19499 = t18004 * (0.2e1 * t18692 - t19449);
t16952 = t17434 * t18722 + (((-t17425 * t17858 + t17713 * t18903) * t18007 + t17434 * t19428) * t18003 + t18157 * t17987 - t18157) * t18025 + t17713 * t18625 + (t17434 * t19213 + (-t17713 * t18921 + (-t17425 * t17987 + t17713 * t18673 + t17425) * t19203 + (t17425 * t19493 + t17713 * t19499) * pkin(3)) * t18002) * pkin(9);
t19090 = t18004 * t18020;
t17030 = 0.1e1 / (t17335 + ((t17550 * t18007 + t18004 * t18909) * t18003 - t18546 + t18296) * t18025 + (t17629 * t19119 + t17832 * t19090) * t19405 + t17559 + (-t18026 * t18565 + t17945) * t18019 + t17905);
t19332 = t16952 * t17030;
t17428 = -t17731 * t17951 + t17734 * t17957;
t17431 = t17737 * t17957 + t17740 * t17951;
t18154 = t17428 * t19423 + t17719 * t18715;
t16949 = t17431 * t18722 + (((t17428 * t17858 - t17719 * t18903) * t18007 + t17431 * t19428) * t18003 + t18154 * t17987 - t18154) * t18025 - t17719 * t18625 + (t17431 * t19213 + (t17719 * t18921 + (t17428 * t17987 - t17719 * t18673 - t17428) * t19203 + (-t17428 * t19493 - t17719 * t19499) * pkin(3)) * t18002) * pkin(9);
t19335 = t16949 * t17030;
t19456 = t16961 * t19332 + t16979 * t19335 + t17208 * t18043 + t17362 * t19134 + (t17208 * t17979 - t17362 * t19173 - t17565 * t17619 + t19148 * t19462) * t18041 + (-(t17838 * t17904 * t18774 + (-t17466 * t17992 + (t17664 * t18642 - t17935 * t18728 + t18734) * t18025 + (t17580 * t19099 - t18433) * pkin(9)) * t19353) * t19344 - ((-t18534 * t19353 - t19449 * t19344) * t18025 * t18734 + ((-t17903 * t18577 + t19353 * t19451) * t17992 + (-0.2e1 * t17664 * t18647 + (t17992 * t18595 - 0.4e1 * t17907 + t18146) * t19353) * t19418) * t18003 + ((t17580 * t18647 - t18941 * t19353) * t18003 + ((t17992 * t18594 + t18395) * t18019 * t18791 + ((t19448 * t17992 - t19449) * t19344 + (t17992 * t18533 + t18939) * t19353) * t19423) * t18002) * pkin(9)) * t19353) / ((t17499 + t18296) * t18025 + t17905 + (pkin(9) * t17641 + t18317 * t19039 + t19474 * t19418) * t18004 + t18309);
t16718 = t17565 * t18681 + t19456;
t16715 = t16718 * t19090;
t18888 = t16709 * t19413;
t16675 = t16715 + t18888;
t18834 = t16718 * t19087;
t19440 = pkin(2) * t16709;
t18260 = (t18834 + t19440) * t18007 + t16718 * t19098;
t18411 = -t18025 * t16675 + (-pkin(8) * t18671 + t19434) * t16853 - t18019 * t18260;
t18270 = t17075 * t18411;
t19542 = t17166 * t18270;
t18882 = t18025 * t19413;
t18412 = -t18019 * t16675 + (t18007 * t18882 + t17970) * t16853 + t18025 * t18260;
t18271 = t17075 * t18412;
t19541 = t17166 * t18271;
t19388 = t16709 * t17075;
t18852 = t18025 * t19388;
t19540 = t17166 * t18852;
t18853 = t18019 * t19388;
t19539 = t17166 * t18853;
t18658 = t18004 * t19033;
t17551 = t17903 * t18658 + t17871;
t17500 = t17551 * t19099;
t17581 = t17904 * t19114 + t17863;
t17665 = t17908 + t18632;
t17808 = t18008 * t17859;
t18899 = pkin(3) * t19086;
t18544 = t17935 * t18899;
t17519 = (-t17808 + t18544) * t17987;
t18295 = t17519 + t17808 - t18617;
t17560 = (t17935 * t18658 - t19420) * t18876;
t19202 = t17935 * t18021;
t17630 = t18008 * t19202 + t18899;
t18308 = t17630 * t18556 + t17945 * t18021 + t17303 + t17560;
t18646 = t18007 * t19343;
t18576 = pkin(2) * t18646;
t18733 = t17935 * t17859;
t17732 = t18001 * t19058 + t18005 * t18022;
t17735 = -t18001 * t18022 + t18005 * t19058;
t17426 = t17732 * t17958 + t17735 * t17952;
t17738 = t18001 * t18028 + t18005 * t19064;
t17741 = -t18001 * t19064 + t18005 * t18028;
t17435 = -t17738 * t17952 + t17741 * t17958;
t18714 = t18004 * t17859;
t18156 = -t17426 * t19423 - t17714 * t18714;
t18624 = t18021 * t18937;
t18721 = t17993 * t19207;
t19433 = pkin(2) * t18027;
t18920 = t18004 * t19433;
t19212 = t17833 * t18003;
t19427 = pkin(3) * t17894;
t19494 = t19099 * t19445;
t18691 = t17993 * t19191;
t19500 = t18004 * (0.2e1 * t18691 - t19449);
t16953 = t17435 * t18721 + (((-t17426 * t17859 + t17714 * t18903) * t18007 + t17435 * t19427) * t18003 + t18156 * t17987 - t18156) * t18027 + t17714 * t18624 + (t17435 * t19212 + (-t17714 * t18920 + (-t17426 * t17987 + t17714 * t18673 + t17426) * t19202 + (t17426 * t19494 + t17714 * t19500) * pkin(3)) * t18002) * pkin(9);
t19089 = t18004 * t18022;
t17031 = 0.1e1 / (t17336 + ((t17551 * t18007 + t18004 * t18908) * t18003 - t18544 + t18295) * t18027 + (t17630 * t19119 + t17833 * t19089) * t19405 + t17560 + (-t18028 * t18565 + t17945) * t18021 + t17905);
t19331 = t16953 * t17031;
t17429 = -t17732 * t17952 + t17735 * t17958;
t17432 = t17738 * t17958 + t17741 * t17952;
t18153 = t17429 * t19423 + t17720 * t18714;
t16950 = t17432 * t18721 + (((t17429 * t17859 - t17720 * t18903) * t18007 + t17432 * t19427) * t18003 + t18153 * t17987 - t18153) * t18027 - t17720 * t18624 + (t17432 * t19212 + (t17720 * t18920 + (t17429 * t17987 - t17720 * t18673 - t17429) * t19202 + (-t17429 * t19494 - t17720 * t19500) * pkin(3)) * t18002) * pkin(9);
t19334 = t16950 * t17031;
t19457 = t16962 * t19331 + t16980 * t19334 + t17210 * t18043 + t17363 * t19134 + (t17210 * t17979 - t17363 * t19173 - t17566 * t17619 + t19148 * t19463) * t18041 + (-(t17839 * t17904 * t18771 + (-t17466 * t17993 + (t17665 * t18642 - t17935 * t18727 + t18733) * t18027 + (t17581 * t19099 - t18433) * pkin(9)) * t19352) * t19343 - ((-t18534 * t19352 - t19449 * t19343) * t18027 * t18733 + ((-t17903 * t18576 + t19352 * t19451) * t17993 + (-0.2e1 * t17665 * t18646 + (t17993 * t18595 - 0.4e1 * t17908 + t18146) * t19352) * t19417) * t18003 + ((t17581 * t18646 - t18941 * t19352) * t18003 + ((t17993 * t18594 + t18395) * t18021 * t18789 + ((t19448 * t17993 - t19449) * t19343 + (t17993 * t18533 + t18939) * t19352) * t19423) * t18002) * pkin(9)) * t19352) / ((t17500 + t18295) * t18027 + t17905 + (pkin(9) * t17642 + t18317 * t19033 + t19475 * t19417) * t18004 + t18308);
t16719 = t17566 * t18681 + t19457;
t16716 = t16719 * t19089;
t18887 = t16710 * t19413;
t16677 = t16716 + t18887;
t18831 = t16719 * t19086;
t19439 = pkin(2) * t16710;
t18259 = (t18831 + t19439) * t18007 + t16719 * t19098;
t18409 = -t18027 * t16677 + (-pkin(8) * t18670 + t19433) * t16854 - t18021 * t18259;
t18268 = t17076 * t18409;
t19538 = t17168 * t18268;
t18881 = t18027 * t19413;
t18410 = -t18021 * t16677 + (t18007 * t18881 + t17971) * t16854 + t18027 * t18259;
t18269 = t17076 * t18410;
t19537 = t17168 * t18269;
t19386 = t16710 * t17076;
t18849 = t18027 * t19386;
t19536 = t17168 * t18849;
t18850 = t18021 * t19386;
t19535 = t17168 * t18850;
t18657 = t18004 * t19024;
t17552 = t17903 * t18657 + t17871;
t17501 = t17552 * t19099;
t17582 = t17904 * t19109 + t17863;
t17666 = t17909 + t18632;
t17815 = t18008 * t17860;
t18898 = pkin(3) * t19082;
t18542 = t17935 * t18898;
t17520 = (-t17815 + t18542) * t17987;
t18294 = t17520 + t17815 - t18617;
t17570 = (t17935 * t18657 - t19420) * t18876;
t19198 = t17935 * t18029;
t17634 = t18008 * t19198 + t18898;
t18307 = t17634 * t18556 + t17945 * t18029 + t17307 + t17570;
t18575 = pkin(2) * t18645;
t18732 = t17935 * t17860;
t17747 = t18001 * t19053 + t18005 * t18030;
t17750 = -t18001 * t18030 + t18005 * t19053;
t17448 = t17747 * t17959 + t17750 * t17953;
t17753 = t18001 * t18036 + t18005 * t19057;
t17756 = -t18001 * t19057 + t18005 * t18036;
t17457 = -t17753 * t17953 + t17756 * t17959;
t18713 = t18004 * t17860;
t18152 = -t17448 * t19423 - t17715 * t18713;
t18623 = t18029 * t18937;
t18720 = t17997 * t19207;
t19432 = pkin(2) * t18035;
t18919 = t18004 * t19432;
t19211 = t17840 * t18003;
t19426 = pkin(3) * t17896;
t19495 = t19099 * t19444;
t18690 = t17997 * t19191;
t19501 = t18004 * (0.2e1 * t18690 - t19449);
t16957 = t17457 * t18720 + (((-t17448 * t17860 + t17715 * t18903) * t18007 + t17457 * t19426) * t18003 + t18152 * t17987 - t18152) * t18035 + t17715 * t18623 + (t17457 * t19211 + (-t17715 * t18919 + (-t17448 * t17987 + t17715 * t18673 + t17448) * t19198 + (t17448 * t19495 + t17715 * t19501) * pkin(3)) * t18002) * pkin(9);
t19085 = t18004 * t18030;
t17035 = 0.1e1 / (t17340 + ((t17552 * t18007 + t18004 * t18907) * t18003 - t18542 + t18294) * t18035 + (t17634 * t19119 + t17840 * t19085) * t19405 + t17570 + (-t18036 * t18565 + t17945) * t18029 + t17905);
t19327 = t16957 * t17035;
t17451 = -t17747 * t17953 + t17750 * t17959;
t17454 = t17753 * t17959 + t17756 * t17953;
t18149 = t17451 * t19423 + t17721 * t18713;
t16954 = t17454 * t18720 + (((t17451 * t17860 - t17721 * t18903) * t18007 + t17454 * t19426) * t18003 + t18149 * t17987 - t18149) * t18035 - t17721 * t18623 + (t17454 * t19211 + (t17721 * t18919 + (t17451 * t17987 - t17721 * t18673 - t17451) * t19198 + (-t17451 * t19495 - t17721 * t19501) * pkin(3)) * t18002) * pkin(9);
t19330 = t16954 * t17035;
t19458 = t16963 * t19327 + t16981 * t19330 + t17212 * t18043 + t17364 * t19134 + (t17212 * t17979 - t17364 * t19173 - t17567 * t17619 + t19148 * t19464) * t18041 + (-(t17852 * t17904 * t18769 + (-t17466 * t17997 + (t17666 * t18642 - t17935 * t18726 + t18732) * t18035 + (t17582 * t19099 - t18433) * pkin(9)) * t19351) * t19339 - ((-t18534 * t19351 - t19449 * t19339) * t18035 * t18732 + ((-t17903 * t18575 + t19351 * t19451) * t17997 + (-0.2e1 * t17666 * t18645 + (t17997 * t18595 - 0.4e1 * t17909 + t18146) * t19351) * t19416) * t18003 + ((t17582 * t18645 - t18941 * t19351) * t18003 + ((t17997 * t18594 + t18395) * t18029 * t18784 + ((t19448 * t17997 - t19449) * t19339 + (t17997 * t18533 + t18939) * t19351) * t19423) * t18002) * pkin(9)) * t19351) / ((t17501 + t18294) * t18035 + t17905 + (pkin(9) * t17645 + t18317 * t19024 + t19476 * t19416) * t18004 + t18307);
t16723 = t17567 * t18681 + t19458;
t16720 = t16723 * t19085;
t18886 = t16711 * t19413;
t16682 = t16720 + t18886;
t18828 = t16723 * t19082;
t19438 = pkin(2) * t16711;
t18258 = (t18828 + t19438) * t18007 + t16723 * t19098;
t18407 = -t18035 * t16682 + (-pkin(8) * t18666 + t19432) * t16855 - t18029 * t18258;
t18266 = t17077 * t18407;
t19534 = t17176 * t18266;
t18880 = t18035 * t19413;
t18408 = -t18029 * t16682 + (t18007 * t18880 + t17975) * t16855 + t18035 * t18258;
t18267 = t17077 * t18408;
t19533 = t17176 * t18267;
t19384 = t16711 * t17077;
t18846 = t18035 * t19384;
t19532 = t17176 * t18846;
t18847 = t18029 * t19384;
t19531 = t17176 * t18847;
t18656 = t18004 * t19018;
t17553 = t17903 * t18656 + t17871;
t17502 = t17553 * t19099;
t17583 = t17904 * t19107 + t17863;
t17667 = t17910 + t18632;
t17816 = t18008 * t17861;
t18897 = pkin(3) * t19081;
t18540 = t17935 * t18897;
t17521 = (-t17816 + t18540) * t17987;
t18293 = t17521 + t17816 - t18617;
t17571 = (t17935 * t18656 - t19420) * t18876;
t19197 = t17935 * t18031;
t17635 = t18008 * t19197 + t18897;
t18306 = t17635 * t18556 + t17945 * t18031 + t17308 + t17571;
t18574 = pkin(2) * t18644;
t18731 = t17935 * t17861;
t17748 = t18001 * t19051 + t18005 * t18032;
t17751 = -t18001 * t18032 + t18005 * t19051;
t17449 = t17748 * t17960 + t17751 * t17954;
t17754 = t18001 * t18038 + t18005 * t19056;
t17757 = -t18001 * t19056 + t18005 * t18038;
t17458 = -t17754 * t17954 + t17757 * t17960;
t18712 = t18004 * t17861;
t18151 = -t17449 * t19423 - t17716 * t18712;
t18622 = t18031 * t18937;
t18719 = t17998 * t19207;
t19431 = pkin(2) * t18037;
t18918 = t18004 * t19431;
t19210 = t17841 * t18003;
t19425 = pkin(3) * t17898;
t19496 = t19099 * t19443;
t18689 = t17998 * t19191;
t19502 = t18004 * (0.2e1 * t18689 - t19449);
t16958 = t17458 * t18719 + (((-t17449 * t17861 + t17716 * t18903) * t18007 + t17458 * t19425) * t18003 + t18151 * t17987 - t18151) * t18037 + t17716 * t18622 + (t17458 * t19210 + (-t17716 * t18918 + (-t17449 * t17987 + t17716 * t18673 + t17449) * t19197 + (t17449 * t19496 + t17716 * t19502) * pkin(3)) * t18002) * pkin(9);
t19084 = t18004 * t18032;
t17036 = 0.1e1 / (t17341 + ((t17553 * t18007 + t18004 * t18906) * t18003 - t18540 + t18293) * t18037 + (t17635 * t19119 + t17841 * t19084) * t19405 + t17571 + (-t18038 * t18565 + t17945) * t18031 + t17905);
t19326 = t16958 * t17036;
t17452 = -t17748 * t17954 + t17751 * t17960;
t17455 = t17754 * t17960 + t17757 * t17954;
t18148 = t17452 * t19423 + t17722 * t18712;
t16955 = t17455 * t18719 + (((t17452 * t17861 - t17722 * t18903) * t18007 + t17455 * t19425) * t18003 + t18148 * t17987 - t18148) * t18037 - t17722 * t18622 + (t17455 * t19210 + (t17722 * t18918 + (t17452 * t17987 - t17722 * t18673 - t17452) * t19197 + (-t17452 * t19496 - t17722 * t19502) * pkin(3)) * t18002) * pkin(9);
t19329 = t16955 * t17036;
t19459 = t16964 * t19326 + t16982 * t19329 + t17214 * t18043 + t17365 * t19134 + (t17214 * t17979 - t17365 * t19173 - t17568 * t17619 + t19148 * t19465) * t18041 + (-(t17853 * t17904 * t18767 + (-t17466 * t17998 + (t17667 * t18642 - t17935 * t18725 + t18731) * t18037 + (t17583 * t19099 - t18433) * pkin(9)) * t19350) * t19338 - ((-t18534 * t19350 - t19449 * t19338) * t18037 * t18731 + ((-t17903 * t18574 + t19350 * t19451) * t17998 + (-0.2e1 * t17667 * t18644 + (t17998 * t18595 - 0.4e1 * t17910 + t18146) * t19350) * t19415) * t18003 + ((t17583 * t18644 - t18941 * t19350) * t18003 + ((t17998 * t18594 + t18395) * t18031 * t18782 + ((t19448 * t17998 - t19449) * t19338 + (t17998 * t18533 + t18939) * t19350) * t19423) * t18002) * pkin(9)) * t19350) / ((t17502 + t18293) * t18037 + t17905 + (pkin(9) * t17646 + t18317 * t19018 + t19477 * t19415) * t18004 + t18306);
t16724 = t17568 * t18681 + t19459;
t16721 = t16724 * t19084;
t18885 = t16712 * t19413;
t16684 = t16721 + t18885;
t18825 = t16724 * t19081;
t19437 = pkin(2) * t16712;
t18257 = (t18825 + t19437) * t18007 + t16724 * t19098;
t18405 = -t18037 * t16684 + (-pkin(8) * t18665 + t19431) * t16856 - t18031 * t18257;
t18264 = t17078 * t18405;
t19530 = t17178 * t18264;
t18879 = t18037 * t19413;
t18406 = -t18031 * t16684 + (t18007 * t18879 + t17976) * t16856 + t18037 * t18257;
t18265 = t17078 * t18406;
t19529 = t17178 * t18265;
t19382 = t16712 * t17078;
t18843 = t18037 * t19382;
t19528 = t17178 * t18843;
t18844 = t18031 * t19382;
t19527 = t17178 * t18844;
t18655 = t18004 * t19012;
t17554 = t17903 * t18655 + t17871;
t17503 = t17554 * t19099;
t17584 = t17904 * t19105 + t17863;
t17668 = t17911 + t18632;
t17817 = t18008 * t17862;
t18896 = pkin(3) * t19080;
t18538 = t17935 * t18896;
t17522 = (-t17817 + t18538) * t17987;
t18292 = t17522 + t17817 - t18617;
t17572 = (t17935 * t18655 - t19420) * t18876;
t19196 = t17935 * t18033;
t17636 = t18008 * t19196 + t18896;
t18305 = t17636 * t18556 + t17945 * t18033 + t17309 + t17572;
t18573 = pkin(2) * t18643;
t18730 = t17935 * t17862;
t17749 = t18001 * t19049 + t18005 * t18034;
t17752 = -t18001 * t18034 + t18005 * t19049;
t17450 = t17749 * t17961 + t17752 * t17955;
t17755 = t18001 * t18040 + t18005 * t19055;
t17758 = -t18001 * t19055 + t18005 * t18040;
t17459 = -t17755 * t17955 + t17758 * t17961;
t18711 = t18004 * t17862;
t18150 = -t17450 * t19423 - t17717 * t18711;
t18621 = t18033 * t18937;
t18718 = t17999 * t19207;
t19430 = pkin(2) * t18039;
t18917 = t18004 * t19430;
t19209 = t17842 * t18003;
t19424 = pkin(3) * t17900;
t19497 = t19099 * t19442;
t18688 = t17999 * t19191;
t19503 = t18004 * (0.2e1 * t18688 - t19449);
t16959 = t17459 * t18718 + (((-t17450 * t17862 + t17717 * t18903) * t18007 + t17459 * t19424) * t18003 + t18150 * t17987 - t18150) * t18039 + t17717 * t18621 + (t17459 * t19209 + (-t17717 * t18917 + (-t17450 * t17987 + t17717 * t18673 + t17450) * t19196 + (t17450 * t19497 + t17717 * t19503) * pkin(3)) * t18002) * pkin(9);
t19083 = t18004 * t18034;
t17037 = 0.1e1 / (t17342 + ((t17554 * t18007 + t18004 * t18905) * t18003 - t18538 + t18292) * t18039 + (t17636 * t19119 + t17842 * t19083) * t19405 + t17572 + (-t18040 * t18565 + t17945) * t18033 + t17905);
t19325 = t16959 * t17037;
t17453 = -t17749 * t17955 + t17752 * t17961;
t17456 = t17755 * t17961 + t17758 * t17955;
t18147 = t17453 * t19423 + t17723 * t18711;
t16956 = t17456 * t18718 + (((t17453 * t17862 - t17723 * t18903) * t18007 + t17456 * t19424) * t18003 + t18147 * t17987 - t18147) * t18039 - t17723 * t18621 + (t17456 * t19209 + (t17723 * t18917 + (t17453 * t17987 - t17723 * t18673 - t17453) * t19196 + (-t17453 * t19497 - t17723 * t19503) * pkin(3)) * t18002) * pkin(9);
t19328 = t16956 * t17037;
t19460 = t16965 * t19325 + t16983 * t19328 + t17216 * t18043 + t17366 * t19134 + (t17216 * t17979 - t17366 * t19173 - t17569 * t17619 + t19148 * t19466) * t18041 + (-(t17854 * t17904 * t18765 + (-t17466 * t17999 + (t17668 * t18642 - t17935 * t18724 + t18730) * t18039 + (t17584 * t19099 - t18433) * pkin(9)) * t19349) * t19337 - ((-t18534 * t19349 - t19449 * t19337) * t18039 * t18730 + ((-t17903 * t18573 + t19349 * t19451) * t17999 + (-0.2e1 * t17668 * t18643 + (t17999 * t18595 - 0.4e1 * t17911 + t18146) * t19349) * t19414) * t18003 + ((t17584 * t18643 - t18941 * t19349) * t18003 + ((t17999 * t18594 + t18395) * t18033 * t18780 + ((t19448 * t17999 - t19449) * t19337 + (t17999 * t18533 + t18939) * t19349) * t19423) * t18002) * pkin(9)) * t19349) / ((t17503 + t18292) * t18039 + t17905 + (pkin(9) * t17647 + t18317 * t19012 + t19478 * t19414) * t18004 + t18305);
t16725 = t17569 * t18681 + t19460;
t16722 = t16725 * t19083;
t18884 = t16713 * t19413;
t16686 = t16722 + t18884;
t18822 = t16725 * t19080;
t19436 = pkin(2) * t16713;
t18256 = (t18822 + t19436) * t18007 + t16725 * t19098;
t18403 = -t18039 * t16686 + (-pkin(8) * t18664 + t19430) * t16857 - t18033 * t18256;
t18262 = t17079 * t18403;
t19526 = t17180 * t18262;
t18878 = t18039 * t19413;
t18404 = -t18033 * t16686 + (t18007 * t18878 + t17977) * t16857 + t18039 * t18256;
t18263 = t17079 * t18404;
t19525 = t17180 * t18263;
t19380 = t16713 * t17079;
t18840 = t18039 * t19380;
t19524 = t17180 * t18840;
t18841 = t18033 * t19380;
t19523 = t17180 * t18841;
t18487 = t17935 * t18777;
t16906 = t18487 * t17948;
t18319 = t18007 * t18446;
t18434 = t18864 * t17948;
t18902 = pkin(3) * t19100;
t18627 = pkin(2) * t18902;
t18641 = -0.2e1 * t18876;
t19063 = t18008 * t18023;
t19120 = t17987 * t18070;
t19454 = 0.2e1 * pkin(2);
t16729 = -(-t18693 * t18794 + (t16846 * t19450 + t16906 + (t18578 + (-t18017 * t18596 + t19454) * t19354) * pkin(3)) * t18023 - t18704 * t19354 + ((pkin(2) * t18571 + t18510 * t19453) * t18017 - t18778) * t18007 + (pkin(2) * t18452 - pkin(3) * t18487) * t18017 + t17870 * t19354) / ((t17517 + t17498 + (t17800 + t17856) * t18017 + t18018 * t18627 - t18548) * t18023 + (-t18302 + t17912 + (t17694 * t18017 * t18004 - pkin(2) * t19063) * t18002) * pkin(9) + t18310) * t18008 * t19354 - ((((t16906 + t18620) * t18007 + t16846) * t18023 + t18132) * t18008 + (t19270 + (((-t17857 + t17946) * t19097 + t18024 * t18434) * t18004 + ((t18017 * t18641 + t17890) * t18008 + t18319 * t19045) * pkin(3)) * t18023 + (-t17830 * t18017 + t19120 + t19412) * t18008 - (t17531 * t18024 + t17882 * t19097) * t19421) * t19345) / ((t17367 + t17285) * t18023 + t18639) * t19345 - t16960 * t19292 - t16978 * t19552;
t19389 = t16708 * t18007;
t16693 = t16729 + 0.2e1 * t19389;
t18803 = (0.2e1 * t18654 + t19345) * t19345;
t18195 = -t16693 * t18023 + t18017 * t18803;
t18143 = t17011 * t18195;
t19522 = -t17095 * t18143 - t17158 * t18855;
t18196 = t16693 * t18017 + t18023 * t18803;
t18144 = t17011 * t18196;
t19521 = t17095 * t18144 - t17158 * t18856;
t18486 = t17935 * t18774;
t16907 = t18486 * t17948;
t19061 = t18008 * t18025;
t16730 = -(-t18692 * t18792 + (t16847 * t19450 + t16907 + (t18577 + (-t18019 * t18596 + t19454) * t19353) * pkin(3)) * t18025 - t18704 * t19353 + ((pkin(2) * t18570 + t18508 * t19453) * t18019 - t18775) * t18007 + (pkin(2) * t18451 - pkin(3) * t18486) * t18019 + t17870 * t19353) / ((t17518 + t17499 + (t17801 + t17856) * t18019 + t18020 * t18627 - t18546) * t18025 + (-t18301 + t17912 + (t17695 * t18019 * t18004 - pkin(2) * t19061) * t18002) * pkin(9) + t18309) * t18008 * t19353 - ((((t16907 + t18619) * t18007 + t16847) * t18025 + t18131) * t18008 + (t19269 + (((-t17858 + t17946) * t19096 + t18026 * t18434) * t18004 + ((t18019 * t18641 + t17892) * t18008 + t18319 * t19039) * pkin(3)) * t18025 + (-t17830 * t18019 + t19120 + t19411) * t18008 - (t17532 * t18026 + t17883 * t19096) * t19421) * t19344) / ((t17368 + t17286) * t18025 + t18638) * t19344 - t16961 * t19289 - t16979 * t19551;
t19387 = t16709 * t18007;
t16695 = t16730 + 0.2e1 * t19387;
t18802 = (0.2e1 * t18653 + t19344) * t19344;
t18193 = -t16695 * t18025 + t18019 * t18802;
t18141 = t17012 * t18193;
t19520 = -t17098 * t18141 - t17160 * t18852;
t18194 = t16695 * t18019 + t18025 * t18802;
t18142 = t17012 * t18194;
t19519 = t17098 * t18142 - t17160 * t18853;
t18485 = t17935 * t18771;
t16908 = t18485 * t17948;
t19059 = t18008 * t18027;
t16731 = -(-t18691 * t18790 + (t16848 * t19450 + t16908 + (t18576 + (-t18021 * t18596 + t19454) * t19352) * pkin(3)) * t18027 - t18704 * t19352 + ((pkin(2) * t18569 + t18506 * t19453) * t18021 - t18772) * t18007 + (pkin(2) * t18450 - pkin(3) * t18485) * t18021 + t17870 * t19352) / ((t17519 + t17500 + (t17802 + t17856) * t18021 + t18022 * t18627 - t18544) * t18027 + (-t18300 + t17912 + (t17696 * t18021 * t18004 - pkin(2) * t19059) * t18002) * pkin(9) + t18308) * t18008 * t19352 - ((((t16908 + t18618) * t18007 + t16848) * t18027 + t18130) * t18008 + (t19268 + (((-t17859 + t17946) * t19095 + t18028 * t18434) * t18004 + ((t18021 * t18641 + t17894) * t18008 + t18319 * t19033) * pkin(3)) * t18027 + (-t17830 * t18021 + t19120 + t19410) * t18008 - (t17533 * t18028 + t17884 * t19095) * t19421) * t19343) / ((t17369 + t17287) * t18027 + t18637) * t19343 - t16962 * t19286 - t16980 * t19550;
t19385 = t16710 * t18007;
t16697 = t16731 + 0.2e1 * t19385;
t18801 = (0.2e1 * t18652 + t19343) * t19343;
t18191 = -t16697 * t18027 + t18021 * t18801;
t18139 = t17013 * t18191;
t19518 = -t17101 * t18139 - t17162 * t18849;
t18192 = t16697 * t18021 + t18027 * t18801;
t18140 = t17013 * t18192;
t19517 = t17101 * t18140 - t17162 * t18850;
t18481 = t17935 * t18769;
t16909 = t18481 * t17948;
t19054 = t18008 * t18035;
t16735 = -(-t18690 * t18785 + (t16849 * t19450 + t16909 + (t18575 + (-t18029 * t18596 + t19454) * t19351) * pkin(3)) * t18035 - t18704 * t19351 + ((pkin(2) * t18568 + t18495 * t19453) * t18029 - t18770) * t18007 + (pkin(2) * t18449 - pkin(3) * t18481) * t18029 + t17870 * t19351) / ((t17520 + t17501 + (t17809 + t17856) * t18029 + t18030 * t18627 - t18542) * t18035 + (-t18304 + t17912 + (t17709 * t18029 * t18004 - pkin(2) * t19054) * t18002) * pkin(9) + t18307) * t18008 * t19351 - ((((t16909 + t18630) * t18007 + t16849) * t18035 + t18129) * t18008 + (t19267 + (((-t17860 + t17946) * t19094 + t18036 * t18434) * t18004 + ((t18029 * t18641 + t17896) * t18008 + t18319 * t19024) * pkin(3)) * t18035 + (-t17830 * t18029 + t19120 + t19409) * t18008 - (t17534 * t18036 + t17885 * t19094) * t19421) * t19339) / ((t17370 + t17288) * t18035 + t18636) * t19339 - t16963 * t19283 - t16981 * t19549;
t19383 = t16711 * t18007;
t16702 = t16735 + 0.2e1 * t19383;
t18800 = (0.2e1 * t18651 + t19339) * t19339;
t18189 = -t16702 * t18035 + t18029 * t18800;
t18137 = t17017 * t18189;
t19516 = -t17110 * t18137 - t17170 * t18846;
t18190 = t16702 * t18029 + t18035 * t18800;
t18138 = t17017 * t18190;
t19515 = t17110 * t18138 - t17170 * t18847;
t18480 = t17935 * t18767;
t16910 = t18480 * t17948;
t19052 = t18008 * t18037;
t16736 = -(-t18689 * t18783 + (t16850 * t19450 + t16910 + (t18574 + (-t18031 * t18596 + t19454) * t19350) * pkin(3)) * t18037 - t18704 * t19350 + ((pkin(2) * t18567 + t18493 * t19453) * t18031 - t18768) * t18007 + (pkin(2) * t18448 - pkin(3) * t18480) * t18031 + t17870 * t19350) / ((t17521 + t17502 + (t17810 + t17856) * t18031 + t18032 * t18627 - t18540) * t18037 + (-t18299 + t17912 + (t17710 * t18031 * t18004 - pkin(2) * t19052) * t18002) * pkin(9) + t18306) * t18008 * t19350 - ((((t16910 + t18629) * t18007 + t16850) * t18037 + t18128) * t18008 + (t19266 + (((-t17861 + t17946) * t19093 + t18038 * t18434) * t18004 + ((t18031 * t18641 + t17898) * t18008 + t18319 * t19018) * pkin(3)) * t18037 + (-t17830 * t18031 + t19120 + t19408) * t18008 - (t17535 * t18038 + t17886 * t19093) * t19421) * t19338) / ((t17371 + t17289) * t18037 + t18635) * t19338 - t16964 * t19280 - t16982 * t19548;
t19381 = t16712 * t18007;
t16704 = t16736 + 0.2e1 * t19381;
t18799 = (0.2e1 * t18650 + t19338) * t19338;
t18187 = -t16704 * t18037 + t18031 * t18799;
t18135 = t17018 * t18187;
t19514 = -t17113 * t18135 - t17172 * t18843;
t18188 = t16704 * t18031 + t18037 * t18799;
t18136 = t17018 * t18188;
t19513 = t17113 * t18136 - t17172 * t18844;
t18479 = t17935 * t18765;
t16911 = t18479 * t17948;
t19050 = t18008 * t18039;
t16737 = -(-t18688 * t18781 + (t16851 * t19450 + t16911 + (t18573 + (-t18033 * t18596 + t19454) * t19349) * pkin(3)) * t18039 - t18704 * t19349 + ((pkin(2) * t18566 + t18491 * t19453) * t18033 - t18766) * t18007 + (pkin(2) * t18447 - pkin(3) * t18479) * t18033 + t17870 * t19349) / ((t17522 + t17503 + (t17811 + t17856) * t18033 + t18034 * t18627 - t18538) * t18039 + (-t18303 + t17912 + (t17711 * t18033 * t18004 - pkin(2) * t19050) * t18002) * pkin(9) + t18305) * t18008 * t19349 - ((((t16911 + t18628) * t18007 + t16851) * t18039 + t18127) * t18008 + (t19265 + (((-t17862 + t17946) * t19092 + t18040 * t18434) * t18004 + ((t18033 * t18641 + t17900) * t18008 + t18319 * t19012) * pkin(3)) * t18039 + (-t17830 * t18033 + t19120 + t19407) * t18008 - (t17536 * t18040 + t17887 * t19092) * t19421) * t19337) / ((t17372 + t17290) * t18039 + t18634) * t19337 - t16965 * t19277 - t16983 * t19547;
t19379 = t16713 * t18007;
t16706 = t16737 + 0.2e1 * t19379;
t18798 = (0.2e1 * t18649 + t19337) * t19337;
t18185 = -t16706 * t18039 + t18033 * t18798;
t18133 = t17019 * t18185;
t19512 = -t17116 * t18133 - t17174 * t18840;
t18186 = t16706 * t18033 + t18039 * t18798;
t18134 = t17019 * t18186;
t19511 = t17116 * t18134 - t17174 * t18841;
t18929 = 0.2e1 * t19337;
t18930 = 0.2e1 * t19338;
t18931 = 0.2e1 * t19339;
t18932 = 0.2e1 * t19343;
t18933 = 0.2e1 * t19344;
t18934 = 0.2e1 * t19345;
t19126 = t17983 * t18062;
t19132 = t17983 * t18056;
t19165 = t17980 * t18062;
t19171 = t17980 * t18056;
t17316 = -t17980 * t19146 + (t17979 * t19165 + t19132) * t17981 + t17978 * (-t17979 * t19171 + t19126);
t17248 = t17316 * t18005 + t17585 * t18001;
t17254 = t17316 * t18001 - t17585 * t18005;
t19324 = ((t17248 * t17956 - t17254 * t17950) * t18379 - (t17248 * t17950 + t17254 * t17956) * t17373) * t17086;
t19125 = t17983 * t18063;
t19131 = t17983 * t18057;
t19164 = t17980 * t18063;
t19170 = t17980 * t18057;
t17317 = -t17980 * t19145 + (t17979 * t19164 + t19131) * t17981 + t17978 * (-t17979 * t19170 + t19125);
t17249 = t17317 * t18005 + t17586 * t18001;
t17255 = t17317 * t18001 - t17586 * t18005;
t19323 = ((t17249 * t17957 - t17255 * t17951) * t18378 - t17374 * (t17249 * t17951 + t17255 * t17957)) * t17088;
t19124 = t17983 * t18064;
t19130 = t17983 * t18058;
t19163 = t17980 * t18064;
t19169 = t17980 * t18058;
t17318 = -t17980 * t19144 + (t17979 * t19163 + t19130) * t17981 + t17978 * (-t17979 * t19169 + t19124);
t17250 = t17318 * t18005 + t17587 * t18001;
t17256 = t17318 * t18001 - t17587 * t18005;
t19322 = ((t17250 * t17958 - t17256 * t17952) * t18377 - t17375 * (t17250 * t17952 + t17256 * t17958)) * t17090;
t19123 = t17983 * t18065;
t19129 = t17983 * t18059;
t19162 = t17980 * t18065;
t19168 = t17980 * t18059;
t17319 = -t17980 * t19143 + (t17979 * t19162 + t19129) * t17981 + t17978 * (-t17979 * t19168 + t19123);
t17251 = t17319 * t18005 + t17588 * t18001;
t17257 = t17319 * t18001 - t17588 * t18005;
t19321 = ((t17251 * t17959 - t17257 * t17953) * t18376 - (t17251 * t17953 + t17257 * t17959) * t17388) * t17104;
t19122 = t17983 * t18066;
t19128 = t17983 * t18060;
t19161 = t17980 * t18066;
t19167 = t17980 * t18060;
t17320 = -t17980 * t19142 + (t17979 * t19161 + t19128) * t17981 + t17978 * (-t17979 * t19167 + t19122);
t17252 = t17320 * t18005 + t17589 * t18001;
t17258 = t17320 * t18001 - t17589 * t18005;
t19320 = ((t17252 * t17960 - t17258 * t17954) * t18375 - t17389 * (t17252 * t17954 + t17258 * t17960)) * t17106;
t19121 = t17983 * t18067;
t19127 = t17983 * t18061;
t19160 = t17980 * t18067;
t19166 = t17980 * t18061;
t17321 = -t17980 * t19141 + (t17979 * t19160 + t19127) * t17981 + t17978 * (-t17979 * t19166 + t19121);
t17253 = t17321 * t18005 + t17590 * t18001;
t17259 = t17321 * t18001 - t17590 * t18005;
t19319 = ((t17253 * t17961 - t17259 * t17955) * t18374 - t17390 * (t17253 * t17955 + t17259 * t17961)) * t17108;
t19158 = t17981 * t17983;
t19190 = t17978 * t17980;
t17627 = -t17979 * t19158 + t19190;
t19157 = t17981 * t18042;
t17654 = t17978 * t19147 - t19157;
t19236 = t17654 * t17873;
t19504 = t17982 * (t17627 * t18999 + t17983 * t19236);
t19365 = t16729 * t18007;
t16690 = t16708 + t19365;
t16694 = t16729 + t19389;
t19348 = t16933 ^ 2 / t17092 ^ 2;
t16804 = t18007 * t18511 + t16852 / 0.2e1 + t19348 / 0.2e1;
t18432 = 0.2e1 * t18511;
t16807 = (t16852 + t19348) * t18007 + t18432;
t19030 = t18023 * t18024;
t19043 = t18018 * t18023;
t19047 = t18017 * t18018;
t19366 = t16729 * t18003;
t19491 = t19063 * t19366 + (t16690 * t19030 - t16694 * t19047 - 0.2e1 * t16804 * t19043 - t16807 * t19045) * t18004;
t19363 = t16730 * t18007;
t16691 = t16709 + t19363;
t16696 = t16730 + t19387;
t19347 = t16934 ^ 2 / t17093 ^ 2;
t16805 = t18007 * t18509 + t16853 / 0.2e1 + t19347 / 0.2e1;
t18431 = 0.2e1 * t18509;
t16808 = (t16853 + t19347) * t18007 + t18431;
t19029 = t18025 * t18026;
t19037 = t18020 * t18025;
t19041 = t18019 * t18020;
t19364 = t16730 * t18003;
t19490 = t19061 * t19364 + (t16691 * t19029 - t16696 * t19041 - 0.2e1 * t16805 * t19037 - t16808 * t19039) * t18004;
t19361 = t16731 * t18007;
t16692 = t16710 + t19361;
t16698 = t16731 + t19385;
t19346 = t16935 ^ 2 / t17094 ^ 2;
t16806 = t18007 * t18507 + t16854 / 0.2e1 + t19346 / 0.2e1;
t18430 = 0.2e1 * t18507;
t16809 = (t16854 + t19346) * t18007 + t18430;
t19028 = t18027 * t18028;
t19031 = t18022 * t18027;
t19035 = t18021 * t18022;
t19362 = t16731 * t18003;
t19489 = t19059 * t19362 + (t16692 * t19028 - t16698 * t19035 - 0.2e1 * t16806 * t19031 - t16809 * t19033) * t18004;
t19359 = t16735 * t18007;
t16699 = t16711 + t19359;
t16703 = t16735 + t19383;
t19342 = t16939 ^ 2 / t17119 ^ 2;
t16816 = t18007 * t18496 + t16855 / 0.2e1 + t19342 / 0.2e1;
t18429 = 0.2e1 * t18496;
t16819 = (t16855 + t19342) * t18007 + t18429;
t19009 = t18035 * t18036;
t19022 = t18030 * t18035;
t19026 = t18029 * t18030;
t19360 = t16735 * t18003;
t19488 = t19054 * t19360 + (t16699 * t19009 - t16703 * t19026 - 0.2e1 * t16816 * t19022 - t16819 * t19024) * t18004;
t19357 = t16736 * t18007;
t16700 = t16712 + t19357;
t16705 = t16736 + t19381;
t19341 = t16940 ^ 2 / t17120 ^ 2;
t16817 = t18007 * t18494 + t16856 / 0.2e1 + t19341 / 0.2e1;
t18428 = 0.2e1 * t18494;
t16820 = (t16856 + t19341) * t18007 + t18428;
t19008 = t18037 * t18038;
t19016 = t18032 * t18037;
t19020 = t18031 * t18032;
t19358 = t16736 * t18003;
t19487 = t19052 * t19358 + (t16700 * t19008 - t16705 * t19020 - 0.2e1 * t16817 * t19016 - t16820 * t19018) * t18004;
t19355 = t16737 * t18007;
t16701 = t16713 + t19355;
t16707 = t16737 + t19379;
t19340 = t16941 ^ 2 / t17121 ^ 2;
t16818 = t18007 * t18492 + t16857 / 0.2e1 + t19340 / 0.2e1;
t18427 = 0.2e1 * t18492;
t16821 = (t16857 + t19340) * t18007 + t18427;
t19007 = t18039 * t18040;
t19010 = t18034 * t18039;
t19014 = t18033 * t18034;
t19356 = t16737 * t18003;
t19486 = t19050 * t19356 + (t16701 * t19007 - t16707 * t19014 - 0.2e1 * t16818 * t19010 - t16821 * t19012) * t18004;
t19485 = (-t16690 * t19045 - t16694 * t19043 + 0.2e1 * t16804 * t19047 - t16807 * t19030) * t18004;
t19484 = (-t16691 * t19039 - t16696 * t19037 + 0.2e1 * t16805 * t19041 - t16808 * t19029) * t18004;
t19483 = (-t16692 * t19033 - t16698 * t19031 + 0.2e1 * t16806 * t19035 - t16809 * t19028) * t18004;
t19482 = (-t16699 * t19024 - t16703 * t19022 + 0.2e1 * t16816 * t19026 - t16819 * t19009) * t18004;
t19481 = (-t16700 * t19018 - t16705 * t19016 + 0.2e1 * t16817 * t19020 - t16820 * t19008) * t18004;
t19480 = (-t16701 * t19012 - t16707 * t19010 + 0.2e1 * t16818 * t19014 - t16821 * t19007) * t18004;
t17487 = t17654 ^ 2;
t19188 = t17978 * t18042;
t17656 = t17981 * t19147 + t19188;
t17488 = t17656 ^ 2;
t17623 = t17873 ^ 2;
t19396 = MDP(3) * t18004;
t19395 = MDP(4) * t18004;
t17984 = t18003 ^ 2;
t19394 = MDP(5) * t17984;
t19393 = MDP(6) * t17984;
t19392 = MDP(7) * t18003;
t19391 = MDP(8) * t18003;
t19378 = t16717 * t18018;
t19377 = t16717 * t18024;
t19376 = t16718 * t18020;
t19375 = t16718 * t18026;
t19374 = t16719 * t18022;
t19373 = t16719 * t18028;
t19372 = t16723 * t18030;
t19371 = t16723 * t18036;
t19370 = t16724 * t18032;
t19369 = t16724 * t18038;
t19368 = t16725 * t18034;
t19367 = t16725 * t18040;
t19315 = t17011 * t17382;
t19311 = t17012 * t17383;
t19307 = t17013 * t17384;
t19303 = t17017 * t17385;
t19299 = t17018 * t17386;
t19295 = t17019 * t17387;
t18687 = t18017 * t19191;
t17260 = t17803 + (t17685 + t17746) * t18023 + (t17935 * t18687 + t17913) * t17948;
t17188 = t17260 * t18024 + t17391;
t17643 = pkin(2) * pkin(3) + t18394;
t17242 = t17697 + (-t17903 * t18687 - t18940) * t18023 + t17643 * t18017 - t18441;
t17122 = 0.1e1 / (t17188 * t18004 + t17242 * t18008);
t19276 = t17122 * ((t17979 * t19126 - t19171) * t17981 + (-t17979 * t19132 - t19165) * t17978 - t17983 * t19146);
t18686 = t18019 * t19191;
t17261 = t17804 + (t17687 + t17746) * t18025 + (t17935 * t18686 + t17913) * t17948;
t17189 = t17261 * t18026 + t17392;
t17243 = t17698 + (-t17903 * t18686 - t18940) * t18025 + t17643 * t18019 - t18441;
t17123 = 0.1e1 / (t17189 * t18004 + t17243 * t18008);
t19275 = t17123 * ((t17979 * t19125 - t19170) * t17981 + (-t17979 * t19131 - t19164) * t17978 - t17983 * t19145);
t18685 = t18021 * t19191;
t17262 = t17805 + (t17689 + t17746) * t18027 + (t17935 * t18685 + t17913) * t17948;
t17190 = t17262 * t18028 + t17393;
t17244 = t17699 + (-t17903 * t18685 - t18940) * t18027 + t17643 * t18021 - t18441;
t17124 = 0.1e1 / (t17190 * t18004 + t17244 * t18008);
t19274 = t17124 * ((t17979 * t19124 - t19169) * t17981 + (-t17979 * t19130 - t19163) * t17978 - t17983 * t19144);
t18684 = t18029 * t19191;
t17263 = t17812 + (t17700 + t17746) * t18035 + (t17935 * t18684 + t17913) * t17948;
t17191 = t17263 * t18036 + t17400;
t17245 = t17706 + (-t17903 * t18684 - t18940) * t18035 + t17643 * t18029 - t18441;
t17125 = 0.1e1 / (t17191 * t18004 + t17245 * t18008);
t19273 = t17125 * ((t17979 * t19123 - t19168) * t17981 + (-t17979 * t19129 - t19162) * t17978 - t17983 * t19143);
t18683 = t18031 * t19191;
t17264 = t17813 + (t17702 + t17746) * t18037 + (t17935 * t18683 + t17913) * t17948;
t17192 = t17264 * t18038 + t17401;
t17246 = t17707 + (-t17903 * t18683 - t18940) * t18037 + t17643 * t18031 - t18441;
t17126 = 0.1e1 / (t17192 * t18004 + t17246 * t18008);
t19272 = t17126 * ((t17979 * t19122 - t19167) * t17981 + (-t17979 * t19128 - t19161) * t17978 - t17983 * t19142);
t18682 = t18033 * t19191;
t17265 = t17814 + (t17704 + t17746) * t18039 + (t17935 * t18682 + t17913) * t17948;
t17193 = t17265 * t18040 + t17402;
t17247 = t17708 + (-t17903 * t18682 - t18940) * t18039 + t17643 * t18033 - t18441;
t17127 = 0.1e1 / (t17193 * t18004 + t17247 * t18008);
t19271 = t17127 * ((t17979 * t19121 - t19166) * t17981 + (-t17979 * t19127 - t19160) * t17978 - t17983 * t19141);
t19006 = t18041 * t18042;
t17496 = (t17979 * t19188 - t17981 * t19149) * t18043 - t17978 * t19006;
t19246 = t17496 * t17979;
t17497 = (-t17978 * t19149 - t17979 * t19157) * t18043 + t17981 * t19006;
t19245 = t17497 * t17978;
t17624 = -t17979 * t19190 + t19158;
t19238 = t17624 * t17654;
t19237 = t17654 * t17656;
t19235 = t17654 * t17978;
t19234 = t17656 * t17873;
t19233 = t17656 * t17981;
t19229 = t17771 * t18008;
t19228 = t17773 * t18008;
t19227 = t17775 * t18008;
t19223 = t17788 * t18008;
t19222 = t17790 * t18008;
t19221 = t17791 * t18008;
t19208 = t17873 * t17979;
t19189 = t17978 * t17982;
t19174 = t17980 * t17981;
t19159 = t17981 * t17982;
t19150 = t17982 * t17983;
t19048 = t18017 * t16729;
t19042 = t18019 * t16730;
t19036 = t18021 * t16731;
t19027 = t18029 * t16735;
t19021 = t18031 * t16736;
t19015 = t18033 * t16737;
t18490 = t19098 * t19348;
t18821 = t18003 * t19048;
t18978 = -t18008 * t18821 - t18023 * t18490 + t19485;
t18977 = -t18017 * t18490 + t19491;
t18489 = t19098 * t19347;
t18820 = t18003 * t19042;
t18976 = -t18008 * t18820 - t18025 * t18489 + t19484;
t18975 = -t18019 * t18489 + t19490;
t18488 = t19098 * t19346;
t18819 = t18003 * t19036;
t18974 = -t18008 * t18819 - t18027 * t18488 + t19483;
t18973 = -t18021 * t18488 + t19489;
t18484 = t19098 * t19342;
t18818 = t18003 * t19027;
t18972 = -t18008 * t18818 - t18035 * t18484 + t19482;
t18971 = -t18029 * t18484 + t19488;
t18483 = t19098 * t19341;
t18817 = t18003 * t19021;
t18970 = -t18008 * t18817 - t18037 * t18483 + t19481;
t18969 = -t18031 * t18483 + t19487;
t18482 = t19098 * t19340;
t18816 = t18003 * t19015;
t18968 = -t18008 * t18816 - t18039 * t18482 + t19480;
t18967 = -t18033 * t18482 + t19486;
t17625 = t17978 * t17983 + t17979 * t19174;
t18966 = t17625 * t17496 - t17624 * t19236;
t17626 = t17978 * t19187 + t19174;
t18965 = t17627 * t17496 - t17626 * t19236;
t18958 = t17497 * t19150 - t17627 * t19237;
t18744 = t17982 * t19237;
t18957 = t17979 * t17497 - t17981 * t18744;
t18680 = t17982 * t18999;
t18743 = t17656 * t19150;
t18956 = t17626 * t18680 + t17873 * t18743;
t18863 = t16694 * t17074 * t17382;
t18862 = t16696 * t17075 * t17383;
t18861 = t16698 * t17076 * t17384;
t18860 = t16703 * t17077 * t17385;
t18859 = t16705 * t17078 * t17386;
t18858 = t16707 * t17079 * t17387;
t18857 = t16708 * t19324;
t18854 = t16709 * t19323;
t18851 = t16710 * t19322;
t18848 = t16711 * t19321;
t18845 = t16712 * t19320;
t18842 = t16713 * t19319;
t18839 = t17011 * t19378;
t18838 = t17011 * t19377;
t18836 = t17012 * t19376;
t18835 = t17012 * t19375;
t18833 = t17013 * t19374;
t18832 = t17013 * t19373;
t18830 = t17017 * t19372;
t18829 = t17017 * t19371;
t18827 = t17018 * t19370;
t18826 = t17018 * t19369;
t18824 = t17019 * t19368;
t18823 = t17019 * t19367;
t18797 = t17074 * t16852;
t18796 = t17075 * t16853;
t18795 = t17076 * t16854;
t18788 = t17077 * t16855;
t18787 = t17078 * t16856;
t18786 = t17079 * t16857;
t18764 = t17095 * t19315;
t18763 = t18591 * t19315;
t18762 = t17098 * t19311;
t18761 = t18590 * t19311;
t18760 = t17101 * t19307;
t18759 = t18589 * t19307;
t18758 = t17110 * t19303;
t18757 = t18588 * t19303;
t18756 = t17113 * t19299;
t18755 = t18587 * t19299;
t18754 = t17116 * t19295;
t18753 = t18586 * t19295;
t18752 = t17496 * t19173;
t18745 = t17625 * t18999;
t18742 = t17873 * t19173;
t17949 = t17982 ^ 2;
t18695 = t17949 * t18999;
t18640 = t18003 * t18979;
t18608 = t17029 * t18978;
t18607 = t17029 * t18977;
t18606 = t17030 * t18976;
t18605 = t17030 * t18975;
t18604 = t17031 * t18974;
t18603 = t17031 * t18973;
t18602 = t17035 * t18972;
t18601 = t17035 * t18971;
t18600 = t17036 * t18970;
t18599 = t17036 * t18969;
t18598 = t17037 * t18968;
t18597 = t17037 * t18967;
t18526 = t16717 * t18763;
t18525 = t16718 * t18761;
t18524 = t16719 * t18759;
t18523 = t16723 * t18757;
t18522 = t16724 * t18755;
t18521 = t16725 * t18753;
t18520 = t19324 * t16852;
t18519 = t18017 * t18797;
t18518 = t18023 * t18797;
t18517 = t19323 * t16853;
t18516 = t18019 * t18796;
t18515 = t18025 * t18796;
t18514 = t19322 * t16854;
t18513 = t18021 * t18795;
t18512 = t18027 * t18795;
t18505 = t19321 * t16855;
t18504 = t18029 * t18788;
t18503 = t18035 * t18788;
t18502 = t19320 * t16856;
t18501 = t18031 * t18787;
t18500 = t18037 * t18787;
t18499 = t19319 * t16857;
t18498 = t18033 * t18786;
t18497 = t18039 * t18786;
t18478 = t17095 * t18839;
t18477 = t17095 * t18838;
t18476 = t17098 * t18836;
t18475 = t17098 * t18835;
t18474 = t17101 * t18833;
t18473 = t17101 * t18832;
t18472 = t17110 * t18830;
t18471 = t17110 * t18829;
t18470 = t17113 * t18827;
t18469 = t17113 * t18826;
t18468 = t17116 * t18824;
t18467 = t17116 * t18823;
t16672 = t16714 + 0.2e1 * t18889;
t16624 = (-t16672 * t18017 + t16729 * t19435) * t18007 + (t18837 + 0.2e1 * t19441) * t18023 - pkin(8) * t18821;
t16828 = t18648 / 0.2e1 + t19354;
t16831 = t18654 + t19345 / 0.2e1;
t16798 = t16828 * t17969 + t16831 * t18883;
t18426 = t16798 * t18934 - t16624;
t16674 = t16715 + 0.2e1 * t18888;
t16625 = (-t16674 * t18019 + t16730 * t19434) * t18007 + (t18834 + 0.2e1 * t19440) * t18025 - pkin(8) * t18820;
t16829 = t18647 / 0.2e1 + t19353;
t16832 = t18653 + t19344 / 0.2e1;
t16799 = t16829 * t17970 + t16832 * t18882;
t18425 = t16799 * t18933 - t16625;
t16676 = t16716 + 0.2e1 * t18887;
t16626 = (-t16676 * t18021 + t16731 * t19433) * t18007 + (t18831 + 0.2e1 * t19439) * t18027 - pkin(8) * t18819;
t16830 = t18646 / 0.2e1 + t19352;
t16833 = t18652 + t19343 / 0.2e1;
t16800 = t16830 * t17971 + t16833 * t18881;
t18424 = t16800 * t18932 - t16626;
t16627 = (-t18837 + (-0.2e1 * t16708 - t19365) * pkin(2)) * t18017 - t18023 * (pkin(8) * t19366 + t16672 * t18007);
t16802 = -t16831 * t18017 * t19413 + t16828 * t19435;
t18423 = t16802 * t18934 - t16627;
t16628 = (-t18834 + (-0.2e1 * t16709 - t19363) * pkin(2)) * t18019 - t18025 * (pkin(8) * t19364 + t16674 * t18007);
t16803 = -t16832 * t18019 * t19413 + t16829 * t19434;
t18422 = t16803 * t18933 - t16628;
t16629 = (-t18831 + (-0.2e1 * t16710 - t19361) * pkin(2)) * t18021 - t18027 * (pkin(8) * t19362 + t16676 * t18007);
t16801 = -t16833 * t18021 * t19413 + t16830 * t19433;
t18421 = t16801 * t18932 - t16629;
t16681 = t16720 + 0.2e1 * t18886;
t16630 = (-t16681 * t18029 + t16735 * t19432) * t18007 + (t18828 + 0.2e1 * t19438) * t18035 - pkin(8) * t18818;
t16837 = t18645 / 0.2e1 + t19351;
t16840 = t18651 + t19339 / 0.2e1;
t16810 = t16837 * t17975 + t16840 * t18880;
t18420 = t16810 * t18931 - t16630;
t16683 = t16721 + 0.2e1 * t18885;
t16631 = (-t16683 * t18031 + t16736 * t19431) * t18007 + (t18825 + 0.2e1 * t19437) * t18037 - pkin(8) * t18817;
t16838 = t18644 / 0.2e1 + t19350;
t16841 = t18650 + t19338 / 0.2e1;
t16811 = t16838 * t17976 + t16841 * t18879;
t18419 = t16811 * t18930 - t16631;
t16685 = t16722 + 0.2e1 * t18884;
t16632 = (-t16685 * t18033 + t16737 * t19430) * t18007 + (t18822 + 0.2e1 * t19436) * t18039 - pkin(8) * t18816;
t16839 = t18643 / 0.2e1 + t19349;
t16842 = t18649 + t19337 / 0.2e1;
t16812 = t16839 * t17977 + t16842 * t18878;
t18418 = t16812 * t18929 - t16632;
t16633 = (-t18828 + (-0.2e1 * t16711 - t19359) * pkin(2)) * t18029 - t18035 * (pkin(8) * t19360 + t16681 * t18007);
t16813 = -t16840 * t18029 * t19413 + t16837 * t19432;
t18417 = t16813 * t18931 - t16633;
t16634 = (-t18825 + (-0.2e1 * t16712 - t19357) * pkin(2)) * t18031 - t18037 * (pkin(8) * t19358 + t16683 * t18007);
t16814 = -t16841 * t18031 * t19413 + t16838 * t19431;
t18416 = t16814 * t18930 - t16634;
t16635 = (-t18822 + (-0.2e1 * t16713 - t19355) * pkin(2)) * t18033 - t18039 * (pkin(8) * t19356 + t16685 * t18007);
t16815 = -t16842 * t18033 * t19413 + t16839 * t19430;
t18415 = t16815 * t18929 - t16635;
t18373 = t17188 * t18008 - t17242 * t18004;
t18372 = t17189 * t18008 - t17243 * t18004;
t18371 = t17190 * t18008 - t17244 * t18004;
t18370 = t17191 * t18008 - t17245 * t18004;
t18369 = t17192 * t18008 - t17246 * t18004;
t18368 = t17193 * t18008 - t17247 * t18004;
t18355 = t17382 * t18519;
t18354 = t17382 * t18518;
t18353 = t18017 * t18518;
t18352 = t17383 * t18516;
t18351 = t17383 * t18515;
t18350 = t18019 * t18515;
t18349 = t17384 * t18513;
t18348 = t17384 * t18512;
t18347 = t18021 * t18512;
t18346 = t17385 * t18504;
t18345 = t17385 * t18503;
t18344 = t18029 * t18503;
t18343 = t17386 * t18501;
t18342 = t17386 * t18500;
t18341 = t18031 * t18500;
t18340 = t17387 * t18498;
t18339 = t17387 * t18497;
t18338 = t18033 * t18497;
t18337 = t18017 * t18520;
t18336 = t18019 * t18517;
t18335 = t18021 * t18514;
t18334 = t18029 * t18505;
t18333 = t18031 * t18502;
t18332 = t18033 * t18499;
t18331 = t17158 * t18519;
t18330 = t17160 * t18516;
t18329 = t17162 * t18513;
t18328 = t17164 * t18519;
t18327 = t17166 * t18516;
t18326 = t17168 * t18513;
t18325 = t17170 * t18504;
t18324 = t17172 * t18501;
t18323 = t17174 * t18498;
t18322 = t17176 * t18504;
t18321 = t17178 * t18501;
t18320 = t17180 * t18498;
t18316 = (pkin(3) * t19075 + t18873) * t18008 - t18902;
t18315 = (pkin(3) * t19074 + t18872) * t18008 - t18902;
t18314 = (pkin(3) * t19073 + t18871) * t18008 - t18902;
t18313 = (pkin(3) * t19069 + t18870) * t18008 - t18902;
t18312 = (pkin(3) * t19068 + t18869) * t18008 - t18902;
t18311 = (pkin(3) * t19067 + t18868) * t18008 - t18902;
t18285 = t17011 * t18426;
t18284 = t17011 * t18423;
t18283 = t17012 * t18425;
t18282 = t17012 * t18422;
t18281 = t17013 * t18424;
t18280 = t17013 * t18421;
t18279 = t17017 * t18420;
t18278 = t17017 * t18417;
t18277 = t17018 * t18419;
t18276 = t17018 * t18416;
t18275 = t17019 * t18418;
t18274 = t17019 * t18415;
t18255 = -t18018 * t16708 - t18024 * t16852;
t18254 = t18024 * t16708 - t18018 * t16852;
t18253 = -t18020 * t16709 - t18026 * t16853;
t18252 = t18026 * t16709 - t18020 * t16853;
t18251 = -t18022 * t16710 - t18028 * t16854;
t18250 = t18028 * t16710 - t18022 * t16854;
t18249 = -t18030 * t16711 - t18036 * t16855;
t18248 = t18036 * t16711 - t18030 * t16855;
t18247 = -t18032 * t16712 - t18038 * t16856;
t18246 = t18038 * t16712 - t18032 * t16856;
t18245 = -t18034 * t16713 - t18040 * t16857;
t18244 = t18040 * t16713 - t18034 * t16857;
t18243 = t17469 * t18003 * t18024 - t17260 * t18018;
t18242 = t17470 * t18003 * t18026 - t17261 * t18020;
t18241 = t17471 * t18003 * t18028 - t17262 * t18022;
t18240 = t17484 * t18003 * t18036 - t17263 * t18030;
t18239 = t17485 * t18003 * t18038 - t17264 * t18032;
t18238 = t17486 * t18003 * t18040 - t17265 * t18034;
t18219 = -t17497 * t17624 + t17625 * t19234;
t18218 = -t17497 * t17626 + t17627 * t19234;
t18208 = t17095 * t18285;
t18207 = t17098 * t18283;
t18206 = t17101 * t18281;
t18205 = t17095 * t18284;
t18204 = t17098 * t18282;
t18203 = t17101 * t18280;
t18202 = t17110 * t18279;
t18201 = t17113 * t18277;
t18200 = t17116 * t18275;
t18199 = t17110 * t18278;
t18198 = t17113 * t18276;
t18197 = t17116 * t18274;
t18184 = -t17496 * t19150 - t17626 * t19237;
t18170 = t17029 * t18255;
t18169 = t17029 * t18254;
t18168 = t17030 * t18253;
t18167 = t17030 * t18252;
t18166 = t17031 * t18251;
t18165 = t17031 * t18250;
t18164 = t17035 * t18249;
t18163 = t17035 * t18248;
t18162 = t17036 * t18247;
t18161 = t17036 * t18246;
t18160 = t17037 * t18245;
t18159 = t17037 * t18244;
t18145 = -t17654 * t19208 - t17981 * t18695;
t18125 = t16708 * t18017 ^ 2 + t18432 * t19046;
t18123 = t16709 * t18019 ^ 2 + t18431 * t19040;
t18121 = t16710 * t18021 ^ 2 + t18430 * t19034;
t18119 = t16711 * t18029 ^ 2 + t18429 * t19025;
t18117 = t16712 * t18031 ^ 2 + t18428 * t19019;
t18115 = t16713 * t18033 ^ 2 + t18427 * t19013;
t18101 = t17011 * t18125;
t18099 = t17012 * t18123;
t18097 = t17013 * t18121;
t18095 = t17017 * t18119;
t18093 = t17018 * t18117;
t18091 = t17019 * t18115;
t18089 = t17095 * t18101;
t18087 = t17098 * t18099;
t18085 = t17101 * t18097;
t18083 = t17110 * t18095;
t18081 = t17113 * t18093;
t18079 = t17116 * t18091;
t17796 = -pkin(9) * t19101 + t18890;
t17795 = -pkin(9) * t19102 + t18891;
t17794 = -pkin(9) * t19103 + t18892;
t17778 = -pkin(9) * t19110 + t18893;
t17777 = -pkin(9) * t19111 + t18894;
t17776 = -pkin(9) * t19112 + t18895;
t17526 = t17624 * t18680;
t17510 = t17656 * t19208;
t17467 = -t17623 + t17487;
t17410 = t17496 * t19159;
t17354 = -t17488 + t17623;
t17304 = -t17487 + t17488;
t17299 = t17625 * t19237;
t17298 = -t17623 - t17488;
t17297 = -t17623 - t17487;
t17266 = -t17487 - t17488;
t17001 = t17717 * t18238 + t17723 * t18368;
t17000 = -t17717 * t18368 + t17723 * t18238;
t16999 = -t17716 * t18369 + t17722 * t18239;
t16998 = -t17715 * t18370 + t17721 * t18240;
t16997 = t17716 * t18239 + t17722 * t18369;
t16996 = t17715 * t18240 + t17721 * t18370;
t16995 = -t17714 * t18371 + t17720 * t18241;
t16994 = -t17713 * t18372 + t17719 * t18242;
t16993 = -t17712 * t18373 + t17718 * t18243;
t16992 = t17714 * t18241 + t17720 * t18371;
t16991 = t17713 * t18242 + t17719 * t18372;
t16990 = t17712 * t18243 + t17718 * t18373;
t16977 = -t16999 * t19272 - t17568;
t16976 = -t16998 * t19273 - t17567;
t16975 = -t17000 * t19271 - t17569;
t16974 = -t16995 * t19274 - t17566;
t16973 = -t16994 * t19275 - t17565;
t16972 = -t16993 * t19276 - t17564;
t16971 = t17001 * t19271 + t19466;
t16970 = t16997 * t19272 + t19465;
t16969 = t16996 * t19273 + t19464;
t16968 = t16992 * t19274 + t19463;
t16967 = t16991 * t19275 + t19462;
t16966 = t16990 * t19276 + t19461;
t16923 = (-((-t17717 * t17796 + t17723 * t18311) * t18039 - (t17717 * t17786 - t17723 * t19221 + t17578) * t18033) * t17321 - ((t17786 * t18033 + t17796 * t18039) * t17723 + (t18311 * t18039 + t18033 * (-t18557 + t19221)) * t17717) * t17590) / (((-0.2e1 * t18435 + t19011) * t19100 + t17684) * t17999 + (((t18640 * t19014 + t17711) * pkin(3) + t18950) * t18004 - t19247) * t18039 + (t17711 * t19105 - t18388 + t18943) * t19404 + t17465);
t16922 = (-((-t17715 * t17794 + t17721 * t18313) * t18035 - t18029 * (t17715 * t17783 - t17721 * t19223 + t17576)) * t17319 - ((t17783 * t18029 + t17794 * t18035) * t17721 + (t18313 * t18035 + (-t18557 + t19223) * t18029) * t17715) * t17588) / (((-0.2e1 * t18437 + t19023) * t19100 + t17684) * t17997 + ((pkin(3) * (t18640 * t19026 + t17709) + t18952) * t18004 - t19249) * t18035 + (t17709 * t19109 - t18390 + t18945) * t19404 + t17463);
t16921 = (-t17320 * ((-t17716 * t17795 + t17722 * t18312) * t18037 - t18031 * (t17716 * t17785 - t17722 * t19222 + t17577)) - t17589 * ((t17785 * t18031 + t17795 * t18037) * t17722 + (t18312 * t18037 + (-t18557 + t19222) * t18031) * t17716)) / (((-0.2e1 * t18436 + t19017) * t19100 + t17684) * t17998 + (((t18640 * t19020 + t17710) * pkin(3) + t18951) * t18004 - t19248) * t18037 + (t17710 * t19107 - t18389 + t18944) * t19404 + t17464);
t16920 = (-((-t17712 * t17776 + t17718 * t18316) * t18023 - t18017 * (t17712 * t17765 - t17718 * t19229 + t17573)) * t17316 - t17585 * ((t17765 * t18017 + t17776 * t18023) * t17718 + (t18316 * t18023 + (-t18557 + t19229) * t18017) * t17712)) / (((-0.2e1 * t18440 + t19044) * t19100 + t17684) * t17991 + ((pkin(3) * (t18640 * t19047 + t17694) + t18955) * t18004 - t19252) * t18023 + (t17694 * t19118 - t18393 + t18948) * t19404 + t17460);
t16919 = (-t17318 * ((-t17714 * t17778 + t17720 * t18314) * t18027 - t18021 * (t17714 * t17769 - t17720 * t19227 + t17575)) - t17587 * ((t17769 * t18021 + t17778 * t18027) * t17720 + (t18314 * t18027 + (-t18557 + t19227) * t18021) * t17714)) / (((-0.2e1 * t18438 + t19032) * t19100 + t17684) * t17993 + ((pkin(3) * (t18640 * t19035 + t17696) + t18953) * t18004 - t19250) * t18027 + (t17696 * t19114 - t18391 + t18946) * t19404 + t17462);
t16918 = (-t17317 * ((-t17713 * t17777 + t17719 * t18315) * t18025 - t18019 * (t17713 * t17767 - t17719 * t19228 + t17574)) - ((t17767 * t18019 + t17777 * t18025) * t17719 + (t18315 * t18025 + (-t18557 + t19228) * t18019) * t17713) * t17586) / (((-0.2e1 * t18439 + t19038) * t19100 + t17684) * t17992 + ((pkin(3) * (t18640 * t19041 + t17695) + t18954) * t18004 - t19251) * t18025 + (t17695 * t19116 - t18392 + t18947) * t19404 + t17461);
t16887 = (-t17000 * t17321 - t17001 * t17590) * t17127;
t16886 = (-t16997 * t17589 - t16999 * t17320) * t17126;
t16885 = (-t16996 * t17588 - t16998 * t17319) * t17125;
t16884 = (-t16992 * t17587 - t16995 * t17318) * t17124;
t16883 = (-t16991 * t17586 - t16994 * t17317) * t17123;
t16882 = (-t16990 * t17585 - t16993 * t17316) * t17122;
t1 = [(t16717 * t19333 + t16718 * t19332 + t16719 * t19331 + t16723 * t19327 + t16724 * t19326 + t16725 * t19325) * MDP(1) + (t16708 * t19510 + t16709 * t19509 + t16710 * t19508 + t16711 * t19507 + t16712 * t19506 + t16713 * t19505) * MDP(2) + (t16951 * t18169 + t16952 * t18167 + t16953 * t18165 + t16957 * t18163 + t16958 * t18161 + t16959 * t18159 + t18586 * t18823 + t18587 * t18826 + t18588 * t18829 + t18589 * t18832 + t18590 * t18835 + t18591 * t18838) * t19396 + (t16951 * t18170 + t16952 * t18168 + t16953 * t18166 + t16957 * t18164 + t16958 * t18162 + t16959 * t18160 - t18586 * t18824 - t18587 * t18827 - t18588 * t18830 - t18589 * t18833 - t18590 * t18836 - t18591 * t18839) * t19395 + (t18023 * t18328 + t18025 * t18327 + t18027 * t18326 + t18035 * t18322 + t18037 * t18321 + t18039 * t18320 + t18091 * t18586 + t18093 * t18587 + t18095 * t18588 + t18097 * t18589 + t18099 * t18590 + t18101 * t18591) * t19394 + (t18092 * t18586 + t18094 * t18587 + t18096 * t18588 + t18098 * t18589 + t18100 * t18590 + t18102 * t18591 + t19553 + t19554 + t19555 + t19556 + t19557 + t19558) * t19393 + (-t19543 - t19539 - t19535 - t19531 - t19527 - t19523 + t18586 * t18134 + t18587 * t18136 + t18588 * t18138 + t18589 * t18140 + t18590 * t18142 + t18591 * t18144 + (t17164 * t18518 + t17166 * t18515 + t17168 * t18512 + t17176 * t18503 + t17178 * t18500 + t17180 * t18497) * t18007) * t19392 + (-t19544 - t19540 - t19536 - t19532 - t19528 - t19524 - t18586 * t18133 - t18587 * t18135 - t18588 * t18137 - t18589 * t18139 - t18590 * t18141 - t18591 * t18143 + (-t18320 - t18321 - t18322 - t18326 - t18327 - t18328) * t18007) * t19391 + (-t16694 * t19292 - t16696 * t19289 - t16698 * t19286 - t16703 * t19283 - t16705 * t19280 - t16707 * t19277 + (t16694 * t19510 + t16696 * t19509 + t16698 * t19508 + t16703 * t19507 + t16705 * t19506 + t16707 * t19505) * t18007) * MDP(9) + (t16951 * t18607 + t16952 * t18605 + t16953 * t18603 + t16957 * t18601 + t16958 * t18599 + t16959 * t18597 - t18586 * t18275 - t18587 * t18277 - t18588 * t18279 - t18589 * t18281 - t18590 * t18283 - t18591 * t18285 - t19525 - t19529 - t19533 - t19537 - t19541 - t19545) * MDP(10) + (t16951 * t18608 + t16952 * t18606 + t16953 * t18604 + t16957 * t18602 + t16958 * t18600 + t16959 * t18598 - t18586 * t18274 - t18587 * t18276 - t18588 * t18278 - t18589 * t18280 - t18590 * t18282 - t18591 * t18284 - t19526 - t19530 - t19534 - t19538 - t19542 - t19546) * MDP(11) + (t17297 * t19159 - t19246 + t17510 + (-t18695 + t18744) * t17978) * MDP(18) + (-t17298 * t19189 + t18145 + t18957) * MDP(19) + (t17266 * t17979 + t17410 + (t19245 + (t19233 + t19235) * t17873) * t17982) * MDP(20); (t16717 * t19336 + t16718 * t19335 + t16719 * t19334 + t16723 * t19330 + t16724 * t19329 + t16725 * t19328) * MDP(1) + (t16708 * t19318 + t16709 * t19314 + t16710 * t19310 + t16711 * t19306 + t16712 * t19302 + t16713 * t19298) * MDP(2) + (t16948 * t18169 + t16949 * t18167 + t16950 * t18165 + t16954 * t18163 + t16955 * t18161 + t16956 * t18159 + t18467 + t18469 + t18471 + t18473 + t18475 + t18477) * t19396 + (t16948 * t18170 + t16949 * t18168 + t16950 * t18166 + t16954 * t18164 + t16955 * t18162 + t16956 * t18160 - t18468 - t18470 - t18472 - t18474 - t18476 - t18478) * t19395 + (t18023 * t18331 + t18025 * t18330 + t18027 * t18329 + t18035 * t18325 + t18037 * t18324 + t18039 * t18323 + t18079 + t18081 + t18083 + t18085 + t18087 + t18089) * t19394 + (t19559 + t19560 + t19561 + t19562 + t19563 + t19564) * t19393 + ((t17158 * t18518 + t17160 * t18515 + t17162 * t18512 + t17170 * t18503 + t17172 * t18500 + t17174 * t18497) * t18007 + t19511 + t19513 + t19515 + t19517 + t19519 + t19521) * t19392 + ((-t18323 - t18324 - t18325 - t18329 - t18330 - t18331) * t18007 + t19512 + t19514 + t19516 + t19518 + t19520 + t19522) * t19391 + (-t16694 * t19552 - t16696 * t19551 - t16698 * t19550 - t16703 * t19549 - t16705 * t19548 - t16707 * t19547 + (t16694 * t19318 + t16696 * t19314 + t16698 * t19310 + t16703 * t19306 + t16705 * t19302 + t16707 * t19298) * t18007) * MDP(9) + (t16948 * t18607 + t16949 * t18605 + t16950 * t18603 + t16954 * t18601 + t16955 * t18599 + t16956 * t18597 - t17158 * t18273 - t17160 * t18271 - t17162 * t18269 - t17170 * t18267 - t17172 * t18265 - t17174 * t18263 - t18200 - t18201 - t18202 - t18206 - t18207 - t18208) * MDP(10) + (t16948 * t18608 + t16949 * t18606 + t16950 * t18604 + t16954 * t18602 + t16955 * t18600 + t16956 * t18598 - t17158 * t18272 - t17160 * t18270 - t17162 * t18268 - t17170 * t18266 - t17172 * t18264 - t17174 * t18262 - t18197 - t18198 - t18199 - t18203 - t18204 - t18205) * MDP(11) + (t18752 + t17297 * t17625 + t17526 + (-t18742 - t19238) * t17656) * MDP(18) + (t17298 * t17624 - t17299 + (-t18745 + (-t17497 + t19236) * t17980) * t17982) * MDP(19) + (-t17266 * t19173 + t18219 + t18966) * MDP(20); (t19486 + t19487 + t19488 + t19489 + t19490 + t19491) * MDP(10) + (t19480 + t19481 + t19482 + t19483 + t19484 + t19485) * MDP(11) + (t17297 * t17627 + t18184 + t18956) * MDP(18) + (t17298 * t17626 + t18958 - t19504) * MDP(19) + (t17266 * t19150 + t18218 + t18965) * MDP(20) + ((-t18017 * t19348 - t18019 * t19347 - t18021 * t19346 - t18029 * t19342 - t18031 * t19341 - t18033 * t19340) * MDP(10) + (-t18023 * t19348 - t18025 * t19347 - t18027 * t19346 - t18035 * t19342 - t18037 * t19341 - t18039 * t19340 - t19015 - t19021 - t19027 - t19036 - t19042 - t19048) * MDP(11)) * t19098 + ((t18244 + t18246 + t18248 + t18250 + t18252 + t18254) * MDP(3) + (t18245 + t18247 + t18249 + t18251 + t18253 + t18255) * MDP(4)) * t18004 + ((t17564 + t17565 + t17566 + t17567 + t17568 + t17569) * t18681 + t19455 + t19456 + t19457 + t19458 + t19459 + t19460) * MDP(1); (t16717 * t16966 + t16718 * t16967 + t16719 * t16968 + t16723 * t16969 + t16724 * t16970 + t16725 * t16971) * MDP(1) + (-t16708 * t18764 - t16709 * t18762 - t16710 * t18760 - t16711 * t18758 - t16712 * t18756 - t16713 * t18754) * MDP(2) + (t16966 * t18254 + t16967 * t18252 + t16968 * t18250 + t16969 * t18248 + t16970 * t18246 + t16971 * t18244 - t17382 * t18477 - t17383 * t18475 - t17384 * t18473 - t17385 * t18471 - t17386 * t18469 - t17387 * t18467) * t19396 + (t16966 * t18255 + t16967 * t18253 + t16968 * t18251 + t16969 * t18249 + t16970 * t18247 + t16971 * t18245 + t17382 * t18478 + t17383 * t18476 + t17384 * t18474 + t17385 * t18472 + t17386 * t18470 + t17387 * t18468) * t19395 + (-(t17174 * t18338 + t18079) * t17387 - (t17172 * t18341 + t18081) * t17386 - (t17170 * t18344 + t18083) * t17385 - (t17162 * t18347 + t18085) * t17384 - (t17160 * t18350 + t18087) * t17383 - (t17158 * t18353 + t18089) * t17382) * t19394 + (-t19564 * t17382 - t19563 * t17383 - t19562 * t17384 - t19561 * t17385 - t19560 * t17386 - t19559 * t17387) * t19393 + (-t19511 * t17387 - t19513 * t17386 - t19515 * t17385 - t19517 * t17384 - t19519 * t17383 - t19521 * t17382 + (-t17158 * t18354 - t17160 * t18351 - t17162 * t18348 - t17170 * t18345 - t17172 * t18342 - t17174 * t18339) * t18007) * t19392 + (-t19512 * t17387 - t19514 * t17386 - t19516 * t17385 - t19518 * t17384 - t19520 * t17383 - t19522 * t17382 + (t17158 * t18355 + t17160 * t18352 + t17162 * t18349 + t17170 * t18346 + t17172 * t18343 + t17174 * t18340) * t18007) * t19391 + (t17158 * t18863 + t17160 * t18862 + t17162 * t18861 + t17170 * t18860 + t17172 * t18859 + t17174 * t18858 + (-t16694 * t18764 - t16696 * t18762 - t16698 * t18760 - t16703 * t18758 - t16705 * t18756 - t16707 * t18754) * t18007) * MDP(9) + (t18967 * t16971 + t18969 * t16970 + t18971 * t16969 + t18973 * t16968 + t18975 * t16967 + t18977 * t16966 - (-t18404 * t19547 - t18200) * t17387 - (-t18406 * t19548 - t18201) * t17386 - (-t18408 * t19549 - t18202) * t17385 - (-t18410 * t19550 - t18206) * t17384 - (-t18412 * t19551 - t18207) * t17383 - (-t18414 * t19552 - t18208) * t17382) * MDP(10) + (t18968 * t16971 + t18970 * t16970 + t18972 * t16969 + t18974 * t16968 + t18976 * t16967 + t18978 * t16966 - (-t18403 * t19547 - t18197) * t17387 - (-t18405 * t19548 - t18198) * t17386 - (-t18407 * t19549 - t18199) * t17385 - (-t18409 * t19550 - t18203) * t17384 - (-t18411 * t19551 - t18204) * t17383 - (-t18413 * t19552 - t18205) * t17382) * MDP(11) + (t17497 * t19159 + (t17654 * t17979 - t17873 * t19189) * t17656) * MDP(12) + (t17304 * t17979 + t17410 + (-t19245 + (-t19233 + t19235) * t17873) * t17982) * MDP(13) + (-t17354 * t19189 - t18145 + t18957) * MDP(14) + (-t17496 * t19189 + (-t17656 * t17979 + t17873 * t19159) * t17654) * MDP(15) + (t17467 * t19159 + t19246 + t17510 + (-t18695 - t18744) * t17978) * MDP(16) + (t17979 * t18999 + (-t17654 * t17981 + t17656 * t17978) * t17873) * t17982 * MDP(17); (t16717 * t16972 + t16718 * t16973 + t16719 * t16974 + t16723 * t16976 + t16724 * t16977 + t16725 * t16975) * MDP(1) + (t16708 * t18763 + t16709 * t18761 + t16710 * t18759 + t16711 * t18757 + t16712 * t18755 + t16713 * t18753) * MDP(2) + (t16972 * t18254 + t16973 * t18252 + t16974 * t18250 + t16975 * t18244 + t16976 * t18248 + t16977 * t18246 + t18024 * t18526 + t18026 * t18525 + t18028 * t18524 + t18036 * t18523 + t18038 * t18522 + t18040 * t18521) * t19396 + (t16972 * t18255 + t16973 * t18253 + t16974 * t18251 + t16975 * t18245 + t16976 * t18249 + t16977 * t18247 - t18018 * t18526 - t18020 * t18525 - t18022 * t18524 - t18030 * t18523 - t18032 * t18522 - t18034 * t18521) * t19395 + (-(-t17180 * t18338 - t18115 * t19505) * t17387 - (-t17178 * t18341 - t18117 * t19506) * t17386 - (-t17176 * t18344 - t18119 * t19507) * t17385 - (-t17168 * t18347 - t18121 * t19508) * t17384 - (-t17166 * t18350 - t18123 * t19509) * t17383 - (-t17164 * t18353 - t18125 * t19510) * t17382) * t19394 + (-(-t18116 * t19505 - t19553) * t17387 - (-t18118 * t19506 - t19554) * t17386 - (-t18120 * t19507 - t19555) * t17385 - (-t18122 * t19508 - t19556) * t17384 - (-t18124 * t19509 - t19557) * t17383 - (-t18126 * t19510 - t19558) * t17382) * t19393 + (-(-t18186 * t19505 + t19523) * t17387 - (-t18188 * t19506 + t19527) * t17386 - (-t18190 * t19507 + t19531) * t17385 - (-t18192 * t19508 + t19535) * t17384 - (-t18194 * t19509 + t19539) * t17383 - (-t18196 * t19510 + t19543) * t17382 + (t17164 * t18354 + t17166 * t18351 + t17168 * t18348 + t17176 * t18345 + t17178 * t18342 + t17180 * t18339) * t18007) * t19392 + (-(t18185 * t19505 + t19524) * t17387 - (t18187 * t19506 + t19528) * t17386 - (t18189 * t19507 + t19532) * t17385 - (t18191 * t19508 + t19536) * t17384 - (t18193 * t19509 + t19540) * t17383 - (t18195 * t19510 + t19544) * t17382 + (-t17164 * t18355 - t17166 * t18352 - t17168 * t18349 - t17176 * t18346 - t17178 * t18343 - t17180 * t18340) * t18007) * t19391 + (-t17164 * t18863 - t17166 * t18862 - t17168 * t18861 - t17176 * t18860 - t17178 * t18859 - t17180 * t18858 + (t16694 * t18763 + t16696 * t18761 + t16698 * t18759 + t16703 * t18757 + t16705 * t18755 + t16707 * t18753) * t18007) * MDP(9) + (t18969 * t16977 + t18971 * t16976 + t18967 * t16975 + t18973 * t16974 + t18975 * t16973 + t18977 * t16972 - (t18418 * t19505 + t19525) * t17387 - (t18419 * t19506 + t19529) * t17386 - (t18420 * t19507 + t19533) * t17385 - (t18424 * t19508 + t19537) * t17384 - (t18425 * t19509 + t19541) * t17383 - (t18426 * t19510 + t19545) * t17382) * MDP(10) + (t18970 * t16977 + t18972 * t16976 + t18968 * t16975 + t18974 * t16974 + t18976 * t16973 + t18978 * t16972 - (t18415 * t19505 + t19526) * t17387 - (t18416 * t19506 + t19530) * t17386 - (t18417 * t19507 + t19534) * t17385 - (t18421 * t19508 + t19538) * t17384 - (t18422 * t19509 + t19542) * t17383 - (t18423 * t19510 + t19546) * t17382) * MDP(11) + (t17497 * t17625 + (t17624 * t17873 - t17654 * t19173) * t17656) * MDP(12) + (-t17304 * t19173 - t18219 + t18966) * MDP(13) + (t17354 * t17624 - t17299 + (t18745 + (-t17497 - t19236) * t17980) * t17982) * MDP(14) + (t17496 * t17624 + (t17625 * t17873 + t17656 * t19173) * t17654) * MDP(15) + (-t18752 + t17467 * t17625 + t17526 + (-t18742 + t19238) * t17656) * MDP(16) + (-t17949 * t18681 + (-t17624 * t17656 - t17625 * t17654) * t17873) * MDP(17); (t16920 * t16624 + t16918 * t16625 + t16919 * t16626 + t16922 * t16630 + t16921 * t16631 + t16923 * t16632) * MDP(10) + (t16920 * t16627 + t16918 * t16628 + t16919 * t16629 + t16922 * t16633 + t16921 * t16634 + t16923 * t16635) * MDP(11) + ((-t18023 * t18337 - t18025 * t18336 - t18027 * t18335 - t18035 * t18334 - t18037 * t18333 - t18039 * t18332) * MDP(5) + (-t16822 * t19324 - t16823 * t19323 - t16824 * t19322 - t16825 * t19321 - t16826 * t19320 - t16827 * t19319) * MDP(6) + (MDP(5) * t18115 + MDP(6) * t18116) * t16923 + (MDP(5) * t18119 + MDP(6) * t18120) * t16922 + (MDP(5) * t18117 + MDP(6) * t18118) * t16921 + (MDP(5) * t18125 + MDP(6) * t18126) * t16920 + (MDP(5) * t18121 + MDP(6) * t18122) * t16919 + (MDP(5) * t18123 + MDP(6) * t18124) * t16918) * t17984 + (t16694 * t16920 + t16696 * t16918 + t16698 * t16919 + t16703 * t16922 + t16705 * t16921 + t16707 * t16923) * MDP(9) * t18007 + (t17354 * t17626 + t18958 + t19504) * MDP(14) + ((t16918 * t19375 + t16919 * t19373 + t16920 * t19377 + t16921 * t19369 + t16922 * t19371 + t16923 * t19367) * MDP(3) + (-t16918 * t19376 - t16919 * t19374 - t16920 * t19378 - t16921 * t19370 - t16922 * t19372 - t16923 * t19368) * MDP(4) + (MDP(3) * t18244 + MDP(4) * t18245) * t16887 + (MDP(3) * t18246 + MDP(4) * t18247) * t16886 + (MDP(3) * t18248 + MDP(4) * t18249) * t16885 + (MDP(3) * t18250 + MDP(4) * t18251) * t16884 + (MDP(3) * t18252 + MDP(4) * t18253) * t16883 + (MDP(3) * t18254 + MDP(4) * t18255) * t16882) * t18004 + (-MDP(10) * t16798 - MDP(11) * t16802) * t16920 * t18934 + (-MDP(10) * t16799 - MDP(11) * t16803) * t16918 * t18933 + (-MDP(10) * t16800 - MDP(11) * t16801) * t16919 * t18932 + (-MDP(10) * t16810 - MDP(11) * t16813) * t16922 * t18931 + (-MDP(10) * t16811 - MDP(11) * t16814) * t16921 * t18930 + (-MDP(10) * t16812 - MDP(11) * t16815) * t16923 * t18929 + (t16708 * t16920 + t16709 * t16918 + t16710 * t16919 + t16711 * t16922 + t16712 * t16921 + t16713 * t16923) * MDP(2) + (t16717 * MDP(1) + MDP(10) * t18977 + MDP(11) * t18978) * t16882 + (t16725 * MDP(1) + MDP(10) * t18967 + MDP(11) * t18968) * t16887 + (t16724 * MDP(1) + MDP(10) * t18969 + MDP(11) * t18970) * t16886 + (t16723 * MDP(1) + MDP(10) * t18971 + MDP(11) * t18972) * t16885 + (t16719 * MDP(1) + MDP(10) * t18973 + MDP(11) * t18974) * t16884 + (t16718 * MDP(1) + MDP(10) * t18975 + MDP(11) * t18976) * t16883 + (t17467 * t17627 - t18184 + t18956) * MDP(16) + ((t18017 * t18857 + t18019 * t18854 + t18021 * t18851 + t18029 * t18848 + t18031 * t18845 + t18033 * t18842) * MDP(7) + (t18023 * t18857 + t18025 * t18854 + t18027 * t18851 + t18035 * t18848 + t18037 * t18845 + t18039 * t18842) * MDP(8) + (MDP(7) * t18186 - MDP(8) * t18185) * t16923 + (MDP(7) * t18190 - MDP(8) * t18189) * t16922 + (MDP(7) * t18188 - MDP(8) * t18187) * t16921 + (MDP(7) * t18196 - MDP(8) * t18195) * t16920 + (MDP(7) * t18192 - MDP(8) * t18191) * t16919 + (MDP(7) * t18194 - MDP(8) * t18193) * t16918 + ((-t18023 * t18520 - t18025 * t18517 - t18027 * t18514 - t18035 * t18505 - t18037 * t18502 - t18039 * t18499) * MDP(7) + (t18332 + t18333 + t18334 + t18335 + t18336 + t18337) * MDP(8)) * t18007) * t18003 + (t17983 * t18695 + (-t17626 * t17656 - t17627 * t17654) * t17873) * MDP(17) + (t17496 * t17626 + (t17627 * t17873 - t18743) * t17654) * MDP(15) + (MDP(10) * t18414 + MDP(11) * t18413 + t16694 * MDP(9)) * t19324 + (MDP(10) * t18404 + MDP(11) * t18403 + t16707 * MDP(9)) * t19319 + (MDP(10) * t18406 + MDP(11) * t18405 + t16705 * MDP(9)) * t19320 + (MDP(10) * t18408 + MDP(11) * t18407 + t16703 * MDP(9)) * t19321 + (MDP(10) * t18410 + MDP(11) * t18409 + t16698 * MDP(9)) * t19322 + (MDP(10) * t18412 + MDP(11) * t18411 + t16696 * MDP(9)) * t19323 + (t17497 * t17627 + (t17626 * t17873 + t17654 * t19150) * t17656) * MDP(12) + (t17304 * t19150 - t18218 + t18965) * MDP(13);];
taucX  = t1;
