% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PRRRRR6V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x21]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-18 12:11
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-18 07:37:34
% EndTime: 2019-05-18 08:43:02
% DurationCPUTime: 4135.81s
% Computational Cost: add. (43251883->5414), mult. (99495976->9486), div. (71796->72), fcn. (65040341->74), ass. (0->3209)
t11201 = xP(5);
t11122 = sin(t11201);
t13162 = xP(6);
t11121 = sin(t13162);
t11210 = koppelP(6,2);
t12365 = cos(t13162);
t13171 = koppelP(6,1);
t11735 = t13171 * t12365;
t11310 = -t11121 * t11210 + t11735;
t11124 = cos(t11201);
t11204 = koppelP(6,3);
t12568 = t11124 * t11204;
t10580 = t11122 * t11310 - t12568;
t10940 = t11121 * t13171 + t11210 * t12365;
t11202 = xP(4);
t11123 = sin(t11202);
t11125 = cos(t11202);
t13306 = t10580 * t11123 + t10940 * t11125;
t10292 = t10580 * t11125 - t10940 * t11123;
t11211 = koppelP(5,2);
t13172 = koppelP(5,1);
t11736 = t13172 * t12365;
t11311 = -t11121 * t11211 + t11736;
t11205 = koppelP(5,3);
t12567 = t11124 * t11205;
t10581 = t11122 * t11311 - t12567;
t10941 = t11121 * t13172 + t11211 * t12365;
t13305 = t10581 * t11123 + t10941 * t11125;
t10293 = t10581 * t11125 - t10941 * t11123;
t11212 = koppelP(4,2);
t13173 = koppelP(4,1);
t11737 = t13173 * t12365;
t11312 = -t11121 * t11212 + t11737;
t11206 = koppelP(4,3);
t12566 = t11124 * t11206;
t10582 = t11122 * t11312 - t12566;
t10942 = t11121 * t13173 + t11212 * t12365;
t13304 = t10582 * t11123 + t10942 * t11125;
t10294 = t10582 * t11125 - t10942 * t11123;
t11213 = koppelP(3,2);
t13174 = koppelP(3,1);
t11738 = t13174 * t12365;
t11313 = -t11121 * t11213 + t11738;
t11207 = koppelP(3,3);
t12565 = t11124 * t11207;
t10583 = t11122 * t11313 - t12565;
t10943 = t11121 * t13174 + t11213 * t12365;
t13303 = t10583 * t11123 + t10943 * t11125;
t10295 = t10583 * t11125 - t10943 * t11123;
t11214 = koppelP(2,2);
t13175 = koppelP(2,1);
t11739 = t13175 * t12365;
t11314 = -t11121 * t11214 + t11739;
t11208 = koppelP(2,3);
t12564 = t11124 * t11208;
t10584 = t11122 * t11314 - t12564;
t10944 = t11121 * t13175 + t11214 * t12365;
t13302 = t10584 * t11123 + t10944 * t11125;
t10296 = t10584 * t11125 - t10944 * t11123;
t11215 = koppelP(1,2);
t13176 = koppelP(1,1);
t11740 = t13176 * t12365;
t11315 = -t11121 * t11215 + t11740;
t11209 = koppelP(1,3);
t12563 = t11124 * t11209;
t10585 = t11122 * t11315 - t12563;
t10945 = t11121 * t13176 + t11215 * t12365;
t13301 = t10585 * t11123 + t10945 * t11125;
t10297 = t10585 * t11125 - t10945 * t11123;
t11143 = sin(pkin(10));
t11147 = cos(pkin(10));
t11164 = legFrame(1,1);
t11086 = sin(t11164);
t11098 = cos(t11164);
t11182 = legFrame(1,2);
t11111 = sin(t11182);
t11117 = cos(t11182);
t11195 = xDP(6);
t11200 = xDP(1);
t11196 = xDP(5);
t12338 = t11196 * t13176;
t12344 = t11195 * t13176;
t12404 = t11196 * t11215;
t12410 = t11196 * t11209;
t12557 = t11124 * t11215;
t12593 = t11117 * ((t11122 * t12338 + t11195 * t12557) * t12365 - t11124 * t12410 - t11200 + (-t11122 * t12404 + t11124 * t12344) * t11121);
t11197 = xDP(4);
t10989 = t11122 * t11197 + t11195;
t11511 = t11121 * t10989;
t10331 = t10989 * t11740 - t11197 * t12563 - t11215 * t11511;
t11199 = xDP(2);
t11787 = -t11122 * t11195 - t11197;
t11258 = (t11124 * t12338 + t11215 * t11787) * t12365 - t11121 * (t11124 * t12404 + t11197 * t13176) - (t11121 * t12344 - t12410) * t11122;
t9903 = t10331 * t11125 + t11123 * t11258 + t11199;
t11198 = xDP(3);
t9909 = t10331 * t11123 - t11125 * t11258 + t11198;
t9579 = -t12593 + (t11086 * t9903 - t11098 * t9909) * t11111;
t9660 = t11086 * t9909 + t11098 * t9903;
t13300 = t11143 * t9579 - t11147 * t9660;
t11163 = legFrame(2,1);
t11085 = sin(t11163);
t11097 = cos(t11163);
t11181 = legFrame(2,2);
t11110 = sin(t11181);
t11116 = cos(t11181);
t12337 = t11196 * t13175;
t12343 = t11195 * t13175;
t12405 = t11196 * t11214;
t12411 = t11196 * t11208;
t12558 = t11124 * t11214;
t12594 = t11116 * ((t11122 * t12337 + t11195 * t12558) * t12365 - t11124 * t12411 - t11200 + (-t11122 * t12405 + t11124 * t12343) * t11121);
t10330 = t10989 * t11739 - t11197 * t12564 - t11214 * t11511;
t11259 = (t11124 * t12337 + t11214 * t11787) * t12365 - t11121 * (t11124 * t12405 + t11197 * t13175) - (t11121 * t12343 - t12411) * t11122;
t9902 = t10330 * t11125 + t11123 * t11259 + t11199;
t9908 = t10330 * t11123 - t11125 * t11259 + t11198;
t9578 = -t12594 + (t11085 * t9902 - t11097 * t9908) * t11110;
t9659 = t11085 * t9908 + t11097 * t9902;
t13299 = t11143 * t9578 - t11147 * t9659;
t11162 = legFrame(3,1);
t11084 = sin(t11162);
t11096 = cos(t11162);
t11180 = legFrame(3,2);
t11109 = sin(t11180);
t11115 = cos(t11180);
t12336 = t11196 * t13174;
t12342 = t11195 * t13174;
t12406 = t11196 * t11213;
t12412 = t11196 * t11207;
t12559 = t11124 * t11213;
t12595 = t11115 * ((t11122 * t12336 + t11195 * t12559) * t12365 - t11124 * t12412 - t11200 + (-t11122 * t12406 + t11124 * t12342) * t11121);
t10329 = t10989 * t11738 - t11197 * t12565 - t11213 * t11511;
t11260 = (t11124 * t12336 + t11213 * t11787) * t12365 - t11121 * (t11124 * t12406 + t11197 * t13174) - (t11121 * t12342 - t12412) * t11122;
t9901 = t10329 * t11125 + t11123 * t11260 + t11199;
t9907 = t10329 * t11123 - t11125 * t11260 + t11198;
t9577 = -t12595 + (t11084 * t9901 - t11096 * t9907) * t11109;
t9658 = t11084 * t9907 + t11096 * t9901;
t13298 = t11143 * t9577 - t11147 * t9658;
t11161 = legFrame(4,1);
t11083 = sin(t11161);
t11095 = cos(t11161);
t11179 = legFrame(4,2);
t11108 = sin(t11179);
t11114 = cos(t11179);
t12335 = t11196 * t13173;
t12341 = t11195 * t13173;
t12407 = t11196 * t11212;
t12413 = t11196 * t11206;
t12560 = t11124 * t11212;
t12596 = t11114 * ((t11122 * t12335 + t11195 * t12560) * t12365 - t11124 * t12413 - t11200 + (-t11122 * t12407 + t11124 * t12341) * t11121);
t10328 = t10989 * t11737 - t11197 * t12566 - t11212 * t11511;
t11261 = (t11124 * t12335 + t11212 * t11787) * t12365 - t11121 * (t11124 * t12407 + t11197 * t13173) - (t11121 * t12341 - t12413) * t11122;
t9900 = t10328 * t11125 + t11123 * t11261 + t11199;
t9906 = t10328 * t11123 - t11125 * t11261 + t11198;
t9576 = -t12596 + (t11083 * t9900 - t11095 * t9906) * t11108;
t9657 = t11083 * t9906 + t11095 * t9900;
t13297 = t11143 * t9576 - t11147 * t9657;
t11160 = legFrame(5,1);
t11082 = sin(t11160);
t11094 = cos(t11160);
t11178 = legFrame(5,2);
t11107 = sin(t11178);
t11113 = cos(t11178);
t12334 = t11196 * t13172;
t12340 = t11195 * t13172;
t12408 = t11196 * t11211;
t12414 = t11196 * t11205;
t12561 = t11124 * t11211;
t12597 = t11113 * ((t11122 * t12334 + t11195 * t12561) * t12365 - t11124 * t12414 - t11200 + (-t11122 * t12408 + t11124 * t12340) * t11121);
t10327 = t10989 * t11736 - t11197 * t12567 - t11211 * t11511;
t11262 = (t11124 * t12334 + t11211 * t11787) * t12365 - t11121 * (t11124 * t12408 + t11197 * t13172) - (t11121 * t12340 - t12414) * t11122;
t9899 = t10327 * t11125 + t11123 * t11262 + t11199;
t9905 = t10327 * t11123 - t11125 * t11262 + t11198;
t9575 = -t12597 + (t11082 * t9899 - t11094 * t9905) * t11107;
t9656 = t11082 * t9905 + t11094 * t9899;
t13296 = t11143 * t9575 - t11147 * t9656;
t11159 = legFrame(6,1);
t11081 = sin(t11159);
t11093 = cos(t11159);
t11177 = legFrame(6,2);
t11106 = sin(t11177);
t11112 = cos(t11177);
t12333 = t11196 * t13171;
t12339 = t11195 * t13171;
t12409 = t11196 * t11210;
t12415 = t11196 * t11204;
t12562 = t11124 * t11210;
t12598 = t11112 * ((t11122 * t12333 + t11195 * t12562) * t12365 - t11124 * t12415 - t11200 + (-t11122 * t12409 + t11124 * t12339) * t11121);
t10326 = t10989 * t11735 - t11197 * t12568 - t11210 * t11511;
t11263 = (t11124 * t12333 + t11210 * t11787) * t12365 - t11121 * (t11124 * t12409 + t11197 * t13171) - (t11121 * t12339 - t12415) * t11122;
t9898 = t10326 * t11125 + t11123 * t11263 + t11199;
t9904 = t10326 * t11123 - t11125 * t11263 + t11198;
t9574 = -t12598 + (t11081 * t9898 - t11093 * t9904) * t11106;
t9655 = t11081 * t9904 + t11093 * t9898;
t13295 = t11143 * t9574 - t11147 * t9655;
t11150 = cos(pkin(4));
t11144 = sin(pkin(6));
t11073 = t11144 * pkin(9);
t12364 = pkin(3) * t11073;
t11149 = cos(pkin(5));
t12629 = (t11149 + 0.1e1) * (t11149 - 0.1e1);
t11590 = t12364 * t12629;
t11467 = t11150 * t11590;
t10807 = 0.2e1 * t11467;
t11171 = cos(qJ(3,6));
t11133 = t11171 ^ 2;
t11166 = sin(qJ(2,6));
t11172 = cos(qJ(2,6));
t12485 = t11149 * t11172;
t11973 = t11144 * t12485;
t11777 = pkin(9) * t11973;
t11145 = sin(pkin(5));
t11146 = sin(pkin(4));
t12532 = t11145 * t11146;
t11218 = pkin(3) ^ 2;
t11216 = pkin(9) ^ 2;
t11148 = cos(pkin(6));
t11127 = t11148 ^ 2;
t12403 = t11216 * t11127;
t11795 = -t11216 + t12403;
t11019 = t11218 + t11795;
t13142 = -t11019 / 0.2e1;
t12122 = (pkin(3) * t11777 + t11166 * t13142) * t12532;
t10269 = (t10807 - 0.2e1 * t12122) * t11133;
t13097 = pkin(9) * t11127;
t12252 = pkin(9) - t13097;
t11165 = sin(qJ(3,6));
t12538 = t11144 * t11165;
t10953 = pkin(2) * t12538 + t12252;
t12528 = t11145 * t11166;
t10776 = t10953 * t12528;
t12531 = t11145 * t11149;
t11030 = pkin(3) * t12531;
t13094 = pkin(9) * t11148;
t11059 = pkin(8) + t13094;
t11129 = t11149 ^ 2;
t13141 = t11129 - 0.1e1;
t12183 = t11165 * t13141;
t10541 = t11059 * t12183 + t11030;
t11269 = t10541 * t11172;
t12262 = t11129 * t11073;
t11889 = pkin(3) * t12262;
t12539 = t11144 * t11149;
t12260 = pkin(9) * t12539;
t11778 = t11145 * t12260;
t11546 = t11059 * t11778;
t10783 = t11165 * t11546;
t11103 = pkin(2) * t11165;
t10998 = t11103 + t11073;
t12377 = pkin(3) * t10998 + t10783;
t13095 = pkin(9) * t11146;
t11923 = (t11144 * t11269 + t10776) * t13095 + t10269 + (-t11889 + t12377) * t11150;
t11173 = cos(qJ(3,5));
t11134 = t11173 ^ 2;
t11168 = sin(qJ(2,5));
t11174 = cos(qJ(2,5));
t12484 = t11149 * t11174;
t11972 = t11144 * t12484;
t11776 = pkin(9) * t11972;
t12121 = (pkin(3) * t11776 + t11168 * t13142) * t12532;
t10270 = (t10807 - 0.2e1 * t12121) * t11134;
t11167 = sin(qJ(3,5));
t12537 = t11144 * t11167;
t10954 = pkin(2) * t12537 + t12252;
t12526 = t11145 * t11168;
t10777 = t10954 * t12526;
t12180 = t13141 * t11167;
t10542 = t11059 * t12180 + t11030;
t11268 = t10542 * t11174;
t10784 = t11167 * t11546;
t11104 = pkin(2) * t11167;
t10999 = t11104 + t11073;
t12376 = pkin(3) * t10999 + t10784;
t11922 = (t11144 * t11268 + t10777) * t13095 + t10270 + (-t11889 + t12376) * t11150;
t11175 = cos(qJ(3,4));
t11135 = t11175 ^ 2;
t11170 = sin(qJ(2,4));
t11176 = cos(qJ(2,4));
t12483 = t11149 * t11176;
t11971 = t11144 * t12483;
t11775 = pkin(9) * t11971;
t12120 = (pkin(3) * t11775 + t11170 * t13142) * t12532;
t10271 = (t10807 - 0.2e1 * t12120) * t11135;
t11169 = sin(qJ(3,4));
t12536 = t11144 * t11169;
t10955 = pkin(2) * t12536 + t12252;
t12524 = t11145 * t11170;
t10778 = t10955 * t12524;
t12182 = t11169 * t13141;
t10543 = t11059 * t12182 + t11030;
t11267 = t10543 * t11176;
t10785 = t11169 * t11546;
t11105 = pkin(2) * t11169;
t11000 = t11105 + t11073;
t12375 = pkin(3) * t11000 + t10785;
t11921 = (t11144 * t11267 + t10778) * t13095 + t10271 + (-t11889 + t12375) * t11150;
t11189 = cos(qJ(3,3));
t11139 = t11189 ^ 2;
t11190 = cos(qJ(2,3));
t12476 = t11149 * t11190;
t11970 = t11144 * t12476;
t11774 = pkin(9) * t11970;
t11184 = sin(qJ(2,3));
t12431 = t11184 * t11019;
t12119 = (pkin(3) * t11774 - t12431 / 0.2e1) * t12532;
t10275 = (t10807 - 0.2e1 * t12119) * t11139;
t11183 = sin(qJ(3,3));
t12535 = t11144 * t11183;
t10962 = pkin(2) * t12535 + t12252;
t12519 = t11145 * t11184;
t10780 = t10962 * t12519;
t12181 = t11183 * t13141;
t10550 = t11059 * t12181 + t11030;
t11266 = t10550 * t11190;
t10786 = t11183 * t11546;
t11118 = pkin(2) * t11183;
t11001 = t11118 + t11073;
t12374 = pkin(3) * t11001 + t10786;
t11920 = (t11144 * t11266 + t10780) * t13095 + t10275 + (-t11889 + t12374) * t11150;
t11191 = cos(qJ(3,2));
t11140 = t11191 ^ 2;
t11192 = cos(qJ(2,2));
t12475 = t11149 * t11192;
t11969 = t11144 * t12475;
t11773 = pkin(9) * t11969;
t11186 = sin(qJ(2,2));
t12426 = t11186 * t11019;
t12118 = (pkin(3) * t11773 - t12426 / 0.2e1) * t12532;
t10276 = (t10807 - 0.2e1 * t12118) * t11140;
t11185 = sin(qJ(3,2));
t12534 = t11144 * t11185;
t10963 = pkin(2) * t12534 + t12252;
t12517 = t11145 * t11186;
t10781 = t10963 * t12517;
t12179 = t13141 * t11185;
t10551 = t11059 * t12179 + t11030;
t11265 = t10551 * t11192;
t10787 = t11185 * t11546;
t11119 = pkin(2) * t11185;
t11002 = t11119 + t11073;
t12373 = pkin(3) * t11002 + t10787;
t11919 = (t11144 * t11265 + t10781) * t13095 + t10276 + (-t11889 + t12373) * t11150;
t11193 = cos(qJ(3,1));
t11141 = t11193 ^ 2;
t11194 = cos(qJ(2,1));
t12474 = t11149 * t11194;
t11968 = t11144 * t12474;
t11772 = pkin(9) * t11968;
t11188 = sin(qJ(2,1));
t12421 = t11188 * t11019;
t12117 = (pkin(3) * t11772 - t12421 / 0.2e1) * t12532;
t10277 = (t10807 - 0.2e1 * t12117) * t11141;
t11187 = sin(qJ(3,1));
t12533 = t11144 * t11187;
t10964 = pkin(2) * t12533 + t12252;
t12515 = t11145 * t11188;
t10782 = t10964 * t12515;
t12178 = t13141 * t11187;
t10552 = t11059 * t12178 + t11030;
t11264 = t10552 * t11194;
t10788 = t11187 * t11546;
t11120 = pkin(2) * t11187;
t11003 = t11120 + t11073;
t12372 = pkin(3) * t11003 + t10788;
t11918 = (t11144 * t11264 + t10782) * t13095 + t10277 + (-t11889 + t12372) * t11150;
t12570 = t11124 * t11195;
t10305 = t10580 * t11196 + t10940 * t12570;
t13288 = t10305 * t11123;
t13287 = t10305 * t11125;
t10306 = t10581 * t11196 + t10941 * t12570;
t13286 = t10306 * t11123;
t13285 = t10306 * t11125;
t10307 = t10582 * t11196 + t10942 * t12570;
t13284 = t10307 * t11123;
t13283 = t10307 * t11125;
t10308 = t10583 * t11196 + t10943 * t12570;
t13282 = t10308 * t11123;
t13281 = t10308 * t11125;
t10309 = t10584 * t11196 + t10944 * t12570;
t13280 = t10309 * t11123;
t13279 = t10309 * t11125;
t10310 = t10585 * t11196 + t10945 * t12570;
t13278 = t10310 * t11123;
t13277 = t10310 * t11125;
t11158 = legFrame(1,3);
t11080 = sin(t11158);
t11092 = cos(t11158);
t12511 = t11146 * t11147;
t12540 = t11143 * t11146;
t13276 = t11080 * t12511 + t11092 * t12540;
t11157 = legFrame(2,3);
t11079 = sin(t11157);
t11091 = cos(t11157);
t13275 = t11079 * t12511 + t11091 * t12540;
t11156 = legFrame(3,3);
t11078 = sin(t11156);
t11090 = cos(t11156);
t13274 = t11078 * t12511 + t11090 * t12540;
t11155 = legFrame(4,3);
t11077 = sin(t11155);
t11089 = cos(t11155);
t13273 = t11077 * t12511 + t11089 * t12540;
t11154 = legFrame(5,3);
t11076 = sin(t11154);
t11088 = cos(t11154);
t13272 = t11076 * t12511 + t11088 * t12540;
t11153 = legFrame(6,3);
t11075 = sin(t11153);
t11087 = cos(t11153);
t13271 = t11075 * t12511 + t11087 * t12540;
t12456 = t11150 * t11194;
t10871 = t11143 * t12456 + t11147 * t11188;
t10874 = -t11143 * t11188 + t11147 * t12456;
t11490 = t10871 * t11092 + t10874 * t11080;
t12457 = t11150 * t11192;
t10870 = t11143 * t12457 + t11147 * t11186;
t10873 = -t11143 * t11186 + t11147 * t12457;
t11491 = t10870 * t11091 + t10873 * t11079;
t12458 = t11150 * t11190;
t10869 = t11143 * t12458 + t11147 * t11184;
t10872 = -t11143 * t11184 + t11147 * t12458;
t11492 = t10869 * t11090 + t10872 * t11078;
t12462 = t11150 * t11176;
t10852 = t11143 * t12462 + t11147 * t11170;
t10858 = -t11143 * t11170 + t11147 * t12462;
t11496 = t10852 * t11089 + t10858 * t11077;
t12463 = t11150 * t11174;
t10851 = t11143 * t12463 + t11147 * t11168;
t10857 = -t11143 * t11168 + t11147 * t12463;
t11497 = t10851 * t11088 + t10857 * t11076;
t12464 = t11150 * t11172;
t10850 = t11143 * t12464 + t11147 * t11166;
t10856 = -t11143 * t11166 + t11147 * t12464;
t11498 = t10850 * t11087 + t10856 * t11075;
t12602 = t11111 * t11147;
t12603 = t11111 * t11143;
t12633 = t11098 * t11147;
t12634 = t11098 * t11143;
t13270 = (t11086 * t12602 + t12634) * t11080 - (-t11086 * t12603 + t12633) * t11092;
t12607 = t11110 * t11147;
t12608 = t11110 * t11143;
t12638 = t11097 * t11147;
t12639 = t11097 * t11143;
t13269 = (t11085 * t12607 + t12639) * t11079 - (-t11085 * t12608 + t12638) * t11091;
t12612 = t11109 * t11147;
t12613 = t11109 * t11143;
t12643 = t11096 * t11147;
t12644 = t11096 * t11143;
t13268 = (t11084 * t12612 + t12644) * t11078 - (-t11084 * t12613 + t12643) * t11090;
t12617 = t11108 * t11147;
t12618 = t11108 * t11143;
t12648 = t11095 * t11147;
t12649 = t11095 * t11143;
t13267 = (t11083 * t12617 + t12649) * t11077 - (-t11083 * t12618 + t12648) * t11089;
t12622 = t11107 * t11147;
t12623 = t11107 * t11143;
t12653 = t11094 * t11147;
t12654 = t11094 * t11143;
t13266 = (t11082 * t12622 + t12654) * t11076 - (-t11082 * t12623 + t12653) * t11088;
t12627 = t11106 * t11147;
t12628 = t11106 * t11143;
t12658 = t11093 * t11147;
t12659 = t11093 * t11143;
t13265 = (t11081 * t12627 + t12659) * t11075 - (-t11081 * t12628 + t12658) * t11087;
t12351 = t11125 * t13171;
t12357 = t11123 * t13171;
t12553 = t11125 * t11210;
t12577 = t11123 * t11210;
t10393 = -(t11122 * t12553 + t12357) * t11121 + (t11122 * t12351 - t12577) * t12365;
t10832 = t11075 * t11147 + t11087 * t11143;
t12813 = t10832 * t11146;
t11288 = t11204 * t12813;
t12688 = t11081 * t11147;
t12689 = t11081 * t11143;
t11336 = (-(t11093 * t12628 + t12688) * t11087 - (t11093 * t12627 - t12689) * t11075) * t11146;
t12455 = t11150 * t11204;
t11980 = t11122 * t12455;
t12023 = t11106 * t12455;
t12587 = t11122 * t11204;
t12626 = t11106 * t11150;
t12766 = t11310 * t11150;
t13264 = t11112 * (t11093 * t11980 + t13271 * t10393 + (t11093 * t12766 - t11125 * t11288) * t11124) - (t11125 * t12023 - t11310 * t11336) * t11124 + t11336 * t12587 + t10393 * t12626;
t10392 = (t11122 * t12357 + t12553) * t12365 + t11121 * (-t11122 * t12577 + t12351);
t12498 = t11146 * t11204;
t13263 = t11112 * (t11081 * t11980 + t13271 * t10392 + (t11081 * t12766 - t11123 * t11288) * t11124) + (-t11146 * t11310 * t13265 - t11123 * t12023) * t11124 + t10392 * t12626 - t13265 * t11122 * t12498;
t12352 = t11125 * t13172;
t12358 = t11123 * t13172;
t12552 = t11125 * t11211;
t12576 = t11123 * t11211;
t10395 = -(t11122 * t12552 + t12358) * t11121 + (t11122 * t12352 - t12576) * t12365;
t10833 = t11076 * t11147 + t11088 * t11143;
t12812 = t10833 * t11146;
t11287 = t11205 * t12812;
t12683 = t11082 * t11147;
t12684 = t11082 * t11143;
t11335 = (-(t11094 * t12623 + t12683) * t11088 - (t11094 * t12622 - t12684) * t11076) * t11146;
t12454 = t11150 * t11205;
t11979 = t11122 * t12454;
t12017 = t11107 * t12454;
t12586 = t11122 * t11205;
t12621 = t11107 * t11150;
t12763 = t11311 * t11150;
t13262 = t11113 * (t11094 * t11979 + t13272 * t10395 + (t11094 * t12763 - t11125 * t11287) * t11124) - (t11125 * t12017 - t11311 * t11335) * t11124 + t11335 * t12586 + t10395 * t12621;
t10394 = (t11122 * t12358 + t12552) * t12365 + t11121 * (-t11122 * t12576 + t12352);
t12497 = t11146 * t11205;
t13261 = t11113 * (t11082 * t11979 + t13272 * t10394 + (t11082 * t12763 - t11123 * t11287) * t11124) + (-t11146 * t11311 * t13266 - t11123 * t12017) * t11124 + t10394 * t12621 - t13266 * t11122 * t12497;
t12353 = t11125 * t13173;
t12359 = t11123 * t13173;
t12551 = t11125 * t11212;
t12575 = t11123 * t11212;
t10397 = -(t11122 * t12551 + t12359) * t11121 + (t11122 * t12353 - t12575) * t12365;
t10834 = t11077 * t11147 + t11089 * t11143;
t12811 = t10834 * t11146;
t11286 = t11206 * t12811;
t12678 = t11083 * t11147;
t12679 = t11083 * t11143;
t11346 = t11146 * (-(t11095 * t12618 + t12678) * t11089 - (t11095 * t12617 - t12679) * t11077);
t12453 = t11150 * t11206;
t11978 = t11122 * t12453;
t12011 = t11108 * t12453;
t12585 = t11122 * t11206;
t12616 = t11108 * t11150;
t12760 = t11312 * t11150;
t13260 = t11114 * (t11095 * t11978 + t13273 * t10397 + (t11095 * t12760 - t11125 * t11286) * t11124) - (t11125 * t12011 - t11312 * t11346) * t11124 + t11346 * t12585 + t10397 * t12616;
t10396 = (t11122 * t12359 + t12551) * t12365 + t11121 * (-t11122 * t12575 + t12353);
t12496 = t11146 * t11206;
t13259 = t11114 * (t11083 * t11978 + t13273 * t10396 + (t11083 * t12760 - t11123 * t11286) * t11124) + (-t11146 * t11312 * t13267 - t11123 * t12011) * t11124 + t10396 * t12616 - t13267 * t11122 * t12496;
t12354 = t11125 * t13174;
t12360 = t11123 * t13174;
t12550 = t11125 * t11213;
t12574 = t11123 * t11213;
t10399 = -(t11122 * t12550 + t12360) * t11121 + (t11122 * t12354 - t12574) * t12365;
t10835 = t11078 * t11147 + t11090 * t11143;
t12810 = t10835 * t11146;
t11285 = t11207 * t12810;
t12673 = t11084 * t11147;
t12674 = t11084 * t11143;
t11345 = t11146 * (-(t11096 * t12613 + t12673) * t11090 - (t11096 * t12612 - t12674) * t11078);
t12452 = t11150 * t11207;
t11977 = t11122 * t12452;
t12005 = t11109 * t12452;
t12584 = t11122 * t11207;
t12611 = t11109 * t11150;
t12757 = t11313 * t11150;
t13258 = t11115 * (t11096 * t11977 + t13274 * t10399 + (t11096 * t12757 - t11125 * t11285) * t11124) - (t11125 * t12005 - t11313 * t11345) * t11124 + t11345 * t12584 + t10399 * t12611;
t10398 = (t11122 * t12360 + t12550) * t12365 + t11121 * (-t11122 * t12574 + t12354);
t12495 = t11146 * t11207;
t13257 = t11115 * (t11084 * t11977 + t13274 * t10398 + (t11084 * t12757 - t11123 * t11285) * t11124) + (-t11146 * t11313 * t13268 - t11123 * t12005) * t11124 + t10398 * t12611 - t13268 * t11122 * t12495;
t12355 = t11125 * t13175;
t12361 = t11123 * t13175;
t12549 = t11125 * t11214;
t12573 = t11123 * t11214;
t10401 = -(t11122 * t12549 + t12361) * t11121 + (t11122 * t12355 - t12573) * t12365;
t10836 = t11079 * t11147 + t11091 * t11143;
t12809 = t10836 * t11146;
t11284 = t11208 * t12809;
t12668 = t11085 * t11147;
t12669 = t11085 * t11143;
t11344 = t11146 * (-(t11097 * t12608 + t12668) * t11091 - (t11097 * t12607 - t12669) * t11079);
t12451 = t11150 * t11208;
t11976 = t11122 * t12451;
t11999 = t11110 * t12451;
t12583 = t11122 * t11208;
t12606 = t11110 * t11150;
t12754 = t11314 * t11150;
t13256 = t11116 * (t11097 * t11976 + t13275 * t10401 + (t11097 * t12754 - t11125 * t11284) * t11124) - (t11125 * t11999 - t11314 * t11344) * t11124 + t11344 * t12583 + t10401 * t12606;
t10400 = (t11122 * t12361 + t12549) * t12365 + t11121 * (-t11122 * t12573 + t12355);
t12494 = t11146 * t11208;
t13255 = t11116 * (t11085 * t11976 + t13275 * t10400 + (t11085 * t12754 - t11123 * t11284) * t11124) + (-t11146 * t11314 * t13269 - t11123 * t11999) * t11124 + t10400 * t12606 - t13269 * t11122 * t12494;
t12356 = t11125 * t13176;
t12362 = t11123 * t13176;
t12548 = t11125 * t11215;
t12572 = t11123 * t11215;
t10403 = -(t11122 * t12548 + t12362) * t11121 + (t11122 * t12356 - t12572) * t12365;
t10837 = t11080 * t11147 + t11092 * t11143;
t12808 = t10837 * t11146;
t11283 = t11209 * t12808;
t12663 = t11086 * t11147;
t12664 = t11086 * t11143;
t11334 = (-(t11098 * t12603 + t12663) * t11092 - (t11098 * t12602 - t12664) * t11080) * t11146;
t12450 = t11150 * t11209;
t11975 = t11122 * t12450;
t11993 = t11111 * t12450;
t12582 = t11122 * t11209;
t12601 = t11111 * t11150;
t12751 = t11315 * t11150;
t13254 = t11117 * (t11098 * t11975 + t13276 * t10403 + (t11098 * t12751 - t11125 * t11283) * t11124) - (t11125 * t11993 - t11315 * t11334) * t11124 + t11334 * t12582 + t10403 * t12601;
t10402 = (t11122 * t12362 + t12548) * t12365 + t11121 * (-t11122 * t12572 + t12356);
t12493 = t11146 * t11209;
t13253 = t11117 * (t11086 * t11975 + t13276 * t10402 + (t11086 * t12751 - t11123 * t11283) * t11124) + (-t11146 * t11315 * t13270 - t11123 * t11993) * t11124 + t10402 * t12601 - t13270 * t11122 * t12493;
t13113 = pkin(3) * t11171;
t13112 = pkin(3) * t11173;
t13111 = pkin(3) * t11175;
t13107 = pkin(3) * t11189;
t13106 = pkin(3) * t11191;
t13105 = pkin(3) * t11193;
t11803 = t11125 * t12365;
t12581 = t11123 * t11121;
t10745 = -t11122 * t11803 + t12581;
t12416 = t11196 * t11197;
t11801 = t12365 * t11196;
t12569 = t11124 * t11197;
t10789 = t11121 * t12569 - t11801;
t12820 = t10789 * t10989;
t13240 = t11124 * (t10745 * t12416 + t11125 * t12820);
t12482 = t11149 * t11183;
t12703 = t11059 * t11145;
t10811 = pkin(3) * t12482 - t12703;
t10571 = t11189 * t12260 - t10811;
t11041 = pkin(9) * t12535;
t11013 = t11041 + pkin(2);
t10968 = t11013 + t13107;
t10371 = -t10571 * t11190 + t10968 * t11184;
t12856 = (t10571 * t11184 + t10968 * t11190) * t11150;
t9451 = t11143 * t9658 + t11147 * t9577;
t9313 = -(-t11078 * t13298 + t9451 * t11090) * t12856 + t10371 * (t11078 * t9451 + t11090 * t13298);
t12185 = t11019 * t13141;
t12085 = t11059 * t12531;
t10952 = pkin(3) * t12085;
t11070 = pkin(2) * t11073;
t12368 = t11070 - t10952;
t10384 = -t11183 * t12185 - t12368;
t13121 = pkin(3) * t11059;
t11909 = t13141 * t13121;
t11961 = t11145 * t12482;
t10503 = t11019 * t11961 + t11909;
t11012 = 0.2e1 * t11041 + pkin(2);
t11924 = -0.2e1 * t11030;
t12308 = 0.2e1 * t12629;
t12710 = t11019 * t11139;
t13100 = pkin(9) * t10962;
t9685 = (t10384 * t11189 + (t11139 * t12308 - t11129) * t12364 + t12374) * t11150 + ((t10503 * t11189 + (t11139 * t11924 + t10550) * t11073) * t11190 + (t11012 * t13107 + t12710 + t13100) * t12519) * t11146;
t9676 = 0.1e1 / t9685;
t13042 = t9313 * t9676;
t12200 = t11149 * t13042;
t10853 = t11149 * t12458 - t12532;
t12481 = t11149 * t11184;
t12792 = t10853 * t11109;
t9421 = (t12481 * t9901 - t12792 * t9907) * t11096 + (t12481 * t9907 + t12792 * t9901) * t11084 - t10853 * t12595;
t12008 = t11109 * t12481;
t12132 = t11184 * t12595;
t9427 = (t10853 * t9901 + t12008 * t9907) * t11096 + (t10853 * t9907 - t12008 * t9901) * t11084 + t11149 * t12132;
t9295 = (t11143 * t9427 + t11147 * t9421) * t11090 + t11078 * (-t11143 * t9421 + t11147 * t9427);
t12461 = t11150 * t11184;
t12007 = t11109 * t12461;
t11254 = -t11084 * (-t11190 * t9907 + t12007 * t9901) + t11096 * (t11190 * t9901 + t12007 * t9907) + t11150 * t12132;
t12609 = t11109 * t11190;
t9445 = (t12461 * t9901 - t12609 * t9907) * t11096 + (t12461 * t9907 + t12609 * t9901) * t11084 - t11190 * t12595;
t9319 = (t11143 * t9445 - t11147 * t11254) * t11090 + t11078 * (t11143 * t11254 + t9445 * t11147);
t9259 = (pkin(3) * t9295 + t11073 * t9319) * t11189 - t11183 * (pkin(3) * t9319 - t11073 * t9295);
t10884 = t11150 * t12085;
t11047 = pkin(2) * t12519;
t12184 = t11059 * t13141;
t11659 = t11190 * t12184;
t10251 = t10884 + (t11047 + t11659) * t11146;
t11794 = t13141 * t11150;
t11958 = t11145 * t12476;
t10690 = t11146 * t11958 - t11794;
t12094 = t11019 * t12532;
t10817 = t11184 * t12094;
t12261 = t11146 * t11073;
t13119 = pkin(3) * t11145;
t11518 = 0.2e1 * t12261 * t13119;
t10916 = t11184 * t11518;
t11023 = t11150 * t11070;
t13117 = pkin(3) * t11150;
t11069 = pkin(2) * t13117;
t12630 = (t11148 + 0.1e1) * (t11148 - 0.1e1);
t12263 = pkin(9) * t12630;
t11779 = t11145 * t12263;
t11542 = t11184 * t11779;
t12253 = -0.2e1 * t12364;
t13120 = pkin(3) * t11144;
t9631 = (t10690 * t12253 + t10817) * t11139 + ((t10690 * t11019 + t10916) * t11183 - t11023 + pkin(3) * t10251) * t11189 + (t10251 * t11073 + t11069) * t11183 + (t10690 * t13120 - t11146 * t11542) * pkin(9);
t9625 = 0.1e1 / t9631;
t13084 = t9259 * t9625;
t13239 = t11190 * (t12200 + t13084);
t12480 = t11149 * t11185;
t10812 = pkin(3) * t12480 - t12703;
t10572 = t11191 * t12260 - t10812;
t11043 = pkin(9) * t12534;
t11015 = t11043 + pkin(2);
t10969 = t11015 + t13106;
t10372 = -t10572 * t11192 + t10969 * t11186;
t12855 = (t10572 * t11186 + t10969 * t11192) * t11150;
t9452 = t11143 * t9659 + t11147 * t9578;
t9314 = -(-t11079 * t13299 + t9452 * t11091) * t12855 + t10372 * (t11079 * t9452 + t11091 * t13299);
t10386 = -t11185 * t12185 - t12368;
t11960 = t11145 * t12480;
t10504 = t11019 * t11960 + t11909;
t11014 = 0.2e1 * t11043 + pkin(2);
t12709 = t11019 * t11140;
t13099 = pkin(9) * t10963;
t9686 = (t10386 * t11191 + (t11140 * t12308 - t11129) * t12364 + t12373) * t11150 + ((t10504 * t11191 + (t11140 * t11924 + t10551) * t11073) * t11192 + (t11014 * t13106 + t12709 + t13099) * t12517) * t11146;
t9678 = 0.1e1 / t9686;
t13041 = t9314 * t9678;
t12199 = t11149 * t13041;
t10854 = t11149 * t12457 - t12532;
t12479 = t11149 * t11186;
t12791 = t10854 * t11110;
t9422 = (t12479 * t9902 - t12791 * t9908) * t11097 + (t12479 * t9908 + t12791 * t9902) * t11085 - t10854 * t12594;
t12002 = t11110 * t12479;
t12131 = t11186 * t12594;
t9428 = (t10854 * t9902 + t12002 * t9908) * t11097 + (t10854 * t9908 - t12002 * t9902) * t11085 + t11149 * t12131;
t9296 = (t11143 * t9428 + t11147 * t9422) * t11091 + t11079 * (-t11143 * t9422 + t11147 * t9428);
t12460 = t11150 * t11186;
t12001 = t11110 * t12460;
t11253 = -t11085 * (-t11192 * t9908 + t12001 * t9902) + t11097 * (t11192 * t9902 + t12001 * t9908) + t11150 * t12131;
t12604 = t11110 * t11192;
t9446 = (t12460 * t9902 - t12604 * t9908) * t11097 + (t12460 * t9908 + t12604 * t9902) * t11085 - t11192 * t12594;
t9320 = (t11143 * t9446 - t11147 * t11253) * t11091 + t11079 * (t11143 * t11253 + t9446 * t11147);
t9260 = (pkin(3) * t9296 + t11073 * t9320) * t11191 - t11185 * (pkin(3) * t9320 - t11073 * t9296);
t11048 = pkin(2) * t12517;
t11658 = t11192 * t12184;
t10252 = t10884 + (t11048 + t11658) * t11146;
t11957 = t11145 * t12475;
t10691 = t11146 * t11957 - t11794;
t10818 = t11186 * t12094;
t10917 = t11186 * t11518;
t11541 = t11186 * t11779;
t9632 = (t10691 * t12253 + t10818) * t11140 + ((t10691 * t11019 + t10917) * t11185 - t11023 + pkin(3) * t10252) * t11191 + (t10252 * t11073 + t11069) * t11185 + (t10691 * t13120 - t11146 * t11541) * pkin(9);
t9627 = 0.1e1 / t9632;
t13083 = t9260 * t9627;
t13238 = t11192 * (t12199 + t13083);
t12478 = t11149 * t11187;
t10813 = pkin(3) * t12478 - t12703;
t10573 = t11193 * t12260 - t10813;
t11045 = pkin(9) * t12533;
t11017 = t11045 + pkin(2);
t10970 = t11017 + t13105;
t10373 = -t10573 * t11194 + t10970 * t11188;
t12854 = (t10573 * t11188 + t10970 * t11194) * t11150;
t9453 = t11143 * t9660 + t11147 * t9579;
t9315 = -(-t11080 * t13300 + t9453 * t11092) * t12854 + t10373 * (t11080 * t9453 + t11092 * t13300);
t10388 = -t11187 * t12185 - t12368;
t11959 = t11145 * t12478;
t10505 = t11019 * t11959 + t11909;
t11016 = 0.2e1 * t11045 + pkin(2);
t12708 = t11019 * t11141;
t13098 = pkin(9) * t10964;
t9687 = (t10388 * t11193 + (t11141 * t12308 - t11129) * t12364 + t12372) * t11150 + ((t10505 * t11193 + (t11141 * t11924 + t10552) * t11073) * t11194 + (t11016 * t13105 + t12708 + t13098) * t12515) * t11146;
t9680 = 0.1e1 / t9687;
t13040 = t9315 * t9680;
t12198 = t11149 * t13040;
t10855 = t11149 * t12456 - t12532;
t12477 = t11149 * t11188;
t12790 = t10855 * t11111;
t9423 = (t12477 * t9903 - t12790 * t9909) * t11098 + (t12477 * t9909 + t12790 * t9903) * t11086 - t10855 * t12593;
t11996 = t11111 * t12477;
t12130 = t11188 * t12593;
t9429 = (t10855 * t9903 + t11996 * t9909) * t11098 + (t10855 * t9909 - t11996 * t9903) * t11086 + t11149 * t12130;
t9297 = (t11143 * t9429 + t11147 * t9423) * t11092 + t11080 * (-t11143 * t9423 + t11147 * t9429);
t12459 = t11150 * t11188;
t11995 = t11111 * t12459;
t11252 = -t11086 * (-t11194 * t9909 + t11995 * t9903) + t11098 * (t11194 * t9903 + t11995 * t9909) + t11150 * t12130;
t12599 = t11111 * t11194;
t9447 = (t12459 * t9903 - t12599 * t9909) * t11098 + (t12459 * t9909 + t12599 * t9903) * t11086 - t11194 * t12593;
t9321 = (t11143 * t9447 - t11147 * t11252) * t11092 + t11080 * (t11143 * t11252 + t9447 * t11147);
t9261 = (pkin(3) * t9297 + t11073 * t9321) * t11193 - t11187 * (pkin(3) * t9321 - t11073 * t9297);
t11049 = pkin(2) * t12515;
t11657 = t11194 * t12184;
t10253 = t10884 + (t11049 + t11657) * t11146;
t11956 = t11145 * t12474;
t10692 = t11146 * t11956 - t11794;
t10819 = t11188 * t12094;
t10918 = t11188 * t11518;
t11540 = t11188 * t11779;
t9633 = (t10692 * t12253 + t10819) * t11141 + ((t10692 * t11019 + t10918) * t11187 - t11023 + pkin(3) * t10253) * t11193 + (t10253 * t11073 + t11069) * t11187 + (t10692 * t13120 - t11146 * t11540) * pkin(9);
t9629 = 0.1e1 / t9633;
t13082 = t9261 * t9629;
t13237 = t11194 * (t12198 + t13082);
t13140 = 0.2e1 * t11129 - 0.2e1;
t13236 = t13140 * t11073;
t10973 = t11165 * t11019;
t11473 = -t10973 + t11070;
t10974 = t11167 * t11019;
t11472 = -t10974 + t11070;
t10975 = t11169 * t11019;
t11471 = -t10975 + t11070;
t10976 = t11183 * t11019;
t11470 = -t10976 + t11070;
t10977 = t11185 * t11019;
t11469 = -t10977 + t11070;
t10978 = t11187 * t11019;
t11468 = -t10978 + t11070;
t11032 = pkin(9) * t12538;
t11007 = t11032 + pkin(2);
t10959 = t11007 + t13113;
t11034 = pkin(9) * t12537;
t11009 = t11034 + pkin(2);
t10960 = t11009 + t13112;
t11036 = pkin(9) * t12536;
t11011 = t11036 + pkin(2);
t10961 = t11011 + t13111;
t11038 = pkin(2) * t12528;
t12699 = t11059 * t11172;
t13235 = t11038 - t12699;
t11039 = pkin(2) * t12526;
t12698 = t11059 * t11174;
t13234 = t11039 - t12698;
t11040 = pkin(2) * t12524;
t12697 = t11059 * t11176;
t13233 = t11040 - t12697;
t12693 = t11059 * t11190;
t13232 = t11047 - t12693;
t12692 = t11059 * t11192;
t13231 = t11048 - t12692;
t12691 = t11059 * t11194;
t13230 = t11049 - t12691;
t13229 = (-0.2e1 * t13094 - pkin(8)) * pkin(8);
t12753 = t11315 * t11124;
t10606 = -t12582 - t12753;
t12555 = t11125 * t11196;
t12588 = t11122 * t11125;
t12863 = t13301 * t11197;
t9927 = -(t10945 * t12588 + t11123 * t11315) * t11195 - t10606 * t12555 - t12863;
t12579 = t11123 * t11196;
t12589 = t11122 * t11123;
t12857 = t10297 * t11197;
t9926 = -(t10945 * t12589 - t11125 * t11315) * t11195 - t10606 * t12579 + t12857;
t12756 = t11314 * t11124;
t10605 = -t12583 - t12756;
t12864 = t13302 * t11197;
t9925 = -(t10944 * t12588 + t11123 * t11314) * t11195 - t10605 * t12555 - t12864;
t12858 = t10296 * t11197;
t9924 = -(t10944 * t12589 - t11125 * t11314) * t11195 - t10605 * t12579 + t12858;
t12759 = t11313 * t11124;
t10604 = -t12584 - t12759;
t12865 = t13303 * t11197;
t9923 = -(t10943 * t12588 + t11123 * t11313) * t11195 - t10604 * t12555 - t12865;
t12859 = t10295 * t11197;
t9922 = -(t10943 * t12589 - t11125 * t11313) * t11195 - t10604 * t12579 + t12859;
t12762 = t11312 * t11124;
t10603 = -t12585 - t12762;
t12866 = t13304 * t11197;
t9921 = -(t10942 * t12588 + t11123 * t11312) * t11195 - t10603 * t12555 - t12866;
t12860 = t10294 * t11197;
t9920 = -(t10942 * t12589 - t11125 * t11312) * t11195 - t10603 * t12579 + t12860;
t12765 = t11311 * t11124;
t10602 = -t12586 - t12765;
t12867 = t13305 * t11197;
t9919 = -(t10941 * t12588 + t11123 * t11311) * t11195 - t10602 * t12555 - t12867;
t12861 = t10293 * t11197;
t9918 = -(t10941 * t12589 - t11125 * t11311) * t11195 - t10602 * t12579 + t12861;
t12768 = t11310 * t11124;
t10601 = -t12587 - t12768;
t12868 = t13306 * t11197;
t9917 = -(t10940 * t12588 + t11123 * t11310) * t11195 - t10601 * t12555 - t12868;
t12862 = t10292 * t11197;
t9916 = -(t10940 * t12589 - t11125 * t11310) * t11195 - t10601 * t12579 + t12862;
t11994 = t11111 * t12456;
t12662 = t11086 * t11188;
t10672 = t11098 * t11994 - t12662;
t12054 = t11086 * t12456;
t12600 = t11111 * t11188;
t10683 = t11098 * t12600 + t12054;
t11499 = (t10672 * t11147 - t10683 * t11143) * t11080 + (t10672 * t11143 + t10683 * t11147) * t11092;
t11944 = t11194 * t12493;
t11622 = t11111 * t11944;
t12499 = t11146 * t11194;
t11997 = t11111 * t12499;
t13228 = -t10403 * t11997 - (-t11125 * t11622 + t11315 * t11499) * t11124;
t12000 = t11110 * t12457;
t12667 = t11085 * t11186;
t10670 = t11097 * t12000 - t12667;
t12056 = t11085 * t12457;
t12605 = t11110 * t11186;
t10679 = t11097 * t12605 + t12056;
t11501 = (t10670 * t11147 - t10679 * t11143) * t11079 + (t10670 * t11143 + t10679 * t11147) * t11091;
t11945 = t11192 * t12494;
t11624 = t11110 * t11945;
t12500 = t11146 * t11192;
t12003 = t11110 * t12500;
t13227 = -t10401 * t12003 - (-t11125 * t11624 + t11314 * t11501) * t11124;
t12006 = t11109 * t12458;
t12672 = t11084 * t11184;
t10668 = t11096 * t12006 - t12672;
t12058 = t11084 * t12458;
t12610 = t11109 * t11184;
t10675 = t11096 * t12610 + t12058;
t11503 = (t10668 * t11147 - t10675 * t11143) * t11078 + (t10668 * t11143 + t10675 * t11147) * t11090;
t11946 = t11190 * t12495;
t11626 = t11109 * t11946;
t12501 = t11146 * t11190;
t12009 = t11109 * t12501;
t13226 = -t10399 * t12009 - (-t11125 * t11626 + t11313 * t11503) * t11124;
t12012 = t11108 * t12462;
t12677 = t11083 * t11170;
t10648 = t11095 * t12012 - t12677;
t12060 = t11083 * t12462;
t12615 = t11108 * t11170;
t10659 = t11095 * t12615 + t12060;
t11505 = (t10648 * t11147 - t10659 * t11143) * t11077 + (t10648 * t11143 + t10659 * t11147) * t11089;
t11950 = t11176 * t12496;
t11628 = t11108 * t11950;
t12505 = t11146 * t11176;
t12015 = t11108 * t12505;
t13225 = -t10397 * t12015 - (-t11125 * t11628 + t11312 * t11505) * t11124;
t12018 = t11107 * t12463;
t12682 = t11082 * t11168;
t10646 = t11094 * t12018 - t12682;
t12062 = t11082 * t12463;
t12620 = t11107 * t11168;
t10655 = t11094 * t12620 + t12062;
t11507 = (t10646 * t11147 - t10655 * t11143) * t11076 + (t10646 * t11143 + t10655 * t11147) * t11088;
t11951 = t11174 * t12497;
t11630 = t11107 * t11951;
t12506 = t11146 * t11174;
t12021 = t11107 * t12506;
t13224 = -t10395 * t12021 - (-t11125 * t11630 + t11311 * t11507) * t11124;
t12024 = t11106 * t12464;
t12687 = t11081 * t11166;
t10644 = t11093 * t12024 - t12687;
t12064 = t11081 * t12464;
t12625 = t11106 * t11166;
t10651 = t11093 * t12625 + t12064;
t11509 = (t10644 * t11147 - t10651 * t11143) * t11075 + (t10644 * t11143 + t10651 * t11147) * t11087;
t11952 = t11172 * t12498;
t11632 = t11106 * t11952;
t12507 = t11146 * t11172;
t12027 = t11106 * t12507;
t13223 = -t10393 * t12027 - (-t11125 * t11632 + t11310 * t11509) * t11124;
t11329 = t11490 * t11209;
t12108 = t11315 * t12499;
t13222 = t11490 * t10403 - (t11098 * t12108 + t11125 * t11329) * t11124;
t13221 = t11490 * t10402 - (t11086 * t12108 + t11123 * t11329) * t11124;
t11330 = t11491 * t11208;
t12109 = t11314 * t12500;
t13220 = t11491 * t10401 - (t11097 * t12109 + t11125 * t11330) * t11124;
t13219 = t11491 * t10400 - (t11085 * t12109 + t11123 * t11330) * t11124;
t11331 = t11492 * t11207;
t12110 = t11313 * t12501;
t13218 = t11492 * t10399 - (t11096 * t12110 + t11125 * t11331) * t11124;
t13217 = t11492 * t10398 - (t11084 * t12110 + t11123 * t11331) * t11124;
t11332 = t11496 * t11206;
t12111 = t11312 * t12505;
t13216 = t11496 * t10397 - (t11095 * t12111 + t11125 * t11332) * t11124;
t13215 = t11496 * t10396 - (t11083 * t12111 + t11123 * t11332) * t11124;
t11333 = t11497 * t11205;
t12112 = t11311 * t12506;
t13214 = t11497 * t10395 - (t11094 * t12112 + t11125 * t11333) * t11124;
t13213 = t11497 * t10394 - (t11082 * t12112 + t11123 * t11333) * t11124;
t11337 = t11204 * t11498;
t12113 = t11310 * t12507;
t13212 = t11498 * t10393 - (t11093 * t12113 + t11125 * t11337) * t11124;
t13211 = t11498 * t10392 - (t11081 * t12113 + t11123 * t11337) * t11124;
t12632 = t11098 * t11188;
t10671 = t11086 * t11994 + t12632;
t12030 = t11098 * t12456;
t10684 = -t11086 * t12600 + t12030;
t11500 = -(-t10671 * t11143 + t10684 * t11147) * t11092 + (t10671 * t11147 + t10684 * t11143) * t11080;
t12637 = t11097 * t11186;
t10669 = t11085 * t12000 + t12637;
t12032 = t11097 * t12457;
t10680 = -t11085 * t12605 + t12032;
t11502 = -(-t10669 * t11143 + t10680 * t11147) * t11091 + (t10669 * t11147 + t10680 * t11143) * t11079;
t12642 = t11096 * t11184;
t10667 = t11084 * t12006 + t12642;
t12034 = t11096 * t12458;
t10676 = -t11084 * t12610 + t12034;
t11504 = -(-t10667 * t11143 + t10676 * t11147) * t11090 + (t10667 * t11147 + t10676 * t11143) * t11078;
t12647 = t11095 * t11170;
t10647 = t11083 * t12012 + t12647;
t12036 = t11095 * t12462;
t10660 = -t11083 * t12615 + t12036;
t11506 = -(-t10647 * t11143 + t10660 * t11147) * t11089 + (t10647 * t11147 + t10660 * t11143) * t11077;
t12652 = t11094 * t11168;
t10645 = t11082 * t12018 + t12652;
t12038 = t11094 * t12463;
t10656 = -t11082 * t12620 + t12038;
t11508 = -(-t10645 * t11143 + t10656 * t11147) * t11088 + (t10645 * t11147 + t10656 * t11143) * t11076;
t12657 = t11093 * t11166;
t10643 = t11081 * t12024 + t12657;
t12040 = t11093 * t12464;
t10652 = -t11081 * t12625 + t12040;
t11510 = -(-t10643 * t11143 + t10652 * t11147) * t11087 + (t10643 * t11147 + t10652 * t11143) * t11075;
t13210 = -t10402 * t11997 + (t11123 * t11622 - t11315 * t11500) * t11124;
t13209 = -t10400 * t12003 + (t11123 * t11624 - t11314 * t11502) * t11124;
t13208 = -t10398 * t12009 + (t11123 * t11626 - t11313 * t11504) * t11124;
t13207 = -t10396 * t12015 + (t11123 * t11628 - t11312 * t11506) * t11124;
t13206 = -t10394 * t12021 + (t11123 * t11630 - t11311 * t11508) * t11124;
t13205 = -t10392 * t12027 + (t11123 * t11632 - t11310 * t11510) * t11124;
t13204 = t11073 * t13141;
t11937 = t11112 * t12507;
t10133 = t11106 * t11498 + t11937;
t10091 = t10133 * t13121;
t12473 = t11150 * t11112;
t10491 = -t11106 * t12813 + t12473;
t13203 = t10491 * t11473 + t11129 * (t10491 * t10973 - t10091) + t10091;
t11936 = t11113 * t12506;
t10135 = t11107 * t11497 + t11936;
t10092 = t10135 * t13121;
t12472 = t11150 * t11113;
t10492 = -t11107 * t12812 + t12472;
t13202 = t10492 * t11472 + t11129 * (t10492 * t10974 - t10092) + t10092;
t11935 = t11114 * t12505;
t10137 = t11108 * t11496 + t11935;
t10093 = t10137 * t13121;
t12471 = t11150 * t11114;
t10493 = -t11108 * t12811 + t12471;
t13201 = t10493 * t11471 + t11129 * (t10493 * t10975 - t10093) + t10093;
t11928 = t11115 * t12501;
t10139 = t11109 * t11492 + t11928;
t10094 = t10139 * t13121;
t12470 = t11150 * t11115;
t10494 = -t11109 * t12810 + t12470;
t13200 = t10494 * t11470 + t11129 * (t10494 * t10976 - t10094) + t10094;
t11927 = t11116 * t12500;
t10141 = t11110 * t11491 + t11927;
t10095 = t10141 * t13121;
t12469 = t11150 * t11116;
t10495 = -t11110 * t12809 + t12469;
t13199 = t10495 * t11469 + t11129 * (t10495 * t10977 - t10095) + t10095;
t11926 = t11117 * t12499;
t10143 = t11111 * t11490 + t11926;
t10096 = t10143 * t13121;
t12468 = t11150 * t11117;
t10496 = -t11111 * t12808 + t12468;
t13198 = t10496 * t11468 + t11129 * (t10496 * t10978 - t10096) + t10096;
t12704 = t11059 * t11144;
t12264 = pkin(9) * t12704;
t12694 = t11059 * t11187;
t13128 = pkin(3) * t10496;
t13197 = ((t10143 * t12694 - t13128) * t11129 + t13128) * t11073 - (-pkin(2) * t13128 + t10143 * t12264) * t11187;
t12695 = t11059 * t11185;
t13129 = pkin(3) * t10495;
t13196 = ((t10141 * t12695 - t13129) * t11129 + t13129) * t11073 - (-pkin(2) * t13129 + t10141 * t12264) * t11185;
t12696 = t11059 * t11183;
t13130 = pkin(3) * t10494;
t13195 = ((t10139 * t12696 - t13130) * t11129 + t13130) * t11073 - (-pkin(2) * t13130 + t10139 * t12264) * t11183;
t12700 = t11059 * t11169;
t13131 = pkin(3) * t10493;
t13194 = ((t10137 * t12700 - t13131) * t11129 + t13131) * t11073 - (-pkin(2) * t13131 + t10137 * t12264) * t11169;
t12701 = t11059 * t11167;
t13132 = pkin(3) * t10492;
t13193 = ((t10135 * t12701 - t13132) * t11129 + t13132) * t11073 - (-pkin(2) * t13132 + t10135 * t12264) * t11167;
t12702 = t11059 * t11165;
t13133 = pkin(3) * t10491;
t13192 = ((t10133 * t12702 - t13133) * t11129 + t13133) * t11073 - (-pkin(2) * t13133 + t10133 * t12264) * t11165;
t13179 = 0.2e1 * pkin(2);
t13178 = -0.2e1 * pkin(3);
t13177 = 0.2e1 * pkin(9);
t10497 = t10789 ^ 2;
t11804 = t11124 * t12365;
t12591 = t11121 * t11196;
t10791 = t11197 * t11804 + t12591;
t10498 = t10791 ^ 2;
t10735 = t10989 ^ 2;
t10416 = -t10850 * t11075 + t10856 * t11087;
t12467 = t11150 * t11166;
t10859 = t11143 * t11172 + t11147 * t12467;
t10862 = -t11143 * t12467 + t11147 * t11172;
t10419 = t10859 * t11087 + t10862 * t11075;
t11888 = pkin(3) * t12260;
t13170 = -0.2e1 * t10416 * t11888 - 0.2e1 * t10419 * t13142;
t10417 = -t10851 * t11076 + t10857 * t11088;
t12466 = t11150 * t11168;
t10860 = t11143 * t11174 + t11147 * t12466;
t10863 = -t11143 * t12466 + t11147 * t11174;
t10420 = t10860 * t11088 + t10863 * t11076;
t13169 = -0.2e1 * t10417 * t11888 - 0.2e1 * t10420 * t13142;
t10418 = -t10852 * t11077 + t10858 * t11089;
t12465 = t11150 * t11170;
t10861 = t11143 * t11176 + t11147 * t12465;
t10864 = -t11143 * t12465 + t11147 * t11176;
t10421 = t10861 * t11089 + t10864 * t11077;
t13168 = -0.2e1 * t10418 * t11888 - 0.2e1 * t10421 * t13142;
t10440 = -t10869 * t11078 + t10872 * t11090;
t10875 = t11143 * t11190 + t11147 * t12461;
t10878 = -t11143 * t12461 + t11147 * t11190;
t10443 = t10875 * t11090 + t10878 * t11078;
t13167 = -0.2e1 * t10440 * t11888 - 0.2e1 * t10443 * t13142;
t10441 = -t10870 * t11079 + t10873 * t11091;
t10876 = t11143 * t11192 + t11147 * t12460;
t10879 = -t11143 * t12460 + t11147 * t11192;
t10444 = t10876 * t11091 + t10879 * t11079;
t13166 = -0.2e1 * t10441 * t11888 - 0.2e1 * t10444 * t13142;
t10442 = -t10871 * t11080 + t10874 * t11092;
t10877 = t11143 * t11194 + t11147 * t12459;
t10880 = -t11143 * t12459 + t11147 * t11194;
t10445 = t10877 * t11092 + t10880 * t11080;
t13165 = -0.2e1 * t10442 * t11888 - 0.2e1 * t10445 * t13142;
t10996 = pkin(2) * t11019;
t13164 = -0.2e1 * t10996;
t13163 = 0.2e1 * t11149;
t13161 = pkin(2) * pkin(3);
t12093 = t11019 * t12485;
t11646 = t11165 * t12093;
t11480 = t11145 * t11646;
t11665 = t11172 * t12184;
t11006 = 0.2e1 * t11032 + pkin(2);
t11943 = t11006 * t12528;
t10127 = (t11480 + (t11665 + t11943) * pkin(3)) * t11146;
t10323 = -t11467 + t12122;
t11020 = -t11218 + t11795;
t11024 = pkin(2) * t11032;
t12295 = pkin(3) * t12703;
t10829 = t11149 * t12464 - t12532;
t12490 = t11149 * t11166;
t12816 = t10829 * t11106;
t9418 = (t12490 * t9898 - t12816 * t9904) * t11093 + (t12490 * t9904 + t12816 * t9898) * t11081 - t10829 * t12598;
t12026 = t11106 * t12490;
t12135 = t11166 * t12598;
t9424 = (t10829 * t9898 + t12026 * t9904) * t11093 + (t10829 * t9904 - t12026 * t9898) * t11081 + t11149 * t12135;
t9292 = (t11143 * t9424 + t11147 * t9418) * t11087 + t11075 * (-t11143 * t9418 + t11147 * t9424);
t12025 = t11106 * t12467;
t11257 = -t11081 * (-t11172 * t9904 + t12025 * t9898) + t11093 * (t11172 * t9898 + t12025 * t9904) + t11150 * t12135;
t12624 = t11106 * t11172;
t9442 = (t12467 * t9898 - t12624 * t9904) * t11093 + (t12467 * t9904 + t12624 * t9898) * t11081 - t11172 * t12598;
t9316 = (t11143 * t9442 - t11147 * t11257) * t11087 + t11075 * (t11143 * t11257 + t9442 * t11147);
t9253 = (pkin(3) * t9292 + t11073 * t9316) * t11171 - t11165 * (pkin(3) * t9316 - t11073 * t9292);
t10248 = t10884 + (t11038 + t11665) * t11146;
t11964 = t11145 * t12485;
t10685 = t11146 * t11964 - t11794;
t10808 = t11166 * t12094;
t10910 = t11166 * t11518;
t11545 = t11166 * t11779;
t9622 = (t10685 * t12253 + t10808) * t11133 + ((t10685 * t11019 + t10910) * t11165 - t11023 + pkin(3) * t10248) * t11171 + (t10248 * t11073 + t11069) * t11165 + (t10685 * t13120 - t11146 * t11545) * pkin(9);
t9616 = 0.1e1 / t9622;
t13087 = t9253 * t9616;
t11275 = ((-t11020 + t11024) * t11149 - t11165 * t12295) * t13087;
t12029 = t11216 * t12630;
t11297 = (t11129 * t12029 - t11218) * t11150;
t11328 = -t11129 * t11795 + t11218;
t11698 = t12629 * t13087;
t11517 = t11059 * t11698;
t12402 = 0.2e1 * t11073;
t11674 = t12402 * t13087;
t11571 = pkin(3) * t11674;
t11591 = t11073 - t12262;
t11634 = t11149 * t12029;
t12086 = t11059 * t12629;
t11640 = t11172 * t12086;
t10972 = t11150 * t11019;
t11647 = t10972 * t12629;
t12491 = t11149 * t11165;
t10804 = pkin(3) * t12491 - t12703;
t10565 = t11171 * t12260 - t10804;
t10317 = -t10565 * t11172 + t10959 * t11166;
t12871 = (t10565 * t11166 + t10959 * t11172) * t11150;
t9448 = t11143 * t9655 + t11147 * t9574;
t9307 = -(-t11075 * t13295 + t9448 * t11087) * t12871 + t10317 * (t9448 * t11075 + t11087 * t13295);
t10378 = -t11165 * t12185 - t12368;
t11967 = t11145 * t12491;
t10500 = t11019 * t11967 + t11909;
t12713 = t11019 * t11133;
t13103 = pkin(9) * t10953;
t9670 = (t10378 * t11171 + (t11133 * t12308 - t11129) * t12364 + t12377) * t11150 + ((t10500 * t11171 + (t11133 * t11924 + t10541) * t11073) * t11172 + (t11006 * t13113 + t12713 + t13103) * t12528) * t11146;
t9664 = 0.1e1 / t9670;
t13048 = t9307 * t9664;
t11844 = t13048 * t11073;
t11656 = pkin(3) * t11844;
t12215 = t11145 * t13087;
t11686 = t11165 * t12215;
t12259 = t11166 * t11073;
t11887 = pkin(3) * t12259;
t12138 = t13087 * t13161;
t12191 = t11020 * t13048;
t12203 = t11149 * t13048;
t12209 = t11149 * t13087;
t11539 = t11146 * t11778;
t11446 = t11539 * t13178;
t11031 = t11144 * t13117;
t11021 = pkin(9) * t11031;
t11786 = t11129 * t11031;
t12370 = t11786 * t13177 - 0.2e1 * t11021;
t10155 = (t11172 * t11446 + t10808 + t12370) * t11133;
t10838 = -t11075 * t11143 + t11087 * t11147;
t10405 = t10832 * t11172 + t10838 * t12467;
t11419 = (t11031 - t11786) * pkin(9);
t11439 = (-t10832 * t11166 + t10838 * t12464) * t11149 - t10838 * t12532;
t11548 = t13141 * t10972;
t11554 = t11129 * t12699 + t13235;
t12371 = pkin(3) * t10884 - t11023;
t12378 = t11150 * t11546 + t11069;
t12991 = 0.1e1 / (t10155 + ((t10910 - t11548) * t11165 + t12371) * t11171 + t12378 * t11165 + t11419 + ((pkin(3) * t11554 + t11480) * t11171 + (-t11545 + (pkin(3) * t11964 + t11165 * t11554) * t11144) * pkin(9)) * t11146) * ((pkin(3) * t11439 + t10405 * t11073) * t11171 + t11165 * (-pkin(3) * t10405 + t11073 * t11439));
t12233 = t11112 * t12991;
t12236 = t11019 * t13048;
t12239 = t11019 * t13087;
t13116 = pkin(3) * t11166;
t12301 = t11006 * t13116;
t12448 = t11165 * t11171;
t12307 = 0.2e1 * t12448;
t12492 = t11149 * t11150;
t12100 = t11129 * t10973;
t12853 = (-t10973 + t12100 + t12368) * t11150;
t12877 = (-t11647 + (0.2e1 * t11887 + t12093) * t12532) * t11133;
t12937 = t11165 * t9664;
t12690 = t11081 * t11106;
t10359 = t10832 * t11093 + t10838 * t12690;
t10365 = t10832 * t12690 - t10838 * t11093;
t10027 = t10359 * t12467 + t10365 * t11172;
t9785 = (t10359 * t12464 - t10365 * t11166) * t11149 - t10359 * t12532;
t9505 = (pkin(3) * t9785 + t10027 * t11073) * t11171 + t11165 * (-pkin(3) * t10027 + t11073 * t9785);
t13000 = t9505 * t9616;
t12660 = t11093 * t11106;
t10344 = t10832 * t12660 + t10838 * t11081;
t10345 = -t10832 * t11081 + t10838 * t12660;
t10024 = t10344 * t11172 + t10345 * t12467;
t9784 = (-t10344 * t11166 + t10345 * t12464) * t11149 - t10345 * t12532;
t9502 = (-pkin(3) * t9784 - t10024 * t11073) * t11171 - t11165 * (-pkin(3) * t10024 + t11073 * t9784);
t13003 = t9502 * t9616;
t11710 = t11059 * t12215;
t9238 = t11710 * t11073;
t10688 = -t11122 * t12555 - t11123 * t12569;
t12554 = t11125 * t11197;
t10689 = t11122 * t12579 - t11124 * t12554;
t9406 = (-t10292 * t10689 - t10688 * t13306) * t11195 + ((-t9917 - t12868) * t11125 + (-t9916 + t12862) * t11123) * t11196 + (t11123 * t9917 - t11125 * t9916) * t12570;
t10574 = -t11121 * t12562 + t11124 * t11735 + t12587;
t9532 = t9917 * t11197 + (t10574 * t12554 - t13288) * t11196 + (t10574 * t10688 + t9917 * t11122 + (t10292 * t11196 - t13287) * t11124) * t11195;
t12578 = t11123 * t11197;
t9533 = t9916 * t11197 + (t10574 * t12578 + t13287) * t11196 + (-t10574 * t10689 + t9916 * t11122 + (t11196 * t13306 - t13288) * t11124) * t11195;
t9124 = -t13048 * ((-t11145 * t12507 + t12492) * t12191 + (t12877 + t10323 * t12307 - (t11172 * t11634 + t11887) * t12532 + t11297) * t13087) / ((t10127 - t12853) * t11171 + t11923) - t13087 * ((((t11166 * t11571 + t11172 * t12236) * t11149 + 0.2e1 * t11166 * t11656 + t11172 * t12239) * t12532 - t11647 * t13048) * t11133 + (((t11172 * t12138 + (-(t11166 * t12239 - 0.2e1 * t11172 * t11656) * t11149 + t11172 * t11571 - t11166 * t12236) * t11165) * t11145 - t11517 * t13116) * t11146 - (t9238 + pkin(3) * (t12937 * t13236 * t9307 + pkin(2) * t12209)) * t11150) * t11171 + ((-t12203 - t13087) * t11172 * t11779 + (pkin(2) * t11172 * t11686 + (-t11165 * t11517 + (-t12209 - t13048) * t13119) * t11166) * t11144) * t13095 - (t11328 * t13048 + t11275) * t11150) / (t10269 + (((t11646 + t12301) * t11145 + pkin(3) * t11640) * t11146 - t12853) * t11171 + ((pkin(3) * t11973 + t10953 * t11166) * t11145 + t11640 * t12538) * t13095 + (t10783 + pkin(3) * (t11103 + t11591)) * t11150) + t9406 * t12233 + t9533 * t13003 + t9532 * t13000;
t13160 = pkin(2) * t9124;
t12092 = t11019 * t12484;
t11645 = t11167 * t12092;
t11479 = t11145 * t11645;
t11664 = t11174 * t12184;
t11008 = 0.2e1 * t11034 + pkin(2);
t11941 = t11008 * t12526;
t10128 = (t11479 + (t11664 + t11941) * pkin(3)) * t11146;
t10324 = -t11467 + t12121;
t11025 = pkin(2) * t11034;
t10830 = t11149 * t12463 - t12532;
t12488 = t11149 * t11168;
t12815 = t10830 * t11107;
t9419 = (t12488 * t9899 - t12815 * t9905) * t11094 + (t12488 * t9905 + t12815 * t9899) * t11082 - t10830 * t12597;
t12020 = t11107 * t12488;
t12134 = t11168 * t12597;
t9425 = (t10830 * t9899 + t12020 * t9905) * t11094 + (t10830 * t9905 - t12020 * t9899) * t11082 + t11149 * t12134;
t9293 = (t11143 * t9425 + t11147 * t9419) * t11088 + t11076 * (-t11143 * t9419 + t11147 * t9425);
t12019 = t11107 * t12466;
t11256 = -t11082 * (-t11174 * t9905 + t12019 * t9899) + t11094 * (t11174 * t9899 + t12019 * t9905) + t11150 * t12134;
t12619 = t11107 * t11174;
t9443 = (t12466 * t9899 - t12619 * t9905) * t11094 + (t12466 * t9905 + t12619 * t9899) * t11082 - t11174 * t12597;
t9317 = (t11143 * t9443 - t11147 * t11256) * t11088 + t11076 * (t11143 * t11256 + t9443 * t11147);
t9254 = (pkin(3) * t9293 + t11073 * t9317) * t11173 - t11167 * (pkin(3) * t9317 - t11073 * t9293);
t10249 = t10884 + (t11039 + t11664) * t11146;
t11963 = t11145 * t12484;
t10686 = t11146 * t11963 - t11794;
t10809 = t11168 * t12094;
t10911 = t11168 * t11518;
t11544 = t11168 * t11779;
t9623 = (t10686 * t12253 + t10809) * t11134 + ((t10686 * t11019 + t10911) * t11167 - t11023 + pkin(3) * t10249) * t11173 + (t10249 * t11073 + t11069) * t11167 + (t10686 * t13120 - t11146 * t11544) * pkin(9);
t9618 = 0.1e1 / t9623;
t13086 = t9254 * t9618;
t11274 = ((-t11020 + t11025) * t11149 - t11167 * t12295) * t13086;
t11697 = t12629 * t13086;
t11516 = t11059 * t11697;
t11673 = t12402 * t13086;
t11570 = pkin(3) * t11673;
t11639 = t11174 * t12086;
t12489 = t11149 * t11167;
t10805 = pkin(3) * t12489 - t12703;
t10566 = t11173 * t12260 - t10805;
t10318 = -t10566 * t11174 + t10960 * t11168;
t12870 = (t10566 * t11168 + t10960 * t11174) * t11150;
t9449 = t11143 * t9656 + t11147 * t9575;
t9308 = -(-t11076 * t13296 + t9449 * t11088) * t12870 + t10318 * (t11076 * t9449 + t11088 * t13296);
t10380 = -t11167 * t12185 - t12368;
t11966 = t11145 * t12489;
t10501 = t11019 * t11966 + t11909;
t12712 = t11019 * t11134;
t13102 = pkin(9) * t10954;
t9671 = (t10380 * t11173 + (t11134 * t12308 - t11129) * t12364 + t12376) * t11150 + ((t10501 * t11173 + (t11134 * t11924 + t10542) * t11073) * t11174 + (t11008 * t13112 + t12712 + t13102) * t12526) * t11146;
t9666 = 0.1e1 / t9671;
t13047 = t9308 * t9666;
t11843 = t13047 * t11073;
t11655 = pkin(3) * t11843;
t12214 = t11145 * t13086;
t11685 = t11167 * t12214;
t12258 = t11168 * t11073;
t11886 = pkin(3) * t12258;
t12137 = t13086 * t13161;
t12190 = t11020 * t13047;
t12202 = t11149 * t13047;
t12208 = t11149 * t13086;
t10156 = (t11174 * t11446 + t10809 + t12370) * t11134;
t10839 = -t11076 * t11143 + t11088 * t11147;
t10407 = t10833 * t11174 + t10839 * t12466;
t11438 = (-t10833 * t11168 + t10839 * t12463) * t11149 - t10839 * t12532;
t11553 = t11129 * t12698 + t13234;
t12990 = 0.1e1 / (t10156 + ((t10911 - t11548) * t11167 + t12371) * t11173 + t12378 * t11167 + t11419 + ((pkin(3) * t11553 + t11479) * t11173 + (-t11544 + (pkin(3) * t11963 + t11167 * t11553) * t11144) * pkin(9)) * t11146) * ((pkin(3) * t11438 + t10407 * t11073) * t11173 + t11167 * (-pkin(3) * t10407 + t11073 * t11438));
t12231 = t11113 * t12990;
t12235 = t11019 * t13047;
t12238 = t11019 * t13086;
t13115 = pkin(3) * t11168;
t12300 = t11008 * t13115;
t12444 = t11167 * t11173;
t12306 = 0.2e1 * t12444;
t12099 = t11129 * t10974;
t12852 = (-t10974 + t12099 + t12368) * t11150;
t12876 = (-t11647 + (0.2e1 * t11886 + t12092) * t12532) * t11134;
t12936 = t11167 * t9666;
t12685 = t11082 * t11107;
t10360 = t10833 * t11094 + t10839 * t12685;
t10366 = t10833 * t12685 - t10839 * t11094;
t10028 = t10360 * t12466 + t10366 * t11174;
t9787 = (t10360 * t12463 - t10366 * t11168) * t11149 - t10360 * t12532;
t9506 = (pkin(3) * t9787 + t10028 * t11073) * t11173 + t11167 * (-pkin(3) * t10028 + t11073 * t9787);
t12999 = t9506 * t9618;
t12655 = t11094 * t11107;
t10346 = t10833 * t12655 + t10839 * t11082;
t10347 = -t10833 * t11082 + t10839 * t12655;
t10025 = t10346 * t11174 + t10347 * t12466;
t9786 = (-t10346 * t11168 + t10347 * t12463) * t11149 - t10347 * t12532;
t9503 = (-pkin(3) * t9786 - t10025 * t11073) * t11173 - t11167 * (-pkin(3) * t10025 + t11073 * t9786);
t13002 = t9503 * t9618;
t11709 = t11059 * t12214;
t9239 = t11709 * t11073;
t9407 = (-t10293 * t10689 - t10688 * t13305) * t11195 + ((-t9919 - t12867) * t11125 + (-t9918 + t12861) * t11123) * t11196 + (t11123 * t9919 - t11125 * t9918) * t12570;
t10575 = -t11121 * t12561 + t11124 * t11736 + t12586;
t9534 = t9919 * t11197 + (t10575 * t12554 - t13286) * t11196 + (t10575 * t10688 + t9919 * t11122 + (t10293 * t11196 - t13285) * t11124) * t11195;
t9535 = t9918 * t11197 + (t10575 * t12578 + t13285) * t11196 + (-t10575 * t10689 + t9918 * t11122 + (t11196 * t13305 - t13286) * t11124) * t11195;
t9125 = -t13047 * ((-t11145 * t12506 + t12492) * t12190 + (t12876 + t10324 * t12306 - (t11174 * t11634 + t11886) * t12532 + t11297) * t13086) / ((t10128 - t12852) * t11173 + t11922) - t13086 * ((((t11168 * t11570 + t11174 * t12235) * t11149 + 0.2e1 * t11168 * t11655 + t11174 * t12238) * t12532 - t11647 * t13047) * t11134 + (((t11174 * t12137 + (-(t11168 * t12238 - 0.2e1 * t11174 * t11655) * t11149 + t11174 * t11570 - t11168 * t12235) * t11167) * t11145 - t11516 * t13115) * t11146 - (t9239 + pkin(3) * (t12936 * t13236 * t9308 + pkin(2) * t12208)) * t11150) * t11173 + ((-t12202 - t13086) * t11174 * t11779 + (pkin(2) * t11174 * t11685 + (-t11167 * t11516 + (-t12208 - t13047) * t13119) * t11168) * t11144) * t13095 - (t11328 * t13047 + t11274) * t11150) / (t10270 + (((t11645 + t12300) * t11145 + pkin(3) * t11639) * t11146 - t12852) * t11173 + ((pkin(3) * t11972 + t10954 * t11168) * t11145 + t11639 * t12537) * t13095 + (t10784 + pkin(3) * (t11104 + t11591)) * t11150) + t9407 * t12231 + t9535 * t13002 + t9534 * t12999;
t13159 = pkin(2) * t9125;
t12091 = t11019 * t12483;
t11644 = t11169 * t12091;
t11478 = t11145 * t11644;
t11663 = t11176 * t12184;
t11010 = 0.2e1 * t11036 + pkin(2);
t11939 = t11010 * t12524;
t10129 = (t11478 + (t11663 + t11939) * pkin(3)) * t11146;
t10325 = -t11467 + t12120;
t11026 = pkin(2) * t11036;
t10831 = t11149 * t12462 - t12532;
t12486 = t11149 * t11170;
t12814 = t10831 * t11108;
t9420 = (t12486 * t9900 - t12814 * t9906) * t11095 + (t12486 * t9906 + t12814 * t9900) * t11083 - t10831 * t12596;
t12014 = t11108 * t12486;
t12133 = t11170 * t12596;
t9426 = (t10831 * t9900 + t12014 * t9906) * t11095 + (t10831 * t9906 - t12014 * t9900) * t11083 + t11149 * t12133;
t9294 = (t11143 * t9426 + t11147 * t9420) * t11089 + t11077 * (-t11143 * t9420 + t11147 * t9426);
t12013 = t11108 * t12465;
t11255 = -t11083 * (-t11176 * t9906 + t12013 * t9900) + t11095 * (t11176 * t9900 + t12013 * t9906) + t11150 * t12133;
t12614 = t11108 * t11176;
t9444 = (t12465 * t9900 - t12614 * t9906) * t11095 + (t12465 * t9906 + t12614 * t9900) * t11083 - t11176 * t12596;
t9318 = (t11143 * t9444 - t11147 * t11255) * t11089 + t11077 * (t11143 * t11255 + t9444 * t11147);
t9255 = (pkin(3) * t9294 + t11073 * t9318) * t11175 - t11169 * (pkin(3) * t9318 - t11073 * t9294);
t10250 = t10884 + (t11040 + t11663) * t11146;
t11962 = t11145 * t12483;
t10687 = t11146 * t11962 - t11794;
t10810 = t11170 * t12094;
t10912 = t11170 * t11518;
t11543 = t11170 * t11779;
t9624 = (t10687 * t12253 + t10810) * t11135 + ((t10687 * t11019 + t10912) * t11169 - t11023 + pkin(3) * t10250) * t11175 + (t10250 * t11073 + t11069) * t11169 + (t10687 * t13120 - t11146 * t11543) * pkin(9);
t9620 = 0.1e1 / t9624;
t13085 = t9255 * t9620;
t11273 = ((-t11020 + t11026) * t11149 - t11169 * t12295) * t13085;
t11696 = t12629 * t13085;
t11515 = t11059 * t11696;
t11672 = t12402 * t13085;
t11569 = pkin(3) * t11672;
t11638 = t11176 * t12086;
t12487 = t11149 * t11169;
t10806 = pkin(3) * t12487 - t12703;
t10567 = t11175 * t12260 - t10806;
t10319 = -t10567 * t11176 + t10961 * t11170;
t12869 = (t10567 * t11170 + t10961 * t11176) * t11150;
t9450 = t11143 * t9657 + t11147 * t9576;
t9309 = -(-t11077 * t13297 + t9450 * t11089) * t12869 + t10319 * (t11077 * t9450 + t11089 * t13297);
t10382 = -t11169 * t12185 - t12368;
t11965 = t11145 * t12487;
t10502 = t11019 * t11965 + t11909;
t12711 = t11019 * t11135;
t13101 = pkin(9) * t10955;
t9672 = (t10382 * t11175 + (t11135 * t12308 - t11129) * t12364 + t12375) * t11150 + ((t10502 * t11175 + (t11135 * t11924 + t10543) * t11073) * t11176 + (t11010 * t13111 + t12711 + t13101) * t12524) * t11146;
t9668 = 0.1e1 / t9672;
t13046 = t9309 * t9668;
t11842 = t13046 * t11073;
t11654 = pkin(3) * t11842;
t12213 = t11145 * t13085;
t11684 = t11169 * t12213;
t12257 = t11170 * t11073;
t11885 = pkin(3) * t12257;
t12136 = t13085 * t13161;
t12189 = t11020 * t13046;
t12201 = t11149 * t13046;
t12207 = t11149 * t13085;
t10157 = (t11176 * t11446 + t10810 + t12370) * t11135;
t10840 = -t11077 * t11143 + t11089 * t11147;
t10409 = t10834 * t11176 + t10840 * t12465;
t11437 = (-t10834 * t11170 + t10840 * t12462) * t11149 - t10840 * t12532;
t11552 = t11129 * t12697 + t13233;
t12989 = 0.1e1 / (t10157 + ((t10912 - t11548) * t11169 + t12371) * t11175 + t12378 * t11169 + t11419 + ((pkin(3) * t11552 + t11478) * t11175 + (-t11543 + (pkin(3) * t11962 + t11169 * t11552) * t11144) * pkin(9)) * t11146) * ((pkin(3) * t11437 + t10409 * t11073) * t11175 + t11169 * (-pkin(3) * t10409 + t11073 * t11437));
t12229 = t11114 * t12989;
t12234 = t11019 * t13046;
t12237 = t11019 * t13085;
t13114 = pkin(3) * t11170;
t12299 = t11010 * t13114;
t12440 = t11169 * t11175;
t12305 = 0.2e1 * t12440;
t12098 = t11129 * t10975;
t12851 = (-t10975 + t12098 + t12368) * t11150;
t12875 = (-t11647 + (0.2e1 * t11885 + t12091) * t12532) * t11135;
t12935 = t11169 * t9668;
t12680 = t11083 * t11108;
t10361 = t10834 * t11095 + t10840 * t12680;
t10367 = t10834 * t12680 - t10840 * t11095;
t10029 = t10361 * t12465 + t10367 * t11176;
t9789 = (t10361 * t12462 - t10367 * t11170) * t11149 - t10361 * t12532;
t9507 = (pkin(3) * t9789 + t10029 * t11073) * t11175 + t11169 * (-pkin(3) * t10029 + t11073 * t9789);
t12998 = t9507 * t9620;
t12650 = t11095 * t11108;
t10348 = t10834 * t12650 + t10840 * t11083;
t10349 = -t10834 * t11083 + t10840 * t12650;
t10026 = t10348 * t11176 + t10349 * t12465;
t9788 = (-t10348 * t11170 + t10349 * t12462) * t11149 - t10349 * t12532;
t9504 = (-pkin(3) * t9788 - t10026 * t11073) * t11175 - t11169 * (-pkin(3) * t10026 + t11073 * t9788);
t13001 = t9504 * t9620;
t11708 = t11059 * t12213;
t9240 = t11708 * t11073;
t9408 = (-t10294 * t10689 - t10688 * t13304) * t11195 + ((-t9921 - t12866) * t11125 + (-t9920 + t12860) * t11123) * t11196 + (t11123 * t9921 - t11125 * t9920) * t12570;
t10576 = -t11121 * t12560 + t11124 * t11737 + t12585;
t9536 = t9921 * t11197 + (t10576 * t12554 - t13284) * t11196 + (t10576 * t10688 + t9921 * t11122 + (t10294 * t11196 - t13283) * t11124) * t11195;
t9537 = t9920 * t11197 + (t10576 * t12578 + t13283) * t11196 + (-t10576 * t10689 + t9920 * t11122 + (t11196 * t13304 - t13284) * t11124) * t11195;
t9126 = -t13046 * ((-t11145 * t12505 + t12492) * t12189 + (t12875 + t10325 * t12305 - (t11176 * t11634 + t11885) * t12532 + t11297) * t13085) / ((t10129 - t12851) * t11175 + t11921) - t13085 * ((((t11170 * t11569 + t11176 * t12234) * t11149 + 0.2e1 * t11170 * t11654 + t11176 * t12237) * t12532 - t11647 * t13046) * t11135 + (((t11176 * t12136 + (-(t11170 * t12237 - 0.2e1 * t11176 * t11654) * t11149 + t11176 * t11569 - t11170 * t12234) * t11169) * t11145 - t11515 * t13114) * t11146 - (t9240 + pkin(3) * (t12935 * t13236 * t9309 + pkin(2) * t12207)) * t11150) * t11175 + ((-t12201 - t13085) * t11176 * t11779 + (pkin(2) * t11176 * t11684 + (-t11169 * t11515 + (-t12207 - t13046) * t13119) * t11170) * t11144) * t13095 - (t11328 * t13046 + t11273) * t11150) / (t10271 + (((t11644 + t12299) * t11145 + pkin(3) * t11638) * t11146 - t12851) * t11175 + ((pkin(3) * t11971 + t10955 * t11170) * t11145 + t11638 * t12536) * t13095 + (t10785 + pkin(3) * (t11105 + t11591)) * t11150) + t9408 * t12229 + t9537 * t13001 + t9536 * t12998;
t13158 = pkin(2) * t9126;
t12090 = t11019 * t12476;
t11643 = t11183 * t12090;
t11477 = t11145 * t11643;
t11934 = t11012 * t12519;
t10130 = (t11477 + (t11659 + t11934) * pkin(3)) * t11146;
t10356 = -t11467 + t12119;
t11027 = pkin(2) * t11041;
t11272 = ((-t11020 + t11027) * t11149 - t11183 * t12295) * t13084;
t12206 = t11149 * t13084;
t11458 = -t12206 - t13042;
t11695 = t12629 * t13084;
t11514 = t11059 * t11695;
t11637 = t11190 * t12086;
t11671 = t12402 * t13084;
t12212 = t11145 * t13084;
t11683 = t11183 * t12212;
t12256 = t11184 * t11073;
t11884 = pkin(3) * t12256;
t11745 = 0.2e1 * t11884;
t11845 = 0.2e1 * t12364;
t12141 = t13084 * t13161;
t12188 = t11020 * t13042;
t10161 = (t11190 * t11446 + t10817 + t12370) * t11139;
t10841 = -t11078 * t11143 + t11090 * t11147;
t10423 = t10835 * t11190 + t10841 * t12461;
t11436 = (-t10835 * t11184 + t10841 * t12458) * t11149 - t10841 * t12532;
t11551 = t11129 * t12693 + t13232;
t12988 = 0.1e1 / (t10161 + ((t10916 - t11548) * t11183 + t12371) * t11189 + t12378 * t11183 + t11419 + ((pkin(3) * t11551 + t11477) * t11189 + (-t11542 + (pkin(3) * t11958 + t11183 * t11551) * t11144) * pkin(9)) * t11146) * ((pkin(3) * t11436 + t10423 * t11073) * t11189 + t11183 * (-pkin(3) * t10423 + t11073 * t11436));
t12227 = t11115 * t12988;
t13110 = pkin(3) * t11184;
t12298 = t11012 * t13110;
t12433 = t11183 * t11189;
t12304 = 0.2e1 * t12433;
t12707 = t11019 * t11190;
t12097 = t11129 * t10976;
t12850 = (-t10976 + t12097 + t12368) * t11150;
t12874 = (-t11647 + (t11745 + t12090) * t12532) * t11139;
t12934 = t11183 * t9676;
t12675 = t11084 * t11109;
t10362 = t10835 * t11096 + t10841 * t12675;
t10368 = t10835 * t12675 - t10841 * t11096;
t10033 = t10362 * t12461 + t10368 * t11190;
t9791 = (t10362 * t12458 - t10368 * t11184) * t11149 - t10362 * t12532;
t9514 = (pkin(3) * t9791 + t10033 * t11073) * t11189 + t11183 * (-pkin(3) * t10033 + t11073 * t9791);
t12994 = t9514 * t9625;
t12645 = t11096 * t11109;
t10350 = t10835 * t12645 + t10841 * t11084;
t10351 = -t10835 * t11084 + t10841 * t12645;
t10030 = t10350 * t11190 + t10351 * t12461;
t9790 = (-t10350 * t11184 + t10351 * t12458) * t11149 - t10351 * t12532;
t9511 = (-pkin(3) * t9790 - t10030 * t11073) * t11189 - t11183 * (-pkin(3) * t10030 + t11073 * t9790);
t12997 = t9511 * t9625;
t11707 = t11059 * t12212;
t9244 = t11707 * t11073;
t9409 = (-t10295 * t10689 - t10688 * t13303) * t11195 + ((-t9923 - t12865) * t11125 + (-t9922 + t12859) * t11123) * t11196 + (t11123 * t9923 - t11125 * t9922) * t12570;
t10577 = -t11121 * t12559 + t11124 * t11738 + t12584;
t9538 = t9923 * t11197 + (t10577 * t12554 - t13282) * t11196 + (t10577 * t10688 + t9923 * t11122 + (t10295 * t11196 - t13281) * t11124) * t11195;
t9539 = t9922 * t11197 + (t10577 * t12578 + t13281) * t11196 + (-t10577 * t10689 + t9922 * t11122 + (t11196 * t13303 - t13282) * t11124) * t11195;
t9127 = -t13042 * ((-t11145 * t12501 + t12492) * t12188 + (t12874 + t10356 * t12304 - (t11190 * t11634 + t11884) * t12532 + t11297) * t13084) / ((t10130 - t12850) * t11189 + t11920) - t13084 * ((((t11671 * t13110 + t12707 * t13042) * t11149 + t11745 * t13042 + t12707 * t13084) * t12532 - t11647 * t13042) * t11139 + (((t11190 * t12141 + (t11458 * t12431 + t11845 * t13239) * t11183) * t11145 - t11514 * t13110) * t11146 - (t9244 + pkin(3) * (t12934 * t13236 * t9313 + pkin(2) * t12206)) * t11150) * t11189 + (-t11779 * t13239 + (pkin(2) * t11190 * t11683 + (-t11183 * t11514 + t11458 * t13119) * t11184) * t11144) * t13095 - (t11328 * t13042 + t11272) * t11150) / (t10275 + (((t11643 + t12298) * t11145 + pkin(3) * t11637) * t11146 - t12850) * t11189 + ((pkin(3) * t11970 + t10962 * t11184) * t11145 + t11637 * t12535) * t13095 + (t10786 + pkin(3) * (t11118 + t11591)) * t11150) + t9409 * t12227 + t9539 * t12997 + t9538 * t12994;
t13157 = pkin(2) * t9127;
t12089 = t11019 * t12475;
t11642 = t11185 * t12089;
t11476 = t11145 * t11642;
t11932 = t11014 * t12517;
t10131 = (t11476 + (t11658 + t11932) * pkin(3)) * t11146;
t10357 = -t11467 + t12118;
t11028 = pkin(2) * t11043;
t11271 = ((-t11020 + t11028) * t11149 - t11185 * t12295) * t13083;
t12205 = t11149 * t13083;
t11456 = -t12205 - t13041;
t11694 = t12629 * t13083;
t11513 = t11059 * t11694;
t11636 = t11192 * t12086;
t11670 = t12402 * t13083;
t12211 = t11145 * t13083;
t11682 = t11185 * t12211;
t12255 = t11186 * t11073;
t11883 = pkin(3) * t12255;
t11744 = 0.2e1 * t11883;
t12140 = t13083 * t13161;
t12187 = t11020 * t13041;
t10162 = (t11192 * t11446 + t10818 + t12370) * t11140;
t10842 = -t11079 * t11143 + t11091 * t11147;
t10425 = t10836 * t11192 + t10842 * t12460;
t11435 = (-t10836 * t11186 + t10842 * t12457) * t11149 - t10842 * t12532;
t11550 = t11129 * t12692 + t13231;
t12987 = 0.1e1 / (t10162 + ((t10917 - t11548) * t11185 + t12371) * t11191 + t12378 * t11185 + t11419 + ((pkin(3) * t11550 + t11476) * t11191 + (-t11541 + (pkin(3) * t11957 + t11185 * t11550) * t11144) * pkin(9)) * t11146) * ((pkin(3) * t11435 + t10425 * t11073) * t11191 + t11185 * (-pkin(3) * t10425 + t11073 * t11435));
t12225 = t11116 * t12987;
t13109 = pkin(3) * t11186;
t12297 = t11014 * t13109;
t12428 = t11185 * t11191;
t12303 = 0.2e1 * t12428;
t12706 = t11019 * t11192;
t12096 = t11129 * t10977;
t12849 = (-t10977 + t12096 + t12368) * t11150;
t12873 = (-t11647 + (t11744 + t12089) * t12532) * t11140;
t12933 = t11185 * t9678;
t12670 = t11085 * t11110;
t10363 = t10836 * t11097 + t10842 * t12670;
t10369 = t10836 * t12670 - t10842 * t11097;
t10034 = t10363 * t12460 + t10369 * t11192;
t9793 = (t10363 * t12457 - t10369 * t11186) * t11149 - t10363 * t12532;
t9515 = (pkin(3) * t9793 + t10034 * t11073) * t11191 + t11185 * (-pkin(3) * t10034 + t11073 * t9793);
t12993 = t9515 * t9627;
t12640 = t11097 * t11110;
t10352 = t10836 * t12640 + t10842 * t11085;
t10353 = -t10836 * t11085 + t10842 * t12640;
t10031 = t10352 * t11192 + t10353 * t12460;
t9792 = (-t10352 * t11186 + t10353 * t12457) * t11149 - t10353 * t12532;
t9512 = (-pkin(3) * t9792 - t10031 * t11073) * t11191 - t11185 * (-pkin(3) * t10031 + t11073 * t9792);
t12996 = t9512 * t9627;
t11706 = t11059 * t12211;
t9245 = t11706 * t11073;
t9410 = (-t10296 * t10689 - t10688 * t13302) * t11195 + ((-t9925 - t12864) * t11125 + (-t9924 + t12858) * t11123) * t11196 + (t11123 * t9925 - t11125 * t9924) * t12570;
t10578 = -t11121 * t12558 + t11124 * t11739 + t12583;
t9540 = t9925 * t11197 + (t10578 * t12554 - t13280) * t11196 + (t10578 * t10688 + t9925 * t11122 + (t10296 * t11196 - t13279) * t11124) * t11195;
t9541 = t9924 * t11197 + (t10578 * t12578 + t13279) * t11196 + (-t10578 * t10689 + t9924 * t11122 + (t11196 * t13302 - t13280) * t11124) * t11195;
t9128 = -t13041 * ((-t11145 * t12500 + t12492) * t12187 + (t12873 + t10357 * t12303 - (t11192 * t11634 + t11883) * t12532 + t11297) * t13083) / ((t10131 - t12849) * t11191 + t11919) - t13083 * ((((t11670 * t13109 + t12706 * t13041) * t11149 + t11744 * t13041 + t12706 * t13083) * t12532 - t11647 * t13041) * t11140 + (((t11192 * t12140 + (t11456 * t12426 + t11845 * t13238) * t11185) * t11145 - t11513 * t13109) * t11146 - (t9245 + pkin(3) * (t12933 * t13236 * t9314 + pkin(2) * t12205)) * t11150) * t11191 + (-t11779 * t13238 + (pkin(2) * t11192 * t11682 + (-t11185 * t11513 + t11456 * t13119) * t11186) * t11144) * t13095 - (t11328 * t13041 + t11271) * t11150) / (t10276 + (((t11642 + t12297) * t11145 + pkin(3) * t11636) * t11146 - t12849) * t11191 + ((pkin(3) * t11969 + t10963 * t11186) * t11145 + t11636 * t12534) * t13095 + (t10787 + pkin(3) * (t11119 + t11591)) * t11150) + t9410 * t12225 + t9541 * t12996 + t9540 * t12993;
t13156 = pkin(2) * t9128;
t12088 = t11019 * t12474;
t11641 = t11187 * t12088;
t11475 = t11145 * t11641;
t11930 = t11016 * t12515;
t10132 = (t11475 + (t11657 + t11930) * pkin(3)) * t11146;
t10358 = -t11467 + t12117;
t11029 = pkin(2) * t11045;
t11270 = ((-t11020 + t11029) * t11149 - t11187 * t12295) * t13082;
t12204 = t11149 * t13082;
t11454 = -t12204 - t13040;
t11693 = t12629 * t13082;
t11512 = t11059 * t11693;
t11635 = t11194 * t12086;
t11669 = t12402 * t13082;
t12210 = t11145 * t13082;
t11681 = t11187 * t12210;
t12254 = t11188 * t11073;
t11882 = pkin(3) * t12254;
t11743 = 0.2e1 * t11882;
t12139 = t13082 * t13161;
t12186 = t11020 * t13040;
t10163 = (t11194 * t11446 + t10819 + t12370) * t11141;
t10843 = -t11080 * t11143 + t11092 * t11147;
t10427 = t10837 * t11194 + t10843 * t12459;
t11434 = (-t10837 * t11188 + t10843 * t12456) * t11149 - t10843 * t12532;
t11549 = t11129 * t12691 + t13230;
t12986 = 0.1e1 / (t10163 + ((t10918 - t11548) * t11187 + t12371) * t11193 + t12378 * t11187 + t11419 + ((pkin(3) * t11549 + t11475) * t11193 + (-t11540 + (pkin(3) * t11956 + t11187 * t11549) * t11144) * pkin(9)) * t11146) * ((pkin(3) * t11434 + t10427 * t11073) * t11193 + t11187 * (-pkin(3) * t10427 + t11073 * t11434));
t12223 = t11117 * t12986;
t13108 = pkin(3) * t11188;
t12296 = t11016 * t13108;
t12423 = t11187 * t11193;
t12302 = 0.2e1 * t12423;
t12705 = t11019 * t11194;
t12095 = t11129 * t10978;
t12848 = (-t10978 + t12095 + t12368) * t11150;
t12872 = (-t11647 + (t11743 + t12088) * t12532) * t11141;
t12932 = t11187 * t9680;
t12665 = t11086 * t11111;
t10364 = t10837 * t11098 + t10843 * t12665;
t10370 = t10837 * t12665 - t10843 * t11098;
t10035 = t10364 * t12459 + t10370 * t11194;
t9795 = (t10364 * t12456 - t10370 * t11188) * t11149 - t10364 * t12532;
t9516 = (pkin(3) * t9795 + t10035 * t11073) * t11193 + t11187 * (-pkin(3) * t10035 + t11073 * t9795);
t12992 = t9516 * t9629;
t12635 = t11098 * t11111;
t10354 = t10837 * t12635 + t10843 * t11086;
t10355 = -t10837 * t11086 + t10843 * t12635;
t10032 = t10354 * t11194 + t10355 * t12459;
t9794 = (-t10354 * t11188 + t10355 * t12456) * t11149 - t10355 * t12532;
t9513 = (-pkin(3) * t9794 - t10032 * t11073) * t11193 - t11187 * (-pkin(3) * t10032 + t11073 * t9794);
t12995 = t9513 * t9629;
t11705 = t11059 * t12210;
t9246 = t11705 * t11073;
t9411 = (-t10297 * t10689 - t10688 * t13301) * t11195 + ((-t9927 - t12863) * t11125 + (-t9926 + t12857) * t11123) * t11196 + (t11123 * t9927 - t11125 * t9926) * t12570;
t10579 = -t11121 * t12557 + t11124 * t11740 + t12582;
t9542 = t9927 * t11197 + (t10579 * t12554 - t13278) * t11196 + (t10579 * t10688 + t9927 * t11122 + (t10297 * t11196 - t13277) * t11124) * t11195;
t9543 = t9926 * t11197 + (t10579 * t12578 + t13277) * t11196 + (-t10579 * t10689 + t9926 * t11122 + (t11196 * t13301 - t13278) * t11124) * t11195;
t9129 = -t13040 * ((-t11145 * t12499 + t12492) * t12186 + (t12872 + t10358 * t12302 - (t11194 * t11634 + t11882) * t12532 + t11297) * t13082) / ((t10132 - t12848) * t11193 + t11918) - t13082 * ((((t11669 * t13108 + t12705 * t13040) * t11149 + t11743 * t13040 + t12705 * t13082) * t12532 - t11647 * t13040) * t11141 + (((t11194 * t12139 + (t11454 * t12421 + t11845 * t13237) * t11187) * t11145 - t11512 * t13108) * t11146 - (t9246 + pkin(3) * (t12932 * t13236 * t9315 + pkin(2) * t12204)) * t11150) * t11193 + (-t11779 * t13237 + (pkin(2) * t11194 * t11681 + (-t11187 * t11512 + t11454 * t13119) * t11188) * t11144) * t13095 - (t11328 * t13040 + t11270) * t11150) / (t10277 + (((t11641 + t12296) * t11145 + pkin(3) * t11635) * t11146 - t12848) * t11193 + ((pkin(3) * t11968 + t10964 * t11188) * t11145 + t11635 * t12533) * t13095 + (t10788 + pkin(3) * (t11120 + t11591)) * t11150) + t9411 * t12223 + t9543 * t12995 + t9542 * t12992;
t13155 = pkin(2) * t9129;
t9808 = t10580 * t12473 + ((-t10580 * t12628 + t10940 * t11147) * t11087 - (t10580 * t12627 + t10940 * t11143) * t11075) * t11146;
t13154 = t9808 * pkin(3);
t9809 = t10581 * t12472 + ((-t10581 * t12623 + t10941 * t11147) * t11088 - (t10581 * t12622 + t10941 * t11143) * t11076) * t11146;
t13153 = t9809 * pkin(3);
t9810 = t10582 * t12471 + ((-t10582 * t12618 + t10942 * t11147) * t11089 - (t10582 * t12617 + t10942 * t11143) * t11077) * t11146;
t13152 = t9810 * pkin(3);
t9811 = t10583 * t12470 + ((-t10583 * t12613 + t10943 * t11147) * t11090 - (t10583 * t12612 + t10943 * t11143) * t11078) * t11146;
t13151 = t9811 * pkin(3);
t9812 = t10584 * t12469 + ((-t10584 * t12608 + t10944 * t11147) * t11091 - (t10584 * t12607 + t10944 * t11143) * t11079) * t11146;
t13150 = t9812 * pkin(3);
t9813 = t10585 * t12468 + ((-t10585 * t12603 + t10945 * t11147) * t11092 - (t10585 * t12602 + t10945 * t11143) * t11080) * t11146;
t13149 = t9813 * pkin(3);
t9826 = -t10940 * t12473 + ((t10580 * t11147 + t10940 * t12628) * t11087 + (-t10580 * t11143 + t10940 * t12627) * t11075) * t11146;
t13148 = t9826 * pkin(3);
t9827 = -t10941 * t12472 + ((t10581 * t11147 + t10941 * t12623) * t11088 + (-t10581 * t11143 + t10941 * t12622) * t11076) * t11146;
t13147 = t9827 * pkin(3);
t9828 = -t10942 * t12471 + ((t10582 * t11147 + t10942 * t12618) * t11089 + (-t10582 * t11143 + t10942 * t12617) * t11077) * t11146;
t13146 = t9828 * pkin(3);
t9829 = -t10943 * t12470 + ((t10583 * t11147 + t10943 * t12613) * t11090 + (-t10583 * t11143 + t10943 * t12612) * t11078) * t11146;
t13145 = t9829 * pkin(3);
t9830 = -t10944 * t12469 + ((t10584 * t11147 + t10944 * t12608) * t11091 + (-t10584 * t11143 + t10944 * t12607) * t11079) * t11146;
t13144 = t9830 * pkin(3);
t9831 = -t10945 * t12468 + ((t10585 * t11147 + t10945 * t12603) * t11092 + (-t10585 * t11143 + t10945 * t12602) * t11080) * t11146;
t13143 = t9831 * pkin(3);
t13139 = pkin(2) * t11171;
t13138 = pkin(2) * t11173;
t13137 = pkin(2) * t11175;
t13136 = pkin(2) * t11189;
t13135 = pkin(2) * t11191;
t13134 = pkin(2) * t11193;
t13127 = pkin(3) * t11006;
t13126 = pkin(3) * t11008;
t13125 = pkin(3) * t11010;
t13124 = pkin(3) * t11012;
t13123 = pkin(3) * t11014;
t13122 = pkin(3) * t11016;
t13118 = pkin(3) * t11146;
t13104 = pkin(8) * t11145;
t13096 = pkin(9) * t11145;
t10987 = t11059 * t13117;
t11022 = pkin(2) * t12261;
t10699 = -t10987 * t11172 + t11022;
t12294 = t11059 * t13116;
t10479 = t10699 * t11143 - t11147 * t12294;
t10482 = t10699 * t11147 + t11143 * t12294;
t12276 = pkin(3) * t12507;
t10956 = t11059 * t12276;
t10702 = t11023 + t10956;
t12177 = t9826 * t10973;
t12749 = t10940 * t11112;
t12750 = t10940 * t11106;
t9730 = (t10580 * t10856 + t10850 * t12750) * t11087 + (-t10580 * t10850 + t10856 * t12750) * t11075 + t10940 * t11937;
t11244 = t10702 * t12749 - t11075 * (-t10479 * t10580 + t10482 * t12750) - t11087 * (t10479 * t12750 + t10482 * t10580) + t11129 * (-t13121 * t9730 - t12177) + t12177;
t11520 = -0.2e1 * t11590;
t11071 = pkin(2) * t13118;
t11771 = t11172 * t12264;
t10694 = t11150 * t11771 + t11071;
t11785 = t11059 * t12259;
t10434 = t10694 * t11143 + t11147 * t11785;
t10437 = t10694 * t11147 - t11143 * t11785;
t10693 = -t11146 * t11771 + t11069;
t12833 = t10580 * t11112;
t12834 = t10580 * t11106;
t9700 = (t10850 * t12834 - t10856 * t10940) * t11087 + (t10850 * t10940 + t10856 * t12834) * t11075 + t10580 * t11937;
t9376 = ((-t10434 * t12834 + t10437 * t10940) * t11087 + (-t10434 * t10940 - t10437 * t12834) * t11075 + t10693 * t12833) * t11165 + ((t12702 * t9700 - t13154) * t11129 + t13154) * t11073;
t12171 = t9808 * t10973;
t9382 = (-t13121 * t9700 + t12171) * t11129 - t12171 + (-t10479 * t12834 + t10482 * t10940) * t11087 + (-t10479 * t10940 - t10482 * t12834) * t11075 + t10702 * t12833;
t9400 = ((-t10434 * t12750 - t10437 * t10580) * t11087 + (t10434 * t10580 - t10437 * t12750) * t11075 + t10693 * t12749) * t11165 + ((t12702 * t9730 + t13148) * t11129 - t13148) * t11073;
t12510 = t11146 * t11166;
t11942 = t11112 * t12510;
t12783 = t10862 * t11106;
t12786 = t10859 * t11106;
t9703 = (t10580 * t12783 + t10859 * t10940) * t11087 + (-t10580 * t12786 + t10862 * t10940) * t11075 - t10580 * t11942;
t9454 = (-t10973 * t9700 - t13121 * t9808) * t11149 + t9703 * t13127;
t9457 = -(pkin(3) * t9700 + t12702 * t9808) * t12539 + t9703 * t10953;
t9733 = (t10580 * t10859 - t10862 * t12750) * t11087 + (t10580 * t10862 + t10859 * t12750) * t11075 + t10940 * t11942;
t9496 = (t10973 * t9730 - t13121 * t9826) * t11149 + t9733 * t13127;
t9499 = (pkin(3) * t9730 - t12702 * t9826) * t12539 + t9733 * t10953;
t11746 = 0.2e1 * t11888;
t9544 = t11019 * t9703 + t11746 * t9700;
t11747 = -0.2e1 * t11888;
t9562 = t11019 * t9733 + t11747 * t9730;
t9214 = (((-t11123 * t9544 + t11125 * t9562) * t11093 + t11081 * (t11123 * t9562 + t11125 * t9544)) * t11145 + ((-t11123 * t9808 + t11125 * t9826) * t11093 + (t11123 * t9826 + t11125 * t9808) * t11081) * t11520) * t11133 + (((-t11123 * t9454 + t11125 * t9496) * t11093 + t11081 * (t11123 * t9496 + t11125 * t9454)) * t11145 + (-t11123 * t9382 - t11125 * t11244) * t11093 + (-t11123 * t11244 + t9382 * t11125) * t11081) * t11171 + ((-t11123 * t9457 + t11125 * t9499) * t11093 + t11081 * (t11123 * t9499 + t11125 * t9457)) * t13096 + (t11123 * t9376 + t11125 * t9400) * t11093 - (-t11123 * t9400 + t11125 * t9376) * t11081;
t12447 = t11165 * t11172;
t11955 = t11146 * t12447;
t10568 = (t11059 * t11955 - t13117) * t12262;
t10770 = t11150 * t12702 + t12276;
t11597 = (t10770 * t12539 + t10953 * t12510) * t13096 + t10568 + t10693 * t11165 + t11021;
t10559 = t11019 * t11955 + t10987;
t10913 = t11150 * t10973;
t10521 = (-t10913 + t10956) * t11129;
t11917 = t10521 - t10702;
t9958 = (t10559 * t11149 + t11146 * t12301) * t11145 + t10913 + t11917;
t9598 = 0.1e1 / (t11171 * t9958 + t10269 + t11597);
t13093 = t9214 * t9598;
t10700 = -t10987 * t11174 + t11022;
t12293 = t11059 * t13115;
t10480 = t10700 * t11143 - t11147 * t12293;
t10483 = t10700 * t11147 + t11143 * t12293;
t12275 = pkin(3) * t12506;
t10957 = t11059 * t12275;
t10703 = t11023 + t10957;
t12176 = t9827 * t10974;
t12745 = t10941 * t11113;
t12746 = t10941 * t11107;
t9731 = (t10581 * t10857 + t10851 * t12746) * t11088 + (-t10581 * t10851 + t10857 * t12746) * t11076 + t10941 * t11936;
t11243 = t10703 * t12745 - t11076 * (-t10480 * t10581 + t10483 * t12746) - t11088 * (t10480 * t12746 + t10483 * t10581) + t11129 * (-t13121 * t9731 - t12176) + t12176;
t11770 = t11174 * t12264;
t10696 = t11150 * t11770 + t11071;
t11784 = t11059 * t12258;
t10435 = t10696 * t11143 + t11147 * t11784;
t10438 = t10696 * t11147 - t11143 * t11784;
t10695 = -t11146 * t11770 + t11069;
t12831 = t10581 * t11113;
t12832 = t10581 * t11107;
t9701 = (t10851 * t12832 - t10857 * t10941) * t11088 + (t10851 * t10941 + t10857 * t12832) * t11076 + t10581 * t11936;
t9377 = ((-t10435 * t12832 + t10438 * t10941) * t11088 + (-t10435 * t10941 - t10438 * t12832) * t11076 + t10695 * t12831) * t11167 + ((t12701 * t9701 - t13153) * t11129 + t13153) * t11073;
t12170 = t9809 * t10974;
t9383 = (-t13121 * t9701 + t12170) * t11129 - t12170 + (-t10480 * t12832 + t10483 * t10941) * t11088 + (-t10480 * t10941 - t10483 * t12832) * t11076 + t10703 * t12831;
t9401 = ((-t10435 * t12746 - t10438 * t10581) * t11088 + (t10435 * t10581 - t10438 * t12746) * t11076 + t10695 * t12745) * t11167 + ((t12701 * t9731 + t13147) * t11129 - t13147) * t11073;
t12509 = t11146 * t11168;
t11940 = t11113 * t12509;
t12782 = t10863 * t11107;
t12785 = t10860 * t11107;
t9704 = (t10581 * t12782 + t10860 * t10941) * t11088 + (-t10581 * t12785 + t10863 * t10941) * t11076 - t10581 * t11940;
t9455 = (-t10974 * t9701 - t13121 * t9809) * t11149 + t9704 * t13126;
t9458 = -(pkin(3) * t9701 + t12701 * t9809) * t12539 + t9704 * t10954;
t9734 = (t10581 * t10860 - t10863 * t12746) * t11088 + (t10581 * t10863 + t10860 * t12746) * t11076 + t10941 * t11940;
t9497 = (t10974 * t9731 - t13121 * t9827) * t11149 + t9734 * t13126;
t9500 = (pkin(3) * t9731 - t12701 * t9827) * t12539 + t9734 * t10954;
t9545 = t11019 * t9704 + t11746 * t9701;
t9563 = t11019 * t9734 + t11747 * t9731;
t9215 = (((-t11123 * t9545 + t11125 * t9563) * t11094 + t11082 * (t11123 * t9563 + t11125 * t9545)) * t11145 + ((-t11123 * t9809 + t11125 * t9827) * t11094 + (t11123 * t9827 + t11125 * t9809) * t11082) * t11520) * t11134 + (((-t11123 * t9455 + t11125 * t9497) * t11094 + t11082 * (t11123 * t9497 + t11125 * t9455)) * t11145 + (-t11123 * t9383 - t11125 * t11243) * t11094 + (-t11123 * t11243 + t9383 * t11125) * t11082) * t11173 + ((-t11123 * t9458 + t11125 * t9500) * t11094 + t11082 * (t11123 * t9500 + t11125 * t9458)) * t13096 + (t11123 * t9377 + t11125 * t9401) * t11094 - (-t11123 * t9401 + t11125 * t9377) * t11082;
t12443 = t11167 * t11174;
t11954 = t11146 * t12443;
t10569 = (t11059 * t11954 - t13117) * t12262;
t10771 = t11150 * t12701 + t12275;
t11596 = (t10771 * t12539 + t10954 * t12509) * t13096 + t10569 + t10695 * t11167 + t11021;
t10560 = t11019 * t11954 + t10987;
t10914 = t11150 * t10974;
t10522 = (-t10914 + t10957) * t11129;
t11916 = t10522 - t10703;
t9959 = (t10560 * t11149 + t11146 * t12300) * t11145 + t10914 + t11916;
t9599 = 0.1e1 / (t11173 * t9959 + t10270 + t11596);
t13092 = t9215 * t9599;
t10701 = -t10987 * t11176 + t11022;
t12292 = t11059 * t13114;
t10481 = t10701 * t11143 - t11147 * t12292;
t10484 = t10701 * t11147 + t11143 * t12292;
t12274 = pkin(3) * t12505;
t10958 = t11059 * t12274;
t10704 = t11023 + t10958;
t12175 = t9828 * t10975;
t12741 = t10942 * t11114;
t12742 = t10942 * t11108;
t9732 = (t10582 * t10858 + t10852 * t12742) * t11089 + (-t10582 * t10852 + t10858 * t12742) * t11077 + t10942 * t11935;
t11242 = t10704 * t12741 - t11077 * (-t10481 * t10582 + t10484 * t12742) - t11089 * (t10481 * t12742 + t10484 * t10582) + t11129 * (-t13121 * t9732 - t12175) + t12175;
t11769 = t11176 * t12264;
t10698 = t11150 * t11769 + t11071;
t11783 = t11059 * t12257;
t10436 = t10698 * t11143 + t11147 * t11783;
t10439 = t10698 * t11147 - t11143 * t11783;
t10697 = -t11146 * t11769 + t11069;
t12829 = t10582 * t11114;
t12830 = t10582 * t11108;
t9702 = (t10852 * t12830 - t10858 * t10942) * t11089 + (t10852 * t10942 + t10858 * t12830) * t11077 + t10582 * t11935;
t9378 = ((-t10436 * t12830 + t10439 * t10942) * t11089 + (-t10436 * t10942 - t10439 * t12830) * t11077 + t10697 * t12829) * t11169 + ((t12700 * t9702 - t13152) * t11129 + t13152) * t11073;
t12169 = t9810 * t10975;
t9384 = (-t13121 * t9702 + t12169) * t11129 - t12169 + (-t10481 * t12830 + t10484 * t10942) * t11089 + (-t10481 * t10942 - t10484 * t12830) * t11077 + t10704 * t12829;
t9402 = ((-t10436 * t12742 - t10439 * t10582) * t11089 + (t10436 * t10582 - t10439 * t12742) * t11077 + t10697 * t12741) * t11169 + ((t12700 * t9732 + t13146) * t11129 - t13146) * t11073;
t12508 = t11146 * t11170;
t11938 = t11114 * t12508;
t12781 = t10864 * t11108;
t12784 = t10861 * t11108;
t9705 = (t10582 * t12781 + t10861 * t10942) * t11089 + (-t10582 * t12784 + t10864 * t10942) * t11077 - t10582 * t11938;
t9456 = (-t10975 * t9702 - t13121 * t9810) * t11149 + t9705 * t13125;
t9459 = -(pkin(3) * t9702 + t12700 * t9810) * t12539 + t9705 * t10955;
t9735 = (t10582 * t10861 - t10864 * t12742) * t11089 + (t10582 * t10864 + t10861 * t12742) * t11077 + t10942 * t11938;
t9498 = (t10975 * t9732 - t13121 * t9828) * t11149 + t9735 * t13125;
t9501 = (pkin(3) * t9732 - t12700 * t9828) * t12539 + t9735 * t10955;
t9546 = t11019 * t9705 + t11746 * t9702;
t9564 = t11019 * t9735 + t11747 * t9732;
t9216 = (((-t11123 * t9546 + t11125 * t9564) * t11095 + t11083 * (t11123 * t9564 + t11125 * t9546)) * t11145 + ((-t11123 * t9810 + t11125 * t9828) * t11095 + (t11123 * t9828 + t11125 * t9810) * t11083) * t11520) * t11135 + (((-t11123 * t9456 + t11125 * t9498) * t11095 + t11083 * (t11123 * t9498 + t11125 * t9456)) * t11145 + (-t11123 * t9384 - t11125 * t11242) * t11095 + (-t11123 * t11242 + t9384 * t11125) * t11083) * t11175 + ((-t11123 * t9459 + t11125 * t9501) * t11095 + t11083 * (t11123 * t9501 + t11125 * t9459)) * t13096 + (t11123 * t9378 + t11125 * t9402) * t11095 - (-t11123 * t9402 + t11125 * t9378) * t11083;
t12439 = t11169 * t11176;
t11953 = t11146 * t12439;
t10570 = (t11059 * t11953 - t13117) * t12262;
t10772 = t11150 * t12700 + t12274;
t11595 = (t10772 * t12539 + t10955 * t12508) * t13096 + t10570 + t10697 * t11169 + t11021;
t10561 = t11019 * t11953 + t10987;
t10915 = t11150 * t10975;
t10523 = (-t10915 + t10958) * t11129;
t11915 = t10523 - t10704;
t9960 = (t10561 * t11149 + t11146 * t12299) * t11145 + t10915 + t11915;
t9600 = 0.1e1 / (t11175 * t9960 + t10271 + t11595);
t13091 = t9216 * t9600;
t10711 = -t10987 * t11190 + t11022;
t12291 = t11059 * t13110;
t10485 = t10711 * t11143 - t11147 * t12291;
t10488 = t10711 * t11147 + t11143 * t12291;
t12273 = pkin(3) * t12501;
t10965 = t11059 * t12273;
t10714 = t11023 + t10965;
t12174 = t9829 * t10976;
t12737 = t10943 * t11115;
t12738 = t10943 * t11109;
t9739 = (t10583 * t10872 + t10869 * t12738) * t11090 + (-t10583 * t10869 + t10872 * t12738) * t11078 + t10943 * t11928;
t11241 = t10714 * t12737 - t11078 * (-t10485 * t10583 + t10488 * t12738) - t11090 * (t10485 * t12738 + t10488 * t10583) + t11129 * (-t13121 * t9739 - t12174) + t12174;
t11768 = t11190 * t12264;
t10706 = t11150 * t11768 + t11071;
t11782 = t11059 * t12256;
t10449 = t10706 * t11143 + t11147 * t11782;
t10452 = t10706 * t11147 - t11143 * t11782;
t10705 = -t11146 * t11768 + t11069;
t12827 = t10583 * t11115;
t12828 = t10583 * t11109;
t9706 = (t10869 * t12828 - t10872 * t10943) * t11090 + (t10869 * t10943 + t10872 * t12828) * t11078 + t10583 * t11928;
t9379 = ((-t10449 * t12828 + t10452 * t10943) * t11090 + (-t10449 * t10943 - t10452 * t12828) * t11078 + t10705 * t12827) * t11183 + ((t12696 * t9706 - t13151) * t11129 + t13151) * t11073;
t12168 = t9811 * t10976;
t9385 = (-t13121 * t9706 + t12168) * t11129 - t12168 + (-t10485 * t12828 + t10488 * t10943) * t11090 + (-t10485 * t10943 - t10488 * t12828) * t11078 + t10714 * t12827;
t9403 = ((-t10449 * t12738 - t10452 * t10583) * t11090 + (t10449 * t10583 - t10452 * t12738) * t11078 + t10705 * t12737) * t11183 + ((t12696 * t9739 + t13145) * t11129 - t13145) * t11073;
t12504 = t11146 * t11184;
t11933 = t11115 * t12504;
t12771 = t10878 * t11109;
t12774 = t10875 * t11109;
t9709 = (t10583 * t12771 + t10875 * t10943) * t11090 + (-t10583 * t12774 + t10878 * t10943) * t11078 - t10583 * t11933;
t9460 = (-t10976 * t9706 - t13121 * t9811) * t11149 + t9709 * t13124;
t9463 = -(pkin(3) * t9706 + t12696 * t9811) * t12539 + t9709 * t10962;
t9742 = (t10583 * t10875 - t10878 * t12738) * t11090 + (t10583 * t10878 + t10875 * t12738) * t11078 + t10943 * t11933;
t9508 = (t10976 * t9739 - t13121 * t9829) * t11149 + t9742 * t13124;
t9517 = (pkin(3) * t9739 - t12696 * t9829) * t12539 + t9742 * t10962;
t9547 = t11019 * t9709 + t11746 * t9706;
t9565 = t11019 * t9742 + t11747 * t9739;
t9217 = (((-t11123 * t9547 + t11125 * t9565) * t11096 + t11084 * (t11123 * t9565 + t11125 * t9547)) * t11145 + ((-t11123 * t9811 + t11125 * t9829) * t11096 + (t11123 * t9829 + t11125 * t9811) * t11084) * t11520) * t11139 + (((-t11123 * t9460 + t11125 * t9508) * t11096 + t11084 * (t11123 * t9508 + t11125 * t9460)) * t11145 + (-t11123 * t9385 - t11125 * t11241) * t11096 + (-t11123 * t11241 + t9385 * t11125) * t11084) * t11189 + ((-t11123 * t9463 + t11125 * t9517) * t11096 + (t11123 * t9517 + t11125 * t9463) * t11084) * t13096 + (t11123 * t9379 + t11125 * t9403) * t11096 - t11084 * (-t11123 * t9403 + t11125 * t9379);
t12432 = t11183 * t11190;
t11949 = t11146 * t12432;
t10586 = (t11059 * t11949 - t13117) * t12262;
t10773 = t11150 * t12696 + t12273;
t11594 = (t10773 * t12539 + t10962 * t12504) * t13096 + t10586 + t10705 * t11183 + t11021;
t10562 = t11019 * t11949 + t10987;
t10919 = t11150 * t10976;
t10524 = (-t10919 + t10965) * t11129;
t11914 = t10524 - t10714;
t9979 = (t10562 * t11149 + t11146 * t12298) * t11145 + t10919 + t11914;
t9601 = 0.1e1 / (t11189 * t9979 + t10275 + t11594);
t13090 = t9217 * t9601;
t10712 = -t10987 * t11192 + t11022;
t12290 = t11059 * t13109;
t10486 = t10712 * t11143 - t11147 * t12290;
t10489 = t10712 * t11147 + t11143 * t12290;
t12272 = pkin(3) * t12500;
t10966 = t11059 * t12272;
t10715 = t11023 + t10966;
t12173 = t9830 * t10977;
t12733 = t10944 * t11116;
t12734 = t10944 * t11110;
t9740 = (t10584 * t10873 + t10870 * t12734) * t11091 + (-t10584 * t10870 + t10873 * t12734) * t11079 + t10944 * t11927;
t11240 = t10715 * t12733 - t11079 * (-t10486 * t10584 + t10489 * t12734) - t11091 * (t10486 * t12734 + t10489 * t10584) + t11129 * (-t13121 * t9740 - t12173) + t12173;
t11767 = t11192 * t12264;
t10708 = t11150 * t11767 + t11071;
t11781 = t11059 * t12255;
t10450 = t10708 * t11143 + t11147 * t11781;
t10453 = t10708 * t11147 - t11143 * t11781;
t10707 = -t11146 * t11767 + t11069;
t12825 = t10584 * t11116;
t12826 = t10584 * t11110;
t9707 = (t10870 * t12826 - t10873 * t10944) * t11091 + (t10870 * t10944 + t10873 * t12826) * t11079 + t10584 * t11927;
t9380 = ((-t10450 * t12826 + t10453 * t10944) * t11091 + (-t10450 * t10944 - t10453 * t12826) * t11079 + t10707 * t12825) * t11185 + ((t12695 * t9707 - t13150) * t11129 + t13150) * t11073;
t12167 = t9812 * t10977;
t9386 = (-t13121 * t9707 + t12167) * t11129 - t12167 + (-t10486 * t12826 + t10489 * t10944) * t11091 + (-t10486 * t10944 - t10489 * t12826) * t11079 + t10715 * t12825;
t9404 = ((-t10450 * t12734 - t10453 * t10584) * t11091 + (t10450 * t10584 - t10453 * t12734) * t11079 + t10707 * t12733) * t11185 + ((t12695 * t9740 + t13144) * t11129 - t13144) * t11073;
t12503 = t11146 * t11186;
t11931 = t11116 * t12503;
t12770 = t10879 * t11110;
t12773 = t10876 * t11110;
t9710 = (t10584 * t12770 + t10876 * t10944) * t11091 + (-t10584 * t12773 + t10879 * t10944) * t11079 - t10584 * t11931;
t9461 = (-t10977 * t9707 - t13121 * t9812) * t11149 + t9710 * t13123;
t9464 = -(pkin(3) * t9707 + t12695 * t9812) * t12539 + t9710 * t10963;
t9743 = (t10584 * t10876 - t10879 * t12734) * t11091 + (t10584 * t10879 + t10876 * t12734) * t11079 + t10944 * t11931;
t9509 = (t10977 * t9740 - t13121 * t9830) * t11149 + t9743 * t13123;
t9518 = (pkin(3) * t9740 - t12695 * t9830) * t12539 + t9743 * t10963;
t9548 = t11019 * t9710 + t11746 * t9707;
t9566 = t11019 * t9743 + t11747 * t9740;
t9218 = (((-t11123 * t9548 + t11125 * t9566) * t11097 + t11085 * (t11123 * t9566 + t11125 * t9548)) * t11145 + ((-t11123 * t9812 + t11125 * t9830) * t11097 + (t11123 * t9830 + t11125 * t9812) * t11085) * t11520) * t11140 + (((-t11123 * t9461 + t11125 * t9509) * t11097 + t11085 * (t11123 * t9509 + t11125 * t9461)) * t11145 + (-t11123 * t9386 - t11125 * t11240) * t11097 + (-t11123 * t11240 + t9386 * t11125) * t11085) * t11191 + ((-t11123 * t9464 + t11125 * t9518) * t11097 + (t11123 * t9518 + t11125 * t9464) * t11085) * t13096 + (t11123 * t9380 + t11125 * t9404) * t11097 - t11085 * (-t11123 * t9404 + t11125 * t9380);
t12427 = t11185 * t11192;
t11948 = t11146 * t12427;
t10587 = (t11059 * t11948 - t13117) * t12262;
t10774 = t11150 * t12695 + t12272;
t11593 = (t10774 * t12539 + t10963 * t12503) * t13096 + t10587 + t10707 * t11185 + t11021;
t10563 = t11019 * t11948 + t10987;
t10920 = t11150 * t10977;
t10525 = (-t10920 + t10966) * t11129;
t11913 = t10525 - t10715;
t9980 = (t10563 * t11149 + t11146 * t12297) * t11145 + t10920 + t11913;
t9602 = 0.1e1 / (t11191 * t9980 + t10276 + t11593);
t13089 = t9218 * t9602;
t10713 = -t10987 * t11194 + t11022;
t12289 = t11059 * t13108;
t10487 = t10713 * t11143 - t11147 * t12289;
t10490 = t10713 * t11147 + t11143 * t12289;
t12271 = pkin(3) * t12499;
t10967 = t11059 * t12271;
t10716 = t11023 + t10967;
t12172 = t9831 * t10978;
t12729 = t10945 * t11117;
t12730 = t10945 * t11111;
t9741 = (t10585 * t10874 + t10871 * t12730) * t11092 + (-t10585 * t10871 + t10874 * t12730) * t11080 + t10945 * t11926;
t11239 = t10716 * t12729 - t11080 * (-t10487 * t10585 + t10490 * t12730) - t11092 * (t10487 * t12730 + t10490 * t10585) + t11129 * (-t13121 * t9741 - t12172) + t12172;
t11766 = t11194 * t12264;
t10710 = t11150 * t11766 + t11071;
t11780 = t11059 * t12254;
t10451 = t10710 * t11143 + t11147 * t11780;
t10454 = t10710 * t11147 - t11143 * t11780;
t10709 = -t11146 * t11766 + t11069;
t12823 = t10585 * t11117;
t12824 = t10585 * t11111;
t9708 = (t10871 * t12824 - t10874 * t10945) * t11092 + (t10871 * t10945 + t10874 * t12824) * t11080 + t10585 * t11926;
t9381 = ((-t10451 * t12824 + t10454 * t10945) * t11092 + (-t10451 * t10945 - t10454 * t12824) * t11080 + t10709 * t12823) * t11187 + ((t12694 * t9708 - t13149) * t11129 + t13149) * t11073;
t12166 = t9813 * t10978;
t9387 = (-t13121 * t9708 + t12166) * t11129 - t12166 + (-t10487 * t12824 + t10490 * t10945) * t11092 + (-t10487 * t10945 - t10490 * t12824) * t11080 + t10716 * t12823;
t9405 = ((-t10451 * t12730 - t10454 * t10585) * t11092 + (t10451 * t10585 - t10454 * t12730) * t11080 + t10709 * t12729) * t11187 + ((t12694 * t9741 + t13143) * t11129 - t13143) * t11073;
t12502 = t11146 * t11188;
t11929 = t11117 * t12502;
t12769 = t10880 * t11111;
t12772 = t10877 * t11111;
t9711 = (t10585 * t12769 + t10877 * t10945) * t11092 + (-t10585 * t12772 + t10880 * t10945) * t11080 - t10585 * t11929;
t9462 = (-t10978 * t9708 - t13121 * t9813) * t11149 + t9711 * t13122;
t9465 = -(pkin(3) * t9708 + t12694 * t9813) * t12539 + t9711 * t10964;
t9744 = (t10585 * t10877 - t10880 * t12730) * t11092 + (t10585 * t10880 + t10877 * t12730) * t11080 + t10945 * t11929;
t9510 = (t10978 * t9741 - t13121 * t9831) * t11149 + t9744 * t13122;
t9519 = (pkin(3) * t9741 - t12694 * t9831) * t12539 + t9744 * t10964;
t9549 = t11019 * t9711 + t11746 * t9708;
t9567 = t11019 * t9744 + t11747 * t9741;
t9219 = (((-t11123 * t9549 + t11125 * t9567) * t11098 + (t11123 * t9567 + t11125 * t9549) * t11086) * t11145 + ((-t11123 * t9813 + t11125 * t9831) * t11098 + (t11123 * t9831 + t11125 * t9813) * t11086) * t11520) * t11141 + (((-t11123 * t9462 + t11125 * t9510) * t11098 + t11086 * (t11123 * t9510 + t11125 * t9462)) * t11145 + (-t11123 * t9387 - t11125 * t11239) * t11098 + (-t11123 * t11239 + t9387 * t11125) * t11086) * t11193 + ((-t11123 * t9465 + t11125 * t9519) * t11098 + (t11123 * t9519 + t11125 * t9465) * t11086) * t13096 + (t11123 * t9381 + t11125 * t9405) * t11098 - t11086 * (-t11123 * t9405 + t11125 * t9381);
t12422 = t11187 * t11194;
t11947 = t11146 * t12422;
t10588 = (t11059 * t11947 - t13117) * t12262;
t10775 = t11150 * t12694 + t12271;
t11592 = (t10775 * t12539 + t10964 * t12502) * t13096 + t10588 + t10709 * t11187 + t11021;
t10564 = t11019 * t11947 + t10987;
t10921 = t11150 * t10978;
t10526 = (-t10921 + t10967) * t11129;
t11912 = t10526 - t10716;
t9981 = (t10564 * t11149 + t11146 * t12296) * t11145 + t10921 + t11912;
t9603 = 0.1e1 / (t11193 * t9981 + t10277 + t11592);
t13088 = t9219 * t9603;
t9250 = t9253 ^ 2;
t9617 = 0.1e1 / t9622 ^ 2;
t9241 = t9250 * t9617;
t9251 = t9254 ^ 2;
t9619 = 0.1e1 / t9623 ^ 2;
t9242 = t9251 * t9619;
t9252 = t9255 ^ 2;
t9621 = 0.1e1 / t9624 ^ 2;
t9243 = t9252 * t9621;
t9256 = t9259 ^ 2;
t9626 = 0.1e1 / t9631 ^ 2;
t9247 = t9256 * t9626;
t9257 = t9260 ^ 2;
t9628 = 0.1e1 / t9632 ^ 2;
t9248 = t9257 * t9628;
t9258 = t9261 ^ 2;
t9630 = 0.1e1 / t9633 ^ 2;
t9249 = t9258 * t9630;
t11621 = t11122 * t11952;
t9469 = t13211 * t11112 + (-t11081 * t11937 - t11510) * t12587 + t13205;
t11238 = (-t13263 * t12531 + t9469 * t11129 + (t11081 * t11621 - t13211) * t11112 + t11510 * t12587 - t13205) * t11059;
t12165 = t9469 * t12531;
t11309 = t11129 * t13263 + t12165 - t13263;
t12350 = 0.2e1 * t11133;
t12546 = t11133 * t11145;
t12719 = t11006 * t11145;
t12726 = t10953 * t11145;
t12656 = t11093 * t11172;
t10637 = -t11081 * t12025 + t12656;
t12041 = t11093 * t12467;
t10649 = t11081 * t12624 + t12041;
t10200 = t10637 * t11147 - t10649 * t11143;
t10212 = t10637 * t11143 + t10649 * t11147;
t11495 = t10859 * t11075 - t10862 * t11087;
t11352 = t11124 * t11495;
t12028 = t11106 * t12510;
t11633 = t11204 * t12028;
t11653 = t12510 * t12768;
t11992 = t11122 * t12510;
t12053 = t11087 * t12587;
t12077 = t11075 * t12587;
t9470 = (t11081 * t11653 + (t11081 * t11992 + t11123 * t11352) * t11204 - t11495 * t10392) * t11112 + (-t11123 * t11633 - (t10200 * t11075 + t10212 * t11087) * t11310) * t11124 - t10212 * t12053 - t10200 * t12077 + t10392 * t12028;
t9262 = (t11309 * t12448 - t12546 * t9470) * t11019 + ((-t12719 * t9470 + t11238) * t11171 - t13263 * t11103) * pkin(3) + (-t9470 * t12726 + (((-t12629 * t13263 - t12165) * t12350 + t11309) * pkin(3) + t11165 * t11238 + t13263 * t13139) * t11144) * pkin(9);
t13081 = t9262 * t9598;
t9471 = t13212 * t11112 + (-t11093 * t11937 - t11509) * t12587 + t13223;
t11237 = (-t13264 * t12531 + t9471 * t11129 + (t11093 * t11621 - t13212) * t11112 + t11509 * t12587 - t13223) * t11059;
t12164 = t9471 * t12531;
t11308 = t11129 * t13264 + t12164 - t13264;
t12686 = t11081 * t11172;
t10638 = t11093 * t12025 + t12686;
t12065 = t11081 * t12467;
t10650 = t11093 * t12624 - t12065;
t10201 = t10638 * t11147 + t10650 * t11143;
t10213 = -t10638 * t11143 + t10650 * t11147;
t9472 = (t11093 * t11653 + (t11093 * t11992 + t11125 * t11352) * t11204 - t11495 * t10393) * t11112 + (-t11125 * t11633 - (-t10201 * t11075 + t10213 * t11087) * t11310) * t11124 - t10213 * t12053 + t10201 * t12077 + t10393 * t12028;
t9263 = (t11308 * t12448 - t12546 * t9472) * t11019 + ((-t12719 * t9472 + t11237) * t11171 - t13264 * t11103) * pkin(3) + (-t9472 * t12726 + (((-t12629 * t13264 - t12164) * t12350 + t11308) * pkin(3) + t11165 * t11237 + t13264 * t13139) * t11144) * pkin(9);
t13080 = t9263 * t9598;
t11620 = t11122 * t11951;
t9473 = t13213 * t11113 + (-t11082 * t11936 - t11508) * t12586 + t13206;
t11236 = (-t13261 * t12531 + t9473 * t11129 + (t11082 * t11620 - t13213) * t11113 + t11508 * t12586 - t13206) * t11059;
t12163 = t9473 * t12531;
t11307 = t11129 * t13261 + t12163 - t13261;
t12349 = 0.2e1 * t11134;
t12545 = t11134 * t11145;
t12718 = t11008 * t11145;
t12725 = t10954 * t11145;
t12651 = t11094 * t11174;
t10639 = -t11082 * t12019 + t12651;
t12039 = t11094 * t12466;
t10653 = t11082 * t12619 + t12039;
t10202 = t10639 * t11147 - t10653 * t11143;
t10216 = t10639 * t11143 + t10653 * t11147;
t11494 = t10860 * t11076 - t10863 * t11088;
t11351 = t11124 * t11494;
t12022 = t11107 * t12509;
t11631 = t11205 * t12022;
t11652 = t12509 * t12765;
t11991 = t11122 * t12509;
t12051 = t11088 * t12586;
t12075 = t11076 * t12586;
t9474 = (t11082 * t11652 + (t11082 * t11991 + t11123 * t11351) * t11205 - t11494 * t10394) * t11113 + (-t11123 * t11631 - (t10202 * t11076 + t10216 * t11088) * t11311) * t11124 - t10216 * t12051 - t10202 * t12075 + t10394 * t12022;
t9264 = (t11307 * t12444 - t12545 * t9474) * t11019 + ((-t12718 * t9474 + t11236) * t11173 - t13261 * t11104) * pkin(3) + (-t9474 * t12725 + (((-t12629 * t13261 - t12163) * t12349 + t11307) * pkin(3) + t11167 * t11236 + t13261 * t13138) * t11144) * pkin(9);
t13079 = t9264 * t9599;
t9475 = t13214 * t11113 + (-t11094 * t11936 - t11507) * t12586 + t13224;
t11235 = (-t13262 * t12531 + t9475 * t11129 + (t11094 * t11620 - t13214) * t11113 + t11507 * t12586 - t13224) * t11059;
t12162 = t9475 * t12531;
t11306 = t11129 * t13262 + t12162 - t13262;
t12681 = t11082 * t11174;
t10640 = t11094 * t12019 + t12681;
t12063 = t11082 * t12466;
t10654 = t11094 * t12619 - t12063;
t10203 = t10640 * t11147 + t10654 * t11143;
t10217 = -t10640 * t11143 + t10654 * t11147;
t9476 = (t11094 * t11652 + (t11094 * t11991 + t11125 * t11351) * t11205 - t11494 * t10395) * t11113 + (-t11125 * t11631 - (-t10203 * t11076 + t10217 * t11088) * t11311) * t11124 - t10217 * t12051 + t10203 * t12075 + t10395 * t12022;
t9265 = (t11306 * t12444 - t12545 * t9476) * t11019 + ((-t12718 * t9476 + t11235) * t11173 - t13262 * t11104) * pkin(3) + (-t9476 * t12725 + (((-t12629 * t13262 - t12162) * t12349 + t11306) * pkin(3) + t11167 * t11235 + t13262 * t13138) * t11144) * pkin(9);
t13078 = t9265 * t9599;
t11619 = t11122 * t11950;
t9477 = t13215 * t11114 + (-t11083 * t11935 - t11506) * t12585 + t13207;
t11234 = (-t13259 * t12531 + t9477 * t11129 + (t11083 * t11619 - t13215) * t11114 + t11506 * t12585 - t13207) * t11059;
t12161 = t9477 * t12531;
t11305 = t11129 * t13259 + t12161 - t13259;
t12348 = 0.2e1 * t11135;
t12544 = t11135 * t11145;
t12717 = t11010 * t11145;
t12724 = t10955 * t11145;
t12646 = t11095 * t11176;
t10641 = -t11083 * t12013 + t12646;
t12037 = t11095 * t12465;
t10657 = t11083 * t12614 + t12037;
t10204 = t10641 * t11147 - t10657 * t11143;
t10220 = t10641 * t11143 + t10657 * t11147;
t11493 = t10861 * t11077 - t10864 * t11089;
t11350 = t11124 * t11493;
t12016 = t11108 * t12508;
t11629 = t11206 * t12016;
t11651 = t12508 * t12762;
t11990 = t11122 * t12508;
t12049 = t11089 * t12585;
t12073 = t11077 * t12585;
t9478 = (t11083 * t11651 + (t11083 * t11990 + t11123 * t11350) * t11206 - t11493 * t10396) * t11114 + (-t11123 * t11629 - (t10204 * t11077 + t10220 * t11089) * t11312) * t11124 - t10220 * t12049 - t10204 * t12073 + t10396 * t12016;
t9266 = (t11305 * t12440 - t12544 * t9478) * t11019 + ((-t12717 * t9478 + t11234) * t11175 - t13259 * t11105) * pkin(3) + (-t9478 * t12724 + (((-t12629 * t13259 - t12161) * t12348 + t11305) * pkin(3) + t11169 * t11234 + t13259 * t13137) * t11144) * pkin(9);
t13077 = t9266 * t9600;
t9479 = t13216 * t11114 + (-t11095 * t11935 - t11505) * t12585 + t13225;
t11233 = (-t13260 * t12531 + t9479 * t11129 + (t11095 * t11619 - t13216) * t11114 + t11505 * t12585 - t13225) * t11059;
t12160 = t9479 * t12531;
t11304 = t11129 * t13260 + t12160 - t13260;
t12676 = t11083 * t11176;
t10642 = t11095 * t12013 + t12676;
t12061 = t11083 * t12465;
t10658 = t11095 * t12614 - t12061;
t10205 = t10642 * t11147 + t10658 * t11143;
t10221 = -t10642 * t11143 + t10658 * t11147;
t9480 = (t11095 * t11651 + (t11095 * t11990 + t11125 * t11350) * t11206 - t11493 * t10397) * t11114 + (-t11125 * t11629 - (-t10205 * t11077 + t10221 * t11089) * t11312) * t11124 - t10221 * t12049 + t10205 * t12073 + t10397 * t12016;
t9267 = (t11304 * t12440 - t12544 * t9480) * t11019 + ((-t12717 * t9480 + t11233) * t11175 - t13260 * t11105) * pkin(3) + (-t9480 * t12724 + (((-t12629 * t13260 - t12160) * t12348 + t11304) * pkin(3) + t11169 * t11233 + t13260 * t13137) * t11144) * pkin(9);
t13076 = t9267 * t9600;
t11618 = t11122 * t11946;
t9484 = t13217 * t11115 + (-t11084 * t11928 - t11504) * t12584 + t13208;
t11232 = (-t13257 * t12531 + t9484 * t11129 + (t11084 * t11618 - t13217) * t11115 + t11504 * t12584 - t13208) * t11059;
t12159 = t9484 * t12531;
t11303 = t11129 * t13257 + t12159 - t13257;
t12347 = 0.2e1 * t11139;
t12543 = t11139 * t11145;
t12716 = t11012 * t11145;
t12723 = t10962 * t11145;
t12641 = t11096 * t11190;
t10661 = -t11084 * t12007 + t12641;
t12035 = t11096 * t12461;
t10673 = t11084 * t12609 + t12035;
t10224 = t10661 * t11147 - t10673 * t11143;
t10236 = t10661 * t11143 + t10673 * t11147;
t11489 = t10875 * t11078 - t10878 * t11090;
t11349 = t11124 * t11489;
t12010 = t11109 * t12504;
t11627 = t11207 * t12010;
t11650 = t12504 * t12759;
t11989 = t11122 * t12504;
t12047 = t11090 * t12584;
t12071 = t11078 * t12584;
t9485 = (t11084 * t11650 + (t11084 * t11989 + t11123 * t11349) * t11207 - t11489 * t10398) * t11115 + (-t11123 * t11627 - (t10224 * t11078 + t10236 * t11090) * t11313) * t11124 - t10236 * t12047 - t10224 * t12071 + t10398 * t12010;
t9268 = (t11303 * t12433 - t12543 * t9485) * t11019 + ((-t12716 * t9485 + t11232) * t11189 - t13257 * t11118) * pkin(3) + (-t9485 * t12723 + (((-t12629 * t13257 - t12159) * t12347 + t11303) * pkin(3) + t11183 * t11232 + t13257 * t13136) * t11144) * pkin(9);
t13075 = t9268 * t9601;
t9486 = t13218 * t11115 + (-t11096 * t11928 - t11503) * t12584 + t13226;
t11231 = (-t13258 * t12531 + t9486 * t11129 + (t11096 * t11618 - t13218) * t11115 + t11503 * t12584 - t13226) * t11059;
t12158 = t9486 * t12531;
t11302 = t11129 * t13258 + t12158 - t13258;
t12671 = t11084 * t11190;
t10662 = t11096 * t12007 + t12671;
t12059 = t11084 * t12461;
t10674 = t11096 * t12609 - t12059;
t10225 = t10662 * t11147 + t10674 * t11143;
t10237 = -t10662 * t11143 + t10674 * t11147;
t9487 = (t11096 * t11650 + (t11096 * t11989 + t11125 * t11349) * t11207 - t11489 * t10399) * t11115 + (-t11125 * t11627 - (-t10225 * t11078 + t10237 * t11090) * t11313) * t11124 - t10237 * t12047 + t10225 * t12071 + t10399 * t12010;
t9269 = (t11302 * t12433 - t12543 * t9487) * t11019 + ((-t12716 * t9487 + t11231) * t11189 - t13258 * t11118) * pkin(3) + (-t9487 * t12723 + (((-t12629 * t13258 - t12158) * t12347 + t11302) * pkin(3) + t11183 * t11231 + t13258 * t13136) * t11144) * pkin(9);
t13074 = t9269 * t9601;
t11617 = t11122 * t11945;
t9488 = t13219 * t11116 + (-t11085 * t11927 - t11502) * t12583 + t13209;
t11230 = (-t13255 * t12531 + t9488 * t11129 + (t11085 * t11617 - t13219) * t11116 + t11502 * t12583 - t13209) * t11059;
t12157 = t9488 * t12531;
t11301 = t11129 * t13255 + t12157 - t13255;
t12346 = 0.2e1 * t11140;
t12542 = t11140 * t11145;
t12715 = t11014 * t11145;
t12722 = t10963 * t11145;
t12636 = t11097 * t11192;
t10663 = -t11085 * t12001 + t12636;
t12033 = t11097 * t12460;
t10677 = t11085 * t12604 + t12033;
t10226 = t10663 * t11147 - t10677 * t11143;
t10240 = t10663 * t11143 + t10677 * t11147;
t11488 = t10876 * t11079 - t10879 * t11091;
t11348 = t11124 * t11488;
t12004 = t11110 * t12503;
t11625 = t11208 * t12004;
t11649 = t12503 * t12756;
t11988 = t11122 * t12503;
t12045 = t11091 * t12583;
t12069 = t11079 * t12583;
t9489 = (t11085 * t11649 + (t11085 * t11988 + t11123 * t11348) * t11208 - t11488 * t10400) * t11116 + (-t11123 * t11625 - (t10226 * t11079 + t10240 * t11091) * t11314) * t11124 - t10240 * t12045 - t10226 * t12069 + t10400 * t12004;
t9270 = (t11301 * t12428 - t12542 * t9489) * t11019 + ((-t12715 * t9489 + t11230) * t11191 - t13255 * t11119) * pkin(3) + (-t9489 * t12722 + (((-t12629 * t13255 - t12157) * t12346 + t11301) * pkin(3) + t11185 * t11230 + t13255 * t13135) * t11144) * pkin(9);
t13073 = t9270 * t9602;
t9490 = t13220 * t11116 + (-t11097 * t11927 - t11501) * t12583 + t13227;
t11229 = (-t13256 * t12531 + t9490 * t11129 + (t11097 * t11617 - t13220) * t11116 + t11501 * t12583 - t13227) * t11059;
t12156 = t9490 * t12531;
t11300 = t11129 * t13256 + t12156 - t13256;
t12666 = t11085 * t11192;
t10664 = t11097 * t12001 + t12666;
t12057 = t11085 * t12460;
t10678 = t11097 * t12604 - t12057;
t10227 = t10664 * t11147 + t10678 * t11143;
t10241 = -t10664 * t11143 + t10678 * t11147;
t9491 = (t11097 * t11649 + (t11097 * t11988 + t11125 * t11348) * t11208 - t11488 * t10401) * t11116 + (-t11125 * t11625 - (-t10227 * t11079 + t10241 * t11091) * t11314) * t11124 - t10241 * t12045 + t10227 * t12069 + t10401 * t12004;
t9271 = (t11300 * t12428 - t12542 * t9491) * t11019 + ((-t12715 * t9491 + t11229) * t11191 - t13256 * t11119) * pkin(3) + (-t9491 * t12722 + (((-t12629 * t13256 - t12156) * t12346 + t11300) * pkin(3) + t11185 * t11229 + t13256 * t13135) * t11144) * pkin(9);
t13072 = t9271 * t9602;
t11616 = t11122 * t11944;
t9492 = t13221 * t11117 + (-t11086 * t11926 - t11500) * t12582 + t13210;
t11228 = (-t13253 * t12531 + t9492 * t11129 + (t11086 * t11616 - t13221) * t11117 + t11500 * t12582 - t13210) * t11059;
t12155 = t9492 * t12531;
t11299 = t11129 * t13253 + t12155 - t13253;
t12345 = 0.2e1 * t11141;
t12541 = t11141 * t11145;
t12714 = t11016 * t11145;
t12721 = t10964 * t11145;
t12631 = t11098 * t11194;
t10665 = -t11086 * t11995 + t12631;
t12031 = t11098 * t12459;
t10681 = t11086 * t12599 + t12031;
t10228 = t10665 * t11147 - t10681 * t11143;
t10244 = t10665 * t11143 + t10681 * t11147;
t11487 = t10877 * t11080 - t10880 * t11092;
t11347 = t11124 * t11487;
t11998 = t11111 * t12502;
t11623 = t11209 * t11998;
t11648 = t12502 * t12753;
t11987 = t11122 * t12502;
t12043 = t11092 * t12582;
t12067 = t11080 * t12582;
t9493 = (t11086 * t11648 + (t11086 * t11987 + t11123 * t11347) * t11209 - t11487 * t10402) * t11117 + (-t11123 * t11623 - (t10228 * t11080 + t10244 * t11092) * t11315) * t11124 - t10244 * t12043 - t10228 * t12067 + t10402 * t11998;
t9272 = (t11299 * t12423 - t12541 * t9493) * t11019 + ((-t12714 * t9493 + t11228) * t11193 - t13253 * t11120) * pkin(3) + (-t9493 * t12721 + (((-t12629 * t13253 - t12155) * t12345 + t11299) * pkin(3) + t11187 * t11228 + t13253 * t13134) * t11144) * pkin(9);
t13071 = t9272 * t9603;
t9494 = t13222 * t11117 + (-t11098 * t11926 - t11499) * t12582 + t13228;
t11227 = (-t13254 * t12531 + t9494 * t11129 + (t11098 * t11616 - t13222) * t11117 + t11499 * t12582 - t13228) * t11059;
t12154 = t9494 * t12531;
t11298 = t11129 * t13254 + t12154 - t13254;
t12661 = t11086 * t11194;
t10666 = t11098 * t11995 + t12661;
t12055 = t11086 * t12459;
t10682 = t11098 * t12599 - t12055;
t10229 = t10666 * t11147 + t10682 * t11143;
t10245 = -t10666 * t11143 + t10682 * t11147;
t9495 = (t11098 * t11648 + (t11098 * t11987 + t11125 * t11347) * t11209 - t11487 * t10403) * t11117 + (-t11125 * t11623 - (-t10229 * t11080 + t10245 * t11092) * t11315) * t11124 - t10245 * t12043 + t10229 * t12067 + t10403 * t11998;
t9273 = (t11298 * t12423 - t12541 * t9495) * t11019 + ((-t12714 * t9495 + t11227) * t11193 - t13254 * t11120) * pkin(3) + (-t9495 * t12721 + (((-t12629 * t13254 - t12154) * t12345 + t11298) * pkin(3) + t11187 * t11227 + t13254 * t13134) * t11144) * pkin(9);
t13070 = t9273 * t9603;
t10058 = (-t11123 * t12566 + t10396) * t11114 + t10603 * t12680;
t9690 = (t10058 * t12462 + t10603 * t12647) * t11149 - t10058 * t12532;
t12126 = t10603 * t12532;
t9777 = (t10058 * t11170 - t10603 * t12036) * t11149 + t11095 * t12126;
t9390 = (-t11143 * t9777 + t11147 * t9690) * t11089 - t11077 * (t11143 * t9690 + t11147 * t9777);
t9855 = t10058 * t11176 + t10603 * t12037;
t9860 = t10058 * t12465 - t10603 * t12646;
t9524 = (t11143 * t9855 + t11147 * t9860) * t11089 + t11077 * (-t11143 * t9860 + t11147 * t9855);
t9277 = (-pkin(3) * t9390 - t11073 * t9524) * t11175 + t11169 * (pkin(3) * t9524 - t11073 * t9390);
t13069 = t9277 * t9620;
t10054 = (-t11123 * t12568 + t10392) * t11112 + t10601 * t12690;
t9688 = (t10054 * t12464 + t10601 * t12657) * t11149 - t10054 * t12532;
t12128 = t10601 * t12532;
t9772 = (t10054 * t11166 - t10601 * t12040) * t11149 + t11093 * t12128;
t9388 = (-t11143 * t9772 + t11147 * t9688) * t11087 - (t11143 * t9688 + t11147 * t9772) * t11075;
t9851 = t10054 * t11172 + t10601 * t12041;
t9856 = t10054 * t12467 - t10601 * t12656;
t9520 = (t11143 * t9851 + t11147 * t9856) * t11087 + (-t11143 * t9856 + t11147 * t9851) * t11075;
t9278 = (-pkin(3) * t9388 - t11073 * t9520) * t11171 + t11165 * (pkin(3) * t9520 - t11073 * t9388);
t13068 = t9278 * t9616;
t10055 = (-t11125 * t12568 + t10393) * t11112 + t10601 * t12660;
t9691 = (t10055 * t12464 - t10601 * t12687) * t11149 - t10055 * t12532;
t9773 = (-t10055 * t11166 - t10601 * t12064) * t11149 + t11081 * t12128;
t9391 = (t11143 * t9773 + t11147 * t9691) * t11087 + (-t11143 * t9691 + t11147 * t9773) * t11075;
t9850 = t10055 * t11172 - t10601 * t12065;
t9857 = t10055 * t12467 + t10601 * t12686;
t9521 = (t11143 * t9850 + t11147 * t9857) * t11087 + (-t11143 * t9857 + t11147 * t9850) * t11075;
t9279 = (-pkin(3) * t9391 - t11073 * t9521) * t11171 + (pkin(3) * t9521 - t11073 * t9391) * t11165;
t13067 = t9279 * t9616;
t10056 = (-t11123 * t12567 + t10394) * t11113 + t10602 * t12685;
t9692 = (t10056 * t12463 + t10602 * t12652) * t11149 - t10056 * t12532;
t12127 = t10602 * t12532;
t9774 = (t10056 * t11168 - t10602 * t12038) * t11149 + t11094 * t12127;
t9392 = (-t11143 * t9774 + t11147 * t9692) * t11088 - t11076 * (t11143 * t9692 + t11147 * t9774);
t9853 = t10056 * t11174 + t10602 * t12039;
t9858 = t10056 * t12466 - t10602 * t12651;
t9522 = (t11143 * t9853 + t11147 * t9858) * t11088 + t11076 * (-t11143 * t9858 + t11147 * t9853);
t9280 = (-pkin(3) * t9392 - t11073 * t9522) * t11173 + (pkin(3) * t9522 - t11073 * t9392) * t11167;
t13066 = t9280 * t9618;
t10057 = (-t11125 * t12567 + t10395) * t11113 + t10602 * t12655;
t9689 = (t10057 * t12463 - t10602 * t12682) * t11149 - t10057 * t12532;
t9775 = (-t10057 * t11168 - t10602 * t12062) * t11149 + t11082 * t12127;
t9389 = (t11143 * t9775 + t11147 * t9689) * t11088 + t11076 * (-t11143 * t9689 + t11147 * t9775);
t9852 = t10057 * t11174 - t10602 * t12063;
t9859 = t10057 * t12466 + t10602 * t12681;
t9523 = (t11143 * t9852 + t11147 * t9859) * t11088 + t11076 * (-t11143 * t9859 + t11147 * t9852);
t9281 = (-pkin(3) * t9389 - t11073 * t9523) * t11173 + (pkin(3) * t9523 - t11073 * t9389) * t11167;
t13065 = t9281 * t9618;
t10059 = (-t11125 * t12566 + t10397) * t11114 + t10603 * t12650;
t9693 = (t10059 * t12462 - t10603 * t12677) * t11149 - t10059 * t12532;
t9776 = (-t10059 * t11170 - t10603 * t12060) * t11149 + t11083 * t12126;
t9393 = (t11143 * t9776 + t11147 * t9693) * t11089 + (-t11143 * t9693 + t11147 * t9776) * t11077;
t9854 = t10059 * t11176 - t10603 * t12061;
t9861 = t10059 * t12465 + t10603 * t12676;
t9525 = (t11143 * t9854 + t11147 * t9861) * t11089 + t11077 * (-t11143 * t9861 + t11147 * t9854);
t9282 = (-pkin(3) * t9393 - t11073 * t9525) * t11175 + t11169 * (pkin(3) * t9525 - t11073 * t9393);
t13064 = t9282 * t9620;
t10060 = (-t11123 * t12565 + t10398) * t11115 + t10604 * t12675;
t9696 = (t10060 * t12458 + t10604 * t12642) * t11149 - t10060 * t12532;
t12125 = t10604 * t12532;
t9781 = (t10060 * t11184 - t10604 * t12034) * t11149 + t11096 * t12125;
t9396 = (-t11143 * t9781 + t11147 * t9696) * t11090 - (t11143 * t9696 + t11147 * t9781) * t11078;
t9865 = t10060 * t11190 + t10604 * t12035;
t9868 = t10060 * t12461 - t10604 * t12641;
t9526 = (t11143 * t9865 + t11147 * t9868) * t11090 + (-t11143 * t9868 + t11147 * t9865) * t11078;
t9286 = (-pkin(3) * t9396 - t11073 * t9526) * t11189 + t11183 * (pkin(3) * t9526 - t11073 * t9396);
t13063 = t9286 * t9625;
t10061 = (-t11125 * t12565 + t10399) * t11115 + t10604 * t12645;
t9694 = (t10061 * t12458 - t10604 * t12672) * t11149 - t10061 * t12532;
t9778 = (-t10061 * t11184 - t10604 * t12058) * t11149 + t11084 * t12125;
t9394 = (t11143 * t9778 + t11147 * t9694) * t11090 + (-t11143 * t9694 + t11147 * t9778) * t11078;
t9862 = t10061 * t11190 - t10604 * t12059;
t9869 = t10061 * t12461 + t10604 * t12671;
t9527 = (t11143 * t9862 + t11147 * t9869) * t11090 + t11078 * (-t11143 * t9869 + t11147 * t9862);
t9287 = (-pkin(3) * t9394 - t11073 * t9527) * t11189 + t11183 * (pkin(3) * t9527 - t11073 * t9394);
t13062 = t9287 * t9625;
t10062 = (-t11123 * t12564 + t10400) * t11116 + t10605 * t12670;
t9697 = (t10062 * t12457 + t10605 * t12637) * t11149 - t10062 * t12532;
t12124 = t10605 * t12532;
t9782 = (t10062 * t11186 - t10605 * t12032) * t11149 + t11097 * t12124;
t9397 = (-t11143 * t9782 + t11147 * t9697) * t11091 - t11079 * (t11143 * t9697 + t11147 * t9782);
t9866 = t10062 * t11192 + t10605 * t12033;
t9870 = t10062 * t12460 - t10605 * t12636;
t9528 = (t11143 * t9866 + t11147 * t9870) * t11091 + t11079 * (-t11143 * t9870 + t11147 * t9866);
t9288 = (-pkin(3) * t9397 - t11073 * t9528) * t11191 + t11185 * (pkin(3) * t9528 - t11073 * t9397);
t13061 = t9288 * t9627;
t10063 = (-t11125 * t12564 + t10401) * t11116 + t10605 * t12640;
t9698 = (t10063 * t12457 - t10605 * t12667) * t11149 - t10063 * t12532;
t9779 = (-t10063 * t11186 - t10605 * t12056) * t11149 + t11085 * t12124;
t9398 = (t11143 * t9779 + t11147 * t9698) * t11091 + t11079 * (-t11143 * t9698 + t11147 * t9779);
t9863 = t10063 * t11192 - t10605 * t12057;
t9871 = t10063 * t12460 + t10605 * t12666;
t9529 = (t11143 * t9863 + t11147 * t9871) * t11091 + t11079 * (-t11143 * t9871 + t11147 * t9863);
t9289 = (-pkin(3) * t9398 - t11073 * t9529) * t11191 + t11185 * (pkin(3) * t9529 - t11073 * t9398);
t13060 = t9289 * t9627;
t10064 = (-t11123 * t12563 + t10402) * t11117 + t10606 * t12665;
t9695 = (t10064 * t12456 + t10606 * t12632) * t11149 - t10064 * t12532;
t12123 = t10606 * t12532;
t9783 = (t10064 * t11188 - t10606 * t12030) * t11149 + t11098 * t12123;
t9395 = (-t11143 * t9783 + t11147 * t9695) * t11092 - (t11143 * t9695 + t11147 * t9783) * t11080;
t9867 = t10064 * t11194 + t10606 * t12031;
t9872 = t10064 * t12459 - t10606 * t12631;
t9530 = (t11143 * t9867 + t11147 * t9872) * t11092 + (-t11143 * t9872 + t11147 * t9867) * t11080;
t9290 = (-pkin(3) * t9395 - t11073 * t9530) * t11193 + t11187 * (pkin(3) * t9530 - t11073 * t9395);
t13059 = t9290 * t9629;
t10065 = (-t11125 * t12563 + t10403) * t11117 + t10606 * t12635;
t9699 = (t10065 * t12456 - t10606 * t12662) * t11149 - t10065 * t12532;
t9780 = (-t10065 * t11188 - t10606 * t12054) * t11149 + t11086 * t12123;
t9399 = (t11143 * t9780 + t11147 * t9699) * t11092 + t11080 * (-t11143 * t9699 + t11147 * t9780);
t9864 = t10065 * t11194 - t10606 * t12055;
t9873 = t10065 * t12459 + t10606 * t12661;
t9531 = (t11143 * t9864 + t11147 * t9873) * t11092 + (-t11143 * t9873 + t11147 * t9864) * t11080;
t9291 = (-pkin(3) * t9399 - t11073 * t9531) * t11193 + t11187 * (pkin(3) * t9531 - t11073 * t9399);
t13058 = t9291 * t9629;
t10535 = t10829 * t11143 + t11147 * t12490;
t10538 = t10829 * t11147 - t11143 * t12490;
t12843 = t10538 * t11106;
t12846 = t10535 * t11106;
t9412 = ((t10292 * t10535 - t12843 * t13306) * t11087 + t11075 * (t10292 * t10538 + t12846 * t13306)) * t11093 + ((t10292 * t12843 + t10535 * t13306) * t11087 + (-t10292 * t12846 + t10538 * t13306) * t11075) * t11081;
t9466 = ((-t10292 * t10862 - t12786 * t13306) * t11087 - (-t10292 * t10859 + t12783 * t13306) * t11075) * t11093 + ((t10292 * t12786 - t10862 * t13306) * t11087 + t11075 * (t10292 * t12783 + t10859 * t13306)) * t11081;
t9298 = (pkin(3) * t9412 + t11073 * t9466) * t11171 - (pkin(3) * t9466 - t11073 * t9412) * t11165;
t13057 = t9298 * t9616;
t10536 = t10830 * t11143 + t11147 * t12488;
t10539 = t10830 * t11147 - t11143 * t12488;
t12842 = t10539 * t11107;
t12845 = t10536 * t11107;
t9413 = ((t10293 * t10536 - t12842 * t13305) * t11088 + (t10293 * t10539 + t12845 * t13305) * t11076) * t11094 + t11082 * ((t10293 * t12842 + t10536 * t13305) * t11088 + (-t10293 * t12845 + t10539 * t13305) * t11076);
t9467 = ((-t10293 * t10863 - t12785 * t13305) * t11088 - (-t10293 * t10860 + t12782 * t13305) * t11076) * t11094 + t11082 * ((t10293 * t12785 - t10863 * t13305) * t11088 + (t10293 * t12782 + t10860 * t13305) * t11076);
t9299 = (pkin(3) * t9413 + t11073 * t9467) * t11173 - t11167 * (pkin(3) * t9467 - t11073 * t9413);
t13056 = t9299 * t9618;
t10537 = t10831 * t11143 + t11147 * t12486;
t10540 = t10831 * t11147 - t11143 * t12486;
t12841 = t10540 * t11108;
t12844 = t10537 * t11108;
t9414 = ((t10294 * t10537 - t12841 * t13304) * t11089 + (t10294 * t10540 + t12844 * t13304) * t11077) * t11095 + t11083 * ((t10294 * t12841 + t10537 * t13304) * t11089 + (-t10294 * t12844 + t10540 * t13304) * t11077);
t9468 = ((-t10294 * t10864 - t12784 * t13304) * t11089 - (-t10294 * t10861 + t12781 * t13304) * t11077) * t11095 + t11083 * ((t10294 * t12784 - t10864 * t13304) * t11089 + (t10294 * t12781 + t10861 * t13304) * t11077);
t9300 = (pkin(3) * t9414 + t11073 * t9468) * t11175 - t11169 * (pkin(3) * t9468 - t11073 * t9414);
t13055 = t9300 * t9620;
t10544 = t10853 * t11143 + t11147 * t12481;
t10547 = t10853 * t11147 - t11143 * t12481;
t12837 = t10547 * t11109;
t12840 = t10544 * t11109;
t9416 = ((t10295 * t10544 - t12837 * t13303) * t11090 + (t10295 * t10547 + t12840 * t13303) * t11078) * t11096 + t11084 * ((t10295 * t12837 + t10544 * t13303) * t11090 + t11078 * (-t10295 * t12840 + t10547 * t13303));
t9481 = ((-t10295 * t10878 - t12774 * t13303) * t11090 - (-t10295 * t10875 + t12771 * t13303) * t11078) * t11096 + t11084 * ((t10295 * t12774 - t10878 * t13303) * t11090 + (t10295 * t12771 + t10875 * t13303) * t11078);
t9301 = (pkin(3) * t9416 + t11073 * t9481) * t11189 - t11183 * (pkin(3) * t9481 - t11073 * t9416);
t13054 = t9301 * t9625;
t10545 = t10854 * t11143 + t11147 * t12479;
t10548 = t10854 * t11147 - t11143 * t12479;
t12836 = t10548 * t11110;
t12839 = t10545 * t11110;
t9417 = ((t10296 * t10545 - t12836 * t13302) * t11091 + t11079 * (t10296 * t10548 + t12839 * t13302)) * t11097 + t11085 * ((t10296 * t12836 + t10545 * t13302) * t11091 + (-t10296 * t12839 + t10548 * t13302) * t11079);
t9482 = ((-t10296 * t10879 - t12773 * t13302) * t11091 - (-t10296 * t10876 + t12770 * t13302) * t11079) * t11097 + t11085 * ((t10296 * t12773 - t10879 * t13302) * t11091 + t11079 * (t10296 * t12770 + t10876 * t13302));
t9302 = (pkin(3) * t9417 + t11073 * t9482) * t11191 - t11185 * (pkin(3) * t9482 - t11073 * t9417);
t13053 = t9302 * t9627;
t10546 = t10855 * t11143 + t11147 * t12477;
t10549 = t10855 * t11147 - t11143 * t12477;
t12835 = t10549 * t11111;
t12838 = t10546 * t11111;
t9415 = ((t10297 * t10546 - t12835 * t13301) * t11092 + t11080 * (t10297 * t10549 + t12838 * t13301)) * t11098 + ((t10297 * t12835 + t10546 * t13301) * t11092 + (-t10297 * t12838 + t10549 * t13301) * t11080) * t11086;
t9483 = ((-t10297 * t10880 - t12772 * t13301) * t11092 - (-t10297 * t10877 + t12769 * t13301) * t11080) * t11098 + ((t10297 * t12772 - t10880 * t13301) * t11092 + t11080 * (t10297 * t12769 + t10877 * t13301)) * t11086;
t9303 = (pkin(3) * t9415 + t11073 * t9483) * t11193 - t11187 * (pkin(3) * t9483 - t11073 * t9415);
t13052 = t9303 * t9629;
t13051 = t9307 ^ 2 / t9670 ^ 2;
t13050 = t9308 ^ 2 / t9671 ^ 2;
t13049 = t9309 ^ 2 / t9672 ^ 2;
t13045 = t9313 ^ 2 / t9685 ^ 2;
t13044 = t9314 ^ 2 / t9686 ^ 2;
t13043 = t9315 ^ 2 / t9687 ^ 2;
t10134 = -t11106 * t11495 - t11942;
t11466 = t10134 * t13127 - t11149 * (t10133 * t10973 + t10491 * t13121);
t12807 = t10838 * t11146;
t9718 = -(pkin(3) * t10133 + t10491 * t12702) * t12539 + t10134 * t10953;
t11800 = pkin(3) * t12184;
t9727 = t10416 * t11800 + (t11019 * t12183 + t11070) * t12807;
t11895 = t11165 * t11071;
t12282 = pkin(3) * t12807;
t9748 = t10838 * t11895 - (t10416 * t12702 + t12282) * t13204;
t9832 = t10133 * t11746 + t10134 * t11019;
t9835 = (t10416 * t10973 - t11059 * t12282) * t11149 + t10419 * t13127;
t12084 = t11146 * t12702;
t9841 = (pkin(3) * t10416 - t10838 * t12084) * t12539 + t10419 * t10953;
t9322 = ((t11081 * t9832 + t11093 * t13170) * t11145 + (t10491 * t11081 + t11093 * t12807) * t11520) * t11133 + ((t11081 * t11466 + t11093 * t9835) * t11145 + t13203 * t11081 + t9727 * t11093) * t11171 + (t11081 * t9718 + t11093 * t9841) * t13096 - t13192 * t11081 - t9748 * t11093;
t13039 = t9322 * t9598;
t11519 = 0.2e1 * t11590;
t9323 = ((t11081 * t13170 - t11093 * t9832) * t11145 + (t10491 * t11093 - t11081 * t12807) * t11519) * t11133 + ((t11081 * t9835 - t11093 * t11466) * t11145 - t13203 * t11093 + t11081 * t9727) * t11171 - (-t11081 * t9841 + t11093 * t9718) * t13096 + t13192 * t11093 - t11081 * t9748;
t13038 = t9323 * t9598;
t10136 = -t11107 * t11494 - t11940;
t11465 = t10136 * t13126 - t11149 * (t10135 * t10974 + t10492 * t13121);
t12805 = t10839 * t11146;
t9719 = -(pkin(3) * t10135 + t10492 * t12701) * t12539 + t10136 * t10954;
t9728 = t10417 * t11800 + (t11019 * t12180 + t11070) * t12805;
t11894 = t11167 * t11071;
t12281 = pkin(3) * t12805;
t9749 = t10839 * t11894 - (t10417 * t12701 + t12281) * t13204;
t9833 = t10135 * t11746 + t10136 * t11019;
t9836 = (t10417 * t10974 - t11059 * t12281) * t11149 + t10420 * t13126;
t12083 = t11146 * t12701;
t9842 = (pkin(3) * t10417 - t10839 * t12083) * t12539 + t10420 * t10954;
t9324 = ((t11082 * t9833 + t11094 * t13169) * t11145 + (t10492 * t11082 + t11094 * t12805) * t11520) * t11134 + ((t11082 * t11465 + t11094 * t9836) * t11145 + t13202 * t11082 + t9728 * t11094) * t11173 + (t11082 * t9719 + t11094 * t9842) * t13096 - t13193 * t11082 - t9749 * t11094;
t13037 = t9324 * t9599;
t9325 = ((t11082 * t13169 - t11094 * t9833) * t11145 + (t10492 * t11094 - t11082 * t12805) * t11519) * t11134 + ((t11082 * t9836 - t11094 * t11465) * t11145 - t13202 * t11094 + t11082 * t9728) * t11173 - (-t11082 * t9842 + t11094 * t9719) * t13096 + t13193 * t11094 - t11082 * t9749;
t13036 = t9325 * t9599;
t10138 = -t11108 * t11493 - t11938;
t11464 = t10138 * t13125 - t11149 * (t10137 * t10975 + t10493 * t13121);
t12803 = t10840 * t11146;
t9720 = -(pkin(3) * t10137 + t10493 * t12700) * t12539 + t10138 * t10955;
t9729 = t10418 * t11800 + (t11019 * t12182 + t11070) * t12803;
t11893 = t11169 * t11071;
t12280 = pkin(3) * t12803;
t9750 = t10840 * t11893 - (t10418 * t12700 + t12280) * t13204;
t9834 = t10137 * t11746 + t10138 * t11019;
t9837 = (t10418 * t10975 - t11059 * t12280) * t11149 + t10421 * t13125;
t12082 = t11146 * t12700;
t9843 = (pkin(3) * t10418 - t10840 * t12082) * t12539 + t10421 * t10955;
t9326 = ((t11083 * t9834 + t11095 * t13168) * t11145 + (t10493 * t11083 + t11095 * t12803) * t11520) * t11135 + ((t11083 * t11464 + t11095 * t9837) * t11145 + t13201 * t11083 + t9729 * t11095) * t11175 + (t11083 * t9720 + t11095 * t9843) * t13096 - t13194 * t11083 - t9750 * t11095;
t13035 = t9326 * t9600;
t9327 = ((t11083 * t13168 - t11095 * t9834) * t11145 + (t10493 * t11095 - t11083 * t12803) * t11519) * t11135 + ((t11083 * t9837 - t11095 * t11464) * t11145 - t13201 * t11095 + t11083 * t9729) * t11175 - (-t11083 * t9843 + t11095 * t9720) * t13096 + t13194 * t11095 - t11083 * t9750;
t13034 = t9327 * t9600;
t10140 = -t11109 * t11489 - t11933;
t11463 = t10140 * t13124 - t11149 * (t10139 * t10976 + t10494 * t13121);
t12801 = t10841 * t11146;
t9736 = -(pkin(3) * t10139 + t10494 * t12696) * t12539 + t10140 * t10962;
t9745 = t10440 * t11800 + (t11019 * t12181 + t11070) * t12801;
t11892 = t11183 * t11071;
t12279 = pkin(3) * t12801;
t9751 = t10841 * t11892 - (t10440 * t12696 + t12279) * t13204;
t9838 = t10139 * t11746 + t10140 * t11019;
t9844 = (t10440 * t10976 - t11059 * t12279) * t11149 + t10443 * t13124;
t12081 = t11146 * t12696;
t9847 = (pkin(3) * t10440 - t10841 * t12081) * t12539 + t10443 * t10962;
t9328 = ((t11084 * t9838 + t11096 * t13167) * t11145 + (t10494 * t11084 + t11096 * t12801) * t11520) * t11139 + ((t11084 * t11463 + t11096 * t9844) * t11145 + t13200 * t11084 + t9745 * t11096) * t11189 + (t11084 * t9736 + t11096 * t9847) * t13096 - t13195 * t11084 - t9751 * t11096;
t13033 = t9328 * t9601;
t9329 = ((t11084 * t13167 - t11096 * t9838) * t11145 + (t10494 * t11096 - t11084 * t12801) * t11519) * t11139 + ((t11084 * t9844 - t11096 * t11463) * t11145 - t13200 * t11096 + t11084 * t9745) * t11189 - (-t11084 * t9847 + t11096 * t9736) * t13096 + t13195 * t11096 - t11084 * t9751;
t13032 = t9329 * t9601;
t10142 = -t11110 * t11488 - t11931;
t11462 = t10142 * t13123 - t11149 * (t10141 * t10977 + t10495 * t13121);
t12799 = t10842 * t11146;
t9737 = -(pkin(3) * t10141 + t10495 * t12695) * t12539 + t10142 * t10963;
t9746 = t10441 * t11800 + (t11019 * t12179 + t11070) * t12799;
t11891 = t11185 * t11071;
t12278 = pkin(3) * t12799;
t9752 = t10842 * t11891 - (t10441 * t12695 + t12278) * t13204;
t9839 = t10141 * t11746 + t10142 * t11019;
t9845 = (t10441 * t10977 - t11059 * t12278) * t11149 + t10444 * t13123;
t12080 = t11146 * t12695;
t9848 = (pkin(3) * t10441 - t10842 * t12080) * t12539 + t10444 * t10963;
t9330 = ((t11085 * t9839 + t11097 * t13166) * t11145 + (t10495 * t11085 + t11097 * t12799) * t11520) * t11140 + ((t11085 * t11462 + t11097 * t9845) * t11145 + t13199 * t11085 + t9746 * t11097) * t11191 + (t11085 * t9737 + t11097 * t9848) * t13096 - t13196 * t11085 - t9752 * t11097;
t13031 = t9330 * t9602;
t9331 = ((t11085 * t13166 - t11097 * t9839) * t11145 + (t10495 * t11097 - t11085 * t12799) * t11519) * t11140 + ((t11085 * t9845 - t11097 * t11462) * t11145 - t13199 * t11097 + t11085 * t9746) * t11191 - (-t11085 * t9848 + t11097 * t9737) * t13096 + t13196 * t11097 - t11085 * t9752;
t13030 = t9331 * t9602;
t10144 = -t11111 * t11487 - t11929;
t11461 = t10144 * t13122 - t11149 * (t10143 * t10978 + t10496 * t13121);
t12797 = t10843 * t11146;
t9738 = -(pkin(3) * t10143 + t10496 * t12694) * t12539 + t10144 * t10964;
t9747 = t10442 * t11800 + (t11019 * t12178 + t11070) * t12797;
t11890 = t11187 * t11071;
t12277 = pkin(3) * t12797;
t9753 = t10843 * t11890 - (t10442 * t12694 + t12277) * t13204;
t9840 = t10143 * t11746 + t10144 * t11019;
t9846 = (t10442 * t10978 - t11059 * t12277) * t11149 + t10445 * t13122;
t12079 = t11146 * t12694;
t9849 = (pkin(3) * t10442 - t10843 * t12079) * t12539 + t10445 * t10964;
t9332 = ((t11086 * t9840 + t11098 * t13165) * t11145 + (t10496 * t11086 + t11098 * t12797) * t11520) * t11141 + ((t11086 * t11461 + t11098 * t9846) * t11145 + t13198 * t11086 + t9747 * t11098) * t11193 + (t11086 * t9738 + t11098 * t9849) * t13096 - t13197 * t11086 - t9753 * t11098;
t13029 = t9332 * t9603;
t9333 = ((t11086 * t13165 - t11098 * t9840) * t11145 + (t10496 * t11098 - t11086 * t12797) * t11519) * t11141 + ((t11086 * t9846 - t11098 * t11461) * t11145 - t13198 * t11098 + t11086 * t9747) * t11193 - (-t11086 * t9849 + t11098 * t9738) * t13096 + t13197 * t11098 - t11086 * t9753;
t13028 = t9333 * t9603;
t10404 = -t10832 * t12467 + t10838 * t11172;
t10410 = t10832 * t12464 + t10838 * t11166;
t11282 = -t10410 * t13121 - t10973 * t12813;
t12288 = pkin(3) * t12813;
t11327 = t10410 * t12702 + t12288;
t11447 = t11146 * t11519;
t9352 = (((t10404 * t11019 + t10410 * t11746) * t11145 + t10832 * t11447) * t11112 - 0.2e1 * t10323 * t11106) * t11133 + ((((-t10410 * t10973 + t11059 * t12288) * t11149 + t10404 * t13127) * t11145 + t11282 * t11129 - t10832 * t11022 - t11282) * t11112 + t9958 * t11106) * t11171 + (t10832 * t11895 + (t10404 * t12726 + (-(pkin(3) * t10410 - t10832 * t12084) * t12531 - t11327 * t11129 + t11327) * t11144) * pkin(9)) * t11112 + t11106 * t11597;
t13027 = t9352 * t9598;
t10406 = -t10833 * t12466 + t10839 * t11174;
t10412 = t10833 * t12463 + t10839 * t11168;
t11281 = -t10412 * t13121 - t10974 * t12812;
t12287 = pkin(3) * t12812;
t11326 = t10412 * t12701 + t12287;
t9353 = (((t10406 * t11019 + t10412 * t11746) * t11145 + t10833 * t11447) * t11113 - 0.2e1 * t10324 * t11107) * t11134 + ((((-t10412 * t10974 + t11059 * t12287) * t11149 + t10406 * t13126) * t11145 + t11281 * t11129 - t10833 * t11022 - t11281) * t11113 + t9959 * t11107) * t11173 + (t10833 * t11894 + (t10406 * t12725 + (-(pkin(3) * t10412 - t10833 * t12083) * t12531 - t11326 * t11129 + t11326) * t11144) * pkin(9)) * t11113 + t11107 * t11596;
t13026 = t9353 * t9599;
t10408 = -t10834 * t12465 + t10840 * t11176;
t10414 = t10834 * t12462 + t10840 * t11170;
t11280 = -t10414 * t13121 - t10975 * t12811;
t12286 = pkin(3) * t12811;
t11325 = t10414 * t12700 + t12286;
t9354 = (((t10408 * t11019 + t10414 * t11746) * t11145 + t10834 * t11447) * t11114 - 0.2e1 * t10325 * t11108) * t11135 + ((((-t10414 * t10975 + t11059 * t12286) * t11149 + t10408 * t13125) * t11145 + t11280 * t11129 - t10834 * t11022 - t11280) * t11114 + t9960 * t11108) * t11175 + (t10834 * t11893 + (t10408 * t12724 + (-(pkin(3) * t10414 - t10834 * t12082) * t12531 - t11325 * t11129 + t11325) * t11144) * pkin(9)) * t11114 + t11108 * t11595;
t13025 = t9354 * t9600;
t10422 = -t10835 * t12461 + t10841 * t11190;
t10428 = t10835 * t12458 + t10841 * t11184;
t11279 = -t10428 * t13121 - t10976 * t12810;
t12285 = pkin(3) * t12810;
t11321 = t10428 * t12696 + t12285;
t9355 = (((t10422 * t11019 + t10428 * t11746) * t11145 + t10835 * t11447) * t11115 - 0.2e1 * t10356 * t11109) * t11139 + ((((-t10428 * t10976 + t11059 * t12285) * t11149 + t10422 * t13124) * t11145 + t11279 * t11129 - t10835 * t11022 - t11279) * t11115 + t9979 * t11109) * t11189 + (t10835 * t11892 + (t10422 * t12723 + (-(pkin(3) * t10428 - t10835 * t12081) * t12531 - t11321 * t11129 + t11321) * t11144) * pkin(9)) * t11115 + t11109 * t11594;
t13024 = t9355 * t9601;
t10424 = -t10836 * t12460 + t10842 * t11192;
t10430 = t10836 * t12457 + t10842 * t11186;
t11278 = -t10430 * t13121 - t10977 * t12809;
t12284 = pkin(3) * t12809;
t11320 = t10430 * t12695 + t12284;
t9356 = (((t10424 * t11019 + t10430 * t11746) * t11145 + t10836 * t11447) * t11116 - 0.2e1 * t10357 * t11110) * t11140 + ((((-t10430 * t10977 + t11059 * t12284) * t11149 + t10424 * t13123) * t11145 + t11278 * t11129 - t10836 * t11022 - t11278) * t11116 + t9980 * t11110) * t11191 + (t10836 * t11891 + (t10424 * t12722 + (-(pkin(3) * t10430 - t10836 * t12080) * t12531 - t11320 * t11129 + t11320) * t11144) * pkin(9)) * t11116 + t11110 * t11593;
t13023 = t9356 * t9602;
t10426 = -t10837 * t12459 + t10843 * t11194;
t10432 = t10837 * t12456 + t10843 * t11188;
t11277 = -t10432 * t13121 - t10978 * t12808;
t12283 = pkin(3) * t12808;
t11319 = t10432 * t12694 + t12283;
t9357 = (((t10426 * t11019 + t10432 * t11746) * t11145 + t10837 * t11447) * t11117 - 0.2e1 * t10358 * t11111) * t11141 + ((((-t10432 * t10978 + t11059 * t12283) * t11149 + t10426 * t13122) * t11145 + t11277 * t11129 - t10837 * t11022 - t11277) * t11117 + t9981 * t11111) * t11193 + (t10837 * t11890 + (t10426 * t12721 + (-(pkin(3) * t10432 - t10837 * t12079) * t12531 - t11319 * t11129 + t11319) * t11144) * pkin(9)) * t11117 + t11111 * t11592;
t13022 = t9357 * t9603;
t10002 = t10292 * t12627 + t11143 * t13306;
t10004 = t10292 * t11147 + t12628 * t13306;
t10005 = -t10292 * t11143 + t12627 * t13306;
t9996 = t10292 * t12628 - t11147 * t13306;
t9358 = -((t10004 * t11075 - t10005 * t11087) * t11093 + (t10002 * t11087 - t11075 * t9996) * t11081) * t12871 + ((-t10004 * t11087 - t10005 * t11075) * t11093 + (t10002 * t11075 + t11087 * t9996) * t11081) * t10317;
t13021 = t9358 * t9664;
t10007 = t10294 * t11147 + t12618 * t13304;
t10008 = -t10294 * t11143 + t12617 * t13304;
t10014 = t10294 * t12618 - t11147 * t13304;
t10015 = t10294 * t12617 + t11143 * t13304;
t9359 = -((t10007 * t11077 - t10008 * t11089) * t11095 + t11083 * (-t10014 * t11077 + t10015 * t11089)) * t12869 + ((-t10007 * t11089 - t10008 * t11077) * t11095 + t11083 * (t10014 * t11089 + t10015 * t11077)) * t10319;
t13020 = t9359 * t9668;
t10006 = -t10293 * t11143 + t12622 * t13305;
t10013 = t10293 * t12622 + t11143 * t13305;
t9994 = t10293 * t11147 + t12623 * t13305;
t9997 = t10293 * t12623 - t11147 * t13305;
t9360 = -((-t10006 * t11088 + t11076 * t9994) * t11094 + (t10013 * t11088 - t11076 * t9997) * t11082) * t12870 + t10318 * ((-t10006 * t11076 - t11088 * t9994) * t11094 + (t10013 * t11076 + t11088 * t9997) * t11082);
t13019 = t9360 * t9666;
t10001 = -t10295 * t11143 + t12612 * t13303;
t10016 = t10295 * t12612 + t11143 * t13303;
t9995 = t10295 * t11147 + t12613 * t13303;
t9998 = t10295 * t12613 - t11147 * t13303;
t9361 = -((-t10001 * t11090 + t11078 * t9995) * t11096 + t11084 * (t10016 * t11090 - t11078 * t9998)) * t12856 + ((-t10001 * t11078 - t11090 * t9995) * t11096 + t11084 * (t10016 * t11078 + t11090 * t9998)) * t10371;
t13018 = t9361 * t9676;
t10009 = t10296 * t11147 + t12608 * t13302;
t10010 = -t10296 * t11143 + t12607 * t13302;
t10017 = t10296 * t12607 + t11143 * t13302;
t9999 = t10296 * t12608 - t11147 * t13302;
t9362 = -((t10009 * t11079 - t10010 * t11091) * t11097 + (t10017 * t11091 - t11079 * t9999) * t11085) * t12855 + t10372 * ((-t10009 * t11091 - t10010 * t11079) * t11097 + t11085 * (t10017 * t11079 + t11091 * t9999));
t13017 = t9362 * t9678;
t10000 = t10297 * t12603 - t11147 * t13301;
t10003 = t10297 * t12602 + t11143 * t13301;
t10011 = t10297 * t11147 + t12603 * t13301;
t10012 = -t10297 * t11143 + t12602 * t13301;
t9363 = -((t10011 * t11080 - t10012 * t11092) * t11098 + (-t10000 * t11080 + t10003 * t11092) * t11086) * t12854 + t10373 * ((-t10011 * t11092 - t10012 * t11080) * t11098 + (t10000 * t11092 + t10003 * t11080) * t11086);
t13016 = t9363 * t9680;
t9878 = t10054 * t11143 - t10601 * t12658;
t9886 = t10054 * t11147 + t10601 * t12659;
t9430 = (-t11075 * t9878 + t11087 * t9886) * t12871 - (t11075 * t9886 + t11087 * t9878) * t10317;
t13015 = t9430 * t9664;
t9874 = -t10055 * t11143 - t10601 * t12688;
t9887 = t10055 * t11147 - t10601 * t12689;
t9431 = (t11075 * t9874 + t11087 * t9887) * t12871 - (t11075 * t9887 - t11087 * t9874) * t10317;
t13014 = t9431 * t9664;
t9883 = -t10059 * t11143 - t10603 * t12678;
t9891 = t10059 * t11147 - t10603 * t12679;
t9432 = (t11077 * t9883 + t11089 * t9891) * t12869 - (t11077 * t9891 - t11089 * t9883) * t10319;
t13013 = t9432 * t9668;
t9882 = t10056 * t11143 - t10602 * t12653;
t9888 = t10056 * t11147 + t10602 * t12654;
t9433 = (-t11076 * t9882 + t11088 * t9888) * t12870 - t10318 * (t11076 * t9888 + t11088 * t9882);
t13012 = t9433 * t9666;
t9881 = -t10057 * t11143 - t10602 * t12683;
t9889 = t10057 * t11147 - t10602 * t12684;
t9434 = (t11076 * t9881 + t11088 * t9889) * t12870 - (t11076 * t9889 - t11088 * t9881) * t10318;
t13011 = t9434 * t9666;
t9884 = t10058 * t11143 - t10603 * t12648;
t9890 = t10058 * t11147 + t10603 * t12649;
t9435 = (-t11077 * t9884 + t11089 * t9890) * t12869 - (t11077 * t9890 + t11089 * t9884) * t10319;
t13010 = t9435 * t9668;
t9875 = -t10061 * t11143 - t10604 * t12673;
t9893 = t10061 * t11147 - t10604 * t12674;
t9436 = (t11078 * t9875 + t11090 * t9893) * t12856 - t10371 * (t11078 * t9893 - t11090 * t9875);
t13009 = t9436 * t9676;
t9880 = t10062 * t11143 - t10605 * t12638;
t9894 = t10062 * t11147 + t10605 * t12639;
t9437 = (-t11079 * t9880 + t11091 * t9894) * t12855 - t10372 * (t11079 * t9894 + t11091 * t9880);
t13008 = t9437 * t9678;
t9885 = t10064 * t11143 - t10606 * t12633;
t9896 = t10064 * t11147 + t10606 * t12634;
t9438 = (-t11080 * t9885 + t11092 * t9896) * t12854 - (t11080 * t9896 + t11092 * t9885) * t10373;
t13007 = t9438 * t9680;
t9879 = t10060 * t11143 - t10604 * t12643;
t9892 = t10060 * t11147 + t10604 * t12644;
t9439 = (-t11078 * t9879 + t11090 * t9892) * t12856 - (t11078 * t9892 + t11090 * t9879) * t10371;
t13006 = t9439 * t9676;
t9876 = -t10063 * t11143 - t10605 * t12668;
t9895 = t10063 * t11147 - t10605 * t12669;
t9440 = (t11079 * t9876 + t11091 * t9895) * t12855 - (t11079 * t9895 - t11091 * t9876) * t10372;
t13005 = t9440 * t9678;
t9877 = -t10065 * t11143 - t10606 * t12663;
t9897 = t10065 * t11147 - t10606 * t12664;
t9441 = (t11080 * t9877 + t11092 * t9897) * t12854 - t10373 * (t11080 * t9897 - t11092 * t9877);
t13004 = t9441 * t9680;
t10311 = t10378 * t11150;
t12806 = t10838 * t11150;
t12985 = 0.1e1 / ((t10311 + t11146 * (pkin(3) * t11943 + t10500 * t11172)) * t11171 + t11923) * (((pkin(3) * t11172 + t11149 * t12259) * t12806 + t10832 * (t11777 - t13116)) * t11171 + (-t10804 * t11166 + t11007 * t11172) * t12806 - t10832 * (t10804 * t11172 + t11007 * t11166));
t10312 = t10380 * t11150;
t12804 = t10839 * t11150;
t12984 = 0.1e1 / ((t10312 + t11146 * (pkin(3) * t11941 + t10501 * t11174)) * t11173 + t11922) * (((pkin(3) * t11174 + t11149 * t12258) * t12804 + t10833 * (t11776 - t13115)) * t11173 + (-t10805 * t11168 + t11009 * t11174) * t12804 - t10833 * (t10805 * t11174 + t11009 * t11168));
t10313 = t10382 * t11150;
t12802 = t10840 * t11150;
t12983 = 0.1e1 / ((t10313 + t11146 * (pkin(3) * t11939 + t10502 * t11176)) * t11175 + t11921) * (((pkin(3) * t11176 + t11149 * t12257) * t12802 + t10834 * (t11775 - t13114)) * t11175 + (-t10806 * t11170 + t11011 * t11176) * t12802 - t10834 * (t10806 * t11176 + t11011 * t11170));
t10314 = t10384 * t11150;
t12800 = t10841 * t11150;
t12982 = 0.1e1 / ((t10314 + t11146 * (pkin(3) * t11934 + t10503 * t11190)) * t11189 + t11920) * (((pkin(3) * t11190 + t11149 * t12256) * t12800 + t10835 * (t11774 - t13110)) * t11189 + (-t10811 * t11184 + t11013 * t11190) * t12800 - t10835 * (t10811 * t11190 + t11013 * t11184));
t10315 = t10386 * t11150;
t12798 = t10842 * t11150;
t12981 = 0.1e1 / ((t10315 + t11146 * (pkin(3) * t11932 + t10504 * t11192)) * t11191 + t11919) * (((pkin(3) * t11192 + t11149 * t12255) * t12798 + t10836 * (t11773 - t13109)) * t11191 + (-t10812 * t11186 + t11015 * t11192) * t12798 - t10836 * (t10812 * t11192 + t11015 * t11186));
t10316 = t10388 * t11150;
t12796 = t10843 * t11150;
t12980 = 0.1e1 / ((t10316 + t11146 * (pkin(3) * t11930 + t10505 * t11194)) * t11193 + t11918) * (((pkin(3) * t11194 + t11149 * t12254) * t12796 + t10837 * (t11772 - t13108)) * t11193 + (-t10813 * t11188 + t11017 * t11194) * t12796 - t10837 * (t10813 * t11194 + t11017 * t11188));
t9712 = -t10317 * t10344 + t10345 * t12871;
t12979 = t9664 * t9712;
t9715 = t10317 * t10365 - t10359 * t12871;
t12978 = t9664 * t9715;
t9713 = -t10318 * t10346 + t10347 * t12870;
t12977 = t9666 * t9713;
t9716 = t10318 * t10366 - t10360 * t12870;
t12976 = t9666 * t9716;
t9714 = -t10319 * t10348 + t10349 * t12869;
t12975 = t9668 * t9714;
t9717 = t10319 * t10367 - t10361 * t12869;
t12974 = t9668 * t9717;
t9721 = -t10350 * t10371 + t10351 * t12856;
t12973 = t9676 * t9721;
t9724 = -t10362 * t12856 + t10368 * t10371;
t12972 = t9676 * t9724;
t9722 = -t10352 * t10372 + t10353 * t12855;
t12971 = t9678 * t9722;
t9725 = -t10363 * t12855 + t10369 * t10372;
t12970 = t9678 * t9725;
t9723 = -t10354 * t10373 + t10355 * t12854;
t12969 = t9680 * t9723;
t9726 = -t10364 * t12854 + t10370 * t10373;
t12968 = t9680 * t9726;
t12961 = t11165 ^ 2 * t9124;
t12960 = t11167 ^ 2 * t9125;
t12959 = t11169 ^ 2 * t9126;
t12958 = t11183 ^ 2 * t9127;
t12957 = t11185 ^ 2 * t9128;
t12956 = t11187 ^ 2 * t9129;
t12949 = t11149 * t9124;
t12948 = t11149 * t9125;
t12947 = t11149 * t9126;
t12946 = t11149 * t9127;
t12945 = t11149 * t9128;
t12944 = t11149 * t9129;
t10508 = t10559 * t12531;
t11911 = pkin(2) ^ 2 - t13229;
t10986 = t11216 + t11911;
t11453 = t10770 * t11778 + t11069 * t11165 + t10155 + t10568;
t11474 = 0.2e1 * t11539;
t11568 = t12184 * t11073;
t11704 = t12703 * t13048;
t11851 = pkin(2) * t12203;
t11896 = t11145 * t11071;
t11925 = -0.2e1 * t12262;
t12087 = (pkin(3) + t11059) * (-pkin(3) + t11059) * t11129;
t12232 = t11112 * t12985;
t12547 = t11129 * t11218;
t9274 = t11704 * t11073;
t9142 = -t11150 * t13087 * (-t11698 * t12713 + (t9238 * t13163 + t9274 + (t11851 + (-t11165 * t13236 + t13179) * t13087) * pkin(3)) * t11171 - t12087 * t13087 + ((pkin(2) * t11844 + t11710 * t13178) * t11165 - t12191) * t11149 + (pkin(2) * t11674 - pkin(3) * t11704) * t11165 + t10986 * t13087) / ((t10508 + (t10910 + t10972) * t11165 + t11166 * t11896 + t11917) * t11171 + (t11031 + (t12538 * t13235 - t11545) * t11146) * pkin(9) + t11453) - t13048 * ((((t9274 + t12138) * t11149 + t9238) * t11171 + t11275) * t11150 + (t12877 + ((t11172 * t11568 + t11473 * t12528) * t11146 + ((t11165 * t11925 + t11006) * t11150 + t11474 * t12447) * pkin(3)) * t11171 + (-t10952 * t11165 + t12547 + t13103) * t11150 - (t10998 * t12528 + t11269) * t13118) * t13048) / ((t10311 + t10127) * t11171 + t11923) - t12232 * t9406 + t9533 * t12979 + t9532 * t12978;
t12943 = t11149 * t9142;
t10509 = t10560 * t12531;
t11452 = t10771 * t11778 + t11069 * t11167 + t10156 + t10569;
t11703 = t12703 * t13047;
t11850 = pkin(2) * t12202;
t12230 = t11113 * t12984;
t9275 = t11703 * t11073;
t9143 = -t11150 * t13086 * (-t11697 * t12712 + (t9239 * t13163 + t9275 + (t11850 + (-t11167 * t13236 + t13179) * t13086) * pkin(3)) * t11173 - t12087 * t13086 + ((pkin(2) * t11843 + t11709 * t13178) * t11167 - t12190) * t11149 + (pkin(2) * t11673 - pkin(3) * t11703) * t11167 + t10986 * t13086) / ((t10509 + (t10911 + t10972) * t11167 + t11168 * t11896 + t11916) * t11173 + (t11031 + (t12537 * t13234 - t11544) * t11146) * pkin(9) + t11452) - t13047 * ((((t9275 + t12137) * t11149 + t9239) * t11173 + t11274) * t11150 + (t12876 + ((t11174 * t11568 + t11472 * t12526) * t11146 + ((t11167 * t11925 + t11008) * t11150 + t11474 * t12443) * pkin(3)) * t11173 + (-t10952 * t11167 + t12547 + t13102) * t11150 - (t10999 * t12526 + t11268) * t13118) * t13047) / ((t10312 + t10128) * t11173 + t11922) - t12230 * t9407 + t9535 * t12977 + t9534 * t12976;
t12942 = t11149 * t9143;
t10510 = t10561 * t12531;
t11451 = t10772 * t11778 + t11069 * t11169 + t10157 + t10570;
t11702 = t12703 * t13046;
t11849 = pkin(2) * t12201;
t12228 = t11114 * t12983;
t9276 = t11702 * t11073;
t9144 = -t11150 * t13085 * (-t11696 * t12711 + (t9240 * t13163 + t9276 + (t11849 + (-t11169 * t13236 + t13179) * t13085) * pkin(3)) * t11175 - t12087 * t13085 + ((pkin(2) * t11842 + t11708 * t13178) * t11169 - t12189) * t11149 + (pkin(2) * t11672 - pkin(3) * t11702) * t11169 + t10986 * t13085) / ((t10510 + (t10912 + t10972) * t11169 + t11170 * t11896 + t11915) * t11175 + (t11031 + (t12536 * t13233 - t11543) * t11146) * pkin(9) + t11451) - t13046 * ((((t9276 + t12136) * t11149 + t9240) * t11175 + t11273) * t11150 + (t12875 + ((t11176 * t11568 + t11471 * t12524) * t11146 + ((t11169 * t11925 + t11010) * t11150 + t11474 * t12439) * pkin(3)) * t11175 + (-t10952 * t11169 + t12547 + t13101) * t11150 - (t11000 * t12524 + t11267) * t13118) * t13046) / ((t10313 + t10129) * t11175 + t11921) - t12228 * t9408 + t9537 * t12975 + t9536 * t12974;
t12941 = t11149 * t9144;
t10511 = t10562 * t12531;
t11450 = t10773 * t11778 + t11069 * t11183 + t10161 + t10586;
t11701 = t12703 * t13042;
t11848 = pkin(2) * t12200;
t12226 = t11115 * t12982;
t9283 = t11701 * t11073;
t9145 = -t11150 * t13084 * (-t11695 * t12710 + (t9244 * t13163 + t9283 + (t11848 + (-t11183 * t13236 + t13179) * t13084) * pkin(3)) * t11189 - t12087 * t13084 + ((t11070 * t13042 + t11707 * t13178) * t11183 - t12188) * t11149 + (pkin(2) * t11671 - pkin(3) * t11701) * t11183 + t10986 * t13084) / ((t10511 + (t10916 + t10972) * t11183 + t11184 * t11896 + t11914) * t11189 + (t11031 + (t12535 * t13232 - t11542) * t11146) * pkin(9) + t11450) - t13042 * ((((t9283 + t12141) * t11149 + t9244) * t11189 + t11272) * t11150 + (t12874 + ((t11190 * t11568 + t11470 * t12519) * t11146 + ((t11183 * t11925 + t11012) * t11150 + t11474 * t12432) * pkin(3)) * t11189 + (-t10952 * t11183 + t12547 + t13100) * t11150 - (t11001 * t12519 + t11266) * t13118) * t13042) / ((t10314 + t10130) * t11189 + t11920) - t12226 * t9409 + t9539 * t12973 + t9538 * t12972;
t12940 = t11149 * t9145;
t10512 = t10563 * t12531;
t11449 = t10774 * t11778 + t11069 * t11185 + t10162 + t10587;
t11700 = t12703 * t13041;
t11847 = pkin(2) * t12199;
t12224 = t11116 * t12981;
t9284 = t11700 * t11073;
t9146 = -t11150 * t13083 * (-t11694 * t12709 + (t9245 * t13163 + t9284 + (t11847 + (-t11185 * t13236 + t13179) * t13083) * pkin(3)) * t11191 - t12087 * t13083 + ((t11070 * t13041 + t11706 * t13178) * t11185 - t12187) * t11149 + (pkin(2) * t11670 - pkin(3) * t11700) * t11185 + t10986 * t13083) / ((t10512 + (t10917 + t10972) * t11185 + t11186 * t11896 + t11913) * t11191 + (t11031 + (t12534 * t13231 - t11541) * t11146) * pkin(9) + t11449) - t13041 * ((((t9284 + t12140) * t11149 + t9245) * t11191 + t11271) * t11150 + (t12873 + ((t11192 * t11568 + t11469 * t12517) * t11146 + ((t11185 * t11925 + t11014) * t11150 + t11474 * t12427) * pkin(3)) * t11191 + (-t10952 * t11185 + t12547 + t13099) * t11150 - (t11002 * t12517 + t11265) * t13118) * t13041) / ((t10315 + t10131) * t11191 + t11919) - t12224 * t9410 + t9541 * t12971 + t9540 * t12970;
t12939 = t11149 * t9146;
t10513 = t10564 * t12531;
t11448 = t10775 * t11778 + t11069 * t11187 + t10163 + t10588;
t11699 = t12703 * t13040;
t11846 = pkin(2) * t12198;
t12222 = t11117 * t12980;
t9285 = t11699 * t11073;
t9147 = -t11150 * t13082 * (-t11693 * t12708 + (t9246 * t13163 + t9285 + (t11846 + (-t11187 * t13236 + t13179) * t13082) * pkin(3)) * t11193 - t12087 * t13082 + ((t11070 * t13040 + t11705 * t13178) * t11187 - t12186) * t11149 + (pkin(2) * t11669 - pkin(3) * t11699) * t11187 + t10986 * t13082) / ((t10513 + (t10918 + t10972) * t11187 + t11188 * t11896 + t11912) * t11193 + (t11031 + (t12533 * t13230 - t11540) * t11146) * pkin(9) + t11448) - t13040 * ((((t9285 + t12139) * t11149 + t9246) * t11193 + t11270) * t11150 + (t12872 + ((t11194 * t11568 + t11468 * t12515) * t11146 + ((t11187 * t11925 + t11016) * t11150 + t11474 * t12422) * pkin(3)) * t11193 + (-t10952 * t11187 + t12547 + t13098) * t11150 - (t11003 * t12515 + t11264) * t13118) * t13040) / ((t10316 + t10132) * t11193 + t11918) - t12222 * t9411 + t9543 * t12969 + t9542 * t12968;
t12938 = t11149 * t9147;
t10507 = (-t11121 * t12570 - t11122 * t11801) * t11197 + t11195 * t11801;
t12847 = t10507 * t11121;
t10742 = -t11122 * t12581 + t11803;
t12822 = t10742 * t10789;
t12821 = t10789 * t10791;
t12819 = t10789 * t11121;
t12818 = t10789 * t11124;
t12817 = t10791 * t10989;
t12720 = t10989 * t11122;
t12592 = t11121 * t11124;
t10506 = (t11122 * t12591 - t11195 * t11804) * t11197 - t11195 * t12591;
t12590 = t11122 * t10506;
t12580 = t11123 * t11124;
t12571 = t11124 * t11125;
t12556 = t11125 * t11121;
t12530 = t11145 * t11150;
t12529 = t11145 * t11165;
t12527 = t11145 * t11167;
t12525 = t11145 * t11169;
t12523 = t11145 * t11171;
t12522 = t11145 * t11173;
t12521 = t11145 * t11175;
t12520 = t11145 * t11183;
t12518 = t11145 * t11185;
t12516 = t11145 * t11187;
t12514 = t11145 * t11189;
t12513 = t11145 * t11191;
t12512 = t11145 * t11193;
t12449 = t11165 * t11166;
t12446 = t11166 * t11171;
t12445 = t11167 * t11168;
t12442 = t11168 * t11173;
t12441 = t11169 * t11170;
t12438 = t11170 * t11175;
t12437 = t11171 * t11172;
t12436 = t11173 * t11174;
t12435 = t11175 * t11176;
t12434 = t11183 * t11184;
t12430 = t11184 * t11189;
t12429 = t11185 * t11186;
t12425 = t11186 * t11191;
t12424 = t11187 * t11188;
t12420 = t11188 * t11193;
t12419 = t11189 * t11190;
t12418 = t11191 * t11192;
t12417 = t11193 * t11194;
t11805 = t11123 * t12365;
t10743 = t11122 * t11805 + t12556;
t12389 = t10743 * t10506 - t10742 * t12820;
t10744 = t11122 * t12556 + t11805;
t12388 = t10745 * t10506 - t10744 * t12820;
t12381 = t10507 * t12571 - t10745 * t12821;
t11802 = t12365 * t10791;
t12380 = t11122 * t10507 - t11802 * t12818;
t11974 = t11124 * t12416;
t12114 = t10791 * t12571;
t12379 = t10744 * t11974 + t10989 * t12114;
t12369 = (-0.2e1 * t13097 + t13177) * pkin(2);
t11128 = t11149 * t11129;
t12367 = -0.2e1 * t11128 + t13163;
t12366 = t11128 - t11149;
t12332 = 0.2e1 * t9253 * t9307;
t12331 = 0.2e1 * t9254 * t9308;
t12330 = 0.2e1 * t9255 * t9309;
t12329 = 0.2e1 * t9259 * t9313;
t12328 = 0.2e1 * t9260 * t9314;
t12327 = 0.2e1 * t9261 * t9315;
t12326 = -0.2e1 * t9307 * t9616;
t12325 = -0.2e1 * t13048;
t12324 = -0.2e1 * t9308 * t9618;
t12323 = -0.2e1 * t13047;
t12322 = -0.2e1 * t9309 * t9620;
t12321 = -0.2e1 * t13046;
t12320 = -0.2e1 * t9313 * t9625;
t12319 = -0.2e1 * t13042;
t12318 = -0.2e1 * t9314 * t9627;
t12317 = -0.2e1 * t13041;
t12316 = -0.2e1 * t9315 * t9629;
t12315 = -0.2e1 * t13040;
t12314 = t9124 * t13104;
t12313 = t9125 * t13104;
t12312 = t9126 * t13104;
t12311 = t9127 * t13104;
t12310 = t9128 * t13104;
t12309 = t9129 * t13104;
t12270 = pkin(8) * t12523;
t12269 = pkin(8) * t12522;
t12268 = pkin(8) * t12521;
t12267 = pkin(8) * t12514;
t12266 = pkin(8) * t12513;
t12265 = pkin(8) * t12512;
t12251 = t9598 * t9241;
t12250 = t9599 * t9242;
t12249 = t9600 * t9243;
t12248 = t9601 * t9247;
t12247 = t9602 * t9248;
t12246 = t9603 * t9249;
t12245 = t9616 * t13048;
t12244 = t9618 * t13047;
t12243 = t9620 * t13046;
t12242 = t9625 * t13042;
t12241 = t9627 * t13041;
t12240 = t9629 * t13040;
t12221 = t9616 * t12961;
t12220 = t9618 * t12960;
t12219 = t9620 * t12959;
t12218 = t9625 * t12958;
t12217 = t9627 * t12957;
t12216 = t9629 * t12956;
t12197 = t11171 * t9617 * t9664;
t12196 = t11173 * t9619 * t9666;
t12195 = t11175 * t9621 * t9668;
t12194 = t11189 * t9626 * t9676;
t12193 = t11191 * t9628 * t9678;
t12192 = t11193 * t9630 * t9680;
t12153 = t9142 * t12529;
t12152 = t9143 * t12527;
t12151 = t9144 * t12525;
t12150 = t9145 * t12520;
t12149 = t9146 * t12518;
t12148 = t9147 * t12516;
t10458 = t10996 * t12531 - t13121 * t13236;
t10979 = pkin(2) * t12263;
t10589 = t11020 * t12538 + t10979;
t11910 = -t12403 / 0.2e1 + t11216 / 0.2e1 + t11218 / 0.2e1;
t10792 = t11024 + t11910;
t11276 = -(t11218 + (t11127 - 0.2e1) * t11216 + t13229) * t11129 + 0.2e1 * t12403 - 0.3e1 * t11216 - t11911;
t11460 = t11144 * (-pkin(8) * pkin(9) - t11148 * t11216);
t11547 = -t10986 + t12087;
t11567 = t13141 * pkin(3) * t12704;
t11741 = 0.4e1 * t12366;
t11742 = 0.2e1 * t12366;
t11796 = t13141 * (0.3e1 * t11218 + t11795);
t11797 = 0.3e1 * (t11218 / 0.3e1 + t11795) * t12629;
t12106 = t11059 * t10973;
t9133 = t9406 * t13027 + t9533 * t13038 + t9532 * t13039 + (-((-t11742 * t13087 - t13048 * t13141) * t11171 * t12106 + ((-t11019 * t11851 + t13087 * t13164) * t11133 + (-0.2e1 * t10792 * t12203 + (t11133 * t11797 - 0.4e1 * t11024 + t11276) * t13087) * t13113) * t11145 + ((t10589 * t12203 - t12369 * t13087) * t11145 + ((t11133 * t11796 + t11547) * t11686 + ((t11133 * t13140 - t13141) * t13048 + (t11133 * t11741 + t12367) * t13087) * t13121) * t11144) * pkin(9)) * t13087 - (t10959 * t11145 * t12191 + (-t10458 * t11133 + (t10792 * t11924 - t11059 * t12100 + t12106) * t11171 + (t10589 * t12531 - t11567) * pkin(9)) * t13087) * t13048) / ((t10508 + t10521 + t10913 - t11023) * t11171 + t11021 + (pkin(9) * t10776 + t11460 * t12447 + (t11943 - t12699) * t13113) * t11146 + t11453);
t12147 = t9133 * t12507;
t10590 = t11020 * t12537 + t10979;
t10793 = t11025 + t11910;
t12105 = t11059 * t10974;
t9134 = t9407 * t13026 + t9535 * t13036 + t9534 * t13037 + (-((-t11742 * t13086 - t13047 * t13141) * t11173 * t12105 + ((-t11019 * t11850 + t13086 * t13164) * t11134 + (-0.2e1 * t10793 * t12202 + (t11134 * t11797 - 0.4e1 * t11025 + t11276) * t13086) * t13112) * t11145 + ((t10590 * t12202 - t12369 * t13086) * t11145 + ((t11134 * t11796 + t11547) * t11685 + ((t11134 * t13140 - t13141) * t13047 + (t11134 * t11741 + t12367) * t13086) * t13121) * t11144) * pkin(9)) * t13086 - (t10960 * t11145 * t12190 + (-t10458 * t11134 + (t10793 * t11924 - t11059 * t12099 + t12105) * t11173 + (t10590 * t12531 - t11567) * pkin(9)) * t13086) * t13047) / ((t10509 + t10522 + t10914 - t11023) * t11173 + t11021 + (pkin(9) * t10777 + t11460 * t12443 + (t11941 - t12698) * t13112) * t11146 + t11452);
t12146 = t9134 * t12506;
t10591 = t11020 * t12536 + t10979;
t10794 = t11026 + t11910;
t12104 = t11059 * t10975;
t9135 = t9408 * t13025 + t9537 * t13034 + t9536 * t13035 + (-((-t11742 * t13085 - t13046 * t13141) * t11175 * t12104 + ((-t11019 * t11849 + t13085 * t13164) * t11135 + (-0.2e1 * t10794 * t12201 + (t11135 * t11797 - 0.4e1 * t11026 + t11276) * t13085) * t13111) * t11145 + ((t10591 * t12201 - t12369 * t13085) * t11145 + ((t11135 * t11796 + t11547) * t11684 + ((t11135 * t13140 - t13141) * t13046 + (t11135 * t11741 + t12367) * t13085) * t13121) * t11144) * pkin(9)) * t13085 - (t10961 * t11145 * t12189 + (-t10458 * t11135 + (t10794 * t11924 - t11059 * t12098 + t12104) * t11175 + (t10591 * t12531 - t11567) * pkin(9)) * t13085) * t13046) / ((t10510 + t10523 + t10915 - t11023) * t11175 + t11021 + (pkin(9) * t10778 + t11460 * t12439 + (t11939 - t12697) * t13111) * t11146 + t11451);
t12145 = t9135 * t12505;
t10592 = t11020 * t12535 + t10979;
t10795 = t11027 + t11910;
t12103 = t11059 * t10976;
t9139 = t9409 * t13024 + t9539 * t13032 + t9538 * t13033 + (-((-t11742 * t13084 - t13042 * t13141) * t11189 * t12103 + ((-t11019 * t11848 + t13084 * t13164) * t11139 + (-0.2e1 * t10795 * t12200 + (t11139 * t11797 - 0.4e1 * t11027 + t11276) * t13084) * t13107) * t11145 + ((t10592 * t12200 - t12369 * t13084) * t11145 + ((t11139 * t11796 + t11547) * t11683 + ((t11139 * t13140 - t13141) * t13042 + (t11139 * t11741 + t12367) * t13084) * t13121) * t11144) * pkin(9)) * t13084 - (t10968 * t11145 * t12188 + (-t10458 * t11139 + (t10795 * t11924 - t11059 * t12097 + t12103) * t11189 + (t10592 * t12531 - t11567) * pkin(9)) * t13084) * t13042) / ((t10511 + t10524 + t10919 - t11023) * t11189 + t11021 + (pkin(9) * t10780 + t11460 * t12432 + (t11934 - t12693) * t13107) * t11146 + t11450);
t12144 = t9139 * t12501;
t10593 = t11020 * t12534 + t10979;
t10796 = t11028 + t11910;
t12102 = t11059 * t10977;
t9140 = t9410 * t13023 + t9541 * t13030 + t9540 * t13031 + (-((-t11742 * t13083 - t13041 * t13141) * t11191 * t12102 + ((-t11019 * t11847 + t13083 * t13164) * t11140 + (-0.2e1 * t10796 * t12199 + (t11140 * t11797 - 0.4e1 * t11028 + t11276) * t13083) * t13106) * t11145 + ((t10593 * t12199 - t12369 * t13083) * t11145 + ((t11140 * t11796 + t11547) * t11682 + ((t11140 * t13140 - t13141) * t13041 + (t11140 * t11741 + t12367) * t13083) * t13121) * t11144) * pkin(9)) * t13083 - (t10969 * t11145 * t12187 + (-t10458 * t11140 + (t10796 * t11924 - t11059 * t12096 + t12102) * t11191 + (t10593 * t12531 - t11567) * pkin(9)) * t13083) * t13041) / ((t10512 + t10525 + t10920 - t11023) * t11191 + t11021 + (pkin(9) * t10781 + t11460 * t12427 + (t11932 - t12692) * t13106) * t11146 + t11449);
t12143 = t9140 * t12500;
t10594 = t11020 * t12533 + t10979;
t10797 = t11029 + t11910;
t12101 = t11059 * t10978;
t9141 = t9411 * t13022 + t9543 * t13028 + t9542 * t13029 + (-((-t11742 * t13082 - t13040 * t13141) * t11193 * t12101 + ((-t11019 * t11846 + t13082 * t13164) * t11141 + (-0.2e1 * t10797 * t12198 + (t11141 * t11797 - 0.4e1 * t11029 + t11276) * t13082) * t13105) * t11145 + ((t10594 * t12198 - t12369 * t13082) * t11145 + ((t11141 * t11796 + t11547) * t11681 + ((t11141 * t13140 - t13141) * t13040 + (t11141 * t11741 + t12367) * t13082) * t13121) * t11144) * pkin(9)) * t13082 - (t10970 * t11145 * t12186 + (-t10458 * t11141 + (t10797 * t11924 - t11059 * t12095 + t12101) * t11193 + (t10594 * t12531 - t11567) * pkin(9)) * t13082) * t13040) / ((t10513 + t10526 + t10921 - t11023) * t11193 + t11021 + (pkin(9) * t10782 + t11460 * t12422 + (t11930 - t12691) * t13105) * t11146 + t11448);
t12142 = t9141 * t12499;
t12129 = t10506 * t12580;
t12116 = t10743 * t12416;
t12115 = t10791 * t12818;
t12107 = t10989 * t12580;
t11074 = t11124 ^ 2;
t12078 = t11074 * t12416;
t11692 = t12530 * t13051;
t9106 = t9124 + t12943;
t9110 = t9142 + t12949;
t11756 = t9253 * t12245;
t9190 = t11149 * t11756 + t9241 / 0.2e1 + t13051 / 0.2e1;
t11603 = 0.2e1 * t11756;
t9193 = (t9241 + t13051) * t11149 + t11603;
t11908 = t9598 * (-t11150 * t12153 - t11171 * t11692 + (-t12437 * t9193 - t12446 * t9110 - t12447 * t9106 + 0.2e1 * t12449 * t9190) * t11146);
t11907 = t9598 * (t11150 * t9142 * t12523 - t11165 * t11692 + (t12437 * t9106 - 0.2e1 * t12446 * t9190 - t12447 * t9193 - t12449 * t9110) * t11146);
t11691 = t12530 * t13050;
t9107 = t9125 + t12942;
t9112 = t9143 + t12948;
t11755 = t9254 * t12244;
t9191 = t11149 * t11755 + t9242 / 0.2e1 + t13050 / 0.2e1;
t11602 = 0.2e1 * t11755;
t9194 = (t9242 + t13050) * t11149 + t11602;
t11906 = t9599 * (-t11150 * t12152 - t11173 * t11691 + (-t12436 * t9194 - t12442 * t9112 - t12443 * t9107 + 0.2e1 * t12445 * t9191) * t11146);
t11905 = t9599 * (t11150 * t9143 * t12522 - t11167 * t11691 + (t12436 * t9107 - 0.2e1 * t12442 * t9191 - t12443 * t9194 - t12445 * t9112) * t11146);
t11690 = t12530 * t13049;
t9108 = t9126 + t12941;
t9114 = t9144 + t12947;
t11754 = t9255 * t12243;
t9192 = t11149 * t11754 + t9243 / 0.2e1 + t13049 / 0.2e1;
t11601 = 0.2e1 * t11754;
t9195 = (t9243 + t13049) * t11149 + t11601;
t11904 = t9600 * (-t11150 * t12151 - t11175 * t11690 + (-t12435 * t9195 - t12438 * t9114 - t12439 * t9108 + 0.2e1 * t12441 * t9192) * t11146);
t11903 = t9600 * (t11150 * t9144 * t12521 - t11169 * t11690 + (t12435 * t9108 - 0.2e1 * t12438 * t9192 - t12439 * t9195 - t12441 * t9114) * t11146);
t11689 = t12530 * t13045;
t9115 = t9127 + t12940;
t9119 = t9145 + t12946;
t11750 = t9259 * t12242;
t9202 = t11149 * t11750 + t9247 / 0.2e1 + t13045 / 0.2e1;
t11600 = 0.2e1 * t11750;
t9205 = (t9247 + t13045) * t11149 + t11600;
t11902 = t9601 * (-t11150 * t12150 - t11189 * t11689 + (-t12419 * t9205 - t12430 * t9119 - t12432 * t9115 + 0.2e1 * t12434 * t9202) * t11146);
t11901 = t9601 * (t11150 * t9145 * t12514 - t11183 * t11689 + (t12419 * t9115 - 0.2e1 * t12430 * t9202 - t12432 * t9205 - t12434 * t9119) * t11146);
t11688 = t12530 * t13044;
t9116 = t9128 + t12939;
t9121 = t9146 + t12945;
t11749 = t9260 * t12241;
t9203 = t11149 * t11749 + t9248 / 0.2e1 + t13044 / 0.2e1;
t11599 = 0.2e1 * t11749;
t9206 = (t9248 + t13044) * t11149 + t11599;
t11900 = t9602 * (-t11150 * t12149 - t11191 * t11688 + (-t12418 * t9206 - t12425 * t9121 - t12427 * t9116 + 0.2e1 * t12429 * t9203) * t11146);
t11899 = t9602 * (t11150 * t9146 * t12513 - t11185 * t11688 + (t12418 * t9116 - 0.2e1 * t12425 * t9203 - t12427 * t9206 - t12429 * t9121) * t11146);
t11687 = t12530 * t13043;
t9117 = t9129 + t12938;
t9123 = t9147 + t12944;
t11748 = t9261 * t12240;
t9204 = t11149 * t11748 + t9249 / 0.2e1 + t13043 / 0.2e1;
t11598 = 0.2e1 * t11748;
t9207 = (t9249 + t13043) * t11149 + t11598;
t11898 = t9603 * (-t11150 * t12148 - t11193 * t11687 + (-t12417 * t9207 - t12420 * t9123 - t12422 * t9117 + 0.2e1 * t12424 * t9204) * t11146);
t11897 = t9603 * (t11150 * t9147 * t12512 - t11187 * t11687 + (t12417 * t9117 - 0.2e1 * t12420 * t9204 - t12422 * t9207 - t12424 * t9123) * t11146);
t11881 = t9277 * t12322;
t11880 = t9278 * t12326;
t11879 = t9279 * t12326;
t11878 = t9280 * t12324;
t11877 = t9281 * t12324;
t11876 = t9282 * t12322;
t11875 = t9286 * t12320;
t11874 = t9287 * t12320;
t11873 = t9288 * t12318;
t11872 = t9289 * t12318;
t11871 = t9290 * t12316;
t11870 = t9291 * t12316;
t11869 = t9298 * t12326;
t11868 = t9299 * t12324;
t11867 = t9300 * t12322;
t11866 = t9301 * t12320;
t11865 = t9302 * t12318;
t11864 = t9303 * t12316;
t11863 = t9502 * t12326;
t11862 = t9505 * t12326;
t11861 = t9503 * t12324;
t11860 = t9506 * t12324;
t11859 = t9504 * t12322;
t11858 = t9507 * t12322;
t11857 = t9511 * t12320;
t11856 = t9514 * t12320;
t11855 = t9512 * t12318;
t11854 = t9515 * t12318;
t11853 = t9513 * t12316;
t11852 = t9516 * t12316;
t11841 = t9124 * t12307;
t11840 = t9125 * t12306;
t11839 = t9126 * t12305;
t11838 = t9127 * t12304;
t11837 = t9128 * t12303;
t11836 = t9129 * t12302;
t9226 = 0.2e1 * t12209 + t13048;
t11765 = t9226 * t12245;
t9227 = 0.2e1 * t12208 + t13047;
t11764 = t9227 * t12244;
t9228 = 0.2e1 * t12207 + t13046;
t11763 = t9228 * t12243;
t9235 = 0.2e1 * t12206 + t13042;
t11762 = t9235 * t12242;
t9236 = 0.2e1 * t12205 + t13041;
t11761 = t9236 * t12241;
t9237 = 0.2e1 * t12204 + t13040;
t11760 = t9237 * t12240;
t11759 = t12985 * t9241;
t11758 = t12984 * t9242;
t11757 = t12983 * t9243;
t11753 = t12982 * t9247;
t11752 = t12981 * t9248;
t11751 = t12980 * t9249;
t11734 = t12937 * t9241;
t11733 = t11166 * t12251;
t11732 = t12936 * t9242;
t11731 = t11168 * t12250;
t11730 = t12935 * t9243;
t11729 = t11170 * t12249;
t11728 = t9250 * t12197;
t11727 = t11172 * t12251;
t11726 = t9251 * t12196;
t11725 = t11174 * t12250;
t11724 = t9252 * t12195;
t11723 = t11176 * t12249;
t11722 = t12934 * t9247;
t11721 = t11184 * t12248;
t11720 = t12933 * t9248;
t11719 = t11186 * t12247;
t11718 = t12932 * t9249;
t11717 = t11188 * t12246;
t11716 = t9256 * t12194;
t11715 = t11190 * t12248;
t11714 = t9257 * t12193;
t11713 = t11192 * t12247;
t11712 = t9258 * t12192;
t11711 = t11194 * t12246;
t11680 = t11165 * t12197;
t11679 = t11167 * t12196;
t11678 = t11169 * t12195;
t11677 = t11183 * t12194;
t11676 = t11185 * t12193;
t11675 = t11187 * t12192;
t11589 = 0.4e1 * (t11133 - 0.1e1 / 0.2e1) * t9253 * t13048;
t11588 = 0.4e1 * (t11134 - 0.1e1 / 0.2e1) * t9254 * t13047;
t11587 = 0.4e1 * (t11135 - 0.1e1 / 0.2e1) * t9255 * t13046;
t11586 = 0.4e1 * (t11139 - 0.1e1 / 0.2e1) * t9259 * t13042;
t11585 = 0.4e1 * (t11140 - 0.1e1 / 0.2e1) * t9260 * t13041;
t11584 = 0.4e1 * (t11141 - 0.1e1 / 0.2e1) * t9261 * t13040;
t11445 = t11149 * (t12147 + t13160) + t12530 * t9133;
t9130 = t9133 * t12510;
t9089 = t9130 + t12314;
t11583 = (-pkin(8) * t11967 + t13139) * t9241 - t11165 * t11445 - t11171 * t9089;
t11444 = t11149 * (t12146 + t13159) + t12530 * t9134;
t9131 = t9134 * t12509;
t9091 = t9131 + t12313;
t11582 = (-pkin(8) * t11966 + t13138) * t9242 - t11167 * t11444 - t11173 * t9091;
t11443 = t11149 * (t12145 + t13158) + t12530 * t9135;
t9132 = t9135 * t12508;
t9093 = t9132 + t12312;
t11581 = (-pkin(8) * t11965 + t13137) * t9243 - t11169 * t11443 - t11175 * t9093;
t11580 = (t11149 * t12270 + t11103) * t9241 - t11165 * t9089 + t11171 * t11445;
t11579 = (t11149 * t12269 + t11104) * t9242 - t11167 * t9091 + t11173 * t11444;
t11578 = (t11149 * t12268 + t11105) * t9243 - t11169 * t9093 + t11175 * t11443;
t11442 = t11149 * (t12144 + t13157) + t12530 * t9139;
t9136 = t9139 * t12504;
t9098 = t9136 + t12311;
t11577 = (-pkin(8) * t11961 + t13136) * t9247 - t11183 * t11442 - t11189 * t9098;
t11441 = t11149 * (t12143 + t13156) + t12530 * t9140;
t9137 = t9140 * t12503;
t9100 = t9137 + t12310;
t11576 = (-pkin(8) * t11960 + t13135) * t9248 - t11185 * t11441 - t11191 * t9100;
t11575 = (t11149 * t12267 + t11118) * t9247 - t11183 * t9098 + t11189 * t11442;
t11574 = (t11149 * t12266 + t11119) * t9248 - t11185 * t9100 + t11191 * t11441;
t11440 = t11149 * (t12142 + t13155) + t12530 * t9141;
t9138 = t9141 * t12502;
t9102 = t9138 + t12309;
t11573 = (-pkin(8) * t11959 + t13134) * t9249 - t11187 * t11440 - t11193 * t9102;
t11572 = (t11149 * t12265 + t11120) * t9249 - t11187 * t9102 + t11193 * t11440;
t11566 = t9226 * t12991 * t13048;
t11565 = t9227 * t12990 * t13047;
t11564 = t9228 * t12989 * t13046;
t11563 = t9235 * t12988 * t13042;
t11562 = t9236 * t12987 * t13041;
t11561 = t9237 * t12986 * t13040;
t11538 = t11112 * t11759;
t11537 = t11113 * t11758;
t11536 = t11114 * t11757;
t11535 = t11115 * t11753;
t11534 = t11116 * t11752;
t11533 = t11117 * t11751;
t11532 = t11165 * t11765;
t11531 = t11167 * t11764;
t11530 = t11169 * t11763;
t11529 = t11171 * t11765;
t11528 = t11173 * t11764;
t11527 = t11175 * t11763;
t11526 = t11183 * t11762;
t11525 = t11185 * t11761;
t11524 = t11187 * t11760;
t11523 = t11189 * t11762;
t11522 = t11191 * t11761;
t11521 = t11193 * t11760;
t11421 = -t10507 * t10742 + t10743 * t12817;
t11420 = -t10507 * t10744 + t10745 * t12817;
t9109 = t9142 + 0.2e1 * t12949;
t11418 = t13015 * t9124 + t13068 * t9109;
t11417 = t13014 * t9124 + t13067 * t9109;
t11416 = t13021 * t9124 + t13057 * t9109;
t11415 = t12979 * t9124 + t13003 * t9109;
t11414 = t12978 * t9124 + t13000 * t9109;
t11413 = -t12985 * t9124 + t12991 * t9109;
t9111 = t9143 + 0.2e1 * t12948;
t11412 = t13012 * t9125 + t13066 * t9111;
t11411 = t13011 * t9125 + t13065 * t9111;
t11410 = t13019 * t9125 + t13056 * t9111;
t11409 = t12977 * t9125 + t13002 * t9111;
t11408 = t12976 * t9125 + t12999 * t9111;
t11407 = -t12984 * t9125 + t12990 * t9111;
t9113 = t9144 + 0.2e1 * t12947;
t11406 = t13010 * t9126 + t13069 * t9113;
t11405 = t13013 * t9126 + t13064 * t9113;
t11404 = t13020 * t9126 + t13055 * t9113;
t11403 = t12975 * t9126 + t13001 * t9113;
t11402 = t12974 * t9126 + t12998 * t9113;
t11401 = -t12983 * t9126 + t12989 * t9113;
t9118 = t9145 + 0.2e1 * t12946;
t11400 = t13006 * t9127 + t13063 * t9118;
t11399 = t13009 * t9127 + t13062 * t9118;
t11398 = t13018 * t9127 + t13054 * t9118;
t11397 = t12973 * t9127 + t12997 * t9118;
t11396 = t12972 * t9127 + t12994 * t9118;
t11395 = -t12982 * t9127 + t12988 * t9118;
t9120 = t9146 + 0.2e1 * t12945;
t11394 = t13008 * t9128 + t13061 * t9120;
t11393 = t13005 * t9128 + t13060 * t9120;
t11392 = t13017 * t9128 + t13053 * t9120;
t11391 = t12971 * t9128 + t12996 * t9120;
t11390 = t12970 * t9128 + t12993 * t9120;
t11389 = -t12981 * t9128 + t12987 * t9120;
t9122 = t9147 + 0.2e1 * t12944;
t11388 = t13007 * t9129 + t13059 * t9122;
t11387 = t13004 * t9129 + t13058 * t9122;
t11386 = t13016 * t9129 + t13052 * t9122;
t11385 = t12969 * t9129 + t12995 * t9122;
t11384 = t12968 * t9129 + t12992 * t9122;
t11383 = -t12980 * t9129 + t12986 * t9122;
t11382 = t13057 * t9133 + t13093 * t9124;
t11381 = t13068 * t9133 + t13081 * t9124;
t11380 = t13067 * t9133 + t13080 * t9124;
t11379 = t13000 * t9133 + t13039 * t9124;
t11378 = t13003 * t9133 + t13038 * t9124;
t11377 = t13056 * t9134 + t13092 * t9125;
t11376 = t13066 * t9134 + t13079 * t9125;
t11375 = t13065 * t9134 + t13078 * t9125;
t11374 = t12999 * t9134 + t13037 * t9125;
t11373 = t13002 * t9134 + t13036 * t9125;
t11372 = t13055 * t9135 + t13091 * t9126;
t11371 = t13069 * t9135 + t13077 * t9126;
t11370 = t13064 * t9135 + t13076 * t9126;
t11369 = t12998 * t9135 + t13035 * t9126;
t11368 = t13001 * t9135 + t13034 * t9126;
t11367 = t13054 * t9139 + t13090 * t9127;
t11366 = t13063 * t9139 + t13075 * t9127;
t11365 = t13062 * t9139 + t13074 * t9127;
t11364 = t12994 * t9139 + t13033 * t9127;
t11363 = t12997 * t9139 + t13032 * t9127;
t11362 = t13053 * t9140 + t13089 * t9128;
t11361 = t13061 * t9140 + t13073 * t9128;
t11360 = t13060 * t9140 + t13072 * t9128;
t11359 = t12993 * t9140 + t13031 * t9128;
t11358 = t12996 * t9140 + t13030 * t9128;
t11357 = t13052 * t9141 + t13088 * t9129;
t11356 = t13059 * t9141 + t13071 * t9129;
t11355 = t13058 * t9141 + t13070 * t9129;
t11354 = t12992 * t9141 + t13029 * t9129;
t11353 = t12995 * t9141 + t13028 * t9129;
t11296 = -t10506 * t12571 - t10744 * t12821;
t11294 = t12233 * t9133 + t13027 * t9124;
t11293 = t12231 * t9134 + t13026 * t9125;
t11292 = t12229 * t9135 + t13025 * t9126;
t11291 = t12227 * t9139 + t13024 * t9127;
t11290 = t12225 * t9140 + t13023 * t9128;
t11289 = t12223 * t9141 + t13022 * t9129;
t11251 = t11589 * t9617 + t11841 * t9616;
t11250 = t11588 * t9619 + t11840 * t9618;
t11249 = t11587 * t9621 + t11839 * t9620;
t11248 = t11586 * t9626 + t11838 * t9625;
t11247 = t11585 * t9628 + t11837 * t9627;
t11246 = t11584 * t9630 + t11836 * t9629;
t11245 = -t11074 * t11197 * t11801 - t10789 * t12720;
t11126 = t11145 ^ 2;
t10530 = t10742 * t11974;
t10520 = t10791 * t12720;
t10465 = -t10735 + t10497;
t10390 = t10506 * t11804;
t10298 = -t10498 + t10735;
t10158 = -t10497 + t10498;
t10153 = t10743 * t12821;
t10152 = -t10735 - t10498;
t10151 = -t10735 - t10497;
t10078 = -t10497 - t10498;
t9234 = t12204 + t13040 / 0.2e1;
t9233 = t12205 + t13041 / 0.2e1;
t9232 = t12206 + t13042 / 0.2e1;
t9231 = t12198 / 0.2e1 + t13082;
t9230 = t12199 / 0.2e1 + t13083;
t9229 = t12200 / 0.2e1 + t13084;
t9225 = t12207 + t13046 / 0.2e1;
t9224 = t12208 + t13047 / 0.2e1;
t9223 = t12209 + t13048 / 0.2e1;
t9222 = t12201 / 0.2e1 + t13085;
t9221 = t12202 / 0.2e1 + t13086;
t9220 = t12203 / 0.2e1 + t13087;
t9213 = (-0.2e1 * t11141 + 0.1e1) * t9249;
t9212 = (-0.2e1 * t11140 + 0.1e1) * t9248;
t9211 = (-0.2e1 * t11139 + 0.1e1) * t9247;
t9210 = (-0.2e1 * t11135 + 0.1e1) * t9243;
t9209 = (-0.2e1 * t11134 + 0.1e1) * t9242;
t9208 = (-0.2e1 * t11133 + 0.1e1) * t9241;
t9201 = -pkin(8) * t12516 * t9234 + t13134 * t9231;
t9200 = -pkin(8) * t12520 * t9232 + t13136 * t9229;
t9199 = t11120 * t9231 + t12265 * t9234;
t9198 = t11119 * t9230 + t12266 * t9233;
t9197 = t11118 * t9229 + t12267 * t9232;
t9196 = -pkin(8) * t12518 * t9233 + t13135 * t9230;
t9189 = -pkin(8) * t12527 * t9224 + t13138 * t9221;
t9188 = -pkin(8) * t12529 * t9223 + t13139 * t9220;
t9187 = -pkin(8) * t12525 * t9225 + t13137 * t9222;
t9186 = t11105 * t9222 + t12268 * t9225;
t9185 = t11104 * t9221 + t12269 * t9224;
t9184 = t11103 * t9220 + t12270 * t9223;
t9101 = t9138 + 0.2e1 * t12309;
t9099 = t9137 + 0.2e1 * t12310;
t9097 = t9136 + 0.2e1 * t12311;
t9092 = t9132 + 0.2e1 * t12312;
t9090 = t9131 + 0.2e1 * t12313;
t9088 = t9130 + 0.2e1 * t12314;
t9063 = (-t12142 + (-0.2e1 * t9129 - t12938) * pkin(2)) * t11187 - t11193 * (t11149 * t9101 + t13104 * t9147);
t9062 = (-t12143 + (-0.2e1 * t9128 - t12939) * pkin(2)) * t11185 - t11191 * (t11149 * t9099 + t13104 * t9146);
t9061 = (-t12144 + (-0.2e1 * t9127 - t12940) * pkin(2)) * t11183 - t11189 * (t11149 * t9097 + t13104 * t9145);
t9060 = (-t11187 * t9101 + t13134 * t9147) * t11149 + (t12142 + 0.2e1 * t13155) * t11193 - pkin(8) * t12148;
t9059 = (-t11185 * t9099 + t13135 * t9146) * t11149 + (t12143 + 0.2e1 * t13156) * t11191 - pkin(8) * t12149;
t9058 = (-t11183 * t9097 + t13136 * t9145) * t11149 + (t12144 + 0.2e1 * t13157) * t11189 - pkin(8) * t12150;
t9057 = (-t12145 + (-0.2e1 * t9126 - t12941) * pkin(2)) * t11169 - t11175 * (t11149 * t9092 + t13104 * t9144);
t9056 = (-t12146 + (-0.2e1 * t9125 - t12942) * pkin(2)) * t11167 - t11173 * (t11149 * t9090 + t13104 * t9143);
t9055 = (-t12147 + (-0.2e1 * t9124 - t12943) * pkin(2)) * t11165 - t11171 * (t11149 * t9088 + t13104 * t9142);
t9054 = (-t11169 * t9092 + t13137 * t9144) * t11149 + (t12145 + 0.2e1 * t13158) * t11175 - pkin(8) * t12151;
t9053 = (-t11167 * t9090 + t13138 * t9143) * t11149 + (t12146 + 0.2e1 * t13159) * t11173 - pkin(8) * t12152;
t9052 = (-t11165 * t9088 + t13139 * t9142) * t11149 + (t12147 + 0.2e1 * t13160) * t11171 - pkin(8) * t12153;
t1 = [t13022 * t9141 + t13023 * t9140 + t13024 * t9139 + t13025 * t9135 + t13026 * t9134 + t13027 * t9133, t12223 * t9129 + t12225 * t9128 + t12227 * t9127 + t12229 * t9126 + t12231 * t9125 + t12233 * t9124, (t11172 * t11294 + t11174 * t11293 + t11176 * t11292 + t11190 * t11291 + t11192 * t11290 + t11194 * t11289 - t11717 * t9357 - t11719 * t9356 - t11721 * t9355 - t11729 * t9354 - t11731 * t9353 - t11733 * t9352) * t11146, (-t11166 * t11294 - t11168 * t11293 - t11170 * t11292 - t11184 * t11291 - t11186 * t11290 - t11188 * t11289 - t11711 * t9357 - t11713 * t9356 - t11715 * t9355 - t11723 * t9354 - t11725 * t9353 - t11727 * t9352) * t11146, ((t12956 * t12986 + (t11598 * t12986 + t11751) * t12423) * t11117 + (t12957 * t12987 + (t11599 * t12987 + t11752) * t12428) * t11116 + (t12958 * t12988 + (t11600 * t12988 + t11753) * t12433) * t11115 + (t12959 * t12989 + (t11601 * t12989 + t11757) * t12440) * t11114 + (t12960 * t12990 + (t11602 * t12990 + t11758) * t12444) * t11113 + (t12961 * t12991 + (t11603 * t12991 + t11759) * t12448) * t11112) * t11126, ((-t9213 * t12980 + (t11584 * t9629 + t11836) * t12986) * t11117 + (-t9212 * t12981 + (t11585 * t9627 + t11837) * t12987) * t11116 + (-t9211 * t12982 + (t11586 * t9625 + t11838) * t12988) * t11115 + (-t9210 * t12983 + (t11587 * t9620 + t11839) * t12989) * t11114 + (-t9209 * t12984 + (t11588 * t9618 + t11840) * t12990) * t11113 + (-t9208 * t12985 + (t11589 * t9616 + t11841) * t12991) * t11112) * t11126, ((t11187 * t11383 + t11193 * t11561) * t11117 + (t11185 * t11389 + t11191 * t11562) * t11116 + (t11183 * t11395 + t11189 * t11563) * t11115 + (t11169 * t11401 + t11175 * t11564) * t11114 + (t11167 * t11407 + t11173 * t11565) * t11113 + (t11165 * t11413 + t11171 * t11566) * t11112 + (t11171 * t11538 + t11173 * t11537 + t11175 * t11536 + t11189 * t11535 + t11191 * t11534 + t11193 * t11533) * t11149) * t11145, ((-t11187 * t11561 + t11193 * t11383) * t11117 + (-t11185 * t11562 + t11191 * t11389) * t11116 + (-t11183 * t11563 + t11189 * t11395) * t11115 + (-t11169 * t11564 + t11175 * t11401) * t11114 + (-t11167 * t11565 + t11173 * t11407) * t11113 + (-t11165 * t11566 + t11171 * t11413) * t11112 + (-t11165 * t11538 - t11167 * t11537 - t11169 * t11536 - t11183 * t11535 - t11185 * t11534 - t11187 * t11533) * t11149) * t11145, -t9110 * t12232 - t9112 * t12230 - t9114 * t12228 - t9119 * t12226 - t9121 * t12224 - t9123 * t12222 + (t12223 * t9123 + t12225 * t9121 + t12227 * t9119 + t12229 * t9114 + t12231 * t9112 + t12233 * t9110) * t11149, t9357 * t11897 + t9356 * t11899 + t9355 * t11901 + t9354 * t11903 + t9353 * t11905 + t9352 * t11907 + (-t11572 * t12980 + (t12315 * t9199 + t9060) * t12986) * t11117 + (-t11574 * t12981 + (t12317 * t9198 + t9059) * t12987) * t11116 + (-t11575 * t12982 + (t12319 * t9197 + t9058) * t12988) * t11115 + (-t11578 * t12983 + (t12321 * t9186 + t9054) * t12989) * t11114 + (-t11579 * t12984 + (t12323 * t9185 + t9053) * t12990) * t11113 + (-t11580 * t12985 + (t12325 * t9184 + t9052) * t12991) * t11112, t9357 * t11898 + t9356 * t11900 + t9355 * t11902 + t9354 * t11904 + t9353 * t11906 + t9352 * t11908 + (-t11573 * t12980 + (t12315 * t9201 + t9063) * t12986) * t11117 + (-t11576 * t12981 + (t12317 * t9196 + t9062) * t12987) * t11116 + (-t11577 * t12982 + (t12319 * t9200 + t9061) * t12988) * t11115 + (-t11581 * t12983 + (t12321 * t9187 + t9057) * t12989) * t11114 + (-t11582 * t12984 + (t12323 * t9189 + t9056) * t12990) * t11113 + (-t11583 * t12985 + (t12325 * t9188 + t9055) * t12991) * t11112, 0, 0, 0, 0, 0, 0, t10151 * t11804 - t12590 + t10520 + (-t12078 + t12115) * t11121, -t10152 * t12592 + t11245 + t12380, t11122 * t10078 + t10390 + (t12847 + (t11802 + t12819) * t10989) * t11124, 0; t13029 * t9141 + t13031 * t9140 + t13033 * t9139 + t13035 * t9135 + t13037 * t9134 + t13039 * t9133, t12992 * t9129 + t12993 * t9128 + t12994 * t9127 + t12998 * t9126 + t12999 * t9125 + t13000 * t9124, (t11172 * t11379 + t11174 * t11374 + t11176 * t11369 + t11190 * t11364 + t11192 * t11359 + t11194 * t11354 - t11717 * t9332 - t11719 * t9330 - t11721 * t9328 - t11729 * t9326 - t11731 * t9324 - t11733 * t9322) * t11146, (-t11166 * t11379 - t11168 * t11374 - t11170 * t11369 - t11184 * t11364 - t11186 * t11359 - t11188 * t11354 - t11711 * t9332 - t11713 * t9330 - t11715 * t9328 - t11723 * t9326 - t11725 * t9324 - t11727 * t9322) * t11146, (t9505 * t12221 + t9506 * t12220 + t9507 * t12219 + t9514 * t12218 + t9515 * t12217 + t9516 * t12216 + (t12327 * t9516 - t9258 * t9726) * t11675 + (t12328 * t9515 - t9257 * t9725) * t11676 + (t12329 * t9514 - t9256 * t9724) * t11677 + (t12330 * t9507 - t9252 * t9717) * t11678 + (t12331 * t9506 - t9251 * t9716) * t11679 + (t12332 * t9505 - t9250 * t9715) * t11680) * t11126, (t11246 * t9516 + t11247 * t9515 + t11248 * t9514 + t11249 * t9507 + t11250 * t9506 + t11251 * t9505 + t12968 * t9213 + t12970 * t9212 + t12972 * t9211 + t12974 * t9210 + t12976 * t9209 + t12978 * t9208) * t11126, (t9516 * t11521 + t9515 * t11522 + t9514 * t11523 + t9507 * t11527 + t9506 * t11528 + t9505 * t11529 + t11384 * t11187 + t11390 * t11185 + t11396 * t11183 + t11402 * t11169 + t11408 * t11167 + t11414 * t11165 + (-t11712 * t9726 - t11714 * t9725 - t11716 * t9724 - t11724 * t9717 - t11726 * t9716 - t11728 * t9715) * t11149) * t11145, (-t9516 * t11524 - t9515 * t11525 - t9514 * t11526 - t9507 * t11530 - t9506 * t11531 - t9505 * t11532 + t11384 * t11193 + t11390 * t11191 + t11396 * t11189 + t11402 * t11175 + t11408 * t11173 + t11414 * t11171 + (t11718 * t9726 + t11720 * t9725 + t11722 * t9724 + t11730 * t9717 + t11732 * t9716 + t11734 * t9715) * t11149) * t11145, t9110 * t12978 + t9112 * t12976 + t9114 * t12974 + t9119 * t12972 + t9121 * t12970 + t9123 * t12968 + (t12992 * t9123 + t12993 * t9121 + t12994 * t9119 + t12998 * t9114 + t12999 * t9112 + t13000 * t9110) * t11149, t9052 * t13000 + t9053 * t12999 + t9054 * t12998 + t9058 * t12994 + t9059 * t12993 + t9060 * t12992 + t9332 * t11897 + t9330 * t11899 + t9328 * t11901 + t9326 * t11903 + t9324 * t11905 + t9322 * t11907 + (t11572 * t9726 + t11852 * t9199) * t9680 + (t11574 * t9725 + t11854 * t9198) * t9678 + (t11575 * t9724 + t11856 * t9197) * t9676 + (t11578 * t9717 + t11858 * t9186) * t9668 + (t11579 * t9716 + t11860 * t9185) * t9666 + (t11580 * t9715 + t11862 * t9184) * t9664, t9055 * t13000 + t9056 * t12999 + t9057 * t12998 + t9061 * t12994 + t9062 * t12993 + t9063 * t12992 + t9332 * t11898 + t9330 * t11900 + t9328 * t11902 + t9326 * t11904 + t9324 * t11906 + t9322 * t11908 + (t11573 * t9726 + t11852 * t9201) * t9680 + (t11576 * t9725 + t11854 * t9196) * t9678 + (t11577 * t9724 + t11856 * t9200) * t9676 + (t11581 * t9717 + t11858 * t9187) * t9668 + (t11582 * t9716 + t11860 * t9189) * t9666 + (t11583 * t9715 + t11862 * t9188) * t9664, 0, 0, 0, 0, 0, 0, t12129 + t10151 * t10743 + t10530 + (-t12107 - t12822) * t10791, t10152 * t10742 - t10153 + (-t12116 + (-t10507 + t12820) * t11123) * t11124, -t10078 * t12580 + t11421 + t12389, 0; t13028 * t9141 + t13030 * t9140 + t13032 * t9139 + t13034 * t9135 + t13036 * t9134 + t13038 * t9133, t12995 * t9129 + t12996 * t9128 + t12997 * t9127 + t13001 * t9126 + t13002 * t9125 + t13003 * t9124, (t11172 * t11378 + t11174 * t11373 + t11176 * t11368 + t11190 * t11363 + t11192 * t11358 + t11194 * t11353 - t11717 * t9333 - t11719 * t9331 - t11721 * t9329 - t11729 * t9327 - t11731 * t9325 - t11733 * t9323) * t11146, (-t11166 * t11378 - t11168 * t11373 - t11170 * t11368 - t11184 * t11363 - t11186 * t11358 - t11188 * t11353 - t11711 * t9333 - t11713 * t9331 - t11715 * t9329 - t11723 * t9327 - t11725 * t9325 - t11727 * t9323) * t11146, (t9502 * t12221 + t9503 * t12220 + t9504 * t12219 + t9511 * t12218 + t9512 * t12217 + t9513 * t12216 + (t12327 * t9513 - t9258 * t9723) * t11675 + (t12328 * t9512 - t9257 * t9722) * t11676 + (t12329 * t9511 - t9256 * t9721) * t11677 + (t12330 * t9504 - t9252 * t9714) * t11678 + (t12331 * t9503 - t9251 * t9713) * t11679 + (t12332 * t9502 - t9250 * t9712) * t11680) * t11126, (t11246 * t9513 + t11247 * t9512 + t11248 * t9511 + t11249 * t9504 + t11250 * t9503 + t11251 * t9502 + t12969 * t9213 + t12971 * t9212 + t12973 * t9211 + t12975 * t9210 + t12977 * t9209 + t12979 * t9208) * t11126, (t9513 * t11521 + t9512 * t11522 + t9511 * t11523 + t9504 * t11527 + t9503 * t11528 + t9502 * t11529 + t11385 * t11187 + t11391 * t11185 + t11397 * t11183 + t11403 * t11169 + t11409 * t11167 + t11415 * t11165 + (-t11712 * t9723 - t11714 * t9722 - t11716 * t9721 - t11724 * t9714 - t11726 * t9713 - t11728 * t9712) * t11149) * t11145, (-t9513 * t11524 - t9512 * t11525 - t9511 * t11526 - t9504 * t11530 - t9503 * t11531 - t9502 * t11532 + t11385 * t11193 + t11391 * t11191 + t11397 * t11189 + t11403 * t11175 + t11409 * t11173 + t11415 * t11171 + (t11718 * t9723 + t11720 * t9722 + t11722 * t9721 + t11730 * t9714 + t11732 * t9713 + t11734 * t9712) * t11149) * t11145, t9110 * t12979 + t9112 * t12977 + t9114 * t12975 + t9119 * t12973 + t9121 * t12971 + t9123 * t12969 + (t12995 * t9123 + t12996 * t9121 + t12997 * t9119 + t13001 * t9114 + t13002 * t9112 + t13003 * t9110) * t11149, t9052 * t13003 + t9053 * t13002 + t9054 * t13001 + t9058 * t12997 + t9059 * t12996 + t9060 * t12995 + t9333 * t11897 + t9331 * t11899 + t9329 * t11901 + t9327 * t11903 + t9325 * t11905 + t9323 * t11907 + (t11572 * t9723 + t11853 * t9199) * t9680 + (t11574 * t9722 + t11855 * t9198) * t9678 + (t11575 * t9721 + t11857 * t9197) * t9676 + (t11578 * t9714 + t11859 * t9186) * t9668 + (t11579 * t9713 + t11861 * t9185) * t9666 + (t11580 * t9712 + t11863 * t9184) * t9664, t9055 * t13003 + t9056 * t13002 + t9057 * t13001 + t9061 * t12997 + t9062 * t12996 + t9063 * t12995 + t9333 * t11898 + t9331 * t11900 + t9329 * t11902 + t9327 * t11904 + t9325 * t11906 + t9323 * t11908 + (t11573 * t9723 + t11853 * t9201) * t9680 + (t11576 * t9722 + t11855 * t9196) * t9678 + (t11577 * t9721 + t11857 * t9200) * t9676 + (t11581 * t9714 + t11859 * t9187) * t9668 + (t11582 * t9713 + t11861 * t9189) * t9666 + (t11583 * t9712 + t11863 * t9188) * t9664, 0, 0, 0, 0, 0, 0, t10151 * t10745 + t11296 + t12379, t10152 * t10744 + t12381 - t13240, t10078 * t12571 + t11420 + t12388, 0; t13088 * t9141 + t13089 * t9140 + t13090 * t9139 + t13091 * t9135 + t13092 * t9134 + t13093 * t9133, t13052 * t9129 + t13053 * t9128 + t13054 * t9127 + t13055 * t9126 + t13056 * t9125 + t13057 * t9124, (t11172 * t11382 + t11174 * t11377 + t11176 * t11372 + t11190 * t11367 + t11192 * t11362 + t11194 * t11357 - t11717 * t9219 - t11719 * t9218 - t11721 * t9217 - t11729 * t9216 - t11731 * t9215 - t11733 * t9214) * t11146, (-t11166 * t11382 - t11168 * t11377 - t11170 * t11372 - t11184 * t11367 - t11186 * t11362 - t11188 * t11357 - t11711 * t9219 - t11713 * t9218 - t11715 * t9217 - t11723 * t9216 - t11725 * t9215 - t11727 * t9214) * t11146, (t9298 * t12221 + t9299 * t12220 + t9300 * t12219 + t9301 * t12218 + t9302 * t12217 + t9303 * t12216 + (t12327 * t9303 - t9258 * t9363) * t11675 + (t12328 * t9302 - t9257 * t9362) * t11676 + (t12329 * t9301 - t9256 * t9361) * t11677 + (t12330 * t9300 - t9252 * t9359) * t11678 + (t12331 * t9299 - t9251 * t9360) * t11679 + (t12332 * t9298 - t9250 * t9358) * t11680) * t11126, (t11246 * t9303 + t11247 * t9302 + t11248 * t9301 + t11249 * t9300 + t11250 * t9299 + t11251 * t9298 + t13016 * t9213 + t13017 * t9212 + t13018 * t9211 + t13019 * t9209 + t13020 * t9210 + t13021 * t9208) * t11126, (t9303 * t11521 + t9302 * t11522 + t9301 * t11523 + t9300 * t11527 + t9299 * t11528 + t9298 * t11529 + t11386 * t11187 + t11392 * t11185 + t11398 * t11183 + t11404 * t11169 + t11410 * t11167 + t11416 * t11165 + (-t11712 * t9363 - t11714 * t9362 - t11716 * t9361 - t11724 * t9359 - t11726 * t9360 - t11728 * t9358) * t11149) * t11145, (-t9303 * t11524 - t9302 * t11525 - t9301 * t11526 - t9300 * t11530 - t9299 * t11531 - t9298 * t11532 + t11386 * t11193 + t11392 * t11191 + t11398 * t11189 + t11404 * t11175 + t11410 * t11173 + t11416 * t11171 + (t11718 * t9363 + t11720 * t9362 + t11722 * t9361 + t11730 * t9359 + t11732 * t9360 + t11734 * t9358) * t11149) * t11145, t9110 * t13021 + t9112 * t13019 + t9114 * t13020 + t9119 * t13018 + t9121 * t13017 + t9123 * t13016 + (t13052 * t9123 + t13053 * t9121 + t13054 * t9119 + t13055 * t9114 + t13056 * t9112 + t13057 * t9110) * t11149, t9052 * t13057 + t9053 * t13056 + t9054 * t13055 + t9058 * t13054 + t9059 * t13053 + t9060 * t13052 + t9219 * t11897 + t9218 * t11899 + t9217 * t11901 + t9216 * t11903 + t9215 * t11905 + t9214 * t11907 + (t11572 * t9363 + t11864 * t9199) * t9680 + (t11574 * t9362 + t11865 * t9198) * t9678 + (t11575 * t9361 + t11866 * t9197) * t9676 + (t11578 * t9359 + t11867 * t9186) * t9668 + (t11579 * t9360 + t11868 * t9185) * t9666 + (t11580 * t9358 + t11869 * t9184) * t9664, t9055 * t13057 + t9056 * t13056 + t9057 * t13055 + t9061 * t13054 + t9062 * t13053 + t9063 * t13052 + t9219 * t11898 + t9218 * t11900 + t9217 * t11902 + t9216 * t11904 + t9215 * t11906 + t9214 * t11908 + (t11573 * t9363 + t11864 * t9201) * t9680 + (t11576 * t9362 + t11865 * t9196) * t9678 + (t11577 * t9361 + t11866 * t9200) * t9676 + (t11581 * t9359 + t11867 * t9187) * t9668 + (t11582 * t9360 + t11868 * t9189) * t9666 + (t11583 * t9358 + t11869 * t9188) * t9664, t10507 * t11804 + (t10789 * t11122 - t10989 * t12592) * t10791, t11122 * t10158 + t10390 + (-t12847 + (-t11802 + t12819) * t10989) * t11124, -t10298 * t12592 - t11245 + t12380, -t10506 * t12592 + (-t10791 * t11122 + t10989 * t11804) * t10789, t10465 * t11804 + t12590 + t10520 + (-t12078 - t12115) * t11121, (t11122 * t12416 + (-t10789 * t12365 + t10791 * t11121) * t10989) * t11124, 0, 0, 0, 0; t13070 * t9141 + t13072 * t9140 + t13074 * t9139 + t13076 * t9135 + t13078 * t9134 + t13080 * t9133, t13058 * t9129 + t13060 * t9128 + t13062 * t9127 + t13064 * t9126 + t13065 * t9125 + t13067 * t9124, (t11172 * t11380 + t11174 * t11375 + t11176 * t11370 + t11190 * t11365 + t11192 * t11360 + t11194 * t11355 - t11717 * t9273 - t11719 * t9271 - t11721 * t9269 - t11729 * t9267 - t11731 * t9265 - t11733 * t9263) * t11146, (-t11166 * t11380 - t11168 * t11375 - t11170 * t11370 - t11184 * t11365 - t11186 * t11360 - t11188 * t11355 - t11711 * t9273 - t11713 * t9271 - t11715 * t9269 - t11723 * t9267 - t11725 * t9265 - t11727 * t9263) * t11146, (t9279 * t12221 + t9281 * t12220 + t9282 * t12219 + t9287 * t12218 + t9289 * t12217 + t9291 * t12216 + (t12327 * t9291 - t9258 * t9441) * t11675 + (t12328 * t9289 - t9257 * t9440) * t11676 + (t12329 * t9287 - t9256 * t9436) * t11677 + (t12330 * t9282 - t9252 * t9432) * t11678 + (t12331 * t9281 - t9251 * t9434) * t11679 + (t12332 * t9279 - t9250 * t9431) * t11680) * t11126, (t11246 * t9291 + t11247 * t9289 + t11248 * t9287 + t11249 * t9282 + t11250 * t9281 + t11251 * t9279 + t13004 * t9213 + t13005 * t9212 + t13009 * t9211 + t13011 * t9209 + t13013 * t9210 + t13014 * t9208) * t11126, (t9291 * t11521 + t9289 * t11522 + t9287 * t11523 + t9282 * t11527 + t9281 * t11528 + t9279 * t11529 + t11387 * t11187 + t11393 * t11185 + t11399 * t11183 + t11405 * t11169 + t11411 * t11167 + t11417 * t11165 + (-t11712 * t9441 - t11714 * t9440 - t11716 * t9436 - t11724 * t9432 - t11726 * t9434 - t11728 * t9431) * t11149) * t11145, (-t9291 * t11524 - t9289 * t11525 - t9287 * t11526 - t9282 * t11530 - t9281 * t11531 - t9279 * t11532 + t11387 * t11193 + t11393 * t11191 + t11399 * t11189 + t11405 * t11175 + t11411 * t11173 + t11417 * t11171 + (t11718 * t9441 + t11720 * t9440 + t11722 * t9436 + t11730 * t9432 + t11732 * t9434 + t11734 * t9431) * t11149) * t11145, t9110 * t13014 + t9112 * t13011 + t9114 * t13013 + t9119 * t13009 + t9121 * t13005 + t9123 * t13004 + (t13058 * t9123 + t13060 * t9121 + t13062 * t9119 + t13064 * t9114 + t13065 * t9112 + t13067 * t9110) * t11149, t9052 * t13067 + t9053 * t13065 + t9054 * t13064 + t9058 * t13062 + t9059 * t13060 + t9060 * t13058 + t9273 * t11897 + t9271 * t11899 + t9269 * t11901 + t9267 * t11903 + t9265 * t11905 + t9263 * t11907 + (t11572 * t9441 + t11870 * t9199) * t9680 + (t11574 * t9440 + t11872 * t9198) * t9678 + (t11575 * t9436 + t11874 * t9197) * t9676 + (t11578 * t9432 + t11876 * t9186) * t9668 + (t11579 * t9434 + t11877 * t9185) * t9666 + (t11580 * t9431 + t11879 * t9184) * t9664, t9055 * t13067 + t9056 * t13065 + t9057 * t13064 + t9061 * t13062 + t9062 * t13060 + t9063 * t13058 + t9273 * t11898 + t9271 * t11900 + t9269 * t11902 + t9267 * t11904 + t9265 * t11906 + t9263 * t11908 + (t11573 * t9441 + t11870 * t9201) * t9680 + (t11576 * t9440 + t11872 * t9196) * t9678 + (t11577 * t9436 + t11874 * t9200) * t9676 + (t11581 * t9432 + t11876 * t9187) * t9668 + (t11582 * t9434 + t11877 * t9189) * t9666 + (t11583 * t9431 + t11879 * t9188) * t9664, t10743 * t10507 + (t10742 * t10989 - t10789 * t12580) * t10791, -t10158 * t12580 - t11421 + t12389, t10298 * t10742 - t10153 + (t12116 + (-t10507 - t12820) * t11123) * t11124, t10742 * t10506 + (t10743 * t10989 + t10791 * t12580) * t10789, -t12129 + t10465 * t10743 + t10530 + (-t12107 + t12822) * t10791, -t11123 * t12078 + (-t10742 * t10791 - t10743 * t10789) * t10989, 0, 0, 0, 0; t13071 * t9141 + t13073 * t9140 + t13075 * t9139 + t13077 * t9135 + t13079 * t9134 + t13081 * t9133, t13059 * t9129 + t13061 * t9128 + t13063 * t9127 + t13066 * t9125 + t13068 * t9124 + t13069 * t9126, (t11172 * t11381 + t11174 * t11376 + t11176 * t11371 + t11190 * t11366 + t11192 * t11361 + t11194 * t11356 - t11717 * t9272 - t11719 * t9270 - t11721 * t9268 - t11729 * t9266 - t11731 * t9264 - t11733 * t9262) * t11146, (-t11166 * t11381 - t11168 * t11376 - t11170 * t11371 - t11184 * t11366 - t11186 * t11361 - t11188 * t11356 - t11711 * t9272 - t11713 * t9270 - t11715 * t9268 - t11723 * t9266 - t11725 * t9264 - t11727 * t9262) * t11146, (t9278 * t12221 + t9280 * t12220 + t9277 * t12219 + t9286 * t12218 + t9288 * t12217 + t9290 * t12216 + (t12327 * t9290 - t9258 * t9438) * t11675 + (t12328 * t9288 - t9257 * t9437) * t11676 + (t12329 * t9286 - t9256 * t9439) * t11677 + (t12330 * t9277 - t9252 * t9435) * t11678 + (t12331 * t9280 - t9251 * t9433) * t11679 + (t12332 * t9278 - t9250 * t9430) * t11680) * t11126, (t11246 * t9290 + t11247 * t9288 + t11248 * t9286 + t11249 * t9277 + t11250 * t9280 + t11251 * t9278 + t13006 * t9211 + t13007 * t9213 + t13008 * t9212 + t13010 * t9210 + t13012 * t9209 + t13015 * t9208) * t11126, (t9290 * t11521 + t9288 * t11522 + t9286 * t11523 + t9277 * t11527 + t9280 * t11528 + t9278 * t11529 + t11388 * t11187 + t11394 * t11185 + t11400 * t11183 + t11406 * t11169 + t11412 * t11167 + t11418 * t11165 + (-t11712 * t9438 - t11714 * t9437 - t11716 * t9439 - t11724 * t9435 - t11726 * t9433 - t11728 * t9430) * t11149) * t11145, (-t9290 * t11524 - t9288 * t11525 - t9286 * t11526 - t9277 * t11530 - t9280 * t11531 - t9278 * t11532 + t11388 * t11193 + t11394 * t11191 + t11400 * t11189 + t11406 * t11175 + t11412 * t11173 + t11418 * t11171 + (t11718 * t9438 + t11720 * t9437 + t11722 * t9439 + t11730 * t9435 + t11732 * t9433 + t11734 * t9430) * t11149) * t11145, t9110 * t13015 + t9112 * t13012 + t9114 * t13010 + t9119 * t13006 + t9121 * t13008 + t9123 * t13007 + (t13059 * t9123 + t13061 * t9121 + t13063 * t9119 + t13066 * t9112 + t13068 * t9110 + t13069 * t9114) * t11149, t9052 * t13068 + t9053 * t13066 + t9054 * t13069 + t9058 * t13063 + t9059 * t13061 + t9060 * t13059 + t9272 * t11897 + t9270 * t11899 + t9268 * t11901 + t9266 * t11903 + t9264 * t11905 + t9262 * t11907 + (t11572 * t9438 + t11871 * t9199) * t9680 + (t11574 * t9437 + t11873 * t9198) * t9678 + (t11575 * t9439 + t11875 * t9197) * t9676 + (t11578 * t9435 + t11881 * t9186) * t9668 + (t11579 * t9433 + t11878 * t9185) * t9666 + (t11580 * t9430 + t11880 * t9184) * t9664, t9055 * t13068 + t9056 * t13066 + t9057 * t13069 + t9061 * t13063 + t9062 * t13061 + t9063 * t13059 + t9272 * t11898 + t9270 * t11900 + t9268 * t11902 + t9266 * t11904 + t9264 * t11906 + t9262 * t11908 + (t11573 * t9438 + t11871 * t9201) * t9680 + (t11576 * t9437 + t11873 * t9196) * t9678 + (t11577 * t9439 + t11875 * t9200) * t9676 + (t11581 * t9435 + t11881 * t9187) * t9668 + (t11582 * t9433 + t11878 * t9189) * t9666 + (t11583 * t9430 + t11880 * t9188) * t9664, t10745 * t10507 + (t10744 * t10989 + t10789 * t12571) * t10791, t10158 * t12571 - t11420 + t12388, t10298 * t10744 + t12381 + t13240, t10744 * t10506 + (t10745 * t10989 - t12114) * t10789, t10465 * t10745 - t11296 + t12379, t11125 * t12078 + (-t10744 * t10791 - t10745 * t10789) * t10989, 0, 0, 0, 0;];
tau_reg  = t1;
