% Calculate vector of centrifugal and coriolis load on the joints for
% P6PRRRRR6V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [6x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2019-09-11 16:13
% Revision: 7993d029b5937b704dcf3fc7d8ae322038cdcbdd (2019-09-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2019-09-11 13:09:40
% EndTime: 2019-09-11 13:17:43
% DurationCPUTime: 504.04s
% Computational Cost: add. (1697031->2958), mult. (4497669->4675), div. (24360->48), fcn. (3661218->50), ass. (0->1738)
t4698 = xP(4);
t4627 = sin(t4698);
t4630 = cos(t4698);
t5378 = t4627 * t4630;
t5774 = 0.2e1 * t5378;
t4697 = xP(5);
t4626 = sin(t4697);
t4629 = cos(t4697);
t5654 = koppelP(6,3);
t4696 = xP(6);
t4625 = sin(t4696);
t4628 = cos(t4696);
t5660 = koppelP(6,2);
t5666 = koppelP(6,1);
t5735 = -t4625 * t5660 + t4628 * t5666;
t4301 = t4626 * t5654 + t4629 * t5735;
t4691 = xDP(5);
t5377 = t4627 * t4691;
t4471 = t4625 * t5666 + t4628 * t5660;
t5384 = t4627 * t4471;
t5681 = -t4626 * t5735 + t4629 * t5654;
t4148 = t4630 * t5681 + t5384;
t4692 = xDP(4);
t5478 = t4148 * t4692;
t5773 = -t4301 * t5377 + t5478;
t5655 = koppelP(5,3);
t5661 = koppelP(5,2);
t5667 = koppelP(5,1);
t5734 = -t4625 * t5661 + t4628 * t5667;
t4302 = t4626 * t5655 + t4629 * t5734;
t4472 = t4625 * t5667 + t4628 * t5661;
t5383 = t4627 * t4472;
t5680 = -t4626 * t5734 + t4629 * t5655;
t4150 = t4630 * t5680 + t5383;
t5477 = t4150 * t4692;
t5772 = -t4302 * t5377 + t5477;
t5656 = koppelP(4,3);
t5662 = koppelP(4,2);
t5668 = koppelP(4,1);
t5733 = -t4625 * t5662 + t4628 * t5668;
t4303 = t4626 * t5656 + t4629 * t5733;
t4473 = t4625 * t5668 + t4628 * t5662;
t5382 = t4627 * t4473;
t5679 = -t4626 * t5733 + t4629 * t5656;
t4152 = t4630 * t5679 + t5382;
t5476 = t4152 * t4692;
t5771 = -t4303 * t5377 + t5476;
t5657 = koppelP(3,3);
t5663 = koppelP(3,2);
t5669 = koppelP(3,1);
t5732 = -t4625 * t5663 + t4628 * t5669;
t4304 = t4626 * t5657 + t4629 * t5732;
t4474 = t4625 * t5669 + t4628 * t5663;
t5381 = t4627 * t4474;
t5678 = -t4626 * t5732 + t4629 * t5657;
t4154 = t4630 * t5678 + t5381;
t5475 = t4154 * t4692;
t5770 = -t4304 * t5377 + t5475;
t5658 = koppelP(2,3);
t5664 = koppelP(2,2);
t5670 = koppelP(2,1);
t5731 = -t4625 * t5664 + t4628 * t5670;
t4305 = t4626 * t5658 + t4629 * t5731;
t4475 = t4625 * t5670 + t4628 * t5664;
t5380 = t4627 * t4475;
t5677 = -t4626 * t5731 + t4629 * t5658;
t4156 = t4630 * t5677 + t5380;
t5474 = t4156 * t4692;
t5769 = -t4305 * t5377 + t5474;
t5659 = koppelP(1,3);
t5665 = koppelP(1,2);
t5671 = koppelP(1,1);
t5730 = -t4625 * t5665 + t4628 * t5671;
t4306 = t4626 * t5659 + t4629 * t5730;
t4476 = t4625 * t5671 + t4628 * t5665;
t5379 = t4627 * t4476;
t5676 = -t4626 * t5730 + t4629 * t5659;
t4158 = t4630 * t5676 + t5379;
t5473 = t4158 * t4692;
t5768 = -t4306 * t5377 + t5473;
t4701 = rSges(4,2);
t4702 = rSges(4,1);
t5584 = m(4) * t4702;
t4952 = (t4701 * t5584 - Icges(4,4));
t5763 = 2 * t4952;
t4700 = rSges(4,3);
t4566 = t4700 * t5584 - Icges(4,5);
t5416 = t4566 * t4629;
t4435 = t4625 * t5416;
t4596 = t4628 ^ 2;
t5648 = 0.2e1 * t4596;
t5210 = t4952 * t5648;
t5390 = t4626 * t4952;
t4565 = m(4) * t4700 * t4701 - Icges(4,6);
t5418 = t4565 * t4629;
t4655 = t4701 ^ 2;
t4656 = t4702 ^ 2;
t5683 = (-t4655 + t4656) * m(4) + Icges(4,2) - Icges(4,1);
t5430 = t5683 * t4625;
t5743 = t4628 * (-t4626 * t5430 + t5418);
t4071 = -t4626 * t5210 + t4435 + t5390 + t5743;
t4598 = t4630 ^ 2;
t4597 = t4629 ^ 2;
t5211 = 0.2e1 * t5416;
t5011 = t4626 * t5211;
t5415 = t4952 * t4625;
t5431 = t5683 * t4596;
t5647 = 0.2e1 * t4597;
t5639 = t5647 - 0.4e1;
t5420 = t4565 * t4625;
t4654 = t4700 ^ 2;
t5692 = (-t4654 + t4655) * m(4) + Icges(4,3) - Icges(4,2);
t5388 = t4626 * t4629;
t5766 = -0.2e1 * t5388;
t5699 = t5692 * t4597 + t5420 * t5766;
t5764 = (-t5639 * t5415 + t5011) * t4628 + (t4597 - 0.2e1) * t5431 + t5683 + t5699;
t5767 = t4071 * t5774 - t5764 * t4598;
t5395 = t4625 * t4628;
t4797 = t5395 * t5763 - t5431;
t4650 = cos(pkin(5));
t4635 = t4650 ^ 2;
t5638 = t4635 - 0.1e1;
t4649 = cos(pkin(6));
t4595 = t4649 * pkin(9);
t4581 = t4595 + pkin(8);
t4670 = cos(qJ(2,6));
t5409 = t4581 * t4670;
t4672 = cos(qJ(2,5));
t5408 = t4581 * t4672;
t4674 = cos(qJ(2,4));
t5407 = t4581 * t4674;
t4682 = cos(qJ(2,3));
t5403 = t4581 * t4682;
t4684 = cos(qJ(2,2));
t5402 = t4581 * t4684;
t4686 = cos(qJ(2,1));
t5401 = t4581 * t4686;
t4575 = t4626 * t4692;
t4690 = xDP(6);
t5691 = t4575 + t4690;
t5720 = t4625 * t5691;
t4818 = t5683 * t5720;
t5297 = t4691 * t4566;
t5394 = t4625 * t4690;
t4287 = -t5394 * t5683 + 0.2e1 * t5297;
t4996 = t4287 * t4597 - t5297;
t5765 = 0.2e1 * t4818 + t4996;
t4634 = t4650 * t4635;
t5645 = 0.2e1 * t4650;
t5269 = -0.2e1 * t4634 + t5645;
t5391 = t4625 * t4702;
t4469 = t4628 * t4701 + t5391;
t5375 = t4628 * t4702;
t4468 = t4625 * t4701 - t5375;
t5371 = t4629 * t4700;
t5682 = t4468 * t4626 + t5371;
t4086 = -t4469 * t4630 + t4627 * t5682;
t5299 = t4690 * t4952;
t5762 = -0.2e1 * t5299;
t5373 = t4629 * t4690;
t4124 = t4471 * t5373 - t4691 * t5681;
t5761 = t4124 * t4627;
t5760 = t4124 * t4630;
t4125 = t4472 * t5373 - t4691 * t5680;
t5759 = t4125 * t4627;
t5758 = t4125 * t4630;
t4126 = t4473 * t5373 - t4691 * t5679;
t5757 = t4126 * t4627;
t5756 = t4126 * t4630;
t4127 = t4474 * t5373 - t4691 * t5678;
t5755 = t4127 * t4627;
t5754 = t4127 * t4630;
t4128 = t4475 * t5373 - t4691 * t5677;
t5753 = t4128 * t4627;
t5752 = t4128 * t4630;
t4129 = t4476 * t5373 - t4691 * t5676;
t5751 = t4129 * t4627;
t5750 = t4129 * t4630;
t4703 = rSges(3,2) ^ 2;
t4704 = rSges(3,1) ^ 2;
t4535 = m(3) * (-t4703 + t4704) - Icges(3,1) + Icges(3,2);
t4669 = cos(qJ(3,6));
t4636 = t4669 ^ 2;
t5749 = t4535 * t4636;
t4671 = cos(qJ(3,5));
t4637 = t4671 ^ 2;
t5748 = t4535 * t4637;
t4673 = cos(qJ(3,4));
t4638 = t4673 ^ 2;
t5747 = t4535 * t4638;
t4681 = cos(qJ(3,3));
t4640 = t4681 ^ 2;
t5746 = t4535 * t4640;
t4683 = cos(qJ(3,2));
t4641 = t4683 ^ 2;
t5745 = t4535 * t4641;
t4685 = cos(qJ(3,1));
t4642 = t4685 ^ 2;
t5744 = t4535 * t4642;
t4663 = sin(qJ(3,6));
t4645 = sin(pkin(6));
t4594 = t4645 * pkin(9);
t5637 = 0.2e1 * t4635 - 0.2e1;
t5701 = t5637 * t4594;
t5742 = t4663 * t5701;
t4665 = sin(qJ(3,5));
t5741 = t4665 * t5701;
t4667 = sin(qJ(3,4));
t5740 = t4667 * t5701;
t4675 = sin(qJ(3,3));
t5739 = t4675 * t5701;
t4677 = sin(qJ(3,2));
t5738 = t4677 * t5701;
t4679 = sin(qJ(3,1));
t5737 = t4679 * t5701;
t5393 = t4625 * t4691;
t4461 = t4565 * t5393;
t5649 = 0.2e1 * t4461;
t4318 = t5649 - t5299;
t5736 = -t4318 * t4597 + t4461;
t5729 = t4476 * t4630 - t4627 * t5676;
t5728 = t4475 * t4630 - t4627 * t5677;
t5727 = t4474 * t4630 - t4627 * t5678;
t5726 = t4473 * t4630 - t4627 * t5679;
t5725 = t4472 * t4630 - t4627 * t5680;
t5724 = t4471 * t4630 - t4627 * t5681;
t4651 = cos(pkin(4));
t5600 = pkin(3) * t4651;
t4570 = t4645 * t5600;
t4552 = pkin(9) * t4570;
t5396 = (t4650 + 0.1e1) * (t4650 - 0.1e1);
t4838 = t4552 * t5396;
t4381 = 0.2e1 * t4838;
t5332 = t4650 * t4670;
t5070 = t4645 * t5332;
t4970 = pkin(9) * t5070;
t4904 = pkin(3) * t4970;
t4708 = pkin(3) ^ 2;
t4706 = pkin(9) ^ 2;
t4633 = t4649 ^ 2;
t5366 = t4633 * t4706;
t5009 = -t4706 + t5366;
t4550 = t4708 + t5009;
t4664 = sin(qJ(2,6));
t5310 = t4664 * t4550;
t4646 = sin(pkin(5));
t4647 = sin(pkin(4));
t5351 = t4646 * t4647;
t5125 = (t4904 - t5310 / 0.2e1) * t5351;
t4101 = (t4381 - 0.2e1 * t5125) * t4636;
t5587 = pkin(9) * t4633;
t5153 = pkin(9) - t5587;
t5363 = t4645 * t4663;
t4478 = pkin(2) * t5363 + t5153;
t5348 = t4646 * t4664;
t4350 = t4478 * t5348;
t5168 = t4646 * t4594;
t4971 = t4650 * t5168;
t4882 = t4581 * t4971;
t4357 = t4663 * t4882;
t4615 = pkin(2) * t4663;
t4524 = t4615 + t4594;
t5350 = t4646 * t4650;
t4571 = pkin(3) * t5350;
t5150 = t4581 * t5638;
t4735 = (t4663 * t5150 + t4571) * t4670;
t5169 = t4635 * t4594;
t5585 = pkin(9) * t4647;
t5049 = (t4645 * t4735 + t4350) * t5585 + t4101 + (t4357 + (t4524 - t5169) * pkin(3)) * t4651;
t5331 = t4650 * t4672;
t5069 = t4645 * t5331;
t4969 = pkin(9) * t5069;
t4903 = pkin(3) * t4969;
t4666 = sin(qJ(2,5));
t5308 = t4666 * t4550;
t5124 = (t4903 - t5308 / 0.2e1) * t5351;
t4102 = (t4381 - 0.2e1 * t5124) * t4637;
t5361 = t4645 * t4665;
t4479 = pkin(2) * t5361 + t5153;
t5347 = t4646 * t4666;
t4351 = t4479 * t5347;
t4358 = t4665 * t4882;
t4616 = pkin(2) * t4665;
t4525 = t4616 + t4594;
t4734 = (t4665 * t5150 + t4571) * t4672;
t5048 = (t4645 * t4734 + t4351) * t5585 + t4102 + (t4358 + (t4525 - t5169) * pkin(3)) * t4651;
t5330 = t4650 * t4674;
t5068 = t4645 * t5330;
t4968 = pkin(9) * t5068;
t4902 = pkin(3) * t4968;
t4668 = sin(qJ(2,4));
t5306 = t4668 * t4550;
t5123 = (t4902 - t5306 / 0.2e1) * t5351;
t4103 = (t4381 - 0.2e1 * t5123) * t4638;
t5359 = t4645 * t4667;
t4480 = pkin(2) * t5359 + t5153;
t5346 = t4646 * t4668;
t4352 = t4480 * t5346;
t4359 = t4667 * t4882;
t4617 = pkin(2) * t4667;
t4526 = t4617 + t4594;
t4733 = (t4667 * t5150 + t4571) * t4674;
t5047 = (t4645 * t4733 + t4352) * t5585 + t4103 + (t4359 + (t4526 - t5169) * pkin(3)) * t4651;
t5326 = t4650 * t4682;
t5067 = t4645 * t5326;
t4967 = pkin(9) * t5067;
t4901 = pkin(3) * t4967;
t4676 = sin(qJ(2,3));
t5304 = t4676 * t4550;
t5122 = (t4901 - t5304 / 0.2e1) * t5351;
t4108 = (t4381 - 0.2e1 * t5122) * t4640;
t5357 = t4645 * t4675;
t4481 = pkin(2) * t5357 + t5153;
t5345 = t4646 * t4676;
t4354 = t4481 * t5345;
t4360 = t4675 * t4882;
t4622 = pkin(2) * t4675;
t4530 = t4622 + t4594;
t4732 = (t4675 * t5150 + t4571) * t4682;
t5046 = (t4645 * t4732 + t4354) * t5585 + t4108 + (t4360 + (t4530 - t5169) * pkin(3)) * t4651;
t5325 = t4650 * t4684;
t5066 = t4645 * t5325;
t4966 = pkin(9) * t5066;
t4900 = pkin(3) * t4966;
t4678 = sin(qJ(2,2));
t5302 = t4678 * t4550;
t5121 = (t4900 - t5302 / 0.2e1) * t5351;
t4109 = (t4381 - 0.2e1 * t5121) * t4641;
t5355 = t4645 * t4677;
t4482 = pkin(2) * t5355 + t5153;
t5344 = t4646 * t4678;
t4355 = t4482 * t5344;
t4361 = t4677 * t4882;
t4623 = pkin(2) * t4677;
t4531 = t4623 + t4594;
t4731 = (t4677 * t5150 + t4571) * t4684;
t5045 = (t4645 * t4731 + t4355) * t5585 + t4109 + (t4361 + (t4531 - t5169) * pkin(3)) * t4651;
t5324 = t4650 * t4686;
t5065 = t4645 * t5324;
t4965 = pkin(9) * t5065;
t4899 = pkin(3) * t4965;
t4680 = sin(qJ(2,1));
t5300 = t4680 * t4550;
t5120 = (t4899 - t5300 / 0.2e1) * t5351;
t4110 = (t4381 - 0.2e1 * t5120) * t4642;
t5353 = t4645 * t4679;
t4483 = pkin(2) * t5353 + t5153;
t5343 = t4646 * t4680;
t4356 = t4483 * t5343;
t4362 = t4679 * t4882;
t4624 = pkin(2) * t4679;
t4532 = t4624 + t4594;
t4730 = (t4679 * t5150 + t4571) * t4686;
t5044 = (t4645 * t4730 + t4356) * t5585 + t4110 + (t4362 + (t4532 - t5169) * pkin(3)) * t4651;
t4695 = pkin(2) * m(3);
t5293 = rSges(3,1) * t4695;
t5050 = -t5293 / 0.2e1;
t5723 = t5050 / 0.2e1;
t4687 = pkin(8) + rSges(3,3);
t5623 = m(3) * t4687;
t4572 = rSges(3,2) * t5623 - Icges(3,6);
t5414 = t4572 * t4646;
t5722 = t5414 / 0.2e1;
t4470 = t5692 * t4691;
t5057 = t4566 * t5394;
t4288 = t4470 + t5057;
t5056 = t4952 * t5393;
t5417 = t4565 * t4690;
t4319 = -0.2e1 * t5056 + t5417;
t4072 = -t4319 * t4628 - t4691 * t5431 - t4288;
t5721 = t4072 * t4630;
t5076 = t4642 * t5396;
t5713 = t4647 * (0.2e1 * t5076 - t5638);
t5077 = t4641 * t5396;
t5712 = t4647 * (0.2e1 * t5077 - t5638);
t5078 = t4640 * t5396;
t5711 = t4647 * (0.2e1 * t5078 - t5638);
t5079 = t4638 * t5396;
t5710 = t4647 * (0.2e1 * t5079 - t5638);
t5080 = t4637 * t5396;
t5709 = t4647 * (0.2e1 * t5080 - t5638);
t5081 = t4636 * t5396;
t5708 = t4647 * (0.2e1 * t5081 - t5638);
t5707 = t5350 * (0.2e1 * t4642 - 0.1e1);
t5706 = t5350 * (0.2e1 * t4641 - 0.1e1);
t5705 = t5350 * (0.2e1 * t4640 - 0.1e1);
t5704 = t5350 * (0.2e1 * t4638 - 0.1e1);
t5703 = t5350 * (0.2e1 * t4637 - 0.1e1);
t5702 = t5350 * (0.2e1 * t4636 - 0.1e1);
t4981 = t4635 * t4570;
t5672 = 0.2e1 * pkin(9);
t5272 = t4981 * t5672 - 0.2e1 * t4552;
t4087 = ((-0.2e1 * t4904 + t5310) * t5351 + t5272) * t4636;
t5167 = t4647 * t4594;
t4906 = 0.2e1 * t4646 * t5167;
t4875 = pkin(3) * t4906;
t4455 = t4664 * t4875;
t4796 = pkin(9) * (t4570 - t4981);
t5091 = t4550 * t5332;
t4934 = t4663 * t5091;
t4853 = t4646 * t4934;
t4477 = t4581 * t4571;
t4590 = pkin(2) * t4594;
t5029 = t4651 * t4590;
t4874 = t4651 * t4477 - t5029;
t5397 = (t4649 + 0.1e1) * (t4649 - 0.1e1);
t5170 = pkin(9) * t5397;
t4978 = t4646 * t5170;
t4881 = t4664 * t4978;
t4485 = t4651 * t4550;
t4886 = t5638 * t4485;
t4385 = pkin(2) * t5348 - t5409;
t4892 = t4635 * t5409 + t4385;
t4589 = pkin(2) * t5600;
t5273 = t4651 * t4882 + t4589;
t3928 = 0.1e1 / (t4087 + ((t4455 - t4886) * t4663 + t4874) * t4669 + t5273 * t4663 + t4796 + ((pkin(3) * t4892 + t4853) * t4669 + (-t4881 + (t4571 * t4670 + t4663 * t4892) * t4645) * pkin(9)) * t4647);
t4657 = legFrame(6,3);
t4599 = sin(t4657);
t4605 = cos(t4657);
t4644 = sin(pkin(10));
t4648 = cos(pkin(10));
t4391 = t4599 * t4648 + t4605 * t4644;
t4397 = -t4599 * t4644 + t4605 * t4648;
t5323 = t4651 * t4664;
t4170 = -t4391 * t5323 + t4397 * t4670;
t5320 = t4651 * t4670;
t4816 = (t4391 * t5320 + t4397 * t4664) * t4650 - t4391 * t5351;
t3967 = (pkin(3) * t4816 - t4170 * t4594) * t4669 + t4663 * (pkin(3) * t4170 + t4594 * t4816);
t4171 = t4391 * t4670 + t4397 * t5323;
t4815 = (-t4391 * t4664 + t4397 * t5320) * t4650 - t4397 * t5351;
t3968 = (pkin(3) * t4815 + t4171 * t4594) * t4669 + t4663 * (-pkin(3) * t4171 + t4594 * t4815);
t4694 = xDP(1);
t3980 = t4694 + (t4148 * t4630 - t4627 * t5724) * t4691 + (-t4148 * t4627 - t4630 * t5724) * t5373;
t4693 = xDP(2);
t5374 = t4629 * t4630;
t3989 = t4693 + (-t4148 * t4626 + t4301 * t5374) * t4690 - t5773;
t3822 = (t3967 * t3989 + t3968 * t3980) * t3928;
t4364 = t4630 * t5373 + t5377;
t5368 = t4630 * t4691;
t4365 = -t4627 * t5373 + t5368;
t4007 = t4148 * t4365 - t4364 * t5724 + t4694;
t5386 = t4626 * t4690;
t4507 = t4692 + t5386;
t4052 = -t4148 * t4507 + t4301 * t4364 + t4693;
t3837 = (t3967 * t4052 + t3968 * t4007) * t3928;
t4980 = t4581 * t5168;
t3828 = t3837 * t4980;
t5151 = t4550 * t5638;
t4948 = t4663 * t5151;
t5270 = t4590 - t4477;
t4130 = (-t4948 - t5270) * t4651;
t5603 = pkin(3) * t4581;
t5037 = t5638 * t5603;
t5098 = t4550 * t5350;
t5166 = pkin(9) * t5363;
t4537 = pkin(2) + 0.2e1 * t5166;
t5116 = t4537 * t5348;
t3961 = 0.1e1 / ((t4130 + t4647 * ((t4663 * t5098 + t5037) * t4670 + pkin(3) * t5116)) * t4669 + t5049);
t5335 = t4650 * t4663;
t5413 = t4581 * t4646;
t4378 = pkin(3) * t5335 - t5413;
t4538 = pkin(2) + t5166;
t4246 = t4378 * t4670 + t4538 * t4664;
t5599 = pkin(3) * t4664;
t4444 = t4970 - t5599;
t5362 = t4645 * t4664;
t5165 = pkin(9) * t5362;
t5456 = (pkin(3) * t4670 + t4650 * t5165) * t4651;
t5463 = (-t4378 * t4664 + t4538 * t4670) * t4651;
t3995 = (-t4391 * t5456 + t4397 * t4444) * t4669 - t4391 * t5463 - t4397 * t4246;
t3998 = (-t4391 * t4444 - t4397 * t5456) * t4669 - t4397 * t5463 + t4391 * t4246;
t3846 = (t3980 * t3998 + t3989 * t3995) * t3961;
t3879 = (t3995 * t4052 + t3998 * t4007) * t3961;
t4080 = t4647 * (t4853 + (t4670 * t5150 + t5116) * pkin(3));
t4551 = -t4708 + t5009;
t4553 = pkin(2) * t5166;
t5178 = pkin(3) * t5413;
t4753 = ((-t4551 + t4553) * t4650 - t5178 * t4663) * t3837;
t5082 = t4706 * t5397;
t4794 = (t4635 * t5082 - t4708) * t4651;
t4795 = -t4635 * t5009 + t4708;
t4905 = t4594 - t5169;
t4916 = t4650 * t5082;
t5083 = t4581 * t5396;
t4925 = t4670 * t5083;
t4928 = t4664 * t5083;
t4935 = t4485 * t5396;
t5028 = pkin(3) * t5165;
t4958 = 0.2e1 * t5028;
t4977 = t4670 * t5170;
t5259 = pkin(3) * t4594;
t5025 = t4670 * t5259;
t5184 = t4537 * t5599;
t5209 = 0.2e1 * t4663 * t4669;
t5615 = pkin(3) * t3837;
t5262 = pkin(2) * t5615;
t5311 = t4663 * t4670;
t5336 = t4650 * t4651;
t5342 = t4647 * t4670;
t5427 = t4550 * t4670;
t5442 = t4478 * t4664;
t4486 = t4663 * t4550;
t5698 = t5638 * t4486;
t5469 = (t5270 + t5698) * t4651;
t5494 = (-t4935 + (t4958 + t5091) * t5351) * t4636;
t5575 = t3879 * t4551;
t5622 = pkin(2) * t4650;
t5653 = 0.2e1 * t3837;
t3606 = ((((t3837 * t4958 + t3879 * t5427) * t4650 + t3879 * t4958 + t3837 * t5427) * t5351 - t3879 * t4935) * t4636 + (((t4670 * t5262 + (-(t3837 * t5310 - 0.2e1 * t3879 * t5025) * t4650 + t5025 * t5653 - t3879 * t5310) * t4663) * t4646 - t4928 * t5615) * t4647 - (t3828 + pkin(3) * (t3837 * t5622 + t3879 * t5742)) * t4651) * t4669 + ((-pkin(3) * t5362 - t4650 * t4977) * t4646 * t3879 + (-t4646 * t4977 + ((pkin(2) * t5311 - t4650 * t5599) * t4646 - t4663 * t4928) * t4645) * t3837) * t5585 - (t3879 * t4795 + t4753) * t4651) / (t4101 + (((t4934 + t5184) * t4646 + pkin(3) * t4925) * t4647 - t5469) * t4669 + ((pkin(3) * t5070 + t5442) * t4646 + t4925 * t5363) * t5585 + (t4357 + pkin(3) * (t4615 + t4905)) * t4651) * t3822 + ((-t4646 * t5342 + t5336) * t5575 + (t5494 + (-t4838 + t5125) * t5209 - (t4670 * t4916 + t5028) * t5351 + t4794) * t3837) / ((t4080 - t5469) * t4669 + t5049) * t3846;
t4499 = t4581 * t5600;
t5063 = t4647 * t5311;
t4289 = t4550 * t5063 + t4499;
t4239 = t4289 * t5350;
t4458 = t4651 * t4486;
t5176 = pkin(3) * t5342;
t4964 = t4581 * t5176;
t4259 = (-t4458 + t4964) * t4635;
t4824 = t4259 + t4458 - t5029;
t4831 = t4645 * (-pkin(8) * pkin(9) - t4649 * t4706);
t4298 = (t4581 * t5063 - t5600) * t5169;
t5412 = t4581 * t4663;
t4343 = t4651 * t5412 + t5176;
t4837 = t4343 * t4971 + t4589 * t4663 + t4087 + t4298;
t5596 = pkin(3) * t4669;
t3934 = 0.1e1 / ((t4239 + t4824) * t4669 + t4552 + (pkin(9) * t4350 + t4831 * t5311 + (t5116 - t5409) * t5596) * t4647 + t4837);
t4224 = pkin(2) * t5098 - t5603 * t5701;
t4495 = pkin(2) * t5170;
t4311 = t4551 * t5363 + t4495;
t5041 = -t5366 / 0.2e1 + t4706 / 0.2e1 + t4708 / 0.2e1;
t4366 = t4553 + t5041;
t4518 = pkin(2) * t4550;
t5602 = pkin(3) * t4646;
t4840 = 0.3e1 * (t4708 / 0.3e1 + t5009) * t5396 * t5602;
t5258 = pkin(8) * t4595;
t4707 = pkin(8) ^ 2;
t5268 = pkin(2) ^ 2 + t4707;
t5042 = 0.2e1 * t5258 + t5268;
t4847 = -0.2e1 * t5366 + 0.3e1 * t4706 + t5042;
t4496 = t4706 + t5042;
t5084 = (pkin(3) + t4581) * (-pkin(3) + t4581) * t4635;
t4885 = -t4496 + t5084;
t4951 = 0.4e1 * t4634 - 0.4e1 * t4650;
t4982 = (-0.2e1 * t5258 - t4707 + t4708 + (t4633 - 0.2e1) * t4706) * t4635 * t5602;
t5010 = t5638 * (0.3e1 * t4708 + t5009);
t5039 = -0.2e1 * t4571;
t5212 = -0.2e1 * t4518 * t4646;
t5674 = -0.2e1 * pkin(2);
t5271 = pkin(2) * t5672 + t5587 * t5674;
t5421 = t4551 * t4646;
t5530 = t3934 * t4646;
t5688 = t5269 * t4550 * t4581;
t3615 = (((pkin(9) * t4311 - 0.2e1 * t4366 * t5596 - t4518 * t4636) * t5350 + (-t4669 * t4948 + (t4636 * t5637 - t5638) * t5259) * t4581) * t3822 + (t4538 + t5596) * t3846 * t5421) * t3934 * t3879 + ((((-t4982 - (0.4e1 * t4553 + t4847) * t5602 + t5688 * t4663) * t4669 + (t4669 * t4840 + t5212) * t4636) * t3822 + (-t4224 * t4636 + (t4366 * t5039 - t4581 * t5698) * t4669) * t3846) * t3934 + ((t4311 * t4650 * t3846 - t3822 * t5271) * t5530 + ((t4636 * t5010 + t4885) * t4663 * t3822 * t5530 + ((t4636 * t4951 + t5269) * t3822 - t5638 * t3846) * t3934 * t5603) * t4645) * pkin(9)) * t3837;
t3870 = t3879 * t4980;
t4839 = t4650 * t4906;
t4883 = t5150 * t4594;
t5601 = pkin(3) * t4647;
t5263 = pkin(2) * t5601;
t5036 = t4646 * t5263;
t5038 = -0.2e1 * t5169;
t5040 = -0.2e1 * t5178;
t5154 = 0.2e1 * t4590;
t5365 = t4635 * t4708;
t5621 = pkin(2) * t4669;
t5673 = 0.2e1 * pkin(2);
t3627 = (-t3837 * t4550 * t5081 + (t3828 * t5645 + t3870 + (t3879 * t5622 + (t5673 - t5742) * t3837) * pkin(3)) * t4669 - t3837 * t5084 + ((t3837 * t5040 + t3879 * t4590) * t4663 - t5575) * t4650 + (t3837 * t5154 - t3879 * t5178) * t4663 + t3837 * t4496) * t4651 / ((t4259 + t4239 + (t4455 + t4485) * t4663 + t4664 * t5036 - t4964) * t4669 + (-t4647 * t4881 + t4570 + (t4385 * t4647 * t4663 - t4651 * t5621) * t4645) * pkin(9) + t4837) * t3822 + ((((t3870 + t5262) * t4650 + t3828) * t4669 + t4753) * t4651 + (t5494 + (t4647 * ((-t4486 + t4590) * t5348 + t4670 * t4883) + ((t4663 * t5038 + t4537) * t4651 + t4839 * t5311) * pkin(3)) * t4669 + (pkin(9) * t4478 - t4477 * t4663 + t5365) * t4651 - (t4524 * t5348 + t4735) * t5601) * t3879) / ((t4130 + t4080) * t4669 + t5049) * t3846;
t5642 = m(3) * rSges(3,2);
t5267 = rSges(3,1) * t5642;
t4587 = -Icges(3,4) + t5267;
t4588 = 0.2e1 * t4587;
t4621 = 0.2e1 * t5293;
t4573 = rSges(3,1) * t5623 - Icges(3,5);
t4859 = (-t4572 * t4669 - t4573 * t4663) * t4646;
t4884 = -(rSges(3,1) + t4687) * (-rSges(3,1) + t4687) * t4635 + t4703 + (0.2e1 * pkin(8) + rSges(3,3)) * rSges(3,3) + t5268;
t4950 = (rSges(2,1) ^ 2 + rSges(2,2) ^ 2) * m(2) + Icges(3,1) + Icges(2,3);
t5579 = rSges(3,2) * t5674;
t5581 = Icges(3,3) - Icges(3,1);
t4039 = (t4587 * t5209 + t5581 - t5749) * t4635 + t4859 * t5645 + t5749 + (-t4588 * t4663 + t4621) * t4669 + (t4663 * t5579 + t4884) * m(3) + t4950;
t4618 = t4703 + t4704;
t4898 = rSges(3,1) * t4669 - rSges(3,2) * t4663;
t5580 = Icges(3,3) * t4650;
t5624 = m(3) * t4650;
t4114 = t4859 + t5580 + (pkin(2) * t4898 + t4618) * t5624;
t4792 = -t5622 * t5642 / 0.4e1 - t4573 * t4646 / 0.4e1;
t5232 = -t5642 / 0.2e1;
t4793 = -t4573 * t5350 / 0.2e1 + pkin(2) * t5232;
t4915 = t4587 * t5081;
t5640 = t4635 / 0.2e1;
t4949 = t4535 * (t5640 - 0.1e1 / 0.2e1);
t5052 = t5414 / 0.4e1;
t4505 = m(2) * rSges(2,2) - t4646 * t5623;
t4519 = rSges(3,1) * t4663 + rSges(3,2) * t4669;
t4586 = m(2) * rSges(2,1) + t4695;
t5487 = ((-t4519 * t5624 - t4505) * t4664 + t4670 * (m(3) * t4898 + t4586)) * t4647;
t5687 = (-t4635 / 0.2e1 + 0.1e1 / 0.2e1) * t4587;
t5008 = -t3606 * t4039 - t3615 * t5487 - t3627 * t4114 + 0.4e1 * ((t5052 * t4663 + t4792 * t4669 + t5335 * t5723) * t3879 + (t4915 + (t4663 * t4949 + t4793) * t4669 + t5335 * t5722 + t4663 * t5050 + t5687) * t3837) * t3879;
t4088 = ((-0.2e1 * t4903 + t5308) * t5351 + t5272) * t4637;
t4456 = t4666 * t4875;
t5090 = t4550 * t5331;
t4933 = t4665 * t5090;
t4852 = t4646 * t4933;
t4880 = t4666 * t4978;
t4386 = pkin(2) * t5347 - t5408;
t4891 = t4635 * t5408 + t4386;
t3929 = 0.1e1 / (t4088 + ((t4456 - t4886) * t4665 + t4874) * t4671 + t5273 * t4665 + t4796 + ((pkin(3) * t4891 + t4852) * t4671 + (-t4880 + (t4571 * t4672 + t4665 * t4891) * t4645) * pkin(9)) * t4647);
t4658 = legFrame(5,3);
t4600 = sin(t4658);
t4606 = cos(t4658);
t4392 = t4600 * t4648 + t4606 * t4644;
t4398 = -t4600 * t4644 + t4606 * t4648;
t5322 = t4651 * t4666;
t4172 = -t4392 * t5322 + t4398 * t4672;
t5319 = t4651 * t4672;
t4814 = (t4392 * t5319 + t4398 * t4666) * t4650 - t4392 * t5351;
t3969 = (pkin(3) * t4814 - t4172 * t4594) * t4671 + t4665 * (pkin(3) * t4172 + t4594 * t4814);
t4173 = t4392 * t4672 + t4398 * t5322;
t4813 = (-t4392 * t4666 + t4398 * t5319) * t4650 - t4398 * t5351;
t3970 = (pkin(3) * t4813 + t4173 * t4594) * t4671 + t4665 * (-pkin(3) * t4173 + t4594 * t4813);
t3981 = t4694 + (t4150 * t4630 - t4627 * t5725) * t4691 + (-t4150 * t4627 - t4630 * t5725) * t5373;
t3990 = t4693 + (-t4150 * t4626 + t4302 * t5374) * t4690 - t5772;
t3823 = (t3969 * t3990 + t3970 * t3981) * t3929;
t4008 = t4150 * t4365 - t4364 * t5725 + t4694;
t4053 = -t4150 * t4507 + t4302 * t4364 + t4693;
t3838 = (t3969 * t4053 + t3970 * t4008) * t3929;
t3829 = t3838 * t4980;
t4947 = t4665 * t5151;
t4131 = (-t4947 - t5270) * t4651;
t5164 = pkin(9) * t5361;
t4539 = pkin(2) + 0.2e1 * t5164;
t5115 = t4539 * t5347;
t3962 = 0.1e1 / ((t4131 + t4647 * ((t4665 * t5098 + t5037) * t4672 + pkin(3) * t5115)) * t4671 + t5048);
t5334 = t4650 * t4665;
t4379 = pkin(3) * t5334 - t5413;
t4540 = pkin(2) + t5164;
t4248 = t4379 * t4672 + t4540 * t4666;
t5598 = pkin(3) * t4666;
t4445 = t4969 - t5598;
t5360 = t4645 * t4666;
t5163 = pkin(9) * t5360;
t5455 = (pkin(3) * t4672 + t4650 * t5163) * t4651;
t5462 = (-t4379 * t4666 + t4540 * t4672) * t4651;
t3996 = (-t4392 * t5455 + t4398 * t4445) * t4671 - t4392 * t5462 - t4398 * t4248;
t3999 = (-t4392 * t4445 - t4398 * t5455) * t4671 - t4398 * t5462 + t4392 * t4248;
t3847 = (t3981 * t3999 + t3990 * t3996) * t3962;
t3880 = (t3996 * t4053 + t3999 * t4008) * t3962;
t4081 = t4647 * (t4852 + (t4672 * t5150 + t5115) * pkin(3));
t4554 = pkin(2) * t5164;
t4752 = ((-t4551 + t4554) * t4650 - t5178 * t4665) * t3838;
t4924 = t4672 * t5083;
t4927 = t4666 * t5083;
t5027 = pkin(3) * t5163;
t4957 = 0.2e1 * t5027;
t4976 = t4672 * t5170;
t5024 = t4672 * t5259;
t5183 = t4539 * t5598;
t5208 = 0.2e1 * t4665 * t4671;
t5614 = pkin(3) * t3838;
t5261 = pkin(2) * t5614;
t5309 = t4665 * t4672;
t5341 = t4647 * t4672;
t5426 = t4550 * t4672;
t5440 = t4479 * t4666;
t4487 = t4665 * t4550;
t5697 = t5638 * t4487;
t5468 = (t5270 + t5697) * t4651;
t5493 = (-t4935 + (t4957 + t5090) * t5351) * t4637;
t5574 = t3880 * t4551;
t5652 = 0.2e1 * t3838;
t3607 = ((((t3838 * t4957 + t3880 * t5426) * t4650 + t3880 * t4957 + t3838 * t5426) * t5351 - t3880 * t4935) * t4637 + (((t4672 * t5261 + (-(t3838 * t5308 - 0.2e1 * t3880 * t5024) * t4650 + t5024 * t5652 - t3880 * t5308) * t4665) * t4646 - t4927 * t5614) * t4647 - (t3829 + pkin(3) * (t3838 * t5622 + t3880 * t5741)) * t4651) * t4671 + ((-pkin(3) * t5360 - t4650 * t4976) * t4646 * t3880 + (-t4646 * t4976 + ((pkin(2) * t5309 - t4650 * t5598) * t4646 - t4665 * t4927) * t4645) * t3838) * t5585 - (t3880 * t4795 + t4752) * t4651) / (t4102 + (((t4933 + t5183) * t4646 + pkin(3) * t4924) * t4647 - t5468) * t4671 + ((pkin(3) * t5069 + t5440) * t4646 + t4924 * t5361) * t5585 + (t4358 + pkin(3) * (t4616 + t4905)) * t4651) * t3823 + ((-t4646 * t5341 + t5336) * t5574 + (t5493 + (-t4838 + t5124) * t5208 - (t4672 * t4916 + t5027) * t5351 + t4794) * t3838) / ((t4081 - t5468) * t4671 + t5048) * t3847;
t5062 = t4647 * t5309;
t4290 = t4550 * t5062 + t4499;
t4240 = t4290 * t5350;
t4459 = t4651 * t4487;
t5175 = pkin(3) * t5341;
t4963 = t4581 * t5175;
t4260 = (-t4459 + t4963) * t4635;
t4823 = t4260 + t4459 - t5029;
t4299 = (t4581 * t5062 - t5600) * t5169;
t5411 = t4581 * t4665;
t4344 = t4651 * t5411 + t5175;
t4836 = t4344 * t4971 + t4589 * t4665 + t4088 + t4299;
t5595 = pkin(3) * t4671;
t3935 = 0.1e1 / ((t4240 + t4823) * t4671 + t4552 + (pkin(9) * t4351 + t4831 * t5309 + (t5115 - t5408) * t5595) * t4647 + t4836);
t4312 = t4551 * t5361 + t4495;
t4367 = t4554 + t5041;
t5529 = t3935 * t4646;
t3616 = (((pkin(9) * t4312 - 0.2e1 * t4367 * t5595 - t4518 * t4637) * t5350 + (-t4671 * t4947 + (t4637 * t5637 - t5638) * t5259) * t4581) * t3823 + (t4540 + t5595) * t3847 * t5421) * t3935 * t3880 + ((((-t4982 - (0.4e1 * t4554 + t4847) * t5602 + t5688 * t4665) * t4671 + (t4671 * t4840 + t5212) * t4637) * t3823 + (-t4224 * t4637 + (t4367 * t5039 - t4581 * t5697) * t4671) * t3847) * t3935 + ((t4312 * t4650 * t3847 - t3823 * t5271) * t5529 + ((t4637 * t5010 + t4885) * t4665 * t3823 * t5529 + ((t4637 * t4951 + t5269) * t3823 - t5638 * t3847) * t3935 * t5603) * t4645) * pkin(9)) * t3838;
t3871 = t3880 * t4980;
t5620 = pkin(2) * t4671;
t3628 = (-t3838 * t4550 * t5080 + (t3829 * t5645 + t3871 + (t3880 * t5622 + (t5673 - t5741) * t3838) * pkin(3)) * t4671 - t3838 * t5084 + ((t3838 * t5040 + t3880 * t4590) * t4665 - t5574) * t4650 + (t3838 * t5154 - t3880 * t5178) * t4665 + t3838 * t4496) * t4651 / ((t4260 + t4240 + (t4456 + t4485) * t4665 + t4666 * t5036 - t4963) * t4671 + (-t4647 * t4880 + t4570 + (t4386 * t4647 * t4665 - t4651 * t5620) * t4645) * pkin(9) + t4836) * t3823 + ((((t3871 + t5261) * t4650 + t3829) * t4671 + t4752) * t4651 + (t5493 + (t4647 * ((-t4487 + t4590) * t5347 + t4672 * t4883) + ((t4665 * t5038 + t4539) * t4651 + t4839 * t5309) * pkin(3)) * t4671 + (pkin(9) * t4479 - t4477 * t4665 + t5365) * t4651 - (t4525 * t5347 + t4734) * t5601) * t3880) / ((t4131 + t4081) * t4671 + t5048) * t3847;
t4858 = (-t4572 * t4671 - t4573 * t4665) * t4646;
t4040 = (t4587 * t5208 + t5581 - t5748) * t4635 + t4858 * t5645 + t5748 + (-t4588 * t4665 + t4621) * t4671 + (t4665 * t5579 + t4884) * m(3) + t4950;
t4897 = rSges(3,1) * t4671 - rSges(3,2) * t4665;
t4115 = t4858 + t5580 + (pkin(2) * t4897 + t4618) * t5624;
t4914 = t4587 * t5080;
t4520 = rSges(3,1) * t4665 + rSges(3,2) * t4671;
t5486 = ((-t4520 * t5624 - t4505) * t4666 + t4672 * (m(3) * t4897 + t4586)) * t4647;
t5007 = -t3607 * t4040 - t3616 * t5486 - t3628 * t4115 + 0.4e1 * ((t5052 * t4665 + t4792 * t4671 + t5334 * t5723) * t3880 + (t4914 + (t4665 * t4949 + t4793) * t4671 + t5334 * t5722 + t4665 * t5050 + t5687) * t3838) * t3880;
t4089 = ((-0.2e1 * t4902 + t5306) * t5351 + t5272) * t4638;
t4457 = t4668 * t4875;
t5089 = t4550 * t5330;
t4932 = t4667 * t5089;
t4851 = t4646 * t4932;
t4879 = t4668 * t4978;
t4387 = pkin(2) * t5346 - t5407;
t4890 = t4635 * t5407 + t4387;
t3930 = 0.1e1 / (t4089 + ((t4457 - t4886) * t4667 + t4874) * t4673 + t5273 * t4667 + t4796 + ((pkin(3) * t4890 + t4851) * t4673 + (-t4879 + (t4571 * t4674 + t4667 * t4890) * t4645) * pkin(9)) * t4647);
t4659 = legFrame(4,3);
t4601 = sin(t4659);
t4607 = cos(t4659);
t4393 = t4601 * t4648 + t4607 * t4644;
t4399 = -t4601 * t4644 + t4607 * t4648;
t5321 = t4651 * t4668;
t4174 = -t4393 * t5321 + t4399 * t4674;
t5318 = t4651 * t4674;
t4812 = (t4393 * t5318 + t4399 * t4668) * t4650 - t4393 * t5351;
t3971 = (pkin(3) * t4812 - t4174 * t4594) * t4673 + t4667 * (pkin(3) * t4174 + t4594 * t4812);
t4175 = t4393 * t4674 + t4399 * t5321;
t4811 = (-t4393 * t4668 + t4399 * t5318) * t4650 - t4399 * t5351;
t3972 = (pkin(3) * t4811 + t4175 * t4594) * t4673 + t4667 * (-pkin(3) * t4175 + t4594 * t4811);
t3982 = t4694 + (t4152 * t4630 - t4627 * t5726) * t4691 + (-t4152 * t4627 - t4630 * t5726) * t5373;
t3991 = t4693 + (-t4152 * t4626 + t4303 * t5374) * t4690 - t5771;
t3824 = (t3971 * t3991 + t3972 * t3982) * t3930;
t4009 = t4152 * t4365 - t4364 * t5726 + t4694;
t4054 = -t4152 * t4507 + t4303 * t4364 + t4693;
t3839 = (t3971 * t4054 + t3972 * t4009) * t3930;
t3830 = t3839 * t4980;
t4946 = t4667 * t5151;
t4132 = (-t4946 - t5270) * t4651;
t5162 = pkin(9) * t5359;
t4541 = pkin(2) + 0.2e1 * t5162;
t5114 = t4541 * t5346;
t3963 = 0.1e1 / ((t4132 + t4647 * ((t4667 * t5098 + t5037) * t4674 + pkin(3) * t5114)) * t4673 + t5047);
t5333 = t4650 * t4667;
t4380 = pkin(3) * t5333 - t5413;
t4542 = pkin(2) + t5162;
t4250 = t4380 * t4674 + t4542 * t4668;
t5597 = pkin(3) * t4668;
t4446 = t4968 - t5597;
t5358 = t4645 * t4668;
t5161 = pkin(9) * t5358;
t5454 = (pkin(3) * t4674 + t4650 * t5161) * t4651;
t5461 = (-t4380 * t4668 + t4542 * t4674) * t4651;
t3997 = (-t4393 * t5454 + t4399 * t4446) * t4673 - t4393 * t5461 - t4399 * t4250;
t4000 = (-t4393 * t4446 - t4399 * t5454) * t4673 - t4399 * t5461 + t4393 * t4250;
t3848 = (t3982 * t4000 + t3991 * t3997) * t3963;
t3881 = (t3997 * t4054 + t4000 * t4009) * t3963;
t4082 = t4647 * (t4851 + (t4674 * t5150 + t5114) * pkin(3));
t4555 = pkin(2) * t5162;
t4751 = ((-t4551 + t4555) * t4650 - t5178 * t4667) * t3839;
t4923 = t4674 * t5083;
t4926 = t4668 * t5083;
t5026 = pkin(3) * t5161;
t4956 = 0.2e1 * t5026;
t4975 = t4674 * t5170;
t5023 = t4674 * t5259;
t5182 = t4541 * t5597;
t5207 = 0.2e1 * t4667 * t4673;
t5613 = pkin(3) * t3839;
t5260 = pkin(2) * t5613;
t5307 = t4667 * t4674;
t5340 = t4647 * t4674;
t5425 = t4550 * t4674;
t5438 = t4480 * t4668;
t4488 = t4667 * t4550;
t5696 = t5638 * t4488;
t5467 = (t5270 + t5696) * t4651;
t5492 = (-t4935 + (t4956 + t5089) * t5351) * t4638;
t5573 = t3881 * t4551;
t5651 = 0.2e1 * t3839;
t3608 = ((((t3839 * t4956 + t3881 * t5425) * t4650 + t3881 * t4956 + t3839 * t5425) * t5351 - t3881 * t4935) * t4638 + (((t4674 * t5260 + (-(t3839 * t5306 - 0.2e1 * t3881 * t5023) * t4650 + t5023 * t5651 - t3881 * t5306) * t4667) * t4646 - t4926 * t5613) * t4647 - (t3830 + pkin(3) * (t3839 * t5622 + t3881 * t5740)) * t4651) * t4673 + ((-pkin(3) * t5358 - t4650 * t4975) * t4646 * t3881 + (-t4646 * t4975 + ((pkin(2) * t5307 - t4650 * t5597) * t4646 - t4667 * t4926) * t4645) * t3839) * t5585 - (t3881 * t4795 + t4751) * t4651) / (t4103 + (((t4932 + t5182) * t4646 + pkin(3) * t4923) * t4647 - t5467) * t4673 + ((pkin(3) * t5068 + t5438) * t4646 + t4923 * t5359) * t5585 + (t4359 + pkin(3) * (t4617 + t4905)) * t4651) * t3824 + ((-t4646 * t5340 + t5336) * t5573 + (t5492 + (-t4838 + t5123) * t5207 - (t4674 * t4916 + t5026) * t5351 + t4794) * t3839) / ((t4082 - t5467) * t4673 + t5047) * t3848;
t5061 = t4647 * t5307;
t4291 = t4550 * t5061 + t4499;
t4241 = t4291 * t5350;
t4460 = t4651 * t4488;
t5174 = pkin(3) * t5340;
t4962 = t4581 * t5174;
t4261 = (-t4460 + t4962) * t4635;
t4822 = t4261 + t4460 - t5029;
t4300 = (t4581 * t5061 - t5600) * t5169;
t5410 = t4581 * t4667;
t4345 = t4651 * t5410 + t5174;
t4835 = t4345 * t4971 + t4589 * t4667 + t4089 + t4300;
t5594 = pkin(3) * t4673;
t3936 = 0.1e1 / ((t4241 + t4822) * t4673 + t4552 + (pkin(9) * t4352 + t4831 * t5307 + (t5114 - t5407) * t5594) * t4647 + t4835);
t4313 = t4551 * t5359 + t4495;
t4368 = t4555 + t5041;
t5528 = t3936 * t4646;
t3617 = (((pkin(9) * t4313 - 0.2e1 * t4368 * t5594 - t4518 * t4638) * t5350 + (-t4673 * t4946 + (t4638 * t5637 - t5638) * t5259) * t4581) * t3824 + (t4542 + t5594) * t3848 * t5421) * t3936 * t3881 + ((((-t4982 - (0.4e1 * t4555 + t4847) * t5602 + t5688 * t4667) * t4673 + (t4673 * t4840 + t5212) * t4638) * t3824 + (-t4224 * t4638 + (t4368 * t5039 - t4581 * t5696) * t4673) * t3848) * t3936 + ((t4313 * t4650 * t3848 - t3824 * t5271) * t5528 + ((t4638 * t5010 + t4885) * t4667 * t3824 * t5528 + ((t4638 * t4951 + t5269) * t3824 - t5638 * t3848) * t3936 * t5603) * t4645) * pkin(9)) * t3839;
t3872 = t3881 * t4980;
t5619 = pkin(2) * t4673;
t3629 = (-t3839 * t4550 * t5079 + (t3830 * t5645 + t3872 + (t3881 * t5622 + (t5673 - t5740) * t3839) * pkin(3)) * t4673 - t3839 * t5084 + ((t3839 * t5040 + t3881 * t4590) * t4667 - t5573) * t4650 + (t3839 * t5154 - t3881 * t5178) * t4667 + t3839 * t4496) * t4651 / ((t4261 + t4241 + (t4457 + t4485) * t4667 + t4668 * t5036 - t4962) * t4673 + (-t4647 * t4879 + t4570 + (t4387 * t4647 * t4667 - t4651 * t5619) * t4645) * pkin(9) + t4835) * t3824 + ((((t3872 + t5260) * t4650 + t3830) * t4673 + t4751) * t4651 + (t5492 + (t4647 * ((-t4488 + t4590) * t5346 + t4674 * t4883) + ((t4667 * t5038 + t4541) * t4651 + t4839 * t5307) * pkin(3)) * t4673 + (pkin(9) * t4480 - t4477 * t4667 + t5365) * t4651 - (t4526 * t5346 + t4733) * t5601) * t3881) / ((t4132 + t4082) * t4673 + t5047) * t3848;
t4857 = (-t4572 * t4673 - t4573 * t4667) * t4646;
t4041 = (t4587 * t5207 + t5581 - t5747) * t4635 + t4857 * t5645 + t5747 + (-t4588 * t4667 + t4621) * t4673 + (t4667 * t5579 + t4884) * m(3) + t4950;
t4896 = rSges(3,1) * t4673 - rSges(3,2) * t4667;
t4116 = t4857 + t5580 + (pkin(2) * t4896 + t4618) * t5624;
t4913 = t4587 * t5079;
t4521 = rSges(3,1) * t4667 + rSges(3,2) * t4673;
t5485 = ((-t4521 * t5624 - t4505) * t4668 + t4674 * (m(3) * t4896 + t4586)) * t4647;
t5006 = -t3608 * t4041 - t3617 * t5485 - t3629 * t4116 + 0.4e1 * ((t5052 * t4667 + t4792 * t4673 + t5333 * t5723) * t3881 + (t4913 + (t4667 * t4949 + t4793) * t4673 + t5333 * t5722 + t4667 * t5050 + t5687) * t3839) * t3881;
t3834 = t3837 ^ 2;
t4569 = m(3) * t4618 + Icges(3,3);
t4907 = t4535 * t5640 + (-t4704 / 0.2e1 + t4703 / 0.2e1) * m(3) - Icges(3,2) / 0.2e1 + Icges(3,1) / 0.2e1;
t5043 = (rSges(3,1) * t5232 + Icges(3,4) / 0.2e1) * t4635 + t5267 / 0.2e1 - Icges(3,4) / 0.2e1;
t5349 = t4646 * t4651;
t5630 = m(3) * (((-rSges(3,1) * t5332 + rSges(3,2) * t4664) * t4669 + t4663 * (rSges(3,1) * t4664 + rSges(3,2) * t5332)) * t4647 - t4898 * t5349);
t5689 = t4572 * t5350 / 0.2e1 + t5050;
t5005 = -t3606 * t4114 + t3615 * t5630 - t3627 * t4569 - 0.2e1 * t3834 * (t4793 * t4669 + t4915 + t5043 + (t4907 * t4669 + t5689) * t4663);
t3835 = t3838 ^ 2;
t5629 = m(3) * (((-rSges(3,1) * t5331 + rSges(3,2) * t4666) * t4671 + t4665 * (rSges(3,1) * t4666 + rSges(3,2) * t5331)) * t4647 - t4897 * t5349);
t5004 = -t3607 * t4115 + t3616 * t5629 - t3628 * t4569 - 0.2e1 * t3835 * (t4793 * t4671 + t4914 + t5043 + (t4907 * t4671 + t5689) * t4665);
t3836 = t3839 ^ 2;
t5628 = m(3) * (((-rSges(3,1) * t5330 + rSges(3,2) * t4668) * t4673 + t4667 * (rSges(3,1) * t4668 + rSges(3,2) * t5330)) * t4647 - t4896 * t5349);
t5003 = -t3608 * t4116 + t3617 * t5628 - t3629 * t4569 - 0.2e1 * t3836 * (t4793 * t4673 + t4913 + t5043 + (t4907 * t4673 + t5689) * t4667);
t3876 = t3879 ^ 2;
t4639 = m(1) + m(2) + m(3);
t5191 = m(3) * t5349;
t5222 = t3879 * t5653;
t5286 = t3834 + t3876;
t5292 = -t3606 * t5487 - t4639 * t3615 + t3627 * t5630 - t3876 * t4519 * t5191 + ((-t4505 * t4670 - t4586 * t4664) * t3834 + (-t4664 * t4898 * (t4650 * t5222 + t5286) - t4519 * t4670 * (t4650 * t5286 + t5222)) * m(3)) * t4647;
t3877 = t3880 ^ 2;
t5221 = t3880 * t5652;
t5285 = t3835 + t3877;
t5291 = -t3607 * t5486 - t4639 * t3616 + t3628 * t5629 - t3877 * t4520 * t5191 + ((-t4505 * t4672 - t4586 * t4666) * t3835 + (-t4666 * t4897 * (t4650 * t5221 + t5285) - t4520 * t4672 * (t4650 * t5285 + t5221)) * m(3)) * t4647;
t3878 = t3881 ^ 2;
t5220 = t3881 * t5651;
t5284 = t3836 + t3878;
t5290 = -t3608 * t5485 - t4639 * t3617 + t3629 * t5628 - t3878 * t4521 * t5191 + ((-t4505 * t4674 - t4586 * t4668) * t3836 + (-t4668 * t4896 * (t4650 * t5220 + t5284) - t4521 * t4674 * (t4650 * t5284 + t5220)) * m(3)) * t4647;
t4090 = ((-0.2e1 * t4901 + t5304) * t5351 + t5272) * t4640;
t4462 = t4676 * t4875;
t5088 = t4550 * t5326;
t4931 = t4675 * t5088;
t4850 = t4646 * t4931;
t4878 = t4676 * t4978;
t4388 = pkin(2) * t5345 - t5403;
t4889 = t4635 * t5403 + t4388;
t3931 = 0.1e1 / (t4090 + ((t4462 - t4886) * t4675 + t4874) * t4681 + t5273 * t4675 + t4796 + ((pkin(3) * t4889 + t4850) * t4681 + (-t4878 + (t4571 * t4682 + t4675 * t4889) * t4645) * pkin(9)) * t4647);
t4660 = legFrame(3,3);
t4602 = sin(t4660);
t4608 = cos(t4660);
t4394 = t4602 * t4648 + t4608 * t4644;
t4400 = -t4602 * t4644 + t4608 * t4648;
t5317 = t4651 * t4676;
t4194 = -t4394 * t5317 + t4400 * t4682;
t5314 = t4651 * t4682;
t4810 = (t4394 * t5314 + t4400 * t4676) * t4650 - t4394 * t5351;
t3973 = (pkin(3) * t4810 - t4194 * t4594) * t4681 + t4675 * (pkin(3) * t4194 + t4594 * t4810);
t4195 = t4394 * t4682 + t4400 * t5317;
t4809 = (-t4394 * t4676 + t4400 * t5314) * t4650 - t4400 * t5351;
t3974 = (pkin(3) * t4809 + t4195 * t4594) * t4681 + t4675 * (-pkin(3) * t4195 + t4594 * t4809);
t3983 = t4694 + (t4154 * t4630 - t4627 * t5727) * t4691 + (-t4154 * t4627 - t4630 * t5727) * t5373;
t3992 = t4693 + (-t4154 * t4626 + t4304 * t5374) * t4690 - t5770;
t3825 = (t3973 * t3992 + t3974 * t3983) * t3931;
t4010 = t4154 * t4365 - t4364 * t5727 + t4694;
t4055 = -t4154 * t4507 + t4304 * t4364 + t4693;
t3843 = (t3973 * t4055 + t3974 * t4010) * t3931;
t3831 = t3843 * t4980;
t4945 = t4675 * t5151;
t4133 = (-t4945 - t5270) * t4651;
t5160 = pkin(9) * t5357;
t4543 = pkin(2) + 0.2e1 * t5160;
t5113 = t4543 * t5345;
t3964 = 0.1e1 / ((t4133 + t4647 * ((t4675 * t5098 + t5037) * t4682 + pkin(3) * t5113)) * t4681 + t5046);
t5329 = t4650 * t4675;
t4382 = pkin(3) * t5329 - t5413;
t4544 = pkin(2) + t5160;
t4254 = t4382 * t4682 + t4544 * t4676;
t5593 = pkin(3) * t4676;
t4452 = t4967 - t5593;
t5356 = t4645 * t4676;
t5159 = pkin(9) * t5356;
t5453 = (pkin(3) * t4682 + t4650 * t5159) * t4651;
t5460 = (-t4382 * t4676 + t4544 * t4682) * t4651;
t4001 = (-t4394 * t5453 + t4400 * t4452) * t4681 - t4394 * t5460 - t4400 * t4254;
t4004 = (-t4394 * t4452 - t4400 * t5453) * t4681 - t4400 * t5460 + t4394 * t4254;
t3849 = (t3983 * t4004 + t3992 * t4001) * t3964;
t3885 = (t4001 * t4055 + t4004 * t4010) * t3964;
t4083 = t4647 * (t4850 + (t4682 * t5150 + t5113) * pkin(3));
t4562 = pkin(2) * t5160;
t4750 = ((-t4551 + t4562) * t4650 - t5178 * t4675) * t3843;
t4919 = t4682 * t5083;
t4922 = t4676 * t5083;
t5022 = pkin(3) * t5159;
t4955 = 0.2e1 * t5022;
t4974 = t4682 * t5170;
t4983 = 0.2e1 * t5259;
t5181 = t4543 * t5593;
t5206 = 0.2e1 * t4675 * t4681;
t5612 = pkin(3) * t3843;
t5266 = pkin(2) * t5612;
t5305 = t4675 * t4682;
t5339 = t4647 * t4682;
t5424 = t4550 * t4682;
t5436 = t4481 * t4676;
t4491 = t4675 * t4550;
t5695 = t5638 * t4491;
t5466 = (t5270 + t5695) * t4651;
t5489 = (-t4935 + (t4955 + t5088) * t5351) * t4640;
t5571 = t3885 * t4650;
t5572 = t3885 * t4551;
t5578 = t3843 * t4650;
t3609 = ((((t3843 * t4955 + t3885 * t5424) * t4650 + t3885 * t4955 + t3843 * t5424) * t5351 - t3885 * t4935) * t4640 + (((t4682 * t5266 + ((-t3885 - t5578) * t5304 + (t3843 + t5571) * t4682 * t4983) * t4675) * t4646 - t4922 * t5612) * t4647 - (t3831 + pkin(3) * (pkin(2) * t5578 + t3885 * t5739)) * t4651) * t4681 + ((-pkin(3) * t5356 - t4650 * t4974) * t4646 * t3885 + (-t4646 * t4974 + ((pkin(2) * t5305 - t4650 * t5593) * t4646 - t4675 * t4922) * t4645) * t3843) * t5585 - t4651 * (t3885 * t4795 + t4750)) / (t4108 + (((t4931 + t5181) * t4646 + pkin(3) * t4919) * t4647 - t5466) * t4681 + ((pkin(3) * t5067 + t5436) * t4646 + t4919 * t5357) * t5585 + (t4360 + pkin(3) * (t4622 + t4905)) * t4651) * t3825 + ((-t4646 * t5339 + t5336) * t5572 + (t5489 + (-t4838 + t5122) * t5206 - (t4682 * t4916 + t5022) * t5351 + t4794) * t3843) / ((t4083 - t5466) * t4681 + t5046) * t3849;
t5060 = t4647 * t5305;
t4294 = t4550 * t5060 + t4499;
t4242 = t4294 * t5350;
t4465 = t4651 * t4491;
t5173 = pkin(3) * t5339;
t4961 = t4581 * t5173;
t4262 = (-t4465 + t4961) * t4635;
t4821 = t4262 + t4465 - t5029;
t4307 = (t4581 * t5060 - t5600) * t5169;
t5406 = t4581 * t4675;
t4347 = t4651 * t5406 + t5173;
t4834 = t4347 * t4971 + t4589 * t4675 + t4090 + t4307;
t5590 = pkin(3) * t4681;
t3937 = 0.1e1 / ((t4242 + t4821) * t4681 + t4552 + (pkin(9) * t4354 + t4831 * t5305 + (t5113 - t5403) * t5590) * t4647 + t4834);
t4314 = t4551 * t5357 + t4495;
t4369 = t4562 + t5041;
t5527 = t3937 * t4646;
t3621 = (((pkin(9) * t4314 - 0.2e1 * t4369 * t5590 - t4518 * t4640) * t5350 + (-t4681 * t4945 + (t4640 * t5637 - t5638) * t5259) * t4581) * t3825 + (t4544 + t5590) * t3849 * t5421) * t3937 * t3885 + ((((-t4982 - (0.4e1 * t4562 + t4847) * t5602 + t5688 * t4675) * t4681 + (t4681 * t4840 + t5212) * t4640) * t3825 + (-t4224 * t4640 + (t4369 * t5039 - t4581 * t5695) * t4681) * t3849) * t3937 + ((t4314 * t4650 * t3849 - t3825 * t5271) * t5527 + ((t4640 * t5010 + t4885) * t4675 * t3825 * t5527 + ((t4640 * t4951 + t5269) * t3825 - t5638 * t3849) * t3937 * t5603) * t4645) * pkin(9)) * t3843;
t3873 = t3885 * t4980;
t5618 = pkin(2) * t4681;
t3633 = (-t3843 * t4550 * t5078 + (t3831 * t5645 + t3873 + (pkin(2) * t5571 + (t5673 - t5739) * t3843) * pkin(3)) * t4681 - t3843 * t5084 + ((t3843 * t5040 + t3885 * t4590) * t4675 - t5572) * t4650 + (t3843 * t5154 - t3885 * t5178) * t4675 + t3843 * t4496) * t4651 / ((t4262 + t4242 + (t4462 + t4485) * t4675 + t4676 * t5036 - t4961) * t4681 + (-t4647 * t4878 + t4570 + (t4388 * t4647 * t4675 - t4651 * t5618) * t4645) * pkin(9) + t4834) * t3825 + ((((t3873 + t5266) * t4650 + t3831) * t4681 + t4750) * t4651 + (t5489 + (t4647 * ((-t4491 + t4590) * t5345 + t4682 * t4883) + ((t4675 * t5038 + t4543) * t4651 + t4839 * t5305) * pkin(3)) * t4681 + (pkin(9) * t4481 - t4477 * t4675 + t5365) * t4651 - (t4530 * t5345 + t4732) * t5601) * t3885) / ((t4133 + t4083) * t4681 + t5046) * t3849;
t4856 = (-t4572 * t4681 - t4573 * t4675) * t4646;
t4042 = (t4587 * t5206 + t5581 - t5746) * t4635 + t4856 * t5645 + t5746 + (-t4588 * t4675 + t4621) * t4681 + (t4675 * t5579 + t4884) * m(3) + t4950;
t4895 = rSges(3,1) * t4681 - rSges(3,2) * t4675;
t4136 = t4856 + t5580 + (pkin(2) * t4895 + t4618) * t5624;
t4912 = t4587 * t5078;
t4527 = rSges(3,1) * t4675 + rSges(3,2) * t4681;
t5472 = ((-t4527 * t5624 - t4505) * t4676 + t4682 * (m(3) * t4895 + t4586)) * t4647;
t5002 = -t3609 * t4042 - t3621 * t5472 - t3633 * t4136 + 0.4e1 * ((t5052 * t4675 + t4792 * t4681 + t5329 * t5723) * t3885 + (t4912 + (t4675 * t4949 + t4793) * t4681 + t5329 * t5722 + t4675 * t5050 + t5687) * t3843) * t3885;
t4091 = ((-0.2e1 * t4900 + t5302) * t5351 + t5272) * t4641;
t4463 = t4678 * t4875;
t5087 = t4550 * t5325;
t4930 = t4677 * t5087;
t4849 = t4646 * t4930;
t4877 = t4678 * t4978;
t4389 = pkin(2) * t5344 - t5402;
t4888 = t4635 * t5402 + t4389;
t3932 = 0.1e1 / (t4091 + ((t4463 - t4886) * t4677 + t4874) * t4683 + t5273 * t4677 + t4796 + ((pkin(3) * t4888 + t4849) * t4683 + (-t4877 + (t4571 * t4684 + t4677 * t4888) * t4645) * pkin(9)) * t4647);
t4661 = legFrame(2,3);
t4603 = sin(t4661);
t4609 = cos(t4661);
t4395 = t4603 * t4648 + t4609 * t4644;
t4401 = -t4603 * t4644 + t4609 * t4648;
t5316 = t4651 * t4678;
t4196 = -t4395 * t5316 + t4401 * t4684;
t5313 = t4651 * t4684;
t4808 = (t4395 * t5313 + t4401 * t4678) * t4650 - t4395 * t5351;
t3975 = (pkin(3) * t4808 - t4196 * t4594) * t4683 + t4677 * (pkin(3) * t4196 + t4594 * t4808);
t4197 = t4395 * t4684 + t4401 * t5316;
t4807 = (-t4395 * t4678 + t4401 * t5313) * t4650 - t4401 * t5351;
t3976 = (pkin(3) * t4807 + t4197 * t4594) * t4683 + t4677 * (-pkin(3) * t4197 + t4594 * t4807);
t3984 = t4694 + (t4156 * t4630 - t4627 * t5728) * t4691 + (-t4156 * t4627 - t4630 * t5728) * t5373;
t3993 = t4693 + (-t4156 * t4626 + t4305 * t5374) * t4690 - t5769;
t3826 = (t3975 * t3993 + t3976 * t3984) * t3932;
t4011 = t4156 * t4365 - t4364 * t5728 + t4694;
t4056 = -t4156 * t4507 + t4305 * t4364 + t4693;
t3844 = (t3975 * t4056 + t3976 * t4011) * t3932;
t3832 = t3844 * t4980;
t4944 = t4677 * t5151;
t4134 = (-t4944 - t5270) * t4651;
t5158 = pkin(9) * t5355;
t4545 = pkin(2) + 0.2e1 * t5158;
t5112 = t4545 * t5344;
t3965 = 0.1e1 / ((t4134 + t4647 * ((t4677 * t5098 + t5037) * t4684 + pkin(3) * t5112)) * t4683 + t5045);
t5328 = t4650 * t4677;
t4383 = pkin(3) * t5328 - t5413;
t4546 = pkin(2) + t5158;
t4256 = t4383 * t4684 + t4546 * t4678;
t5592 = pkin(3) * t4678;
t4453 = t4966 - t5592;
t5354 = t4645 * t4678;
t5157 = pkin(9) * t5354;
t5452 = (pkin(3) * t4684 + t4650 * t5157) * t4651;
t5459 = (-t4383 * t4678 + t4546 * t4684) * t4651;
t4002 = (-t4395 * t5452 + t4401 * t4453) * t4683 - t4395 * t5459 - t4401 * t4256;
t4005 = (-t4395 * t4453 - t4401 * t5452) * t4683 - t4401 * t5459 + t4395 * t4256;
t3850 = (t3984 * t4005 + t3993 * t4002) * t3965;
t3886 = (t4002 * t4056 + t4005 * t4011) * t3965;
t4084 = t4647 * (t4849 + (t4684 * t5150 + t5112) * pkin(3));
t4563 = pkin(2) * t5158;
t4749 = ((-t4551 + t4563) * t4650 - t5178 * t4677) * t3844;
t4918 = t4684 * t5083;
t4921 = t4678 * t5083;
t5021 = pkin(3) * t5157;
t4954 = 0.2e1 * t5021;
t4973 = t4684 * t5170;
t5180 = t4545 * t5592;
t5205 = 0.2e1 * t4677 * t4683;
t5611 = pkin(3) * t3844;
t5265 = pkin(2) * t5611;
t5303 = t4677 * t4684;
t5338 = t4647 * t4684;
t5423 = t4550 * t4684;
t5434 = t4482 * t4678;
t4492 = t4677 * t4550;
t5694 = t5638 * t4492;
t5465 = (t5270 + t5694) * t4651;
t5488 = (-t4935 + (t4954 + t5087) * t5351) * t4641;
t5569 = t3886 * t4650;
t5570 = t3886 * t4551;
t5577 = t3844 * t4650;
t3610 = ((((t3844 * t4954 + t3886 * t5423) * t4650 + t3886 * t4954 + t3844 * t5423) * t5351 - t3886 * t4935) * t4641 + (((t4684 * t5265 + ((-t3886 - t5577) * t5302 + (t3844 + t5569) * t4684 * t4983) * t4677) * t4646 - t4921 * t5611) * t4647 - (t3832 + pkin(3) * (pkin(2) * t5577 + t3886 * t5738)) * t4651) * t4683 + ((-pkin(3) * t5354 - t4650 * t4973) * t4646 * t3886 + (-t4646 * t4973 + ((pkin(2) * t5303 - t4650 * t5592) * t4646 - t4677 * t4921) * t4645) * t3844) * t5585 - t4651 * (t3886 * t4795 + t4749)) / (t4109 + (((t4930 + t5180) * t4646 + pkin(3) * t4918) * t4647 - t5465) * t4683 + ((pkin(3) * t5066 + t5434) * t4646 + t4918 * t5355) * t5585 + (t4361 + pkin(3) * (t4623 + t4905)) * t4651) * t3826 + ((-t4646 * t5338 + t5336) * t5570 + (t5488 + (-t4838 + t5121) * t5205 - (t4684 * t4916 + t5021) * t5351 + t4794) * t3844) / ((t4084 - t5465) * t4683 + t5045) * t3850;
t5059 = t4647 * t5303;
t4295 = t4550 * t5059 + t4499;
t4243 = t4295 * t5350;
t4466 = t4651 * t4492;
t5172 = pkin(3) * t5338;
t4960 = t4581 * t5172;
t4263 = (-t4466 + t4960) * t4635;
t4820 = t4263 + t4466 - t5029;
t4308 = (t4581 * t5059 - t5600) * t5169;
t5405 = t4581 * t4677;
t4348 = t4651 * t5405 + t5172;
t4833 = t4348 * t4971 + t4589 * t4677 + t4091 + t4308;
t5589 = pkin(3) * t4683;
t3938 = 0.1e1 / ((t4243 + t4820) * t4683 + t4552 + (pkin(9) * t4355 + t4831 * t5303 + (t5112 - t5402) * t5589) * t4647 + t4833);
t4315 = t4551 * t5355 + t4495;
t4370 = t4563 + t5041;
t5526 = t3938 * t4646;
t3622 = (((pkin(9) * t4315 - 0.2e1 * t4370 * t5589 - t4518 * t4641) * t5350 + (-t4683 * t4944 + (t4641 * t5637 - t5638) * t5259) * t4581) * t3826 + (t4546 + t5589) * t3850 * t5421) * t3938 * t3886 + ((((-t4982 - (0.4e1 * t4563 + t4847) * t5602 + t5688 * t4677) * t4683 + (t4683 * t4840 + t5212) * t4641) * t3826 + (-t4224 * t4641 + (t4370 * t5039 - t4581 * t5694) * t4683) * t3850) * t3938 + ((t4315 * t4650 * t3850 - t3826 * t5271) * t5526 + ((t4641 * t5010 + t4885) * t4677 * t3826 * t5526 + ((t4641 * t4951 + t5269) * t3826 - t5638 * t3850) * t3938 * t5603) * t4645) * pkin(9)) * t3844;
t3874 = t3886 * t4980;
t5617 = pkin(2) * t4683;
t3634 = (-t3844 * t4550 * t5077 + (t3832 * t5645 + t3874 + (pkin(2) * t5569 + (t5673 - t5738) * t3844) * pkin(3)) * t4683 - t3844 * t5084 + ((t3844 * t5040 + t3886 * t4590) * t4677 - t5570) * t4650 + (t3844 * t5154 - t3886 * t5178) * t4677 + t3844 * t4496) * t4651 / ((t4263 + t4243 + (t4463 + t4485) * t4677 + t4678 * t5036 - t4960) * t4683 + (-t4647 * t4877 + t4570 + (t4389 * t4647 * t4677 - t4651 * t5617) * t4645) * pkin(9) + t4833) * t3826 + ((((t3874 + t5265) * t4650 + t3832) * t4683 + t4749) * t4651 + (t5488 + (t4647 * ((-t4492 + t4590) * t5344 + t4684 * t4883) + ((t4677 * t5038 + t4545) * t4651 + t4839 * t5303) * pkin(3)) * t4683 + (pkin(9) * t4482 - t4477 * t4677 + t5365) * t4651 - (t4531 * t5344 + t4731) * t5601) * t3886) / ((t4134 + t4084) * t4683 + t5045) * t3850;
t4855 = (-t4572 * t4683 - t4573 * t4677) * t4646;
t4043 = (t4587 * t5205 + t5581 - t5745) * t4635 + t4855 * t5645 + t5745 + (-t4588 * t4677 + t4621) * t4683 + (t4677 * t5579 + t4884) * m(3) + t4950;
t4894 = rSges(3,1) * t4683 - rSges(3,2) * t4677;
t4137 = t4855 + t5580 + (pkin(2) * t4894 + t4618) * t5624;
t4911 = t4587 * t5077;
t4528 = rSges(3,1) * t4677 + rSges(3,2) * t4683;
t5471 = ((-t4528 * t5624 - t4505) * t4678 + t4684 * (m(3) * t4894 + t4586)) * t4647;
t5001 = -t3610 * t4043 - t3622 * t5471 - t3634 * t4137 + 0.4e1 * ((t5052 * t4677 + t4792 * t4683 + t5328 * t5723) * t3886 + (t4911 + (t4677 * t4949 + t4793) * t4683 + t5328 * t5722 + t4677 * t5050 + t5687) * t3844) * t3886;
t4092 = ((-0.2e1 * t4899 + t5300) * t5351 + t5272) * t4642;
t4464 = t4680 * t4875;
t5086 = t4550 * t5324;
t4929 = t4679 * t5086;
t4848 = t4646 * t4929;
t4876 = t4680 * t4978;
t4390 = pkin(2) * t5343 - t5401;
t4887 = t4635 * t5401 + t4390;
t3933 = 0.1e1 / (t4092 + ((t4464 - t4886) * t4679 + t4874) * t4685 + t5273 * t4679 + t4796 + ((pkin(3) * t4887 + t4848) * t4685 + (-t4876 + (t4571 * t4686 + t4679 * t4887) * t4645) * pkin(9)) * t4647);
t4662 = legFrame(1,3);
t4604 = sin(t4662);
t4610 = cos(t4662);
t4396 = t4604 * t4648 + t4610 * t4644;
t4402 = -t4604 * t4644 + t4610 * t4648;
t5315 = t4651 * t4680;
t4198 = -t4396 * t5315 + t4402 * t4686;
t5312 = t4651 * t4686;
t4806 = (t4396 * t5312 + t4402 * t4680) * t4650 - t4396 * t5351;
t3977 = (pkin(3) * t4806 - t4198 * t4594) * t4685 + t4679 * (pkin(3) * t4198 + t4594 * t4806);
t4199 = t4396 * t4686 + t4402 * t5315;
t4805 = (-t4396 * t4680 + t4402 * t5312) * t4650 - t4402 * t5351;
t3978 = (pkin(3) * t4805 + t4199 * t4594) * t4685 + t4679 * (-pkin(3) * t4199 + t4594 * t4805);
t3985 = t4694 + (t4158 * t4630 - t4627 * t5729) * t4691 + (-t4158 * t4627 - t4630 * t5729) * t5373;
t3994 = t4693 + (-t4158 * t4626 + t4306 * t5374) * t4690 - t5768;
t3827 = (t3977 * t3994 + t3978 * t3985) * t3933;
t4012 = t4158 * t4365 - t4364 * t5729 + t4694;
t4057 = -t4158 * t4507 + t4306 * t4364 + t4693;
t3845 = (t3977 * t4057 + t3978 * t4012) * t3933;
t3833 = t3845 * t4980;
t4943 = t4679 * t5151;
t4135 = (-t4943 - t5270) * t4651;
t5156 = pkin(9) * t5353;
t4547 = pkin(2) + 0.2e1 * t5156;
t5111 = t4547 * t5343;
t3966 = 0.1e1 / ((t4135 + t4647 * ((t4679 * t5098 + t5037) * t4686 + pkin(3) * t5111)) * t4685 + t5044);
t5327 = t4650 * t4679;
t4384 = pkin(3) * t5327 - t5413;
t4548 = pkin(2) + t5156;
t4258 = t4384 * t4686 + t4548 * t4680;
t5591 = pkin(3) * t4680;
t4454 = t4965 - t5591;
t5352 = t4645 * t4680;
t5155 = pkin(9) * t5352;
t5451 = (pkin(3) * t4686 + t4650 * t5155) * t4651;
t5458 = (-t4384 * t4680 + t4548 * t4686) * t4651;
t4003 = (-t4396 * t5451 + t4402 * t4454) * t4685 - t4396 * t5458 - t4402 * t4258;
t4006 = (-t4396 * t4454 - t4402 * t5451) * t4685 - t4402 * t5458 + t4396 * t4258;
t3851 = (t3985 * t4006 + t3994 * t4003) * t3966;
t3887 = (t4003 * t4057 + t4006 * t4012) * t3966;
t4085 = t4647 * (t4848 + (t4686 * t5150 + t5111) * pkin(3));
t4564 = pkin(2) * t5156;
t4748 = ((-t4551 + t4564) * t4650 - t5178 * t4679) * t3845;
t4917 = t4686 * t5083;
t4920 = t4680 * t5083;
t5020 = pkin(3) * t5155;
t4953 = 0.2e1 * t5020;
t4972 = t4686 * t5170;
t5179 = t4547 * t5591;
t5204 = 0.2e1 * t4679 * t4685;
t5610 = pkin(3) * t3845;
t5264 = pkin(2) * t5610;
t5301 = t4679 * t4686;
t5337 = t4647 * t4686;
t5422 = t4550 * t4686;
t5432 = t4483 * t4680;
t4493 = t4679 * t4550;
t5693 = t5638 * t4493;
t5464 = (t5270 + t5693) * t4651;
t5490 = (-t4935 + (t4953 + t5086) * t5351) * t4642;
t5567 = t3887 * t4650;
t5568 = t3887 * t4551;
t5576 = t3845 * t4650;
t3611 = ((((t3845 * t4953 + t3887 * t5422) * t4650 + t3887 * t4953 + t3845 * t5422) * t5351 - t3887 * t4935) * t4642 + (((t4686 * t5264 + ((-t3887 - t5576) * t5300 + (t3845 + t5567) * t4686 * t4983) * t4679) * t4646 - t4920 * t5610) * t4647 - (t3833 + pkin(3) * (pkin(2) * t5576 + t3887 * t5737)) * t4651) * t4685 + ((-pkin(3) * t5352 - t4650 * t4972) * t4646 * t3887 + (-t4646 * t4972 + ((pkin(2) * t5301 - t4650 * t5591) * t4646 - t4679 * t4920) * t4645) * t3845) * t5585 - t4651 * (t3887 * t4795 + t4748)) / (t4110 + (((t4929 + t5179) * t4646 + pkin(3) * t4917) * t4647 - t5464) * t4685 + ((pkin(3) * t5065 + t5432) * t4646 + t4917 * t5353) * t5585 + (t4362 + pkin(3) * (t4624 + t4905)) * t4651) * t3827 + ((-t4646 * t5337 + t5336) * t5568 + (t5490 + (-t4838 + t5120) * t5204 - (t4686 * t4916 + t5020) * t5351 + t4794) * t3845) / ((t4085 - t5464) * t4685 + t5044) * t3851;
t5058 = t4647 * t5301;
t4296 = t4550 * t5058 + t4499;
t4244 = t4296 * t5350;
t4467 = t4651 * t4493;
t5171 = pkin(3) * t5337;
t4959 = t4581 * t5171;
t4264 = (-t4467 + t4959) * t4635;
t4819 = t4264 + t4467 - t5029;
t4309 = (t4581 * t5058 - t5600) * t5169;
t5404 = t4581 * t4679;
t4349 = t4651 * t5404 + t5171;
t4832 = t4349 * t4971 + t4589 * t4679 + t4092 + t4309;
t5588 = pkin(3) * t4685;
t3939 = 0.1e1 / ((t4244 + t4819) * t4685 + t4552 + (pkin(9) * t4356 + t4831 * t5301 + (t5111 - t5401) * t5588) * t4647 + t4832);
t4316 = t4551 * t5353 + t4495;
t4371 = t4564 + t5041;
t5525 = t3939 * t4646;
t3623 = (((pkin(9) * t4316 - 0.2e1 * t4371 * t5588 - t4518 * t4642) * t5350 + (-t4685 * t4943 + (t4642 * t5637 - t5638) * t5259) * t4581) * t3827 + (t4548 + t5588) * t3851 * t5421) * t3939 * t3887 + ((((-t4982 - (0.4e1 * t4564 + t4847) * t5602 + t5688 * t4679) * t4685 + (t4685 * t4840 + t5212) * t4642) * t3827 + (-t4224 * t4642 + (t4371 * t5039 - t4581 * t5693) * t4685) * t3851) * t3939 + ((t4316 * t4650 * t3851 - t3827 * t5271) * t5525 + ((t4642 * t5010 + t4885) * t4679 * t3827 * t5525 + ((t4642 * t4951 + t5269) * t3827 - t5638 * t3851) * t3939 * t5603) * t4645) * pkin(9)) * t3845;
t3875 = t3887 * t4980;
t5616 = pkin(2) * t4685;
t3635 = (-t3845 * t4550 * t5076 + (t3833 * t5645 + t3875 + (pkin(2) * t5567 + (t5673 - t5737) * t3845) * pkin(3)) * t4685 - t3845 * t5084 + ((t3845 * t5040 + t3887 * t4590) * t4679 - t5568) * t4650 + (t3845 * t5154 - t3887 * t5178) * t4679 + t3845 * t4496) * t4651 / ((t4264 + t4244 + (t4464 + t4485) * t4679 + t4680 * t5036 - t4959) * t4685 + (-t4647 * t4876 + t4570 + (t4390 * t4647 * t4679 - t4651 * t5616) * t4645) * pkin(9) + t4832) * t3827 + ((((t3875 + t5264) * t4650 + t3833) * t4685 + t4748) * t4651 + (t5490 + (t4647 * ((-t4493 + t4590) * t5343 + t4686 * t4883) + ((t4679 * t5038 + t4547) * t4651 + t4839 * t5301) * pkin(3)) * t4685 + (pkin(9) * t4483 - t4477 * t4679 + t5365) * t4651 - (t4532 * t5343 + t4730) * t5601) * t3887) / ((t4135 + t4085) * t4685 + t5044) * t3851;
t4854 = (-t4572 * t4685 - t4573 * t4679) * t4646;
t4044 = (t4587 * t5204 + t5581 - t5744) * t4635 + t4854 * t5645 + t5744 + (-t4588 * t4679 + t4621) * t4685 + (t4679 * t5579 + t4884) * m(3) + t4950;
t4893 = rSges(3,1) * t4685 - rSges(3,2) * t4679;
t4138 = t4854 + t5580 + (pkin(2) * t4893 + t4618) * t5624;
t4910 = t4587 * t5076;
t4529 = rSges(3,1) * t4679 + rSges(3,2) * t4685;
t5470 = ((-t4529 * t5624 - t4505) * t4680 + t4686 * (m(3) * t4893 + t4586)) * t4647;
t5000 = -t3611 * t4044 - t3623 * t5470 - t3635 * t4138 + 0.4e1 * ((t5052 * t4679 + t4792 * t4685 + t5327 * t5723) * t3887 + (t4910 + (t4679 * t4949 + t4793) * t4685 + t5327 * t5722 + t4679 * t5050 + t5687) * t3845) * t3887;
t3840 = t3843 ^ 2;
t5627 = m(3) * (((-rSges(3,1) * t5326 + rSges(3,2) * t4676) * t4681 + t4675 * (rSges(3,1) * t4676 + rSges(3,2) * t5326)) * t4647 - t4895 * t5349);
t4999 = -t3609 * t4136 + t3621 * t5627 - t3633 * t4569 - 0.2e1 * t3840 * (t4793 * t4681 + t4912 + t5043 + (t4907 * t4681 + t5689) * t4675);
t3841 = t3844 ^ 2;
t5626 = m(3) * (((-rSges(3,1) * t5325 + rSges(3,2) * t4678) * t4683 + t4677 * (rSges(3,1) * t4678 + rSges(3,2) * t5325)) * t4647 - t4894 * t5349);
t4998 = -t3610 * t4137 + t3622 * t5626 - t3634 * t4569 - 0.2e1 * t3841 * (t4793 * t4683 + t4911 + t5043 + (t4907 * t4683 + t5689) * t4677);
t3842 = t3845 ^ 2;
t5625 = m(3) * (((-rSges(3,1) * t5324 + rSges(3,2) * t4680) * t4685 + t4679 * (rSges(3,1) * t4680 + rSges(3,2) * t5324)) * t4647 - t4893 * t5349);
t4997 = -t3611 * t4138 + t3623 * t5625 - t3635 * t4569 - 0.2e1 * t3842 * (t4793 * t4685 + t4910 + t5043 + (t4907 * t4685 + t5689) * t4679);
t3882 = t3885 ^ 2;
t5216 = 0.2e1 * t3843 * t3885;
t5283 = t3840 + t3882;
t5289 = -t3609 * t5472 - t4639 * t3621 + t3633 * t5627 - t3882 * t4527 * t5191 + ((-t4505 * t4682 - t4586 * t4676) * t3840 + (-t4676 * t4895 * (t4650 * t5216 + t5283) - t4527 * t4682 * (t4650 * t5283 + t5216)) * m(3)) * t4647;
t3883 = t3886 ^ 2;
t5215 = 0.2e1 * t3844 * t3886;
t5282 = t3841 + t3883;
t5288 = -t3610 * t5471 - t4639 * t3622 + t3634 * t5626 - t3883 * t4528 * t5191 + ((-t4505 * t4684 - t4586 * t4678) * t3841 + (-t4678 * t4894 * (t4650 * t5215 + t5282) - t4528 * t4684 * (t4650 * t5282 + t5215)) * m(3)) * t4647;
t3884 = t3887 ^ 2;
t5214 = 0.2e1 * t3845 * t3887;
t5281 = t3842 + t3884;
t5287 = -t3611 * t5470 - t4639 * t3623 + t3635 * t5625 - t3884 * t4529 * t5191 + ((-t4505 * t4686 - t4586 * t4680) * t3842 + (-t4680 * t4893 * (t4650 * t5214 + t5281) - t4529 * t4686 * (t4650 * t5281 + t5214)) * m(3)) * t4647;
t5372 = t4629 * t4691;
t5117 = t5683 * t5372;
t4936 = t4626 * t5117;
t5294 = t4692 * t4952;
t5054 = t4626 * t5294;
t5298 = t4690 * t4597;
t5700 = (-t4936 - (-0.4e1 * t5691 + 0.2e1 * t5298) * t4952) * t4596 - 0.2e1 * t5054 + t5762 + t5736;
t5387 = t4626 * t4630;
t5479 = t5729 * t4692;
t4032 = -(t4476 * t5387 + t4627 * t5730) * t4690 + t4306 * t5368 - t5479;
t5480 = t5728 * t4692;
t4030 = -(t4475 * t5387 + t4627 * t5731) * t4690 + t4305 * t5368 - t5480;
t5481 = t5727 * t4692;
t4028 = -(t4474 * t5387 + t4627 * t5732) * t4690 + t4304 * t5368 - t5481;
t5482 = t5726 * t4692;
t4026 = -(t4473 * t5387 + t4627 * t5733) * t4690 + t4303 * t5368 - t5482;
t5483 = t5725 * t4692;
t4024 = -(t4472 * t5387 + t4627 * t5734) * t4690 + t4302 * t5368 - t5483;
t5484 = t5724 * t4692;
t4022 = -(t4471 * t5387 + t4627 * t5735) * t4690 + t4301 * t5368 - t5484;
t4252 = t4288 * t4626;
t5392 = t4625 * t4692;
t5053 = t4566 * t5392;
t5686 = 0.2e1 * t5053 + t4252;
t4271 = t4319 * t4626;
t5295 = t4692 * t4565;
t5684 = 0.2e1 * t5295 + t4271;
t5675 = t4952 * (t4507 * t5648 - t4692) - t4628 * (t4287 * t4626 - t5392 * t5683) + t4318 * t4626;
t4334 = t4566 * t4628 - t5420;
t5650 = 0.2e1 * t4334;
t5609 = pkin(3) * t4537;
t5608 = pkin(3) * t4539;
t5607 = pkin(3) * t4541;
t5606 = pkin(3) * t4543;
t5605 = pkin(3) * t4545;
t5604 = pkin(3) * t4547;
t5586 = pkin(9) * t4646;
t4523 = Icges(4,2) + m(4) * (t4654 + t4656);
t4522 = m(4) * (t4654 + t4655) + Icges(4,1);
t5582 = m(4) * (t4655 + t4656) + Icges(4,3);
t4407 = t4644 * t5320 + t4648 * t4664;
t4410 = -t4644 * t4664 + t4648 * t5320;
t4185 = -t4407 * t4599 + t4410 * t4605;
t4413 = t4644 * t4670 + t4648 * t5323;
t4416 = -t4644 * t5323 + t4648 * t4670;
t4188 = t4413 * t4605 + t4416 * t4599;
t5097 = t4647 * t4486;
t4762 = t4185 * t5603 + t4397 * t5097;
t5035 = t4663 * t5263;
t5064 = t4647 * t5350;
t5428 = t4550 * t4646;
t5104 = t4636 * t5428;
t5177 = t4581 * t5601;
t5190 = t4647 * t5621;
t5443 = t4478 * t4646;
t3895 = t4188 * t5104 + (((t4185 * t4486 - t4397 * t5177) * t4650 + t4188 * t5609) * t4646 + t4762 * t4635 - t4762) * t4669 - t4397 * t5035 + (t4188 * t5443 + (t4397 * t5190 + (t4185 * t4635 - t4397 * t5064 - t4185) * t5412 + (-t4185 * t5702 - t4397 * t5708) * pkin(3)) * t4645) * pkin(9);
t4979 = t4581 * t5167;
t5364 = t4645 * t4650;
t3953 = 0.1e1 / (t4101 + ((t4289 * t4650 + t4647 * t5184) * t4646 - t4964 + t4824) * t4669 + (t4343 * t5364 + t4647 * t5442) * t5586 + t4298 + (-t4670 * t4979 + t4589) * t4663 + t4552);
t5566 = t3895 * t3953;
t4408 = t4644 * t5319 + t4648 * t4666;
t4411 = -t4644 * t4666 + t4648 * t5319;
t4186 = -t4408 * t4600 + t4411 * t4606;
t4414 = t4644 * t4672 + t4648 * t5322;
t4417 = -t4644 * t5322 + t4648 * t4672;
t4189 = t4414 * t4606 + t4417 * t4600;
t5096 = t4647 * t4487;
t4761 = t4186 * t5603 + t4398 * t5096;
t5034 = t4665 * t5263;
t5103 = t4637 * t5428;
t5189 = t4647 * t5620;
t5441 = t4479 * t4646;
t3896 = t4189 * t5103 + (((t4186 * t4487 - t4398 * t5177) * t4650 + t4189 * t5608) * t4646 + t4761 * t4635 - t4761) * t4671 - t4398 * t5034 + (t4189 * t5441 + (t4398 * t5189 + (t4186 * t4635 - t4398 * t5064 - t4186) * t5411 + (-t4186 * t5703 - t4398 * t5709) * pkin(3)) * t4645) * pkin(9);
t3954 = 0.1e1 / (t4102 + ((t4290 * t4650 + t4647 * t5183) * t4646 - t4963 + t4823) * t4671 + (t4344 * t5364 + t4647 * t5440) * t5586 + t4299 + (-t4672 * t4979 + t4589) * t4665 + t4552);
t5565 = t3896 * t3954;
t4409 = t4644 * t5318 + t4648 * t4668;
t4412 = -t4644 * t4668 + t4648 * t5318;
t4187 = -t4409 * t4601 + t4412 * t4607;
t4415 = t4644 * t4674 + t4648 * t5321;
t4418 = -t4644 * t5321 + t4648 * t4674;
t4190 = t4415 * t4607 + t4418 * t4601;
t5095 = t4647 * t4488;
t4760 = t4187 * t5603 + t4399 * t5095;
t5033 = t4667 * t5263;
t5102 = t4638 * t5428;
t5188 = t4647 * t5619;
t5439 = t4480 * t4646;
t3897 = t4190 * t5102 + (((t4187 * t4488 - t4399 * t5177) * t4650 + t4190 * t5607) * t4646 + t4760 * t4635 - t4760) * t4673 - t4399 * t5033 + (t4190 * t5439 + (t4399 * t5188 + (t4187 * t4635 - t4399 * t5064 - t4187) * t5410 + (-t4187 * t5704 - t4399 * t5710) * pkin(3)) * t4645) * pkin(9);
t3955 = 0.1e1 / (t4103 + ((t4291 * t4650 + t4647 * t5182) * t4646 - t4962 + t4822) * t4673 + (t4345 * t5364 + t4647 * t5438) * t5586 + t4300 + (-t4674 * t4979 + t4589) * t4667 + t4552);
t5564 = t3897 * t3955;
t4182 = t4407 * t4605 + t4410 * t4599;
t4191 = -t4413 * t4599 + t4416 * t4605;
t4765 = -t4182 * t5603 - t4391 * t5097;
t3898 = t4191 * t5104 + (((-t4182 * t4486 + t4391 * t5177) * t4650 + t4191 * t5609) * t4646 + t4765 * t4635 - t4765) * t4669 + t4391 * t5035 + (t4191 * t5443 + (-t4391 * t5190 + (-t4182 * t4635 + t4391 * t5064 + t4182) * t5412 + (t4182 * t5702 + t4391 * t5708) * pkin(3)) * t4645) * pkin(9);
t5563 = t3898 * t3953;
t4183 = t4408 * t4606 + t4411 * t4600;
t4192 = -t4414 * t4600 + t4417 * t4606;
t4764 = -t4183 * t5603 - t4392 * t5096;
t3899 = t4192 * t5103 + (((-t4183 * t4487 + t4392 * t5177) * t4650 + t4192 * t5608) * t4646 + t4764 * t4635 - t4764) * t4671 + t4392 * t5034 + (t4192 * t5441 + (-t4392 * t5189 + (-t4183 * t4635 + t4392 * t5064 + t4183) * t5411 + (t4183 * t5703 + t4392 * t5709) * pkin(3)) * t4645) * pkin(9);
t5562 = t3899 * t3954;
t4184 = t4409 * t4607 + t4412 * t4601;
t4193 = -t4415 * t4601 + t4418 * t4607;
t4763 = -t4184 * t5603 - t4393 * t5095;
t3900 = t4193 * t5102 + (((-t4184 * t4488 + t4393 * t5177) * t4650 + t4193 * t5607) * t4646 + t4763 * t4635 - t4763) * t4673 + t4393 * t5033 + (t4193 * t5439 + (-t4393 * t5188 + (-t4184 * t4635 + t4393 * t5064 + t4184) * t5410 + (t4184 * t5704 + t4393 * t5710) * pkin(3)) * t4645) * pkin(9);
t5561 = t3900 * t3955;
t4423 = t4644 * t5314 + t4648 * t4676;
t4426 = -t4644 * t4676 + t4648 * t5314;
t4209 = -t4423 * t4602 + t4426 * t4608;
t4429 = t4644 * t4682 + t4648 * t5317;
t4432 = -t4644 * t5317 + t4648 * t4682;
t4212 = t4429 * t4608 + t4432 * t4602;
t5094 = t4647 * t4491;
t4756 = t4209 * t5603 + t4400 * t5094;
t5032 = t4675 * t5263;
t5101 = t4640 * t5428;
t5187 = t4647 * t5618;
t5437 = t4481 * t4646;
t3901 = t4212 * t5101 + (((t4209 * t4491 - t4400 * t5177) * t4650 + t4212 * t5606) * t4646 + t4756 * t4635 - t4756) * t4681 - t4400 * t5032 + (t4212 * t5437 + (t4400 * t5187 + (t4209 * t4635 - t4400 * t5064 - t4209) * t5406 + (-t4209 * t5705 - t4400 * t5711) * pkin(3)) * t4645) * pkin(9);
t3958 = 0.1e1 / (t4108 + ((t4294 * t4650 + t4647 * t5181) * t4646 - t4961 + t4821) * t4681 + (t4347 * t5364 + t4647 * t5436) * t5586 + t4307 + (-t4682 * t4979 + t4589) * t4675 + t4552);
t5560 = t3901 * t3958;
t4424 = t4644 * t5313 + t4648 * t4678;
t4427 = -t4644 * t4678 + t4648 * t5313;
t4210 = -t4424 * t4603 + t4427 * t4609;
t4430 = t4644 * t4684 + t4648 * t5316;
t4433 = -t4644 * t5316 + t4648 * t4684;
t4213 = t4430 * t4609 + t4433 * t4603;
t5093 = t4647 * t4492;
t4755 = t4210 * t5603 + t4401 * t5093;
t5031 = t4677 * t5263;
t5100 = t4641 * t5428;
t5186 = t4647 * t5617;
t5435 = t4482 * t4646;
t3902 = t4213 * t5100 + (((t4210 * t4492 - t4401 * t5177) * t4650 + t4213 * t5605) * t4646 + t4755 * t4635 - t4755) * t4683 - t4401 * t5031 + (t4213 * t5435 + (t4401 * t5186 + (t4210 * t4635 - t4401 * t5064 - t4210) * t5405 + (-t4210 * t5706 - t4401 * t5712) * pkin(3)) * t4645) * pkin(9);
t3959 = 0.1e1 / (t4109 + ((t4295 * t4650 + t4647 * t5180) * t4646 - t4960 + t4820) * t4683 + (t4348 * t5364 + t4647 * t5434) * t5586 + t4308 + (-t4684 * t4979 + t4589) * t4677 + t4552);
t5559 = t3902 * t3959;
t4425 = t4644 * t5312 + t4648 * t4680;
t4428 = -t4644 * t4680 + t4648 * t5312;
t4211 = -t4425 * t4604 + t4428 * t4610;
t4431 = t4644 * t4686 + t4648 * t5315;
t4434 = -t4644 * t5315 + t4648 * t4686;
t4214 = t4431 * t4610 + t4434 * t4604;
t5092 = t4647 * t4493;
t4754 = t4211 * t5603 + t4402 * t5092;
t5030 = t4679 * t5263;
t5099 = t4642 * t5428;
t5185 = t4647 * t5616;
t5433 = t4483 * t4646;
t3903 = t4214 * t5099 + (((t4211 * t4493 - t4402 * t5177) * t4650 + t4214 * t5604) * t4646 + t4754 * t4635 - t4754) * t4685 - t4402 * t5030 + (t4214 * t5433 + (t4402 * t5185 + (t4211 * t4635 - t4402 * t5064 - t4211) * t5404 + (-t4211 * t5707 - t4402 * t5713) * pkin(3)) * t4645) * pkin(9);
t3960 = 0.1e1 / (t4110 + ((t4296 * t4650 + t4647 * t5179) * t4646 - t4959 + t4819) * t4685 + (t4349 * t5364 + t4647 * t5432) * t5586 + t4309 + (-t4686 * t4979 + t4589) * t4679 + t4552);
t5558 = t3903 * t3960;
t4206 = t4423 * t4608 + t4426 * t4602;
t4215 = -t4429 * t4602 + t4432 * t4608;
t4759 = -t4206 * t5603 - t4394 * t5094;
t3904 = t4215 * t5101 + (((-t4206 * t4491 + t4394 * t5177) * t4650 + t4215 * t5606) * t4646 + t4759 * t4635 - t4759) * t4681 + t4394 * t5032 + (t4215 * t5437 + (-t4394 * t5187 + (-t4206 * t4635 + t4394 * t5064 + t4206) * t5406 + (t4206 * t5705 + t4394 * t5711) * pkin(3)) * t4645) * pkin(9);
t5557 = t3904 * t3958;
t4207 = t4424 * t4609 + t4427 * t4603;
t4216 = -t4430 * t4603 + t4433 * t4609;
t4758 = -t4207 * t5603 - t4395 * t5093;
t3905 = t4216 * t5100 + (((-t4207 * t4492 + t4395 * t5177) * t4650 + t4216 * t5605) * t4646 + t4758 * t4635 - t4758) * t4683 + t4395 * t5031 + (t4216 * t5435 + (-t4395 * t5186 + (-t4207 * t4635 + t4395 * t5064 + t4207) * t5405 + (t4207 * t5706 + t4395 * t5712) * pkin(3)) * t4645) * pkin(9);
t5556 = t3905 * t3959;
t4208 = t4425 * t4610 + t4428 * t4604;
t4217 = -t4431 * t4604 + t4434 * t4610;
t4757 = -t4208 * t5603 - t4396 * t5092;
t3906 = t4217 * t5099 + (((-t4208 * t4493 + t4396 * t5177) * t4650 + t4217 * t5604) * t4646 + t4757 * t4635 - t4757) * t4685 + t4396 * t5030 + (t4217 * t5433 + (-t4396 * t5185 + (-t4208 * t4635 + t4396 * t5064 + t4208) * t5404 + (t4208 * t5707 + t4396 * t5713) * pkin(3)) * t4645) * pkin(9);
t5555 = t3906 * t3960;
t5554 = t3928 * t3967;
t5553 = t3928 * t3968;
t5552 = t3928 * t4039;
t5551 = t3928 * t4114;
t5550 = t3929 * t3969;
t5549 = t3929 * t3970;
t5548 = t3929 * t4040;
t5547 = t3929 * t4115;
t5546 = t3930 * t3971;
t5545 = t3930 * t3972;
t5544 = t3930 * t4041;
t5543 = t3930 * t4116;
t5542 = t3931 * t3973;
t5541 = t3931 * t3974;
t5540 = t3931 * t4042;
t5539 = t3931 * t4136;
t5538 = t3932 * t3975;
t5537 = t3932 * t3976;
t5536 = t3932 * t4043;
t5535 = t3932 * t4137;
t5534 = t3933 * t3977;
t5533 = t3933 * t3978;
t5532 = t3933 * t4044;
t5531 = t3933 * t4138;
t5524 = t3953 * t4639;
t5523 = t3954 * t4639;
t5522 = t3955 * t4639;
t5521 = t3958 * t4639;
t5520 = t3959 * t4639;
t5519 = t3960 * t4639;
t5518 = t3961 * t3995;
t5517 = t3961 * t3998;
t5516 = t3961 * t4114;
t5515 = t3961 * t4569;
t5514 = t3962 * t3996;
t5513 = t3962 * t3999;
t5512 = t3962 * t4115;
t5511 = t3962 * t4569;
t5510 = t3963 * t3997;
t5509 = t3963 * t4000;
t5508 = t3963 * t4116;
t5507 = t3963 * t4569;
t5506 = t3964 * t4001;
t5505 = t3964 * t4004;
t5504 = t3964 * t4136;
t5503 = t3964 * t4569;
t5502 = t3965 * t4002;
t5501 = t3965 * t4005;
t5500 = t3965 * t4137;
t5499 = t3965 * t4569;
t5498 = t3966 * t4003;
t5497 = t3966 * t4006;
t5496 = t3966 * t4138;
t5495 = t3966 * t4569;
t5296 = t4691 * t4700;
t5385 = t4626 * t4691;
t4107 = (t4469 * t4690 - t5296) * t4629 - t4468 * t5385;
t5491 = t4107 * t4627;
t5419 = t4565 * t4628;
t5400 = t4596 * t4690;
t5399 = t4597 * t4627;
t5398 = t4597 * t4692;
t5389 = t4626 * t4627;
t5376 = t4627 * t4692;
t5370 = t4630 * t4334;
t5369 = t4630 * t4952;
t5367 = t4630 * t4692;
t4986 = t4690 + 0.2e1 * t4575;
t5055 = t4952 * t5372;
t5085 = t4625 * t5297;
t5119 = t5692 * t5398;
t3956 = (0.2e1 * t5055 - (-0.2e1 * t4507 + t5398) * t5683) * t4596 + ((-t4566 * t4986 + t5393 * t5683) * t4629 + t4565 * t5385 - (-t4692 * t5639 + 0.4e1 * t5386) * t5415) * t4628 - t5119 + (-t4691 * t4952 + t4986 * t5420) * t4629 + (-t4690 * t5683 + t5085) * t4626 - t5683 * t4692;
t4310 = t4461 - t5299 / 0.2e1;
t4817 = t5054 + t5299;
t5280 = ((t4936 / 0.2e1 - (0.2e1 * t5691 - t5298) * t4952) * t4596 + (((-t5056 + t5417 / 0.2e1) * t4626 + t5295) * t4629 + (-t4597 + 0.1e1 / 0.2e1) * t5297 - (-t5298 / 0.2e1 + t5691) * t5430) * t4628 + t4310 * t4597 + ((t5057 / 0.2e1 + t4470 / 0.2e1) * t4626 + t5053) * t4629 - t4461 / 0.2e1 + t4817) * t5774 + t3956 * t4598;
t5213 = t4692 * t5650;
t5203 = t3953 * t5630;
t5202 = t3954 * t5629;
t5201 = t3955 * t5628;
t5200 = t3958 * t5627;
t5199 = t3959 * t5626;
t5198 = t3960 * t5625;
t5197 = t3961 * t5630;
t5196 = t3962 * t5629;
t5195 = t3963 * t5628;
t5194 = t3964 * t5627;
t5193 = t3965 * t5626;
t5192 = t3966 * t5625;
t5148 = t3928 * t5487;
t5146 = t3929 * t5486;
t5144 = t3930 * t5485;
t5142 = t3931 * t5472;
t5140 = t3932 * t5471;
t5138 = t3933 * t5470;
t5137 = t3953 * t5487;
t5136 = t3954 * t5486;
t5135 = t3955 * t5485;
t5134 = t3958 * t5472;
t5133 = t3959 * t5471;
t5132 = t3960 * t5470;
t5074 = t4952 * t5389;
t5073 = t4626 * t5369;
t5072 = t3956 * t5378;
t5019 = t3953 * t5292;
t5018 = t3954 * t5291;
t5017 = t3955 * t5290;
t5016 = t3958 * t5289;
t5015 = t3959 * t5288;
t5014 = t3960 * t5287;
t4988 = -t4507 + t5398;
t4873 = t3928 * t5008;
t4872 = t3929 * t5007;
t4871 = t3930 * t5006;
t4870 = t3931 * t5002;
t4869 = t3932 * t5001;
t4868 = t3933 * t5000;
t4867 = t3961 * t5005;
t4866 = t3962 * t5004;
t4865 = t3963 * t5003;
t4864 = t3964 * t4999;
t4863 = t3965 * t4998;
t4862 = t3966 * t4997;
t4320 = t4468 * t4629 - t4626 * t4700;
t4791 = t3967 * t5552 + t3995 * t5516;
t4790 = t3967 * t5551 + t3995 * t5515;
t4789 = t3968 * t5552 + t3998 * t5516;
t4788 = t3968 * t5551 + t3998 * t5515;
t4787 = t3969 * t5548 + t3996 * t5512;
t4786 = t3969 * t5547 + t3996 * t5511;
t4785 = t3970 * t5548 + t3999 * t5512;
t4784 = t3970 * t5547 + t3999 * t5511;
t4783 = t3971 * t5544 + t3997 * t5508;
t4782 = t3971 * t5543 + t3997 * t5507;
t4781 = t3972 * t5544 + t4000 * t5508;
t4780 = t3972 * t5543 + t4000 * t5507;
t4779 = t3973 * t5540 + t4001 * t5504;
t4778 = t3973 * t5539 + t4001 * t5503;
t4777 = t3974 * t5540 + t4004 * t5504;
t4776 = t3974 * t5539 + t4004 * t5503;
t4775 = t3975 * t5536 + t4002 * t5500;
t4774 = t3975 * t5535 + t4002 * t5499;
t4773 = t3976 * t5536 + t4005 * t5500;
t4772 = t3976 * t5535 + t4005 * t5499;
t4771 = t3977 * t5532 + t4003 * t5496;
t4770 = t3977 * t5531 + t4003 * t5495;
t4769 = t3978 * t5532 + t4006 * t5496;
t4768 = t3978 * t5531 + t4006 * t5495;
t4766 = (t4507 * t4701 - t4702 * t5372) * t4628 + (t4690 * t5391 - t5296) * t4626 + (t4692 * t4702 + t4701 * t5372) * t4625;
t4033 = (t4626 * t5384 - t4630 * t5735) * t4690 + t5773;
t4034 = (t4626 * t5383 - t4630 * t5734) * t4690 + t5772;
t4035 = (t4626 * t5382 - t4630 * t5733) * t4690 + t5771;
t4036 = (t4626 * t5381 - t4630 * t5732) * t4690 + t5770;
t4037 = (t4626 * t5380 - t4630 * t5731) * t4690 + t5769;
t4038 = (t4626 * t5379 - t4630 * t5730) * t4690 + t5768;
t4747 = t3967 * t5148 - t3995 * t5197;
t4746 = t3968 * t5148 - t3998 * t5197;
t4745 = t3969 * t5146 - t3996 * t5196;
t4744 = t3970 * t5146 - t3999 * t5196;
t4743 = t3971 * t5144 - t3997 * t5195;
t4742 = t3972 * t5144 - t4000 * t5195;
t4741 = t3973 * t5142 - t4001 * t5194;
t4740 = t3974 * t5142 - t4004 * t5194;
t4739 = t3975 * t5140 - t4002 * t5193;
t4738 = t3976 * t5140 - t4005 * t5193;
t4737 = t3977 * t5138 - t4003 * t5192;
t4736 = t3978 * t5138 - t4006 * t5192;
t4722 = t3968 * t4873 + t3998 * t4867;
t4721 = t3970 * t4872 + t3999 * t4866;
t4720 = t3972 * t4871 + t4000 * t4865;
t4719 = t3974 * t4870 + t4004 * t4864;
t4718 = t3976 * t4869 + t4005 * t4863;
t4717 = t3978 * t4868 + t4006 * t4862;
t4494 = t4575 + t4690 / 0.2e1;
t4363 = t5683 * t5389;
t4342 = t4626 * t5377 - t4629 * t5367;
t4341 = -t4626 * t5368 - t4629 * t5376;
t4317 = t4565 * t4691 + t4625 * t5762;
t4297 = t4522 * t4690 + t5085;
t4266 = -t4627 * t5683 - 0.2e1 * t5073;
t4265 = -t4630 * t5683 + 0.2e1 * t5074;
t4225 = t4797 - t5692;
t4117 = -t4692 * t5371 - t4701 * t5720 + t5375 * t5691;
t4097 = t4469 * t4627 + t4630 * t5682;
t4079 = t4566 * t5720 + t4691 * t5582 + t5419 * t5691;
t4070 = t4523 * t4690 - t4575 * t5692 + t4797 * t5691;
t4069 = t4306 * t5376 + t5750;
t4068 = t4306 * t5367 - t5751;
t4067 = t4305 * t5376 + t5752;
t4066 = t4305 * t5367 - t5753;
t4065 = t4304 * t5376 + t5754;
t4064 = t4304 * t5367 - t5755;
t4063 = t4303 * t5376 + t5756;
t4062 = t4303 * t5367 - t5757;
t4061 = t4302 * t5376 + t5758;
t4060 = t4302 * t5367 - t5759;
t4059 = t4301 * t5376 + t5760;
t4058 = t4301 * t5367 - t5761;
t4014 = t4630 * t4117 - t4627 * t4766;
t4013 = t4627 * t4117 + t4630 * t4766;
t3988 = (-t4287 * t4628 + t5649 - (-0.2e1 * t4596 + 0.1e1) * t5299) * t4597 - t4072 * t5388 + t4691 * t4334;
t3987 = (-t4225 * t5387 + t4627 * (-t4596 * t5763 - t5395 * t5683 + t4952)) * t4629 - (t4566 * t4625 + t5419) * t5389 + (-0.2e1 * t4597 + 0.1e1) * t5370;
t3986 = t5399 * t5650 + ((-t4363 - 0.2e1 * t5369) * t4596 + t4265 * t5395 - t5692 * t5389 + t5369) * t4629 + (-t4565 * t5387 - t4566 * t4627) * t4628 - (-t4565 * t4627 + t4566 * t5387) * t4625;
t3979 = t4522 - t4797 - t5767;
t3957 = (-0.2e1 * t5743 - 0.2e1 * t4435 - (-0.4e1 * t4596 + 0.2e1) * t5390) * t4598 - t5764 * t5378 + t4071;
t3951 = t4032 * t4626 + t4306 * t4341 + (-t4158 * t4691 - t5750) * t4629;
t3950 = -t4038 * t4626 - t4306 * t4342 + (t4691 * t5729 - t5751) * t4629;
t3949 = t4030 * t4626 + t4305 * t4341 + (-t4156 * t4691 - t5752) * t4629;
t3948 = -t4037 * t4626 - t4305 * t4342 + (t4691 * t5728 - t5753) * t4629;
t3947 = t4028 * t4626 + t4304 * t4341 + (-t4154 * t4691 - t5754) * t4629;
t3946 = -t4036 * t4626 - t4304 * t4342 + (t4691 * t5727 - t5755) * t4629;
t3945 = t4026 * t4626 + t4303 * t4341 + (-t4152 * t4691 - t5756) * t4629;
t3944 = -t4035 * t4626 - t4303 * t4342 + (t4691 * t5726 - t5757) * t4629;
t3943 = t4024 * t4626 + t4302 * t4341 + (-t4150 * t4691 - t5758) * t4629;
t3942 = -t4034 * t4626 - t4302 * t4342 + (t4691 * t5725 - t5759) * t4629;
t3941 = t4022 * t4626 + t4301 * t4341 + (-t4148 * t4691 - t5760) * t4629;
t3940 = -t4033 * t4626 - t4301 * t4342 + (t4691 * t5724 - t5761) * t4629;
t3927 = -t5431 + (t5011 - (t5647 - 0.2e1) * t5415) * t4628 + t4523 + t5431 * t4597 + t5699 + t5767;
t3925 = (-t4032 - t5479) * t4630 + (t4038 - t5473) * t4627;
t3924 = (-t4030 - t5480) * t4630 + (t4037 - t5474) * t4627;
t3923 = (-t4028 - t5481) * t4630 + (t4036 - t5475) * t4627;
t3922 = (-t4026 - t5482) * t4630 + (t4035 - t5476) * t4627;
t3921 = (-t4024 - t5483) * t4630 + (t4034 - t5477) * t4627;
t3920 = (-t4022 - t5484) * t4630 + (t4033 - t5478) * t4627;
t3919 = -t4597 * t5721 + (t4266 * t5400 + (t4287 * t5387 - t4317 * t4627) * t4628 - 0.2e1 * t4310 * t5387 - t4297 * t4627) * t4629 + (t4265 * t4596 - (-t4630 * t5763 - t4363) * t5395 + t4523 * t4630 - t5074) * t4691;
t3918 = t4072 * t5399 + (t4265 * t5400 + (-t4287 * t5389 - t4317 * t4630) * t4628 + 0.2e1 * t4310 * t5389 - t4297 * t4630) * t4629 - t4691 * (t4266 * t4596 + (t4627 * t5763 - t5387 * t5683) * t5395 + t4523 * t4627 + t5073);
t3917 = -t5729 * t4341 + t4158 * t4342 + (t4032 * t4627 + t4038 * t4630) * t4629;
t3916 = -t5728 * t4341 + t4156 * t4342 + (t4030 * t4627 + t4037 * t4630) * t4629;
t3915 = -t5727 * t4341 + t4154 * t4342 + (t4028 * t4627 + t4036 * t4630) * t4629;
t3914 = -t5726 * t4341 + t4152 * t4342 + (t4026 * t4627 + t4035 * t4630) * t4629;
t3913 = -t5725 * t4341 + t4150 * t4342 + (t4024 * t4627 + t4034 * t4630) * t4629;
t3912 = -t5724 * t4341 + t4148 * t4342 + (t4022 * t4627 + t4033 * t4630) * t4629;
t3911 = (t4627 * t5213 - t5721) * t4597 + (t4627 * t4070 - t4630 * t5675) * t4629 - t4079 * t4630 - t4334 * t4627 * t4507;
t3910 = (t4072 * t4627 + t4630 * t5213) * t4597 + (t4630 * t4070 + t4627 * t5675) * t4629 + t4079 * t4627 - t4507 * t5370;
t3909 = (t5765 * t4628 + t5700) * t4598 + t5072 + ((-t4628 * t5684 - t5686) * t4598 + t5295 * t4628 + t5053) * t4629 + (-t5430 * t4628 + t4952 - t5210) * t5691;
t3908 = t4988 * t5431 + t4494 * t4628 * t5211 + t5119 + t4523 * t4507 + (-t4628 * t4988 * t5763 - 0.2e1 * t4494 * t5418) * t4625 + t5280;
t3907 = (-t4507 * t5683 - 0.2e1 * t5055) * t4596 + (-t4317 * t4626 + (-t5117 + 0.2e1 * t5294) * t4625) * t4628 + t5055 - t4297 * t4626 - t4522 * t4692 + t5280;
t3894 = ((t4629 * t5684 - t5765) * t4628 + t5686 * t4629 - t5700) * t4598 - t5072 + (-t4936 - (-t5691 + t5298) * t5763) * t4596 + ((-t4271 - t5295) * t4629 + t4818 + t4996) * t4628 + (-t4252 - t5053) * t4629 - t4817 + t5736;
t3893 = (t4003 * t4306 - t4006 * t5729) * t3966;
t3892 = (t4002 * t4305 - t4005 * t5728) * t3965;
t3891 = (t4001 * t4304 - t4004 * t5727) * t3964;
t3890 = (t3997 * t4303 - t4000 * t5726) * t3963;
t3889 = (t3996 * t4302 - t3999 * t5725) * t3962;
t3888 = (t3995 * t4301 - t3998 * t5724) * t3961;
t3869 = t4158 * t5555 - t4306;
t3868 = t4156 * t5556 - t4305;
t3867 = t4154 * t5557 - t4304;
t3866 = t4152 * t5561 - t4303;
t3865 = t4150 * t5562 - t4302;
t3864 = t4148 * t5563 - t4301;
t3863 = -t4158 * t5558 + t5729;
t3862 = -t4156 * t5559 + t5728;
t3861 = -t4154 * t5560 + t5727;
t3860 = -t4152 * t5564 + t5726;
t3859 = -t4150 * t5565 + t5725;
t3858 = -t4148 * t5566 + t5724;
t3857 = (t3977 * t4306 - t3978 * t5729) * t3933;
t3856 = (t3975 * t4305 - t3976 * t5728) * t3932;
t3855 = (t3973 * t4304 - t3974 * t5727) * t3931;
t3854 = (t3971 * t4303 - t3972 * t5726) * t3930;
t3853 = (t3969 * t4302 - t3970 * t5725) * t3929;
t3852 = (t3967 * t4301 - t3968 * t5724) * t3928;
t3821 = t3906 * t5519 + t4736;
t3820 = t3905 * t5520 + t4738;
t3819 = t3904 * t5521 + t4740;
t3818 = t3903 * t5519 + t4737;
t3817 = t3902 * t5520 + t4739;
t3816 = t3901 * t5521 + t4741;
t3815 = -t3906 * t5198 + t4768;
t3814 = -t3905 * t5199 + t4772;
t3813 = -t3904 * t5200 + t4776;
t3812 = -t3903 * t5198 + t4770;
t3811 = -t3902 * t5199 + t4774;
t3810 = -t3901 * t5200 + t4778;
t3809 = t3900 * t5522 + t4742;
t3808 = t3899 * t5523 + t4744;
t3807 = t3898 * t5524 + t4746;
t3806 = t3897 * t5522 + t4743;
t3805 = t3896 * t5523 + t4745;
t3804 = t3895 * t5524 + t4747;
t3803 = -t3900 * t5201 + t4780;
t3802 = -t3899 * t5202 + t4784;
t3801 = -t3898 * t5203 + t4788;
t3800 = -t3897 * t5201 + t4782;
t3799 = -t3896 * t5202 + t4786;
t3798 = -t3895 * t5203 + t4790;
t3797 = (t3903 * t4306 - t3906 * t5729) * t3960;
t3796 = (t3902 * t4305 - t3905 * t5728) * t3959;
t3795 = (t3901 * t4304 - t3904 * t5727) * t3958;
t3794 = (t3897 * t4303 - t3900 * t5726) * t3955;
t3793 = (t3896 * t4302 - t3899 * t5725) * t3954;
t3792 = (t3895 * t4301 - t3898 * t5724) * t3953;
t3791 = t3906 * t5132 + t4769;
t3790 = t3905 * t5133 + t4773;
t3789 = t3904 * t5134 + t4777;
t3788 = t3903 * t5132 + t4771;
t3787 = t3902 * t5133 + t4775;
t3786 = t3901 * t5134 + t4779;
t3785 = t3900 * t5135 + t4781;
t3784 = t3899 * t5136 + t4785;
t3783 = t3898 * t5137 + t4789;
t3782 = t3897 * t5135 + t4783;
t3781 = t3896 * t5136 + t4787;
t3780 = t3895 * t5137 + t4791;
t3779 = t3869 * t4639 + t4158 * t4736;
t3778 = t3868 * t4639 + t4156 * t4738;
t3777 = t3867 * t4639 + t4154 * t4740;
t3776 = -t3869 * t5625 + t4158 * t4768;
t3775 = -t3868 * t5626 + t4156 * t4772;
t3774 = -t3867 * t5627 + t4154 * t4776;
t3773 = t3863 * t4639 - t4158 * t4737;
t3772 = t3862 * t4639 - t4156 * t4739;
t3771 = t3861 * t4639 - t4154 * t4741;
t3770 = -t3863 * t5625 - t4158 * t4770;
t3769 = -t3862 * t5626 - t4156 * t4774;
t3768 = -t3861 * t5627 - t4154 * t4778;
t3767 = t3866 * t4639 + t4152 * t4742;
t3766 = t3865 * t4639 + t4150 * t4744;
t3765 = t3864 * t4639 + t4148 * t4746;
t3764 = -t3866 * t5628 + t4152 * t4780;
t3763 = -t3865 * t5629 + t4150 * t4784;
t3762 = -t3864 * t5630 + t4148 * t4788;
t3761 = t3860 * t4639 - t4152 * t4743;
t3760 = t3859 * t4639 - t4150 * t4745;
t3759 = t3858 * t4639 - t4148 * t4747;
t3758 = -t3860 * t5628 - t4152 * t4782;
t3757 = -t3859 * t5629 - t4150 * t4786;
t3756 = -t3858 * t5630 - t4148 * t4790;
t3755 = t3869 * t5470 + t4158 * t4769;
t3754 = t3868 * t5471 + t4156 * t4773;
t3753 = t3867 * t5472 + t4154 * t4777;
t3752 = t3863 * t5470 - t4158 * t4771;
t3751 = t3862 * t5471 - t4156 * t4775;
t3750 = t3861 * t5472 - t4154 * t4779;
t3749 = t3866 * t5485 + t4152 * t4781;
t3748 = t3865 * t5486 + t4150 * t4785;
t3747 = t3864 * t5487 + t4148 * t4789;
t3746 = t3860 * t5485 - t4152 * t4783;
t3745 = t3859 * t5486 - t4150 * t4787;
t3744 = t3858 * t5487 - t4148 * t4791;
t3743 = t3797 * t4639 + t3857 * t5470 - t3893 * t5625;
t3742 = t3796 * t4639 + t3856 * t5471 - t3892 * t5626;
t3741 = t3795 * t4639 + t3855 * t5472 - t3891 * t5627;
t3740 = -t3797 * t5625 + t3857 * t4138 + t3893 * t4569;
t3739 = -t3796 * t5626 + t3856 * t4137 + t3892 * t4569;
t3738 = -t3795 * t5627 + t3855 * t4136 + t3891 * t4569;
t3737 = t3794 * t4639 + t3854 * t5485 - t3890 * t5628;
t3736 = t3793 * t4639 + t3853 * t5486 - t3889 * t5629;
t3735 = t3792 * t4639 + t3852 * t5487 - t3888 * t5630;
t3734 = -t3794 * t5628 + t3854 * t4116 + t3890 * t4569;
t3733 = -t3793 * t5629 + t3853 * t4115 + t3889 * t4569;
t3732 = -t3792 * t5630 + t3852 * t4114 + t3888 * t4569;
t3731 = t3797 * t5470 + t3857 * t4044 + t3893 * t4138;
t3730 = t3796 * t5471 + t3856 * t4043 + t3892 * t4137;
t3729 = t3795 * t5472 + t3855 * t4042 + t3891 * t4136;
t3728 = t3794 * t5485 + t3854 * t4041 + t3890 * t4116;
t3727 = t3793 * t5486 + t3853 * t4040 + t3889 * t4115;
t3726 = t3792 * t5487 + t3852 * t4039 + t3888 * t4114;
t3713 = t3791 * t5533 + t3815 * t5497 + t3821 * t5555;
t3712 = t3791 * t5534 + t3815 * t5498 + t3821 * t5558;
t3711 = t3790 * t5537 + t3814 * t5501 + t3820 * t5556;
t3710 = t3790 * t5538 + t3814 * t5502 + t3820 * t5559;
t3709 = t3789 * t5541 + t3813 * t5505 + t3819 * t5557;
t3708 = t3789 * t5542 + t3813 * t5506 + t3819 * t5560;
t3707 = t3788 * t5533 + t3812 * t5497 + t3818 * t5555;
t3706 = t3788 * t5534 + t3812 * t5498 + t3818 * t5558;
t3705 = t3787 * t5537 + t3811 * t5501 + t3817 * t5556;
t3704 = t3787 * t5538 + t3811 * t5502 + t3817 * t5559;
t3703 = t3786 * t5541 + t3810 * t5505 + t3816 * t5557;
t3702 = t3786 * t5542 + t3810 * t5506 + t3816 * t5560;
t3701 = t3785 * t5545 + t3803 * t5509 + t3809 * t5561;
t3700 = t3785 * t5546 + t3803 * t5510 + t3809 * t5564;
t3699 = t3784 * t5549 + t3802 * t5513 + t3808 * t5562;
t3698 = t3784 * t5550 + t3802 * t5514 + t3808 * t5565;
t3697 = t3783 * t5553 + t3801 * t5517 + t3807 * t5563;
t3696 = t3783 * t5554 + t3801 * t5518 + t3807 * t5566;
t3695 = t3782 * t5545 + t3800 * t5509 + t3806 * t5561;
t3694 = t3782 * t5546 + t3800 * t5510 + t3806 * t5564;
t3693 = t3781 * t5549 + t3799 * t5513 + t3805 * t5562;
t3692 = t3781 * t5550 + t3799 * t5514 + t3805 * t5565;
t3691 = t3780 * t5553 + t3798 * t5517 + t3804 * t5563;
t3690 = t3780 * t5554 + t3798 * t5518 + t3804 * t5566;
t3689 = t3755 * t5533 + t3776 * t5497 + t3779 * t5555;
t3688 = t3755 * t5534 + t3776 * t5498 + t3779 * t5558;
t3687 = t3754 * t5537 + t3775 * t5501 + t3778 * t5556;
t3686 = t3754 * t5538 + t3775 * t5502 + t3778 * t5559;
t3685 = t3753 * t5541 + t3774 * t5505 + t3777 * t5557;
t3684 = t3753 * t5542 + t3774 * t5506 + t3777 * t5560;
t3683 = t3752 * t5533 + t3770 * t5497 + t3773 * t5555;
t3682 = t3752 * t5534 + t3770 * t5498 + t3773 * t5558;
t3681 = t3751 * t5537 + t3769 * t5501 + t3772 * t5556;
t3680 = t3751 * t5538 + t3769 * t5502 + t3772 * t5559;
t3679 = t3750 * t5541 + t3768 * t5505 + t3771 * t5557;
t3678 = t3750 * t5542 + t3768 * t5506 + t3771 * t5560;
t3677 = t3749 * t5545 + t3764 * t5509 + t3767 * t5561;
t3676 = t3749 * t5546 + t3764 * t5510 + t3767 * t5564;
t3675 = t3748 * t5549 + t3763 * t5513 + t3766 * t5562;
t3674 = t3748 * t5550 + t3763 * t5514 + t3766 * t5565;
t3673 = t3747 * t5553 + t3762 * t5517 + t3765 * t5563;
t3672 = t3747 * t5554 + t3762 * t5518 + t3765 * t5566;
t3671 = t3746 * t5545 + t3758 * t5509 + t3761 * t5561;
t3670 = t3746 * t5546 + t3758 * t5510 + t3761 * t5564;
t3669 = t3745 * t5549 + t3757 * t5513 + t3760 * t5562;
t3668 = t3745 * t5550 + t3757 * t5514 + t3760 * t5565;
t3667 = t3744 * t5553 + t3756 * t5517 + t3759 * t5563;
t3666 = t3744 * t5554 + t3756 * t5518 + t3759 * t5566;
t3665 = t3731 * t5533 + t3740 * t5497 + t3743 * t5555;
t3664 = t3731 * t5534 + t3740 * t5498 + t3743 * t5558;
t3663 = t3730 * t5537 + t3739 * t5501 + t3742 * t5556;
t3662 = t3730 * t5538 + t3739 * t5502 + t3742 * t5559;
t3661 = t3729 * t5541 + t3738 * t5505 + t3741 * t5557;
t3660 = t3729 * t5542 + t3738 * t5506 + t3741 * t5560;
t3659 = t3728 * t5545 + t3734 * t5509 + t3737 * t5561;
t3658 = t3728 * t5546 + t3734 * t5510 + t3737 * t5564;
t3657 = t3727 * t5549 + t3733 * t5513 + t3736 * t5562;
t3656 = t3727 * t5550 + t3733 * t5514 + t3736 * t5565;
t3655 = t3726 * t5553 + t3732 * t5517 + t3735 * t5563;
t3654 = t3726 * t5554 + t3732 * t5518 + t3735 * t5566;
t1 = [(t3710 * t4066 + t3711 * t3924 + t3820 * t4067 + t3712 * t4068 + t3713 * t3925 + t3821 * t4069 + t3698 * t4060 + t3699 * t3921 + t3808 * t4061 + t3700 * t4062 + t3701 * t3922 + t3809 * t4063 + t3708 * t4064 + t3709 * t3923 + t3819 * t4065 + t3696 * t4058 + t3697 * t3920 + t3807 * t4059) * t4691 + ((t4013 * t4630 - t4014 * t4627 + t4086 * t5367 - t4097 * t5376) * t4691 + (-t4013 * t4627 * t4629 - t4014 * t5374 + t4086 * t4341 + t4097 * t4342) * t4690) * m(4) + (t3696 * t4022 + t3698 * t4024 + t3700 * t4026 + t3708 * t4028 + t3710 * t4030 + t3712 * t4032 - t3807 * t4033 - t3808 * t4034 - t3809 * t4035 - t3819 * t4036 - t3820 * t4037 - t3821 * t4038) * t4692 + t4717 + (t3698 * t3943 + t3699 * t3913 + t3808 * t3942 + t3700 * t3945 + t3701 * t3914 + t3809 * t3944 + t3708 * t3947 + t3709 * t3915 + t3819 * t3946 + t3696 * t3941 + t3697 * t3912 + t3807 * t3940 + t3710 * t3949 + t3711 * t3916 + t3820 * t3948 + t3712 * t3951 + t3713 * t3917 + t3821 * t3950) * t4690 + t3898 * t5019 + t3899 * t5018 + t3900 * t5017 + t3904 * t5016 + t3905 * t5015 + t3906 * t5014 + t4718 + t4719 + t4720 + t4721 + t4722; t4003 * t4862 + t4002 * t4863 + t4001 * t4864 + t3997 * t4865 + t3996 * t4866 + t3995 * t4867 + t3977 * t4868 + t3975 * t4869 + t3973 * t4870 + t3971 * t4871 + t3969 * t4872 + t3967 * t4873 + t3903 * t5014 + t3902 * t5015 + t3901 * t5016 + t3897 * t5017 + t3896 * t5018 + t3895 * t5019 + (t3690 * t4022 + t3692 * t4024 + t3694 * t4026 + t3702 * t4028 + t3704 * t4030 + t3706 * t4032 - t3804 * t4033 - t3805 * t4034 - t3806 * t4035 - t3816 * t4036 - t3817 * t4037 - t3818 * t4038) * t4692 + (t3704 * t4066 + t3705 * t3924 + t3817 * t4067 + t3706 * t4068 + t3707 * t3925 + t3818 * t4069 + t3692 * t4060 + t3693 * t3921 + t3805 * t4061 + t3694 * t4062 + t3695 * t3922 + t3806 * t4063 + t3702 * t4064 + t3703 * t3923 + t3816 * t4065 + t3690 * t4058 + t3691 * t3920 + t3804 * t4059) * t4691 + (t3692 * t3943 + t3693 * t3913 + t3805 * t3942 + t3694 * t3945 + t3695 * t3914 + t3806 * t3944 + t3702 * t3947 + t3703 * t3915 + t3816 * t3946 + t3690 * t3941 + t3691 * t3912 + t3804 * t3940 + t3704 * t3949 + t3705 * t3916 + t3817 * t3948 + t3706 * t3951 + t3707 * t3917 + t3818 * t3950) * t4690 + ((-t4320 * t5367 - t5491) * t4691 + (-t4013 * t4626 - t4097 * t5372 - t4107 * t5374 - t4320 * t4341) * t4690 - t4013 * t4692) * m(4); t5288 + t5289 + t5290 + t5291 + t5292 + t5287 + (m(4) * t4014 + t3804 * t4022 + t3805 * t4024 + t3806 * t4026 + t3816 * t4028 + t3817 * t4030 + t3818 * t4032 + (-t4033 - t4034 - t4035 - t4036 - t4037 - t4038) * t4639) * t4692 + (t3817 * t4066 + t3820 * t3924 + t3818 * t4068 + t3821 * t3925 + t3805 * t4060 + t3808 * t3921 + t3806 * t4062 + t3809 * t3922 + t3816 * t4064 + t3819 * t3923 + t3804 * t4058 + t3807 * t3920 + (t4107 * t4630 - t4320 * t5376) * m(4) + (t4067 + t4069 + t4061 + t4063 + t4065 + t4059) * t4639) * t4691 + ((t4014 * t4626 + t4320 * t4342 + (-t4086 * t4691 - t5491) * t4629) * m(4) + t3805 * t3943 + t3808 * t3913 + t3806 * t3945 + t3809 * t3914 + t3816 * t3947 + t3819 * t3915 + t3804 * t3941 + t3807 * t3912 + t3817 * t3949 + t3820 * t3916 + t3818 * t3951 + t3821 * t3917 + (t3942 + t3944 + t3946 + t3940 + t3948 + t3950) * t4639) * t4690; t5287 * t3863 + t5288 * t3862 + t5289 * t3861 + t5290 * t3860 + t5291 * t3859 + t5292 * t3858 + (t3666 * t4022 + t3668 * t4024 + t3670 * t4026 + t3678 * t4028 + t3680 * t4030 + t3682 * t4032 - t3759 * t4033 - t3760 * t4034 - t3761 * t4035 - t3771 * t4036 - t3772 * t4037 - t3773 * t4038 + t3988) * t4692 + ((t3987 * t4692 + t3918) * t4630 + (-t3986 * t4692 + t3919) * t4627 + t3680 * t4066 + t3681 * t3924 + t3772 * t4067 + t3682 * t4068 + t3683 * t3925 + t3773 * t4069 + t3668 * t4060 + t3669 * t3921 + t3760 * t4061 + t3670 * t4062 + t3671 * t3922 + t3761 * t4063 + t3678 * t4064 + t3679 * t3923 + t3771 * t4065 + t3666 * t4058 + t3667 * t3920 + t3759 * t4059) * t4691 + (t3670 * t3945 + t3671 * t3914 + t3761 * t3944 + t3678 * t3947 + t3679 * t3915 + t3771 * t3946 + t3666 * t3941 + t3667 * t3912 + t3759 * t3940 + t3668 * t3943 + t3669 * t3913 + t3760 * t3942 + t3680 * t3949 + t3681 * t3916 + t3772 * t3948 + t3682 * t3951 + t3683 * t3917 + t3773 * t3950 + t3986 * t4342 + t3987 * t4341 + t3988 * t4626 + (-t3918 * t4627 + t3919 * t4630 + (t4225 * t4597 + t4334 * t5766 + t5582) * t4691) * t4629) * t4690 - (t4997 * t5498 + t5000 * t5534) * t4158 - (t4998 * t5502 + t5001 * t5538) * t4156 - (t4999 * t5506 + t5002 * t5542) * t4154 - (t5003 * t5510 + t5006 * t5546) * t4152 - (t5004 * t5514 + t5007 * t5550) * t4150 - (t5005 * t5518 + t5008 * t5554) * t4148; t5287 * t3869 + t5288 * t3868 + t5289 * t3867 + t5290 * t3866 + t5291 * t3865 + t5292 * t3864 + t4717 * t4158 + t4718 * t4156 + t4719 * t4154 + t4720 * t4152 + t4721 * t4150 + t4722 * t4148 + (t3686 * t4066 + t3687 * t3924 + t3778 * t4067 + t3688 * t4068 + t3689 * t3925 + t3779 * t4069 + t3674 * t4060 + t3675 * t3921 + t3766 * t4061 + t3676 * t4062 + t3677 * t3922 + t3767 * t4063 + t3684 * t4064 + t3685 * t3923 + t3777 * t4065 + t3672 * t4058 + t3673 * t3920 + t3765 * t4059 + t3894 * t4630 + t3907 * t4627) * t4691 + (t3910 * t4626 + t3927 * t4342 + t3957 * t4341 + t3676 * t3945 + t3677 * t3914 + t3767 * t3944 + t3684 * t3947 + t3685 * t3915 + t3777 * t3946 + t3672 * t3941 + t3673 * t3912 + t3765 * t3940 + t3674 * t3943 + t3675 * t3913 + t3766 * t3942 + t3686 * t3949 + t3687 * t3916 + t3778 * t3948 + t3688 * t3951 + t3689 * t3917 + t3779 * t3950 + (-t3894 * t4627 + t3907 * t4630 + t3986 * t4691) * t4629) * t4690 + (t3672 * t4022 - t3765 * t4033 + t3674 * t4024 - t3766 * t4034 + (-t3927 * t4627 + t3957 * t4630) * t4691 + t3910 + t3676 * t4026 - t3767 * t4035 + t3684 * t4028 - t3777 * t4036 + t3686 * t4030 - t3778 * t4037 + t3688 * t4032 - t3779 * t4038) * t4692; t4997 * t3893 + t4998 * t3892 + t4999 * t3891 + t5003 * t3890 + t5004 * t3889 + t5005 * t3888 + t5000 * t3857 + t5001 * t3856 + t5002 * t3855 + t5006 * t3854 + t5007 * t3853 + t5008 * t3852 + t5287 * t3797 + t5288 * t3796 + t5289 * t3795 + t5290 * t3794 + t5291 * t3793 + t5292 * t3792 + (t3662 * t4066 + t3663 * t3924 + t3742 * t4067 + t3664 * t4068 + t3665 * t3925 + t3743 * t4069 + t3656 * t4060 + t3657 * t3921 + t3736 * t4061 + t3658 * t4062 + t3659 * t3922 + t3737 * t4063 + t3660 * t4064 + t3661 * t3923 + t3741 * t4065 + t3654 * t4058 + t3655 * t3920 + t3735 * t4059 + t3908 * t4630 + t3909 * t4627) * t4691 + (t3911 * t4626 + t3957 * t4342 + t3979 * t4341 + t3658 * t3945 + t3659 * t3914 + t3737 * t3944 + t3660 * t3947 + t3661 * t3915 + t3741 * t3946 + t3654 * t3941 + t3655 * t3912 + t3735 * t3940 + t3656 * t3943 + t3657 * t3913 + t3736 * t3942 + t3662 * t3949 + t3663 * t3916 + t3742 * t3948 + t3664 * t3951 + t3665 * t3917 + t3743 * t3950 + (-t3908 * t4627 + t3909 * t4630 + t3987 * t4691) * t4629) * t4690 + (t3654 * t4022 - t3735 * t4033 + t3656 * t4024 - t3736 * t4034 + (-t3957 * t4627 + t3979 * t4630) * t4691 + t3658 * t4026 - t3737 * t4035 + t3660 * t4028 - t3741 * t4036 + t3662 * t4030 - t3742 * t4037 + t3664 * t4032 - t3743 * t4038 + t3911) * t4692;];
taucX  = t1;
