% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PRRRRR6V2G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x21]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-18 12:11
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin(xP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P1A0_gravload_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-18 08:43:02
% EndTime: 2019-05-18 08:52:07
% DurationCPUTime: 578.96s
% Computational Cost: add. (56925->3294), mult. (149472->6106), div. (252->30), fcn. (146502->74), ass. (0->2054)
t14798 = legFrame(3,1);
t14748 = cos(t14798);
t14816 = legFrame(3,2);
t14758 = sin(t14816);
t15609 = t14748 * t14758;
t14736 = sin(t14798);
t15639 = t14736 * t14758;
t14764 = cos(t14816);
t15932 = t14764 * g(1);
t14353 = -g(2) * t15639 + g(3) * t15609 - t15932;
t14659 = g(2) * t14748 + g(3) * t14736;
t14781 = sin(pkin(10));
t14785 = cos(pkin(10));
t14185 = -t14353 * t14781 - t14659 * t14785;
t14359 = g(1) * t14758 + (-g(2) * t14736 + g(3) * t14748) * t14764;
t14792 = legFrame(3,3);
t14730 = sin(t14792);
t14742 = cos(t14792);
t14784 = sin(pkin(4));
t14788 = cos(pkin(4));
t14971 = t14353 * t14785 - t14659 * t14781;
t13727 = -t14359 * t14784 + (t14185 * t14742 - t14730 * t14971) * t14788;
t14820 = sin(qJ(2,3));
t14826 = cos(qJ(2,3));
t16093 = t14185 * t14730 + t14742 * t14971;
t13562 = t14820 * t13727 + t14826 * t16093;
t14799 = legFrame(2,1);
t14749 = cos(t14799);
t14817 = legFrame(2,2);
t14759 = sin(t14817);
t15604 = t14749 * t14759;
t14737 = sin(t14799);
t15634 = t14737 * t14759;
t14765 = cos(t14817);
t15931 = t14765 * g(1);
t14354 = -g(2) * t15634 + g(3) * t15604 - t15931;
t14660 = g(2) * t14749 + g(3) * t14737;
t14186 = -t14354 * t14781 - t14660 * t14785;
t14360 = g(1) * t14759 + (-g(2) * t14737 + g(3) * t14749) * t14765;
t14793 = legFrame(2,3);
t14731 = sin(t14793);
t14743 = cos(t14793);
t14970 = t14354 * t14785 - t14660 * t14781;
t13728 = -t14360 * t14784 + (t14186 * t14743 - t14731 * t14970) * t14788;
t14822 = sin(qJ(2,2));
t14828 = cos(qJ(2,2));
t16092 = t14731 * t14186 + t14743 * t14970;
t13563 = t14822 * t13728 + t14828 * t16092;
t14800 = legFrame(1,1);
t14750 = cos(t14800);
t14818 = legFrame(1,2);
t14760 = sin(t14818);
t15599 = t14750 * t14760;
t14738 = sin(t14800);
t15629 = t14738 * t14760;
t14766 = cos(t14818);
t15930 = t14766 * g(1);
t14355 = -g(2) * t15629 + g(3) * t15599 - t15930;
t14661 = g(2) * t14750 + g(3) * t14738;
t14187 = -t14355 * t14781 - t14661 * t14785;
t14361 = g(1) * t14760 + (-g(2) * t14738 + g(3) * t14750) * t14766;
t14794 = legFrame(1,3);
t14732 = sin(t14794);
t14744 = cos(t14794);
t14969 = t14355 * t14785 - t14661 * t14781;
t13729 = -t14361 * t14784 + (t14187 * t14744 - t14732 * t14969) * t14788;
t14824 = sin(qJ(2,1));
t14830 = cos(qJ(2,1));
t16091 = t14732 * t14187 + t14744 * t14969;
t13564 = t13729 * t14824 + t14830 * t16091;
t14787 = cos(pkin(5));
t14774 = t14787 ^ 2;
t15995 = t14774 - 0.1e1;
t14831 = xP(6);
t14767 = sin(t14831);
t14832 = xP(5);
t14768 = sin(t14832);
t14770 = cos(t14831);
t14833 = xP(4);
t14772 = cos(t14833);
t14851 = koppelP(1,1);
t15514 = t14772 * t14851;
t14845 = koppelP(1,2);
t15520 = t14772 * t14845;
t14769 = sin(t14833);
t15535 = t14769 * t14851;
t15541 = t14769 * t14845;
t14205 = -(t14768 * t15520 + t15535) * t14767 + (t14768 * t15514 - t15541) * t14770;
t14771 = cos(t14832);
t14839 = koppelP(1,3);
t14550 = t14732 * t14785 + t14744 * t14781;
t15760 = t14550 * t14784;
t14883 = t14839 * t15760;
t15567 = t14760 * t14785;
t15568 = t14760 * t14781;
t15627 = t14738 * t14785;
t15628 = t14738 * t14781;
t14963 = (t14750 * t15568 + t15627) * t14744 + (t14750 * t15567 - t15628) * t14732;
t15425 = t14788 * t14839;
t15160 = t14768 * t15425;
t15461 = t14784 * t14839;
t15166 = t14768 * t15461;
t15190 = t14760 * t15425;
t15566 = t14760 * t14788;
t14624 = -t14767 * t14845 + t14770 * t14851;
t15700 = t14624 * t14788;
t15701 = t14624 * t14784;
t15485 = t14784 * t14785;
t15507 = t14781 * t14784;
t16105 = t14732 * t15485 + t14744 * t15507;
t16117 = -(t14772 * t15190 + t14963 * t15701) * t14771 - t14963 * t15166 + t14205 * t15566 + t14766 * (t14750 * t15160 + t16105 * t14205 + (t14750 * t15700 - t14772 * t14883) * t14771);
t14204 = (t14768 * t15535 + t15520) * t14770 + t14767 * (-t14768 * t15541 + t15514);
t15597 = t14750 * t14785;
t15598 = t14750 * t14781;
t16099 = (t14738 * t15567 + t15598) * t14732 - (-t14738 * t15568 + t15597) * t14744;
t16116 = (-t14769 * t15190 - t15701 * t16099) * t14771 + t14204 * t15566 - t16099 * t15166 + t14766 * (t14738 * t15160 + t16105 * t14204 + (t14738 * t15700 - t14769 * t14883) * t14771);
t14850 = koppelP(2,1);
t15515 = t14772 * t14850;
t14844 = koppelP(2,2);
t15521 = t14772 * t14844;
t15536 = t14769 * t14850;
t15542 = t14769 * t14844;
t14203 = -(t14768 * t15521 + t15536) * t14767 + (t14768 * t15515 - t15542) * t14770;
t14838 = koppelP(2,3);
t14549 = t14731 * t14785 + t14743 * t14781;
t15761 = t14549 * t14784;
t14884 = t14838 * t15761;
t15572 = t14759 * t14785;
t15573 = t14759 * t14781;
t15632 = t14737 * t14785;
t15633 = t14737 * t14781;
t14964 = (t14749 * t15573 + t15632) * t14743 + (t14749 * t15572 - t15633) * t14731;
t15426 = t14788 * t14838;
t15161 = t14768 * t15426;
t15462 = t14784 * t14838;
t15167 = t14768 * t15462;
t15196 = t14759 * t15426;
t15571 = t14759 * t14788;
t14623 = -t14767 * t14844 + t14770 * t14850;
t15703 = t14623 * t14788;
t15704 = t14623 * t14784;
t16104 = t14731 * t15485 + t14743 * t15507;
t16115 = -(t14772 * t15196 + t14964 * t15704) * t14771 - t14964 * t15167 + t14203 * t15571 + t14765 * (t14749 * t15161 + t16104 * t14203 + (t14749 * t15703 - t14772 * t14884) * t14771);
t14202 = (t14768 * t15536 + t15521) * t14770 + t14767 * (-t14768 * t15542 + t15515);
t15602 = t14749 * t14785;
t15603 = t14749 * t14781;
t16098 = (t14737 * t15572 + t15603) * t14731 - (-t14737 * t15573 + t15602) * t14743;
t16114 = (-t14769 * t15196 - t15704 * t16098) * t14771 + t14202 * t15571 - t16098 * t15167 + t14765 * (t14737 * t15161 + t16104 * t14202 + (t14737 * t15703 - t14769 * t14884) * t14771);
t14849 = koppelP(3,1);
t15516 = t14772 * t14849;
t14843 = koppelP(3,2);
t15522 = t14772 * t14843;
t15537 = t14769 * t14849;
t15543 = t14769 * t14843;
t14201 = -(t14768 * t15522 + t15537) * t14767 + (t14768 * t15516 - t15543) * t14770;
t14837 = koppelP(3,3);
t14548 = t14730 * t14785 + t14742 * t14781;
t15762 = t14548 * t14784;
t14885 = t14837 * t15762;
t15577 = t14758 * t14785;
t15578 = t14758 * t14781;
t15637 = t14736 * t14785;
t15638 = t14736 * t14781;
t14965 = (t14748 * t15578 + t15637) * t14742 + (t14748 * t15577 - t15638) * t14730;
t15427 = t14788 * t14837;
t15162 = t14768 * t15427;
t15463 = t14784 * t14837;
t15168 = t14768 * t15463;
t15202 = t14758 * t15427;
t15576 = t14758 * t14788;
t14622 = -t14767 * t14843 + t14770 * t14849;
t15706 = t14622 * t14788;
t15707 = t14622 * t14784;
t16103 = t14730 * t15485 + t14742 * t15507;
t16113 = -(t14772 * t15202 + t14965 * t15707) * t14771 - t14965 * t15168 + t14201 * t15576 + t14764 * (t14748 * t15162 + t16103 * t14201 + (t14748 * t15706 - t14772 * t14885) * t14771);
t14200 = (t14768 * t15537 + t15522) * t14770 + t14767 * (-t14768 * t15543 + t15516);
t15607 = t14748 * t14785;
t15608 = t14748 * t14781;
t16097 = (t14736 * t15577 + t15608) * t14730 - (-t14736 * t15578 + t15607) * t14742;
t16112 = (-t14769 * t15202 - t15707 * t16097) * t14771 + t14200 * t15576 - t16097 * t15168 + t14764 * (t14736 * t15162 + t16103 * t14200 + (t14736 * t15706 - t14769 * t14885) * t14771);
t14848 = koppelP(4,1);
t15517 = t14772 * t14848;
t14842 = koppelP(4,2);
t15523 = t14772 * t14842;
t15538 = t14769 * t14848;
t15544 = t14769 * t14842;
t14199 = -(t14768 * t15523 + t15538) * t14767 + (t14768 * t15517 - t15544) * t14770;
t14797 = legFrame(4,1);
t14747 = cos(t14797);
t14815 = legFrame(4,2);
t14763 = cos(t14815);
t14836 = koppelP(4,3);
t14791 = legFrame(4,3);
t14729 = sin(t14791);
t14741 = cos(t14791);
t14547 = t14729 * t14785 + t14741 * t14781;
t15763 = t14547 * t14784;
t14886 = t14836 * t15763;
t14757 = sin(t14815);
t15582 = t14757 * t14785;
t15583 = t14757 * t14781;
t14735 = sin(t14797);
t15642 = t14735 * t14785;
t15643 = t14735 * t14781;
t14966 = (t14747 * t15583 + t15642) * t14741 + (t14747 * t15582 - t15643) * t14729;
t15428 = t14788 * t14836;
t15163 = t14768 * t15428;
t15464 = t14784 * t14836;
t15169 = t14768 * t15464;
t15208 = t14757 * t15428;
t15581 = t14757 * t14788;
t14621 = -t14767 * t14842 + t14770 * t14848;
t15709 = t14621 * t14788;
t15710 = t14621 * t14784;
t16102 = t14729 * t15485 + t14741 * t15507;
t16111 = -(t14772 * t15208 + t14966 * t15710) * t14771 - t14966 * t15169 + t14199 * t15581 + t14763 * (t14747 * t15163 + t16102 * t14199 + (t14747 * t15709 - t14772 * t14886) * t14771);
t14198 = (t14768 * t15538 + t15523) * t14770 + t14767 * (-t14768 * t15544 + t15517);
t15612 = t14747 * t14785;
t15613 = t14747 * t14781;
t16096 = (t14735 * t15582 + t15613) * t14729 - (-t14735 * t15583 + t15612) * t14741;
t16110 = (-t14769 * t15208 - t15710 * t16096) * t14771 + t14198 * t15581 - t16096 * t15169 + t14763 * (t14735 * t15163 + t16102 * t14198 + (t14735 * t15709 - t14769 * t14886) * t14771);
t14847 = koppelP(5,1);
t15518 = t14772 * t14847;
t14841 = koppelP(5,2);
t15524 = t14772 * t14841;
t15539 = t14769 * t14847;
t15545 = t14769 * t14841;
t14197 = -(t14768 * t15524 + t15539) * t14767 + (t14768 * t15518 - t15545) * t14770;
t14796 = legFrame(5,1);
t14746 = cos(t14796);
t14814 = legFrame(5,2);
t14762 = cos(t14814);
t14835 = koppelP(5,3);
t14790 = legFrame(5,3);
t14728 = sin(t14790);
t14740 = cos(t14790);
t14546 = t14728 * t14785 + t14740 * t14781;
t15764 = t14546 * t14784;
t14887 = t14835 * t15764;
t14756 = sin(t14814);
t15587 = t14756 * t14785;
t15588 = t14756 * t14781;
t14734 = sin(t14796);
t15647 = t14734 * t14785;
t15648 = t14734 * t14781;
t14967 = (t14746 * t15588 + t15647) * t14740 + (t14746 * t15587 - t15648) * t14728;
t15429 = t14788 * t14835;
t15164 = t14768 * t15429;
t15465 = t14784 * t14835;
t15170 = t14768 * t15465;
t15214 = t14756 * t15429;
t15586 = t14756 * t14788;
t14620 = -t14767 * t14841 + t14770 * t14847;
t15712 = t14620 * t14788;
t15713 = t14620 * t14784;
t16101 = t14728 * t15485 + t14740 * t15507;
t16109 = -(t14772 * t15214 + t14967 * t15713) * t14771 - t14967 * t15170 + t14197 * t15586 + t14762 * (t14746 * t15164 + t16101 * t14197 + (t14746 * t15712 - t14772 * t14887) * t14771);
t14196 = (t14768 * t15539 + t15524) * t14770 + t14767 * (-t14768 * t15545 + t15518);
t15617 = t14746 * t14785;
t15618 = t14746 * t14781;
t16095 = (t14734 * t15587 + t15618) * t14728 - (-t14734 * t15588 + t15617) * t14740;
t16108 = (-t14769 * t15214 - t15713 * t16095) * t14771 + t14196 * t15586 - t16095 * t15170 + t14762 * (t14734 * t15164 + t16101 * t14196 + (t14734 * t15712 - t14769 * t14887) * t14771);
t14846 = koppelP(6,1);
t15519 = t14772 * t14846;
t14840 = koppelP(6,2);
t15525 = t14772 * t14840;
t15540 = t14769 * t14846;
t15546 = t14769 * t14840;
t14195 = -(t14768 * t15525 + t15540) * t14767 + (t14768 * t15519 - t15546) * t14770;
t14795 = legFrame(6,1);
t14745 = cos(t14795);
t14813 = legFrame(6,2);
t14761 = cos(t14813);
t14834 = koppelP(6,3);
t14789 = legFrame(6,3);
t14727 = sin(t14789);
t14739 = cos(t14789);
t14545 = t14727 * t14785 + t14739 * t14781;
t15765 = t14545 * t14784;
t14888 = t14834 * t15765;
t14755 = sin(t14813);
t15592 = t14755 * t14785;
t15593 = t14755 * t14781;
t14733 = sin(t14795);
t15652 = t14733 * t14785;
t15653 = t14733 * t14781;
t14968 = (t14745 * t15593 + t15652) * t14739 + (t14745 * t15592 - t15653) * t14727;
t15430 = t14788 * t14834;
t15165 = t14768 * t15430;
t15466 = t14784 * t14834;
t15171 = t14768 * t15466;
t15220 = t14755 * t15430;
t15591 = t14755 * t14788;
t14619 = -t14767 * t14840 + t14770 * t14846;
t15715 = t14619 * t14788;
t15716 = t14619 * t14784;
t16100 = t14727 * t15485 + t14739 * t15507;
t16107 = -(t14772 * t15220 + t14968 * t15716) * t14771 - t14968 * t15171 + t14195 * t15591 + t14761 * (t14745 * t15165 + t16100 * t14195 + (t14745 * t15715 - t14772 * t14888) * t14771);
t14194 = (t14768 * t15540 + t15525) * t14770 + t14767 * (-t14768 * t15546 + t15519);
t15622 = t14745 * t14785;
t15623 = t14745 * t14781;
t16094 = (t14733 * t15592 + t15623) * t14727 - (-t14733 * t15593 + t15622) * t14739;
t16106 = (-t14769 * t15220 - t15716 * t16094) * t14771 + t14194 * t15591 - t16094 * t15171 + t14761 * (t14733 * t15165 + t16100 * t14194 + (t14733 * t15715 - t14769 * t14888) * t14771);
t15431 = t14788 * t14830;
t14584 = t14781 * t15431 + t14785 * t14824;
t14593 = -t14781 * t14824 + t14785 * t15431;
t14954 = t14584 * t14744 + t14593 * t14732;
t15432 = t14788 * t14828;
t14583 = t14781 * t15432 + t14785 * t14822;
t14592 = -t14781 * t14822 + t14785 * t15432;
t14955 = t14583 * t14743 + t14592 * t14731;
t15433 = t14788 * t14826;
t14582 = t14781 * t15433 + t14785 * t14820;
t14591 = -t14781 * t14820 + t14785 * t15433;
t14956 = t14582 * t14742 + t14591 * t14730;
t14806 = sin(qJ(2,4));
t14812 = cos(qJ(2,4));
t15440 = t14788 * t14812;
t14565 = t14781 * t15440 + t14785 * t14806;
t14574 = -t14781 * t14806 + t14785 * t15440;
t14960 = t14565 * t14741 + t14574 * t14729;
t14804 = sin(qJ(2,5));
t14810 = cos(qJ(2,5));
t15441 = t14788 * t14810;
t14564 = t14781 * t15441 + t14785 * t14804;
t14573 = -t14781 * t14804 + t14785 * t15441;
t14961 = t14564 * t14740 + t14573 * t14728;
t14802 = sin(qJ(2,6));
t14808 = cos(qJ(2,6));
t15442 = t14788 * t14808;
t14563 = t14781 * t15442 + t14785 * t14802;
t14572 = -t14781 * t14802 + t14785 * t15442;
t14962 = t14563 * t14739 + t14572 * t14727;
t14807 = cos(qJ(3,6));
t14775 = t14807 ^ 2;
t15393 = 0.2e1 * t14775;
t14809 = cos(qJ(3,5));
t14776 = t14809 ^ 2;
t15392 = 0.2e1 * t14776;
t14811 = cos(qJ(3,4));
t14777 = t14811 ^ 2;
t15391 = 0.2e1 * t14777;
t14825 = cos(qJ(3,3));
t14778 = t14825 ^ 2;
t15390 = 0.2e1 * t14778;
t14827 = cos(qJ(3,2));
t14779 = t14827 ^ 2;
t15389 = 0.2e1 * t14779;
t14829 = cos(qJ(3,1));
t14780 = t14829 ^ 2;
t15388 = 0.2e1 * t14780;
t15191 = t14760 * t15431;
t15626 = t14738 * t14824;
t14410 = t14750 * t15191 - t15626;
t15250 = t14738 * t15431;
t15565 = t14760 * t14824;
t14421 = t14750 * t15565 + t15250;
t14972 = (t14410 * t14785 - t14421 * t14781) * t14732 + (t14410 * t14781 + t14421 * t14785) * t14744;
t15142 = t14830 * t15461;
t15050 = t14760 * t15142;
t15467 = t14784 * t14830;
t15194 = t14760 * t15467;
t16066 = -t14205 * t15194 - (t14624 * t14972 - t14772 * t15050) * t14771;
t15197 = t14759 * t15432;
t15631 = t14737 * t14822;
t14408 = t14749 * t15197 - t15631;
t15252 = t14737 * t15432;
t15570 = t14759 * t14822;
t14417 = t14749 * t15570 + t15252;
t14974 = (t14408 * t14785 - t14417 * t14781) * t14731 + (t14408 * t14781 + t14417 * t14785) * t14743;
t15143 = t14828 * t15462;
t15052 = t14759 * t15143;
t15468 = t14784 * t14828;
t15200 = t14759 * t15468;
t16065 = -t14203 * t15200 - (t14623 * t14974 - t14772 * t15052) * t14771;
t15203 = t14758 * t15433;
t15636 = t14736 * t14820;
t14406 = t14748 * t15203 - t15636;
t15254 = t14736 * t15433;
t15575 = t14758 * t14820;
t14413 = t14748 * t15575 + t15254;
t14976 = (t14406 * t14785 - t14413 * t14781) * t14730 + (t14406 * t14781 + t14413 * t14785) * t14742;
t15144 = t14826 * t15463;
t15054 = t14758 * t15144;
t15469 = t14784 * t14826;
t15206 = t14758 * t15469;
t16064 = -t14201 * t15206 - (t14622 * t14976 - t14772 * t15054) * t14771;
t15209 = t14757 * t15440;
t15641 = t14735 * t14806;
t14386 = t14747 * t15209 - t15641;
t15256 = t14735 * t15440;
t15580 = t14757 * t14806;
t14397 = t14747 * t15580 + t15256;
t14978 = (t14386 * t14785 - t14397 * t14781) * t14729 + (t14386 * t14781 + t14397 * t14785) * t14741;
t15148 = t14812 * t15464;
t15056 = t14757 * t15148;
t15476 = t14784 * t14812;
t15212 = t14757 * t15476;
t16063 = -t14199 * t15212 - (t14621 * t14978 - t14772 * t15056) * t14771;
t15215 = t14756 * t15441;
t15646 = t14734 * t14804;
t14384 = t14746 * t15215 - t15646;
t15258 = t14734 * t15441;
t15585 = t14756 * t14804;
t14393 = t14746 * t15585 + t15258;
t14980 = (t14384 * t14785 - t14393 * t14781) * t14728 + (t14384 * t14781 + t14393 * t14785) * t14740;
t15149 = t14810 * t15465;
t15058 = t14756 * t15149;
t15477 = t14784 * t14810;
t15218 = t14756 * t15477;
t16062 = -t14197 * t15218 - (t14620 * t14980 - t14772 * t15058) * t14771;
t15221 = t14755 * t15442;
t15651 = t14733 * t14802;
t14382 = t14745 * t15221 - t15651;
t15260 = t14733 * t15442;
t15590 = t14755 * t14802;
t14389 = t14745 * t15590 + t15260;
t14982 = (t14382 * t14785 - t14389 * t14781) * t14727 + (t14382 * t14781 + t14389 * t14785) * t14739;
t15150 = t14808 * t15466;
t15060 = t14755 * t15150;
t15478 = t14784 * t14808;
t15224 = t14755 * t15478;
t16061 = -t14195 * t15224 - (t14619 * t14982 - t14772 * t15060) * t14771;
t14918 = t14954 * t14839;
t15289 = t14624 * t15467;
t16060 = t14954 * t14205 - (t14750 * t15289 + t14772 * t14918) * t14771;
t16059 = t14954 * t14204 - (t14738 * t15289 + t14769 * t14918) * t14771;
t14919 = t14955 * t14838;
t15290 = t14623 * t15468;
t16058 = t14955 * t14203 - (t14749 * t15290 + t14772 * t14919) * t14771;
t16057 = t14955 * t14202 - (t14737 * t15290 + t14769 * t14919) * t14771;
t14920 = t14956 * t14837;
t15291 = t14622 * t15469;
t16056 = t14956 * t14201 - (t14748 * t15291 + t14772 * t14920) * t14771;
t16055 = t14956 * t14200 - (t14736 * t15291 + t14769 * t14920) * t14771;
t14921 = t14960 * t14836;
t15292 = t14621 * t15476;
t16054 = t14960 * t14199 - (t14747 * t15292 + t14772 * t14921) * t14771;
t16053 = t14960 * t14198 - (t14735 * t15292 + t14769 * t14921) * t14771;
t14922 = t14961 * t14835;
t15293 = t14620 * t15477;
t16052 = t14961 * t14197 - (t14746 * t15293 + t14772 * t14922) * t14771;
t16051 = t14961 * t14196 - (t14734 * t15293 + t14769 * t14922) * t14771;
t14923 = t14962 * t14834;
t15294 = t14619 * t15478;
t16050 = t14962 * t14195 - (t14745 * t15294 + t14772 * t14923) * t14771;
t16049 = t14962 * t14194 - (t14733 * t15294 + t14769 * t14923) * t14771;
t15596 = t14750 * t14824;
t14409 = t14738 * t15191 + t15596;
t15226 = t14750 * t15431;
t14422 = -t14738 * t15565 + t15226;
t16048 = (-t14409 * t14781 + t14422 * t14785) * t14744 - (t14409 * t14785 + t14422 * t14781) * t14732;
t15601 = t14749 * t14822;
t14407 = t14737 * t15197 + t15601;
t15228 = t14749 * t15432;
t14418 = -t14737 * t15570 + t15228;
t16047 = (-t14407 * t14781 + t14418 * t14785) * t14743 - (t14407 * t14785 + t14418 * t14781) * t14731;
t15606 = t14748 * t14820;
t14405 = t14736 * t15203 + t15606;
t15230 = t14748 * t15433;
t14414 = -t14736 * t15575 + t15230;
t16046 = (-t14405 * t14781 + t14414 * t14785) * t14742 - (t14405 * t14785 + t14414 * t14781) * t14730;
t15611 = t14747 * t14806;
t14385 = t14735 * t15209 + t15611;
t15232 = t14747 * t15440;
t14398 = -t14735 * t15580 + t15232;
t16045 = (-t14385 * t14781 + t14398 * t14785) * t14741 - (t14385 * t14785 + t14398 * t14781) * t14729;
t15616 = t14746 * t14804;
t14383 = t14734 * t15215 + t15616;
t15234 = t14746 * t15441;
t14394 = -t14734 * t15585 + t15234;
t16044 = (-t14383 * t14781 + t14394 * t14785) * t14740 - (t14383 * t14785 + t14394 * t14781) * t14728;
t15621 = t14745 * t14802;
t14381 = t14733 * t15221 + t15621;
t15236 = t14745 * t15442;
t14390 = -t14733 * t15590 + t15236;
t16043 = (-t14381 * t14781 + t14390 * t14785) * t14739 - (t14381 * t14785 + t14390 * t14781) * t14727;
t16042 = -t14204 * t15194 + (t14624 * t16048 + t14769 * t15050) * t14771;
t16041 = -t14202 * t15200 + (t14623 * t16047 + t14769 * t15052) * t14771;
t16040 = -t14200 * t15206 + (t14622 * t16046 + t14769 * t15054) * t14771;
t16039 = -t14198 * t15212 + (t14621 * t16045 + t14769 * t15056) * t14771;
t16038 = -t14196 * t15218 + (t14620 * t16044 + t14769 * t15058) * t14771;
t16037 = -t14194 * t15224 + (t14619 * t16043 + t14769 * t15060) * t14771;
t16036 = -g(2) * t14735 + g(3) * t14747;
t16035 = -g(2) * t14734 + g(3) * t14746;
t16034 = -g(2) * t14733 + g(3) * t14745;
t14782 = sin(pkin(6));
t14726 = t14782 * pkin(9);
t16033 = t14726 * t15995;
t15130 = t15995 * t14788;
t15188 = t14761 * t15478;
t13988 = t14755 * t14962 + t15188;
t14786 = cos(pkin(6));
t14720 = pkin(9) * t14786 + pkin(8);
t15970 = pkin(3) * t14720;
t13958 = t13988 * t15970;
t15563 = t14761 * t14788;
t14272 = -t14755 * t15765 + t15563;
t15395 = pkin(2) * t14726;
t14773 = t14786 ^ 2;
t14852 = pkin(9) ^ 2;
t14695 = pkin(3) ^ 2 + t14773 * t14852 - t14852;
t14801 = sin(qJ(3,6));
t15675 = t14695 * t14801;
t16032 = t14272 * (t15395 - t15675) + (t14272 * t15675 - t13958) * t14774 + t13958;
t15186 = t14762 * t15477;
t13990 = t14756 * t14961 + t15186;
t13959 = t13990 * t15970;
t15562 = t14762 * t14788;
t14273 = -t14756 * t15764 + t15562;
t14803 = sin(qJ(3,5));
t15674 = t14695 * t14803;
t16031 = t14273 * (t15395 - t15674) + (t14273 * t15674 - t13959) * t14774 + t13959;
t15184 = t14763 * t15476;
t13992 = t14757 * t14960 + t15184;
t13960 = t13992 * t15970;
t15561 = t14763 * t14788;
t14274 = -t14757 * t15763 + t15561;
t14805 = sin(qJ(3,4));
t15673 = t14695 * t14805;
t16030 = t14274 * (t15395 - t15673) + (t14274 * t15673 - t13960) * t14774 + t13960;
t15182 = t14764 * t15469;
t13994 = t14758 * t14956 + t15182;
t13961 = t13994 * t15970;
t15560 = t14764 * t14788;
t14275 = -t14758 * t15762 + t15560;
t14819 = sin(qJ(3,3));
t15672 = t14695 * t14819;
t16029 = t14275 * (t15395 - t15672) + (t14275 * t15672 - t13961) * t14774 + t13961;
t15180 = t14765 * t15468;
t13996 = t14759 * t14955 + t15180;
t13962 = t13996 * t15970;
t15559 = t14765 * t14788;
t14276 = -t14759 * t15761 + t15559;
t14821 = sin(qJ(3,2));
t15671 = t14695 * t14821;
t16028 = t14276 * (t15395 - t15671) + (t14276 * t15671 - t13962) * t14774 + t13962;
t15178 = t14766 * t15467;
t13998 = t14760 * t14954 + t15178;
t13963 = t13998 * t15970;
t15558 = t14766 * t14788;
t14277 = -t14760 * t15760 + t15558;
t14823 = sin(qJ(3,1));
t15670 = t14695 * t14823;
t16027 = t14277 * (t15395 - t15670) + (t14277 * t15670 - t13963) * t14774 + t13963;
t15356 = t14720 * t14726;
t15660 = t14720 * t14823;
t15977 = pkin(3) * t14277;
t16026 = ((t13998 * t15660 - t15977) * t14774 + t15977) * t14726 - (-pkin(2) * t15977 + t13998 * t15356) * t14823;
t15661 = t14720 * t14821;
t15978 = pkin(3) * t14276;
t16025 = ((t13996 * t15661 - t15978) * t14774 + t15978) * t14726 - (-pkin(2) * t15978 + t13996 * t15356) * t14821;
t15662 = t14720 * t14819;
t15979 = pkin(3) * t14275;
t16024 = ((t13994 * t15662 - t15979) * t14774 + t15979) * t14726 - (-pkin(2) * t15979 + t13994 * t15356) * t14819;
t15666 = t14720 * t14805;
t15980 = pkin(3) * t14274;
t16023 = ((t13992 * t15666 - t15980) * t14774 + t15980) * t14726 - (-pkin(2) * t15980 + t13992 * t15356) * t14805;
t15667 = t14720 * t14803;
t15981 = pkin(3) * t14273;
t16022 = ((t13990 * t15667 - t15981) * t14774 + t15981) * t14726 - (-pkin(2) * t15981 + t13990 * t15356) * t14803;
t15668 = t14720 * t14801;
t15982 = pkin(3) * t14272;
t16021 = ((t13988 * t15668 - t15982) * t14774 + t15982) * t14726 - (-pkin(2) * t15982 + t13988 * t15356) * t14801;
t14783 = sin(pkin(5));
t15493 = t14783 * t14784;
t14542 = t14787 * t15442 - t15493;
t15459 = t14787 * t14802;
t15768 = t14542 * t14755;
t15953 = g(1) * t14761;
t13928 = -(-g(2) * t15459 + g(3) * t15768) * t14745 + (g(2) * t15768 + g(3) * t15459) * t14733 + t14542 * t15953;
t15223 = t14755 * t15459;
t15340 = t14802 * t15953;
t13934 = -(g(2) * t14542 + g(3) * t15223) * t14745 + (g(2) * t15223 - g(3) * t14542) * t14733 + t14787 * t15340;
t14356 = g(1) * t14755 + t14761 * t16034;
t14719 = t14788 * t14783;
t15159 = t14787 * t15478;
t16008 = t14727 * (t13928 * t14785 - t14781 * t13934) + t14739 * (t14781 * t13928 + t13934 * t14785) - (t14719 + t15159) * t14356;
t14543 = t14787 * t15441 - t15493;
t15457 = t14787 * t14804;
t15767 = t14543 * t14756;
t15952 = g(1) * t14762;
t13929 = -(-g(2) * t15457 + g(3) * t15767) * t14746 + (g(2) * t15767 + g(3) * t15457) * t14734 + t14543 * t15952;
t15217 = t14756 * t15457;
t15339 = t14804 * t15952;
t13935 = -(g(2) * t14543 + g(3) * t15217) * t14746 + (g(2) * t15217 - g(3) * t14543) * t14734 + t14787 * t15339;
t14357 = g(1) * t14756 + t14762 * t16035;
t15158 = t14787 * t15477;
t16007 = t14728 * (t13929 * t14785 - t14781 * t13935) + t14740 * (t13929 * t14781 + t13935 * t14785) - (t14719 + t15158) * t14357;
t14544 = t14787 * t15440 - t15493;
t15455 = t14787 * t14806;
t15766 = t14544 * t14757;
t15951 = g(1) * t14763;
t13930 = -(-g(2) * t15455 + g(3) * t15766) * t14747 + (g(2) * t15766 + g(3) * t15455) * t14735 + t14544 * t15951;
t15211 = t14757 * t15455;
t15338 = t14806 * t15951;
t13936 = -(g(2) * t14544 + g(3) * t15211) * t14747 + (g(2) * t15211 - g(3) * t14544) * t14735 + t14787 * t15338;
t14358 = g(1) * t14757 + t14763 * t16036;
t15157 = t14787 * t15476;
t16006 = t14729 * (t13930 * t14785 - t13936 * t14781) + t14741 * (t14781 * t13930 + t13936 * t14785) - (t14719 + t15157) * t14358;
t14569 = t14787 * t15433 - t15493;
t15453 = t14787 * t14820;
t15741 = t14569 * t14758;
t13931 = -(-g(2) * t15453 + g(3) * t15741) * t14748 + (g(2) * t15741 + g(3) * t15453) * t14736 + t14569 * t15932;
t15205 = t14758 * t15453;
t15337 = t14820 * t15932;
t13937 = -(g(2) * t14569 + g(3) * t15205) * t14748 + (g(2) * t15205 - g(3) * t14569) * t14736 + t14787 * t15337;
t15156 = t14787 * t15469;
t16005 = t14730 * (t13931 * t14785 - t13937 * t14781) + t14742 * (t13931 * t14781 + t13937 * t14785) - (t14719 + t15156) * t14359;
t14570 = t14787 * t15432 - t15493;
t15451 = t14787 * t14822;
t15740 = t14570 * t14759;
t13932 = -(-g(2) * t15451 + g(3) * t15740) * t14749 + (g(2) * t15740 + g(3) * t15451) * t14737 + t14570 * t15931;
t15199 = t14759 * t15451;
t15336 = t14822 * t15931;
t13938 = -(g(2) * t14570 + g(3) * t15199) * t14749 + (g(2) * t15199 - g(3) * t14570) * t14737 + t14787 * t15336;
t15155 = t14787 * t15468;
t16004 = t14731 * (t13932 * t14785 - t14781 * t13938) + t14743 * (t14781 * t13932 + t13938 * t14785) - (t14719 + t15155) * t14360;
t14571 = t14787 * t15431 - t15493;
t15449 = t14787 * t14824;
t15739 = t14571 * t14760;
t13933 = -(-g(2) * t15449 + g(3) * t15739) * t14750 + (g(2) * t15739 + g(3) * t15449) * t14738 + t14571 * t15930;
t15193 = t14760 * t15449;
t15335 = t14824 * t15930;
t13939 = -(g(2) * t14571 + g(3) * t15193) * t14750 + (g(2) * t15193 - g(3) * t14571) * t14738 + t14787 * t15335;
t15154 = t14787 * t15467;
t16003 = t14732 * (t13933 * t14785 - t13939 * t14781) + t14744 * (t14781 * t13933 + t13939 * t14785) - (t14719 + t15154) * t14361;
t14218 = -t14563 * t14727 + t14572 * t14739;
t15447 = t14788 * t14802;
t14575 = t14781 * t14808 + t14785 * t15447;
t14578 = -t14781 * t15447 + t14785 * t14808;
t14221 = t14575 * t14739 + t14578 * t14727;
t15506 = t14782 * t14787;
t15353 = pkin(9) * t15506;
t15132 = pkin(3) * t15353;
t15996 = -t14695 / 0.2e1;
t16002 = -0.2e1 * t14218 * t15132 - 0.2e1 * t14221 * t15996;
t14219 = -t14564 * t14728 + t14573 * t14740;
t15445 = t14788 * t14804;
t14576 = t14781 * t14810 + t14785 * t15445;
t14579 = -t14781 * t15445 + t14785 * t14810;
t14222 = t14576 * t14740 + t14579 * t14728;
t16001 = -0.2e1 * t14219 * t15132 - 0.2e1 * t14222 * t15996;
t14220 = -t14565 * t14729 + t14574 * t14741;
t15443 = t14788 * t14806;
t14577 = t14781 * t14812 + t14785 * t15443;
t14580 = -t14781 * t15443 + t14785 * t14812;
t14223 = t14577 * t14741 + t14580 * t14729;
t16000 = -0.2e1 * t14220 * t15132 - 0.2e1 * t14223 * t15996;
t14242 = -t14582 * t14730 + t14591 * t14742;
t15438 = t14788 * t14820;
t14594 = t14781 * t14826 + t14785 * t15438;
t14597 = -t14781 * t15438 + t14785 * t14826;
t14245 = t14594 * t14742 + t14597 * t14730;
t15999 = -0.2e1 * t14242 * t15132 - 0.2e1 * t14245 * t15996;
t14243 = -t14583 * t14731 + t14592 * t14743;
t15436 = t14788 * t14822;
t14595 = t14781 * t14828 + t14785 * t15436;
t14598 = -t14781 * t15436 + t14785 * t14828;
t14246 = t14595 * t14743 + t14598 * t14731;
t15998 = -0.2e1 * t14243 * t15132 - 0.2e1 * t14246 * t15996;
t14244 = -t14584 * t14732 + t14593 * t14744;
t15434 = t14788 * t14824;
t14596 = t14781 * t14830 + t14785 * t15434;
t14599 = -t14781 * t15434 + t14785 * t14830;
t14247 = t14596 * t14744 + t14599 * t14732;
t15997 = -0.2e1 * t14244 * t15132 - 0.2e1 * t14247 * t15996;
t15994 = pkin(2) * t14801;
t15993 = pkin(2) * t14803;
t15992 = pkin(2) * t14805;
t15991 = pkin(2) * t14807;
t15990 = pkin(2) * t14809;
t15989 = pkin(2) * t14811;
t15988 = pkin(2) * t14819;
t15987 = pkin(2) * t14821;
t15986 = pkin(2) * t14823;
t15985 = pkin(2) * t14825;
t15984 = pkin(2) * t14827;
t15983 = pkin(2) * t14829;
t15505 = t14782 * t14801;
t14701 = pkin(9) * t15505;
t14683 = 0.2e1 * t14701 + pkin(2);
t15976 = pkin(3) * t14683;
t15504 = t14782 * t14803;
t14703 = pkin(9) * t15504;
t14685 = 0.2e1 * t14703 + pkin(2);
t15975 = pkin(3) * t14685;
t15503 = t14782 * t14805;
t14705 = pkin(9) * t15503;
t14687 = 0.2e1 * t14705 + pkin(2);
t15974 = pkin(3) * t14687;
t15499 = t14782 * t14819;
t14710 = pkin(9) * t15499;
t14689 = 0.2e1 * t14710 + pkin(2);
t15973 = pkin(3) * t14689;
t15498 = t14782 * t14821;
t14712 = pkin(9) * t15498;
t14691 = 0.2e1 * t14712 + pkin(2);
t15972 = pkin(3) * t14691;
t15497 = t14782 * t14823;
t14714 = pkin(9) * t15497;
t14693 = 0.2e1 * t14714 + pkin(2);
t15971 = pkin(3) * t14693;
t15969 = pkin(3) * t14782;
t15968 = pkin(3) * t14788;
t15967 = pkin(3) * t14802;
t15966 = pkin(3) * t14804;
t15965 = pkin(3) * t14806;
t15964 = pkin(3) * t14807;
t15963 = pkin(3) * t14809;
t15962 = pkin(3) * t14811;
t15961 = pkin(3) * t14820;
t15960 = pkin(3) * t14822;
t15959 = pkin(3) * t14824;
t15958 = pkin(3) * t14825;
t15957 = pkin(3) * t14827;
t15956 = pkin(3) * t14829;
t15955 = pkin(9) * t14783;
t15954 = pkin(9) * t14784;
t15531 = t14771 * t14834;
t14341 = t14619 * t14768 - t15531;
t14625 = t14767 * t14846 + t14770 * t14840;
t13691 = t14341 * t15563 + ((-t14341 * t15593 + t14625 * t14785) * t14739 - (t14341 * t15592 + t14625 * t14781) * t14727) * t14784;
t15944 = t13691 * pkin(3);
t15530 = t14771 * t14835;
t14342 = t14620 * t14768 - t15530;
t14626 = t14767 * t14847 + t14770 * t14841;
t13692 = t14342 * t15562 + ((-t14342 * t15588 + t14626 * t14785) * t14740 - (t14342 * t15587 + t14626 * t14781) * t14728) * t14784;
t15943 = t13692 * pkin(3);
t15529 = t14771 * t14836;
t14343 = t14621 * t14768 - t15529;
t14627 = t14767 * t14848 + t14770 * t14842;
t13693 = t14343 * t15561 + ((-t14343 * t15583 + t14627 * t14785) * t14741 - (t14343 * t15582 + t14627 * t14781) * t14729) * t14784;
t15942 = t13693 * pkin(3);
t15528 = t14771 * t14837;
t14344 = t14622 * t14768 - t15528;
t14628 = t14767 * t14849 + t14770 * t14843;
t13694 = t14344 * t15560 + ((-t14344 * t15578 + t14628 * t14785) * t14742 - (t14344 * t15577 + t14628 * t14781) * t14730) * t14784;
t15941 = t13694 * pkin(3);
t15527 = t14771 * t14838;
t14345 = t14623 * t14768 - t15527;
t14629 = t14767 * t14850 + t14770 * t14844;
t13695 = t14345 * t15559 + ((-t14345 * t15573 + t14629 * t14785) * t14743 - (t14345 * t15572 + t14629 * t14781) * t14731) * t14784;
t15940 = t13695 * pkin(3);
t15526 = t14771 * t14839;
t14346 = t14624 * t14768 - t15526;
t14630 = t14767 * t14851 + t14770 * t14845;
t13696 = t14346 * t15558 + ((-t14346 * t15568 + t14630 * t14785) * t14744 - (t14346 * t15567 + t14630 * t14781) * t14732) * t14784;
t15939 = t13696 * pkin(3);
t13709 = -t14625 * t15563 + ((t14341 * t14785 + t14625 * t15593) * t14739 + (-t14341 * t14781 + t14625 * t15592) * t14727) * t14784;
t15938 = t13709 * pkin(3);
t13710 = -t14626 * t15562 + ((t14342 * t14785 + t14626 * t15588) * t14740 + (-t14342 * t14781 + t14626 * t15587) * t14728) * t14784;
t15937 = t13710 * pkin(3);
t13711 = -t14627 * t15561 + ((t14343 * t14785 + t14627 * t15583) * t14741 + (-t14343 * t14781 + t14627 * t15582) * t14729) * t14784;
t15936 = t13711 * pkin(3);
t13712 = -t14628 * t15560 + ((t14344 * t14785 + t14628 * t15578) * t14742 + (-t14344 * t14781 + t14628 * t15577) * t14730) * t14784;
t15935 = t13712 * pkin(3);
t13713 = -t14629 * t15559 + ((t14345 * t14785 + t14629 * t15573) * t14743 + (-t14345 * t14781 + t14629 * t15572) * t14731) * t14784;
t15934 = t13713 * pkin(3);
t13714 = -t14630 * t15558 + ((t14346 * t14785 + t14630 * t15568) * t14744 + (-t14346 * t14781 + t14630 * t15567) * t14732) * t14784;
t15933 = t13714 * pkin(3);
t14684 = t14701 + pkin(2);
t14686 = t14703 + pkin(2);
t14688 = t14705 + pkin(2);
t14690 = t14710 + pkin(2);
t14692 = t14712 + pkin(2);
t14694 = t14714 + pkin(2);
t15492 = t14783 * t14787;
t15280 = t14720 * t15492;
t15074 = pkin(3) * t15280 - t15395;
t15332 = t14695 * t15995;
t14188 = -t14801 * t15332 + t15074;
t15281 = t14695 * t15492;
t15067 = t14801 * t15281;
t15140 = t15995 * t15970;
t14278 = t15067 + t15140;
t14699 = pkin(3) * t15492;
t15325 = t15995 * t14801;
t14308 = t14720 * t15325 + t14699;
t15333 = (-t14773 + 0.1e1) * pkin(9);
t14638 = pkin(2) * t15505 + t15333;
t15141 = -0.2e1 * t14699;
t15594 = (t14787 + 0.1e1) * (t14787 - 0.1e1);
t15387 = 0.2e1 * t15594;
t15394 = pkin(3) * t14726;
t15005 = t15280 * t14726;
t15403 = t14801 * t15005 + pkin(3) * (t14726 + t15994);
t15491 = t14783 * t14802;
t13541 = 0.1e1 / ((t14188 * t14807 + (t14775 * t15387 - t14774) * t15394 + t15403) * t14788 + ((t14278 * t14807 + (t14775 * t15141 + t14308) * t14726) * t14808 + (pkin(9) * t14638 + t14683 * t15964 + t14695 * t14775) * t15491) * t14784);
t14122 = t14341 * t14769 + t14625 * t14772;
t14128 = t14341 * t14772 - t14625 * t14769;
t13849 = -t14122 * t14785 + t14128 * t15593;
t13855 = t14122 * t14781 + t14128 * t15592;
t13857 = t14122 * t15593 + t14128 * t14785;
t13858 = t14122 * t15592 - t14128 * t14781;
t15460 = t14787 * t14801;
t15669 = t14720 * t14783;
t14514 = pkin(3) * t15460 - t15669;
t14332 = t14807 * t15353 - t14514;
t14644 = t14684 + t15964;
t14134 = -t14332 * t14808 + t14644 * t14802;
t15802 = (t14332 * t14802 + t14644 * t14808) * t14788;
t15929 = (-((t13857 * t14727 - t13858 * t14739) * t14745 + (-t13849 * t14727 + t13855 * t14739) * t14733) * t15802 + ((-t13857 * t14739 - t13858 * t14727) * t14745 + (t13849 * t14739 + t13855 * t14727) * t14733) * t14134) * t13541;
t14190 = -t14805 * t15332 + t15074;
t15065 = t14805 * t15281;
t14280 = t15065 + t15140;
t15329 = t14805 * t15995;
t14310 = t14720 * t15329 + t14699;
t14640 = pkin(2) * t15503 + t15333;
t15401 = t14805 * t15005 + pkin(3) * (t14726 + t15992);
t15489 = t14783 * t14806;
t13543 = 0.1e1 / ((t14190 * t14811 + (t14777 * t15387 - t14774) * t15394 + t15401) * t14788 + ((t14280 * t14811 + (t14777 * t15141 + t14310) * t14726) * t14812 + (pkin(9) * t14640 + t14687 * t15962 + t14695 * t14777) * t15489) * t14784);
t14124 = t14343 * t14769 + t14627 * t14772;
t14130 = t14343 * t14772 - t14627 * t14769;
t13860 = t14124 * t15583 + t14130 * t14785;
t13861 = t14124 * t15582 - t14130 * t14781;
t13867 = -t14124 * t14785 + t14130 * t15583;
t13868 = t14124 * t14781 + t14130 * t15582;
t15456 = t14787 * t14805;
t14516 = pkin(3) * t15456 - t15669;
t14334 = t14811 * t15353 - t14516;
t14646 = t14688 + t15962;
t14136 = -t14334 * t14812 + t14646 * t14806;
t15800 = (t14334 * t14806 + t14646 * t14812) * t14788;
t15928 = (-((t13860 * t14729 - t13861 * t14741) * t14747 + t14735 * (-t13867 * t14729 + t13868 * t14741)) * t15800 + ((-t13860 * t14741 - t13861 * t14729) * t14747 + t14735 * (t13867 * t14741 + t13868 * t14729)) * t14136) * t13543;
t14189 = -t14803 * t15332 + t15074;
t15066 = t14803 * t15281;
t14279 = t15066 + t15140;
t15330 = t14803 * t15995;
t14309 = t14720 * t15330 + t14699;
t14639 = pkin(2) * t15504 + t15333;
t15402 = t14803 * t15005 + pkin(3) * (t14726 + t15993);
t15490 = t14783 * t14804;
t13542 = 0.1e1 / ((t14189 * t14809 + (t14776 * t15387 - t14774) * t15394 + t15402) * t14788 + ((t14279 * t14809 + (t14776 * t15141 + t14309) * t14726) * t14810 + (pkin(9) * t14639 + t14685 * t15963 + t14695 * t14776) * t15490) * t14784);
t14123 = t14342 * t14769 + t14626 * t14772;
t14129 = t14342 * t14772 - t14626 * t14769;
t13847 = t14123 * t15588 + t14129 * t14785;
t13850 = -t14123 * t14785 + t14129 * t15588;
t13859 = t14123 * t15587 - t14129 * t14781;
t13866 = t14123 * t14781 + t14129 * t15587;
t15458 = t14787 * t14803;
t14515 = pkin(3) * t15458 - t15669;
t14333 = t14809 * t15353 - t14515;
t14645 = t14686 + t15963;
t14135 = -t14333 * t14810 + t14645 * t14804;
t15801 = (t14333 * t14804 + t14645 * t14810) * t14788;
t15927 = (-((t13847 * t14728 - t13859 * t14740) * t14746 + (-t13850 * t14728 + t13866 * t14740) * t14734) * t15801 + t14135 * ((-t13847 * t14740 - t13859 * t14728) * t14746 + (t13850 * t14740 + t13866 * t14728) * t14734)) * t13542;
t14191 = -t14819 * t15332 + t15074;
t15064 = t14819 * t15281;
t14281 = t15064 + t15140;
t15328 = t14819 * t15995;
t14329 = t14720 * t15328 + t14699;
t14647 = pkin(2) * t15499 + t15333;
t15400 = t14819 * t15005 + pkin(3) * (t14726 + t15988);
t15488 = t14783 * t14820;
t13565 = 0.1e1 / ((t14191 * t14825 + (t14778 * t15387 - t14774) * t15394 + t15400) * t14788 + ((t14281 * t14825 + (t14778 * t15141 + t14329) * t14726) * t14826 + (pkin(9) * t14647 + t14689 * t15958 + t14695 * t14778) * t15488) * t14784);
t14125 = t14344 * t14769 + t14628 * t14772;
t14131 = t14344 * t14772 - t14628 * t14769;
t13848 = t14125 * t15578 + t14131 * t14785;
t13851 = -t14125 * t14785 + t14131 * t15578;
t13854 = t14125 * t15577 - t14131 * t14781;
t13869 = t14125 * t14781 + t14131 * t15577;
t15454 = t14787 * t14819;
t14520 = pkin(3) * t15454 - t15669;
t14338 = t14825 * t15353 - t14520;
t14653 = t14690 + t15958;
t14170 = -t14338 * t14826 + t14653 * t14820;
t15799 = (t14338 * t14820 + t14653 * t14826) * t14788;
t15926 = (-((t13848 * t14730 - t13854 * t14742) * t14748 + t14736 * (-t13851 * t14730 + t13869 * t14742)) * t15799 + ((-t13848 * t14742 - t13854 * t14730) * t14748 + t14736 * (t13851 * t14742 + t13869 * t14730)) * t14170) * t13565;
t14192 = -t14821 * t15332 + t15074;
t15063 = t14821 * t15281;
t14282 = t15063 + t15140;
t15327 = t14821 * t15995;
t14330 = t14720 * t15327 + t14699;
t14648 = pkin(2) * t15498 + t15333;
t15399 = t14821 * t15005 + pkin(3) * (t14726 + t15987);
t15487 = t14783 * t14822;
t13566 = 0.1e1 / ((t14192 * t14827 + (t14779 * t15387 - t14774) * t15394 + t15399) * t14788 + ((t14282 * t14827 + (t14779 * t15141 + t14330) * t14726) * t14828 + (pkin(9) * t14648 + t14691 * t15957 + t14695 * t14779) * t15487) * t14784);
t14126 = t14345 * t14769 + t14629 * t14772;
t14132 = t14345 * t14772 - t14629 * t14769;
t13852 = -t14126 * t14785 + t14132 * t15573;
t13862 = t14126 * t15573 + t14132 * t14785;
t13863 = t14126 * t15572 - t14132 * t14781;
t13870 = t14126 * t14781 + t14132 * t15572;
t15452 = t14787 * t14821;
t14521 = pkin(3) * t15452 - t15669;
t14339 = t14827 * t15353 - t14521;
t14654 = t14692 + t15957;
t14171 = -t14339 * t14828 + t14654 * t14822;
t15798 = (t14339 * t14822 + t14654 * t14828) * t14788;
t15925 = (-((t13862 * t14731 - t13863 * t14743) * t14749 + (-t13852 * t14731 + t13870 * t14743) * t14737) * t15798 + t14171 * ((-t13862 * t14743 - t13863 * t14731) * t14749 + t14737 * (t13852 * t14743 + t13870 * t14731))) * t13566;
t14193 = -t14823 * t15332 + t15074;
t15062 = t14823 * t15281;
t14283 = t15062 + t15140;
t15326 = t14823 * t15995;
t14331 = t14720 * t15326 + t14699;
t14649 = pkin(2) * t15497 + t15333;
t15398 = t14823 * t15005 + pkin(3) * (t14726 + t15986);
t15486 = t14783 * t14824;
t13567 = 0.1e1 / ((t14193 * t14829 + (t14780 * t15387 - t14774) * t15394 + t15398) * t14788 + ((t14283 * t14829 + (t14780 * t15141 + t14331) * t14726) * t14830 + (pkin(9) * t14649 + t14693 * t15956 + t14695 * t14780) * t15486) * t14784);
t14127 = t14346 * t14769 + t14630 * t14772;
t14133 = t14346 * t14772 - t14630 * t14769;
t13853 = -t14127 * t14785 + t14133 * t15568;
t13856 = t14127 * t14781 + t14133 * t15567;
t13864 = t14127 * t15568 + t14133 * t14785;
t13865 = t14127 * t15567 - t14133 * t14781;
t15450 = t14787 * t14823;
t14522 = pkin(3) * t15450 - t15669;
t14340 = t14829 * t15353 - t14522;
t14655 = t14694 + t15956;
t14172 = -t14340 * t14830 + t14655 * t14824;
t15797 = (t14340 * t14824 + t14655 * t14830) * t14788;
t15924 = (-((t13864 * t14732 - t13865 * t14744) * t14750 + (-t13853 * t14732 + t13856 * t14744) * t14738) * t15797 + t14172 * ((-t13864 * t14744 - t13865 * t14732) * t14750 + (t13853 * t14744 + t13856 * t14732) * t14738)) * t13567;
t15554 = t14768 * t14834;
t15717 = t14619 * t14771;
t14368 = t15554 + t15717;
t15654 = t14733 * t14755;
t13916 = (-t14769 * t15531 + t14194) * t14761 - t14368 * t15654;
t13767 = t13916 * t14781 + t14368 * t15622;
t13775 = t13916 * t14785 - t14368 * t15623;
t15923 = ((-t13767 * t14727 + t13775 * t14739) * t15802 - (t13767 * t14739 + t13775 * t14727) * t14134) * t13541;
t15624 = t14745 * t14755;
t13917 = (-t14772 * t15531 + t14195) * t14761 - t14368 * t15624;
t13763 = -t13917 * t14781 + t14368 * t15652;
t13776 = t13917 * t14785 + t14368 * t15653;
t15922 = ((t13763 * t14727 + t13776 * t14739) * t15802 - (-t13763 * t14739 + t13776 * t14727) * t14134) * t13541;
t15552 = t14768 * t14836;
t15711 = t14621 * t14771;
t14370 = t15552 + t15711;
t15614 = t14747 * t14757;
t13921 = (-t14772 * t15529 + t14199) * t14763 - t14370 * t15614;
t13772 = -t13921 * t14781 + t14370 * t15642;
t13780 = t13921 * t14785 + t14370 * t15643;
t15921 = ((t13772 * t14729 + t13780 * t14741) * t15800 - (-t13772 * t14741 + t13780 * t14729) * t14136) * t13543;
t15553 = t14768 * t14835;
t15714 = t14620 * t14771;
t14369 = t15553 + t15714;
t15649 = t14734 * t14756;
t13918 = (-t14769 * t15530 + t14196) * t14762 - t14369 * t15649;
t13771 = t13918 * t14781 + t14369 * t15617;
t13777 = t13918 * t14785 - t14369 * t15618;
t15920 = ((-t13771 * t14728 + t13777 * t14740) * t15801 - t14135 * (t13771 * t14740 + t13777 * t14728)) * t13542;
t15619 = t14746 * t14756;
t13919 = (-t14772 * t15530 + t14197) * t14762 - t14369 * t15619;
t13770 = -t13919 * t14781 + t14369 * t15647;
t13778 = t13919 * t14785 + t14369 * t15648;
t15919 = ((t13770 * t14728 + t13778 * t14740) * t15801 - (-t13770 * t14740 + t13778 * t14728) * t14135) * t13542;
t15644 = t14735 * t14757;
t13920 = (-t14769 * t15529 + t14198) * t14763 - t14370 * t15644;
t13773 = t13920 * t14781 + t14370 * t15612;
t13779 = t13920 * t14785 - t14370 * t15613;
t15918 = ((-t13773 * t14729 + t13779 * t14741) * t15800 - (t13773 * t14741 + t13779 * t14729) * t14136) * t13543;
t15551 = t14768 * t14837;
t15708 = t14622 * t14771;
t14371 = t15551 + t15708;
t13923 = (-t14772 * t15528 + t14201) * t14764 - t14371 * t15609;
t13764 = -t13923 * t14781 + t14371 * t15637;
t13782 = t13923 * t14785 + t14371 * t15638;
t15917 = ((t13764 * t14730 + t13782 * t14742) * t15799 - t14170 * (-t13764 * t14742 + t13782 * t14730)) * t13565;
t15550 = t14768 * t14838;
t15705 = t14623 * t14771;
t14372 = t15550 + t15705;
t13924 = (-t14769 * t15527 + t14202) * t14765 - t14372 * t15634;
t13769 = t13924 * t14781 + t14372 * t15602;
t13783 = t13924 * t14785 - t14372 * t15603;
t15916 = ((-t13769 * t14731 + t13783 * t14743) * t15798 - t14171 * (t13769 * t14743 + t13783 * t14731)) * t13566;
t15549 = t14768 * t14839;
t15702 = t14624 * t14771;
t14373 = t15549 + t15702;
t13926 = (-t14769 * t15526 + t14204) * t14766 - t14373 * t15629;
t13774 = t13926 * t14781 + t14373 * t15597;
t13785 = t13926 * t14785 - t14373 * t15598;
t15915 = ((-t13774 * t14732 + t13785 * t14744) * t15797 - (t13774 * t14744 + t13785 * t14732) * t14172) * t13567;
t13922 = (-t14769 * t15528 + t14200) * t14764 - t14371 * t15639;
t13768 = t13922 * t14781 + t14371 * t15607;
t13781 = t13922 * t14785 - t14371 * t15608;
t15914 = ((-t13768 * t14730 + t13781 * t14742) * t15799 - (t13768 * t14742 + t13781 * t14730) * t14170) * t13565;
t13925 = (-t14772 * t15527 + t14203) * t14765 - t14372 * t15604;
t13765 = -t13925 * t14781 + t14372 * t15632;
t13784 = t13925 * t14785 + t14372 * t15633;
t15913 = ((t13765 * t14731 + t13784 * t14743) * t15798 - (-t13765 * t14743 + t13784 * t14731) * t14171) * t13566;
t13927 = (-t14772 * t15526 + t14205) * t14766 - t14373 * t15599;
t13766 = -t13927 * t14781 + t14373 * t15627;
t13786 = t13927 * t14785 + t14373 * t15628;
t15912 = ((t13766 * t14732 + t13786 * t14744) * t15797 - t14172 * (-t13766 * t14744 + t13786 * t14732)) * t13567;
t14350 = -t14755 * t16034 + t15953;
t14656 = g(2) * t14745 + g(3) * t14733;
t14176 = t14350 * t14785 + t14656 * t14781;
t14182 = t14350 * t14781 - t14656 * t14785;
t13724 = -t14356 * t14784 + (t14176 * t14727 + t14182 * t14739) * t14788;
t13898 = t14176 * t14739 - t14182 * t14727;
t13547 = t13724 * t14808 + t13898 * t14802;
t15129 = -t13724 * t14802 + t13898 * t14808;
t13469 = t13547 * t14807 + t15129 * t15460;
t14600 = t14788 * t15280;
t14707 = pkin(2) * t15491;
t15331 = t14720 * t15995;
t14095 = t14600 + (t14808 * t15331 + t14707) * t14784;
t14425 = t14783 * t15159 - t15130;
t15282 = t14695 * t15493;
t14517 = t14802 * t15282;
t15354 = t14784 * t14726;
t14996 = 0.2e1 * pkin(3) * t14783 * t15354;
t14601 = t14802 * t14996;
t14698 = t14788 * t15395;
t14724 = pkin(2) * t15968;
t15083 = (t14786 + 0.1e1) * (t14786 - 0.1e1) * t15955;
t15004 = t14802 * t15083;
t15334 = -0.2e1 * t15394;
t13523 = 0.1e1 / ((t14425 * t15334 + t14517) * t14775 + ((t14425 * t14695 + t14601) * t14801 - t14698 + pkin(3) * t14095) * t14807 + (t14095 * t14726 + t14724) * t14801 + (t14425 * t15969 - t14784 * t15004) * pkin(9));
t15911 = t13469 * t13523;
t14351 = -t14756 * t16035 + t15952;
t14657 = g(2) * t14746 + g(3) * t14734;
t14177 = t14351 * t14785 + t14657 * t14781;
t14183 = t14351 * t14781 - t14657 * t14785;
t13725 = -t14357 * t14784 + (t14177 * t14728 + t14183 * t14740) * t14788;
t13899 = t14177 * t14740 - t14183 * t14728;
t13549 = t13725 * t14810 + t13899 * t14804;
t15128 = -t13725 * t14804 + t13899 * t14810;
t13470 = t13549 * t14809 + t15128 * t15458;
t14708 = pkin(2) * t15490;
t14096 = t14600 + (t14810 * t15331 + t14708) * t14784;
t14426 = t14783 * t15158 - t15130;
t14518 = t14804 * t15282;
t14602 = t14804 * t14996;
t15003 = t14804 * t15083;
t13524 = 0.1e1 / ((t14426 * t15334 + t14518) * t14776 + ((t14426 * t14695 + t14602) * t14803 - t14698 + pkin(3) * t14096) * t14809 + (t14096 * t14726 + t14724) * t14803 + (t14426 * t15969 - t14784 * t15003) * pkin(9));
t15910 = t13470 * t13524;
t14352 = -t14757 * t16036 + t15951;
t14658 = g(2) * t14747 + g(3) * t14735;
t14178 = t14352 * t14785 + t14658 * t14781;
t14184 = t14352 * t14781 - t14658 * t14785;
t13726 = -t14358 * t14784 + (t14178 * t14729 + t14184 * t14741) * t14788;
t13900 = t14178 * t14741 - t14184 * t14729;
t13551 = t13726 * t14812 + t13900 * t14806;
t15127 = -t13726 * t14806 + t13900 * t14812;
t13471 = t13551 * t14811 + t15127 * t15456;
t14709 = pkin(2) * t15489;
t14097 = t14600 + (t14812 * t15331 + t14709) * t14784;
t14427 = t14783 * t15157 - t15130;
t14519 = t14806 * t15282;
t14603 = t14806 * t14996;
t15002 = t14806 * t15083;
t13525 = 0.1e1 / ((t14427 * t15334 + t14519) * t14777 + ((t14427 * t14695 + t14603) * t14805 - t14698 + pkin(3) * t14097) * t14811 + (t14097 * t14726 + t14724) * t14805 + (t14427 * t15969 - t14784 * t15002) * pkin(9));
t15909 = t13471 * t13525;
t13472 = t14787 * t14807 * t15129 - t13547 * t14801;
t15908 = t13472 * t13523;
t13473 = t14787 * t14809 * t15128 - t13549 * t14803;
t15907 = t13473 * t13524;
t13474 = t14787 * t14811 * t15127 - t13551 * t14805;
t15906 = t13474 * t13525;
t13556 = t13727 * t14826 - t14820 * t16093;
t13475 = -t13562 * t14787 * t14825 - t13556 * t14819;
t14716 = pkin(2) * t15488;
t14098 = t14600 + (t14826 * t15331 + t14716) * t14784;
t14428 = t14783 * t15156 - t15130;
t14526 = t14820 * t15282;
t14604 = t14820 * t14996;
t15001 = t14820 * t15083;
t13526 = 0.1e1 / ((t14428 * t15334 + t14526) * t14778 + ((t14428 * t14695 + t14604) * t14819 - t14698 + pkin(3) * t14098) * t14825 + (t14098 * t14726 + t14724) * t14819 + (t14428 * t15969 - t14784 * t15001) * pkin(9));
t15905 = t13475 * t13526;
t13476 = t13556 * t14825 - t13562 * t15454;
t15904 = t13476 * t13526;
t13558 = t13728 * t14828 - t14822 * t16092;
t13477 = t13558 * t14827 - t13563 * t15452;
t14717 = pkin(2) * t15487;
t14099 = t14600 + (t14828 * t15331 + t14717) * t14784;
t14429 = t14783 * t15155 - t15130;
t14527 = t14822 * t15282;
t14605 = t14822 * t14996;
t15000 = t14822 * t15083;
t13527 = 0.1e1 / ((t14429 * t15334 + t14527) * t14779 + ((t14429 * t14695 + t14605) * t14821 - t14698 + pkin(3) * t14099) * t14827 + (t14099 * t14726 + t14724) * t14821 + (t14429 * t15969 - t14784 * t15000) * pkin(9));
t15903 = t13477 * t13527;
t13478 = -t13563 * t14787 * t14827 - t13558 * t14821;
t15902 = t13478 * t13527;
t13560 = t13729 * t14830 - t14824 * t16091;
t13479 = t13560 * t14829 - t13564 * t15450;
t14718 = pkin(2) * t15486;
t14100 = t14600 + (t14830 * t15331 + t14718) * t14784;
t14430 = t14783 * t15154 - t15130;
t14528 = t14824 * t15282;
t14606 = t14824 * t14996;
t14999 = t14824 * t15083;
t13528 = 0.1e1 / ((t14430 * t15334 + t14528) * t14780 + ((t14430 * t14695 + t14606) * t14823 - t14698 + pkin(3) * t14100) * t14829 + (t14100 * t14726 + t14724) * t14823 + (t14430 * t15969 - t14784 * t14999) * pkin(9));
t15901 = t13479 * t13528;
t13480 = -t13564 * t14787 * t14829 - t13560 * t14823;
t15900 = t13480 * t13528;
t14551 = -t14727 * t14781 + t14739 * t14785;
t14207 = t14545 * t14808 + t14551 * t15447;
t14700 = t14782 * t15968;
t15096 = t14774 * t14700;
t14931 = (t14700 - t15096) * pkin(9);
t14937 = (-t14545 * t14802 + t14551 * t15442) * t14787 - t14551 * t15493;
t15006 = t14695 * t15130;
t15665 = t14720 * t14808;
t15018 = t14774 * t15665 + t14707 - t15665;
t14696 = pkin(9) * t14700;
t15396 = 0.2e1 * pkin(9) * t15096 - 0.2e1 * t14696;
t15397 = pkin(3) * t14600 - t14698;
t15404 = t14788 * t15005 + t14724;
t15899 = 0.1e1 / ((t14517 + t15396) * t14775 + ((t14601 - t15006) * t14801 + t15397) * t14807 + t15404 * t14801 + t14931 + ((pkin(3) * t15018 + t14808 * t15067) * t14807 + (-t15004 + (t15018 * t14801 + (-0.2e1 * t14775 + 0.1e1) * t14808 * t14699) * t14782) * pkin(9)) * t14784) * ((pkin(3) * t14937 + t14207 * t14726) * t14807 + t14801 * (-pkin(3) * t14207 + t14726 * t14937));
t14552 = -t14728 * t14781 + t14740 * t14785;
t14209 = t14546 * t14810 + t14552 * t15445;
t14936 = (-t14546 * t14804 + t14552 * t15441) * t14787 - t14552 * t15493;
t15664 = t14720 * t14810;
t15017 = t14774 * t15664 + t14708 - t15664;
t15898 = 0.1e1 / ((t14518 + t15396) * t14776 + ((t14602 - t15006) * t14803 + t15397) * t14809 + t15404 * t14803 + t14931 + ((pkin(3) * t15017 + t14810 * t15066) * t14809 + (-t15003 + (t15017 * t14803 + (-0.2e1 * t14776 + 0.1e1) * t14810 * t14699) * t14782) * pkin(9)) * t14784) * ((pkin(3) * t14936 + t14209 * t14726) * t14809 + t14803 * (-pkin(3) * t14209 + t14726 * t14936));
t14553 = -t14729 * t14781 + t14741 * t14785;
t14211 = t14547 * t14812 + t14553 * t15443;
t14935 = (-t14547 * t14806 + t14553 * t15440) * t14787 - t14553 * t15493;
t15663 = t14720 * t14812;
t15016 = t14774 * t15663 + t14709 - t15663;
t15897 = 0.1e1 / ((t14519 + t15396) * t14777 + ((t14603 - t15006) * t14805 + t15397) * t14811 + t15404 * t14805 + t14931 + ((pkin(3) * t15016 + t14812 * t15065) * t14811 + (-t15002 + (t15016 * t14805 + (-0.2e1 * t14777 + 0.1e1) * t14812 * t14699) * t14782) * pkin(9)) * t14784) * ((pkin(3) * t14935 + t14211 * t14726) * t14811 + t14805 * (-pkin(3) * t14211 + t14726 * t14935));
t14554 = -t14730 * t14781 + t14742 * t14785;
t14225 = t14548 * t14826 + t14554 * t15438;
t14934 = (-t14548 * t14820 + t14554 * t15433) * t14787 - t14554 * t15493;
t15659 = t14720 * t14826;
t15015 = t14774 * t15659 + t14716 - t15659;
t15896 = 0.1e1 / ((t14526 + t15396) * t14778 + ((t14604 - t15006) * t14819 + t15397) * t14825 + t15404 * t14819 + t14931 + ((pkin(3) * t15015 + t14826 * t15064) * t14825 + (-t15001 + (t15015 * t14819 + (-0.2e1 * t14778 + 0.1e1) * t14826 * t14699) * t14782) * pkin(9)) * t14784) * ((pkin(3) * t14934 + t14225 * t14726) * t14825 + t14819 * (-pkin(3) * t14225 + t14726 * t14934));
t14555 = -t14731 * t14781 + t14743 * t14785;
t14227 = t14549 * t14828 + t14555 * t15436;
t14933 = (-t14549 * t14822 + t14555 * t15432) * t14787 - t14555 * t15493;
t15658 = t14720 * t14828;
t15014 = t14774 * t15658 + t14717 - t15658;
t15895 = 0.1e1 / ((t14527 + t15396) * t14779 + ((t14605 - t15006) * t14821 + t15397) * t14827 + t15404 * t14821 + t14931 + ((pkin(3) * t15014 + t14828 * t15063) * t14827 + (-t15000 + (t15014 * t14821 + (-0.2e1 * t14779 + 0.1e1) * t14828 * t14699) * t14782) * pkin(9)) * t14784) * ((pkin(3) * t14933 + t14227 * t14726) * t14827 + t14821 * (-pkin(3) * t14227 + t14726 * t14933));
t14556 = -t14732 * t14781 + t14744 * t14785;
t14229 = t14550 * t14830 + t14556 * t15434;
t14932 = (-t14550 * t14824 + t14556 * t15431) * t14787 - t14556 * t15493;
t15657 = t14720 * t14830;
t15013 = t14774 * t15657 + t14718 - t15657;
t15894 = 0.1e1 / ((t14528 + t15396) * t14780 + ((t14606 - t15006) * t14823 + t15397) * t14829 + t15404 * t14823 + t14931 + ((pkin(3) * t15013 + t14830 * t15062) * t14829 + (-t14999 + (t15013 * t14823 + (-0.2e1 * t14780 + 0.1e1) * t14830 * t14699) * t14782) * pkin(9)) * t14784) * ((pkin(3) * t14932 + t14229 * t14726) * t14829 + t14823 * (-pkin(3) * t14229 + t14726 * t14932));
t14670 = t14720 * t15968;
t15362 = pkin(3) * t15478;
t14641 = t14720 * t15362;
t15448 = t14788 * t14801;
t15012 = -t14695 * t15448 + t14641;
t15153 = t14801 * t15478;
t15386 = t14683 * t15967;
t13811 = ((t14695 * t15153 + t14670) * t14787 + t14784 * t15386) * t14783 + t15012 * t14774 - t14698 - t15012;
t15025 = t15394 * t15594;
t14538 = t14788 * t15025;
t15502 = t14782 * t14808;
t15349 = pkin(9) * t15502;
t15082 = t14787 * t15349;
t14140 = (pkin(3) * t15082 + t14802 * t15996) * t15493 - t14538;
t14089 = t14140 * t15393;
t15092 = t14720 * t15349;
t14431 = -t14784 * t15092 + t14724;
t15355 = t14774 * t14726;
t15483 = t14784 * t14802;
t15031 = ((t14720 * t15448 + t15362) * t15506 + t14638 * t15483) * t15955 + (t14720 * t15153 - t15968) * t15355 + t14431 * t14801 + t14696;
t15893 = 0.1e1 / (t13811 * t14807 - t14089 + t15031) * t14356;
t15361 = pkin(3) * t15477;
t14642 = t14720 * t15361;
t15446 = t14788 * t14803;
t15011 = -t14695 * t15446 + t14642;
t15152 = t14803 * t15477;
t15385 = t14685 * t15966;
t13812 = ((t14695 * t15152 + t14670) * t14787 + t14784 * t15385) * t14783 + t15011 * t14774 - t14698 - t15011;
t15501 = t14782 * t14810;
t15348 = pkin(9) * t15501;
t15081 = t14787 * t15348;
t14141 = (pkin(3) * t15081 + t14804 * t15996) * t15493 - t14538;
t14090 = t14141 * t15392;
t15091 = t14720 * t15348;
t14433 = -t14784 * t15091 + t14724;
t15481 = t14784 * t14804;
t15030 = ((t14720 * t15446 + t15361) * t15506 + t14639 * t15481) * t15955 + (t14720 * t15152 - t15968) * t15355 + t14433 * t14803 + t14696;
t15892 = 0.1e1 / (t13812 * t14809 - t14090 + t15030) * t14357;
t15360 = pkin(3) * t15476;
t14643 = t14720 * t15360;
t15444 = t14788 * t14805;
t15010 = -t14695 * t15444 + t14643;
t15151 = t14805 * t15476;
t15384 = t14687 * t15965;
t13813 = ((t14695 * t15151 + t14670) * t14787 + t14784 * t15384) * t14783 + t15010 * t14774 - t14698 - t15010;
t15500 = t14782 * t14812;
t15347 = pkin(9) * t15500;
t15080 = t14787 * t15347;
t14142 = (pkin(3) * t15080 + t14806 * t15996) * t15493 - t14538;
t14091 = t14142 * t15391;
t15090 = t14720 * t15347;
t14435 = -t14784 * t15090 + t14724;
t15479 = t14784 * t14806;
t15029 = ((t14720 * t15444 + t15360) * t15506 + t14640 * t15479) * t15955 + (t14720 * t15151 - t15968) * t15355 + t14435 * t14805 + t14696;
t15891 = 0.1e1 / (t13813 * t14811 - t14091 + t15029) * t14358;
t15359 = pkin(3) * t15469;
t14650 = t14720 * t15359;
t15439 = t14788 * t14819;
t15009 = -t14695 * t15439 + t14650;
t15147 = t14819 * t15469;
t15383 = t14689 * t15961;
t13832 = ((t14695 * t15147 + t14670) * t14787 + t14784 * t15383) * t14783 + t15009 * t14774 - t14698 - t15009;
t15496 = t14782 * t14826;
t15343 = pkin(9) * t15496;
t15079 = t14787 * t15343;
t14155 = (pkin(3) * t15079 + t14820 * t15996) * t15493 - t14538;
t14092 = t14155 * t15390;
t15086 = t14720 * t15343;
t14443 = -t14784 * t15086 + t14724;
t15474 = t14784 * t14820;
t15028 = ((t14720 * t15439 + t15359) * t15506 + t14647 * t15474) * t15955 + (t14720 * t15147 - t15968) * t15355 + t14443 * t14819 + t14696;
t15890 = 0.1e1 / (t13832 * t14825 - t14092 + t15028) * t14359;
t15358 = pkin(3) * t15468;
t14651 = t14720 * t15358;
t15437 = t14788 * t14821;
t15008 = -t14695 * t15437 + t14651;
t15146 = t14821 * t15468;
t15382 = t14691 * t15960;
t13833 = ((t14695 * t15146 + t14670) * t14787 + t14784 * t15382) * t14783 + t15008 * t14774 - t14698 - t15008;
t15495 = t14782 * t14828;
t15342 = pkin(9) * t15495;
t15078 = t14787 * t15342;
t14156 = (pkin(3) * t15078 + t14822 * t15996) * t15493 - t14538;
t14093 = t14156 * t15389;
t15085 = t14720 * t15342;
t14445 = -t14784 * t15085 + t14724;
t15472 = t14784 * t14822;
t15027 = ((t14720 * t15437 + t15358) * t15506 + t14648 * t15472) * t15955 + (t14720 * t15146 - t15968) * t15355 + t14445 * t14821 + t14696;
t15889 = 0.1e1 / (t13833 * t14827 - t14093 + t15027) * t14360;
t15357 = pkin(3) * t15467;
t14652 = t14720 * t15357;
t15435 = t14788 * t14823;
t15007 = -t14695 * t15435 + t14652;
t15145 = t14823 * t15467;
t15381 = t14693 * t15959;
t13834 = ((t14695 * t15145 + t14670) * t14787 + t14784 * t15381) * t14783 + t15007 * t14774 - t14698 - t15007;
t15494 = t14782 * t14830;
t15341 = pkin(9) * t15494;
t15077 = t14787 * t15341;
t14157 = (pkin(3) * t15077 + t14824 * t15996) * t15493 - t14538;
t14094 = t14157 * t15388;
t15084 = t14720 * t15341;
t14447 = -t14784 * t15084 + t14724;
t15470 = t14784 * t14824;
t15026 = ((t14720 * t15435 + t15357) * t15506 + t14649 * t15470) * t15955 + (t14720 * t15145 - t15968) * t15355 + t14447 * t14823 + t14696;
t15888 = 0.1e1 / (t13834 * t14829 - t14094 + t15026) * t14361;
t15887 = t13523 * t13547;
t15886 = t13523 * t15129;
t15885 = t13524 * t13549;
t15884 = t13524 * t15128;
t15883 = t13525 * t13551;
t15882 = t13525 * t15127;
t15881 = t13526 * t13556;
t15880 = t13526 * t13562;
t15879 = t13527 * t13558;
t15878 = t13527 * t13563;
t15877 = t13528 * t13560;
t15876 = t13528 * t13564;
t15133 = pkin(3) * t15355;
t15352 = t14802 * t14726;
t15758 = t14551 * t14788;
t15875 = 0.1e1 / (-t14089 + (t14188 * t14788 + t14784 * (t14278 * t14808 + t14783 * t15386)) * t14807 + (-t15133 + t15403) * t14788 + (t14308 * t15502 + t14638 * t15491) * t15954) * (((pkin(3) * t14808 + t14787 * t15352) * t15758 + t14545 * (t15082 - t15967)) * t14807 + (-t14514 * t14802 + t14684 * t14808) * t15758 - t14545 * (t14514 * t14808 + t14684 * t14802));
t15351 = t14804 * t14726;
t15756 = t14552 * t14788;
t15874 = 0.1e1 / (-t14090 + (t14189 * t14788 + t14784 * (t14279 * t14810 + t14783 * t15385)) * t14809 + (-t15133 + t15402) * t14788 + (t14309 * t15501 + t14639 * t15490) * t15954) * (((pkin(3) * t14810 + t14787 * t15351) * t15756 + t14546 * (t15081 - t15966)) * t14809 + (-t14515 * t14804 + t14686 * t14810) * t15756 - t14546 * (t14515 * t14810 + t14686 * t14804));
t15350 = t14806 * t14726;
t15754 = t14553 * t14788;
t15873 = 0.1e1 / (-t14091 + (t14190 * t14788 + t14784 * (t14280 * t14812 + t14783 * t15384)) * t14811 + (-t15133 + t15401) * t14788 + (t14310 * t15500 + t14640 * t15489) * t15954) * (((pkin(3) * t14812 + t14787 * t15350) * t15754 + t14547 * (t15080 - t15965)) * t14811 + (-t14516 * t14806 + t14688 * t14812) * t15754 - t14547 * (t14516 * t14812 + t14688 * t14806));
t15346 = t14820 * t14726;
t15752 = t14554 * t14788;
t15872 = 0.1e1 / (-t14092 + (t14191 * t14788 + t14784 * (t14281 * t14826 + t14783 * t15383)) * t14825 + (-t15133 + t15400) * t14788 + (t14329 * t15496 + t14647 * t15488) * t15954) * (((pkin(3) * t14826 + t14787 * t15346) * t15752 + t14548 * (t15079 - t15961)) * t14825 + (-t14520 * t14820 + t14690 * t14826) * t15752 - t14548 * (t14520 * t14826 + t14690 * t14820));
t15345 = t14822 * t14726;
t15750 = t14555 * t14788;
t15871 = 0.1e1 / (-t14093 + (t14192 * t14788 + t14784 * (t14282 * t14828 + t14783 * t15382)) * t14827 + (-t15133 + t15399) * t14788 + (t14330 * t15495 + t14648 * t15487) * t15954) * (((pkin(3) * t14828 + t14787 * t15345) * t15750 + t14549 * (t15078 - t15960)) * t14827 + (-t14521 * t14822 + t14692 * t14828) * t15750 - t14549 * (t14521 * t14828 + t14692 * t14822));
t15344 = t14824 * t14726;
t15748 = t14556 * t14788;
t15870 = 0.1e1 / (-t14094 + (t14193 * t14788 + t14784 * (t14283 * t14830 + t14783 * t15381)) * t14829 + (-t15133 + t15398) * t14788 + (t14331 * t15494 + t14649 * t15486) * t15954) * (((pkin(3) * t14830 + t14787 * t15344) * t15748 + t14550 * (t15077 - t15959)) * t14829 + (-t14522 * t14824 + t14694 * t14830) * t15748 - t14550 * (t14522 * t14830 + t14694 * t14824));
t14143 = t14545 * t15624 + t14551 * t14733;
t14144 = -t14545 * t14733 + t14551 * t15624;
t15869 = t13541 * (-t14134 * t14143 + t14144 * t15802);
t14158 = t14545 * t14745 + t14551 * t15654;
t14164 = t14545 * t15654 - t14551 * t14745;
t15868 = t13541 * (t14134 * t14164 - t14158 * t15802);
t14145 = t14546 * t15619 + t14552 * t14734;
t14146 = -t14546 * t14734 + t14552 * t15619;
t15867 = t13542 * (-t14135 * t14145 + t14146 * t15801);
t14159 = t14546 * t14746 + t14552 * t15649;
t14165 = t14546 * t15649 - t14552 * t14746;
t15866 = t13542 * (t14135 * t14165 - t14159 * t15801);
t14147 = t14547 * t15614 + t14553 * t14735;
t14148 = -t14547 * t14735 + t14553 * t15614;
t15865 = t13543 * (-t14136 * t14147 + t14148 * t15800);
t14160 = t14547 * t14747 + t14553 * t15644;
t14166 = t14547 * t15644 - t14553 * t14747;
t15864 = t13543 * (t14136 * t14166 - t14160 * t15800);
t14149 = t14548 * t15609 + t14554 * t14736;
t14150 = -t14548 * t14736 + t14554 * t15609;
t15863 = t13565 * (-t14149 * t14170 + t14150 * t15799);
t14161 = t14548 * t14748 + t14554 * t15639;
t14167 = t14548 * t15639 - t14554 * t14748;
t15862 = t13565 * (-t14161 * t15799 + t14167 * t14170);
t14151 = t14549 * t15604 + t14555 * t14737;
t14152 = -t14549 * t14737 + t14555 * t15604;
t15861 = t13566 * (-t14151 * t14171 + t14152 * t15798);
t14162 = t14549 * t14749 + t14555 * t15634;
t14168 = t14549 * t15634 - t14555 * t14749;
t15860 = t13566 * (-t14162 * t15798 + t14168 * t14171);
t14153 = t14550 * t15599 + t14556 * t14738;
t14154 = -t14550 * t14738 + t14556 * t15599;
t15859 = t13567 * (-t14153 * t14172 + t14154 * t15797);
t14163 = t14550 * t14750 + t14556 * t15629;
t14169 = t14550 * t15629 - t14556 * t14750;
t15858 = t13567 * (-t14163 * t15797 + t14169 * t14172);
t14296 = t14542 * t14781 + t14785 * t15459;
t15795 = t14296 * t14755;
t14297 = t14543 * t14781 + t14785 * t15457;
t15794 = t14297 * t14756;
t14298 = t14544 * t14781 + t14785 * t15455;
t15793 = t14298 * t14757;
t14305 = t14542 * t14785 - t14781 * t15459;
t15792 = t14305 * t14755;
t14306 = t14543 * t14785 - t14781 * t15457;
t15791 = t14306 * t14756;
t14307 = t14544 * t14785 - t14781 * t15455;
t15790 = t14307 * t14757;
t14317 = t14569 * t14781 + t14785 * t15453;
t15789 = t14317 * t14758;
t14318 = t14570 * t14781 + t14785 * t15451;
t15788 = t14318 * t14759;
t14319 = t14571 * t14781 + t14785 * t15449;
t15787 = t14319 * t14760;
t14326 = t14569 * t14785 - t14781 * t15453;
t15786 = t14326 * t14758;
t14327 = t14570 * t14785 - t14781 * t15451;
t15785 = t14327 * t14759;
t14328 = t14571 * t14785 - t14781 * t15449;
t15784 = t14328 * t14760;
t15783 = t14341 * t14755;
t15782 = t14341 * t14761;
t15781 = t14342 * t14756;
t15780 = t14342 * t14762;
t15779 = t14343 * t14757;
t15778 = t14343 * t14763;
t15777 = t14344 * t14758;
t15776 = t14344 * t14764;
t15775 = t14345 * t14759;
t15774 = t14345 * t14765;
t15773 = t14346 * t14760;
t15772 = t14346 * t14766;
t15759 = t14551 * t14784;
t15757 = t14552 * t14784;
t15755 = t14553 * t14784;
t15753 = t14554 * t14784;
t15751 = t14555 * t14784;
t15749 = t14556 * t14784;
t15735 = t14575 * t14755;
t15734 = t14576 * t14756;
t15733 = t14577 * t14757;
t15732 = t14578 * t14755;
t15731 = t14579 * t14756;
t15730 = t14580 * t14757;
t15723 = t14594 * t14758;
t15722 = t14595 * t14759;
t15721 = t14596 * t14760;
t15720 = t14597 * t14758;
t15719 = t14598 * t14759;
t15718 = t14599 * t14760;
t15699 = t14625 * t14755;
t15698 = t14625 * t14761;
t15697 = t14626 * t14756;
t15696 = t14626 * t14762;
t15695 = t14627 * t14757;
t15694 = t14627 * t14763;
t15693 = t14628 * t14758;
t15692 = t14628 * t14764;
t15691 = t14629 * t14759;
t15690 = t14629 * t14765;
t15689 = t14630 * t14760;
t15688 = t14630 * t14766;
t15687 = t14638 * t14783;
t15686 = t14639 * t14783;
t15685 = t14640 * t14783;
t15684 = t14647 * t14783;
t15683 = t14648 * t14783;
t15682 = t14649 * t14783;
t15681 = t14683 * t14783;
t15680 = t14685 * t14783;
t15679 = t14687 * t14783;
t15678 = t14689 * t14783;
t15677 = t14691 * t14783;
t15676 = t14693 * t14783;
t15650 = t14733 * t14808;
t15645 = t14734 * t14810;
t15640 = t14735 * t14812;
t15635 = t14736 * t14826;
t15630 = t14737 * t14828;
t15625 = t14738 * t14830;
t15620 = t14745 * t14808;
t15615 = t14746 * t14810;
t15610 = t14747 * t14812;
t15605 = t14748 * t14826;
t15600 = t14749 * t14828;
t15595 = t14750 * t14830;
t15589 = t14755 * t14808;
t15584 = t14756 * t14810;
t15579 = t14757 * t14812;
t15574 = t14758 * t14826;
t15569 = t14759 * t14828;
t15564 = t14760 * t14830;
t15557 = t14767 * t14769;
t15556 = t14767 * t14771;
t15555 = t14767 * t14772;
t15548 = t14769 * t14770;
t15547 = t14769 * t14771;
t15534 = t14770 * t14771;
t15533 = t14770 * t14772;
t15532 = t14771 * t14772;
t15513 = t14775 * t14783;
t15512 = t14776 * t14783;
t15511 = t14777 * t14783;
t15510 = t14778 * t14783;
t15509 = t14779 * t14783;
t15508 = t14780 * t14783;
t15484 = t14784 * t14801;
t15482 = t14784 * t14803;
t15480 = t14784 * t14805;
t15475 = t14784 * t14819;
t15473 = t14784 * t14821;
t15471 = t14784 * t14823;
t15424 = t14801 * t14807;
t15423 = t14803 * t14809;
t15422 = t14805 * t14811;
t15421 = t14819 * t14825;
t15419 = t14821 * t14827;
t15417 = t14823 * t14829;
t14725 = pkin(2) * pkin(3) * t14784;
t15380 = t14720 * t15967;
t15379 = t14720 * t15966;
t15378 = t14720 * t15965;
t15377 = t14720 * t15961;
t15376 = t14720 * t15960;
t15375 = t14720 * t15959;
t15374 = pkin(3) * t15765;
t15373 = pkin(3) * t15764;
t15372 = pkin(3) * t15763;
t15371 = pkin(3) * t15762;
t15370 = pkin(3) * t15761;
t15369 = pkin(3) * t15760;
t15368 = pkin(3) * t15759;
t15367 = pkin(3) * t15757;
t15366 = pkin(3) * t15755;
t15365 = pkin(3) * t15753;
t15364 = pkin(3) * t15751;
t15363 = pkin(3) * t15749;
t13406 = t16049 * t14761 + (-t14733 * t15188 + t16043) * t15554 + t16037;
t15324 = t13406 * t15492;
t13408 = t16050 * t14761 + (-t14745 * t15188 - t14982) * t15554 + t16061;
t15323 = t13408 * t15492;
t13410 = t16051 * t14762 + (-t14734 * t15186 + t16044) * t15553 + t16038;
t15322 = t13410 * t15492;
t13412 = t16052 * t14762 + (-t14746 * t15186 - t14980) * t15553 + t16062;
t15321 = t13412 * t15492;
t13414 = t16053 * t14763 + (-t14735 * t15184 + t16045) * t15552 + t16039;
t15320 = t13414 * t15492;
t13416 = t16054 * t14763 + (-t14747 * t15184 - t14978) * t15552 + t16063;
t15319 = t13416 * t15492;
t13421 = t16055 * t14764 + (-t14736 * t15182 + t16046) * t15551 + t16040;
t15318 = t13421 * t15492;
t13423 = t16056 * t14764 + (-t14748 * t15182 - t14976) * t15551 + t16064;
t15317 = t13423 * t15492;
t13425 = t16057 * t14765 + (-t14737 * t15180 + t16047) * t15550 + t16041;
t15316 = t13425 * t15492;
t13427 = t16058 * t14765 + (-t14749 * t15180 - t14974) * t15550 + t16065;
t15315 = t13427 * t15492;
t13429 = t16059 * t14766 + (-t14738 * t15178 + t16048) * t15549 + t16042;
t15314 = t13429 * t15492;
t13431 = t16060 * t14766 + (-t14750 * t15178 - t14972) * t15549 + t16066;
t15313 = t13431 * t15492;
t15312 = t14761 * t15899;
t15311 = t14762 * t15898;
t15310 = t14763 * t15897;
t15309 = t14764 * t15896;
t15308 = t14765 * t15895;
t15307 = t14766 * t15894;
t15306 = t13709 * t15675;
t15305 = t13710 * t15674;
t15304 = t13711 * t15673;
t15303 = t13712 * t15672;
t15302 = t13713 * t15671;
t15301 = t13714 * t15670;
t15300 = t14368 * t15493;
t15299 = t14369 * t15493;
t15298 = t14370 * t15493;
t15297 = t14371 * t15493;
t15296 = t14372 * t15493;
t15295 = t14373 * t15493;
t15288 = t13691 * t15675;
t15287 = t13692 * t15674;
t15286 = t13693 * t15673;
t15285 = t13694 * t15672;
t15284 = t13695 * t15671;
t15283 = t13696 * t15670;
t15279 = t14720 * t15484;
t15278 = t14720 * t15482;
t15277 = t14720 * t15480;
t15276 = t14720 * t15475;
t15275 = t14720 * t15473;
t15274 = t14720 * t15471;
t15273 = t14727 * t15554;
t15271 = t14728 * t15553;
t15269 = t14729 * t15552;
t15267 = t14730 * t15551;
t15265 = t14731 * t15550;
t15263 = t14732 * t15549;
t15261 = t14733 * t15447;
t15259 = t14734 * t15445;
t15257 = t14735 * t15443;
t15255 = t14736 * t15438;
t15253 = t14737 * t15436;
t15251 = t14738 * t15434;
t15249 = t14739 * t15554;
t15247 = t14740 * t15553;
t15245 = t14741 * t15552;
t15243 = t14742 * t15551;
t15241 = t14743 * t15550;
t15239 = t14744 * t15549;
t15237 = t14745 * t15447;
t15235 = t14746 * t15445;
t15233 = t14747 * t15443;
t15231 = t14748 * t15438;
t15229 = t14749 * t15436;
t15227 = t14750 * t15434;
t15225 = t14755 * t15483;
t15222 = t14755 * t15447;
t15219 = t14756 * t15481;
t15216 = t14756 * t15445;
t15213 = t14757 * t15479;
t15210 = t14757 * t15443;
t15207 = t14758 * t15474;
t15204 = t14758 * t15438;
t15201 = t14759 * t15472;
t15198 = t14759 * t15436;
t15195 = t14760 * t15470;
t15192 = t14760 * t15434;
t15189 = t14761 * t15483;
t15187 = t14762 * t15481;
t15185 = t14763 * t15479;
t15183 = t14764 * t15474;
t15181 = t14765 * t15472;
t15179 = t14766 * t15470;
t15177 = t14768 * t15483;
t15176 = t14768 * t15481;
t15175 = t14768 * t15479;
t15174 = t14768 * t15474;
t15173 = t14768 * t15472;
t15172 = t14768 * t15470;
t15139 = t14801 * t14725;
t15138 = t14803 * t14725;
t15137 = t14805 * t14725;
t15136 = t14819 * t14725;
t15135 = t14821 * t14725;
t15134 = t14823 * t14725;
t14697 = pkin(2) * t15354;
t15131 = pkin(3) * t15331;
t15095 = t14720 * t15352;
t15094 = t14720 * t15351;
t15093 = t14720 * t15350;
t15089 = t14720 * t15346;
t15088 = t14720 * t15345;
t15087 = t14720 * t15344;
t15076 = -0.2e1 * t15132;
t15075 = 0.2e1 * t15132;
t15073 = t15483 * t15717;
t15072 = t15481 * t15714;
t15071 = t15479 * t15711;
t15070 = t15474 * t15708;
t15069 = t15472 * t15705;
t15068 = t15470 * t15702;
t15061 = t14834 * t15225;
t15059 = t14835 * t15219;
t15057 = t14836 * t15213;
t15055 = t14837 * t15207;
t15053 = t14838 * t15201;
t15051 = t14839 * t15195;
t15049 = t14768 * t15150;
t15048 = t14768 * t15149;
t15047 = t14768 * t15148;
t15046 = t14768 * t15144;
t15045 = t14768 * t15143;
t15044 = t14768 * t15142;
t14998 = -0.2e1 * t15025;
t14997 = 0.2e1 * t15025;
t14959 = t14575 * t14727 - t14578 * t14739;
t14958 = t14576 * t14728 - t14579 * t14740;
t14957 = t14577 * t14729 - t14580 * t14741;
t14953 = t14594 * t14730 - t14597 * t14742;
t14952 = t14595 * t14731 - t14598 * t14743;
t14951 = t14596 * t14732 - t14599 * t14744;
t13989 = -t14755 * t14959 - t15189;
t14944 = -(t13988 * t15675 + t14272 * t15970) * t14787 + t13989 * t15976;
t13991 = -t14756 * t14958 - t15187;
t14943 = -(t13990 * t15674 + t14273 * t15970) * t14787 + t13991 * t15975;
t13993 = -t14757 * t14957 - t15185;
t14942 = -(t13992 * t15673 + t14274 * t15970) * t14787 + t13993 * t15974;
t13995 = -t14758 * t14953 - t15183;
t14941 = -(t13994 * t15672 + t14275 * t15970) * t14787 + t13995 * t15973;
t13997 = -t14759 * t14952 - t15181;
t14940 = -(t13996 * t15671 + t14276 * t15970) * t14787 + t13997 * t15972;
t13999 = -t14760 * t14951 - t15179;
t14939 = -(t13998 * t15670 + t14277 * t15970) * t14787 + t13999 * t15971;
t14938 = t14784 * t14997;
t14930 = t14771 * t14959;
t14929 = t14771 * t14958;
t14928 = t14771 * t14957;
t14927 = t14771 * t14953;
t14926 = t14771 * t14952;
t14925 = t14771 * t14951;
t14212 = t14545 * t15442 + t14551 * t14802;
t14912 = t14212 * t15668 + t15374;
t14214 = t14546 * t15441 + t14552 * t14804;
t14911 = t14214 * t15667 + t15373;
t14216 = t14547 * t15440 + t14553 * t14806;
t14910 = t14216 * t15666 + t15372;
t14230 = t14548 * t15433 + t14554 * t14820;
t14906 = t14230 * t15662 + t15371;
t14232 = t14549 * t15432 + t14555 * t14822;
t14905 = t14232 * t15661 + t15370;
t14234 = t14550 * t15431 + t14556 * t14824;
t14904 = t14234 * t15660 + t15369;
t14900 = t14774 * t16106 + t15324 - t16106;
t14899 = t14774 * t16107 + t15323 - t16107;
t14898 = t14774 * t16108 + t15322 - t16108;
t14897 = t14774 * t16109 + t15321 - t16109;
t14896 = t14774 * t16110 + t15320 - t16110;
t14895 = t14774 * t16111 + t15319 - t16111;
t14894 = t14774 * t16112 + t15318 - t16112;
t14893 = t14774 * t16113 + t15317 - t16113;
t14892 = t14774 * t16114 + t15316 - t16114;
t14891 = t14774 * t16115 + t15315 - t16115;
t14890 = t14774 * t16116 + t15314 - t16116;
t14889 = t14774 * t16117 + t15313 - t16117;
t14882 = -t14545 * t14695 * t15484 - t14212 * t15970;
t14881 = -t14546 * t14695 * t15482 - t14214 * t15970;
t14880 = -t14547 * t14695 * t15480 - t14216 * t15970;
t14879 = -t14548 * t14695 * t15475 - t14230 * t15970;
t14878 = -t14549 * t14695 * t15473 - t14232 * t15970;
t14877 = -t14550 * t14695 * t15471 - t14234 * t15970;
t14876 = -(-g(2) * t15574 - g(3) * t15438) * t14736 - (-g(2) * t15438 + g(3) * t15574) * t14748 + t14826 * t15932;
t14875 = -(-g(2) * t15569 - g(3) * t15436) * t14737 - (-g(2) * t15436 + g(3) * t15569) * t14749 + t14828 * t15931;
t14874 = -(-g(2) * t15564 - g(3) * t15434) * t14738 - (-g(2) * t15434 + g(3) * t15564) * t14750 + t14830 * t15930;
t14873 = -(g(2) * t14808 + g(3) * t15222) * t14745 + (g(2) * t15222 - g(3) * t14808) * t14733 + t14788 * t15340;
t14872 = -(g(2) * t14810 + g(3) * t15216) * t14746 + (g(2) * t15216 - g(3) * t14810) * t14734 + t14788 * t15339;
t14871 = -(g(2) * t14812 + g(3) * t15210) * t14747 + (g(2) * t15210 - g(3) * t14812) * t14735 + t14788 * t15338;
t13613 = (t14341 * t14572 + t14563 * t15699) * t14739 + (-t14341 * t14563 + t14572 * t15699) * t14727 + t14625 * t15188;
t14437 = -t14670 * t14808 + t14697;
t14260 = t14437 * t14781 - t14785 * t15380;
t14263 = t14437 * t14785 + t14781 * t15380;
t14440 = t14698 + t14641;
t14870 = (-t13613 * t15970 - t15306) * t14774 - (t14260 * t15699 + t14263 * t14341) * t14739 - (-t14260 * t14341 + t14263 * t15699) * t14727 + t14440 * t15698 + t15306;
t13614 = (t14342 * t14573 + t14564 * t15697) * t14740 + (-t14342 * t14564 + t14573 * t15697) * t14728 + t14626 * t15186;
t14438 = -t14670 * t14810 + t14697;
t14261 = t14438 * t14781 - t14785 * t15379;
t14264 = t14438 * t14785 + t14781 * t15379;
t14441 = t14698 + t14642;
t14869 = (-t13614 * t15970 - t15305) * t14774 - (t14261 * t15697 + t14264 * t14342) * t14740 - (-t14261 * t14342 + t14264 * t15697) * t14728 + t14441 * t15696 + t15305;
t13615 = (t14343 * t14574 + t14565 * t15695) * t14741 + (-t14343 * t14565 + t14574 * t15695) * t14729 + t14627 * t15184;
t14439 = -t14670 * t14812 + t14697;
t14262 = t14439 * t14781 - t14785 * t15378;
t14265 = t14439 * t14785 + t14781 * t15378;
t14442 = t14698 + t14643;
t14868 = (-t13615 * t15970 - t15304) * t14774 - (t14262 * t15695 + t14265 * t14343) * t14741 - (-t14262 * t14343 + t14265 * t15695) * t14729 + t14442 * t15694 + t15304;
t13622 = (t14344 * t14591 + t14582 * t15693) * t14742 + (-t14344 * t14582 + t14591 * t15693) * t14730 + t14628 * t15182;
t14449 = -t14670 * t14826 + t14697;
t14266 = t14449 * t14781 - t14785 * t15377;
t14269 = t14449 * t14785 + t14781 * t15377;
t14452 = t14698 + t14650;
t14867 = (-t13622 * t15970 - t15303) * t14774 - (t14266 * t15693 + t14269 * t14344) * t14742 - (-t14266 * t14344 + t14269 * t15693) * t14730 + t14452 * t15692 + t15303;
t13623 = (t14345 * t14592 + t14583 * t15691) * t14743 + (-t14345 * t14583 + t14592 * t15691) * t14731 + t14629 * t15180;
t14450 = -t14670 * t14828 + t14697;
t14267 = t14450 * t14781 - t14785 * t15376;
t14270 = t14450 * t14785 + t14781 * t15376;
t14453 = t14698 + t14651;
t14866 = (-t13623 * t15970 - t15302) * t14774 - (t14267 * t15691 + t14270 * t14345) * t14743 - (-t14267 * t14345 + t14270 * t15691) * t14731 + t14453 * t15690 + t15302;
t13624 = (t14346 * t14593 + t14584 * t15689) * t14744 + (-t14346 * t14584 + t14593 * t15689) * t14732 + t14630 * t15178;
t14451 = -t14670 * t14830 + t14697;
t14268 = t14451 * t14781 - t14785 * t15375;
t14271 = t14451 * t14785 + t14781 * t15375;
t14454 = t14698 + t14652;
t14865 = (-t13624 * t15970 - t15301) * t14774 - (t14268 * t15689 + t14271 * t14346) * t14744 - (-t14268 * t14346 + t14271 * t15689) * t14732 + t14454 * t15688 + t15301;
t14864 = (-t16106 * t15492 + t13406 * t14774 + (t14733 * t15049 - t16049) * t14761 - t16043 * t15554 - t16037) * t14720;
t14863 = (-t16107 * t15492 + t13408 * t14774 + (t14745 * t15049 - t16050) * t14761 + t14982 * t15554 - t16061) * t14720;
t14862 = (-t16108 * t15492 + t13410 * t14774 + (t14734 * t15048 - t16051) * t14762 - t16044 * t15553 - t16038) * t14720;
t14861 = (-t16109 * t15492 + t13412 * t14774 + (t14746 * t15048 - t16052) * t14762 + t14980 * t15553 - t16062) * t14720;
t14860 = (-t16110 * t15492 + t13414 * t14774 + (t14735 * t15047 - t16053) * t14763 - t16045 * t15552 - t16039) * t14720;
t14859 = (-t16111 * t15492 + t13416 * t14774 + (t14747 * t15047 - t16054) * t14763 + t14978 * t15552 - t16063) * t14720;
t14858 = (-t16112 * t15492 + t13421 * t14774 + (t14736 * t15046 - t16055) * t14764 - t16046 * t15551 - t16040) * t14720;
t14857 = (-t16113 * t15492 + t13423 * t14774 + (t14748 * t15046 - t16056) * t14764 + t14976 * t15551 - t16064) * t14720;
t14856 = (-t16114 * t15492 + t13425 * t14774 + (t14737 * t15045 - t16057) * t14765 - t16047 * t15550 - t16041) * t14720;
t14855 = (-t16115 * t15492 + t13427 * t14774 + (t14749 * t15045 - t16058) * t14765 + t14974 * t15550 - t16065) * t14720;
t14854 = (-t16116 * t15492 + t13429 * t14774 + (t14738 * t15044 - t16059) * t14766 - t16048 * t15549 - t16042) * t14720;
t14853 = (-t16117 * t15492 + t13431 * t14774 + (t14750 * t15044 - t16060) * t14766 + t14972 * t15549 - t16066) * t14720;
t14482 = -t14768 * t15533 + t15557;
t14481 = t14768 * t15555 + t15548;
t14480 = t14768 * t15548 + t15555;
t14479 = -t14768 * t15557 + t15533;
t14448 = t14788 * t15084 + t14725;
t14446 = t14788 * t15085 + t14725;
t14444 = t14788 * t15086 + t14725;
t14436 = t14788 * t15090 + t14725;
t14434 = t14788 * t15091 + t14725;
t14432 = t14788 * t15092 + t14725;
t14420 = t14750 * t15564 - t15251;
t14419 = t14738 * t15564 + t15227;
t14416 = t14749 * t15569 - t15253;
t14415 = t14737 * t15569 + t15229;
t14412 = t14748 * t15574 - t15255;
t14411 = t14736 * t15574 + t15231;
t14404 = t14750 * t15192 + t15625;
t14403 = -t14738 * t15192 + t15595;
t14402 = t14749 * t15198 + t15630;
t14401 = -t14737 * t15198 + t15600;
t14400 = t14748 * t15204 + t15635;
t14399 = -t14736 * t15204 + t15605;
t14396 = t14747 * t15579 - t15257;
t14395 = t14735 * t15579 + t15233;
t14392 = t14746 * t15584 - t15259;
t14391 = t14734 * t15584 + t15235;
t14388 = t14745 * t15589 - t15261;
t14387 = t14733 * t15589 + t15237;
t14380 = t14747 * t15210 + t15640;
t14379 = -t14735 * t15210 + t15610;
t14378 = t14746 * t15216 + t15645;
t14377 = -t14734 * t15216 + t15615;
t14376 = t14745 * t15222 + t15650;
t14375 = -t14733 * t15222 + t15620;
t14374 = g(1) * t14768 - g(2) * t15547 + g(3) * t15532;
t14253 = t14448 * t14785 - t14781 * t15087;
t14252 = t14446 * t14785 - t14781 * t15088;
t14251 = t14444 * t14785 - t14781 * t15089;
t14250 = t14448 * t14781 + t14785 * t15087;
t14249 = t14446 * t14781 + t14785 * t15088;
t14248 = t14444 * t14781 + t14785 * t15089;
t14241 = t14436 * t14785 - t14781 * t15093;
t14240 = t14434 * t14785 - t14781 * t15094;
t14239 = t14432 * t14785 - t14781 * t15095;
t14238 = t14436 * t14781 + t14785 * t15093;
t14237 = t14434 * t14781 + t14785 * t15094;
t14236 = t14432 * t14781 + t14785 * t15095;
t14228 = -t14550 * t15434 + t14556 * t14830;
t14226 = -t14549 * t15436 + t14555 * t14828;
t14224 = -t14548 * t15438 + t14554 * t14826;
t14210 = -t14547 * t15443 + t14553 * t14812;
t14208 = -t14546 * t15445 + t14552 * t14810;
t14206 = -t14545 * t15447 + t14551 * t14808;
t14103 = (g(2) * t15443 - g(3) * t15579) * t14747 + (g(2) * t15579 + g(3) * t15443) * t14735 + t14812 * t15951;
t14102 = (g(2) * t15445 - g(3) * t15584) * t14746 + (g(2) * t15584 + g(3) * t15445) * t14734 + t14810 * t15952;
t14101 = (g(2) * t15447 - g(3) * t15589) * t14745 + (g(2) * t15589 + g(3) * t15447) * t14733 + t14808 * t15953;
t14086 = -t14404 * t14781 + t14420 * t14785;
t14085 = t14403 * t14781 + t14419 * t14785;
t14082 = -t14402 * t14781 + t14416 * t14785;
t14081 = t14401 * t14781 + t14415 * t14785;
t14078 = -t14400 * t14781 + t14412 * t14785;
t14077 = t14399 * t14781 + t14411 * t14785;
t14070 = t14404 * t14785 + t14420 * t14781;
t14069 = t14403 * t14785 - t14419 * t14781;
t14068 = t14402 * t14785 + t14416 * t14781;
t14067 = t14401 * t14785 - t14415 * t14781;
t14066 = t14400 * t14785 + t14412 * t14781;
t14065 = t14399 * t14785 - t14411 * t14781;
t14064 = (-g(2) * t14830 - g(3) * t15192) * t14750 + (g(2) * t15192 - g(3) * t14830) * t14738 + t14788 * t15335;
t14063 = (-g(2) * t14828 - g(3) * t15198) * t14749 + (g(2) * t15198 - g(3) * t14828) * t14737 + t14788 * t15336;
t14062 = (-g(2) * t14826 - g(3) * t15204) * t14748 + (g(2) * t15204 - g(3) * t14826) * t14736 + t14788 * t15337;
t14059 = -t14380 * t14781 + t14396 * t14785;
t14058 = t14379 * t14781 + t14395 * t14785;
t14055 = -t14378 * t14781 + t14392 * t14785;
t14054 = t14377 * t14781 + t14391 * t14785;
t14051 = -t14376 * t14781 + t14388 * t14785;
t14050 = t14375 * t14781 + t14387 * t14785;
t14043 = t14380 * t14785 + t14396 * t14781;
t14042 = t14379 * t14785 - t14395 * t14781;
t14041 = t14378 * t14785 + t14392 * t14781;
t14040 = t14377 * t14785 - t14391 * t14781;
t14039 = t14376 * t14785 + t14388 * t14781;
t14038 = t14375 * t14785 - t14387 * t14781;
t14013 = g(1) * t15534 + g(2) * t14480 + g(3) * t14482;
t14012 = g(1) * t15556 - t14479 * g(2) - t14481 * g(3);
t13891 = t14163 * t15434 + t14169 * t14830;
t13890 = t14162 * t15436 + t14168 * t14828;
t13889 = t14161 * t15438 + t14167 * t14826;
t13888 = t14153 * t14830 + t14154 * t15434;
t13887 = t14151 * t14828 + t14152 * t15436;
t13886 = t14149 * t14826 + t14150 * t15438;
t13885 = t14160 * t15443 + t14166 * t14812;
t13884 = t14159 * t15445 + t14165 * t14810;
t13883 = t14158 * t15447 + t14164 * t14808;
t13882 = t14147 * t14812 + t14148 * t15443;
t13881 = t14145 * t14810 + t14146 * t15445;
t13880 = t14143 * t14808 + t14144 * t15447;
t13762 = t13927 * t15434 - t14373 * t15625;
t13761 = t13926 * t15434 + t14373 * t15595;
t13760 = t13925 * t15436 - t14372 * t15630;
t13759 = t13924 * t15436 + t14372 * t15600;
t13758 = t13923 * t15438 - t14371 * t15635;
t13757 = t13922 * t15438 + t14371 * t15605;
t13756 = t13926 * t14830 - t14373 * t15227;
t13755 = t13924 * t14828 - t14372 * t15229;
t13754 = t13922 * t14826 - t14371 * t15231;
t13753 = t13927 * t14830 + t14373 * t15251;
t13752 = t13925 * t14828 + t14372 * t15253;
t13751 = t13923 * t14826 + t14371 * t15255;
t13750 = t13921 * t15443 - t14370 * t15640;
t13749 = t13920 * t15443 + t14370 * t15610;
t13748 = t13919 * t15445 - t14369 * t15645;
t13747 = t13918 * t15445 + t14369 * t15615;
t13746 = t13917 * t15447 - t14368 * t15650;
t13745 = t13916 * t15447 + t14368 * t15620;
t13744 = t13920 * t14812 - t14370 * t15233;
t13743 = t13921 * t14812 + t14370 * t15257;
t13742 = t13918 * t14810 - t14369 * t15235;
t13741 = t13919 * t14810 + t14369 * t15259;
t13740 = t13916 * t14808 - t14368 * t15237;
t13739 = t13917 * t14808 + t14368 * t15261;
t13738 = (pkin(3) * t14244 - t14556 * t15274) * t15506 + t14247 * t14649;
t13737 = (pkin(3) * t14243 - t14555 * t15275) * t15506 + t14246 * t14648;
t13736 = (pkin(3) * t14242 - t14554 * t15276) * t15506 + t14245 * t14647;
t13735 = (t14244 * t15670 - t14720 * t15363) * t14787 + t14247 * t15971;
t13734 = (t14243 * t15671 - t14720 * t15364) * t14787 + t14246 * t15972;
t13733 = (t14242 * t15672 - t14720 * t15365) * t14787 + t14245 * t15973;
t13732 = (pkin(3) * t14220 - t14553 * t15277) * t15506 + t14223 * t14640;
t13731 = (pkin(3) * t14219 - t14552 * t15278) * t15506 + t14222 * t14639;
t13730 = (pkin(3) * t14218 - t14551 * t15279) * t15506 + t14221 * t14638;
t13723 = t13998 * t15075 + t13999 * t14695;
t13722 = t13996 * t15075 + t13997 * t14695;
t13721 = t13994 * t15075 + t13995 * t14695;
t13720 = (t14220 * t15673 - t14720 * t15366) * t14787 + t14223 * t15974;
t13719 = (t14219 * t15674 - t14720 * t15367) * t14787 + t14222 * t15975;
t13718 = (t14218 * t15675 - t14720 * t15368) * t14787 + t14221 * t15976;
t13717 = t13992 * t15075 + t13993 * t14695;
t13716 = t13990 * t15075 + t13991 * t14695;
t13715 = t13988 * t15075 + t13989 * t14695;
t13678 = (t14163 * t15431 - t14169 * t14824) * t14787 - t14163 * t15493;
t13677 = (-t14153 * t14824 + t14154 * t15431) * t14787 - t14154 * t15493;
t13676 = (t14162 * t15432 - t14168 * t14822) * t14787 - t14162 * t15493;
t13675 = (-t14151 * t14822 + t14152 * t15432) * t14787 - t14152 * t15493;
t13674 = (t14161 * t15433 - t14167 * t14820) * t14787 - t14161 * t15493;
t13673 = (-t14149 * t14820 + t14150 * t15433) * t14787 - t14150 * t15493;
t13672 = (t14160 * t15440 - t14166 * t14806) * t14787 - t14160 * t15493;
t13671 = (-t14147 * t14806 + t14148 * t15440) * t14787 - t14148 * t15493;
t13670 = (t14159 * t15441 - t14165 * t14804) * t14787 - t14159 * t15493;
t13669 = (-t14145 * t14804 + t14146 * t15441) * t14787 - t14146 * t15493;
t13668 = (t14158 * t15442 - t14164 * t14802) * t14787 - t14158 * t15493;
t13667 = (-t14143 * t14802 + t14144 * t15442) * t14787 - t14144 * t15493;
t13666 = (t13926 * t14824 + t14373 * t15226) * t14787 - t14750 * t15295;
t13665 = (t13924 * t14822 + t14372 * t15228) * t14787 - t14749 * t15296;
t13664 = (t13922 * t14820 + t14371 * t15230) * t14787 - t14748 * t15297;
t13663 = (-t13927 * t14824 + t14373 * t15250) * t14787 - t14738 * t15295;
t13662 = (-t13925 * t14822 + t14372 * t15252) * t14787 - t14737 * t15296;
t13661 = (-t13923 * t14820 + t14371 * t15254) * t14787 - t14736 * t15297;
t13660 = (t13920 * t14806 + t14370 * t15232) * t14787 - t14747 * t15298;
t13659 = (-t13921 * t14806 + t14370 * t15256) * t14787 - t14735 * t15298;
t13658 = (-t13919 * t14804 + t14369 * t15258) * t14787 - t14734 * t15299;
t13657 = (t13918 * t14804 + t14369 * t15234) * t14787 - t14746 * t15299;
t13656 = (-t13917 * t14802 + t14368 * t15260) * t14787 - t14733 * t15300;
t13655 = (t13916 * t14802 + t14368 * t15236) * t14787 - t14745 * t15300;
t13636 = t14556 * t15134 - (t14244 * t15660 + t15363) * t16033;
t13635 = t14555 * t15135 - (t14243 * t15661 + t15364) * t16033;
t13634 = t14554 * t15136 - (t14242 * t15662 + t15365) * t16033;
t13633 = t14553 * t15137 - (t14220 * t15666 + t15366) * t16033;
t13632 = t14552 * t15138 - (t14219 * t15667 + t15367) * t16033;
t13631 = t14551 * t15139 - (t14218 * t15668 + t15368) * t16033;
t13630 = t14244 * t15131 + (t14695 * t15326 + t15395) * t15749;
t13629 = t14243 * t15131 + (t14695 * t15327 + t15395) * t15751;
t13628 = t14242 * t15131 + (t14695 * t15328 + t15395) * t15753;
t13627 = (t14346 * t14596 - t14599 * t15689) * t14744 + (t14346 * t14599 + t14596 * t15689) * t14732 + t14630 * t15179;
t13626 = (t14345 * t14595 - t14598 * t15691) * t14743 + (t14345 * t14598 + t14595 * t15691) * t14731 + t14629 * t15181;
t13625 = (t14344 * t14594 - t14597 * t15693) * t14742 + (t14344 * t14597 + t14594 * t15693) * t14730 + t14628 * t15183;
t13621 = -(pkin(3) * t13998 + t14277 * t15660) * t15506 + t13999 * t14649;
t13620 = -(pkin(3) * t13996 + t14276 * t15661) * t15506 + t13997 * t14648;
t13619 = -(pkin(3) * t13994 + t14275 * t15662) * t15506 + t13995 * t14647;
t13618 = (t14343 * t14577 - t14580 * t15695) * t14741 + (t14343 * t14580 + t14577 * t15695) * t14729 + t14627 * t15185;
t13617 = (t14342 * t14576 - t14579 * t15697) * t14740 + (t14342 * t14579 + t14576 * t15697) * t14728 + t14626 * t15187;
t13616 = (t14341 * t14575 - t14578 * t15699) * t14739 + (t14341 * t14578 + t14575 * t15699) * t14727 + t14625 * t15189;
t13612 = t14220 * t15131 + (t14695 * t15329 + t15395) * t15755;
t13611 = t14219 * t15131 + (t14695 * t15330 + t15395) * t15757;
t13610 = t14218 * t15131 + (t14695 * t15325 + t15395) * t15759;
t13603 = -(pkin(3) * t13992 + t14274 * t15666) * t15506 + t13993 * t14640;
t13602 = -(pkin(3) * t13990 + t14273 * t15667) * t15506 + t13991 * t14639;
t13601 = -(pkin(3) * t13988 + t14272 * t15668) * t15506 + t13989 * t14638;
t13594 = (t14346 * t15718 + t14596 * t14630) * t14744 + (-t14346 * t15721 + t14599 * t14630) * t14732 - t14346 * t15179;
t13593 = (t14345 * t15719 + t14595 * t14629) * t14743 + (-t14345 * t15722 + t14598 * t14629) * t14731 - t14345 * t15181;
t13592 = (t14344 * t15720 + t14594 * t14628) * t14742 + (-t14344 * t15723 + t14597 * t14628) * t14730 - t14344 * t15183;
t13591 = (t14584 * t15773 - t14593 * t14630) * t14744 + (t14584 * t14630 + t14593 * t15773) * t14732 + t14346 * t15178;
t13590 = (t14583 * t15775 - t14592 * t14629) * t14743 + (t14583 * t14629 + t14592 * t15775) * t14731 + t14345 * t15180;
t13589 = (t14582 * t15777 - t14591 * t14628) * t14742 + (t14582 * t14628 + t14591 * t15777) * t14730 + t14344 * t15182;
t13588 = (t14343 * t15730 + t14577 * t14627) * t14741 + (-t14343 * t15733 + t14580 * t14627) * t14729 - t14343 * t15185;
t13587 = (t14342 * t15731 + t14576 * t14626) * t14740 + (-t14342 * t15734 + t14579 * t14626) * t14728 - t14342 * t15187;
t13586 = (t14341 * t15732 + t14575 * t14625) * t14739 + (-t14341 * t15735 + t14578 * t14625) * t14727 - t14341 * t15189;
t13585 = (t14565 * t15779 - t14574 * t14627) * t14741 + (t14565 * t14627 + t14574 * t15779) * t14729 + t14343 * t15184;
t13584 = (t14564 * t15781 - t14573 * t14626) * t14740 + (t14564 * t14626 + t14573 * t15781) * t14728 + t14342 * t15186;
t13583 = (t14563 * t15783 - t14572 * t14625) * t14739 + (t14563 * t14625 + t14572 * t15783) * t14727 + t14341 * t15188;
t13582 = (t13927 * t15431 + t14373 * t15626) * t14787 - t13927 * t15493;
t13581 = (t13925 * t15432 + t14372 * t15631) * t14787 - t13925 * t15493;
t13580 = (t13924 * t15432 - t14372 * t15601) * t14787 - t13924 * t15493;
t13579 = (t13922 * t15433 - t14371 * t15606) * t14787 - t13922 * t15493;
t13578 = (t13926 * t15431 - t14373 * t15596) * t14787 - t13926 * t15493;
t13577 = (t13923 * t15433 + t14371 * t15636) * t14787 - t13923 * t15493;
t13576 = (t13921 * t15440 + t14370 * t15641) * t14787 - t13921 * t15493;
t13575 = (t13918 * t15441 - t14369 * t15616) * t14787 - t13918 * t15493;
t13574 = (t13917 * t15442 + t14368 * t15651) * t14787 - t13917 * t15493;
t13573 = (t13920 * t15440 - t14370 * t15611) * t14787 - t13920 * t15493;
t13572 = (t13919 * t15441 + t14369 * t15646) * t14787 - t13919 * t15493;
t13571 = (t13916 * t15442 - t14368 * t15621) * t14787 - t13916 * t15493;
t13540 = (t14064 * t14781 - t14785 * t14874) * t14744 + (t14064 * t14785 + t14781 * t14874) * t14732 - t14361 * t15470;
t13539 = (t14781 * t14063 - t14785 * t14875) * t14743 + (t14063 * t14785 + t14781 * t14875) * t14731 - t14360 * t15472;
t13538 = (t14062 * t14781 - t14785 * t14876) * t14742 + (t14062 * t14785 + t14781 * t14876) * t14730 - t14359 * t15474;
t13531 = (t14103 * t14785 - t14781 * t14871) * t14741 + (-t14781 * t14103 - t14785 * t14871) * t14729 + t14358 * t15479;
t13530 = (t14102 * t14785 - t14781 * t14872) * t14740 + (-t14102 * t14781 - t14785 * t14872) * t14728 + t14357 * t15481;
t13529 = (t14101 * t14785 - t14781 * t14873) * t14739 + (-t14101 * t14781 - t14785 * t14873) * t14727 + t14356 * t15483;
t13504 = t13624 * t15076 + t13627 * t14695;
t13503 = t13623 * t15076 + t13626 * t14695;
t13502 = t13622 * t15076 + t13625 * t14695;
t13501 = t13615 * t15076 + t13618 * t14695;
t13500 = t13614 * t15076 + t13617 * t14695;
t13499 = t13613 * t15076 + t13616 * t14695;
t13486 = t13591 * t15075 + t13594 * t14695;
t13485 = t13590 * t15075 + t13593 * t14695;
t13484 = t13589 * t15075 + t13592 * t14695;
t13483 = t13585 * t15075 + t13588 * t14695;
t13482 = t13584 * t15075 + t13587 * t14695;
t13481 = t13583 * t15075 + t13586 * t14695;
t13468 = (t13753 * t14781 + t13762 * t14785) * t14744 + (t13753 * t14785 - t13762 * t14781) * t14732;
t13467 = (t13756 * t14781 + t13761 * t14785) * t14744 + (t13756 * t14785 - t13761 * t14781) * t14732;
t13466 = (t13752 * t14781 + t13760 * t14785) * t14743 + t14731 * (t13752 * t14785 - t13760 * t14781);
t13465 = (t13755 * t14781 + t13759 * t14785) * t14743 + t14731 * (t13755 * t14785 - t13759 * t14781);
t13464 = (t13751 * t14781 + t13758 * t14785) * t14742 + t14730 * (t13751 * t14785 - t13758 * t14781);
t13463 = (t13754 * t14781 + t13757 * t14785) * t14742 + (t13754 * t14785 - t13757 * t14781) * t14730;
t13462 = (t13743 * t14781 + t13750 * t14785) * t14741 + t14729 * (t13743 * t14785 - t13750 * t14781);
t13461 = (t13744 * t14781 + t13749 * t14785) * t14741 + t14729 * (t13744 * t14785 - t13749 * t14781);
t13460 = (t13741 * t14781 + t13748 * t14785) * t14740 + t14728 * (t13741 * t14785 - t13748 * t14781);
t13459 = (t13742 * t14781 + t13747 * t14785) * t14740 + t14728 * (t13742 * t14785 - t13747 * t14781);
t13458 = (t13739 * t14781 + t13746 * t14785) * t14739 + (t13739 * t14785 - t13746 * t14781) * t14727;
t13457 = (t13740 * t14781 + t13745 * t14785) * t14739 + (t13740 * t14785 - t13745 * t14781) * t14727;
t13456 = (pkin(3) * t13624 - t13714 * t15660) * t15506 + t13627 * t14649;
t13455 = (pkin(3) * t13623 - t13713 * t15661) * t15506 + t13626 * t14648;
t13454 = (pkin(3) * t13622 - t13712 * t15662) * t15506 + t13625 * t14647;
t13453 = (pkin(3) * t13678 + t13891 * t14726) * t14829 + t14823 * (-pkin(3) * t13891 + t13678 * t14726);
t13452 = (pkin(3) * t13676 + t13890 * t14726) * t14827 + t14821 * (-pkin(3) * t13890 + t13676 * t14726);
t13451 = (pkin(3) * t13674 + t13889 * t14726) * t14825 + t14819 * (-pkin(3) * t13889 + t13674 * t14726);
t13450 = (-pkin(3) * t13677 - t13888 * t14726) * t14829 - t14823 * (-pkin(3) * t13888 + t13677 * t14726);
t13449 = (-pkin(3) * t13675 - t13887 * t14726) * t14827 - t14821 * (-pkin(3) * t13887 + t13675 * t14726);
t13448 = (-pkin(3) * t13673 - t13886 * t14726) * t14825 - t14819 * (-pkin(3) * t13886 + t13673 * t14726);
t13447 = (t13624 * t15670 - t14720 * t15933) * t14787 + t13627 * t15971;
t13446 = (t13623 * t15671 - t14720 * t15934) * t14787 + t13626 * t15972;
t13445 = (t13622 * t15672 - t14720 * t15935) * t14787 + t13625 * t15973;
t13444 = (pkin(3) * t13672 + t13885 * t14726) * t14811 + t14805 * (-pkin(3) * t13885 + t13672 * t14726);
t13443 = (pkin(3) * t13670 + t13884 * t14726) * t14809 + t14803 * (-pkin(3) * t13884 + t13670 * t14726);
t13442 = (pkin(3) * t13668 + t13883 * t14726) * t14807 + t14801 * (-pkin(3) * t13883 + t13668 * t14726);
t13441 = (-pkin(3) * t13671 - t13882 * t14726) * t14811 - t14805 * (-pkin(3) * t13882 + t13671 * t14726);
t13440 = (-pkin(3) * t13669 - t13881 * t14726) * t14809 - t14803 * (-pkin(3) * t13881 + t13669 * t14726);
t13439 = (-pkin(3) * t13667 - t13880 * t14726) * t14807 - t14801 * (-pkin(3) * t13880 + t13667 * t14726);
t13438 = (pkin(3) * t13615 - t13711 * t15666) * t15506 + t13618 * t14640;
t13437 = (pkin(3) * t13614 - t13710 * t15667) * t15506 + t13617 * t14639;
t13436 = (pkin(3) * t13613 - t13709 * t15668) * t15506 + t13616 * t14638;
t13435 = (t13615 * t15673 - t14720 * t15936) * t14787 + t13618 * t15974;
t13434 = (t13614 * t15674 - t14720 * t15937) * t14787 + t13617 * t15975;
t13433 = (t13613 * t15675 - t14720 * t15938) * t14787 + t13616 * t15976;
t13432 = (t14750 * t15068 + (t14750 * t15172 + t14772 * t14925) * t14839 - t14951 * t14205) * t14766 + (-t14772 * t15051 + (t14070 * t14732 - t14086 * t14744) * t14624) * t14771 - t14086 * t15239 + t14070 * t15263 + t14205 * t15195;
t13430 = (t14738 * t15068 + (t14738 * t15172 + t14769 * t14925) * t14839 - t14951 * t14204) * t14766 + (-t14769 * t15051 + (-t14069 * t14732 - t14085 * t14744) * t14624) * t14771 - t14085 * t15239 - t14069 * t15263 + t14204 * t15195;
t13428 = (t14749 * t15069 + (t14749 * t15173 + t14772 * t14926) * t14838 - t14952 * t14203) * t14765 + (-t14772 * t15053 + (t14068 * t14731 - t14082 * t14743) * t14623) * t14771 - t14082 * t15241 + t14068 * t15265 + t14203 * t15201;
t13426 = (t14737 * t15069 + (t14737 * t15173 + t14769 * t14926) * t14838 - t14952 * t14202) * t14765 + (-t14769 * t15053 + (-t14067 * t14731 - t14081 * t14743) * t14623) * t14771 - t14081 * t15241 - t14067 * t15265 + t14202 * t15201;
t13424 = (t14748 * t15070 + (t14748 * t15174 + t14772 * t14927) * t14837 - t14953 * t14201) * t14764 + (-t14772 * t15055 + (t14066 * t14730 - t14078 * t14742) * t14622) * t14771 - t14078 * t15243 + t14066 * t15267 + t14201 * t15207;
t13422 = (t14736 * t15070 + (t14736 * t15174 + t14769 * t14927) * t14837 - t14953 * t14200) * t14764 + (-t14769 * t15055 + (-t14065 * t14730 - t14077 * t14742) * t14622) * t14771 - t14077 * t15243 - t14065 * t15267 + t14200 * t15207;
t13420 = ((-t14127 * t15721 - t14133 * t14599) * t14744 - (t14127 * t15718 - t14133 * t14596) * t14732) * t14750 + ((-t14127 * t14599 + t14133 * t15721) * t14744 + t14732 * (t14127 * t14596 + t14133 * t15718)) * t14738;
t13419 = ((-t14126 * t15722 - t14132 * t14598) * t14743 - (t14126 * t15719 - t14132 * t14595) * t14731) * t14749 + t14737 * ((-t14126 * t14598 + t14132 * t15722) * t14743 + t14731 * (t14126 * t14595 + t14132 * t15719));
t13418 = ((-t14125 * t15723 - t14131 * t14597) * t14742 - (t14125 * t15720 - t14131 * t14594) * t14730) * t14748 + t14736 * ((-t14125 * t14597 + t14131 * t15723) * t14742 + (t14125 * t14594 + t14131 * t15720) * t14730);
t13417 = (t14747 * t15071 + (t14747 * t15175 + t14772 * t14928) * t14836 - t14957 * t14199) * t14763 + (-t14772 * t15057 + (t14043 * t14729 - t14059 * t14741) * t14621) * t14771 - t14059 * t15245 + t14043 * t15269 + t14199 * t15213;
t13415 = (t14735 * t15071 + (t14735 * t15175 + t14769 * t14928) * t14836 - t14957 * t14198) * t14763 + (-t14769 * t15057 + (-t14042 * t14729 - t14058 * t14741) * t14621) * t14771 - t14058 * t15245 - t14042 * t15269 + t14198 * t15213;
t13413 = (t14746 * t15072 + (t14746 * t15176 + t14772 * t14929) * t14835 - t14958 * t14197) * t14762 + (-t14772 * t15059 + (t14041 * t14728 - t14055 * t14740) * t14620) * t14771 - t14055 * t15247 + t14041 * t15271 + t14197 * t15219;
t13411 = (t14734 * t15072 + (t14734 * t15176 + t14769 * t14929) * t14835 - t14958 * t14196) * t14762 + (-t14769 * t15059 + (-t14040 * t14728 - t14054 * t14740) * t14620) * t14771 - t14054 * t15247 - t14040 * t15271 + t14196 * t15219;
t13409 = (t14745 * t15073 + (t14745 * t15177 + t14772 * t14930) * t14834 - t14959 * t14195) * t14761 + (-t14772 * t15061 + (t14039 * t14727 - t14051 * t14739) * t14619) * t14771 - t14051 * t15249 + t14039 * t15273 + t14195 * t15225;
t13407 = (t14733 * t15073 + (t14733 * t15177 + t14769 * t14930) * t14834 - t14959 * t14194) * t14761 + (-t14769 * t15061 + (-t14038 * t14727 - t14050 * t14739) * t14619) * t14771 - t14050 * t15249 - t14038 * t15273 + t14194 * t15225;
t13405 = ((-t14124 * t15733 - t14130 * t14580) * t14741 - (t14124 * t15730 - t14130 * t14577) * t14729) * t14747 + t14735 * ((-t14124 * t14580 + t14130 * t15733) * t14741 + (t14124 * t14577 + t14130 * t15730) * t14729);
t13404 = ((-t14123 * t15734 - t14129 * t14579) * t14740 - (t14123 * t15731 - t14129 * t14576) * t14728) * t14746 + t14734 * ((-t14123 * t14579 + t14129 * t15734) * t14740 + (t14123 * t14576 + t14129 * t15731) * t14728);
t13403 = ((-t14122 * t15735 - t14128 * t14578) * t14739 - (t14122 * t15732 - t14128 * t14575) * t14727) * t14745 + ((-t14122 * t14578 + t14128 * t15735) * t14739 + t14727 * (t14122 * t14575 + t14128 * t15732)) * t14733;
t13402 = -(pkin(3) * t13591 + t13696 * t15660) * t15506 + t13594 * t14649;
t13401 = -(pkin(3) * t13590 + t13695 * t15661) * t15506 + t13593 * t14648;
t13400 = -(pkin(3) * t13589 + t13694 * t15662) * t15506 + t13592 * t14647;
t13399 = (-t13591 * t15670 - t14720 * t15939) * t14787 + t13594 * t15971;
t13398 = (-t13590 * t15671 - t14720 * t15940) * t14787 + t13593 * t15972;
t13397 = (-t13589 * t15672 - t14720 * t15941) * t14787 + t13592 * t15973;
t13396 = -(pkin(3) * t13585 + t13693 * t15666) * t15506 + t13588 * t14640;
t13395 = -(pkin(3) * t13584 + t13692 * t15667) * t15506 + t13587 * t14639;
t13394 = -(pkin(3) * t13583 + t13691 * t15668) * t15506 + t13586 * t14638;
t13393 = (-t13585 * t15673 - t14720 * t15942) * t14787 + t13588 * t15974;
t13392 = (-t13584 * t15674 - t14720 * t15943) * t14787 + t13587 * t15975;
t13391 = (-t13583 * t15675 - t14720 * t15944) * t14787 + t13586 * t15976;
t13378 = -t13540 * t14823 + t14829 * t16003;
t13377 = -t13540 * t14829 - t14823 * t16003;
t13376 = -t14821 * t13539 + t14827 * t16004;
t13375 = -t14827 * t13539 - t14821 * t16004;
t13374 = -t13538 * t14819 + t14825 * t16005;
t13373 = -t13538 * t14825 - t14819 * t16005;
t13372 = ((-t14126 * t15785 + t14132 * t14318) * t14743 + t14731 * (t14126 * t15788 + t14132 * t14327)) * t14749 + t14737 * ((t14126 * t14318 + t14132 * t15785) * t14743 + (t14126 * t14327 - t14132 * t15788) * t14731);
t13371 = ((-t14125 * t15786 + t14131 * t14317) * t14742 + (t14125 * t15789 + t14131 * t14326) * t14730) * t14748 + t14736 * ((t14125 * t14317 + t14131 * t15786) * t14742 + t14730 * (t14125 * t14326 - t14131 * t15789));
t13370 = ((-t14127 * t15784 + t14133 * t14319) * t14744 + t14732 * (t14127 * t15787 + t14133 * t14328)) * t14750 + ((t14127 * t14319 + t14133 * t15784) * t14744 + (t14127 * t14328 - t14133 * t15787) * t14732) * t14738;
t13369 = t14805 * t13531 + t14811 * t16006;
t13368 = t14811 * t13531 - t14805 * t16006;
t13367 = t14803 * t13530 + t14809 * t16007;
t13366 = t14809 * t13530 - t14803 * t16007;
t13365 = t14801 * t13529 + t14807 * t16008;
t13364 = t14807 * t13529 - t14801 * t16008;
t13363 = ((-t14124 * t15790 + t14130 * t14298) * t14741 + (t14124 * t15793 + t14130 * t14307) * t14729) * t14747 + t14735 * ((t14124 * t14298 + t14130 * t15790) * t14741 + (t14124 * t14307 - t14130 * t15793) * t14729);
t13362 = ((-t14123 * t15791 + t14129 * t14297) * t14740 + (t14123 * t15794 + t14129 * t14306) * t14728) * t14746 + t14734 * ((t14123 * t14297 + t14129 * t15791) * t14740 + (t14123 * t14306 - t14129 * t15794) * t14728);
t13361 = ((-t14122 * t15792 + t14128 * t14296) * t14739 + t14727 * (t14122 * t15795 + t14128 * t14305)) * t14745 + ((t14122 * t14296 + t14128 * t15792) * t14739 + (t14122 * t14305 - t14128 * t15795) * t14727) * t14733;
t13360 = ((-t14250 * t15689 - t14253 * t14346) * t14744 + (t14250 * t14346 - t14253 * t15689) * t14732 + t14447 * t15688) * t14823 + ((t13624 * t15660 + t15933) * t14774 - t15933) * t14726;
t13359 = ((-t14249 * t15691 - t14252 * t14345) * t14743 + (t14249 * t14345 - t14252 * t15691) * t14731 + t14445 * t15690) * t14821 + ((t13623 * t15661 + t15934) * t14774 - t15934) * t14726;
t13358 = ((-t14248 * t15693 - t14251 * t14344) * t14742 + (t14248 * t14344 - t14251 * t15693) * t14730 + t14443 * t15692) * t14819 + ((t13622 * t15662 + t15935) * t14774 - t15935) * t14726;
t13357 = ((-t14238 * t15695 - t14241 * t14343) * t14741 + (t14238 * t14343 - t14241 * t15695) * t14729 + t14435 * t15694) * t14805 + ((t13615 * t15666 + t15936) * t14774 - t15936) * t14726;
t13356 = ((-t14237 * t15697 - t14240 * t14342) * t14740 + (t14237 * t14342 - t14240 * t15697) * t14728 + t14433 * t15696) * t14803 + ((t13614 * t15667 + t15937) * t14774 - t15937) * t14726;
t13355 = ((-t14236 * t15699 - t14239 * t14341) * t14739 + (t14236 * t14341 - t14239 * t15699) * t14727 + t14431 * t15698) * t14801 + ((t13613 * t15668 + t15938) * t14774 - t15938) * t14726;
t13354 = (t13582 * t14785 + t13663 * t14781) * t14744 + t14732 * (-t13582 * t14781 + t13663 * t14785);
t13353 = (t13581 * t14785 + t13662 * t14781) * t14743 + t14731 * (-t13581 * t14781 + t13662 * t14785);
t13352 = (t13580 * t14785 - t13665 * t14781) * t14743 - t14731 * (t13580 * t14781 + t13665 * t14785);
t13351 = (t13579 * t14785 - t13664 * t14781) * t14742 - (t13579 * t14781 + t13664 * t14785) * t14730;
t13350 = (t13578 * t14785 - t13666 * t14781) * t14744 - (t13578 * t14781 + t13666 * t14785) * t14732;
t13349 = (t13577 * t14785 + t13661 * t14781) * t14742 + (-t13577 * t14781 + t13661 * t14785) * t14730;
t13348 = (t13576 * t14785 + t13659 * t14781) * t14741 + (-t13576 * t14781 + t13659 * t14785) * t14729;
t13347 = (t13575 * t14785 - t13657 * t14781) * t14740 - t14728 * (t13575 * t14781 + t13657 * t14785);
t13346 = (t13574 * t14785 + t13656 * t14781) * t14739 + (-t13574 * t14781 + t13656 * t14785) * t14727;
t13345 = (t13573 * t14785 - t13660 * t14781) * t14741 - t14729 * (t13573 * t14781 + t13660 * t14785);
t13344 = (t13572 * t14785 + t13658 * t14781) * t14740 + t14728 * (-t13572 * t14781 + t13658 * t14785);
t13343 = (t13571 * t14785 - t13655 * t14781) * t14739 - (t13571 * t14781 + t13655 * t14785) * t14727;
t13342 = (-t13591 * t15970 + t15283) * t14774 - t15283 + (-t14268 * t15773 + t14271 * t14630) * t14744 + (-t14268 * t14630 - t14271 * t15773) * t14732 + t14454 * t15772;
t13341 = (-t13590 * t15970 + t15284) * t14774 - t15284 + (-t14267 * t15775 + t14270 * t14629) * t14743 + (-t14267 * t14629 - t14270 * t15775) * t14731 + t14453 * t15774;
t13340 = (-t13589 * t15970 + t15285) * t14774 - t15285 + (-t14266 * t15777 + t14269 * t14628) * t14742 + (-t14266 * t14628 - t14269 * t15777) * t14730 + t14452 * t15776;
t13339 = (-t13585 * t15970 + t15286) * t14774 - t15286 + (-t14262 * t15779 + t14265 * t14627) * t14741 + (-t14262 * t14627 - t14265 * t15779) * t14729 + t14442 * t15778;
t13338 = (-t13584 * t15970 + t15287) * t14774 - t15287 + (-t14261 * t15781 + t14264 * t14626) * t14740 + (-t14261 * t14626 - t14264 * t15781) * t14728 + t14441 * t15780;
t13337 = (-t13583 * t15970 + t15288) * t14774 - t15288 + (-t14260 * t15783 + t14263 * t14625) * t14739 + (-t14260 * t14625 - t14263 * t15783) * t14727 + t14440 * t15782;
t13336 = ((-t14250 * t15773 + t14253 * t14630) * t14744 + (-t14250 * t14630 - t14253 * t15773) * t14732 + t14447 * t15772) * t14823 + ((t13591 * t15660 - t15939) * t14774 + t15939) * t14726;
t13335 = ((-t14249 * t15775 + t14252 * t14629) * t14743 + (-t14249 * t14629 - t14252 * t15775) * t14731 + t14445 * t15774) * t14821 + ((t13590 * t15661 - t15940) * t14774 + t15940) * t14726;
t13334 = ((-t14248 * t15777 + t14251 * t14628) * t14742 + (-t14248 * t14628 - t14251 * t15777) * t14730 + t14443 * t15776) * t14819 + ((t13589 * t15662 - t15941) * t14774 + t15941) * t14726;
t13333 = ((-t14238 * t15779 + t14241 * t14627) * t14741 + (-t14238 * t14627 - t14241 * t15779) * t14729 + t14435 * t15778) * t14805 + ((t13585 * t15666 - t15942) * t14774 + t15942) * t14726;
t13332 = ((-t14237 * t15781 + t14240 * t14626) * t14740 + (-t14237 * t14626 - t14240 * t15781) * t14728 + t14433 * t15780) * t14803 + ((t13584 * t15667 - t15943) * t14774 + t15943) * t14726;
t13331 = ((-t14236 * t15783 + t14239 * t14625) * t14739 + (-t14236 * t14625 - t14239 * t15783) * t14727 + t14431 * t15782) * t14801 + ((t13583 * t15668 - t15944) * t14774 + t15944) * t14726;
t13324 = (pkin(3) * t13370 + t13420 * t14726) * t14829 - t14823 * (pkin(3) * t13420 - t13370 * t14726);
t13323 = (pkin(3) * t13372 + t13419 * t14726) * t14827 - t14821 * (pkin(3) * t13419 - t13372 * t14726);
t13322 = (pkin(3) * t13371 + t13418 * t14726) * t14825 - t14819 * (pkin(3) * t13418 - t13371 * t14726);
t13321 = (pkin(3) * t13363 + t13405 * t14726) * t14811 - t14805 * (pkin(3) * t13405 - t13363 * t14726);
t13320 = (pkin(3) * t13362 + t13404 * t14726) * t14809 - t14803 * (pkin(3) * t13404 - t13362 * t14726);
t13319 = (pkin(3) * t13361 + t13403 * t14726) * t14807 - (pkin(3) * t13403 - t13361 * t14726) * t14801;
t13318 = (-pkin(3) * t13354 - t13468 * t14726) * t14829 + t14823 * (pkin(3) * t13468 - t13354 * t14726);
t13317 = (-pkin(3) * t13350 - t13467 * t14726) * t14829 + t14823 * (pkin(3) * t13467 - t13350 * t14726);
t13316 = (-pkin(3) * t13353 - t13466 * t14726) * t14827 + t14821 * (pkin(3) * t13466 - t13353 * t14726);
t13315 = (-pkin(3) * t13352 - t13465 * t14726) * t14827 + t14821 * (pkin(3) * t13465 - t13352 * t14726);
t13314 = (-pkin(3) * t13349 - t13464 * t14726) * t14825 + t14819 * (pkin(3) * t13464 - t13349 * t14726);
t13313 = (-pkin(3) * t13351 - t13463 * t14726) * t14825 + t14819 * (pkin(3) * t13463 - t13351 * t14726);
t13312 = (-pkin(3) * t13348 - t13462 * t14726) * t14811 + t14805 * (pkin(3) * t13462 - t13348 * t14726);
t13311 = (-pkin(3) * t13344 - t13460 * t14726) * t14809 + (pkin(3) * t13460 - t13344 * t14726) * t14803;
t13310 = (-pkin(3) * t13347 - t13459 * t14726) * t14809 + (pkin(3) * t13459 - t13347 * t14726) * t14803;
t13309 = (-pkin(3) * t13346 - t13458 * t14726) * t14807 + (pkin(3) * t13458 - t13346 * t14726) * t14801;
t13308 = (-pkin(3) * t13343 - t13457 * t14726) * t14807 + t14801 * (pkin(3) * t13457 - t13343 * t14726);
t13307 = (-pkin(3) * t13345 - t13461 * t14726) * t14811 + t14805 * (pkin(3) * t13461 - t13345 * t14726);
t1 = [-((((t14228 * t14695 + t14234 * t15075) * t14783 + t14550 * t14938) * t14766 - 0.2e1 * t14157 * t14760) * t14780 + ((((-t14234 * t15670 + t14720 * t15369) * t14787 + t14228 * t15971) * t14783 + t14877 * t14774 - t14550 * t14697 - t14877) * t14766 + t13834 * t14760) * t14829 + (t14550 * t15134 + (t14228 * t15682 + (-(pkin(3) * t14234 - t14550 * t15274) * t15492 - t14904 * t14774 + t14904) * t14782) * pkin(9)) * t14766 + t14760 * t15026) * t15888 - ((((t14226 * t14695 + t14232 * t15075) * t14783 + t14549 * t14938) * t14765 - 0.2e1 * t14156 * t14759) * t14779 + ((((-t14232 * t15671 + t14720 * t15370) * t14787 + t14226 * t15972) * t14783 + t14878 * t14774 - t14549 * t14697 - t14878) * t14765 + t13833 * t14759) * t14827 + (t14549 * t15135 + (t14226 * t15683 + (-(pkin(3) * t14232 - t14549 * t15275) * t15492 - t14905 * t14774 + t14905) * t14782) * pkin(9)) * t14765 + t14759 * t15027) * t15889 - ((((t14224 * t14695 + t14230 * t15075) * t14783 + t14548 * t14938) * t14764 - 0.2e1 * t14155 * t14758) * t14778 + ((((-t14230 * t15672 + t14720 * t15371) * t14787 + t14224 * t15973) * t14783 + t14879 * t14774 - t14548 * t14697 - t14879) * t14764 + t13832 * t14758) * t14825 + (t14548 * t15136 + (t14224 * t15684 + (-(pkin(3) * t14230 - t14548 * t15276) * t15492 - t14906 * t14774 + t14906) * t14782) * pkin(9)) * t14764 + t14758 * t15028) * t15890 - ((((t14210 * t14695 + t14216 * t15075) * t14783 + t14547 * t14938) * t14763 - 0.2e1 * t14142 * t14757) * t14777 + ((((-t14216 * t15673 + t14720 * t15372) * t14787 + t14210 * t15974) * t14783 + t14880 * t14774 - t14547 * t14697 - t14880) * t14763 + t13813 * t14757) * t14811 + (t14547 * t15137 + (t14210 * t15685 + (-(pkin(3) * t14216 - t14547 * t15277) * t15492 - t14910 * t14774 + t14910) * t14782) * pkin(9)) * t14763 + t14757 * t15029) * t15891 - ((((t14208 * t14695 + t14214 * t15075) * t14783 + t14546 * t14938) * t14762 - 0.2e1 * t14141 * t14756) * t14776 + ((((-t14214 * t15674 + t14720 * t15373) * t14787 + t14208 * t15975) * t14783 + t14881 * t14774 - t14546 * t14697 - t14881) * t14762 + t13812 * t14756) * t14809 + (t14546 * t15138 + (t14208 * t15686 + (-(pkin(3) * t14214 - t14546 * t15278) * t15492 - t14911 * t14774 + t14911) * t14782) * pkin(9)) * t14762 + t14756 * t15030) * t15892 - ((((t14206 * t14695 + t14212 * t15075) * t14783 + t14545 * t14938) * t14761 - 0.2e1 * t14140 * t14755) * t14775 + ((((-t14212 * t15675 + t14720 * t15374) * t14787 + t14206 * t15976) * t14783 + t14882 * t14774 - t14545 * t14697 - t14882) * t14761 + t13811 * t14755) * t14807 + (t14545 * t15139 + (t14206 * t15687 + (-(pkin(3) * t14212 - t14545 * t15279) * t15492 - t14912 * t14774 + t14912) * t14782) * pkin(9)) * t14761 + t14755 * t15031) * t15893, 0, t13547 * t15312 + t13549 * t15311 + t13551 * t15310 + t13556 * t15309 + t13558 * t15308 + t13560 * t15307, -t13562 * t15309 - t13563 * t15308 - t13564 * t15307 + t15127 * t15310 + t15128 * t15311 + t15129 * t15312, 0, 0, 0, 0, 0, (-t13378 * t15870 + t13479 * t15894) * t14766 + (-t13376 * t15871 + t13477 * t15895) * t14765 + (-t13374 * t15872 + t13476 * t15896) * t14764 + (-t13369 * t15873 + t13471 * t15897) * t14763 + (-t13367 * t15874 + t13470 * t15898) * t14762 + (-t13365 * t15875 + t13469 * t15899) * t14761, (-t13377 * t15870 + t13480 * t15894) * t14766 + (-t13375 * t15871 + t13478 * t15895) * t14765 + (-t13373 * t15872 + t13475 * t15896) * t14764 + (-t13368 * t15873 + t13474 * t15897) * t14763 + (-t13366 * t15874 + t13473 * t15898) * t14762 + (-t13364 * t15875 + t13472 * t15899) * t14761, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t14374 * t14768 + (-t14012 * t14767 - t14013 * t14770) * t14771; -(((t13723 * t14738 + t14750 * t15997) * t14783 + (t14277 * t14738 + t14750 * t15749) * t14998) * t14780 + ((t14750 * t13735 + t14738 * t14939) * t14783 + t16027 * t14738 + t13630 * t14750) * t14829 + (t13621 * t14738 + t13738 * t14750) * t15955 - t16026 * t14738 - t13636 * t14750) * t15888 - (((t13722 * t14737 + t14749 * t15998) * t14783 + (t14276 * t14737 + t14749 * t15751) * t14998) * t14779 + ((t14749 * t13734 + t14737 * t14940) * t14783 + t16028 * t14737 + t13629 * t14749) * t14827 + (t13620 * t14737 + t13737 * t14749) * t15955 - t16025 * t14737 - t13635 * t14749) * t15889 - (((t13721 * t14736 + t14748 * t15999) * t14783 + (t14275 * t14736 + t14748 * t15753) * t14998) * t14778 + ((t14748 * t13733 + t14736 * t14941) * t14783 + t16029 * t14736 + t13628 * t14748) * t14825 + (t13619 * t14736 + t13736 * t14748) * t15955 - t16024 * t14736 - t13634 * t14748) * t15890 - (((t13717 * t14735 + t14747 * t16000) * t14783 + (t14274 * t14735 + t14747 * t15755) * t14998) * t14777 + ((t14747 * t13720 + t14735 * t14942) * t14783 + t16030 * t14735 + t13612 * t14747) * t14811 + (t13603 * t14735 + t13732 * t14747) * t15955 - t16023 * t14735 - t13633 * t14747) * t15891 - (((t13716 * t14734 + t14746 * t16001) * t14783 + (t14273 * t14734 + t14746 * t15757) * t14998) * t14776 + ((t14746 * t13719 + t14734 * t14943) * t14783 + t16031 * t14734 + t13611 * t14746) * t14809 + (t13602 * t14734 + t13731 * t14746) * t15955 - t16022 * t14734 - t13632 * t14746) * t15892 - (((t13715 * t14733 + t14745 * t16002) * t14783 + (t14272 * t14733 + t14745 * t15759) * t14998) * t14775 + ((t14745 * t13718 + t14733 * t14944) * t14783 + t16032 * t14733 + t13610 * t14745) * t14807 + (t13601 * t14733 + t13730 * t14745) * t15955 - t16021 * t14733 - t13631 * t14745) * t15893, 0, t13442 * t15887 + t13443 * t15885 + t13444 * t15883 + t13451 * t15881 + t13452 * t15879 + t13453 * t15877, t13442 * t15886 + t13443 * t15884 + t13444 * t15882 - t13451 * t15880 - t13452 * t15878 - t13453 * t15876, 0, 0, 0, 0, 0, t13365 * t15868 + t13367 * t15866 + t13369 * t15864 + t13374 * t15862 + t13376 * t15860 + t13378 * t15858 + t13442 * t15911 + t13443 * t15910 + t13444 * t15909 + t13451 * t15904 + t13452 * t15903 + t13453 * t15901, t13364 * t15868 + t13366 * t15866 + t13368 * t15864 + t13373 * t15862 + t13375 * t15860 + t13377 * t15858 + t13442 * t15908 + t13443 * t15907 + t13444 * t15906 + t13451 * t15905 + t13452 * t15902 + t13453 * t15900, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14012 * t14479 - t14013 * t14480 + t14374 * t15547; -(((-t13723 * t14750 + t14738 * t15997) * t14783 + (t14277 * t14750 - t14738 * t15749) * t14997) * t14780 + ((t14738 * t13735 - t14750 * t14939) * t14783 - t16027 * t14750 + t14738 * t13630) * t14829 - (t13621 * t14750 - t13738 * t14738) * t15955 + t16026 * t14750 - t14738 * t13636) * t15888 - (((-t13722 * t14749 + t14737 * t15998) * t14783 + (t14276 * t14749 - t14737 * t15751) * t14997) * t14779 + ((t14737 * t13734 - t14749 * t14940) * t14783 - t16028 * t14749 + t14737 * t13629) * t14827 - (t13620 * t14749 - t13737 * t14737) * t15955 + t16025 * t14749 - t14737 * t13635) * t15889 - (((-t13721 * t14748 + t14736 * t15999) * t14783 + (t14275 * t14748 - t14736 * t15753) * t14997) * t14778 + ((t14736 * t13733 - t14748 * t14941) * t14783 - t16029 * t14748 + t14736 * t13628) * t14825 - (t13619 * t14748 - t13736 * t14736) * t15955 + t16024 * t14748 - t14736 * t13634) * t15890 - (((-t13717 * t14747 + t14735 * t16000) * t14783 + (t14274 * t14747 - t14735 * t15755) * t14997) * t14777 + ((t14735 * t13720 - t14747 * t14942) * t14783 - t16030 * t14747 + t14735 * t13612) * t14811 - (t13603 * t14747 - t13732 * t14735) * t15955 + t16023 * t14747 - t14735 * t13633) * t15891 - (((-t13716 * t14746 + t14734 * t16001) * t14783 + (t14273 * t14746 - t14734 * t15757) * t14997) * t14776 + ((t14734 * t13719 - t14746 * t14943) * t14783 - t16031 * t14746 + t14734 * t13611) * t14809 - (t13602 * t14746 - t13731 * t14734) * t15955 + t16022 * t14746 - t14734 * t13632) * t15892 - (((-t13715 * t14745 + t14733 * t16002) * t14783 + (t14272 * t14745 - t14733 * t15759) * t14997) * t14775 + ((t14733 * t13718 - t14745 * t14944) * t14783 - t16032 * t14745 + t14733 * t13610) * t14807 - (t13601 * t14745 - t13730 * t14733) * t15955 + t16021 * t14745 - t14733 * t13631) * t15893, 0, t13439 * t15887 + t13440 * t15885 + t13441 * t15883 + t13448 * t15881 + t13449 * t15879 + t13450 * t15877, t13439 * t15886 + t13440 * t15884 + t13441 * t15882 - t13448 * t15880 - t13449 * t15878 - t13450 * t15876, 0, 0, 0, 0, 0, t13365 * t15869 + t13367 * t15867 + t13369 * t15865 + t13374 * t15863 + t13376 * t15861 + t13378 * t15859 + t13439 * t15911 + t13440 * t15910 + t13441 * t15909 + t13448 * t15904 + t13449 * t15903 + t13450 * t15901, t13364 * t15869 + t13366 * t15867 + t13368 * t15865 + t13373 * t15863 + t13375 * t15861 + t13377 * t15859 + t13439 * t15908 + t13440 * t15907 + t13441 * t15906 + t13448 * t15905 + t13449 * t15902 + t13450 * t15900, 0, 0, 0, 0, 0, 0, 0, 0, 0, t14012 * t14481 - t14013 * t14482 - t14374 * t15532; -((((-t13486 * t14769 + t13504 * t14772) * t14750 + (t13486 * t14772 + t13504 * t14769) * t14738) * t14783 + ((-t13696 * t14769 + t13714 * t14772) * t14750 + (t13696 * t14772 + t13714 * t14769) * t14738) * t14998) * t14780 + (((-t13399 * t14769 + t13447 * t14772) * t14750 + t14738 * (t13399 * t14772 + t13447 * t14769)) * t14783 + (-t14769 * t13342 - t14772 * t14865) * t14750 + (t13342 * t14772 - t14769 * t14865) * t14738) * t14829 + ((-t13402 * t14769 + t13456 * t14772) * t14750 + (t13402 * t14772 + t13456 * t14769) * t14738) * t15955 + (t13336 * t14769 + t13360 * t14772) * t14750 - t14738 * (t13336 * t14772 - t13360 * t14769)) * t15888 - ((((-t13485 * t14769 + t13503 * t14772) * t14749 + t14737 * (t13485 * t14772 + t13503 * t14769)) * t14783 + ((-t13695 * t14769 + t13713 * t14772) * t14749 + (t13695 * t14772 + t13713 * t14769) * t14737) * t14998) * t14779 + (((-t13398 * t14769 + t13446 * t14772) * t14749 + t14737 * (t13398 * t14772 + t13446 * t14769)) * t14783 + (-t14769 * t13341 - t14772 * t14866) * t14749 + (t13341 * t14772 - t14769 * t14866) * t14737) * t14827 + ((-t13401 * t14769 + t13455 * t14772) * t14749 + (t13401 * t14772 + t13455 * t14769) * t14737) * t15955 + (t13335 * t14769 + t13359 * t14772) * t14749 - t14737 * (t13335 * t14772 - t13359 * t14769)) * t15889 - ((((-t13484 * t14769 + t13502 * t14772) * t14748 + t14736 * (t13484 * t14772 + t13502 * t14769)) * t14783 + ((-t13694 * t14769 + t13712 * t14772) * t14748 + (t13694 * t14772 + t13712 * t14769) * t14736) * t14998) * t14778 + (((-t13397 * t14769 + t13445 * t14772) * t14748 + t14736 * (t13397 * t14772 + t13445 * t14769)) * t14783 + (-t14769 * t13340 - t14772 * t14867) * t14748 + (t13340 * t14772 - t14769 * t14867) * t14736) * t14825 + ((-t13400 * t14769 + t13454 * t14772) * t14748 + (t13400 * t14772 + t13454 * t14769) * t14736) * t15955 + (t13334 * t14769 + t13358 * t14772) * t14748 - t14736 * (t13334 * t14772 - t13358 * t14769)) * t15890 - ((((-t13483 * t14769 + t13501 * t14772) * t14747 + t14735 * (t13483 * t14772 + t13501 * t14769)) * t14783 + ((-t13693 * t14769 + t13711 * t14772) * t14747 + (t13693 * t14772 + t13711 * t14769) * t14735) * t14998) * t14777 + (((-t13393 * t14769 + t13435 * t14772) * t14747 + t14735 * (t13393 * t14772 + t13435 * t14769)) * t14783 + (-t14769 * t13339 - t14772 * t14868) * t14747 + (t13339 * t14772 - t14769 * t14868) * t14735) * t14811 + ((-t13396 * t14769 + t13438 * t14772) * t14747 + t14735 * (t13396 * t14772 + t13438 * t14769)) * t15955 + (t13333 * t14769 + t13357 * t14772) * t14747 - (t13333 * t14772 - t13357 * t14769) * t14735) * t15891 - ((((-t13482 * t14769 + t13500 * t14772) * t14746 + t14734 * (t13482 * t14772 + t13500 * t14769)) * t14783 + ((-t13692 * t14769 + t13710 * t14772) * t14746 + (t13692 * t14772 + t13710 * t14769) * t14734) * t14998) * t14776 + (((-t13392 * t14769 + t13434 * t14772) * t14746 + t14734 * (t13392 * t14772 + t13434 * t14769)) * t14783 + (-t14769 * t13338 - t14772 * t14869) * t14746 + (t13338 * t14772 - t14769 * t14869) * t14734) * t14809 + ((-t13395 * t14769 + t13437 * t14772) * t14746 + t14734 * (t13395 * t14772 + t13437 * t14769)) * t15955 + (t13332 * t14769 + t13356 * t14772) * t14746 - (t13332 * t14772 - t13356 * t14769) * t14734) * t15892 - ((((-t13481 * t14769 + t13499 * t14772) * t14745 + t14733 * (t13481 * t14772 + t13499 * t14769)) * t14783 + ((-t13691 * t14769 + t13709 * t14772) * t14745 + (t13691 * t14772 + t13709 * t14769) * t14733) * t14998) * t14775 + (((-t13391 * t14769 + t13433 * t14772) * t14745 + t14733 * (t13391 * t14772 + t13433 * t14769)) * t14783 + (-t14769 * t13337 - t14772 * t14870) * t14745 + (t13337 * t14772 - t14769 * t14870) * t14733) * t14807 + ((-t13394 * t14769 + t13436 * t14772) * t14745 + t14733 * (t13394 * t14772 + t13436 * t14769)) * t15955 + (t13331 * t14769 + t13355 * t14772) * t14745 - (t13331 * t14772 - t13355 * t14769) * t14733) * t15893, 0, t13319 * t15887 + t13320 * t15885 + t13321 * t15883 + t13322 * t15881 + t13323 * t15879 + t13324 * t15877, t13319 * t15886 + t13320 * t15884 + t13321 * t15882 - t13322 * t15880 - t13323 * t15878 - t13324 * t15876, 0, 0, 0, 0, 0, t13319 * t15911 + t13320 * t15910 + t13321 * t15909 + t13322 * t15904 + t13323 * t15903 + t13324 * t15901 + t13365 * t15929 + t13367 * t15927 + t13369 * t15928 + t13374 * t15926 + t13376 * t15925 + t13378 * t15924, t13319 * t15908 + t13320 * t15907 + t13321 * t15906 + t13322 * t15905 + t13323 * t15902 + t13324 * t15900 + t13364 * t15929 + t13366 * t15927 + t13368 * t15928 + t13373 * t15926 + t13375 * t15925 + t13377 * t15924, 0, 0, 0, 0, 0, 0, t14012 * t14768 - t14374 * t15556, t14013 * t14768 - t14374 * t15534, (-t14012 * t14770 + t14013 * t14767) * t14771, 0; -((-t13432 * t15508 + t14889 * t15417) * t14695 + ((-t13432 * t15676 + t14853) * t14829 - t16117 * t15986) * pkin(3) + (-t13432 * t15682 + (((-t15594 * t16117 - t15313) * t15388 + t14889) * pkin(3) + t14823 * t14853 + t16117 * t15983) * t14782) * pkin(9)) * t15888 - ((-t13428 * t15509 + t14891 * t15419) * t14695 + ((-t13428 * t15677 + t14855) * t14827 - t16115 * t15987) * pkin(3) + (-t13428 * t15683 + (((-t15594 * t16115 - t15315) * t15389 + t14891) * pkin(3) + t14821 * t14855 + t16115 * t15984) * t14782) * pkin(9)) * t15889 - ((-t13424 * t15510 + t14893 * t15421) * t14695 + ((-t13424 * t15678 + t14857) * t14825 - t16113 * t15988) * pkin(3) + (-t13424 * t15684 + (((-t15594 * t16113 - t15317) * t15390 + t14893) * pkin(3) + t14819 * t14857 + t16113 * t15985) * t14782) * pkin(9)) * t15890 - ((-t13417 * t15511 + t14895 * t15422) * t14695 + ((-t13417 * t15679 + t14859) * t14811 - t16111 * t15992) * pkin(3) + (-t13417 * t15685 + (((-t15594 * t16111 - t15319) * t15391 + t14895) * pkin(3) + t14805 * t14859 + t16111 * t15989) * t14782) * pkin(9)) * t15891 - ((-t13413 * t15512 + t14897 * t15423) * t14695 + ((-t13413 * t15680 + t14861) * t14809 - t16109 * t15993) * pkin(3) + (-t13413 * t15686 + (((-t15594 * t16109 - t15321) * t15392 + t14897) * pkin(3) + t14803 * t14861 + t16109 * t15990) * t14782) * pkin(9)) * t15892 - ((-t13409 * t15513 + t14899 * t15424) * t14695 + ((-t13409 * t15681 + t14863) * t14807 - t16107 * t15994) * pkin(3) + (-t13409 * t15687 + (((-t15594 * t16107 - t15323) * t15393 + t14899) * pkin(3) + t14801 * t14863 + t16107 * t15991) * t14782) * pkin(9)) * t15893, 0, t13309 * t15887 + t13311 * t15885 + t13312 * t15883 + t13314 * t15881 + t13316 * t15879 + t13318 * t15877, t13309 * t15886 + t13311 * t15884 + t13312 * t15882 - t13314 * t15880 - t13316 * t15878 - t13318 * t15876, 0, 0, 0, 0, 0, t13309 * t15911 + t13311 * t15910 + t13312 * t15909 + t13314 * t15904 + t13316 * t15903 + t13318 * t15901 + t13365 * t15922 + t13367 * t15919 + t13369 * t15921 + t13374 * t15917 + t13376 * t15913 + t13378 * t15912, t13309 * t15908 + t13311 * t15907 + t13312 * t15906 + t13314 * t15905 + t13316 * t15902 + t13318 * t15900 + t13364 * t15922 + t13366 * t15919 + t13368 * t15921 + t13373 * t15917 + t13375 * t15913 + t13377 * t15912, 0, 0, 0, 0, 0, 0, -t14012 * t15547 + t14374 * t14479, -t14013 * t15547 - t14374 * t14480, -t14012 * t14480 - t14013 * t14479, 0; -((-t13430 * t15508 + t14890 * t15417) * t14695 + ((-t13430 * t15676 + t14854) * t14829 - t16116 * t15986) * pkin(3) + (-t13430 * t15682 + (((-t15594 * t16116 - t15314) * t15388 + t14890) * pkin(3) + t14823 * t14854 + t16116 * t15983) * t14782) * pkin(9)) * t15888 - ((-t13426 * t15509 + t14892 * t15419) * t14695 + ((-t13426 * t15677 + t14856) * t14827 - t16114 * t15987) * pkin(3) + (-t13426 * t15683 + (((-t15594 * t16114 - t15316) * t15389 + t14892) * pkin(3) + t14821 * t14856 + t16114 * t15984) * t14782) * pkin(9)) * t15889 - ((-t13422 * t15510 + t14894 * t15421) * t14695 + ((-t13422 * t15678 + t14858) * t14825 - t16112 * t15988) * pkin(3) + (-t13422 * t15684 + (((-t15594 * t16112 - t15318) * t15390 + t14894) * pkin(3) + t14819 * t14858 + t16112 * t15985) * t14782) * pkin(9)) * t15890 - ((-t13415 * t15511 + t14896 * t15422) * t14695 + ((-t13415 * t15679 + t14860) * t14811 - t16110 * t15992) * pkin(3) + (-t13415 * t15685 + (((-t15594 * t16110 - t15320) * t15391 + t14896) * pkin(3) + t14805 * t14860 + t16110 * t15989) * t14782) * pkin(9)) * t15891 - ((-t13411 * t15512 + t14898 * t15423) * t14695 + ((-t13411 * t15680 + t14862) * t14809 - t16108 * t15993) * pkin(3) + (-t13411 * t15686 + (((-t15594 * t16108 - t15322) * t15392 + t14898) * pkin(3) + t14803 * t14862 + t16108 * t15990) * t14782) * pkin(9)) * t15892 - ((-t13407 * t15513 + t14900 * t15424) * t14695 + ((-t13407 * t15681 + t14864) * t14807 - t16106 * t15994) * pkin(3) + (-t13407 * t15687 + (((-t15594 * t16106 - t15324) * t15393 + t14900) * pkin(3) + t14801 * t14864 + t16106 * t15991) * t14782) * pkin(9)) * t15893, 0, t13307 * t15883 + t13308 * t15887 + t13310 * t15885 + t13313 * t15881 + t13315 * t15879 + t13317 * t15877, t13307 * t15882 + t13308 * t15886 + t13310 * t15884 - t13313 * t15880 - t13315 * t15878 - t13317 * t15876, 0, 0, 0, 0, 0, t13307 * t15909 + t13308 * t15911 + t13310 * t15910 + t13313 * t15904 + t13315 * t15903 + t13317 * t15901 + t13365 * t15923 + t13367 * t15920 + t13369 * t15918 + t13374 * t15914 + t13376 * t15916 + t13378 * t15915, t13307 * t15906 + t13308 * t15908 + t13310 * t15907 + t13313 * t15905 + t13315 * t15902 + t13317 * t15900 + t13364 * t15923 + t13366 * t15920 + t13368 * t15918 + t13373 * t15914 + t13375 * t15916 + t13377 * t15915, 0, 0, 0, 0, 0, 0, t14012 * t15532 + t14374 * t14481, t14013 * t15532 - t14374 * t14482, -t14012 * t14482 - t14013 * t14481, 0;];
tau_reg  = t1;
