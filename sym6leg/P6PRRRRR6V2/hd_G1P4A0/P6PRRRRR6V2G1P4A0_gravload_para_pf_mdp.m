% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PRRRRR6V2G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRRRRR6V2G1P4A0_convert_par2_MPV_fixb.m

% Output:
% taugX [6x1]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 01:01
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp(xP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_mdp_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-13 01:01:48
% EndTime: 2020-03-13 01:01:51
% DurationCPUTime: 3.02s
% Computational Cost: add. (17992->1816), mult. (47817->3305), div. (240->36), fcn. (40632->50), ass. (0->1106)
unknown=NaN(6,1);
t1 = sin(pkin(10));
t2 = cos(pkin(4));
t3 = t2 * t1;
t4 = cos(qJ(2,1));
t6 = cos(pkin(10));
t7 = sin(qJ(2,1));
t9 = t4 * t3 + t7 * t6;
t10 = cos(legFrame(1,3));
t12 = sin(legFrame(1,3));
t14 = t2 * t6;
t16 = -t7 * t1 + t4 * t14;
t18 = t10 * t9 + t16 * t12;
t19 = t18 * pkin(3);
t20 = sin(pkin(6));
t21 = t20 * pkin(9);
t22 = cos(pkin(5));
t23 = t22 * t21;
t28 = -t7 * t3 + t4 * t6;
t32 = t4 * t1 + t7 * t14;
t34 = t10 * t28 - t32 * t12;
t35 = pkin(9) ^ 2;
t36 = cos(pkin(6));
t37 = t36 ^ 2;
t39 = pkin(3) ^ 2;
t40 = t37 * t35 - t35 + t39;
t43 = sin(pkin(5));
t45 = sin(pkin(4));
t46 = t45 * pkin(3);
t47 = t20 * t46;
t48 = t22 - 0.1e1;
t49 = t48 * pkin(9);
t50 = t22 + 0.1e1;
t53 = t10 * t1 + t12 * t6;
t59 = cos(qJ(3,1));
t60 = t59 ^ 2;
t63 = sin(qJ(3,1));
t66 = pkin(9) * t36 + pkin(8);
t72 = pkin(9) * t20 * t63;
t74 = 0.2e1 * t72 + pkin(2);
t79 = t40 * t45;
t81 = t63 * t53 * t79;
t82 = t66 * t19;
t84 = t22 ^ 2;
t86 = t45 * pkin(2);
t87 = t53 * pkin(9);
t88 = t20 * t87;
t92 = t53 * t45;
t93 = t66 * t63;
t98 = t63 * pkin(2);
t100 = pkin(9) * t37;
t101 = t20 * t98 + pkin(9) - t100;
t106 = t66 * t18;
t111 = t84 * t20;
t114 = pkin(2) * pkin(3);
t121 = pkin(9) * t20 * pkin(3);
t122 = t50 * t48;
t124 = t2 * t122 * t121;
t125 = t22 * t4;
t126 = t121 * t125;
t127 = t40 * t7;
t133 = 0.2e1 * t60 * (t124 - t45 * (t126 - t127 / 0.2e1) * t43);
t134 = t45 * t4;
t135 = t40 * t63;
t137 = pkin(3) * t2;
t138 = t66 * t137;
t141 = pkin(3) * t7;
t146 = t40 * t2;
t147 = t63 * t146;
t148 = pkin(3) * t4;
t149 = t66 * t45;
t150 = t149 * t148;
t153 = t2 * pkin(2);
t154 = t21 * t153;
t157 = t66 * t2;
t163 = t45 * t7;
t172 = t66 * t21;
t174 = pkin(3) * t153;
t177 = t20 * t2;
t178 = pkin(3) * pkin(9);
t179 = t178 * t177;
t181 = 0.1e1 / (t133 + t59 * (t43 * (t22 * (t135 * t134 + t138) + t74 * t45 * t141) + t84 * (-t147 + t150) + t147 - t154 - t150) + t43 * pkin(9) * (t22 * t20 * (t45 * t148 + t63 * t157) + t101 * t163) + t111 * (t93 * t134 - t137) * pkin(9) + t63 * (-t172 * t134 + t174) + t179);
t184 = cos(qJ(2,2));
t186 = sin(qJ(2,2));
t188 = t184 * t3 + t186 * t6;
t189 = cos(legFrame(2,3));
t191 = sin(legFrame(2,3));
t194 = -t186 * t1 + t184 * t14;
t196 = t189 * t188 + t194 * t191;
t197 = t196 * pkin(3);
t202 = t184 * t6 - t186 * t3;
t206 = t184 * t1 + t186 * t14;
t208 = t189 * t202 - t206 * t191;
t214 = t189 * t1 + t191 * t6;
t220 = cos(qJ(3,2));
t221 = t220 ^ 2;
t224 = sin(qJ(3,2));
t231 = pkin(9) * t20 * t224;
t233 = 0.2e1 * t231 + pkin(2);
t239 = t224 * t214 * t79;
t240 = t66 * t197;
t243 = t214 * pkin(9);
t244 = t20 * t243;
t248 = t214 * t45;
t249 = t66 * t224;
t254 = t224 * pkin(2);
t256 = t20 * t254 + pkin(9) - t100;
t261 = t66 * t196;
t273 = t22 * t184;
t274 = t121 * t273;
t275 = t40 * t186;
t281 = 0.2e1 * t221 * (t124 - t45 * (t274 - t275 / 0.2e1) * t43);
t282 = t45 * t184;
t283 = t40 * t224;
t287 = pkin(3) * t186;
t292 = t224 * t146;
t293 = pkin(3) * t184;
t294 = t149 * t293;
t304 = t45 * t186;
t317 = 0.1e1 / (t281 + t220 * (t43 * (t22 * (t283 * t282 + t138) + t233 * t45 * t287) + t84 * (-t292 + t294) + t292 - t154 - t294) + t43 * pkin(9) * (t22 * t20 * (t224 * t157 + t45 * t293) + t256 * t304) + t111 * (t249 * t282 - t137) * pkin(9) + t224 * (-t172 * t282 + t174) + t179);
t320 = cos(qJ(2,3));
t322 = sin(qJ(2,3));
t324 = t320 * t3 + t322 * t6;
t325 = cos(legFrame(3,3));
t327 = sin(legFrame(3,3));
t330 = -t322 * t1 + t320 * t14;
t332 = t325 * t324 + t330 * t327;
t333 = t332 * pkin(3);
t338 = -t322 * t3 + t320 * t6;
t342 = t320 * t1 + t322 * t14;
t344 = t325 * t338 - t342 * t327;
t350 = t325 * t1 + t327 * t6;
t356 = cos(qJ(3,3));
t357 = t356 ^ 2;
t360 = sin(qJ(3,3));
t367 = pkin(9) * t20 * t360;
t369 = 0.2e1 * t367 + pkin(2);
t375 = t360 * t350 * t79;
t376 = t66 * t333;
t379 = t350 * pkin(9);
t380 = t20 * t379;
t384 = t350 * t45;
t385 = t66 * t360;
t390 = t360 * pkin(2);
t392 = t20 * t390 + pkin(9) - t100;
t397 = t66 * t332;
t409 = t22 * t320;
t410 = t121 * t409;
t411 = t40 * t322;
t417 = 0.2e1 * t357 * (t124 - t45 * (t410 - t411 / 0.2e1) * t43);
t418 = t45 * t320;
t419 = t40 * t360;
t423 = pkin(3) * t322;
t428 = t360 * t146;
t429 = pkin(3) * t320;
t430 = t149 * t429;
t440 = t45 * t322;
t453 = 0.1e1 / (t417 + t356 * (t43 * (t22 * (t419 * t418 + t138) + t369 * t45 * t423) + t84 * (-t428 + t430) + t428 - t154 - t430) + t43 * pkin(9) * (t22 * t20 * (t360 * t157 + t45 * t429) + t392 * t440) + t111 * (t385 * t418 - t137) * pkin(9) + t360 * (-t172 * t418 + t174) + t179);
t456 = cos(qJ(2,4));
t458 = sin(qJ(2,4));
t460 = t456 * t3 + t458 * t6;
t461 = cos(legFrame(4,3));
t463 = sin(legFrame(4,3));
t466 = -t458 * t1 + t456 * t14;
t468 = t461 * t460 + t466 * t463;
t469 = t468 * pkin(3);
t474 = -t458 * t3 + t456 * t6;
t478 = t456 * t1 + t458 * t14;
t480 = t461 * t474 - t478 * t463;
t486 = t461 * t1 + t463 * t6;
t492 = cos(qJ(3,4));
t493 = t492 ^ 2;
t496 = sin(qJ(3,4));
t503 = pkin(9) * t20 * t496;
t505 = 0.2e1 * t503 + pkin(2);
t511 = t496 * t486 * t79;
t512 = t66 * t469;
t515 = t486 * pkin(9);
t516 = t20 * t515;
t520 = t486 * t45;
t521 = t66 * t496;
t526 = t496 * pkin(2);
t528 = t20 * t526 + pkin(9) - t100;
t533 = t66 * t468;
t545 = t22 * t456;
t546 = t121 * t545;
t547 = t40 * t458;
t553 = 0.2e1 * t493 * (t124 - t45 * (t546 - t547 / 0.2e1) * t43);
t554 = t45 * t456;
t555 = t40 * t496;
t559 = pkin(3) * t458;
t564 = t496 * t146;
t565 = pkin(3) * t456;
t566 = t149 * t565;
t576 = t45 * t458;
t589 = 0.1e1 / (t553 + t492 * (t43 * (t22 * (t555 * t554 + t138) + t505 * t45 * t559) + t84 * (-t564 + t566) + t564 - t154 - t566) + t43 * pkin(9) * (t22 * t20 * (t496 * t157 + t45 * t565) + t528 * t576) + t111 * (t521 * t554 - t137) * pkin(9) + t496 * (-t172 * t554 + t174) + t179);
t592 = cos(qJ(2,5));
t594 = sin(qJ(2,5));
t596 = t592 * t3 + t594 * t6;
t597 = cos(legFrame(5,3));
t599 = sin(legFrame(5,3));
t602 = -t594 * t1 + t592 * t14;
t604 = t597 * t596 + t602 * t599;
t605 = t604 * pkin(3);
t610 = -t594 * t3 + t592 * t6;
t614 = t592 * t1 + t594 * t14;
t616 = t597 * t610 - t614 * t599;
t622 = t597 * t1 + t599 * t6;
t628 = cos(qJ(3,5));
t629 = t628 ^ 2;
t632 = sin(qJ(3,5));
t639 = pkin(9) * t20 * t632;
t641 = 0.2e1 * t639 + pkin(2);
t647 = t632 * t622 * t79;
t648 = t66 * t605;
t651 = t622 * pkin(9);
t652 = t20 * t651;
t656 = t622 * t45;
t657 = t66 * t632;
t662 = t632 * pkin(2);
t664 = t20 * t662 + pkin(9) - t100;
t669 = t66 * t604;
t681 = t22 * t592;
t682 = t121 * t681;
t683 = t40 * t594;
t689 = 0.2e1 * t629 * (t124 - t45 * (t682 - t683 / 0.2e1) * t43);
t690 = t45 * t592;
t691 = t40 * t632;
t695 = pkin(3) * t594;
t700 = t632 * t146;
t701 = pkin(3) * t592;
t702 = t149 * t701;
t712 = t45 * t594;
t725 = 0.1e1 / (t689 + t628 * (t43 * (t22 * (t691 * t690 + t138) + t641 * t45 * t695) + t84 * (-t700 + t702) + t700 - t154 - t702) + t43 * pkin(9) * (t22 * t20 * (t632 * t157 + t45 * t701) + t664 * t712) + t111 * (t657 * t690 - t137) * pkin(9) + t632 * (-t172 * t690 + t174) + t179);
t728 = cos(qJ(2,6));
t730 = sin(qJ(2,6));
t732 = t728 * t3 + t730 * t6;
t733 = cos(legFrame(6,3));
t735 = sin(legFrame(6,3));
t738 = -t730 * t1 + t728 * t14;
t740 = t733 * t732 + t738 * t735;
t741 = t740 * pkin(3);
t746 = -t730 * t3 + t728 * t6;
t750 = t728 * t1 + t730 * t14;
t752 = t733 * t746 - t750 * t735;
t758 = t733 * t1 + t735 * t6;
t764 = cos(qJ(3,6));
t765 = t764 ^ 2;
t768 = sin(qJ(3,6));
t775 = pkin(9) * t20 * t768;
t777 = 0.2e1 * t775 + pkin(2);
t783 = t768 * t758 * t79;
t784 = t66 * t741;
t787 = t758 * pkin(9);
t788 = t20 * t787;
t792 = t758 * t45;
t793 = t66 * t768;
t798 = t768 * pkin(2);
t800 = t20 * t798 + pkin(9) - t100;
t805 = t66 * t740;
t817 = t22 * t728;
t818 = t121 * t817;
t819 = t40 * t730;
t825 = 0.2e1 * t765 * (t124 - t45 * (t818 - t819 / 0.2e1) * t43);
t826 = t45 * t728;
t827 = t40 * t768;
t831 = pkin(3) * t730;
t836 = t768 * t146;
t837 = pkin(3) * t728;
t838 = t149 * t837;
t848 = t45 * t730;
t861 = 0.1e1 / (t825 + t764 * (t43 * (t22 * (t827 * t826 + t138) + t777 * t45 * t831) + t84 * (-t836 + t838) + t836 - t154 - t838) + t43 * pkin(9) * (t22 * t20 * (t768 * t157 + t45 * t837) + t800 * t848) + t111 * (t793 * t826 - t137) * pkin(9) + t768 * (-t172 * t826 + t174) + t179);
t868 = -t12 * t1 + t10 * t6;
t869 = t868 * t4;
t871 = t53 * t7;
t872 = t2 * t869 - t871;
t875 = pkin(3) * t43;
t876 = t45 * t868;
t877 = t876 * t875;
t878 = t868 * t7;
t880 = t53 * t4;
t881 = t2 * t878 + t880;
t885 = t59 * (t22 * pkin(3) * t872 + t20 * pkin(9) * t881 - t877);
t887 = t22 * t20;
t889 = t20 * t43;
t890 = t868 * pkin(9);
t892 = t45 * t890 * t889;
t894 = t887 * pkin(9) * t872 - pkin(3) * t881 - t892;
t899 = 0.2e1 * t121 * t84 * t2;
t901 = t43 * t45;
t902 = t178 * t901;
t905 = t43 * t7;
t907 = 0.2e1 * t179;
t910 = t84 * t146;
t912 = t22 * t40 * t43;
t915 = pkin(9) * t889;
t920 = t84 * t149;
t922 = t66 * t43;
t924 = t22 * t922 * t137;
t926 = t43 * t7 * pkin(2);
t927 = t4 * t66;
t928 = t926 - t927;
t934 = t66 * pkin(9);
t935 = t84 * t934;
t937 = t43 * t2;
t939 = t22 * t934;
t940 = t939 * t20 * t937;
t942 = t45 * t20;
t946 = pkin(3) * t84;
t947 = t946 * t177;
t948 = t22 * t148;
t949 = t20 * t901;
t952 = t36 - 0.1e1;
t953 = t36 + 0.1e1;
t955 = t45 * t953 * t952;
t957 = pkin(3) * t177;
t961 = 0.1e1 / (t60 * (-0.2e1 * t902 * t20 * t125 + t79 * t905 + t899 - t907) + t59 * (t63 * (0.2e1 * t915 * t45 * t141 + t912 * t134 + t146 - t910) + t920 * t148 + t924 + t45 * t928 * pkin(3) - t154) + t63 * (t942 * pkin(9) * t928 + t935 * t20 * t134 + t174 + t940) + pkin(9) * (-t955 * pkin(9) * t905 + t949 * t948 - t947 + t957));
t962 = t961 * (t63 * t894 + t885);
t965 = g(1) * t10 + g(2) * t12;
t969 = g(1) * t12 - g(2) * t10;
t971 = t45 * g(3);
t973 = t16 * t969 - t4 * t971 + t9 * t965;
t977 = -t191 * t1 + t189 * t6;
t978 = t977 * t184;
t980 = t214 * t186;
t981 = t2 * t978 - t980;
t984 = t45 * t977;
t985 = t984 * t875;
t986 = t977 * t186;
t988 = t214 * t184;
t989 = t2 * t986 + t988;
t993 = t220 * (t22 * pkin(3) * t981 + t20 * pkin(9) * t989 - t985);
t996 = t977 * pkin(9);
t998 = t45 * t996 * t889;
t1000 = t887 * pkin(9) * t981 - pkin(3) * t989 - t998;
t1006 = t43 * t186;
t1018 = t43 * t186 * pkin(2);
t1019 = t66 * t184;
t1020 = t1018 - t1019;
t1031 = t22 * t293;
t1038 = 0.1e1 / (t221 * (-0.2e1 * t902 * t20 * t273 + t79 * t1006 + t899 - t907) + t220 * (t224 * (0.2e1 * t915 * t45 * t287 + t912 * t282 + t146 - t910) + t920 * t293 + t924 + t45 * t1020 * pkin(3) - t154) + t224 * (t942 * pkin(9) * t1020 + t935 * t20 * t282 + t174 + t940) + pkin(9) * (-t955 * pkin(9) * t1006 + t949 * t1031 - t947 + t957));
t1039 = t1038 * (t224 * t1000 + t993);
t1042 = g(1) * t189 + g(2) * t191;
t1046 = g(1) * t191 - g(2) * t189;
t1049 = t188 * t1042 + t194 * t1046 - t184 * t971;
t1053 = -t327 * t1 + t325 * t6;
t1054 = t1053 * t320;
t1056 = t350 * t322;
t1057 = t2 * t1054 - t1056;
t1060 = t45 * t1053;
t1061 = t1060 * t875;
t1062 = t1053 * t322;
t1064 = t350 * t320;
t1065 = t2 * t1062 + t1064;
t1069 = t356 * (t22 * pkin(3) * t1057 + t20 * pkin(9) * t1065 - t1061);
t1072 = t1053 * pkin(9);
t1074 = t45 * t1072 * t889;
t1076 = t887 * pkin(9) * t1057 - pkin(3) * t1065 - t1074;
t1082 = t43 * t322;
t1094 = t43 * t322 * pkin(2);
t1095 = t66 * t320;
t1096 = t1094 - t1095;
t1107 = t22 * t429;
t1114 = 0.1e1 / (t357 * (-0.2e1 * t902 * t20 * t409 + t79 * t1082 + t899 - t907) + t356 * (t360 * (0.2e1 * t915 * t45 * t423 + t912 * t418 + t146 - t910) + t920 * t429 + t924 + t45 * t1096 * pkin(3) - t154) + t360 * (t942 * pkin(9) * t1096 + t935 * t20 * t418 + t174 + t940) + pkin(9) * (-t955 * pkin(9) * t1082 + t949 * t1107 - t947 + t957));
t1115 = t1114 * (t360 * t1076 + t1069);
t1118 = g(1) * t325 + g(2) * t327;
t1122 = g(1) * t327 - g(2) * t325;
t1125 = t324 * t1118 + t330 * t1122 - t320 * t971;
t1129 = -t463 * t1 + t461 * t6;
t1130 = t1129 * t456;
t1132 = t486 * t458;
t1133 = t2 * t1130 - t1132;
t1136 = t45 * t1129;
t1137 = t1136 * t875;
t1138 = t1129 * t458;
t1140 = t486 * t456;
t1141 = t2 * t1138 + t1140;
t1145 = t492 * (t22 * pkin(3) * t1133 + t20 * pkin(9) * t1141 - t1137);
t1148 = t1129 * pkin(9);
t1150 = t45 * t1148 * t889;
t1152 = t887 * pkin(9) * t1133 - pkin(3) * t1141 - t1150;
t1158 = t43 * t458;
t1170 = t43 * t458 * pkin(2);
t1171 = t66 * t456;
t1172 = t1170 - t1171;
t1183 = t22 * t565;
t1190 = 0.1e1 / (t493 * (-0.2e1 * t902 * t20 * t545 + t79 * t1158 + t899 - t907) + t492 * (t496 * (0.2e1 * t915 * t45 * t559 + t912 * t554 + t146 - t910) + t920 * t565 + t924 + t45 * t1172 * pkin(3) - t154) + t496 * (t942 * pkin(9) * t1172 + t935 * t20 * t554 + t174 + t940) + pkin(9) * (-t955 * pkin(9) * t1158 + t949 * t1183 - t947 + t957));
t1191 = t1190 * (t496 * t1152 + t1145);
t1194 = g(1) * t461 + g(2) * t463;
t1198 = g(1) * t463 - g(2) * t461;
t1201 = t460 * t1194 + t466 * t1198 - t456 * t971;
t1205 = -t599 * t1 + t597 * t6;
t1206 = t1205 * t592;
t1208 = t622 * t594;
t1209 = t2 * t1206 - t1208;
t1212 = t45 * t1205;
t1213 = t1212 * t875;
t1214 = t1205 * t594;
t1216 = t622 * t592;
t1217 = t2 * t1214 + t1216;
t1221 = t628 * (t22 * pkin(3) * t1209 + t20 * pkin(9) * t1217 - t1213);
t1224 = t1205 * pkin(9);
t1226 = t45 * t1224 * t889;
t1228 = t887 * pkin(9) * t1209 - pkin(3) * t1217 - t1226;
t1234 = t43 * t594;
t1246 = t43 * t594 * pkin(2);
t1247 = t66 * t592;
t1248 = t1246 - t1247;
t1259 = t22 * t701;
t1266 = 0.1e1 / (t629 * (-0.2e1 * t902 * t20 * t681 + t79 * t1234 + t899 - t907) + t628 * (t632 * (0.2e1 * t915 * t45 * t695 + t912 * t690 + t146 - t910) + t920 * t701 + t924 + t45 * t1248 * pkin(3) - t154) + t632 * (t942 * pkin(9) * t1248 + t935 * t20 * t690 + t174 + t940) + pkin(9) * (-t955 * pkin(9) * t1234 + t949 * t1259 - t947 + t957));
t1267 = t1266 * (t632 * t1228 + t1221);
t1270 = g(1) * t597 + g(2) * t599;
t1274 = g(1) * t599 - g(2) * t597;
t1277 = t596 * t1270 + t602 * t1274 - t592 * t971;
t1281 = -t735 * t1 + t733 * t6;
t1282 = t1281 * t728;
t1284 = t758 * t730;
t1285 = t2 * t1282 - t1284;
t1288 = t45 * t1281;
t1289 = t1288 * t875;
t1290 = t1281 * t730;
t1292 = t758 * t728;
t1293 = t2 * t1290 + t1292;
t1297 = t764 * (t22 * pkin(3) * t1285 + t20 * pkin(9) * t1293 - t1289);
t1300 = t1281 * pkin(9);
t1302 = t45 * t1300 * t889;
t1304 = t887 * pkin(9) * t1285 - t1293 * pkin(3) - t1302;
t1310 = t43 * t730;
t1322 = t43 * t730 * pkin(2);
t1323 = t66 * t728;
t1324 = t1322 - t1323;
t1335 = t22 * t837;
t1342 = 0.1e1 / (t765 * (-0.2e1 * t902 * t20 * t817 + t79 * t1310 + t899 - t907) + t764 * (t768 * (0.2e1 * t915 * t45 * t831 + t912 * t826 + t146 - t910) + t920 * t837 + t924 + t45 * t1324 * pkin(3) - t154) + t768 * (t942 * pkin(9) * t1324 + t935 * t20 * t826 + t174 + t940) + pkin(9) * (-t955 * pkin(9) * t1310 + t949 * t1335 - t947 + t957));
t1343 = t1342 * (t768 * t1304 + t1297);
t1346 = g(1) * t733 + g(2) * t735;
t1350 = g(1) * t735 - g(2) * t733;
t1353 = t732 * t1346 + t738 * t1350 - t728 * t971;
t1360 = t28 * t965 - t32 * t969 + t7 * t971;
t1365 = t202 * t1042 - t206 * t1046 + t186 * t971;
t1370 = t338 * t1118 - t342 * t1122 + t322 * t971;
t1375 = t474 * t1194 - t478 * t1198 + t458 * t971;
t1380 = t610 * t1270 - t614 * t1274 + t594 * t971;
t1385 = t746 * t1346 - t750 * t1350 + t730 * t971;
t1389 = t63 * t2;
t1390 = t1 * t22;
t1392 = t6 * t59;
t1395 = t59 * t2;
t1397 = t22 * t63;
t1403 = t6 * t22;
t1405 = t1 * t59;
t1414 = t22 * t7;
t1417 = -t63 * t1414 + t59 * t4;
t1419 = (t7 * (-t1390 * t1389 + t1392) + (t1 * t1395 + t6 * t1397) * t4) * t965 + t969 * (t7 * (-t1403 * t1389 - t1405) + (-t1 * t1397 + t6 * t1395) * t4) - t1417 * t971;
t1422 = t21 * t1414 + t148;
t1423 = t1422 * t868;
t1426 = t21 * t125 - t141;
t1428 = -t2 * t1423 - t1426 * t53;
t1430 = t72 + pkin(2);
t1432 = pkin(3) * t1397;
t1433 = t1432 - t922;
t1435 = t4 * t1430 - t7 * t1433;
t1437 = t2 * t1435 * t868;
t1440 = t1430 * t7 + t4 * t1433;
t1441 = t1440 * t53;
t1443 = t84 * t135;
t1445 = t22 * t66 * t875;
t1447 = pkin(9) * t20 * pkin(2);
t1448 = -t1443 + t1445 + t135 - t1447;
t1450 = t66 * pkin(3);
t1451 = t84 * t1450;
t1452 = t43 * t63;
t1453 = t22 * t40;
t1454 = t1453 * t1452;
t1455 = t1451 + t1454 - t1450;
t1463 = t21 * t946;
t1464 = t20 * t1452;
t1465 = t939 * t1464;
t1467 = (t98 + t21) * pkin(3);
t1469 = t2 * (-t1463 + t1465 + t1467);
t1471 = t22 * t875;
t1473 = t20 * (t84 * t93 + t1471 - t93);
t1480 = 0.1e1 / (t133 + t59 * (t2 * t1448 + t45 * (t74 * t43 * t141 + t4 * t1455)) + t1469 + pkin(9) * t45 * (t101 * t905 + t4 * t1473));
t1481 = t1480 * (t59 * t1428 - t1437 + t1441);
t1482 = t22 * t2;
t1484 = t4 * t1482 - t901;
t1486 = t2 * t7;
t1488 = t59 * t1484 - t63 * t1486;
t1492 = t63 * t4;
t1493 = t22 * t59 * t7 + t1492;
t1502 = t45 * t125 + t937;
t1507 = (t1 * t1488 + t1493 * t6) * t965 + t969 * (-t1493 * t1 + t6 * t1488) - (t59 * t1502 - t63 * t163) * g(3);
t1509 = t2 * t224;
t1514 = t2 * t220;
t1516 = t22 * t224;
t1532 = t22 * t186;
t1535 = -t224 * t1532 + t184 * t220;
t1537 = (t186 * (-t1390 * t1509 + t6 * t220) + (t1 * t1514 + t6 * t1516) * t184) * t1042 + (t186 * (-t1 * t220 - t1403 * t1509) + (-t1 * t1516 + t6 * t1514) * t184) * t1046 - t1535 * t971;
t1540 = t21 * t1532 + t293;
t1541 = t1540 * t977;
t1544 = t21 * t273 - t287;
t1546 = -t2 * t1541 - t1544 * t214;
t1548 = t231 + pkin(2);
t1550 = pkin(3) * t1516;
t1551 = t1550 - t922;
t1553 = t184 * t1548 - t186 * t1551;
t1555 = t2 * t1553 * t977;
t1558 = t1548 * t186 + t184 * t1551;
t1559 = t1558 * t214;
t1561 = t84 * t283;
t1562 = -t1561 + t1445 + t283 - t1447;
t1564 = t43 * t224;
t1565 = t1453 * t1564;
t1566 = t1451 + t1565 - t1450;
t1574 = t20 * t1564;
t1575 = t939 * t1574;
t1577 = (t254 + t21) * pkin(3);
t1579 = t2 * (-t1463 + t1575 + t1577);
t1582 = t20 * (t84 * t249 + t1471 - t249);
t1589 = 0.1e1 / (t281 + t220 * (t2 * t1562 + t45 * (t233 * t43 * t287 + t184 * t1566)) + t1579 + pkin(9) * t45 * (t256 * t1006 + t184 * t1582));
t1590 = t1589 * (t220 * t1546 - t1555 + t1559);
t1592 = t184 * t1482 - t901;
t1594 = t2 * t186;
t1596 = t220 * t1592 - t224 * t1594;
t1600 = t184 * t224;
t1601 = t22 * t220 * t186 + t1600;
t1610 = t45 * t273 + t937;
t1615 = t1042 * (t1 * t1596 + t1601 * t6) + (-t1601 * t1 + t6 * t1596) * t1046 - (t220 * t1610 - t224 * t304) * g(3);
t1617 = t22 * t360;
t1622 = t2 * t356;
t1639 = t22 * t322;
t1642 = -t360 * t1639 + t356 * t320;
t1644 = t1118 * (t322 * (-t3 * t1617 + t6 * t356) + (t1 * t1622 + t6 * t1617) * t320) + t1122 * (t322 * (-t1 * t356 - t14 * t1617) + (-t1 * t1617 + t6 * t1622) * t320) - t1642 * t971;
t1647 = t21 * t1639 + t429;
t1648 = t1647 * t1053;
t1651 = t21 * t409 - t423;
t1653 = -t2 * t1648 - t1651 * t350;
t1655 = t367 + pkin(2);
t1657 = pkin(3) * t1617;
t1658 = t1657 - t922;
t1660 = t320 * t1655 - t322 * t1658;
t1662 = t2 * t1660 * t1053;
t1665 = t1655 * t322 + t320 * t1658;
t1666 = t1665 * t350;
t1668 = t84 * t419;
t1669 = -t1668 + t1445 + t419 - t1447;
t1671 = t43 * t360;
t1672 = t1453 * t1671;
t1673 = t1451 + t1672 - t1450;
t1681 = t20 * t1671;
t1682 = t939 * t1681;
t1684 = (t390 + t21) * pkin(3);
t1686 = t2 * (-t1463 + t1682 + t1684);
t1688 = t84 * t385 + t1471 - t385;
t1696 = 0.1e1 / (t417 + t356 * (t2 * t1669 + t45 * (t369 * t43 * t423 + t320 * t1673)) + t1686 + pkin(9) * t45 * (t320 * t20 * t1688 + t392 * t1082));
t1697 = t1696 * (t356 * t1653 - t1662 + t1666);
t1699 = t320 * t1482 - t901;
t1701 = t2 * t322;
t1703 = t356 * t1699 - t360 * t1701;
t1707 = t360 * t320;
t1708 = t22 * t356 * t322 + t1707;
t1717 = t45 * t409 + t937;
t1722 = (t1 * t1703 + t1708 * t6) * t1118 + (-t1708 * t1 + t6 * t1703) * t1122 - (t356 * t1717 - t360 * t440) * g(3);
t1724 = t22 * t496;
t1729 = t2 * t492;
t1746 = t22 * t458;
t1749 = -t496 * t1746 + t492 * t456;
t1751 = t1194 * (t458 * (-t3 * t1724 + t6 * t492) + (t1 * t1729 + t6 * t1724) * t456) + (t458 * (-t1 * t492 - t14 * t1724) + (-t1 * t1724 + t6 * t1729) * t456) * t1198 - t1749 * t971;
t1754 = t21 * t1746 + t565;
t1755 = t1754 * t1129;
t1758 = t21 * t545 - t559;
t1760 = -t2 * t1755 - t1758 * t486;
t1762 = t503 + pkin(2);
t1764 = pkin(3) * t1724;
t1765 = t1764 - t922;
t1767 = t456 * t1762 - t458 * t1765;
t1769 = t2 * t1767 * t1129;
t1772 = t1762 * t458 + t456 * t1765;
t1773 = t1772 * t486;
t1775 = t84 * t555;
t1776 = -t1775 + t1445 + t555 - t1447;
t1778 = t43 * t496;
t1779 = t1453 * t1778;
t1780 = t1451 + t1779 - t1450;
t1788 = t20 * t1778;
t1789 = t939 * t1788;
t1791 = (t526 + t21) * pkin(3);
t1793 = t2 * (-t1463 + t1789 + t1791);
t1796 = t20 * (t84 * t521 + t1471 - t521);
t1803 = 0.1e1 / (t553 + t492 * (t2 * t1776 + t45 * (t505 * t43 * t559 + t456 * t1780)) + t1793 + pkin(9) * t45 * (t528 * t1158 + t456 * t1796));
t1804 = t1803 * (t492 * t1760 - t1769 + t1773);
t1806 = t456 * t1482 - t901;
t1808 = t2 * t458;
t1810 = t492 * t1806 - t496 * t1808;
t1814 = t496 * t456;
t1815 = t22 * t492 * t458 + t1814;
t1824 = t45 * t545 + t937;
t1829 = t1194 * (t1 * t1810 + t1815 * t6) + t1198 * (-t1815 * t1 + t6 * t1810) - g(3) * (t492 * t1824 - t496 * t576);
t1831 = t2 * t632;
t1836 = t2 * t628;
t1838 = t22 * t632;
t1854 = t22 * t594;
t1857 = -t632 * t1854 + t628 * t592;
t1859 = t1270 * (t594 * (-t1390 * t1831 + t6 * t628) + (t1 * t1836 + t6 * t1838) * t592) + t1274 * (t594 * (-t1 * t628 - t1403 * t1831) + (-t1 * t1838 + t6 * t1836) * t592) - t1857 * t971;
t1862 = t21 * t1854 + t701;
t1863 = t1862 * t1205;
t1866 = t21 * t681 - t695;
t1868 = -t2 * t1863 - t1866 * t622;
t1870 = t639 + pkin(2);
t1872 = pkin(3) * t1838;
t1873 = t1872 - t922;
t1875 = t592 * t1870 - t594 * t1873;
t1877 = t2 * t1875 * t1205;
t1880 = t1870 * t594 + t592 * t1873;
t1881 = t1880 * t622;
t1883 = t84 * t691;
t1884 = -t1883 + t1445 + t691 - t1447;
t1886 = t43 * t632;
t1887 = t1453 * t1886;
t1888 = t1451 + t1887 - t1450;
t1896 = t20 * t1886;
t1897 = t939 * t1896;
t1899 = (t662 + t21) * pkin(3);
t1901 = t2 * (-t1463 + t1897 + t1899);
t1903 = t84 * t657 + t1471 - t657;
t1911 = 0.1e1 / (t689 + t628 * (t2 * t1884 + t45 * (t641 * t43 * t695 + t592 * t1888)) + t1901 + pkin(9) * t45 * (t592 * t20 * t1903 + t664 * t1234));
t1912 = t1911 * (t628 * t1868 - t1877 + t1881);
t1914 = t592 * t1482 - t901;
t1916 = t2 * t594;
t1918 = t628 * t1914 - t632 * t1916;
t1922 = t632 * t592;
t1923 = t22 * t628 * t594 + t1922;
t1932 = t45 * t681 + t937;
t1937 = t1270 * (t1 * t1918 + t1923 * t6) + (-t1923 * t1 + t6 * t1918) * t1274 - (t628 * t1932 - t632 * t712) * g(3);
t1939 = t22 * t768;
t1944 = t2 * t764;
t1961 = t22 * t730;
t1964 = -t768 * t1961 + t764 * t728;
t1966 = t1346 * (t730 * (-t3 * t1939 + t6 * t764) + (t1 * t1944 + t6 * t1939) * t728) + t1350 * (t730 * (-t1 * t764 - t14 * t1939) + (-t1 * t1939 + t6 * t1944) * t728) - t1964 * t971;
t1969 = t21 * t1961 + t837;
t1970 = t1969 * t1281;
t1973 = t21 * t817 - t831;
t1975 = -t2 * t1970 - t1973 * t758;
t1977 = t775 + pkin(2);
t1979 = pkin(3) * t1939;
t1980 = t1979 - t922;
t1982 = t728 * t1977 - t730 * t1980;
t1984 = t2 * t1982 * t1281;
t1987 = t1977 * t730 + t728 * t1980;
t1988 = t1987 * t758;
t1990 = t84 * t827;
t1991 = -t1990 + t1445 + t827 - t1447;
t1993 = t43 * t768;
t1994 = t1453 * t1993;
t1995 = t1451 + t1994 - t1450;
t2003 = t20 * t1993;
t2004 = t939 * t2003;
t2006 = (t798 + t21) * pkin(3);
t2008 = t2 * (-t1463 + t2004 + t2006);
t2011 = t20 * (t84 * t793 + t1471 - t793);
t2018 = 0.1e1 / (t825 + t764 * (t2 * t1991 + t45 * (t777 * t43 * t831 + t728 * t1995)) + t2008 + pkin(9) * t45 * (t800 * t1310 + t728 * t2011));
t2019 = t2018 * (t764 * t1975 - t1984 + t1988);
t2021 = t728 * t1482 - t901;
t2023 = t2 * t730;
t2025 = t764 * t2021 - t768 * t2023;
t2029 = t768 * t728;
t2030 = t22 * t764 * t730 + t2029;
t2039 = t45 * t817 + t937;
t2044 = (t1 * t2025 + t2030 * t6) * t1346 + (-t2030 * t1 + t6 * t2025) * t1350 - (t764 * t2039 - t768 * t848) * g(3);
t2046 = t1537 * t1039 + t1644 * t1115 + t1751 * t1191 + t1859 * t1267 + t1966 * t1343 + t1419 * t962 + t1507 * t1481 + t1615 * t1590 + t1722 * t1697 + t1829 * t1804 + t1937 * t1912 + t2044 * t2019;
t2052 = t22 * t59;
t2070 = t965 * (t7 * (-t1405 * t1482 - t6 * t63) + (-t1 * t1389 + t6 * t2052) * t4) - t969 * (t7 * (-t1 * t63 + t1392 * t1482) + (t1 * t2052 + t6 * t1389) * t4) + t1493 * t971;
t2082 = t45 * t6;
t2090 = t965 * (t1 * (-t1484 * t63 - t59 * t1486) + t1417 * t6) + (-t63 * t22 * t16 + t1452 * t2082 - t59 * t32) * t969 + (t63 * t1502 + t59 * t163) * g(3);
t2092 = t22 * t220;
t2114 = (t186 * (-t3 * t2092 - t6 * t224) + (-t1 * t1509 + t6 * t2092) * t184) * t1042 - (t186 * (-t224 * t1 + t14 * t2092) + (t1 * t2092 + t6 * t1509) * t184) * t1046 + t1601 * t971;
t2133 = t1042 * (t1 * (-t1592 * t224 - t220 * t1594) + t1535 * t6) + (-t224 * t22 * t194 + t1564 * t2082 - t220 * t206) * t1046 + (t224 * t1610 + t220 * t304) * g(3);
t2135 = t22 * t356;
t2141 = t2 * t360;
t2158 = t1118 * (t322 * (-t3 * t2135 - t6 * t360) + (-t1 * t2141 + t6 * t2135) * t320) - t1122 * (t322 * (-t1 * t360 + t14 * t2135) + (t1 * t2135 + t6 * t2141) * t320) + t1708 * t971;
t2177 = (t1 * (-t1699 * t360 - t356 * t1701) + t1642 * t6) * t1118 + (-t360 * t22 * t330 + t1671 * t2082 - t356 * t342) * t1122 + (t360 * t1717 + t356 * t440) * g(3);
t2179 = t22 * t492;
t2185 = t2 * t496;
t2202 = t1194 * (t458 * (-t3 * t2179 - t6 * t496) + (-t1 * t2185 + t6 * t2179) * t456) - (t458 * (-t1 * t496 + t14 * t2179) + (t1 * t2179 + t6 * t2185) * t456) * t1198 + t1815 * t971;
t2221 = t1194 * (t1 * (-t1806 * t496 - t492 * t1808) + t1749 * t6) + (-t496 * t22 * t466 + t1778 * t2082 - t492 * t478) * t1198 + (t496 * t1824 + t492 * t576) * g(3);
t2227 = t22 * t628;
t2245 = (t594 * (-t1390 * t1836 - t6 * t632) + (-t1 * t1831 + t6 * t2227) * t592) * t1270 - (t594 * (-t632 * t1 + t1403 * t1836) + (t1 * t2227 + t6 * t1831) * t592) * t1274 + t1923 * t971;
t2264 = (t1 * (-t1914 * t632 - t628 * t1916) + t1857 * t6) * t1270 + (-t632 * t22 * t602 + t1886 * t2082 - t628 * t614) * t1274 + (t632 * t1932 + t628 * t712) * g(3);
t2266 = t22 * t764;
t2272 = t2 * t768;
t2289 = t1346 * (t730 * (-t3 * t2266 - t6 * t768) + (-t1 * t2272 + t6 * t2266) * t728) - t1350 * (t730 * (-t1 * t768 + t14 * t2266) + (t1 * t2266 + t6 * t2272) * t728) + t2030 * t971;
t2308 = (t1 * (-t2021 * t768 - t764 * t2023) + t1964 * t6) * t1346 + (-t768 * t22 * t738 + t1993 * t2082 - t764 * t750) * t1350 + (t768 * t2039 + t764 * t848) * g(3);
t2310 = t2114 * t1039 + t2158 * t1115 + t2202 * t1191 + t2245 * t1267 + t2289 * t1343 + t2090 * t1481 + t2133 * t1590 + t2177 * t1697 + t2221 * t1804 + t2264 * t1912 + t2308 * t2019 + t2070 * t962;
t2312 = cos(xP(5));
t2313 = cos(xP(6));
t2314 = t2313 * t2312;
t2316 = sin(xP(4));
t2317 = sin(xP(5));
t2318 = t2317 * t2316;
t2320 = cos(xP(4));
t2321 = sin(xP(6));
t2323 = t2313 * t2318 + t2321 * t2320;
t2325 = t2317 * t2320;
t2328 = -t2313 * t2325 + t2321 * t2316;
t2330 = -g(1) * t2314 - g(2) * t2323 - g(3) * t2328;
t2332 = t2321 * t2312;
t2336 = t2313 * t2320 - t2321 * t2318;
t2340 = t2313 * t2316 + t2321 * t2325;
t2342 = g(1) * t2332 - g(2) * t2336 - g(3) * t2340;
t2345 = t2316 * t2312;
t2347 = t2320 * t2312;
t2349 = -g(1) * t2317 + g(2) * t2345 - g(3) * t2347;
t2356 = t10 * t16 - t9 * t12;
t2357 = pkin(3) * t2356;
t2362 = t10 * t32 + t28 * t12;
t2383 = t63 * t868 * t79;
t2384 = t66 * t2357;
t2387 = t20 * t890;
t2399 = t66 * t2356;
t2415 = -t188 * t191 + t189 * t194;
t2416 = pkin(3) * t2415;
t2421 = t189 * t206 + t202 * t191;
t2442 = t224 * t977 * t79;
t2443 = t66 * t2416;
t2446 = t20 * t996;
t2458 = t66 * t2415;
t2474 = -t324 * t327 + t325 * t330;
t2475 = pkin(3) * t2474;
t2480 = t325 * t342 + t338 * t327;
t2501 = t360 * t1053 * t79;
t2502 = t66 * t2475;
t2505 = t20 * t1072;
t2517 = t66 * t2474;
t2533 = -t460 * t463 + t461 * t466;
t2534 = pkin(3) * t2533;
t2539 = t461 * t478 + t474 * t463;
t2560 = t496 * t1129 * t79;
t2561 = t66 * t2534;
t2564 = t20 * t1148;
t2576 = t66 * t2533;
t2592 = -t596 * t599 + t597 * t602;
t2593 = pkin(3) * t2592;
t2598 = t597 * t614 + t610 * t599;
t2619 = t632 * t1205 * t79;
t2620 = t66 * t2593;
t2623 = t20 * t1224;
t2635 = t66 * t2592;
t2651 = -t732 * t735 + t733 * t738;
t2652 = pkin(3) * t2651;
t2657 = t733 * t750 + t746 * t735;
t2678 = t768 * t1281 * t79;
t2679 = t66 * t2652;
t2682 = t20 * t1300;
t2694 = t66 * t2651;
t2711 = t2 * t880 + t878;
t2714 = t92 * t875;
t2716 = -t2 * t871 + t869;
t2724 = t45 * t87 * t889;
t2728 = t59 * (t22 * t2711 * pkin(3) - t20 * pkin(9) * t2716 - t2714) + (t887 * pkin(9) * t2711 + pkin(3) * t2716 - t2724) * t63;
t2729 = t961 * t2728;
t2732 = t2 * t988 + t986;
t2735 = t248 * t875;
t2737 = -t2 * t980 + t978;
t2745 = t45 * t243 * t889;
t2749 = t220 * (t22 * t2732 * pkin(3) - t20 * pkin(9) * t2737 - t2735) + (t887 * pkin(9) * t2732 + pkin(3) * t2737 - t2745) * t224;
t2750 = t1038 * t2749;
t2753 = t2 * t1064 + t1062;
t2756 = t384 * t875;
t2758 = -t2 * t1056 + t1054;
t2766 = t45 * t379 * t889;
t2770 = t356 * (t22 * t2753 * pkin(3) - t20 * pkin(9) * t2758 - t2756) + (t887 * pkin(9) * t2753 + pkin(3) * t2758 - t2766) * t360;
t2771 = t1114 * t2770;
t2774 = t2 * t1140 + t1138;
t2777 = t520 * t875;
t2779 = -t2 * t1132 + t1130;
t2787 = t45 * t515 * t889;
t2791 = t492 * (t22 * t2774 * pkin(3) - t20 * pkin(9) * t2779 - t2777) + (t887 * pkin(9) * t2774 + pkin(3) * t2779 - t2787) * t496;
t2792 = t1190 * t2791;
t2795 = t2 * t1216 + t1214;
t2798 = t656 * t875;
t2800 = -t2 * t1208 + t1206;
t2808 = t45 * t651 * t889;
t2812 = t628 * (t22 * t2795 * pkin(3) - t20 * pkin(9) * t2800 - t2798) + (t887 * pkin(9) * t2795 + pkin(3) * t2800 - t2808) * t632;
t2813 = t1266 * t2812;
t2816 = t2 * t1292 + t1290;
t2819 = t792 * t875;
t2821 = -t2 * t1284 + t1282;
t2829 = t45 * t787 * t889;
t2833 = t764 * (t22 * t2816 * pkin(3) - t20 * pkin(9) * t2821 - t2819) + (t887 * pkin(9) * t2816 + pkin(3) * t2821 - t2829) * t768;
t2834 = t1342 * t2833;
t2847 = t1422 * t53;
t2850 = t1426 * t868 - t2 * t2847;
t2853 = t2 * t53 * t1435;
t2854 = t1440 * t868;
t2856 = t1480 * (t59 * t2850 - t2853 - t2854);
t2859 = t1540 * t214;
t2862 = t1544 * t977 - t2 * t2859;
t2865 = t2 * t214 * t1553;
t2866 = t1558 * t977;
t2868 = t1589 * (t220 * t2862 - t2865 - t2866);
t2871 = t1647 * t350;
t2874 = t1651 * t1053 - t2 * t2871;
t2877 = t2 * t350 * t1660;
t2878 = t1665 * t1053;
t2880 = t1696 * (t356 * t2874 - t2877 - t2878);
t2883 = t1754 * t486;
t2886 = t1758 * t1129 - t2 * t2883;
t2889 = t2 * t486 * t1767;
t2890 = t1772 * t1129;
t2892 = t1803 * (t492 * t2886 - t2889 - t2890);
t2895 = t1862 * t622;
t2898 = t1866 * t1205 - t2 * t2895;
t2901 = t2 * t622 * t1875;
t2902 = t1880 * t1205;
t2904 = t1911 * (t628 * t2898 - t2901 - t2902);
t2907 = t1969 * t758;
t2910 = t1973 * t1281 - t2 * t2907;
t2913 = t2 * t758 * t1982;
t2914 = t1987 * t1281;
t2916 = t2018 * (t764 * t2910 - t2913 - t2914);
t2918 = t1419 * t2729 + t1507 * t2856 + t1537 * t2750 + t1615 * t2868 + t1644 * t2771 + t1722 * t2880 + t1751 * t2792 + t1829 * t2892 + t1859 * t2813 + t1937 * t2904 + t1966 * t2834 + t2044 * t2916;
t2932 = t2070 * t2729 + t2090 * t2856 + t2114 * t2750 + t2133 * t2868 + t2158 * t2771 + t2177 * t2880 + t2202 * t2792 + t2221 * t2892 + t2245 * t2813 + t2264 * t2904 + t2289 * t2834 + t2308 * t2916;
t2948 = t2320 * koppelP(1,1);
t2953 = t2320 * koppelP(1,2);
t2955 = t2316 * koppelP(1,1);
t2960 = t2313 * (-t2316 * koppelP(1,2) + t2317 * t2948) + t2321 * (-t2317 * t2953 - t2955) - t2312 * t2320 * koppelP(1,3);
t2961 = t22 * t178;
t2964 = 0.2e1 * t60 * t889 * t2961;
t2967 = t66 * t50 * t48 * pkin(3);
t2974 = -t2964 + t59 * (t1454 + t2967) + t20 * pkin(9) * (t93 * t122 + t1471);
t2980 = t59 * t74 * pkin(3) + t101 * pkin(9) + t60 * t40;
t2981 = t2980 * t43;
t2982 = t7 * t2981;
t2983 = t4 * t2974 + t2982;
t2991 = 0.2e1 * t60 * t122 * t121;
t2996 = t66 * t20;
t2999 = t22 * t2996 * t43 * pkin(9) + t114;
t3003 = t50 * t48 * t20 * t178;
t3004 = t2991 + t59 * (-t135 * t122 + t1445 - t1447) + t63 * t2999 - t3003;
t3009 = t4 * t2980 * t43 * t53 + t2 * t868 * t2983 - t7 * t2974 * t53 - t45 * t868 * t3004;
t3014 = 0.1e1 / (t2 * t3004 + t45 * t2983);
t3017 = t2313 * koppelP(1,1);
t3018 = -koppelP(1,2) * t2321 + t3017;
t3020 = koppelP(1,3) * t2312;
t3025 = t2313 * koppelP(1,2) + koppelP(1,1) * t2321;
t3029 = t2320 * koppelP(2,1);
t3031 = t2316 * koppelP(2,2);
t3034 = t2320 * koppelP(2,2);
t3036 = t2316 * koppelP(2,1);
t3041 = t2313 * (t2317 * t3029 - t3031) + t2321 * (-t2317 * t3034 - t3036) - t2312 * t2320 * koppelP(2,3);
t3044 = 0.2e1 * t221 * t889 * t2961;
t3051 = -t3044 + t220 * (t1565 + t2967) + t20 * pkin(9) * (t249 * t122 + t1471);
t3057 = t220 * t233 * pkin(3) + t256 * pkin(9) + t221 * t40;
t3058 = t43 * t3057;
t3059 = t186 * t3058;
t3060 = t184 * t3051 + t3059;
t3068 = 0.2e1 * t221 * t122 * t121;
t3073 = t3068 + t220 * (-t283 * t122 + t1445 - t1447) + t224 * t2999 - t3003;
t3077 = t184 * t43 * t3057 * t214 + t2 * t977 * t3060 - t45 * t3073 * t977 - t3051 * t980;
t3082 = 0.1e1 / (t2 * t3073 + t45 * t3060);
t3085 = t2313 * koppelP(2,1);
t3086 = -koppelP(2,2) * t2321 + t3085;
t3088 = koppelP(2,3) * t2312;
t3093 = t2313 * koppelP(2,2) + koppelP(2,1) * t2321;
t3097 = t2320 * koppelP(3,1);
t3099 = t2316 * koppelP(3,2);
t3102 = t2320 * koppelP(3,2);
t3104 = t2316 * koppelP(3,1);
t3109 = t2313 * (t2317 * t3097 - t3099) + t2321 * (-t2317 * t3102 - t3104) - t2312 * t2320 * koppelP(3,3);
t3112 = 0.2e1 * t357 * t889 * t2961;
t3119 = -t3112 + t356 * (t1672 + t2967) + t20 * pkin(9) * (t385 * t122 + t1471);
t3125 = t356 * t369 * pkin(3) + t392 * pkin(9) + t357 * t40;
t3126 = t43 * t3125;
t3127 = t322 * t3126;
t3128 = t320 * t3119 + t3127;
t3136 = 0.2e1 * t357 * t122 * t121;
t3141 = t3136 + t356 * (-t419 * t122 + t1445 - t1447) + t360 * t2999 - t3003;
t3145 = t320 * t43 * t3125 * t350 + t2 * t1053 * t3128 - t45 * t3141 * t1053 - t3119 * t1056;
t3150 = 0.1e1 / (t2 * t3141 + t45 * t3128);
t3153 = t2313 * koppelP(3,1);
t3154 = -koppelP(3,2) * t2321 + t3153;
t3156 = koppelP(3,3) * t2312;
t3161 = t2313 * koppelP(3,2) + koppelP(3,1) * t2321;
t3165 = t2320 * koppelP(4,1);
t3167 = t2316 * koppelP(4,2);
t3170 = t2320 * koppelP(4,2);
t3172 = t2316 * koppelP(4,1);
t3177 = t2313 * (t2317 * t3165 - t3167) + t2321 * (-t2317 * t3170 - t3172) - t2312 * t2320 * koppelP(4,3);
t3180 = 0.2e1 * t493 * t889 * t2961;
t3187 = -t3180 + t492 * (t1779 + t2967) + t20 * pkin(9) * (t521 * t122 + t1471);
t3193 = t492 * t505 * pkin(3) + t528 * pkin(9) + t493 * t40;
t3194 = t43 * t3193;
t3195 = t458 * t3194;
t3196 = t456 * t3187 + t3195;
t3204 = 0.2e1 * t493 * t122 * t121;
t3209 = t3204 + t492 * (-t555 * t122 + t1445 - t1447) + t496 * t2999 - t3003;
t3213 = t456 * t43 * t3193 * t486 + t2 * t1129 * t3196 - t45 * t3209 * t1129 - t3187 * t1132;
t3218 = 0.1e1 / (t2 * t3209 + t45 * t3196);
t3221 = t2313 * koppelP(4,1);
t3222 = -koppelP(4,2) * t2321 + t3221;
t3224 = koppelP(4,3) * t2312;
t3229 = t2313 * koppelP(4,2) + koppelP(4,1) * t2321;
t3233 = t2320 * koppelP(5,1);
t3235 = t2316 * koppelP(5,2);
t3238 = t2320 * koppelP(5,2);
t3240 = t2316 * koppelP(5,1);
t3245 = t2313 * (t2317 * t3233 - t3235) + t2321 * (-t2317 * t3238 - t3240) - t2312 * t2320 * koppelP(5,3);
t3248 = 0.2e1 * t629 * t889 * t2961;
t3255 = -t3248 + t628 * (t1887 + t2967) + t20 * pkin(9) * (t657 * t122 + t1471);
t3261 = t628 * t641 * pkin(3) + t664 * pkin(9) + t629 * t40;
t3262 = t43 * t3261;
t3263 = t594 * t3262;
t3264 = t592 * t3255 + t3263;
t3272 = 0.2e1 * t629 * t122 * t121;
t3277 = t3272 + t628 * (-t691 * t122 + t1445 - t1447) + t632 * t2999 - t3003;
t3281 = t592 * t43 * t3261 * t622 + t2 * t1205 * t3264 - t45 * t3277 * t1205 - t3255 * t1208;
t3286 = 0.1e1 / (t2 * t3277 + t45 * t3264);
t3289 = t2313 * koppelP(5,1);
t3290 = -koppelP(5,2) * t2321 + t3289;
t3292 = koppelP(5,3) * t2312;
t3297 = t2313 * koppelP(5,2) + koppelP(5,1) * t2321;
t3301 = t2320 * koppelP(6,1);
t3306 = t2320 * koppelP(6,2);
t3308 = t2316 * koppelP(6,1);
t3313 = t2313 * (-t2316 * koppelP(6,2) + t2317 * t3301) + t2321 * (-t2317 * t3306 - t3308) - t2312 * t2320 * koppelP(6,3);
t3316 = 0.2e1 * t765 * t889 * t2961;
t3323 = -t3316 + t764 * (t1994 + t2967) + t20 * pkin(9) * (t793 * t122 + t1471);
t3329 = t764 * t777 * pkin(3) + t800 * pkin(9) + t765 * t40;
t3330 = t43 * t3329;
t3331 = t730 * t3330;
t3332 = t728 * t3323 + t3331;
t3340 = 0.2e1 * t765 * t122 * t121;
t3345 = t3340 + t764 * (-t827 * t122 + t1445 - t1447) + t768 * t2999 - t3003;
t3349 = t728 * t43 * t3329 * t758 + t2 * t1281 * t3332 - t45 * t3345 * t1281 - t3323 * t1284;
t3354 = 0.1e1 / (t2 * t3345 + t45 * t3332);
t3357 = t2313 * koppelP(6,1);
t3358 = -koppelP(6,2) * t2321 + t3357;
t3360 = koppelP(6,3) * t2312;
t3365 = t2313 * koppelP(6,2) + koppelP(6,1) * t2321;
t3372 = t2317 * koppelP(1,2);
t3377 = t2320 * (t2317 * t3017 - t2321 * t3372 - t3020) - t3025 * t2316;
t3378 = t3377 * t2728;
t3379 = t973 * t961;
t3387 = t2320 * (-t2321 * t2317 * koppelP(2,2) + t2317 * t3085 - t3088) - t3093 * t2316;
t3388 = t3387 * t2749;
t3389 = t1049 * t1038;
t3397 = t2320 * (-t2321 * t2317 * koppelP(3,2) + t2317 * t3153 - t3156) - t3161 * t2316;
t3398 = t2770 * t3397;
t3399 = t1125 * t1114;
t3407 = t2320 * (-t2321 * t2317 * koppelP(4,2) + t2317 * t3221 - t3224) - t3229 * t2316;
t3408 = t3407 * t2791;
t3409 = t1201 * t1190;
t3417 = t2320 * (-t2321 * t2317 * koppelP(5,2) + t2317 * t3289 - t3292) - t3297 * t2316;
t3418 = t2812 * t3417;
t3419 = t1277 * t1266;
t3422 = t2317 * koppelP(6,2);
t3427 = t2320 * (t2317 * t3357 - t2321 * t3422 - t3360) - t3365 * t2316;
t3428 = t2833 * t3427;
t3429 = t1353 * t1342;
t3433 = t1360 * t961;
t3435 = t1365 * t1038;
t3437 = t1370 * t1114;
t3439 = t1375 * t1190;
t3441 = t1380 * t1266;
t3443 = t1385 * t1342;
t3447 = t1419 * t961;
t3451 = t3377 * (-t59 * t2850 + t2853 + t2854);
t3452 = t1507 * t1480;
t3454 = t1537 * t1038;
t3458 = t3387 * (-t220 * t2862 + t2865 + t2866);
t3459 = t1615 * t1589;
t3461 = t1644 * t1114;
t3465 = (-t356 * t2874 + t2877 + t2878) * t3397;
t3466 = t1722 * t1696;
t3468 = t1751 * t1190;
t3472 = t3407 * (-t492 * t2886 + t2889 + t2890);
t3473 = t1829 * t1803;
t3475 = t1859 * t1266;
t3479 = (-t628 * t2898 + t2901 + t2902) * t3417;
t3480 = t1937 * t1911;
t3482 = t1966 * t1342;
t3486 = (-t764 * t2910 + t2913 + t2914) * t3427;
t3487 = t2044 * t2018;
t3489 = t3447 * t3378 + t3454 * t3388 + t3461 * t3398 + t3468 * t3408 + t3475 * t3418 + t3482 * t3428 - t3452 * t3451 - t3459 * t3458 - t3466 * t3465 - t3473 * t3472 - t3480 * t3479 - t3487 * t3486;
t3491 = t2070 * t961;
t3493 = t2090 * t1480;
t3495 = t2114 * t1038;
t3497 = t2133 * t1589;
t3499 = t2158 * t1114;
t3501 = t2177 * t1696;
t3503 = t2202 * t1190;
t3505 = t2221 * t1803;
t3507 = t2245 * t1266;
t3509 = t2264 * t1911;
t3511 = t2289 * t1342;
t3513 = t2308 * t2018;
t3515 = t3491 * t3378 + t3495 * t3388 + t3499 * t3398 + t3503 * t3408 + t3507 * t3418 + t3511 * t3428 - t3493 * t3451 - t3497 * t3458 - t3501 * t3465 - t3505 * t3472 - t3509 * t3479 - t3513 * t3486;
t3537 = -t2 * t2983 * t53 - t7 * t868 * t2974 + t45 * t3004 * t53 + t869 * t2981;
t3542 = koppelP(1,3) * t2317;
t3552 = -t186 * t977 * t3051 - t2 * t3060 * t214 + t45 * t3073 * t214 + t978 * t3058;
t3557 = koppelP(2,3) * t2317;
t3567 = -t322 * t1053 * t3119 - t2 * t3128 * t350 + t45 * t3141 * t350 + t1054 * t3126;
t3572 = koppelP(3,3) * t2317;
t3582 = -t458 * t1129 * t3187 - t2 * t3196 * t486 + t45 * t3209 * t486 + t1130 * t3194;
t3587 = koppelP(4,3) * t2317;
t3597 = -t594 * t1205 * t3255 - t2 * t3264 * t622 + t45 * t3277 * t622 + t1206 * t3262;
t3602 = koppelP(5,3) * t2317;
t3612 = -t730 * t1281 * t3323 - t2 * t3332 * t758 + t45 * t3345 * t758 + t1282 * t3330;
t3617 = koppelP(6,3) * t2317;
t3624 = t3377 * (t63 * t894 + t885);
t3628 = t3387 * (t224 * t1000 + t993);
t3632 = t3397 * (t360 * t1076 + t1069);
t3636 = t3407 * (t496 * t1152 + t1145);
t3640 = t3417 * (t632 * t1228 + t1221);
t3644 = (t768 * t1304 + t1297) * t3427;
t3659 = (-t59 * t1428 + t1437 - t1441) * t3377;
t3664 = t3387 * (-t220 * t1546 + t1555 - t1559);
t3669 = (-t356 * t1653 + t1662 - t1666) * t3397;
t3674 = t3407 * (-t492 * t1760 + t1769 - t1773);
t3679 = (-t628 * t1868 + t1877 - t1881) * t3417;
t3684 = (-t764 * t1975 + t1984 - t1988) * t3427;
t3686 = -t3447 * t3624 + t3452 * t3659 - t3454 * t3628 + t3459 * t3664 - t3461 * t3632 + t3466 * t3669 - t3468 * t3636 + t3473 * t3674 - t3475 * t3640 + t3480 * t3679 - t3482 * t3644 + t3487 * t3684;
t3700 = -t3491 * t3624 + t3493 * t3659 - t3495 * t3628 + t3497 * t3664 - t3499 * t3632 + t3501 * t3669 - t3503 * t3636 + t3505 * t3674 - t3507 * t3640 + t3509 * t3679 - t3511 * t3644 + t3513 * t3684;
t3722 = -t2316 * t3020 + t2313 * (t2317 * t2955 + t2953) + (-t2316 * t3372 + t2948) * t2321;
t3726 = t2312 * t3018 + t3542;
t3739 = -t2312 * t2316 * koppelP(2,3) + t2313 * (t2317 * t3036 + t3034) + (-t2317 * t3031 + t3029) * t2321;
t3743 = t2312 * t3086 + t3557;
t3756 = -t2312 * t2316 * koppelP(3,3) + t2313 * (t2317 * t3104 + t3102) + (-t2317 * t3099 + t3097) * t2321;
t3760 = t2312 * t3154 + t3572;
t3773 = -t2312 * t2316 * koppelP(4,3) + t2313 * (t2317 * t3172 + t3170) + (-t2317 * t3167 + t3165) * t2321;
t3777 = t2312 * t3222 + t3587;
t3790 = -t2312 * t2316 * koppelP(5,3) + t2313 * (t2317 * t3240 + t3238) + (-t2317 * t3235 + t3233) * t2321;
t3794 = t2312 * t3290 + t3602;
t3807 = -t2312 * t2316 * koppelP(6,3) + t2313 * (t2317 * t3308 + t3306) + (-t2316 * t3422 + t3301) * t2321;
t3811 = t2312 * t3358 + t3617;
t3818 = t7 * pkin(9);
t3820 = t20 * t3818 + t948;
t3826 = -t20 * t4 * pkin(9) + t22 * t141;
t3840 = 0.2e1 * t124;
t3843 = t84 * t66;
t3857 = t84 * t2996;
t3859 = t22 * t889;
t3864 = t953 * t952 * t43;
t3870 = 0.1e1 / (t60 * (t45 * (-0.2e1 * t126 + t127) * t43 + t3840) + t59 * (t45 * (t3843 * t148 + t912 * t1492 + (0.2e1 * t1464 * t3818 + t926 - t927) * pkin(3)) - t2 * (-t40 * t63 + t1443 - t1445 + t1447)) + t45 * pkin(9) * (t63 * t20 * t928 + t3859 * t148 + t3857 * t1492 - t3864 * t3818) + t1469);
t3884 = -t3870 * (t59 * (t2 * t3820 * t868 - t3826 * t53 - t877) - (-t2 * t1426 * t868 + t2847 + t892) * t63) * t3722 + t3870 * (t59 * (t2 * t3820 * t53 + t3826 * t868 - t2714) + t63 * (t2 * t1426 * t53 + t1423 - t2724)) * t3726;
t3886 = t186 * pkin(9);
t3888 = t20 * t3886 + t1031;
t3894 = -t20 * t184 * pkin(9) + t22 * t287;
t3932 = 0.1e1 / (t221 * (t45 * (-0.2e1 * t274 + t275) * t43 + t3840) + t220 * (t45 * (t3843 * t293 + t912 * t1600 + (0.2e1 * t1574 * t3886 + t1018 - t1019) * pkin(3)) - t2 * (-t40 * t224 - t1445 + t1447 + t1561)) + t45 * pkin(9) * (t224 * t20 * t1020 + t3857 * t1600 + t3859 * t293 - t3864 * t3886) + t1579);
t3946 = -t3932 * t3739 * (t220 * (t2 * t3888 * t977 - t3894 * t214 - t985) - (-t2 * t1544 * t977 + t2859 + t998) * t224) + t3932 * t3743 * (t220 * (t2 * t3888 * t214 + t3894 * t977 - t2735) + t224 * (t2 * t1544 * t214 + t1541 - t2745));
t3948 = t322 * pkin(9);
t3950 = t20 * t3948 + t1107;
t3956 = -t20 * t320 * pkin(9) + t22 * t423;
t3994 = 0.1e1 / (t357 * (t45 * t43 * (-0.2e1 * t410 + t411) + t3840) + t356 * (t45 * (t3843 * t429 + t912 * t1707 + pkin(3) * (0.2e1 * t1681 * t3948 + t1094 - t1095)) - t2 * (-t40 * t360 - t1445 + t1447 + t1668)) + t45 * (t360 * t20 * t1096 + t3857 * t1707 + t3859 * t429 - t3864 * t3948) * pkin(9) + t1686);
t4008 = -t3994 * (t356 * (t2 * t3950 * t1053 - t3956 * t350 - t1061) - (-t2 * t1651 * t1053 + t1074 + t2871) * t360) * t3756 + t3994 * (t356 * (t2 * t3950 * t350 + t3956 * t1053 - t2756) + t360 * (t2 * t1651 * t350 + t1648 - t2766)) * t3760;
t4010 = t458 * pkin(9);
t4012 = t20 * t4010 + t1183;
t4018 = -t20 * t456 * pkin(9) + t22 * t559;
t4056 = 0.1e1 / (t493 * (t45 * (-0.2e1 * t546 + t547) * t43 + t3840) + t492 * (t45 * (t3843 * t565 + t912 * t1814 + pkin(3) * (0.2e1 * t1788 * t4010 + t1170 - t1171)) - t2 * (-t40 * t496 - t1445 + t1447 + t1775)) + t45 * pkin(9) * (t496 * t20 * t1172 + t3857 * t1814 + t3859 * t565 - t3864 * t4010) + t1793);
t4070 = -t4056 * t3773 * (t492 * (t2 * t4012 * t1129 - t4018 * t486 - t1137) - t496 * (-t2 * t1758 * t1129 + t1150 + t2883)) + t4056 * t3777 * (t492 * (t2 * t4012 * t486 + t4018 * t1129 - t2777) + t496 * (t2 * t1758 * t486 + t1755 - t2787));
t4072 = t594 * pkin(9);
t4074 = t20 * t4072 + t1259;
t4080 = -t20 * t592 * pkin(9) + t22 * t695;
t4118 = 0.1e1 / (t629 * (t45 * (-0.2e1 * t682 + t683) * t43 + t3840) + t628 * (t45 * (t3843 * t701 + t912 * t1922 + (0.2e1 * t1896 * t4072 + t1246 - t1247) * pkin(3)) - t2 * (-t40 * t632 - t1445 + t1447 + t1883)) + t45 * pkin(9) * (t632 * t20 * t1248 + t3857 * t1922 + t3859 * t701 - t3864 * t4072) + t1901);
t4132 = -t4118 * t3790 * (t628 * (t2 * t4074 * t1205 - t4080 * t622 - t1213) - t632 * (-t2 * t1866 * t1205 + t1226 + t2895)) + t4118 * (t628 * (t2 * t4074 * t622 + t4080 * t1205 - t2798) + t632 * (t2 * t1866 * t622 + t1863 - t2808)) * t3794;
t4134 = t730 * pkin(9);
t4136 = t20 * t4134 + t1335;
t4142 = -t20 * t728 * pkin(9) + t22 * t831;
t4180 = 0.1e1 / (t765 * (t45 * t43 * (-0.2e1 * t818 + t819) + t3840) + t764 * (t45 * (t3843 * t837 + t912 * t2029 + pkin(3) * (0.2e1 * t2003 * t4134 + t1322 - t1323)) - t2 * (-t40 * t768 - t1445 + t1447 + t1990)) + t45 * pkin(9) * (t768 * t20 * t1324 + t3857 * t2029 + t3859 * t837 - t3864 * t4134) + t2008);
t4194 = -t4180 * (t764 * (t2 * t4136 * t1281 - t4142 * t758 - t1289) - (-t2 * t1973 * t1281 + t1302 + t2907) * t768) * t3807 + t4180 * t3811 * (t764 * (t2 * t4136 * t758 + t4142 * t1281 - t2819) + t768 * (t2 * t1973 * t758 + t1970 - t2829));
t4208 = t59 * pkin(3) + pkin(2) + t72;
t4211 = t21 * t2052 - t1432 + t922;
t4216 = -t1 * t3726 + t6 * t3722;
t4220 = t1 * t3722 + t6 * t3726;
t4244 = 0.1e1 / (t2 * (t59 * t1448 - t1463 + t1465 + t1467 + t2991) + (t4 * (pkin(9) * t1473 + t59 * t1455 - t2964) + t2982) * t45) * (t2 * (t10 * t4216 - t4220 * t12) * (t4208 * t4 + t4211 * t7) - (-t4 * t4211 + t4208 * t7) * (t10 * t4220 + t12 * t4216));
t4249 = -t1 * t3743 + t6 * t3739;
t4253 = t3739 * t1 + t6 * t3743;
t4257 = t220 * pkin(3) + pkin(2) + t231;
t4260 = t21 * t2092 - t1550 + t922;
t4284 = 0.1e1 / (t2 * (t220 * t1562 - t1463 + t1575 + t1577 + t3068) + (t184 * (pkin(9) * t1582 + t220 * t1566 - t3044) + t3059) * t45) * (t2 * (t4257 * t184 + t4260 * t186) * (t189 * t4249 - t191 * t4253) - (t189 * t4253 + t191 * t4249) * (-t184 * t4260 + t4257 * t186));
t4288 = t356 * pkin(3) + pkin(2) + t367;
t4291 = t21 * t2135 - t1657 + t922;
t4296 = -t1 * t3760 + t6 * t3756;
t4300 = t1 * t3756 + t6 * t3760;
t4324 = 0.1e1 / (t2 * (t356 * t1669 - t1463 + t1682 + t1684 + t3136) + t45 * (t320 * (t356 * t1673 + t1688 * t21 - t3112) + t3127)) * (t2 * (t325 * t4296 - t4300 * t327) * (t4288 * t320 + t4291 * t322) - (t325 * t4300 + t4296 * t327) * (-t320 * t4291 + t4288 * t322));
t4329 = -t1 * t3777 + t6 * t3773;
t4333 = t1 * t3773 + t6 * t3777;
t4337 = t492 * pkin(3) + pkin(2) + t503;
t4340 = t21 * t2179 - t1764 + t922;
t4364 = 0.1e1 / (t2 * (t492 * t1776 - t1463 + t1789 + t1791 + t3204) + (t456 * (pkin(9) * t1796 + t492 * t1780 - t3180) + t3195) * t45) * (t2 * (t4337 * t456 + t4340 * t458) * (t461 * t4329 - t4333 * t463) - (t4329 * t463 + t461 * t4333) * (t4337 * t458 - t456 * t4340));
t4368 = t628 * pkin(3) + pkin(2) + t639;
t4371 = t21 * t2227 - t1872 + t922;
t4376 = -t1 * t3794 + t6 * t3790;
t4380 = t1 * t3790 + t6 * t3794;
t4404 = 0.1e1 / (t2 * (t628 * t1884 - t1463 + t1897 + t1899 + t3272) + (t592 * (t628 * t1888 + t1903 * t21 - t3248) + t3263) * t45) * (t2 * (t597 * t4376 - t4380 * t599) * (t4368 * t592 + t4371 * t594) - (t4376 * t599 + t597 * t4380) * (t4368 * t594 - t592 * t4371));
t4408 = t764 * pkin(3) + pkin(2) + t775;
t4411 = t21 * t2266 - t1979 + t922;
t4416 = -t1 * t3811 + t6 * t3807;
t4420 = t1 * t3807 + t6 * t3811;
t4444 = 0.1e1 / (t2 * (t764 * t1991 - t1463 + t2004 + t2006 + t3340) + (t728 * (pkin(9) * t2011 + t764 * t1995 - t3316) + t3331) * t45) * (t2 * (t733 * t4416 - t735 * t4420) * (t4408 * t728 + t4411 * t730) - (t4408 * t730 - t728 * t4411) * (t735 * t4416 + t733 * t4420));
t4446 = t1419 * t3884 + t1507 * t4244 + t1537 * t3946 + t1615 * t4284 + t1644 * t4008 + t1722 * t4324 + t1751 * t4070 + t1829 * t4364 + t1859 * t4132 + t1937 * t4404 + t1966 * t4194 + t2044 * t4444;
t4460 = t2070 * t3884 + t2090 * t4244 + t2114 * t3946 + t2133 * t4284 + t2158 * t4008 + t2177 * t4324 + t2202 * t4070 + t2221 * t4364 + t2245 * t4132 + t2264 * t4404 + t2289 * t4194 + t2308 * t4444;
unknown(1,1) = MDP(1) * (-g(3) * t181 * (t60 * (t43 * (0.2e1 * t23 * t19 + t40 * t34) + 0.2e1 * t53 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t63 * t40 * t18 + t66 * t53 * t46) + pkin(3) * t34 * t74) + t84 * (-t81 - t82) + t81 - t88 * t86 + t82) + t43 * (-t22 * t20 * (-t93 * t92 + t19) + t101 * t34) * pkin(9) - t111 * pkin(9) * (t63 * t106 + t53 * t46) + t63 * (t21 * t106 + t92 * t114) + t88 * t46) - g(3) * t317 * (t221 * (t43 * (0.2e1 * t23 * t197 + t40 * t208) + 0.2e1 * t214 * t50 * t49 * t47) + t220 * (t43 * (t22 * (-t224 * t40 * t196 + t66 * t214 * t46) + pkin(3) * t208 * t233) + t84 * (-t239 - t240) + t239 - t244 * t86 + t240) + t43 * (-t22 * t20 * (-t249 * t248 + t197) + t256 * t208) * pkin(9) - t111 * pkin(9) * (t214 * t46 + t224 * t261) + t224 * (t248 * t114 + t21 * t261) + t244 * t46) - g(3) * t453 * (t357 * (t43 * (0.2e1 * t23 * t333 + t40 * t344) + 0.2e1 * t350 * t50 * t49 * t47) + t356 * (t43 * (t22 * (-t360 * t40 * t332 + t66 * t350 * t46) + pkin(3) * t344 * t369) + t84 * (-t375 - t376) + t375 - t380 * t86 + t376) + t43 * (-t22 * t20 * (-t385 * t384 + t333) + t392 * t344) * pkin(9) - t111 * pkin(9) * (t350 * t46 + t360 * t397) + t360 * (t384 * t114 + t21 * t397) + t380 * t46) - g(3) * t589 * (t493 * (t43 * (0.2e1 * t23 * t469 + t40 * t480) + 0.2e1 * t486 * t50 * t49 * t47) + t492 * (t43 * (t22 * (-t496 * t40 * t468 + t66 * t486 * t46) + pkin(3) * t480 * t505) + t84 * (-t511 - t512) + t511 - t516 * t86 + t512) + t43 * (-t22 * t20 * (-t521 * t520 + t469) + t528 * t480) * pkin(9) - t111 * pkin(9) * (t486 * t46 + t496 * t533) + t496 * (t520 * t114 + t21 * t533) + t516 * t46) - g(3) * t725 * (t629 * (t43 * (0.2e1 * t23 * t605 + t40 * t616) + 0.2e1 * t622 * t50 * t49 * t47) + t628 * (t43 * (t22 * (-t632 * t40 * t604 + t66 * t622 * t46) + pkin(3) * t616 * t641) + t84 * (-t647 - t648) + t647 - t652 * t86 + t648) + t43 * (-t22 * t20 * (-t657 * t656 + t605) + t664 * t616) * pkin(9) - t111 * pkin(9) * (t622 * t46 + t632 * t669) + t632 * (t656 * t114 + t21 * t669) + t652 * t46) - g(3) * t861 * (t765 * (t43 * (0.2e1 * t23 * t741 + t40 * t752) + 0.2e1 * t758 * t50 * t49 * t47) + t764 * (t43 * (t22 * (-t768 * t40 * t740 + t66 * t758 * t46) + pkin(3) * t752 * t777) + t84 * (-t783 - t784) + t783 - t788 * t86 + t784) + t43 * (-t22 * t20 * (-t793 * t792 + t741) + t800 * t752) * pkin(9) - t111 * pkin(9) * (t758 * t46 + t768 * t805) + t768 * (t792 * t114 + t21 * t805) + t788 * t46)) + MDP(3) * (t1049 * t1039 + t1125 * t1115 + t1201 * t1191 + t1277 * t1267 + t1353 * t1343 + t973 * t962) + MDP(4) * (t1365 * t1039 + t1370 * t1115 + t1375 * t1191 + t1380 * t1267 + t1385 * t1343 + t1360 * t962) + MDP(10) * t2046 + MDP(11) * t2310 + MDP(21) * (t2330 * t2314 + t2349 * t2317 - t2342 * t2332);
unknown(2,1) = MDP(1) * (-g(3) * t181 * (t60 * (t43 * (-0.2e1 * t23 * t2357 + t40 * t2362) - 0.2e1 * t868 * t50 * t49 * t47) + t59 * (t43 * (t22 * (t63 * t40 * t2356 - t66 * t868 * t46) + pkin(3) * t2362 * t74) + t84 * (t2383 + t2384) - t2383 + t2387 * t86 - t2384) + t43 * pkin(9) * (t22 * t20 * (-t93 * t876 + t2357) + t101 * t2362) + t111 * pkin(9) * (t63 * t2399 + t868 * t46) + t63 * (-t876 * t114 - t21 * t2399) - t2387 * t46) - g(3) * t317 * (t221 * (t43 * (-0.2e1 * t23 * t2416 + t40 * t2421) - 0.2e1 * t977 * t50 * t49 * t47) + t220 * (t43 * (t22 * (t224 * t40 * t2415 - t66 * t977 * t46) + pkin(3) * t2421 * t233) + t84 * (t2442 + t2443) - t2442 + t2446 * t86 - t2443) + t43 * pkin(9) * (t22 * t20 * (-t249 * t984 + t2416) + t256 * t2421) + t111 * pkin(9) * (t224 * t2458 + t977 * t46) + t224 * (-t984 * t114 - t21 * t2458) - t2446 * t46) - g(3) * t453 * (t357 * (t43 * (-0.2e1 * t23 * t2475 + t40 * t2480) - 0.2e1 * t1053 * t50 * t49 * t47) + t356 * (t43 * (t22 * (-t66 * t1053 * t46 + t360 * t40 * t2474) + pkin(3) * t2480 * t369) + t84 * (t2501 + t2502) - t2501 + t2505 * t86 - t2502) + t43 * pkin(9) * (t22 * t20 * (-t385 * t1060 + t2475) + t392 * t2480) + t111 * pkin(9) * (t1053 * t46 + t360 * t2517) + t360 * (-t1060 * t114 - t21 * t2517) - t2505 * t46) - g(3) * t589 * (t493 * (t43 * (-0.2e1 * t23 * t2534 + t40 * t2539) - 0.2e1 * t1129 * t50 * t49 * t47) + t492 * (t43 * (t22 * (-t66 * t1129 * t46 + t496 * t40 * t2533) + pkin(3) * t2539 * t505) + t84 * (t2560 + t2561) - t2560 + t2564 * t86 - t2561) + t43 * pkin(9) * (t22 * t20 * (-t521 * t1136 + t2534) + t528 * t2539) + t111 * pkin(9) * (t1129 * t46 + t496 * t2576) + t496 * (-t1136 * t114 - t21 * t2576) - t2564 * t46) - g(3) * t725 * (t629 * (t43 * (-0.2e1 * t23 * t2593 + t40 * t2598) - 0.2e1 * t1205 * t50 * t49 * t47) + t628 * (t43 * (t22 * (-t66 * t1205 * t46 + t632 * t40 * t2592) + pkin(3) * t2598 * t641) + t84 * (t2619 + t2620) - t2619 + t2623 * t86 - t2620) + t43 * pkin(9) * (t22 * t20 * (-t657 * t1212 + t2593) + t664 * t2598) + t111 * pkin(9) * (t1205 * t46 + t632 * t2635) + t632 * (-t1212 * t114 - t21 * t2635) - t2623 * t46) - g(3) * t861 * (t765 * (t43 * (-0.2e1 * t23 * t2652 + t40 * t2657) - 0.2e1 * t1281 * t50 * t49 * t47) + t764 * (t43 * (t22 * (-t66 * t1281 * t46 + t768 * t40 * t2651) + pkin(3) * t2657 * t777) + t84 * (t2678 + t2679) - t2678 + t2682 * t86 - t2679) + t43 * pkin(9) * (t22 * t20 * (-t793 * t1288 + t2652) + t800 * t2657) + t111 * pkin(9) * (t1281 * t46 + t768 * t2694) + t768 * (-t1288 * t114 - t21 * t2694) - t2682 * t46)) + MDP(3) * (t1049 * t2750 + t1125 * t2771 + t1201 * t2792 + t1277 * t2813 + t1353 * t2834 + t973 * t2729) + MDP(4) * (t1360 * t2729 + t1365 * t2750 + t1370 * t2771 + t1375 * t2792 + t1380 * t2813 + t1385 * t2834) + MDP(10) * t2918 + MDP(11) * t2932 + MDP(21) * (t2330 * t2323 + t2342 * t2336 - t2349 * t2345);
unknown(3,1) = -0.6e1 * g(3) * MDP(1) + MDP(21) * (t2330 * t2328 + t2342 * t2340 + t2349 * t2347);
unknown(4,1) = MDP(1) * (-g(3) * (t3014 * t3009 * t2960 + t2316 * (t2317 * t3018 - t3020) + t3025 * t2320) - g(3) * (t3082 * t3077 * t3041 + t2316 * (t2317 * t3086 - t3088) + t3093 * t2320) - g(3) * (t3150 * t3145 * t3109 + t2316 * (t2317 * t3154 - t3156) + t3161 * t2320) - g(3) * (t3218 * t3213 * t3177 + t2316 * (t2317 * t3222 - t3224) + t3229 * t2320) - g(3) * (t3286 * t3281 * t3245 + t2316 * (t2317 * t3290 - t3292) + t3297 * t2320) - g(3) * (t3354 * t3349 * t3313 + t2316 * (t2317 * t3358 - t3360) + t3365 * t2320)) + MDP(3) * (t3379 * t3378 + t3389 * t3388 + t3399 * t3398 + t3409 * t3408 + t3419 * t3418 + t3429 * t3428) + MDP(4) * (t3433 * t3378 + t3435 * t3388 + t3437 * t3398 + t3439 * t3408 + t3441 * t3418 + t3443 * t3428) + MDP(10) * t3489 + MDP(11) * t3515 + MDP(18) * (t2342 * t2317 + t2349 * t2332) + MDP(19) * (t2349 * t2314 - t2330 * t2317) + MDP(20) * (-t2342 * t2314 - t2330 * t2332);
unknown(5,1) = MDP(1) * (-g(3) * (-t3014 * t2960 * t3537 - koppelP(1,1) * t2314 + koppelP(1,2) * t2332 - t3542) - g(3) * (-t3082 * t3041 * t3552 - koppelP(2,1) * t2314 + koppelP(2,2) * t2332 - t3557) - g(3) * (-t3150 * t3109 * t3567 - koppelP(3,1) * t2314 + koppelP(3,2) * t2332 - t3572) - g(3) * (-t3218 * t3177 * t3582 - koppelP(4,1) * t2314 + koppelP(4,2) * t2332 - t3587) - g(3) * (-t3286 * t3245 * t3597 - koppelP(5,1) * t2314 + koppelP(5,2) * t2332 - t3602) - g(3) * (-t3354 * t3313 * t3612 - koppelP(6,1) * t2314 + koppelP(6,2) * t2332 - t3617)) + MDP(3) * (-t3379 * t3624 - t3389 * t3628 - t3399 * t3632 - t3409 * t3636 - t3419 * t3640 - t3429 * t3644) + MDP(4) * (-t3433 * t3624 - t3435 * t3628 - t3437 * t3632 - t3439 * t3636 - t3441 * t3640 - t3443 * t3644) + MDP(10) * t3686 + MDP(11) * t3700 + MDP(18) * (-t2349 * t2336 - t2342 * t2345) + MDP(19) * (t2349 * t2323 + t2330 * t2345) + MDP(20) * (-t2342 * t2323 + t2330 * t2336);
unknown(6,1) = MDP(1) * (-g(3) * (t3014 * t3726 * t3009 - t3014 * t3722 * t3537) - g(3) * (t3082 * t3743 * t3077 - t3082 * t3739 * t3552) - g(3) * (t3150 * t3760 * t3145 - t3150 * t3756 * t3567) - g(3) * (t3218 * t3777 * t3213 - t3218 * t3773 * t3582) - g(3) * (t3286 * t3794 * t3281 - t3286 * t3790 * t3597) - g(3) * (t3354 * t3811 * t3349 - t3354 * t3807 * t3612)) + MDP(3) * (t1049 * t3946 + t1125 * t4008 + t1201 * t4070 + t1277 * t4132 + t1353 * t4194 + t973 * t3884) + MDP(4) * (t1360 * t3884 + t1365 * t3946 + t1370 * t4008 + t1375 * t4070 + t1380 * t4132 + t1385 * t4194) + MDP(10) * t4446 + MDP(11) * t4460 + MDP(18) * (-t2349 * t2340 + t2342 * t2347) + MDP(19) * (t2349 * t2328 - t2330 * t2347) + MDP(20) * (-t2342 * t2328 + t2330 * t2340);
taugX  = unknown;
