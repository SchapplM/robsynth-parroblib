% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PRRRRR6V2G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x21]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 01:01
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin(xP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-13 00:39:31
% EndTime: 2020-03-13 00:39:34
% DurationCPUTime: 3.19s
% Computational Cost: add. (17960->1784), mult. (47779->3267), div. (240->36), fcn. (40632->50), ass. (0->1226)
unknown=NaN(6,21);
t1 = sin(pkin(10));
t2 = cos(pkin(4));
t3 = t2 * t1;
t4 = cos(qJ(2,1));
t6 = cos(pkin(10));
t7 = sin(qJ(2,1));
t9 = t4 * t3 + t7 * t6;
t10 = cos(legFrame(1,3));
t12 = sin(legFrame(1,3));
t14 = t2 * t6;
t16 = -t7 * t1 + t4 * t14;
t18 = t10 * t9 + t16 * t12;
t19 = t18 * pkin(3);
t20 = sin(pkin(6));
t21 = t20 * pkin(9);
t22 = cos(pkin(5));
t23 = t22 * t21;
t28 = -t7 * t3 + t4 * t6;
t32 = t4 * t1 + t7 * t14;
t34 = t10 * t28 - t32 * t12;
t35 = pkin(9) ^ 2;
t36 = cos(pkin(6));
t37 = t36 ^ 2;
t39 = pkin(3) ^ 2;
t40 = t37 * t35 - t35 + t39;
t43 = sin(pkin(5));
t45 = sin(pkin(4));
t46 = t45 * pkin(3);
t47 = t20 * t46;
t48 = t22 - 0.1e1;
t49 = t48 * pkin(9);
t50 = t22 + 0.1e1;
t53 = t10 * t1 + t12 * t6;
t59 = cos(qJ(3,1));
t60 = t59 ^ 2;
t63 = sin(qJ(3,1));
t66 = pkin(9) * t36 + pkin(8);
t72 = pkin(9) * t20 * t63;
t74 = 0.2e1 * t72 + pkin(2);
t79 = t40 * t45;
t81 = t63 * t53 * t79;
t82 = t66 * t19;
t84 = t22 ^ 2;
t86 = t45 * pkin(2);
t87 = t53 * pkin(9);
t88 = t20 * t87;
t92 = t53 * t45;
t93 = t66 * t63;
t98 = t63 * pkin(2);
t100 = pkin(9) * t37;
t101 = t20 * t98 + pkin(9) - t100;
t106 = t66 * t18;
t111 = t84 * t20;
t114 = pkin(2) * pkin(3);
t121 = pkin(9) * t20 * pkin(3);
t122 = t50 * t48;
t124 = t2 * t122 * t121;
t125 = t22 * t4;
t126 = t121 * t125;
t127 = t40 * t7;
t133 = 0.2e1 * t60 * (t124 - t45 * (t126 - t127 / 0.2e1) * t43);
t134 = t45 * t4;
t135 = t40 * t63;
t137 = pkin(3) * t2;
t138 = t66 * t137;
t141 = pkin(3) * t7;
t146 = t40 * t2;
t147 = t63 * t146;
t148 = pkin(3) * t4;
t149 = t66 * t45;
t150 = t149 * t148;
t153 = t2 * pkin(2);
t154 = t21 * t153;
t157 = t66 * t2;
t163 = t45 * t7;
t172 = t66 * t21;
t174 = pkin(3) * t153;
t177 = t20 * t2;
t178 = pkin(3) * pkin(9);
t179 = t178 * t177;
t181 = 0.1e1 / (t133 + t59 * (t43 * (t22 * (t135 * t134 + t138) + t74 * t45 * t141) + t84 * (-t147 + t150) + t147 - t154 - t150) + t43 * pkin(9) * (t22 * t20 * (t45 * t148 + t63 * t157) + t101 * t163) + t111 * (t93 * t134 - t137) * pkin(9) + t63 * (-t172 * t134 + t174) + t179);
t184 = cos(qJ(2,2));
t186 = sin(qJ(2,2));
t188 = t184 * t3 + t186 * t6;
t189 = cos(legFrame(2,3));
t191 = sin(legFrame(2,3));
t194 = -t186 * t1 + t184 * t14;
t196 = t189 * t188 + t194 * t191;
t197 = t196 * pkin(3);
t202 = t184 * t6 - t186 * t3;
t206 = t184 * t1 + t186 * t14;
t208 = t189 * t202 - t206 * t191;
t214 = t189 * t1 + t191 * t6;
t220 = cos(qJ(3,2));
t221 = t220 ^ 2;
t224 = sin(qJ(3,2));
t231 = pkin(9) * t20 * t224;
t233 = 0.2e1 * t231 + pkin(2);
t239 = t224 * t214 * t79;
t240 = t66 * t197;
t243 = t214 * pkin(9);
t244 = t20 * t243;
t248 = t214 * t45;
t249 = t66 * t224;
t254 = t224 * pkin(2);
t256 = t20 * t254 + pkin(9) - t100;
t261 = t66 * t196;
t273 = t22 * t184;
t274 = t121 * t273;
t275 = t40 * t186;
t281 = 0.2e1 * t221 * (t124 - t45 * (t274 - t275 / 0.2e1) * t43);
t282 = t45 * t184;
t283 = t40 * t224;
t287 = pkin(3) * t186;
t292 = t224 * t146;
t293 = pkin(3) * t184;
t294 = t149 * t293;
t304 = t45 * t186;
t317 = 0.1e1 / (t281 + t220 * (t43 * (t22 * (t283 * t282 + t138) + t233 * t45 * t287) + t84 * (-t292 + t294) + t292 - t154 - t294) + t43 * pkin(9) * (t22 * t20 * (t224 * t157 + t45 * t293) + t256 * t304) + t111 * (t249 * t282 - t137) * pkin(9) + t224 * (-t172 * t282 + t174) + t179);
t320 = cos(qJ(2,3));
t322 = sin(qJ(2,3));
t324 = t320 * t3 + t322 * t6;
t325 = cos(legFrame(3,3));
t327 = sin(legFrame(3,3));
t330 = -t322 * t1 + t320 * t14;
t332 = t325 * t324 + t330 * t327;
t333 = t332 * pkin(3);
t338 = -t322 * t3 + t320 * t6;
t342 = t320 * t1 + t322 * t14;
t344 = t325 * t338 - t342 * t327;
t350 = t325 * t1 + t327 * t6;
t356 = cos(qJ(3,3));
t357 = t356 ^ 2;
t360 = sin(qJ(3,3));
t367 = pkin(9) * t20 * t360;
t369 = 0.2e1 * t367 + pkin(2);
t375 = t360 * t350 * t79;
t376 = t66 * t333;
t379 = t350 * pkin(9);
t380 = t20 * t379;
t384 = t350 * t45;
t385 = t66 * t360;
t390 = t360 * pkin(2);
t392 = t20 * t390 + pkin(9) - t100;
t397 = t66 * t332;
t409 = t22 * t320;
t410 = t121 * t409;
t411 = t40 * t322;
t417 = 0.2e1 * t357 * (t124 - t45 * (t410 - t411 / 0.2e1) * t43);
t418 = t45 * t320;
t419 = t40 * t360;
t423 = pkin(3) * t322;
t428 = t360 * t146;
t429 = pkin(3) * t320;
t430 = t149 * t429;
t440 = t45 * t322;
t453 = 0.1e1 / (t417 + t356 * (t43 * (t22 * (t419 * t418 + t138) + t369 * t45 * t423) + t84 * (-t428 + t430) + t428 - t154 - t430) + t43 * pkin(9) * (t22 * t20 * (t360 * t157 + t45 * t429) + t392 * t440) + t111 * (t385 * t418 - t137) * pkin(9) + t360 * (-t172 * t418 + t174) + t179);
t456 = cos(qJ(2,4));
t458 = sin(qJ(2,4));
t460 = t456 * t3 + t458 * t6;
t461 = cos(legFrame(4,3));
t463 = sin(legFrame(4,3));
t466 = -t458 * t1 + t456 * t14;
t468 = t461 * t460 + t466 * t463;
t469 = t468 * pkin(3);
t474 = -t458 * t3 + t456 * t6;
t478 = t456 * t1 + t458 * t14;
t480 = t461 * t474 - t478 * t463;
t486 = t461 * t1 + t463 * t6;
t492 = cos(qJ(3,4));
t493 = t492 ^ 2;
t496 = sin(qJ(3,4));
t503 = pkin(9) * t20 * t496;
t505 = 0.2e1 * t503 + pkin(2);
t511 = t496 * t486 * t79;
t512 = t66 * t469;
t515 = t486 * pkin(9);
t516 = t20 * t515;
t520 = t486 * t45;
t521 = t66 * t496;
t526 = t496 * pkin(2);
t528 = t20 * t526 + pkin(9) - t100;
t533 = t66 * t468;
t545 = t22 * t456;
t546 = t121 * t545;
t547 = t40 * t458;
t553 = 0.2e1 * t493 * (t124 - t45 * (t546 - t547 / 0.2e1) * t43);
t554 = t45 * t456;
t555 = t40 * t496;
t559 = pkin(3) * t458;
t564 = t496 * t146;
t565 = pkin(3) * t456;
t566 = t149 * t565;
t576 = t45 * t458;
t589 = 0.1e1 / (t553 + t492 * (t43 * (t22 * (t555 * t554 + t138) + t505 * t45 * t559) + t84 * (-t564 + t566) + t564 - t154 - t566) + t43 * pkin(9) * (t22 * t20 * (t496 * t157 + t45 * t565) + t528 * t576) + t111 * (t521 * t554 - t137) * pkin(9) + t496 * (-t172 * t554 + t174) + t179);
t592 = cos(qJ(2,5));
t594 = sin(qJ(2,5));
t596 = t592 * t3 + t594 * t6;
t597 = cos(legFrame(5,3));
t599 = sin(legFrame(5,3));
t602 = -t594 * t1 + t592 * t14;
t604 = t597 * t596 + t602 * t599;
t605 = t604 * pkin(3);
t610 = -t594 * t3 + t592 * t6;
t614 = t592 * t1 + t594 * t14;
t616 = t597 * t610 - t614 * t599;
t622 = t597 * t1 + t599 * t6;
t628 = cos(qJ(3,5));
t629 = t628 ^ 2;
t632 = sin(qJ(3,5));
t639 = pkin(9) * t20 * t632;
t641 = 0.2e1 * t639 + pkin(2);
t647 = t632 * t622 * t79;
t648 = t66 * t605;
t651 = t622 * pkin(9);
t652 = t20 * t651;
t656 = t622 * t45;
t657 = t66 * t632;
t662 = t632 * pkin(2);
t664 = t20 * t662 + pkin(9) - t100;
t669 = t66 * t604;
t681 = t22 * t592;
t682 = t121 * t681;
t683 = t40 * t594;
t689 = 0.2e1 * t629 * (t124 - t45 * (t682 - t683 / 0.2e1) * t43);
t690 = t45 * t592;
t691 = t40 * t632;
t695 = pkin(3) * t594;
t700 = t632 * t146;
t701 = pkin(3) * t592;
t702 = t149 * t701;
t712 = t45 * t594;
t725 = 0.1e1 / (t689 + t628 * (t43 * (t22 * (t691 * t690 + t138) + t641 * t45 * t695) + t84 * (-t700 + t702) + t700 - t154 - t702) + t43 * pkin(9) * (t22 * t20 * (t632 * t157 + t45 * t701) + t664 * t712) + t111 * (t657 * t690 - t137) * pkin(9) + t632 * (-t172 * t690 + t174) + t179);
t728 = cos(qJ(2,6));
t730 = sin(qJ(2,6));
t732 = t728 * t3 + t730 * t6;
t733 = cos(legFrame(6,3));
t735 = sin(legFrame(6,3));
t738 = -t730 * t1 + t728 * t14;
t740 = t733 * t732 + t738 * t735;
t741 = t740 * pkin(3);
t746 = -t730 * t3 + t728 * t6;
t750 = t728 * t1 + t730 * t14;
t752 = t733 * t746 - t750 * t735;
t758 = t733 * t1 + t735 * t6;
t764 = cos(qJ(3,6));
t765 = t764 ^ 2;
t768 = sin(qJ(3,6));
t775 = pkin(9) * t20 * t768;
t777 = 0.2e1 * t775 + pkin(2);
t783 = t768 * t758 * t79;
t784 = t66 * t741;
t787 = t758 * pkin(9);
t788 = t20 * t787;
t792 = t758 * t45;
t793 = t66 * t768;
t798 = t768 * pkin(2);
t800 = t20 * t798 + pkin(9) - t100;
t805 = t66 * t740;
t817 = t22 * t728;
t818 = t121 * t817;
t819 = t40 * t730;
t825 = 0.2e1 * t765 * (t124 - t45 * (t818 - t819 / 0.2e1) * t43);
t826 = t45 * t728;
t827 = t40 * t768;
t831 = pkin(3) * t730;
t836 = t768 * t146;
t837 = pkin(3) * t728;
t838 = t149 * t837;
t848 = t45 * t730;
t861 = 0.1e1 / (t825 + t764 * (t43 * (t22 * (t827 * t826 + t138) + t777 * t45 * t831) + t84 * (-t836 + t838) + t836 - t154 - t838) + t43 * pkin(9) * (t22 * t20 * (t768 * t157 + t45 * t837) + t800 * t848) + t111 * (t793 * t826 - t137) * pkin(9) + t768 * (-t172 * t826 + t174) + t179);
t867 = -t12 * t1 + t10 * t6;
t868 = t867 * t4;
t870 = t53 * t7;
t871 = t2 * t868 - t870;
t874 = t43 * pkin(3);
t875 = t45 * t867;
t876 = t875 * t874;
t877 = t867 * t7;
t879 = t53 * t4;
t880 = t2 * t877 + t879;
t884 = t59 * (t22 * pkin(3) * t871 + t20 * pkin(9) * t880 - t876);
t886 = t22 * t20;
t888 = t20 * t43;
t889 = t867 * pkin(9);
t891 = t45 * t889 * t888;
t893 = t886 * pkin(9) * t871 - pkin(3) * t880 - t891;
t898 = 0.2e1 * t121 * t84 * t2;
t900 = t43 * t45;
t901 = t178 * t900;
t904 = t43 * t7;
t906 = 0.2e1 * t179;
t909 = t84 * t146;
t911 = t22 * t40 * t43;
t914 = pkin(9) * t888;
t919 = t84 * t149;
t921 = t66 * t43;
t923 = t22 * t921 * t137;
t925 = t43 * t7 * pkin(2);
t926 = t4 * t66;
t927 = t925 - t926;
t933 = t66 * pkin(9);
t934 = t84 * t933;
t936 = t43 * t2;
t938 = t22 * t933;
t939 = t938 * t20 * t936;
t941 = t45 * t20;
t945 = t84 * pkin(3);
t946 = t945 * t177;
t947 = t22 * t148;
t948 = t20 * t900;
t951 = t36 - 0.1e1;
t952 = t36 + 0.1e1;
t954 = t45 * t952 * t951;
t956 = pkin(3) * t177;
t960 = 0.1e1 / (t60 * (-0.2e1 * t901 * t20 * t125 + t79 * t904 + t898 - t906) + t59 * (t63 * (0.2e1 * t914 * t45 * t141 + t911 * t134 + t146 - t909) + t919 * t148 + t923 + t45 * t927 * pkin(3) - t154) + t63 * (t941 * pkin(9) * t927 + t934 * t20 * t134 + t174 + t939) + pkin(9) * (-t954 * pkin(9) * t904 + t948 * t947 - t946 + t956));
t961 = t960 * (t63 * t893 + t884);
t964 = g(1) * t10 + g(2) * t12;
t968 = g(1) * t12 - g(2) * t10;
t970 = t45 * g(3);
t972 = t16 * t968 - t4 * t970 + t9 * t964;
t976 = -t191 * t1 + t189 * t6;
t977 = t976 * t184;
t979 = t214 * t186;
t980 = t2 * t977 - t979;
t983 = t45 * t976;
t984 = t983 * t874;
t985 = t976 * t186;
t987 = t214 * t184;
t988 = t2 * t985 + t987;
t992 = t220 * (t22 * pkin(3) * t980 + t20 * pkin(9) * t988 - t984);
t995 = t976 * pkin(9);
t997 = t45 * t995 * t888;
t999 = t886 * pkin(9) * t980 - pkin(3) * t988 - t997;
t1005 = t43 * t186;
t1017 = t43 * t186 * pkin(2);
t1018 = t66 * t184;
t1019 = t1017 - t1018;
t1030 = t22 * t293;
t1037 = 0.1e1 / (t221 * (-0.2e1 * t901 * t20 * t273 + t79 * t1005 + t898 - t906) + t220 * (t224 * (0.2e1 * t914 * t45 * t287 + t911 * t282 + t146 - t909) + t919 * t293 + t923 + t45 * t1019 * pkin(3) - t154) + t224 * (t941 * pkin(9) * t1019 + t934 * t20 * t282 + t174 + t939) + pkin(9) * (-t954 * pkin(9) * t1005 + t948 * t1030 - t946 + t956));
t1038 = t1037 * (t224 * t999 + t992);
t1041 = g(1) * t189 + g(2) * t191;
t1045 = g(1) * t191 - g(2) * t189;
t1048 = t188 * t1041 + t194 * t1045 - t184 * t970;
t1052 = -t327 * t1 + t325 * t6;
t1053 = t1052 * t320;
t1055 = t350 * t322;
t1056 = t2 * t1053 - t1055;
t1059 = t45 * t1052;
t1060 = t1059 * t874;
t1061 = t1052 * t322;
t1063 = t350 * t320;
t1064 = t2 * t1061 + t1063;
t1068 = t356 * (t22 * pkin(3) * t1056 + t20 * pkin(9) * t1064 - t1060);
t1071 = t1052 * pkin(9);
t1073 = t45 * t1071 * t888;
t1075 = t886 * pkin(9) * t1056 - pkin(3) * t1064 - t1073;
t1081 = t43 * t322;
t1093 = t43 * t322 * pkin(2);
t1094 = t66 * t320;
t1095 = t1093 - t1094;
t1106 = t22 * t429;
t1113 = 0.1e1 / (t357 * (-0.2e1 * t901 * t20 * t409 + t79 * t1081 + t898 - t906) + t356 * (t360 * (0.2e1 * t914 * t45 * t423 + t911 * t418 + t146 - t909) + t919 * t429 + t923 + t45 * t1095 * pkin(3) - t154) + t360 * (t941 * pkin(9) * t1095 + t934 * t20 * t418 + t174 + t939) + pkin(9) * (-t954 * pkin(9) * t1081 + t948 * t1106 - t946 + t956));
t1114 = t1113 * (t360 * t1075 + t1068);
t1117 = g(1) * t325 + g(2) * t327;
t1121 = g(1) * t327 - g(2) * t325;
t1124 = t324 * t1117 + t330 * t1121 - t320 * t970;
t1128 = -t463 * t1 + t461 * t6;
t1129 = t1128 * t456;
t1131 = t486 * t458;
t1132 = t2 * t1129 - t1131;
t1135 = t45 * t1128;
t1136 = t1135 * t874;
t1137 = t1128 * t458;
t1139 = t486 * t456;
t1140 = t2 * t1137 + t1139;
t1144 = t492 * (t22 * pkin(3) * t1132 + t20 * pkin(9) * t1140 - t1136);
t1147 = t1128 * pkin(9);
t1149 = t45 * t1147 * t888;
t1151 = t886 * pkin(9) * t1132 - pkin(3) * t1140 - t1149;
t1157 = t43 * t458;
t1169 = t43 * t458 * pkin(2);
t1170 = t66 * t456;
t1171 = t1169 - t1170;
t1182 = t22 * t565;
t1189 = 0.1e1 / (t493 * (-0.2e1 * t901 * t20 * t545 + t79 * t1157 + t898 - t906) + t492 * (t496 * (0.2e1 * t914 * t45 * t559 + t911 * t554 + t146 - t909) + t919 * t565 + t923 + t45 * t1171 * pkin(3) - t154) + t496 * (t941 * pkin(9) * t1171 + t934 * t20 * t554 + t174 + t939) + pkin(9) * (-t954 * pkin(9) * t1157 + t948 * t1182 - t946 + t956));
t1190 = t1189 * (t496 * t1151 + t1144);
t1193 = g(1) * t461 + g(2) * t463;
t1197 = g(1) * t463 - g(2) * t461;
t1200 = t460 * t1193 + t466 * t1197 - t456 * t970;
t1204 = -t599 * t1 + t597 * t6;
t1205 = t1204 * t592;
t1207 = t622 * t594;
t1208 = t2 * t1205 - t1207;
t1211 = t45 * t1204;
t1212 = t1211 * t874;
t1213 = t1204 * t594;
t1215 = t622 * t592;
t1216 = t2 * t1213 + t1215;
t1220 = t628 * (t22 * pkin(3) * t1208 + t20 * pkin(9) * t1216 - t1212);
t1223 = t1204 * pkin(9);
t1225 = t45 * t1223 * t888;
t1227 = t886 * pkin(9) * t1208 - pkin(3) * t1216 - t1225;
t1233 = t43 * t594;
t1245 = t43 * t594 * pkin(2);
t1246 = t66 * t592;
t1247 = t1245 - t1246;
t1258 = t22 * t701;
t1265 = 0.1e1 / (t629 * (-0.2e1 * t901 * t20 * t681 + t79 * t1233 + t898 - t906) + t628 * (t632 * (0.2e1 * t914 * t45 * t695 + t911 * t690 + t146 - t909) + t919 * t701 + t923 + t45 * t1247 * pkin(3) - t154) + t632 * (t941 * pkin(9) * t1247 + t934 * t20 * t690 + t174 + t939) + pkin(9) * (-t954 * pkin(9) * t1233 + t948 * t1258 - t946 + t956));
t1266 = t1265 * (t632 * t1227 + t1220);
t1269 = g(1) * t597 + g(2) * t599;
t1273 = g(1) * t599 - g(2) * t597;
t1276 = t596 * t1269 + t602 * t1273 - t592 * t970;
t1280 = -t735 * t1 + t733 * t6;
t1281 = t1280 * t728;
t1283 = t758 * t730;
t1284 = t2 * t1281 - t1283;
t1287 = t45 * t1280;
t1288 = t1287 * t874;
t1289 = t1280 * t730;
t1291 = t758 * t728;
t1292 = t2 * t1289 + t1291;
t1296 = t764 * (t22 * pkin(3) * t1284 + t20 * pkin(9) * t1292 - t1288);
t1299 = t1280 * pkin(9);
t1301 = t45 * t1299 * t888;
t1303 = t886 * pkin(9) * t1284 - pkin(3) * t1292 - t1301;
t1309 = t43 * t730;
t1321 = t43 * t730 * pkin(2);
t1322 = t66 * t728;
t1323 = t1321 - t1322;
t1334 = t22 * t837;
t1341 = 0.1e1 / (t765 * (-0.2e1 * t901 * t20 * t817 + t79 * t1309 + t898 - t906) + t764 * (t768 * (0.2e1 * t914 * t45 * t831 + t911 * t826 + t146 - t909) + t919 * t837 + t923 + t45 * t1323 * pkin(3) - t154) + t768 * (t941 * pkin(9) * t1323 + t934 * t20 * t826 + t174 + t939) + pkin(9) * (-t954 * pkin(9) * t1309 + t948 * t1334 - t946 + t956));
t1342 = t1341 * (t768 * t1303 + t1296);
t1345 = g(1) * t733 + g(2) * t735;
t1349 = g(1) * t735 - g(2) * t733;
t1352 = t732 * t1345 + t738 * t1349 - t728 * t970;
t1358 = t28 * t964 - t32 * t968 + t7 * t970;
t1363 = t202 * t1041 - t206 * t1045 + t186 * t970;
t1368 = t338 * t1117 - t342 * t1121 + t322 * t970;
t1373 = t474 * t1193 - t478 * t1197 + t458 * t970;
t1378 = t610 * t1269 - t614 * t1273 + t594 * t970;
t1383 = t746 * t1345 - t750 * t1349 + t730 * t970;
t1386 = t63 * t2;
t1387 = t1 * t22;
t1389 = t6 * t59;
t1392 = t59 * t2;
t1394 = t22 * t63;
t1400 = t6 * t22;
t1402 = t1 * t59;
t1411 = t22 * t7;
t1414 = -t63 * t1411 + t59 * t4;
t1416 = (t7 * (-t1387 * t1386 + t1389) + (t1 * t1392 + t6 * t1394) * t4) * t964 + t968 * (t7 * (-t1400 * t1386 - t1402) + (-t1 * t1394 + t6 * t1392) * t4) - t1414 * t970;
t1419 = t21 * t1411 + t148;
t1420 = t1419 * t867;
t1423 = t21 * t125 - t141;
t1425 = -t2 * t1420 - t1423 * t53;
t1427 = t72 + pkin(2);
t1429 = pkin(3) * t1394;
t1430 = t1429 - t921;
t1432 = t4 * t1427 - t7 * t1430;
t1434 = t2 * t1432 * t867;
t1437 = t1427 * t7 + t4 * t1430;
t1438 = t1437 * t53;
t1440 = t84 * t135;
t1442 = t22 * t66 * t874;
t1444 = pkin(9) * t20 * pkin(2);
t1445 = -t1440 + t1442 + t135 - t1444;
t1447 = t66 * pkin(3);
t1448 = t84 * t1447;
t1449 = t43 * t63;
t1450 = t22 * t40;
t1451 = t1450 * t1449;
t1452 = t1448 + t1451 - t1447;
t1460 = t21 * t945;
t1461 = t20 * t1449;
t1462 = t938 * t1461;
t1464 = (t98 + t21) * pkin(3);
t1466 = t2 * (-t1460 + t1462 + t1464);
t1468 = t22 * t874;
t1470 = t20 * (t84 * t93 + t1468 - t93);
t1477 = 0.1e1 / (t133 + t59 * (t2 * t1445 + t45 * (t74 * t43 * t141 + t4 * t1452)) + t1466 + pkin(9) * t45 * (t101 * t904 + t4 * t1470));
t1478 = t1477 * (t59 * t1425 - t1434 + t1438);
t1479 = t22 * t2;
t1481 = t4 * t1479 - t900;
t1483 = t2 * t7;
t1485 = t59 * t1481 - t63 * t1483;
t1489 = t63 * t4;
t1490 = t22 * t59 * t7 + t1489;
t1499 = t45 * t125 + t936;
t1504 = (t1 * t1485 + t1490 * t6) * t964 + t968 * (-t1490 * t1 + t6 * t1485) - (t59 * t1499 - t63 * t163) * g(3);
t1506 = t2 * t224;
t1511 = t2 * t220;
t1513 = t22 * t224;
t1529 = t22 * t186;
t1532 = -t224 * t1529 + t184 * t220;
t1534 = (t186 * (-t1387 * t1506 + t6 * t220) + (t1 * t1511 + t6 * t1513) * t184) * t1041 + (t186 * (-t1 * t220 - t1400 * t1506) + (-t1 * t1513 + t6 * t1511) * t184) * t1045 - t1532 * t970;
t1537 = t21 * t1529 + t293;
t1538 = t1537 * t976;
t1541 = t21 * t273 - t287;
t1543 = -t2 * t1538 - t1541 * t214;
t1545 = t231 + pkin(2);
t1547 = pkin(3) * t1513;
t1548 = t1547 - t921;
t1550 = t184 * t1545 - t186 * t1548;
t1552 = t2 * t1550 * t976;
t1555 = t1545 * t186 + t184 * t1548;
t1556 = t1555 * t214;
t1558 = t84 * t283;
t1559 = -t1558 + t1442 + t283 - t1444;
t1561 = t43 * t224;
t1562 = t1450 * t1561;
t1563 = t1448 + t1562 - t1447;
t1571 = t20 * t1561;
t1572 = t938 * t1571;
t1574 = (t254 + t21) * pkin(3);
t1576 = t2 * (-t1460 + t1572 + t1574);
t1579 = t20 * (t84 * t249 + t1468 - t249);
t1586 = 0.1e1 / (t281 + t220 * (t2 * t1559 + t45 * (t233 * t43 * t287 + t184 * t1563)) + t1576 + pkin(9) * t45 * (t256 * t1005 + t184 * t1579));
t1587 = t1586 * (t220 * t1543 - t1552 + t1556);
t1589 = t184 * t1479 - t900;
t1591 = t2 * t186;
t1593 = t220 * t1589 - t224 * t1591;
t1597 = t184 * t224;
t1598 = t22 * t220 * t186 + t1597;
t1607 = t45 * t273 + t936;
t1612 = t1041 * (t1 * t1593 + t1598 * t6) + (-t1598 * t1 + t6 * t1593) * t1045 - (t220 * t1607 - t224 * t304) * g(3);
t1614 = t22 * t360;
t1619 = t2 * t356;
t1636 = t22 * t322;
t1639 = -t360 * t1636 + t356 * t320;
t1641 = t1117 * (t322 * (-t3 * t1614 + t6 * t356) + (t1 * t1619 + t6 * t1614) * t320) + t1121 * (t322 * (-t1 * t356 - t14 * t1614) + (-t1 * t1614 + t6 * t1619) * t320) - t1639 * t970;
t1644 = t21 * t1636 + t429;
t1645 = t1644 * t1052;
t1648 = t21 * t409 - t423;
t1650 = -t2 * t1645 - t1648 * t350;
t1652 = t367 + pkin(2);
t1654 = pkin(3) * t1614;
t1655 = t1654 - t921;
t1657 = t320 * t1652 - t322 * t1655;
t1659 = t2 * t1657 * t1052;
t1662 = t1652 * t322 + t320 * t1655;
t1663 = t1662 * t350;
t1665 = t84 * t419;
t1666 = -t1665 + t1442 + t419 - t1444;
t1668 = t43 * t360;
t1669 = t1450 * t1668;
t1670 = t1448 + t1669 - t1447;
t1678 = t20 * t1668;
t1679 = t938 * t1678;
t1681 = (t390 + t21) * pkin(3);
t1683 = t2 * (-t1460 + t1679 + t1681);
t1685 = t84 * t385 + t1468 - t385;
t1693 = 0.1e1 / (t417 + t356 * (t2 * t1666 + t45 * (t369 * t43 * t423 + t320 * t1670)) + t1683 + pkin(9) * t45 * (t320 * t20 * t1685 + t392 * t1081));
t1694 = t1693 * (t356 * t1650 - t1659 + t1663);
t1696 = t320 * t1479 - t900;
t1698 = t2 * t322;
t1700 = t356 * t1696 - t360 * t1698;
t1704 = t360 * t320;
t1705 = t22 * t356 * t322 + t1704;
t1714 = t45 * t409 + t936;
t1719 = (t1 * t1700 + t1705 * t6) * t1117 + (-t1705 * t1 + t6 * t1700) * t1121 - (t356 * t1714 - t360 * t440) * g(3);
t1721 = t22 * t496;
t1726 = t2 * t492;
t1743 = t22 * t458;
t1746 = -t496 * t1743 + t492 * t456;
t1748 = t1193 * (t458 * (-t3 * t1721 + t6 * t492) + (t1 * t1726 + t6 * t1721) * t456) + (t458 * (-t1 * t492 - t14 * t1721) + (-t1 * t1721 + t6 * t1726) * t456) * t1197 - t1746 * t970;
t1751 = t21 * t1743 + t565;
t1752 = t1751 * t1128;
t1755 = t21 * t545 - t559;
t1757 = -t2 * t1752 - t1755 * t486;
t1759 = t503 + pkin(2);
t1761 = pkin(3) * t1721;
t1762 = t1761 - t921;
t1764 = t456 * t1759 - t458 * t1762;
t1766 = t2 * t1764 * t1128;
t1769 = t1759 * t458 + t456 * t1762;
t1770 = t1769 * t486;
t1772 = t84 * t555;
t1773 = -t1772 + t1442 + t555 - t1444;
t1775 = t43 * t496;
t1776 = t1450 * t1775;
t1777 = t1448 + t1776 - t1447;
t1785 = t20 * t1775;
t1786 = t938 * t1785;
t1788 = (t526 + t21) * pkin(3);
t1790 = t2 * (-t1460 + t1786 + t1788);
t1793 = t20 * (t84 * t521 + t1468 - t521);
t1800 = 0.1e1 / (t553 + t492 * (t2 * t1773 + t45 * (t505 * t43 * t559 + t456 * t1777)) + t1790 + pkin(9) * t45 * (t528 * t1157 + t456 * t1793));
t1801 = t1800 * (t492 * t1757 - t1766 + t1770);
t1803 = t456 * t1479 - t900;
t1805 = t2 * t458;
t1807 = t492 * t1803 - t496 * t1805;
t1811 = t496 * t456;
t1812 = t22 * t492 * t458 + t1811;
t1821 = t45 * t545 + t936;
t1826 = t1193 * (t1 * t1807 + t1812 * t6) + t1197 * (-t1812 * t1 + t6 * t1807) - g(3) * (t492 * t1821 - t496 * t576);
t1828 = t2 * t632;
t1833 = t2 * t628;
t1835 = t22 * t632;
t1851 = t22 * t594;
t1854 = -t632 * t1851 + t628 * t592;
t1856 = t1269 * (t594 * (-t1387 * t1828 + t6 * t628) + (t1 * t1833 + t6 * t1835) * t592) + t1273 * (t594 * (-t1 * t628 - t1400 * t1828) + (-t1 * t1835 + t6 * t1833) * t592) - t1854 * t970;
t1859 = t21 * t1851 + t701;
t1860 = t1859 * t1204;
t1863 = t21 * t681 - t695;
t1865 = -t2 * t1860 - t1863 * t622;
t1867 = t639 + pkin(2);
t1869 = pkin(3) * t1835;
t1870 = t1869 - t921;
t1872 = t592 * t1867 - t594 * t1870;
t1874 = t2 * t1872 * t1204;
t1877 = t1867 * t594 + t592 * t1870;
t1878 = t1877 * t622;
t1880 = t84 * t691;
t1881 = -t1880 + t1442 + t691 - t1444;
t1883 = t43 * t632;
t1884 = t1450 * t1883;
t1885 = t1448 + t1884 - t1447;
t1893 = t20 * t1883;
t1894 = t938 * t1893;
t1896 = (t662 + t21) * pkin(3);
t1898 = t2 * (-t1460 + t1894 + t1896);
t1900 = t84 * t657 + t1468 - t657;
t1908 = 0.1e1 / (t689 + t628 * (t2 * t1881 + t45 * (t641 * t43 * t695 + t592 * t1885)) + t1898 + pkin(9) * t45 * (t592 * t20 * t1900 + t664 * t1233));
t1909 = t1908 * (t628 * t1865 - t1874 + t1878);
t1911 = t592 * t1479 - t900;
t1913 = t2 * t594;
t1915 = t628 * t1911 - t632 * t1913;
t1919 = t632 * t592;
t1920 = t22 * t628 * t594 + t1919;
t1929 = t45 * t681 + t936;
t1934 = t1269 * (t1 * t1915 + t1920 * t6) + (-t1920 * t1 + t6 * t1915) * t1273 - (t628 * t1929 - t632 * t712) * g(3);
t1936 = t22 * t768;
t1941 = t2 * t764;
t1958 = t22 * t730;
t1961 = -t768 * t1958 + t764 * t728;
t1963 = t1345 * (t730 * (-t3 * t1936 + t6 * t764) + (t1 * t1941 + t6 * t1936) * t728) + t1349 * (t730 * (-t1 * t764 - t14 * t1936) + (-t1 * t1936 + t6 * t1941) * t728) - t1961 * t970;
t1966 = t21 * t1958 + t837;
t1967 = t1966 * t1280;
t1970 = t21 * t817 - t831;
t1972 = -t2 * t1967 - t1970 * t758;
t1974 = t775 + pkin(2);
t1976 = pkin(3) * t1936;
t1977 = t1976 - t921;
t1979 = t728 * t1974 - t730 * t1977;
t1981 = t2 * t1979 * t1280;
t1984 = t1974 * t730 + t728 * t1977;
t1985 = t1984 * t758;
t1987 = t84 * t827;
t1988 = -t1987 + t1442 + t827 - t1444;
t1990 = t43 * t768;
t1991 = t1450 * t1990;
t1992 = t1448 + t1991 - t1447;
t2000 = t20 * t1990;
t2001 = t938 * t2000;
t2003 = (t798 + t21) * pkin(3);
t2005 = t2 * (-t1460 + t2001 + t2003);
t2008 = t20 * (t84 * t793 + t1468 - t793);
t2015 = 0.1e1 / (t825 + t764 * (t2 * t1988 + t45 * (t777 * t43 * t831 + t728 * t1992)) + t2005 + pkin(9) * t45 * (t800 * t1309 + t728 * t2008));
t2016 = t2015 * (t764 * t1972 - t1981 + t1985);
t2018 = t728 * t1479 - t900;
t2020 = t2 * t730;
t2022 = t764 * t2018 - t768 * t2020;
t2026 = t768 * t728;
t2027 = t22 * t764 * t730 + t2026;
t2036 = t45 * t817 + t936;
t2041 = (t1 * t2022 + t2027 * t6) * t1345 + (-t2027 * t1 + t6 * t2022) * t1349 - (t764 * t2036 - t768 * t848) * g(3);
t2043 = t1534 * t1038 + t1641 * t1114 + t1748 * t1190 + t1856 * t1266 + t1963 * t1342 + t1416 * t961 + t1504 * t1478 + t1612 * t1587 + t1719 * t1694 + t1826 * t1801 + t1934 * t1909 + t2041 * t2016;
t2048 = t22 * t59;
t2066 = t964 * (t7 * (-t1402 * t1479 - t6 * t63) + (-t1 * t1386 + t6 * t2048) * t4) - t968 * (t7 * (-t1 * t63 + t1389 * t1479) + (t1 * t2048 + t6 * t1386) * t4) + t1490 * t970;
t2078 = t45 * t6;
t2086 = t964 * (t1 * (-t1481 * t63 - t59 * t1483) + t1414 * t6) + (-t63 * t22 * t16 + t1449 * t2078 - t59 * t32) * t968 + (t63 * t1499 + t59 * t163) * g(3);
t2088 = t22 * t220;
t2110 = (t186 * (-t3 * t2088 - t6 * t224) + (-t1 * t1506 + t6 * t2088) * t184) * t1041 - (t186 * (-t224 * t1 + t14 * t2088) + (t1 * t2088 + t6 * t1506) * t184) * t1045 + t1598 * t970;
t2129 = t1041 * (t1 * (-t1589 * t224 - t220 * t1591) + t1532 * t6) + (-t224 * t22 * t194 + t1561 * t2078 - t220 * t206) * t1045 + (t224 * t1607 + t220 * t304) * g(3);
t2131 = t22 * t356;
t2137 = t2 * t360;
t2154 = t1117 * (t322 * (-t3 * t2131 - t6 * t360) + (-t1 * t2137 + t6 * t2131) * t320) - t1121 * (t322 * (-t1 * t360 + t14 * t2131) + (t1 * t2131 + t6 * t2137) * t320) + t1705 * t970;
t2173 = (t1 * (-t1696 * t360 - t356 * t1698) + t1639 * t6) * t1117 + (-t360 * t22 * t330 + t1668 * t2078 - t356 * t342) * t1121 + (t360 * t1714 + t356 * t440) * g(3);
t2175 = t22 * t492;
t2181 = t2 * t496;
t2198 = t1193 * (t458 * (-t3 * t2175 - t6 * t496) + (-t1 * t2181 + t6 * t2175) * t456) - (t458 * (-t1 * t496 + t14 * t2175) + (t1 * t2175 + t6 * t2181) * t456) * t1197 + t1812 * t970;
t2217 = t1193 * (t1 * (-t1803 * t496 - t492 * t1805) + t1746 * t6) + (-t496 * t22 * t466 + t1775 * t2078 - t492 * t478) * t1197 + (t496 * t1821 + t492 * t576) * g(3);
t2223 = t22 * t628;
t2241 = (t594 * (-t1387 * t1833 - t6 * t632) + (-t1 * t1828 + t6 * t2223) * t592) * t1269 - (t594 * (-t632 * t1 + t1400 * t1833) + (t1 * t2223 + t6 * t1828) * t592) * t1273 + t1920 * t970;
t2260 = (t1 * (-t1911 * t632 - t628 * t1913) + t1854 * t6) * t1269 + (-t632 * t22 * t602 + t1883 * t2078 - t628 * t614) * t1273 + (t632 * t1929 + t628 * t712) * g(3);
t2262 = t22 * t764;
t2268 = t2 * t768;
t2285 = t1345 * (t730 * (-t3 * t2262 - t6 * t768) + (-t1 * t2268 + t6 * t2262) * t728) - t1349 * (t730 * (-t1 * t768 + t14 * t2262) + (t1 * t2262 + t6 * t2268) * t728) + t2027 * t970;
t2304 = (t1 * (-t2018 * t768 - t764 * t2020) + t1961 * t6) * t1345 + (-t768 * t22 * t738 + t1990 * t2078 - t764 * t750) * t1349 + (t768 * t2036 + t764 * t848) * g(3);
t2306 = t2110 * t1038 + t2154 * t1114 + t2198 * t1190 + t2241 * t1266 + t2285 * t1342 + t2086 * t1478 + t2129 * t1587 + t2173 * t1694 + t2217 * t1801 + t2260 * t1909 + t2304 * t2016 + t2066 * t961;
t2307 = cos(xP(5));
t2308 = cos(xP(6));
t2309 = t2308 * t2307;
t2311 = sin(xP(4));
t2312 = sin(xP(5));
t2313 = t2312 * t2311;
t2315 = cos(xP(4));
t2316 = sin(xP(6));
t2318 = t2308 * t2313 + t2316 * t2315;
t2320 = t2312 * t2315;
t2323 = -t2308 * t2320 + t2316 * t2311;
t2325 = -g(1) * t2309 - g(2) * t2318 - g(3) * t2323;
t2327 = t2316 * t2307;
t2331 = t2308 * t2315 - t2316 * t2313;
t2335 = t2308 * t2311 + t2316 * t2320;
t2337 = g(1) * t2327 - g(2) * t2331 - g(3) * t2335;
t2340 = t2311 * t2307;
t2342 = t2315 * t2307;
t2344 = -g(1) * t2312 + g(2) * t2340 - g(3) * t2342;
t2349 = t10 * t16 - t9 * t12;
t2350 = pkin(3) * t2349;
t2355 = t10 * t32 + t28 * t12;
t2376 = t63 * t867 * t79;
t2377 = t66 * t2350;
t2380 = t20 * t889;
t2392 = t66 * t2349;
t2408 = -t188 * t191 + t189 * t194;
t2409 = pkin(3) * t2408;
t2414 = t189 * t206 + t202 * t191;
t2435 = t224 * t976 * t79;
t2436 = t66 * t2409;
t2439 = t20 * t995;
t2451 = t66 * t2408;
t2467 = -t324 * t327 + t325 * t330;
t2468 = pkin(3) * t2467;
t2473 = t325 * t342 + t338 * t327;
t2494 = t360 * t1052 * t79;
t2495 = t66 * t2468;
t2498 = t20 * t1071;
t2510 = t66 * t2467;
t2526 = -t460 * t463 + t461 * t466;
t2527 = pkin(3) * t2526;
t2532 = t461 * t478 + t474 * t463;
t2553 = t496 * t1128 * t79;
t2554 = t66 * t2527;
t2557 = t20 * t1147;
t2569 = t66 * t2526;
t2585 = -t596 * t599 + t597 * t602;
t2586 = pkin(3) * t2585;
t2591 = t597 * t614 + t610 * t599;
t2612 = t632 * t1204 * t79;
t2613 = t66 * t2586;
t2616 = t20 * t1223;
t2628 = t66 * t2585;
t2644 = -t732 * t735 + t733 * t738;
t2645 = pkin(3) * t2644;
t2650 = t733 * t750 + t746 * t735;
t2671 = t768 * t1280 * t79;
t2672 = t66 * t2645;
t2675 = t20 * t1299;
t2687 = t66 * t2644;
t2703 = t2 * t879 + t877;
t2706 = t92 * t874;
t2708 = -t2 * t870 + t868;
t2716 = t45 * t87 * t888;
t2720 = t59 * (t22 * t2703 * pkin(3) - t20 * pkin(9) * t2708 - t2706) + (t886 * pkin(9) * t2703 + pkin(3) * t2708 - t2716) * t63;
t2721 = t960 * t2720;
t2724 = t2 * t987 + t985;
t2727 = t248 * t874;
t2729 = -t2 * t979 + t977;
t2737 = t45 * t243 * t888;
t2741 = t220 * (t22 * t2724 * pkin(3) - t20 * pkin(9) * t2729 - t2727) + (t886 * pkin(9) * t2724 + pkin(3) * t2729 - t2737) * t224;
t2742 = t1037 * t2741;
t2745 = t2 * t1063 + t1061;
t2748 = t384 * t874;
t2750 = -t2 * t1055 + t1053;
t2758 = t45 * t379 * t888;
t2762 = t356 * (t22 * t2745 * pkin(3) - t20 * pkin(9) * t2750 - t2748) + (t886 * pkin(9) * t2745 + pkin(3) * t2750 - t2758) * t360;
t2763 = t1113 * t2762;
t2766 = t2 * t1139 + t1137;
t2769 = t520 * t874;
t2771 = -t2 * t1131 + t1129;
t2779 = t45 * t515 * t888;
t2783 = t492 * (t22 * t2766 * pkin(3) - t20 * pkin(9) * t2771 - t2769) + (t886 * pkin(9) * t2766 + pkin(3) * t2771 - t2779) * t496;
t2784 = t1189 * t2783;
t2787 = t2 * t1215 + t1213;
t2790 = t656 * t874;
t2792 = -t2 * t1207 + t1205;
t2800 = t45 * t651 * t888;
t2804 = t628 * (t22 * t2787 * pkin(3) - t20 * pkin(9) * t2792 - t2790) + (t886 * pkin(9) * t2787 + pkin(3) * t2792 - t2800) * t632;
t2805 = t1265 * t2804;
t2808 = t2 * t1291 + t1289;
t2811 = t792 * t874;
t2813 = -t2 * t1283 + t1281;
t2821 = t45 * t787 * t888;
t2825 = t764 * (t22 * t2808 * pkin(3) - t20 * pkin(9) * t2813 - t2811) + (t886 * pkin(9) * t2808 + pkin(3) * t2813 - t2821) * t768;
t2826 = t1341 * t2825;
t2837 = t1419 * t53;
t2840 = t1423 * t867 - t2 * t2837;
t2843 = t2 * t53 * t1432;
t2844 = t1437 * t867;
t2846 = t1477 * (t59 * t2840 - t2843 - t2844);
t2849 = t1537 * t214;
t2852 = t1541 * t976 - t2 * t2849;
t2855 = t2 * t214 * t1550;
t2856 = t1555 * t976;
t2858 = t1586 * (t220 * t2852 - t2855 - t2856);
t2861 = t1644 * t350;
t2864 = t1648 * t1052 - t2 * t2861;
t2867 = t2 * t350 * t1657;
t2868 = t1662 * t1052;
t2870 = t1693 * (t356 * t2864 - t2867 - t2868);
t2873 = t1751 * t486;
t2876 = t1755 * t1128 - t2 * t2873;
t2879 = t2 * t486 * t1764;
t2880 = t1769 * t1128;
t2882 = t1800 * (t492 * t2876 - t2879 - t2880);
t2885 = t1859 * t622;
t2888 = t1863 * t1204 - t2 * t2885;
t2891 = t2 * t622 * t1872;
t2892 = t1877 * t1204;
t2894 = t1908 * (t628 * t2888 - t2891 - t2892);
t2897 = t1966 * t758;
t2900 = t1970 * t1280 - t2 * t2897;
t2903 = t2 * t758 * t1979;
t2904 = t1984 * t1280;
t2906 = t2015 * (t764 * t2900 - t2903 - t2904);
t2908 = t1416 * t2721 + t1504 * t2846 + t1534 * t2742 + t1612 * t2858 + t1641 * t2763 + t1719 * t2870 + t1748 * t2784 + t1826 * t2882 + t1856 * t2805 + t1934 * t2894 + t1963 * t2826 + t2041 * t2906;
t2921 = t2066 * t2721 + t2086 * t2846 + t2110 * t2742 + t2129 * t2858 + t2154 * t2763 + t2173 * t2870 + t2198 * t2784 + t2217 * t2882 + t2241 * t2805 + t2260 * t2894 + t2285 * t2826 + t2304 * t2906;
t2931 = t2315 * koppelP(1,1);
t2936 = t2315 * koppelP(1,2);
t2938 = t2311 * koppelP(1,1);
t2943 = t2308 * (-t2311 * koppelP(1,2) + t2312 * t2931) + t2316 * (-t2312 * t2936 - t2938) - t2307 * t2315 * koppelP(1,3);
t2944 = t22 * t178;
t2947 = 0.2e1 * t60 * t888 * t2944;
t2950 = t66 * t50 * t48 * pkin(3);
t2957 = -t2947 + t59 * (t1451 + t2950) + t20 * pkin(9) * (t93 * t122 + t1468);
t2963 = t59 * t74 * pkin(3) + t101 * pkin(9) + t60 * t40;
t2964 = t2963 * t43;
t2965 = t7 * t2964;
t2966 = t4 * t2957 + t2965;
t2974 = 0.2e1 * t60 * t122 * t121;
t2979 = t66 * t20;
t2982 = t22 * t2979 * t43 * pkin(9) + t114;
t2986 = t50 * t48 * t20 * t178;
t2987 = t2974 + t59 * (-t135 * t122 + t1442 - t1444) + t63 * t2982 - t2986;
t2992 = t4 * t2963 * t43 * t53 + t2 * t867 * t2966 - t7 * t2957 * t53 - t45 * t867 * t2987;
t2997 = 0.1e1 / (t2 * t2987 + t45 * t2966);
t3000 = t2308 * koppelP(1,1);
t3001 = -koppelP(1,2) * t2316 + t3000;
t3003 = koppelP(1,3) * t2307;
t3008 = t2308 * koppelP(1,2) + koppelP(1,1) * t2316;
t3012 = t2315 * koppelP(2,1);
t3014 = t2311 * koppelP(2,2);
t3017 = t2315 * koppelP(2,2);
t3019 = t2311 * koppelP(2,1);
t3024 = t2308 * (t2312 * t3012 - t3014) + t2316 * (-t2312 * t3017 - t3019) - t2307 * t2315 * koppelP(2,3);
t3027 = 0.2e1 * t221 * t888 * t2944;
t3034 = -t3027 + t220 * (t1562 + t2950) + t20 * pkin(9) * (t249 * t122 + t1468);
t3040 = t220 * t233 * pkin(3) + t256 * pkin(9) + t221 * t40;
t3041 = t43 * t3040;
t3042 = t186 * t3041;
t3043 = t184 * t3034 + t3042;
t3051 = 0.2e1 * t221 * t122 * t121;
t3056 = t3051 + t220 * (-t283 * t122 + t1442 - t1444) + t224 * t2982 - t2986;
t3060 = t184 * t43 * t3040 * t214 + t2 * t976 * t3043 - t45 * t3056 * t976 - t3034 * t979;
t3065 = 0.1e1 / (t2 * t3056 + t45 * t3043);
t3068 = t2308 * koppelP(2,1);
t3069 = -koppelP(2,2) * t2316 + t3068;
t3071 = koppelP(2,3) * t2307;
t3076 = t2308 * koppelP(2,2) + koppelP(2,1) * t2316;
t3080 = t2315 * koppelP(3,1);
t3082 = t2311 * koppelP(3,2);
t3085 = t2315 * koppelP(3,2);
t3087 = t2311 * koppelP(3,1);
t3092 = t2308 * (t2312 * t3080 - t3082) + t2316 * (-t2312 * t3085 - t3087) - t2307 * t2315 * koppelP(3,3);
t3095 = 0.2e1 * t357 * t888 * t2944;
t3102 = -t3095 + t356 * (t1669 + t2950) + t20 * pkin(9) * (t385 * t122 + t1468);
t3108 = t356 * t369 * pkin(3) + t392 * pkin(9) + t357 * t40;
t3109 = t43 * t3108;
t3110 = t322 * t3109;
t3111 = t320 * t3102 + t3110;
t3119 = 0.2e1 * t357 * t122 * t121;
t3124 = t3119 + t356 * (-t419 * t122 + t1442 - t1444) + t360 * t2982 - t2986;
t3128 = t320 * t43 * t3108 * t350 + t2 * t1052 * t3111 - t45 * t3124 * t1052 - t3102 * t1055;
t3133 = 0.1e1 / (t2 * t3124 + t45 * t3111);
t3136 = t2308 * koppelP(3,1);
t3137 = -koppelP(3,2) * t2316 + t3136;
t3139 = koppelP(3,3) * t2307;
t3144 = t2308 * koppelP(3,2) + koppelP(3,1) * t2316;
t3148 = t2315 * koppelP(4,1);
t3150 = t2311 * koppelP(4,2);
t3153 = t2315 * koppelP(4,2);
t3155 = t2311 * koppelP(4,1);
t3160 = t2308 * (t2312 * t3148 - t3150) + t2316 * (-t2312 * t3153 - t3155) - t2307 * t2315 * koppelP(4,3);
t3163 = 0.2e1 * t493 * t888 * t2944;
t3170 = -t3163 + t492 * (t1776 + t2950) + t20 * pkin(9) * (t521 * t122 + t1468);
t3176 = t492 * t505 * pkin(3) + t528 * pkin(9) + t493 * t40;
t3177 = t43 * t3176;
t3178 = t458 * t3177;
t3179 = t456 * t3170 + t3178;
t3187 = 0.2e1 * t493 * t122 * t121;
t3192 = t3187 + t492 * (-t555 * t122 + t1442 - t1444) + t496 * t2982 - t2986;
t3196 = t456 * t43 * t3176 * t486 + t2 * t1128 * t3179 - t45 * t3192 * t1128 - t3170 * t1131;
t3201 = 0.1e1 / (t2 * t3192 + t45 * t3179);
t3204 = t2308 * koppelP(4,1);
t3205 = -koppelP(4,2) * t2316 + t3204;
t3207 = koppelP(4,3) * t2307;
t3212 = t2308 * koppelP(4,2) + koppelP(4,1) * t2316;
t3216 = t2315 * koppelP(5,1);
t3218 = t2311 * koppelP(5,2);
t3221 = t2315 * koppelP(5,2);
t3223 = t2311 * koppelP(5,1);
t3228 = t2308 * (t2312 * t3216 - t3218) + t2316 * (-t2312 * t3221 - t3223) - t2307 * t2315 * koppelP(5,3);
t3231 = 0.2e1 * t629 * t888 * t2944;
t3238 = -t3231 + t628 * (t1884 + t2950) + t20 * pkin(9) * (t657 * t122 + t1468);
t3244 = t628 * t641 * pkin(3) + t664 * pkin(9) + t629 * t40;
t3245 = t43 * t3244;
t3246 = t594 * t3245;
t3247 = t592 * t3238 + t3246;
t3255 = 0.2e1 * t629 * t122 * t121;
t3260 = t3255 + t628 * (-t691 * t122 + t1442 - t1444) + t632 * t2982 - t2986;
t3264 = t592 * t43 * t3244 * t622 + t2 * t1204 * t3247 - t45 * t3260 * t1204 - t3238 * t1207;
t3269 = 0.1e1 / (t2 * t3260 + t45 * t3247);
t3272 = t2308 * koppelP(5,1);
t3273 = -koppelP(5,2) * t2316 + t3272;
t3275 = koppelP(5,3) * t2307;
t3280 = t2308 * koppelP(5,2) + koppelP(5,1) * t2316;
t3284 = t2315 * koppelP(6,1);
t3289 = t2315 * koppelP(6,2);
t3291 = t2311 * koppelP(6,1);
t3296 = t2308 * (-t2311 * koppelP(6,2) + t2312 * t3284) + t2316 * (-t2312 * t3289 - t3291) - t2307 * t2315 * koppelP(6,3);
t3299 = 0.2e1 * t765 * t888 * t2944;
t3306 = -t3299 + t764 * (t1991 + t2950) + t20 * pkin(9) * (t793 * t122 + t1468);
t3312 = t764 * t777 * pkin(3) + t800 * pkin(9) + t765 * t40;
t3313 = t43 * t3312;
t3314 = t730 * t3313;
t3315 = t728 * t3306 + t3314;
t3323 = 0.2e1 * t765 * t122 * t121;
t3328 = t3323 + t764 * (-t827 * t122 + t1442 - t1444) + t768 * t2982 - t2986;
t3332 = t728 * t43 * t3312 * t758 + t2 * t1280 * t3315 - t45 * t3328 * t1280 - t3306 * t1283;
t3337 = 0.1e1 / (t2 * t3328 + t45 * t3315);
t3340 = t2308 * koppelP(6,1);
t3341 = -koppelP(6,2) * t2316 + t3340;
t3343 = koppelP(6,3) * t2307;
t3348 = t2308 * koppelP(6,2) + koppelP(6,1) * t2316;
t3354 = t2312 * koppelP(1,2);
t3359 = t2315 * (t2312 * t3000 - t2316 * t3354 - t3003) - t3008 * t2311;
t3360 = t3359 * t2720;
t3361 = t972 * t960;
t3369 = t2315 * (-t2316 * t2312 * koppelP(2,2) + t2312 * t3068 - t3071) - t3076 * t2311;
t3370 = t3369 * t2741;
t3371 = t1048 * t1037;
t3379 = t2315 * (-t2316 * t2312 * koppelP(3,2) + t2312 * t3136 - t3139) - t3144 * t2311;
t3380 = t2762 * t3379;
t3381 = t1124 * t1113;
t3389 = t2315 * (-t2316 * t2312 * koppelP(4,2) + t2312 * t3204 - t3207) - t3212 * t2311;
t3390 = t3389 * t2783;
t3391 = t1200 * t1189;
t3399 = t2315 * (-t2316 * t2312 * koppelP(5,2) + t2312 * t3272 - t3275) - t3280 * t2311;
t3400 = t2804 * t3399;
t3401 = t1276 * t1265;
t3404 = t2312 * koppelP(6,2);
t3409 = t2315 * (t2312 * t3340 - t2316 * t3404 - t3343) - t3348 * t2311;
t3410 = t2825 * t3409;
t3411 = t1352 * t1341;
t3414 = t1358 * t960;
t3416 = t1363 * t1037;
t3418 = t1368 * t1113;
t3420 = t1373 * t1189;
t3422 = t1378 * t1265;
t3424 = t1383 * t1341;
t3427 = t1416 * t960;
t3431 = t3359 * (-t59 * t2840 + t2843 + t2844);
t3432 = t1504 * t1477;
t3434 = t1534 * t1037;
t3438 = t3369 * (-t220 * t2852 + t2855 + t2856);
t3439 = t1612 * t1586;
t3441 = t1641 * t1113;
t3445 = (-t356 * t2864 + t2867 + t2868) * t3379;
t3446 = t1719 * t1693;
t3448 = t1748 * t1189;
t3452 = t3389 * (-t492 * t2876 + t2879 + t2880);
t3453 = t1826 * t1800;
t3455 = t1856 * t1265;
t3459 = (-t628 * t2888 + t2891 + t2892) * t3399;
t3460 = t1934 * t1908;
t3462 = t1963 * t1341;
t3466 = (-t764 * t2900 + t2903 + t2904) * t3409;
t3467 = t2041 * t2015;
t3469 = t3427 * t3360 + t3434 * t3370 + t3441 * t3380 + t3448 * t3390 + t3455 * t3400 + t3462 * t3410 - t3432 * t3431 - t3439 * t3438 - t3446 * t3445 - t3453 * t3452 - t3460 * t3459 - t3467 * t3466;
t3470 = t2066 * t960;
t3472 = t2086 * t1477;
t3474 = t2110 * t1037;
t3476 = t2129 * t1586;
t3478 = t2154 * t1113;
t3480 = t2173 * t1693;
t3482 = t2198 * t1189;
t3484 = t2217 * t1800;
t3486 = t2241 * t1265;
t3488 = t2260 * t1908;
t3490 = t2285 * t1341;
t3492 = t2304 * t2015;
t3494 = t3470 * t3360 + t3474 * t3370 + t3478 * t3380 + t3482 * t3390 + t3486 * t3400 + t3490 * t3410 - t3472 * t3431 - t3476 * t3438 - t3480 * t3445 - t3484 * t3452 - t3488 * t3459 - t3492 * t3466;
t3511 = -t2 * t2966 * t53 - t7 * t867 * t2957 + t45 * t2987 * t53 + t868 * t2964;
t3516 = koppelP(1,3) * t2312;
t3526 = -t186 * t976 * t3034 - t2 * t3043 * t214 + t45 * t3056 * t214 + t977 * t3041;
t3531 = koppelP(2,3) * t2312;
t3541 = -t322 * t1052 * t3102 - t2 * t3111 * t350 + t45 * t3124 * t350 + t1053 * t3109;
t3546 = koppelP(3,3) * t2312;
t3556 = -t458 * t1128 * t3170 - t2 * t3179 * t486 + t45 * t3192 * t486 + t1129 * t3177;
t3561 = koppelP(4,3) * t2312;
t3571 = -t594 * t1204 * t3238 - t2 * t3247 * t622 + t45 * t3260 * t622 + t1205 * t3245;
t3576 = koppelP(5,3) * t2312;
t3586 = -t730 * t1280 * t3306 - t2 * t3315 * t758 + t45 * t3328 * t758 + t1281 * t3313;
t3591 = koppelP(6,3) * t2312;
t3597 = t3359 * (t63 * t893 + t884);
t3601 = t3369 * (t224 * t999 + t992);
t3605 = t3379 * (t360 * t1075 + t1068);
t3609 = t3389 * (t496 * t1151 + t1144);
t3613 = t3399 * (t632 * t1227 + t1220);
t3617 = (t768 * t1303 + t1296) * t3409;
t3630 = (-t59 * t1425 + t1434 - t1438) * t3359;
t3635 = t3369 * (-t220 * t1543 + t1552 - t1556);
t3640 = (-t356 * t1650 + t1659 - t1663) * t3379;
t3645 = t3389 * (-t492 * t1757 + t1766 - t1770);
t3650 = (-t628 * t1865 + t1874 - t1878) * t3399;
t3655 = (-t764 * t1972 + t1981 - t1985) * t3409;
t3657 = -t3427 * t3597 + t3432 * t3630 - t3434 * t3601 + t3439 * t3635 - t3441 * t3605 + t3446 * t3640 - t3448 * t3609 + t3453 * t3645 - t3455 * t3613 + t3460 * t3650 - t3462 * t3617 + t3467 * t3655;
t3670 = -t3470 * t3597 + t3472 * t3630 - t3474 * t3601 + t3476 * t3635 - t3478 * t3605 + t3480 * t3640 - t3482 * t3609 + t3484 * t3645 - t3486 * t3613 + t3488 * t3650 - t3490 * t3617 + t3492 * t3655;
t3687 = -t2311 * t3003 + t2308 * (t2312 * t2938 + t2936) + (-t2311 * t3354 + t2931) * t2316;
t3691 = t2307 * t3001 + t3516;
t3704 = -t2307 * t2311 * koppelP(2,3) + t2308 * (t2312 * t3019 + t3017) + (-t2312 * t3014 + t3012) * t2316;
t3708 = t2307 * t3069 + t3531;
t3721 = -t2307 * t2311 * koppelP(3,3) + t2308 * (t2312 * t3087 + t3085) + (-t2312 * t3082 + t3080) * t2316;
t3725 = t2307 * t3137 + t3546;
t3738 = -t2307 * t2311 * koppelP(4,3) + t2308 * (t2312 * t3155 + t3153) + (-t2312 * t3150 + t3148) * t2316;
t3742 = t2307 * t3205 + t3561;
t3755 = -t2307 * t2311 * koppelP(5,3) + t2308 * (t2312 * t3223 + t3221) + (-t2312 * t3218 + t3216) * t2316;
t3759 = t2307 * t3273 + t3576;
t3772 = -t2307 * t2311 * koppelP(6,3) + t2308 * (t2312 * t3291 + t3289) + (-t2311 * t3404 + t3284) * t2316;
t3776 = t2307 * t3341 + t3591;
t3782 = t7 * pkin(9);
t3784 = t20 * t3782 + t947;
t3790 = -t20 * t4 * pkin(9) + t22 * t141;
t3804 = 0.2e1 * t124;
t3807 = t84 * t66;
t3821 = t84 * t2979;
t3823 = t22 * t888;
t3828 = t952 * t951 * t43;
t3834 = 0.1e1 / (t60 * (t45 * (-0.2e1 * t126 + t127) * t43 + t3804) + t59 * (t45 * (t3807 * t148 + t911 * t1489 + (0.2e1 * t1461 * t3782 + t925 - t926) * pkin(3)) - t2 * (-t40 * t63 + t1440 - t1442 + t1444)) + t45 * pkin(9) * (t63 * t20 * t927 + t3823 * t148 + t3821 * t1489 - t3828 * t3782) + t1466);
t3848 = -t3834 * (t59 * (t2 * t3784 * t867 - t3790 * t53 - t876) - (-t2 * t1423 * t867 + t2837 + t891) * t63) * t3687 + t3834 * (t59 * (t2 * t3784 * t53 + t3790 * t867 - t2706) + t63 * (t2 * t1423 * t53 + t1420 - t2716)) * t3691;
t3850 = t186 * pkin(9);
t3852 = t20 * t3850 + t1030;
t3858 = -t20 * t184 * pkin(9) + t22 * t287;
t3896 = 0.1e1 / (t221 * (t45 * (-0.2e1 * t274 + t275) * t43 + t3804) + t220 * (t45 * (t3807 * t293 + t911 * t1597 + (0.2e1 * t1571 * t3850 + t1017 - t1018) * pkin(3)) - t2 * (-t40 * t224 - t1442 + t1444 + t1558)) + t45 * pkin(9) * (t224 * t20 * t1019 + t3821 * t1597 + t3823 * t293 - t3828 * t3850) + t1576);
t3910 = -t3896 * t3704 * (t220 * (t2 * t3852 * t976 - t3858 * t214 - t984) - (-t2 * t1541 * t976 + t2849 + t997) * t224) + t3896 * t3708 * (t220 * (t2 * t3852 * t214 + t3858 * t976 - t2727) + t224 * (t2 * t1541 * t214 + t1538 - t2737));
t3912 = t322 * pkin(9);
t3914 = t20 * t3912 + t1106;
t3920 = -t20 * t320 * pkin(9) + t22 * t423;
t3958 = 0.1e1 / (t357 * (t45 * t43 * (-0.2e1 * t410 + t411) + t3804) + t356 * (t45 * (t3807 * t429 + t911 * t1704 + pkin(3) * (0.2e1 * t1678 * t3912 + t1093 - t1094)) - t2 * (-t40 * t360 - t1442 + t1444 + t1665)) + t45 * (t360 * t20 * t1095 + t3821 * t1704 + t3823 * t429 - t3828 * t3912) * pkin(9) + t1683);
t3972 = -t3958 * (t356 * (t2 * t3914 * t1052 - t3920 * t350 - t1060) - (-t2 * t1648 * t1052 + t1073 + t2861) * t360) * t3721 + t3958 * (t356 * (t2 * t3914 * t350 + t3920 * t1052 - t2748) + t360 * (t2 * t1648 * t350 + t1645 - t2758)) * t3725;
t3974 = t458 * pkin(9);
t3976 = t20 * t3974 + t1182;
t3982 = -t20 * t456 * pkin(9) + t22 * t559;
t4020 = 0.1e1 / (t493 * (t45 * (-0.2e1 * t546 + t547) * t43 + t3804) + t492 * (t45 * (t3807 * t565 + t911 * t1811 + pkin(3) * (0.2e1 * t1785 * t3974 + t1169 - t1170)) - t2 * (-t40 * t496 - t1442 + t1444 + t1772)) + t45 * pkin(9) * (t496 * t20 * t1171 + t3821 * t1811 + t3823 * t565 - t3828 * t3974) + t1790);
t4034 = -t4020 * t3738 * (t492 * (t2 * t3976 * t1128 - t3982 * t486 - t1136) - t496 * (-t2 * t1755 * t1128 + t1149 + t2873)) + t4020 * t3742 * (t492 * (t2 * t3976 * t486 + t3982 * t1128 - t2769) + t496 * (t2 * t1755 * t486 + t1752 - t2779));
t4036 = t594 * pkin(9);
t4038 = t20 * t4036 + t1258;
t4044 = -t20 * t592 * pkin(9) + t22 * t695;
t4082 = 0.1e1 / (t629 * (t45 * (-0.2e1 * t682 + t683) * t43 + t3804) + t628 * (t45 * (t3807 * t701 + t911 * t1919 + (0.2e1 * t1893 * t4036 + t1245 - t1246) * pkin(3)) - t2 * (-t40 * t632 - t1442 + t1444 + t1880)) + t45 * pkin(9) * (t632 * t20 * t1247 + t3821 * t1919 + t3823 * t701 - t3828 * t4036) + t1898);
t4096 = -t4082 * t3755 * (t628 * (t2 * t4038 * t1204 - t4044 * t622 - t1212) - t632 * (-t2 * t1863 * t1204 + t1225 + t2885)) + t4082 * (t628 * (t2 * t4038 * t622 + t4044 * t1204 - t2790) + t632 * (t2 * t1863 * t622 + t1860 - t2800)) * t3759;
t4098 = t730 * pkin(9);
t4100 = t20 * t4098 + t1334;
t4106 = -t20 * t728 * pkin(9) + t22 * t831;
t4144 = 0.1e1 / (t765 * (t45 * t43 * (-0.2e1 * t818 + t819) + t3804) + t764 * (t45 * (t3807 * t837 + t911 * t2026 + pkin(3) * (0.2e1 * t2000 * t4098 + t1321 - t1322)) - t2 * (-t40 * t768 - t1442 + t1444 + t1987)) + t45 * pkin(9) * (t768 * t20 * t1323 + t3821 * t2026 + t3823 * t837 - t3828 * t4098) + t2005);
t4158 = -t4144 * (t764 * (t2 * t4100 * t1280 - t4106 * t758 - t1288) - (-t2 * t1970 * t1280 + t1301 + t2897) * t768) * t3772 + t4144 * t3776 * (t764 * (t2 * t4100 * t758 + t4106 * t1280 - t2811) + t768 * (t2 * t1970 * t758 + t1967 - t2821));
t4170 = t59 * pkin(3) + pkin(2) + t72;
t4173 = t21 * t2048 - t1429 + t921;
t4178 = -t1 * t3691 + t6 * t3687;
t4182 = t1 * t3687 + t6 * t3691;
t4206 = 0.1e1 / (t2 * (t59 * t1445 - t1460 + t1462 + t1464 + t2974) + (t4 * (pkin(9) * t1470 + t59 * t1452 - t2947) + t2965) * t45) * (t2 * (t10 * t4178 - t4182 * t12) * (t4170 * t4 + t4173 * t7) - (-t4 * t4173 + t4170 * t7) * (t10 * t4182 + t12 * t4178));
t4211 = -t1 * t3708 + t6 * t3704;
t4215 = t3704 * t1 + t6 * t3708;
t4219 = t220 * pkin(3) + pkin(2) + t231;
t4222 = t21 * t2088 - t1547 + t921;
t4246 = 0.1e1 / (t2 * (t220 * t1559 - t1460 + t1572 + t1574 + t3051) + (t184 * (pkin(9) * t1579 + t220 * t1563 - t3027) + t3042) * t45) * (t2 * (t4219 * t184 + t4222 * t186) * (t189 * t4211 - t191 * t4215) - (t189 * t4215 + t191 * t4211) * (-t184 * t4222 + t4219 * t186));
t4250 = t356 * pkin(3) + pkin(2) + t367;
t4253 = t21 * t2131 - t1654 + t921;
t4258 = -t1 * t3725 + t6 * t3721;
t4262 = t1 * t3721 + t6 * t3725;
t4286 = 0.1e1 / (t2 * (t356 * t1666 - t1460 + t1679 + t1681 + t3119) + t45 * (t320 * (t356 * t1670 + t1685 * t21 - t3095) + t3110)) * (t2 * (t325 * t4258 - t4262 * t327) * (t4250 * t320 + t4253 * t322) - (t325 * t4262 + t4258 * t327) * (-t320 * t4253 + t4250 * t322));
t4291 = -t1 * t3742 + t6 * t3738;
t4295 = t1 * t3738 + t6 * t3742;
t4299 = t492 * pkin(3) + pkin(2) + t503;
t4302 = t21 * t2175 - t1761 + t921;
t4326 = 0.1e1 / (t2 * (t492 * t1773 - t1460 + t1786 + t1788 + t3187) + (t456 * (pkin(9) * t1793 + t492 * t1777 - t3163) + t3178) * t45) * (t2 * (t4299 * t456 + t4302 * t458) * (t461 * t4291 - t4295 * t463) - (t4291 * t463 + t461 * t4295) * (t4299 * t458 - t456 * t4302));
t4330 = t628 * pkin(3) + pkin(2) + t639;
t4333 = t21 * t2223 - t1869 + t921;
t4338 = -t1 * t3759 + t6 * t3755;
t4342 = t1 * t3755 + t6 * t3759;
t4366 = 0.1e1 / (t2 * (t628 * t1881 - t1460 + t1894 + t1896 + t3255) + (t592 * (t628 * t1885 + t1900 * t21 - t3231) + t3246) * t45) * (t2 * (t597 * t4338 - t4342 * t599) * (t4330 * t592 + t4333 * t594) - (t4338 * t599 + t597 * t4342) * (t4330 * t594 - t592 * t4333));
t4370 = t764 * pkin(3) + pkin(2) + t775;
t4373 = t21 * t2262 - t1976 + t921;
t4378 = -t1 * t3776 + t6 * t3772;
t4382 = t1 * t3772 + t6 * t3776;
t4406 = 0.1e1 / (t2 * (t764 * t1988 - t1460 + t2001 + t2003 + t3323) + (t728 * (pkin(9) * t2008 + t764 * t1992 - t3299) + t3314) * t45) * (t2 * (t733 * t4378 - t735 * t4382) * (t4370 * t728 + t4373 * t730) - (t4370 * t730 - t728 * t4373) * (t735 * t4378 + t733 * t4382));
t4408 = t1416 * t3848 + t1504 * t4206 + t1534 * t3910 + t1612 * t4246 + t1641 * t3972 + t1719 * t4286 + t1748 * t4034 + t1826 * t4326 + t1856 * t4096 + t1934 * t4366 + t1963 * t4158 + t2041 * t4406;
t4421 = t2066 * t3848 + t2086 * t4206 + t2110 * t3910 + t2129 * t4246 + t2154 * t3972 + t2173 * t4286 + t2198 * t4034 + t2217 * t4326 + t2241 * t4096 + t2260 * t4366 + t2285 * t4158 + t2304 * t4406;
unknown(1,1) = -g(3) * t181 * (t60 * (t43 * (0.2e1 * t23 * t19 + t40 * t34) + 0.2e1 * t53 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t63 * t40 * t18 + t66 * t53 * t46) + pkin(3) * t34 * t74) + t84 * (-t81 - t82) + t81 - t88 * t86 + t82) + t43 * (-t22 * t20 * (-t93 * t92 + t19) + t101 * t34) * pkin(9) - t111 * pkin(9) * (t63 * t106 + t53 * t46) + t63 * (t21 * t106 + t92 * t114) + t88 * t46) - g(3) * t317 * (t221 * (t43 * (0.2e1 * t23 * t197 + t40 * t208) + 0.2e1 * t214 * t50 * t49 * t47) + t220 * (t43 * (t22 * (-t224 * t40 * t196 + t66 * t214 * t46) + pkin(3) * t208 * t233) + t84 * (-t239 - t240) + t239 - t244 * t86 + t240) + t43 * (-t22 * t20 * (-t249 * t248 + t197) + t256 * t208) * pkin(9) - t111 * pkin(9) * (t214 * t46 + t224 * t261) + t224 * (t248 * t114 + t21 * t261) + t244 * t46) - g(3) * t453 * (t357 * (t43 * (0.2e1 * t23 * t333 + t40 * t344) + 0.2e1 * t350 * t50 * t49 * t47) + t356 * (t43 * (t22 * (-t360 * t40 * t332 + t66 * t350 * t46) + pkin(3) * t344 * t369) + t84 * (-t375 - t376) + t375 - t380 * t86 + t376) + t43 * (-t22 * t20 * (-t385 * t384 + t333) + t392 * t344) * pkin(9) - t111 * pkin(9) * (t350 * t46 + t360 * t397) + t360 * (t384 * t114 + t21 * t397) + t380 * t46) - g(3) * t589 * (t493 * (t43 * (0.2e1 * t23 * t469 + t40 * t480) + 0.2e1 * t486 * t50 * t49 * t47) + t492 * (t43 * (t22 * (-t496 * t40 * t468 + t66 * t486 * t46) + pkin(3) * t480 * t505) + t84 * (-t511 - t512) + t511 - t516 * t86 + t512) + t43 * (-t22 * t20 * (-t521 * t520 + t469) + t528 * t480) * pkin(9) - t111 * pkin(9) * (t486 * t46 + t496 * t533) + t496 * (t520 * t114 + t21 * t533) + t516 * t46) - g(3) * t725 * (t629 * (t43 * (0.2e1 * t23 * t605 + t40 * t616) + 0.2e1 * t622 * t50 * t49 * t47) + t628 * (t43 * (t22 * (-t632 * t40 * t604 + t66 * t622 * t46) + pkin(3) * t616 * t641) + t84 * (-t647 - t648) + t647 - t652 * t86 + t648) + t43 * (-t22 * t20 * (-t657 * t656 + t605) + t664 * t616) * pkin(9) - t111 * pkin(9) * (t622 * t46 + t632 * t669) + t632 * (t656 * t114 + t21 * t669) + t652 * t46) - g(3) * t861 * (t765 * (t43 * (0.2e1 * t23 * t741 + t40 * t752) + 0.2e1 * t758 * t50 * t49 * t47) + t764 * (t43 * (t22 * (-t768 * t40 * t740 + t66 * t758 * t46) + pkin(3) * t752 * t777) + t84 * (-t783 - t784) + t783 - t788 * t86 + t784) + t43 * (-t22 * t20 * (-t793 * t792 + t741) + t800 * t752) * pkin(9) - t111 * pkin(9) * (t758 * t46 + t768 * t805) + t768 * (t792 * t114 + t21 * t805) + t788 * t46);
unknown(1,2) = 0.0e0;
unknown(1,3) = t1048 * t1038 + t1124 * t1114 + t1200 * t1190 + t1276 * t1266 + t1352 * t1342 + t972 * t961;
unknown(1,4) = t1363 * t1038 + t1368 * t1114 + t1373 * t1190 + t1378 * t1266 + t1383 * t1342 + t1358 * t961;
unknown(1,5) = 0.0e0;
unknown(1,6) = 0.0e0;
unknown(1,7) = 0.0e0;
unknown(1,8) = 0.0e0;
unknown(1,9) = 0.0e0;
unknown(1,10) = t2043;
unknown(1,11) = t2306;
unknown(1,12) = 0.0e0;
unknown(1,13) = 0.0e0;
unknown(1,14) = 0.0e0;
unknown(1,15) = 0.0e0;
unknown(1,16) = 0.0e0;
unknown(1,17) = 0.0e0;
unknown(1,18) = 0.0e0;
unknown(1,19) = 0.0e0;
unknown(1,20) = 0.0e0;
unknown(1,21) = t2325 * t2309 + t2344 * t2312 - t2337 * t2327;
unknown(2,1) = -g(3) * t181 * (t60 * (t43 * (-0.2e1 * t23 * t2350 + t40 * t2355) - 0.2e1 * t867 * t50 * t49 * t47) + t59 * (t43 * (t22 * (t63 * t40 * t2349 - t66 * t867 * t46) + pkin(3) * t2355 * t74) + t84 * (t2376 + t2377) - t2376 + t2380 * t86 - t2377) + t43 * pkin(9) * (t22 * t20 * (-t93 * t875 + t2350) + t101 * t2355) + t111 * pkin(9) * (t63 * t2392 + t867 * t46) + t63 * (-t875 * t114 - t21 * t2392) - t2380 * t46) - g(3) * t317 * (t221 * (t43 * (-0.2e1 * t23 * t2409 + t40 * t2414) - 0.2e1 * t976 * t50 * t49 * t47) + t220 * (t43 * (t22 * (t224 * t40 * t2408 - t66 * t976 * t46) + pkin(3) * t2414 * t233) + t84 * (t2435 + t2436) - t2435 + t2439 * t86 - t2436) + t43 * pkin(9) * (t22 * t20 * (-t249 * t983 + t2409) + t256 * t2414) + t111 * pkin(9) * (t224 * t2451 + t976 * t46) + t224 * (-t983 * t114 - t21 * t2451) - t2439 * t46) - g(3) * t453 * (t357 * (t43 * (-0.2e1 * t23 * t2468 + t40 * t2473) - 0.2e1 * t1052 * t50 * t49 * t47) + t356 * (t43 * (t22 * (-t66 * t1052 * t46 + t360 * t40 * t2467) + pkin(3) * t2473 * t369) + t84 * (t2494 + t2495) - t2494 + t2498 * t86 - t2495) + t43 * pkin(9) * (t22 * t20 * (-t385 * t1059 + t2468) + t392 * t2473) + t111 * pkin(9) * (t1052 * t46 + t360 * t2510) + t360 * (-t1059 * t114 - t21 * t2510) - t2498 * t46) - g(3) * t589 * (t493 * (t43 * (-0.2e1 * t23 * t2527 + t40 * t2532) - 0.2e1 * t1128 * t50 * t49 * t47) + t492 * (t43 * (t22 * (-t66 * t1128 * t46 + t496 * t40 * t2526) + pkin(3) * t2532 * t505) + t84 * (t2553 + t2554) - t2553 + t2557 * t86 - t2554) + t43 * pkin(9) * (t22 * t20 * (-t521 * t1135 + t2527) + t528 * t2532) + t111 * pkin(9) * (t1128 * t46 + t496 * t2569) + t496 * (-t1135 * t114 - t21 * t2569) - t2557 * t46) - g(3) * t725 * (t629 * (t43 * (-0.2e1 * t23 * t2586 + t40 * t2591) - 0.2e1 * t1204 * t50 * t49 * t47) + t628 * (t43 * (t22 * (-t66 * t1204 * t46 + t632 * t40 * t2585) + pkin(3) * t2591 * t641) + t84 * (t2612 + t2613) - t2612 + t2616 * t86 - t2613) + t43 * pkin(9) * (t22 * t20 * (-t657 * t1211 + t2586) + t664 * t2591) + t111 * pkin(9) * (t1204 * t46 + t632 * t2628) + t632 * (-t1211 * t114 - t21 * t2628) - t2616 * t46) - g(3) * t861 * (t765 * (t43 * (-0.2e1 * t23 * t2645 + t40 * t2650) - 0.2e1 * t1280 * t50 * t49 * t47) + t764 * (t43 * (t22 * (-t66 * t1280 * t46 + t768 * t40 * t2644) + pkin(3) * t2650 * t777) + t84 * (t2671 + t2672) - t2671 + t2675 * t86 - t2672) + t43 * pkin(9) * (t22 * t20 * (-t793 * t1287 + t2645) + t800 * t2650) + t111 * pkin(9) * (t1280 * t46 + t768 * t2687) + t768 * (-t1287 * t114 - t21 * t2687) - t2675 * t46);
unknown(2,2) = 0.0e0;
unknown(2,3) = t1048 * t2742 + t1124 * t2763 + t1200 * t2784 + t1276 * t2805 + t1352 * t2826 + t972 * t2721;
unknown(2,4) = t1358 * t2721 + t1363 * t2742 + t1368 * t2763 + t1373 * t2784 + t1378 * t2805 + t1383 * t2826;
unknown(2,5) = 0.0e0;
unknown(2,6) = 0.0e0;
unknown(2,7) = 0.0e0;
unknown(2,8) = 0.0e0;
unknown(2,9) = 0.0e0;
unknown(2,10) = t2908;
unknown(2,11) = t2921;
unknown(2,12) = 0.0e0;
unknown(2,13) = 0.0e0;
unknown(2,14) = 0.0e0;
unknown(2,15) = 0.0e0;
unknown(2,16) = 0.0e0;
unknown(2,17) = 0.0e0;
unknown(2,18) = 0.0e0;
unknown(2,19) = 0.0e0;
unknown(2,20) = 0.0e0;
unknown(2,21) = t2325 * t2318 + t2337 * t2331 - t2344 * t2340;
unknown(3,1) = -0.6e1 * g(3);
unknown(3,2) = 0.0e0;
unknown(3,3) = 0.0e0;
unknown(3,4) = 0.0e0;
unknown(3,5) = 0.0e0;
unknown(3,6) = 0.0e0;
unknown(3,7) = 0.0e0;
unknown(3,8) = 0.0e0;
unknown(3,9) = 0.0e0;
unknown(3,10) = 0.0e0;
unknown(3,11) = 0.0e0;
unknown(3,12) = 0.0e0;
unknown(3,13) = 0.0e0;
unknown(3,14) = 0.0e0;
unknown(3,15) = 0.0e0;
unknown(3,16) = 0.0e0;
unknown(3,17) = 0.0e0;
unknown(3,18) = 0.0e0;
unknown(3,19) = 0.0e0;
unknown(3,20) = 0.0e0;
unknown(3,21) = t2325 * t2323 + t2337 * t2335 + t2344 * t2342;
unknown(4,1) = -g(3) * (t2997 * t2992 * t2943 + t2311 * (t2312 * t3001 - t3003) + t3008 * t2315) - g(3) * (t3065 * t3060 * t3024 + t2311 * (t2312 * t3069 - t3071) + t3076 * t2315) - g(3) * (t3133 * t3128 * t3092 + t2311 * (t2312 * t3137 - t3139) + t3144 * t2315) - g(3) * (t3201 * t3196 * t3160 + t2311 * (t2312 * t3205 - t3207) + t3212 * t2315) - g(3) * (t3269 * t3264 * t3228 + t2311 * (t2312 * t3273 - t3275) + t3280 * t2315) - g(3) * (t3337 * t3332 * t3296 + t2311 * (t2312 * t3341 - t3343) + t3348 * t2315);
unknown(4,2) = 0.0e0;
unknown(4,3) = t3361 * t3360 + t3371 * t3370 + t3381 * t3380 + t3391 * t3390 + t3401 * t3400 + t3411 * t3410;
unknown(4,4) = t3414 * t3360 + t3416 * t3370 + t3418 * t3380 + t3420 * t3390 + t3422 * t3400 + t3424 * t3410;
unknown(4,5) = 0.0e0;
unknown(4,6) = 0.0e0;
unknown(4,7) = 0.0e0;
unknown(4,8) = 0.0e0;
unknown(4,9) = 0.0e0;
unknown(4,10) = t3469;
unknown(4,11) = t3494;
unknown(4,12) = 0.0e0;
unknown(4,13) = 0.0e0;
unknown(4,14) = 0.0e0;
unknown(4,15) = 0.0e0;
unknown(4,16) = 0.0e0;
unknown(4,17) = 0.0e0;
unknown(4,18) = t2337 * t2312 + t2344 * t2327;
unknown(4,19) = t2344 * t2309 - t2325 * t2312;
unknown(4,20) = -t2337 * t2309 - t2325 * t2327;
unknown(4,21) = 0.0e0;
unknown(5,1) = -g(3) * (-t2997 * t2943 * t3511 - koppelP(1,1) * t2309 + koppelP(1,2) * t2327 - t3516) - g(3) * (-t3065 * t3024 * t3526 - koppelP(2,1) * t2309 + koppelP(2,2) * t2327 - t3531) - g(3) * (-t3133 * t3092 * t3541 - koppelP(3,1) * t2309 + koppelP(3,2) * t2327 - t3546) - g(3) * (-t3201 * t3160 * t3556 - koppelP(4,1) * t2309 + koppelP(4,2) * t2327 - t3561) - g(3) * (-t3269 * t3228 * t3571 - koppelP(5,1) * t2309 + koppelP(5,2) * t2327 - t3576) - g(3) * (-t3337 * t3296 * t3586 - koppelP(6,1) * t2309 + koppelP(6,2) * t2327 - t3591);
unknown(5,2) = 0.0e0;
unknown(5,3) = -t3361 * t3597 - t3371 * t3601 - t3381 * t3605 - t3391 * t3609 - t3401 * t3613 - t3411 * t3617;
unknown(5,4) = -t3414 * t3597 - t3416 * t3601 - t3418 * t3605 - t3420 * t3609 - t3422 * t3613 - t3424 * t3617;
unknown(5,5) = 0.0e0;
unknown(5,6) = 0.0e0;
unknown(5,7) = 0.0e0;
unknown(5,8) = 0.0e0;
unknown(5,9) = 0.0e0;
unknown(5,10) = t3657;
unknown(5,11) = t3670;
unknown(5,12) = 0.0e0;
unknown(5,13) = 0.0e0;
unknown(5,14) = 0.0e0;
unknown(5,15) = 0.0e0;
unknown(5,16) = 0.0e0;
unknown(5,17) = 0.0e0;
unknown(5,18) = -t2344 * t2331 - t2337 * t2340;
unknown(5,19) = t2344 * t2318 + t2325 * t2340;
unknown(5,20) = -t2337 * t2318 + t2325 * t2331;
unknown(5,21) = 0.0e0;
unknown(6,1) = -g(3) * (t2997 * t3691 * t2992 - t2997 * t3687 * t3511) - g(3) * (t3065 * t3708 * t3060 - t3065 * t3704 * t3526) - g(3) * (t3133 * t3725 * t3128 - t3133 * t3721 * t3541) - g(3) * (t3201 * t3742 * t3196 - t3201 * t3738 * t3556) - g(3) * (t3269 * t3759 * t3264 - t3269 * t3755 * t3571) - g(3) * (t3337 * t3776 * t3332 - t3337 * t3772 * t3586);
unknown(6,2) = 0.0e0;
unknown(6,3) = t1048 * t3910 + t1124 * t3972 + t1200 * t4034 + t1276 * t4096 + t1352 * t4158 + t972 * t3848;
unknown(6,4) = t1358 * t3848 + t1363 * t3910 + t1368 * t3972 + t1373 * t4034 + t1378 * t4096 + t1383 * t4158;
unknown(6,5) = 0.0e0;
unknown(6,6) = 0.0e0;
unknown(6,7) = 0.0e0;
unknown(6,8) = 0.0e0;
unknown(6,9) = 0.0e0;
unknown(6,10) = t4408;
unknown(6,11) = t4421;
unknown(6,12) = 0.0e0;
unknown(6,13) = 0.0e0;
unknown(6,14) = 0.0e0;
unknown(6,15) = 0.0e0;
unknown(6,16) = 0.0e0;
unknown(6,17) = 0.0e0;
unknown(6,18) = -t2344 * t2335 + t2337 * t2342;
unknown(6,19) = t2344 * t2323 - t2325 * t2342;
unknown(6,20) = -t2337 * t2323 + t2325 * t2335;
unknown(6,21) = 0.0e0;
tau_reg  = unknown;
