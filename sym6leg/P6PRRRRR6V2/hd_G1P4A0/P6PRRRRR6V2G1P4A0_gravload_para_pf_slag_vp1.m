% Calculate Gravitation load for parallel robot
% P6PRRRRR6V2G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
%
% Output:
% taugX [6x1]
%   forces required to compensate gravitation load
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 01:01
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1(xP, qJ, g, legFrame, ...
  koppelP, pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: g has to be [3x1] (double)');
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From gravvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:50:20
% EndTime: 2020-03-12 23:50:21
% DurationCPUTime: 1.29s
% Computational Cost: add. (11222->1227), mult. (28997->2456), div. (108->18), fcn. (23825->50), ass. (0->735)
unknown=NaN(6,1);
t1 = sin(pkin(10));
t2 = cos(pkin(4));
t3 = t2 * t1;
t4 = cos(qJ(2,1));
t6 = cos(pkin(10));
t7 = sin(qJ(2,1));
t8 = t7 * t6;
t9 = t4 * t3 + t8;
t10 = cos(legFrame(1,3));
t12 = sin(legFrame(1,3));
t13 = t7 * t1;
t14 = t2 * t6;
t16 = t4 * t14 - t13;
t18 = t10 * t9 + t16 * t12;
t19 = pkin(3) * t18;
t20 = sin(pkin(6));
t21 = t20 * pkin(9);
t22 = cos(pkin(5));
t23 = t22 * t21;
t28 = -t7 * t3 + t4 * t6;
t32 = t4 * t1 + t7 * t14;
t34 = t10 * t28 - t32 * t12;
t35 = cos(pkin(6));
t36 = t35 ^ 2;
t37 = pkin(9) ^ 2;
t39 = pkin(3) ^ 2;
t40 = t37 * t36 - t37 + t39;
t43 = sin(pkin(5));
t45 = sin(pkin(4));
t46 = t45 * pkin(3);
t47 = t20 * t46;
t48 = t22 - 0.1e1;
t49 = t48 * pkin(9);
t50 = t22 + 0.1e1;
t53 = t10 * t1 + t12 * t6;
t59 = cos(qJ(3,1));
t60 = t59 ^ 2;
t63 = sin(qJ(3,1));
t66 = pkin(9) * t35 + pkin(8);
t72 = pkin(9) * t20 * t63;
t74 = 0.2e1 * t72 + pkin(2);
t79 = t40 * t45;
t81 = t63 * t53 * t79;
t82 = t66 * t19;
t84 = t22 ^ 2;
t86 = t45 * pkin(2);
t87 = pkin(9) * t53;
t88 = t20 * t87;
t92 = t53 * t45;
t93 = t66 * t63;
t98 = t63 * pkin(2);
t100 = pkin(9) * t36;
t101 = t20 * t98 + pkin(9) - t100;
t106 = t66 * t18;
t111 = t84 * t20;
t114 = pkin(2) * pkin(3);
t119 = t60 * (t43 * (0.2e1 * t23 * t19 + t40 * t34) + 0.2e1 * t53 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t63 * t40 * t18 + t66 * t53 * t46) + pkin(3) * t34 * t74) + t84 * (-t81 - t82) + t81 - t88 * t86 + t82) + t43 * (-t22 * t20 * (-t93 * t92 + t19) + t101 * t34) * pkin(9) - t111 * pkin(9) * (t63 * t106 + t53 * t46) + t63 * (t21 * t106 + t92 * t114) + t88 * t46;
t121 = pkin(9) * t20 * pkin(3);
t124 = t2 * t50 * t48 * t121;
t125 = t22 * t4;
t133 = 0.2e1 * t60 * (t124 - t45 * (t121 * t125 - t40 * t7 / 0.2e1) * t43);
t134 = t45 * t4;
t135 = t40 * t63;
t137 = pkin(3) * t2;
t138 = t66 * t137;
t141 = pkin(3) * t7;
t146 = t40 * t2;
t147 = t63 * t146;
t148 = pkin(3) * t4;
t149 = t66 * t45;
t150 = t149 * t148;
t153 = t2 * pkin(2);
t154 = t21 * t153;
t157 = t66 * t2;
t163 = t45 * t7;
t172 = t66 * t21;
t174 = pkin(3) * t153;
t177 = t20 * t2;
t178 = pkin(3) * pkin(9);
t179 = t178 * t177;
t181 = 0.1e1 / (t133 + t59 * (t43 * (t22 * (t135 * t134 + t138) + t74 * t45 * t141) + t84 * (-t147 + t150) + t147 - t154 - t150) + t43 * pkin(9) * (t22 * t20 * (t45 * t148 + t63 * t157) + t101 * t163) + t111 * (t93 * t134 - t137) * pkin(9) + t63 * (-t172 * t134 + t174) + t179);
t183 = m(1) + m(2) + m(3);
t184 = t183 * g(3);
t188 = -t12 * t1 + t10 * t6;
t189 = t188 * t4;
t191 = t53 * t7;
t192 = t2 * t189 - t191;
t195 = t43 * pkin(3);
t196 = t45 * t188;
t198 = t188 * t7;
t200 = t53 * t4;
t201 = t2 * t198 + t200;
t207 = t22 * t20;
t209 = t20 * t43;
t210 = t188 * pkin(9);
t216 = t59 * (t22 * pkin(3) * t192 + t20 * pkin(9) * t201 - t196 * t195) + t63 * (t207 * pkin(9) * t192 - t45 * t210 * t209 - pkin(3) * t201);
t219 = 0.2e1 * t121 * t84 * t2;
t221 = t45 * t43;
t222 = t178 * t221;
t225 = t43 * t7;
t227 = 0.2e1 * t179;
t230 = t84 * t146;
t232 = t22 * t40 * t43;
t235 = pkin(9) * t209;
t240 = t84 * t149;
t242 = t66 * t43;
t244 = t22 * t242 * t137;
t248 = t43 * t7 * pkin(2) - t66 * t4;
t254 = t66 * pkin(9);
t255 = t84 * t254;
t259 = t22 * t254;
t260 = t259 * t20 * t43 * t2;
t262 = t45 * t20;
t266 = t84 * pkin(3);
t267 = t266 * t177;
t269 = t20 * t221;
t275 = t45 * (t35 + 0.1e1) * (t35 - 0.1e1);
t277 = pkin(3) * t177;
t281 = 0.1e1 / (t60 * (-0.2e1 * t222 * t20 * t125 + t79 * t225 + t219 - t227) + t59 * (t63 * (0.2e1 * t235 * t45 * t141 + t232 * t134 + t146 - t230) + t240 * t148 + t244 + t45 * t248 * pkin(3) - t154) + t63 * (t262 * pkin(9) * t248 + t255 * t20 * t134 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t125 - t275 * pkin(9) * t225 - t267 + t277));
t285 = g(1) * t10 + g(2) * t12;
t286 = t285 * t1;
t289 = -g(1) * t12 + g(2) * t10;
t291 = -t289 * t6 + t286;
t299 = t43 * (pkin(8) + rSges(3,3)) * m(3);
t300 = m(2) * rSges(2,2);
t301 = t22 * (rSges(3,1) * t63 + rSges(3,2) * t59) * m(3) - t299 + t300;
t304 = rSges(3,1) * m(3);
t308 = m(2) * rSges(2,1);
t309 = pkin(2) * m(3);
t310 = -rSges(3,2) * t63 * m(3) + t59 * t304 + t308 + t309;
t325 = t45 * g(3);
t329 = t7 * (t45 * t301 * g(3) + t1 * t310 * t289 - t2 * t301 * t291 + t6 * t310 * t285) + (t1 * t289 * t301 + t2 * t310 * t291 + t6 * t285 * t301 - t310 * t325) * t4;
t333 = t21 * t22 * t7 + t148;
t337 = t21 * t125 - t141;
t341 = t72 + pkin(2);
t345 = pkin(3) * t22 * t63 - t242;
t347 = t4 * t341 - t7 * t345;
t352 = t341 * t7 + t4 * t345;
t354 = t59 * (-t2 * t333 * t188 - t337 * t53) - t2 * t347 * t188 + t352 * t53;
t357 = t22 * t66 * t195;
t359 = pkin(9) * t20 * pkin(2);
t362 = t66 * pkin(3);
t363 = t84 * t362;
t364 = t43 * t63;
t365 = t22 * t40;
t375 = t21 * t266;
t383 = t22 * t195;
t392 = 0.1e1 / (t133 + t59 * (t2 * (-t84 * t135 + t135 + t357 - t359) + t45 * (t4 * (t365 * t364 - t362 + t363) + t74 * t43 * t141)) + t2 * (-t375 + t259 * t20 * t364 + (t98 + t21) * pkin(3)) + pkin(9) * t45 * (t4 * t20 * (t84 * t93 + t383 - t93) + t101 * t225));
t394 = rSges(3,1) * t4;
t395 = -t22 * t291;
t397 = t289 * rSges(3,2);
t399 = t285 * rSges(3,2);
t402 = g(3) * t43 * rSges(3,1);
t410 = -t1 * t289 * t7 - t6 * t285 * t7 + g(3) * t134;
t413 = rSges(3,1) * t45;
t416 = rSges(3,2) * t4;
t425 = rSges(3,2) * g(3);
t435 = g(3) * rSges(3,2) * t43;
t448 = rSges(3,1) * g(3);
t452 = t59 * (t2 * (t399 * t13 + t395 * t394 - t397 * t8 + t402) + t22 * t410 * rSges(3,1) + t6 * (-t289 * t43 * t413 - t285 * t416) + t1 * (t285 * t43 * t413 - t289 * t416) - t425 * t163) - t63 * (t2 * (-t286 * rSges(3,1) * t7 + t289 * rSges(3,1) * t8 + t395 * t416 + t435) + t22 * t410 * rSges(3,2) + t6 * (-t397 * t221 + t285 * t394) + t1 * (t399 * t221 + t289 * t394) + t448 * t163);
t453 = m(3) * t452;
t455 = cos(qJ(2,2));
t457 = sin(qJ(2,2));
t458 = t457 * t6;
t459 = t455 * t3 + t458;
t460 = cos(legFrame(2,3));
t462 = sin(legFrame(2,3));
t463 = t457 * t1;
t465 = t455 * t14 - t463;
t467 = t460 * t459 + t465 * t462;
t468 = t467 * pkin(3);
t473 = -t457 * t3 + t455 * t6;
t477 = t455 * t1 + t457 * t14;
t479 = t460 * t473 - t477 * t462;
t485 = t460 * t1 + t462 * t6;
t491 = cos(qJ(3,2));
t492 = t491 ^ 2;
t495 = sin(qJ(3,2));
t502 = pkin(9) * t20 * t495;
t504 = 0.2e1 * t502 + pkin(2);
t510 = t495 * t485 * t79;
t511 = t66 * t468;
t514 = t485 * pkin(9);
t515 = t20 * t514;
t519 = t485 * t45;
t520 = t66 * t495;
t525 = t495 * pkin(2);
t527 = t20 * t525 + pkin(9) - t100;
t532 = t66 * t467;
t543 = t492 * (t43 * (0.2e1 * t23 * t468 + t40 * t479) + 0.2e1 * t485 * t50 * t49 * t47) + t491 * (t43 * (t22 * (-t495 * t40 * t467 + t66 * t485 * t46) + pkin(3) * t479 * t504) + t84 * (-t510 - t511) + t510 - t515 * t86 + t511) + t43 * (-t22 * t20 * (-t520 * t519 + t468) + t527 * t479) * pkin(9) - t111 * pkin(9) * (t485 * t46 + t495 * t532) + t495 * (t519 * t114 + t21 * t532) + t515 * t46;
t544 = t22 * t455;
t552 = 0.2e1 * t492 * (t124 - t45 * (t121 * t544 - t40 * t457 / 0.2e1) * t43);
t553 = t45 * t455;
t554 = t40 * t495;
t558 = pkin(3) * t457;
t563 = t495 * t146;
t564 = pkin(3) * t455;
t565 = t149 * t564;
t575 = t45 * t457;
t588 = 0.1e1 / (t552 + t491 * (t43 * (t22 * (t554 * t553 + t138) + t504 * t45 * t558) + t84 * (-t563 + t565) + t563 - t154 - t565) + t43 * pkin(9) * (t22 * t20 * (t495 * t157 + t45 * t564) + t527 * t575) + t111 * (t520 * t553 - t137) * pkin(9) + t495 * (-t172 * t553 + t174) + t179);
t593 = -t462 * t1 + t460 * t6;
t594 = t593 * t455;
t596 = t485 * t457;
t597 = t2 * t594 - t596;
t600 = t45 * t593;
t602 = t593 * t457;
t604 = t485 * t455;
t605 = t2 * t602 + t604;
t612 = t593 * pkin(9);
t618 = t491 * (t22 * pkin(3) * t597 + t20 * pkin(9) * t605 - t600 * t195) + t495 * (t207 * pkin(9) * t597 - t45 * t612 * t209 - pkin(3) * t605);
t622 = t43 * t457;
t636 = t43 * t457 * pkin(2) - t66 * t455;
t654 = 0.1e1 / (t492 * (-0.2e1 * t222 * t20 * t544 + t79 * t622 + t219 - t227) + t491 * (t495 * (0.2e1 * t235 * t45 * t558 + t232 * t553 + t146 - t230) + t240 * t564 + t244 + t45 * t636 * pkin(3) - t154) + t495 * (t262 * pkin(9) * t636 + t255 * t20 * t553 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t544 - t275 * pkin(9) * t622 - t267 + t277));
t658 = g(1) * t460 + g(2) * t462;
t659 = t658 * t1;
t662 = -g(1) * t462 + g(2) * t460;
t664 = -t662 * t6 + t659;
t670 = t22 * (rSges(3,1) * t495 + rSges(3,2) * t491) * m(3) - t299 + t300;
t676 = -rSges(3,2) * t495 * m(3) + t491 * t304 + t308 + t309;
t694 = t457 * (t45 * t670 * g(3) + t1 * t676 * t662 - t2 * t670 * t664 + t6 * t676 * t658) + (t1 * t662 * t670 + t2 * t676 * t664 + t6 * t658 * t670 - t676 * t325) * t455;
t698 = t21 * t22 * t457 + t564;
t702 = t21 * t544 - t558;
t706 = t502 + pkin(2);
t710 = pkin(3) * t22 * t495 - t242;
t712 = t455 * t706 - t457 * t710;
t717 = t455 * t710 + t706 * t457;
t719 = t491 * (-t2 * t698 * t593 - t702 * t485) - t2 * t712 * t593 + t717 * t485;
t723 = t43 * t495;
t748 = 0.1e1 / (t552 + t491 * (t2 * (-t84 * t554 + t357 - t359 + t554) + t45 * (t455 * (t365 * t723 - t362 + t363) + t504 * t43 * t558)) + t2 * (-t375 + t259 * t20 * t723 + (t525 + t21) * pkin(3)) + pkin(9) * t45 * (t455 * t20 * (t84 * t520 + t383 - t520) + t527 * t622));
t750 = rSges(3,1) * t455;
t751 = -t22 * t664;
t753 = t662 * rSges(3,2);
t755 = t658 * rSges(3,2);
t764 = -t1 * t662 * t457 - t6 * t658 * t457 + g(3) * t553;
t769 = rSges(3,2) * t455;
t801 = t491 * (t2 * (-t753 * t458 + t755 * t463 + t751 * t750 + t402) + t22 * t764 * rSges(3,1) + t6 * (-t662 * t43 * t413 - t658 * t769) + t1 * (t658 * t43 * t413 - t662 * t769) - t425 * t575) - t495 * (t2 * (-t659 * rSges(3,1) * t457 + t662 * rSges(3,1) * t458 + t751 * t769 + t435) + t22 * t764 * rSges(3,2) + t6 * (-t753 * t221 + t658 * t750) + t1 * (t755 * t221 + t662 * t750) + t448 * t575);
t802 = m(3) * t801;
t804 = cos(qJ(2,3));
t806 = sin(qJ(2,3));
t807 = t806 * t6;
t808 = t804 * t3 + t807;
t809 = cos(legFrame(3,3));
t811 = sin(legFrame(3,3));
t812 = t806 * t1;
t814 = t804 * t14 - t812;
t816 = t809 * t808 + t814 * t811;
t817 = t816 * pkin(3);
t822 = -t806 * t3 + t804 * t6;
t826 = t804 * t1 + t806 * t14;
t828 = t809 * t822 - t826 * t811;
t834 = t809 * t1 + t811 * t6;
t840 = cos(qJ(3,3));
t841 = t840 ^ 2;
t844 = sin(qJ(3,3));
t851 = pkin(9) * t20 * t844;
t853 = 0.2e1 * t851 + pkin(2);
t859 = t844 * t834 * t79;
t860 = t66 * t817;
t863 = t834 * pkin(9);
t864 = t20 * t863;
t868 = t834 * t45;
t869 = t66 * t844;
t874 = t844 * pkin(2);
t876 = t20 * t874 + pkin(9) - t100;
t881 = t66 * t816;
t892 = t841 * (t43 * (0.2e1 * t23 * t817 + t40 * t828) + 0.2e1 * t834 * t50 * t49 * t47) + t840 * (t43 * (t22 * (-t844 * t40 * t816 + t66 * t834 * t46) + pkin(3) * t828 * t853) + t84 * (-t859 - t860) + t859 - t864 * t86 + t860) + t43 * (-t22 * t20 * (-t869 * t868 + t817) + t876 * t828) * pkin(9) - t111 * pkin(9) * (t834 * t46 + t844 * t881) + t844 * (t868 * t114 + t21 * t881) + t864 * t46;
t893 = t22 * t804;
t901 = 0.2e1 * t841 * (t124 - t45 * (t121 * t893 - t40 * t806 / 0.2e1) * t43);
t902 = t45 * t804;
t903 = t40 * t844;
t907 = pkin(3) * t806;
t912 = t844 * t146;
t913 = pkin(3) * t804;
t914 = t149 * t913;
t924 = t45 * t806;
t937 = 0.1e1 / (t901 + t840 * (t43 * (t22 * (t903 * t902 + t138) + t853 * t45 * t907) + t84 * (-t912 + t914) + t912 - t154 - t914) + t43 * pkin(9) * (t22 * t20 * (t844 * t157 + t45 * t913) + t876 * t924) + t111 * (t869 * t902 - t137) * pkin(9) + t844 * (-t172 * t902 + t174) + t179);
t942 = -t811 * t1 + t809 * t6;
t943 = t942 * t804;
t945 = t834 * t806;
t946 = t2 * t943 - t945;
t949 = t45 * t942;
t951 = t942 * t806;
t953 = t834 * t804;
t954 = t2 * t951 + t953;
t961 = pkin(9) * t942;
t967 = t840 * (t22 * pkin(3) * t946 + t20 * pkin(9) * t954 - t949 * t195) + t844 * (t207 * pkin(9) * t946 - t45 * t961 * t209 - pkin(3) * t954);
t971 = t43 * t806;
t985 = t43 * t806 * pkin(2) - t66 * t804;
t1003 = 0.1e1 / (t841 * (-0.2e1 * t222 * t20 * t893 + t79 * t971 + t219 - t227) + t840 * (t844 * (0.2e1 * t235 * t45 * t907 + t232 * t902 + t146 - t230) + t240 * t913 + t244 + t45 * t985 * pkin(3) - t154) + t844 * (t262 * pkin(9) * t985 + t255 * t20 * t902 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t893 - t275 * pkin(9) * t971 - t267 + t277));
t1007 = g(1) * t809 + g(2) * t811;
t1008 = t1007 * t1;
t1011 = -g(1) * t811 + g(2) * t809;
t1013 = -t1011 * t6 + t1008;
t1019 = t22 * (rSges(3,1) * t844 + rSges(3,2) * t840) * m(3) - t299 + t300;
t1025 = -rSges(3,2) * t844 * m(3) + t840 * t304 + t308 + t309;
t1043 = t806 * (t45 * t1019 * g(3) + t1 * t1025 * t1011 + t6 * t1025 * t1007 - t2 * t1019 * t1013) + (t1 * t1011 * t1019 + t6 * t1007 * t1019 + t2 * t1025 * t1013 - t1025 * t325) * t804;
t1047 = t21 * t22 * t806 + t913;
t1051 = t21 * t893 - t907;
t1055 = t851 + pkin(2);
t1059 = pkin(3) * t22 * t844 - t242;
t1061 = t804 * t1055 - t806 * t1059;
t1066 = t1055 * t806 + t804 * t1059;
t1068 = t840 * (-t2 * t1047 * t942 - t1051 * t834) - t2 * t1061 * t942 + t1066 * t834;
t1072 = t43 * t844;
t1097 = 0.1e1 / (t901 + t840 * (t2 * (-t84 * t903 + t357 - t359 + t903) + t45 * (t804 * (t365 * t1072 - t362 + t363) + t853 * t43 * t907)) + t2 * (-t375 + t259 * t20 * t1072 + (t874 + t21) * pkin(3)) + pkin(9) * t45 * (t804 * t20 * (t84 * t869 + t383 - t869) + t876 * t971));
t1099 = rSges(3,1) * t804;
t1100 = -t22 * t1013;
t1102 = t1011 * rSges(3,2);
t1104 = t1007 * rSges(3,2);
t1113 = -t1 * t1011 * t806 - t6 * t1007 * t806 + g(3) * t902;
t1118 = rSges(3,2) * t804;
t1150 = t840 * (t2 * (t1100 * t1099 - t1102 * t807 + t1104 * t812 + t402) + t22 * t1113 * rSges(3,1) + t6 * (-t1011 * t43 * t413 - t1007 * t1118) + t1 * (t1007 * t43 * t413 - t1011 * t1118) - t425 * t924) - t844 * (t2 * (-t1008 * rSges(3,1) * t806 + t1011 * rSges(3,1) * t807 + t1100 * t1118 + t435) + t22 * t1113 * rSges(3,2) + t6 * (t1007 * t1099 - t1102 * t221) + t1 * (t1011 * t1099 + t1104 * t221) + t448 * t924);
t1151 = m(3) * t1150;
t1153 = cos(qJ(2,4));
t1155 = sin(qJ(2,4));
t1156 = t1155 * t6;
t1157 = t1153 * t3 + t1156;
t1158 = cos(legFrame(4,3));
t1160 = sin(legFrame(4,3));
t1161 = t1155 * t1;
t1163 = t1153 * t14 - t1161;
t1165 = t1158 * t1157 + t1163 * t1160;
t1166 = t1165 * pkin(3);
t1171 = t1153 * t6 - t1155 * t3;
t1175 = t1153 * t1 + t1155 * t14;
t1177 = t1158 * t1171 - t1175 * t1160;
t1183 = t1158 * t1 + t1160 * t6;
t1189 = cos(qJ(3,4));
t1190 = t1189 ^ 2;
t1193 = sin(qJ(3,4));
t1200 = pkin(9) * t20 * t1193;
t1202 = 0.2e1 * t1200 + pkin(2);
t1208 = t1193 * t1183 * t79;
t1209 = t66 * t1166;
t1212 = t1183 * pkin(9);
t1213 = t20 * t1212;
t1217 = t1183 * t45;
t1218 = t66 * t1193;
t1223 = t1193 * pkin(2);
t1225 = t20 * t1223 + pkin(9) - t100;
t1230 = t66 * t1165;
t1241 = t1190 * (t43 * (0.2e1 * t23 * t1166 + t40 * t1177) + 0.2e1 * t1183 * t50 * t49 * t47) + t1189 * (t43 * (t22 * (-t1193 * t40 * t1165 + t66 * t1183 * t46) + pkin(3) * t1177 * t1202) + t84 * (-t1208 - t1209) + t1208 - t1213 * t86 + t1209) + t43 * (-t22 * t20 * (-t1218 * t1217 + t1166) + t1225 * t1177) * pkin(9) - t111 * pkin(9) * (t1183 * t46 + t1193 * t1230) + t1193 * (t1217 * t114 + t21 * t1230) + t1213 * t46;
t1242 = t22 * t1153;
t1250 = 0.2e1 * t1190 * (t124 - t45 * (t121 * t1242 - t40 * t1155 / 0.2e1) * t43);
t1251 = t45 * t1153;
t1252 = t40 * t1193;
t1256 = pkin(3) * t1155;
t1261 = t1193 * t146;
t1262 = pkin(3) * t1153;
t1263 = t149 * t1262;
t1273 = t45 * t1155;
t1286 = 0.1e1 / (t1250 + t1189 * (t43 * (t22 * (t1252 * t1251 + t138) + t1202 * t45 * t1256) + t84 * (-t1261 + t1263) + t1261 - t154 - t1263) + t43 * pkin(9) * (t22 * t20 * (t1193 * t157 + t45 * t1262) + t1225 * t1273) + t111 * (t1218 * t1251 - t137) * pkin(9) + t1193 * (-t172 * t1251 + t174) + t179);
t1291 = -t1160 * t1 + t1158 * t6;
t1292 = t1291 * t1153;
t1294 = t1183 * t1155;
t1295 = t2 * t1292 - t1294;
t1298 = t45 * t1291;
t1300 = t1291 * t1155;
t1302 = t1183 * t1153;
t1303 = t2 * t1300 + t1302;
t1310 = t1291 * pkin(9);
t1316 = t1189 * (t22 * pkin(3) * t1295 + t20 * pkin(9) * t1303 - t1298 * t195) + t1193 * (t207 * pkin(9) * t1295 - t45 * t1310 * t209 - pkin(3) * t1303);
t1320 = t43 * t1155;
t1334 = t43 * t1155 * pkin(2) - t66 * t1153;
t1352 = 0.1e1 / (t1190 * (-0.2e1 * t222 * t20 * t1242 + t79 * t1320 + t219 - t227) + t1189 * (t1193 * (0.2e1 * t235 * t45 * t1256 + t232 * t1251 + t146 - t230) + t240 * t1262 + t244 + t45 * t1334 * pkin(3) - t154) + t1193 * (t262 * pkin(9) * t1334 + t255 * t20 * t1251 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t1242 - t275 * pkin(9) * t1320 - t267 + t277));
t1356 = g(1) * t1158 + g(2) * t1160;
t1357 = t1356 * t1;
t1360 = -g(1) * t1160 + g(2) * t1158;
t1362 = -t1360 * t6 + t1357;
t1368 = t22 * (rSges(3,1) * t1193 + rSges(3,2) * t1189) * m(3) - t299 + t300;
t1374 = -rSges(3,2) * t1193 * m(3) + t1189 * t304 + t308 + t309;
t1392 = t1155 * (t45 * t1368 * g(3) + t1 * t1374 * t1360 + t6 * t1374 * t1356 - t2 * t1368 * t1362) + (t1 * t1360 * t1368 + t6 * t1356 * t1368 + t2 * t1374 * t1362 - t1374 * t325) * t1153;
t1396 = t21 * t22 * t1155 + t1262;
t1400 = t21 * t1242 - t1256;
t1404 = t1200 + pkin(2);
t1408 = pkin(3) * t22 * t1193 - t242;
t1410 = t1153 * t1404 - t1155 * t1408;
t1415 = t1153 * t1408 + t1404 * t1155;
t1417 = t1189 * (-t2 * t1396 * t1291 - t1400 * t1183) - t2 * t1410 * t1291 + t1415 * t1183;
t1421 = t43 * t1193;
t1446 = 0.1e1 / (t1250 + t1189 * (t2 * (-t84 * t1252 + t1252 + t357 - t359) + t45 * (t1153 * (t365 * t1421 - t362 + t363) + t1202 * t43 * t1256)) + t2 * (-t375 + t259 * t20 * t1421 + (t1223 + t21) * pkin(3)) + pkin(9) * t45 * (t1153 * t20 * (t84 * t1218 - t1218 + t383) + t1225 * t1320));
t1448 = rSges(3,1) * t1153;
t1449 = -t22 * t1362;
t1451 = t1360 * rSges(3,2);
t1453 = t1356 * rSges(3,2);
t1462 = -t1 * t1360 * t1155 - t6 * t1356 * t1155 + g(3) * t1251;
t1467 = rSges(3,2) * t1153;
t1499 = t1189 * (t2 * (-t1451 * t1156 + t1453 * t1161 + t1449 * t1448 + t402) + t22 * t1462 * rSges(3,1) + t6 * (-t1360 * t43 * t413 - t1356 * t1467) + t1 * (t1356 * t43 * t413 - t1360 * t1467) - t425 * t1273) - t1193 * (t2 * (-t1357 * rSges(3,1) * t1155 + t1360 * rSges(3,1) * t1156 + t1449 * t1467 + t435) + t22 * t1462 * rSges(3,2) + t6 * (t1356 * t1448 - t1451 * t221) + t1 * (t1360 * t1448 + t1453 * t221) + t448 * t1273);
t1500 = m(3) * t1499;
t1502 = cos(qJ(2,5));
t1504 = sin(qJ(2,5));
t1505 = t1504 * t6;
t1506 = t1502 * t3 + t1505;
t1507 = cos(legFrame(5,3));
t1509 = sin(legFrame(5,3));
t1510 = t1504 * t1;
t1512 = t1502 * t14 - t1510;
t1514 = t1507 * t1506 + t1512 * t1509;
t1515 = t1514 * pkin(3);
t1520 = t1502 * t6 - t1504 * t3;
t1524 = t1502 * t1 + t1504 * t14;
t1526 = t1507 * t1520 - t1524 * t1509;
t1532 = t1507 * t1 + t1509 * t6;
t1538 = cos(qJ(3,5));
t1539 = t1538 ^ 2;
t1542 = sin(qJ(3,5));
t1549 = pkin(9) * t20 * t1542;
t1551 = 0.2e1 * t1549 + pkin(2);
t1557 = t1542 * t1532 * t79;
t1558 = t66 * t1515;
t1561 = t1532 * pkin(9);
t1562 = t20 * t1561;
t1566 = t1532 * t45;
t1567 = t66 * t1542;
t1572 = t1542 * pkin(2);
t1574 = t20 * t1572 + pkin(9) - t100;
t1579 = t66 * t1514;
t1590 = t1539 * (t43 * (0.2e1 * t23 * t1515 + t40 * t1526) + 0.2e1 * t1532 * t50 * t49 * t47) + t1538 * (t43 * (t22 * (-t1542 * t40 * t1514 + t66 * t1532 * t46) + pkin(3) * t1526 * t1551) + t84 * (-t1557 - t1558) + t1557 - t1562 * t86 + t1558) + t43 * (-t22 * t20 * (-t1567 * t1566 + t1515) + t1574 * t1526) * pkin(9) - t111 * pkin(9) * (t1532 * t46 + t1542 * t1579) + t1542 * (t1566 * t114 + t21 * t1579) + t1562 * t46;
t1591 = t22 * t1502;
t1599 = 0.2e1 * t1539 * (t124 - t45 * (t121 * t1591 - t40 * t1504 / 0.2e1) * t43);
t1600 = t45 * t1502;
t1601 = t40 * t1542;
t1605 = pkin(3) * t1504;
t1610 = t1542 * t146;
t1611 = pkin(3) * t1502;
t1612 = t149 * t1611;
t1622 = t45 * t1504;
t1635 = 0.1e1 / (t1599 + t1538 * (t43 * (t22 * (t1601 * t1600 + t138) + t1551 * t45 * t1605) + t84 * (-t1610 + t1612) + t1610 - t154 - t1612) + t43 * pkin(9) * (t22 * t20 * (t1542 * t157 + t45 * t1611) + t1574 * t1622) + t111 * (t1567 * t1600 - t137) * pkin(9) + t1542 * (-t172 * t1600 + t174) + t179);
t1640 = -t1509 * t1 + t1507 * t6;
t1641 = t1640 * t1502;
t1643 = t1532 * t1504;
t1644 = t2 * t1641 - t1643;
t1647 = t45 * t1640;
t1649 = t1640 * t1504;
t1651 = t1532 * t1502;
t1652 = t2 * t1649 + t1651;
t1659 = t1640 * pkin(9);
t1665 = t1538 * (t22 * pkin(3) * t1644 + t20 * pkin(9) * t1652 - t1647 * t195) + t1542 * (t207 * pkin(9) * t1644 - t45 * t1659 * t209 - pkin(3) * t1652);
t1669 = t43 * t1504;
t1683 = t43 * t1504 * pkin(2) - t66 * t1502;
t1701 = 0.1e1 / (t1539 * (-0.2e1 * t222 * t20 * t1591 + t79 * t1669 + t219 - t227) + t1538 * (t1542 * (0.2e1 * t235 * t45 * t1605 + t232 * t1600 + t146 - t230) + t240 * t1611 + t244 + t45 * t1683 * pkin(3) - t154) + t1542 * (t262 * pkin(9) * t1683 + t255 * t20 * t1600 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t1591 - t275 * pkin(9) * t1669 - t267 + t277));
t1705 = g(1) * t1507 + g(2) * t1509;
t1706 = t1705 * t1;
t1709 = -g(1) * t1509 + g(2) * t1507;
t1711 = -t1709 * t6 + t1706;
t1717 = t22 * (rSges(3,1) * t1542 + rSges(3,2) * t1538) * m(3) - t299 + t300;
t1723 = -rSges(3,2) * t1542 * m(3) + t1538 * t304 + t308 + t309;
t1741 = t1504 * (t45 * t1717 * g(3) + t1 * t1723 * t1709 + t6 * t1723 * t1705 - t2 * t1717 * t1711) + (t1 * t1709 * t1717 + t6 * t1705 * t1717 + t2 * t1723 * t1711 - t1723 * t325) * t1502;
t1745 = t21 * t22 * t1504 + t1611;
t1749 = t21 * t1591 - t1605;
t1753 = t1549 + pkin(2);
t1757 = pkin(3) * t22 * t1542 - t242;
t1759 = t1502 * t1753 - t1504 * t1757;
t1764 = t1502 * t1757 + t1753 * t1504;
t1766 = t1538 * (-t2 * t1745 * t1640 - t1749 * t1532) - t2 * t1759 * t1640 + t1764 * t1532;
t1770 = t43 * t1542;
t1795 = 0.1e1 / (t1599 + t1538 * (t2 * (-t84 * t1601 + t1601 + t357 - t359) + t45 * (t1502 * (t365 * t1770 - t362 + t363) + t1551 * t43 * t1605)) + t2 * (-t375 + t259 * t20 * t1770 + (t1572 + t21) * pkin(3)) + pkin(9) * t45 * (t1502 * t20 * (t84 * t1567 - t1567 + t383) + t1574 * t1669));
t1797 = rSges(3,1) * t1502;
t1798 = -t22 * t1711;
t1800 = t1709 * rSges(3,2);
t1802 = t1705 * rSges(3,2);
t1811 = -t1 * t1709 * t1504 - t6 * t1705 * t1504 + g(3) * t1600;
t1816 = rSges(3,2) * t1502;
t1848 = t1538 * (t2 * (-t1800 * t1505 + t1802 * t1510 + t1798 * t1797 + t402) + t22 * t1811 * rSges(3,1) + t6 * (-t1709 * t43 * t413 - t1705 * t1816) + t1 * (t1705 * t43 * t413 - t1709 * t1816) - t425 * t1622) - t1542 * (t2 * (-t1706 * rSges(3,1) * t1504 + t1709 * rSges(3,1) * t1505 + t1798 * t1816 + t435) + t22 * t1811 * rSges(3,2) + t6 * (t1705 * t1797 - t1800 * t221) + t1 * (t1709 * t1797 + t1802 * t221) + t448 * t1622);
t1849 = m(3) * t1848;
t1851 = cos(qJ(2,6));
t1853 = sin(qJ(2,6));
t1854 = t1853 * t6;
t1855 = t1851 * t3 + t1854;
t1856 = cos(legFrame(6,3));
t1858 = sin(legFrame(6,3));
t1859 = t1853 * t1;
t1861 = t1851 * t14 - t1859;
t1863 = t1856 * t1855 + t1861 * t1858;
t1864 = t1863 * pkin(3);
t1869 = t1851 * t6 - t1853 * t3;
t1873 = t1851 * t1 + t1853 * t14;
t1875 = t1856 * t1869 - t1873 * t1858;
t1881 = t1856 * t1 + t1858 * t6;
t1887 = cos(qJ(3,6));
t1888 = t1887 ^ 2;
t1891 = sin(qJ(3,6));
t1898 = pkin(9) * t20 * t1891;
t1900 = 0.2e1 * t1898 + pkin(2);
t1906 = t1891 * t1881 * t79;
t1907 = t66 * t1864;
t1910 = t1881 * pkin(9);
t1911 = t20 * t1910;
t1915 = t1881 * t45;
t1916 = t66 * t1891;
t1921 = t1891 * pkin(2);
t1923 = t20 * t1921 + pkin(9) - t100;
t1928 = t66 * t1863;
t1939 = t1888 * (t43 * (0.2e1 * t23 * t1864 + t40 * t1875) + 0.2e1 * t1881 * t50 * t49 * t47) + t1887 * (t43 * (t22 * (-t1891 * t40 * t1863 + t66 * t1881 * t46) + pkin(3) * t1875 * t1900) + t84 * (-t1906 - t1907) + t1906 - t1911 * t86 + t1907) + t43 * (-t22 * t20 * (-t1916 * t1915 + t1864) + t1923 * t1875) * pkin(9) - t111 * pkin(9) * (t1881 * t46 + t1891 * t1928) + t1891 * (t1915 * t114 + t21 * t1928) + t1911 * t46;
t1940 = t22 * t1851;
t1948 = 0.2e1 * t1888 * (t124 - t45 * (t121 * t1940 - t40 * t1853 / 0.2e1) * t43);
t1949 = t45 * t1851;
t1950 = t40 * t1891;
t1954 = pkin(3) * t1853;
t1959 = t1891 * t146;
t1960 = pkin(3) * t1851;
t1961 = t149 * t1960;
t1971 = t45 * t1853;
t1984 = 0.1e1 / (t1948 + t1887 * (t43 * (t22 * (t1950 * t1949 + t138) + t1900 * t45 * t1954) + t84 * (-t1959 + t1961) + t1959 - t154 - t1961) + t43 * pkin(9) * (t22 * t20 * (t1891 * t157 + t45 * t1960) + t1923 * t1971) + t111 * (t1916 * t1949 - t137) * pkin(9) + t1891 * (-t172 * t1949 + t174) + t179);
t1989 = -t1858 * t1 + t1856 * t6;
t1990 = t1989 * t1851;
t1992 = t1881 * t1853;
t1993 = t2 * t1990 - t1992;
t1996 = t45 * t1989;
t1998 = t1989 * t1853;
t2000 = t1881 * t1851;
t2001 = t2 * t1998 + t2000;
t2008 = t1989 * pkin(9);
t2014 = t1887 * (t22 * pkin(3) * t1993 + t20 * pkin(9) * t2001 - t1996 * t195) + t1891 * (t207 * pkin(9) * t1993 - t45 * t2008 * t209 - pkin(3) * t2001);
t2018 = t43 * t1853;
t2032 = t43 * t1853 * pkin(2) - t66 * t1851;
t2050 = 0.1e1 / (t1888 * (-0.2e1 * t222 * t20 * t1940 + t79 * t2018 + t219 - t227) + t1887 * (t1891 * (0.2e1 * t235 * t45 * t1954 + t232 * t1949 + t146 - t230) + t240 * t1960 + t244 + t45 * t2032 * pkin(3) - t154) + t1891 * (t262 * pkin(9) * t2032 + t255 * t20 * t1949 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t1940 - t275 * pkin(9) * t2018 - t267 + t277));
t2054 = g(1) * t1856 + g(2) * t1858;
t2055 = t2054 * t1;
t2058 = -g(1) * t1858 + g(2) * t1856;
t2060 = -t2058 * t6 + t2055;
t2066 = t22 * (rSges(3,1) * t1891 + rSges(3,2) * t1887) * m(3) - t299 + t300;
t2072 = -rSges(3,2) * t1891 * m(3) + t1887 * t304 + t308 + t309;
t2090 = t1853 * (t45 * t2066 * g(3) + t1 * t2072 * t2058 - t2 * t2066 * t2060 + t6 * t2072 * t2054) + (t1 * t2058 * t2066 + t2 * t2072 * t2060 + t6 * t2054 * t2066 - t2072 * t325) * t1851;
t2094 = t21 * t22 * t1853 + t1960;
t2098 = t21 * t1940 - t1954;
t2102 = t1898 + pkin(2);
t2106 = pkin(3) * t22 * t1891 - t242;
t2108 = t1851 * t2102 - t1853 * t2106;
t2113 = t1851 * t2106 + t2102 * t1853;
t2115 = t1887 * (-t2 * t2094 * t1989 - t2098 * t1881) - t2 * t2108 * t1989 + t2113 * t1881;
t2119 = t43 * t1891;
t2144 = 0.1e1 / (t1948 + t1887 * (t2 * (-t84 * t1950 + t1950 + t357 - t359) + t45 * (t1851 * (t365 * t2119 - t362 + t363) + t1900 * t43 * t1954)) + t2 * (-t375 + t259 * t20 * t2119 + (t1921 + t21) * pkin(3)) + pkin(9) * t45 * (t1851 * t20 * (t84 * t1916 - t1916 + t383) + t1923 * t2018));
t2146 = rSges(3,1) * t1851;
t2147 = -t22 * t2060;
t2149 = t2058 * rSges(3,2);
t2151 = t2054 * rSges(3,2);
t2160 = -t1 * t2058 * t1853 - t6 * t2054 * t1853 + g(3) * t1949;
t2165 = rSges(3,2) * t1851;
t2197 = t1887 * (t2 * (-t2149 * t1854 + t2151 * t1859 + t2147 * t2146 + t402) + t22 * t2160 * rSges(3,1) + t6 * (-t2058 * t43 * t413 - t2054 * t2165) + t1 * (t2054 * t43 * t413 - t2058 * t2165) - t425 * t1971) - t1891 * (t2 * (-t2055 * rSges(3,1) * t1853 + t2058 * rSges(3,1) * t1854 + t2147 * t2165 + t435) + t22 * t2160 * rSges(3,2) + t6 * (t2054 * t2146 - t2149 * t221) + t1 * (t2058 * t2146 + t2151 * t221) + t448 * t1971);
t2198 = m(3) * t2197;
t2201 = -t184 * t181 * t119 + t329 * t281 * t216 - t453 * t392 * t354 - t184 * t588 * t543 + t694 * t654 * t618 - t802 * t748 * t719 - t184 * t937 * t892 + t1043 * t1003 * t967 - t1151 * t1097 * t1068 - t184 * t1286 * t1241 + t1392 * t1352 * t1316 - t1500 * t1446 * t1417 - t184 * t1635 * t1590 + t1741 * t1701 * t1665 - t1849 * t1795 * t1766 - t184 * t1984 * t1939 + t2090 * t2050 * t2014 - t2198 * t2144 * t2115 - m(4) * g(1);
t2204 = t10 * t16 - t9 * t12;
t2205 = pkin(3) * t2204;
t2210 = t10 * t32 + t28 * t12;
t2231 = t63 * t188 * t79;
t2232 = t66 * t2205;
t2235 = t20 * t210;
t2247 = t66 * t2204;
t2258 = t60 * (t43 * (-0.2e1 * t23 * t2205 + t40 * t2210) - 0.2e1 * t188 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t66 * t188 * t46 + t63 * t40 * t2204) + pkin(3) * t2210 * t74) + t84 * (t2231 + t2232) - t2231 + t2235 * t86 - t2232) + t43 * pkin(9) * (t22 * t20 * (-t93 * t196 + t2205) + t101 * t2210) + t111 * pkin(9) * (t188 * t46 + t63 * t2247) + t63 * (-t196 * t114 - t21 * t2247) - t2235 * t46;
t2262 = t2 * t200 + t198;
t2267 = -t2 * t191 + t189;
t2279 = t59 * (t22 * t2262 * pkin(3) - t20 * pkin(9) * t2267 - t92 * t195) + (t207 * pkin(9) * t2262 - t45 * t87 * t209 + pkin(3) * t2267) * t63;
t2290 = t59 * (-t2 * t333 * t53 + t337 * t188) - t2 * t53 * t347 - t352 * t188;
t2295 = -t459 * t462 + t460 * t465;
t2296 = pkin(3) * t2295;
t2301 = t460 * t477 + t473 * t462;
t2322 = t495 * t593 * t79;
t2323 = t66 * t2296;
t2326 = t20 * t612;
t2338 = t66 * t2295;
t2349 = t492 * (t43 * (-0.2e1 * t23 * t2296 + t40 * t2301) - 0.2e1 * t593 * t50 * t49 * t47) + t491 * (t43 * (t22 * (t495 * t40 * t2295 - t66 * t593 * t46) + pkin(3) * t2301 * t504) + t84 * (t2322 + t2323) - t2322 + t2326 * t86 - t2323) + t43 * pkin(9) * (t22 * t20 * (-t520 * t600 + t2296) + t527 * t2301) + t111 * pkin(9) * (t495 * t2338 + t593 * t46) + t495 * (-t600 * t114 - t21 * t2338) - t2326 * t46;
t2353 = t2 * t604 + t602;
t2358 = -t2 * t596 + t594;
t2370 = t491 * (t22 * t2353 * pkin(3) - t20 * pkin(9) * t2358 - t519 * t195) + (t207 * pkin(9) * t2353 - t45 * t514 * t209 + pkin(3) * t2358) * t495;
t2381 = t491 * (-t2 * t698 * t485 + t702 * t593) - t2 * t485 * t712 - t717 * t593;
t2386 = -t808 * t811 + t809 * t814;
t2387 = pkin(3) * t2386;
t2392 = t809 * t826 + t822 * t811;
t2413 = t844 * t942 * t79;
t2414 = t66 * t2387;
t2417 = t20 * t961;
t2429 = t66 * t2386;
t2440 = t841 * (t43 * (-0.2e1 * t23 * t2387 + t40 * t2392) - 0.2e1 * t942 * t50 * t49 * t47) + t840 * (t43 * (t22 * (t844 * t40 * t2386 - t66 * t942 * t46) + pkin(3) * t2392 * t853) + t84 * (t2413 + t2414) - t2413 + t2417 * t86 - t2414) + t43 * pkin(9) * (t22 * t20 * (-t869 * t949 + t2387) + t876 * t2392) + t111 * pkin(9) * (t844 * t2429 + t942 * t46) + t844 * (-t949 * t114 - t21 * t2429) - t2417 * t46;
t2444 = t2 * t953 + t951;
t2449 = -t2 * t945 + t943;
t2461 = t840 * (t22 * t2444 * pkin(3) - t20 * pkin(9) * t2449 - t868 * t195) + (t207 * pkin(9) * t2444 - t45 * t863 * t209 + pkin(3) * t2449) * t844;
t2472 = t840 * (-t2 * t1047 * t834 + t1051 * t942) - t2 * t834 * t1061 - t1066 * t942;
t2477 = -t1157 * t1160 + t1158 * t1163;
t2478 = pkin(3) * t2477;
t2483 = t1158 * t1175 + t1171 * t1160;
t2504 = t1193 * t1291 * t79;
t2505 = t66 * t2478;
t2508 = t20 * t1310;
t2520 = t66 * t2477;
t2531 = t1190 * (t43 * (-0.2e1 * t23 * t2478 + t40 * t2483) - 0.2e1 * t1291 * t50 * t49 * t47) + t1189 * (t43 * (t22 * (t1193 * t40 * t2477 - t66 * t1291 * t46) + pkin(3) * t2483 * t1202) + t84 * (t2504 + t2505) - t2504 + t2508 * t86 - t2505) + t43 * pkin(9) * (t22 * t20 * (-t1218 * t1298 + t2478) + t1225 * t2483) + t111 * pkin(9) * (t1193 * t2520 + t1291 * t46) + t1193 * (-t1298 * t114 - t21 * t2520) - t2508 * t46;
t2535 = t2 * t1302 + t1300;
t2540 = -t2 * t1294 + t1292;
t2552 = t1189 * (t22 * t2535 * pkin(3) - t20 * pkin(9) * t2540 - t1217 * t195) + (t207 * pkin(9) * t2535 - t45 * t1212 * t209 + pkin(3) * t2540) * t1193;
t2563 = t1189 * (-t2 * t1396 * t1183 + t1400 * t1291) - t2 * t1183 * t1410 - t1415 * t1291;
t2568 = -t1506 * t1509 + t1507 * t1512;
t2569 = pkin(3) * t2568;
t2574 = t1507 * t1524 + t1520 * t1509;
t2595 = t1542 * t1640 * t79;
t2596 = t66 * t2569;
t2599 = t20 * t1659;
t2611 = t66 * t2568;
t2622 = t1539 * (t43 * (-0.2e1 * t23 * t2569 + t40 * t2574) - 0.2e1 * t1640 * t50 * t49 * t47) + t1538 * (t43 * (t22 * (t1542 * t40 * t2568 - t66 * t1640 * t46) + pkin(3) * t2574 * t1551) + t84 * (t2595 + t2596) - t2595 + t2599 * t86 - t2596) + t43 * pkin(9) * (t22 * t20 * (-t1567 * t1647 + t2569) + t1574 * t2574) + t111 * pkin(9) * (t1542 * t2611 + t1640 * t46) + t1542 * (-t1647 * t114 - t21 * t2611) - t2599 * t46;
t2626 = t2 * t1651 + t1649;
t2631 = -t2 * t1643 + t1641;
t2643 = t1538 * (t22 * t2626 * pkin(3) - t20 * pkin(9) * t2631 - t1566 * t195) + (t207 * pkin(9) * t2626 - t45 * t1561 * t209 + pkin(3) * t2631) * t1542;
t2654 = t1538 * (-t2 * t1745 * t1532 + t1749 * t1640) - t2 * t1532 * t1759 - t1764 * t1640;
t2659 = -t1855 * t1858 + t1856 * t1861;
t2660 = pkin(3) * t2659;
t2665 = t1856 * t1873 + t1869 * t1858;
t2686 = t1891 * t1989 * t79;
t2687 = t66 * t2660;
t2690 = t20 * t2008;
t2702 = t66 * t2659;
t2713 = t1888 * (t43 * (-0.2e1 * t23 * t2660 + t40 * t2665) - 0.2e1 * t1989 * t50 * t49 * t47) + t1887 * (t43 * (t22 * (t1891 * t40 * t2659 - t66 * t1989 * t46) + pkin(3) * t2665 * t1900) + t84 * (t2686 + t2687) - t2686 + t2690 * t86 - t2687) + t43 * pkin(9) * (t22 * t20 * (-t1916 * t1996 + t2660) + t1923 * t2665) + t111 * pkin(9) * (t1891 * t2702 + t1989 * t46) + t1891 * (-t1996 * t114 - t21 * t2702) - t2690 * t46;
t2717 = t2 * t2000 + t1998;
t2722 = -t2 * t1992 + t1990;
t2734 = t1887 * (t22 * t2717 * pkin(3) - t20 * pkin(9) * t2722 - t1915 * t195) + (t207 * pkin(9) * t2717 - t45 * t1910 * t209 + pkin(3) * t2722) * t1891;
t2745 = t1887 * (-t2 * t2094 * t1881 + t2098 * t1989) - t2 * t1881 * t2108 - t2113 * t1989;
t2749 = -t184 * t181 * t2258 + t329 * t281 * t2279 - t453 * t392 * t2290 - t184 * t588 * t2349 + t694 * t654 * t2370 - t802 * t748 * t2381 - t184 * t937 * t2440 + t1043 * t1003 * t2461 - t1151 * t1097 * t2472 - t184 * t1286 * t2531 + t1392 * t1352 * t2552 - t1500 * t1446 * t2563 - t184 * t1635 * t2622 + t1741 * t1701 * t2643 - t1849 * t1795 * t2654 - t184 * t1984 * t2713 + t2090 * t2050 * t2734 - t2198 * t2144 * t2745 - m(4) * g(2);
t2753 = sin(xP(6));
t2755 = cos(xP(6));
t2757 = -koppelP(1,2) * t2753 + t2755 * koppelP(1,1);
t2758 = sin(xP(5));
t2760 = cos(xP(5));
t2761 = koppelP(1,3) * t2760;
t2762 = t2758 * t2757 - t2761;
t2763 = cos(xP(4));
t2765 = sin(xP(4));
t2768 = koppelP(1,1) * t2753 + t2755 * koppelP(1,2);
t2769 = t2768 * t2765;
t2770 = t2763 * t2762 - t2769;
t2774 = t2768 * t2763;
t2779 = t329 * t281;
t2783 = m(3) * t452 * t392;
t2787 = -koppelP(2,2) * t2753 + t2755 * koppelP(2,1);
t2789 = koppelP(2,3) * t2760;
t2790 = t2758 * t2787 - t2789;
t2794 = koppelP(2,1) * t2753 + t2755 * koppelP(2,2);
t2795 = t2794 * t2765;
t2796 = t2763 * t2790 - t2795;
t2800 = t2794 * t2763;
t2805 = t694 * t654;
t2809 = m(3) * t801 * t748;
t2813 = -koppelP(3,2) * t2753 + t2755 * koppelP(3,1);
t2815 = koppelP(3,3) * t2760;
t2816 = t2758 * t2813 - t2815;
t2820 = koppelP(3,1) * t2753 + t2755 * koppelP(3,2);
t2821 = t2820 * t2765;
t2822 = t2763 * t2816 - t2821;
t2826 = t2820 * t2763;
t2831 = t1043 * t1003;
t2835 = m(3) * t1150 * t1097;
t2839 = -koppelP(4,2) * t2753 + t2755 * koppelP(4,1);
t2841 = koppelP(4,3) * t2760;
t2842 = t2758 * t2839 - t2841;
t2846 = koppelP(4,1) * t2753 + t2755 * koppelP(4,2);
t2847 = t2846 * t2765;
t2848 = t2763 * t2842 - t2847;
t2852 = t2846 * t2763;
t2857 = t1392 * t1352;
t2861 = m(3) * t1499 * t1446;
t2865 = -koppelP(5,2) * t2753 + t2755 * koppelP(5,1);
t2867 = koppelP(5,3) * t2760;
t2868 = t2758 * t2865 - t2867;
t2872 = koppelP(5,1) * t2753 + t2755 * koppelP(5,2);
t2873 = t2872 * t2765;
t2874 = t2763 * t2868 - t2873;
t2878 = t2872 * t2763;
t2883 = t1741 * t1701;
t2887 = m(3) * t1848 * t1795;
t2891 = -koppelP(6,2) * t2753 + t2755 * koppelP(6,1);
t2893 = koppelP(6,3) * t2760;
t2894 = t2758 * t2891 - t2893;
t2898 = koppelP(6,1) * t2753 + t2755 * koppelP(6,2);
t2899 = t2898 * t2765;
t2900 = t2763 * t2894 - t2899;
t2904 = t2898 * t2763;
t2909 = t2090 * t2050;
t2913 = m(3) * t2197 * t2144;
t2915 = t2758 * g(2);
t2917 = g(3) * rSges(4,2);
t2920 = rSges(4,2) * t2753;
t2928 = g(3) * t2758;
t2935 = t2753 * g(2);
t2943 = -t183 * g(3) * (t181 * t2258 * t2770 + t2765 * t2762 + t2774) + t2779 * t2279 * t2770 - t2783 * t2290 * t2770 - t183 * g(3) * (t588 * t2349 * t2796 + t2765 * t2790 + t2800) + t2805 * t2370 * t2796 - t2809 * t2381 * t2796 - t183 * g(3) * (t937 * t2440 * t2822 + t2765 * t2816 + t2826) + t2831 * t2461 * t2822 - t2835 * t2472 * t2822 - t183 * g(3) * (t1286 * t2531 * t2848 + t2765 * t2842 + t2852) + t2857 * t2552 * t2848 - t2861 * t2563 * t2848 - t183 * g(3) * (t1635 * t2622 * t2874 + t2765 * t2868 + t2878) + t2883 * t2643 * t2874 - t2887 * t2654 * t2874 - t183 * g(3) * (t1984 * t2713 * t2900 + t2765 * t2894 + t2904) + t2909 * t2734 * t2900 - t2913 * t2745 * t2900 + (t2763 * (t2755 * (-rSges(4,1) * t2915 - t2917) + t2920 * t2915 + rSges(4,3) * t2760 * g(2) - t2753 * rSges(4,1) * g(3)) + t2765 * (t2755 * (g(2) * rSges(4,2) - rSges(4,1) * t2928) + t2917 * t2753 * t2758 + rSges(4,1) * t2935 + rSges(4,3) * g(3) * t2760)) * m(4);
t2945 = -t2758 * t2757 + t2761;
t2947 = t2763 * t2945 + t2769;
t2950 = t2755 * t2760;
t2951 = koppelP(1,1) * t2950;
t2952 = t2753 * t2760;
t2953 = koppelP(1,2) * t2952;
t2954 = koppelP(1,3) * t2758;
t2963 = -t2758 * t2787 + t2789;
t2965 = t2963 * t2763 + t2795;
t2968 = koppelP(2,1) * t2950;
t2969 = koppelP(2,2) * t2952;
t2970 = koppelP(2,3) * t2758;
t2979 = -t2758 * t2813 + t2815;
t2981 = t2979 * t2763 + t2821;
t2984 = koppelP(3,1) * t2950;
t2985 = koppelP(3,2) * t2952;
t2986 = koppelP(3,3) * t2758;
t2995 = -t2758 * t2839 + t2841;
t2997 = t2995 * t2763 + t2847;
t3000 = koppelP(4,1) * t2950;
t3001 = koppelP(4,2) * t2952;
t3002 = koppelP(4,3) * t2758;
t3011 = -t2758 * t2865 + t2867;
t3013 = t3011 * t2763 + t2873;
t3016 = koppelP(5,1) * t2950;
t3017 = koppelP(5,2) * t2952;
t3018 = koppelP(5,3) * t2758;
t3027 = -t2758 * t2891 + t2893;
t3029 = t3027 * t2763 + t2899;
t3032 = koppelP(6,1) * t2950;
t3033 = koppelP(6,2) * t2952;
t3034 = koppelP(6,3) * t2758;
t3044 = rSges(4,1) * t2755 - t2920;
t3055 = g(1) * rSges(4,1);
t3060 = -t183 * g(3) * (t181 * t119 * t2947 - t2951 + t2953 - t2954) + t2779 * t216 * t2947 - t2783 * t354 * t2947 - t183 * g(3) * (t588 * t543 * t2965 - t2968 + t2969 - t2970) + t2805 * t618 * t2965 - t2809 * t719 * t2965 - t183 * g(3) * (t937 * t892 * t2981 - t2984 + t2985 - t2986) + t2831 * t967 * t2981 - t2835 * t1068 * t2981 - t183 * g(3) * (t1286 * t1241 * t2997 - t3000 + t3001 - t3002) + t2857 * t1316 * t2997 - t2861 * t1417 * t2997 - t183 * g(3) * (t1635 * t1590 * t3013 - t3016 + t3017 - t3018) + t2883 * t1665 * t3013 - t2887 * t1766 * t3013 - t183 * g(3) * (t1984 * t1939 * t3029 - t3032 + t3033 - t3034) + t2909 * t2014 * t3029 - t2913 * t2115 * t3029 - (t2763 * g(1) * (-t3044 * t2758 + rSges(4,3) * t2760) - t2760 * t3044 * g(3) + g(1) * rSges(4,2) * t2765 * t2755 + t3055 * t2753 * t2765 - rSges(4,3) * t2928) * m(4);
t3062 = t2765 * t2945 - t2774;
t3065 = t2951 - t2953 + t2954;
t3085 = t2963 * t2765 - t2800;
t3088 = t2968 - t2969 + t2970;
t3108 = t2979 * t2765 - t2826;
t3111 = t2984 - t2985 + t2986;
t3131 = t2995 * t2765 - t2852;
t3134 = t3000 - t3001 + t3002;
t3154 = t3011 * t2765 - t2878;
t3157 = t3016 - t3017 + t3018;
t3177 = t3027 * t2765 - t2904;
t3180 = t3032 - t3033 + t3034;
t3221 = -t183 * g(3) * (t181 * t119 * t3062 + t181 * t2258 * t3065) + t329 * (t281 * t216 * t3062 + t281 * t2279 * t3065) - m(3) * t452 * (t392 * t2290 * t3065 + t392 * t354 * t3062) - t183 * g(3) * (t588 * t2349 * t3088 + t588 * t543 * t3085) + t694 * (t654 * t2370 * t3088 + t654 * t618 * t3085) - m(3) * t801 * (t748 * t2381 * t3088 + t748 * t719 * t3085) - t183 * g(3) * (t937 * t2440 * t3111 + t937 * t892 * t3108) + t1043 * (t1003 * t2461 * t3111 + t1003 * t967 * t3108) - m(3) * t1150 * (t1097 * t1068 * t3108 + t1097 * t2472 * t3111) - t183 * g(3) * (t1286 * t1241 * t3131 + t1286 * t2531 * t3134) + t1392 * (t1352 * t1316 * t3131 + t1352 * t2552 * t3134) - m(3) * t1499 * (t1446 * t1417 * t3131 + t1446 * t2563 * t3134) - t183 * g(3) * (t1635 * t1590 * t3154 + t1635 * t2622 * t3157) + t1741 * (t1701 * t1665 * t3154 + t1701 * t2643 * t3157) - m(3) * t1848 * (t1795 * t1766 * t3154 + t1795 * t2654 * t3157) - t183 * g(3) * (t1984 * t1939 * t3177 + t1984 * t2713 * t3180) + t2090 * (t2050 * t2014 * t3177 + t2050 * t2734 * t3180) - m(3) * t2197 * (t2144 * t2115 * t3177 + t2144 * t2745 * t3180) + (t2760 * (-rSges(4,3) * t2765 * g(1) - t2755 * rSges(4,1) * g(2) + rSges(4,2) * t2935) + t2755 * (t2765 * rSges(4,1) * t2758 + rSges(4,2) * t2763) * g(1) - rSges(4,2) * g(1) * t2753 * t2765 * t2758 + t3055 * t2753 * t2763 - rSges(4,3) * t2915) * m(4);
unknown(1,1) = t2201;
unknown(2,1) = t2749;
unknown(3,1) = -m(4) * g(3) - 0.6e1 * t184;
unknown(4,1) = t2943;
unknown(5,1) = t3060;
unknown(6,1) = t3221;
taugX  = unknown;
