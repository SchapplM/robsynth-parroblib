% Calculate Gravitation load for parallel robot
% P6PRRRRR6V2G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
%
% Output:
% taugX [6x1]
%   forces required to compensate gravitation load
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 01:01
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2(xP, qJ, g, legFrame, ...
  koppelP, pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: g has to be [3x1] (double)');
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_gravload_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From gravvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:53:50
% EndTime: 2020-03-12 23:53:52
% DurationCPUTime: 1.44s
% Computational Cost: add. (11222->1227), mult. (28364->2418), div. (108->18), fcn. (23825->50), ass. (0->728)
unknown=NaN(6,1);
t1 = sin(pkin(10));
t2 = cos(pkin(4));
t3 = t2 * t1;
t4 = cos(qJ(2,1));
t6 = cos(pkin(10));
t7 = sin(qJ(2,1));
t8 = t7 * t6;
t9 = t4 * t3 + t8;
t10 = cos(legFrame(1,3));
t12 = sin(legFrame(1,3));
t14 = t2 * t6;
t16 = -t7 * t1 + t4 * t14;
t18 = t10 * t9 + t16 * t12;
t19 = t18 * pkin(3);
t20 = sin(pkin(6));
t21 = t20 * pkin(9);
t22 = cos(pkin(5));
t23 = t22 * t21;
t28 = -t7 * t3 + t4 * t6;
t32 = t4 * t1 + t7 * t14;
t34 = t10 * t28 - t32 * t12;
t35 = cos(pkin(6));
t36 = t35 ^ 2;
t37 = pkin(9) ^ 2;
t39 = pkin(3) ^ 2;
t40 = t37 * t36 - t37 + t39;
t43 = sin(pkin(5));
t45 = sin(pkin(4));
t46 = t45 * pkin(3);
t47 = t20 * t46;
t48 = t22 - 0.1e1;
t49 = t48 * pkin(9);
t50 = t22 + 0.1e1;
t53 = t10 * t1 + t12 * t6;
t59 = cos(qJ(3,1));
t60 = t59 ^ 2;
t63 = sin(qJ(3,1));
t66 = pkin(9) * t35 + pkin(8);
t72 = pkin(9) * t20 * t63;
t74 = 0.2e1 * t72 + pkin(2);
t79 = t40 * t45;
t81 = t63 * t53 * t79;
t82 = t66 * t19;
t84 = t22 ^ 2;
t86 = t45 * pkin(2);
t87 = t53 * pkin(9);
t88 = t20 * t87;
t92 = t53 * t45;
t93 = t66 * t63;
t98 = t63 * pkin(2);
t100 = pkin(9) * t36;
t101 = t20 * t98 + pkin(9) - t100;
t106 = t66 * t18;
t111 = t84 * t20;
t114 = pkin(2) * pkin(3);
t119 = t60 * (t43 * (0.2e1 * t23 * t19 + t40 * t34) + 0.2e1 * t53 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t63 * t40 * t18 + t66 * t53 * t46) + pkin(3) * t34 * t74) + t84 * (-t81 - t82) + t81 - t88 * t86 + t82) + t43 * (-t22 * t20 * (-t93 * t92 + t19) + t101 * t34) * pkin(9) - t111 * pkin(9) * (t63 * t106 + t53 * t46) + t63 * (t21 * t106 + t92 * t114) + t88 * t46;
t121 = pkin(9) * t20 * pkin(3);
t124 = t2 * t50 * t48 * t121;
t125 = t22 * t4;
t133 = 0.2e1 * t60 * (t124 - t45 * (t121 * t125 - t40 * t7 / 0.2e1) * t43);
t134 = t45 * t4;
t135 = t40 * t63;
t137 = pkin(3) * t2;
t138 = t66 * t137;
t141 = pkin(3) * t7;
t146 = t40 * t2;
t147 = t63 * t146;
t148 = pkin(3) * t4;
t149 = t66 * t45;
t150 = t149 * t148;
t153 = t2 * pkin(2);
t154 = t21 * t153;
t157 = t66 * t2;
t163 = t45 * t7;
t172 = t66 * t21;
t174 = pkin(3) * t153;
t177 = t20 * t2;
t178 = pkin(3) * pkin(9);
t179 = t178 * t177;
t181 = 0.1e1 / (t133 + t59 * (t43 * (t22 * (t135 * t134 + t138) + t74 * t45 * t141) + t84 * (-t147 + t150) + t147 - t154 - t150) + t43 * pkin(9) * (t22 * t20 * (t45 * t148 + t63 * t157) + t101 * t163) + t111 * (t93 * t134 - t137) * pkin(9) + t63 * (-t172 * t134 + t174) + t179);
t183 = m(1) + m(2) + m(3);
t184 = t183 * g(3);
t188 = -t12 * t1 + t10 * t6;
t189 = t188 * t4;
t191 = t53 * t7;
t192 = t2 * t189 - t191;
t195 = t43 * pkin(3);
t196 = t45 * t188;
t198 = t188 * t7;
t200 = t53 * t4;
t201 = t2 * t198 + t200;
t207 = t22 * t20;
t209 = t20 * t43;
t210 = t188 * pkin(9);
t216 = t59 * (t22 * pkin(3) * t192 + t20 * pkin(9) * t201 - t196 * t195) + t63 * (t207 * pkin(9) * t192 - t45 * t210 * t209 - pkin(3) * t201);
t219 = 0.2e1 * t121 * t84 * t2;
t221 = t45 * t43;
t222 = t178 * t221;
t225 = t43 * t7;
t227 = 0.2e1 * t179;
t230 = t84 * t146;
t232 = t22 * t40 * t43;
t235 = pkin(9) * t209;
t240 = t84 * t149;
t242 = t66 * t43;
t244 = t22 * t242 * t137;
t248 = t43 * t7 * pkin(2) - t66 * t4;
t254 = t66 * pkin(9);
t255 = t84 * t254;
t259 = t22 * t254;
t260 = t259 * t20 * t43 * t2;
t262 = t45 * t20;
t266 = t84 * pkin(3);
t267 = t266 * t177;
t269 = t20 * t221;
t275 = t45 * (t35 + 0.1e1) * (t35 - 0.1e1);
t277 = pkin(3) * t177;
t281 = 0.1e1 / (t60 * (-0.2e1 * t222 * t20 * t125 + t79 * t225 + t219 - t227) + t59 * (t63 * (0.2e1 * t235 * t45 * t141 + t232 * t134 + t146 - t230) + t240 * t148 + t244 + t45 * t248 * pkin(3) - t154) + t63 * (t262 * pkin(9) * t248 + t255 * t20 * t134 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t125 - t275 * pkin(9) * t225 - t267 + t277));
t289 = t43 * (m(3) * pkin(8) + mrSges(3,3));
t290 = t22 * (-mrSges(3,1) * t63 - mrSges(3,2) * t59) + t289 - mrSges(2,2);
t293 = g(1) * t10 + g(2) * t12;
t294 = t293 * t1;
t297 = -g(1) * t12 + g(2) * t10;
t298 = t297 * t6;
t299 = t294 - t298;
t302 = m(3) * pkin(2);
t305 = t59 * mrSges(3,1) - t63 * mrSges(3,2) + mrSges(2,1) + t302;
t320 = t45 * g(3);
t324 = t7 * (-g(3) * t290 * t45 + t1 * t305 * t297 + t2 * t299 * t290 + t6 * t305 * t293) + (-t1 * t297 * t290 + t2 * t305 * t299 - t6 * t293 * t290 - t305 * t320) * t4;
t328 = t21 * t22 * t7 + t148;
t332 = t21 * t125 - t141;
t336 = t72 + pkin(2);
t340 = pkin(3) * t22 * t63 - t242;
t342 = t4 * t336 - t7 * t340;
t347 = t336 * t7 + t4 * t340;
t349 = t59 * (-t2 * t328 * t188 - t332 * t53) - t2 * t342 * t188 + t347 * t53;
t352 = t22 * t66 * t195;
t354 = pkin(9) * t20 * pkin(2);
t357 = t66 * pkin(3);
t358 = t84 * t357;
t359 = t43 * t63;
t360 = t22 * t40;
t370 = t21 * t266;
t378 = t22 * t195;
t387 = 0.1e1 / (t133 + t59 * (t2 * (-t84 * t135 + t135 + t352 - t354) + t45 * (t4 * (t360 * t359 - t357 + t358) + t74 * t43 * t141)) + t2 * (-t370 + t259 * t20 * t359 + (t98 + t21) * pkin(3)) + pkin(9) * t45 * (t4 * t20 * (t84 * t93 + t378 - t93) + t101 * t225));
t389 = t4 * mrSges(3,1);
t390 = -t22 * t299;
t392 = t297 * mrSges(3,2);
t397 = g(3) * t43 * mrSges(3,1);
t405 = -t1 * t297 * t7 - t6 * t293 * t7 + g(3) * t134;
t408 = t45 * mrSges(3,1);
t411 = t293 * mrSges(3,2);
t420 = mrSges(3,2) * g(3);
t426 = t7 * mrSges(3,1);
t430 = g(3) * mrSges(3,2) * t43;
t446 = t59 * (t2 * (-t294 * mrSges(3,2) * t7 - t390 * t389 + t392 * t8 - t397) - t22 * t405 * mrSges(3,1) + t6 * (t297 * t43 * t408 + t4 * t411) + t1 * (-t293 * t43 * t408 + t4 * t392) + t420 * t163) + (t2 * (t390 * mrSges(3,2) * t4 - t294 * t426 + t298 * t426 + t430) + t22 * t405 * mrSges(3,2) + t6 * (-t392 * t221 + t293 * t389) + t1 * (t411 * t221 + t297 * t389) + t320 * t426) * t63;
t448 = cos(qJ(2,2));
t450 = sin(qJ(2,2));
t451 = t450 * t6;
t452 = t448 * t3 + t451;
t453 = cos(legFrame(2,3));
t455 = sin(legFrame(2,3));
t458 = -t450 * t1 + t448 * t14;
t460 = t453 * t452 + t458 * t455;
t461 = t460 * pkin(3);
t466 = -t450 * t3 + t448 * t6;
t470 = t448 * t1 + t450 * t14;
t472 = t453 * t466 - t470 * t455;
t478 = t453 * t1 + t455 * t6;
t484 = cos(qJ(3,2));
t485 = t484 ^ 2;
t488 = sin(qJ(3,2));
t495 = pkin(9) * t20 * t488;
t497 = 0.2e1 * t495 + pkin(2);
t503 = t488 * t478 * t79;
t504 = t66 * t461;
t507 = t478 * pkin(9);
t508 = t20 * t507;
t512 = t478 * t45;
t513 = t66 * t488;
t518 = t488 * pkin(2);
t520 = t20 * t518 + pkin(9) - t100;
t525 = t66 * t460;
t536 = t485 * (t43 * (0.2e1 * t23 * t461 + t40 * t472) + 0.2e1 * t478 * t50 * t49 * t47) + t484 * (t43 * (t22 * (-t488 * t40 * t460 + t66 * t478 * t46) + pkin(3) * t472 * t497) + t84 * (-t503 - t504) + t503 - t508 * t86 + t504) + t43 * (-t22 * t20 * (-t513 * t512 + t461) + t520 * t472) * pkin(9) - t111 * pkin(9) * (t478 * t46 + t488 * t525) + t488 * (t512 * t114 + t21 * t525) + t508 * t46;
t537 = t22 * t448;
t545 = 0.2e1 * t485 * (t124 - t45 * (t121 * t537 - t40 * t450 / 0.2e1) * t43);
t546 = t45 * t448;
t547 = t40 * t488;
t551 = pkin(3) * t450;
t556 = t488 * t146;
t557 = pkin(3) * t448;
t558 = t149 * t557;
t568 = t45 * t450;
t581 = 0.1e1 / (t545 + t484 * (t43 * (t22 * (t547 * t546 + t138) + t497 * t45 * t551) + t84 * (-t556 + t558) + t556 - t154 - t558) + t43 * pkin(9) * (t22 * t20 * (t488 * t157 + t45 * t557) + t520 * t568) + t111 * (t513 * t546 - t137) * pkin(9) + t488 * (-t172 * t546 + t174) + t179);
t586 = -t455 * t1 + t453 * t6;
t587 = t586 * t448;
t589 = t478 * t450;
t590 = t2 * t587 - t589;
t593 = t45 * t586;
t595 = t586 * t450;
t597 = t478 * t448;
t598 = t2 * t595 + t597;
t605 = t586 * pkin(9);
t611 = t484 * (t22 * pkin(3) * t590 + t20 * pkin(9) * t598 - t593 * t195) + t488 * (t207 * pkin(9) * t590 - t45 * t605 * t209 - pkin(3) * t598);
t615 = t43 * t450;
t629 = t43 * t450 * pkin(2) - t66 * t448;
t647 = 0.1e1 / (t485 * (-0.2e1 * t222 * t20 * t537 + t79 * t615 + t219 - t227) + t484 * (t488 * (0.2e1 * t235 * t45 * t551 + t232 * t546 + t146 - t230) + t240 * t557 + t244 + t45 * t629 * pkin(3) - t154) + t488 * (t262 * pkin(9) * t629 + t255 * t20 * t546 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t537 - t275 * pkin(9) * t615 - t267 + t277));
t653 = t22 * (-mrSges(3,1) * t488 - mrSges(3,2) * t484) + t289 - mrSges(2,2);
t656 = g(1) * t453 + g(2) * t455;
t657 = t656 * t1;
t660 = -g(1) * t455 + g(2) * t453;
t661 = t660 * t6;
t662 = t657 - t661;
t667 = t484 * mrSges(3,1) - t488 * mrSges(3,2) + mrSges(2,1) + t302;
t685 = t450 * (-g(3) * t653 * t45 + t1 * t667 * t660 + t2 * t662 * t653 + t6 * t667 * t656) + (-t1 * t660 * t653 + t2 * t667 * t662 - t6 * t656 * t653 - t667 * t320) * t448;
t689 = t21 * t22 * t450 + t557;
t693 = t21 * t537 - t551;
t697 = t495 + pkin(2);
t701 = pkin(3) * t22 * t488 - t242;
t703 = t448 * t697 - t450 * t701;
t708 = t448 * t701 + t697 * t450;
t710 = t484 * (-t2 * t689 * t586 - t693 * t478) - t2 * t703 * t586 + t708 * t478;
t714 = t43 * t488;
t739 = 0.1e1 / (t545 + t484 * (t2 * (-t84 * t547 + t352 - t354 + t547) + t45 * (t448 * (t360 * t714 - t357 + t358) + t497 * t43 * t551)) + t2 * (-t370 + t259 * t20 * t714 + (t518 + t21) * pkin(3)) + pkin(9) * t45 * (t448 * t20 * (t84 * t513 + t378 - t513) + t520 * t615));
t741 = t448 * mrSges(3,1);
t742 = -t22 * t662;
t744 = t660 * mrSges(3,2);
t755 = -t1 * t660 * t450 - t6 * t656 * t450 + g(3) * t546;
t760 = t656 * mrSges(3,2);
t774 = t450 * mrSges(3,1);
t792 = t484 * (t2 * (-t657 * mrSges(3,2) * t450 + t744 * t451 - t742 * t741 - t397) - t22 * t755 * mrSges(3,1) + t6 * (t660 * t43 * t408 + t448 * t760) + t1 * (-t656 * t43 * t408 + t448 * t744) + t420 * t568) + (t2 * (t742 * mrSges(3,2) * t448 - t657 * t774 + t661 * t774 + t430) + t22 * t755 * mrSges(3,2) + t6 * (-t744 * t221 + t656 * t741) + t1 * (t760 * t221 + t660 * t741) + t320 * t774) * t488;
t794 = cos(qJ(2,3));
t796 = sin(qJ(2,3));
t797 = t796 * t6;
t798 = t794 * t3 + t797;
t799 = cos(legFrame(3,3));
t801 = sin(legFrame(3,3));
t804 = -t796 * t1 + t794 * t14;
t806 = t799 * t798 + t804 * t801;
t807 = t806 * pkin(3);
t812 = -t796 * t3 + t794 * t6;
t816 = t794 * t1 + t796 * t14;
t818 = t799 * t812 - t816 * t801;
t824 = t799 * t1 + t801 * t6;
t830 = cos(qJ(3,3));
t831 = t830 ^ 2;
t834 = sin(qJ(3,3));
t841 = pkin(9) * t20 * t834;
t843 = 0.2e1 * t841 + pkin(2);
t849 = t834 * t824 * t79;
t850 = t66 * t807;
t853 = t824 * pkin(9);
t854 = t20 * t853;
t858 = t824 * t45;
t859 = t66 * t834;
t864 = t834 * pkin(2);
t866 = t20 * t864 + pkin(9) - t100;
t871 = t66 * t806;
t882 = t831 * (t43 * (0.2e1 * t23 * t807 + t40 * t818) + 0.2e1 * t824 * t50 * t49 * t47) + t830 * (t43 * (t22 * (-t834 * t40 * t806 + t66 * t824 * t46) + pkin(3) * t818 * t843) + t84 * (-t849 - t850) + t849 - t854 * t86 + t850) + t43 * (-t22 * t20 * (-t859 * t858 + t807) + t866 * t818) * pkin(9) - t111 * pkin(9) * (t824 * t46 + t834 * t871) + t834 * (t858 * t114 + t21 * t871) + t854 * t46;
t883 = t22 * t794;
t891 = 0.2e1 * t831 * (t124 - t45 * (t121 * t883 - t40 * t796 / 0.2e1) * t43);
t892 = t45 * t794;
t893 = t40 * t834;
t897 = pkin(3) * t796;
t902 = t834 * t146;
t903 = pkin(3) * t794;
t904 = t149 * t903;
t914 = t45 * t796;
t927 = 0.1e1 / (t891 + t830 * (t43 * (t22 * (t893 * t892 + t138) + t843 * t45 * t897) + t84 * (-t902 + t904) + t902 - t154 - t904) + t43 * pkin(9) * (t22 * t20 * (t834 * t157 + t45 * t903) + t866 * t914) + t111 * (t859 * t892 - t137) * pkin(9) + t834 * (-t172 * t892 + t174) + t179);
t932 = -t801 * t1 + t799 * t6;
t933 = t932 * t794;
t935 = t824 * t796;
t936 = t2 * t933 - t935;
t939 = t45 * t932;
t941 = t932 * t796;
t943 = t824 * t794;
t944 = t2 * t941 + t943;
t951 = t932 * pkin(9);
t957 = t830 * (t22 * pkin(3) * t936 + t20 * pkin(9) * t944 - t939 * t195) + t834 * (t207 * pkin(9) * t936 - t45 * t951 * t209 - pkin(3) * t944);
t961 = t43 * t796;
t975 = t43 * t796 * pkin(2) - t66 * t794;
t993 = 0.1e1 / (t831 * (-0.2e1 * t222 * t20 * t883 + t79 * t961 + t219 - t227) + t830 * (t834 * (0.2e1 * t235 * t45 * t897 + t232 * t892 + t146 - t230) + t240 * t903 + t244 + t45 * t975 * pkin(3) - t154) + t834 * (t262 * pkin(9) * t975 + t255 * t20 * t892 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t883 - t275 * pkin(9) * t961 - t267 + t277));
t999 = t22 * (-mrSges(3,1) * t834 - mrSges(3,2) * t830) + t289 - mrSges(2,2);
t1002 = g(1) * t799 + g(2) * t801;
t1003 = t1002 * t1;
t1006 = -g(1) * t801 + g(2) * t799;
t1007 = t1006 * t6;
t1008 = t1003 - t1007;
t1013 = t830 * mrSges(3,1) - t834 * mrSges(3,2) + mrSges(2,1) + t302;
t1031 = t796 * (-g(3) * t999 * t45 + t1 * t1013 * t1006 + t6 * t1013 * t1002 + t2 * t1008 * t999) + (-t1 * t1006 * t999 - t6 * t1002 * t999 + t2 * t1013 * t1008 - t1013 * t320) * t794;
t1035 = t21 * t22 * t796 + t903;
t1039 = t21 * t883 - t897;
t1043 = t841 + pkin(2);
t1047 = pkin(3) * t22 * t834 - t242;
t1049 = t794 * t1043 - t796 * t1047;
t1054 = t1043 * t796 + t794 * t1047;
t1056 = t830 * (-t2 * t1035 * t932 - t1039 * t824) - t2 * t1049 * t932 + t1054 * t824;
t1060 = t43 * t834;
t1085 = 0.1e1 / (t891 + t830 * (t2 * (-t84 * t893 + t352 - t354 + t893) + t45 * (t794 * (t360 * t1060 - t357 + t358) + t843 * t43 * t897)) + t2 * (-t370 + t259 * t20 * t1060 + (t864 + t21) * pkin(3)) + pkin(9) * t45 * (t794 * t20 * (t84 * t859 + t378 - t859) + t866 * t961));
t1087 = t794 * mrSges(3,1);
t1088 = -t22 * t1008;
t1090 = t1006 * mrSges(3,2);
t1101 = -t1 * t1006 * t796 - t6 * t1002 * t796 + g(3) * t892;
t1106 = t1002 * mrSges(3,2);
t1120 = t796 * mrSges(3,1);
t1138 = t830 * (t2 * (-t1003 * mrSges(3,2) * t796 - t1088 * t1087 + t1090 * t797 - t397) - t22 * t1101 * mrSges(3,1) + t6 * (t1006 * t43 * t408 + t794 * t1106) + t1 * (-t1002 * t43 * t408 + t794 * t1090) + t420 * t914) + (t2 * (t1088 * mrSges(3,2) * t794 - t1003 * t1120 + t1007 * t1120 + t430) + t22 * t1101 * mrSges(3,2) + t6 * (t1002 * t1087 - t1090 * t221) + t1 * (t1006 * t1087 + t1106 * t221) + t320 * t1120) * t834;
t1140 = cos(qJ(2,4));
t1142 = sin(qJ(2,4));
t1143 = t1142 * t6;
t1144 = t1140 * t3 + t1143;
t1145 = cos(legFrame(4,3));
t1147 = sin(legFrame(4,3));
t1150 = -t1142 * t1 + t1140 * t14;
t1152 = t1145 * t1144 + t1150 * t1147;
t1153 = t1152 * pkin(3);
t1158 = t1140 * t6 - t1142 * t3;
t1162 = t1140 * t1 + t1142 * t14;
t1164 = t1145 * t1158 - t1162 * t1147;
t1170 = t1145 * t1 + t1147 * t6;
t1176 = cos(qJ(3,4));
t1177 = t1176 ^ 2;
t1180 = sin(qJ(3,4));
t1187 = pkin(9) * t20 * t1180;
t1189 = 0.2e1 * t1187 + pkin(2);
t1195 = t1180 * t1170 * t79;
t1196 = t66 * t1153;
t1199 = t1170 * pkin(9);
t1200 = t20 * t1199;
t1204 = t1170 * t45;
t1205 = t66 * t1180;
t1210 = t1180 * pkin(2);
t1212 = t20 * t1210 + pkin(9) - t100;
t1217 = t66 * t1152;
t1228 = t1177 * (t43 * (0.2e1 * t23 * t1153 + t40 * t1164) + 0.2e1 * t1170 * t50 * t49 * t47) + t1176 * (t43 * (t22 * (-t1180 * t40 * t1152 + t66 * t1170 * t46) + pkin(3) * t1164 * t1189) + t84 * (-t1195 - t1196) + t1195 - t1200 * t86 + t1196) + t43 * (-t22 * t20 * (-t1205 * t1204 + t1153) + t1212 * t1164) * pkin(9) - t111 * pkin(9) * (t1170 * t46 + t1180 * t1217) + t1180 * (t1204 * t114 + t21 * t1217) + t1200 * t46;
t1229 = t22 * t1140;
t1237 = 0.2e1 * t1177 * (t124 - t45 * (t121 * t1229 - t40 * t1142 / 0.2e1) * t43);
t1238 = t45 * t1140;
t1239 = t40 * t1180;
t1243 = pkin(3) * t1142;
t1248 = t1180 * t146;
t1249 = pkin(3) * t1140;
t1250 = t149 * t1249;
t1260 = t45 * t1142;
t1273 = 0.1e1 / (t1237 + t1176 * (t43 * (t22 * (t1239 * t1238 + t138) + t1189 * t45 * t1243) + t84 * (-t1248 + t1250) + t1248 - t154 - t1250) + t43 * pkin(9) * (t22 * t20 * (t1180 * t157 + t45 * t1249) + t1212 * t1260) + t111 * (t1205 * t1238 - t137) * pkin(9) + t1180 * (-t172 * t1238 + t174) + t179);
t1278 = -t1147 * t1 + t1145 * t6;
t1279 = t1278 * t1140;
t1281 = t1170 * t1142;
t1282 = t2 * t1279 - t1281;
t1285 = t45 * t1278;
t1287 = t1278 * t1142;
t1289 = t1170 * t1140;
t1290 = t2 * t1287 + t1289;
t1297 = t1278 * pkin(9);
t1303 = t1176 * (t22 * pkin(3) * t1282 + t20 * pkin(9) * t1290 - t1285 * t195) + t1180 * (t207 * pkin(9) * t1282 - t45 * t1297 * t209 - pkin(3) * t1290);
t1307 = t43 * t1142;
t1321 = t43 * t1142 * pkin(2) - t66 * t1140;
t1339 = 0.1e1 / (t1177 * (-0.2e1 * t222 * t20 * t1229 + t79 * t1307 + t219 - t227) + t1176 * (t1180 * (0.2e1 * t235 * t45 * t1243 + t232 * t1238 + t146 - t230) + t240 * t1249 + t244 + t45 * t1321 * pkin(3) - t154) + t1180 * (t262 * pkin(9) * t1321 + t255 * t20 * t1238 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t1229 - t275 * pkin(9) * t1307 - t267 + t277));
t1345 = t22 * (-mrSges(3,1) * t1180 - mrSges(3,2) * t1176) + t289 - mrSges(2,2);
t1348 = g(1) * t1145 + g(2) * t1147;
t1349 = t1348 * t1;
t1352 = -g(1) * t1147 + g(2) * t1145;
t1353 = t1352 * t6;
t1354 = t1349 - t1353;
t1359 = t1176 * mrSges(3,1) - t1180 * mrSges(3,2) + mrSges(2,1) + t302;
t1377 = t1142 * (-g(3) * t1345 * t45 + t1 * t1359 * t1352 + t2 * t1354 * t1345 + t6 * t1359 * t1348) + (-t1 * t1352 * t1345 - t6 * t1348 * t1345 + t2 * t1359 * t1354 - t1359 * t320) * t1140;
t1381 = t21 * t22 * t1142 + t1249;
t1385 = t21 * t1229 - t1243;
t1389 = t1187 + pkin(2);
t1393 = pkin(3) * t22 * t1180 - t242;
t1395 = t1140 * t1389 - t1142 * t1393;
t1400 = t1140 * t1393 + t1389 * t1142;
t1402 = t1176 * (-t2 * t1381 * t1278 - t1385 * t1170) - t2 * t1395 * t1278 + t1400 * t1170;
t1406 = t43 * t1180;
t1431 = 0.1e1 / (t1237 + t1176 * (t2 * (-t84 * t1239 + t1239 + t352 - t354) + t45 * (t1140 * (t360 * t1406 - t357 + t358) + t1189 * t43 * t1243)) + t2 * (-t370 + t259 * t20 * t1406 + (t1210 + t21) * pkin(3)) + pkin(9) * t45 * (t1140 * t20 * (t84 * t1205 - t1205 + t378) + t1212 * t1307));
t1433 = t1140 * mrSges(3,1);
t1434 = -t22 * t1354;
t1436 = t1352 * mrSges(3,2);
t1447 = -t1 * t1352 * t1142 - t6 * t1348 * t1142 + g(3) * t1238;
t1452 = t1348 * mrSges(3,2);
t1466 = t1142 * mrSges(3,1);
t1484 = t1176 * (t2 * (-t1349 * mrSges(3,2) * t1142 + t1436 * t1143 - t1434 * t1433 - t397) - t22 * t1447 * mrSges(3,1) + t6 * (t1352 * t43 * t408 + t1140 * t1452) + t1 * (-t1348 * t43 * t408 + t1140 * t1436) + t420 * t1260) + (t2 * (t1434 * mrSges(3,2) * t1140 - t1349 * t1466 + t1353 * t1466 + t430) + t22 * t1447 * mrSges(3,2) + t6 * (t1348 * t1433 - t1436 * t221) + t1 * (t1352 * t1433 + t1452 * t221) + t320 * t1466) * t1180;
t1486 = cos(qJ(2,5));
t1488 = sin(qJ(2,5));
t1489 = t1488 * t6;
t1490 = t1486 * t3 + t1489;
t1491 = cos(legFrame(5,3));
t1493 = sin(legFrame(5,3));
t1496 = -t1488 * t1 + t1486 * t14;
t1498 = t1491 * t1490 + t1496 * t1493;
t1499 = t1498 * pkin(3);
t1504 = t1486 * t6 - t1488 * t3;
t1508 = t1486 * t1 + t1488 * t14;
t1510 = t1491 * t1504 - t1508 * t1493;
t1516 = t1491 * t1 + t1493 * t6;
t1522 = cos(qJ(3,5));
t1523 = t1522 ^ 2;
t1526 = sin(qJ(3,5));
t1533 = pkin(9) * t20 * t1526;
t1535 = 0.2e1 * t1533 + pkin(2);
t1541 = t1526 * t1516 * t79;
t1542 = t66 * t1499;
t1545 = t1516 * pkin(9);
t1546 = t20 * t1545;
t1550 = t1516 * t45;
t1551 = t66 * t1526;
t1556 = t1526 * pkin(2);
t1558 = t20 * t1556 + pkin(9) - t100;
t1563 = t66 * t1498;
t1574 = t1523 * (t43 * (0.2e1 * t23 * t1499 + t40 * t1510) + 0.2e1 * t1516 * t50 * t49 * t47) + t1522 * (t43 * (t22 * (-t1526 * t40 * t1498 + t66 * t1516 * t46) + pkin(3) * t1510 * t1535) + t84 * (-t1541 - t1542) + t1541 - t1546 * t86 + t1542) + t43 * (-t22 * t20 * (-t1551 * t1550 + t1499) + t1558 * t1510) * pkin(9) - t111 * pkin(9) * (t1516 * t46 + t1526 * t1563) + t1526 * (t1550 * t114 + t21 * t1563) + t1546 * t46;
t1575 = t22 * t1486;
t1583 = 0.2e1 * t1523 * (t124 - t45 * (t121 * t1575 - t40 * t1488 / 0.2e1) * t43);
t1584 = t45 * t1486;
t1585 = t40 * t1526;
t1589 = pkin(3) * t1488;
t1594 = t1526 * t146;
t1595 = pkin(3) * t1486;
t1596 = t149 * t1595;
t1606 = t45 * t1488;
t1619 = 0.1e1 / (t1583 + t1522 * (t43 * (t22 * (t1585 * t1584 + t138) + t1535 * t45 * t1589) + t84 * (-t1594 + t1596) + t1594 - t154 - t1596) + t43 * pkin(9) * (t22 * t20 * (t1526 * t157 + t45 * t1595) + t1558 * t1606) + t111 * (t1551 * t1584 - t137) * pkin(9) + t1526 * (-t172 * t1584 + t174) + t179);
t1624 = -t1493 * t1 + t1491 * t6;
t1625 = t1624 * t1486;
t1627 = t1516 * t1488;
t1628 = t2 * t1625 - t1627;
t1631 = t45 * t1624;
t1633 = t1624 * t1488;
t1635 = t1516 * t1486;
t1636 = t2 * t1633 + t1635;
t1643 = t1624 * pkin(9);
t1649 = t1522 * (t22 * pkin(3) * t1628 + t20 * pkin(9) * t1636 - t1631 * t195) + t1526 * (t207 * pkin(9) * t1628 - t45 * t1643 * t209 - pkin(3) * t1636);
t1653 = t43 * t1488;
t1667 = t43 * t1488 * pkin(2) - t66 * t1486;
t1685 = 0.1e1 / (t1523 * (-0.2e1 * t222 * t20 * t1575 + t79 * t1653 + t219 - t227) + t1522 * (t1526 * (0.2e1 * t235 * t45 * t1589 + t232 * t1584 + t146 - t230) + t240 * t1595 + t244 + t45 * t1667 * pkin(3) - t154) + t1526 * (t262 * pkin(9) * t1667 + t255 * t20 * t1584 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t1575 - t275 * pkin(9) * t1653 - t267 + t277));
t1691 = t22 * (-mrSges(3,1) * t1526 - mrSges(3,2) * t1522) + t289 - mrSges(2,2);
t1694 = g(1) * t1491 + g(2) * t1493;
t1695 = t1694 * t1;
t1698 = -g(1) * t1493 + g(2) * t1491;
t1699 = t1698 * t6;
t1700 = t1695 - t1699;
t1705 = t1522 * mrSges(3,1) - t1526 * mrSges(3,2) + mrSges(2,1) + t302;
t1723 = t1488 * (-g(3) * t1691 * t45 + t1 * t1705 * t1698 + t2 * t1700 * t1691 + t6 * t1705 * t1694) + (-t1 * t1698 * t1691 - t6 * t1694 * t1691 + t2 * t1705 * t1700 - t1705 * t320) * t1486;
t1727 = t21 * t22 * t1488 + t1595;
t1731 = t21 * t1575 - t1589;
t1735 = t1533 + pkin(2);
t1739 = pkin(3) * t22 * t1526 - t242;
t1741 = t1486 * t1735 - t1488 * t1739;
t1746 = t1486 * t1739 + t1735 * t1488;
t1748 = t1522 * (-t2 * t1727 * t1624 - t1731 * t1516) - t2 * t1741 * t1624 + t1746 * t1516;
t1752 = t43 * t1526;
t1777 = 0.1e1 / (t1583 + t1522 * (t2 * (-t84 * t1585 + t1585 + t352 - t354) + t45 * (t1486 * (t360 * t1752 - t357 + t358) + t1535 * t43 * t1589)) + t2 * (-t370 + t259 * t20 * t1752 + (t1556 + t21) * pkin(3)) + pkin(9) * t45 * (t1486 * t20 * (t84 * t1551 - t1551 + t378) + t1558 * t1653));
t1779 = t1486 * mrSges(3,1);
t1780 = -t22 * t1700;
t1782 = t1698 * mrSges(3,2);
t1793 = -t1 * t1698 * t1488 - t6 * t1694 * t1488 + g(3) * t1584;
t1798 = t1694 * mrSges(3,2);
t1812 = t1488 * mrSges(3,1);
t1830 = t1522 * (t2 * (-t1695 * mrSges(3,2) * t1488 + t1782 * t1489 - t1780 * t1779 - t397) - t22 * t1793 * mrSges(3,1) + t6 * (t1698 * t43 * t408 + t1486 * t1798) + t1 * (-t1694 * t43 * t408 + t1486 * t1782) + t420 * t1606) + (t2 * (t1780 * mrSges(3,2) * t1486 - t1695 * t1812 + t1699 * t1812 + t430) + t22 * t1793 * mrSges(3,2) + t6 * (t1694 * t1779 - t1782 * t221) + t1 * (t1698 * t1779 + t1798 * t221) + t320 * t1812) * t1526;
t1832 = cos(qJ(2,6));
t1834 = sin(qJ(2,6));
t1835 = t1834 * t6;
t1836 = t1832 * t3 + t1835;
t1837 = cos(legFrame(6,3));
t1839 = sin(legFrame(6,3));
t1842 = -t1834 * t1 + t1832 * t14;
t1844 = t1837 * t1836 + t1842 * t1839;
t1845 = t1844 * pkin(3);
t1850 = t1832 * t6 - t1834 * t3;
t1854 = t1832 * t1 + t1834 * t14;
t1856 = t1837 * t1850 - t1854 * t1839;
t1862 = t1837 * t1 + t1839 * t6;
t1868 = cos(qJ(3,6));
t1869 = t1868 ^ 2;
t1872 = sin(qJ(3,6));
t1879 = pkin(9) * t20 * t1872;
t1881 = 0.2e1 * t1879 + pkin(2);
t1887 = t1872 * t1862 * t79;
t1888 = t66 * t1845;
t1891 = t1862 * pkin(9);
t1892 = t20 * t1891;
t1896 = t1862 * t45;
t1897 = t66 * t1872;
t1902 = t1872 * pkin(2);
t1904 = t20 * t1902 + pkin(9) - t100;
t1909 = t66 * t1844;
t1920 = t1869 * (t43 * (0.2e1 * t23 * t1845 + t40 * t1856) + 0.2e1 * t1862 * t50 * t49 * t47) + t1868 * (t43 * (t22 * (-t1872 * t40 * t1844 + t66 * t1862 * t46) + pkin(3) * t1856 * t1881) + t84 * (-t1887 - t1888) + t1887 - t1892 * t86 + t1888) + t43 * (-t22 * t20 * (-t1897 * t1896 + t1845) + t1904 * t1856) * pkin(9) - t111 * pkin(9) * (t1862 * t46 + t1872 * t1909) + t1872 * (t1896 * t114 + t21 * t1909) + t1892 * t46;
t1921 = t22 * t1832;
t1929 = 0.2e1 * t1869 * (t124 - t45 * (t121 * t1921 - t40 * t1834 / 0.2e1) * t43);
t1930 = t45 * t1832;
t1931 = t40 * t1872;
t1935 = pkin(3) * t1834;
t1940 = t1872 * t146;
t1941 = pkin(3) * t1832;
t1942 = t149 * t1941;
t1952 = t45 * t1834;
t1965 = 0.1e1 / (t1929 + t1868 * (t43 * (t22 * (t1931 * t1930 + t138) + t1881 * t45 * t1935) + t84 * (-t1940 + t1942) + t1940 - t154 - t1942) + t43 * pkin(9) * (t22 * t20 * (t1872 * t157 + t45 * t1941) + t1904 * t1952) + t111 * (t1897 * t1930 - t137) * pkin(9) + t1872 * (-t172 * t1930 + t174) + t179);
t1970 = -t1839 * t1 + t1837 * t6;
t1971 = t1970 * t1832;
t1973 = t1862 * t1834;
t1974 = t2 * t1971 - t1973;
t1977 = t45 * t1970;
t1979 = t1970 * t1834;
t1981 = t1862 * t1832;
t1982 = t2 * t1979 + t1981;
t1989 = t1970 * pkin(9);
t1995 = t1868 * (t22 * pkin(3) * t1974 + t20 * pkin(9) * t1982 - t1977 * t195) + t1872 * (t207 * pkin(9) * t1974 - t45 * t1989 * t209 - pkin(3) * t1982);
t1999 = t43 * t1834;
t2013 = t43 * t1834 * pkin(2) - t66 * t1832;
t2031 = 0.1e1 / (t1869 * (-0.2e1 * t222 * t20 * t1921 + t79 * t1999 + t219 - t227) + t1868 * (t1872 * (0.2e1 * t235 * t45 * t1935 + t232 * t1930 + t146 - t230) + t240 * t1941 + t244 + t45 * t2013 * pkin(3) - t154) + t1872 * (t262 * pkin(9) * t2013 + t255 * t20 * t1930 + t174 + t260) + pkin(9) * (t269 * pkin(3) * t1921 - t275 * pkin(9) * t1999 - t267 + t277));
t2037 = t22 * (-mrSges(3,1) * t1872 - mrSges(3,2) * t1868) + t289 - mrSges(2,2);
t2040 = g(1) * t1837 + g(2) * t1839;
t2041 = t2040 * t1;
t2044 = -g(1) * t1839 + g(2) * t1837;
t2045 = t2044 * t6;
t2046 = t2041 - t2045;
t2051 = t1868 * mrSges(3,1) - t1872 * mrSges(3,2) + mrSges(2,1) + t302;
t2069 = t1834 * (-g(3) * t2037 * t45 + t1 * t2051 * t2044 + t2 * t2046 * t2037 + t6 * t2051 * t2040) + (-t1 * t2044 * t2037 + t2 * t2051 * t2046 - t6 * t2040 * t2037 - t2051 * t320) * t1832;
t2073 = t21 * t22 * t1834 + t1941;
t2077 = t21 * t1921 - t1935;
t2081 = t1879 + pkin(2);
t2085 = pkin(3) * t22 * t1872 - t242;
t2087 = t1832 * t2081 - t1834 * t2085;
t2092 = t1832 * t2085 + t2081 * t1834;
t2094 = t1868 * (-t2 * t2073 * t1970 - t2077 * t1862) - t2 * t2087 * t1970 + t2092 * t1862;
t2098 = t43 * t1872;
t2123 = 0.1e1 / (t1929 + t1868 * (t2 * (-t84 * t1931 + t1931 + t352 - t354) + t45 * (t1832 * (t360 * t2098 - t357 + t358) + t1881 * t43 * t1935)) + t2 * (-t370 + t259 * t20 * t2098 + (t1902 + t21) * pkin(3)) + pkin(9) * t45 * (t1832 * t20 * (t84 * t1897 - t1897 + t378) + t1904 * t1999));
t2125 = t1832 * mrSges(3,1);
t2126 = -t22 * t2046;
t2128 = t2044 * mrSges(3,2);
t2139 = -t1 * t2044 * t1834 - t6 * t2040 * t1834 + g(3) * t1930;
t2144 = t2040 * mrSges(3,2);
t2158 = t1834 * mrSges(3,1);
t2176 = t1868 * (t2 * (-t2041 * mrSges(3,2) * t1834 + t2128 * t1835 - t2126 * t2125 - t397) - t22 * t2139 * mrSges(3,1) + t6 * (t2044 * t43 * t408 + t1832 * t2144) + t1 * (-t2040 * t43 * t408 + t1832 * t2128) + t420 * t1952) + (t2 * (t2126 * mrSges(3,2) * t1832 - t2041 * t2158 + t2045 * t2158 + t430) + t22 * t2139 * mrSges(3,2) + t6 * (t2040 * t2125 - t2128 * t221) + t1 * (t2044 * t2125 + t2144 * t221) + t320 * t2158) * t1872;
t2179 = -t184 * t181 * t119 + t324 * t281 * t216 + t446 * t387 * t349 - t184 * t581 * t536 + t685 * t647 * t611 + t792 * t739 * t710 - t184 * t927 * t882 + t1031 * t993 * t957 + t1138 * t1085 * t1056 - t184 * t1273 * t1228 + t1377 * t1339 * t1303 + t1484 * t1431 * t1402 - t184 * t1619 * t1574 + t1723 * t1685 * t1649 + t1830 * t1777 * t1748 - t184 * t1965 * t1920 + t2069 * t2031 * t1995 + t2176 * t2123 * t2094 - g(1) * m(4);
t2182 = t10 * t16 - t9 * t12;
t2183 = pkin(3) * t2182;
t2188 = t10 * t32 + t28 * t12;
t2209 = t63 * t188 * t79;
t2210 = t66 * t2183;
t2213 = t20 * t210;
t2225 = t66 * t2182;
t2236 = t60 * (t43 * (-0.2e1 * t23 * t2183 + t40 * t2188) - 0.2e1 * t188 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t66 * t188 * t46 + t63 * t40 * t2182) + pkin(3) * t2188 * t74) + t84 * (t2209 + t2210) - t2209 + t2213 * t86 - t2210) + t43 * pkin(9) * (t22 * t20 * (-t93 * t196 + t2183) + t101 * t2188) + t111 * pkin(9) * (t188 * t46 + t63 * t2225) + t63 * (-t196 * t114 - t21 * t2225) - t2213 * t46;
t2240 = t2 * t200 + t198;
t2245 = -t2 * t191 + t189;
t2257 = t59 * (t22 * t2240 * pkin(3) - t20 * pkin(9) * t2245 - t92 * t195) + (t207 * pkin(9) * t2240 - t45 * t87 * t209 + pkin(3) * t2245) * t63;
t2268 = t59 * (-t2 * t328 * t53 + t332 * t188) - t2 * t53 * t342 - t347 * t188;
t2273 = -t452 * t455 + t453 * t458;
t2274 = pkin(3) * t2273;
t2279 = t453 * t470 + t466 * t455;
t2300 = t488 * t586 * t79;
t2301 = t66 * t2274;
t2304 = t20 * t605;
t2316 = t66 * t2273;
t2327 = t485 * (t43 * (-0.2e1 * t23 * t2274 + t40 * t2279) - 0.2e1 * t586 * t50 * t49 * t47) + t484 * (t43 * (t22 * (t488 * t40 * t2273 - t66 * t586 * t46) + pkin(3) * t2279 * t497) + t84 * (t2300 + t2301) - t2300 + t2304 * t86 - t2301) + t43 * pkin(9) * (t22 * t20 * (-t513 * t593 + t2274) + t520 * t2279) + t111 * pkin(9) * (t488 * t2316 + t586 * t46) + t488 * (-t593 * t114 - t21 * t2316) - t2304 * t46;
t2331 = t2 * t597 + t595;
t2336 = -t2 * t589 + t587;
t2348 = t484 * (t22 * t2331 * pkin(3) - t20 * pkin(9) * t2336 - t512 * t195) + (t207 * pkin(9) * t2331 - t45 * t507 * t209 + pkin(3) * t2336) * t488;
t2359 = t484 * (-t2 * t689 * t478 + t693 * t586) - t2 * t478 * t703 - t708 * t586;
t2364 = -t798 * t801 + t799 * t804;
t2365 = pkin(3) * t2364;
t2370 = t799 * t816 + t812 * t801;
t2391 = t834 * t932 * t79;
t2392 = t66 * t2365;
t2395 = t20 * t951;
t2407 = t66 * t2364;
t2418 = t831 * (t43 * (-0.2e1 * t23 * t2365 + t40 * t2370) - 0.2e1 * t932 * t50 * t49 * t47) + t830 * (t43 * (t22 * (t834 * t40 * t2364 - t66 * t932 * t46) + pkin(3) * t2370 * t843) + t84 * (t2391 + t2392) - t2391 + t2395 * t86 - t2392) + t43 * pkin(9) * (t22 * t20 * (-t859 * t939 + t2365) + t866 * t2370) + t111 * pkin(9) * (t834 * t2407 + t932 * t46) + t834 * (-t939 * t114 - t21 * t2407) - t2395 * t46;
t2422 = t2 * t943 + t941;
t2427 = -t2 * t935 + t933;
t2439 = t830 * (t22 * t2422 * pkin(3) - t20 * pkin(9) * t2427 - t858 * t195) + (t207 * pkin(9) * t2422 - t45 * t853 * t209 + pkin(3) * t2427) * t834;
t2450 = t830 * (-t2 * t1035 * t824 + t1039 * t932) - t2 * t824 * t1049 - t1054 * t932;
t2455 = -t1144 * t1147 + t1145 * t1150;
t2456 = pkin(3) * t2455;
t2461 = t1145 * t1162 + t1158 * t1147;
t2482 = t1180 * t1278 * t79;
t2483 = t66 * t2456;
t2486 = t20 * t1297;
t2498 = t66 * t2455;
t2509 = t1177 * (t43 * (-0.2e1 * t23 * t2456 + t40 * t2461) - 0.2e1 * t1278 * t50 * t49 * t47) + t1176 * (t43 * (t22 * (t1180 * t40 * t2455 - t66 * t1278 * t46) + pkin(3) * t2461 * t1189) + t84 * (t2482 + t2483) - t2482 + t2486 * t86 - t2483) + t43 * pkin(9) * (t22 * t20 * (-t1205 * t1285 + t2456) + t1212 * t2461) + t111 * pkin(9) * (t1180 * t2498 + t1278 * t46) + t1180 * (-t1285 * t114 - t21 * t2498) - t2486 * t46;
t2513 = t2 * t1289 + t1287;
t2518 = -t2 * t1281 + t1279;
t2530 = t1176 * (t22 * t2513 * pkin(3) - t20 * pkin(9) * t2518 - t1204 * t195) + (t207 * pkin(9) * t2513 - t45 * t1199 * t209 + pkin(3) * t2518) * t1180;
t2541 = t1176 * (-t2 * t1381 * t1170 + t1385 * t1278) - t2 * t1170 * t1395 - t1400 * t1278;
t2546 = -t1490 * t1493 + t1491 * t1496;
t2547 = pkin(3) * t2546;
t2552 = t1491 * t1508 + t1504 * t1493;
t2573 = t1526 * t1624 * t79;
t2574 = t66 * t2547;
t2577 = t20 * t1643;
t2589 = t66 * t2546;
t2600 = t1523 * (t43 * (-0.2e1 * t23 * t2547 + t40 * t2552) - 0.2e1 * t1624 * t50 * t49 * t47) + t1522 * (t43 * (t22 * (t1526 * t40 * t2546 - t66 * t1624 * t46) + pkin(3) * t2552 * t1535) + t84 * (t2573 + t2574) - t2573 + t2577 * t86 - t2574) + t43 * pkin(9) * (t22 * t20 * (-t1551 * t1631 + t2547) + t1558 * t2552) + t111 * pkin(9) * (t1526 * t2589 + t1624 * t46) + t1526 * (-t1631 * t114 - t21 * t2589) - t2577 * t46;
t2604 = t2 * t1635 + t1633;
t2609 = -t2 * t1627 + t1625;
t2621 = t1522 * (t22 * t2604 * pkin(3) - t20 * pkin(9) * t2609 - t1550 * t195) + (t207 * pkin(9) * t2604 - t45 * t1545 * t209 + pkin(3) * t2609) * t1526;
t2632 = t1522 * (-t2 * t1727 * t1516 + t1731 * t1624) - t2 * t1516 * t1741 - t1746 * t1624;
t2637 = -t1836 * t1839 + t1837 * t1842;
t2638 = pkin(3) * t2637;
t2643 = t1837 * t1854 + t1850 * t1839;
t2664 = t1872 * t1970 * t79;
t2665 = t66 * t2638;
t2668 = t20 * t1989;
t2680 = t66 * t2637;
t2691 = t1869 * (t43 * (-0.2e1 * t23 * t2638 + t40 * t2643) - 0.2e1 * t1970 * t50 * t49 * t47) + t1868 * (t43 * (t22 * (t1872 * t40 * t2637 - t66 * t1970 * t46) + pkin(3) * t2643 * t1881) + t84 * (t2664 + t2665) - t2664 + t2668 * t86 - t2665) + t43 * pkin(9) * (t22 * t20 * (-t1897 * t1977 + t2638) + t1904 * t2643) + t111 * pkin(9) * (t1872 * t2680 + t1970 * t46) + t1872 * (-t1977 * t114 - t21 * t2680) - t2668 * t46;
t2695 = t2 * t1981 + t1979;
t2700 = -t2 * t1973 + t1971;
t2712 = t1868 * (t22 * t2695 * pkin(3) - t20 * pkin(9) * t2700 - t1896 * t195) + (t207 * pkin(9) * t2695 - t45 * t1891 * t209 + pkin(3) * t2700) * t1872;
t2723 = t1868 * (-t2 * t2073 * t1862 + t2077 * t1970) - t2 * t1862 * t2087 - t2092 * t1970;
t2727 = -t184 * t181 * t2236 + t324 * t281 * t2257 + t446 * t387 * t2268 - t184 * t581 * t2327 + t685 * t647 * t2348 + t792 * t739 * t2359 - t184 * t927 * t2418 + t1031 * t993 * t2439 + t1138 * t1085 * t2450 - t184 * t1273 * t2509 + t1377 * t1339 * t2530 + t1484 * t1431 * t2541 - t184 * t1619 * t2600 + t1723 * t1685 * t2621 + t1830 * t1777 * t2632 - t184 * t1965 * t2691 + t2069 * t2031 * t2712 + t2176 * t2123 * t2723 - g(2) * m(4);
t2731 = sin(xP(6));
t2733 = cos(xP(6));
t2735 = -koppelP(1,2) * t2731 + t2733 * koppelP(1,1);
t2736 = sin(xP(5));
t2738 = cos(xP(5));
t2739 = koppelP(1,3) * t2738;
t2740 = t2736 * t2735 - t2739;
t2741 = cos(xP(4));
t2743 = sin(xP(4));
t2746 = koppelP(1,1) * t2731 + t2733 * koppelP(1,2);
t2747 = t2746 * t2743;
t2748 = t2741 * t2740 - t2747;
t2752 = t2746 * t2741;
t2757 = t324 * t281;
t2760 = t446 * t387;
t2764 = -koppelP(2,2) * t2731 + t2733 * koppelP(2,1);
t2766 = koppelP(2,3) * t2738;
t2767 = t2736 * t2764 - t2766;
t2771 = koppelP(2,1) * t2731 + t2733 * koppelP(2,2);
t2772 = t2771 * t2743;
t2773 = t2741 * t2767 - t2772;
t2777 = t2771 * t2741;
t2782 = t685 * t647;
t2785 = t792 * t739;
t2789 = -koppelP(3,2) * t2731 + t2733 * koppelP(3,1);
t2791 = koppelP(3,3) * t2738;
t2792 = t2736 * t2789 - t2791;
t2796 = koppelP(3,1) * t2731 + t2733 * koppelP(3,2);
t2797 = t2796 * t2743;
t2798 = t2741 * t2792 - t2797;
t2802 = t2796 * t2741;
t2807 = t1031 * t993;
t2810 = t1138 * t1085;
t2814 = -koppelP(4,2) * t2731 + t2733 * koppelP(4,1);
t2816 = koppelP(4,3) * t2738;
t2817 = t2736 * t2814 - t2816;
t2821 = koppelP(4,1) * t2731 + t2733 * koppelP(4,2);
t2822 = t2821 * t2743;
t2823 = t2741 * t2817 - t2822;
t2827 = t2821 * t2741;
t2832 = t1377 * t1339;
t2835 = t1484 * t1431;
t2839 = -koppelP(5,2) * t2731 + t2733 * koppelP(5,1);
t2841 = koppelP(5,3) * t2738;
t2842 = t2736 * t2839 - t2841;
t2846 = koppelP(5,1) * t2731 + t2733 * koppelP(5,2);
t2847 = t2846 * t2743;
t2848 = t2741 * t2842 - t2847;
t2852 = t2846 * t2741;
t2857 = t1723 * t1685;
t2860 = t1830 * t1777;
t2864 = -koppelP(6,2) * t2731 + t2733 * koppelP(6,1);
t2866 = koppelP(6,3) * t2738;
t2867 = t2736 * t2864 - t2866;
t2871 = koppelP(6,1) * t2731 + t2733 * koppelP(6,2);
t2872 = t2871 * t2743;
t2873 = t2741 * t2867 - t2872;
t2877 = t2871 * t2741;
t2882 = t2069 * t2031;
t2885 = t2176 * t2123;
t2887 = t2736 * g(2);
t2889 = g(3) * mrSges(4,2);
t2892 = mrSges(4,2) * t2731;
t2900 = g(3) * t2736;
t2907 = t2731 * g(2);
t2913 = -t183 * g(3) * (t181 * t2236 * t2748 + t2743 * t2740 + t2752) + t2757 * t2257 * t2748 + t2760 * t2268 * t2748 - t183 * g(3) * (t581 * t2327 * t2773 + t2743 * t2767 + t2777) + t2782 * t2348 * t2773 + t2785 * t2359 * t2773 - t183 * g(3) * (t927 * t2418 * t2798 + t2743 * t2792 + t2802) + t2807 * t2439 * t2798 + t2810 * t2450 * t2798 - t183 * g(3) * (t1273 * t2509 * t2823 + t2743 * t2817 + t2827) + t2832 * t2530 * t2823 + t2835 * t2541 * t2823 - t183 * g(3) * (t1619 * t2600 * t2848 + t2743 * t2842 + t2852) + t2857 * t2621 * t2848 + t2860 * t2632 * t2848 - t183 * g(3) * (t1965 * t2691 * t2873 + t2743 * t2867 + t2877) + t2882 * t2712 * t2873 + t2885 * t2723 * t2873 - t2741 * (t2733 * (mrSges(4,1) * t2887 + t2889) - t2892 * t2887 - mrSges(4,3) * t2738 * g(2) + t2731 * mrSges(4,1) * g(3)) + (t2733 * (g(2) * mrSges(4,2) - mrSges(4,1) * t2900) + t2889 * t2731 * t2736 + mrSges(4,1) * t2907 + mrSges(4,3) * g(3) * t2738) * t2743;
t2915 = -t2736 * t2735 + t2739;
t2917 = t2741 * t2915 + t2747;
t2920 = t2733 * t2738;
t2921 = koppelP(1,1) * t2920;
t2922 = t2731 * t2738;
t2923 = koppelP(1,2) * t2922;
t2924 = koppelP(1,3) * t2736;
t2933 = -t2736 * t2764 + t2766;
t2935 = t2933 * t2741 + t2772;
t2938 = koppelP(2,1) * t2920;
t2939 = koppelP(2,2) * t2922;
t2940 = koppelP(2,3) * t2736;
t2949 = -t2736 * t2789 + t2791;
t2951 = t2949 * t2741 + t2797;
t2954 = koppelP(3,1) * t2920;
t2955 = koppelP(3,2) * t2922;
t2956 = koppelP(3,3) * t2736;
t2965 = -t2736 * t2814 + t2816;
t2967 = t2965 * t2741 + t2822;
t2970 = koppelP(4,1) * t2920;
t2971 = koppelP(4,2) * t2922;
t2972 = koppelP(4,3) * t2736;
t2978 = -t183 * g(3) * (t181 * t119 * t2917 - t2921 + t2923 - t2924) + t2757 * t216 * t2917 + t2760 * t349 * t2917 - t183 * g(3) * (t581 * t536 * t2935 - t2938 + t2939 - t2940) + t2782 * t611 * t2935 + t2785 * t710 * t2935 - t183 * g(3) * (t927 * t882 * t2951 - t2954 + t2955 - t2956) + t2807 * t957 * t2951 + t2810 * t1056 * t2951 - t183 * g(3) * (t1273 * t1228 * t2967 - t2970 + t2971 - t2972) + t2832 * t1303 * t2967;
t2982 = -t2736 * t2839 + t2841;
t2984 = t2982 * t2741 + t2847;
t2987 = koppelP(5,1) * t2920;
t2988 = koppelP(5,2) * t2922;
t2989 = koppelP(5,3) * t2736;
t2998 = -t2736 * t2864 + t2866;
t3000 = t2998 * t2741 + t2872;
t3003 = koppelP(6,1) * t2920;
t3004 = koppelP(6,2) * t2922;
t3005 = koppelP(6,3) * t2736;
t3015 = mrSges(4,1) * t2733 - t2892;
t3026 = g(1) * mrSges(4,1);
t3029 = t2835 * t1402 * t2967 - t183 * g(3) * (t1619 * t1574 * t2984 - t2987 + t2988 - t2989) + t2857 * t1649 * t2984 + t2860 * t1748 * t2984 - t183 * g(3) * (t1965 * t1920 * t3000 - t3003 + t3004 - t3005) + t2882 * t1995 * t3000 + t2885 * t2094 * t3000 - t2741 * (-t3015 * t2736 + mrSges(4,3) * t2738) * g(1) + t2738 * t3015 * g(3) - g(1) * mrSges(4,2) * t2743 * t2733 - t3026 * t2731 * t2743 + mrSges(4,3) * t2900;
t3032 = t2743 * t2915 - t2752;
t3035 = t2921 - t2923 + t2924;
t3054 = t2933 * t2743 - t2777;
t3057 = t2938 - t2939 + t2940;
t3076 = t2949 * t2743 - t2802;
t3079 = t2954 - t2955 + t2956;
t3098 = t2965 * t2743 - t2827;
t3101 = t2970 - t2971 + t2972;
t3113 = -t183 * g(3) * (t181 * t119 * t3032 + t181 * t2236 * t3035) + t324 * (t281 * t216 * t3032 + t281 * t2257 * t3035) + t446 * (t387 * t2268 * t3035 + t387 * t349 * t3032) - t183 * g(3) * (t581 * t2327 * t3057 + t581 * t536 * t3054) + t685 * (t647 * t2348 * t3057 + t647 * t611 * t3054) + t792 * (t739 * t2359 * t3057 + t739 * t710 * t3054) - t183 * g(3) * (t927 * t2418 * t3079 + t927 * t882 * t3076) + t1031 * (t993 * t2439 * t3079 + t993 * t957 * t3076) + t1138 * (t1085 * t1056 * t3076 + t1085 * t2450 * t3079) - t183 * g(3) * (t1273 * t1228 * t3098 + t1273 * t2509 * t3101) + t1377 * (t1339 * t1303 * t3098 + t1339 * t2530 * t3101);
t3121 = t2982 * t2743 - t2852;
t3124 = t2987 - t2988 + t2989;
t3143 = t2998 * t2743 - t2877;
t3146 = t3003 - t3004 + t3005;
t3171 = t2736 * t2743;
t3183 = t1484 * (t1431 * t1402 * t3098 + t1431 * t2541 * t3101) - t183 * g(3) * (t1619 * t1574 * t3121 + t1619 * t2600 * t3124) + t1723 * (t1685 * t1649 * t3121 + t1685 * t2621 * t3124) + t1830 * (t1777 * t1748 * t3121 + t1777 * t2632 * t3124) - t183 * g(3) * (t1965 * t1920 * t3143 + t1965 * t2691 * t3146) + t2069 * (t2031 * t1995 * t3143 + t2031 * t2712 * t3146) + t2176 * (t2123 * t2094 * t3143 + t2123 * t2723 * t3146) - t2738 * (mrSges(4,3) * t2743 * g(1) + t2733 * mrSges(4,1) * g(2) - mrSges(4,2) * t2907) + t2733 * (t2741 * mrSges(4,2) + mrSges(4,1) * t3171) * g(1) - mrSges(4,2) * g(1) * t2731 * t3171 + t3026 * t2731 * t2741 - mrSges(4,3) * t2887;
unknown(1,1) = t2179;
unknown(2,1) = t2727;
unknown(3,1) = -g(3) * m(4) - 0.6e1 * t184;
unknown(4,1) = t2913;
unknown(5,1) = t2978 + t3029;
unknown(6,1) = t3113 + t3183;
taugX  = unknown;
