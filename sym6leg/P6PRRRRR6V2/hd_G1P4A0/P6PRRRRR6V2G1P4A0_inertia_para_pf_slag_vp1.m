% Calculate inertia matrix for parallel robot
% P6PRRRRR6V2G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 01:01
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:49:05
% EndTime: 2020-03-12 23:49:18
% DurationCPUTime: 13.19s
% Computational Cost: add. (316895->2061), mult. (833830->3608), div. (3780->18), fcn. (694639->50), ass. (0->1234)
unknown=NaN(6,6);
t1 = sin(pkin(10));
t2 = cos(pkin(4));
t3 = t2 * t1;
t4 = cos(qJ(2,1));
t6 = cos(pkin(10));
t7 = sin(qJ(2,1));
t9 = t4 * t3 + t7 * t6;
t10 = cos(legFrame(1,3));
t12 = sin(legFrame(1,3));
t14 = t2 * t6;
t16 = -t7 * t1 + t4 * t14;
t18 = t10 * t9 + t16 * t12;
t19 = t18 * pkin(3);
t20 = sin(pkin(6));
t21 = t20 * pkin(9);
t22 = cos(pkin(5));
t23 = t22 * t21;
t28 = -t7 * t3 + t4 * t6;
t32 = t4 * t1 + t7 * t14;
t34 = t10 * t28 - t32 * t12;
t35 = cos(pkin(6));
t36 = t35 ^ 2;
t37 = pkin(9) ^ 2;
t39 = pkin(3) ^ 2;
t40 = t37 * t36 - t37 + t39;
t43 = sin(pkin(5));
t45 = sin(pkin(4));
t46 = t45 * pkin(3);
t47 = t20 * t46;
t48 = t22 - 0.1e1;
t49 = t48 * pkin(9);
t50 = t22 + 0.1e1;
t53 = t10 * t1 + t12 * t6;
t59 = cos(qJ(3,1));
t60 = t59 ^ 2;
t63 = sin(qJ(3,1));
t66 = pkin(9) * t35 + pkin(8);
t72 = pkin(9) * t20 * t63;
t74 = 0.2e1 * t72 + pkin(2);
t79 = t40 * t45;
t81 = t63 * t53 * t79;
t82 = t66 * t19;
t84 = t22 ^ 2;
t86 = t45 * pkin(2);
t87 = t53 * pkin(9);
t88 = t20 * t87;
t92 = t53 * t45;
t93 = t66 * t63;
t98 = t63 * pkin(2);
t100 = pkin(9) * t36;
t101 = t20 * t98 + pkin(9) - t100;
t106 = t66 * t18;
t111 = t84 * t20;
t114 = pkin(2) * pkin(3);
t119 = t60 * (t43 * (0.2e1 * t23 * t19 + t40 * t34) + 0.2e1 * t53 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t63 * t40 * t18 + t66 * t53 * t46) + pkin(3) * t34 * t74) + t84 * (-t81 - t82) + t81 - t88 * t86 + t82) + t43 * (-t22 * t20 * (-t93 * t92 + t19) + t101 * t34) * pkin(9) - t111 * pkin(9) * (t63 * t106 + t53 * t46) + t63 * (t21 * t106 + t92 * t114) + t88 * t46;
t121 = pkin(9) * t20 * pkin(3);
t124 = t2 * t50 * t48 * t121;
t125 = t22 * t4;
t133 = 0.2e1 * t60 * (t124 - t45 * (t121 * t125 - t40 * t7 / 0.2e1) * t43);
t134 = t45 * t4;
t135 = t40 * t63;
t137 = pkin(3) * t2;
t138 = t66 * t137;
t141 = pkin(3) * t7;
t146 = t40 * t2;
t147 = t63 * t146;
t148 = pkin(3) * t4;
t149 = t66 * t45;
t150 = t149 * t148;
t153 = t2 * pkin(2);
t154 = t21 * t153;
t157 = t66 * t2;
t172 = t66 * t21;
t174 = pkin(3) * t153;
t177 = t20 * t2;
t178 = pkin(3) * pkin(9);
t179 = t178 * t177;
t181 = 0.1e1 / (t133 + t59 * (t43 * (t22 * (t135 * t134 + t138) + t74 * t45 * t141) + t84 * (-t147 + t150) + t147 - t154 - t150) + t43 * pkin(9) * (t22 * t20 * (t45 * t148 + t63 * t157) + t101 * t45 * t7) + t111 * (t93 * t134 - t137) * pkin(9) + t63 * (-t172 * t134 + t174) + t179);
t182 = t181 * t119;
t183 = m(1) + m(2) + m(3);
t184 = t183 * t182;
t187 = -t12 * t1 + t10 * t6;
t188 = t187 * t4;
t190 = t53 * t7;
t191 = t2 * t188 - t190;
t194 = t43 * pkin(3);
t195 = t45 * t187;
t197 = t187 * t7;
t199 = t53 * t4;
t200 = t2 * t197 + t199;
t206 = t22 * t20;
t208 = t20 * t43;
t209 = t187 * pkin(9);
t215 = t59 * (t22 * pkin(3) * t191 + t20 * pkin(9) * t200 - t195 * t194) + t63 * (t206 * pkin(9) * t191 - t45 * t209 * t208 - pkin(3) * t200);
t218 = 0.2e1 * t121 * t84 * t2;
t220 = t45 * t43;
t221 = t178 * t220;
t224 = t43 * t7;
t226 = 0.2e1 * t179;
t229 = t84 * t146;
t231 = t22 * t40 * t43;
t234 = pkin(9) * t208;
t239 = t84 * t149;
t241 = t66 * t43;
t243 = t22 * t241 * t137;
t247 = t43 * t7 * pkin(2) - t66 * t4;
t253 = t66 * pkin(9);
t254 = t84 * t253;
t256 = t43 * t2;
t258 = t22 * t253;
t259 = t258 * t20 * t256;
t261 = t45 * t20;
t265 = t84 * pkin(3);
t266 = t265 * t177;
t268 = t20 * t220;
t274 = t45 * (t35 + 0.1e1) * (t35 - 0.1e1);
t276 = pkin(3) * t177;
t280 = 0.1e1 / (t60 * (-0.2e1 * t221 * t20 * t125 + t79 * t224 + t218 - t226) + t59 * (t63 * (0.2e1 * t234 * t45 * t141 + t231 * t134 + t146 - t229) + t239 * t148 + t243 + t45 * t247 * pkin(3) - t154) + t63 * (t261 * pkin(9) * t247 + t254 * t20 * t134 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t125 - t274 * pkin(9) * t224 - t266 + t276));
t281 = t280 * t215;
t287 = pkin(8) + rSges(3,3);
t289 = t43 * t287 * m(3);
t290 = m(2) * rSges(2,2);
t293 = rSges(3,1) * m(3);
t295 = t63 * m(3);
t297 = m(2) * rSges(2,1);
t298 = pkin(2) * m(3);
t301 = t7 * (-t22 * (rSges(3,1) * t63 + rSges(3,2) * t59) * m(3) + t289 - t290) + (-rSges(3,2) * t295 + t59 * t293 + t297 + t298) * t4;
t302 = t45 * t301;
t303 = t302 * t281;
t306 = t21 * t22 * t7 + t148;
t310 = t21 * t125 - t141;
t314 = t72 + pkin(2);
t318 = pkin(3) * t22 * t63 - t241;
t320 = t4 * t314 - t7 * t318;
t325 = t314 * t7 + t4 * t318;
t327 = t59 * (-t2 * t306 * t187 - t310 * t53) - t2 * t320 * t187 + t325 * t53;
t330 = t22 * t66 * t194;
t332 = pkin(9) * t20 * pkin(2);
t335 = t66 * pkin(3);
t336 = t84 * t335;
t337 = t43 * t63;
t338 = t22 * t40;
t348 = t21 * t265;
t356 = t22 * t194;
t365 = 0.1e1 / (t133 + t59 * (t2 * (-t84 * t135 + t135 + t330 - t332) + t45 * (t4 * (t338 * t337 - t335 + t336) + t74 * t43 * t141)) + t2 * (-t348 + t258 * t20 * t337 + (t98 + t21) * pkin(3)) + pkin(9) * t45 * (t4 * t20 * (t84 * t93 + t356 - t93) + t101 * t224));
t366 = t365 * t327;
t367 = rSges(3,1) * t22;
t372 = rSges(3,2) * t22;
t383 = t45 * (t59 * (rSges(3,2) * t7 - t4 * t367) + (rSges(3,1) * t7 + t4 * t372) * t63) + (-t59 * rSges(3,1) + rSges(3,2) * t63) * t256;
t384 = m(3) * t383;
t385 = t384 * t366;
t386 = t184 + t303 - t385;
t390 = rSges(3,1) ^ 2;
t391 = rSges(3,2) ^ 2;
t392 = -t390 + t391;
t394 = m(3) * t392 + Icges(3,1) - Icges(3,2);
t397 = -rSges(3,2) * t293 + Icges(3,4);
t404 = (pkin(8) + rSges(3,1) + rSges(3,3)) * (pkin(8) - rSges(3,1) + rSges(3,3)) * m(3);
t409 = -m(3) * t287 * rSges(3,2) + Icges(3,6);
t410 = t59 * t409;
t413 = -m(3) * t287 * rSges(3,1) + Icges(3,5);
t420 = -m(3) * t392 - Icges(3,1) + Icges(3,2);
t424 = 0.2e1 * pkin(2) * t293;
t427 = rSges(3,2) * pkin(2);
t428 = t427 * t295;
t430 = rSges(3,3) ^ 2;
t433 = pkin(2) ^ 2;
t434 = pkin(8) ^ 2;
t436 = m(3) * (0.2e1 * rSges(3,3) * pkin(8) + t391 + t430 + t433 + t434);
t437 = rSges(2,1) ^ 2;
t438 = rSges(2,2) ^ 2;
t440 = m(2) * (t437 + t438);
t441 = t84 * (-0.2e1 * t59 * t397 * t63 + t60 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t22 * (t413 * t63 + t410) * t43 + t60 * t420 + t59 * (0.2e1 * t397 * t63 + t424) - 0.2e1 * t428 + t436 + Icges(3,1) + t440 + Icges(2,3);
t447 = rSges(3,1) * pkin(2);
t450 = m(3) * (t390 + t391);
t453 = (t413 * t63 + t410) * t43 + (t447 * t59 * m(3) + Icges(3,3) - t428 + t450) * t22;
t455 = t302 * t182 + t441 * t281 + t453 * t366;
t460 = t450 + Icges(3,3);
t462 = -t384 * t182 + t453 * t281 + t460 * t366;
t465 = cos(qJ(2,2));
t467 = sin(qJ(2,2));
t469 = t465 * t3 + t467 * t6;
t470 = cos(legFrame(2,3));
t472 = sin(legFrame(2,3));
t475 = -t467 * t1 + t465 * t14;
t477 = t470 * t469 + t475 * t472;
t478 = t477 * pkin(3);
t483 = -t467 * t3 + t465 * t6;
t487 = t465 * t1 + t467 * t14;
t489 = t470 * t483 - t487 * t472;
t495 = t470 * t1 + t472 * t6;
t501 = cos(qJ(3,2));
t502 = t501 ^ 2;
t505 = sin(qJ(3,2));
t512 = pkin(9) * t20 * t505;
t514 = 0.2e1 * t512 + pkin(2);
t520 = t505 * t495 * t79;
t521 = t66 * t478;
t524 = t495 * pkin(9);
t525 = t20 * t524;
t529 = t495 * t45;
t530 = t66 * t505;
t535 = t505 * pkin(2);
t537 = t20 * t535 + pkin(9) - t100;
t542 = t66 * t477;
t553 = t502 * (t43 * (0.2e1 * t23 * t478 + t40 * t489) + 0.2e1 * t495 * t50 * t49 * t47) + t501 * (t43 * (t22 * (-t505 * t40 * t477 + t66 * t495 * t46) + pkin(3) * t489 * t514) + t84 * (-t520 - t521) + t520 - t525 * t86 + t521) + t43 * (-t22 * t20 * (-t530 * t529 + t478) + t537 * t489) * pkin(9) - t111 * pkin(9) * (t495 * t46 + t505 * t542) + t505 * (t529 * t114 + t21 * t542) + t525 * t46;
t554 = t22 * t465;
t562 = 0.2e1 * t502 * (t124 - t45 * (t121 * t554 - t40 * t467 / 0.2e1) * t43);
t563 = t45 * t465;
t564 = t40 * t505;
t568 = pkin(3) * t467;
t573 = t505 * t146;
t574 = pkin(3) * t465;
t575 = t149 * t574;
t598 = 0.1e1 / (t562 + t501 * (t43 * (t22 * (t564 * t563 + t138) + t514 * t45 * t568) + t84 * (-t573 + t575) + t573 - t154 - t575) + t43 * pkin(9) * (t22 * t20 * (t505 * t157 + t45 * t574) + t537 * t45 * t467) + t111 * (t530 * t563 - t137) * pkin(9) + t505 * (-t172 * t563 + t174) + t179);
t599 = t598 * t553;
t600 = t183 * t599;
t603 = -t472 * t1 + t470 * t6;
t604 = t603 * t465;
t606 = t495 * t467;
t607 = t2 * t604 - t606;
t610 = t45 * t603;
t612 = t603 * t467;
t614 = t495 * t465;
t615 = t2 * t612 + t614;
t622 = t603 * pkin(9);
t628 = t501 * (t22 * pkin(3) * t607 + t20 * pkin(9) * t615 - t610 * t194) + t505 * (t206 * pkin(9) * t607 - t45 * t622 * t208 - pkin(3) * t615);
t632 = t43 * t467;
t646 = t43 * t467 * pkin(2) - t66 * t465;
t664 = 0.1e1 / (t502 * (-0.2e1 * t221 * t20 * t554 + t79 * t632 + t218 - t226) + t501 * (t505 * (0.2e1 * t234 * t45 * t568 + t231 * t563 + t146 - t229) + t239 * t574 + t243 + t45 * t646 * pkin(3) - t154) + t505 * (t261 * pkin(9) * t646 + t254 * t20 * t563 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t554 - t274 * pkin(9) * t632 - t266 + t276));
t665 = t664 * t628;
t674 = t505 * m(3);
t678 = t467 * (-t22 * (rSges(3,1) * t505 + rSges(3,2) * t501) * m(3) + t289 - t290) + (-rSges(3,2) * t674 + t501 * t293 + t297 + t298) * t465;
t679 = t45 * t678;
t680 = t679 * t665;
t683 = t21 * t22 * t467 + t574;
t687 = t21 * t554 - t568;
t691 = t512 + pkin(2);
t695 = pkin(3) * t22 * t505 - t241;
t697 = t465 * t691 - t467 * t695;
t702 = t465 * t695 + t691 * t467;
t704 = t501 * (-t2 * t683 * t603 - t687 * t495) - t2 * t697 * t603 + t702 * t495;
t708 = t43 * t505;
t733 = 0.1e1 / (t562 + t501 * (t2 * (-t84 * t564 + t330 - t332 + t564) + t45 * (t465 * (t338 * t708 - t335 + t336) + t514 * t43 * t568)) + t2 * (-t348 + t258 * t20 * t708 + (t535 + t21) * pkin(3)) + pkin(9) * t45 * (t465 * t20 * (t84 * t530 + t356 - t530) + t537 * t632));
t734 = t733 * t704;
t749 = t45 * (t501 * (rSges(3,2) * t467 - t465 * t367) + (rSges(3,1) * t467 + t465 * t372) * t505) + (-t501 * rSges(3,1) + rSges(3,2) * t505) * t256;
t750 = m(3) * t749;
t751 = t750 * t734;
t752 = t600 + t680 - t751;
t762 = t501 * t409;
t772 = t427 * t674;
t774 = t84 * (-0.2e1 * t501 * t397 * t505 + t502 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t22 * (t413 * t505 + t762) * t43 + t502 * t420 + t501 * (0.2e1 * t397 * t505 + t424) - 0.2e1 * t772 + t436 + Icges(3,1) + t440 + Icges(2,3);
t783 = (t413 * t505 + t762) * t43 + (t447 * t501 * m(3) + Icges(3,3) + t450 - t772) * t22;
t785 = t679 * t599 + t774 * t665 + t783 * t734;
t791 = t460 * t734 - t750 * t599 + t783 * t665;
t794 = cos(qJ(2,3));
t796 = sin(qJ(2,3));
t798 = t794 * t3 + t796 * t6;
t799 = cos(legFrame(3,3));
t801 = sin(legFrame(3,3));
t804 = -t796 * t1 + t794 * t14;
t806 = t799 * t798 + t804 * t801;
t807 = t806 * pkin(3);
t812 = -t796 * t3 + t794 * t6;
t816 = t794 * t1 + t796 * t14;
t818 = t799 * t812 - t816 * t801;
t824 = t799 * t1 + t801 * t6;
t830 = cos(qJ(3,3));
t831 = t830 ^ 2;
t834 = sin(qJ(3,3));
t841 = pkin(9) * t20 * t834;
t843 = 0.2e1 * t841 + pkin(2);
t849 = t834 * t824 * t79;
t850 = t66 * t807;
t853 = t824 * pkin(9);
t854 = t20 * t853;
t858 = t824 * t45;
t859 = t66 * t834;
t864 = t834 * pkin(2);
t866 = t20 * t864 + pkin(9) - t100;
t871 = t66 * t806;
t882 = t831 * (t43 * (0.2e1 * t23 * t807 + t40 * t818) + 0.2e1 * t824 * t50 * t49 * t47) + t830 * (t43 * (t22 * (-t834 * t40 * t806 + t66 * t824 * t46) + pkin(3) * t818 * t843) + t84 * (-t849 - t850) + t849 - t854 * t86 + t850) + t43 * (-t22 * t20 * (-t859 * t858 + t807) + t866 * t818) * pkin(9) - t111 * pkin(9) * (t824 * t46 + t834 * t871) + t834 * (t858 * t114 + t21 * t871) + t854 * t46;
t883 = t22 * t794;
t891 = 0.2e1 * t831 * (t124 - t45 * (t121 * t883 - t40 * t796 / 0.2e1) * t43);
t892 = t45 * t794;
t893 = t40 * t834;
t897 = pkin(3) * t796;
t902 = t834 * t146;
t903 = pkin(3) * t794;
t904 = t149 * t903;
t927 = 0.1e1 / (t891 + t830 * (t43 * (t22 * (t893 * t892 + t138) + t843 * t45 * t897) + t84 * (-t902 + t904) + t902 - t154 - t904) + t43 * pkin(9) * (t22 * t20 * (t834 * t157 + t45 * t903) + t866 * t45 * t796) + t111 * (t859 * t892 - t137) * pkin(9) + t834 * (-t172 * t892 + t174) + t179);
t928 = t927 * t882;
t929 = t183 * t928;
t932 = -t801 * t1 + t799 * t6;
t933 = t932 * t794;
t935 = t824 * t796;
t936 = t2 * t933 - t935;
t939 = t45 * t932;
t941 = t932 * t796;
t943 = t824 * t794;
t944 = t2 * t941 + t943;
t951 = t932 * pkin(9);
t957 = t830 * (t22 * pkin(3) * t936 + t20 * pkin(9) * t944 - t939 * t194) + t834 * (t206 * pkin(9) * t936 - t45 * t951 * t208 - pkin(3) * t944);
t961 = t43 * t796;
t975 = t43 * t796 * pkin(2) - t66 * t794;
t993 = 0.1e1 / (t831 * (-0.2e1 * t221 * t20 * t883 + t79 * t961 + t218 - t226) + t830 * (t834 * (0.2e1 * t234 * t45 * t897 + t231 * t892 + t146 - t229) + t239 * t903 + t243 + t45 * t975 * pkin(3) - t154) + t834 * (t261 * pkin(9) * t975 + t254 * t20 * t892 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t883 - t274 * pkin(9) * t961 - t266 + t276));
t994 = t993 * t957;
t1003 = t834 * m(3);
t1007 = t796 * (-t22 * (rSges(3,1) * t834 + rSges(3,2) * t830) * m(3) + t289 - t290) + (-rSges(3,2) * t1003 + t830 * t293 + t297 + t298) * t794;
t1008 = t45 * t1007;
t1009 = t1008 * t994;
t1012 = t21 * t22 * t796 + t903;
t1016 = t21 * t883 - t897;
t1020 = t841 + pkin(2);
t1024 = pkin(3) * t22 * t834 - t241;
t1026 = t794 * t1020 - t796 * t1024;
t1031 = t1020 * t796 + t794 * t1024;
t1033 = t830 * (-t2 * t1012 * t932 - t1016 * t824) - t2 * t1026 * t932 + t1031 * t824;
t1037 = t43 * t834;
t1062 = 0.1e1 / (t891 + t830 * (t2 * (-t84 * t893 + t330 - t332 + t893) + t45 * (t794 * (t338 * t1037 - t335 + t336) + t843 * t43 * t897)) + t2 * (-t348 + t258 * t20 * t1037 + (t864 + t21) * pkin(3)) + pkin(9) * t45 * (t794 * t20 * (t84 * t859 + t356 - t859) + t866 * t961));
t1063 = t1062 * t1033;
t1078 = t45 * (t830 * (rSges(3,2) * t796 - t794 * t367) + (rSges(3,1) * t796 + t794 * t372) * t834) + (-t830 * rSges(3,1) + rSges(3,2) * t834) * t256;
t1079 = m(3) * t1078;
t1080 = t1079 * t1063;
t1081 = t929 + t1009 - t1080;
t1091 = t830 * t409;
t1101 = t427 * t1003;
t1103 = t84 * (-0.2e1 * t830 * t397 * t834 + t831 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t22 * (t413 * t834 + t1091) * t43 + t831 * t420 + t830 * (0.2e1 * t397 * t834 + t424) - 0.2e1 * t1101 + t436 + Icges(3,1) + t440 + Icges(2,3);
t1112 = (t413 * t834 + t1091) * t43 + (t447 * t830 * m(3) + Icges(3,3) - t1101 + t450) * t22;
t1114 = t1008 * t928 + t1112 * t1063 + t1103 * t994;
t1120 = t460 * t1063 - t1079 * t928 + t1112 * t994;
t1123 = cos(qJ(2,4));
t1125 = sin(qJ(2,4));
t1127 = t1123 * t3 + t1125 * t6;
t1128 = cos(legFrame(4,3));
t1130 = sin(legFrame(4,3));
t1133 = -t1125 * t1 + t1123 * t14;
t1135 = t1128 * t1127 + t1133 * t1130;
t1136 = t1135 * pkin(3);
t1141 = t1123 * t6 - t1125 * t3;
t1145 = t1123 * t1 + t1125 * t14;
t1147 = t1128 * t1141 - t1145 * t1130;
t1153 = t1128 * t1 + t1130 * t6;
t1159 = cos(qJ(3,4));
t1160 = t1159 ^ 2;
t1163 = sin(qJ(3,4));
t1170 = pkin(9) * t20 * t1163;
t1172 = 0.2e1 * t1170 + pkin(2);
t1178 = t1163 * t1153 * t79;
t1179 = t66 * t1136;
t1182 = t1153 * pkin(9);
t1183 = t20 * t1182;
t1187 = t1153 * t45;
t1188 = t66 * t1163;
t1193 = t1163 * pkin(2);
t1195 = t20 * t1193 + pkin(9) - t100;
t1200 = t66 * t1135;
t1211 = t1160 * (t43 * (0.2e1 * t23 * t1136 + t40 * t1147) + 0.2e1 * t1153 * t50 * t49 * t47) + t1159 * (t43 * (t22 * (-t1163 * t40 * t1135 + t66 * t1153 * t46) + pkin(3) * t1147 * t1172) + t84 * (-t1178 - t1179) + t1178 - t1183 * t86 + t1179) + t43 * (-t22 * t20 * (-t1188 * t1187 + t1136) + t1195 * t1147) * pkin(9) - t111 * pkin(9) * (t1153 * t46 + t1163 * t1200) + t1163 * (t1187 * t114 + t21 * t1200) + t1183 * t46;
t1212 = t22 * t1123;
t1220 = 0.2e1 * t1160 * (t124 - t45 * (t121 * t1212 - t40 * t1125 / 0.2e1) * t43);
t1221 = t45 * t1123;
t1222 = t40 * t1163;
t1226 = pkin(3) * t1125;
t1231 = t1163 * t146;
t1232 = pkin(3) * t1123;
t1233 = t149 * t1232;
t1256 = 0.1e1 / (t1220 + t1159 * (t43 * (t22 * (t1222 * t1221 + t138) + t1172 * t45 * t1226) + t84 * (-t1231 + t1233) + t1231 - t154 - t1233) + t43 * pkin(9) * (t22 * t20 * (t1163 * t157 + t45 * t1232) + t1195 * t45 * t1125) + t111 * (t1188 * t1221 - t137) * pkin(9) + t1163 * (-t172 * t1221 + t174) + t179);
t1257 = t1256 * t1211;
t1258 = t183 * t1257;
t1261 = -t1130 * t1 + t1128 * t6;
t1262 = t1261 * t1123;
t1264 = t1153 * t1125;
t1265 = t2 * t1262 - t1264;
t1268 = t45 * t1261;
t1270 = t1261 * t1125;
t1272 = t1153 * t1123;
t1273 = t2 * t1270 + t1272;
t1280 = t1261 * pkin(9);
t1286 = t1159 * (t22 * pkin(3) * t1265 + t20 * pkin(9) * t1273 - t1268 * t194) + t1163 * (t206 * pkin(9) * t1265 - t45 * t1280 * t208 - pkin(3) * t1273);
t1290 = t43 * t1125;
t1304 = t43 * t1125 * pkin(2) - t66 * t1123;
t1322 = 0.1e1 / (t1160 * (-0.2e1 * t221 * t20 * t1212 + t79 * t1290 + t218 - t226) + t1159 * (t1163 * (0.2e1 * t234 * t45 * t1226 + t231 * t1221 + t146 - t229) + t239 * t1232 + t243 + t45 * t1304 * pkin(3) - t154) + t1163 * (t261 * pkin(9) * t1304 + t254 * t20 * t1221 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t1212 - t274 * pkin(9) * t1290 - t266 + t276));
t1323 = t1322 * t1286;
t1332 = t1163 * m(3);
t1336 = t1125 * (-t22 * (rSges(3,1) * t1163 + rSges(3,2) * t1159) * m(3) + t289 - t290) + (-rSges(3,2) * t1332 + t1159 * t293 + t297 + t298) * t1123;
t1337 = t45 * t1336;
t1338 = t1337 * t1323;
t1341 = t21 * t22 * t1125 + t1232;
t1345 = t21 * t1212 - t1226;
t1349 = t1170 + pkin(2);
t1353 = pkin(3) * t22 * t1163 - t241;
t1355 = t1123 * t1349 - t1125 * t1353;
t1360 = t1123 * t1353 + t1349 * t1125;
t1362 = t1159 * (-t2 * t1341 * t1261 - t1345 * t1153) - t2 * t1355 * t1261 + t1360 * t1153;
t1366 = t43 * t1163;
t1391 = 0.1e1 / (t1220 + t1159 * (t2 * (-t84 * t1222 + t1222 + t330 - t332) + t45 * (t1123 * (t338 * t1366 - t335 + t336) + t1172 * t43 * t1226)) + t2 * (-t348 + t258 * t20 * t1366 + (t1193 + t21) * pkin(3)) + pkin(9) * t45 * (t1123 * t20 * (t84 * t1188 - t1188 + t356) + t1195 * t1290));
t1392 = t1391 * t1362;
t1407 = t45 * (t1159 * (rSges(3,2) * t1125 - t1123 * t367) + (rSges(3,1) * t1125 + t1123 * t372) * t1163) + (-t1159 * rSges(3,1) + rSges(3,2) * t1163) * t256;
t1408 = m(3) * t1407;
t1409 = t1408 * t1392;
t1410 = t1258 + t1338 - t1409;
t1420 = t1159 * t409;
t1430 = t427 * t1332;
t1432 = t84 * (-0.2e1 * t1159 * t397 * t1163 + t1160 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t22 * (t413 * t1163 + t1420) * t43 + t1160 * t420 + t1159 * (0.2e1 * t397 * t1163 + t424) - 0.2e1 * t1430 + t436 + Icges(3,1) + t440 + Icges(2,3);
t1441 = (t413 * t1163 + t1420) * t43 + (t447 * t1159 * m(3) + Icges(3,3) - t1430 + t450) * t22;
t1443 = t1337 * t1257 + t1432 * t1323 + t1441 * t1392;
t1449 = -t1408 * t1257 + t1441 * t1323 + t460 * t1392;
t1452 = cos(qJ(2,5));
t1454 = sin(qJ(2,5));
t1456 = t1452 * t3 + t1454 * t6;
t1457 = cos(legFrame(5,3));
t1459 = sin(legFrame(5,3));
t1462 = -t1454 * t1 + t1452 * t14;
t1464 = t1457 * t1456 + t1462 * t1459;
t1465 = t1464 * pkin(3);
t1470 = t1452 * t6 - t1454 * t3;
t1474 = t1452 * t1 + t1454 * t14;
t1476 = t1457 * t1470 - t1474 * t1459;
t1482 = t1457 * t1 + t1459 * t6;
t1488 = cos(qJ(3,5));
t1489 = t1488 ^ 2;
t1492 = sin(qJ(3,5));
t1499 = pkin(9) * t20 * t1492;
t1501 = 0.2e1 * t1499 + pkin(2);
t1507 = t1492 * t1482 * t79;
t1508 = t66 * t1465;
t1511 = t1482 * pkin(9);
t1512 = t20 * t1511;
t1516 = t1482 * t45;
t1517 = t66 * t1492;
t1522 = t1492 * pkin(2);
t1524 = t20 * t1522 + pkin(9) - t100;
t1529 = t66 * t1464;
t1540 = t1489 * (t43 * (0.2e1 * t23 * t1465 + t40 * t1476) + 0.2e1 * t1482 * t50 * t49 * t47) + t1488 * (t43 * (t22 * (-t1492 * t40 * t1464 + t66 * t1482 * t46) + pkin(3) * t1476 * t1501) + t84 * (-t1507 - t1508) + t1507 - t1512 * t86 + t1508) + t43 * (-t22 * t20 * (-t1517 * t1516 + t1465) + t1524 * t1476) * pkin(9) - t111 * pkin(9) * (t1482 * t46 + t1492 * t1529) + t1492 * (t1516 * t114 + t21 * t1529) + t1512 * t46;
t1541 = t22 * t1452;
t1549 = 0.2e1 * t1489 * (t124 - t45 * (t121 * t1541 - t40 * t1454 / 0.2e1) * t43);
t1550 = t45 * t1452;
t1551 = t40 * t1492;
t1555 = pkin(3) * t1454;
t1560 = t1492 * t146;
t1561 = pkin(3) * t1452;
t1562 = t149 * t1561;
t1585 = 0.1e1 / (t1549 + t1488 * (t43 * (t22 * (t1551 * t1550 + t138) + t1501 * t45 * t1555) + t84 * (-t1560 + t1562) + t1560 - t154 - t1562) + t43 * pkin(9) * (t22 * t20 * (t1492 * t157 + t45 * t1561) + t1524 * t45 * t1454) + t111 * (t1517 * t1550 - t137) * pkin(9) + t1492 * (-t172 * t1550 + t174) + t179);
t1586 = t1585 * t1540;
t1587 = t183 * t1586;
t1590 = -t1459 * t1 + t1457 * t6;
t1591 = t1590 * t1452;
t1593 = t1482 * t1454;
t1594 = t2 * t1591 - t1593;
t1597 = t45 * t1590;
t1599 = t1590 * t1454;
t1601 = t1482 * t1452;
t1602 = t2 * t1599 + t1601;
t1609 = t1590 * pkin(9);
t1615 = t1488 * (t22 * pkin(3) * t1594 + t20 * pkin(9) * t1602 - t1597 * t194) + t1492 * (t206 * pkin(9) * t1594 - t45 * t1609 * t208 - pkin(3) * t1602);
t1619 = t43 * t1454;
t1633 = t43 * t1454 * pkin(2) - t66 * t1452;
t1651 = 0.1e1 / (t1489 * (-0.2e1 * t221 * t20 * t1541 + t79 * t1619 + t218 - t226) + t1488 * (t1492 * (0.2e1 * t234 * t45 * t1555 + t231 * t1550 + t146 - t229) + t239 * t1561 + t243 + t45 * t1633 * pkin(3) - t154) + t1492 * (t261 * pkin(9) * t1633 + t254 * t20 * t1550 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t1541 - t274 * pkin(9) * t1619 - t266 + t276));
t1652 = t1651 * t1615;
t1661 = t1492 * m(3);
t1665 = t1454 * (-t22 * (rSges(3,1) * t1492 + rSges(3,2) * t1488) * m(3) + t289 - t290) + (-rSges(3,2) * t1661 + t1488 * t293 + t297 + t298) * t1452;
t1666 = t45 * t1665;
t1667 = t1666 * t1652;
t1670 = t21 * t22 * t1454 + t1561;
t1674 = t21 * t1541 - t1555;
t1678 = t1499 + pkin(2);
t1682 = pkin(3) * t22 * t1492 - t241;
t1684 = t1452 * t1678 - t1454 * t1682;
t1689 = t1452 * t1682 + t1678 * t1454;
t1691 = t1488 * (-t2 * t1670 * t1590 - t1674 * t1482) - t2 * t1684 * t1590 + t1689 * t1482;
t1695 = t43 * t1492;
t1720 = 0.1e1 / (t1549 + t1488 * (t2 * (-t84 * t1551 + t1551 + t330 - t332) + t45 * (t1452 * (t338 * t1695 - t335 + t336) + t1501 * t43 * t1555)) + t2 * (-t348 + t258 * t20 * t1695 + (t1522 + t21) * pkin(3)) + pkin(9) * t45 * (t1452 * t20 * (t84 * t1517 - t1517 + t356) + t1524 * t1619));
t1721 = t1720 * t1691;
t1736 = t45 * (t1488 * (rSges(3,2) * t1454 - t1452 * t367) + (rSges(3,1) * t1454 + t1452 * t372) * t1492) + (-t1488 * rSges(3,1) + rSges(3,2) * t1492) * t256;
t1737 = m(3) * t1736;
t1738 = t1737 * t1721;
t1739 = t1587 + t1667 - t1738;
t1749 = t1488 * t409;
t1759 = t427 * t1661;
t1761 = t84 * (-0.2e1 * t1488 * t397 * t1492 + t1489 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t22 * (t413 * t1492 + t1749) * t43 + t1489 * t420 + t1488 * (0.2e1 * t397 * t1492 + t424) - 0.2e1 * t1759 + t436 + Icges(3,1) + t440 + Icges(2,3);
t1770 = (t413 * t1492 + t1749) * t43 + (t447 * t1488 * m(3) + Icges(3,3) - t1759 + t450) * t22;
t1772 = t1666 * t1586 + t1761 * t1652 + t1770 * t1721;
t1778 = -t1737 * t1586 + t1770 * t1652 + t460 * t1721;
t1781 = cos(qJ(2,6));
t1783 = sin(qJ(2,6));
t1785 = t1781 * t3 + t1783 * t6;
t1786 = cos(legFrame(6,3));
t1788 = sin(legFrame(6,3));
t1791 = -t1783 * t1 + t1781 * t14;
t1793 = t1786 * t1785 + t1791 * t1788;
t1794 = t1793 * pkin(3);
t1799 = t1781 * t6 - t1783 * t3;
t1803 = t1781 * t1 + t1783 * t14;
t1805 = t1786 * t1799 - t1803 * t1788;
t1811 = t1786 * t1 + t1788 * t6;
t1817 = cos(qJ(3,6));
t1818 = t1817 ^ 2;
t1821 = sin(qJ(3,6));
t1828 = pkin(9) * t20 * t1821;
t1830 = 0.2e1 * t1828 + pkin(2);
t1836 = t1821 * t1811 * t79;
t1837 = t66 * t1794;
t1840 = t1811 * pkin(9);
t1841 = t20 * t1840;
t1845 = t1811 * t45;
t1846 = t66 * t1821;
t1851 = t1821 * pkin(2);
t1853 = t20 * t1851 + pkin(9) - t100;
t1858 = t66 * t1793;
t1869 = t1818 * (t43 * (0.2e1 * t23 * t1794 + t40 * t1805) + 0.2e1 * t1811 * t50 * t49 * t47) + t1817 * (t43 * (t22 * (-t1821 * t40 * t1793 + t66 * t1811 * t46) + pkin(3) * t1805 * t1830) + t84 * (-t1836 - t1837) + t1836 - t1841 * t86 + t1837) + t43 * (-t22 * t20 * (-t1846 * t1845 + t1794) + t1853 * t1805) * pkin(9) - t111 * pkin(9) * (t1811 * t46 + t1821 * t1858) + t1821 * (t1845 * t114 + t21 * t1858) + t1841 * t46;
t1870 = t22 * t1781;
t1878 = 0.2e1 * t1818 * (t124 - t45 * (t121 * t1870 - t40 * t1783 / 0.2e1) * t43);
t1879 = t45 * t1781;
t1880 = t40 * t1821;
t1884 = pkin(3) * t1783;
t1889 = t1821 * t146;
t1890 = pkin(3) * t1781;
t1891 = t149 * t1890;
t1914 = 0.1e1 / (t1878 + t1817 * (t43 * (t22 * (t1880 * t1879 + t138) + t1830 * t45 * t1884) + t84 * (-t1889 + t1891) + t1889 - t154 - t1891) + t43 * pkin(9) * (t22 * t20 * (t1821 * t157 + t45 * t1890) + t1853 * t45 * t1783) + t111 * (t1846 * t1879 - t137) * pkin(9) + t1821 * (-t172 * t1879 + t174) + t179);
t1915 = t1914 * t1869;
t1916 = t183 * t1915;
t1919 = -t1788 * t1 + t1786 * t6;
t1920 = t1919 * t1781;
t1922 = t1811 * t1783;
t1923 = t2 * t1920 - t1922;
t1926 = t45 * t1919;
t1928 = t1919 * t1783;
t1930 = t1811 * t1781;
t1931 = t2 * t1928 + t1930;
t1938 = t1919 * pkin(9);
t1944 = t1817 * (t22 * pkin(3) * t1923 + t20 * pkin(9) * t1931 - t1926 * t194) + t1821 * (t206 * pkin(9) * t1923 - t45 * t1938 * t208 - pkin(3) * t1931);
t1948 = t43 * t1783;
t1962 = t43 * t1783 * pkin(2) - t66 * t1781;
t1980 = 0.1e1 / (t1818 * (-0.2e1 * t221 * t20 * t1870 + t79 * t1948 + t218 - t226) + t1817 * (t1821 * (0.2e1 * t234 * t45 * t1884 + t231 * t1879 + t146 - t229) + t239 * t1890 + t243 + t45 * t1962 * pkin(3) - t154) + t1821 * (t261 * pkin(9) * t1962 + t254 * t20 * t1879 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t1870 - t274 * pkin(9) * t1948 - t266 + t276));
t1981 = t1980 * t1944;
t1990 = t1821 * m(3);
t1994 = t1783 * (-t22 * (rSges(3,1) * t1821 + rSges(3,2) * t1817) * m(3) + t289 - t290) + (-rSges(3,2) * t1990 + t1817 * t293 + t297 + t298) * t1781;
t1995 = t45 * t1994;
t1996 = t1995 * t1981;
t1999 = t21 * t22 * t1783 + t1890;
t2003 = t21 * t1870 - t1884;
t2007 = t1828 + pkin(2);
t2011 = pkin(3) * t22 * t1821 - t241;
t2013 = t1781 * t2007 - t1783 * t2011;
t2018 = t1781 * t2011 + t2007 * t1783;
t2020 = t1817 * (-t2 * t1999 * t1919 - t2003 * t1811) - t2 * t2013 * t1919 + t2018 * t1811;
t2024 = t43 * t1821;
t2049 = 0.1e1 / (t1878 + t1817 * (t2 * (-t84 * t1880 + t1880 + t330 - t332) + t45 * (t1781 * (t338 * t2024 - t335 + t336) + t1830 * t43 * t1884)) + t2 * (-t348 + t258 * t20 * t2024 + (t1851 + t21) * pkin(3)) + pkin(9) * t45 * (t1781 * t20 * (t84 * t1846 - t1846 + t356) + t1853 * t1948));
t2050 = t2049 * t2020;
t2065 = t45 * (t1817 * (rSges(3,2) * t1783 - t1781 * t367) + (rSges(3,1) * t1783 + t1781 * t372) * t1821) + (-t1817 * rSges(3,1) + rSges(3,2) * t1821) * t256;
t2066 = m(3) * t2065;
t2067 = t2066 * t2050;
t2068 = t1916 + t1996 - t2067;
t2078 = t1817 * t409;
t2088 = t427 * t1990;
t2090 = t84 * (-0.2e1 * t1817 * t397 * t1821 + t1818 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t22 * (t413 * t1821 + t2078) * t43 + t1818 * t420 + t1817 * (0.2e1 * t397 * t1821 + t424) - 0.2e1 * t2088 + t436 + Icges(3,1) + t440 + Icges(2,3);
t2099 = (t413 * t1821 + t2078) * t43 + (t447 * t1817 * m(3) + Icges(3,3) - t2088 + t450) * t22;
t2101 = t1995 * t1915 + t2090 * t1981 + t2099 * t2050;
t2107 = -t2066 * t1915 + t2099 * t1981 + t460 * t2050;
t2110 = t181 * t119 * t386 + t280 * t215 * t455 + t365 * t327 * t462 + t598 * t553 * t752 + t664 * t628 * t785 + t733 * t704 * t791 + t927 * t882 * t1081 + t993 * t957 * t1114 + t1062 * t1033 * t1120 + t1256 * t1211 * t1410 + t1322 * t1286 * t1443 + t1391 * t1362 * t1449 + t1585 * t1540 * t1739 + t1651 * t1615 * t1772 + t1720 * t1691 * t1778 + t1914 * t1869 * t2068 + t1980 * t1944 * t2101 + t2049 * t2020 * t2107 + m(4);
t2113 = t10 * t16 - t9 * t12;
t2114 = pkin(3) * t2113;
t2119 = t10 * t32 + t28 * t12;
t2140 = t63 * t187 * t79;
t2141 = t66 * t2114;
t2144 = t20 * t209;
t2156 = t66 * t2113;
t2167 = t60 * (t43 * (-0.2e1 * t23 * t2114 + t40 * t2119) - 0.2e1 * t187 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t66 * t187 * t46 + t63 * t40 * t2113) + pkin(3) * t2119 * t74) + t84 * (t2140 + t2141) - t2140 + t2144 * t86 - t2141) + t43 * pkin(9) * (t22 * t20 * (-t93 * t195 + t2114) + t101 * t2119) + t111 * pkin(9) * (t187 * t46 + t63 * t2156) + t63 * (-t195 * t114 - t21 * t2156) - t2144 * t46;
t2171 = t2 * t199 + t197;
t2176 = -t2 * t190 + t188;
t2188 = t59 * (t22 * t2171 * pkin(3) - t20 * pkin(9) * t2176 - t92 * t194) + (t206 * pkin(9) * t2171 - t45 * t87 * t208 + pkin(3) * t2176) * t63;
t2199 = t59 * (-t2 * t306 * t53 + t310 * t187) - t2 * t53 * t320 - t325 * t187;
t2204 = -t469 * t472 + t470 * t475;
t2205 = pkin(3) * t2204;
t2210 = t470 * t487 + t483 * t472;
t2231 = t505 * t603 * t79;
t2232 = t66 * t2205;
t2235 = t20 * t622;
t2247 = t66 * t2204;
t2258 = t502 * (t43 * (-0.2e1 * t23 * t2205 + t40 * t2210) - 0.2e1 * t603 * t50 * t49 * t47) + t501 * (t43 * (t22 * (t505 * t40 * t2204 - t66 * t603 * t46) + pkin(3) * t2210 * t514) + t84 * (t2231 + t2232) - t2231 + t2235 * t86 - t2232) + t43 * pkin(9) * (t22 * t20 * (-t530 * t610 + t2205) + t537 * t2210) + t111 * pkin(9) * (t505 * t2247 + t603 * t46) + t505 * (-t610 * t114 - t21 * t2247) - t2235 * t46;
t2262 = t2 * t614 + t612;
t2267 = -t2 * t606 + t604;
t2279 = t501 * (t22 * t2262 * pkin(3) - t20 * pkin(9) * t2267 - t529 * t194) + (t206 * pkin(9) * t2262 - t45 * t524 * t208 + pkin(3) * t2267) * t505;
t2290 = t501 * (-t2 * t683 * t495 + t687 * t603) - t2 * t495 * t697 - t702 * t603;
t2295 = -t798 * t801 + t799 * t804;
t2296 = pkin(3) * t2295;
t2301 = t799 * t816 + t812 * t801;
t2322 = t834 * t932 * t79;
t2323 = t66 * t2296;
t2326 = t20 * t951;
t2338 = t66 * t2295;
t2349 = t831 * (t43 * (-0.2e1 * t23 * t2296 + t40 * t2301) - 0.2e1 * t932 * t50 * t49 * t47) + t830 * (t43 * (t22 * (t834 * t40 * t2295 - t66 * t932 * t46) + pkin(3) * t2301 * t843) + t84 * (t2322 + t2323) - t2322 + t2326 * t86 - t2323) + t43 * pkin(9) * (t22 * t20 * (-t859 * t939 + t2296) + t866 * t2301) + t111 * pkin(9) * (t834 * t2338 + t932 * t46) + t834 * (-t939 * t114 - t21 * t2338) - t2326 * t46;
t2353 = t2 * t943 + t941;
t2358 = -t2 * t935 + t933;
t2370 = t830 * (t22 * t2353 * pkin(3) - t20 * pkin(9) * t2358 - t858 * t194) + (t206 * pkin(9) * t2353 - t45 * t853 * t208 + pkin(3) * t2358) * t834;
t2381 = t830 * (-t2 * t1012 * t824 + t1016 * t932) - t2 * t824 * t1026 - t1031 * t932;
t2386 = -t1127 * t1130 + t1128 * t1133;
t2387 = pkin(3) * t2386;
t2392 = t1128 * t1145 + t1141 * t1130;
t2413 = t1163 * t1261 * t79;
t2414 = t66 * t2387;
t2417 = t20 * t1280;
t2429 = t66 * t2386;
t2440 = t1160 * (t43 * (-0.2e1 * t23 * t2387 + t40 * t2392) - 0.2e1 * t1261 * t50 * t49 * t47) + t1159 * (t43 * (t22 * (t1163 * t40 * t2386 - t66 * t1261 * t46) + pkin(3) * t2392 * t1172) + t84 * (t2413 + t2414) - t2413 + t2417 * t86 - t2414) + t43 * pkin(9) * (t22 * t20 * (-t1188 * t1268 + t2387) + t1195 * t2392) + t111 * pkin(9) * (t1163 * t2429 + t1261 * t46) + t1163 * (-t1268 * t114 - t21 * t2429) - t2417 * t46;
t2444 = t2 * t1272 + t1270;
t2449 = -t2 * t1264 + t1262;
t2461 = t1159 * (t22 * t2444 * pkin(3) - t20 * pkin(9) * t2449 - t1187 * t194) + (t206 * pkin(9) * t2444 - t45 * t1182 * t208 + pkin(3) * t2449) * t1163;
t2472 = t1159 * (-t2 * t1341 * t1153 + t1345 * t1261) - t2 * t1153 * t1355 - t1360 * t1261;
t2477 = -t1456 * t1459 + t1457 * t1462;
t2478 = pkin(3) * t2477;
t2483 = t1457 * t1474 + t1470 * t1459;
t2504 = t1492 * t1590 * t79;
t2505 = t66 * t2478;
t2508 = t20 * t1609;
t2520 = t66 * t2477;
t2531 = t1489 * (t43 * (-0.2e1 * t23 * t2478 + t40 * t2483) - 0.2e1 * t1590 * t50 * t49 * t47) + t1488 * (t43 * (t22 * (t1492 * t40 * t2477 - t66 * t1590 * t46) + pkin(3) * t2483 * t1501) + t84 * (t2504 + t2505) - t2504 + t2508 * t86 - t2505) + t43 * pkin(9) * (t22 * t20 * (-t1517 * t1597 + t2478) + t1524 * t2483) + t111 * pkin(9) * (t1492 * t2520 + t1590 * t46) + t1492 * (-t1597 * t114 - t21 * t2520) - t2508 * t46;
t2535 = t2 * t1601 + t1599;
t2540 = -t2 * t1593 + t1591;
t2552 = t1488 * (t22 * t2535 * pkin(3) - t20 * pkin(9) * t2540 - t1516 * t194) + (t206 * pkin(9) * t2535 - t45 * t1511 * t208 + pkin(3) * t2540) * t1492;
t2563 = t1488 * (-t2 * t1670 * t1482 + t1674 * t1590) - t2 * t1482 * t1684 - t1689 * t1590;
t2568 = -t1785 * t1788 + t1786 * t1791;
t2569 = pkin(3) * t2568;
t2574 = t1786 * t1803 + t1799 * t1788;
t2595 = t1821 * t1919 * t79;
t2596 = t66 * t2569;
t2599 = t20 * t1938;
t2611 = t66 * t2568;
t2622 = t1818 * (t43 * (-0.2e1 * t23 * t2569 + t40 * t2574) - 0.2e1 * t1919 * t50 * t49 * t47) + t1817 * (t43 * (t22 * (t1821 * t40 * t2568 - t66 * t1919 * t46) + pkin(3) * t2574 * t1830) + t84 * (t2595 + t2596) - t2595 + t2599 * t86 - t2596) + t43 * pkin(9) * (t22 * t20 * (-t1846 * t1926 + t2569) + t1853 * t2574) + t111 * pkin(9) * (t1821 * t2611 + t1919 * t46) + t1821 * (-t1926 * t114 - t21 * t2611) - t2599 * t46;
t2626 = t2 * t1930 + t1928;
t2631 = -t2 * t1922 + t1920;
t2643 = t1817 * (t22 * t2626 * pkin(3) - t20 * pkin(9) * t2631 - t1845 * t194) + (t206 * pkin(9) * t2626 - t45 * t1840 * t208 + pkin(3) * t2631) * t1821;
t2654 = t1817 * (-t2 * t1999 * t1811 + t2003 * t1919) - t2 * t1811 * t2013 - t2018 * t1919;
t2657 = t181 * t2167 * t386 + t280 * t2188 * t455 + t365 * t2199 * t462 + t598 * t2258 * t752 + t664 * t2279 * t785 + t733 * t2290 * t791 + t927 * t2349 * t1081 + t993 * t2370 * t1114 + t1062 * t2381 * t1120 + t1256 * t2440 * t1410 + t1322 * t2461 * t1443 + t1391 * t2472 * t1449 + t1585 * t2531 * t1739 + t1651 * t2552 * t1772 + t1720 * t2563 * t1778 + t1914 * t2622 * t2068 + t1980 * t2643 * t2101 + t2049 * t2654 * t2107;
t2658 = t184 + t303 - t385 + t600 + t680 - t751 + t929 + t1009 - t1080 + t1258 + t1338 - t1409 + t1587 + t1667 - t1738 + t1916 + t1996 - t2067;
t2659 = sin(xP(6));
t2661 = cos(xP(6));
t2663 = -koppelP(1,2) * t2659 + t2661 * koppelP(1,1);
t2664 = sin(xP(5));
t2666 = cos(xP(5));
t2667 = koppelP(1,3) * t2666;
t2668 = t2664 * t2663 - t2667;
t2669 = cos(xP(4));
t2671 = sin(xP(4));
t2674 = koppelP(1,1) * t2659 + t2661 * koppelP(1,2);
t2675 = t2674 * t2671;
t2676 = t2669 * t2668 - t2675;
t2680 = t2674 * t2669;
t2681 = t181 * t2167 * t2676 + t2671 * t2668 + t2680;
t2682 = t2681 * t386;
t2684 = t280 * t2188;
t2685 = t2684 * t2676 * t455;
t2687 = t365 * t2199;
t2688 = t2687 * t2676 * t462;
t2691 = -koppelP(2,2) * t2659 + t2661 * koppelP(2,1);
t2693 = koppelP(2,3) * t2666;
t2694 = t2664 * t2691 - t2693;
t2698 = koppelP(2,1) * t2659 + t2661 * koppelP(2,2);
t2699 = t2698 * t2671;
t2700 = t2669 * t2694 - t2699;
t2704 = t2698 * t2669;
t2705 = t598 * t2258 * t2700 + t2671 * t2694 + t2704;
t2706 = t2705 * t752;
t2708 = t664 * t2279;
t2709 = t2708 * t2700 * t785;
t2711 = t733 * t2290;
t2712 = t2711 * t2700 * t791;
t2715 = -koppelP(3,2) * t2659 + t2661 * koppelP(3,1);
t2717 = koppelP(3,3) * t2666;
t2718 = t2664 * t2715 - t2717;
t2722 = koppelP(3,1) * t2659 + t2661 * koppelP(3,2);
t2723 = t2722 * t2671;
t2724 = t2669 * t2718 - t2723;
t2728 = t2722 * t2669;
t2729 = t927 * t2349 * t2724 + t2671 * t2718 + t2728;
t2730 = t2729 * t1081;
t2732 = t993 * t2370;
t2733 = t2732 * t2724 * t1114;
t2735 = t1062 * t2381;
t2736 = t2735 * t2724 * t1120;
t2739 = -koppelP(4,2) * t2659 + t2661 * koppelP(4,1);
t2741 = koppelP(4,3) * t2666;
t2742 = t2664 * t2739 - t2741;
t2746 = koppelP(4,1) * t2659 + t2661 * koppelP(4,2);
t2747 = t2746 * t2671;
t2748 = t2669 * t2742 - t2747;
t2752 = t2746 * t2669;
t2753 = t1256 * t2440 * t2748 + t2671 * t2742 + t2752;
t2754 = t2753 * t1410;
t2756 = t1322 * t2461;
t2757 = t2756 * t2748 * t1443;
t2759 = t1391 * t2472;
t2760 = t2759 * t2748 * t1449;
t2763 = -koppelP(5,2) * t2659 + t2661 * koppelP(5,1);
t2765 = koppelP(5,3) * t2666;
t2766 = t2664 * t2763 - t2765;
t2770 = koppelP(5,1) * t2659 + t2661 * koppelP(5,2);
t2771 = t2770 * t2671;
t2772 = t2669 * t2766 - t2771;
t2776 = t2770 * t2669;
t2777 = t1585 * t2531 * t2772 + t2671 * t2766 + t2776;
t2778 = t2777 * t1739;
t2780 = t1651 * t2552;
t2781 = t2780 * t2772 * t1772;
t2783 = t1720 * t2563;
t2784 = t2783 * t2772 * t1778;
t2787 = -koppelP(6,2) * t2659 + t2661 * koppelP(6,1);
t2789 = koppelP(6,3) * t2666;
t2790 = t2664 * t2787 - t2789;
t2794 = koppelP(6,1) * t2659 + t2661 * koppelP(6,2);
t2795 = t2794 * t2671;
t2796 = t2669 * t2790 - t2795;
t2800 = t2794 * t2669;
t2801 = t1914 * t2622 * t2796 + t2671 * t2790 + t2800;
t2802 = t2801 * t2068;
t2804 = t1980 * t2643;
t2805 = t2804 * t2796 * t2101;
t2807 = t2049 * t2654;
t2808 = t2807 * t2796 * t2107;
t2809 = t2682 + t2685 + t2688 + t2706 + t2709 + t2712 + t2730 + t2733 + t2736 + t2754 + t2757 + t2760 + t2778 + t2781 + t2784 + t2802 + t2805 + t2808;
t2811 = -t2664 * t2663 + t2667;
t2813 = t2669 * t2811 + t2675;
t2816 = t2661 * t2666;
t2817 = koppelP(1,1) * t2816;
t2818 = t2659 * t2666;
t2819 = koppelP(1,2) * t2818;
t2820 = koppelP(1,3) * t2664;
t2821 = t181 * t119 * t2813 - t2817 + t2819 - t2820;
t2827 = t281 * t2813 * t455 + t366 * t2813 * t462 + t2821 * t386;
t2830 = t2671 * t2811 - t2680;
t2833 = t2817 - t2819 + t2820;
t2836 = t181 * t119 * t2830 + t181 * t2167 * t2833;
t2842 = t280 * t215 * t2830 + t280 * t2188 * t2833;
t2848 = t365 * t2199 * t2833 + t365 * t327 * t2830;
t2850 = t2836 * t386 + t2842 * t455 + t2848 * t462;
t2853 = -t2664 * t2691 + t2693;
t2855 = t2853 * t2669 + t2699;
t2858 = koppelP(2,1) * t2816;
t2859 = koppelP(2,2) * t2818;
t2860 = koppelP(2,3) * t2664;
t2861 = t598 * t553 * t2855 - t2858 + t2859 - t2860;
t2867 = t665 * t2855 * t785 + t734 * t2855 * t791 + t2861 * t752;
t2870 = t2853 * t2671 - t2704;
t2873 = t2858 - t2859 + t2860;
t2876 = t598 * t2258 * t2873 + t598 * t553 * t2870;
t2882 = t664 * t2279 * t2873 + t664 * t628 * t2870;
t2888 = t733 * t2290 * t2873 + t733 * t704 * t2870;
t2890 = t2876 * t752 + t2882 * t785 + t2888 * t791;
t2893 = -t2664 * t2715 + t2717;
t2895 = t2893 * t2669 + t2723;
t2898 = koppelP(3,1) * t2816;
t2899 = koppelP(3,2) * t2818;
t2900 = koppelP(3,3) * t2664;
t2901 = t927 * t882 * t2895 - t2898 + t2899 - t2900;
t2907 = t1063 * t2895 * t1120 + t994 * t2895 * t1114 + t2901 * t1081;
t2910 = t2893 * t2671 - t2728;
t2913 = t2898 - t2899 + t2900;
t2916 = t927 * t2349 * t2913 + t927 * t882 * t2910;
t2922 = t993 * t2370 * t2913 + t993 * t957 * t2910;
t2928 = t1062 * t1033 * t2910 + t1062 * t2381 * t2913;
t2930 = t2916 * t1081 + t2922 * t1114 + t2928 * t1120;
t2933 = -t2664 * t2739 + t2741;
t2935 = t2933 * t2669 + t2747;
t2938 = koppelP(4,1) * t2816;
t2939 = koppelP(4,2) * t2818;
t2940 = koppelP(4,3) * t2664;
t2941 = t1256 * t1211 * t2935 - t2938 + t2939 - t2940;
t2947 = t1323 * t2935 * t1443 + t1392 * t2935 * t1449 + t2941 * t1410;
t2950 = t2933 * t2671 - t2752;
t2953 = t2938 - t2939 + t2940;
t2956 = t1256 * t1211 * t2950 + t1256 * t2440 * t2953;
t2962 = t1322 * t1286 * t2950 + t1322 * t2461 * t2953;
t2968 = t1391 * t1362 * t2950 + t1391 * t2472 * t2953;
t2970 = t2956 * t1410 + t2962 * t1443 + t2968 * t1449;
t2973 = -t2664 * t2763 + t2765;
t2975 = t2973 * t2669 + t2771;
t2978 = koppelP(5,1) * t2816;
t2979 = koppelP(5,2) * t2818;
t2980 = koppelP(5,3) * t2664;
t2981 = t1585 * t1540 * t2975 - t2978 + t2979 - t2980;
t2987 = t1652 * t2975 * t1772 + t1721 * t2975 * t1778 + t2981 * t1739;
t2990 = t2973 * t2671 - t2776;
t2993 = t2978 - t2979 + t2980;
t2996 = t1585 * t1540 * t2990 + t1585 * t2531 * t2993;
t3002 = t1651 * t1615 * t2990 + t1651 * t2552 * t2993;
t3008 = t1720 * t1691 * t2990 + t1720 * t2563 * t2993;
t3010 = t2996 * t1739 + t3002 * t1772 + t3008 * t1778;
t3013 = -t2664 * t2787 + t2789;
t3015 = t3013 * t2669 + t2795;
t3018 = koppelP(6,1) * t2816;
t3019 = koppelP(6,2) * t2818;
t3020 = koppelP(6,3) * t2664;
t3021 = t1914 * t1869 * t3015 - t3018 + t3019 - t3020;
t3027 = t1981 * t3015 * t2101 + t2050 * t3015 * t2107 + t3021 * t2068;
t3030 = t3013 * t2671 - t2800;
t3033 = t3018 - t3019 + t3020;
t3036 = t1914 * t1869 * t3030 + t1914 * t2622 * t3033;
t3042 = t1980 * t1944 * t3030 + t1980 * t2643 * t3033;
t3048 = t2049 * t2020 * t3030 + t2049 * t2654 * t3033;
t3050 = t3036 * t2068 + t3042 * t2101 + t3048 * t2107;
t3054 = rSges(4,2) * t2659 - rSges(4,1) * t2661;
t3056 = rSges(4,3) * t2666;
t3059 = t2669 * t2827 + t2671 * t2850 + t2669 * t2867 + t2671 * t2890 + t2669 * t2907 + t2671 * t2930 + t2669 * t2947 + t2671 * t2970 + t2669 * t2987 + t2671 * t3010 + t2669 * t3027 + t2671 * t3050 + (t2664 * t3054 + t3056) * m(4);
t3099 = rSges(4,1) * t2659 + rSges(4,2) * t2661;
t3101 = t2664 * (t2682 + t2685 + t2688) - t2666 * t2671 * t2827 + t2666 * t2669 * t2850 + t2664 * (t2706 + t2709 + t2712) - t2666 * t2671 * t2867 + t2666 * t2669 * t2890 + t2664 * (t2730 + t2733 + t2736) - t2666 * t2671 * t2907 + t2666 * t2669 * t2930 + t2664 * (t2754 + t2757 + t2760) - t2666 * t2671 * t2947 + t2666 * t2669 * t2970 + t2664 * (t2778 + t2781 + t2784) - t2666 * t2671 * t2987 + t2666 * t2669 * t3010 + t2664 * (t2802 + t2805 + t2808) - t2666 * t2671 * t3027 + t2666 * t2669 * t3050 - t3099 * t2666 * m(4);
t3102 = t181 * t2167;
t3103 = t183 * t3102;
t3104 = t302 * t2684;
t3105 = t384 * t2687;
t3106 = t3103 + t3104 - t3105;
t3112 = t441 * t2684 + t453 * t2687 + t302 * t3102;
t3118 = t453 * t2684 + t460 * t2687 - t384 * t3102;
t3121 = t598 * t2258;
t3122 = t183 * t3121;
t3123 = t679 * t2708;
t3124 = t750 * t2711;
t3125 = t3122 + t3123 - t3124;
t3131 = t774 * t2708 + t783 * t2711 + t679 * t3121;
t3137 = t783 * t2708 + t460 * t2711 - t750 * t3121;
t3140 = t927 * t2349;
t3141 = t183 * t3140;
t3142 = t1008 * t2732;
t3143 = t1079 * t2735;
t3144 = t3141 + t3142 - t3143;
t3150 = t1008 * t3140 + t1103 * t2732 + t1112 * t2735;
t3156 = -t1079 * t3140 + t1112 * t2732 + t460 * t2735;
t3159 = t1256 * t2440;
t3160 = t183 * t3159;
t3161 = t1337 * t2756;
t3162 = t1408 * t2759;
t3163 = t3160 + t3161 - t3162;
t3169 = t1337 * t3159 + t1432 * t2756 + t1441 * t2759;
t3175 = -t1408 * t3159 + t1441 * t2756 + t460 * t2759;
t3178 = t1585 * t2531;
t3179 = t183 * t3178;
t3180 = t1666 * t2780;
t3181 = t1737 * t2783;
t3182 = t3179 + t3180 - t3181;
t3188 = t1666 * t3178 + t1761 * t2780 + t1770 * t2783;
t3194 = -t1737 * t3178 + t1770 * t2780 + t460 * t2783;
t3197 = t1914 * t2622;
t3198 = t183 * t3197;
t3199 = t1995 * t2804;
t3200 = t2066 * t2807;
t3201 = t3198 + t3199 - t3200;
t3207 = t1995 * t3197 + t2090 * t2804 + t2099 * t2807;
t3213 = -t2066 * t3197 + t2099 * t2804 + t460 * t2807;
t3216 = t181 * t119 * t3106 + t280 * t215 * t3112 + t365 * t327 * t3118 + t598 * t553 * t3125 + t664 * t628 * t3131 + t733 * t704 * t3137 + t927 * t882 * t3144 + t993 * t957 * t3150 + t1062 * t1033 * t3156 + t1256 * t1211 * t3163 + t1322 * t1286 * t3169 + t1391 * t1362 * t3175 + t1585 * t1540 * t3182 + t1651 * t1615 * t3188 + t1720 * t1691 * t3194 + t1914 * t1869 * t3201 + t1980 * t1944 * t3207 + t2049 * t2020 * t3213;
t3253 = t181 * t2167 * t3106 + t280 * t2188 * t3112 + t365 * t2199 * t3118 + t598 * t2258 * t3125 + t664 * t2279 * t3131 + t733 * t2290 * t3137 + t927 * t2349 * t3144 + t993 * t2370 * t3150 + t1062 * t2381 * t3156 + t1256 * t2440 * t3163 + t1322 * t2461 * t3169 + t1391 * t2472 * t3175 + t1585 * t2531 * t3182 + t1651 * t2552 * t3188 + t1720 * t2563 * t3194 + t1914 * t2622 * t3201 + t1980 * t2643 * t3207 + t2049 * t2654 * t3213 + m(4);
t3254 = t3103 + t3104 - t3105 + t3122 + t3123 - t3124 + t3141 + t3142 - t3143 + t3160 + t3161 - t3162 + t3179 + t3180 - t3181 + t3198 + t3199 - t3200;
t3255 = t2681 * t3106;
t3257 = t2684 * t2676 * t3112;
t3259 = t2687 * t2676 * t3118;
t3260 = t2705 * t3125;
t3262 = t2708 * t2700 * t3131;
t3264 = t2711 * t2700 * t3137;
t3265 = t2729 * t3144;
t3267 = t2732 * t2724 * t3150;
t3269 = t2735 * t2724 * t3156;
t3270 = t2753 * t3163;
t3272 = t2756 * t2748 * t3169;
t3274 = t2759 * t2748 * t3175;
t3275 = t2777 * t3182;
t3277 = t2780 * t2772 * t3188;
t3279 = t2783 * t2772 * t3194;
t3280 = t2801 * t3201;
t3282 = t2804 * t2796 * t3207;
t3284 = t2807 * t2796 * t3213;
t3287 = t2659 * t2664;
t3289 = -rSges(4,1) * t2661 * t2664 + rSges(4,2) * t3287 + t3056;
t3293 = m(4) * (t2669 * t3289 + t3099 * t2671);
t3294 = t3255 + t3257 + t3259 + t3260 + t3262 + t3264 + t3265 + t3267 + t3269 + t3270 + t3272 + t3274 + t3275 + t3277 + t3279 + t3280 + t3282 + t3284 - t3293;
t3300 = t281 * t2813 * t3112 + t366 * t2813 * t3118 + t2821 * t3106;
t3305 = t2836 * t3106 + t2842 * t3112 + t2848 * t3118;
t3312 = t665 * t2855 * t3131 + t734 * t2855 * t3137 + t2861 * t3125;
t3317 = t2876 * t3125 + t2882 * t3131 + t2888 * t3137;
t3324 = t1063 * t2895 * t3156 + t994 * t2895 * t3150 + t2901 * t3144;
t3329 = t2916 * t3144 + t2922 * t3150 + t2928 * t3156;
t3336 = t1323 * t2935 * t3169 + t1392 * t2935 * t3175 + t2941 * t3163;
t3341 = t2956 * t3163 + t2962 * t3169 + t2968 * t3175;
t3348 = t1652 * t2975 * t3188 + t1721 * t2975 * t3194 + t2981 * t3182;
t3353 = t2996 * t3182 + t3002 * t3188 + t3008 * t3194;
t3360 = t1981 * t3015 * t3207 + t2050 * t3015 * t3213 + t3021 * t3201;
t3365 = t3036 * t3201 + t3042 * t3207 + t3048 * t3213;
t3369 = rSges(4,3) * t2664;
t3371 = (rSges(4,1) * t2816 - rSges(4,2) * t2818 + t3369) * m(4);
t3373 = t2669 * t3300 + t2669 * t3312 + t2669 * t3324 + t2669 * t3336 + t2669 * t3348 + t2669 * t3360 + t2671 * t3305 + t2671 * t3317 + t2671 * t3329 + t2671 * t3341 + t2671 * t3353 + t2671 * t3365 + t2671 * t3371;
t3422 = t2664 * (t3255 + t3257 + t3259) - t2666 * t2671 * t3300 + t2666 * t2669 * t3305 + t2664 * (t3260 + t3262 + t3264) - t2666 * t2671 * t3312 + t2666 * t2669 * t3317 + t2664 * (t3265 + t3267 + t3269) - t2666 * t2671 * t3324 + t2666 * t2669 * t3329 + t2664 * (t3270 + t3272 + t3274) - t2666 * t2671 * t3336 + t2666 * t2669 * t3341 + t2664 * (t3275 + t3277 + t3279) - t2666 * t2671 * t3348 + t2666 * t2669 * t3353 + t2664 * (t3280 + t3282 + t3284) - t2666 * t2671 * t3360 + t2666 * t2669 * t3365 - (t2661 * (t2671 * rSges(4,2) * t2664 - t2669 * rSges(4,1)) + (t2671 * rSges(4,1) * t2664 + rSges(4,2) * t2669) * t2659) * m(4);
t3427 = t183 * t2681;
t3428 = t2188 * t2676;
t3430 = t45 * t301 * t280;
t3431 = t3430 * t3428;
t3432 = t2199 * t2676;
t3434 = m(3) * t383 * t365;
t3435 = t3434 * t3432;
t3436 = t183 * t2705;
t3437 = t2279 * t2700;
t3439 = t45 * t678 * t664;
t3440 = t3439 * t3437;
t3441 = t2290 * t2700;
t3443 = m(3) * t749 * t733;
t3444 = t3443 * t3441;
t3445 = t183 * t2729;
t3446 = t2370 * t2724;
t3448 = t45 * t1007 * t993;
t3449 = t3448 * t3446;
t3450 = t2381 * t2724;
t3452 = m(3) * t1078 * t1062;
t3453 = t3452 * t3450;
t3454 = t183 * t2753;
t3455 = t2461 * t2748;
t3457 = t45 * t1336 * t1322;
t3458 = t3457 * t3455;
t3459 = t2472 * t2748;
t3461 = m(3) * t1407 * t1391;
t3462 = t3461 * t3459;
t3463 = t183 * t2777;
t3464 = t2552 * t2772;
t3466 = t45 * t1665 * t1651;
t3467 = t3466 * t3464;
t3468 = t2563 * t2772;
t3470 = m(3) * t1736 * t1720;
t3471 = t3470 * t3468;
t3472 = t183 * t2801;
t3473 = t2643 * t2796;
t3475 = t45 * t1994 * t1980;
t3476 = t3475 * t3473;
t3477 = t2654 * t2796;
t3479 = m(3) * t2065 * t2049;
t3480 = t3479 * t3477;
t3484 = m(4) * (t3099 * t2669 - t2671 * t3289);
t3485 = t3427 + t3431 - t3435 + t3436 + t3440 - t3444 + t3445 + t3449 - t3453 + t3454 + t3458 - t3462 + t3463 + t3467 - t3471 + t3472 + t3476 - t3480 + t3484;
t3486 = t183 * t2821;
t3487 = t215 * t2813;
t3488 = t3430 * t3487;
t3489 = t327 * t2813;
t3490 = t3434 * t3489;
t3491 = t3486 + t3488 - t3490;
t3493 = t183 * t2836;
t3495 = t45 * t301 * t2842;
t3497 = m(3) * t383 * t2848;
t3498 = t3493 + t3495 - t3497;
t3500 = t183 * t2861;
t3501 = t628 * t2855;
t3502 = t3439 * t3501;
t3503 = t704 * t2855;
t3504 = t3443 * t3503;
t3505 = t3500 + t3502 - t3504;
t3507 = t183 * t2876;
t3509 = t45 * t678 * t2882;
t3511 = m(3) * t749 * t2888;
t3512 = t3507 + t3509 - t3511;
t3514 = t183 * t2901;
t3515 = t957 * t2895;
t3516 = t3448 * t3515;
t3517 = t1033 * t2895;
t3518 = t3452 * t3517;
t3519 = t3514 + t3516 - t3518;
t3521 = t183 * t2916;
t3523 = t45 * t1007 * t2922;
t3525 = m(3) * t1078 * t2928;
t3526 = t3521 + t3523 - t3525;
t3528 = t183 * t2941;
t3529 = t1286 * t2935;
t3530 = t3457 * t3529;
t3531 = t1362 * t2935;
t3532 = t3461 * t3531;
t3533 = t3528 + t3530 - t3532;
t3535 = t183 * t2956;
t3537 = t45 * t1336 * t2962;
t3539 = m(3) * t1407 * t2968;
t3540 = t3535 + t3537 - t3539;
t3542 = t183 * t2981;
t3543 = t1615 * t2975;
t3544 = t3466 * t3543;
t3545 = t1691 * t2975;
t3546 = t3470 * t3545;
t3547 = t3542 + t3544 - t3546;
t3549 = t183 * t2996;
t3551 = t45 * t1665 * t3002;
t3553 = m(3) * t1736 * t3008;
t3554 = t3549 + t3551 - t3553;
t3556 = t183 * t3021;
t3557 = t1944 * t3015;
t3558 = t3475 * t3557;
t3559 = t2020 * t3015;
t3560 = t3479 * t3559;
t3561 = t3556 + t3558 - t3560;
t3563 = t183 * t3036;
t3565 = t45 * t1994 * t3042;
t3567 = m(3) * t2065 * t3048;
t3568 = t3563 + t3565 - t3567;
t3572 = m(4) * (t2666 * t3054 - t3369);
t3574 = t2669 * t3491 + t2669 * t3505 + t2669 * t3519 + t2669 * t3533 + t2669 * t3547 + t2669 * t3561 + t2669 * t3572 + t2671 * t3498 + t2671 * t3512 + t2671 * t3526 + t2671 * t3540 + t2671 * t3554 + t2671 * t3568;
t3575 = t3427 + t3431 - t3435;
t3581 = t3436 + t3440 - t3444;
t3587 = t3445 + t3449 - t3453;
t3593 = t3454 + t3458 - t3462;
t3599 = t3463 + t3467 - t3471;
t3605 = t3472 + t3476 - t3480;
t3616 = t2664 * t3575 - t2666 * t2671 * t3491 + t2666 * t2669 * t3498 + t2664 * t3581 - t2666 * t2671 * t3505 + t2666 * t2669 * t3512 + t2664 * t3587 - t2666 * t2671 * t3519 + t2666 * t2669 * t3526 + t2664 * t3593 - t2666 * t2671 * t3533 + t2666 * t2669 * t3540 + t2664 * t3599 - t2666 * t2671 * t3547 + t2666 * t2669 * t3554 + t2664 * t3605 - t2666 * t2671 * t3561 + t2666 * t2669 * t3568 + m(4) * (t2669 * t3099 * t2664 - t3054 * t2671);
t3621 = t441 * t280;
t3623 = t453 * t365;
t3625 = t45 * t301 * t2681 + t3621 * t3428 + t3623 * t3432;
t3630 = t453 * t280;
t3632 = t460 * t365;
t3634 = -m(3) * t383 * t2681 + t3630 * t3428 + t3632 * t3432;
t3641 = t774 * t664;
t3643 = t783 * t733;
t3645 = t45 * t678 * t2705 + t3641 * t3437 + t3643 * t3441;
t3650 = t783 * t664;
t3652 = t460 * t733;
t3654 = -m(3) * t749 * t2705 + t3650 * t3437 + t3652 * t3441;
t3661 = t1103 * t993;
t3663 = t1112 * t1062;
t3665 = t45 * t1007 * t2729 + t3661 * t3446 + t3663 * t3450;
t3670 = t1112 * t993;
t3672 = t460 * t1062;
t3674 = -m(3) * t1078 * t2729 + t3670 * t3446 + t3672 * t3450;
t3681 = t1432 * t1322;
t3683 = t1441 * t1391;
t3685 = t45 * t1336 * t2753 + t3681 * t3455 + t3683 * t3459;
t3690 = t1441 * t1322;
t3692 = t460 * t1391;
t3694 = -m(3) * t1407 * t2753 + t3690 * t3455 + t3692 * t3459;
t3701 = t1761 * t1651;
t3703 = t1770 * t1720;
t3705 = t45 * t1665 * t2777 + t3701 * t3464 + t3703 * t3468;
t3710 = t1770 * t1651;
t3712 = t460 * t1720;
t3714 = -m(3) * t1736 * t2777 + t3710 * t3464 + t3712 * t3468;
t3721 = t2090 * t1980;
t3723 = t2099 * t2049;
t3725 = t45 * t1994 * t2801 + t3721 * t3473 + t3723 * t3477;
t3730 = t2099 * t1980;
t3732 = t460 * t2049;
t3734 = -m(3) * t2065 * t2801 + t3730 * t3473 + t3732 * t3477;
t3737 = t181 * t119 * t3575 + t280 * t215 * t3625 + t365 * t327 * t3634 + t598 * t553 * t3581 + t664 * t628 * t3645 + t733 * t704 * t3654 + t927 * t882 * t3587 + t993 * t957 * t3665 + t1062 * t1033 * t3674 + t1256 * t1211 * t3593 + t1322 * t1286 * t3685 + t1391 * t1362 * t3694 + t1585 * t1540 * t3599 + t1651 * t1615 * t3705 + t1720 * t1691 * t3714 + t1914 * t1869 * t3605 + t1980 * t1944 * t3725 + t2049 * t2020 * t3734;
t3774 = t181 * t2167 * t3575 + t280 * t2188 * t3625 + t365 * t2199 * t3634 + t598 * t2258 * t3581 + t664 * t2279 * t3645 + t733 * t2290 * t3654 + t927 * t2349 * t3587 + t993 * t2370 * t3665 + t1062 * t2381 * t3674 + t1256 * t2440 * t3593 + t1322 * t2461 * t3685 + t1391 * t2472 * t3694 + t1585 * t2531 * t3599 + t1651 * t2552 * t3705 + t1720 * t2563 * t3714 + t1914 * t2622 * t3605 + t1980 * t2643 * t3725 + t2049 * t2654 * t3734 - t3293;
t3775 = t2681 * t3575;
t3777 = t2684 * t2676 * t3625;
t3779 = t2687 * t2676 * t3634;
t3780 = t2705 * t3581;
t3782 = t2708 * t2700 * t3645;
t3784 = t2711 * t2700 * t3654;
t3785 = t2729 * t3587;
t3787 = t2732 * t2724 * t3665;
t3789 = t2735 * t2724 * t3674;
t3790 = t2753 * t3593;
t3792 = t2756 * t2748 * t3685;
t3793 = t3775 + t3777 + t3779 + t3780 + t3782 + t3784 + t3785 + t3787 + t3789 + t3790 + t3792;
t3795 = t2759 * t2748 * t3694;
t3796 = t2777 * t3599;
t3798 = t2780 * t2772 * t3705;
t3800 = t2783 * t2772 * t3714;
t3801 = t2801 * t3605;
t3803 = t2804 * t2796 * t3725;
t3805 = t2807 * t2796 * t3734;
t3806 = rSges(4,1) ^ 2;
t3807 = rSges(4,2) ^ 2;
t3810 = m(4) * (-t3806 + t3807) + Icges(4,1) - Icges(4,2);
t3811 = t2661 ^ 2;
t3813 = rSges(4,1) * m(4);
t3814 = rSges(4,2) * t3813;
t3815 = -t3814 + Icges(4,4);
t3819 = rSges(4,3) ^ 2;
t3821 = m(4) * (-t3807 + t3819);
t3822 = -0.2e1 * t2661 * t3815 * t2659 + t3811 * t3810 + Icges(4,2) - Icges(4,3) + t3821;
t3823 = t2666 ^ 2;
t3826 = rSges(4,3) * t3813 - Icges(4,5);
t3830 = m(4) * rSges(4,2) * rSges(4,3) - Icges(4,6);
t3832 = -t3830 * t2659 + t2661 * t3826;
t3837 = (t3806 + t3807) * m(4);
t3838 = -0.2e1 * t2666 * t2664 * t3832 + t3823 * t3822 + Icges(4,3) + t3795 + t3796 + t3798 + t3800 + t3801 + t3803 + t3805 + t3837;
t3845 = t281 * t2813 * t3625 + t366 * t2813 * t3634 + t2821 * t3575;
t3850 = t2836 * t3575 + t2842 * t3625 + t2848 * t3634;
t3857 = t665 * t2855 * t3645 + t734 * t2855 * t3654 + t2861 * t3581;
t3862 = t2876 * t3581 + t2882 * t3645 + t2888 * t3654;
t3869 = t1063 * t2895 * t3674 + t994 * t2895 * t3665 + t2901 * t3587;
t3874 = t2916 * t3587 + t2922 * t3665 + t2928 * t3674;
t3881 = t1323 * t2935 * t3685 + t1392 * t2935 * t3694 + t2941 * t3593;
t3886 = t2956 * t3593 + t2962 * t3685 + t2968 * t3694;
t3893 = t1652 * t2975 * t3705 + t1721 * t2975 * t3714 + t2981 * t3599;
t3898 = t2996 * t3599 + t3002 * t3705 + t3008 * t3714;
t3905 = t1981 * t3015 * t3725 + t2050 * t3015 * t3734 + t3021 * t3605;
t3910 = t3036 * t3605 + t3042 * t3725 + t3048 * t3734;
t3915 = t2661 * t3810 * t2659 + 0.2e1 * t3811 * t3815 - Icges(4,4) + t3814;
t3919 = -t3826 * t2659 - t2661 * t3830;
t3921 = t3919 * t2664 + t2666 * t3915 + t2669 * t3845 + t2669 * t3857 + t2669 * t3869 + t2669 * t3881 + t2669 * t3893 + t2669 * t3905 + t2671 * t3850 + t2671 * t3862 + t2671 * t3874 + t2671 * t3886 + t2671 * t3898 + t2671 * t3910;
t3959 = -t3830 * t2659;
t3962 = Icges(4,3) + t3837;
t3964 = t2664 * (t3775 + t3777 + t3779) - t2666 * t2671 * t3845 + t2666 * t2669 * t3850 + t2664 * (t3780 + t3782 + t3784) - t2666 * t2671 * t3857 + t2666 * t2669 * t3862 + t2664 * (t3785 + t3787 + t3789) - t2666 * t2671 * t3869 + t2666 * t2669 * t3874 + t2664 * (t3790 + t3792 + t3795) - t2666 * t2671 * t3881 + t2666 * t2669 * t3886 + t2664 * (t3796 + t3798 + t3800) - t2666 * t2671 * t3893 + t2666 * t2669 * t3898 + t2664 * (t3801 + t3803 + t3805) - t2666 * t2671 * t3905 + t2666 * t2669 * t3910 + t2666 * (-t2661 * t3826 - t3959) + t2664 * t3962;
t3971 = t45 * t301 * t2821 + t3621 * t3487 + t3623 * t3489;
t3978 = -m(3) * t383 * t2821 + t3630 * t3487 + t3632 * t3489;
t3987 = t45 * t678 * t2861 + t3641 * t3501 + t3643 * t3503;
t3994 = -m(3) * t749 * t2861 + t3650 * t3501 + t3652 * t3503;
t4003 = t45 * t1007 * t2901 + t3661 * t3515 + t3663 * t3517;
t4010 = -m(3) * t1078 * t2901 + t3670 * t3515 + t3672 * t3517;
t4019 = t45 * t1336 * t2941 + t3681 * t3529 + t3683 * t3531;
t4026 = -m(3) * t1407 * t2941 + t3690 * t3529 + t3692 * t3531;
t4035 = t45 * t1665 * t2981 + t3701 * t3543 + t3703 * t3545;
t4042 = -m(3) * t1736 * t2981 + t3710 * t3543 + t3712 * t3545;
t4051 = t45 * t1994 * t3021 + t3721 * t3557 + t3723 * t3559;
t4058 = -m(3) * t2065 * t3021 + t3730 * t3557 + t3732 * t3559;
t4061 = t181 * t119 * t3491 + t280 * t215 * t3971 + t365 * t327 * t3978 + t598 * t553 * t3505 + t664 * t628 * t3987 + t733 * t704 * t3994 + t927 * t882 * t3519 + t993 * t957 * t4003 + t1062 * t1033 * t4010 + t1256 * t1211 * t3533 + t1322 * t1286 * t4019 + t1391 * t1362 * t4026 + t1585 * t1540 * t3547 + t1651 * t1615 * t4035 + t1720 * t1691 * t4042 + t1914 * t1869 * t3561 + t1980 * t1944 * t4051 + t2049 * t2020 * t4058 + t3293;
t4098 = t181 * t2167 * t3491 + t280 * t2188 * t3971 + t365 * t2199 * t3978 + t598 * t2258 * t3505 + t664 * t2279 * t3987 + t733 * t2290 * t3994 + t927 * t2349 * t3519 + t993 * t2370 * t4003 + t1062 * t2381 * t4010 + t1256 * t2440 * t3533 + t1322 * t2461 * t4019 + t1391 * t2472 * t4026 + t1585 * t2531 * t3547 + t1651 * t2552 * t4035 + t1720 * t2563 * t4042 + t1914 * t2622 * t3561 + t1980 * t2643 * t4051 + t2049 * t2654 * t4058;
t4099 = t3486 + t3488 - t3490 + t3500 + t3502 - t3504 + t3514 + t3516 - t3518 + t3528 + t3530 - t3532 + t3542 + t3544 - t3546 + t3556 + t3558 - t3560 + t3572;
t4100 = t2681 * t3491;
t4102 = t2684 * t2676 * t3971;
t4104 = t2687 * t2676 * t3978;
t4105 = t2705 * t3505;
t4107 = t2708 * t2700 * t3987;
t4109 = t2711 * t2700 * t3994;
t4110 = t2729 * t3519;
t4112 = t2732 * t2724 * t4003;
t4114 = t2735 * t2724 * t4010;
t4115 = t2753 * t3533;
t4117 = t2756 * t2748 * t4019;
t4118 = t4100 + t4102 + t4104 + t4105 + t4107 + t4109 + t4110 + t4112 + t4114 + t4115 + t4117;
t4120 = t2759 * t2748 * t4026;
t4121 = t2777 * t3547;
t4123 = t2780 * t2772 * t4035;
t4125 = t2783 * t2772 * t4042;
t4126 = t2801 * t3561;
t4128 = t2804 * t2796 * t4051;
t4130 = t2807 * t2796 * t4058;
t4136 = t3815 * t2669;
t4140 = t3815 * t2664;
t4144 = t3810 * t2669 - 0.2e1 * t2671 * t4140;
t4153 = t2664 * t2669;
t4161 = t4120 + t4121 + t4123 + t4125 + t4126 + t4128 + t4130 + 0.2e1 * t3823 * t2671 * t3832 + t2666 * (t3811 * (t2671 * t3810 * t2664 + 0.2e1 * t4136) + t2661 * t2659 * t4144 + t2671 * t2664 * (t3821 + Icges(4,2) - Icges(4,3)) - t4136) + t2661 * (-t2671 * t3826 - t3830 * t4153) - t2659 * (-t2671 * t3830 + t3826 * t4153);
t4168 = t281 * t2813 * t3971 + t366 * t2813 * t3978 + t2821 * t3491;
t4173 = t2836 * t3491 + t2842 * t3971 + t2848 * t3978;
t4180 = t665 * t2855 * t3987 + t734 * t2855 * t3994 + t2861 * t3505;
t4185 = t2876 * t3505 + t2882 * t3987 + t2888 * t3994;
t4192 = t1063 * t2895 * t4010 + t994 * t2895 * t4003 + t2901 * t3519;
t4197 = t2916 * t3519 + t2922 * t4003 + t2928 * t4010;
t4204 = t1323 * t2935 * t4019 + t1392 * t2935 * t4026 + t2941 * t3533;
t4209 = t2956 * t3533 + t2962 * t4019 + t2968 * t4026;
t4216 = t1652 * t2975 * t4035 + t1721 * t2975 * t4042 + t2981 * t3547;
t4221 = t2996 * t3547 + t3002 * t4035 + t3008 * t4042;
t4228 = t1981 * t3015 * t4051 + t2050 * t3015 * t4058 + t3021 * t3561;
t4233 = t3036 * t3561 + t3042 * t4051 + t3048 * t4058;
t4238 = t3830 * t2666 + t3810 * t3287;
t4246 = -t3826 * t2818;
t4251 = Icges(4,1) + (t3807 + t3819) * m(4);
t4253 = t2669 * t4168 + t2671 * t4173 + t2669 * t4180 + t2671 * t4185 + t2669 * t4192 + t2671 * t4197 + t2669 * t4204 + t2671 * t4209 + t2669 * t4216 + t2671 * t4221 + t2669 * t4228 + t2671 * t4233 - t3811 * t4144 + t2661 * (0.2e1 * t3815 * t2659 * t2669 + t2671 * t4238) + t2671 * (-t3815 * t2664 - t4246) + t2669 * t4251;
t4294 = -t2661 * t3826 * t2664 - t2664 * t3959 - t2666 * t3962;
t4297 = t2664 * (t4100 + t4102 + t4104) - t2666 * t2671 * t4168 + t2666 * t2669 * t4173 + t2664 * (t4105 + t4107 + t4109) - t2666 * t2671 * t4180 + t2666 * t2669 * t4185 + t2664 * (t4110 + t4112 + t4114) - t2666 * t2671 * t4192 + t2666 * t2669 * t4197 + t2664 * (t4115 + t4117 + t4120) - t2666 * t2671 * t4204 + t2666 * t2669 * t4209 + t2664 * (t4121 + t4123 + t4125) - t2666 * t2671 * t4216 + t2666 * t2669 * t4221 + t2664 * (t4126 + t4128 + t4130) - t2666 * t2671 * t4228 + t2666 * t2669 * t4233 + t2671 * t4294 + t3919 * t2669;
t4304 = t45 * t301 * t2836 + t441 * t2842 + t453 * t2848;
t4311 = -m(3) * t383 * t2836 + t453 * t2842 + t460 * t2848;
t4320 = t45 * t678 * t2876 + t774 * t2882 + t783 * t2888;
t4327 = -m(3) * t749 * t2876 + t783 * t2882 + t460 * t2888;
t4336 = t45 * t1007 * t2916 + t1103 * t2922 + t1112 * t2928;
t4343 = -m(3) * t1078 * t2916 + t1112 * t2922 + t460 * t2928;
t4352 = t45 * t1336 * t2956 + t1432 * t2962 + t1441 * t2968;
t4359 = -m(3) * t1407 * t2956 + t1441 * t2962 + t460 * t2968;
t4368 = t45 * t1665 * t2996 + t1761 * t3002 + t1770 * t3008;
t4375 = -m(3) * t1736 * t2996 + t1770 * t3002 + t460 * t3008;
t4384 = t45 * t1994 * t3036 + t2090 * t3042 + t2099 * t3048;
t4391 = -m(3) * t2065 * t3036 + t2099 * t3042 + t460 * t3048;
t4394 = t181 * t119 * t3498 + t280 * t215 * t4304 + t365 * t327 * t4311 + t598 * t553 * t3512 + t664 * t628 * t4320 + t733 * t704 * t4327 + t927 * t882 * t3526 + t993 * t957 * t4336 + t1062 * t1033 * t4343 + t1256 * t1211 * t3540 + t1322 * t1286 * t4352 + t1391 * t1362 * t4359 + t1585 * t1540 * t3554 + t1651 * t1615 * t4368 + t1720 * t1691 * t4375 + t1914 * t1869 * t3568 + t1980 * t1944 * t4384 + t2049 * t2020 * t4391 - t3484;
t4431 = t181 * t2167 * t3498 + t280 * t2188 * t4304 + t365 * t2199 * t4311 + t598 * t2258 * t3512 + t664 * t2279 * t4320 + t733 * t2290 * t4327 + t927 * t2349 * t3526 + t993 * t2370 * t4336 + t1062 * t2381 * t4343 + t1256 * t2440 * t3540 + t1322 * t2461 * t4352 + t1391 * t2472 * t4359 + t1585 * t2531 * t3554 + t1651 * t2552 * t4368 + t1720 * t2563 * t4375 + t1914 * t2622 * t3568 + t1980 * t2643 * t4384 + t2049 * t2654 * t4391 + t3371;
t4432 = t3493 + t3495 - t3497 + t3507 + t3509 - t3511 + t3521 + t3523 - t3525 + t3535 + t3537 - t3539 + t3549 + t3551 - t3553 + t3563 + t3565 - t3567;
t4433 = t2681 * t3498;
t4435 = t2684 * t2676 * t4304;
t4437 = t2687 * t2676 * t4311;
t4438 = t2705 * t3512;
t4440 = t2708 * t2700 * t4320;
t4442 = t2711 * t2700 * t4327;
t4443 = t2729 * t3526;
t4445 = t2732 * t2724 * t4336;
t4447 = t2735 * t2724 * t4343;
t4448 = t2753 * t3540;
t4450 = t2756 * t2748 * t4352;
t4451 = t4433 + t4435 + t4437 + t4438 + t4440 + t4442 + t4443 + t4445 + t4447 + t4448 + t4450;
t4453 = t2759 * t2748 * t4359;
t4454 = t2777 * t3554;
t4456 = t2780 * t2772 * t4368;
t4458 = t2783 * t2772 * t4375;
t4459 = t2801 * t3568;
t4461 = t2804 * t2796 * t4384;
t4463 = t2807 * t2796 * t4391;
t4464 = t3832 * t2669;
t4477 = t4453 + t4454 + t4456 + t4458 + t4459 + t4461 + t4463 - 0.2e1 * t3823 * t4464 + t2666 * (-t2669 * t3822 * t2664 + t2671 * t3915) + t4464 - t2671 * (t3826 * t2659 + t2661 * t3830) * t2664;
t4484 = t281 * t2813 * t4304 + t366 * t2813 * t4311 + t2821 * t3498;
t4489 = t2836 * t3498 + t2842 * t4304 + t2848 * t4311;
t4496 = t665 * t2855 * t4320 + t734 * t2855 * t4327 + t2861 * t3512;
t4501 = t2876 * t3512 + t2882 * t4320 + t2888 * t4327;
t4508 = t1063 * t2895 * t4343 + t994 * t2895 * t4336 + t2901 * t3526;
t4513 = t2916 * t3526 + t2922 * t4336 + t2928 * t4343;
t4520 = t1323 * t2935 * t4352 + t1392 * t2935 * t4359 + t2941 * t3540;
t4525 = t2956 * t3540 + t2962 * t4352 + t2968 * t4359;
t4532 = t1652 * t2975 * t4368 + t1721 * t2975 * t4375 + t2981 * t3554;
t4537 = t2996 * t3554 + t3002 * t4368 + t3008 * t4375;
t4544 = t1981 * t3015 * t4384 + t2050 * t3015 * t4391 + t3021 * t3568;
t4549 = t3036 * t3568 + t3042 * t4384 + t3048 * t4391;
t4565 = t2669 * t4484 + t2671 * t4489 + t2669 * t4496 + t2671 * t4501 + t2669 * t4508 + t2671 * t4513 + t2669 * t4520 + t2671 * t4525 + t2669 * t4532 + t2671 * t4537 + t2669 * t4544 + t2671 * t4549 + t3811 * (-0.2e1 * t2669 * t4140 - t3810 * t2671) + t2661 * (0.2e1 * t3815 * t2659 * t2671 - t2669 * t4238) + t2669 * (t4140 + t4246) + t2671 * t4251;
t4604 = t2664 * (t4433 + t4435 + t4437) - t2666 * t2671 * t4484 + t2666 * t2669 * t4489 + t2664 * (t4438 + t4440 + t4442) - t2666 * t2671 * t4496 + t2666 * t2669 * t4501 + t2664 * (t4443 + t4445 + t4447) - t2666 * t2671 * t4508 + t2666 * t2669 * t4513 + t2664 * (t4448 + t4450 + t4453) - t2666 * t2671 * t4520 + t2666 * t2669 * t4525 + t2664 * (t4454 + t4456 + t4458) - t2666 * t2671 * t4532 + t2666 * t2669 * t4537 + t2664 * (t4459 + t4461 + t4463) - t2666 * t2671 * t4544 + t2666 * t2669 * t4549 - t2669 * t4294 + t3919 * t2671;
unknown(1,1) = t2110;
unknown(1,2) = t2657;
unknown(1,3) = t2658;
unknown(1,4) = t2809;
unknown(1,5) = t3059;
unknown(1,6) = t3101;
unknown(2,1) = t3216;
unknown(2,2) = t3253;
unknown(2,3) = t3254;
unknown(2,4) = t3294;
unknown(2,5) = t3373;
unknown(2,6) = t3422;
unknown(3,1) = t2658;
unknown(3,2) = t3254;
unknown(3,3) = (6 * m(1)) + (6 * m(2)) + 0.6e1 * m(3) + m(4);
unknown(3,4) = t3485;
unknown(3,5) = t3574;
unknown(3,6) = t3616;
unknown(4,1) = t3737;
unknown(4,2) = t3774;
unknown(4,3) = t3485;
unknown(4,4) = t3793 + t3838;
unknown(4,5) = t3921;
unknown(4,6) = t3964;
unknown(5,1) = t4061;
unknown(5,2) = t4098;
unknown(5,3) = t4099;
unknown(5,4) = t4118 + t4161;
unknown(5,5) = t4253;
unknown(5,6) = t4297;
unknown(6,1) = t4394;
unknown(6,2) = t4431;
unknown(6,3) = t4432;
unknown(6,4) = t4451 + t4477;
unknown(6,5) = t4565;
unknown(6,6) = t4604;
MX  = unknown;
