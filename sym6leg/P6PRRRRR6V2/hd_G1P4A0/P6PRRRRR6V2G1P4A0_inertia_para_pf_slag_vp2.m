% Calculate inertia matrix for parallel robot
% P6PRRRRR6V2G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 01:01
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1P4A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:52:36
% EndTime: 2020-03-12 23:52:48
% DurationCPUTime: 13.29s
% Computational Cost: add. (310812->2032), mult. (822162->3498), div. (3780->18), fcn. (694642->50), ass. (0->1204)
unknown=NaN(6,6);
t1 = sin(pkin(10));
t2 = cos(pkin(4));
t3 = t2 * t1;
t4 = cos(qJ(2,1));
t6 = cos(pkin(10));
t7 = sin(qJ(2,1));
t9 = t4 * t3 + t7 * t6;
t10 = cos(legFrame(1,3));
t12 = sin(legFrame(1,3));
t14 = t2 * t6;
t16 = -t7 * t1 + t4 * t14;
t18 = t10 * t9 + t16 * t12;
t19 = t18 * pkin(3);
t20 = sin(pkin(6));
t21 = t20 * pkin(9);
t22 = cos(pkin(5));
t23 = t22 * t21;
t28 = -t7 * t3 + t4 * t6;
t32 = t4 * t1 + t7 * t14;
t34 = t10 * t28 - t32 * t12;
t35 = cos(pkin(6));
t36 = t35 ^ 2;
t37 = pkin(9) ^ 2;
t39 = pkin(3) ^ 2;
t40 = t37 * t36 - t37 + t39;
t43 = sin(pkin(5));
t45 = sin(pkin(4));
t46 = t45 * pkin(3);
t47 = t20 * t46;
t48 = t22 - 0.1e1;
t49 = t48 * pkin(9);
t50 = t22 + 0.1e1;
t53 = t10 * t1 + t12 * t6;
t59 = cos(qJ(3,1));
t60 = t59 ^ 2;
t63 = sin(qJ(3,1));
t66 = pkin(9) * t35 + pkin(8);
t72 = pkin(9) * t20 * t63;
t74 = 0.2e1 * t72 + pkin(2);
t79 = t40 * t45;
t81 = t63 * t53 * t79;
t82 = t66 * t19;
t84 = t22 ^ 2;
t86 = t45 * pkin(2);
t87 = t53 * pkin(9);
t88 = t20 * t87;
t92 = t53 * t45;
t93 = t66 * t63;
t98 = t63 * pkin(2);
t100 = pkin(9) * t36;
t101 = t20 * t98 + pkin(9) - t100;
t106 = t66 * t18;
t111 = t84 * t20;
t114 = pkin(2) * pkin(3);
t119 = t60 * (t43 * (0.2e1 * t23 * t19 + t40 * t34) + 0.2e1 * t53 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t63 * t40 * t18 + t66 * t53 * t46) + pkin(3) * t34 * t74) + t84 * (-t81 - t82) + t81 - t88 * t86 + t82) + t43 * (-t22 * t20 * (-t93 * t92 + t19) + t101 * t34) * pkin(9) - t111 * pkin(9) * (t63 * t106 + t53 * t46) + t63 * (t21 * t106 + t92 * t114) + t88 * t46;
t121 = pkin(9) * t20 * pkin(3);
t124 = t2 * t50 * t48 * t121;
t125 = t22 * t4;
t133 = 0.2e1 * t60 * (t124 - t45 * (t121 * t125 - t40 * t7 / 0.2e1) * t43);
t134 = t45 * t4;
t135 = t40 * t63;
t137 = pkin(3) * t2;
t138 = t66 * t137;
t141 = pkin(3) * t7;
t146 = t40 * t2;
t147 = t63 * t146;
t148 = pkin(3) * t4;
t149 = t66 * t45;
t150 = t149 * t148;
t153 = t2 * pkin(2);
t154 = t21 * t153;
t157 = t66 * t2;
t172 = t66 * t21;
t174 = pkin(3) * t153;
t177 = t20 * t2;
t178 = pkin(3) * pkin(9);
t179 = t178 * t177;
t181 = 0.1e1 / (t133 + t59 * (t43 * (t22 * (t135 * t134 + t138) + t74 * t45 * t141) + t84 * (-t147 + t150) + t147 - t154 - t150) + t43 * pkin(9) * (t22 * t20 * (t45 * t148 + t63 * t157) + t101 * t45 * t7) + t111 * (t93 * t134 - t137) * pkin(9) + t63 * (-t172 * t134 + t174) + t179);
t182 = t181 * t119;
t183 = m(1) + m(2) + m(3);
t184 = t183 * t182;
t187 = -t12 * t1 + t10 * t6;
t188 = t187 * t4;
t190 = t53 * t7;
t191 = t2 * t188 - t190;
t194 = t43 * pkin(3);
t195 = t45 * t187;
t197 = t187 * t7;
t199 = t53 * t4;
t200 = t2 * t197 + t199;
t206 = t22 * t20;
t208 = t20 * t43;
t209 = t187 * pkin(9);
t215 = t59 * (t22 * pkin(3) * t191 + t20 * pkin(9) * t200 - t195 * t194) + t63 * (t206 * pkin(9) * t191 - t45 * t209 * t208 - pkin(3) * t200);
t218 = 0.2e1 * t121 * t84 * t2;
t220 = t45 * t43;
t221 = t178 * t220;
t224 = t43 * t7;
t226 = 0.2e1 * t179;
t229 = t84 * t146;
t231 = t22 * t40 * t43;
t234 = pkin(9) * t208;
t239 = t84 * t149;
t241 = t66 * t43;
t243 = t22 * t241 * t137;
t247 = t43 * t7 * pkin(2) - t66 * t4;
t253 = t66 * pkin(9);
t254 = t84 * t253;
t258 = t22 * t253;
t259 = t258 * t20 * t43 * t2;
t261 = t45 * t20;
t265 = t84 * pkin(3);
t266 = t265 * t177;
t268 = t20 * t220;
t274 = t45 * (t35 + 0.1e1) * (t35 - 0.1e1);
t276 = pkin(3) * t177;
t280 = 0.1e1 / (t60 * (-0.2e1 * t221 * t20 * t125 + t79 * t224 + t218 - t226) + t59 * (t63 * (0.2e1 * t234 * t45 * t141 + t231 * t134 + t146 - t229) + t239 * t148 + t243 + t45 * t247 * pkin(3) - t154) + t63 * (t261 * pkin(9) * t247 + t254 * t20 * t134 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t125 - t274 * pkin(9) * t224 - t266 + t276));
t281 = t280 * t215;
t288 = t43 * (m(3) * pkin(8) + mrSges(3,3));
t291 = m(3) * pkin(2);
t292 = t59 * mrSges(3,1);
t293 = t63 * mrSges(3,2);
t296 = t7 * (t22 * (-mrSges(3,1) * t63 - mrSges(3,2) * t59) + t288 - mrSges(2,2)) + (t291 + t292 - t293 + mrSges(2,1)) * t4;
t297 = t296 * t45;
t298 = t297 * t281;
t301 = t21 * t22 * t7 + t148;
t305 = t21 * t125 - t141;
t309 = t72 + pkin(2);
t313 = pkin(3) * t22 * t63 - t241;
t315 = t4 * t309 - t7 * t313;
t320 = t309 * t7 + t4 * t313;
t322 = t59 * (-t2 * t301 * t187 - t305 * t53) - t2 * t315 * t187 + t320 * t53;
t325 = t22 * t66 * t194;
t327 = pkin(9) * t20 * pkin(2);
t330 = t66 * pkin(3);
t331 = t84 * t330;
t332 = t43 * t63;
t333 = t22 * t40;
t343 = t21 * t265;
t351 = t22 * t194;
t360 = 0.1e1 / (t133 + t59 * (t2 * (-t84 * t135 + t135 + t325 - t327) + t45 * (t4 * (t333 * t332 - t330 + t331) + t74 * t43 * t141)) + t2 * (-t343 + t258 * t20 * t332 + (t98 + t21) * pkin(3)) + pkin(9) * t45 * (t4 * t20 * (t84 * t93 + t351 - t93) + t101 * t224));
t361 = t360 * t322;
t377 = t45 * (t59 * (t22 * mrSges(3,1) * t4 - mrSges(3,2) * t7) - (t22 * t4 * mrSges(3,2) + mrSges(3,1) * t7) * t63) + t2 * t43 * (-t293 + t292);
t378 = t377 * t361;
t379 = t184 + t298 + t378;
t383 = Ifges(3,1) - Ifges(3,2);
t388 = pkin(8) ^ 2;
t389 = t388 * m(3);
t391 = 0.2e1 * mrSges(3,3) * pkin(8);
t395 = -mrSges(3,2) * pkin(8) + Ifges(3,6);
t398 = pkin(8) * mrSges(3,1) - Ifges(3,5);
t401 = t43 * (t59 * t395 - t398 * t63);
t406 = mrSges(3,1) * pkin(2);
t409 = pkin(2) ^ 2;
t410 = t409 * m(3);
t411 = pkin(2) * t293;
t413 = t84 * (-0.2e1 * Ifges(3,4) * t59 * t63 + t60 * t383 - Ifges(3,1) + Ifges(3,3) - t389 - t391) + 0.2e1 * t22 * t401 - t60 * t383 + 0.2e1 * t59 * (Ifges(3,4) * t63 + t406) + t410 + t389 - 0.2e1 * t411 + t391 + Ifges(2,3) + Ifges(3,1);
t418 = t401 + t22 * (pkin(2) * t292 + Ifges(3,3) - t411);
t420 = t297 * t182 + t413 * t281 + t418 * t361;
t426 = Ifges(3,3) * t361 + t377 * t182 + t418 * t281;
t429 = cos(qJ(2,2));
t431 = sin(qJ(2,2));
t433 = t429 * t3 + t431 * t6;
t434 = cos(legFrame(2,3));
t436 = sin(legFrame(2,3));
t439 = -t431 * t1 + t429 * t14;
t441 = t434 * t433 + t439 * t436;
t442 = t441 * pkin(3);
t447 = -t431 * t3 + t429 * t6;
t451 = t429 * t1 + t431 * t14;
t453 = t434 * t447 - t451 * t436;
t459 = t434 * t1 + t436 * t6;
t465 = cos(qJ(3,2));
t466 = t465 ^ 2;
t469 = sin(qJ(3,2));
t476 = pkin(9) * t20 * t469;
t478 = 0.2e1 * t476 + pkin(2);
t484 = t469 * t459 * t79;
t485 = t66 * t442;
t488 = t459 * pkin(9);
t489 = t20 * t488;
t493 = t459 * t45;
t494 = t66 * t469;
t499 = t469 * pkin(2);
t501 = t20 * t499 + pkin(9) - t100;
t506 = t66 * t441;
t517 = t466 * (t43 * (0.2e1 * t23 * t442 + t40 * t453) + 0.2e1 * t459 * t50 * t49 * t47) + t465 * (t43 * (t22 * (-t469 * t40 * t441 + t66 * t459 * t46) + pkin(3) * t453 * t478) + t84 * (-t484 - t485) + t484 - t489 * t86 + t485) + t43 * (-t22 * t20 * (-t494 * t493 + t442) + t501 * t453) * pkin(9) - t111 * pkin(9) * (t459 * t46 + t469 * t506) + t469 * (t493 * t114 + t21 * t506) + t489 * t46;
t518 = t22 * t429;
t526 = 0.2e1 * t466 * (t124 - t45 * (t121 * t518 - t40 * t431 / 0.2e1) * t43);
t527 = t45 * t429;
t528 = t40 * t469;
t532 = pkin(3) * t431;
t537 = t469 * t146;
t538 = pkin(3) * t429;
t539 = t149 * t538;
t562 = 0.1e1 / (t526 + t465 * (t43 * (t22 * (t528 * t527 + t138) + t478 * t45 * t532) + t84 * (-t537 + t539) + t537 - t154 - t539) + t43 * pkin(9) * (t22 * t20 * (t469 * t157 + t45 * t538) + t501 * t45 * t431) + t111 * (t494 * t527 - t137) * pkin(9) + t469 * (-t172 * t527 + t174) + t179);
t563 = t562 * t517;
t564 = t183 * t563;
t567 = -t436 * t1 + t434 * t6;
t568 = t567 * t429;
t570 = t459 * t431;
t571 = t2 * t568 - t570;
t574 = t45 * t567;
t576 = t567 * t431;
t578 = t459 * t429;
t579 = t2 * t576 + t578;
t586 = t567 * pkin(9);
t592 = t465 * (t22 * pkin(3) * t571 + t20 * pkin(9) * t579 - t574 * t194) + t469 * (t206 * pkin(9) * t571 - t45 * t586 * t208 - pkin(3) * t579);
t596 = t43 * t431;
t610 = t43 * t431 * pkin(2) - t66 * t429;
t628 = 0.1e1 / (t466 * (-0.2e1 * t221 * t20 * t518 + t79 * t596 + t218 - t226) + t465 * (t469 * (0.2e1 * t234 * t45 * t532 + t231 * t527 + t146 - t229) + t239 * t538 + t243 + t45 * t610 * pkin(3) - t154) + t469 * (t261 * pkin(9) * t610 + t254 * t20 * t527 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t518 - t274 * pkin(9) * t596 - t266 + t276));
t629 = t628 * t592;
t636 = t465 * mrSges(3,1);
t637 = t469 * mrSges(3,2);
t640 = t431 * (t22 * (-mrSges(3,1) * t469 - mrSges(3,2) * t465) + t288 - mrSges(2,2)) + (t291 + t636 - t637 + mrSges(2,1)) * t429;
t641 = t640 * t45;
t642 = t641 * t629;
t645 = t21 * t22 * t431 + t538;
t649 = t21 * t518 - t532;
t653 = t476 + pkin(2);
t657 = pkin(3) * t22 * t469 - t241;
t659 = t429 * t653 - t431 * t657;
t664 = t429 * t657 + t653 * t431;
t666 = t465 * (-t2 * t645 * t567 - t649 * t459) - t2 * t659 * t567 + t664 * t459;
t670 = t43 * t469;
t695 = 0.1e1 / (t526 + t465 * (t2 * (-t84 * t528 + t325 - t327 + t528) + t45 * (t429 * (t333 * t670 - t330 + t331) + t478 * t43 * t532)) + t2 * (-t343 + t258 * t20 * t670 + (t499 + t21) * pkin(3)) + pkin(9) * t45 * (t429 * t20 * (t84 * t494 + t351 - t494) + t501 * t596));
t696 = t695 * t666;
t712 = t45 * (t465 * (t22 * mrSges(3,1) * t429 - mrSges(3,2) * t431) - (t22 * t429 * mrSges(3,2) + mrSges(3,1) * t431) * t469) + t2 * t43 * (-t637 + t636);
t713 = t712 * t696;
t714 = t564 + t642 + t713;
t727 = t43 * (t465 * t395 - t398 * t469);
t734 = pkin(2) * t637;
t736 = t84 * (-0.2e1 * Ifges(3,4) * t465 * t469 + t466 * t383 - Ifges(3,1) + Ifges(3,3) - t389 - t391) + 0.2e1 * t22 * t727 - t466 * t383 + 0.2e1 * t465 * (Ifges(3,4) * t469 + t406) + t410 + t389 - 0.2e1 * t734 + t391 + Ifges(2,3) + Ifges(3,1);
t741 = t727 + t22 * (pkin(2) * t636 + Ifges(3,3) - t734);
t743 = t641 * t563 + t736 * t629 + t741 * t696;
t749 = Ifges(3,3) * t696 + t712 * t563 + t741 * t629;
t752 = cos(qJ(2,3));
t754 = sin(qJ(2,3));
t756 = t752 * t3 + t754 * t6;
t757 = cos(legFrame(3,3));
t759 = sin(legFrame(3,3));
t762 = -t754 * t1 + t752 * t14;
t764 = t757 * t756 + t762 * t759;
t765 = t764 * pkin(3);
t770 = -t754 * t3 + t752 * t6;
t774 = t752 * t1 + t754 * t14;
t776 = t757 * t770 - t774 * t759;
t782 = t757 * t1 + t759 * t6;
t788 = cos(qJ(3,3));
t789 = t788 ^ 2;
t792 = sin(qJ(3,3));
t799 = pkin(9) * t20 * t792;
t801 = 0.2e1 * t799 + pkin(2);
t807 = t792 * t782 * t79;
t808 = t66 * t765;
t811 = t782 * pkin(9);
t812 = t20 * t811;
t816 = t782 * t45;
t817 = t66 * t792;
t822 = t792 * pkin(2);
t824 = t20 * t822 + pkin(9) - t100;
t829 = t66 * t764;
t840 = t789 * (t43 * (0.2e1 * t23 * t765 + t40 * t776) + 0.2e1 * t782 * t50 * t49 * t47) + t788 * (t43 * (t22 * (-t792 * t40 * t764 + t66 * t782 * t46) + pkin(3) * t776 * t801) + t84 * (-t807 - t808) + t807 - t812 * t86 + t808) + t43 * (-t22 * t20 * (-t817 * t816 + t765) + t824 * t776) * pkin(9) - t111 * pkin(9) * (t782 * t46 + t792 * t829) + t792 * (t816 * t114 + t21 * t829) + t812 * t46;
t841 = t22 * t752;
t849 = 0.2e1 * t789 * (t124 - t45 * (t121 * t841 - t40 * t754 / 0.2e1) * t43);
t850 = t45 * t752;
t851 = t40 * t792;
t855 = pkin(3) * t754;
t860 = t792 * t146;
t861 = pkin(3) * t752;
t862 = t149 * t861;
t885 = 0.1e1 / (t849 + t788 * (t43 * (t22 * (t851 * t850 + t138) + t801 * t45 * t855) + t84 * (-t860 + t862) + t860 - t154 - t862) + t43 * pkin(9) * (t22 * t20 * (t792 * t157 + t45 * t861) + t824 * t45 * t754) + t111 * (t817 * t850 - t137) * pkin(9) + t792 * (-t172 * t850 + t174) + t179);
t886 = t885 * t840;
t887 = t183 * t886;
t890 = -t759 * t1 + t757 * t6;
t891 = t890 * t752;
t893 = t782 * t754;
t894 = t2 * t891 - t893;
t897 = t45 * t890;
t899 = t890 * t754;
t901 = t782 * t752;
t902 = t2 * t899 + t901;
t909 = t890 * pkin(9);
t915 = t788 * (t22 * pkin(3) * t894 + t20 * pkin(9) * t902 - t897 * t194) + t792 * (t206 * pkin(9) * t894 - t45 * t909 * t208 - pkin(3) * t902);
t919 = t43 * t754;
t933 = t43 * t754 * pkin(2) - t66 * t752;
t951 = 0.1e1 / (t789 * (-0.2e1 * t221 * t20 * t841 + t79 * t919 + t218 - t226) + t788 * (t792 * (0.2e1 * t234 * t45 * t855 + t231 * t850 + t146 - t229) + t239 * t861 + t243 + t45 * t933 * pkin(3) - t154) + t792 * (t261 * pkin(9) * t933 + t254 * t20 * t850 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t841 - t274 * pkin(9) * t919 - t266 + t276));
t952 = t951 * t915;
t959 = t788 * mrSges(3,1);
t960 = t792 * mrSges(3,2);
t963 = t754 * (t22 * (-mrSges(3,1) * t792 - mrSges(3,2) * t788) + t288 - mrSges(2,2)) + (t291 + t959 - t960 + mrSges(2,1)) * t752;
t964 = t963 * t45;
t965 = t964 * t952;
t968 = t21 * t22 * t754 + t861;
t972 = t21 * t841 - t855;
t976 = t799 + pkin(2);
t980 = pkin(3) * t22 * t792 - t241;
t982 = t752 * t976 - t754 * t980;
t987 = t752 * t980 + t976 * t754;
t989 = t788 * (-t2 * t968 * t890 - t972 * t782) - t2 * t982 * t890 + t987 * t782;
t993 = t43 * t792;
t1018 = 0.1e1 / (t849 + t788 * (t2 * (-t84 * t851 + t325 - t327 + t851) + t45 * (t752 * (t333 * t993 - t330 + t331) + t801 * t43 * t855)) + t2 * (-t343 + t258 * t20 * t993 + (t822 + t21) * pkin(3)) + pkin(9) * t45 * (t752 * t20 * (t84 * t817 + t351 - t817) + t824 * t919));
t1019 = t1018 * t989;
t1035 = t45 * (t788 * (t22 * mrSges(3,1) * t752 - mrSges(3,2) * t754) - (t22 * t752 * mrSges(3,2) + mrSges(3,1) * t754) * t792) + t2 * t43 * (-t960 + t959);
t1036 = t1035 * t1019;
t1037 = t887 + t965 + t1036;
t1050 = t43 * (t788 * t395 - t398 * t792);
t1057 = pkin(2) * t960;
t1059 = t84 * (-0.2e1 * Ifges(3,4) * t788 * t792 + t789 * t383 - Ifges(3,1) + Ifges(3,3) - t389 - t391) + 0.2e1 * t22 * t1050 - t789 * t383 + 0.2e1 * t788 * (Ifges(3,4) * t792 + t406) + t410 + t389 - 0.2e1 * t1057 + t391 + Ifges(2,3) + Ifges(3,1);
t1064 = t1050 + t22 * (pkin(2) * t959 + Ifges(3,3) - t1057);
t1066 = t1064 * t1019 + t1059 * t952 + t964 * t886;
t1072 = Ifges(3,3) * t1019 + t1035 * t886 + t1064 * t952;
t1075 = cos(qJ(2,4));
t1077 = sin(qJ(2,4));
t1079 = t1075 * t3 + t1077 * t6;
t1080 = cos(legFrame(4,3));
t1082 = sin(legFrame(4,3));
t1085 = -t1077 * t1 + t1075 * t14;
t1087 = t1080 * t1079 + t1085 * t1082;
t1088 = t1087 * pkin(3);
t1093 = t1075 * t6 - t1077 * t3;
t1097 = t1075 * t1 + t1077 * t14;
t1099 = t1080 * t1093 - t1097 * t1082;
t1105 = t1080 * t1 + t1082 * t6;
t1111 = cos(qJ(3,4));
t1112 = t1111 ^ 2;
t1115 = sin(qJ(3,4));
t1122 = pkin(9) * t20 * t1115;
t1124 = 0.2e1 * t1122 + pkin(2);
t1130 = t1115 * t1105 * t79;
t1131 = t66 * t1088;
t1134 = t1105 * pkin(9);
t1135 = t20 * t1134;
t1139 = t1105 * t45;
t1140 = t66 * t1115;
t1145 = t1115 * pkin(2);
t1147 = t20 * t1145 + pkin(9) - t100;
t1152 = t66 * t1087;
t1163 = t1112 * (t43 * (0.2e1 * t23 * t1088 + t40 * t1099) + 0.2e1 * t1105 * t50 * t49 * t47) + t1111 * (t43 * (t22 * (-t1115 * t40 * t1087 + t66 * t1105 * t46) + pkin(3) * t1099 * t1124) + t84 * (-t1130 - t1131) + t1130 - t1135 * t86 + t1131) + t43 * (-t22 * t20 * (-t1140 * t1139 + t1088) + t1147 * t1099) * pkin(9) - t111 * pkin(9) * (t1105 * t46 + t1115 * t1152) + t1115 * (t1139 * t114 + t21 * t1152) + t1135 * t46;
t1164 = t22 * t1075;
t1172 = 0.2e1 * t1112 * (t124 - t45 * (t121 * t1164 - t40 * t1077 / 0.2e1) * t43);
t1173 = t45 * t1075;
t1174 = t40 * t1115;
t1178 = pkin(3) * t1077;
t1183 = t1115 * t146;
t1184 = pkin(3) * t1075;
t1185 = t149 * t1184;
t1208 = 0.1e1 / (t1172 + t1111 * (t43 * (t22 * (t1174 * t1173 + t138) + t1124 * t45 * t1178) + t84 * (-t1183 + t1185) + t1183 - t154 - t1185) + t43 * pkin(9) * (t22 * t20 * (t1115 * t157 + t45 * t1184) + t1147 * t45 * t1077) + t111 * (t1140 * t1173 - t137) * pkin(9) + t1115 * (-t172 * t1173 + t174) + t179);
t1209 = t1208 * t1163;
t1210 = t183 * t1209;
t1213 = -t1082 * t1 + t1080 * t6;
t1214 = t1213 * t1075;
t1216 = t1105 * t1077;
t1217 = t2 * t1214 - t1216;
t1220 = t45 * t1213;
t1222 = t1213 * t1077;
t1224 = t1105 * t1075;
t1225 = t2 * t1222 + t1224;
t1232 = t1213 * pkin(9);
t1238 = t1111 * (t22 * pkin(3) * t1217 + t20 * pkin(9) * t1225 - t1220 * t194) + t1115 * (t206 * pkin(9) * t1217 - t45 * t1232 * t208 - pkin(3) * t1225);
t1242 = t43 * t1077;
t1256 = t43 * t1077 * pkin(2) - t66 * t1075;
t1274 = 0.1e1 / (t1112 * (-0.2e1 * t221 * t20 * t1164 + t79 * t1242 + t218 - t226) + t1111 * (t1115 * (0.2e1 * t234 * t45 * t1178 + t231 * t1173 + t146 - t229) + t239 * t1184 + t243 + t45 * t1256 * pkin(3) - t154) + t1115 * (t261 * pkin(9) * t1256 + t254 * t20 * t1173 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t1164 - t274 * pkin(9) * t1242 - t266 + t276));
t1275 = t1274 * t1238;
t1282 = t1111 * mrSges(3,1);
t1283 = t1115 * mrSges(3,2);
t1286 = t1077 * (t22 * (-mrSges(3,1) * t1115 - mrSges(3,2) * t1111) + t288 - mrSges(2,2)) + (t291 + t1282 - t1283 + mrSges(2,1)) * t1075;
t1287 = t1286 * t45;
t1288 = t1287 * t1275;
t1291 = t21 * t22 * t1077 + t1184;
t1295 = t21 * t1164 - t1178;
t1299 = t1122 + pkin(2);
t1303 = pkin(3) * t22 * t1115 - t241;
t1305 = t1075 * t1299 - t1077 * t1303;
t1310 = t1075 * t1303 + t1299 * t1077;
t1312 = t1111 * (-t2 * t1291 * t1213 - t1295 * t1105) - t2 * t1305 * t1213 + t1310 * t1105;
t1316 = t43 * t1115;
t1341 = 0.1e1 / (t1172 + t1111 * (t2 * (-t84 * t1174 + t1174 + t325 - t327) + t45 * (t1075 * (t333 * t1316 - t330 + t331) + t1124 * t43 * t1178)) + t2 * (-t343 + t258 * t20 * t1316 + (t1145 + t21) * pkin(3)) + pkin(9) * t45 * (t1075 * t20 * (t84 * t1140 - t1140 + t351) + t1147 * t1242));
t1342 = t1341 * t1312;
t1358 = t45 * (t1111 * (t22 * mrSges(3,1) * t1075 - mrSges(3,2) * t1077) - (t22 * t1075 * mrSges(3,2) + mrSges(3,1) * t1077) * t1115) + t2 * t43 * (-t1283 + t1282);
t1359 = t1358 * t1342;
t1360 = t1210 + t1288 + t1359;
t1373 = t43 * (t1111 * t395 - t398 * t1115);
t1380 = pkin(2) * t1283;
t1382 = t84 * (-0.2e1 * Ifges(3,4) * t1111 * t1115 + t1112 * t383 - Ifges(3,1) + Ifges(3,3) - t389 - t391) + 0.2e1 * t22 * t1373 - t1112 * t383 + 0.2e1 * t1111 * (Ifges(3,4) * t1115 + t406) + t410 + t389 - 0.2e1 * t1380 + t391 + Ifges(2,3) + Ifges(3,1);
t1387 = t1373 + t22 * (pkin(2) * t1282 + Ifges(3,3) - t1380);
t1389 = t1287 * t1209 + t1382 * t1275 + t1387 * t1342;
t1395 = Ifges(3,3) * t1342 + t1358 * t1209 + t1387 * t1275;
t1398 = cos(qJ(2,5));
t1400 = sin(qJ(2,5));
t1402 = t1398 * t3 + t1400 * t6;
t1403 = cos(legFrame(5,3));
t1405 = sin(legFrame(5,3));
t1408 = -t1400 * t1 + t1398 * t14;
t1410 = t1403 * t1402 + t1408 * t1405;
t1411 = t1410 * pkin(3);
t1416 = t1398 * t6 - t1400 * t3;
t1420 = t1398 * t1 + t1400 * t14;
t1422 = t1403 * t1416 - t1420 * t1405;
t1428 = t1403 * t1 + t1405 * t6;
t1434 = cos(qJ(3,5));
t1435 = t1434 ^ 2;
t1438 = sin(qJ(3,5));
t1445 = pkin(9) * t20 * t1438;
t1447 = 0.2e1 * t1445 + pkin(2);
t1453 = t1438 * t1428 * t79;
t1454 = t66 * t1411;
t1457 = t1428 * pkin(9);
t1458 = t20 * t1457;
t1462 = t1428 * t45;
t1463 = t66 * t1438;
t1468 = t1438 * pkin(2);
t1470 = t20 * t1468 + pkin(9) - t100;
t1475 = t66 * t1410;
t1486 = t1435 * (t43 * (0.2e1 * t23 * t1411 + t40 * t1422) + 0.2e1 * t1428 * t50 * t49 * t47) + t1434 * (t43 * (t22 * (-t1438 * t40 * t1410 + t66 * t1428 * t46) + pkin(3) * t1422 * t1447) + t84 * (-t1453 - t1454) + t1453 - t1458 * t86 + t1454) + t43 * (-t22 * t20 * (-t1463 * t1462 + t1411) + t1470 * t1422) * pkin(9) - t111 * pkin(9) * (t1428 * t46 + t1438 * t1475) + t1438 * (t1462 * t114 + t21 * t1475) + t1458 * t46;
t1487 = t22 * t1398;
t1495 = 0.2e1 * t1435 * (t124 - t45 * (t121 * t1487 - t40 * t1400 / 0.2e1) * t43);
t1496 = t45 * t1398;
t1497 = t40 * t1438;
t1501 = pkin(3) * t1400;
t1506 = t1438 * t146;
t1507 = pkin(3) * t1398;
t1508 = t149 * t1507;
t1531 = 0.1e1 / (t1495 + t1434 * (t43 * (t22 * (t1497 * t1496 + t138) + t1447 * t45 * t1501) + t84 * (-t1506 + t1508) + t1506 - t154 - t1508) + t43 * pkin(9) * (t22 * t20 * (t1438 * t157 + t45 * t1507) + t1470 * t45 * t1400) + t111 * (t1463 * t1496 - t137) * pkin(9) + t1438 * (-t172 * t1496 + t174) + t179);
t1532 = t1531 * t1486;
t1533 = t183 * t1532;
t1536 = -t1405 * t1 + t1403 * t6;
t1537 = t1536 * t1398;
t1539 = t1428 * t1400;
t1540 = t2 * t1537 - t1539;
t1543 = t45 * t1536;
t1545 = t1536 * t1400;
t1547 = t1428 * t1398;
t1548 = t2 * t1545 + t1547;
t1555 = t1536 * pkin(9);
t1561 = t1434 * (t22 * pkin(3) * t1540 + t20 * pkin(9) * t1548 - t1543 * t194) + t1438 * (t206 * pkin(9) * t1540 - t45 * t1555 * t208 - pkin(3) * t1548);
t1565 = t43 * t1400;
t1579 = t43 * t1400 * pkin(2) - t66 * t1398;
t1597 = 0.1e1 / (t1435 * (-0.2e1 * t221 * t20 * t1487 + t79 * t1565 + t218 - t226) + t1434 * (t1438 * (0.2e1 * t234 * t45 * t1501 + t231 * t1496 + t146 - t229) + t239 * t1507 + t243 + t45 * t1579 * pkin(3) - t154) + t1438 * (t261 * pkin(9) * t1579 + t254 * t20 * t1496 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t1487 - t274 * pkin(9) * t1565 - t266 + t276));
t1598 = t1597 * t1561;
t1605 = t1434 * mrSges(3,1);
t1606 = t1438 * mrSges(3,2);
t1609 = t1400 * (t22 * (-mrSges(3,1) * t1438 - mrSges(3,2) * t1434) + t288 - mrSges(2,2)) + (t291 + t1605 - t1606 + mrSges(2,1)) * t1398;
t1610 = t1609 * t45;
t1611 = t1610 * t1598;
t1614 = t21 * t22 * t1400 + t1507;
t1618 = t21 * t1487 - t1501;
t1622 = t1445 + pkin(2);
t1626 = pkin(3) * t22 * t1438 - t241;
t1628 = t1398 * t1622 - t1400 * t1626;
t1633 = t1398 * t1626 + t1622 * t1400;
t1635 = t1434 * (-t2 * t1614 * t1536 - t1618 * t1428) - t2 * t1628 * t1536 + t1633 * t1428;
t1639 = t43 * t1438;
t1664 = 0.1e1 / (t1495 + t1434 * (t2 * (-t84 * t1497 + t1497 + t325 - t327) + t45 * (t1398 * (t333 * t1639 - t330 + t331) + t1447 * t43 * t1501)) + t2 * (-t343 + t258 * t20 * t1639 + (t1468 + t21) * pkin(3)) + pkin(9) * t45 * (t1398 * t20 * (t84 * t1463 - t1463 + t351) + t1470 * t1565));
t1665 = t1664 * t1635;
t1681 = t45 * (t1434 * (t22 * mrSges(3,1) * t1398 - mrSges(3,2) * t1400) - (t22 * t1398 * mrSges(3,2) + mrSges(3,1) * t1400) * t1438) + t2 * t43 * (-t1606 + t1605);
t1682 = t1681 * t1665;
t1683 = t1533 + t1611 + t1682;
t1696 = t43 * (t1434 * t395 - t398 * t1438);
t1703 = pkin(2) * t1606;
t1705 = t84 * (-0.2e1 * Ifges(3,4) * t1434 * t1438 + t1435 * t383 - Ifges(3,1) + Ifges(3,3) - t389 - t391) + 0.2e1 * t22 * t1696 - t1435 * t383 + 0.2e1 * t1434 * (Ifges(3,4) * t1438 + t406) + t410 + t389 - 0.2e1 * t1703 + t391 + Ifges(2,3) + Ifges(3,1);
t1710 = t1696 + t22 * (pkin(2) * t1605 + Ifges(3,3) - t1703);
t1712 = t1610 * t1532 + t1705 * t1598 + t1710 * t1665;
t1718 = Ifges(3,3) * t1665 + t1681 * t1532 + t1710 * t1598;
t1721 = cos(qJ(2,6));
t1723 = sin(qJ(2,6));
t1725 = t1721 * t3 + t1723 * t6;
t1726 = cos(legFrame(6,3));
t1728 = sin(legFrame(6,3));
t1731 = -t1723 * t1 + t1721 * t14;
t1733 = t1726 * t1725 + t1731 * t1728;
t1734 = t1733 * pkin(3);
t1739 = t1721 * t6 - t1723 * t3;
t1743 = t1721 * t1 + t1723 * t14;
t1745 = t1726 * t1739 - t1743 * t1728;
t1751 = t1726 * t1 + t1728 * t6;
t1757 = cos(qJ(3,6));
t1758 = t1757 ^ 2;
t1761 = sin(qJ(3,6));
t1768 = pkin(9) * t20 * t1761;
t1770 = 0.2e1 * t1768 + pkin(2);
t1776 = t1761 * t1751 * t79;
t1777 = t66 * t1734;
t1780 = t1751 * pkin(9);
t1781 = t20 * t1780;
t1785 = t1751 * t45;
t1786 = t66 * t1761;
t1791 = t1761 * pkin(2);
t1793 = t20 * t1791 + pkin(9) - t100;
t1798 = t66 * t1733;
t1809 = t1758 * (t43 * (0.2e1 * t23 * t1734 + t40 * t1745) + 0.2e1 * t1751 * t50 * t49 * t47) + t1757 * (t43 * (t22 * (-t1761 * t40 * t1733 + t66 * t1751 * t46) + pkin(3) * t1745 * t1770) + t84 * (-t1776 - t1777) + t1776 - t1781 * t86 + t1777) + t43 * (-t22 * t20 * (-t1786 * t1785 + t1734) + t1793 * t1745) * pkin(9) - t111 * pkin(9) * (t1751 * t46 + t1761 * t1798) + t1761 * (t1785 * t114 + t21 * t1798) + t1781 * t46;
t1810 = t22 * t1721;
t1818 = 0.2e1 * t1758 * (t124 - t45 * (t121 * t1810 - t40 * t1723 / 0.2e1) * t43);
t1819 = t45 * t1721;
t1820 = t40 * t1761;
t1824 = pkin(3) * t1723;
t1829 = t1761 * t146;
t1830 = pkin(3) * t1721;
t1831 = t149 * t1830;
t1854 = 0.1e1 / (t1818 + t1757 * (t43 * (t22 * (t1820 * t1819 + t138) + t1770 * t45 * t1824) + t84 * (-t1829 + t1831) + t1829 - t154 - t1831) + t43 * pkin(9) * (t22 * t20 * (t1761 * t157 + t45 * t1830) + t1793 * t45 * t1723) + t111 * (t1786 * t1819 - t137) * pkin(9) + t1761 * (-t172 * t1819 + t174) + t179);
t1855 = t1854 * t1809;
t1856 = t183 * t1855;
t1859 = -t1728 * t1 + t1726 * t6;
t1860 = t1859 * t1721;
t1862 = t1751 * t1723;
t1863 = t2 * t1860 - t1862;
t1866 = t45 * t1859;
t1868 = t1859 * t1723;
t1870 = t1751 * t1721;
t1871 = t2 * t1868 + t1870;
t1878 = t1859 * pkin(9);
t1884 = t1757 * (t22 * pkin(3) * t1863 + t20 * pkin(9) * t1871 - t1866 * t194) + t1761 * (t206 * pkin(9) * t1863 - t45 * t1878 * t208 - pkin(3) * t1871);
t1888 = t43 * t1723;
t1902 = t43 * t1723 * pkin(2) - t66 * t1721;
t1920 = 0.1e1 / (t1758 * (-0.2e1 * t221 * t20 * t1810 + t79 * t1888 + t218 - t226) + t1757 * (t1761 * (0.2e1 * t234 * t45 * t1824 + t231 * t1819 + t146 - t229) + t239 * t1830 + t243 + t45 * t1902 * pkin(3) - t154) + t1761 * (t261 * pkin(9) * t1902 + t254 * t20 * t1819 + t174 + t259) + pkin(9) * (t268 * pkin(3) * t1810 - t274 * pkin(9) * t1888 - t266 + t276));
t1921 = t1920 * t1884;
t1928 = t1757 * mrSges(3,1);
t1929 = t1761 * mrSges(3,2);
t1932 = t1723 * (t22 * (-mrSges(3,1) * t1761 - mrSges(3,2) * t1757) + t288 - mrSges(2,2)) + (t291 + t1928 - t1929 + mrSges(2,1)) * t1721;
t1933 = t1932 * t45;
t1934 = t1933 * t1921;
t1937 = t21 * t22 * t1723 + t1830;
t1941 = t21 * t1810 - t1824;
t1945 = t1768 + pkin(2);
t1949 = pkin(3) * t22 * t1761 - t241;
t1951 = t1721 * t1945 - t1723 * t1949;
t1956 = t1721 * t1949 + t1945 * t1723;
t1958 = t1757 * (-t2 * t1937 * t1859 - t1941 * t1751) - t2 * t1951 * t1859 + t1956 * t1751;
t1962 = t43 * t1761;
t1987 = 0.1e1 / (t1818 + t1757 * (t2 * (-t84 * t1820 + t1820 + t325 - t327) + t45 * (t1721 * (t333 * t1962 - t330 + t331) + t1770 * t43 * t1824)) + t2 * (-t343 + t258 * t20 * t1962 + (t1791 + t21) * pkin(3)) + pkin(9) * t45 * (t1721 * t20 * (t84 * t1786 - t1786 + t351) + t1793 * t1888));
t1988 = t1987 * t1958;
t2004 = t45 * (t1757 * (t22 * mrSges(3,1) * t1721 - mrSges(3,2) * t1723) - (t22 * t1721 * mrSges(3,2) + mrSges(3,1) * t1723) * t1761) + t2 * t43 * (-t1929 + t1928);
t2005 = t2004 * t1988;
t2006 = t1856 + t1934 + t2005;
t2019 = t43 * (t1757 * t395 - t398 * t1761);
t2026 = pkin(2) * t1929;
t2028 = t84 * (-0.2e1 * Ifges(3,4) * t1757 * t1761 + t1758 * t383 - Ifges(3,1) + Ifges(3,3) - t389 - t391) + 0.2e1 * t22 * t2019 - t1758 * t383 + 0.2e1 * t1757 * (Ifges(3,4) * t1761 + t406) + t410 + t389 - 0.2e1 * t2026 + t391 + Ifges(2,3) + Ifges(3,1);
t2033 = t2019 + t22 * (pkin(2) * t1928 + Ifges(3,3) - t2026);
t2035 = t1933 * t1855 + t2028 * t1921 + t2033 * t1988;
t2041 = Ifges(3,3) * t1988 + t2004 * t1855 + t2033 * t1921;
t2044 = t181 * t119 * t379 + t280 * t215 * t420 + t360 * t322 * t426 + t562 * t517 * t714 + t628 * t592 * t743 + t695 * t666 * t749 + t885 * t840 * t1037 + t951 * t915 * t1066 + t1018 * t989 * t1072 + t1208 * t1163 * t1360 + t1274 * t1238 * t1389 + t1341 * t1312 * t1395 + t1531 * t1486 * t1683 + t1597 * t1561 * t1712 + t1664 * t1635 * t1718 + t1854 * t1809 * t2006 + t1920 * t1884 * t2035 + t1987 * t1958 * t2041 + m(4);
t2047 = t10 * t16 - t9 * t12;
t2048 = pkin(3) * t2047;
t2053 = t10 * t32 + t28 * t12;
t2074 = t63 * t187 * t79;
t2075 = t66 * t2048;
t2078 = t20 * t209;
t2090 = t66 * t2047;
t2101 = t60 * (t43 * (-0.2e1 * t23 * t2048 + t40 * t2053) - 0.2e1 * t187 * t50 * t49 * t47) + t59 * (t43 * (t22 * (-t66 * t187 * t46 + t63 * t40 * t2047) + pkin(3) * t2053 * t74) + t84 * (t2074 + t2075) - t2074 + t2078 * t86 - t2075) + t43 * pkin(9) * (t22 * t20 * (-t93 * t195 + t2048) + t101 * t2053) + t111 * pkin(9) * (t187 * t46 + t63 * t2090) + t63 * (-t195 * t114 - t21 * t2090) - t2078 * t46;
t2105 = t2 * t199 + t197;
t2110 = -t2 * t190 + t188;
t2122 = t59 * (t22 * t2105 * pkin(3) - t20 * pkin(9) * t2110 - t92 * t194) + (t206 * pkin(9) * t2105 - t45 * t87 * t208 + pkin(3) * t2110) * t63;
t2133 = t59 * (-t2 * t301 * t53 + t305 * t187) - t2 * t53 * t315 - t320 * t187;
t2138 = -t433 * t436 + t434 * t439;
t2139 = pkin(3) * t2138;
t2144 = t434 * t451 + t447 * t436;
t2165 = t469 * t567 * t79;
t2166 = t66 * t2139;
t2169 = t20 * t586;
t2181 = t66 * t2138;
t2192 = t466 * (t43 * (-0.2e1 * t23 * t2139 + t40 * t2144) - 0.2e1 * t567 * t50 * t49 * t47) + t465 * (t43 * (t22 * (t469 * t40 * t2138 - t66 * t567 * t46) + pkin(3) * t2144 * t478) + t84 * (t2165 + t2166) - t2165 + t2169 * t86 - t2166) + t43 * pkin(9) * (t22 * t20 * (-t494 * t574 + t2139) + t501 * t2144) + t111 * pkin(9) * (t469 * t2181 + t567 * t46) + t469 * (-t574 * t114 - t21 * t2181) - t2169 * t46;
t2196 = t2 * t578 + t576;
t2201 = -t2 * t570 + t568;
t2213 = t465 * (t22 * t2196 * pkin(3) - t20 * pkin(9) * t2201 - t493 * t194) + (t206 * pkin(9) * t2196 - t45 * t488 * t208 + pkin(3) * t2201) * t469;
t2224 = t465 * (-t2 * t645 * t459 + t649 * t567) - t2 * t459 * t659 - t664 * t567;
t2229 = -t756 * t759 + t757 * t762;
t2230 = pkin(3) * t2229;
t2235 = t757 * t774 + t770 * t759;
t2256 = t792 * t890 * t79;
t2257 = t66 * t2230;
t2260 = t20 * t909;
t2272 = t66 * t2229;
t2283 = t789 * (t43 * (-0.2e1 * t23 * t2230 + t40 * t2235) - 0.2e1 * t890 * t50 * t49 * t47) + t788 * (t43 * (t22 * (t792 * t40 * t2229 - t66 * t890 * t46) + pkin(3) * t2235 * t801) + t84 * (t2256 + t2257) - t2256 + t2260 * t86 - t2257) + t43 * pkin(9) * (t22 * t20 * (-t817 * t897 + t2230) + t824 * t2235) + t111 * pkin(9) * (t792 * t2272 + t890 * t46) + t792 * (-t897 * t114 - t21 * t2272) - t2260 * t46;
t2287 = t2 * t901 + t899;
t2292 = -t2 * t893 + t891;
t2304 = t788 * (t22 * t2287 * pkin(3) - t20 * pkin(9) * t2292 - t816 * t194) + (t206 * pkin(9) * t2287 - t45 * t811 * t208 + pkin(3) * t2292) * t792;
t2315 = t788 * (-t2 * t968 * t782 + t972 * t890) - t2 * t782 * t982 - t987 * t890;
t2320 = -t1079 * t1082 + t1080 * t1085;
t2321 = pkin(3) * t2320;
t2326 = t1080 * t1097 + t1093 * t1082;
t2347 = t1115 * t1213 * t79;
t2348 = t66 * t2321;
t2351 = t20 * t1232;
t2363 = t66 * t2320;
t2374 = t1112 * (t43 * (-0.2e1 * t23 * t2321 + t40 * t2326) - 0.2e1 * t1213 * t50 * t49 * t47) + t1111 * (t43 * (t22 * (t1115 * t40 * t2320 - t66 * t1213 * t46) + pkin(3) * t2326 * t1124) + t84 * (t2347 + t2348) - t2347 + t2351 * t86 - t2348) + t43 * pkin(9) * (t22 * t20 * (-t1140 * t1220 + t2321) + t1147 * t2326) + t111 * pkin(9) * (t1115 * t2363 + t1213 * t46) + t1115 * (-t1220 * t114 - t21 * t2363) - t2351 * t46;
t2378 = t2 * t1224 + t1222;
t2383 = -t2 * t1216 + t1214;
t2395 = t1111 * (t22 * t2378 * pkin(3) - t20 * pkin(9) * t2383 - t1139 * t194) + (t206 * pkin(9) * t2378 - t45 * t1134 * t208 + pkin(3) * t2383) * t1115;
t2406 = t1111 * (-t2 * t1291 * t1105 + t1295 * t1213) - t2 * t1105 * t1305 - t1310 * t1213;
t2411 = -t1402 * t1405 + t1403 * t1408;
t2412 = pkin(3) * t2411;
t2417 = t1403 * t1420 + t1416 * t1405;
t2438 = t1438 * t1536 * t79;
t2439 = t66 * t2412;
t2442 = t20 * t1555;
t2454 = t66 * t2411;
t2465 = t1435 * (t43 * (-0.2e1 * t23 * t2412 + t40 * t2417) - 0.2e1 * t1536 * t50 * t49 * t47) + t1434 * (t43 * (t22 * (t1438 * t40 * t2411 - t66 * t1536 * t46) + pkin(3) * t2417 * t1447) + t84 * (t2438 + t2439) - t2438 + t2442 * t86 - t2439) + t43 * pkin(9) * (t22 * t20 * (-t1463 * t1543 + t2412) + t1470 * t2417) + t111 * pkin(9) * (t1438 * t2454 + t1536 * t46) + t1438 * (-t1543 * t114 - t21 * t2454) - t2442 * t46;
t2469 = t2 * t1547 + t1545;
t2474 = -t2 * t1539 + t1537;
t2486 = t1434 * (t22 * t2469 * pkin(3) - t20 * pkin(9) * t2474 - t1462 * t194) + (t206 * pkin(9) * t2469 - t45 * t1457 * t208 + pkin(3) * t2474) * t1438;
t2497 = t1434 * (-t2 * t1614 * t1428 + t1618 * t1536) - t2 * t1428 * t1628 - t1633 * t1536;
t2502 = -t1725 * t1728 + t1726 * t1731;
t2503 = pkin(3) * t2502;
t2508 = t1726 * t1743 + t1739 * t1728;
t2529 = t1761 * t1859 * t79;
t2530 = t66 * t2503;
t2533 = t20 * t1878;
t2545 = t66 * t2502;
t2556 = t1758 * (t43 * (-0.2e1 * t23 * t2503 + t40 * t2508) - 0.2e1 * t1859 * t50 * t49 * t47) + t1757 * (t43 * (t22 * (t1761 * t40 * t2502 - t66 * t1859 * t46) + pkin(3) * t2508 * t1770) + t84 * (t2529 + t2530) - t2529 + t2533 * t86 - t2530) + t43 * pkin(9) * (t22 * t20 * (-t1786 * t1866 + t2503) + t1793 * t2508) + t111 * pkin(9) * (t1761 * t2545 + t1859 * t46) + t1761 * (-t1866 * t114 - t21 * t2545) - t2533 * t46;
t2560 = t2 * t1870 + t1868;
t2565 = -t2 * t1862 + t1860;
t2577 = t1757 * (t22 * t2560 * pkin(3) - t20 * pkin(9) * t2565 - t1785 * t194) + (t206 * pkin(9) * t2560 - t45 * t1780 * t208 + pkin(3) * t2565) * t1761;
t2588 = t1757 * (-t2 * t1937 * t1751 + t1941 * t1859) - t2 * t1751 * t1951 - t1956 * t1859;
t2591 = t181 * t2101 * t379 + t280 * t2122 * t420 + t360 * t2133 * t426 + t562 * t2192 * t714 + t628 * t2213 * t743 + t695 * t2224 * t749 + t885 * t2283 * t1037 + t951 * t2304 * t1066 + t1018 * t2315 * t1072 + t1208 * t2374 * t1360 + t1274 * t2395 * t1389 + t1341 * t2406 * t1395 + t1531 * t2465 * t1683 + t1597 * t2486 * t1712 + t1664 * t2497 * t1718 + t1854 * t2556 * t2006 + t1920 * t2577 * t2035 + t1987 * t2588 * t2041;
t2592 = t184 + t298 + t378 + t564 + t642 + t713 + t887 + t965 + t1036 + t1210 + t1288 + t1359 + t1533 + t1611 + t1682 + t1856 + t1934 + t2005;
t2593 = sin(xP(6));
t2595 = cos(xP(6));
t2597 = -koppelP(1,2) * t2593 + t2595 * koppelP(1,1);
t2598 = sin(xP(5));
t2600 = cos(xP(5));
t2601 = koppelP(1,3) * t2600;
t2602 = t2598 * t2597 - t2601;
t2603 = cos(xP(4));
t2605 = sin(xP(4));
t2608 = koppelP(1,1) * t2593 + t2595 * koppelP(1,2);
t2609 = t2608 * t2605;
t2610 = t2603 * t2602 - t2609;
t2614 = t2608 * t2603;
t2615 = t181 * t2101 * t2610 + t2605 * t2602 + t2614;
t2616 = t2615 * t379;
t2618 = t280 * t2122;
t2619 = t2618 * t2610 * t420;
t2621 = t360 * t2133;
t2622 = t2621 * t2610 * t426;
t2625 = -koppelP(2,2) * t2593 + t2595 * koppelP(2,1);
t2627 = koppelP(2,3) * t2600;
t2628 = t2598 * t2625 - t2627;
t2632 = koppelP(2,1) * t2593 + t2595 * koppelP(2,2);
t2633 = t2632 * t2605;
t2634 = t2603 * t2628 - t2633;
t2638 = t2632 * t2603;
t2639 = t562 * t2192 * t2634 + t2605 * t2628 + t2638;
t2640 = t2639 * t714;
t2642 = t628 * t2213;
t2643 = t2642 * t2634 * t743;
t2645 = t695 * t2224;
t2646 = t2645 * t2634 * t749;
t2649 = -koppelP(3,2) * t2593 + t2595 * koppelP(3,1);
t2651 = koppelP(3,3) * t2600;
t2652 = t2598 * t2649 - t2651;
t2656 = koppelP(3,1) * t2593 + t2595 * koppelP(3,2);
t2657 = t2656 * t2605;
t2658 = t2603 * t2652 - t2657;
t2662 = t2656 * t2603;
t2663 = t885 * t2283 * t2658 + t2605 * t2652 + t2662;
t2664 = t2663 * t1037;
t2666 = t951 * t2304;
t2667 = t2666 * t2658 * t1066;
t2669 = t1018 * t2315;
t2670 = t2669 * t2658 * t1072;
t2673 = -koppelP(4,2) * t2593 + t2595 * koppelP(4,1);
t2675 = koppelP(4,3) * t2600;
t2676 = t2598 * t2673 - t2675;
t2680 = koppelP(4,1) * t2593 + t2595 * koppelP(4,2);
t2681 = t2680 * t2605;
t2682 = t2603 * t2676 - t2681;
t2686 = t2680 * t2603;
t2687 = t1208 * t2374 * t2682 + t2605 * t2676 + t2686;
t2688 = t2687 * t1360;
t2690 = t1274 * t2395;
t2691 = t2690 * t2682 * t1389;
t2693 = t1341 * t2406;
t2694 = t2693 * t2682 * t1395;
t2697 = -koppelP(5,2) * t2593 + t2595 * koppelP(5,1);
t2699 = koppelP(5,3) * t2600;
t2700 = t2598 * t2697 - t2699;
t2704 = koppelP(5,1) * t2593 + t2595 * koppelP(5,2);
t2705 = t2704 * t2605;
t2706 = t2603 * t2700 - t2705;
t2710 = t2704 * t2603;
t2711 = t1531 * t2465 * t2706 + t2605 * t2700 + t2710;
t2712 = t2711 * t1683;
t2714 = t1597 * t2486;
t2715 = t2714 * t2706 * t1712;
t2717 = t1664 * t2497;
t2718 = t2717 * t2706 * t1718;
t2721 = -koppelP(6,2) * t2593 + t2595 * koppelP(6,1);
t2723 = koppelP(6,3) * t2600;
t2724 = t2598 * t2721 - t2723;
t2728 = koppelP(6,1) * t2593 + t2595 * koppelP(6,2);
t2729 = t2728 * t2605;
t2730 = t2603 * t2724 - t2729;
t2734 = t2728 * t2603;
t2735 = t1854 * t2556 * t2730 + t2605 * t2724 + t2734;
t2736 = t2735 * t2006;
t2738 = t1920 * t2577;
t2739 = t2738 * t2730 * t2035;
t2741 = t1987 * t2588;
t2742 = t2741 * t2730 * t2041;
t2743 = t2616 + t2619 + t2622 + t2640 + t2643 + t2646 + t2664 + t2667 + t2670 + t2688 + t2691 + t2694 + t2712 + t2715 + t2718 + t2736 + t2739 + t2742;
t2745 = -t2598 * t2597 + t2601;
t2747 = t2603 * t2745 + t2609;
t2750 = t2595 * t2600;
t2751 = koppelP(1,1) * t2750;
t2752 = t2593 * t2600;
t2753 = koppelP(1,2) * t2752;
t2754 = koppelP(1,3) * t2598;
t2755 = t181 * t119 * t2747 - t2751 + t2753 - t2754;
t2761 = t281 * t2747 * t420 + t361 * t2747 * t426 + t2755 * t379;
t2764 = t2605 * t2745 - t2614;
t2767 = t2751 - t2753 + t2754;
t2770 = t181 * t119 * t2764 + t181 * t2101 * t2767;
t2776 = t280 * t2122 * t2767 + t280 * t215 * t2764;
t2782 = t360 * t2133 * t2767 + t360 * t322 * t2764;
t2784 = t2770 * t379 + t2776 * t420 + t2782 * t426;
t2787 = -t2598 * t2625 + t2627;
t2789 = t2787 * t2603 + t2633;
t2792 = koppelP(2,1) * t2750;
t2793 = koppelP(2,2) * t2752;
t2794 = koppelP(2,3) * t2598;
t2795 = t562 * t517 * t2789 - t2792 + t2793 - t2794;
t2801 = t629 * t2789 * t743 + t696 * t2789 * t749 + t2795 * t714;
t2804 = t2787 * t2605 - t2638;
t2807 = t2792 - t2793 + t2794;
t2810 = t562 * t2192 * t2807 + t562 * t517 * t2804;
t2816 = t628 * t2213 * t2807 + t628 * t592 * t2804;
t2822 = t695 * t2224 * t2807 + t695 * t666 * t2804;
t2824 = t2810 * t714 + t2816 * t743 + t2822 * t749;
t2827 = -t2598 * t2649 + t2651;
t2829 = t2827 * t2603 + t2657;
t2832 = koppelP(3,1) * t2750;
t2833 = koppelP(3,2) * t2752;
t2834 = koppelP(3,3) * t2598;
t2835 = t885 * t840 * t2829 - t2832 + t2833 - t2834;
t2841 = t1019 * t2829 * t1072 + t952 * t2829 * t1066 + t2835 * t1037;
t2844 = t2827 * t2605 - t2662;
t2847 = t2832 - t2833 + t2834;
t2850 = t885 * t2283 * t2847 + t885 * t840 * t2844;
t2856 = t951 * t2304 * t2847 + t951 * t915 * t2844;
t2862 = t1018 * t2315 * t2847 + t1018 * t989 * t2844;
t2864 = t2850 * t1037 + t2856 * t1066 + t2862 * t1072;
t2867 = -t2598 * t2673 + t2675;
t2869 = t2867 * t2603 + t2681;
t2872 = koppelP(4,1) * t2750;
t2873 = koppelP(4,2) * t2752;
t2874 = koppelP(4,3) * t2598;
t2875 = t1208 * t1163 * t2869 - t2872 + t2873 - t2874;
t2881 = t1275 * t2869 * t1389 + t1342 * t2869 * t1395 + t2875 * t1360;
t2884 = t2867 * t2605 - t2686;
t2887 = t2872 - t2873 + t2874;
t2890 = t1208 * t1163 * t2884 + t1208 * t2374 * t2887;
t2896 = t1274 * t1238 * t2884 + t1274 * t2395 * t2887;
t2902 = t1341 * t1312 * t2884 + t1341 * t2406 * t2887;
t2904 = t2890 * t1360 + t2896 * t1389 + t2902 * t1395;
t2907 = -t2598 * t2697 + t2699;
t2909 = t2907 * t2603 + t2705;
t2912 = koppelP(5,1) * t2750;
t2913 = koppelP(5,2) * t2752;
t2914 = koppelP(5,3) * t2598;
t2915 = t1531 * t1486 * t2909 - t2912 + t2913 - t2914;
t2921 = t1598 * t2909 * t1712 + t1665 * t2909 * t1718 + t2915 * t1683;
t2924 = t2907 * t2605 - t2710;
t2927 = t2912 - t2913 + t2914;
t2930 = t1531 * t1486 * t2924 + t1531 * t2465 * t2927;
t2936 = t1597 * t1561 * t2924 + t1597 * t2486 * t2927;
t2942 = t1664 * t1635 * t2924 + t1664 * t2497 * t2927;
t2944 = t2930 * t1683 + t2936 * t1712 + t2942 * t1718;
t2947 = -t2598 * t2721 + t2723;
t2949 = t2947 * t2603 + t2729;
t2952 = koppelP(6,1) * t2750;
t2953 = koppelP(6,2) * t2752;
t2954 = koppelP(6,3) * t2598;
t2955 = t1854 * t1809 * t2949 - t2952 + t2953 - t2954;
t2961 = t1921 * t2949 * t2035 + t1988 * t2949 * t2041 + t2955 * t2006;
t2964 = t2947 * t2605 - t2734;
t2967 = t2952 - t2953 + t2954;
t2970 = t1854 * t1809 * t2964 + t1854 * t2556 * t2967;
t2976 = t1920 * t1884 * t2964 + t1920 * t2577 * t2967;
t2982 = t1987 * t1958 * t2964 + t1987 * t2588 * t2967;
t2984 = t2970 * t2006 + t2976 * t2035 + t2982 * t2041;
t2987 = mrSges(4,1) * t2595 * t2598;
t2988 = t2593 * t2598;
t2989 = mrSges(4,2) * t2988;
t2990 = mrSges(4,3) * t2600;
t2991 = t2603 * t2761 + t2603 * t2801 + t2603 * t2841 + t2603 * t2881 + t2603 * t2921 + t2603 * t2961 + t2605 * t2784 + t2605 * t2824 + t2605 * t2864 + t2605 * t2904 + t2605 * t2944 + t2605 * t2984 - t2987 + t2989 + t2990;
t3030 = t2593 * mrSges(4,1) + t2595 * mrSges(4,2);
t3032 = t2598 * (t2616 + t2619 + t2622) - t2600 * t2605 * t2761 + t2600 * t2603 * t2784 + t2598 * (t2640 + t2643 + t2646) - t2600 * t2605 * t2801 + t2600 * t2603 * t2824 + t2598 * (t2664 + t2667 + t2670) - t2600 * t2605 * t2841 + t2600 * t2603 * t2864 + t2598 * (t2688 + t2691 + t2694) - t2600 * t2605 * t2881 + t2600 * t2603 * t2904 + t2598 * (t2712 + t2715 + t2718) - t2600 * t2605 * t2921 + t2600 * t2603 * t2944 + t2598 * (t2736 + t2739 + t2742) - t2600 * t2605 * t2961 + t2600 * t2603 * t2984 - t3030 * t2600;
t3033 = t181 * t2101;
t3034 = t183 * t3033;
t3035 = t297 * t2618;
t3036 = t377 * t2621;
t3037 = t3034 + t3035 + t3036;
t3043 = t413 * t2618 + t418 * t2621 + t297 * t3033;
t3049 = Ifges(3,3) * t2621 + t418 * t2618 + t377 * t3033;
t3052 = t562 * t2192;
t3053 = t183 * t3052;
t3054 = t641 * t2642;
t3055 = t712 * t2645;
t3056 = t3053 + t3054 + t3055;
t3062 = t736 * t2642 + t741 * t2645 + t641 * t3052;
t3068 = Ifges(3,3) * t2645 + t741 * t2642 + t712 * t3052;
t3071 = t885 * t2283;
t3072 = t183 * t3071;
t3073 = t964 * t2666;
t3074 = t1035 * t2669;
t3075 = t3072 + t3073 + t3074;
t3081 = t1059 * t2666 + t1064 * t2669 + t964 * t3071;
t3087 = Ifges(3,3) * t2669 + t1035 * t3071 + t1064 * t2666;
t3090 = t1208 * t2374;
t3091 = t183 * t3090;
t3092 = t1287 * t2690;
t3093 = t1358 * t2693;
t3094 = t3091 + t3092 + t3093;
t3100 = t1287 * t3090 + t1382 * t2690 + t1387 * t2693;
t3106 = Ifges(3,3) * t2693 + t1358 * t3090 + t1387 * t2690;
t3109 = t1531 * t2465;
t3110 = t183 * t3109;
t3111 = t1610 * t2714;
t3112 = t1681 * t2717;
t3113 = t3110 + t3111 + t3112;
t3119 = t1610 * t3109 + t1705 * t2714 + t1710 * t2717;
t3125 = Ifges(3,3) * t2717 + t1681 * t3109 + t1710 * t2714;
t3128 = t1854 * t2556;
t3129 = t183 * t3128;
t3130 = t1933 * t2738;
t3131 = t2004 * t2741;
t3132 = t3129 + t3130 + t3131;
t3138 = t1933 * t3128 + t2028 * t2738 + t2033 * t2741;
t3144 = Ifges(3,3) * t2741 + t2004 * t3128 + t2033 * t2738;
t3147 = t181 * t119 * t3037 + t280 * t215 * t3043 + t360 * t322 * t3049 + t562 * t517 * t3056 + t628 * t592 * t3062 + t695 * t666 * t3068 + t885 * t840 * t3075 + t951 * t915 * t3081 + t1018 * t989 * t3087 + t1208 * t1163 * t3094 + t1274 * t1238 * t3100 + t1341 * t1312 * t3106 + t1531 * t1486 * t3113 + t1597 * t1561 * t3119 + t1664 * t1635 * t3125 + t1854 * t1809 * t3132 + t1920 * t1884 * t3138 + t1987 * t1958 * t3144;
t3184 = t181 * t2101 * t3037 + t280 * t2122 * t3043 + t360 * t2133 * t3049 + t562 * t2192 * t3056 + t628 * t2213 * t3062 + t695 * t2224 * t3068 + t885 * t2283 * t3075 + t951 * t2304 * t3081 + t1018 * t2315 * t3087 + t1208 * t2374 * t3094 + t1274 * t2395 * t3100 + t1341 * t2406 * t3106 + t1531 * t2465 * t3113 + t1597 * t2486 * t3119 + t1664 * t2497 * t3125 + t1854 * t2556 * t3132 + t1920 * t2577 * t3138 + t1987 * t2588 * t3144 + m(4);
t3185 = t3034 + t3035 + t3036 + t3053 + t3054 + t3055 + t3072 + t3073 + t3074 + t3091 + t3092 + t3093 + t3110 + t3111 + t3112 + t3129 + t3130 + t3131;
t3186 = t2615 * t3037;
t3188 = t2618 * t2610 * t3043;
t3190 = t2621 * t2610 * t3049;
t3191 = t2639 * t3056;
t3193 = t2642 * t2634 * t3062;
t3195 = t2645 * t2634 * t3068;
t3196 = t2663 * t3075;
t3198 = t2666 * t2658 * t3081;
t3200 = t2669 * t2658 * t3087;
t3201 = t2687 * t3094;
t3203 = t2690 * t2682 * t3100;
t3205 = t2693 * t2682 * t3106;
t3206 = t2711 * t3113;
t3208 = t2714 * t2706 * t3119;
t3210 = t2717 * t2706 * t3125;
t3211 = t2735 * t3132;
t3213 = t2738 * t2730 * t3138;
t3215 = t2741 * t2730 * t3144;
t3216 = t2987 - t2989 - t2990;
t3217 = t2603 * t3216;
t3218 = t3030 * t2605;
t3219 = t3186 + t3188 + t3190 + t3191 + t3193 + t3195 + t3196 + t3198 + t3200 + t3201 + t3203 + t3205 + t3206 + t3208 + t3210 + t3211 + t3213 + t3215 + t3217 - t3218;
t3225 = t281 * t2747 * t3043 + t361 * t2747 * t3049 + t2755 * t3037;
t3230 = t2770 * t3037 + t2776 * t3043 + t2782 * t3049;
t3237 = t629 * t2789 * t3062 + t696 * t2789 * t3068 + t2795 * t3056;
t3242 = t2810 * t3056 + t2816 * t3062 + t2822 * t3068;
t3249 = t1019 * t2829 * t3087 + t952 * t2829 * t3081 + t2835 * t3075;
t3254 = t2850 * t3075 + t2856 * t3081 + t2862 * t3087;
t3261 = t1275 * t2869 * t3100 + t1342 * t2869 * t3106 + t2875 * t3094;
t3266 = t2890 * t3094 + t2896 * t3100 + t2902 * t3106;
t3273 = t1598 * t2909 * t3119 + t1665 * t2909 * t3125 + t2915 * t3113;
t3278 = t2930 * t3113 + t2936 * t3119 + t2942 * t3125;
t3285 = t1921 * t2949 * t3138 + t1988 * t2949 * t3144 + t2955 * t3132;
t3290 = t2970 * t3132 + t2976 * t3138 + t2982 * t3144;
t3292 = mrSges(4,1) * t2750;
t3293 = mrSges(4,2) * t2752;
t3294 = mrSges(4,3) * t2598;
t3295 = t3292 - t3293 + t3294;
t3297 = t2603 * t3225 + t2603 * t3237 + t2603 * t3249 + t2603 * t3261 + t2603 * t3273 + t2603 * t3285 + t2605 * t3230 + t2605 * t3242 + t2605 * t3254 + t2605 * t3266 + t2605 * t3278 + t2605 * t3290 + t2605 * t3295;
t3336 = -mrSges(4,2) * t2593 + mrSges(4,1) * t2595;
t3338 = t2598 * t2605;
t3340 = t2598 * (t3186 + t3188 + t3190) - t2600 * t2605 * t3225 + t2600 * t2603 * t3230 + t2598 * (t3191 + t3193 + t3195) - t2600 * t2605 * t3237 + t2600 * t2603 * t3242 + t2598 * (t3196 + t3198 + t3200) - t2600 * t2605 * t3249 + t2600 * t2603 * t3254 + t2598 * (t3201 + t3203 + t3205) - t2600 * t2605 * t3261 + t2600 * t2603 * t3266 + t2598 * (t3206 + t3208 + t3210) - t2600 * t2605 * t3273 + t2600 * t2603 * t3278 + t2598 * (t3211 + t3213 + t3215) - t2600 * t2605 * t3285 + t2600 * t2603 * t3290 + t2603 * t3336 - t3030 * t3338;
t3345 = t183 * t2615;
t3346 = t2122 * t2610;
t3348 = t296 * t45 * t280;
t3349 = t3348 * t3346;
t3350 = t2133 * t2610;
t3351 = t377 * t360;
t3352 = t3351 * t3350;
t3353 = t183 * t2639;
t3354 = t2213 * t2634;
t3356 = t640 * t45 * t628;
t3357 = t3356 * t3354;
t3358 = t2224 * t2634;
t3359 = t712 * t695;
t3360 = t3359 * t3358;
t3361 = t183 * t2663;
t3362 = t2304 * t2658;
t3364 = t963 * t45 * t951;
t3365 = t3364 * t3362;
t3366 = t2315 * t2658;
t3367 = t1035 * t1018;
t3368 = t3367 * t3366;
t3369 = t183 * t2687;
t3370 = t2395 * t2682;
t3372 = t1286 * t45 * t1274;
t3373 = t3372 * t3370;
t3374 = t2406 * t2682;
t3375 = t1358 * t1341;
t3376 = t3375 * t3374;
t3377 = t183 * t2711;
t3378 = t2486 * t2706;
t3380 = t1609 * t45 * t1597;
t3381 = t3380 * t3378;
t3382 = t2497 * t2706;
t3383 = t1681 * t1664;
t3384 = t3383 * t3382;
t3385 = t183 * t2735;
t3386 = t2577 * t2730;
t3388 = t1932 * t45 * t1920;
t3389 = t3388 * t3386;
t3390 = t2588 * t2730;
t3391 = t2004 * t1987;
t3392 = t3391 * t3390;
t3394 = t3030 * t2603;
t3395 = t2605 * t3216 + t3345 + t3349 + t3352 + t3353 + t3357 + t3360 + t3361 + t3365 + t3368 + t3369 + t3373 + t3376 + t3377 + t3381 + t3384 + t3385 + t3389 + t3392 + t3394;
t3396 = t183 * t2755;
t3397 = t215 * t2747;
t3398 = t3348 * t3397;
t3399 = t322 * t2747;
t3400 = t3351 * t3399;
t3401 = t3396 + t3398 + t3400;
t3403 = t183 * t2770;
t3405 = t296 * t45 * t2776;
t3406 = t377 * t2782;
t3407 = t3403 + t3405 + t3406;
t3409 = t183 * t2795;
t3410 = t592 * t2789;
t3411 = t3356 * t3410;
t3412 = t666 * t2789;
t3413 = t3359 * t3412;
t3414 = t3409 + t3411 + t3413;
t3416 = t183 * t2810;
t3418 = t640 * t45 * t2816;
t3419 = t712 * t2822;
t3420 = t3416 + t3418 + t3419;
t3422 = t183 * t2835;
t3423 = t915 * t2829;
t3424 = t3364 * t3423;
t3425 = t989 * t2829;
t3426 = t3367 * t3425;
t3427 = t3422 + t3424 + t3426;
t3429 = t183 * t2850;
t3431 = t963 * t45 * t2856;
t3432 = t1035 * t2862;
t3433 = t3429 + t3431 + t3432;
t3435 = t183 * t2875;
t3436 = t1238 * t2869;
t3437 = t3372 * t3436;
t3438 = t1312 * t2869;
t3439 = t3375 * t3438;
t3440 = t3435 + t3437 + t3439;
t3442 = t183 * t2890;
t3444 = t1286 * t45 * t2896;
t3445 = t1358 * t2902;
t3446 = t3442 + t3444 + t3445;
t3448 = t183 * t2915;
t3449 = t1561 * t2909;
t3450 = t3380 * t3449;
t3451 = t1635 * t2909;
t3452 = t3383 * t3451;
t3453 = t3448 + t3450 + t3452;
t3455 = t183 * t2930;
t3457 = t1609 * t45 * t2936;
t3458 = t1681 * t2942;
t3459 = t3455 + t3457 + t3458;
t3461 = t183 * t2955;
t3462 = t1884 * t2949;
t3463 = t3388 * t3462;
t3464 = t1958 * t2949;
t3465 = t3391 * t3464;
t3466 = t3461 + t3463 + t3465;
t3468 = t183 * t2970;
t3470 = t1932 * t45 * t2976;
t3471 = t2004 * t2982;
t3472 = t3468 + t3470 + t3471;
t3475 = -t2603 * t3295 + t2603 * t3401 + t2603 * t3414 + t2603 * t3427 + t2603 * t3440 + t2603 * t3453 + t2603 * t3466 + t2605 * t3407 + t2605 * t3420 + t2605 * t3433 + t2605 * t3446 + t2605 * t3459 + t2605 * t3472;
t3476 = t3345 + t3349 + t3352;
t3482 = t3353 + t3357 + t3360;
t3488 = t3361 + t3365 + t3368;
t3494 = t3369 + t3373 + t3376;
t3500 = t3377 + t3381 + t3384;
t3506 = t3385 + t3389 + t3392;
t3515 = t2603 * t3030 * t2598 + t2600 * t2603 * t3407 + t2600 * t2603 * t3420 + t2600 * t2603 * t3433 + t2600 * t2603 * t3446 + t2600 * t2603 * t3459 + t2600 * t2603 * t3472 - t2600 * t2605 * t3401 - t2600 * t2605 * t3414 - t2600 * t2605 * t3427 - t2600 * t2605 * t3440 - t2600 * t2605 * t3453 - t2600 * t2605 * t3466 + t2598 * t3476 + t2598 * t3482 + t2598 * t3488 + t2598 * t3494 + t2598 * t3500 + t2598 * t3506 + t3336 * t2605;
t3520 = t413 * t280;
t3522 = t418 * t360;
t3524 = t296 * t45 * t2615 + t3520 * t3346 + t3522 * t3350;
t3528 = t418 * t280;
t3530 = Ifges(3,3) * t360;
t3532 = t377 * t2615 + t3528 * t3346 + t3530 * t3350;
t3539 = t736 * t628;
t3541 = t741 * t695;
t3543 = t640 * t45 * t2639 + t3539 * t3354 + t3541 * t3358;
t3547 = t741 * t628;
t3549 = Ifges(3,3) * t695;
t3551 = t712 * t2639 + t3547 * t3354 + t3549 * t3358;
t3558 = t1059 * t951;
t3560 = t1064 * t1018;
t3562 = t963 * t45 * t2663 + t3558 * t3362 + t3560 * t3366;
t3566 = t1064 * t951;
t3568 = Ifges(3,3) * t1018;
t3570 = t1035 * t2663 + t3566 * t3362 + t3568 * t3366;
t3577 = t1382 * t1274;
t3579 = t1387 * t1341;
t3581 = t1286 * t45 * t2687 + t3577 * t3370 + t3579 * t3374;
t3585 = t1387 * t1274;
t3587 = Ifges(3,3) * t1341;
t3589 = t1358 * t2687 + t3585 * t3370 + t3587 * t3374;
t3596 = t1705 * t1597;
t3598 = t1710 * t1664;
t3600 = t1609 * t45 * t2711 + t3596 * t3378 + t3598 * t3382;
t3604 = t1710 * t1597;
t3606 = Ifges(3,3) * t1664;
t3608 = t1681 * t2711 + t3604 * t3378 + t3606 * t3382;
t3615 = t2028 * t1920;
t3617 = t2033 * t1987;
t3619 = t1932 * t45 * t2735 + t3615 * t3386 + t3617 * t3390;
t3623 = t2033 * t1920;
t3625 = Ifges(3,3) * t1987;
t3627 = t2004 * t2735 + t3623 * t3386 + t3625 * t3390;
t3630 = t181 * t119 * t3476 + t280 * t215 * t3524 + t360 * t322 * t3532 + t562 * t517 * t3482 + t628 * t592 * t3543 + t695 * t666 * t3551 + t885 * t840 * t3488 + t951 * t915 * t3562 + t1018 * t989 * t3570 + t1208 * t1163 * t3494 + t1274 * t1238 * t3581 + t1341 * t1312 * t3589 + t1531 * t1486 * t3500 + t1597 * t1561 * t3600 + t1664 * t1635 * t3608 + t1854 * t1809 * t3506 + t1920 * t1884 * t3619 + t1987 * t1958 * t3627;
t3667 = t181 * t2101 * t3476 + t280 * t2122 * t3524 + t360 * t2133 * t3532 + t562 * t2192 * t3482 + t628 * t2213 * t3543 + t695 * t2224 * t3551 + t885 * t2283 * t3488 + t951 * t2304 * t3562 + t1018 * t2315 * t3570 + t1208 * t2374 * t3494 + t1274 * t2395 * t3581 + t1341 * t2406 * t3589 + t1531 * t2465 * t3500 + t1597 * t2486 * t3600 + t1664 * t2497 * t3608 + t1854 * t2556 * t3506 + t1920 * t2577 * t3619 + t1987 * t2588 * t3627 + t3217 - t3218;
t3668 = t2615 * t3476;
t3670 = t2618 * t2610 * t3524;
t3672 = t2621 * t2610 * t3532;
t3673 = t2639 * t3482;
t3675 = t2642 * t2634 * t3543;
t3677 = t2645 * t2634 * t3551;
t3678 = t2663 * t3488;
t3680 = t2666 * t2658 * t3562;
t3682 = t2669 * t2658 * t3570;
t3683 = t2687 * t3494;
t3686 = t2690 * t2682 * t3581;
t3688 = t2693 * t2682 * t3589;
t3689 = t2711 * t3500;
t3691 = t2714 * t2706 * t3600;
t3693 = t2717 * t2706 * t3608;
t3694 = t2735 * t3506;
t3696 = t2738 * t2730 * t3619;
t3698 = t2741 * t2730 * t3627;
t3699 = Ifges(4,1) - Ifges(4,2);
t3700 = t2595 ^ 2;
t3705 = -0.2e1 * Ifges(4,4) * t2593 * t2595 + t3700 * t3699 + Ifges(4,2) - Ifges(4,3);
t3706 = t2600 ^ 2;
t3710 = Ifges(4,5) * t2595 - Ifges(4,6) * t2593;
t3714 = 0.2e1 * t2600 * t3710 * t2598 + t3706 * t3705 + Ifges(4,3) + t3686 + t3688 + t3689 + t3691 + t3693 + t3694 + t3696 + t3698;
t3721 = t281 * t2747 * t3524 + t361 * t2747 * t3532 + t2755 * t3476;
t3726 = t2770 * t3476 + t2776 * t3524 + t2782 * t3532;
t3733 = t629 * t2789 * t3543 + t696 * t2789 * t3551 + t2795 * t3482;
t3738 = t2810 * t3482 + t2816 * t3543 + t2822 * t3551;
t3745 = t1019 * t2829 * t3570 + t952 * t2829 * t3562 + t2835 * t3488;
t3750 = t2850 * t3488 + t2856 * t3562 + t2862 * t3570;
t3757 = t1275 * t2869 * t3581 + t1342 * t2869 * t3589 + t2875 * t3494;
t3762 = t2890 * t3494 + t2896 * t3581 + t2902 * t3589;
t3769 = t1598 * t2909 * t3600 + t1665 * t2909 * t3608 + t2915 * t3500;
t3774 = t2930 * t3500 + t2936 * t3600 + t2942 * t3608;
t3781 = t1921 * t2949 * t3619 + t1988 * t2949 * t3627 + t2955 * t3506;
t3786 = t2970 * t3506 + t2976 * t3619 + t2982 * t3627;
t3792 = t2595 * t3699 * t2593 + 0.2e1 * t3700 * Ifges(4,4) - Ifges(4,4);
t3796 = Ifges(4,5) * t2593 + Ifges(4,6) * t2595;
t3798 = t3796 * t2598 + t2600 * t3792 + t2603 * t3721 + t2603 * t3733 + t2603 * t3745 + t2603 * t3757 + t2603 * t3769 + t2603 * t3781 + t2605 * t3726 + t2605 * t3738 + t2605 * t3750 + t2605 * t3762 + t2605 * t3774 + t2605 * t3786;
t3839 = -t2600 * t2605 * t3757 + t2600 * t2603 * t3762 + t2598 * (t3689 + t3691 + t3693) - t2600 * t2605 * t3769 + t2600 * t2603 * t3774 + t2598 * (t3694 + t3696 + t3698) - t2600 * t2605 * t3781 + t2600 * t2603 * t3786 + Ifges(4,5) * t2750 - Ifges(4,6) * t2752 + Ifges(4,3) * t2598;
t3847 = t296 * t45 * t2755 + t3520 * t3397 + t3522 * t3399;
t3853 = t377 * t2755 + t3528 * t3397 + t3530 * t3399;
t3862 = t640 * t45 * t2795 + t3539 * t3410 + t3541 * t3412;
t3868 = t712 * t2795 + t3547 * t3410 + t3549 * t3412;
t3877 = t963 * t45 * t2835 + t3558 * t3423 + t3560 * t3425;
t3883 = t1035 * t2835 + t3566 * t3423 + t3568 * t3425;
t3892 = t1286 * t45 * t2875 + t3577 * t3436 + t3579 * t3438;
t3898 = t1358 * t2875 + t3585 * t3436 + t3587 * t3438;
t3907 = t1609 * t45 * t2915 + t3596 * t3449 + t3598 * t3451;
t3913 = t1681 * t2915 + t3604 * t3449 + t3606 * t3451;
t3922 = t1932 * t45 * t2955 + t3615 * t3462 + t3617 * t3464;
t3928 = t2004 * t2955 + t3623 * t3462 + t3625 * t3464;
t3932 = t181 * t119 * t3401 + t280 * t215 * t3847 + t360 * t322 * t3853 + t562 * t517 * t3414 + t628 * t592 * t3862 + t695 * t666 * t3868 + t885 * t840 * t3427 + t951 * t915 * t3877 + t1018 * t989 * t3883 + t1208 * t1163 * t3440 + t1274 * t1238 * t3892 + t1341 * t1312 * t3898 + t1531 * t1486 * t3453 + t1597 * t1561 * t3907 + t1664 * t1635 * t3913 + t1854 * t1809 * t3466 + t1920 * t1884 * t3922 + t1987 * t1958 * t3928 - t2603 * t3216 + t3218;
t3969 = t181 * t2101 * t3401 + t280 * t2122 * t3847 + t360 * t2133 * t3853 + t562 * t2192 * t3414 + t628 * t2213 * t3862 + t695 * t2224 * t3868 + t885 * t2283 * t3427 + t951 * t2304 * t3877 + t1018 * t2315 * t3883 + t1208 * t2374 * t3440 + t1274 * t2395 * t3892 + t1341 * t2406 * t3898 + t1531 * t2465 * t3453 + t1597 * t2486 * t3907 + t1664 * t2497 * t3913 + t1854 * t2556 * t3466 + t1920 * t2577 * t3922 + t1987 * t2588 * t3928;
t3971 = t3437 + t3439 + t3448 + t3450 + t3452 + t3461 + t3463 + t3465 - t3292 + t3293 - t3294;
t3973 = t2615 * t3401;
t3975 = t2618 * t2610 * t3847;
t3977 = t2621 * t2610 * t3853;
t3978 = t2639 * t3414;
t3980 = t2642 * t2634 * t3862;
t3982 = t2645 * t2634 * t3868;
t3983 = t2663 * t3427;
t3985 = t2666 * t2658 * t3877;
t3987 = t2669 * t2658 * t3883;
t3988 = t2687 * t3440;
t3990 = t2690 * t2682 * t3892;
t3991 = t3973 + t3975 + t3977 + t3978 + t3980 + t3982 + t3983 + t3985 + t3987 + t3988 + t3990;
t3993 = t2693 * t2682 * t3898;
t3994 = t2711 * t3453;
t3996 = t2714 * t2706 * t3907;
t3998 = t2717 * t2706 * t3913;
t3999 = t2735 * t3466;
t4001 = t2738 * t2730 * t3922;
t4003 = t2741 * t2730 * t3928;
t4009 = Ifges(4,4) * t2603;
t4016 = -0.2e1 * Ifges(4,4) * t3338 + t3699 * t2603;
t4024 = t2598 * t2603;
t4033 = t3993 + t3994 + t3996 + t3998 + t3999 + t4001 + t4003 - 0.2e1 * t3706 * t3710 * t2605 + t2600 * (t3700 * (t2605 * t3699 * t2598 + 0.2e1 * t4009) + t2595 * t2593 * t4016 + t2605 * (Ifges(4,2) - Ifges(4,3)) * t2598 - t4009) + t2595 * (Ifges(4,5) * t2605 + Ifges(4,6) * t4024) + (Ifges(4,5) * t4024 - Ifges(4,6) * t2605) * t2593;
t4040 = t281 * t2747 * t3847 + t361 * t2747 * t3853 + t2755 * t3401;
t4045 = t2770 * t3401 + t2776 * t3847 + t2782 * t3853;
t4052 = t629 * t2789 * t3862 + t696 * t2789 * t3868 + t2795 * t3414;
t4057 = t2810 * t3414 + t2816 * t3862 + t2822 * t3868;
t4064 = t1019 * t2829 * t3883 + t952 * t2829 * t3877 + t2835 * t3427;
t4069 = t2850 * t3427 + t2856 * t3877 + t2862 * t3883;
t4076 = t1275 * t2869 * t3892 + t1342 * t2869 * t3898 + t2875 * t3440;
t4081 = t2890 * t3440 + t2896 * t3892 + t2902 * t3898;
t4088 = t1598 * t2909 * t3907 + t1665 * t2909 * t3913 + t2915 * t3453;
t4093 = t2930 * t3453 + t2936 * t3907 + t2942 * t3913;
t4100 = t1921 * t2949 * t3922 + t1988 * t2949 * t3928 + t2955 * t3466;
t4105 = t2970 * t3466 + t2976 * t3922 + t2982 * t3928;
t4110 = -t2600 * Ifges(4,6) + t3699 * t2988;
t4119 = -Ifges(4,4) * t2598 - Ifges(4,5) * t2752;
t4122 = t2603 * t4040 + t2605 * t4045 + t2603 * t4052 + t2605 * t4057 + t2603 * t4064 + t2605 * t4069 + t2603 * t4076 + t2605 * t4081 + t2603 * t4088 + t2605 * t4093 + t2603 * t4100 + t2605 * t4105 - t3700 * t4016 + t2595 * (0.2e1 * t2603 * Ifges(4,4) * t2593 + t2605 * t4110) + t2605 * t4119 + Ifges(4,1) * t2603;
t4163 = t2595 * t2598 * Ifges(4,5) - Ifges(4,6) * t2988 - Ifges(4,3) * t2600;
t4166 = t2598 * (t3973 + t3975 + t3977) - t2600 * t2605 * t4040 + t2600 * t2603 * t4045 + t2598 * (t3978 + t3980 + t3982) - t2600 * t2605 * t4052 + t2600 * t2603 * t4057 + t2598 * (t3983 + t3985 + t3987) - t2600 * t2605 * t4064 + t2600 * t2603 * t4069 + t2598 * (t3988 + t3990 + t3993) - t2600 * t2605 * t4076 + t2600 * t2603 * t4081 + t2598 * (t3994 + t3996 + t3998) - t2600 * t2605 * t4088 + t2600 * t2603 * t4093 + t2598 * (t3999 + t4001 + t4003) - t2600 * t2605 * t4100 + t2600 * t2603 * t4105 + t2605 * t4163 + t3796 * t2603;
t4173 = t296 * t45 * t2770 + t413 * t2776 + t418 * t2782;
t4179 = Ifges(3,3) * t2782 + t377 * t2770 + t418 * t2776;
t4188 = t640 * t45 * t2810 + t736 * t2816 + t741 * t2822;
t4194 = Ifges(3,3) * t2822 + t712 * t2810 + t741 * t2816;
t4203 = t963 * t45 * t2850 + t1059 * t2856 + t1064 * t2862;
t4209 = Ifges(3,3) * t2862 + t1035 * t2850 + t1064 * t2856;
t4218 = t1286 * t45 * t2890 + t1382 * t2896 + t1387 * t2902;
t4224 = Ifges(3,3) * t2902 + t1358 * t2890 + t1387 * t2896;
t4233 = t1609 * t45 * t2930 + t1705 * t2936 + t1710 * t2942;
t4239 = Ifges(3,3) * t2942 + t1681 * t2930 + t1710 * t2936;
t4248 = t1932 * t45 * t2970 + t2028 * t2976 + t2033 * t2982;
t4254 = Ifges(3,3) * t2982 + t2004 * t2970 + t2033 * t2976;
t4258 = t181 * t119 * t3407 + t280 * t215 * t4173 + t360 * t322 * t4179 + t562 * t517 * t3420 + t628 * t592 * t4188 + t695 * t666 * t4194 + t885 * t840 * t3433 + t951 * t915 * t4203 + t1018 * t989 * t4209 + t1208 * t1163 * t3446 + t1274 * t1238 * t4218 + t1341 * t1312 * t4224 + t1531 * t1486 * t3459 + t1597 * t1561 * t4233 + t1664 * t1635 * t4239 + t1854 * t1809 * t3472 + t1920 * t1884 * t4248 + t1987 * t1958 * t4254 - t2605 * t3216 - t3394;
t4296 = t1274 * t2395 * t4218 + t1341 * t2406 * t4224 + t1531 * t2465 * t3459 + t1597 * t2486 * t4233 + t1664 * t2497 * t4239 + t1854 * t2556 * t3472 + t1920 * t2577 * t4248 + t1987 * t2588 * t4254 + t3292 - t3293 + t3294;
t4298 = t3403 + t3405 + t3406 + t3416 + t3418 + t3419 + t3429 + t3431 + t3432 + t3442 + t3444 + t3445 + t3455 + t3457 + t3458 + t3468 + t3470 + t3471;
t4299 = t2615 * t3407;
t4301 = t2618 * t2610 * t4173;
t4303 = t2621 * t2610 * t4179;
t4304 = t2639 * t3420;
t4306 = t2642 * t2634 * t4188;
t4308 = t2645 * t2634 * t4194;
t4309 = t2663 * t3433;
t4311 = t2666 * t2658 * t4203;
t4313 = t2669 * t2658 * t4209;
t4314 = t2687 * t3446;
t4316 = t2690 * t2682 * t4218;
t4317 = t4299 + t4301 + t4303 + t4304 + t4306 + t4308 + t4309 + t4311 + t4313 + t4314 + t4316;
t4319 = t2693 * t2682 * t4224;
t4320 = t2711 * t3459;
t4322 = t2714 * t2706 * t4233;
t4324 = t2717 * t2706 * t4239;
t4325 = t2735 * t3472;
t4327 = t2738 * t2730 * t4248;
t4329 = t2741 * t2730 * t4254;
t4340 = t4319 + t4320 + t4322 + t4324 + t4325 + t4327 + t4329 + 0.2e1 * t3706 * t3710 * t2603 + t2600 * (-t2603 * t2598 * t3705 + t3792 * t2605) - t3710 * t2603 + t3796 * t3338;
t4347 = t281 * t2747 * t4173 + t361 * t2747 * t4179 + t2755 * t3407;
t4352 = t2770 * t3407 + t2776 * t4173 + t2782 * t4179;
t4359 = t629 * t2789 * t4188 + t696 * t2789 * t4194 + t2795 * t3420;
t4364 = t2810 * t3420 + t2816 * t4188 + t2822 * t4194;
t4371 = t1019 * t2829 * t4209 + t952 * t2829 * t4203 + t2835 * t3433;
t4376 = t2850 * t3433 + t2856 * t4203 + t2862 * t4209;
t4383 = t1275 * t2869 * t4218 + t1342 * t2869 * t4224 + t2875 * t3446;
t4388 = t2890 * t3446 + t2896 * t4218 + t2902 * t4224;
t4395 = t1598 * t2909 * t4233 + t1665 * t2909 * t4239 + t2915 * t3459;
t4400 = t2930 * t3459 + t2936 * t4233 + t2942 * t4239;
t4407 = t1921 * t2949 * t4248 + t1988 * t2949 * t4254 + t2955 * t3472;
t4412 = t2970 * t3472 + t2976 * t4248 + t2982 * t4254;
t4427 = t2603 * t4347 + t2605 * t4352 + t2603 * t4359 + t2605 * t4364 + t2603 * t4371 + t2605 * t4376 + t2603 * t4383 + t2605 * t4388 + t2603 * t4395 + t2605 * t4400 + t2603 * t4407 + t2605 * t4412 + t3700 * (-0.2e1 * Ifges(4,4) * t4024 - t3699 * t2605) + t2595 * (0.2e1 * Ifges(4,4) * t2593 * t2605 - t2603 * t4110) - t2603 * t4119 + Ifges(4,1) * t2605;
t4466 = t2598 * (t4299 + t4301 + t4303) - t2600 * t2605 * t4347 + t2600 * t2603 * t4352 + t2598 * (t4304 + t4306 + t4308) - t2600 * t2605 * t4359 + t2600 * t2603 * t4364 + t2598 * (t4309 + t4311 + t4313) - t2600 * t2605 * t4371 + t2600 * t2603 * t4376 + t2598 * (t4314 + t4316 + t4319) - t2600 * t2605 * t4383 + t2600 * t2603 * t4388 + t2598 * (t4320 + t4322 + t4324) - t2600 * t2605 * t4395 + t2600 * t2603 * t4400 + t2598 * (t4325 + t4327 + t4329) - t2600 * t2605 * t4407 + t2600 * t2603 * t4412 - t2603 * t4163 + t3796 * t2605;
unknown(1,1) = t2044;
unknown(1,2) = t2591;
unknown(1,3) = t2592;
unknown(1,4) = t2743;
unknown(1,5) = t2991;
unknown(1,6) = t3032;
unknown(2,1) = t3147;
unknown(2,2) = t3184;
unknown(2,3) = t3185;
unknown(2,4) = t3219;
unknown(2,5) = t3297;
unknown(2,6) = t3340;
unknown(3,1) = t2592;
unknown(3,2) = t3185;
unknown(3,3) = (6 * m(1)) + (6 * m(2)) + 0.6e1 * m(3) + m(4);
unknown(3,4) = t3395;
unknown(3,5) = t3475;
unknown(3,6) = t3515;
unknown(4,1) = t3630;
unknown(4,2) = t3667;
unknown(4,3) = t3395;
unknown(4,4) = t3668 + t3670 + t3672 + t3673 + t3675 + t3677 + t3678 + t3680 + t3682 + t3683 + t3714;
unknown(4,5) = t3798;
unknown(4,6) = t2598 * (t3668 + t3670 + t3672) - t2600 * t2605 * t3721 + t2600 * t2603 * t3726 + t2598 * (t3673 + t3675 + t3677) - t2600 * t2605 * t3733 + t2600 * t2603 * t3738 + t2598 * (t3678 + t3680 + t3682) - t2600 * t2605 * t3745 + t2600 * t2603 * t3750 + t2598 * (t3683 + t3686 + t3688) + t3839;
unknown(5,1) = t3932;
unknown(5,2) = t3969;
unknown(5,3) = t3396 + t3398 + t3400 + t3409 + t3411 + t3413 + t3422 + t3424 + t3426 + t3435 + t3971;
unknown(5,4) = t3991 + t4033;
unknown(5,5) = t4122;
unknown(5,6) = t4166;
unknown(6,1) = t4258;
unknown(6,2) = t1018 * t2315 * t4209 + t1208 * t2374 * t3446 + t181 * t2101 * t3407 + t280 * t2122 * t4173 + t360 * t2133 * t4179 + t562 * t2192 * t3420 + t628 * t2213 * t4188 + t695 * t2224 * t4194 + t885 * t2283 * t3433 + t951 * t2304 * t4203 + t4296;
unknown(6,3) = t4298;
unknown(6,4) = t4317 + t4340;
unknown(6,5) = t4427;
unknown(6,6) = t4466;
MX  = unknown;
