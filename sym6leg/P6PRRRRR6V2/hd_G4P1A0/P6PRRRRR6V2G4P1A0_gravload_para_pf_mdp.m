% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PRRRRR6V2G4P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRRRRR6V2G4P1A0_convert_par2_MPV_fixb.m

% Output:
% taugX [6x1]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-18 12:11
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp(xP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P6PRRRRR6V2G4P1A0_gravload_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-18 12:00:26
% EndTime: 2019-05-18 12:11:51
% DurationCPUTime: 725.45s
% Computational Cost: add. (56961->3330), mult. (149514->6147), div. (252->30), fcn. (146502->74), ass. (0->2053)
t30999 = legFrame(3,1);
t30949 = cos(t30999);
t31017 = legFrame(3,2);
t30959 = sin(t31017);
t31808 = t30949 * t30959;
t30937 = sin(t30999);
t31838 = t30937 * t30959;
t30965 = cos(t31017);
t32131 = t30965 * g(1);
t30554 = -g(2) * t31838 + g(3) * t31808 - t32131;
t30860 = g(2) * t30949 + g(3) * t30937;
t30982 = sin(pkin(10));
t30986 = cos(pkin(10));
t30386 = -t30554 * t30982 - t30860 * t30986;
t30560 = g(1) * t30959 + (-g(2) * t30937 + g(3) * t30949) * t30965;
t30993 = legFrame(3,3);
t30931 = sin(t30993);
t30943 = cos(t30993);
t30985 = sin(pkin(4));
t30989 = cos(pkin(4));
t31172 = t30554 * t30986 - t30860 * t30982;
t29928 = -t30560 * t30985 + (t30386 * t30943 - t30931 * t31172) * t30989;
t31021 = sin(qJ(2,3));
t31027 = cos(qJ(2,3));
t32293 = t30386 * t30931 + t30943 * t31172;
t29763 = t31021 * t29928 + t31027 * t32293;
t31000 = legFrame(2,1);
t30950 = cos(t31000);
t31018 = legFrame(2,2);
t30960 = sin(t31018);
t31803 = t30950 * t30960;
t30938 = sin(t31000);
t31833 = t30938 * t30960;
t30966 = cos(t31018);
t32130 = t30966 * g(1);
t30555 = -g(2) * t31833 + g(3) * t31803 - t32130;
t30861 = g(2) * t30950 + g(3) * t30938;
t30387 = -t30555 * t30982 - t30861 * t30986;
t30561 = g(1) * t30960 + (-g(2) * t30938 + g(3) * t30950) * t30966;
t30994 = legFrame(2,3);
t30932 = sin(t30994);
t30944 = cos(t30994);
t31171 = t30555 * t30986 - t30861 * t30982;
t29929 = -t30561 * t30985 + (t30387 * t30944 - t30932 * t31171) * t30989;
t31023 = sin(qJ(2,2));
t31029 = cos(qJ(2,2));
t32292 = t30932 * t30387 + t30944 * t31171;
t29764 = t31023 * t29929 + t31029 * t32292;
t31001 = legFrame(1,1);
t30951 = cos(t31001);
t31019 = legFrame(1,2);
t30961 = sin(t31019);
t31798 = t30951 * t30961;
t30939 = sin(t31001);
t31828 = t30939 * t30961;
t30967 = cos(t31019);
t32129 = t30967 * g(1);
t30556 = -g(2) * t31828 + g(3) * t31798 - t32129;
t30862 = g(2) * t30951 + g(3) * t30939;
t30388 = -t30556 * t30982 - t30862 * t30986;
t30562 = g(1) * t30961 + (-g(2) * t30939 + g(3) * t30951) * t30967;
t30995 = legFrame(1,3);
t30933 = sin(t30995);
t30945 = cos(t30995);
t31170 = t30556 * t30986 - t30862 * t30982;
t29930 = -t30562 * t30985 + (t30388 * t30945 - t30933 * t31170) * t30989;
t31025 = sin(qJ(2,1));
t31031 = cos(qJ(2,1));
t32291 = t30933 * t30388 + t30945 * t31170;
t29765 = t29930 * t31025 + t31031 * t32291;
t30988 = cos(pkin(5));
t30975 = t30988 ^ 2;
t32195 = t30975 - 0.1e1;
t31032 = xP(6);
t30968 = sin(t31032);
t31033 = xP(5);
t30969 = sin(t31033);
t30971 = cos(t31032);
t31034 = xP(4);
t30973 = cos(t31034);
t31052 = koppelP(1,1);
t31715 = t30973 * t31052;
t31046 = koppelP(1,2);
t31721 = t30973 * t31046;
t30970 = sin(t31034);
t31735 = t30970 * t31052;
t31741 = t30970 * t31046;
t30406 = -(t30969 * t31721 + t31735) * t30968 + (t30969 * t31715 - t31741) * t30971;
t30972 = cos(t31033);
t31040 = koppelP(1,3);
t30751 = t30933 * t30986 + t30945 * t30982;
t31959 = t30751 * t30985;
t31084 = t31040 * t31959;
t31766 = t30961 * t30986;
t31767 = t30961 * t30982;
t31826 = t30939 * t30986;
t31827 = t30939 * t30982;
t31164 = (t30951 * t31767 + t31826) * t30945 + (t30951 * t31766 - t31827) * t30933;
t31626 = t30989 * t31040;
t31361 = t30969 * t31626;
t31662 = t30985 * t31040;
t31367 = t30969 * t31662;
t31391 = t30961 * t31626;
t31765 = t30961 * t30989;
t30825 = -t30968 * t31046 + t30971 * t31052;
t31899 = t30825 * t30989;
t31900 = t30825 * t30985;
t31686 = t30985 * t30986;
t31708 = t30982 * t30985;
t32305 = t30933 * t31686 + t30945 * t31708;
t32317 = -(t30973 * t31391 + t31164 * t31900) * t30972 - t31164 * t31367 + t30406 * t31765 + t30967 * (t30951 * t31361 + t32305 * t30406 + (t30951 * t31899 - t30973 * t31084) * t30972);
t30405 = (t30969 * t31735 + t31721) * t30971 + t30968 * (-t30969 * t31741 + t31715);
t31796 = t30951 * t30986;
t31797 = t30951 * t30982;
t32299 = (t30939 * t31766 + t31797) * t30933 - (-t30939 * t31767 + t31796) * t30945;
t32316 = (-t30970 * t31391 - t31900 * t32299) * t30972 + t30405 * t31765 - t32299 * t31367 + t30967 * (t30939 * t31361 + t32305 * t30405 + (t30939 * t31899 - t30970 * t31084) * t30972);
t31051 = koppelP(2,1);
t31716 = t30973 * t31051;
t31045 = koppelP(2,2);
t31722 = t30973 * t31045;
t31736 = t30970 * t31051;
t31742 = t30970 * t31045;
t30404 = -(t30969 * t31722 + t31736) * t30968 + (t30969 * t31716 - t31742) * t30971;
t31039 = koppelP(2,3);
t30750 = t30932 * t30986 + t30944 * t30982;
t31960 = t30750 * t30985;
t31085 = t31039 * t31960;
t31771 = t30960 * t30986;
t31772 = t30960 * t30982;
t31831 = t30938 * t30986;
t31832 = t30938 * t30982;
t31165 = (t30950 * t31772 + t31831) * t30944 + (t30950 * t31771 - t31832) * t30932;
t31627 = t30989 * t31039;
t31362 = t30969 * t31627;
t31663 = t30985 * t31039;
t31368 = t30969 * t31663;
t31397 = t30960 * t31627;
t31770 = t30960 * t30989;
t30824 = -t30968 * t31045 + t30971 * t31051;
t31902 = t30824 * t30989;
t31903 = t30824 * t30985;
t32304 = t30932 * t31686 + t30944 * t31708;
t32315 = -(t30973 * t31397 + t31165 * t31903) * t30972 - t31165 * t31368 + t30404 * t31770 + t30966 * (t30950 * t31362 + t32304 * t30404 + (t30950 * t31902 - t30973 * t31085) * t30972);
t30403 = (t30969 * t31736 + t31722) * t30971 + t30968 * (-t30969 * t31742 + t31716);
t31801 = t30950 * t30986;
t31802 = t30950 * t30982;
t32298 = (t30938 * t31771 + t31802) * t30932 - (-t30938 * t31772 + t31801) * t30944;
t32314 = (-t30970 * t31397 - t31903 * t32298) * t30972 + t30403 * t31770 - t32298 * t31368 + t30966 * (t30938 * t31362 + t32304 * t30403 + (t30938 * t31902 - t30970 * t31085) * t30972);
t31050 = koppelP(3,1);
t31717 = t30973 * t31050;
t31044 = koppelP(3,2);
t31723 = t30973 * t31044;
t31737 = t30970 * t31050;
t31743 = t30970 * t31044;
t30402 = -(t30969 * t31723 + t31737) * t30968 + (t30969 * t31717 - t31743) * t30971;
t31038 = koppelP(3,3);
t30749 = t30931 * t30986 + t30943 * t30982;
t31961 = t30749 * t30985;
t31086 = t31038 * t31961;
t31776 = t30959 * t30986;
t31777 = t30959 * t30982;
t31836 = t30937 * t30986;
t31837 = t30937 * t30982;
t31166 = (t30949 * t31777 + t31836) * t30943 + (t30949 * t31776 - t31837) * t30931;
t31628 = t30989 * t31038;
t31363 = t30969 * t31628;
t31664 = t30985 * t31038;
t31369 = t30969 * t31664;
t31403 = t30959 * t31628;
t31775 = t30959 * t30989;
t30823 = -t30968 * t31044 + t30971 * t31050;
t31905 = t30823 * t30989;
t31906 = t30823 * t30985;
t32303 = t30931 * t31686 + t30943 * t31708;
t32313 = -(t30973 * t31403 + t31166 * t31906) * t30972 - t31166 * t31369 + t30402 * t31775 + t30965 * (t30949 * t31363 + t32303 * t30402 + (t30949 * t31905 - t30973 * t31086) * t30972);
t30401 = (t30969 * t31737 + t31723) * t30971 + t30968 * (-t30969 * t31743 + t31717);
t31806 = t30949 * t30986;
t31807 = t30949 * t30982;
t32297 = (t30937 * t31776 + t31807) * t30931 - (-t30937 * t31777 + t31806) * t30943;
t32312 = (-t30970 * t31403 - t31906 * t32297) * t30972 + t30401 * t31775 - t32297 * t31369 + t30965 * (t30937 * t31363 + t32303 * t30401 + (t30937 * t31905 - t30970 * t31086) * t30972);
t31049 = koppelP(4,1);
t31718 = t30973 * t31049;
t31043 = koppelP(4,2);
t31724 = t30973 * t31043;
t31738 = t30970 * t31049;
t31744 = t30970 * t31043;
t30400 = -(t30969 * t31724 + t31738) * t30968 + (t30969 * t31718 - t31744) * t30971;
t30998 = legFrame(4,1);
t30948 = cos(t30998);
t31016 = legFrame(4,2);
t30964 = cos(t31016);
t31037 = koppelP(4,3);
t30992 = legFrame(4,3);
t30930 = sin(t30992);
t30942 = cos(t30992);
t30748 = t30930 * t30986 + t30942 * t30982;
t31962 = t30748 * t30985;
t31087 = t31037 * t31962;
t30958 = sin(t31016);
t31781 = t30958 * t30986;
t31782 = t30958 * t30982;
t30936 = sin(t30998);
t31841 = t30936 * t30986;
t31842 = t30936 * t30982;
t31167 = (t30948 * t31782 + t31841) * t30942 + (t30948 * t31781 - t31842) * t30930;
t31629 = t30989 * t31037;
t31364 = t30969 * t31629;
t31665 = t30985 * t31037;
t31370 = t30969 * t31665;
t31409 = t30958 * t31629;
t31780 = t30958 * t30989;
t30822 = -t30968 * t31043 + t30971 * t31049;
t31908 = t30822 * t30989;
t31909 = t30822 * t30985;
t32302 = t30930 * t31686 + t30942 * t31708;
t32311 = -(t30973 * t31409 + t31167 * t31909) * t30972 - t31167 * t31370 + t30400 * t31780 + t30964 * (t30948 * t31364 + t32302 * t30400 + (t30948 * t31908 - t30973 * t31087) * t30972);
t30399 = (t30969 * t31738 + t31724) * t30971 + t30968 * (-t30969 * t31744 + t31718);
t31811 = t30948 * t30986;
t31812 = t30948 * t30982;
t32296 = (t30936 * t31781 + t31812) * t30930 - (-t30936 * t31782 + t31811) * t30942;
t32310 = (-t30970 * t31409 - t31909 * t32296) * t30972 + t30399 * t31780 - t32296 * t31370 + t30964 * (t30936 * t31364 + t32302 * t30399 + (t30936 * t31908 - t30970 * t31087) * t30972);
t31048 = koppelP(5,1);
t31719 = t30973 * t31048;
t31042 = koppelP(5,2);
t31725 = t30973 * t31042;
t31739 = t30970 * t31048;
t31745 = t30970 * t31042;
t30398 = -(t30969 * t31725 + t31739) * t30968 + (t30969 * t31719 - t31745) * t30971;
t30997 = legFrame(5,1);
t30947 = cos(t30997);
t31015 = legFrame(5,2);
t30963 = cos(t31015);
t31036 = koppelP(5,3);
t30991 = legFrame(5,3);
t30929 = sin(t30991);
t30941 = cos(t30991);
t30747 = t30929 * t30986 + t30941 * t30982;
t31963 = t30747 * t30985;
t31088 = t31036 * t31963;
t30957 = sin(t31015);
t31786 = t30957 * t30986;
t31787 = t30957 * t30982;
t30935 = sin(t30997);
t31846 = t30935 * t30986;
t31847 = t30935 * t30982;
t31168 = (t30947 * t31787 + t31846) * t30941 + (t30947 * t31786 - t31847) * t30929;
t31630 = t30989 * t31036;
t31365 = t30969 * t31630;
t31666 = t30985 * t31036;
t31371 = t30969 * t31666;
t31415 = t30957 * t31630;
t31785 = t30957 * t30989;
t30821 = -t30968 * t31042 + t30971 * t31048;
t31911 = t30821 * t30989;
t31912 = t30821 * t30985;
t32301 = t30929 * t31686 + t30941 * t31708;
t32309 = -(t30973 * t31415 + t31168 * t31912) * t30972 - t31168 * t31371 + t30398 * t31785 + t30963 * (t30947 * t31365 + t32301 * t30398 + (t30947 * t31911 - t30973 * t31088) * t30972);
t30397 = (t30969 * t31739 + t31725) * t30971 + t30968 * (-t30969 * t31745 + t31719);
t31816 = t30947 * t30986;
t31817 = t30947 * t30982;
t32295 = (t30935 * t31786 + t31817) * t30929 - (-t30935 * t31787 + t31816) * t30941;
t32308 = (-t30970 * t31415 - t31912 * t32295) * t30972 + t30397 * t31785 - t32295 * t31371 + t30963 * (t30935 * t31365 + t32301 * t30397 + (t30935 * t31911 - t30970 * t31088) * t30972);
t31047 = koppelP(6,1);
t31720 = t30973 * t31047;
t31041 = koppelP(6,2);
t31726 = t30973 * t31041;
t31740 = t30970 * t31047;
t31746 = t30970 * t31041;
t30396 = -(t30969 * t31726 + t31740) * t30968 + (t30969 * t31720 - t31746) * t30971;
t30996 = legFrame(6,1);
t30946 = cos(t30996);
t31014 = legFrame(6,2);
t30962 = cos(t31014);
t31035 = koppelP(6,3);
t30990 = legFrame(6,3);
t30928 = sin(t30990);
t30940 = cos(t30990);
t30746 = t30928 * t30986 + t30940 * t30982;
t31964 = t30746 * t30985;
t31089 = t31035 * t31964;
t30956 = sin(t31014);
t31791 = t30956 * t30986;
t31792 = t30956 * t30982;
t30934 = sin(t30996);
t31851 = t30934 * t30986;
t31852 = t30934 * t30982;
t31169 = (t30946 * t31792 + t31851) * t30940 + (t30946 * t31791 - t31852) * t30928;
t31631 = t30989 * t31035;
t31366 = t30969 * t31631;
t31667 = t30985 * t31035;
t31372 = t30969 * t31667;
t31421 = t30956 * t31631;
t31790 = t30956 * t30989;
t30820 = -t30968 * t31041 + t30971 * t31047;
t31914 = t30820 * t30989;
t31915 = t30820 * t30985;
t32300 = t30928 * t31686 + t30940 * t31708;
t32307 = -(t30973 * t31421 + t31169 * t31915) * t30972 - t31169 * t31372 + t30396 * t31790 + t30962 * (t30946 * t31366 + t32300 * t30396 + (t30946 * t31914 - t30973 * t31089) * t30972);
t30395 = (t30969 * t31740 + t31726) * t30971 + t30968 * (-t30969 * t31746 + t31720);
t31821 = t30946 * t30986;
t31822 = t30946 * t30982;
t32294 = (t30934 * t31791 + t31822) * t30928 - (-t30934 * t31792 + t31821) * t30940;
t32306 = (-t30970 * t31421 - t31915 * t32294) * t30972 + t30395 * t31790 - t32294 * t31372 + t30962 * (t30934 * t31366 + t32300 * t30395 + (t30934 * t31914 - t30970 * t31089) * t30972);
t31632 = t30989 * t31031;
t30785 = t30982 * t31632 + t30986 * t31025;
t30794 = -t30982 * t31025 + t30986 * t31632;
t31155 = t30785 * t30945 + t30794 * t30933;
t31633 = t30989 * t31029;
t30784 = t30982 * t31633 + t30986 * t31023;
t30793 = -t30982 * t31023 + t30986 * t31633;
t31156 = t30784 * t30944 + t30793 * t30932;
t31634 = t30989 * t31027;
t30783 = t30982 * t31634 + t30986 * t31021;
t30792 = -t30982 * t31021 + t30986 * t31634;
t31157 = t30783 * t30943 + t30792 * t30931;
t31007 = sin(qJ(2,4));
t31013 = cos(qJ(2,4));
t31641 = t30989 * t31013;
t30766 = t30982 * t31641 + t30986 * t31007;
t30775 = -t30982 * t31007 + t30986 * t31641;
t31161 = t30766 * t30942 + t30775 * t30930;
t31005 = sin(qJ(2,5));
t31011 = cos(qJ(2,5));
t31642 = t30989 * t31011;
t30765 = t30982 * t31642 + t30986 * t31005;
t30774 = -t30982 * t31005 + t30986 * t31642;
t31162 = t30765 * t30941 + t30774 * t30929;
t31003 = sin(qJ(2,6));
t31009 = cos(qJ(2,6));
t31643 = t30989 * t31009;
t30764 = t30982 * t31643 + t30986 * t31003;
t30773 = -t30982 * t31003 + t30986 * t31643;
t31163 = t30764 * t30940 + t30773 * t30928;
t31008 = cos(qJ(3,6));
t30976 = t31008 ^ 2;
t31594 = 0.2e1 * t30976;
t31010 = cos(qJ(3,5));
t30977 = t31010 ^ 2;
t31593 = 0.2e1 * t30977;
t31012 = cos(qJ(3,4));
t30978 = t31012 ^ 2;
t31592 = 0.2e1 * t30978;
t31026 = cos(qJ(3,3));
t30979 = t31026 ^ 2;
t31591 = 0.2e1 * t30979;
t31028 = cos(qJ(3,2));
t30980 = t31028 ^ 2;
t31590 = 0.2e1 * t30980;
t31030 = cos(qJ(3,1));
t30981 = t31030 ^ 2;
t31589 = 0.2e1 * t30981;
t31392 = t30961 * t31632;
t31825 = t30939 * t31025;
t30611 = t30951 * t31392 - t31825;
t31451 = t30939 * t31632;
t31764 = t30961 * t31025;
t30622 = t30951 * t31764 + t31451;
t31173 = (t30611 * t30986 - t30622 * t30982) * t30933 + (t30611 * t30982 + t30622 * t30986) * t30945;
t31343 = t31031 * t31662;
t31251 = t30961 * t31343;
t31668 = t30985 * t31031;
t31395 = t30961 * t31668;
t32266 = -t30406 * t31395 - (t30825 * t31173 - t30973 * t31251) * t30972;
t31398 = t30960 * t31633;
t31830 = t30938 * t31023;
t30609 = t30950 * t31398 - t31830;
t31453 = t30938 * t31633;
t31769 = t30960 * t31023;
t30618 = t30950 * t31769 + t31453;
t31175 = (t30609 * t30986 - t30618 * t30982) * t30932 + (t30609 * t30982 + t30618 * t30986) * t30944;
t31344 = t31029 * t31663;
t31253 = t30960 * t31344;
t31669 = t30985 * t31029;
t31401 = t30960 * t31669;
t32265 = -t30404 * t31401 - (t30824 * t31175 - t30973 * t31253) * t30972;
t31404 = t30959 * t31634;
t31835 = t30937 * t31021;
t30607 = t30949 * t31404 - t31835;
t31455 = t30937 * t31634;
t31774 = t30959 * t31021;
t30614 = t30949 * t31774 + t31455;
t31177 = (t30607 * t30986 - t30614 * t30982) * t30931 + (t30607 * t30982 + t30614 * t30986) * t30943;
t31345 = t31027 * t31664;
t31255 = t30959 * t31345;
t31670 = t30985 * t31027;
t31407 = t30959 * t31670;
t32264 = -t30402 * t31407 - (t30823 * t31177 - t30973 * t31255) * t30972;
t31410 = t30958 * t31641;
t31840 = t30936 * t31007;
t30587 = t30948 * t31410 - t31840;
t31457 = t30936 * t31641;
t31779 = t30958 * t31007;
t30598 = t30948 * t31779 + t31457;
t31179 = (t30587 * t30986 - t30598 * t30982) * t30930 + (t30587 * t30982 + t30598 * t30986) * t30942;
t31349 = t31013 * t31665;
t31257 = t30958 * t31349;
t31677 = t30985 * t31013;
t31413 = t30958 * t31677;
t32263 = -t30400 * t31413 - (t30822 * t31179 - t30973 * t31257) * t30972;
t31416 = t30957 * t31642;
t31845 = t30935 * t31005;
t30585 = t30947 * t31416 - t31845;
t31459 = t30935 * t31642;
t31784 = t30957 * t31005;
t30594 = t30947 * t31784 + t31459;
t31181 = (t30585 * t30986 - t30594 * t30982) * t30929 + (t30585 * t30982 + t30594 * t30986) * t30941;
t31350 = t31011 * t31666;
t31259 = t30957 * t31350;
t31678 = t30985 * t31011;
t31419 = t30957 * t31678;
t32262 = -t30398 * t31419 - (t30821 * t31181 - t30973 * t31259) * t30972;
t31422 = t30956 * t31643;
t31850 = t30934 * t31003;
t30583 = t30946 * t31422 - t31850;
t31461 = t30934 * t31643;
t31789 = t30956 * t31003;
t30590 = t30946 * t31789 + t31461;
t31183 = (t30583 * t30986 - t30590 * t30982) * t30928 + (t30583 * t30982 + t30590 * t30986) * t30940;
t31351 = t31009 * t31667;
t31261 = t30956 * t31351;
t31679 = t30985 * t31009;
t31425 = t30956 * t31679;
t32261 = -t30396 * t31425 - (t30820 * t31183 - t30973 * t31261) * t30972;
t31117 = t31155 * t31040;
t31490 = t30825 * t31668;
t32260 = t31155 * t30406 - (t30951 * t31490 + t30973 * t31117) * t30972;
t32259 = t31155 * t30405 - (t30939 * t31490 + t30970 * t31117) * t30972;
t31118 = t31156 * t31039;
t31491 = t30824 * t31669;
t32258 = t31156 * t30404 - (t30950 * t31491 + t30973 * t31118) * t30972;
t32257 = t31156 * t30403 - (t30938 * t31491 + t30970 * t31118) * t30972;
t31119 = t31157 * t31038;
t31492 = t30823 * t31670;
t32256 = t31157 * t30402 - (t30949 * t31492 + t30973 * t31119) * t30972;
t32255 = t31157 * t30401 - (t30937 * t31492 + t30970 * t31119) * t30972;
t31120 = t31161 * t31037;
t31493 = t30822 * t31677;
t32254 = t31161 * t30400 - (t30948 * t31493 + t30973 * t31120) * t30972;
t32253 = t31161 * t30399 - (t30936 * t31493 + t30970 * t31120) * t30972;
t31121 = t31162 * t31036;
t31494 = t30821 * t31678;
t32252 = t31162 * t30398 - (t30947 * t31494 + t30973 * t31121) * t30972;
t32251 = t31162 * t30397 - (t30935 * t31494 + t30970 * t31121) * t30972;
t31122 = t31163 * t31035;
t31495 = t30820 * t31679;
t32250 = t31163 * t30396 - (t30946 * t31495 + t30973 * t31122) * t30972;
t32249 = t31163 * t30395 - (t30934 * t31495 + t30970 * t31122) * t30972;
t31795 = t30951 * t31025;
t30610 = t30939 * t31392 + t31795;
t31427 = t30951 * t31632;
t30623 = -t30939 * t31764 + t31427;
t32248 = (-t30610 * t30982 + t30623 * t30986) * t30945 - (t30610 * t30986 + t30623 * t30982) * t30933;
t31800 = t30950 * t31023;
t30608 = t30938 * t31398 + t31800;
t31429 = t30950 * t31633;
t30619 = -t30938 * t31769 + t31429;
t32247 = (-t30608 * t30982 + t30619 * t30986) * t30944 - (t30608 * t30986 + t30619 * t30982) * t30932;
t31805 = t30949 * t31021;
t30606 = t30937 * t31404 + t31805;
t31431 = t30949 * t31634;
t30615 = -t30937 * t31774 + t31431;
t32246 = (-t30606 * t30982 + t30615 * t30986) * t30943 - (t30606 * t30986 + t30615 * t30982) * t30931;
t31810 = t30948 * t31007;
t30586 = t30936 * t31410 + t31810;
t31433 = t30948 * t31641;
t30599 = -t30936 * t31779 + t31433;
t32245 = (-t30586 * t30982 + t30599 * t30986) * t30942 - (t30586 * t30986 + t30599 * t30982) * t30930;
t31815 = t30947 * t31005;
t30584 = t30935 * t31416 + t31815;
t31435 = t30947 * t31642;
t30595 = -t30935 * t31784 + t31435;
t32244 = (-t30584 * t30982 + t30595 * t30986) * t30941 - (t30584 * t30986 + t30595 * t30982) * t30929;
t31820 = t30946 * t31003;
t30582 = t30934 * t31422 + t31820;
t31437 = t30946 * t31643;
t30591 = -t30934 * t31789 + t31437;
t32243 = (-t30582 * t30982 + t30591 * t30986) * t30940 - (t30582 * t30986 + t30591 * t30982) * t30928;
t32242 = -t30405 * t31395 + (t30825 * t32248 + t30970 * t31251) * t30972;
t32241 = -t30403 * t31401 + (t30824 * t32247 + t30970 * t31253) * t30972;
t32240 = -t30401 * t31407 + (t30823 * t32246 + t30970 * t31255) * t30972;
t32239 = -t30399 * t31413 + (t30822 * t32245 + t30970 * t31257) * t30972;
t32238 = -t30397 * t31419 + (t30821 * t32244 + t30970 * t31259) * t30972;
t32237 = -t30395 * t31425 + (t30820 * t32243 + t30970 * t31261) * t30972;
t32236 = -g(2) * t30936 + g(3) * t30948;
t32235 = -g(2) * t30935 + g(3) * t30947;
t32234 = -g(2) * t30934 + g(3) * t30946;
t30983 = sin(pkin(6));
t30927 = t30983 * pkin(9);
t32233 = t30927 * t32195;
t31331 = t32195 * t30989;
t31389 = t30962 * t31679;
t30189 = t30956 * t31163 + t31389;
t30987 = cos(pkin(6));
t30921 = pkin(9) * t30987 + pkin(8);
t32170 = pkin(3) * t30921;
t30159 = t30189 * t32170;
t31762 = t30962 * t30989;
t30473 = -t30956 * t31964 + t31762;
t31596 = pkin(2) * t30927;
t30974 = t30987 ^ 2;
t31053 = pkin(9) ^ 2;
t30896 = pkin(3) ^ 2 + t30974 * t31053 - t31053;
t31002 = sin(qJ(3,6));
t31874 = t30896 * t31002;
t32232 = t30473 * (t31596 - t31874) + (t30473 * t31874 - t30159) * t30975 + t30159;
t31387 = t30963 * t31678;
t30191 = t30957 * t31162 + t31387;
t30160 = t30191 * t32170;
t31761 = t30963 * t30989;
t30474 = -t30957 * t31963 + t31761;
t31004 = sin(qJ(3,5));
t31873 = t30896 * t31004;
t32231 = t30474 * (t31596 - t31873) + (t30474 * t31873 - t30160) * t30975 + t30160;
t31385 = t30964 * t31677;
t30193 = t30958 * t31161 + t31385;
t30161 = t30193 * t32170;
t31760 = t30964 * t30989;
t30475 = -t30958 * t31962 + t31760;
t31006 = sin(qJ(3,4));
t31872 = t30896 * t31006;
t32230 = t30475 * (t31596 - t31872) + (t30475 * t31872 - t30161) * t30975 + t30161;
t31383 = t30965 * t31670;
t30195 = t30959 * t31157 + t31383;
t30162 = t30195 * t32170;
t31759 = t30965 * t30989;
t30476 = -t30959 * t31961 + t31759;
t31020 = sin(qJ(3,3));
t31871 = t30896 * t31020;
t32229 = t30476 * (t31596 - t31871) + (t30476 * t31871 - t30162) * t30975 + t30162;
t31381 = t30966 * t31669;
t30197 = t30960 * t31156 + t31381;
t30163 = t30197 * t32170;
t31758 = t30966 * t30989;
t30477 = -t30960 * t31960 + t31758;
t31022 = sin(qJ(3,2));
t31870 = t30896 * t31022;
t32228 = t30477 * (t31596 - t31870) + (t30477 * t31870 - t30163) * t30975 + t30163;
t31379 = t30967 * t31668;
t30199 = t30961 * t31155 + t31379;
t30164 = t30199 * t32170;
t31757 = t30967 * t30989;
t30478 = -t30961 * t31959 + t31757;
t31024 = sin(qJ(3,1));
t31869 = t30896 * t31024;
t32227 = t30478 * (t31596 - t31869) + (t30478 * t31869 - t30164) * t30975 + t30164;
t31557 = t30921 * t30927;
t31859 = t30921 * t31024;
t32177 = pkin(3) * t30478;
t32226 = ((t30199 * t31859 - t32177) * t30975 + t32177) * t30927 - (-pkin(2) * t32177 + t30199 * t31557) * t31024;
t31860 = t30921 * t31022;
t32178 = pkin(3) * t30477;
t32225 = ((t30197 * t31860 - t32178) * t30975 + t32178) * t30927 - (-pkin(2) * t32178 + t30197 * t31557) * t31022;
t31861 = t30921 * t31020;
t32179 = pkin(3) * t30476;
t32224 = ((t30195 * t31861 - t32179) * t30975 + t32179) * t30927 - (-pkin(2) * t32179 + t30195 * t31557) * t31020;
t31865 = t30921 * t31006;
t32180 = pkin(3) * t30475;
t32223 = ((t30193 * t31865 - t32180) * t30975 + t32180) * t30927 - (-pkin(2) * t32180 + t30193 * t31557) * t31006;
t31866 = t30921 * t31004;
t32181 = pkin(3) * t30474;
t32222 = ((t30191 * t31866 - t32181) * t30975 + t32181) * t30927 - (-pkin(2) * t32181 + t30191 * t31557) * t31004;
t31867 = t30921 * t31002;
t32182 = pkin(3) * t30473;
t32221 = ((t30189 * t31867 - t32182) * t30975 + t32182) * t30927 - (-pkin(2) * t32182 + t30189 * t31557) * t31002;
t30984 = sin(pkin(5));
t31694 = t30984 * t30985;
t30743 = t30988 * t31643 - t31694;
t31660 = t30988 * t31003;
t31967 = t30743 * t30956;
t32153 = g(1) * t30962;
t30129 = -(-g(2) * t31660 + g(3) * t31967) * t30946 + (g(2) * t31967 + g(3) * t31660) * t30934 + t30743 * t32153;
t31424 = t30956 * t31660;
t31541 = t31003 * t32153;
t30135 = -(g(2) * t30743 + g(3) * t31424) * t30946 + (g(2) * t31424 - g(3) * t30743) * t30934 + t30988 * t31541;
t30557 = g(1) * t30956 + t30962 * t32234;
t30920 = t30989 * t30984;
t31360 = t30988 * t31679;
t32208 = t30928 * (t30129 * t30986 - t30982 * t30135) + t30940 * (t30982 * t30129 + t30135 * t30986) - (t30920 + t31360) * t30557;
t30744 = t30988 * t31642 - t31694;
t31658 = t30988 * t31005;
t31966 = t30744 * t30957;
t32152 = g(1) * t30963;
t30130 = -(-g(2) * t31658 + g(3) * t31966) * t30947 + (g(2) * t31966 + g(3) * t31658) * t30935 + t30744 * t32152;
t31418 = t30957 * t31658;
t31540 = t31005 * t32152;
t30136 = -(g(2) * t30744 + g(3) * t31418) * t30947 + (g(2) * t31418 - g(3) * t30744) * t30935 + t30988 * t31540;
t30558 = g(1) * t30957 + t30963 * t32235;
t31359 = t30988 * t31678;
t32207 = t30929 * (t30130 * t30986 - t30982 * t30136) + t30941 * (t30130 * t30982 + t30136 * t30986) - (t30920 + t31359) * t30558;
t30745 = t30988 * t31641 - t31694;
t31656 = t30988 * t31007;
t31965 = t30745 * t30958;
t32151 = g(1) * t30964;
t30131 = -(-g(2) * t31656 + g(3) * t31965) * t30948 + (g(2) * t31965 + g(3) * t31656) * t30936 + t30745 * t32151;
t31412 = t30958 * t31656;
t31539 = t31007 * t32151;
t30137 = -(g(2) * t30745 + g(3) * t31412) * t30948 + (g(2) * t31412 - g(3) * t30745) * t30936 + t30988 * t31539;
t30559 = g(1) * t30958 + t30964 * t32236;
t31358 = t30988 * t31677;
t32206 = t30930 * (t30131 * t30986 - t30137 * t30982) + t30942 * (t30982 * t30131 + t30137 * t30986) - (t30920 + t31358) * t30559;
t30770 = t30988 * t31634 - t31694;
t31654 = t30988 * t31021;
t31940 = t30770 * t30959;
t30132 = -(-g(2) * t31654 + g(3) * t31940) * t30949 + (g(2) * t31940 + g(3) * t31654) * t30937 + t30770 * t32131;
t31406 = t30959 * t31654;
t31538 = t31021 * t32131;
t30138 = -(g(2) * t30770 + g(3) * t31406) * t30949 + (g(2) * t31406 - g(3) * t30770) * t30937 + t30988 * t31538;
t31357 = t30988 * t31670;
t32205 = t30931 * (t30132 * t30986 - t30138 * t30982) + t30943 * (t30132 * t30982 + t30138 * t30986) - (t30920 + t31357) * t30560;
t30771 = t30988 * t31633 - t31694;
t31652 = t30988 * t31023;
t31939 = t30771 * t30960;
t30133 = -(-g(2) * t31652 + g(3) * t31939) * t30950 + (g(2) * t31939 + g(3) * t31652) * t30938 + t30771 * t32130;
t31400 = t30960 * t31652;
t31537 = t31023 * t32130;
t30139 = -(g(2) * t30771 + g(3) * t31400) * t30950 + (g(2) * t31400 - g(3) * t30771) * t30938 + t30988 * t31537;
t31356 = t30988 * t31669;
t32204 = t30932 * (t30133 * t30986 - t30982 * t30139) + t30944 * (t30982 * t30133 + t30139 * t30986) - (t30920 + t31356) * t30561;
t30772 = t30988 * t31632 - t31694;
t31650 = t30988 * t31025;
t31938 = t30772 * t30961;
t30134 = -(-g(2) * t31650 + g(3) * t31938) * t30951 + (g(2) * t31938 + g(3) * t31650) * t30939 + t30772 * t32129;
t31394 = t30961 * t31650;
t31536 = t31025 * t32129;
t30140 = -(g(2) * t30772 + g(3) * t31394) * t30951 + (g(2) * t31394 - g(3) * t30772) * t30939 + t30988 * t31536;
t31355 = t30988 * t31668;
t32203 = t30933 * (t30134 * t30986 - t30140 * t30982) + t30945 * (t30982 * t30134 + t30140 * t30986) - (t30920 + t31355) * t30562;
t30419 = -t30764 * t30928 + t30773 * t30940;
t31648 = t30989 * t31003;
t30776 = t30982 * t31009 + t30986 * t31648;
t30779 = -t30982 * t31648 + t30986 * t31009;
t30422 = t30776 * t30940 + t30779 * t30928;
t31707 = t30983 * t30988;
t31554 = pkin(9) * t31707;
t31333 = pkin(3) * t31554;
t32196 = -t30896 / 0.2e1;
t32202 = -0.2e1 * t30419 * t31333 - 0.2e1 * t30422 * t32196;
t30420 = -t30765 * t30929 + t30774 * t30941;
t31646 = t30989 * t31005;
t30777 = t30982 * t31011 + t30986 * t31646;
t30780 = -t30982 * t31646 + t30986 * t31011;
t30423 = t30777 * t30941 + t30780 * t30929;
t32201 = -0.2e1 * t30420 * t31333 - 0.2e1 * t30423 * t32196;
t30421 = -t30766 * t30930 + t30775 * t30942;
t31644 = t30989 * t31007;
t30778 = t30982 * t31013 + t30986 * t31644;
t30781 = -t30982 * t31644 + t30986 * t31013;
t30424 = t30778 * t30942 + t30781 * t30930;
t32200 = -0.2e1 * t30421 * t31333 - 0.2e1 * t30424 * t32196;
t30443 = -t30783 * t30931 + t30792 * t30943;
t31639 = t30989 * t31021;
t30795 = t30982 * t31027 + t30986 * t31639;
t30798 = -t30982 * t31639 + t30986 * t31027;
t30446 = t30795 * t30943 + t30798 * t30931;
t32199 = -0.2e1 * t30443 * t31333 - 0.2e1 * t30446 * t32196;
t30444 = -t30784 * t30932 + t30793 * t30944;
t31637 = t30989 * t31023;
t30796 = t30982 * t31029 + t30986 * t31637;
t30799 = -t30982 * t31637 + t30986 * t31029;
t30447 = t30796 * t30944 + t30799 * t30932;
t32198 = -0.2e1 * t30444 * t31333 - 0.2e1 * t30447 * t32196;
t30445 = -t30785 * t30933 + t30794 * t30945;
t31635 = t30989 * t31025;
t30797 = t30982 * t31031 + t30986 * t31635;
t30800 = -t30982 * t31635 + t30986 * t31031;
t30448 = t30797 * t30945 + t30800 * t30933;
t32197 = -0.2e1 * t30445 * t31333 - 0.2e1 * t30448 * t32196;
t32194 = pkin(2) * t31002;
t32193 = pkin(2) * t31004;
t32192 = pkin(2) * t31006;
t32191 = pkin(2) * t31008;
t32190 = pkin(2) * t31010;
t32189 = pkin(2) * t31012;
t32188 = pkin(2) * t31020;
t32187 = pkin(2) * t31022;
t32186 = pkin(2) * t31024;
t32185 = pkin(2) * t31026;
t32184 = pkin(2) * t31028;
t32183 = pkin(2) * t31030;
t31706 = t30983 * t31002;
t30902 = pkin(9) * t31706;
t30884 = 0.2e1 * t30902 + pkin(2);
t32176 = pkin(3) * t30884;
t31705 = t30983 * t31004;
t30904 = pkin(9) * t31705;
t30886 = 0.2e1 * t30904 + pkin(2);
t32175 = pkin(3) * t30886;
t31704 = t30983 * t31006;
t30906 = pkin(9) * t31704;
t30888 = 0.2e1 * t30906 + pkin(2);
t32174 = pkin(3) * t30888;
t31700 = t30983 * t31020;
t30911 = pkin(9) * t31700;
t30890 = 0.2e1 * t30911 + pkin(2);
t32173 = pkin(3) * t30890;
t31699 = t30983 * t31022;
t30913 = pkin(9) * t31699;
t30892 = 0.2e1 * t30913 + pkin(2);
t32172 = pkin(3) * t30892;
t31698 = t30983 * t31024;
t30915 = pkin(9) * t31698;
t30894 = 0.2e1 * t30915 + pkin(2);
t32171 = pkin(3) * t30894;
t32169 = pkin(3) * t30983;
t32168 = pkin(3) * t30989;
t32167 = pkin(3) * t31003;
t32166 = pkin(3) * t31005;
t32165 = pkin(3) * t31007;
t32164 = pkin(3) * t31008;
t32163 = pkin(3) * t31010;
t32162 = pkin(3) * t31012;
t32161 = pkin(3) * t31021;
t32160 = pkin(3) * t31023;
t32159 = pkin(3) * t31025;
t32158 = pkin(3) * t31026;
t32157 = pkin(3) * t31028;
t32156 = pkin(3) * t31030;
t32155 = pkin(9) * t30984;
t32154 = pkin(9) * t30985;
t32150 = g(1) * t30972;
t31732 = t30972 * t31035;
t30542 = t30820 * t30969 - t31732;
t30826 = t30968 * t31047 + t30971 * t31041;
t29892 = t30542 * t31762 + ((-t30542 * t31792 + t30826 * t30986) * t30940 - (t30542 * t31791 + t30826 * t30982) * t30928) * t30985;
t32143 = t29892 * pkin(3);
t31731 = t30972 * t31036;
t30543 = t30821 * t30969 - t31731;
t30827 = t30968 * t31048 + t30971 * t31042;
t29893 = t30543 * t31761 + ((-t30543 * t31787 + t30827 * t30986) * t30941 - (t30543 * t31786 + t30827 * t30982) * t30929) * t30985;
t32142 = t29893 * pkin(3);
t31730 = t30972 * t31037;
t30544 = t30822 * t30969 - t31730;
t30828 = t30968 * t31049 + t30971 * t31043;
t29894 = t30544 * t31760 + ((-t30544 * t31782 + t30828 * t30986) * t30942 - (t30544 * t31781 + t30828 * t30982) * t30930) * t30985;
t32141 = t29894 * pkin(3);
t31729 = t30972 * t31038;
t30545 = t30823 * t30969 - t31729;
t30829 = t30968 * t31050 + t30971 * t31044;
t29895 = t30545 * t31759 + ((-t30545 * t31777 + t30829 * t30986) * t30943 - (t30545 * t31776 + t30829 * t30982) * t30931) * t30985;
t32140 = t29895 * pkin(3);
t31728 = t30972 * t31039;
t30546 = t30824 * t30969 - t31728;
t30830 = t30968 * t31051 + t30971 * t31045;
t29896 = t30546 * t31758 + ((-t30546 * t31772 + t30830 * t30986) * t30944 - (t30546 * t31771 + t30830 * t30982) * t30932) * t30985;
t32139 = t29896 * pkin(3);
t31727 = t30972 * t31040;
t30547 = t30825 * t30969 - t31727;
t30831 = t30968 * t31052 + t30971 * t31046;
t29897 = t30547 * t31757 + ((-t30547 * t31767 + t30831 * t30986) * t30945 - (t30547 * t31766 + t30831 * t30982) * t30933) * t30985;
t32138 = t29897 * pkin(3);
t29910 = -t30826 * t31762 + ((t30542 * t30986 + t30826 * t31792) * t30940 + (-t30542 * t30982 + t30826 * t31791) * t30928) * t30985;
t32137 = t29910 * pkin(3);
t29911 = -t30827 * t31761 + ((t30543 * t30986 + t30827 * t31787) * t30941 + (-t30543 * t30982 + t30827 * t31786) * t30929) * t30985;
t32136 = t29911 * pkin(3);
t29912 = -t30828 * t31760 + ((t30544 * t30986 + t30828 * t31782) * t30942 + (-t30544 * t30982 + t30828 * t31781) * t30930) * t30985;
t32135 = t29912 * pkin(3);
t29913 = -t30829 * t31759 + ((t30545 * t30986 + t30829 * t31777) * t30943 + (-t30545 * t30982 + t30829 * t31776) * t30931) * t30985;
t32134 = t29913 * pkin(3);
t29914 = -t30830 * t31758 + ((t30546 * t30986 + t30830 * t31772) * t30944 + (-t30546 * t30982 + t30830 * t31771) * t30932) * t30985;
t32133 = t29914 * pkin(3);
t29915 = -t30831 * t31757 + ((t30547 * t30986 + t30831 * t31767) * t30945 + (-t30547 * t30982 + t30831 * t31766) * t30933) * t30985;
t32132 = t29915 * pkin(3);
t30885 = t30902 + pkin(2);
t30887 = t30904 + pkin(2);
t30889 = t30906 + pkin(2);
t30891 = t30911 + pkin(2);
t30893 = t30913 + pkin(2);
t30895 = t30915 + pkin(2);
t31693 = t30984 * t30988;
t31481 = t30921 * t31693;
t31275 = pkin(3) * t31481 - t31596;
t31533 = t30896 * t32195;
t30389 = -t31002 * t31533 + t31275;
t31482 = t30896 * t31693;
t31268 = t31002 * t31482;
t31341 = t32195 * t32170;
t30479 = t31268 + t31341;
t30900 = pkin(3) * t31693;
t31531 = t31002 * t32195;
t30509 = t30921 * t31531 + t30900;
t31534 = (-t30974 + 0.1e1) * pkin(9);
t30839 = pkin(2) * t31706 + t31534;
t31342 = -0.2e1 * t30900;
t31793 = (t30988 + 0.1e1) * (t30988 - 0.1e1);
t31588 = 0.2e1 * t31793;
t31595 = pkin(3) * t30927;
t31206 = t31481 * t30927;
t31604 = t31002 * t31206 + pkin(3) * (t30927 + t32194);
t31692 = t30984 * t31003;
t29742 = 0.1e1 / ((t30389 * t31008 + (t30976 * t31588 - t30975) * t31595 + t31604) * t30989 + ((t30479 * t31008 + (t30976 * t31342 + t30509) * t30927) * t31009 + (pkin(9) * t30839 + t30884 * t32164 + t30896 * t30976) * t31692) * t30985);
t30323 = t30542 * t30970 + t30826 * t30973;
t30329 = t30542 * t30973 - t30826 * t30970;
t30050 = -t30323 * t30986 + t30329 * t31792;
t30056 = t30323 * t30982 + t30329 * t31791;
t30058 = t30323 * t31792 + t30329 * t30986;
t30059 = t30323 * t31791 - t30329 * t30982;
t31661 = t30988 * t31002;
t31868 = t30921 * t30984;
t30715 = pkin(3) * t31661 - t31868;
t30533 = t31008 * t31554 - t30715;
t30845 = t30885 + t32164;
t30335 = -t30533 * t31009 + t30845 * t31003;
t32001 = (t30533 * t31003 + t30845 * t31009) * t30989;
t32128 = (-((t30058 * t30928 - t30059 * t30940) * t30946 + (-t30050 * t30928 + t30056 * t30940) * t30934) * t32001 + ((-t30058 * t30940 - t30059 * t30928) * t30946 + (t30050 * t30940 + t30056 * t30928) * t30934) * t30335) * t29742;
t30391 = -t31006 * t31533 + t31275;
t31266 = t31006 * t31482;
t30481 = t31266 + t31341;
t31528 = t32195 * t31006;
t30511 = t30921 * t31528 + t30900;
t30841 = pkin(2) * t31704 + t31534;
t31602 = t31006 * t31206 + pkin(3) * (t30927 + t32192);
t31690 = t30984 * t31007;
t29744 = 0.1e1 / ((t30391 * t31012 + (t30978 * t31588 - t30975) * t31595 + t31602) * t30989 + ((t30481 * t31012 + (t30978 * t31342 + t30511) * t30927) * t31013 + (pkin(9) * t30841 + t30888 * t32162 + t30896 * t30978) * t31690) * t30985);
t30325 = t30544 * t30970 + t30828 * t30973;
t30331 = t30544 * t30973 - t30828 * t30970;
t30061 = t30325 * t31782 + t30331 * t30986;
t30062 = t30325 * t31781 - t30331 * t30982;
t30068 = -t30325 * t30986 + t30331 * t31782;
t30069 = t30325 * t30982 + t30331 * t31781;
t31657 = t30988 * t31006;
t30717 = pkin(3) * t31657 - t31868;
t30535 = t31012 * t31554 - t30717;
t30847 = t30889 + t32162;
t30337 = -t30535 * t31013 + t30847 * t31007;
t31999 = (t30535 * t31007 + t30847 * t31013) * t30989;
t32127 = (-((t30061 * t30930 - t30062 * t30942) * t30948 + t30936 * (-t30068 * t30930 + t30069 * t30942)) * t31999 + ((-t30061 * t30942 - t30062 * t30930) * t30948 + t30936 * (t30068 * t30942 + t30069 * t30930)) * t30337) * t29744;
t30390 = -t31004 * t31533 + t31275;
t31267 = t31004 * t31482;
t30480 = t31267 + t31341;
t31529 = t32195 * t31004;
t30510 = t30921 * t31529 + t30900;
t30840 = pkin(2) * t31705 + t31534;
t31603 = t31004 * t31206 + pkin(3) * (t30927 + t32193);
t31691 = t30984 * t31005;
t29743 = 0.1e1 / ((t30390 * t31010 + (t30977 * t31588 - t30975) * t31595 + t31603) * t30989 + ((t30480 * t31010 + (t30977 * t31342 + t30510) * t30927) * t31011 + (pkin(9) * t30840 + t30886 * t32163 + t30896 * t30977) * t31691) * t30985);
t30324 = t30543 * t30970 + t30827 * t30973;
t30330 = t30543 * t30973 - t30827 * t30970;
t30048 = t30324 * t31787 + t30330 * t30986;
t30051 = -t30324 * t30986 + t30330 * t31787;
t30060 = t30324 * t31786 - t30330 * t30982;
t30067 = t30324 * t30982 + t30330 * t31786;
t31659 = t30988 * t31004;
t30716 = pkin(3) * t31659 - t31868;
t30534 = t31010 * t31554 - t30716;
t30846 = t30887 + t32163;
t30336 = -t30534 * t31011 + t30846 * t31005;
t32000 = (t30534 * t31005 + t30846 * t31011) * t30989;
t32126 = (-((t30048 * t30929 - t30060 * t30941) * t30947 + (-t30051 * t30929 + t30067 * t30941) * t30935) * t32000 + t30336 * ((-t30048 * t30941 - t30060 * t30929) * t30947 + (t30051 * t30941 + t30067 * t30929) * t30935)) * t29743;
t30392 = -t31020 * t31533 + t31275;
t31265 = t31020 * t31482;
t30482 = t31265 + t31341;
t31530 = t31020 * t32195;
t30530 = t30921 * t31530 + t30900;
t30848 = pkin(2) * t31700 + t31534;
t31601 = t31020 * t31206 + pkin(3) * (t30927 + t32188);
t31689 = t30984 * t31021;
t29766 = 0.1e1 / ((t30392 * t31026 + (t30979 * t31588 - t30975) * t31595 + t31601) * t30989 + ((t30482 * t31026 + (t30979 * t31342 + t30530) * t30927) * t31027 + (pkin(9) * t30848 + t30890 * t32158 + t30896 * t30979) * t31689) * t30985);
t30326 = t30545 * t30970 + t30829 * t30973;
t30332 = t30545 * t30973 - t30829 * t30970;
t30049 = t30326 * t31777 + t30332 * t30986;
t30052 = -t30326 * t30986 + t30332 * t31777;
t30055 = t30326 * t31776 - t30332 * t30982;
t30070 = t30326 * t30982 + t30332 * t31776;
t31655 = t30988 * t31020;
t30721 = pkin(3) * t31655 - t31868;
t30539 = t31026 * t31554 - t30721;
t30854 = t30891 + t32158;
t30371 = -t30539 * t31027 + t30854 * t31021;
t31998 = (t30539 * t31021 + t30854 * t31027) * t30989;
t32125 = (-((t30049 * t30931 - t30055 * t30943) * t30949 + t30937 * (-t30052 * t30931 + t30070 * t30943)) * t31998 + ((-t30049 * t30943 - t30055 * t30931) * t30949 + t30937 * (t30052 * t30943 + t30070 * t30931)) * t30371) * t29766;
t30393 = -t31022 * t31533 + t31275;
t31264 = t31022 * t31482;
t30483 = t31264 + t31341;
t31527 = t32195 * t31022;
t30531 = t30921 * t31527 + t30900;
t30849 = pkin(2) * t31699 + t31534;
t31600 = t31022 * t31206 + pkin(3) * (t30927 + t32187);
t31688 = t30984 * t31023;
t29767 = 0.1e1 / ((t30393 * t31028 + (t30980 * t31588 - t30975) * t31595 + t31600) * t30989 + ((t30483 * t31028 + (t30980 * t31342 + t30531) * t30927) * t31029 + (pkin(9) * t30849 + t30892 * t32157 + t30896 * t30980) * t31688) * t30985);
t30327 = t30546 * t30970 + t30830 * t30973;
t30333 = t30546 * t30973 - t30830 * t30970;
t30053 = -t30327 * t30986 + t30333 * t31772;
t30063 = t30327 * t31772 + t30333 * t30986;
t30064 = t30327 * t31771 - t30333 * t30982;
t30071 = t30327 * t30982 + t30333 * t31771;
t31653 = t30988 * t31022;
t30722 = pkin(3) * t31653 - t31868;
t30540 = t31028 * t31554 - t30722;
t30855 = t30893 + t32157;
t30372 = -t30540 * t31029 + t30855 * t31023;
t31997 = (t30540 * t31023 + t30855 * t31029) * t30989;
t32124 = (-((t30063 * t30932 - t30064 * t30944) * t30950 + (-t30053 * t30932 + t30071 * t30944) * t30938) * t31997 + t30372 * ((-t30063 * t30944 - t30064 * t30932) * t30950 + t30938 * (t30053 * t30944 + t30071 * t30932))) * t29767;
t30394 = -t31024 * t31533 + t31275;
t31263 = t31024 * t31482;
t30484 = t31263 + t31341;
t31526 = t32195 * t31024;
t30532 = t30921 * t31526 + t30900;
t30850 = pkin(2) * t31698 + t31534;
t31599 = t31024 * t31206 + pkin(3) * (t30927 + t32186);
t31687 = t30984 * t31025;
t29768 = 0.1e1 / ((t30394 * t31030 + (t30981 * t31588 - t30975) * t31595 + t31599) * t30989 + ((t30484 * t31030 + (t30981 * t31342 + t30532) * t30927) * t31031 + (pkin(9) * t30850 + t30894 * t32156 + t30896 * t30981) * t31687) * t30985);
t30328 = t30547 * t30970 + t30831 * t30973;
t30334 = t30547 * t30973 - t30831 * t30970;
t30054 = -t30328 * t30986 + t30334 * t31767;
t30057 = t30328 * t30982 + t30334 * t31766;
t30065 = t30328 * t31767 + t30334 * t30986;
t30066 = t30328 * t31766 - t30334 * t30982;
t31651 = t30988 * t31024;
t30723 = pkin(3) * t31651 - t31868;
t30541 = t31030 * t31554 - t30723;
t30856 = t30895 + t32156;
t30373 = -t30541 * t31031 + t30856 * t31025;
t31996 = (t30541 * t31025 + t30856 * t31031) * t30989;
t32123 = (-((t30065 * t30933 - t30066 * t30945) * t30951 + (-t30054 * t30933 + t30057 * t30945) * t30939) * t31996 + t30373 * ((-t30065 * t30945 - t30066 * t30933) * t30951 + (t30054 * t30945 + t30057 * t30933) * t30939)) * t29768;
t31754 = t30969 * t31035;
t31916 = t30820 * t30972;
t30569 = t31754 + t31916;
t31853 = t30934 * t30956;
t30117 = (-t30970 * t31732 + t30395) * t30962 - t30569 * t31853;
t29968 = t30117 * t30982 + t30569 * t31821;
t29976 = t30117 * t30986 - t30569 * t31822;
t32122 = ((-t29968 * t30928 + t29976 * t30940) * t32001 - (t29968 * t30940 + t29976 * t30928) * t30335) * t29742;
t31823 = t30946 * t30956;
t30118 = (-t30973 * t31732 + t30396) * t30962 - t30569 * t31823;
t29964 = -t30118 * t30982 + t30569 * t31851;
t29977 = t30118 * t30986 + t30569 * t31852;
t32121 = ((t29964 * t30928 + t29977 * t30940) * t32001 - (-t29964 * t30940 + t29977 * t30928) * t30335) * t29742;
t31752 = t30969 * t31037;
t31910 = t30822 * t30972;
t30571 = t31752 + t31910;
t31813 = t30948 * t30958;
t30122 = (-t30973 * t31730 + t30400) * t30964 - t30571 * t31813;
t29973 = -t30122 * t30982 + t30571 * t31841;
t29981 = t30122 * t30986 + t30571 * t31842;
t32120 = ((t29973 * t30930 + t29981 * t30942) * t31999 - (-t29973 * t30942 + t29981 * t30930) * t30337) * t29744;
t31753 = t30969 * t31036;
t31913 = t30821 * t30972;
t30570 = t31753 + t31913;
t31848 = t30935 * t30957;
t30119 = (-t30970 * t31731 + t30397) * t30963 - t30570 * t31848;
t29972 = t30119 * t30982 + t30570 * t31816;
t29978 = t30119 * t30986 - t30570 * t31817;
t32119 = ((-t29972 * t30929 + t29978 * t30941) * t32000 - t30336 * (t29972 * t30941 + t29978 * t30929)) * t29743;
t31818 = t30947 * t30957;
t30120 = (-t30973 * t31731 + t30398) * t30963 - t30570 * t31818;
t29971 = -t30120 * t30982 + t30570 * t31846;
t29979 = t30120 * t30986 + t30570 * t31847;
t32118 = ((t29971 * t30929 + t29979 * t30941) * t32000 - (-t29971 * t30941 + t29979 * t30929) * t30336) * t29743;
t31843 = t30936 * t30958;
t30121 = (-t30970 * t31730 + t30399) * t30964 - t30571 * t31843;
t29974 = t30121 * t30982 + t30571 * t31811;
t29980 = t30121 * t30986 - t30571 * t31812;
t32117 = ((-t29974 * t30930 + t29980 * t30942) * t31999 - (t29974 * t30942 + t29980 * t30930) * t30337) * t29744;
t31751 = t30969 * t31038;
t31907 = t30823 * t30972;
t30572 = t31751 + t31907;
t30124 = (-t30973 * t31729 + t30402) * t30965 - t30572 * t31808;
t29965 = -t30124 * t30982 + t30572 * t31836;
t29983 = t30124 * t30986 + t30572 * t31837;
t32116 = ((t29965 * t30931 + t29983 * t30943) * t31998 - t30371 * (-t29965 * t30943 + t29983 * t30931)) * t29766;
t31750 = t30969 * t31039;
t31904 = t30824 * t30972;
t30573 = t31750 + t31904;
t30125 = (-t30970 * t31728 + t30403) * t30966 - t30573 * t31833;
t29970 = t30125 * t30982 + t30573 * t31801;
t29984 = t30125 * t30986 - t30573 * t31802;
t32115 = ((-t29970 * t30932 + t29984 * t30944) * t31997 - t30372 * (t29970 * t30944 + t29984 * t30932)) * t29767;
t31749 = t30969 * t31040;
t31901 = t30825 * t30972;
t30574 = t31749 + t31901;
t30127 = (-t30970 * t31727 + t30405) * t30967 - t30574 * t31828;
t29975 = t30127 * t30982 + t30574 * t31796;
t29986 = t30127 * t30986 - t30574 * t31797;
t32114 = ((-t29975 * t30933 + t29986 * t30945) * t31996 - (t29975 * t30945 + t29986 * t30933) * t30373) * t29768;
t30123 = (-t30970 * t31729 + t30401) * t30965 - t30572 * t31838;
t29969 = t30123 * t30982 + t30572 * t31806;
t29982 = t30123 * t30986 - t30572 * t31807;
t32113 = ((-t29969 * t30931 + t29982 * t30943) * t31998 - (t29969 * t30943 + t29982 * t30931) * t30371) * t29766;
t30126 = (-t30973 * t31728 + t30404) * t30966 - t30573 * t31803;
t29966 = -t30126 * t30982 + t30573 * t31831;
t29985 = t30126 * t30986 + t30573 * t31832;
t32112 = ((t29966 * t30932 + t29985 * t30944) * t31997 - (-t29966 * t30944 + t29985 * t30932) * t30372) * t29767;
t30128 = (-t30973 * t31727 + t30406) * t30967 - t30574 * t31798;
t29967 = -t30128 * t30982 + t30574 * t31826;
t29987 = t30128 * t30986 + t30574 * t31827;
t32111 = ((t29967 * t30933 + t29987 * t30945) * t31996 - t30373 * (-t29967 * t30945 + t29987 * t30933)) * t29768;
t30551 = -t30956 * t32234 + t32153;
t30857 = g(2) * t30946 + g(3) * t30934;
t30377 = t30551 * t30986 + t30857 * t30982;
t30383 = t30551 * t30982 - t30857 * t30986;
t29925 = -t30557 * t30985 + (t30377 * t30928 + t30383 * t30940) * t30989;
t30099 = t30377 * t30940 - t30383 * t30928;
t29748 = t29925 * t31009 + t30099 * t31003;
t31330 = -t29925 * t31003 + t30099 * t31009;
t29670 = t29748 * t31008 + t31330 * t31661;
t30801 = t30989 * t31481;
t30908 = pkin(2) * t31692;
t31532 = t30921 * t32195;
t30296 = t30801 + (t31009 * t31532 + t30908) * t30985;
t30626 = t30984 * t31360 - t31331;
t31483 = t30896 * t31694;
t30718 = t31003 * t31483;
t31555 = t30985 * t30927;
t31197 = 0.2e1 * pkin(3) * t30984 * t31555;
t30802 = t31003 * t31197;
t30899 = t30989 * t31596;
t30925 = pkin(2) * t32168;
t31284 = (t30987 + 0.1e1) * (t30987 - 0.1e1) * t32155;
t31205 = t31003 * t31284;
t31535 = -0.2e1 * t31595;
t29724 = 0.1e1 / ((t30626 * t31535 + t30718) * t30976 + ((t30626 * t30896 + t30802) * t31002 - t30899 + pkin(3) * t30296) * t31008 + (t30296 * t30927 + t30925) * t31002 + (t30626 * t32169 - t30985 * t31205) * pkin(9));
t32110 = t29670 * t29724;
t30552 = -t30957 * t32235 + t32152;
t30858 = g(2) * t30947 + g(3) * t30935;
t30378 = t30552 * t30986 + t30858 * t30982;
t30384 = t30552 * t30982 - t30858 * t30986;
t29926 = -t30558 * t30985 + (t30378 * t30929 + t30384 * t30941) * t30989;
t30100 = t30378 * t30941 - t30384 * t30929;
t29750 = t29926 * t31011 + t30100 * t31005;
t31329 = -t29926 * t31005 + t30100 * t31011;
t29671 = t29750 * t31010 + t31329 * t31659;
t30909 = pkin(2) * t31691;
t30297 = t30801 + (t31011 * t31532 + t30909) * t30985;
t30627 = t30984 * t31359 - t31331;
t30719 = t31005 * t31483;
t30803 = t31005 * t31197;
t31204 = t31005 * t31284;
t29725 = 0.1e1 / ((t30627 * t31535 + t30719) * t30977 + ((t30627 * t30896 + t30803) * t31004 - t30899 + pkin(3) * t30297) * t31010 + (t30297 * t30927 + t30925) * t31004 + (t30627 * t32169 - t30985 * t31204) * pkin(9));
t32109 = t29671 * t29725;
t30553 = -t30958 * t32236 + t32151;
t30859 = g(2) * t30948 + g(3) * t30936;
t30379 = t30553 * t30986 + t30859 * t30982;
t30385 = t30553 * t30982 - t30859 * t30986;
t29927 = -t30559 * t30985 + (t30379 * t30930 + t30385 * t30942) * t30989;
t30101 = t30379 * t30942 - t30385 * t30930;
t29752 = t29927 * t31013 + t30101 * t31007;
t31328 = -t29927 * t31007 + t30101 * t31013;
t29672 = t29752 * t31012 + t31328 * t31657;
t30910 = pkin(2) * t31690;
t30298 = t30801 + (t31013 * t31532 + t30910) * t30985;
t30628 = t30984 * t31358 - t31331;
t30720 = t31007 * t31483;
t30804 = t31007 * t31197;
t31203 = t31007 * t31284;
t29726 = 0.1e1 / ((t30628 * t31535 + t30720) * t30978 + ((t30628 * t30896 + t30804) * t31006 - t30899 + pkin(3) * t30298) * t31012 + (t30298 * t30927 + t30925) * t31006 + (t30628 * t32169 - t30985 * t31203) * pkin(9));
t32108 = t29672 * t29726;
t29673 = t30988 * t31008 * t31330 - t29748 * t31002;
t32107 = t29673 * t29724;
t29674 = t30988 * t31010 * t31329 - t29750 * t31004;
t32106 = t29674 * t29725;
t29675 = t30988 * t31012 * t31328 - t29752 * t31006;
t32105 = t29675 * t29726;
t29757 = t29928 * t31027 - t31021 * t32293;
t29676 = -t29763 * t30988 * t31026 - t29757 * t31020;
t30917 = pkin(2) * t31689;
t30299 = t30801 + (t31027 * t31532 + t30917) * t30985;
t30629 = t30984 * t31357 - t31331;
t30727 = t31021 * t31483;
t30805 = t31021 * t31197;
t31202 = t31021 * t31284;
t29727 = 0.1e1 / ((t30629 * t31535 + t30727) * t30979 + ((t30629 * t30896 + t30805) * t31020 - t30899 + pkin(3) * t30299) * t31026 + (t30299 * t30927 + t30925) * t31020 + (t30629 * t32169 - t30985 * t31202) * pkin(9));
t32104 = t29676 * t29727;
t29677 = t29757 * t31026 - t29763 * t31655;
t32103 = t29677 * t29727;
t29759 = t29929 * t31029 - t31023 * t32292;
t29678 = t29759 * t31028 - t29764 * t31653;
t30918 = pkin(2) * t31688;
t30300 = t30801 + (t31029 * t31532 + t30918) * t30985;
t30630 = t30984 * t31356 - t31331;
t30728 = t31023 * t31483;
t30806 = t31023 * t31197;
t31201 = t31023 * t31284;
t29728 = 0.1e1 / ((t30630 * t31535 + t30728) * t30980 + ((t30630 * t30896 + t30806) * t31022 - t30899 + pkin(3) * t30300) * t31028 + (t30300 * t30927 + t30925) * t31022 + (t30630 * t32169 - t30985 * t31201) * pkin(9));
t32102 = t29678 * t29728;
t29679 = -t29764 * t30988 * t31028 - t29759 * t31022;
t32101 = t29679 * t29728;
t29761 = t29930 * t31031 - t31025 * t32291;
t29680 = t29761 * t31030 - t29765 * t31651;
t30919 = pkin(2) * t31687;
t30301 = t30801 + (t31031 * t31532 + t30919) * t30985;
t30631 = t30984 * t31355 - t31331;
t30729 = t31025 * t31483;
t30807 = t31025 * t31197;
t31200 = t31025 * t31284;
t29729 = 0.1e1 / ((t30631 * t31535 + t30729) * t30981 + ((t30631 * t30896 + t30807) * t31024 - t30899 + pkin(3) * t30301) * t31030 + (t30301 * t30927 + t30925) * t31024 + (t30631 * t32169 - t30985 * t31200) * pkin(9));
t32100 = t29680 * t29729;
t29681 = -t29765 * t30988 * t31030 - t29761 * t31024;
t32099 = t29681 * t29729;
t30752 = -t30928 * t30982 + t30940 * t30986;
t30408 = t30746 * t31009 + t30752 * t31648;
t30901 = t30983 * t32168;
t31297 = t30975 * t30901;
t31132 = (t30901 - t31297) * pkin(9);
t31138 = (-t30746 * t31003 + t30752 * t31643) * t30988 - t30752 * t31694;
t31207 = t30896 * t31331;
t31864 = t30921 * t31009;
t31219 = t30975 * t31864 + t30908 - t31864;
t30897 = pkin(9) * t30901;
t31597 = 0.2e1 * pkin(9) * t31297 - 0.2e1 * t30897;
t31598 = pkin(3) * t30801 - t30899;
t31605 = t30989 * t31206 + t30925;
t32098 = 0.1e1 / ((t30718 + t31597) * t30976 + ((t30802 - t31207) * t31002 + t31598) * t31008 + t31605 * t31002 + t31132 + ((pkin(3) * t31219 + t31009 * t31268) * t31008 + (-t31205 + (t31219 * t31002 + (-0.2e1 * t30976 + 0.1e1) * t31009 * t30900) * t30983) * pkin(9)) * t30985) * ((pkin(3) * t31138 + t30408 * t30927) * t31008 + t31002 * (-pkin(3) * t30408 + t30927 * t31138));
t30753 = -t30929 * t30982 + t30941 * t30986;
t30410 = t30747 * t31011 + t30753 * t31646;
t31137 = (-t30747 * t31005 + t30753 * t31642) * t30988 - t30753 * t31694;
t31863 = t30921 * t31011;
t31218 = t30975 * t31863 + t30909 - t31863;
t32097 = 0.1e1 / ((t30719 + t31597) * t30977 + ((t30803 - t31207) * t31004 + t31598) * t31010 + t31605 * t31004 + t31132 + ((pkin(3) * t31218 + t31011 * t31267) * t31010 + (-t31204 + (t31218 * t31004 + (-0.2e1 * t30977 + 0.1e1) * t31011 * t30900) * t30983) * pkin(9)) * t30985) * ((pkin(3) * t31137 + t30410 * t30927) * t31010 + t31004 * (-pkin(3) * t30410 + t30927 * t31137));
t30754 = -t30930 * t30982 + t30942 * t30986;
t30412 = t30748 * t31013 + t30754 * t31644;
t31136 = (-t30748 * t31007 + t30754 * t31641) * t30988 - t30754 * t31694;
t31862 = t30921 * t31013;
t31217 = t30975 * t31862 + t30910 - t31862;
t32096 = 0.1e1 / ((t30720 + t31597) * t30978 + ((t30804 - t31207) * t31006 + t31598) * t31012 + t31605 * t31006 + t31132 + ((pkin(3) * t31217 + t31013 * t31266) * t31012 + (-t31203 + (t31217 * t31006 + (-0.2e1 * t30978 + 0.1e1) * t31013 * t30900) * t30983) * pkin(9)) * t30985) * ((pkin(3) * t31136 + t30412 * t30927) * t31012 + t31006 * (-pkin(3) * t30412 + t30927 * t31136));
t30755 = -t30931 * t30982 + t30943 * t30986;
t30426 = t30749 * t31027 + t30755 * t31639;
t31135 = (-t30749 * t31021 + t30755 * t31634) * t30988 - t30755 * t31694;
t31858 = t30921 * t31027;
t31216 = t30975 * t31858 + t30917 - t31858;
t32095 = 0.1e1 / ((t30727 + t31597) * t30979 + ((t30805 - t31207) * t31020 + t31598) * t31026 + t31605 * t31020 + t31132 + ((pkin(3) * t31216 + t31027 * t31265) * t31026 + (-t31202 + (t31216 * t31020 + (-0.2e1 * t30979 + 0.1e1) * t31027 * t30900) * t30983) * pkin(9)) * t30985) * ((pkin(3) * t31135 + t30426 * t30927) * t31026 + t31020 * (-pkin(3) * t30426 + t30927 * t31135));
t30756 = -t30932 * t30982 + t30944 * t30986;
t30428 = t30750 * t31029 + t30756 * t31637;
t31134 = (-t30750 * t31023 + t30756 * t31633) * t30988 - t30756 * t31694;
t31857 = t30921 * t31029;
t31215 = t30975 * t31857 + t30918 - t31857;
t32094 = 0.1e1 / ((t30728 + t31597) * t30980 + ((t30806 - t31207) * t31022 + t31598) * t31028 + t31605 * t31022 + t31132 + ((pkin(3) * t31215 + t31029 * t31264) * t31028 + (-t31201 + (t31215 * t31022 + (-0.2e1 * t30980 + 0.1e1) * t31029 * t30900) * t30983) * pkin(9)) * t30985) * ((pkin(3) * t31134 + t30428 * t30927) * t31028 + t31022 * (-pkin(3) * t30428 + t30927 * t31134));
t30757 = -t30933 * t30982 + t30945 * t30986;
t30430 = t30751 * t31031 + t30757 * t31635;
t31133 = (-t30751 * t31025 + t30757 * t31632) * t30988 - t30757 * t31694;
t31856 = t30921 * t31031;
t31214 = t30975 * t31856 + t30919 - t31856;
t32093 = 0.1e1 / ((t30729 + t31597) * t30981 + ((t30807 - t31207) * t31024 + t31598) * t31030 + t31605 * t31024 + t31132 + ((pkin(3) * t31214 + t31031 * t31263) * t31030 + (-t31200 + (t31214 * t31024 + (-0.2e1 * t30981 + 0.1e1) * t31031 * t30900) * t30983) * pkin(9)) * t30985) * ((pkin(3) * t31133 + t30430 * t30927) * t31030 + t31024 * (-pkin(3) * t30430 + t30927 * t31133));
t30871 = t30921 * t32168;
t31563 = pkin(3) * t31679;
t30842 = t30921 * t31563;
t31649 = t30989 * t31002;
t31213 = -t30896 * t31649 + t30842;
t31354 = t31002 * t31679;
t31587 = t30884 * t32167;
t30012 = ((t30896 * t31354 + t30871) * t30988 + t30985 * t31587) * t30984 + t31213 * t30975 - t30899 - t31213;
t31226 = t31595 * t31793;
t30739 = t30989 * t31226;
t31703 = t30983 * t31009;
t31550 = pkin(9) * t31703;
t31283 = t30988 * t31550;
t30341 = (pkin(3) * t31283 + t31003 * t32196) * t31694 - t30739;
t30290 = t30341 * t31594;
t31293 = t30921 * t31550;
t30632 = -t30985 * t31293 + t30925;
t31556 = t30975 * t30927;
t31684 = t30985 * t31003;
t31232 = ((t30921 * t31649 + t31563) * t31707 + t30839 * t31684) * t32155 + (t30921 * t31354 - t32168) * t31556 + t30632 * t31002 + t30897;
t32092 = 0.1e1 / (t30012 * t31008 - t30290 + t31232) * t30557;
t31562 = pkin(3) * t31678;
t30843 = t30921 * t31562;
t31647 = t30989 * t31004;
t31212 = -t30896 * t31647 + t30843;
t31353 = t31004 * t31678;
t31586 = t30886 * t32166;
t30013 = ((t30896 * t31353 + t30871) * t30988 + t30985 * t31586) * t30984 + t31212 * t30975 - t30899 - t31212;
t31702 = t30983 * t31011;
t31549 = pkin(9) * t31702;
t31282 = t30988 * t31549;
t30342 = (pkin(3) * t31282 + t31005 * t32196) * t31694 - t30739;
t30291 = t30342 * t31593;
t31292 = t30921 * t31549;
t30634 = -t30985 * t31292 + t30925;
t31682 = t30985 * t31005;
t31231 = ((t30921 * t31647 + t31562) * t31707 + t30840 * t31682) * t32155 + (t30921 * t31353 - t32168) * t31556 + t30634 * t31004 + t30897;
t32091 = 0.1e1 / (t30013 * t31010 - t30291 + t31231) * t30558;
t31561 = pkin(3) * t31677;
t30844 = t30921 * t31561;
t31645 = t30989 * t31006;
t31211 = -t30896 * t31645 + t30844;
t31352 = t31006 * t31677;
t31585 = t30888 * t32165;
t30014 = ((t30896 * t31352 + t30871) * t30988 + t30985 * t31585) * t30984 + t31211 * t30975 - t30899 - t31211;
t31701 = t30983 * t31013;
t31548 = pkin(9) * t31701;
t31281 = t30988 * t31548;
t30343 = (pkin(3) * t31281 + t31007 * t32196) * t31694 - t30739;
t30292 = t30343 * t31592;
t31291 = t30921 * t31548;
t30636 = -t30985 * t31291 + t30925;
t31680 = t30985 * t31007;
t31230 = ((t30921 * t31645 + t31561) * t31707 + t30841 * t31680) * t32155 + (t30921 * t31352 - t32168) * t31556 + t30636 * t31006 + t30897;
t32090 = 0.1e1 / (t30014 * t31012 - t30292 + t31230) * t30559;
t31560 = pkin(3) * t31670;
t30851 = t30921 * t31560;
t31640 = t30989 * t31020;
t31210 = -t30896 * t31640 + t30851;
t31348 = t31020 * t31670;
t31584 = t30890 * t32161;
t30033 = ((t30896 * t31348 + t30871) * t30988 + t30985 * t31584) * t30984 + t31210 * t30975 - t30899 - t31210;
t31697 = t30983 * t31027;
t31544 = pkin(9) * t31697;
t31280 = t30988 * t31544;
t30356 = (pkin(3) * t31280 + t31021 * t32196) * t31694 - t30739;
t30293 = t30356 * t31591;
t31287 = t30921 * t31544;
t30644 = -t30985 * t31287 + t30925;
t31675 = t30985 * t31021;
t31229 = ((t30921 * t31640 + t31560) * t31707 + t30848 * t31675) * t32155 + (t30921 * t31348 - t32168) * t31556 + t30644 * t31020 + t30897;
t32089 = 0.1e1 / (t30033 * t31026 - t30293 + t31229) * t30560;
t31559 = pkin(3) * t31669;
t30852 = t30921 * t31559;
t31638 = t30989 * t31022;
t31209 = -t30896 * t31638 + t30852;
t31347 = t31022 * t31669;
t31583 = t30892 * t32160;
t30034 = ((t30896 * t31347 + t30871) * t30988 + t30985 * t31583) * t30984 + t31209 * t30975 - t30899 - t31209;
t31696 = t30983 * t31029;
t31543 = pkin(9) * t31696;
t31279 = t30988 * t31543;
t30357 = (pkin(3) * t31279 + t31023 * t32196) * t31694 - t30739;
t30294 = t30357 * t31590;
t31286 = t30921 * t31543;
t30646 = -t30985 * t31286 + t30925;
t31673 = t30985 * t31023;
t31228 = ((t30921 * t31638 + t31559) * t31707 + t30849 * t31673) * t32155 + (t30921 * t31347 - t32168) * t31556 + t30646 * t31022 + t30897;
t32088 = 0.1e1 / (t30034 * t31028 - t30294 + t31228) * t30561;
t31558 = pkin(3) * t31668;
t30853 = t30921 * t31558;
t31636 = t30989 * t31024;
t31208 = -t30896 * t31636 + t30853;
t31346 = t31024 * t31668;
t31582 = t30894 * t32159;
t30035 = ((t30896 * t31346 + t30871) * t30988 + t30985 * t31582) * t30984 + t31208 * t30975 - t30899 - t31208;
t31695 = t30983 * t31031;
t31542 = pkin(9) * t31695;
t31278 = t30988 * t31542;
t30358 = (pkin(3) * t31278 + t31025 * t32196) * t31694 - t30739;
t30295 = t30358 * t31589;
t31285 = t30921 * t31542;
t30648 = -t30985 * t31285 + t30925;
t31671 = t30985 * t31025;
t31227 = ((t30921 * t31636 + t31558) * t31707 + t30850 * t31671) * t32155 + (t30921 * t31346 - t32168) * t31556 + t30648 * t31024 + t30897;
t32087 = 0.1e1 / (t30035 * t31030 - t30295 + t31227) * t30562;
t32086 = t29724 * t29748;
t32085 = t29724 * t31330;
t32084 = t29725 * t29750;
t32083 = t29725 * t31329;
t32082 = t29726 * t29752;
t32081 = t29726 * t31328;
t32080 = t29727 * t29757;
t32079 = t29727 * t29763;
t32078 = t29728 * t29759;
t32077 = t29728 * t29764;
t32076 = t29729 * t29761;
t32075 = t29729 * t29765;
t31334 = pkin(3) * t31556;
t31553 = t31003 * t30927;
t31957 = t30752 * t30989;
t32074 = 0.1e1 / (-t30290 + (t30389 * t30989 + t30985 * (t30479 * t31009 + t30984 * t31587)) * t31008 + (-t31334 + t31604) * t30989 + (t30509 * t31703 + t30839 * t31692) * t32154) * (((pkin(3) * t31009 + t30988 * t31553) * t31957 + t30746 * (t31283 - t32167)) * t31008 + (-t30715 * t31003 + t30885 * t31009) * t31957 - t30746 * (t30715 * t31009 + t30885 * t31003));
t31552 = t31005 * t30927;
t31955 = t30753 * t30989;
t32073 = 0.1e1 / (-t30291 + (t30390 * t30989 + t30985 * (t30480 * t31011 + t30984 * t31586)) * t31010 + (-t31334 + t31603) * t30989 + (t30510 * t31702 + t30840 * t31691) * t32154) * (((pkin(3) * t31011 + t30988 * t31552) * t31955 + t30747 * (t31282 - t32166)) * t31010 + (-t30716 * t31005 + t30887 * t31011) * t31955 - t30747 * (t30716 * t31011 + t30887 * t31005));
t31551 = t31007 * t30927;
t31953 = t30754 * t30989;
t32072 = 0.1e1 / (-t30292 + (t30391 * t30989 + t30985 * (t30481 * t31013 + t30984 * t31585)) * t31012 + (-t31334 + t31602) * t30989 + (t30511 * t31701 + t30841 * t31690) * t32154) * (((pkin(3) * t31013 + t30988 * t31551) * t31953 + t30748 * (t31281 - t32165)) * t31012 + (-t30717 * t31007 + t30889 * t31013) * t31953 - t30748 * (t30717 * t31013 + t30889 * t31007));
t31547 = t31021 * t30927;
t31951 = t30755 * t30989;
t32071 = 0.1e1 / (-t30293 + (t30392 * t30989 + t30985 * (t30482 * t31027 + t30984 * t31584)) * t31026 + (-t31334 + t31601) * t30989 + (t30530 * t31697 + t30848 * t31689) * t32154) * (((pkin(3) * t31027 + t30988 * t31547) * t31951 + t30749 * (t31280 - t32161)) * t31026 + (-t30721 * t31021 + t30891 * t31027) * t31951 - t30749 * (t30721 * t31027 + t30891 * t31021));
t31546 = t31023 * t30927;
t31949 = t30756 * t30989;
t32070 = 0.1e1 / (-t30294 + (t30393 * t30989 + t30985 * (t30483 * t31029 + t30984 * t31583)) * t31028 + (-t31334 + t31600) * t30989 + (t30531 * t31696 + t30849 * t31688) * t32154) * (((pkin(3) * t31029 + t30988 * t31546) * t31949 + t30750 * (t31279 - t32160)) * t31028 + (-t30722 * t31023 + t30893 * t31029) * t31949 - t30750 * (t30722 * t31029 + t30893 * t31023));
t31545 = t31025 * t30927;
t31947 = t30757 * t30989;
t32069 = 0.1e1 / (-t30295 + (t30394 * t30989 + t30985 * (t30484 * t31031 + t30984 * t31582)) * t31030 + (-t31334 + t31599) * t30989 + (t30532 * t31695 + t30850 * t31687) * t32154) * (((pkin(3) * t31031 + t30988 * t31545) * t31947 + t30751 * (t31278 - t32159)) * t31030 + (-t30723 * t31025 + t30895 * t31031) * t31947 - t30751 * (t30723 * t31031 + t30895 * t31025));
t30344 = t30746 * t31823 + t30752 * t30934;
t30345 = -t30746 * t30934 + t30752 * t31823;
t32068 = t29742 * (-t30335 * t30344 + t30345 * t32001);
t30359 = t30746 * t30946 + t30752 * t31853;
t30365 = t30746 * t31853 - t30752 * t30946;
t32067 = t29742 * (t30335 * t30365 - t30359 * t32001);
t30346 = t30747 * t31818 + t30753 * t30935;
t30347 = -t30747 * t30935 + t30753 * t31818;
t32066 = t29743 * (-t30336 * t30346 + t30347 * t32000);
t30360 = t30747 * t30947 + t30753 * t31848;
t30366 = t30747 * t31848 - t30753 * t30947;
t32065 = t29743 * (t30336 * t30366 - t30360 * t32000);
t30348 = t30748 * t31813 + t30754 * t30936;
t30349 = -t30748 * t30936 + t30754 * t31813;
t32064 = t29744 * (-t30337 * t30348 + t30349 * t31999);
t30361 = t30748 * t30948 + t30754 * t31843;
t30367 = t30748 * t31843 - t30754 * t30948;
t32063 = t29744 * (t30337 * t30367 - t30361 * t31999);
t30350 = t30749 * t31808 + t30755 * t30937;
t30351 = -t30749 * t30937 + t30755 * t31808;
t32062 = t29766 * (-t30350 * t30371 + t30351 * t31998);
t30362 = t30749 * t30949 + t30755 * t31838;
t30368 = t30749 * t31838 - t30755 * t30949;
t32061 = t29766 * (-t30362 * t31998 + t30368 * t30371);
t30352 = t30750 * t31803 + t30756 * t30938;
t30353 = -t30750 * t30938 + t30756 * t31803;
t32060 = t29767 * (-t30352 * t30372 + t30353 * t31997);
t30363 = t30750 * t30950 + t30756 * t31833;
t30369 = t30750 * t31833 - t30756 * t30950;
t32059 = t29767 * (-t30363 * t31997 + t30369 * t30372);
t30354 = t30751 * t31798 + t30757 * t30939;
t30355 = -t30751 * t30939 + t30757 * t31798;
t32058 = t29768 * (-t30354 * t30373 + t30355 * t31996);
t30364 = t30751 * t30951 + t30757 * t31828;
t30370 = t30751 * t31828 - t30757 * t30951;
t32057 = t29768 * (-t30364 * t31996 + t30370 * t30373);
t30497 = t30743 * t30982 + t30986 * t31660;
t31994 = t30497 * t30956;
t30498 = t30744 * t30982 + t30986 * t31658;
t31993 = t30498 * t30957;
t30499 = t30745 * t30982 + t30986 * t31656;
t31992 = t30499 * t30958;
t30506 = t30743 * t30986 - t30982 * t31660;
t31991 = t30506 * t30956;
t30507 = t30744 * t30986 - t30982 * t31658;
t31990 = t30507 * t30957;
t30508 = t30745 * t30986 - t30982 * t31656;
t31989 = t30508 * t30958;
t30518 = t30770 * t30982 + t30986 * t31654;
t31988 = t30518 * t30959;
t30519 = t30771 * t30982 + t30986 * t31652;
t31987 = t30519 * t30960;
t30520 = t30772 * t30982 + t30986 * t31650;
t31986 = t30520 * t30961;
t30527 = t30770 * t30986 - t30982 * t31654;
t31985 = t30527 * t30959;
t30528 = t30771 * t30986 - t30982 * t31652;
t31984 = t30528 * t30960;
t30529 = t30772 * t30986 - t30982 * t31650;
t31983 = t30529 * t30961;
t31982 = t30542 * t30956;
t31981 = t30542 * t30962;
t31980 = t30543 * t30957;
t31979 = t30543 * t30963;
t31978 = t30544 * t30958;
t31977 = t30544 * t30964;
t31976 = t30545 * t30959;
t31975 = t30545 * t30965;
t31974 = t30546 * t30960;
t31973 = t30546 * t30966;
t31972 = t30547 * t30961;
t31971 = t30547 * t30967;
t31958 = t30752 * t30985;
t31956 = t30753 * t30985;
t31954 = t30754 * t30985;
t31952 = t30755 * t30985;
t31950 = t30756 * t30985;
t31948 = t30757 * t30985;
t31934 = t30776 * t30956;
t31933 = t30777 * t30957;
t31932 = t30778 * t30958;
t31931 = t30779 * t30956;
t31930 = t30780 * t30957;
t31929 = t30781 * t30958;
t31922 = t30795 * t30959;
t31921 = t30796 * t30960;
t31920 = t30797 * t30961;
t31919 = t30798 * t30959;
t31918 = t30799 * t30960;
t31917 = t30800 * t30961;
t31898 = t30826 * t30956;
t31897 = t30826 * t30962;
t31896 = t30827 * t30957;
t31895 = t30827 * t30963;
t31894 = t30828 * t30958;
t31893 = t30828 * t30964;
t31892 = t30829 * t30959;
t31891 = t30829 * t30965;
t31890 = t30830 * t30960;
t31889 = t30830 * t30966;
t31888 = t30831 * t30961;
t31887 = t30831 * t30967;
t31886 = t30839 * t30984;
t31885 = t30840 * t30984;
t31884 = t30841 * t30984;
t31883 = t30848 * t30984;
t31882 = t30849 * t30984;
t31881 = t30850 * t30984;
t31880 = t30884 * t30984;
t31879 = t30886 * t30984;
t31878 = t30888 * t30984;
t31877 = t30890 * t30984;
t31876 = t30892 * t30984;
t31875 = t30894 * t30984;
t31849 = t30934 * t31009;
t31844 = t30935 * t31011;
t31839 = t30936 * t31013;
t31834 = t30937 * t31027;
t31829 = t30938 * t31029;
t31824 = t30939 * t31031;
t31819 = t30946 * t31009;
t31814 = t30947 * t31011;
t31809 = t30948 * t31013;
t31804 = t30949 * t31027;
t31799 = t30950 * t31029;
t31794 = t30951 * t31031;
t31788 = t30956 * t31009;
t31783 = t30957 * t31011;
t31778 = t30958 * t31013;
t31773 = t30959 * t31027;
t31768 = t30960 * t31029;
t31763 = t30961 * t31031;
t31756 = t30968 * t30970;
t31755 = t30968 * t30973;
t31748 = t30970 * t30971;
t31747 = t30970 * t30972;
t31734 = t30971 * t30973;
t31733 = t30972 * t30973;
t31714 = t30976 * t30984;
t31713 = t30977 * t30984;
t31712 = t30978 * t30984;
t31711 = t30979 * t30984;
t31710 = t30980 * t30984;
t31709 = t30981 * t30984;
t31685 = t30985 * t31002;
t31683 = t30985 * t31004;
t31681 = t30985 * t31006;
t31676 = t30985 * t31020;
t31674 = t30985 * t31022;
t31672 = t30985 * t31024;
t31625 = t31002 * t31008;
t31624 = t31004 * t31010;
t31623 = t31006 * t31012;
t31622 = t31020 * t31026;
t31620 = t31022 * t31028;
t31618 = t31024 * t31030;
t30926 = pkin(2) * pkin(3) * t30985;
t31581 = t30921 * t32167;
t31580 = t30921 * t32166;
t31579 = t30921 * t32165;
t31578 = t30921 * t32161;
t31577 = t30921 * t32160;
t31576 = t30921 * t32159;
t31575 = pkin(3) * t31964;
t31574 = pkin(3) * t31963;
t31573 = pkin(3) * t31962;
t31572 = pkin(3) * t31961;
t31571 = pkin(3) * t31960;
t31570 = pkin(3) * t31959;
t31569 = pkin(3) * t31958;
t31568 = pkin(3) * t31956;
t31567 = pkin(3) * t31954;
t31566 = pkin(3) * t31952;
t31565 = pkin(3) * t31950;
t31564 = pkin(3) * t31948;
t29607 = t32249 * t30962 + (-t30934 * t31389 + t32243) * t31754 + t32237;
t31525 = t29607 * t31693;
t29609 = t32250 * t30962 + (-t30946 * t31389 - t31183) * t31754 + t32261;
t31524 = t29609 * t31693;
t29611 = t32251 * t30963 + (-t30935 * t31387 + t32244) * t31753 + t32238;
t31523 = t29611 * t31693;
t29613 = t32252 * t30963 + (-t30947 * t31387 - t31181) * t31753 + t32262;
t31522 = t29613 * t31693;
t29615 = t32253 * t30964 + (-t30936 * t31385 + t32245) * t31752 + t32239;
t31521 = t29615 * t31693;
t29617 = t32254 * t30964 + (-t30948 * t31385 - t31179) * t31752 + t32263;
t31520 = t29617 * t31693;
t29622 = t32255 * t30965 + (-t30937 * t31383 + t32246) * t31751 + t32240;
t31519 = t29622 * t31693;
t29624 = t32256 * t30965 + (-t30949 * t31383 - t31177) * t31751 + t32264;
t31518 = t29624 * t31693;
t29626 = t32257 * t30966 + (-t30938 * t31381 + t32247) * t31750 + t32241;
t31517 = t29626 * t31693;
t29628 = t32258 * t30966 + (-t30950 * t31381 - t31175) * t31750 + t32265;
t31516 = t29628 * t31693;
t29630 = t32259 * t30967 + (-t30939 * t31379 + t32248) * t31749 + t32242;
t31515 = t29630 * t31693;
t29632 = t32260 * t30967 + (-t30951 * t31379 - t31173) * t31749 + t32266;
t31514 = t29632 * t31693;
t31513 = t30962 * t32098;
t31512 = t30963 * t32097;
t31511 = t30964 * t32096;
t31510 = t30965 * t32095;
t31509 = t30966 * t32094;
t31508 = t30967 * t32093;
t31507 = t29910 * t31874;
t31506 = t29911 * t31873;
t31505 = t29912 * t31872;
t31504 = t29913 * t31871;
t31503 = t29914 * t31870;
t31502 = t29915 * t31869;
t31501 = t30569 * t31694;
t31500 = t30570 * t31694;
t31499 = t30571 * t31694;
t31498 = t30572 * t31694;
t31497 = t30573 * t31694;
t31496 = t30574 * t31694;
t31489 = t29892 * t31874;
t31488 = t29893 * t31873;
t31487 = t29894 * t31872;
t31486 = t29895 * t31871;
t31485 = t29896 * t31870;
t31484 = t29897 * t31869;
t31480 = t30921 * t31685;
t31479 = t30921 * t31683;
t31478 = t30921 * t31681;
t31477 = t30921 * t31676;
t31476 = t30921 * t31674;
t31475 = t30921 * t31672;
t31474 = t30928 * t31754;
t31472 = t30929 * t31753;
t31470 = t30930 * t31752;
t31468 = t30931 * t31751;
t31466 = t30932 * t31750;
t31464 = t30933 * t31749;
t31462 = t30934 * t31648;
t31460 = t30935 * t31646;
t31458 = t30936 * t31644;
t31456 = t30937 * t31639;
t31454 = t30938 * t31637;
t31452 = t30939 * t31635;
t31450 = t30940 * t31754;
t31448 = t30941 * t31753;
t31446 = t30942 * t31752;
t31444 = t30943 * t31751;
t31442 = t30944 * t31750;
t31440 = t30945 * t31749;
t31438 = t30946 * t31648;
t31436 = t30947 * t31646;
t31434 = t30948 * t31644;
t31432 = t30949 * t31639;
t31430 = t30950 * t31637;
t31428 = t30951 * t31635;
t31426 = t30956 * t31684;
t31423 = t30956 * t31648;
t31420 = t30957 * t31682;
t31417 = t30957 * t31646;
t31414 = t30958 * t31680;
t31411 = t30958 * t31644;
t31408 = t30959 * t31675;
t31405 = t30959 * t31639;
t31402 = t30960 * t31673;
t31399 = t30960 * t31637;
t31396 = t30961 * t31671;
t31393 = t30961 * t31635;
t31390 = t30962 * t31684;
t31388 = t30963 * t31682;
t31386 = t30964 * t31680;
t31384 = t30965 * t31675;
t31382 = t30966 * t31673;
t31380 = t30967 * t31671;
t31378 = t30969 * t31684;
t31377 = t30969 * t31682;
t31376 = t30969 * t31680;
t31375 = t30969 * t31675;
t31374 = t30969 * t31673;
t31373 = t30969 * t31671;
t31340 = t31002 * t30926;
t31339 = t31004 * t30926;
t31338 = t31006 * t30926;
t31337 = t31020 * t30926;
t31336 = t31022 * t30926;
t31335 = t31024 * t30926;
t30898 = pkin(2) * t31555;
t31332 = pkin(3) * t31532;
t31296 = t30921 * t31553;
t31295 = t30921 * t31552;
t31294 = t30921 * t31551;
t31290 = t30921 * t31547;
t31289 = t30921 * t31546;
t31288 = t30921 * t31545;
t31277 = -0.2e1 * t31333;
t31276 = 0.2e1 * t31333;
t31274 = t31684 * t31916;
t31273 = t31682 * t31913;
t31272 = t31680 * t31910;
t31271 = t31675 * t31907;
t31270 = t31673 * t31904;
t31269 = t31671 * t31901;
t31262 = t31035 * t31426;
t31260 = t31036 * t31420;
t31258 = t31037 * t31414;
t31256 = t31038 * t31408;
t31254 = t31039 * t31402;
t31252 = t31040 * t31396;
t31250 = t30969 * t31351;
t31249 = t30969 * t31350;
t31248 = t30969 * t31349;
t31247 = t30969 * t31345;
t31246 = t30969 * t31344;
t31245 = t30969 * t31343;
t31199 = -0.2e1 * t31226;
t31198 = 0.2e1 * t31226;
t31160 = t30776 * t30928 - t30779 * t30940;
t31159 = t30777 * t30929 - t30780 * t30941;
t31158 = t30778 * t30930 - t30781 * t30942;
t31154 = t30795 * t30931 - t30798 * t30943;
t31153 = t30796 * t30932 - t30799 * t30944;
t31152 = t30797 * t30933 - t30800 * t30945;
t30190 = -t30956 * t31160 - t31390;
t31145 = -(t30189 * t31874 + t30473 * t32170) * t30988 + t30190 * t32176;
t30192 = -t30957 * t31159 - t31388;
t31144 = -(t30191 * t31873 + t30474 * t32170) * t30988 + t30192 * t32175;
t30194 = -t30958 * t31158 - t31386;
t31143 = -(t30193 * t31872 + t30475 * t32170) * t30988 + t30194 * t32174;
t30196 = -t30959 * t31154 - t31384;
t31142 = -(t30195 * t31871 + t30476 * t32170) * t30988 + t30196 * t32173;
t30198 = -t30960 * t31153 - t31382;
t31141 = -(t30197 * t31870 + t30477 * t32170) * t30988 + t30198 * t32172;
t30200 = -t30961 * t31152 - t31380;
t31140 = -(t30199 * t31869 + t30478 * t32170) * t30988 + t30200 * t32171;
t31139 = t30985 * t31198;
t31131 = t30972 * t31160;
t31130 = t30972 * t31159;
t31129 = t30972 * t31158;
t31128 = t30972 * t31154;
t31127 = t30972 * t31153;
t31126 = t30972 * t31152;
t30413 = t30746 * t31643 + t30752 * t31003;
t31113 = t30413 * t31867 + t31575;
t30415 = t30747 * t31642 + t30753 * t31005;
t31112 = t30415 * t31866 + t31574;
t30417 = t30748 * t31641 + t30754 * t31007;
t31111 = t30417 * t31865 + t31573;
t30431 = t30749 * t31634 + t30755 * t31021;
t31107 = t30431 * t31861 + t31572;
t30433 = t30750 * t31633 + t30756 * t31023;
t31106 = t30433 * t31860 + t31571;
t30435 = t30751 * t31632 + t30757 * t31025;
t31105 = t30435 * t31859 + t31570;
t31101 = t30975 * t32306 + t31525 - t32306;
t31100 = t30975 * t32307 + t31524 - t32307;
t31099 = t30975 * t32308 + t31523 - t32308;
t31098 = t30975 * t32309 + t31522 - t32309;
t31097 = t30975 * t32310 + t31521 - t32310;
t31096 = t30975 * t32311 + t31520 - t32311;
t31095 = t30975 * t32312 + t31519 - t32312;
t31094 = t30975 * t32313 + t31518 - t32313;
t31093 = t30975 * t32314 + t31517 - t32314;
t31092 = t30975 * t32315 + t31516 - t32315;
t31091 = t30975 * t32316 + t31515 - t32316;
t31090 = t30975 * t32317 + t31514 - t32317;
t31083 = -t30746 * t30896 * t31685 - t30413 * t32170;
t31082 = -t30747 * t30896 * t31683 - t30415 * t32170;
t31081 = -t30748 * t30896 * t31681 - t30417 * t32170;
t31080 = -t30749 * t30896 * t31676 - t30431 * t32170;
t31079 = -t30750 * t30896 * t31674 - t30433 * t32170;
t31078 = -t30751 * t30896 * t31672 - t30435 * t32170;
t31077 = -(-g(2) * t31773 - g(3) * t31639) * t30937 - (-g(2) * t31639 + g(3) * t31773) * t30949 + t31027 * t32131;
t31076 = -(-g(2) * t31768 - g(3) * t31637) * t30938 - (-g(2) * t31637 + g(3) * t31768) * t30950 + t31029 * t32130;
t31075 = -(-g(2) * t31763 - g(3) * t31635) * t30939 - (-g(2) * t31635 + g(3) * t31763) * t30951 + t31031 * t32129;
t31074 = -(g(2) * t31009 + g(3) * t31423) * t30946 + (g(2) * t31423 - g(3) * t31009) * t30934 + t30989 * t31541;
t31073 = -(g(2) * t31011 + g(3) * t31417) * t30947 + (g(2) * t31417 - g(3) * t31011) * t30935 + t30989 * t31540;
t31072 = -(g(2) * t31013 + g(3) * t31411) * t30948 + (g(2) * t31411 - g(3) * t31013) * t30936 + t30989 * t31539;
t29814 = (t30542 * t30773 + t30764 * t31898) * t30940 + (-t30542 * t30764 + t30773 * t31898) * t30928 + t30826 * t31389;
t30638 = -t30871 * t31009 + t30898;
t30461 = t30638 * t30982 - t30986 * t31581;
t30464 = t30638 * t30986 + t30982 * t31581;
t30641 = t30899 + t30842;
t31071 = (-t29814 * t32170 - t31507) * t30975 - (t30461 * t31898 + t30464 * t30542) * t30940 - (-t30461 * t30542 + t30464 * t31898) * t30928 + t30641 * t31897 + t31507;
t29815 = (t30543 * t30774 + t30765 * t31896) * t30941 + (-t30543 * t30765 + t30774 * t31896) * t30929 + t30827 * t31387;
t30639 = -t30871 * t31011 + t30898;
t30462 = t30639 * t30982 - t30986 * t31580;
t30465 = t30639 * t30986 + t30982 * t31580;
t30642 = t30899 + t30843;
t31070 = (-t29815 * t32170 - t31506) * t30975 - (t30462 * t31896 + t30465 * t30543) * t30941 - (-t30462 * t30543 + t30465 * t31896) * t30929 + t30642 * t31895 + t31506;
t29816 = (t30544 * t30775 + t30766 * t31894) * t30942 + (-t30544 * t30766 + t30775 * t31894) * t30930 + t30828 * t31385;
t30640 = -t30871 * t31013 + t30898;
t30463 = t30640 * t30982 - t30986 * t31579;
t30466 = t30640 * t30986 + t30982 * t31579;
t30643 = t30899 + t30844;
t31069 = (-t29816 * t32170 - t31505) * t30975 - (t30463 * t31894 + t30466 * t30544) * t30942 - (-t30463 * t30544 + t30466 * t31894) * t30930 + t30643 * t31893 + t31505;
t29823 = (t30545 * t30792 + t30783 * t31892) * t30943 + (-t30545 * t30783 + t30792 * t31892) * t30931 + t30829 * t31383;
t30650 = -t30871 * t31027 + t30898;
t30467 = t30650 * t30982 - t30986 * t31578;
t30470 = t30650 * t30986 + t30982 * t31578;
t30653 = t30899 + t30851;
t31068 = (-t29823 * t32170 - t31504) * t30975 - (t30467 * t31892 + t30470 * t30545) * t30943 - (-t30467 * t30545 + t30470 * t31892) * t30931 + t30653 * t31891 + t31504;
t29824 = (t30546 * t30793 + t30784 * t31890) * t30944 + (-t30546 * t30784 + t30793 * t31890) * t30932 + t30830 * t31381;
t30651 = -t30871 * t31029 + t30898;
t30468 = t30651 * t30982 - t30986 * t31577;
t30471 = t30651 * t30986 + t30982 * t31577;
t30654 = t30899 + t30852;
t31067 = (-t29824 * t32170 - t31503) * t30975 - (t30468 * t31890 + t30471 * t30546) * t30944 - (-t30468 * t30546 + t30471 * t31890) * t30932 + t30654 * t31889 + t31503;
t29825 = (t30547 * t30794 + t30785 * t31888) * t30945 + (-t30547 * t30785 + t30794 * t31888) * t30933 + t30831 * t31379;
t30652 = -t30871 * t31031 + t30898;
t30469 = t30652 * t30982 - t30986 * t31576;
t30472 = t30652 * t30986 + t30982 * t31576;
t30655 = t30899 + t30853;
t31066 = (-t29825 * t32170 - t31502) * t30975 - (t30469 * t31888 + t30472 * t30547) * t30945 - (-t30469 * t30547 + t30472 * t31888) * t30933 + t30655 * t31887 + t31502;
t31065 = (-t32306 * t31693 + t29607 * t30975 + (t30934 * t31250 - t32249) * t30962 - t32243 * t31754 - t32237) * t30921;
t31064 = (-t32307 * t31693 + t29609 * t30975 + (t30946 * t31250 - t32250) * t30962 + t31183 * t31754 - t32261) * t30921;
t31063 = (-t32308 * t31693 + t29611 * t30975 + (t30935 * t31249 - t32251) * t30963 - t32244 * t31753 - t32238) * t30921;
t31062 = (-t32309 * t31693 + t29613 * t30975 + (t30947 * t31249 - t32252) * t30963 + t31181 * t31753 - t32262) * t30921;
t31061 = (-t32310 * t31693 + t29615 * t30975 + (t30936 * t31248 - t32253) * t30964 - t32245 * t31752 - t32239) * t30921;
t31060 = (-t32311 * t31693 + t29617 * t30975 + (t30948 * t31248 - t32254) * t30964 + t31179 * t31752 - t32263) * t30921;
t31059 = (-t32312 * t31693 + t29622 * t30975 + (t30937 * t31247 - t32255) * t30965 - t32246 * t31751 - t32240) * t30921;
t31058 = (-t32313 * t31693 + t29624 * t30975 + (t30949 * t31247 - t32256) * t30965 + t31177 * t31751 - t32264) * t30921;
t31057 = (-t32314 * t31693 + t29626 * t30975 + (t30938 * t31246 - t32257) * t30966 - t32247 * t31750 - t32241) * t30921;
t31056 = (-t32315 * t31693 + t29628 * t30975 + (t30950 * t31246 - t32258) * t30966 + t31175 * t31750 - t32265) * t30921;
t31055 = (-t32316 * t31693 + t29630 * t30975 + (t30939 * t31245 - t32259) * t30967 - t32248 * t31749 - t32242) * t30921;
t31054 = (-t32317 * t31693 + t29632 * t30975 + (t30951 * t31245 - t32260) * t30967 + t31173 * t31749 - t32266) * t30921;
t30683 = -t30969 * t31734 + t31756;
t30682 = t30969 * t31755 + t31748;
t30681 = t30969 * t31748 + t31755;
t30680 = -t30969 * t31756 + t31734;
t30649 = t30989 * t31285 + t30926;
t30647 = t30989 * t31286 + t30926;
t30645 = t30989 * t31287 + t30926;
t30637 = t30989 * t31291 + t30926;
t30635 = t30989 * t31292 + t30926;
t30633 = t30989 * t31293 + t30926;
t30621 = t30951 * t31763 - t31452;
t30620 = t30939 * t31763 + t31428;
t30617 = t30950 * t31768 - t31454;
t30616 = t30938 * t31768 + t31430;
t30613 = t30949 * t31773 - t31456;
t30612 = t30937 * t31773 + t31432;
t30605 = t30951 * t31393 + t31824;
t30604 = -t30939 * t31393 + t31794;
t30603 = t30950 * t31399 + t31829;
t30602 = -t30938 * t31399 + t31799;
t30601 = t30949 * t31405 + t31834;
t30600 = -t30937 * t31405 + t31804;
t30597 = t30948 * t31778 - t31458;
t30596 = t30936 * t31778 + t31434;
t30593 = t30947 * t31783 - t31460;
t30592 = t30935 * t31783 + t31436;
t30589 = t30946 * t31788 - t31462;
t30588 = t30934 * t31788 + t31438;
t30581 = t30948 * t31411 + t31839;
t30580 = -t30936 * t31411 + t31809;
t30579 = t30947 * t31417 + t31844;
t30578 = -t30935 * t31417 + t31814;
t30577 = t30946 * t31423 + t31849;
t30576 = -t30934 * t31423 + t31819;
t30575 = g(1) * t30969 - g(2) * t31747 + g(3) * t31733;
t30454 = t30649 * t30986 - t30982 * t31288;
t30453 = t30647 * t30986 - t30982 * t31289;
t30452 = t30645 * t30986 - t30982 * t31290;
t30451 = t30649 * t30982 + t30986 * t31288;
t30450 = t30647 * t30982 + t30986 * t31289;
t30449 = t30645 * t30982 + t30986 * t31290;
t30442 = t30637 * t30986 - t30982 * t31294;
t30441 = t30635 * t30986 - t30982 * t31295;
t30440 = t30633 * t30986 - t30982 * t31296;
t30439 = t30637 * t30982 + t30986 * t31294;
t30438 = t30635 * t30982 + t30986 * t31295;
t30437 = t30633 * t30982 + t30986 * t31296;
t30429 = -t30751 * t31635 + t30757 * t31031;
t30427 = -t30750 * t31637 + t30756 * t31029;
t30425 = -t30749 * t31639 + t30755 * t31027;
t30411 = -t30748 * t31644 + t30754 * t31013;
t30409 = -t30747 * t31646 + t30753 * t31011;
t30407 = -t30746 * t31648 + t30752 * t31009;
t30304 = (g(2) * t31644 - g(3) * t31778) * t30948 + (g(2) * t31778 + g(3) * t31644) * t30936 + t31013 * t32151;
t30303 = (g(2) * t31646 - g(3) * t31783) * t30947 + (g(2) * t31783 + g(3) * t31646) * t30935 + t31011 * t32152;
t30302 = (g(2) * t31648 - g(3) * t31788) * t30946 + (g(2) * t31788 + g(3) * t31648) * t30934 + t31009 * t32153;
t30287 = -t30605 * t30982 + t30621 * t30986;
t30286 = t30604 * t30982 + t30620 * t30986;
t30283 = -t30603 * t30982 + t30617 * t30986;
t30282 = t30602 * t30982 + t30616 * t30986;
t30279 = -t30601 * t30982 + t30613 * t30986;
t30278 = t30600 * t30982 + t30612 * t30986;
t30271 = t30605 * t30986 + t30621 * t30982;
t30270 = t30604 * t30986 - t30620 * t30982;
t30269 = t30603 * t30986 + t30617 * t30982;
t30268 = t30602 * t30986 - t30616 * t30982;
t30267 = t30601 * t30986 + t30613 * t30982;
t30266 = t30600 * t30986 - t30612 * t30982;
t30265 = (-g(2) * t31031 - g(3) * t31393) * t30951 + (g(2) * t31393 - g(3) * t31031) * t30939 + t30989 * t31536;
t30264 = (-g(2) * t31029 - g(3) * t31399) * t30950 + (g(2) * t31399 - g(3) * t31029) * t30938 + t30989 * t31537;
t30263 = (-g(2) * t31027 - g(3) * t31405) * t30949 + (g(2) * t31405 - g(3) * t31027) * t30937 + t30989 * t31538;
t30260 = -t30581 * t30982 + t30597 * t30986;
t30259 = t30580 * t30982 + t30596 * t30986;
t30256 = -t30579 * t30982 + t30593 * t30986;
t30255 = t30578 * t30982 + t30592 * t30986;
t30252 = -t30577 * t30982 + t30589 * t30986;
t30251 = t30576 * t30982 + t30588 * t30986;
t30244 = t30581 * t30986 + t30597 * t30982;
t30243 = t30580 * t30986 - t30596 * t30982;
t30242 = t30579 * t30986 + t30593 * t30982;
t30241 = t30578 * t30986 - t30592 * t30982;
t30240 = t30577 * t30986 + t30589 * t30982;
t30239 = t30576 * t30986 - t30588 * t30982;
t30214 = g(2) * t30681 + g(3) * t30683 + t30971 * t32150;
t30213 = -t30680 * g(2) - t30682 * g(3) + t30968 * t32150;
t30092 = t30364 * t31635 + t30370 * t31031;
t30091 = t30363 * t31637 + t30369 * t31029;
t30090 = t30362 * t31639 + t30368 * t31027;
t30089 = t30354 * t31031 + t30355 * t31635;
t30088 = t30352 * t31029 + t30353 * t31637;
t30087 = t30350 * t31027 + t30351 * t31639;
t30086 = t30361 * t31644 + t30367 * t31013;
t30085 = t30360 * t31646 + t30366 * t31011;
t30084 = t30359 * t31648 + t30365 * t31009;
t30083 = t30348 * t31013 + t30349 * t31644;
t30082 = t30346 * t31011 + t30347 * t31646;
t30081 = t30344 * t31009 + t30345 * t31648;
t29963 = t30128 * t31635 - t30574 * t31824;
t29962 = t30127 * t31635 + t30574 * t31794;
t29961 = t30126 * t31637 - t30573 * t31829;
t29960 = t30125 * t31637 + t30573 * t31799;
t29959 = t30124 * t31639 - t30572 * t31834;
t29958 = t30123 * t31639 + t30572 * t31804;
t29957 = t30127 * t31031 - t30574 * t31428;
t29956 = t30125 * t31029 - t30573 * t31430;
t29955 = t30123 * t31027 - t30572 * t31432;
t29954 = t30128 * t31031 + t30574 * t31452;
t29953 = t30126 * t31029 + t30573 * t31454;
t29952 = t30124 * t31027 + t30572 * t31456;
t29951 = t30122 * t31644 - t30571 * t31839;
t29950 = t30121 * t31644 + t30571 * t31809;
t29949 = t30120 * t31646 - t30570 * t31844;
t29948 = t30119 * t31646 + t30570 * t31814;
t29947 = t30118 * t31648 - t30569 * t31849;
t29946 = t30117 * t31648 + t30569 * t31819;
t29945 = t30121 * t31013 - t30571 * t31434;
t29944 = t30122 * t31013 + t30571 * t31458;
t29943 = t30119 * t31011 - t30570 * t31436;
t29942 = t30120 * t31011 + t30570 * t31460;
t29941 = t30117 * t31009 - t30569 * t31438;
t29940 = t30118 * t31009 + t30569 * t31462;
t29939 = (pkin(3) * t30445 - t30757 * t31475) * t31707 + t30448 * t30850;
t29938 = (pkin(3) * t30444 - t30756 * t31476) * t31707 + t30447 * t30849;
t29937 = (pkin(3) * t30443 - t30755 * t31477) * t31707 + t30446 * t30848;
t29936 = (t30445 * t31869 - t30921 * t31564) * t30988 + t30448 * t32171;
t29935 = (t30444 * t31870 - t30921 * t31565) * t30988 + t30447 * t32172;
t29934 = (t30443 * t31871 - t30921 * t31566) * t30988 + t30446 * t32173;
t29933 = (pkin(3) * t30421 - t30754 * t31478) * t31707 + t30424 * t30841;
t29932 = (pkin(3) * t30420 - t30753 * t31479) * t31707 + t30423 * t30840;
t29931 = (pkin(3) * t30419 - t30752 * t31480) * t31707 + t30422 * t30839;
t29924 = t30199 * t31276 + t30200 * t30896;
t29923 = t30197 * t31276 + t30198 * t30896;
t29922 = t30195 * t31276 + t30196 * t30896;
t29921 = (t30421 * t31872 - t30921 * t31567) * t30988 + t30424 * t32174;
t29920 = (t30420 * t31873 - t30921 * t31568) * t30988 + t30423 * t32175;
t29919 = (t30419 * t31874 - t30921 * t31569) * t30988 + t30422 * t32176;
t29918 = t30193 * t31276 + t30194 * t30896;
t29917 = t30191 * t31276 + t30192 * t30896;
t29916 = t30189 * t31276 + t30190 * t30896;
t29879 = (t30364 * t31632 - t30370 * t31025) * t30988 - t30364 * t31694;
t29878 = (-t30354 * t31025 + t30355 * t31632) * t30988 - t30355 * t31694;
t29877 = (t30363 * t31633 - t30369 * t31023) * t30988 - t30363 * t31694;
t29876 = (-t30352 * t31023 + t30353 * t31633) * t30988 - t30353 * t31694;
t29875 = (t30362 * t31634 - t30368 * t31021) * t30988 - t30362 * t31694;
t29874 = (-t30350 * t31021 + t30351 * t31634) * t30988 - t30351 * t31694;
t29873 = (t30361 * t31641 - t30367 * t31007) * t30988 - t30361 * t31694;
t29872 = (-t30348 * t31007 + t30349 * t31641) * t30988 - t30349 * t31694;
t29871 = (t30360 * t31642 - t30366 * t31005) * t30988 - t30360 * t31694;
t29870 = (-t30346 * t31005 + t30347 * t31642) * t30988 - t30347 * t31694;
t29869 = (t30359 * t31643 - t30365 * t31003) * t30988 - t30359 * t31694;
t29868 = (-t30344 * t31003 + t30345 * t31643) * t30988 - t30345 * t31694;
t29867 = (t30127 * t31025 + t30574 * t31427) * t30988 - t30951 * t31496;
t29866 = (t30125 * t31023 + t30573 * t31429) * t30988 - t30950 * t31497;
t29865 = (t30123 * t31021 + t30572 * t31431) * t30988 - t30949 * t31498;
t29864 = (-t30128 * t31025 + t30574 * t31451) * t30988 - t30939 * t31496;
t29863 = (-t30126 * t31023 + t30573 * t31453) * t30988 - t30938 * t31497;
t29862 = (-t30124 * t31021 + t30572 * t31455) * t30988 - t30937 * t31498;
t29861 = (t30121 * t31007 + t30571 * t31433) * t30988 - t30948 * t31499;
t29860 = (-t30122 * t31007 + t30571 * t31457) * t30988 - t30936 * t31499;
t29859 = (-t30120 * t31005 + t30570 * t31459) * t30988 - t30935 * t31500;
t29858 = (t30119 * t31005 + t30570 * t31435) * t30988 - t30947 * t31500;
t29857 = (-t30118 * t31003 + t30569 * t31461) * t30988 - t30934 * t31501;
t29856 = (t30117 * t31003 + t30569 * t31437) * t30988 - t30946 * t31501;
t29837 = t30757 * t31335 - (t30445 * t31859 + t31564) * t32233;
t29836 = t30756 * t31336 - (t30444 * t31860 + t31565) * t32233;
t29835 = t30755 * t31337 - (t30443 * t31861 + t31566) * t32233;
t29834 = t30754 * t31338 - (t30421 * t31865 + t31567) * t32233;
t29833 = t30753 * t31339 - (t30420 * t31866 + t31568) * t32233;
t29832 = t30752 * t31340 - (t30419 * t31867 + t31569) * t32233;
t29831 = t30445 * t31332 + (t30896 * t31526 + t31596) * t31948;
t29830 = t30444 * t31332 + (t30896 * t31527 + t31596) * t31950;
t29829 = t30443 * t31332 + (t30896 * t31530 + t31596) * t31952;
t29828 = (t30547 * t30797 - t30800 * t31888) * t30945 + (t30547 * t30800 + t30797 * t31888) * t30933 + t30831 * t31380;
t29827 = (t30546 * t30796 - t30799 * t31890) * t30944 + (t30546 * t30799 + t30796 * t31890) * t30932 + t30830 * t31382;
t29826 = (t30545 * t30795 - t30798 * t31892) * t30943 + (t30545 * t30798 + t30795 * t31892) * t30931 + t30829 * t31384;
t29822 = -(pkin(3) * t30199 + t30478 * t31859) * t31707 + t30200 * t30850;
t29821 = -(pkin(3) * t30197 + t30477 * t31860) * t31707 + t30198 * t30849;
t29820 = -(pkin(3) * t30195 + t30476 * t31861) * t31707 + t30196 * t30848;
t29819 = (t30544 * t30778 - t30781 * t31894) * t30942 + (t30544 * t30781 + t30778 * t31894) * t30930 + t30828 * t31386;
t29818 = (t30543 * t30777 - t30780 * t31896) * t30941 + (t30543 * t30780 + t30777 * t31896) * t30929 + t30827 * t31388;
t29817 = (t30542 * t30776 - t30779 * t31898) * t30940 + (t30542 * t30779 + t30776 * t31898) * t30928 + t30826 * t31390;
t29813 = t30421 * t31332 + (t30896 * t31528 + t31596) * t31954;
t29812 = t30420 * t31332 + (t30896 * t31529 + t31596) * t31956;
t29811 = t30419 * t31332 + (t30896 * t31531 + t31596) * t31958;
t29804 = -(pkin(3) * t30193 + t30475 * t31865) * t31707 + t30194 * t30841;
t29803 = -(pkin(3) * t30191 + t30474 * t31866) * t31707 + t30192 * t30840;
t29802 = -(pkin(3) * t30189 + t30473 * t31867) * t31707 + t30190 * t30839;
t29795 = (t30547 * t31917 + t30797 * t30831) * t30945 + (-t30547 * t31920 + t30800 * t30831) * t30933 - t30547 * t31380;
t29794 = (t30546 * t31918 + t30796 * t30830) * t30944 + (-t30546 * t31921 + t30799 * t30830) * t30932 - t30546 * t31382;
t29793 = (t30545 * t31919 + t30795 * t30829) * t30943 + (-t30545 * t31922 + t30798 * t30829) * t30931 - t30545 * t31384;
t29792 = (t30785 * t31972 - t30794 * t30831) * t30945 + (t30785 * t30831 + t30794 * t31972) * t30933 + t30547 * t31379;
t29791 = (t30784 * t31974 - t30793 * t30830) * t30944 + (t30784 * t30830 + t30793 * t31974) * t30932 + t30546 * t31381;
t29790 = (t30783 * t31976 - t30792 * t30829) * t30943 + (t30783 * t30829 + t30792 * t31976) * t30931 + t30545 * t31383;
t29789 = (t30544 * t31929 + t30778 * t30828) * t30942 + (-t30544 * t31932 + t30781 * t30828) * t30930 - t30544 * t31386;
t29788 = (t30543 * t31930 + t30777 * t30827) * t30941 + (-t30543 * t31933 + t30780 * t30827) * t30929 - t30543 * t31388;
t29787 = (t30542 * t31931 + t30776 * t30826) * t30940 + (-t30542 * t31934 + t30779 * t30826) * t30928 - t30542 * t31390;
t29786 = (t30766 * t31978 - t30775 * t30828) * t30942 + (t30766 * t30828 + t30775 * t31978) * t30930 + t30544 * t31385;
t29785 = (t30765 * t31980 - t30774 * t30827) * t30941 + (t30765 * t30827 + t30774 * t31980) * t30929 + t30543 * t31387;
t29784 = (t30764 * t31982 - t30773 * t30826) * t30940 + (t30764 * t30826 + t30773 * t31982) * t30928 + t30542 * t31389;
t29783 = (t30128 * t31632 + t30574 * t31825) * t30988 - t30128 * t31694;
t29782 = (t30126 * t31633 + t30573 * t31830) * t30988 - t30126 * t31694;
t29781 = (t30125 * t31633 - t30573 * t31800) * t30988 - t30125 * t31694;
t29780 = (t30123 * t31634 - t30572 * t31805) * t30988 - t30123 * t31694;
t29779 = (t30127 * t31632 - t30574 * t31795) * t30988 - t30127 * t31694;
t29778 = (t30124 * t31634 + t30572 * t31835) * t30988 - t30124 * t31694;
t29777 = (t30122 * t31641 + t30571 * t31840) * t30988 - t30122 * t31694;
t29776 = (t30119 * t31642 - t30570 * t31815) * t30988 - t30119 * t31694;
t29775 = (t30118 * t31643 + t30569 * t31850) * t30988 - t30118 * t31694;
t29774 = (t30121 * t31641 - t30571 * t31810) * t30988 - t30121 * t31694;
t29773 = (t30120 * t31642 + t30570 * t31845) * t30988 - t30120 * t31694;
t29772 = (t30117 * t31643 - t30569 * t31820) * t30988 - t30117 * t31694;
t29741 = (t30265 * t30982 - t30986 * t31075) * t30945 + (t30265 * t30986 + t30982 * t31075) * t30933 - t30562 * t31671;
t29740 = (t30982 * t30264 - t30986 * t31076) * t30944 + (t30264 * t30986 + t30982 * t31076) * t30932 - t30561 * t31673;
t29739 = (t30263 * t30982 - t30986 * t31077) * t30943 + (t30263 * t30986 + t30982 * t31077) * t30931 - t30560 * t31675;
t29732 = (t30304 * t30986 - t30982 * t31072) * t30942 + (-t30982 * t30304 - t30986 * t31072) * t30930 + t30559 * t31680;
t29731 = (t30303 * t30986 - t30982 * t31073) * t30941 + (-t30303 * t30982 - t30986 * t31073) * t30929 + t30558 * t31682;
t29730 = (t30302 * t30986 - t30982 * t31074) * t30940 + (-t30302 * t30982 - t30986 * t31074) * t30928 + t30557 * t31684;
t29705 = t29825 * t31277 + t29828 * t30896;
t29704 = t29824 * t31277 + t29827 * t30896;
t29703 = t29823 * t31277 + t29826 * t30896;
t29702 = t29816 * t31277 + t29819 * t30896;
t29701 = t29815 * t31277 + t29818 * t30896;
t29700 = t29814 * t31277 + t29817 * t30896;
t29687 = t29792 * t31276 + t29795 * t30896;
t29686 = t29791 * t31276 + t29794 * t30896;
t29685 = t29790 * t31276 + t29793 * t30896;
t29684 = t29786 * t31276 + t29789 * t30896;
t29683 = t29785 * t31276 + t29788 * t30896;
t29682 = t29784 * t31276 + t29787 * t30896;
t29669 = (t29954 * t30982 + t29963 * t30986) * t30945 + (t29954 * t30986 - t29963 * t30982) * t30933;
t29668 = (t29957 * t30982 + t29962 * t30986) * t30945 + (t29957 * t30986 - t29962 * t30982) * t30933;
t29667 = (t29953 * t30982 + t29961 * t30986) * t30944 + t30932 * (t29953 * t30986 - t29961 * t30982);
t29666 = (t29956 * t30982 + t29960 * t30986) * t30944 + t30932 * (t29956 * t30986 - t29960 * t30982);
t29665 = (t29952 * t30982 + t29959 * t30986) * t30943 + t30931 * (t29952 * t30986 - t29959 * t30982);
t29664 = (t29955 * t30982 + t29958 * t30986) * t30943 + (t29955 * t30986 - t29958 * t30982) * t30931;
t29663 = (t29944 * t30982 + t29951 * t30986) * t30942 + t30930 * (t29944 * t30986 - t29951 * t30982);
t29662 = (t29945 * t30982 + t29950 * t30986) * t30942 + t30930 * (t29945 * t30986 - t29950 * t30982);
t29661 = (t29942 * t30982 + t29949 * t30986) * t30941 + t30929 * (t29942 * t30986 - t29949 * t30982);
t29660 = (t29943 * t30982 + t29948 * t30986) * t30941 + t30929 * (t29943 * t30986 - t29948 * t30982);
t29659 = (t29940 * t30982 + t29947 * t30986) * t30940 + (t29940 * t30986 - t29947 * t30982) * t30928;
t29658 = (t29941 * t30982 + t29946 * t30986) * t30940 + (t29941 * t30986 - t29946 * t30982) * t30928;
t29657 = (pkin(3) * t29825 - t29915 * t31859) * t31707 + t29828 * t30850;
t29656 = (pkin(3) * t29824 - t29914 * t31860) * t31707 + t29827 * t30849;
t29655 = (pkin(3) * t29823 - t29913 * t31861) * t31707 + t29826 * t30848;
t29654 = (pkin(3) * t29879 + t30092 * t30927) * t31030 + t31024 * (-pkin(3) * t30092 + t29879 * t30927);
t29653 = (pkin(3) * t29877 + t30091 * t30927) * t31028 + t31022 * (-pkin(3) * t30091 + t29877 * t30927);
t29652 = (pkin(3) * t29875 + t30090 * t30927) * t31026 + t31020 * (-pkin(3) * t30090 + t29875 * t30927);
t29651 = (-pkin(3) * t29878 - t30089 * t30927) * t31030 - t31024 * (-pkin(3) * t30089 + t29878 * t30927);
t29650 = (-pkin(3) * t29876 - t30088 * t30927) * t31028 - t31022 * (-pkin(3) * t30088 + t29876 * t30927);
t29649 = (-pkin(3) * t29874 - t30087 * t30927) * t31026 - t31020 * (-pkin(3) * t30087 + t29874 * t30927);
t29648 = (t29825 * t31869 - t30921 * t32132) * t30988 + t29828 * t32171;
t29647 = (t29824 * t31870 - t30921 * t32133) * t30988 + t29827 * t32172;
t29646 = (t29823 * t31871 - t30921 * t32134) * t30988 + t29826 * t32173;
t29645 = (pkin(3) * t29873 + t30086 * t30927) * t31012 + t31006 * (-pkin(3) * t30086 + t29873 * t30927);
t29644 = (pkin(3) * t29871 + t30085 * t30927) * t31010 + t31004 * (-pkin(3) * t30085 + t29871 * t30927);
t29643 = (pkin(3) * t29869 + t30084 * t30927) * t31008 + t31002 * (-pkin(3) * t30084 + t29869 * t30927);
t29642 = (-pkin(3) * t29872 - t30083 * t30927) * t31012 - t31006 * (-pkin(3) * t30083 + t29872 * t30927);
t29641 = (-pkin(3) * t29870 - t30082 * t30927) * t31010 - t31004 * (-pkin(3) * t30082 + t29870 * t30927);
t29640 = (-pkin(3) * t29868 - t30081 * t30927) * t31008 - t31002 * (-pkin(3) * t30081 + t29868 * t30927);
t29639 = (pkin(3) * t29816 - t29912 * t31865) * t31707 + t29819 * t30841;
t29638 = (pkin(3) * t29815 - t29911 * t31866) * t31707 + t29818 * t30840;
t29637 = (pkin(3) * t29814 - t29910 * t31867) * t31707 + t29817 * t30839;
t29636 = (t29816 * t31872 - t30921 * t32135) * t30988 + t29819 * t32174;
t29635 = (t29815 * t31873 - t30921 * t32136) * t30988 + t29818 * t32175;
t29634 = (t29814 * t31874 - t30921 * t32137) * t30988 + t29817 * t32176;
t29633 = (t30951 * t31269 + (t30951 * t31373 + t30973 * t31126) * t31040 - t31152 * t30406) * t30967 + (-t30973 * t31252 + (t30271 * t30933 - t30287 * t30945) * t30825) * t30972 - t30287 * t31440 + t30271 * t31464 + t30406 * t31396;
t29631 = (t30939 * t31269 + (t30939 * t31373 + t30970 * t31126) * t31040 - t31152 * t30405) * t30967 + (-t30970 * t31252 + (-t30270 * t30933 - t30286 * t30945) * t30825) * t30972 - t30286 * t31440 - t30270 * t31464 + t30405 * t31396;
t29629 = (t30950 * t31270 + (t30950 * t31374 + t30973 * t31127) * t31039 - t31153 * t30404) * t30966 + (-t30973 * t31254 + (t30269 * t30932 - t30283 * t30944) * t30824) * t30972 - t30283 * t31442 + t30269 * t31466 + t30404 * t31402;
t29627 = (t30938 * t31270 + (t30938 * t31374 + t30970 * t31127) * t31039 - t31153 * t30403) * t30966 + (-t30970 * t31254 + (-t30268 * t30932 - t30282 * t30944) * t30824) * t30972 - t30282 * t31442 - t30268 * t31466 + t30403 * t31402;
t29625 = (t30949 * t31271 + (t30949 * t31375 + t30973 * t31128) * t31038 - t31154 * t30402) * t30965 + (-t30973 * t31256 + (t30267 * t30931 - t30279 * t30943) * t30823) * t30972 - t30279 * t31444 + t30267 * t31468 + t30402 * t31408;
t29623 = (t30937 * t31271 + (t30937 * t31375 + t30970 * t31128) * t31038 - t31154 * t30401) * t30965 + (-t30970 * t31256 + (-t30266 * t30931 - t30278 * t30943) * t30823) * t30972 - t30278 * t31444 - t30266 * t31468 + t30401 * t31408;
t29621 = ((-t30328 * t31920 - t30334 * t30800) * t30945 - (t30328 * t31917 - t30334 * t30797) * t30933) * t30951 + ((-t30328 * t30800 + t30334 * t31920) * t30945 + t30933 * (t30328 * t30797 + t30334 * t31917)) * t30939;
t29620 = ((-t30327 * t31921 - t30333 * t30799) * t30944 - (t30327 * t31918 - t30333 * t30796) * t30932) * t30950 + t30938 * ((-t30327 * t30799 + t30333 * t31921) * t30944 + t30932 * (t30327 * t30796 + t30333 * t31918));
t29619 = ((-t30326 * t31922 - t30332 * t30798) * t30943 - (t30326 * t31919 - t30332 * t30795) * t30931) * t30949 + t30937 * ((-t30326 * t30798 + t30332 * t31922) * t30943 + (t30326 * t30795 + t30332 * t31919) * t30931);
t29618 = (t30948 * t31272 + (t30948 * t31376 + t30973 * t31129) * t31037 - t31158 * t30400) * t30964 + (-t30973 * t31258 + (t30244 * t30930 - t30260 * t30942) * t30822) * t30972 - t30260 * t31446 + t30244 * t31470 + t30400 * t31414;
t29616 = (t30936 * t31272 + (t30936 * t31376 + t30970 * t31129) * t31037 - t31158 * t30399) * t30964 + (-t30970 * t31258 + (-t30243 * t30930 - t30259 * t30942) * t30822) * t30972 - t30259 * t31446 - t30243 * t31470 + t30399 * t31414;
t29614 = (t30947 * t31273 + (t30947 * t31377 + t30973 * t31130) * t31036 - t31159 * t30398) * t30963 + (-t30973 * t31260 + (t30242 * t30929 - t30256 * t30941) * t30821) * t30972 - t30256 * t31448 + t30242 * t31472 + t30398 * t31420;
t29612 = (t30935 * t31273 + (t30935 * t31377 + t30970 * t31130) * t31036 - t31159 * t30397) * t30963 + (-t30970 * t31260 + (-t30241 * t30929 - t30255 * t30941) * t30821) * t30972 - t30255 * t31448 - t30241 * t31472 + t30397 * t31420;
t29610 = (t30946 * t31274 + (t30946 * t31378 + t30973 * t31131) * t31035 - t31160 * t30396) * t30962 + (-t30973 * t31262 + (t30240 * t30928 - t30252 * t30940) * t30820) * t30972 - t30252 * t31450 + t30240 * t31474 + t30396 * t31426;
t29608 = (t30934 * t31274 + (t30934 * t31378 + t30970 * t31131) * t31035 - t31160 * t30395) * t30962 + (-t30970 * t31262 + (-t30239 * t30928 - t30251 * t30940) * t30820) * t30972 - t30251 * t31450 - t30239 * t31474 + t30395 * t31426;
t29606 = ((-t30325 * t31932 - t30331 * t30781) * t30942 - (t30325 * t31929 - t30331 * t30778) * t30930) * t30948 + t30936 * ((-t30325 * t30781 + t30331 * t31932) * t30942 + (t30325 * t30778 + t30331 * t31929) * t30930);
t29605 = ((-t30324 * t31933 - t30330 * t30780) * t30941 - (t30324 * t31930 - t30330 * t30777) * t30929) * t30947 + t30935 * ((-t30324 * t30780 + t30330 * t31933) * t30941 + (t30324 * t30777 + t30330 * t31930) * t30929);
t29604 = ((-t30323 * t31934 - t30329 * t30779) * t30940 - (t30323 * t31931 - t30329 * t30776) * t30928) * t30946 + ((-t30323 * t30779 + t30329 * t31934) * t30940 + t30928 * (t30323 * t30776 + t30329 * t31931)) * t30934;
t29603 = -(pkin(3) * t29792 + t29897 * t31859) * t31707 + t29795 * t30850;
t29602 = -(pkin(3) * t29791 + t29896 * t31860) * t31707 + t29794 * t30849;
t29601 = -(pkin(3) * t29790 + t29895 * t31861) * t31707 + t29793 * t30848;
t29600 = (-t29792 * t31869 - t30921 * t32138) * t30988 + t29795 * t32171;
t29599 = (-t29791 * t31870 - t30921 * t32139) * t30988 + t29794 * t32172;
t29598 = (-t29790 * t31871 - t30921 * t32140) * t30988 + t29793 * t32173;
t29597 = -(pkin(3) * t29786 + t29894 * t31865) * t31707 + t29789 * t30841;
t29596 = -(pkin(3) * t29785 + t29893 * t31866) * t31707 + t29788 * t30840;
t29595 = -(pkin(3) * t29784 + t29892 * t31867) * t31707 + t29787 * t30839;
t29594 = (-t29786 * t31872 - t30921 * t32141) * t30988 + t29789 * t32174;
t29593 = (-t29785 * t31873 - t30921 * t32142) * t30988 + t29788 * t32175;
t29592 = (-t29784 * t31874 - t30921 * t32143) * t30988 + t29787 * t32176;
t29579 = -t29741 * t31024 + t31030 * t32203;
t29578 = -t29741 * t31030 - t31024 * t32203;
t29577 = -t31022 * t29740 + t31028 * t32204;
t29576 = -t31028 * t29740 - t31022 * t32204;
t29575 = -t29739 * t31020 + t31026 * t32205;
t29574 = -t29739 * t31026 - t31020 * t32205;
t29573 = ((-t30327 * t31984 + t30333 * t30519) * t30944 + t30932 * (t30327 * t31987 + t30333 * t30528)) * t30950 + t30938 * ((t30327 * t30519 + t30333 * t31984) * t30944 + (t30327 * t30528 - t30333 * t31987) * t30932);
t29572 = ((-t30326 * t31985 + t30332 * t30518) * t30943 + (t30326 * t31988 + t30332 * t30527) * t30931) * t30949 + t30937 * ((t30326 * t30518 + t30332 * t31985) * t30943 + t30931 * (t30326 * t30527 - t30332 * t31988));
t29571 = ((-t30328 * t31983 + t30334 * t30520) * t30945 + t30933 * (t30328 * t31986 + t30334 * t30529)) * t30951 + ((t30328 * t30520 + t30334 * t31983) * t30945 + (t30328 * t30529 - t30334 * t31986) * t30933) * t30939;
t29570 = t31006 * t29732 + t31012 * t32206;
t29569 = t31012 * t29732 - t31006 * t32206;
t29568 = t31004 * t29731 + t31010 * t32207;
t29567 = t31010 * t29731 - t31004 * t32207;
t29566 = t31002 * t29730 + t31008 * t32208;
t29565 = t31008 * t29730 - t31002 * t32208;
t29564 = ((-t30325 * t31989 + t30331 * t30499) * t30942 + (t30325 * t31992 + t30331 * t30508) * t30930) * t30948 + t30936 * ((t30325 * t30499 + t30331 * t31989) * t30942 + (t30325 * t30508 - t30331 * t31992) * t30930);
t29563 = ((-t30324 * t31990 + t30330 * t30498) * t30941 + (t30324 * t31993 + t30330 * t30507) * t30929) * t30947 + t30935 * ((t30324 * t30498 + t30330 * t31990) * t30941 + (t30324 * t30507 - t30330 * t31993) * t30929);
t29562 = ((-t30323 * t31991 + t30329 * t30497) * t30940 + t30928 * (t30323 * t31994 + t30329 * t30506)) * t30946 + ((t30323 * t30497 + t30329 * t31991) * t30940 + (t30323 * t30506 - t30329 * t31994) * t30928) * t30934;
t29561 = ((-t30451 * t31888 - t30454 * t30547) * t30945 + (t30451 * t30547 - t30454 * t31888) * t30933 + t30648 * t31887) * t31024 + ((t29825 * t31859 + t32132) * t30975 - t32132) * t30927;
t29560 = ((-t30450 * t31890 - t30453 * t30546) * t30944 + (t30450 * t30546 - t30453 * t31890) * t30932 + t30646 * t31889) * t31022 + ((t29824 * t31860 + t32133) * t30975 - t32133) * t30927;
t29559 = ((-t30449 * t31892 - t30452 * t30545) * t30943 + (t30449 * t30545 - t30452 * t31892) * t30931 + t30644 * t31891) * t31020 + ((t29823 * t31861 + t32134) * t30975 - t32134) * t30927;
t29558 = ((-t30439 * t31894 - t30442 * t30544) * t30942 + (t30439 * t30544 - t30442 * t31894) * t30930 + t30636 * t31893) * t31006 + ((t29816 * t31865 + t32135) * t30975 - t32135) * t30927;
t29557 = ((-t30438 * t31896 - t30441 * t30543) * t30941 + (t30438 * t30543 - t30441 * t31896) * t30929 + t30634 * t31895) * t31004 + ((t29815 * t31866 + t32136) * t30975 - t32136) * t30927;
t29556 = ((-t30437 * t31898 - t30440 * t30542) * t30940 + (t30437 * t30542 - t30440 * t31898) * t30928 + t30632 * t31897) * t31002 + ((t29814 * t31867 + t32137) * t30975 - t32137) * t30927;
t29555 = (t29783 * t30986 + t29864 * t30982) * t30945 + t30933 * (-t29783 * t30982 + t29864 * t30986);
t29554 = (t29782 * t30986 + t29863 * t30982) * t30944 + t30932 * (-t29782 * t30982 + t29863 * t30986);
t29553 = (t29781 * t30986 - t29866 * t30982) * t30944 - t30932 * (t29781 * t30982 + t29866 * t30986);
t29552 = (t29780 * t30986 - t29865 * t30982) * t30943 - (t29780 * t30982 + t29865 * t30986) * t30931;
t29551 = (t29779 * t30986 - t29867 * t30982) * t30945 - (t29779 * t30982 + t29867 * t30986) * t30933;
t29550 = (t29778 * t30986 + t29862 * t30982) * t30943 + (-t29778 * t30982 + t29862 * t30986) * t30931;
t29549 = (t29777 * t30986 + t29860 * t30982) * t30942 + (-t29777 * t30982 + t29860 * t30986) * t30930;
t29548 = (t29776 * t30986 - t29858 * t30982) * t30941 - t30929 * (t29776 * t30982 + t29858 * t30986);
t29547 = (t29775 * t30986 + t29857 * t30982) * t30940 + (-t29775 * t30982 + t29857 * t30986) * t30928;
t29546 = (t29774 * t30986 - t29861 * t30982) * t30942 - t30930 * (t29774 * t30982 + t29861 * t30986);
t29545 = (t29773 * t30986 + t29859 * t30982) * t30941 + t30929 * (-t29773 * t30982 + t29859 * t30986);
t29544 = (t29772 * t30986 - t29856 * t30982) * t30940 - (t29772 * t30982 + t29856 * t30986) * t30928;
t29543 = (-t29792 * t32170 + t31484) * t30975 - t31484 + (-t30469 * t31972 + t30472 * t30831) * t30945 + (-t30469 * t30831 - t30472 * t31972) * t30933 + t30655 * t31971;
t29542 = (-t29791 * t32170 + t31485) * t30975 - t31485 + (-t30468 * t31974 + t30471 * t30830) * t30944 + (-t30468 * t30830 - t30471 * t31974) * t30932 + t30654 * t31973;
t29541 = (-t29790 * t32170 + t31486) * t30975 - t31486 + (-t30467 * t31976 + t30470 * t30829) * t30943 + (-t30467 * t30829 - t30470 * t31976) * t30931 + t30653 * t31975;
t29540 = (-t29786 * t32170 + t31487) * t30975 - t31487 + (-t30463 * t31978 + t30466 * t30828) * t30942 + (-t30463 * t30828 - t30466 * t31978) * t30930 + t30643 * t31977;
t29539 = (-t29785 * t32170 + t31488) * t30975 - t31488 + (-t30462 * t31980 + t30465 * t30827) * t30941 + (-t30462 * t30827 - t30465 * t31980) * t30929 + t30642 * t31979;
t29538 = (-t29784 * t32170 + t31489) * t30975 - t31489 + (-t30461 * t31982 + t30464 * t30826) * t30940 + (-t30461 * t30826 - t30464 * t31982) * t30928 + t30641 * t31981;
t29537 = ((-t30451 * t31972 + t30454 * t30831) * t30945 + (-t30451 * t30831 - t30454 * t31972) * t30933 + t30648 * t31971) * t31024 + ((t29792 * t31859 - t32138) * t30975 + t32138) * t30927;
t29536 = ((-t30450 * t31974 + t30453 * t30830) * t30944 + (-t30450 * t30830 - t30453 * t31974) * t30932 + t30646 * t31973) * t31022 + ((t29791 * t31860 - t32139) * t30975 + t32139) * t30927;
t29535 = ((-t30449 * t31976 + t30452 * t30829) * t30943 + (-t30449 * t30829 - t30452 * t31976) * t30931 + t30644 * t31975) * t31020 + ((t29790 * t31861 - t32140) * t30975 + t32140) * t30927;
t29534 = ((-t30439 * t31978 + t30442 * t30828) * t30942 + (-t30439 * t30828 - t30442 * t31978) * t30930 + t30636 * t31977) * t31006 + ((t29786 * t31865 - t32141) * t30975 + t32141) * t30927;
t29533 = ((-t30438 * t31980 + t30441 * t30827) * t30941 + (-t30438 * t30827 - t30441 * t31980) * t30929 + t30634 * t31979) * t31004 + ((t29785 * t31866 - t32142) * t30975 + t32142) * t30927;
t29532 = ((-t30437 * t31982 + t30440 * t30826) * t30940 + (-t30437 * t30826 - t30440 * t31982) * t30928 + t30632 * t31981) * t31002 + ((t29784 * t31867 - t32143) * t30975 + t32143) * t30927;
t29525 = (pkin(3) * t29571 + t29621 * t30927) * t31030 - t31024 * (pkin(3) * t29621 - t29571 * t30927);
t29524 = (pkin(3) * t29573 + t29620 * t30927) * t31028 - t31022 * (pkin(3) * t29620 - t29573 * t30927);
t29523 = (pkin(3) * t29572 + t29619 * t30927) * t31026 - t31020 * (pkin(3) * t29619 - t29572 * t30927);
t29522 = (pkin(3) * t29564 + t29606 * t30927) * t31012 - t31006 * (pkin(3) * t29606 - t29564 * t30927);
t29521 = (pkin(3) * t29563 + t29605 * t30927) * t31010 - t31004 * (pkin(3) * t29605 - t29563 * t30927);
t29520 = (pkin(3) * t29562 + t29604 * t30927) * t31008 - (pkin(3) * t29604 - t29562 * t30927) * t31002;
t29519 = (-pkin(3) * t29555 - t29669 * t30927) * t31030 + t31024 * (pkin(3) * t29669 - t29555 * t30927);
t29518 = (-pkin(3) * t29551 - t29668 * t30927) * t31030 + t31024 * (pkin(3) * t29668 - t29551 * t30927);
t29517 = (-pkin(3) * t29554 - t29667 * t30927) * t31028 + t31022 * (pkin(3) * t29667 - t29554 * t30927);
t29516 = (-pkin(3) * t29553 - t29666 * t30927) * t31028 + t31022 * (pkin(3) * t29666 - t29553 * t30927);
t29515 = (-pkin(3) * t29550 - t29665 * t30927) * t31026 + t31020 * (pkin(3) * t29665 - t29550 * t30927);
t29514 = (-pkin(3) * t29552 - t29664 * t30927) * t31026 + t31020 * (pkin(3) * t29664 - t29552 * t30927);
t29513 = (-pkin(3) * t29549 - t29663 * t30927) * t31012 + t31006 * (pkin(3) * t29663 - t29549 * t30927);
t29512 = (-pkin(3) * t29545 - t29661 * t30927) * t31010 + (pkin(3) * t29661 - t29545 * t30927) * t31004;
t29511 = (-pkin(3) * t29548 - t29660 * t30927) * t31010 + (pkin(3) * t29660 - t29548 * t30927) * t31004;
t29510 = (-pkin(3) * t29547 - t29659 * t30927) * t31008 + (pkin(3) * t29659 - t29547 * t30927) * t31002;
t29509 = (-pkin(3) * t29544 - t29658 * t30927) * t31008 + t31002 * (pkin(3) * t29658 - t29544 * t30927);
t29508 = (-pkin(3) * t29546 - t29662 * t30927) * t31012 + t31006 * (pkin(3) * t29662 - t29546 * t30927);
t1 = [(-((((t30429 * t30896 + t30435 * t31276) * t30984 + t30751 * t31139) * t30967 - 0.2e1 * t30358 * t30961) * t30981 + ((((-t30435 * t31869 + t30921 * t31570) * t30988 + t30429 * t32171) * t30984 + t31078 * t30975 - t30751 * t30898 - t31078) * t30967 + t30035 * t30961) * t31030 + (t30751 * t31335 + (t30429 * t31881 + (-(pkin(3) * t30435 - t30751 * t31475) * t31693 - t31105 * t30975 + t31105) * t30983) * pkin(9)) * t30967 + t30961 * t31227) * t32087 - ((((t30427 * t30896 + t30433 * t31276) * t30984 + t30750 * t31139) * t30966 - 0.2e1 * t30357 * t30960) * t30980 + ((((-t30433 * t31870 + t30921 * t31571) * t30988 + t30427 * t32172) * t30984 + t31079 * t30975 - t30750 * t30898 - t31079) * t30966 + t30034 * t30960) * t31028 + (t30750 * t31336 + (t30427 * t31882 + (-(pkin(3) * t30433 - t30750 * t31476) * t31693 - t31106 * t30975 + t31106) * t30983) * pkin(9)) * t30966 + t30960 * t31228) * t32088 - ((((t30425 * t30896 + t30431 * t31276) * t30984 + t30749 * t31139) * t30965 - 0.2e1 * t30356 * t30959) * t30979 + ((((-t30431 * t31871 + t30921 * t31572) * t30988 + t30425 * t32173) * t30984 + t31080 * t30975 - t30749 * t30898 - t31080) * t30965 + t30033 * t30959) * t31026 + (t30749 * t31337 + (t30425 * t31883 + (-(pkin(3) * t30431 - t30749 * t31477) * t31693 - t31107 * t30975 + t31107) * t30983) * pkin(9)) * t30965 + t30959 * t31229) * t32089 - ((((t30411 * t30896 + t30417 * t31276) * t30984 + t30748 * t31139) * t30964 - 0.2e1 * t30343 * t30958) * t30978 + ((((-t30417 * t31872 + t30921 * t31573) * t30988 + t30411 * t32174) * t30984 + t31081 * t30975 - t30748 * t30898 - t31081) * t30964 + t30014 * t30958) * t31012 + (t30748 * t31338 + (t30411 * t31884 + (-(pkin(3) * t30417 - t30748 * t31478) * t31693 - t31111 * t30975 + t31111) * t30983) * pkin(9)) * t30964 + t30958 * t31230) * t32090 - ((((t30409 * t30896 + t30415 * t31276) * t30984 + t30747 * t31139) * t30963 - 0.2e1 * t30342 * t30957) * t30977 + ((((-t30415 * t31873 + t30921 * t31574) * t30988 + t30409 * t32175) * t30984 + t31082 * t30975 - t30747 * t30898 - t31082) * t30963 + t30013 * t30957) * t31010 + (t30747 * t31339 + (t30409 * t31885 + (-(pkin(3) * t30415 - t30747 * t31479) * t31693 - t31112 * t30975 + t31112) * t30983) * pkin(9)) * t30963 + t30957 * t31231) * t32091 - ((((t30407 * t30896 + t30413 * t31276) * t30984 + t30746 * t31139) * t30962 - 0.2e1 * t30341 * t30956) * t30976 + ((((-t30413 * t31874 + t30921 * t31575) * t30988 + t30407 * t32176) * t30984 + t31083 * t30975 - t30746 * t30898 - t31083) * t30962 + t30012 * t30956) * t31008 + (t30746 * t31340 + (t30407 * t31886 + (-(pkin(3) * t30413 - t30746 * t31480) * t31693 - t31113 * t30975 + t31113) * t30983) * pkin(9)) * t30962 + t30956 * t31232) * t32092) * MDP(1) + (t29748 * t31513 + t29750 * t31512 + t29752 * t31511 + t29757 * t31510 + t29759 * t31509 + t29761 * t31508) * MDP(3) + (-t29763 * t31510 - t29764 * t31509 - t29765 * t31508 + t31328 * t31511 + t31329 * t31512 + t31330 * t31513) * MDP(4) + ((-t29579 * t32069 + t29680 * t32093) * t30967 + (-t29577 * t32070 + t29678 * t32094) * t30966 + (-t29575 * t32071 + t29677 * t32095) * t30965 + (-t29570 * t32072 + t29672 * t32096) * t30964 + (-t29568 * t32073 + t29671 * t32097) * t30963 + (-t29566 * t32074 + t29670 * t32098) * t30962) * MDP(10) + ((-t29578 * t32069 + t29681 * t32093) * t30967 + (-t29576 * t32070 + t29679 * t32094) * t30966 + (-t29574 * t32071 + t29676 * t32095) * t30965 + (-t29569 * t32072 + t29675 * t32096) * t30964 + (-t29567 * t32073 + t29674 * t32097) * t30963 + (-t29565 * t32074 + t29673 * t32098) * t30962) * MDP(11) + (-t30575 * t30969 + (-t30213 * t30968 - t30214 * t30971) * t30972) * MDP(21); (-(((t29924 * t30939 + t30951 * t32197) * t30984 + (t30478 * t30939 + t30951 * t31948) * t31199) * t30981 + ((t30951 * t29936 + t30939 * t31140) * t30984 + t32227 * t30939 + t29831 * t30951) * t31030 + (t29822 * t30939 + t29939 * t30951) * t32155 - t32226 * t30939 - t29837 * t30951) * t32087 - (((t29923 * t30938 + t30950 * t32198) * t30984 + (t30477 * t30938 + t30950 * t31950) * t31199) * t30980 + ((t30950 * t29935 + t30938 * t31141) * t30984 + t32228 * t30938 + t29830 * t30950) * t31028 + (t29821 * t30938 + t29938 * t30950) * t32155 - t32225 * t30938 - t29836 * t30950) * t32088 - (((t29922 * t30937 + t30949 * t32199) * t30984 + (t30476 * t30937 + t30949 * t31952) * t31199) * t30979 + ((t30949 * t29934 + t30937 * t31142) * t30984 + t32229 * t30937 + t29829 * t30949) * t31026 + (t29820 * t30937 + t29937 * t30949) * t32155 - t32224 * t30937 - t29835 * t30949) * t32089 - (((t29918 * t30936 + t30948 * t32200) * t30984 + (t30475 * t30936 + t30948 * t31954) * t31199) * t30978 + ((t30948 * t29921 + t30936 * t31143) * t30984 + t32230 * t30936 + t29813 * t30948) * t31012 + (t29804 * t30936 + t29933 * t30948) * t32155 - t32223 * t30936 - t29834 * t30948) * t32090 - (((t29917 * t30935 + t30947 * t32201) * t30984 + (t30474 * t30935 + t30947 * t31956) * t31199) * t30977 + ((t30947 * t29920 + t30935 * t31144) * t30984 + t32231 * t30935 + t29812 * t30947) * t31010 + (t29803 * t30935 + t29932 * t30947) * t32155 - t32222 * t30935 - t29833 * t30947) * t32091 - (((t29916 * t30934 + t30946 * t32202) * t30984 + (t30473 * t30934 + t30946 * t31958) * t31199) * t30976 + ((t30946 * t29919 + t30934 * t31145) * t30984 + t32232 * t30934 + t29811 * t30946) * t31008 + (t29802 * t30934 + t29931 * t30946) * t32155 - t32221 * t30934 - t29832 * t30946) * t32092) * MDP(1) + (t29643 * t32086 + t29644 * t32084 + t29645 * t32082 + t29652 * t32080 + t29653 * t32078 + t29654 * t32076) * MDP(3) + (t29643 * t32085 + t29644 * t32083 + t29645 * t32081 - t29652 * t32079 - t29653 * t32077 - t29654 * t32075) * MDP(4) + (t29566 * t32067 + t29568 * t32065 + t29570 * t32063 + t29575 * t32061 + t29577 * t32059 + t29579 * t32057 + t29643 * t32110 + t29644 * t32109 + t29645 * t32108 + t29652 * t32103 + t29653 * t32102 + t29654 * t32100) * MDP(10) + (t29565 * t32067 + t29567 * t32065 + t29569 * t32063 + t29574 * t32061 + t29576 * t32059 + t29578 * t32057 + t29643 * t32107 + t29644 * t32106 + t29645 * t32105 + t29652 * t32104 + t29653 * t32101 + t29654 * t32099) * MDP(11) + (t30213 * t30680 - t30214 * t30681 + t30575 * t31747) * MDP(21); (-(((-t29924 * t30951 + t30939 * t32197) * t30984 + (t30478 * t30951 - t30939 * t31948) * t31198) * t30981 + ((t30939 * t29936 - t30951 * t31140) * t30984 - t32227 * t30951 + t30939 * t29831) * t31030 - (t29822 * t30951 - t29939 * t30939) * t32155 + t32226 * t30951 - t30939 * t29837) * t32087 - (((-t29923 * t30950 + t30938 * t32198) * t30984 + (t30477 * t30950 - t30938 * t31950) * t31198) * t30980 + ((t30938 * t29935 - t30950 * t31141) * t30984 - t32228 * t30950 + t30938 * t29830) * t31028 - (t29821 * t30950 - t29938 * t30938) * t32155 + t32225 * t30950 - t30938 * t29836) * t32088 - (((-t29922 * t30949 + t30937 * t32199) * t30984 + (t30476 * t30949 - t30937 * t31952) * t31198) * t30979 + ((t30937 * t29934 - t30949 * t31142) * t30984 - t32229 * t30949 + t30937 * t29829) * t31026 - (t29820 * t30949 - t29937 * t30937) * t32155 + t32224 * t30949 - t30937 * t29835) * t32089 - (((-t29918 * t30948 + t30936 * t32200) * t30984 + (t30475 * t30948 - t30936 * t31954) * t31198) * t30978 + ((t30936 * t29921 - t30948 * t31143) * t30984 - t32230 * t30948 + t30936 * t29813) * t31012 - (t29804 * t30948 - t29933 * t30936) * t32155 + t32223 * t30948 - t30936 * t29834) * t32090 - (((-t29917 * t30947 + t30935 * t32201) * t30984 + (t30474 * t30947 - t30935 * t31956) * t31198) * t30977 + ((t30935 * t29920 - t30947 * t31144) * t30984 - t32231 * t30947 + t30935 * t29812) * t31010 - (t29803 * t30947 - t29932 * t30935) * t32155 + t32222 * t30947 - t30935 * t29833) * t32091 - (((-t29916 * t30946 + t30934 * t32202) * t30984 + (t30473 * t30946 - t30934 * t31958) * t31198) * t30976 + ((t30934 * t29919 - t30946 * t31145) * t30984 - t32232 * t30946 + t30934 * t29811) * t31008 - (t29802 * t30946 - t29931 * t30934) * t32155 + t32221 * t30946 - t30934 * t29832) * t32092) * MDP(1) + (t29640 * t32086 + t29641 * t32084 + t29642 * t32082 + t29649 * t32080 + t29650 * t32078 + t29651 * t32076) * MDP(3) + (t29640 * t32085 + t29641 * t32083 + t29642 * t32081 - t29649 * t32079 - t29650 * t32077 - t29651 * t32075) * MDP(4) + (t29566 * t32068 + t29568 * t32066 + t29570 * t32064 + t29575 * t32062 + t29577 * t32060 + t29579 * t32058 + t29640 * t32110 + t29641 * t32109 + t29642 * t32108 + t29649 * t32103 + t29650 * t32102 + t29651 * t32100) * MDP(10) + (t29565 * t32068 + t29567 * t32066 + t29569 * t32064 + t29574 * t32062 + t29576 * t32060 + t29578 * t32058 + t29640 * t32107 + t29641 * t32106 + t29642 * t32105 + t29649 * t32104 + t29650 * t32101 + t29651 * t32099) * MDP(11) + (t30213 * t30682 - t30214 * t30683 - t30575 * t31733) * MDP(21); (-((((-t29687 * t30970 + t29705 * t30973) * t30951 + (t29687 * t30973 + t29705 * t30970) * t30939) * t30984 + ((-t29897 * t30970 + t29915 * t30973) * t30951 + (t29897 * t30973 + t29915 * t30970) * t30939) * t31199) * t30981 + (((-t29600 * t30970 + t29648 * t30973) * t30951 + t30939 * (t29600 * t30973 + t29648 * t30970)) * t30984 + (-t30970 * t29543 - t30973 * t31066) * t30951 + (t29543 * t30973 - t30970 * t31066) * t30939) * t31030 + ((-t29603 * t30970 + t29657 * t30973) * t30951 + (t29603 * t30973 + t29657 * t30970) * t30939) * t32155 + (t29537 * t30970 + t29561 * t30973) * t30951 - t30939 * (t29537 * t30973 - t29561 * t30970)) * t32087 - ((((-t29686 * t30970 + t29704 * t30973) * t30950 + t30938 * (t29686 * t30973 + t29704 * t30970)) * t30984 + ((-t29896 * t30970 + t29914 * t30973) * t30950 + (t29896 * t30973 + t29914 * t30970) * t30938) * t31199) * t30980 + (((-t29599 * t30970 + t29647 * t30973) * t30950 + t30938 * (t29599 * t30973 + t29647 * t30970)) * t30984 + (-t30970 * t29542 - t30973 * t31067) * t30950 + (t29542 * t30973 - t30970 * t31067) * t30938) * t31028 + ((-t29602 * t30970 + t29656 * t30973) * t30950 + (t29602 * t30973 + t29656 * t30970) * t30938) * t32155 + (t29536 * t30970 + t29560 * t30973) * t30950 - t30938 * (t29536 * t30973 - t29560 * t30970)) * t32088 - ((((-t29685 * t30970 + t29703 * t30973) * t30949 + t30937 * (t29685 * t30973 + t29703 * t30970)) * t30984 + ((-t29895 * t30970 + t29913 * t30973) * t30949 + (t29895 * t30973 + t29913 * t30970) * t30937) * t31199) * t30979 + (((-t29598 * t30970 + t29646 * t30973) * t30949 + t30937 * (t29598 * t30973 + t29646 * t30970)) * t30984 + (-t30970 * t29541 - t30973 * t31068) * t30949 + (t29541 * t30973 - t30970 * t31068) * t30937) * t31026 + ((-t29601 * t30970 + t29655 * t30973) * t30949 + (t29601 * t30973 + t29655 * t30970) * t30937) * t32155 + (t29535 * t30970 + t29559 * t30973) * t30949 - t30937 * (t29535 * t30973 - t29559 * t30970)) * t32089 - ((((-t29684 * t30970 + t29702 * t30973) * t30948 + t30936 * (t29684 * t30973 + t29702 * t30970)) * t30984 + ((-t29894 * t30970 + t29912 * t30973) * t30948 + (t29894 * t30973 + t29912 * t30970) * t30936) * t31199) * t30978 + (((-t29594 * t30970 + t29636 * t30973) * t30948 + t30936 * (t29594 * t30973 + t29636 * t30970)) * t30984 + (-t30970 * t29540 - t30973 * t31069) * t30948 + (t29540 * t30973 - t30970 * t31069) * t30936) * t31012 + ((-t29597 * t30970 + t29639 * t30973) * t30948 + t30936 * (t29597 * t30973 + t29639 * t30970)) * t32155 + (t29534 * t30970 + t29558 * t30973) * t30948 - (t29534 * t30973 - t29558 * t30970) * t30936) * t32090 - ((((-t29683 * t30970 + t29701 * t30973) * t30947 + t30935 * (t29683 * t30973 + t29701 * t30970)) * t30984 + ((-t29893 * t30970 + t29911 * t30973) * t30947 + (t29893 * t30973 + t29911 * t30970) * t30935) * t31199) * t30977 + (((-t29593 * t30970 + t29635 * t30973) * t30947 + t30935 * (t29593 * t30973 + t29635 * t30970)) * t30984 + (-t30970 * t29539 - t30973 * t31070) * t30947 + (t29539 * t30973 - t30970 * t31070) * t30935) * t31010 + ((-t29596 * t30970 + t29638 * t30973) * t30947 + t30935 * (t29596 * t30973 + t29638 * t30970)) * t32155 + (t29533 * t30970 + t29557 * t30973) * t30947 - (t29533 * t30973 - t29557 * t30970) * t30935) * t32091 - ((((-t29682 * t30970 + t29700 * t30973) * t30946 + t30934 * (t29682 * t30973 + t29700 * t30970)) * t30984 + ((-t29892 * t30970 + t29910 * t30973) * t30946 + (t29892 * t30973 + t29910 * t30970) * t30934) * t31199) * t30976 + (((-t29592 * t30970 + t29634 * t30973) * t30946 + t30934 * (t29592 * t30973 + t29634 * t30970)) * t30984 + (-t30970 * t29538 - t30973 * t31071) * t30946 + (t29538 * t30973 - t30970 * t31071) * t30934) * t31008 + ((-t29595 * t30970 + t29637 * t30973) * t30946 + t30934 * (t29595 * t30973 + t29637 * t30970)) * t32155 + (t29532 * t30970 + t29556 * t30973) * t30946 - (t29532 * t30973 - t29556 * t30970) * t30934) * t32092) * MDP(1) + (t29520 * t32086 + t29521 * t32084 + t29522 * t32082 + t29523 * t32080 + t29524 * t32078 + t29525 * t32076) * MDP(3) + (t29520 * t32085 + t29521 * t32083 + t29522 * t32081 - t29523 * t32079 - t29524 * t32077 - t29525 * t32075) * MDP(4) + (t29520 * t32110 + t29521 * t32109 + t29522 * t32108 + t29523 * t32103 + t29524 * t32102 + t29525 * t32100 + t29566 * t32128 + t29568 * t32126 + t29570 * t32127 + t29575 * t32125 + t29577 * t32124 + t29579 * t32123) * MDP(10) + (t29520 * t32107 + t29521 * t32106 + t29522 * t32105 + t29523 * t32104 + t29524 * t32101 + t29525 * t32099 + t29565 * t32128 + t29567 * t32126 + t29569 * t32127 + t29574 * t32125 + t29576 * t32124 + t29578 * t32123) * MDP(11) + (MDP(18) * t30213 + MDP(19) * t30214) * t30969 + ((-t30213 * t30971 + t30214 * t30968) * MDP(20) + (-MDP(18) * t30968 - MDP(19) * t30971) * t30575) * t30972; (-((-t29633 * t31709 + t31090 * t31618) * t30896 + ((-t29633 * t31875 + t31054) * t31030 - t32317 * t32186) * pkin(3) + (-t29633 * t31881 + (((-t31793 * t32317 - t31514) * t31589 + t31090) * pkin(3) + t31024 * t31054 + t32317 * t32183) * t30983) * pkin(9)) * t32087 - ((-t29629 * t31710 + t31092 * t31620) * t30896 + ((-t29629 * t31876 + t31056) * t31028 - t32315 * t32187) * pkin(3) + (-t29629 * t31882 + (((-t31793 * t32315 - t31516) * t31590 + t31092) * pkin(3) + t31022 * t31056 + t32315 * t32184) * t30983) * pkin(9)) * t32088 - ((-t29625 * t31711 + t31094 * t31622) * t30896 + ((-t29625 * t31877 + t31058) * t31026 - t32313 * t32188) * pkin(3) + (-t29625 * t31883 + (((-t31793 * t32313 - t31518) * t31591 + t31094) * pkin(3) + t31020 * t31058 + t32313 * t32185) * t30983) * pkin(9)) * t32089 - ((-t29618 * t31712 + t31096 * t31623) * t30896 + ((-t29618 * t31878 + t31060) * t31012 - t32311 * t32192) * pkin(3) + (-t29618 * t31884 + (((-t31793 * t32311 - t31520) * t31592 + t31096) * pkin(3) + t31006 * t31060 + t32311 * t32189) * t30983) * pkin(9)) * t32090 - ((-t29614 * t31713 + t31098 * t31624) * t30896 + ((-t29614 * t31879 + t31062) * t31010 - t32309 * t32193) * pkin(3) + (-t29614 * t31885 + (((-t31793 * t32309 - t31522) * t31593 + t31098) * pkin(3) + t31004 * t31062 + t32309 * t32190) * t30983) * pkin(9)) * t32091 - ((-t29610 * t31714 + t31100 * t31625) * t30896 + ((-t29610 * t31880 + t31064) * t31008 - t32307 * t32194) * pkin(3) + (-t29610 * t31886 + (((-t31793 * t32307 - t31524) * t31594 + t31100) * pkin(3) + t31002 * t31064 + t32307 * t32191) * t30983) * pkin(9)) * t32092) * MDP(1) + (t29510 * t32086 + t29512 * t32084 + t29513 * t32082 + t29515 * t32080 + t29517 * t32078 + t29519 * t32076) * MDP(3) + (t29510 * t32085 + t29512 * t32083 + t29513 * t32081 - t29515 * t32079 - t29517 * t32077 - t29519 * t32075) * MDP(4) + (t29510 * t32110 + t29512 * t32109 + t29513 * t32108 + t29515 * t32103 + t29517 * t32102 + t29519 * t32100 + t29566 * t32121 + t29568 * t32118 + t29570 * t32120 + t29575 * t32116 + t29577 * t32112 + t29579 * t32111) * MDP(10) + (t29510 * t32107 + t29512 * t32106 + t29513 * t32105 + t29515 * t32104 + t29517 * t32101 + t29519 * t32099 + t29565 * t32121 + t29567 * t32118 + t29569 * t32120 + t29574 * t32116 + t29576 * t32112 + t29578 * t32111) * MDP(11) + (-t30213 * t31747 + t30575 * t30680) * MDP(18) + (-t30214 * t31747 - t30575 * t30681) * MDP(19) + (-t30213 * t30681 - t30214 * t30680) * MDP(20); (-((-t29631 * t31709 + t31091 * t31618) * t30896 + ((-t29631 * t31875 + t31055) * t31030 - t32316 * t32186) * pkin(3) + (-t29631 * t31881 + (((-t31793 * t32316 - t31515) * t31589 + t31091) * pkin(3) + t31024 * t31055 + t32316 * t32183) * t30983) * pkin(9)) * t32087 - ((-t29627 * t31710 + t31093 * t31620) * t30896 + ((-t29627 * t31876 + t31057) * t31028 - t32314 * t32187) * pkin(3) + (-t29627 * t31882 + (((-t31793 * t32314 - t31517) * t31590 + t31093) * pkin(3) + t31022 * t31057 + t32314 * t32184) * t30983) * pkin(9)) * t32088 - ((-t29623 * t31711 + t31095 * t31622) * t30896 + ((-t29623 * t31877 + t31059) * t31026 - t32312 * t32188) * pkin(3) + (-t29623 * t31883 + (((-t31793 * t32312 - t31519) * t31591 + t31095) * pkin(3) + t31020 * t31059 + t32312 * t32185) * t30983) * pkin(9)) * t32089 - ((-t29616 * t31712 + t31097 * t31623) * t30896 + ((-t29616 * t31878 + t31061) * t31012 - t32310 * t32192) * pkin(3) + (-t29616 * t31884 + (((-t31793 * t32310 - t31521) * t31592 + t31097) * pkin(3) + t31006 * t31061 + t32310 * t32189) * t30983) * pkin(9)) * t32090 - ((-t29612 * t31713 + t31099 * t31624) * t30896 + ((-t29612 * t31879 + t31063) * t31010 - t32308 * t32193) * pkin(3) + (-t29612 * t31885 + (((-t31793 * t32308 - t31523) * t31593 + t31099) * pkin(3) + t31004 * t31063 + t32308 * t32190) * t30983) * pkin(9)) * t32091 - ((-t29608 * t31714 + t31101 * t31625) * t30896 + ((-t29608 * t31880 + t31065) * t31008 - t32306 * t32194) * pkin(3) + (-t29608 * t31886 + (((-t31793 * t32306 - t31525) * t31594 + t31101) * pkin(3) + t31002 * t31065 + t32306 * t32191) * t30983) * pkin(9)) * t32092) * MDP(1) + (t29508 * t32082 + t29509 * t32086 + t29511 * t32084 + t29514 * t32080 + t29516 * t32078 + t29518 * t32076) * MDP(3) + (t29508 * t32081 + t29509 * t32085 + t29511 * t32083 - t29514 * t32079 - t29516 * t32077 - t29518 * t32075) * MDP(4) + (t29508 * t32108 + t29509 * t32110 + t29511 * t32109 + t29514 * t32103 + t29516 * t32102 + t29518 * t32100 + t29566 * t32122 + t29568 * t32119 + t29570 * t32117 + t29575 * t32113 + t29577 * t32115 + t29579 * t32114) * MDP(10) + (t29508 * t32105 + t29509 * t32107 + t29511 * t32106 + t29514 * t32104 + t29516 * t32101 + t29518 * t32099 + t29565 * t32122 + t29567 * t32119 + t29569 * t32117 + t29574 * t32113 + t29576 * t32115 + t29578 * t32114) * MDP(11) + (t30213 * t31733 + t30575 * t30682) * MDP(18) + (t30214 * t31733 - t30575 * t30683) * MDP(19) + (-t30213 * t30683 - t30214 * t30682) * MDP(20);];
taugX  = t1;
