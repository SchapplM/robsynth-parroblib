% Analytische Jacobi-Matrix für parallelen Roboter
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorpose und aktiven Gelenkkoordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% Jinv [6x6]
%   Analytische Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-09-21 04:00
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jinv = P6PRRRRR6V2G4P6A1_Jinv(xP, qJ, pkin, koppelP, ...
legFrame)


%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(10,1),zeros(6,3),zeros(6,3)}
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G4P6A1_Jinv: qJ has to be [3x6] (double)');
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G4P6A1_Jinv: xP has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G4P6A1_Jinv: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G4P6A1_Jinv: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G4P6A1_Jinv: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From Jinv_para_matlab.m
% OptimizationMode: 2
% StartTime: 2020-09-21 03:07:59
% EndTime: 2020-09-21 03:09:09
% DurationCPUTime: 75.36s
% Computational Cost: add. (10716->1212), mult. (28822->2271), div. (54->18), fcn. (24082->74), ass. (0->876)
t490 = cos(qJ(3,6));
t458 = t490 ^ 2;
t492 = cos(qJ(3,5));
t459 = t492 ^ 2;
t494 = cos(qJ(3,4));
t460 = t494 ^ 2;
t508 = cos(qJ(3,3));
t461 = t508 ^ 2;
t510 = cos(qJ(3,2));
t462 = t510 ^ 2;
t538 = pkin(9) ^ 2;
t455 = pkin(3) ^ 2 - t538;
t996 = pkin(3) * t490;
t318 = pkin(2) * t996 + t455 * t458 + t538;
t469 = cos(pkin(6));
t456 = t469 ^ 2;
t854 = t456 * t538;
t1069 = t854 * t458 + t318 - t854;
t995 = pkin(3) * t492;
t319 = pkin(2) * t995 + t455 * t459 + t538;
t1068 = t854 * t459 + t319 - t854;
t994 = pkin(3) * t494;
t320 = pkin(2) * t994 + t455 * t460 + t538;
t1067 = t854 * t460 + t320 - t854;
t993 = pkin(3) * t508;
t321 = pkin(2) * t993 + t455 * t461 + t538;
t1066 = t854 * t461 + t321 - t854;
t992 = pkin(3) * t510;
t322 = pkin(2) * t992 + t455 * t462 + t538;
t1065 = t854 * t462 + t322 - t854;
t470 = cos(pkin(5));
t457 = t470 ^ 2;
t1013 = t457 - 0.1e1;
t512 = cos(qJ(3,1));
t1064 = t1013 * t512;
t1063 = t1013 * pkin(8);
t358 = t455 + t854;
t1041 = t358 * t1013;
t977 = t469 * pkin(9);
t371 = pkin(8) + t977;
t542 = t371 * t1064;
t484 = sin(qJ(3,6));
t465 = sin(pkin(6));
t985 = pkin(9) * t465;
t787 = pkin(2) * t985;
t1062 = t1041 * t484 + t787;
t486 = sin(qJ(3,5));
t1061 = t1041 * t486 + t787;
t488 = sin(qJ(3,4));
t1060 = t1041 * t488 + t787;
t502 = sin(qJ(3,3));
t1059 = t1041 * t502 + t787;
t504 = sin(qJ(3,2));
t1058 = t1041 * t504 + t787;
t506 = sin(qJ(3,1));
t1057 = t1041 * t506 + t787;
t1056 = 0.2e1 * pkin(3);
t463 = t512 ^ 2;
t785 = 0.2e1 * t463;
t466 = sin(pkin(5));
t845 = t466 * t470;
t729 = t465 * t845;
t676 = pkin(9) * t729;
t891 = (t470 + 0.1e1) * (t470 - 0.1e1);
t730 = t512 * t891;
t1055 = (-pkin(8) * t730 + 0.2e1 * (t463 - 0.1e1 / 0.2e1) * t676) * pkin(3);
t792 = (pkin(3) + pkin(9)) * (pkin(3) - pkin(9));
t622 = t792 + t854;
t1053 = t622 * t845;
t485 = sin(qJ(2,6));
t844 = t466 * t485;
t1052 = t1069 * t844;
t487 = sin(qJ(2,5));
t843 = t466 * t487;
t1051 = t1068 * t843;
t489 = sin(qJ(2,4));
t842 = t466 * t489;
t1050 = t1067 * t842;
t503 = sin(qJ(2,3));
t838 = t466 * t503;
t1049 = t1066 * t838;
t505 = sin(qJ(2,2));
t837 = t466 * t505;
t1048 = t1065 * t837;
t471 = cos(pkin(4));
t467 = sin(pkin(4));
t513 = cos(qJ(2,1));
t814 = t467 * t513;
t904 = t371 * t506;
t1047 = pkin(3) * t814 + t471 * t904;
t999 = pkin(3) * t371;
t595 = t891 * t999;
t382 = t462 - 0.1e1 / 0.2e1;
t649 = -0.2e1 * t676;
t617 = t382 * t649;
t731 = t469 * t891;
t658 = t538 * t731;
t677 = t891 * t985;
t791 = pkin(8) * t677 + t465 * t658;
t124 = t791 * t504 + pkin(3) * t617 + (t1053 * t504 + t595) * t510;
t376 = pkin(2) + 0.2e1 * t992;
t848 = t465 * t504;
t764 = pkin(9) * t848;
t223 = t376 * t764 + (t462 - 0.1e1) * t854 + t322;
t511 = cos(qJ(2,2));
t1046 = t124 * t511 + t223 * t837;
t381 = t461 - 0.1e1 / 0.2e1;
t618 = t381 * t649;
t123 = t791 * t502 + pkin(3) * t618 + (t1053 * t502 + t595) * t508;
t375 = pkin(2) + 0.2e1 * t993;
t849 = t465 * t502;
t765 = pkin(9) * t849;
t222 = t375 * t765 + (t461 - 0.1e1) * t854 + t321;
t509 = cos(qJ(2,3));
t1045 = t123 * t509 + t222 * t838;
t380 = t460 - 0.1e1 / 0.2e1;
t619 = t380 * t649;
t122 = t791 * t488 + pkin(3) * t619 + (t1053 * t488 + t595) * t494;
t374 = pkin(2) + 0.2e1 * t994;
t850 = t465 * t488;
t766 = pkin(9) * t850;
t221 = t374 * t766 + (t460 - 0.1e1) * t854 + t320;
t495 = cos(qJ(2,4));
t1044 = t122 * t495 + t221 * t842;
t379 = t459 - 0.1e1 / 0.2e1;
t620 = t379 * t649;
t121 = t791 * t486 + pkin(3) * t620 + (t1053 * t486 + t595) * t492;
t373 = pkin(2) + 0.2e1 * t995;
t851 = t465 * t486;
t767 = pkin(9) * t851;
t220 = t373 * t767 + (t459 - 0.1e1) * t854 + t319;
t493 = cos(qJ(2,5));
t1043 = t121 * t493 + t220 * t843;
t378 = t458 - 0.1e1 / 0.2e1;
t621 = t378 * t649;
t120 = t791 * t484 + pkin(3) * t621 + (t1053 * t484 + t595) * t490;
t372 = pkin(2) + 0.2e1 * t996;
t852 = t465 * t484;
t768 = pkin(9) * t852;
t219 = t372 * t768 + (t458 - 0.1e1) * t854 + t318;
t491 = cos(qJ(2,6));
t1042 = t120 * t491 + t219 * t844;
t1040 = t985 * t1013;
t464 = sin(pkin(10));
t468 = cos(pkin(10));
t805 = t471 * t491;
t293 = t464 * t805 + t468 * t485;
t296 = -t464 * t485 + t468 * t805;
t472 = legFrame(6,3);
t396 = sin(t472);
t408 = cos(t472);
t496 = legFrame(6,2);
t425 = sin(t496);
t431 = cos(t496);
t825 = t467 * t491;
t146 = t431 * t825 + (t293 * t408 + t296 * t396) * t425;
t133 = t146 * t999;
t281 = t396 * t468 + t408 * t464;
t937 = t281 * t467;
t213 = -t425 * t937 + t471 * t431;
t915 = t358 * t484;
t1039 = t213 * (t787 - t915) + t457 * (t213 * t915 - t133) + t133;
t804 = t471 * t493;
t294 = t464 * t804 + t468 * t487;
t297 = -t464 * t487 + t468 * t804;
t473 = legFrame(5,3);
t397 = sin(t473);
t409 = cos(t473);
t497 = legFrame(5,2);
t426 = sin(t497);
t432 = cos(t497);
t824 = t467 * t493;
t148 = t432 * t824 + (t294 * t409 + t297 * t397) * t426;
t134 = t148 * t999;
t282 = t397 * t468 + t409 * t464;
t935 = t282 * t467;
t214 = -t426 * t935 + t471 * t432;
t914 = t358 * t486;
t1038 = t214 * (t787 - t914) + t457 * (t214 * t914 - t134) + t134;
t803 = t471 * t495;
t295 = t464 * t803 + t468 * t489;
t298 = -t464 * t489 + t468 * t803;
t474 = legFrame(4,3);
t398 = sin(t474);
t410 = cos(t474);
t498 = legFrame(4,2);
t427 = sin(t498);
t433 = cos(t498);
t823 = t467 * t495;
t150 = t433 * t823 + (t295 * t410 + t298 * t398) * t427;
t135 = t150 * t999;
t283 = t398 * t468 + t410 * t464;
t933 = t283 * t467;
t215 = -t427 * t933 + t471 * t433;
t913 = t358 * t488;
t1037 = t215 * (t787 - t913) + t457 * (t215 * t913 - t135) + t135;
t797 = t471 * t509;
t305 = t464 * t797 + t468 * t503;
t308 = -t464 * t503 + t468 * t797;
t475 = legFrame(3,3);
t399 = sin(t475);
t411 = cos(t475);
t499 = legFrame(3,2);
t428 = sin(t499);
t434 = cos(t499);
t816 = t467 * t509;
t152 = t434 * t816 + (t305 * t411 + t308 * t399) * t428;
t136 = t152 * t999;
t284 = t399 * t468 + t411 * t464;
t931 = t284 * t467;
t216 = -t428 * t931 + t471 * t434;
t912 = t358 * t502;
t1036 = t216 * (t787 - t912) + t457 * (t216 * t912 - t136) + t136;
t796 = t471 * t511;
t306 = t464 * t796 + t468 * t505;
t309 = -t464 * t505 + t468 * t796;
t476 = legFrame(2,3);
t400 = sin(t476);
t412 = cos(t476);
t500 = legFrame(2,2);
t429 = sin(t500);
t435 = cos(t500);
t815 = t467 * t511;
t154 = t435 * t815 + (t306 * t412 + t309 * t400) * t429;
t137 = t154 * t999;
t285 = t400 * t468 + t412 * t464;
t929 = t285 * t467;
t217 = -t429 * t929 + t471 * t435;
t911 = t358 * t504;
t1035 = t217 * (t787 - t911) + t457 * (t217 * t911 - t137) + t137;
t507 = sin(qJ(2,1));
t795 = t471 * t513;
t307 = t464 * t795 + t468 * t507;
t310 = -t464 * t507 + t468 * t795;
t477 = legFrame(1,3);
t401 = sin(t477);
t413 = cos(t477);
t501 = legFrame(1,2);
t430 = sin(t501);
t436 = cos(t501);
t156 = t436 * t814 + (t307 * t413 + t310 * t401) * t430;
t138 = t156 * t999;
t812 = t471 * t436;
t286 = t401 * t468 + t413 * t464;
t928 = t286 * t467;
t218 = -t430 * t928 + t812;
t910 = t358 * t506;
t1034 = t218 * (t787 - t910) + t457 * (t218 * t910 - t138) + t138;
t1006 = pkin(3) * t218;
t771 = t371 * t985;
t1033 = ((t156 * t904 - t1006) * t457 + t1006) * t985 - (-pkin(2) * t1006 + t156 * t771) * t506;
t1007 = pkin(3) * t217;
t905 = t371 * t504;
t1032 = ((t154 * t905 - t1007) * t457 + t1007) * t985 - (-pkin(2) * t1007 + t154 * t771) * t504;
t1008 = pkin(3) * t216;
t906 = t371 * t502;
t1031 = ((t152 * t906 - t1008) * t457 + t1008) * t985 - (-pkin(2) * t1008 + t152 * t771) * t502;
t1009 = pkin(3) * t215;
t907 = t371 * t488;
t1030 = ((t150 * t907 - t1009) * t457 + t1009) * t985 - (-pkin(2) * t1009 + t150 * t771) * t488;
t1010 = pkin(3) * t214;
t908 = t371 * t486;
t1029 = ((t148 * t908 - t1010) * t457 + t1010) * t985 - (-pkin(2) * t1010 + t148 * t771) * t486;
t1011 = pkin(3) * t213;
t909 = t371 * t484;
t1028 = ((t146 * t909 - t1011) * t457 + t1011) * t985 - (-pkin(2) * t1011 + t146 * t771) * t484;
t1014 = -t358 / 0.2e1;
t195 = -t293 * t396 + t296 * t408;
t810 = t471 * t485;
t299 = t464 * t491 + t468 * t810;
t302 = -t464 * t810 + t468 * t491;
t198 = t299 * t408 + t302 * t396;
t786 = pkin(3) * pkin(9) * t470;
t686 = t465 * t786;
t1026 = -0.2e1 * t198 * t1014 - 0.2e1 * t195 * t686;
t196 = -t294 * t397 + t297 * t409;
t808 = t471 * t487;
t300 = t464 * t493 + t468 * t808;
t303 = -t464 * t808 + t468 * t493;
t199 = t300 * t409 + t303 * t397;
t1025 = -0.2e1 * t199 * t1014 - 0.2e1 * t196 * t686;
t197 = -t295 * t398 + t298 * t410;
t806 = t471 * t489;
t301 = t464 * t495 + t468 * t806;
t304 = -t464 * t806 + t468 * t495;
t200 = t301 * t410 + t304 * t398;
t1024 = -0.2e1 * t200 * t1014 - 0.2e1 * t197 * t686;
t207 = -t305 * t399 + t308 * t411;
t801 = t471 * t503;
t311 = t464 * t509 + t468 * t801;
t314 = -t464 * t801 + t468 * t509;
t210 = t311 * t411 + t314 * t399;
t1023 = -0.2e1 * t210 * t1014 - 0.2e1 * t207 * t686;
t208 = -t306 * t400 + t309 * t412;
t799 = t471 * t505;
t312 = t464 * t511 + t468 * t799;
t315 = -t464 * t799 + t468 * t511;
t211 = t312 * t412 + t315 * t400;
t1022 = -0.2e1 * t211 * t1014 - 0.2e1 * t208 * t686;
t209 = -t307 * t401 + t310 * t413;
t798 = t471 * t507;
t313 = t464 * t513 + t468 * t798;
t316 = -t464 * t798 + t468 * t513;
t212 = t313 * t413 + t316 * t401;
t1021 = -0.2e1 * t212 * t1014 - 0.2e1 * t209 * t686;
t648 = pkin(3) * t677;
t278 = t471 * t648;
t793 = t507 * t358;
t846 = t466 * t467;
t1020 = -0.2e1 * (t513 * t686 - t793 / 0.2e1) * t846 + 0.2e1 * t278;
t1019 = -0.2e1 * t458;
t1018 = -0.2e1 * t459;
t1017 = -0.2e1 * t460;
t1016 = -0.2e1 * t461;
t1015 = -0.2e1 * t462;
t1012 = pkin(2) * t512;
t352 = pkin(2) + 0.2e1 * t768;
t1005 = pkin(3) * t352;
t353 = pkin(2) + 0.2e1 * t767;
t1004 = pkin(3) * t353;
t354 = pkin(2) + 0.2e1 * t766;
t1003 = pkin(3) * t354;
t355 = pkin(2) + 0.2e1 * t765;
t1002 = pkin(3) * t355;
t356 = pkin(2) + 0.2e1 * t764;
t1001 = pkin(3) * t356;
t847 = t465 * t506;
t763 = pkin(9) * t847;
t357 = pkin(2) + 0.2e1 * t763;
t1000 = pkin(3) * t357;
t998 = pkin(3) * t457;
t997 = pkin(3) * t467;
t991 = pkin(3) * t512;
t990 = pkin(8) * t491;
t989 = pkin(8) * t493;
t988 = pkin(8) * t495;
t987 = pkin(8) * t509;
t986 = pkin(8) * t511;
t984 = pkin(9) * t466;
t704 = t491 * t1013;
t721 = t425 * t845;
t938 = t281 * t431;
t141 = t704 * t938 - t721;
t668 = t845 * t938;
t184 = t425 * t704 + t668;
t334 = t372 * t844;
t275 = t334 - t990;
t287 = -t396 * t464 + t408 * t468;
t361 = t455 * t490;
t516 = pkin(2) * pkin(3);
t342 = t361 + t516;
t345 = pkin(2) * t490 + t1056 * t458 - pkin(3);
t541 = (pkin(9) * t1063 + t658) * t465;
t890 = t425 * t457;
t563 = -t491 * t668 - t890;
t749 = t457 * t938;
t564 = t491 * t749 - t721;
t565 = t491 * t890 + t668;
t663 = t491 * t721;
t566 = t663 - t749;
t579 = -t990 * t996 + t1052;
t580 = pkin(9) * t731 + t1063;
t656 = 0.2e1 * t466 * t786;
t698 = t378 * t1056;
t925 = t287 * t485;
t744 = t431 * t925;
t811 = t471 * t484;
t813 = t469 * t538;
t831 = t467 * t484;
t841 = t466 * t491;
t546 = -t1013 * t854 - t455 * t457;
t616 = t371 * t845;
t594 = pkin(3) * t616;
t790 = pkin(8) * t676 + t516;
t709 = t729 * t813 + t790;
t106 = (t361 + t709) * t484 - ((t1019 + 0.1e1) * t998 + t345) * t985 + (t484 * t546 + t594) * t490;
t98 = t471 * t106;
t983 = ((t342 * t811 + t467 * t579) * t425 + (t287 * t1069 * t841 + (t342 * t831 - t471 * t579) * t281) * t431 + (((t184 * t813 + (pkin(8) * t565 + t425 * t275) * pkin(9)) * t484 - (t345 * t938 + t566 * t698) * pkin(9)) * t467 + ((-t141 * t813 - pkin(9) * (pkin(8) * t564 + t275 * t938)) * t484 - pkin(9) * (t345 * t425 + t563 * t698)) * t471 + t431 * t287 * ((-t485 * t658 + (-t1063 * t485 + t372 * t841) * pkin(9)) * t484 + t485 * t378 * t656)) * t465 + ((((-t1013 * t938 + t663) * t467 - (-t425 - t563) * t471) * t854 + (t467 * t566 + t471 * t563) * t792 - t1053 * t744) * t484 + ((-t141 * t471 + t184 * t467) * t977 + (t467 * t565 - t471 * t564) * pkin(8) - t580 * t744) * pkin(3)) * t490) / ((t334 * t768 + t1052) * t467 + t98 + ((t1053 * t490 + t541) * t484 + (t490 * t580 + t621) * pkin(3)) * t825);
t703 = t493 * t1013;
t720 = t426 * t845;
t936 = t282 * t432;
t142 = t703 * t936 - t720;
t667 = t845 * t936;
t185 = t426 * t703 + t667;
t335 = t373 * t843;
t276 = t335 - t989;
t288 = -t397 * t464 + t409 * t468;
t363 = t455 * t492;
t343 = t363 + t516;
t346 = pkin(2) * t492 + t1056 * t459 - pkin(3);
t889 = t426 * t457;
t559 = -t493 * t667 - t889;
t748 = t457 * t936;
t560 = t493 * t748 - t720;
t561 = t493 * t889 + t667;
t662 = t493 * t720;
t562 = t662 - t748;
t578 = -t989 * t995 + t1051;
t697 = t379 * t1056;
t923 = t288 * t487;
t743 = t432 * t923;
t809 = t471 * t486;
t829 = t467 * t486;
t840 = t466 * t493;
t107 = (t363 + t709) * t486 - ((t1018 + 0.1e1) * t998 + t346) * t985 + (t486 * t546 + t594) * t492;
t99 = t471 * t107;
t982 = ((t343 * t809 + t467 * t578) * t426 + (t288 * t1068 * t840 + (t343 * t829 - t471 * t578) * t282) * t432 + (((t185 * t813 + (pkin(8) * t561 + t426 * t276) * pkin(9)) * t486 - (t346 * t936 + t562 * t697) * pkin(9)) * t467 + ((-t142 * t813 - pkin(9) * (pkin(8) * t560 + t276 * t936)) * t486 - pkin(9) * (t346 * t426 + t559 * t697)) * t471 + t432 * t288 * ((-t487 * t658 + (-t1063 * t487 + t373 * t840) * pkin(9)) * t486 + t487 * t379 * t656)) * t465 + ((((-t1013 * t936 + t662) * t467 - (-t426 - t559) * t471) * t854 + (t467 * t562 + t471 * t559) * t792 - t1053 * t743) * t486 + ((-t142 * t471 + t185 * t467) * t977 + (t467 * t561 - t471 * t560) * pkin(8) - t580 * t743) * pkin(3)) * t492) / ((t335 * t767 + t1051) * t467 + t99 + ((t1053 * t492 + t541) * t486 + (t492 * t580 + t620) * pkin(3)) * t824);
t347 = pkin(2) * t494 + t1056 * t460 - pkin(3);
t365 = t455 * t494;
t108 = (t365 + t709) * t488 - ((t1017 + 0.1e1) * t998 + t347) * t985 + (t488 * t546 + t594) * t494;
t100 = t471 * t108;
t702 = t495 * t1013;
t719 = t427 * t845;
t934 = t283 * t433;
t143 = t702 * t934 - t719;
t666 = t845 * t934;
t186 = t427 * t702 + t666;
t336 = t374 * t842;
t277 = t336 - t988;
t289 = -t398 * t464 + t410 * t468;
t344 = t365 + t516;
t888 = t427 * t457;
t555 = -t495 * t666 - t888;
t747 = t457 * t934;
t556 = t495 * t747 - t719;
t557 = t495 * t888 + t666;
t661 = t495 * t719;
t558 = t661 - t747;
t577 = -t988 * t994 + t1050;
t696 = t380 * t1056;
t921 = t289 * t489;
t742 = t433 * t921;
t807 = t471 * t488;
t827 = t467 * t488;
t839 = t466 * t495;
t981 = ((t344 * t807 + t467 * t577) * t427 + (t289 * t1067 * t839 + (t344 * t827 - t471 * t577) * t283) * t433 + (((t186 * t813 + (pkin(8) * t557 + t277 * t427) * pkin(9)) * t488 - (t347 * t934 + t558 * t696) * pkin(9)) * t467 + ((-t143 * t813 - pkin(9) * (pkin(8) * t556 + t277 * t934)) * t488 - pkin(9) * (t427 * t347 + t555 * t696)) * t471 + t433 * t289 * ((-t489 * t658 + (-t1063 * t489 + t374 * t839) * pkin(9)) * t488 + t489 * t380 * t656)) * t465 + ((((-t1013 * t934 + t661) * t467 - (-t427 - t555) * t471) * t854 + (t467 * t558 + t471 * t555) * t792 - t1053 * t742) * t488 + ((-t143 * t471 + t186 * t467) * t977 + (t467 * t557 - t471 * t556) * pkin(8) - t580 * t742) * pkin(3)) * t494) / ((t336 * t766 + t1050) * t467 + t100 + ((t1053 * t494 + t541) * t488 + (t494 * t580 + t619) * pkin(3)) * t823);
t350 = pkin(2) * t508 + t1056 * t461 - pkin(3);
t368 = t455 * t508;
t112 = (t368 + t709) * t502 - ((t1016 + 0.1e1) * t998 + t350) * t985 + (t502 * t546 + t594) * t508;
t101 = t112 * t471;
t701 = t509 * t1013;
t718 = t428 * t845;
t932 = t284 * t434;
t144 = t701 * t932 - t718;
t665 = t845 * t932;
t187 = t428 * t701 + t665;
t338 = t375 * t838;
t279 = t338 - t987;
t290 = -t399 * t464 + t411 * t468;
t348 = t368 + t516;
t887 = t428 * t457;
t551 = -t509 * t665 - t887;
t746 = t457 * t932;
t552 = t509 * t746 - t718;
t553 = t509 * t887 + t665;
t660 = t509 * t718;
t554 = t660 - t746;
t576 = -t987 * t993 + t1049;
t695 = t381 * t1056;
t919 = t290 * t503;
t741 = t434 * t919;
t802 = t471 * t502;
t822 = t467 * t502;
t835 = t466 * t509;
t980 = ((t348 * t802 + t467 * t576) * t428 + (t290 * t1066 * t835 + (t348 * t822 - t471 * t576) * t284) * t434 + (((t187 * t813 + pkin(9) * (pkin(8) * t553 + t279 * t428)) * t502 - pkin(9) * (t350 * t932 + t554 * t695)) * t467 + ((-t144 * t813 - (pkin(8) * t552 + t279 * t932) * pkin(9)) * t502 - (t350 * t428 + t551 * t695) * pkin(9)) * t471 + t434 * t290 * ((-t503 * t658 + (-t1063 * t503 + t375 * t835) * pkin(9)) * t502 + t503 * t381 * t656)) * t465 + ((((-t1013 * t932 + t660) * t467 - (-t428 - t551) * t471) * t854 + (t467 * t554 + t471 * t551) * t792 - t1053 * t741) * t502 + ((-t144 * t471 + t187 * t467) * t977 + (t467 * t553 - t471 * t552) * pkin(8) - t580 * t741) * pkin(3)) * t508) / ((t338 * t765 + t1049) * t467 + t101 + ((t1053 * t508 + t541) * t502 + (t508 * t580 + t618) * pkin(3)) * t816);
t351 = pkin(2) * t510 + t1056 * t462 - pkin(3);
t370 = t455 * t510;
t113 = (t370 + t709) * t504 - ((t1015 + 0.1e1) * t998 + t351) * t985 + (t504 * t546 + t594) * t510;
t102 = t113 * t471;
t700 = t511 * t1013;
t717 = t429 * t845;
t930 = t285 * t435;
t145 = t700 * t930 - t717;
t664 = t845 * t930;
t188 = t429 * t700 + t664;
t339 = t376 * t837;
t280 = t339 - t986;
t291 = -t400 * t464 + t412 * t468;
t349 = t370 + t516;
t886 = t429 * t457;
t547 = -t511 * t664 - t886;
t745 = t457 * t930;
t548 = t511 * t745 - t717;
t549 = t511 * t886 + t664;
t659 = t511 * t717;
t550 = t659 - t745;
t575 = -t986 * t992 + t1048;
t694 = t382 * t1056;
t917 = t291 * t505;
t740 = t435 * t917;
t800 = t471 * t504;
t820 = t467 * t504;
t834 = t466 * t511;
t979 = ((t349 * t800 + t467 * t575) * t429 + (t291 * t1065 * t834 + (t349 * t820 - t471 * t575) * t285) * t435 + (((t188 * t813 + pkin(9) * (pkin(8) * t549 + t280 * t429)) * t504 - pkin(9) * (t351 * t930 + t550 * t694)) * t467 + ((-t145 * t813 - (pkin(8) * t548 + t280 * t930) * pkin(9)) * t504 - (t351 * t429 + t547 * t694) * pkin(9)) * t471 + t435 * t291 * ((-t505 * t658 + (-t1063 * t505 + t376 * t834) * pkin(9)) * t504 + t505 * t382 * t656)) * t465 + ((((-t1013 * t930 + t659) * t467 - (-t429 - t547) * t471) * t854 + (t467 * t550 + t471 * t547) * t792 - t1053 * t740) * t504 + ((-t145 * t471 + t188 * t467) * t977 + (t467 * t549 - t471 * t548) * pkin(8) - t580 * t740) * pkin(3)) * t510) / ((t339 * t764 + t1048) * t467 + t102 + ((t1053 * t510 + t541) * t504 + (t510 * t580 + t617) * pkin(3)) * t815);
t323 = pkin(2) * t991 + t455 * t463 + t538;
t377 = pkin(2) + 0.2e1 * t991;
t833 = t466 * t512;
t728 = t470 * t833;
t635 = t728 * t792;
t836 = t466 * t507;
t125 = ((pkin(8) * t513 * t891 + t377 * t836) * t985 + t513 * t635) * t506 + t323 * t836 - t513 * t1055;
t132 = (-t455 * t1064 + t790) * t506 - (t1012 + ((-0.2e1 * t457 + 0.2e1) * t463 + t1013) * pkin(3)) * t985 + pkin(3) * pkin(8) * t728;
t292 = -t401 * t464 + t413 * t468;
t206 = t286 * t795 + t292 * t507;
t395 = t463 - 0.1e1;
t794 = t506 * t512;
t716 = t470 * t794;
t274 = t395 * t507 + t513 * t716;
t674 = t506 * t730;
t699 = t513 * t1013;
t772 = (t763 + t991) * t977;
t39 = (t274 * t846 - t471 * t674) * t854 + (t467 * t699 + t471 * t845) * t772 + t125 * t467 + t471 * t132;
t832 = t466 * t513;
t927 = t286 * t471;
t978 = (((-t674 * t928 + (-t274 * t927 + t292 * (t395 * t513 - t507 * t716)) * t466) * t854 - (t206 * t891 - t845 * t928) * t772 + t132 * t928 - t125 * t927 + (((-t1063 * t507 + t377 * t832) * t985 - t507 * t635) * t506 + t323 * t832 + t507 * t1055) * t292) * t436 + t39 * t430) / t39;
t976 = t471 * pkin(3);
t232 = -t814 * t904 + t976;
t359 = t976 * t985;
t544 = -t506 * pkin(2) - t512 * t616;
t707 = (-t456 + 0.1e1) * pkin(9);
t333 = pkin(2) * t847 + t707;
t817 = t467 * t507;
t710 = t333 * t817;
t739 = t357 * t833;
t770 = t457 * t985;
t19 = 0.1e1 / ((t793 * t846 - 0.2e1 * t359) * t463 + t710 * t984 + (-t471 * t1041 + t1053 * t814) * t794 + (-t471 * t1012 + t1047 * t845 - t232 * t457 + t232) * t985 + ((t770 * t785 - t544) * t471 + (t507 * t739 + (t463 * t649 + t542) * t513) * t467) * pkin(3));
t517 = xP(6);
t449 = sin(t517);
t452 = cos(t517);
t531 = koppelP(1,2);
t537 = koppelP(1,1);
t325 = -t449 * t531 + t452 * t537;
t518 = xP(5);
t450 = sin(t518);
t453 = cos(t518);
t525 = koppelP(1,3);
t975 = t19 * (t325 * t453 + t450 * t525);
t33 = 0.1e1 / (t1042 * t467 + t98);
t520 = koppelP(6,3);
t526 = koppelP(6,2);
t532 = koppelP(6,1);
t974 = ((-t449 * t526 + t452 * t532) * t453 + t450 * t520) * t33;
t34 = 0.1e1 / (t1043 * t467 + t99);
t521 = koppelP(5,3);
t527 = koppelP(5,2);
t533 = koppelP(5,1);
t973 = ((-t449 * t527 + t452 * t533) * t453 + t450 * t521) * t34;
t35 = 0.1e1 / (t1044 * t467 + t100);
t522 = koppelP(4,3);
t528 = koppelP(4,2);
t534 = koppelP(4,1);
t972 = ((-t449 * t528 + t452 * t534) * t453 + t450 * t522) * t35;
t36 = 0.1e1 / (t1045 * t467 + t101);
t523 = koppelP(3,3);
t529 = koppelP(3,2);
t535 = koppelP(3,1);
t971 = ((-t449 * t529 + t452 * t535) * t453 + t450 * t523) * t36;
t37 = 0.1e1 / (t1046 * t467 + t102);
t524 = koppelP(2,3);
t530 = koppelP(2,2);
t536 = koppelP(2,1);
t970 = ((-t449 * t530 + t452 * t536) * t453 + t450 * t524) * t37;
t966 = t106 * t431;
t965 = t106 * t467;
t964 = t107 * t432;
t963 = t107 * t467;
t962 = t108 * t433;
t961 = t108 * t467;
t957 = t112 * t434;
t956 = t112 * t467;
t955 = t113 * t435;
t954 = t113 * t467;
t953 = t120 * t485;
t951 = t121 * t487;
t949 = t122 * t489;
t947 = t123 * t503;
t945 = t124 * t505;
t943 = t219 * t466;
t942 = t220 * t466;
t941 = t221 * t466;
t940 = t222 * t466;
t939 = t223 * t466;
t926 = t287 * t467;
t924 = t288 * t467;
t922 = t289 * t467;
t920 = t290 * t467;
t918 = t291 * t467;
t916 = t292 * t467;
t478 = legFrame(6,1);
t402 = sin(t478);
t903 = t402 * t425;
t479 = legFrame(5,1);
t403 = sin(t479);
t902 = t403 * t426;
t480 = legFrame(4,1);
t404 = sin(t480);
t901 = t404 * t427;
t481 = legFrame(3,1);
t405 = sin(t481);
t900 = t405 * t428;
t482 = legFrame(2,1);
t406 = sin(t482);
t899 = t406 * t429;
t483 = legFrame(1,1);
t407 = sin(t483);
t898 = t407 * t430;
t414 = cos(t478);
t897 = t414 * t425;
t415 = cos(t479);
t896 = t415 * t426;
t416 = cos(t480);
t895 = t416 * t427;
t417 = cos(t481);
t894 = t417 * t428;
t418 = cos(t482);
t893 = t418 * t429;
t419 = cos(t483);
t892 = t419 * t430;
t885 = t436 * t467;
t519 = xP(4);
t451 = sin(t519);
t884 = t451 * t526;
t883 = t451 * t527;
t882 = t451 * t528;
t881 = t451 * t529;
t880 = t451 * t530;
t879 = t451 * t531;
t878 = t451 * t532;
t877 = t451 * t533;
t876 = t451 * t534;
t875 = t451 * t535;
t874 = t451 * t536;
t873 = t451 * t537;
t872 = t453 * t520;
t871 = t453 * t521;
t870 = t453 * t522;
t869 = t453 * t523;
t868 = t453 * t524;
t867 = t453 * t525;
t454 = cos(t519);
t866 = t454 * t526;
t865 = t454 * t527;
t864 = t454 * t528;
t863 = t454 * t529;
t862 = t454 * t530;
t861 = t454 * t531;
t860 = t454 * t532;
t859 = t454 * t533;
t858 = t454 * t534;
t857 = t454 * t535;
t856 = t454 * t536;
t855 = t454 * t537;
t853 = t465 * t470;
t830 = t467 * t485;
t828 = t467 * t487;
t826 = t467 * t489;
t821 = t467 * t503;
t819 = t467 * t505;
t818 = t467 * t506;
t788 = pkin(2) * t997;
t784 = pkin(3) * t937;
t783 = pkin(3) * t935;
t782 = pkin(3) * t933;
t781 = pkin(3) * t931;
t780 = pkin(3) * t929;
t779 = pkin(3) * t928;
t778 = pkin(3) * t926;
t777 = pkin(3) * t924;
t776 = pkin(3) * t922;
t775 = pkin(3) * t920;
t774 = pkin(3) * t918;
t773 = pkin(3) * t916;
t769 = t467 * t985;
t179 = -t286 * t407 + t292 * t892;
t178 = t286 * t892 + t292 * t407;
t596 = t178 * t471 + t419 * t885;
t81 = t179 * t507 + t513 * t596;
t761 = t81 * t845;
t183 = t286 * t419 + t292 * t898;
t177 = t286 * t898 - t292 * t419;
t597 = t177 * t471 + t407 * t885;
t82 = t183 * t507 + t513 * t597;
t760 = t82 * t845;
t759 = t120 * t431 * t467;
t758 = t121 * t432 * t467;
t757 = t122 * t433 * t467;
t756 = t123 * t434 * t467;
t755 = t124 * t435 * t467;
t738 = t371 * t831;
t737 = t371 * t829;
t736 = t371 * t827;
t735 = t371 * t822;
t734 = t371 * t820;
t733 = t371 * t818;
t727 = t484 * t825;
t726 = t486 * t824;
t725 = t488 * t823;
t724 = t502 * t816;
t723 = t504 * t815;
t722 = t506 * t814;
t715 = t431 * t830;
t714 = t432 * t828;
t713 = t433 * t826;
t712 = t434 * t821;
t711 = t435 * t819;
t693 = t484 * t788;
t692 = t486 * t788;
t691 = t488 * t788;
t690 = t502 * t788;
t689 = t504 * t788;
t688 = t506 * t788;
t687 = pkin(2) * t769;
t678 = t371 * t769;
t675 = t1013 * t999;
t657 = 0.2e1 * t686;
t327 = pkin(2) * t852 + t707;
t384 = pkin(2) * t976;
t655 = ((pkin(3) * t825 + t371 * t811) * t853 + t327 * t830) * t984 + (t371 * t727 - t976) * t770 + (-t491 * t678 + t384) * t484 + t359;
t328 = pkin(2) * t851 + t707;
t654 = ((pkin(3) * t824 + t371 * t809) * t853 + t328 * t828) * t984 + (t371 * t726 - t976) * t770 + (-t493 * t678 + t384) * t486 + t359;
t329 = pkin(2) * t850 + t707;
t653 = ((pkin(3) * t823 + t371 * t807) * t853 + t329 * t826) * t984 + (t371 * t725 - t976) * t770 + (-t495 * t678 + t384) * t488 + t359;
t331 = pkin(2) * t849 + t707;
t652 = ((pkin(3) * t816 + t371 * t802) * t853 + t331 * t821) * t984 + (t371 * t724 - t976) * t770 + (-t509 * t678 + t384) * t502 + t359;
t332 = pkin(2) * t848 + t707;
t651 = ((pkin(3) * t815 + t371 * t800) * t853 + t332 * t819) * t984 + (t371 * t723 - t976) * t770 + (-t511 * t678 + t384) * t504 + t359;
t650 = (t1047 * t853 + t710) * t984 + (t371 * t722 - t976) * t770 + (-t513 * t678 + t384) * t506 + t359;
t640 = t715 * t943;
t639 = t714 * t942;
t638 = t713 * t941;
t637 = t712 * t940;
t636 = t711 * t939;
t634 = -0.2e1 * t648;
t633 = 0.2e1 * t648;
t147 = -t715 + (-t299 * t396 + t302 * t408) * t425;
t609 = t147 * t1005 - t470 * (t146 * t915 + t213 * t999);
t149 = -t714 + (-t300 * t397 + t303 * t409) * t426;
t608 = t149 * t1004 - t470 * (t148 * t914 + t214 * t999);
t151 = -t713 + (-t301 * t398 + t304 * t410) * t427;
t607 = t151 * t1003 - t470 * (t150 * t913 + t215 * t999);
t153 = -t712 + (-t311 * t399 + t314 * t411) * t428;
t606 = t153 * t1002 - t470 * (t152 * t912 + t216 * t999);
t155 = -t711 + (-t312 * t400 + t315 * t412) * t429;
t605 = t155 * t1001 - t470 * (t154 * t911 + t217 * t999);
t157 = -t436 * t817 + (-t313 * t401 + t316 * t413) * t430;
t604 = t157 * t1000 - t470 * (t156 * t910 + t218 * t999);
t598 = t467 * t633;
t593 = t466 * (pkin(9) * t333 + t358 * t463);
t192 = t281 * t805 + t925;
t592 = t192 * t909 + t784;
t193 = t282 * t804 + t923;
t591 = t193 * t908 + t783;
t194 = t283 * t803 + t921;
t590 = t194 * t907 + t782;
t204 = t284 * t797 + t919;
t586 = t204 * t906 + t781;
t205 = t285 * t796 + t917;
t585 = t205 * t905 + t780;
t584 = t206 * t904 + t779;
t572 = -t358 * t281 * t831 - t192 * t999;
t571 = -t358 * t282 * t829 - t193 * t999;
t570 = -t358 * t283 * t827 - t194 * t999;
t569 = -t358 * t284 * t822 - t204 * t999;
t568 = -t358 * t285 * t820 - t205 * t999;
t567 = -t358 * t286 * t818 - t206 * t999;
t545 = -t845 * t904 + t1012;
t540 = t1013 * t622;
t341 = t371 * t976;
t326 = t449 * t537 + t452 * t531;
t268 = -t400 * t406 + t412 * t893;
t267 = t400 * t893 + t406 * t412;
t266 = -t399 * t405 + t411 * t894;
t265 = t399 * t894 + t405 * t411;
t264 = -t398 * t404 + t410 * t895;
t263 = t398 * t895 + t404 * t410;
t262 = -t397 * t403 + t409 * t896;
t261 = t397 * t896 + t403 * t409;
t260 = -t396 * t402 + t408 * t897;
t259 = t396 * t897 + t402 * t408;
t258 = t400 * t418 + t412 * t899;
t257 = t400 * t899 - t412 * t418;
t256 = t399 * t417 + t411 * t900;
t255 = t399 * t900 - t411 * t417;
t254 = t398 * t416 + t410 * t901;
t253 = t398 * t901 - t410 * t416;
t252 = t397 * t415 + t409 * t902;
t251 = t397 * t902 - t409 * t415;
t250 = t396 * t414 + t408 * t903;
t249 = t396 * t903 - t408 * t414;
t247 = t325 * t450 - t867;
t203 = -t286 * t798 + t292 * t513;
t202 = -t285 * t799 + t291 * t511;
t201 = -t284 * t801 + t290 * t509;
t191 = -t283 * t806 + t289 * t495;
t190 = -t282 * t808 + t288 * t493;
t189 = -t281 * t810 + t287 * t491;
t181 = (t505 * t1014 + t511 * t686) * t846 - t278;
t180 = (t503 * t1014 + t509 * t686) * t846 - t278;
t176 = (t489 * t1014 + t495 * t686) * t846 - t278;
t175 = (t487 * t1014 + t493 * t686) * t846 - t278;
t174 = (t485 * t1014 + t491 * t686) * t846 - t278;
t167 = (t450 * t856 - t880) * t452 + (-t450 * t862 - t874) * t449 - t454 * t868;
t166 = (t450 * t874 + t862) * t452 + t449 * (-t450 * t880 + t856) - t451 * t868;
t165 = (t450 * t857 - t881) * t452 + (-t450 * t863 - t875) * t449 - t454 * t869;
t164 = (t450 * t875 + t863) * t452 + t449 * (-t450 * t881 + t857) - t451 * t869;
t163 = (t450 * t858 - t882) * t452 + (-t450 * t864 - t876) * t449 - t454 * t870;
t162 = (t450 * t876 + t864) * t452 + t449 * (-t450 * t882 + t858) - t451 * t870;
t161 = (t450 * t859 - t883) * t452 + (-t450 * t865 - t877) * t449 - t454 * t871;
t160 = (t450 * t877 + t865) * t452 + t449 * (-t450 * t883 + t859) - t451 * t871;
t159 = (t450 * t860 - t884) * t452 + (-t450 * t866 - t878) * t449 - t454 * t872;
t158 = (t450 * t878 + t866) * t452 + t449 * (-t450 * t884 + t860) - t451 * t872;
t140 = -t178 * t467 + t419 * t812;
t139 = -t177 * t467 + t407 * t812;
t91 = (t358 * t722 + t341) * t845 + (t357 * t836 + t371 * t699) * t997 - t1057 * t471;
t90 = (t358 * t723 + t341) * t845 + (t356 * t837 + t371 * t700) * t997 - t1058 * t471;
t89 = (t358 * t724 + t341) * t845 + (t355 * t838 + t371 * t701) * t997 - t1059 * t471;
t80 = t183 * t513 - t507 * t597;
t79 = t179 * t513 - t507 * t596;
t78 = (t358 * t725 + t341) * t845 + (t354 * t842 + t371 * t702) * t997 - t1060 * t471;
t77 = (t358 * t726 + t341) * t845 + (t353 * t843 + t371 * t703) * t997 - t1061 * t471;
t76 = (t358 * t727 + t341) * t845 + (t352 * t844 + t371 * t704) * t997 - t1062 * t471;
t75 = (pkin(3) * t209 - t292 * t733) * t853 + t212 * t333;
t74 = (pkin(3) * t208 - t291 * t734) * t853 + t211 * t332;
t73 = (pkin(3) * t207 - t290 * t735) * t853 + t210 * t331;
t72 = (t209 * t910 - t371 * t773) * t470 + t212 * t1000;
t71 = (t208 * t911 - t371 * t774) * t470 + t211 * t1001;
t70 = (t207 * t912 - t371 * t775) * t470 + t210 * t1002;
t69 = (pkin(3) * t197 - t289 * t736) * t853 + t200 * t329;
t68 = (pkin(3) * t196 - t288 * t737) * t853 + t199 * t328;
t67 = (pkin(3) * t195 - t287 * t738) * t853 + t198 * t327;
t66 = t156 * t657 + t157 * t358;
t65 = t154 * t657 + t155 * t358;
t64 = t152 * t657 + t153 * t358;
t63 = (t197 * t913 - t371 * t776) * t470 + t200 * t1003;
t62 = (t196 * t914 - t371 * t777) * t470 + t199 * t1004;
t61 = (t195 * t915 - t371 * t778) * t470 + t198 * t1005;
t60 = t150 * t657 + t151 * t358;
t59 = t148 * t657 + t149 * t358;
t58 = t146 * t657 + t147 * t358;
t57 = t292 * t688 - (t209 * t904 + t773) * t1040;
t56 = t291 * t689 - (t208 * t905 + t774) * t1040;
t55 = t290 * t690 - (t207 * t906 + t775) * t1040;
t54 = t289 * t691 - (t197 * t907 + t776) * t1040;
t53 = t288 * t692 - (t196 * t908 + t777) * t1040;
t52 = t287 * t693 - (t195 * t909 + t778) * t1040;
t51 = t1057 * t916 + t209 * t675;
t50 = t1058 * t918 + t208 * t675;
t49 = t1059 * t920 + t207 * t675;
t48 = -(pkin(3) * t156 + t218 * t904) * t853 + t333 * t157;
t47 = -(pkin(3) * t154 + t217 * t905) * t853 + t332 * t155;
t46 = -(pkin(3) * t152 + t216 * t906) * t853 + t331 * t153;
t45 = t1060 * t922 + t197 * t675;
t44 = t1061 * t924 + t196 * t675;
t43 = t1062 * t926 + t195 * t675;
t42 = -(pkin(3) * t150 + t215 * t907) * t853 + t329 * t151;
t41 = -(pkin(3) * t148 + t214 * t908) * t853 + t328 * t149;
t40 = -(pkin(3) * t146 + t213 * t909) * t853 + t327 * t147;
t32 = 0.1e1 / (t463 * t1020 + t512 * t91 + t650);
t31 = 0.1e1 / (t181 * t1015 + t510 * t90 + t651);
t30 = 0.1e1 / (t180 * t1016 + t508 * t89 + t652);
t29 = 0.1e1 / (t176 * t1017 + t494 * t78 + t653);
t28 = 0.1e1 / (t175 * t1018 + t492 * t77 + t654);
t27 = 0.1e1 / (t174 * t1019 + t490 * t76 + t655);
t12 = (-t418 * t955 - t1046 * (t267 * t468 + t268 * t464)) * t471 + (-t418 * t755 + (-t267 * t464 + t268 * t468) * t939) * t511 + (t267 * t954 - t268 * t945) * t468 + (t267 * t945 + t268 * t954) * t464 - t418 * t636;
t11 = (-t417 * t957 - t1045 * (t265 * t468 + t266 * t464)) * t471 + (-t417 * t756 + (-t265 * t464 + t266 * t468) * t940) * t509 + (t265 * t956 - t266 * t947) * t468 + (t265 * t947 + t266 * t956) * t464 - t417 * t637;
t10 = (-t406 * t955 - t1046 * (t257 * t468 + t258 * t464)) * t471 + (-t406 * t755 + (-t257 * t464 + t258 * t468) * t939) * t511 + (t257 * t954 - t258 * t945) * t468 + (t257 * t945 + t258 * t954) * t464 - t406 * t636;
t9 = (-t405 * t957 - t1045 * (t255 * t468 + t256 * t464)) * t471 + (-t405 * t756 + (-t255 * t464 + t256 * t468) * t940) * t509 + (t255 * t956 - t256 * t947) * t468 + (t255 * t947 + t256 * t956) * t464 - t405 * t637;
t8 = (-t416 * t962 - t1044 * (t263 * t468 + t264 * t464)) * t471 + (-t416 * t757 + (-t263 * t464 + t264 * t468) * t941) * t495 + (t263 * t961 - t264 * t949) * t468 + (t263 * t949 + t264 * t961) * t464 - t416 * t638;
t7 = (-t415 * t964 - t1043 * (t261 * t468 + t262 * t464)) * t471 + (-t415 * t758 + (-t261 * t464 + t262 * t468) * t942) * t493 + (t261 * t963 - t262 * t951) * t468 + (t261 * t951 + t262 * t963) * t464 - t415 * t639;
t6 = (-t414 * t966 - t1042 * (t259 * t468 + t260 * t464)) * t471 + (-t414 * t759 + (-t259 * t464 + t260 * t468) * t943) * t491 + (t259 * t965 - t260 * t953) * t468 + (t259 * t953 + t260 * t965) * t464 - t414 * t640;
t5 = (-t404 * t962 - t1044 * (t253 * t468 + t254 * t464)) * t471 + (-t404 * t757 + (-t253 * t464 + t254 * t468) * t941) * t495 + (t253 * t961 - t254 * t949) * t468 + (t253 * t949 + t254 * t961) * t464 - t404 * t638;
t4 = (-t403 * t964 - t1043 * (t251 * t468 + t252 * t464)) * t471 + (-t403 * t758 + (-t251 * t464 + t252 * t468) * t942) * t493 + (t251 * t963 - t252 * t951) * t468 + (t251 * t951 + t252 * t963) * t464 - t403 * t639;
t3 = (-t402 * t966 - t1042 * (t249 * t468 + t250 * t464)) * t471 + (-t402 * t759 + (-t249 * t464 + t250 * t468) * t943) * t491 + (t249 * t965 - t250 * t953) * t468 + (t249 * t953 + t250 * t965) * t464 - t402 * t640;
t2 = t79 * t593 + (-t1053 * t81 + t140 * t540) * t794 + (t140 * t544 - t542 * t81 + t79 * t739) * pkin(3) + (t1013 * (pkin(3) * t140 - t81 * t904) + t545 * t140 + ((-t140 * t457 + t140 + t761) * t785 - t761) * pkin(3)) * t985;
t1 = t80 * t593 + (-t1053 * t82 + t139 * t540) * t794 + (t139 * t544 - t542 * t82 + t80 * t739) * pkin(3) + (t1013 * (t139 * pkin(3) - t82 * t904) + t545 * t139 + ((-t139 * t457 + t139 + t760) * t785 - t760) * pkin(3)) * t985;
t13 = [((((t203 * t358 + t206 * t657) * t466 + t286 * t598) * t436 + t430 * t1020) * t463 + ((((-t206 * t910 + t371 * t779) * t470 + t203 * t1000) * t466 + t567 * t457 - t286 * t687 - t567) * t436 + t91 * t430) * t512 + (t286 * t688 + (t203 * t333 * t466 + (-(pkin(3) * t206 - t286 * t733) * t845 - t584 * t457 + t584) * t465) * pkin(9)) * t436 + t650 * t430) * t32, (((t419 * t1021 + t407 * t66) * t466 + (t218 * t407 + t419 * t916) * t634) * t463 + ((t407 * t604 + t72 * t419) * t466 + t1034 * t407 + t419 * t51) * t512 + (t407 * t48 + t419 * t75) * t984 - t1033 * t407 - t419 * t57) * t32, (((t407 * t1021 - t419 * t66) * t466 + (t218 * t419 - t407 * t916) * t633) * t463 + ((t72 * t407 - t419 * t604) * t466 - t1034 * t419 + t407 * t51) * t512 - (-t407 * t75 + t419 * t48) * t984 + t1033 * t419 - t407 * t57) * t32, (t1 * (t247 * t454 - t326 * t451) - t2 * (t247 * t451 + t326 * t454)) * t19, -((t450 * t855 - t879) * t452 + (-t450 * t861 - t873) * t449 - t454 * t867) * t978 + t2 * t975, -((t450 * t873 + t861) * t452 + (-t450 * t879 + t855) * t449 - t451 * t867) * t978 + t1 * t975; ((((t202 * t358 + t205 * t657) * t466 + t285 * t598) * t435 - 0.2e1 * t181 * t429) * t462 + ((((-t205 * t911 + t371 * t780) * t470 + t202 * t1001) * t466 + t568 * t457 - t285 * t687 - t568) * t435 + t90 * t429) * t510 + (t285 * t689 + (t202 * t332 * t466 + (-(pkin(3) * t205 - t285 * t734) * t845 - t585 * t457 + t585) * t465) * pkin(9)) * t435 + t651 * t429) * t31, (((t418 * t1022 + t406 * t65) * t466 + (t217 * t406 + t418 * t918) * t634) * t462 + ((t406 * t605 + t71 * t418) * t466 + t1035 * t406 + t418 * t50) * t510 + (t406 * t47 + t418 * t74) * t984 - t1032 * t406 - t418 * t56) * t31, (((t406 * t1022 - t418 * t65) * t466 + (t217 * t418 - t406 * t918) * t633) * t462 + ((t71 * t406 - t418 * t605) * t466 - t1035 * t418 + t406 * t50) * t510 - (-t406 * t74 + t418 * t47) * t984 + t1032 * t418 - t406 * t56) * t31, (t10 * t167 - t12 * t166) * t37, t12 * t970 - t167 * t979, t10 * t970 - t166 * t979; ((((t201 * t358 + t204 * t657) * t466 + t284 * t598) * t434 - 0.2e1 * t180 * t428) * t461 + ((((-t204 * t912 + t371 * t781) * t470 + t201 * t1002) * t466 + t569 * t457 - t284 * t687 - t569) * t434 + t89 * t428) * t508 + (t284 * t690 + (t201 * t331 * t466 + (-(pkin(3) * t204 - t284 * t735) * t845 - t586 * t457 + t586) * t465) * pkin(9)) * t434 + t652 * t428) * t30, (((t417 * t1023 + t405 * t64) * t466 + (t216 * t405 + t417 * t920) * t634) * t461 + ((t405 * t606 + t70 * t417) * t466 + t1036 * t405 + t417 * t49) * t508 + (t405 * t46 + t417 * t73) * t984 - t1031 * t405 - t417 * t55) * t30, (((t405 * t1023 - t417 * t64) * t466 + (t216 * t417 - t405 * t920) * t633) * t461 + ((t70 * t405 - t417 * t606) * t466 - t1036 * t417 + t405 * t49) * t508 - (-t405 * t73 + t417 * t46) * t984 + t1031 * t417 - t405 * t55) * t30, (-t11 * t164 + t165 * t9) * t36, t11 * t971 - t165 * t980, -t164 * t980 + t9 * t971; ((((t191 * t358 + t194 * t657) * t466 + t283 * t598) * t433 - 0.2e1 * t176 * t427) * t460 + ((((-t194 * t913 + t371 * t782) * t470 + t191 * t1003) * t466 + t570 * t457 - t283 * t687 - t570) * t433 + t78 * t427) * t494 + (t283 * t691 + (t191 * t329 * t466 + (-(pkin(3) * t194 - t283 * t736) * t845 - t590 * t457 + t590) * t465) * pkin(9)) * t433 + t653 * t427) * t29, (((t416 * t1024 + t404 * t60) * t466 + (t215 * t404 + t416 * t922) * t634) * t460 + ((t404 * t607 + t63 * t416) * t466 + t1037 * t404 + t416 * t45) * t494 + (t404 * t42 + t416 * t69) * t984 - t1030 * t404 - t416 * t54) * t29, (((t404 * t1024 - t416 * t60) * t466 + (t215 * t416 - t404 * t922) * t633) * t460 + ((t63 * t404 - t416 * t607) * t466 - t1037 * t416 + t404 * t45) * t494 - (-t404 * t69 + t416 * t42) * t984 + t1030 * t416 - t404 * t54) * t29, (-t162 * t8 + t163 * t5) * t35, -t163 * t981 + t8 * t972, -t162 * t981 + t5 * t972; ((((t190 * t358 + t193 * t657) * t466 + t282 * t598) * t432 - 0.2e1 * t175 * t426) * t459 + ((((-t193 * t914 + t371 * t783) * t470 + t190 * t1004) * t466 + t571 * t457 - t282 * t687 - t571) * t432 + t77 * t426) * t492 + (t282 * t692 + (t190 * t328 * t466 + (-(pkin(3) * t193 - t282 * t737) * t845 - t591 * t457 + t591) * t465) * pkin(9)) * t432 + t654 * t426) * t28, (((t415 * t1025 + t403 * t59) * t466 + (t214 * t403 + t415 * t924) * t634) * t459 + ((t403 * t608 + t62 * t415) * t466 + t1038 * t403 + t415 * t44) * t492 + (t403 * t41 + t415 * t68) * t984 - t1029 * t403 - t415 * t53) * t28, (((t403 * t1025 - t415 * t59) * t466 + (t214 * t415 - t403 * t924) * t633) * t459 + ((t62 * t403 - t415 * t608) * t466 - t1038 * t415 + t403 * t44) * t492 - (-t403 * t68 + t41 * t415) * t984 + t1029 * t415 - t403 * t53) * t28, (-t160 * t7 + t161 * t4) * t34, -t161 * t982 + t7 * t973, -t160 * t982 + t4 * t973; ((((t189 * t358 + t192 * t657) * t466 + t281 * t598) * t431 - 0.2e1 * t174 * t425) * t458 + ((((-t192 * t915 + t371 * t784) * t470 + t189 * t1005) * t466 + t572 * t457 - t281 * t687 - t572) * t431 + t76 * t425) * t490 + (t281 * t693 + (t189 * t327 * t466 + (-(pkin(3) * t192 - t281 * t738) * t845 - t592 * t457 + t592) * t465) * pkin(9)) * t431 + t655 * t425) * t27, (((t414 * t1026 + t402 * t58) * t466 + (t213 * t402 + t414 * t926) * t634) * t458 + ((t402 * t609 + t61 * t414) * t466 + t1039 * t402 + t414 * t43) * t490 + (t40 * t402 + t414 * t67) * t984 - t1028 * t402 - t414 * t52) * t27, (((t402 * t1026 - t414 * t58) * t466 + (t213 * t414 - t402 * t926) * t633) * t458 + ((t61 * t402 - t414 * t609) * t466 - t1039 * t414 + t402 * t43) * t490 - (t40 * t414 - t402 * t67) * t984 + t1028 * t414 - t402 * t52) * t27, (-t158 * t6 + t159 * t3) * t33, -t159 * t983 + t6 * t974, -t158 * t983 + t3 * t974;];
Jinv  = t13;
