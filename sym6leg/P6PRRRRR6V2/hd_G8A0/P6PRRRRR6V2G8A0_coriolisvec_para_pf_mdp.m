% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6PRRRRR6V2G8P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRRRRR6V2G8P1A0_convert_par2_MPV_fixb.m

% Output:
% taucX [6x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-05-18 12:11
% Revision: 36f6366a01c4a552c0708fcd8ed3e0fb9da693e2 (2019-05-16)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P6PRRRRR6V2G8P1A0_coriolisvec_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-05-18 10:52:22
% EndTime: 2019-05-18 12:00:26
% DurationCPUTime: 4279.06s
% Computational Cost: add. (43251970->5435), mult. (99496069->9466), div. (71796->72), fcn. (65040341->74), ass. (0->3163)
t27441 = xP(5);
t27362 = sin(t27441);
t29361 = xP(6);
t27361 = sin(t29361);
t27450 = koppelP(6,2);
t28563 = cos(t29361);
t29370 = koppelP(6,1);
t27909 = t29370 * t28563;
t27586 = -t27361 * t27450 + t27909;
t27364 = cos(t27441);
t27444 = koppelP(6,3);
t28772 = t27364 * t27444;
t26820 = t27362 * t27586 - t28772;
t27180 = t27361 * t29370 + t27450 * t28563;
t27442 = xP(4);
t27363 = sin(t27442);
t27365 = cos(t27442);
t29507 = t26820 * t27363 + t27180 * t27365;
t26532 = t26820 * t27365 - t27180 * t27363;
t27451 = koppelP(5,2);
t29371 = koppelP(5,1);
t27910 = t29371 * t28563;
t27587 = -t27361 * t27451 + t27910;
t27445 = koppelP(5,3);
t28771 = t27364 * t27445;
t26821 = t27362 * t27587 - t28771;
t27181 = t27361 * t29371 + t27451 * t28563;
t29506 = t26821 * t27363 + t27181 * t27365;
t26533 = t26821 * t27365 - t27181 * t27363;
t27452 = koppelP(4,2);
t29372 = koppelP(4,1);
t27911 = t29372 * t28563;
t27588 = -t27361 * t27452 + t27911;
t27446 = koppelP(4,3);
t28770 = t27364 * t27446;
t26822 = t27362 * t27588 - t28770;
t27182 = t27361 * t29372 + t27452 * t28563;
t29505 = t26822 * t27363 + t27182 * t27365;
t26534 = t26822 * t27365 - t27182 * t27363;
t27453 = koppelP(3,2);
t29373 = koppelP(3,1);
t27912 = t29373 * t28563;
t27589 = -t27361 * t27453 + t27912;
t27447 = koppelP(3,3);
t28769 = t27364 * t27447;
t26823 = t27362 * t27589 - t28769;
t27183 = t27361 * t29373 + t27453 * t28563;
t29504 = t26823 * t27363 + t27183 * t27365;
t26535 = t26823 * t27365 - t27183 * t27363;
t27454 = koppelP(2,2);
t29374 = koppelP(2,1);
t27913 = t29374 * t28563;
t27590 = -t27361 * t27454 + t27913;
t27448 = koppelP(2,3);
t28768 = t27364 * t27448;
t26824 = t27362 * t27590 - t28768;
t27184 = t27361 * t29374 + t27454 * t28563;
t29503 = t26824 * t27363 + t27184 * t27365;
t26536 = t26824 * t27365 - t27184 * t27363;
t27455 = koppelP(1,2);
t29375 = koppelP(1,1);
t27914 = t29375 * t28563;
t27591 = -t27361 * t27455 + t27914;
t27449 = koppelP(1,3);
t28767 = t27364 * t27449;
t26825 = t27362 * t27591 - t28767;
t27185 = t27361 * t29375 + t27455 * t28563;
t29502 = t26825 * t27363 + t27185 * t27365;
t26537 = t26825 * t27365 - t27185 * t27363;
t27390 = cos(pkin(4));
t27384 = sin(pkin(6));
t27313 = t27384 * pkin(9);
t28562 = pkin(3) * t27313;
t27389 = cos(pkin(5));
t28833 = (t27389 + 0.1e1) * (t27389 - 0.1e1);
t27782 = t28562 * t28833;
t27677 = t27390 * t27782;
t27047 = 0.2e1 * t27677;
t27411 = cos(qJ(3,6));
t27373 = t27411 ^ 2;
t27406 = sin(qJ(2,6));
t27412 = cos(qJ(2,6));
t28677 = t27389 * t27412;
t28137 = t27384 * t28677;
t27933 = pkin(9) * t28137;
t27385 = sin(pkin(5));
t27386 = sin(pkin(4));
t28724 = t27385 * t27386;
t27458 = pkin(3) ^ 2;
t27456 = pkin(9) ^ 2;
t27388 = cos(pkin(6));
t27367 = t27388 ^ 2;
t28601 = t27456 * t27367;
t27999 = -t27456 + t28601;
t27259 = t27458 + t27999;
t29360 = -t27259 / 0.2e1;
t28316 = (pkin(3) * t27933 + t27406 * t29360) * t28724;
t26509 = (t27047 - 0.2e1 * t28316) * t27373;
t29298 = pkin(9) * t27367;
t28461 = pkin(9) - t29298;
t27405 = sin(qJ(3,6));
t28736 = t27384 * t27405;
t27193 = pkin(2) * t28736 + t28461;
t28720 = t27385 * t27406;
t27016 = t27193 * t28720;
t28723 = t27385 * t27389;
t27270 = pkin(3) * t28723;
t29295 = pkin(9) * t27388;
t27299 = pkin(8) + t29295;
t27369 = t27389 ^ 2;
t29359 = t27369 - 0.1e1;
t28458 = t27405 * t29359;
t26781 = t27299 * t28458 + t27270;
t27521 = t26781 * t27412;
t28471 = t27369 * t27313;
t28065 = pkin(3) * t28471;
t28737 = t27384 * t27389;
t28469 = pkin(9) * t28737;
t27934 = t27385 * t28469;
t27747 = t27299 * t27934;
t27023 = t27405 * t27747;
t27343 = pkin(2) * t27405;
t27238 = t27343 + t27313;
t28575 = pkin(3) * t27238 + t27023;
t29296 = pkin(9) * t27386;
t28093 = (t27384 * t27521 + t27016) * t29296 + t26509 + (-t28065 + t28575) * t27390;
t27413 = cos(qJ(3,5));
t27374 = t27413 ^ 2;
t27408 = sin(qJ(2,5));
t27414 = cos(qJ(2,5));
t28676 = t27389 * t27414;
t28136 = t27384 * t28676;
t27932 = pkin(9) * t28136;
t28315 = (pkin(3) * t27932 + t27408 * t29360) * t28724;
t26510 = (t27047 - 0.2e1 * t28315) * t27374;
t27407 = sin(qJ(3,5));
t28734 = t27384 * t27407;
t27194 = pkin(2) * t28734 + t28461;
t28718 = t27385 * t27408;
t27017 = t27194 * t28718;
t28457 = t27407 * t29359;
t26782 = t27299 * t28457 + t27270;
t27520 = t26782 * t27414;
t27024 = t27407 * t27747;
t27344 = pkin(2) * t27407;
t27239 = t27344 + t27313;
t28574 = pkin(3) * t27239 + t27024;
t28092 = (t27384 * t27520 + t27017) * t29296 + t26510 + (-t28065 + t28574) * t27390;
t27415 = cos(qJ(3,4));
t27375 = t27415 ^ 2;
t27410 = sin(qJ(2,4));
t27416 = cos(qJ(2,4));
t28675 = t27389 * t27416;
t28135 = t27384 * t28675;
t27931 = pkin(9) * t28135;
t28314 = (pkin(3) * t27931 + t27410 * t29360) * t28724;
t26511 = (t27047 - 0.2e1 * t28314) * t27375;
t27409 = sin(qJ(3,4));
t28732 = t27384 * t27409;
t27195 = pkin(2) * t28732 + t28461;
t28716 = t27385 * t27410;
t27018 = t27195 * t28716;
t28456 = t27409 * t29359;
t26783 = t27299 * t28456 + t27270;
t27519 = t26783 * t27416;
t27025 = t27409 * t27747;
t27345 = pkin(2) * t27409;
t27240 = t27345 + t27313;
t28573 = pkin(3) * t27240 + t27025;
t28091 = (t27384 * t27519 + t27018) * t29296 + t26511 + (-t28065 + t28573) * t27390;
t27429 = cos(qJ(3,3));
t27379 = t27429 ^ 2;
t27430 = cos(qJ(2,3));
t28668 = t27389 * t27430;
t28134 = t27384 * t28668;
t27930 = pkin(9) * t28134;
t27424 = sin(qJ(2,3));
t28629 = t27424 * t27259;
t28313 = (pkin(3) * t27930 - t28629 / 0.2e1) * t28724;
t26515 = (t27047 - 0.2e1 * t28313) * t27379;
t27423 = sin(qJ(3,3));
t28730 = t27384 * t27423;
t27202 = pkin(2) * t28730 + t28461;
t28711 = t27385 * t27424;
t27020 = t27202 * t28711;
t28455 = t27423 * t29359;
t26790 = t27299 * t28455 + t27270;
t27518 = t26790 * t27430;
t27026 = t27423 * t27747;
t27358 = pkin(2) * t27423;
t27241 = t27358 + t27313;
t28572 = pkin(3) * t27241 + t27026;
t28090 = (t27384 * t27518 + t27020) * t29296 + t26515 + (-t28065 + t28572) * t27390;
t27431 = cos(qJ(3,2));
t27380 = t27431 ^ 2;
t27432 = cos(qJ(2,2));
t28667 = t27389 * t27432;
t28133 = t27384 * t28667;
t27929 = pkin(9) * t28133;
t27426 = sin(qJ(2,2));
t28624 = t27426 * t27259;
t28312 = (pkin(3) * t27929 - t28624 / 0.2e1) * t28724;
t26516 = (t27047 - 0.2e1 * t28312) * t27380;
t27425 = sin(qJ(3,2));
t28728 = t27384 * t27425;
t27203 = pkin(2) * t28728 + t28461;
t28709 = t27385 * t27426;
t27021 = t27203 * t28709;
t28454 = t27425 * t29359;
t26791 = t27299 * t28454 + t27270;
t27517 = t26791 * t27432;
t27027 = t27425 * t27747;
t27359 = pkin(2) * t27425;
t27242 = t27359 + t27313;
t28571 = pkin(3) * t27242 + t27027;
t28089 = (t27384 * t27517 + t27021) * t29296 + t26516 + (-t28065 + t28571) * t27390;
t27433 = cos(qJ(3,1));
t27381 = t27433 ^ 2;
t27434 = cos(qJ(2,1));
t28666 = t27389 * t27434;
t28132 = t27384 * t28666;
t27928 = pkin(9) * t28132;
t27428 = sin(qJ(2,1));
t28619 = t27428 * t27259;
t28311 = (pkin(3) * t27928 - t28619 / 0.2e1) * t28724;
t26517 = (t27047 - 0.2e1 * t28311) * t27381;
t27427 = sin(qJ(3,1));
t28726 = t27384 * t27427;
t27204 = pkin(2) * t28726 + t28461;
t28707 = t27385 * t27428;
t27022 = t27204 * t28707;
t28453 = t27427 * t29359;
t26792 = t27299 * t28453 + t27270;
t27516 = t26792 * t27434;
t27028 = t27427 * t27747;
t27360 = pkin(2) * t27427;
t27243 = t27360 + t27313;
t28570 = pkin(3) * t27243 + t27028;
t28088 = (t27384 * t27516 + t27022) * t29296 + t26517 + (-t28065 + t28570) * t27390;
t27436 = xDP(5);
t27435 = xDP(6);
t28774 = t27364 * t27435;
t26545 = t26820 * t27436 + t27180 * t28774;
t29501 = t26545 * t27363;
t29500 = t26545 * t27365;
t26546 = t26821 * t27436 + t27181 * t28774;
t29499 = t26546 * t27363;
t29498 = t26546 * t27365;
t26547 = t26822 * t27436 + t27182 * t28774;
t29497 = t26547 * t27363;
t29496 = t26547 * t27365;
t26548 = t26823 * t27436 + t27183 * t28774;
t29495 = t26548 * t27363;
t29494 = t26548 * t27365;
t26549 = t26824 * t27436 + t27184 * t28774;
t29493 = t26549 * t27363;
t29492 = t26549 * t27365;
t26550 = t26825 * t27436 + t27185 * t28774;
t29491 = t26550 * t27363;
t29490 = t26550 * t27365;
t28554 = t27365 * t29375;
t28560 = t27363 * t29375;
t28752 = t27365 * t27455;
t28776 = t27363 * t27455;
t26643 = -(t27362 * t28752 + t28560) * t27361 + (t27362 * t28554 - t28776) * t28563;
t27404 = legFrame(1,1);
t27338 = cos(t27404);
t27422 = legFrame(1,2);
t27357 = cos(t27422);
t27398 = legFrame(1,3);
t27320 = sin(t27398);
t27332 = cos(t27398);
t27383 = sin(pkin(10));
t27387 = cos(pkin(10));
t27077 = t27320 * t27387 + t27332 * t27383;
t29009 = t27077 * t27386;
t27541 = t27449 * t29009;
t27351 = sin(t27422);
t28806 = t27351 * t27387;
t28807 = t27351 * t27383;
t27326 = sin(t27404);
t28867 = t27326 * t27387;
t28868 = t27326 * t27383;
t27619 = t27386 * (-(t27338 * t28807 + t28867) * t27332 - (t27338 * t28806 - t28868) * t27320);
t28648 = t27390 * t27449;
t28139 = t27362 * t28648;
t28169 = t27351 * t28648;
t28786 = t27362 * t27449;
t28805 = t27351 * t27390;
t28952 = t27591 * t27390;
t28703 = t27386 * t27387;
t28738 = t27383 * t27386;
t29477 = t27320 * t28703 + t27332 * t28738;
t29489 = -(t27365 * t28169 - t27591 * t27619) * t27364 + t27619 * t28786 + t26643 * t28805 + t27357 * (t27338 * t28139 + t29477 * t26643 + (t27338 * t28952 - t27365 * t27541) * t27364);
t26642 = (t27362 * t28560 + t28752) * t28563 + t27361 * (-t27362 * t28776 + t28554);
t28685 = t27386 * t27449;
t28837 = t27338 * t27387;
t28838 = t27338 * t27383;
t29471 = (t27326 * t28806 + t28838) * t27320 - (-t27326 * t28807 + t28837) * t27332;
t29488 = (-t27386 * t27591 * t29471 - t27363 * t28169) * t27364 + t26642 * t28805 - t29471 * t27362 * t28685 + t27357 * (t27326 * t28139 + t29477 * t26642 + (t27326 * t28952 - t27363 * t27541) * t27364);
t28553 = t27365 * t29374;
t28559 = t27363 * t29374;
t28753 = t27365 * t27454;
t28777 = t27363 * t27454;
t26641 = -(t27362 * t28753 + t28559) * t27361 + (t27362 * t28553 - t28777) * t28563;
t27403 = legFrame(2,1);
t27337 = cos(t27403);
t27421 = legFrame(2,2);
t27356 = cos(t27421);
t27397 = legFrame(2,3);
t27319 = sin(t27397);
t27331 = cos(t27397);
t27076 = t27319 * t27387 + t27331 * t27383;
t29010 = t27076 * t27386;
t27542 = t27448 * t29010;
t27350 = sin(t27421);
t28811 = t27350 * t27387;
t28812 = t27350 * t27383;
t27325 = sin(t27403);
t28873 = t27325 * t27387;
t28874 = t27325 * t27383;
t27620 = t27386 * (-(t27337 * t28812 + t28873) * t27331 - (t27337 * t28811 - t28874) * t27319);
t28649 = t27390 * t27448;
t28140 = t27362 * t28649;
t28175 = t27350 * t28649;
t28787 = t27362 * t27448;
t28810 = t27350 * t27390;
t28955 = t27590 * t27390;
t29476 = t27319 * t28703 + t27331 * t28738;
t29487 = -(t27365 * t28175 - t27590 * t27620) * t27364 + t27620 * t28787 + t26641 * t28810 + t27356 * (t27337 * t28140 + t29476 * t26641 + (t27337 * t28955 - t27365 * t27542) * t27364);
t26640 = (t27362 * t28559 + t28753) * t28563 + t27361 * (-t27362 * t28777 + t28553);
t28686 = t27386 * t27448;
t28842 = t27337 * t27387;
t28843 = t27337 * t27383;
t29470 = (t27325 * t28811 + t28843) * t27319 - (-t27325 * t28812 + t28842) * t27331;
t29486 = (-t27386 * t27590 * t29470 - t27363 * t28175) * t27364 + t26640 * t28810 - t29470 * t27362 * t28686 + t27356 * (t27325 * t28140 + t29476 * t26640 + (t27325 * t28955 - t27363 * t27542) * t27364);
t28552 = t27365 * t29373;
t28558 = t27363 * t29373;
t28754 = t27365 * t27453;
t28778 = t27363 * t27453;
t26639 = -(t27362 * t28754 + t28558) * t27361 + (t27362 * t28552 - t28778) * t28563;
t27402 = legFrame(3,1);
t27336 = cos(t27402);
t27420 = legFrame(3,2);
t27355 = cos(t27420);
t27396 = legFrame(3,3);
t27318 = sin(t27396);
t27330 = cos(t27396);
t27075 = t27318 * t27387 + t27330 * t27383;
t29011 = t27075 * t27386;
t27543 = t27447 * t29011;
t27349 = sin(t27420);
t28816 = t27349 * t27387;
t28817 = t27349 * t27383;
t27324 = sin(t27402);
t28879 = t27324 * t27387;
t28880 = t27324 * t27383;
t27611 = (-(t27336 * t28817 + t28879) * t27330 - (t27336 * t28816 - t28880) * t27318) * t27386;
t28650 = t27390 * t27447;
t28141 = t27362 * t28650;
t28181 = t27349 * t28650;
t28788 = t27362 * t27447;
t28815 = t27349 * t27390;
t28958 = t27589 * t27390;
t29475 = t27318 * t28703 + t27330 * t28738;
t29485 = -(t27365 * t28181 - t27589 * t27611) * t27364 + t27611 * t28788 + t26639 * t28815 + t27355 * (t27336 * t28141 + t29475 * t26639 + (t27336 * t28958 - t27365 * t27543) * t27364);
t26638 = (t27362 * t28558 + t28754) * t28563 + t27361 * (-t27362 * t28778 + t28552);
t28687 = t27386 * t27447;
t28847 = t27336 * t27387;
t28848 = t27336 * t27383;
t29469 = (t27324 * t28816 + t28848) * t27318 - (-t27324 * t28817 + t28847) * t27330;
t29484 = (-t27386 * t27589 * t29469 - t27363 * t28181) * t27364 + t26638 * t28815 - t29469 * t27362 * t28687 + t27355 * (t27324 * t28141 + t29475 * t26638 + (t27324 * t28958 - t27363 * t27543) * t27364);
t28551 = t27365 * t29372;
t28557 = t27363 * t29372;
t28755 = t27365 * t27452;
t28779 = t27363 * t27452;
t26637 = -(t27362 * t28755 + t28557) * t27361 + (t27362 * t28551 - t28779) * t28563;
t27401 = legFrame(4,1);
t27335 = cos(t27401);
t27419 = legFrame(4,2);
t27354 = cos(t27419);
t27395 = legFrame(4,3);
t27317 = sin(t27395);
t27329 = cos(t27395);
t27074 = t27317 * t27387 + t27329 * t27383;
t29012 = t27074 * t27386;
t27544 = t27446 * t29012;
t27348 = sin(t27419);
t28821 = t27348 * t27387;
t28822 = t27348 * t27383;
t27323 = sin(t27401);
t28885 = t27323 * t27387;
t28886 = t27323 * t27383;
t27621 = t27386 * (-(t27335 * t28822 + t28885) * t27329 - (t27335 * t28821 - t28886) * t27317);
t28651 = t27390 * t27446;
t28142 = t27362 * t28651;
t28187 = t27348 * t28651;
t28789 = t27362 * t27446;
t28820 = t27348 * t27390;
t28961 = t27588 * t27390;
t29474 = t27317 * t28703 + t27329 * t28738;
t29483 = -(t27365 * t28187 - t27588 * t27621) * t27364 + t27621 * t28789 + t26637 * t28820 + t27354 * (t27335 * t28142 + t29474 * t26637 + (t27335 * t28961 - t27365 * t27544) * t27364);
t26636 = (t27362 * t28557 + t28755) * t28563 + t27361 * (-t27362 * t28779 + t28551);
t28688 = t27386 * t27446;
t28852 = t27335 * t27387;
t28853 = t27335 * t27383;
t29468 = (t27323 * t28821 + t28853) * t27317 - (-t27323 * t28822 + t28852) * t27329;
t29482 = (-t27386 * t27588 * t29468 - t27363 * t28187) * t27364 + t26636 * t28820 - t29468 * t27362 * t28688 + t27354 * (t27323 * t28142 + t29474 * t26636 + (t27323 * t28961 - t27363 * t27544) * t27364);
t28550 = t27365 * t29371;
t28556 = t27363 * t29371;
t28756 = t27365 * t27451;
t28780 = t27363 * t27451;
t26635 = -(t27362 * t28756 + t28556) * t27361 + (t27362 * t28550 - t28780) * t28563;
t27400 = legFrame(5,1);
t27334 = cos(t27400);
t27418 = legFrame(5,2);
t27353 = cos(t27418);
t27394 = legFrame(5,3);
t27316 = sin(t27394);
t27328 = cos(t27394);
t27073 = t27316 * t27387 + t27328 * t27383;
t29013 = t27073 * t27386;
t27545 = t27445 * t29013;
t27347 = sin(t27418);
t28826 = t27347 * t27387;
t28827 = t27347 * t27383;
t27322 = sin(t27400);
t28891 = t27322 * t27387;
t28892 = t27322 * t27383;
t27612 = (-(t27334 * t28827 + t28891) * t27328 - (t27334 * t28826 - t28892) * t27316) * t27386;
t28652 = t27390 * t27445;
t28143 = t27362 * t28652;
t28193 = t27347 * t28652;
t28790 = t27362 * t27445;
t28825 = t27347 * t27390;
t28964 = t27587 * t27390;
t29473 = t27316 * t28703 + t27328 * t28738;
t29481 = -(t27365 * t28193 - t27587 * t27612) * t27364 + t27612 * t28790 + t26635 * t28825 + t27353 * (t27334 * t28143 + t29473 * t26635 + (t27334 * t28964 - t27365 * t27545) * t27364);
t26634 = (t27362 * t28556 + t28756) * t28563 + t27361 * (-t27362 * t28780 + t28550);
t28689 = t27386 * t27445;
t28857 = t27334 * t27387;
t28858 = t27334 * t27383;
t29467 = (t27322 * t28826 + t28858) * t27316 - (-t27322 * t28827 + t28857) * t27328;
t29480 = (-t27386 * t27587 * t29467 - t27363 * t28193) * t27364 + t26634 * t28825 - t29467 * t27362 * t28689 + t27353 * (t27322 * t28143 + t29473 * t26634 + (t27322 * t28964 - t27363 * t27545) * t27364);
t28549 = t27365 * t29370;
t28555 = t27363 * t29370;
t28757 = t27365 * t27450;
t28781 = t27363 * t27450;
t26633 = -(t27362 * t28757 + t28555) * t27361 + (t27362 * t28549 - t28781) * t28563;
t27399 = legFrame(6,1);
t27333 = cos(t27399);
t27417 = legFrame(6,2);
t27352 = cos(t27417);
t27393 = legFrame(6,3);
t27315 = sin(t27393);
t27327 = cos(t27393);
t27072 = t27315 * t27387 + t27327 * t27383;
t29014 = t27072 * t27386;
t27546 = t27444 * t29014;
t27346 = sin(t27417);
t28831 = t27346 * t27387;
t28832 = t27346 * t27383;
t27321 = sin(t27399);
t28897 = t27321 * t27387;
t28898 = t27321 * t27383;
t27622 = t27386 * (-(t27333 * t28832 + t28897) * t27327 - (t27333 * t28831 - t28898) * t27315);
t28653 = t27390 * t27444;
t28144 = t27362 * t28653;
t28199 = t27346 * t28653;
t28791 = t27362 * t27444;
t28830 = t27346 * t27390;
t28967 = t27586 * t27390;
t29472 = t27315 * t28703 + t27327 * t28738;
t29479 = -(t27365 * t28199 - t27586 * t27622) * t27364 + t27622 * t28791 + t26633 * t28830 + t27352 * (t27333 * t28144 + t29472 * t26633 + (t27333 * t28967 - t27365 * t27546) * t27364);
t26632 = (t27362 * t28555 + t28757) * t28563 + t27361 * (-t27362 * t28781 + t28549);
t28690 = t27386 * t27444;
t28862 = t27333 * t27387;
t28863 = t27333 * t27383;
t29466 = (t27321 * t28831 + t28863) * t27315 - (-t27321 * t28832 + t28862) * t27327;
t29478 = (-t27386 * t27586 * t29466 - t27363 * t28199) * t27364 + t26632 * t28830 - t29466 * t27362 * t28690 + t27352 * (t27321 * t28144 + t29472 * t26632 + (t27321 * t28967 - t27363 * t27546) * t27364);
t28654 = t27390 * t27434;
t27111 = t27383 * t28654 + t27387 * t27428;
t27114 = -t27383 * t27428 + t27387 * t28654;
t27712 = t27111 * t27332 + t27114 * t27320;
t28655 = t27390 * t27432;
t27110 = t27383 * t28655 + t27387 * t27426;
t27113 = -t27383 * t27426 + t27387 * t28655;
t27713 = t27110 * t27331 + t27113 * t27319;
t28656 = t27390 * t27430;
t27109 = t27383 * t28656 + t27387 * t27424;
t27112 = -t27383 * t27424 + t27387 * t28656;
t27714 = t27109 * t27330 + t27112 * t27318;
t28660 = t27390 * t27416;
t27092 = t27383 * t28660 + t27387 * t27410;
t27098 = -t27383 * t27410 + t27387 * t28660;
t27718 = t27092 * t27329 + t27098 * t27317;
t28661 = t27390 * t27414;
t27091 = t27383 * t28661 + t27387 * t27408;
t27097 = -t27383 * t27408 + t27387 * t28661;
t27719 = t27091 * t27328 + t27097 * t27316;
t28662 = t27390 * t27412;
t27090 = t27383 * t28662 + t27387 * t27406;
t27096 = -t27383 * t27406 + t27387 * t28662;
t27720 = t27090 * t27327 + t27096 * t27315;
t27437 = xDP(4);
t27229 = t27362 * t27437 + t27435;
t27733 = t27361 * t27229;
t26566 = t27229 * t27909 - t27437 * t28772 - t27450 * t27733;
t27439 = xDP(2);
t27961 = -t27362 * t27435 - t27437;
t28531 = t27436 * t29370;
t28537 = t27435 * t29370;
t28607 = t27436 * t27450;
t28613 = t27436 * t27444;
t27515 = (t27364 * t28531 + t27450 * t27961) * t28563 - t27361 * (t27364 * t28607 + t27437 * t29370) - (t27361 * t28537 - t28613) * t27362;
t26138 = t26566 * t27365 + t27363 * t27515 + t27439;
t27438 = xDP(3);
t26144 = t26566 * t27363 - t27365 * t27515 + t27438;
t27440 = xDP(1);
t28766 = t27364 * t27450;
t29108 = ((t27362 * t28531 + t27435 * t28766) * t28563 - t27364 * t28613 - t27440 + (-t27362 * t28607 + t27364 * t28537) * t27361) * t27352;
t25814 = -t29108 + (t26138 * t27321 - t26144 * t27333) * t27346;
t25895 = t26138 * t27333 + t27321 * t26144;
t29465 = -t27383 * t25814 + t25895 * t27387;
t26567 = t27229 * t27910 - t27437 * t28771 - t27451 * t27733;
t28532 = t27436 * t29371;
t28538 = t27435 * t29371;
t28606 = t27436 * t27451;
t28612 = t27436 * t27445;
t27514 = (t27364 * t28532 + t27451 * t27961) * t28563 - t27361 * (t27364 * t28606 + t27437 * t29371) - (t27361 * t28538 - t28612) * t27362;
t26139 = t26567 * t27365 + t27363 * t27514 + t27439;
t26145 = t26567 * t27363 - t27365 * t27514 + t27438;
t28765 = t27364 * t27451;
t29107 = ((t27362 * t28532 + t27435 * t28765) * t28563 - t27364 * t28612 - t27440 + (-t27362 * t28606 + t27364 * t28538) * t27361) * t27353;
t25815 = -t29107 + (t26139 * t27322 - t26145 * t27334) * t27347;
t25896 = t26139 * t27334 + t27322 * t26145;
t29464 = -t27383 * t25815 + t25896 * t27387;
t26568 = t27229 * t27911 - t27437 * t28770 - t27452 * t27733;
t28533 = t27436 * t29372;
t28539 = t27435 * t29372;
t28605 = t27436 * t27452;
t28611 = t27436 * t27446;
t27513 = (t27364 * t28533 + t27452 * t27961) * t28563 - t27361 * (t27364 * t28605 + t27437 * t29372) - (t27361 * t28539 - t28611) * t27362;
t26140 = t26568 * t27365 + t27363 * t27513 + t27439;
t26146 = t26568 * t27363 - t27365 * t27513 + t27438;
t28764 = t27364 * t27452;
t29106 = ((t27362 * t28533 + t27435 * t28764) * t28563 - t27364 * t28611 - t27440 + (-t27362 * t28605 + t27364 * t28539) * t27361) * t27354;
t25816 = -t29106 + (t26140 * t27323 - t26146 * t27335) * t27348;
t25897 = t26140 * t27335 + t27323 * t26146;
t29463 = -t27383 * t25816 + t25897 * t27387;
t26569 = t27229 * t27912 - t27437 * t28769 - t27453 * t27733;
t28534 = t27436 * t29373;
t28540 = t27435 * t29373;
t28604 = t27436 * t27453;
t28610 = t27436 * t27447;
t27512 = (t27364 * t28534 + t27453 * t27961) * t28563 - t27361 * (t27364 * t28604 + t27437 * t29373) - (t27361 * t28540 - t28610) * t27362;
t26141 = t26569 * t27365 + t27363 * t27512 + t27439;
t26147 = t26569 * t27363 - t27365 * t27512 + t27438;
t28763 = t27364 * t27453;
t29105 = ((t27362 * t28534 + t27435 * t28763) * t28563 - t27364 * t28610 - t27440 + (-t27362 * t28604 + t27364 * t28540) * t27361) * t27355;
t25817 = -t29105 + (t26141 * t27324 - t26147 * t27336) * t27349;
t25898 = t26141 * t27336 + t27324 * t26147;
t29462 = -t27383 * t25817 + t25898 * t27387;
t26570 = t27229 * t27913 - t27437 * t28768 - t27454 * t27733;
t28535 = t27436 * t29374;
t28541 = t27435 * t29374;
t28603 = t27436 * t27454;
t28609 = t27436 * t27448;
t27511 = (t27364 * t28535 + t27454 * t27961) * t28563 - t27361 * (t27364 * t28603 + t27437 * t29374) - (t27361 * t28541 - t28609) * t27362;
t26142 = t26570 * t27365 + t27363 * t27511 + t27439;
t26148 = t26570 * t27363 - t27365 * t27511 + t27438;
t28762 = t27364 * t27454;
t29104 = ((t27362 * t28535 + t27435 * t28762) * t28563 - t27364 * t28609 - t27440 + (-t27362 * t28603 + t27364 * t28541) * t27361) * t27356;
t25818 = -t29104 + (t26142 * t27325 - t26148 * t27337) * t27350;
t25899 = t26142 * t27337 + t27325 * t26148;
t29461 = -t27383 * t25818 + t25899 * t27387;
t26571 = t27229 * t27914 - t27437 * t28767 - t27455 * t27733;
t28536 = t27436 * t29375;
t28542 = t27435 * t29375;
t28602 = t27436 * t27455;
t28608 = t27436 * t27449;
t27510 = (t27364 * t28536 + t27455 * t27961) * t28563 - t27361 * (t27364 * t28602 + t27437 * t29375) - (t27361 * t28542 - t28608) * t27362;
t26143 = t26571 * t27365 + t27363 * t27510 + t27439;
t26149 = t26571 * t27363 - t27365 * t27510 + t27438;
t28761 = t27364 * t27455;
t29103 = ((t27362 * t28536 + t27435 * t28761) * t28563 - t27364 * t28608 - t27440 + (-t27362 * t28602 + t27364 * t28542) * t27361) * t27357;
t25819 = -t29103 + (t26143 * t27326 - t26149 * t27338) * t27351;
t25900 = t26143 * t27338 + t27326 * t26149;
t29460 = -t27383 * t25819 + t25900 * t27387;
t29314 = pkin(3) * t27411;
t29313 = pkin(3) * t27413;
t29312 = pkin(3) * t27415;
t29308 = pkin(3) * t27429;
t29307 = pkin(3) * t27431;
t29306 = pkin(3) * t27433;
t28042 = t27365 * t28563;
t28785 = t27363 * t27361;
t26985 = -t27362 * t28042 + t28785;
t28614 = t27436 * t27437;
t28040 = t28563 * t27436;
t28773 = t27364 * t27437;
t27029 = t27361 * t28773 - t28040;
t29021 = t27029 * t27229;
t29435 = t27364 * (t26985 * t28614 + t27365 * t29021);
t27213 = t27405 * t27259;
t27310 = pkin(2) * t27313;
t27683 = -t27213 + t27310;
t27214 = t27407 * t27259;
t27682 = -t27214 + t27310;
t27215 = t27409 * t27259;
t27681 = -t27215 + t27310;
t27216 = t27423 * t27259;
t27680 = -t27216 + t27310;
t27217 = t27425 * t27259;
t27679 = -t27217 + t27310;
t27218 = t27427 * t27259;
t27678 = -t27218 + t27310;
t27272 = pkin(9) * t28736;
t27247 = t27272 + pkin(2);
t27199 = t27247 + t29314;
t27274 = pkin(9) * t28734;
t27249 = t27274 + pkin(2);
t27200 = t27249 + t29313;
t27276 = pkin(9) * t28732;
t27251 = t27276 + pkin(2);
t27201 = t27251 + t29312;
t27281 = pkin(9) * t28730;
t27253 = t27281 + pkin(2);
t27208 = t27253 + t29308;
t27283 = pkin(9) * t28728;
t27255 = t27283 + pkin(2);
t27209 = t27255 + t29307;
t27285 = pkin(9) * t28726;
t27257 = t27285 + pkin(2);
t27210 = t27257 + t29306;
t27278 = pkin(2) * t28720;
t28909 = t27299 * t27412;
t29434 = t27278 - t28909;
t27279 = pkin(2) * t28718;
t28908 = t27299 * t27414;
t29433 = t27279 - t28908;
t27280 = pkin(2) * t28716;
t28907 = t27299 * t27416;
t29432 = t27280 - t28907;
t27287 = pkin(2) * t28711;
t28903 = t27299 * t27430;
t29431 = t27287 - t28903;
t27288 = pkin(2) * t28709;
t28902 = t27299 * t27432;
t29430 = t27288 - t28902;
t27289 = pkin(2) * t28707;
t28901 = t27299 * t27434;
t29429 = t27289 - t28901;
t29428 = (-0.2e1 * t29295 - pkin(8)) * pkin(8);
t28954 = t27591 * t27364;
t26846 = -t28786 - t28954;
t28759 = t27365 * t27436;
t28792 = t27362 * t27365;
t29064 = t29502 * t27437;
t26167 = -(t27185 * t28792 + t27363 * t27591) * t27435 - t26846 * t28759 - t29064;
t28783 = t27363 * t27436;
t28793 = t27362 * t27363;
t29058 = t26537 * t27437;
t26166 = -(t27185 * t28793 - t27365 * t27591) * t27435 - t26846 * t28783 + t29058;
t28957 = t27590 * t27364;
t26845 = -t28787 - t28957;
t29065 = t29503 * t27437;
t26165 = -(t27184 * t28792 + t27363 * t27590) * t27435 - t26845 * t28759 - t29065;
t29059 = t26536 * t27437;
t26164 = -(t27184 * t28793 - t27365 * t27590) * t27435 - t26845 * t28783 + t29059;
t28960 = t27589 * t27364;
t26844 = -t28788 - t28960;
t29066 = t29504 * t27437;
t26163 = -(t27183 * t28792 + t27363 * t27589) * t27435 - t26844 * t28759 - t29066;
t29060 = t26535 * t27437;
t26162 = -(t27183 * t28793 - t27365 * t27589) * t27435 - t26844 * t28783 + t29060;
t28963 = t27588 * t27364;
t26843 = -t28789 - t28963;
t29067 = t29505 * t27437;
t26161 = -(t27182 * t28792 + t27363 * t27588) * t27435 - t26843 * t28759 - t29067;
t29061 = t26534 * t27437;
t26160 = -(t27182 * t28793 - t27365 * t27588) * t27435 - t26843 * t28783 + t29061;
t28966 = t27587 * t27364;
t26842 = -t28790 - t28966;
t29068 = t29506 * t27437;
t26159 = -(t27181 * t28792 + t27363 * t27587) * t27435 - t26842 * t28759 - t29068;
t29062 = t26533 * t27437;
t26158 = -(t27181 * t28793 - t27365 * t27587) * t27435 - t26842 * t28783 + t29062;
t28969 = t27586 * t27364;
t26841 = -t28791 - t28969;
t29069 = t29507 * t27437;
t26157 = -(t27180 * t28792 + t27363 * t27586) * t27435 - t26841 * t28759 - t29069;
t29063 = t26532 * t27437;
t26156 = -(t27180 * t28793 - t27365 * t27586) * t27435 - t26841 * t28783 + t29063;
t28170 = t27351 * t28654;
t28866 = t27326 * t27428;
t26912 = t27338 * t28170 - t28866;
t28236 = t27326 * t28654;
t28804 = t27351 * t27428;
t26923 = t27338 * t28804 + t28236;
t27721 = (t26912 * t27387 - t26923 * t27383) * t27320 + (t26912 * t27383 + t26923 * t27387) * t27332;
t28108 = t27434 * t28685;
t27817 = t27351 * t28108;
t28691 = t27386 * t27434;
t28173 = t27351 * t28691;
t29427 = -t26643 * t28173 - (-t27365 * t27817 + t27591 * t27721) * t27364;
t28176 = t27350 * t28655;
t28872 = t27325 * t27426;
t26910 = t27337 * t28176 - t28872;
t28238 = t27325 * t28655;
t28809 = t27350 * t27426;
t26919 = t27337 * t28809 + t28238;
t27723 = (t26910 * t27387 - t26919 * t27383) * t27319 + (t26910 * t27383 + t26919 * t27387) * t27331;
t28109 = t27432 * t28686;
t27819 = t27350 * t28109;
t28692 = t27386 * t27432;
t28179 = t27350 * t28692;
t29426 = -t26641 * t28179 - (-t27365 * t27819 + t27590 * t27723) * t27364;
t28182 = t27349 * t28656;
t28878 = t27324 * t27424;
t26908 = t27336 * t28182 - t28878;
t28240 = t27324 * t28656;
t28814 = t27349 * t27424;
t26915 = t27336 * t28814 + t28240;
t27725 = (t26908 * t27387 - t26915 * t27383) * t27318 + (t26908 * t27383 + t26915 * t27387) * t27330;
t28110 = t27430 * t28687;
t27821 = t27349 * t28110;
t28693 = t27386 * t27430;
t28185 = t27349 * t28693;
t29425 = -t26639 * t28185 - (-t27365 * t27821 + t27589 * t27725) * t27364;
t28188 = t27348 * t28660;
t28884 = t27323 * t27410;
t26888 = t27335 * t28188 - t28884;
t28242 = t27323 * t28660;
t28819 = t27348 * t27410;
t26899 = t27335 * t28819 + t28242;
t27727 = (t26888 * t27387 - t26899 * t27383) * t27317 + (t26888 * t27383 + t26899 * t27387) * t27329;
t28114 = t27416 * t28688;
t27823 = t27348 * t28114;
t28697 = t27386 * t27416;
t28191 = t27348 * t28697;
t29424 = -t26637 * t28191 - (-t27365 * t27823 + t27588 * t27727) * t27364;
t28194 = t27347 * t28661;
t28890 = t27322 * t27408;
t26886 = t27334 * t28194 - t28890;
t28244 = t27322 * t28661;
t28824 = t27347 * t27408;
t26895 = t27334 * t28824 + t28244;
t27729 = (t26886 * t27387 - t26895 * t27383) * t27316 + (t26886 * t27383 + t26895 * t27387) * t27328;
t28115 = t27414 * t28689;
t27825 = t27347 * t28115;
t28698 = t27386 * t27414;
t28197 = t27347 * t28698;
t29423 = -t26635 * t28197 - (-t27365 * t27825 + t27587 * t27729) * t27364;
t28200 = t27346 * t28662;
t28896 = t27321 * t27406;
t26884 = t27333 * t28200 - t28896;
t28246 = t27321 * t28662;
t28829 = t27346 * t27406;
t26891 = t27333 * t28829 + t28246;
t27731 = (t26884 * t27387 - t26891 * t27383) * t27315 + (t26884 * t27383 + t26891 * t27387) * t27327;
t28116 = t27412 * t28690;
t27827 = t27346 * t28116;
t28699 = t27386 * t27412;
t28203 = t27346 * t28699;
t29422 = -t26633 * t28203 - (-t27365 * t27827 + t27586 * t27731) * t27364;
t27613 = t27449 * t27712;
t28302 = t27591 * t28691;
t29421 = t27712 * t26643 - (t27338 * t28302 + t27365 * t27613) * t27364;
t29420 = t27712 * t26642 - (t27326 * t28302 + t27363 * t27613) * t27364;
t27607 = t27713 * t27448;
t28303 = t27590 * t28692;
t29419 = t27713 * t26641 - (t27337 * t28303 + t27365 * t27607) * t27364;
t29418 = t27713 * t26640 - (t27325 * t28303 + t27363 * t27607) * t27364;
t27608 = t27714 * t27447;
t28304 = t27589 * t28693;
t29417 = t27714 * t26639 - (t27336 * t28304 + t27365 * t27608) * t27364;
t29416 = t27714 * t26638 - (t27324 * t28304 + t27363 * t27608) * t27364;
t27609 = t27718 * t27446;
t28305 = t27588 * t28697;
t29415 = t27718 * t26637 - (t27335 * t28305 + t27365 * t27609) * t27364;
t29414 = t27718 * t26636 - (t27323 * t28305 + t27363 * t27609) * t27364;
t27610 = t27719 * t27445;
t28306 = t27587 * t28698;
t29413 = t27719 * t26635 - (t27334 * t28306 + t27365 * t27610) * t27364;
t29412 = t27719 * t26634 - (t27322 * t28306 + t27363 * t27610) * t27364;
t27614 = t27444 * t27720;
t28307 = t27586 * t28699;
t29411 = t27720 * t26633 - (t27333 * t28307 + t27365 * t27614) * t27364;
t29410 = t27720 * t26632 - (t27321 * t28307 + t27363 * t27614) * t27364;
t28836 = t27338 * t27428;
t26911 = t27326 * t28170 + t28836;
t28212 = t27338 * t28654;
t26924 = -t27326 * t28804 + t28212;
t27722 = -(-t26911 * t27383 + t26924 * t27387) * t27332 + (t26911 * t27387 + t26924 * t27383) * t27320;
t28841 = t27337 * t27426;
t26909 = t27325 * t28176 + t28841;
t28214 = t27337 * t28655;
t26920 = -t27325 * t28809 + t28214;
t27724 = -(-t26909 * t27383 + t26920 * t27387) * t27331 + (t26909 * t27387 + t26920 * t27383) * t27319;
t28846 = t27336 * t27424;
t26907 = t27324 * t28182 + t28846;
t28216 = t27336 * t28656;
t26916 = -t27324 * t28814 + t28216;
t27726 = -(-t26907 * t27383 + t26916 * t27387) * t27330 + (t26907 * t27387 + t26916 * t27383) * t27318;
t28851 = t27335 * t27410;
t26887 = t27323 * t28188 + t28851;
t28218 = t27335 * t28660;
t26900 = -t27323 * t28819 + t28218;
t27728 = -(-t26887 * t27383 + t26900 * t27387) * t27329 + (t26887 * t27387 + t26900 * t27383) * t27317;
t28856 = t27334 * t27408;
t26885 = t27322 * t28194 + t28856;
t28220 = t27334 * t28661;
t26896 = -t27322 * t28824 + t28220;
t27730 = -(-t26885 * t27383 + t26896 * t27387) * t27328 + (t26885 * t27387 + t26896 * t27383) * t27316;
t28861 = t27333 * t27406;
t26883 = t27321 * t28200 + t28861;
t28222 = t27333 * t28662;
t26892 = -t27321 * t28829 + t28222;
t27732 = -(-t26883 * t27383 + t26892 * t27387) * t27327 + (t26883 * t27387 + t26892 * t27383) * t27315;
t29409 = -t26642 * t28173 + (t27363 * t27817 - t27591 * t27722) * t27364;
t29408 = -t26640 * t28179 + (t27363 * t27819 - t27590 * t27724) * t27364;
t29407 = -t26638 * t28185 + (t27363 * t27821 - t27589 * t27726) * t27364;
t29406 = -t26636 * t28191 + (t27363 * t27823 - t27588 * t27728) * t27364;
t29405 = -t26634 * t28197 + (t27363 * t27825 - t27587 * t27730) * t27364;
t29404 = -t26632 * t28203 + (t27363 * t27827 - t27586 * t27732) * t27364;
t29403 = t27313 * t29359;
t28167 = t27352 * t28699;
t26373 = t27346 * t27720 + t28167;
t29321 = pkin(3) * t27299;
t26331 = t26373 * t29321;
t28802 = t27352 * t27390;
t26731 = -t27346 * t29014 + t28802;
t29402 = t26731 * t27683 + (t26731 * t27213 - t26331) * t27369 + t26331;
t28165 = t27353 * t28698;
t26375 = t27347 * t27719 + t28165;
t26332 = t26375 * t29321;
t28801 = t27353 * t27390;
t26732 = -t27347 * t29013 + t28801;
t29401 = t26732 * t27682 + (t26732 * t27214 - t26332) * t27369 + t26332;
t28163 = t27354 * t28697;
t26377 = t27348 * t27718 + t28163;
t26333 = t26377 * t29321;
t28800 = t27354 * t27390;
t26733 = -t27348 * t29012 + t28800;
t29400 = t26733 * t27681 + (t26733 * t27215 - t26333) * t27369 + t26333;
t28161 = t27355 * t28693;
t26379 = t27349 * t27714 + t28161;
t26334 = t26379 * t29321;
t28799 = t27355 * t27390;
t26734 = -t27349 * t29011 + t28799;
t29399 = t26734 * t27680 + (t26734 * t27216 - t26334) * t27369 + t26334;
t28159 = t27356 * t28692;
t26381 = t27350 * t27713 + t28159;
t26335 = t26381 * t29321;
t28798 = t27356 * t27390;
t26735 = -t27350 * t29010 + t28798;
t29398 = t26735 * t27679 + (t26735 * t27217 - t26335) * t27369 + t26335;
t28157 = t27357 * t28691;
t26383 = t27351 * t27712 + t28157;
t26336 = t26383 * t29321;
t28797 = t27357 * t27390;
t26736 = -t27351 * t29009 + t28797;
t29397 = t26736 * t27678 + (t26736 * t27218 - t26336) * t27369 + t26336;
t28914 = t27299 * t27384;
t28473 = pkin(9) * t28914;
t28904 = t27299 * t27427;
t29328 = pkin(3) * t26736;
t29396 = ((t26383 * t28904 - t29328) * t27369 + t29328) * t27313 - (-pkin(2) * t29328 + t26383 * t28473) * t27427;
t28905 = t27299 * t27425;
t29329 = pkin(3) * t26735;
t29395 = t27313 * ((t26381 * t28905 - t29329) * t27369 + t29329) - (-pkin(2) * t29329 + t26381 * t28473) * t27425;
t28906 = t27299 * t27423;
t29330 = pkin(3) * t26734;
t29394 = t27313 * ((t26379 * t28906 - t29330) * t27369 + t29330) - (-pkin(2) * t29330 + t26379 * t28473) * t27423;
t28910 = t27299 * t27409;
t29331 = pkin(3) * t26733;
t29393 = t27313 * ((t26377 * t28910 - t29331) * t27369 + t29331) - (-pkin(2) * t29331 + t26377 * t28473) * t27409;
t28911 = t27299 * t27407;
t29332 = pkin(3) * t26732;
t29392 = ((t26375 * t28911 - t29332) * t27369 + t29332) * t27313 - (-pkin(2) * t29332 + t26375 * t28473) * t27407;
t28912 = t27299 * t27405;
t29333 = pkin(3) * t26731;
t29391 = t27313 * ((t26373 * t28912 - t29333) * t27369 + t29333) - (-pkin(2) * t29333 + t26373 * t28473) * t27405;
t29378 = 0.2e1 * pkin(2);
t29377 = -0.2e1 * pkin(3);
t29376 = 0.2e1 * pkin(9);
t26737 = t27029 ^ 2;
t28043 = t27364 * t28563;
t28795 = t27361 * t27436;
t27031 = t27437 * t28043 + t28795;
t26738 = t27031 ^ 2;
t26975 = t27229 ^ 2;
t26656 = -t27090 * t27315 + t27096 * t27327;
t28665 = t27390 * t27406;
t27099 = t27383 * t27412 + t27387 * t28665;
t27102 = -t27383 * t28665 + t27387 * t27412;
t26659 = t27099 * t27327 + t27102 * t27315;
t28064 = pkin(3) * t28469;
t29369 = -0.2e1 * t26656 * t28064 - 0.2e1 * t26659 * t29360;
t26657 = -t27091 * t27316 + t27097 * t27328;
t28664 = t27390 * t27408;
t27100 = t27383 * t27414 + t27387 * t28664;
t27103 = -t27383 * t28664 + t27387 * t27414;
t26660 = t27100 * t27328 + t27103 * t27316;
t29368 = -0.2e1 * t26657 * t28064 - 0.2e1 * t26660 * t29360;
t26658 = -t27092 * t27317 + t27098 * t27329;
t28663 = t27390 * t27410;
t27101 = t27383 * t27416 + t27387 * t28663;
t27104 = -t27383 * t28663 + t27387 * t27416;
t26661 = t27101 * t27329 + t27104 * t27317;
t29367 = -0.2e1 * t26658 * t28064 - 0.2e1 * t26661 * t29360;
t26680 = -t27109 * t27318 + t27112 * t27330;
t28659 = t27390 * t27424;
t27115 = t27383 * t27430 + t27387 * t28659;
t27118 = -t27383 * t28659 + t27387 * t27430;
t26683 = t27115 * t27330 + t27118 * t27318;
t29366 = -0.2e1 * t26680 * t28064 - 0.2e1 * t26683 * t29360;
t26681 = -t27110 * t27319 + t27113 * t27331;
t28658 = t27390 * t27426;
t27116 = t27383 * t27432 + t27387 * t28658;
t27119 = -t27383 * t28658 + t27387 * t27432;
t26684 = t27116 * t27331 + t27119 * t27319;
t29365 = -0.2e1 * t26681 * t28064 - 0.2e1 * t26684 * t29360;
t26682 = -t27111 * t27320 + t27114 * t27332;
t28657 = t27390 * t27428;
t27117 = t27383 * t27434 + t27387 * t28657;
t27120 = -t27383 * t28657 + t27387 * t27434;
t26685 = t27117 * t27332 + t27120 * t27320;
t29364 = -0.2e1 * t26682 * t28064 - 0.2e1 * t26685 * t29360;
t27236 = pkin(2) * t27259;
t29363 = -0.2e1 * t27236;
t29362 = 0.2e1 * t27389;
t29358 = 0.2e1 * t27369 - 0.2e1;
t27069 = t27389 * t28662 - t28724;
t28682 = t27389 * t27406;
t29017 = t27069 * t27346;
t25658 = (t26138 * t28682 - t26144 * t29017) * t27333 + (t26138 * t29017 + t26144 * t28682) * t27321 - t27069 * t29108;
t28202 = t27346 * t28682;
t28329 = t27406 * t29108;
t25664 = (t26138 * t27069 + t26144 * t28202) * t27333 + (-t26138 * t28202 + t26144 * t27069) * t27321 + t27389 * t28329;
t25532 = (t25658 * t27387 + t25664 * t27383) * t27327 + t27315 * (-t25658 * t27383 + t25664 * t27387);
t28828 = t27346 * t27412;
t25682 = (t26138 * t28665 - t26144 * t28828) * t27333 + (t26138 * t28828 + t26144 * t28665) * t27321 - t27412 * t29108;
t28201 = t27346 * t28665;
t27502 = (t26138 * t27412 + t26144 * t28201) * t27333 - (t26138 * t28201 - t26144 * t27412) * t27321 + t27390 * t28329;
t25556 = (t27383 * t25682 - t27387 * t27502) * t27327 + t27315 * (t25682 * t27387 + t27383 * t27502);
t25493 = (pkin(3) * t25532 + t25556 * t27313) * t27411 - t27405 * (pkin(3) * t25556 - t25532 * t27313);
t28267 = t27299 * t28723;
t27124 = t27390 * t28267;
t28459 = t27299 * t29359;
t27905 = t27412 * t28459;
t26488 = t27124 + (t27278 + t27905) * t27386;
t27998 = t29359 * t27390;
t28128 = t27385 * t28677;
t26925 = t27386 * t28128 - t27998;
t28276 = t27259 * t28724;
t27048 = t27406 * t28276;
t28470 = t27386 * t27313;
t27734 = 0.2e1 * pkin(3) * t27385 * t28470;
t27150 = t27406 * t27734;
t27263 = t27390 * t27310;
t29318 = pkin(3) * t27390;
t27309 = pkin(2) * t29318;
t28834 = (t27388 + 0.1e1) * (t27388 - 0.1e1);
t28472 = pkin(9) * t28834;
t27941 = t27385 * t28472;
t27746 = t27406 * t27941;
t28462 = -0.2e1 * t28562;
t29320 = pkin(3) * t27384;
t25862 = (t26925 * t28462 + t27048) * t27373 + ((t26925 * t27259 + t27150) * t27405 - t27263 + pkin(3) * t26488) * t27411 + (t26488 * t27313 + t27309) * t27405 + (t26925 * t29320 - t27386 * t27746) * pkin(9);
t25856 = 0.1e1 / t25862;
t29258 = t25493 * t25856;
t28411 = t27385 * t29258;
t27883 = t27299 * t28411;
t25478 = t27883 * t27313;
t26928 = -t27362 * t28759 - t27363 * t28773;
t28758 = t27365 * t27437;
t26929 = t27362 * t28783 - t27364 * t28758;
t25646 = (-t26532 * t26929 - t26928 * t29507) * t27435 + ((-t26157 - t29069) * t27365 + (-t26156 + t29063) * t27363) * t27436 + (-t26156 * t27365 + t26157 * t27363) * t28774;
t26814 = -t27361 * t28766 + t27364 * t27909 + t28791;
t25772 = t26157 * t27437 + (t26814 * t28758 - t29501) * t27436 + (t26157 * t27362 + t26814 * t26928 + (t26532 * t27436 - t29500) * t27364) * t27435;
t28782 = t27363 * t27437;
t25773 = t26156 * t27437 + (t26814 * t28782 + t29500) * t27436 + (t26156 * t27362 - t26814 * t26929 + (t27436 * t29507 - t29501) * t27364) * t27435;
t28275 = t27259 * t28677;
t27847 = t27405 * t28275;
t27690 = t27385 * t27847;
t27246 = 0.2e1 * t27272 + pkin(2);
t28300 = t27246 * t28720;
t26367 = (t27690 + (t27905 + t28300) * pkin(3)) * t27386;
t26563 = -t27677 + t28316;
t27260 = -t27458 + t27999;
t27264 = pkin(2) * t27272;
t28913 = t27299 * t27385;
t28500 = pkin(3) * t28913;
t27509 = ((-t27260 + t27264) * t27389 - t27405 * t28500) * t29258;
t28211 = t27456 * t28834;
t27585 = (t27369 * t28211 - t27458) * t27390;
t27604 = -t27369 * t27999 + t27458;
t28600 = 0.2e1 * t27313;
t27798 = t28600 * t29258;
t27739 = pkin(3) * t27798;
t25688 = t25814 * t27387 + t25895 * t27383;
t28683 = t27389 * t27405;
t27044 = pkin(3) * t28683 - t28913;
t26805 = t27411 * t28469 - t27044;
t26557 = -t26805 * t27412 + t27199 * t27406;
t29072 = (t26805 * t27406 + t27199 * t27412) * t27390;
t25547 = -(t25688 * t27327 + t27315 * t29465) * t29072 + t26557 * (t25688 * t27315 - t27327 * t29465);
t28460 = t27259 * t29359;
t27192 = pkin(3) * t28267;
t28566 = t27310 - t27192;
t26618 = -t27405 * t28460 - t28566;
t28079 = t29359 * t29321;
t28131 = t27385 * t28683;
t26740 = t27259 * t28131 + t28079;
t28094 = -0.2e1 * t27270;
t28210 = t27373 * t28833;
t29304 = pkin(9) * t27193;
t25910 = (t26618 * t27411 + (-t27369 + 0.2e1 * t28210) * t28562 + t28575) * t27390 + ((t26740 * t27411 + (t27373 * t28094 + t26781) * t27313) * t27412 + (t27246 * t29314 + t27259 * t27373 + t29304) * t28720) * t27386;
t25904 = 0.1e1 / t25910;
t29231 = t25547 * t25904;
t27953 = t29231 * t27313;
t27785 = pkin(3) * t27953;
t27786 = t27313 - t28471;
t27829 = t27389 * t28211;
t28268 = t27299 * t28833;
t27838 = t27412 * t28268;
t27841 = t27406 * t28268;
t27212 = t27390 * t27259;
t27848 = t27212 * t28833;
t27940 = t27412 * t28472;
t28735 = t27384 * t27406;
t28468 = pkin(9) * t28735;
t28063 = pkin(3) * t28468;
t28512 = pkin(3) * t29258;
t28068 = pkin(2) * t28512;
t28107 = t27389 * t29258;
t27740 = t27386 * t27934;
t27656 = t27740 * t29377;
t27271 = t27384 * t29318;
t27261 = pkin(9) * t27271;
t27954 = t27369 * t27271;
t28568 = t27954 * t29376 - 0.2e1 * t27261;
t26395 = (t27412 * t27656 + t27048 + t28568) * t27373;
t27078 = -t27315 * t27383 + t27327 * t27387;
t26645 = t27072 * t27412 + t27078 * t28665;
t27629 = (t27271 - t27954) * pkin(9);
t27649 = (-t27072 * t27406 + t27078 * t28662) * t27389 - t27078 * t28724;
t27749 = t29359 * t27212;
t27755 = t27369 * t28909 + t29434;
t28569 = pkin(3) * t27124 - t27263;
t28576 = t27390 * t27747 + t27309;
t29174 = 0.1e1 / (t26395 + ((t27150 - t27749) * t27405 + t28569) * t27411 + t28576 * t27405 + t27629 + ((pkin(3) * t27755 + t27690) * t27411 + (-t27746 + (pkin(3) * t28128 + t27405 * t27755) * t27384) * pkin(9)) * t27386) * ((pkin(3) * t27649 + t26645 * t27313) * t27411 + t27405 * (-pkin(3) * t26645 + t27313 * t27649));
t28359 = t27352 * t29174;
t28390 = t27385 * t29231;
t28391 = t27260 * t29231;
t28392 = t27259 * t29231;
t28412 = t27259 * t29258;
t29317 = pkin(3) * t27406;
t28506 = t27246 * t29317;
t28646 = t27405 * t27411;
t28518 = 0.2e1 * t28646;
t28645 = t27405 * t27412;
t28684 = t27389 * t27390;
t28282 = t27369 * t27213;
t29054 = (-t27213 + t28282 + t28566) * t27390;
t29078 = (-t27848 + (0.2e1 * t28063 + t28275) * t28724) * t27373;
t28899 = t27321 * t27346;
t26599 = t27072 * t27333 + t27078 * t28899;
t26605 = t27072 * t28899 - t27078 * t27333;
t26025 = (t26599 * t28662 - t26605 * t27406) * t27389 - t26599 * t28724;
t26267 = t26599 * t28665 + t26605 * t27412;
t25745 = (pkin(3) * t26025 + t26267 * t27313) * t27411 + t27405 * (-pkin(3) * t26267 + t26025 * t27313);
t29183 = t25745 * t25856;
t28864 = t27333 * t27346;
t26584 = t27072 * t28864 + t27078 * t27321;
t26585 = -t27072 * t27321 + t27078 * t28864;
t26024 = (-t26584 * t27406 + t26585 * t28662) * t27389 - t26585 * t28724;
t26264 = t26584 * t27412 + t26585 * t28665;
t25742 = (-pkin(3) * t26024 - t26264 * t27313) * t27411 - t27405 * (-pkin(3) * t26264 + t26024 * t27313);
t29186 = t25742 * t25856;
t25364 = -((((t27406 * t27739 + t27412 * t28392) * t27389 + 0.2e1 * t27406 * t27785 + t27412 * t28412) * t28724 - t27848 * t29231) * t27373 + (((t27412 * t28068 + (-(t27406 * t28412 - 0.2e1 * t27412 * t27785) * t27389 + t27412 * t27739 - t27406 * t28392) * t27405) * t27385 - t27841 * t28512) * t27386 - (t25478 + pkin(3) * (t27405 * t27953 * t29358 + pkin(2) * t28107)) * t27390) * t27411 + ((-pkin(3) * t28735 - t27389 * t27940) * t28390 + (-t27385 * t27940 + ((pkin(2) * t28645 - pkin(3) * t28682) * t27385 - t27405 * t27841) * t27384) * t29258) * t29296 - (t27604 * t29231 + t27509) * t27390) / (t26509 + (((t27847 + t28506) * t27385 + pkin(3) * t27838) * t27386 - t29054) * t27411 + ((pkin(3) * t28137 + t27193 * t27406) * t27385 + t27838 * t28736) * t29296 + (t27023 + pkin(3) * (t27343 + t27786)) * t27390) * t29258 - ((-t27385 * t28699 + t28684) * t28391 + (t29078 + t26563 * t28518 - (t27412 * t27829 + t28063) * t28724 + t27585) * t29258) / ((t26367 - t29054) * t27411 + t28093) * t29231 + t25646 * t28359 + t25773 * t29186 + t25772 * t29183;
t29357 = pkin(2) * t25364;
t27070 = t27389 * t28661 - t28724;
t28680 = t27389 * t27408;
t29016 = t27070 * t27347;
t25659 = (t26139 * t28680 - t26145 * t29016) * t27334 + (t26139 * t29016 + t26145 * t28680) * t27322 - t27070 * t29107;
t28196 = t27347 * t28680;
t28328 = t27408 * t29107;
t25665 = (t26139 * t27070 + t26145 * t28196) * t27334 + (-t26139 * t28196 + t26145 * t27070) * t27322 + t27389 * t28328;
t25533 = (t25659 * t27387 + t25665 * t27383) * t27328 + t27316 * (-t25659 * t27383 + t25665 * t27387);
t28823 = t27347 * t27414;
t25683 = (t26139 * t28664 - t26145 * t28823) * t27334 + (t26139 * t28823 + t26145 * t28664) * t27322 - t27414 * t29107;
t28195 = t27347 * t28664;
t27501 = (t26139 * t27414 + t26145 * t28195) * t27334 - (t26139 * t28195 - t26145 * t27414) * t27322 + t27390 * t28328;
t25557 = (t27383 * t25683 - t27387 * t27501) * t27328 + t27316 * (t25683 * t27387 + t27383 * t27501);
t25494 = (pkin(3) * t25533 + t25557 * t27313) * t27413 - t27407 * (pkin(3) * t25557 - t25533 * t27313);
t27904 = t27414 * t28459;
t26489 = t27124 + (t27279 + t27904) * t27386;
t28127 = t27385 * t28676;
t26926 = t27386 * t28127 - t27998;
t27049 = t27408 * t28276;
t27151 = t27408 * t27734;
t27745 = t27408 * t27941;
t25863 = (t26926 * t28462 + t27049) * t27374 + ((t26926 * t27259 + t27151) * t27407 - t27263 + pkin(3) * t26489) * t27413 + (t26489 * t27313 + t27309) * t27407 + (t26926 * t29320 - t27386 * t27745) * pkin(9);
t25858 = 0.1e1 / t25863;
t29257 = t25494 * t25858;
t28408 = t27385 * t29257;
t27881 = t27299 * t28408;
t25479 = t27881 * t27313;
t25647 = (-t26533 * t26929 - t26928 * t29506) * t27435 + ((-t26159 - t29068) * t27365 + (-t26158 + t29062) * t27363) * t27436 + (-t26158 * t27365 + t26159 * t27363) * t28774;
t26815 = -t27361 * t28765 + t27364 * t27910 + t28790;
t25774 = t26159 * t27437 + (t26815 * t28758 - t29499) * t27436 + (t26159 * t27362 + t26815 * t26928 + (t26533 * t27436 - t29498) * t27364) * t27435;
t25775 = t26158 * t27437 + (t26815 * t28782 + t29498) * t27436 + (t26158 * t27362 - t26815 * t26929 + (t27436 * t29506 - t29499) * t27364) * t27435;
t28274 = t27259 * t28676;
t27846 = t27407 * t28274;
t27689 = t27385 * t27846;
t27248 = 0.2e1 * t27274 + pkin(2);
t28299 = t27248 * t28718;
t26368 = (t27689 + (t27904 + t28299) * pkin(3)) * t27386;
t26564 = -t27677 + t28315;
t27265 = pkin(2) * t27274;
t27508 = ((-t27260 + t27265) * t27389 - t27407 * t28500) * t29257;
t27797 = t28600 * t29257;
t27738 = pkin(3) * t27797;
t25689 = t25815 * t27387 + t25896 * t27383;
t28681 = t27389 * t27407;
t27045 = pkin(3) * t28681 - t28913;
t26806 = t27413 * t28469 - t27045;
t26558 = -t26806 * t27414 + t27200 * t27408;
t29071 = (t26806 * t27408 + t27200 * t27414) * t27390;
t25548 = -(t25689 * t27328 + t27316 * t29464) * t29071 + t26558 * (t27316 * t25689 - t27328 * t29464);
t26620 = -t27407 * t28460 - t28566;
t28130 = t27385 * t28681;
t26741 = t27259 * t28130 + t28079;
t28209 = t27374 * t28833;
t29303 = pkin(9) * t27194;
t25911 = (t26620 * t27413 + (-t27369 + 0.2e1 * t28209) * t28562 + t28574) * t27390 + ((t26741 * t27413 + (t27374 * t28094 + t26782) * t27313) * t27414 + (t27248 * t29313 + t27259 * t27374 + t29303) * t28718) * t27386;
t25906 = 0.1e1 / t25911;
t29230 = t25548 * t25906;
t27952 = t29230 * t27313;
t27784 = pkin(3) * t27952;
t27837 = t27414 * t28268;
t27840 = t27408 * t28268;
t27939 = t27414 * t28472;
t28733 = t27384 * t27408;
t28467 = pkin(9) * t28733;
t28062 = pkin(3) * t28467;
t28511 = pkin(3) * t29257;
t28067 = pkin(2) * t28511;
t28106 = t27389 * t29257;
t26396 = (t27414 * t27656 + t27049 + t28568) * t27374;
t27079 = -t27316 * t27383 + t27328 * t27387;
t26647 = t27073 * t27414 + t27079 * t28664;
t27648 = (-t27073 * t27408 + t27079 * t28661) * t27389 - t27079 * t28724;
t27754 = t27369 * t28908 + t29433;
t29173 = 0.1e1 / (t26396 + ((t27151 - t27749) * t27407 + t28569) * t27413 + t28576 * t27407 + t27629 + ((pkin(3) * t27754 + t27689) * t27413 + (-t27745 + (pkin(3) * t28127 + t27407 * t27754) * t27384) * pkin(9)) * t27386) * ((pkin(3) * t27648 + t26647 * t27313) * t27413 + t27407 * (-pkin(3) * t26647 + t27313 * t27648));
t28358 = t27353 * t29173;
t28386 = t27385 * t29230;
t28387 = t27260 * t29230;
t28388 = t27259 * t29230;
t28409 = t27259 * t29257;
t29316 = pkin(3) * t27408;
t28505 = t27248 * t29316;
t28642 = t27407 * t27413;
t28517 = 0.2e1 * t28642;
t28641 = t27407 * t27414;
t28281 = t27369 * t27214;
t29053 = (-t27214 + t28281 + t28566) * t27390;
t29077 = (-t27848 + (0.2e1 * t28062 + t28274) * t28724) * t27374;
t28893 = t27322 * t27347;
t26600 = t27073 * t27334 + t27079 * t28893;
t26606 = t27073 * t28893 - t27079 * t27334;
t26027 = (t26600 * t28661 - t26606 * t27408) * t27389 - t26600 * t28724;
t26268 = t26600 * t28664 + t26606 * t27414;
t25746 = (pkin(3) * t26027 + t26268 * t27313) * t27413 + t27407 * (-pkin(3) * t26268 + t26027 * t27313);
t29182 = t25746 * t25858;
t28859 = t27334 * t27347;
t26586 = t27073 * t28859 + t27079 * t27322;
t26587 = -t27073 * t27322 + t27079 * t28859;
t26026 = (-t26586 * t27408 + t26587 * t28661) * t27389 - t26587 * t28724;
t26265 = t26586 * t27414 + t26587 * t28664;
t25743 = (-pkin(3) * t26026 - t26265 * t27313) * t27413 - t27407 * (-pkin(3) * t26265 + t26026 * t27313);
t29185 = t25743 * t25858;
t25365 = -((((t27408 * t27738 + t27414 * t28388) * t27389 + 0.2e1 * t27408 * t27784 + t27414 * t28409) * t28724 - t27848 * t29230) * t27374 + (((t27414 * t28067 + (-(t27408 * t28409 - 0.2e1 * t27414 * t27784) * t27389 + t27414 * t27738 - t27408 * t28388) * t27407) * t27385 - t27840 * t28511) * t27386 - (t25479 + pkin(3) * (t27407 * t27952 * t29358 + pkin(2) * t28106)) * t27390) * t27413 + ((-pkin(3) * t28733 - t27389 * t27939) * t28386 + (-t27385 * t27939 + ((pkin(2) * t28641 - pkin(3) * t28680) * t27385 - t27407 * t27840) * t27384) * t29257) * t29296 - (t27604 * t29230 + t27508) * t27390) / (t26510 + (((t27846 + t28505) * t27385 + pkin(3) * t27837) * t27386 - t29053) * t27413 + ((pkin(3) * t28136 + t27194 * t27408) * t27385 + t27837 * t28734) * t29296 + (t27024 + pkin(3) * (t27344 + t27786)) * t27390) * t29257 - ((-t27385 * t28698 + t28684) * t28387 + (t29077 + t26564 * t28517 - (t27414 * t27829 + t28062) * t28724 + t27585) * t29257) / ((t26368 - t29053) * t27413 + t28092) * t29230 + t25647 * t28358 + t25775 * t29185 + t25774 * t29182;
t29356 = pkin(2) * t25365;
t27071 = t27389 * t28660 - t28724;
t28678 = t27389 * t27410;
t29015 = t27071 * t27348;
t25660 = (t26140 * t28678 - t26146 * t29015) * t27335 + (t26140 * t29015 + t26146 * t28678) * t27323 - t27071 * t29106;
t28190 = t27348 * t28678;
t28327 = t27410 * t29106;
t25666 = (t26140 * t27071 + t26146 * t28190) * t27335 + (-t26140 * t28190 + t26146 * t27071) * t27323 + t27389 * t28327;
t25534 = (t25660 * t27387 + t25666 * t27383) * t27329 + t27317 * (-t25660 * t27383 + t25666 * t27387);
t28818 = t27348 * t27416;
t25684 = (t26140 * t28663 - t26146 * t28818) * t27335 + (t26140 * t28818 + t26146 * t28663) * t27323 - t27416 * t29106;
t28189 = t27348 * t28663;
t27500 = (t26140 * t27416 + t26146 * t28189) * t27335 - (t26140 * t28189 - t26146 * t27416) * t27323 + t27390 * t28327;
t25558 = (t27383 * t25684 - t27387 * t27500) * t27329 + t27317 * (t25684 * t27387 + t27383 * t27500);
t25495 = (pkin(3) * t25534 + t25558 * t27313) * t27415 - t27409 * (pkin(3) * t25558 - t25534 * t27313);
t27903 = t27416 * t28459;
t26490 = t27124 + (t27280 + t27903) * t27386;
t28126 = t27385 * t28675;
t26927 = t27386 * t28126 - t27998;
t27050 = t27410 * t28276;
t27152 = t27410 * t27734;
t27744 = t27410 * t27941;
t25864 = (t26927 * t28462 + t27050) * t27375 + ((t26927 * t27259 + t27152) * t27409 - t27263 + pkin(3) * t26490) * t27415 + (t26490 * t27313 + t27309) * t27409 + (t26927 * t29320 - t27386 * t27744) * pkin(9);
t25860 = 0.1e1 / t25864;
t29256 = t25495 * t25860;
t28405 = t27385 * t29256;
t27879 = t27299 * t28405;
t25480 = t27879 * t27313;
t25648 = (-t26534 * t26929 - t26928 * t29505) * t27435 + ((-t26161 - t29067) * t27365 + (-t26160 + t29061) * t27363) * t27436 + (-t26160 * t27365 + t26161 * t27363) * t28774;
t26816 = -t27361 * t28764 + t27364 * t27911 + t28789;
t25776 = t26161 * t27437 + (t26816 * t28758 - t29497) * t27436 + (t26161 * t27362 + t26816 * t26928 + (t26534 * t27436 - t29496) * t27364) * t27435;
t25777 = t26160 * t27437 + (t26816 * t28782 + t29496) * t27436 + (t26160 * t27362 - t26816 * t26929 + (t27436 * t29505 - t29497) * t27364) * t27435;
t28273 = t27259 * t28675;
t27845 = t27409 * t28273;
t27688 = t27385 * t27845;
t27250 = 0.2e1 * t27276 + pkin(2);
t28298 = t27250 * t28716;
t26369 = (t27688 + (t27903 + t28298) * pkin(3)) * t27386;
t26565 = -t27677 + t28314;
t27266 = pkin(2) * t27276;
t27507 = ((-t27260 + t27266) * t27389 - t27409 * t28500) * t29256;
t27796 = t28600 * t29256;
t27737 = pkin(3) * t27796;
t25690 = t25816 * t27387 + t25897 * t27383;
t28679 = t27389 * t27409;
t27046 = pkin(3) * t28679 - t28913;
t26807 = t27415 * t28469 - t27046;
t26559 = -t26807 * t27416 + t27201 * t27410;
t29070 = (t26807 * t27410 + t27201 * t27416) * t27390;
t25549 = -(t25690 * t27329 + t27317 * t29463) * t29070 + t26559 * (t27317 * t25690 - t27329 * t29463);
t26622 = -t27409 * t28460 - t28566;
t28129 = t27385 * t28679;
t26742 = t27259 * t28129 + t28079;
t28208 = t27375 * t28833;
t29302 = pkin(9) * t27195;
t25912 = (t26622 * t27415 + (-t27369 + 0.2e1 * t28208) * t28562 + t28573) * t27390 + ((t26742 * t27415 + (t27375 * t28094 + t26783) * t27313) * t27416 + (t27250 * t29312 + t27259 * t27375 + t29302) * t28716) * t27386;
t25908 = 0.1e1 / t25912;
t29229 = t25549 * t25908;
t27951 = t29229 * t27313;
t27783 = pkin(3) * t27951;
t27836 = t27416 * t28268;
t27839 = t27410 * t28268;
t27938 = t27416 * t28472;
t28731 = t27384 * t27410;
t28466 = pkin(9) * t28731;
t28061 = pkin(3) * t28466;
t28510 = pkin(3) * t29256;
t28066 = pkin(2) * t28510;
t28105 = t27389 * t29256;
t26397 = (t27416 * t27656 + t27050 + t28568) * t27375;
t27080 = -t27317 * t27383 + t27329 * t27387;
t26649 = t27074 * t27416 + t27080 * t28663;
t27647 = (-t27074 * t27410 + t27080 * t28660) * t27389 - t27080 * t28724;
t27753 = t27369 * t28907 + t29432;
t29172 = 0.1e1 / (t26397 + ((t27152 - t27749) * t27409 + t28569) * t27415 + t28576 * t27409 + t27629 + ((pkin(3) * t27753 + t27688) * t27415 + (-t27744 + (pkin(3) * t28126 + t27409 * t27753) * t27384) * pkin(9)) * t27386) * ((pkin(3) * t27647 + t26649 * t27313) * t27415 + t27409 * (-pkin(3) * t26649 + t27313 * t27647));
t28357 = t27354 * t29172;
t28382 = t27385 * t29229;
t28383 = t27260 * t29229;
t28384 = t27259 * t29229;
t28406 = t27259 * t29256;
t29315 = pkin(3) * t27410;
t28504 = t27250 * t29315;
t28638 = t27409 * t27415;
t28516 = 0.2e1 * t28638;
t28637 = t27409 * t27416;
t28280 = t27369 * t27215;
t29052 = (-t27215 + t28280 + t28566) * t27390;
t29076 = (-t27848 + (0.2e1 * t28061 + t28273) * t28724) * t27375;
t28887 = t27323 * t27348;
t26601 = t27074 * t27335 + t27080 * t28887;
t26607 = t27074 * t28887 - t27080 * t27335;
t26029 = (t26601 * t28660 - t26607 * t27410) * t27389 - t26601 * t28724;
t26269 = t26601 * t28663 + t26607 * t27416;
t25747 = (pkin(3) * t26029 + t26269 * t27313) * t27415 + t27409 * (-pkin(3) * t26269 + t26029 * t27313);
t29181 = t25747 * t25860;
t28854 = t27335 * t27348;
t26588 = t27074 * t28854 + t27080 * t27323;
t26589 = -t27074 * t27323 + t27080 * t28854;
t26028 = (-t26588 * t27410 + t26589 * t28660) * t27389 - t26589 * t28724;
t26266 = t26588 * t27416 + t26589 * t28663;
t25744 = (-pkin(3) * t26028 - t26266 * t27313) * t27415 - t27409 * (-pkin(3) * t26266 + t26028 * t27313);
t29184 = t25744 * t25860;
t25366 = -((((t27410 * t27737 + t27416 * t28384) * t27389 + 0.2e1 * t27410 * t27783 + t27416 * t28406) * t28724 - t27848 * t29229) * t27375 + (((t27416 * t28066 + (-(t27410 * t28406 - 0.2e1 * t27416 * t27783) * t27389 + t27416 * t27737 - t27410 * t28384) * t27409) * t27385 - t27839 * t28510) * t27386 - (t25480 + pkin(3) * (t27409 * t27951 * t29358 + pkin(2) * t28105)) * t27390) * t27415 + ((-pkin(3) * t28731 - t27389 * t27938) * t28382 + (-t27385 * t27938 + ((pkin(2) * t28637 - pkin(3) * t28678) * t27385 - t27409 * t27839) * t27384) * t29256) * t29296 - (t27604 * t29229 + t27507) * t27390) / (t26511 + (((t27845 + t28504) * t27385 + pkin(3) * t27836) * t27386 - t29052) * t27415 + ((pkin(3) * t28135 + t27195 * t27410) * t27385 + t27836 * t28732) * t29296 + (t27025 + pkin(3) * (t27345 + t27786)) * t27390) * t29256 - ((-t27385 * t28697 + t28684) * t28383 + (t29076 + t26565 * t28516 - (t27416 * t27829 + t28061) * t28724 + t27585) * t29256) / ((t26369 - t29052) * t27415 + t28091) * t29229 + t25648 * t28357 + t25777 * t29184 + t25776 * t29181;
t29355 = pkin(2) * t25366;
t27093 = t27389 * t28656 - t28724;
t28673 = t27389 * t27424;
t28993 = t27093 * t27349;
t25661 = (t26141 * t28673 - t26147 * t28993) * t27336 + (t26141 * t28993 + t26147 * t28673) * t27324 - t27093 * t29105;
t28184 = t27349 * t28673;
t28326 = t27424 * t29105;
t25667 = (t26141 * t27093 + t26147 * t28184) * t27336 + (-t26141 * t28184 + t26147 * t27093) * t27324 + t27389 * t28326;
t25535 = (t25661 * t27387 + t25667 * t27383) * t27330 + t27318 * (-t25661 * t27383 + t25667 * t27387);
t28813 = t27349 * t27430;
t25685 = (t26141 * t28659 - t26147 * t28813) * t27336 + (t26141 * t28813 + t26147 * t28659) * t27324 - t27430 * t29105;
t28183 = t27349 * t28659;
t27499 = (t26141 * t27430 + t26147 * t28183) * t27336 - (t26141 * t28183 - t26147 * t27430) * t27324 + t27390 * t28326;
t25559 = (t27383 * t25685 - t27387 * t27499) * t27330 + t27318 * (t25685 * t27387 + t27383 * t27499);
t25499 = (pkin(3) * t25535 + t25559 * t27313) * t27429 - t27423 * (pkin(3) * t25559 - t25535 * t27313);
t27899 = t27430 * t28459;
t26491 = t27124 + (t27287 + t27899) * t27386;
t28122 = t27385 * t28668;
t26930 = t27386 * t28122 - t27998;
t27057 = t27424 * t28276;
t27156 = t27424 * t27734;
t27743 = t27424 * t27941;
t25871 = (t26930 * t28462 + t27057) * t27379 + ((t26930 * t27259 + t27156) * t27423 - t27263 + pkin(3) * t26491) * t27429 + (t26491 * t27313 + t27309) * t27423 + (t26930 * t29320 - t27386 * t27743) * pkin(9);
t25865 = 0.1e1 / t25871;
t29255 = t25499 * t25865;
t28399 = t27385 * t29255;
t27871 = t27299 * t28399;
t25484 = t27871 * t27313;
t25649 = (-t26535 * t26929 - t26928 * t29504) * t27435 + ((-t26163 - t29066) * t27365 + (-t26162 + t29060) * t27363) * t27436 + (-t26162 * t27365 + t26163 * t27363) * t28774;
t26817 = -t27361 * t28763 + t27364 * t27912 + t28788;
t25778 = t26163 * t27437 + (t26817 * t28758 - t29495) * t27436 + (t26163 * t27362 + t26817 * t26928 + (t26535 * t27436 - t29494) * t27364) * t27435;
t25779 = t26162 * t27437 + (t26817 * t28782 + t29494) * t27436 + (t26162 * t27362 - t26817 * t26929 + (t27436 * t29504 - t29495) * t27364) * t27435;
t28272 = t27259 * t28668;
t27844 = t27423 * t28272;
t27687 = t27385 * t27844;
t27252 = 0.2e1 * t27281 + pkin(2);
t28297 = t27252 * t28711;
t26370 = (t27687 + (t27899 + t28297) * pkin(3)) * t27386;
t26596 = -t27677 + t28313;
t27267 = pkin(2) * t27281;
t27506 = ((-t27260 + t27267) * t27389 - t27423 * t28500) * t29255;
t27795 = t28600 * t29255;
t27832 = t27430 * t28268;
t27835 = t27424 * t28268;
t28729 = t27384 * t27424;
t28465 = pkin(9) * t28729;
t28060 = pkin(3) * t28465;
t27919 = 0.2e1 * t28060;
t27937 = t27430 * t28472;
t25691 = t25817 * t27387 + t25898 * t27383;
t28674 = t27389 * t27423;
t27051 = pkin(3) * t28674 - t28913;
t26811 = t27429 * t28469 - t27051;
t26611 = -t26811 * t27430 + t27208 * t27424;
t29057 = (t26811 * t27424 + t27208 * t27430) * t27390;
t25553 = -(t25691 * t27330 + t27318 * t29462) * t29057 + t26611 * (t27318 * t25691 - t27330 * t29462);
t26624 = -t27423 * t28460 - t28566;
t28125 = t27385 * t28674;
t26743 = t27259 * t28125 + t28079;
t28207 = t27379 * t28833;
t29301 = pkin(9) * t27202;
t25925 = (t26624 * t27429 + (-t27369 + 0.2e1 * t28207) * t28562 + t28572) * t27390 + ((t26743 * t27429 + (t27379 * t28094 + t26790) * t27313) * t27430 + (t27252 * t29308 + t27259 * t27379 + t29301) * t28711) * t27386;
t25916 = 0.1e1 / t25925;
t29225 = t25553 * t25916;
t27950 = t29225 * t27313;
t28057 = 0.2e1 * t28562;
t28509 = pkin(3) * t29255;
t28078 = pkin(2) * t28509;
t28098 = t27389 * t29225;
t28104 = t27389 * t29255;
t26401 = (t27430 * t27656 + t27057 + t28568) * t27379;
t27081 = -t27318 * t27383 + t27330 * t27387;
t26663 = t27075 * t27430 + t27081 * t28659;
t27646 = (-t27075 * t27424 + t27081 * t28656) * t27389 - t27081 * t28724;
t27752 = t27369 * t28903 + t29431;
t29171 = 0.1e1 / (t26401 + ((t27156 - t27749) * t27423 + t28569) * t27429 + t28576 * t27423 + t27629 + ((pkin(3) * t27752 + t27687) * t27429 + (-t27743 + (pkin(3) * t28122 + t27423 * t27752) * t27384) * pkin(9)) * t27386) * ((pkin(3) * t27646 + t26663 * t27313) * t27429 + t27423 * (-pkin(3) * t26663 + t27313 * t27646));
t28356 = t27355 * t29171;
t28379 = t27385 * t29225;
t28380 = t27260 * t29225;
t28400 = t27259 * t29255;
t29311 = pkin(3) * t27424;
t28503 = t27252 * t29311;
t28631 = t27423 * t27429;
t28515 = 0.2e1 * t28631;
t28630 = t27423 * t27430;
t28279 = t27369 * t27216;
t29051 = (-t27216 + t28279 + t28566) * t27390;
t29075 = (-t27848 + (t27919 + t28272) * t28724) * t27379;
t28881 = t27324 * t27349;
t26602 = t27075 * t27336 + t27081 * t28881;
t26608 = t27075 * t28881 - t27081 * t27336;
t26031 = (t26602 * t28656 - t26608 * t27424) * t27389 - t26602 * t28724;
t26273 = t26602 * t28659 + t26608 * t27430;
t25754 = (pkin(3) * t26031 + t26273 * t27313) * t27429 + t27423 * (-pkin(3) * t26273 + t26031 * t27313);
t29177 = t25754 * t25865;
t28849 = t27336 * t27349;
t26590 = t27075 * t28849 + t27081 * t27324;
t26591 = -t27075 * t27324 + t27081 * t28849;
t26030 = (-t26590 * t27424 + t26591 * t28656) * t27389 - t26591 * t28724;
t26270 = t26590 * t27430 + t26591 * t28659;
t25751 = (-pkin(3) * t26030 - t26270 * t27313) * t27429 - t27423 * (-pkin(3) * t26270 + t26030 * t27313);
t29180 = t25751 * t25865;
t25367 = -((((t27259 * t27430 * t29225 + t27795 * t29311) * t27389 + t27919 * t29225 + t27430 * t28400) * t28724 - t27848 * t29225) * t27379 + (((t27430 * t28078 + ((-t28104 - t29225) * t28629 + (t28098 + t29255) * t27430 * t28057) * t27423) * t27385 - t27835 * t28509) * t27386 - (t25484 + pkin(3) * (t27423 * t27950 * t29358 + pkin(2) * t28104)) * t27390) * t27429 + ((-pkin(3) * t28729 - t27389 * t27937) * t28379 + (-t27385 * t27937 + ((pkin(2) * t28630 - pkin(3) * t28673) * t27385 - t27423 * t27835) * t27384) * t29255) * t29296 - (t27604 * t29225 + t27506) * t27390) / (t26515 + (((t27844 + t28503) * t27385 + pkin(3) * t27832) * t27386 - t29051) * t27429 + ((pkin(3) * t28134 + t27202 * t27424) * t27385 + t27832 * t28730) * t29296 + (t27026 + pkin(3) * (t27358 + t27786)) * t27390) * t29255 - ((-t27385 * t28693 + t28684) * t28380 + (t29075 + t26596 * t28515 - (t27430 * t27829 + t28060) * t28724 + t27585) * t29255) / ((t26370 - t29051) * t27429 + t28090) * t29225 + t25649 * t28356 + t25779 * t29180 + t25778 * t29177;
t29354 = pkin(2) * t25367;
t27094 = t27389 * t28655 - t28724;
t28671 = t27389 * t27426;
t28992 = t27094 * t27350;
t25662 = (t26142 * t28671 - t26148 * t28992) * t27337 + (t26142 * t28992 + t26148 * t28671) * t27325 - t27094 * t29104;
t28178 = t27350 * t28671;
t28325 = t27426 * t29104;
t25668 = (t26142 * t27094 + t26148 * t28178) * t27337 + (-t26142 * t28178 + t26148 * t27094) * t27325 + t27389 * t28325;
t25536 = (t25662 * t27387 + t25668 * t27383) * t27331 + t27319 * (-t25662 * t27383 + t25668 * t27387);
t28808 = t27350 * t27432;
t25686 = (t26142 * t28658 - t26148 * t28808) * t27337 + (t26142 * t28808 + t26148 * t28658) * t27325 - t27432 * t29104;
t28177 = t27350 * t28658;
t27498 = (t26142 * t27432 + t26148 * t28177) * t27337 - (t26142 * t28177 - t26148 * t27432) * t27325 + t27390 * t28325;
t25560 = (t27383 * t25686 - t27387 * t27498) * t27331 + t27319 * (t25686 * t27387 + t27383 * t27498);
t25500 = (pkin(3) * t25536 + t25560 * t27313) * t27431 - t27425 * (pkin(3) * t25560 - t25536 * t27313);
t27898 = t27432 * t28459;
t26492 = t27124 + (t27288 + t27898) * t27386;
t28121 = t27385 * t28667;
t26931 = t27386 * t28121 - t27998;
t27058 = t27426 * t28276;
t27157 = t27426 * t27734;
t27742 = t27426 * t27941;
t25872 = (t26931 * t28462 + t27058) * t27380 + ((t26931 * t27259 + t27157) * t27425 - t27263 + pkin(3) * t26492) * t27431 + (t26492 * t27313 + t27309) * t27425 + (t26931 * t29320 - t27386 * t27742) * pkin(9);
t25867 = 0.1e1 / t25872;
t29254 = t25500 * t25867;
t28396 = t27385 * t29254;
t27869 = t27299 * t28396;
t25485 = t27869 * t27313;
t25650 = (-t26536 * t26929 - t26928 * t29503) * t27435 + ((-t26165 - t29065) * t27365 + (-t26164 + t29059) * t27363) * t27436 + (-t26164 * t27365 + t26165 * t27363) * t28774;
t26818 = -t27361 * t28762 + t27364 * t27913 + t28787;
t25780 = t26165 * t27437 + (t26818 * t28758 - t29493) * t27436 + (t26165 * t27362 + t26818 * t26928 + (t26536 * t27436 - t29492) * t27364) * t27435;
t25781 = t26164 * t27437 + (t26818 * t28782 + t29492) * t27436 + (t26164 * t27362 - t26818 * t26929 + (t27436 * t29503 - t29493) * t27364) * t27435;
t28271 = t27259 * t28667;
t27843 = t27425 * t28271;
t27686 = t27385 * t27843;
t27254 = 0.2e1 * t27283 + pkin(2);
t28296 = t27254 * t28709;
t26371 = (t27686 + (t27898 + t28296) * pkin(3)) * t27386;
t26597 = -t27677 + t28312;
t27268 = pkin(2) * t27283;
t27505 = ((-t27260 + t27268) * t27389 - t27425 * t28500) * t29254;
t27794 = t28600 * t29254;
t27831 = t27432 * t28268;
t27834 = t27426 * t28268;
t28727 = t27384 * t27426;
t28464 = pkin(9) * t28727;
t28059 = pkin(3) * t28464;
t27918 = 0.2e1 * t28059;
t27936 = t27432 * t28472;
t25692 = t25818 * t27387 + t25899 * t27383;
t28672 = t27389 * t27425;
t27052 = pkin(3) * t28672 - t28913;
t26812 = t27431 * t28469 - t27052;
t26612 = -t26812 * t27432 + t27209 * t27426;
t29056 = (t26812 * t27426 + t27209 * t27432) * t27390;
t25554 = -(t25692 * t27331 + t27319 * t29461) * t29056 + t26612 * (t27319 * t25692 - t27331 * t29461);
t26626 = -t27425 * t28460 - t28566;
t28124 = t27385 * t28672;
t26744 = t27259 * t28124 + t28079;
t28206 = t27380 * t28833;
t29300 = pkin(9) * t27203;
t25926 = (t26626 * t27431 + (-t27369 + 0.2e1 * t28206) * t28562 + t28571) * t27390 + ((t26744 * t27431 + (t27380 * t28094 + t26791) * t27313) * t27432 + (t27254 * t29307 + t27259 * t27380 + t29300) * t28709) * t27386;
t25918 = 0.1e1 / t25926;
t29224 = t25554 * t25918;
t27949 = t29224 * t27313;
t28508 = pkin(3) * t29254;
t28077 = pkin(2) * t28508;
t28097 = t27389 * t29224;
t28103 = t27389 * t29254;
t26402 = (t27432 * t27656 + t27058 + t28568) * t27380;
t27082 = -t27319 * t27383 + t27331 * t27387;
t26665 = t27076 * t27432 + t27082 * t28658;
t27645 = (-t27076 * t27426 + t27082 * t28655) * t27389 - t27082 * t28724;
t27751 = t27369 * t28902 + t29430;
t29170 = 0.1e1 / (t26402 + ((t27157 - t27749) * t27425 + t28569) * t27431 + t28576 * t27425 + t27629 + ((pkin(3) * t27751 + t27686) * t27431 + (-t27742 + (pkin(3) * t28121 + t27425 * t27751) * t27384) * pkin(9)) * t27386) * ((pkin(3) * t27645 + t26665 * t27313) * t27431 + t27425 * (-pkin(3) * t26665 + t27313 * t27645));
t28355 = t27356 * t29170;
t28376 = t27385 * t29224;
t28377 = t27260 * t29224;
t28397 = t27259 * t29254;
t29310 = pkin(3) * t27426;
t28502 = t27254 * t29310;
t28626 = t27425 * t27431;
t28514 = 0.2e1 * t28626;
t28625 = t27425 * t27432;
t28278 = t27369 * t27217;
t29050 = (-t27217 + t28278 + t28566) * t27390;
t29074 = (-t27848 + (t27918 + t28271) * t28724) * t27380;
t28875 = t27325 * t27350;
t26603 = t27076 * t27337 + t27082 * t28875;
t26609 = t27076 * t28875 - t27082 * t27337;
t26033 = (t26603 * t28655 - t26609 * t27426) * t27389 - t26603 * t28724;
t26274 = t26603 * t28658 + t26609 * t27432;
t25755 = (pkin(3) * t26033 + t26274 * t27313) * t27431 + t27425 * (-pkin(3) * t26274 + t26033 * t27313);
t29176 = t25755 * t25867;
t28844 = t27337 * t27350;
t26592 = t27076 * t28844 + t27082 * t27325;
t26593 = -t27076 * t27325 + t27082 * t28844;
t26032 = (-t26592 * t27426 + t26593 * t28655) * t27389 - t26593 * t28724;
t26271 = t26592 * t27432 + t26593 * t28658;
t25752 = (-pkin(3) * t26032 - t26271 * t27313) * t27431 - t27425 * (-pkin(3) * t26271 + t26032 * t27313);
t29179 = t25752 * t25867;
t25368 = -((((t27259 * t27432 * t29224 + t27794 * t29310) * t27389 + t27918 * t29224 + t27432 * t28397) * t28724 - t27848 * t29224) * t27380 + (((t27432 * t28077 + ((-t28103 - t29224) * t28624 + (t28097 + t29254) * t27432 * t28057) * t27425) * t27385 - t27834 * t28508) * t27386 - (t25485 + pkin(3) * (t27425 * t27949 * t29358 + pkin(2) * t28103)) * t27390) * t27431 + ((-pkin(3) * t28727 - t27389 * t27936) * t28376 + (-t27385 * t27936 + ((pkin(2) * t28625 - pkin(3) * t28671) * t27385 - t27425 * t27834) * t27384) * t29254) * t29296 - (t27604 * t29224 + t27505) * t27390) / (t26516 + (((t27843 + t28502) * t27385 + pkin(3) * t27831) * t27386 - t29050) * t27431 + ((pkin(3) * t28133 + t27203 * t27426) * t27385 + t27831 * t28728) * t29296 + (t27027 + pkin(3) * (t27359 + t27786)) * t27390) * t29254 - ((-t27385 * t28692 + t28684) * t28377 + (t29074 + t26597 * t28514 - (t27432 * t27829 + t28059) * t28724 + t27585) * t29254) / ((t26371 - t29050) * t27431 + t28089) * t29224 + t25650 * t28355 + t25781 * t29179 + t25780 * t29176;
t29353 = pkin(2) * t25368;
t27095 = t27389 * t28654 - t28724;
t28669 = t27389 * t27428;
t28991 = t27095 * t27351;
t25663 = (t26143 * t28669 - t26149 * t28991) * t27338 + (t26143 * t28991 + t26149 * t28669) * t27326 - t27095 * t29103;
t28172 = t27351 * t28669;
t28324 = t27428 * t29103;
t25669 = (t26143 * t27095 + t26149 * t28172) * t27338 + (-t26143 * t28172 + t26149 * t27095) * t27326 + t27389 * t28324;
t25537 = (t25663 * t27387 + t25669 * t27383) * t27332 + t27320 * (-t25663 * t27383 + t25669 * t27387);
t28803 = t27351 * t27434;
t25687 = (t26143 * t28657 - t26149 * t28803) * t27338 + (t26143 * t28803 + t26149 * t28657) * t27326 - t27434 * t29103;
t28171 = t27351 * t28657;
t27497 = (t26143 * t27434 + t26149 * t28171) * t27338 - (t26143 * t28171 - t26149 * t27434) * t27326 + t27390 * t28324;
t25561 = (t27383 * t25687 - t27387 * t27497) * t27332 + t27320 * (t25687 * t27387 + t27383 * t27497);
t25501 = (pkin(3) * t25537 + t25561 * t27313) * t27433 - t27427 * (pkin(3) * t25561 - t25537 * t27313);
t27897 = t27434 * t28459;
t26493 = t27124 + (t27289 + t27897) * t27386;
t28120 = t27385 * t28666;
t26932 = t27386 * t28120 - t27998;
t27059 = t27428 * t28276;
t27158 = t27428 * t27734;
t27741 = t27428 * t27941;
t25873 = (t26932 * t28462 + t27059) * t27381 + ((t26932 * t27259 + t27158) * t27427 - t27263 + pkin(3) * t26493) * t27433 + (t26493 * t27313 + t27309) * t27427 + (t26932 * t29320 - t27386 * t27741) * pkin(9);
t25869 = 0.1e1 / t25873;
t29253 = t25501 * t25869;
t28393 = t27385 * t29253;
t27867 = t27299 * t28393;
t25486 = t27867 * t27313;
t25651 = (-t26537 * t26929 - t26928 * t29502) * t27435 + ((-t26167 - t29064) * t27365 + (-t26166 + t29058) * t27363) * t27436 + (-t26166 * t27365 + t26167 * t27363) * t28774;
t26819 = -t27361 * t28761 + t27364 * t27914 + t28786;
t25782 = t26167 * t27437 + (t26819 * t28758 - t29491) * t27436 + (t26167 * t27362 + t26819 * t26928 + (t26537 * t27436 - t29490) * t27364) * t27435;
t25783 = t26166 * t27437 + (t26819 * t28782 + t29490) * t27436 + (t26166 * t27362 - t26819 * t26929 + (t27436 * t29502 - t29491) * t27364) * t27435;
t28270 = t27259 * t28666;
t27842 = t27427 * t28270;
t27685 = t27385 * t27842;
t27256 = 0.2e1 * t27285 + pkin(2);
t28295 = t27256 * t28707;
t26372 = (t27685 + (t27897 + t28295) * pkin(3)) * t27386;
t26598 = -t27677 + t28311;
t27269 = pkin(2) * t27285;
t27504 = ((-t27260 + t27269) * t27389 - t27427 * t28500) * t29253;
t27793 = t28600 * t29253;
t27830 = t27434 * t28268;
t27833 = t27428 * t28268;
t28725 = t27384 * t27428;
t28463 = pkin(9) * t28725;
t28058 = pkin(3) * t28463;
t27917 = 0.2e1 * t28058;
t27935 = t27434 * t28472;
t25693 = t25819 * t27387 + t25900 * t27383;
t28670 = t27389 * t27427;
t27053 = pkin(3) * t28670 - t28913;
t26813 = t27433 * t28469 - t27053;
t26613 = -t26813 * t27434 + t27210 * t27428;
t29055 = (t26813 * t27428 + t27210 * t27434) * t27390;
t25555 = -(t25693 * t27332 + t27320 * t29460) * t29055 + t26613 * (t27320 * t25693 - t27332 * t29460);
t26628 = -t27427 * t28460 - t28566;
t28123 = t27385 * t28670;
t26745 = t27259 * t28123 + t28079;
t28205 = t27381 * t28833;
t29299 = pkin(9) * t27204;
t25927 = (t26628 * t27433 + (-t27369 + 0.2e1 * t28205) * t28562 + t28570) * t27390 + ((t26745 * t27433 + (t27381 * t28094 + t26792) * t27313) * t27434 + (t27256 * t29306 + t27259 * t27381 + t29299) * t28707) * t27386;
t25920 = 0.1e1 / t25927;
t29223 = t25555 * t25920;
t27948 = t29223 * t27313;
t28507 = pkin(3) * t29253;
t28076 = pkin(2) * t28507;
t28096 = t27389 * t29223;
t28102 = t27389 * t29253;
t26403 = (t27434 * t27656 + t27059 + t28568) * t27381;
t27083 = -t27320 * t27383 + t27332 * t27387;
t26667 = t27077 * t27434 + t27083 * t28657;
t27644 = (-t27077 * t27428 + t27083 * t28654) * t27389 - t27083 * t28724;
t27750 = t27369 * t28901 + t29429;
t29169 = 0.1e1 / (t26403 + ((t27158 - t27749) * t27427 + t28569) * t27433 + t28576 * t27427 + t27629 + ((pkin(3) * t27750 + t27685) * t27433 + (-t27741 + (pkin(3) * t28120 + t27427 * t27750) * t27384) * pkin(9)) * t27386) * ((pkin(3) * t27644 + t26667 * t27313) * t27433 + t27427 * (-pkin(3) * t26667 + t27313 * t27644));
t28354 = t27357 * t29169;
t28373 = t27385 * t29223;
t28374 = t27260 * t29223;
t28394 = t27259 * t29253;
t29309 = pkin(3) * t27428;
t28501 = t27256 * t29309;
t28621 = t27427 * t27433;
t28513 = 0.2e1 * t28621;
t28620 = t27427 * t27434;
t28277 = t27369 * t27218;
t29049 = (-t27218 + t28277 + t28566) * t27390;
t29073 = (-t27848 + (t27917 + t28270) * t28724) * t27381;
t28869 = t27326 * t27351;
t26604 = t27077 * t27338 + t27083 * t28869;
t26610 = t27077 * t28869 - t27083 * t27338;
t26035 = (t26604 * t28654 - t26610 * t27428) * t27389 - t26604 * t28724;
t26275 = t26604 * t28657 + t26610 * t27434;
t25756 = (pkin(3) * t26035 + t26275 * t27313) * t27433 + t27427 * (-pkin(3) * t26275 + t26035 * t27313);
t29175 = t25756 * t25869;
t28839 = t27338 * t27351;
t26594 = t27077 * t28839 + t27083 * t27326;
t26595 = -t27077 * t27326 + t27083 * t28839;
t26034 = (-t26594 * t27428 + t26595 * t28654) * t27389 - t26595 * t28724;
t26272 = t26594 * t27434 + t26595 * t28657;
t25753 = (-pkin(3) * t26034 - t26272 * t27313) * t27433 - t27427 * (-pkin(3) * t26272 + t26034 * t27313);
t29178 = t25753 * t25869;
t25369 = -((((t27259 * t27434 * t29223 + t27793 * t29309) * t27389 + t27917 * t29223 + t27434 * t28394) * t28724 - t27848 * t29223) * t27381 + (((t27434 * t28076 + ((-t28102 - t29223) * t28619 + (t28096 + t29253) * t27434 * t28057) * t27427) * t27385 - t27833 * t28507) * t27386 - (t25486 + pkin(3) * (t27427 * t27948 * t29358 + pkin(2) * t28102)) * t27390) * t27433 + ((-pkin(3) * t28725 - t27389 * t27935) * t28373 + (-t27385 * t27935 + ((pkin(2) * t28620 - pkin(3) * t28669) * t27385 - t27427 * t27833) * t27384) * t29253) * t29296 - (t27604 * t29223 + t27504) * t27390) / (t26517 + (((t27842 + t28501) * t27385 + pkin(3) * t27830) * t27386 - t29049) * t27433 + ((pkin(3) * t28132 + t27204 * t27428) * t27385 + t27830 * t28726) * t29296 + (t27028 + pkin(3) * (t27360 + t27786)) * t27390) * t29253 - ((-t27385 * t28691 + t28684) * t28374 + (t29073 + t26598 * t28513 - (t27434 * t27829 + t28058) * t28724 + t27585) * t29253) / ((t26372 - t29049) * t27433 + t28088) * t29223 + t25651 * t28354 + t25783 * t29178 + t25782 * t29175;
t29352 = pkin(2) * t25369;
t29351 = pkin(2) * t27411;
t29350 = pkin(2) * t27413;
t29349 = pkin(2) * t27415;
t29348 = pkin(2) * t27429;
t29347 = pkin(2) * t27431;
t29346 = pkin(2) * t27433;
t26048 = t26820 * t28802 + ((-t26820 * t28832 + t27180 * t27387) * t27327 - (t26820 * t28831 + t27180 * t27383) * t27315) * t27386;
t29345 = pkin(3) * t26048;
t26049 = t26821 * t28801 + ((-t26821 * t28827 + t27181 * t27387) * t27328 - (t26821 * t28826 + t27181 * t27383) * t27316) * t27386;
t29344 = pkin(3) * t26049;
t26050 = t26822 * t28800 + ((-t26822 * t28822 + t27182 * t27387) * t27329 - (t26822 * t28821 + t27182 * t27383) * t27317) * t27386;
t29343 = pkin(3) * t26050;
t26051 = t26823 * t28799 + ((-t26823 * t28817 + t27183 * t27387) * t27330 - (t26823 * t28816 + t27183 * t27383) * t27318) * t27386;
t29342 = pkin(3) * t26051;
t26052 = t26824 * t28798 + ((-t26824 * t28812 + t27184 * t27387) * t27331 - (t26824 * t28811 + t27184 * t27383) * t27319) * t27386;
t29341 = pkin(3) * t26052;
t26053 = t26825 * t28797 + ((-t26825 * t28807 + t27185 * t27387) * t27332 - (t26825 * t28806 + t27185 * t27383) * t27320) * t27386;
t29340 = pkin(3) * t26053;
t26066 = -t27180 * t28802 + ((t26820 * t27387 + t27180 * t28832) * t27327 + (-t26820 * t27383 + t27180 * t28831) * t27315) * t27386;
t29339 = pkin(3) * t26066;
t26067 = -t27181 * t28801 + ((t26821 * t27387 + t27181 * t28827) * t27328 + (-t26821 * t27383 + t27181 * t28826) * t27316) * t27386;
t29338 = pkin(3) * t26067;
t26068 = -t27182 * t28800 + ((t26822 * t27387 + t27182 * t28822) * t27329 + (-t26822 * t27383 + t27182 * t28821) * t27317) * t27386;
t29337 = pkin(3) * t26068;
t26069 = -t27183 * t28799 + ((t26823 * t27387 + t27183 * t28817) * t27330 + (-t26823 * t27383 + t27183 * t28816) * t27318) * t27386;
t29336 = pkin(3) * t26069;
t26070 = -t27184 * t28798 + ((t26824 * t27387 + t27184 * t28812) * t27331 + (-t26824 * t27383 + t27184 * t28811) * t27319) * t27386;
t29335 = pkin(3) * t26070;
t26071 = -t27185 * t28797 + ((t26825 * t27387 + t27185 * t28807) * t27332 + (-t26825 * t27383 + t27185 * t28806) * t27320) * t27386;
t29334 = pkin(3) * t26071;
t29327 = pkin(3) * t27246;
t29326 = pkin(3) * t27248;
t29325 = pkin(3) * t27250;
t29324 = pkin(3) * t27252;
t29323 = pkin(3) * t27254;
t29322 = pkin(3) * t27256;
t29319 = pkin(3) * t27386;
t29305 = pkin(8) * t27385;
t29297 = pkin(9) * t27385;
t29294 = MDP(3) * t27386;
t29293 = MDP(4) * t27386;
t27366 = t27385 ^ 2;
t29292 = MDP(5) * t27366;
t29291 = MDP(6) * t27366;
t29290 = MDP(7) * t27385;
t29289 = MDP(8) * t27385;
t29288 = t25364 * t27405 ^ 2;
t29287 = t25364 * t27389;
t29286 = t25365 * t27407 ^ 2;
t29285 = t25365 * t27389;
t29284 = t25366 * t27409 ^ 2;
t29283 = t25366 * t27389;
t29282 = t25367 * t27423 ^ 2;
t29281 = t25367 * t27389;
t29280 = t25368 * t27425 ^ 2;
t29279 = t25368 * t27389;
t29278 = t25369 * t27427 ^ 2;
t29277 = t25369 * t27389;
t28038 = t29358 * t27313;
t26698 = t27236 * t28723 - t28038 * t29321;
t27227 = t27299 * t29318;
t28119 = t27386 * t28645;
t26799 = t27259 * t28119 + t27227;
t26748 = t26799 * t28723;
t27153 = t27390 * t27213;
t28491 = pkin(3) * t28699;
t27196 = t27299 * t28491;
t26761 = (-t27153 + t27196) * t27369;
t27219 = pkin(2) * t28472;
t26829 = t27260 * t28736 + t27219;
t28080 = -t28601 / 0.2e1 + t27456 / 0.2e1 + t27458 / 0.2e1;
t27032 = t27264 + t28080;
t28081 = pkin(2) ^ 2 - t29428;
t27534 = -(t27458 + (t27367 - 0.2e1) * t27456 + t29428) * t27369 + 0.2e1 * t28601 - 0.3e1 * t27456 - t28081;
t26808 = (t27299 * t28119 - t29318) * t28471;
t27010 = t27390 * t28912 + t28491;
t27663 = t27010 * t27934 + t27309 * t27405 + t26395 + t26808;
t27676 = t27384 * (-pkin(8) * pkin(9) - t27388 * t27456);
t27226 = t27456 + t28081;
t28269 = (pkin(3) + t27299) * (-pkin(3) + t27299) * t27369;
t27748 = -t27226 + t28269;
t27780 = t29359 * pkin(3) * t28914;
t27368 = t27389 * t27369;
t28564 = t27368 - t27389;
t27915 = 0.4e1 * t28564;
t27916 = 0.2e1 * t28564;
t28101 = t27389 * t29231;
t27960 = pkin(2) * t28101;
t28000 = t29359 * (0.3e1 * t27458 + t27999);
t28001 = 0.3e1 * (t27458 / 0.3e1 + t27999) * t28833;
t28288 = t27299 * t27213;
t28565 = -0.2e1 * t27368 + t29362;
t28567 = (-0.2e1 * t29298 + t29376) * pkin(2);
t26942 = t27263 + t27196;
t28087 = t26761 - t26942;
t26198 = (t26799 * t27389 + t27386 * t28506) * t27385 + t27153 + t28087;
t26644 = -t27072 * t28665 + t27078 * t27412;
t26650 = t27072 * t28662 + t27078 * t27406;
t27262 = pkin(2) * t28470;
t27540 = -t26650 * t29321 - t27213 * t29014;
t27603 = pkin(3) * t29014 + t26650 * t28912;
t27735 = 0.2e1 * t27782;
t27657 = t27386 * t27735;
t27927 = t27412 * t28473;
t26933 = -t27386 * t27927 + t27309;
t28702 = t27386 * t27406;
t27792 = (t27010 * t28737 + t27193 * t28702) * t29297 + t26808 + t26933 * t27405 + t27261;
t27920 = 0.2e1 * t28064;
t27311 = pkin(2) * t29319;
t28074 = t27405 * t27311;
t28266 = t27386 * t28912;
t28499 = t27299 * t29319;
t28927 = t27193 * t27385;
t25592 = (((t26644 * t27259 + t26650 * t27920) * t27385 + t27072 * t27657) * t27352 - 0.2e1 * t26563 * t27346) * t27373 + ((((-t26650 * t27213 + t27072 * t28499) * t27389 + t26644 * t29327) * t27385 + t27540 * t27369 - t27072 * t27262 - t27540) * t27352 + t26198 * t27346) * t27411 + (t27072 * t28074 + (t26644 * t28927 + (-(pkin(3) * t26650 - t27072 * t28266) * t28723 - t27603 * t27369 + t27603) * t27384) * pkin(9)) * t27352 + t27346 * t27792;
t25838 = 0.1e1 / (t26198 * t27411 + t26509 + t27792);
t29210 = t25592 * t25838;
t27717 = t27099 * t27315 - t27102 * t27327;
t28168 = t27352 * t28702;
t26374 = -t27346 * t27717 - t28168;
t25958 = -(pkin(3) * t26373 + t26731 * t28912) * t28737 + t26374 * t27193;
t28039 = pkin(3) * t28459;
t29008 = t27078 * t27386;
t25967 = t26656 * t28039 + (t27259 * t28458 + t27310) * t29008;
t25988 = t27078 * t28074 - (pkin(3) * t29008 + t26656 * t28912) * t29403;
t26072 = t26373 * t27920 + t26374 * t27259;
t26075 = (t26656 * t27213 - t27078 * t28499) * t27389 + t26659 * t29327;
t26081 = (pkin(3) * t26656 - t27078 * t28266) * t28737 + t26659 * t27193;
t27669 = -(t26373 * t27213 + t26731 * t29321) * t27389 + t26374 * t29327;
t25563 = ((-t26072 * t27333 + t27321 * t29369) * t27385 + (t26731 * t27333 - t27321 * t29008) * t27735) * t27373 + ((t27321 * t26075 - t27333 * t27669) * t27385 - t29402 * t27333 + t27321 * t25967) * t27411 - (t25958 * t27333 - t26081 * t27321) * t29297 + t29391 * t27333 - t27321 * t25988;
t29221 = t25563 * t25838;
t27736 = -0.2e1 * t27782;
t25562 = ((t26072 * t27321 + t27333 * t29369) * t27385 + (t26731 * t27321 + t27333 * t29008) * t27736) * t27373 + ((t27333 * t26075 + t27321 * t27669) * t27385 + t29402 * t27321 + t25967 * t27333) * t27411 + (t25958 * t27321 + t26081 * t27333) * t29297 - t29391 * t27321 - t25988 * t27333;
t29222 = t25562 * t25838;
t25373 = t25646 * t29210 + t25772 * t29222 + t25773 * t29221 + (-((-t27916 * t29258 - t29231 * t29359) * t27411 * t28288 + ((-t27259 * t27960 + t29258 * t29363) * t27373 + (-0.2e1 * t27032 * t28101 + (t27373 * t28001 - 0.4e1 * t27264 + t27534) * t29258) * t29314) * t27385 + ((t26829 * t28101 - t28567 * t29258) * t27385 + ((t27373 * t28000 + t27748) * t27405 * t28411 + ((t27373 * t29358 - t29359) * t29231 + (t27373 * t27915 + t28565) * t29258) * t29321) * t27384) * pkin(9)) * t29258 - (t27199 * t27260 * t28390 + (-t26698 * t27373 + (t27032 * t28094 - t27299 * t28282 + t28288) * t27411 + (t26829 * t28723 - t27780) * pkin(9)) * t29258) * t29231) / ((t26748 + t26761 + t27153 - t27263) * t27411 + t27261 + (pkin(9) * t27016 + t27676 * t28645 + (t28300 - t28909) * t29314) * t27386 + t27663);
t29276 = t25373 * t25838;
t29275 = t25373 * t25856;
t28118 = t27386 * t28641;
t26800 = t27259 * t28118 + t27227;
t26749 = t26800 * t28723;
t27154 = t27390 * t27214;
t28490 = pkin(3) * t28698;
t27197 = t27299 * t28490;
t26762 = (-t27154 + t27197) * t27369;
t26830 = t27260 * t28734 + t27219;
t27033 = t27265 + t28080;
t26809 = (t27299 * t28118 - t29318) * t28471;
t27011 = t27390 * t28911 + t28490;
t27662 = t27011 * t27934 + t27309 * t27407 + t26396 + t26809;
t28100 = t27389 * t29230;
t27959 = pkin(2) * t28100;
t28287 = t27299 * t27214;
t26943 = t27263 + t27197;
t28086 = t26762 - t26943;
t26199 = (t26800 * t27389 + t27386 * t28505) * t27385 + t27154 + t28086;
t26646 = -t27073 * t28664 + t27079 * t27414;
t26652 = t27073 * t28661 + t27079 * t27408;
t27539 = -t26652 * t29321 - t27214 * t29013;
t28492 = pkin(3) * t29013;
t27602 = t26652 * t28911 + t28492;
t27926 = t27414 * t28473;
t26935 = -t27386 * t27926 + t27309;
t28701 = t27386 * t27408;
t27791 = (t27011 * t28737 + t27194 * t28701) * t29297 + t26809 + t26935 * t27407 + t27261;
t28073 = t27407 * t27311;
t28265 = t27386 * t28911;
t28926 = t27194 * t27385;
t25593 = (((t26646 * t27259 + t26652 * t27920) * t27385 + t27073 * t27657) * t27353 - 0.2e1 * t26564 * t27347) * t27374 + ((((-t26652 * t27214 + t27299 * t28492) * t27389 + t26646 * t29326) * t27385 + t27539 * t27369 - t27073 * t27262 - t27539) * t27353 + t26199 * t27347) * t27413 + (t27073 * t28073 + (t26646 * t28926 + (-(pkin(3) * t26652 - t27073 * t28265) * t28723 - t27602 * t27369 + t27602) * t27384) * pkin(9)) * t27353 + t27347 * t27791;
t25839 = 0.1e1 / (t26199 * t27413 + t26510 + t27791);
t29209 = t25593 * t25839;
t27716 = t27100 * t27316 - t27103 * t27328;
t28166 = t27353 * t28701;
t26376 = -t27347 * t27716 - t28166;
t25959 = -(pkin(3) * t26375 + t26732 * t28911) * t28737 + t26376 * t27194;
t29006 = t27079 * t27386;
t25968 = t26657 * t28039 + (t27259 * t28457 + t27310) * t29006;
t25989 = t27079 * t28073 - (pkin(3) * t29006 + t26657 * t28911) * t29403;
t26073 = t26375 * t27920 + t26376 * t27259;
t26076 = (t26657 * t27214 - t27079 * t28499) * t27389 + t26660 * t29326;
t26082 = (pkin(3) * t26657 - t27079 * t28265) * t28737 + t26660 * t27194;
t27668 = -(t26375 * t27214 + t26732 * t29321) * t27389 + t26376 * t29326;
t25565 = ((-t26073 * t27334 + t27322 * t29368) * t27385 + (t26732 * t27334 - t27322 * t29006) * t27735) * t27374 + ((t27322 * t26076 - t27334 * t27668) * t27385 - t29401 * t27334 + t27322 * t25968) * t27413 - (t25959 * t27334 - t26082 * t27322) * t29297 + t29392 * t27334 - t27322 * t25989;
t29219 = t25565 * t25839;
t25564 = ((t26073 * t27322 + t27334 * t29368) * t27385 + (t26732 * t27322 + t27334 * t29006) * t27736) * t27374 + ((t27334 * t26076 + t27322 * t27668) * t27385 + t29401 * t27322 + t25968 * t27334) * t27413 + (t25959 * t27322 + t26082 * t27334) * t29297 - t29392 * t27322 - t25989 * t27334;
t29220 = t25564 * t25839;
t25374 = t25647 * t29209 + t25774 * t29220 + t25775 * t29219 + (-((-t27916 * t29257 - t29230 * t29359) * t27413 * t28287 + ((-t27259 * t27959 + t29257 * t29363) * t27374 + (-0.2e1 * t27033 * t28100 + (t27374 * t28001 - 0.4e1 * t27265 + t27534) * t29257) * t29313) * t27385 + ((t26830 * t28100 - t28567 * t29257) * t27385 + ((t27374 * t28000 + t27748) * t27407 * t28408 + ((t27374 * t29358 - t29359) * t29230 + (t27374 * t27915 + t28565) * t29257) * t29321) * t27384) * pkin(9)) * t29257 - (t27200 * t27260 * t28386 + (-t26698 * t27374 + (t27033 * t28094 - t27299 * t28281 + t28287) * t27413 + (t26830 * t28723 - t27780) * pkin(9)) * t29257) * t29230) / ((t26749 + t26762 + t27154 - t27263) * t27413 + t27261 + (pkin(9) * t27017 + t27676 * t28641 + (t28299 - t28908) * t29313) * t27386 + t27662);
t29274 = t25374 * t25839;
t29273 = t25374 * t25858;
t28117 = t27386 * t28637;
t26801 = t27259 * t28117 + t27227;
t26750 = t26801 * t28723;
t27155 = t27390 * t27215;
t28489 = pkin(3) * t28697;
t27198 = t27299 * t28489;
t26763 = (-t27155 + t27198) * t27369;
t26831 = t27260 * t28732 + t27219;
t27034 = t27266 + t28080;
t26810 = (t27299 * t28117 - t29318) * t28471;
t27012 = t27390 * t28910 + t28489;
t27661 = t27012 * t27934 + t27309 * t27409 + t26397 + t26810;
t28099 = t27389 * t29229;
t27958 = pkin(2) * t28099;
t28286 = t27299 * t27215;
t26944 = t27263 + t27198;
t28085 = t26763 - t26944;
t26200 = (t26801 * t27389 + t27386 * t28504) * t27385 + t27155 + t28085;
t26648 = -t27074 * t28663 + t27080 * t27416;
t26654 = t27074 * t28660 + t27080 * t27410;
t27538 = -t26654 * t29321 - t27215 * t29012;
t27601 = pkin(3) * t29012 + t26654 * t28910;
t27925 = t27416 * t28473;
t26937 = -t27386 * t27925 + t27309;
t28700 = t27386 * t27410;
t27790 = (t27012 * t28737 + t27195 * t28700) * t29297 + t26810 + t26937 * t27409 + t27261;
t28072 = t27409 * t27311;
t28264 = t27386 * t28910;
t28925 = t27195 * t27385;
t25594 = (((t26648 * t27259 + t26654 * t27920) * t27385 + t27074 * t27657) * t27354 - 0.2e1 * t26565 * t27348) * t27375 + ((((-t26654 * t27215 + t27074 * t28499) * t27389 + t26648 * t29325) * t27385 + t27538 * t27369 - t27074 * t27262 - t27538) * t27354 + t26200 * t27348) * t27415 + (t27074 * t28072 + (t26648 * t28925 + (-(pkin(3) * t26654 - t27074 * t28264) * t28723 - t27601 * t27369 + t27601) * t27384) * pkin(9)) * t27354 + t27348 * t27790;
t25840 = 0.1e1 / (t26200 * t27415 + t26511 + t27790);
t29208 = t25594 * t25840;
t27715 = t27101 * t27317 - t27104 * t27329;
t28164 = t27354 * t28700;
t26378 = -t27348 * t27715 - t28164;
t25960 = -(pkin(3) * t26377 + t26733 * t28910) * t28737 + t26378 * t27195;
t29004 = t27080 * t27386;
t25969 = t26658 * t28039 + (t27259 * t28456 + t27310) * t29004;
t25990 = t27080 * t28072 - (pkin(3) * t29004 + t26658 * t28910) * t29403;
t26074 = t26377 * t27920 + t26378 * t27259;
t26077 = (t26658 * t27215 - t27080 * t28499) * t27389 + t26661 * t29325;
t26083 = (pkin(3) * t26658 - t27080 * t28264) * t28737 + t26661 * t27195;
t27667 = -(t26377 * t27215 + t26733 * t29321) * t27389 + t26378 * t29325;
t25567 = ((-t26074 * t27335 + t27323 * t29367) * t27385 + (t26733 * t27335 - t27323 * t29004) * t27735) * t27375 + ((t27323 * t26077 - t27335 * t27667) * t27385 - t29400 * t27335 + t27323 * t25969) * t27415 - (t25960 * t27335 - t26083 * t27323) * t29297 + t29393 * t27335 - t27323 * t25990;
t29217 = t25567 * t25840;
t25566 = ((t26074 * t27323 + t27335 * t29367) * t27385 + (t26733 * t27323 + t27335 * t29004) * t27736) * t27375 + ((t27335 * t26077 + t27323 * t27667) * t27385 + t29400 * t27323 + t25969 * t27335) * t27415 + (t25960 * t27323 + t26083 * t27335) * t29297 - t29393 * t27323 - t25990 * t27335;
t29218 = t25566 * t25840;
t25375 = t25648 * t29208 + t25776 * t29218 + t25777 * t29217 + (-((-t27916 * t29256 - t29229 * t29359) * t27415 * t28286 + ((-t27259 * t27958 + t29256 * t29363) * t27375 + (-0.2e1 * t27034 * t28099 + (t27375 * t28001 - 0.4e1 * t27266 + t27534) * t29256) * t29312) * t27385 + ((t26831 * t28099 - t28567 * t29256) * t27385 + ((t27375 * t28000 + t27748) * t27409 * t28405 + ((t27375 * t29358 - t29359) * t29229 + (t27375 * t27915 + t28565) * t29256) * t29321) * t27384) * pkin(9)) * t29256 - (t27201 * t27260 * t28382 + (-t26698 * t27375 + (t27034 * t28094 - t27299 * t28280 + t28286) * t27415 + (t26831 * t28723 - t27780) * pkin(9)) * t29256) * t29229) / ((t26750 + t26763 + t27155 - t27263) * t27415 + t27261 + (pkin(9) * t27018 + t27676 * t28637 + (t28298 - t28907) * t29312) * t27386 + t27661);
t29272 = t25375 * t25840;
t29271 = t25375 * t25860;
t28113 = t27386 * t28630;
t26802 = t27259 * t28113 + t27227;
t26751 = t26802 * t28723;
t27159 = t27390 * t27216;
t28488 = pkin(3) * t28693;
t27205 = t27299 * t28488;
t26764 = (-t27159 + t27205) * t27369;
t26832 = t27260 * t28730 + t27219;
t27035 = t27267 + t28080;
t26826 = (t27299 * t28113 - t29318) * t28471;
t27013 = t27390 * t28906 + t28488;
t27660 = t27013 * t27934 + t27309 * t27423 + t26401 + t26826;
t27957 = pkin(2) * t28098;
t28285 = t27299 * t27216;
t26954 = t27263 + t27205;
t28084 = t26764 - t26954;
t26219 = (t26802 * t27389 + t27386 * t28503) * t27385 + t27159 + t28084;
t26662 = -t27075 * t28659 + t27081 * t27430;
t26668 = t27075 * t28656 + t27081 * t27424;
t27537 = -t26668 * t29321 - t27216 * t29011;
t27597 = pkin(3) * t29011 + t26668 * t28906;
t27924 = t27430 * t28473;
t26945 = -t27386 * t27924 + t27309;
t28696 = t27386 * t27424;
t27789 = (t27013 * t28737 + t27202 * t28696) * t29297 + t26826 + t26945 * t27423 + t27261;
t28071 = t27423 * t27311;
t28263 = t27386 * t28906;
t28924 = t27202 * t27385;
t25595 = (((t26662 * t27259 + t26668 * t27920) * t27385 + t27075 * t27657) * t27355 - 0.2e1 * t26596 * t27349) * t27379 + ((((-t26668 * t27216 + t27075 * t28499) * t27389 + t26662 * t29324) * t27385 + t27537 * t27369 - t27075 * t27262 - t27537) * t27355 + t26219 * t27349) * t27429 + (t27075 * t28071 + (t26662 * t28924 + (-(pkin(3) * t26668 - t27075 * t28263) * t28723 - t27597 * t27369 + t27597) * t27384) * pkin(9)) * t27355 + t27349 * t27789;
t25841 = 0.1e1 / (t26219 * t27429 + t26515 + t27789);
t29207 = t25595 * t25841;
t27711 = t27115 * t27318 - t27118 * t27330;
t28162 = t27355 * t28696;
t26380 = -t27349 * t27711 - t28162;
t25976 = -(pkin(3) * t26379 + t26734 * t28906) * t28737 + t26380 * t27202;
t29002 = t27081 * t27386;
t25985 = t26680 * t28039 + (t27259 * t28455 + t27310) * t29002;
t25991 = t27081 * t28071 - (pkin(3) * t29002 + t26680 * t28906) * t29403;
t26078 = t26379 * t27920 + t26380 * t27259;
t26084 = (t26680 * t27216 - t27081 * t28499) * t27389 + t26683 * t29324;
t26087 = (pkin(3) * t26680 - t27081 * t28263) * t28737 + t26683 * t27202;
t27666 = -(t26379 * t27216 + t26734 * t29321) * t27389 + t26380 * t29324;
t25569 = ((-t26078 * t27336 + t27324 * t29366) * t27385 + (t26734 * t27336 - t27324 * t29002) * t27735) * t27379 + ((t27324 * t26084 - t27336 * t27666) * t27385 - t29399 * t27336 + t27324 * t25985) * t27429 - (t25976 * t27336 - t26087 * t27324) * t29297 + t29394 * t27336 - t27324 * t25991;
t29215 = t25569 * t25841;
t25568 = ((t26078 * t27324 + t27336 * t29366) * t27385 + (t26734 * t27324 + t27336 * t29002) * t27736) * t27379 + ((t27336 * t26084 + t27324 * t27666) * t27385 + t29399 * t27324 + t25985 * t27336) * t27429 + (t25976 * t27324 + t26087 * t27336) * t29297 - t29394 * t27324 - t25991 * t27336;
t29216 = t25568 * t25841;
t25379 = t25649 * t29207 + t25778 * t29216 + t25779 * t29215 + (-((-t27916 * t29255 - t29225 * t29359) * t27429 * t28285 + ((-t27259 * t27957 + t29255 * t29363) * t27379 + (-0.2e1 * t27035 * t28098 + (t27379 * t28001 - 0.4e1 * t27267 + t27534) * t29255) * t29308) * t27385 + ((t26832 * t28098 - t28567 * t29255) * t27385 + ((t27379 * t28000 + t27748) * t27423 * t28399 + ((t27379 * t29358 - t29359) * t29225 + (t27379 * t27915 + t28565) * t29255) * t29321) * t27384) * pkin(9)) * t29255 - (t27208 * t27260 * t28379 + (-t26698 * t27379 + (t27035 * t28094 - t27299 * t28279 + t28285) * t27429 + (t26832 * t28723 - t27780) * pkin(9)) * t29255) * t29225) / ((t26751 + t26764 + t27159 - t27263) * t27429 + t27261 + (pkin(9) * t27020 + t27676 * t28630 + (t28297 - t28903) * t29308) * t27386 + t27660);
t29270 = t25379 * t25841;
t29269 = t25379 * t25865;
t28112 = t27386 * t28625;
t26803 = t27259 * t28112 + t27227;
t26752 = t26803 * t28723;
t27160 = t27390 * t27217;
t28487 = pkin(3) * t28692;
t27206 = t27299 * t28487;
t26765 = (-t27160 + t27206) * t27369;
t26833 = t27260 * t28728 + t27219;
t27036 = t27268 + t28080;
t26827 = (t27299 * t28112 - t29318) * t28471;
t27014 = t27390 * t28905 + t28487;
t27659 = t27014 * t27934 + t27309 * t27425 + t26402 + t26827;
t27956 = pkin(2) * t28097;
t28284 = t27299 * t27217;
t26955 = t27263 + t27206;
t28083 = t26765 - t26955;
t26220 = (t26803 * t27389 + t27386 * t28502) * t27385 + t27160 + t28083;
t26664 = -t27076 * t28658 + t27082 * t27432;
t26670 = t27076 * t28655 + t27082 * t27426;
t27536 = -t26670 * t29321 - t27217 * t29010;
t27596 = pkin(3) * t29010 + t26670 * t28905;
t27923 = t27432 * t28473;
t26947 = -t27386 * t27923 + t27309;
t28695 = t27386 * t27426;
t27788 = (t27014 * t28737 + t27203 * t28695) * t29297 + t26827 + t26947 * t27425 + t27261;
t28070 = t27425 * t27311;
t28262 = t27386 * t28905;
t28923 = t27203 * t27385;
t25596 = (((t26664 * t27259 + t26670 * t27920) * t27385 + t27076 * t27657) * t27356 - 0.2e1 * t26597 * t27350) * t27380 + ((((-t26670 * t27217 + t27076 * t28499) * t27389 + t26664 * t29323) * t27385 + t27536 * t27369 - t27076 * t27262 - t27536) * t27356 + t26220 * t27350) * t27431 + (t27076 * t28070 + (t26664 * t28923 + (-(pkin(3) * t26670 - t27076 * t28262) * t28723 - t27596 * t27369 + t27596) * t27384) * pkin(9)) * t27356 + t27350 * t27788;
t25842 = 0.1e1 / (t26220 * t27431 + t26516 + t27788);
t29206 = t25596 * t25842;
t27710 = t27116 * t27319 - t27119 * t27331;
t28160 = t27356 * t28695;
t26382 = -t27350 * t27710 - t28160;
t25977 = -(pkin(3) * t26381 + t26735 * t28905) * t28737 + t26382 * t27203;
t29000 = t27082 * t27386;
t25986 = t26681 * t28039 + (t27259 * t28454 + t27310) * t29000;
t25992 = t27082 * t28070 - (pkin(3) * t29000 + t26681 * t28905) * t29403;
t26079 = t26381 * t27920 + t26382 * t27259;
t26085 = (t26681 * t27217 - t27082 * t28499) * t27389 + t26684 * t29323;
t26088 = (pkin(3) * t26681 - t27082 * t28262) * t28737 + t26684 * t27203;
t27665 = -(t26381 * t27217 + t26735 * t29321) * t27389 + t26382 * t29323;
t25571 = ((-t26079 * t27337 + t27325 * t29365) * t27385 + (t26735 * t27337 - t27325 * t29000) * t27735) * t27380 + ((t27325 * t26085 - t27337 * t27665) * t27385 - t29398 * t27337 + t27325 * t25986) * t27431 - (t25977 * t27337 - t26088 * t27325) * t29297 + t29395 * t27337 - t27325 * t25992;
t29213 = t25571 * t25842;
t25570 = ((t26079 * t27325 + t27337 * t29365) * t27385 + (t26735 * t27325 + t27337 * t29000) * t27736) * t27380 + ((t27337 * t26085 + t27325 * t27665) * t27385 + t29398 * t27325 + t25986 * t27337) * t27431 + (t25977 * t27325 + t26088 * t27337) * t29297 - t29395 * t27325 - t25992 * t27337;
t29214 = t25570 * t25842;
t25380 = t25650 * t29206 + t25780 * t29214 + t25781 * t29213 + (-((-t27916 * t29254 - t29224 * t29359) * t27431 * t28284 + ((-t27259 * t27956 + t29254 * t29363) * t27380 + (-0.2e1 * t27036 * t28097 + (t27380 * t28001 - 0.4e1 * t27268 + t27534) * t29254) * t29307) * t27385 + ((t26833 * t28097 - t28567 * t29254) * t27385 + ((t27380 * t28000 + t27748) * t27425 * t28396 + ((t27380 * t29358 - t29359) * t29224 + (t27380 * t27915 + t28565) * t29254) * t29321) * t27384) * pkin(9)) * t29254 - (t27209 * t27260 * t28376 + (-t26698 * t27380 + (t27036 * t28094 - t27299 * t28278 + t28284) * t27431 + (t26833 * t28723 - t27780) * pkin(9)) * t29254) * t29224) / ((t26752 + t26765 + t27160 - t27263) * t27431 + t27261 + (pkin(9) * t27021 + t27676 * t28625 + (t28296 - t28902) * t29307) * t27386 + t27659);
t29268 = t25380 * t25842;
t29267 = t25380 * t25867;
t28111 = t27386 * t28620;
t26804 = t27259 * t28111 + t27227;
t26753 = t26804 * t28723;
t27161 = t27390 * t27218;
t28486 = pkin(3) * t28691;
t27207 = t27299 * t28486;
t26766 = (-t27161 + t27207) * t27369;
t26834 = t27260 * t28726 + t27219;
t27037 = t27269 + t28080;
t26828 = (t27299 * t28111 - t29318) * t28471;
t27015 = t27390 * t28904 + t28486;
t27658 = t27015 * t27934 + t27309 * t27427 + t26403 + t26828;
t27955 = pkin(2) * t28096;
t28283 = t27299 * t27218;
t26956 = t27263 + t27207;
t28082 = t26766 - t26956;
t26221 = (t26804 * t27389 + t27386 * t28501) * t27385 + t27161 + t28082;
t26666 = -t27077 * t28657 + t27083 * t27434;
t26672 = t27077 * t28654 + t27083 * t27428;
t27535 = -t26672 * t29321 - t27218 * t29009;
t27595 = pkin(3) * t29009 + t26672 * t28904;
t27922 = t27434 * t28473;
t26949 = -t27386 * t27922 + t27309;
t28694 = t27386 * t27428;
t27787 = (t27015 * t28737 + t27204 * t28694) * t29297 + t26828 + t26949 * t27427 + t27261;
t28069 = t27427 * t27311;
t28261 = t27386 * t28904;
t28922 = t27204 * t27385;
t25597 = (((t26666 * t27259 + t26672 * t27920) * t27385 + t27077 * t27657) * t27357 - 0.2e1 * t26598 * t27351) * t27381 + ((((-t26672 * t27218 + t27077 * t28499) * t27389 + t26666 * t29322) * t27385 + t27535 * t27369 - t27077 * t27262 - t27535) * t27357 + t26221 * t27351) * t27433 + (t27077 * t28069 + (t26666 * t28922 + (-(pkin(3) * t26672 - t27077 * t28261) * t28723 - t27595 * t27369 + t27595) * t27384) * pkin(9)) * t27357 + t27351 * t27787;
t25843 = 0.1e1 / (t26221 * t27433 + t26517 + t27787);
t29205 = t25597 * t25843;
t27709 = t27117 * t27320 - t27120 * t27332;
t28158 = t27357 * t28694;
t26384 = -t27351 * t27709 - t28158;
t25978 = -(pkin(3) * t26383 + t26736 * t28904) * t28737 + t26384 * t27204;
t28998 = t27083 * t27386;
t25987 = t26682 * t28039 + (t27259 * t28453 + t27310) * t28998;
t25993 = t27083 * t28069 - (pkin(3) * t28998 + t26682 * t28904) * t29403;
t26080 = t26383 * t27920 + t26384 * t27259;
t26086 = (t26682 * t27218 - t27083 * t28499) * t27389 + t26685 * t29322;
t26089 = (pkin(3) * t26682 - t27083 * t28261) * t28737 + t26685 * t27204;
t27664 = -(t26383 * t27218 + t26736 * t29321) * t27389 + t26384 * t29322;
t25573 = ((-t26080 * t27338 + t27326 * t29364) * t27385 + (t26736 * t27338 - t27326 * t28998) * t27735) * t27381 + ((t27326 * t26086 - t27338 * t27664) * t27385 - t29397 * t27338 + t27326 * t25987) * t27433 - (t25978 * t27338 - t26089 * t27326) * t29297 + t29396 * t27338 - t27326 * t25993;
t29211 = t25573 * t25843;
t25572 = ((t26080 * t27326 + t27338 * t29364) * t27385 + (t26736 * t27326 + t27338 * t28998) * t27736) * t27381 + ((t27338 * t26086 + t27326 * t27664) * t27385 + t29397 * t27326 + t25987 * t27338) * t27433 + (t25978 * t27326 + t26089 * t27338) * t29297 - t29396 * t27326 - t25993 * t27338;
t29212 = t25572 * t25843;
t25381 = t25651 * t29205 + t25782 * t29212 + t25783 * t29211 + (-((-t27916 * t29253 - t29223 * t29359) * t27433 * t28283 + ((-t27259 * t27955 + t29253 * t29363) * t27381 + (-0.2e1 * t27037 * t28096 + (t27381 * t28001 - 0.4e1 * t27269 + t27534) * t29253) * t29306) * t27385 + ((t26834 * t28096 - t28567 * t29253) * t27385 + ((t27381 * t28000 + t27748) * t27427 * t28393 + ((t27381 * t29358 - t29359) * t29223 + (t27381 * t27915 + t28565) * t29253) * t29321) * t27384) * pkin(9)) * t29253 - (t27210 * t27260 * t28373 + (-t26698 * t27381 + (t27037 * t28094 - t27299 * t28277 + t28283) * t27433 + (t26834 * t28723 - t27780) * pkin(9)) * t29253) * t29223) / ((t26753 + t26766 + t27161 - t27263) * t27433 + t27261 + (pkin(9) * t27022 + t27676 * t28620 + (t28295 - t28901) * t29306) * t27386 + t27658);
t29266 = t25381 * t25843;
t29265 = t25381 * t25869;
t27863 = t27299 * t28390;
t25514 = t27863 * t27313;
t26551 = t26618 * t27390;
t27684 = 0.2e1 * t27740;
t27781 = t28459 * t27313;
t28075 = t27385 * t27311;
t28095 = -0.2e1 * t28471;
t29007 = t27078 * t27390;
t29168 = 0.1e1 / ((t26551 + t27386 * (pkin(3) * t28300 + t26740 * t27412)) * t27411 + t28093) * (((pkin(3) * t27412 + t27389 * t28468) * t29007 + t27072 * (t27933 - t29317)) * t27411 + (-t27044 * t27406 + t27247 * t27412) * t29007 - t27072 * (t27044 * t27412 + t27247 * t27406));
t28353 = t27352 * t29168;
t28751 = t27369 * t27458;
t25955 = t26557 * t26605 - t26599 * t29072;
t29161 = t25904 * t25955;
t25952 = -t26557 * t26584 + t26585 * t29072;
t29162 = t25904 * t25952;
t25382 = -(-t28210 * t28412 + (t25478 * t29362 + t25514 + (t27960 + (-t27405 * t28038 + t29378) * t29258) * pkin(3)) * t27411 - t28269 * t29258 + ((pkin(2) * t27953 + t27883 * t29377) * t27405 - t28391) * t27389 + (pkin(2) * t27798 - pkin(3) * t27863) * t27405 + t27226 * t29258) / ((t26748 + (t27150 + t27212) * t27405 + t27406 * t28075 + t28087) * t27411 + (t27271 + (t28736 * t29434 - t27746) * t27386) * pkin(9) + t27663) * t27390 * t29258 - ((((t25514 + t28068) * t27389 + t25478) * t27411 + t27509) * t27390 + (t29078 + ((t27412 * t27781 + t27683 * t28720) * t27386 + ((t27405 * t28095 + t27246) * t27390 + t27684 * t28645) * pkin(3)) * t27411 + (-t27192 * t27405 + t28751 + t29304) * t27390 - (t27238 * t28720 + t27521) * t29319) * t29231) / ((t26551 + t26367) * t27411 + t28093) * t29231 - t25646 * t28353 + t25773 * t29162 + t25772 * t29161;
t29264 = t25382 * t27389;
t27862 = t27299 * t28386;
t25515 = t27862 * t27313;
t26552 = t26620 * t27390;
t29005 = t27079 * t27390;
t29167 = 0.1e1 / ((t26552 + t27386 * (pkin(3) * t28299 + t26741 * t27414)) * t27413 + t28092) * (((pkin(3) * t27414 + t27389 * t28467) * t29005 + t27073 * (t27932 - t29316)) * t27413 + (-t27045 * t27408 + t27249 * t27414) * t29005 - t27073 * (t27045 * t27414 + t27249 * t27408));
t28350 = t27353 * t29167;
t25956 = t26558 * t26606 - t26600 * t29071;
t29157 = t25906 * t25956;
t25953 = -t26558 * t26586 + t26587 * t29071;
t29158 = t25906 * t25953;
t25383 = -(-t28209 * t28409 + (t25479 * t29362 + t25515 + (t27959 + (-t27407 * t28038 + t29378) * t29257) * pkin(3)) * t27413 - t28269 * t29257 + ((pkin(2) * t27952 + t27881 * t29377) * t27407 - t28387) * t27389 + (pkin(2) * t27797 - pkin(3) * t27862) * t27407 + t27226 * t29257) / ((t26749 + (t27151 + t27212) * t27407 + t27408 * t28075 + t28086) * t27413 + (t27271 + (t28734 * t29433 - t27745) * t27386) * pkin(9) + t27662) * t27390 * t29257 - ((((t25515 + t28067) * t27389 + t25479) * t27413 + t27508) * t27390 + (t29077 + ((t27414 * t27781 + t27682 * t28718) * t27386 + ((t27407 * t28095 + t27248) * t27390 + t27684 * t28641) * pkin(3)) * t27413 + (-t27192 * t27407 + t28751 + t29303) * t27390 - (t27239 * t28718 + t27520) * t29319) * t29230) / ((t26552 + t26368) * t27413 + t28092) * t29230 - t25647 * t28350 + t25775 * t29158 + t25774 * t29157;
t29263 = t25383 * t27389;
t27861 = t27299 * t28382;
t25516 = t27861 * t27313;
t26553 = t26622 * t27390;
t29003 = t27080 * t27390;
t29166 = 0.1e1 / ((t26553 + t27386 * (pkin(3) * t28298 + t26742 * t27416)) * t27415 + t28091) * (((pkin(3) * t27416 + t27389 * t28466) * t29003 + t27074 * (t27931 - t29315)) * t27415 + (-t27046 * t27410 + t27251 * t27416) * t29003 - t27074 * (t27046 * t27416 + t27251 * t27410));
t28347 = t27354 * t29166;
t25957 = t26559 * t26607 - t26601 * t29070;
t29153 = t25908 * t25957;
t25954 = -t26559 * t26588 + t26589 * t29070;
t29154 = t25908 * t25954;
t25384 = -(-t28208 * t28406 + (t25480 * t29362 + t25516 + (t27958 + (-t27409 * t28038 + t29378) * t29256) * pkin(3)) * t27415 - t28269 * t29256 + ((pkin(2) * t27951 + t27879 * t29377) * t27409 - t28383) * t27389 + (pkin(2) * t27796 - pkin(3) * t27861) * t27409 + t27226 * t29256) / ((t26750 + (t27152 + t27212) * t27409 + t27410 * t28075 + t28085) * t27415 + (t27271 + (t28732 * t29432 - t27744) * t27386) * pkin(9) + t27661) * t27390 * t29256 - ((((t25516 + t28066) * t27389 + t25480) * t27415 + t27507) * t27390 + (t29076 + ((t27416 * t27781 + t27681 * t28716) * t27386 + ((t27409 * t28095 + t27250) * t27390 + t27684 * t28637) * pkin(3)) * t27415 + (-t27192 * t27409 + t28751 + t29302) * t27390 - (t27240 * t28716 + t27519) * t29319) * t29229) / ((t26553 + t26369) * t27415 + t28091) * t29229 - t25648 * t28347 + t25777 * t29154 + t25776 * t29153;
t29262 = t25384 * t27389;
t27857 = t27299 * t28379;
t25523 = t27857 * t27313;
t26554 = t26624 * t27390;
t29001 = t27081 * t27390;
t29165 = 0.1e1 / ((t26554 + t27386 * (pkin(3) * t28297 + t26743 * t27430)) * t27429 + t28090) * (((pkin(3) * t27430 + t27389 * t28465) * t29001 + t27075 * (t27930 - t29311)) * t27429 + (-t27051 * t27424 + t27253 * t27430) * t29001 - t27075 * (t27051 * t27430 + t27253 * t27424));
t28344 = t27355 * t29165;
t25964 = -t26602 * t29057 + t26608 * t26611;
t29149 = t25916 * t25964;
t25961 = -t26590 * t26611 + t26591 * t29057;
t29150 = t25916 * t25961;
t25385 = -(-t28207 * t28400 + (t25484 * t29362 + t25523 + (t27957 + (-t27423 * t28038 + t29378) * t29255) * pkin(3)) * t27429 - t28269 * t29255 + ((pkin(2) * t27950 + t27871 * t29377) * t27423 - t28380) * t27389 + (pkin(2) * t27795 - pkin(3) * t27857) * t27423 + t27226 * t29255) / ((t26751 + (t27156 + t27212) * t27423 + t27424 * t28075 + t28084) * t27429 + (t27271 + (t28730 * t29431 - t27743) * t27386) * pkin(9) + t27660) * t27390 * t29255 - ((((t25523 + t28078) * t27389 + t25484) * t27429 + t27506) * t27390 + (t29075 + ((t27430 * t27781 + t27680 * t28711) * t27386 + ((t27423 * t28095 + t27252) * t27390 + t27684 * t28630) * pkin(3)) * t27429 + (-t27192 * t27423 + t28751 + t29301) * t27390 - (t27241 * t28711 + t27518) * t29319) * t29225) / ((t26554 + t26370) * t27429 + t28090) * t29225 - t25649 * t28344 + t25779 * t29150 + t25778 * t29149;
t29261 = t25385 * t27389;
t27856 = t27299 * t28376;
t25524 = t27856 * t27313;
t26555 = t26626 * t27390;
t28999 = t27082 * t27390;
t29164 = 0.1e1 / ((t26555 + t27386 * (pkin(3) * t28296 + t26744 * t27432)) * t27431 + t28089) * (((pkin(3) * t27432 + t27389 * t28464) * t28999 + t27076 * (t27929 - t29310)) * t27431 + (-t27052 * t27426 + t27255 * t27432) * t28999 - t27076 * (t27052 * t27432 + t27255 * t27426));
t28341 = t27356 * t29164;
t25965 = -t26603 * t29056 + t26609 * t26612;
t29145 = t25918 * t25965;
t25962 = -t26592 * t26612 + t26593 * t29056;
t29146 = t25918 * t25962;
t25386 = -(-t28206 * t28397 + (t25485 * t29362 + t25524 + (t27956 + (-t27425 * t28038 + t29378) * t29254) * pkin(3)) * t27431 - t28269 * t29254 + ((pkin(2) * t27949 + t27869 * t29377) * t27425 - t28377) * t27389 + (pkin(2) * t27794 - pkin(3) * t27856) * t27425 + t27226 * t29254) / ((t26752 + (t27157 + t27212) * t27425 + t27426 * t28075 + t28083) * t27431 + (t27271 + (t28728 * t29430 - t27742) * t27386) * pkin(9) + t27659) * t27390 * t29254 - ((((t25524 + t28077) * t27389 + t25485) * t27431 + t27505) * t27390 + (t29074 + ((t27432 * t27781 + t27679 * t28709) * t27386 + ((t27425 * t28095 + t27254) * t27390 + t27684 * t28625) * pkin(3)) * t27431 + (-t27192 * t27425 + t28751 + t29300) * t27390 - (t27242 * t28709 + t27517) * t29319) * t29224) / ((t26555 + t26371) * t27431 + t28089) * t29224 - t25650 * t28341 + t25781 * t29146 + t25780 * t29145;
t29260 = t25386 * t27389;
t27855 = t27299 * t28373;
t25525 = t27855 * t27313;
t26556 = t26628 * t27390;
t28997 = t27083 * t27390;
t29163 = 0.1e1 / ((t26556 + t27386 * (pkin(3) * t28295 + t26745 * t27434)) * t27433 + t28088) * (((pkin(3) * t27434 + t27389 * t28463) * t28997 + t27077 * (t27928 - t29309)) * t27433 + (-t27053 * t27428 + t27257 * t27434) * t28997 - t27077 * (t27053 * t27434 + t27257 * t27428));
t28338 = t27357 * t29163;
t25966 = -t26604 * t29055 + t26610 * t26613;
t29141 = t25920 * t25966;
t25963 = -t26594 * t26613 + t26595 * t29055;
t29142 = t25920 * t25963;
t25387 = -(-t28205 * t28394 + (t25486 * t29362 + t25525 + (t27955 + (-t27427 * t28038 + t29378) * t29253) * pkin(3)) * t27433 - t28269 * t29253 + ((pkin(2) * t27948 + t27867 * t29377) * t27427 - t28374) * t27389 + (pkin(2) * t27793 - pkin(3) * t27855) * t27427 + t27226 * t29253) / ((t26753 + (t27158 + t27212) * t27427 + t27428 * t28075 + t28082) * t27433 + (t27271 + (t28726 * t29429 - t27741) * t27386) * pkin(9) + t27658) * t27390 * t29253 - ((((t25525 + t28076) * t27389 + t25486) * t27433 + t27504) * t27390 + (t29073 + ((t27434 * t27781 + t27678 * t28707) * t27386 + ((t27427 * t28095 + t27256) * t27390 + t27684 * t28620) * pkin(3)) * t27433 + (-t27192 * t27427 + t28751 + t29299) * t27390 - (t27243 * t28707 + t27516) * t29319) * t29223) / ((t26556 + t26372) * t27433 + t28088) * t29223 - t25651 * t28338 + t25783 * t29142 + t25782 * t29141;
t29259 = t25387 * t27389;
t25857 = 0.1e1 / t25862 ^ 2;
t25481 = t25493 ^ 2 * t25857;
t25859 = 0.1e1 / t25863 ^ 2;
t25482 = t25494 ^ 2 * t25859;
t25861 = 0.1e1 / t25864 ^ 2;
t25483 = t25495 ^ 2 * t25861;
t25866 = 0.1e1 / t25871 ^ 2;
t25487 = t25499 ^ 2 * t25866;
t25868 = 0.1e1 / t25872 ^ 2;
t25488 = t25500 ^ 2 * t25868;
t25870 = 0.1e1 / t25873 ^ 2;
t25489 = t25501 ^ 2 * t25870;
t26298 = (-t27363 * t28770 + t26636) * t27354 + t26843 * t28887;
t25930 = (t26298 * t28660 + t26843 * t28851) * t27389 - t26298 * t28724;
t28320 = t26843 * t28724;
t26017 = (t26298 * t27410 - t26843 * t28218) * t27389 + t27335 * t28320;
t25630 = (t25930 * t27387 - t26017 * t27383) * t27329 - t27317 * (t25930 * t27383 + t26017 * t27387);
t28219 = t27335 * t28663;
t26095 = t26298 * t27416 + t26843 * t28219;
t28850 = t27335 * t27416;
t26100 = t26298 * t28663 - t26843 * t28850;
t25764 = (t26095 * t27383 + t26100 * t27387) * t27329 + t27317 * (t26095 * t27387 - t26100 * t27383);
t25517 = (-pkin(3) * t25630 - t25764 * t27313) * t27415 + t27409 * (pkin(3) * t25764 - t25630 * t27313);
t29252 = t25517 * t25860;
t26294 = (-t27363 * t28772 + t26632) * t27352 + t26841 * t28899;
t25928 = (t26294 * t28662 + t26841 * t28861) * t27389 - t26294 * t28724;
t28322 = t26841 * t28724;
t26012 = (t26294 * t27406 - t26841 * t28222) * t27389 + t27333 * t28322;
t25628 = (t25928 * t27387 - t26012 * t27383) * t27327 - (t25928 * t27383 + t26012 * t27387) * t27315;
t28223 = t27333 * t28665;
t26091 = t26294 * t27412 + t26841 * t28223;
t28860 = t27333 * t27412;
t26096 = t26294 * t28665 - t26841 * t28860;
t25760 = (t26091 * t27383 + t26096 * t27387) * t27327 + (t26091 * t27387 - t26096 * t27383) * t27315;
t25518 = (-pkin(3) * t25628 - t25760 * t27313) * t27411 + t27405 * (pkin(3) * t25760 - t25628 * t27313);
t29251 = t25518 * t25856;
t26295 = (-t27365 * t28772 + t26633) * t27352 + t26841 * t28864;
t25931 = (t26295 * t28662 - t26841 * t28896) * t27389 - t26295 * t28724;
t26013 = (-t26295 * t27406 - t26841 * t28246) * t27389 + t27321 * t28322;
t25631 = (t25931 * t27387 + t26013 * t27383) * t27327 + (-t25931 * t27383 + t26013 * t27387) * t27315;
t28247 = t27321 * t28665;
t26090 = t26295 * t27412 - t26841 * t28247;
t28895 = t27321 * t27412;
t26097 = t26295 * t28665 + t26841 * t28895;
t25761 = (t26090 * t27383 + t26097 * t27387) * t27327 + (t26090 * t27387 - t26097 * t27383) * t27315;
t25519 = (-pkin(3) * t25631 - t25761 * t27313) * t27411 + (pkin(3) * t25761 - t25631 * t27313) * t27405;
t29250 = t25519 * t25856;
t26296 = (-t27363 * t28771 + t26634) * t27353 + t26842 * t28893;
t25932 = (t26296 * t28661 + t26842 * t28856) * t27389 - t26296 * t28724;
t28321 = t26842 * t28724;
t26014 = (t26296 * t27408 - t26842 * t28220) * t27389 + t27334 * t28321;
t25632 = (t25932 * t27387 - t26014 * t27383) * t27328 - t27316 * (t25932 * t27383 + t26014 * t27387);
t28221 = t27334 * t28664;
t26093 = t26296 * t27414 + t26842 * t28221;
t28855 = t27334 * t27414;
t26098 = t26296 * t28664 - t26842 * t28855;
t25762 = (t26093 * t27383 + t26098 * t27387) * t27328 + t27316 * (t26093 * t27387 - t26098 * t27383);
t25520 = (-pkin(3) * t25632 - t25762 * t27313) * t27413 + (pkin(3) * t25762 - t25632 * t27313) * t27407;
t29249 = t25520 * t25858;
t26297 = (-t27365 * t28771 + t26635) * t27353 + t26842 * t28859;
t25929 = (t26297 * t28661 - t26842 * t28890) * t27389 - t26297 * t28724;
t26015 = (-t26297 * t27408 - t26842 * t28244) * t27389 + t27322 * t28321;
t25629 = (t25929 * t27387 + t26015 * t27383) * t27328 + t27316 * (-t25929 * t27383 + t26015 * t27387);
t28245 = t27322 * t28664;
t26092 = t26297 * t27414 - t26842 * t28245;
t28889 = t27322 * t27414;
t26099 = t26297 * t28664 + t26842 * t28889;
t25763 = (t26092 * t27383 + t26099 * t27387) * t27328 + t27316 * (t26092 * t27387 - t26099 * t27383);
t25521 = (-pkin(3) * t25629 - t25763 * t27313) * t27413 + (pkin(3) * t25763 - t25629 * t27313) * t27407;
t29248 = t25521 * t25858;
t26299 = (-t27365 * t28770 + t26637) * t27354 + t26843 * t28854;
t25933 = (t26299 * t28660 - t26843 * t28884) * t27389 - t26299 * t28724;
t26016 = (-t26299 * t27410 - t26843 * t28242) * t27389 + t27323 * t28320;
t25633 = (t25933 * t27387 + t26016 * t27383) * t27329 + (-t25933 * t27383 + t26016 * t27387) * t27317;
t28243 = t27323 * t28663;
t26094 = t26299 * t27416 - t26843 * t28243;
t28883 = t27323 * t27416;
t26101 = t26299 * t28663 + t26843 * t28883;
t25765 = (t26094 * t27383 + t26101 * t27387) * t27329 + t27317 * (t26094 * t27387 - t26101 * t27383);
t25522 = (-pkin(3) * t25633 - t25765 * t27313) * t27415 + t27409 * (pkin(3) * t25765 - t25633 * t27313);
t29247 = t25522 * t25860;
t26300 = (-t27363 * t28769 + t26638) * t27355 + t26844 * t28881;
t25936 = (t26300 * t28656 + t26844 * t28846) * t27389 - t26300 * t28724;
t28319 = t26844 * t28724;
t26021 = (t26300 * t27424 - t26844 * t28216) * t27389 + t27336 * t28319;
t25636 = (t25936 * t27387 - t26021 * t27383) * t27330 - (t25936 * t27383 + t26021 * t27387) * t27318;
t28217 = t27336 * t28659;
t26105 = t26300 * t27430 + t26844 * t28217;
t28845 = t27336 * t27430;
t26108 = t26300 * t28659 - t26844 * t28845;
t25766 = (t26105 * t27383 + t26108 * t27387) * t27330 + (t26105 * t27387 - t26108 * t27383) * t27318;
t25526 = (-pkin(3) * t25636 - t25766 * t27313) * t27429 + t27423 * (pkin(3) * t25766 - t25636 * t27313);
t29246 = t25526 * t25865;
t26301 = (-t27365 * t28769 + t26639) * t27355 + t26844 * t28849;
t25934 = (t26301 * t28656 - t26844 * t28878) * t27389 - t26301 * t28724;
t26018 = (-t26301 * t27424 - t26844 * t28240) * t27389 + t27324 * t28319;
t25634 = (t25934 * t27387 + t26018 * t27383) * t27330 + (-t25934 * t27383 + t26018 * t27387) * t27318;
t28241 = t27324 * t28659;
t26102 = t26301 * t27430 - t26844 * t28241;
t28877 = t27324 * t27430;
t26109 = t26301 * t28659 + t26844 * t28877;
t25767 = (t26102 * t27383 + t26109 * t27387) * t27330 + t27318 * (t26102 * t27387 - t26109 * t27383);
t25527 = (-pkin(3) * t25634 - t25767 * t27313) * t27429 + t27423 * (pkin(3) * t25767 - t25634 * t27313);
t29245 = t25527 * t25865;
t26302 = (-t27363 * t28768 + t26640) * t27356 + t26845 * t28875;
t25937 = (t26302 * t28655 + t26845 * t28841) * t27389 - t26302 * t28724;
t28318 = t26845 * t28724;
t26022 = (t26302 * t27426 - t26845 * t28214) * t27389 + t27337 * t28318;
t25637 = (t25937 * t27387 - t26022 * t27383) * t27331 - t27319 * (t25937 * t27383 + t26022 * t27387);
t28215 = t27337 * t28658;
t26106 = t26302 * t27432 + t26845 * t28215;
t28840 = t27337 * t27432;
t26110 = t26302 * t28658 - t26845 * t28840;
t25768 = (t26106 * t27383 + t26110 * t27387) * t27331 + t27319 * (t26106 * t27387 - t26110 * t27383);
t25528 = (-pkin(3) * t25637 - t25768 * t27313) * t27431 + t27425 * (pkin(3) * t25768 - t25637 * t27313);
t29244 = t25528 * t25867;
t26303 = (-t27365 * t28768 + t26641) * t27356 + t26845 * t28844;
t25938 = (t26303 * t28655 - t26845 * t28872) * t27389 - t26303 * t28724;
t26019 = (-t26303 * t27426 - t26845 * t28238) * t27389 + t27325 * t28318;
t25638 = (t25938 * t27387 + t26019 * t27383) * t27331 + t27319 * (-t25938 * t27383 + t26019 * t27387);
t28239 = t27325 * t28658;
t26103 = t26303 * t27432 - t26845 * t28239;
t28871 = t27325 * t27432;
t26111 = t26303 * t28658 + t26845 * t28871;
t25769 = (t26103 * t27383 + t26111 * t27387) * t27331 + t27319 * (t26103 * t27387 - t26111 * t27383);
t25529 = (-pkin(3) * t25638 - t25769 * t27313) * t27431 + t27425 * (pkin(3) * t25769 - t25638 * t27313);
t29243 = t25529 * t25867;
t26304 = (-t27363 * t28767 + t26642) * t27357 + t26846 * t28869;
t25935 = (t26304 * t28654 + t26846 * t28836) * t27389 - t26304 * t28724;
t28317 = t26846 * t28724;
t26023 = (t26304 * t27428 - t26846 * t28212) * t27389 + t27338 * t28317;
t25635 = (t25935 * t27387 - t26023 * t27383) * t27332 - (t25935 * t27383 + t26023 * t27387) * t27320;
t28213 = t27338 * t28657;
t26107 = t26304 * t27434 + t26846 * t28213;
t28835 = t27338 * t27434;
t26112 = t26304 * t28657 - t26846 * t28835;
t25770 = (t26107 * t27383 + t26112 * t27387) * t27332 + (t26107 * t27387 - t26112 * t27383) * t27320;
t25530 = (-pkin(3) * t25635 - t25770 * t27313) * t27433 + t27427 * (pkin(3) * t25770 - t25635 * t27313);
t29242 = t25530 * t25869;
t26305 = (-t27365 * t28767 + t26643) * t27357 + t26846 * t28839;
t25939 = (t26305 * t28654 - t26846 * t28866) * t27389 - t26305 * t28724;
t26020 = (-t26305 * t27428 - t26846 * t28236) * t27389 + t27326 * t28317;
t25639 = (t25939 * t27387 + t26020 * t27383) * t27332 + t27320 * (-t25939 * t27383 + t26020 * t27387);
t28237 = t27326 * t28657;
t26104 = t26305 * t27434 - t26846 * t28237;
t28865 = t27326 * t27434;
t26113 = t26305 * t28657 + t26846 * t28865;
t25771 = (t26104 * t27383 + t26113 * t27387) * t27332 + (t26104 * t27387 - t26113 * t27383) * t27320;
t25531 = (-pkin(3) * t25639 - t25771 * t27313) * t27433 + t27427 * (pkin(3) * t25771 - t25639 * t27313);
t29241 = t25531 * t25869;
t26775 = t27069 * t27383 + t27387 * t28682;
t26778 = t27069 * t27387 - t27383 * t28682;
t29044 = t26778 * t27346;
t29047 = t26775 * t27346;
t25652 = ((t26532 * t26775 - t29044 * t29507) * t27327 + t27315 * (t26532 * t26778 + t29047 * t29507)) * t27333 + ((t26532 * t29044 + t26775 * t29507) * t27327 + (-t26532 * t29047 + t26778 * t29507) * t27315) * t27321;
t28984 = t27102 * t27346;
t28987 = t27099 * t27346;
t25706 = ((-t26532 * t27102 - t28987 * t29507) * t27327 - (-t26532 * t27099 + t28984 * t29507) * t27315) * t27333 + ((t26532 * t28987 - t27102 * t29507) * t27327 + t27315 * (t26532 * t28984 + t27099 * t29507)) * t27321;
t25538 = (pkin(3) * t25652 + t25706 * t27313) * t27411 - (pkin(3) * t25706 - t25652 * t27313) * t27405;
t29240 = t25538 * t25856;
t26776 = t27070 * t27383 + t27387 * t28680;
t26779 = t27070 * t27387 - t27383 * t28680;
t29043 = t26779 * t27347;
t29046 = t26776 * t27347;
t25653 = ((t26533 * t26776 - t29043 * t29506) * t27328 + (t26533 * t26779 + t29046 * t29506) * t27316) * t27334 + t27322 * ((t26533 * t29043 + t26776 * t29506) * t27328 + (-t26533 * t29046 + t26779 * t29506) * t27316);
t28983 = t27103 * t27347;
t28986 = t27100 * t27347;
t25707 = ((-t26533 * t27103 - t28986 * t29506) * t27328 - (-t26533 * t27100 + t28983 * t29506) * t27316) * t27334 + t27322 * ((t26533 * t28986 - t27103 * t29506) * t27328 + (t26533 * t28983 + t27100 * t29506) * t27316);
t25539 = (pkin(3) * t25653 + t25707 * t27313) * t27413 - t27407 * (pkin(3) * t25707 - t25653 * t27313);
t29239 = t25539 * t25858;
t26777 = t27071 * t27383 + t27387 * t28678;
t26780 = t27071 * t27387 - t27383 * t28678;
t29042 = t26780 * t27348;
t29045 = t26777 * t27348;
t25654 = ((t26534 * t26777 - t29042 * t29505) * t27329 + (t26534 * t26780 + t29045 * t29505) * t27317) * t27335 + t27323 * ((t26534 * t29042 + t26777 * t29505) * t27329 + (-t26534 * t29045 + t26780 * t29505) * t27317);
t28982 = t27104 * t27348;
t28985 = t27101 * t27348;
t25708 = ((-t26534 * t27104 - t28985 * t29505) * t27329 - (-t26534 * t27101 + t28982 * t29505) * t27317) * t27335 + t27323 * ((t26534 * t28985 - t27104 * t29505) * t27329 + (t26534 * t28982 + t27101 * t29505) * t27317);
t25540 = (pkin(3) * t25654 + t25708 * t27313) * t27415 - t27409 * (pkin(3) * t25708 - t25654 * t27313);
t29238 = t25540 * t25860;
t26784 = t27093 * t27383 + t27387 * t28673;
t26787 = t27093 * t27387 - t27383 * t28673;
t29038 = t26787 * t27349;
t29041 = t26784 * t27349;
t25656 = ((t26535 * t26784 - t29038 * t29504) * t27330 + (t26535 * t26787 + t29041 * t29504) * t27318) * t27336 + t27324 * ((t26535 * t29038 + t26784 * t29504) * t27330 + t27318 * (-t26535 * t29041 + t26787 * t29504));
t28972 = t27118 * t27349;
t28975 = t27115 * t27349;
t25721 = ((-t26535 * t27118 - t28975 * t29504) * t27330 - (-t26535 * t27115 + t28972 * t29504) * t27318) * t27336 + t27324 * ((t26535 * t28975 - t27118 * t29504) * t27330 + (t26535 * t28972 + t27115 * t29504) * t27318);
t25541 = (pkin(3) * t25656 + t25721 * t27313) * t27429 - t27423 * (pkin(3) * t25721 - t25656 * t27313);
t29237 = t25541 * t25865;
t26785 = t27094 * t27383 + t27387 * t28671;
t26788 = t27094 * t27387 - t27383 * t28671;
t29037 = t26788 * t27350;
t29040 = t26785 * t27350;
t25657 = ((t26536 * t26785 - t29037 * t29503) * t27331 + t27319 * (t26536 * t26788 + t29040 * t29503)) * t27337 + t27325 * ((t26536 * t29037 + t26785 * t29503) * t27331 + (-t26536 * t29040 + t26788 * t29503) * t27319);
t28971 = t27119 * t27350;
t28974 = t27116 * t27350;
t25722 = ((-t26536 * t27119 - t28974 * t29503) * t27331 - (-t26536 * t27116 + t28971 * t29503) * t27319) * t27337 + t27325 * ((t26536 * t28974 - t27119 * t29503) * t27331 + t27319 * (t26536 * t28971 + t27116 * t29503));
t25542 = (pkin(3) * t25657 + t25722 * t27313) * t27431 - t27425 * (pkin(3) * t25722 - t25657 * t27313);
t29236 = t25542 * t25867;
t26786 = t27095 * t27383 + t27387 * t28669;
t26789 = t27095 * t27387 - t27383 * t28669;
t29036 = t26789 * t27351;
t29039 = t26786 * t27351;
t25655 = ((t26537 * t26786 - t29036 * t29502) * t27332 + t27320 * (t26537 * t26789 + t29039 * t29502)) * t27338 + ((t26537 * t29036 + t26786 * t29502) * t27332 + (-t26537 * t29039 + t26789 * t29502) * t27320) * t27326;
t28970 = t27120 * t27351;
t28973 = t27117 * t27351;
t25723 = ((-t26537 * t27120 - t28973 * t29502) * t27332 - (-t26537 * t27117 + t28970 * t29502) * t27320) * t27338 + ((t26537 * t28973 - t27120 * t29502) * t27332 + t27320 * (t26537 * t28970 + t27117 * t29502)) * t27326;
t25543 = (pkin(3) * t25655 + t25723 * t27313) * t27433 - t27427 * (pkin(3) * t25723 - t25655 * t27313);
t29235 = t25543 * t25869;
t29234 = t25547 ^ 2 / t25910 ^ 2;
t29233 = t25548 ^ 2 / t25911 ^ 2;
t29232 = t25549 ^ 2 / t25912 ^ 2;
t29228 = t25553 ^ 2 / t25925 ^ 2;
t29227 = t25554 ^ 2 / t25926 ^ 2;
t29226 = t25555 ^ 2 / t25927 ^ 2;
t26236 = t26532 * t28832 - t27387 * t29507;
t26242 = t26532 * t28831 + t27383 * t29507;
t26244 = t26532 * t27387 + t28832 * t29507;
t26245 = -t26532 * t27383 + t28831 * t29507;
t25598 = -((t26244 * t27315 - t26245 * t27327) * t27333 + (-t26236 * t27315 + t26242 * t27327) * t27321) * t29072 + ((-t26244 * t27327 - t26245 * t27315) * t27333 + (t26236 * t27327 + t26242 * t27315) * t27321) * t26557;
t29204 = t25598 * t25904;
t26247 = t26534 * t27387 + t28822 * t29505;
t26248 = -t26534 * t27383 + t28821 * t29505;
t26254 = t26534 * t28822 - t27387 * t29505;
t26255 = t26534 * t28821 + t27383 * t29505;
t25599 = -((t26247 * t27317 - t26248 * t27329) * t27335 + t27323 * (-t26254 * t27317 + t26255 * t27329)) * t29070 + ((-t26247 * t27329 - t26248 * t27317) * t27335 + t27323 * (t26254 * t27329 + t26255 * t27317)) * t26559;
t29203 = t25599 * t25908;
t26234 = t26533 * t27387 + t28827 * t29506;
t26237 = t26533 * t28827 - t27387 * t29506;
t26246 = -t26533 * t27383 + t28826 * t29506;
t26253 = t26533 * t28826 + t27383 * t29506;
t25600 = -((t26234 * t27316 - t26246 * t27328) * t27334 + (-t26237 * t27316 + t26253 * t27328) * t27322) * t29071 + t26558 * ((-t26234 * t27328 - t26246 * t27316) * t27334 + (t26237 * t27328 + t26253 * t27316) * t27322);
t29202 = t25600 * t25906;
t26235 = t26535 * t27387 + t28817 * t29504;
t26238 = t26535 * t28817 - t27387 * t29504;
t26241 = -t26535 * t27383 + t28816 * t29504;
t26256 = t26535 * t28816 + t27383 * t29504;
t25601 = -((t26235 * t27318 - t26241 * t27330) * t27336 + t27324 * (-t26238 * t27318 + t26256 * t27330)) * t29057 + ((-t26235 * t27330 - t26241 * t27318) * t27336 + t27324 * (t26238 * t27330 + t26256 * t27318)) * t26611;
t29201 = t25601 * t25916;
t26239 = t26536 * t28812 - t27387 * t29503;
t26249 = t26536 * t27387 + t28812 * t29503;
t26250 = -t26536 * t27383 + t28811 * t29503;
t26257 = t26536 * t28811 + t27383 * t29503;
t25602 = -((t26249 * t27319 - t26250 * t27331) * t27337 + (-t26239 * t27319 + t26257 * t27331) * t27325) * t29056 + t26612 * ((-t26249 * t27331 - t26250 * t27319) * t27337 + t27325 * (t26239 * t27331 + t26257 * t27319));
t29200 = t25602 * t25918;
t26240 = t26537 * t28807 - t27387 * t29502;
t26243 = t26537 * t28806 + t27383 * t29502;
t26251 = t26537 * t27387 + t28807 * t29502;
t26252 = -t26537 * t27383 + t28806 * t29502;
t25603 = -((t26251 * t27320 - t26252 * t27332) * t27338 + (-t26240 * t27320 + t26243 * t27332) * t27326) * t29055 + t26613 * ((-t26251 * t27332 - t26252 * t27320) * t27338 + (t26240 * t27332 + t26243 * t27320) * t27326);
t29199 = t25603 * t25920;
t26118 = t26294 * t27383 - t26841 * t28862;
t26126 = t26294 * t27387 + t26841 * t28863;
t25670 = (-t26118 * t27315 + t26126 * t27327) * t29072 - (t26118 * t27327 + t26126 * t27315) * t26557;
t29198 = t25670 * t25904;
t26114 = -t26295 * t27383 - t26841 * t28897;
t26127 = t26295 * t27387 - t26841 * t28898;
t25671 = (t26114 * t27315 + t26127 * t27327) * t29072 - (-t26114 * t27327 + t26127 * t27315) * t26557;
t29197 = t25671 * t25904;
t26123 = -t26299 * t27383 - t26843 * t28885;
t26131 = t26299 * t27387 - t26843 * t28886;
t25672 = (t26123 * t27317 + t26131 * t27329) * t29070 - (-t26123 * t27329 + t26131 * t27317) * t26559;
t29196 = t25672 * t25908;
t26122 = t26296 * t27383 - t26842 * t28857;
t26128 = t26296 * t27387 + t26842 * t28858;
t25673 = (-t26122 * t27316 + t26128 * t27328) * t29071 - t26558 * (t26122 * t27328 + t26128 * t27316);
t29195 = t25673 * t25906;
t26121 = -t26297 * t27383 - t26842 * t28891;
t26129 = t26297 * t27387 - t26842 * t28892;
t25674 = (t26121 * t27316 + t26129 * t27328) * t29071 - (-t26121 * t27328 + t26129 * t27316) * t26558;
t29194 = t25674 * t25906;
t26124 = t26298 * t27383 - t26843 * t28852;
t26130 = t26298 * t27387 + t26843 * t28853;
t25675 = (-t26124 * t27317 + t26130 * t27329) * t29070 - (t26124 * t27329 + t26130 * t27317) * t26559;
t29193 = t25675 * t25908;
t26115 = -t26301 * t27383 - t26844 * t28879;
t26133 = t26301 * t27387 - t26844 * t28880;
t25676 = (t26115 * t27318 + t26133 * t27330) * t29057 - t26611 * (-t26115 * t27330 + t26133 * t27318);
t29192 = t25676 * t25916;
t26120 = t26302 * t27383 - t26845 * t28842;
t26134 = t26302 * t27387 + t26845 * t28843;
t25677 = (-t26120 * t27319 + t26134 * t27331) * t29056 - t26612 * (t26120 * t27331 + t26134 * t27319);
t29191 = t25677 * t25918;
t26125 = t26304 * t27383 - t26846 * t28837;
t26136 = t26304 * t27387 + t26846 * t28838;
t25678 = (-t26125 * t27320 + t26136 * t27332) * t29055 - (t26125 * t27332 + t26136 * t27320) * t26613;
t29190 = t25678 * t25920;
t26119 = t26300 * t27383 - t26844 * t28847;
t26132 = t26300 * t27387 + t26844 * t28848;
t25679 = (-t26119 * t27318 + t26132 * t27330) * t29057 - (t26119 * t27330 + t26132 * t27318) * t26611;
t29189 = t25679 * t25916;
t26116 = -t26303 * t27383 - t26845 * t28873;
t26135 = t26303 * t27387 - t26845 * t28874;
t25680 = (t26116 * t27319 + t26135 * t27331) * t29056 - (-t26116 * t27331 + t26135 * t27319) * t26612;
t29188 = t25680 * t25918;
t26117 = -t26305 * t27383 - t26846 * t28867;
t26137 = t26305 * t27387 - t26846 * t28868;
t25681 = (t26117 * t27320 + t26137 * t27332) * t29055 - t26613 * (-t26117 * t27332 + t26137 * t27320);
t29187 = t25681 * t25920;
t29160 = t25904 * t27405;
t29159 = t25904 * t27411;
t29156 = t25906 * t27407;
t29155 = t25906 * t27413;
t29152 = t25908 * t27409;
t29151 = t25908 * t27415;
t29148 = t25916 * t27423;
t29147 = t25916 * t27429;
t29144 = t25918 * t27425;
t29143 = t25918 * t27431;
t29140 = t25920 * t27427;
t29139 = t25920 * t27433;
t26747 = (-t27361 * t28774 - t27362 * t28040) * t27437 + t27435 * t28040;
t29048 = t26747 * t27361;
t29035 = t26820 * t27346;
t29034 = t26820 * t27352;
t29033 = t26821 * t27347;
t29032 = t26821 * t27353;
t29031 = t26822 * t27348;
t29030 = t26822 * t27354;
t29029 = t26823 * t27349;
t29028 = t26823 * t27355;
t29027 = t26824 * t27350;
t29026 = t26824 * t27356;
t29025 = t26825 * t27351;
t29024 = t26825 * t27357;
t26982 = -t27362 * t28785 + t28042;
t29023 = t26982 * t27029;
t29022 = t27029 * t27031;
t29020 = t27029 * t27361;
t29019 = t27029 * t27364;
t29018 = t27031 * t27229;
t28951 = t27180 * t27346;
t28950 = t27180 * t27352;
t28947 = t27181 * t27347;
t28946 = t27181 * t27353;
t28943 = t27182 * t27348;
t28942 = t27182 * t27354;
t28939 = t27183 * t27349;
t28938 = t27183 * t27355;
t28935 = t27184 * t27350;
t28934 = t27184 * t27356;
t28931 = t27185 * t27351;
t28930 = t27185 * t27357;
t28921 = t27229 * t27362;
t28920 = t27246 * t27385;
t28919 = t27248 * t27385;
t28918 = t27250 * t27385;
t28917 = t27252 * t27385;
t28916 = t27254 * t27385;
t28915 = t27256 * t27385;
t28796 = t27361 * t27364;
t26746 = (t27362 * t28795 - t27435 * t28043) * t27437 - t27435 * t28795;
t28794 = t27362 * t26746;
t28784 = t27363 * t27364;
t28775 = t27364 * t27365;
t28760 = t27365 * t27361;
t28750 = t27373 * t27385;
t28749 = t27374 * t27385;
t28748 = t27375 * t27385;
t28747 = t27379 * t27385;
t28746 = t27380 * t27385;
t28745 = t27381 * t27385;
t28722 = t27385 * t27390;
t28721 = t27385 * t27405;
t28719 = t27385 * t27407;
t28717 = t27385 * t27409;
t28715 = t27385 * t27411;
t28714 = t27385 * t27413;
t28713 = t27385 * t27415;
t28712 = t27385 * t27423;
t28710 = t27385 * t27425;
t28708 = t27385 * t27427;
t28706 = t27385 * t27429;
t28705 = t27385 * t27431;
t28704 = t27385 * t27433;
t28647 = t27405 * t27406;
t28644 = t27406 * t27411;
t28643 = t27407 * t27408;
t28640 = t27408 * t27413;
t28639 = t27409 * t27410;
t28636 = t27410 * t27415;
t28635 = t27411 * t27412;
t28634 = t27413 * t27414;
t28633 = t27415 * t27416;
t28632 = t27423 * t27424;
t28628 = t27424 * t27429;
t28627 = t27425 * t27426;
t28623 = t27426 * t27431;
t28622 = t27427 * t27428;
t28618 = t27428 * t27433;
t28617 = t27429 * t27430;
t28616 = t27431 * t27432;
t28615 = t27433 * t27434;
t28044 = t27363 * t28563;
t26983 = t27362 * t28044 + t28760;
t28587 = t26983 * t26746 - t26982 * t29021;
t26984 = t27362 * t28760 + t28044;
t28586 = t26985 * t26746 - t26984 * t29021;
t28579 = t26747 * t28775 - t26985 * t29022;
t28041 = t28563 * t27031;
t28578 = t27362 * t26747 - t28041 * t29019;
t28138 = t27364 * t28614;
t28308 = t27031 * t28775;
t28577 = t26984 * t28138 + t27229 * t28308;
t28548 = 0.2e1 * t27373;
t28547 = 0.2e1 * t27374;
t28546 = 0.2e1 * t27375;
t28545 = 0.2e1 * t27379;
t28544 = 0.2e1 * t27380;
t28543 = 0.2e1 * t27381;
t28530 = -0.2e1 * t25547 * t25856;
t28529 = -0.2e1 * t29231;
t28528 = -0.2e1 * t25548 * t25858;
t28527 = -0.2e1 * t29230;
t28526 = -0.2e1 * t25549 * t25860;
t28525 = -0.2e1 * t29229;
t28524 = -0.2e1 * t25553 * t25865;
t28523 = -0.2e1 * t29225;
t28522 = -0.2e1 * t25554 * t25867;
t28521 = -0.2e1 * t29224;
t28520 = -0.2e1 * t25555 * t25869;
t28519 = -0.2e1 * t29223;
t28498 = t27299 * t29317;
t28497 = t27299 * t29316;
t28496 = t27299 * t29315;
t28495 = t27299 * t29311;
t28494 = t27299 * t29310;
t28493 = t27299 * t29309;
t28485 = t25364 * t29305;
t28484 = t25365 * t29305;
t28483 = t25366 * t29305;
t28482 = t25367 * t29305;
t28481 = t25368 * t29305;
t28480 = t25369 * t29305;
t28479 = pkin(8) * t28715;
t28478 = pkin(8) * t28714;
t28477 = pkin(8) * t28713;
t28476 = pkin(8) * t28706;
t28475 = pkin(8) * t28705;
t28474 = pkin(8) * t28704;
t28452 = t25364 * t29160;
t28451 = t25364 * t29159;
t28450 = t25365 * t29156;
t28449 = t25365 * t29155;
t28448 = t25366 * t29152;
t28447 = t25366 * t29151;
t28446 = t25367 * t29148;
t28445 = t25367 * t29147;
t28444 = t25368 * t29144;
t28443 = t25368 * t29143;
t28442 = t25369 * t29140;
t28441 = t25369 * t29139;
t28440 = t27406 * t29275;
t28439 = t27412 * t29275;
t28438 = t25373 * t28699;
t28437 = t27408 * t29273;
t28436 = t27414 * t29273;
t28435 = t25374 * t28698;
t28434 = t27410 * t29271;
t28433 = t27416 * t29271;
t28432 = t25375 * t28697;
t28431 = t27424 * t29269;
t28430 = t27430 * t29269;
t28429 = t25379 * t28693;
t28428 = t27426 * t29267;
t28427 = t27432 * t29267;
t28426 = t25380 * t28692;
t28425 = t27428 * t29265;
t28424 = t27434 * t29265;
t28423 = t25381 * t28691;
t28422 = t25382 * t28721;
t28421 = t25383 * t28719;
t28420 = t25384 * t28717;
t28419 = t25385 * t28712;
t28418 = t25386 * t28710;
t28417 = t25387 * t28708;
t28416 = t25904 * t25481;
t28415 = t25906 * t25482;
t28414 = t25908 * t25483;
t28413 = t25493 * t29231;
t28410 = t25494 * t29230;
t28407 = t25495 * t29229;
t28404 = t25916 * t25487;
t28403 = t25918 * t25488;
t28402 = t25920 * t25489;
t28401 = t25499 * t29225;
t28398 = t25500 * t29224;
t28395 = t25501 * t29223;
t28389 = t25547 * t29159;
t28385 = t25548 * t29155;
t28381 = t25549 * t29151;
t28378 = t25553 * t29147;
t28375 = t25554 * t29143;
t28372 = t25555 * t29139;
t25709 = t29410 * t27352 + (-t27321 * t28167 - t27732) * t28791 + t29404;
t28371 = t25709 * t28723;
t25711 = t29411 * t27352 + (-t27333 * t28167 - t27731) * t28791 + t29422;
t28370 = t25711 * t28723;
t25713 = t29412 * t27353 + (-t27322 * t28165 - t27730) * t28790 + t29405;
t28369 = t25713 * t28723;
t25715 = t29413 * t27353 + (-t27334 * t28165 - t27729) * t28790 + t29423;
t28368 = t25715 * t28723;
t25717 = t29414 * t27354 + (-t27323 * t28163 - t27728) * t28789 + t29406;
t28367 = t25717 * t28723;
t25719 = t29415 * t27354 + (-t27335 * t28163 - t27727) * t28789 + t29424;
t28366 = t25719 * t28723;
t25724 = t29416 * t27355 + (-t27324 * t28161 - t27726) * t28788 + t29407;
t28365 = t25724 * t28723;
t25726 = t29417 * t27355 + (-t27336 * t28161 - t27725) * t28788 + t29425;
t28364 = t25726 * t28723;
t25728 = t29418 * t27356 + (-t27325 * t28159 - t27724) * t28787 + t29408;
t28363 = t25728 * t28723;
t25730 = t29419 * t27356 + (-t27337 * t28159 - t27723) * t28787 + t29426;
t28362 = t25730 * t28723;
t25732 = t29420 * t27357 + (-t27326 * t28157 - t27722) * t28786 + t29409;
t28361 = t25732 * t28723;
t25734 = t29421 * t27357 + (-t27338 * t28157 - t27721) * t28786 + t29427;
t28360 = t25734 * t28723;
t28352 = t27405 * t29168;
t28351 = t27411 * t29168;
t28349 = t27407 * t29167;
t28348 = t27413 * t29167;
t28346 = t27409 * t29166;
t28345 = t27415 * t29166;
t28343 = t27423 * t29165;
t28342 = t27429 * t29165;
t28340 = t27425 * t29164;
t28339 = t27431 * t29164;
t28337 = t27427 * t29163;
t28336 = t27433 * t29163;
t28335 = t26066 * t27213;
t28334 = t26067 * t27214;
t28333 = t26068 * t27215;
t28332 = t26069 * t27216;
t28331 = t26070 * t27217;
t28330 = t26071 * t27218;
t28323 = t26746 * t28784;
t28310 = t26983 * t28614;
t28309 = t27031 * t29019;
t28301 = t27229 * t28784;
t28294 = t26048 * t27213;
t28293 = t26049 * t27214;
t28292 = t26050 * t27215;
t28291 = t26051 * t27216;
t28290 = t26052 * t27217;
t28289 = t26053 * t27218;
t27314 = t27364 ^ 2;
t28260 = t27314 * t28614;
t28259 = t27315 * t28791;
t28257 = t27316 * t28790;
t28255 = t27317 * t28789;
t28253 = t27318 * t28788;
t28251 = t27319 * t28787;
t28249 = t27320 * t28786;
t28235 = t27327 * t28791;
t28233 = t27328 * t28790;
t28231 = t27329 * t28789;
t28229 = t27330 * t28788;
t28227 = t27331 * t28787;
t28225 = t27332 * t28786;
t28204 = t27346 * t28702;
t28198 = t27347 * t28701;
t28192 = t27348 * t28700;
t28186 = t27349 * t28696;
t28180 = t27350 * t28695;
t28174 = t27351 * t28694;
t28156 = t27362 * t28702;
t28155 = t27362 * t28701;
t28154 = t27362 * t28700;
t28153 = t27362 * t28696;
t28152 = t27362 * t28695;
t28151 = t27362 * t28694;
t25346 = t25364 + t29264;
t25350 = t25382 + t29287;
t27884 = t25856 * t28413;
t25430 = t27389 * t27884 + t25481 / 0.2e1 + t29234 / 0.2e1;
t25433 = (t25481 + t29234) * t27389 + 0.2e1 * t27884;
t27866 = t28722 * t29234;
t28056 = t25838 * (-t27390 * t28422 - t27411 * t27866 + (-t25346 * t28645 - t25350 * t28644 + 0.2e1 * t25430 * t28647 - t25433 * t28635) * t27386);
t28055 = t25838 * (t27390 * t25382 * t28715 - t27405 * t27866 + (t25346 * t28635 - t25350 * t28647 - 0.2e1 * t25430 * t28644 - t25433 * t28645) * t27386);
t25347 = t25365 + t29263;
t25352 = t25383 + t29285;
t27882 = t25858 * t28410;
t25431 = t27389 * t27882 + t25482 / 0.2e1 + t29233 / 0.2e1;
t25434 = (t25482 + t29233) * t27389 + 0.2e1 * t27882;
t27865 = t28722 * t29233;
t28054 = t25839 * (-t27390 * t28421 - t27413 * t27865 + (-t25347 * t28641 - t25352 * t28640 + 0.2e1 * t25431 * t28643 - t25434 * t28634) * t27386);
t28053 = t25839 * (t27390 * t25383 * t28714 - t27407 * t27865 + (t25347 * t28634 - t25352 * t28643 - 0.2e1 * t25431 * t28640 - t25434 * t28641) * t27386);
t25348 = t25366 + t29262;
t25354 = t25384 + t29283;
t27880 = t25860 * t28407;
t25432 = t27389 * t27880 + t25483 / 0.2e1 + t29232 / 0.2e1;
t25435 = (t25483 + t29232) * t27389 + 0.2e1 * t27880;
t27864 = t28722 * t29232;
t28052 = t25840 * (-t27390 * t28420 - t27415 * t27864 + (-t25348 * t28637 - t25354 * t28636 + 0.2e1 * t25432 * t28639 - t25435 * t28633) * t27386);
t28051 = t25840 * (t27390 * t25384 * t28713 - t27409 * t27864 + (t25348 * t28633 - t25354 * t28639 - 0.2e1 * t25432 * t28636 - t25435 * t28637) * t27386);
t25355 = t25367 + t29261;
t25359 = t25385 + t29281;
t27872 = t25865 * t28401;
t25442 = t27389 * t27872 + t25487 / 0.2e1 + t29228 / 0.2e1;
t25445 = (t25487 + t29228) * t27389 + 0.2e1 * t27872;
t27860 = t28722 * t29228;
t28050 = t25841 * (-t27390 * t28419 - t27429 * t27860 + (-t25355 * t28630 - t25359 * t28628 + 0.2e1 * t25442 * t28632 - t25445 * t28617) * t27386);
t28049 = t25841 * (t27390 * t25385 * t28706 - t27423 * t27860 + (t25355 * t28617 - t25359 * t28632 - 0.2e1 * t25442 * t28628 - t25445 * t28630) * t27386);
t25356 = t25368 + t29260;
t25361 = t25386 + t29279;
t27870 = t25867 * t28398;
t25443 = t27389 * t27870 + t25488 / 0.2e1 + t29227 / 0.2e1;
t25446 = (t25488 + t29227) * t27389 + 0.2e1 * t27870;
t27859 = t28722 * t29227;
t28048 = t25842 * (-t27390 * t28418 - t27431 * t27859 + (-t25356 * t28625 - t25361 * t28623 + 0.2e1 * t25443 * t28627 - t25446 * t28616) * t27386);
t28047 = t25842 * (t27390 * t25386 * t28705 - t27425 * t27859 + (t25356 * t28616 - t25361 * t28627 - 0.2e1 * t25443 * t28623 - t25446 * t28625) * t27386);
t25357 = t25369 + t29259;
t25363 = t25387 + t29277;
t27868 = t25869 * t28395;
t25444 = t27389 * t27868 + t25489 / 0.2e1 + t29226 / 0.2e1;
t25447 = (t25489 + t29226) * t27389 + 0.2e1 * t27868;
t27858 = t28722 * t29226;
t28046 = t25843 * (-t27390 * t28417 - t27433 * t27858 + (-t25357 * t28620 - t25363 * t28618 + 0.2e1 * t25444 * t28622 - t25447 * t28615) * t27386);
t28045 = t25843 * (t27390 * t25387 * t28704 - t27427 * t27858 + (t25357 * t28615 - t25363 * t28622 - 0.2e1 * t25444 * t28618 - t25447 * t28620) * t27386);
t28037 = t25364 * t28518;
t28036 = t25365 * t28517;
t28035 = t25366 * t28516;
t28034 = t25367 * t28515;
t28033 = t25368 * t28514;
t28032 = t25369 * t28513;
t28031 = t25517 * t28526;
t28030 = t25518 * t28530;
t28029 = t25519 * t28530;
t28028 = t25520 * t28528;
t28027 = t25521 * t28528;
t28026 = t25522 * t28526;
t28025 = t25526 * t28524;
t28024 = t25527 * t28524;
t28023 = t25528 * t28522;
t28022 = t25529 * t28522;
t28021 = t25530 * t28520;
t28020 = t25531 * t28520;
t28019 = t25538 * t28530;
t28018 = t25539 * t28528;
t28017 = t25540 * t28526;
t28016 = t25541 * t28524;
t28015 = t25542 * t28522;
t28014 = t25543 * t28520;
t28013 = t25742 * t28530;
t28012 = t25745 * t28530;
t28011 = t25743 * t28528;
t28010 = t25746 * t28528;
t28009 = t25744 * t28526;
t28008 = t25747 * t28526;
t28007 = t25751 * t28524;
t28006 = t25754 * t28524;
t28005 = t25752 * t28522;
t28004 = t25755 * t28522;
t28003 = t25753 * t28520;
t28002 = t25756 * t28520;
t27947 = t27299 * t28468;
t27946 = t27299 * t28467;
t27945 = t27299 * t28466;
t27944 = t27299 * t28465;
t27943 = t27299 * t28464;
t27942 = t27299 * t28463;
t27921 = -0.2e1 * t28064;
t27896 = t25373 * t28359;
t27895 = t25374 * t28358;
t27894 = t25375 * t28357;
t27893 = t25379 * t28356;
t27892 = t25380 * t28355;
t27891 = t25381 * t28354;
t27890 = t27405 * t28416;
t27889 = t27411 * t28416;
t27888 = t27407 * t28415;
t27887 = t27413 * t28415;
t27886 = t27409 * t28414;
t27885 = t27415 * t28414;
t27878 = t27423 * t28404;
t27877 = t27429 * t28404;
t27876 = t27425 * t28403;
t27875 = t27431 * t28403;
t27874 = t27427 * t28402;
t27873 = t27433 * t28402;
t27854 = t28702 * t28969;
t27853 = t28701 * t28966;
t27852 = t28700 * t28963;
t27851 = t28696 * t28960;
t27850 = t28695 * t28957;
t27849 = t28694 * t28954;
t27828 = t27444 * t28204;
t27826 = t27445 * t28198;
t27824 = t27446 * t28192;
t27822 = t27447 * t28186;
t27820 = t27448 * t28180;
t27818 = t27449 * t28174;
t27816 = t27362 * t28116;
t27815 = t27362 * t28115;
t27814 = t27362 * t28114;
t27813 = t27362 * t28110;
t27812 = t27362 * t28109;
t27811 = t27362 * t28108;
t27779 = 0.4e1 * (t27373 - 0.1e1 / 0.2e1) * t28413;
t27778 = 0.4e1 * (t27374 - 0.1e1 / 0.2e1) * t28410;
t27777 = 0.4e1 * (t27375 - 0.1e1 / 0.2e1) * t28407;
t27776 = 0.4e1 * (t27379 - 0.1e1 / 0.2e1) * t28401;
t27775 = 0.4e1 * (t27380 - 0.1e1 / 0.2e1) * t28398;
t27774 = 0.4e1 * (t27381 - 0.1e1 / 0.2e1) * t28395;
t25370 = t25373 * t28702;
t25329 = t25370 + t28485;
t27655 = (t28438 + t29357) * t27389 + t25373 * t28722;
t27767 = -t27405 * t25329 + t25481 * (t27389 * t28479 + t27343) + t27411 * t27655;
t27766 = -t27411 * t25329 + t25481 * (-pkin(8) * t28131 + t29351) - t27405 * t27655;
t25371 = t25374 * t28701;
t25331 = t25371 + t28484;
t27654 = (t28435 + t29356) * t27389 + t25374 * t28722;
t27765 = -t27407 * t25331 + t25482 * (t27389 * t28478 + t27344) + t27413 * t27654;
t27764 = -t27413 * t25331 + t25482 * (-pkin(8) * t28130 + t29350) - t27407 * t27654;
t25372 = t25375 * t28700;
t25333 = t25372 + t28483;
t27653 = (t28432 + t29355) * t27389 + t25375 * t28722;
t27763 = -t27409 * t25333 + t25483 * (t27389 * t28477 + t27345) + t27415 * t27653;
t27762 = -t27415 * t25333 + t25483 * (-pkin(8) * t28129 + t29349) - t27409 * t27653;
t25376 = t25379 * t28696;
t25338 = t25376 + t28482;
t27652 = (t28429 + t29354) * t27389 + t25379 * t28722;
t27761 = -t27423 * t25338 + t25487 * (t27389 * t28476 + t27358) + t27429 * t27652;
t27760 = -t27429 * t25338 + t25487 * (-pkin(8) * t28125 + t29348) - t27423 * t27652;
t25377 = t25380 * t28695;
t25340 = t25377 + t28481;
t27651 = (t28426 + t29353) * t27389 + t25380 * t28722;
t27759 = -t27425 * t25340 + t25488 * (t27389 * t28475 + t27359) + t27431 * t27651;
t27758 = -t27431 * t25340 + t25488 * (-pkin(8) * t28124 + t29347) - t27425 * t27651;
t25378 = t25381 * t28694;
t25342 = t25378 + t28480;
t27650 = (t28423 + t29352) * t27389 + t25381 * t28722;
t27757 = -t27427 * t25342 + t25489 * (t27389 * t28474 + t27360) + t27433 * t27650;
t27756 = -t27433 * t25342 + t25489 * (-pkin(8) * t28123 + t29346) - t27427 * t27650;
t27702 = t28351 * t25481;
t27701 = t27405 * t27889;
t27700 = t28348 * t25482;
t27699 = t27407 * t27887;
t27698 = t28345 * t25483;
t27697 = t27409 * t27885;
t27696 = t28342 * t25487;
t27695 = t27423 * t27877;
t27694 = t28339 * t25488;
t27693 = t27425 * t27875;
t27692 = t28336 * t25489;
t27691 = t27427 * t27873;
t27675 = 0.2e1 * t25493 * t27405 * t28389;
t27674 = 0.2e1 * t25494 * t27407 * t28385;
t27673 = 0.2e1 * t25495 * t27409 * t28381;
t27672 = 0.2e1 * t25499 * t27423 * t28378;
t27671 = 0.2e1 * t25500 * t27425 * t28375;
t27670 = 0.2e1 * t25501 * t27427 * t28372;
t27631 = -t26747 * t26982 + t26983 * t29018;
t27630 = -t26747 * t26984 + t26985 * t29018;
t27628 = t27364 * t27717;
t27627 = t27364 * t27716;
t27626 = t27364 * t27715;
t27625 = t27364 * t27711;
t27624 = t27364 * t27710;
t27623 = t27364 * t27709;
t25349 = t25382 + 0.2e1 * t29287;
t25466 = 0.2e1 * t28107 + t29231;
t27584 = t25349 * t27405 + t25466 * t28389;
t27583 = -t25466 * t25547 * t29160 + t25349 * t27411;
t25351 = t25383 + 0.2e1 * t29285;
t25467 = 0.2e1 * t28106 + t29230;
t27582 = t25351 * t27407 + t25467 * t28385;
t27581 = -t25467 * t25548 * t29156 + t25351 * t27413;
t25353 = t25384 + 0.2e1 * t29283;
t25468 = 0.2e1 * t28105 + t29229;
t27580 = t25353 * t27409 + t25468 * t28381;
t27579 = -t25468 * t25549 * t29152 + t25353 * t27415;
t25358 = t25385 + 0.2e1 * t29281;
t25475 = 0.2e1 * t28104 + t29225;
t27578 = t25358 * t27423 + t25475 * t28378;
t27577 = -t25475 * t25553 * t29148 + t25358 * t27429;
t25360 = t25386 + 0.2e1 * t29279;
t25476 = 0.2e1 * t28103 + t29224;
t27576 = t25360 * t27425 + t25476 * t28375;
t27575 = -t25476 * t25554 * t29144 + t25360 * t27431;
t25362 = t25387 + 0.2e1 * t29277;
t25477 = 0.2e1 * t28102 + t29223;
t27574 = t25362 * t27427 + t25477 * t28372;
t27573 = -t25477 * t25555 * t29140 + t25362 * t27433;
t27572 = -t26746 * t28775 - t26984 * t29022;
t27570 = t27369 * t29478 + t28371 - t29478;
t27569 = t27369 * t29479 + t28370 - t29479;
t27568 = t27369 * t29480 + t28369 - t29480;
t27567 = t27369 * t29481 + t28368 - t29481;
t27566 = t27369 * t29482 + t28367 - t29482;
t27565 = t27369 * t29483 + t28366 - t29483;
t27564 = t27369 * t29484 + t28365 - t29484;
t27563 = t27369 * t29485 + t28364 - t29485;
t27562 = t27369 * t29486 + t28363 - t29486;
t27561 = t27369 * t29487 + t28362 - t29487;
t27560 = t27369 * t29488 + t28361 - t29488;
t27559 = t27369 * t29489 + t28360 - t29489;
t27558 = t25838 * (-t25364 * t27406 - t25481 * t27412);
t27557 = t25838 * (t25364 * t27412 - t25481 * t27406);
t27556 = t25839 * (-t25365 * t27408 - t25482 * t27414);
t27555 = t25839 * (t25365 * t27414 - t25482 * t27408);
t27554 = t25840 * (-t25366 * t27410 - t25483 * t27416);
t27553 = t25840 * (t25366 * t27416 - t25483 * t27410);
t27552 = t25841 * (-t25367 * t27424 - t25487 * t27430);
t27551 = t25841 * (t25367 * t27430 - t25487 * t27424);
t27550 = t25842 * (-t25368 * t27426 - t25488 * t27432);
t27549 = t25842 * (t25368 * t27432 - t25488 * t27426);
t27548 = t25843 * (-t25369 * t27428 - t25489 * t27434);
t27547 = t25843 * (t25369 * t27434 - t25489 * t27428);
t27533 = t25856 * t27584;
t27532 = t25856 * t27583;
t27531 = t25858 * t27582;
t27530 = t25858 * t27581;
t27529 = t25860 * t27580;
t27528 = t25860 * t27579;
t27527 = t25865 * t27578;
t27526 = t25865 * t27577;
t27525 = t25867 * t27576;
t27524 = t25867 * t27575;
t27523 = t25869 * t27574;
t27522 = t25869 * t27573;
t27503 = -t27314 * t27437 * t28040 - t27029 * t28921;
t27496 = t25856 * t28037 + t25857 * t27779;
t27495 = t25856 * t29288 + t25857 * t27675;
t27494 = t25858 * t28036 + t25859 * t27778;
t27493 = t25858 * t29286 + t25859 * t27674;
t27492 = t25860 * t28035 + t25861 * t27777;
t27491 = t25860 * t29284 + t25861 * t27673;
t27490 = t25865 * t28034 + t25866 * t27776;
t27489 = t25865 * t29282 + t25866 * t27672;
t27488 = t25867 * t28033 + t25868 * t27775;
t27487 = t25867 * t29280 + t25868 * t27671;
t27486 = t25869 * t28032 + t25870 * t27774;
t27485 = t25869 * t29278 + t25870 * t27670;
t25970 = (t26820 * t27096 + t27090 * t28951) * t27327 + (-t26820 * t27090 + t27096 * t28951) * t27315 + t27180 * t28167;
t26939 = -t27227 * t27412 + t27262;
t26719 = t26939 * t27383 - t27387 * t28498;
t26722 = t26939 * t27387 + t27383 * t28498;
t27484 = (-t25970 * t29321 - t28335) * t27369 - (t26719 * t28951 + t26722 * t26820) * t27327 - (-t26719 * t26820 + t26722 * t28951) * t27315 + t26942 * t28950 + t28335;
t25971 = (t26821 * t27097 + t27091 * t28947) * t27328 + (-t26821 * t27091 + t27097 * t28947) * t27316 + t27181 * t28165;
t26940 = -t27227 * t27414 + t27262;
t26720 = t26940 * t27383 - t27387 * t28497;
t26723 = t26940 * t27387 + t27383 * t28497;
t27483 = (-t25971 * t29321 - t28334) * t27369 - (t26720 * t28947 + t26723 * t26821) * t27328 - (-t26720 * t26821 + t26723 * t28947) * t27316 + t26943 * t28946 + t28334;
t25972 = (t26822 * t27098 + t27092 * t28943) * t27329 + (-t26822 * t27092 + t27098 * t28943) * t27317 + t27182 * t28163;
t26941 = -t27227 * t27416 + t27262;
t26721 = t26941 * t27383 - t27387 * t28496;
t26724 = t26941 * t27387 + t27383 * t28496;
t27482 = (-t25972 * t29321 - t28333) * t27369 - (t26721 * t28943 + t26724 * t26822) * t27329 - (-t26721 * t26822 + t26724 * t28943) * t27317 + t26944 * t28942 + t28333;
t25979 = (t26823 * t27112 + t27109 * t28939) * t27330 + (-t26823 * t27109 + t27112 * t28939) * t27318 + t27183 * t28161;
t26951 = -t27227 * t27430 + t27262;
t26725 = t26951 * t27383 - t27387 * t28495;
t26728 = t26951 * t27387 + t27383 * t28495;
t27481 = (-t25979 * t29321 - t28332) * t27369 - (t26725 * t28939 + t26728 * t26823) * t27330 - (-t26725 * t26823 + t26728 * t28939) * t27318 + t26954 * t28938 + t28332;
t25980 = (t26824 * t27113 + t27110 * t28935) * t27331 + (-t26824 * t27110 + t27113 * t28935) * t27319 + t27184 * t28159;
t26952 = -t27227 * t27432 + t27262;
t26726 = t26952 * t27383 - t27387 * t28494;
t26729 = t26952 * t27387 + t27383 * t28494;
t27480 = (-t25980 * t29321 - t28331) * t27369 - (t26726 * t28935 + t26729 * t26824) * t27331 - (-t26726 * t26824 + t26729 * t28935) * t27319 + t26955 * t28934 + t28331;
t25981 = (t26825 * t27114 + t27111 * t28931) * t27332 + (-t26825 * t27111 + t27114 * t28931) * t27320 + t27185 * t28157;
t26953 = -t27227 * t27434 + t27262;
t26727 = t26953 * t27383 - t27387 * t28493;
t26730 = t26953 * t27387 + t27383 * t28493;
t27479 = (-t25981 * t29321 - t28330) * t27369 - (t26727 * t28931 + t26730 * t26825) * t27332 - (-t26727 * t26825 + t26730 * t28931) * t27320 + t26956 * t28930 + t28330;
t27478 = (-t29478 * t28723 + t25709 * t27369 + (t27321 * t27816 - t29410) * t27352 + t27732 * t28791 - t29404) * t27299;
t27477 = (-t29479 * t28723 + t25711 * t27369 + (t27333 * t27816 - t29411) * t27352 + t27731 * t28791 - t29422) * t27299;
t27476 = (-t29480 * t28723 + t25713 * t27369 + (t27322 * t27815 - t29412) * t27353 + t27730 * t28790 - t29405) * t27299;
t27475 = (-t29481 * t28723 + t25715 * t27369 + (t27334 * t27815 - t29413) * t27353 + t27729 * t28790 - t29423) * t27299;
t27474 = (-t29482 * t28723 + t25717 * t27369 + (t27323 * t27814 - t29414) * t27354 + t27728 * t28789 - t29406) * t27299;
t27473 = (-t29483 * t28723 + t25719 * t27369 + (t27335 * t27814 - t29415) * t27354 + t27727 * t28789 - t29424) * t27299;
t27472 = (-t29484 * t28723 + t25724 * t27369 + (t27324 * t27813 - t29416) * t27355 + t27726 * t28788 - t29407) * t27299;
t27471 = (-t29485 * t28723 + t25726 * t27369 + (t27336 * t27813 - t29417) * t27355 + t27725 * t28788 - t29425) * t27299;
t27470 = (-t29486 * t28723 + t25728 * t27369 + (t27325 * t27812 - t29418) * t27356 + t27724 * t28787 - t29408) * t27299;
t27469 = (-t29487 * t28723 + t25730 * t27369 + (t27337 * t27812 - t29419) * t27356 + t27723 * t28787 - t29426) * t27299;
t27468 = (-t29488 * t28723 + t25732 * t27369 + (t27326 * t27811 - t29420) * t27357 + t27722 * t28786 - t29409) * t27299;
t27467 = (-t29489 * t28723 + t25734 * t27369 + (t27338 * t27811 - t29421) * t27357 + t27721 * t28786 - t29427) * t27299;
t26950 = t27390 * t27922 + t27311;
t26948 = t27390 * t27923 + t27311;
t26946 = t27390 * t27924 + t27311;
t26938 = t27390 * t27925 + t27311;
t26936 = t27390 * t27926 + t27311;
t26934 = t27390 * t27927 + t27311;
t26922 = t27338 * t28803 - t28237;
t26921 = t27326 * t28803 + t28213;
t26918 = t27337 * t28808 - t28239;
t26917 = t27325 * t28808 + t28215;
t26914 = t27336 * t28813 - t28241;
t26913 = t27324 * t28813 + t28217;
t26906 = t27338 * t28171 + t28865;
t26905 = -t27326 * t28171 + t28835;
t26904 = t27337 * t28177 + t28871;
t26903 = -t27325 * t28177 + t28840;
t26902 = t27336 * t28183 + t28877;
t26901 = -t27324 * t28183 + t28845;
t26898 = t27335 * t28818 - t28243;
t26897 = t27323 * t28818 + t28219;
t26894 = t27334 * t28823 - t28245;
t26893 = t27322 * t28823 + t28221;
t26890 = t27333 * t28828 - t28247;
t26889 = t27321 * t28828 + t28223;
t26882 = t27335 * t28189 + t28883;
t26881 = -t27323 * t28189 + t28850;
t26880 = t27334 * t28195 + t28889;
t26879 = -t27322 * t28195 + t28855;
t26878 = t27333 * t28201 + t28895;
t26877 = -t27321 * t28201 + t28860;
t26770 = t26982 * t28138;
t26760 = t27031 * t28921;
t26705 = -t26975 + t26737;
t26694 = t26950 * t27387 - t27383 * t27942;
t26693 = t26948 * t27387 - t27383 * t27943;
t26692 = t26946 * t27387 - t27383 * t27944;
t26691 = t26950 * t27383 + t27387 * t27942;
t26690 = t26948 * t27383 + t27387 * t27943;
t26689 = t26946 * t27383 + t27387 * t27944;
t26679 = t26938 * t27387 - t27383 * t27945;
t26678 = t26936 * t27387 - t27383 * t27946;
t26677 = t26934 * t27387 - t27383 * t27947;
t26676 = t26938 * t27383 + t27387 * t27945;
t26675 = t26936 * t27383 + t27387 * t27946;
t26674 = t26934 * t27383 + t27387 * t27947;
t26630 = t26746 * t28043;
t26538 = -t26738 + t26975;
t26485 = -t26906 * t27383 + t26922 * t27387;
t26484 = t26905 * t27383 + t26921 * t27387;
t26481 = -t26904 * t27383 + t26918 * t27387;
t26480 = t26903 * t27383 + t26917 * t27387;
t26477 = -t26902 * t27383 + t26914 * t27387;
t26476 = t26901 * t27383 + t26913 * t27387;
t26469 = t26906 * t27387 + t26922 * t27383;
t26468 = t26905 * t27387 - t26921 * t27383;
t26467 = t26904 * t27387 + t26918 * t27383;
t26466 = t26903 * t27387 - t26917 * t27383;
t26465 = t26902 * t27387 + t26914 * t27383;
t26464 = t26901 * t27387 - t26913 * t27383;
t26461 = -t26882 * t27383 + t26898 * t27387;
t26460 = t26881 * t27383 + t26897 * t27387;
t26457 = -t26880 * t27383 + t26894 * t27387;
t26456 = t26879 * t27383 + t26893 * t27387;
t26453 = -t26878 * t27383 + t26890 * t27387;
t26452 = t26877 * t27383 + t26889 * t27387;
t26445 = t26882 * t27387 + t26898 * t27383;
t26444 = t26881 * t27387 - t26897 * t27383;
t26443 = t26880 * t27387 + t26894 * t27383;
t26442 = t26879 * t27387 - t26893 * t27383;
t26441 = t26878 * t27387 + t26890 * t27383;
t26440 = t26877 * t27387 - t26889 * t27383;
t26398 = -t26737 + t26738;
t26393 = t26983 * t29022;
t26392 = -t26975 - t26738;
t26391 = -t26975 - t26737;
t26318 = -t26737 - t26738;
t25984 = (t26825 * t27117 - t27120 * t28931) * t27332 + (t26825 * t27120 + t27117 * t28931) * t27320 + t27185 * t28158;
t25983 = (t26824 * t27116 - t27119 * t28935) * t27331 + (t26824 * t27119 + t27116 * t28935) * t27319 + t27184 * t28160;
t25982 = (t26823 * t27115 - t27118 * t28939) * t27330 + (t26823 * t27118 + t27115 * t28939) * t27318 + t27183 * t28162;
t25975 = (t26822 * t27101 - t27104 * t28943) * t27329 + (t26822 * t27104 + t27101 * t28943) * t27317 + t27182 * t28164;
t25974 = (t26821 * t27100 - t27103 * t28947) * t27328 + (t26821 * t27103 + t27100 * t28947) * t27316 + t27181 * t28166;
t25973 = (t26820 * t27099 - t27102 * t28951) * t27327 + (t26820 * t27102 + t27099 * t28951) * t27315 + t27180 * t28168;
t25951 = (t26825 * t28970 + t27117 * t27185) * t27332 + (-t26825 * t28973 + t27120 * t27185) * t27320 - t26825 * t28158;
t25950 = (t26824 * t28971 + t27116 * t27184) * t27331 + (-t26824 * t28974 + t27119 * t27184) * t27319 - t26824 * t28160;
t25949 = (t26823 * t28972 + t27115 * t27183) * t27330 + (-t26823 * t28975 + t27118 * t27183) * t27318 - t26823 * t28162;
t25948 = (t27111 * t29025 - t27114 * t27185) * t27332 + (t27111 * t27185 + t27114 * t29025) * t27320 + t26825 * t28157;
t25947 = (t27110 * t29027 - t27113 * t27184) * t27331 + (t27110 * t27184 + t27113 * t29027) * t27319 + t26824 * t28159;
t25946 = (t27109 * t29029 - t27112 * t27183) * t27330 + (t27109 * t27183 + t27112 * t29029) * t27318 + t26823 * t28161;
t25945 = (t26822 * t28982 + t27101 * t27182) * t27329 + (-t26822 * t28985 + t27104 * t27182) * t27317 - t26822 * t28164;
t25944 = (t26821 * t28983 + t27100 * t27181) * t27328 + (-t26821 * t28986 + t27103 * t27181) * t27316 - t26821 * t28166;
t25943 = (t26820 * t28984 + t27099 * t27180) * t27327 + (-t26820 * t28987 + t27102 * t27180) * t27315 - t26820 * t28168;
t25942 = (t27092 * t29031 - t27098 * t27182) * t27329 + (t27092 * t27182 + t27098 * t29031) * t27317 + t26822 * t28163;
t25941 = (t27091 * t29033 - t27097 * t27181) * t27328 + (t27091 * t27181 + t27097 * t29033) * t27316 + t26821 * t28165;
t25940 = (t27090 * t29035 - t27096 * t27180) * t27327 + (t27090 * t27180 + t27096 * t29035) * t27315 + t26820 * t28167;
t25807 = t25981 * t27921 + t25984 * t27259;
t25806 = t25980 * t27921 + t25983 * t27259;
t25805 = t25979 * t27921 + t25982 * t27259;
t25804 = t25972 * t27921 + t25975 * t27259;
t25803 = t25971 * t27921 + t25974 * t27259;
t25802 = t25970 * t27921 + t25973 * t27259;
t25789 = t25948 * t27920 + t25951 * t27259;
t25788 = t25947 * t27920 + t25950 * t27259;
t25787 = t25946 * t27920 + t25949 * t27259;
t25786 = t25942 * t27920 + t25945 * t27259;
t25785 = t25941 * t27920 + t25944 * t27259;
t25784 = t25940 * t27920 + t25943 * t27259;
t25759 = (pkin(3) * t25981 - t26071 * t28904) * t28737 + t25984 * t27204;
t25758 = (pkin(3) * t25980 - t26070 * t28905) * t28737 + t25983 * t27203;
t25757 = (pkin(3) * t25979 - t26069 * t28906) * t28737 + t25982 * t27202;
t25750 = (t25981 * t27218 - t26071 * t29321) * t27389 + t25984 * t29322;
t25749 = (t25980 * t27217 - t26070 * t29321) * t27389 + t25983 * t29323;
t25748 = (t25979 * t27216 - t26069 * t29321) * t27389 + t25982 * t29324;
t25741 = (pkin(3) * t25972 - t26068 * t28910) * t28737 + t25975 * t27195;
t25740 = (pkin(3) * t25971 - t26067 * t28911) * t28737 + t25974 * t27194;
t25739 = (pkin(3) * t25970 - t26066 * t28912) * t28737 + t25973 * t27193;
t25738 = (t25972 * t27215 - t26068 * t29321) * t27389 + t25975 * t29325;
t25737 = (t25971 * t27214 - t26067 * t29321) * t27389 + t25974 * t29326;
t25736 = (t25970 * t27213 - t26066 * t29321) * t27389 + t25973 * t29327;
t25735 = (t27338 * t27849 + (t27338 * t28151 + t27365 * t27623) * t27449 - t27709 * t26643) * t27357 + (-t27365 * t27818 - (-t26469 * t27320 + t26485 * t27332) * t27591) * t27364 - t26485 * t28225 + t26469 * t28249 + t26643 * t28174;
t25733 = (t27326 * t27849 + (t27326 * t28151 + t27363 * t27623) * t27449 - t27709 * t26642) * t27357 + (-t27363 * t27818 - (t26468 * t27320 + t26484 * t27332) * t27591) * t27364 - t26484 * t28225 - t26468 * t28249 + t26642 * t28174;
t25731 = (t27337 * t27850 + (t27337 * t28152 + t27365 * t27624) * t27448 - t27710 * t26641) * t27356 + (-t27365 * t27820 - (-t26467 * t27319 + t26481 * t27331) * t27590) * t27364 - t26481 * t28227 + t26467 * t28251 + t26641 * t28180;
t25729 = (t27325 * t27850 + (t27325 * t28152 + t27363 * t27624) * t27448 - t27710 * t26640) * t27356 + (-t27363 * t27820 - (t26466 * t27319 + t26480 * t27331) * t27590) * t27364 - t26480 * t28227 - t26466 * t28251 + t26640 * t28180;
t25727 = (t27336 * t27851 + (t27336 * t28153 + t27365 * t27625) * t27447 - t27711 * t26639) * t27355 + (-t27365 * t27822 - (-t26465 * t27318 + t26477 * t27330) * t27589) * t27364 - t26477 * t28229 + t26465 * t28253 + t26639 * t28186;
t25725 = (t27324 * t27851 + (t27324 * t28153 + t27363 * t27625) * t27447 - t27711 * t26638) * t27355 + (-t27363 * t27822 - (t26464 * t27318 + t26476 * t27330) * t27589) * t27364 - t26476 * t28229 - t26464 * t28253 + t26638 * t28186;
t25720 = (t27335 * t27852 + (t27335 * t28154 + t27365 * t27626) * t27446 - t27715 * t26637) * t27354 + (-t27365 * t27824 - (-t26445 * t27317 + t26461 * t27329) * t27588) * t27364 - t26461 * t28231 + t26445 * t28255 + t26637 * t28192;
t25718 = (t27323 * t27852 + (t27323 * t28154 + t27363 * t27626) * t27446 - t27715 * t26636) * t27354 + (-t27363 * t27824 - (t26444 * t27317 + t26460 * t27329) * t27588) * t27364 - t26460 * t28231 - t26444 * t28255 + t26636 * t28192;
t25716 = (t27334 * t27853 + (t27334 * t28155 + t27365 * t27627) * t27445 - t27716 * t26635) * t27353 + (-t27365 * t27826 - (-t26443 * t27316 + t26457 * t27328) * t27587) * t27364 - t26457 * t28233 + t26443 * t28257 + t26635 * t28198;
t25714 = (t27322 * t27853 + (t27322 * t28155 + t27363 * t27627) * t27445 - t27716 * t26634) * t27353 + (-t27363 * t27826 - (t26442 * t27316 + t26456 * t27328) * t27587) * t27364 - t26456 * t28233 - t26442 * t28257 + t26634 * t28198;
t25712 = (t27333 * t27854 + (t27333 * t28156 + t27365 * t27628) * t27444 - t27717 * t26633) * t27352 + (-t27365 * t27828 - (-t26441 * t27315 + t26453 * t27327) * t27586) * t27364 - t26453 * t28235 + t26441 * t28259 + t26633 * t28204;
t25710 = (t27321 * t27854 + (t27321 * t28156 + t27363 * t27628) * t27444 - t27717 * t26632) * t27352 + (-t27363 * t27828 - (t26440 * t27315 + t26452 * t27327) * t27586) * t27364 - t26452 * t28235 - t26440 * t28259 + t26632 * t28204;
t25705 = -(pkin(3) * t25948 + t26053 * t28904) * t28737 + t25951 * t27204;
t25704 = -(pkin(3) * t25947 + t26052 * t28905) * t28737 + t25950 * t27203;
t25703 = -(pkin(3) * t25946 + t26051 * t28906) * t28737 + t25949 * t27202;
t25702 = (-t25948 * t27218 - t26053 * t29321) * t27389 + t25951 * t29322;
t25701 = (-t25947 * t27217 - t26052 * t29321) * t27389 + t25950 * t29323;
t25700 = (-t25946 * t27216 - t26051 * t29321) * t27389 + t25949 * t29324;
t25699 = -(pkin(3) * t25942 + t26050 * t28910) * t28737 + t25945 * t27195;
t25698 = -(pkin(3) * t25941 + t26049 * t28911) * t28737 + t25944 * t27194;
t25697 = -(pkin(3) * t25940 + t26048 * t28912) * t28737 + t25943 * t27193;
t25696 = (-t25942 * t27215 - t26050 * t29321) * t27389 + t25945 * t29325;
t25695 = (-t25941 * t27214 - t26049 * t29321) * t27389 + t25944 * t29326;
t25694 = (-t25940 * t27213 - t26048 * t29321) * t27389 + t25943 * t29327;
t25645 = ((-t26691 * t28931 - t26694 * t26825) * t27332 + (t26691 * t26825 - t26694 * t28931) * t27320 + t26949 * t28930) * t27427 + ((t25981 * t28904 + t29334) * t27369 - t29334) * t27313;
t25644 = ((-t26690 * t28935 - t26693 * t26824) * t27331 + (t26690 * t26824 - t26693 * t28935) * t27319 + t26947 * t28934) * t27425 + ((t25980 * t28905 + t29335) * t27369 - t29335) * t27313;
t25643 = ((-t26689 * t28939 - t26692 * t26823) * t27330 + (t26689 * t26823 - t26692 * t28939) * t27318 + t26945 * t28938) * t27423 + ((t25979 * t28906 + t29336) * t27369 - t29336) * t27313;
t25642 = ((-t26676 * t28943 - t26679 * t26822) * t27329 + (t26676 * t26822 - t26679 * t28943) * t27317 + t26937 * t28942) * t27409 + ((t25972 * t28910 + t29337) * t27369 - t29337) * t27313;
t25641 = ((-t26675 * t28947 - t26678 * t26821) * t27328 + (t26675 * t26821 - t26678 * t28947) * t27316 + t26935 * t28946) * t27407 + ((t25971 * t28911 + t29338) * t27369 - t29338) * t27313;
t25640 = ((-t26674 * t28951 - t26677 * t26820) * t27327 + (t26674 * t26820 - t26677 * t28951) * t27315 + t26933 * t28950) * t27405 + ((t25970 * t28912 + t29339) * t27369 - t29339) * t27313;
t25627 = (-t25948 * t29321 + t28289) * t27369 - t28289 + (-t26727 * t29025 + t26730 * t27185) * t27332 + (-t26727 * t27185 - t26730 * t29025) * t27320 + t26956 * t29024;
t25626 = (-t25947 * t29321 + t28290) * t27369 - t28290 + (-t26726 * t29027 + t26729 * t27184) * t27331 + (-t26726 * t27184 - t26729 * t29027) * t27319 + t26955 * t29026;
t25625 = (-t25946 * t29321 + t28291) * t27369 - t28291 + (-t26725 * t29029 + t26728 * t27183) * t27330 + (-t26725 * t27183 - t26728 * t29029) * t27318 + t26954 * t29028;
t25624 = (-t25942 * t29321 + t28292) * t27369 - t28292 + (-t26721 * t29031 + t26724 * t27182) * t27329 + (-t26721 * t27182 - t26724 * t29031) * t27317 + t26944 * t29030;
t25623 = (-t25941 * t29321 + t28293) * t27369 - t28293 + (-t26720 * t29033 + t26723 * t27181) * t27328 + (-t26720 * t27181 - t26723 * t29033) * t27316 + t26943 * t29032;
t25622 = (-t25940 * t29321 + t28294) * t27369 - t28294 + (-t26719 * t29035 + t26722 * t27180) * t27327 + (-t26719 * t27180 - t26722 * t29035) * t27315 + t26942 * t29034;
t25621 = ((-t26691 * t29025 + t26694 * t27185) * t27332 + (-t26691 * t27185 - t26694 * t29025) * t27320 + t26949 * t29024) * t27427 + ((t25948 * t28904 - t29340) * t27369 + t29340) * t27313;
t25620 = ((-t26690 * t29027 + t26693 * t27184) * t27331 + (-t26690 * t27184 - t26693 * t29027) * t27319 + t26947 * t29026) * t27425 + ((t25947 * t28905 - t29341) * t27369 + t29341) * t27313;
t25619 = ((-t26689 * t29029 + t26692 * t27183) * t27330 + (-t26689 * t27183 - t26692 * t29029) * t27318 + t26945 * t29028) * t27423 + ((t25946 * t28906 - t29342) * t27369 + t29342) * t27313;
t25618 = ((-t26676 * t29031 + t26679 * t27182) * t27329 + (-t26676 * t27182 - t26679 * t29031) * t27317 + t26937 * t29030) * t27409 + ((t25942 * t28910 - t29343) * t27369 + t29343) * t27313;
t25617 = ((-t26675 * t29033 + t26678 * t27181) * t27328 + (-t26675 * t27181 - t26678 * t29033) * t27316 + t26935 * t29032) * t27407 + ((t25941 * t28911 - t29344) * t27369 + t29344) * t27313;
t25616 = ((-t26674 * t29035 + t26677 * t27180) * t27327 + (-t26674 * t27180 - t26677 * t29035) * t27315 + t26933 * t29034) * t27405 + ((t25940 * t28912 - t29345) * t27369 + t29345) * t27313;
t25513 = (-t25735 * t28745 + t27559 * t28621) * t27259 + ((-t25735 * t28915 + t27467) * t27433 - t29489 * t27360) * pkin(3) + (-t25735 * t28922 + (((-t28833 * t29489 - t28360) * t28543 + t27559) * pkin(3) + t27427 * t27467 + t29489 * t29346) * t27384) * pkin(9);
t25512 = (-t25733 * t28745 + t27560 * t28621) * t27259 + ((-t25733 * t28915 + t27468) * t27433 - t29488 * t27360) * pkin(3) + (-t25733 * t28922 + (((-t28833 * t29488 - t28361) * t28543 + t27560) * pkin(3) + t27427 * t27468 + t29488 * t29346) * t27384) * pkin(9);
t25511 = (-t25731 * t28746 + t27561 * t28626) * t27259 + ((-t25731 * t28916 + t27469) * t27431 - t29487 * t27359) * pkin(3) + (-t25731 * t28923 + (((-t28833 * t29487 - t28362) * t28544 + t27561) * pkin(3) + t27425 * t27469 + t29487 * t29347) * t27384) * pkin(9);
t25510 = (-t25729 * t28746 + t27562 * t28626) * t27259 + ((-t25729 * t28916 + t27470) * t27431 - t29486 * t27359) * pkin(3) + (-t25729 * t28923 + (((-t28833 * t29486 - t28363) * t28544 + t27562) * pkin(3) + t27425 * t27470 + t29486 * t29347) * t27384) * pkin(9);
t25509 = (-t25727 * t28747 + t27563 * t28631) * t27259 + ((-t25727 * t28917 + t27471) * t27429 - t29485 * t27358) * pkin(3) + (-t25727 * t28924 + (((-t28833 * t29485 - t28364) * t28545 + t27563) * pkin(3) + t27423 * t27471 + t29485 * t29348) * t27384) * pkin(9);
t25508 = (-t25725 * t28747 + t27564 * t28631) * t27259 + ((-t25725 * t28917 + t27472) * t27429 - t29484 * t27358) * pkin(3) + (-t25725 * t28924 + (((-t28833 * t29484 - t28365) * t28545 + t27564) * pkin(3) + t27423 * t27472 + t29484 * t29348) * t27384) * pkin(9);
t25507 = (-t25720 * t28748 + t27565 * t28638) * t27259 + ((-t25720 * t28918 + t27473) * t27415 - t29483 * t27345) * pkin(3) + (-t25720 * t28925 + (((-t28833 * t29483 - t28366) * t28546 + t27565) * pkin(3) + t27409 * t27473 + t29483 * t29349) * t27384) * pkin(9);
t25506 = (-t25718 * t28748 + t27566 * t28638) * t27259 + ((-t25718 * t28918 + t27474) * t27415 - t29482 * t27345) * pkin(3) + (-t25718 * t28925 + (((-t28833 * t29482 - t28367) * t28546 + t27566) * pkin(3) + t27409 * t27474 + t29482 * t29349) * t27384) * pkin(9);
t25505 = (-t25716 * t28749 + t27567 * t28642) * t27259 + ((-t25716 * t28919 + t27475) * t27413 - t29481 * t27344) * pkin(3) + (-t25716 * t28926 + (((-t28833 * t29481 - t28368) * t28547 + t27567) * pkin(3) + t27407 * t27475 + t29481 * t29350) * t27384) * pkin(9);
t25504 = (-t25714 * t28749 + t27568 * t28642) * t27259 + ((-t25714 * t28919 + t27476) * t27413 - t29480 * t27344) * pkin(3) + (-t25714 * t28926 + (((-t28833 * t29480 - t28369) * t28547 + t27568) * pkin(3) + t27407 * t27476 + t29480 * t29350) * t27384) * pkin(9);
t25503 = (-t25712 * t28750 + t27569 * t28646) * t27259 + ((-t25712 * t28920 + t27477) * t27411 - t29479 * t27343) * pkin(3) + (-t25712 * t28927 + (((-t28833 * t29479 - t28370) * t28548 + t27569) * pkin(3) + t27405 * t27477 + t29479 * t29351) * t27384) * pkin(9);
t25502 = (-t25710 * t28750 + t27570 * t28646) * t27259 + ((-t25710 * t28920 + t27478) * t27411 - t29478 * t27343) * pkin(3) + (-t25710 * t28927 + (((-t28833 * t29478 - t28371) * t28548 + t27570) * pkin(3) + t27405 * t27478 + t29478 * t29351) * t27384) * pkin(9);
t25474 = t28102 + t29223 / 0.2e1;
t25473 = t28103 + t29224 / 0.2e1;
t25472 = t28104 + t29225 / 0.2e1;
t25471 = t28096 / 0.2e1 + t29253;
t25470 = t28097 / 0.2e1 + t29254;
t25469 = t28098 / 0.2e1 + t29255;
t25465 = t28105 + t29229 / 0.2e1;
t25464 = t28106 + t29230 / 0.2e1;
t25463 = t28107 + t29231 / 0.2e1;
t25462 = t28099 / 0.2e1 + t29256;
t25461 = t28100 / 0.2e1 + t29257;
t25460 = t28101 / 0.2e1 + t29258;
t25459 = (((-t25789 * t27363 + t25807 * t27365) * t27338 + (t25789 * t27365 + t25807 * t27363) * t27326) * t27385 + ((-t26053 * t27363 + t26071 * t27365) * t27338 + (t26053 * t27365 + t26071 * t27363) * t27326) * t27736) * t27381 + (((-t25702 * t27363 + t25750 * t27365) * t27338 + t27326 * (t25702 * t27365 + t25750 * t27363)) * t27385 + (-t27363 * t25627 - t27365 * t27479) * t27338 + (t25627 * t27365 - t27363 * t27479) * t27326) * t27433 + ((-t25705 * t27363 + t25759 * t27365) * t27338 + (t25705 * t27365 + t25759 * t27363) * t27326) * t29297 + (t25621 * t27363 + t25645 * t27365) * t27338 - t27326 * (t25621 * t27365 - t25645 * t27363);
t25458 = (((-t25788 * t27363 + t25806 * t27365) * t27337 + t27325 * (t25788 * t27365 + t25806 * t27363)) * t27385 + ((-t26052 * t27363 + t26070 * t27365) * t27337 + (t26052 * t27365 + t26070 * t27363) * t27325) * t27736) * t27380 + (((-t25701 * t27363 + t25749 * t27365) * t27337 + t27325 * (t25701 * t27365 + t25749 * t27363)) * t27385 + (-t27363 * t25626 - t27365 * t27480) * t27337 + (t25626 * t27365 - t27363 * t27480) * t27325) * t27431 + ((-t25704 * t27363 + t25758 * t27365) * t27337 + (t25704 * t27365 + t25758 * t27363) * t27325) * t29297 + (t25620 * t27363 + t25644 * t27365) * t27337 - t27325 * (t25620 * t27365 - t25644 * t27363);
t25457 = (((-t25787 * t27363 + t25805 * t27365) * t27336 + t27324 * (t25787 * t27365 + t25805 * t27363)) * t27385 + ((-t26051 * t27363 + t26069 * t27365) * t27336 + (t26051 * t27365 + t26069 * t27363) * t27324) * t27736) * t27379 + (((-t25700 * t27363 + t25748 * t27365) * t27336 + t27324 * (t25700 * t27365 + t25748 * t27363)) * t27385 + (-t27363 * t25625 - t27365 * t27481) * t27336 + (t25625 * t27365 - t27363 * t27481) * t27324) * t27429 + ((-t25703 * t27363 + t25757 * t27365) * t27336 + (t25703 * t27365 + t25757 * t27363) * t27324) * t29297 + (t25619 * t27363 + t25643 * t27365) * t27336 - t27324 * (t25619 * t27365 - t25643 * t27363);
t25456 = (((-t25786 * t27363 + t25804 * t27365) * t27335 + t27323 * (t25786 * t27365 + t25804 * t27363)) * t27385 + ((-t26050 * t27363 + t26068 * t27365) * t27335 + (t26050 * t27365 + t26068 * t27363) * t27323) * t27736) * t27375 + (((-t25696 * t27363 + t25738 * t27365) * t27335 + t27323 * (t25696 * t27365 + t25738 * t27363)) * t27385 + (-t27363 * t25624 - t27365 * t27482) * t27335 + (t25624 * t27365 - t27363 * t27482) * t27323) * t27415 + ((-t25699 * t27363 + t25741 * t27365) * t27335 + t27323 * (t25699 * t27365 + t25741 * t27363)) * t29297 + (t25618 * t27363 + t25642 * t27365) * t27335 - (t25618 * t27365 - t25642 * t27363) * t27323;
t25455 = (((-t25785 * t27363 + t25803 * t27365) * t27334 + t27322 * (t25785 * t27365 + t25803 * t27363)) * t27385 + ((-t26049 * t27363 + t26067 * t27365) * t27334 + (t26049 * t27365 + t26067 * t27363) * t27322) * t27736) * t27374 + (((-t25695 * t27363 + t25737 * t27365) * t27334 + t27322 * (t25695 * t27365 + t25737 * t27363)) * t27385 + (-t27363 * t25623 - t27365 * t27483) * t27334 + (t25623 * t27365 - t27363 * t27483) * t27322) * t27413 + ((-t25698 * t27363 + t25740 * t27365) * t27334 + t27322 * (t25698 * t27365 + t25740 * t27363)) * t29297 + (t25617 * t27363 + t25641 * t27365) * t27334 - (t25617 * t27365 - t25641 * t27363) * t27322;
t25454 = (((-t25784 * t27363 + t25802 * t27365) * t27333 + t27321 * (t25784 * t27365 + t25802 * t27363)) * t27385 + ((-t26048 * t27363 + t26066 * t27365) * t27333 + (t26048 * t27365 + t26066 * t27363) * t27321) * t27736) * t27373 + (((-t25694 * t27363 + t25736 * t27365) * t27333 + t27321 * (t25694 * t27365 + t25736 * t27363)) * t27385 + (-t27363 * t25622 - t27365 * t27484) * t27333 + (t25622 * t27365 - t27363 * t27484) * t27321) * t27411 + ((-t25697 * t27363 + t25739 * t27365) * t27333 + t27321 * (t25697 * t27365 + t25739 * t27363)) * t29297 + (t25616 * t27363 + t25640 * t27365) * t27333 - (t25616 * t27365 - t25640 * t27363) * t27321;
t25453 = (-0.2e1 * t27381 + 0.1e1) * t25489;
t25452 = (-0.2e1 * t27380 + 0.1e1) * t25488;
t25451 = (-0.2e1 * t27379 + 0.1e1) * t25487;
t25450 = (-0.2e1 * t27375 + 0.1e1) * t25483;
t25449 = (-0.2e1 * t27374 + 0.1e1) * t25482;
t25448 = (-0.2e1 * t27373 + 0.1e1) * t25481;
t25441 = -pkin(8) * t25474 * t28708 + t25471 * t29346;
t25440 = -pkin(8) * t25472 * t28712 + t25469 * t29348;
t25439 = t25471 * t27360 + t25474 * t28474;
t25438 = t25470 * t27359 + t25473 * t28475;
t25437 = t25469 * t27358 + t25472 * t28476;
t25436 = -pkin(8) * t25473 * t28710 + t25470 * t29347;
t25429 = -pkin(8) * t25464 * t28719 + t25461 * t29350;
t25428 = -pkin(8) * t25463 * t28721 + t25460 * t29351;
t25427 = -pkin(8) * t25465 * t28717 + t25462 * t29349;
t25426 = t25462 * t27345 + t25465 * t28477;
t25425 = t25461 * t27344 + t25464 * t28478;
t25424 = t25460 * t27343 + t25463 * t28479;
t25341 = t25378 + 0.2e1 * t28480;
t25339 = t25377 + 0.2e1 * t28481;
t25337 = t25376 + 0.2e1 * t28482;
t25332 = t25372 + 0.2e1 * t28483;
t25330 = t25371 + 0.2e1 * t28484;
t25328 = t25370 + 0.2e1 * t28485;
t25303 = (-t28423 + (-0.2e1 * t25369 - t29259) * pkin(2)) * t27427 - t27433 * (t25341 * t27389 + t25387 * t29305);
t25302 = (-t28426 + (-0.2e1 * t25368 - t29260) * pkin(2)) * t27425 - t27431 * (t25339 * t27389 + t25386 * t29305);
t25301 = (-t28429 + (-0.2e1 * t25367 - t29261) * pkin(2)) * t27423 - t27429 * (t25337 * t27389 + t25385 * t29305);
t25300 = (-t25341 * t27427 + t25387 * t29346) * t27389 + (t28423 + 0.2e1 * t29352) * t27433 - pkin(8) * t28417;
t25299 = (-t25339 * t27425 + t25386 * t29347) * t27389 + (t28426 + 0.2e1 * t29353) * t27431 - pkin(8) * t28418;
t25298 = (-t25337 * t27423 + t25385 * t29348) * t27389 + (t28429 + 0.2e1 * t29354) * t27429 - pkin(8) * t28419;
t25297 = (-t28432 + (-0.2e1 * t25366 - t29262) * pkin(2)) * t27409 - t27415 * (t25332 * t27389 + t25384 * t29305);
t25296 = (-t28435 + (-0.2e1 * t25365 - t29263) * pkin(2)) * t27407 - t27413 * (t25330 * t27389 + t25383 * t29305);
t25295 = (-t28438 + (-0.2e1 * t25364 - t29264) * pkin(2)) * t27405 - t27411 * (t25328 * t27389 + t25382 * t29305);
t25294 = (-t25332 * t27409 + t25384 * t29349) * t27389 + (t28432 + 0.2e1 * t29355) * t27415 - pkin(8) * t28420;
t25293 = (-t25330 * t27407 + t25383 * t29350) * t27389 + (t28435 + 0.2e1 * t29356) * t27413 - pkin(8) * t28421;
t25292 = (-t25328 * t27405 + t25382 * t29351) * t27389 + (t28438 + 0.2e1 * t29357) * t27411 - pkin(8) * t28422;
t1 = [(t25373 * t29210 + t25374 * t29209 + t25375 * t29208 + t25379 * t29207 + t25380 * t29206 + t25381 * t29205) * MDP(1) + (t25364 * t28359 + t25365 * t28358 + t25366 * t28357 + t25367 * t28356 + t25368 * t28355 + t25369 * t28354) * MDP(2) + (t25592 * t27557 + t25593 * t27555 + t25594 * t27553 + t25595 * t27551 + t25596 * t27549 + t25597 * t27547 + t27412 * t27896 + t27414 * t27895 + t27416 * t27894 + t27430 * t27893 + t27432 * t27892 + t27434 * t27891) * t29294 + (t25592 * t27558 + t25593 * t27556 + t25594 * t27554 + t25595 * t27552 + t25596 * t27550 + t25597 * t27548 - t27406 * t27896 - t27408 * t27895 - t27410 * t27894 - t27424 * t27893 - t27426 * t27892 - t27428 * t27891) * t29293 + ((t27427 * t27692 + (t25869 * t27670 + t29278) * t29169) * t27357 + (t27425 * t27694 + (t25867 * t27671 + t29280) * t29170) * t27356 + (t27423 * t27696 + (t25865 * t27672 + t29282) * t29171) * t27355 + (t27409 * t27698 + (t25860 * t27673 + t29284) * t29172) * t27354 + (t27407 * t27700 + (t25858 * t27674 + t29286) * t29173) * t27353 + (t27405 * t27702 + (t25856 * t27675 + t29288) * t29174) * t27352) * t29292 + ((-t25453 * t29163 + (t25869 * t27774 + t28032) * t29169) * t27357 + (-t25452 * t29164 + (t25867 * t27775 + t28033) * t29170) * t27356 + (-t25451 * t29165 + (t25865 * t27776 + t28034) * t29171) * t27355 + (-t25450 * t29166 + (t25860 * t27777 + t28035) * t29172) * t27354 + (-t25449 * t29167 + (t25858 * t27778 + t28036) * t29173) * t27353 + (-t25448 * t29168 + (t25856 * t27779 + t28037) * t29174) * t27352) * t29291 + ((-t25369 * t28337 + t27574 * t29169) * t27357 + (-t25368 * t28340 + t27576 * t29170) * t27356 + (-t25367 * t28343 + t27578 * t29171) * t27355 + (-t25366 * t28346 + t27580 * t29172) * t27354 + (-t25365 * t28349 + t27582 * t29173) * t27353 + (-t25364 * t28352 + t27584 * t29174) * t27352 + (t27352 * t27702 + t27353 * t27700 + t27354 * t27698 + t27355 * t27696 + t27356 * t27694 + t27357 * t27692) * t27389) * t29290 + ((-t25369 * t28336 + t27573 * t29169) * t27357 + (-t25368 * t28339 + t27575 * t29170) * t27356 + (-t25367 * t28342 + t27577 * t29171) * t27355 + (-t25366 * t28345 + t27579 * t29172) * t27354 + (-t25365 * t28348 + t27581 * t29173) * t27353 + (-t25364 * t28351 + t27583 * t29174) * t27352 + (-t25481 * t27352 * t28352 - t25482 * t27353 * t28349 - t25483 * t27354 * t28346 - t25487 * t27355 * t28343 - t25488 * t27356 * t28340 - t25489 * t27357 * t28337) * t27389) * t29289 + (-t25350 * t28353 - t25352 * t28350 - t25354 * t28347 - t25359 * t28344 - t25361 * t28341 - t25363 * t28338 + (t25350 * t28359 + t25352 * t28358 + t25354 * t28357 + t25359 * t28356 + t25361 * t28355 + t25363 * t28354) * t27389) * MDP(9) + (t25597 * t28045 + t25596 * t28047 + t25595 * t28049 + t25594 * t28051 + t25593 * t28053 + t25592 * t28055 + (-t27757 * t29163 + (t25439 * t28519 + t25300) * t29169) * t27357 + (-t27759 * t29164 + (t25438 * t28521 + t25299) * t29170) * t27356 + (-t27761 * t29165 + (t25437 * t28523 + t25298) * t29171) * t27355 + (-t27763 * t29166 + (t25426 * t28525 + t25294) * t29172) * t27354 + (-t27765 * t29167 + (t25425 * t28527 + t25293) * t29173) * t27353 + (-t27767 * t29168 + (t25424 * t28529 + t25292) * t29174) * t27352) * MDP(10) + (t25597 * t28046 + t25596 * t28048 + t25595 * t28050 + t25594 * t28052 + t25593 * t28054 + t25592 * t28056 + (-t27756 * t29163 + (t25441 * t28519 + t25303) * t29169) * t27357 + (-t27758 * t29164 + (t25436 * t28521 + t25302) * t29170) * t27356 + (-t27760 * t29165 + (t25440 * t28523 + t25301) * t29171) * t27355 + (-t27762 * t29166 + (t25427 * t28525 + t25297) * t29172) * t27354 + (-t27764 * t29167 + (t25429 * t28527 + t25296) * t29173) * t27353 + (-t27766 * t29168 + (t25428 * t28529 + t25295) * t29174) * t27352) * MDP(11) + (t26391 * t28043 - t28794 + t26760 + (-t28260 + t28309) * t27361) * MDP(18) + (-t26392 * t28796 + t27503 + t28578) * MDP(19) + (t27362 * t26318 + t26630 + (t29048 + (t28041 + t29020) * t27229) * t27364) * MDP(20); (t25373 * t29222 + t25374 * t29220 + t25375 * t29218 + t25379 * t29216 + t25380 * t29214 + t25381 * t29212) * MDP(1) + (t25364 * t29183 + t25365 * t29182 + t25366 * t29181 + t25367 * t29177 + t25368 * t29176 + t25369 * t29175) * MDP(2) + (t25562 * t27557 + t25564 * t27555 + t25566 * t27553 + t25568 * t27551 + t25570 * t27549 + t25572 * t27547 + t25745 * t28439 + t25746 * t28436 + t25747 * t28433 + t25754 * t28430 + t25755 * t28427 + t25756 * t28424) * t29294 + (t25562 * t27558 + t25564 * t27556 + t25566 * t27554 + t25568 * t27552 + t25570 * t27550 + t25572 * t27548 - t25745 * t28440 - t25746 * t28437 - t25747 * t28434 - t25754 * t28431 - t25755 * t28428 - t25756 * t28425) * t29293 + (t25745 * t27495 + t25746 * t27493 + t25747 * t27491 + t25754 * t27489 + t25755 * t27487 + t25756 * t27485 - t25955 * t27701 - t25956 * t27699 - t25957 * t27697 - t25964 * t27695 - t25965 * t27693 - t25966 * t27691) * t29292 + (t25448 * t29161 + t25449 * t29157 + t25450 * t29153 + t25451 * t29149 + t25452 * t29145 + t25453 * t29141 + t25745 * t27496 + t25746 * t27494 + t25747 * t27492 + t25754 * t27490 + t25755 * t27488 + t25756 * t27486) * t29291 + (t25955 * t28452 + t25956 * t28450 + t25957 * t28448 + t25964 * t28446 + t25965 * t28444 + t25966 * t28442 + t25756 * t27523 + t25755 * t27525 + t25754 * t27527 + t25747 * t27529 + t25746 * t27531 + t25745 * t27533 + (-t25955 * t27889 - t25956 * t27887 - t25957 * t27885 - t25964 * t27877 - t25965 * t27875 - t25966 * t27873) * t27389) * t29290 + (t25955 * t28451 + t25956 * t28449 + t25957 * t28447 + t25964 * t28445 + t25965 * t28443 + t25966 * t28441 + t25756 * t27522 + t25755 * t27524 + t25754 * t27526 + t25747 * t27528 + t25746 * t27530 + t25745 * t27532 + (t25955 * t27890 + t25956 * t27888 + t25957 * t27886 + t25964 * t27878 + t25965 * t27876 + t25966 * t27874) * t27389) * t29289 + (t25350 * t29161 + t25352 * t29157 + t25354 * t29153 + t25359 * t29149 + t25361 * t29145 + t25363 * t29141 + (t25350 * t29183 + t25352 * t29182 + t25354 * t29181 + t25359 * t29177 + t25361 * t29176 + t25363 * t29175) * t27389) * MDP(9) + (t25292 * t29183 + t25293 * t29182 + t25294 * t29181 + t25298 * t29177 + t25299 * t29176 + t25300 * t29175 + t25572 * t28045 + t25570 * t28047 + t25568 * t28049 + t25566 * t28051 + t25564 * t28053 + t25562 * t28055 + (t25439 * t28002 + t25966 * t27757) * t25920 + (t25438 * t28004 + t25965 * t27759) * t25918 + (t25437 * t28006 + t25964 * t27761) * t25916 + (t25426 * t28008 + t25957 * t27763) * t25908 + (t25425 * t28010 + t25956 * t27765) * t25906 + (t25424 * t28012 + t25955 * t27767) * t25904) * MDP(10) + (t25295 * t29183 + t25296 * t29182 + t25297 * t29181 + t25301 * t29177 + t25302 * t29176 + t25303 * t29175 + t25572 * t28046 + t25570 * t28048 + t25568 * t28050 + t25566 * t28052 + t25564 * t28054 + t25562 * t28056 + (t25441 * t28002 + t25966 * t27756) * t25920 + (t25436 * t28004 + t25965 * t27758) * t25918 + (t25440 * t28006 + t25964 * t27760) * t25916 + (t25427 * t28008 + t25957 * t27762) * t25908 + (t25429 * t28010 + t25956 * t27764) * t25906 + (t25428 * t28012 + t25955 * t27766) * t25904) * MDP(11) + (t28323 + t26391 * t26983 + t26770 + (-t28301 - t29023) * t27031) * MDP(18) + (t26392 * t26982 - t26393 + (-t28310 + (-t26747 + t29021) * t27363) * t27364) * MDP(19) + (-t26318 * t28784 + t27631 + t28587) * MDP(20); (t25373 * t29221 + t25374 * t29219 + t25375 * t29217 + t25379 * t29215 + t25380 * t29213 + t25381 * t29211) * MDP(1) + (t25364 * t29186 + t25365 * t29185 + t25366 * t29184 + t25367 * t29180 + t25368 * t29179 + t25369 * t29178) * MDP(2) + (t25563 * t27557 + t25565 * t27555 + t25567 * t27553 + t25569 * t27551 + t25571 * t27549 + t25573 * t27547 + t25742 * t28439 + t25743 * t28436 + t25744 * t28433 + t25751 * t28430 + t25752 * t28427 + t25753 * t28424) * t29294 + (t25563 * t27558 + t25565 * t27556 + t25567 * t27554 + t25569 * t27552 + t25571 * t27550 + t25573 * t27548 - t25742 * t28440 - t25743 * t28437 - t25744 * t28434 - t25751 * t28431 - t25752 * t28428 - t25753 * t28425) * t29293 + (t25742 * t27495 + t25743 * t27493 + t25744 * t27491 + t25751 * t27489 + t25752 * t27487 + t25753 * t27485 - t25952 * t27701 - t25953 * t27699 - t25954 * t27697 - t25961 * t27695 - t25962 * t27693 - t25963 * t27691) * t29292 + (t25448 * t29162 + t25449 * t29158 + t25450 * t29154 + t25451 * t29150 + t25452 * t29146 + t25453 * t29142 + t25742 * t27496 + t25743 * t27494 + t25744 * t27492 + t25751 * t27490 + t25752 * t27488 + t25753 * t27486) * t29291 + (t25952 * t28452 + t25953 * t28450 + t25954 * t28448 + t25961 * t28446 + t25962 * t28444 + t25963 * t28442 + t25753 * t27523 + t25752 * t27525 + t25751 * t27527 + t25744 * t27529 + t25743 * t27531 + t25742 * t27533 + (-t25952 * t27889 - t25953 * t27887 - t25954 * t27885 - t25961 * t27877 - t25962 * t27875 - t25963 * t27873) * t27389) * t29290 + (t25952 * t28451 + t25953 * t28449 + t25954 * t28447 + t25961 * t28445 + t25962 * t28443 + t25963 * t28441 + t25753 * t27522 + t25752 * t27524 + t25751 * t27526 + t25744 * t27528 + t25743 * t27530 + t25742 * t27532 + (t25952 * t27890 + t25953 * t27888 + t25954 * t27886 + t25961 * t27878 + t25962 * t27876 + t25963 * t27874) * t27389) * t29289 + (t25350 * t29162 + t25352 * t29158 + t25354 * t29154 + t25359 * t29150 + t25361 * t29146 + t25363 * t29142 + (t25350 * t29186 + t25352 * t29185 + t25354 * t29184 + t25359 * t29180 + t25361 * t29179 + t25363 * t29178) * t27389) * MDP(9) + (t25292 * t29186 + t25293 * t29185 + t25294 * t29184 + t25298 * t29180 + t25299 * t29179 + t25300 * t29178 + t25573 * t28045 + t25571 * t28047 + t25569 * t28049 + t25567 * t28051 + t25565 * t28053 + t25563 * t28055 + (t25439 * t28003 + t25963 * t27757) * t25920 + (t25438 * t28005 + t25962 * t27759) * t25918 + (t25437 * t28007 + t25961 * t27761) * t25916 + (t25426 * t28009 + t25954 * t27763) * t25908 + (t25425 * t28011 + t25953 * t27765) * t25906 + (t25424 * t28013 + t25952 * t27767) * t25904) * MDP(10) + (t25295 * t29186 + t25296 * t29185 + t25297 * t29184 + t25301 * t29180 + t25302 * t29179 + t25303 * t29178 + t25573 * t28046 + t25571 * t28048 + t25569 * t28050 + t25567 * t28052 + t25565 * t28054 + t25563 * t28056 + (t25441 * t28003 + t25963 * t27756) * t25920 + (t25436 * t28005 + t25962 * t27758) * t25918 + (t25440 * t28007 + t25961 * t27760) * t25916 + (t25427 * t28009 + t25954 * t27762) * t25908 + (t25429 * t28011 + t25953 * t27764) * t25906 + (t25428 * t28013 + t25952 * t27766) * t25904) * MDP(11) + (t26391 * t26985 + t27572 + t28577) * MDP(18) + (t26392 * t26984 + t28579 - t29435) * MDP(19) + (t26318 * t28775 + t27630 + t28586) * MDP(20); (t25454 * t29276 + t25455 * t29274 + t25456 * t29272 + t25457 * t29270 + t25458 * t29268 + t25459 * t29266) * MDP(1) + (t25364 * t29240 + t25365 * t29239 + t25366 * t29238 + t25367 * t29237 + t25368 * t29236 + t25369 * t29235) * MDP(2) + (t25454 * t27557 + t25455 * t27555 + t25456 * t27553 + t25457 * t27551 + t25458 * t27549 + t25459 * t27547 + t25538 * t28439 + t25539 * t28436 + t25540 * t28433 + t25541 * t28430 + t25542 * t28427 + t25543 * t28424) * t29294 + (t25454 * t27558 + t25455 * t27556 + t25456 * t27554 + t25457 * t27552 + t25458 * t27550 + t25459 * t27548 - t25538 * t28440 - t25539 * t28437 - t25540 * t28434 - t25541 * t28431 - t25542 * t28428 - t25543 * t28425) * t29293 + (t25538 * t27495 + t25539 * t27493 + t25540 * t27491 + t25541 * t27489 + t25542 * t27487 + t25543 * t27485 - t25598 * t27701 - t25599 * t27697 - t25600 * t27699 - t25601 * t27695 - t25602 * t27693 - t25603 * t27691) * t29292 + (t25448 * t29204 + t25449 * t29202 + t25450 * t29203 + t25451 * t29201 + t25452 * t29200 + t25453 * t29199 + t25538 * t27496 + t25539 * t27494 + t25540 * t27492 + t25541 * t27490 + t25542 * t27488 + t25543 * t27486) * t29291 + (t25598 * t28452 + t25600 * t28450 + t25599 * t28448 + t25601 * t28446 + t25602 * t28444 + t25603 * t28442 + t25543 * t27523 + t25542 * t27525 + t25541 * t27527 + t25540 * t27529 + t25539 * t27531 + t25538 * t27533 + (-t25598 * t27889 - t25599 * t27885 - t25600 * t27887 - t25601 * t27877 - t25602 * t27875 - t25603 * t27873) * t27389) * t29290 + (t25598 * t28451 + t25600 * t28449 + t25599 * t28447 + t25601 * t28445 + t25602 * t28443 + t25603 * t28441 + t25543 * t27522 + t25542 * t27524 + t25541 * t27526 + t25540 * t27528 + t25539 * t27530 + t25538 * t27532 + (t25598 * t27890 + t25599 * t27886 + t25600 * t27888 + t25601 * t27878 + t25602 * t27876 + t25603 * t27874) * t27389) * t29289 + (t25350 * t29204 + t25352 * t29202 + t25354 * t29203 + t25359 * t29201 + t25361 * t29200 + t25363 * t29199 + (t25350 * t29240 + t25352 * t29239 + t25354 * t29238 + t25359 * t29237 + t25361 * t29236 + t25363 * t29235) * t27389) * MDP(9) + (t25292 * t29240 + t25293 * t29239 + t25294 * t29238 + t25298 * t29237 + t25299 * t29236 + t25300 * t29235 + t25459 * t28045 + t25458 * t28047 + t25457 * t28049 + t25456 * t28051 + t25455 * t28053 + t25454 * t28055 + (t25439 * t28014 + t25603 * t27757) * t25920 + (t25438 * t28015 + t25602 * t27759) * t25918 + (t25437 * t28016 + t25601 * t27761) * t25916 + (t25426 * t28017 + t25599 * t27763) * t25908 + (t25425 * t28018 + t25600 * t27765) * t25906 + (t25424 * t28019 + t25598 * t27767) * t25904) * MDP(10) + (t25295 * t29240 + t25296 * t29239 + t25297 * t29238 + t25301 * t29237 + t25302 * t29236 + t25303 * t29235 + t25459 * t28046 + t25458 * t28048 + t25457 * t28050 + t25456 * t28052 + t25455 * t28054 + t25454 * t28056 + (t25441 * t28014 + t25603 * t27756) * t25920 + (t25436 * t28015 + t25602 * t27758) * t25918 + (t25440 * t28016 + t25601 * t27760) * t25916 + (t25427 * t28017 + t25599 * t27762) * t25908 + (t25429 * t28018 + t25600 * t27764) * t25906 + (t25428 * t28019 + t25598 * t27766) * t25904) * MDP(11) + (t26747 * t28043 + (t27029 * t27362 - t27229 * t28796) * t27031) * MDP(12) + (t27362 * t26398 + t26630 + (-t29048 + (-t28041 + t29020) * t27229) * t27364) * MDP(13) + (-t26538 * t28796 - t27503 + t28578) * MDP(14) + (-t26746 * t28796 + (-t27031 * t27362 + t27229 * t28043) * t27029) * MDP(15) + (t26705 * t28043 + t28794 + t26760 + (-t28260 - t28309) * t27361) * MDP(16) + (t27362 * t28614 + (-t27029 * t28563 + t27031 * t27361) * t27229) * t27364 * MDP(17); (t25503 * t29276 + t25505 * t29274 + t25507 * t29272 + t25509 * t29270 + t25511 * t29268 + t25513 * t29266) * MDP(1) + (t25364 * t29250 + t25365 * t29248 + t25366 * t29247 + t25367 * t29245 + t25368 * t29243 + t25369 * t29241) * MDP(2) + (t25503 * t27557 + t25505 * t27555 + t25507 * t27553 + t25509 * t27551 + t25511 * t27549 + t25513 * t27547 + t25519 * t28439 + t25521 * t28436 + t25522 * t28433 + t25527 * t28430 + t25529 * t28427 + t25531 * t28424) * t29294 + (t25503 * t27558 + t25505 * t27556 + t25507 * t27554 + t25509 * t27552 + t25511 * t27550 + t25513 * t27548 - t25519 * t28440 - t25521 * t28437 - t25522 * t28434 - t25527 * t28431 - t25529 * t28428 - t25531 * t28425) * t29293 + (t25519 * t27495 + t25521 * t27493 + t25522 * t27491 + t25527 * t27489 + t25529 * t27487 + t25531 * t27485 - t25671 * t27701 - t25672 * t27697 - t25674 * t27699 - t25676 * t27695 - t25680 * t27693 - t25681 * t27691) * t29292 + (t25448 * t29197 + t25449 * t29194 + t25450 * t29196 + t25451 * t29192 + t25452 * t29188 + t25453 * t29187 + t25519 * t27496 + t25521 * t27494 + t25522 * t27492 + t25527 * t27490 + t25529 * t27488 + t25531 * t27486) * t29291 + (t25671 * t28452 + t25674 * t28450 + t25672 * t28448 + t25676 * t28446 + t25680 * t28444 + t25681 * t28442 + t25531 * t27523 + t25529 * t27525 + t25527 * t27527 + t25522 * t27529 + t25521 * t27531 + t25519 * t27533 + (-t25671 * t27889 - t25672 * t27885 - t25674 * t27887 - t25676 * t27877 - t25680 * t27875 - t25681 * t27873) * t27389) * t29290 + (t25671 * t28451 + t25674 * t28449 + t25672 * t28447 + t25676 * t28445 + t25680 * t28443 + t25681 * t28441 + t25531 * t27522 + t25529 * t27524 + t25527 * t27526 + t25522 * t27528 + t25521 * t27530 + t25519 * t27532 + (t25671 * t27890 + t25672 * t27886 + t25674 * t27888 + t25676 * t27878 + t25680 * t27876 + t25681 * t27874) * t27389) * t29289 + (t25350 * t29197 + t25352 * t29194 + t25354 * t29196 + t25359 * t29192 + t25361 * t29188 + t25363 * t29187 + (t25350 * t29250 + t25352 * t29248 + t25354 * t29247 + t25359 * t29245 + t25361 * t29243 + t25363 * t29241) * t27389) * MDP(9) + (t25292 * t29250 + t25293 * t29248 + t25294 * t29247 + t25298 * t29245 + t25299 * t29243 + t25300 * t29241 + t25513 * t28045 + t25511 * t28047 + t25509 * t28049 + t25507 * t28051 + t25505 * t28053 + t25503 * t28055 + (t25439 * t28020 + t25681 * t27757) * t25920 + (t25438 * t28022 + t25680 * t27759) * t25918 + (t25437 * t28024 + t25676 * t27761) * t25916 + (t25426 * t28026 + t25672 * t27763) * t25908 + (t25425 * t28027 + t25674 * t27765) * t25906 + (t25424 * t28029 + t25671 * t27767) * t25904) * MDP(10) + (t25295 * t29250 + t25296 * t29248 + t25297 * t29247 + t25301 * t29245 + t25302 * t29243 + t25303 * t29241 + t25513 * t28046 + t25511 * t28048 + t25509 * t28050 + t25507 * t28052 + t25505 * t28054 + t25503 * t28056 + (t25441 * t28020 + t25681 * t27756) * t25920 + (t25436 * t28022 + t25680 * t27758) * t25918 + (t25440 * t28024 + t25676 * t27760) * t25916 + (t25427 * t28026 + t25672 * t27762) * t25908 + (t25429 * t28027 + t25674 * t27764) * t25906 + (t25428 * t28029 + t25671 * t27766) * t25904) * MDP(11) + (t26747 * t26983 + (t26982 * t27229 - t27029 * t28784) * t27031) * MDP(12) + (-t26398 * t28784 - t27631 + t28587) * MDP(13) + (t26538 * t26982 - t26393 + (t28310 + (-t26747 - t29021) * t27363) * t27364) * MDP(14) + (t26746 * t26982 + (t26983 * t27229 + t27031 * t28784) * t27029) * MDP(15) + (-t28323 + t26705 * t26983 + t26770 + (-t28301 + t29023) * t27031) * MDP(16) + (-t27363 * t28260 + (-t26982 * t27031 - t26983 * t27029) * t27229) * MDP(17); (t25502 * t29276 + t25504 * t29274 + t25506 * t29272 + t25508 * t29270 + t25510 * t29268 + t25512 * t29266) * MDP(1) + (t25364 * t29251 + t25365 * t29249 + t25366 * t29252 + t25367 * t29246 + t25368 * t29244 + t25369 * t29242) * MDP(2) + (t25502 * t27557 + t25504 * t27555 + t25506 * t27553 + t25508 * t27551 + t25510 * t27549 + t25512 * t27547 + t25517 * t28433 + t25518 * t28439 + t25520 * t28436 + t25526 * t28430 + t25528 * t28427 + t25530 * t28424) * t29294 + (t25502 * t27558 + t25504 * t27556 + t25506 * t27554 + t25508 * t27552 + t25510 * t27550 + t25512 * t27548 - t25517 * t28434 - t25518 * t28440 - t25520 * t28437 - t25526 * t28431 - t25528 * t28428 - t25530 * t28425) * t29293 + (t25517 * t27491 + t25518 * t27495 + t25520 * t27493 + t25526 * t27489 + t25528 * t27487 + t25530 * t27485 - t25670 * t27701 - t25673 * t27699 - t25675 * t27697 - t25677 * t27693 - t25678 * t27691 - t25679 * t27695) * t29292 + (t25448 * t29198 + t25449 * t29195 + t25450 * t29193 + t25451 * t29189 + t25452 * t29191 + t25453 * t29190 + t25517 * t27492 + t25518 * t27496 + t25520 * t27494 + t25526 * t27490 + t25528 * t27488 + t25530 * t27486) * t29291 + (t25670 * t28452 + t25673 * t28450 + t25675 * t28448 + t25679 * t28446 + t25677 * t28444 + t25678 * t28442 + t25530 * t27523 + t25528 * t27525 + t25526 * t27527 + t25520 * t27531 + t25518 * t27533 + t25517 * t27529 + (-t25670 * t27889 - t25673 * t27887 - t25675 * t27885 - t25677 * t27875 - t25678 * t27873 - t25679 * t27877) * t27389) * t29290 + (t25670 * t28451 + t25673 * t28449 + t25675 * t28447 + t25679 * t28445 + t25677 * t28443 + t25678 * t28441 + t25530 * t27522 + t25528 * t27524 + t25526 * t27526 + t25520 * t27530 + t25518 * t27532 + t25517 * t27528 + (t25670 * t27890 + t25673 * t27888 + t25675 * t27886 + t25677 * t27876 + t25678 * t27874 + t25679 * t27878) * t27389) * t29289 + (t25350 * t29198 + t25352 * t29195 + t25354 * t29193 + t25359 * t29189 + t25361 * t29191 + t25363 * t29190 + (t25350 * t29251 + t25352 * t29249 + t25354 * t29252 + t25359 * t29246 + t25361 * t29244 + t25363 * t29242) * t27389) * MDP(9) + (t25292 * t29251 + t25293 * t29249 + t25294 * t29252 + t25298 * t29246 + t25299 * t29244 + t25300 * t29242 + t25512 * t28045 + t25510 * t28047 + t25508 * t28049 + t25506 * t28051 + t25504 * t28053 + t25502 * t28055 + (t25439 * t28021 + t25678 * t27757) * t25920 + (t25438 * t28023 + t25677 * t27759) * t25918 + (t25437 * t28025 + t25679 * t27761) * t25916 + (t25426 * t28031 + t25675 * t27763) * t25908 + (t25425 * t28028 + t25673 * t27765) * t25906 + (t25424 * t28030 + t25670 * t27767) * t25904) * MDP(10) + (t25295 * t29251 + t25296 * t29249 + t25297 * t29252 + t25301 * t29246 + t25302 * t29244 + t25303 * t29242 + t25512 * t28046 + t25510 * t28048 + t25508 * t28050 + t25506 * t28052 + t25504 * t28054 + t25502 * t28056 + (t25441 * t28021 + t25678 * t27756) * t25920 + (t25436 * t28023 + t25677 * t27758) * t25918 + (t25440 * t28025 + t25679 * t27760) * t25916 + (t25427 * t28031 + t25675 * t27762) * t25908 + (t25429 * t28028 + t25673 * t27764) * t25906 + (t25428 * t28030 + t25670 * t27766) * t25904) * MDP(11) + (t26747 * t26985 + (t26984 * t27229 + t27029 * t28775) * t27031) * MDP(12) + (t26398 * t28775 - t27630 + t28586) * MDP(13) + (t26538 * t26984 + t28579 + t29435) * MDP(14) + (t26746 * t26984 + (t26985 * t27229 - t28308) * t27029) * MDP(15) + (t26705 * t26985 - t27572 + t28577) * MDP(16) + (t27365 * t28260 + (-t26984 * t27031 - t26985 * t27029) * t27229) * MDP(17);];
taucX  = t1;
