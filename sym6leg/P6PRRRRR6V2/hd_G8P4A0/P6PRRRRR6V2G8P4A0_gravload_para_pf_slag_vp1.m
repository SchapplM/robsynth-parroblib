% Calculate Gravitation load for parallel robot
% P6PRRRRR6V2G8P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
%
% Output:
% taugX [6x1]
%   forces required to compensate gravitation load
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 04:24
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1(xP, qJ, g, legFrame, ...
  koppelP, pkin, m, rSges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: g has to be [3x1] (double)');
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From gravvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-13 01:33:39
% EndTime: 2020-03-13 01:33:41
% DurationCPUTime: 2.94s
% Computational Cost: add. (24287->1820), mult. (63411->3783), div. (162->30), fcn. (60179->74), ass. (0->1050)
unknown=NaN(6,1);
t1 = pkin(9) * pkin(3);
t2 = sin(pkin(6));
t3 = cos(qJ(2,1));
t4 = cos(pkin(10));
t5 = sin(legFrame(1,3));
t7 = sin(pkin(10));
t8 = cos(legFrame(1,3));
t10 = t4 * t5 + t7 * t8;
t11 = t10 * t3;
t12 = cos(pkin(4));
t14 = sin(qJ(2,1));
t17 = t4 * t8 - t5 * t7;
t18 = t17 * t14;
t19 = t11 * t12 + t18;
t20 = t19 * t2;
t21 = cos(pkin(5));
t25 = cos(pkin(6));
t26 = t25 ^ 2;
t27 = pkin(9) ^ 2;
t29 = pkin(3) ^ 2;
t30 = t26 * t27 - t27 + t29;
t31 = t10 * t14;
t33 = t17 * t3;
t34 = -t12 * t31 + t33;
t37 = sin(pkin(5));
t39 = sin(pkin(4));
t40 = t39 * pkin(3);
t41 = t2 * t40;
t42 = t21 - 0.1e1;
t43 = t42 * pkin(9);
t44 = t21 + 0.1e1;
t50 = cos(legFrame(1,2));
t52 = sin(legFrame(1,2));
t53 = t21 * t3;
t54 = t2 * pkin(3);
t55 = pkin(9) * t54;
t62 = t2 * t12;
t63 = pkin(3) * t62;
t65 = t44 * t43 * t63;
t66 = t37 * t39 * (t55 * t53 - t30 * t14 / 0.2e1) - t65;
t70 = cos(qJ(3,1));
t71 = t70 ^ 2;
t74 = sin(qJ(3,1));
t77 = pkin(9) * t25 + pkin(8);
t84 = pkin(9) * t2 * t74;
t86 = 0.2e1 * t84 + pkin(2);
t90 = t30 * t39;
t92 = t74 * t10 * t90;
t93 = t77 * pkin(3);
t94 = t19 * t93;
t96 = t21 ^ 2;
t98 = t39 * pkin(2);
t100 = t2 * t10 * pkin(9);
t104 = t39 * t3;
t105 = t30 * t74;
t107 = pkin(3) * t12;
t108 = t77 * t107;
t111 = pkin(3) * t14;
t116 = t30 * t12;
t117 = t74 * t116;
t118 = pkin(3) * t3;
t119 = t77 * t39;
t120 = t119 * t118;
t123 = t12 * pkin(2);
t124 = pkin(9) * t2;
t125 = t124 * t123;
t126 = t37 * (t21 * (t104 * t105 + t108) + t86 * t39 * t111) + t96 * (-t117 + t120) + t117 - t125 - t120;
t130 = t10 * t39;
t131 = t77 * t74;
t137 = t74 * pkin(2);
t139 = pkin(9) * t26;
t140 = t137 * t2 + pkin(9) - t139;
t150 = t96 * t2;
t152 = t77 * pkin(9);
t154 = pkin(2) * pkin(3);
t161 = t77 * t12;
t167 = t39 * t14;
t171 = t37 * (t21 * t2 * (t118 * t39 + t161 * t74) + t140 * t167) * pkin(9);
t175 = t96 * (t104 * t131 - t107) * t124;
t176 = t2 * t152;
t178 = pkin(3) * t123;
t180 = t74 * (-t104 * t176 + t178);
t181 = t1 * t62;
t184 = t71 * (t50 * (t37 * (0.2e1 * t1 * t20 * t21 + t30 * t34) + 0.2e1 * t10 * t44 * t43 * t41) - 0.2e1 * t66 * t52) + t70 * (t50 * (t37 * (t21 * (t10 * t40 * t77 - t19 * t30 * t74) + t86 * t34 * pkin(3)) + t96 * (-t92 - t94) + t92 - t100 * t98 + t94) + t52 * t126) + t50 * (t37 * (-t21 * t2 * (pkin(3) * t19 - t130 * t131) + t140 * t34) * pkin(9) - t150 * (t19 * t74 * t77 + t10 * t40) * pkin(9) + t74 * (t130 * t154 + t152 * t20) + t100 * t40) + t52 * (t171 + t175 + t180 + t181);
t185 = -0.2e1 * t71 * t66;
t188 = 0.1e1 / (t126 * t70 + t171 + t175 + t180 + t181 + t185);
t191 = sin(legFrame(1,1));
t194 = cos(legFrame(1,1));
t197 = -g(2) * t191 * t50 + g(3) * t194 * t50 + g(1) * t52;
t198 = m(1) + m(2) + m(3);
t199 = t198 * t197;
t202 = t12 * t33 - t31;
t205 = t37 * pkin(3);
t206 = t39 * t17;
t209 = t12 * t18 + t11;
t215 = t21 * t2;
t217 = t2 * t37;
t218 = t17 * pkin(9);
t224 = t70 * (pkin(3) * t202 * t21 + pkin(9) * t2 * t209 - t205 * t206) + t74 * (pkin(9) * t202 * t215 - t217 * t218 * t39 - pkin(3) * t209);
t226 = t96 * t12;
t228 = 0.2e1 * t55 * t226;
t230 = t39 * t37;
t231 = t1 * t230;
t234 = t30 * t37;
t235 = t234 * t167;
t236 = 0.2e1 * t181;
t239 = t96 * t116;
t240 = t21 * t234;
t244 = t2 * pkin(9) * t37;
t246 = 0.2e1 * t244 * t39 * t111;
t249 = t96 * t119;
t251 = t77 * t37;
t253 = t21 * t251 * t107;
t255 = t37 * t14 * pkin(2);
t257 = -t3 * t77 + t255;
t263 = t96 * t152;
t265 = t37 * t12;
t267 = t21 * t152;
t268 = t267 * t2 * t265;
t273 = t96 * pkin(3);
t274 = t273 * t62;
t276 = t2 * t230;
t282 = (t25 + 0.1e1) * (t25 - 0.1e1) * pkin(9);
t283 = t282 * t37 * t167;
t287 = 0.1e1 / (t71 * (-0.2e1 * t2 * t231 * t53 + t228 + t235 - t236) + t70 * (t74 * (t104 * t240 + t116 - t239 + t246) + t249 * t118 + t253 + t39 * t257 * pkin(3) - t125) + t74 * (t104 * t2 * t263 + t124 * t257 * t39 + t178 + t268) + (pkin(3) * t276 * t53 - t274 - t283 + t63) * pkin(9));
t295 = t37 * (pkin(8) + rSges(3,3)) * m(3);
t296 = m(2) * rSges(2,2);
t297 = t21 * (rSges(3,1) * t74 + rSges(3,2) * t70) * m(3) - t295 + t296;
t300 = t52 * t191;
t305 = t52 * t194;
t310 = g(1) * t8 * t50 + g(2) * (t194 * t5 + t300 * t8) + g(3) * (t191 * t5 - t305 * t8);
t311 = t310 * t7;
t322 = -g(1) * t5 * t50 + g(2) * (t194 * t8 - t300 * t5) + g(3) * (t191 * t8 + t305 * t5);
t324 = -t322 * t4 + t311;
t327 = rSges(3,1) * m(3);
t331 = m(2) * rSges(2,1);
t332 = pkin(2) * m(3);
t333 = -m(3) * rSges(3,2) * t74 + t327 * t70 + t331 + t332;
t338 = t39 * t197;
t351 = t14 * (-t12 * t297 * t324 + t310 * t333 * t4 + t322 * t333 * t7 + t297 * t338) + t3 * (t12 * t324 * t333 + t297 * t310 * t4 + t297 * t322 * t7 - t333 * t338);
t364 = t84 + pkin(2);
t367 = pkin(3) * t21 * t74;
t368 = t367 - t251;
t377 = t70 * (t12 * (t124 * t14 * t21 + t118) * t17 + (t124 * t53 - t111) * t10) + t12 * (-t14 * t368 + t3 * t364) * t17 - t10 * (t14 * t364 + t3 * t368);
t380 = t21 * t77;
t381 = t380 * t205;
t383 = pkin(9) * t2 * pkin(2);
t384 = -t105 * t96 + t105 + t381 - t383;
t386 = t96 * t93;
t387 = t37 * t74;
t388 = t21 * t30;
t390 = t387 * t388 + t386 - t93;
t398 = t124 * t273;
t400 = t267 * t2 * t387;
t402 = (t137 + t124) * pkin(3);
t406 = t21 * t205;
t407 = t131 * t96 - t131 + t406;
t416 = 0.1e1 / (t185 + t70 * (t12 * t384 + t39 * (t111 * t37 * t86 + t3 * t390)) + t12 * (-t398 + t400 + t402) + t39 * (t14 * t140 * t37 + t2 * t3 * t407) * pkin(9));
t418 = rSges(3,1) * t3;
t419 = -t21 * t324;
t421 = t14 * t4;
t422 = t322 * rSges(3,2);
t424 = t14 * t7;
t425 = t310 * rSges(3,2);
t427 = t37 * rSges(3,1);
t436 = -t14 * t310 * t4 - t14 * t322 * t7 + t104 * t197;
t439 = rSges(3,1) * t39;
t442 = rSges(3,2) * t3;
t460 = rSges(3,2) * t37;
t478 = t70 * (t12 * (t197 * t427 + t418 * t419 - t421 * t422 + t424 * t425) + t21 * t436 * rSges(3,1) + t4 * (-t322 * t37 * t439 - t310 * t442) + t7 * (t310 * t37 * t439 - t322 * t442) - t197 * rSges(3,2) * t167) - t74 * (t12 * (-rSges(3,1) * t14 * t311 + rSges(3,1) * t322 * t421 + t197 * t460 + t419 * t442) + t21 * t436 * rSges(3,2) + t4 * (-t230 * t422 + t310 * t418) + t7 * (t230 * t425 + t322 * t418) + t197 * rSges(3,1) * t167);
t481 = cos(qJ(2,2));
t482 = sin(legFrame(2,3));
t484 = cos(legFrame(2,3));
t486 = t4 * t482 + t484 * t7;
t487 = t486 * t481;
t489 = sin(qJ(2,2));
t492 = t4 * t484 - t482 * t7;
t493 = t492 * t489;
t494 = t12 * t487 + t493;
t495 = t494 * t2;
t499 = t486 * t489;
t501 = t492 * t481;
t502 = -t12 * t499 + t501;
t511 = cos(legFrame(2,2));
t513 = sin(legFrame(2,2));
t514 = t21 * t481;
t521 = t37 * t39 * (t55 * t514 - t30 * t489 / 0.2e1) - t65;
t525 = cos(qJ(3,2));
t526 = t525 ^ 2;
t529 = sin(qJ(3,2));
t537 = pkin(9) * t2 * t529;
t539 = 0.2e1 * t537 + pkin(2);
t544 = t529 * t486 * t90;
t545 = t494 * t93;
t549 = t2 * t486 * pkin(9);
t553 = t39 * t481;
t554 = t30 * t529;
t558 = pkin(3) * t489;
t563 = t529 * t116;
t564 = pkin(3) * t481;
t565 = t119 * t564;
t568 = t37 * (t21 * (t553 * t554 + t108) + t539 * t39 * t558) + t96 * (-t563 + t565) + t563 - t125 - t565;
t572 = t486 * t39;
t573 = t77 * t529;
t579 = t529 * pkin(2);
t581 = t2 * t579 + pkin(9) - t139;
t604 = t39 * t489;
t608 = t37 * (t21 * t2 * (t161 * t529 + t39 * t564) + t581 * t604) * pkin(9);
t612 = t96 * (t553 * t573 - t107) * t124;
t615 = t529 * (-t176 * t553 + t178);
t618 = t526 * (t511 * (t37 * (0.2e1 * t1 * t21 * t495 + t30 * t502) + 0.2e1 * t486 * t44 * t43 * t41) - 0.2e1 * t521 * t513) + t525 * (t511 * (t37 * (t21 * (-t30 * t494 * t529 + t40 * t486 * t77) + t539 * t502 * pkin(3)) + t96 * (-t544 - t545) + t544 - t549 * t98 + t545) + t513 * t568) + t511 * (t37 * (-t21 * t2 * (pkin(3) * t494 - t572 * t573) + t581 * t502) * pkin(9) - t150 * (t494 * t529 * t77 + t40 * t486) * pkin(9) + t529 * (t152 * t495 + t154 * t572) + t549 * t40) + t513 * (t608 + t612 + t615 + t181);
t619 = -0.2e1 * t526 * t521;
t622 = 0.1e1 / (t525 * t568 + t181 + t608 + t612 + t615 + t619);
t625 = sin(legFrame(2,1));
t628 = cos(legFrame(2,1));
t631 = -g(2) * t511 * t625 + g(3) * t511 * t628 + g(1) * t513;
t632 = t198 * t631;
t635 = t12 * t501 - t499;
t638 = t39 * t492;
t641 = t12 * t493 + t487;
t648 = t492 * pkin(9);
t654 = t525 * (pkin(3) * t21 * t635 + pkin(9) * t2 * t641 - t205 * t638) + t529 * (pkin(9) * t215 * t635 - t217 * t39 * t648 - pkin(3) * t641);
t659 = t234 * t604;
t665 = 0.2e1 * t244 * t39 * t558;
t670 = t37 * t489 * pkin(2);
t672 = -t481 * t77 + t670;
t686 = t282 * t37 * t604;
t690 = 0.1e1 / (t526 * (-0.2e1 * t2 * t231 * t514 + t228 - t236 + t659) + t525 * (t529 * (t240 * t553 + t116 - t239 + t665) + t249 * t564 + t253 + t39 * t672 * pkin(3) - t125) + t529 * (t124 * t39 * t672 + t2 * t263 * t553 + t178 + t268) + (pkin(3) * t276 * t514 - t274 + t63 - t686) * pkin(9));
t696 = t21 * (rSges(3,1) * t529 + rSges(3,2) * t525) * m(3) - t295 + t296;
t699 = t513 * t625;
t704 = t513 * t628;
t709 = g(1) * t484 * t511 + g(2) * (t482 * t628 + t484 * t699) + g(3) * (t482 * t625 - t484 * t704);
t710 = t709 * t7;
t721 = -g(1) * t482 * t511 + g(2) * (-t482 * t699 + t484 * t628) + g(3) * (t482 * t704 + t484 * t625);
t723 = -t4 * t721 + t710;
t729 = -m(3) * rSges(3,2) * t529 + t327 * t525 + t331 + t332;
t734 = t39 * t631;
t747 = t489 * (-t12 * t696 * t723 + t4 * t709 * t729 + t7 * t721 * t729 + t696 * t734) + t481 * (t12 * t723 * t729 + t4 * t696 * t709 + t696 * t7 * t721 - t729 * t734);
t760 = t537 + pkin(2);
t763 = pkin(3) * t21 * t529;
t764 = t763 - t251;
t773 = t525 * (t12 * (t124 * t21 * t489 + t564) * t492 + (t124 * t514 - t558) * t486) + t12 * (t481 * t760 - t489 * t764) * t492 - t486 * (t481 * t764 + t489 * t760);
t776 = -t554 * t96 + t381 - t383 + t554;
t778 = t37 * t529;
t780 = t388 * t778 + t386 - t93;
t789 = t267 * t2 * t778;
t791 = (t579 + t124) * pkin(3);
t795 = t573 * t96 + t406 - t573;
t804 = 0.1e1 / (t619 + t525 * (t12 * t776 + t39 * (t37 * t539 * t558 + t481 * t780)) + t12 * (-t398 + t789 + t791) + t39 * (t2 * t481 * t795 + t37 * t489 * t581) * pkin(9));
t806 = rSges(3,1) * t481;
t807 = -t21 * t723;
t809 = t489 * t4;
t810 = t721 * rSges(3,2);
t812 = t489 * t7;
t813 = t709 * rSges(3,2);
t823 = -t4 * t489 * t709 - t489 * t7 * t721 + t553 * t631;
t828 = rSges(3,2) * t481;
t863 = t525 * (t12 * (t427 * t631 + t806 * t807 - t809 * t810 + t812 * t813) + t21 * t823 * rSges(3,1) + t4 * (-t37 * t439 * t721 - t709 * t828) + t7 * (t37 * t439 * t709 - t721 * t828) - t631 * rSges(3,2) * t604) - t529 * (t12 * (-rSges(3,1) * t489 * t710 + rSges(3,1) * t721 * t809 + t460 * t631 + t807 * t828) + t21 * t823 * rSges(3,2) + t4 * (-t230 * t810 + t709 * t806) + t7 * (t230 * t813 + t721 * t806) + t631 * rSges(3,1) * t604);
t866 = cos(qJ(2,3));
t867 = sin(legFrame(3,3));
t869 = cos(legFrame(3,3));
t871 = t4 * t867 + t7 * t869;
t872 = t871 * t866;
t874 = sin(qJ(2,3));
t877 = t4 * t869 - t7 * t867;
t878 = t877 * t874;
t879 = t12 * t872 + t878;
t880 = t879 * t2;
t884 = t871 * t874;
t886 = t877 * t866;
t887 = -t12 * t884 + t886;
t896 = cos(legFrame(3,2));
t898 = sin(legFrame(3,2));
t899 = t21 * t866;
t906 = t37 * t39 * (t55 * t899 - t30 * t874 / 0.2e1) - t65;
t910 = cos(qJ(3,3));
t911 = t910 ^ 2;
t914 = sin(qJ(3,3));
t922 = pkin(9) * t2 * t914;
t924 = 0.2e1 * t922 + pkin(2);
t929 = t914 * t871 * t90;
t930 = t879 * t93;
t934 = t2 * t871 * pkin(9);
t938 = t39 * t866;
t939 = t30 * t914;
t943 = pkin(3) * t874;
t948 = t914 * t116;
t949 = pkin(3) * t866;
t950 = t119 * t949;
t953 = t37 * (t21 * (t938 * t939 + t108) + t924 * t39 * t943) + t96 * (-t948 + t950) + t948 - t125 - t950;
t957 = t871 * t39;
t958 = t77 * t914;
t964 = t914 * pkin(2);
t966 = t2 * t964 + pkin(9) - t139;
t989 = t39 * t874;
t993 = t37 * (t21 * t2 * (t161 * t914 + t39 * t949) + t966 * t989) * pkin(9);
t997 = t96 * (t938 * t958 - t107) * t124;
t1000 = t914 * (-t176 * t938 + t178);
t1003 = t911 * (t896 * (t37 * (0.2e1 * t1 * t21 * t880 + t30 * t887) + 0.2e1 * t871 * t44 * t43 * t41) - 0.2e1 * t906 * t898) + t910 * (t896 * (t37 * (t21 * (-t30 * t879 * t914 + t40 * t77 * t871) + t924 * t887 * pkin(3)) + t96 * (-t929 - t930) + t929 - t934 * t98 + t930) + t898 * t953) + t896 * (t37 * (-t21 * t2 * (pkin(3) * t879 - t957 * t958) + t966 * t887) * pkin(9) - t150 * (t77 * t879 * t914 + t40 * t871) * pkin(9) + t914 * (t152 * t880 + t154 * t957) + t934 * t40) + t898 * (t993 + t997 + t1000 + t181);
t1004 = -0.2e1 * t911 * t906;
t1007 = 0.1e1 / (t910 * t953 + t1000 + t1004 + t181 + t993 + t997);
t1010 = sin(legFrame(3,1));
t1013 = cos(legFrame(3,1));
t1016 = -g(2) * t1010 * t896 + g(3) * t1013 * t896 + g(1) * t898;
t1017 = t198 * t1016;
t1020 = t12 * t886 - t884;
t1023 = t39 * t877;
t1026 = t12 * t878 + t872;
t1033 = t877 * pkin(9);
t1039 = t910 * (pkin(3) * t1020 * t21 + pkin(9) * t1026 * t2 - t1023 * t205) + t914 * (pkin(9) * t1020 * t215 - t1033 * t217 * t39 - pkin(3) * t1026);
t1044 = t234 * t989;
t1050 = 0.2e1 * t244 * t39 * t943;
t1055 = t37 * t874 * pkin(2);
t1057 = -t77 * t866 + t1055;
t1071 = t282 * t37 * t989;
t1075 = 0.1e1 / (t911 * (-0.2e1 * t2 * t231 * t899 + t1044 + t228 - t236) + t910 * (t914 * (t240 * t938 + t1050 + t116 - t239) + t249 * t949 + t253 + t39 * t1057 * pkin(3) - t125) + t914 * (t1057 * t124 * t39 + t2 * t263 * t938 + t178 + t268) + (pkin(3) * t276 * t899 - t1071 - t274 + t63) * pkin(9));
t1081 = t21 * (rSges(3,1) * t914 + rSges(3,2) * t910) * m(3) - t295 + t296;
t1084 = t898 * t1010;
t1089 = t898 * t1013;
t1094 = g(1) * t869 * t896 + g(2) * (t1013 * t867 + t1084 * t869) + g(3) * (t1010 * t867 - t1089 * t869);
t1095 = t1094 * t7;
t1106 = -g(1) * t867 * t896 + g(2) * (t1013 * t869 - t1084 * t867) + g(3) * (t1010 * t869 + t1089 * t867);
t1108 = -t1106 * t4 + t1095;
t1114 = -m(3) * rSges(3,2) * t914 + t327 * t910 + t331 + t332;
t1119 = t39 * t1016;
t1132 = t874 * (-t1081 * t1108 * t12 + t1094 * t1114 * t4 + t1106 * t1114 * t7 + t1081 * t1119) + t866 * (t1081 * t1094 * t4 + t1081 * t1106 * t7 + t1108 * t1114 * t12 - t1114 * t1119);
t1145 = t922 + pkin(2);
t1148 = pkin(3) * t21 * t914;
t1149 = t1148 - t251;
t1158 = t910 * (t12 * (t124 * t21 * t874 + t949) * t877 + (t124 * t899 - t943) * t871) + t12 * (t1145 * t866 - t1149 * t874) * t877 - t871 * (t1145 * t874 + t1149 * t866);
t1161 = -t939 * t96 + t381 - t383 + t939;
t1163 = t37 * t914;
t1165 = t1163 * t388 + t386 - t93;
t1174 = t267 * t2 * t1163;
t1176 = (t964 + t124) * pkin(3);
t1180 = t958 * t96 + t406 - t958;
t1189 = 0.1e1 / (t1004 + t910 * (t12 * t1161 + t39 * (t37 * t924 * t943 + t1165 * t866)) + t12 * (-t398 + t1174 + t1176) + t39 * (t1180 * t2 * t866 + t37 * t874 * t966) * pkin(9));
t1191 = rSges(3,1) * t866;
t1192 = -t21 * t1108;
t1194 = t874 * t4;
t1195 = t1106 * rSges(3,2);
t1197 = t874 * t7;
t1198 = t1094 * rSges(3,2);
t1208 = -t1094 * t4 * t874 - t1106 * t7 * t874 + t1016 * t938;
t1213 = rSges(3,2) * t866;
t1248 = t910 * (t12 * (t1016 * t427 + t1191 * t1192 - t1194 * t1195 + t1197 * t1198) + t21 * t1208 * rSges(3,1) + t4 * (-t1106 * t37 * t439 - t1094 * t1213) + t7 * (t1094 * t37 * t439 - t1106 * t1213) - t1016 * rSges(3,2) * t989) - t914 * (t12 * (-rSges(3,1) * t1095 * t874 + rSges(3,1) * t1106 * t1194 + t1016 * t460 + t1192 * t1213) + t21 * t1208 * rSges(3,2) + t4 * (t1094 * t1191 - t1195 * t230) + t7 * (t1106 * t1191 + t1198 * t230) + t1016 * rSges(3,1) * t989);
t1251 = cos(qJ(2,4));
t1252 = sin(legFrame(4,3));
t1254 = cos(legFrame(4,3));
t1256 = t1252 * t4 + t1254 * t7;
t1257 = t1256 * t1251;
t1259 = sin(qJ(2,4));
t1262 = -t1252 * t7 + t1254 * t4;
t1263 = t1262 * t1259;
t1264 = t12 * t1257 + t1263;
t1265 = t1264 * t2;
t1269 = t1256 * t1259;
t1271 = t1262 * t1251;
t1272 = -t12 * t1269 + t1271;
t1281 = cos(legFrame(4,2));
t1283 = sin(legFrame(4,2));
t1284 = t21 * t1251;
t1291 = t37 * t39 * (t55 * t1284 - t30 * t1259 / 0.2e1) - t65;
t1295 = cos(qJ(3,4));
t1296 = t1295 ^ 2;
t1299 = sin(qJ(3,4));
t1307 = pkin(9) * t2 * t1299;
t1309 = 0.2e1 * t1307 + pkin(2);
t1314 = t1299 * t1256 * t90;
t1315 = t1264 * t93;
t1319 = t2 * t1256 * pkin(9);
t1323 = t39 * t1251;
t1324 = t30 * t1299;
t1328 = pkin(3) * t1259;
t1333 = t1299 * t116;
t1334 = pkin(3) * t1251;
t1335 = t119 * t1334;
t1338 = t37 * (t21 * (t1323 * t1324 + t108) + t1309 * t39 * t1328) + t96 * (-t1333 + t1335) + t1333 - t125 - t1335;
t1342 = t1256 * t39;
t1343 = t77 * t1299;
t1349 = t1299 * pkin(2);
t1351 = t1349 * t2 + pkin(9) - t139;
t1374 = t39 * t1259;
t1378 = t37 * (t21 * t2 * (t1299 * t161 + t1334 * t39) + t1351 * t1374) * pkin(9);
t1382 = t96 * (t1323 * t1343 - t107) * t124;
t1385 = t1299 * (-t1323 * t176 + t178);
t1388 = t1296 * (t1281 * (t37 * (0.2e1 * t1 * t1265 * t21 + t1272 * t30) + 0.2e1 * t1256 * t44 * t43 * t41) - 0.2e1 * t1291 * t1283) + t1295 * (t1281 * (t37 * (t21 * (t1256 * t40 * t77 - t1264 * t1299 * t30) + t1309 * t1272 * pkin(3)) + t96 * (-t1314 - t1315) + t1314 - t1319 * t98 + t1315) + t1283 * t1338) + t1281 * (t37 * (-t21 * t2 * (pkin(3) * t1264 - t1342 * t1343) + t1351 * t1272) * pkin(9) - t150 * (t1264 * t1299 * t77 + t1256 * t40) * pkin(9) + t1299 * (t1265 * t152 + t1342 * t154) + t1319 * t40) + t1283 * (t1378 + t1382 + t1385 + t181);
t1389 = -0.2e1 * t1296 * t1291;
t1392 = 0.1e1 / (t1295 * t1338 + t1378 + t1382 + t1385 + t1389 + t181);
t1395 = sin(legFrame(4,1));
t1398 = cos(legFrame(4,1));
t1401 = -g(2) * t1281 * t1395 + g(3) * t1281 * t1398 + g(1) * t1283;
t1402 = t198 * t1401;
t1405 = t12 * t1271 - t1269;
t1408 = t39 * t1262;
t1411 = t12 * t1263 + t1257;
t1418 = t1262 * pkin(9);
t1424 = t1295 * (pkin(3) * t1405 * t21 + pkin(9) * t1411 * t2 - t1408 * t205) + t1299 * (pkin(9) * t1405 * t215 - t1418 * t217 * t39 - pkin(3) * t1411);
t1429 = t234 * t1374;
t1435 = 0.2e1 * t244 * t39 * t1328;
t1440 = t37 * t1259 * pkin(2);
t1442 = -t1251 * t77 + t1440;
t1456 = t282 * t37 * t1374;
t1460 = 0.1e1 / (t1296 * (-0.2e1 * t1284 * t2 * t231 + t1429 + t228 - t236) + t1295 * (t1299 * (t1323 * t240 + t116 + t1435 - t239) + t249 * t1334 + t253 + t39 * t1442 * pkin(3) - t125) + t1299 * (t124 * t1442 * t39 + t1323 * t2 * t263 + t178 + t268) + (pkin(3) * t1284 * t276 - t1456 - t274 + t63) * pkin(9));
t1466 = t21 * (rSges(3,1) * t1299 + rSges(3,2) * t1295) * m(3) - t295 + t296;
t1469 = t1283 * t1395;
t1474 = t1283 * t1398;
t1479 = g(1) * t1254 * t1281 + g(2) * (t1252 * t1398 + t1254 * t1469) + g(3) * (t1252 * t1395 - t1254 * t1474);
t1480 = t1479 * t7;
t1491 = -g(1) * t1252 * t1281 + g(2) * (-t1252 * t1469 + t1254 * t1398) + g(3) * (t1252 * t1474 + t1254 * t1395);
t1493 = -t1491 * t4 + t1480;
t1499 = -m(3) * rSges(3,2) * t1299 + t1295 * t327 + t331 + t332;
t1504 = t39 * t1401;
t1517 = t1259 * (-t12 * t1466 * t1493 + t1479 * t1499 * t4 + t1491 * t1499 * t7 + t1466 * t1504) + t1251 * (t12 * t1493 * t1499 + t1466 * t1479 * t4 + t1466 * t1491 * t7 - t1499 * t1504);
t1530 = t1307 + pkin(2);
t1533 = pkin(3) * t21 * t1299;
t1534 = t1533 - t251;
t1543 = t1295 * (t12 * (t124 * t1259 * t21 + t1334) * t1262 + (t124 * t1284 - t1328) * t1256) + t12 * (t1251 * t1530 - t1259 * t1534) * t1262 - t1256 * (t1251 * t1534 + t1259 * t1530);
t1546 = -t1324 * t96 + t1324 + t381 - t383;
t1548 = t37 * t1299;
t1550 = t1548 * t388 + t386 - t93;
t1559 = t267 * t2 * t1548;
t1561 = (t1349 + t124) * pkin(3);
t1565 = t1343 * t96 - t1343 + t406;
t1574 = 0.1e1 / (t1389 + t1295 * (t12 * t1546 + t39 * (t1309 * t1328 * t37 + t1251 * t1550)) + t12 * (-t398 + t1559 + t1561) + t39 * (t1251 * t1565 * t2 + t1259 * t1351 * t37) * pkin(9));
t1576 = rSges(3,1) * t1251;
t1577 = -t21 * t1493;
t1579 = t1259 * t4;
t1580 = t1491 * rSges(3,2);
t1582 = t1259 * t7;
t1583 = t1479 * rSges(3,2);
t1593 = -t1259 * t1479 * t4 - t1259 * t1491 * t7 + t1323 * t1401;
t1598 = rSges(3,2) * t1251;
t1633 = t1295 * (t12 * (t1401 * t427 + t1576 * t1577 - t1579 * t1580 + t1582 * t1583) + t21 * t1593 * rSges(3,1) + t4 * (-t1491 * t37 * t439 - t1479 * t1598) + t7 * (t1479 * t37 * t439 - t1491 * t1598) - t1401 * rSges(3,2) * t1374) - t1299 * (t12 * (-rSges(3,1) * t1259 * t1480 + rSges(3,1) * t1491 * t1579 + t1401 * t460 + t1577 * t1598) + t21 * t1593 * rSges(3,2) + t4 * (t1479 * t1576 - t1580 * t230) + t7 * (t1491 * t1576 + t1583 * t230) + t1401 * rSges(3,1) * t1374);
t1636 = cos(qJ(2,5));
t1637 = sin(legFrame(5,3));
t1639 = cos(legFrame(5,3));
t1641 = t1637 * t4 + t1639 * t7;
t1642 = t1641 * t1636;
t1644 = sin(qJ(2,5));
t1647 = -t1637 * t7 + t1639 * t4;
t1648 = t1647 * t1644;
t1649 = t12 * t1642 + t1648;
t1650 = t1649 * t2;
t1654 = t1641 * t1644;
t1656 = t1647 * t1636;
t1657 = -t12 * t1654 + t1656;
t1666 = cos(legFrame(5,2));
t1668 = sin(legFrame(5,2));
t1669 = t21 * t1636;
t1676 = t37 * t39 * (t55 * t1669 - t30 * t1644 / 0.2e1) - t65;
t1680 = cos(qJ(3,5));
t1681 = t1680 ^ 2;
t1684 = sin(qJ(3,5));
t1692 = pkin(9) * t2 * t1684;
t1694 = 0.2e1 * t1692 + pkin(2);
t1699 = t1684 * t1641 * t90;
t1700 = t1649 * t93;
t1704 = t2 * t1641 * pkin(9);
t1708 = t39 * t1636;
t1709 = t30 * t1684;
t1713 = pkin(3) * t1644;
t1718 = t1684 * t116;
t1719 = pkin(3) * t1636;
t1720 = t119 * t1719;
t1723 = t37 * (t21 * (t1708 * t1709 + t108) + t1694 * t39 * t1713) + t96 * (-t1718 + t1720) + t1718 - t125 - t1720;
t1727 = t39 * t1641;
t1728 = t77 * t1684;
t1734 = t1684 * pkin(2);
t1736 = t1734 * t2 + pkin(9) - t139;
t1759 = t39 * t1644;
t1763 = t37 * (t21 * t2 * (t161 * t1684 + t1719 * t39) + t1736 * t1759) * pkin(9);
t1767 = t96 * (t1708 * t1728 - t107) * t124;
t1770 = t1684 * (-t1708 * t176 + t178);
t1773 = t1681 * (t1666 * (t37 * (0.2e1 * t1 * t1650 * t21 + t1657 * t30) + 0.2e1 * t1641 * t44 * t43 * t41) - 0.2e1 * t1676 * t1668) + t1680 * (t1666 * (t37 * (t21 * (t1641 * t40 * t77 - t1649 * t1684 * t30) + t1694 * t1657 * pkin(3)) + t96 * (-t1699 - t1700) + t1699 - t1704 * t98 + t1700) + t1668 * t1723) + t1666 * (t37 * (-t21 * t2 * (pkin(3) * t1649 - t1727 * t1728) + t1736 * t1657) * pkin(9) - t150 * (t1649 * t1684 * t77 + t1641 * t40) * pkin(9) + t1684 * (t152 * t1650 + t154 * t1727) + t1704 * t40) + t1668 * (t1763 + t1767 + t1770 + t181);
t1774 = -0.2e1 * t1681 * t1676;
t1777 = 0.1e1 / (t1680 * t1723 + t1763 + t1767 + t1770 + t1774 + t181);
t1780 = sin(legFrame(5,1));
t1783 = cos(legFrame(5,1));
t1786 = -g(2) * t1666 * t1780 + g(3) * t1666 * t1783 + g(1) * t1668;
t1787 = t198 * t1786;
t1790 = t12 * t1656 - t1654;
t1793 = t1647 * t39;
t1796 = t12 * t1648 + t1642;
t1803 = t1647 * pkin(9);
t1809 = t1680 * (pkin(3) * t1790 * t21 + pkin(9) * t1796 * t2 - t1793 * t205) + t1684 * (pkin(9) * t1790 * t215 - t1803 * t217 * t39 - pkin(3) * t1796);
t1814 = t234 * t1759;
t1820 = 0.2e1 * t244 * t39 * t1713;
t1825 = t37 * t1644 * pkin(2);
t1827 = -t1636 * t77 + t1825;
t1841 = t282 * t37 * t1759;
t1845 = 0.1e1 / (t1681 * (-0.2e1 * t1669 * t2 * t231 + t1814 + t228 - t236) + t1680 * (t1684 * (t1708 * t240 + t116 + t1820 - t239) + t249 * t1719 + t253 + t39 * t1827 * pkin(3) - t125) + t1684 * (t124 * t1827 * t39 + t1708 * t2 * t263 + t178 + t268) + (pkin(3) * t1669 * t276 - t1841 - t274 + t63) * pkin(9));
t1851 = t21 * (rSges(3,1) * t1684 + rSges(3,2) * t1680) * m(3) - t295 + t296;
t1854 = t1668 * t1780;
t1859 = t1668 * t1783;
t1864 = g(1) * t1639 * t1666 + g(2) * (t1637 * t1783 + t1639 * t1854) + g(3) * (t1637 * t1780 - t1639 * t1859);
t1865 = t1864 * t7;
t1876 = -g(1) * t1637 * t1666 + g(2) * (-t1637 * t1854 + t1639 * t1783) + g(3) * (t1637 * t1859 + t1639 * t1780);
t1878 = -t1876 * t4 + t1865;
t1884 = -m(3) * rSges(3,2) * t1684 + t1680 * t327 + t331 + t332;
t1889 = t39 * t1786;
t1902 = t1644 * (-t12 * t1851 * t1878 + t1864 * t1884 * t4 + t1876 * t1884 * t7 + t1851 * t1889) + t1636 * (t12 * t1878 * t1884 + t1851 * t1864 * t4 + t1851 * t1876 * t7 - t1884 * t1889);
t1915 = t1692 + pkin(2);
t1918 = pkin(3) * t21 * t1684;
t1919 = t1918 - t251;
t1928 = t1680 * (t12 * (t124 * t1644 * t21 + t1719) * t1647 + (t124 * t1669 - t1713) * t1641) + t12 * (t1636 * t1915 - t1644 * t1919) * t1647 - t1641 * (t1636 * t1919 + t1644 * t1915);
t1931 = -t1709 * t96 + t1709 + t381 - t383;
t1933 = t37 * t1684;
t1935 = t1933 * t388 + t386 - t93;
t1944 = t267 * t2 * t1933;
t1946 = (t1734 + t124) * pkin(3);
t1950 = t1728 * t96 - t1728 + t406;
t1959 = 0.1e1 / (t1774 + t1680 * (t12 * t1931 + t39 * (t1694 * t1713 * t37 + t1636 * t1935)) + t12 * (-t398 + t1944 + t1946) + t39 * (t1636 * t1950 * t2 + t1644 * t1736 * t37) * pkin(9));
t1961 = rSges(3,1) * t1636;
t1962 = -t21 * t1878;
t1964 = t1644 * t4;
t1965 = t1876 * rSges(3,2);
t1967 = t1644 * t7;
t1968 = t1864 * rSges(3,2);
t1978 = -t1644 * t1864 * t4 - t1644 * t1876 * t7 + t1708 * t1786;
t1983 = rSges(3,2) * t1636;
t2018 = t1680 * (t12 * (t1786 * t427 + t1961 * t1962 - t1964 * t1965 + t1967 * t1968) + t21 * t1978 * rSges(3,1) + t4 * (-t1876 * t37 * t439 - t1864 * t1983) + t7 * (t1864 * t37 * t439 - t1876 * t1983) - t1786 * rSges(3,2) * t1759) - t1684 * (t12 * (-rSges(3,1) * t1644 * t1865 + rSges(3,1) * t1876 * t1964 + t1786 * t460 + t1962 * t1983) + t21 * t1978 * rSges(3,2) + t4 * (t1864 * t1961 - t1965 * t230) + t7 * (t1876 * t1961 + t1968 * t230) + t1786 * rSges(3,1) * t1759);
t2021 = cos(qJ(2,6));
t2022 = sin(legFrame(6,3));
t2024 = cos(legFrame(6,3));
t2026 = t2022 * t4 + t2024 * t7;
t2027 = t2026 * t2021;
t2029 = sin(qJ(2,6));
t2032 = -t2022 * t7 + t2024 * t4;
t2033 = t2032 * t2029;
t2034 = t12 * t2027 + t2033;
t2035 = t2034 * t2;
t2039 = t2026 * t2029;
t2041 = t2032 * t2021;
t2042 = -t12 * t2039 + t2041;
t2051 = cos(legFrame(6,2));
t2053 = sin(legFrame(6,2));
t2054 = t21 * t2021;
t2061 = t37 * t39 * (t55 * t2054 - t30 * t2029 / 0.2e1) - t65;
t2065 = cos(qJ(3,6));
t2066 = t2065 ^ 2;
t2069 = sin(qJ(3,6));
t2077 = pkin(9) * t2 * t2069;
t2079 = 0.2e1 * t2077 + pkin(2);
t2084 = t2069 * t2026 * t90;
t2085 = t2034 * t93;
t2089 = t2 * t2026 * pkin(9);
t2093 = t39 * t2021;
t2094 = t30 * t2069;
t2098 = pkin(3) * t2029;
t2103 = t2069 * t116;
t2104 = pkin(3) * t2021;
t2105 = t119 * t2104;
t2108 = t37 * (t21 * (t2093 * t2094 + t108) + t2079 * t39 * t2098) + t96 * (-t2103 + t2105) + t2103 - t125 - t2105;
t2112 = t2026 * t39;
t2113 = t77 * t2069;
t2119 = t2069 * pkin(2);
t2121 = t2 * t2119 + pkin(9) - t139;
t2144 = t39 * t2029;
t2148 = t37 * (t21 * t2 * (t161 * t2069 + t2104 * t39) + t2121 * t2144) * pkin(9);
t2152 = t96 * (t2093 * t2113 - t107) * t124;
t2155 = t2069 * (-t176 * t2093 + t178);
t2158 = t2066 * (t2051 * (t37 * (0.2e1 * t1 * t2035 * t21 + t2042 * t30) + 0.2e1 * t2026 * t44 * t43 * t41) - 0.2e1 * t2061 * t2053) + t2065 * (t2051 * (t37 * (t21 * (t2026 * t40 * t77 - t2034 * t2069 * t30) + t2079 * t2042 * pkin(3)) + t96 * (-t2084 - t2085) + t2084 - t2089 * t98 + t2085) + t2053 * t2108) + t2051 * (t37 * (-t21 * t2 * (pkin(3) * t2034 - t2112 * t2113) + t2121 * t2042) * pkin(9) - t150 * (t2034 * t2069 * t77 + t2026 * t40) * pkin(9) + t2069 * (t152 * t2035 + t154 * t2112) + t2089 * t40) + t2053 * (t2148 + t2152 + t2155 + t181);
t2159 = -0.2e1 * t2066 * t2061;
t2162 = 0.1e1 / (t2065 * t2108 + t181 + t2148 + t2152 + t2155 + t2159);
t2165 = sin(legFrame(6,1));
t2168 = cos(legFrame(6,1));
t2171 = -g(2) * t2051 * t2165 + g(3) * t2051 * t2168 + g(1) * t2053;
t2172 = t198 * t2171;
t2175 = t12 * t2041 - t2039;
t2178 = t39 * t2032;
t2181 = t12 * t2033 + t2027;
t2188 = t2032 * pkin(9);
t2194 = t2065 * (pkin(3) * t21 * t2175 + pkin(9) * t2 * t2181 - t205 * t2178) + t2069 * (pkin(9) * t215 * t2175 - t217 * t2188 * t39 - pkin(3) * t2181);
t2199 = t234 * t2144;
t2205 = 0.2e1 * t244 * t39 * t2098;
t2210 = t37 * t2029 * pkin(2);
t2212 = -t2021 * t77 + t2210;
t2226 = t282 * t37 * t2144;
t2230 = 0.1e1 / (t2066 * (-0.2e1 * t2 * t2054 * t231 + t2199 + t228 - t236) + t2065 * (t2069 * (t2093 * t240 + t116 + t2205 - t239) + t249 * t2104 + t253 + t39 * t2212 * pkin(3) - t125) + t2069 * (t124 * t2212 * t39 + t2 * t2093 * t263 + t178 + t268) + (pkin(3) * t2054 * t276 - t2226 - t274 + t63) * pkin(9));
t2236 = t21 * (rSges(3,1) * t2069 + rSges(3,2) * t2065) * m(3) - t295 + t296;
t2239 = t2053 * t2165;
t2244 = t2053 * t2168;
t2249 = g(1) * t2024 * t2051 + g(2) * (t2022 * t2168 + t2024 * t2239) + g(3) * (t2022 * t2165 - t2024 * t2244);
t2250 = t2249 * t7;
t2261 = -g(1) * t2022 * t2051 + g(2) * (-t2022 * t2239 + t2024 * t2168) + g(3) * (t2022 * t2244 + t2024 * t2165);
t2263 = -t2261 * t4 + t2250;
t2269 = -m(3) * rSges(3,2) * t2069 + t2065 * t327 + t331 + t332;
t2274 = t39 * t2171;
t2287 = t2029 * (-t12 * t2236 * t2263 + t2249 * t2269 * t4 + t2261 * t2269 * t7 + t2236 * t2274) + t2021 * (t12 * t2263 * t2269 + t2236 * t2249 * t4 + t2236 * t2261 * t7 - t2269 * t2274);
t2300 = t2077 + pkin(2);
t2303 = pkin(3) * t21 * t2069;
t2304 = t2303 - t251;
t2313 = t2065 * (t12 * (t124 * t2029 * t21 + t2104) * t2032 + (t124 * t2054 - t2098) * t2026) + t12 * (t2021 * t2300 - t2029 * t2304) * t2032 - t2026 * (t2021 * t2304 + t2029 * t2300);
t2316 = -t2094 * t96 + t2094 + t381 - t383;
t2318 = t37 * t2069;
t2320 = t2318 * t388 + t386 - t93;
t2329 = t267 * t2 * t2318;
t2331 = (t2119 + t124) * pkin(3);
t2335 = t2113 * t96 - t2113 + t406;
t2344 = 0.1e1 / (t2159 + t2065 * (t12 * t2316 + t39 * (t2079 * t2098 * t37 + t2021 * t2320)) + t12 * (-t398 + t2329 + t2331) + t39 * (t2 * t2021 * t2335 + t2029 * t2121 * t37) * pkin(9));
t2346 = rSges(3,1) * t2021;
t2347 = -t21 * t2263;
t2349 = t2029 * t4;
t2350 = t2261 * rSges(3,2);
t2352 = t2029 * t7;
t2353 = t2249 * rSges(3,2);
t2363 = -t2029 * t2249 * t4 - t2029 * t2261 * t7 + t2093 * t2171;
t2368 = rSges(3,2) * t2021;
t2403 = t2065 * (t12 * (t2171 * t427 + t2346 * t2347 - t2349 * t2350 + t2352 * t2353) + t21 * t2363 * rSges(3,1) + t4 * (-t2261 * t37 * t439 - t2249 * t2368) + t7 * (t2249 * t37 * t439 - t2261 * t2368) - t2171 * rSges(3,2) * t2144) - t2069 * (t12 * (-rSges(3,1) * t2029 * t2250 + rSges(3,1) * t2261 * t2349 + t2171 * t460 + t2347 * t2368) + t21 * t2363 * rSges(3,2) + t4 * (t2249 * t2346 - t230 * t2350) + t7 * (t2261 * t2346 + t230 * t2353) + t2171 * rSges(3,1) * t2144);
t2407 = -t199 * t188 * t184 + t351 * t287 * t50 * t224 + t478 * m(3) * t416 * t50 * t377 - t632 * t622 * t618 + t747 * t690 * t511 * t654 + t863 * m(3) * t804 * t511 * t773 - t1017 * t1007 * t1003 + t1132 * t1075 * t896 * t1039 + t1248 * m(3) * t1189 * t896 * t1158 - t1402 * t1392 * t1388 + t1517 * t1460 * t1281 * t1424 + t1633 * m(3) * t1574 * t1281 * t1543 - t1787 * t1777 * t1773 + t1902 * t1845 * t1666 * t1809 + t2018 * m(3) * t1959 * t1666 * t1928 - t2172 * t2162 * t2158 + t2287 * t2230 * t2051 * t2194 + t2403 * m(3) * t2344 * t2051 * t2313 - m(4) * g(1);
t2408 = t12 * t7;
t2410 = t2408 * t3 + t421;
t2413 = t12 * t4;
t2415 = t2413 * t3 - t424;
t2419 = t2410 * t52 * t8 + t2415 * t5 * t52 + t104 * t50;
t2426 = -t14 * t2408 + t3 * t4;
t2431 = t14 * t2413 + t3 * t7;
t2435 = t2426 * t52 * t8 - t2431 * t5 * t52 - t167 * t50;
t2437 = 0.2e1 * t1 * t2 * t21 * t2419 + t2435 * t30;
t2441 = -t2410 * t5 + t2415 * t8;
t2447 = t2426 * t5 + t2431 * t8;
t2450 = t21 * t2441 * t2 * t1 - t2447 * t30 / 0.2e1;
t2456 = pkin(3) * t44 * pkin(9);
t2457 = t42 * t2;
t2458 = t39 * t4;
t2461 = t7 * t39;
t2465 = -t2458 * t5 * t52 - t2461 * t52 * t8 + t12 * t50;
t2478 = -t2419 * t30 * t74 - t2465 * t93;
t2481 = t86 * t2435 * pkin(3);
t2492 = t21 * (-t17 * t40 * t77 + t2441 * t30 * t74) + t86 * t2447 * pkin(3);
t2497 = t74 * t2465 * t30;
t2498 = t2419 * pkin(3);
t2499 = t77 * t2498;
t2500 = t2497 - t2499;
t2502 = pkin(2) * pkin(9);
t2504 = t2 * t2465 * t2502;
t2508 = t74 * t17 * t90;
t2509 = t2441 * pkin(3);
t2510 = t77 * t2509;
t2513 = t2 * t218;
t2515 = t96 * (t2508 + t2510) - t2508 + t2513 * t98 - t2510;
t2525 = -t21 * (t2465 * t74 * t77 + t2498) * t2 + t140 * t2435;
t2532 = t21 * t2 * (-t131 * t206 + t2509) + t140 * t2447;
t2542 = t150 * (t2419 * t74 * t77 - pkin(3) * t2465) * pkin(9);
t2544 = t2 * t77;
t2547 = pkin(9) * t2419 * t2544 - t154 * t2465;
t2550 = t2465 * pkin(9) * t54;
t2565 = -t96 * (t2441 * t74 * t77 + t17 * t40) * t124 + t74 * (pkin(9) * t2441 * t2544 + t154 * t206) + t2513 * t40;
t2567 = t71 * (t37 * (t191 * t2437 - 0.2e1 * t194 * t2450) - 0.2e1 * (t17 * t194 * t39 + t191 * t2465) * t2457 * t2456) + t70 * (t37 * (t191 * (t21 * t2478 + t2481) + t2492 * t194) + t191 * (t2500 * t96 - t2497 + t2499 + t2504) + t2515 * t194) + t37 * (t191 * t2525 + t194 * t2532) * pkin(9) + t191 * (t2547 * t74 - t2542 - t2550) - t2565 * t194;
t2572 = t10 * t194 + t17 * t300;
t2577 = t10 * t300 - t17 * t194;
t2579 = t12 * t14 * t2572 + t2577 * t3;
t2589 = t21 * (t12 * t2572 * t3 - t14 * t2577) - t37 * t39 * t2572;
t2598 = t70 * (pkin(9) * t2 * t2579 + pkin(3) * t2589) + t74 * (pkin(9) * t2 * t2589 - pkin(3) * t2579);
t2600 = t230 * t53 + t12 - t226;
t2609 = t96 * t77;
t2611 = t380 * t265;
t2615 = t2609 * t104 + t2611 + t39 * (-t3 * t77 + t255);
t2628 = 0.1e1 / (t71 * (-0.2e1 * t1 * t2 * t2600 + t235) + t70 * (t74 * (t2600 * t30 + t246) - t125 + t2615 * pkin(3)) + t74 * (pkin(9) * t2 * t2615 + t178) + (pkin(3) * t2 * t2600 - t283) * pkin(9));
t2632 = pkin(3) * t70 + pkin(2) + t84;
t2636 = t124 * t21 * t70 + t251 - t367;
t2638 = t14 * t2636 + t2632 * t3;
t2643 = t14 * t2632 - t2636 * t3;
t2645 = -t12 * t2572 * t2638 + t2577 * t2643;
t2646 = t44 * t42;
t2671 = 0.1e1 / (t12 * (0.2e1 * t2646 * t55 * t71 + t384 * t70 - t398 + t400 + t402) + (t3 * (-0.2e1 * pkin(3) * t21 * t244 * t71 + t124 * t407 + t390 * t70) + t37 * (pkin(3) * t70 * t86 + pkin(9) * t140 + t30 * t71) * t14) * t39);
t2673 = t478 * m(3);
t2676 = t2408 * t481 + t809;
t2680 = t2413 * t481 - t812;
t2684 = t2676 * t484 * t513 + t2680 * t482 * t513 + t511 * t553;
t2691 = -t2408 * t489 + t4 * t481;
t2696 = t2413 * t489 + t481 * t7;
t2700 = t2691 * t484 * t513 - t2696 * t482 * t513 - t511 * t604;
t2702 = 0.2e1 * t1 * t2 * t21 * t2684 + t2700 * t30;
t2706 = -t2676 * t482 + t2680 * t484;
t2712 = t2691 * t482 + t2696 * t484;
t2715 = t21 * t2706 * t2 * t1 - t2712 * t30 / 0.2e1;
t2725 = -t2458 * t482 * t513 - t2461 * t484 * t513 + t12 * t511;
t2738 = -t2684 * t30 * t529 - t2725 * t93;
t2741 = t539 * t2700 * pkin(3);
t2752 = t21 * (t2706 * t30 * t529 - t40 * t492 * t77) + t539 * t2712 * pkin(3);
t2757 = t529 * t2725 * t30;
t2758 = t2684 * pkin(3);
t2759 = t77 * t2758;
t2760 = t2757 - t2759;
t2763 = t2 * t2725 * t2502;
t2767 = t529 * t492 * t90;
t2768 = t2706 * pkin(3);
t2769 = t77 * t2768;
t2772 = t2 * t648;
t2774 = t96 * (t2767 + t2769) - t2767 + t2772 * t98 - t2769;
t2784 = -t21 * (t2725 * t529 * t77 + t2758) * t2 + t581 * t2700;
t2791 = t21 * t2 * (-t573 * t638 + t2768) + t581 * t2712;
t2801 = t150 * (t2684 * t529 * t77 - pkin(3) * t2725) * pkin(9);
t2805 = pkin(9) * t2544 * t2684 - t154 * t2725;
t2808 = t2725 * pkin(9) * t54;
t2823 = -t96 * (t2706 * t529 * t77 + t40 * t492) * t124 + t529 * (pkin(9) * t2544 * t2706 + t154 * t638) + t2772 * t40;
t2825 = t526 * (t37 * (t2702 * t625 - 0.2e1 * t2715 * t628) - 0.2e1 * (t39 * t492 * t628 + t2725 * t625) * t2457 * t2456) + t525 * (t37 * (t625 * (t21 * t2738 + t2741) + t2752 * t628) + t625 * (t2760 * t96 - t2757 + t2759 + t2763) + t2774 * t628) + t37 * (t2784 * t625 + t2791 * t628) * pkin(9) + t625 * (t2805 * t529 - t2801 - t2808) - t2823 * t628;
t2830 = t486 * t628 + t492 * t699;
t2835 = t486 * t699 - t492 * t628;
t2837 = t12 * t2830 * t489 + t2835 * t481;
t2847 = t21 * (t12 * t2830 * t481 - t2835 * t489) - t37 * t39 * t2830;
t2856 = t525 * (pkin(9) * t2 * t2837 + pkin(3) * t2847) + t529 * (pkin(9) * t2 * t2847 - pkin(3) * t2837);
t2858 = t230 * t514 + t12 - t226;
t2871 = t2609 * t553 + t2611 + t39 * (-t481 * t77 + t670);
t2884 = 0.1e1 / (t526 * (-0.2e1 * t1 * t2 * t2858 + t659) + t525 * (t529 * (t2858 * t30 + t665) - t125 + t2871 * pkin(3)) + t529 * (pkin(9) * t2 * t2871 + t178) + (pkin(3) * t2 * t2858 - t686) * pkin(9));
t2888 = pkin(3) * t525 + pkin(2) + t537;
t2892 = t124 * t21 * t525 + t251 - t763;
t2894 = t2888 * t481 + t2892 * t489;
t2899 = t2888 * t489 - t2892 * t481;
t2901 = -t12 * t2830 * t2894 + t2835 * t2899;
t2926 = 0.1e1 / (t12 * (0.2e1 * t2646 * t526 * t55 + t525 * t776 - t398 + t789 + t791) + (t481 * (-0.2e1 * pkin(3) * t21 * t244 * t526 + t124 * t795 + t525 * t780) + t37 * (pkin(3) * t525 * t539 + pkin(9) * t581 + t30 * t526) * t489) * t39);
t2928 = t863 * m(3);
t2931 = t2408 * t866 + t1194;
t2935 = t2413 * t866 - t1197;
t2939 = t2931 * t869 * t898 + t2935 * t867 * t898 + t896 * t938;
t2946 = -t2408 * t874 + t4 * t866;
t2951 = t2413 * t874 + t7 * t866;
t2955 = t2946 * t869 * t898 - t2951 * t867 * t898 - t896 * t989;
t2957 = 0.2e1 * t1 * t2 * t21 * t2939 + t2955 * t30;
t2961 = -t2931 * t867 + t2935 * t869;
t2967 = t2946 * t867 + t2951 * t869;
t2970 = t21 * t2961 * t2 * t1 - t2967 * t30 / 0.2e1;
t2980 = -t2458 * t867 * t898 - t2461 * t869 * t898 + t12 * t896;
t2993 = -t2939 * t30 * t914 - t2980 * t93;
t2996 = t924 * t2955 * pkin(3);
t3007 = t21 * (t2961 * t30 * t914 - t40 * t77 * t877) + t924 * t2967 * pkin(3);
t3012 = t914 * t2980 * t30;
t3013 = t2939 * pkin(3);
t3014 = t77 * t3013;
t3015 = t3012 - t3014;
t3018 = t2 * t2980 * t2502;
t3022 = t914 * t877 * t90;
t3023 = t2961 * pkin(3);
t3024 = t77 * t3023;
t3027 = t2 * t1033;
t3029 = t96 * (t3022 + t3024) - t3022 + t3027 * t98 - t3024;
t3039 = -t21 * (t2980 * t77 * t914 + t3013) * t2 + t966 * t2955;
t3046 = t21 * t2 * (-t1023 * t958 + t3023) + t966 * t2967;
t3056 = t150 * (t2939 * t77 * t914 - pkin(3) * t2980) * pkin(9);
t3060 = pkin(9) * t2544 * t2939 - t154 * t2980;
t3063 = t2980 * pkin(9) * t54;
t3078 = -t96 * (t2961 * t77 * t914 + t40 * t877) * t124 + t914 * (pkin(9) * t2544 * t2961 + t1023 * t154) + t3027 * t40;
t3080 = t911 * (t37 * (t1010 * t2957 - 0.2e1 * t1013 * t2970) - 0.2e1 * (t1013 * t39 * t877 + t1010 * t2980) * t2457 * t2456) + t910 * (t37 * (t1010 * (t21 * t2993 + t2996) + t3007 * t1013) + t1010 * (t3015 * t96 - t3012 + t3014 + t3018) + t3029 * t1013) + t37 * (t1010 * t3039 + t1013 * t3046) * pkin(9) + t1010 * (t3060 * t914 - t3056 - t3063) - t3078 * t1013;
t3085 = t1013 * t871 + t1084 * t877;
t3090 = -t1013 * t877 + t1084 * t871;
t3092 = t12 * t3085 * t874 + t3090 * t866;
t3102 = t21 * (t12 * t3085 * t866 - t3090 * t874) - t37 * t39 * t3085;
t3111 = t910 * (pkin(9) * t2 * t3092 + pkin(3) * t3102) + t914 * (pkin(9) * t2 * t3102 - pkin(3) * t3092);
t3113 = t230 * t899 + t12 - t226;
t3126 = t2609 * t938 + t2611 + t39 * (-t77 * t866 + t1055);
t3139 = 0.1e1 / (t911 * (-0.2e1 * t1 * t2 * t3113 + t1044) + t910 * (t914 * (t30 * t3113 + t1050) - t125 + t3126 * pkin(3)) + t914 * (pkin(9) * t2 * t3126 + t178) + (pkin(3) * t2 * t3113 - t1071) * pkin(9));
t3143 = pkin(3) * t910 + pkin(2) + t922;
t3147 = t124 * t21 * t910 - t1148 + t251;
t3149 = t3143 * t866 + t3147 * t874;
t3154 = t3143 * t874 - t3147 * t866;
t3156 = -t12 * t3085 * t3149 + t3090 * t3154;
t3181 = 0.1e1 / (t12 * (0.2e1 * t2646 * t55 * t911 + t1161 * t910 + t1174 + t1176 - t398) + (t866 * (-0.2e1 * pkin(3) * t21 * t244 * t911 + t1165 * t910 + t1180 * t124) + t37 * (pkin(3) * t910 * t924 + pkin(9) * t966 + t30 * t911) * t874) * t39);
t3183 = t1248 * m(3);
t3186 = t1251 * t2408 + t1579;
t3190 = t1251 * t2413 - t1582;
t3194 = t1252 * t1283 * t3190 + t1254 * t1283 * t3186 + t1281 * t1323;
t3201 = t1251 * t4 - t1259 * t2408;
t3206 = t1251 * t7 + t1259 * t2413;
t3210 = -t1252 * t1283 * t3206 + t1254 * t1283 * t3201 - t1281 * t1374;
t3212 = 0.2e1 * t1 * t2 * t21 * t3194 + t30 * t3210;
t3216 = -t1252 * t3186 + t1254 * t3190;
t3222 = t1252 * t3201 + t1254 * t3206;
t3225 = t21 * t3216 * t2 * t1 - t3222 * t30 / 0.2e1;
t3235 = -t1252 * t1283 * t2458 - t1254 * t1283 * t2461 + t12 * t1281;
t3248 = -t1299 * t30 * t3194 - t3235 * t93;
t3251 = t1309 * t3210 * pkin(3);
t3262 = t21 * (-t1262 * t40 * t77 + t1299 * t30 * t3216) + t1309 * t3222 * pkin(3);
t3267 = t1299 * t3235 * t30;
t3268 = t3194 * pkin(3);
t3269 = t77 * t3268;
t3270 = t3267 - t3269;
t3273 = t2 * t3235 * t2502;
t3277 = t1299 * t1262 * t90;
t3278 = t3216 * pkin(3);
t3279 = t77 * t3278;
t3282 = t2 * t1418;
t3284 = t96 * (t3277 + t3279) - t3277 + t3282 * t98 - t3279;
t3294 = -t21 * (t1299 * t3235 * t77 + t3268) * t2 + t1351 * t3210;
t3301 = t21 * t2 * (-t1343 * t1408 + t3278) + t1351 * t3222;
t3311 = t150 * (t1299 * t3194 * t77 - pkin(3) * t3235) * pkin(9);
t3315 = pkin(9) * t2544 * t3194 - t154 * t3235;
t3318 = t3235 * pkin(9) * t54;
t3333 = -t96 * (t1299 * t3216 * t77 + t1262 * t40) * t124 + t1299 * (pkin(9) * t2544 * t3216 + t1408 * t154) + t3282 * t40;
t3335 = t1296 * (t37 * (t1395 * t3212 - 0.2e1 * t1398 * t3225) - 0.2e1 * (t1262 * t1398 * t39 + t1395 * t3235) * t2457 * t2456) + t1295 * (t37 * (t1395 * (t21 * t3248 + t3251) + t3262 * t1398) + t1395 * (t3270 * t96 - t3267 + t3269 + t3273) + t3284 * t1398) + t37 * (t1395 * t3294 + t1398 * t3301) * pkin(9) + t1395 * (t1299 * t3315 - t3311 - t3318) - t3333 * t1398;
t3340 = t1256 * t1398 + t1262 * t1469;
t3345 = t1256 * t1469 - t1262 * t1398;
t3347 = t12 * t1259 * t3340 + t1251 * t3345;
t3357 = t21 * (t12 * t1251 * t3340 - t1259 * t3345) - t37 * t39 * t3340;
t3366 = t1295 * (pkin(9) * t2 * t3347 + pkin(3) * t3357) + t1299 * (pkin(9) * t2 * t3357 - pkin(3) * t3347);
t3368 = t1284 * t230 + t12 - t226;
t3381 = t2609 * t1323 + t2611 + t39 * (-t1251 * t77 + t1440);
t3394 = 0.1e1 / (t1296 * (-0.2e1 * t1 * t2 * t3368 + t1429) + t1295 * (t1299 * (t30 * t3368 + t1435) - t125 + t3381 * pkin(3)) + t1299 * (pkin(9) * t2 * t3381 + t178) + (pkin(3) * t2 * t3368 - t1456) * pkin(9));
t3398 = pkin(3) * t1295 + pkin(2) + t1307;
t3402 = t124 * t1295 * t21 - t1533 + t251;
t3404 = t1251 * t3398 + t1259 * t3402;
t3409 = -t1251 * t3402 + t1259 * t3398;
t3411 = -t12 * t3340 * t3404 + t3345 * t3409;
t3436 = 0.1e1 / (t12 * (0.2e1 * t1296 * t2646 * t55 + t1295 * t1546 + t1559 + t1561 - t398) + (t1251 * (-0.2e1 * pkin(3) * t1296 * t21 * t244 + t124 * t1565 + t1295 * t1550) + t37 * (pkin(3) * t1295 * t1309 + pkin(9) * t1351 + t1296 * t30) * t1259) * t39);
t3438 = t1633 * m(3);
t3441 = t1636 * t2408 + t1964;
t3445 = t1636 * t2413 - t1967;
t3449 = t1637 * t1668 * t3445 + t1639 * t1668 * t3441 + t1666 * t1708;
t3456 = t1636 * t4 - t1644 * t2408;
t3461 = t1636 * t7 + t1644 * t2413;
t3465 = -t1637 * t1668 * t3461 + t1639 * t1668 * t3456 - t1666 * t1759;
t3467 = 0.2e1 * t1 * t2 * t21 * t3449 + t30 * t3465;
t3471 = -t1637 * t3441 + t1639 * t3445;
t3477 = t1637 * t3456 + t1639 * t3461;
t3480 = t21 * t3471 * t2 * t1 - t3477 * t30 / 0.2e1;
t3490 = -t1637 * t1668 * t2458 - t1639 * t1668 * t2461 + t12 * t1666;
t3503 = -t1684 * t30 * t3449 - t3490 * t93;
t3506 = t1694 * t3465 * pkin(3);
t3517 = t21 * (-t1647 * t40 * t77 + t1684 * t30 * t3471) + t1694 * t3477 * pkin(3);
t3522 = t1684 * t3490 * t30;
t3523 = t3449 * pkin(3);
t3524 = t77 * t3523;
t3525 = t3522 - t3524;
t3528 = t2 * t3490 * t2502;
t3532 = t1684 * t1647 * t90;
t3533 = t3471 * pkin(3);
t3534 = t77 * t3533;
t3537 = t2 * t1803;
t3539 = t96 * (t3532 + t3534) - t3532 + t3537 * t98 - t3534;
t3549 = -t21 * (t1684 * t3490 * t77 + t3523) * t2 + t1736 * t3465;
t3556 = t21 * t2 * (-t1728 * t1793 + t3533) + t1736 * t3477;
t3566 = t150 * (t1684 * t3449 * t77 - pkin(3) * t3490) * pkin(9);
t3570 = pkin(9) * t2544 * t3449 - t154 * t3490;
t3573 = t3490 * pkin(9) * t54;
t3588 = -t96 * (t1684 * t3471 * t77 + t1647 * t40) * t124 + t1684 * (pkin(9) * t2544 * t3471 + t154 * t1793) + t3537 * t40;
t3590 = t1681 * (t37 * (t1780 * t3467 - 0.2e1 * t1783 * t3480) - 0.2e1 * (t1647 * t1783 * t39 + t1780 * t3490) * t2457 * t2456) + t1680 * (t37 * (t1780 * (t21 * t3503 + t3506) + t3517 * t1783) + t1780 * (t3525 * t96 - t3522 + t3524 + t3528) + t3539 * t1783) + t37 * (t1780 * t3549 + t1783 * t3556) * pkin(9) + t1780 * (t1684 * t3570 - t3566 - t3573) - t3588 * t1783;
t3595 = t1641 * t1783 + t1647 * t1854;
t3600 = t1641 * t1854 - t1647 * t1783;
t3602 = t12 * t1644 * t3595 + t1636 * t3600;
t3612 = t21 * (t12 * t1636 * t3595 - t1644 * t3600) - t37 * t39 * t3595;
t3621 = t1680 * (pkin(9) * t2 * t3602 + pkin(3) * t3612) + t1684 * (pkin(9) * t2 * t3612 - pkin(3) * t3602);
t3623 = t1669 * t230 + t12 - t226;
t3636 = t2609 * t1708 + t2611 + t39 * (-t1636 * t77 + t1825);
t3649 = 0.1e1 / (t1681 * (-0.2e1 * t1 * t2 * t3623 + t1814) + t1680 * (t1684 * (t30 * t3623 + t1820) - t125 + t3636 * pkin(3)) + t1684 * (pkin(9) * t2 * t3636 + t178) + (pkin(3) * t2 * t3623 - t1841) * pkin(9));
t3653 = pkin(3) * t1680 + pkin(2) + t1692;
t3657 = t124 * t1680 * t21 - t1918 + t251;
t3659 = t1636 * t3653 + t1644 * t3657;
t3664 = -t1636 * t3657 + t1644 * t3653;
t3666 = -t12 * t3595 * t3659 + t3600 * t3664;
t3691 = 0.1e1 / (t12 * (0.2e1 * t1681 * t2646 * t55 + t1680 * t1931 + t1944 + t1946 - t398) + (t1636 * (-0.2e1 * pkin(3) * t1681 * t21 * t244 + t124 * t1950 + t1680 * t1935) + t37 * (pkin(3) * t1680 * t1694 + pkin(9) * t1736 + t1681 * t30) * t1644) * t39);
t3693 = t2018 * m(3);
t3696 = t2021 * t2408 + t2349;
t3700 = t2021 * t2413 - t2352;
t3704 = t2022 * t2053 * t3700 + t2024 * t2053 * t3696 + t2051 * t2093;
t3711 = t2021 * t4 - t2029 * t2408;
t3716 = t2021 * t7 + t2029 * t2413;
t3720 = -t2022 * t2053 * t3716 + t2024 * t2053 * t3711 - t2051 * t2144;
t3722 = 0.2e1 * t1 * t2 * t21 * t3704 + t30 * t3720;
t3726 = -t2022 * t3696 + t2024 * t3700;
t3732 = t2022 * t3711 + t2024 * t3716;
t3735 = t21 * t3726 * t2 * t1 - t3732 * t30 / 0.2e1;
t3745 = -t2022 * t2053 * t2458 - t2024 * t2053 * t2461 + t12 * t2051;
t3758 = -t2069 * t30 * t3704 - t3745 * t93;
t3761 = t2079 * t3720 * pkin(3);
t3772 = t21 * (-t2032 * t40 * t77 + t2069 * t30 * t3726) + t2079 * t3732 * pkin(3);
t3777 = t2069 * t3745 * t30;
t3778 = t3704 * pkin(3);
t3779 = t77 * t3778;
t3780 = t3777 - t3779;
t3783 = t2 * t3745 * t2502;
t3787 = t2069 * t2032 * t90;
t3788 = t3726 * pkin(3);
t3789 = t77 * t3788;
t3792 = t2 * t2188;
t3794 = t96 * (t3787 + t3789) - t3787 + t3792 * t98 - t3789;
t3804 = -t21 * (t2069 * t3745 * t77 + t3778) * t2 + t2121 * t3720;
t3811 = t21 * t2 * (-t2113 * t2178 + t3788) + t2121 * t3732;
t3821 = t150 * (t2069 * t3704 * t77 - pkin(3) * t3745) * pkin(9);
t3825 = pkin(9) * t2544 * t3704 - t154 * t3745;
t3828 = t3745 * pkin(9) * t54;
t3843 = -t96 * (t2069 * t3726 * t77 + t2032 * t40) * t124 + t2069 * (pkin(9) * t2544 * t3726 + t154 * t2178) + t3792 * t40;
t3845 = t2066 * (t37 * (t2165 * t3722 - 0.2e1 * t2168 * t3735) - 0.2e1 * (t2032 * t2168 * t39 + t2165 * t3745) * t2457 * t2456) + t2065 * (t37 * (t2165 * (t21 * t3758 + t3761) + t3772 * t2168) + t2165 * (t3780 * t96 - t3777 + t3779 + t3783) + t3794 * t2168) + t37 * (t2165 * t3804 + t2168 * t3811) * pkin(9) + t2165 * (t2069 * t3825 - t3821 - t3828) - t3843 * t2168;
t3850 = t2026 * t2168 + t2032 * t2239;
t3855 = t2026 * t2239 - t2032 * t2168;
t3857 = t12 * t2029 * t3850 + t2021 * t3855;
t3867 = t21 * (t12 * t2021 * t3850 - t2029 * t3855) - t37 * t39 * t3850;
t3876 = t2065 * (pkin(9) * t2 * t3857 + pkin(3) * t3867) + t2069 * (pkin(9) * t2 * t3867 - pkin(3) * t3857);
t3878 = t2054 * t230 + t12 - t226;
t3891 = t2609 * t2093 + t2611 + t39 * (-t2021 * t77 + t2210);
t3904 = 0.1e1 / (t2066 * (-0.2e1 * t1 * t2 * t3878 + t2199) + t2065 * (t2069 * (t30 * t3878 + t2205) - t125 + t3891 * pkin(3)) + t2069 * (pkin(9) * t2 * t3891 + t178) + (pkin(3) * t2 * t3878 - t2226) * pkin(9));
t3908 = pkin(3) * t2065 + pkin(2) + t2077;
t3912 = t124 * t2065 * t21 - t2303 + t251;
t3914 = t2021 * t3908 + t2029 * t3912;
t3919 = -t2021 * t3912 + t2029 * t3908;
t3921 = -t12 * t3850 * t3914 + t3855 * t3919;
t3946 = 0.1e1 / (t12 * (0.2e1 * t2066 * t2646 * t55 + t2065 * t2316 + t2329 + t2331 - t398) + (t2021 * (-0.2e1 * pkin(3) * t2066 * t21 * t244 + t124 * t2335 + t2065 * t2320) + t37 * (pkin(3) * t2065 * t2079 + pkin(9) * t2121 + t2066 * t30) * t2029) * t39);
t3948 = t2403 * m(3);
t3951 = -t199 * t188 * t2567 + t351 * t2628 * t2598 - t2673 * t2671 * t2645 - t632 * t622 * t2825 + t747 * t2884 * t2856 - t2928 * t2926 * t2901 - t1017 * t1007 * t3080 + t1132 * t3139 * t3111 - t3183 * t3181 * t3156 - t1402 * t1392 * t3335 + t1517 * t3394 * t3366 - t3438 * t3436 * t3411 - t1787 * t1777 * t3590 + t1902 * t3649 * t3621 - t3693 * t3691 * t3666 - t2172 * t2162 * t3845 + t2287 * t3904 * t3876 - t3948 * t3946 * t3921 - m(4) * g(2);
t3987 = t71 * (t37 * (-0.2e1 * t191 * t2450 - t194 * t2437) + 0.2e1 * (-t17 * t191 * t39 + t194 * t2465) * t2457 * t2456) + t70 * (t37 * (t194 * (-t21 * t2478 - t2481) + t2492 * t191) + t194 * (-t2500 * t96 + t2497 - t2499 - t2504) + t191 * t2515) - t37 * (-t191 * t2532 + t194 * t2525) * pkin(9) + t194 * (-t2547 * t74 + t2542 + t2550) - t191 * t2565;
t3993 = t17 * t194 * t52 - t10 * t191;
t3999 = t10 * t194 * t52 + t17 * t191;
t4001 = t12 * t14 * t3993 + t3 * t3999;
t4011 = t21 * (t12 * t3 * t3993 - t14 * t3999) - t37 * t39 * t3993;
t4020 = t70 * (-pkin(9) * t2 * t4001 - pkin(3) * t4011) - t74 * (pkin(9) * t2 * t4011 - pkin(3) * t4001);
t4026 = t12 * t2638 * t3993 - t2643 * t3999;
t4064 = t526 * (t37 * (-t2702 * t628 - 0.2e1 * t2715 * t625) + 0.2e1 * (-t39 * t492 * t625 + t2725 * t628) * t2457 * t2456) + t525 * (t37 * (t628 * (-t21 * t2738 - t2741) + t2752 * t625) + t628 * (-t2760 * t96 + t2757 - t2759 - t2763) + t625 * t2774) - t37 * (t2784 * t628 - t2791 * t625) * pkin(9) + t628 * (-t2805 * t529 + t2801 + t2808) - t625 * t2823;
t4070 = t492 * t513 * t628 - t486 * t625;
t4076 = t486 * t513 * t628 + t492 * t625;
t4078 = t12 * t4070 * t489 + t4076 * t481;
t4088 = t21 * (t12 * t4070 * t481 - t4076 * t489) - t37 * t39 * t4070;
t4097 = t525 * (-pkin(9) * t2 * t4078 - pkin(3) * t4088) - t529 * (pkin(9) * t2 * t4088 - pkin(3) * t4078);
t4103 = t12 * t2894 * t4070 - t2899 * t4076;
t4141 = t911 * (t37 * (-0.2e1 * t1010 * t2970 - t1013 * t2957) + 0.2e1 * (-t1010 * t39 * t877 + t1013 * t2980) * t2457 * t2456) + t910 * (t37 * (t1013 * (-t21 * t2993 - t2996) + t3007 * t1010) + t1013 * (-t3015 * t96 + t3012 - t3014 - t3018) + t1010 * t3029) - t37 * (-t1010 * t3046 + t1013 * t3039) * pkin(9) + t1013 * (-t3060 * t914 + t3056 + t3063) - t1010 * t3078;
t4147 = t1013 * t877 * t898 - t1010 * t871;
t4153 = t1013 * t871 * t898 + t1010 * t877;
t4155 = t12 * t4147 * t874 + t4153 * t866;
t4165 = t21 * (t12 * t4147 * t866 - t4153 * t874) - t37 * t39 * t4147;
t4174 = t910 * (-pkin(9) * t2 * t4155 - pkin(3) * t4165) - t914 * (pkin(9) * t2 * t4165 - pkin(3) * t4155);
t4180 = t12 * t3149 * t4147 - t3154 * t4153;
t4218 = t1296 * (t37 * (-0.2e1 * t1395 * t3225 - t1398 * t3212) + 0.2e1 * (-t1262 * t1395 * t39 + t1398 * t3235) * t2457 * t2456) + t1295 * (t37 * (t1398 * (-t21 * t3248 - t3251) + t3262 * t1395) + t1398 * (-t3270 * t96 + t3267 - t3269 - t3273) + t1395 * t3284) - t37 * (-t1395 * t3301 + t1398 * t3294) * pkin(9) + t1398 * (-t1299 * t3315 + t3311 + t3318) - t1395 * t3333;
t4224 = t1262 * t1283 * t1398 - t1256 * t1395;
t4230 = t1256 * t1283 * t1398 + t1262 * t1395;
t4232 = t12 * t1259 * t4224 + t1251 * t4230;
t4242 = t21 * (t12 * t1251 * t4224 - t1259 * t4230) - t37 * t39 * t4224;
t4251 = t1295 * (-pkin(9) * t2 * t4232 - pkin(3) * t4242) - t1299 * (pkin(9) * t2 * t4242 - pkin(3) * t4232);
t4257 = t12 * t3404 * t4224 - t3409 * t4230;
t4295 = t1681 * (t37 * (-0.2e1 * t1780 * t3480 - t1783 * t3467) + 0.2e1 * (-t1647 * t1780 * t39 + t1783 * t3490) * t2457 * t2456) + t1680 * (t37 * (t1783 * (-t21 * t3503 - t3506) + t3517 * t1780) + t1783 * (-t3525 * t96 + t3522 - t3524 - t3528) + t1780 * t3539) - t37 * (-t1780 * t3556 + t1783 * t3549) * pkin(9) + t1783 * (-t1684 * t3570 + t3566 + t3573) - t1780 * t3588;
t4301 = t1647 * t1668 * t1783 - t1641 * t1780;
t4307 = t1641 * t1668 * t1783 + t1647 * t1780;
t4309 = t12 * t1644 * t4301 + t1636 * t4307;
t4319 = t21 * (t12 * t1636 * t4301 - t1644 * t4307) - t37 * t39 * t4301;
t4328 = t1680 * (-pkin(9) * t2 * t4309 - pkin(3) * t4319) - t1684 * (pkin(9) * t2 * t4319 - pkin(3) * t4309);
t4334 = t12 * t3659 * t4301 - t3664 * t4307;
t4372 = t2066 * (t37 * (-0.2e1 * t2165 * t3735 - t2168 * t3722) + 0.2e1 * (-t2032 * t2165 * t39 + t2168 * t3745) * t2457 * t2456) + t2065 * (t37 * (t2168 * (-t21 * t3758 - t3761) + t3772 * t2165) + t2168 * (-t3780 * t96 + t3777 - t3779 - t3783) + t2165 * t3794) - t37 * (-t2165 * t3811 + t2168 * t3804) * pkin(9) + t2168 * (-t2069 * t3825 + t3821 + t3828) - t2165 * t3843;
t4378 = t2032 * t2053 * t2168 - t2026 * t2165;
t4384 = t2026 * t2053 * t2168 + t2032 * t2165;
t4386 = t12 * t2029 * t4378 + t2021 * t4384;
t4396 = t21 * (t12 * t2021 * t4378 - t2029 * t4384) - t37 * t39 * t4378;
t4405 = t2065 * (-pkin(9) * t2 * t4386 - pkin(3) * t4396) - t2069 * (pkin(9) * t2 * t4396 - pkin(3) * t4386);
t4411 = t12 * t3914 * t4378 - t3919 * t4384;
t4415 = -t199 * t188 * t3987 + t351 * t2628 * t4020 - t2673 * t2671 * t4026 - t632 * t622 * t4064 + t747 * t2884 * t4097 - t2928 * t2926 * t4103 - t1017 * t1007 * t4141 + t1132 * t3139 * t4174 - t3183 * t3181 * t4180 - t1402 * t1392 * t4218 + t1517 * t3394 * t4251 - t3438 * t3436 * t4257 - t1787 * t1777 * t4295 + t1902 * t3649 * t4328 - t3693 * t3691 * t4334 - t2172 * t2162 * t4372 + t2287 * t3904 * t4405 - t3948 * t3946 * t4411 - m(4) * g(3);
t4416 = sin(xP(6));
t4418 = cos(xP(6));
t4420 = -t4416 * koppelP(1,2) + t4418 * koppelP(1,1);
t4421 = sin(xP(5));
t4423 = cos(xP(5));
t4424 = koppelP(1,3) * t4423;
t4425 = t4420 * t4421 - t4424;
t4426 = cos(xP(4));
t4428 = sin(xP(4));
t4431 = t4416 * koppelP(1,1) + t4418 * koppelP(1,2);
t4432 = t4431 * t4428;
t4433 = t4425 * t4426 - t4432;
t4437 = t4431 * t4426;
t4438 = t4425 * t4428 + t4437;
t4459 = -t4416 * koppelP(2,2) + t4418 * koppelP(2,1);
t4461 = koppelP(2,3) * t4423;
t4462 = t4421 * t4459 - t4461;
t4466 = t4416 * koppelP(2,1) + t4418 * koppelP(2,2);
t4467 = t4466 * t4428;
t4468 = t4426 * t4462 - t4467;
t4472 = t4466 * t4426;
t4473 = t4428 * t4462 + t4472;
t4494 = -t4416 * koppelP(3,2) + t4418 * koppelP(3,1);
t4496 = koppelP(3,3) * t4423;
t4497 = t4421 * t4494 - t4496;
t4501 = t4416 * koppelP(3,1) + t4418 * koppelP(3,2);
t4502 = t4501 * t4428;
t4503 = t4426 * t4497 - t4502;
t4507 = t4501 * t4426;
t4508 = t4428 * t4497 + t4507;
t4529 = -t4416 * koppelP(4,2) + t4418 * koppelP(4,1);
t4531 = koppelP(4,3) * t4423;
t4532 = t4421 * t4529 - t4531;
t4536 = t4416 * koppelP(4,1) + t4418 * koppelP(4,2);
t4537 = t4536 * t4428;
t4538 = t4426 * t4532 - t4537;
t4542 = t4536 * t4426;
t4543 = t4428 * t4532 + t4542;
t4564 = -t4416 * koppelP(5,2) + t4418 * koppelP(5,1);
t4566 = koppelP(5,3) * t4423;
t4567 = t4421 * t4564 - t4566;
t4571 = t4416 * koppelP(5,1) + t4418 * koppelP(5,2);
t4572 = t4571 * t4428;
t4573 = t4426 * t4567 - t4572;
t4577 = t4571 * t4426;
t4578 = t4428 * t4567 + t4577;
t4599 = -t4416 * koppelP(6,2) + t4418 * koppelP(6,1);
t4601 = koppelP(6,3) * t4423;
t4602 = t4421 * t4599 - t4601;
t4606 = t4416 * koppelP(6,1) + t4418 * koppelP(6,2);
t4607 = t4606 * t4428;
t4608 = t4426 * t4602 - t4607;
t4612 = t4606 * t4426;
t4613 = t4428 * t4602 + t4612;
t4632 = t4421 * g(2);
t4634 = g(3) * rSges(4,2);
t4637 = rSges(4,2) * t4416;
t4645 = g(3) * t4421;
t4652 = t4416 * g(2);
t4660 = -t198 * t197 * (t188 * t2567 * t4433 + t188 * t3987 * t4438) + t351 * (t2598 * t2628 * t4433 + t2628 * t4020 * t4438) - t478 * m(3) * (t2645 * t2671 * t4433 + t2671 * t4026 * t4438) - t198 * t631 * (t2825 * t4468 * t622 + t4064 * t4473 * t622) + t747 * (t2856 * t2884 * t4468 + t2884 * t4097 * t4473) - t863 * m(3) * (t2901 * t2926 * t4468 + t2926 * t4103 * t4473) - t198 * t1016 * (t1007 * t3080 * t4503 + t1007 * t4141 * t4508) + t1132 * (t3111 * t3139 * t4503 + t3139 * t4174 * t4508) - t1248 * m(3) * (t3156 * t3181 * t4503 + t3181 * t4180 * t4508) - t198 * t1401 * (t1392 * t3335 * t4538 + t1392 * t4218 * t4543) + t1517 * (t3366 * t3394 * t4538 + t3394 * t4251 * t4543) - t1633 * m(3) * (t3411 * t3436 * t4538 + t3436 * t4257 * t4543) - t198 * t1786 * (t1777 * t3590 * t4573 + t1777 * t4295 * t4578) + t1902 * (t3621 * t3649 * t4573 + t3649 * t4328 * t4578) - t2018 * m(3) * (t3666 * t3691 * t4573 + t3691 * t4334 * t4578) - t198 * t2171 * (t2162 * t3845 * t4608 + t2162 * t4372 * t4613) + t2287 * (t3876 * t3904 * t4608 + t3904 * t4405 * t4613) - t2403 * m(3) * (t3921 * t3946 * t4608 + t3946 * t4411 * t4613) + (t4426 * (t4418 * (-t4632 * rSges(4,1) - t4634) + t4637 * t4632 + rSges(4,3) * t4423 * g(2) - t4416 * rSges(4,1) * g(3)) + t4428 * (t4418 * (g(2) * rSges(4,2) - t4645 * rSges(4,1)) + t4634 * t4416 * t4421 + rSges(4,1) * t4652 + rSges(4,3) * g(3) * t4423)) * m(4);
t4662 = -t4420 * t4421 + t4424;
t4664 = t4426 * t4662 + t4432;
t4667 = t4418 * t4423;
t4669 = t4416 * t4423;
t4672 = -t4421 * koppelP(1,3) - t4667 * koppelP(1,1) + t4669 * koppelP(1,2);
t4679 = t287 * t50;
t4686 = t416 * t50;
t4694 = -t4421 * t4459 + t4461;
t4696 = t4426 * t4694 + t4467;
t4702 = -t4421 * koppelP(2,3) - t4667 * koppelP(2,1) + t4669 * koppelP(2,2);
t4709 = t690 * t511;
t4716 = t804 * t511;
t4724 = -t4421 * t4494 + t4496;
t4726 = t4426 * t4724 + t4502;
t4732 = -t4421 * koppelP(3,3) - t4667 * koppelP(3,1) + t4669 * koppelP(3,2);
t4739 = t1075 * t896;
t4746 = t1189 * t896;
t4754 = -t4421 * t4529 + t4531;
t4756 = t4426 * t4754 + t4537;
t4762 = -t4421 * koppelP(4,3) - t4667 * koppelP(4,1) + t4669 * koppelP(4,2);
t4769 = t1460 * t1281;
t4776 = t1574 * t1281;
t4784 = -t4421 * t4564 + t4566;
t4786 = t4426 * t4784 + t4572;
t4792 = -t4421 * koppelP(5,3) - t4667 * koppelP(5,1) + t4669 * koppelP(5,2);
t4799 = t1845 * t1666;
t4806 = t1959 * t1666;
t4814 = -t4421 * t4599 + t4601;
t4816 = t4426 * t4814 + t4607;
t4822 = -t4421 * koppelP(6,3) - t4667 * koppelP(6,1) + t4669 * koppelP(6,2);
t4829 = t2230 * t2051;
t4836 = t2344 * t2051;
t4845 = t4418 * rSges(4,1) - t4637;
t4856 = g(1) * rSges(4,1);
t4861 = -t198 * t197 * (t184 * t188 * t4664 + t188 * t3987 * t4672) + t351 * (t224 * t4664 * t4679 + t2628 * t4020 * t4672) - t478 * m(3) * (t2671 * t4026 * t4672 - t377 * t4664 * t4686) - t198 * t631 * (t4064 * t4702 * t622 + t4696 * t618 * t622) + t747 * (t2884 * t4097 * t4702 + t4696 * t4709 * t654) - t863 * m(3) * (t2926 * t4103 * t4702 - t4696 * t4716 * t773) - t198 * t1016 * (t1003 * t1007 * t4726 + t1007 * t4141 * t4732) + t1132 * (t1039 * t4726 * t4739 + t3139 * t4174 * t4732) - t1248 * m(3) * (-t1158 * t4726 * t4746 + t3181 * t4180 * t4732) - t198 * t1401 * (t1388 * t1392 * t4756 + t1392 * t4218 * t4762) + t1517 * (t1424 * t4756 * t4769 + t3394 * t4251 * t4762) - t1633 * m(3) * (-t1543 * t4756 * t4776 + t3436 * t4257 * t4762) - t198 * t1786 * (t1773 * t1777 * t4786 + t1777 * t4295 * t4792) + t1902 * (t1809 * t4786 * t4799 + t3649 * t4328 * t4792) - t2018 * m(3) * (-t1928 * t4786 * t4806 + t3691 * t4334 * t4792) - t198 * t2171 * (t2158 * t2162 * t4816 + t2162 * t4372 * t4822) + t2287 * (t2194 * t4816 * t4829 + t3904 * t4405 * t4822) - t2403 * m(3) * (-t2313 * t4816 * t4836 + t3946 * t4411 * t4822) - m(4) * (t4426 * g(1) * (-t4421 * t4845 + t4423 * rSges(4,3)) - t4423 * t4845 * g(3) + g(1) * rSges(4,2) * t4428 * t4418 + t4856 * t4416 * t4428 - rSges(4,3) * t4645);
t4863 = t4428 * t4662 - t4437;
t4885 = t4428 * t4694 - t4472;
t4907 = t4428 * t4724 - t4507;
t4929 = t4428 * t4754 - t4542;
t4951 = t4428 * t4784 - t4577;
t4973 = t4428 * t4814 - t4612;
t5016 = -t198 * t197 * (t184 * t188 * t4863 - t188 * t2567 * t4672) + t351 * (t224 * t4679 * t4863 - t2598 * t2628 * t4672) - t478 * m(3) * (-t2645 * t2671 * t4672 - t377 * t4686 * t4863) - t198 * t631 * (-t2825 * t4702 * t622 + t4885 * t618 * t622) + t747 * (-t2856 * t2884 * t4702 + t4709 * t4885 * t654) - t863 * m(3) * (-t2901 * t2926 * t4702 - t4716 * t4885 * t773) - t198 * t1016 * (t1003 * t1007 * t4907 - t1007 * t3080 * t4732) + t1132 * (t1039 * t4739 * t4907 - t3111 * t3139 * t4732) - t1248 * m(3) * (-t1158 * t4746 * t4907 - t3156 * t3181 * t4732) - t198 * t1401 * (t1388 * t1392 * t4929 - t1392 * t3335 * t4762) + t1517 * (t1424 * t4769 * t4929 - t3366 * t3394 * t4762) - t1633 * m(3) * (-t1543 * t4776 * t4929 - t3411 * t3436 * t4762) - t198 * t1786 * (t1773 * t1777 * t4951 - t1777 * t3590 * t4792) + t1902 * (t1809 * t4799 * t4951 - t3621 * t3649 * t4792) - t2018 * m(3) * (-t1928 * t4806 * t4951 - t3666 * t3691 * t4792) - t198 * t2171 * (t2158 * t2162 * t4973 - t2162 * t3845 * t4822) + t2287 * (t2194 * t4829 * t4973 - t3876 * t3904 * t4822) - t2403 * m(3) * (-t2313 * t4836 * t4973 - t3921 * t3946 * t4822) + m(4) * (t4423 * (-g(1) * t4428 * rSges(4,3) - g(2) * t4418 * rSges(4,1) + t4652 * rSges(4,2)) + t4418 * (t4421 * t4428 * rSges(4,1) + t4426 * rSges(4,2)) * g(1) - rSges(4,2) * g(1) * t4416 * t4428 * t4421 + t4856 * t4416 * t4426 - rSges(4,3) * t4632);
unknown(1,1) = t2407;
unknown(2,1) = t3951;
unknown(3,1) = t4415;
unknown(4,1) = t4660;
unknown(5,1) = t4861;
unknown(6,1) = t5016;
taugX  = unknown;
