% Calculate Gravitation load for parallel robot
% P6PRRRRR6V2G8P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
%
% Output:
% taugX [6x1]
%   forces required to compensate gravitation load
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 04:24
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2(xP, qJ, g, legFrame, ...
  koppelP, pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: g has to be [3x1] (double)');
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G8P4A0_gravload_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From gravvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-13 01:39:42
% EndTime: 2020-03-13 01:39:45
% DurationCPUTime: 2.94s
% Computational Cost: add. (24287->1820), mult. (62652->3734), div. (162->30), fcn. (60179->74), ass. (0->1044)
unknown=NaN(6,1);
t1 = pkin(9) * pkin(3);
t2 = sin(pkin(6));
t3 = cos(qJ(2,1));
t4 = cos(pkin(10));
t5 = sin(legFrame(1,3));
t7 = sin(pkin(10));
t8 = cos(legFrame(1,3));
t10 = t5 * t4 + t8 * t7;
t11 = t10 * t3;
t12 = cos(pkin(4));
t14 = sin(qJ(2,1));
t17 = t8 * t4 - t5 * t7;
t18 = t17 * t14;
t19 = t12 * t11 + t18;
t20 = t19 * t2;
t21 = cos(pkin(5));
t25 = cos(pkin(6));
t26 = t25 ^ 2;
t27 = pkin(9) ^ 2;
t29 = pkin(3) ^ 2;
t30 = t27 * t26 - t27 + t29;
t31 = t10 * t14;
t33 = t17 * t3;
t34 = -t12 * t31 + t33;
t37 = sin(pkin(5));
t39 = sin(pkin(4));
t40 = t39 * pkin(3);
t41 = t2 * t40;
t42 = t21 - 0.1e1;
t43 = t42 * pkin(9);
t44 = t21 + 0.1e1;
t50 = cos(legFrame(1,2));
t52 = sin(legFrame(1,2));
t53 = t21 * t3;
t54 = t2 * pkin(3);
t55 = pkin(9) * t54;
t62 = t2 * t12;
t63 = pkin(3) * t62;
t65 = t44 * t43 * t63;
t66 = t37 * t39 * (t55 * t53 - t30 * t14 / 0.2e1) - t65;
t70 = cos(qJ(3,1));
t71 = t70 ^ 2;
t74 = sin(qJ(3,1));
t77 = pkin(9) * t25 + pkin(8);
t84 = pkin(9) * t2 * t74;
t86 = 0.2e1 * t84 + pkin(2);
t90 = t30 * t39;
t92 = t74 * t10 * t90;
t93 = t77 * pkin(3);
t94 = t19 * t93;
t96 = t21 ^ 2;
t98 = t39 * pkin(2);
t100 = t2 * t10 * pkin(9);
t104 = t39 * t3;
t105 = t30 * t74;
t107 = pkin(3) * t12;
t108 = t77 * t107;
t111 = pkin(3) * t14;
t116 = t30 * t12;
t117 = t74 * t116;
t118 = pkin(3) * t3;
t119 = t77 * t39;
t120 = t119 * t118;
t123 = t12 * pkin(2);
t124 = pkin(9) * t2;
t125 = t124 * t123;
t126 = t37 * (t21 * (t105 * t104 + t108) + t86 * t39 * t111) + t96 * (-t117 + t120) + t117 - t125 - t120;
t130 = t10 * t39;
t131 = t77 * t74;
t137 = t74 * pkin(2);
t139 = pkin(9) * t26;
t140 = t2 * t137 + pkin(9) - t139;
t150 = t96 * t2;
t152 = t77 * pkin(9);
t154 = pkin(2) * pkin(3);
t161 = t77 * t12;
t167 = t39 * t14;
t171 = t37 * (t21 * t2 * (t39 * t118 + t74 * t161) + t140 * t167) * pkin(9);
t175 = t96 * (t131 * t104 - t107) * t124;
t176 = t2 * t152;
t178 = pkin(3) * t123;
t180 = t74 * (-t176 * t104 + t178);
t181 = t1 * t62;
t184 = t71 * (t50 * (t37 * (0.2e1 * t21 * t20 * t1 + t34 * t30) + 0.2e1 * t10 * t44 * t43 * t41) - 0.2e1 * t66 * t52) + t70 * (t50 * (t37 * (t21 * (t77 * t10 * t40 - t74 * t19 * t30) + t86 * t34 * pkin(3)) + t96 * (-t92 - t94) + t92 - t100 * t98 + t94) + t52 * t126) + t50 * (t37 * (-t21 * t2 * (t19 * pkin(3) - t131 * t130) + t140 * t34) * pkin(9) - t150 * (t74 * t19 * t77 + t10 * t40) * pkin(9) + t74 * (t130 * t154 + t20 * t152) + t100 * t40) + t52 * (t171 + t175 + t180 + t181);
t185 = -0.2e1 * t71 * t66;
t188 = 0.1e1 / (t70 * t126 + t171 + t175 + t180 + t181 + t185);
t191 = sin(legFrame(1,1));
t194 = cos(legFrame(1,1));
t197 = -g(2) * t50 * t191 + g(3) * t50 * t194 + g(1) * t52;
t198 = m(1) + m(2) + m(3);
t199 = t198 * t197;
t202 = t12 * t33 - t31;
t205 = t37 * pkin(3);
t206 = t39 * t17;
t209 = t12 * t18 + t11;
t215 = t21 * t2;
t217 = t2 * t37;
t218 = t17 * pkin(9);
t224 = t70 * (t21 * t202 * pkin(3) + t2 * t209 * pkin(9) - t206 * t205) + t74 * (t215 * t202 * pkin(9) - t39 * t218 * t217 - t209 * pkin(3));
t226 = t96 * t12;
t228 = 0.2e1 * t55 * t226;
t230 = t39 * t37;
t231 = t1 * t230;
t234 = t30 * t37;
t235 = t234 * t167;
t236 = 0.2e1 * t181;
t239 = t96 * t116;
t240 = t21 * t234;
t244 = t2 * pkin(9) * t37;
t246 = 0.2e1 * t244 * t39 * t111;
t249 = t96 * t119;
t251 = t77 * t37;
t253 = t21 * t251 * t107;
t255 = t37 * t14 * pkin(2);
t257 = -t77 * t3 + t255;
t263 = t96 * t152;
t265 = t37 * t12;
t267 = t21 * t152;
t268 = t267 * t2 * t265;
t273 = t96 * pkin(3);
t274 = t273 * t62;
t276 = t2 * t230;
t282 = (t25 + 0.1e1) * (t25 - 0.1e1) * pkin(9);
t283 = t282 * t37 * t167;
t287 = 0.1e1 / (t71 * (-0.2e1 * t231 * t2 * t53 + t228 + t235 - t236) + t70 * (t74 * (t240 * t104 + t116 - t239 + t246) + t249 * t118 + t253 + t39 * t257 * pkin(3) - t125) + t74 * (t263 * t2 * t104 + t39 * t257 * t124 + t178 + t268) + (t276 * pkin(3) * t53 - t274 - t283 + t63) * pkin(9));
t294 = t37 * (m(3) * pkin(8) + mrSges(3,3));
t295 = t21 * (-mrSges(3,1) * t74 - mrSges(3,2) * t70) + t294 - mrSges(2,2);
t298 = t52 * t191;
t303 = t52 * t194;
t308 = g(1) * t8 * t50 + g(2) * (t5 * t194 + t8 * t298) + g(3) * (t5 * t191 - t8 * t303);
t309 = t308 * t7;
t320 = -g(1) * t5 * t50 + g(2) * (t8 * t194 - t5 * t298) + g(3) * (t8 * t191 + t5 * t303);
t321 = t320 * t4;
t322 = t309 - t321;
t325 = m(3) * pkin(2);
t328 = t70 * mrSges(3,1) - t74 * mrSges(3,2) + mrSges(2,1) + t325;
t343 = t39 * t197;
t347 = t14 * (t12 * t322 * t295 - t39 * t197 * t295 + t4 * t328 * t308 + t7 * t328 * t320) + t3 * (t12 * t328 * t322 - t4 * t308 * t295 - t7 * t320 * t295 - t328 * t343);
t360 = t84 + pkin(2);
t363 = pkin(3) * t21 * t74;
t364 = t363 - t251;
t373 = t70 * (t12 * (t124 * t21 * t14 + t118) * t17 + (t124 * t53 - t111) * t10) + t12 * (-t364 * t14 + t3 * t360) * t17 - t10 * (t360 * t14 + t3 * t364);
t376 = t21 * t77;
t377 = t376 * t205;
t379 = pkin(9) * t2 * pkin(2);
t380 = -t96 * t105 + t105 + t377 - t379;
t382 = t96 * t93;
t383 = t37 * t74;
t384 = t21 * t30;
t386 = t384 * t383 + t382 - t93;
t394 = t124 * t273;
t396 = t267 * t2 * t383;
t398 = (t137 + t124) * pkin(3);
t402 = t21 * t205;
t403 = t96 * t131 - t131 + t402;
t412 = 0.1e1 / (t185 + t70 * (t12 * t380 + t39 * (t86 * t37 * t111 + t3 * t386)) + t12 * (-t394 + t396 + t398) + t39 * (t140 * t37 * t14 + t3 * t2 * t403) * pkin(9));
t413 = t3 * mrSges(3,1);
t414 = -t21 * t322;
t416 = t14 * t4;
t417 = t320 * mrSges(3,2);
t421 = t37 * mrSges(3,1);
t430 = -t4 * t308 * t14 - t7 * t320 * t14 + t197 * t104;
t433 = t39 * mrSges(3,1);
t436 = t308 * mrSges(3,2);
t451 = t14 * mrSges(3,1);
t454 = mrSges(3,2) * t37;
t471 = t70 * (t12 * (-t309 * mrSges(3,2) * t14 - t197 * t421 - t414 * t413 + t417 * t416) - t21 * t430 * mrSges(3,1) + t4 * (t320 * t37 * t433 + t3 * t436) + t7 * (-t308 * t37 * t433 + t3 * t417) + t197 * mrSges(3,2) * t167) + t74 * (t12 * (t414 * mrSges(3,2) * t3 + t197 * t454 - t309 * t451 + t321 * t451) + t21 * t430 * mrSges(3,2) + t4 * (-t417 * t230 + t308 * t413) + t7 * (t436 * t230 + t320 * t413) + t343 * t451);
t474 = cos(qJ(2,2));
t475 = sin(legFrame(2,3));
t477 = cos(legFrame(2,3));
t479 = t475 * t4 + t477 * t7;
t480 = t479 * t474;
t482 = sin(qJ(2,2));
t485 = t477 * t4 - t475 * t7;
t486 = t485 * t482;
t487 = t12 * t480 + t486;
t488 = t487 * t2;
t492 = t479 * t482;
t494 = t485 * t474;
t495 = -t12 * t492 + t494;
t504 = cos(legFrame(2,2));
t506 = sin(legFrame(2,2));
t507 = t21 * t474;
t514 = t37 * t39 * (t55 * t507 - t30 * t482 / 0.2e1) - t65;
t518 = cos(qJ(3,2));
t519 = t518 ^ 2;
t522 = sin(qJ(3,2));
t530 = pkin(9) * t2 * t522;
t532 = 0.2e1 * t530 + pkin(2);
t537 = t522 * t479 * t90;
t538 = t487 * t93;
t542 = t2 * t479 * pkin(9);
t546 = t39 * t474;
t547 = t30 * t522;
t551 = pkin(3) * t482;
t556 = t522 * t116;
t557 = pkin(3) * t474;
t558 = t119 * t557;
t561 = t37 * (t21 * (t547 * t546 + t108) + t532 * t39 * t551) + t96 * (-t556 + t558) + t556 - t125 - t558;
t565 = t479 * t39;
t566 = t77 * t522;
t572 = t522 * pkin(2);
t574 = t2 * t572 + pkin(9) - t139;
t597 = t39 * t482;
t601 = t37 * (t21 * t2 * (t522 * t161 + t39 * t557) + t574 * t597) * pkin(9);
t605 = t96 * (t566 * t546 - t107) * t124;
t608 = t522 * (-t176 * t546 + t178);
t611 = t519 * (t504 * (t37 * (0.2e1 * t21 * t488 * t1 + t495 * t30) + 0.2e1 * t479 * t44 * t43 * t41) - 0.2e1 * t514 * t506) + t518 * (t504 * (t37 * (t21 * (-t522 * t487 * t30 + t77 * t479 * t40) + t532 * t495 * pkin(3)) + t96 * (-t537 - t538) + t537 - t542 * t98 + t538) + t506 * t561) + t504 * (t37 * (-t21 * t2 * (t487 * pkin(3) - t566 * t565) + t574 * t495) * pkin(9) - t150 * (t522 * t487 * t77 + t479 * t40) * pkin(9) + t522 * (t488 * t152 + t565 * t154) + t542 * t40) + t506 * (t601 + t605 + t608 + t181);
t612 = -0.2e1 * t519 * t514;
t615 = 0.1e1 / (t518 * t561 + t181 + t601 + t605 + t608 + t612);
t618 = sin(legFrame(2,1));
t621 = cos(legFrame(2,1));
t624 = -g(2) * t504 * t618 + g(3) * t504 * t621 + g(1) * t506;
t625 = t198 * t624;
t628 = t12 * t494 - t492;
t631 = t39 * t485;
t634 = t12 * t486 + t480;
t641 = t485 * pkin(9);
t647 = t518 * (t21 * t628 * pkin(3) + t2 * t634 * pkin(9) - t631 * t205) + t522 * (t215 * t628 * pkin(9) - t39 * t641 * t217 - t634 * pkin(3));
t652 = t234 * t597;
t658 = 0.2e1 * t244 * t39 * t551;
t663 = t37 * t482 * pkin(2);
t665 = -t77 * t474 + t663;
t679 = t282 * t37 * t597;
t683 = 0.1e1 / (t519 * (-0.2e1 * t231 * t2 * t507 + t228 - t236 + t652) + t518 * (t522 * (t240 * t546 + t116 - t239 + t658) + t249 * t557 + t253 + t39 * t665 * pkin(3) - t125) + t522 * (t39 * t665 * t124 + t263 * t2 * t546 + t178 + t268) + (t276 * pkin(3) * t507 - t274 + t63 - t679) * pkin(9));
t688 = t21 * (-mrSges(3,1) * t522 - mrSges(3,2) * t518) + t294 - mrSges(2,2);
t691 = t506 * t618;
t696 = t506 * t621;
t701 = g(1) * t477 * t504 + g(2) * (t475 * t621 + t477 * t691) + g(3) * (t475 * t618 - t477 * t696);
t702 = t701 * t7;
t713 = -g(1) * t475 * t504 + g(2) * (-t475 * t691 + t477 * t621) + g(3) * (t475 * t696 + t477 * t618);
t714 = t713 * t4;
t715 = t702 - t714;
t720 = t518 * mrSges(3,1) - t522 * mrSges(3,2) + mrSges(2,1) + t325;
t735 = t39 * t624;
t739 = t482 * (t12 * t715 * t688 - t39 * t624 * t688 + t4 * t720 * t701 + t7 * t720 * t713) + t474 * (t12 * t720 * t715 - t4 * t701 * t688 - t7 * t713 * t688 - t720 * t735);
t752 = t530 + pkin(2);
t755 = pkin(3) * t21 * t522;
t756 = t755 - t251;
t765 = t518 * (t12 * (t124 * t21 * t482 + t557) * t485 + (t124 * t507 - t551) * t479) + t12 * (t474 * t752 - t756 * t482) * t485 - t479 * (t474 * t756 + t752 * t482);
t768 = -t96 * t547 + t377 - t379 + t547;
t770 = t37 * t522;
t772 = t384 * t770 + t382 - t93;
t781 = t267 * t2 * t770;
t783 = (t572 + t124) * pkin(3);
t787 = t96 * t566 + t402 - t566;
t796 = 0.1e1 / (t612 + t518 * (t12 * t768 + t39 * (t532 * t37 * t551 + t474 * t772)) + t12 * (-t394 + t781 + t783) + t39 * (t474 * t2 * t787 + t574 * t37 * t482) * pkin(9));
t797 = t474 * mrSges(3,1);
t798 = -t21 * t715;
t800 = t482 * t4;
t801 = t713 * mrSges(3,2);
t813 = -t4 * t701 * t482 - t7 * t713 * t482 + t624 * t546;
t818 = t701 * mrSges(3,2);
t833 = t482 * mrSges(3,1);
t852 = t518 * (t12 * (-t702 * mrSges(3,2) * t482 - t624 * t421 - t798 * t797 + t801 * t800) - t21 * t813 * mrSges(3,1) + t4 * (t713 * t37 * t433 + t474 * t818) + t7 * (-t701 * t37 * t433 + t474 * t801) + t624 * mrSges(3,2) * t597) + t522 * (t12 * (t798 * mrSges(3,2) * t474 + t624 * t454 - t702 * t833 + t714 * t833) + t21 * t813 * mrSges(3,2) + t4 * (-t801 * t230 + t701 * t797) + t7 * (t818 * t230 + t713 * t797) + t735 * t833);
t855 = cos(qJ(2,3));
t856 = sin(legFrame(3,3));
t858 = cos(legFrame(3,3));
t860 = t856 * t4 + t858 * t7;
t861 = t860 * t855;
t863 = sin(qJ(2,3));
t866 = t858 * t4 - t856 * t7;
t867 = t866 * t863;
t868 = t12 * t861 + t867;
t869 = t868 * t2;
t873 = t860 * t863;
t875 = t866 * t855;
t876 = -t12 * t873 + t875;
t885 = cos(legFrame(3,2));
t887 = sin(legFrame(3,2));
t888 = t21 * t855;
t895 = t37 * t39 * (t55 * t888 - t30 * t863 / 0.2e1) - t65;
t899 = cos(qJ(3,3));
t900 = t899 ^ 2;
t903 = sin(qJ(3,3));
t911 = pkin(9) * t2 * t903;
t913 = 0.2e1 * t911 + pkin(2);
t918 = t903 * t860 * t90;
t919 = t868 * t93;
t923 = t2 * t860 * pkin(9);
t927 = t39 * t855;
t928 = t30 * t903;
t932 = pkin(3) * t863;
t937 = t903 * t116;
t938 = pkin(3) * t855;
t939 = t119 * t938;
t942 = t37 * (t21 * (t928 * t927 + t108) + t913 * t39 * t932) + t96 * (-t937 + t939) + t937 - t125 - t939;
t946 = t860 * t39;
t947 = t77 * t903;
t953 = t903 * pkin(2);
t955 = t2 * t953 + pkin(9) - t139;
t978 = t39 * t863;
t982 = t37 * (t21 * t2 * (t903 * t161 + t39 * t938) + t955 * t978) * pkin(9);
t986 = t96 * (t947 * t927 - t107) * t124;
t989 = t903 * (-t176 * t927 + t178);
t992 = t900 * (t885 * (t37 * (0.2e1 * t21 * t869 * t1 + t876 * t30) + 0.2e1 * t860 * t44 * t43 * t41) - 0.2e1 * t895 * t887) + t899 * (t885 * (t37 * (t21 * (-t903 * t868 * t30 + t77 * t860 * t40) + t913 * t876 * pkin(3)) + t96 * (-t918 - t919) + t918 - t923 * t98 + t919) + t887 * t942) + t885 * (t37 * (-t21 * t2 * (t868 * pkin(3) - t947 * t946) + t955 * t876) * pkin(9) - t150 * (t903 * t868 * t77 + t860 * t40) * pkin(9) + t903 * (t869 * t152 + t946 * t154) + t923 * t40) + t887 * (t982 + t986 + t989 + t181);
t993 = -0.2e1 * t900 * t895;
t996 = 0.1e1 / (t899 * t942 + t181 + t982 + t986 + t989 + t993);
t999 = sin(legFrame(3,1));
t1002 = cos(legFrame(3,1));
t1005 = -g(2) * t885 * t999 + g(3) * t885 * t1002 + g(1) * t887;
t1006 = t198 * t1005;
t1009 = t12 * t875 - t873;
t1012 = t39 * t866;
t1015 = t12 * t867 + t861;
t1022 = t866 * pkin(9);
t1028 = t899 * (t21 * t1009 * pkin(3) + t2 * t1015 * pkin(9) - t1012 * t205) + t903 * (t215 * t1009 * pkin(9) - t39 * t1022 * t217 - t1015 * pkin(3));
t1033 = t234 * t978;
t1039 = 0.2e1 * t244 * t39 * t932;
t1044 = t37 * t863 * pkin(2);
t1046 = -t77 * t855 + t1044;
t1060 = t282 * t37 * t978;
t1064 = 0.1e1 / (t900 * (-0.2e1 * t231 * t2 * t888 + t1033 + t228 - t236) + t899 * (t903 * (t240 * t927 + t1039 + t116 - t239) + t249 * t938 + t253 + t39 * t1046 * pkin(3) - t125) + t903 * (t39 * t1046 * t124 + t263 * t2 * t927 + t178 + t268) + (t276 * pkin(3) * t888 - t1060 - t274 + t63) * pkin(9));
t1069 = t21 * (-mrSges(3,1) * t903 - mrSges(3,2) * t899) + t294 - mrSges(2,2);
t1072 = t887 * t999;
t1077 = t887 * t1002;
t1082 = g(1) * t858 * t885 + g(2) * (t856 * t1002 + t858 * t1072) + g(3) * (-t858 * t1077 + t856 * t999);
t1083 = t1082 * t7;
t1094 = -g(1) * t856 * t885 + g(2) * (t858 * t1002 - t856 * t1072) + g(3) * (t856 * t1077 + t858 * t999);
t1095 = t1094 * t4;
t1096 = t1083 - t1095;
t1101 = t899 * mrSges(3,1) - t903 * mrSges(3,2) + mrSges(2,1) + t325;
t1116 = t39 * t1005;
t1120 = t863 * (-t39 * t1005 * t1069 + t12 * t1096 * t1069 + t4 * t1101 * t1082 + t7 * t1101 * t1094) + t855 * (-t4 * t1082 * t1069 - t7 * t1094 * t1069 + t12 * t1101 * t1096 - t1101 * t1116);
t1133 = t911 + pkin(2);
t1136 = pkin(3) * t21 * t903;
t1137 = t1136 - t251;
t1146 = t899 * (t12 * (t124 * t21 * t863 + t938) * t866 + (t124 * t888 - t932) * t860) + t12 * (t855 * t1133 - t1137 * t863) * t866 - t860 * (t1133 * t863 + t855 * t1137);
t1149 = -t96 * t928 + t377 - t379 + t928;
t1151 = t37 * t903;
t1153 = t384 * t1151 + t382 - t93;
t1162 = t267 * t2 * t1151;
t1164 = (t953 + t124) * pkin(3);
t1168 = t96 * t947 + t402 - t947;
t1177 = 0.1e1 / (t993 + t899 * (t12 * t1149 + t39 * (t913 * t37 * t932 + t855 * t1153)) + t12 * (-t394 + t1162 + t1164) + t39 * (t855 * t2 * t1168 + t955 * t37 * t863) * pkin(9));
t1178 = t855 * mrSges(3,1);
t1179 = -t21 * t1096;
t1181 = t863 * t4;
t1182 = t1094 * mrSges(3,2);
t1194 = -t4 * t1082 * t863 - t7 * t1094 * t863 + t1005 * t927;
t1199 = t1082 * mrSges(3,2);
t1214 = t863 * mrSges(3,1);
t1233 = t899 * (t12 * (-t1083 * mrSges(3,2) * t863 - t1005 * t421 - t1179 * t1178 + t1182 * t1181) - t21 * t1194 * mrSges(3,1) + t4 * (t1094 * t37 * t433 + t855 * t1199) + t7 * (-t1082 * t37 * t433 + t855 * t1182) + t1005 * mrSges(3,2) * t978) + t903 * (t12 * (t1179 * mrSges(3,2) * t855 + t1005 * t454 - t1083 * t1214 + t1095 * t1214) + t21 * t1194 * mrSges(3,2) + t4 * (t1082 * t1178 - t1182 * t230) + t7 * (t1094 * t1178 + t1199 * t230) + t1116 * t1214);
t1236 = cos(qJ(2,4));
t1237 = sin(legFrame(4,3));
t1239 = cos(legFrame(4,3));
t1241 = t1237 * t4 + t1239 * t7;
t1242 = t1241 * t1236;
t1244 = sin(qJ(2,4));
t1247 = -t1237 * t7 + t1239 * t4;
t1248 = t1247 * t1244;
t1249 = t12 * t1242 + t1248;
t1250 = t1249 * t2;
t1254 = t1241 * t1244;
t1256 = t1247 * t1236;
t1257 = -t12 * t1254 + t1256;
t1266 = cos(legFrame(4,2));
t1268 = sin(legFrame(4,2));
t1269 = t21 * t1236;
t1276 = t37 * t39 * (t55 * t1269 - t30 * t1244 / 0.2e1) - t65;
t1280 = cos(qJ(3,4));
t1281 = t1280 ^ 2;
t1284 = sin(qJ(3,4));
t1292 = pkin(9) * t2 * t1284;
t1294 = 0.2e1 * t1292 + pkin(2);
t1299 = t1284 * t1241 * t90;
t1300 = t1249 * t93;
t1304 = t2 * t1241 * pkin(9);
t1308 = t39 * t1236;
t1309 = t30 * t1284;
t1313 = pkin(3) * t1244;
t1318 = t1284 * t116;
t1319 = pkin(3) * t1236;
t1320 = t119 * t1319;
t1323 = t37 * (t21 * (t1309 * t1308 + t108) + t1294 * t39 * t1313) + t96 * (-t1318 + t1320) + t1318 - t125 - t1320;
t1327 = t1241 * t39;
t1328 = t77 * t1284;
t1334 = t1284 * pkin(2);
t1336 = t2 * t1334 + pkin(9) - t139;
t1359 = t39 * t1244;
t1363 = t37 * (t21 * t2 * (t1284 * t161 + t39 * t1319) + t1336 * t1359) * pkin(9);
t1367 = t96 * (t1328 * t1308 - t107) * t124;
t1370 = t1284 * (-t176 * t1308 + t178);
t1373 = t1281 * (t1266 * (t37 * (0.2e1 * t21 * t1250 * t1 + t1257 * t30) + 0.2e1 * t1241 * t44 * t43 * t41) - 0.2e1 * t1276 * t1268) + t1280 * (t1266 * (t37 * (t21 * (t77 * t1241 * t40 - t1284 * t1249 * t30) + t1294 * t1257 * pkin(3)) + t96 * (-t1299 - t1300) + t1299 - t1304 * t98 + t1300) + t1268 * t1323) + t1266 * (t37 * (-t21 * t2 * (t1249 * pkin(3) - t1328 * t1327) + t1336 * t1257) * pkin(9) - t150 * (t1284 * t1249 * t77 + t1241 * t40) * pkin(9) + t1284 * (t1250 * t152 + t1327 * t154) + t1304 * t40) + t1268 * (t1363 + t1367 + t1370 + t181);
t1374 = -0.2e1 * t1281 * t1276;
t1377 = 0.1e1 / (t1280 * t1323 + t1363 + t1367 + t1370 + t1374 + t181);
t1380 = sin(legFrame(4,1));
t1383 = cos(legFrame(4,1));
t1386 = -g(2) * t1266 * t1380 + g(3) * t1266 * t1383 + g(1) * t1268;
t1387 = t198 * t1386;
t1390 = t12 * t1256 - t1254;
t1393 = t39 * t1247;
t1396 = t12 * t1248 + t1242;
t1403 = t1247 * pkin(9);
t1409 = t1280 * (t21 * t1390 * pkin(3) + t2 * t1396 * pkin(9) - t1393 * t205) + t1284 * (t215 * t1390 * pkin(9) - t39 * t1403 * t217 - t1396 * pkin(3));
t1414 = t234 * t1359;
t1420 = 0.2e1 * t244 * t39 * t1313;
t1425 = t37 * t1244 * pkin(2);
t1427 = -t77 * t1236 + t1425;
t1441 = t282 * t37 * t1359;
t1445 = 0.1e1 / (t1281 * (-0.2e1 * t231 * t2 * t1269 + t1414 + t228 - t236) + t1280 * (t1284 * (t240 * t1308 + t116 + t1420 - t239) + t249 * t1319 + t253 + t39 * t1427 * pkin(3) - t125) + t1284 * (t39 * t1427 * t124 + t263 * t2 * t1308 + t178 + t268) + (t276 * pkin(3) * t1269 - t1441 - t274 + t63) * pkin(9));
t1450 = t21 * (-mrSges(3,1) * t1284 - mrSges(3,2) * t1280) + t294 - mrSges(2,2);
t1453 = t1268 * t1380;
t1458 = t1268 * t1383;
t1463 = g(1) * t1239 * t1266 + g(2) * (t1237 * t1383 + t1239 * t1453) + g(3) * (t1237 * t1380 - t1239 * t1458);
t1464 = t1463 * t7;
t1475 = -g(1) * t1237 * t1266 + g(2) * (-t1237 * t1453 + t1239 * t1383) + g(3) * (t1237 * t1458 + t1239 * t1380);
t1476 = t1475 * t4;
t1477 = t1464 - t1476;
t1482 = t1280 * mrSges(3,1) - t1284 * mrSges(3,2) + mrSges(2,1) + t325;
t1497 = t39 * t1386;
t1501 = t1244 * (t12 * t1477 * t1450 - t39 * t1386 * t1450 + t4 * t1482 * t1463 + t7 * t1482 * t1475) + t1236 * (t12 * t1482 * t1477 - t4 * t1463 * t1450 - t7 * t1475 * t1450 - t1482 * t1497);
t1514 = t1292 + pkin(2);
t1517 = pkin(3) * t21 * t1284;
t1518 = t1517 - t251;
t1527 = t1280 * (t12 * (t124 * t21 * t1244 + t1319) * t1247 + (t124 * t1269 - t1313) * t1241) + t12 * (t1236 * t1514 - t1518 * t1244) * t1247 - t1241 * (t1236 * t1518 + t1514 * t1244);
t1530 = -t96 * t1309 + t1309 + t377 - t379;
t1532 = t37 * t1284;
t1534 = t384 * t1532 + t382 - t93;
t1543 = t267 * t2 * t1532;
t1545 = (t1334 + t124) * pkin(3);
t1549 = t96 * t1328 - t1328 + t402;
t1558 = 0.1e1 / (t1374 + t1280 * (t12 * t1530 + t39 * (t1294 * t37 * t1313 + t1236 * t1534)) + t12 * (-t394 + t1543 + t1545) + t39 * (t1236 * t2 * t1549 + t1336 * t37 * t1244) * pkin(9));
t1559 = t1236 * mrSges(3,1);
t1560 = -t21 * t1477;
t1562 = t1244 * t4;
t1563 = t1475 * mrSges(3,2);
t1575 = -t4 * t1463 * t1244 - t7 * t1475 * t1244 + t1386 * t1308;
t1580 = t1463 * mrSges(3,2);
t1595 = t1244 * mrSges(3,1);
t1614 = t1280 * (t12 * (-t1464 * mrSges(3,2) * t1244 - t1386 * t421 - t1560 * t1559 + t1563 * t1562) - t21 * t1575 * mrSges(3,1) + t4 * (t1475 * t37 * t433 + t1236 * t1580) + t7 * (-t1463 * t37 * t433 + t1236 * t1563) + t1386 * mrSges(3,2) * t1359) + t1284 * (t12 * (t1560 * mrSges(3,2) * t1236 + t1386 * t454 - t1464 * t1595 + t1476 * t1595) + t21 * t1575 * mrSges(3,2) + t4 * (t1463 * t1559 - t1563 * t230) + t7 * (t1475 * t1559 + t1580 * t230) + t1497 * t1595);
t1617 = cos(qJ(2,5));
t1618 = sin(legFrame(5,3));
t1620 = cos(legFrame(5,3));
t1622 = t1618 * t4 + t1620 * t7;
t1623 = t1622 * t1617;
t1625 = sin(qJ(2,5));
t1628 = -t1618 * t7 + t1620 * t4;
t1629 = t1628 * t1625;
t1630 = t12 * t1623 + t1629;
t1631 = t1630 * t2;
t1635 = t1622 * t1625;
t1637 = t1628 * t1617;
t1638 = -t12 * t1635 + t1637;
t1647 = cos(legFrame(5,2));
t1649 = sin(legFrame(5,2));
t1650 = t21 * t1617;
t1657 = t37 * t39 * (t55 * t1650 - t30 * t1625 / 0.2e1) - t65;
t1661 = cos(qJ(3,5));
t1662 = t1661 ^ 2;
t1665 = sin(qJ(3,5));
t1673 = pkin(9) * t2 * t1665;
t1675 = 0.2e1 * t1673 + pkin(2);
t1680 = t1665 * t1622 * t90;
t1681 = t1630 * t93;
t1685 = t2 * t1622 * pkin(9);
t1689 = t39 * t1617;
t1690 = t30 * t1665;
t1694 = pkin(3) * t1625;
t1699 = t1665 * t116;
t1700 = pkin(3) * t1617;
t1701 = t119 * t1700;
t1704 = t37 * (t21 * (t1690 * t1689 + t108) + t1675 * t39 * t1694) + t96 * (-t1699 + t1701) + t1699 - t125 - t1701;
t1708 = t1622 * t39;
t1709 = t77 * t1665;
t1715 = t1665 * pkin(2);
t1717 = t2 * t1715 + pkin(9) - t139;
t1740 = t39 * t1625;
t1744 = t37 * (t21 * t2 * (t1665 * t161 + t39 * t1700) + t1717 * t1740) * pkin(9);
t1748 = t96 * (t1709 * t1689 - t107) * t124;
t1751 = t1665 * (-t176 * t1689 + t178);
t1754 = t1662 * (t1647 * (t37 * (0.2e1 * t21 * t1631 * t1 + t1638 * t30) + 0.2e1 * t1622 * t44 * t43 * t41) - 0.2e1 * t1657 * t1649) + t1661 * (t1647 * (t37 * (t21 * (t77 * t1622 * t40 - t1665 * t1630 * t30) + t1675 * t1638 * pkin(3)) + t96 * (-t1680 - t1681) + t1680 - t1685 * t98 + t1681) + t1649 * t1704) + t1647 * (t37 * (-t21 * t2 * (t1630 * pkin(3) - t1709 * t1708) + t1717 * t1638) * pkin(9) - t150 * (t1665 * t1630 * t77 + t1622 * t40) * pkin(9) + t1665 * (t1631 * t152 + t1708 * t154) + t1685 * t40) + t1649 * (t1744 + t1748 + t1751 + t181);
t1755 = -0.2e1 * t1662 * t1657;
t1758 = 0.1e1 / (t1661 * t1704 + t1744 + t1748 + t1751 + t1755 + t181);
t1761 = sin(legFrame(5,1));
t1764 = cos(legFrame(5,1));
t1767 = -g(2) * t1647 * t1761 + g(3) * t1647 * t1764 + g(1) * t1649;
t1768 = t198 * t1767;
t1771 = t12 * t1637 - t1635;
t1774 = t39 * t1628;
t1777 = t12 * t1629 + t1623;
t1784 = t1628 * pkin(9);
t1790 = t1661 * (t21 * t1771 * pkin(3) + t2 * t1777 * pkin(9) - t1774 * t205) + t1665 * (t215 * t1771 * pkin(9) - t39 * t1784 * t217 - t1777 * pkin(3));
t1795 = t234 * t1740;
t1801 = 0.2e1 * t244 * t39 * t1694;
t1806 = t37 * t1625 * pkin(2);
t1808 = -t77 * t1617 + t1806;
t1822 = t282 * t37 * t1740;
t1826 = 0.1e1 / (t1662 * (-0.2e1 * t231 * t2 * t1650 + t1795 + t228 - t236) + t1661 * (t1665 * (t240 * t1689 + t116 + t1801 - t239) + t249 * t1700 + t253 + t39 * t1808 * pkin(3) - t125) + t1665 * (t39 * t1808 * t124 + t263 * t2 * t1689 + t178 + t268) + (t276 * pkin(3) * t1650 - t1822 - t274 + t63) * pkin(9));
t1831 = t21 * (-mrSges(3,1) * t1665 - mrSges(3,2) * t1661) + t294 - mrSges(2,2);
t1834 = t1649 * t1761;
t1839 = t1649 * t1764;
t1844 = g(1) * t1620 * t1647 + g(2) * (t1618 * t1764 + t1620 * t1834) + g(3) * (t1618 * t1761 - t1620 * t1839);
t1845 = t1844 * t7;
t1856 = -g(1) * t1618 * t1647 + g(2) * (-t1618 * t1834 + t1620 * t1764) + g(3) * (t1618 * t1839 + t1620 * t1761);
t1857 = t1856 * t4;
t1858 = t1845 - t1857;
t1863 = t1661 * mrSges(3,1) - t1665 * mrSges(3,2) + mrSges(2,1) + t325;
t1878 = t39 * t1767;
t1882 = t1625 * (t12 * t1858 * t1831 - t39 * t1767 * t1831 + t4 * t1863 * t1844 + t7 * t1863 * t1856) + t1617 * (t12 * t1863 * t1858 - t4 * t1844 * t1831 - t7 * t1856 * t1831 - t1863 * t1878);
t1895 = t1673 + pkin(2);
t1898 = pkin(3) * t21 * t1665;
t1899 = t1898 - t251;
t1908 = t1661 * (t12 * (t124 * t21 * t1625 + t1700) * t1628 + (t124 * t1650 - t1694) * t1622) + t12 * (t1617 * t1895 - t1899 * t1625) * t1628 - t1622 * (t1617 * t1899 + t1895 * t1625);
t1911 = -t96 * t1690 + t1690 + t377 - t379;
t1913 = t37 * t1665;
t1915 = t384 * t1913 + t382 - t93;
t1924 = t267 * t2 * t1913;
t1926 = (t1715 + t124) * pkin(3);
t1930 = t96 * t1709 - t1709 + t402;
t1939 = 0.1e1 / (t1755 + t1661 * (t12 * t1911 + t39 * (t1675 * t37 * t1694 + t1617 * t1915)) + t12 * (-t394 + t1924 + t1926) + t39 * (t1617 * t2 * t1930 + t1717 * t37 * t1625) * pkin(9));
t1940 = t1617 * mrSges(3,1);
t1941 = -t21 * t1858;
t1943 = t1625 * t4;
t1944 = t1856 * mrSges(3,2);
t1956 = -t4 * t1844 * t1625 - t7 * t1856 * t1625 + t1767 * t1689;
t1961 = t1844 * mrSges(3,2);
t1976 = t1625 * mrSges(3,1);
t1995 = t1661 * (t12 * (-t1845 * mrSges(3,2) * t1625 - t1767 * t421 - t1941 * t1940 + t1944 * t1943) - t21 * t1956 * mrSges(3,1) + t4 * (t1856 * t37 * t433 + t1617 * t1961) + t7 * (-t1844 * t37 * t433 + t1617 * t1944) + t1767 * mrSges(3,2) * t1740) + t1665 * (t12 * (t1941 * mrSges(3,2) * t1617 + t1767 * t454 - t1845 * t1976 + t1857 * t1976) + t21 * t1956 * mrSges(3,2) + t4 * (t1844 * t1940 - t1944 * t230) + t7 * (t1856 * t1940 + t1961 * t230) + t1878 * t1976);
t1998 = cos(qJ(2,6));
t1999 = sin(legFrame(6,3));
t2001 = cos(legFrame(6,3));
t2003 = t1999 * t4 + t2001 * t7;
t2004 = t2003 * t1998;
t2006 = sin(qJ(2,6));
t2009 = -t1999 * t7 + t2001 * t4;
t2010 = t2009 * t2006;
t2011 = t12 * t2004 + t2010;
t2012 = t2011 * t2;
t2016 = t2003 * t2006;
t2018 = t2009 * t1998;
t2019 = -t12 * t2016 + t2018;
t2028 = cos(legFrame(6,2));
t2030 = sin(legFrame(6,2));
t2031 = t21 * t1998;
t2038 = t37 * t39 * (t55 * t2031 - t30 * t2006 / 0.2e1) - t65;
t2042 = cos(qJ(3,6));
t2043 = t2042 ^ 2;
t2046 = sin(qJ(3,6));
t2054 = pkin(9) * t2 * t2046;
t2056 = 0.2e1 * t2054 + pkin(2);
t2061 = t2046 * t2003 * t90;
t2062 = t2011 * t93;
t2066 = t2 * t2003 * pkin(9);
t2070 = t39 * t1998;
t2071 = t30 * t2046;
t2075 = pkin(3) * t2006;
t2080 = t2046 * t116;
t2081 = pkin(3) * t1998;
t2082 = t119 * t2081;
t2085 = t37 * (t21 * (t2071 * t2070 + t108) + t2056 * t39 * t2075) + t96 * (-t2080 + t2082) + t2080 - t125 - t2082;
t2089 = t2003 * t39;
t2090 = t77 * t2046;
t2096 = t2046 * pkin(2);
t2098 = t2 * t2096 + pkin(9) - t139;
t2121 = t39 * t2006;
t2125 = t37 * (t21 * t2 * (t2046 * t161 + t39 * t2081) + t2098 * t2121) * pkin(9);
t2129 = t96 * (t2090 * t2070 - t107) * t124;
t2132 = t2046 * (-t176 * t2070 + t178);
t2135 = t2043 * (t2028 * (t37 * (0.2e1 * t21 * t2012 * t1 + t2019 * t30) + 0.2e1 * t2003 * t44 * t43 * t41) - 0.2e1 * t2038 * t2030) + t2042 * (t2028 * (t37 * (t21 * (t77 * t2003 * t40 - t2046 * t2011 * t30) + t2056 * t2019 * pkin(3)) + t96 * (-t2061 - t2062) + t2061 - t2066 * t98 + t2062) + t2030 * t2085) + t2028 * (t37 * (-t21 * t2 * (t2011 * pkin(3) - t2090 * t2089) + t2098 * t2019) * pkin(9) - t150 * (t2046 * t2011 * t77 + t2003 * t40) * pkin(9) + t2046 * (t2012 * t152 + t2089 * t154) + t2066 * t40) + t2030 * (t2125 + t2129 + t2132 + t181);
t2136 = -0.2e1 * t2043 * t2038;
t2139 = 0.1e1 / (t2042 * t2085 + t181 + t2125 + t2129 + t2132 + t2136);
t2142 = sin(legFrame(6,1));
t2145 = cos(legFrame(6,1));
t2148 = -g(2) * t2028 * t2142 + g(3) * t2028 * t2145 + g(1) * t2030;
t2149 = t198 * t2148;
t2152 = t12 * t2018 - t2016;
t2155 = t39 * t2009;
t2158 = t12 * t2010 + t2004;
t2165 = t2009 * pkin(9);
t2171 = t2042 * (t21 * t2152 * pkin(3) + t2 * t2158 * pkin(9) - t2155 * t205) + t2046 * (t215 * t2152 * pkin(9) - t39 * t2165 * t217 - t2158 * pkin(3));
t2176 = t234 * t2121;
t2182 = 0.2e1 * t244 * t39 * t2075;
t2187 = t37 * t2006 * pkin(2);
t2189 = -t77 * t1998 + t2187;
t2203 = t282 * t37 * t2121;
t2207 = 0.1e1 / (t2043 * (-0.2e1 * t231 * t2 * t2031 + t2176 + t228 - t236) + t2042 * (t2046 * (t240 * t2070 + t116 + t2182 - t239) + t249 * t2081 + t253 + t39 * t2189 * pkin(3) - t125) + t2046 * (t39 * t2189 * t124 + t263 * t2 * t2070 + t178 + t268) + (t276 * pkin(3) * t2031 - t2203 - t274 + t63) * pkin(9));
t2212 = t21 * (-mrSges(3,1) * t2046 - mrSges(3,2) * t2042) + t294 - mrSges(2,2);
t2215 = t2030 * t2142;
t2220 = t2030 * t2145;
t2225 = g(1) * t2001 * t2028 + g(2) * (t1999 * t2145 + t2001 * t2215) + g(3) * (t1999 * t2142 - t2001 * t2220);
t2226 = t2225 * t7;
t2237 = -g(1) * t1999 * t2028 + g(2) * (-t1999 * t2215 + t2001 * t2145) + g(3) * (t1999 * t2220 + t2001 * t2142);
t2238 = t2237 * t4;
t2239 = t2226 - t2238;
t2244 = t2042 * mrSges(3,1) - t2046 * mrSges(3,2) + mrSges(2,1) + t325;
t2259 = t39 * t2148;
t2263 = t2006 * (t12 * t2239 * t2212 - t39 * t2148 * t2212 + t4 * t2244 * t2225 + t7 * t2244 * t2237) + t1998 * (t12 * t2244 * t2239 - t4 * t2225 * t2212 - t7 * t2237 * t2212 - t2244 * t2259);
t2276 = t2054 + pkin(2);
t2279 = pkin(3) * t21 * t2046;
t2280 = t2279 - t251;
t2289 = t2042 * (t12 * (t124 * t21 * t2006 + t2081) * t2009 + (t124 * t2031 - t2075) * t2003) + t12 * (t1998 * t2276 - t2280 * t2006) * t2009 - t2003 * (t1998 * t2280 + t2276 * t2006);
t2292 = -t96 * t2071 + t2071 + t377 - t379;
t2294 = t37 * t2046;
t2296 = t384 * t2294 + t382 - t93;
t2305 = t267 * t2 * t2294;
t2307 = (t2096 + t124) * pkin(3);
t2311 = t96 * t2090 - t2090 + t402;
t2320 = 0.1e1 / (t2136 + t2042 * (t12 * t2292 + t39 * (t2056 * t37 * t2075 + t1998 * t2296)) + t12 * (-t394 + t2305 + t2307) + t39 * (t1998 * t2 * t2311 + t2098 * t37 * t2006) * pkin(9));
t2321 = t1998 * mrSges(3,1);
t2322 = -t21 * t2239;
t2324 = t2006 * t4;
t2325 = t2237 * mrSges(3,2);
t2337 = -t4 * t2225 * t2006 - t7 * t2237 * t2006 + t2148 * t2070;
t2342 = t2225 * mrSges(3,2);
t2357 = t2006 * mrSges(3,1);
t2376 = t2042 * (t12 * (-t2226 * mrSges(3,2) * t2006 - t2148 * t421 - t2322 * t2321 + t2325 * t2324) - t21 * t2337 * mrSges(3,1) + t4 * (t2237 * t37 * t433 + t1998 * t2342) + t7 * (-t2225 * t37 * t433 + t1998 * t2325) + t2148 * mrSges(3,2) * t2121) + t2046 * (t12 * (t2322 * mrSges(3,2) * t1998 + t2148 * t454 - t2226 * t2357 + t2238 * t2357) + t21 * t2337 * mrSges(3,2) + t4 * (t2225 * t2321 - t2325 * t230) + t7 * (t2237 * t2321 + t2342 * t230) + t2259 * t2357);
t2380 = -t199 * t188 * t184 + t347 * t287 * t50 * t224 - t471 * t412 * t50 * t373 - t625 * t615 * t611 + t739 * t683 * t504 * t647 - t852 * t796 * t504 * t765 - t1006 * t996 * t992 + t1120 * t1064 * t885 * t1028 - t1233 * t1177 * t885 * t1146 - t1387 * t1377 * t1373 + t1501 * t1445 * t1266 * t1409 - t1614 * t1558 * t1266 * t1527 - t1768 * t1758 * t1754 + t1882 * t1826 * t1647 * t1790 - t1995 * t1939 * t1647 * t1908 - t2149 * t2139 * t2135 + t2263 * t2207 * t2028 * t2171 - t2376 * t2320 * t2028 * t2289 - g(1) * m(4);
t2381 = t12 * t7;
t2383 = t3 * t2381 + t416;
t2387 = t12 * t4;
t2389 = -t14 * t7 + t3 * t2387;
t2393 = t8 * t2383 * t52 + t5 * t2389 * t52 + t50 * t104;
t2400 = -t14 * t2381 + t3 * t4;
t2405 = t14 * t2387 + t3 * t7;
t2409 = t8 * t2400 * t52 - t5 * t2405 * t52 - t50 * t167;
t2411 = 0.2e1 * t21 * t2 * t2393 * t1 + t2409 * t30;
t2415 = -t2383 * t5 + t8 * t2389;
t2421 = t2400 * t5 + t8 * t2405;
t2424 = t21 * t2415 * t2 * t1 - t2421 * t30 / 0.2e1;
t2430 = pkin(3) * t44 * pkin(9);
t2431 = t42 * t2;
t2432 = t39 * t4;
t2435 = t7 * t39;
t2439 = -t5 * t52 * t2432 - t8 * t52 * t2435 + t50 * t12;
t2452 = -t74 * t2393 * t30 - t2439 * t93;
t2455 = t86 * t2409 * pkin(3);
t2466 = t21 * (-t77 * t17 * t40 + t74 * t2415 * t30) + t86 * t2421 * pkin(3);
t2471 = t74 * t2439 * t30;
t2472 = t2393 * pkin(3);
t2473 = t77 * t2472;
t2474 = t2471 - t2473;
t2476 = pkin(2) * pkin(9);
t2478 = t2 * t2439 * t2476;
t2482 = t74 * t17 * t90;
t2483 = t2415 * pkin(3);
t2484 = t77 * t2483;
t2487 = t2 * t218;
t2489 = t96 * (t2482 + t2484) - t2482 + t2487 * t98 - t2484;
t2499 = -t21 * (t74 * t2439 * t77 + t2472) * t2 + t140 * t2409;
t2506 = t21 * t2 * (-t131 * t206 + t2483) + t140 * t2421;
t2516 = t150 * (t74 * t77 * t2393 - t2439 * pkin(3)) * pkin(9);
t2518 = t2 * t77;
t2521 = t2518 * t2393 * pkin(9) - t2439 * t154;
t2524 = t2439 * pkin(9) * t54;
t2539 = -t96 * (t74 * t77 * t2415 + t17 * t40) * t124 + t74 * (t2518 * t2415 * pkin(9) + t206 * t154) + t2487 * t40;
t2541 = t71 * (t37 * (t191 * t2411 - 0.2e1 * t2424 * t194) - 0.2e1 * (t17 * t194 * t39 + t191 * t2439) * t2431 * t2430) + t70 * (t37 * (t191 * (t21 * t2452 + t2455) + t2466 * t194) + t191 * (t96 * t2474 - t2471 + t2473 + t2478) + t2489 * t194) + t37 * (t191 * t2499 + t2506 * t194) * pkin(9) + t191 * (t74 * t2521 - t2516 - t2524) - t2539 * t194;
t2546 = t194 * t10 + t17 * t298;
t2551 = t10 * t298 - t194 * t17;
t2553 = t12 * t14 * t2546 + t2551 * t3;
t2563 = t21 * (t12 * t2546 * t3 - t2551 * t14) - t37 * t39 * t2546;
t2572 = t70 * (t2 * t2553 * pkin(9) + t2563 * pkin(3)) + t74 * (t2 * t2563 * pkin(9) - t2553 * pkin(3));
t2574 = t230 * t53 + t12 - t226;
t2583 = t96 * t77;
t2585 = t376 * t265;
t2589 = t2583 * t104 + t2585 + t39 * (-t77 * t3 + t255);
t2602 = 0.1e1 / (t71 * (-0.2e1 * t2 * t2574 * t1 + t235) + t70 * (t74 * (t2574 * t30 + t246) - t125 + t2589 * pkin(3)) + t74 * (t2 * t2589 * pkin(9) + t178) + (t2 * t2574 * pkin(3) - t283) * pkin(9));
t2606 = t70 * pkin(3) + pkin(2) + t84;
t2610 = t124 * t21 * t70 + t251 - t363;
t2612 = t14 * t2610 + t3 * t2606;
t2617 = t2606 * t14 - t3 * t2610;
t2619 = -t12 * t2612 * t2546 + t2551 * t2617;
t2620 = t44 * t42;
t2645 = 0.1e1 / (t12 * (0.2e1 * t71 * t2620 * t55 + t70 * t380 - t394 + t396 + t398) + (t3 * (-0.2e1 * t244 * pkin(3) * t21 * t71 + t403 * t124 + t70 * t386) + t37 * (t70 * t86 * pkin(3) + t140 * pkin(9) + t71 * t30) * t14) * t39);
t2649 = t474 * t2381 + t800;
t2654 = t474 * t2387 - t482 * t7;
t2658 = t477 * t2649 * t506 + t475 * t2654 * t506 + t504 * t546;
t2665 = -t482 * t2381 + t474 * t4;
t2670 = t482 * t2387 + t474 * t7;
t2674 = t477 * t2665 * t506 - t475 * t2670 * t506 - t504 * t597;
t2676 = 0.2e1 * t21 * t2 * t2658 * t1 + t2674 * t30;
t2680 = -t2649 * t475 + t477 * t2654;
t2686 = t2665 * t475 + t477 * t2670;
t2689 = t21 * t2680 * t2 * t1 - t2686 * t30 / 0.2e1;
t2699 = -t475 * t506 * t2432 - t477 * t506 * t2435 + t504 * t12;
t2712 = -t522 * t2658 * t30 - t2699 * t93;
t2715 = t532 * t2674 * pkin(3);
t2726 = t21 * (t522 * t2680 * t30 - t77 * t485 * t40) + t532 * t2686 * pkin(3);
t2731 = t522 * t2699 * t30;
t2732 = t2658 * pkin(3);
t2733 = t77 * t2732;
t2734 = t2731 - t2733;
t2737 = t2 * t2699 * t2476;
t2741 = t522 * t485 * t90;
t2742 = t2680 * pkin(3);
t2743 = t77 * t2742;
t2746 = t2 * t641;
t2748 = t96 * (t2741 + t2743) - t2741 + t2746 * t98 - t2743;
t2758 = -t21 * (t522 * t2699 * t77 + t2732) * t2 + t574 * t2674;
t2765 = t21 * t2 * (-t566 * t631 + t2742) + t574 * t2686;
t2775 = t150 * (t522 * t77 * t2658 - t2699 * pkin(3)) * pkin(9);
t2779 = t2518 * t2658 * pkin(9) - t2699 * t154;
t2782 = t2699 * pkin(9) * t54;
t2797 = -t96 * (t522 * t77 * t2680 + t485 * t40) * t124 + t522 * (t2518 * t2680 * pkin(9) + t631 * t154) + t2746 * t40;
t2799 = t519 * (t37 * (t618 * t2676 - 0.2e1 * t2689 * t621) - 0.2e1 * (t485 * t621 * t39 + t618 * t2699) * t2431 * t2430) + t518 * (t37 * (t618 * (t21 * t2712 + t2715) + t2726 * t621) + t618 * (t96 * t2734 - t2731 + t2733 + t2737) + t2748 * t621) + t37 * (t618 * t2758 + t2765 * t621) * pkin(9) + t618 * (t522 * t2779 - t2775 - t2782) - t2797 * t621;
t2804 = t621 * t479 + t485 * t691;
t2809 = t479 * t691 - t621 * t485;
t2811 = t12 * t482 * t2804 + t2809 * t474;
t2821 = t21 * (t12 * t2804 * t474 - t2809 * t482) - t37 * t39 * t2804;
t2830 = t518 * (t2 * t2811 * pkin(9) + t2821 * pkin(3)) + t522 * (t2 * t2821 * pkin(9) - t2811 * pkin(3));
t2832 = t230 * t507 + t12 - t226;
t2845 = t2583 * t546 + t2585 + t39 * (-t77 * t474 + t663);
t2858 = 0.1e1 / (t519 * (-0.2e1 * t2 * t2832 * t1 + t652) + t518 * (t522 * (t2832 * t30 + t658) - t125 + t2845 * pkin(3)) + t522 * (t2 * t2845 * pkin(9) + t178) + (t2 * t2832 * pkin(3) - t679) * pkin(9));
t2862 = t518 * pkin(3) + pkin(2) + t530;
t2866 = t124 * t21 * t518 + t251 - t755;
t2868 = t474 * t2862 + t482 * t2866;
t2873 = t2862 * t482 - t474 * t2866;
t2875 = -t12 * t2868 * t2804 + t2809 * t2873;
t2900 = 0.1e1 / (t12 * (0.2e1 * t519 * t2620 * t55 + t518 * t768 - t394 + t781 + t783) + (t474 * (-0.2e1 * t244 * pkin(3) * t21 * t519 + t787 * t124 + t518 * t772) + t37 * (t518 * t532 * pkin(3) + t574 * pkin(9) + t519 * t30) * t482) * t39);
t2904 = t855 * t2381 + t1181;
t2909 = t855 * t2387 - t863 * t7;
t2913 = t858 * t2904 * t887 + t856 * t2909 * t887 + t885 * t927;
t2920 = -t863 * t2381 + t855 * t4;
t2925 = t863 * t2387 + t855 * t7;
t2929 = t858 * t2920 * t887 - t856 * t2925 * t887 - t885 * t978;
t2931 = 0.2e1 * t21 * t2 * t2913 * t1 + t2929 * t30;
t2935 = -t2904 * t856 + t858 * t2909;
t2941 = t2920 * t856 + t858 * t2925;
t2944 = t21 * t2935 * t2 * t1 - t2941 * t30 / 0.2e1;
t2954 = -t856 * t887 * t2432 - t858 * t887 * t2435 + t885 * t12;
t2967 = -t903 * t2913 * t30 - t2954 * t93;
t2970 = t913 * t2929 * pkin(3);
t2981 = t21 * (t903 * t2935 * t30 - t77 * t866 * t40) + t913 * t2941 * pkin(3);
t2986 = t903 * t2954 * t30;
t2987 = t2913 * pkin(3);
t2988 = t77 * t2987;
t2989 = t2986 - t2988;
t2992 = t2 * t2954 * t2476;
t2996 = t903 * t866 * t90;
t2997 = t2935 * pkin(3);
t2998 = t77 * t2997;
t3001 = t2 * t1022;
t3003 = t96 * (t2996 + t2998) - t2996 + t3001 * t98 - t2998;
t3013 = -t21 * (t903 * t2954 * t77 + t2987) * t2 + t955 * t2929;
t3020 = t21 * t2 * (-t947 * t1012 + t2997) + t955 * t2941;
t3030 = t150 * (t903 * t77 * t2913 - t2954 * pkin(3)) * pkin(9);
t3034 = t2518 * t2913 * pkin(9) - t2954 * t154;
t3037 = t2954 * pkin(9) * t54;
t3052 = -t96 * (t903 * t77 * t2935 + t866 * t40) * t124 + t903 * (t2518 * t2935 * pkin(9) + t1012 * t154) + t3001 * t40;
t3054 = t900 * (t37 * (-0.2e1 * t2944 * t1002 + t999 * t2931) - 0.2e1 * (t866 * t1002 * t39 + t999 * t2954) * t2431 * t2430) + t899 * (t37 * (t999 * (t21 * t2967 + t2970) + t2981 * t1002) + t999 * (t96 * t2989 - t2986 + t2988 + t2992) + t3003 * t1002) + t37 * (t3020 * t1002 + t999 * t3013) * pkin(9) + t999 * (t903 * t3034 - t3030 - t3037) - t3052 * t1002;
t3059 = t1002 * t860 + t866 * t1072;
t3064 = -t1002 * t866 + t860 * t1072;
t3066 = t12 * t863 * t3059 + t3064 * t855;
t3076 = t21 * (t12 * t3059 * t855 - t3064 * t863) - t37 * t39 * t3059;
t3085 = t899 * (t2 * t3066 * pkin(9) + t3076 * pkin(3)) + t903 * (t2 * t3076 * pkin(9) - t3066 * pkin(3));
t3087 = t230 * t888 + t12 - t226;
t3100 = t2583 * t927 + t2585 + t39 * (-t77 * t855 + t1044);
t3113 = 0.1e1 / (t900 * (-0.2e1 * t2 * t3087 * t1 + t1033) + t899 * (t903 * (t3087 * t30 + t1039) - t125 + t3100 * pkin(3)) + t903 * (t2 * t3100 * pkin(9) + t178) + (t2 * t3087 * pkin(3) - t1060) * pkin(9));
t3117 = t899 * pkin(3) + pkin(2) + t911;
t3121 = t124 * t21 * t899 - t1136 + t251;
t3123 = t855 * t3117 + t863 * t3121;
t3128 = t3117 * t863 - t855 * t3121;
t3130 = -t12 * t3123 * t3059 + t3064 * t3128;
t3155 = 0.1e1 / (t12 * (0.2e1 * t900 * t2620 * t55 + t899 * t1149 + t1162 + t1164 - t394) + (t855 * (-0.2e1 * t244 * pkin(3) * t21 * t900 + t899 * t1153 + t1168 * t124) + t37 * (t899 * t913 * pkin(3) + t955 * pkin(9) + t900 * t30) * t863) * t39);
t3159 = t1236 * t2381 + t1562;
t3164 = t1236 * t2387 - t1244 * t7;
t3168 = t1237 * t3164 * t1268 + t1239 * t3159 * t1268 + t1266 * t1308;
t3175 = t1236 * t4 - t1244 * t2381;
t3180 = t1236 * t7 + t1244 * t2387;
t3184 = -t1237 * t3180 * t1268 + t1239 * t3175 * t1268 - t1266 * t1359;
t3186 = 0.2e1 * t21 * t2 * t3168 * t1 + t3184 * t30;
t3190 = -t3159 * t1237 + t1239 * t3164;
t3196 = t3175 * t1237 + t1239 * t3180;
t3199 = t21 * t3190 * t2 * t1 - t3196 * t30 / 0.2e1;
t3209 = -t1237 * t1268 * t2432 - t1239 * t1268 * t2435 + t1266 * t12;
t3222 = -t1284 * t3168 * t30 - t3209 * t93;
t3225 = t1294 * t3184 * pkin(3);
t3236 = t21 * (-t77 * t1247 * t40 + t1284 * t3190 * t30) + t1294 * t3196 * pkin(3);
t3241 = t1284 * t3209 * t30;
t3242 = t3168 * pkin(3);
t3243 = t77 * t3242;
t3244 = t3241 - t3243;
t3247 = t2 * t3209 * t2476;
t3251 = t1284 * t1247 * t90;
t3252 = t3190 * pkin(3);
t3253 = t77 * t3252;
t3256 = t2 * t1403;
t3258 = t96 * (t3251 + t3253) - t3251 + t3256 * t98 - t3253;
t3268 = -t21 * (t1284 * t3209 * t77 + t3242) * t2 + t1336 * t3184;
t3275 = t21 * t2 * (-t1328 * t1393 + t3252) + t1336 * t3196;
t3285 = t150 * (t1284 * t77 * t3168 - t3209 * pkin(3)) * pkin(9);
t3289 = t2518 * t3168 * pkin(9) - t3209 * t154;
t3292 = t3209 * pkin(9) * t54;
t3307 = -t96 * (t1284 * t77 * t3190 + t1247 * t40) * t124 + t1284 * (t2518 * t3190 * pkin(9) + t1393 * t154) + t3256 * t40;
t3309 = t1281 * (t37 * (t1380 * t3186 - 0.2e1 * t3199 * t1383) - 0.2e1 * (t1247 * t1383 * t39 + t1380 * t3209) * t2431 * t2430) + t1280 * (t37 * (t1380 * (t21 * t3222 + t3225) + t3236 * t1383) + t1380 * (t96 * t3244 - t3241 + t3243 + t3247) + t3258 * t1383) + t37 * (t1380 * t3268 + t3275 * t1383) * pkin(9) + t1380 * (t1284 * t3289 - t3285 - t3292) - t3307 * t1383;
t3314 = t1383 * t1241 + t1247 * t1453;
t3319 = t1241 * t1453 - t1383 * t1247;
t3321 = t12 * t1244 * t3314 + t3319 * t1236;
t3331 = t21 * (t12 * t3314 * t1236 - t3319 * t1244) - t37 * t39 * t3314;
t3340 = t1280 * (t2 * t3321 * pkin(9) + t3331 * pkin(3)) + t1284 * (t2 * t3331 * pkin(9) - t3321 * pkin(3));
t3342 = t230 * t1269 + t12 - t226;
t3355 = t2583 * t1308 + t2585 + t39 * (-t77 * t1236 + t1425);
t3368 = 0.1e1 / (t1281 * (-0.2e1 * t2 * t3342 * t1 + t1414) + t1280 * (t1284 * (t3342 * t30 + t1420) - t125 + t3355 * pkin(3)) + t1284 * (t2 * t3355 * pkin(9) + t178) + (t2 * t3342 * pkin(3) - t1441) * pkin(9));
t3372 = t1280 * pkin(3) + pkin(2) + t1292;
t3376 = t124 * t21 * t1280 - t1517 + t251;
t3378 = t1236 * t3372 + t1244 * t3376;
t3383 = -t1236 * t3376 + t3372 * t1244;
t3385 = -t12 * t3378 * t3314 + t3319 * t3383;
t3410 = 0.1e1 / (t12 * (0.2e1 * t1281 * t2620 * t55 + t1280 * t1530 + t1543 + t1545 - t394) + (t1236 * (-0.2e1 * t244 * pkin(3) * t21 * t1281 + t1549 * t124 + t1280 * t1534) + t37 * (t1280 * t1294 * pkin(3) + t1336 * pkin(9) + t1281 * t30) * t1244) * t39);
t3414 = t1617 * t2381 + t1943;
t3419 = t1617 * t2387 - t1625 * t7;
t3423 = t1618 * t3419 * t1649 + t1620 * t3414 * t1649 + t1647 * t1689;
t3430 = t1617 * t4 - t1625 * t2381;
t3435 = t1617 * t7 + t1625 * t2387;
t3439 = -t1618 * t3435 * t1649 + t1620 * t3430 * t1649 - t1647 * t1740;
t3441 = 0.2e1 * t21 * t2 * t3423 * t1 + t3439 * t30;
t3445 = -t3414 * t1618 + t1620 * t3419;
t3451 = t3430 * t1618 + t1620 * t3435;
t3454 = t21 * t3445 * t2 * t1 - t3451 * t30 / 0.2e1;
t3464 = -t1618 * t1649 * t2432 - t1620 * t1649 * t2435 + t1647 * t12;
t3477 = -t1665 * t3423 * t30 - t3464 * t93;
t3480 = t1675 * t3439 * pkin(3);
t3491 = t21 * (-t77 * t1628 * t40 + t1665 * t3445 * t30) + t1675 * t3451 * pkin(3);
t3496 = t1665 * t3464 * t30;
t3497 = t3423 * pkin(3);
t3498 = t77 * t3497;
t3499 = t3496 - t3498;
t3502 = t2 * t3464 * t2476;
t3506 = t1665 * t1628 * t90;
t3507 = t3445 * pkin(3);
t3508 = t77 * t3507;
t3511 = t2 * t1784;
t3513 = t96 * (t3506 + t3508) - t3506 + t3511 * t98 - t3508;
t3523 = -t21 * (t1665 * t3464 * t77 + t3497) * t2 + t1717 * t3439;
t3530 = t21 * t2 * (-t1709 * t1774 + t3507) + t1717 * t3451;
t3540 = t150 * (t1665 * t77 * t3423 - t3464 * pkin(3)) * pkin(9);
t3544 = t2518 * t3423 * pkin(9) - t3464 * t154;
t3547 = t3464 * pkin(9) * t54;
t3562 = -t96 * (t1665 * t77 * t3445 + t1628 * t40) * t124 + t1665 * (t2518 * t3445 * pkin(9) + t1774 * t154) + t3511 * t40;
t3564 = t1662 * (t37 * (t1761 * t3441 - 0.2e1 * t3454 * t1764) - 0.2e1 * (t1628 * t1764 * t39 + t1761 * t3464) * t2431 * t2430) + t1661 * (t37 * (t1761 * (t21 * t3477 + t3480) + t3491 * t1764) + t1761 * (t96 * t3499 - t3496 + t3498 + t3502) + t3513 * t1764) + t37 * (t1761 * t3523 + t3530 * t1764) * pkin(9) + t1761 * (t1665 * t3544 - t3540 - t3547) - t3562 * t1764;
t3569 = t1764 * t1622 + t1628 * t1834;
t3574 = t1622 * t1834 - t1764 * t1628;
t3576 = t12 * t1625 * t3569 + t3574 * t1617;
t3586 = t21 * (t12 * t3569 * t1617 - t3574 * t1625) - t37 * t39 * t3569;
t3595 = t1661 * (t2 * t3576 * pkin(9) + t3586 * pkin(3)) + t1665 * (t2 * t3586 * pkin(9) - t3576 * pkin(3));
t3597 = t230 * t1650 + t12 - t226;
t3610 = t2583 * t1689 + t2585 + t39 * (-t77 * t1617 + t1806);
t3623 = 0.1e1 / (t1662 * (-0.2e1 * t2 * t3597 * t1 + t1795) + t1661 * (t1665 * (t3597 * t30 + t1801) - t125 + t3610 * pkin(3)) + t1665 * (t2 * t3610 * pkin(9) + t178) + (t2 * t3597 * pkin(3) - t1822) * pkin(9));
t3627 = t1661 * pkin(3) + pkin(2) + t1673;
t3631 = t124 * t21 * t1661 - t1898 + t251;
t3633 = t1617 * t3627 + t1625 * t3631;
t3638 = -t1617 * t3631 + t3627 * t1625;
t3640 = -t12 * t3633 * t3569 + t3574 * t3638;
t3665 = 0.1e1 / (t12 * (0.2e1 * t1662 * t2620 * t55 + t1661 * t1911 + t1924 + t1926 - t394) + (t1617 * (-0.2e1 * t244 * pkin(3) * t21 * t1662 + t1930 * t124 + t1661 * t1915) + t37 * (t1661 * t1675 * pkin(3) + t1717 * pkin(9) + t1662 * t30) * t1625) * t39);
t3669 = t1998 * t2381 + t2324;
t3674 = t1998 * t2387 - t2006 * t7;
t3678 = t1999 * t3674 * t2030 + t2001 * t3669 * t2030 + t2028 * t2070;
t3685 = t1998 * t4 - t2006 * t2381;
t3690 = t1998 * t7 + t2006 * t2387;
t3694 = -t1999 * t3690 * t2030 + t2001 * t3685 * t2030 - t2028 * t2121;
t3696 = 0.2e1 * t21 * t2 * t3678 * t1 + t3694 * t30;
t3700 = -t3669 * t1999 + t2001 * t3674;
t3706 = t3685 * t1999 + t2001 * t3690;
t3709 = t21 * t3700 * t2 * t1 - t3706 * t30 / 0.2e1;
t3719 = -t1999 * t2030 * t2432 - t2001 * t2030 * t2435 + t2028 * t12;
t3732 = -t2046 * t3678 * t30 - t3719 * t93;
t3735 = t2056 * t3694 * pkin(3);
t3746 = t21 * (-t77 * t2009 * t40 + t2046 * t3700 * t30) + t2056 * t3706 * pkin(3);
t3751 = t2046 * t3719 * t30;
t3752 = t3678 * pkin(3);
t3753 = t77 * t3752;
t3754 = t3751 - t3753;
t3757 = t2 * t3719 * t2476;
t3761 = t2046 * t2009 * t90;
t3762 = t3700 * pkin(3);
t3763 = t77 * t3762;
t3766 = t2 * t2165;
t3768 = t96 * (t3761 + t3763) - t3761 + t3766 * t98 - t3763;
t3778 = -t21 * (t2046 * t3719 * t77 + t3752) * t2 + t2098 * t3694;
t3785 = t21 * t2 * (-t2090 * t2155 + t3762) + t2098 * t3706;
t3795 = t150 * (t2046 * t77 * t3678 - t3719 * pkin(3)) * pkin(9);
t3799 = t2518 * t3678 * pkin(9) - t3719 * t154;
t3802 = t3719 * pkin(9) * t54;
t3817 = -t96 * (t2046 * t77 * t3700 + t2009 * t40) * t124 + t2046 * (t2518 * t3700 * pkin(9) + t2155 * t154) + t3766 * t40;
t3819 = t2043 * (t37 * (t2142 * t3696 - 0.2e1 * t3709 * t2145) - 0.2e1 * (t2009 * t2145 * t39 + t2142 * t3719) * t2431 * t2430) + t2042 * (t37 * (t2142 * (t21 * t3732 + t3735) + t3746 * t2145) + t2142 * (t96 * t3754 - t3751 + t3753 + t3757) + t3768 * t2145) + t37 * (t2142 * t3778 + t3785 * t2145) * pkin(9) + t2142 * (t2046 * t3799 - t3795 - t3802) - t3817 * t2145;
t3824 = t2145 * t2003 + t2009 * t2215;
t3829 = t2003 * t2215 - t2145 * t2009;
t3831 = t12 * t2006 * t3824 + t3829 * t1998;
t3841 = t21 * (t12 * t3824 * t1998 - t3829 * t2006) - t37 * t39 * t3824;
t3850 = t2042 * (t2 * t3831 * pkin(9) + t3841 * pkin(3)) + t2046 * (t2 * t3841 * pkin(9) - t3831 * pkin(3));
t3852 = t230 * t2031 + t12 - t226;
t3865 = t2583 * t2070 + t2585 + t39 * (-t77 * t1998 + t2187);
t3878 = 0.1e1 / (t2043 * (-0.2e1 * t2 * t3852 * t1 + t2176) + t2042 * (t2046 * (t3852 * t30 + t2182) - t125 + t3865 * pkin(3)) + t2046 * (t2 * t3865 * pkin(9) + t178) + (t2 * t3852 * pkin(3) - t2203) * pkin(9));
t3882 = t2042 * pkin(3) + pkin(2) + t2054;
t3886 = t124 * t21 * t2042 - t2279 + t251;
t3888 = t1998 * t3882 + t2006 * t3886;
t3893 = -t1998 * t3886 + t3882 * t2006;
t3895 = -t12 * t3888 * t3824 + t3829 * t3893;
t3920 = 0.1e1 / (t12 * (0.2e1 * t2043 * t2620 * t55 + t2042 * t2292 + t2305 + t2307 - t394) + (t1998 * (-0.2e1 * t244 * pkin(3) * t21 * t2043 + t2311 * t124 + t2042 * t2296) + t37 * (t2042 * t2056 * pkin(3) + t2098 * pkin(9) + t2043 * t30) * t2006) * t39);
t3924 = -t199 * t188 * t2541 + t347 * t2602 * t2572 + t471 * t2645 * t2619 - t625 * t615 * t2799 + t739 * t2858 * t2830 + t852 * t2900 * t2875 - t1006 * t996 * t3054 + t1120 * t3113 * t3085 + t1233 * t3155 * t3130 - t1387 * t1377 * t3309 + t1501 * t3368 * t3340 + t1614 * t3410 * t3385 - t1768 * t1758 * t3564 + t1882 * t3623 * t3595 + t1995 * t3665 * t3640 - t2149 * t2139 * t3819 + t2263 * t3878 * t3850 + t2376 * t3920 * t3895 - g(2) * m(4);
t3960 = t71 * (t37 * (-0.2e1 * t191 * t2424 - t194 * t2411) + 0.2e1 * (-t17 * t191 * t39 + t194 * t2439) * t2431 * t2430) + t70 * (t37 * (t194 * (-t21 * t2452 - t2455) + t2466 * t191) + t194 * (-t96 * t2474 + t2471 - t2473 - t2478) + t191 * t2489) - t37 * (-t191 * t2506 + t194 * t2499) * pkin(9) + t194 * (-t74 * t2521 + t2516 + t2524) - t191 * t2539;
t3966 = t194 * t17 * t52 - t10 * t191;
t3972 = t194 * t10 * t52 + t17 * t191;
t3974 = t12 * t14 * t3966 + t3972 * t3;
t3984 = t21 * (t12 * t3966 * t3 - t3972 * t14) - t37 * t39 * t3966;
t3993 = t70 * (-t2 * t3974 * pkin(9) - t3984 * pkin(3)) - t74 * (t2 * t3984 * pkin(9) - t3974 * pkin(3));
t3999 = t12 * t2612 * t3966 - t3972 * t2617;
t4037 = t519 * (t37 * (-t621 * t2676 - 0.2e1 * t618 * t2689) + 0.2e1 * (-t485 * t618 * t39 + t621 * t2699) * t2431 * t2430) + t518 * (t37 * (t621 * (-t21 * t2712 - t2715) + t2726 * t618) + t621 * (-t96 * t2734 + t2731 - t2733 - t2737) + t618 * t2748) - t37 * (t621 * t2758 - t618 * t2765) * pkin(9) + t621 * (-t522 * t2779 + t2775 + t2782) - t618 * t2797;
t4043 = t621 * t485 * t506 - t479 * t618;
t4049 = t621 * t479 * t506 + t485 * t618;
t4051 = t12 * t482 * t4043 + t4049 * t474;
t4061 = t21 * (t12 * t4043 * t474 - t4049 * t482) - t37 * t39 * t4043;
t4070 = t518 * (-t2 * t4051 * pkin(9) - t4061 * pkin(3)) - t522 * (t2 * t4061 * pkin(9) - t4051 * pkin(3));
t4076 = t12 * t2868 * t4043 - t4049 * t2873;
t4114 = t900 * (t37 * (-t1002 * t2931 - 0.2e1 * t999 * t2944) + 0.2e1 * (-t866 * t999 * t39 + t1002 * t2954) * t2431 * t2430) + t899 * (t37 * (t1002 * (-t21 * t2967 - t2970) + t2981 * t999) + t1002 * (-t96 * t2989 + t2986 - t2988 - t2992) + t999 * t3003) - t37 * (t1002 * t3013 - t999 * t3020) * pkin(9) + t1002 * (-t903 * t3034 + t3030 + t3037) - t999 * t3052;
t4120 = t1002 * t866 * t887 - t860 * t999;
t4126 = t1002 * t860 * t887 + t866 * t999;
t4128 = t12 * t863 * t4120 + t4126 * t855;
t4138 = t21 * (t12 * t4120 * t855 - t4126 * t863) - t37 * t39 * t4120;
t4147 = t899 * (-t2 * t4128 * pkin(9) - t4138 * pkin(3)) - t903 * (t2 * t4138 * pkin(9) - t4128 * pkin(3));
t4153 = t12 * t3123 * t4120 - t4126 * t3128;
t4191 = t1281 * (t37 * (-0.2e1 * t1380 * t3199 - t1383 * t3186) + 0.2e1 * (-t1247 * t1380 * t39 + t1383 * t3209) * t2431 * t2430) + t1280 * (t37 * (t1383 * (-t21 * t3222 - t3225) + t3236 * t1380) + t1383 * (-t96 * t3244 + t3241 - t3243 - t3247) + t1380 * t3258) - t37 * (-t1380 * t3275 + t1383 * t3268) * pkin(9) + t1383 * (-t1284 * t3289 + t3285 + t3292) - t1380 * t3307;
t4197 = t1383 * t1247 * t1268 - t1241 * t1380;
t4203 = t1383 * t1241 * t1268 + t1247 * t1380;
t4205 = t12 * t1244 * t4197 + t4203 * t1236;
t4215 = t21 * (t12 * t4197 * t1236 - t4203 * t1244) - t37 * t39 * t4197;
t4224 = t1280 * (-t2 * t4205 * pkin(9) - t4215 * pkin(3)) - t1284 * (t2 * t4215 * pkin(9) - t4205 * pkin(3));
t4230 = t12 * t3378 * t4197 - t4203 * t3383;
t4268 = t1662 * (t37 * (-0.2e1 * t1761 * t3454 - t1764 * t3441) + 0.2e1 * (-t1628 * t1761 * t39 + t1764 * t3464) * t2431 * t2430) + t1661 * (t37 * (t1764 * (-t21 * t3477 - t3480) + t3491 * t1761) + t1764 * (-t96 * t3499 + t3496 - t3498 - t3502) + t1761 * t3513) - t37 * (-t1761 * t3530 + t1764 * t3523) * pkin(9) + t1764 * (-t1665 * t3544 + t3540 + t3547) - t1761 * t3562;
t4274 = t1764 * t1628 * t1649 - t1622 * t1761;
t4280 = t1764 * t1622 * t1649 + t1628 * t1761;
t4282 = t12 * t1625 * t4274 + t4280 * t1617;
t4292 = t21 * (t12 * t4274 * t1617 - t4280 * t1625) - t37 * t39 * t4274;
t4301 = t1661 * (-t2 * t4282 * pkin(9) - t4292 * pkin(3)) - t1665 * (t2 * t4292 * pkin(9) - t4282 * pkin(3));
t4307 = t12 * t3633 * t4274 - t4280 * t3638;
t4345 = t2043 * (t37 * (-0.2e1 * t2142 * t3709 - t2145 * t3696) + 0.2e1 * (-t2009 * t2142 * t39 + t2145 * t3719) * t2431 * t2430) + t2042 * (t37 * (t2145 * (-t21 * t3732 - t3735) + t3746 * t2142) + t2145 * (-t96 * t3754 + t3751 - t3753 - t3757) + t2142 * t3768) - t37 * (-t2142 * t3785 + t2145 * t3778) * pkin(9) + t2145 * (-t2046 * t3799 + t3795 + t3802) - t2142 * t3817;
t4351 = t2145 * t2009 * t2030 - t2003 * t2142;
t4357 = t2145 * t2003 * t2030 + t2009 * t2142;
t4359 = t12 * t2006 * t4351 + t4357 * t1998;
t4369 = t21 * (t12 * t4351 * t1998 - t4357 * t2006) - t37 * t39 * t4351;
t4378 = t2042 * (-t2 * t4359 * pkin(9) - t4369 * pkin(3)) - t2046 * (t2 * t4369 * pkin(9) - t4359 * pkin(3));
t4384 = t12 * t3888 * t4351 - t4357 * t3893;
t4388 = -t199 * t188 * t3960 + t347 * t2602 * t3993 + t471 * t2645 * t3999 - t625 * t615 * t4037 + t739 * t2858 * t4070 + t852 * t2900 * t4076 - t1006 * t996 * t4114 + t1120 * t3113 * t4147 + t1233 * t3155 * t4153 - t1387 * t1377 * t4191 + t1501 * t3368 * t4224 + t1614 * t3410 * t4230 - t1768 * t1758 * t4268 + t1882 * t3623 * t4301 + t1995 * t3665 * t4307 - t2149 * t2139 * t4345 + t2263 * t3878 * t4378 + t2376 * t3920 * t4384 - g(3) * m(4);
t4389 = sin(xP(6));
t4391 = cos(xP(6));
t4393 = -koppelP(1,2) * t4389 + t4391 * koppelP(1,1);
t4394 = sin(xP(5));
t4396 = cos(xP(5));
t4397 = koppelP(1,3) * t4396;
t4398 = t4394 * t4393 - t4397;
t4399 = cos(xP(4));
t4401 = sin(xP(4));
t4404 = koppelP(1,1) * t4389 + t4391 * koppelP(1,2);
t4405 = t4404 * t4401;
t4406 = t4399 * t4398 - t4405;
t4410 = t4404 * t4399;
t4411 = t4401 * t4398 + t4410;
t4431 = -koppelP(2,2) * t4389 + t4391 * koppelP(2,1);
t4433 = koppelP(2,3) * t4396;
t4434 = t4394 * t4431 - t4433;
t4438 = koppelP(2,1) * t4389 + t4391 * koppelP(2,2);
t4439 = t4438 * t4401;
t4440 = t4399 * t4434 - t4439;
t4444 = t4438 * t4399;
t4445 = t4401 * t4434 + t4444;
t4465 = -koppelP(3,2) * t4389 + t4391 * koppelP(3,1);
t4467 = koppelP(3,3) * t4396;
t4468 = t4394 * t4465 - t4467;
t4472 = koppelP(3,1) * t4389 + t4391 * koppelP(3,2);
t4473 = t4472 * t4401;
t4474 = t4399 * t4468 - t4473;
t4478 = t4472 * t4399;
t4479 = t4401 * t4468 + t4478;
t4499 = -koppelP(4,2) * t4389 + t4391 * koppelP(4,1);
t4501 = koppelP(4,3) * t4396;
t4502 = t4394 * t4499 - t4501;
t4506 = koppelP(4,1) * t4389 + t4391 * koppelP(4,2);
t4507 = t4506 * t4401;
t4508 = t4399 * t4502 - t4507;
t4512 = t4506 * t4399;
t4513 = t4401 * t4502 + t4512;
t4533 = -koppelP(5,2) * t4389 + t4391 * koppelP(5,1);
t4535 = koppelP(5,3) * t4396;
t4536 = t4394 * t4533 - t4535;
t4540 = koppelP(5,1) * t4389 + t4391 * koppelP(5,2);
t4541 = t4540 * t4401;
t4542 = t4399 * t4536 - t4541;
t4546 = t4540 * t4399;
t4547 = t4401 * t4536 + t4546;
t4567 = -koppelP(6,2) * t4389 + t4391 * koppelP(6,1);
t4569 = koppelP(6,3) * t4396;
t4570 = t4394 * t4567 - t4569;
t4574 = koppelP(6,1) * t4389 + t4391 * koppelP(6,2);
t4575 = t4574 * t4401;
t4576 = t4399 * t4570 - t4575;
t4580 = t4574 * t4399;
t4581 = t4401 * t4570 + t4580;
t4599 = t4394 * g(2);
t4601 = g(3) * mrSges(4,2);
t4604 = mrSges(4,2) * t4389;
t4612 = g(3) * t4394;
t4619 = t4389 * g(2);
t4625 = -t198 * t197 * (t188 * t2541 * t4406 + t188 * t3960 * t4411) + t347 * (t2602 * t2572 * t4406 + t2602 * t3993 * t4411) + t471 * (t2645 * t2619 * t4406 + t2645 * t3999 * t4411) - t198 * t624 * (t615 * t2799 * t4440 + t615 * t4037 * t4445) + t739 * (t2858 * t2830 * t4440 + t2858 * t4070 * t4445) + t852 * (t2900 * t2875 * t4440 + t2900 * t4076 * t4445) - t198 * t1005 * (t996 * t3054 * t4474 + t996 * t4114 * t4479) + t1120 * (t3113 * t3085 * t4474 + t3113 * t4147 * t4479) + t1233 * (t3155 * t3130 * t4474 + t3155 * t4153 * t4479) - t198 * t1386 * (t1377 * t3309 * t4508 + t1377 * t4191 * t4513) + t1501 * (t3368 * t3340 * t4508 + t3368 * t4224 * t4513) + t1614 * (t3410 * t3385 * t4508 + t3410 * t4230 * t4513) - t198 * t1767 * (t1758 * t3564 * t4542 + t1758 * t4268 * t4547) + t1882 * (t3623 * t3595 * t4542 + t3623 * t4301 * t4547) + t1995 * (t3665 * t3640 * t4542 + t3665 * t4307 * t4547) - t198 * t2148 * (t2139 * t3819 * t4576 + t2139 * t4345 * t4581) + t2263 * (t3878 * t3850 * t4576 + t3878 * t4378 * t4581) + t2376 * (t3920 * t3895 * t4576 + t3920 * t4384 * t4581) - t4399 * (t4391 * (mrSges(4,1) * t4599 + t4601) - t4604 * t4599 - mrSges(4,3) * t4396 * g(2) + t4389 * mrSges(4,1) * g(3)) + (t4391 * (g(2) * mrSges(4,2) - mrSges(4,1) * t4612) + t4601 * t4389 * t4394 + mrSges(4,1) * t4619 + mrSges(4,3) * g(3) * t4396) * t4401;
t4627 = -t4394 * t4393 + t4397;
t4629 = t4399 * t4627 + t4405;
t4632 = t4391 * t4396;
t4634 = t4389 * t4396;
t4637 = -koppelP(1,3) * t4394 - koppelP(1,1) * t4632 + koppelP(1,2) * t4634;
t4644 = t287 * t50;
t4651 = t412 * t50;
t4658 = -t4394 * t4431 + t4433;
t4660 = t4399 * t4658 + t4439;
t4666 = -koppelP(2,3) * t4394 - koppelP(2,1) * t4632 + koppelP(2,2) * t4634;
t4673 = t683 * t504;
t4680 = t796 * t504;
t4687 = -t4394 * t4465 + t4467;
t4689 = t4399 * t4687 + t4473;
t4695 = -koppelP(3,3) * t4394 - koppelP(3,1) * t4632 + koppelP(3,2) * t4634;
t4702 = t1064 * t885;
t4709 = t1177 * t885;
t4716 = -t4394 * t4499 + t4501;
t4718 = t4399 * t4716 + t4507;
t4724 = -koppelP(4,3) * t4394 - koppelP(4,1) * t4632 + koppelP(4,2) * t4634;
t4731 = t1445 * t1266;
t4737 = -t198 * t197 * (t188 * t184 * t4629 + t188 * t3960 * t4637) + t347 * (t4644 * t224 * t4629 + t2602 * t3993 * t4637) + t471 * (t2645 * t3999 * t4637 - t4651 * t373 * t4629) - t198 * t624 * (t615 * t4037 * t4666 + t615 * t611 * t4660) + t739 * (t2858 * t4070 * t4666 + t4673 * t647 * t4660) + t852 * (t2900 * t4076 * t4666 - t4680 * t765 * t4660) - t198 * t1005 * (t996 * t4114 * t4695 + t996 * t992 * t4689) + t1120 * (t4702 * t1028 * t4689 + t3113 * t4147 * t4695) + t1233 * (-t4709 * t1146 * t4689 + t3155 * t4153 * t4695) - t198 * t1386 * (t1377 * t1373 * t4718 + t1377 * t4191 * t4724) + t1501 * (t4731 * t1409 * t4718 + t3368 * t4224 * t4724);
t4739 = t1558 * t1266;
t4746 = -t4394 * t4533 + t4535;
t4748 = t4399 * t4746 + t4541;
t4754 = -koppelP(5,3) * t4394 - koppelP(5,1) * t4632 + koppelP(5,2) * t4634;
t4761 = t1826 * t1647;
t4768 = t1939 * t1647;
t4775 = -t4394 * t4567 + t4569;
t4777 = t4399 * t4775 + t4575;
t4783 = -koppelP(6,3) * t4394 - koppelP(6,1) * t4632 + koppelP(6,2) * t4634;
t4790 = t2207 * t2028;
t4797 = t2320 * t2028;
t4805 = mrSges(4,1) * t4391 - t4604;
t4816 = g(1) * mrSges(4,1);
t4819 = t1614 * (-t4739 * t1527 * t4718 + t3410 * t4230 * t4724) - t198 * t1767 * (t1758 * t1754 * t4748 + t1758 * t4268 * t4754) + t1882 * (t4761 * t1790 * t4748 + t3623 * t4301 * t4754) + t1995 * (-t4768 * t1908 * t4748 + t3665 * t4307 * t4754) - t198 * t2148 * (t2139 * t2135 * t4777 + t2139 * t4345 * t4783) + t2263 * (t4790 * t2171 * t4777 + t3878 * t4378 * t4783) + t2376 * (-t4797 * t2289 * t4777 + t3920 * t4384 * t4783) - t4399 * g(1) * (-t4805 * t4394 + mrSges(4,3) * t4396) + t4396 * t4805 * g(3) - g(1) * mrSges(4,2) * t4401 * t4391 - t4816 * t4389 * t4401 + mrSges(4,3) * t4612;
t4822 = t4401 * t4627 - t4410;
t4843 = t4401 * t4658 - t4444;
t4864 = t4401 * t4687 - t4478;
t4885 = t4401 * t4716 - t4512;
t4899 = -t198 * t197 * (t188 * t184 * t4822 - t188 * t2541 * t4637) + t347 * (t4644 * t224 * t4822 - t2602 * t2572 * t4637) + t471 * (-t2645 * t2619 * t4637 - t4651 * t373 * t4822) - t198 * t624 * (-t615 * t2799 * t4666 + t615 * t611 * t4843) + t739 * (-t2858 * t2830 * t4666 + t4673 * t647 * t4843) + t852 * (-t2900 * t2875 * t4666 - t4680 * t765 * t4843) - t198 * t1005 * (-t996 * t3054 * t4695 + t996 * t992 * t4864) + t1120 * (t4702 * t1028 * t4864 - t3113 * t3085 * t4695) + t1233 * (-t4709 * t1146 * t4864 - t3155 * t3130 * t4695) - t198 * t1386 * (t1377 * t1373 * t4885 - t1377 * t3309 * t4724) + t1501 * (t4731 * t1409 * t4885 - t3368 * t3340 * t4724);
t4907 = t4401 * t4746 - t4546;
t4928 = t4401 * t4775 - t4580;
t4955 = t4394 * t4401;
t4967 = t1614 * (-t4739 * t1527 * t4885 - t3410 * t3385 * t4724) - t198 * t1767 * (t1758 * t1754 * t4907 - t1758 * t3564 * t4754) + t1882 * (t4761 * t1790 * t4907 - t3623 * t3595 * t4754) + t1995 * (-t4768 * t1908 * t4907 - t3665 * t3640 * t4754) - t198 * t2148 * (t2139 * t2135 * t4928 - t2139 * t3819 * t4783) + t2263 * (t4790 * t2171 * t4928 - t3878 * t3850 * t4783) + t2376 * (-t4797 * t2289 * t4928 - t3920 * t3895 * t4783) - t4396 * (mrSges(4,3) * t4401 * g(1) + t4391 * mrSges(4,1) * g(2) - mrSges(4,2) * t4619) + t4391 * (t4399 * mrSges(4,2) + mrSges(4,1) * t4955) * g(1) - mrSges(4,2) * g(1) * t4389 * t4955 + t4816 * t4389 * t4399 - mrSges(4,3) * t4599;
unknown(1,1) = t2380;
unknown(2,1) = t3924;
unknown(3,1) = t4388;
unknown(4,1) = t4625;
unknown(5,1) = t4737 + t4819;
unknown(6,1) = t4899 + t4967;
taugX  = unknown;
