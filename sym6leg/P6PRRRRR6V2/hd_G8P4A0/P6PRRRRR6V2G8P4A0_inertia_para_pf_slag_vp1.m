% Calculate inertia matrix for parallel robot
% P6PRRRRR6V2G8P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-13 04:24
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G8P4A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-13 01:31:10
% EndTime: 2020-03-13 01:31:37
% DurationCPUTime: 28.82s
% Computational Cost: add. (666830->2728), mult. (1758511->5071), div. (5994->30), fcn. (1616413->74), ass. (0->1489)
unknown=NaN(6,6);
t1 = pkin(9) * pkin(3);
t2 = sin(pkin(6));
t3 = cos(qJ(2,1));
t4 = cos(pkin(10));
t5 = sin(legFrame(1,3));
t7 = sin(pkin(10));
t8 = cos(legFrame(1,3));
t10 = t5 * t4 + t8 * t7;
t11 = t10 * t3;
t12 = cos(pkin(4));
t14 = sin(qJ(2,1));
t17 = t8 * t4 - t5 * t7;
t18 = t17 * t14;
t19 = t12 * t11 + t18;
t20 = t19 * t2;
t21 = cos(pkin(5));
t25 = cos(pkin(6));
t26 = t25 ^ 2;
t27 = pkin(9) ^ 2;
t29 = pkin(3) ^ 2;
t30 = t27 * t26 - t27 + t29;
t31 = t10 * t14;
t33 = t17 * t3;
t34 = -t12 * t31 + t33;
t37 = sin(pkin(5));
t39 = sin(pkin(4));
t40 = t39 * pkin(3);
t41 = t2 * t40;
t42 = t21 - 0.1e1;
t43 = t42 * pkin(9);
t44 = t21 + 0.1e1;
t50 = cos(legFrame(1,2));
t52 = sin(legFrame(1,2));
t53 = t21 * t3;
t54 = t2 * pkin(3);
t55 = pkin(9) * t54;
t62 = t2 * t12;
t63 = pkin(3) * t62;
t65 = t44 * t43 * t63;
t66 = t37 * t39 * (t55 * t53 - t30 * t14 / 0.2e1) - t65;
t70 = cos(qJ(3,1));
t71 = t70 ^ 2;
t74 = sin(qJ(3,1));
t77 = pkin(9) * t25 + pkin(8);
t84 = pkin(9) * t2 * t74;
t86 = 0.2e1 * t84 + pkin(2);
t90 = t30 * t39;
t92 = t74 * t10 * t90;
t93 = t77 * pkin(3);
t94 = t19 * t93;
t96 = t21 ^ 2;
t98 = t39 * pkin(2);
t100 = t2 * t10 * pkin(9);
t104 = t39 * t3;
t105 = t30 * t74;
t107 = pkin(3) * t12;
t108 = t77 * t107;
t111 = pkin(3) * t14;
t116 = t30 * t12;
t117 = t74 * t116;
t118 = pkin(3) * t3;
t119 = t77 * t39;
t120 = t119 * t118;
t123 = t12 * pkin(2);
t124 = pkin(9) * t2;
t125 = t124 * t123;
t126 = t37 * (t21 * (t105 * t104 + t108) + t86 * t39 * t111) + t96 * (-t117 + t120) + t117 - t125 - t120;
t130 = t10 * t39;
t131 = t77 * t74;
t137 = t74 * pkin(2);
t139 = pkin(9) * t26;
t140 = t2 * t137 + pkin(9) - t139;
t150 = t96 * t2;
t152 = t77 * pkin(9);
t154 = pkin(2) * pkin(3);
t161 = t77 * t12;
t167 = t39 * t14;
t171 = t37 * (t21 * t2 * (t39 * t118 + t74 * t161) + t140 * t167) * pkin(9);
t175 = t96 * (t131 * t104 - t107) * t124;
t176 = t2 * t152;
t178 = pkin(3) * t123;
t180 = t74 * (-t176 * t104 + t178);
t181 = t1 * t62;
t184 = t71 * (t50 * (t37 * (0.2e1 * t21 * t20 * t1 + t34 * t30) + 0.2e1 * t10 * t44 * t43 * t41) - 0.2e1 * t66 * t52) + t70 * (t50 * (t37 * (t21 * (t77 * t10 * t40 - t74 * t19 * t30) + t86 * t34 * pkin(3)) + t96 * (-t92 - t94) + t92 - t100 * t98 + t94) + t52 * t126) + t50 * (t37 * (-t21 * t2 * (t19 * pkin(3) - t131 * t130) + t140 * t34) * pkin(9) - t150 * (t74 * t19 * t77 + t10 * t40) * pkin(9) + t74 * (t130 * t154 + t20 * t152) + t100 * t40) + t52 * (t171 + t175 + t180 + t181);
t185 = -0.2e1 * t71 * t66;
t188 = 0.1e1 / (t70 * t126 + t171 + t175 + t180 + t181 + t185);
t189 = t188 * t184;
t190 = m(1) + m(2) + m(3);
t193 = t12 * t33 - t31;
t196 = t37 * pkin(3);
t197 = t39 * t17;
t200 = t12 * t18 + t11;
t206 = t21 * t2;
t208 = t2 * t37;
t209 = t17 * pkin(9);
t215 = t70 * (t21 * t193 * pkin(3) + t2 * t200 * pkin(9) - t197 * t196) + t74 * (t206 * t193 * pkin(9) - t39 * t209 * t208 - t200 * pkin(3));
t216 = t50 * t215;
t217 = t96 * t12;
t219 = 0.2e1 * t55 * t217;
t221 = t39 * t37;
t222 = t1 * t221;
t225 = t30 * t37;
t226 = t225 * t167;
t227 = 0.2e1 * t181;
t230 = t96 * t116;
t231 = t21 * t225;
t235 = t2 * pkin(9) * t37;
t237 = 0.2e1 * t235 * t39 * t111;
t240 = t96 * t119;
t242 = t77 * t37;
t244 = t21 * t242 * t107;
t246 = t37 * t14 * pkin(2);
t248 = -t77 * t3 + t246;
t254 = t96 * t152;
t256 = t37 * t12;
t258 = t21 * t152;
t259 = t258 * t2 * t256;
t264 = t96 * pkin(3);
t265 = t264 * t62;
t267 = t2 * t221;
t273 = (t25 + 0.1e1) * (t25 - 0.1e1) * pkin(9);
t274 = t273 * t37 * t167;
t278 = 0.1e1 / (t71 * (-0.2e1 * t222 * t2 * t53 + t219 + t226 - t227) + t70 * (t74 * (t231 * t104 + t116 - t230 + t237) + t240 * t118 + t244 + t39 * t248 * pkin(3) - t125) + t74 * (t254 * t2 * t104 + t39 * t248 * t124 + t178 + t259) + (t267 * pkin(3) * t53 - t265 - t274 + t63) * pkin(9));
t284 = pkin(8) + rSges(3,3);
t286 = t37 * t284 * m(3);
t287 = m(2) * rSges(2,2);
t290 = rSges(3,1) * m(3);
t292 = t74 * m(3);
t294 = m(2) * rSges(2,1);
t295 = pkin(2) * m(3);
t298 = t14 * (-t21 * (rSges(3,1) * t74 + rSges(3,2) * t70) * m(3) + t286 - t287) + (-rSges(3,2) * t292 + t70 * t290 + t294 + t295) * t3;
t312 = t84 + pkin(2);
t315 = pkin(3) * t21 * t74;
t316 = t315 - t242;
t325 = t70 * (t12 * (t124 * t21 * t14 + t118) * t17 + (t124 * t53 - t111) * t10) + t12 * (-t316 * t14 + t3 * t312) * t17 - t10 * (t312 * t14 + t3 * t316);
t326 = t50 * t325;
t328 = t21 * t77;
t329 = t328 * t196;
t331 = pkin(9) * t2 * pkin(2);
t332 = -t96 * t105 + t105 + t329 - t331;
t334 = t96 * t93;
t335 = t37 * t74;
t336 = t21 * t30;
t338 = t336 * t335 + t334 - t93;
t346 = t124 * t264;
t348 = t258 * t2 * t335;
t350 = (t137 + t124) * pkin(3);
t354 = t21 * t196;
t355 = t96 * t131 - t131 + t354;
t364 = 0.1e1 / (t185 + t70 * (t12 * t332 + t39 * (t86 * t37 * t111 + t3 * t338)) + t12 * (-t346 + t348 + t350) + t39 * (t140 * t37 * t14 + t3 * t2 * t355) * pkin(9));
t365 = rSges(3,1) * t21;
t370 = rSges(3,2) * t21;
t381 = t39 * (t70 * (rSges(3,2) * t14 - t3 * t365) + (rSges(3,1) * t14 + t3 * t370) * t74) + (-t70 * rSges(3,1) + rSges(3,2) * t74) * t256;
t385 = m(3) * t381 * t364 * t326 + t39 * t298 * t278 * t216 + t190 * t189;
t388 = t39 * t298;
t390 = rSges(3,1) ^ 2;
t391 = rSges(3,2) ^ 2;
t392 = -t390 + t391;
t394 = m(3) * t392 + Icges(3,1) - Icges(3,2);
t397 = -rSges(3,2) * t290 + Icges(3,4);
t404 = (pkin(8) + rSges(3,1) + rSges(3,3)) * (pkin(8) - rSges(3,1) + rSges(3,3)) * m(3);
t409 = -m(3) * t284 * rSges(3,2) + Icges(3,6);
t410 = t70 * t409;
t413 = -m(3) * t284 * rSges(3,1) + Icges(3,5);
t420 = -m(3) * t392 - Icges(3,1) + Icges(3,2);
t424 = 0.2e1 * pkin(2) * t290;
t427 = rSges(3,2) * pkin(2);
t428 = t427 * t292;
t430 = rSges(3,3) ^ 2;
t433 = pkin(2) ^ 2;
t434 = pkin(8) ^ 2;
t436 = m(3) * (0.2e1 * rSges(3,3) * pkin(8) + t391 + t430 + t433 + t434);
t437 = rSges(2,1) ^ 2;
t438 = rSges(2,2) ^ 2;
t440 = m(2) * (t437 + t438);
t441 = t96 * (-0.2e1 * t70 * t397 * t74 + t71 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t21 * (t74 * t413 + t410) * t37 + t71 * t420 + t70 * (0.2e1 * t397 * t74 + t424) - 0.2e1 * t428 + t436 + Icges(3,1) + t440 + Icges(2,3);
t448 = rSges(3,1) * pkin(2);
t451 = m(3) * (t390 + t391);
t454 = (t74 * t413 + t410) * t37 + t21 * (t448 * t70 * m(3) + Icges(3,3) - t428 + t451);
t457 = t441 * t278 * t216 - t454 * t364 * t326 + t388 * t189;
t459 = t278 * t50;
t461 = m(3) * t381;
t465 = t451 + Icges(3,3);
t468 = t454 * t278 * t216 - t465 * t364 * t326 - t461 * t189;
t470 = t364 * t50;
t472 = cos(qJ(2,2));
t473 = sin(legFrame(2,3));
t475 = cos(legFrame(2,3));
t477 = t473 * t4 + t475 * t7;
t478 = t477 * t472;
t480 = sin(qJ(2,2));
t483 = t475 * t4 - t473 * t7;
t484 = t483 * t480;
t485 = t12 * t478 + t484;
t486 = t485 * t2;
t490 = t477 * t480;
t492 = t483 * t472;
t493 = -t12 * t490 + t492;
t502 = cos(legFrame(2,2));
t504 = sin(legFrame(2,2));
t505 = t21 * t472;
t512 = t37 * t39 * (t55 * t505 - t30 * t480 / 0.2e1) - t65;
t516 = cos(qJ(3,2));
t517 = t516 ^ 2;
t520 = sin(qJ(3,2));
t528 = pkin(9) * t2 * t520;
t530 = 0.2e1 * t528 + pkin(2);
t535 = t520 * t477 * t90;
t536 = t485 * t93;
t540 = t2 * t477 * pkin(9);
t544 = t39 * t472;
t545 = t30 * t520;
t549 = pkin(3) * t480;
t554 = t520 * t116;
t555 = pkin(3) * t472;
t556 = t119 * t555;
t559 = t37 * (t21 * (t545 * t544 + t108) + t530 * t39 * t549) + t96 * (-t554 + t556) + t554 - t125 - t556;
t563 = t477 * t39;
t564 = t77 * t520;
t570 = t520 * pkin(2);
t572 = t2 * t570 + pkin(9) - t139;
t595 = t39 * t480;
t599 = t37 * (t21 * t2 * (t520 * t161 + t39 * t555) + t572 * t595) * pkin(9);
t603 = t96 * (t564 * t544 - t107) * t124;
t606 = t520 * (-t176 * t544 + t178);
t609 = t517 * (t502 * (t37 * (0.2e1 * t21 * t486 * t1 + t493 * t30) + 0.2e1 * t477 * t44 * t43 * t41) - 0.2e1 * t512 * t504) + t516 * (t502 * (t37 * (t21 * (-t520 * t485 * t30 + t77 * t477 * t40) + t530 * t493 * pkin(3)) + t96 * (-t535 - t536) + t535 - t540 * t98 + t536) + t504 * t559) + t502 * (t37 * (-t21 * t2 * (t485 * pkin(3) - t564 * t563) + t572 * t493) * pkin(9) - t150 * (t520 * t485 * t77 + t477 * t40) * pkin(9) + t520 * (t486 * t152 + t563 * t154) + t540 * t40) + t504 * (t599 + t603 + t606 + t181);
t610 = -0.2e1 * t517 * t512;
t613 = 0.1e1 / (t516 * t559 + t181 + t599 + t603 + t606 + t610);
t614 = t613 * t609;
t617 = t12 * t492 - t490;
t620 = t39 * t483;
t623 = t12 * t484 + t478;
t630 = t483 * pkin(9);
t636 = t516 * (t21 * t617 * pkin(3) + t2 * t623 * pkin(9) - t620 * t196) + t520 * (t206 * t617 * pkin(9) - t39 * t630 * t208 - t623 * pkin(3));
t637 = t502 * t636;
t641 = t225 * t595;
t647 = 0.2e1 * t235 * t39 * t549;
t652 = t37 * t480 * pkin(2);
t654 = -t77 * t472 + t652;
t668 = t273 * t37 * t595;
t672 = 0.1e1 / (t517 * (-0.2e1 * t222 * t2 * t505 + t219 - t227 + t641) + t516 * (t520 * (t231 * t544 + t116 - t230 + t647) + t240 * t555 + t244 + t39 * t654 * pkin(3) - t125) + t520 * (t39 * t654 * t124 + t254 * t2 * t544 + t178 + t259) + (t267 * pkin(3) * t505 - t265 + t63 - t668) * pkin(9));
t681 = t520 * m(3);
t685 = t480 * (-t21 * (rSges(3,1) * t520 + rSges(3,2) * t516) * m(3) + t286 - t287) + (-rSges(3,2) * t681 + t516 * t290 + t294 + t295) * t472;
t699 = t528 + pkin(2);
t702 = pkin(3) * t21 * t520;
t703 = t702 - t242;
t712 = t516 * (t12 * (t124 * t21 * t480 + t555) * t483 + (t124 * t505 - t549) * t477) + t12 * (t472 * t699 - t703 * t480) * t483 - t477 * (t472 * t703 + t699 * t480);
t713 = t502 * t712;
t715 = -t96 * t545 + t329 - t331 + t545;
t717 = t37 * t520;
t719 = t336 * t717 + t334 - t93;
t728 = t258 * t2 * t717;
t730 = (t570 + t124) * pkin(3);
t734 = t96 * t564 + t354 - t564;
t743 = 0.1e1 / (t610 + t516 * (t12 * t715 + t39 * (t530 * t37 * t549 + t472 * t719)) + t12 * (-t346 + t728 + t730) + t39 * (t472 * t2 * t734 + t572 * t37 * t480) * pkin(9));
t758 = t39 * (t516 * (rSges(3,2) * t480 - t472 * t365) + (rSges(3,1) * t480 + t472 * t370) * t520) + (-t516 * rSges(3,1) + rSges(3,2) * t520) * t256;
t762 = m(3) * t758 * t743 * t713 + t39 * t685 * t672 * t637 + t190 * t614;
t765 = t39 * t685;
t773 = t516 * t409;
t783 = t427 * t681;
t785 = t96 * (-0.2e1 * t516 * t397 * t520 + t517 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t21 * (t520 * t413 + t773) * t37 + t517 * t420 + t516 * (0.2e1 * t397 * t520 + t424) - 0.2e1 * t783 + t436 + Icges(3,1) + t440 + Icges(2,3);
t795 = (t520 * t413 + t773) * t37 + t21 * (t448 * t516 * m(3) + Icges(3,3) + t451 - t783);
t798 = t785 * t672 * t637 - t795 * t743 * t713 + t765 * t614;
t800 = t672 * t502;
t802 = m(3) * t758;
t808 = -t465 * t743 * t713 + t795 * t672 * t637 - t802 * t614;
t810 = t743 * t502;
t812 = cos(qJ(2,3));
t813 = sin(legFrame(3,3));
t815 = cos(legFrame(3,3));
t817 = t813 * t4 + t815 * t7;
t818 = t817 * t812;
t820 = sin(qJ(2,3));
t823 = t815 * t4 - t813 * t7;
t824 = t823 * t820;
t825 = t12 * t818 + t824;
t826 = t825 * t2;
t830 = t817 * t820;
t832 = t823 * t812;
t833 = -t12 * t830 + t832;
t842 = cos(legFrame(3,2));
t844 = sin(legFrame(3,2));
t845 = t21 * t812;
t852 = t37 * t39 * (t55 * t845 - t30 * t820 / 0.2e1) - t65;
t856 = cos(qJ(3,3));
t857 = t856 ^ 2;
t860 = sin(qJ(3,3));
t868 = pkin(9) * t2 * t860;
t870 = 0.2e1 * t868 + pkin(2);
t875 = t860 * t817 * t90;
t876 = t825 * t93;
t880 = t2 * t817 * pkin(9);
t884 = t39 * t812;
t885 = t30 * t860;
t889 = pkin(3) * t820;
t894 = t860 * t116;
t895 = pkin(3) * t812;
t896 = t119 * t895;
t899 = t37 * (t21 * (t885 * t884 + t108) + t870 * t39 * t889) + t96 * (-t894 + t896) + t894 - t125 - t896;
t903 = t817 * t39;
t904 = t77 * t860;
t910 = t860 * pkin(2);
t912 = t2 * t910 + pkin(9) - t139;
t935 = t39 * t820;
t939 = t37 * (t21 * t2 * (t860 * t161 + t39 * t895) + t912 * t935) * pkin(9);
t943 = t96 * (t904 * t884 - t107) * t124;
t946 = t860 * (-t176 * t884 + t178);
t949 = t857 * (t842 * (t37 * (0.2e1 * t21 * t826 * t1 + t833 * t30) + 0.2e1 * t817 * t44 * t43 * t41) - 0.2e1 * t852 * t844) + t856 * (t842 * (t37 * (t21 * (-t860 * t825 * t30 + t77 * t817 * t40) + t870 * t833 * pkin(3)) + t96 * (-t875 - t876) + t875 - t880 * t98 + t876) + t844 * t899) + t842 * (t37 * (-t21 * t2 * (t825 * pkin(3) - t904 * t903) + t912 * t833) * pkin(9) - t150 * (t860 * t825 * t77 + t817 * t40) * pkin(9) + t860 * (t826 * t152 + t903 * t154) + t880 * t40) + t844 * (t939 + t943 + t946 + t181);
t950 = -0.2e1 * t857 * t852;
t953 = 0.1e1 / (t856 * t899 + t181 + t939 + t943 + t946 + t950);
t954 = t953 * t949;
t957 = t12 * t832 - t830;
t960 = t39 * t823;
t963 = t12 * t824 + t818;
t970 = t823 * pkin(9);
t976 = t856 * (t21 * t957 * pkin(3) + t2 * t963 * pkin(9) - t960 * t196) + t860 * (t206 * t957 * pkin(9) - t39 * t970 * t208 - t963 * pkin(3));
t977 = t842 * t976;
t981 = t225 * t935;
t987 = 0.2e1 * t235 * t39 * t889;
t992 = t37 * t820 * pkin(2);
t994 = -t77 * t812 + t992;
t1008 = t273 * t37 * t935;
t1012 = 0.1e1 / (t857 * (-0.2e1 * t222 * t2 * t845 + t219 - t227 + t981) + t856 * (t860 * (t231 * t884 + t116 - t230 + t987) + t240 * t895 + t244 + t39 * t994 * pkin(3) - t125) + t860 * (t39 * t994 * t124 + t254 * t2 * t884 + t178 + t259) + (t267 * pkin(3) * t845 - t1008 - t265 + t63) * pkin(9));
t1021 = t860 * m(3);
t1025 = t820 * (-t21 * (rSges(3,1) * t860 + rSges(3,2) * t856) * m(3) + t286 - t287) + (-rSges(3,2) * t1021 + t856 * t290 + t294 + t295) * t812;
t1039 = t868 + pkin(2);
t1042 = pkin(3) * t21 * t860;
t1043 = t1042 - t242;
t1052 = t856 * (t12 * (t124 * t21 * t820 + t895) * t823 + (t124 * t845 - t889) * t817) + t12 * (t812 * t1039 - t1043 * t820) * t823 - t817 * (t1039 * t820 + t812 * t1043);
t1053 = t842 * t1052;
t1055 = -t96 * t885 + t329 - t331 + t885;
t1057 = t37 * t860;
t1059 = t336 * t1057 + t334 - t93;
t1068 = t258 * t2 * t1057;
t1070 = (t910 + t124) * pkin(3);
t1074 = t96 * t904 + t354 - t904;
t1083 = 0.1e1 / (t950 + t856 * (t12 * t1055 + t39 * (t870 * t37 * t889 + t812 * t1059)) + t12 * (-t346 + t1068 + t1070) + t39 * (t812 * t2 * t1074 + t912 * t37 * t820) * pkin(9));
t1098 = t39 * (t856 * (rSges(3,2) * t820 - t812 * t365) + (rSges(3,1) * t820 + t812 * t370) * t860) + (-t856 * rSges(3,1) + rSges(3,2) * t860) * t256;
t1102 = m(3) * t1098 * t1083 * t1053 + t39 * t1025 * t1012 * t977 + t190 * t954;
t1105 = t39 * t1025;
t1113 = t856 * t409;
t1123 = t427 * t1021;
t1125 = t96 * (-0.2e1 * t856 * t397 * t860 + t857 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t21 * (t860 * t413 + t1113) * t37 + t857 * t420 + t856 * (0.2e1 * t397 * t860 + t424) - 0.2e1 * t1123 + t436 + Icges(3,1) + t440 + Icges(2,3);
t1135 = (t860 * t413 + t1113) * t37 + t21 * (t448 * t856 * m(3) + Icges(3,3) - t1123 + t451);
t1138 = t1125 * t1012 * t977 - t1135 * t1083 * t1053 + t1105 * t954;
t1140 = t1012 * t842;
t1142 = m(3) * t1098;
t1148 = t1135 * t1012 * t977 - t465 * t1083 * t1053 - t1142 * t954;
t1150 = t1083 * t842;
t1152 = cos(qJ(2,4));
t1153 = sin(legFrame(4,3));
t1155 = cos(legFrame(4,3));
t1157 = t1153 * t4 + t1155 * t7;
t1158 = t1157 * t1152;
t1160 = sin(qJ(2,4));
t1163 = -t1153 * t7 + t1155 * t4;
t1164 = t1163 * t1160;
t1165 = t12 * t1158 + t1164;
t1166 = t1165 * t2;
t1170 = t1157 * t1160;
t1172 = t1163 * t1152;
t1173 = -t12 * t1170 + t1172;
t1182 = cos(legFrame(4,2));
t1184 = sin(legFrame(4,2));
t1185 = t21 * t1152;
t1192 = t37 * t39 * (t55 * t1185 - t30 * t1160 / 0.2e1) - t65;
t1196 = cos(qJ(3,4));
t1197 = t1196 ^ 2;
t1200 = sin(qJ(3,4));
t1208 = pkin(9) * t2 * t1200;
t1210 = 0.2e1 * t1208 + pkin(2);
t1215 = t1200 * t1157 * t90;
t1216 = t1165 * t93;
t1220 = t2 * t1157 * pkin(9);
t1224 = t39 * t1152;
t1225 = t30 * t1200;
t1229 = pkin(3) * t1160;
t1234 = t1200 * t116;
t1235 = pkin(3) * t1152;
t1236 = t119 * t1235;
t1239 = t37 * (t21 * (t1225 * t1224 + t108) + t1210 * t39 * t1229) + t96 * (-t1234 + t1236) + t1234 - t125 - t1236;
t1243 = t1157 * t39;
t1244 = t77 * t1200;
t1250 = t1200 * pkin(2);
t1252 = t2 * t1250 + pkin(9) - t139;
t1275 = t39 * t1160;
t1279 = t37 * (t21 * t2 * (t1200 * t161 + t39 * t1235) + t1252 * t1275) * pkin(9);
t1283 = t96 * (t1244 * t1224 - t107) * t124;
t1286 = t1200 * (-t176 * t1224 + t178);
t1289 = t1197 * (t1182 * (t37 * (0.2e1 * t21 * t1166 * t1 + t1173 * t30) + 0.2e1 * t1157 * t44 * t43 * t41) - 0.2e1 * t1192 * t1184) + t1196 * (t1182 * (t37 * (t21 * (t77 * t1157 * t40 - t1200 * t1165 * t30) + t1210 * t1173 * pkin(3)) + t96 * (-t1215 - t1216) + t1215 - t1220 * t98 + t1216) + t1184 * t1239) + t1182 * (t37 * (-t21 * t2 * (t1165 * pkin(3) - t1244 * t1243) + t1252 * t1173) * pkin(9) - t150 * (t1200 * t1165 * t77 + t1157 * t40) * pkin(9) + t1200 * (t1166 * t152 + t1243 * t154) + t1220 * t40) + t1184 * (t1279 + t1283 + t1286 + t181);
t1290 = -0.2e1 * t1197 * t1192;
t1293 = 0.1e1 / (t1196 * t1239 + t1279 + t1283 + t1286 + t1290 + t181);
t1294 = t1293 * t1289;
t1297 = t12 * t1172 - t1170;
t1300 = t39 * t1163;
t1303 = t12 * t1164 + t1158;
t1310 = t1163 * pkin(9);
t1316 = t1196 * (t21 * t1297 * pkin(3) + t2 * t1303 * pkin(9) - t1300 * t196) + t1200 * (t206 * t1297 * pkin(9) - t39 * t1310 * t208 - t1303 * pkin(3));
t1317 = t1182 * t1316;
t1321 = t225 * t1275;
t1327 = 0.2e1 * t235 * t39 * t1229;
t1332 = t37 * t1160 * pkin(2);
t1334 = -t77 * t1152 + t1332;
t1348 = t273 * t37 * t1275;
t1352 = 0.1e1 / (t1197 * (-0.2e1 * t222 * t2 * t1185 + t1321 + t219 - t227) + t1196 * (t1200 * (t231 * t1224 + t116 + t1327 - t230) + t240 * t1235 + t244 + t39 * t1334 * pkin(3) - t125) + t1200 * (t254 * t2 * t1224 + t39 * t1334 * t124 + t178 + t259) + (t267 * pkin(3) * t1185 - t1348 - t265 + t63) * pkin(9));
t1361 = t1200 * m(3);
t1365 = t1160 * (-t21 * (rSges(3,1) * t1200 + rSges(3,2) * t1196) * m(3) + t286 - t287) + (-rSges(3,2) * t1361 + t1196 * t290 + t294 + t295) * t1152;
t1379 = t1208 + pkin(2);
t1382 = pkin(3) * t21 * t1200;
t1383 = t1382 - t242;
t1392 = t1196 * (t12 * (t124 * t21 * t1160 + t1235) * t1163 + (t124 * t1185 - t1229) * t1157) + t12 * (t1152 * t1379 - t1383 * t1160) * t1163 - t1157 * (t1152 * t1383 + t1379 * t1160);
t1393 = t1182 * t1392;
t1395 = -t96 * t1225 + t1225 + t329 - t331;
t1397 = t37 * t1200;
t1399 = t336 * t1397 + t334 - t93;
t1408 = t258 * t2 * t1397;
t1410 = (t1250 + t124) * pkin(3);
t1414 = t96 * t1244 - t1244 + t354;
t1423 = 0.1e1 / (t1290 + t1196 * (t12 * t1395 + t39 * (t1210 * t37 * t1229 + t1152 * t1399)) + t12 * (-t346 + t1408 + t1410) + t39 * (t1152 * t2 * t1414 + t1252 * t37 * t1160) * pkin(9));
t1438 = t39 * (t1196 * (rSges(3,2) * t1160 - t1152 * t365) + (rSges(3,1) * t1160 + t1152 * t370) * t1200) + (-t1196 * rSges(3,1) + rSges(3,2) * t1200) * t256;
t1442 = m(3) * t1438 * t1423 * t1393 + t39 * t1365 * t1352 * t1317 + t190 * t1294;
t1445 = t39 * t1365;
t1453 = t1196 * t409;
t1463 = t427 * t1361;
t1465 = t96 * (-0.2e1 * t1196 * t397 * t1200 + t1197 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t21 * (t1200 * t413 + t1453) * t37 + t1197 * t420 + t1196 * (0.2e1 * t397 * t1200 + t424) - 0.2e1 * t1463 + t436 + Icges(3,1) + t440 + Icges(2,3);
t1475 = (t1200 * t413 + t1453) * t37 + t21 * (t448 * t1196 * m(3) + Icges(3,3) - t1463 + t451);
t1478 = t1465 * t1352 * t1317 - t1475 * t1423 * t1393 + t1445 * t1294;
t1480 = t1352 * t1182;
t1482 = m(3) * t1438;
t1488 = t1475 * t1352 * t1317 - t465 * t1423 * t1393 - t1482 * t1294;
t1490 = t1423 * t1182;
t1492 = cos(qJ(2,5));
t1493 = sin(legFrame(5,3));
t1495 = cos(legFrame(5,3));
t1497 = t1493 * t4 + t1495 * t7;
t1498 = t1497 * t1492;
t1500 = sin(qJ(2,5));
t1503 = -t1493 * t7 + t1495 * t4;
t1504 = t1503 * t1500;
t1505 = t12 * t1498 + t1504;
t1506 = t1505 * t2;
t1510 = t1497 * t1500;
t1512 = t1503 * t1492;
t1513 = -t12 * t1510 + t1512;
t1522 = cos(legFrame(5,2));
t1524 = sin(legFrame(5,2));
t1525 = t21 * t1492;
t1532 = t37 * t39 * (t55 * t1525 - t30 * t1500 / 0.2e1) - t65;
t1536 = cos(qJ(3,5));
t1537 = t1536 ^ 2;
t1540 = sin(qJ(3,5));
t1548 = pkin(9) * t2 * t1540;
t1550 = 0.2e1 * t1548 + pkin(2);
t1555 = t1540 * t1497 * t90;
t1556 = t1505 * t93;
t1560 = t2 * t1497 * pkin(9);
t1564 = t39 * t1492;
t1565 = t30 * t1540;
t1569 = pkin(3) * t1500;
t1574 = t1540 * t116;
t1575 = pkin(3) * t1492;
t1576 = t119 * t1575;
t1579 = t37 * (t21 * (t1565 * t1564 + t108) + t1550 * t39 * t1569) + t96 * (-t1574 + t1576) + t1574 - t125 - t1576;
t1583 = t1497 * t39;
t1584 = t77 * t1540;
t1590 = t1540 * pkin(2);
t1592 = t2 * t1590 + pkin(9) - t139;
t1615 = t39 * t1500;
t1619 = t37 * (t21 * t2 * (t1540 * t161 + t39 * t1575) + t1592 * t1615) * pkin(9);
t1623 = t96 * (t1584 * t1564 - t107) * t124;
t1626 = t1540 * (-t176 * t1564 + t178);
t1629 = t1537 * (t1522 * (t37 * (0.2e1 * t21 * t1506 * t1 + t1513 * t30) + 0.2e1 * t1497 * t44 * t43 * t41) - 0.2e1 * t1532 * t1524) + t1536 * (t1522 * (t37 * (t21 * (t77 * t1497 * t40 - t1540 * t1505 * t30) + t1550 * t1513 * pkin(3)) + t96 * (-t1555 - t1556) + t1555 - t1560 * t98 + t1556) + t1524 * t1579) + t1522 * (t37 * (-t21 * t2 * (t1505 * pkin(3) - t1584 * t1583) + t1592 * t1513) * pkin(9) - t150 * (t1540 * t1505 * t77 + t1497 * t40) * pkin(9) + t1540 * (t1506 * t152 + t1583 * t154) + t1560 * t40) + t1524 * (t1619 + t1623 + t1626 + t181);
t1630 = -0.2e1 * t1537 * t1532;
t1633 = 0.1e1 / (t1536 * t1579 + t1619 + t1623 + t1626 + t1630 + t181);
t1634 = t1633 * t1629;
t1637 = t12 * t1512 - t1510;
t1640 = t39 * t1503;
t1643 = t12 * t1504 + t1498;
t1650 = t1503 * pkin(9);
t1656 = t1536 * (t21 * t1637 * pkin(3) + t2 * t1643 * pkin(9) - t1640 * t196) + t1540 * (t206 * t1637 * pkin(9) - t39 * t1650 * t208 - t1643 * pkin(3));
t1657 = t1522 * t1656;
t1661 = t225 * t1615;
t1667 = 0.2e1 * t235 * t39 * t1569;
t1672 = t37 * t1500 * pkin(2);
t1674 = -t77 * t1492 + t1672;
t1688 = t273 * t37 * t1615;
t1692 = 0.1e1 / (t1537 * (-0.2e1 * t222 * t2 * t1525 + t1661 + t219 - t227) + t1536 * (t1540 * (t231 * t1564 + t116 + t1667 - t230) + t240 * t1575 + t244 + t39 * t1674 * pkin(3) - t125) + t1540 * (t39 * t1674 * t124 + t254 * t2 * t1564 + t178 + t259) + (t267 * pkin(3) * t1525 - t1688 - t265 + t63) * pkin(9));
t1701 = t1540 * m(3);
t1705 = t1500 * (-t21 * (rSges(3,1) * t1540 + rSges(3,2) * t1536) * m(3) + t286 - t287) + (-rSges(3,2) * t1701 + t1536 * t290 + t294 + t295) * t1492;
t1719 = t1548 + pkin(2);
t1722 = pkin(3) * t21 * t1540;
t1723 = t1722 - t242;
t1732 = t1536 * (t12 * (t124 * t21 * t1500 + t1575) * t1503 + (t124 * t1525 - t1569) * t1497) + t12 * (t1492 * t1719 - t1723 * t1500) * t1503 - t1497 * (t1492 * t1723 + t1719 * t1500);
t1733 = t1522 * t1732;
t1735 = -t96 * t1565 + t1565 + t329 - t331;
t1737 = t37 * t1540;
t1739 = t336 * t1737 + t334 - t93;
t1748 = t258 * t2 * t1737;
t1750 = (t1590 + t124) * pkin(3);
t1754 = t96 * t1584 - t1584 + t354;
t1763 = 0.1e1 / (t1630 + t1536 * (t12 * t1735 + t39 * (t1550 * t37 * t1569 + t1492 * t1739)) + t12 * (-t346 + t1748 + t1750) + t39 * (t1492 * t2 * t1754 + t1592 * t37 * t1500) * pkin(9));
t1778 = t39 * (t1536 * (rSges(3,2) * t1500 - t1492 * t365) + (rSges(3,1) * t1500 + t1492 * t370) * t1540) + (-t1536 * rSges(3,1) + rSges(3,2) * t1540) * t256;
t1782 = m(3) * t1778 * t1763 * t1733 + t39 * t1705 * t1692 * t1657 + t190 * t1634;
t1785 = t39 * t1705;
t1793 = t1536 * t409;
t1803 = t427 * t1701;
t1805 = t96 * (-0.2e1 * t1536 * t397 * t1540 + t1537 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t21 * (t1540 * t413 + t1793) * t37 + t1537 * t420 + t1536 * (0.2e1 * t397 * t1540 + t424) - 0.2e1 * t1803 + t436 + Icges(3,1) + t440 + Icges(2,3);
t1815 = (t1540 * t413 + t1793) * t37 + t21 * (t448 * t1536 * m(3) + Icges(3,3) - t1803 + t451);
t1818 = t1805 * t1692 * t1657 - t1815 * t1763 * t1733 + t1785 * t1634;
t1820 = t1692 * t1522;
t1822 = m(3) * t1778;
t1828 = t1815 * t1692 * t1657 - t465 * t1763 * t1733 - t1822 * t1634;
t1830 = t1763 * t1522;
t1832 = cos(qJ(2,6));
t1833 = sin(legFrame(6,3));
t1835 = cos(legFrame(6,3));
t1837 = t1833 * t4 + t1835 * t7;
t1838 = t1837 * t1832;
t1840 = sin(qJ(2,6));
t1843 = -t1833 * t7 + t1835 * t4;
t1844 = t1843 * t1840;
t1845 = t12 * t1838 + t1844;
t1846 = t1845 * t2;
t1850 = t1837 * t1840;
t1852 = t1843 * t1832;
t1853 = -t12 * t1850 + t1852;
t1862 = cos(legFrame(6,2));
t1864 = sin(legFrame(6,2));
t1865 = t21 * t1832;
t1872 = t37 * t39 * (t55 * t1865 - t30 * t1840 / 0.2e1) - t65;
t1876 = cos(qJ(3,6));
t1877 = t1876 ^ 2;
t1880 = sin(qJ(3,6));
t1888 = pkin(9) * t2 * t1880;
t1890 = 0.2e1 * t1888 + pkin(2);
t1895 = t1880 * t1837 * t90;
t1896 = t1845 * t93;
t1900 = t2 * t1837 * pkin(9);
t1904 = t39 * t1832;
t1905 = t30 * t1880;
t1909 = pkin(3) * t1840;
t1914 = t1880 * t116;
t1915 = pkin(3) * t1832;
t1916 = t119 * t1915;
t1919 = t37 * (t21 * (t1905 * t1904 + t108) + t1890 * t39 * t1909) + t96 * (-t1914 + t1916) + t1914 - t125 - t1916;
t1923 = t1837 * t39;
t1924 = t77 * t1880;
t1930 = t1880 * pkin(2);
t1932 = t2 * t1930 + pkin(9) - t139;
t1955 = t39 * t1840;
t1959 = t37 * (t21 * t2 * (t1880 * t161 + t39 * t1915) + t1932 * t1955) * pkin(9);
t1963 = t96 * (t1924 * t1904 - t107) * t124;
t1966 = t1880 * (-t176 * t1904 + t178);
t1969 = t1877 * (t1862 * (t37 * (0.2e1 * t21 * t1846 * t1 + t1853 * t30) + 0.2e1 * t1837 * t44 * t43 * t41) - 0.2e1 * t1872 * t1864) + t1876 * (t1862 * (t37 * (t21 * (t77 * t1837 * t40 - t1880 * t1845 * t30) + t1890 * t1853 * pkin(3)) + t96 * (-t1895 - t1896) + t1895 - t1900 * t98 + t1896) + t1864 * t1919) + t1862 * (t37 * (-t21 * t2 * (t1845 * pkin(3) - t1924 * t1923) + t1932 * t1853) * pkin(9) - t150 * (t1880 * t1845 * t77 + t1837 * t40) * pkin(9) + t1880 * (t1846 * t152 + t1923 * t154) + t1900 * t40) + t1864 * (t1959 + t1963 + t1966 + t181);
t1970 = -0.2e1 * t1877 * t1872;
t1973 = 0.1e1 / (t1876 * t1919 + t181 + t1959 + t1963 + t1966 + t1970);
t1974 = t1973 * t1969;
t1977 = t12 * t1852 - t1850;
t1980 = t39 * t1843;
t1983 = t12 * t1844 + t1838;
t1990 = t1843 * pkin(9);
t1996 = t1876 * (t21 * t1977 * pkin(3) + t2 * t1983 * pkin(9) - t1980 * t196) + t1880 * (t206 * t1977 * pkin(9) - t39 * t1990 * t208 - t1983 * pkin(3));
t1997 = t1862 * t1996;
t2001 = t225 * t1955;
t2007 = 0.2e1 * t235 * t39 * t1909;
t2012 = t37 * t1840 * pkin(2);
t2014 = -t77 * t1832 + t2012;
t2028 = t273 * t37 * t1955;
t2032 = 0.1e1 / (t1877 * (-0.2e1 * t222 * t2 * t1865 + t2001 + t219 - t227) + t1876 * (t1880 * (t231 * t1904 + t116 + t2007 - t230) + t240 * t1915 + t244 + t39 * t2014 * pkin(3) - t125) + t1880 * (t39 * t2014 * t124 + t254 * t2 * t1904 + t178 + t259) + (t267 * pkin(3) * t1865 - t2028 - t265 + t63) * pkin(9));
t2041 = t1880 * m(3);
t2045 = t1840 * (-t21 * (rSges(3,1) * t1880 + rSges(3,2) * t1876) * m(3) + t286 - t287) + (-rSges(3,2) * t2041 + t1876 * t290 + t294 + t295) * t1832;
t2059 = t1888 + pkin(2);
t2062 = pkin(3) * t21 * t1880;
t2063 = t2062 - t242;
t2072 = t1876 * (t12 * (t124 * t21 * t1840 + t1915) * t1843 + (t124 * t1865 - t1909) * t1837) + t12 * (t1832 * t2059 - t2063 * t1840) * t1843 - t1837 * (t1832 * t2063 + t2059 * t1840);
t2073 = t1862 * t2072;
t2075 = -t96 * t1905 + t1905 + t329 - t331;
t2077 = t37 * t1880;
t2079 = t336 * t2077 + t334 - t93;
t2088 = t258 * t2 * t2077;
t2090 = (t1930 + t124) * pkin(3);
t2094 = t96 * t1924 - t1924 + t354;
t2103 = 0.1e1 / (t1970 + t1876 * (t12 * t2075 + t39 * (t1890 * t37 * t1909 + t1832 * t2079)) + t12 * (-t346 + t2088 + t2090) + t39 * (t1832 * t2 * t2094 + t1932 * t37 * t1840) * pkin(9));
t2118 = t39 * (t1876 * (rSges(3,2) * t1840 - t1832 * t365) + (rSges(3,1) * t1840 + t1832 * t370) * t1880) + (-t1876 * rSges(3,1) + rSges(3,2) * t1880) * t256;
t2122 = m(3) * t2118 * t2103 * t2073 + t39 * t2045 * t2032 * t1997 + t190 * t1974;
t2125 = t39 * t2045;
t2133 = t1876 * t409;
t2143 = t427 * t2041;
t2145 = t96 * (-0.2e1 * t1876 * t397 * t1880 + t1877 * t394 - Icges(3,1) + Icges(3,3) - t404) + 0.2e1 * t21 * (t1880 * t413 + t2133) * t37 + t1877 * t420 + t1876 * (0.2e1 * t397 * t1880 + t424) - 0.2e1 * t2143 + t436 + Icges(3,1) + t440 + Icges(2,3);
t2155 = (t1880 * t413 + t2133) * t37 + t21 * (t448 * t1876 * m(3) + Icges(3,3) - t2143 + t451);
t2158 = t2145 * t2032 * t1997 - t2155 * t2103 * t2073 + t2125 * t1974;
t2160 = t2032 * t1862;
t2162 = m(3) * t2118;
t2168 = t2155 * t2032 * t1997 - t465 * t2103 * t2073 - t2162 * t1974;
t2170 = t2103 * t1862;
t2172 = t188 * t184 * t385 + t459 * t215 * t457 - t470 * t325 * t468 + t613 * t609 * t762 + t800 * t636 * t798 - t810 * t712 * t808 + t953 * t949 * t1102 + t1140 * t976 * t1138 - t1150 * t1052 * t1148 + t1293 * t1289 * t1442 + t1480 * t1316 * t1478 - t1490 * t1392 * t1488 + t1633 * t1629 * t1782 + t1820 * t1656 * t1818 - t1830 * t1732 * t1828 + t1973 * t1969 * t2122 + t2160 * t1996 * t2158 - t2170 * t2072 * t2168 + m(4);
t2173 = t12 * t7;
t2176 = t14 * t4 + t3 * t2173;
t2180 = t12 * t4;
t2182 = -t14 * t7 + t3 * t2180;
t2186 = t8 * t2176 * t52 + t5 * t2182 * t52 + t50 * t104;
t2193 = -t14 * t2173 + t3 * t4;
t2198 = t14 * t2180 + t3 * t7;
t2202 = t8 * t2193 * t52 - t5 * t2198 * t52 - t50 * t167;
t2204 = 0.2e1 * t21 * t2 * t2186 * t1 + t2202 * t30;
t2205 = sin(legFrame(1,1));
t2207 = cos(legFrame(1,1));
t2210 = -t2176 * t5 + t8 * t2182;
t2216 = t2193 * t5 + t8 * t2198;
t2219 = t21 * t2210 * t2 * t1 - t2216 * t30 / 0.2e1;
t2225 = pkin(3) * t44 * pkin(9);
t2226 = t42 * t2;
t2227 = t39 * t4;
t2230 = t7 * t39;
t2234 = -t5 * t52 * t2227 - t8 * t52 * t2230 + t50 * t12;
t2247 = -t74 * t2186 * t30 - t2234 * t93;
t2250 = t86 * t2202 * pkin(3);
t2261 = t21 * (-t77 * t17 * t40 + t74 * t2210 * t30) + t86 * t2216 * pkin(3);
t2266 = t74 * t2234 * t30;
t2267 = t2186 * pkin(3);
t2268 = t77 * t2267;
t2269 = t2266 - t2268;
t2271 = pkin(2) * pkin(9);
t2273 = t2 * t2234 * t2271;
t2277 = t74 * t17 * t90;
t2278 = t2210 * pkin(3);
t2279 = t77 * t2278;
t2282 = t2 * t209;
t2284 = t96 * (t2277 + t2279) - t2277 + t2282 * t98 - t2279;
t2294 = -t21 * (t74 * t2234 * t77 + t2267) * t2 + t140 * t2202;
t2301 = t21 * t2 * (-t131 * t197 + t2278) + t140 * t2216;
t2311 = t150 * (t74 * t77 * t2186 - t2234 * pkin(3)) * pkin(9);
t2313 = t2 * t77;
t2316 = t2313 * t2186 * pkin(9) - t2234 * t154;
t2319 = t2234 * pkin(9) * t54;
t2334 = -t96 * (t74 * t77 * t2210 + t17 * t40) * t124 + t74 * (t2313 * t2210 * pkin(9) + t197 * t154) + t2282 * t40;
t2336 = t71 * (t37 * (t2205 * t2204 - 0.2e1 * t2219 * t2207) - 0.2e1 * (t17 * t2207 * t39 + t2205 * t2234) * t2226 * t2225) + t70 * (t37 * (t2205 * (t21 * t2247 + t2250) + t2261 * t2207) + t2205 * (t96 * t2269 - t2266 + t2268 + t2273) + t2284 * t2207) + t37 * (t2205 * t2294 + t2301 * t2207) * pkin(9) + t2205 * (t74 * t2316 - t2311 - t2319) - t2334 * t2207;
t2340 = t2205 * t52;
t2342 = t2207 * t10 + t17 * t2340;
t2347 = t10 * t2340 - t2207 * t17;
t2349 = t12 * t14 * t2342 + t2347 * t3;
t2359 = t21 * (t12 * t2342 * t3 - t2347 * t14) - t37 * t39 * t2342;
t2368 = t70 * (t2 * t2349 * pkin(9) + t2359 * pkin(3)) + t74 * (t2 * t2359 * pkin(9) - t2349 * pkin(3));
t2371 = t221 * t53 + t12 - t217;
t2380 = t96 * t77;
t2382 = t328 * t256;
t2386 = t2380 * t104 + t2382 + t39 * (-t77 * t3 + t246);
t2399 = 0.1e1 / (t71 * (-0.2e1 * t2 * t2371 * t1 + t226) + t70 * (t74 * (t2371 * t30 + t237) - t125 + t2386 * pkin(3)) + t74 * (t2 * t2386 * pkin(9) + t178) + (t2 * t2371 * pkin(3) - t274) * pkin(9));
t2402 = t70 * pkin(3) + pkin(2) + t84;
t2406 = t124 * t21 * t70 + t242 - t315;
t2408 = t14 * t2406 + t3 * t2402;
t2413 = t2402 * t14 - t3 * t2406;
t2415 = -t12 * t2408 * t2342 + t2347 * t2413;
t2417 = t44 * t42;
t2442 = 0.1e1 / (t12 * (0.2e1 * t71 * t2417 * t55 + t70 * t332 - t346 + t348 + t350) + (t3 * (-0.2e1 * t235 * pkin(3) * t21 * t71 + t355 * t124 + t70 * t338) + t37 * (t70 * t86 * pkin(3) + t140 * pkin(9) + t71 * t30) * t14) * t39);
t2446 = t472 * t2173 + t480 * t4;
t2451 = t472 * t2180 - t480 * t7;
t2455 = t475 * t2446 * t504 + t473 * t2451 * t504 + t502 * t544;
t2462 = -t480 * t2173 + t472 * t4;
t2467 = t480 * t2180 + t472 * t7;
t2471 = t475 * t2462 * t504 - t473 * t2467 * t504 - t502 * t595;
t2473 = 0.2e1 * t21 * t2 * t2455 * t1 + t2471 * t30;
t2474 = sin(legFrame(2,1));
t2476 = cos(legFrame(2,1));
t2479 = -t2446 * t473 + t475 * t2451;
t2485 = t2462 * t473 + t475 * t2467;
t2488 = t21 * t2479 * t2 * t1 - t2485 * t30 / 0.2e1;
t2498 = -t473 * t504 * t2227 - t475 * t504 * t2230 + t502 * t12;
t2511 = -t520 * t2455 * t30 - t2498 * t93;
t2514 = t530 * t2471 * pkin(3);
t2525 = t21 * (t520 * t2479 * t30 - t77 * t483 * t40) + t530 * t2485 * pkin(3);
t2530 = t520 * t2498 * t30;
t2531 = t2455 * pkin(3);
t2532 = t77 * t2531;
t2533 = t2530 - t2532;
t2536 = t2 * t2498 * t2271;
t2540 = t520 * t483 * t90;
t2541 = t2479 * pkin(3);
t2542 = t77 * t2541;
t2545 = t2 * t630;
t2547 = t96 * (t2540 + t2542) - t2540 + t2545 * t98 - t2542;
t2557 = -t21 * (t520 * t2498 * t77 + t2531) * t2 + t572 * t2471;
t2564 = t21 * t2 * (-t564 * t620 + t2541) + t572 * t2485;
t2574 = t150 * (t520 * t77 * t2455 - t2498 * pkin(3)) * pkin(9);
t2578 = t2313 * t2455 * pkin(9) - t2498 * t154;
t2581 = t2498 * pkin(9) * t54;
t2596 = -t96 * (t520 * t77 * t2479 + t483 * t40) * t124 + t520 * (t2313 * t2479 * pkin(9) + t620 * t154) + t2545 * t40;
t2598 = t517 * (t37 * (t2474 * t2473 - 0.2e1 * t2488 * t2476) - 0.2e1 * (t483 * t2476 * t39 + t2474 * t2498) * t2226 * t2225) + t516 * (t37 * (t2474 * (t21 * t2511 + t2514) + t2525 * t2476) + t2474 * (t96 * t2533 - t2530 + t2532 + t2536) + t2547 * t2476) + t37 * (t2474 * t2557 + t2564 * t2476) * pkin(9) + t2474 * (t520 * t2578 - t2574 - t2581) - t2596 * t2476;
t2602 = t2474 * t504;
t2604 = t2476 * t477 + t483 * t2602;
t2609 = -t2476 * t483 + t477 * t2602;
t2611 = t12 * t480 * t2604 + t2609 * t472;
t2621 = t21 * (t12 * t2604 * t472 - t2609 * t480) - t37 * t39 * t2604;
t2630 = t516 * (t2 * t2611 * pkin(9) + t2621 * pkin(3)) + t520 * (t2 * t2621 * pkin(9) - t2611 * pkin(3));
t2633 = t221 * t505 + t12 - t217;
t2646 = t2380 * t544 + t2382 + t39 * (-t77 * t472 + t652);
t2659 = 0.1e1 / (t517 * (-0.2e1 * t2 * t2633 * t1 + t641) + t516 * (t520 * (t2633 * t30 + t647) - t125 + t2646 * pkin(3)) + t520 * (t2 * t2646 * pkin(9) + t178) + (t2 * t2633 * pkin(3) - t668) * pkin(9));
t2662 = t516 * pkin(3) + pkin(2) + t528;
t2666 = t124 * t21 * t516 + t242 - t702;
t2668 = t472 * t2662 + t480 * t2666;
t2673 = t2662 * t480 - t472 * t2666;
t2675 = -t12 * t2668 * t2604 + t2609 * t2673;
t2701 = 0.1e1 / (t12 * (0.2e1 * t517 * t2417 * t55 + t516 * t715 - t346 + t728 + t730) + (t472 * (-0.2e1 * t235 * pkin(3) * t21 * t517 + t734 * t124 + t516 * t719) + t37 * (t516 * t530 * pkin(3) + t572 * pkin(9) + t517 * t30) * t480) * t39);
t2705 = t812 * t2173 + t820 * t4;
t2710 = t812 * t2180 - t820 * t7;
t2714 = t815 * t2705 * t844 + t813 * t2710 * t844 + t842 * t884;
t2721 = -t820 * t2173 + t812 * t4;
t2726 = t820 * t2180 + t812 * t7;
t2730 = t815 * t2721 * t844 - t813 * t2726 * t844 - t842 * t935;
t2732 = 0.2e1 * t21 * t2 * t2714 * t1 + t2730 * t30;
t2733 = sin(legFrame(3,1));
t2735 = cos(legFrame(3,1));
t2738 = -t2705 * t813 + t815 * t2710;
t2744 = t2721 * t813 + t815 * t2726;
t2747 = t21 * t2738 * t2 * t1 - t2744 * t30 / 0.2e1;
t2757 = -t813 * t844 * t2227 - t815 * t844 * t2230 + t842 * t12;
t2770 = -t860 * t2714 * t30 - t2757 * t93;
t2773 = t870 * t2730 * pkin(3);
t2784 = t21 * (t860 * t2738 * t30 - t77 * t823 * t40) + t870 * t2744 * pkin(3);
t2789 = t860 * t2757 * t30;
t2790 = t2714 * pkin(3);
t2791 = t77 * t2790;
t2792 = t2789 - t2791;
t2795 = t2 * t2757 * t2271;
t2799 = t860 * t823 * t90;
t2800 = t2738 * pkin(3);
t2801 = t77 * t2800;
t2804 = t2 * t970;
t2806 = t96 * (t2799 + t2801) - t2799 + t2804 * t98 - t2801;
t2816 = -t21 * (t860 * t2757 * t77 + t2790) * t2 + t912 * t2730;
t2823 = t21 * t2 * (-t904 * t960 + t2800) + t912 * t2744;
t2833 = t150 * (t860 * t77 * t2714 - t2757 * pkin(3)) * pkin(9);
t2837 = t2313 * t2714 * pkin(9) - t2757 * t154;
t2840 = t2757 * pkin(9) * t54;
t2855 = -t96 * (t860 * t77 * t2738 + t823 * t40) * t124 + t860 * (t2313 * t2738 * pkin(9) + t960 * t154) + t2804 * t40;
t2857 = t857 * (t37 * (t2733 * t2732 - 0.2e1 * t2747 * t2735) - 0.2e1 * (t823 * t2735 * t39 + t2733 * t2757) * t2226 * t2225) + t856 * (t37 * (t2733 * (t21 * t2770 + t2773) + t2784 * t2735) + t2733 * (t96 * t2792 - t2789 + t2791 + t2795) + t2806 * t2735) + t37 * (t2733 * t2816 + t2823 * t2735) * pkin(9) + t2733 * (t860 * t2837 - t2833 - t2840) - t2855 * t2735;
t2861 = t2733 * t844;
t2863 = t2735 * t817 + t823 * t2861;
t2868 = -t2735 * t823 + t817 * t2861;
t2870 = t12 * t820 * t2863 + t2868 * t812;
t2880 = t21 * (t12 * t2863 * t812 - t2868 * t820) - t37 * t39 * t2863;
t2889 = t856 * (t2 * t2870 * pkin(9) + t2880 * pkin(3)) + t860 * (t2 * t2880 * pkin(9) - t2870 * pkin(3));
t2892 = t221 * t845 + t12 - t217;
t2905 = t2380 * t884 + t2382 + t39 * (-t77 * t812 + t992);
t2918 = 0.1e1 / (t857 * (-0.2e1 * t2 * t2892 * t1 + t981) + t856 * (t860 * (t2892 * t30 + t987) - t125 + t2905 * pkin(3)) + t860 * (t2 * t2905 * pkin(9) + t178) + (t2 * t2892 * pkin(3) - t1008) * pkin(9));
t2921 = t856 * pkin(3) + pkin(2) + t868;
t2925 = t124 * t21 * t856 - t1042 + t242;
t2927 = t812 * t2921 + t820 * t2925;
t2932 = t2921 * t820 - t812 * t2925;
t2934 = -t12 * t2927 * t2863 + t2868 * t2932;
t2960 = 0.1e1 / (t12 * (0.2e1 * t857 * t2417 * t55 + t856 * t1055 + t1068 + t1070 - t346) + (t812 * (-0.2e1 * t235 * pkin(3) * t21 * t857 + t856 * t1059 + t1074 * t124) + t37 * (t856 * t870 * pkin(3) + t912 * pkin(9) + t857 * t30) * t820) * t39);
t2964 = t1152 * t2173 + t1160 * t4;
t2969 = t1152 * t2180 - t1160 * t7;
t2973 = t1153 * t2969 * t1184 + t1155 * t2964 * t1184 + t1182 * t1224;
t2980 = t1152 * t4 - t1160 * t2173;
t2985 = t1152 * t7 + t1160 * t2180;
t2989 = -t1153 * t2985 * t1184 + t1155 * t2980 * t1184 - t1182 * t1275;
t2991 = 0.2e1 * t21 * t2 * t2973 * t1 + t2989 * t30;
t2992 = sin(legFrame(4,1));
t2994 = cos(legFrame(4,1));
t2997 = -t2964 * t1153 + t1155 * t2969;
t3003 = t2980 * t1153 + t1155 * t2985;
t3006 = t21 * t2997 * t2 * t1 - t3003 * t30 / 0.2e1;
t3016 = -t1153 * t1184 * t2227 - t1155 * t1184 * t2230 + t1182 * t12;
t3029 = -t1200 * t2973 * t30 - t3016 * t93;
t3032 = t1210 * t2989 * pkin(3);
t3043 = t21 * (-t77 * t1163 * t40 + t1200 * t2997 * t30) + t1210 * t3003 * pkin(3);
t3048 = t1200 * t3016 * t30;
t3049 = t2973 * pkin(3);
t3050 = t77 * t3049;
t3051 = t3048 - t3050;
t3054 = t2 * t3016 * t2271;
t3058 = t1200 * t1163 * t90;
t3059 = t2997 * pkin(3);
t3060 = t77 * t3059;
t3063 = t2 * t1310;
t3065 = t96 * (t3058 + t3060) - t3058 + t3063 * t98 - t3060;
t3075 = -t21 * (t1200 * t3016 * t77 + t3049) * t2 + t1252 * t2989;
t3082 = t21 * t2 * (-t1244 * t1300 + t3059) + t1252 * t3003;
t3092 = t150 * (t1200 * t77 * t2973 - t3016 * pkin(3)) * pkin(9);
t3096 = t2313 * t2973 * pkin(9) - t3016 * t154;
t3099 = t3016 * pkin(9) * t54;
t3114 = -t96 * (t1200 * t77 * t2997 + t1163 * t40) * t124 + t1200 * (t2313 * t2997 * pkin(9) + t1300 * t154) + t3063 * t40;
t3116 = t1197 * (t37 * (t2992 * t2991 - 0.2e1 * t3006 * t2994) - 0.2e1 * (t1163 * t2994 * t39 + t2992 * t3016) * t2226 * t2225) + t1196 * (t37 * (t2992 * (t21 * t3029 + t3032) + t3043 * t2994) + t2992 * (t96 * t3051 - t3048 + t3050 + t3054) + t3065 * t2994) + t37 * (t2992 * t3075 + t3082 * t2994) * pkin(9) + t2992 * (t1200 * t3096 - t3092 - t3099) - t3114 * t2994;
t3120 = t2992 * t1184;
t3122 = t2994 * t1157 + t1163 * t3120;
t3127 = t1157 * t3120 - t2994 * t1163;
t3129 = t12 * t1160 * t3122 + t3127 * t1152;
t3139 = t21 * (t12 * t3122 * t1152 - t3127 * t1160) - t37 * t39 * t3122;
t3148 = t1196 * (t2 * t3129 * pkin(9) + t3139 * pkin(3)) + t1200 * (t2 * t3139 * pkin(9) - t3129 * pkin(3));
t3151 = t221 * t1185 + t12 - t217;
t3164 = t2380 * t1224 + t2382 + t39 * (-t77 * t1152 + t1332);
t3177 = 0.1e1 / (t1197 * (-0.2e1 * t2 * t3151 * t1 + t1321) + t1196 * (t1200 * (t3151 * t30 + t1327) - t125 + t3164 * pkin(3)) + t1200 * (t2 * t3164 * pkin(9) + t178) + (t2 * t3151 * pkin(3) - t1348) * pkin(9));
t3180 = t1196 * pkin(3) + pkin(2) + t1208;
t3184 = t124 * t21 * t1196 - t1382 + t242;
t3186 = t1152 * t3180 + t1160 * t3184;
t3191 = -t1152 * t3184 + t3180 * t1160;
t3193 = -t12 * t3186 * t3122 + t3127 * t3191;
t3219 = 0.1e1 / (t12 * (0.2e1 * t1197 * t2417 * t55 + t1196 * t1395 + t1408 + t1410 - t346) + (t1152 * (-0.2e1 * t235 * pkin(3) * t21 * t1197 + t1196 * t1399 + t1414 * t124) + t37 * (t1196 * t1210 * pkin(3) + t1252 * pkin(9) + t1197 * t30) * t1160) * t39);
t3223 = t1492 * t2173 + t1500 * t4;
t3228 = t1492 * t2180 - t1500 * t7;
t3232 = t1493 * t3228 * t1524 + t1495 * t3223 * t1524 + t1522 * t1564;
t3239 = t1492 * t4 - t1500 * t2173;
t3244 = t1492 * t7 + t1500 * t2180;
t3248 = -t1493 * t3244 * t1524 + t1495 * t3239 * t1524 - t1522 * t1615;
t3250 = 0.2e1 * t21 * t2 * t3232 * t1 + t3248 * t30;
t3251 = sin(legFrame(5,1));
t3253 = cos(legFrame(5,1));
t3256 = -t3223 * t1493 + t1495 * t3228;
t3262 = t3239 * t1493 + t1495 * t3244;
t3265 = t21 * t3256 * t2 * t1 - t3262 * t30 / 0.2e1;
t3275 = -t1493 * t1524 * t2227 - t1495 * t1524 * t2230 + t1522 * t12;
t3288 = -t1540 * t3232 * t30 - t3275 * t93;
t3291 = t1550 * t3248 * pkin(3);
t3302 = t21 * (-t77 * t1503 * t40 + t1540 * t3256 * t30) + t1550 * t3262 * pkin(3);
t3307 = t1540 * t3275 * t30;
t3308 = t3232 * pkin(3);
t3309 = t77 * t3308;
t3310 = t3307 - t3309;
t3313 = t2 * t3275 * t2271;
t3317 = t1540 * t1503 * t90;
t3318 = t3256 * pkin(3);
t3319 = t77 * t3318;
t3322 = t2 * t1650;
t3324 = t96 * (t3317 + t3319) - t3317 + t3322 * t98 - t3319;
t3334 = -t21 * (t1540 * t3275 * t77 + t3308) * t2 + t1592 * t3248;
t3341 = t21 * t2 * (-t1584 * t1640 + t3318) + t1592 * t3262;
t3351 = t150 * (t1540 * t77 * t3232 - t3275 * pkin(3)) * pkin(9);
t3355 = t2313 * t3232 * pkin(9) - t3275 * t154;
t3358 = t3275 * pkin(9) * t54;
t3373 = -t96 * (t1540 * t77 * t3256 + t1503 * t40) * t124 + t1540 * (t2313 * t3256 * pkin(9) + t1640 * t154) + t3322 * t40;
t3375 = t1537 * (t37 * (t3251 * t3250 - 0.2e1 * t3265 * t3253) - 0.2e1 * (t1503 * t3253 * t39 + t3251 * t3275) * t2226 * t2225) + t1536 * (t37 * (t3251 * (t21 * t3288 + t3291) + t3302 * t3253) + t3251 * (t96 * t3310 - t3307 + t3309 + t3313) + t3324 * t3253) + t37 * (t3251 * t3334 + t3341 * t3253) * pkin(9) + t3251 * (t1540 * t3355 - t3351 - t3358) - t3373 * t3253;
t3379 = t3251 * t1524;
t3381 = t3253 * t1497 + t1503 * t3379;
t3386 = t1497 * t3379 - t3253 * t1503;
t3388 = t12 * t1500 * t3381 + t3386 * t1492;
t3398 = t21 * (t12 * t3381 * t1492 - t3386 * t1500) - t37 * t39 * t3381;
t3407 = t1536 * (t2 * t3388 * pkin(9) + t3398 * pkin(3)) + t1540 * (t2 * t3398 * pkin(9) - t3388 * pkin(3));
t3410 = t221 * t1525 + t12 - t217;
t3423 = t2380 * t1564 + t2382 + t39 * (-t77 * t1492 + t1672);
t3436 = 0.1e1 / (t1537 * (-0.2e1 * t2 * t3410 * t1 + t1661) + t1536 * (t1540 * (t3410 * t30 + t1667) - t125 + t3423 * pkin(3)) + t1540 * (t2 * t3423 * pkin(9) + t178) + (t2 * t3410 * pkin(3) - t1688) * pkin(9));
t3439 = t1536 * pkin(3) + pkin(2) + t1548;
t3443 = t124 * t21 * t1536 - t1722 + t242;
t3445 = t1492 * t3439 + t1500 * t3443;
t3450 = -t1492 * t3443 + t3439 * t1500;
t3452 = -t12 * t3445 * t3381 + t3386 * t3450;
t3478 = 0.1e1 / (t12 * (0.2e1 * t1537 * t2417 * t55 + t1536 * t1735 + t1748 + t1750 - t346) + (t1492 * (-0.2e1 * t235 * pkin(3) * t21 * t1537 + t1754 * t124 + t1536 * t1739) + t37 * (t1536 * t1550 * pkin(3) + t1592 * pkin(9) + t1537 * t30) * t1500) * t39);
t3482 = t1832 * t2173 + t1840 * t4;
t3487 = t1832 * t2180 - t1840 * t7;
t3491 = t1833 * t3487 * t1864 + t1835 * t3482 * t1864 + t1862 * t1904;
t3498 = t1832 * t4 - t1840 * t2173;
t3503 = t1832 * t7 + t1840 * t2180;
t3507 = -t1833 * t3503 * t1864 + t1835 * t3498 * t1864 - t1862 * t1955;
t3509 = 0.2e1 * t21 * t2 * t3491 * t1 + t3507 * t30;
t3510 = sin(legFrame(6,1));
t3512 = cos(legFrame(6,1));
t3515 = -t3482 * t1833 + t1835 * t3487;
t3521 = t3498 * t1833 + t1835 * t3503;
t3524 = t21 * t3515 * t2 * t1 - t3521 * t30 / 0.2e1;
t3534 = -t1833 * t1864 * t2227 - t1835 * t1864 * t2230 + t1862 * t12;
t3547 = -t1880 * t3491 * t30 - t3534 * t93;
t3550 = t1890 * t3507 * pkin(3);
t3561 = t21 * (-t77 * t1843 * t40 + t1880 * t3515 * t30) + t1890 * t3521 * pkin(3);
t3566 = t1880 * t3534 * t30;
t3567 = t3491 * pkin(3);
t3568 = t77 * t3567;
t3569 = t3566 - t3568;
t3572 = t2 * t3534 * t2271;
t3576 = t1880 * t1843 * t90;
t3577 = t3515 * pkin(3);
t3578 = t77 * t3577;
t3581 = t2 * t1990;
t3583 = t96 * (t3576 + t3578) - t3576 + t3581 * t98 - t3578;
t3593 = -t21 * (t1880 * t3534 * t77 + t3567) * t2 + t1932 * t3507;
t3600 = t21 * t2 * (-t1924 * t1980 + t3577) + t1932 * t3521;
t3610 = t150 * (t1880 * t77 * t3491 - t3534 * pkin(3)) * pkin(9);
t3614 = t2313 * t3491 * pkin(9) - t3534 * t154;
t3617 = t3534 * pkin(9) * t54;
t3632 = -t96 * (t1880 * t77 * t3515 + t1843 * t40) * t124 + t1880 * (t2313 * t3515 * pkin(9) + t1980 * t154) + t3581 * t40;
t3634 = t1877 * (t37 * (t3510 * t3509 - 0.2e1 * t3524 * t3512) - 0.2e1 * (t1843 * t3512 * t39 + t3510 * t3534) * t2226 * t2225) + t1876 * (t37 * (t3510 * (t21 * t3547 + t3550) + t3561 * t3512) + t3510 * (t96 * t3569 - t3566 + t3568 + t3572) + t3583 * t3512) + t37 * (t3510 * t3593 + t3600 * t3512) * pkin(9) + t3510 * (t1880 * t3614 - t3610 - t3617) - t3632 * t3512;
t3638 = t3510 * t1864;
t3640 = t3512 * t1837 + t1843 * t3638;
t3645 = t1837 * t3638 - t3512 * t1843;
t3647 = t12 * t1840 * t3640 + t3645 * t1832;
t3657 = t21 * (t12 * t3640 * t1832 - t3645 * t1840) - t37 * t39 * t3640;
t3666 = t1876 * (t2 * t3647 * pkin(9) + t3657 * pkin(3)) + t1880 * (t2 * t3657 * pkin(9) - t3647 * pkin(3));
t3669 = t221 * t1865 + t12 - t217;
t3682 = t2380 * t1904 + t2382 + t39 * (-t77 * t1832 + t2012);
t3695 = 0.1e1 / (t1877 * (-0.2e1 * t2 * t3669 * t1 + t2001) + t1876 * (t1880 * (t3669 * t30 + t2007) - t125 + t3682 * pkin(3)) + t1880 * (t2 * t3682 * pkin(9) + t178) + (t2 * t3669 * pkin(3) - t2028) * pkin(9));
t3698 = t1876 * pkin(3) + pkin(2) + t1888;
t3702 = t124 * t21 * t1876 - t2062 + t242;
t3704 = t1832 * t3698 + t1840 * t3702;
t3709 = -t1832 * t3702 + t3698 * t1840;
t3711 = -t12 * t3704 * t3640 + t3645 * t3709;
t3737 = 0.1e1 / (t12 * (0.2e1 * t1877 * t2417 * t55 + t1876 * t2075 + t2088 + t2090 - t346) + (t1832 * (-0.2e1 * t235 * pkin(3) * t21 * t1877 + t2094 * t124 + t1876 * t2079) + t37 * (t1876 * t1890 * pkin(3) + t1932 * pkin(9) + t1877 * t30) * t1840) * t39);
t3739 = t188 * t2336 * t385 + t2399 * t2368 * t457 + t2442 * t2415 * t468 + t613 * t2598 * t762 + t2659 * t2630 * t798 + t2701 * t2675 * t808 + t953 * t2857 * t1102 + t2918 * t2889 * t1138 + t2960 * t2934 * t1148 + t1293 * t3116 * t1442 + t3177 * t3148 * t1478 + t3219 * t3193 * t1488 + t1633 * t3375 * t1782 + t3436 * t3407 * t1818 + t3478 * t3452 * t1828 + t1973 * t3634 * t2122 + t3695 * t3666 * t2158 + t3737 * t3711 * t2168;
t3775 = t71 * (t37 * (-t2207 * t2204 - 0.2e1 * t2205 * t2219) + 0.2e1 * (-t17 * t2205 * t39 + t2207 * t2234) * t2226 * t2225) + t70 * (t37 * (t2207 * (-t21 * t2247 - t2250) + t2261 * t2205) + t2207 * (-t96 * t2269 + t2266 - t2268 - t2273) + t2205 * t2284) - t37 * (-t2205 * t2301 + t2207 * t2294) * pkin(9) + t2207 * (-t74 * t2316 + t2311 + t2319) - t2205 * t2334;
t3781 = t2207 * t17 * t52 - t10 * t2205;
t3787 = t2207 * t10 * t52 + t17 * t2205;
t3789 = t12 * t14 * t3781 + t3787 * t3;
t3799 = t21 * (t12 * t3781 * t3 - t3787 * t14) - t37 * t39 * t3781;
t3808 = t70 * (-t2 * t3789 * pkin(9) - t3799 * pkin(3)) - t74 * (t2 * t3799 * pkin(9) - t3789 * pkin(3));
t3814 = t12 * t2408 * t3781 - t3787 * t2413;
t3852 = t517 * (t37 * (-t2476 * t2473 - 0.2e1 * t2474 * t2488) + 0.2e1 * (-t483 * t2474 * t39 + t2476 * t2498) * t2226 * t2225) + t516 * (t37 * (t2476 * (-t21 * t2511 - t2514) + t2525 * t2474) + t2476 * (-t96 * t2533 + t2530 - t2532 - t2536) + t2474 * t2547) - t37 * (-t2474 * t2564 + t2476 * t2557) * pkin(9) + t2476 * (-t520 * t2578 + t2574 + t2581) - t2474 * t2596;
t3858 = t2476 * t483 * t504 - t477 * t2474;
t3864 = t2476 * t477 * t504 + t483 * t2474;
t3866 = t12 * t480 * t3858 + t3864 * t472;
t3876 = t21 * (t12 * t3858 * t472 - t3864 * t480) - t37 * t39 * t3858;
t3885 = t516 * (-t2 * t3866 * pkin(9) - t3876 * pkin(3)) - t520 * (t2 * t3876 * pkin(9) - t3866 * pkin(3));
t3891 = t12 * t2668 * t3858 - t3864 * t2673;
t3929 = t857 * (t37 * (-t2735 * t2732 - 0.2e1 * t2733 * t2747) + 0.2e1 * (-t823 * t2733 * t39 + t2735 * t2757) * t2226 * t2225) + t856 * (t37 * (t2735 * (-t21 * t2770 - t2773) + t2784 * t2733) + t2735 * (-t96 * t2792 + t2789 - t2791 - t2795) + t2733 * t2806) - t37 * (-t2733 * t2823 + t2735 * t2816) * pkin(9) + t2735 * (-t860 * t2837 + t2833 + t2840) - t2733 * t2855;
t3935 = t2735 * t823 * t844 - t817 * t2733;
t3941 = t2735 * t817 * t844 + t823 * t2733;
t3943 = t12 * t820 * t3935 + t3941 * t812;
t3953 = t21 * (t12 * t3935 * t812 - t3941 * t820) - t37 * t39 * t3935;
t3962 = t856 * (-t2 * t3943 * pkin(9) - t3953 * pkin(3)) - t860 * (t2 * t3953 * pkin(9) - t3943 * pkin(3));
t3968 = t12 * t2927 * t3935 - t3941 * t2932;
t4006 = t1197 * (t37 * (-t2994 * t2991 - 0.2e1 * t2992 * t3006) + 0.2e1 * (-t1163 * t2992 * t39 + t2994 * t3016) * t2226 * t2225) + t1196 * (t37 * (t2994 * (-t21 * t3029 - t3032) + t3043 * t2992) + t2994 * (-t96 * t3051 + t3048 - t3050 - t3054) + t2992 * t3065) - t37 * (-t2992 * t3082 + t2994 * t3075) * pkin(9) + t2994 * (-t1200 * t3096 + t3092 + t3099) - t2992 * t3114;
t4012 = t2994 * t1163 * t1184 - t1157 * t2992;
t4018 = t2994 * t1157 * t1184 + t1163 * t2992;
t4020 = t12 * t1160 * t4012 + t4018 * t1152;
t4030 = t21 * (t12 * t4012 * t1152 - t4018 * t1160) - t37 * t39 * t4012;
t4039 = t1196 * (-t2 * t4020 * pkin(9) - t4030 * pkin(3)) - t1200 * (t2 * t4030 * pkin(9) - t4020 * pkin(3));
t4045 = t12 * t3186 * t4012 - t4018 * t3191;
t4083 = t1537 * (t37 * (-t3253 * t3250 - 0.2e1 * t3251 * t3265) + 0.2e1 * (-t1503 * t3251 * t39 + t3253 * t3275) * t2226 * t2225) + t1536 * (t37 * (t3253 * (-t21 * t3288 - t3291) + t3302 * t3251) + t3253 * (-t96 * t3310 + t3307 - t3309 - t3313) + t3251 * t3324) - t37 * (-t3251 * t3341 + t3253 * t3334) * pkin(9) + t3253 * (-t1540 * t3355 + t3351 + t3358) - t3251 * t3373;
t4089 = t3253 * t1503 * t1524 - t1497 * t3251;
t4095 = t3253 * t1497 * t1524 + t1503 * t3251;
t4097 = t12 * t1500 * t4089 + t4095 * t1492;
t4107 = t21 * (t12 * t4089 * t1492 - t4095 * t1500) - t37 * t39 * t4089;
t4116 = t1536 * (-t2 * t4097 * pkin(9) - t4107 * pkin(3)) - t1540 * (t2 * t4107 * pkin(9) - t4097 * pkin(3));
t4122 = t12 * t3445 * t4089 - t4095 * t3450;
t4160 = t1877 * (t37 * (-t3512 * t3509 - 0.2e1 * t3510 * t3524) + 0.2e1 * (-t1843 * t3510 * t39 + t3512 * t3534) * t2226 * t2225) + t1876 * (t37 * (t3512 * (-t21 * t3547 - t3550) + t3561 * t3510) + t3512 * (-t96 * t3569 + t3566 - t3568 - t3572) + t3510 * t3583) - t37 * (-t3510 * t3600 + t3512 * t3593) * pkin(9) + t3512 * (-t1880 * t3614 + t3610 + t3617) - t3510 * t3632;
t4166 = t3512 * t1843 * t1864 - t1837 * t3510;
t4172 = t3512 * t1837 * t1864 + t1843 * t3510;
t4174 = t12 * t1840 * t4166 + t4172 * t1832;
t4184 = t21 * (t12 * t4166 * t1832 - t4172 * t1840) - t37 * t39 * t4166;
t4193 = t1876 * (-t2 * t4174 * pkin(9) - t4184 * pkin(3)) - t1880 * (t2 * t4184 * pkin(9) - t4174 * pkin(3));
t4199 = t12 * t3704 * t4166 - t4172 * t3709;
t4202 = t188 * t3775 * t385 + t2399 * t3808 * t457 + t2442 * t3814 * t468 + t613 * t3852 * t762 + t2659 * t3885 * t798 + t2701 * t3891 * t808 + t953 * t3929 * t1102 + t2918 * t3962 * t1138 + t2960 * t3968 * t1148 + t1293 * t4006 * t1442 + t3177 * t4039 * t1478 + t3219 * t4045 * t1488 + t1633 * t4083 * t1782 + t3436 * t4116 * t1818 + t3478 * t4122 * t1828 + t1973 * t4160 * t2122 + t3695 * t4193 * t2158 + t3737 * t4199 * t2168;
t4203 = sin(xP(6));
t4205 = cos(xP(6));
t4207 = -koppelP(1,2) * t4203 + t4205 * koppelP(1,1);
t4208 = sin(xP(5));
t4210 = cos(xP(5));
t4211 = koppelP(1,3) * t4210;
t4212 = t4208 * t4207 - t4211;
t4213 = cos(xP(4));
t4215 = sin(xP(4));
t4218 = koppelP(1,1) * t4203 + t4205 * koppelP(1,2);
t4219 = t4218 * t4215;
t4220 = t4213 * t4212 - t4219;
t4224 = t4218 * t4213;
t4225 = t4215 * t4212 + t4224;
t4228 = t188 * t2336 * t4220 + t188 * t3775 * t4225;
t4229 = t4228 * t385;
t4234 = t2399 * t2368 * t4220 + t2399 * t3808 * t4225;
t4235 = t4234 * t457;
t4240 = t2442 * t2415 * t4220 + t2442 * t3814 * t4225;
t4241 = t4240 * t468;
t4244 = -koppelP(2,2) * t4203 + t4205 * koppelP(2,1);
t4246 = koppelP(2,3) * t4210;
t4247 = t4208 * t4244 - t4246;
t4251 = koppelP(2,1) * t4203 + t4205 * koppelP(2,2);
t4252 = t4251 * t4215;
t4253 = t4213 * t4247 - t4252;
t4257 = t4251 * t4213;
t4258 = t4215 * t4247 + t4257;
t4261 = t613 * t2598 * t4253 + t613 * t3852 * t4258;
t4262 = t4261 * t762;
t4267 = t2659 * t2630 * t4253 + t2659 * t3885 * t4258;
t4268 = t4267 * t798;
t4273 = t2701 * t2675 * t4253 + t2701 * t3891 * t4258;
t4274 = t4273 * t808;
t4277 = -koppelP(3,2) * t4203 + t4205 * koppelP(3,1);
t4279 = koppelP(3,3) * t4210;
t4280 = t4208 * t4277 - t4279;
t4284 = koppelP(3,1) * t4203 + t4205 * koppelP(3,2);
t4285 = t4284 * t4215;
t4286 = t4213 * t4280 - t4285;
t4290 = t4284 * t4213;
t4291 = t4215 * t4280 + t4290;
t4294 = t953 * t2857 * t4286 + t953 * t3929 * t4291;
t4295 = t4294 * t1102;
t4300 = t2918 * t2889 * t4286 + t2918 * t3962 * t4291;
t4301 = t4300 * t1138;
t4306 = t2960 * t2934 * t4286 + t2960 * t3968 * t4291;
t4307 = t4306 * t1148;
t4310 = -koppelP(4,2) * t4203 + t4205 * koppelP(4,1);
t4312 = koppelP(4,3) * t4210;
t4313 = t4208 * t4310 - t4312;
t4317 = koppelP(4,1) * t4203 + t4205 * koppelP(4,2);
t4318 = t4317 * t4215;
t4319 = t4213 * t4313 - t4318;
t4323 = t4317 * t4213;
t4324 = t4215 * t4313 + t4323;
t4327 = t1293 * t3116 * t4319 + t1293 * t4006 * t4324;
t4328 = t4327 * t1442;
t4333 = t3177 * t3148 * t4319 + t3177 * t4039 * t4324;
t4334 = t4333 * t1478;
t4339 = t3219 * t3193 * t4319 + t3219 * t4045 * t4324;
t4340 = t4339 * t1488;
t4343 = -koppelP(5,2) * t4203 + t4205 * koppelP(5,1);
t4345 = koppelP(5,3) * t4210;
t4346 = t4208 * t4343 - t4345;
t4350 = koppelP(5,1) * t4203 + t4205 * koppelP(5,2);
t4351 = t4350 * t4215;
t4352 = t4213 * t4346 - t4351;
t4356 = t4350 * t4213;
t4357 = t4215 * t4346 + t4356;
t4360 = t1633 * t3375 * t4352 + t1633 * t4083 * t4357;
t4361 = t4360 * t1782;
t4366 = t3436 * t3407 * t4352 + t3436 * t4116 * t4357;
t4367 = t4366 * t1818;
t4372 = t3478 * t3452 * t4352 + t3478 * t4122 * t4357;
t4373 = t4372 * t1828;
t4376 = -koppelP(6,2) * t4203 + t4205 * koppelP(6,1);
t4378 = koppelP(6,3) * t4210;
t4379 = t4208 * t4376 - t4378;
t4383 = koppelP(6,1) * t4203 + t4205 * koppelP(6,2);
t4384 = t4383 * t4215;
t4385 = t4213 * t4379 - t4384;
t4389 = t4383 * t4213;
t4390 = t4215 * t4379 + t4389;
t4393 = t1973 * t3634 * t4385 + t1973 * t4160 * t4390;
t4394 = t4393 * t2122;
t4399 = t3695 * t3666 * t4385 + t3695 * t4193 * t4390;
t4400 = t4399 * t2158;
t4405 = t3737 * t3711 * t4385 + t3737 * t4199 * t4390;
t4406 = t4405 * t2168;
t4407 = t4229 + t4235 + t4241 + t4262 + t4268 + t4274 + t4295 + t4301 + t4307 + t4328 + t4334 + t4340 + t4361 + t4367 + t4373 + t4394 + t4400 + t4406;
t4409 = -t4208 * t4207 + t4211;
t4411 = t4213 * t4409 + t4219;
t4414 = t4205 * t4210;
t4416 = t4203 * t4210;
t4419 = -koppelP(1,3) * t4208 - koppelP(1,1) * t4414 + koppelP(1,2) * t4416;
t4422 = t188 * t184 * t4411 + t188 * t3775 * t4419;
t4428 = t459 * t215 * t4411 + t2399 * t3808 * t4419;
t4434 = t2442 * t3814 * t4419 - t470 * t325 * t4411;
t4436 = t4422 * t385 + t4428 * t457 + t4434 * t468;
t4439 = t4215 * t4409 - t4224;
t4444 = t188 * t184 * t4439 - t188 * t2336 * t4419;
t4450 = t459 * t215 * t4439 - t2399 * t2368 * t4419;
t4456 = -t2442 * t2415 * t4419 - t470 * t325 * t4439;
t4458 = t4444 * t385 + t4450 * t457 + t4456 * t468;
t4461 = -t4208 * t4244 + t4246;
t4463 = t4213 * t4461 + t4252;
t4469 = -koppelP(2,3) * t4208 - koppelP(2,1) * t4414 + koppelP(2,2) * t4416;
t4472 = t613 * t3852 * t4469 + t613 * t609 * t4463;
t4478 = t2659 * t3885 * t4469 + t800 * t636 * t4463;
t4484 = t2701 * t3891 * t4469 - t810 * t712 * t4463;
t4486 = t4472 * t762 + t4478 * t798 + t4484 * t808;
t4489 = t4215 * t4461 - t4257;
t4494 = -t613 * t2598 * t4469 + t613 * t609 * t4489;
t4500 = -t2659 * t2630 * t4469 + t800 * t636 * t4489;
t4506 = -t2701 * t2675 * t4469 - t810 * t712 * t4489;
t4508 = t4494 * t762 + t4500 * t798 + t4506 * t808;
t4511 = -t4208 * t4277 + t4279;
t4513 = t4213 * t4511 + t4285;
t4519 = -koppelP(3,3) * t4208 - koppelP(3,1) * t4414 + koppelP(3,2) * t4416;
t4522 = t953 * t3929 * t4519 + t953 * t949 * t4513;
t4528 = t1140 * t976 * t4513 + t2918 * t3962 * t4519;
t4534 = -t1150 * t1052 * t4513 + t2960 * t3968 * t4519;
t4536 = t4522 * t1102 + t4528 * t1138 + t4534 * t1148;
t4539 = t4215 * t4511 - t4290;
t4544 = -t953 * t2857 * t4519 + t953 * t949 * t4539;
t4550 = t1140 * t976 * t4539 - t2918 * t2889 * t4519;
t4556 = -t1150 * t1052 * t4539 - t2960 * t2934 * t4519;
t4558 = t4544 * t1102 + t4550 * t1138 + t4556 * t1148;
t4561 = -t4208 * t4310 + t4312;
t4563 = t4213 * t4561 + t4318;
t4569 = -koppelP(4,3) * t4208 - koppelP(4,1) * t4414 + koppelP(4,2) * t4416;
t4572 = t1293 * t1289 * t4563 + t1293 * t4006 * t4569;
t4578 = t1480 * t1316 * t4563 + t3177 * t4039 * t4569;
t4584 = -t1490 * t1392 * t4563 + t3219 * t4045 * t4569;
t4586 = t4572 * t1442 + t4578 * t1478 + t4584 * t1488;
t4589 = t4215 * t4561 - t4323;
t4594 = t1293 * t1289 * t4589 - t1293 * t3116 * t4569;
t4600 = t1480 * t1316 * t4589 - t3177 * t3148 * t4569;
t4606 = -t1490 * t1392 * t4589 - t3219 * t3193 * t4569;
t4608 = t4594 * t1442 + t4600 * t1478 + t4606 * t1488;
t4611 = -t4208 * t4343 + t4345;
t4613 = t4213 * t4611 + t4351;
t4619 = -koppelP(5,3) * t4208 - koppelP(5,1) * t4414 + koppelP(5,2) * t4416;
t4622 = t1633 * t1629 * t4613 + t1633 * t4083 * t4619;
t4628 = t1820 * t1656 * t4613 + t3436 * t4116 * t4619;
t4634 = -t1830 * t1732 * t4613 + t3478 * t4122 * t4619;
t4636 = t4622 * t1782 + t4628 * t1818 + t4634 * t1828;
t4639 = t4215 * t4611 - t4356;
t4644 = t1633 * t1629 * t4639 - t1633 * t3375 * t4619;
t4650 = t1820 * t1656 * t4639 - t3436 * t3407 * t4619;
t4656 = -t1830 * t1732 * t4639 - t3478 * t3452 * t4619;
t4658 = t4644 * t1782 + t4650 * t1818 + t4656 * t1828;
t4661 = -t4208 * t4376 + t4378;
t4663 = t4213 * t4661 + t4384;
t4669 = -koppelP(6,3) * t4208 - koppelP(6,1) * t4414 + koppelP(6,2) * t4416;
t4672 = t1973 * t1969 * t4663 + t1973 * t4160 * t4669;
t4678 = t2160 * t1996 * t4663 + t3695 * t4193 * t4669;
t4684 = -t2170 * t2072 * t4663 + t3737 * t4199 * t4669;
t4686 = t4672 * t2122 + t4678 * t2158 + t4684 * t2168;
t4689 = t4215 * t4661 - t4389;
t4694 = t1973 * t1969 * t4689 - t1973 * t3634 * t4669;
t4700 = t2160 * t1996 * t4689 - t3695 * t3666 * t4669;
t4706 = -t2170 * t2072 * t4689 - t3737 * t3711 * t4669;
t4708 = t4694 * t2122 + t4700 * t2158 + t4706 * t2168;
t4712 = rSges(4,2) * t4203 - rSges(4,1) * t4205;
t4714 = rSges(4,3) * t4210;
t4717 = t4213 * t4436 + t4215 * t4458 + t4213 * t4486 + t4215 * t4508 + t4213 * t4536 + t4215 * t4558 + t4213 * t4586 + t4215 * t4608 + t4213 * t4636 + t4215 * t4658 + t4213 * t4686 + t4215 * t4708 + m(4) * (t4208 * t4712 + t4714);
t4757 = rSges(4,1) * t4203 + rSges(4,2) * t4205;
t4759 = t4208 * (t4229 + t4235 + t4241) - t4210 * t4215 * t4436 + t4210 * t4213 * t4458 + t4208 * (t4262 + t4268 + t4274) - t4210 * t4215 * t4486 + t4210 * t4213 * t4508 + t4208 * (t4295 + t4301 + t4307) - t4210 * t4215 * t4536 + t4210 * t4213 * t4558 + t4208 * (t4328 + t4334 + t4340) - t4210 * t4215 * t4586 + t4210 * t4213 * t4608 + t4208 * (t4361 + t4367 + t4373) - t4210 * t4215 * t4636 + t4210 * t4213 * t4658 + t4208 * (t4394 + t4400 + t4406) - t4210 * t4215 * t4686 + t4210 * t4213 * t4708 - t4757 * t4210 * m(4);
t4760 = t188 * t2336;
t4762 = t2399 * t2368;
t4764 = t2442 * t2415;
t4766 = t190 * t4760 + t388 * t4762 - t461 * t4764;
t4772 = t388 * t4760 + t441 * t4762 + t454 * t4764;
t4778 = t454 * t4762 - t461 * t4760 + t465 * t4764;
t4781 = t613 * t2598;
t4783 = t2659 * t2630;
t4785 = t2701 * t2675;
t4787 = t190 * t4781 + t765 * t4783 - t802 * t4785;
t4793 = t765 * t4781 + t785 * t4783 + t795 * t4785;
t4799 = t465 * t4785 - t802 * t4781 + t795 * t4783;
t4802 = t953 * t2857;
t4804 = t2918 * t2889;
t4806 = t2960 * t2934;
t4808 = t1105 * t4804 - t1142 * t4806 + t190 * t4802;
t4814 = t1105 * t4802 + t1125 * t4804 + t1135 * t4806;
t4820 = t1135 * t4804 - t1142 * t4802 + t465 * t4806;
t4823 = t1293 * t3116;
t4825 = t3177 * t3148;
t4827 = t3219 * t3193;
t4829 = t1445 * t4825 - t1482 * t4827 + t190 * t4823;
t4835 = t1445 * t4823 + t1465 * t4825 + t1475 * t4827;
t4841 = t1475 * t4825 - t1482 * t4823 + t465 * t4827;
t4844 = t1633 * t3375;
t4846 = t3436 * t3407;
t4848 = t3478 * t3452;
t4850 = t1785 * t4846 - t1822 * t4848 + t190 * t4844;
t4856 = t1785 * t4844 + t1805 * t4846 + t1815 * t4848;
t4862 = t1815 * t4846 - t1822 * t4844 + t465 * t4848;
t4865 = t1973 * t3634;
t4867 = t3695 * t3666;
t4869 = t3737 * t3711;
t4871 = t190 * t4865 + t2125 * t4867 - t2162 * t4869;
t4877 = t2125 * t4865 + t2145 * t4867 + t2155 * t4869;
t4883 = t2155 * t4867 - t2162 * t4865 + t465 * t4869;
t4886 = t188 * t184 * t4766 + t459 * t215 * t4772 - t470 * t325 * t4778 + t613 * t609 * t4787 + t800 * t636 * t4793 - t810 * t712 * t4799 + t953 * t949 * t4808 + t1140 * t976 * t4814 - t1150 * t1052 * t4820 + t1293 * t1289 * t4829 + t1480 * t1316 * t4835 - t1490 * t1392 * t4841 + t1633 * t1629 * t4850 + t1820 * t1656 * t4856 - t1830 * t1732 * t4862 + t1973 * t1969 * t4871 + t2160 * t1996 * t4877 - t2170 * t2072 * t4883;
t4923 = t188 * t2336 * t4766 + t2399 * t2368 * t4772 + t2442 * t2415 * t4778 + t613 * t2598 * t4787 + t2659 * t2630 * t4793 + t2701 * t2675 * t4799 + t953 * t2857 * t4808 + t2918 * t2889 * t4814 + t2960 * t2934 * t4820 + t1293 * t3116 * t4829 + t3177 * t3148 * t4835 + t3219 * t3193 * t4841 + t1633 * t3375 * t4850 + t3436 * t3407 * t4856 + t3478 * t3452 * t4862 + t1973 * t3634 * t4871 + t3695 * t3666 * t4877 + t3737 * t3711 * t4883 + m(4);
t4960 = t188 * t3775 * t4766 + t2399 * t3808 * t4772 + t2442 * t3814 * t4778 + t613 * t3852 * t4787 + t2659 * t3885 * t4793 + t2701 * t3891 * t4799 + t953 * t3929 * t4808 + t2918 * t3962 * t4814 + t2960 * t3968 * t4820 + t1293 * t4006 * t4829 + t3177 * t4039 * t4835 + t3219 * t4045 * t4841 + t1633 * t4083 * t4850 + t3436 * t4116 * t4856 + t3478 * t4122 * t4862 + t1973 * t4160 * t4871 + t3695 * t4193 * t4877 + t3737 * t4199 * t4883;
t4961 = t4228 * t4766;
t4962 = t4234 * t4772;
t4963 = t4240 * t4778;
t4964 = t4261 * t4787;
t4965 = t4267 * t4793;
t4966 = t4273 * t4799;
t4967 = t4294 * t4808;
t4968 = t4300 * t4814;
t4969 = t4306 * t4820;
t4970 = t4327 * t4829;
t4971 = t4333 * t4835;
t4972 = t4339 * t4841;
t4973 = t4360 * t4850;
t4974 = t4366 * t4856;
t4975 = t4372 * t4862;
t4976 = t4393 * t4871;
t4977 = t4399 * t4877;
t4978 = t4405 * t4883;
t4983 = rSges(4,2) * t4203 * t4208 - rSges(4,1) * t4205 * t4208 + t4714;
t4987 = m(4) * (t4213 * t4983 + t4757 * t4215);
t4988 = t4961 + t4962 + t4963 + t4964 + t4965 + t4966 + t4967 + t4968 + t4969 + t4970 + t4971 + t4972 + t4973 + t4974 + t4975 + t4976 + t4977 + t4978 - t4987;
t4992 = t4422 * t4766 + t4428 * t4772 + t4434 * t4778;
t4997 = t4444 * t4766 + t4450 * t4772 + t4456 * t4778;
t5002 = t4472 * t4787 + t4478 * t4793 + t4484 * t4799;
t5007 = t4494 * t4787 + t4500 * t4793 + t4506 * t4799;
t5012 = t4522 * t4808 + t4528 * t4814 + t4534 * t4820;
t5017 = t4544 * t4808 + t4550 * t4814 + t4556 * t4820;
t5022 = t4572 * t4829 + t4578 * t4835 + t4584 * t4841;
t5027 = t4594 * t4829 + t4600 * t4835 + t4606 * t4841;
t5032 = t4622 * t4850 + t4628 * t4856 + t4634 * t4862;
t5037 = t4644 * t4850 + t4650 * t4856 + t4656 * t4862;
t5042 = t4672 * t4871 + t4678 * t4877 + t4684 * t4883;
t5047 = t4694 * t4871 + t4700 * t4877 + t4706 * t4883;
t5051 = rSges(4,3) * t4208;
t5053 = (rSges(4,1) * t4414 - rSges(4,2) * t4416 + t5051) * m(4);
t5055 = t4213 * t4992 + t4213 * t5002 + t4213 * t5012 + t4213 * t5022 + t4213 * t5032 + t4213 * t5042 + t4215 * t4997 + t4215 * t5007 + t4215 * t5017 + t4215 * t5027 + t4215 * t5037 + t4215 * t5047 + t4215 * t5053;
t5104 = t4208 * (t4961 + t4962 + t4963) - t4210 * t4215 * t4992 + t4210 * t4213 * t4997 + t4208 * (t4964 + t4965 + t4966) - t4210 * t4215 * t5002 + t4210 * t4213 * t5007 + t4208 * (t4967 + t4968 + t4969) - t4210 * t4215 * t5012 + t4210 * t4213 * t5017 + t4208 * (t4970 + t4971 + t4972) - t4210 * t4215 * t5022 + t4210 * t4213 * t5027 + t4208 * (t4973 + t4974 + t4975) - t4210 * t4215 * t5032 + t4210 * t4213 * t5037 + t4208 * (t4976 + t4977 + t4978) - t4210 * t4215 * t5042 + t4210 * t4213 * t5047 - m(4) * (t4205 * (t4215 * rSges(4,2) * t4208 - t4213 * rSges(4,1)) + (t4215 * rSges(4,1) * t4208 + rSges(4,2) * t4213) * t4203);
t5105 = t188 * t3775;
t5107 = t2399 * t3808;
t5109 = t2442 * t3814;
t5111 = t190 * t5105 + t388 * t5107 - t461 * t5109;
t5117 = t388 * t5105 + t441 * t5107 + t454 * t5109;
t5123 = t454 * t5107 - t461 * t5105 + t465 * t5109;
t5126 = t613 * t3852;
t5128 = t2659 * t3885;
t5130 = t2701 * t3891;
t5132 = t190 * t5126 + t765 * t5128 - t802 * t5130;
t5138 = t765 * t5126 + t785 * t5128 + t795 * t5130;
t5144 = t465 * t5130 - t802 * t5126 + t795 * t5128;
t5147 = t953 * t3929;
t5149 = t2918 * t3962;
t5151 = t2960 * t3968;
t5153 = t1105 * t5149 - t1142 * t5151 + t190 * t5147;
t5159 = t1105 * t5147 + t1125 * t5149 + t1135 * t5151;
t5165 = t1135 * t5149 - t1142 * t5147 + t465 * t5151;
t5168 = t1293 * t4006;
t5170 = t3177 * t4039;
t5172 = t3219 * t4045;
t5174 = t1445 * t5170 - t1482 * t5172 + t190 * t5168;
t5180 = t1445 * t5168 + t1465 * t5170 + t1475 * t5172;
t5186 = t1475 * t5170 - t1482 * t5168 + t465 * t5172;
t5189 = t1633 * t4083;
t5191 = t3436 * t4116;
t5193 = t3478 * t4122;
t5195 = t1785 * t5191 - t1822 * t5193 + t190 * t5189;
t5201 = t1785 * t5189 + t1805 * t5191 + t1815 * t5193;
t5207 = t1815 * t5191 - t1822 * t5189 + t465 * t5193;
t5210 = t1973 * t4160;
t5212 = t3695 * t4193;
t5214 = t3737 * t4199;
t5216 = t190 * t5210 + t2125 * t5212 - t2162 * t5214;
t5222 = t2125 * t5210 + t2145 * t5212 + t2155 * t5214;
t5228 = t2155 * t5212 - t2162 * t5210 + t465 * t5214;
t5231 = t188 * t184 * t5111 + t459 * t215 * t5117 - t470 * t325 * t5123 + t613 * t609 * t5132 + t800 * t636 * t5138 - t810 * t712 * t5144 + t953 * t949 * t5153 + t1140 * t976 * t5159 - t1150 * t1052 * t5165 + t1293 * t1289 * t5174 + t1480 * t1316 * t5180 - t1490 * t1392 * t5186 + t1633 * t1629 * t5195 + t1820 * t1656 * t5201 - t1830 * t1732 * t5207 + t1973 * t1969 * t5216 + t2160 * t1996 * t5222 - t2170 * t2072 * t5228;
t5268 = t188 * t2336 * t5111 + t2399 * t2368 * t5117 + t2442 * t2415 * t5123 + t613 * t2598 * t5132 + t2659 * t2630 * t5138 + t2701 * t2675 * t5144 + t953 * t2857 * t5153 + t2918 * t2889 * t5159 + t2960 * t2934 * t5165 + t1293 * t3116 * t5174 + t3177 * t3148 * t5180 + t3219 * t3193 * t5186 + t1633 * t3375 * t5195 + t3436 * t3407 * t5201 + t3478 * t3452 * t5207 + t1973 * t3634 * t5216 + t3695 * t3666 * t5222 + t3737 * t3711 * t5228;
t5305 = t188 * t3775 * t5111 + t2399 * t3808 * t5117 + t2442 * t3814 * t5123 + t613 * t3852 * t5132 + t2659 * t3885 * t5138 + t2701 * t3891 * t5144 + t953 * t3929 * t5153 + t2918 * t3962 * t5159 + t2960 * t3968 * t5165 + t1293 * t4006 * t5174 + t3177 * t4039 * t5180 + t3219 * t4045 * t5186 + t1633 * t4083 * t5195 + t3436 * t4116 * t5201 + t3478 * t4122 * t5207 + t1973 * t4160 * t5216 + t3695 * t4193 * t5222 + t3737 * t4199 * t5228 + m(4);
t5306 = t4228 * t5111;
t5307 = t4234 * t5117;
t5308 = t4240 * t5123;
t5309 = t4261 * t5132;
t5310 = t4267 * t5138;
t5311 = t4273 * t5144;
t5312 = t4294 * t5153;
t5313 = t4300 * t5159;
t5314 = t4306 * t5165;
t5315 = t4327 * t5174;
t5316 = t4333 * t5180;
t5317 = t4339 * t5186;
t5318 = t4360 * t5195;
t5319 = t4366 * t5201;
t5320 = t4372 * t5207;
t5321 = t4393 * t5216;
t5322 = t4399 * t5222;
t5323 = t4405 * t5228;
t5327 = (t4757 * t4213 - t4215 * t4983) * m(4);
t5328 = t5306 + t5307 + t5308 + t5309 + t5310 + t5311 + t5312 + t5313 + t5314 + t5315 + t5316 + t5317 + t5318 + t5319 + t5320 + t5321 + t5322 + t5323 + t5327;
t5332 = t4422 * t5111 + t4428 * t5117 + t4434 * t5123;
t5337 = t4444 * t5111 + t4450 * t5117 + t4456 * t5123;
t5342 = t4472 * t5132 + t4478 * t5138 + t4484 * t5144;
t5347 = t4494 * t5132 + t4500 * t5138 + t4506 * t5144;
t5352 = t4522 * t5153 + t4528 * t5159 + t4534 * t5165;
t5357 = t4544 * t5153 + t4550 * t5159 + t4556 * t5165;
t5362 = t4572 * t5174 + t4578 * t5180 + t4584 * t5186;
t5367 = t4594 * t5174 + t4600 * t5180 + t4606 * t5186;
t5372 = t4622 * t5195 + t4628 * t5201 + t4634 * t5207;
t5377 = t4644 * t5195 + t4650 * t5201 + t4656 * t5207;
t5382 = t4672 * t5216 + t4678 * t5222 + t4684 * t5228;
t5387 = t4694 * t5216 + t4700 * t5222 + t4706 * t5228;
t5391 = m(4) * (t4210 * t4712 - t5051);
t5393 = t4213 * t5332 + t4213 * t5342 + t4213 * t5352 + t4213 * t5362 + t4213 * t5372 + t4213 * t5382 + t4213 * t5391 + t4215 * t5337 + t4215 * t5347 + t4215 * t5357 + t4215 * t5367 + t4215 * t5377 + t4215 * t5387;
t5435 = t4208 * (t5306 + t5307 + t5308) - t4210 * t4215 * t5332 + t4210 * t4213 * t5337 + t4208 * (t5309 + t5310 + t5311) - t4210 * t4215 * t5342 + t4210 * t4213 * t5347 + t4208 * (t5312 + t5313 + t5314) - t4210 * t4215 * t5352 + t4210 * t4213 * t5357 + t4208 * (t5315 + t5316 + t5317) - t4210 * t4215 * t5362 + t4210 * t4213 * t5367 + t4208 * (t5318 + t5319 + t5320) - t4210 * t4215 * t5372 + t4210 * t4213 * t5377 + t4208 * (t5321 + t5322 + t5323) - t4210 * t4215 * t5382 + t4210 * t4213 * t5387 + m(4) * (t4213 * t4757 * t4208 - t4712 * t4215);
t5441 = -m(3) * t381 * t4240 + t39 * t298 * t4234 + t190 * t4228;
t5448 = t39 * t298 * t4228 + t441 * t4234 + t454 * t4240;
t5455 = -m(3) * t381 * t4228 + t454 * t4234 + t465 * t4240;
t5463 = -m(3) * t758 * t4273 + t39 * t685 * t4267 + t190 * t4261;
t5470 = t39 * t685 * t4261 + t785 * t4267 + t795 * t4273;
t5477 = -m(3) * t758 * t4261 + t795 * t4267 + t465 * t4273;
t5485 = -m(3) * t1098 * t4306 + t39 * t1025 * t4300 + t190 * t4294;
t5492 = t39 * t1025 * t4294 + t1125 * t4300 + t1135 * t4306;
t5499 = -m(3) * t1098 * t4294 + t1135 * t4300 + t465 * t4306;
t5507 = -m(3) * t1438 * t4339 + t39 * t1365 * t4333 + t190 * t4327;
t5514 = t39 * t1365 * t4327 + t1465 * t4333 + t1475 * t4339;
t5521 = -m(3) * t1438 * t4327 + t1475 * t4333 + t465 * t4339;
t5529 = -m(3) * t1778 * t4372 + t39 * t1705 * t4366 + t190 * t4360;
t5536 = t39 * t1705 * t4360 + t1805 * t4366 + t1815 * t4372;
t5543 = -m(3) * t1778 * t4360 + t1815 * t4366 + t465 * t4372;
t5551 = -m(3) * t2118 * t4405 + t39 * t2045 * t4399 + t190 * t4393;
t5558 = t39 * t2045 * t4393 + t2145 * t4399 + t2155 * t4405;
t5565 = -m(3) * t2118 * t4393 + t2155 * t4399 + t465 * t4405;
t5568 = t188 * t184 * t5441 + t459 * t215 * t5448 - t470 * t325 * t5455 + t613 * t609 * t5463 + t800 * t636 * t5470 - t810 * t712 * t5477 + t953 * t949 * t5485 + t1140 * t976 * t5492 - t1150 * t1052 * t5499 + t1293 * t1289 * t5507 + t1480 * t1316 * t5514 - t1490 * t1392 * t5521 + t1633 * t1629 * t5529 + t1820 * t1656 * t5536 - t1830 * t1732 * t5543 + t1973 * t1969 * t5551 + t2160 * t1996 * t5558 - t2170 * t2072 * t5565;
t5605 = t188 * t2336 * t5441 + t2399 * t2368 * t5448 + t2442 * t2415 * t5455 + t613 * t2598 * t5463 + t2659 * t2630 * t5470 + t2701 * t2675 * t5477 + t953 * t2857 * t5485 + t2918 * t2889 * t5492 + t2960 * t2934 * t5499 + t1293 * t3116 * t5507 + t3177 * t3148 * t5514 + t3219 * t3193 * t5521 + t1633 * t3375 * t5529 + t3436 * t3407 * t5536 + t3478 * t3452 * t5543 + t1973 * t3634 * t5551 + t3695 * t3666 * t5558 + t3737 * t3711 * t5565 - t4987;
t5642 = t188 * t3775 * t5441 + t2399 * t3808 * t5448 + t2442 * t3814 * t5455 + t613 * t3852 * t5463 + t2659 * t3885 * t5470 + t2701 * t3891 * t5477 + t953 * t3929 * t5485 + t2918 * t3962 * t5492 + t2960 * t3968 * t5499 + t1293 * t4006 * t5507 + t3177 * t4039 * t5514 + t3219 * t4045 * t5521 + t1633 * t4083 * t5529 + t3436 * t4116 * t5536 + t3478 * t4122 * t5543 + t1973 * t4160 * t5551 + t3695 * t4193 * t5558 + t3737 * t4199 * t5565 + t5327;
t5643 = t4228 * t5441;
t5644 = t4234 * t5448;
t5645 = t4240 * t5455;
t5646 = t4261 * t5463;
t5647 = t4267 * t5470;
t5648 = t4273 * t5477;
t5649 = t4294 * t5485;
t5650 = t4300 * t5492;
t5651 = t4306 * t5499;
t5652 = t4327 * t5507;
t5653 = t4333 * t5514;
t5654 = t5643 + t5644 + t5645 + t5646 + t5647 + t5648 + t5649 + t5650 + t5651 + t5652 + t5653;
t5655 = t4339 * t5521;
t5656 = t4360 * t5529;
t5657 = t4366 * t5536;
t5658 = t4372 * t5543;
t5659 = t4393 * t5551;
t5660 = t4399 * t5558;
t5661 = t4405 * t5565;
t5662 = rSges(4,1) ^ 2;
t5663 = rSges(4,2) ^ 2;
t5666 = m(4) * (-t5662 + t5663) + Icges(4,1) - Icges(4,2);
t5667 = t4205 ^ 2;
t5669 = rSges(4,1) * m(4);
t5670 = rSges(4,2) * t5669;
t5671 = -t5670 + Icges(4,4);
t5675 = rSges(4,3) ^ 2;
t5677 = m(4) * (-t5663 + t5675);
t5678 = -0.2e1 * t4205 * t5671 * t4203 + t5667 * t5666 + Icges(4,2) - Icges(4,3) + t5677;
t5679 = t4210 ^ 2;
t5682 = rSges(4,3) * t5669 - Icges(4,5);
t5686 = m(4) * rSges(4,2) * rSges(4,3) - Icges(4,6);
t5688 = -t5686 * t4203 + t4205 * t5682;
t5693 = (t5662 + t5663) * m(4);
t5694 = -0.2e1 * t4210 * t5688 * t4208 + t5679 * t5678 + Icges(4,3) + t5655 + t5656 + t5657 + t5658 + t5659 + t5660 + t5661 + t5693;
t5699 = t4422 * t5441 + t4428 * t5448 + t4434 * t5455;
t5704 = t4444 * t5441 + t4450 * t5448 + t4456 * t5455;
t5709 = t4472 * t5463 + t4478 * t5470 + t4484 * t5477;
t5714 = t4494 * t5463 + t4500 * t5470 + t4506 * t5477;
t5719 = t4522 * t5485 + t4528 * t5492 + t4534 * t5499;
t5724 = t4544 * t5485 + t4550 * t5492 + t4556 * t5499;
t5729 = t4572 * t5507 + t4578 * t5514 + t4584 * t5521;
t5734 = t4594 * t5507 + t4600 * t5514 + t4606 * t5521;
t5739 = t4622 * t5529 + t4628 * t5536 + t4634 * t5543;
t5744 = t4644 * t5529 + t4650 * t5536 + t4656 * t5543;
t5749 = t4672 * t5551 + t4678 * t5558 + t4684 * t5565;
t5754 = t4694 * t5551 + t4700 * t5558 + t4706 * t5565;
t5759 = t4205 * t4203 * t5666 + 0.2e1 * t5667 * t5671 - Icges(4,4) + t5670;
t5763 = -t5682 * t4203 - t4205 * t5686;
t5765 = t5763 * t4208 + t4210 * t5759 + t4213 * t5699 + t4213 * t5709 + t4213 * t5719 + t4213 * t5729 + t4213 * t5739 + t4213 * t5749 + t4215 * t5704 + t4215 * t5714 + t4215 * t5724 + t4215 * t5734 + t4215 * t5744 + t4215 * t5754;
t5803 = -t5686 * t4203;
t5806 = Icges(4,3) + t5693;
t5808 = t4208 * (t5643 + t5644 + t5645) - t4210 * t4215 * t5699 + t4210 * t4213 * t5704 + t4208 * (t5646 + t5647 + t5648) - t4210 * t4215 * t5709 + t4210 * t4213 * t5714 + t4208 * (t5649 + t5650 + t5651) - t4210 * t4215 * t5719 + t4210 * t4213 * t5724 + t4208 * (t5652 + t5653 + t5655) - t4210 * t4215 * t5729 + t4210 * t4213 * t5734 + t4208 * (t5656 + t5657 + t5658) - t4210 * t4215 * t5739 + t4210 * t4213 * t5744 + t4208 * (t5659 + t5660 + t5661) - t4210 * t4215 * t5749 + t4210 * t4213 * t5754 + t4210 * (-t4205 * t5682 - t5803) + t5806 * t4208;
t5814 = -m(3) * t381 * t4434 + t39 * t298 * t4428 + t190 * t4422;
t5821 = t39 * t298 * t4422 + t441 * t4428 + t454 * t4434;
t5828 = -m(3) * t381 * t4422 + t454 * t4428 + t465 * t4434;
t5836 = -m(3) * t758 * t4484 + t39 * t685 * t4478 + t190 * t4472;
t5843 = t39 * t685 * t4472 + t785 * t4478 + t795 * t4484;
t5850 = -m(3) * t758 * t4472 + t795 * t4478 + t465 * t4484;
t5858 = -m(3) * t1098 * t4534 + t39 * t1025 * t4528 + t190 * t4522;
t5865 = t39 * t1025 * t4522 + t1125 * t4528 + t1135 * t4534;
t5872 = -m(3) * t1098 * t4522 + t1135 * t4528 + t465 * t4534;
t5880 = -m(3) * t1438 * t4584 + t39 * t1365 * t4578 + t190 * t4572;
t5887 = t39 * t1365 * t4572 + t1465 * t4578 + t1475 * t4584;
t5894 = -m(3) * t1438 * t4572 + t1475 * t4578 + t465 * t4584;
t5902 = -m(3) * t1778 * t4634 + t39 * t1705 * t4628 + t190 * t4622;
t5909 = t39 * t1705 * t4622 + t1805 * t4628 + t1815 * t4634;
t5916 = -m(3) * t1778 * t4622 + t1815 * t4628 + t465 * t4634;
t5924 = -m(3) * t2118 * t4684 + t39 * t2045 * t4678 + t190 * t4672;
t5931 = t39 * t2045 * t4672 + t2145 * t4678 + t2155 * t4684;
t5938 = -m(3) * t2118 * t4672 + t2155 * t4678 + t465 * t4684;
t5941 = t188 * t184 * t5814 + t459 * t215 * t5821 - t470 * t325 * t5828 + t613 * t609 * t5836 + t800 * t636 * t5843 - t810 * t712 * t5850 + t953 * t949 * t5858 + t1140 * t976 * t5865 - t1150 * t1052 * t5872 + t1293 * t1289 * t5880 + t1480 * t1316 * t5887 - t1490 * t1392 * t5894 + t1633 * t1629 * t5902 + t1820 * t1656 * t5909 - t1830 * t1732 * t5916 + t1973 * t1969 * t5924 + t2160 * t1996 * t5931 - t2170 * t2072 * t5938 + t4987;
t5978 = t188 * t2336 * t5814 + t2399 * t2368 * t5821 + t2442 * t2415 * t5828 + t613 * t2598 * t5836 + t2659 * t2630 * t5843 + t2701 * t2675 * t5850 + t953 * t2857 * t5858 + t2918 * t2889 * t5865 + t2960 * t2934 * t5872 + t1293 * t3116 * t5880 + t3177 * t3148 * t5887 + t3219 * t3193 * t5894 + t1633 * t3375 * t5902 + t3436 * t3407 * t5909 + t3478 * t3452 * t5916 + t1973 * t3634 * t5924 + t3695 * t3666 * t5931 + t3737 * t3711 * t5938;
t6015 = t188 * t3775 * t5814 + t2399 * t3808 * t5821 + t2442 * t3814 * t5828 + t613 * t3852 * t5836 + t2659 * t3885 * t5843 + t2701 * t3891 * t5850 + t953 * t3929 * t5858 + t2918 * t3962 * t5865 + t2960 * t3968 * t5872 + t1293 * t4006 * t5880 + t3177 * t4039 * t5887 + t3219 * t4045 * t5894 + t1633 * t4083 * t5902 + t3436 * t4116 * t5909 + t3478 * t4122 * t5916 + t1973 * t4160 * t5924 + t3695 * t4193 * t5931 + t3737 * t4199 * t5938 + t5391;
t6016 = t4228 * t5814;
t6017 = t4234 * t5821;
t6018 = t4240 * t5828;
t6019 = t4261 * t5836;
t6020 = t4267 * t5843;
t6021 = t4273 * t5850;
t6022 = t4294 * t5858;
t6023 = t4300 * t5865;
t6024 = t4306 * t5872;
t6025 = t4327 * t5880;
t6026 = t4333 * t5887;
t6027 = t6016 + t6017 + t6018 + t6019 + t6020 + t6021 + t6022 + t6023 + t6024 + t6025 + t6026;
t6028 = t4339 * t5894;
t6029 = t4360 * t5902;
t6030 = t4366 * t5909;
t6031 = t4372 * t5916;
t6032 = t4393 * t5924;
t6033 = t4399 * t5931;
t6034 = t4405 * t5938;
t6038 = t5666 * t4208;
t6040 = t5671 * t4213;
t6044 = t5671 * t4208;
t6048 = t4213 * t5666 - 0.2e1 * t4215 * t6044;
t6057 = t4208 * t4213;
t6065 = t6028 + t6029 + t6030 + t6031 + t6032 + t6033 + t6034 + 0.2e1 * t5679 * t5688 * t4215 + t4210 * (t5667 * (t4215 * t6038 + 0.2e1 * t6040) + t4205 * t4203 * t6048 + t4215 * (t5677 + Icges(4,2) - Icges(4,3)) * t4208 - t6040) + t4205 * (-t4215 * t5682 - t5686 * t6057) - t4203 * (-t4215 * t5686 + t5682 * t6057);
t6070 = t4422 * t5814 + t4428 * t5821 + t4434 * t5828;
t6075 = t4444 * t5814 + t4450 * t5821 + t4456 * t5828;
t6080 = t4472 * t5836 + t4478 * t5843 + t4484 * t5850;
t6085 = t4494 * t5836 + t4500 * t5843 + t4506 * t5850;
t6090 = t4522 * t5858 + t4528 * t5865 + t4534 * t5872;
t6095 = t4544 * t5858 + t4550 * t5865 + t4556 * t5872;
t6100 = t4572 * t5880 + t4578 * t5887 + t4584 * t5894;
t6105 = t4594 * t5880 + t4600 * t5887 + t4606 * t5894;
t6110 = t4622 * t5902 + t4628 * t5909 + t4634 * t5916;
t6115 = t4644 * t5902 + t4650 * t5909 + t4656 * t5916;
t6120 = t4672 * t5924 + t4678 * t5931 + t4684 * t5938;
t6125 = t4694 * t5924 + t4700 * t5931 + t4706 * t5938;
t6130 = t4203 * t6038 + t5686 * t4210;
t6138 = -t5682 * t4416;
t6143 = Icges(4,1) + (t5663 + t5675) * m(4);
t6145 = t4213 * t6070 + t4215 * t6075 + t4213 * t6080 + t4215 * t6085 + t4213 * t6090 + t4215 * t6095 + t4213 * t6100 + t4215 * t6105 + t4213 * t6110 + t4215 * t6115 + t4213 * t6120 + t4215 * t6125 - t5667 * t6048 + t4205 * (0.2e1 * t5671 * t4203 * t4213 + t4215 * t6130) + t4215 * (-t5671 * t4208 - t6138) + t6143 * t4213;
t6186 = -t4205 * t5682 * t4208 - t4208 * t5803 - t5806 * t4210;
t6189 = t4208 * (t6016 + t6017 + t6018) - t4210 * t4215 * t6070 + t4210 * t4213 * t6075 + t4208 * (t6019 + t6020 + t6021) - t4210 * t4215 * t6080 + t4210 * t4213 * t6085 + t4208 * (t6022 + t6023 + t6024) - t4210 * t4215 * t6090 + t4210 * t4213 * t6095 + t4208 * (t6025 + t6026 + t6028) - t4210 * t4215 * t6100 + t4210 * t4213 * t6105 + t4208 * (t6029 + t6030 + t6031) - t4210 * t4215 * t6110 + t4210 * t4213 * t6115 + t4208 * (t6032 + t6033 + t6034) - t4210 * t4215 * t6120 + t4210 * t4213 * t6125 + t4215 * t6186 + t5763 * t4213;
t6195 = -m(3) * t381 * t4456 + t39 * t298 * t4450 + t190 * t4444;
t6202 = t39 * t298 * t4444 + t441 * t4450 + t454 * t4456;
t6209 = -m(3) * t381 * t4444 + t454 * t4450 + t465 * t4456;
t6217 = -m(3) * t758 * t4506 + t39 * t685 * t4500 + t190 * t4494;
t6224 = t39 * t685 * t4494 + t785 * t4500 + t795 * t4506;
t6231 = -m(3) * t758 * t4494 + t795 * t4500 + t465 * t4506;
t6239 = -m(3) * t1098 * t4556 + t39 * t1025 * t4550 + t190 * t4544;
t6246 = t39 * t1025 * t4544 + t1125 * t4550 + t1135 * t4556;
t6253 = -m(3) * t1098 * t4544 + t1135 * t4550 + t465 * t4556;
t6261 = -m(3) * t1438 * t4606 + t39 * t1365 * t4600 + t190 * t4594;
t6268 = t39 * t1365 * t4594 + t1465 * t4600 + t1475 * t4606;
t6275 = -m(3) * t1438 * t4594 + t1475 * t4600 + t465 * t4606;
t6283 = -m(3) * t1778 * t4656 + t39 * t1705 * t4650 + t190 * t4644;
t6290 = t39 * t1705 * t4644 + t1805 * t4650 + t1815 * t4656;
t6297 = -m(3) * t1778 * t4644 + t1815 * t4650 + t465 * t4656;
t6305 = -m(3) * t2118 * t4706 + t39 * t2045 * t4700 + t190 * t4694;
t6312 = t39 * t2045 * t4694 + t2145 * t4700 + t2155 * t4706;
t6319 = -m(3) * t2118 * t4694 + t2155 * t4700 + t465 * t4706;
t6322 = t188 * t184 * t6195 + t459 * t215 * t6202 - t470 * t325 * t6209 + t613 * t609 * t6217 + t800 * t636 * t6224 - t810 * t712 * t6231 + t953 * t949 * t6239 + t1140 * t976 * t6246 - t1150 * t1052 * t6253 + t1293 * t1289 * t6261 + t1480 * t1316 * t6268 - t1490 * t1392 * t6275 + t1633 * t1629 * t6283 + t1820 * t1656 * t6290 - t1830 * t1732 * t6297 + t1973 * t1969 * t6305 + t2160 * t1996 * t6312 - t2170 * t2072 * t6319 - t5327;
t6359 = t188 * t2336 * t6195 + t2399 * t2368 * t6202 + t2442 * t2415 * t6209 + t613 * t2598 * t6217 + t2659 * t2630 * t6224 + t2701 * t2675 * t6231 + t953 * t2857 * t6239 + t2918 * t2889 * t6246 + t2960 * t2934 * t6253 + t1293 * t3116 * t6261 + t3177 * t3148 * t6268 + t3219 * t3193 * t6275 + t1633 * t3375 * t6283 + t3436 * t3407 * t6290 + t3478 * t3452 * t6297 + t1973 * t3634 * t6305 + t3695 * t3666 * t6312 + t3737 * t3711 * t6319 + t5053;
t6396 = t188 * t3775 * t6195 + t2399 * t3808 * t6202 + t2442 * t3814 * t6209 + t613 * t3852 * t6217 + t2659 * t3885 * t6224 + t2701 * t3891 * t6231 + t953 * t3929 * t6239 + t2918 * t3962 * t6246 + t2960 * t3968 * t6253 + t1293 * t4006 * t6261 + t3177 * t4039 * t6268 + t3219 * t4045 * t6275 + t1633 * t4083 * t6283 + t3436 * t4116 * t6290 + t3478 * t4122 * t6297 + t1973 * t4160 * t6305 + t3695 * t4193 * t6312 + t3737 * t4199 * t6319;
t6397 = t4228 * t6195;
t6398 = t4234 * t6202;
t6399 = t4240 * t6209;
t6400 = t4261 * t6217;
t6401 = t4267 * t6224;
t6402 = t4273 * t6231;
t6403 = t4294 * t6239;
t6404 = t4300 * t6246;
t6405 = t4306 * t6253;
t6406 = t4327 * t6261;
t6407 = t4333 * t6268;
t6408 = t6397 + t6398 + t6399 + t6400 + t6401 + t6402 + t6403 + t6404 + t6405 + t6406 + t6407;
t6409 = t4339 * t6275;
t6410 = t4360 * t6283;
t6411 = t4366 * t6290;
t6412 = t4372 * t6297;
t6413 = t4393 * t6305;
t6414 = t4399 * t6312;
t6415 = t4405 * t6319;
t6416 = t5688 * t4213;
t6429 = t6409 + t6410 + t6411 + t6412 + t6413 + t6414 + t6415 - 0.2e1 * t5679 * t6416 + t4210 * (-t4213 * t5678 * t4208 + t4215 * t5759) + t6416 - t4215 * (t5682 * t4203 + t4205 * t5686) * t4208;
t6434 = t4422 * t6195 + t4428 * t6202 + t4434 * t6209;
t6439 = t4444 * t6195 + t4450 * t6202 + t4456 * t6209;
t6444 = t4472 * t6217 + t4478 * t6224 + t4484 * t6231;
t6449 = t4494 * t6217 + t4500 * t6224 + t4506 * t6231;
t6454 = t4522 * t6239 + t4528 * t6246 + t4534 * t6253;
t6459 = t4544 * t6239 + t4550 * t6246 + t4556 * t6253;
t6464 = t4572 * t6261 + t4578 * t6268 + t4584 * t6275;
t6469 = t4594 * t6261 + t4600 * t6268 + t4606 * t6275;
t6474 = t4622 * t6283 + t4628 * t6290 + t4634 * t6297;
t6479 = t4644 * t6283 + t4650 * t6290 + t4656 * t6297;
t6484 = t4672 * t6305 + t4678 * t6312 + t4684 * t6319;
t6489 = t4694 * t6305 + t4700 * t6312 + t4706 * t6319;
t6505 = t4213 * t6434 + t4215 * t6439 + t4213 * t6444 + t4215 * t6449 + t4213 * t6454 + t4215 * t6459 + t4213 * t6464 + t4215 * t6469 + t4213 * t6474 + t4215 * t6479 + t4213 * t6484 + t4215 * t6489 + t5667 * (-0.2e1 * t4213 * t6044 - t4215 * t5666) + t4205 * (0.2e1 * t5671 * t4203 * t4215 - t4213 * t6130) + t4213 * (t6044 + t6138) + t6143 * t4215;
t6544 = t4208 * (t6397 + t6398 + t6399) - t4210 * t4215 * t6434 + t4210 * t4213 * t6439 + t4208 * (t6400 + t6401 + t6402) - t4210 * t4215 * t6444 + t4210 * t4213 * t6449 + t4208 * (t6403 + t6404 + t6405) - t4210 * t4215 * t6454 + t4210 * t4213 * t6459 + t4208 * (t6406 + t6407 + t6409) - t4210 * t4215 * t6464 + t4210 * t4213 * t6469 + t4208 * (t6410 + t6411 + t6412) - t4210 * t4215 * t6474 + t4210 * t4213 * t6479 + t4208 * (t6413 + t6414 + t6415) - t4210 * t4215 * t6484 + t4210 * t4213 * t6489 - t4213 * t6186 + t5763 * t4215;
unknown(1,1) = t2172;
unknown(1,2) = t3739;
unknown(1,3) = t4202;
unknown(1,4) = t4407;
unknown(1,5) = t4717;
unknown(1,6) = t4759;
unknown(2,1) = t4886;
unknown(2,2) = t4923;
unknown(2,3) = t4960;
unknown(2,4) = t4988;
unknown(2,5) = t5055;
unknown(2,6) = t5104;
unknown(3,1) = t5231;
unknown(3,2) = t5268;
unknown(3,3) = t5305;
unknown(3,4) = t5328;
unknown(3,5) = t5393;
unknown(3,6) = t5435;
unknown(4,1) = t5568;
unknown(4,2) = t5605;
unknown(4,3) = t5642;
unknown(4,4) = t5654 + t5694;
unknown(4,5) = t5765;
unknown(4,6) = t5808;
unknown(5,1) = t5941;
unknown(5,2) = t5978;
unknown(5,3) = t6015;
unknown(5,4) = t6027 + t6065;
unknown(5,5) = t6145;
unknown(5,6) = t6189;
unknown(6,1) = t6322;
unknown(6,2) = t6359;
unknown(6,3) = t6396;
unknown(6,4) = t6408 + t6429;
unknown(6,5) = t6505;
unknown(6,6) = t6544;
MX  = unknown;
