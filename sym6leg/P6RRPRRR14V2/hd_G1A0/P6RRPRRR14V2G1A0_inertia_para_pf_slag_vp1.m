% Calculate inertia matrix for parallel robot
% P6RRPRRR14V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d1,d2,d4,theta3]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 22:59
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V2G1A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-10 17:12:08
% EndTime: 2020-03-10 17:12:37
% DurationCPUTime: 31.88s
% Computational Cost: add. (887114->4083), mult. (2051047->6157), div. (5994->30), fcn. (1448761->50), ass. (0->1836)
unknown=NaN(6,6);
t1 = cos(pkin(6));
t2 = t1 * pkin(9);
t3 = t2 + qJ(3,1);
t4 = cos(qJ(1,1));
t5 = sin(legFrame(1,3));
t7 = sin(qJ(1,1));
t8 = cos(legFrame(1,3));
t10 = t5 * t4 + t8 * t7;
t11 = t10 * t3;
t12 = sin(pkin(4));
t13 = t12 * t11;
t14 = cos(pkin(10));
t15 = sin(pkin(6));
t16 = t15 * t14;
t17 = pkin(9) * t16;
t18 = sin(pkin(10));
t19 = pkin(3) * t18;
t20 = t17 - t19;
t23 = t4 * t8 - t7 * t5;
t24 = sin(qJ(2,1));
t26 = cos(pkin(4));
t27 = cos(qJ(2,1));
t28 = t27 * t26;
t33 = cos(pkin(5));
t34 = t33 ^ 2;
t36 = sin(pkin(5));
t37 = t36 * t20;
t38 = t12 * t10;
t40 = t18 * t15;
t41 = pkin(9) * t40;
t43 = pkin(3) * t14 + pkin(2) + t41;
t44 = t10 * t43;
t45 = t26 * t44;
t46 = t3 * t36;
t47 = t23 * t46;
t50 = t26 * t10;
t52 = t23 * t43;
t57 = t34 * (-t13 - (t10 * t28 + t24 * t23) * t20) + t33 * (t38 * t37 + t24 * (t45 - t47) - t27 * (t50 * t46 + t52)) + t13;
t58 = t26 * pkin(1);
t59 = t27 * t20;
t61 = t20 * pkin(8);
t63 = t3 * pkin(1);
t65 = t12 * (-t24 * t61 + t63);
t67 = t34 * (t59 * t58 + t65);
t68 = t43 * pkin(8);
t70 = pkin(8) * t36;
t71 = t17 + t70 - t19;
t73 = t24 * t3 * t71;
t74 = t36 * pkin(1);
t75 = t20 * t74;
t77 = t12 * (-t27 * t68 - t73 - t75);
t79 = t27 * t46;
t86 = t24 * t46;
t89 = t3 * t12 * (t27 * t43 + pkin(1) + t86);
t91 = 0.1e1 / (t67 + t33 * (t77 + pkin(1) * t26 * (-t24 * t43 + t79)) - t89);
t92 = t91 * t57;
t93 = rSges(3,1) ^ 2;
t94 = rSges(3,2) ^ 2;
t95 = -t93 + t94;
t97 = m(3) * t95 + Icges(3,1) - Icges(3,2);
t98 = t14 ^ 2;
t99 = t98 * t97;
t100 = rSges(3,1) * m(3);
t101 = rSges(3,2) * t100;
t102 = t101 - Icges(3,4);
t103 = t18 * t102;
t105 = 0.2e1 * t14 * t103;
t109 = (rSges(3,3) + qJ(3,1) + rSges(3,1)) * (rSges(3,3) + qJ(3,1) - rSges(3,1)) * m(3);
t111 = t34 * (t99 + t105 - t109 - Icges(3,1) + Icges(3,3));
t112 = qJ(3,1) + rSges(3,3);
t115 = m(3) * t112 * rSges(3,2) - Icges(3,6);
t119 = m(3) * t112 * rSges(3,1) - Icges(3,5);
t120 = t18 * t119;
t121 = t14 * t115 + t120;
t124 = 0.2e1 * t33 * t36 * t121;
t126 = pkin(2) * m(3);
t128 = 0.2e1 * rSges(3,1) * t126;
t130 = t14 * (0.2e1 * t18 * t102 - t128);
t132 = m(3) * t18;
t134 = 0.2e1 * t132 * pkin(2) * rSges(3,2);
t138 = -t94 + (rSges(3,3) + qJ(3,1) + pkin(2)) * (rSges(3,3) + qJ(3,1) - pkin(2));
t140 = rSges(2,1) ^ 2;
t141 = rSges(2,2) ^ 2;
t142 = -t140 + t141;
t143 = m(2) * t142;
t144 = m(3) * t138 + Icges(2,1) - Icges(2,2) + Icges(3,2) - Icges(3,3) + t111 - t124 + t130 + t134 + t143 + t99;
t145 = t27 ^ 2;
t149 = -m(3) * t95 - Icges(3,1) + Icges(3,2);
t151 = rSges(3,2) * t126;
t155 = pkin(2) * rSges(3,1) * t132;
t157 = t33 * (0.2e1 * t98 * t102 + t14 * (t18 * t149 + t151) + t155 - t101 + Icges(3,4));
t158 = t119 * t36;
t160 = t18 * t115;
t161 = t112 * t126;
t162 = t160 - t161;
t164 = m(2) * rSges(2,1);
t165 = rSges(2,2) * t164;
t173 = t112 * m(3);
t181 = t98 * (-0.2e1 * m(3) * t95 - 0.2e1 * Icges(3,1) + 0.2e1 * Icges(3,2));
t183 = rSges(3,2) * pkin(8);
t184 = t183 * t36 * m(3);
t188 = t14 * (-0.4e1 * t18 * t102 + t128 - 0.2e1 * t184);
t192 = 0.2e1 * pkin(8) * rSges(3,1) * t36 * t132;
t193 = pkin(2) ^ 2;
t194 = pkin(8) ^ 2;
t196 = m(3) * (-t93 + t94 + t193 - t194);
t197 = t194 * m(2);
t200 = 0.2e1 * m(2) * rSges(2,3) * pkin(8);
t201 = rSges(2,3) ^ 2;
t203 = m(2) * (t140 - t201);
t204 = t145 * t144 + 0.2e1 * t27 * (-t14 * t158 + t36 * t162 - Icges(2,4) + t157 + t165) * t24 + t111 + 0.2e1 * t33 * (-t14 * t115 * t36 - pkin(8) * t173 - t36 * t120) + t181 + t188 - t192 - t134 + t196 - t197 - t200 + t203 - Icges(2,1) + Icges(3,1) - Icges(3,2) + Icges(2,3);
t205 = t26 ^ 2;
t212 = t98 * t36 * t97;
t213 = t102 * t36;
t216 = pkin(8) * m(3);
t217 = rSges(3,2) * t216;
t219 = t14 * (0.2e1 * t18 * t213 + t217);
t220 = -t109 - Icges(3,1) + Icges(3,3);
t223 = pkin(8) * rSges(3,1) * t132;
t226 = -t14 * t115;
t228 = t36 * t112 * t216;
t229 = -t18 * t119;
t230 = m(2) * rSges(2,2);
t231 = rSges(2,3) * t230;
t232 = pkin(8) * t230;
t239 = 0.2e1 * t98 * t213;
t241 = t18 * t97 - t151;
t244 = -rSges(3,1) * t216 + t36 * t241;
t245 = t14 * t244;
t246 = -t155 + t101 - Icges(3,4);
t247 = t36 * t246;
t248 = t183 * t132;
t249 = rSges(2,3) * t164;
t250 = pkin(8) * t164;
t252 = pkin(2) * pkin(8) * m(3);
t259 = t98 * t149;
t262 = -0.2e1 * t18 * t102;
t264 = t14 * (t262 + t128);
t266 = -m(2) * t142;
t267 = t34 * (t259 - t105 + t109 + Icges(3,1) - Icges(3,3)) + t124 + t259 + t264 - t134 - m(3) * t138 + t266 - Icges(2,1) + Icges(2,2) - Icges(3,2) + Icges(3,3);
t271 = -0.2e1 * t98 * t102 + t14 * t241 - Icges(3,4) + t101 - t155;
t276 = m(3) * pkin(1);
t277 = rSges(3,1) * t276;
t284 = 0.2e1 * t165;
t285 = 0.2e1 * Icges(2,4);
t289 = rSges(3,2) * t132 - t126 - t164;
t291 = 0.2e1 * t289 * pkin(1);
t295 = pkin(1) * t14;
t297 = t24 * pkin(1);
t298 = rSges(3,1) * t18;
t306 = 0.2e1 * t14 * (t184 + t103);
t312 = rSges(3,3) ^ 2;
t314 = 0.2e1 * rSges(3,3) * qJ(3,1);
t315 = pkin(1) ^ 2;
t316 = qJ(3,1) ^ 2;
t320 = m(2) * (t141 + t201 + t315);
t321 = rSges(1,1) ^ 2;
t322 = rSges(1,2) ^ 2;
t324 = m(1) * (t321 + t322);
t325 = t205 * t204 - 0.2e1 * t26 * t12 * (t27 * (t34 * (0.2e1 * t14 * t115 + 0.2e1 * t120) + t33 * (t36 * t220 + t212 + t219 + t223) + t226 - t228 + t229 + t231 + t232 - Icges(2,6)) - (t33 * (-t14 * t119 + t160 - t161) - t239 + t245 + t247 + t248 - t249 - t250 - t252 + Icges(2,5)) * t24) + t145 * t267 + t27 * (0.2e1 * t33 * t271 * t24 + 0.2e1 * t14 * (t24 * t158 + t277) + t24 * (t36 * (-0.2e1 * t18 * t115 + 0.2e1 * t161) - t284 + t285) - t291) - 0.2e1 * t33 * m(3) * (t295 * t24 * rSges(3,2) - t112 * pkin(8) + t298 * t297) + t99 + t306 - 0.2e1 * t24 * pkin(1) * (-t36 * t173 + t230) + t192 + m(3) * (t93 + t312 + t314 + t315 + t194 + t316) + t197 + t200 + t320 + Icges(3,2) + Icges(2,1) + t324 + Icges(1,3);
t327 = t12 * t26;
t330 = t3 * t24;
t331 = t12 * t23;
t333 = t20 * t10;
t334 = t205 - 0.1e1 / 0.2e1;
t339 = t20 * t24;
t345 = t36 * t327;
t348 = t24 * t36;
t349 = t23 * t20;
t355 = t26 * t52;
t356 = t10 * t46;
t359 = t37 - pkin(8);
t362 = t24 * t43;
t364 = t86 + pkin(1);
t371 = t43 * t36;
t377 = t74 + t330;
t381 = t26 - 0.1e1;
t382 = t26 + 0.1e1;
t383 = t382 * t381;
t384 = t17 - t70 - t19;
t389 = t34 * (t145 * t11 * t327 + t27 * (t331 * t330 + 0.2e1 * t334 * t333) + t26 * (t23 * t339 + t13)) + t33 * (-t145 * t333 * t345 + t27 * (0.2e1 * t205 * t10 * t46 - t12 * t349 * t348 + t355 - t356) + t26 * (-t12 * t10 * t359 + t364 * t23 - t50 * t362)) - t27 * (t27 * (t26 * t11 + t23 * t371) * t12 + t12 * (t23 * t377 - t45 * t348) + t10 * t384 * t383);
t390 = t3 * t26;
t392 = pkin(8) * t12;
t393 = t43 * t392;
t394 = t390 * t74 - t393;
t398 = t20 * pkin(1);
t404 = t26 * t43;
t405 = t404 * t297;
t409 = 0.1e1 / (t67 + t33 * (t27 * t394 + t12 * (t36 * (-t24 * t3 * pkin(8) - t398) - t3 * t339) - t405) - t89);
t410 = t409 * t389;
t416 = -t18 * t102;
t419 = 0.2e1 * t36 * t416 - t217;
t430 = -t98 * t102;
t440 = -t36 * t246 - Icges(2,5) - t248 + t249 + t250 + t252;
t445 = 0.2e1 * t14 * t416;
t447 = t34 * (t99 - t445 - t109 + Icges(3,3) - Icges(3,1));
t449 = m(3) * rSges(3,2);
t460 = pkin(1) * t27;
t464 = -t289 * pkin(1);
t470 = rSges(2,2) * pkin(1);
t473 = m(3) * (t94 + t312 + t314 + t193 + t316);
t475 = m(2) * (t140 + t141);
t476 = t447 + t33 * (t14 * (-0.2e1 * t115 * t36 - t449 * t297) - 0.2e1 * (t158 + t297 * t100 / 0.2e1) * t18) + t259 + t14 * (t460 * t100 + t128 + t262) + t27 * t464 + t36 * t24 * t112 * t276 - t470 * t24 * m(2) - t134 + t473 + t475 + Icges(3,1) + Icges(2,3);
t478 = t12 * (-0.2e1 * t34 * t121 * t27 + t33 * (-t99 * t36 * t27 + t14 * (-t24 * t119 + t27 * t419) + t27 * (-t36 * t220 - t223) + t24 * t162) + 0.2e1 * t430 * t348 + t14 * (t27 * t115 + t24 * t244) + t27 * (t228 + t120 - t231 - t232 + Icges(2,6)) - t24 * t440) + t476 * t26;
t480 = t1 ^ 2;
t481 = pkin(9) ^ 2;
t482 = t481 * t480;
t483 = pkin(3) ^ 2;
t484 = t482 + t483 - t481;
t485 = t98 * t484;
t486 = pkin(9) * pkin(3);
t489 = 0.2e1 * t14 * t486 * t40;
t490 = t2 - pkin(3) + qJ(3,1);
t491 = t2 + pkin(3) + qJ(3,1);
t492 = t491 * t490;
t493 = t485 + t489 + t492;
t496 = t15 * t26;
t497 = pkin(3) * t496;
t499 = t98 * t10 * pkin(9);
t502 = t15 * t36;
t509 = t18 * (-t483 + t481);
t510 = t15 * pkin(2);
t511 = pkin(9) * t510;
t512 = -t480 * t481 * t18 + t509 + t511;
t513 = t512 * t7;
t515 = -t4 * t3 * pkin(9) * t502 + t26 * t513;
t517 = t26 * t512;
t519 = t36 * t7;
t520 = pkin(9) * t15;
t523 = t3 * t520 * t519 + t4 * t517;
t528 = t18 * t36;
t529 = t4 * t3;
t531 = t26 * t7;
t533 = t18 * pkin(2) + t520;
t535 = -t529 * t528 + t533 * t531;
t537 = t533 * t26;
t541 = t3 * t18 * t519 + t4 * t537;
t549 = t98 * t23 * t484;
t550 = t41 + pkin(2);
t553 = t4 * t550 + t46 * t531;
t555 = t36 * t26;
t557 = t550 * t7;
t558 = t529 * t555 - t557;
t566 = 0.2e1 * pkin(9) * t18 * t510;
t567 = 0.2e1 * t482;
t569 = 0.2e1 * qJ(3,1) * t2;
t570 = t566 - t567 - t569 + t193 + t481 - t316;
t575 = 0.2e1 * t550 * t46 * t531 + t4 * t570;
t579 = t4 * t550 * t3 * t555;
t580 = t570 * t7;
t587 = t493 * t10;
t588 = t26 * t24;
t591 = t15 * t24;
t592 = pkin(3) * t591;
t594 = t98 * t23 * pkin(9);
t599 = t7 * t3;
t600 = pkin(9) * t502;
t602 = pkin(3) * t12;
t603 = t602 / 0.2e1;
t604 = t600 * t588 + t603;
t606 = t4 * t24 * t512 + t604 * t599;
t611 = t4 * t604 * t3 - t24 * t513;
t619 = pkin(3) * t528;
t622 = t550 * t12 / 0.2e1;
t623 = t619 * t588 - t622;
t625 = -t4 * t533 * pkin(3) * t24 - t623 * t599;
t629 = t24 * t7;
t630 = t533 * pkin(3);
t632 = t4 * t623 * t3 - t630 * t629;
t637 = t484 * t26;
t639 = t36 * t12;
t640 = pkin(3) * t15;
t643 = 0.2e1 * pkin(9) * t640 * t639;
t644 = t24 * t637 + t643;
t648 = 0.2e1 * t86 + pkin(1);
t651 = pkin(3) * t26;
t653 = t24 * t550 * t651;
t657 = pkin(3) * pkin(8);
t659 = (-t482 * t528 + t36 * (t509 + t511) - t657) * t12;
t660 = t659 / 0.2e1;
t664 = t4 * pkin(3) * t648 - 0.2e1 * (t653 + t660) * t7;
t671 = t4 * (0.2e1 * t653 + t659) + pkin(3) * t648 * t7;
t679 = t36 * t630;
t680 = t550 * pkin(8);
t682 = (t679 + t680) * t12;
t683 = t24 * t570 * t26 - t682;
t685 = t4 * t648 * t550 - t683 * t7;
t689 = t4 * t683 + t648 * t557;
t697 = -pkin(3) * t18 * t4 + t3 * t12 * t629;
t699 = t12 * t24;
t701 = t18 * t7;
t703 = pkin(3) * t701 + t529 * t699;
t714 = 0.2e1 * t3 * t19 * t12 * t629;
t720 = t4 * t3 * pkin(3) * t18 * t699;
t722 = t491 * t490 * t7;
t732 = 0.2e1 * t486 * t496;
t733 = t24 * t484 * t639 - t732;
t737 = t297 + 0.2e1 * t46;
t742 = t619 + pkin(8) / 0.2e1;
t743 = t12 * t742;
t745 = t24 * t520 * t743;
t746 = t517 / 0.2e1;
t750 = t4 * pkin(9) * t737 * t15 + 0.2e1 * (t745 - t746) * t7;
t758 = t4 * (-0.2e1 * t745 + t517) + pkin(9) * t737 * t15 * t7;
t766 = t481 * t36 * t480;
t767 = pkin(9) * t36;
t773 = pkin(8) * t19;
t777 = t533 * t651;
t778 = t24 * t12 * (t766 + 0.2e1 * t1 * qJ(3,1) * t767 + t36 * (-t483 + t316) - t773) + t777;
t780 = -t4 * pkin(3) * t737 * t18 + t778 * t7;
t784 = pkin(3) * t737 * t701;
t790 = pkin(3) * t555;
t791 = t520 * t699 + t790;
t794 = t24 * t74;
t795 = t794 + t2 + qJ(3,1);
t798 = (t70 + t19) * t12;
t800 = t550 * t555;
t801 = t24 * t798 - t800;
t803 = t4 * t795 + t801 * t7;
t807 = -t4 * t801 + t795 * t7;
t811 = t145 * (t34 * t23 * t493 + t33 * (0.4e1 * t499 * t497 + t14 * (0.2e1 * t523 * t5 + 0.2e1 * t8 * t515) - 0.2e1 * pkin(3) * (t541 * t5 + t8 * t535)) + t549 + 0.2e1 * t14 * pkin(3) * (t558 * t5 + t8 * t553) + t8 * t575 + 0.2e1 * (t579 - t580 / 0.2e1) * t5) + t27 * (-t34 * t588 * t587 + t33 * (0.4e1 * t594 * t592 + t14 * (0.2e1 * t611 * t5 + 0.2e1 * t8 * t606) + 0.2e1 * t8 * t625 - 0.2e1 * t5 * t632) - t98 * t10 * t644 + t14 * (-t671 * t5 + t8 * t664) + t8 * t685 - t689 * t5) + t34 * (-t549 + 0.2e1 * t14 * (t703 * t5 + t8 * t697) * t520 + t8 * (t4 * (-t482 - t569 + t483 - t316) - t714) - 0.2e1 * (t720 - t722 / 0.2e1) * t5) + t33 * (t98 * t733 * t10 + t14 * (-t758 * t5 + t8 * t750) + t8 * t780 + (t4 * t778 + t784) * t5) + (-t14 * t10 * t791 - t807 * t5 + t8 * t803) * t3;
t812 = t12 * t811;
t814 = t34 * t20 * t58;
t816 = t14 * pkin(8) * t602;
t819 = pkin(9) * t36 * t1 * t58;
t820 = qJ(3,1) * t36;
t822 = t550 * t392;
t825 = t43 * t12;
t826 = t3 * t825;
t830 = t14 * pkin(9) * pkin(8);
t839 = t481 * t15 * t12 * t1;
t840 = t15 * t12;
t843 = pkin(3) * t58;
t846 = t12 * pkin(1);
t847 = t600 * t846;
t853 = t1 * (t70 - t19) * pkin(9) * t12;
t856 = t26 * t550 * pkin(1);
t857 = t18 * t12;
t862 = t619 * t846;
t866 = t3 * t12 * t364;
t868 = 0.1e1 / (t27 * (t814 + t33 * (t820 * t58 - t816 + t819 - t822) - t826) + t34 * (t657 * t18 * t24 - t830 * t591 + t63) * t12 + t33 * (t14 * (t24 * (-pkin(9) * qJ(3,1) * t840 - t839 - t843) - t847) + t24 * (pkin(3) * qJ(3,1) * t857 - t820 * t392 - t853 - t856) + t862) - t866);
t870 = rSges(3,1) * t14;
t871 = rSges(3,2) * t18;
t872 = t870 - t871 + pkin(2);
t877 = rSges(3,2) * t14 + t298;
t883 = t12 * (-pkin(8) * t348 + t33 * (t27 * t872 + pkin(1)) - t877 * t24) + (t460 + t870 - t871 + pkin(2)) * t555;
t885 = m(3) * t883 * t868;
t887 = t325 * t92 + t478 * t410 + t885 * t812;
t895 = t447 + 0.2e1 * t33 * t36 * (t226 + t229) + t259 + t264 - t134 + t473 + Icges(3,1) + t475 + Icges(2,3);
t899 = t36 * t872 * m(3);
t901 = t899 * t868 * t812 + t895 * t410 + t478 * t92;
t904 = m(3) * t883;
t907 = m(3) * t868;
t909 = -t899 * t410 - t907 * t812 - t904 * t92;
t911 = t868 * t12;
t913 = t2 + qJ(3,2);
t914 = cos(qJ(1,2));
t915 = sin(legFrame(2,3));
t917 = sin(qJ(1,2));
t918 = cos(legFrame(2,3));
t920 = t915 * t914 + t918 * t917;
t921 = t920 * t913;
t922 = t12 * t921;
t925 = t914 * t918 - t917 * t915;
t926 = sin(qJ(2,2));
t928 = cos(qJ(2,2));
t929 = t928 * t26;
t935 = t12 * t920;
t937 = t920 * t43;
t938 = t26 * t937;
t939 = t913 * t36;
t940 = t925 * t939;
t943 = t26 * t920;
t945 = t925 * t43;
t950 = t34 * (-t922 - (t920 * t929 + t926 * t925) * t20) + t33 * (t935 * t37 + t926 * (t938 - t940) - t928 * (t943 * t939 + t945)) + t922;
t951 = t928 * t20;
t954 = t913 * pkin(1);
t956 = t12 * (-t926 * t61 + t954);
t958 = t34 * (t951 * t58 + t956);
t961 = t926 * t913 * t71;
t963 = t12 * (-t928 * t68 - t75 - t961);
t965 = t928 * t939;
t972 = t926 * t939;
t975 = t913 * t12 * (t928 * t43 + pkin(1) + t972);
t977 = 0.1e1 / (t958 + t33 * (t963 + pkin(1) * t26 * (-t926 * t43 + t965)) - t975);
t978 = t977 * t950;
t982 = (rSges(3,3) + qJ(3,2) + rSges(3,1)) * (rSges(3,3) + qJ(3,2) - rSges(3,1)) * m(3);
t984 = t34 * (t99 + t105 - t982 - Icges(3,1) + Icges(3,3));
t985 = qJ(3,2) + rSges(3,3);
t988 = m(3) * t985 * rSges(3,2) - Icges(3,6);
t992 = m(3) * t985 * rSges(3,1) - Icges(3,5);
t993 = t18 * t992;
t994 = t14 * t988 + t993;
t997 = 0.2e1 * t33 * t36 * t994;
t1001 = -t94 + (rSges(3,3) + qJ(3,2) + pkin(2)) * (rSges(3,3) + qJ(3,2) - pkin(2));
t1003 = m(3) * t1001 + Icges(2,1) - Icges(2,2) + Icges(3,2) - Icges(3,3) + t130 + t134 + t143 + t984 + t99 - t997;
t1004 = t928 ^ 2;
t1006 = t992 * t36;
t1008 = t18 * t988;
t1009 = t985 * t126;
t1010 = t1008 - t1009;
t1019 = t985 * m(3);
t1023 = t1004 * t1003 + 0.2e1 * t928 * (-t14 * t1006 + t36 * t1010 - Icges(2,4) + t157 + t165) * t926 + t984 + 0.2e1 * t33 * (-t14 * t988 * t36 - pkin(8) * t1019 - t36 * t993) + t181 + t188 - t192 - t134 + t196 - t197 - t200 + t203 - Icges(2,1) + Icges(3,1) - Icges(3,2) + Icges(2,3);
t1029 = -t982 - Icges(3,1) + Icges(3,3);
t1033 = -t14 * t988;
t1035 = t36 * t985 * t216;
t1036 = -t18 * t992;
t1051 = t34 * (t259 - t105 + t982 + Icges(3,1) - Icges(3,3)) + t997 + t259 + t264 - t134 - m(3) * t1001 + t266 - Icges(2,1) + Icges(2,2) - Icges(3,2) + Icges(3,3);
t1069 = t926 * pkin(1);
t1082 = 0.2e1 * rSges(3,3) * qJ(3,2);
t1083 = qJ(3,2) ^ 2;
t1086 = t205 * t1023 - 0.2e1 * t26 * t12 * (t928 * (t34 * (0.2e1 * t14 * t988 + 0.2e1 * t993) + t33 * (t36 * t1029 + t212 + t219 + t223) + t1033 - t1035 + t1036 + t231 + t232 - Icges(2,6)) - (t33 * (-t14 * t992 + t1008 - t1009) - t239 + t245 + t247 + t248 - t249 - t250 - t252 + Icges(2,5)) * t926) + t1004 * t1051 + t928 * (0.2e1 * t33 * t271 * t926 + 0.2e1 * t14 * (t926 * t1006 + t277) + t926 * (t36 * (-0.2e1 * t18 * t988 + 0.2e1 * t1009) - t284 + t285) - t291) - 0.2e1 * t33 * m(3) * (t295 * t926 * rSges(3,2) - t985 * pkin(8) + t298 * t1069) + t99 + t306 - 0.2e1 * t926 * pkin(1) * (-t36 * t1019 + t230) + t192 + m(3) * (t93 + t312 + t1082 + t315 + t194 + t1083) + t197 + t200 + t320 + Icges(3,2) + Icges(2,1) + t324 + Icges(1,3);
t1090 = t913 * t926;
t1091 = t12 * t925;
t1093 = t20 * t920;
t1098 = t20 * t926;
t1106 = t926 * t36;
t1107 = t925 * t20;
t1113 = t26 * t945;
t1114 = t920 * t939;
t1119 = t926 * t43;
t1121 = t972 + pkin(1);
t1133 = t74 + t1090;
t1141 = t34 * (t1004 * t921 * t327 + t928 * (t1091 * t1090 + 0.2e1 * t334 * t1093) + t26 * (t925 * t1098 + t922)) + t33 * (-t1004 * t1093 * t345 + t928 * (-t12 * t1107 * t1106 + 0.2e1 * t205 * t920 * t939 + t1113 - t1114) + t26 * (-t12 * t920 * t359 - t943 * t1119 + t1121 * t925)) - t928 * (t928 * (t26 * t921 + t925 * t371) * t12 + t12 * (-t938 * t1106 + t925 * t1133) + t920 * t384 * t383);
t1142 = t913 * t26;
t1144 = t1142 * t74 - t393;
t1153 = t404 * t1069;
t1157 = 0.1e1 / (t958 + t33 * (t928 * t1144 + t12 * (t36 * (-t926 * t913 * pkin(8) - t398) - t913 * t1098) - t1153) - t975);
t1158 = t1157 * t1141;
t1186 = t34 * (t99 - t445 - t982 + Icges(3,3) - Icges(3,1));
t1198 = pkin(1) * t928;
t1209 = m(3) * (t94 + t312 + t1082 + t193 + t1083);
t1210 = t1186 + t33 * (t14 * (-t449 * t1069 - 0.2e1 * t988 * t36) - 0.2e1 * (t1006 + t1069 * t100 / 0.2e1) * t18) + t259 + t14 * (t1198 * t100 + t128 + t262) + t928 * t464 + t36 * t926 * t985 * t276 - t470 * t926 * m(2) - t134 + t1209 + t475 + Icges(3,1) + Icges(2,3);
t1212 = t12 * (-0.2e1 * t34 * t994 * t928 + t33 * (-t99 * t36 * t928 + t14 * (t928 * t419 - t926 * t992) + t928 * (-t36 * t1029 - t223) + t926 * t1010) + 0.2e1 * t430 * t1106 + t14 * (t926 * t244 + t928 * t988) + t928 * (t1035 + t993 - t231 - t232 + Icges(2,6)) - t926 * t440) + t1210 * t26;
t1214 = t2 - pkin(3) + qJ(3,2);
t1215 = t2 + pkin(3) + qJ(3,2);
t1216 = t1215 * t1214;
t1217 = t485 + t489 + t1216;
t1221 = t98 * t920 * pkin(9);
t1227 = t512 * t917;
t1229 = -t914 * t913 * pkin(9) * t502 + t26 * t1227;
t1232 = t36 * t917;
t1235 = t913 * t520 * t1232 + t914 * t517;
t1240 = t914 * t913;
t1242 = t26 * t917;
t1244 = -t1240 * t528 + t533 * t1242;
t1249 = t913 * t18 * t1232 + t914 * t537;
t1257 = t98 * t925 * t484;
t1260 = t939 * t1242 + t914 * t550;
t1263 = t550 * t917;
t1264 = t1240 * t555 - t1263;
t1271 = 0.2e1 * qJ(3,2) * t2;
t1272 = t566 - t567 - t1271 + t193 + t481 - t1083;
t1277 = 0.2e1 * t550 * t939 * t1242 + t914 * t1272;
t1281 = t914 * t550 * t913 * t555;
t1282 = t1272 * t917;
t1289 = t1217 * t920;
t1290 = t26 * t926;
t1293 = t15 * t926;
t1294 = pkin(3) * t1293;
t1296 = t98 * t925 * pkin(9);
t1301 = t917 * t913;
t1303 = t600 * t1290 + t603;
t1305 = t914 * t926 * t512 + t1303 * t1301;
t1310 = t914 * t1303 * t913 - t926 * t1227;
t1319 = t619 * t1290 - t622;
t1321 = -t914 * t533 * pkin(3) * t926 - t1319 * t1301;
t1325 = t926 * t917;
t1327 = t914 * t1319 * t913 - t630 * t1325;
t1333 = t926 * t637 + t643;
t1337 = 0.2e1 * t972 + pkin(1);
t1341 = t926 * t550 * t651;
t1345 = t914 * pkin(3) * t1337 - 0.2e1 * (t1341 + t660) * t917;
t1352 = t914 * (0.2e1 * t1341 + t659) + pkin(3) * t1337 * t917;
t1360 = t926 * t1272 * t26 - t682;
t1362 = t914 * t1337 * t550 - t1360 * t917;
t1366 = t1337 * t1263 + t914 * t1360;
t1374 = -pkin(3) * t18 * t914 + t913 * t12 * t1325;
t1376 = t12 * t926;
t1378 = t18 * t917;
t1380 = pkin(3) * t1378 + t1240 * t1376;
t1391 = 0.2e1 * t913 * t19 * t12 * t1325;
t1397 = t914 * t913 * pkin(3) * t18 * t1376;
t1399 = t1215 * t1214 * t917;
t1408 = t926 * t484 * t639 - t732;
t1412 = t1069 + 0.2e1 * t939;
t1417 = t926 * t520 * t743;
t1421 = t914 * pkin(9) * t1412 * t15 + 0.2e1 * (t1417 - t746) * t917;
t1429 = t914 * (-0.2e1 * t1417 + t517) + pkin(9) * t1412 * t15 * t917;
t1444 = t926 * t12 * (t766 + 0.2e1 * t1 * qJ(3,2) * t767 + t36 * (-t483 + t1083) - t773) + t777;
t1446 = -t914 * pkin(3) * t1412 * t18 + t1444 * t917;
t1450 = pkin(3) * t1412 * t1378;
t1456 = t520 * t1376 + t790;
t1459 = t926 * t74;
t1460 = t1459 + t2 + qJ(3,2);
t1463 = t926 * t798 - t800;
t1465 = t914 * t1460 + t1463 * t917;
t1469 = t1460 * t917 - t914 * t1463;
t1473 = t1004 * (t34 * t925 * t1217 + t33 * (0.4e1 * t1221 * t497 + t14 * (0.2e1 * t918 * t1229 + 0.2e1 * t1235 * t915) - 0.2e1 * pkin(3) * (t918 * t1244 + t1249 * t915)) + t1257 + 0.2e1 * t14 * pkin(3) * (t918 * t1260 + t1264 * t915) + t918 * t1277 + 0.2e1 * (t1281 - t1282 / 0.2e1) * t915) + t928 * (-t34 * t1290 * t1289 + t33 * (0.4e1 * t1296 * t1294 + t14 * (0.2e1 * t918 * t1305 + 0.2e1 * t1310 * t915) + 0.2e1 * t918 * t1321 - 0.2e1 * t915 * t1327) - t98 * t920 * t1333 + t14 * (t918 * t1345 - t1352 * t915) + t918 * t1362 - t1366 * t915) + t34 * (-t1257 + 0.2e1 * t14 * (t918 * t1374 + t1380 * t915) * t520 + t918 * (t914 * (-t482 - t1271 + t483 - t1083) - t1391) - 0.2e1 * (t1397 - t1399 / 0.2e1) * t915) + t33 * (t98 * t1408 * t920 + t14 * (t918 * t1421 - t1429 * t915) + t918 * t1446 + (t914 * t1444 + t1450) * t915) + (-t14 * t920 * t1456 + t918 * t1465 - t1469 * t915) * t913;
t1474 = t12 * t1473;
t1475 = qJ(3,2) * t36;
t1479 = t913 * t825;
t1502 = t913 * t12 * t1121;
t1504 = 0.1e1 / (t928 * (t814 + t33 * (t1475 * t58 - t816 + t819 - t822) - t1479) + t34 * (t657 * t18 * t926 - t830 * t1293 + t954) * t12 + t33 * (t14 * (t926 * (-pkin(9) * qJ(3,2) * t840 - t839 - t843) - t847) + t926 * (pkin(3) * qJ(3,2) * t857 - t1475 * t392 - t853 - t856) + t862) - t1502);
t1514 = t12 * (-pkin(8) * t1106 + t33 * (t928 * t872 + pkin(1)) - t877 * t926) + (t1198 + t870 - t871 + pkin(2)) * t555;
t1516 = m(3) * t1514 * t1504;
t1518 = t1086 * t978 + t1212 * t1158 + t1516 * t1474;
t1526 = t1186 + 0.2e1 * t33 * t36 * (t1033 + t1036) + t259 + t264 - t134 + t1209 + Icges(3,1) + t475 + Icges(2,3);
t1530 = t899 * t1504 * t1474 + t1526 * t1158 + t1212 * t978;
t1533 = m(3) * t1514;
t1536 = m(3) * t1504;
t1538 = -t899 * t1158 - t1536 * t1474 - t1533 * t978;
t1540 = t1504 * t12;
t1542 = t2 + qJ(3,3);
t1543 = cos(qJ(1,3));
t1544 = sin(legFrame(3,3));
t1546 = sin(qJ(1,3));
t1547 = cos(legFrame(3,3));
t1549 = t1544 * t1543 + t1547 * t1546;
t1550 = t1549 * t1542;
t1551 = t12 * t1550;
t1554 = t1543 * t1547 - t1546 * t1544;
t1555 = sin(qJ(2,3));
t1557 = cos(qJ(2,3));
t1558 = t1557 * t26;
t1564 = t12 * t1549;
t1566 = t1549 * t43;
t1567 = t26 * t1566;
t1568 = t1542 * t36;
t1569 = t1554 * t1568;
t1572 = t26 * t1549;
t1574 = t1554 * t43;
t1579 = t34 * (-t1551 - (t1549 * t1558 + t1555 * t1554) * t20) + t33 * (t1564 * t37 + t1555 * (t1567 - t1569) - t1557 * (t1572 * t1568 + t1574)) + t1551;
t1580 = t1557 * t20;
t1583 = t1542 * pkin(1);
t1585 = t12 * (-t1555 * t61 + t1583);
t1587 = t34 * (t1580 * t58 + t1585);
t1590 = t1555 * t1542 * t71;
t1592 = t12 * (-t1557 * t68 - t1590 - t75);
t1594 = t1557 * t1568;
t1601 = t1555 * t1568;
t1604 = t1542 * t12 * (t1557 * t43 + pkin(1) + t1601);
t1606 = 0.1e1 / (t1587 + t33 * (t1592 + pkin(1) * t26 * (-t1555 * t43 + t1594)) - t1604);
t1607 = t1606 * t1579;
t1611 = (rSges(3,3) + qJ(3,3) + rSges(3,1)) * (rSges(3,3) + qJ(3,3) - rSges(3,1)) * m(3);
t1613 = t34 * (t99 + t105 - t1611 - Icges(3,1) + Icges(3,3));
t1614 = qJ(3,3) + rSges(3,3);
t1617 = m(3) * t1614 * rSges(3,2) - Icges(3,6);
t1621 = m(3) * t1614 * rSges(3,1) - Icges(3,5);
t1622 = t18 * t1621;
t1623 = t14 * t1617 + t1622;
t1626 = 0.2e1 * t33 * t36 * t1623;
t1630 = -t94 + (rSges(3,3) + qJ(3,3) + pkin(2)) * (rSges(3,3) + qJ(3,3) - pkin(2));
t1632 = m(3) * t1630 + Icges(2,1) - Icges(2,2) + Icges(3,2) - Icges(3,3) + t130 + t134 + t143 + t1613 - t1626 + t99;
t1633 = t1557 ^ 2;
t1635 = t1621 * t36;
t1637 = t18 * t1617;
t1638 = t1614 * t126;
t1639 = t1637 - t1638;
t1648 = t1614 * m(3);
t1652 = t1633 * t1632 + 0.2e1 * t1557 * (-t14 * t1635 + t36 * t1639 - Icges(2,4) + t157 + t165) * t1555 + t1613 + 0.2e1 * t33 * (-t14 * t1617 * t36 - pkin(8) * t1648 - t36 * t1622) + t181 + t188 - t192 - t134 + t196 - t197 - t200 + t203 - Icges(2,1) + Icges(3,1) - Icges(3,2) + Icges(2,3);
t1658 = -t1611 - Icges(3,1) + Icges(3,3);
t1662 = -t14 * t1617;
t1664 = t36 * t1614 * t216;
t1665 = -t18 * t1621;
t1680 = t34 * (t259 - t105 + t1611 + Icges(3,1) - Icges(3,3)) + t1626 + t259 + t264 - t134 - m(3) * t1630 + t266 - Icges(2,1) + Icges(2,2) - Icges(3,2) + Icges(3,3);
t1698 = t1555 * pkin(1);
t1711 = 0.2e1 * rSges(3,3) * qJ(3,3);
t1712 = qJ(3,3) ^ 2;
t1715 = t205 * t1652 - 0.2e1 * t26 * t12 * (t1557 * (t34 * (0.2e1 * t14 * t1617 + 0.2e1 * t1622) + t33 * (t36 * t1658 + t212 + t219 + t223) + t1662 - t1664 + t1665 + t231 + t232 - Icges(2,6)) - (t33 * (-t14 * t1621 + t1637 - t1638) - t239 + t245 + t247 + t248 - t249 - t250 - t252 + Icges(2,5)) * t1555) + t1633 * t1680 + t1557 * (0.2e1 * t33 * t271 * t1555 + 0.2e1 * t14 * (t1555 * t1635 + t277) + t1555 * (t36 * (-0.2e1 * t18 * t1617 + 0.2e1 * t1638) - t284 + t285) - t291) - 0.2e1 * t33 * m(3) * (t295 * t1555 * rSges(3,2) - t1614 * pkin(8) + t298 * t1698) + t99 + t306 - 0.2e1 * t1555 * pkin(1) * (-t36 * t1648 + t230) + t192 + m(3) * (t93 + t312 + t1711 + t315 + t194 + t1712) + t197 + t200 + t320 + Icges(3,2) + Icges(2,1) + t324 + Icges(1,3);
t1719 = t1542 * t1555;
t1720 = t12 * t1554;
t1722 = t20 * t1549;
t1727 = t20 * t1555;
t1735 = t1555 * t36;
t1736 = t1554 * t20;
t1742 = t26 * t1574;
t1743 = t1549 * t1568;
t1748 = t1555 * t43;
t1750 = t1601 + pkin(1);
t1762 = t74 + t1719;
t1770 = t34 * (t1633 * t1550 * t327 + t1557 * (t1720 * t1719 + 0.2e1 * t334 * t1722) + t26 * (t1554 * t1727 + t1551)) + t33 * (-t1633 * t1722 * t345 + t1557 * (-t12 * t1736 * t1735 + 0.2e1 * t205 * t1549 * t1568 + t1742 - t1743) + t26 * (-t12 * t1549 * t359 + t1750 * t1554 - t1572 * t1748)) - t1557 * (t1557 * (t26 * t1550 + t1554 * t371) * t12 + t12 * (t1554 * t1762 - t1567 * t1735) + t1549 * t384 * t383);
t1771 = t1542 * t26;
t1773 = t1771 * t74 - t393;
t1782 = t404 * t1698;
t1786 = 0.1e1 / (t1587 + t33 * (t1557 * t1773 + t12 * (t36 * (-t1555 * t1542 * pkin(8) - t398) - t1542 * t1727) - t1782) - t1604);
t1787 = t1786 * t1770;
t1815 = t34 * (t99 - t445 - t1611 + Icges(3,3) - Icges(3,1));
t1827 = pkin(1) * t1557;
t1838 = m(3) * (t94 + t312 + t1711 + t193 + t1712);
t1839 = t1815 + t33 * (t14 * (-0.2e1 * t1617 * t36 - t449 * t1698) - 0.2e1 * (t1635 + t1698 * t100 / 0.2e1) * t18) + t259 + t14 * (t1827 * t100 + t128 + t262) + t1557 * t464 + t36 * t1555 * t1614 * t276 - t470 * t1555 * m(2) - t134 + t1838 + t475 + Icges(3,1) + Icges(2,3);
t1841 = t12 * (-0.2e1 * t34 * t1623 * t1557 + t33 * (-t99 * t36 * t1557 + t14 * (-t1555 * t1621 + t1557 * t419) + t1557 * (-t36 * t1658 - t223) + t1555 * t1639) + 0.2e1 * t430 * t1735 + t14 * (t1555 * t244 + t1557 * t1617) + t1557 * (t1664 + t1622 - t231 - t232 + Icges(2,6)) - t1555 * t440) + t1839 * t26;
t1843 = t2 - pkin(3) + qJ(3,3);
t1844 = t2 + pkin(3) + qJ(3,3);
t1845 = t1844 * t1843;
t1846 = t485 + t489 + t1845;
t1850 = t98 * t1549 * pkin(9);
t1856 = t512 * t1546;
t1858 = -t1543 * t1542 * pkin(9) * t502 + t26 * t1856;
t1861 = t36 * t1546;
t1864 = t1542 * t520 * t1861 + t1543 * t517;
t1869 = t1543 * t1542;
t1871 = t26 * t1546;
t1873 = -t1869 * t528 + t533 * t1871;
t1878 = t1542 * t18 * t1861 + t1543 * t537;
t1886 = t98 * t1554 * t484;
t1889 = t1543 * t550 + t1568 * t1871;
t1892 = t550 * t1546;
t1893 = t1869 * t555 - t1892;
t1900 = 0.2e1 * qJ(3,3) * t2;
t1901 = t566 - t567 - t1900 + t193 + t481 - t1712;
t1906 = 0.2e1 * t550 * t1568 * t1871 + t1543 * t1901;
t1910 = t1543 * t550 * t1542 * t555;
t1911 = t1901 * t1546;
t1918 = t1846 * t1549;
t1919 = t26 * t1555;
t1922 = t15 * t1555;
t1923 = pkin(3) * t1922;
t1925 = t98 * t1554 * pkin(9);
t1930 = t1546 * t1542;
t1932 = t600 * t1919 + t603;
t1934 = t1543 * t1555 * t512 + t1932 * t1930;
t1939 = t1543 * t1932 * t1542 - t1555 * t1856;
t1948 = t619 * t1919 - t622;
t1950 = -t1543 * t533 * pkin(3) * t1555 - t1948 * t1930;
t1954 = t1555 * t1546;
t1956 = t1543 * t1948 * t1542 - t630 * t1954;
t1962 = t1555 * t637 + t643;
t1966 = 0.2e1 * t1601 + pkin(1);
t1970 = t1555 * t550 * t651;
t1974 = t1543 * pkin(3) * t1966 - 0.2e1 * (t1970 + t660) * t1546;
t1981 = t1543 * (0.2e1 * t1970 + t659) + pkin(3) * t1966 * t1546;
t1989 = t1555 * t1901 * t26 - t682;
t1991 = t1543 * t1966 * t550 - t1989 * t1546;
t1995 = t1543 * t1989 + t1966 * t1892;
t2003 = -pkin(3) * t18 * t1543 + t1542 * t12 * t1954;
t2005 = t12 * t1555;
t2007 = t18 * t1546;
t2009 = pkin(3) * t2007 + t1869 * t2005;
t2020 = 0.2e1 * t1542 * t19 * t12 * t1954;
t2026 = t1543 * t1542 * pkin(3) * t18 * t2005;
t2028 = t1844 * t1843 * t1546;
t2037 = t1555 * t484 * t639 - t732;
t2041 = t1698 + 0.2e1 * t1568;
t2046 = t1555 * t520 * t743;
t2050 = t1543 * pkin(9) * t2041 * t15 + 0.2e1 * (t2046 - t746) * t1546;
t2058 = t1543 * (-0.2e1 * t2046 + t517) + pkin(9) * t2041 * t15 * t1546;
t2073 = t1555 * t12 * (t766 + 0.2e1 * t1 * qJ(3,3) * t767 + t36 * (-t483 + t1712) - t773) + t777;
t2075 = -t1543 * pkin(3) * t2041 * t18 + t2073 * t1546;
t2079 = pkin(3) * t2041 * t2007;
t2085 = t520 * t2005 + t790;
t2088 = t1555 * t74;
t2089 = t2088 + t2 + qJ(3,3);
t2092 = t1555 * t798 - t800;
t2094 = t1543 * t2089 + t2092 * t1546;
t2098 = -t1543 * t2092 + t2089 * t1546;
t2102 = t1633 * (t34 * t1554 * t1846 + t33 * (0.4e1 * t1850 * t497 + t14 * (0.2e1 * t1864 * t1544 + 0.2e1 * t1547 * t1858) - 0.2e1 * pkin(3) * (t1878 * t1544 + t1547 * t1873)) + t1886 + 0.2e1 * t14 * pkin(3) * (t1893 * t1544 + t1547 * t1889) + t1547 * t1906 + 0.2e1 * (t1910 - t1911 / 0.2e1) * t1544) + t1557 * (-t34 * t1919 * t1918 + t33 * (0.4e1 * t1925 * t1923 + t14 * (0.2e1 * t1939 * t1544 + 0.2e1 * t1547 * t1934) + 0.2e1 * t1547 * t1950 - 0.2e1 * t1544 * t1956) - t98 * t1549 * t1962 + t14 * (-t1981 * t1544 + t1547 * t1974) + t1547 * t1991 - t1995 * t1544) + t34 * (-t1886 + 0.2e1 * t14 * (t2009 * t1544 + t1547 * t2003) * t520 + t1547 * (t1543 * (-t482 - t1900 + t483 - t1712) - t2020) - 0.2e1 * (t2026 - t2028 / 0.2e1) * t1544) + t33 * (t98 * t2037 * t1549 + t14 * (-t2058 * t1544 + t1547 * t2050) + t1547 * t2075 + (t1543 * t2073 + t2079) * t1544) + (-t14 * t1549 * t2085 - t2098 * t1544 + t1547 * t2094) * t1542;
t2103 = t12 * t2102;
t2104 = qJ(3,3) * t36;
t2108 = t1542 * t825;
t2131 = t1542 * t12 * t1750;
t2133 = 0.1e1 / (t1557 * (t814 + t33 * (t2104 * t58 - t816 + t819 - t822) - t2108) + t34 * (t657 * t18 * t1555 - t830 * t1922 + t1583) * t12 + t33 * (t14 * (t1555 * (-pkin(9) * qJ(3,3) * t840 - t839 - t843) - t847) + t1555 * (pkin(3) * qJ(3,3) * t857 - t2104 * t392 - t853 - t856) + t862) - t2131);
t2143 = t12 * (-pkin(8) * t1735 + t33 * (t1557 * t872 + pkin(1)) - t877 * t1555) + (t1827 + t870 - t871 + pkin(2)) * t555;
t2145 = m(3) * t2143 * t2133;
t2147 = t1715 * t1607 + t1841 * t1787 + t2145 * t2103;
t2155 = t1815 + 0.2e1 * t33 * t36 * (t1662 + t1665) + t259 + t264 - t134 + t1838 + Icges(3,1) + t475 + Icges(2,3);
t2159 = t899 * t2133 * t2103 + t1841 * t1607 + t2155 * t1787;
t2162 = m(3) * t2143;
t2165 = m(3) * t2133;
t2167 = -t2162 * t1607 - t899 * t1787 - t2165 * t2103;
t2169 = t2133 * t12;
t2171 = t2 + qJ(3,4);
t2172 = cos(qJ(1,4));
t2173 = sin(legFrame(4,3));
t2175 = sin(qJ(1,4));
t2176 = cos(legFrame(4,3));
t2178 = t2173 * t2172 + t2176 * t2175;
t2179 = t2178 * t2171;
t2180 = t12 * t2179;
t2183 = t2172 * t2176 - t2175 * t2173;
t2184 = sin(qJ(2,4));
t2186 = cos(qJ(2,4));
t2187 = t2186 * t26;
t2193 = t12 * t2178;
t2195 = t2178 * t43;
t2196 = t26 * t2195;
t2197 = t2171 * t36;
t2198 = t2183 * t2197;
t2201 = t26 * t2178;
t2203 = t2183 * t43;
t2208 = t34 * (-t2180 - (t2178 * t2187 + t2184 * t2183) * t20) + t33 * (t2193 * t37 + t2184 * (t2196 - t2198) - t2186 * (t2201 * t2197 + t2203)) + t2180;
t2209 = t2186 * t20;
t2212 = t2171 * pkin(1);
t2214 = t12 * (-t2184 * t61 + t2212);
t2216 = t34 * (t2209 * t58 + t2214);
t2219 = t2184 * t2171 * t71;
t2221 = t12 * (-t2186 * t68 - t2219 - t75);
t2223 = t2186 * t2197;
t2230 = t2184 * t2197;
t2233 = t2171 * t12 * (t2186 * t43 + pkin(1) + t2230);
t2235 = 0.1e1 / (t2216 + t33 * (t2221 + pkin(1) * t26 * (-t2184 * t43 + t2223)) - t2233);
t2236 = t2235 * t2208;
t2240 = (rSges(3,3) + qJ(3,4) + rSges(3,1)) * (rSges(3,3) + qJ(3,4) - rSges(3,1)) * m(3);
t2242 = t34 * (t99 + t105 - t2240 - Icges(3,1) + Icges(3,3));
t2243 = qJ(3,4) + rSges(3,3);
t2246 = m(3) * t2243 * rSges(3,2) - Icges(3,6);
t2250 = m(3) * t2243 * rSges(3,1) - Icges(3,5);
t2251 = t18 * t2250;
t2252 = t14 * t2246 + t2251;
t2255 = 0.2e1 * t33 * t36 * t2252;
t2259 = -t94 + (rSges(3,3) + qJ(3,4) + pkin(2)) * (rSges(3,3) + qJ(3,4) - pkin(2));
t2261 = m(3) * t2259 + Icges(2,1) - Icges(2,2) + Icges(3,2) - Icges(3,3) + t130 + t134 + t143 + t2242 - t2255 + t99;
t2262 = t2186 ^ 2;
t2264 = t2250 * t36;
t2266 = t18 * t2246;
t2267 = t2243 * t126;
t2268 = t2266 - t2267;
t2277 = t2243 * m(3);
t2281 = t2262 * t2261 + 0.2e1 * t2186 * (-t14 * t2264 + t36 * t2268 - Icges(2,4) + t157 + t165) * t2184 + t2242 + 0.2e1 * t33 * (-t14 * t2246 * t36 - pkin(8) * t2277 - t36 * t2251) + t181 + t188 - t192 - t134 + t196 - t197 - t200 + t203 - Icges(2,1) + Icges(3,1) - Icges(3,2) + Icges(2,3);
t2287 = -t2240 - Icges(3,1) + Icges(3,3);
t2291 = -t14 * t2246;
t2293 = t36 * t2243 * t216;
t2294 = -t18 * t2250;
t2309 = t34 * (t259 - t105 + t2240 + Icges(3,1) - Icges(3,3)) + t2255 + t259 + t264 - t134 - m(3) * t2259 + t266 - Icges(2,1) + Icges(2,2) - Icges(3,2) + Icges(3,3);
t2327 = t2184 * pkin(1);
t2340 = 0.2e1 * rSges(3,3) * qJ(3,4);
t2341 = qJ(3,4) ^ 2;
t2344 = t205 * t2281 - 0.2e1 * t26 * t12 * (t2186 * (t34 * (0.2e1 * t14 * t2246 + 0.2e1 * t2251) + t33 * (t36 * t2287 + t212 + t219 + t223) + t2291 - t2293 + t2294 + t231 + t232 - Icges(2,6)) - (t33 * (-t14 * t2250 + t2266 - t2267) - t239 + t245 + t247 + t248 - t249 - t250 - t252 + Icges(2,5)) * t2184) + t2262 * t2309 + t2186 * (0.2e1 * t33 * t271 * t2184 + 0.2e1 * t14 * (t2184 * t2264 + t277) + t2184 * (t36 * (-0.2e1 * t18 * t2246 + 0.2e1 * t2267) - t284 + t285) - t291) - 0.2e1 * t33 * m(3) * (t295 * t2184 * rSges(3,2) - t2243 * pkin(8) + t298 * t2327) + t99 + t306 - 0.2e1 * t2184 * pkin(1) * (-t36 * t2277 + t230) + t192 + m(3) * (t93 + t312 + t2340 + t315 + t194 + t2341) + t197 + t200 + t320 + Icges(3,2) + Icges(2,1) + t324 + Icges(1,3);
t2348 = t2171 * t2184;
t2349 = t12 * t2183;
t2351 = t20 * t2178;
t2356 = t20 * t2184;
t2364 = t2184 * t36;
t2365 = t2183 * t20;
t2371 = t26 * t2203;
t2372 = t2178 * t2197;
t2377 = t2184 * t43;
t2379 = t2230 + pkin(1);
t2391 = t74 + t2348;
t2399 = t34 * (t2262 * t2179 * t327 + t2186 * (t2349 * t2348 + 0.2e1 * t334 * t2351) + t26 * (t2183 * t2356 + t2180)) + t33 * (-t2262 * t2351 * t345 + t2186 * (-t12 * t2365 * t2364 + 0.2e1 * t205 * t2178 * t2197 + t2371 - t2372) + t26 * (-t12 * t2178 * t359 + t2379 * t2183 - t2201 * t2377)) - t2186 * (t2186 * (t26 * t2179 + t2183 * t371) * t12 + t12 * (t2183 * t2391 - t2196 * t2364) + t2178 * t384 * t383);
t2400 = t2171 * t26;
t2402 = t2400 * t74 - t393;
t2411 = t404 * t2327;
t2415 = 0.1e1 / (t2216 + t33 * (t2186 * t2402 + t12 * (t36 * (-t2184 * t2171 * pkin(8) - t398) - t2171 * t2356) - t2411) - t2233);
t2416 = t2415 * t2399;
t2444 = t34 * (t99 - t445 - t2240 + Icges(3,3) - Icges(3,1));
t2456 = pkin(1) * t2186;
t2467 = m(3) * (t94 + t312 + t2340 + t193 + t2341);
t2468 = t2444 + t33 * (t14 * (-0.2e1 * t2246 * t36 - t449 * t2327) - 0.2e1 * (t2264 + t2327 * t100 / 0.2e1) * t18) + t259 + t14 * (t2456 * t100 + t128 + t262) + t2186 * t464 + t36 * t2184 * t2243 * t276 - t470 * t2184 * m(2) - t134 + t2467 + t475 + Icges(3,1) + Icges(2,3);
t2470 = t12 * (-0.2e1 * t34 * t2252 * t2186 + t33 * (-t99 * t36 * t2186 + t14 * (-t2184 * t2250 + t2186 * t419) + t2186 * (-t36 * t2287 - t223) + t2184 * t2268) + 0.2e1 * t430 * t2364 + t14 * (t2184 * t244 + t2186 * t2246) + t2186 * (t2293 + t2251 - t231 - t232 + Icges(2,6)) - t2184 * t440) + t2468 * t26;
t2472 = t2 - pkin(3) + qJ(3,4);
t2473 = t2 + pkin(3) + qJ(3,4);
t2474 = t2473 * t2472;
t2475 = t485 + t489 + t2474;
t2479 = t98 * t2178 * pkin(9);
t2485 = t512 * t2175;
t2487 = -t2172 * t2171 * pkin(9) * t502 + t26 * t2485;
t2490 = t36 * t2175;
t2493 = t2171 * t520 * t2490 + t2172 * t517;
t2498 = t2172 * t2171;
t2500 = t26 * t2175;
t2502 = -t2498 * t528 + t533 * t2500;
t2507 = t2171 * t18 * t2490 + t2172 * t537;
t2515 = t98 * t2183 * t484;
t2518 = t2172 * t550 + t2197 * t2500;
t2521 = t550 * t2175;
t2522 = t2498 * t555 - t2521;
t2529 = 0.2e1 * qJ(3,4) * t2;
t2530 = t566 - t567 - t2529 + t193 + t481 - t2341;
t2535 = 0.2e1 * t550 * t2197 * t2500 + t2172 * t2530;
t2539 = t2172 * t550 * t2171 * t555;
t2540 = t2530 * t2175;
t2547 = t2475 * t2178;
t2548 = t26 * t2184;
t2551 = t15 * t2184;
t2552 = pkin(3) * t2551;
t2554 = t98 * t2183 * pkin(9);
t2559 = t2175 * t2171;
t2561 = t600 * t2548 + t603;
t2563 = t2172 * t2184 * t512 + t2561 * t2559;
t2568 = t2172 * t2561 * t2171 - t2184 * t2485;
t2577 = t619 * t2548 - t622;
t2579 = -t2172 * t533 * pkin(3) * t2184 - t2577 * t2559;
t2583 = t2184 * t2175;
t2585 = t2172 * t2577 * t2171 - t630 * t2583;
t2591 = t2184 * t637 + t643;
t2595 = 0.2e1 * t2230 + pkin(1);
t2599 = t2184 * t550 * t651;
t2603 = t2172 * pkin(3) * t2595 - 0.2e1 * (t2599 + t660) * t2175;
t2610 = t2172 * (0.2e1 * t2599 + t659) + pkin(3) * t2595 * t2175;
t2618 = t2184 * t2530 * t26 - t682;
t2620 = t2172 * t2595 * t550 - t2618 * t2175;
t2624 = t2172 * t2618 + t2595 * t2521;
t2632 = -pkin(3) * t18 * t2172 + t2171 * t12 * t2583;
t2634 = t12 * t2184;
t2636 = t18 * t2175;
t2638 = pkin(3) * t2636 + t2498 * t2634;
t2649 = 0.2e1 * t2171 * t19 * t12 * t2583;
t2655 = t2172 * t2171 * pkin(3) * t18 * t2634;
t2657 = t2473 * t2472 * t2175;
t2666 = t2184 * t484 * t639 - t732;
t2670 = t2327 + 0.2e1 * t2197;
t2675 = t2184 * t520 * t743;
t2679 = t2172 * pkin(9) * t2670 * t15 + 0.2e1 * (t2675 - t746) * t2175;
t2687 = t2172 * (-0.2e1 * t2675 + t517) + pkin(9) * t2670 * t15 * t2175;
t2702 = t2184 * t12 * (t766 + 0.2e1 * t1 * qJ(3,4) * t767 + t36 * (-t483 + t2341) - t773) + t777;
t2704 = -t2172 * pkin(3) * t2670 * t18 + t2702 * t2175;
t2708 = pkin(3) * t2670 * t2636;
t2714 = t520 * t2634 + t790;
t2717 = t2184 * t74;
t2718 = t2717 + t2 + qJ(3,4);
t2721 = t2184 * t798 - t800;
t2723 = t2172 * t2718 + t2721 * t2175;
t2727 = -t2172 * t2721 + t2718 * t2175;
t2731 = t2262 * (t34 * t2183 * t2475 + t33 * (0.4e1 * t2479 * t497 + t14 * (0.2e1 * t2493 * t2173 + 0.2e1 * t2176 * t2487) - 0.2e1 * pkin(3) * (t2507 * t2173 + t2176 * t2502)) + t2515 + 0.2e1 * t14 * pkin(3) * (t2522 * t2173 + t2176 * t2518) + t2176 * t2535 + 0.2e1 * (t2539 - t2540 / 0.2e1) * t2173) + t2186 * (-t34 * t2548 * t2547 + t33 * (0.4e1 * t2554 * t2552 + t14 * (0.2e1 * t2568 * t2173 + 0.2e1 * t2176 * t2563) + 0.2e1 * t2176 * t2579 - 0.2e1 * t2173 * t2585) - t98 * t2178 * t2591 + t14 * (-t2610 * t2173 + t2176 * t2603) + t2176 * t2620 - t2624 * t2173) + t34 * (-t2515 + 0.2e1 * t14 * (t2638 * t2173 + t2176 * t2632) * t520 + t2176 * (t2172 * (-t482 - t2529 + t483 - t2341) - t2649) - 0.2e1 * (t2655 - t2657 / 0.2e1) * t2173) + t33 * (t98 * t2666 * t2178 + t14 * (-t2687 * t2173 + t2176 * t2679) + t2176 * t2704 + (t2172 * t2702 + t2708) * t2173) + (-t14 * t2178 * t2714 - t2727 * t2173 + t2176 * t2723) * t2171;
t2732 = t12 * t2731;
t2733 = qJ(3,4) * t36;
t2737 = t2171 * t825;
t2760 = t2171 * t12 * t2379;
t2762 = 0.1e1 / (t2186 * (t814 + t33 * (t2733 * t58 - t816 + t819 - t822) - t2737) + t34 * (t657 * t18 * t2184 - t830 * t2551 + t2212) * t12 + t33 * (t14 * (t2184 * (-pkin(9) * qJ(3,4) * t840 - t839 - t843) - t847) + t2184 * (pkin(3) * qJ(3,4) * t857 - t2733 * t392 - t853 - t856) + t862) - t2760);
t2772 = t12 * (-pkin(8) * t2364 + t33 * (t2186 * t872 + pkin(1)) - t877 * t2184) + (t2456 + t870 - t871 + pkin(2)) * t555;
t2774 = m(3) * t2772 * t2762;
t2776 = t2344 * t2236 + t2470 * t2416 + t2774 * t2732;
t2784 = t2444 + 0.2e1 * t33 * t36 * (t2291 + t2294) + t259 + t264 - t134 + t2467 + Icges(3,1) + t475 + Icges(2,3);
t2788 = t899 * t2762 * t2732 + t2470 * t2236 + t2784 * t2416;
t2791 = m(3) * t2772;
t2794 = m(3) * t2762;
t2796 = -t2791 * t2236 - t899 * t2416 - t2794 * t2732;
t2798 = t2762 * t12;
t2800 = t2 + qJ(3,5);
t2801 = cos(qJ(1,5));
t2802 = sin(legFrame(5,3));
t2804 = sin(qJ(1,5));
t2805 = cos(legFrame(5,3));
t2807 = t2802 * t2801 + t2805 * t2804;
t2808 = t2807 * t2800;
t2809 = t12 * t2808;
t2812 = t2801 * t2805 - t2804 * t2802;
t2813 = sin(qJ(2,5));
t2815 = cos(qJ(2,5));
t2816 = t2815 * t26;
t2822 = t12 * t2807;
t2824 = t2807 * t43;
t2825 = t26 * t2824;
t2826 = t2800 * t36;
t2827 = t2812 * t2826;
t2830 = t26 * t2807;
t2832 = t2812 * t43;
t2837 = t34 * (-t2809 - (t2807 * t2816 + t2813 * t2812) * t20) + t33 * (t2822 * t37 + t2813 * (t2825 - t2827) - t2815 * (t2830 * t2826 + t2832)) + t2809;
t2838 = t2815 * t20;
t2841 = t2800 * pkin(1);
t2843 = t12 * (-t2813 * t61 + t2841);
t2845 = t34 * (t2838 * t58 + t2843);
t2848 = t2813 * t2800 * t71;
t2850 = t12 * (-t2815 * t68 - t2848 - t75);
t2852 = t2815 * t2826;
t2859 = t2813 * t2826;
t2862 = t2800 * t12 * (t2815 * t43 + pkin(1) + t2859);
t2864 = 0.1e1 / (t2845 + t33 * (t2850 + pkin(1) * t26 * (-t2813 * t43 + t2852)) - t2862);
t2865 = t2864 * t2837;
t2869 = (rSges(3,3) + qJ(3,5) + rSges(3,1)) * (rSges(3,3) + qJ(3,5) - rSges(3,1)) * m(3);
t2871 = t34 * (t99 + t105 - t2869 - Icges(3,1) + Icges(3,3));
t2872 = qJ(3,5) + rSges(3,3);
t2875 = m(3) * t2872 * rSges(3,2) - Icges(3,6);
t2879 = m(3) * t2872 * rSges(3,1) - Icges(3,5);
t2880 = t18 * t2879;
t2881 = t14 * t2875 + t2880;
t2884 = 0.2e1 * t33 * t36 * t2881;
t2888 = -t94 + (rSges(3,3) + qJ(3,5) + pkin(2)) * (rSges(3,3) + qJ(3,5) - pkin(2));
t2890 = m(3) * t2888 + Icges(2,1) - Icges(2,2) + Icges(3,2) - Icges(3,3) + t130 + t134 + t143 + t2871 - t2884 + t99;
t2891 = t2815 ^ 2;
t2893 = t2879 * t36;
t2895 = t18 * t2875;
t2896 = t2872 * t126;
t2897 = t2895 - t2896;
t2906 = t2872 * m(3);
t2910 = t2891 * t2890 + 0.2e1 * t2815 * (-t14 * t2893 + t36 * t2897 - Icges(2,4) + t157 + t165) * t2813 + t2871 + 0.2e1 * t33 * (-t14 * t2875 * t36 - pkin(8) * t2906 - t36 * t2880) + t181 + t188 - t192 - t134 + t196 - t197 - t200 + t203 - Icges(2,1) + Icges(3,1) - Icges(3,2) + Icges(2,3);
t2916 = -t2869 - Icges(3,1) + Icges(3,3);
t2920 = -t14 * t2875;
t2922 = t36 * t2872 * t216;
t2923 = -t18 * t2879;
t2938 = t34 * (t259 - t105 + t2869 + Icges(3,1) - Icges(3,3)) + t2884 + t259 + t264 - t134 - m(3) * t2888 + t266 - Icges(2,1) + Icges(2,2) - Icges(3,2) + Icges(3,3);
t2956 = t2813 * pkin(1);
t2969 = 0.2e1 * rSges(3,3) * qJ(3,5);
t2970 = qJ(3,5) ^ 2;
t2973 = t205 * t2910 - 0.2e1 * t26 * t12 * (t2815 * (t34 * (0.2e1 * t14 * t2875 + 0.2e1 * t2880) + t33 * (t36 * t2916 + t212 + t219 + t223) + t2920 - t2922 + t2923 + t231 + t232 - Icges(2,6)) - (t33 * (-t14 * t2879 + t2895 - t2896) - t239 + t245 + t247 + t248 - t249 - t250 - t252 + Icges(2,5)) * t2813) + t2891 * t2938 + t2815 * (0.2e1 * t33 * t271 * t2813 + 0.2e1 * t14 * (t2813 * t2893 + t277) + t2813 * (t36 * (-0.2e1 * t18 * t2875 + 0.2e1 * t2896) - t284 + t285) - t291) - 0.2e1 * t33 * m(3) * (t295 * t2813 * rSges(3,2) - t2872 * pkin(8) + t298 * t2956) + t99 + t306 - 0.2e1 * t2813 * pkin(1) * (-t36 * t2906 + t230) + t192 + m(3) * (t93 + t312 + t2969 + t315 + t194 + t2970) + t197 + t200 + t320 + Icges(3,2) + Icges(2,1) + t324 + Icges(1,3);
t2977 = t2800 * t2813;
t2978 = t12 * t2812;
t2980 = t20 * t2807;
t2985 = t20 * t2813;
t2993 = t2813 * t36;
t2994 = t2812 * t20;
t3000 = t26 * t2832;
t3001 = t2807 * t2826;
t3006 = t2813 * t43;
t3008 = t2859 + pkin(1);
t3020 = t74 + t2977;
t3028 = t34 * (t2891 * t2808 * t327 + t2815 * (t2978 * t2977 + 0.2e1 * t334 * t2980) + t26 * (t2812 * t2985 + t2809)) + t33 * (-t2891 * t2980 * t345 + t2815 * (-t12 * t2994 * t2993 + 0.2e1 * t205 * t2807 * t2826 + t3000 - t3001) + t26 * (-t12 * t2807 * t359 + t3008 * t2812 - t2830 * t3006)) - t2815 * (t2815 * (t26 * t2808 + t2812 * t371) * t12 + t12 * (t2812 * t3020 - t2825 * t2993) + t2807 * t384 * t383);
t3029 = t2800 * t26;
t3031 = t3029 * t74 - t393;
t3040 = t404 * t2956;
t3044 = 0.1e1 / (t2845 + t33 * (t2815 * t3031 + t12 * (t36 * (-t2813 * t2800 * pkin(8) - t398) - t2800 * t2985) - t3040) - t2862);
t3045 = t3044 * t3028;
t3073 = t34 * (t99 - t445 - t2869 + Icges(3,3) - Icges(3,1));
t3085 = pkin(1) * t2815;
t3096 = m(3) * (t94 + t312 + t2969 + t193 + t2970);
t3097 = t3073 + t33 * (t14 * (-0.2e1 * t2875 * t36 - t449 * t2956) - 0.2e1 * (t2893 + t2956 * t100 / 0.2e1) * t18) + t259 + t14 * (t3085 * t100 + t128 + t262) + t2815 * t464 + t36 * t2813 * t2872 * t276 - t470 * t2813 * m(2) - t134 + t3096 + t475 + Icges(3,1) + Icges(2,3);
t3099 = t12 * (-0.2e1 * t34 * t2881 * t2815 + t33 * (-t99 * t36 * t2815 + t14 * (-t2813 * t2879 + t2815 * t419) + t2815 * (-t36 * t2916 - t223) + t2813 * t2897) + 0.2e1 * t430 * t2993 + t14 * (t2813 * t244 + t2815 * t2875) + t2815 * (t2922 + t2880 - t231 - t232 + Icges(2,6)) - t2813 * t440) + t3097 * t26;
t3101 = t2 - pkin(3) + qJ(3,5);
t3102 = t2 + pkin(3) + qJ(3,5);
t3103 = t3102 * t3101;
t3104 = t485 + t489 + t3103;
t3108 = t98 * t2807 * pkin(9);
t3114 = t512 * t2804;
t3116 = -t2801 * t2800 * pkin(9) * t502 + t26 * t3114;
t3119 = t36 * t2804;
t3122 = t2800 * t520 * t3119 + t2801 * t517;
t3127 = t2801 * t2800;
t3129 = t26 * t2804;
t3131 = -t3127 * t528 + t533 * t3129;
t3136 = t2800 * t18 * t3119 + t2801 * t537;
t3144 = t98 * t2812 * t484;
t3147 = t2801 * t550 + t2826 * t3129;
t3150 = t550 * t2804;
t3151 = t3127 * t555 - t3150;
t3158 = 0.2e1 * qJ(3,5) * t2;
t3159 = t566 - t567 - t3158 + t193 + t481 - t2970;
t3164 = 0.2e1 * t550 * t2826 * t3129 + t2801 * t3159;
t3168 = t2801 * t550 * t2800 * t555;
t3169 = t3159 * t2804;
t3176 = t3104 * t2807;
t3177 = t26 * t2813;
t3180 = t15 * t2813;
t3181 = pkin(3) * t3180;
t3183 = t98 * t2812 * pkin(9);
t3188 = t2804 * t2800;
t3190 = t600 * t3177 + t603;
t3192 = t2801 * t2813 * t512 + t3190 * t3188;
t3197 = t2801 * t3190 * t2800 - t2813 * t3114;
t3206 = t619 * t3177 - t622;
t3208 = -t2801 * t533 * pkin(3) * t2813 - t3206 * t3188;
t3212 = t2813 * t2804;
t3214 = t2801 * t3206 * t2800 - t630 * t3212;
t3220 = t2813 * t637 + t643;
t3224 = 0.2e1 * t2859 + pkin(1);
t3228 = t2813 * t550 * t651;
t3232 = t2801 * pkin(3) * t3224 - 0.2e1 * (t3228 + t660) * t2804;
t3239 = t2801 * (0.2e1 * t3228 + t659) + pkin(3) * t3224 * t2804;
t3247 = t2813 * t3159 * t26 - t682;
t3249 = t2801 * t3224 * t550 - t3247 * t2804;
t3253 = t2801 * t3247 + t3224 * t3150;
t3261 = -pkin(3) * t18 * t2801 + t2800 * t12 * t3212;
t3263 = t12 * t2813;
t3265 = t18 * t2804;
t3267 = pkin(3) * t3265 + t3127 * t3263;
t3278 = 0.2e1 * t2800 * t19 * t12 * t3212;
t3284 = t2801 * t2800 * pkin(3) * t18 * t3263;
t3286 = t3102 * t3101 * t2804;
t3295 = t2813 * t484 * t639 - t732;
t3299 = t2956 + 0.2e1 * t2826;
t3304 = t2813 * t520 * t743;
t3308 = t2801 * pkin(9) * t3299 * t15 + 0.2e1 * (t3304 - t746) * t2804;
t3316 = t2801 * (-0.2e1 * t3304 + t517) + pkin(9) * t3299 * t15 * t2804;
t3331 = t2813 * t12 * (t766 + 0.2e1 * t1 * qJ(3,5) * t767 + t36 * (-t483 + t2970) - t773) + t777;
t3333 = -t2801 * pkin(3) * t3299 * t18 + t3331 * t2804;
t3337 = pkin(3) * t3299 * t3265;
t3343 = t520 * t3263 + t790;
t3346 = t2813 * t74;
t3347 = t3346 + t2 + qJ(3,5);
t3350 = t2813 * t798 - t800;
t3352 = t2801 * t3347 + t3350 * t2804;
t3356 = -t2801 * t3350 + t3347 * t2804;
t3360 = t2891 * (t34 * t2812 * t3104 + t33 * (0.4e1 * t3108 * t497 + t14 * (0.2e1 * t3122 * t2802 + 0.2e1 * t2805 * t3116) - 0.2e1 * pkin(3) * (t3136 * t2802 + t2805 * t3131)) + t3144 + 0.2e1 * t14 * pkin(3) * (t3151 * t2802 + t2805 * t3147) + t2805 * t3164 + 0.2e1 * (t3168 - t3169 / 0.2e1) * t2802) + t2815 * (-t34 * t3177 * t3176 + t33 * (0.4e1 * t3183 * t3181 + t14 * (0.2e1 * t3197 * t2802 + 0.2e1 * t2805 * t3192) + 0.2e1 * t2805 * t3208 - 0.2e1 * t2802 * t3214) - t98 * t2807 * t3220 + t14 * (-t3239 * t2802 + t2805 * t3232) + t2805 * t3249 - t3253 * t2802) + t34 * (-t3144 + 0.2e1 * t14 * (t3267 * t2802 + t2805 * t3261) * t520 + t2805 * (t2801 * (-t482 - t3158 + t483 - t2970) - t3278) - 0.2e1 * (t3284 - t3286 / 0.2e1) * t2802) + t33 * (t98 * t3295 * t2807 + t14 * (-t3316 * t2802 + t2805 * t3308) + t2805 * t3333 + (t2801 * t3331 + t3337) * t2802) + (-t14 * t2807 * t3343 - t3356 * t2802 + t2805 * t3352) * t2800;
t3361 = t12 * t3360;
t3362 = qJ(3,5) * t36;
t3366 = t2800 * t825;
t3389 = t2800 * t12 * t3008;
t3391 = 0.1e1 / (t2815 * (t814 + t33 * (t3362 * t58 - t816 + t819 - t822) - t3366) + t34 * (t657 * t18 * t2813 - t830 * t3180 + t2841) * t12 + t33 * (t14 * (t2813 * (-pkin(9) * qJ(3,5) * t840 - t839 - t843) - t847) + t2813 * (pkin(3) * qJ(3,5) * t857 - t3362 * t392 - t853 - t856) + t862) - t3389);
t3401 = t12 * (-pkin(8) * t2993 + t33 * (t2815 * t872 + pkin(1)) - t877 * t2813) + (t3085 + t870 - t871 + pkin(2)) * t555;
t3403 = m(3) * t3401 * t3391;
t3405 = t2973 * t2865 + t3099 * t3045 + t3403 * t3361;
t3413 = t3073 + 0.2e1 * t33 * t36 * (t2920 + t2923) + t259 + t264 - t134 + t3096 + Icges(3,1) + t475 + Icges(2,3);
t3417 = t899 * t3391 * t3361 + t3099 * t2865 + t3413 * t3045;
t3420 = m(3) * t3401;
t3423 = m(3) * t3391;
t3425 = -t3420 * t2865 - t899 * t3045 - t3423 * t3361;
t3427 = t3391 * t12;
t3429 = t2 + qJ(3,6);
t3430 = cos(qJ(1,6));
t3431 = sin(legFrame(6,3));
t3433 = sin(qJ(1,6));
t3434 = cos(legFrame(6,3));
t3436 = t3431 * t3430 + t3434 * t3433;
t3437 = t3436 * t3429;
t3438 = t12 * t3437;
t3441 = t3430 * t3434 - t3433 * t3431;
t3442 = sin(qJ(2,6));
t3444 = cos(qJ(2,6));
t3445 = t3444 * t26;
t3451 = t12 * t3436;
t3453 = t3436 * t43;
t3454 = t26 * t3453;
t3455 = t3429 * t36;
t3456 = t3441 * t3455;
t3459 = t26 * t3436;
t3461 = t3441 * t43;
t3466 = t34 * (-t3438 - (t3436 * t3445 + t3442 * t3441) * t20) + t33 * (t3451 * t37 + t3442 * (t3454 - t3456) - t3444 * (t3459 * t3455 + t3461)) + t3438;
t3467 = t3444 * t20;
t3470 = t3429 * pkin(1);
t3472 = t12 * (-t3442 * t61 + t3470);
t3474 = t34 * (t3467 * t58 + t3472);
t3477 = t3442 * t3429 * t71;
t3479 = t12 * (-t3444 * t68 - t3477 - t75);
t3481 = t3444 * t3455;
t3488 = t3442 * t3455;
t3491 = t3429 * t12 * (t3444 * t43 + pkin(1) + t3488);
t3493 = 0.1e1 / (t3474 + t33 * (t3479 + pkin(1) * t26 * (-t3442 * t43 + t3481)) - t3491);
t3494 = t3493 * t3466;
t3498 = (rSges(3,3) + qJ(3,6) + rSges(3,1)) * (rSges(3,3) + qJ(3,6) - rSges(3,1)) * m(3);
t3500 = t34 * (t99 + t105 - t3498 - Icges(3,1) + Icges(3,3));
t3501 = qJ(3,6) + rSges(3,3);
t3504 = m(3) * t3501 * rSges(3,2) - Icges(3,6);
t3508 = m(3) * t3501 * rSges(3,1) - Icges(3,5);
t3509 = t18 * t3508;
t3510 = t14 * t3504 + t3509;
t3513 = 0.2e1 * t33 * t36 * t3510;
t3517 = -t94 + (rSges(3,3) + qJ(3,6) + pkin(2)) * (rSges(3,3) + qJ(3,6) - pkin(2));
t3519 = m(3) * t3517 + Icges(2,1) - Icges(2,2) + Icges(3,2) - Icges(3,3) + t130 + t134 + t143 + t3500 - t3513 + t99;
t3520 = t3444 ^ 2;
t3522 = t3508 * t36;
t3524 = t18 * t3504;
t3525 = t3501 * t126;
t3526 = t3524 - t3525;
t3535 = t3501 * m(3);
t3539 = t3520 * t3519 + 0.2e1 * t3444 * (-t14 * t3522 + t36 * t3526 - Icges(2,4) + t157 + t165) * t3442 + t3500 + 0.2e1 * t33 * (-t14 * t3504 * t36 - pkin(8) * t3535 - t36 * t3509) + t181 + t188 - t192 - t134 + t196 - t197 - t200 + t203 - Icges(2,1) + Icges(3,1) - Icges(3,2) + Icges(2,3);
t3545 = -t3498 - Icges(3,1) + Icges(3,3);
t3549 = -t14 * t3504;
t3551 = t36 * t3501 * t216;
t3552 = -t18 * t3508;
t3567 = t34 * (t259 - t105 + t3498 + Icges(3,1) - Icges(3,3)) + t3513 + t259 + t264 - t134 - m(3) * t3517 + t266 - Icges(2,1) + Icges(2,2) - Icges(3,2) + Icges(3,3);
t3585 = t3442 * pkin(1);
t3598 = 0.2e1 * rSges(3,3) * qJ(3,6);
t3599 = qJ(3,6) ^ 2;
t3602 = t205 * t3539 - 0.2e1 * t26 * t12 * (t3444 * (t34 * (0.2e1 * t14 * t3504 + 0.2e1 * t3509) + t33 * (t36 * t3545 + t212 + t219 + t223) + t3549 - t3551 + t3552 + t231 + t232 - Icges(2,6)) - (t33 * (-t14 * t3508 + t3524 - t3525) - t239 + t245 + t247 + t248 - t249 - t250 - t252 + Icges(2,5)) * t3442) + t3520 * t3567 + t3444 * (0.2e1 * t33 * t271 * t3442 + 0.2e1 * t14 * (t3442 * t3522 + t277) + t3442 * (t36 * (-0.2e1 * t18 * t3504 + 0.2e1 * t3525) - t284 + t285) - t291) - 0.2e1 * t33 * m(3) * (t295 * t3442 * rSges(3,2) - t3501 * pkin(8) + t298 * t3585) + t99 + t306 - 0.2e1 * t3442 * pkin(1) * (-t36 * t3535 + t230) + t192 + m(3) * (t93 + t312 + t3598 + t315 + t194 + t3599) + t197 + t200 + t320 + Icges(3,2) + Icges(2,1) + t324 + Icges(1,3);
t3606 = t3429 * t3442;
t3607 = t12 * t3441;
t3609 = t20 * t3436;
t3614 = t20 * t3442;
t3622 = t3442 * t36;
t3623 = t3441 * t20;
t3629 = t26 * t3461;
t3630 = t3436 * t3455;
t3635 = t3442 * t43;
t3637 = t3488 + pkin(1);
t3649 = t74 + t3606;
t3657 = t34 * (t3520 * t3437 * t327 + t3444 * (0.2e1 * t334 * t3609 + t3607 * t3606) + t26 * (t3441 * t3614 + t3438)) + t33 * (-t3520 * t3609 * t345 + t3444 * (-t12 * t3623 * t3622 + 0.2e1 * t205 * t3436 * t3455 + t3629 - t3630) + t26 * (-t12 * t3436 * t359 + t3637 * t3441 - t3459 * t3635)) - t3444 * (t3444 * (t26 * t3437 + t3441 * t371) * t12 + t12 * (t3441 * t3649 - t3454 * t3622) + t3436 * t384 * t383);
t3658 = t3429 * t26;
t3660 = t3658 * t74 - t393;
t3669 = t404 * t3585;
t3673 = 0.1e1 / (t3474 + t33 * (t3444 * t3660 + t12 * (t36 * (-t3442 * t3429 * pkin(8) - t398) - t3429 * t3614) - t3669) - t3491);
t3674 = t3673 * t3657;
t3702 = t34 * (t99 - t445 - t3498 + Icges(3,3) - Icges(3,1));
t3714 = pkin(1) * t3444;
t3725 = m(3) * (t94 + t312 + t3598 + t193 + t3599);
t3726 = t3702 + t33 * (t14 * (-0.2e1 * t3504 * t36 - t449 * t3585) - 0.2e1 * (t3522 + t3585 * t100 / 0.2e1) * t18) + t259 + t14 * (t3714 * t100 + t128 + t262) + t3444 * t464 + t36 * t3442 * t3501 * t276 - t470 * t3442 * m(2) - t134 + t3725 + t475 + Icges(3,1) + Icges(2,3);
t3728 = t12 * (-0.2e1 * t34 * t3510 * t3444 + t33 * (-t99 * t36 * t3444 + t14 * (-t3442 * t3508 + t3444 * t419) + t3444 * (-t36 * t3545 - t223) + t3442 * t3526) + 0.2e1 * t430 * t3622 + t14 * (t3442 * t244 + t3444 * t3504) + t3444 * (t3551 + t3509 - t231 - t232 + Icges(2,6)) - t3442 * t440) + t3726 * t26;
t3730 = t2 - pkin(3) + qJ(3,6);
t3731 = t2 + pkin(3) + qJ(3,6);
t3732 = t3731 * t3730;
t3733 = t485 + t489 + t3732;
t3737 = t98 * t3436 * pkin(9);
t3743 = t512 * t3433;
t3745 = -t3430 * t3429 * pkin(9) * t502 + t26 * t3743;
t3748 = t36 * t3433;
t3751 = t3429 * t520 * t3748 + t3430 * t517;
t3756 = t3430 * t3429;
t3758 = t26 * t3433;
t3760 = -t3756 * t528 + t533 * t3758;
t3765 = t3429 * t18 * t3748 + t3430 * t537;
t3773 = t98 * t3441 * t484;
t3776 = t3430 * t550 + t3455 * t3758;
t3779 = t550 * t3433;
t3780 = t3756 * t555 - t3779;
t3787 = 0.2e1 * qJ(3,6) * t2;
t3788 = t566 - t567 - t3787 + t193 + t481 - t3599;
t3793 = 0.2e1 * t550 * t3455 * t3758 + t3430 * t3788;
t3797 = t3430 * t550 * t3429 * t555;
t3798 = t3788 * t3433;
t3805 = t3733 * t3436;
t3806 = t26 * t3442;
t3809 = t15 * t3442;
t3810 = pkin(3) * t3809;
t3812 = t98 * t3441 * pkin(9);
t3817 = t3433 * t3429;
t3819 = t600 * t3806 + t603;
t3821 = t3430 * t3442 * t512 + t3819 * t3817;
t3826 = t3430 * t3819 * t3429 - t3442 * t3743;
t3835 = t619 * t3806 - t622;
t3837 = -t3430 * t533 * pkin(3) * t3442 - t3835 * t3817;
t3841 = t3442 * t3433;
t3843 = t3430 * t3835 * t3429 - t630 * t3841;
t3849 = t3442 * t637 + t643;
t3853 = 0.2e1 * t3488 + pkin(1);
t3857 = t3442 * t550 * t651;
t3861 = t3430 * pkin(3) * t3853 - 0.2e1 * (t3857 + t660) * t3433;
t3868 = t3430 * (0.2e1 * t3857 + t659) + pkin(3) * t3853 * t3433;
t3876 = t3442 * t3788 * t26 - t682;
t3878 = t3430 * t3853 * t550 - t3876 * t3433;
t3882 = t3430 * t3876 + t3853 * t3779;
t3890 = -pkin(3) * t18 * t3430 + t3429 * t12 * t3841;
t3892 = t12 * t3442;
t3894 = t18 * t3433;
t3896 = pkin(3) * t3894 + t3756 * t3892;
t3907 = 0.2e1 * t3429 * t19 * t12 * t3841;
t3913 = t3430 * t3429 * pkin(3) * t18 * t3892;
t3915 = t3731 * t3730 * t3433;
t3924 = t3442 * t484 * t639 - t732;
t3928 = t3585 + 0.2e1 * t3455;
t3933 = t3442 * t520 * t743;
t3937 = t3430 * pkin(9) * t3928 * t15 + 0.2e1 * (t3933 - t746) * t3433;
t3945 = t3430 * (-0.2e1 * t3933 + t517) + pkin(9) * t3928 * t15 * t3433;
t3960 = t3442 * t12 * (t766 + 0.2e1 * t1 * qJ(3,6) * t767 + t36 * (-t483 + t3599) - t773) + t777;
t3962 = -t3430 * pkin(3) * t3928 * t18 + t3960 * t3433;
t3966 = pkin(3) * t3928 * t3894;
t3972 = t520 * t3892 + t790;
t3975 = t3442 * t74;
t3976 = t3975 + t2 + qJ(3,6);
t3979 = t3442 * t798 - t800;
t3981 = t3430 * t3976 + t3979 * t3433;
t3985 = -t3430 * t3979 + t3976 * t3433;
t3989 = t3520 * (t34 * t3441 * t3733 + t33 * (0.4e1 * t3737 * t497 + t14 * (0.2e1 * t3751 * t3431 + 0.2e1 * t3434 * t3745) - 0.2e1 * pkin(3) * (t3765 * t3431 + t3434 * t3760)) + t3773 + 0.2e1 * t14 * pkin(3) * (t3780 * t3431 + t3434 * t3776) + t3434 * t3793 + 0.2e1 * (t3797 - t3798 / 0.2e1) * t3431) + t3444 * (-t34 * t3806 * t3805 + t33 * (0.4e1 * t3812 * t3810 + t14 * (0.2e1 * t3826 * t3431 + 0.2e1 * t3434 * t3821) + 0.2e1 * t3434 * t3837 - 0.2e1 * t3431 * t3843) - t98 * t3436 * t3849 + t14 * (-t3868 * t3431 + t3434 * t3861) + t3434 * t3878 - t3882 * t3431) + t34 * (-t3773 + 0.2e1 * t14 * (t3896 * t3431 + t3434 * t3890) * t520 + t3434 * (t3430 * (-t482 - t3787 + t483 - t3599) - t3907) - 0.2e1 * (t3913 - t3915 / 0.2e1) * t3431) + t33 * (t98 * t3924 * t3436 + t14 * (-t3945 * t3431 + t3434 * t3937) + t3434 * t3962 + (t3430 * t3960 + t3966) * t3431) + (-t14 * t3436 * t3972 - t3985 * t3431 + t3434 * t3981) * t3429;
t3990 = t12 * t3989;
t3991 = qJ(3,6) * t36;
t3995 = t3429 * t825;
t4018 = t3429 * t12 * t3637;
t4020 = 0.1e1 / (t3444 * (t814 + t33 * (t3991 * t58 - t816 + t819 - t822) - t3995) + t34 * (t657 * t18 * t3442 - t830 * t3809 + t3470) * t12 + t33 * (t14 * (t3442 * (-pkin(9) * qJ(3,6) * t840 - t839 - t843) - t847) + t3442 * (pkin(3) * qJ(3,6) * t857 - t3991 * t392 - t853 - t856) + t862) - t4018);
t4030 = t12 * (-pkin(8) * t3622 + t33 * (t3444 * t872 + pkin(1)) - t877 * t3442) + (t3714 + t870 - t871 + pkin(2)) * t555;
t4032 = m(3) * t4030 * t4020;
t4034 = t3602 * t3494 + t3728 * t3674 + t4032 * t3990;
t4042 = t3702 + 0.2e1 * t33 * t36 * (t3549 + t3552) + t259 + t264 - t134 + t3725 + Icges(3,1) + t475 + Icges(2,3);
t4046 = t899 * t4020 * t3990 + t3728 * t3494 + t4042 * t3674;
t4049 = m(3) * t4030;
t4052 = m(3) * t4020;
t4054 = -t4049 * t3494 - t899 * t3674 - t4052 * t3990;
t4056 = t4020 * t12;
t4058 = t91 * t57 * t887 + t409 * t389 * t901 - t911 * t811 * t909 + t977 * t950 * t1518 + t1157 * t1141 * t1530 - t1540 * t1473 * t1538 + t1606 * t1579 * t2147 + t1786 * t1770 * t2159 - t2169 * t2102 * t2167 + t2235 * t2208 * t2776 + t2415 * t2399 * t2788 - t2798 * t2731 * t2796 + t2864 * t2837 * t3405 + t3044 * t3028 * t3417 - t3427 * t3360 * t3425 + t3493 * t3466 * t4034 + t3673 * t3657 * t4046 - t4056 * t3989 * t4054 + m(4);
t4059 = t23 * t3;
t4060 = t12 * t4059;
t4070 = t26 * t23;
t4076 = t34 * (t4060 + t20 * (-t24 * t10 + t23 * t28)) + t33 * (-t331 * t37 + t24 * (-t355 - t356) + t27 * (t4070 * t46 - t44)) - t4060;
t4082 = t334 * t20;
t4122 = t34 * (-t145 * t4059 * t327 + t27 * (-0.2e1 * t23 * t4082 + t38 * t330) + t26 * (t10 * t339 - t4060)) + t33 * (t145 * t349 * t345 + t27 * (-t12 * t333 * t348 - 0.2e1 * t205 * t23 * t46 + t45 + t47) + t26 * (t12 * t23 * t359 + t364 * t10 + t4070 * t362)) - t27 * (-t27 * (-t10 * t371 + t26 * t4059) * t12 + t12 * (t377 * t10 + t355 * t348) - t23 * t384 * t383);
t4142 = t98 * t10 * t484;
t4212 = t145 * (t34 * t587 + t33 * (-0.4e1 * t594 * t497 + t14 * (0.2e1 * t515 * t5 - 0.2e1 * t8 * t523) + 0.2e1 * pkin(3) * (-t535 * t5 + t8 * t541)) + t4142 - 0.2e1 * t14 * pkin(3) * (-t5 * t553 + t8 * t558) + t8 * (-0.2e1 * t579 + t580) + t575 * t5) + t27 * (t34 * t4070 * t24 * t493 + t33 * (0.4e1 * t499 * t592 + t14 * (0.2e1 * t606 * t5 - 0.2e1 * t8 * t611) + 0.2e1 * t8 * t632 + 0.2e1 * t625 * t5) + t98 * t23 * t644 + t14 * (t5 * t664 + t8 * t671) + t8 * t689 + t685 * t5) + t34 * (-t4142 - 0.2e1 * t14 * (-t697 * t5 + t8 * t703) * t520 + t8 * (0.2e1 * t720 - t722) - (t4 * t492 + t714) * t5) + t33 * (-t98 * t23 * t733 + t14 * (t750 * t5 + t8 * t758) + t8 * (-t4 * t778 - t784) + t5 * t780) + (t14 * t23 * t791 + t803 * t5 + t8 * t807) * t3;
t4213 = t868 * t4212;
t4215 = t925 * t913;
t4216 = t12 * t4215;
t4226 = t26 * t925;
t4232 = t34 * (t4216 + t20 * (-t926 * t920 + t925 * t929)) + t33 * (-t1091 * t37 + t926 * (-t1113 - t1114) + t928 * (t4226 * t939 - t937)) - t4216;
t4277 = t34 * (-t1004 * t4215 * t327 + t928 * (t935 * t1090 - 0.2e1 * t925 * t4082) + t26 * (t920 * t1098 - t4216)) + t33 * (t1004 * t1107 * t345 + t928 * (-t12 * t1093 * t1106 - 0.2e1 * t205 * t925 * t939 + t938 + t940) + t26 * (t12 * t925 * t359 + t4226 * t1119 + t1121 * t920)) - t928 * (-t928 * (t26 * t4215 - t920 * t371) * t12 + t12 * (t1113 * t1106 + t1133 * t920) - t925 * t384 * t383);
t4297 = t98 * t920 * t484;
t4367 = t1004 * (t34 * t1289 + t33 * (-0.4e1 * t1296 * t497 + t14 * (0.2e1 * t1229 * t915 - 0.2e1 * t918 * t1235) + 0.2e1 * pkin(3) * (-t1244 * t915 + t918 * t1249)) + t4297 - 0.2e1 * t14 * pkin(3) * (-t915 * t1260 + t918 * t1264) + t918 * (-0.2e1 * t1281 + t1282) + t1277 * t915) + t928 * (t34 * t4226 * t926 * t1217 + t33 * (0.4e1 * t1221 * t1294 + t14 * (0.2e1 * t1305 * t915 - 0.2e1 * t918 * t1310) + 0.2e1 * t918 * t1327 + 0.2e1 * t1321 * t915) + t98 * t925 * t1333 + t14 * (t915 * t1345 + t918 * t1352) + t918 * t1366 + t1362 * t915) + t34 * (-t4297 - 0.2e1 * t14 * (-t1374 * t915 + t918 * t1380) * t520 + t918 * (0.2e1 * t1397 - t1399) - (t914 * t1216 + t1391) * t915) + t33 * (-t98 * t925 * t1408 + t14 * (t1421 * t915 + t918 * t1429) + t918 * (-t914 * t1444 - t1450) + t915 * t1446) + (t14 * t925 * t1456 + t1465 * t915 + t918 * t1469) * t913;
t4368 = t1504 * t4367;
t4370 = t1554 * t1542;
t4371 = t12 * t4370;
t4381 = t26 * t1554;
t4387 = t34 * (t4371 + t20 * (-t1555 * t1549 + t1554 * t1558)) + t33 * (-t1720 * t37 + t1555 * (-t1742 - t1743) + t1557 * (t4381 * t1568 - t1566)) - t4371;
t4432 = t34 * (-t1633 * t4370 * t327 + t1557 * (-0.2e1 * t1554 * t4082 + t1564 * t1719) + t26 * (t1549 * t1727 - t4371)) + t33 * (t1633 * t1736 * t345 + t1557 * (-t12 * t1722 * t1735 - 0.2e1 * t205 * t1554 * t1568 + t1567 + t1569) + t26 * (t12 * t1554 * t359 + t1750 * t1549 + t4381 * t1748)) - t1557 * (-t1557 * (-t1549 * t371 + t26 * t4370) * t12 + t12 * (t1762 * t1549 + t1742 * t1735) - t1554 * t384 * t383);
t4452 = t98 * t1549 * t484;
t4522 = t1633 * (t34 * t1918 + t33 * (-0.4e1 * t1925 * t497 + t14 * (0.2e1 * t1858 * t1544 - 0.2e1 * t1547 * t1864) + 0.2e1 * pkin(3) * (-t1873 * t1544 + t1547 * t1878)) + t4452 - 0.2e1 * t14 * pkin(3) * (-t1544 * t1889 + t1547 * t1893) + t1547 * (-0.2e1 * t1910 + t1911) + t1906 * t1544) + t1557 * (t34 * t4381 * t1555 * t1846 + t33 * (0.4e1 * t1850 * t1923 + t14 * (0.2e1 * t1934 * t1544 - 0.2e1 * t1547 * t1939) + 0.2e1 * t1547 * t1956 + 0.2e1 * t1950 * t1544) + t98 * t1554 * t1962 + t14 * (t1544 * t1974 + t1547 * t1981) + t1547 * t1995 + t1991 * t1544) + t34 * (-t4452 - 0.2e1 * t14 * (-t2003 * t1544 + t1547 * t2009) * t520 + t1547 * (0.2e1 * t2026 - t2028) - (t1543 * t1845 + t2020) * t1544) + t33 * (-t98 * t1554 * t2037 + t14 * (t2050 * t1544 + t1547 * t2058) + t1547 * (-t1543 * t2073 - t2079) + t1544 * t2075) + (t14 * t1554 * t2085 + t2094 * t1544 + t1547 * t2098) * t1542;
t4523 = t2133 * t4522;
t4525 = t2183 * t2171;
t4526 = t12 * t4525;
t4536 = t26 * t2183;
t4542 = t34 * (t4526 + t20 * (-t2184 * t2178 + t2183 * t2187)) + t33 * (-t2349 * t37 + t2184 * (-t2371 - t2372) + t2186 * (t4536 * t2197 - t2195)) - t4526;
t4587 = t34 * (-t2262 * t4525 * t327 + t2186 * (-0.2e1 * t2183 * t4082 + t2193 * t2348) + t26 * (t2178 * t2356 - t4526)) + t33 * (t2262 * t2365 * t345 + t2186 * (-t12 * t2351 * t2364 - 0.2e1 * t205 * t2183 * t2197 + t2196 + t2198) + t26 * (t12 * t2183 * t359 + t2379 * t2178 + t4536 * t2377)) - t2186 * (-t2186 * (-t2178 * t371 + t26 * t4525) * t12 + t12 * (t2391 * t2178 + t2371 * t2364) - t2183 * t384 * t383);
t4607 = t98 * t2178 * t484;
t4677 = t2262 * (t34 * t2547 + t33 * (-0.4e1 * t2554 * t497 + t14 * (0.2e1 * t2487 * t2173 - 0.2e1 * t2176 * t2493) + 0.2e1 * pkin(3) * (-t2502 * t2173 + t2176 * t2507)) + t4607 - 0.2e1 * t14 * pkin(3) * (-t2173 * t2518 + t2176 * t2522) + t2176 * (-0.2e1 * t2539 + t2540) + t2535 * t2173) + t2186 * (t34 * t4536 * t2184 * t2475 + t33 * (0.4e1 * t2479 * t2552 + t14 * (0.2e1 * t2563 * t2173 - 0.2e1 * t2176 * t2568) + 0.2e1 * t2176 * t2585 + 0.2e1 * t2579 * t2173) + t98 * t2183 * t2591 + t14 * (t2173 * t2603 + t2176 * t2610) + t2176 * t2624 + t2620 * t2173) + t34 * (-t4607 - 0.2e1 * t14 * (-t2632 * t2173 + t2176 * t2638) * t520 + t2176 * (0.2e1 * t2655 - t2657) - (t2172 * t2474 + t2649) * t2173) + t33 * (-t98 * t2183 * t2666 + t14 * (t2679 * t2173 + t2176 * t2687) + t2176 * (-t2172 * t2702 - t2708) + t2173 * t2704) + (t14 * t2183 * t2714 + t2723 * t2173 + t2176 * t2727) * t2171;
t4678 = t2762 * t4677;
t4680 = t2812 * t2800;
t4681 = t12 * t4680;
t4691 = t26 * t2812;
t4697 = t34 * (t4681 + t20 * (-t2813 * t2807 + t2812 * t2816)) + t33 * (-t2978 * t37 + t2813 * (-t3000 - t3001) + t2815 * (t4691 * t2826 - t2824)) - t4681;
t4742 = t34 * (-t2891 * t4680 * t327 + t2815 * (-0.2e1 * t2812 * t4082 + t2822 * t2977) + t26 * (t2807 * t2985 - t4681)) + t33 * (t2891 * t2994 * t345 + t2815 * (-t12 * t2980 * t2993 - 0.2e1 * t205 * t2812 * t2826 + t2825 + t2827) + t26 * (t12 * t2812 * t359 + t3008 * t2807 + t4691 * t3006)) - t2815 * (-t2815 * (t26 * t4680 - t2807 * t371) * t12 + t12 * (t3020 * t2807 + t3000 * t2993) - t2812 * t384 * t383);
t4762 = t98 * t2807 * t484;
t4832 = t2891 * (t34 * t3176 + t33 * (-0.4e1 * t3183 * t497 + t14 * (0.2e1 * t3116 * t2802 - 0.2e1 * t2805 * t3122) + 0.2e1 * pkin(3) * (-t3131 * t2802 + t2805 * t3136)) + t4762 - 0.2e1 * t14 * pkin(3) * (-t2802 * t3147 + t2805 * t3151) + t2805 * (-0.2e1 * t3168 + t3169) + t3164 * t2802) + t2815 * (t34 * t4691 * t2813 * t3104 + t33 * (0.4e1 * t3108 * t3181 + t14 * (0.2e1 * t3192 * t2802 - 0.2e1 * t2805 * t3197) + 0.2e1 * t2805 * t3214 + 0.2e1 * t3208 * t2802) + t98 * t2812 * t3220 + t14 * (t2802 * t3232 + t2805 * t3239) + t2805 * t3253 + t3249 * t2802) + t34 * (-t4762 - 0.2e1 * t14 * (-t3261 * t2802 + t2805 * t3267) * t520 + t2805 * (0.2e1 * t3284 - t3286) - (t2801 * t3103 + t3278) * t2802) + t33 * (-t98 * t2812 * t3295 + t14 * (t3308 * t2802 + t2805 * t3316) + t2805 * (-t2801 * t3331 - t3337) + t2802 * t3333) + (t14 * t2812 * t3343 + t3352 * t2802 + t2805 * t3356) * t2800;
t4833 = t3391 * t4832;
t4835 = t3441 * t3429;
t4836 = t12 * t4835;
t4846 = t26 * t3441;
t4852 = t34 * (t4836 + t20 * (-t3442 * t3436 + t3441 * t3445)) + t33 * (-t3607 * t37 + t3442 * (-t3629 - t3630) + t3444 * (t4846 * t3455 - t3453)) - t4836;
t4897 = t34 * (-t3520 * t4835 * t327 + t3444 * (-0.2e1 * t3441 * t4082 + t3451 * t3606) + t26 * (t3436 * t3614 - t4836)) + t33 * (t3520 * t3623 * t345 + t3444 * (-t12 * t3609 * t3622 - 0.2e1 * t205 * t3441 * t3455 + t3454 + t3456) + t26 * (t12 * t3441 * t359 + t3637 * t3436 + t4846 * t3635)) - t3444 * (-t3444 * (t26 * t4835 - t3436 * t371) * t12 + t12 * (t3649 * t3436 + t3629 * t3622) - t3441 * t384 * t383);
t4917 = t98 * t3436 * t484;
t4987 = t3520 * (t34 * t3805 + t33 * (-0.4e1 * t3812 * t497 + t14 * (0.2e1 * t3745 * t3431 - 0.2e1 * t3434 * t3751) + 0.2e1 * pkin(3) * (-t3760 * t3431 + t3434 * t3765)) + t4917 - 0.2e1 * t14 * pkin(3) * (-t3431 * t3776 + t3434 * t3780) + t3434 * (-0.2e1 * t3797 + t3798) + t3793 * t3431) + t3444 * (t34 * t4846 * t3442 * t3733 + t33 * (0.4e1 * t3737 * t3810 + t14 * (0.2e1 * t3821 * t3431 - 0.2e1 * t3434 * t3826) + 0.2e1 * t3434 * t3843 + 0.2e1 * t3837 * t3431) + t98 * t3441 * t3849 + t14 * (t3431 * t3861 + t3434 * t3868) + t3434 * t3882 + t3878 * t3431) + t34 * (-t4917 - 0.2e1 * t14 * (-t3890 * t3431 + t3434 * t3896) * t520 + t3434 * (0.2e1 * t3913 - t3915) - (t3430 * t3732 + t3907) * t3431) + t33 * (-t98 * t3441 * t3924 + t14 * (t3937 * t3431 + t3434 * t3945) + t3434 * (-t3430 * t3960 - t3966) + t3431 * t3962) + (t14 * t3441 * t3972 + t3981 * t3431 + t3434 * t3985) * t3429;
t4988 = t4020 * t4987;
t4990 = t91 * t4076 * t887 + t409 * t4122 * t901 - t4213 * t12 * t909 + t977 * t4232 * t1518 + t1157 * t4277 * t1530 - t4368 * t12 * t1538 + t1606 * t4387 * t2147 + t1786 * t4432 * t2159 - t4523 * t12 * t2167 + t2235 * t4542 * t2776 + t2415 * t4587 * t2788 - t4678 * t12 * t2796 + t2864 * t4697 * t3405 + t3044 * t4742 * t3417 - t4833 * t12 * t3425 + t3493 * t4852 * t4034 + t3673 * t4897 * t4046 - t4988 * t12 * t4054;
t4994 = t79 - t362;
t4996 = t20 * t555;
t4999 = t34 * (t12 * t59 - t390) + t33 * (t12 * t4994 + t4996) + t390;
t5006 = 0.1e1 / (t67 + t33 * (pkin(1) * t26 * t4994 + t77) - t89);
t5009 = t145 * t3 * t383;
t5012 = t3 * t205;
t5015 = t381 * t36;
t5016 = t20 * t382;
t5024 = t205 * (-t36 * t20 + pkin(8));
t5028 = t12 * t384 * t26;
t5029 = t43 * t383;
t5033 = t34 * (-0.2e1 * t59 * t327 + t5009 + t5012) + t33 * (-t145 * t5016 * t5015 - 0.2e1 * t79 * t327 + t825 * t588 - pkin(8) + t5024) - t5009 + t27 * (t5029 * t348 + t5028) - t794 - t2 - qJ(3,1);
t5038 = 0.2e1 * t98 * pkin(9) * t640;
t5040 = t18 * t484 - t511;
t5041 = t14 * t5040;
t5043 = t33 * (-t5038 + t5041 + t630);
t5054 = t3 * t20;
t5064 = 0.2e1 * t14 * t550 * pkin(3);
t5076 = t26 * t12 * (-0.2e1 * t98 * t486 * t502 + t14 * (t36 * t5040 + t657) + t679 + t680);
t5077 = -t98 * t484;
t5091 = t205 * (t5038 + t14 * (-t18 * t484 + t511) - t630);
t5093 = t98 * t484 * t36;
t5096 = 0.2e1 * t16 * pkin(9) * t742;
t5109 = 0.2e1 * t145 * t381 * (-t3 * t371 + t5043) * t382 + t27 * (t34 * t381 * t24 * t382 * t493 + t33 * (-0.2e1 * t205 * t5054 * t348 + t648 * t20 - t390 * t825) + t205 * t24 * (t485 + t5064 - t567 + t566 - t569 + t193 + t481 - t316) - t5076 + t24 * (t5077 - t5064 + t567 - t566 + t569 - t193 - t481 + t316) + t3 * t74) - 0.2e1 * t34 * t5054 * t12 * t588 + t33 * (t5091 - t327 * (t36 * t492 + t5093 + t5096 - t773) * t24 - t5038 + t5041 + t630) + t5012 * t371 + t26 * t3 * t384 * t699 - (t297 + t46) * t43;
t5120 = 0.1e1 / (t27 * (t33 * t394 + t814 - t826) + t34 * t65 + t33 * (-t405 - t12 * (t73 + t75)) - t866);
t5125 = t965 - t1119;
t5129 = t34 * (t12 * t951 - t1142) + t33 * (t12 * t5125 + t4996) + t1142;
t5136 = 0.1e1 / (t958 + t33 * (pkin(1) * t26 * t5125 + t963) - t975);
t5139 = t1004 * t913 * t383;
t5142 = t913 * t205;
t5155 = t34 * (-0.2e1 * t951 * t327 + t5139 + t5142) + t33 * (-t1004 * t5016 * t5015 + t825 * t1290 - 0.2e1 * t965 * t327 - pkin(8) + t5024) - t5139 + t928 * (t5029 * t1106 + t5028) - t1459 - t2 - qJ(3,2);
t5168 = t913 * t20;
t5200 = 0.2e1 * t1004 * t381 * (-t913 * t371 + t5043) * t382 + t928 * (t34 * t381 * t926 * t382 * t1217 + t33 * (-0.2e1 * t205 * t5168 * t1106 - t1142 * t825 + t1337 * t20) + t205 * t926 * (t485 + t5064 - t567 + t566 - t1271 + t193 + t481 - t1083) - t5076 + t926 * (t5077 - t5064 + t567 - t566 + t1271 - t193 - t481 + t1083) + t913 * t74) - 0.2e1 * t34 * t5168 * t12 * t1290 + t33 * (t5091 - t327 * (t36 * t1216 + t5093 + t5096 - t773) * t926 - t5038 + t5041 + t630) + t5142 * t371 + t26 * t913 * t384 * t1376 - (t1069 + t939) * t43;
t5211 = 0.1e1 / (t928 * (t33 * t1144 - t1479 + t814) + t34 * t956 + t33 * (-t1153 - t12 * (t961 + t75)) - t1502);
t5216 = t1594 - t1748;
t5220 = t34 * (t12 * t1580 - t1771) + t33 * (t12 * t5216 + t4996) + t1771;
t5227 = 0.1e1 / (t1587 + t33 * (pkin(1) * t26 * t5216 + t1592) - t1604);
t5230 = t1633 * t1542 * t383;
t5233 = t1542 * t205;
t5246 = t34 * (-0.2e1 * t1580 * t327 + t5230 + t5233) + t33 * (-t1633 * t5016 * t5015 - 0.2e1 * t1594 * t327 + t825 * t1919 - pkin(8) + t5024) - t5230 + t1557 * (t5029 * t1735 + t5028) - t2088 - t2 - qJ(3,3);
t5259 = t1542 * t20;
t5291 = 0.2e1 * t1633 * t381 * (-t1542 * t371 + t5043) * t382 + t1557 * (t34 * t381 * t1555 * t382 * t1846 + t33 * (-0.2e1 * t205 * t5259 * t1735 - t1771 * t825 + t1966 * t20) + t205 * t1555 * (t485 + t5064 - t567 + t566 - t1900 + t193 + t481 - t1712) - t5076 + t1555 * (t5077 - t5064 + t567 - t566 + t1900 - t193 - t481 + t1712) + t1542 * t74) - 0.2e1 * t34 * t5259 * t12 * t1919 + t33 * (t5091 - t327 * (t36 * t1845 + t5093 + t5096 - t773) * t1555 - t5038 + t5041 + t630) + t5233 * t371 + t26 * t1542 * t384 * t2005 - (t1698 + t1568) * t43;
t5302 = 0.1e1 / (t1557 * (t33 * t1773 - t2108 + t814) + t34 * t1585 + t33 * (-t1782 - t12 * (t1590 + t75)) - t2131);
t5307 = t2223 - t2377;
t5311 = t34 * (t12 * t2209 - t2400) + t33 * (t12 * t5307 + t4996) + t2400;
t5318 = 0.1e1 / (t2216 + t33 * (pkin(1) * t26 * t5307 + t2221) - t2233);
t5321 = t2262 * t2171 * t383;
t5324 = t2171 * t205;
t5337 = t34 * (-0.2e1 * t2209 * t327 + t5321 + t5324) + t33 * (-t2262 * t5016 * t5015 - 0.2e1 * t2223 * t327 + t825 * t2548 - pkin(8) + t5024) - t5321 + t2186 * (t5029 * t2364 + t5028) - t2717 - t2 - qJ(3,4);
t5350 = t2171 * t20;
t5382 = 0.2e1 * t2262 * t381 * (-t2171 * t371 + t5043) * t382 + t2186 * (t34 * t381 * t2184 * t382 * t2475 + t33 * (-0.2e1 * t205 * t5350 * t2364 + t2595 * t20 - t2400 * t825) + t205 * t2184 * (t485 + t5064 - t567 + t566 - t2529 + t193 + t481 - t2341) - t5076 + t2184 * (t5077 - t5064 + t567 - t566 + t2529 - t193 - t481 + t2341) + t2171 * t74) - 0.2e1 * t34 * t5350 * t12 * t2548 + t33 * (t5091 - t327 * (t36 * t2474 + t5093 + t5096 - t773) * t2184 - t5038 + t5041 + t630) + t5324 * t371 + t26 * t2171 * t384 * t2634 - (t2327 + t2197) * t43;
t5393 = 0.1e1 / (t2186 * (t33 * t2402 - t2737 + t814) + t34 * t2214 + t33 * (-t2411 - t12 * (t2219 + t75)) - t2760);
t5398 = t2852 - t3006;
t5402 = t34 * (t12 * t2838 - t3029) + t33 * (t12 * t5398 + t4996) + t3029;
t5409 = 0.1e1 / (t2845 + t33 * (pkin(1) * t26 * t5398 + t2850) - t2862);
t5412 = t2891 * t2800 * t383;
t5415 = t2800 * t205;
t5428 = t34 * (-0.2e1 * t2838 * t327 + t5412 + t5415) + t33 * (-t2891 * t5016 * t5015 - 0.2e1 * t2852 * t327 + t825 * t3177 - pkin(8) + t5024) - t5412 + t2815 * (t5029 * t2993 + t5028) - t3346 - t2 - qJ(3,5);
t5441 = t2800 * t20;
t5473 = 0.2e1 * t2891 * t381 * (-t2800 * t371 + t5043) * t382 + t2815 * (t34 * t381 * t2813 * t382 * t3104 + t33 * (-0.2e1 * t205 * t5441 * t2993 + t3224 * t20 - t3029 * t825) + t205 * t2813 * (t485 + t5064 - t567 + t566 - t3158 + t193 + t481 - t2970) - t5076 + t2813 * (t5077 - t5064 + t567 - t566 + t3158 - t193 - t481 + t2970) + t2800 * t74) - 0.2e1 * t34 * t5441 * t12 * t3177 + t33 * (t5091 - t327 * (t36 * t3103 + t5093 + t5096 - t773) * t2813 - t5038 + t5041 + t630) + t5415 * t371 + t26 * t2800 * t384 * t3263 - (t2956 + t2826) * t43;
t5484 = 0.1e1 / (t2815 * (t33 * t3031 - t3366 + t814) + t34 * t2843 + t33 * (-t3040 - t12 * (t2848 + t75)) - t3389);
t5489 = t3481 - t3635;
t5493 = t34 * (t12 * t3467 - t3658) + t33 * (t12 * t5489 + t4996) + t3658;
t5500 = 0.1e1 / (t3474 + t33 * (pkin(1) * t26 * t5489 + t3479) - t3491);
t5503 = t3520 * t3429 * t383;
t5506 = t3429 * t205;
t5519 = t34 * (-0.2e1 * t3467 * t327 + t5503 + t5506) + t33 * (-t3520 * t5016 * t5015 - 0.2e1 * t3481 * t327 + t825 * t3806 - pkin(8) + t5024) - t5503 + t3444 * (t5029 * t3622 + t5028) - t3975 - t2 - qJ(3,6);
t5532 = t3429 * t20;
t5564 = 0.2e1 * t3520 * t381 * (-t3429 * t371 + t5043) * t382 + t3444 * (t34 * t381 * t3442 * t382 * t3733 + t33 * (-0.2e1 * t205 * t5532 * t3622 + t3853 * t20 - t3658 * t825) + t205 * t3442 * (t485 + t5064 - t567 + t566 - t3787 + t193 + t481 - t3599) - t5076 + t3442 * (t5077 - t5064 + t567 - t566 + t3787 - t193 - t481 + t3599) + t3429 * t74) - 0.2e1 * t34 * t5532 * t12 * t3806 + t33 * (t5091 - t327 * (t36 * t3732 + t5093 + t5096 - t773) * t3442 - t5038 + t5041 + t630) + t5506 * t371 + t26 * t3429 * t384 * t3892 - (t3585 + t3455) * t43;
t5575 = 0.1e1 / (t3444 * (t33 * t3660 - t3995 + t814) + t34 * t3472 + t33 * (-t3669 - t12 * (t3477 + t75)) - t4018);
t5577 = t5006 * t4999 * t887 + t409 * t5033 * t901 + t5120 * t5109 * t909 + t5136 * t5129 * t1518 + t1157 * t5155 * t1530 + t5211 * t5200 * t1538 + t5227 * t5220 * t2147 + t1786 * t5246 * t2159 + t5302 * t5291 * t2167 + t5318 * t5311 * t2776 + t2415 * t5337 * t2788 + t5393 * t5382 * t2796 + t5409 * t5402 * t3405 + t3044 * t5428 * t3417 + t5484 * t5473 * t3425 + t5500 * t5493 * t4034 + t3673 * t5519 * t4046 + t5575 * t5564 * t4054;
t5578 = sin(xP(6));
t5580 = cos(xP(6));
t5582 = -koppelP(1,2) * t5578 + t5580 * koppelP(1,1);
t5583 = sin(xP(5));
t5585 = cos(xP(5));
t5586 = koppelP(1,3) * t5585;
t5587 = t5583 * t5582 - t5586;
t5588 = cos(xP(4));
t5590 = sin(xP(4));
t5593 = koppelP(1,1) * t5578 + t5580 * koppelP(1,2);
t5594 = t5593 * t5590;
t5595 = t5588 * t5587 - t5594;
t5599 = t5593 * t5588;
t5600 = t5590 * t5587 + t5599;
t5603 = t91 * t4076 * t5595 + t5006 * t4999 * t5600;
t5604 = t5603 * t887;
t5609 = t409 * t4122 * t5595 + t409 * t5033 * t5600;
t5610 = t5609 * t901;
t5615 = -t4213 * t12 * t5595 + t5120 * t5109 * t5600;
t5616 = t5615 * t909;
t5619 = -koppelP(2,2) * t5578 + t5580 * koppelP(2,1);
t5621 = koppelP(2,3) * t5585;
t5622 = t5583 * t5619 - t5621;
t5626 = koppelP(2,1) * t5578 + t5580 * koppelP(2,2);
t5627 = t5626 * t5590;
t5628 = t5588 * t5622 - t5627;
t5632 = t5626 * t5588;
t5633 = t5590 * t5622 + t5632;
t5636 = t977 * t4232 * t5628 + t5136 * t5129 * t5633;
t5637 = t5636 * t1518;
t5642 = t1157 * t4277 * t5628 + t1157 * t5155 * t5633;
t5643 = t5642 * t1530;
t5648 = -t4368 * t12 * t5628 + t5211 * t5200 * t5633;
t5649 = t5648 * t1538;
t5652 = -koppelP(3,2) * t5578 + t5580 * koppelP(3,1);
t5654 = koppelP(3,3) * t5585;
t5655 = t5583 * t5652 - t5654;
t5659 = koppelP(3,1) * t5578 + t5580 * koppelP(3,2);
t5660 = t5659 * t5590;
t5661 = t5588 * t5655 - t5660;
t5665 = t5659 * t5588;
t5666 = t5590 * t5655 + t5665;
t5669 = t1606 * t4387 * t5661 + t5227 * t5220 * t5666;
t5670 = t5669 * t2147;
t5675 = t1786 * t4432 * t5661 + t1786 * t5246 * t5666;
t5676 = t5675 * t2159;
t5681 = -t4523 * t12 * t5661 + t5302 * t5291 * t5666;
t5682 = t5681 * t2167;
t5685 = -koppelP(4,2) * t5578 + t5580 * koppelP(4,1);
t5687 = koppelP(4,3) * t5585;
t5688 = t5583 * t5685 - t5687;
t5692 = koppelP(4,1) * t5578 + t5580 * koppelP(4,2);
t5693 = t5692 * t5590;
t5694 = t5588 * t5688 - t5693;
t5698 = t5692 * t5588;
t5699 = t5590 * t5688 + t5698;
t5702 = t2235 * t4542 * t5694 + t5318 * t5311 * t5699;
t5703 = t5702 * t2776;
t5708 = t2415 * t4587 * t5694 + t2415 * t5337 * t5699;
t5709 = t5708 * t2788;
t5714 = -t4678 * t12 * t5694 + t5393 * t5382 * t5699;
t5715 = t5714 * t2796;
t5718 = -koppelP(5,2) * t5578 + t5580 * koppelP(5,1);
t5720 = koppelP(5,3) * t5585;
t5721 = t5583 * t5718 - t5720;
t5725 = koppelP(5,1) * t5578 + t5580 * koppelP(5,2);
t5726 = t5725 * t5590;
t5727 = t5588 * t5721 - t5726;
t5731 = t5725 * t5588;
t5732 = t5590 * t5721 + t5731;
t5735 = t2864 * t4697 * t5727 + t5409 * t5402 * t5732;
t5736 = t5735 * t3405;
t5741 = t3044 * t4742 * t5727 + t3044 * t5428 * t5732;
t5742 = t5741 * t3417;
t5747 = -t4833 * t12 * t5727 + t5484 * t5473 * t5732;
t5748 = t5747 * t3425;
t5751 = -koppelP(6,2) * t5578 + t5580 * koppelP(6,1);
t5753 = koppelP(6,3) * t5585;
t5754 = t5583 * t5751 - t5753;
t5758 = koppelP(6,1) * t5578 + t5580 * koppelP(6,2);
t5759 = t5758 * t5590;
t5760 = t5588 * t5754 - t5759;
t5764 = t5758 * t5588;
t5765 = t5590 * t5754 + t5764;
t5768 = t3493 * t4852 * t5760 + t5500 * t5493 * t5765;
t5769 = t5768 * t4034;
t5774 = t3673 * t4897 * t5760 + t3673 * t5519 * t5765;
t5775 = t5774 * t4046;
t5780 = -t4988 * t12 * t5760 + t5575 * t5564 * t5765;
t5781 = t5780 * t4054;
t5782 = t5604 + t5610 + t5616 + t5637 + t5643 + t5649 + t5670 + t5676 + t5682 + t5703 + t5709 + t5715 + t5736 + t5742 + t5748 + t5769 + t5775 + t5781;
t5784 = -t5583 * t5582 + t5586;
t5786 = t5588 * t5784 + t5594;
t5789 = t5580 * t5585;
t5791 = t5578 * t5585;
t5794 = -koppelP(1,3) * t5583 - koppelP(1,1) * t5789 + koppelP(1,2) * t5791;
t5797 = t5006 * t4999 * t5794 + t91 * t57 * t5786;
t5803 = t409 * t389 * t5786 + t409 * t5033 * t5794;
t5809 = t5120 * t5109 * t5794 - t911 * t811 * t5786;
t5811 = t5797 * t887 + t5803 * t901 + t5809 * t909;
t5814 = t5590 * t5784 - t5599;
t5819 = -t91 * t4076 * t5794 + t91 * t57 * t5814;
t5825 = t409 * t389 * t5814 - t409 * t4122 * t5794;
t5831 = t4213 * t12 * t5794 - t911 * t811 * t5814;
t5833 = t5819 * t887 + t5825 * t901 + t5831 * t909;
t5836 = -t5583 * t5619 + t5621;
t5838 = t5588 * t5836 + t5627;
t5844 = -koppelP(2,3) * t5583 - koppelP(2,1) * t5789 + koppelP(2,2) * t5791;
t5847 = t5136 * t5129 * t5844 + t977 * t950 * t5838;
t5853 = t1157 * t1141 * t5838 + t1157 * t5155 * t5844;
t5859 = -t1540 * t1473 * t5838 + t5211 * t5200 * t5844;
t5861 = t5847 * t1518 + t5853 * t1530 + t5859 * t1538;
t5864 = t5590 * t5836 - t5632;
t5869 = -t977 * t4232 * t5844 + t977 * t950 * t5864;
t5875 = t1157 * t1141 * t5864 - t1157 * t4277 * t5844;
t5881 = t4368 * t12 * t5844 - t1540 * t1473 * t5864;
t5883 = t5869 * t1518 + t5875 * t1530 + t5881 * t1538;
t5886 = -t5583 * t5652 + t5654;
t5888 = t5588 * t5886 + t5660;
t5894 = -koppelP(3,3) * t5583 - koppelP(3,1) * t5789 + koppelP(3,2) * t5791;
t5897 = t1606 * t1579 * t5888 + t5227 * t5220 * t5894;
t5903 = t1786 * t1770 * t5888 + t1786 * t5246 * t5894;
t5909 = -t2169 * t2102 * t5888 + t5302 * t5291 * t5894;
t5911 = t5897 * t2147 + t5903 * t2159 + t5909 * t2167;
t5914 = t5590 * t5886 - t5665;
t5919 = t1606 * t1579 * t5914 - t1606 * t4387 * t5894;
t5925 = t1786 * t1770 * t5914 - t1786 * t4432 * t5894;
t5931 = t4523 * t12 * t5894 - t2169 * t2102 * t5914;
t5933 = t5919 * t2147 + t5925 * t2159 + t5931 * t2167;
t5936 = -t5583 * t5685 + t5687;
t5938 = t5588 * t5936 + t5693;
t5944 = -koppelP(4,3) * t5583 - koppelP(4,1) * t5789 + koppelP(4,2) * t5791;
t5947 = t2235 * t2208 * t5938 + t5318 * t5311 * t5944;
t5953 = t2415 * t2399 * t5938 + t2415 * t5337 * t5944;
t5959 = -t2798 * t2731 * t5938 + t5393 * t5382 * t5944;
t5961 = t5947 * t2776 + t5953 * t2788 + t5959 * t2796;
t5964 = t5590 * t5936 - t5698;
t5969 = t2235 * t2208 * t5964 - t2235 * t4542 * t5944;
t5975 = t2415 * t2399 * t5964 - t2415 * t4587 * t5944;
t5981 = t4678 * t12 * t5944 - t2798 * t2731 * t5964;
t5983 = t5969 * t2776 + t5975 * t2788 + t5981 * t2796;
t5986 = -t5583 * t5718 + t5720;
t5988 = t5588 * t5986 + t5726;
t5994 = -koppelP(5,3) * t5583 - koppelP(5,1) * t5789 + koppelP(5,2) * t5791;
t5997 = t2864 * t2837 * t5988 + t5409 * t5402 * t5994;
t6003 = t3044 * t3028 * t5988 + t3044 * t5428 * t5994;
t6009 = -t3427 * t3360 * t5988 + t5484 * t5473 * t5994;
t6011 = t5997 * t3405 + t6003 * t3417 + t6009 * t3425;
t6014 = t5590 * t5986 - t5731;
t6019 = t2864 * t2837 * t6014 - t2864 * t4697 * t5994;
t6025 = t3044 * t3028 * t6014 - t3044 * t4742 * t5994;
t6031 = t4833 * t12 * t5994 - t3427 * t3360 * t6014;
t6033 = t6019 * t3405 + t6025 * t3417 + t6031 * t3425;
t6036 = -t5583 * t5751 + t5753;
t6038 = t5588 * t6036 + t5759;
t6044 = -koppelP(6,3) * t5583 - koppelP(6,1) * t5789 + koppelP(6,2) * t5791;
t6047 = t3493 * t3466 * t6038 + t5500 * t5493 * t6044;
t6053 = t3673 * t3657 * t6038 + t3673 * t5519 * t6044;
t6059 = -t4056 * t3989 * t6038 + t5575 * t5564 * t6044;
t6061 = t6047 * t4034 + t6053 * t4046 + t6059 * t4054;
t6064 = t5590 * t6036 - t5764;
t6069 = t3493 * t3466 * t6064 - t3493 * t4852 * t6044;
t6075 = t3673 * t3657 * t6064 - t3673 * t4897 * t6044;
t6081 = t4988 * t12 * t6044 - t4056 * t3989 * t6064;
t6083 = t6069 * t4034 + t6075 * t4046 + t6081 * t4054;
t6087 = rSges(4,2) * t5578 - rSges(4,1) * t5580;
t6089 = rSges(4,3) * t5585;
t6092 = t5588 * t5811 + t5590 * t5833 + t5588 * t5861 + t5590 * t5883 + t5588 * t5911 + t5590 * t5933 + t5588 * t5961 + t5590 * t5983 + t5588 * t6011 + t5590 * t6033 + t5588 * t6061 + t5590 * t6083 + m(4) * (t5583 * t6087 + t6089);
t6132 = rSges(4,1) * t5578 + rSges(4,2) * t5580;
t6134 = t5583 * (t5604 + t5610 + t5616) - t5585 * t5590 * t5811 + t5585 * t5588 * t5833 + t5583 * (t5637 + t5643 + t5649) - t5585 * t5590 * t5861 + t5585 * t5588 * t5883 + t5583 * (t5670 + t5676 + t5682) - t5585 * t5590 * t5911 + t5585 * t5588 * t5933 + t5583 * (t5703 + t5709 + t5715) - t5585 * t5590 * t5961 + t5585 * t5588 * t5983 + t5583 * (t5736 + t5742 + t5748) - t5585 * t5590 * t6011 + t5585 * t5588 * t6033 + t5583 * (t5769 + t5775 + t5781) - t5585 * t5590 * t6061 + t5585 * t5588 * t6083 - t6132 * t5585 * m(4);
t6135 = t91 * t4076;
t6137 = t409 * t4122;
t6139 = t4212 * t12;
t6141 = t325 * t6135 + t478 * t6137 + t885 * t6139;
t6148 = t899 * t868 * t6139 + t478 * t6135 + t895 * t6137;
t6154 = -t904 * t6135 - t899 * t6137 - t907 * t6139;
t6157 = t977 * t4232;
t6159 = t1157 * t4277;
t6161 = t4367 * t12;
t6163 = t1086 * t6157 + t1212 * t6159 + t1516 * t6161;
t6170 = t899 * t1504 * t6161 + t1212 * t6157 + t1526 * t6159;
t6176 = -t1533 * t6157 - t1536 * t6161 - t899 * t6159;
t6179 = t1606 * t4387;
t6181 = t1786 * t4432;
t6183 = t4522 * t12;
t6185 = t1715 * t6179 + t1841 * t6181 + t2145 * t6183;
t6192 = t899 * t2133 * t6183 + t1841 * t6179 + t2155 * t6181;
t6198 = -t2162 * t6179 - t2165 * t6183 - t899 * t6181;
t6201 = t2235 * t4542;
t6203 = t2415 * t4587;
t6205 = t4677 * t12;
t6207 = t2344 * t6201 + t2470 * t6203 + t2774 * t6205;
t6214 = t899 * t2762 * t6205 + t2470 * t6201 + t2784 * t6203;
t6220 = -t2791 * t6201 - t2794 * t6205 - t899 * t6203;
t6223 = t2864 * t4697;
t6225 = t3044 * t4742;
t6227 = t4832 * t12;
t6229 = t2973 * t6223 + t3099 * t6225 + t3403 * t6227;
t6236 = t899 * t3391 * t6227 + t3099 * t6223 + t3413 * t6225;
t6242 = -t3420 * t6223 - t3423 * t6227 - t899 * t6225;
t6245 = t3493 * t4852;
t6247 = t3673 * t4897;
t6249 = t4987 * t12;
t6251 = t3602 * t6245 + t3728 * t6247 + t4032 * t6249;
t6258 = t899 * t4020 * t6249 + t3728 * t6245 + t4042 * t6247;
t6264 = -t4049 * t6245 - t4052 * t6249 - t899 * t6247;
t6267 = t91 * t57 * t6141 + t409 * t389 * t6148 - t911 * t811 * t6154 + t977 * t950 * t6163 + t1157 * t1141 * t6170 - t1540 * t1473 * t6176 + t1606 * t1579 * t6185 + t1786 * t1770 * t6192 - t2169 * t2102 * t6198 + t2235 * t2208 * t6207 + t2415 * t2399 * t6214 - t2798 * t2731 * t6220 + t2864 * t2837 * t6229 + t3044 * t3028 * t6236 - t3427 * t3360 * t6242 + t3493 * t3466 * t6251 + t3673 * t3657 * t6258 - t4056 * t3989 * t6264;
t6304 = t91 * t4076 * t6141 + t409 * t4122 * t6148 - t4213 * t12 * t6154 + t977 * t4232 * t6163 + t1157 * t4277 * t6170 - t4368 * t12 * t6176 + t1606 * t4387 * t6185 + t1786 * t4432 * t6192 - t4523 * t12 * t6198 + t2235 * t4542 * t6207 + t2415 * t4587 * t6214 - t4678 * t12 * t6220 + t2864 * t4697 * t6229 + t3044 * t4742 * t6236 - t4833 * t12 * t6242 + t3493 * t4852 * t6251 + t3673 * t4897 * t6258 - t4988 * t12 * t6264 + m(4);
t6341 = t5006 * t4999 * t6141 + t409 * t5033 * t6148 + t5120 * t5109 * t6154 + t5136 * t5129 * t6163 + t1157 * t5155 * t6170 + t5211 * t5200 * t6176 + t5227 * t5220 * t6185 + t1786 * t5246 * t6192 + t5302 * t5291 * t6198 + t5318 * t5311 * t6207 + t2415 * t5337 * t6214 + t5393 * t5382 * t6220 + t5409 * t5402 * t6229 + t3044 * t5428 * t6236 + t5484 * t5473 * t6242 + t5500 * t5493 * t6251 + t3673 * t5519 * t6258 + t5575 * t5564 * t6264;
t6342 = t5603 * t6141;
t6343 = t5609 * t6148;
t6344 = t5615 * t6154;
t6345 = t5636 * t6163;
t6346 = t5642 * t6170;
t6347 = t5648 * t6176;
t6348 = t5669 * t6185;
t6349 = t5675 * t6192;
t6350 = t5681 * t6198;
t6351 = t5702 * t6207;
t6352 = t5708 * t6214;
t6353 = t5714 * t6220;
t6354 = t5735 * t6229;
t6355 = t5741 * t6236;
t6356 = t5747 * t6242;
t6357 = t5768 * t6251;
t6358 = t5774 * t6258;
t6359 = t5780 * t6264;
t6364 = rSges(4,2) * t5578 * t5583 - rSges(4,1) * t5580 * t5583 + t6089;
t6368 = m(4) * (t5588 * t6364 + t6132 * t5590);
t6369 = t6342 + t6343 + t6344 + t6345 + t6346 + t6347 + t6348 + t6349 + t6350 + t6351 + t6352 + t6353 + t6354 + t6355 + t6356 + t6357 + t6358 + t6359 - t6368;
t6373 = t5797 * t6141 + t5803 * t6148 + t5809 * t6154;
t6378 = t5819 * t6141 + t5825 * t6148 + t5831 * t6154;
t6383 = t5847 * t6163 + t5853 * t6170 + t5859 * t6176;
t6388 = t5869 * t6163 + t5875 * t6170 + t5881 * t6176;
t6393 = t5897 * t6185 + t5903 * t6192 + t5909 * t6198;
t6398 = t5919 * t6185 + t5925 * t6192 + t5931 * t6198;
t6403 = t5947 * t6207 + t5953 * t6214 + t5959 * t6220;
t6408 = t5969 * t6207 + t5975 * t6214 + t5981 * t6220;
t6413 = t5997 * t6229 + t6003 * t6236 + t6009 * t6242;
t6418 = t6019 * t6229 + t6025 * t6236 + t6031 * t6242;
t6423 = t6047 * t6251 + t6053 * t6258 + t6059 * t6264;
t6428 = t6069 * t6251 + t6075 * t6258 + t6081 * t6264;
t6432 = rSges(4,3) * t5583;
t6434 = (rSges(4,1) * t5789 - rSges(4,2) * t5791 + t6432) * m(4);
t6436 = t5588 * t6373 + t5588 * t6383 + t5588 * t6393 + t5588 * t6403 + t5588 * t6413 + t5588 * t6423 + t5590 * t6378 + t5590 * t6388 + t5590 * t6398 + t5590 * t6408 + t5590 * t6418 + t5590 * t6428 + t5590 * t6434;
t6485 = t5583 * (t6342 + t6343 + t6344) - t5585 * t5590 * t6373 + t5585 * t5588 * t6378 + t5583 * (t6345 + t6346 + t6347) - t5585 * t5590 * t6383 + t5585 * t5588 * t6388 + t5583 * (t6348 + t6349 + t6350) - t5585 * t5590 * t6393 + t5585 * t5588 * t6398 + t5583 * (t6351 + t6352 + t6353) - t5585 * t5590 * t6403 + t5585 * t5588 * t6408 + t5583 * (t6354 + t6355 + t6356) - t5585 * t5590 * t6413 + t5585 * t5588 * t6418 + t5583 * (t6357 + t6358 + t6359) - t5585 * t5590 * t6423 + t5585 * t5588 * t6428 - m(4) * (t5580 * (t5590 * rSges(4,2) * t5583 - t5588 * rSges(4,1)) + (t5590 * rSges(4,1) * t5583 + rSges(4,2) * t5588) * t5578);
t6486 = t5006 * t4999;
t6488 = t409 * t5033;
t6490 = t5120 * t5109;
t6492 = t325 * t6486 + t478 * t6488 - t904 * t6490;
t6498 = t478 * t6486 + t895 * t6488 - t899 * t6490;
t6504 = m(3) * t6490 - t904 * t6486 - t899 * t6488;
t6507 = t5136 * t5129;
t6509 = t1157 * t5155;
t6511 = t5211 * t5200;
t6513 = t1086 * t6507 + t1212 * t6509 - t1533 * t6511;
t6519 = t1212 * t6507 + t1526 * t6509 - t899 * t6511;
t6525 = m(3) * t6511 - t1533 * t6507 - t899 * t6509;
t6528 = t5227 * t5220;
t6530 = t1786 * t5246;
t6532 = t5302 * t5291;
t6534 = t1715 * t6528 + t1841 * t6530 - t2162 * t6532;
t6540 = t1841 * t6528 + t2155 * t6530 - t899 * t6532;
t6546 = m(3) * t6532 - t2162 * t6528 - t899 * t6530;
t6549 = t5318 * t5311;
t6551 = t2415 * t5337;
t6553 = t5393 * t5382;
t6555 = t2344 * t6549 + t2470 * t6551 - t2791 * t6553;
t6561 = t2470 * t6549 + t2784 * t6551 - t899 * t6553;
t6567 = m(3) * t6553 - t2791 * t6549 - t899 * t6551;
t6570 = t5409 * t5402;
t6572 = t3044 * t5428;
t6574 = t5484 * t5473;
t6576 = t2973 * t6570 + t3099 * t6572 - t3420 * t6574;
t6582 = t3099 * t6570 + t3413 * t6572 - t899 * t6574;
t6588 = m(3) * t6574 - t3420 * t6570 - t899 * t6572;
t6591 = t5500 * t5493;
t6593 = t3673 * t5519;
t6595 = t5575 * t5564;
t6597 = t3602 * t6591 + t3728 * t6593 - t4049 * t6595;
t6603 = t3728 * t6591 + t4042 * t6593 - t899 * t6595;
t6609 = m(3) * t6595 - t4049 * t6591 - t899 * t6593;
t6612 = t91 * t57 * t6492 + t409 * t389 * t6498 - t911 * t811 * t6504 + t977 * t950 * t6513 + t1157 * t1141 * t6519 - t1540 * t1473 * t6525 + t1606 * t1579 * t6534 + t1786 * t1770 * t6540 - t2169 * t2102 * t6546 + t2235 * t2208 * t6555 + t2415 * t2399 * t6561 - t2798 * t2731 * t6567 + t2864 * t2837 * t6576 + t3044 * t3028 * t6582 - t3427 * t3360 * t6588 + t3493 * t3466 * t6597 + t3673 * t3657 * t6603 - t4056 * t3989 * t6609;
t6649 = t91 * t4076 * t6492 + t409 * t4122 * t6498 - t4213 * t12 * t6504 + t977 * t4232 * t6513 + t1157 * t4277 * t6519 - t4368 * t12 * t6525 + t1606 * t4387 * t6534 + t1786 * t4432 * t6540 - t4523 * t12 * t6546 + t2235 * t4542 * t6555 + t2415 * t4587 * t6561 - t4678 * t12 * t6567 + t2864 * t4697 * t6576 + t3044 * t4742 * t6582 - t4833 * t12 * t6588 + t3493 * t4852 * t6597 + t3673 * t4897 * t6603 - t4988 * t12 * t6609;
t6686 = t5006 * t4999 * t6492 + t409 * t5033 * t6498 + t5120 * t5109 * t6504 + t5136 * t5129 * t6513 + t1157 * t5155 * t6519 + t5211 * t5200 * t6525 + t5227 * t5220 * t6534 + t1786 * t5246 * t6540 + t5302 * t5291 * t6546 + t5318 * t5311 * t6555 + t2415 * t5337 * t6561 + t5393 * t5382 * t6567 + t5409 * t5402 * t6576 + t3044 * t5428 * t6582 + t5484 * t5473 * t6588 + t5500 * t5493 * t6597 + t3673 * t5519 * t6603 + t5575 * t5564 * t6609 + m(4);
t6687 = t5603 * t6492;
t6688 = t5609 * t6498;
t6689 = t5615 * t6504;
t6690 = t5636 * t6513;
t6691 = t5642 * t6519;
t6692 = t5648 * t6525;
t6693 = t5669 * t6534;
t6694 = t5675 * t6540;
t6695 = t5681 * t6546;
t6696 = t5702 * t6555;
t6697 = t5708 * t6561;
t6698 = t5714 * t6567;
t6699 = t5735 * t6576;
t6700 = t5741 * t6582;
t6701 = t5747 * t6588;
t6702 = t5768 * t6597;
t6703 = t5774 * t6603;
t6704 = t5780 * t6609;
t6708 = (t6132 * t5588 - t5590 * t6364) * m(4);
t6709 = t6687 + t6688 + t6689 + t6690 + t6691 + t6692 + t6693 + t6694 + t6695 + t6696 + t6697 + t6698 + t6699 + t6700 + t6701 + t6702 + t6703 + t6704 + t6708;
t6713 = t5797 * t6492 + t5803 * t6498 + t5809 * t6504;
t6718 = t5819 * t6492 + t5825 * t6498 + t5831 * t6504;
t6723 = t5847 * t6513 + t5853 * t6519 + t5859 * t6525;
t6728 = t5869 * t6513 + t5875 * t6519 + t5881 * t6525;
t6733 = t5897 * t6534 + t5903 * t6540 + t5909 * t6546;
t6738 = t5919 * t6534 + t5925 * t6540 + t5931 * t6546;
t6743 = t5947 * t6555 + t5953 * t6561 + t5959 * t6567;
t6748 = t5969 * t6555 + t5975 * t6561 + t5981 * t6567;
t6753 = t5997 * t6576 + t6003 * t6582 + t6009 * t6588;
t6758 = t6019 * t6576 + t6025 * t6582 + t6031 * t6588;
t6763 = t6047 * t6597 + t6053 * t6603 + t6059 * t6609;
t6768 = t6069 * t6597 + t6075 * t6603 + t6081 * t6609;
t6772 = (t5585 * t6087 - t6432) * m(4);
t6774 = t5588 * t6713 + t5588 * t6723 + t5588 * t6733 + t5588 * t6743 + t5588 * t6753 + t5588 * t6763 + t5588 * t6772 + t5590 * t6718 + t5590 * t6728 + t5590 * t6738 + t5590 * t6748 + t5590 * t6758 + t5590 * t6768;
t6816 = t5583 * (t6687 + t6688 + t6689) - t5585 * t5590 * t6713 + t5585 * t5588 * t6718 + t5583 * (t6690 + t6691 + t6692) - t5585 * t5590 * t6723 + t5585 * t5588 * t6728 + t5583 * (t6693 + t6694 + t6695) - t5585 * t5590 * t6733 + t5585 * t5588 * t6738 + t5583 * (t6696 + t6697 + t6698) - t5585 * t5590 * t6743 + t5585 * t5588 * t6748 + t5583 * (t6699 + t6700 + t6701) - t5585 * t5590 * t6753 + t5585 * t5588 * t6758 + t5583 * (t6702 + t6703 + t6704) - t5585 * t5590 * t6763 + t5585 * t5588 * t6768 + m(4) * (t5588 * t6132 * t5583 - t6087 * t5590);
t6821 = -m(3) * t883 * t5615 + t325 * t5603 + t478 * t5609;
t6826 = m(3) * t5615;
t6827 = t36 * t872;
t6829 = t478 * t5603 + t895 * t5609 - t6827 * t6826;
t6836 = -m(3) * t883 * t5603 - t6827 * m(3) * t5609 + t6826;
t6843 = -m(3) * t1514 * t5648 + t1086 * t5636 + t1212 * t5642;
t6848 = m(3) * t5648;
t6850 = t1212 * t5636 + t1526 * t5642 - t6827 * t6848;
t6857 = -m(3) * t1514 * t5636 - t6827 * m(3) * t5642 + t6848;
t6864 = -m(3) * t2143 * t5681 + t1715 * t5669 + t1841 * t5675;
t6869 = m(3) * t5681;
t6871 = t1841 * t5669 + t2155 * t5675 - t6827 * t6869;
t6878 = -m(3) * t2143 * t5669 - t6827 * m(3) * t5675 + t6869;
t6885 = -m(3) * t2772 * t5714 + t2344 * t5702 + t2470 * t5708;
t6890 = m(3) * t5714;
t6892 = t2470 * t5702 + t2784 * t5708 - t6827 * t6890;
t6899 = -m(3) * t2772 * t5702 - t6827 * m(3) * t5708 + t6890;
t6906 = -m(3) * t3401 * t5747 + t2973 * t5735 + t3099 * t5741;
t6911 = m(3) * t5747;
t6913 = t3099 * t5735 + t3413 * t5741 - t6827 * t6911;
t6920 = -m(3) * t3401 * t5735 - t6827 * m(3) * t5741 + t6911;
t6927 = -m(3) * t4030 * t5780 + t3602 * t5768 + t3728 * t5774;
t6932 = m(3) * t5780;
t6934 = t3728 * t5768 + t4042 * t5774 - t6827 * t6932;
t6941 = -m(3) * t4030 * t5768 - t6827 * m(3) * t5774 + t6932;
t6944 = t91 * t57 * t6821 + t409 * t389 * t6829 - t911 * t811 * t6836 + t977 * t950 * t6843 + t1157 * t1141 * t6850 - t1540 * t1473 * t6857 + t1606 * t1579 * t6864 + t1786 * t1770 * t6871 - t2169 * t2102 * t6878 + t2235 * t2208 * t6885 + t2415 * t2399 * t6892 - t2798 * t2731 * t6899 + t2864 * t2837 * t6906 + t3044 * t3028 * t6913 - t3427 * t3360 * t6920 + t3493 * t3466 * t6927 + t3673 * t3657 * t6934 - t4056 * t3989 * t6941;
t6981 = t91 * t4076 * t6821 + t409 * t4122 * t6829 - t4213 * t12 * t6836 + t977 * t4232 * t6843 + t1157 * t4277 * t6850 - t4368 * t12 * t6857 + t1606 * t4387 * t6864 + t1786 * t4432 * t6871 - t4523 * t12 * t6878 + t2235 * t4542 * t6885 + t2415 * t4587 * t6892 - t4678 * t12 * t6899 + t2864 * t4697 * t6906 + t3044 * t4742 * t6913 - t4833 * t12 * t6920 + t3493 * t4852 * t6927 + t3673 * t4897 * t6934 - t4988 * t12 * t6941 - t6368;
t7018 = t5006 * t4999 * t6821 + t409 * t5033 * t6829 + t5120 * t5109 * t6836 + t5136 * t5129 * t6843 + t1157 * t5155 * t6850 + t5211 * t5200 * t6857 + t5227 * t5220 * t6864 + t1786 * t5246 * t6871 + t5302 * t5291 * t6878 + t5318 * t5311 * t6885 + t2415 * t5337 * t6892 + t5393 * t5382 * t6899 + t5409 * t5402 * t6906 + t3044 * t5428 * t6913 + t5484 * t5473 * t6920 + t5500 * t5493 * t6927 + t3673 * t5519 * t6934 + t5575 * t5564 * t6941 + t6708;
t7019 = t5603 * t6821;
t7020 = t5609 * t6829;
t7021 = t5615 * t6836;
t7022 = t5636 * t6843;
t7023 = t5642 * t6850;
t7024 = t5648 * t6857;
t7025 = t5669 * t6864;
t7026 = t5675 * t6871;
t7027 = t5681 * t6878;
t7028 = t5702 * t6885;
t7029 = t5708 * t6892;
t7030 = t7019 + t7020 + t7021 + t7022 + t7023 + t7024 + t7025 + t7026 + t7027 + t7028 + t7029;
t7031 = t5714 * t6899;
t7032 = t5735 * t6906;
t7033 = t5741 * t6913;
t7034 = t5747 * t6920;
t7035 = t5768 * t6927;
t7036 = t5774 * t6934;
t7037 = t5780 * t6941;
t7038 = rSges(4,1) ^ 2;
t7039 = rSges(4,2) ^ 2;
t7042 = m(4) * (-t7038 + t7039) + Icges(4,1) - Icges(4,2);
t7043 = t5580 ^ 2;
t7045 = rSges(4,1) * m(4);
t7046 = rSges(4,2) * t7045;
t7047 = -t7046 + Icges(4,4);
t7051 = rSges(4,3) ^ 2;
t7053 = m(4) * (-t7039 + t7051);
t7054 = -0.2e1 * t5580 * t7047 * t5578 + t7043 * t7042 + Icges(4,2) - Icges(4,3) + t7053;
t7055 = t5585 ^ 2;
t7058 = rSges(4,3) * t7045 - Icges(4,5);
t7062 = m(4) * rSges(4,2) * rSges(4,3) - Icges(4,6);
t7064 = -t7062 * t5578 + t5580 * t7058;
t7069 = (t7038 + t7039) * m(4);
t7070 = -0.2e1 * t5585 * t7064 * t5583 + t7055 * t7054 + Icges(4,3) + t7031 + t7032 + t7033 + t7034 + t7035 + t7036 + t7037 + t7069;
t7075 = t5797 * t6821 + t5803 * t6829 + t5809 * t6836;
t7080 = t5819 * t6821 + t5825 * t6829 + t5831 * t6836;
t7085 = t5847 * t6843 + t5853 * t6850 + t5859 * t6857;
t7090 = t5869 * t6843 + t5875 * t6850 + t5881 * t6857;
t7095 = t5897 * t6864 + t5903 * t6871 + t5909 * t6878;
t7100 = t5919 * t6864 + t5925 * t6871 + t5931 * t6878;
t7105 = t5947 * t6885 + t5953 * t6892 + t5959 * t6899;
t7110 = t5969 * t6885 + t5975 * t6892 + t5981 * t6899;
t7115 = t5997 * t6906 + t6003 * t6913 + t6009 * t6920;
t7120 = t6019 * t6906 + t6025 * t6913 + t6031 * t6920;
t7125 = t6047 * t6927 + t6053 * t6934 + t6059 * t6941;
t7130 = t6069 * t6927 + t6075 * t6934 + t6081 * t6941;
t7133 = t7042 * t5578;
t7135 = t5580 * t7133 + 0.2e1 * t7043 * t7047 - Icges(4,4) + t7046;
t7139 = -t7058 * t5578 - t5580 * t7062;
t7141 = t7139 * t5583 + t5585 * t7135 + t5588 * t7075 + t5588 * t7085 + t5588 * t7095 + t5588 * t7105 + t5588 * t7115 + t5588 * t7125 + t5590 * t7080 + t5590 * t7090 + t5590 * t7100 + t5590 * t7110 + t5590 * t7120 + t5590 * t7130;
t7179 = -t7062 * t5578;
t7182 = Icges(4,3) + t7069;
t7184 = t5583 * (t7019 + t7020 + t7021) - t5585 * t5590 * t7075 + t5585 * t5588 * t7080 + t5583 * (t7022 + t7023 + t7024) - t5585 * t5590 * t7085 + t5585 * t5588 * t7090 + t5583 * (t7025 + t7026 + t7027) - t5585 * t5590 * t7095 + t5585 * t5588 * t7100 + t5583 * (t7028 + t7029 + t7031) - t5585 * t5590 * t7105 + t5585 * t5588 * t7110 + t5583 * (t7032 + t7033 + t7034) - t5585 * t5590 * t7115 + t5585 * t5588 * t7120 + t5583 * (t7035 + t7036 + t7037) - t5585 * t5590 * t7125 + t5585 * t5588 * t7130 + t5585 * (-t5580 * t7058 - t7179) + t5583 * t7182;
t7189 = -m(3) * t883 * t5809 + t325 * t5797 + t478 * t5803;
t7194 = m(3) * t5809;
t7196 = t478 * t5797 + t895 * t5803 - t6827 * t7194;
t7203 = -m(3) * t883 * t5797 - t6827 * m(3) * t5803 + t7194;
t7210 = -m(3) * t1514 * t5859 + t1086 * t5847 + t1212 * t5853;
t7215 = m(3) * t5859;
t7217 = t1212 * t5847 + t1526 * t5853 - t6827 * t7215;
t7224 = -m(3) * t1514 * t5847 - t6827 * m(3) * t5853 + t7215;
t7231 = -m(3) * t2143 * t5909 + t1715 * t5897 + t1841 * t5903;
t7236 = m(3) * t5909;
t7238 = t1841 * t5897 + t2155 * t5903 - t6827 * t7236;
t7245 = -m(3) * t2143 * t5897 - t6827 * m(3) * t5903 + t7236;
t7252 = -m(3) * t2772 * t5959 + t2344 * t5947 + t2470 * t5953;
t7257 = m(3) * t5959;
t7259 = t2470 * t5947 + t2784 * t5953 - t6827 * t7257;
t7266 = -m(3) * t2772 * t5947 - t6827 * m(3) * t5953 + t7257;
t7273 = -m(3) * t3401 * t6009 + t2973 * t5997 + t3099 * t6003;
t7278 = m(3) * t6009;
t7280 = t3099 * t5997 + t3413 * t6003 - t6827 * t7278;
t7287 = -m(3) * t3401 * t5997 - t6827 * m(3) * t6003 + t7278;
t7294 = -m(3) * t4030 * t6059 + t3602 * t6047 + t3728 * t6053;
t7299 = m(3) * t6059;
t7301 = t3728 * t6047 + t4042 * t6053 - t6827 * t7299;
t7308 = -m(3) * t4030 * t6047 - t6827 * m(3) * t6053 + t7299;
t7311 = t91 * t57 * t7189 + t409 * t389 * t7196 - t911 * t811 * t7203 + t977 * t950 * t7210 + t1157 * t1141 * t7217 - t1540 * t1473 * t7224 + t1606 * t1579 * t7231 + t1786 * t1770 * t7238 - t2169 * t2102 * t7245 + t2235 * t2208 * t7252 + t2415 * t2399 * t7259 - t2798 * t2731 * t7266 + t2864 * t2837 * t7273 + t3044 * t3028 * t7280 - t3427 * t3360 * t7287 + t3493 * t3466 * t7294 + t3673 * t3657 * t7301 - t4056 * t3989 * t7308 + t6368;
t7348 = t91 * t4076 * t7189 + t409 * t4122 * t7196 - t4213 * t12 * t7203 + t977 * t4232 * t7210 + t1157 * t4277 * t7217 - t4368 * t12 * t7224 + t1606 * t4387 * t7231 + t1786 * t4432 * t7238 - t4523 * t12 * t7245 + t2235 * t4542 * t7252 + t2415 * t4587 * t7259 - t4678 * t12 * t7266 + t2864 * t4697 * t7273 + t3044 * t4742 * t7280 - t4833 * t12 * t7287 + t3493 * t4852 * t7294 + t3673 * t4897 * t7301 - t4988 * t12 * t7308;
t7385 = t5006 * t4999 * t7189 + t409 * t5033 * t7196 + t5120 * t5109 * t7203 + t5136 * t5129 * t7210 + t1157 * t5155 * t7217 + t5211 * t5200 * t7224 + t5227 * t5220 * t7231 + t1786 * t5246 * t7238 + t5302 * t5291 * t7245 + t5318 * t5311 * t7252 + t2415 * t5337 * t7259 + t5393 * t5382 * t7266 + t5409 * t5402 * t7273 + t3044 * t5428 * t7280 + t5484 * t5473 * t7287 + t5500 * t5493 * t7294 + t3673 * t5519 * t7301 + t5575 * t5564 * t7308 + t6772;
t7386 = t5603 * t7189;
t7387 = t5609 * t7196;
t7388 = t5615 * t7203;
t7389 = t5636 * t7210;
t7390 = t5642 * t7217;
t7391 = t5648 * t7224;
t7392 = t5669 * t7231;
t7393 = t5675 * t7238;
t7394 = t5681 * t7245;
t7395 = t5702 * t7252;
t7396 = t5708 * t7259;
t7397 = t7386 + t7387 + t7388 + t7389 + t7390 + t7391 + t7392 + t7393 + t7394 + t7395 + t7396;
t7398 = t5714 * t7266;
t7399 = t5735 * t7273;
t7400 = t5741 * t7280;
t7401 = t5747 * t7287;
t7402 = t5768 * t7294;
t7403 = t5774 * t7301;
t7404 = t5780 * t7308;
t7410 = t7047 * t5588;
t7414 = t7047 * t5583;
t7418 = t7042 * t5588 - 0.2e1 * t5590 * t7414;
t7427 = t5583 * t5588;
t7435 = t7398 + t7399 + t7400 + t7401 + t7402 + t7403 + t7404 + 0.2e1 * t7055 * t7064 * t5590 + t5585 * (t7043 * (t5590 * t5583 * t7042 + 0.2e1 * t7410) + t5580 * t5578 * t7418 + t5590 * t5583 * (t7053 + Icges(4,2) - Icges(4,3)) - t7410) + t5580 * (-t5590 * t7058 - t7062 * t7427) - (-t5590 * t7062 + t7058 * t7427) * t5578;
t7440 = t5797 * t7189 + t5803 * t7196 + t5809 * t7203;
t7445 = t5819 * t7189 + t5825 * t7196 + t5831 * t7203;
t7450 = t5847 * t7210 + t5853 * t7217 + t5859 * t7224;
t7455 = t5869 * t7210 + t5875 * t7217 + t5881 * t7224;
t7460 = t5897 * t7231 + t5903 * t7238 + t5909 * t7245;
t7465 = t5919 * t7231 + t5925 * t7238 + t5931 * t7245;
t7470 = t5947 * t7252 + t5953 * t7259 + t5959 * t7266;
t7475 = t5969 * t7252 + t5975 * t7259 + t5981 * t7266;
t7480 = t5997 * t7273 + t6003 * t7280 + t6009 * t7287;
t7485 = t6019 * t7273 + t6025 * t7280 + t6031 * t7287;
t7490 = t6047 * t7294 + t6053 * t7301 + t6059 * t7308;
t7495 = t6069 * t7294 + t6075 * t7301 + t6081 * t7308;
t7500 = t5583 * t7133 + t7062 * t5585;
t7508 = -t7058 * t5791;
t7513 = Icges(4,1) + (t7039 + t7051) * m(4);
t7515 = t5588 * t7440 + t5590 * t7445 + t5588 * t7450 + t5590 * t7455 + t5588 * t7460 + t5590 * t7465 + t5588 * t7470 + t5590 * t7475 + t5588 * t7480 + t5590 * t7485 + t5588 * t7490 + t5590 * t7495 - t7043 * t7418 + t5580 * (0.2e1 * t7047 * t5578 * t5588 + t5590 * t7500) + t5590 * (-t7047 * t5583 - t7508) + t5588 * t7513;
t7556 = -t5580 * t7058 * t5583 - t5583 * t7179 - t5585 * t7182;
t7559 = t5583 * (t7386 + t7387 + t7388) - t5585 * t5590 * t7440 + t5585 * t5588 * t7445 + t5583 * (t7389 + t7390 + t7391) - t5585 * t5590 * t7450 + t5585 * t5588 * t7455 + t5583 * (t7392 + t7393 + t7394) - t5585 * t5590 * t7460 + t5585 * t5588 * t7465 + t5583 * (t7395 + t7396 + t7398) - t5585 * t5590 * t7470 + t5585 * t5588 * t7475 + t5583 * (t7399 + t7400 + t7401) - t5585 * t5590 * t7480 + t5585 * t5588 * t7485 + t5583 * (t7402 + t7403 + t7404) - t5585 * t5590 * t7490 + t5585 * t5588 * t7495 + t5590 * t7556 + t7139 * t5588;
t7564 = -m(3) * t883 * t5831 + t325 * t5819 + t478 * t5825;
t7569 = m(3) * t5831;
t7571 = t478 * t5819 + t895 * t5825 - t6827 * t7569;
t7578 = -m(3) * t883 * t5819 - t6827 * m(3) * t5825 + t7569;
t7585 = -m(3) * t1514 * t5881 + t1086 * t5869 + t1212 * t5875;
t7590 = m(3) * t5881;
t7592 = t1212 * t5869 + t1526 * t5875 - t6827 * t7590;
t7599 = -m(3) * t1514 * t5869 - t6827 * m(3) * t5875 + t7590;
t7606 = -m(3) * t2143 * t5931 + t1715 * t5919 + t1841 * t5925;
t7611 = m(3) * t5931;
t7613 = t1841 * t5919 + t2155 * t5925 - t6827 * t7611;
t7620 = -m(3) * t2143 * t5919 - t6827 * m(3) * t5925 + t7611;
t7627 = -m(3) * t2772 * t5981 + t2344 * t5969 + t2470 * t5975;
t7632 = m(3) * t5981;
t7634 = t2470 * t5969 + t2784 * t5975 - t6827 * t7632;
t7641 = -m(3) * t2772 * t5969 - t6827 * m(3) * t5975 + t7632;
t7648 = -m(3) * t3401 * t6031 + t2973 * t6019 + t3099 * t6025;
t7653 = m(3) * t6031;
t7655 = t3099 * t6019 + t3413 * t6025 - t6827 * t7653;
t7662 = -m(3) * t3401 * t6019 - t6827 * m(3) * t6025 + t7653;
t7669 = -m(3) * t4030 * t6081 + t3602 * t6069 + t3728 * t6075;
t7674 = m(3) * t6081;
t7676 = t3728 * t6069 + t4042 * t6075 - t6827 * t7674;
t7683 = -m(3) * t4030 * t6069 - t6827 * m(3) * t6075 + t7674;
t7686 = t91 * t57 * t7564 + t409 * t389 * t7571 - t911 * t811 * t7578 + t977 * t950 * t7585 + t1157 * t1141 * t7592 - t1540 * t1473 * t7599 + t1606 * t1579 * t7606 + t1786 * t1770 * t7613 - t2169 * t2102 * t7620 + t2235 * t2208 * t7627 + t2415 * t2399 * t7634 - t2798 * t2731 * t7641 + t2864 * t2837 * t7648 + t3044 * t3028 * t7655 - t3427 * t3360 * t7662 + t3493 * t3466 * t7669 + t3673 * t3657 * t7676 - t4056 * t3989 * t7683 - t6708;
t7723 = t91 * t4076 * t7564 + t409 * t4122 * t7571 - t4213 * t12 * t7578 + t977 * t4232 * t7585 + t1157 * t4277 * t7592 - t4368 * t12 * t7599 + t1606 * t4387 * t7606 + t1786 * t4432 * t7613 - t4523 * t12 * t7620 + t2235 * t4542 * t7627 + t2415 * t4587 * t7634 - t4678 * t12 * t7641 + t2864 * t4697 * t7648 + t3044 * t4742 * t7655 - t4833 * t12 * t7662 + t3493 * t4852 * t7669 + t3673 * t4897 * t7676 - t4988 * t12 * t7683 + t6434;
t7760 = t5006 * t4999 * t7564 + t409 * t5033 * t7571 + t5120 * t5109 * t7578 + t5136 * t5129 * t7585 + t1157 * t5155 * t7592 + t5211 * t5200 * t7599 + t5227 * t5220 * t7606 + t1786 * t5246 * t7613 + t5302 * t5291 * t7620 + t5318 * t5311 * t7627 + t2415 * t5337 * t7634 + t5393 * t5382 * t7641 + t5409 * t5402 * t7648 + t3044 * t5428 * t7655 + t5484 * t5473 * t7662 + t5500 * t5493 * t7669 + t3673 * t5519 * t7676 + t5575 * t5564 * t7683;
t7761 = t5603 * t7564;
t7762 = t5609 * t7571;
t7763 = t5615 * t7578;
t7764 = t5636 * t7585;
t7765 = t5642 * t7592;
t7766 = t5648 * t7599;
t7767 = t5669 * t7606;
t7768 = t5675 * t7613;
t7769 = t5681 * t7620;
t7770 = t5702 * t7627;
t7771 = t5708 * t7634;
t7772 = t7761 + t7762 + t7763 + t7764 + t7765 + t7766 + t7767 + t7768 + t7769 + t7770 + t7771;
t7773 = t5714 * t7641;
t7774 = t5735 * t7648;
t7775 = t5741 * t7655;
t7776 = t5747 * t7662;
t7777 = t5768 * t7669;
t7778 = t5774 * t7676;
t7779 = t5780 * t7683;
t7780 = t7064 * t5588;
t7793 = t7773 + t7774 + t7775 + t7776 + t7777 + t7778 + t7779 - 0.2e1 * t7055 * t7780 + t5585 * (-t5588 * t5583 * t7054 + t7135 * t5590) + t7780 - t5583 * (t7058 * t5578 + t5580 * t7062) * t5590;
t7798 = t5797 * t7564 + t5803 * t7571 + t5809 * t7578;
t7803 = t5819 * t7564 + t5825 * t7571 + t5831 * t7578;
t7808 = t5847 * t7585 + t5853 * t7592 + t5859 * t7599;
t7813 = t5869 * t7585 + t5875 * t7592 + t5881 * t7599;
t7818 = t5897 * t7606 + t5903 * t7613 + t5909 * t7620;
t7823 = t5919 * t7606 + t5925 * t7613 + t5931 * t7620;
t7828 = t5947 * t7627 + t5953 * t7634 + t5959 * t7641;
t7833 = t5969 * t7627 + t5975 * t7634 + t5981 * t7641;
t7838 = t5997 * t7648 + t6003 * t7655 + t6009 * t7662;
t7843 = t6019 * t7648 + t6025 * t7655 + t6031 * t7662;
t7848 = t6047 * t7669 + t6053 * t7676 + t6059 * t7683;
t7853 = t6069 * t7669 + t6075 * t7676 + t6081 * t7683;
t7869 = t5588 * t7798 + t5590 * t7803 + t5588 * t7808 + t5590 * t7813 + t5588 * t7818 + t5590 * t7823 + t5588 * t7828 + t5590 * t7833 + t5588 * t7838 + t5590 * t7843 + t5588 * t7848 + t5590 * t7853 + t7043 * (-0.2e1 * t5588 * t7414 - t7042 * t5590) + t5580 * (0.2e1 * t7047 * t5578 * t5590 - t5588 * t7500) + t5588 * (t7414 + t7508) + t7513 * t5590;
t7908 = t5583 * (t7761 + t7762 + t7763) - t5585 * t5590 * t7798 + t5585 * t5588 * t7803 + t5583 * (t7764 + t7765 + t7766) - t5585 * t5590 * t7808 + t5585 * t5588 * t7813 + t5583 * (t7767 + t7768 + t7769) - t5585 * t5590 * t7818 + t5585 * t5588 * t7823 + t5583 * (t7770 + t7771 + t7773) - t5585 * t5590 * t7828 + t5585 * t5588 * t7833 + t5583 * (t7774 + t7775 + t7776) - t5585 * t5590 * t7838 + t5585 * t5588 * t7843 + t5583 * (t7777 + t7778 + t7779) - t5585 * t5590 * t7848 + t5585 * t5588 * t7853 - t5588 * t7556 + t7139 * t5590;
unknown(1,1) = t4058;
unknown(1,2) = t4990;
unknown(1,3) = t5577;
unknown(1,4) = t5782;
unknown(1,5) = t6092;
unknown(1,6) = t6134;
unknown(2,1) = t6267;
unknown(2,2) = t6304;
unknown(2,3) = t6341;
unknown(2,4) = t6369;
unknown(2,5) = t6436;
unknown(2,6) = t6485;
unknown(3,1) = t6612;
unknown(3,2) = t6649;
unknown(3,3) = t6686;
unknown(3,4) = t6709;
unknown(3,5) = t6774;
unknown(3,6) = t6816;
unknown(4,1) = t6944;
unknown(4,2) = t6981;
unknown(4,3) = t7018;
unknown(4,4) = t7030 + t7070;
unknown(4,5) = t7141;
unknown(4,6) = t7184;
unknown(5,1) = t7311;
unknown(5,2) = t7348;
unknown(5,3) = t7385;
unknown(5,4) = t7397 + t7435;
unknown(5,5) = t7515;
unknown(5,6) = t7559;
unknown(6,1) = t7686;
unknown(6,2) = t7723;
unknown(6,3) = t7760;
unknown(6,4) = t7772 + t7793;
unknown(6,5) = t7869;
unknown(6,6) = t7908;
MX  = unknown;
