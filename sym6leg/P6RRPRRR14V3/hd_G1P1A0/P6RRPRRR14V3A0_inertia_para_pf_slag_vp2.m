% Calculate inertia matrix for parallel robot
% P6RRPRRR14V3G1P1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-04-15 09:53
% Revision: 3acd05283b8979b361f80d69cfa1c98d98241298 (2019-04-12)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(1,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: pkin has to be [1x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G1P1A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2019-04-15 09:50:07
% EndTime: 2019-04-15 09:50:22
% DurationCPUTime: 15.97s
% Computational Cost: add. (26871->954), mult. (50529->1366), div. (4320->12), fcn. (48832->42), ass. (0->539)
t2018 = 2 * mrSges(3,3);
t1716 = xP(6);
t1654 = sin(t1716);
t1657 = cos(t1716);
t1720 = mrSges(4,2);
t1721 = mrSges(4,1);
t1603 = -t1654 * t1720 + t1657 * t1721;
t1717 = xP(5);
t1655 = sin(t1717);
t1658 = cos(t1717);
t1734 = koppelP(6,3);
t1740 = koppelP(6,2);
t1746 = koppelP(6,1);
t2010 = -t1654 * t1740 + t1657 * t1746;
t1560 = -t1655 * t2010 + t1658 * t1734;
t1610 = t1654 * t1746 + t1657 * t1740;
t1718 = xP(4);
t1656 = sin(t1718);
t1659 = cos(t1718);
t1517 = t1560 * t1656 - t1610 * t1659;
t1513 = t1560 * t1659 + t1610 * t1656;
t1735 = koppelP(5,3);
t1741 = koppelP(5,2);
t1747 = koppelP(5,1);
t2011 = -t1654 * t1741 + t1657 * t1747;
t1562 = -t1655 * t2011 + t1658 * t1735;
t1611 = t1654 * t1747 + t1657 * t1741;
t1520 = t1562 * t1656 - t1611 * t1659;
t1514 = t1562 * t1659 + t1611 * t1656;
t1736 = koppelP(4,3);
t1742 = koppelP(4,2);
t1748 = koppelP(4,1);
t2012 = -t1654 * t1742 + t1657 * t1748;
t1564 = -t1655 * t2012 + t1658 * t1736;
t1612 = t1654 * t1748 + t1657 * t1742;
t1523 = t1564 * t1656 - t1612 * t1659;
t1515 = t1564 * t1659 + t1612 * t1656;
t1737 = koppelP(3,3);
t1743 = koppelP(3,2);
t1749 = koppelP(3,1);
t2013 = -t1654 * t1743 + t1657 * t1749;
t1566 = -t1655 * t2013 + t1658 * t1737;
t1613 = t1654 * t1749 + t1657 * t1743;
t1526 = t1566 * t1656 - t1613 * t1659;
t1516 = t1566 * t1659 + t1613 * t1656;
t1738 = koppelP(2,3);
t1744 = koppelP(2,2);
t1750 = koppelP(2,1);
t2014 = -t1654 * t1744 + t1657 * t1750;
t1568 = -t1655 * t2014 + t1658 * t1738;
t1614 = t1654 * t1750 + t1657 * t1744;
t1529 = t1568 * t1656 - t1614 * t1659;
t1530 = t1568 * t1659 + t1614 * t1656;
t1739 = koppelP(1,3);
t1745 = koppelP(1,2);
t1751 = koppelP(1,1);
t2015 = -t1654 * t1745 + t1657 * t1751;
t1570 = -t1655 * t2015 + t1658 * t1739;
t1615 = t1654 * t1751 + t1657 * t1745;
t1533 = t1570 * t1656 - t1615 * t1659;
t1534 = t1570 * t1659 + t1615 * t1656;
t1617 = t1657 * Ifges(4,5) - t1654 * Ifges(4,6);
t2017 = t1617 * t1655;
t1719 = mrSges(4,3);
t1548 = t1603 * t1655 - t1658 * t1719;
t1602 = t1654 * t1721 + t1657 * t1720;
t1577 = t1659 * t1602;
t1920 = t1548 * t1656 + t1577;
t1544 = t1548 * t1659;
t1947 = t1656 * t1602;
t2016 = t1544 - t1947;
t1919 = (m(3) * qJ(3,6) + t2018) * qJ(3,6);
t1918 = (m(3) * qJ(3,5) + t2018) * qJ(3,5);
t1917 = (m(3) * qJ(3,4) + t2018) * qJ(3,4);
t1916 = (m(3) * qJ(3,3) + t2018) * qJ(3,3);
t1915 = (m(3) * qJ(3,2) + t2018) * qJ(3,2);
t1914 = (m(3) * qJ(3,1) + t2018) * qJ(3,1);
t2009 = 2 * Ifges(4,4);
t2008 = Ifges(2,1) + Ifges(3,1);
t2007 = (Ifges(2,4) - Ifges(3,5));
t2006 = (Ifges(3,2) + Ifges(2,3));
t2005 = Ifges(2,6) - Ifges(3,6);
t1688 = sin(qJ(2,6));
t2001 = mrSges(3,2) * t1688;
t1690 = sin(qJ(2,5));
t2000 = mrSges(3,2) * t1690;
t1692 = sin(qJ(2,4));
t1999 = mrSges(3,2) * t1692;
t1704 = sin(qJ(2,3));
t1998 = mrSges(3,2) * t1704;
t1706 = sin(qJ(2,2));
t1997 = mrSges(3,2) * t1706;
t1708 = sin(qJ(2,1));
t1996 = mrSges(3,2) * t1708;
t1723 = 1 / qJ(3,6);
t1995 = mrSges(3,2) * t1723;
t1725 = 1 / qJ(3,5);
t1994 = mrSges(3,2) * t1725;
t1727 = 1 / qJ(3,4);
t1993 = mrSges(3,2) * t1727;
t1729 = 1 / qJ(3,3);
t1992 = mrSges(3,2) * t1729;
t1731 = 1 / qJ(3,2);
t1991 = mrSges(3,2) * t1731;
t1733 = 1 / qJ(3,1);
t1990 = mrSges(3,2) * t1733;
t1986 = Ifges(4,2) - Ifges(4,3);
t1985 = Ifges(4,4) * t1655;
t1984 = Ifges(4,5) * t1654;
t1983 = t1659 * Ifges(4,4);
t1682 = legFrame(6,3);
t1642 = sin(t1682);
t1648 = cos(t1682);
t1689 = sin(qJ(1,6));
t1695 = cos(qJ(1,6));
t1583 = -t1642 * t1689 + t1648 * t1695;
t1982 = t1513 * t1583;
t1683 = legFrame(5,3);
t1643 = sin(t1683);
t1649 = cos(t1683);
t1691 = sin(qJ(1,5));
t1697 = cos(qJ(1,5));
t1585 = -t1643 * t1691 + t1649 * t1697;
t1981 = t1514 * t1585;
t1684 = legFrame(4,3);
t1644 = sin(t1684);
t1650 = cos(t1684);
t1693 = sin(qJ(1,4));
t1699 = cos(qJ(1,4));
t1587 = -t1644 * t1693 + t1650 * t1699;
t1980 = t1515 * t1587;
t1685 = legFrame(3,3);
t1645 = sin(t1685);
t1651 = cos(t1685);
t1705 = sin(qJ(1,3));
t1711 = cos(qJ(1,3));
t1593 = -t1645 * t1705 + t1651 * t1711;
t1979 = t1516 * t1593;
t1584 = t1642 * t1695 + t1648 * t1689;
t1978 = t1513 * t1584;
t1586 = t1643 * t1697 + t1649 * t1691;
t1977 = t1514 * t1586;
t1588 = t1644 * t1699 + t1650 * t1693;
t1976 = t1515 * t1588;
t1594 = t1645 * t1711 + t1651 * t1705;
t1975 = t1516 * t1594;
t1686 = legFrame(2,3);
t1646 = sin(t1686);
t1652 = cos(t1686);
t1707 = sin(qJ(1,2));
t1713 = cos(qJ(1,2));
t1595 = -t1646 * t1707 + t1652 * t1713;
t1974 = t1530 * t1595;
t1596 = t1646 * t1713 + t1652 * t1707;
t1973 = t1530 * t1596;
t1687 = legFrame(1,3);
t1647 = sin(t1687);
t1653 = cos(t1687);
t1709 = sin(qJ(1,1));
t1715 = cos(qJ(1,1));
t1597 = -t1647 * t1709 + t1653 * t1715;
t1972 = t1534 * t1597;
t1598 = t1647 * t1715 + t1653 * t1709;
t1971 = t1534 * t1598;
t1958 = t1654 * t1657;
t1950 = t1655 * t1656;
t1949 = t1655 * t1659;
t1678 = Ifges(4,1) - Ifges(4,2);
t1948 = t1655 * t1678;
t1616 = Ifges(4,6) * t1657 + t1984;
t1946 = t1656 * t1616;
t1938 = 0.1e1 / t1688 * t1723;
t1937 = 0.1e1 / t1690 * t1725;
t1936 = 0.1e1 / t1692 * t1727;
t1935 = 0.1e1 / t1704 * t1729;
t1934 = 0.1e1 / t1706 * t1731;
t1933 = 0.1e1 / t1708 * t1733;
t1932 = t1688 * t1723;
t1931 = t1690 * t1725;
t1930 = t1692 * t1727;
t1694 = cos(qJ(2,6));
t1929 = t1694 * t1723;
t1696 = cos(qJ(2,5));
t1928 = t1696 * t1725;
t1698 = cos(qJ(2,4));
t1927 = t1698 * t1727;
t1926 = t1704 * t1729;
t1925 = t1706 * t1731;
t1924 = t1708 * t1733;
t1710 = cos(qJ(2,3));
t1923 = t1710 * t1729;
t1712 = cos(qJ(2,2));
t1922 = t1712 * t1731;
t1714 = cos(qJ(2,1));
t1921 = t1714 * t1733;
t1913 = Ifges(1,3) + t2008;
t1912 = t1583 * t1995;
t1911 = t1584 * t1995;
t1910 = t1585 * t1994;
t1909 = t1586 * t1994;
t1908 = t1587 * t1993;
t1907 = t1588 * t1993;
t1906 = t1593 * t1992;
t1905 = t1594 * t1992;
t1904 = t1595 * t1991;
t1903 = t1596 * t1991;
t1902 = t1597 * t1990;
t1901 = t1598 * t1990;
t1900 = Ifges(4,4) * t1958;
t1899 = t1583 * t1938;
t1898 = t1584 * t1938;
t1897 = t1585 * t1937;
t1896 = t1586 * t1937;
t1895 = t1587 * t1936;
t1894 = t1588 * t1936;
t1700 = Ifges(3,4) + Ifges(2,5);
t1589 = t1700 * t1688 + t1694 * (mrSges(3,2) * qJ(3,6) + t2005);
t1893 = t1589 * t1938;
t1590 = t1700 * t1690 + t1696 * (mrSges(3,2) * qJ(3,5) + t2005);
t1892 = t1590 * t1937;
t1591 = t1700 * t1692 + t1698 * (mrSges(3,2) * qJ(3,4) + t2005);
t1891 = t1591 * t1936;
t1890 = t1593 * t1935;
t1889 = t1594 * t1935;
t1888 = t1595 * t1934;
t1887 = t1596 * t1934;
t1886 = t1597 * t1933;
t1885 = t1598 * t1933;
t1599 = t1700 * t1704 + t1710 * (mrSges(3,2) * qJ(3,3) + t2005);
t1884 = t1599 * t1935;
t1600 = t1700 * t1706 + t1712 * (mrSges(3,2) * qJ(3,2) + t2005);
t1883 = t1600 * t1934;
t1601 = t1700 * t1708 + t1714 * (mrSges(3,2) * qJ(3,1) + t2005);
t1882 = t1601 * t1933;
t1881 = (Ifges(2,2) + Ifges(3,3) - t2008);
t1880 = -(Ifges(4,6) * t1658 - t1654 * t1948) * t1657 - t1658 * t1984 - t1985;
t1879 = t1513 * t1898;
t1878 = t1514 * t1896;
t1877 = t1515 * t1894;
t1876 = t1516 * t1889;
t1875 = t1513 * t1899;
t1874 = t1514 * t1897;
t1873 = t1515 * t1895;
t1872 = t1516 * t1890;
t1871 = t1530 * t1887;
t1870 = t1530 * t1888;
t1869 = t1534 * t1885;
t1868 = t1534 * t1886;
t1545 = (-mrSges(3,2) * t1694 + t1589 * t1723) * t1688;
t1867 = t1545 * t1899;
t1866 = t1545 * t1898;
t1546 = (-mrSges(3,2) * t1696 + t1590 * t1725) * t1690;
t1865 = t1546 * t1897;
t1864 = t1546 * t1896;
t1547 = (-mrSges(3,2) * t1698 + t1591 * t1727) * t1692;
t1863 = t1547 * t1895;
t1862 = t1547 * t1894;
t1550 = (-mrSges(3,2) * t1710 + t1599 * t1729) * t1704;
t1861 = t1550 * t1890;
t1860 = t1550 * t1889;
t1551 = (-mrSges(3,2) * t1712 + t1600 * t1731) * t1706;
t1859 = t1551 * t1888;
t1858 = t1551 * t1887;
t1552 = (-mrSges(3,2) * t1714 + t1601 * t1733) * t1708;
t1857 = t1552 * t1886;
t1856 = t1552 * t1885;
t1537 = (0.2e1 * t1688 * (mrSges(3,1) * qJ(3,6) + t2007) + (t1881 - t1919) * t1694) * t1694 + t1913 + t1919;
t1855 = t1537 * t1899;
t1854 = t1583 * t1893;
t1853 = t1537 * t1898;
t1852 = t1584 * t1893;
t1538 = (0.2e1 * t1690 * (mrSges(3,1) * qJ(3,5) + t2007) + (t1881 - t1918) * t1696) * t1696 + t1913 + t1918;
t1851 = t1538 * t1897;
t1850 = t1585 * t1892;
t1849 = t1538 * t1896;
t1848 = t1586 * t1892;
t1539 = (0.2e1 * t1692 * (mrSges(3,1) * qJ(3,4) + t2007) + (t1881 - t1917) * t1698) * t1698 + t1913 + t1917;
t1847 = t1539 * t1895;
t1846 = t1587 * t1891;
t1845 = t1539 * t1894;
t1844 = t1588 * t1891;
t1540 = (0.2e1 * t1704 * (mrSges(3,1) * qJ(3,3) + t2007) + (t1881 - t1916) * t1710) * t1710 + t1913 + t1916;
t1843 = t1540 * t1890;
t1842 = t1593 * t1884;
t1841 = t1540 * t1889;
t1840 = t1594 * t1884;
t1541 = (0.2e1 * t1706 * (mrSges(3,1) * qJ(3,2) + t2007) + (t1881 - t1915) * t1712) * t1712 + t1913 + t1915;
t1839 = t1541 * t1888;
t1838 = t1595 * t1883;
t1837 = t1541 * t1887;
t1836 = t1596 * t1883;
t1542 = (0.2e1 * t1708 * (mrSges(3,1) * qJ(3,1) + t2007) + (t1881 - t1914) * t1714) * t1714 + t1913 + t1914;
t1835 = t1542 * t1886;
t1834 = t1597 * t1882;
t1833 = t1542 * t1885;
t1832 = t1598 * t1882;
t1553 = t1655 * t1734 + t1658 * t2010;
t1831 = t1517 * t1583 + t1553 * t1584;
t1554 = t1655 * t1735 + t1658 * t2011;
t1830 = t1520 * t1585 + t1554 * t1586;
t1555 = t1655 * t1736 + t1658 * t2012;
t1829 = t1523 * t1587 + t1555 * t1588;
t1556 = t1655 * t1737 + t1658 * t2013;
t1828 = t1526 * t1593 + t1556 * t1594;
t1557 = t1655 * t1738 + t1658 * t2014;
t1827 = t1529 * t1595 + t1557 * t1596;
t1558 = t1655 * t1739 + t1658 * t2015;
t1826 = t1533 * t1597 + t1558 * t1598;
t1825 = m(3) * t1688 - mrSges(3,1) * t1929;
t1824 = m(3) * t1690 - mrSges(3,1) * t1928;
t1823 = m(3) * t1692 - mrSges(3,1) * t1927;
t1822 = m(3) * t1704 - mrSges(3,1) * t1923;
t1821 = m(3) * t1706 - mrSges(3,1) * t1922;
t1820 = m(3) * t1708 - mrSges(3,1) * t1921;
t1819 = -t1603 * t1658 - t1655 * t1719;
t1632 = t1919 + t2006;
t1818 = -mrSges(3,1) * t1688 + t1632 * t1929;
t1633 = t1918 + t2006;
t1817 = -mrSges(3,1) * t1690 + t1633 * t1928;
t1634 = t1917 + t2006;
t1816 = -mrSges(3,1) * t1692 + t1634 * t1927;
t1635 = t1916 + t2006;
t1815 = -mrSges(3,1) * t1704 + t1635 * t1923;
t1636 = t1915 + t2006;
t1814 = -mrSges(3,1) * t1706 + t1636 * t1922;
t1637 = t1914 + t2006;
t1813 = -mrSges(3,1) * t1708 + t1637 * t1921;
t1812 = mrSges(3,2) * t1688 ^ 2 + t1589 * t1929;
t1811 = mrSges(3,2) * t1690 ^ 2 + t1590 * t1928;
t1810 = mrSges(3,2) * t1692 ^ 2 + t1591 * t1927;
t1809 = mrSges(3,2) * t1704 ^ 2 + t1599 * t1923;
t1808 = mrSges(3,2) * t1706 ^ 2 + t1600 * t1922;
t1807 = mrSges(3,2) * t1708 ^ 2 + t1601 * t1921;
t1640 = t1657 ^ 2;
t1806 = t1640 * t1678 - 0.2e1 * t1900;
t1441 = t1831 * t1929;
t1442 = (-t1517 * t1584 + t1553 * t1583) * t1938;
t1459 = t1831 * t1688;
t1306 = t1441 * t1589 + t1442 * t1537 + t1459 * t2001;
t1443 = t1830 * t1928;
t1444 = (-t1520 * t1586 + t1554 * t1585) * t1937;
t1460 = t1830 * t1690;
t1307 = t1443 * t1590 + t1444 * t1538 + t1460 * t2000;
t1445 = t1829 * t1927;
t1446 = (-t1523 * t1588 + t1555 * t1587) * t1936;
t1461 = t1829 * t1692;
t1308 = t1445 * t1591 + t1446 * t1539 + t1461 * t1999;
t1447 = t1828 * t1923;
t1448 = (-t1526 * t1594 + t1556 * t1593) * t1935;
t1462 = t1828 * t1704;
t1312 = t1447 * t1599 + t1448 * t1540 + t1462 * t1998;
t1449 = t1827 * t1922;
t1450 = (-t1529 * t1596 + t1557 * t1595) * t1934;
t1463 = t1827 * t1706;
t1313 = t1449 * t1600 + t1450 * t1541 + t1463 * t1997;
t1451 = t1826 * t1921;
t1452 = (-t1533 * t1598 + t1558 * t1597) * t1933;
t1464 = t1826 * t1708;
t1314 = t1451 * t1601 + t1452 * t1542 + t1464 * t1996;
t1327 = -mrSges(3,1) * t1459 + t1441 * t1632 + t1442 * t1589;
t1328 = -mrSges(3,1) * t1460 + t1443 * t1633 + t1444 * t1590;
t1329 = -mrSges(3,1) * t1461 + t1445 * t1634 + t1446 * t1591;
t1330 = -mrSges(3,1) * t1462 + t1447 * t1635 + t1448 * t1599;
t1331 = -mrSges(3,1) * t1463 + t1449 * t1636 + t1450 * t1600;
t1332 = -mrSges(3,1) * t1464 + t1451 * t1637 + t1452 * t1601;
t1339 = m(3) * t1459 - mrSges(3,1) * t1441 + t1442 * t2001;
t1340 = m(3) * t1460 - mrSges(3,1) * t1443 + t1444 * t2000;
t1341 = m(3) * t1461 - mrSges(3,1) * t1445 + t1446 * t1999;
t1342 = m(3) * t1462 - mrSges(3,1) * t1447 + t1448 * t1998;
t1343 = m(3) * t1463 - mrSges(3,1) * t1449 + t1450 * t1997;
t1344 = m(3) * t1464 - mrSges(3,1) * t1451 + t1452 * t1996;
t1805 = t1306 * t1442 + t1307 * t1444 + t1308 * t1446 + t1312 * t1448 + t1313 * t1450 + t1327 * t1441 + t1328 * t1443 + t1329 * t1445 + t1330 * t1447 + t1331 * t1449 + t1339 * t1459 + t1340 * t1460 + t1341 * t1461 + t1342 * t1462 + t1343 * t1463 + t1314 * t1452 + t1332 * t1451 + t1344 * t1464;
t1471 = (-t1553 * t1688 + t1694 * t1982) * t1723;
t1472 = (-t1554 * t1690 + t1696 * t1981) * t1725;
t1473 = (-t1555 * t1692 + t1698 * t1980) * t1727;
t1474 = (-t1556 * t1704 + t1710 * t1979) * t1729;
t1475 = (-t1557 * t1706 + t1712 * t1974) * t1731;
t1476 = (-t1558 * t1708 + t1714 * t1972) * t1733;
t1477 = t1553 * t1694 + t1688 * t1982;
t1478 = t1554 * t1696 + t1690 * t1981;
t1479 = t1555 * t1698 + t1692 * t1980;
t1480 = t1556 * t1710 + t1704 * t1979;
t1481 = t1557 * t1712 + t1706 * t1974;
t1482 = t1558 * t1714 + t1708 * t1972;
t1804 = t1306 * t1879 + t1307 * t1878 + t1308 * t1877 + t1312 * t1876 + t1313 * t1871 - t1327 * t1471 - t1328 * t1472 - t1329 * t1473 - t1330 * t1474 - t1331 * t1475 - t1339 * t1477 - t1340 * t1478 - t1341 * t1479 - t1342 * t1480 - t1343 * t1481 + t1314 * t1869 - t1332 * t1476 - t1344 * t1482;
t1429 = (-t1517 * t1688 - t1694 * t1978) * t1723;
t1435 = t1517 * t1694 - t1688 * t1978;
t1333 = t1429 * t1589 + t1435 * t2001 - t1513 * t1855;
t1430 = (-t1520 * t1690 - t1696 * t1977) * t1725;
t1436 = t1520 * t1696 - t1690 * t1977;
t1334 = t1430 * t1590 + t1436 * t2000 - t1514 * t1851;
t1431 = (-t1523 * t1692 - t1698 * t1976) * t1727;
t1437 = t1523 * t1698 - t1692 * t1976;
t1335 = t1431 * t1591 + t1437 * t1999 - t1515 * t1847;
t1432 = (-t1526 * t1704 - t1710 * t1975) * t1729;
t1438 = t1526 * t1710 - t1704 * t1975;
t1336 = t1432 * t1599 + t1438 * t1998 - t1516 * t1843;
t1433 = (-t1529 * t1706 - t1712 * t1973) * t1731;
t1439 = t1529 * t1712 - t1706 * t1973;
t1337 = t1433 * t1600 + t1439 * t1997 - t1530 * t1839;
t1434 = (-t1533 * t1708 - t1714 * t1971) * t1733;
t1440 = t1533 * t1714 - t1708 * t1971;
t1338 = t1434 * t1601 + t1440 * t1996 - t1534 * t1835;
t1345 = -mrSges(3,1) * t1435 + t1429 * t1632 - t1513 * t1854;
t1346 = -mrSges(3,1) * t1436 + t1430 * t1633 - t1514 * t1850;
t1347 = -mrSges(3,1) * t1437 + t1431 * t1634 - t1515 * t1846;
t1348 = -mrSges(3,1) * t1438 + t1432 * t1635 - t1516 * t1842;
t1349 = -mrSges(3,1) * t1439 + t1433 * t1636 - t1530 * t1838;
t1350 = -mrSges(3,1) * t1440 + t1434 * t1637 - t1534 * t1834;
t1363 = m(3) * t1435 - mrSges(3,1) * t1429 - t1513 * t1912;
t1364 = m(3) * t1436 - mrSges(3,1) * t1430 - t1514 * t1910;
t1365 = m(3) * t1437 - mrSges(3,1) * t1431 - t1515 * t1908;
t1366 = m(3) * t1438 - mrSges(3,1) * t1432 - t1516 * t1906;
t1367 = m(3) * t1439 - mrSges(3,1) * t1433 - t1530 * t1904;
t1368 = m(3) * t1440 - mrSges(3,1) * t1434 - t1534 * t1902;
t1803 = t1333 * t1442 + t1334 * t1444 + t1335 * t1446 + t1336 * t1448 + t1337 * t1450 + t1345 * t1441 + t1346 * t1443 + t1347 * t1445 + t1348 * t1447 + t1349 * t1449 + t1363 * t1459 + t1364 * t1460 + t1365 * t1461 + t1366 * t1462 + t1367 * t1463 + t1338 * t1452 + t1350 * t1451 + t1368 * t1464;
t1802 = -t1333 * t1879 - t1334 * t1878 - t1335 * t1877 - t1336 * t1876 - t1337 * t1871 + t1345 * t1471 + t1346 * t1472 + t1347 * t1473 + t1348 * t1474 + t1349 * t1475 + t1363 * t1477 + t1364 * t1478 + t1365 * t1479 + t1366 * t1480 + t1367 * t1481 - t1338 * t1869 + t1350 * t1476 + t1368 * t1482;
t1354 = t1471 * t1589 + t1477 * t2001 - t1513 * t1853;
t1355 = t1472 * t1590 + t1478 * t2000 - t1514 * t1849;
t1356 = t1473 * t1591 + t1479 * t1999 - t1515 * t1845;
t1360 = t1474 * t1599 + t1480 * t1998 - t1516 * t1841;
t1361 = t1475 * t1600 + t1481 * t1997 - t1530 * t1837;
t1362 = t1476 * t1601 + t1482 * t1996 - t1534 * t1833;
t1369 = -mrSges(3,1) * t1477 + t1471 * t1632 - t1513 * t1852;
t1370 = -mrSges(3,1) * t1478 + t1472 * t1633 - t1514 * t1848;
t1371 = -mrSges(3,1) * t1479 + t1473 * t1634 - t1515 * t1844;
t1372 = -mrSges(3,1) * t1480 + t1474 * t1635 - t1516 * t1840;
t1373 = -mrSges(3,1) * t1481 + t1475 * t1636 - t1530 * t1836;
t1374 = -mrSges(3,1) * t1482 + t1476 * t1637 - t1534 * t1832;
t1375 = m(3) * t1477 - mrSges(3,1) * t1471 - t1513 * t1911;
t1376 = m(3) * t1478 - mrSges(3,1) * t1472 - t1514 * t1909;
t1377 = m(3) * t1479 - mrSges(3,1) * t1473 - t1515 * t1907;
t1378 = m(3) * t1480 - mrSges(3,1) * t1474 - t1516 * t1905;
t1379 = m(3) * t1481 - mrSges(3,1) * t1475 - t1530 * t1903;
t1380 = m(3) * t1482 - mrSges(3,1) * t1476 - t1534 * t1901;
t1801 = t1354 * t1442 + t1355 * t1444 + t1356 * t1446 + t1360 * t1448 + t1361 * t1450 + t1369 * t1441 + t1370 * t1443 + t1371 * t1445 + t1372 * t1447 + t1373 * t1449 + t1375 * t1459 + t1376 * t1460 + t1377 * t1461 + t1378 * t1462 + t1379 * t1463 + t1362 * t1452 + t1374 * t1451 + t1380 * t1464;
t1800 = t1354 * t1879 + t1355 * t1878 + t1356 * t1877 + t1360 * t1876 + t1361 * t1871 - t1369 * t1471 - t1370 * t1472 - t1371 * t1473 - t1372 * t1474 - t1373 * t1475 - t1375 * t1477 - t1376 * t1478 - t1377 * t1479 - t1378 * t1480 - t1379 * t1481 + t1362 * t1869 - t1374 * t1476 - t1380 * t1482;
t1453 = t1584 * t1812 + t1855;
t1455 = t1586 * t1811 + t1851;
t1457 = t1588 * t1810 + t1847;
t1465 = t1594 * t1809 + t1843;
t1467 = t1596 * t1808 + t1839;
t1469 = t1598 * t1807 + t1835;
t1489 = t1584 * t1818 + t1854;
t1491 = t1586 * t1817 + t1850;
t1493 = t1588 * t1816 + t1846;
t1495 = t1594 * t1815 + t1842;
t1497 = t1596 * t1814 + t1838;
t1499 = t1598 * t1813 + t1834;
t1501 = t1584 * t1825 + t1912;
t1503 = t1586 * t1824 + t1910;
t1505 = t1588 * t1823 + t1908;
t1507 = t1594 * t1822 + t1906;
t1509 = t1596 * t1821 + t1904;
t1511 = t1598 * t1820 + t1902;
t1799 = t1441 * t1489 + t1442 * t1453 + t1443 * t1491 + t1444 * t1455 + t1445 * t1493 + t1446 * t1457 + t1447 * t1495 + t1448 * t1465 + t1449 * t1497 + t1450 * t1467 + t1459 * t1501 + t1460 * t1503 + t1461 * t1505 + t1462 * t1507 + t1463 * t1509 + t1451 * t1499 + t1452 * t1469 + t1464 * t1511;
t1454 = t1583 * t1812 - t1853;
t1456 = t1585 * t1811 - t1849;
t1458 = t1587 * t1810 - t1845;
t1466 = t1593 * t1809 - t1841;
t1468 = t1595 * t1808 - t1837;
t1470 = t1597 * t1807 - t1833;
t1490 = t1583 * t1818 - t1852;
t1492 = t1585 * t1817 - t1848;
t1494 = t1587 * t1816 - t1844;
t1496 = t1593 * t1815 - t1840;
t1498 = t1595 * t1814 - t1836;
t1500 = t1597 * t1813 - t1832;
t1502 = t1583 * t1825 - t1911;
t1504 = t1585 * t1824 - t1909;
t1506 = t1587 * t1823 - t1907;
t1508 = t1593 * t1822 - t1905;
t1510 = t1595 * t1821 - t1903;
t1512 = t1597 * t1820 - t1901;
t1798 = t1441 * t1490 + t1442 * t1454 + t1443 * t1492 + t1444 * t1456 + t1445 * t1494 + t1446 * t1458 + t1447 * t1496 + t1448 * t1466 + t1449 * t1498 + t1450 * t1468 + t1459 * t1502 + t1460 * t1504 + t1461 * t1506 + t1462 * t1508 + t1463 * t1510 + t1451 * t1500 + t1452 * t1470 + t1464 * t1512;
t1797 = -t1453 * t1879 - t1455 * t1878 - t1457 * t1877 - t1465 * t1876 - t1467 * t1871 + t1471 * t1489 + t1472 * t1491 + t1473 * t1493 + t1474 * t1495 + t1475 * t1497 + t1477 * t1501 + t1478 * t1503 + t1479 * t1505 + t1480 * t1507 + t1481 * t1509 - t1469 * t1869 + t1476 * t1499 + t1482 * t1511;
t1796 = -t1454 * t1879 - t1456 * t1878 - t1458 * t1877 - t1466 * t1876 - t1468 * t1871 + t1471 * t1490 + t1472 * t1492 + t1473 * t1494 + t1474 * t1496 + t1475 * t1498 + t1477 * t1502 + t1478 * t1504 + t1479 * t1506 + t1480 * t1508 + t1481 * t1510 - t1470 * t1869 + t1476 * t1500 + t1482 * t1512;
t1574 = mrSges(3,1) * t1694 + t1632 * t1932;
t1575 = mrSges(3,1) * t1696 + t1633 * t1931;
t1576 = mrSges(3,1) * t1698 + t1634 * t1930;
t1578 = mrSges(3,1) * t1710 + t1635 * t1926;
t1579 = mrSges(3,1) * t1712 + t1636 * t1925;
t1580 = mrSges(3,1) * t1714 + t1637 * t1924;
t1618 = -m(3) * t1694 - mrSges(3,1) * t1932;
t1619 = -m(3) * t1696 - mrSges(3,1) * t1931;
t1620 = -m(3) * t1698 - mrSges(3,1) * t1930;
t1623 = -m(3) * t1710 - mrSges(3,1) * t1926;
t1624 = -m(3) * t1712 - mrSges(3,1) * t1925;
t1625 = -m(3) * t1714 - mrSges(3,1) * t1924;
t1795 = t1441 * t1574 + t1442 * t1545 + t1443 * t1575 + t1444 * t1546 + t1445 * t1576 + t1446 * t1547 + t1447 * t1578 + t1448 * t1550 + t1449 * t1579 + t1450 * t1551 + t1459 * t1618 + t1460 * t1619 + t1461 * t1620 + t1462 * t1623 + t1463 * t1624 + t1451 * t1580 + t1452 * t1552 + t1464 * t1625;
t1794 = -t1471 * t1574 - t1472 * t1575 - t1473 * t1576 - t1474 * t1578 - t1475 * t1579 - t1477 * t1618 - t1478 * t1619 - t1479 * t1620 - t1480 * t1623 - t1481 * t1624 + t1513 * t1866 + t1514 * t1864 + t1515 * t1862 + t1516 * t1860 + t1530 * t1858 - t1476 * t1580 - t1482 * t1625 + t1534 * t1856;
t1793 = t1327 * t1929 + t1339 * t1688;
t1792 = t1328 * t1928 + t1340 * t1690;
t1791 = t1329 * t1927 + t1341 * t1692;
t1790 = t1330 * t1923 + t1342 * t1704;
t1789 = t1331 * t1922 + t1343 * t1706;
t1788 = t1332 * t1921 + t1344 * t1708;
t1787 = t1345 * t1929 + t1363 * t1688;
t1786 = t1346 * t1928 + t1364 * t1690;
t1785 = t1347 * t1927 + t1365 * t1692;
t1784 = t1348 * t1923 + t1366 * t1704;
t1783 = t1349 * t1922 + t1367 * t1706;
t1782 = t1350 * t1921 + t1368 * t1708;
t1781 = t1369 * t1929 + t1375 * t1688;
t1780 = t1370 * t1928 + t1376 * t1690;
t1779 = t1371 * t1927 + t1377 * t1692;
t1778 = t1372 * t1923 + t1378 * t1704;
t1777 = t1373 * t1922 + t1379 * t1706;
t1776 = t1374 * t1921 + t1380 * t1708;
t1775 = t1489 * t1929 + t1501 * t1688;
t1774 = t1490 * t1929 + t1502 * t1688;
t1773 = t1491 * t1928 + t1503 * t1690;
t1772 = t1492 * t1928 + t1504 * t1690;
t1771 = t1493 * t1927 + t1505 * t1692;
t1770 = t1494 * t1927 + t1506 * t1692;
t1769 = t1495 * t1923 + t1507 * t1704;
t1768 = t1496 * t1923 + t1508 * t1704;
t1767 = t1497 * t1922 + t1509 * t1706;
t1766 = t1498 * t1922 + t1510 * t1706;
t1765 = t1499 * t1921 + t1511 * t1708;
t1764 = t1500 * t1921 + t1512 * t1708;
t1763 = t1574 * t1929 + t1618 * t1688;
t1762 = t1575 * t1928 + t1619 * t1690;
t1761 = t1576 * t1927 + t1620 * t1692;
t1760 = t1578 * t1923 + t1623 * t1704;
t1759 = t1579 * t1922 + t1624 * t1706;
t1758 = t1580 * t1921 + t1625 * t1708;
t1757 = -t1306 * t1875 - t1307 * t1874 - t1308 * t1873 + t1327 * t1429 + t1328 * t1430 + t1329 * t1431 + t1330 * t1432 + t1331 * t1433 + t1332 * t1434 + t1339 * t1435 + t1340 * t1436 + t1341 * t1437 + t1342 * t1438 + t1343 * t1439 + t1344 * t1440 - t1312 * t1872 - t1313 * t1870 - t1314 * t1868;
t1756 = -t1354 * t1875 - t1355 * t1874 - t1356 * t1873 - t1360 * t1872 + t1369 * t1429 + t1370 * t1430 + t1371 * t1431 + t1372 * t1432 + t1373 * t1433 + t1374 * t1434 + t1375 * t1435 + t1376 * t1436 + t1377 * t1437 - t1361 * t1870 - t1362 * t1868 + t1378 * t1438 + t1379 * t1439 + t1380 * t1440;
t1755 = t1490 * t1429 + t1492 * t1430 + t1494 * t1431 + t1496 * t1432 + t1498 * t1433 + t1500 * t1434 + t1502 * t1435 + t1504 * t1436 + t1506 * t1437 + t1508 * t1438 - t1454 * t1875 - t1456 * t1874 - t1458 * t1873 + t1510 * t1439 + t1512 * t1440 - t1466 * t1872 - t1468 * t1870 - t1470 * t1868;
t1754 = t1574 * t1429 + t1575 * t1430 + t1576 * t1431 + t1578 * t1432 + t1579 * t1433 + t1580 * t1434 + t1618 * t1435 + t1619 * t1436 + t1620 * t1437 + t1623 * t1438 + t1624 * t1439 + t1625 * t1440 - t1513 * t1867 - t1514 * t1865 - t1515 * t1863 - t1516 * t1861 - t1530 * t1859 - t1534 * t1857;
t1753 = -t1333 * t1875 - t1334 * t1874 - t1335 * t1873 + t1345 * t1429 + t1346 * t1430 + t1347 * t1431 + t1348 * t1432 + t1349 * t1433 + t1350 * t1434 + t1363 * t1435 + t1364 * t1436 + t1365 * t1437 + Ifges(4,3) - t1336 * t1872 - t1337 * t1870 - t1338 * t1868 + t1366 * t1438 + t1367 * t1439 + t1368 * t1440;
t1752 = t1489 * t1429 + t1491 * t1430 + t1493 * t1431 + t1495 * t1432 + t1497 * t1433 + t1499 * t1434 + t1501 * t1435 + t1503 * t1436 + t1505 * t1437 - t1453 * t1875 - t1455 * t1874 - t1457 * t1873 + t1507 * t1438 + t1509 * t1439 + t1511 * t1440 - t1465 * t1872 - t1467 * t1870 - t1469 * t1868 - t1947;
t1641 = t1658 ^ 2;
t1582 = -t1659 * t1678 + t1950 * t2009;
t1573 = t1640 * t2009 + t1678 * t1958 - Ifges(4,4);
t1572 = t1806 + t1986;
t1559 = -Ifges(4,3) * t1658 + t2017;
t1 = [-t1454 * t1898 - t1456 * t1896 - t1458 * t1894 - t1466 * t1889 - t1468 * t1887 - t1470 * t1885 + t1583 * t1774 + t1585 * t1772 + t1587 * t1770 + t1593 * t1768 + t1595 * t1766 + t1597 * t1764 + m(4), t1454 * t1899 + t1456 * t1897 + t1458 * t1895 + t1466 * t1890 + t1468 * t1888 + t1470 * t1886 + t1584 * t1774 + t1586 * t1772 + t1588 * t1770 + t1594 * t1768 + t1596 * t1766 + t1598 * t1764, t1490 * t1932 + t1492 * t1931 + t1494 * t1930 + t1496 * t1926 + t1498 * t1925 + t1500 * t1924 - t1502 * t1694 - t1504 * t1696 - t1506 * t1698 - t1508 * t1710 - t1510 * t1712 - t1512 * t1714, t1755, t1656 * t1798 + t1659 * t1796 - t1548, t1755 * t1655 + (-t1656 * t1796 + t1659 * t1798 - t1602) * t1658; -t1453 * t1898 - t1455 * t1896 - t1457 * t1894 - t1465 * t1889 - t1467 * t1887 - t1469 * t1885 + t1583 * t1775 + t1585 * t1773 + t1587 * t1771 + t1593 * t1769 + t1595 * t1767 + t1597 * t1765, t1453 * t1899 + t1455 * t1897 + t1457 * t1895 + t1465 * t1890 + t1467 * t1888 + t1469 * t1886 + t1584 * t1775 + t1586 * t1773 + t1588 * t1771 + t1594 * t1769 + t1596 * t1767 + t1598 * t1765 + m(4), t1489 * t1932 + t1491 * t1931 + t1493 * t1930 + t1495 * t1926 + t1497 * t1925 + t1499 * t1924 - t1501 * t1694 - t1503 * t1696 - t1505 * t1698 - t1507 * t1710 - t1509 * t1712 - t1511 * t1714, t1544 + t1752, t1797 * t1659 + (-t1819 + t1799) * t1656, t1603 * t1659 + t1752 * t1655 + (-t1656 * t1797 + t1659 * t1799) * t1658; t1583 * t1763 + t1585 * t1762 + t1587 * t1761 + t1593 * t1760 + t1595 * t1759 + t1597 * t1758 - t1856 - t1858 - t1860 - t1862 - t1864 - t1866, t1584 * t1763 + t1586 * t1762 + t1588 * t1761 + t1594 * t1760 + t1596 * t1759 + t1598 * t1758 + t1857 + t1859 + t1861 + t1863 + t1865 + t1867, t1574 * t1932 + t1575 * t1931 + t1576 * t1930 + t1578 * t1926 + t1579 * t1925 + t1580 * t1924 - t1618 * t1694 - t1619 * t1696 - t1620 * t1698 - t1623 * t1710 - t1624 * t1712 - t1625 * t1714 + m(4), t1754 + t1920, t1795 * t1656 + (t1819 - t1794) * t1659, t1656 * t1603 + (t1754 + t1577) * t1655 + (t1656 * t1794 + t1659 * t1795) * t1658; -t1333 * t1898 - t1334 * t1896 - t1335 * t1894 - t1336 * t1889 - t1337 * t1887 - t1338 * t1885 + t1583 * t1787 + t1585 * t1786 + t1587 * t1785 + t1593 * t1784 + t1595 * t1783 + t1597 * t1782, t1333 * t1899 + t1334 * t1897 + t1335 * t1895 + t1336 * t1890 + t1337 * t1888 + t1338 * t1886 + t1584 * t1787 + t1586 * t1786 + t1588 * t1785 + t1594 * t1784 + t1596 * t1783 + t1598 * t1782 + t2016, t1345 * t1932 + t1346 * t1931 + t1347 * t1930 + t1348 * t1926 + t1349 * t1925 + t1350 * t1924 - t1363 * t1694 - t1364 * t1696 - t1365 * t1698 - t1366 * t1710 - t1367 * t1712 - t1368 * t1714 + t1920, t1572 * t1641 + 0.2e1 * t1658 * t2017 + t1753, t1573 * t1658 + t1655 * t1616 + t1656 * t1803 + t1659 * t1802, t1753 * t1655 + (-t1656 * t1802 + t1659 * t1803 + t1617) * t1658; -t1354 * t1898 - t1355 * t1896 - t1356 * t1894 - t1360 * t1889 - t1361 * t1887 - t1362 * t1885 + t1583 * t1781 + t1585 * t1780 + t1587 * t1779 + t1593 * t1778 + t1595 * t1777 + t1597 * t1776 - t2016, t1354 * t1899 + t1355 * t1897 + t1356 * t1895 + t1360 * t1890 + t1361 * t1888 + t1362 * t1886 + t1584 * t1781 + t1586 * t1780 + t1588 * t1779 + t1594 * t1778 + t1596 * t1777 + t1598 * t1776, t1369 * t1932 + t1370 * t1931 + t1371 * t1930 + t1372 * t1926 + t1373 * t1925 + t1374 * t1924 - t1375 * t1694 - t1376 * t1696 - t1377 * t1698 - t1378 * t1710 - t1379 * t1712 - t1380 * t1714 + t1819, t1756 + (Ifges(4,5) * t1656 + Ifges(4,6) * t1949) * t1657 + t1654 * (Ifges(4,5) * t1949 - Ifges(4,6) * t1656) + ((t1656 * t1948 + 0.2e1 * t1983) * t1640 - t1582 * t1958 + t1986 * t1950 - t1983) * t1658 - 0.2e1 * t1656 * t1617 * t1641, t1582 * t1640 + (Ifges(4,1) - t1800 + 0.2e1 * t1900) * t1659 + (t1801 + t1880) * t1656, t1559 * t1656 + t1659 * t1616 + t1756 * t1655 + (t1656 * t1800 + t1659 * t1801) * t1658; -t1306 * t1898 - t1307 * t1896 - t1308 * t1894 - t1312 * t1889 - t1313 * t1887 - t1314 * t1885 + t1583 * t1793 + t1585 * t1792 + t1587 * t1791 + t1593 * t1790 + t1595 * t1789 + t1597 * t1788 - t1920, t1306 * t1899 + t1307 * t1897 + t1308 * t1895 + t1312 * t1890 + t1313 * t1888 + t1314 * t1886 + t1584 * t1793 + t1586 * t1792 + t1588 * t1791 + t1594 * t1790 + t1596 * t1789 + t1598 * t1788 - t1819, t1327 * t1932 + t1328 * t1931 + t1329 * t1930 + t1330 * t1926 + t1331 * t1925 + t1332 * t1924 - t1339 * t1694 - t1340 * t1696 - t1341 * t1698 - t1342 * t1710 - t1343 * t1712 - t1344 * t1714, t1757 + (0.2e1 * t1641 - 0.1e1) * t1659 * t1617 + (-t1572 * t1949 + t1573 * t1656) * t1658 + t1655 * t1946 (-0.2e1 * t1640 * t1985 - t1804 - t1880) * t1659 + (Ifges(4,1) + t1805 - t1806) * t1656, -t1559 * t1659 + t1946 + t1757 * t1655 + (t1656 * t1804 + t1659 * t1805) * t1658;];
MX  = t1;
