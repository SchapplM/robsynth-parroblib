% Calculate inertia matrix for parallel robot
% P6RRPRRR14V3G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:28
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(1,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: pkin has to be [1x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:26:45
% EndTime: 2020-03-12 23:26:48
% DurationCPUTime: 2.50s
% Computational Cost: add. (33602->1392), mult. (60301->2199), div. (4320->12), fcn. (48829->42), ass. (0->853)
unknown=NaN(6,6);
t1 = sin(legFrame(1,3));
t2 = cos(qJ(1,1));
t4 = sin(qJ(1,1));
t5 = cos(legFrame(1,3));
t7 = -t2 * t1 - t5 * t4;
t8 = sin(qJ(2,1));
t9 = 0.1e1 / t8;
t10 = t9 * t7;
t11 = 0.1e1 / qJ(3,1);
t16 = rSges(2,1) ^ 2;
t17 = rSges(2,2) ^ 2;
t19 = (m(2) * (t16 - t17));
t21 = cos(qJ(2,1));
t22 = t21 ^ 2;
t24 = (rSges(3,3) + qJ(3,1));
t27 = (rSges(2,1) * m(2));
t28 = (rSges(2,2) * t27);
t33 = (rSges(3,2) ^ 2);
t34 = (rSges(3,3) ^ 2);
t36 = 2 * rSges(3,3) * qJ(3,1);
t37 = qJ(3,1) ^ 2;
t40 = rSges(2,3) ^ 2;
t42 = m(2) * (t17 + t40);
t43 = rSges(1,1) ^ 2;
t44 = rSges(1,2) ^ 2;
t46 = m(1) * (t43 + t44);
t47 = t22 * (-(qJ(3,1) + rSges(3,1) + rSges(3,3)) * (qJ(3,1) - rSges(3,1) + rSges(3,3)) * m(3) + t19 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t21 * t8 * (m(3) * t24 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t28) + (m(3) * (t33 + t34 + t36 + t37)) + t42 + Icges(2,1) + Icges(3,1) + t46 + Icges(1,3);
t48 = t47 * t11;
t52 = -t4 * t1 + t5 * t2;
t53 = t21 * t52;
t57 = (m(2) * rSges(2,2) * rSges(2,3));
t63 = rSges(3,2) * rSges(3,1) * m(3) + rSges(2,3) * t27 - Icges(3,4) - Icges(2,5);
t65 = t21 * (m(3) * t24 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t57) - t63 * t8;
t66 = t65 * t11;
t68 = t8 ^ 2;
t70 = m(3) * rSges(3,2);
t72 = t70 * t68 * t52 + t48 * t10 + t66 * t53;
t74 = t11 * t9;
t77 = rSges(3,1) ^ 2;
t81 = (m(2) * (t16 + t17));
t82 = m(3) * (t77 + t34 + t36 + t37) + t81 + Icges(3,2) + Icges(2,3);
t85 = t8 * t52;
t86 = m(3) * rSges(3,1);
t88 = t82 * t11 * t53 + t66 * t10 - t86 * t85;
t90 = t11 * t21;
t94 = m(3) * t11;
t98 = -rSges(3,1) * t94 * t53 + t70 * t11 * t7 + m(3) * t85;
t101 = sin(legFrame(2,3));
t102 = cos(qJ(1,2));
t104 = sin(qJ(1,2));
t105 = cos(legFrame(2,3));
t107 = -t102 * t101 - t105 * t104;
t108 = sin(qJ(2,2));
t109 = 0.1e1 / t108;
t110 = t109 * t107;
t111 = 0.1e1 / qJ(3,2);
t117 = cos(qJ(2,2));
t118 = t117 ^ 2;
t120 = rSges(3,3) + qJ(3,2);
t128 = 2 * rSges(3,3) * qJ(3,2);
t129 = qJ(3,2) ^ 2;
t132 = t118 * (-(qJ(3,2) + rSges(3,1) + rSges(3,3)) * (qJ(3,2) - rSges(3,1) + rSges(3,3)) * m(3) + t19 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t117 * t108 * (m(3) * t120 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t28) + (m(3) * (t33 + t34 + t128 + t129)) + t42 + Icges(2,1) + Icges(3,1) + t46 + Icges(1,3);
t133 = t132 * t111;
t137 = -t104 * t101 + t105 * t102;
t138 = t117 * t137;
t144 = t117 * (m(3) * t120 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t57) - t63 * t108;
t145 = t144 * t111;
t147 = t108 ^ 2;
t150 = t70 * t147 * t137 + t133 * t110 + t145 * t138;
t152 = t111 * t109;
t157 = m(3) * (t77 + t34 + t128 + t129) + t81 + Icges(3,2) + Icges(2,3);
t160 = t108 * t137;
t162 = t157 * t111 * t138 + t145 * t110 - t86 * t160;
t164 = t111 * t117;
t168 = m(3) * t111;
t172 = -rSges(3,1) * t168 * t138 + t70 * t111 * t107 + m(3) * t160;
t175 = sin(legFrame(3,3));
t176 = cos(qJ(1,3));
t178 = sin(qJ(1,3));
t179 = cos(legFrame(3,3));
t181 = -t176 * t175 - t179 * t178;
t182 = sin(qJ(2,3));
t183 = 0.1e1 / t182;
t184 = t183 * t181;
t185 = 0.1e1 / qJ(3,3);
t191 = cos(qJ(2,3));
t192 = t191 ^ 2;
t194 = rSges(3,3) + qJ(3,3);
t202 = 2 * rSges(3,3) * qJ(3,3);
t203 = qJ(3,3) ^ 2;
t206 = t192 * (-(qJ(3,3) + rSges(3,1) + rSges(3,3)) * (qJ(3,3) - rSges(3,1) + rSges(3,3)) * m(3) + t19 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t191 * t182 * (m(3) * t194 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t28) + (m(3) * (t33 + t34 + t202 + t203)) + t42 + Icges(2,1) + Icges(3,1) + t46 + Icges(1,3);
t207 = t206 * t185;
t211 = -t178 * t175 + t179 * t176;
t212 = t191 * t211;
t218 = t191 * (m(3) * t194 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t57) - t63 * t182;
t219 = t218 * t185;
t221 = t182 ^ 2;
t224 = t70 * t221 * t211 + t207 * t184 + t219 * t212;
t226 = t185 * t183;
t231 = m(3) * (t77 + t34 + t202 + t203) + t81 + Icges(3,2) + Icges(2,3);
t234 = t182 * t211;
t236 = t231 * t185 * t212 + t219 * t184 - t86 * t234;
t238 = t185 * t191;
t242 = m(3) * t185;
t246 = -rSges(3,1) * t242 * t212 + t70 * t185 * t181 + m(3) * t234;
t249 = sin(legFrame(4,3));
t250 = cos(qJ(1,4));
t252 = sin(qJ(1,4));
t253 = cos(legFrame(4,3));
t255 = -t250 * t249 - t253 * t252;
t256 = sin(qJ(2,4));
t257 = 0.1e1 / t256;
t258 = t257 * t255;
t259 = 0.1e1 / qJ(3,4);
t265 = cos(qJ(2,4));
t266 = t265 ^ 2;
t268 = rSges(3,3) + qJ(3,4);
t276 = 2 * rSges(3,3) * qJ(3,4);
t277 = qJ(3,4) ^ 2;
t280 = t266 * (-(qJ(3,4) + rSges(3,1) + rSges(3,3)) * (qJ(3,4) - rSges(3,1) + rSges(3,3)) * m(3) + t19 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t265 * t256 * (m(3) * t268 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t28) + (m(3) * (t33 + t34 + t276 + t277)) + t42 + Icges(2,1) + Icges(3,1) + t46 + Icges(1,3);
t281 = t280 * t259;
t285 = -t252 * t249 + t253 * t250;
t286 = t265 * t285;
t292 = t265 * (m(3) * t268 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t57) - t63 * t256;
t293 = t292 * t259;
t295 = t256 ^ 2;
t298 = t70 * t295 * t285 + t281 * t258 + t293 * t286;
t300 = t259 * t257;
t305 = m(3) * (t77 + t34 + t276 + t277) + t81 + Icges(3,2) + Icges(2,3);
t308 = t256 * t285;
t310 = t305 * t259 * t286 + t293 * t258 - t86 * t308;
t312 = t259 * t265;
t316 = m(3) * t259;
t320 = -rSges(3,1) * t316 * t286 + t70 * t259 * t255 + m(3) * t308;
t323 = sin(legFrame(5,3));
t324 = cos(qJ(1,5));
t326 = sin(qJ(1,5));
t327 = cos(legFrame(5,3));
t329 = -t324 * t323 - t327 * t326;
t330 = sin(qJ(2,5));
t331 = 0.1e1 / t330;
t332 = t331 * t329;
t333 = 0.1e1 / qJ(3,5);
t339 = cos(qJ(2,5));
t340 = t339 ^ 2;
t342 = rSges(3,3) + qJ(3,5);
t350 = 2 * rSges(3,3) * qJ(3,5);
t351 = qJ(3,5) ^ 2;
t354 = t340 * (-(qJ(3,5) + rSges(3,1) + rSges(3,3)) * (qJ(3,5) - rSges(3,1) + rSges(3,3)) * m(3) + t19 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t339 * t330 * (m(3) * t342 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t28) + (m(3) * (t33 + t34 + t350 + t351)) + t42 + Icges(2,1) + Icges(3,1) + t46 + Icges(1,3);
t355 = t354 * t333;
t359 = -t326 * t323 + t327 * t324;
t360 = t339 * t359;
t366 = t339 * (m(3) * t342 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t57) - t63 * t330;
t367 = t366 * t333;
t369 = t330 ^ 2;
t372 = t70 * t369 * t359 + t355 * t332 + t367 * t360;
t374 = t333 * t331;
t379 = m(3) * (t77 + t34 + t350 + t351) + t81 + Icges(3,2) + Icges(2,3);
t382 = t330 * t359;
t384 = t379 * t333 * t360 + t367 * t332 - t86 * t382;
t386 = t333 * t339;
t390 = m(3) * t333;
t394 = -rSges(3,1) * t390 * t360 + t70 * t333 * t329 + m(3) * t382;
t397 = sin(legFrame(6,3));
t398 = cos(qJ(1,6));
t400 = sin(qJ(1,6));
t401 = cos(legFrame(6,3));
t403 = -t398 * t397 - t401 * t400;
t404 = sin(qJ(2,6));
t405 = 0.1e1 / t404;
t406 = t405 * t403;
t407 = 0.1e1 / qJ(3,6);
t413 = cos(qJ(2,6));
t414 = t413 ^ 2;
t416 = rSges(3,3) + qJ(3,6);
t424 = 2 * rSges(3,3) * qJ(3,6);
t425 = qJ(3,6) ^ 2;
t428 = t414 * (-(qJ(3,6) + rSges(3,1) + rSges(3,3)) * (qJ(3,6) - rSges(3,1) + rSges(3,3)) * m(3) + t19 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t413 * t404 * (m(3) * t416 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t28) + (m(3) * (t33 + t34 + t424 + t425)) + t42 + Icges(2,1) + Icges(3,1) + t46 + Icges(1,3);
t429 = t428 * t407;
t433 = -t400 * t397 + t401 * t398;
t434 = t413 * t433;
t440 = t413 * (m(3) * t416 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t57) - t63 * t404;
t441 = t440 * t407;
t443 = t404 ^ 2;
t446 = t70 * t443 * t433 + t429 * t406 + t441 * t434;
t448 = t407 * t405;
t453 = m(3) * (t77 + t34 + t424 + t425) + t81 + Icges(3,2) + Icges(2,3);
t456 = t404 * t433;
t458 = t453 * t407 * t434 + t441 * t406 - t86 * t456;
t460 = t407 * t413;
t464 = m(3) * t407;
t468 = -rSges(3,1) * t464 * t434 + t70 * t407 * t403 + m(3) * t456;
t471 = t74 * t7 * t72 + t90 * t52 * t88 + t8 * t52 * t98 + t152 * t107 * t150 + t164 * t137 * t162 + t108 * t137 * t172 + t226 * t181 * t224 + t238 * t211 * t236 + t182 * t211 * t246 + t300 * t255 * t298 + t312 * t285 * t310 + t256 * t285 * t320 + t374 * t329 * t372 + t386 * t359 * t384 + t330 * t359 * t394 + t448 * t403 * t446 + t460 * t433 * t458 + t404 * t433 * t468 + m(4);
t474 = t11 * t88;
t475 = -t21 * t7;
t481 = t111 * t162;
t482 = -t117 * t107;
t488 = t185 * t236;
t489 = -t191 * t181;
t495 = t259 * t310;
t496 = -t265 * t255;
t502 = t333 * t384;
t503 = -t339 * t329;
t509 = t407 * t458;
t510 = -t413 * t403;
t514 = t74 * t52 * t72 + t475 * t474 - t7 * t8 * t98 + t152 * t137 * t150 + t482 * t481 - t107 * t108 * t172 + t226 * t211 * t224 + t489 * t488 - t181 * t182 * t246 + t300 * t285 * t298 + t496 * t495 - t255 * t256 * t320 + t374 * t359 * t372 + t503 * t502 - t329 * t330 * t394 + t448 * t433 * t446 + t510 * t509 - t403 * t404 * t468;
t527 = t108 * t481 - t117 * t172 + t182 * t488 - t191 * t246 - t21 * t98 + t256 * t495 - t265 * t320 + t330 * t502 - t339 * t394 + t404 * t509 - t413 * t468 + t8 * t474;
t528 = sin(xP(6));
t530 = cos(xP(6));
t532 = -koppelP(1,2) * t528 + t530 * koppelP(1,1);
t533 = sin(xP(5));
t535 = cos(xP(5));
t536 = koppelP(1,3) * t535;
t537 = t533 * t532 - t536;
t538 = cos(xP(4));
t540 = sin(xP(4));
t543 = koppelP(1,1) * t528 + koppelP(1,2) * t530;
t544 = t543 * t540;
t545 = t538 * t537 - t544;
t547 = t9 * t52;
t548 = t11 * t547;
t549 = t548 * t545 * t72;
t553 = t543 * t538;
t554 = t540 * t537 + t553;
t557 = t475 * t11 * t545 + t8 * t11 * t554;
t558 = t557 * t88;
t562 = -t7 * t8 * t545 - t21 * t554;
t563 = t562 * t98;
t566 = -koppelP(2,2) * t528 + t530 * koppelP(2,1);
t568 = koppelP(2,3) * t535;
t569 = t533 * t566 - t568;
t573 = koppelP(2,1) * t528 + koppelP(2,2) * t530;
t574 = t573 * t540;
t575 = t538 * t569 - t574;
t577 = t109 * t137;
t578 = t111 * t577;
t579 = t578 * t575 * t150;
t583 = t573 * t538;
t584 = t540 * t569 + t583;
t587 = t108 * t111 * t584 + t482 * t111 * t575;
t588 = t587 * t162;
t592 = -t107 * t108 * t575 - t117 * t584;
t593 = t592 * t172;
t596 = -koppelP(3,2) * t528 + t530 * koppelP(3,1);
t598 = koppelP(3,3) * t535;
t599 = t533 * t596 - t598;
t603 = koppelP(3,1) * t528 + koppelP(3,2) * t530;
t604 = t603 * t540;
t605 = t538 * t599 - t604;
t607 = t183 * t211;
t608 = t185 * t607;
t609 = t608 * t605 * t224;
t613 = t603 * t538;
t614 = t540 * t599 + t613;
t617 = t182 * t185 * t614 + t489 * t185 * t605;
t618 = t617 * t236;
t622 = -t181 * t182 * t605 - t191 * t614;
t623 = t622 * t246;
t626 = -koppelP(4,2) * t528 + t530 * koppelP(4,1);
t628 = koppelP(4,3) * t535;
t629 = t533 * t626 - t628;
t633 = koppelP(4,1) * t528 + koppelP(4,2) * t530;
t634 = t633 * t540;
t635 = t538 * t629 - t634;
t637 = t257 * t285;
t638 = t259 * t637;
t639 = t638 * t635 * t298;
t643 = t633 * t538;
t644 = t540 * t629 + t643;
t647 = t256 * t259 * t644 + t496 * t259 * t635;
t648 = t647 * t310;
t652 = -t255 * t256 * t635 - t265 * t644;
t653 = t652 * t320;
t656 = -koppelP(5,2) * t528 + t530 * koppelP(5,1);
t658 = koppelP(5,3) * t535;
t659 = t533 * t656 - t658;
t663 = koppelP(5,1) * t528 + koppelP(5,2) * t530;
t664 = t663 * t540;
t665 = t538 * t659 - t664;
t667 = t331 * t359;
t668 = t333 * t667;
t669 = t668 * t665 * t372;
t673 = t663 * t538;
t674 = t540 * t659 + t673;
t677 = t330 * t333 * t674 + t503 * t333 * t665;
t678 = t677 * t384;
t682 = -t329 * t330 * t665 - t339 * t674;
t683 = t682 * t394;
t686 = -koppelP(6,2) * t528 + t530 * koppelP(6,1);
t688 = koppelP(6,3) * t535;
t689 = t533 * t686 - t688;
t693 = koppelP(6,1) * t528 + t530 * koppelP(6,2);
t694 = t693 * t540;
t695 = t538 * t689 - t694;
t697 = t405 * t433;
t698 = t407 * t697;
t699 = t698 * t695 * t446;
t703 = t693 * t538;
t704 = t540 * t689 + t703;
t707 = t404 * t407 * t704 + t510 * t407 * t695;
t708 = t707 * t458;
t712 = -t403 * t404 * t695 - t413 * t704;
t713 = t712 * t468;
t714 = t549 + t558 + t563 + t579 + t588 + t593 + t609 + t618 + t623 + t639 + t648 + t653 + t669 + t678 + t683 + t699 + t708 + t713;
t716 = -t533 * t532 + t536;
t718 = t538 * t716 + t544;
t720 = t11 * t10;
t722 = t52 * t718;
t724 = t530 * t535;
t726 = t528 * t535;
t729 = -koppelP(1,3) * t533 - koppelP(1,1) * t724 + koppelP(1,2) * t726;
t732 = t8 * t11 * t729 + t90 * t722;
t736 = -t21 * t729 + t8 * t722;
t738 = t720 * t718 * t72 + t732 * t88 + t736 * t98;
t741 = t540 * t716 - t553;
t746 = -t74 * t52 * t729 + t74 * t7 * t741;
t748 = t52 * t741;
t752 = -t475 * t11 * t729 + t90 * t748;
t757 = t7 * t8 * t729 + t8 * t748;
t759 = t746 * t72 + t752 * t88 + t757 * t98;
t762 = -t533 * t566 + t568;
t764 = t538 * t762 + t574;
t766 = t111 * t110;
t768 = t137 * t764;
t773 = -koppelP(2,3) * t533 - koppelP(2,1) * t724 + koppelP(2,2) * t726;
t776 = t108 * t111 * t773 + t164 * t768;
t780 = t108 * t768 - t117 * t773;
t782 = t766 * t764 * t150 + t776 * t162 + t780 * t172;
t785 = t540 * t762 - t583;
t790 = t152 * t107 * t785 - t152 * t137 * t773;
t792 = t137 * t785;
t796 = -t482 * t111 * t773 + t164 * t792;
t801 = t107 * t108 * t773 + t108 * t792;
t803 = t790 * t150 + t796 * t162 + t801 * t172;
t806 = -t533 * t596 + t598;
t808 = t538 * t806 + t604;
t810 = t185 * t184;
t812 = t211 * t808;
t817 = -koppelP(3,3) * t533 - koppelP(3,1) * t724 + koppelP(3,2) * t726;
t820 = t182 * t185 * t817 + t238 * t812;
t824 = t182 * t812 - t191 * t817;
t826 = t810 * t808 * t224 + t820 * t236 + t824 * t246;
t829 = t540 * t806 - t613;
t834 = t226 * t181 * t829 - t226 * t211 * t817;
t836 = t211 * t829;
t840 = -t489 * t185 * t817 + t238 * t836;
t845 = t181 * t182 * t817 + t182 * t836;
t847 = t834 * t224 + t840 * t236 + t845 * t246;
t850 = -t533 * t626 + t628;
t852 = t538 * t850 + t634;
t854 = t259 * t258;
t856 = t285 * t852;
t861 = -koppelP(4,3) * t533 - koppelP(4,1) * t724 + koppelP(4,2) * t726;
t864 = t256 * t259 * t861 + t312 * t856;
t868 = t256 * t856 - t265 * t861;
t870 = t854 * t852 * t298 + t864 * t310 + t868 * t320;
t873 = t540 * t850 - t643;
t878 = t300 * t255 * t873 - t300 * t285 * t861;
t880 = t285 * t873;
t884 = -t496 * t259 * t861 + t312 * t880;
t889 = t255 * t256 * t861 + t256 * t880;
t891 = t878 * t298 + t884 * t310 + t889 * t320;
t894 = -t533 * t656 + t658;
t896 = t538 * t894 + t664;
t898 = t333 * t332;
t900 = t359 * t896;
t905 = -koppelP(5,3) * t533 - koppelP(5,1) * t724 + koppelP(5,2) * t726;
t908 = t330 * t333 * t905 + t386 * t900;
t912 = t330 * t900 - t339 * t905;
t914 = t898 * t896 * t372 + t908 * t384 + t912 * t394;
t917 = t540 * t894 - t673;
t922 = t374 * t329 * t917 - t374 * t359 * t905;
t924 = t359 * t917;
t928 = -t503 * t333 * t905 + t386 * t924;
t933 = t329 * t330 * t905 + t330 * t924;
t935 = t922 * t372 + t928 * t384 + t933 * t394;
t938 = -t533 * t686 + t688;
t940 = t538 * t938 + t694;
t942 = t407 * t406;
t944 = t433 * t940;
t949 = -koppelP(6,3) * t533 - koppelP(6,1) * t724 + koppelP(6,2) * t726;
t952 = t404 * t407 * t949 + t460 * t944;
t956 = t404 * t944 - t413 * t949;
t958 = t942 * t940 * t446 + t952 * t458 + t956 * t468;
t961 = t540 * t938 - t703;
t966 = t448 * t403 * t961 - t448 * t433 * t949;
t968 = t433 * t961;
t972 = -t510 * t407 * t949 + t460 * t968;
t977 = t403 * t404 * t949 + t404 * t968;
t979 = t966 * t446 + t972 * t458 + t977 * t468;
t983 = rSges(4,2) * t528 - rSges(4,1) * t530;
t985 = rSges(4,3) * t535;
t988 = t538 * t738 + t540 * t759 + t538 * t782 + t540 * t803 + t538 * t826 + t540 * t847 + t538 * t870 + t540 * t891 + t538 * t914 + t540 * t935 + t538 * t958 + t540 * t979 + (t533 * t983 + t985) * m(4);
t1028 = rSges(4,1) * t528 + rSges(4,2) * t530;
t1030 = t533 * (t549 + t558 + t563) - t535 * t540 * t738 + t535 * t538 * t759 + t533 * (t579 + t588 + t593) - t535 * t540 * t782 + t535 * t538 * t803 + t533 * (t609 + t618 + t623) - t535 * t540 * t826 + t535 * t538 * t847 + t533 * (t639 + t648 + t653) - t535 * t540 * t870 + t535 * t538 * t891 + t533 * (t669 + t678 + t683) - t535 * t540 * t914 + t535 * t538 * t935 + t533 * (t699 + t708 + t713) - t535 * t540 * t958 + t535 * t538 * t979 - t1028 * t535 * m(4);
t1032 = -t11 * t7;
t1037 = t65 * t21 * t1032 - t70 * t7 * t68 + t48 * t547;
t1043 = -t7 * t8;
t1045 = t82 * t21 * t1032 - t86 * t1043 + t66 * t547;
t1050 = m(3) * t21;
t1051 = rSges(3,1) * t1050;
t1054 = t70 * t11 * t52 + m(3) * t1043 - t1051 * t1032;
t1058 = -t111 * t107;
t1063 = t144 * t117 * t1058 - t70 * t107 * t147 + t133 * t577;
t1069 = -t107 * t108;
t1071 = t157 * t117 * t1058 - t86 * t1069 + t145 * t577;
t1076 = m(3) * t117;
t1077 = rSges(3,1) * t1076;
t1080 = t70 * t111 * t137 + m(3) * t1069 - t1077 * t1058;
t1084 = -t185 * t181;
t1089 = t218 * t191 * t1084 - t70 * t181 * t221 + t207 * t607;
t1095 = -t181 * t182;
t1097 = t231 * t191 * t1084 - t86 * t1095 + t219 * t607;
t1102 = m(3) * t191;
t1103 = rSges(3,1) * t1102;
t1106 = t70 * t185 * t211 + m(3) * t1095 - t1103 * t1084;
t1110 = -t259 * t255;
t1115 = t292 * t265 * t1110 - t70 * t255 * t295 + t281 * t637;
t1121 = -t255 * t256;
t1123 = t305 * t265 * t1110 - t86 * t1121 + t293 * t637;
t1128 = m(3) * t265;
t1129 = rSges(3,1) * t1128;
t1132 = t70 * t259 * t285 + m(3) * t1121 - t1129 * t1110;
t1136 = -t333 * t329;
t1141 = t366 * t339 * t1136 - t70 * t329 * t369 + t355 * t667;
t1147 = -t329 * t330;
t1149 = t379 * t339 * t1136 - t86 * t1147 + t367 * t667;
t1154 = m(3) * t339;
t1155 = rSges(3,1) * t1154;
t1158 = t70 * t333 * t359 + m(3) * t1147 - t1155 * t1136;
t1162 = -t407 * t403;
t1167 = t440 * t413 * t1162 - t70 * t403 * t443 + t429 * t697;
t1173 = -t403 * t404;
t1175 = t453 * t413 * t1162 - t86 * t1173 + t441 * t697;
t1180 = m(3) * t413;
t1181 = rSges(3,1) * t1180;
t1184 = t70 * t407 * t433 + m(3) * t1173 - t1181 * t1162;
t1187 = t74 * t7 * t1037 + t90 * t52 * t1045 + t8 * t52 * t1054 + t152 * t107 * t1063 + t164 * t137 * t1071 + t108 * t137 * t1080 + t226 * t181 * t1089 + t238 * t211 * t1097 + t182 * t211 * t1106 + t300 * t255 * t1115 + t312 * t285 * t1123 + t256 * t285 * t1132 + t374 * t329 * t1141 + t386 * t359 * t1149 + t330 * t359 * t1158 + t448 * t403 * t1167 + t460 * t433 * t1175 + t404 * t433 * t1184;
t1190 = t11 * t1045;
t1196 = t111 * t1071;
t1202 = t185 * t1097;
t1208 = t259 * t1123;
t1214 = t333 * t1149;
t1220 = t407 * t1175;
t1224 = t74 * t52 * t1037 + t475 * t1190 - t7 * t8 * t1054 + t152 * t137 * t1063 + t482 * t1196 - t107 * t108 * t1080 + t226 * t211 * t1089 + t489 * t1202 - t181 * t182 * t1106 + t300 * t285 * t1115 + t496 * t1208 - t255 * t256 * t1132 + t374 * t359 * t1141 + t503 * t1214 - t329 * t330 * t1158 + t448 * t433 * t1167 + t510 * t1220 - t403 * t404 * t1184 + m(4);
t1237 = -t21 * t1054 + t108 * t1196 - t117 * t1080 - t191 * t1106 - t265 * t1132 - t339 * t1158 - t413 * t1184 + t8 * t1190 + t182 * t1202 + t256 * t1208 + t330 * t1214 + t404 * t1220;
t1239 = t548 * t545 * t1037;
t1240 = t557 * t1045;
t1241 = t562 * t1054;
t1243 = t578 * t575 * t1063;
t1244 = t587 * t1071;
t1245 = t592 * t1080;
t1247 = t608 * t605 * t1089;
t1248 = t617 * t1097;
t1249 = t622 * t1106;
t1251 = t638 * t635 * t1115;
t1252 = t647 * t1123;
t1253 = t652 * t1132;
t1255 = t668 * t665 * t1141;
t1256 = t677 * t1149;
t1257 = t682 * t1158;
t1259 = t698 * t695 * t1167;
t1260 = t707 * t1175;
t1261 = t712 * t1184;
t1266 = rSges(4,2) * t528 * t533 - rSges(4,1) * t530 * t533 + t985;
t1270 = (t1028 * t540 + t538 * t1266) * m(4);
t1271 = t1239 + t1240 + t1241 + t1243 + t1244 + t1245 + t1247 + t1248 + t1249 + t1251 + t1252 + t1253 + t1255 + t1256 + t1257 + t1259 + t1260 + t1261 - t1270;
t1276 = t720 * t718 * t1037 + t732 * t1045 + t736 * t1054;
t1281 = t746 * t1037 + t752 * t1045 + t757 * t1054;
t1287 = t766 * t764 * t1063 + t776 * t1071 + t780 * t1080;
t1292 = t790 * t1063 + t796 * t1071 + t801 * t1080;
t1298 = t810 * t808 * t1089 + t820 * t1097 + t824 * t1106;
t1303 = t834 * t1089 + t840 * t1097 + t845 * t1106;
t1309 = t854 * t852 * t1115 + t864 * t1123 + t868 * t1132;
t1314 = t878 * t1115 + t884 * t1123 + t889 * t1132;
t1320 = t898 * t896 * t1141 + t908 * t1149 + t912 * t1158;
t1325 = t922 * t1141 + t928 * t1149 + t933 * t1158;
t1331 = t942 * t940 * t1167 + t952 * t1175 + t956 * t1184;
t1336 = t966 * t1167 + t972 * t1175 + t977 * t1184;
t1340 = rSges(4,3) * t533;
t1342 = (rSges(4,1) * t724 - rSges(4,2) * t726 + t1340) * m(4);
t1344 = t538 * t1276 + t540 * t1281 + t538 * t1287 + t540 * t1292 + t538 * t1298 + t540 * t1303 + t538 * t1309 + t540 * t1314 + t538 * t1320 + t540 * t1325 + t538 * t1331 + t540 * t1336 + t540 * t1342;
t1393 = t533 * (t1239 + t1240 + t1241) - t535 * t540 * t1276 + t535 * t538 * t1281 + t533 * (t1243 + t1244 + t1245) - t535 * t540 * t1287 + t535 * t538 * t1292 + t533 * (t1247 + t1248 + t1249) - t535 * t540 * t1298 + t535 * t538 * t1303 + t533 * (t1251 + t1252 + t1253) - t535 * t540 * t1309 + t535 * t538 * t1314 + t533 * (t1255 + t1256 + t1257) - t535 * t540 * t1320 + t535 * t538 * t1325 + t533 * (t1259 + t1260 + t1261) - t535 * t540 * t1331 + t535 * t538 * t1336 - m(4) * (t530 * (t540 * rSges(4,2) * t533 - t538 * rSges(4,1)) + (t540 * rSges(4,1) * t533 + rSges(4,2) * t538) * t528);
t1394 = t8 * t11;
t1396 = t8 * rSges(3,2);
t1398 = -t1396 * t1050 + t65 * t1394;
t1402 = t82 * t1394 + t1051;
t1406 = -t86 * t1394 - t1050;
t1409 = t108 * t111;
t1411 = t108 * rSges(3,2);
t1413 = -t1411 * t1076 + t144 * t1409;
t1417 = t157 * t1409 + t1077;
t1421 = -t86 * t1409 - t1076;
t1424 = t182 * t185;
t1426 = t182 * rSges(3,2);
t1428 = -t1426 * t1102 + t218 * t1424;
t1432 = t231 * t1424 + t1103;
t1436 = -t86 * t1424 - t1102;
t1439 = t256 * t259;
t1441 = t256 * rSges(3,2);
t1443 = -t1441 * t1128 + t292 * t1439;
t1447 = t305 * t1439 + t1129;
t1451 = -t86 * t1439 - t1128;
t1454 = t330 * t333;
t1456 = t330 * rSges(3,2);
t1458 = -t1456 * t1154 + t366 * t1454;
t1462 = t379 * t1454 + t1155;
t1466 = -t86 * t1454 - t1154;
t1469 = t404 * t407;
t1471 = t404 * rSges(3,2);
t1473 = -t1471 * t1180 + t440 * t1469;
t1477 = t453 * t1469 + t1181;
t1481 = -t86 * t1469 - t1180;
t1484 = t74 * t7 * t1398 + t90 * t52 * t1402 + t8 * t52 * t1406 + t152 * t107 * t1413 + t164 * t137 * t1417 + t108 * t137 * t1421 + t226 * t181 * t1428 + t238 * t211 * t1432 + t182 * t211 * t1436 + t300 * t255 * t1443 + t312 * t285 * t1447 + t256 * t285 * t1451 + t374 * t329 * t1458 + t386 * t359 * t1462 + t330 * t359 * t1466 + t448 * t403 * t1473 + t460 * t433 * t1477 + t404 * t433 * t1481;
t1487 = t11 * t1402;
t1493 = t111 * t1417;
t1499 = t185 * t1432;
t1505 = t259 * t1447;
t1511 = t333 * t1462;
t1517 = t407 * t1477;
t1521 = t74 * t52 * t1398 + t475 * t1487 - t7 * t8 * t1406 + t152 * t137 * t1413 + t482 * t1493 - t107 * t108 * t1421 + t226 * t211 * t1428 + t489 * t1499 - t181 * t182 * t1436 + t300 * t285 * t1443 + t496 * t1505 - t255 * t256 * t1451 + t374 * t359 * t1458 + t503 * t1511 - t329 * t330 * t1466 + t448 * t433 * t1473 + t510 * t1517 - t403 * t404 * t1481;
t1534 = t108 * t1493 - t117 * t1421 - t21 * t1406 - t191 * t1436 - t265 * t1451 - t339 * t1466 - t413 * t1481 + t8 * t1487 + t182 * t1499 + t256 * t1505 + t330 * t1511 + t404 * t1517 + m(4);
t1536 = t548 * t545 * t1398;
t1537 = t557 * t1402;
t1538 = t562 * t1406;
t1540 = t578 * t575 * t1413;
t1541 = t587 * t1417;
t1542 = t592 * t1421;
t1544 = t608 * t605 * t1428;
t1545 = t617 * t1432;
t1546 = t622 * t1436;
t1548 = t638 * t635 * t1443;
t1549 = t647 * t1447;
t1550 = t652 * t1451;
t1552 = t668 * t665 * t1458;
t1553 = t677 * t1462;
t1554 = t682 * t1466;
t1556 = t698 * t695 * t1473;
t1557 = t707 * t1477;
t1558 = t712 * t1481;
t1562 = m(4) * (t1028 * t538 - t540 * t1266);
t1563 = t1536 + t1537 + t1538 + t1540 + t1541 + t1542 + t1544 + t1545 + t1546 + t1548 + t1549 + t1550 + t1552 + t1553 + t1554 + t1556 + t1557 + t1558 + t1562;
t1568 = t720 * t718 * t1398 + t732 * t1402 + t736 * t1406;
t1573 = t746 * t1398 + t752 * t1402 + t757 * t1406;
t1579 = t766 * t764 * t1413 + t776 * t1417 + t780 * t1421;
t1584 = t790 * t1413 + t796 * t1417 + t801 * t1421;
t1590 = t810 * t808 * t1428 + t820 * t1432 + t824 * t1436;
t1595 = t834 * t1428 + t840 * t1432 + t845 * t1436;
t1601 = t854 * t852 * t1443 + t864 * t1447 + t868 * t1451;
t1606 = t878 * t1443 + t884 * t1447 + t889 * t1451;
t1612 = t898 * t896 * t1458 + t908 * t1462 + t912 * t1466;
t1617 = t922 * t1458 + t928 * t1462 + t933 * t1466;
t1623 = t942 * t940 * t1473 + t952 * t1477 + t956 * t1481;
t1628 = t966 * t1473 + t972 * t1477 + t977 * t1481;
t1632 = m(4) * (t535 * t983 - t1340);
t1634 = t538 * t1568 + t540 * t1573 + t538 * t1579 + t540 * t1584 + t538 * t1590 + t540 * t1595 + t538 * t1601 + t540 * t1606 + t538 * t1612 + t540 * t1617 + t538 * t1623 + t540 * t1628 + t538 * t1632;
t1676 = t533 * (t1536 + t1537 + t1538) - t535 * t540 * t1568 + t535 * t538 * t1573 + t533 * (t1540 + t1541 + t1542) - t535 * t540 * t1579 + t535 * t538 * t1584 + t533 * (t1544 + t1545 + t1546) - t535 * t540 * t1590 + t535 * t538 * t1595 + t533 * (t1548 + t1549 + t1550) - t535 * t540 * t1601 + t535 * t538 * t1606 + t533 * (t1552 + t1553 + t1554) - t535 * t540 * t1612 + t535 * t538 * t1617 + t533 * (t1556 + t1557 + t1558) - t535 * t540 * t1623 + t535 * t538 * t1628 + (t538 * t1028 * t533 - t983 * t540) * m(4);
t1677 = t52 * t545;
t1678 = t47 * t74;
t1681 = m(3) * t562;
t1683 = t1396 * t1681 + t1678 * t1677 + t65 * t557;
t1686 = t65 * t74;
t1690 = -rSges(3,1) * t1681 + t1686 * t1677 + t82 * t557;
t1693 = rSges(3,2) * t94;
t1697 = -rSges(3,1) * m(3) * t557 + t1693 * t1677 + t1681;
t1700 = t137 * t575;
t1701 = t132 * t152;
t1704 = m(3) * t592;
t1706 = t1411 * t1704 + t144 * t587 + t1701 * t1700;
t1709 = t144 * t152;
t1713 = -rSges(3,1) * t1704 + t157 * t587 + t1709 * t1700;
t1716 = rSges(3,2) * t168;
t1720 = -rSges(3,1) * m(3) * t587 + t1716 * t1700 + t1704;
t1723 = t211 * t605;
t1724 = t206 * t226;
t1727 = m(3) * t622;
t1729 = t1426 * t1727 + t1724 * t1723 + t218 * t617;
t1732 = t218 * t226;
t1736 = -rSges(3,1) * t1727 + t1732 * t1723 + t231 * t617;
t1739 = rSges(3,2) * t242;
t1743 = -rSges(3,1) * m(3) * t617 + t1739 * t1723 + t1727;
t1746 = t285 * t635;
t1747 = t280 * t300;
t1750 = m(3) * t652;
t1752 = t1441 * t1750 + t1747 * t1746 + t292 * t647;
t1755 = t292 * t300;
t1759 = -rSges(3,1) * t1750 + t1755 * t1746 + t305 * t647;
t1762 = rSges(3,2) * t316;
t1766 = -rSges(3,1) * m(3) * t647 + t1762 * t1746 + t1750;
t1769 = t359 * t665;
t1770 = t354 * t374;
t1773 = m(3) * t682;
t1775 = t1456 * t1773 + t1770 * t1769 + t366 * t677;
t1778 = t366 * t374;
t1782 = -rSges(3,1) * t1773 + t1778 * t1769 + t379 * t677;
t1785 = rSges(3,2) * t390;
t1789 = -rSges(3,1) * m(3) * t677 + t1785 * t1769 + t1773;
t1792 = t433 * t695;
t1793 = t428 * t448;
t1796 = m(3) * t712;
t1798 = t1471 * t1796 + t1793 * t1792 + t440 * t707;
t1801 = t440 * t448;
t1805 = -rSges(3,1) * t1796 + t1801 * t1792 + t453 * t707;
t1808 = rSges(3,2) * t464;
t1812 = -rSges(3,1) * m(3) * t707 + t1808 * t1792 + t1796;
t1815 = t74 * t7 * t1683 + t90 * t52 * t1690 + t8 * t52 * t1697 + t152 * t107 * t1706 + t164 * t137 * t1713 + t108 * t137 * t1720 + t226 * t181 * t1729 + t238 * t211 * t1736 + t182 * t211 * t1743 + t300 * t255 * t1752 + t312 * t285 * t1759 + t256 * t285 * t1766 + t374 * t329 * t1775 + t386 * t359 * t1782 + t330 * t359 * t1789 + t448 * t403 * t1798 + t460 * t433 * t1805 + t404 * t433 * t1812;
t1818 = t11 * t1690;
t1824 = t111 * t1713;
t1830 = t185 * t1736;
t1836 = t259 * t1759;
t1842 = t333 * t1782;
t1848 = t407 * t1805;
t1852 = t74 * t52 * t1683 + t475 * t1818 - t7 * t8 * t1697 + t152 * t137 * t1706 + t482 * t1824 - t107 * t108 * t1720 + t226 * t211 * t1729 + t489 * t1830 - t181 * t182 * t1743 + t300 * t285 * t1752 + t496 * t1836 - t255 * t256 * t1766 + t374 * t359 * t1775 + t503 * t1842 - t329 * t330 * t1789 + t448 * t433 * t1798 + t510 * t1848 - t403 * t404 * t1812 - t1270;
t1865 = t108 * t1824 - t117 * t1720 - t21 * t1697 - t191 * t1743 - t265 * t1766 - t339 * t1789 - t413 * t1812 + t8 * t1818 + t182 * t1830 + t256 * t1836 + t330 * t1842 + t404 * t1848 + t1562;
t1867 = t548 * t545 * t1683;
t1868 = t557 * t1690;
t1869 = t562 * t1697;
t1871 = t578 * t575 * t1706;
t1872 = t587 * t1713;
t1873 = t592 * t1720;
t1875 = t608 * t605 * t1729;
t1876 = t617 * t1736;
t1877 = t622 * t1743;
t1879 = t638 * t635 * t1752;
t1880 = t647 * t1759;
t1881 = t1867 + t1868 + t1869 + t1871 + t1872 + t1873 + t1875 + t1876 + t1877 + t1879 + t1880;
t1882 = t652 * t1766;
t1884 = t668 * t665 * t1775;
t1885 = t677 * t1782;
t1886 = t682 * t1789;
t1888 = t698 * t695 * t1798;
t1889 = t707 * t1805;
t1890 = t712 * t1812;
t1891 = rSges(4,1) ^ 2;
t1892 = rSges(4,2) ^ 2;
t1895 = m(4) * (-t1891 + t1892) + Icges(4,1) - Icges(4,2);
t1896 = t530 ^ 2;
t1898 = rSges(4,1) * m(4);
t1899 = rSges(4,2) * t1898;
t1900 = -t1899 + Icges(4,4);
t1904 = rSges(4,3) ^ 2;
t1906 = m(4) * (-t1892 + t1904);
t1907 = -0.2e1 * t530 * t1900 * t528 + t1896 * t1895 + Icges(4,2) - Icges(4,3) + t1906;
t1908 = t535 ^ 2;
t1911 = rSges(4,3) * t1898 - Icges(4,5);
t1915 = m(4) * rSges(4,2) * rSges(4,3) - Icges(4,6);
t1917 = t530 * t1911 - t1915 * t528;
t1922 = (t1891 + t1892) * m(4);
t1923 = -0.2e1 * t535 * t1917 * t533 + t1908 * t1907 + Icges(4,3) + t1882 + t1884 + t1885 + t1886 + t1888 + t1889 + t1890 + t1922;
t1929 = t720 * t718 * t1683 + t732 * t1690 + t736 * t1697;
t1934 = t746 * t1683 + t752 * t1690 + t757 * t1697;
t1940 = t766 * t764 * t1706 + t776 * t1713 + t780 * t1720;
t1945 = t790 * t1706 + t796 * t1713 + t801 * t1720;
t1951 = t810 * t808 * t1729 + t820 * t1736 + t824 * t1743;
t1956 = t834 * t1729 + t840 * t1736 + t845 * t1743;
t1962 = t854 * t852 * t1752 + t864 * t1759 + t868 * t1766;
t1967 = t878 * t1752 + t884 * t1759 + t889 * t1766;
t1973 = t898 * t896 * t1775 + t908 * t1782 + t912 * t1789;
t1978 = t922 * t1775 + t928 * t1782 + t933 * t1789;
t1984 = t942 * t940 * t1798 + t952 * t1805 + t956 * t1812;
t1989 = t966 * t1798 + t972 * t1805 + t977 * t1812;
t1992 = t1895 * t528;
t1994 = 0.2e1 * t1896 * t1900 + t530 * t1992 - Icges(4,4) + t1899;
t1998 = -t1911 * t528 - t530 * t1915;
t2000 = t538 * t1929 + t540 * t1934 + t538 * t1940 + t540 * t1945 + t538 * t1951 + t540 * t1956 + t538 * t1962 + t540 * t1967 + t538 * t1973 + t540 * t1978 + t538 * t1984 + t540 * t1989 + t535 * t1994 + t533 * t1998;
t2038 = -t1915 * t528;
t2041 = Icges(4,3) + t1922;
t2043 = t533 * (t1867 + t1868 + t1869) - t535 * t540 * t1929 + t535 * t538 * t1934 + t533 * (t1871 + t1872 + t1873) - t535 * t540 * t1940 + t535 * t538 * t1945 + t533 * (t1875 + t1876 + t1877) - t535 * t540 * t1951 + t535 * t538 * t1956 + t533 * (t1879 + t1880 + t1882) - t535 * t540 * t1962 + t535 * t538 * t1967 + t533 * (t1884 + t1885 + t1886) - t535 * t540 * t1973 + t535 * t538 * t1978 + t533 * (t1888 + t1889 + t1890) - t535 * t540 * t1984 + t535 * t538 * t1989 + t535 * (-t530 * t1911 - t2038) + t533 * t2041;
t2044 = t7 * t718;
t2047 = m(3) * t736;
t2049 = t1396 * t2047 + t1678 * t2044 + t65 * t732;
t2055 = -rSges(3,1) * t2047 + t1686 * t2044 + t82 * t732;
t2061 = -rSges(3,1) * m(3) * t732 + t1693 * t2044 + t2047;
t2064 = t107 * t764;
t2067 = m(3) * t780;
t2069 = t1411 * t2067 + t144 * t776 + t1701 * t2064;
t2075 = -rSges(3,1) * t2067 + t157 * t776 + t1709 * t2064;
t2081 = -rSges(3,1) * m(3) * t776 + t1716 * t2064 + t2067;
t2084 = t181 * t808;
t2087 = m(3) * t824;
t2089 = t1426 * t2087 + t1724 * t2084 + t218 * t820;
t2095 = -rSges(3,1) * t2087 + t1732 * t2084 + t231 * t820;
t2101 = -rSges(3,1) * m(3) * t820 + t1739 * t2084 + t2087;
t2104 = t255 * t852;
t2107 = m(3) * t868;
t2109 = t1441 * t2107 + t1747 * t2104 + t292 * t864;
t2115 = -rSges(3,1) * t2107 + t1755 * t2104 + t305 * t864;
t2121 = -rSges(3,1) * m(3) * t864 + t1762 * t2104 + t2107;
t2124 = t329 * t896;
t2127 = m(3) * t912;
t2129 = t1456 * t2127 + t1770 * t2124 + t366 * t908;
t2135 = -rSges(3,1) * t2127 + t1778 * t2124 + t379 * t908;
t2141 = -rSges(3,1) * m(3) * t908 + t1785 * t2124 + t2127;
t2144 = t403 * t940;
t2147 = m(3) * t956;
t2149 = t1471 * t2147 + t1793 * t2144 + t440 * t952;
t2155 = -rSges(3,1) * t2147 + t1801 * t2144 + t453 * t952;
t2161 = -rSges(3,1) * m(3) * t952 + t1808 * t2144 + t2147;
t2164 = t74 * t7 * t2049 + t90 * t52 * t2055 + t8 * t52 * t2061 + t152 * t107 * t2069 + t164 * t137 * t2075 + t108 * t137 * t2081 + t226 * t181 * t2089 + t238 * t211 * t2095 + t182 * t211 * t2101 + t300 * t255 * t2109 + t312 * t285 * t2115 + t256 * t285 * t2121 + t374 * t329 * t2129 + t386 * t359 * t2135 + t330 * t359 * t2141 + t448 * t403 * t2149 + t460 * t433 * t2155 + t404 * t433 * t2161 + t1270;
t2167 = t11 * t2055;
t2173 = t111 * t2075;
t2179 = t185 * t2095;
t2185 = t259 * t2115;
t2191 = t333 * t2135;
t2197 = t407 * t2155;
t2201 = t74 * t52 * t2049 + t475 * t2167 - t7 * t8 * t2061 + t152 * t137 * t2069 + t482 * t2173 - t107 * t108 * t2081 + t226 * t211 * t2089 + t489 * t2179 - t181 * t182 * t2101 + t300 * t285 * t2109 + t496 * t2185 - t255 * t256 * t2121 + t374 * t359 * t2129 + t503 * t2191 - t329 * t330 * t2141 + t448 * t433 * t2149 + t510 * t2197 - t403 * t404 * t2161;
t2214 = t108 * t2173 - t117 * t2081 + t182 * t2179 - t191 * t2101 - t21 * t2061 - t265 * t2121 - t339 * t2141 - t413 * t2161 + t8 * t2167 + t256 * t2185 + t330 * t2191 + t404 * t2197 + t1632;
t2216 = t548 * t545 * t2049;
t2217 = t557 * t2055;
t2218 = t562 * t2061;
t2220 = t578 * t575 * t2069;
t2221 = t587 * t2075;
t2222 = t592 * t2081;
t2224 = t608 * t605 * t2089;
t2225 = t617 * t2095;
t2226 = t622 * t2101;
t2228 = t638 * t635 * t2109;
t2229 = t647 * t2115;
t2230 = t2216 + t2217 + t2218 + t2220 + t2221 + t2222 + t2224 + t2225 + t2226 + t2228 + t2229;
t2231 = t652 * t2121;
t2233 = t668 * t665 * t2129;
t2234 = t677 * t2135;
t2235 = t682 * t2141;
t2237 = t698 * t695 * t2149;
t2238 = t707 * t2155;
t2239 = t712 * t2161;
t2245 = t1900 * t538;
t2249 = t1900 * t533;
t2253 = t1895 * t538 - 0.2e1 * t540 * t2249;
t2262 = t533 * t538;
t2270 = t2231 + t2233 + t2234 + t2235 + t2237 + t2238 + t2239 + 0.2e1 * t1908 * t540 * t1917 + t535 * (t1896 * (t540 * t533 * t1895 + 0.2e1 * t2245) + t530 * t2253 * t528 + t540 * t533 * (t1906 + Icges(4,2) - Icges(4,3)) - t2245) + t530 * (-t540 * t1911 - t1915 * t2262) - t528 * (t1911 * t2262 - t540 * t1915);
t2276 = t720 * t718 * t2049 + t732 * t2055 + t736 * t2061;
t2281 = t746 * t2049 + t752 * t2055 + t757 * t2061;
t2287 = t766 * t764 * t2069 + t776 * t2075 + t780 * t2081;
t2292 = t790 * t2069 + t796 * t2075 + t801 * t2081;
t2298 = t810 * t808 * t2089 + t820 * t2095 + t824 * t2101;
t2303 = t834 * t2089 + t840 * t2095 + t845 * t2101;
t2309 = t854 * t852 * t2109 + t864 * t2115 + t868 * t2121;
t2314 = t878 * t2109 + t884 * t2115 + t889 * t2121;
t2320 = t898 * t896 * t2129 + t908 * t2135 + t912 * t2141;
t2325 = t922 * t2129 + t928 * t2135 + t933 * t2141;
t2331 = t942 * t940 * t2149 + t952 * t2155 + t956 * t2161;
t2336 = t966 * t2149 + t972 * t2155 + t977 * t2161;
t2341 = t1915 * t535 + t533 * t1992;
t2349 = -t1911 * t726;
t2354 = Icges(4,1) + (t1892 + t1904) * m(4);
t2356 = t538 * t2276 + t540 * t2281 + t538 * t2287 + t540 * t2292 + t538 * t2298 + t540 * t2303 + t538 * t2309 + t540 * t2314 + t538 * t2320 + t540 * t2325 + t538 * t2331 + t540 * t2336 - t1896 * t2253 + t530 * (0.2e1 * t1900 * t528 * t538 + t540 * t2341) + t540 * (-t1900 * t533 - t2349) + t538 * t2354;
t2397 = -t530 * t1911 * t533 - t533 * t2038 - t535 * t2041;
t2400 = t533 * (t2216 + t2217 + t2218) - t535 * t540 * t2276 + t535 * t538 * t2281 + t533 * (t2220 + t2221 + t2222) - t535 * t540 * t2287 + t535 * t538 * t2292 + t533 * (t2224 + t2225 + t2226) - t535 * t540 * t2298 + t535 * t538 * t2303 + t533 * (t2228 + t2229 + t2231) - t535 * t540 * t2309 + t535 * t538 * t2314 + t533 * (t2233 + t2234 + t2235) - t535 * t540 * t2320 + t535 * t538 * t2325 + t533 * (t2237 + t2238 + t2239) - t535 * t540 * t2331 + t535 * t538 * t2336 + t540 * t2397 + t1998 * t538;
t2403 = m(3) * t757;
t2405 = t1396 * t2403 + t47 * t746 + t65 * t752;
t2411 = -rSges(3,1) * t2403 + t65 * t746 + t82 * t752;
t2418 = -rSges(3,1) * m(3) * t752 + t1396 * m(3) * t746 + t2403;
t2423 = m(3) * t801;
t2425 = t132 * t790 + t1411 * t2423 + t144 * t796;
t2431 = -rSges(3,1) * t2423 + t144 * t790 + t157 * t796;
t2438 = -rSges(3,1) * m(3) * t796 + t1411 * m(3) * t790 + t2423;
t2443 = m(3) * t845;
t2445 = t1426 * t2443 + t206 * t834 + t218 * t840;
t2451 = -rSges(3,1) * t2443 + t218 * t834 + t231 * t840;
t2458 = -rSges(3,1) * m(3) * t840 + t1426 * m(3) * t834 + t2443;
t2463 = m(3) * t889;
t2465 = t1441 * t2463 + t280 * t878 + t292 * t884;
t2471 = -rSges(3,1) * t2463 + t292 * t878 + t305 * t884;
t2478 = -rSges(3,1) * m(3) * t884 + t1441 * m(3) * t878 + t2463;
t2483 = m(3) * t933;
t2485 = t1456 * t2483 + t354 * t922 + t366 * t928;
t2491 = -rSges(3,1) * t2483 + t366 * t922 + t379 * t928;
t2498 = -rSges(3,1) * m(3) * t928 + t1456 * m(3) * t922 + t2483;
t2503 = m(3) * t977;
t2505 = t1471 * t2503 + t428 * t966 + t440 * t972;
t2511 = -rSges(3,1) * t2503 + t440 * t966 + t453 * t972;
t2518 = -rSges(3,1) * m(3) * t972 + t1471 * m(3) * t966 + t2503;
t2521 = t74 * t7 * t2405 + t90 * t52 * t2411 + t8 * t52 * t2418 + t152 * t107 * t2425 + t164 * t137 * t2431 + t108 * t137 * t2438 + t226 * t181 * t2445 + t238 * t211 * t2451 + t182 * t211 * t2458 + t300 * t255 * t2465 + t312 * t285 * t2471 + t256 * t285 * t2478 + t374 * t329 * t2485 + t386 * t359 * t2491 + t330 * t359 * t2498 + t448 * t403 * t2505 + t460 * t433 * t2511 + t404 * t433 * t2518 - t1562;
t2524 = t11 * t2411;
t2530 = t111 * t2431;
t2536 = t185 * t2451;
t2542 = t259 * t2471;
t2548 = t333 * t2491;
t2554 = t407 * t2511;
t2558 = t74 * t52 * t2405 + t475 * t2524 - t7 * t8 * t2418 + t152 * t137 * t2425 + t482 * t2530 - t107 * t108 * t2438 + t226 * t211 * t2445 + t489 * t2536 - t181 * t182 * t2458 + t300 * t285 * t2465 + t496 * t2542 - t255 * t256 * t2478 + t374 * t359 * t2485 + t503 * t2548 - t329 * t330 * t2498 + t448 * t433 * t2505 + t510 * t2554 - t403 * t404 * t2518 + t1342;
t2571 = t108 * t2530 - t117 * t2438 + t182 * t2536 - t191 * t2458 - t21 * t2418 - t265 * t2478 - t339 * t2498 - t413 * t2518 + t8 * t2524 + t256 * t2542 + t330 * t2548 + t404 * t2554;
t2573 = t548 * t545 * t2405;
t2574 = t557 * t2411;
t2575 = t562 * t2418;
t2577 = t578 * t575 * t2425;
t2578 = t587 * t2431;
t2579 = t592 * t2438;
t2581 = t608 * t605 * t2445;
t2582 = t617 * t2451;
t2583 = t622 * t2458;
t2585 = t638 * t635 * t2465;
t2586 = t647 * t2471;
t2587 = t2573 + t2574 + t2575 + t2577 + t2578 + t2579 + t2581 + t2582 + t2583 + t2585 + t2586;
t2588 = t652 * t2478;
t2590 = t668 * t665 * t2485;
t2591 = t677 * t2491;
t2592 = t682 * t2498;
t2594 = t698 * t695 * t2505;
t2595 = t707 * t2511;
t2596 = t712 * t2518;
t2597 = t1917 * t538;
t2610 = t2588 + t2590 + t2591 + t2592 + t2594 + t2595 + t2596 - 0.2e1 * t1908 * t2597 + t535 * (-t538 * t533 * t1907 + t540 * t1994) + t2597 - t533 * (t1911 * t528 + t530 * t1915) * t540;
t2616 = t720 * t718 * t2405 + t732 * t2411 + t736 * t2418;
t2621 = t746 * t2405 + t752 * t2411 + t757 * t2418;
t2627 = t766 * t764 * t2425 + t776 * t2431 + t780 * t2438;
t2632 = t790 * t2425 + t796 * t2431 + t801 * t2438;
t2638 = t810 * t808 * t2445 + t820 * t2451 + t824 * t2458;
t2643 = t834 * t2445 + t840 * t2451 + t845 * t2458;
t2649 = t854 * t852 * t2465 + t864 * t2471 + t868 * t2478;
t2654 = t878 * t2465 + t884 * t2471 + t889 * t2478;
t2660 = t898 * t896 * t2485 + t908 * t2491 + t912 * t2498;
t2665 = t922 * t2485 + t928 * t2491 + t933 * t2498;
t2671 = t942 * t940 * t2505 + t952 * t2511 + t956 * t2518;
t2676 = t966 * t2505 + t972 * t2511 + t977 * t2518;
t2692 = t538 * t2616 + t540 * t2621 + t538 * t2627 + t540 * t2632 + t538 * t2638 + t540 * t2643 + t538 * t2649 + t540 * t2654 + t538 * t2660 + t540 * t2665 + t538 * t2671 + t540 * t2676 + t1896 * (-t1895 * t540 - 0.2e1 * t538 * t2249) + t530 * (0.2e1 * t1900 * t528 * t540 - t538 * t2341) + t538 * (t2249 + t2349) + t2354 * t540;
t2731 = t533 * (t2573 + t2574 + t2575) - t535 * t540 * t2616 + t535 * t538 * t2621 + t533 * (t2577 + t2578 + t2579) - t535 * t540 * t2627 + t535 * t538 * t2632 + t533 * (t2581 + t2582 + t2583) - t535 * t540 * t2638 + t535 * t538 * t2643 + t533 * (t2585 + t2586 + t2588) - t535 * t540 * t2649 + t535 * t538 * t2654 + t533 * (t2590 + t2591 + t2592) - t535 * t540 * t2660 + t535 * t538 * t2665 + t533 * (t2594 + t2595 + t2596) - t535 * t540 * t2671 + t535 * t538 * t2676 - t538 * t2397 + t1998 * t540;
unknown(1,1) = t471;
unknown(1,2) = t514;
unknown(1,3) = t527;
unknown(1,4) = t714;
unknown(1,5) = t988;
unknown(1,6) = t1030;
unknown(2,1) = t1187;
unknown(2,2) = t1224;
unknown(2,3) = t1237;
unknown(2,4) = t1271;
unknown(2,5) = t1344;
unknown(2,6) = t1393;
unknown(3,1) = t1484;
unknown(3,2) = t1521;
unknown(3,3) = t1534;
unknown(3,4) = t1563;
unknown(3,5) = t1634;
unknown(3,6) = t1676;
unknown(4,1) = t1815;
unknown(4,2) = t1852;
unknown(4,3) = t1865;
unknown(4,4) = t1881 + t1923;
unknown(4,5) = t2000;
unknown(4,6) = t2043;
unknown(5,1) = t2164;
unknown(5,2) = t2201;
unknown(5,3) = t2214;
unknown(5,4) = t2230 + t2270;
unknown(5,5) = t2356;
unknown(5,6) = t2400;
unknown(6,1) = t2521;
unknown(6,2) = t2558;
unknown(6,3) = t2571;
unknown(6,4) = t2587 + t2610;
unknown(6,5) = t2692;
unknown(6,6) = t2731;
MX  = unknown;
