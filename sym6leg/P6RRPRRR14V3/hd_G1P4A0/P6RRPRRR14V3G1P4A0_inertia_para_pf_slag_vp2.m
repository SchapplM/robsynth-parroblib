% Calculate inertia matrix for parallel robot
% P6RRPRRR14V3G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:28
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(1,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: pkin has to be [1x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:27:07
% EndTime: 2020-03-12 23:27:09
% DurationCPUTime: 2.23s
% Computational Cost: add. (26871->1290), mult. (50529->2113), div. (4320->12), fcn. (48832->42), ass. (0->790)
unknown=NaN(6,6);
t1 = sin(legFrame(1,3));
t2 = cos(qJ(1,1));
t4 = sin(qJ(1,1));
t5 = cos(legFrame(1,3));
t7 = -t2 * t1 - t5 * t4;
t8 = sin(qJ(2,1));
t9 = 0.1e1 / t8;
t10 = t9 * t7;
t11 = 0.1e1 / qJ(3,1);
t12 = qJ(3,1) ^ 2;
t13 = (t12 * m(3));
t15 = 2 * mrSges(3,3) * qJ(3,1);
t17 = cos(qJ(2,1));
t18 = t17 ^ 2;
t25 = t18 * (-t13 - t15 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t17 * (mrSges(3,1) * qJ(3,1) + Ifges(2,4) - Ifges(3,5)) * t8 + t13 + t15 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t26 = t25 * t11;
t30 = -t4 * t1 + t5 * t2;
t31 = t17 * t30;
t32 = Ifges(3,4) + Ifges(2,5);
t37 = t8 * t32 + (qJ(3,1) * mrSges(3,2) + Ifges(2,6) - Ifges(3,6)) * t17;
t38 = t37 * t11;
t40 = t8 ^ 2;
t43 = mrSges(3,2) * t40 * t30 + t26 * t10 + t38 * t31;
t45 = t11 * t9;
t48 = t13 + t15 + Ifges(3,2) + Ifges(2,3);
t51 = t8 * t30;
t53 = t48 * t11 * t31 - mrSges(3,1) * t51 + t38 * t10;
t55 = t11 * t17;
t62 = -mrSges(3,1) * t11 * t31 + mrSges(3,2) * t11 * t7 + m(3) * t51;
t65 = sin(legFrame(2,3));
t66 = cos(qJ(1,2));
t68 = sin(qJ(1,2));
t69 = cos(legFrame(2,3));
t71 = -t66 * t65 - t69 * t68;
t72 = sin(qJ(2,2));
t73 = 0.1e1 / t72;
t74 = t73 * t71;
t75 = 0.1e1 / qJ(3,2);
t76 = qJ(3,2) ^ 2;
t77 = t76 * m(3);
t79 = 2 * mrSges(3,3) * qJ(3,2);
t81 = cos(qJ(2,2));
t82 = t81 ^ 2;
t89 = t82 * (-t77 - t79 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t81 * (mrSges(3,1) * qJ(3,2) + Ifges(2,4) - Ifges(3,5)) * t72 + t77 + t79 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t90 = t89 * t75;
t94 = -t68 * t65 + t69 * t66;
t95 = t81 * t94;
t100 = t72 * t32 + (mrSges(3,2) * qJ(3,2) + Ifges(2,6) - Ifges(3,6)) * t81;
t101 = t100 * t75;
t103 = t72 ^ 2;
t106 = mrSges(3,2) * t103 * t94 + t101 * t95 + t90 * t74;
t108 = t75 * t73;
t111 = t77 + t79 + Ifges(3,2) + Ifges(2,3);
t114 = t72 * t94;
t116 = t111 * t75 * t95 - mrSges(3,1) * t114 + t101 * t74;
t118 = t75 * t81;
t125 = -mrSges(3,1) * t75 * t95 + mrSges(3,2) * t75 * t71 + m(3) * t114;
t128 = sin(legFrame(3,3));
t129 = cos(qJ(1,3));
t131 = sin(qJ(1,3));
t132 = cos(legFrame(3,3));
t134 = -t129 * t128 - t132 * t131;
t135 = sin(qJ(2,3));
t136 = 0.1e1 / t135;
t137 = t136 * t134;
t138 = 0.1e1 / qJ(3,3);
t139 = qJ(3,3) ^ 2;
t140 = t139 * m(3);
t142 = 2 * mrSges(3,3) * qJ(3,3);
t144 = cos(qJ(2,3));
t145 = t144 ^ 2;
t152 = t145 * (-t140 - t142 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t144 * (mrSges(3,1) * qJ(3,3) + Ifges(2,4) - Ifges(3,5)) * t135 + t140 + t142 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t153 = t152 * t138;
t157 = -t131 * t128 + t132 * t129;
t158 = t144 * t157;
t163 = t135 * t32 + (mrSges(3,2) * qJ(3,3) + Ifges(2,6) - Ifges(3,6)) * t144;
t164 = t163 * t138;
t166 = t135 ^ 2;
t169 = mrSges(3,2) * t166 * t157 + t153 * t137 + t164 * t158;
t171 = t138 * t136;
t174 = t140 + t142 + Ifges(3,2) + Ifges(2,3);
t177 = t135 * t157;
t179 = t174 * t138 * t158 - mrSges(3,1) * t177 + t164 * t137;
t181 = t138 * t144;
t188 = -mrSges(3,1) * t138 * t158 + mrSges(3,2) * t138 * t134 + m(3) * t177;
t191 = sin(legFrame(4,3));
t192 = cos(qJ(1,4));
t194 = sin(qJ(1,4));
t195 = cos(legFrame(4,3));
t197 = -t192 * t191 - t195 * t194;
t198 = sin(qJ(2,4));
t199 = 0.1e1 / t198;
t200 = t199 * t197;
t201 = 0.1e1 / qJ(3,4);
t202 = qJ(3,4) ^ 2;
t203 = t202 * m(3);
t205 = 2 * mrSges(3,3) * qJ(3,4);
t207 = cos(qJ(2,4));
t208 = t207 ^ 2;
t215 = t208 * (-t203 - t205 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t207 * (mrSges(3,1) * qJ(3,4) + Ifges(2,4) - Ifges(3,5)) * t198 + t203 + t205 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t216 = t215 * t201;
t220 = -t194 * t191 + t195 * t192;
t221 = t207 * t220;
t226 = t198 * t32 + (mrSges(3,2) * qJ(3,4) + Ifges(2,6) - Ifges(3,6)) * t207;
t227 = t226 * t201;
t229 = t198 ^ 2;
t232 = mrSges(3,2) * t229 * t220 + t216 * t200 + t227 * t221;
t234 = t201 * t199;
t237 = t203 + t205 + Ifges(3,2) + Ifges(2,3);
t240 = t198 * t220;
t242 = t237 * t201 * t221 - mrSges(3,1) * t240 + t227 * t200;
t244 = t201 * t207;
t251 = -mrSges(3,1) * t201 * t221 + mrSges(3,2) * t201 * t197 + m(3) * t240;
t254 = sin(legFrame(5,3));
t255 = cos(qJ(1,5));
t257 = sin(qJ(1,5));
t258 = cos(legFrame(5,3));
t260 = -t255 * t254 - t258 * t257;
t261 = sin(qJ(2,5));
t262 = 0.1e1 / t261;
t263 = t262 * t260;
t264 = 0.1e1 / qJ(3,5);
t265 = qJ(3,5) ^ 2;
t266 = t265 * m(3);
t268 = 2 * mrSges(3,3) * qJ(3,5);
t270 = cos(qJ(2,5));
t271 = t270 ^ 2;
t278 = t271 * (-t266 - t268 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t270 * (mrSges(3,1) * qJ(3,5) + Ifges(2,4) - Ifges(3,5)) * t261 + t266 + t268 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t279 = t278 * t264;
t283 = -t257 * t254 + t258 * t255;
t284 = t270 * t283;
t289 = t261 * t32 + (mrSges(3,2) * qJ(3,5) + Ifges(2,6) - Ifges(3,6)) * t270;
t290 = t289 * t264;
t292 = t261 ^ 2;
t295 = mrSges(3,2) * t292 * t283 + t279 * t263 + t290 * t284;
t297 = t264 * t262;
t300 = t266 + t268 + Ifges(3,2) + Ifges(2,3);
t303 = t261 * t283;
t305 = t300 * t264 * t284 - mrSges(3,1) * t303 + t290 * t263;
t307 = t264 * t270;
t314 = -mrSges(3,1) * t264 * t284 + mrSges(3,2) * t264 * t260 + m(3) * t303;
t317 = sin(legFrame(6,3));
t318 = cos(qJ(1,6));
t320 = sin(qJ(1,6));
t321 = cos(legFrame(6,3));
t323 = -t318 * t317 - t321 * t320;
t324 = sin(qJ(2,6));
t325 = 0.1e1 / t324;
t326 = t325 * t323;
t327 = 0.1e1 / qJ(3,6);
t328 = qJ(3,6) ^ 2;
t329 = t328 * m(3);
t331 = 2 * mrSges(3,3) * qJ(3,6);
t333 = cos(qJ(2,6));
t334 = t333 ^ 2;
t341 = t334 * (-t329 - t331 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t333 * (mrSges(3,1) * qJ(3,6) + Ifges(2,4) - Ifges(3,5)) * t324 + t329 + t331 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t342 = t341 * t327;
t346 = -t320 * t317 + t321 * t318;
t347 = t333 * t346;
t352 = t324 * t32 + (mrSges(3,2) * qJ(3,6) + Ifges(2,6) - Ifges(3,6)) * t333;
t353 = t352 * t327;
t355 = t324 ^ 2;
t358 = mrSges(3,2) * t355 * t346 + t342 * t326 + t353 * t347;
t360 = t327 * t325;
t363 = t329 + t331 + Ifges(3,2) + Ifges(2,3);
t366 = t324 * t346;
t368 = t363 * t327 * t347 - mrSges(3,1) * t366 + t353 * t326;
t370 = t327 * t333;
t377 = -mrSges(3,1) * t327 * t347 + mrSges(3,2) * t327 * t323 + m(3) * t366;
t380 = t45 * t7 * t43 + t55 * t30 * t53 + t8 * t30 * t62 + t108 * t71 * t106 + t118 * t94 * t116 + t72 * t94 * t125 + t171 * t134 * t169 + t181 * t157 * t179 + t135 * t157 * t188 + t234 * t197 * t232 + t244 * t220 * t242 + t198 * t220 * t251 + t297 * t260 * t295 + t307 * t283 * t305 + t261 * t283 * t314 + t360 * t323 * t358 + t370 * t346 * t368 + t324 * t346 * t377 + m(4);
t383 = t11 * t53;
t384 = -t17 * t7;
t390 = t75 * t116;
t391 = -t81 * t71;
t397 = t138 * t179;
t398 = -t144 * t134;
t404 = t201 * t242;
t405 = -t207 * t197;
t411 = t264 * t305;
t412 = -t270 * t260;
t418 = t327 * t368;
t419 = -t333 * t323;
t423 = t45 * t30 * t43 + t384 * t383 - t7 * t8 * t62 + t108 * t94 * t106 + t391 * t390 - t71 * t72 * t125 + t171 * t157 * t169 + t398 * t397 - t134 * t135 * t188 + t234 * t220 * t232 + t405 * t404 - t197 * t198 * t251 + t297 * t283 * t295 + t412 * t411 - t260 * t261 * t314 + t360 * t346 * t358 + t419 * t418 - t323 * t324 * t377;
t436 = -t81 * t125 + t135 * t397 - t144 * t188 - t17 * t62 + t198 * t404 - t207 * t251 + t261 * t411 - t270 * t314 + t324 * t418 - t333 * t377 + t8 * t383 + t72 * t390;
t437 = sin(xP(6));
t439 = cos(xP(6));
t441 = -koppelP(1,2) * t437 + t439 * koppelP(1,1);
t442 = sin(xP(5));
t444 = cos(xP(5));
t445 = koppelP(1,3) * t444;
t446 = t442 * t441 - t445;
t447 = cos(xP(4));
t449 = sin(xP(4));
t452 = koppelP(1,1) * t437 + koppelP(1,2) * t439;
t453 = t452 * t449;
t454 = t447 * t446 - t453;
t456 = t9 * t30;
t457 = t11 * t456;
t458 = t457 * t454 * t43;
t462 = t452 * t447;
t463 = t449 * t446 + t462;
t466 = t384 * t11 * t454 + t8 * t11 * t463;
t467 = t466 * t53;
t471 = -t7 * t8 * t454 - t17 * t463;
t472 = t471 * t62;
t475 = -koppelP(2,2) * t437 + t439 * koppelP(2,1);
t477 = koppelP(2,3) * t444;
t478 = t442 * t475 - t477;
t482 = koppelP(2,1) * t437 + koppelP(2,2) * t439;
t483 = t482 * t449;
t484 = t447 * t478 - t483;
t486 = t73 * t94;
t487 = t75 * t486;
t488 = t487 * t484 * t106;
t492 = t482 * t447;
t493 = t449 * t478 + t492;
t496 = t391 * t75 * t484 + t72 * t75 * t493;
t497 = t496 * t116;
t501 = -t71 * t72 * t484 - t81 * t493;
t502 = t501 * t125;
t505 = -koppelP(3,2) * t437 + t439 * koppelP(3,1);
t507 = koppelP(3,3) * t444;
t508 = t442 * t505 - t507;
t512 = koppelP(3,1) * t437 + koppelP(3,2) * t439;
t513 = t512 * t449;
t514 = t447 * t508 - t513;
t516 = t136 * t157;
t517 = t138 * t516;
t518 = t517 * t514 * t169;
t522 = t512 * t447;
t523 = t449 * t508 + t522;
t526 = t135 * t138 * t523 + t398 * t138 * t514;
t527 = t526 * t179;
t531 = -t134 * t135 * t514 - t144 * t523;
t532 = t531 * t188;
t535 = -koppelP(4,2) * t437 + t439 * koppelP(4,1);
t537 = koppelP(4,3) * t444;
t538 = t442 * t535 - t537;
t542 = koppelP(4,1) * t437 + koppelP(4,2) * t439;
t543 = t542 * t449;
t544 = t447 * t538 - t543;
t546 = t199 * t220;
t547 = t201 * t546;
t548 = t547 * t544 * t232;
t552 = t542 * t447;
t553 = t449 * t538 + t552;
t556 = t198 * t201 * t553 + t405 * t201 * t544;
t557 = t556 * t242;
t561 = -t197 * t198 * t544 - t207 * t553;
t562 = t561 * t251;
t565 = -koppelP(5,2) * t437 + t439 * koppelP(5,1);
t567 = koppelP(5,3) * t444;
t568 = t442 * t565 - t567;
t572 = koppelP(5,1) * t437 + koppelP(5,2) * t439;
t573 = t572 * t449;
t574 = t447 * t568 - t573;
t576 = t262 * t283;
t577 = t264 * t576;
t578 = t577 * t574 * t295;
t582 = t572 * t447;
t583 = t449 * t568 + t582;
t586 = t261 * t264 * t583 + t412 * t264 * t574;
t587 = t586 * t305;
t591 = -t260 * t261 * t574 - t270 * t583;
t592 = t591 * t314;
t595 = -koppelP(6,2) * t437 + t439 * koppelP(6,1);
t597 = koppelP(6,3) * t444;
t598 = t442 * t595 - t597;
t602 = koppelP(6,1) * t437 + t439 * koppelP(6,2);
t603 = t602 * t449;
t604 = t447 * t598 - t603;
t606 = t325 * t346;
t607 = t327 * t606;
t608 = t607 * t604 * t358;
t612 = t602 * t447;
t613 = t449 * t598 + t612;
t616 = t324 * t327 * t613 + t419 * t327 * t604;
t617 = t616 * t368;
t621 = -t323 * t324 * t604 - t333 * t613;
t622 = t621 * t377;
t623 = t458 + t467 + t472 + t488 + t497 + t502 + t518 + t527 + t532 + t548 + t557 + t562 + t578 + t587 + t592 + t608 + t617 + t622;
t625 = -t442 * t441 + t445;
t627 = t447 * t625 + t453;
t629 = t11 * t10;
t631 = t30 * t627;
t633 = t439 * t444;
t635 = t437 * t444;
t638 = -koppelP(1,3) * t442 - koppelP(1,1) * t633 + koppelP(1,2) * t635;
t641 = t8 * t11 * t638 + t55 * t631;
t645 = -t17 * t638 + t8 * t631;
t647 = t629 * t627 * t43 + t641 * t53 + t645 * t62;
t650 = t449 * t625 - t462;
t655 = -t45 * t30 * t638 + t45 * t7 * t650;
t657 = t30 * t650;
t661 = -t384 * t11 * t638 + t55 * t657;
t666 = t7 * t8 * t638 + t8 * t657;
t668 = t655 * t43 + t661 * t53 + t666 * t62;
t671 = -t442 * t475 + t477;
t673 = t447 * t671 + t483;
t675 = t75 * t74;
t677 = t94 * t673;
t682 = -koppelP(2,3) * t442 - koppelP(2,1) * t633 + koppelP(2,2) * t635;
t685 = t72 * t75 * t682 + t118 * t677;
t689 = t72 * t677 - t81 * t682;
t691 = t675 * t673 * t106 + t685 * t116 + t689 * t125;
t694 = t449 * t671 - t492;
t699 = -t108 * t94 * t682 + t108 * t71 * t694;
t701 = t94 * t694;
t705 = -t391 * t75 * t682 + t118 * t701;
t710 = t71 * t72 * t682 + t72 * t701;
t712 = t699 * t106 + t705 * t116 + t710 * t125;
t715 = -t442 * t505 + t507;
t717 = t447 * t715 + t513;
t719 = t138 * t137;
t721 = t157 * t717;
t726 = -koppelP(3,3) * t442 - koppelP(3,1) * t633 + koppelP(3,2) * t635;
t729 = t135 * t138 * t726 + t181 * t721;
t733 = t135 * t721 - t144 * t726;
t735 = t719 * t717 * t169 + t729 * t179 + t733 * t188;
t738 = t449 * t715 - t522;
t743 = t171 * t134 * t738 - t171 * t157 * t726;
t745 = t157 * t738;
t749 = -t398 * t138 * t726 + t181 * t745;
t754 = t134 * t135 * t726 + t135 * t745;
t756 = t743 * t169 + t749 * t179 + t754 * t188;
t759 = -t442 * t535 + t537;
t761 = t447 * t759 + t543;
t763 = t201 * t200;
t765 = t220 * t761;
t770 = -koppelP(4,3) * t442 - koppelP(4,1) * t633 + koppelP(4,2) * t635;
t773 = t198 * t201 * t770 + t244 * t765;
t777 = t198 * t765 - t207 * t770;
t779 = t763 * t761 * t232 + t773 * t242 + t777 * t251;
t782 = t449 * t759 - t552;
t787 = t234 * t197 * t782 - t234 * t220 * t770;
t789 = t220 * t782;
t793 = -t405 * t201 * t770 + t244 * t789;
t798 = t197 * t198 * t770 + t198 * t789;
t800 = t787 * t232 + t793 * t242 + t798 * t251;
t803 = -t442 * t565 + t567;
t805 = t447 * t803 + t573;
t807 = t264 * t263;
t809 = t283 * t805;
t814 = -koppelP(5,3) * t442 - koppelP(5,1) * t633 + koppelP(5,2) * t635;
t817 = t261 * t264 * t814 + t307 * t809;
t821 = t261 * t809 - t270 * t814;
t823 = t807 * t805 * t295 + t817 * t305 + t821 * t314;
t826 = t449 * t803 - t582;
t831 = t297 * t260 * t826 - t297 * t283 * t814;
t833 = t283 * t826;
t837 = -t412 * t264 * t814 + t307 * t833;
t842 = t260 * t261 * t814 + t261 * t833;
t844 = t831 * t295 + t837 * t305 + t842 * t314;
t847 = -t442 * t595 + t597;
t849 = t447 * t847 + t603;
t851 = t327 * t326;
t853 = t346 * t849;
t858 = -koppelP(6,3) * t442 - koppelP(6,1) * t633 + koppelP(6,2) * t635;
t861 = t324 * t327 * t858 + t370 * t853;
t865 = t324 * t853 - t333 * t858;
t867 = t851 * t849 * t358 + t861 * t368 + t865 * t377;
t870 = t449 * t847 - t612;
t875 = t360 * t323 * t870 - t360 * t346 * t858;
t877 = t346 * t870;
t881 = -t419 * t327 * t858 + t370 * t877;
t886 = t323 * t324 * t858 + t324 * t877;
t888 = t875 * t358 + t881 * t368 + t886 * t377;
t891 = mrSges(4,1) * t439 * t442;
t892 = t437 * t442;
t893 = mrSges(4,2) * t892;
t894 = mrSges(4,3) * t444;
t895 = t447 * t647 + t447 * t691 + t447 * t735 + t447 * t779 + t447 * t823 + t447 * t867 + t449 * t668 + t449 * t712 + t449 * t756 + t449 * t800 + t449 * t844 + t449 * t888 - t891 + t893 + t894;
t934 = t437 * mrSges(4,1) + t439 * mrSges(4,2);
t936 = t442 * (t458 + t467 + t472) - t444 * t449 * t647 + t444 * t447 * t668 + t442 * (t488 + t497 + t502) - t444 * t449 * t691 + t444 * t447 * t712 + t442 * (t518 + t527 + t532) - t444 * t449 * t735 + t444 * t447 * t756 + t442 * (t548 + t557 + t562) - t444 * t449 * t779 + t444 * t447 * t800 + t442 * (t578 + t587 + t592) - t444 * t449 * t823 + t444 * t447 * t844 + t442 * (t608 + t617 + t622) - t444 * t449 * t867 + t444 * t447 * t888 - t934 * t444;
t938 = -t11 * t7;
t943 = -mrSges(3,2) * t7 * t40 + t37 * t17 * t938 + t26 * t456;
t949 = -t7 * t8;
t951 = t48 * t17 * t938 - mrSges(3,1) * t949 + t38 * t456;
t956 = mrSges(3,1) * t17;
t959 = mrSges(3,2) * t11 * t30 + m(3) * t949 - t956 * t938;
t963 = -t75 * t71;
t968 = -mrSges(3,2) * t71 * t103 + t100 * t81 * t963 + t90 * t486;
t974 = -t71 * t72;
t976 = t111 * t81 * t963 - mrSges(3,1) * t974 + t101 * t486;
t981 = mrSges(3,1) * t81;
t984 = mrSges(3,2) * t75 * t94 + m(3) * t974 - t981 * t963;
t988 = -t138 * t134;
t993 = -mrSges(3,2) * t134 * t166 + t163 * t144 * t988 + t153 * t516;
t999 = -t134 * t135;
t1001 = t174 * t144 * t988 - mrSges(3,1) * t999 + t164 * t516;
t1006 = mrSges(3,1) * t144;
t1009 = mrSges(3,2) * t138 * t157 + m(3) * t999 - t1006 * t988;
t1013 = -t201 * t197;
t1018 = -mrSges(3,2) * t197 * t229 + t226 * t207 * t1013 + t216 * t546;
t1024 = -t197 * t198;
t1026 = t237 * t207 * t1013 - mrSges(3,1) * t1024 + t227 * t546;
t1031 = mrSges(3,1) * t207;
t1034 = mrSges(3,2) * t201 * t220 + m(3) * t1024 - t1031 * t1013;
t1038 = -t264 * t260;
t1043 = -mrSges(3,2) * t260 * t292 + t289 * t270 * t1038 + t279 * t576;
t1049 = -t260 * t261;
t1051 = t300 * t270 * t1038 - mrSges(3,1) * t1049 + t290 * t576;
t1056 = mrSges(3,1) * t270;
t1059 = mrSges(3,2) * t264 * t283 + m(3) * t1049 - t1056 * t1038;
t1063 = -t327 * t323;
t1068 = -mrSges(3,2) * t323 * t355 + t352 * t333 * t1063 + t342 * t606;
t1074 = -t323 * t324;
t1076 = t363 * t333 * t1063 - mrSges(3,1) * t1074 + t353 * t606;
t1081 = mrSges(3,1) * t333;
t1084 = mrSges(3,2) * t327 * t346 + m(3) * t1074 - t1081 * t1063;
t1087 = t45 * t7 * t943 + t55 * t30 * t951 + t8 * t30 * t959 + t108 * t71 * t968 + t118 * t94 * t976 + t72 * t94 * t984 + t171 * t134 * t993 + t181 * t157 * t1001 + t135 * t157 * t1009 + t234 * t197 * t1018 + t244 * t220 * t1026 + t198 * t220 * t1034 + t297 * t260 * t1043 + t307 * t283 * t1051 + t261 * t283 * t1059 + t360 * t323 * t1068 + t370 * t346 * t1076 + t324 * t346 * t1084;
t1090 = t11 * t951;
t1096 = t75 * t976;
t1102 = t138 * t1001;
t1108 = t201 * t1026;
t1114 = t264 * t1051;
t1120 = t327 * t1076;
t1124 = t45 * t30 * t943 + t384 * t1090 - t7 * t8 * t959 + t108 * t94 * t968 + t391 * t1096 - t71 * t72 * t984 + t171 * t157 * t993 + t398 * t1102 - t134 * t135 * t1009 + t234 * t220 * t1018 + t405 * t1108 - t197 * t198 * t1034 + t297 * t283 * t1043 + t412 * t1114 - t260 * t261 * t1059 + t360 * t346 * t1068 + t419 * t1120 - t323 * t324 * t1084 + m(4);
t1137 = -t144 * t1009 - t207 * t1034 - t270 * t1059 - t333 * t1084 + t8 * t1090 + t72 * t1096 + t135 * t1102 + t198 * t1108 + t261 * t1114 + t324 * t1120 - t17 * t959 - t81 * t984;
t1139 = t457 * t454 * t943;
t1140 = t466 * t951;
t1141 = t471 * t959;
t1143 = t487 * t484 * t968;
t1144 = t496 * t976;
t1145 = t501 * t984;
t1147 = t517 * t514 * t993;
t1148 = t526 * t1001;
t1149 = t531 * t1009;
t1151 = t547 * t544 * t1018;
t1152 = t556 * t1026;
t1153 = t561 * t1034;
t1155 = t577 * t574 * t1043;
t1156 = t586 * t1051;
t1157 = t591 * t1059;
t1159 = t607 * t604 * t1068;
t1160 = t616 * t1076;
t1161 = t621 * t1084;
t1162 = t891 - t893 - t894;
t1163 = t447 * t1162;
t1164 = t934 * t449;
t1165 = t1139 + t1140 + t1141 + t1143 + t1144 + t1145 + t1147 + t1148 + t1149 + t1151 + t1152 + t1153 + t1155 + t1156 + t1157 + t1159 + t1160 + t1161 + t1163 - t1164;
t1170 = t629 * t627 * t943 + t641 * t951 + t645 * t959;
t1175 = t655 * t943 + t661 * t951 + t666 * t959;
t1181 = t675 * t673 * t968 + t685 * t976 + t689 * t984;
t1186 = t699 * t968 + t705 * t976 + t710 * t984;
t1192 = t719 * t717 * t993 + t729 * t1001 + t733 * t1009;
t1197 = t749 * t1001 + t754 * t1009 + t743 * t993;
t1203 = t763 * t761 * t1018 + t773 * t1026 + t777 * t1034;
t1208 = t787 * t1018 + t793 * t1026 + t798 * t1034;
t1214 = t807 * t805 * t1043 + t817 * t1051 + t821 * t1059;
t1219 = t831 * t1043 + t837 * t1051 + t842 * t1059;
t1225 = t851 * t849 * t1068 + t861 * t1076 + t865 * t1084;
t1230 = t875 * t1068 + t881 * t1076 + t886 * t1084;
t1232 = mrSges(4,1) * t633;
t1233 = mrSges(4,2) * t635;
t1234 = mrSges(4,3) * t442;
t1235 = t1232 - t1233 + t1234;
t1237 = t447 * t1170 + t449 * t1175 + t447 * t1181 + t449 * t1186 + t447 * t1192 + t449 * t1197 + t447 * t1203 + t449 * t1208 + t447 * t1214 + t449 * t1219 + t447 * t1225 + t449 * t1230 + t449 * t1235;
t1276 = -mrSges(4,2) * t437 + mrSges(4,1) * t439;
t1278 = t442 * t449;
t1280 = t442 * (t1139 + t1140 + t1141) - t444 * t449 * t1170 + t444 * t447 * t1175 + t442 * (t1143 + t1144 + t1145) - t444 * t449 * t1181 + t444 * t447 * t1186 + t442 * (t1147 + t1148 + t1149) - t444 * t449 * t1192 + t444 * t447 * t1197 + t442 * (t1151 + t1152 + t1153) - t444 * t449 * t1203 + t444 * t447 * t1208 + t442 * (t1155 + t1156 + t1157) - t444 * t449 * t1214 + t444 * t447 * t1219 + t442 * (t1159 + t1160 + t1161) - t444 * t449 * t1225 + t444 * t447 * t1230 + t447 * t1276 - t934 * t1278;
t1281 = t8 * t11;
t1285 = -mrSges(3,2) * t8 * t17 + t37 * t1281;
t1289 = t48 * t1281 + t956;
t1294 = -m(3) * t17 - mrSges(3,1) * t1281;
t1297 = t72 * t75;
t1301 = -mrSges(3,2) * t72 * t81 + t100 * t1297;
t1305 = t111 * t1297 + t981;
t1310 = -m(3) * t81 - mrSges(3,1) * t1297;
t1313 = t135 * t138;
t1317 = -mrSges(3,2) * t135 * t144 + t163 * t1313;
t1321 = t174 * t1313 + t1006;
t1326 = -m(3) * t144 - mrSges(3,1) * t1313;
t1329 = t198 * t201;
t1333 = -mrSges(3,2) * t198 * t207 + t226 * t1329;
t1337 = t237 * t1329 + t1031;
t1342 = -m(3) * t207 - mrSges(3,1) * t1329;
t1345 = t261 * t264;
t1349 = -mrSges(3,2) * t261 * t270 + t289 * t1345;
t1353 = t300 * t1345 + t1056;
t1358 = -m(3) * t270 - mrSges(3,1) * t1345;
t1361 = t324 * t327;
t1365 = -mrSges(3,2) * t324 * t333 + t352 * t1361;
t1369 = t363 * t1361 + t1081;
t1374 = -m(3) * t333 - mrSges(3,1) * t1361;
t1377 = t45 * t7 * t1285 + t55 * t30 * t1289 + t8 * t30 * t1294 + t108 * t71 * t1301 + t118 * t94 * t1305 + t72 * t94 * t1310 + t171 * t134 * t1317 + t181 * t157 * t1321 + t135 * t157 * t1326 + t234 * t197 * t1333 + t244 * t220 * t1337 + t198 * t220 * t1342 + t297 * t260 * t1349 + t307 * t283 * t1353 + t261 * t283 * t1358 + t360 * t323 * t1365 + t370 * t346 * t1369 + t324 * t346 * t1374;
t1380 = t11 * t1289;
t1386 = t75 * t1305;
t1392 = t138 * t1321;
t1398 = t201 * t1337;
t1404 = t264 * t1353;
t1410 = t327 * t1369;
t1414 = t45 * t30 * t1285 + t384 * t1380 - t7 * t8 * t1294 + t108 * t94 * t1301 + t391 * t1386 - t71 * t72 * t1310 + t171 * t157 * t1317 + t398 * t1392 - t134 * t135 * t1326 + t234 * t220 * t1333 + t405 * t1398 - t197 * t198 * t1342 + t297 * t283 * t1349 + t412 * t1404 - t260 * t261 * t1358 + t360 * t346 * t1365 + t419 * t1410 - t323 * t324 * t1374;
t1427 = -t17 * t1294 - t81 * t1310 - t144 * t1326 - t207 * t1342 + t135 * t1392 - t270 * t1358 - t333 * t1374 + t8 * t1380 + t72 * t1386 + t198 * t1398 + t261 * t1404 + t324 * t1410 + m(4);
t1429 = t457 * t454 * t1285;
t1430 = t466 * t1289;
t1431 = t471 * t1294;
t1433 = t487 * t484 * t1301;
t1434 = t496 * t1305;
t1435 = t501 * t1310;
t1437 = t517 * t514 * t1317;
t1438 = t526 * t1321;
t1439 = t531 * t1326;
t1441 = t547 * t544 * t1333;
t1442 = t556 * t1337;
t1443 = t561 * t1342;
t1445 = t577 * t574 * t1349;
t1446 = t586 * t1353;
t1447 = t591 * t1358;
t1449 = t607 * t604 * t1365;
t1450 = t616 * t1369;
t1451 = t621 * t1374;
t1452 = t449 * t1162;
t1453 = t934 * t447;
t1454 = t1429 + t1430 + t1431 + t1433 + t1434 + t1435 + t1437 + t1438 + t1439 + t1441 + t1442 + t1443 + t1445 + t1446 + t1447 + t1449 + t1450 + t1451 + t1452 + t1453;
t1459 = t629 * t627 * t1285 + t641 * t1289 + t645 * t1294;
t1464 = t655 * t1285 + t661 * t1289 + t666 * t1294;
t1470 = t675 * t673 * t1301 + t685 * t1305 + t689 * t1310;
t1475 = t699 * t1301 + t705 * t1305 + t710 * t1310;
t1481 = t719 * t717 * t1317 + t729 * t1321 + t733 * t1326;
t1486 = t743 * t1317 + t749 * t1321 + t754 * t1326;
t1492 = t763 * t761 * t1333 + t773 * t1337 + t777 * t1342;
t1497 = t787 * t1333 + t793 * t1337 + t798 * t1342;
t1503 = t807 * t805 * t1349 + t817 * t1353 + t821 * t1358;
t1508 = t831 * t1349 + t837 * t1353 + t842 * t1358;
t1514 = t851 * t849 * t1365 + t861 * t1369 + t865 * t1374;
t1519 = t875 * t1365 + t881 * t1369 + t886 * t1374;
t1522 = -t447 * t1235 + t447 * t1459 + t449 * t1464 + t447 * t1470 + t449 * t1475 + t447 * t1481 + t449 * t1486 + t447 * t1492 + t449 * t1497 + t447 * t1503 + t449 * t1508 + t447 * t1514 + t449 * t1519;
t1562 = t442 * (t1429 + t1430 + t1431) - t444 * t449 * t1459 + t444 * t447 * t1464 + t442 * (t1433 + t1434 + t1435) - t444 * t449 * t1470 + t444 * t447 * t1475 + t442 * (t1437 + t1438 + t1439) - t444 * t449 * t1481 + t444 * t447 * t1486 + t442 * (t1441 + t1442 + t1443) - t444 * t449 * t1492 + t444 * t447 * t1497 + t442 * (t1445 + t1446 + t1447) - t444 * t449 * t1503 + t444 * t447 * t1508 + t442 * (t1449 + t1450 + t1451) - t444 * t449 * t1514 + t444 * t447 * t1519 + t447 * t934 * t442 + t1276 * t449;
t1563 = t30 * t454;
t1564 = t25 * t45;
t1569 = mrSges(3,2) * t8 * t471 + t1564 * t1563 + t37 * t466;
t1572 = t37 * t45;
t1576 = -mrSges(3,1) * t471 + t1572 * t1563 + t48 * t466;
t1579 = mrSges(3,2) * t11;
t1583 = m(3) * t471 - mrSges(3,1) * t466 + t1579 * t1563;
t1586 = t94 * t484;
t1587 = t89 * t108;
t1592 = mrSges(3,2) * t72 * t501 + t100 * t496 + t1587 * t1586;
t1595 = t100 * t108;
t1599 = -mrSges(3,1) * t501 + t111 * t496 + t1595 * t1586;
t1602 = mrSges(3,2) * t75;
t1606 = m(3) * t501 - mrSges(3,1) * t496 + t1602 * t1586;
t1609 = t157 * t514;
t1610 = t152 * t171;
t1615 = mrSges(3,2) * t135 * t531 + t1610 * t1609 + t163 * t526;
t1618 = t163 * t171;
t1622 = -mrSges(3,1) * t531 + t1618 * t1609 + t174 * t526;
t1625 = mrSges(3,2) * t138;
t1629 = m(3) * t531 - mrSges(3,1) * t526 + t1625 * t1609;
t1632 = t220 * t544;
t1633 = t215 * t234;
t1638 = mrSges(3,2) * t198 * t561 + t1633 * t1632 + t226 * t556;
t1641 = t226 * t234;
t1645 = -mrSges(3,1) * t561 + t1641 * t1632 + t237 * t556;
t1648 = mrSges(3,2) * t201;
t1652 = m(3) * t561 - mrSges(3,1) * t556 + t1648 * t1632;
t1655 = t283 * t574;
t1656 = t278 * t297;
t1661 = mrSges(3,2) * t261 * t591 + t1656 * t1655 + t289 * t586;
t1664 = t289 * t297;
t1668 = -mrSges(3,1) * t591 + t1664 * t1655 + t300 * t586;
t1671 = mrSges(3,2) * t264;
t1675 = m(3) * t591 - mrSges(3,1) * t586 + t1671 * t1655;
t1678 = t346 * t604;
t1679 = t341 * t360;
t1684 = mrSges(3,2) * t324 * t621 + t1679 * t1678 + t352 * t616;
t1687 = t352 * t360;
t1691 = -mrSges(3,1) * t621 + t1687 * t1678 + t363 * t616;
t1694 = mrSges(3,2) * t327;
t1698 = m(3) * t621 - mrSges(3,1) * t616 + t1694 * t1678;
t1701 = t45 * t7 * t1569 + t55 * t30 * t1576 + t8 * t30 * t1583 + t108 * t71 * t1592 + t118 * t94 * t1599 + t72 * t94 * t1606 + t171 * t134 * t1615 + t181 * t157 * t1622 + t135 * t157 * t1629 + t234 * t197 * t1638 + t244 * t220 * t1645 + t198 * t220 * t1652 + t297 * t260 * t1661 + t307 * t283 * t1668 + t261 * t283 * t1675 + t360 * t323 * t1684 + t370 * t346 * t1691 + t324 * t346 * t1698;
t1704 = t11 * t1576;
t1710 = t75 * t1599;
t1716 = t138 * t1622;
t1722 = t201 * t1645;
t1728 = t264 * t1668;
t1734 = t327 * t1691;
t1738 = t45 * t30 * t1569 + t384 * t1704 - t7 * t8 * t1583 + t108 * t94 * t1592 + t391 * t1710 - t71 * t72 * t1606 + t171 * t157 * t1615 + t398 * t1716 - t134 * t135 * t1629 + t234 * t220 * t1638 + t405 * t1722 - t197 * t198 * t1652 + t297 * t283 * t1661 + t412 * t1728 - t260 * t261 * t1675 + t360 * t346 * t1684 + t419 * t1734 - t323 * t324 * t1698 + t1163 - t1164;
t1751 = t135 * t1716 - t144 * t1629 - t17 * t1583 - t81 * t1606 - t207 * t1652 - t270 * t1675 - t333 * t1698 + t8 * t1704 + t72 * t1710 + t198 * t1722 + t261 * t1728 + t324 * t1734 + t1452 + t1453;
t1753 = t457 * t454 * t1569;
t1754 = t466 * t1576;
t1755 = t471 * t1583;
t1757 = t487 * t484 * t1592;
t1758 = t496 * t1599;
t1759 = t501 * t1606;
t1761 = t517 * t514 * t1615;
t1762 = t526 * t1622;
t1763 = t531 * t1629;
t1765 = t547 * t544 * t1638;
t1767 = t556 * t1645;
t1768 = t561 * t1652;
t1770 = t577 * t574 * t1661;
t1771 = t586 * t1668;
t1772 = t591 * t1675;
t1774 = t607 * t604 * t1684;
t1775 = t616 * t1691;
t1776 = t621 * t1698;
t1777 = Ifges(4,1) - Ifges(4,2);
t1778 = t439 ^ 2;
t1783 = -0.2e1 * Ifges(4,4) * t437 * t439 + t1778 * t1777 + Ifges(4,2) - Ifges(4,3);
t1784 = t444 ^ 2;
t1788 = Ifges(4,5) * t439 - Ifges(4,6) * t437;
t1792 = 0.2e1 * t444 * t1788 * t442 + t1784 * t1783 + Ifges(4,3) + t1767 + t1768 + t1770 + t1771 + t1772 + t1774 + t1775 + t1776;
t1798 = t629 * t627 * t1569 + t641 * t1576 + t645 * t1583;
t1803 = t655 * t1569 + t661 * t1576 + t666 * t1583;
t1809 = t675 * t673 * t1592 + t685 * t1599 + t689 * t1606;
t1814 = t699 * t1592 + t705 * t1599 + t710 * t1606;
t1820 = t719 * t717 * t1615 + t729 * t1622 + t733 * t1629;
t1825 = t743 * t1615 + t749 * t1622 + t754 * t1629;
t1831 = t763 * t761 * t1638 + t773 * t1645 + t777 * t1652;
t1836 = t787 * t1638 + t793 * t1645 + t798 * t1652;
t1842 = t807 * t805 * t1661 + t817 * t1668 + t821 * t1675;
t1847 = t831 * t1661 + t837 * t1668 + t842 * t1675;
t1853 = t851 * t849 * t1684 + t861 * t1691 + t865 * t1698;
t1858 = t875 * t1684 + t881 * t1691 + t886 * t1698;
t1864 = t439 * t1777 * t437 + 0.2e1 * t1778 * Ifges(4,4) - Ifges(4,4);
t1868 = Ifges(4,5) * t437 + Ifges(4,6) * t439;
t1870 = t447 * t1798 + t449 * t1803 + t447 * t1809 + t449 * t1814 + t447 * t1820 + t449 * t1825 + t447 * t1831 + t449 * t1836 + t447 * t1842 + t449 * t1847 + t447 * t1853 + t449 * t1858 + t444 * t1864 + t1868 * t442;
t1911 = -t444 * t449 * t1831 + t444 * t447 * t1836 + t442 * (t1770 + t1771 + t1772) - t444 * t449 * t1842 + t444 * t447 * t1847 + t442 * (t1774 + t1775 + t1776) - t444 * t449 * t1853 + t444 * t447 * t1858 + Ifges(4,5) * t633 - Ifges(4,6) * t635 + Ifges(4,3) * t442;
t1913 = t7 * t627;
t1918 = mrSges(3,2) * t8 * t645 + t1564 * t1913 + t37 * t641;
t1924 = -mrSges(3,1) * t645 + t1572 * t1913 + t48 * t641;
t1930 = m(3) * t645 - mrSges(3,1) * t641 + t1579 * t1913;
t1933 = t71 * t673;
t1938 = mrSges(3,2) * t72 * t689 + t100 * t685 + t1587 * t1933;
t1944 = -mrSges(3,1) * t689 + t111 * t685 + t1595 * t1933;
t1950 = m(3) * t689 - mrSges(3,1) * t685 + t1602 * t1933;
t1953 = t134 * t717;
t1958 = mrSges(3,2) * t135 * t733 + t1610 * t1953 + t163 * t729;
t1964 = -mrSges(3,1) * t733 + t1618 * t1953 + t174 * t729;
t1970 = m(3) * t733 - mrSges(3,1) * t729 + t1625 * t1953;
t1973 = t197 * t761;
t1978 = mrSges(3,2) * t198 * t777 + t1633 * t1973 + t226 * t773;
t1984 = -mrSges(3,1) * t777 + t1641 * t1973 + t237 * t773;
t1990 = m(3) * t777 - mrSges(3,1) * t773 + t1648 * t1973;
t1993 = t260 * t805;
t1998 = mrSges(3,2) * t261 * t821 + t1656 * t1993 + t289 * t817;
t2004 = -mrSges(3,1) * t821 + t1664 * t1993 + t300 * t817;
t2010 = m(3) * t821 - mrSges(3,1) * t817 + t1671 * t1993;
t2013 = t323 * t849;
t2018 = mrSges(3,2) * t324 * t865 + t1679 * t2013 + t352 * t861;
t2024 = -mrSges(3,1) * t865 + t1687 * t2013 + t363 * t861;
t2030 = m(3) * t865 - mrSges(3,1) * t861 + t1694 * t2013;
t2034 = t45 * t7 * t1918 + t55 * t30 * t1924 + t8 * t30 * t1930 + t108 * t71 * t1938 + t118 * t94 * t1944 + t72 * t94 * t1950 + t171 * t134 * t1958 + t181 * t157 * t1964 + t135 * t157 * t1970 + t234 * t197 * t1978 + t244 * t220 * t1984 + t198 * t220 * t1990 + t297 * t260 * t1998 + t307 * t283 * t2004 + t261 * t283 * t2010 + t360 * t323 * t2018 + t370 * t346 * t2024 + t324 * t346 * t2030 - t447 * t1162 + t1164;
t2037 = t11 * t1924;
t2043 = t75 * t1944;
t2049 = t138 * t1964;
t2055 = t201 * t1984;
t2061 = t264 * t2004;
t2067 = t327 * t2024;
t2071 = t45 * t30 * t1918 + t384 * t2037 - t7 * t8 * t1930 + t108 * t94 * t1938 + t391 * t2043 - t71 * t72 * t1950 + t171 * t157 * t1958 + t398 * t2049 - t134 * t135 * t1970 + t234 * t220 * t1978 + t405 * t2055 - t197 * t198 * t1990 + t297 * t283 * t1998 + t412 * t2061 - t260 * t261 * t2010 + t360 * t346 * t2018 + t419 * t2067 - t323 * t324 * t2030;
t2084 = t135 * t2049 - t144 * t1970 - t17 * t1930 - t81 * t1950 + t198 * t2055 - t207 * t1990 - t270 * t2010 - t333 * t2030 + t8 * t2037 + t72 * t2043 + t261 * t2061 + t324 * t2067 - t1232 + t1233 - t1234;
t2086 = t457 * t454 * t1918;
t2087 = t466 * t1924;
t2088 = t471 * t1930;
t2090 = t487 * t484 * t1938;
t2091 = t496 * t1944;
t2092 = t501 * t1950;
t2094 = t517 * t514 * t1958;
t2095 = t526 * t1964;
t2096 = t531 * t1970;
t2098 = t547 * t544 * t1978;
t2099 = t556 * t1984;
t2100 = t2086 + t2087 + t2088 + t2090 + t2091 + t2092 + t2094 + t2095 + t2096 + t2098 + t2099;
t2101 = t561 * t1990;
t2103 = t577 * t574 * t1998;
t2104 = t586 * t2004;
t2105 = t591 * t2010;
t2107 = t607 * t604 * t2018;
t2108 = t616 * t2024;
t2109 = t621 * t2030;
t2115 = Ifges(4,4) * t447;
t2122 = -0.2e1 * Ifges(4,4) * t1278 + t1777 * t447;
t2130 = t442 * t447;
t2139 = t2101 + t2103 + t2104 + t2105 + t2107 + t2108 + t2109 - 0.2e1 * t1784 * t1788 * t449 + t444 * (t1778 * (t449 * t1777 * t442 + 0.2e1 * t2115) + t439 * t2122 * t437 + t449 * (Ifges(4,2) - Ifges(4,3)) * t442 - t2115) + t439 * (Ifges(4,5) * t449 + Ifges(4,6) * t2130) + (Ifges(4,5) * t2130 - Ifges(4,6) * t449) * t437;
t2145 = t629 * t627 * t1918 + t641 * t1924 + t645 * t1930;
t2150 = t655 * t1918 + t661 * t1924 + t666 * t1930;
t2156 = t675 * t673 * t1938 + t685 * t1944 + t689 * t1950;
t2161 = t699 * t1938 + t705 * t1944 + t710 * t1950;
t2167 = t719 * t717 * t1958 + t729 * t1964 + t733 * t1970;
t2172 = t743 * t1958 + t749 * t1964 + t754 * t1970;
t2178 = t763 * t761 * t1978 + t773 * t1984 + t777 * t1990;
t2183 = t787 * t1978 + t793 * t1984 + t798 * t1990;
t2189 = t807 * t805 * t1998 + t817 * t2004 + t821 * t2010;
t2194 = t831 * t1998 + t837 * t2004 + t842 * t2010;
t2200 = t851 * t849 * t2018 + t861 * t2024 + t865 * t2030;
t2205 = t875 * t2018 + t881 * t2024 + t886 * t2030;
t2210 = -t444 * Ifges(4,6) + t1777 * t892;
t2219 = -Ifges(4,4) * t442 - Ifges(4,5) * t635;
t2222 = t447 * t2145 + t449 * t2150 + t447 * t2156 + t449 * t2161 + t447 * t2167 + t449 * t2172 + t447 * t2178 + t449 * t2183 + t447 * t2189 + t449 * t2194 + t447 * t2200 + t449 * t2205 - t1778 * t2122 + t439 * (0.2e1 * t447 * Ifges(4,4) * t437 + t449 * t2210) + t449 * t2219 + Ifges(4,1) * t447;
t2263 = t439 * t442 * Ifges(4,5) - Ifges(4,6) * t892 - t444 * Ifges(4,3);
t2266 = t442 * (t2086 + t2087 + t2088) - t444 * t449 * t2145 + t444 * t447 * t2150 + t442 * (t2090 + t2091 + t2092) - t444 * t449 * t2156 + t444 * t447 * t2161 + t442 * (t2094 + t2095 + t2096) - t444 * t449 * t2167 + t444 * t447 * t2172 + t442 * (t2098 + t2099 + t2101) - t444 * t449 * t2178 + t444 * t447 * t2183 + t442 * (t2103 + t2104 + t2105) - t444 * t449 * t2189 + t444 * t447 * t2194 + t442 * (t2107 + t2108 + t2109) - t444 * t449 * t2200 + t444 * t447 * t2205 + t449 * t2263 + t1868 * t447;
t2271 = mrSges(3,2) * t8 * t666 + t25 * t655 + t37 * t661;
t2277 = -mrSges(3,1) * t666 + t37 * t655 + t48 * t661;
t2284 = mrSges(3,2) * t8 * t655 + m(3) * t666 - mrSges(3,1) * t661;
t2291 = mrSges(3,2) * t72 * t710 + t100 * t705 + t89 * t699;
t2297 = -mrSges(3,1) * t710 + t100 * t699 + t111 * t705;
t2304 = mrSges(3,2) * t72 * t699 + m(3) * t710 - mrSges(3,1) * t705;
t2311 = mrSges(3,2) * t135 * t754 + t152 * t743 + t163 * t749;
t2317 = -mrSges(3,1) * t754 + t163 * t743 + t174 * t749;
t2324 = mrSges(3,2) * t135 * t743 + m(3) * t754 - mrSges(3,1) * t749;
t2331 = mrSges(3,2) * t198 * t798 + t215 * t787 + t226 * t793;
t2337 = -mrSges(3,1) * t798 + t226 * t787 + t237 * t793;
t2344 = mrSges(3,2) * t198 * t787 + m(3) * t798 - mrSges(3,1) * t793;
t2351 = mrSges(3,2) * t261 * t842 + t278 * t831 + t289 * t837;
t2357 = -mrSges(3,1) * t842 + t289 * t831 + t300 * t837;
t2364 = mrSges(3,2) * t261 * t831 + m(3) * t842 - mrSges(3,1) * t837;
t2371 = mrSges(3,2) * t324 * t886 + t341 * t875 + t352 * t881;
t2377 = -mrSges(3,1) * t886 + t352 * t875 + t363 * t881;
t2384 = mrSges(3,2) * t324 * t875 + m(3) * t886 - mrSges(3,1) * t881;
t2388 = t45 * t7 * t2271 + t55 * t30 * t2277 + t8 * t30 * t2284 + t108 * t71 * t2291 + t118 * t94 * t2297 + t72 * t94 * t2304 + t171 * t134 * t2311 + t181 * t157 * t2317 + t135 * t157 * t2324 + t234 * t197 * t2331 + t244 * t220 * t2337 + t198 * t220 * t2344 + t297 * t260 * t2351 + t307 * t283 * t2357 + t261 * t283 * t2364 + t360 * t323 * t2371 + t370 * t346 * t2377 + t324 * t346 * t2384 - t449 * t1162 - t1453;
t2391 = t11 * t2277;
t2397 = t75 * t2297;
t2403 = t138 * t2317;
t2410 = t201 * t2337;
t2416 = t264 * t2357;
t2422 = t327 * t2377;
t2426 = -t197 * t198 * t2344 + t297 * t283 * t2351 - t260 * t261 * t2364 + t360 * t346 * t2371 - t323 * t324 * t2384 + t405 * t2410 + t412 * t2416 + t419 * t2422 + t1232 - t1233 + t1234;
t2440 = t135 * t2403 - t144 * t2324 - t17 * t2284 + t198 * t2410 - t207 * t2344 - t81 * t2304 - t270 * t2364 - t333 * t2384 + t8 * t2391 + t72 * t2397 + t261 * t2416 + t324 * t2422;
t2442 = t457 * t454 * t2271;
t2443 = t466 * t2277;
t2444 = t471 * t2284;
t2446 = t487 * t484 * t2291;
t2447 = t496 * t2297;
t2448 = t501 * t2304;
t2450 = t517 * t514 * t2311;
t2451 = t526 * t2317;
t2452 = t531 * t2324;
t2454 = t547 * t544 * t2331;
t2455 = t556 * t2337;
t2456 = t2442 + t2443 + t2444 + t2446 + t2447 + t2448 + t2450 + t2451 + t2452 + t2454 + t2455;
t2457 = t561 * t2344;
t2459 = t577 * t574 * t2351;
t2460 = t586 * t2357;
t2461 = t591 * t2364;
t2463 = t607 * t604 * t2371;
t2464 = t616 * t2377;
t2465 = t621 * t2384;
t2476 = t2457 + t2459 + t2460 + t2461 + t2463 + t2464 + t2465 + 0.2e1 * t1784 * t1788 * t447 + t444 * (-t447 * t442 * t1783 + t449 * t1864) - t1788 * t447 + t1868 * t1278;
t2482 = t629 * t627 * t2271 + t641 * t2277 + t645 * t2284;
t2487 = t655 * t2271 + t661 * t2277 + t666 * t2284;
t2493 = t675 * t673 * t2291 + t685 * t2297 + t689 * t2304;
t2498 = t699 * t2291 + t705 * t2297 + t710 * t2304;
t2504 = t719 * t717 * t2311 + t729 * t2317 + t733 * t2324;
t2509 = t743 * t2311 + t749 * t2317 + t754 * t2324;
t2515 = t763 * t761 * t2331 + t773 * t2337 + t777 * t2344;
t2520 = t787 * t2331 + t793 * t2337 + t798 * t2344;
t2526 = t807 * t805 * t2351 + t817 * t2357 + t821 * t2364;
t2531 = t831 * t2351 + t837 * t2357 + t842 * t2364;
t2537 = t851 * t849 * t2371 + t861 * t2377 + t865 * t2384;
t2542 = t875 * t2371 + t881 * t2377 + t886 * t2384;
t2557 = t447 * t2482 + t449 * t2487 + t447 * t2493 + t449 * t2498 + t447 * t2504 + t449 * t2509 + t447 * t2515 + t449 * t2520 + t447 * t2526 + t449 * t2531 + t447 * t2537 + t449 * t2542 + t1778 * (-0.2e1 * Ifges(4,4) * t2130 - t1777 * t449) + t439 * (0.2e1 * Ifges(4,4) * t437 * t449 - t447 * t2210) - t447 * t2219 + Ifges(4,1) * t449;
t2596 = t442 * (t2442 + t2443 + t2444) - t444 * t449 * t2482 + t444 * t447 * t2487 + t442 * (t2446 + t2447 + t2448) - t444 * t449 * t2493 + t444 * t447 * t2498 + t442 * (t2450 + t2451 + t2452) - t444 * t449 * t2504 + t444 * t447 * t2509 + t442 * (t2454 + t2455 + t2457) - t444 * t449 * t2515 + t444 * t447 * t2520 + t442 * (t2459 + t2460 + t2461) - t444 * t449 * t2526 + t444 * t447 * t2531 + t442 * (t2463 + t2464 + t2465) - t444 * t449 * t2537 + t444 * t447 * t2542 - t447 * t2263 + t1868 * t449;
unknown(1,1) = t380;
unknown(1,2) = t423;
unknown(1,3) = t436;
unknown(1,4) = t623;
unknown(1,5) = t895;
unknown(1,6) = t936;
unknown(2,1) = t1087;
unknown(2,2) = t1124;
unknown(2,3) = t1137;
unknown(2,4) = t1165;
unknown(2,5) = t1237;
unknown(2,6) = t1280;
unknown(3,1) = t1377;
unknown(3,2) = t1414;
unknown(3,3) = t1427;
unknown(3,4) = t1454;
unknown(3,5) = t1522;
unknown(3,6) = t1562;
unknown(4,1) = t1701;
unknown(4,2) = t1738;
unknown(4,3) = t1751;
unknown(4,4) = t1753 + t1754 + t1755 + t1757 + t1758 + t1759 + t1761 + t1762 + t1763 + t1765 + t1792;
unknown(4,5) = t1870;
unknown(4,6) = t442 * (t1753 + t1754 + t1755) - t444 * t449 * t1798 + t444 * t447 * t1803 + t442 * (t1757 + t1758 + t1759) - t444 * t449 * t1809 + t444 * t447 * t1814 + t442 * (t1761 + t1762 + t1763) - t444 * t449 * t1820 + t444 * t447 * t1825 + t442 * (t1765 + t1767 + t1768) + t1911;
unknown(5,1) = t2034;
unknown(5,2) = t2071;
unknown(5,3) = t2084;
unknown(5,4) = t2100 + t2139;
unknown(5,5) = t2222;
unknown(5,6) = t2266;
unknown(6,1) = t2388;
unknown(6,2) = t108 * t94 * t2291 - t134 * t135 * t2324 + t171 * t157 * t2311 + t234 * t220 * t2331 + t45 * t30 * t2271 - t7 * t8 * t2284 - t71 * t72 * t2304 + t384 * t2391 + t391 * t2397 + t398 * t2403 + t2426;
unknown(6,3) = t2440;
unknown(6,4) = t2456 + t2476;
unknown(6,5) = t2557;
unknown(6,6) = t2596;
MX  = unknown;
