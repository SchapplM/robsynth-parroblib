% Calculate minimal parameter regressor of inverse dynamics forces for
% P6RRPRRR14V3G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [24x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6RRPRRR14V3G1P4A0_convert_par2_MPV_fixb.m

% Output:
% tauX [6x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:28
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(1,1),zeros(24,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: pkin has to be [1x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [24 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_mdp: MDP has to be [24x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:28:05
% EndTime: 2020-03-12 23:28:23
% DurationCPUTime: 18.16s
% Computational Cost: add. (333870->2461), mult. (783626->3894), div. (7746->36), fcn. (587352->42), ass. (0->1426)
unknown=NaN(6,1);
t1 = sin(legFrame(1,3));
t2 = cos(qJ(1,1));
t3 = t2 * t1;
t4 = sin(qJ(1,1));
t5 = cos(legFrame(1,3));
t6 = t5 * t4;
t7 = -t3 - t6;
t8 = sin(qJ(2,1));
t9 = 0.1e1 / t8;
t10 = t9 * t7;
t11 = 0.1e1 / qJ(3,1);
t12 = sin(xP(6));
t13 = koppelP(1,2) * t12;
t14 = cos(xP(6));
t16 = -t14 * koppelP(1,1) + t13;
t17 = sin(xP(5));
t19 = cos(xP(5));
t20 = koppelP(1,3) * t19;
t21 = t17 * t16 + t20;
t22 = cos(xP(4));
t23 = t22 * t21;
t24 = sin(xP(4));
t25 = koppelP(1,1) * t12;
t27 = koppelP(1,2) * t14 + t25;
t28 = t27 * t24;
t29 = t23 + t28;
t31 = t24 * t21;
t32 = t27 * t22;
t33 = t31 - t32;
t43 = xDP(4) * t29;
t49 = t22 * xDP(4);
t51 = xDP(5) * t24;
t53 = t17 * t51 - t19 * t49;
t57 = xDP(5) * t22;
t59 = -t19 * t24 * xDP(4) - t17 * t57;
t64 = t27 * t17;
t67 = -t16 * t24 + t22 * t64;
t69 = koppelP(1,3) * t17;
t71 = t16 * t19 - t69;
t72 = t71 * t57;
t73 = -xDP(4) * t33 + xDP(6) * t67 + t72;
t77 = t16 * t22 + t24 * t64;
t79 = t71 * t51;
t80 = xDP(6) * t77 + t43 + t79;
t90 = xDDP(1) + xDDP(5) * (t22 * t29 + t24 * t33) + xDDP(6) * (t19 * t22 * t33 - t19 * t24 * t29) + xDP(5) * (t22 * xDP(4) * t33 - t24 * t43) + xDP(6) * (t53 * t29 + t59 * t33) + xDP(5) * (t22 * t73 + t24 * t80) + xDP(6) * (t19 * t22 * t80 - t19 * t24 * t73);
t91 = t90 * t11;
t93 = t4 * t1;
t94 = t5 * t2;
t95 = -t93 + t94;
t96 = t9 * t95;
t98 = -t17 * t16 - t20;
t100 = t22 * t98 - t28;
t102 = t14 * t19;
t104 = t12 * t19;
t106 = koppelP(1,1) * t102 - koppelP(1,2) * t104 + t69;
t125 = xDP(4) * (-t27 * t22 + t31) - xDP(6) * t67 - t72;
t128 = t19 * xDP(6);
t129 = t27 * t128;
t130 = -xDP(5) * t98 - t129;
t138 = xDDP(2) + xDDP(4) * t100 + xDDP(5) * t24 * t106 + xDDP(6) * (t19 * t22 * t106 + t17 * t100) + t57 * xDP(4) * t106 + xDP(6) * (t19 * xDP(5) * t100 + t59 * t106) + xDP(4) * t125 + xDP(5) * t24 * t130 + xDP(6) * (t19 * t22 * t130 + t17 * t125);
t141 = t19 * xDP(5);
t143 = koppelP(1,2) * xDP(6);
t146 = -koppelP(1,1) * t141 + t17 * t143 + xDP(4) * koppelP(1,2);
t152 = t22 * t4 * xDP(4) - t2 * xDP(5);
t155 = t19 * t2;
t157 = t22 * t4;
t163 = t12 * xDP(6);
t166 = koppelP(1,1) * t163 - xDP(5) * koppelP(1,3);
t170 = koppelP(1,2) * t141 + xDP(4) * koppelP(1,1);
t171 = t170 * t12;
t172 = t17 * t166 + t171;
t182 = koppelP(1,3) * t141;
t183 = t182 + xDP(1);
t185 = t20 * t49;
t186 = -t185 + xDP(2);
t189 = t5 * (t14 * (-t24 * t146 * t4 + t17 * t152 * koppelP(1,1) - (koppelP(1,2) * t155 - koppelP(1,1) * t157) * xDP(6)) - t24 * t172 * t4 - t17 * t152 * t13 - t12 * (koppelP(1,1) * t155 + koppelP(1,2) * t157) * xDP(6) + t2 * t183 + t186 * t4);
t195 = t22 * t2 * xDP(4) + t4 * xDP(5);
t198 = t22 * t2;
t200 = t19 * t4;
t204 = t24 * t146 * t2 - t17 * t195 * koppelP(1,1) - (koppelP(1,1) * t198 + koppelP(1,2) * t200) * xDP(6);
t207 = t24 * t172 * t2;
t209 = t17 * t195 * t13;
t214 = t12 * (koppelP(1,2) * t198 - koppelP(1,1) * t200) * xDP(6);
t216 = t183 * t4;
t220 = cos(qJ(2,1));
t222 = xDP(4) * t17;
t223 = t222 + xDP(6);
t230 = t19 * xDP(4);
t239 = t14 * (t24 * t223 * koppelP(1,1) + t146 * t22) + t24 * (-t12 * t143 - t13 * t222 - koppelP(1,3) * t230) + t17 * t166 * t22 + t12 * t170 * t22 + xDP(3);
t241 = t220 * (t189 - (t14 * t204 - t2 * t186 + t207 + t209 + t214 + t216) * t1) + t239 * t8;
t242 = t220 * t241;
t250 = t8 * (t189 + t1 * (-t14 * t204 + t2 * t186 - t207 - t209 - t214 - t216)) - t220 * t239;
t253 = t8 ^ 2;
t254 = 0.1e1 / t253;
t256 = qJ(3,1) ^ 2;
t257 = 0.1e1 / t256;
t259 = koppelP(1,1) * t22;
t266 = t12 * t17;
t267 = koppelP(1,2) * t266;
t269 = t22 * xDP(6);
t271 = t14 * (-t24 * t146 + t223 * t259) + t24 * (-t17 * t166 - t171) - t267 * t49 - t185 - t13 * t269 + xDP(2);
t273 = t17 * xDP(5);
t280 = t14 * (-koppelP(1,2) * t128 - koppelP(1,1) * t273) + t13 * t273 - t25 * t128 + t182 + xDP(1);
t288 = t5 * (t2 * t271 - t4 * t280) - (t2 * t280 + t4 * t271) * t1;
t289 = t288 * t257;
t291 = t288 * t220;
t292 = t257 * t254;
t295 = t9 * t288;
t296 = t250 * t257;
t298 = t91 * t10 + t138 * t11 * t96 - t289 * t254 * (t250 * t8 + t242) - t241 * t292 * t291 - t296 * t295;
t299 = t298 * t11;
t301 = sin(legFrame(2,3));
t302 = cos(qJ(1,2));
t303 = t302 * t301;
t304 = sin(qJ(1,2));
t305 = cos(legFrame(2,3));
t306 = t305 * t304;
t307 = -t303 - t306;
t308 = sin(qJ(2,2));
t309 = 0.1e1 / t308;
t310 = t309 * t307;
t311 = 0.1e1 / qJ(3,2);
t312 = koppelP(2,2) * t12;
t314 = -t14 * koppelP(2,1) + t312;
t316 = koppelP(2,3) * t19;
t317 = t17 * t314 + t316;
t318 = t22 * t317;
t319 = koppelP(2,1) * t12;
t321 = koppelP(2,2) * t14 + t319;
t322 = t321 * t24;
t323 = t318 + t322;
t325 = t24 * t317;
t326 = t321 * t22;
t327 = t325 - t326;
t337 = xDP(4) * t323;
t348 = t321 * t17;
t351 = t22 * t348 - t314 * t24;
t353 = koppelP(2,3) * t17;
t355 = t314 * t19 - t353;
t356 = t355 * t57;
t357 = -xDP(4) * t327 + xDP(6) * t351 + t356;
t361 = t314 * t22 + t24 * t348;
t363 = t355 * t51;
t364 = xDP(6) * t361 + t337 + t363;
t374 = xDDP(1) + xDDP(5) * (t22 * t323 + t24 * t327) + xDDP(6) * (t19 * t22 * t327 - t19 * t24 * t323) + xDP(5) * (t22 * xDP(4) * t327 - t24 * t337) + xDP(6) * (t53 * t323 + t59 * t327) + xDP(5) * (t22 * t357 + t24 * t364) + xDP(6) * (t19 * t22 * t364 - t19 * t24 * t357);
t375 = t374 * t311;
t377 = t304 * t301;
t378 = t305 * t302;
t379 = -t377 + t378;
t380 = t309 * t379;
t382 = -t17 * t314 - t316;
t384 = t22 * t382 - t322;
t388 = koppelP(2,1) * t102 - koppelP(2,2) * t104 + t353;
t407 = xDP(4) * (-t321 * t22 + t325) - xDP(6) * t351 - t356;
t410 = t321 * t128;
t411 = -xDP(5) * t382 - t410;
t419 = xDDP(2) + xDDP(4) * t384 + xDDP(5) * t24 * t388 + xDDP(6) * (t19 * t22 * t388 + t17 * t384) + t57 * xDP(4) * t388 + xDP(6) * (t19 * xDP(5) * t384 + t59 * t388) + xDP(4) * t407 + xDP(5) * t24 * t411 + xDP(6) * (t19 * t22 * t411 + t17 * t407);
t423 = koppelP(2,2) * xDP(6);
t426 = -koppelP(2,1) * t141 + t17 * t423 + xDP(4) * koppelP(2,2);
t432 = t22 * t304 * xDP(4) - t302 * xDP(5);
t435 = t19 * t302;
t437 = t22 * t304;
t445 = koppelP(2,1) * t163 - xDP(5) * koppelP(2,3);
t449 = koppelP(2,2) * t141 + xDP(4) * koppelP(2,1);
t450 = t449 * t12;
t451 = t17 * t445 + t450;
t461 = koppelP(2,3) * t141;
t462 = t461 + xDP(1);
t464 = t316 * t49;
t465 = -t464 + xDP(2);
t468 = t305 * (t14 * (-t24 * t426 * t304 + t17 * t432 * koppelP(2,1) - (koppelP(2,2) * t435 - koppelP(2,1) * t437) * xDP(6)) - t24 * t451 * t304 - t17 * t432 * t312 - t12 * (koppelP(2,1) * t435 + koppelP(2,2) * t437) * xDP(6) + t302 * t462 + t465 * t304);
t474 = t22 * t302 * xDP(4) + t304 * xDP(5);
t477 = t22 * t302;
t479 = t19 * t304;
t483 = t24 * t426 * t302 - t17 * t474 * koppelP(2,1) - (koppelP(2,1) * t477 + koppelP(2,2) * t479) * xDP(6);
t486 = t24 * t451 * t302;
t488 = t17 * t474 * t312;
t493 = t12 * (koppelP(2,2) * t477 - koppelP(2,1) * t479) * xDP(6);
t495 = t462 * t304;
t499 = cos(qJ(2,2));
t515 = t14 * (t24 * t223 * koppelP(2,1) + t426 * t22) + t24 * (-t12 * t423 - t312 * t222 - koppelP(2,3) * t230) + t17 * t445 * t22 + t12 * t449 * t22 + xDP(3);
t517 = t499 * (t468 - (t14 * t483 - t302 * t465 + t486 + t488 + t493 + t495) * t301) + t515 * t308;
t518 = t499 * t517;
t526 = t308 * (t468 + t301 * (-t14 * t483 + t302 * t465 - t486 - t488 - t493 - t495)) - t499 * t515;
t529 = t308 ^ 2;
t530 = 0.1e1 / t529;
t532 = qJ(3,2) ^ 2;
t533 = 0.1e1 / t532;
t535 = koppelP(2,1) * t22;
t542 = koppelP(2,2) * t266;
t545 = t14 * (t223 * t535 - t24 * t426) + t24 * (-t17 * t445 - t450) - t542 * t49 - t464 - t312 * t269 + xDP(2);
t553 = t14 * (-koppelP(2,2) * t128 - koppelP(2,1) * t273) + t312 * t273 - t319 * t128 + t461 + xDP(1);
t561 = t305 * (t302 * t545 - t304 * t553) - (t302 * t553 + t304 * t545) * t301;
t562 = t561 * t533;
t564 = t561 * t499;
t565 = t533 * t530;
t568 = t309 * t561;
t569 = t526 * t533;
t571 = t375 * t310 + t419 * t311 * t380 - t562 * t530 * (t526 * t308 + t518) - t517 * t565 * t564 - t569 * t568;
t572 = t571 * t311;
t574 = sin(legFrame(3,3));
t575 = cos(qJ(1,3));
t576 = t575 * t574;
t577 = sin(qJ(1,3));
t578 = cos(legFrame(3,3));
t579 = t578 * t577;
t580 = -t576 - t579;
t581 = sin(qJ(2,3));
t582 = 0.1e1 / t581;
t583 = t582 * t580;
t584 = 0.1e1 / qJ(3,3);
t585 = koppelP(3,2) * t12;
t587 = -t14 * koppelP(3,1) + t585;
t589 = koppelP(3,3) * t19;
t590 = t17 * t587 + t589;
t591 = t22 * t590;
t592 = koppelP(3,1) * t12;
t594 = koppelP(3,2) * t14 + t592;
t595 = t594 * t24;
t596 = t591 + t595;
t598 = t24 * t590;
t599 = t594 * t22;
t600 = t598 - t599;
t610 = xDP(4) * t596;
t621 = t594 * t17;
t624 = t22 * t621 - t587 * t24;
t626 = koppelP(3,3) * t17;
t628 = t587 * t19 - t626;
t629 = t628 * t57;
t630 = -xDP(4) * t600 + xDP(6) * t624 + t629;
t634 = t587 * t22 + t24 * t621;
t636 = t628 * t51;
t637 = xDP(6) * t634 + t610 + t636;
t647 = xDDP(1) + xDDP(5) * (t22 * t596 + t24 * t600) + xDDP(6) * (t19 * t22 * t600 - t19 * t24 * t596) + xDP(5) * (t22 * xDP(4) * t600 - t24 * t610) + xDP(6) * (t53 * t596 + t59 * t600) + xDP(5) * (t22 * t630 + t24 * t637) + xDP(6) * (t19 * t22 * t637 - t19 * t24 * t630);
t648 = t647 * t584;
t650 = t577 * t574;
t651 = t578 * t575;
t652 = -t650 + t651;
t653 = t582 * t652;
t655 = -t17 * t587 - t589;
t657 = t22 * t655 - t595;
t661 = koppelP(3,1) * t102 - koppelP(3,2) * t104 + t626;
t680 = xDP(4) * (-t594 * t22 + t598) - xDP(6) * t624 - t629;
t683 = t594 * t128;
t684 = -xDP(5) * t655 - t683;
t692 = xDDP(2) + xDDP(4) * t657 + xDDP(5) * t24 * t661 + xDDP(6) * (t19 * t22 * t661 + t17 * t657) + t57 * xDP(4) * t661 + xDP(6) * (t19 * xDP(5) * t657 + t59 * t661) + xDP(4) * t680 + xDP(5) * t24 * t684 + xDP(6) * (t19 * t22 * t684 + t17 * t680);
t696 = koppelP(3,2) * xDP(6);
t699 = -koppelP(3,1) * t141 + t17 * t696 + xDP(4) * koppelP(3,2);
t705 = t22 * t577 * xDP(4) - t575 * xDP(5);
t708 = t19 * t575;
t710 = t22 * t577;
t718 = koppelP(3,1) * t163 - xDP(5) * koppelP(3,3);
t722 = koppelP(3,2) * t141 + xDP(4) * koppelP(3,1);
t723 = t722 * t12;
t724 = t17 * t718 + t723;
t734 = koppelP(3,3) * t141;
t735 = t734 + xDP(1);
t737 = t589 * t49;
t738 = -t737 + xDP(2);
t741 = t578 * (t14 * (-t24 * t699 * t577 + t17 * t705 * koppelP(3,1) - (koppelP(3,2) * t708 - koppelP(3,1) * t710) * xDP(6)) - t24 * t724 * t577 - t17 * t705 * t585 - t12 * (koppelP(3,1) * t708 + koppelP(3,2) * t710) * xDP(6) + t575 * t735 + t738 * t577);
t747 = t22 * t575 * xDP(4) + t577 * xDP(5);
t750 = t22 * t575;
t752 = t19 * t577;
t756 = t24 * t699 * t575 - t17 * t747 * koppelP(3,1) - (koppelP(3,1) * t750 + koppelP(3,2) * t752) * xDP(6);
t759 = t24 * t724 * t575;
t761 = t17 * t747 * t585;
t766 = t12 * (koppelP(3,2) * t750 - koppelP(3,1) * t752) * xDP(6);
t768 = t735 * t577;
t772 = cos(qJ(2,3));
t788 = t14 * (t24 * t223 * koppelP(3,1) + t699 * t22) + t24 * (-t12 * t696 - t585 * t222 - koppelP(3,3) * t230) + t17 * t718 * t22 + t12 * t722 * t22 + xDP(3);
t790 = t772 * (t741 - (t14 * t756 - t575 * t738 + t759 + t761 + t766 + t768) * t574) + t788 * t581;
t791 = t772 * t790;
t799 = t581 * (t741 + t574 * (-t14 * t756 + t575 * t738 - t759 - t761 - t766 - t768)) - t772 * t788;
t802 = t581 ^ 2;
t803 = 0.1e1 / t802;
t805 = qJ(3,3) ^ 2;
t806 = 0.1e1 / t805;
t808 = koppelP(3,1) * t22;
t815 = koppelP(3,2) * t266;
t818 = t14 * (t223 * t808 - t24 * t699) + t24 * (-t17 * t718 - t723) - t815 * t49 - t737 - t585 * t269 + xDP(2);
t826 = t14 * (-koppelP(3,2) * t128 - koppelP(3,1) * t273) + t585 * t273 - t592 * t128 + t734 + xDP(1);
t834 = t578 * (t575 * t818 - t577 * t826) - (t575 * t826 + t577 * t818) * t574;
t835 = t834 * t806;
t837 = t834 * t772;
t838 = t806 * t803;
t841 = t582 * t834;
t842 = t799 * t806;
t844 = t648 * t583 + t692 * t584 * t653 - t835 * t803 * (t799 * t581 + t791) - t790 * t838 * t837 - t842 * t841;
t845 = t844 * t584;
t847 = sin(legFrame(4,3));
t848 = cos(qJ(1,4));
t849 = t848 * t847;
t850 = sin(qJ(1,4));
t851 = cos(legFrame(4,3));
t852 = t851 * t850;
t853 = -t849 - t852;
t854 = sin(qJ(2,4));
t855 = 0.1e1 / t854;
t856 = t855 * t853;
t857 = 0.1e1 / qJ(3,4);
t858 = koppelP(4,2) * t12;
t860 = -t14 * koppelP(4,1) + t858;
t862 = koppelP(4,3) * t19;
t863 = t17 * t860 + t862;
t864 = t22 * t863;
t865 = koppelP(4,1) * t12;
t867 = koppelP(4,2) * t14 + t865;
t868 = t867 * t24;
t869 = t864 + t868;
t871 = t24 * t863;
t872 = t867 * t22;
t873 = t871 - t872;
t883 = xDP(4) * t869;
t894 = t867 * t17;
t897 = t22 * t894 - t860 * t24;
t899 = koppelP(4,3) * t17;
t901 = t860 * t19 - t899;
t902 = t901 * t57;
t903 = -xDP(4) * t873 + xDP(6) * t897 + t902;
t907 = t860 * t22 + t24 * t894;
t909 = t901 * t51;
t910 = xDP(6) * t907 + t883 + t909;
t920 = xDDP(1) + xDDP(5) * (t22 * t869 + t24 * t873) + xDDP(6) * (t19 * t22 * t873 - t19 * t24 * t869) + xDP(5) * (t22 * xDP(4) * t873 - t24 * t883) + xDP(6) * (t53 * t869 + t59 * t873) + xDP(5) * (t22 * t903 + t24 * t910) + xDP(6) * (t19 * t22 * t910 - t19 * t24 * t903);
t921 = t920 * t857;
t923 = t850 * t847;
t924 = t851 * t848;
t925 = -t923 + t924;
t926 = t855 * t925;
t928 = -t17 * t860 - t862;
t930 = t22 * t928 - t868;
t934 = koppelP(4,1) * t102 - koppelP(4,2) * t104 + t899;
t953 = xDP(4) * (-t867 * t22 + t871) - xDP(6) * t897 - t902;
t956 = t867 * t128;
t957 = -xDP(5) * t928 - t956;
t965 = xDDP(2) + xDDP(4) * t930 + xDDP(5) * t24 * t934 + xDDP(6) * (t19 * t22 * t934 + t17 * t930) + t57 * xDP(4) * t934 + xDP(6) * (t19 * xDP(5) * t930 + t59 * t934) + xDP(4) * t953 + xDP(5) * t24 * t957 + xDP(6) * (t19 * t22 * t957 + t17 * t953);
t969 = koppelP(4,2) * xDP(6);
t972 = -koppelP(4,1) * t141 + t17 * t969 + xDP(4) * koppelP(4,2);
t978 = t22 * t850 * xDP(4) - t848 * xDP(5);
t981 = t19 * t848;
t983 = t22 * t850;
t991 = koppelP(4,1) * t163 - xDP(5) * koppelP(4,3);
t995 = koppelP(4,2) * t141 + xDP(4) * koppelP(4,1);
t996 = t995 * t12;
t997 = t17 * t991 + t996;
t1007 = koppelP(4,3) * t141;
t1008 = t1007 + xDP(1);
t1010 = t862 * t49;
t1011 = -t1010 + xDP(2);
t1014 = t851 * (t14 * (-t24 * t972 * t850 + t17 * t978 * koppelP(4,1) - (koppelP(4,2) * t981 - koppelP(4,1) * t983) * xDP(6)) - t24 * t997 * t850 - t17 * t978 * t858 - t12 * (koppelP(4,1) * t981 + koppelP(4,2) * t983) * xDP(6) + t848 * t1008 + t1011 * t850);
t1020 = t22 * t848 * xDP(4) + t850 * xDP(5);
t1023 = t22 * t848;
t1025 = t19 * t850;
t1029 = t24 * t972 * t848 - t17 * t1020 * koppelP(4,1) - (koppelP(4,1) * t1023 + koppelP(4,2) * t1025) * xDP(6);
t1032 = t24 * t997 * t848;
t1034 = t17 * t1020 * t858;
t1039 = t12 * (koppelP(4,2) * t1023 - koppelP(4,1) * t1025) * xDP(6);
t1041 = t1008 * t850;
t1045 = cos(qJ(2,4));
t1061 = t14 * (t24 * t223 * koppelP(4,1) + t972 * t22) + t24 * (-t12 * t969 - t858 * t222 - koppelP(4,3) * t230) + t17 * t991 * t22 + t12 * t995 * t22 + xDP(3);
t1063 = t1045 * (t1014 - (-t848 * t1011 + t14 * t1029 + t1032 + t1034 + t1039 + t1041) * t847) + t1061 * t854;
t1064 = t1045 * t1063;
t1072 = t854 * (t1014 + t847 * (t848 * t1011 - t14 * t1029 - t1032 - t1034 - t1039 - t1041)) - t1045 * t1061;
t1075 = t854 ^ 2;
t1076 = 0.1e1 / t1075;
t1078 = qJ(3,4) ^ 2;
t1079 = 0.1e1 / t1078;
t1081 = koppelP(4,1) * t22;
t1088 = koppelP(4,2) * t266;
t1091 = t14 * (t223 * t1081 - t24 * t972) + t24 * (-t17 * t991 - t996) - t1088 * t49 - t1010 - t858 * t269 + xDP(2);
t1099 = t14 * (-koppelP(4,2) * t128 - koppelP(4,1) * t273) + t858 * t273 - t865 * t128 + t1007 + xDP(1);
t1107 = t851 * (t848 * t1091 - t850 * t1099) - (t850 * t1091 + t848 * t1099) * t847;
t1108 = t1107 * t1079;
t1110 = t1107 * t1045;
t1111 = t1079 * t1076;
t1114 = t855 * t1107;
t1115 = t1072 * t1079;
t1117 = t921 * t856 + t965 * t857 * t926 - t1108 * t1076 * (t1072 * t854 + t1064) - t1063 * t1111 * t1110 - t1115 * t1114;
t1118 = t1117 * t857;
t1120 = sin(legFrame(5,3));
t1121 = cos(qJ(1,5));
t1122 = t1121 * t1120;
t1123 = sin(qJ(1,5));
t1124 = cos(legFrame(5,3));
t1125 = t1124 * t1123;
t1126 = -t1122 - t1125;
t1127 = sin(qJ(2,5));
t1128 = 0.1e1 / t1127;
t1129 = t1128 * t1126;
t1130 = 0.1e1 / qJ(3,5);
t1131 = koppelP(5,2) * t12;
t1133 = -t14 * koppelP(5,1) + t1131;
t1135 = koppelP(5,3) * t19;
t1136 = t17 * t1133 + t1135;
t1137 = t22 * t1136;
t1138 = koppelP(5,1) * t12;
t1140 = koppelP(5,2) * t14 + t1138;
t1141 = t1140 * t24;
t1142 = t1137 + t1141;
t1144 = t24 * t1136;
t1145 = t1140 * t22;
t1146 = t1144 - t1145;
t1156 = xDP(4) * t1142;
t1167 = t1140 * t17;
t1170 = -t1133 * t24 + t22 * t1167;
t1172 = koppelP(5,3) * t17;
t1174 = t1133 * t19 - t1172;
t1175 = t1174 * t57;
t1176 = -xDP(4) * t1146 + xDP(6) * t1170 + t1175;
t1180 = t1133 * t22 + t24 * t1167;
t1182 = t1174 * t51;
t1183 = xDP(6) * t1180 + t1156 + t1182;
t1193 = xDDP(1) + xDDP(5) * (t22 * t1142 + t24 * t1146) + xDDP(6) * (-t19 * t24 * t1142 + t19 * t22 * t1146) + xDP(5) * (t22 * xDP(4) * t1146 - t24 * t1156) + xDP(6) * (t53 * t1142 + t59 * t1146) + xDP(5) * (t22 * t1176 + t24 * t1183) + xDP(6) * (-t19 * t24 * t1176 + t19 * t22 * t1183);
t1194 = t1193 * t1130;
t1196 = t1123 * t1120;
t1197 = t1124 * t1121;
t1198 = -t1196 + t1197;
t1199 = t1128 * t1198;
t1201 = -t17 * t1133 - t1135;
t1203 = t22 * t1201 - t1141;
t1207 = koppelP(5,1) * t102 - koppelP(5,2) * t104 + t1172;
t1226 = xDP(4) * (-t1140 * t22 + t1144) - xDP(6) * t1170 - t1175;
t1229 = t1140 * t128;
t1230 = -xDP(5) * t1201 - t1229;
t1238 = xDDP(2) + xDDP(4) * t1203 + xDDP(5) * t24 * t1207 + xDDP(6) * (t19 * t22 * t1207 + t17 * t1203) + t57 * xDP(4) * t1207 + xDP(6) * (t19 * xDP(5) * t1203 + t59 * t1207) + xDP(4) * t1226 + xDP(5) * t24 * t1230 + xDP(6) * (t19 * t22 * t1230 + t17 * t1226);
t1242 = koppelP(5,2) * xDP(6);
t1245 = t17 * t1242 - koppelP(5,1) * t141 + xDP(4) * koppelP(5,2);
t1251 = t22 * t1123 * xDP(4) - t1121 * xDP(5);
t1254 = t19 * t1121;
t1256 = t22 * t1123;
t1264 = koppelP(5,1) * t163 - xDP(5) * koppelP(5,3);
t1268 = koppelP(5,2) * t141 + xDP(4) * koppelP(5,1);
t1269 = t1268 * t12;
t1270 = t17 * t1264 + t1269;
t1280 = koppelP(5,3) * t141;
t1281 = t1280 + xDP(1);
t1283 = t1135 * t49;
t1284 = -t1283 + xDP(2);
t1287 = t1124 * (t14 * (-t24 * t1245 * t1123 + t17 * t1251 * koppelP(5,1) - (koppelP(5,2) * t1254 - koppelP(5,1) * t1256) * xDP(6)) - t24 * t1270 * t1123 - t17 * t1251 * t1131 - t12 * (koppelP(5,1) * t1254 + koppelP(5,2) * t1256) * xDP(6) + t1121 * t1281 + t1284 * t1123);
t1293 = t22 * t1121 * xDP(4) + t1123 * xDP(5);
t1296 = t22 * t1121;
t1298 = t19 * t1123;
t1302 = t24 * t1245 * t1121 - t17 * t1293 * koppelP(5,1) - (koppelP(5,1) * t1296 + koppelP(5,2) * t1298) * xDP(6);
t1305 = t24 * t1270 * t1121;
t1307 = t17 * t1293 * t1131;
t1312 = t12 * (koppelP(5,2) * t1296 - koppelP(5,1) * t1298) * xDP(6);
t1314 = t1281 * t1123;
t1318 = cos(qJ(2,5));
t1334 = t14 * (t24 * t223 * koppelP(5,1) + t1245 * t22) + t24 * (-t1131 * t222 - t12 * t1242 - koppelP(5,3) * t230) + t17 * t1264 * t22 + t12 * t1268 * t22 + xDP(3);
t1336 = t1318 * (t1287 - (-t1121 * t1284 + t14 * t1302 + t1305 + t1307 + t1312 + t1314) * t1120) + t1334 * t1127;
t1337 = t1318 * t1336;
t1345 = t1127 * (t1287 + t1120 * (t1121 * t1284 - t14 * t1302 - t1305 - t1307 - t1312 - t1314)) - t1318 * t1334;
t1348 = t1127 ^ 2;
t1349 = 0.1e1 / t1348;
t1351 = qJ(3,5) ^ 2;
t1352 = 0.1e1 / t1351;
t1354 = koppelP(5,1) * t22;
t1361 = koppelP(5,2) * t266;
t1364 = t14 * (-t24 * t1245 + t223 * t1354) + t24 * (-t17 * t1264 - t1269) - t1361 * t49 - t1283 - t1131 * t269 + xDP(2);
t1372 = t14 * (-koppelP(5,2) * t128 - koppelP(5,1) * t273) + t1131 * t273 - t1138 * t128 + t1280 + xDP(1);
t1380 = t1124 * (t1121 * t1364 - t1123 * t1372) - (t1121 * t1372 + t1123 * t1364) * t1120;
t1381 = t1380 * t1352;
t1383 = t1380 * t1318;
t1384 = t1352 * t1349;
t1387 = t1128 * t1380;
t1388 = t1345 * t1352;
t1390 = t1194 * t1129 + t1238 * t1130 * t1199 - t1381 * t1349 * (t1345 * t1127 + t1337) - t1336 * t1384 * t1383 - t1388 * t1387;
t1391 = t1390 * t1130;
t1393 = sin(legFrame(6,3));
t1394 = cos(qJ(1,6));
t1395 = t1394 * t1393;
t1396 = sin(qJ(1,6));
t1397 = cos(legFrame(6,3));
t1398 = t1397 * t1396;
t1399 = -t1395 - t1398;
t1400 = sin(qJ(2,6));
t1401 = 0.1e1 / t1400;
t1402 = t1401 * t1399;
t1403 = 0.1e1 / qJ(3,6);
t1404 = koppelP(6,2) * t12;
t1406 = -t14 * koppelP(6,1) + t1404;
t1408 = koppelP(6,3) * t19;
t1409 = t17 * t1406 + t1408;
t1410 = t22 * t1409;
t1411 = koppelP(6,1) * t12;
t1413 = t14 * koppelP(6,2) + t1411;
t1414 = t1413 * t24;
t1415 = t1410 + t1414;
t1417 = t24 * t1409;
t1418 = t1413 * t22;
t1419 = t1417 - t1418;
t1429 = xDP(4) * t1415;
t1440 = t1413 * t17;
t1443 = -t1406 * t24 + t22 * t1440;
t1445 = koppelP(6,3) * t17;
t1447 = t1406 * t19 - t1445;
t1448 = t1447 * t57;
t1449 = -xDP(4) * t1419 + xDP(6) * t1443 + t1448;
t1453 = t1406 * t22 + t24 * t1440;
t1455 = t1447 * t51;
t1456 = xDP(6) * t1453 + t1429 + t1455;
t1466 = xDDP(1) + xDDP(5) * (t22 * t1415 + t24 * t1419) + xDDP(6) * (-t19 * t24 * t1415 + t19 * t22 * t1419) + xDP(5) * (t22 * xDP(4) * t1419 - t24 * t1429) + xDP(6) * (t53 * t1415 + t59 * t1419) + xDP(5) * (t22 * t1449 + t24 * t1456) + xDP(6) * (-t19 * t24 * t1449 + t19 * t22 * t1456);
t1467 = t1466 * t1403;
t1469 = t1396 * t1393;
t1470 = t1397 * t1394;
t1471 = -t1469 + t1470;
t1472 = t1401 * t1471;
t1474 = -t17 * t1406 - t1408;
t1476 = t22 * t1474 - t1414;
t1480 = koppelP(6,1) * t102 - koppelP(6,2) * t104 + t1445;
t1499 = xDP(4) * (-t1413 * t22 + t1417) - xDP(6) * t1443 - t1448;
t1502 = t1413 * t128;
t1503 = -xDP(5) * t1474 - t1502;
t1511 = xDDP(2) + xDDP(4) * t1476 + xDDP(5) * t24 * t1480 + xDDP(6) * (t19 * t22 * t1480 + t17 * t1476) + t57 * xDP(4) * t1480 + xDP(6) * (t19 * xDP(5) * t1476 + t59 * t1480) + xDP(4) * t1499 + xDP(5) * t24 * t1503 + xDP(6) * (t19 * t22 * t1503 + t17 * t1499);
t1515 = koppelP(6,2) * xDP(6);
t1518 = -koppelP(6,1) * t141 + t17 * t1515 + xDP(4) * koppelP(6,2);
t1524 = t22 * t1396 * xDP(4) - t1394 * xDP(5);
t1527 = t19 * t1394;
t1529 = t22 * t1396;
t1537 = koppelP(6,1) * t163 - xDP(5) * koppelP(6,3);
t1541 = koppelP(6,2) * t141 + xDP(4) * koppelP(6,1);
t1542 = t1541 * t12;
t1543 = t17 * t1537 + t1542;
t1553 = koppelP(6,3) * t141;
t1554 = t1553 + xDP(1);
t1556 = t1408 * t49;
t1557 = -t1556 + xDP(2);
t1560 = t1397 * (t14 * (-t24 * t1518 * t1396 + t17 * t1524 * koppelP(6,1) - (koppelP(6,2) * t1527 - koppelP(6,1) * t1529) * xDP(6)) - t24 * t1543 * t1396 - t17 * t1524 * t1404 - t12 * (koppelP(6,1) * t1527 + koppelP(6,2) * t1529) * xDP(6) + t1394 * t1554 + t1557 * t1396);
t1566 = t22 * t1394 * xDP(4) + t1396 * xDP(5);
t1569 = t22 * t1394;
t1571 = t19 * t1396;
t1575 = t24 * t1518 * t1394 - t17 * t1566 * koppelP(6,1) - (koppelP(6,1) * t1569 + koppelP(6,2) * t1571) * xDP(6);
t1578 = t24 * t1543 * t1394;
t1580 = t17 * t1566 * t1404;
t1585 = t12 * (koppelP(6,2) * t1569 - koppelP(6,1) * t1571) * xDP(6);
t1587 = t1554 * t1396;
t1591 = cos(qJ(2,6));
t1607 = t14 * (t24 * t223 * koppelP(6,1) + t1518 * t22) + t24 * (-t12 * t1515 - t1404 * t222 - koppelP(6,3) * t230) + t17 * t1537 * t22 + t12 * t1541 * t22 + xDP(3);
t1609 = t1591 * (t1560 - (-t1394 * t1557 + t14 * t1575 + t1578 + t1580 + t1585 + t1587) * t1393) + t1607 * t1400;
t1610 = t1591 * t1609;
t1618 = t1400 * (t1560 + t1393 * (t1394 * t1557 - t14 * t1575 - t1578 - t1580 - t1585 - t1587)) - t1591 * t1607;
t1621 = t1400 ^ 2;
t1622 = 0.1e1 / t1621;
t1624 = qJ(3,6) ^ 2;
t1625 = 0.1e1 / t1624;
t1627 = koppelP(6,1) * t22;
t1634 = koppelP(6,2) * t266;
t1637 = t14 * (-t24 * t1518 + t223 * t1627) + t24 * (-t17 * t1537 - t1542) - t1634 * t49 - t1556 - t1404 * t269 + xDP(2);
t1645 = t14 * (-koppelP(6,2) * t128 - koppelP(6,1) * t273) + t1404 * t273 - t1411 * t128 + t1553 + xDP(1);
t1653 = t1397 * (t1394 * t1637 - t1396 * t1645) - (t1394 * t1645 + t1396 * t1637) * t1393;
t1654 = t1653 * t1625;
t1656 = t1653 * t1591;
t1657 = t1625 * t1622;
t1660 = t1401 * t1653;
t1661 = t1618 * t1625;
t1663 = t1467 * t1402 + t1511 * t1403 * t1472 - t1654 * t1622 * (t1618 * t1400 + t1610) - t1609 * t1657 * t1656 - t1661 * t1660;
t1664 = t1663 * t1403;
t1670 = g(1) * t1 - g(2) * t5;
t1674 = g(1) * t5 + g(2) * t1;
t1676 = t2 * t1670 + t4 * t1674;
t1677 = t1676 * t11;
t1681 = g(1) * t301 - g(2) * t305;
t1685 = g(1) * t305 + g(2) * t301;
t1687 = t302 * t1681 + t304 * t1685;
t1688 = t1687 * t311;
t1692 = g(1) * t574 - g(2) * t578;
t1696 = g(1) * t578 + g(2) * t574;
t1698 = t575 * t1692 + t577 * t1696;
t1699 = t1698 * t584;
t1703 = g(1) * t847 - g(2) * t851;
t1707 = g(1) * t851 + g(2) * t847;
t1709 = t848 * t1703 + t850 * t1707;
t1710 = t1709 * t857;
t1714 = g(1) * t1120 - g(2) * t1124;
t1718 = g(1) * t1124 + g(2) * t1120;
t1720 = t1121 * t1714 + t1123 * t1718;
t1721 = t1720 * t1130;
t1725 = g(1) * t1393 - g(2) * t1397;
t1729 = g(1) * t1397 + g(2) * t1393;
t1731 = t1394 * t1725 + t1396 * t1729;
t1732 = t1731 * t1403;
t1738 = -t4 * t1670 + t2 * t1674;
t1739 = t1738 * t11;
t1743 = -t304 * t1681 + t302 * t1685;
t1744 = t1743 * t311;
t1748 = -t577 * t1692 + t575 * t1696;
t1749 = t1748 * t584;
t1753 = -t850 * t1703 + t848 * t1707;
t1754 = t1753 * t857;
t1758 = t1121 * t1718 - t1123 * t1714;
t1759 = t1758 * t1130;
t1763 = t1394 * t1729 - t1396 * t1725;
t1764 = t1763 * t1403;
t1771 = 0.2e1 * t242 * t289 + t298 * t253;
t1772 = t1771 * t11;
t1774 = t220 ^ 2;
t1775 = t1774 * t95;
t1777 = 0.1e1 / t256 / qJ(3,1);
t1779 = t288 ^ 2;
t1785 = 0.2e1 * t518 * t562 + t571 * t529;
t1786 = t1785 * t311;
t1788 = t499 ^ 2;
t1789 = t1788 * t379;
t1791 = 0.1e1 / t532 / qJ(3,2);
t1793 = t561 ^ 2;
t1799 = 0.2e1 * t791 * t835 + t844 * t802;
t1800 = t1799 * t584;
t1802 = t772 ^ 2;
t1803 = t1802 * t652;
t1805 = 0.1e1 / t805 / qJ(3,3);
t1807 = t834 ^ 2;
t1813 = 0.2e1 * t1064 * t1108 + t1117 * t1075;
t1814 = t1813 * t857;
t1816 = t1045 ^ 2;
t1817 = t1816 * t925;
t1819 = 0.1e1 / t1078 / qJ(3,4);
t1821 = t1107 ^ 2;
t1827 = 0.2e1 * t1337 * t1381 + t1390 * t1348;
t1828 = t1827 * t1130;
t1830 = t1318 ^ 2;
t1831 = t1830 * t1198;
t1833 = 0.1e1 / t1351 / qJ(3,5);
t1835 = t1380 ^ 2;
t1841 = 0.2e1 * t1610 * t1654 + t1663 * t1621;
t1842 = t1841 * t1403;
t1844 = t1591 ^ 2;
t1845 = t1844 * t1471;
t1847 = 0.1e1 / t1624 / qJ(3,6);
t1849 = t1653 ^ 2;
t1852 = t1772 * t10 - t1779 * t9 * t1777 * t1775 + t1786 * t310 - t1793 * t309 * t1791 * t1789 + t1800 * t583 - t1807 * t582 * t1805 * t1803 + t1814 * t856 - t1821 * t855 * t1819 * t1817 + t1828 * t1129 - t1835 * t1128 * t1833 * t1831 + t1842 * t1402 - t1849 * t1401 * t1847 * t1845;
t1854 = t257 * t241;
t1856 = t9 * t288 * t1774;
t1859 = t298 * t8;
t1860 = t220 * t1859;
t1864 = 0.4e1 * t1856 * t1854 - 0.2e1 * t1854 * t295 + 0.2e1 * t1860;
t1865 = t1864 * t11;
t1867 = t220 * t95;
t1868 = t1779 * t1774;
t1869 = t292 * t1868;
t1871 = t254 * t1779;
t1872 = t257 * t1871;
t1873 = -0.2e1 * t1869 + t1872;
t1876 = t533 * t517;
t1878 = t309 * t561 * t1788;
t1881 = t571 * t308;
t1882 = t499 * t1881;
t1886 = 0.4e1 * t1878 * t1876 - 0.2e1 * t1876 * t568 + 0.2e1 * t1882;
t1887 = t1886 * t311;
t1889 = t499 * t379;
t1890 = t1793 * t1788;
t1891 = t565 * t1890;
t1893 = t530 * t1793;
t1894 = t533 * t1893;
t1895 = -0.2e1 * t1891 + t1894;
t1898 = t806 * t790;
t1900 = t582 * t834 * t1802;
t1903 = t844 * t581;
t1904 = t772 * t1903;
t1908 = 0.4e1 * t1900 * t1898 - 0.2e1 * t1898 * t841 + 0.2e1 * t1904;
t1909 = t1908 * t584;
t1911 = t772 * t652;
t1912 = t1807 * t1802;
t1913 = t838 * t1912;
t1915 = t803 * t1807;
t1916 = t806 * t1915;
t1917 = -0.2e1 * t1913 + t1916;
t1920 = t1079 * t1063;
t1922 = t855 * t1107 * t1816;
t1925 = t1117 * t854;
t1926 = t1045 * t1925;
t1930 = -0.2e1 * t1920 * t1114 + 0.4e1 * t1922 * t1920 + 0.2e1 * t1926;
t1931 = t1930 * t857;
t1933 = t1045 * t925;
t1934 = t1821 * t1816;
t1935 = t1111 * t1934;
t1937 = t1076 * t1821;
t1938 = t1079 * t1937;
t1939 = -0.2e1 * t1935 + t1938;
t1942 = t1352 * t1336;
t1944 = t1128 * t1380 * t1830;
t1947 = t1390 * t1127;
t1948 = t1318 * t1947;
t1952 = -0.2e1 * t1942 * t1387 + 0.4e1 * t1944 * t1942 + 0.2e1 * t1948;
t1953 = t1952 * t1130;
t1955 = t1318 * t1198;
t1956 = t1835 * t1830;
t1957 = t1384 * t1956;
t1959 = t1349 * t1835;
t1960 = t1352 * t1959;
t1961 = -0.2e1 * t1957 + t1960;
t1964 = t1625 * t1609;
t1966 = t1401 * t1653 * t1844;
t1969 = t1663 * t1400;
t1970 = t1591 * t1969;
t1974 = -0.2e1 * t1964 * t1660 + 0.4e1 * t1966 * t1964 + 0.2e1 * t1970;
t1975 = t1974 * t1403;
t1977 = t1591 * t1471;
t1978 = t1849 * t1844;
t1979 = t1657 * t1978;
t1981 = t1622 * t1849;
t1982 = t1625 * t1981;
t1983 = -0.2e1 * t1979 + t1982;
t1986 = t1873 * t11 * t1867 + t1961 * t1130 * t1955 + t1983 * t1403 * t1977 + t1895 * t311 * t1889 + t1917 * t584 * t1911 + t1939 * t857 * t1933 + t1865 * t10 + t1953 * t1129 + t1975 * t1402 + t1887 * t310 + t1909 * t583 + t1931 * t856;
t1988 = t91 * t1867;
t1989 = -t7 * t11;
t1991 = t138 * t220 * t1989;
t1992 = t8 * t11;
t1994 = t24 * t98 + t32;
t2014 = xDP(4) * (-t27 * t24 - t23) - xDP(6) * t77 - t79;
t2017 = xDP(5) * t98 + t129;
t2025 = xDDP(3) + xDDP(4) * t1994 - xDDP(5) * t22 * t106 + xDDP(6) * (t19 * t24 * t106 + t17 * t1994) + t51 * xDP(4) * t106 + xDP(6) * (t19 * xDP(5) * t1994 - t53 * t106) + xDP(4) * t2014 + xDP(5) * t22 * t2017 + xDP(6) * (-t19 * t24 * t2017 + t17 * t2014);
t2026 = t2025 * t1992;
t2027 = t1779 * t9;
t2029 = t220 * t257 * t2027;
t2031 = 0.2e1 * t241 * t296;
t2032 = t1988 + t1991 + t2026 + t2029 - t2031;
t2034 = t241 ^ 2;
t2035 = t257 * t2034;
t2037 = t8 * t2032 + t220 * t2035;
t2038 = t2037 * t11;
t2042 = t375 * t1889;
t2043 = -t307 * t311;
t2045 = t419 * t499 * t2043;
t2046 = t308 * t311;
t2048 = t24 * t382 + t326;
t2068 = xDP(4) * (-t321 * t24 - t318) - xDP(6) * t361 - t363;
t2071 = xDP(5) * t382 + t410;
t2079 = xDDP(3) + xDDP(4) * t2048 - xDDP(5) * t22 * t388 + xDDP(6) * (t19 * t24 * t388 + t17 * t2048) + t51 * xDP(4) * t388 + xDP(6) * (t19 * xDP(5) * t2048 - t53 * t388) + xDP(4) * t2068 + xDP(5) * t22 * t2071 + xDP(6) * (-t19 * t24 * t2071 + t17 * t2068);
t2080 = t2079 * t2046;
t2081 = t1793 * t309;
t2083 = t499 * t533 * t2081;
t2085 = 0.2e1 * t517 * t569;
t2086 = t2042 + t2045 + t2080 + t2083 - t2085;
t2088 = t517 ^ 2;
t2089 = t533 * t2088;
t2091 = t308 * t2086 + t499 * t2089;
t2092 = t2091 * t311;
t2096 = t648 * t1911;
t2097 = -t580 * t584;
t2099 = t692 * t772 * t2097;
t2100 = t581 * t584;
t2102 = t24 * t655 + t599;
t2122 = xDP(4) * (-t594 * t24 - t591) - xDP(6) * t634 - t636;
t2125 = xDP(5) * t655 + t683;
t2133 = xDDP(3) + xDDP(4) * t2102 - xDDP(5) * t22 * t661 + xDDP(6) * (t19 * t24 * t661 + t17 * t2102) + t51 * xDP(4) * t661 + xDP(6) * (t19 * xDP(5) * t2102 - t53 * t661) + xDP(4) * t2122 + xDP(5) * t22 * t2125 + xDP(6) * (-t19 * t24 * t2125 + t17 * t2122);
t2134 = t2133 * t2100;
t2135 = t1807 * t582;
t2137 = t772 * t806 * t2135;
t2139 = 0.2e1 * t790 * t842;
t2140 = t2096 + t2099 + t2134 + t2137 - t2139;
t2142 = t790 ^ 2;
t2143 = t806 * t2142;
t2145 = t581 * t2140 + t772 * t2143;
t2146 = t2145 * t584;
t2150 = t921 * t1933;
t2151 = -t853 * t857;
t2153 = t965 * t1045 * t2151;
t2154 = t854 * t857;
t2156 = t24 * t928 + t872;
t2176 = xDP(4) * (-t867 * t24 - t864) - xDP(6) * t907 - t909;
t2179 = xDP(5) * t928 + t956;
t2187 = xDDP(3) + xDDP(4) * t2156 - xDDP(5) * t22 * t934 + xDDP(6) * (t19 * t24 * t934 + t17 * t2156) + t51 * xDP(4) * t934 + xDP(6) * (t19 * xDP(5) * t2156 - t53 * t934) + xDP(4) * t2176 + xDP(5) * t22 * t2179 + xDP(6) * (-t19 * t24 * t2179 + t17 * t2176);
t2188 = t2187 * t2154;
t2189 = t1821 * t855;
t2191 = t1045 * t1079 * t2189;
t2193 = 0.2e1 * t1063 * t1115;
t2194 = t2150 + t2153 + t2188 + t2191 - t2193;
t2196 = t1063 ^ 2;
t2197 = t1079 * t2196;
t2199 = t1045 * t2197 + t854 * t2194;
t2200 = t2199 * t857;
t2204 = t1194 * t1955;
t2205 = -t1126 * t1130;
t2207 = t1238 * t1318 * t2205;
t2208 = t1127 * t1130;
t2210 = t24 * t1201 + t1145;
t2230 = xDP(4) * (-t1140 * t24 - t1137) - xDP(6) * t1180 - t1182;
t2233 = xDP(5) * t1201 + t1229;
t2241 = xDDP(3) + xDDP(4) * t2210 - xDDP(5) * t22 * t1207 + xDDP(6) * (t19 * t24 * t1207 + t17 * t2210) + t51 * xDP(4) * t1207 + xDP(6) * (t19 * xDP(5) * t2210 - t53 * t1207) + xDP(4) * t2230 + xDP(5) * t22 * t2233 + xDP(6) * (-t19 * t24 * t2233 + t17 * t2230);
t2242 = t2241 * t2208;
t2243 = t1835 * t1128;
t2245 = t1318 * t1352 * t2243;
t2247 = 0.2e1 * t1336 * t1388;
t2248 = t2204 + t2207 + t2242 + t2245 - t2247;
t2250 = t1336 ^ 2;
t2251 = t1352 * t2250;
t2253 = t1127 * t2248 + t1318 * t2251;
t2254 = t2253 * t1130;
t2258 = t1467 * t1977;
t2259 = -t1399 * t1403;
t2261 = t1511 * t1591 * t2259;
t2262 = t1400 * t1403;
t2264 = t24 * t1474 + t1418;
t2284 = xDP(4) * (-t1413 * t24 - t1410) - xDP(6) * t1453 - t1455;
t2287 = xDP(5) * t1474 + t1502;
t2295 = xDDP(3) + xDDP(4) * t2264 - xDDP(5) * t22 * t1480 + xDDP(6) * (t19 * t24 * t1480 + t17 * t2264) + t51 * xDP(4) * t1480 + xDP(6) * (t19 * xDP(5) * t2264 - t53 * t1480) + xDP(4) * t2284 + xDP(5) * t22 * t2287 + xDP(6) * (-t19 * t24 * t2287 + t17 * t2284);
t2296 = t2295 * t2262;
t2297 = t1849 * t1401;
t2299 = t1591 * t1625 * t2297;
t2301 = 0.2e1 * t1609 * t1661;
t2302 = t2258 + t2261 + t2296 + t2299 - t2301;
t2304 = t1609 ^ 2;
t2305 = t1625 * t2304;
t2307 = t1400 * t2302 + t1591 * t2305;
t2308 = t2307 * t1403;
t2312 = t1117 * t2154 * t1933 + t1390 * t2208 * t1955 + t1663 * t2262 * t1977 + t298 * t1992 * t1867 + t571 * t2046 * t1889 + t844 * t2100 * t1911 + t2038 * t10 + t2254 * t1129 + t2308 * t1402 + t2092 * t310 + t2146 * t583 + t2200 * t856;
t2314 = t220 * t2032;
t2316 = -t8 * t2035 + t2314;
t2317 = t2316 * t11;
t2320 = t499 * t2086;
t2322 = -t308 * t2089 + t2320;
t2323 = t2322 * t311;
t2326 = t772 * t2140;
t2328 = -t581 * t2143 + t2326;
t2329 = t2328 * t584;
t2332 = t1045 * t2194;
t2334 = -t854 * t2197 + t2332;
t2335 = t2334 * t857;
t2338 = t1318 * t2248;
t2340 = -t1127 * t2251 + t2338;
t2341 = t2340 * t1130;
t2344 = t1591 * t2302;
t2346 = -t1400 * t2305 + t2344;
t2347 = t2346 * t1403;
t2350 = t2317 * t10 + t1118 * t1817 + t2341 * t1129 + t1391 * t1831 + t2347 * t1402 + t1664 * t1845 + t299 * t1775 + t572 * t1789 + t845 * t1803 + t2323 * t310 + t2329 * t583 + t2335 * t856;
t2367 = t1676 * t220 * t11;
t2371 = t2 * g(1) + t4 * g(2);
t2372 = t5 * t2371;
t2375 = t4 * g(1) - t2 * g(2);
t2376 = t2375 * t1;
t2377 = t2372 - t2376;
t2378 = t8 * t2377;
t2379 = t220 * g(3);
t2380 = t2378 - t2379;
t2384 = t1687 * t499 * t311;
t2388 = t302 * g(1) + g(2) * t304;
t2389 = t305 * t2388;
t2392 = t304 * g(1) - t302 * g(2);
t2393 = t2392 * t301;
t2394 = t2389 - t2393;
t2395 = t308 * t2394;
t2396 = t499 * g(3);
t2397 = t2395 - t2396;
t2401 = t1698 * t772 * t584;
t2405 = t575 * g(1) + g(2) * t577;
t2406 = t578 * t2405;
t2409 = t577 * g(1) - t575 * g(2);
t2410 = t2409 * t574;
t2411 = t2406 - t2410;
t2412 = t581 * t2411;
t2413 = t772 * g(3);
t2414 = t2412 - t2413;
t2418 = t1709 * t1045 * t857;
t2422 = t848 * g(1) + g(2) * t850;
t2423 = t851 * t2422;
t2426 = t850 * g(1) - t848 * g(2);
t2427 = t2426 * t847;
t2428 = t2423 - t2427;
t2429 = t854 * t2428;
t2430 = t1045 * g(3);
t2431 = t2429 - t2430;
t2435 = t1720 * t1318 * t1130;
t2439 = t1121 * g(1) + g(2) * t1123;
t2440 = t1124 * t2439;
t2443 = t1123 * g(1) - t1121 * g(2);
t2444 = t2443 * t1120;
t2445 = t2440 - t2444;
t2446 = t1127 * t2445;
t2447 = t1318 * g(3);
t2448 = t2446 - t2447;
t2452 = t1731 * t1591 * t1403;
t2456 = t1394 * g(1) + g(2) * t1396;
t2457 = t1397 * t2456;
t2460 = t1396 * g(1) - t1394 * g(2);
t2461 = t2460 * t1393;
t2462 = t2457 - t2461;
t2463 = t1400 * t2462;
t2464 = t1591 * g(3);
t2465 = t2463 - t2464;
t2468 = t2380 * t11 * t1867 + t2448 * t1130 * t1955 + t2465 * t1403 * t1977 + t2397 * t311 * t1889 + t2414 * t584 * t1911 + t2431 * t857 * t1933 + t2367 * t10 + t2435 * t1129 + t2452 * t1402 + t2384 * t310 + t2401 * t583 + t2418 * t856;
t2470 = t7 * t11;
t2473 = t8 * g(3);
t2474 = t220 * t2377 + t2473;
t2477 = t307 * t311;
t2480 = t308 * g(3);
t2481 = t499 * t2394 + t2480;
t2484 = t580 * t584;
t2487 = t581 * g(3);
t2488 = t772 * t2411 + t2487;
t2491 = t853 * t857;
t2494 = t854 * g(3);
t2495 = t1045 * t2428 + t2494;
t2498 = t1126 * t1130;
t2501 = t1127 * g(3);
t2502 = t1318 * t2445 + t2501;
t2505 = t1399 * t1403;
t2508 = t1400 * g(3);
t2509 = t1591 * t2462 + t2508;
t2512 = t2474 * t11 * t1867 + t2502 * t1130 * t1955 + t2509 * t1403 * t1977 + t2481 * t311 * t1889 + t2488 * t584 * t1911 + t2495 * t857 * t1933 - t1676 * t2470 - t1687 * t2477 - t1698 * t2484 - t1709 * t2491 - t1720 * t2498 - t1731 * t2505;
t2514 = t11 * t241;
t2529 = 0.4e1 * t1856 * t2514 + t220 * (t5 * t2375 + t1 * t2371 + 0.2e1 * (t250 * t11 * t295 + t298 * qJ(3,1)) * t8) - 0.2e1 * t295 * t2514;
t2530 = t2529 * t11;
t2533 = t11 * t254 * t1868;
t2536 = t8 * t95;
t2537 = t90 * t2536;
t2538 = -t7 * t8;
t2539 = t138 * t2538;
t2540 = t2025 * t220;
t2543 = t11 * t9;
t2544 = t2543 * t288 * (t1856 - t295);
t2545 = t11 * t2034;
t2546 = t11 * t1871 + t2378 - t2379 - 0.2e1 * t2533 - t2537 - t2539 + t2540 + t2544 - t2545;
t2550 = -t1988 - t1991 - t2026 - 0.2e1 * t2029 + t2031;
t2552 = t311 * t517;
t2567 = 0.4e1 * t1878 * t2552 + t499 * (t305 * t2392 + t301 * t2388 + 0.2e1 * (t526 * t311 * t568 + t571 * qJ(3,2)) * t308) - 0.2e1 * t2552 * t568;
t2568 = t2567 * t311;
t2571 = t311 * t530 * t1890;
t2574 = t308 * t379;
t2575 = t374 * t2574;
t2576 = -t307 * t308;
t2577 = t419 * t2576;
t2578 = t2079 * t499;
t2581 = t311 * t309;
t2582 = t2581 * t561 * (t1878 - t568);
t2583 = t311 * t2088;
t2584 = t311 * t1893 + t2395 - t2396 - 0.2e1 * t2571 - t2575 - t2577 + t2578 + t2582 - t2583;
t2588 = -t2042 - t2045 - t2080 - 0.2e1 * t2083 + t2085;
t2590 = t584 * t790;
t2605 = 0.4e1 * t1900 * t2590 + t772 * (t578 * t2409 + t574 * t2405 + 0.2e1 * (t799 * t584 * t841 + t844 * qJ(3,3)) * t581) - 0.2e1 * t841 * t2590;
t2606 = t2605 * t584;
t2609 = t584 * t803 * t1912;
t2612 = t581 * t652;
t2613 = t647 * t2612;
t2614 = -t580 * t581;
t2615 = t692 * t2614;
t2616 = t2133 * t772;
t2619 = t584 * t582;
t2620 = t2619 * t834 * (t1900 - t841);
t2621 = t584 * t2142;
t2622 = t584 * t1915 + t2412 - t2413 - 0.2e1 * t2609 - t2613 - t2615 + t2616 + t2620 - t2621;
t2626 = -t2096 - t2099 - t2134 - 0.2e1 * t2137 + t2139;
t2628 = t857 * t1063;
t2643 = 0.4e1 * t1922 * t2628 + t1045 * (t851 * t2426 + t847 * t2422 + 0.2e1 * (t1072 * t857 * t1114 + t1117 * qJ(3,4)) * t854) - 0.2e1 * t2628 * t1114;
t2644 = t2643 * t857;
t2647 = t857 * t1076 * t1934;
t2650 = t854 * t925;
t2651 = t920 * t2650;
t2652 = -t853 * t854;
t2653 = t965 * t2652;
t2654 = t2187 * t1045;
t2657 = t857 * t855;
t2658 = t2657 * t1107 * (t1922 - t1114);
t2659 = t857 * t2196;
t2660 = t857 * t1937 + t2429 - t2430 - 0.2e1 * t2647 - t2651 - t2653 + t2654 + t2658 - t2659;
t2664 = -t2150 - t2153 - t2188 - 0.2e1 * t2191 + t2193;
t2666 = t1130 * t1336;
t2681 = 0.4e1 * t1944 * t2666 + t1318 * (t1124 * t2443 + t1120 * t2439 + 0.2e1 * (t1345 * t1130 * t1387 + t1390 * qJ(3,5)) * t1127) - 0.2e1 * t1387 * t2666;
t2682 = t2681 * t1130;
t2685 = t1130 * t1349 * t1956;
t2688 = t1127 * t1198;
t2689 = t1193 * t2688;
t2690 = -t1126 * t1127;
t2691 = t1238 * t2690;
t2692 = t2241 * t1318;
t2695 = t1130 * t1128;
t2696 = t2695 * t1380 * (t1944 - t1387);
t2697 = t1130 * t2250;
t2698 = t1130 * t1959 + t2446 - t2447 - 0.2e1 * t2685 - t2689 - t2691 + t2692 + t2696 - t2697;
t2702 = -t2204 - t2207 - t2242 - 0.2e1 * t2245 + t2247;
t2704 = t1403 * t1609;
t2719 = 0.4e1 * t1966 * t2704 + t1591 * (t1397 * t2460 + t1393 * t2456 + 0.2e1 * (t1618 * t1403 * t1660 + t1663 * qJ(3,6)) * t1400) - 0.2e1 * t2704 * t1660;
t2720 = t2719 * t1403;
t2723 = t1403 * t1622 * t1978;
t2726 = t1400 * t1471;
t2727 = t1466 * t2726;
t2728 = -t1399 * t1400;
t2729 = t1511 * t2728;
t2730 = t2295 * t1591;
t2733 = t1403 * t1401;
t2734 = t2733 * t1653 * (t1966 - t1660);
t2735 = t1403 * t2304;
t2736 = t1403 * t1981 + t2463 - t2464 - 0.2e1 * t2723 - t2727 - t2729 + t2730 + t2734 - t2735;
t2740 = -t2258 - t2261 - t2296 - 0.2e1 * t2299 + t2301;
t2742 = t2530 * t10 + t2546 * t11 * t1867 + t2550 * t2536 + t2568 * t310 + t2584 * t311 * t1889 + t2588 * t2574 + t2606 * t583 + t2622 * t584 * t1911 + t2626 * t2612 + t2644 * t856 + t2660 * t857 * t1933 + t2664 * t2650 + t2682 * t1129 + t2698 * t1130 * t1955 + t2702 * t2688 + t2720 * t1402 + t2736 * t1403 * t1977 + t2740 * t2726;
t2747 = t2032 * qJ(3,1);
t2750 = 0.2e1 * t11 * t241 * t250;
t2754 = t8 * (t2537 + t2539 - t2540 - t2544) + t2376 - g(2) * t6 + t220 * (t2747 + t2750) - g(1) * t94;
t2755 = t2754 * t11;
t2763 = t2086 * qJ(3,2);
t2766 = 0.2e1 * t311 * t517 * t526;
t2770 = t308 * (t2575 + t2577 - t2578 - t2582) + t2393 - g(2) * t306 + t499 * (t2763 + t2766) - g(1) * t378;
t2771 = t2770 * t311;
t2779 = t2140 * qJ(3,3);
t2782 = 0.2e1 * t584 * t790 * t799;
t2786 = t581 * (t2613 + t2615 - t2616 - t2620) + t2410 - g(2) * t579 + t772 * (t2779 + t2782) - g(1) * t651;
t2787 = t2786 * t584;
t2795 = t2194 * qJ(3,4);
t2798 = 0.2e1 * t857 * t1063 * t1072;
t2802 = t854 * (t2651 + t2653 - t2654 - t2658) + t2427 - g(2) * t852 + t1045 * (t2795 + t2798) - g(1) * t924;
t2803 = t2802 * t857;
t2811 = t2248 * qJ(3,5);
t2814 = 0.2e1 * t1130 * t1336 * t1345;
t2818 = t1127 * (t2689 + t2691 - t2692 - t2696) + t2444 - g(2) * t1125 + t1318 * (t2811 + t2814) - g(1) * t1197;
t2819 = t2818 * t1130;
t2827 = t2302 * qJ(3,6);
t2830 = 0.2e1 * t1403 * t1609 * t1618;
t2834 = t1400 * (t2727 + t2729 - t2730 - t2734) + t2461 - g(2) * t1398 + t1591 * (t2827 + t2830) - g(1) * t1470;
t2835 = t2834 * t1403;
t2840 = t2755 * t10 + t298 * t1775 + t298 * t253 * t95 + t2771 * t310 + t571 * t1789 + t571 * t529 * t379 + t2787 * t583 + t844 * t1803 + t844 * t802 * t652 + t2803 * t856 + t1117 * t1817 + t1117 * t1075 * t925 + t2819 * t1129 + t1390 * t1831 + t1390 * t1348 * t1198 + t2835 * t1402 + t1663 * t1845 + t1663 * t1621 * t1471;
t2843 = t9 * t291 * t2514;
t2845 = g(2) * t93;
t2846 = g(1) * t3;
t2847 = g(1) * t6;
t2848 = g(2) * t94;
t2849 = qJ(3,1) * t1859;
t2853 = 0.2e1 * t250 * t11 * t288;
t2854 = 0.4e1 * t2843 + t2845 + t2846 + t2847 - t2848 + 0.2e1 * t2849 + t2853;
t2856 = -t5 * t2371;
t2857 = t1779 * t2543;
t2862 = t220 * (t2856 + t2376 - 0.2e1 * t2857) + 0.2e1 * t2747 - t2473 + t2750;
t2865 = t1869 - t1872 - t2035;
t2868 = t309 * t564 * t2552;
t2870 = g(2) * t377;
t2871 = g(1) * t303;
t2872 = g(1) * t306;
t2873 = g(2) * t378;
t2874 = qJ(3,2) * t1881;
t2878 = 0.2e1 * t526 * t311 * t561;
t2879 = 0.4e1 * t2868 + t2870 + t2871 + t2872 - t2873 + 0.2e1 * t2874 + t2878;
t2881 = -t305 * t2388;
t2882 = t1793 * t2581;
t2887 = t499 * (t2881 + t2393 - 0.2e1 * t2882) + 0.2e1 * t2763 - t2480 + t2766;
t2890 = t1891 - t1894 - t2089;
t2893 = t582 * t837 * t2590;
t2895 = g(2) * t650;
t2896 = g(1) * t576;
t2897 = g(1) * t579;
t2898 = g(2) * t651;
t2899 = qJ(3,3) * t1903;
t2903 = 0.2e1 * t799 * t584 * t834;
t2904 = 0.4e1 * t2893 + t2895 + t2896 + t2897 - t2898 + 0.2e1 * t2899 + t2903;
t2906 = -t578 * t2405;
t2907 = t1807 * t2619;
t2912 = t772 * (t2906 + t2410 - 0.2e1 * t2907) + 0.2e1 * t2779 - t2487 + t2782;
t2915 = t1913 - t1916 - t2143;
t2918 = t855 * t1110 * t2628;
t2920 = g(2) * t923;
t2921 = g(1) * t849;
t2922 = g(1) * t852;
t2923 = g(2) * t924;
t2924 = qJ(3,4) * t1925;
t2928 = 0.2e1 * t1072 * t857 * t1107;
t2929 = 0.4e1 * t2918 + t2920 + t2921 + t2922 - t2923 + 0.2e1 * t2924 + t2928;
t2931 = -t851 * t2422;
t2932 = t1821 * t2657;
t2937 = t1045 * (t2931 + t2427 - 0.2e1 * t2932) + 0.2e1 * t2795 - t2494 + t2798;
t2940 = t1935 - t1938 - t2197;
t2943 = t1128 * t1383 * t2666;
t2945 = g(2) * t1196;
t2946 = g(1) * t1122;
t2947 = g(1) * t1125;
t2948 = g(2) * t1197;
t2949 = qJ(3,5) * t1947;
t2953 = 0.2e1 * t1345 * t1130 * t1380;
t2954 = 0.4e1 * t2943 + t2945 + t2946 + t2947 - t2948 + 0.2e1 * t2949 + t2953;
t2956 = -t1124 * t2439;
t2957 = t1835 * t2695;
t2962 = t1318 * (t2956 + t2444 - 0.2e1 * t2957) + 0.2e1 * t2811 - t2501 + t2814;
t2965 = t1957 - t1960 - t2251;
t2968 = t1401 * t1656 * t2704;
t2970 = g(2) * t1469;
t2971 = g(1) * t1395;
t2972 = g(1) * t1398;
t2973 = g(2) * t1470;
t2974 = qJ(3,6) * t1969;
t2978 = 0.2e1 * t1618 * t1403 * t1653;
t2979 = 0.4e1 * t2968 + t2970 + t2971 + t2972 - t2973 + 0.2e1 * t2974 + t2978;
t2981 = -t1397 * t2456;
t2982 = t1849 * t2733;
t2987 = t1591 * (t2981 + t2461 - 0.2e1 * t2982) + 0.2e1 * t2827 - t2508 + t2830;
t2990 = t1979 - t1982 - t2305;
t2992 = t2854 * t2470 + t2862 * t11 * t1867 + t2865 * t2536 + t2879 * t2477 + t2887 * t311 * t1889 + t2890 * t2574 + t2904 * t2484 + t2912 * t584 * t1911 + t2915 * t2612 + t2929 * t2491 + t2937 * t857 * t1933 + t2940 * t2650 + t2954 * t2498 + t2962 * t1130 * t1955 + t2965 * t2688 + t2979 * t2505 + t2987 * t1403 * t1977 + t2990 * t2726;
t2995 = 0.2e1 * t2843 + t2845 + t2846 + t2847 - t2848 + t2849 + t2853;
t3000 = t220 * (-t2375 * t1 + t2372 + t2857) - t2747 + t2473 - t2750;
t3006 = t8 * (t2856 + t2376) + t2533 + t2379 + qJ(3,1) * (-t1872 - t2035) + t2537 + t2539 - t2540 - t2544 + t2545;
t3009 = 0.2e1 * t2868 + t2870 + t2871 + t2872 - t2873 + t2874 + t2878;
t3014 = t499 * (-t2392 * t301 + t2389 + t2882) - t2763 + t2480 - t2766;
t3020 = t308 * (t2881 + t2393) + t2571 + t2396 + qJ(3,2) * (-t1894 - t2089) + t2575 + t2577 - t2578 - t2582 + t2583;
t3023 = 0.2e1 * t2893 + t2895 + t2896 + t2897 - t2898 + t2899 + t2903;
t3028 = t772 * (-t2409 * t574 + t2406 + t2907) - t2779 + t2487 - t2782;
t3034 = t581 * (t2906 + t2410) + t2609 + t2413 + qJ(3,3) * (-t1916 - t2143) + t2613 + t2615 - t2616 - t2620 + t2621;
t3037 = 0.2e1 * t2918 + t2920 + t2921 + t2922 - t2923 + t2924 + t2928;
t3042 = t1045 * (-t2426 * t847 + t2423 + t2932) - t2795 + t2494 - t2798;
t3048 = t854 * (t2931 + t2427) + t2647 + t2430 + qJ(3,4) * (-t1938 - t2197) + t2651 + t2653 - t2654 - t2658 + t2659;
t3051 = 0.2e1 * t2943 + t2945 + t2946 + t2947 - t2948 + t2949 + t2953;
t3056 = t1318 * (-t2443 * t1120 + t2440 + t2957) - t2811 + t2501 - t2814;
t3062 = t1127 * (t2956 + t2444) + t2685 + t2447 + qJ(3,5) * (-t1960 - t2251) + t2689 + t2691 - t2692 - t2696 + t2697;
t3065 = 0.2e1 * t2968 + t2970 + t2971 + t2972 - t2973 + t2974 + t2978;
t3070 = t1591 * (-t2460 * t1393 + t2457 + t2982) - t2827 + t2508 - t2830;
t3076 = t1400 * (t2981 + t2461) + t2723 + t2464 + qJ(3,6) * (-t1982 - t2305) + t2727 + t2729 - t2730 - t2734 + t2735;
t3078 = t2995 * t7 - t3000 * t1867 + t3006 * t2536 + t3009 * t307 - t3014 * t1889 + t3020 * t2574 + t3023 * t580 - t3028 * t1911 + t3034 * t2612 + t3037 * t853 - t3042 * t1933 + t3048 * t2650 + t3051 * t1126 - t3056 * t1955 + t3062 * t2688 + t3065 * t1399 - t3070 * t1977 + t3076 * t2726;
t3080 = -t223 ^ 2;
t3083 = -xDP(4) * t104 + xDP(5) * t14;
t3084 = -t3083 ^ 2;
t3085 = t3080 + t3084;
t3087 = xDP(4) * t141;
t3088 = xDDP(4) * t17;
t3091 = -xDP(4) * t102 - xDP(5) * t12;
t3092 = -t3083 * t3091;
t3093 = t3087 + t3088 + xDDP(6) + t3092;
t3098 = xDP(4) * (t12 * t273 - t14 * t128);
t3099 = xDP(5) * t163;
t3100 = xDDP(4) * t104;
t3101 = xDDP(5) * t14;
t3102 = -t223 * t3091;
t3103 = -t3098 + t3099 + t3100 - t3101 + t3102;
t3107 = -t3087 - t3088 - xDDP(6) + t3092;
t3109 = -t3091 ^ 2;
t3110 = t3080 + t3109;
t3115 = xDP(4) * (-t12 * t128 - t14 * t273);
t3117 = xDP(5) * t14 * xDP(6);
t3118 = xDDP(4) * t102;
t3119 = xDDP(5) * t12;
t3120 = t223 * t3083;
t3121 = t3115 + t3117 + t3118 + t3119 + t3120;
t3125 = t3098 - t3099 - t3100 + t3101 + t3102;
t3127 = -t3115 - t3117 - t3118 - t3119 + t3120;
t3129 = t3084 + t3109;
t3133 = xDDP(1) - g(1);
t3135 = t17 * t24;
t3138 = t12 * t22 + t14 * t3135;
t3139 = xDDP(2) - g(2);
t3141 = t17 * t22;
t3144 = t12 * t24 - t14 * t3141;
t3145 = xDDP(3) - g(3);
t3147 = t3133 * t102 + t3139 * t3138 + t3145 * t3144;
t3152 = -t12 * t3135 + t14 * t22;
t3156 = t12 * t3141 + t14 * t24;
t3158 = -t3133 * t104 + t3139 * t3152 + t3145 * t3156;
t3161 = t19 * t24;
t3163 = t19 * t22;
t3165 = t3133 * t17 - t3139 * t3161 + t3145 * t3163;
t3169 = MDP(1) * (t299 * t10 + t1118 * t856 + t1391 * t1129 + t1664 * t1402 + t572 * t310 + t845 * t583) + MDP(2) * (t1677 * t10 + t1721 * t1129 + t1732 * t1402 + t1688 * t310 + t1699 * t583 + t1710 * t856) + MDP(3) * (t1739 * t10 + t1759 * t1129 + t1764 * t1402 + t1744 * t310 + t1749 * t583 + t1754 * t856) + MDP(4) * t1852 + MDP(5) * t1986 + MDP(6) * t2312 + MDP(7) * t2350 + MDP(8) * (t2032 * t11 * t1867 + t2248 * t1130 * t1955 + t2302 * t1403 * t1977 + t2086 * t311 * t1889 + t2140 * t584 * t1911 + t2194 * t857 * t1933) + MDP(9) * t2468 + MDP(10) * t2512 + MDP(11) * t2742 + MDP(12) * t2840 + MDP(13) * t2992 + MDP(14) * t3078 + MDP(21) * (t3085 * t102 - t3093 * t104 + t3103 * t17) + MDP(22) * (t3107 * t102 - t3110 * t104 + t3121 * t17) + MDP(23) * (t3125 * t102 - t3127 * t104 + t3129 * t17) + MDP(24) * (t3147 * t102 - t3158 * t104 + t3165 * t17);
t3224 = t1772 * t96 + t1779 * t9 * t1774 * t7 * t1777 + t1786 * t380 + t1793 * t309 * t1788 * t307 * t1791 + t1800 * t653 + t1807 * t582 * t1802 * t580 * t1805 + t1814 * t926 + t1821 * t855 * t1816 * t853 * t1819 + t1828 * t1199 + t1835 * t1128 * t1830 * t1126 * t1833 + t1842 * t1472 + t1849 * t1401 * t1844 * t1399 * t1847;
t3244 = t1939 * t1045 * t2151 + t1961 * t1318 * t2205 + t1983 * t1591 * t2259 + t1873 * t220 * t1989 + t1895 * t499 * t2043 + t1917 * t772 * t2097 + t1953 * t1199 + t1975 * t1472 + t1865 * t96 + t1887 * t380 + t1909 * t653 + t1931 * t926;
t3258 = t2254 * t1199 + t2308 * t1472 + t1860 * t1989 + t1882 * t2043 + t1904 * t2097 + t1926 * t2151 + t1948 * t2205 + t1970 * t2259 + t2038 * t96 + t2092 * t380 + t2146 * t653 + t2200 * t926;
t3278 = t1117 * t1816 * t2151 + t1390 * t1830 * t2205 + t1663 * t1844 * t2259 + t298 * t1774 * t1989 + t571 * t1788 * t2043 + t844 * t1802 * t2097 + t2341 * t1199 + t2347 * t1472 + t2317 * t96 + t2323 * t380 + t2329 * t653 + t2335 * t926;
t3306 = t2431 * t1045 * t2151 + t2448 * t1318 * t2205 + t2465 * t1591 * t2259 + t2380 * t220 * t1989 + t2397 * t499 * t2043 + t2414 * t772 * t2097 + t2435 * t1199 + t2452 * t1472 + t2367 * t96 + t2384 * t380 + t2401 * t653 + t2418 * t926;
t3308 = t11 * t95;
t3312 = t311 * t379;
t3316 = t584 * t652;
t3320 = t857 * t925;
t3324 = t1130 * t1198;
t3328 = t1403 * t1471;
t3332 = t2495 * t1045 * t2151 + t2502 * t1318 * t2205 + t2509 * t1591 * t2259 + t2474 * t220 * t1989 + t2481 * t499 * t2043 + t2488 * t772 * t2097 - t1676 * t3308 - t1687 * t3312 - t1698 * t3316 - t1709 * t3320 - t1720 * t3324 - t1731 * t3328;
t3358 = t2530 * t96 + t2546 * t220 * t1989 + t2550 * t2538 + t2568 * t380 + t2584 * t499 * t2043 + t2588 * t2576 + t2606 * t653 + t2622 * t772 * t2097 + t2626 * t2614 + t2644 * t926 + t2660 * t1045 * t2151 + t2664 * t2652 + t2682 * t1199 + t2698 * t1318 * t2205 + t2702 * t2690 + t2720 * t1472 + t2736 * t1591 * t2259 + t2740 * t2728;
t3390 = t2755 * t96 - t298 * t1774 * t7 - t298 * t7 * t253 + t2771 * t380 - t571 * t1788 * t307 - t571 * t307 * t529 + t2787 * t653 - t844 * t1802 * t580 - t844 * t580 * t802 + t2803 * t926 - t1117 * t1816 * t853 - t1117 * t853 * t1075 + t2819 * t1199 - t1390 * t1830 * t1126 - t1390 * t1126 * t1348 + t2835 * t1472 - t1663 * t1844 * t1399 - t1663 * t1399 * t1621;
t3416 = t2854 * t3308 + t2862 * t220 * t1989 + t2865 * t2538 + t2879 * t3312 + t2887 * t499 * t2043 + t2890 * t2576 + t2904 * t3316 + t2912 * t772 * t2097 + t2915 * t2614 + t2929 * t3320 + t2937 * t1045 * t2151 + t2940 * t2652 + t2954 * t3324 + t2962 * t1318 * t2205 + t2965 * t2690 + t2979 * t3328 + t2987 * t1591 * t2259 + t2990 * t2728;
t3419 = -t220 * t7;
t3423 = -t499 * t307;
t3427 = -t772 * t580;
t3431 = -t1045 * t853;
t3435 = -t1318 * t1126;
t3439 = -t1591 * t1399;
t3442 = t2995 * t95 - t3000 * t3419 + t3006 * t2538 + t3009 * t379 - t3014 * t3423 + t3020 * t2576 + t3023 * t652 - t3028 * t3427 + t3034 * t2614 + t3037 * t925 - t3042 * t3431 + t3048 * t2652 + t3051 * t1198 - t3056 * t3435 + t3062 * t2690 + t3065 * t1471 - t3070 * t3439 + t3076 * t2728;
t3464 = MDP(1) * (t1118 * t926 + t1391 * t1199 + t1664 * t1472 + t299 * t96 + t572 * t380 + t845 * t653) + MDP(2) * (t1721 * t1199 + t1732 * t1472 + t1677 * t96 + t1688 * t380 + t1699 * t653 + t1710 * t926) + MDP(3) * (t1759 * t1199 + t1764 * t1472 + t1739 * t96 + t1744 * t380 + t1749 * t653 + t1754 * t926) + MDP(4) * t3224 + MDP(5) * t3244 + MDP(6) * t3258 + MDP(7) * t3278 + MDP(8) * (t2314 * t1989 + t2320 * t2043 + t2326 * t2097 + t2332 * t2151 + t2338 * t2205 + t2344 * t2259) + MDP(9) * t3306 + MDP(10) * t3332 + MDP(11) * t3358 + MDP(12) * t3390 + MDP(13) * t3416 + MDP(14) * t3442 + MDP(21) * (t3085 * t3138 + t3093 * t3152 - t3103 * t3161) + MDP(22) * (t3107 * t3138 + t3110 * t3152 - t3121 * t3161) + MDP(23) * (t3125 * t3138 + t3127 * t3152 - t3129 * t3161) + MDP(24) * (t3147 * t3138 + t3158 * t3152 - t3165 * t3161);
t3501 = t298 * t220;
t3503 = t571 * t499;
t3505 = t844 * t772;
t3507 = t1117 * t1045;
t3509 = t1390 * t1318;
t3511 = t1663 * t1591;
t3551 = -t2664 * t1045 - t2702 * t1318 - t2740 * t1591 + t2546 * t1992 + t2584 * t2046 + t2622 * t2100 + t2660 * t2154 - t2550 * t220 + t2698 * t2208 + t2736 * t2262 - t2588 * t499 - t2626 * t772;
t3565 = -t2940 * t1045 - t2965 * t1318 - t2990 * t1591 + t2862 * t1992 + t2887 * t2046 + t2912 * t2100 + t2937 * t2154 - t2865 * t220 + t2962 * t2208 + t2987 * t2262 - t2890 * t499 - t2915 * t772;
t3579 = -t3048 * t1045 - t3056 * t1127 - t3062 * t1318 - t3070 * t1400 - t3076 * t1591 - t3006 * t220 - t3000 * t8 - t3014 * t308 - t3020 * t499 - t3028 * t581 - t3034 * t772 - t3042 * t854;
t3601 = MDP(4) * (-t1045 * t1821 * t1819 - t1318 * t1835 * t1833 - t1591 * t1849 * t1847 - t220 * t1779 * t1777 - t499 * t1793 * t1791 - t772 * t1807 * t1805) + MDP(5) * (t1873 * t1992 + t1895 * t2046 + t1917 * t2100 + t1939 * t2154 + t1961 * t2208 + t1983 * t2262) + MDP(6) * (t1117 * t1075 * t857 + t298 * t253 * t11 + t1390 * t1348 * t1130 + t1663 * t1621 * t1403 + t571 * t529 * t311 + t844 * t802 * t584) + MDP(7) * (t3501 * t1992 + t3503 * t2046 + t3505 * t2100 + t3507 * t2154 + t3509 * t2208 + t3511 * t2262) + MDP(8) * (t2032 * t1992 + t2086 * t2046 + t2140 * t2100 + t2194 * t2154 + t2248 * t2208 + t2302 * t2262) + MDP(9) * (t2380 * t1992 + t2397 * t2046 + t2414 * t2100 + t2431 * t2154 + t2448 * t2208 + t2465 * t2262) + MDP(10) * (t2474 * t1992 + t2481 * t2046 + t2488 * t2100 + t2495 * t2154 + t2502 * t2208 + t2509 * t2262) + MDP(11) * t3551 + MDP(13) * t3565 + MDP(14) * t3579 + MDP(21) * (t3085 * t3144 + t3093 * t3156 + t3103 * t3163) + MDP(22) * (t3107 * t3144 + t3110 * t3156 + t3121 * t3163) + MDP(23) * (t3125 * t3144 + t3127 * t3156 + t3129 * t3163) + MDP(24) * (t3147 * t3144 + t3158 * t3156 + t3165 * t3163);
t3602 = t17 * t14;
t3604 = -koppelP(1,1) * t3602 + t20 + t267;
t3606 = t22 * t3604 + t28;
t3607 = t3606 * t95;
t3608 = t298 * t2543;
t3611 = -koppelP(2,1) * t3602 + t316 + t542;
t3613 = t22 * t3611 + t322;
t3614 = t3613 * t379;
t3615 = t571 * t2581;
t3618 = -koppelP(3,1) * t3602 + t589 + t815;
t3620 = t22 * t3618 + t595;
t3621 = t3620 * t652;
t3622 = t844 * t2619;
t3625 = -koppelP(4,1) * t3602 + t1088 + t862;
t3627 = t22 * t3625 + t868;
t3628 = t3627 * t925;
t3629 = t1117 * t2657;
t3632 = -koppelP(5,1) * t3602 + t1135 + t1361;
t3634 = t22 * t3632 + t1141;
t3635 = t3634 * t1198;
t3636 = t1390 * t2695;
t3639 = -koppelP(6,1) * t3602 + t1408 + t1634;
t3641 = t22 * t3639 + t1414;
t3642 = t1471 * t3641;
t3643 = t1663 * t2733;
t3647 = t1676 * t2543;
t3649 = t1687 * t2581;
t3651 = t1698 * t2619;
t3653 = t1709 * t2657;
t3655 = t1720 * t2695;
t3657 = t1731 * t2733;
t3661 = t1738 * t2543;
t3663 = t1743 * t2581;
t3665 = t1748 * t2619;
t3667 = t1753 * t2657;
t3669 = t1758 * t2695;
t3671 = t1763 * t2733;
t3675 = t1771 * t2543;
t3677 = -t7 * t3606;
t3680 = -t3604 * t24 + t32;
t3682 = -t220 * t3677 + t8 * t3680;
t3684 = t220 * t2027;
t3686 = t1785 * t2581;
t3688 = -t307 * t3613;
t3691 = -t3611 * t24 + t326;
t3693 = t308 * t3691 - t499 * t3688;
t3695 = t499 * t2081;
t3697 = t1799 * t2619;
t3699 = -t580 * t3620;
t3702 = -t3618 * t24 + t599;
t3704 = -t772 * t3699 + t581 * t3702;
t3706 = t772 * t2135;
t3708 = t1813 * t2657;
t3710 = -t853 * t3627;
t3713 = -t3625 * t24 + t872;
t3715 = -t1045 * t3710 + t854 * t3713;
t3717 = t1045 * t2189;
t3719 = t1827 * t2695;
t3721 = -t3634 * t1126;
t3724 = -t3632 * t24 + t1145;
t3726 = t1127 * t3724 - t1318 * t3721;
t3728 = t1318 * t2243;
t3730 = t1841 * t2733;
t3732 = -t3641 * t1399;
t3735 = -t3639 * t24 + t1418;
t3737 = t1400 * t3735 - t1591 * t3732;
t3739 = t1591 * t2297;
t3741 = -t3684 * t1777 * t3682 - t3695 * t1791 * t3693 - t3706 * t1805 * t3704 - t3717 * t1819 * t3715 - t3728 * t1833 * t3726 - t3739 * t1847 * t3737 - t3675 * t3607 - t3686 * t3614 - t3697 * t3621 - t3708 * t3628 - t3719 * t3635 - t3730 * t3642;
t3743 = t1864 * t2543;
t3745 = t11 * t3682;
t3747 = t1886 * t2581;
t3749 = t311 * t3693;
t3751 = t1908 * t2619;
t3753 = t584 * t3704;
t3755 = t1930 * t2657;
t3757 = t857 * t3715;
t3759 = t1952 * t2695;
t3761 = t1130 * t3726;
t3763 = t1974 * t2733;
t3765 = t1403 * t3737;
t3767 = t1873 * t3745 + t1895 * t3749 + t1917 * t3753 + t1939 * t3757 + t1961 * t3761 + t1983 * t3765 - t3743 * t3607 - t3747 * t3614 - t3751 * t3621 - t3755 * t3628 - t3759 * t3635 - t3763 * t3642;
t3769 = t2037 * t2543;
t3772 = t2091 * t2581;
t3775 = t2145 * t2619;
t3778 = t2199 * t2657;
t3781 = t2253 * t2695;
t3784 = t2307 * t2733;
t3787 = t1859 * t3745 + t1881 * t3749 + t1903 * t3753 + t1925 * t3757 + t1947 * t3761 + t1969 * t3765 - t3769 * t3607 - t3772 * t3614 - t3775 * t3621 - t3778 * t3628 - t3781 * t3635 - t3784 * t3642;
t3789 = t2316 * t2543;
t3792 = t2322 * t2581;
t3795 = t2328 * t2619;
t3798 = t2334 * t2657;
t3801 = t2340 * t2695;
t3804 = t2346 * t2733;
t3807 = t3501 * t3745 + t3503 * t3749 + t3505 * t3753 + t3507 * t3757 + t3509 * t3761 + t3511 * t3765 - t3789 * t3607 - t3792 * t3614 - t3795 * t3621 - t3798 * t3628 - t3801 * t3635 - t3804 * t3642;
t3835 = -t2435 * t1128 * t3635 - t2452 * t1401 * t3642 - t2367 * t9 * t3607 - t2384 * t309 * t3614 - t2401 * t582 * t3621 - t2418 * t855 * t3628 + t2380 * t3745 + t2397 * t3749 + t2414 * t3753 + t2431 * t3757 + t2448 * t3761 + t2465 * t3765;
t3849 = t1677 * t3607 + t1688 * t3614 + t1699 * t3621 + t1710 * t3628 + t1721 * t3635 + t1732 * t3642 + t2474 * t3745 + t2481 * t3749 + t2488 * t3753 + t2495 * t3757 + t2502 * t3761 + t2509 * t3765;
t3851 = t2529 * t2543;
t3856 = -t3680 * t220 - t8 * t3677;
t3858 = t2567 * t2581;
t3863 = -t308 * t3688 - t3691 * t499;
t3865 = t2605 * t2619;
t3870 = -t581 * t3699 - t3702 * t772;
t3872 = t2643 * t2657;
t3877 = -t3713 * t1045 - t854 * t3710;
t3879 = t2681 * t2695;
t3884 = -t1127 * t3721 - t3724 * t1318;
t3886 = t2719 * t2733;
t3891 = -t1400 * t3732 - t3735 * t1591;
t3893 = -t3851 * t3607 + t2546 * t3745 + t2550 * t3856 - t3858 * t3614 + t2584 * t3749 + t2588 * t3863 - t3865 * t3621 + t2622 * t3753 + t2626 * t3870 - t3872 * t3628 + t2660 * t3757 + t2664 * t3877 - t3879 * t3635 + t2698 * t3761 + t2702 * t3884 - t3886 * t3642 + t2736 * t3765 + t2740 * t3891;
t3895 = MDP(1) * (-t3608 * t3607 - t3615 * t3614 - t3622 * t3621 - t3629 * t3628 - t3636 * t3635 - t3643 * t3642) + MDP(2) * (-t3647 * t3607 - t3649 * t3614 - t3651 * t3621 - t3653 * t3628 - t3655 * t3635 - t3657 * t3642) + MDP(3) * (-t3661 * t3607 - t3663 * t3614 - t3665 * t3621 - t3667 * t3628 - t3669 * t3635 - t3671 * t3642) + MDP(4) * t3741 + MDP(5) * t3767 + MDP(6) * t3787 + MDP(7) * t3807 + MDP(8) * (t2032 * t3745 + t2086 * t3749 + t2140 * t3753 + t2194 * t3757 + t2248 * t3761 + t2302 * t3765) + MDP(9) * t3835 + MDP(10) * t3849 + MDP(11) * t3893;
t3896 = t2754 * t2543;
t3902 = t2770 * t2581;
t3908 = t2786 * t2619;
t3914 = t2802 * t2657;
t3920 = t2818 * t2695;
t3926 = t2834 * t2733;
t3932 = -t3896 * t3607 + t298 * t220 * t3682 + t298 * t8 * t3856 - t3902 * t3614 + t571 * t499 * t3693 + t571 * t308 * t3863 - t3908 * t3621 + t844 * t772 * t3704 + t844 * t581 * t3870 - t3914 * t3628 + t1117 * t1045 * t3715 + t1117 * t854 * t3877 - t3920 * t3635 + t1390 * t1318 * t3726 + t1390 * t1127 * t3884 - t3926 * t3642 + t1663 * t1591 * t3737 + t1663 * t1400 * t3891;
t3934 = t2854 * t11;
t3938 = t2879 * t311;
t3942 = t2904 * t584;
t3946 = t2929 * t857;
t3950 = t2954 * t1130;
t3954 = t2979 * t1403;
t3958 = -t3934 * t3607 + t2862 * t3745 + t2865 * t3856 - t3938 * t3614 + t2887 * t3749 + t2890 * t3863 - t3942 * t3621 + t2912 * t3753 + t2915 * t3870 - t3946 * t3628 + t2937 * t3757 + t2940 * t3877 - t3950 * t3635 + t2962 * t3761 + t2965 * t3884 - t3954 * t3642 + t2987 * t3765 + t2990 * t3891;
t3978 = -t2995 * t3607 - t3000 * t3682 + t3006 * t3856 - t3009 * t3614 - t3014 * t3693 + t3020 * t3863 - t3023 * t3621 - t3028 * t3704 + t3034 * t3870 - t3037 * t3628 - t3042 * t3715 + t3048 * t3877 - t3051 * t3635 - t3056 * t3726 + t3062 * t3884 - t3065 * t3642 - t3070 * t3737 + t3076 * t3891;
t3980 = t3115 + t3117 + t3118 + t3119;
t3987 = t223 * t3091;
t3988 = t3098 - t3099 - t3100 + t3101 + t3987;
t3991 = t3091 ^ 2;
t3992 = t3084 + t3991;
t3997 = t223 ^ 2;
t3998 = t3997 + t3109;
t4000 = -t223 * t3083;
t4001 = t3115 + t3117 + t3118 + t3119 + t4000;
t4006 = t3098 - t3099 - t3100 + t3101;
t4012 = t3083 ^ 2;
t4013 = t3080 + t4012;
t4015 = t3083 * t3091;
t4016 = t3087 + t3088 + xDDP(6) + t4015;
t4023 = t3087 + t3088 + xDDP(6);
t4039 = MDP(12) * t3932 + MDP(13) * t3958 + MDP(14) * t3978 + MDP(15) * (t3091 * t3083 * t17 + t3980 * t102 - t3102 * t104) + MDP(16) * (t3988 * t102 - t3121 * t104 + t3992 * t17) + MDP(17) * (t3093 * t102 - t3998 * t104 + t4001 * t17) + MDP(18) * (-t3091 * t3083 * t17 + t4000 * t102 - t4006 * t104) + MDP(19) * (t4013 * t102 - t4016 * t104 + t3125 * t17) + MDP(20) * (t3120 * t102 - t3987 * t104 + t4023 * t17) + MDP(21) * (t3165 * t104 + t3158 * t17) + MDP(22) * (t3165 * t102 - t3147 * t17) + MDP(23) * (-t3158 * t102 - t3147 * t104);
t4068 = -t106 * t8 + t220 * t3607;
t4074 = -t388 * t308 + t499 * t3614;
t4080 = t772 * t3621 - t661 * t581;
t4086 = t1045 * t3628 - t934 * t854;
t4092 = -t1207 * t1127 + t1318 * t3635;
t4098 = -t1480 * t1400 + t1591 * t3642;
t4101 = -t3684 * t1777 * t4068 - t3695 * t1791 * t4074 - t3706 * t1805 * t4080 - t3717 * t1819 * t4086 - t3728 * t1833 * t4092 - t3739 * t1847 * t4098 - t3675 * t3677 - t3686 * t3688 - t3697 * t3699 - t3708 * t3710 - t3719 * t3721 - t3730 * t3732;
t4104 = t11 * t4068;
t4107 = t311 * t4074;
t4110 = t584 * t4080;
t4113 = t857 * t4086;
t4116 = t1130 * t4092;
t4119 = t1403 * t4098;
t4121 = t1873 * t4104 + t1895 * t4107 + t1917 * t4110 + t1939 * t4113 + t1961 * t4116 + t1983 * t4119 - t3743 * t3677 - t3747 * t3688 - t3751 * t3699 - t3755 * t3710 - t3759 * t3721 - t3763 * t3732;
t4135 = t1859 * t4104 + t1881 * t4107 + t1903 * t4110 + t1925 * t4113 + t1947 * t4116 + t1969 * t4119 - t3769 * t3677 - t3772 * t3688 - t3775 * t3699 - t3778 * t3710 - t3781 * t3721 - t3784 * t3732;
t4149 = t3501 * t4104 + t3503 * t4107 + t3505 * t4110 + t3507 * t4113 + t3509 * t4116 + t3511 * t4119 - t3789 * t3677 - t3792 * t3688 - t3795 * t3699 - t3798 * t3710 - t3801 * t3721 - t3804 * t3732;
t4177 = -t2435 * t1128 * t3721 - t2452 * t1401 * t3732 - t2367 * t9 * t3677 - t2384 * t309 * t3688 - t2401 * t582 * t3699 - t2418 * t855 * t3710 + t2380 * t4104 + t2397 * t4107 + t2414 * t4110 + t2431 * t4113 + t2448 * t4116 + t2465 * t4119;
t4191 = t1677 * t3677 + t1688 * t3688 + t1699 * t3699 + t1710 * t3710 + t1721 * t3721 + t1732 * t3732 + t2474 * t4104 + t2481 * t4107 + t2488 * t4110 + t2495 * t4113 + t2502 * t4116 + t2509 * t4119;
t4198 = t8 * t3606 * t95 + t106 * t220;
t4205 = t308 * t3613 * t379 + t388 * t499;
t4212 = t581 * t3620 * t652 + t661 * t772;
t4219 = t854 * t3627 * t925 + t934 * t1045;
t4226 = t1127 * t3634 * t1198 + t1207 * t1318;
t4233 = t1400 * t1471 * t3641 + t1480 * t1591;
t4235 = -t3851 * t3677 + t2546 * t4104 + t2550 * t4198 - t3858 * t3688 + t2584 * t4107 + t2588 * t4205 - t3865 * t3699 + t2622 * t4110 + t2626 * t4212 - t3872 * t3710 + t2660 * t4113 + t2664 * t4219 - t3879 * t3721 + t2698 * t4116 + t2702 * t4226 - t3886 * t3732 + t2736 * t4119 + t2740 * t4233;
t4237 = MDP(1) * (-t3608 * t3677 - t3615 * t3688 - t3622 * t3699 - t3629 * t3710 - t3636 * t3721 - t3643 * t3732) + MDP(2) * (-t3647 * t3677 - t3649 * t3688 - t3651 * t3699 - t3653 * t3710 - t3655 * t3721 - t3657 * t3732) + MDP(3) * (-t3661 * t3677 - t3663 * t3688 - t3665 * t3699 - t3667 * t3710 - t3669 * t3721 - t3671 * t3732) + MDP(4) * t4101 + MDP(5) * t4121 + MDP(6) * t4135 + MDP(7) * t4149 + MDP(8) * (t2032 * t4104 + t2086 * t4107 + t2140 * t4110 + t2194 * t4113 + t2248 * t4116 + t2302 * t4119) + MDP(9) * t4177 + MDP(10) * t4191 + MDP(11) * t4235;
t4268 = -t3896 * t3677 + t298 * t220 * t4068 + t298 * t8 * t4198 - t3902 * t3688 + t571 * t499 * t4074 + t571 * t308 * t4205 - t3908 * t3699 + t844 * t772 * t4080 + t844 * t581 * t4212 - t3914 * t3710 + t1117 * t1045 * t4086 + t1117 * t854 * t4219 - t3920 * t3721 + t1390 * t1318 * t4092 + t1390 * t1127 * t4226 - t3926 * t3732 + t1663 * t1591 * t4098 + t1663 * t1400 * t4233;
t4288 = -t3934 * t3677 + t2862 * t4104 + t2865 * t4198 - t3938 * t3688 + t2887 * t4107 + t2890 * t4205 - t3942 * t3699 + t2912 * t4110 + t2915 * t4212 - t3946 * t3710 + t2937 * t4113 + t2940 * t4219 - t3950 * t3721 + t2962 * t4116 + t2965 * t4226 - t3954 * t3732 + t2987 * t4119 + t2990 * t4233;
t4308 = -t2995 * t3677 - t3000 * t4068 + t3006 * t4198 - t3009 * t3688 - t3014 * t4074 + t3020 * t4205 - t3023 * t3699 - t3028 * t4080 + t3034 * t4212 - t3037 * t3710 - t3042 * t4086 + t3048 * t4219 - t3051 * t3721 - t3056 * t4092 + t3062 * t4226 - t3065 * t3732 - t3070 * t4098 + t3076 * t4233;
t4356 = MDP(12) * t4268 + MDP(13) * t4288 + MDP(14) * t4308 + MDP(15) * (-t223 * t3091 * t3152 + t3980 * t3138 - t4015 * t3161) + MDP(16) * (t3121 * t3152 + t3988 * t3138 - t3992 * t3161) + MDP(17) * (t3093 * t3138 + t3998 * t3152 - t4001 * t3161) + MDP(18) * (-t3083 * t223 * t3138 - t3092 * t3161 + t4006 * t3152) + MDP(19) * (-t3125 * t3161 + t4013 * t3138 + t4016 * t3152) + MDP(20) * (t3083 * t223 * t3138 + t223 * t3091 * t3152 - t4023 * t3161) + MDP(21) * (-t3165 * t3152 - t3158 * t3161) + MDP(22) * (t3165 * t3138 + t3147 * t3161) + MDP(23) * (-t3158 * t3138 + t3147 * t3152);
t4359 = t19 * koppelP(1,3) * t24;
t4362 = t22 * koppelP(1,2) + koppelP(1,1) * t3135;
t4366 = (-koppelP(1,2) * t3135 + t259) * t12;
t4367 = t14 * t4362 - t4359 + t4366;
t4372 = t2543 * t95 * t106 - t2543 * t7 * t4367;
t4375 = t19 * koppelP(2,3) * t24;
t4378 = koppelP(2,2) * t22 + koppelP(2,1) * t3135;
t4383 = (-t24 * koppelP(2,2) * t17 + t535) * t12;
t4384 = t14 * t4378 - t4375 + t4383;
t4389 = -t2581 * t307 * t4384 + t2581 * t379 * t388;
t4392 = t19 * koppelP(3,3) * t24;
t4395 = koppelP(3,2) * t22 + koppelP(3,1) * t3135;
t4400 = (-t24 * koppelP(3,2) * t17 + t808) * t12;
t4401 = t14 * t4395 - t4392 + t4400;
t4406 = -t2619 * t580 * t4401 + t2619 * t652 * t661;
t4409 = t19 * koppelP(4,3) * t24;
t4412 = koppelP(4,2) * t22 + koppelP(4,1) * t3135;
t4417 = (-t24 * koppelP(4,2) * t17 + t1081) * t12;
t4418 = t14 * t4412 - t4409 + t4417;
t4423 = -t2657 * t853 * t4418 + t2657 * t925 * t934;
t4426 = t19 * koppelP(5,3) * t24;
t4429 = koppelP(5,2) * t22 + koppelP(5,1) * t3135;
t4434 = (-t24 * koppelP(5,2) * t17 + t1354) * t12;
t4435 = t14 * t4429 - t4426 + t4434;
t4440 = -t2695 * t1126 * t4435 + t2695 * t1198 * t1207;
t4443 = t19 * koppelP(6,3) * t24;
t4446 = koppelP(6,2) * t22 + koppelP(6,1) * t3135;
t4451 = (-t24 * koppelP(6,2) * t17 + t1627) * t12;
t4452 = t14 * t4446 - t4443 + t4451;
t4457 = -t2733 * t1399 * t4452 + t2733 * t1471 * t1480;
t4482 = t3419 * t11 * t106 - t3308 * t4367 * t220;
t4492 = t3423 * t311 * t388 - t3312 * t4384 * t499;
t4502 = -t3316 * t4401 * t772 + t3427 * t584 * t661;
t4512 = -t3320 * t4418 * t1045 + t3431 * t857 * t934;
t4522 = t3435 * t1130 * t1207 - t3324 * t4435 * t1318;
t4532 = t3439 * t1403 * t1480 - t3328 * t4452 * t1591;
t4537 = t1771 * t4372 - t220 * t257 * t1779 * t9 * t4482 + t1785 * t4389 - t499 * t533 * t1793 * t309 * t4492 + t1799 * t4406 - t772 * t806 * t1807 * t582 * t4502 + t1813 * t4423 - t1045 * t1079 * t1821 * t855 * t4512 + t1827 * t4440 - t1318 * t1352 * t1835 * t1128 * t4522 + t1841 * t4457 - t1591 * t1625 * t1849 * t1401 * t4532;
t4551 = t1864 * t4372 + t1873 * t4482 + t1886 * t4389 + t1895 * t4492 + t1908 * t4406 + t1917 * t4502 + t1930 * t4423 + t1939 * t4512 + t1952 * t4440 + t1961 * t4522 + t1974 * t4457 + t1983 * t4532;
t4571 = t1117 * t854 * t4512 + t1390 * t1127 * t4522 + t1663 * t1400 * t4532 + t298 * t8 * t4482 + t571 * t308 * t4492 + t844 * t581 * t4502 + t2037 * t4372 + t2091 * t4389 + t2145 * t4406 + t2199 * t4423 + t2253 * t4440 + t2307 * t4457;
t4591 = t1117 * t1045 * t4512 + t1390 * t1318 * t4522 + t1663 * t1591 * t4532 + t298 * t220 * t4482 + t571 * t499 * t4492 + t844 * t772 * t4502 + t2316 * t4372 + t2322 * t4389 + t2328 * t4406 + t2334 * t4423 + t2340 * t4440 + t2346 * t4457;
t4619 = t1709 * t1045 * t4423 + t1720 * t1318 * t4440 + t1731 * t1591 * t4457 + t1676 * t220 * t4372 + t1687 * t499 * t4389 + t1698 * t772 * t4406 + t2380 * t4482 + t2397 * t4492 + t2414 * t4502 + t2431 * t4512 + t2448 * t4522 + t2465 * t4532;
t4621 = t8 * t4372;
t4624 = t308 * t4389;
t4627 = t581 * t4406;
t4630 = t854 * t4423;
t4633 = t1127 * t4440;
t4636 = t1400 * t4457;
t4639 = -t1676 * t4621 - t1687 * t4624 - t1698 * t4627 - t1709 * t4630 - t1720 * t4633 - t1731 * t4636 + t2474 * t4482 + t2481 * t4492 + t2488 * t4502 + t2495 * t4512 + t2502 * t4522 + t2509 * t4532;
t4647 = -t16 * t19 + t69;
t4655 = t5 * (t2 * (-t14 * t4362 + t4359 - t4366) + t4647 * t4) + t1 * (t2 * t4647 + t4367 * t4);
t4656 = t8 * t4655;
t4664 = -t314 * t19 + t353;
t4672 = t305 * (t302 * (-t14 * t4378 + t4375 - t4383) + t4664 * t304) + t301 * (t302 * t4664 + t4384 * t304);
t4673 = t308 * t4672;
t4681 = -t587 * t19 + t626;
t4689 = t578 * (t575 * (-t14 * t4395 + t4392 - t4400) + t4681 * t577) + t574 * (t4401 * t577 + t575 * t4681);
t4690 = t581 * t4689;
t4698 = -t860 * t19 + t899;
t4706 = t851 * (t848 * (-t14 * t4412 + t4409 - t4417) + t4698 * t850) + t847 * (t4418 * t850 + t848 * t4698);
t4707 = t854 * t4706;
t4715 = -t1133 * t19 + t1172;
t4723 = t1124 * (t1121 * (-t14 * t4429 + t4426 - t4434) + t4715 * t1123) + t1120 * (t1121 * t4715 + t4435 * t1123);
t4724 = t1127 * t4723;
t4732 = -t1406 * t19 + t1445;
t4740 = t1397 * (t1394 * (-t14 * t4446 + t4443 - t4451) + t4732 * t1396) + t1393 * (t1394 * t4732 + t4452 * t1396);
t4741 = t1400 * t4740;
t4743 = t2529 * t4372 + t2546 * t4482 + t2550 * t4656 + t2567 * t4389 + t2584 * t4492 + t2588 * t4673 + t2605 * t4406 + t2622 * t4502 + t2626 * t4690 + t2643 * t4423 + t2660 * t4512 + t2664 * t4707 + t2681 * t4440 + t2698 * t4522 + t2702 * t4724 + t2719 * t4457 + t2736 * t4532 + t2740 * t4741;
t4745 = MDP(1) * (t1117 * t4423 + t1390 * t4440 + t1663 * t4457 + t298 * t4372 + t571 * t4389 + t844 * t4406) + MDP(2) * (t1676 * t4372 + t1687 * t4389 + t1698 * t4406 + t1709 * t4423 + t1720 * t4440 + t1731 * t4457) + MDP(3) * (t1738 * t4372 + t1743 * t4389 + t1748 * t4406 + t1753 * t4423 + t1758 * t4440 + t1763 * t4457) + MDP(4) * t4537 + MDP(5) * t4551 + MDP(6) * t4571 + MDP(7) * t4591 + MDP(8) * (t2032 * t4482 + t2086 * t4492 + t2140 * t4502 + t2194 * t4512 + t2248 * t4522 + t2302 * t4532) + MDP(9) * t4619 + MDP(10) * t4639 + MDP(11) * t4743;
t4772 = qJ(3,6) * t4532;
t4776 = t2754 * t4372 + t3501 * qJ(3,1) * t4482 + t298 * t253 * t4655 + t2770 * t4389 + t3503 * qJ(3,2) * t4492 + t571 * t529 * t4672 + t2786 * t4406 + t3505 * qJ(3,3) * t4502 + t844 * t802 * t4689 + t2802 * t4423 + t3507 * qJ(3,4) * t4512 + t1117 * t1075 * t4706 + t2818 * t4440 + t3509 * qJ(3,5) * t4522 + t1390 * t1348 * t4723 + t2834 * t4457 + t3511 * t4772 + t1663 * t1621 * t4740;
t4796 = t2854 * t4621 + t2862 * t4482 + t2865 * t4656 + t2879 * t4624 + t2887 * t4492 + t2890 * t4673 + t2904 * t4627 + t2912 * t4502 + t2915 * t4690 + t2929 * t4630 + t2937 * t4512 + t2940 * t4707 + t2954 * t4633 + t2962 * t4522 + t2965 * t4724 + t2979 * t4636 + t2987 * t4532 + t2990 * t4741;
t4827 = t2995 * qJ(3,1) * t4621 - qJ(3,1) * t3000 * t4482 + t3006 * t4656 + t3009 * qJ(3,2) * t4624 - qJ(3,2) * t3014 * t4492 + t3020 * t4673 + t3023 * qJ(3,3) * t4627 - qJ(3,3) * t3028 * t4502 + t3034 * t4690 + t3037 * qJ(3,4) * t4630 - qJ(3,4) * t3042 * t4512 + t3048 * t4707 + t3051 * qJ(3,5) * t4633 - qJ(3,5) * t3056 * t4522 + t3062 * t4724 + t3065 * qJ(3,6) * t4636 - t3070 * t4772 + t3076 * t4741;
t4875 = MDP(12) * t4776 + MDP(13) * t4796 + MDP(14) * t4827 + MDP(15) * (-t223 * t3091 * t3156 + t3980 * t3144 + t4015 * t3163) + MDP(16) * (t3121 * t3156 + t3988 * t3144 + t3992 * t3163) + MDP(17) * (t3093 * t3144 + t3998 * t3156 + t4001 * t3163) + MDP(18) * (-t3083 * t223 * t3144 + t3092 * t3163 + t4006 * t3156) + MDP(19) * (t3125 * t3163 + t4013 * t3144 + t4016 * t3156) + MDP(20) * (t3083 * t223 * t3144 + t223 * t3091 * t3156 + t4023 * t3163) + MDP(21) * (-t3165 * t3156 + t3158 * t3163) + MDP(22) * (t3165 * t3144 - t3147 * t3163) + MDP(23) * (-t3158 * t3144 + t3147 * t3156);
unknown(1,1) = t3169;
unknown(2,1) = t3464;
unknown(3,1) = t3601;
unknown(4,1) = t3895 + t4039;
unknown(5,1) = t4237 + t4356;
unknown(6,1) = t4745 + t4875;
tauX  = unknown;
