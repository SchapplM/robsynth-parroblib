% Calculate minimal parameter regressor of inverse dynamics forces for
% P6RRPRRR14V3G1P4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [6x24]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:28
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(1,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: pkin has to be [1x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G1P4A0_invdyn_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:27:24
% EndTime: 2020-03-12 23:27:42
% DurationCPUTime: 19.39s
% Computational Cost: add. (333757->2348), mult. (783507->3775), div. (7746->36), fcn. (587352->42), ass. (0->1555)
unknown=NaN(6,24);
t1 = sin(legFrame(1,3));
t2 = cos(qJ(1,1));
t3 = t2 * t1;
t4 = sin(qJ(1,1));
t5 = cos(legFrame(1,3));
t6 = t5 * t4;
t7 = -t3 - t6;
t8 = sin(qJ(2,1));
t9 = 0.1e1 / t8;
t10 = t9 * t7;
t11 = 0.1e1 / qJ(3,1);
t12 = sin(xP(6));
t13 = koppelP(1,2) * t12;
t14 = cos(xP(6));
t16 = -t14 * koppelP(1,1) + t13;
t17 = sin(xP(5));
t19 = cos(xP(5));
t20 = koppelP(1,3) * t19;
t21 = t17 * t16 + t20;
t22 = cos(xP(4));
t23 = t22 * t21;
t24 = sin(xP(4));
t25 = koppelP(1,1) * t12;
t27 = koppelP(1,2) * t14 + t25;
t28 = t27 * t24;
t29 = t23 + t28;
t31 = t24 * t21;
t32 = t27 * t22;
t33 = t31 - t32;
t43 = xDP(4) * t29;
t49 = t22 * xDP(4);
t51 = xDP(5) * t24;
t53 = t17 * t51 - t19 * t49;
t57 = xDP(5) * t22;
t59 = -t19 * t24 * xDP(4) - t17 * t57;
t64 = t27 * t17;
t67 = -t16 * t24 + t22 * t64;
t69 = koppelP(1,3) * t17;
t71 = t16 * t19 - t69;
t72 = t71 * t57;
t73 = -xDP(4) * t33 + xDP(6) * t67 + t72;
t77 = t16 * t22 + t24 * t64;
t79 = t71 * t51;
t80 = xDP(6) * t77 + t43 + t79;
t90 = xDDP(1) + xDDP(5) * (t22 * t29 + t24 * t33) + xDDP(6) * (t19 * t22 * t33 - t19 * t24 * t29) + xDP(5) * (t22 * xDP(4) * t33 - t24 * t43) + xDP(6) * (t53 * t29 + t59 * t33) + xDP(5) * (t22 * t73 + t24 * t80) + xDP(6) * (t19 * t22 * t80 - t19 * t24 * t73);
t91 = t90 * t11;
t93 = t4 * t1;
t94 = t5 * t2;
t95 = -t93 + t94;
t96 = t9 * t95;
t98 = -t17 * t16 - t20;
t100 = t22 * t98 - t28;
t102 = t14 * t19;
t104 = t12 * t19;
t106 = koppelP(1,1) * t102 - koppelP(1,2) * t104 + t69;
t125 = xDP(4) * (-t27 * t22 + t31) - xDP(6) * t67 - t72;
t128 = t19 * xDP(6);
t129 = t27 * t128;
t130 = -xDP(5) * t98 - t129;
t138 = xDDP(2) + xDDP(4) * t100 + xDDP(5) * t24 * t106 + xDDP(6) * (t19 * t22 * t106 + t17 * t100) + t57 * xDP(4) * t106 + xDP(6) * (t19 * xDP(5) * t100 + t59 * t106) + xDP(4) * t125 + xDP(5) * t24 * t130 + xDP(6) * (t19 * t22 * t130 + t17 * t125);
t141 = t19 * xDP(5);
t143 = koppelP(1,2) * xDP(6);
t146 = -koppelP(1,1) * t141 + t17 * t143 + xDP(4) * koppelP(1,2);
t152 = t22 * t4 * xDP(4) - t2 * xDP(5);
t155 = t19 * t2;
t157 = t22 * t4;
t163 = t12 * xDP(6);
t166 = koppelP(1,1) * t163 - xDP(5) * koppelP(1,3);
t170 = koppelP(1,2) * t141 + xDP(4) * koppelP(1,1);
t171 = t170 * t12;
t172 = t17 * t166 + t171;
t182 = koppelP(1,3) * t141;
t183 = t182 + xDP(1);
t185 = t20 * t49;
t186 = -t185 + xDP(2);
t189 = t5 * (t14 * (-t24 * t146 * t4 + t17 * t152 * koppelP(1,1) - (koppelP(1,2) * t155 - koppelP(1,1) * t157) * xDP(6)) - t24 * t172 * t4 - t17 * t152 * t13 - t12 * (koppelP(1,1) * t155 + koppelP(1,2) * t157) * xDP(6) + t2 * t183 + t186 * t4);
t195 = t22 * t2 * xDP(4) + t4 * xDP(5);
t198 = t22 * t2;
t200 = t19 * t4;
t204 = t24 * t146 * t2 - t17 * t195 * koppelP(1,1) - (koppelP(1,1) * t198 + koppelP(1,2) * t200) * xDP(6);
t207 = t24 * t172 * t2;
t209 = t17 * t195 * t13;
t214 = t12 * (koppelP(1,2) * t198 - koppelP(1,1) * t200) * xDP(6);
t216 = t183 * t4;
t220 = cos(qJ(2,1));
t222 = xDP(4) * t17;
t223 = t222 + xDP(6);
t230 = t19 * xDP(4);
t239 = t14 * (t24 * t223 * koppelP(1,1) + t146 * t22) + t24 * (-t12 * t143 - t13 * t222 - koppelP(1,3) * t230) + t17 * t166 * t22 + t12 * t170 * t22 + xDP(3);
t241 = t220 * (t189 - (t14 * t204 - t2 * t186 + t207 + t209 + t214 + t216) * t1) + t239 * t8;
t242 = t220 * t241;
t250 = t8 * (t189 + t1 * (-t14 * t204 + t2 * t186 - t207 - t209 - t214 - t216)) - t220 * t239;
t253 = t8 ^ 2;
t254 = 0.1e1 / t253;
t256 = qJ(3,1) ^ 2;
t257 = 0.1e1 / t256;
t259 = koppelP(1,1) * t22;
t266 = t12 * t17;
t267 = koppelP(1,2) * t266;
t269 = t22 * xDP(6);
t271 = t14 * (-t24 * t146 + t223 * t259) + t24 * (-t17 * t166 - t171) - t267 * t49 - t185 - t13 * t269 + xDP(2);
t273 = t17 * xDP(5);
t280 = t14 * (-koppelP(1,2) * t128 - koppelP(1,1) * t273) + t13 * t273 - t25 * t128 + t182 + xDP(1);
t288 = t5 * (t2 * t271 - t4 * t280) - (t2 * t280 + t4 * t271) * t1;
t289 = t288 * t257;
t291 = t288 * t220;
t292 = t257 * t254;
t295 = t9 * t288;
t296 = t250 * t257;
t298 = t91 * t10 + t138 * t11 * t96 - t289 * t254 * (t250 * t8 + t242) - t241 * t292 * t291 - t296 * t295;
t299 = t298 * t11;
t301 = sin(legFrame(2,3));
t302 = cos(qJ(1,2));
t303 = t302 * t301;
t304 = sin(qJ(1,2));
t305 = cos(legFrame(2,3));
t306 = t305 * t304;
t307 = -t303 - t306;
t308 = sin(qJ(2,2));
t309 = 0.1e1 / t308;
t310 = t309 * t307;
t311 = 0.1e1 / qJ(3,2);
t312 = koppelP(2,2) * t12;
t314 = -t14 * koppelP(2,1) + t312;
t316 = koppelP(2,3) * t19;
t317 = t17 * t314 + t316;
t318 = t22 * t317;
t319 = koppelP(2,1) * t12;
t321 = koppelP(2,2) * t14 + t319;
t322 = t321 * t24;
t323 = t318 + t322;
t325 = t24 * t317;
t326 = t321 * t22;
t327 = t325 - t326;
t337 = xDP(4) * t323;
t348 = t321 * t17;
t351 = t22 * t348 - t314 * t24;
t353 = koppelP(2,3) * t17;
t355 = t314 * t19 - t353;
t356 = t355 * t57;
t357 = -xDP(4) * t327 + xDP(6) * t351 + t356;
t361 = t314 * t22 + t24 * t348;
t363 = t355 * t51;
t364 = xDP(6) * t361 + t337 + t363;
t374 = xDDP(1) + xDDP(5) * (t22 * t323 + t24 * t327) + xDDP(6) * (t19 * t22 * t327 - t19 * t24 * t323) + xDP(5) * (t22 * xDP(4) * t327 - t24 * t337) + xDP(6) * (t53 * t323 + t59 * t327) + xDP(5) * (t22 * t357 + t24 * t364) + xDP(6) * (t19 * t22 * t364 - t19 * t24 * t357);
t375 = t374 * t311;
t377 = t304 * t301;
t378 = t305 * t302;
t379 = -t377 + t378;
t380 = t309 * t379;
t382 = -t17 * t314 - t316;
t384 = t22 * t382 - t322;
t388 = koppelP(2,1) * t102 - koppelP(2,2) * t104 + t353;
t407 = xDP(4) * (-t321 * t22 + t325) - xDP(6) * t351 - t356;
t410 = t321 * t128;
t411 = -xDP(5) * t382 - t410;
t419 = xDDP(2) + xDDP(4) * t384 + xDDP(5) * t24 * t388 + xDDP(6) * (t19 * t22 * t388 + t17 * t384) + t57 * xDP(4) * t388 + xDP(6) * (t19 * xDP(5) * t384 + t59 * t388) + xDP(4) * t407 + xDP(5) * t24 * t411 + xDP(6) * (t19 * t22 * t411 + t17 * t407);
t423 = koppelP(2,2) * xDP(6);
t426 = -koppelP(2,1) * t141 + t17 * t423 + xDP(4) * koppelP(2,2);
t432 = t22 * t304 * xDP(4) - t302 * xDP(5);
t435 = t19 * t302;
t437 = t22 * t304;
t445 = koppelP(2,1) * t163 - xDP(5) * koppelP(2,3);
t449 = koppelP(2,2) * t141 + xDP(4) * koppelP(2,1);
t450 = t449 * t12;
t451 = t17 * t445 + t450;
t461 = koppelP(2,3) * t141;
t462 = t461 + xDP(1);
t464 = t316 * t49;
t465 = -t464 + xDP(2);
t468 = t305 * (t14 * (-t24 * t426 * t304 + t17 * t432 * koppelP(2,1) - (koppelP(2,2) * t435 - koppelP(2,1) * t437) * xDP(6)) - t24 * t451 * t304 - t17 * t432 * t312 - t12 * (koppelP(2,1) * t435 + koppelP(2,2) * t437) * xDP(6) + t302 * t462 + t465 * t304);
t474 = t22 * t302 * xDP(4) + t304 * xDP(5);
t477 = t22 * t302;
t479 = t19 * t304;
t483 = t24 * t426 * t302 - t17 * t474 * koppelP(2,1) - (koppelP(2,1) * t477 + koppelP(2,2) * t479) * xDP(6);
t486 = t24 * t451 * t302;
t488 = t17 * t474 * t312;
t493 = t12 * (koppelP(2,2) * t477 - koppelP(2,1) * t479) * xDP(6);
t495 = t462 * t304;
t499 = cos(qJ(2,2));
t515 = t14 * (t24 * t223 * koppelP(2,1) + t426 * t22) + t24 * (-t12 * t423 - t312 * t222 - koppelP(2,3) * t230) + t17 * t445 * t22 + t12 * t449 * t22 + xDP(3);
t517 = t499 * (t468 - (t14 * t483 - t302 * t465 + t486 + t488 + t493 + t495) * t301) + t515 * t308;
t518 = t499 * t517;
t526 = t308 * (t468 + t301 * (-t14 * t483 + t302 * t465 - t486 - t488 - t493 - t495)) - t499 * t515;
t529 = t308 ^ 2;
t530 = 0.1e1 / t529;
t532 = qJ(3,2) ^ 2;
t533 = 0.1e1 / t532;
t535 = koppelP(2,1) * t22;
t542 = koppelP(2,2) * t266;
t545 = t14 * (t223 * t535 - t24 * t426) + t24 * (-t17 * t445 - t450) - t542 * t49 - t464 - t312 * t269 + xDP(2);
t553 = t14 * (-koppelP(2,2) * t128 - koppelP(2,1) * t273) + t312 * t273 - t319 * t128 + t461 + xDP(1);
t561 = t305 * (t302 * t545 - t304 * t553) - (t302 * t553 + t304 * t545) * t301;
t562 = t561 * t533;
t564 = t561 * t499;
t565 = t533 * t530;
t568 = t309 * t561;
t569 = t526 * t533;
t571 = t375 * t310 + t419 * t311 * t380 - t562 * t530 * (t526 * t308 + t518) - t517 * t565 * t564 - t569 * t568;
t572 = t571 * t311;
t574 = sin(legFrame(3,3));
t575 = cos(qJ(1,3));
t576 = t575 * t574;
t577 = sin(qJ(1,3));
t578 = cos(legFrame(3,3));
t579 = t578 * t577;
t580 = -t576 - t579;
t581 = sin(qJ(2,3));
t582 = 0.1e1 / t581;
t583 = t582 * t580;
t584 = 0.1e1 / qJ(3,3);
t585 = koppelP(3,2) * t12;
t587 = -t14 * koppelP(3,1) + t585;
t589 = koppelP(3,3) * t19;
t590 = t17 * t587 + t589;
t591 = t22 * t590;
t592 = koppelP(3,1) * t12;
t594 = koppelP(3,2) * t14 + t592;
t595 = t594 * t24;
t596 = t591 + t595;
t598 = t24 * t590;
t599 = t594 * t22;
t600 = t598 - t599;
t610 = xDP(4) * t596;
t621 = t594 * t17;
t624 = t22 * t621 - t587 * t24;
t626 = koppelP(3,3) * t17;
t628 = t587 * t19 - t626;
t629 = t628 * t57;
t630 = -xDP(4) * t600 + xDP(6) * t624 + t629;
t634 = t587 * t22 + t24 * t621;
t636 = t628 * t51;
t637 = xDP(6) * t634 + t610 + t636;
t647 = xDDP(1) + xDDP(5) * (t22 * t596 + t24 * t600) + xDDP(6) * (t19 * t22 * t600 - t19 * t24 * t596) + xDP(5) * (t22 * xDP(4) * t600 - t24 * t610) + xDP(6) * (t53 * t596 + t59 * t600) + xDP(5) * (t22 * t630 + t24 * t637) + xDP(6) * (t19 * t22 * t637 - t19 * t24 * t630);
t648 = t647 * t584;
t650 = t577 * t574;
t651 = t578 * t575;
t652 = -t650 + t651;
t653 = t582 * t652;
t655 = -t17 * t587 - t589;
t657 = t22 * t655 - t595;
t661 = koppelP(3,1) * t102 - koppelP(3,2) * t104 + t626;
t680 = xDP(4) * (-t594 * t22 + t598) - xDP(6) * t624 - t629;
t683 = t594 * t128;
t684 = -xDP(5) * t655 - t683;
t692 = xDDP(2) + xDDP(4) * t657 + xDDP(5) * t24 * t661 + xDDP(6) * (t19 * t22 * t661 + t17 * t657) + t57 * xDP(4) * t661 + xDP(6) * (t19 * xDP(5) * t657 + t59 * t661) + xDP(4) * t680 + xDP(5) * t24 * t684 + xDP(6) * (t19 * t22 * t684 + t17 * t680);
t696 = koppelP(3,2) * xDP(6);
t699 = -koppelP(3,1) * t141 + t17 * t696 + xDP(4) * koppelP(3,2);
t705 = t22 * t577 * xDP(4) - t575 * xDP(5);
t708 = t19 * t575;
t710 = t22 * t577;
t718 = koppelP(3,1) * t163 - xDP(5) * koppelP(3,3);
t722 = koppelP(3,2) * t141 + xDP(4) * koppelP(3,1);
t723 = t722 * t12;
t724 = t17 * t718 + t723;
t734 = koppelP(3,3) * t141;
t735 = t734 + xDP(1);
t737 = t589 * t49;
t738 = -t737 + xDP(2);
t741 = t578 * (t14 * (-t24 * t699 * t577 + t17 * t705 * koppelP(3,1) - (koppelP(3,2) * t708 - koppelP(3,1) * t710) * xDP(6)) - t24 * t724 * t577 - t17 * t705 * t585 - t12 * (koppelP(3,1) * t708 + koppelP(3,2) * t710) * xDP(6) + t575 * t735 + t738 * t577);
t747 = t22 * t575 * xDP(4) + t577 * xDP(5);
t750 = t22 * t575;
t752 = t19 * t577;
t756 = t24 * t699 * t575 - t17 * t747 * koppelP(3,1) - (koppelP(3,1) * t750 + koppelP(3,2) * t752) * xDP(6);
t759 = t24 * t724 * t575;
t761 = t17 * t747 * t585;
t766 = t12 * (koppelP(3,2) * t750 - koppelP(3,1) * t752) * xDP(6);
t768 = t735 * t577;
t772 = cos(qJ(2,3));
t788 = t14 * (t24 * t223 * koppelP(3,1) + t699 * t22) + t24 * (-t12 * t696 - t585 * t222 - koppelP(3,3) * t230) + t17 * t718 * t22 + t12 * t722 * t22 + xDP(3);
t790 = t772 * (t741 - (t14 * t756 - t575 * t738 + t759 + t761 + t766 + t768) * t574) + t788 * t581;
t791 = t772 * t790;
t799 = t581 * (t741 + t574 * (-t14 * t756 + t575 * t738 - t759 - t761 - t766 - t768)) - t772 * t788;
t802 = t581 ^ 2;
t803 = 0.1e1 / t802;
t805 = qJ(3,3) ^ 2;
t806 = 0.1e1 / t805;
t808 = koppelP(3,1) * t22;
t815 = koppelP(3,2) * t266;
t818 = t14 * (t223 * t808 - t24 * t699) + t24 * (-t17 * t718 - t723) - t815 * t49 - t737 - t585 * t269 + xDP(2);
t826 = t14 * (-koppelP(3,2) * t128 - koppelP(3,1) * t273) + t585 * t273 - t592 * t128 + t734 + xDP(1);
t834 = t578 * (t575 * t818 - t577 * t826) - (t575 * t826 + t577 * t818) * t574;
t835 = t834 * t806;
t837 = t834 * t772;
t838 = t806 * t803;
t841 = t582 * t834;
t842 = t799 * t806;
t844 = t648 * t583 + t692 * t584 * t653 - t835 * t803 * (t799 * t581 + t791) - t790 * t838 * t837 - t842 * t841;
t845 = t844 * t584;
t847 = sin(legFrame(4,3));
t848 = cos(qJ(1,4));
t849 = t848 * t847;
t850 = sin(qJ(1,4));
t851 = cos(legFrame(4,3));
t852 = t851 * t850;
t853 = -t849 - t852;
t854 = sin(qJ(2,4));
t855 = 0.1e1 / t854;
t856 = t855 * t853;
t857 = 0.1e1 / qJ(3,4);
t858 = koppelP(4,2) * t12;
t860 = -t14 * koppelP(4,1) + t858;
t862 = koppelP(4,3) * t19;
t863 = t17 * t860 + t862;
t864 = t22 * t863;
t865 = koppelP(4,1) * t12;
t867 = koppelP(4,2) * t14 + t865;
t868 = t867 * t24;
t869 = t864 + t868;
t871 = t24 * t863;
t872 = t867 * t22;
t873 = t871 - t872;
t883 = xDP(4) * t869;
t894 = t867 * t17;
t897 = t22 * t894 - t860 * t24;
t899 = koppelP(4,3) * t17;
t901 = t860 * t19 - t899;
t902 = t901 * t57;
t903 = -xDP(4) * t873 + xDP(6) * t897 + t902;
t907 = t860 * t22 + t24 * t894;
t909 = t901 * t51;
t910 = xDP(6) * t907 + t883 + t909;
t920 = xDDP(1) + xDDP(5) * (t22 * t869 + t24 * t873) + xDDP(6) * (t19 * t22 * t873 - t19 * t24 * t869) + xDP(5) * (t22 * xDP(4) * t873 - t24 * t883) + xDP(6) * (t53 * t869 + t59 * t873) + xDP(5) * (t22 * t903 + t24 * t910) + xDP(6) * (t19 * t22 * t910 - t19 * t24 * t903);
t921 = t920 * t857;
t923 = t850 * t847;
t924 = t851 * t848;
t925 = -t923 + t924;
t926 = t855 * t925;
t928 = -t17 * t860 - t862;
t930 = t22 * t928 - t868;
t934 = koppelP(4,1) * t102 - koppelP(4,2) * t104 + t899;
t953 = xDP(4) * (-t867 * t22 + t871) - xDP(6) * t897 - t902;
t956 = t867 * t128;
t957 = -xDP(5) * t928 - t956;
t965 = xDDP(2) + xDDP(4) * t930 + xDDP(5) * t24 * t934 + xDDP(6) * (t19 * t22 * t934 + t17 * t930) + t57 * xDP(4) * t934 + xDP(6) * (t19 * xDP(5) * t930 + t59 * t934) + xDP(4) * t953 + xDP(5) * t24 * t957 + xDP(6) * (t19 * t22 * t957 + t17 * t953);
t969 = koppelP(4,2) * xDP(6);
t972 = -koppelP(4,1) * t141 + t17 * t969 + xDP(4) * koppelP(4,2);
t978 = t22 * t850 * xDP(4) - t848 * xDP(5);
t981 = t19 * t848;
t983 = t22 * t850;
t991 = koppelP(4,1) * t163 - xDP(5) * koppelP(4,3);
t995 = koppelP(4,2) * t141 + xDP(4) * koppelP(4,1);
t996 = t995 * t12;
t997 = t17 * t991 + t996;
t1007 = koppelP(4,3) * t141;
t1008 = t1007 + xDP(1);
t1010 = t862 * t49;
t1011 = -t1010 + xDP(2);
t1014 = t851 * (t14 * (-t24 * t972 * t850 + t17 * t978 * koppelP(4,1) - (koppelP(4,2) * t981 - koppelP(4,1) * t983) * xDP(6)) - t24 * t997 * t850 - t17 * t978 * t858 - t12 * (koppelP(4,1) * t981 + koppelP(4,2) * t983) * xDP(6) + t848 * t1008 + t1011 * t850);
t1020 = t22 * t848 * xDP(4) + t850 * xDP(5);
t1023 = t22 * t848;
t1025 = t19 * t850;
t1029 = t24 * t972 * t848 - t17 * t1020 * koppelP(4,1) - (koppelP(4,1) * t1023 + koppelP(4,2) * t1025) * xDP(6);
t1032 = t24 * t997 * t848;
t1034 = t17 * t1020 * t858;
t1039 = t12 * (koppelP(4,2) * t1023 - koppelP(4,1) * t1025) * xDP(6);
t1041 = t1008 * t850;
t1045 = cos(qJ(2,4));
t1061 = t14 * (t24 * t223 * koppelP(4,1) + t972 * t22) + t24 * (-t12 * t969 - t858 * t222 - koppelP(4,3) * t230) + t17 * t991 * t22 + t12 * t995 * t22 + xDP(3);
t1063 = t1045 * (t1014 - (-t848 * t1011 + t14 * t1029 + t1032 + t1034 + t1039 + t1041) * t847) + t1061 * t854;
t1064 = t1045 * t1063;
t1072 = t854 * (t1014 + t847 * (t848 * t1011 - t14 * t1029 - t1032 - t1034 - t1039 - t1041)) - t1045 * t1061;
t1075 = t854 ^ 2;
t1076 = 0.1e1 / t1075;
t1078 = qJ(3,4) ^ 2;
t1079 = 0.1e1 / t1078;
t1081 = koppelP(4,1) * t22;
t1088 = koppelP(4,2) * t266;
t1091 = t14 * (t223 * t1081 - t24 * t972) + t24 * (-t17 * t991 - t996) - t1088 * t49 - t1010 - t858 * t269 + xDP(2);
t1099 = t14 * (-koppelP(4,2) * t128 - koppelP(4,1) * t273) + t858 * t273 - t865 * t128 + t1007 + xDP(1);
t1107 = t851 * (t848 * t1091 - t850 * t1099) - (t850 * t1091 + t848 * t1099) * t847;
t1108 = t1107 * t1079;
t1110 = t1107 * t1045;
t1111 = t1079 * t1076;
t1114 = t855 * t1107;
t1115 = t1072 * t1079;
t1117 = t921 * t856 + t965 * t857 * t926 - t1108 * t1076 * (t1072 * t854 + t1064) - t1063 * t1111 * t1110 - t1115 * t1114;
t1118 = t1117 * t857;
t1120 = sin(legFrame(5,3));
t1121 = cos(qJ(1,5));
t1122 = t1121 * t1120;
t1123 = sin(qJ(1,5));
t1124 = cos(legFrame(5,3));
t1125 = t1124 * t1123;
t1126 = -t1122 - t1125;
t1127 = sin(qJ(2,5));
t1128 = 0.1e1 / t1127;
t1129 = t1128 * t1126;
t1130 = 0.1e1 / qJ(3,5);
t1131 = koppelP(5,2) * t12;
t1133 = -t14 * koppelP(5,1) + t1131;
t1135 = koppelP(5,3) * t19;
t1136 = t17 * t1133 + t1135;
t1137 = t22 * t1136;
t1138 = koppelP(5,1) * t12;
t1140 = koppelP(5,2) * t14 + t1138;
t1141 = t1140 * t24;
t1142 = t1137 + t1141;
t1144 = t24 * t1136;
t1145 = t1140 * t22;
t1146 = t1144 - t1145;
t1156 = xDP(4) * t1142;
t1167 = t1140 * t17;
t1170 = -t1133 * t24 + t22 * t1167;
t1172 = koppelP(5,3) * t17;
t1174 = t1133 * t19 - t1172;
t1175 = t1174 * t57;
t1176 = -xDP(4) * t1146 + xDP(6) * t1170 + t1175;
t1180 = t1133 * t22 + t24 * t1167;
t1182 = t1174 * t51;
t1183 = xDP(6) * t1180 + t1156 + t1182;
t1193 = xDDP(1) + xDDP(5) * (t22 * t1142 + t24 * t1146) + xDDP(6) * (-t19 * t24 * t1142 + t19 * t22 * t1146) + xDP(5) * (t22 * xDP(4) * t1146 - t24 * t1156) + xDP(6) * (t53 * t1142 + t59 * t1146) + xDP(5) * (t22 * t1176 + t24 * t1183) + xDP(6) * (-t19 * t24 * t1176 + t19 * t22 * t1183);
t1194 = t1193 * t1130;
t1196 = t1123 * t1120;
t1197 = t1124 * t1121;
t1198 = -t1196 + t1197;
t1199 = t1128 * t1198;
t1201 = -t17 * t1133 - t1135;
t1203 = t22 * t1201 - t1141;
t1207 = koppelP(5,1) * t102 - koppelP(5,2) * t104 + t1172;
t1226 = xDP(4) * (-t1140 * t22 + t1144) - xDP(6) * t1170 - t1175;
t1229 = t1140 * t128;
t1230 = -xDP(5) * t1201 - t1229;
t1238 = xDDP(2) + xDDP(4) * t1203 + xDDP(5) * t24 * t1207 + xDDP(6) * (t19 * t22 * t1207 + t17 * t1203) + t57 * xDP(4) * t1207 + xDP(6) * (t19 * xDP(5) * t1203 + t59 * t1207) + xDP(4) * t1226 + xDP(5) * t24 * t1230 + xDP(6) * (t19 * t22 * t1230 + t17 * t1226);
t1242 = koppelP(5,2) * xDP(6);
t1245 = t17 * t1242 - koppelP(5,1) * t141 + xDP(4) * koppelP(5,2);
t1251 = t22 * t1123 * xDP(4) - t1121 * xDP(5);
t1254 = t19 * t1121;
t1256 = t22 * t1123;
t1264 = koppelP(5,1) * t163 - xDP(5) * koppelP(5,3);
t1268 = koppelP(5,2) * t141 + xDP(4) * koppelP(5,1);
t1269 = t1268 * t12;
t1270 = t17 * t1264 + t1269;
t1280 = koppelP(5,3) * t141;
t1281 = t1280 + xDP(1);
t1283 = t1135 * t49;
t1284 = -t1283 + xDP(2);
t1287 = t1124 * (t14 * (-t24 * t1245 * t1123 + t17 * t1251 * koppelP(5,1) - (koppelP(5,2) * t1254 - koppelP(5,1) * t1256) * xDP(6)) - t24 * t1270 * t1123 - t17 * t1251 * t1131 - t12 * (koppelP(5,1) * t1254 + koppelP(5,2) * t1256) * xDP(6) + t1121 * t1281 + t1284 * t1123);
t1293 = t22 * t1121 * xDP(4) + t1123 * xDP(5);
t1296 = t22 * t1121;
t1298 = t19 * t1123;
t1302 = t24 * t1245 * t1121 - t17 * t1293 * koppelP(5,1) - (koppelP(5,1) * t1296 + koppelP(5,2) * t1298) * xDP(6);
t1305 = t24 * t1270 * t1121;
t1307 = t17 * t1293 * t1131;
t1312 = t12 * (koppelP(5,2) * t1296 - koppelP(5,1) * t1298) * xDP(6);
t1314 = t1281 * t1123;
t1318 = cos(qJ(2,5));
t1334 = t14 * (t24 * t223 * koppelP(5,1) + t1245 * t22) + t24 * (-t1131 * t222 - t12 * t1242 - koppelP(5,3) * t230) + t17 * t1264 * t22 + t12 * t1268 * t22 + xDP(3);
t1336 = t1318 * (t1287 - (-t1121 * t1284 + t14 * t1302 + t1305 + t1307 + t1312 + t1314) * t1120) + t1334 * t1127;
t1337 = t1318 * t1336;
t1345 = t1127 * (t1287 + t1120 * (t1121 * t1284 - t14 * t1302 - t1305 - t1307 - t1312 - t1314)) - t1318 * t1334;
t1348 = t1127 ^ 2;
t1349 = 0.1e1 / t1348;
t1351 = qJ(3,5) ^ 2;
t1352 = 0.1e1 / t1351;
t1354 = koppelP(5,1) * t22;
t1361 = koppelP(5,2) * t266;
t1364 = t14 * (-t24 * t1245 + t223 * t1354) + t24 * (-t17 * t1264 - t1269) - t1361 * t49 - t1283 - t1131 * t269 + xDP(2);
t1372 = t14 * (-koppelP(5,2) * t128 - koppelP(5,1) * t273) + t1131 * t273 - t1138 * t128 + t1280 + xDP(1);
t1380 = t1124 * (t1121 * t1364 - t1123 * t1372) - (t1121 * t1372 + t1123 * t1364) * t1120;
t1381 = t1380 * t1352;
t1383 = t1380 * t1318;
t1384 = t1352 * t1349;
t1387 = t1128 * t1380;
t1388 = t1345 * t1352;
t1390 = t1194 * t1129 + t1238 * t1130 * t1199 - t1381 * t1349 * (t1345 * t1127 + t1337) - t1336 * t1384 * t1383 - t1388 * t1387;
t1391 = t1390 * t1130;
t1393 = sin(legFrame(6,3));
t1394 = cos(qJ(1,6));
t1395 = t1394 * t1393;
t1396 = sin(qJ(1,6));
t1397 = cos(legFrame(6,3));
t1398 = t1397 * t1396;
t1399 = -t1395 - t1398;
t1400 = sin(qJ(2,6));
t1401 = 0.1e1 / t1400;
t1402 = t1401 * t1399;
t1403 = 0.1e1 / qJ(3,6);
t1404 = koppelP(6,2) * t12;
t1406 = -t14 * koppelP(6,1) + t1404;
t1408 = koppelP(6,3) * t19;
t1409 = t17 * t1406 + t1408;
t1410 = t22 * t1409;
t1411 = koppelP(6,1) * t12;
t1413 = t14 * koppelP(6,2) + t1411;
t1414 = t1413 * t24;
t1415 = t1410 + t1414;
t1417 = t24 * t1409;
t1418 = t1413 * t22;
t1419 = t1417 - t1418;
t1429 = xDP(4) * t1415;
t1440 = t1413 * t17;
t1443 = -t1406 * t24 + t22 * t1440;
t1445 = koppelP(6,3) * t17;
t1447 = t1406 * t19 - t1445;
t1448 = t1447 * t57;
t1449 = -xDP(4) * t1419 + xDP(6) * t1443 + t1448;
t1453 = t1406 * t22 + t24 * t1440;
t1455 = t1447 * t51;
t1456 = xDP(6) * t1453 + t1429 + t1455;
t1466 = xDDP(1) + xDDP(5) * (t22 * t1415 + t24 * t1419) + xDDP(6) * (-t19 * t24 * t1415 + t19 * t22 * t1419) + xDP(5) * (t22 * xDP(4) * t1419 - t24 * t1429) + xDP(6) * (t53 * t1415 + t59 * t1419) + xDP(5) * (t22 * t1449 + t24 * t1456) + xDP(6) * (-t19 * t24 * t1449 + t19 * t22 * t1456);
t1467 = t1466 * t1403;
t1469 = t1396 * t1393;
t1470 = t1397 * t1394;
t1471 = -t1469 + t1470;
t1472 = t1401 * t1471;
t1474 = -t17 * t1406 - t1408;
t1476 = t22 * t1474 - t1414;
t1480 = koppelP(6,1) * t102 - koppelP(6,2) * t104 + t1445;
t1499 = xDP(4) * (-t1413 * t22 + t1417) - xDP(6) * t1443 - t1448;
t1502 = t1413 * t128;
t1503 = -xDP(5) * t1474 - t1502;
t1511 = xDDP(2) + xDDP(4) * t1476 + xDDP(5) * t24 * t1480 + xDDP(6) * (t19 * t22 * t1480 + t17 * t1476) + t57 * xDP(4) * t1480 + xDP(6) * (t19 * xDP(5) * t1476 + t59 * t1480) + xDP(4) * t1499 + xDP(5) * t24 * t1503 + xDP(6) * (t19 * t22 * t1503 + t17 * t1499);
t1515 = koppelP(6,2) * xDP(6);
t1518 = -koppelP(6,1) * t141 + t17 * t1515 + xDP(4) * koppelP(6,2);
t1524 = t22 * t1396 * xDP(4) - t1394 * xDP(5);
t1527 = t19 * t1394;
t1529 = t22 * t1396;
t1537 = koppelP(6,1) * t163 - xDP(5) * koppelP(6,3);
t1541 = koppelP(6,2) * t141 + xDP(4) * koppelP(6,1);
t1542 = t1541 * t12;
t1543 = t17 * t1537 + t1542;
t1553 = koppelP(6,3) * t141;
t1554 = t1553 + xDP(1);
t1556 = t1408 * t49;
t1557 = -t1556 + xDP(2);
t1560 = t1397 * (t14 * (-t24 * t1518 * t1396 + t17 * t1524 * koppelP(6,1) - (koppelP(6,2) * t1527 - koppelP(6,1) * t1529) * xDP(6)) - t24 * t1543 * t1396 - t17 * t1524 * t1404 - t12 * (koppelP(6,1) * t1527 + koppelP(6,2) * t1529) * xDP(6) + t1394 * t1554 + t1557 * t1396);
t1566 = t22 * t1394 * xDP(4) + t1396 * xDP(5);
t1569 = t22 * t1394;
t1571 = t19 * t1396;
t1575 = t24 * t1518 * t1394 - t17 * t1566 * koppelP(6,1) - (koppelP(6,1) * t1569 + koppelP(6,2) * t1571) * xDP(6);
t1578 = t24 * t1543 * t1394;
t1580 = t17 * t1566 * t1404;
t1585 = t12 * (koppelP(6,2) * t1569 - koppelP(6,1) * t1571) * xDP(6);
t1587 = t1554 * t1396;
t1591 = cos(qJ(2,6));
t1607 = t14 * (t24 * t223 * koppelP(6,1) + t1518 * t22) + t24 * (-t12 * t1515 - t1404 * t222 - koppelP(6,3) * t230) + t17 * t1537 * t22 + t12 * t1541 * t22 + xDP(3);
t1609 = t1591 * (t1560 - (-t1394 * t1557 + t14 * t1575 + t1578 + t1580 + t1585 + t1587) * t1393) + t1607 * t1400;
t1610 = t1591 * t1609;
t1618 = t1400 * (t1560 + t1393 * (t1394 * t1557 - t14 * t1575 - t1578 - t1580 - t1585 - t1587)) - t1591 * t1607;
t1621 = t1400 ^ 2;
t1622 = 0.1e1 / t1621;
t1624 = qJ(3,6) ^ 2;
t1625 = 0.1e1 / t1624;
t1627 = koppelP(6,1) * t22;
t1634 = koppelP(6,2) * t266;
t1637 = t14 * (-t24 * t1518 + t223 * t1627) + t24 * (-t17 * t1537 - t1542) - t1634 * t49 - t1556 - t1404 * t269 + xDP(2);
t1645 = t14 * (-koppelP(6,2) * t128 - koppelP(6,1) * t273) + t1404 * t273 - t1411 * t128 + t1553 + xDP(1);
t1653 = t1397 * (t1394 * t1637 - t1396 * t1645) - (t1394 * t1645 + t1396 * t1637) * t1393;
t1654 = t1653 * t1625;
t1656 = t1653 * t1591;
t1657 = t1625 * t1622;
t1660 = t1401 * t1653;
t1661 = t1618 * t1625;
t1663 = t1467 * t1402 + t1511 * t1403 * t1472 - t1654 * t1622 * (t1618 * t1400 + t1610) - t1609 * t1657 * t1656 - t1661 * t1660;
t1664 = t1663 * t1403;
t1669 = g(1) * t1 - g(2) * t5;
t1673 = g(1) * t5 + g(2) * t1;
t1675 = t2 * t1669 + t4 * t1673;
t1676 = t1675 * t11;
t1680 = g(1) * t301 - g(2) * t305;
t1684 = g(1) * t305 + g(2) * t301;
t1686 = t302 * t1680 + t304 * t1684;
t1687 = t1686 * t311;
t1691 = g(1) * t574 - g(2) * t578;
t1695 = g(1) * t578 + g(2) * t574;
t1697 = t575 * t1691 + t577 * t1695;
t1698 = t1697 * t584;
t1702 = g(1) * t847 - g(2) * t851;
t1706 = g(1) * t851 + g(2) * t847;
t1708 = t848 * t1702 + t850 * t1706;
t1709 = t1708 * t857;
t1713 = g(1) * t1120 - g(2) * t1124;
t1717 = g(1) * t1124 + g(2) * t1120;
t1719 = t1121 * t1713 + t1123 * t1717;
t1720 = t1719 * t1130;
t1724 = g(1) * t1393 - g(2) * t1397;
t1728 = g(1) * t1397 + g(2) * t1393;
t1730 = t1394 * t1724 + t1396 * t1728;
t1731 = t1730 * t1403;
t1736 = -t4 * t1669 + t2 * t1673;
t1737 = t1736 * t11;
t1741 = -t304 * t1680 + t302 * t1684;
t1742 = t1741 * t311;
t1746 = -t577 * t1691 + t575 * t1695;
t1747 = t1746 * t584;
t1751 = -t850 * t1702 + t848 * t1706;
t1752 = t1751 * t857;
t1756 = t1121 * t1717 - t1123 * t1713;
t1757 = t1756 * t1130;
t1761 = t1394 * t1728 - t1396 * t1724;
t1762 = t1761 * t1403;
t1768 = 0.2e1 * t242 * t289 + t298 * t253;
t1769 = t1768 * t11;
t1771 = t220 ^ 2;
t1772 = t1771 * t95;
t1774 = 0.1e1 / t256 / qJ(3,1);
t1776 = t288 ^ 2;
t1782 = 0.2e1 * t518 * t562 + t571 * t529;
t1783 = t1782 * t311;
t1785 = t499 ^ 2;
t1786 = t1785 * t379;
t1788 = 0.1e1 / t532 / qJ(3,2);
t1790 = t561 ^ 2;
t1796 = 0.2e1 * t791 * t835 + t844 * t802;
t1797 = t1796 * t584;
t1799 = t772 ^ 2;
t1800 = t1799 * t652;
t1802 = 0.1e1 / t805 / qJ(3,3);
t1804 = t834 ^ 2;
t1810 = 0.2e1 * t1064 * t1108 + t1117 * t1075;
t1811 = t1810 * t857;
t1813 = t1045 ^ 2;
t1814 = t1813 * t925;
t1816 = 0.1e1 / t1078 / qJ(3,4);
t1818 = t1107 ^ 2;
t1824 = 0.2e1 * t1337 * t1381 + t1390 * t1348;
t1825 = t1824 * t1130;
t1827 = t1318 ^ 2;
t1828 = t1827 * t1198;
t1830 = 0.1e1 / t1351 / qJ(3,5);
t1832 = t1380 ^ 2;
t1838 = 0.2e1 * t1610 * t1654 + t1663 * t1621;
t1839 = t1838 * t1403;
t1841 = t1591 ^ 2;
t1842 = t1841 * t1471;
t1844 = 0.1e1 / t1624 / qJ(3,6);
t1846 = t1653 ^ 2;
t1849 = t1769 * t10 - t1776 * t9 * t1774 * t1772 + t1783 * t310 - t1790 * t309 * t1788 * t1786 + t1797 * t583 - t1804 * t582 * t1802 * t1800 + t1811 * t856 - t1818 * t855 * t1816 * t1814 + t1825 * t1129 - t1832 * t1128 * t1830 * t1828 + t1839 * t1402 - t1846 * t1401 * t1844 * t1842;
t1850 = t257 * t241;
t1852 = t9 * t288 * t1771;
t1855 = t298 * t8;
t1856 = t220 * t1855;
t1860 = 0.4e1 * t1852 * t1850 - 0.2e1 * t1850 * t295 + 0.2e1 * t1856;
t1861 = t1860 * t11;
t1863 = t220 * t95;
t1864 = t1776 * t1771;
t1865 = t292 * t1864;
t1867 = t254 * t1776;
t1868 = t257 * t1867;
t1869 = -0.2e1 * t1865 + t1868;
t1872 = t533 * t517;
t1874 = t309 * t561 * t1785;
t1877 = t571 * t308;
t1878 = t499 * t1877;
t1882 = 0.4e1 * t1874 * t1872 - 0.2e1 * t1872 * t568 + 0.2e1 * t1878;
t1883 = t1882 * t311;
t1885 = t499 * t379;
t1886 = t1790 * t1785;
t1887 = t565 * t1886;
t1889 = t530 * t1790;
t1890 = t533 * t1889;
t1891 = -0.2e1 * t1887 + t1890;
t1894 = t806 * t790;
t1896 = t582 * t834 * t1799;
t1899 = t844 * t581;
t1900 = t772 * t1899;
t1904 = 0.4e1 * t1896 * t1894 - 0.2e1 * t1894 * t841 + 0.2e1 * t1900;
t1905 = t1904 * t584;
t1907 = t772 * t652;
t1908 = t1804 * t1799;
t1909 = t838 * t1908;
t1911 = t803 * t1804;
t1912 = t806 * t1911;
t1913 = -0.2e1 * t1909 + t1912;
t1916 = t1079 * t1063;
t1918 = t855 * t1107 * t1813;
t1921 = t1117 * t854;
t1922 = t1045 * t1921;
t1926 = -0.2e1 * t1916 * t1114 + 0.4e1 * t1918 * t1916 + 0.2e1 * t1922;
t1927 = t1926 * t857;
t1929 = t1045 * t925;
t1930 = t1818 * t1813;
t1931 = t1111 * t1930;
t1933 = t1076 * t1818;
t1934 = t1079 * t1933;
t1935 = -0.2e1 * t1931 + t1934;
t1938 = t1352 * t1336;
t1940 = t1128 * t1380 * t1827;
t1943 = t1390 * t1127;
t1944 = t1318 * t1943;
t1948 = -0.2e1 * t1938 * t1387 + 0.4e1 * t1940 * t1938 + 0.2e1 * t1944;
t1949 = t1948 * t1130;
t1951 = t1318 * t1198;
t1952 = t1832 * t1827;
t1953 = t1384 * t1952;
t1955 = t1349 * t1832;
t1956 = t1352 * t1955;
t1957 = -0.2e1 * t1953 + t1956;
t1960 = t1625 * t1609;
t1962 = t1401 * t1653 * t1841;
t1965 = t1663 * t1400;
t1966 = t1591 * t1965;
t1970 = -0.2e1 * t1960 * t1660 + 0.4e1 * t1962 * t1960 + 0.2e1 * t1966;
t1971 = t1970 * t1403;
t1973 = t1591 * t1471;
t1974 = t1846 * t1841;
t1975 = t1657 * t1974;
t1977 = t1622 * t1846;
t1978 = t1625 * t1977;
t1979 = -0.2e1 * t1975 + t1978;
t1982 = t1869 * t11 * t1863 + t1957 * t1130 * t1951 + t1979 * t1403 * t1973 + t1891 * t311 * t1885 + t1913 * t584 * t1907 + t1935 * t857 * t1929 + t1861 * t10 + t1949 * t1129 + t1971 * t1402 + t1883 * t310 + t1905 * t583 + t1927 * t856;
t1983 = t91 * t1863;
t1984 = -t7 * t11;
t1986 = t138 * t220 * t1984;
t1987 = t8 * t11;
t1989 = t24 * t98 + t32;
t2009 = xDP(4) * (-t27 * t24 - t23) - xDP(6) * t77 - t79;
t2012 = xDP(5) * t98 + t129;
t2020 = xDDP(3) + xDDP(4) * t1989 - xDDP(5) * t22 * t106 + xDDP(6) * (t19 * t24 * t106 + t17 * t1989) + t51 * xDP(4) * t106 + xDP(6) * (t19 * xDP(5) * t1989 - t53 * t106) + xDP(4) * t2009 + xDP(5) * t22 * t2012 + xDP(6) * (-t19 * t24 * t2012 + t17 * t2009);
t2021 = t2020 * t1987;
t2022 = t1776 * t9;
t2024 = t220 * t257 * t2022;
t2026 = 0.2e1 * t241 * t296;
t2027 = t1983 + t1986 + t2021 + t2024 - t2026;
t2029 = t241 ^ 2;
t2030 = t257 * t2029;
t2032 = t8 * t2027 + t220 * t2030;
t2033 = t2032 * t11;
t2037 = t375 * t1885;
t2038 = -t307 * t311;
t2040 = t419 * t499 * t2038;
t2041 = t308 * t311;
t2043 = t24 * t382 + t326;
t2063 = xDP(4) * (-t321 * t24 - t318) - xDP(6) * t361 - t363;
t2066 = xDP(5) * t382 + t410;
t2074 = xDDP(3) + xDDP(4) * t2043 - xDDP(5) * t22 * t388 + xDDP(6) * (t19 * t24 * t388 + t17 * t2043) + t51 * xDP(4) * t388 + xDP(6) * (t19 * xDP(5) * t2043 - t53 * t388) + xDP(4) * t2063 + xDP(5) * t22 * t2066 + xDP(6) * (-t19 * t24 * t2066 + t17 * t2063);
t2075 = t2074 * t2041;
t2076 = t1790 * t309;
t2078 = t499 * t533 * t2076;
t2080 = 0.2e1 * t517 * t569;
t2081 = t2037 + t2040 + t2075 + t2078 - t2080;
t2083 = t517 ^ 2;
t2084 = t533 * t2083;
t2086 = t308 * t2081 + t499 * t2084;
t2087 = t2086 * t311;
t2091 = t648 * t1907;
t2092 = -t580 * t584;
t2094 = t692 * t772 * t2092;
t2095 = t581 * t584;
t2097 = t24 * t655 + t599;
t2117 = xDP(4) * (-t594 * t24 - t591) - xDP(6) * t634 - t636;
t2120 = xDP(5) * t655 + t683;
t2128 = xDDP(3) + xDDP(4) * t2097 - xDDP(5) * t22 * t661 + xDDP(6) * (t19 * t24 * t661 + t17 * t2097) + t51 * xDP(4) * t661 + xDP(6) * (t19 * xDP(5) * t2097 - t53 * t661) + xDP(4) * t2117 + xDP(5) * t22 * t2120 + xDP(6) * (-t19 * t24 * t2120 + t17 * t2117);
t2129 = t2128 * t2095;
t2130 = t1804 * t582;
t2132 = t772 * t806 * t2130;
t2134 = 0.2e1 * t790 * t842;
t2135 = t2091 + t2094 + t2129 + t2132 - t2134;
t2137 = t790 ^ 2;
t2138 = t806 * t2137;
t2140 = t581 * t2135 + t772 * t2138;
t2141 = t2140 * t584;
t2145 = t921 * t1929;
t2146 = -t853 * t857;
t2148 = t965 * t1045 * t2146;
t2149 = t854 * t857;
t2151 = t24 * t928 + t872;
t2171 = xDP(4) * (-t867 * t24 - t864) - xDP(6) * t907 - t909;
t2174 = xDP(5) * t928 + t956;
t2182 = xDDP(3) + xDDP(4) * t2151 - xDDP(5) * t22 * t934 + xDDP(6) * (t19 * t24 * t934 + t17 * t2151) + t51 * xDP(4) * t934 + xDP(6) * (t19 * xDP(5) * t2151 - t53 * t934) + xDP(4) * t2171 + xDP(5) * t22 * t2174 + xDP(6) * (-t19 * t24 * t2174 + t17 * t2171);
t2183 = t2182 * t2149;
t2184 = t1818 * t855;
t2186 = t1045 * t1079 * t2184;
t2188 = 0.2e1 * t1063 * t1115;
t2189 = t2145 + t2148 + t2183 + t2186 - t2188;
t2191 = t1063 ^ 2;
t2192 = t1079 * t2191;
t2194 = t1045 * t2192 + t854 * t2189;
t2195 = t2194 * t857;
t2199 = t1194 * t1951;
t2200 = -t1126 * t1130;
t2202 = t1238 * t1318 * t2200;
t2203 = t1127 * t1130;
t2205 = t24 * t1201 + t1145;
t2225 = xDP(4) * (-t1140 * t24 - t1137) - xDP(6) * t1180 - t1182;
t2228 = xDP(5) * t1201 + t1229;
t2236 = xDDP(3) + xDDP(4) * t2205 - xDDP(5) * t22 * t1207 + xDDP(6) * (t19 * t24 * t1207 + t17 * t2205) + t51 * xDP(4) * t1207 + xDP(6) * (t19 * xDP(5) * t2205 - t53 * t1207) + xDP(4) * t2225 + xDP(5) * t22 * t2228 + xDP(6) * (-t19 * t24 * t2228 + t17 * t2225);
t2237 = t2236 * t2203;
t2238 = t1832 * t1128;
t2240 = t1318 * t1352 * t2238;
t2242 = 0.2e1 * t1336 * t1388;
t2243 = t2199 + t2202 + t2237 + t2240 - t2242;
t2245 = t1336 ^ 2;
t2246 = t1352 * t2245;
t2248 = t1127 * t2243 + t1318 * t2246;
t2249 = t2248 * t1130;
t2253 = t1467 * t1973;
t2254 = -t1399 * t1403;
t2256 = t1511 * t1591 * t2254;
t2257 = t1400 * t1403;
t2259 = t24 * t1474 + t1418;
t2279 = xDP(4) * (-t1413 * t24 - t1410) - xDP(6) * t1453 - t1455;
t2282 = xDP(5) * t1474 + t1502;
t2290 = xDDP(3) + xDDP(4) * t2259 - xDDP(5) * t22 * t1480 + xDDP(6) * (t19 * t24 * t1480 + t17 * t2259) + t51 * xDP(4) * t1480 + xDP(6) * (t19 * xDP(5) * t2259 - t53 * t1480) + xDP(4) * t2279 + xDP(5) * t22 * t2282 + xDP(6) * (-t19 * t24 * t2282 + t17 * t2279);
t2291 = t2290 * t2257;
t2292 = t1846 * t1401;
t2294 = t1591 * t1625 * t2292;
t2296 = 0.2e1 * t1609 * t1661;
t2297 = t2253 + t2256 + t2291 + t2294 - t2296;
t2299 = t1609 ^ 2;
t2300 = t1625 * t2299;
t2302 = t1400 * t2297 + t1591 * t2300;
t2303 = t2302 * t1403;
t2307 = t1117 * t2149 * t1929 + t1390 * t2203 * t1951 + t1663 * t2257 * t1973 + t298 * t1987 * t1863 + t571 * t2041 * t1885 + t844 * t2095 * t1907 + t2033 * t10 + t2249 * t1129 + t2303 * t1402 + t2087 * t310 + t2141 * t583 + t2195 * t856;
t2308 = t220 * t2027;
t2310 = -t8 * t2030 + t2308;
t2311 = t2310 * t11;
t2314 = t499 * t2081;
t2316 = -t308 * t2084 + t2314;
t2317 = t2316 * t311;
t2320 = t772 * t2135;
t2322 = -t581 * t2138 + t2320;
t2323 = t2322 * t584;
t2326 = t1045 * t2189;
t2328 = -t854 * t2192 + t2326;
t2329 = t2328 * t857;
t2332 = t1318 * t2243;
t2334 = -t1127 * t2246 + t2332;
t2335 = t2334 * t1130;
t2338 = t1591 * t2297;
t2340 = -t1400 * t2300 + t2338;
t2341 = t2340 * t1403;
t2344 = t2311 * t10 + t1118 * t1814 + t2335 * t1129 + t1391 * t1828 + t2341 * t1402 + t1664 * t1842 + t299 * t1772 + t572 * t1786 + t845 * t1800 + t2317 * t310 + t2323 * t583 + t2329 * t856;
t2359 = t1675 * t220 * t11;
t2363 = t2 * g(1) + t4 * g(2);
t2364 = t5 * t2363;
t2367 = t4 * g(1) - t2 * g(2);
t2368 = t2367 * t1;
t2369 = t2364 - t2368;
t2370 = t8 * t2369;
t2371 = t220 * g(3);
t2372 = t2370 - t2371;
t2376 = t1686 * t499 * t311;
t2380 = t302 * g(1) + g(2) * t304;
t2381 = t305 * t2380;
t2384 = t304 * g(1) - t302 * g(2);
t2385 = t2384 * t301;
t2386 = t2381 - t2385;
t2387 = t308 * t2386;
t2388 = t499 * g(3);
t2389 = t2387 - t2388;
t2393 = t1697 * t772 * t584;
t2397 = t575 * g(1) + g(2) * t577;
t2398 = t578 * t2397;
t2401 = t577 * g(1) - t575 * g(2);
t2402 = t2401 * t574;
t2403 = t2398 - t2402;
t2404 = t581 * t2403;
t2405 = t772 * g(3);
t2406 = t2404 - t2405;
t2410 = t1708 * t1045 * t857;
t2414 = t848 * g(1) + g(2) * t850;
t2415 = t851 * t2414;
t2418 = t850 * g(1) - t848 * g(2);
t2419 = t2418 * t847;
t2420 = t2415 - t2419;
t2421 = t854 * t2420;
t2422 = t1045 * g(3);
t2423 = t2421 - t2422;
t2427 = t1719 * t1318 * t1130;
t2431 = t1121 * g(1) + g(2) * t1123;
t2432 = t1124 * t2431;
t2435 = t1123 * g(1) - t1121 * g(2);
t2436 = t2435 * t1120;
t2437 = t2432 - t2436;
t2438 = t1127 * t2437;
t2439 = t1318 * g(3);
t2440 = t2438 - t2439;
t2444 = t1730 * t1591 * t1403;
t2448 = t1394 * g(1) + g(2) * t1396;
t2449 = t1397 * t2448;
t2452 = t1396 * g(1) - t1394 * g(2);
t2453 = t2452 * t1393;
t2454 = t2449 - t2453;
t2455 = t1400 * t2454;
t2456 = t1591 * g(3);
t2457 = t2455 - t2456;
t2460 = t2372 * t11 * t1863 + t2440 * t1130 * t1951 + t2457 * t1403 * t1973 + t2389 * t311 * t1885 + t2406 * t584 * t1907 + t2423 * t857 * t1929 + t2359 * t10 + t2427 * t1129 + t2444 * t1402 + t2376 * t310 + t2393 * t583 + t2410 * t856;
t2461 = t7 * t11;
t2464 = t8 * g(3);
t2465 = t220 * t2369 + t2464;
t2468 = t307 * t311;
t2471 = t308 * g(3);
t2472 = t499 * t2386 + t2471;
t2475 = t580 * t584;
t2478 = t581 * g(3);
t2479 = t772 * t2403 + t2478;
t2482 = t853 * t857;
t2485 = t854 * g(3);
t2486 = t1045 * t2420 + t2485;
t2489 = t1126 * t1130;
t2492 = t1127 * g(3);
t2493 = t1318 * t2437 + t2492;
t2496 = t1399 * t1403;
t2499 = t1400 * g(3);
t2500 = t1591 * t2454 + t2499;
t2503 = t2465 * t11 * t1863 + t2493 * t1130 * t1951 + t2500 * t1403 * t1973 + t2472 * t311 * t1885 + t2479 * t584 * t1907 + t2486 * t857 * t1929 - t1675 * t2461 - t1686 * t2468 - t1697 * t2475 - t1708 * t2482 - t1719 * t2489 - t1730 * t2496;
t2504 = t11 * t241;
t2519 = 0.4e1 * t1852 * t2504 + t220 * (t5 * t2367 + t1 * t2363 + 0.2e1 * (t250 * t11 * t295 + t298 * qJ(3,1)) * t8) - 0.2e1 * t295 * t2504;
t2520 = t2519 * t11;
t2523 = t11 * t254 * t1864;
t2526 = t8 * t95;
t2527 = t90 * t2526;
t2528 = -t7 * t8;
t2529 = t138 * t2528;
t2530 = t2020 * t220;
t2533 = t11 * t9;
t2534 = t2533 * t288 * (t1852 - t295);
t2535 = t11 * t2029;
t2536 = t11 * t1867 + t2370 - t2371 - 0.2e1 * t2523 - t2527 - t2529 + t2530 + t2534 - t2535;
t2540 = -t1983 - t1986 - t2021 - 0.2e1 * t2024 + t2026;
t2542 = t311 * t517;
t2557 = 0.4e1 * t1874 * t2542 + t499 * (t305 * t2384 + t301 * t2380 + 0.2e1 * (t526 * t311 * t568 + t571 * qJ(3,2)) * t308) - 0.2e1 * t2542 * t568;
t2558 = t2557 * t311;
t2561 = t311 * t530 * t1886;
t2564 = t308 * t379;
t2565 = t374 * t2564;
t2566 = -t307 * t308;
t2567 = t419 * t2566;
t2568 = t2074 * t499;
t2571 = t311 * t309;
t2572 = t2571 * t561 * (t1874 - t568);
t2573 = t311 * t2083;
t2574 = t311 * t1889 + t2387 - t2388 - 0.2e1 * t2561 - t2565 - t2567 + t2568 + t2572 - t2573;
t2578 = -t2037 - t2040 - t2075 - 0.2e1 * t2078 + t2080;
t2580 = t584 * t790;
t2595 = 0.4e1 * t1896 * t2580 + t772 * (t578 * t2401 + t574 * t2397 + 0.2e1 * (t799 * t584 * t841 + t844 * qJ(3,3)) * t581) - 0.2e1 * t841 * t2580;
t2596 = t2595 * t584;
t2599 = t584 * t803 * t1908;
t2602 = t581 * t652;
t2603 = t647 * t2602;
t2604 = -t580 * t581;
t2605 = t692 * t2604;
t2606 = t2128 * t772;
t2609 = t584 * t582;
t2610 = t2609 * t834 * (t1896 - t841);
t2611 = t584 * t2137;
t2612 = t584 * t1911 + t2404 - t2405 - 0.2e1 * t2599 - t2603 - t2605 + t2606 + t2610 - t2611;
t2616 = -t2091 - t2094 - t2129 - 0.2e1 * t2132 + t2134;
t2618 = t857 * t1063;
t2633 = 0.4e1 * t1918 * t2618 + t1045 * (t851 * t2418 + t847 * t2414 + 0.2e1 * (t1072 * t857 * t1114 + t1117 * qJ(3,4)) * t854) - 0.2e1 * t2618 * t1114;
t2634 = t2633 * t857;
t2637 = t857 * t1076 * t1930;
t2640 = t854 * t925;
t2641 = t920 * t2640;
t2642 = -t853 * t854;
t2643 = t965 * t2642;
t2644 = t2182 * t1045;
t2647 = t857 * t855;
t2648 = t2647 * t1107 * (t1918 - t1114);
t2649 = t857 * t2191;
t2650 = t857 * t1933 + t2421 - t2422 - 0.2e1 * t2637 - t2641 - t2643 + t2644 + t2648 - t2649;
t2654 = -t2145 - t2148 - t2183 - 0.2e1 * t2186 + t2188;
t2656 = t1130 * t1336;
t2671 = 0.4e1 * t1940 * t2656 + t1318 * (t1124 * t2435 + t1120 * t2431 + 0.2e1 * (t1345 * t1130 * t1387 + t1390 * qJ(3,5)) * t1127) - 0.2e1 * t1387 * t2656;
t2672 = t2671 * t1130;
t2675 = t1130 * t1349 * t1952;
t2678 = t1127 * t1198;
t2679 = t1193 * t2678;
t2680 = -t1126 * t1127;
t2681 = t1238 * t2680;
t2682 = t2236 * t1318;
t2685 = t1130 * t1128;
t2686 = t2685 * t1380 * (t1940 - t1387);
t2687 = t1130 * t2245;
t2688 = t1130 * t1955 + t2438 - t2439 - 0.2e1 * t2675 - t2679 - t2681 + t2682 + t2686 - t2687;
t2692 = -t2199 - t2202 - t2237 - 0.2e1 * t2240 + t2242;
t2694 = t1403 * t1609;
t2709 = 0.4e1 * t1962 * t2694 + t1591 * (t1397 * t2452 + t1393 * t2448 + 0.2e1 * (t1618 * t1403 * t1660 + t1663 * qJ(3,6)) * t1400) - 0.2e1 * t2694 * t1660;
t2710 = t2709 * t1403;
t2713 = t1403 * t1622 * t1974;
t2716 = t1400 * t1471;
t2717 = t1466 * t2716;
t2718 = -t1399 * t1400;
t2719 = t1511 * t2718;
t2720 = t2290 * t1591;
t2723 = t1403 * t1401;
t2724 = t2723 * t1653 * (t1962 - t1660);
t2725 = t1403 * t2299;
t2726 = t1403 * t1977 + t2455 - t2456 - 0.2e1 * t2713 - t2717 - t2719 + t2720 + t2724 - t2725;
t2730 = -t2253 - t2256 - t2291 - 0.2e1 * t2294 + t2296;
t2732 = t2520 * t10 + t2536 * t11 * t1863 + t2540 * t2526 + t2558 * t310 + t2574 * t311 * t1885 + t2578 * t2564 + t2596 * t583 + t2612 * t584 * t1907 + t2616 * t2602 + t2634 * t856 + t2650 * t857 * t1929 + t2654 * t2640 + t2672 * t1129 + t2688 * t1130 * t1951 + t2692 * t2678 + t2710 * t1402 + t2726 * t1403 * t1973 + t2730 * t2716;
t2736 = t2027 * qJ(3,1);
t2739 = 0.2e1 * t11 * t241 * t250;
t2743 = t8 * (t2527 + t2529 - t2530 - t2534) + t2368 - g(2) * t6 + t220 * (t2736 + t2739) - g(1) * t94;
t2744 = t2743 * t11;
t2752 = t2081 * qJ(3,2);
t2755 = 0.2e1 * t311 * t517 * t526;
t2759 = t308 * (t2565 + t2567 - t2568 - t2572) + t2385 - g(2) * t306 + t499 * (t2752 + t2755) - g(1) * t378;
t2760 = t2759 * t311;
t2768 = t2135 * qJ(3,3);
t2771 = 0.2e1 * t584 * t790 * t799;
t2775 = t581 * (t2603 + t2605 - t2606 - t2610) + t2402 - g(2) * t579 + t772 * (t2768 + t2771) - g(1) * t651;
t2776 = t2775 * t584;
t2784 = t2189 * qJ(3,4);
t2787 = 0.2e1 * t857 * t1063 * t1072;
t2791 = t854 * (t2641 + t2643 - t2644 - t2648) + t2419 - g(2) * t852 + t1045 * (t2784 + t2787) - g(1) * t924;
t2792 = t2791 * t857;
t2800 = t2243 * qJ(3,5);
t2803 = 0.2e1 * t1130 * t1336 * t1345;
t2807 = t1127 * (t2679 + t2681 - t2682 - t2686) + t2436 - g(2) * t1125 + t1318 * (t2800 + t2803) - g(1) * t1197;
t2808 = t2807 * t1130;
t2816 = t2297 * qJ(3,6);
t2819 = 0.2e1 * t1403 * t1609 * t1618;
t2823 = t1400 * (t2717 + t2719 - t2720 - t2724) + t2453 - g(2) * t1398 + t1591 * (t2816 + t2819) - g(1) * t1470;
t2824 = t2823 * t1403;
t2829 = t2744 * t10 + t298 * t1772 + t298 * t253 * t95 + t2760 * t310 + t571 * t1786 + t571 * t529 * t379 + t2776 * t583 + t844 * t1800 + t844 * t802 * t652 + t2792 * t856 + t1117 * t1814 + t1117 * t1075 * t925 + t2808 * t1129 + t1390 * t1828 + t1390 * t1348 * t1198 + t2824 * t1402 + t1663 * t1842 + t1663 * t1621 * t1471;
t2831 = t9 * t291 * t2504;
t2833 = g(2) * t93;
t2834 = g(1) * t3;
t2835 = g(1) * t6;
t2836 = g(2) * t94;
t2837 = qJ(3,1) * t1855;
t2841 = 0.2e1 * t250 * t11 * t288;
t2842 = 0.4e1 * t2831 + t2833 + t2834 + t2835 - t2836 + 0.2e1 * t2837 + t2841;
t2844 = -t5 * t2363;
t2845 = t1776 * t2533;
t2850 = t220 * (t2844 + t2368 - 0.2e1 * t2845) + 0.2e1 * t2736 - t2464 + t2739;
t2853 = t1865 - t1868 - t2030;
t2856 = t309 * t564 * t2542;
t2858 = g(2) * t377;
t2859 = g(1) * t303;
t2860 = g(1) * t306;
t2861 = g(2) * t378;
t2862 = qJ(3,2) * t1877;
t2866 = 0.2e1 * t526 * t311 * t561;
t2867 = 0.4e1 * t2856 + t2858 + t2859 + t2860 - t2861 + 0.2e1 * t2862 + t2866;
t2869 = -t305 * t2380;
t2870 = t1790 * t2571;
t2875 = t499 * (t2869 + t2385 - 0.2e1 * t2870) + 0.2e1 * t2752 - t2471 + t2755;
t2878 = t1887 - t1890 - t2084;
t2881 = t582 * t837 * t2580;
t2883 = g(2) * t650;
t2884 = g(1) * t576;
t2885 = g(1) * t579;
t2886 = g(2) * t651;
t2887 = qJ(3,3) * t1899;
t2891 = 0.2e1 * t799 * t584 * t834;
t2892 = 0.4e1 * t2881 + t2883 + t2884 + t2885 - t2886 + 0.2e1 * t2887 + t2891;
t2894 = -t578 * t2397;
t2895 = t1804 * t2609;
t2900 = t772 * (t2894 + t2402 - 0.2e1 * t2895) + 0.2e1 * t2768 - t2478 + t2771;
t2903 = t1909 - t1912 - t2138;
t2906 = t855 * t1110 * t2618;
t2908 = g(2) * t923;
t2909 = g(1) * t849;
t2910 = g(1) * t852;
t2911 = g(2) * t924;
t2912 = qJ(3,4) * t1921;
t2916 = 0.2e1 * t1072 * t857 * t1107;
t2917 = 0.4e1 * t2906 + t2908 + t2909 + t2910 - t2911 + 0.2e1 * t2912 + t2916;
t2919 = -t851 * t2414;
t2920 = t1818 * t2647;
t2925 = t1045 * (t2919 + t2419 - 0.2e1 * t2920) + 0.2e1 * t2784 - t2485 + t2787;
t2928 = t1931 - t1934 - t2192;
t2931 = t1128 * t1383 * t2656;
t2933 = g(2) * t1196;
t2934 = g(1) * t1122;
t2935 = g(1) * t1125;
t2936 = g(2) * t1197;
t2937 = qJ(3,5) * t1943;
t2941 = 0.2e1 * t1345 * t1130 * t1380;
t2942 = 0.4e1 * t2931 + t2933 + t2934 + t2935 - t2936 + 0.2e1 * t2937 + t2941;
t2944 = -t1124 * t2431;
t2945 = t1832 * t2685;
t2950 = t1318 * (t2944 + t2436 - 0.2e1 * t2945) + 0.2e1 * t2800 - t2492 + t2803;
t2953 = t1953 - t1956 - t2246;
t2956 = t1401 * t1656 * t2694;
t2958 = g(2) * t1469;
t2959 = g(1) * t1395;
t2960 = g(1) * t1398;
t2961 = g(2) * t1470;
t2962 = qJ(3,6) * t1965;
t2966 = 0.2e1 * t1618 * t1403 * t1653;
t2967 = 0.4e1 * t2956 + t2958 + t2959 + t2960 - t2961 + 0.2e1 * t2962 + t2966;
t2969 = -t1397 * t2448;
t2970 = t1846 * t2723;
t2975 = t1591 * (t2969 + t2453 - 0.2e1 * t2970) + 0.2e1 * t2816 - t2499 + t2819;
t2978 = t1975 - t1978 - t2300;
t2980 = t2842 * t2461 + t2850 * t11 * t1863 + t2853 * t2526 + t2867 * t2468 + t2875 * t311 * t1885 + t2878 * t2564 + t2892 * t2475 + t2900 * t584 * t1907 + t2903 * t2602 + t2917 * t2482 + t2925 * t857 * t1929 + t2928 * t2640 + t2942 * t2489 + t2950 * t1130 * t1951 + t2953 * t2678 + t2967 * t2496 + t2975 * t1403 * t1973 + t2978 * t2716;
t2982 = 0.2e1 * t2831 + t2833 + t2834 + t2835 - t2836 + t2837 + t2841;
t2987 = t220 * (-t2367 * t1 + t2364 + t2845) - t2736 + t2464 - t2739;
t2993 = t8 * (t2844 + t2368) + t2523 + t2371 + qJ(3,1) * (-t1868 - t2030) + t2527 + t2529 - t2530 - t2534 + t2535;
t2996 = 0.2e1 * t2856 + t2858 + t2859 + t2860 - t2861 + t2862 + t2866;
t3001 = t499 * (-t2384 * t301 + t2381 + t2870) - t2752 + t2471 - t2755;
t3007 = t308 * (t2869 + t2385) + t2561 + t2388 + qJ(3,2) * (-t1890 - t2084) + t2565 + t2567 - t2568 - t2572 + t2573;
t3010 = 0.2e1 * t2881 + t2883 + t2884 + t2885 - t2886 + t2887 + t2891;
t3015 = t772 * (-t2401 * t574 + t2398 + t2895) - t2768 + t2478 - t2771;
t3021 = t581 * (t2894 + t2402) + t2599 + t2405 + qJ(3,3) * (-t1912 - t2138) + t2603 + t2605 - t2606 - t2610 + t2611;
t3024 = 0.2e1 * t2906 + t2908 + t2909 + t2910 - t2911 + t2912 + t2916;
t3029 = t1045 * (-t2418 * t847 + t2415 + t2920) - t2784 + t2485 - t2787;
t3035 = t854 * (t2919 + t2419) + t2637 + t2422 + qJ(3,4) * (-t1934 - t2192) + t2641 + t2643 - t2644 - t2648 + t2649;
t3038 = 0.2e1 * t2931 + t2933 + t2934 + t2935 - t2936 + t2937 + t2941;
t3043 = t1318 * (-t2435 * t1120 + t2432 + t2945) - t2800 + t2492 - t2803;
t3049 = t1127 * (t2944 + t2436) + t2675 + t2439 + qJ(3,5) * (-t1956 - t2246) + t2679 + t2681 - t2682 - t2686 + t2687;
t3052 = 0.2e1 * t2956 + t2958 + t2959 + t2960 - t2961 + t2962 + t2966;
t3057 = t1591 * (-t2452 * t1393 + t2449 + t2970) - t2816 + t2499 - t2819;
t3063 = t1400 * (t2969 + t2453) + t2713 + t2456 + qJ(3,6) * (-t1978 - t2300) + t2717 + t2719 - t2720 - t2724 + t2725;
t3065 = t2982 * t7 - t2987 * t1863 + t2993 * t2526 + t2996 * t307 - t3001 * t1885 + t3007 * t2564 + t3010 * t580 - t3015 * t1907 + t3021 * t2602 + t3024 * t853 - t3029 * t1929 + t3035 * t2640 + t3038 * t1126 - t3043 * t1951 + t3049 * t2678 + t3052 * t1399 - t3057 * t1973 + t3063 * t2716;
t3066 = -t223 ^ 2;
t3069 = -xDP(4) * t104 + xDP(5) * t14;
t3070 = -t3069 ^ 2;
t3071 = t3066 + t3070;
t3073 = xDP(4) * t141;
t3074 = xDDP(4) * t17;
t3077 = -xDP(4) * t102 - xDP(5) * t12;
t3078 = -t3069 * t3077;
t3079 = t3073 + t3074 + xDDP(6) + t3078;
t3084 = xDP(4) * (t12 * t273 - t14 * t128);
t3085 = xDP(5) * t163;
t3086 = xDDP(4) * t104;
t3087 = xDDP(5) * t14;
t3088 = -t223 * t3077;
t3089 = -t3084 + t3085 + t3086 - t3087 + t3088;
t3092 = -t3073 - t3074 - xDDP(6) + t3078;
t3094 = -t3077 ^ 2;
t3095 = t3066 + t3094;
t3100 = xDP(4) * (-t12 * t128 - t14 * t273);
t3102 = xDP(5) * t14 * xDP(6);
t3103 = xDDP(4) * t102;
t3104 = xDDP(5) * t12;
t3105 = t223 * t3069;
t3106 = t3100 + t3102 + t3103 + t3104 + t3105;
t3109 = t3084 - t3085 - t3086 + t3087 + t3088;
t3111 = -t3100 - t3102 - t3103 - t3104 + t3105;
t3113 = t3070 + t3094;
t3116 = xDDP(1) - g(1);
t3118 = t17 * t24;
t3121 = t12 * t22 + t14 * t3118;
t3122 = xDDP(2) - g(2);
t3124 = t17 * t22;
t3127 = t12 * t24 - t14 * t3124;
t3128 = xDDP(3) - g(3);
t3130 = t3116 * t102 + t3122 * t3121 + t3128 * t3127;
t3135 = -t12 * t3118 + t14 * t22;
t3139 = t12 * t3124 + t14 * t24;
t3141 = -t3116 * t104 + t3122 * t3135 + t3128 * t3139;
t3144 = t19 * t24;
t3146 = t19 * t22;
t3148 = t3116 * t17 - t3122 * t3144 + t3128 * t3146;
t3202 = t1769 * t96 + t1776 * t9 * t1771 * t7 * t1774 + t1783 * t380 + t1790 * t309 * t1785 * t307 * t1788 + t1797 * t653 + t1804 * t582 * t1799 * t580 * t1802 + t1811 * t926 + t1818 * t855 * t1813 * t853 * t1816 + t1825 * t1199 + t1832 * t1128 * t1827 * t1126 * t1830 + t1839 * t1472 + t1846 * t1401 * t1841 * t1399 * t1844;
t3221 = t1935 * t1045 * t2146 + t1957 * t1318 * t2200 + t1979 * t1591 * t2254 + t1869 * t220 * t1984 + t1891 * t499 * t2038 + t1913 * t772 * t2092 + t1949 * t1199 + t1971 * t1472 + t1861 * t96 + t1883 * t380 + t1905 * t653 + t1927 * t926;
t3234 = t2249 * t1199 + t2303 * t1472 + t1856 * t1984 + t1878 * t2038 + t1900 * t2092 + t1922 * t2146 + t1944 * t2200 + t1966 * t2254 + t2033 * t96 + t2087 * t380 + t2141 * t653 + t2195 * t926;
t3253 = t1117 * t1813 * t2146 + t1390 * t1827 * t2200 + t1663 * t1841 * t2254 + t298 * t1771 * t1984 + t571 * t1785 * t2038 + t844 * t1799 * t2092 + t2335 * t1199 + t2341 * t1472 + t2311 * t96 + t2317 * t380 + t2323 * t653 + t2329 * t926;
t3279 = t2423 * t1045 * t2146 + t2440 * t1318 * t2200 + t2457 * t1591 * t2254 + t2372 * t220 * t1984 + t2389 * t499 * t2038 + t2406 * t772 * t2092 + t2427 * t1199 + t2444 * t1472 + t2359 * t96 + t2376 * t380 + t2393 * t653 + t2410 * t926;
t3280 = t11 * t95;
t3284 = t311 * t379;
t3288 = t584 * t652;
t3292 = t857 * t925;
t3296 = t1130 * t1198;
t3300 = t1403 * t1471;
t3304 = t2486 * t1045 * t2146 + t2493 * t1318 * t2200 + t2500 * t1591 * t2254 + t2465 * t220 * t1984 + t2472 * t499 * t2038 + t2479 * t772 * t2092 - t1675 * t3280 - t1686 * t3284 - t1697 * t3288 - t1708 * t3292 - t1719 * t3296 - t1730 * t3300;
t3329 = t2520 * t96 + t2536 * t220 * t1984 + t2540 * t2528 + t2558 * t380 + t2574 * t499 * t2038 + t2578 * t2566 + t2596 * t653 + t2612 * t772 * t2092 + t2616 * t2604 + t2634 * t926 + t2650 * t1045 * t2146 + t2654 * t2642 + t2672 * t1199 + t2688 * t1318 * t2200 + t2692 * t2680 + t2710 * t1472 + t2726 * t1591 * t2254 + t2730 * t2718;
t3360 = t2744 * t96 - t298 * t1771 * t7 - t298 * t7 * t253 + t2760 * t380 - t571 * t1785 * t307 - t571 * t307 * t529 + t2776 * t653 - t844 * t1799 * t580 - t844 * t580 * t802 + t2792 * t926 - t1117 * t1813 * t853 - t1117 * t853 * t1075 + t2808 * t1199 - t1390 * t1827 * t1126 - t1390 * t1126 * t1348 + t2824 * t1472 - t1663 * t1841 * t1399 - t1663 * t1399 * t1621;
t3385 = t2842 * t3280 + t2850 * t220 * t1984 + t2853 * t2528 + t2867 * t3284 + t2875 * t499 * t2038 + t2878 * t2566 + t2892 * t3288 + t2900 * t772 * t2092 + t2903 * t2604 + t2917 * t3292 + t2925 * t1045 * t2146 + t2928 * t2642 + t2942 * t3296 + t2950 * t1318 * t2200 + t2953 * t2680 + t2967 * t3300 + t2975 * t1591 * t2254 + t2978 * t2718;
t3387 = -t220 * t7;
t3391 = -t499 * t307;
t3395 = -t772 * t580;
t3399 = -t1045 * t853;
t3403 = -t1318 * t1126;
t3407 = -t1591 * t1399;
t3410 = t2982 * t95 - t2987 * t3387 + t2993 * t2528 + t2996 * t379 - t3001 * t3391 + t3007 * t2566 + t3010 * t652 - t3015 * t3395 + t3021 * t2604 + t3024 * t925 - t3029 * t3399 + t3035 * t2642 + t3038 * t1198 - t3043 * t3403 + t3049 * t2680 + t3052 * t1471 - t3057 * t3407 + t3063 * t2718;
t3460 = t298 * t220;
t3462 = t571 * t499;
t3464 = t844 * t772;
t3466 = t1117 * t1045;
t3468 = t1390 * t1318;
t3470 = t1663 * t1591;
t3506 = -t2654 * t1045 - t2692 * t1318 - t2730 * t1591 + t2536 * t1987 + t2574 * t2041 + t2612 * t2095 + t2650 * t2149 - t2540 * t220 + t2688 * t2203 + t2726 * t2257 - t2578 * t499 - t2616 * t772;
t3519 = -t2928 * t1045 - t2953 * t1318 - t2978 * t1591 + t2850 * t1987 + t2875 * t2041 + t2900 * t2095 + t2925 * t2149 - t2853 * t220 + t2950 * t2203 + t2975 * t2257 - t2878 * t499 - t2903 * t772;
t3532 = -t3035 * t1045 - t3043 * t1127 - t3049 * t1318 - t3057 * t1400 - t3063 * t1591 - t2993 * t220 - t2987 * t8 - t3001 * t308 - t3007 * t499 - t3015 * t581 - t3021 * t772 - t3029 * t854;
t3549 = t17 * t14;
t3551 = -koppelP(1,1) * t3549 + t20 + t267;
t3553 = t22 * t3551 + t28;
t3554 = t3553 * t95;
t3555 = t298 * t2533;
t3558 = -koppelP(2,1) * t3549 + t316 + t542;
t3560 = t22 * t3558 + t322;
t3561 = t3560 * t379;
t3562 = t571 * t2571;
t3565 = -koppelP(3,1) * t3549 + t589 + t815;
t3567 = t22 * t3565 + t595;
t3568 = t3567 * t652;
t3569 = t844 * t2609;
t3572 = -koppelP(4,1) * t3549 + t1088 + t862;
t3574 = t22 * t3572 + t868;
t3575 = t3574 * t925;
t3576 = t1117 * t2647;
t3579 = -koppelP(5,1) * t3549 + t1135 + t1361;
t3581 = t22 * t3579 + t1141;
t3582 = t3581 * t1198;
t3583 = t1390 * t2685;
t3586 = -t3549 * koppelP(6,1) + t1408 + t1634;
t3588 = t22 * t3586 + t1414;
t3589 = t1471 * t3588;
t3590 = t1663 * t2723;
t3593 = t1675 * t2533;
t3595 = t1686 * t2571;
t3597 = t1697 * t2609;
t3599 = t1708 * t2647;
t3601 = t1719 * t2685;
t3603 = t1730 * t2723;
t3606 = t1736 * t2533;
t3608 = t1741 * t2571;
t3610 = t1746 * t2609;
t3612 = t1751 * t2647;
t3614 = t1756 * t2685;
t3616 = t1761 * t2723;
t3619 = t1768 * t2533;
t3621 = -t7 * t3553;
t3624 = -t24 * t3551 + t32;
t3626 = -t220 * t3621 + t3624 * t8;
t3628 = t220 * t2022;
t3630 = t1782 * t2571;
t3632 = -t307 * t3560;
t3635 = -t24 * t3558 + t326;
t3637 = t308 * t3635 - t3632 * t499;
t3639 = t499 * t2076;
t3641 = t1796 * t2609;
t3643 = -t580 * t3567;
t3646 = -t24 * t3565 + t599;
t3648 = -t3643 * t772 + t3646 * t581;
t3650 = t772 * t2130;
t3652 = t1810 * t2647;
t3654 = -t853 * t3574;
t3657 = -t24 * t3572 + t872;
t3659 = -t1045 * t3654 + t3657 * t854;
t3661 = t1045 * t2184;
t3663 = t1824 * t2685;
t3665 = -t3581 * t1126;
t3668 = -t24 * t3579 + t1145;
t3670 = t1127 * t3668 - t1318 * t3665;
t3672 = t1318 * t2238;
t3674 = t1838 * t2723;
t3676 = -t3588 * t1399;
t3679 = -t24 * t3586 + t1418;
t3681 = t1400 * t3679 - t1591 * t3676;
t3683 = t1591 * t2292;
t3685 = -t1774 * t3626 * t3628 - t1788 * t3637 * t3639 - t1802 * t3648 * t3650 - t1816 * t3659 * t3661 - t1830 * t3670 * t3672 - t1844 * t3681 * t3683 - t3554 * t3619 - t3561 * t3630 - t3568 * t3641 - t3575 * t3652 - t3582 * t3663 - t3589 * t3674;
t3686 = t1860 * t2533;
t3688 = t11 * t3626;
t3690 = t1882 * t2571;
t3692 = t311 * t3637;
t3694 = t1904 * t2609;
t3696 = t584 * t3648;
t3698 = t1926 * t2647;
t3700 = t857 * t3659;
t3702 = t1948 * t2685;
t3704 = t1130 * t3670;
t3706 = t1970 * t2723;
t3708 = t1403 * t3681;
t3710 = t1869 * t3688 + t1891 * t3692 + t1913 * t3696 + t1935 * t3700 + t1957 * t3704 + t1979 * t3708 - t3554 * t3686 - t3561 * t3690 - t3568 * t3694 - t3575 * t3698 - t3582 * t3702 - t3589 * t3706;
t3711 = t2032 * t2533;
t3714 = t2086 * t2571;
t3717 = t2140 * t2609;
t3720 = t2194 * t2647;
t3723 = t2248 * t2685;
t3726 = t2302 * t2723;
t3729 = t1855 * t3688 + t1877 * t3692 + t1899 * t3696 + t1921 * t3700 + t1943 * t3704 + t1965 * t3708 - t3554 * t3711 - t3561 * t3714 - t3568 * t3717 - t3575 * t3720 - t3582 * t3723 - t3589 * t3726;
t3730 = t2310 * t2533;
t3733 = t2316 * t2571;
t3736 = t2322 * t2609;
t3739 = t2328 * t2647;
t3742 = t2334 * t2685;
t3745 = t2340 * t2723;
t3748 = t3460 * t3688 + t3462 * t3692 + t3464 * t3696 + t3466 * t3700 + t3468 * t3704 + t3470 * t3708 - t3554 * t3730 - t3561 * t3733 - t3568 * t3736 - t3575 * t3739 - t3582 * t3742 - t3589 * t3745;
t3774 = -t1128 * t2427 * t3582 - t1401 * t2444 * t3589 - t2359 * t3554 * t9 - t2376 * t309 * t3561 - t2393 * t3568 * t582 - t2410 * t3575 * t855 + t2372 * t3688 + t2389 * t3692 + t2406 * t3696 + t2423 * t3700 + t2440 * t3704 + t2457 * t3708;
t3787 = t1676 * t3554 + t1687 * t3561 + t1698 * t3568 + t1709 * t3575 + t1720 * t3582 + t1731 * t3589 + t2465 * t3688 + t2472 * t3692 + t2479 * t3696 + t2486 * t3700 + t2493 * t3704 + t2500 * t3708;
t3788 = t2519 * t2533;
t3793 = -t220 * t3624 - t3621 * t8;
t3795 = t2557 * t2571;
t3800 = -t308 * t3632 - t3635 * t499;
t3802 = t2595 * t2609;
t3807 = -t3643 * t581 - t3646 * t772;
t3809 = t2633 * t2647;
t3814 = -t1045 * t3657 - t3654 * t854;
t3816 = t2671 * t2685;
t3821 = -t1127 * t3665 - t1318 * t3668;
t3823 = t2709 * t2723;
t3828 = -t1400 * t3676 - t1591 * t3679;
t3830 = -t3788 * t3554 + t2536 * t3688 + t2540 * t3793 - t3795 * t3561 + t2574 * t3692 + t2578 * t3800 - t3802 * t3568 + t2612 * t3696 + t2616 * t3807 - t3809 * t3575 + t2650 * t3700 + t2654 * t3814 - t3816 * t3582 + t2688 * t3704 + t2692 * t3821 - t3823 * t3589 + t2726 * t3708 + t2730 * t3828;
t3831 = t2743 * t2533;
t3837 = t2759 * t2571;
t3843 = t2775 * t2609;
t3849 = t2791 * t2647;
t3855 = t2807 * t2685;
t3861 = t2823 * t2723;
t3867 = -t3831 * t3554 + t298 * t220 * t3626 + t298 * t8 * t3793 - t3837 * t3561 + t571 * t499 * t3637 + t571 * t308 * t3800 - t3843 * t3568 + t844 * t772 * t3648 + t844 * t581 * t3807 - t3849 * t3575 + t1117 * t1045 * t3659 + t1117 * t854 * t3814 - t3855 * t3582 + t1390 * t1318 * t3670 + t1390 * t1127 * t3821 - t3861 * t3589 + t1663 * t1591 * t3681 + t1663 * t1400 * t3828;
t3868 = t2842 * t11;
t3872 = t2867 * t311;
t3876 = t2892 * t584;
t3880 = t2917 * t857;
t3884 = t2942 * t1130;
t3888 = t2967 * t1403;
t3892 = -t3868 * t3554 + t2850 * t3688 + t2853 * t3793 - t3872 * t3561 + t2875 * t3692 + t2878 * t3800 - t3876 * t3568 + t2900 * t3696 + t2903 * t3807 - t3880 * t3575 + t2925 * t3700 + t2928 * t3814 - t3884 * t3582 + t2950 * t3704 + t2953 * t3821 - t3888 * t3589 + t2975 * t3708 + t2978 * t3828;
t3911 = -t2982 * t3554 - t2987 * t3626 + t2993 * t3793 - t2996 * t3561 - t3001 * t3637 + t3007 * t3800 - t3010 * t3568 - t3015 * t3648 + t3021 * t3807 - t3024 * t3575 - t3029 * t3659 + t3035 * t3814 - t3038 * t3582 - t3043 * t3670 + t3049 * t3821 - t3052 * t3589 - t3057 * t3681 + t3063 * t3828;
t3912 = t3100 + t3102 + t3103 + t3104;
t3918 = t223 * t3077;
t3919 = t3084 - t3085 - t3086 + t3087 + t3918;
t3922 = t3077 ^ 2;
t3923 = t3070 + t3922;
t3927 = t223 ^ 2;
t3928 = t3927 + t3094;
t3930 = -t223 * t3069;
t3931 = t3100 + t3102 + t3103 + t3104 + t3930;
t3935 = t3084 - t3085 - t3086 + t3087;
t3940 = t3069 ^ 2;
t3941 = t3066 + t3940;
t3943 = t3069 * t3077;
t3944 = t3073 + t3074 + xDDP(6) + t3943;
t3950 = t3073 + t3074 + xDDP(6);
t3986 = -t106 * t8 + t220 * t3554;
t3992 = -t308 * t388 + t3561 * t499;
t3998 = t3568 * t772 - t581 * t661;
t4004 = t1045 * t3575 - t854 * t934;
t4010 = -t1127 * t1207 + t1318 * t3582;
t4016 = -t1400 * t1480 + t1591 * t3589;
t4019 = -t1774 * t3628 * t3986 - t1788 * t3639 * t3992 - t1802 * t3650 * t3998 - t1816 * t3661 * t4004 - t1830 * t3672 * t4010 - t1844 * t3683 * t4016 - t3619 * t3621 - t3630 * t3632 - t3641 * t3643 - t3652 * t3654 - t3663 * t3665 - t3674 * t3676;
t4021 = t11 * t3986;
t4024 = t311 * t3992;
t4027 = t584 * t3998;
t4030 = t857 * t4004;
t4033 = t1130 * t4010;
t4036 = t1403 * t4016;
t4038 = t1869 * t4021 + t1891 * t4024 + t1913 * t4027 + t1935 * t4030 + t1957 * t4033 + t1979 * t4036 - t3621 * t3686 - t3632 * t3690 - t3643 * t3694 - t3654 * t3698 - t3665 * t3702 - t3676 * t3706;
t4051 = t1855 * t4021 + t1877 * t4024 + t1899 * t4027 + t1921 * t4030 + t1943 * t4033 + t1965 * t4036 - t3621 * t3711 - t3632 * t3714 - t3643 * t3717 - t3654 * t3720 - t3665 * t3723 - t3676 * t3726;
t4064 = t3460 * t4021 + t3462 * t4024 + t3464 * t4027 + t3466 * t4030 + t3468 * t4033 + t3470 * t4036 - t3621 * t3730 - t3632 * t3733 - t3643 * t3736 - t3654 * t3739 - t3665 * t3742 - t3676 * t3745;
t4090 = -t1128 * t2427 * t3665 - t1401 * t2444 * t3676 - t2359 * t3621 * t9 - t2376 * t309 * t3632 - t2393 * t3643 * t582 - t2410 * t3654 * t855 + t2372 * t4021 + t2389 * t4024 + t2406 * t4027 + t2423 * t4030 + t2440 * t4033 + t2457 * t4036;
t4103 = t1676 * t3621 + t1687 * t3632 + t1698 * t3643 + t1709 * t3654 + t1720 * t3665 + t1731 * t3676 + t2465 * t4021 + t2472 * t4024 + t2479 * t4027 + t2486 * t4030 + t2493 * t4033 + t2500 * t4036;
t4109 = t3553 * t8 * t95 + t106 * t220;
t4116 = t308 * t3560 * t379 + t388 * t499;
t4123 = t3567 * t581 * t652 + t661 * t772;
t4130 = t3574 * t854 * t925 + t1045 * t934;
t4137 = t1127 * t1198 * t3581 + t1207 * t1318;
t4144 = t1400 * t1471 * t3588 + t1480 * t1591;
t4146 = -t3788 * t3621 + t2536 * t4021 + t2540 * t4109 - t3795 * t3632 + t2574 * t4024 + t2578 * t4116 - t3802 * t3643 + t2612 * t4027 + t2616 * t4123 - t3809 * t3654 + t2650 * t4030 + t2654 * t4130 - t3816 * t3665 + t2688 * t4033 + t2692 * t4137 - t3823 * t3676 + t2726 * t4036 + t2730 * t4144;
t4177 = -t3831 * t3621 + t298 * t220 * t3986 + t298 * t8 * t4109 - t3837 * t3632 + t571 * t499 * t3992 + t571 * t308 * t4116 - t3843 * t3643 + t844 * t772 * t3998 + t844 * t581 * t4123 - t3849 * t3654 + t1117 * t1045 * t4004 + t1117 * t854 * t4130 - t3855 * t3665 + t1390 * t1318 * t4010 + t1390 * t1127 * t4137 - t3861 * t3676 + t1663 * t1591 * t4016 + t1663 * t1400 * t4144;
t4196 = -t3868 * t3621 + t2850 * t4021 + t2853 * t4109 - t3872 * t3632 + t2875 * t4024 + t2878 * t4116 - t3876 * t3643 + t2900 * t4027 + t2903 * t4123 - t3880 * t3654 + t2925 * t4030 + t2928 * t4130 - t3884 * t3665 + t2950 * t4033 + t2953 * t4137 - t3888 * t3676 + t2975 * t4036 + t2978 * t4144;
t4215 = -t2982 * t3621 - t2987 * t3986 + t2993 * t4109 - t2996 * t3632 - t3001 * t3992 + t3007 * t4116 - t3010 * t3643 - t3015 * t3998 + t3021 * t4123 - t3024 * t3654 - t3029 * t4004 + t3035 * t4130 - t3038 * t3665 - t3043 * t4010 + t3049 * t4137 - t3052 * t3676 - t3057 * t4016 + t3063 * t4144;
t4254 = t19 * koppelP(1,3) * t24;
t4257 = t22 * koppelP(1,2) + t3118 * koppelP(1,1);
t4261 = (-t3118 * koppelP(1,2) + t259) * t12;
t4262 = t14 * t4257 - t4254 + t4261;
t4267 = t106 * t2533 * t95 - t2533 * t4262 * t7;
t4270 = t19 * koppelP(2,3) * t24;
t4273 = t22 * koppelP(2,2) + t3118 * koppelP(2,1);
t4278 = (-t17 * t24 * koppelP(2,2) + t535) * t12;
t4279 = t14 * t4273 - t4270 + t4278;
t4284 = -t2571 * t307 * t4279 + t2571 * t379 * t388;
t4287 = t19 * koppelP(3,3) * t24;
t4290 = t22 * koppelP(3,2) + t3118 * koppelP(3,1);
t4295 = (-t17 * t24 * koppelP(3,2) + t808) * t12;
t4296 = t14 * t4290 - t4287 + t4295;
t4301 = -t2609 * t4296 * t580 + t2609 * t652 * t661;
t4304 = t19 * koppelP(4,3) * t24;
t4307 = t22 * koppelP(4,2) + t3118 * koppelP(4,1);
t4312 = (-t17 * t24 * koppelP(4,2) + t1081) * t12;
t4313 = t14 * t4307 - t4304 + t4312;
t4318 = -t2647 * t4313 * t853 + t2647 * t925 * t934;
t4321 = t19 * koppelP(5,3) * t24;
t4324 = t22 * koppelP(5,2) + t3118 * koppelP(5,1);
t4329 = (-t17 * t24 * koppelP(5,2) + t1354) * t12;
t4330 = t14 * t4324 - t4321 + t4329;
t4335 = -t1126 * t2685 * t4330 + t1198 * t1207 * t2685;
t4338 = t19 * koppelP(6,3) * t24;
t4341 = t22 * koppelP(6,2) + t3118 * koppelP(6,1);
t4346 = (-t17 * t24 * koppelP(6,2) + t1627) * t12;
t4347 = t14 * t4341 - t4338 + t4346;
t4352 = -t1399 * t2723 * t4347 + t1471 * t1480 * t2723;
t4374 = t106 * t11 * t3387 - t220 * t3280 * t4262;
t4384 = t311 * t3391 * t388 - t3284 * t4279 * t499;
t4394 = -t3288 * t4296 * t772 + t3395 * t584 * t661;
t4404 = -t1045 * t3292 * t4313 + t3399 * t857 * t934;
t4414 = t1130 * t1207 * t3403 - t1318 * t3296 * t4330;
t4424 = t1403 * t1480 * t3407 - t1591 * t3300 * t4347;
t4429 = t1768 * t4267 - t220 * t257 * t1776 * t9 * t4374 + t1782 * t4284 - t499 * t533 * t1790 * t309 * t4384 + t1796 * t4301 - t772 * t806 * t1804 * t582 * t4394 + t1810 * t4318 - t1045 * t1079 * t1818 * t855 * t4404 + t1824 * t4335 - t1318 * t1352 * t1832 * t1128 * t4414 + t1838 * t4352 - t1591 * t1625 * t1846 * t1401 * t4424;
t4442 = t1860 * t4267 + t1869 * t4374 + t1882 * t4284 + t1891 * t4384 + t1904 * t4301 + t1913 * t4394 + t1926 * t4318 + t1935 * t4404 + t1948 * t4335 + t1957 * t4414 + t1970 * t4352 + t1979 * t4424;
t4461 = t1117 * t4404 * t854 + t1127 * t1390 * t4414 + t1400 * t1663 * t4424 + t298 * t4374 * t8 + t308 * t4384 * t571 + t4394 * t581 * t844 + t2032 * t4267 + t2086 * t4284 + t2140 * t4301 + t2194 * t4318 + t2248 * t4335 + t2302 * t4352;
t4480 = t1045 * t1117 * t4404 + t1318 * t1390 * t4414 + t1591 * t1663 * t4424 + t220 * t298 * t4374 + t4384 * t499 * t571 + t4394 * t772 * t844 + t2310 * t4267 + t2316 * t4284 + t2322 * t4301 + t2328 * t4318 + t2334 * t4335 + t2340 * t4352;
t4506 = t1045 * t1708 * t4318 + t1318 * t1719 * t4335 + t1591 * t1730 * t4352 + t1675 * t220 * t4267 + t1686 * t4284 * t499 + t1697 * t4301 * t772 + t2372 * t4374 + t2389 * t4384 + t2406 * t4394 + t2423 * t4404 + t2440 * t4414 + t2457 * t4424;
t4507 = t8 * t4267;
t4510 = t308 * t4284;
t4513 = t581 * t4301;
t4516 = t854 * t4318;
t4519 = t1127 * t4335;
t4522 = t1400 * t4352;
t4525 = -t1675 * t4507 - t1686 * t4510 - t1697 * t4513 - t1708 * t4516 - t1719 * t4519 - t1730 * t4522 + t2465 * t4374 + t2472 * t4384 + t2479 * t4394 + t2486 * t4404 + t2493 * t4414 + t2500 * t4424;
t4532 = -t16 * t19 + t69;
t4540 = t5 * (t2 * (-t14 * t4257 + t4254 - t4261) + t4532 * t4) + t1 * (t2 * t4532 + t4 * t4262);
t4541 = t8 * t4540;
t4549 = -t314 * t19 + t353;
t4557 = t305 * (t302 * (-t14 * t4273 + t4270 - t4278) + t4549 * t304) + t301 * (t302 * t4549 + t304 * t4279);
t4558 = t308 * t4557;
t4566 = -t587 * t19 + t626;
t4574 = t578 * (t575 * (-t14 * t4290 + t4287 - t4295) + t4566 * t577) + t574 * (t4296 * t577 + t4566 * t575);
t4575 = t581 * t4574;
t4583 = -t860 * t19 + t899;
t4591 = t851 * (t848 * (-t14 * t4307 + t4304 - t4312) + t4583 * t850) + t847 * (t4313 * t850 + t4583 * t848);
t4592 = t854 * t4591;
t4600 = -t1133 * t19 + t1172;
t4608 = t1124 * (t1121 * (-t14 * t4324 + t4321 - t4329) + t4600 * t1123) + t1120 * (t1121 * t4600 + t1123 * t4330);
t4609 = t1127 * t4608;
t4617 = -t1406 * t19 + t1445;
t4625 = t1397 * (t1394 * (-t14 * t4341 + t4338 - t4346) + t4617 * t1396) + t1393 * (t1394 * t4617 + t1396 * t4347);
t4626 = t1400 * t4625;
t4628 = t2519 * t4267 + t2536 * t4374 + t2540 * t4541 + t2557 * t4284 + t2574 * t4384 + t2578 * t4558 + t2595 * t4301 + t2612 * t4394 + t2616 * t4575 + t2633 * t4318 + t2650 * t4404 + t2654 * t4592 + t2671 * t4335 + t2688 * t4414 + t2692 * t4609 + t2709 * t4352 + t2726 * t4424 + t2730 * t4626;
t4655 = qJ(3,6) * t4424;
t4659 = t2743 * t4267 + t3460 * qJ(3,1) * t4374 + t298 * t253 * t4540 + t2759 * t4284 + t3462 * qJ(3,2) * t4384 + t571 * t529 * t4557 + t2775 * t4301 + t3464 * qJ(3,3) * t4394 + t844 * t802 * t4574 + t2791 * t4318 + t3466 * qJ(3,4) * t4404 + t1117 * t1075 * t4591 + t2807 * t4335 + t3468 * qJ(3,5) * t4414 + t1390 * t1348 * t4608 + t2823 * t4352 + t3470 * t4655 + t1663 * t1621 * t4625;
t4678 = t2842 * t4507 + t2850 * t4374 + t2853 * t4541 + t2867 * t4510 + t2875 * t4384 + t2878 * t4558 + t2892 * t4513 + t2900 * t4394 + t2903 * t4575 + t2917 * t4516 + t2925 * t4404 + t2928 * t4592 + t2942 * t4519 + t2950 * t4414 + t2953 * t4609 + t2967 * t4522 + t2975 * t4424 + t2978 * t4626;
t4708 = t2982 * qJ(3,1) * t4507 - qJ(3,1) * t2987 * t4374 + t2993 * t4541 + t2996 * qJ(3,2) * t4510 - qJ(3,2) * t3001 * t4384 + t3007 * t4558 + t3010 * qJ(3,3) * t4513 - qJ(3,3) * t3015 * t4394 + t3021 * t4575 + t3024 * qJ(3,4) * t4516 - qJ(3,4) * t3029 * t4404 + t3035 * t4592 + t3038 * qJ(3,5) * t4519 - qJ(3,5) * t3043 * t4414 + t3049 * t4609 + t3052 * qJ(3,6) * t4522 - t3057 * t4655 + t3063 * t4626;
unknown(1,1) = t10 * t299 + t1118 * t856 + t1129 * t1391 + t1402 * t1664 + t310 * t572 + t583 * t845;
unknown(1,2) = t10 * t1676 + t1129 * t1720 + t1402 * t1731 + t1687 * t310 + t1698 * t583 + t1709 * t856;
unknown(1,3) = t10 * t1737 + t1129 * t1757 + t1402 * t1762 + t1742 * t310 + t1747 * t583 + t1752 * t856;
unknown(1,4) = t1849;
unknown(1,5) = t1982;
unknown(1,6) = t2307;
unknown(1,7) = t2344;
unknown(1,8) = t11 * t1863 * t2027 + t1130 * t1951 * t2243 + t1403 * t1973 * t2297 + t1885 * t2081 * t311 + t1907 * t2135 * t584 + t1929 * t2189 * t857;
unknown(1,9) = t2460;
unknown(1,10) = t2503;
unknown(1,11) = t2732;
unknown(1,12) = t2829;
unknown(1,13) = t2980;
unknown(1,14) = t3065;
unknown(1,15) = 0.0e0;
unknown(1,16) = 0.0e0;
unknown(1,17) = 0.0e0;
unknown(1,18) = 0.0e0;
unknown(1,19) = 0.0e0;
unknown(1,20) = 0.0e0;
unknown(1,21) = t102 * t3071 - t104 * t3079 + t17 * t3089;
unknown(1,22) = t102 * t3092 - t104 * t3095 + t17 * t3106;
unknown(1,23) = t102 * t3109 - t104 * t3111 + t17 * t3113;
unknown(1,24) = t102 * t3130 - t104 * t3141 + t17 * t3148;
unknown(2,1) = t1118 * t926 + t1199 * t1391 + t1472 * t1664 + t299 * t96 + t380 * t572 + t653 * t845;
unknown(2,2) = t1199 * t1720 + t1472 * t1731 + t1676 * t96 + t1687 * t380 + t1698 * t653 + t1709 * t926;
unknown(2,3) = t1199 * t1757 + t1472 * t1762 + t1737 * t96 + t1742 * t380 + t1747 * t653 + t1752 * t926;
unknown(2,4) = t3202;
unknown(2,5) = t3221;
unknown(2,6) = t3234;
unknown(2,7) = t3253;
unknown(2,8) = t1984 * t2308 + t2038 * t2314 + t2092 * t2320 + t2146 * t2326 + t2200 * t2332 + t2254 * t2338;
unknown(2,9) = t3279;
unknown(2,10) = t3304;
unknown(2,11) = t3329;
unknown(2,12) = t3360;
unknown(2,13) = t3385;
unknown(2,14) = t3410;
unknown(2,15) = 0.0e0;
unknown(2,16) = 0.0e0;
unknown(2,17) = 0.0e0;
unknown(2,18) = 0.0e0;
unknown(2,19) = 0.0e0;
unknown(2,20) = 0.0e0;
unknown(2,21) = t3071 * t3121 + t3079 * t3135 - t3089 * t3144;
unknown(2,22) = t3092 * t3121 + t3095 * t3135 - t3106 * t3144;
unknown(2,23) = t3109 * t3121 + t3111 * t3135 - t3113 * t3144;
unknown(2,24) = t3121 * t3130 + t3135 * t3141 - t3144 * t3148;
unknown(3,1) = 0.0e0;
unknown(3,2) = 0.0e0;
unknown(3,3) = 0.0e0;
unknown(3,4) = -t1045 * t1816 * t1818 - t1318 * t1830 * t1832 - t1591 * t1844 * t1846 - t1774 * t1776 * t220 - t1788 * t1790 * t499 - t1802 * t1804 * t772;
unknown(3,5) = t1869 * t1987 + t1891 * t2041 + t1913 * t2095 + t1935 * t2149 + t1957 * t2203 + t1979 * t2257;
unknown(3,6) = t1075 * t1117 * t857 + t11 * t253 * t298 + t1130 * t1348 * t1390 + t1403 * t1621 * t1663 + t311 * t529 * t571 + t584 * t802 * t844;
unknown(3,7) = t1987 * t3460 + t2041 * t3462 + t2095 * t3464 + t2149 * t3466 + t2203 * t3468 + t2257 * t3470;
unknown(3,8) = t1987 * t2027 + t2041 * t2081 + t2095 * t2135 + t2149 * t2189 + t2203 * t2243 + t2257 * t2297;
unknown(3,9) = t1987 * t2372 + t2041 * t2389 + t2095 * t2406 + t2149 * t2423 + t2203 * t2440 + t2257 * t2457;
unknown(3,10) = t1987 * t2465 + t2041 * t2472 + t2095 * t2479 + t2149 * t2486 + t2203 * t2493 + t2257 * t2500;
unknown(3,11) = t3506;
unknown(3,12) = 0.0e0;
unknown(3,13) = t3519;
unknown(3,14) = t3532;
unknown(3,15) = 0.0e0;
unknown(3,16) = 0.0e0;
unknown(3,17) = 0.0e0;
unknown(3,18) = 0.0e0;
unknown(3,19) = 0.0e0;
unknown(3,20) = 0.0e0;
unknown(3,21) = t3071 * t3127 + t3079 * t3139 + t3089 * t3146;
unknown(3,22) = t3092 * t3127 + t3095 * t3139 + t3106 * t3146;
unknown(3,23) = t3109 * t3127 + t3111 * t3139 + t3113 * t3146;
unknown(3,24) = t3127 * t3130 + t3139 * t3141 + t3146 * t3148;
unknown(4,1) = -t3554 * t3555 - t3561 * t3562 - t3568 * t3569 - t3575 * t3576 - t3582 * t3583 - t3589 * t3590;
unknown(4,2) = -t3554 * t3593 - t3561 * t3595 - t3568 * t3597 - t3575 * t3599 - t3582 * t3601 - t3589 * t3603;
unknown(4,3) = -t3554 * t3606 - t3561 * t3608 - t3568 * t3610 - t3575 * t3612 - t3582 * t3614 - t3589 * t3616;
unknown(4,4) = t3685;
unknown(4,5) = t3710;
unknown(4,6) = t3729;
unknown(4,7) = t3748;
unknown(4,8) = t2027 * t3688 + t2081 * t3692 + t2135 * t3696 + t2189 * t3700 + t2243 * t3704 + t2297 * t3708;
unknown(4,9) = t3774;
unknown(4,10) = t3787;
unknown(4,11) = t3830;
unknown(4,12) = t3867;
unknown(4,13) = t3892;
unknown(4,14) = t3911;
unknown(4,15) = t17 * t3069 * t3077 + t102 * t3912 - t104 * t3088;
unknown(4,16) = t102 * t3919 - t104 * t3106 + t17 * t3923;
unknown(4,17) = t102 * t3079 - t104 * t3928 + t17 * t3931;
unknown(4,18) = -t17 * t3069 * t3077 + t102 * t3930 - t104 * t3935;
unknown(4,19) = t102 * t3941 - t104 * t3944 + t17 * t3109;
unknown(4,20) = t102 * t3105 - t104 * t3918 + t17 * t3950;
unknown(4,21) = t104 * t3148 + t17 * t3141;
unknown(4,22) = t102 * t3148 - t17 * t3130;
unknown(4,23) = -t102 * t3141 - t104 * t3130;
unknown(4,24) = 0.0e0;
unknown(5,1) = -t3555 * t3621 - t3562 * t3632 - t3569 * t3643 - t3576 * t3654 - t3583 * t3665 - t3590 * t3676;
unknown(5,2) = -t3593 * t3621 - t3595 * t3632 - t3597 * t3643 - t3599 * t3654 - t3601 * t3665 - t3603 * t3676;
unknown(5,3) = -t3606 * t3621 - t3608 * t3632 - t3610 * t3643 - t3612 * t3654 - t3614 * t3665 - t3616 * t3676;
unknown(5,4) = t4019;
unknown(5,5) = t4038;
unknown(5,6) = t4051;
unknown(5,7) = t4064;
unknown(5,8) = t2027 * t4021 + t2081 * t4024 + t2135 * t4027 + t2189 * t4030 + t2243 * t4033 + t2297 * t4036;
unknown(5,9) = t4090;
unknown(5,10) = t4103;
unknown(5,11) = t4146;
unknown(5,12) = t4177;
unknown(5,13) = t4196;
unknown(5,14) = t4215;
unknown(5,15) = -t223 * t3077 * t3135 + t3121 * t3912 - t3144 * t3943;
unknown(5,16) = t3106 * t3135 + t3121 * t3919 - t3144 * t3923;
unknown(5,17) = t3079 * t3121 + t3135 * t3928 - t3144 * t3931;
unknown(5,18) = -t223 * t3069 * t3121 - t3078 * t3144 + t3135 * t3935;
unknown(5,19) = -t3109 * t3144 + t3121 * t3941 + t3135 * t3944;
unknown(5,20) = t223 * t3069 * t3121 + t223 * t3077 * t3135 - t3144 * t3950;
unknown(5,21) = -t3135 * t3148 - t3141 * t3144;
unknown(5,22) = t3121 * t3148 + t3130 * t3144;
unknown(5,23) = -t3121 * t3141 + t3130 * t3135;
unknown(5,24) = 0.0e0;
unknown(6,1) = t1117 * t4318 + t1390 * t4335 + t1663 * t4352 + t298 * t4267 + t4284 * t571 + t4301 * t844;
unknown(6,2) = t1675 * t4267 + t1686 * t4284 + t1697 * t4301 + t1708 * t4318 + t1719 * t4335 + t1730 * t4352;
unknown(6,3) = t1736 * t4267 + t1741 * t4284 + t1746 * t4301 + t1751 * t4318 + t1756 * t4335 + t1761 * t4352;
unknown(6,4) = t4429;
unknown(6,5) = t4442;
unknown(6,6) = t4461;
unknown(6,7) = t4480;
unknown(6,8) = t2027 * t4374 + t2081 * t4384 + t2135 * t4394 + t2189 * t4404 + t2243 * t4414 + t2297 * t4424;
unknown(6,9) = t4506;
unknown(6,10) = t4525;
unknown(6,11) = t4628;
unknown(6,12) = t4659;
unknown(6,13) = t4678;
unknown(6,14) = t4708;
unknown(6,15) = -t223 * t3077 * t3139 + t3127 * t3912 + t3146 * t3943;
unknown(6,16) = t3106 * t3139 + t3127 * t3919 + t3146 * t3923;
unknown(6,17) = t3079 * t3127 + t3139 * t3928 + t3146 * t3931;
unknown(6,18) = -t223 * t3069 * t3127 + t3078 * t3146 + t3139 * t3935;
unknown(6,19) = t3109 * t3146 + t3127 * t3941 + t3139 * t3944;
unknown(6,20) = t223 * t3069 * t3127 + t223 * t3077 * t3139 + t3146 * t3950;
unknown(6,21) = -t3139 * t3148 + t3141 * t3146;
unknown(6,22) = t3127 * t3148 - t3130 * t3146;
unknown(6,23) = -t3127 * t3141 + t3130 * t3139;
unknown(6,24) = 0.0e0;
tauX_reg  = unknown;
