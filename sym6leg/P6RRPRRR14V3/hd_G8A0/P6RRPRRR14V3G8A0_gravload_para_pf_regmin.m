% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6RRPRRR14V3G8A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x24]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:36
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6RRPRRR14V3G8A0_gravload_para_pf_regmin(xP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(1,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G8A0_gravload_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G8A0_gravload_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V3G8A0_gravload_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G8A0_gravload_para_pf_regmin: pkin has to be [1x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G8A0_gravload_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G8A0_gravload_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:34:47
% EndTime: 2020-03-12 23:34:49
% DurationCPUTime: 1.75s
% Computational Cost: add. (11097->1012), mult. (26283->1886), div. (936->12), fcn. (28167->66), ass. (0->867)
unknown=NaN(6,24);
t1 = 0.1e1 / qJ(3,1);
t2 = sin(qJ(1,1));
t3 = cos(legFrame(1,3));
t5 = cos(qJ(1,1));
t6 = sin(legFrame(1,3));
t8 = t3 * t2 + t6 * t5;
t9 = t8 * t1;
t10 = cos(legFrame(1,2));
t11 = sin(qJ(2,1));
t12 = 0.1e1 / t11;
t13 = t12 * t10;
t14 = cos(legFrame(1,1));
t16 = sin(legFrame(1,1));
t18 = -t14 * g(2) - g(3) * t16;
t20 = sin(legFrame(1,2));
t21 = g(2) * t20;
t23 = g(3) * t20;
t25 = t10 * g(1);
t26 = -t14 * t23 + t16 * t21 + t25;
t28 = t5 * t18 + t26 * t2;
t31 = -t18 * t2;
t32 = t5 * t26 + t31;
t34 = t3 * t28 + t6 * t32;
t37 = 0.1e1 / qJ(3,2);
t38 = sin(qJ(1,2));
t39 = cos(legFrame(2,3));
t41 = cos(qJ(1,2));
t42 = sin(legFrame(2,3));
t44 = t39 * t38 + t42 * t41;
t45 = t44 * t37;
t46 = cos(legFrame(2,2));
t47 = sin(qJ(2,2));
t48 = 0.1e1 / t47;
t49 = t48 * t46;
t50 = cos(legFrame(2,1));
t52 = sin(legFrame(2,1));
t54 = -t50 * g(2) - g(3) * t52;
t56 = sin(legFrame(2,2));
t57 = g(2) * t56;
t59 = t50 * t56;
t61 = t46 * g(1);
t62 = -g(3) * t59 + t52 * t57 + t61;
t64 = t62 * t38 + t41 * t54;
t67 = -t54 * t38;
t68 = t41 * t62 + t67;
t70 = t39 * t64 + t42 * t68;
t73 = 0.1e1 / qJ(3,3);
t74 = sin(qJ(1,3));
t75 = cos(legFrame(3,3));
t77 = cos(qJ(1,3));
t78 = sin(legFrame(3,3));
t80 = t75 * t74 + t78 * t77;
t81 = t80 * t73;
t82 = cos(legFrame(3,2));
t83 = sin(qJ(2,3));
t84 = 0.1e1 / t83;
t85 = t84 * t82;
t86 = cos(legFrame(3,1));
t88 = sin(legFrame(3,1));
t90 = -t86 * g(2) - g(3) * t88;
t92 = sin(legFrame(3,2));
t93 = g(2) * t92;
t95 = g(3) * t92;
t97 = t82 * g(1);
t98 = -t86 * t95 + t88 * t93 + t97;
t100 = t98 * t74 + t77 * t90;
t103 = -t90 * t74;
t104 = t77 * t98 + t103;
t106 = t75 * t100 + t78 * t104;
t109 = 0.1e1 / qJ(3,4);
t110 = sin(qJ(1,4));
t111 = cos(legFrame(4,3));
t113 = cos(qJ(1,4));
t114 = sin(legFrame(4,3));
t116 = t111 * t110 + t114 * t113;
t117 = t116 * t109;
t118 = cos(legFrame(4,2));
t119 = sin(qJ(2,4));
t120 = 0.1e1 / t119;
t121 = t120 * t118;
t122 = cos(legFrame(4,1));
t124 = sin(legFrame(4,1));
t126 = -t122 * g(2) - g(3) * t124;
t128 = sin(legFrame(4,2));
t134 = t124 * g(2) * t128 - g(3) * t122 * t128 + t118 * g(1);
t136 = t134 * t110 + t113 * t126;
t139 = -t126 * t110;
t140 = t113 * t134 + t139;
t142 = t111 * t136 + t114 * t140;
t145 = 0.1e1 / qJ(3,5);
t146 = sin(qJ(1,5));
t147 = cos(legFrame(5,3));
t149 = cos(qJ(1,5));
t150 = sin(legFrame(5,3));
t152 = t147 * t146 + t150 * t149;
t153 = t152 * t145;
t154 = cos(legFrame(5,2));
t155 = sin(qJ(2,5));
t156 = 0.1e1 / t155;
t157 = t156 * t154;
t158 = cos(legFrame(5,1));
t160 = sin(legFrame(5,1));
t162 = -t158 * g(2) - g(3) * t160;
t164 = sin(legFrame(5,2));
t170 = t160 * g(2) * t164 - g(3) * t158 * t164 + t154 * g(1);
t172 = t170 * t146 + t149 * t162;
t175 = -t162 * t146;
t176 = t149 * t170 + t175;
t178 = t147 * t172 + t150 * t176;
t181 = 0.1e1 / qJ(3,6);
t182 = sin(qJ(1,6));
t183 = cos(legFrame(6,3));
t185 = cos(qJ(1,6));
t186 = sin(legFrame(6,3));
t188 = t183 * t182 + t186 * t185;
t189 = t188 * t181;
t190 = cos(legFrame(6,2));
t191 = sin(qJ(2,6));
t192 = 0.1e1 / t191;
t193 = t192 * t190;
t194 = cos(legFrame(6,1));
t196 = sin(legFrame(6,1));
t198 = -t194 * g(2) - g(3) * t196;
t200 = sin(legFrame(6,2));
t206 = t196 * g(2) * t200 - g(3) * t194 * t200 + t190 * g(1);
t208 = t206 * t182 + t185 * t198;
t211 = -t198 * t182;
t212 = t185 * t206 + t211;
t214 = t183 * t208 + t186 * t212;
t219 = t6 * t28;
t220 = t3 * t32 - t219;
t224 = t42 * t64;
t225 = t39 * t68 - t224;
t229 = t78 * t100;
t230 = t75 * t104 - t229;
t234 = t114 * t136;
t235 = t111 * t140 - t234;
t239 = t150 * t172;
t240 = t147 * t176 - t239;
t244 = t186 * t208;
t245 = t183 * t212 - t244;
t250 = cos(qJ(2,1));
t252 = t34 * t250 * t12;
t256 = -t2 * t6 + t5 * t3;
t260 = t10 * t256 * t250 + t20 * t11;
t261 = t1 * t260;
t264 = t2 * g(2) - t5 * t23;
t266 = t20 * t2;
t270 = (t5 * g(2) + g(3) * t266) * t6;
t275 = g(3) * t2 + t5 * t21;
t277 = t5 * t25;
t287 = t6 * (t16 * (g(2) * t266 - t5 * g(3)) + t10 * t2 * g(1));
t288 = t14 * (t3 * t264 + t270) + t3 * (t16 * t275 + t277) - t287;
t291 = t10 * t16;
t293 = t10 * t14;
t295 = g(1) * t20 - g(2) * t291 + g(3) * t293;
t296 = t250 * t295;
t297 = t11 * t288 - t296;
t300 = cos(qJ(2,2));
t302 = t70 * t300 * t48;
t306 = -t38 * t42 + t41 * t39;
t310 = t46 * t306 * t300 + t56 * t47;
t311 = t37 * t310;
t315 = -t41 * g(3) * t56 + g(2) * t38;
t317 = t56 * t38;
t321 = (t41 * g(2) + g(3) * t317) * t42;
t326 = g(3) * t38 + t41 * t57;
t328 = t41 * t61;
t338 = t42 * (t52 * (g(2) * t317 - t41 * g(3)) + t46 * t38 * g(1));
t339 = t50 * (t39 * t315 + t321) + t39 * (t52 * t326 + t328) - t338;
t342 = t46 * t52;
t344 = t46 * t50;
t346 = g(1) * t56 - g(2) * t342 + g(3) * t344;
t347 = t300 * t346;
t348 = t47 * t339 - t347;
t351 = cos(qJ(2,3));
t353 = t106 * t351 * t84;
t357 = -t74 * t78 + t77 * t75;
t361 = t82 * t357 * t351 + t92 * t83;
t362 = t73 * t361;
t365 = g(2) * t74 - t77 * t95;
t367 = t92 * t74;
t371 = (t77 * g(2) + g(3) * t367) * t78;
t376 = g(3) * t74 + t77 * t93;
t378 = t77 * t97;
t388 = t78 * (t88 * (g(2) * t367 - t77 * g(3)) + t82 * t74 * g(1));
t389 = t86 * (t75 * t365 + t371) + t75 * (t88 * t376 + t378) - t388;
t392 = t82 * t88;
t394 = t82 * t86;
t396 = g(1) * t92 - g(2) * t392 + g(3) * t394;
t397 = t351 * t396;
t398 = t83 * t389 - t397;
t401 = cos(qJ(2,4));
t403 = t142 * t401 * t120;
t407 = -t110 * t114 + t113 * t111;
t411 = t118 * t407 * t401 + t128 * t119;
t412 = t109 * t411;
t413 = t128 * t113;
t416 = g(2) * t110 - g(3) * t413;
t418 = t128 * t110;
t422 = (g(2) * t113 + g(3) * t418) * t114;
t427 = g(2) * t413 + g(3) * t110;
t430 = t118 * t113 * g(1);
t440 = t114 * (t124 * (g(2) * t418 - g(3) * t113) + t118 * t110 * g(1));
t441 = t122 * (t111 * t416 + t422) + t111 * (t124 * t427 + t430) - t440;
t444 = t118 * t124;
t446 = t118 * t122;
t448 = g(1) * t128 - g(2) * t444 + g(3) * t446;
t449 = t401 * t448;
t450 = t119 * t441 - t449;
t453 = cos(qJ(2,5));
t455 = t178 * t453 * t156;
t459 = -t146 * t150 + t149 * t147;
t463 = t154 * t459 * t453 + t164 * t155;
t464 = t145 * t463;
t465 = t164 * t149;
t468 = g(2) * t146 - g(3) * t465;
t470 = t164 * t146;
t474 = (g(2) * t149 + g(3) * t470) * t150;
t479 = g(2) * t465 + g(3) * t146;
t482 = t154 * t149 * g(1);
t492 = t150 * (t160 * (g(2) * t470 - g(3) * t149) + t154 * t146 * g(1));
t493 = t158 * (t147 * t468 + t474) + t147 * (t160 * t479 + t482) - t492;
t496 = t154 * t160;
t498 = t154 * t158;
t500 = g(1) * t164 - g(2) * t496 + g(3) * t498;
t501 = t453 * t500;
t502 = t155 * t493 - t501;
t505 = cos(qJ(2,6));
t507 = t214 * t505 * t192;
t511 = -t182 * t186 + t185 * t183;
t515 = t190 * t511 * t505 + t200 * t191;
t516 = t181 * t515;
t517 = t200 * t185;
t520 = g(2) * t182 - g(3) * t517;
t522 = t200 * t182;
t526 = (g(2) * t185 + g(3) * t522) * t186;
t531 = g(2) * t517 + g(3) * t182;
t534 = t190 * t185 * g(1);
t544 = t186 * (t196 * (g(2) * t522 - g(3) * t185) + t190 * t182 * g(1));
t545 = t194 * (t183 * t520 + t526) + t183 * (t196 * t531 + t534) - t544;
t548 = t190 * t196;
t550 = t190 * t194;
t552 = g(1) * t200 - g(2) * t548 + g(3) * t550;
t553 = t505 * t552;
t554 = t191 * t545 - t553;
t556 = -t252 * t10 * t9 - t403 * t118 * t117 - t455 * t154 * t153 - t507 * t190 * t189 - t302 * t46 * t45 - t353 * t82 * t81 + t297 * t261 + t348 * t311 + t398 * t362 + t450 * t412 + t502 * t464 + t554 * t516;
t558 = t34 * t10 * t9;
t560 = t11 * t295;
t561 = t250 * t288 + t560;
t564 = t70 * t46 * t45;
t566 = t47 * t346;
t567 = t300 * t339 + t566;
t570 = t106 * t82 * t81;
t572 = t83 * t396;
t573 = t351 * t389 + t572;
t576 = t142 * t118 * t117;
t578 = t119 * t448;
t579 = t401 * t441 + t578;
t582 = t178 * t154 * t153;
t584 = t155 * t500;
t585 = t453 * t493 + t584;
t588 = t214 * t190 * t189;
t590 = t191 * t552;
t591 = t505 * t545 + t590;
t593 = t561 * t261 + t567 * t311 + t573 * t362 + t579 * t412 + t585 * t464 + t591 * t516 + t558 + t564 + t570 + t576 + t582 + t588;
t597 = t3 * (-t5 * t26 - t31) + t219;
t603 = t39 * (-t41 * t62 - t67) + t224;
t609 = t75 * (-t77 * t98 - t103) + t229;
t615 = t111 * (-t113 * t134 - t139) + t234;
t621 = t147 * (-t149 * t170 - t175) + t239;
t627 = t183 * (-t185 * t206 - t211) + t244;
t637 = t14 * (-t3 * t264 - t270) + t3 * (-t16 * t275 - t277) + t287;
t639 = t250 * t637 - t560;
t647 = t50 * (-t39 * t315 - t321) + t39 * (-t52 * t326 - t328) + t338;
t649 = t300 * t647 - t566;
t657 = t86 * (-t75 * t365 - t371) + t75 * (-t88 * t376 - t378) + t388;
t659 = t351 * t657 - t572;
t667 = t122 * (-t111 * t416 - t422) + t111 * (-t124 * t427 - t430) + t440;
t669 = t401 * t667 - t578;
t677 = t158 * (-t147 * t468 - t474) + t147 * (-t160 * t479 - t482) + t492;
t679 = t453 * t677 - t584;
t687 = t194 * (-t183 * t520 - t526) + t183 * (-t196 * t531 - t534) + t544;
t689 = t505 * t687 - t590;
t691 = t639 * t261 + t649 * t311 + t659 * t362 + t669 * t412 + t679 * t464 + t689 * t516 - t558 - t564 - t570 - t576 - t582 - t588;
t692 = t10 * t8;
t698 = t10 * t256 * t11 - t250 * t20;
t700 = t11 * t637 + t296;
t702 = t46 * t44;
t708 = t46 * t306 * t47 - t300 * t56;
t710 = t47 * t647 + t347;
t712 = t82 * t80;
t718 = t82 * t357 * t83 - t351 * t92;
t720 = t83 * t657 + t397;
t722 = t118 * t116;
t727 = t401 * t128;
t730 = t119 * t667 + t449;
t732 = t154 * t152;
t737 = t453 * t164;
t740 = t155 * t677 + t501;
t742 = t190 * t188;
t747 = t505 * t200;
t750 = t191 * t687 + t553;
t752 = -t34 * t692 - t561 * t260 + t700 * t698 - t70 * t702 - t567 * t310 + t710 * t708 - t106 * t712 - t573 * t361 + t720 * t718 - t142 * t722 + t669 * t411 + t730 * (t118 * t407 * t119 - t727) - t178 * t732 + t679 * t463 + t740 * (t154 * t459 * t155 - t737) - t214 * t742 + t689 * t515 + t750 * (t190 * t511 * t191 - t747);
t753 = cos(xP(5));
t754 = cos(xP(6));
t755 = t754 * t753;
t757 = sin(xP(4));
t758 = sin(xP(5));
t759 = t758 * t757;
t761 = cos(xP(4));
t762 = sin(xP(6));
t764 = t754 * t759 + t762 * t761;
t766 = t758 * t761;
t769 = -t754 * t766 + t762 * t757;
t771 = -g(1) * t755 - g(2) * t764 - g(3) * t769;
t773 = t762 * t753;
t777 = t754 * t761 - t762 * t759;
t781 = t754 * t757 + t762 * t766;
t783 = g(1) * t773 - g(2) * t777 - g(3) * t781;
t786 = t757 * t753;
t788 = t761 * t753;
t790 = -g(1) * t758 + g(2) * t786 - g(3) * t788;
t794 = t16 * t20;
t796 = t14 * t256 - t8 * t794;
t797 = t1 * t796;
t798 = t34 * t12;
t801 = t52 * t56;
t803 = t50 * t306 - t44 * t801;
t804 = t37 * t803;
t805 = t70 * t48;
t808 = t88 * t92;
t810 = t86 * t357 - t80 * t808;
t811 = t73 * t810;
t812 = t106 * t84;
t817 = -t116 * t124 * t128 + t122 * t407;
t818 = t109 * t817;
t819 = t142 * t120;
t824 = -t152 * t160 * t164 + t158 * t459;
t825 = t145 * t824;
t826 = t178 * t156;
t831 = -t188 * t196 * t200 + t194 * t511;
t832 = t181 * t831;
t833 = t214 * t192;
t836 = t220 * t12;
t838 = t225 * t48;
t840 = t230 * t84;
t842 = t235 * t120;
t844 = t240 * t156;
t846 = t245 * t192;
t850 = t256 * t20;
t853 = t8 * t14 + t16 * t850;
t857 = -t10 * t11 * t16 + t250 * t853;
t858 = t1 * t857;
t861 = t306 * t56;
t864 = t44 * t50 + t52 * t861;
t868 = -t46 * t47 * t52 + t300 * t864;
t869 = t37 * t868;
t872 = t357 * t92;
t875 = t80 * t86 + t88 * t872;
t879 = -t82 * t83 * t88 + t351 * t875;
t880 = t73 * t879;
t883 = t407 * t128;
t886 = t116 * t122 + t124 * t883;
t888 = t119 * t124;
t890 = -t118 * t888 + t401 * t886;
t891 = t109 * t890;
t894 = t459 * t164;
t897 = t152 * t158 + t160 * t894;
t899 = t155 * t160;
t901 = -t154 * t899 + t453 * t897;
t902 = t145 * t901;
t905 = t511 * t200;
t908 = t188 * t194 + t196 * t905;
t910 = t191 * t196;
t912 = -t190 * t910 + t505 * t908;
t913 = t181 * t912;
t915 = t252 * t797 + t297 * t858 + t302 * t804 + t348 * t869 + t353 * t811 + t398 * t880 + t403 * t818 + t450 * t891 + t455 * t825 + t502 * t902 + t507 * t832 + t554 * t913;
t916 = t34 * t797;
t918 = t70 * t804;
t920 = t106 * t811;
t922 = t142 * t818;
t924 = t178 * t825;
t926 = t214 * t832;
t928 = t561 * t858 + t567 * t869 + t573 * t880 + t579 * t891 + t585 * t902 + t591 * t913 - t916 - t918 - t920 - t922 - t924 - t926;
t929 = t597 * t12;
t931 = t603 * t48;
t933 = t609 * t84;
t935 = t615 * t120;
t937 = t621 * t156;
t939 = t627 * t192;
t948 = t639 * t858 + t649 * t869 + t659 * t880 + t669 * t891 + t679 * t902 + t689 * t913 + t916 + t918 + t920 + t922 + t924 + t926;
t985 = t34 * t796 - t561 * t857 + t700 * (t11 * t853 + t250 * t291) + t70 * t803 - t567 * t868 + t710 * (t300 * t342 + t47 * t864) + t106 * t810 - t573 * t879 + t720 * (t351 * t392 + t83 * t875) + t142 * t817 + t669 * t890 + t730 * (t119 * t886 + t401 * t444) + t178 * t824 + t679 * t901 + t740 * (t155 * t897 + t453 * t496) + t214 * t831 + t689 * t912 + t750 * (t191 * t908 + t505 * t548);
t993 = t14 * t8 * t20 + t256 * t16;
t994 = t1 * t993;
t999 = t50 * t44 * t56 + t306 * t52;
t1000 = t37 * t999;
t1005 = t86 * t80 * t92 + t357 * t88;
t1006 = t73 * t1005;
t1011 = t122 * t116 * t128 + t407 * t124;
t1012 = t109 * t1011;
t1017 = t158 * t152 * t164 + t459 * t160;
t1018 = t145 * t1017;
t1023 = t194 * t188 * t200 + t511 * t196;
t1024 = t181 * t1023;
t1037 = -t14 * t850 + t8 * t16;
t1039 = t11 * t14;
t1041 = t10 * t1039 + t250 * t1037;
t1042 = t1 * t1041;
t1047 = t44 * t52 - t50 * t861;
t1049 = t47 * t50;
t1051 = t300 * t1047 + t46 * t1049;
t1052 = t37 * t1051;
t1057 = t80 * t88 - t86 * t872;
t1059 = t83 * t86;
t1061 = t351 * t1057 + t82 * t1059;
t1062 = t73 * t1061;
t1067 = t116 * t124 - t122 * t883;
t1069 = t119 * t122;
t1071 = t401 * t1067 + t118 * t1069;
t1072 = t109 * t1071;
t1077 = t152 * t160 - t158 * t894;
t1079 = t155 * t158;
t1081 = t453 * t1077 + t154 * t1079;
t1082 = t145 * t1081;
t1087 = t188 * t196 - t194 * t905;
t1089 = t191 * t194;
t1091 = t505 * t1087 + t190 * t1089;
t1092 = t181 * t1091;
t1094 = t302 * t1000 + t353 * t1006 + t403 * t1012 + t455 * t1018 + t507 * t1024 + t297 * t1042 + t348 * t1052 + t398 * t1062 + t450 * t1072 + t502 * t1082 + t554 * t1092 + t252 * t994;
t1095 = t34 * t994;
t1097 = t70 * t1000;
t1099 = t106 * t1006;
t1101 = t142 * t1012;
t1103 = t178 * t1018;
t1105 = t214 * t1024;
t1107 = t561 * t1042 + t567 * t1052 + t573 * t1062 + t579 * t1072 + t585 * t1082 + t591 * t1092 - t1095 - t1097 - t1099 - t1101 - t1103 - t1105;
t1121 = t639 * t1042 + t649 * t1052 + t659 * t1062 + t669 * t1072 + t679 * t1082 + t689 * t1092 + t1095 + t1097 + t1099 + t1101 + t1103 + t1105;
t1158 = t34 * t993 - t561 * t1041 + t700 * (t11 * t1037 - t250 * t293) + t70 * t999 - t567 * t1051 + t710 * (t47 * t1047 - t300 * t344) + t106 * t1005 - t573 * t1061 + t720 * (t83 * t1057 - t351 * t394) + t142 * t1011 + t669 * t1071 + t730 * (t119 * t1067 - t401 * t446) + t178 * t1017 + t679 * t1081 + t740 * (t155 * t1077 - t453 * t498) + t214 * t1023 + t689 * t1091 + t750 * (t191 * t1087 - t505 * t550);
t1163 = t761 * koppelP(1,2);
t1165 = t757 * koppelP(1,1);
t1166 = -t758 * t1163 - t1165;
t1168 = t761 * koppelP(1,1);
t1170 = t757 * koppelP(1,2);
t1171 = t758 * t1168 - t1170;
t1174 = t753 * t761 * koppelP(1,3);
t1175 = t762 * t1166 + t754 * t1171 - t1174;
t1178 = -t14 * t5 + t16 * t266;
t1182 = t14 * t2 + t5 * t794;
t1186 = t12 * t1;
t1188 = t14 * t20;
t1191 = t2 * t1188 + t16 * t5;
t1195 = t5 * t1188 - t16 * t2;
t1204 = t753 * koppelP(1,3);
t1206 = t762 * (-t758 * t1170 + t1168) + t754 * (t758 * t1165 + t1163) - t757 * t1204;
t1209 = -t1186 * (t3 * t1178 + t1182 * t6) * t1175 + t1186 * t1206 * (t3 * t1191 + t1195 * t6);
t1212 = koppelP(2,2) * t757;
t1213 = koppelP(2,1) * t766 - t1212;
t1217 = -koppelP(2,1) * t757 - koppelP(2,2) * t766;
t1219 = koppelP(2,3) * t788;
t1220 = t754 * t1213 + t762 * t1217 - t1219;
t1223 = t52 * t317 - t41 * t50;
t1227 = t50 * t38 + t41 * t801;
t1231 = t48 * t37;
t1235 = t50 * t317 + t41 * t52;
t1238 = t52 * t38;
t1239 = t41 * t59 - t1238;
t1252 = -t753 * koppelP(2,3) * t757 + t754 * (koppelP(2,1) * t759 + koppelP(2,2) * t761) + (-t758 * t1212 + koppelP(2,1) * t761) * t762;
t1255 = -t1231 * (t39 * t1223 + t1227 * t42) * t1220 + t1231 * t1252 * (t39 * t1235 + t1239 * t42);
t1258 = koppelP(3,2) * t757;
t1259 = koppelP(3,1) * t766 - t1258;
t1263 = -koppelP(3,1) * t757 - koppelP(3,2) * t766;
t1265 = koppelP(3,3) * t788;
t1266 = t754 * t1259 + t762 * t1263 - t1265;
t1269 = t88 * t367 - t77 * t86;
t1273 = t86 * t74 + t77 * t808;
t1277 = t84 * t73;
t1281 = t86 * t367 + t77 * t88;
t1285 = t74 * t88;
t1286 = t77 * t86 * t92 - t1285;
t1299 = -t753 * koppelP(3,3) * t757 + t754 * (koppelP(3,1) * t759 + koppelP(3,2) * t761) + (-t758 * t1258 + koppelP(3,1) * t761) * t762;
t1302 = -t1277 * (t75 * t1269 + t1273 * t78) * t1266 + t1277 * t1299 * (t75 * t1281 + t1286 * t78);
t1303 = t106 * t1302;
t1306 = -t122 * t113 + t124 * t418;
t1310 = t122 * t110 + t124 * t413;
t1314 = koppelP(4,2) * t757;
t1315 = koppelP(4,1) * t766 - t1314;
t1319 = -koppelP(4,1) * t757 - koppelP(4,2) * t766;
t1321 = koppelP(4,3) * t788;
t1322 = t754 * t1315 + t762 * t1319 - t1321;
t1324 = t120 * t109;
t1328 = t124 * t113 + t122 * t418;
t1332 = -t124 * t110 + t122 * t413;
t1345 = -t753 * koppelP(4,3) * t757 + t754 * (koppelP(4,1) * t759 + koppelP(4,2) * t761) + (-t758 * t1314 + koppelP(4,1) * t761) * t762;
t1348 = -t1324 * t1322 * (t111 * t1306 + t1310 * t114) + t1324 * t1345 * (t111 * t1328 + t1332 * t114);
t1352 = -t158 * t149 + t160 * t470;
t1356 = t158 * t146 + t160 * t465;
t1360 = koppelP(5,2) * t757;
t1361 = koppelP(5,1) * t766 - t1360;
t1365 = -koppelP(5,1) * t757 - koppelP(5,2) * t766;
t1367 = koppelP(5,3) * t788;
t1368 = t754 * t1361 + t762 * t1365 - t1367;
t1370 = t156 * t145;
t1382 = -t753 * koppelP(5,3) * t757 + t754 * (koppelP(5,1) * t759 + koppelP(5,2) * t761) + (-t758 * t1360 + koppelP(5,1) * t761) * t762;
t1385 = t160 * t149 + t158 * t470;
t1389 = -t160 * t146 + t158 * t465;
t1394 = -t1370 * t1368 * (t147 * t1352 + t1356 * t150) + t1370 * (t147 * t1385 + t1389 * t150) * t1382;
t1397 = koppelP(6,2) * t757;
t1398 = koppelP(6,1) * t766 - t1397;
t1402 = -koppelP(6,1) * t757 - koppelP(6,2) * t766;
t1404 = koppelP(6,3) * t788;
t1405 = t754 * t1398 + t762 * t1402 - t1404;
t1408 = -t194 * t185 + t196 * t522;
t1412 = t194 * t182 + t196 * t517;
t1416 = t192 * t181;
t1428 = -t753 * koppelP(6,3) * t757 + t754 * (koppelP(6,1) * t759 + koppelP(6,2) * t761) + (-t758 * t1397 + koppelP(6,1) * t761) * t762;
t1431 = t196 * t185 + t194 * t522;
t1435 = -t196 * t182 + t194 * t517;
t1440 = -t1416 * (t183 * t1408 + t1412 * t186) * t1405 + t1416 * (t183 * t1431 + t1435 * t186) * t1428;
t1454 = t754 * koppelP(1,2) + koppelP(1,1) * t762;
t1455 = t1454 * t5;
t1459 = t762 * t758;
t1461 = -t754 * koppelP(1,1) * t758 + koppelP(1,2) * t1459 + t1204;
t1462 = t1461 * t2;
t1463 = -t20 * t1455 - t1462;
t1465 = t1454 * t2;
t1467 = t1461 * t5;
t1469 = t6 * (-t20 * t1465 + t1467);
t1478 = t3 * (t20 * t1467 - t1465) - (t20 * t1462 + t1455) * t6;
t1501 = t250 * (t14 * (t761 * (t3 * t1463 - t1469) + t1478 * t757) - t16 * (t761 * t1478 + (-t3 * t1463 + t1469) * t757)) + (t14 * (t1454 * t761 - t1461 * t757) + (t1454 * t757 + t761 * t1461) * t16) * t11 * t10;
t1502 = t1 * t1501;
t1508 = t754 * koppelP(2,2) + koppelP(2,1) * t762;
t1509 = t1508 * t41;
t1515 = -t754 * koppelP(2,1) * t758 + koppelP(2,2) * t1459 + koppelP(2,3) * t753;
t1516 = t1515 * t38;
t1517 = -t56 * t1509 - t1516;
t1519 = t1508 * t38;
t1521 = t1515 * t41;
t1523 = (-t56 * t1519 + t1521) * t42;
t1532 = t39 * (t56 * t1521 - t1519) - (t56 * t1516 + t1509) * t42;
t1555 = t300 * (t50 * (t761 * (t39 * t1517 - t1523) + t1532 * t757) - t52 * (t761 * t1532 + (-t39 * t1517 + t1523) * t757)) + (t50 * (t1508 * t761 - t1515 * t757) + (t1508 * t757 + t761 * t1515) * t52) * t47 * t46;
t1556 = t37 * t1555;
t1562 = t754 * koppelP(3,2) + koppelP(3,1) * t762;
t1563 = t1562 * t77;
t1569 = -t754 * koppelP(3,1) * t758 + koppelP(3,2) * t1459 + koppelP(3,3) * t753;
t1570 = t1569 * t74;
t1571 = -t92 * t1563 - t1570;
t1573 = t1562 * t74;
t1575 = t1569 * t77;
t1577 = (-t92 * t1573 + t1575) * t78;
t1586 = t75 * (t92 * t1575 - t1573) - (t92 * t1570 + t1563) * t78;
t1609 = t351 * (t86 * (t761 * (t75 * t1571 - t1577) + t1586 * t757) - t88 * (t761 * t1586 + (-t75 * t1571 + t1577) * t757)) + (t86 * (t1562 * t761 - t1569 * t757) + (t1562 * t757 + t761 * t1569) * t88) * t83 * t82;
t1610 = t73 * t1609;
t1616 = t754 * koppelP(4,2) + koppelP(4,1) * t762;
t1617 = t1616 * t113;
t1623 = -t754 * koppelP(4,1) * t758 + koppelP(4,2) * t1459 + koppelP(4,3) * t753;
t1624 = t1623 * t110;
t1625 = -t128 * t1617 - t1624;
t1627 = t1616 * t110;
t1629 = t1623 * t113;
t1631 = (-t128 * t1627 + t1629) * t114;
t1640 = t111 * (t128 * t1629 - t1627) - (t128 * t1624 + t1617) * t114;
t1663 = t401 * (t122 * (t761 * (t111 * t1625 - t1631) + t757 * t1640) - t124 * (t761 * t1640 + t757 * (-t111 * t1625 + t1631))) + (t122 * (t1616 * t761 - t1623 * t757) + (t1616 * t757 + t761 * t1623) * t124) * t119 * t118;
t1664 = t109 * t1663;
t1670 = t754 * koppelP(5,2) + koppelP(5,1) * t762;
t1671 = t1670 * t149;
t1677 = -t754 * koppelP(5,1) * t758 + koppelP(5,2) * t1459 + koppelP(5,3) * t753;
t1678 = t1677 * t146;
t1679 = -t164 * t1671 - t1678;
t1681 = t1670 * t146;
t1683 = t1677 * t149;
t1685 = (-t164 * t1681 + t1683) * t150;
t1694 = t147 * (t164 * t1683 - t1681) - (t164 * t1678 + t1671) * t150;
t1717 = t453 * (t158 * (t761 * (t147 * t1679 - t1685) + t757 * t1694) - t160 * (t761 * t1694 + t757 * (-t147 * t1679 + t1685))) + (t158 * (t1670 * t761 - t1677 * t757) + (t1670 * t757 + t761 * t1677) * t160) * t155 * t154;
t1718 = t145 * t1717;
t1724 = t754 * koppelP(6,2) + koppelP(6,1) * t762;
t1725 = t1724 * t185;
t1731 = -t754 * koppelP(6,1) * t758 + koppelP(6,2) * t1459 + koppelP(6,3) * t753;
t1732 = t1731 * t182;
t1733 = -t200 * t1725 - t1732;
t1735 = t1724 * t182;
t1737 = t1731 * t185;
t1739 = (-t200 * t1735 + t1737) * t186;
t1748 = t183 * (t200 * t1737 - t1735) - (t200 * t1732 + t1725) * t186;
t1771 = t505 * (t194 * (t761 * (t183 * t1733 - t1739) + t757 * t1748) - t196 * (t761 * t1748 + t757 * (-t183 * t1733 + t1739))) + (t194 * (t1724 * t761 - t1731 * t757) + (t1724 * t757 + t761 * t1731) * t196) * t191 * t190;
t1772 = t181 * t1771;
t1774 = t106 * t351 * t1302 + t34 * t250 * t1209 + t70 * t300 * t1255 + t142 * t401 * t1348 + t178 * t453 * t1394 + t214 * t505 * t1440 + t297 * t1502 + t348 * t1556 + t398 * t1610 + t450 * t1664 + t502 * t1718 + t554 * t1772;
t1775 = t11 * t1209;
t1776 = t34 * t1775;
t1778 = t47 * t1255;
t1779 = t70 * t1778;
t1781 = t83 * t1303;
t1784 = t142 * t119 * t1348;
t1787 = t178 * t155 * t1394;
t1790 = t214 * t191 * t1440;
t1792 = t561 * t1502 + t567 * t1556 + t573 * t1610 + t579 * t1664 + t585 * t1718 + t591 * t1772 - t1776 - t1779 - t1781 - t1784 - t1787 - t1790;
t1806 = t639 * t1502 + t649 * t1556 + t659 * t1610 + t669 * t1664 + t679 * t1718 + t689 * t1772 + t1776 + t1779 + t1781 + t1784 + t1787 + t1790;
t1807 = qJ(3,1) * t34;
t1812 = t3 * t20 * t11 * t5;
t1813 = t11 * t2;
t1816 = t10 * t250;
t1820 = t16 * (-t6 * t20 * t1813 + t1812 + t1816) + t8 * t1039;
t1828 = -t6 * t1191 * t11 - t1813 * t16 * t3 + (t1812 + t1816) * t14;
t1832 = qJ(3,2) * t70;
t1837 = t39 * t56 * t47 * t41;
t1841 = t46 * t300;
t1845 = t52 * (-t42 * t56 * t47 * t38 + t1837 + t1841) + t44 * t1049;
t1853 = -t42 * t1235 * t47 - t1238 * t39 * t47 + (t1837 + t1841) * t50;
t1857 = qJ(3,3) * t83;
t1862 = t75 * t92 * t83 * t77;
t1866 = t82 * t351;
t1870 = t88 * (-t78 * t92 * t83 * t74 + t1862 + t1866) + t80 * t1059;
t1878 = -t78 * t1281 * t83 - t1285 * t75 * t83 + (t1862 + t1866) * t86;
t1883 = t142 * t119;
t1888 = t119 * t110;
t1890 = t114 * t128 * t1888;
t1891 = t118 * t401;
t1894 = t119 * t113;
t1901 = t111 * t128 * t1894 - t1890 + t1891;
t1904 = -t116 * t888 + t122 * t1901;
t1909 = t178 * t155;
t1914 = t155 * t146;
t1916 = t150 * t164 * t1914;
t1917 = t154 * t453;
t1920 = t155 * t149;
t1927 = t147 * t164 * t1920 - t1916 + t1917;
t1930 = -t152 * t899 + t158 * t1927;
t1935 = t214 * t191;
t1942 = t186 * t200 * t191 * t182;
t1943 = t190 * t505;
t1946 = t191 * t185;
t1953 = t183 * t200 * t1946 - t1942 + t1943;
t1956 = -t188 * t910 + t194 * t1953;
t1960 = t1807 * t1775 - t561 * t1501 + t700 * (t1820 * t1175 - t1206 * t1828) + t1832 * t1778 - t567 * t1555 + t710 * (t1845 * t1220 - t1252 * t1853) + t1857 * t1303 - t573 * t1609 + t720 * (t1870 * t1266 - t1299 * t1878) + t1883 * qJ(3,4) * t1348 + t669 * t1663 + t730 * ((t111 * t1310 * t119 + t124 * (-t1890 + t1891) + t114 * t122 * t1894) * t1322 - t1345 * t1904) + t1909 * qJ(3,5) * t1394 + t679 * t1717 + t740 * ((t147 * t1356 * t155 + t160 * (-t1916 + t1917) + t150 * t158 * t1920) * t1368 - t1382 * t1930) + t1935 * qJ(3,6) * t1440 + t689 * t1771 + t750 * ((t183 * t1412 * t191 + t196 * (-t1942 + t1943) + t186 * t194 * t1946) * t1405 - t1428 * t1956);
t1975 = koppelP(1,3) * t758;
t1976 = -koppelP(1,1) * t755 + koppelP(1,2) * t773 - t1975;
t1979 = t12 * t1 * t1175 * t692 + t1186 * t993 * t1976;
t1986 = koppelP(2,3) * t758;
t1987 = -koppelP(2,1) * t755 + koppelP(2,2) * t773 - t1986;
t1990 = t48 * t37 * t1220 * t702 + t1231 * t999 * t1987;
t1997 = koppelP(3,3) * t758;
t1998 = -koppelP(3,1) * t755 + koppelP(3,2) * t773 - t1997;
t2001 = t84 * t73 * t1266 * t712 + t1277 * t1005 * t1998;
t2002 = t106 * t2001;
t2008 = koppelP(4,3) * t758;
t2009 = -koppelP(4,1) * t755 + koppelP(4,2) * t773 - t2008;
t2012 = t120 * t109 * t1322 * t722 + t1324 * t1011 * t2009;
t2019 = koppelP(5,3) * t758;
t2020 = -koppelP(5,1) * t755 + koppelP(5,2) * t773 - t2019;
t2023 = t156 * t145 * t1368 * t732 + t1370 * t1017 * t2020;
t2030 = koppelP(6,3) * t758;
t2031 = -koppelP(6,1) * t755 + koppelP(6,2) * t773 - t2030;
t2034 = t192 * t181 * t1405 * t742 + t1416 * t1023 * t2031;
t2048 = -t762 * t1166 - t754 * t1171 + t1174;
t2055 = t753 * (t754 * koppelP(1,1) - koppelP(1,2) * t762) + t1975;
t2067 = t250 * (t10 * t256 * t2048 + (-t1191 * t6 + t3 * t1195) * t2055) + t11 * (-t10 * t14 * t2055 + t2048 * t20);
t2068 = t1 * t2067;
t2074 = -t754 * t1213 - t762 * t1217 + t1219;
t2081 = t753 * (t754 * koppelP(2,1) - koppelP(2,2) * t762) + t1986;
t2093 = t300 * (t46 * t306 * t2074 + (-t1235 * t42 + t39 * t1239) * t2081) + t47 * (-t46 * t50 * t2081 + t2074 * t56);
t2094 = t37 * t2093;
t2100 = -t754 * t1259 - t762 * t1263 + t1265;
t2107 = t753 * (t754 * koppelP(3,1) - koppelP(3,2) * t762) + t1997;
t2119 = t351 * (t82 * t357 * t2100 + (-t1281 * t78 + t75 * t1286) * t2107) + t83 * (-t82 * t86 * t2107 + t2100 * t92);
t2120 = t73 * t2119;
t2126 = -t754 * t1315 - t762 * t1319 + t1321;
t2133 = t753 * (t754 * koppelP(4,1) - koppelP(4,2) * t762) + t2008;
t2145 = t401 * (t118 * t2126 * t407 + (t111 * t1332 - t1328 * t114) * t2133) + (-t118 * t122 * t2133 + t2126 * t128) * t119;
t2146 = t109 * t2145;
t2152 = -t754 * t1361 - t762 * t1365 + t1367;
t2159 = t753 * (t754 * koppelP(5,1) - koppelP(5,2) * t762) + t2019;
t2171 = t453 * (t154 * t2152 * t459 + (-t1385 * t150 + t147 * t1389) * t2159) + (-t154 * t158 * t2159 + t2152 * t164) * t155;
t2172 = t145 * t2171;
t2178 = -t754 * t1398 - t762 * t1402 + t1404;
t2185 = t753 * (t754 * koppelP(6,1) - koppelP(6,2) * t762) + t2030;
t2197 = t505 * (t190 * t2178 * t511 + (-t1431 * t186 + t183 * t1435) * t2185) + (-t190 * t194 * t2185 + t2178 * t200) * t191;
t2198 = t181 * t2197;
t2200 = t106 * t351 * t2001 + t142 * t401 * t2012 + t178 * t453 * t2023 + t34 * t250 * t1979 + t70 * t300 * t1990 + t214 * t505 * t2034 + t297 * t2068 + t348 * t2094 + t398 * t2120 + t450 * t2146 + t502 * t2172 + t554 * t2198;
t2201 = t11 * t1979;
t2202 = t34 * t2201;
t2204 = t47 * t1990;
t2205 = t70 * t2204;
t2207 = t83 * t2002;
t2210 = t142 * t119 * t2012;
t2213 = t178 * t155 * t2023;
t2216 = t214 * t191 * t2034;
t2218 = t561 * t2068 + t567 * t2094 + t573 * t2120 + t579 * t2146 + t585 * t2172 + t591 * t2198 - t2202 - t2205 - t2207 - t2210 - t2213 - t2216;
t2232 = t639 * t2068 + t649 * t2094 + t659 * t2120 + t669 * t2146 + t679 * t2172 + t689 * t2198 + t2202 + t2205 + t2207 + t2210 + t2213 + t2216;
t2258 = t111 * t118 * t1894 - t114 * t118 * t1888 - t727;
t2270 = t147 * t154 * t1920 - t150 * t154 * t1914 - t737;
t2284 = -t190 * t182 * t186 * t191 + t190 * t185 * t183 * t191 - t747;
t2289 = t1807 * t2201 - t561 * t2067 + t700 * (-t698 * t1175 + t1828 * t2055) + t1832 * t2204 - t567 * t2093 + t710 * (-t708 * t1220 + t1853 * t2081) + t1857 * t2002 - t573 * t2119 + t720 * (-t718 * t1266 + t1878 * t2107) + t1883 * qJ(3,4) * t2012 + t669 * t2145 + t730 * (-t1322 * t2258 + t1904 * t2133) + t1909 * qJ(3,5) * t2023 + t679 * t2171 + t740 * (-t1368 * t2270 + t1930 * t2159) + t1935 * qJ(3,6) * t2034 + t689 * t2197 + t750 * (-t1405 * t2284 + t1956 * t2185);
t2304 = t12 * t1 * t1206 * t692 - t1186 * t796 * t1976;
t2311 = t48 * t37 * t1252 * t702 - t1231 * t803 * t1987;
t2318 = t84 * t73 * t1299 * t712 - t1277 * t810 * t1998;
t2319 = t106 * t2318;
t2325 = t120 * t109 * t1345 * t722 - t1324 * t817 * t2009;
t2332 = t156 * t145 * t1382 * t732 - t1370 * t824 * t2020;
t2339 = t192 * t181 * t1428 * t742 - t1416 * t831 * t2031;
t2364 = t250 * (-t10 * t256 * t1206 + t2055 * (-t1178 * t6 + t3 * t1182)) - (t10 * t16 * t2055 + t1206 * t20) * t11;
t2365 = t1 * t2364;
t2382 = t300 * (-t46 * t306 * t1252 + (-t1223 * t42 + t39 * t1227) * t2081) - (t46 * t52 * t2081 + t1252 * t56) * t47;
t2383 = t37 * t2382;
t2400 = t351 * (-t82 * t357 * t1299 + (-t1269 * t78 + t75 * t1273) * t2107) - (t82 * t88 * t2107 + t1299 * t92) * t83;
t2401 = t73 * t2400;
t2418 = t401 * (-t118 * t407 * t1345 + (t111 * t1310 - t1306 * t114) * t2133) - t119 * (t118 * t124 * t2133 + t1345 * t128);
t2419 = t109 * t2418;
t2436 = t453 * (-t154 * t459 * t1382 + (-t1352 * t150 + t147 * t1356) * t2159) - t155 * (t154 * t160 * t2159 + t1382 * t164);
t2437 = t145 * t2436;
t2454 = t505 * (-t190 * t511 * t1428 + (-t1408 * t186 + t183 * t1412) * t2185) - t191 * (t190 * t196 * t2185 + t1428 * t200);
t2455 = t181 * t2454;
t2457 = t106 * t351 * t2318 + t142 * t401 * t2325 + t178 * t453 * t2332 + t214 * t505 * t2339 + t34 * t250 * t2304 + t70 * t300 * t2311 + t297 * t2365 + t348 * t2383 + t398 * t2401 + t450 * t2419 + t502 * t2437 + t554 * t2455;
t2458 = t11 * t2304;
t2459 = t34 * t2458;
t2461 = t47 * t2311;
t2462 = t70 * t2461;
t2464 = t83 * t2319;
t2467 = t142 * t119 * t2325;
t2470 = t178 * t155 * t2332;
t2473 = t214 * t191 * t2339;
t2475 = t561 * t2365 + t567 * t2383 + t573 * t2401 + t579 * t2419 + t585 * t2437 + t591 * t2455 - t2459 - t2462 - t2464 - t2467 - t2470 - t2473;
t2489 = t639 * t2365 + t649 * t2383 + t659 * t2401 + t669 * t2419 + t679 * t2437 + t689 * t2455 + t2459 + t2462 + t2464 + t2467 + t2470 + t2473;
t2538 = t1807 * t2458 - t561 * t2364 + t700 * (-t698 * t1206 + t1820 * t2055) + t1832 * t2461 - t567 * t2382 + t710 * (-t708 * t1252 + t1845 * t2081) + t1857 * t2319 - t573 * t2400 + t720 * (-t718 * t1299 + t1870 * t2107) + t1883 * qJ(3,4) * t2325 + t669 * t2418 + t730 * (-t2258 * t1345 + t2133 * (t116 * t1069 + t124 * t1901)) + t1909 * qJ(3,5) * t2332 + t679 * t2436 + t740 * (-t2270 * t1382 + t2159 * (t152 * t1079 + t160 * t1927)) + t1935 * qJ(3,6) * t2339 + t689 * t2454 + t750 * (-t2284 * t1428 + t2185 * (t188 * t1089 + t196 * t1953));
unknown(1,1) = 0;
unknown(1,2) = (-t106 * t85 * t81 - t142 * t121 * t117 - t34 * t13 * t9 - t178 * t157 * t153 - t214 * t193 * t189 - t70 * t49 * t45);
unknown(1,3) = (-t235 * t121 * t117 - t220 * t13 * t9 - t240 * t157 * t153 - t245 * t193 * t189 - t225 * t49 * t45 - t230 * t85 * t81);
unknown(1,4) = 0;
unknown(1,5) = 0;
unknown(1,6) = 0;
unknown(1,7) = 0;
unknown(1,8) = 0;
unknown(1,9) = t556;
unknown(1,10) = t593;
unknown(1,11) = t556;
unknown(1,12) = (-t615 * t121 * t117 - t597 * t13 * t9 - t621 * t157 * t153 - t627 * t193 * t189 - t603 * t49 * t45 - t609 * t85 * t81);
unknown(1,13) = t691;
unknown(1,14) = t752;
unknown(1,15) = 0;
unknown(1,16) = 0;
unknown(1,17) = 0;
unknown(1,18) = 0;
unknown(1,19) = 0;
unknown(1,20) = 0;
unknown(1,21) = 0;
unknown(1,22) = 0;
unknown(1,23) = 0;
unknown(1,24) = (t771 * t755 + t790 * t758 - t783 * t773);
unknown(2,1) = 0;
unknown(2,2) = (t798 * t797 + t805 * t804 + t812 * t811 + t819 * t818 + t826 * t825 + t833 * t832);
unknown(2,3) = (t836 * t797 + t838 * t804 + t840 * t811 + t842 * t818 + t844 * t825 + t846 * t832);
unknown(2,4) = 0;
unknown(2,5) = 0;
unknown(2,6) = 0;
unknown(2,7) = 0;
unknown(2,8) = 0;
unknown(2,9) = t915;
unknown(2,10) = t928;
unknown(2,11) = t915;
unknown(2,12) = (t929 * t797 + t931 * t804 + t933 * t811 + t935 * t818 + t937 * t825 + t939 * t832);
unknown(2,13) = t948;
unknown(2,14) = t985;
unknown(2,15) = 0;
unknown(2,16) = 0;
unknown(2,17) = 0;
unknown(2,18) = 0;
unknown(2,19) = 0;
unknown(2,20) = 0;
unknown(2,21) = 0;
unknown(2,22) = 0;
unknown(2,23) = 0;
unknown(2,24) = (t771 * t764 + t783 * t777 - t790 * t786);
unknown(3,1) = 0;
unknown(3,2) = (t805 * t1000 + t812 * t1006 + t819 * t1012 + t826 * t1018 + t833 * t1024 + t798 * t994);
unknown(3,3) = (t838 * t1000 + t840 * t1006 + t842 * t1012 + t844 * t1018 + t846 * t1024 + t836 * t994);
unknown(3,4) = 0;
unknown(3,5) = 0;
unknown(3,6) = 0;
unknown(3,7) = 0;
unknown(3,8) = 0;
unknown(3,9) = t1094;
unknown(3,10) = t1107;
unknown(3,11) = t1094;
unknown(3,12) = (t931 * t1000 + t933 * t1006 + t935 * t1012 + t937 * t1018 + t939 * t1024 + t929 * t994);
unknown(3,13) = t1121;
unknown(3,14) = t1158;
unknown(3,15) = 0;
unknown(3,16) = 0;
unknown(3,17) = 0;
unknown(3,18) = 0;
unknown(3,19) = 0;
unknown(3,20) = 0;
unknown(3,21) = 0;
unknown(3,22) = 0;
unknown(3,23) = 0;
unknown(3,24) = (t771 * t769 + t783 * t781 + t790 * t788);
unknown(4,1) = 0;
unknown(4,2) = (t34 * t1209 + t70 * t1255 + t142 * t1348 + t178 * t1394 + t214 * t1440 + t1303);
unknown(4,3) = (t220 * t1209 + t225 * t1255 + t230 * t1302 + t235 * t1348 + t240 * t1394 + t245 * t1440);
unknown(4,4) = 0;
unknown(4,5) = 0;
unknown(4,6) = 0;
unknown(4,7) = 0;
unknown(4,8) = 0;
unknown(4,9) = t1774;
unknown(4,10) = t1792;
unknown(4,11) = t1774;
unknown(4,12) = (t597 * t1209 + t603 * t1255 + t609 * t1302 + t615 * t1348 + t621 * t1394 + t627 * t1440);
unknown(4,13) = t1806;
unknown(4,14) = t1960;
unknown(4,15) = 0;
unknown(4,16) = 0;
unknown(4,17) = 0;
unknown(4,18) = 0;
unknown(4,19) = 0;
unknown(4,20) = 0;
unknown(4,21) = (t783 * t758 + t790 * t773);
unknown(4,22) = (t790 * t755 - t771 * t758);
unknown(4,23) = (-t783 * t755 - t771 * t773);
unknown(4,24) = 0;
unknown(5,1) = 0;
unknown(5,2) = (t142 * t2012 + t178 * t2023 + t34 * t1979 + t70 * t1990 + t214 * t2034 + t2002);
unknown(5,3) = (t220 * t1979 + t225 * t1990 + t230 * t2001 + t235 * t2012 + t240 * t2023 + t245 * t2034);
unknown(5,4) = 0;
unknown(5,5) = 0;
unknown(5,6) = 0;
unknown(5,7) = 0;
unknown(5,8) = 0;
unknown(5,9) = t2200;
unknown(5,10) = t2218;
unknown(5,11) = t2200;
unknown(5,12) = (t597 * t1979 + t603 * t1990 + t609 * t2001 + t615 * t2012 + t621 * t2023 + t627 * t2034);
unknown(5,13) = t2232;
unknown(5,14) = t2289;
unknown(5,15) = 0;
unknown(5,16) = 0;
unknown(5,17) = 0;
unknown(5,18) = 0;
unknown(5,19) = 0;
unknown(5,20) = 0;
unknown(5,21) = (-t790 * t777 - t783 * t786);
unknown(5,22) = (t790 * t764 + t771 * t786);
unknown(5,23) = (-t783 * t764 + t771 * t777);
unknown(5,24) = 0;
unknown(6,1) = 0;
unknown(6,2) = (t142 * t2325 + t178 * t2332 + t214 * t2339 + t34 * t2304 + t70 * t2311 + t2319);
unknown(6,3) = (t220 * t2304 + t225 * t2311 + t230 * t2318 + t235 * t2325 + t240 * t2332 + t245 * t2339);
unknown(6,4) = 0;
unknown(6,5) = 0;
unknown(6,6) = 0;
unknown(6,7) = 0;
unknown(6,8) = 0;
unknown(6,9) = t2457;
unknown(6,10) = t2475;
unknown(6,11) = t2457;
unknown(6,12) = (t597 * t2304 + t603 * t2311 + t609 * t2318 + t615 * t2325 + t621 * t2332 + t627 * t2339);
unknown(6,13) = t2489;
unknown(6,14) = t2538;
unknown(6,15) = 0;
unknown(6,16) = 0;
unknown(6,17) = 0;
unknown(6,18) = 0;
unknown(6,19) = 0;
unknown(6,20) = 0;
unknown(6,21) = (-t790 * t781 + t783 * t788);
unknown(6,22) = (t790 * t769 - t771 * t788);
unknown(6,23) = (-t783 * t769 + t771 * t781);
unknown(6,24) = 0;
tau_reg  = unknown;
