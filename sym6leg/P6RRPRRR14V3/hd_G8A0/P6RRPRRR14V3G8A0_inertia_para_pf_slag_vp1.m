% Calculate inertia matrix for parallel robot
% P6RRPRRR14V3G8A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:36
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(1,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: pkin has to be [1x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:32:27
% EndTime: 2020-03-12 23:32:30
% DurationCPUTime: 3.43s
% Computational Cost: add. (53102->1500), mult. (102457->2355), div. (5832->12), fcn. (103135->66), ass. (0->847)
unknown=NaN(6,6);
t1 = 0.1e1 / qJ(3,1);
t2 = sin(qJ(1,1));
t3 = cos(legFrame(1,3));
t5 = cos(qJ(1,1));
t6 = sin(legFrame(1,3));
t8 = t3 * t2 + t6 * t5;
t9 = t8 * t1;
t10 = cos(legFrame(1,2));
t11 = sin(qJ(2,1));
t12 = 0.1e1 / t11;
t13 = t12 * t10;
t18 = rSges(2,1) ^ 2;
t19 = rSges(2,2) ^ 2;
t21 = (m(2) * (t18 - t19));
t23 = cos(qJ(2,1));
t24 = t23 ^ 2;
t26 = (rSges(3,3) + qJ(3,1));
t29 = (rSges(2,1) * m(2));
t30 = (rSges(2,2) * t29);
t35 = (rSges(3,2) ^ 2);
t36 = (rSges(3,3) ^ 2);
t38 = 2 * rSges(3,3) * qJ(3,1);
t39 = qJ(3,1) ^ 2;
t42 = rSges(2,3) ^ 2;
t44 = m(2) * (t19 + t42);
t45 = rSges(1,1) ^ 2;
t46 = rSges(1,2) ^ 2;
t48 = m(1) * (t45 + t46);
t49 = t24 * (-(qJ(3,1) + rSges(3,1) + rSges(3,3)) * (qJ(3,1) - rSges(3,1) + rSges(3,3)) * m(3) + t21 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t23 * t11 * (m(3) * t26 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t30) + (m(3) * (t35 + t36 + t38 + t39)) + t44 + Icges(2,1) + Icges(3,1) + t48 + Icges(1,3);
t54 = -t2 * t6 + t5 * t3;
t57 = sin(legFrame(1,2));
t59 = t10 * t54 * t23 + t57 * t11;
t60 = t1 * t59;
t64 = (m(2) * rSges(2,2) * rSges(2,3));
t70 = rSges(3,2) * rSges(3,1) * m(3) + rSges(2,3) * t29 - Icges(3,4) - Icges(2,5);
t72 = t23 * (m(3) * t26 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t64) - t70 * t11;
t77 = t10 * t54 * t11 - t23 * t57;
t79 = m(3) * rSges(3,2);
t81 = t79 * t11 * t77 - t49 * t13 * t9 + t72 * t60;
t84 = t12 * t10 * t8;
t88 = rSges(3,1) ^ 2;
t92 = (m(2) * (t18 + t19));
t93 = m(3) * (t88 + t36 + t38 + t39) + t92 + Icges(3,2) + Icges(2,3);
t95 = m(3) * t77;
t97 = -t72 * t13 * t9 - rSges(3,1) * t95 + t93 * t60;
t103 = m(3) * rSges(3,1);
t105 = -rSges(3,2) * m(3) * t10 * t9 - t103 * t60 + t95;
t107 = 0.1e1 / qJ(3,2);
t108 = sin(qJ(1,2));
t109 = cos(legFrame(2,3));
t111 = cos(qJ(1,2));
t112 = sin(legFrame(2,3));
t114 = t109 * t108 + t112 * t111;
t115 = t114 * t107;
t116 = cos(legFrame(2,2));
t117 = sin(qJ(2,2));
t118 = 0.1e1 / t117;
t119 = t118 * t116;
t125 = cos(qJ(2,2));
t126 = t125 ^ 2;
t128 = rSges(3,3) + qJ(3,2);
t136 = 2 * rSges(3,3) * qJ(3,2);
t137 = qJ(3,2) ^ 2;
t140 = t126 * (-(qJ(3,2) + rSges(3,1) + rSges(3,3)) * (qJ(3,2) - rSges(3,1) + rSges(3,3)) * m(3) + t21 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t125 * t117 * (m(3) * t128 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t30) + (m(3) * (t35 + t36 + t136 + t137)) + t44 + Icges(2,1) + Icges(3,1) + t48 + Icges(1,3);
t145 = -t108 * t112 + t111 * t109;
t148 = sin(legFrame(2,2));
t150 = t116 * t145 * t125 + t148 * t117;
t151 = t107 * t150;
t157 = t125 * (m(3) * t128 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t64) - t70 * t117;
t162 = t116 * t145 * t117 - t125 * t148;
t165 = -t140 * t119 * t115 + t79 * t117 * t162 + t157 * t151;
t168 = t118 * t116 * t114;
t174 = m(3) * (t88 + t36 + t136 + t137) + t92 + Icges(3,2) + Icges(2,3);
t176 = m(3) * t162;
t178 = -t157 * t119 * t115 - rSges(3,1) * t176 + t174 * t151;
t185 = -rSges(3,2) * m(3) * t116 * t115 - t103 * t151 + t176;
t187 = 0.1e1 / qJ(3,3);
t188 = sin(qJ(1,3));
t189 = cos(legFrame(3,3));
t191 = cos(qJ(1,3));
t192 = sin(legFrame(3,3));
t194 = t189 * t188 + t192 * t191;
t195 = t194 * t187;
t196 = cos(legFrame(3,2));
t197 = sin(qJ(2,3));
t198 = 0.1e1 / t197;
t199 = t198 * t196;
t205 = cos(qJ(2,3));
t206 = t205 ^ 2;
t208 = rSges(3,3) + qJ(3,3);
t216 = 2 * rSges(3,3) * qJ(3,3);
t217 = qJ(3,3) ^ 2;
t220 = t206 * (-(qJ(3,3) + rSges(3,1) + rSges(3,3)) * (qJ(3,3) - rSges(3,1) + rSges(3,3)) * m(3) + t21 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t205 * t197 * (m(3) * t208 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t30) + (m(3) * (t35 + t36 + t216 + t217)) + t44 + Icges(2,1) + Icges(3,1) + t48 + Icges(1,3);
t225 = -t188 * t192 + t191 * t189;
t228 = sin(legFrame(3,2));
t230 = t196 * t225 * t205 + t228 * t197;
t231 = t187 * t230;
t237 = t205 * (m(3) * t208 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t64) - t70 * t197;
t242 = t196 * t225 * t197 - t205 * t228;
t245 = -t220 * t199 * t195 + t79 * t197 * t242 + t237 * t231;
t248 = t198 * t196 * t194;
t254 = m(3) * (t88 + t36 + t216 + t217) + t92 + Icges(3,2) + Icges(2,3);
t256 = m(3) * t242;
t258 = -t237 * t199 * t195 - rSges(3,1) * t256 + t254 * t231;
t265 = -rSges(3,2) * m(3) * t196 * t195 - t103 * t231 + t256;
t267 = 0.1e1 / qJ(3,4);
t268 = sin(qJ(1,4));
t269 = cos(legFrame(4,3));
t271 = cos(qJ(1,4));
t272 = sin(legFrame(4,3));
t274 = t269 * t268 + t272 * t271;
t275 = t274 * t267;
t276 = cos(legFrame(4,2));
t277 = sin(qJ(2,4));
t278 = 0.1e1 / t277;
t279 = t278 * t276;
t285 = cos(qJ(2,4));
t286 = t285 ^ 2;
t288 = rSges(3,3) + qJ(3,4);
t296 = 2 * rSges(3,3) * qJ(3,4);
t297 = qJ(3,4) ^ 2;
t300 = t286 * (-(qJ(3,4) + rSges(3,1) + rSges(3,3)) * (qJ(3,4) - rSges(3,1) + rSges(3,3)) * m(3) + t21 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t285 * t277 * (m(3) * t288 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t30) + (m(3) * (t35 + t36 + t296 + t297)) + t44 + Icges(2,1) + Icges(3,1) + t48 + Icges(1,3);
t305 = -t268 * t272 + t271 * t269;
t308 = sin(legFrame(4,2));
t310 = t276 * t305 * t285 + t308 * t277;
t311 = t267 * t310;
t317 = t285 * (m(3) * t288 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t64) - t70 * t277;
t322 = t276 * t305 * t277 - t285 * t308;
t325 = -t300 * t279 * t275 + t79 * t277 * t322 + t317 * t311;
t328 = t278 * t276 * t274;
t334 = m(3) * (t88 + t36 + t296 + t297) + t92 + Icges(3,2) + Icges(2,3);
t336 = m(3) * t322;
t338 = -t317 * t279 * t275 - rSges(3,1) * t336 + t334 * t311;
t345 = -rSges(3,2) * m(3) * t276 * t275 - t103 * t311 + t336;
t347 = 0.1e1 / qJ(3,5);
t348 = sin(qJ(1,5));
t349 = cos(legFrame(5,3));
t351 = cos(qJ(1,5));
t352 = sin(legFrame(5,3));
t354 = t349 * t348 + t352 * t351;
t355 = t354 * t347;
t356 = cos(legFrame(5,2));
t357 = sin(qJ(2,5));
t358 = 0.1e1 / t357;
t359 = t358 * t356;
t365 = cos(qJ(2,5));
t366 = t365 ^ 2;
t368 = rSges(3,3) + qJ(3,5);
t376 = 2 * rSges(3,3) * qJ(3,5);
t377 = qJ(3,5) ^ 2;
t380 = t366 * (-(qJ(3,5) + rSges(3,1) + rSges(3,3)) * (qJ(3,5) - rSges(3,1) + rSges(3,3)) * m(3) + t21 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t365 * t357 * (m(3) * t368 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t30) + (m(3) * (t35 + t36 + t376 + t377)) + t44 + Icges(2,1) + Icges(3,1) + t48 + Icges(1,3);
t385 = -t348 * t352 + t351 * t349;
t388 = sin(legFrame(5,2));
t390 = t356 * t385 * t365 + t388 * t357;
t391 = t347 * t390;
t397 = t365 * (m(3) * t368 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t64) - t70 * t357;
t402 = t356 * t385 * t357 - t365 * t388;
t405 = -t380 * t359 * t355 + t79 * t357 * t402 + t397 * t391;
t408 = t358 * t356 * t354;
t414 = m(3) * (t88 + t36 + t376 + t377) + t92 + Icges(3,2) + Icges(2,3);
t416 = m(3) * t402;
t418 = -t397 * t359 * t355 - rSges(3,1) * t416 + t414 * t391;
t425 = -rSges(3,2) * m(3) * t356 * t355 - t103 * t391 + t416;
t427 = 0.1e1 / qJ(3,6);
t428 = sin(qJ(1,6));
t429 = cos(legFrame(6,3));
t431 = cos(qJ(1,6));
t432 = sin(legFrame(6,3));
t434 = t429 * t428 + t432 * t431;
t435 = t434 * t427;
t436 = cos(legFrame(6,2));
t437 = sin(qJ(2,6));
t438 = 0.1e1 / t437;
t439 = t438 * t436;
t445 = cos(qJ(2,6));
t446 = t445 ^ 2;
t448 = rSges(3,3) + qJ(3,6);
t456 = 2 * rSges(3,3) * qJ(3,6);
t457 = qJ(3,6) ^ 2;
t460 = t446 * (-(qJ(3,6) + rSges(3,1) + rSges(3,3)) * (qJ(3,6) - rSges(3,1) + rSges(3,3)) * m(3) + t21 + Icges(2,2) + Icges(3,3) - Icges(2,1) - Icges(3,1)) + 0.2e1 * t445 * t437 * (m(3) * t448 * rSges(3,1) + Icges(2,4) - Icges(3,5) - t30) + (m(3) * (t35 + t36 + t456 + t457)) + t44 + Icges(2,1) + Icges(3,1) + t48 + Icges(1,3);
t465 = -t428 * t432 + t431 * t429;
t468 = sin(legFrame(6,2));
t470 = t436 * t465 * t445 + t468 * t437;
t471 = t427 * t470;
t477 = t445 * (m(3) * t448 * rSges(3,2) + Icges(2,6) - Icges(3,6) - t64) - t70 * t437;
t482 = t436 * t465 * t437 - t445 * t468;
t485 = -t460 * t439 * t435 + t79 * t437 * t482 + t477 * t471;
t488 = t438 * t436 * t434;
t494 = m(3) * (t88 + t36 + t456 + t457) + t92 + Icges(3,2) + Icges(2,3);
t496 = m(3) * t482;
t498 = -t477 * t439 * t435 - rSges(3,1) * t496 + t494 * t471;
t505 = -rSges(3,2) * m(3) * t436 * t435 - t103 * t471 + t496;
t507 = -t84 * t1 * t81 + t1 * t59 * t97 + t77 * t105 - t168 * t107 * t165 + t107 * t150 * t178 + t162 * t185 - t248 * t187 * t245 + t187 * t230 * t258 + t242 * t265 - t328 * t267 * t325 + t267 * t310 * t338 + t322 * t345 - t408 * t347 * t405 + t347 * t390 * t418 + t402 * t425 - t488 * t427 * t485 + t427 * t470 * t498 + t482 * t505 + m(4);
t508 = cos(legFrame(1,1));
t510 = sin(legFrame(1,1));
t513 = -t8 * t510 * t57 + t508 * t54;
t515 = t12 * t1;
t517 = t54 * t57;
t520 = t8 * t508 + t510 * t517;
t524 = -t10 * t11 * t510 + t23 * t520;
t530 = t23 * t10 * t510 + t11 * t520;
t532 = cos(legFrame(2,1));
t534 = sin(legFrame(2,1));
t537 = -t114 * t534 * t148 + t532 * t145;
t539 = t118 * t107;
t541 = t145 * t148;
t544 = t114 * t532 + t534 * t541;
t548 = -t116 * t117 * t534 + t125 * t544;
t554 = t125 * t116 * t534 + t117 * t544;
t556 = cos(legFrame(3,1));
t558 = sin(legFrame(3,1));
t561 = -t194 * t558 * t228 + t556 * t225;
t563 = t198 * t187;
t565 = t225 * t228;
t568 = t194 * t556 + t558 * t565;
t572 = -t196 * t197 * t558 + t205 * t568;
t578 = t205 * t196 * t558 + t197 * t568;
t580 = cos(legFrame(4,1));
t582 = sin(legFrame(4,1));
t585 = -t274 * t582 * t308 + t580 * t305;
t587 = t278 * t267;
t589 = t305 * t308;
t592 = t274 * t580 + t582 * t589;
t596 = -t276 * t277 * t582 + t285 * t592;
t602 = t285 * t276 * t582 + t277 * t592;
t604 = cos(legFrame(5,1));
t606 = sin(legFrame(5,1));
t609 = -t354 * t606 * t388 + t604 * t385;
t611 = t358 * t347;
t613 = t385 * t388;
t616 = t354 * t604 + t606 * t613;
t620 = -t356 * t357 * t606 + t365 * t616;
t626 = t365 * t356 * t606 + t357 * t616;
t628 = cos(legFrame(6,1));
t630 = sin(legFrame(6,1));
t633 = -t434 * t630 * t468 + t628 * t465;
t635 = t438 * t427;
t637 = t465 * t468;
t640 = t434 * t628 + t630 * t637;
t644 = -t436 * t437 * t630 + t445 * t640;
t650 = t445 * t436 * t630 + t437 * t640;
t652 = t515 * t513 * t81 + t1 * t524 * t97 + t530 * t105 + t539 * t537 * t165 + t107 * t548 * t178 + t554 * t185 + t563 * t561 * t245 + t187 * t572 * t258 + t578 * t265 + t587 * t585 * t325 + t267 * t596 * t338 + t602 * t345 + t611 * t609 * t405 + t347 * t620 * t418 + t626 * t425 + t635 * t633 * t485 + t427 * t644 * t498 + t650 * t505;
t656 = t508 * t8 * t57 + t54 * t510;
t661 = -t508 * t517 + t8 * t510;
t665 = t10 * t11 * t508 + t23 * t661;
t671 = -t23 * t10 * t508 + t11 * t661;
t676 = t532 * t114 * t148 + t145 * t534;
t681 = t114 * t534 - t532 * t541;
t685 = t116 * t117 * t532 + t125 * t681;
t691 = -t125 * t116 * t532 + t117 * t681;
t696 = t556 * t194 * t228 + t225 * t558;
t701 = t194 * t558 - t556 * t565;
t705 = t196 * t197 * t556 + t205 * t701;
t711 = -t205 * t196 * t556 + t197 * t701;
t716 = t580 * t274 * t308 + t305 * t582;
t721 = t274 * t582 - t580 * t589;
t725 = t276 * t277 * t580 + t285 * t721;
t731 = -t285 * t276 * t580 + t277 * t721;
t736 = t604 * t354 * t388 + t385 * t606;
t741 = t354 * t606 - t604 * t613;
t745 = t356 * t357 * t604 + t365 * t741;
t751 = -t365 * t356 * t604 + t357 * t741;
t756 = t628 * t434 * t468 + t465 * t630;
t761 = t434 * t630 - t628 * t637;
t765 = t436 * t437 * t628 + t445 * t761;
t771 = -t445 * t436 * t628 + t437 * t761;
t773 = t515 * t656 * t81 + t1 * t665 * t97 + t671 * t105 + t539 * t676 * t165 + t107 * t685 * t178 + t691 * t185 + t563 * t696 * t245 + t187 * t705 * t258 + t711 * t265 + t587 * t716 * t325 + t267 * t725 * t338 + t731 * t345 + t611 * t736 * t405 + t347 * t745 * t418 + t751 * t425 + t635 * t756 * t485 + t427 * t765 * t498 + t771 * t505;
t774 = sin(xP(6));
t776 = cos(xP(6));
t778 = -koppelP(1,2) * t774 + t776 * koppelP(1,1);
t779 = sin(xP(5));
t781 = cos(xP(5));
t782 = koppelP(1,3) * t781;
t783 = t779 * t778 - t782;
t784 = cos(xP(4));
t786 = sin(xP(4));
t789 = koppelP(1,1) * t774 + t776 * koppelP(1,2);
t790 = t789 * t786;
t791 = t784 * t783 - t790;
t795 = t789 * t784;
t796 = t786 * t783 + t795;
t799 = t515 * t513 * t791 + t515 * t656 * t796;
t800 = t799 * t81;
t805 = t1 * t524 * t791 + t1 * t665 * t796;
t806 = t805 * t97;
t809 = t530 * t791 + t671 * t796;
t810 = t809 * t105;
t813 = -koppelP(2,2) * t774 + t776 * koppelP(2,1);
t815 = koppelP(2,3) * t781;
t816 = t779 * t813 - t815;
t820 = koppelP(2,1) * t774 + t776 * koppelP(2,2);
t821 = t820 * t786;
t822 = t784 * t816 - t821;
t826 = t820 * t784;
t827 = t786 * t816 + t826;
t830 = t539 * t537 * t822 + t539 * t676 * t827;
t831 = t830 * t165;
t836 = t107 * t548 * t822 + t107 * t685 * t827;
t837 = t836 * t178;
t840 = t554 * t822 + t691 * t827;
t841 = t840 * t185;
t844 = -koppelP(3,2) * t774 + t776 * koppelP(3,1);
t846 = koppelP(3,3) * t781;
t847 = t779 * t844 - t846;
t851 = koppelP(3,1) * t774 + t776 * koppelP(3,2);
t852 = t851 * t786;
t853 = t784 * t847 - t852;
t857 = t851 * t784;
t858 = t786 * t847 + t857;
t861 = t563 * t561 * t853 + t563 * t696 * t858;
t862 = t861 * t245;
t867 = t187 * t572 * t853 + t187 * t705 * t858;
t868 = t867 * t258;
t871 = t578 * t853 + t711 * t858;
t872 = t871 * t265;
t875 = -koppelP(4,2) * t774 + t776 * koppelP(4,1);
t877 = koppelP(4,3) * t781;
t878 = t779 * t875 - t877;
t882 = koppelP(4,1) * t774 + t776 * koppelP(4,2);
t883 = t882 * t786;
t884 = t784 * t878 - t883;
t888 = t882 * t784;
t889 = t786 * t878 + t888;
t892 = t587 * t585 * t884 + t587 * t716 * t889;
t893 = t892 * t325;
t898 = t267 * t596 * t884 + t267 * t725 * t889;
t899 = t898 * t338;
t902 = t602 * t884 + t731 * t889;
t903 = t902 * t345;
t906 = -koppelP(5,2) * t774 + t776 * koppelP(5,1);
t908 = koppelP(5,3) * t781;
t909 = t779 * t906 - t908;
t913 = koppelP(5,1) * t774 + t776 * koppelP(5,2);
t914 = t913 * t786;
t915 = t784 * t909 - t914;
t919 = t913 * t784;
t920 = t786 * t909 + t919;
t923 = t611 * t609 * t915 + t611 * t736 * t920;
t924 = t923 * t405;
t929 = t347 * t620 * t915 + t347 * t745 * t920;
t930 = t929 * t418;
t933 = t626 * t915 + t751 * t920;
t934 = t933 * t425;
t937 = -koppelP(6,2) * t774 + t776 * koppelP(6,1);
t939 = koppelP(6,3) * t781;
t940 = t779 * t937 - t939;
t944 = koppelP(6,1) * t774 + t776 * koppelP(6,2);
t945 = t944 * t786;
t946 = t784 * t940 - t945;
t950 = t944 * t784;
t951 = t786 * t940 + t950;
t954 = t635 * t633 * t946 + t635 * t756 * t951;
t955 = t954 * t485;
t960 = t427 * t644 * t946 + t427 * t765 * t951;
t961 = t960 * t498;
t964 = t650 * t946 + t771 * t951;
t965 = t964 * t505;
t966 = t800 + t806 + t810 + t831 + t837 + t841 + t862 + t868 + t872 + t893 + t899 + t903 + t924 + t930 + t934 + t955 + t961 + t965;
t968 = -t779 * t778 + t782;
t970 = t784 * t968 + t790;
t973 = t776 * t781;
t975 = t774 * t781;
t978 = -koppelP(1,3) * t779 - koppelP(1,1) * t973 + koppelP(1,2) * t975;
t981 = -t84 * t1 * t970 + t515 * t656 * t978;
t987 = t1 * t59 * t970 + t1 * t665 * t978;
t991 = t671 * t978 + t77 * t970;
t993 = t991 * t105 + t981 * t81 + t987 * t97;
t996 = t786 * t968 - t795;
t1001 = -t84 * t1 * t996 - t515 * t513 * t978;
t1007 = -t1 * t524 * t978 + t1 * t59 * t996;
t1011 = -t530 * t978 + t77 * t996;
t1013 = t1001 * t81 + t1007 * t97 + t1011 * t105;
t1016 = -t779 * t813 + t815;
t1018 = t784 * t1016 + t821;
t1024 = -koppelP(2,3) * t779 - koppelP(2,1) * t973 + koppelP(2,2) * t975;
t1027 = -t168 * t107 * t1018 + t539 * t676 * t1024;
t1033 = t107 * t150 * t1018 + t107 * t685 * t1024;
t1037 = t162 * t1018 + t691 * t1024;
t1039 = t1027 * t165 + t1033 * t178 + t1037 * t185;
t1042 = t786 * t1016 - t826;
t1047 = -t539 * t537 * t1024 - t168 * t107 * t1042;
t1053 = -t107 * t548 * t1024 + t107 * t150 * t1042;
t1057 = -t554 * t1024 + t162 * t1042;
t1059 = t1047 * t165 + t1053 * t178 + t1057 * t185;
t1062 = -t779 * t844 + t846;
t1064 = t784 * t1062 + t852;
t1070 = -koppelP(3,3) * t779 - koppelP(3,1) * t973 + koppelP(3,2) * t975;
t1073 = -t248 * t187 * t1064 + t563 * t696 * t1070;
t1079 = t187 * t230 * t1064 + t187 * t705 * t1070;
t1083 = t242 * t1064 + t711 * t1070;
t1085 = t1073 * t245 + t1079 * t258 + t1083 * t265;
t1088 = t786 * t1062 - t857;
t1093 = -t563 * t561 * t1070 - t248 * t187 * t1088;
t1099 = -t187 * t572 * t1070 + t187 * t230 * t1088;
t1103 = -t578 * t1070 + t242 * t1088;
t1105 = t1093 * t245 + t1099 * t258 + t1103 * t265;
t1108 = -t779 * t875 + t877;
t1110 = t784 * t1108 + t883;
t1116 = -koppelP(4,3) * t779 - koppelP(4,1) * t973 + koppelP(4,2) * t975;
t1119 = -t328 * t267 * t1110 + t587 * t716 * t1116;
t1125 = t267 * t310 * t1110 + t267 * t725 * t1116;
t1129 = t322 * t1110 + t731 * t1116;
t1131 = t1119 * t325 + t1125 * t338 + t1129 * t345;
t1134 = t786 * t1108 - t888;
t1139 = -t587 * t585 * t1116 - t328 * t267 * t1134;
t1145 = -t267 * t596 * t1116 + t267 * t310 * t1134;
t1149 = -t602 * t1116 + t322 * t1134;
t1151 = t1139 * t325 + t1145 * t338 + t1149 * t345;
t1154 = -t779 * t906 + t908;
t1156 = t784 * t1154 + t914;
t1162 = -koppelP(5,3) * t779 - koppelP(5,1) * t973 + koppelP(5,2) * t975;
t1165 = -t408 * t347 * t1156 + t611 * t736 * t1162;
t1171 = t347 * t390 * t1156 + t347 * t745 * t1162;
t1175 = t402 * t1156 + t751 * t1162;
t1177 = t1165 * t405 + t1171 * t418 + t1175 * t425;
t1180 = t786 * t1154 - t919;
t1185 = -t611 * t609 * t1162 - t408 * t347 * t1180;
t1191 = -t347 * t620 * t1162 + t347 * t390 * t1180;
t1195 = -t626 * t1162 + t402 * t1180;
t1197 = t1185 * t405 + t1191 * t418 + t1195 * t425;
t1200 = -t779 * t937 + t939;
t1202 = t784 * t1200 + t945;
t1208 = -koppelP(6,3) * t779 - koppelP(6,1) * t973 + koppelP(6,2) * t975;
t1211 = -t488 * t427 * t1202 + t635 * t756 * t1208;
t1217 = t427 * t470 * t1202 + t427 * t765 * t1208;
t1221 = t482 * t1202 + t771 * t1208;
t1223 = t1211 * t485 + t1217 * t498 + t1221 * t505;
t1226 = t786 * t1200 - t950;
t1231 = -t635 * t633 * t1208 - t488 * t427 * t1226;
t1237 = -t427 * t644 * t1208 + t427 * t470 * t1226;
t1241 = -t650 * t1208 + t482 * t1226;
t1243 = t1231 * t485 + t1237 * t498 + t1241 * t505;
t1247 = rSges(4,2) * t774 - rSges(4,1) * t776;
t1249 = rSges(4,3) * t781;
t1252 = t784 * t993 + t786 * t1013 + t784 * t1039 + t786 * t1059 + t784 * t1085 + t786 * t1105 + t784 * t1131 + t786 * t1151 + t784 * t1177 + t786 * t1197 + t784 * t1223 + t786 * t1243 + (t779 * t1247 + t1249) * m(4);
t1292 = rSges(4,1) * t774 + rSges(4,2) * t776;
t1294 = t779 * (t800 + t806 + t810) - t781 * t786 * t993 + t781 * t784 * t1013 + t779 * (t831 + t837 + t841) - t781 * t786 * t1039 + t781 * t784 * t1059 + t779 * (t862 + t868 + t872) - t781 * t786 * t1085 + t781 * t784 * t1105 + t779 * (t893 + t899 + t903) - t781 * t786 * t1131 + t781 * t784 * t1151 + t779 * (t924 + t930 + t934) - t781 * t786 * t1177 + t781 * t784 * t1197 + t779 * (t955 + t961 + t965) - t781 * t786 * t1223 + t781 * t784 * t1243 - t1292 * t781 * m(4);
t1295 = t1 * t513;
t1296 = t49 * t12;
t1298 = t1 * t524;
t1302 = t79 * t11 * t530 + t1296 * t1295 + t72 * t1298;
t1305 = t72 * t12;
t1308 = m(3) * t530;
t1310 = -rSges(3,1) * t1308 + t1305 * t1295 + t93 * t1298;
t1315 = -t103 * t1298 + t79 * t1295 + t1308;
t1317 = t107 * t537;
t1318 = t140 * t118;
t1320 = t107 * t548;
t1324 = t79 * t117 * t554 + t1318 * t1317 + t157 * t1320;
t1327 = t157 * t118;
t1330 = m(3) * t554;
t1332 = -rSges(3,1) * t1330 + t1327 * t1317 + t174 * t1320;
t1337 = -t103 * t1320 + t79 * t1317 + t1330;
t1339 = t187 * t561;
t1340 = t220 * t198;
t1342 = t187 * t572;
t1346 = t79 * t197 * t578 + t1340 * t1339 + t237 * t1342;
t1349 = t237 * t198;
t1352 = m(3) * t578;
t1354 = -rSges(3,1) * t1352 + t1349 * t1339 + t254 * t1342;
t1359 = -t103 * t1342 + t79 * t1339 + t1352;
t1361 = t267 * t585;
t1362 = t300 * t278;
t1364 = t267 * t596;
t1368 = t79 * t277 * t602 + t1362 * t1361 + t317 * t1364;
t1371 = t317 * t278;
t1374 = m(3) * t602;
t1376 = -rSges(3,1) * t1374 + t1371 * t1361 + t334 * t1364;
t1381 = -t103 * t1364 + t79 * t1361 + t1374;
t1383 = t347 * t609;
t1384 = t380 * t358;
t1386 = t347 * t620;
t1390 = t79 * t357 * t626 + t1384 * t1383 + t397 * t1386;
t1393 = t397 * t358;
t1396 = m(3) * t626;
t1398 = -rSges(3,1) * t1396 + t1393 * t1383 + t414 * t1386;
t1403 = -t103 * t1386 + t79 * t1383 + t1396;
t1405 = t427 * t633;
t1406 = t460 * t438;
t1408 = t427 * t644;
t1412 = t79 * t437 * t650 + t1406 * t1405 + t477 * t1408;
t1415 = t477 * t438;
t1418 = m(3) * t650;
t1420 = -rSges(3,1) * t1418 + t1415 * t1405 + t494 * t1408;
t1425 = -t103 * t1408 + t79 * t1405 + t1418;
t1427 = -t84 * t1 * t1302 + t1 * t59 * t1310 + t77 * t1315 - t168 * t107 * t1324 + t107 * t150 * t1332 + t162 * t1337 - t248 * t187 * t1346 + t187 * t230 * t1354 + t242 * t1359 - t328 * t267 * t1368 + t267 * t310 * t1376 + t322 * t1381 - t408 * t347 * t1390 + t347 * t390 * t1398 + t402 * t1403 - t488 * t427 * t1412 + t427 * t470 * t1420 + t482 * t1425;
t1458 = t515 * t513 * t1302 + t1 * t524 * t1310 + t530 * t1315 + t539 * t537 * t1324 + t107 * t548 * t1332 + t554 * t1337 + t563 * t561 * t1346 + t187 * t572 * t1354 + t578 * t1359 + t587 * t585 * t1368 + t267 * t596 * t1376 + t602 * t1381 + t611 * t609 * t1390 + t347 * t620 * t1398 + t626 * t1403 + t635 * t633 * t1412 + t427 * t644 * t1420 + t650 * t1425 + m(4);
t1489 = t515 * t656 * t1302 + t1 * t665 * t1310 + t671 * t1315 + t539 * t676 * t1324 + t107 * t685 * t1332 + t691 * t1337 + t563 * t696 * t1346 + t187 * t705 * t1354 + t711 * t1359 + t587 * t716 * t1368 + t267 * t725 * t1376 + t731 * t1381 + t611 * t736 * t1390 + t347 * t745 * t1398 + t751 * t1403 + t635 * t756 * t1412 + t427 * t765 * t1420 + t771 * t1425;
t1490 = t799 * t1302;
t1491 = t805 * t1310;
t1492 = t809 * t1315;
t1493 = t830 * t1324;
t1494 = t836 * t1332;
t1495 = t840 * t1337;
t1496 = t861 * t1346;
t1497 = t867 * t1354;
t1498 = t871 * t1359;
t1499 = t892 * t1368;
t1500 = t898 * t1376;
t1501 = t902 * t1381;
t1502 = t923 * t1390;
t1503 = t929 * t1398;
t1504 = t933 * t1403;
t1505 = t954 * t1412;
t1506 = t960 * t1420;
t1507 = t964 * t1425;
t1512 = rSges(4,2) * t774 * t779 - rSges(4,1) * t776 * t779 + t1249;
t1516 = (t1292 * t786 + t784 * t1512) * m(4);
t1517 = t1490 + t1491 + t1492 + t1493 + t1494 + t1495 + t1496 + t1497 + t1498 + t1499 + t1500 + t1501 + t1502 + t1503 + t1504 + t1505 + t1506 + t1507 - t1516;
t1521 = t981 * t1302 + t987 * t1310 + t991 * t1315;
t1526 = t1001 * t1302 + t1007 * t1310 + t1011 * t1315;
t1531 = t1027 * t1324 + t1033 * t1332 + t1037 * t1337;
t1536 = t1047 * t1324 + t1053 * t1332 + t1057 * t1337;
t1541 = t1073 * t1346 + t1079 * t1354 + t1083 * t1359;
t1546 = t1093 * t1346 + t1099 * t1354 + t1103 * t1359;
t1551 = t1119 * t1368 + t1125 * t1376 + t1129 * t1381;
t1556 = t1139 * t1368 + t1145 * t1376 + t1149 * t1381;
t1561 = t1165 * t1390 + t1171 * t1398 + t1175 * t1403;
t1566 = t1185 * t1390 + t1191 * t1398 + t1195 * t1403;
t1571 = t1211 * t1412 + t1217 * t1420 + t1221 * t1425;
t1576 = t1231 * t1412 + t1237 * t1420 + t1241 * t1425;
t1580 = rSges(4,3) * t779;
t1582 = (rSges(4,1) * t973 - rSges(4,2) * t975 + t1580) * m(4);
t1584 = t784 * t1521 + t786 * t1526 + t784 * t1531 + t786 * t1536 + t784 * t1541 + t786 * t1546 + t784 * t1551 + t786 * t1556 + t784 * t1561 + t786 * t1566 + t784 * t1571 + t786 * t1576 + t786 * t1582;
t1633 = t779 * (t1490 + t1491 + t1492) - t781 * t786 * t1521 + t781 * t784 * t1526 + t779 * (t1493 + t1494 + t1495) - t781 * t786 * t1531 + t781 * t784 * t1536 + t779 * (t1496 + t1497 + t1498) - t781 * t786 * t1541 + t781 * t784 * t1546 + t779 * (t1499 + t1500 + t1501) - t781 * t786 * t1551 + t781 * t784 * t1556 + t779 * (t1502 + t1503 + t1504) - t781 * t786 * t1561 + t781 * t784 * t1566 + t779 * (t1505 + t1506 + t1507) - t781 * t786 * t1571 + t781 * t784 * t1576 - (t776 * (t786 * rSges(4,2) * t779 - t784 * rSges(4,1)) + (t786 * rSges(4,1) * t779 + rSges(4,2) * t784) * t774) * m(4);
t1634 = t1 * t656;
t1636 = t1 * t665;
t1640 = t79 * t11 * t671 + t1296 * t1634 + t72 * t1636;
t1645 = m(3) * t671;
t1647 = -rSges(3,1) * t1645 + t1305 * t1634 + t93 * t1636;
t1652 = -t103 * t1636 + t79 * t1634 + t1645;
t1654 = t107 * t676;
t1656 = t107 * t685;
t1660 = t79 * t117 * t691 + t1318 * t1654 + t157 * t1656;
t1665 = m(3) * t691;
t1667 = -rSges(3,1) * t1665 + t1327 * t1654 + t174 * t1656;
t1672 = -t103 * t1656 + t79 * t1654 + t1665;
t1674 = t187 * t696;
t1676 = t187 * t705;
t1680 = t79 * t197 * t711 + t1340 * t1674 + t237 * t1676;
t1685 = m(3) * t711;
t1687 = -rSges(3,1) * t1685 + t1349 * t1674 + t254 * t1676;
t1692 = -t103 * t1676 + t79 * t1674 + t1685;
t1694 = t267 * t716;
t1696 = t267 * t725;
t1700 = t79 * t277 * t731 + t1362 * t1694 + t317 * t1696;
t1705 = m(3) * t731;
t1707 = -rSges(3,1) * t1705 + t1371 * t1694 + t334 * t1696;
t1712 = -t103 * t1696 + t79 * t1694 + t1705;
t1714 = t347 * t736;
t1716 = t347 * t745;
t1720 = t79 * t357 * t751 + t1384 * t1714 + t397 * t1716;
t1725 = m(3) * t751;
t1727 = -rSges(3,1) * t1725 + t1393 * t1714 + t414 * t1716;
t1732 = -t103 * t1716 + t79 * t1714 + t1725;
t1734 = t427 * t756;
t1736 = t427 * t765;
t1740 = t79 * t437 * t771 + t1406 * t1734 + t477 * t1736;
t1745 = m(3) * t771;
t1747 = -rSges(3,1) * t1745 + t1415 * t1734 + t494 * t1736;
t1752 = -t103 * t1736 + t79 * t1734 + t1745;
t1754 = -t84 * t1 * t1640 + t1 * t59 * t1647 + t77 * t1652 - t168 * t107 * t1660 + t107 * t150 * t1667 + t162 * t1672 - t248 * t187 * t1680 + t187 * t230 * t1687 + t242 * t1692 - t328 * t267 * t1700 + t267 * t310 * t1707 + t322 * t1712 - t408 * t347 * t1720 + t347 * t390 * t1727 + t402 * t1732 - t488 * t427 * t1740 + t427 * t470 * t1747 + t482 * t1752;
t1785 = t515 * t513 * t1640 + t1 * t524 * t1647 + t530 * t1652 + t539 * t537 * t1660 + t107 * t548 * t1667 + t554 * t1672 + t563 * t561 * t1680 + t187 * t572 * t1687 + t578 * t1692 + t587 * t585 * t1700 + t267 * t596 * t1707 + t602 * t1712 + t611 * t609 * t1720 + t347 * t620 * t1727 + t626 * t1732 + t635 * t633 * t1740 + t427 * t644 * t1747 + t650 * t1752;
t1816 = t515 * t656 * t1640 + t1 * t665 * t1647 + t671 * t1652 + t539 * t676 * t1660 + t107 * t685 * t1667 + t691 * t1672 + t563 * t696 * t1680 + t187 * t705 * t1687 + t711 * t1692 + t587 * t716 * t1700 + t267 * t725 * t1707 + t731 * t1712 + t611 * t736 * t1720 + t347 * t745 * t1727 + t751 * t1732 + t635 * t756 * t1740 + t427 * t765 * t1747 + t771 * t1752 + m(4);
t1817 = t799 * t1640;
t1818 = t805 * t1647;
t1819 = t809 * t1652;
t1820 = t830 * t1660;
t1821 = t836 * t1667;
t1822 = t840 * t1672;
t1823 = t861 * t1680;
t1824 = t867 * t1687;
t1825 = t871 * t1692;
t1826 = t892 * t1700;
t1827 = t898 * t1707;
t1828 = t902 * t1712;
t1829 = t923 * t1720;
t1830 = t929 * t1727;
t1831 = t933 * t1732;
t1832 = t954 * t1740;
t1833 = t960 * t1747;
t1834 = t964 * t1752;
t1838 = (t1292 * t784 - t786 * t1512) * m(4);
t1839 = t1817 + t1818 + t1819 + t1820 + t1821 + t1822 + t1823 + t1824 + t1825 + t1826 + t1827 + t1828 + t1829 + t1830 + t1831 + t1832 + t1833 + t1834 + t1838;
t1843 = t981 * t1640 + t987 * t1647 + t991 * t1652;
t1848 = t1001 * t1640 + t1007 * t1647 + t1011 * t1652;
t1853 = t1027 * t1660 + t1033 * t1667 + t1037 * t1672;
t1858 = t1047 * t1660 + t1053 * t1667 + t1057 * t1672;
t1863 = t1073 * t1680 + t1079 * t1687 + t1083 * t1692;
t1868 = t1093 * t1680 + t1099 * t1687 + t1103 * t1692;
t1873 = t1119 * t1700 + t1125 * t1707 + t1129 * t1712;
t1878 = t1139 * t1700 + t1145 * t1707 + t1149 * t1712;
t1883 = t1165 * t1720 + t1171 * t1727 + t1175 * t1732;
t1888 = t1185 * t1720 + t1191 * t1727 + t1195 * t1732;
t1893 = t1211 * t1740 + t1217 * t1747 + t1221 * t1752;
t1898 = t1231 * t1740 + t1237 * t1747 + t1241 * t1752;
t1902 = m(4) * (t781 * t1247 - t1580);
t1904 = t784 * t1843 + t786 * t1848 + t784 * t1853 + t786 * t1858 + t784 * t1863 + t786 * t1868 + t784 * t1873 + t786 * t1878 + t784 * t1883 + t786 * t1888 + t784 * t1893 + t786 * t1898 + t784 * t1902;
t1946 = t779 * (t1817 + t1818 + t1819) - t781 * t786 * t1843 + t781 * t784 * t1848 + t779 * (t1820 + t1821 + t1822) - t781 * t786 * t1853 + t781 * t784 * t1858 + t779 * (t1823 + t1824 + t1825) - t781 * t786 * t1863 + t781 * t784 * t1868 + t779 * (t1826 + t1827 + t1828) - t781 * t786 * t1873 + t781 * t784 * t1878 + t779 * (t1829 + t1830 + t1831) - t781 * t786 * t1883 + t781 * t784 * t1888 + t779 * (t1832 + t1833 + t1834) - t781 * t786 * t1893 + t781 * t784 * t1898 + (t784 * t1292 * t779 - t1247 * t786) * m(4);
t1951 = t79 * t11 * t809 + t49 * t799 + t72 * t805;
t1956 = m(3) * t809;
t1958 = -rSges(3,1) * t1956 + t72 * t799 + t93 * t805;
t1965 = -rSges(3,1) * m(3) * t805 + t79 * t11 * t799 + t1956;
t1971 = t79 * t117 * t840 + t140 * t830 + t157 * t836;
t1976 = m(3) * t840;
t1978 = -rSges(3,1) * t1976 + t157 * t830 + t174 * t836;
t1985 = -rSges(3,1) * m(3) * t836 + t79 * t117 * t830 + t1976;
t1991 = t79 * t197 * t871 + t220 * t861 + t237 * t867;
t1996 = m(3) * t871;
t1998 = -rSges(3,1) * t1996 + t237 * t861 + t254 * t867;
t2005 = -rSges(3,1) * m(3) * t867 + t79 * t197 * t861 + t1996;
t2011 = t79 * t277 * t902 + t300 * t892 + t317 * t898;
t2016 = m(3) * t902;
t2018 = -rSges(3,1) * t2016 + t317 * t892 + t334 * t898;
t2025 = -rSges(3,1) * m(3) * t898 + t79 * t277 * t892 + t2016;
t2031 = t79 * t357 * t933 + t380 * t923 + t397 * t929;
t2036 = m(3) * t933;
t2038 = -rSges(3,1) * t2036 + t397 * t923 + t414 * t929;
t2045 = -rSges(3,1) * m(3) * t929 + t79 * t357 * t923 + t2036;
t2051 = t79 * t437 * t964 + t460 * t954 + t477 * t960;
t2056 = m(3) * t964;
t2058 = -rSges(3,1) * t2056 + t477 * t954 + t494 * t960;
t2065 = -rSges(3,1) * m(3) * t960 + t79 * t437 * t954 + t2056;
t2067 = -t84 * t1 * t1951 + t1 * t59 * t1958 + t77 * t1965 - t168 * t107 * t1971 + t107 * t150 * t1978 + t162 * t1985 - t248 * t187 * t1991 + t187 * t230 * t1998 + t242 * t2005 - t328 * t267 * t2011 + t267 * t310 * t2018 + t322 * t2025 - t408 * t347 * t2031 + t347 * t390 * t2038 + t402 * t2045 - t488 * t427 * t2051 + t427 * t470 * t2058 + t482 * t2065;
t2098 = t515 * t513 * t1951 + t1 * t524 * t1958 + t530 * t1965 + t539 * t537 * t1971 + t107 * t548 * t1978 + t554 * t1985 + t563 * t561 * t1991 + t187 * t572 * t1998 + t578 * t2005 + t587 * t585 * t2011 + t267 * t596 * t2018 + t602 * t2025 + t611 * t609 * t2031 + t347 * t620 * t2038 + t626 * t2045 + t635 * t633 * t2051 + t427 * t644 * t2058 + t650 * t2065 - t1516;
t2129 = t515 * t656 * t1951 + t1 * t665 * t1958 + t671 * t1965 + t539 * t676 * t1971 + t107 * t685 * t1978 + t691 * t1985 + t563 * t696 * t1991 + t187 * t705 * t1998 + t711 * t2005 + t587 * t716 * t2011 + t267 * t725 * t2018 + t731 * t2025 + t611 * t736 * t2031 + t347 * t745 * t2038 + t751 * t2045 + t635 * t756 * t2051 + t427 * t765 * t2058 + t771 * t2065 + t1838;
t2130 = t799 * t1951;
t2131 = t805 * t1958;
t2132 = t809 * t1965;
t2133 = t830 * t1971;
t2134 = t836 * t1978;
t2135 = t840 * t1985;
t2136 = t861 * t1991;
t2137 = t867 * t1998;
t2138 = t871 * t2005;
t2139 = t892 * t2011;
t2140 = t898 * t2018;
t2141 = t2130 + t2131 + t2132 + t2133 + t2134 + t2135 + t2136 + t2137 + t2138 + t2139 + t2140;
t2142 = t902 * t2025;
t2143 = t923 * t2031;
t2144 = t929 * t2038;
t2145 = t933 * t2045;
t2146 = t954 * t2051;
t2147 = t960 * t2058;
t2148 = t964 * t2065;
t2149 = rSges(4,1) ^ 2;
t2150 = rSges(4,2) ^ 2;
t2153 = m(4) * (-t2149 + t2150) + Icges(4,1) - Icges(4,2);
t2154 = t776 ^ 2;
t2156 = rSges(4,1) * m(4);
t2157 = rSges(4,2) * t2156;
t2158 = -t2157 + Icges(4,4);
t2162 = rSges(4,3) ^ 2;
t2164 = m(4) * (-t2150 + t2162);
t2165 = -0.2e1 * t776 * t2158 * t774 + t2154 * t2153 + Icges(4,2) - Icges(4,3) + t2164;
t2166 = t781 ^ 2;
t2169 = rSges(4,3) * t2156 - Icges(4,5);
t2173 = m(4) * rSges(4,2) * rSges(4,3) - Icges(4,6);
t2175 = t776 * t2169 - t2173 * t774;
t2180 = (t2149 + t2150) * m(4);
t2181 = -0.2e1 * t781 * t2175 * t779 + t2166 * t2165 + Icges(4,3) + t2142 + t2143 + t2144 + t2145 + t2146 + t2147 + t2148 + t2180;
t2186 = t981 * t1951 + t987 * t1958 + t991 * t1965;
t2191 = t1001 * t1951 + t1007 * t1958 + t1011 * t1965;
t2196 = t1027 * t1971 + t1033 * t1978 + t1037 * t1985;
t2201 = t1047 * t1971 + t1053 * t1978 + t1057 * t1985;
t2206 = t1073 * t1991 + t1079 * t1998 + t1083 * t2005;
t2211 = t1093 * t1991 + t1099 * t1998 + t1103 * t2005;
t2216 = t1119 * t2011 + t1125 * t2018 + t1129 * t2025;
t2221 = t1139 * t2011 + t1145 * t2018 + t1149 * t2025;
t2226 = t1165 * t2031 + t1171 * t2038 + t1175 * t2045;
t2231 = t1185 * t2031 + t1191 * t2038 + t1195 * t2045;
t2236 = t1211 * t2051 + t1217 * t2058 + t1221 * t2065;
t2241 = t1231 * t2051 + t1237 * t2058 + t1241 * t2065;
t2244 = t2153 * t774;
t2246 = 0.2e1 * t2154 * t2158 + t776 * t2244 - Icges(4,4) + t2157;
t2250 = -t2169 * t774 - t776 * t2173;
t2252 = t784 * t2186 + t786 * t2191 + t784 * t2196 + t786 * t2201 + t784 * t2206 + t786 * t2211 + t784 * t2216 + t786 * t2221 + t784 * t2226 + t786 * t2231 + t784 * t2236 + t786 * t2241 + t781 * t2246 + t2250 * t779;
t2290 = -t2173 * t774;
t2293 = Icges(4,3) + t2180;
t2295 = t779 * (t2130 + t2131 + t2132) - t781 * t786 * t2186 + t781 * t784 * t2191 + t779 * (t2133 + t2134 + t2135) - t781 * t786 * t2196 + t781 * t784 * t2201 + t779 * (t2136 + t2137 + t2138) - t781 * t786 * t2206 + t781 * t784 * t2211 + t779 * (t2139 + t2140 + t2142) - t781 * t786 * t2216 + t781 * t784 * t2221 + t779 * (t2143 + t2144 + t2145) - t781 * t786 * t2226 + t781 * t784 * t2231 + t779 * (t2146 + t2147 + t2148) - t781 * t786 * t2236 + t781 * t784 * t2241 + t781 * (-t776 * t2169 - t2290) + t2293 * t779;
t2300 = t79 * t11 * t991 + t49 * t981 + t72 * t987;
t2305 = m(3) * t991;
t2307 = -rSges(3,1) * t2305 + t72 * t981 + t93 * t987;
t2314 = -rSges(3,1) * m(3) * t987 + t79 * t11 * t981 + t2305;
t2320 = t79 * t117 * t1037 + t140 * t1027 + t157 * t1033;
t2325 = m(3) * t1037;
t2327 = -rSges(3,1) * t2325 + t157 * t1027 + t174 * t1033;
t2334 = -rSges(3,1) * m(3) * t1033 + t79 * t117 * t1027 + t2325;
t2340 = t79 * t197 * t1083 + t220 * t1073 + t237 * t1079;
t2345 = m(3) * t1083;
t2347 = -rSges(3,1) * t2345 + t237 * t1073 + t254 * t1079;
t2354 = -rSges(3,1) * m(3) * t1079 + t79 * t197 * t1073 + t2345;
t2360 = t79 * t277 * t1129 + t300 * t1119 + t317 * t1125;
t2365 = m(3) * t1129;
t2367 = -rSges(3,1) * t2365 + t317 * t1119 + t334 * t1125;
t2374 = -rSges(3,1) * m(3) * t1125 + t79 * t277 * t1119 + t2365;
t2380 = t79 * t357 * t1175 + t380 * t1165 + t397 * t1171;
t2385 = m(3) * t1175;
t2387 = -rSges(3,1) * t2385 + t397 * t1165 + t414 * t1171;
t2394 = -rSges(3,1) * m(3) * t1171 + t79 * t357 * t1165 + t2385;
t2400 = t79 * t437 * t1221 + t460 * t1211 + t477 * t1217;
t2405 = m(3) * t1221;
t2407 = -rSges(3,1) * t2405 + t477 * t1211 + t494 * t1217;
t2414 = -rSges(3,1) * m(3) * t1217 + t79 * t437 * t1211 + t2405;
t2416 = -t84 * t1 * t2300 + t1 * t59 * t2307 + t77 * t2314 - t168 * t107 * t2320 + t107 * t150 * t2327 + t162 * t2334 - t248 * t187 * t2340 + t187 * t230 * t2347 + t242 * t2354 - t328 * t267 * t2360 + t267 * t310 * t2367 + t322 * t2374 - t408 * t347 * t2380 + t347 * t390 * t2387 + t402 * t2394 - t488 * t427 * t2400 + t427 * t470 * t2407 + t482 * t2414 + t1516;
t2447 = t515 * t513 * t2300 + t1 * t524 * t2307 + t530 * t2314 + t539 * t537 * t2320 + t107 * t548 * t2327 + t554 * t2334 + t563 * t561 * t2340 + t187 * t572 * t2347 + t578 * t2354 + t587 * t585 * t2360 + t267 * t596 * t2367 + t602 * t2374 + t611 * t609 * t2380 + t347 * t620 * t2387 + t626 * t2394 + t635 * t633 * t2400 + t427 * t644 * t2407 + t650 * t2414;
t2478 = t515 * t656 * t2300 + t1 * t665 * t2307 + t671 * t2314 + t539 * t676 * t2320 + t107 * t685 * t2327 + t691 * t2334 + t563 * t696 * t2340 + t187 * t705 * t2347 + t711 * t2354 + t587 * t716 * t2360 + t267 * t725 * t2367 + t731 * t2374 + t611 * t736 * t2380 + t347 * t745 * t2387 + t751 * t2394 + t635 * t756 * t2400 + t427 * t765 * t2407 + t771 * t2414 + t1902;
t2479 = t799 * t2300;
t2480 = t805 * t2307;
t2481 = t809 * t2314;
t2482 = t830 * t2320;
t2483 = t836 * t2327;
t2484 = t840 * t2334;
t2485 = t861 * t2340;
t2486 = t867 * t2347;
t2487 = t871 * t2354;
t2488 = t892 * t2360;
t2489 = t898 * t2367;
t2490 = t2479 + t2480 + t2481 + t2482 + t2483 + t2484 + t2485 + t2486 + t2487 + t2488 + t2489;
t2491 = t902 * t2374;
t2492 = t923 * t2380;
t2493 = t929 * t2387;
t2494 = t933 * t2394;
t2495 = t954 * t2400;
t2496 = t960 * t2407;
t2497 = t964 * t2414;
t2503 = t2158 * t784;
t2507 = t2158 * t779;
t2511 = t2153 * t784 - 0.2e1 * t786 * t2507;
t2520 = t779 * t784;
t2528 = t2491 + t2492 + t2493 + t2494 + t2495 + t2496 + t2497 + 0.2e1 * t2166 * t2175 * t786 + t781 * (t2154 * (t786 * t779 * t2153 + 0.2e1 * t2503) + t776 * t2511 * t774 + t786 * t779 * (t2164 + Icges(4,2) - Icges(4,3)) - t2503) + t776 * (-t786 * t2169 - t2173 * t2520) - (t2169 * t2520 - t786 * t2173) * t774;
t2533 = t981 * t2300 + t987 * t2307 + t991 * t2314;
t2538 = t1001 * t2300 + t1007 * t2307 + t1011 * t2314;
t2543 = t1027 * t2320 + t1033 * t2327 + t1037 * t2334;
t2548 = t1047 * t2320 + t1053 * t2327 + t1057 * t2334;
t2553 = t1073 * t2340 + t1079 * t2347 + t1083 * t2354;
t2558 = t1093 * t2340 + t1099 * t2347 + t1103 * t2354;
t2563 = t1119 * t2360 + t1125 * t2367 + t1129 * t2374;
t2568 = t1139 * t2360 + t1145 * t2367 + t1149 * t2374;
t2573 = t1165 * t2380 + t1171 * t2387 + t1175 * t2394;
t2578 = t1185 * t2380 + t1191 * t2387 + t1195 * t2394;
t2583 = t1211 * t2400 + t1217 * t2407 + t1221 * t2414;
t2588 = t1231 * t2400 + t1237 * t2407 + t1241 * t2414;
t2593 = t2173 * t781 + t779 * t2244;
t2601 = -t2169 * t975;
t2606 = Icges(4,1) + (t2150 + t2162) * m(4);
t2608 = t784 * t2533 + t786 * t2538 + t784 * t2543 + t786 * t2548 + t784 * t2553 + t786 * t2558 + t784 * t2563 + t786 * t2568 + t784 * t2573 + t786 * t2578 + t784 * t2583 + t786 * t2588 - t2154 * t2511 + t776 * (0.2e1 * t2158 * t774 * t784 + t786 * t2593) + t786 * (-t2158 * t779 - t2601) + t2606 * t784;
t2649 = -t776 * t2169 * t779 - t779 * t2290 - t2293 * t781;
t2652 = t779 * (t2479 + t2480 + t2481) - t781 * t786 * t2533 + t781 * t784 * t2538 + t779 * (t2482 + t2483 + t2484) - t781 * t786 * t2543 + t781 * t784 * t2548 + t779 * (t2485 + t2486 + t2487) - t781 * t786 * t2553 + t781 * t784 * t2558 + t779 * (t2488 + t2489 + t2491) - t781 * t786 * t2563 + t781 * t784 * t2568 + t779 * (t2492 + t2493 + t2494) - t781 * t786 * t2573 + t781 * t784 * t2578 + t779 * (t2495 + t2496 + t2497) - t781 * t786 * t2583 + t781 * t784 * t2588 + t786 * t2649 + t2250 * t784;
t2657 = t79 * t11 * t1011 + t49 * t1001 + t72 * t1007;
t2662 = m(3) * t1011;
t2664 = -rSges(3,1) * t2662 + t72 * t1001 + t93 * t1007;
t2671 = -rSges(3,1) * m(3) * t1007 + t79 * t11 * t1001 + t2662;
t2677 = t79 * t117 * t1057 + t140 * t1047 + t157 * t1053;
t2682 = m(3) * t1057;
t2684 = -rSges(3,1) * t2682 + t157 * t1047 + t174 * t1053;
t2691 = -rSges(3,1) * m(3) * t1053 + t79 * t117 * t1047 + t2682;
t2697 = t79 * t197 * t1103 + t220 * t1093 + t237 * t1099;
t2702 = m(3) * t1103;
t2704 = -rSges(3,1) * t2702 + t237 * t1093 + t254 * t1099;
t2711 = -rSges(3,1) * m(3) * t1099 + t79 * t197 * t1093 + t2702;
t2717 = t79 * t277 * t1149 + t300 * t1139 + t317 * t1145;
t2722 = m(3) * t1149;
t2724 = -rSges(3,1) * t2722 + t317 * t1139 + t334 * t1145;
t2731 = -rSges(3,1) * m(3) * t1145 + t79 * t277 * t1139 + t2722;
t2737 = t79 * t357 * t1195 + t380 * t1185 + t397 * t1191;
t2742 = m(3) * t1195;
t2744 = -rSges(3,1) * t2742 + t397 * t1185 + t414 * t1191;
t2751 = -rSges(3,1) * m(3) * t1191 + t79 * t357 * t1185 + t2742;
t2757 = t79 * t437 * t1241 + t460 * t1231 + t477 * t1237;
t2762 = m(3) * t1241;
t2764 = -rSges(3,1) * t2762 + t477 * t1231 + t494 * t1237;
t2771 = -rSges(3,1) * m(3) * t1237 + t79 * t437 * t1231 + t2762;
t2773 = -t84 * t1 * t2657 + t1 * t59 * t2664 + t77 * t2671 - t168 * t107 * t2677 + t107 * t150 * t2684 + t162 * t2691 - t248 * t187 * t2697 + t187 * t230 * t2704 + t242 * t2711 - t328 * t267 * t2717 + t267 * t310 * t2724 + t322 * t2731 - t408 * t347 * t2737 + t347 * t390 * t2744 + t402 * t2751 - t488 * t427 * t2757 + t427 * t470 * t2764 + t482 * t2771 - t1838;
t2804 = t515 * t513 * t2657 + t1 * t524 * t2664 + t530 * t2671 + t539 * t537 * t2677 + t107 * t548 * t2684 + t554 * t2691 + t563 * t561 * t2697 + t187 * t572 * t2704 + t578 * t2711 + t587 * t585 * t2717 + t267 * t596 * t2724 + t602 * t2731 + t611 * t609 * t2737 + t347 * t620 * t2744 + t626 * t2751 + t635 * t633 * t2757 + t427 * t644 * t2764 + t650 * t2771 + t1582;
t2835 = t515 * t656 * t2657 + t1 * t665 * t2664 + t671 * t2671 + t539 * t676 * t2677 + t107 * t685 * t2684 + t691 * t2691 + t563 * t696 * t2697 + t187 * t705 * t2704 + t711 * t2711 + t587 * t716 * t2717 + t267 * t725 * t2724 + t731 * t2731 + t611 * t736 * t2737 + t347 * t745 * t2744 + t751 * t2751 + t635 * t756 * t2757 + t427 * t765 * t2764 + t771 * t2771;
t2836 = t799 * t2657;
t2837 = t805 * t2664;
t2838 = t809 * t2671;
t2839 = t830 * t2677;
t2840 = t836 * t2684;
t2841 = t840 * t2691;
t2842 = t861 * t2697;
t2843 = t867 * t2704;
t2844 = t871 * t2711;
t2845 = t892 * t2717;
t2846 = t898 * t2724;
t2847 = t2836 + t2837 + t2838 + t2839 + t2840 + t2841 + t2842 + t2843 + t2844 + t2845 + t2846;
t2848 = t902 * t2731;
t2849 = t923 * t2737;
t2850 = t929 * t2744;
t2851 = t933 * t2751;
t2852 = t954 * t2757;
t2853 = t960 * t2764;
t2854 = t964 * t2771;
t2855 = t2175 * t784;
t2868 = t2848 + t2849 + t2850 + t2851 + t2852 + t2853 + t2854 - 0.2e1 * t2166 * t2855 + t781 * (-t784 * t779 * t2165 + t786 * t2246) + t2855 - t779 * (t2169 * t774 + t776 * t2173) * t786;
t2873 = t981 * t2657 + t987 * t2664 + t991 * t2671;
t2878 = t1001 * t2657 + t1007 * t2664 + t1011 * t2671;
t2883 = t1027 * t2677 + t1033 * t2684 + t1037 * t2691;
t2888 = t1047 * t2677 + t1053 * t2684 + t1057 * t2691;
t2893 = t1073 * t2697 + t1079 * t2704 + t1083 * t2711;
t2898 = t1093 * t2697 + t1099 * t2704 + t1103 * t2711;
t2903 = t1119 * t2717 + t1125 * t2724 + t1129 * t2731;
t2908 = t1139 * t2717 + t1145 * t2724 + t1149 * t2731;
t2913 = t1165 * t2737 + t1171 * t2744 + t1175 * t2751;
t2918 = t1185 * t2737 + t1191 * t2744 + t1195 * t2751;
t2923 = t1211 * t2757 + t1217 * t2764 + t1221 * t2771;
t2928 = t1231 * t2757 + t1237 * t2764 + t1241 * t2771;
t2944 = t784 * t2873 + t786 * t2878 + t784 * t2883 + t786 * t2888 + t784 * t2893 + t786 * t2898 + t784 * t2903 + t786 * t2908 + t784 * t2913 + t786 * t2918 + t784 * t2923 + t786 * t2928 + t2154 * (-t2153 * t786 - 0.2e1 * t784 * t2507) + t776 * (0.2e1 * t2158 * t774 * t786 - t784 * t2593) + t784 * (t2507 + t2601) + t2606 * t786;
t2983 = t779 * (t2836 + t2837 + t2838) - t781 * t786 * t2873 + t781 * t784 * t2878 + t779 * (t2839 + t2840 + t2841) - t781 * t786 * t2883 + t781 * t784 * t2888 + t779 * (t2842 + t2843 + t2844) - t781 * t786 * t2893 + t781 * t784 * t2898 + t779 * (t2845 + t2846 + t2848) - t781 * t786 * t2903 + t781 * t784 * t2908 + t779 * (t2849 + t2850 + t2851) - t781 * t786 * t2913 + t781 * t784 * t2918 + t779 * (t2852 + t2853 + t2854) - t781 * t786 * t2923 + t781 * t784 * t2928 - t784 * t2649 + t2250 * t786;
unknown(1,1) = t507;
unknown(1,2) = t652;
unknown(1,3) = t773;
unknown(1,4) = t966;
unknown(1,5) = t1252;
unknown(1,6) = t1294;
unknown(2,1) = t1427;
unknown(2,2) = t1458;
unknown(2,3) = t1489;
unknown(2,4) = t1517;
unknown(2,5) = t1584;
unknown(2,6) = t1633;
unknown(3,1) = t1754;
unknown(3,2) = t1785;
unknown(3,3) = t1816;
unknown(3,4) = t1839;
unknown(3,5) = t1904;
unknown(3,6) = t1946;
unknown(4,1) = t2067;
unknown(4,2) = t2098;
unknown(4,3) = t2129;
unknown(4,4) = t2141 + t2181;
unknown(4,5) = t2252;
unknown(4,6) = t2295;
unknown(5,1) = t2416;
unknown(5,2) = t2447;
unknown(5,3) = t2478;
unknown(5,4) = t2490 + t2528;
unknown(5,5) = t2608;
unknown(5,6) = t2652;
unknown(6,1) = t2773;
unknown(6,2) = t2804;
unknown(6,3) = t2835;
unknown(6,4) = t2847 + t2868;
unknown(6,5) = t2944;
unknown(6,6) = t2983;
MX  = unknown;
