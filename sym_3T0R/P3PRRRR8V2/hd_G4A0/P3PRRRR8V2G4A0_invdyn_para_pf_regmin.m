% Calculate minimal parameter regressor of inverse dynamics forces for
% P3PRRRR8V2G4A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d2,d3,d4,theta1]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [3x12]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 18:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P3PRRRR8V2G4A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3PRRRR8V2G4A0_invdyn_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 18:15:24
% EndTime: 2020-08-06 18:15:47
% DurationCPUTime: 23.87s
% Computational Cost: add. (154245->692), mult. (349098->1319), div. (6291->17), fcn. (346494->34), ass. (0->482)
t371 = cos(qJ(2,1));
t375 = pkin(7) + pkin(6);
t318 = t371 * t375;
t365 = sin(qJ(2,1));
t291 = pkin(2) * t365 - t318;
t345 = sin(pkin(4));
t347 = cos(pkin(4));
t364 = sin(qJ(3,1));
t501 = t347 * t364;
t249 = pkin(3) * t501 + t291 * t345;
t370 = cos(qJ(3,1));
t510 = t345 * t365;
t343 = t370 ^ 2;
t573 = pkin(3) * t343;
t201 = 0.1e1 / (pkin(2) * t501 + t249 * t370 + t510 * t573);
t369 = cos(qJ(2,2));
t317 = t369 * t375;
t363 = sin(qJ(2,2));
t290 = pkin(2) * t363 - t317;
t362 = sin(qJ(3,2));
t503 = t347 * t362;
t248 = pkin(3) * t503 + t290 * t345;
t368 = cos(qJ(3,2));
t511 = t345 * t363;
t342 = t368 ^ 2;
t574 = pkin(3) * t342;
t200 = 0.1e1 / (pkin(2) * t503 + t248 * t368 + t511 * t574);
t367 = cos(qJ(2,3));
t316 = t367 * t375;
t361 = sin(qJ(2,3));
t289 = pkin(2) * t361 - t316;
t360 = sin(qJ(3,3));
t505 = t347 * t360;
t247 = pkin(3) * t505 + t289 * t345;
t366 = cos(qJ(3,3));
t512 = t345 * t361;
t341 = t366 ^ 2;
t575 = pkin(3) * t341;
t199 = 0.1e1 / (pkin(2) * t505 + t247 * t366 + t512 * t575);
t354 = legFrame(3,2);
t332 = sin(t354);
t351 = legFrame(3,1);
t323 = sin(t351);
t329 = cos(t351);
t372 = xDP(3);
t373 = xDP(2);
t390 = t323 * t373 - t329 * t372;
t335 = cos(t354);
t374 = xDP(1);
t515 = t335 * t374;
t232 = t332 * t390 + t515;
t265 = t323 * t372 + t329 * t373;
t344 = sin(pkin(8));
t346 = cos(pkin(8));
t175 = t232 * t346 + t344 * t265;
t348 = legFrame(3,3);
t320 = sin(t348);
t326 = cos(t348);
t396 = t344 * t232 - t265 * t346;
t607 = t320 * t175 + t326 * t396;
t355 = legFrame(2,2);
t333 = sin(t355);
t352 = legFrame(2,1);
t324 = sin(t352);
t330 = cos(t352);
t389 = t324 * t373 - t330 * t372;
t336 = cos(t355);
t514 = t336 * t374;
t233 = t333 * t389 + t514;
t266 = t324 * t372 + t330 * t373;
t176 = t233 * t346 + t344 * t266;
t349 = legFrame(2,3);
t321 = sin(t349);
t327 = cos(t349);
t395 = t344 * t233 - t266 * t346;
t606 = t321 * t176 + t327 * t395;
t356 = legFrame(1,2);
t334 = sin(t356);
t353 = legFrame(1,1);
t325 = sin(t353);
t331 = cos(t353);
t388 = t325 * t373 - t331 * t372;
t337 = cos(t356);
t513 = t337 * t374;
t234 = t334 * t388 + t513;
t267 = t325 * t372 + t331 * t373;
t177 = t234 * t346 + t344 * t267;
t350 = legFrame(1,3);
t322 = sin(t350);
t328 = cos(t350);
t394 = t344 * t234 - t267 * t346;
t605 = t322 * t177 + t328 * t394;
t486 = t361 * t375;
t292 = pkin(2) * t367 + t486;
t489 = t360 * t345;
t384 = pkin(3) * t489 - t289 * t347;
t142 = t232 * t384 + t265 * t292;
t145 = t232 * t292 - t265 * t384;
t504 = t347 * t361;
t169 = -t232 * t504 + t367 * t265;
t170 = t367 * t232 + t265 * t504;
t235 = -t332 * t374 + t335 * t390;
t579 = pkin(2) * t360;
t604 = t199 * (((t169 * t344 + t170 * t346) * t326 + (t169 * t346 - t344 * t170) * t320 - t235 * t512) * t575 + ((t142 * t344 + t145 * t346) * t326 + (t142 * t346 - t145 * t344) * t320 - t235 * t247) * t366 - (t347 * t235 - t607 * t345) * t579);
t482 = t363 * t375;
t293 = pkin(2) * t369 + t482;
t485 = t362 * t345;
t383 = pkin(3) * t485 - t290 * t347;
t143 = t233 * t383 + t266 * t293;
t146 = t233 * t293 - t266 * t383;
t502 = t347 * t363;
t171 = -t233 * t502 + t369 * t266;
t172 = t369 * t233 + t266 * t502;
t236 = -t333 * t374 + t336 * t389;
t578 = pkin(2) * t362;
t603 = t200 * (((t171 * t344 + t172 * t346) * t327 + (t171 * t346 - t344 * t172) * t321 - t236 * t511) * t574 + ((t143 * t344 + t146 * t346) * t327 + (t143 * t346 - t146 * t344) * t321 - t236 * t248) * t368 - (t347 * t236 - t606 * t345) * t578);
t478 = t365 * t375;
t294 = pkin(2) * t371 + t478;
t481 = t364 * t345;
t382 = pkin(3) * t481 - t291 * t347;
t144 = t234 * t382 + t267 * t294;
t147 = t234 * t294 - t267 * t382;
t500 = t347 * t365;
t173 = -t234 * t500 + t371 * t267;
t174 = t371 * t234 + t267 * t500;
t237 = -t334 * t374 + t337 * t388;
t577 = pkin(2) * t364;
t602 = t201 * (((t173 * t344 + t174 * t346) * t328 + (t173 * t346 - t344 * t174) * t322 - t237 * t510) * t573 + ((t144 * t344 + t147 * t346) * t328 + (t144 * t346 - t147 * t344) * t322 - t237 * t249) * t370 - (t347 * t237 - t605 * t345) * t577);
t357 = xDDP(3);
t358 = xDDP(2);
t359 = xDDP(1);
t148 = t175 * t326 - t320 * t396;
t307 = t366 * pkin(3) + pkin(2);
t277 = t361 * t307 - t316;
t530 = (t307 * t367 + t486) * t347;
t118 = -t148 * t530 + t607 * t277;
t286 = t307 * t505;
t477 = t366 * t345;
t229 = t277 * t477 + t286;
t223 = 0.1e1 / t229;
t536 = t223 * t360;
t426 = t118 * t536;
t435 = t361 * t477;
t377 = 0.1e1 / pkin(3);
t557 = t118 * t223;
t444 = t377 * t557;
t495 = t347 * t373;
t431 = t361 * t495;
t496 = t347 * t372;
t432 = t361 * t496;
t474 = t367 * t373;
t475 = t367 * t372;
t494 = t347 * t374;
t160 = (t332 * t432 + t474) * t329 + (-t332 * t431 + t475) * t323 - t361 * t335 * t494;
t166 = (-t332 * t475 + t431) * t329 + (t332 * t474 + t432) * t323 + t367 * t515;
t112 = ((t160 * t346 - t344 * t166) * t326 - (t160 * t344 + t166 * t346) * t320) * t360 - t148 * t477;
t487 = t361 * t366;
t250 = pkin(3) * t487 + t289;
t220 = t250 * t477 + t286;
t214 = 0.1e1 / t220;
t560 = t112 * t214;
t452 = t375 * t560;
t453 = t367 * t560;
t509 = t345 * t367;
t253 = -t344 * t320 + t326 * t346;
t256 = t346 * t320 + t344 * t326;
t539 = (t253 * t477 + t360 * (t253 * t504 + t367 * t256)) * t335;
t523 = t323 * t332;
t184 = t253 * t523 + t256 * t329;
t259 = t344 * t504 - t346 * t367;
t262 = t344 * t367 + t346 * t504;
t202 = -t320 * t259 + t262 * t326;
t393 = t259 * t326 + t320 * t262;
t548 = ((-t202 * t523 - t329 * t393) * t360 - t184 * t477) * t214;
t518 = t329 * t332;
t181 = t253 * t518 - t323 * t256;
t551 = ((t202 * t518 - t323 * t393) * t360 + t181 * t477) * t214;
t408 = t360 * t452;
t91 = t408 - t557;
t37 = t357 * t551 + t358 * t548 + (-((t345 * t453 + t347 * t444) * t575 + ((-t426 + t452) * t361 + pkin(2) * t453) * t477 + t91 * t347) * t560 - t359 * t539 - (t444 * t509 + (t341 * t347 - t360 * t435 - t347) * t560) * t557) * t199;
t319 = pkin(2) ^ 2 + t375 ^ 2;
t376 = pkin(3) ^ 2;
t466 = 0.2e1 * pkin(2) * pkin(3);
t414 = (-t375 * t426 + (t341 * t376 + t366 * t466 + t319) * t560) * t199 * t560;
t595 = t256 * t345;
t124 = -((-t367 * t253 + t256 * t504) * t335 - t332 * t512) * t575 + ((t292 * t253 + t256 * t384) * t335 + t247 * t332) * t366 + (t347 * t332 + t335 * t595) * t579;
t554 = t124 * t199;
t205 = -t292 * t346 - t344 * t384;
t208 = t292 * t344 - t346 * t384;
t139 = t247 * t335 + (t205 * t326 + t208 * t320) * t332;
t151 = -t320 * t205 + t208 * t326;
t163 = t332 * t393 + t335 * t512;
t211 = -t332 * t595 + t347 * t335;
t524 = t323 * t253;
t568 = ((t163 * t329 + t202 * t323) * t575 + (t139 * t329 + t323 * t151) * t366 + (t211 * t329 - t345 * t524) * t579) * t199;
t533 = t253 * t329;
t569 = (-(t163 * t323 - t202 * t329) * t575 + (-t139 * t323 + t151 * t329) * t366 - (t211 * t323 + t345 * t533) * t579) * t199;
t58 = t366 * t414 + t359 * t554 + (pkin(2) * t444 - t91 * t366) * t199 * t557 + t358 * t569 + t357 * t568;
t601 = -t37 * pkin(6) - (t361 * t58 + t453 * t604) * t345 + (pkin(2) * t560 + t509 * t604) * t560;
t149 = t176 * t327 - t321 * t395;
t308 = t368 * pkin(3) + pkin(2);
t278 = t363 * t308 - t317;
t529 = (t308 * t369 + t482) * t347;
t119 = -t149 * t529 + t606 * t278;
t287 = t308 * t503;
t508 = t345 * t368;
t230 = t278 * t508 + t287;
t225 = 0.1e1 / t230;
t535 = t225 * t362;
t425 = t119 * t535;
t483 = t363 * t368;
t434 = t345 * t483;
t556 = t119 * t225;
t443 = t377 * t556;
t429 = t363 * t495;
t430 = t363 * t496;
t471 = t369 * t373;
t472 = t369 * t372;
t161 = (t333 * t430 + t471) * t330 + (-t333 * t429 + t472) * t324 - t363 * t336 * t494;
t167 = (-t333 * t472 + t429) * t330 + (t333 * t471 + t430) * t324 + t369 * t514;
t113 = ((t161 * t346 - t344 * t167) * t327 - (t161 * t344 + t167 * t346) * t321) * t362 - t149 * t508;
t251 = pkin(3) * t483 + t290;
t221 = t251 * t508 + t287;
t216 = 0.1e1 / t221;
t559 = t113 * t216;
t450 = t375 * t559;
t451 = t369 * t559;
t507 = t345 * t369;
t254 = -t344 * t321 + t327 * t346;
t257 = t346 * t321 + t344 * t327;
t538 = (t254 * t508 + t362 * (t254 * t502 + t369 * t257)) * t336;
t521 = t324 * t333;
t185 = t254 * t521 + t257 * t330;
t260 = t344 * t502 - t346 * t369;
t263 = t344 * t369 + t346 * t502;
t203 = -t321 * t260 + t263 * t327;
t392 = t260 * t327 + t321 * t263;
t547 = ((-t203 * t521 - t330 * t392) * t362 - t185 * t508) * t216;
t517 = t330 * t333;
t182 = t254 * t517 - t324 * t257;
t550 = ((t203 * t517 - t324 * t392) * t362 + t182 * t508) * t216;
t407 = t362 * t450;
t92 = t407 - t556;
t38 = t357 * t550 + t358 * t547 + (-((t345 * t451 + t347 * t443) * t574 + ((-t425 + t450) * t363 + pkin(2) * t451) * t508 + t92 * t347) * t559 - t359 * t538 - (t443 * t507 + (t342 * t347 - t362 * t434 - t347) * t559) * t556) * t200;
t413 = (-t375 * t425 + (t342 * t376 + t368 * t466 + t319) * t559) * t200 * t559;
t594 = t257 * t345;
t125 = -((-t369 * t254 + t257 * t502) * t336 - t333 * t511) * t574 + ((t293 * t254 + t257 * t383) * t336 + t248 * t333) * t368 + (t347 * t333 + t336 * t594) * t578;
t553 = t125 * t200;
t206 = -t293 * t346 - t344 * t383;
t209 = t293 * t344 - t346 * t383;
t140 = t248 * t336 + (t206 * t327 + t209 * t321) * t333;
t152 = -t321 * t206 + t209 * t327;
t164 = t333 * t392 + t336 * t511;
t212 = -t333 * t594 + t347 * t336;
t522 = t324 * t254;
t566 = ((t164 * t330 + t203 * t324) * t574 + (t140 * t330 + t324 * t152) * t368 + (t212 * t330 - t345 * t522) * t578) * t200;
t532 = t254 * t330;
t567 = (-(t164 * t324 - t203 * t330) * t574 + (-t140 * t324 + t152 * t330) * t368 - (t212 * t324 + t345 * t532) * t578) * t200;
t59 = t368 * t413 + t357 * t566 + t359 * t553 + (pkin(2) * t443 - t92 * t368) * t200 * t556 + t358 * t567;
t600 = -t38 * pkin(6) - (t363 * t59 + t451 * t603) * t345 + (pkin(2) * t559 + t507 * t603) * t559;
t150 = t177 * t328 - t322 * t394;
t309 = t370 * pkin(3) + pkin(2);
t279 = t365 * t309 - t318;
t528 = (t309 * t371 + t478) * t347;
t120 = -t150 * t528 + t605 * t279;
t288 = t309 * t501;
t470 = t370 * t345;
t231 = t279 * t470 + t288;
t227 = 0.1e1 / t231;
t534 = t227 * t364;
t424 = t120 * t534;
t433 = t365 * t470;
t555 = t120 * t227;
t442 = t377 * t555;
t427 = t365 * t495;
t428 = t365 * t496;
t467 = t371 * t373;
t468 = t371 * t372;
t162 = (t334 * t428 + t467) * t331 + (-t334 * t427 + t468) * t325 - t365 * t337 * t494;
t168 = (-t334 * t468 + t427) * t331 + (t334 * t467 + t428) * t325 + t371 * t513;
t114 = ((t162 * t346 - t344 * t168) * t328 - (t162 * t344 + t168 * t346) * t322) * t364 - t150 * t470;
t479 = t365 * t370;
t252 = pkin(3) * t479 + t291;
t222 = t252 * t470 + t288;
t218 = 0.1e1 / t222;
t558 = t114 * t218;
t448 = t375 * t558;
t449 = t371 * t558;
t506 = t345 * t371;
t255 = -t344 * t322 + t328 * t346;
t258 = t346 * t322 + t344 * t328;
t537 = (t255 * t470 + t364 * (t255 * t500 + t371 * t258)) * t337;
t519 = t325 * t334;
t186 = t255 * t519 + t258 * t331;
t261 = t344 * t500 - t346 * t371;
t264 = t344 * t371 + t346 * t500;
t204 = -t322 * t261 + t264 * t328;
t391 = t261 * t328 + t322 * t264;
t546 = ((-t204 * t519 - t331 * t391) * t364 - t186 * t470) * t218;
t516 = t331 * t334;
t183 = t255 * t516 - t325 * t258;
t549 = ((t204 * t516 - t325 * t391) * t364 + t183 * t470) * t218;
t406 = t364 * t448;
t93 = t406 - t555;
t39 = t357 * t549 + t358 * t546 + (-((t345 * t449 + t347 * t442) * t573 + ((-t424 + t448) * t365 + pkin(2) * t449) * t470 + t93 * t347) * t558 - t359 * t537 - (t442 * t506 + (t343 * t347 - t364 * t433 - t347) * t558) * t555) * t201;
t412 = (-t375 * t424 + (t343 * t376 + t370 * t466 + t319) * t558) * t201 * t558;
t593 = t258 * t345;
t126 = -((-t371 * t255 + t258 * t500) * t337 - t334 * t510) * t573 + ((t294 * t255 + t258 * t382) * t337 + t249 * t334) * t370 + (t347 * t334 + t337 * t593) * t577;
t552 = t126 * t201;
t207 = -t294 * t346 - t344 * t382;
t210 = t294 * t344 - t346 * t382;
t141 = t249 * t337 + (t207 * t328 + t210 * t322) * t334;
t153 = -t322 * t207 + t210 * t328;
t165 = t334 * t391 + t337 * t510;
t213 = -t334 * t593 + t347 * t337;
t520 = t325 * t255;
t564 = ((t165 * t331 + t204 * t325) * t573 + (t141 * t331 + t325 * t153) * t370 + (t213 * t331 - t345 * t520) * t577) * t201;
t531 = t255 * t331;
t565 = (-(t165 * t325 - t204 * t331) * t573 + (-t141 * t325 + t153 * t331) * t370 - (t213 * t325 + t345 * t531) * t577) * t201;
t60 = t370 * t412 + t358 * t565 + t357 * t564 + t359 * t552 + (pkin(2) * t442 - t93 * t370) * t201 * t555;
t599 = -t39 * pkin(6) - (t365 * t60 + t449 * t602) * t345 + (pkin(2) * t558 + t506 * t602) * t558;
t598 = (-t253 * t530 + t256 * t277) * t335;
t597 = (-t254 * t529 + t257 * t278) * t336;
t596 = (-t255 * t528 + t258 * t279) * t337;
t280 = t329 * g(2) + t323 * g(3);
t283 = g(2) * t323 - g(3) * t329;
t420 = t335 * g(1) + t283 * t332;
t187 = t344 * t280 + t346 * t420;
t190 = t280 * t346 - t344 * t420;
t378 = 0.1e1 / pkin(3) ^ 2;
t447 = t118 ^ 2 / t229 ^ 2 * t378;
t241 = t332 * g(1) - t283 * t335;
t572 = t241 - t58;
t586 = 0.2e1 * t37;
t589 = (t187 * t326 + t190 * t320) * t361 + pkin(2) * t586 - pkin(6) * t447 - (t345 * t572 + (-t187 * t320 + t190 * t326) * t347) * t367;
t281 = t330 * g(2) + t324 * g(3);
t284 = g(2) * t324 - g(3) * t330;
t419 = t336 * g(1) + t284 * t333;
t188 = t344 * t281 + t346 * t419;
t191 = t281 * t346 - t344 * t419;
t446 = t119 ^ 2 / t230 ^ 2 * t378;
t242 = t333 * g(1) - t284 * t336;
t571 = t242 - t59;
t585 = 0.2e1 * t38;
t588 = (t188 * t327 + t191 * t321) * t363 + pkin(2) * t585 - pkin(6) * t446 - (t345 * t571 + (-t188 * t321 + t191 * t327) * t347) * t369;
t282 = t331 * g(2) + t325 * g(3);
t285 = g(2) * t325 - g(3) * t331;
t418 = t337 * g(1) + t285 * t334;
t189 = t344 * t282 + t346 * t418;
t192 = t282 * t346 - t344 * t418;
t445 = t120 ^ 2 / t231 ^ 2 * t378;
t243 = t334 * g(1) - t285 * t337;
t570 = t243 - t60;
t584 = 0.2e1 * t39;
t587 = (t189 * t328 + t192 * t322) * t365 + pkin(2) * t584 - pkin(6) * t445 - (t345 * t570 + (-t189 * t322 + t192 * t328) * t347) * t371;
t411 = t214 * t444;
t402 = t112 * t411;
t580 = pkin(6) / 0.2e1;
t438 = t223 * t598;
t490 = t359 * t377;
t491 = t358 * t377;
t492 = t357 * t377;
t493 = t347 * t377;
t136 = t181 * t530 - (t256 * t518 + t524) * t277;
t542 = t136 * t223;
t133 = -t184 * t530 + (t256 * t523 - t533) * t277;
t545 = t133 * t223;
t576 = pkin(2) * t377;
t67 = t438 * t490 + t491 * t545 + t492 * t542 - t414 * t493 - (-t347 * t408 + (-t377 * t250 * t489 + (t366 * t576 + t341) * t347) * t557) * t411;
t583 = -0.2e1 * pkin(2) * t402 - 0.2e1 * t67 * t580;
t410 = t216 * t443;
t401 = t113 * t410;
t437 = t225 * t597;
t137 = t182 * t529 - (t257 * t517 + t522) * t278;
t541 = t137 * t225;
t134 = -t185 * t529 + (t257 * t521 - t532) * t278;
t544 = t134 * t225;
t68 = t437 * t490 + t491 * t544 + t492 * t541 - t413 * t493 - (-t347 * t407 + (-t377 * t251 * t485 + (t368 * t576 + t342) * t347) * t556) * t410;
t582 = -0.2e1 * pkin(2) * t401 - 0.2e1 * t68 * t580;
t409 = t218 * t442;
t400 = t114 * t409;
t436 = t227 * t596;
t138 = t183 * t528 - (t258 * t516 + t520) * t279;
t540 = t138 * t227;
t135 = -t186 * t528 + (t258 * t519 - t531) * t279;
t543 = t135 * t227;
t69 = t436 * t490 + t491 * t543 + t492 * t540 - t412 * t493 - (-t347 * t406 + (-t377 * t252 * t481 + (t370 * t576 + t343) * t347) * t555) * t409;
t581 = -0.2e1 * pkin(2) * t400 - 0.2e1 * t69 * t580;
t563 = t112 ^ 2 / t220 ^ 2;
t562 = t113 ^ 2 / t221 ^ 2;
t561 = t114 ^ 2 / t222 ^ 2;
t499 = t347 * t367;
t498 = t347 * t369;
t497 = t347 * t371;
t488 = t360 * t366;
t484 = t362 * t368;
t480 = t364 * t370;
t476 = t366 * t367;
t473 = t368 * t369;
t469 = t370 * t371;
t462 = t37 * t536;
t461 = t223 * t366 * t37;
t460 = t38 * t535;
t459 = t225 * t368 * t38;
t458 = t39 * t534;
t457 = t227 * t370 * t39;
t441 = t199 * t539;
t440 = t200 * t538;
t439 = t201 * t537;
t34 = t367 * t37;
t423 = (t447 + t563) * t361 - t34;
t35 = t369 * t38;
t422 = (t446 + t562) * t363 - t35;
t36 = t371 * t39;
t421 = (t445 + t561) * t365 - t36;
t417 = t37 * t438;
t416 = t38 * t437;
t415 = t39 * t436;
t405 = t223 * t488 * t563;
t404 = t225 * t484 * t562;
t403 = t227 * t480 * t561;
t387 = 0.2e1 * t402;
t386 = 0.2e1 * t401;
t385 = 0.2e1 * t400;
t273 = t347 * t479 - t481;
t272 = t347 * t483 - t485;
t271 = t347 * t487 - t489;
t198 = t322 * t282 + t328 * t418;
t197 = -t328 * t282 + t322 * t418;
t196 = t321 * t281 + t327 * t419;
t195 = -t327 * t281 + t321 * t419;
t194 = t320 * t280 + t326 * t420;
t193 = -t326 * t280 + t320 * t420;
t90 = (-0.2e1 * t343 + 0.1e1) * t561;
t89 = (-0.2e1 * t342 + 0.1e1) * t562;
t88 = (-0.2e1 * t341 + 0.1e1) * t563;
t66 = -t364 * t445 + t69 * t370;
t65 = t69 * t364 + t370 * t445;
t64 = -t362 * t446 + t68 * t368;
t63 = t68 * t362 + t368 * t446;
t62 = -t360 * t447 + t67 * t366;
t61 = t67 * t360 + t366 * t447;
t51 = t198 * (t344 * t497 + t346 * t365) + t197 * (-t344 * t365 + t346 * t497) - t570 * t506;
t50 = t196 * (t344 * t498 + t346 * t363) + t195 * (-t344 * t363 + t346 * t498) - t571 * t507;
t49 = t194 * (t344 * t499 + t346 * t361) + t193 * (-t344 * t361 + t346 * t499) - t572 * t509;
t48 = -t197 * t264 - t198 * t261 + t570 * t510;
t47 = -t195 * t263 - t260 * t196 + t571 * t511;
t46 = -t193 * t262 - t259 * t194 + t572 * t512;
t42 = t365 * t69 + t371 * t385;
t41 = t363 * t68 + t369 * t386;
t40 = t361 * t67 + t367 * t387;
t33 = t363 * t38 + t369 * t562;
t32 = -t363 * t562 + t35;
t31 = t365 * t39 + t371 * t561;
t30 = t361 * t37 + t367 * t563;
t29 = -t365 * t561 + t36;
t28 = -t361 * t563 + t34;
t27 = (t39 * t364 + t370 * t385) * t364;
t26 = (t38 * t362 + t368 * t386) * t362;
t25 = (t37 * t360 + t366 * t387) * t360;
t24 = t480 * t584 + (0.4e1 * t343 - 0.2e1) * t400;
t23 = t484 * t585 + (0.4e1 * t342 - 0.2e1) * t401;
t22 = t488 * t586 + (0.4e1 * t341 - 0.2e1) * t402;
t18 = t364 * t581 + t587 * t370;
t17 = -t587 * t364 + t370 * t581;
t16 = t360 * t583 + t589 * t366;
t15 = -t589 * t360 + t366 * t583;
t14 = t362 * t582 + t588 * t368;
t13 = -t588 * t362 + t368 * t582;
t12 = (-t364 * t42 - t370 * t421) * t345 + t347 * t66;
t11 = (t364 * t421 - t370 * t42) * t345 - t347 * t65;
t10 = (-t362 * t41 - t368 * t422) * t345 + t347 * t64;
t9 = (t362 * t422 - t368 * t41) * t345 - t347 * t63;
t8 = (-t360 * t40 - t366 * t423) * t345 + t347 * t62;
t7 = (t360 * t423 - t366 * t40) * t345 - t347 * t61;
t6 = -t60 * t501 + (-t273 * t344 + t346 * t469) * t198 - (t273 * t346 + t344 * t469) * t197 + t243 * (t433 + t501) + t599 * t370;
t5 = -t59 * t503 + (-t272 * t344 + t346 * t473) * t196 - t195 * (t272 * t346 + t344 * t473) + t242 * (t434 + t503) + t600 * t368;
t4 = -t58 * t505 + (-t271 * t344 + t346 * t476) * t194 - t193 * (t271 * t346 + t344 * t476) + t241 * (t435 + t505) + t601 * t366;
t3 = -t570 * t370 * t347 + (-t346 * t197 - t344 * t198) * (t364 * t500 + t470) + (t243 * t510 + (-t197 * t344 + t198 * t346) * t371 + t599) * t364;
t2 = -t571 * t368 * t347 + (-t195 * t346 - t344 * t196) * (t362 * t502 + t508) + (t242 * t511 + (-t195 * t344 + t196 * t346) * t369 + t600) * t362;
t1 = -t572 * t366 * t347 + (-t193 * t346 - t344 * t194) * (t360 * t504 + t477) + (t241 * t512 + (-t193 * t344 + t194 * t346) * t367 + t601) * t360;
t19 = [-t552 * t570 - t553 * t571 - t554 * t572, -t37 * t441 - t38 * t440 - t39 * t439, -t49 * t441 - t50 * t440 - t51 * t439 + (t28 * t554 + t29 * t552 + t32 * t553) * t345, -t46 * t441 - t47 * t440 - t48 * t439 + (-t30 * t554 - t31 * t552 - t33 * t553) * t345, -t25 * t441 - t26 * t440 - t27 * t439 + (-t403 * t596 - t404 * t597 - t405 * t598) * t377, -t22 * t441 - t23 * t440 - t24 * t439 + (t436 * t90 + t437 * t89 + t438 * t88) * t377, -t61 * t441 - t63 * t440 - t65 * t439 + (t360 * t417 + t362 * t416 + t364 * t415) * t377, -t62 * t441 - t64 * t440 - t66 * t439 + (t366 * t417 + t368 * t416 + t370 * t415) * t377, (t436 * t69 + t437 * t68 + t438 * t67) * t377, (t12 * t126 - t18 * t537) * t201 + (t10 * t125 - t14 * t538) * t200 + (t124 * t8 - t16 * t539) * t199 + (t1 * t438 + t2 * t437 + t3 * t436) * t377, (t11 * t126 - t17 * t537) * t201 + (t125 * t9 - t13 * t538) * t200 + (t124 * t7 - t15 * t539) * t199 + (t4 * t438 + t436 * t6 + t437 * t5) * t377, t359 - g(1); -t565 * t570 - t567 * t571 - t569 * t572, t37 * t548 + t38 * t547 + t39 * t546, t49 * t548 + t50 * t547 + t51 * t546 + (t28 * t569 + t29 * t565 + t32 * t567) * t345, t46 * t548 + t47 * t547 + t48 * t546 + (-t30 * t569 - t31 * t565 - t33 * t567) * t345, t25 * t548 + t26 * t547 + t27 * t546 + (-t133 * t405 - t134 * t404 - t135 * t403) * t377, t22 * t548 + t23 * t547 + t24 * t546 + (t543 * t90 + t544 * t89 + t545 * t88) * t377, t61 * t548 + t63 * t547 + t65 * t546 + (t133 * t462 + t134 * t460 + t135 * t458) * t377, t62 * t548 + t64 * t547 + t66 * t546 + (t133 * t461 + t134 * t459 + t135 * t457) * t377, (t543 * t69 + t544 * t68 + t545 * t67) * t377, t10 * t567 + t8 * t569 + t12 * t565 + t16 * t548 + t14 * t547 + t18 * t546 + (t1 * t545 + t2 * t544 + t3 * t543) * t377, t7 * t569 + t9 * t567 + t11 * t565 + t13 * t547 + t15 * t548 + t17 * t546 + (t4 * t545 + t5 * t544 + t543 * t6) * t377, t358 - g(2); -t564 * t570 - t566 * t571 - t568 * t572, t37 * t551 + t38 * t550 + t39 * t549, t49 * t551 + t50 * t550 + t51 * t549 + (t28 * t568 + t29 * t564 + t32 * t566) * t345, t46 * t551 + t47 * t550 + t48 * t549 + (-t30 * t568 - t31 * t564 - t33 * t566) * t345, t25 * t551 + t26 * t550 + t27 * t549 + (-t136 * t405 - t137 * t404 - t138 * t403) * t377, t22 * t551 + t23 * t550 + t24 * t549 + (t540 * t90 + t541 * t89 + t542 * t88) * t377, t61 * t551 + t63 * t550 + t65 * t549 + (t136 * t462 + t137 * t460 + t138 * t458) * t377, t62 * t551 + t64 * t550 + t66 * t549 + (t136 * t461 + t137 * t459 + t138 * t457) * t377, (t540 * t69 + t541 * t68 + t542 * t67) * t377, t10 * t566 + t8 * t568 + t12 * t564 + t16 * t551 + t14 * t550 + t18 * t549 + (t1 * t542 + t2 * t541 + t3 * t540) * t377, t7 * t568 + t9 * t566 + t11 * t564 + t15 * t551 + t13 * t550 + t17 * t549 + (t4 * t542 + t5 * t541 + t540 * t6) * t377, t357 - g(3);];
tauX_reg  = t19;
