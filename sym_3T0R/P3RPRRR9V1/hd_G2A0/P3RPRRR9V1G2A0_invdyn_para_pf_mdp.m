% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RPRRR9V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d3,d4,theta2]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [15x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RPRRR9V1G2A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 18:53
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RPRRR9V1G2A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(7,1),zeros(15,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [15 1]), ...
  'P3RPRRR9V1G2A0_invdyn_para_pf_mdp: MDP has to be [15x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 18:52:29
% EndTime: 2020-08-06 18:52:44
% DurationCPUTime: 14.91s
% Computational Cost: add. (83877->692), mult. (128156->1117), div. (8889->17), fcn. (97065->87), ass. (0->527)
t2712 = -2 * pkin(1);
t2706 = 2 * pkin(3);
t2362 = cos(pkin(7));
t2321 = t2362 * pkin(2);
t2287 = t2321 + pkin(1);
t2361 = sin(pkin(7));
t2711 = MDP(5) * t2361;
t2373 = sin(qJ(1,3));
t2379 = cos(qJ(1,3));
t2385 = xDP(3);
t2366 = legFrame(3,2);
t2333 = sin(t2366);
t2336 = cos(t2366);
t2386 = xDP(2);
t2387 = xDP(1);
t2463 = t2333 * t2386 - t2336 * t2387;
t2143 = -t2463 * t2373 + t2379 * t2385;
t2352 = pkin(7) + qJ(3,3);
t2310 = cos(t2352);
t2167 = t2333 * t2387 + t2336 * t2386;
t2304 = sin(t2352);
t2595 = t2304 * t2167;
t2110 = t2143 * t2310 + t2595;
t2294 = 0.1e1 / t2310;
t2630 = t2110 * t2294;
t2375 = sin(qJ(1,2));
t2381 = cos(qJ(1,2));
t2367 = legFrame(2,2);
t2334 = sin(t2367);
t2337 = cos(t2367);
t2462 = t2334 * t2386 - t2337 * t2387;
t2144 = -t2462 * t2375 + t2381 * t2385;
t2353 = pkin(7) + qJ(3,2);
t2311 = cos(t2353);
t2168 = t2334 * t2387 + t2337 * t2386;
t2305 = sin(t2353);
t2594 = t2305 * t2168;
t2111 = t2144 * t2311 + t2594;
t2297 = 0.1e1 / t2311;
t2629 = t2111 * t2297;
t2377 = sin(qJ(1,1));
t2383 = cos(qJ(1,1));
t2368 = legFrame(1,2);
t2335 = sin(t2368);
t2338 = cos(t2368);
t2461 = t2335 * t2386 - t2338 * t2387;
t2145 = -t2461 * t2377 + t2383 * t2385;
t2354 = pkin(7) + qJ(3,1);
t2312 = cos(t2354);
t2169 = t2335 * t2387 + t2338 * t2386;
t2306 = sin(t2354);
t2593 = t2306 * t2169;
t2112 = t2145 * t2312 + t2593;
t2300 = 0.1e1 / t2312;
t2628 = t2112 * t2300;
t2363 = pkin(5) + qJ(2,3);
t2347 = pkin(6) + t2363;
t2324 = 0.1e1 / t2347;
t2325 = 0.1e1 / t2347 ^ 2;
t2326 = t2324 * t2325;
t2364 = pkin(5) + qJ(2,2);
t2348 = pkin(6) + t2364;
t2327 = 0.1e1 / t2348;
t2328 = 0.1e1 / t2348 ^ 2;
t2329 = t2327 * t2328;
t2365 = pkin(5) + qJ(2,1);
t2349 = pkin(6) + t2365;
t2330 = 0.1e1 / t2349;
t2331 = 0.1e1 / t2349 ^ 2;
t2332 = t2330 * t2331;
t2669 = pkin(3) * t2312;
t2181 = t2287 + t2669;
t2670 = pkin(3) * t2311;
t2180 = t2287 + t2670;
t2671 = pkin(3) * t2310;
t2179 = t2287 + t2671;
t2184 = t2338 * g(1) - t2335 * g(2);
t2710 = g(3) * t2383 + t2184 * t2377;
t2183 = t2337 * g(1) - t2334 * g(2);
t2709 = g(3) * t2381 + t2183 * t2375;
t2182 = t2336 * g(1) - t2333 * g(2);
t2708 = g(3) * t2379 + t2182 * t2373;
t2707 = 2 * pkin(1);
t2295 = 0.1e1 / t2310 ^ 2;
t2298 = 0.1e1 / t2311 ^ 2;
t2301 = 0.1e1 / t2312 ^ 2;
t2350 = t2362 ^ 2;
t2705 = 0.2e1 * t2350;
t2704 = 0.4e1 * t2350;
t2378 = cos(qJ(3,3));
t2357 = t2378 ^ 2;
t2703 = 0.2e1 * t2357;
t2380 = cos(qJ(3,2));
t2358 = t2380 ^ 2;
t2702 = 0.2e1 * t2358;
t2382 = cos(qJ(3,1));
t2359 = t2382 ^ 2;
t2701 = 0.2e1 * t2359;
t2700 = -4 * pkin(5) - 4 * pkin(6);
t2699 = -g(1) / 0.4e1;
t2698 = g(1) / 0.4e1;
t2697 = -g(2) / 0.4e1;
t2696 = g(2) / 0.4e1;
t2695 = g(3) / 0.2e1;
t2296 = t2294 * t2295;
t2370 = xDDP(2);
t2371 = xDDP(1);
t2400 = 1 / pkin(3);
t2164 = t2167 ^ 2;
t2401 = 1 / pkin(3) ^ 2;
t2618 = t2164 * t2401;
t2107 = t2296 * t2304 * t2618 + (t2333 * t2371 + t2336 * t2370) * t2400 * t2294;
t2521 = t2167 * t2295 * t2324;
t2481 = t2400 * t2521;
t2472 = t2110 * t2481;
t2694 = -t2107 * t2363 + t2472 * t2712;
t2299 = t2297 * t2298;
t2165 = t2168 ^ 2;
t2617 = t2165 * t2401;
t2108 = t2305 * t2299 * t2617 + (t2334 * t2371 + t2337 * t2370) * t2400 * t2297;
t2520 = t2168 * t2298 * t2327;
t2480 = t2400 * t2520;
t2471 = t2111 * t2480;
t2693 = -t2108 * t2364 + t2471 * t2712;
t2302 = t2300 * t2301;
t2166 = t2169 ^ 2;
t2616 = t2166 * t2401;
t2109 = t2306 * t2302 * t2616 + (t2335 * t2371 + t2338 * t2370) * t2400 * t2300;
t2519 = t2169 * t2301 * t2330;
t2479 = t2400 * t2519;
t2470 = t2112 * t2479;
t2692 = -t2109 * t2365 + t2470 * t2712;
t2277 = t2366 + t2352;
t2260 = qJ(1,3) + t2277;
t2691 = sin(t2260) / 0.4e1;
t2278 = -t2366 + t2352;
t2261 = qJ(1,3) - t2278;
t2225 = sin(t2261);
t2690 = -t2225 / 0.4e1;
t2263 = qJ(1,3) - t2277;
t2227 = sin(t2263);
t2689 = -t2227 / 0.4e1;
t2279 = t2367 + t2353;
t2264 = qJ(1,2) + t2279;
t2688 = sin(t2264) / 0.4e1;
t2280 = -t2367 + t2353;
t2266 = qJ(1,2) - t2280;
t2230 = sin(t2266);
t2687 = -t2230 / 0.4e1;
t2267 = qJ(1,2) - t2279;
t2231 = sin(t2267);
t2686 = -t2231 / 0.4e1;
t2275 = t2368 + t2354;
t2268 = qJ(1,1) + t2275;
t2685 = sin(t2268) / 0.4e1;
t2500 = t2368 - t2354;
t2270 = qJ(1,1) + t2500;
t2234 = sin(t2270);
t2684 = -t2234 / 0.4e1;
t2271 = qJ(1,1) - t2275;
t2235 = sin(t2271);
t2683 = -t2235 / 0.4e1;
t2682 = -cos(t2261) / 0.4e1;
t2262 = qJ(1,3) + t2278;
t2681 = -cos(t2262) / 0.4e1;
t2265 = qJ(1,2) + t2280;
t2680 = -cos(t2265) / 0.4e1;
t2679 = -cos(t2266) / 0.4e1;
t2269 = qJ(1,1) - t2500;
t2678 = -cos(t2269) / 0.4e1;
t2677 = -cos(t2270) / 0.4e1;
t2676 = -sin(t2500) / 0.2e1;
t2675 = sin(t2278) / 0.2e1;
t2674 = sin(t2280) / 0.2e1;
t2673 = -0.2e1 * t2350 + 0.1e1;
t2672 = t2704 - 0.2e1;
t2318 = qJ(1,3) - t2352;
t2668 = g(3) * sin(t2318);
t2319 = qJ(1,2) - t2353;
t2667 = g(3) * sin(t2319);
t2320 = qJ(1,1) - t2354;
t2666 = g(3) * sin(t2320);
t2665 = g(3) * cos(t2318);
t2664 = g(3) * cos(t2319);
t2663 = g(3) * cos(t2320);
t2372 = sin(qJ(3,3));
t2570 = t2361 * t2372;
t2174 = t2362 * t2378 - t2570;
t2171 = 0.1e1 / t2174;
t2345 = pkin(1) * t2385;
t2563 = (-t2463 * pkin(1) + t2347 * t2385) * t2373 + (t2463 * t2347 + t2345) * t2379;
t2567 = t2378 * t2372;
t2322 = pkin(1) * t2361;
t2606 = (-t2372 * pkin(3) + t2322) * t2378;
t2615 = t2167 * t2372;
t2627 = t2143 * t2357;
t2645 = (((t2143 * t2378 + t2615) * pkin(2) + (0.2e1 * t2167 * t2567 - t2143 + 0.2e1 * t2627) * pkin(3)) * t2350 + (t2563 * t2378 + pkin(1) * t2615 + ((-t2143 * t2372 + t2167 * t2378) * pkin(2) + (-0.2e1 * t2143 * t2567 + t2167 * t2703 - t2167) * pkin(3)) * t2361) * t2362 - pkin(3) * t2627 + t2167 * t2606 - t2563 * t2570 + pkin(3) * t2143) * t2171;
t2536 = t2326 * t2645;
t2647 = (t2645 + (-t2287 * t2294 - pkin(3)) * t2110) * t2326;
t2447 = (-t2536 - t2647) * t2294;
t2591 = t2324 * t2370;
t2583 = t2333 * t2373;
t2149 = t2336 * t2304 - t2310 * t2583;
t2624 = t2149 * t2294;
t2113 = t2591 * t2624;
t2590 = t2324 * t2371;
t2580 = t2336 * t2373;
t2150 = t2333 * t2304 + t2310 * t2580;
t2623 = t2150 * t2294;
t2114 = t2590 * t2623;
t2140 = t2164 * t2400 * t2296 * t2324;
t2369 = xDDP(3);
t2592 = t2324 * t2369;
t2212 = t2379 * t2592;
t2475 = t2113 + t2114 + t2140 + t2212;
t2056 = t2110 * t2447 + t2475;
t2659 = t2056 * pkin(1);
t2374 = sin(qJ(3,2));
t2569 = t2361 * t2374;
t2175 = t2362 * t2380 - t2569;
t2172 = 0.1e1 / t2175;
t2562 = (-t2462 * pkin(1) + t2348 * t2385) * t2375 + (t2462 * t2348 + t2345) * t2381;
t2565 = t2380 * t2374;
t2566 = t2380 * (-t2374 * pkin(3) + t2322);
t2614 = t2168 * t2374;
t2626 = t2144 * t2358;
t2644 = (((t2144 * t2380 + t2614) * pkin(2) + (0.2e1 * t2168 * t2565 - t2144 + 0.2e1 * t2626) * pkin(3)) * t2350 + (t2562 * t2380 + pkin(1) * t2614 + ((-t2144 * t2374 + t2168 * t2380) * pkin(2) + (-0.2e1 * t2144 * t2565 + t2168 * t2702 - t2168) * pkin(3)) * t2361) * t2362 - pkin(3) * t2626 + t2168 * t2566 - t2562 * t2569 + pkin(3) * t2144) * t2172;
t2535 = t2329 * t2644;
t2646 = (t2644 + (-t2287 * t2297 - pkin(3)) * t2111) * t2329;
t2446 = (-t2535 - t2646) * t2297;
t2588 = t2327 * t2370;
t2582 = t2334 * t2375;
t2151 = t2337 * t2305 - t2311 * t2582;
t2622 = t2151 * t2297;
t2115 = t2588 * t2622;
t2587 = t2327 * t2371;
t2579 = t2337 * t2375;
t2152 = t2334 * t2305 + t2311 * t2579;
t2621 = t2152 * t2297;
t2116 = t2587 * t2621;
t2141 = t2165 * t2400 * t2299 * t2327;
t2589 = t2327 * t2369;
t2213 = t2381 * t2589;
t2474 = t2115 + t2116 + t2141 + t2213;
t2057 = t2111 * t2446 + t2474;
t2658 = t2057 * pkin(1);
t2376 = sin(qJ(3,1));
t2568 = t2376 * t2361;
t2173 = t2382 * t2362 - t2568;
t2170 = 0.1e1 / t2173;
t2561 = (-t2461 * pkin(1) + t2349 * t2385) * t2377 + (t2461 * t2349 + t2345) * t2383;
t2564 = t2382 * t2376;
t2605 = (-t2376 * pkin(3) + t2322) * t2382;
t2613 = t2169 * t2376;
t2625 = t2145 * t2359;
t2643 = (((t2145 * t2382 + t2613) * pkin(2) + (0.2e1 * t2169 * t2564 - t2145 + 0.2e1 * t2625) * pkin(3)) * t2350 + (t2561 * t2382 + pkin(1) * t2613 + ((-t2145 * t2376 + t2169 * t2382) * pkin(2) + (-0.2e1 * t2145 * t2564 + t2169 * t2701 - t2169) * pkin(3)) * t2361) * t2362 - pkin(3) * t2625 + t2169 * t2605 - t2561 * t2568 + pkin(3) * t2145) * t2170;
t2534 = t2332 * t2643;
t2648 = (t2643 + (-t2287 * t2300 - pkin(3)) * t2112) * t2332;
t2448 = (-t2534 - t2648) * t2300;
t2585 = t2330 * t2370;
t2581 = t2335 * t2377;
t2153 = t2338 * t2306 - t2312 * t2581;
t2620 = t2153 * t2300;
t2117 = t2585 * t2620;
t2584 = t2330 * t2371;
t2578 = t2338 * t2377;
t2154 = t2335 * t2306 + t2312 * t2578;
t2619 = t2154 * t2300;
t2118 = t2584 * t2619;
t2142 = t2166 * t2400 * t2302 * t2330;
t2586 = t2330 * t2369;
t2214 = t2383 * t2586;
t2473 = t2117 + t2118 + t2142 + t2214;
t2058 = t2112 * t2448 + t2473;
t2657 = t2058 * pkin(1);
t2656 = t2357 * pkin(3);
t2655 = t2358 * pkin(3);
t2654 = t2359 * pkin(3);
t2653 = t2378 * pkin(2);
t2652 = t2380 * pkin(2);
t2651 = t2382 * pkin(2);
t2650 = MDP(4) * t2362;
t2498 = pkin(1) * t2373 - t2379 * t2347;
t2125 = t2498 * t2570 + (t2357 - 0.1e1) * t2373 * pkin(3);
t2146 = pkin(1) * t2372 + (-pkin(3) + t2653 + 0.2e1 * t2656) * t2361;
t2394 = -pkin(3) / 0.2e1;
t2209 = t2656 + t2653 / 0.2e1 + t2394;
t2518 = t2373 * t2570;
t2451 = pkin(2) * t2518 + (t2518 * t2706 - t2498) * t2378;
t2395 = pkin(2) / 0.2e1;
t2604 = (t2378 * pkin(3) + t2395) * t2372;
t2083 = (-t2209 * t2583 + t2336 * t2604) * t2705 + (t2336 * t2146 + t2451 * t2333) * t2362 + t2125 * t2333 + t2336 * t2606;
t2642 = t2083 * t2171;
t2084 = (t2209 * t2580 + t2333 * t2604) * t2705 + (t2333 * t2146 - t2451 * t2336) * t2362 - t2125 * t2336 + t2333 * t2606;
t2641 = t2084 * t2171;
t2497 = pkin(1) * t2375 - t2381 * t2348;
t2126 = t2497 * t2569 + (t2358 - 0.1e1) * t2375 * pkin(3);
t2147 = pkin(1) * t2374 + (-pkin(3) + t2652 + 0.2e1 * t2655) * t2361;
t2210 = t2655 + t2652 / 0.2e1 + t2394;
t2517 = t2375 * t2569;
t2450 = pkin(2) * t2517 + (t2517 * t2706 - t2497) * t2380;
t2603 = (t2380 * pkin(3) + t2395) * t2374;
t2085 = (-t2210 * t2582 + t2337 * t2603) * t2705 + (t2337 * t2147 + t2450 * t2334) * t2362 + t2126 * t2334 + t2337 * t2566;
t2640 = t2085 * t2172;
t2086 = (t2210 * t2579 + t2334 * t2603) * t2705 + (t2334 * t2147 - t2450 * t2337) * t2362 - t2126 * t2337 + t2334 * t2566;
t2639 = t2086 * t2172;
t2499 = t2377 * pkin(1) - t2383 * t2349;
t2127 = t2499 * t2568 + (t2359 - 0.1e1) * t2377 * pkin(3);
t2148 = pkin(1) * t2376 + (-pkin(3) + t2651 + 0.2e1 * t2654) * t2361;
t2211 = t2654 + t2651 / 0.2e1 + t2394;
t2516 = t2377 * t2568;
t2449 = pkin(2) * t2516 + (t2516 * t2706 - t2499) * t2382;
t2602 = (t2382 * pkin(3) + t2395) * t2376;
t2087 = (-t2211 * t2581 + t2338 * t2602) * t2705 + (t2338 * t2148 + t2449 * t2335) * t2362 + t2127 * t2335 + t2338 * t2605;
t2638 = t2087 * t2170;
t2088 = (t2211 * t2578 + t2335 * t2602) * t2705 + (t2335 * t2148 - t2449 * t2338) * t2362 - t2127 * t2338 + t2335 * t2605;
t2637 = t2088 * t2170;
t2104 = t2110 ^ 2;
t2636 = t2104 * t2295;
t2635 = t2104 * t2325;
t2105 = t2111 ^ 2;
t2634 = t2105 * t2298;
t2633 = t2105 * t2328;
t2106 = t2112 ^ 2;
t2632 = t2106 * t2301;
t2631 = t2106 * t2331;
t2611 = t2182 * t2379;
t2609 = t2183 * t2381;
t2607 = t2184 * t2383;
t2601 = t2294 * t2333;
t2600 = t2294 * t2336;
t2599 = t2297 * t2334;
t2598 = t2297 * t2337;
t2597 = t2300 * t2335;
t2596 = t2300 * t2338;
t2577 = t2357 * t2056;
t2576 = t2358 * t2057;
t2575 = t2359 * t2058;
t2574 = t2361 * t2056;
t2573 = t2361 * t2057;
t2572 = t2361 * t2058;
t2571 = t2361 * t2362;
t2393 = 0.2e1 * pkin(7);
t2351 = t2393 + qJ(3,2);
t2303 = sin(t2351);
t2560 = -t2303 - t2374;
t2355 = qJ(3,3) + t2393;
t2307 = sin(t2355);
t2559 = -t2307 - t2372;
t2356 = qJ(3,1) + t2393;
t2308 = sin(t2356);
t2558 = -t2308 - t2376;
t2309 = cos(t2351);
t2557 = t2309 + t2380;
t2313 = cos(t2355);
t2556 = t2313 + t2378;
t2314 = cos(t2356);
t2555 = t2314 + t2382;
t2554 = t2350 - 0.1e1 / 0.2e1;
t2553 = t2357 - 0.1e1 / 0.2e1;
t2552 = t2358 - 0.1e1 / 0.2e1;
t2551 = t2359 - 0.1e1 / 0.2e1;
t2550 = 0.2e1 * t2659;
t2549 = 0.2e1 * t2658;
t2548 = 0.2e1 * t2657;
t2547 = 2 * MDP(8);
t2546 = -0.8e1 * t2571;
t2545 = 0.4e1 * t2571;
t2544 = pkin(2) * t2706;
t2542 = t2056 * t2601;
t2541 = t2056 * t2600;
t2540 = t2057 * t2599;
t2539 = t2057 * t2598;
t2538 = t2058 * t2597;
t2537 = t2058 * t2596;
t2533 = t2295 * t2635;
t2532 = t2326 * t2636;
t2531 = t2296 * t2635;
t2530 = t2298 * t2633;
t2529 = t2329 * t2634;
t2528 = t2299 * t2633;
t2527 = t2301 * t2631;
t2526 = t2332 * t2632;
t2525 = t2302 * t2631;
t2524 = t2295 * t2618;
t2523 = t2298 * t2617;
t2522 = t2301 * t2616;
t2515 = t2056 * t2567;
t2514 = t2057 * t2565;
t2513 = t2058 * t2564;
t2512 = t2690 - cos(t2278) / 0.2e1;
t2511 = t2227 / 0.4e1 - cos(t2277) / 0.2e1;
t2510 = t2687 - cos(t2280) / 0.2e1;
t2509 = t2231 / 0.4e1 - cos(t2279) / 0.2e1;
t2508 = t2684 - cos(t2500) / 0.2e1;
t2507 = t2235 / 0.4e1 - cos(t2275) / 0.2e1;
t2239 = cos(t2263);
t2506 = -t2239 / 0.4e1 + t2682;
t2505 = t2239 / 0.4e1 + t2682;
t2243 = cos(t2267);
t2504 = -t2243 / 0.4e1 + t2679;
t2503 = t2243 / 0.4e1 + t2679;
t2247 = cos(t2271);
t2502 = -t2247 / 0.4e1 + t2677;
t2501 = t2247 / 0.4e1 + t2677;
t2340 = g(3) * t2373;
t2158 = t2340 - t2611;
t2341 = g(3) * t2375;
t2159 = t2341 - t2609;
t2342 = g(3) * t2377;
t2160 = t2342 - t2607;
t2496 = pkin(2) * t2533;
t2495 = pkin(2) * t2530;
t2494 = pkin(2) * t2527;
t2493 = t2630 * t2645;
t2492 = t2629 * t2644;
t2491 = t2628 * t2643;
t2490 = t2171 * t2532;
t2489 = t2333 * t2531;
t2488 = t2336 * t2531;
t2487 = t2172 * t2529;
t2486 = t2334 * t2528;
t2485 = t2337 * t2528;
t2484 = t2170 * t2526;
t2483 = t2335 * t2525;
t2482 = t2338 * t2525;
t2478 = t2567 * t2571;
t2477 = t2565 * t2571;
t2476 = t2564 * t2571;
t2226 = sin(t2262);
t2236 = cos(t2260);
t2315 = qJ(1,3) + t2352;
t2469 = g(1) * t2681 + g(2) * t2691 + t2226 * t2697 + t2236 * t2699 + sin(t2315) * t2695;
t2229 = sin(t2265);
t2240 = cos(t2264);
t2316 = qJ(1,2) + t2353;
t2468 = g(1) * t2680 + g(2) * t2688 + t2229 * t2697 + t2240 * t2699 + sin(t2316) * t2695;
t2233 = sin(t2269);
t2244 = cos(t2268);
t2317 = qJ(1,1) + t2354;
t2467 = g(1) * t2678 + g(2) * t2685 + t2233 * t2697 + t2244 * t2699 + sin(t2317) * t2695;
t2466 = g(1) * t2691 + g(2) * t2681 + t2226 * t2698 + t2236 * t2696 + cos(t2315) * t2695;
t2465 = g(1) * t2688 + g(2) * t2680 + t2229 * t2698 + t2240 * t2696 + cos(t2316) * t2695;
t2464 = g(1) * t2685 + g(2) * t2678 + t2233 * t2698 + t2244 * t2696 + cos(t2317) * t2695;
t2460 = 0.2e1 * t2472;
t2459 = 0.2e1 * t2471;
t2458 = 0.2e1 * t2470;
t2457 = t2481 * t2567;
t2456 = t2480 * t2565;
t2455 = t2479 * t2564;
t2137 = t2179 * t2379 + t2373 * t2347;
t2288 = 0.2e1 * t2352;
t2396 = (qJ(2,3) ^ 2);
t2399 = pkin(3) ^ 2;
t2402 = pkin(2) ^ 2;
t2442 = -t2402 * cos(t2393) - (2 * pkin(1) ^ 2) - (2 * pkin(6) ^ 2) - t2399 - t2402 + ((-4 * pkin(6) - 2 * pkin(5)) * pkin(5));
t2454 = t2591 * t2642 + t2590 * t2641 + (-t2110 * sin(t2288) / 0.2e1 + t2167 * t2400 * t2179) * t2294 * t2521 + t2137 * t2592 - (0.2e1 * t2347 * t2595 * t2294 + (t2645 * t2707 + 0.4e1 * (-t2321 - t2671) * (pkin(1) * t2630 - t2645 / 0.2e1) + ((qJ(2,3) * t2700) - t2399 * cos(t2288) - (2 * t2396) - t2556 * t2544 + t2442) * t2630) * t2324) * t2325 * t2630 / 0.2e1 - t2179 * t2326 * t2493;
t2138 = t2180 * t2381 + t2375 * t2348;
t2289 = 0.2e1 * t2353;
t2397 = (qJ(2,2) ^ 2);
t2453 = t2588 * t2640 + t2587 * t2639 + (-t2111 * sin(t2289) / 0.2e1 + t2168 * t2400 * t2180) * t2297 * t2520 + t2138 * t2589 - (0.2e1 * t2348 * t2594 * t2297 + (t2644 * t2707 + 0.4e1 * (-t2321 - t2670) * (pkin(1) * t2629 - t2644 / 0.2e1) + ((qJ(2,2) * t2700) - t2399 * cos(t2289) - (2 * t2397) - t2557 * t2544 + t2442) * t2629) * t2327) * t2328 * t2629 / 0.2e1 - t2180 * t2329 * t2492;
t2139 = t2181 * t2383 + t2377 * t2349;
t2290 = 0.2e1 * t2354;
t2398 = (qJ(2,1) ^ 2);
t2452 = t2585 * t2638 + t2584 * t2637 + (-t2112 * sin(t2290) / 0.2e1 + t2169 * t2400 * t2181) * t2300 * t2519 + t2139 * t2586 - (0.2e1 * t2349 * t2593 * t2300 + (t2643 * t2707 + 0.4e1 * (-t2321 - t2669) * (pkin(1) * t2628 - t2643 / 0.2e1) + ((qJ(2,1) * t2700) - t2399 * cos(t2290) - (2 * t2398) - t2555 * t2544 + t2442) * t2628) * t2330) * t2331 * t2628 / 0.2e1 - t2181 * t2332 * t2491;
t2445 = -t2454 + t2550;
t2444 = -t2453 + t2549;
t2443 = -t2452 + t2548;
t2441 = t2362 * t2460 + t2574;
t2440 = -t2362 * t2056 + t2361 * t2460;
t2439 = t2362 * t2459 + t2573;
t2438 = -t2362 * t2057 + t2361 * t2459;
t2437 = t2362 * t2458 + t2572;
t2436 = -t2362 * t2058 + t2361 * t2458;
t2435 = (t2372 * t2441 + t2440 * t2378) * MDP(13) + (-t2440 * t2372 + t2441 * t2378) * MDP(14) + MDP(5) * t2574 + (-qJ(2,3) * t2533 - t2158 + t2454 - t2659) * MDP(7);
t2434 = (t2374 * t2439 + t2438 * t2380) * MDP(13) + (-t2438 * t2374 + t2439 * t2380) * MDP(14) + MDP(5) * t2573 + (-qJ(2,2) * t2530 - t2159 + t2453 - t2658) * MDP(7);
t2433 = (t2376 * t2437 + t2436 * t2382) * MDP(13) + (-t2436 * t2376 + t2437 * t2382) * MDP(14) + MDP(5) * t2572 + (-qJ(2,1) * t2527 - t2160 + t2452 - t2657) * MDP(7);
t2432 = t2170 * t2433;
t2431 = t2172 * t2434;
t2430 = t2435 * t2171;
t2429 = -t2454 - t2611;
t2428 = -t2453 - t2609;
t2427 = -t2452 - t2607;
t2426 = t2363 * t2524 - t2445;
t2425 = t2364 * t2523 - t2444;
t2424 = t2365 * t2522 - t2443;
t2423 = 0.2e1 * t2325 * t2493 - t2708;
t2422 = 0.2e1 * t2328 * t2492 - t2709;
t2421 = 0.2e1 * t2331 * t2491 - t2710;
t2098 = -t2107 * t2362 + t2361 * t2524;
t2101 = t2107 * t2361 + t2362 * t2524;
t2389 = pkin(1) * g(3);
t2420 = t2056 * MDP(1) + (-t2098 * t2372 + t2101 * t2378) * MDP(10) + (-t2098 * t2378 - t2101 * t2372) * MDP(11) + (t2668 / 0.2e1 - t2426 * t2310 + t2304 * t2694 + (t2689 + t2225 / 0.4e1) * g(2) + t2506 * g(1) + (t2556 * t2056 + t2559 * t2472) * pkin(2) + t2469) * MDP(13) + (-t2665 / 0.2e1 + t2426 * t2304 + t2310 * t2694 + t2505 * g(2) + (t2689 + t2690) * g(1) + (t2559 * t2056 - t2556 * t2472) * pkin(2) + t2466) * MDP(14) + t2158 * MDP(2) + t2708 * MDP(3) + (-t2158 - t2445) * t2711 + (0.2e1 * qJ(2,3) * t2056 + t2423) * MDP(6) + (t2056 * t2396 + t2389 * t2373 + t2423 * qJ(2,3) + (t2429 + t2659) * pkin(1)) * MDP(7) + ((-0.2e1 * t2577 + (t2447 + 0.4e1 * t2457) * t2110 + t2475) * t2350 + (t2515 / 0.2e1 + t2553 * t2472) * t2545 - 0.2e1 * t2110 * t2457 + t2577) * MDP(8) + ((-t2577 / 0.2e1 + t2114 / 0.4e1 + t2113 / 0.4e1 + t2212 / 0.4e1 + t2140 / 0.4e1) * t2546 + t2672 * t2515 + ((-t2647 / 0.4e1 - t2536 / 0.4e1) * t2294 * t2546 + ((t2703 - 0.1e1) * t2704 - 0.8e1 * t2478 - 0.4e1 * t2357 + 0.2e1) * t2481) * t2110) * MDP(9);
t2099 = -t2108 * t2362 + t2361 * t2523;
t2102 = t2108 * t2361 + t2362 * t2523;
t2419 = t2057 * MDP(1) + (-t2099 * t2374 + t2102 * t2380) * MDP(10) + (-t2099 * t2380 - t2102 * t2374) * MDP(11) + (t2667 / 0.2e1 - t2425 * t2311 + t2305 * t2693 + (t2686 + t2230 / 0.4e1) * g(2) + t2504 * g(1) + (t2557 * t2057 + t2560 * t2471) * pkin(2) + t2468) * MDP(13) + (-t2664 / 0.2e1 + t2425 * t2305 + t2311 * t2693 + t2503 * g(2) + (t2686 + t2687) * g(1) + (t2560 * t2057 - t2557 * t2471) * pkin(2) + t2465) * MDP(14) + t2159 * MDP(2) + t2709 * MDP(3) + (-t2159 - t2444) * t2711 + (0.2e1 * qJ(2,2) * t2057 + t2422) * MDP(6) + (t2057 * t2397 + t2389 * t2375 + t2422 * qJ(2,2) + (t2428 + t2658) * pkin(1)) * MDP(7) + ((-0.2e1 * t2576 + (t2446 + 0.4e1 * t2456) * t2111 + t2474) * t2350 + (t2514 / 0.2e1 + t2552 * t2471) * t2545 - 0.2e1 * t2111 * t2456 + t2576) * MDP(8) + ((-t2576 / 0.2e1 + t2116 / 0.4e1 + t2115 / 0.4e1 + t2213 / 0.4e1 + t2141 / 0.4e1) * t2546 + t2672 * t2514 + ((-t2646 / 0.4e1 - t2535 / 0.4e1) * t2297 * t2546 + ((t2702 - 0.1e1) * t2704 - 0.8e1 * t2477 - 0.4e1 * t2358 + 0.2e1) * t2480) * t2111) * MDP(9);
t2100 = -t2109 * t2362 + t2361 * t2522;
t2103 = t2109 * t2361 + t2362 * t2522;
t2418 = t2058 * MDP(1) + (-t2100 * t2376 + t2103 * t2382) * MDP(10) + (-t2100 * t2382 - t2103 * t2376) * MDP(11) + (t2666 / 0.2e1 - t2424 * t2312 + t2306 * t2692 + (t2683 + t2234 / 0.4e1) * g(2) + t2502 * g(1) + (t2555 * t2058 + t2558 * t2470) * pkin(2) + t2467) * MDP(13) + (-t2663 / 0.2e1 + t2424 * t2306 + t2312 * t2692 + t2501 * g(2) + (t2683 + t2684) * g(1) + (t2558 * t2058 - t2555 * t2470) * pkin(2) + t2464) * MDP(14) + t2160 * MDP(2) + t2710 * MDP(3) + (-t2160 - t2443) * t2711 + (0.2e1 * qJ(2,1) * t2058 + t2421) * MDP(6) + (t2058 * t2398 + t2389 * t2377 + t2421 * qJ(2,1) + (t2427 + t2657) * pkin(1)) * MDP(7) + ((-0.2e1 * t2575 + (t2448 + 0.4e1 * t2455) * t2112 + t2473) * t2350 + (t2513 / 0.2e1 + t2551 * t2470) * t2545 - 0.2e1 * t2112 * t2455 + t2575) * MDP(8) + ((-t2575 / 0.2e1 + t2118 / 0.4e1 + t2117 / 0.4e1 + t2214 / 0.4e1 + t2142 / 0.4e1) * t2546 + t2672 * t2513 + ((-t2648 / 0.4e1 - t2534 / 0.4e1) * t2300 * t2546 + ((t2701 - 0.1e1) * t2704 - 0.8e1 * t2476 - 0.4e1 * t2359 + 0.2e1) * t2479) * t2112) * MDP(9);
t2417 = t2294 * t2420;
t2416 = t2300 * t2418;
t2415 = t2419 * t2297;
t2252 = sin(t2279);
t2250 = sin(t2277);
t2248 = sin(t2275);
t2178 = t2382 * t2361 + t2376 * t2362;
t2177 = t2380 * t2361 + t2374 * t2362;
t2176 = t2378 * t2361 + t2372 * t2362;
t2136 = t2672 * t2359 - 0.4e1 * t2476 + t2673;
t2135 = t2672 * t2358 - 0.4e1 * t2477 + t2673;
t2134 = t2672 * t2357 - 0.4e1 * t2478 + t2673;
t2130 = t2551 * t2571 + t2554 * t2564;
t2129 = t2552 * t2571 + t2554 * t2565;
t2128 = t2553 * t2571 + t2554 * t2567;
t2049 = -t2058 * t2365 + (pkin(1) * t2632 - 0.2e1 * t2491) * t2331;
t2048 = -t2057 * t2364 + (pkin(1) * t2634 - 0.2e1 * t2492) * t2328;
t2047 = -t2056 * t2363 + (pkin(1) * t2636 - 0.2e1 * t2493) * t2325;
t2043 = -t2666 / 0.2e1 + t2049 * t2306 + (t2308 / 0.2e1 + t2376 / 0.2e1) * t2494 + (t2507 + t2508) * g(2) + (t2676 - t2248 / 0.2e1 - t2502) * g(1) + t2467;
t2042 = -t2667 / 0.2e1 + t2048 * t2305 + (t2303 / 0.2e1 + t2374 / 0.2e1) * t2495 + (t2509 + t2510) * g(2) + (t2674 - t2252 / 0.2e1 - t2504) * g(1) + t2468;
t2041 = -t2668 / 0.2e1 + t2047 * t2304 + (t2307 / 0.2e1 + t2372 / 0.2e1) * t2496 + (t2511 + t2512) * g(2) + (t2675 - t2250 / 0.2e1 - t2506) * g(1) + t2469;
t2040 = t2663 / 0.2e1 + t2049 * t2312 + (t2314 / 0.2e1 + t2382 / 0.2e1) * t2494 + (t2676 + t2248 / 0.2e1 - t2501) * g(2) + (t2507 - t2508) * g(1) + t2464;
t2039 = t2664 / 0.2e1 + t2048 * t2311 + (t2309 / 0.2e1 + t2380 / 0.2e1) * t2495 + (t2674 + t2252 / 0.2e1 - t2503) * g(2) + (t2509 - t2510) * g(1) + t2465;
t2038 = t2665 / 0.2e1 + t2047 * t2310 + (t2313 / 0.2e1 + t2378 / 0.2e1) * t2496 + (t2675 + t2250 / 0.2e1 - t2505) * g(2) + (t2511 - t2512) * g(1) + t2466;
t2031 = t2342 + t2427 + t2548;
t2030 = t2341 + t2428 + t2549;
t2029 = t2340 + t2429 + t2550;
t1 = [(-t2084 * t2490 - t2086 * t2487 - t2088 * t2484) * MDP(6) + (t2371 - g(1)) * MDP(15) + (t2088 * t2432 + t2154 * t2416) * t2330 + (t2086 * t2431 + t2152 * t2415) * t2327 + (t2084 * t2430 + t2150 * t2417) * t2324 + ((t2031 * t2619 - t2058 * t2637) * t2330 + (t2030 * t2621 - t2057 * t2639) * t2327 + (t2029 * t2623 - t2056 * t2641) * t2324) * t2650 + ((-t2128 * t2489 - t2129 * t2486 - t2130 * t2483) * t2547 + (-t2134 * t2489 - t2135 * t2486 - t2136 * t2483) * MDP(9) + (t2176 * t2542 + t2177 * t2540 + t2178 * t2538) * MDP(10) + (t2173 * t2538 + t2174 * t2542 + t2175 * t2540) * MDP(11) + (t2107 * t2601 + t2108 * t2599 + t2109 * t2597) * MDP(12) + (t2041 * t2601 + t2042 * t2599 + t2043 * t2597) * MDP(13) + (t2038 * t2601 + t2039 * t2599 + t2040 * t2597) * MDP(14)) * t2400; (-t2083 * t2490 - t2085 * t2487 - t2087 * t2484) * MDP(6) + (t2370 - g(2)) * MDP(15) + (t2087 * t2432 + t2153 * t2416) * t2330 + (t2085 * t2431 + t2151 * t2415) * t2327 + (t2083 * t2430 + t2149 * t2417) * t2324 + ((t2031 * t2620 - t2058 * t2638) * t2330 + (t2030 * t2622 - t2057 * t2640) * t2327 + (t2029 * t2624 - t2056 * t2642) * t2324) * t2650 + ((-t2128 * t2488 - t2129 * t2485 - t2130 * t2482) * t2547 + (-t2134 * t2488 - t2135 * t2485 - t2136 * t2482) * MDP(9) + (t2176 * t2541 + t2177 * t2539 + t2178 * t2537) * MDP(10) + (t2173 * t2537 + t2174 * t2541 + t2175 * t2539) * MDP(11) + (t2107 * t2600 + t2108 * t2598 + t2109 * t2596) * MDP(12) + (t2041 * t2600 + t2042 * t2598 + t2043 * t2596) * MDP(13) + (t2038 * t2600 + t2039 * t2598 + t2040 * t2596) * MDP(14)) * t2400; (-t2137 * t2532 - t2138 * t2529 - t2139 * t2526) * MDP(6) + (t2369 - g(3)) * MDP(15) + (t2433 * t2139 + t2418 * t2383) * t2330 + (t2434 * t2138 + t2419 * t2381) * t2327 + (t2435 * t2137 + t2420 * t2379) * t2324 + ((t2031 * t2383 - t2058 * t2139) * t2330 + (t2030 * t2381 - t2057 * t2138) * t2327 + (t2029 * t2379 - t2056 * t2137) * t2324) * t2650;];
tauX  = t1;
