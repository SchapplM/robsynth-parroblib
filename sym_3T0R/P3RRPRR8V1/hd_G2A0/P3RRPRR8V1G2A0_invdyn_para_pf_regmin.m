% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRPRR8V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d4,theta3]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [3x15]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-04 17:05
% Revision: e482436b586c4f286726c907c195760c5ac72455 (2022-11-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P3RRPRR8V1G2A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(5,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: pkin has to be [5x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRPRR8V1G2A0_invdyn_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2022-11-04 17:04:36
% EndTime: 2022-11-04 17:04:48
% DurationCPUTime: 12.66s
% Computational Cost: add. (42748->649), mult. (90927->1024), div. (4932->21), fcn. (62547->86), ass. (0->481)
t314 = legFrame(3,2);
t279 = cos(t314);
t571 = t279 * g(1);
t276 = sin(t314);
t574 = t276 * g(2);
t143 = t571 - t574;
t327 = cos(qJ(1,3));
t321 = sin(qJ(1,3));
t576 = g(3) * t321;
t112 = -t143 * t327 + t576;
t311 = pkin(4) + qJ(3,3);
t297 = 0.1e1 / t311;
t512 = t297 * t327;
t456 = t112 * t512;
t309 = sin(pkin(5));
t320 = sin(qJ(2,3));
t509 = t320 * t309;
t310 = cos(pkin(5));
t568 = t310 * pkin(2);
t254 = pkin(1) + t568;
t326 = cos(qJ(2,3));
t522 = t254 * t326;
t372 = pkin(2) * t509 - t522;
t118 = 0.1e1 / t372;
t543 = t118 * t297;
t630 = t112 * t543;
t315 = legFrame(2,2);
t280 = cos(t315);
t570 = t280 * g(1);
t277 = sin(t315);
t573 = t277 * g(2);
t144 = t570 - t573;
t323 = sin(qJ(1,2));
t285 = g(3) * t323;
t329 = cos(qJ(1,2));
t113 = -t144 * t329 + t285;
t312 = pkin(4) + qJ(3,2);
t300 = 0.1e1 / t312;
t511 = t300 * t329;
t458 = t113 * t511;
t322 = sin(qJ(2,2));
t508 = t322 * t309;
t328 = cos(qJ(2,2));
t521 = t254 * t328;
t371 = pkin(2) * t508 - t521;
t120 = 0.1e1 / t371;
t542 = t120 * t300;
t629 = t113 * t542;
t334 = xDP(2);
t583 = pkin(2) * t309;
t238 = t334 * t583;
t335 = xDP(1);
t239 = t335 * t583;
t333 = xDP(3);
t495 = t333 * t583;
t624 = t335 * t254;
t625 = t334 * t254;
t628 = t320 * ((-t321 * t239 + t625) * t279 + (t321 * t238 + t624) * t276 - t327 * t495);
t627 = t322 * ((-t323 * t239 + t625) * t280 + (t323 * t238 + t624) * t277 - t329 * t495);
t316 = legFrame(1,2);
t278 = sin(t316);
t281 = cos(t316);
t324 = sin(qJ(2,1));
t325 = sin(qJ(1,1));
t331 = cos(qJ(1,1));
t626 = t324 * ((-t325 * t239 + t625) * t281 + (t325 * t238 + t624) * t278 - t331 * t495);
t313 = pkin(4) + qJ(3,1);
t257 = t325 * t313;
t330 = cos(qJ(2,1));
t504 = t331 * t313;
t520 = t254 * t330;
t57 = ((t325 * t624 + t238) * t330 - t335 * t504) * t281 + ((-t325 * t625 + t239) * t330 + t334 * t504) * t278 + (t331 * t520 + t257) * t333 + t626;
t496 = -pkin(5) - qJ(2,1);
t269 = cos(t496);
t284 = t330 * pkin(1);
t615 = pkin(2) * t269 + t284;
t623 = t615 * t57;
t256 = t323 * t312;
t505 = t329 * t312;
t56 = ((t323 * t624 + t238) * t328 - t335 * t505) * t280 + ((-t323 * t625 + t239) * t328 + t334 * t505) * t277 + (t329 * t521 + t256) * t333 + t627;
t295 = qJ(2,2) + pkin(5);
t268 = cos(t295);
t283 = t328 * pkin(1);
t616 = pkin(2) * t268 + t283;
t622 = t616 * t56;
t255 = t321 * t311;
t506 = t327 * t311;
t55 = ((t321 * t624 + t238) * t326 - t335 * t506) * t279 + ((-t321 * t625 + t239) * t326 + t334 * t506) * t276 + (t327 * t522 + t255) * t333 + t628;
t294 = qJ(2,3) + pkin(5);
t267 = cos(t294);
t282 = t326 * pkin(1);
t617 = pkin(2) * t267 + t282;
t621 = t617 * t55;
t103 = t327 * t617 + t255;
t339 = pkin(2) ^ 2;
t340 = pkin(1) ^ 2;
t497 = -t339 - t340;
t618 = 0.2e1 * pkin(1);
t178 = t568 * t618 - t497;
t317 = xDDP(3);
t318 = xDDP(2);
t319 = xDDP(1);
t261 = sin(t294);
t567 = t320 * pkin(1);
t403 = pkin(2) * t261 + t567;
t133 = t276 * t335 + t279 * t334;
t145 = 0.1e1 / t617;
t537 = t133 * t145;
t449 = t297 * t537;
t519 = t254 * t333;
t61 = (t327 * t519 + t238 * t279 + t239 * t276 + (-t276 * t625 + t279 * t624) * t321) * t326 + t628;
t561 = t118 * t61;
t100 = -t372 * t321 - t506;
t124 = t320 * t254 + t326 * t583;
t79 = t100 * t279 + t276 * t124;
t80 = -t100 * t276 + t279 * t124;
t363 = -(-t178 * t537 - t403 * t561) * t449 + (t103 * t317 + t80 * t318 + t79 * t319) * t297;
t104 = t329 * t616 + t256;
t262 = sin(t295);
t566 = t322 * pkin(1);
t402 = pkin(2) * t262 + t566;
t134 = t277 * t335 + t280 * t334;
t147 = 0.1e1 / t616;
t536 = t134 * t147;
t448 = t300 * t536;
t62 = (t329 * t519 + t238 * t280 + t239 * t277 + (-t277 * t625 + t280 * t624) * t323) * t328 + t627;
t557 = t120 * t62;
t101 = -t371 * t323 - t505;
t125 = t322 * t254 + t328 * t583;
t81 = t101 * t280 + t277 * t125;
t82 = -t101 * t277 + t280 * t125;
t362 = -(-t178 * t536 - t402 * t557) * t448 + (t104 * t317 + t82 * t318 + t81 * t319) * t300;
t105 = t331 * t615 + t257;
t303 = 0.1e1 / t313;
t263 = -sin(t496);
t565 = t324 * pkin(1);
t401 = pkin(2) * t263 + t565;
t135 = t278 * t335 + t281 * t334;
t149 = 0.1e1 / t615;
t535 = t135 * t149;
t447 = t303 * t535;
t507 = t324 * t309;
t370 = pkin(2) * t507 - t520;
t122 = 0.1e1 / t370;
t63 = (t331 * t519 + t238 * t281 + t239 * t278 + (-t278 * t625 + t281 * t624) * t325) * t330 + t626;
t553 = t122 * t63;
t102 = -t370 * t325 - t504;
t126 = t324 * t254 + t330 * t583;
t83 = t102 * t281 + t278 * t126;
t84 = -t102 * t278 + t281 * t126;
t361 = -(-t178 * t535 - t401 * t553) * t447 + (t105 * t317 + t84 * t318 + t83 * t319) * t303;
t347 = t311 ^ 2;
t298 = 0.1e1 / t347;
t494 = t55 * t561;
t420 = t298 * t494;
t299 = t297 * t298;
t540 = t133 ^ 2 / t617 ^ 2;
t488 = t276 * t583;
t491 = t279 * t583;
t518 = t276 * t321;
t85 = (-t254 * t518 + t491) * t326 + (t254 * t279 + t321 * t488) * t320;
t515 = t279 * t321;
t88 = (t254 * t515 + t488) * t326 + (t276 * t254 - t321 * t491) * t320;
t43 = t299 * t494 + (t327 * t317 + t178 / (t282 + (t310 * t326 - t509) * pkin(2)) * t540 - (t85 * t318 + t88 * t319 + (t372 * t561 - t55) * t298 * t61) * t118) * t297;
t562 = qJ(3,3) * t43;
t367 = 0.2e1 * t420 - t562;
t349 = t312 ^ 2;
t301 = 0.1e1 / t349;
t493 = t56 * t557;
t419 = t301 * t493;
t302 = t300 * t301;
t539 = t134 ^ 2 / t616 ^ 2;
t487 = t277 * t583;
t490 = t280 * t583;
t517 = t277 * t323;
t86 = (-t254 * t517 + t490) * t328 + (t254 * t280 + t323 * t487) * t322;
t514 = t280 * t323;
t89 = (t254 * t514 + t487) * t328 + (t277 * t254 - t323 * t490) * t322;
t44 = t302 * t493 + (t329 * t317 + t178 / (t283 + (t310 * t328 - t508) * pkin(2)) * t539 - (t86 * t318 + t89 * t319 + (t371 * t557 - t56) * t301 * t62) * t120) * t300;
t563 = qJ(3,2) * t44;
t368 = 0.2e1 * t419 - t563;
t351 = t313 ^ 2;
t304 = 0.1e1 / t351;
t492 = t57 * t553;
t418 = t304 * t492;
t305 = t303 * t304;
t538 = t135 ^ 2 / t615 ^ 2;
t486 = t278 * t583;
t489 = t281 * t583;
t516 = t278 * t325;
t87 = (-t254 * t516 + t489) * t330 + (t254 * t281 + t325 * t486) * t324;
t513 = t281 * t325;
t90 = (t254 * t513 + t486) * t330 + (t278 * t254 - t325 * t489) * t324;
t45 = t305 * t492 + (t331 * t317 + t178 / (t284 + (t310 * t330 - t507) * pkin(2)) * t538 - (t87 * t318 + t90 * t319 + (t370 * t553 - t57) * t304 * t63) * t122) * t303;
t564 = qJ(3,1) * t45;
t369 = 0.2e1 * t418 - t564;
t569 = t281 * g(1);
t572 = t278 * g(2);
t397 = t569 - t572;
t575 = g(3) * t325;
t114 = -t397 * t331 + t575;
t614 = -0.2e1 * t309;
t613 = 0.2e1 * t310;
t612 = -g(1) / 0.4e1;
t611 = g(1) / 0.4e1;
t610 = -g(2) / 0.4e1;
t609 = g(2) / 0.4e1;
t608 = g(3) / 0.2e1;
t244 = t314 + t294;
t226 = qJ(1,3) + t244;
t607 = sin(t226) / 0.4e1;
t245 = -t314 + t294;
t228 = qJ(1,3) - t245;
t187 = sin(t228);
t606 = t187 / 0.4e1;
t229 = qJ(1,3) - t244;
t188 = sin(t229);
t605 = -t188 / 0.4e1;
t246 = t315 + t295;
t230 = qJ(1,2) + t246;
t604 = sin(t230) / 0.4e1;
t247 = -t315 + t295;
t232 = qJ(1,2) - t247;
t191 = sin(t232);
t603 = t191 / 0.4e1;
t233 = qJ(1,2) - t246;
t192 = sin(t233);
t602 = -t192 / 0.4e1;
t242 = t316 - t496;
t234 = qJ(1,1) + t242;
t601 = sin(t234) / 0.4e1;
t433 = t316 + t496;
t236 = qJ(1,1) + t433;
t195 = sin(t236);
t600 = t195 / 0.4e1;
t237 = qJ(1,1) - t242;
t196 = sin(t237);
t599 = -t196 / 0.4e1;
t227 = qJ(1,3) + t245;
t598 = -cos(t227) / 0.4e1;
t199 = cos(t228);
t597 = -t199 / 0.4e1;
t200 = cos(t229);
t596 = t200 / 0.4e1;
t231 = qJ(1,2) + t247;
t595 = -cos(t231) / 0.4e1;
t594 = -cos(t232) / 0.4e1;
t235 = qJ(1,1) - t433;
t593 = -cos(t235) / 0.4e1;
t592 = -cos(t236) / 0.4e1;
t591 = -sin(t433) / 0.2e1;
t590 = sin(t247) / 0.2e1;
t306 = t326 ^ 2;
t589 = 0.2e1 * t306 - 0.1e1;
t307 = t328 ^ 2;
t588 = 0.2e1 * t307 - 0.1e1;
t308 = t330 ^ 2;
t587 = 0.2e1 * t308 - 0.1e1;
t271 = qJ(1,3) - t294;
t582 = g(3) * sin(t271);
t273 = qJ(1,2) - t295;
t581 = g(3) * sin(t273);
t275 = qJ(1,1) + t496;
t580 = g(3) * sin(t275);
t579 = g(3) * cos(t271);
t578 = g(3) * cos(t273);
t577 = g(3) * cos(t275);
t560 = t118 * t85;
t559 = t118 * t88;
t558 = 0.1e1 / t372 ^ 2 * t61 ^ 2;
t556 = t120 * t86;
t555 = t120 * t89;
t554 = 0.1e1 / t371 ^ 2 * t62 ^ 2;
t552 = t122 * t87;
t551 = t122 * t90;
t550 = 0.1e1 / t370 ^ 2 * t63 ^ 2;
t549 = t326 * t43;
t548 = t328 * t44;
t547 = t330 * t45;
t70 = (t276 * t319 + t279 * t318 + t403 * t540) * t145;
t546 = t70 * t320;
t71 = (t277 * t319 + t280 * t318 + t402 * t539) * t147;
t545 = t71 * t322;
t72 = (t278 * t319 + t281 * t318 + t401 * t538) * t149;
t544 = t72 * t324;
t541 = t122 * t303;
t140 = t276 * g(1) + t279 * g(2);
t534 = t140 * t326;
t141 = t277 * g(1) + t280 * g(2);
t533 = t141 * t328;
t142 = t278 * g(1) + t281 * g(2);
t532 = t142 * t330;
t531 = t145 * t276;
t530 = t145 * t279;
t529 = t145 * t320;
t528 = t147 * t277;
t527 = t147 * t280;
t526 = t147 * t322;
t525 = t149 * t278;
t524 = t149 * t281;
t523 = t149 * t324;
t510 = t303 * t331;
t336 = 0.2e1 * qJ(2,3);
t291 = pkin(5) + t336;
t264 = cos(t291);
t500 = t264 + t310;
t337 = 0.2e1 * qJ(2,2);
t292 = pkin(5) + t337;
t265 = cos(t292);
t499 = t265 + t310;
t338 = 0.2e1 * qJ(2,1);
t293 = pkin(5) + t338;
t266 = cos(t293);
t498 = t266 + t310;
t286 = g(3) * t327;
t115 = t143 * t321 + t286;
t287 = g(3) * t329;
t116 = t144 * t323 + t287;
t288 = g(3) * t331;
t117 = t397 * t325 + t288;
t485 = t85 * t543;
t484 = t88 * t543;
t483 = t298 * t558;
t482 = t299 * t558;
t481 = t86 * t542;
t480 = t89 * t542;
t479 = t301 * t554;
t478 = t302 * t554;
t477 = t87 * t541;
t476 = t90 * t541;
t475 = t304 * t550;
t474 = t305 * t550;
t473 = t43 * t529;
t472 = t145 * t549;
t471 = t44 * t526;
t470 = t147 * t548;
t469 = t45 * t523;
t468 = t149 * t547;
t467 = t299 * t621;
t466 = t302 * t622;
t465 = t305 * t623;
t461 = pkin(2) * t618;
t464 = (0.2e1 * t403 * t311 * t537 + (-(-t339 * cos(0.2e1 * t294) - t340 * cos(t336) - 0.2e1 * t347 - t500 * t461 + t497) * t561 + 0.2e1 * t621) * t297) * t298 / 0.2e1;
t463 = (0.2e1 * t402 * t312 * t536 + (-(-t339 * cos(0.2e1 * t295) - t340 * cos(t337) - 0.2e1 * t349 - t499 * t461 + t497) * t557 + 0.2e1 * t622) * t300) * t301 / 0.2e1;
t462 = (0.2e1 * t401 * t313 * t535 + (-(-t339 * cos(0.2e1 * t496) - t340 * cos(t338) - 0.2e1 * t351 - t498 * t461 + t497) * t553 + 0.2e1 * t623) * t303) * t304 / 0.2e1;
t460 = t114 * t303 * t330;
t453 = t114 * t541;
t452 = t115 * t543;
t451 = t116 * t542;
t450 = t117 * t541;
t446 = t114 * t510;
t445 = t606 + cos(t245) / 0.2e1;
t444 = t188 / 0.4e1 - cos(t244) / 0.2e1;
t443 = t603 + cos(t247) / 0.2e1;
t442 = t192 / 0.4e1 - cos(t246) / 0.2e1;
t441 = t600 + cos(t433) / 0.2e1;
t440 = t196 / 0.4e1 - cos(t242) / 0.2e1;
t439 = t199 / 0.4e1 + sin(t245) / 0.2e1;
t438 = t596 - sin(t244) / 0.2e1;
t204 = cos(t233);
t437 = -t204 / 0.4e1 + t594;
t436 = t204 / 0.4e1 + t594;
t208 = cos(t237);
t435 = t592 - t208 / 0.4e1;
t434 = t208 / 0.4e1 + t592;
t393 = t449 * t561;
t34 = t320 * t549 - t589 * t393;
t432 = -0.2e1 * t34 * t543;
t392 = t448 * t557;
t35 = t322 * t548 - t588 * t392;
t431 = -0.2e1 * t35 * t542;
t391 = t447 * t553;
t36 = t324 * t547 - t587 * t391;
t430 = -0.2e1 * t36 * t541;
t417 = t326 * t483;
t416 = t328 * t479;
t415 = t330 * t475;
t411 = t122 * t460;
t410 = t322 * t629;
t409 = t328 * t629;
t408 = t320 * t630;
t407 = t326 * t630;
t406 = t324 * t453;
t396 = t449 * t567;
t395 = t448 * t566;
t394 = t447 * t565;
t186 = sin(t227);
t197 = cos(t226);
t270 = qJ(1,3) + t294;
t390 = g(1) * t598 + g(2) * t607 + t186 * t610 + t197 * t612 + sin(t270) * t608;
t190 = sin(t231);
t201 = cos(t230);
t272 = qJ(1,2) + t295;
t389 = g(1) * t595 + g(2) * t604 + t190 * t610 + t201 * t612 + sin(t272) * t608;
t194 = sin(t235);
t205 = cos(t234);
t274 = qJ(1,1) - t496;
t388 = g(1) * t593 + g(2) * t601 + t194 * t610 + t205 * t612 + sin(t274) * t608;
t387 = g(1) * t607 + g(2) * t598 + t186 * t611 + t197 * t609 + cos(t270) * t608;
t386 = g(1) * t604 + g(2) * t595 + t190 * t611 + t201 * t609 + cos(t272) * t608;
t385 = g(1) * t601 + g(2) * t593 + t194 * t611 + t205 * t609 + cos(t274) * t608;
t384 = -g(1) * t515 + g(2) * t518 - t286;
t383 = -g(1) * t514 + g(2) * t517 - t287;
t382 = -g(1) * t513 + g(2) * t516 - t288;
t381 = 0.2e1 * t393;
t380 = -0.2e1 * t393;
t379 = 0.2e1 * t392;
t378 = -0.2e1 * t392;
t377 = 0.2e1 * t391;
t376 = -0.2e1 * t391;
t375 = t417 * t529;
t374 = t416 * t526;
t373 = t415 * t523;
t64 = t326 * t540 + t546;
t66 = t328 * t539 + t545;
t68 = t330 * t538 + t544;
t366 = -t464 - t467;
t365 = -t463 - t466;
t364 = -t462 - t465;
t360 = t43 * t309 + t310 * t380;
t359 = t309 * t380 - t43 * t310;
t358 = t44 * t309 + t310 * t378;
t357 = t309 * t378 - t44 * t310;
t356 = t45 * t309 + t310 * t376;
t355 = t309 * t376 - t45 * t310;
t354 = -t276 * t473 - t277 * t471 - t278 * t469;
t353 = -t279 * t473 - t280 * t471 - t281 * t469;
t260 = sin(t293);
t259 = sin(t292);
t258 = sin(t291);
t218 = sin(t246);
t214 = sin(t242);
t96 = t142 * t324 - t330 * t382;
t95 = -t324 * t382 - t532;
t94 = t141 * t322 - t328 * t383;
t93 = -t322 * t383 - t533;
t92 = t140 * t320 - t326 * t384;
t91 = -t320 * t384 - t534;
t69 = -t324 * t538 + t72 * t330;
t67 = -t322 * t539 + t71 * t328;
t65 = -t320 * t540 + t70 * t326;
t51 = t587 * t475;
t50 = t588 * t479;
t49 = t589 * t483;
t39 = (t324 * t45 + t330 * t376) * t324;
t38 = (t322 * t44 + t328 * t378) * t322;
t37 = (t320 * t43 + t326 * t380) * t320;
t33 = -t68 * pkin(1) + t382 - 0.2e1 * t418 + 0.2e1 * t564;
t32 = -t66 * pkin(1) + t383 - 0.2e1 * t419 + 0.2e1 * t563;
t31 = -t64 * pkin(1) + t384 - 0.2e1 * t420 + 0.2e1 * t562;
t30 = (pkin(1) * t415 + t369 - t382) * t324 - t532 + t72 * pkin(1);
t29 = (pkin(1) * t416 + t368 - t383) * t322 - t533 + t71 * pkin(1);
t28 = (pkin(1) * t417 + t367 - t384) * t320 - t534 + t70 * pkin(1);
t27 = t577 / 0.2e1 + t369 * t269 + (t266 * t475 + t72 * t614) * pkin(1) + (t591 + t214 / 0.2e1 - t434) * g(2) + (t440 + t441) * g(1) + t385;
t26 = -t580 / 0.2e1 + t369 * t263 + (t260 * t475 + t72 * t613) * pkin(1) + (t440 - t441) * g(2) + (-t214 / 0.2e1 + t591 - t435) * g(1) + t388;
t25 = t578 / 0.2e1 + t368 * t268 + (t265 * t479 + t71 * t614) * pkin(1) + (t218 / 0.2e1 + t590 - t436) * g(2) + (t442 + t443) * g(1) + t386;
t24 = t579 / 0.2e1 + t367 * t267 + (t264 * t483 + t70 * t614) * pkin(1) + (-t438 + t439) * g(2) + (t444 + t445) * g(1) + t387;
t23 = -t582 / 0.2e1 + t367 * t261 + (t258 * t483 + t70 * t613) * pkin(1) + (t444 - t445) * g(2) + (t438 + t439) * g(1) + t390;
t22 = -t581 / 0.2e1 + t368 * t262 + (t259 * t479 + t71 * t613) * pkin(1) + (t442 - t443) * g(2) + (-t218 / 0.2e1 + t590 - t437) * g(1) + t389;
t21 = -t364 * t553 + t361;
t20 = -t365 * t557 + t362;
t19 = -t366 * t561 + t363;
t18 = -t355 * t324 + t356 * t330;
t17 = -t357 * t322 + t358 * t328;
t16 = -t359 * t320 + t360 * t326;
t15 = t324 * t356 + t355 * t330;
t14 = t322 * t358 + t357 * t328;
t13 = t320 * t360 + t359 * t326;
t12 = -qJ(3,1) * t475 - pkin(1) * t547 - (t364 + 0.2e1 * t394) * t553 - t114 + t361;
t11 = -qJ(3,2) * t479 - pkin(1) * t548 - (t365 + 0.2e1 * t395) * t557 + t362 - t113;
t10 = -qJ(3,3) * t483 - pkin(1) * t549 - (t366 + 0.2e1 * t396) * t561 + t363 - t112;
t9 = t581 / 0.2e1 - t20 * t268 + (-t71 * t262 - t268 * t539) * qJ(3,2) + (t603 + t602) * g(2) + t437 * g(1) + (t259 * t379 + t499 * t44) * pkin(1) + t389;
t8 = -t19 * t267 + t582 / 0.2e1 + (-t70 * t261 - t267 * t540) * qJ(3,3) + (t606 + t605) * g(2) + (-t200 / 0.4e1 + t597) * g(1) + (t258 * t381 + t500 * t43) * pkin(1) + t390;
t7 = t19 * t261 - t579 / 0.2e1 + (t261 * t540 - t70 * t267) * qJ(3,3) + (t596 + t597) * g(2) + (t605 - t187 / 0.4e1) * g(1) + (t264 * t381 + (-t258 - t309) * t43) * pkin(1) + t387;
t6 = t21 * t263 - t577 / 0.2e1 + (t263 * t538 - t72 * t269) * qJ(3,1) + t434 * g(2) + (t599 - t195 / 0.4e1) * g(1) + (t266 * t377 + (-t260 - t309) * t45) * pkin(1) + t385;
t5 = t580 / 0.2e1 - t21 * t269 + (-t72 * t263 - t269 * t538) * qJ(3,1) + (t600 + t599) * g(2) + t435 * g(1) + (t260 * t377 + t498 * t45) * pkin(1) + t388;
t4 = t20 * t262 - t578 / 0.2e1 + (t262 * t539 - t71 * t268) * qJ(3,2) + t436 * g(2) + (t602 - t191 / 0.4e1) * g(1) + (t265 * t379 + (-t259 - t309) * t44) * pkin(1) + t386;
t3 = t308 * t340 * t45 + (-pkin(1) * t544 - t117 - t369) * qJ(3,1) + (-0.2e1 * (t569 / 0.2e1 - t572 / 0.2e1) * t331 + t575 + 0.2e1 * (t394 - t462 / 0.2e1 - t465 / 0.2e1) * t553 - qJ(3,1) * t538 - t361) * t284;
t2 = t307 * t340 * t44 + (-pkin(1) * t545 - t116 - t368) * qJ(3,2) + (-0.2e1 * (t570 / 0.2e1 - t573 / 0.2e1) * t329 + t285 + 0.2e1 * (t395 - t463 / 0.2e1 - t466 / 0.2e1) * t557 - qJ(3,2) * t539 - t362) * t283;
t1 = t306 * t340 * t43 + (-pkin(1) * t546 - t115 - t367) * qJ(3,3) + (-0.2e1 * (t571 / 0.2e1 - t574 / 0.2e1) * t327 + t576 + 0.2e1 * (t396 - t464 / 0.2e1 - t467 / 0.2e1) * t561 - qJ(3,3) * t540 - t363) * t282;
t40 = [-t43 * t484 - t44 * t480 - t45 * t476, -t90 * t453 - t629 * t89 - t630 * t88, -t90 * t450 - t89 * t451 - t88 * t452, -t276 * t375 - t277 * t374 - t278 * t373 - t37 * t484 - t38 * t480 - t39 * t476, t90 * t430 + t89 * t431 + t88 * t432 - t49 * t531 - t50 * t528 - t51 * t525, -t68 * t476 - t66 * t480 - t64 * t484 - t354, t276 * t472 + t277 * t470 + t278 * t468 - t69 * t476 - t67 * t480 - t65 * t484, t72 * t525 + t71 * t528 + t70 * t531, -t88 * t407 - t89 * t409 - t90 * t411 + t95 * t525 + t93 * t528 + t91 * t531, t90 * t406 + t88 * t408 + t89 * t410 + t96 * t525 + t94 * t528 + t92 * t531, t23 * t531 + t22 * t528 + t26 * t525 + (t15 * t83 - t5 * t551) * t303 + (t14 * t81 - t9 * t555) * t300 + (t13 * t79 - t8 * t559) * t297, t24 * t531 + t25 * t528 + t27 * t525 + (t18 * t83 - t6 * t551) * t303 + (t17 * t81 - t4 * t555) * t300 + (t16 * t79 - t7 * t559) * t297, t354 * pkin(1) - t31 * t484 - t32 * t480 - t33 * t476 - t83 * t474 - t81 * t478 - t79 * t482, (t12 * t83 - t3 * t551) * t303 + (t11 * t81 - t2 * t555) * t300 + (-t1 * t559 + t10 * t79) * t297 + (t28 * t531 + t29 * t528 + t30 * t525) * pkin(1), t319 - g(1); -t43 * t485 - t44 * t481 - t45 * t477, -t87 * t453 - t629 * t86 - t630 * t85, -t87 * t450 - t86 * t451 - t85 * t452, -t279 * t375 - t280 * t374 - t281 * t373 - t37 * t485 - t38 * t481 - t39 * t477, t87 * t430 + t86 * t431 + t85 * t432 - t49 * t530 - t50 * t527 - t51 * t524, -t68 * t477 - t66 * t481 - t64 * t485 - t353, t279 * t472 + t280 * t470 + t281 * t468 - t69 * t477 - t67 * t481 - t65 * t485, t72 * t524 + t71 * t527 + t70 * t530, -t85 * t407 - t86 * t409 - t87 * t411 + t95 * t524 + t93 * t527 + t91 * t530, t87 * t406 + t85 * t408 + t86 * t410 + t96 * t524 + t94 * t527 + t92 * t530, t23 * t530 + t22 * t527 + t26 * t524 + (t15 * t84 - t5 * t552) * t303 + (t14 * t82 - t9 * t556) * t300 + (t13 * t80 - t8 * t560) * t297, t24 * t530 + t25 * t527 + t27 * t524 + (t18 * t84 - t6 * t552) * t303 + (t17 * t82 - t4 * t556) * t300 + (t16 * t80 - t7 * t560) * t297, t353 * pkin(1) - t31 * t485 - t32 * t481 - t33 * t477 - t84 * t474 - t82 * t478 - t80 * t482, (t12 * t84 - t3 * t552) * t303 + (t11 * t82 - t2 * t556) * t300 + (-t1 * t560 + t10 * t80) * t297 + (t28 * t530 + t29 * t527 + t30 * t524) * pkin(1), t318 - g(2); t43 * t512 + t44 * t511 + t45 * t510, t446 + t458 + t456, t115 * t512 + t116 * t511 + t117 * t510, t37 * t512 + t38 * t511 + t39 * t510, 0.2e1 * t34 * t512 + 0.2e1 * t35 * t511 + 0.2e1 * t36 * t510, t68 * t510 + t66 * t511 + t64 * t512, t69 * t510 + t67 * t511 + t65 * t512, 0, t326 * t456 + t328 * t458 + t331 * t460, -t320 * t456 - t322 * t458 - t324 * t446, (t105 * t15 + t331 * t5) * t303 + (t104 * t14 + t329 * t9) * t300 + (t103 * t13 + t327 * t8) * t297, (t105 * t18 + t331 * t6) * t303 + (t104 * t17 + t329 * t4) * t300 + (t103 * t16 + t327 * t7) * t297, -t103 * t482 - t104 * t478 - t105 * t474 + t31 * t512 + t32 * t511 + t33 * t510, (t105 * t12 + t3 * t331) * t303 + (t104 * t11 + t2 * t329) * t300 + (t1 * t327 + t10 * t103) * t297, t317 - g(3);];
tauX_reg  = t40;
