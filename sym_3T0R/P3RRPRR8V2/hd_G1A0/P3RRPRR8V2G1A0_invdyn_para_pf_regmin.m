% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRPRR8V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d4,theta3]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [3x15]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-07 13:12
% Revision: e482436b586c4f286726c907c195760c5ac72455 (2022-11-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P3RRPRR8V2G1A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(7,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRPRR8V2G1A0_invdyn_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2022-11-07 13:11:30
% EndTime: 2022-11-07 13:11:49
% DurationCPUTime: 20.35s
% Computational Cost: add. (214763->813), mult. (252897->1191), div. (21354->15), fcn. (112311->140), ass. (0->545)
t372 = (pkin(3) ^ 2);
t374 = (pkin(2) ^ 2);
t694 = 3 * t374 + 6 * t372;
t693 = 6 * t374 + 3 * t372;
t331 = legFrame(1,3);
t283 = sin(t331);
t286 = cos(t331);
t346 = sin(qJ(1,1));
t352 = cos(qJ(1,1));
t134 = t352 * t283 + t346 * t286;
t135 = -t346 * t283 + t352 * t286;
t351 = cos(qJ(2,1));
t297 = t351 * pkin(2);
t316 = qJ(2,1) + pkin(7);
t277 = cos(t316);
t601 = pkin(3) * t277;
t689 = -t601 - t297;
t173 = 0.1e1 / t689;
t174 = 0.1e1 / t689 ^ 2;
t175 = t173 * t174;
t262 = sin(t316);
t345 = sin(qJ(2,1));
t605 = pkin(2) * t345;
t187 = pkin(3) * t262 + t605;
t334 = (qJ(3,1) + pkin(5));
t304 = (-pkin(6) - t334);
t291 = 0.1e1 / t304;
t339 = xDDP(2);
t340 = xDDP(1);
t301 = t372 + t374;
t358 = 0.2e1 * pkin(7);
t367 = 0.2e1 * qJ(2,1);
t314 = t367 + t358;
t672 = cos(t314) * t372 + cos(t367) * t374;
t405 = -t301 - t672;
t538 = t173 * t291;
t280 = t331 + qJ(1,1);
t233 = pkin(7) + t280;
t227 = qJ(2,1) + t233;
t193 = sin(t227);
t234 = -pkin(7) + t280;
t228 = -qJ(2,1) + t234;
t194 = sin(t228);
t199 = cos(t227);
t200 = cos(t228);
t215 = t367 + t233;
t368 = -0.2e1 * qJ(2,1);
t216 = t368 + t234;
t247 = t367 + t280;
t229 = t358 + t247;
t248 = t368 + t280;
t359 = -0.2e1 * pkin(7);
t230 = t359 + t248;
t245 = qJ(2,1) + t280;
t246 = -qJ(2,1) + t280;
t260 = sin(t314);
t315 = t367 + pkin(7);
t261 = sin(t315);
t319 = sin(t367);
t353 = xDP(3);
t354 = xDP(2);
t355 = xDP(1);
t482 = 2 * t353 * t372;
t483 = 2 * t355;
t484 = 2 * t354;
t300 = pkin(1) * t355;
t485 = 2 * t304 * t354 + 2 * t300;
t299 = pkin(1) * t354;
t488 = -2 * t304 * t355 + 2 * t299;
t638 = 4 * t353;
t499 = pkin(1) * t638;
t641 = 2 * t301;
t654 = 0.2e1 * pkin(2);
t656 = 4 * pkin(1);
t65 = t260 * t482 + ((t319 * t654 + t345 * t656) * t353 + (cos(t245) + cos(t246)) * t485 + (sin(t245) + sin(t246)) * t488) * pkin(2) + (cos(t280) * t641 + (cos(t247) + cos(t248)) * t374 + (cos(t229) + cos(t230)) * t372) * t355 + (sin(t280) * t641 + (sin(t247) + sin(t248)) * t374 + (sin(t229) + sin(t230)) * t372) * t354 + (t262 * t499 + (t199 + t200) * t485 + (t193 + t194) * t488 + (t261 * t638 + (cos(t215) + cos(t216) + cos(t233) + cos(t234)) * t483 + (sin(t215) + sin(t216) + sin(t233) + sin(t234)) * t484) * pkin(2)) * pkin(3);
t474 = t65 * t538;
t436 = -t474 / 0.4e1;
t386 = t304 ^ 2;
t577 = 0.1e1 / t386 * t65;
t457 = -t577 / 0.4e1;
t500 = 0.2e1 * pkin(3);
t463 = pkin(2) * t500;
t276 = cos(t315);
t328 = cos(pkin(7));
t502 = t276 + t328;
t326 = t353 ^ 2;
t599 = pkin(3) * t328;
t491 = pkin(2) * t599;
t531 = (0.2e1 * t491 + t301) * t326;
t338 = xDDP(3);
t537 = t173 * t338;
t249 = pkin(2) + t599;
t327 = sin(pkin(7));
t600 = pkin(3) * t327;
t93 = (t135 * t355 + t134 * t354 + t353 * (t249 * t345 + t351 * t600) / (t249 * t351 - t345 * t600)) * t291;
t82 = t93 * pkin(1);
t48 = t689 * t93 * t174 * t457 - (-t187 * t537 - t175 * t531 + t134 * t339 + t135 * t340 + ((-t502 * t463 + t405) * t93 / 0.2e1 - t689 * (-t82 + t436)) * t173 * t93) * t291;
t45 = t48 * pkin(1);
t298 = g(2) * t352;
t597 = g(1) * t346;
t205 = -t298 + t597;
t595 = g(2) * t346;
t596 = g(1) * t352;
t206 = t595 + t596;
t511 = -t205 * t286 - t206 * t283;
t535 = t174 * t326;
t692 = pkin(5) * t535 - 0.2e1 * t45 + t511;
t330 = legFrame(2,3);
t282 = sin(t330);
t285 = cos(t330);
t344 = sin(qJ(1,2));
t350 = cos(qJ(1,2));
t132 = t350 * t282 + t344 * t285;
t133 = -t344 * t282 + t350 * t285;
t349 = cos(qJ(2,2));
t296 = t349 * pkin(2);
t313 = qJ(2,2) + pkin(7);
t274 = cos(t313);
t602 = pkin(3) * t274;
t688 = -t602 - t296;
t170 = 0.1e1 / t688;
t171 = 0.1e1 / t688 ^ 2;
t172 = t170 * t171;
t259 = sin(t313);
t343 = sin(qJ(2,2));
t606 = pkin(2) * t343;
t186 = pkin(3) * t259 + t606;
t333 = qJ(3,2) + pkin(5);
t303 = -pkin(6) - t333;
t289 = 0.1e1 / t303;
t364 = 0.2e1 * qJ(2,2);
t311 = t364 + t358;
t671 = cos(t311) * t372 + cos(t364) * t374;
t406 = -t301 - t671;
t542 = t170 * t289;
t279 = t330 + qJ(1,2);
t235 = pkin(7) + t279;
t224 = qJ(2,2) + t235;
t191 = sin(t224);
t236 = -pkin(7) + t279;
t225 = -qJ(2,2) + t236;
t192 = sin(t225);
t197 = cos(t224);
t198 = cos(t225);
t217 = t364 + t235;
t365 = -0.2e1 * qJ(2,2);
t218 = t365 + t236;
t243 = t364 + t279;
t223 = t358 + t243;
t244 = t365 + t279;
t226 = t359 + t244;
t241 = qJ(2,2) + t279;
t242 = -qJ(2,2) + t279;
t257 = sin(t311);
t312 = t364 + pkin(7);
t258 = sin(t312);
t318 = sin(t364);
t486 = 0.2e1 * t303 * t354 + (2 * t300);
t489 = -0.2e1 * t303 * t355 + (2 * t299);
t66 = t257 * t482 + ((t318 * t654 + t343 * t656) * t353 + (cos(t241) + cos(t242)) * t486 + (sin(t241) + sin(t242)) * t489) * pkin(2) + (cos(t279) * t641 + (cos(t243) + cos(t244)) * t374 + (cos(t223) + cos(t226)) * t372) * t355 + (sin(t279) * t641 + (sin(t243) + sin(t244)) * t374 + (sin(t223) + sin(t226)) * t372) * t354 + (t259 * t499 + (t197 + t198) * t486 + (t191 + t192) * t489 + (t258 * t638 + (cos(t217) + cos(t218) + cos(t235) + cos(t236)) * t483 + (sin(t217) + sin(t218) + sin(t235) + sin(t236)) * t484) * pkin(2)) * pkin(3);
t473 = t66 * t542;
t435 = -t473 / 0.4e1;
t385 = t303 ^ 2;
t578 = 0.1e1 / t385 * t66;
t458 = -t578 / 0.4e1;
t273 = cos(t312);
t503 = t273 + t328;
t541 = t170 * t338;
t92 = (t133 * t355 + t132 * t354 + t353 * (t249 * t343 + t349 * t600) / (t249 * t349 - t343 * t600)) * t289;
t86 = pkin(1) * t92;
t47 = t688 * t92 * t171 * t458 - (-t186 * t541 - t172 * t531 + t132 * t339 + t133 * t340 + ((-t503 * t463 + t406) * t92 / 0.2e1 - t688 * (-t86 + t435)) * t170 * t92) * t289;
t44 = t47 * pkin(1);
t294 = t344 * g(1);
t583 = t350 * g(2);
t203 = -t294 + t583;
t584 = t350 * g(1);
t587 = t344 * g(2);
t204 = t584 + t587;
t512 = t203 * t285 - t204 * t282;
t539 = t171 * t326;
t691 = pkin(5) * t539 - 0.2e1 * t44 + t512;
t329 = legFrame(3,3);
t281 = sin(t329);
t284 = cos(t329);
t342 = sin(qJ(1,3));
t348 = cos(qJ(1,3));
t130 = t348 * t281 + t342 * t284;
t131 = -t342 * t281 + t348 * t284;
t347 = cos(qJ(2,3));
t295 = t347 * pkin(2);
t310 = qJ(2,3) + pkin(7);
t271 = cos(t310);
t603 = pkin(3) * t271;
t687 = -t603 - t295;
t167 = 0.1e1 / t687;
t168 = 0.1e1 / t687 ^ 2;
t169 = t167 * t168;
t256 = sin(t310);
t341 = sin(qJ(2,3));
t607 = pkin(2) * t341;
t185 = pkin(3) * t256 + t607;
t332 = qJ(3,3) + pkin(5);
t302 = -pkin(6) - t332;
t287 = 0.1e1 / t302;
t361 = 0.2e1 * qJ(2,3);
t308 = t361 + t358;
t670 = cos(t308) * t372 + cos(t361) * t374;
t407 = -t301 - t670;
t546 = t167 * t287;
t278 = t329 + qJ(1,3);
t231 = pkin(7) + t278;
t219 = qJ(2,3) + t231;
t189 = sin(t219);
t232 = -pkin(7) + t278;
t220 = -qJ(2,3) + t232;
t190 = sin(t220);
t195 = cos(t219);
t196 = cos(t220);
t213 = t361 + t231;
t362 = -0.2e1 * qJ(2,3);
t214 = t362 + t232;
t239 = t361 + t278;
t221 = t358 + t239;
t240 = t362 + t278;
t222 = t359 + t240;
t237 = qJ(2,3) + t278;
t238 = -qJ(2,3) + t278;
t254 = sin(t308);
t309 = t361 + pkin(7);
t255 = sin(t309);
t317 = sin(t361);
t487 = 0.2e1 * t302 * t354 + (2 * t300);
t490 = -0.2e1 * t302 * t355 + (2 * t299);
t64 = t254 * t482 + ((t317 * t654 + t341 * t656) * t353 + (cos(t237) + cos(t238)) * t487 + (sin(t237) + sin(t238)) * t490) * pkin(2) + (cos(t278) * t641 + (cos(t239) + cos(t240)) * t374 + (cos(t221) + cos(t222)) * t372) * t355 + (sin(t278) * t641 + (sin(t239) + sin(t240)) * t374 + (sin(t221) + sin(t222)) * t372) * t354 + (t256 * t499 + (t195 + t196) * t487 + (t189 + t190) * t490 + (t255 * t638 + (cos(t213) + cos(t214) + cos(t231) + cos(t232)) * t483 + (sin(t213) + sin(t214) + sin(t231) + sin(t232)) * t484) * pkin(2)) * pkin(3);
t475 = t64 * t546;
t437 = -t475 / 0.4e1;
t384 = t302 ^ 2;
t579 = 0.1e1 / t384 * t64;
t459 = -t579 / 0.4e1;
t269 = cos(t309);
t504 = t269 + t328;
t545 = t167 * t338;
t91 = (t131 * t355 + t130 * t354 + t353 * (t249 * t341 + t347 * t600) / (t249 * t347 - t341 * t600)) * t287;
t84 = pkin(1) * t91;
t46 = t687 * t91 * t168 * t459 - (-t185 * t545 - t169 * t531 + t130 * t339 + t131 * t340 + ((-t504 * t463 + t407) * t91 / 0.2e1 - t687 * (-t84 + t437)) * t167 * t91) * t287;
t43 = t46 * pkin(1);
t293 = t342 * g(1);
t585 = t348 * g(2);
t201 = -t293 + t585;
t586 = t348 * g(1);
t588 = t342 * g(2);
t202 = t586 + t588;
t513 = t201 * t284 - t202 * t281;
t543 = t168 * t326;
t690 = pkin(5) * t543 - 0.2e1 * t43 + t513;
t265 = cos(-pkin(7) + qJ(2,3));
t270 = cos(qJ(2,3) + t358);
t610 = pkin(2) * t255;
t494 = pkin(3) * t610;
t667 = t254 * t372 + t317 * t374;
t395 = 0.2e1 * t494 + t667;
t371 = pkin(3) * t372;
t598 = pkin(3) * t374;
t447 = -0.2e1 * t371 - 0.4e1 * t598;
t495 = -0.2e1 * t598;
t604 = pkin(2) * t372;
t497 = -0.2e1 * t604;
t544 = t167 * t353;
t373 = pkin(2) * t374;
t643 = -0.2e1 * t373 - 0.4e1 * t604;
t644 = -0.4e1 * pkin(1) * (t491 + t374 / 0.2e1 + t372 / 0.2e1);
t472 = (t395 * t91 * t302 - (t265 * t495 + t270 * t497 + t447 * t271 + t347 * t643 + t644) * t544) * t168 * t353;
t680 = 2 * pkin(1);
t515 = pkin(3) * t680;
t49 = (t271 * t515 + (t347 * t680 + t504 * t500) * pkin(2) - t407) * t91;
t481 = t49 * t579;
t121 = t185 * t680 + t395;
t555 = t121 * t338;
t250 = t295 + pkin(1);
t124 = t250 * t342 + t302 * t348;
t128 = t250 * t348 - t302 * t342;
t95 = -t124 * t281 + t128 * t284 + t131 * t603;
t560 = t95 * t340;
t94 = t124 * t284 + t128 * t281 + t130 * t603;
t561 = t94 * t339;
t357 = 0.3e1 * pkin(7);
t360 = 0.3e1 * qJ(2,3);
t375 = pkin(1) ^ 2;
t496 = -0.3e1 * t598;
t498 = -0.3e1 * t604;
t514 = -0.8e1 * pkin(2) * pkin(3);
t673 = -0.8e1 * t491 - (4 * t301);
t591 = (0.4e1 * t687 * (pkin(1) * t437 - (t375 + t384) * t91) + (t371 * cos(t360 + t357) + t603 * t693 + t373 * cos(t360) + t295 * t694 - (cos(t358 + t360) + t270) * t498 - (cos(t360 + pkin(7)) + t265) * t496) * t91 + (t269 * t514 - 0.4e1 * t670 + t673) * (-t84 - t475 / 0.8e1) - (-0.4e1 * t494 - 0.2e1 * t667) * t302 * t544) * t91;
t686 = (-(t555 / 0.2e1 + t591 / 0.4e1) * t167 + t561 + t560 - t472 / 0.2e1) * t287 + t43 - t168 * t481 / 0.8e1;
t335 = 0.2e1 * t332;
t685 = (-(t555 + t591 / 0.2e1) * t167 - t472 + 0.2e1 * t560 + 0.2e1 * t561) * t287 - (t335 * t326 - t49 * t459) * t168 + 0.4e1 * t43;
t263 = cos(t358 + qJ(2,2));
t266 = cos(-pkin(7) + qJ(2,2));
t609 = pkin(2) * t258;
t493 = pkin(3) * t609;
t668 = t257 * t372 + t318 * t374;
t394 = 0.2e1 * t493 + t668;
t540 = t170 * t353;
t471 = (t394 * t92 * t303 - (t263 * t497 + t266 * t495 + t447 * t274 + t349 * t643 + t644) * t540) * t171 * t353;
t50 = (t274 * t515 + (t349 * t680 + t503 * t500) * pkin(2) - t406) * t92;
t480 = t50 * t578;
t122 = t186 * t680 + t394;
t554 = t122 * t338;
t251 = t296 + pkin(1);
t125 = t251 * t344 + t303 * t350;
t129 = t251 * t350 - t303 * t344;
t97 = -t125 * t282 + t129 * t285 + t133 * t602;
t558 = t97 * t340;
t96 = t125 * t285 + t129 * t282 + t132 * t602;
t559 = t96 * t339;
t363 = 0.3e1 * qJ(2,2);
t590 = (0.4e1 * t688 * (pkin(1) * t435 - (t375 + t385) * t92) + (t371 * cos(t363 + t357) + t602 * t693 + t373 * cos(t363) + t296 * t694 - (cos(t358 + t363) + t263) * t498 - (cos(t363 + pkin(7)) + t266) * t496) * t92 + (t273 * t514 - 0.4e1 * t671 + t673) * (-t86 - t473 / 0.8e1) - (-0.4e1 * t493 - 0.2e1 * t668) * t303 * t540) * t92;
t684 = (-(t554 / 0.2e1 + t590 / 0.4e1) * t170 + t559 + t558 - t471 / 0.2e1) * t289 + t44 - t171 * t480 / 0.8e1;
t336 = 0.2e1 * t333;
t683 = (-(t554 + t590 / 0.2e1) * t170 - t471 + 0.2e1 * t558 + 0.2e1 * t559) * t289 - (t336 * t326 - t50 * t458) * t171 + 0.4e1 * t44;
t264 = cos(t358 + qJ(2,1));
t267 = cos(-pkin(7) + qJ(2,1));
t608 = pkin(2) * t261;
t492 = pkin(3) * t608;
t669 = t260 * t372 + t319 * t374;
t393 = 0.2e1 * t492 + t669;
t536 = t173 * t353;
t470 = (t393 * t93 * t304 - (t264 * t497 + t267 * t495 + t447 * t277 + t351 * t643 + t644) * t536) * t174 * t353;
t51 = (t277 * t515 + (t351 * t680 + t502 * t500) * pkin(2) - t405) * t93;
t479 = t51 * t577;
t123 = t187 * t680 + t393;
t553 = t123 * t338;
t252 = t297 + pkin(1);
t126 = t252 * t346 + t304 * t352;
t127 = t252 * t352 - t304 * t346;
t99 = -t126 * t283 + t127 * t286 + t135 * t601;
t556 = t99 * t340;
t98 = t126 * t286 + t127 * t283 + t134 * t601;
t557 = t98 * t339;
t366 = 0.3e1 * qJ(2,1);
t589 = (0.4e1 * t689 * (pkin(1) * t436 - (t375 + t386) * t93) + (t371 * cos(t357 + t366) + t601 * t693 + t373 * cos(t366) + t297 * t694 - (cos(t366 + t358) + t264) * t498 - (t267 + cos(pkin(7) + t366)) * t496) * t93 + (t276 * t514 - 0.4e1 * t672 + t673) * (-t82 - t474 / 0.8e1) - (-0.4e1 * t492 - 0.2e1 * t669) * t304 * t536) * t93;
t682 = (-(t553 / 0.2e1 + t589 / 0.4e1) * t173 + t557 + t556 - t470 / 0.2e1) * t291 + t45 - t174 * t479 / 0.8e1;
t337 = 2 * t334;
t681 = (-(t553 + t589 / 0.2e1) * t173 - t470 + 0.2e1 * t556 + 0.2e1 * t557) * t291 - ((t337 * t326) - t51 * t457) * t174 + 0.4e1 * t45;
t679 = t201 * t281 + t202 * t284;
t678 = t203 * t282 + t204 * t285;
t677 = -t205 * t283 + t206 * t286;
t655 = -0.2e1 * pkin(2);
t112 = -t169 * t185 * t326 - t545;
t628 = t112 / 0.2e1;
t478 = t91 * t544;
t76 = pkin(1) * t478;
t73 = pkin(5) * t628 + t76;
t650 = -0.2e1 * t73;
t113 = -t172 * t186 * t326 - t541;
t627 = t113 / 0.2e1;
t477 = t92 * t540;
t77 = pkin(1) * t477;
t74 = pkin(5) * t627 + t77;
t649 = -0.2e1 * t74;
t114 = -t175 * t187 * t326 - t537;
t626 = t114 / 0.2e1;
t476 = t93 * t536;
t78 = pkin(1) * t476;
t75 = pkin(5) * t626 + t78;
t648 = -0.2e1 * t75;
t640 = -0.2e1 * t327;
t639 = 0.2e1 * t328;
t637 = -pkin(5) / 0.2e1;
t636 = -g(1) / 0.2e1;
t635 = g(1) / 0.2e1;
t634 = -g(2) / 0.2e1;
t633 = g(2) / 0.2e1;
t632 = pkin(1) * g(2);
t631 = pkin(5) * t46;
t630 = pkin(5) * t47;
t629 = pkin(5) * t48;
t625 = -t121 / 0.2e1;
t624 = -t122 / 0.2e1;
t623 = -t123 / 0.2e1;
t622 = t189 / 0.2e1;
t621 = t191 / 0.2e1;
t620 = t193 / 0.2e1;
t619 = t196 / 0.2e1;
t618 = t198 / 0.2e1;
t617 = t200 / 0.2e1;
t616 = t256 / 0.2e1;
t615 = t259 / 0.2e1;
t614 = t262 / 0.2e1;
t613 = t271 / 0.2e1;
t612 = t274 / 0.2e1;
t611 = t277 / 0.2e1;
t594 = g(3) * t347;
t593 = g(3) * t349;
t592 = g(3) * t351;
t576 = t327 * t46;
t575 = t327 * t47;
t574 = t327 * t48;
t573 = t328 * t46;
t572 = t328 * t47;
t571 = t328 * t48;
t570 = t345 * t48;
t569 = t347 * t46;
t568 = t349 * t47;
t567 = t351 * t48;
t566 = t46 * t332;
t565 = t46 * t341;
t564 = t47 * t333;
t563 = t47 * t343;
t562 = t48 * t334;
t552 = t130 * t287;
t551 = t131 * t287;
t550 = t132 * t289;
t549 = t133 * t289;
t548 = t134 * t291;
t547 = t135 * t291;
t534 = t185 * t287;
t533 = t186 * t289;
t532 = t187 * t291;
t518 = t341 * t347;
t517 = t343 * t349;
t516 = t345 * t351;
t510 = g(2) * t622 + t195 * t635;
t509 = g(2) * t621 + t197 * t635;
t508 = g(2) * t620 + t199 * t635;
t507 = g(1) * t622 + t195 * t634;
t506 = g(1) * t621 + t197 * t634;
t505 = g(1) * t620 + t199 * t634;
t88 = t91 ^ 2;
t469 = t88 * t518;
t89 = t92 ^ 2;
t468 = t89 * t517;
t90 = t93 ^ 2;
t467 = t90 * t516;
t83 = pkin(1) * t88;
t466 = t83 + t679;
t85 = pkin(1) * t89;
t465 = t85 + t678;
t87 = pkin(1) * t90;
t464 = t87 + t677;
t462 = t167 * t534;
t461 = t170 * t533;
t460 = t173 * t532;
t446 = 0.2e1 * t478;
t445 = 0.2e1 * t477;
t444 = 0.2e1 * t476;
t443 = t91 * t475;
t442 = t92 * t473;
t441 = t93 * t474;
t440 = t341 * t478;
t439 = t343 * t477;
t438 = t345 * t476;
t434 = t546 * t625;
t433 = t542 * t624;
t432 = t538 * t623;
t431 = t478 * t655;
t430 = t477 * t655;
t429 = t476 * t655;
t58 = -t443 / 0.2e1;
t59 = -t442 / 0.2e1;
t60 = -t441 / 0.2e1;
t416 = g(2) * t619 + t190 * t636;
t415 = g(2) * t618 + t192 * t636;
t414 = g(2) * t617 + t194 * t636;
t413 = g(1) * t619 + t190 * t633;
t412 = g(1) * t618 + t192 * t633;
t411 = g(1) * t617 + t194 * t633;
t100 = t112 * t341 + t347 * t543;
t102 = t113 * t343 + t349 * t539;
t104 = t114 * t345 + t351 * t535;
t401 = t328 * t446 + t576;
t400 = t327 * t446 - t573;
t399 = t328 * t445 + t575;
t398 = t327 * t445 - t572;
t397 = t328 * t444 + t574;
t396 = t327 * t444 - t571;
t370 = pkin(5) ^ 2;
t356 = pkin(1) * g(1);
t325 = t351 ^ 2;
t324 = t349 ^ 2;
t323 = t347 ^ 2;
t212 = t334 * g(1) + t632;
t211 = -t334 * g(2) + t356;
t210 = t333 * g(1) + t632;
t209 = -t333 * g(2) + t356;
t208 = t332 * g(1) + t632;
t207 = -t332 * g(2) + t356;
t153 = g(1) * t286 + g(2) * t283;
t152 = g(1) * t285 + g(2) * t282;
t151 = g(1) * t284 + g(2) * t281;
t150 = g(1) * t283 - g(2) * t286;
t149 = g(1) * t282 - g(2) * t285;
t148 = g(1) * t281 - g(2) * t284;
t120 = -t150 * t346 + t153 * t352;
t119 = -t149 * t344 + t152 * t350;
t118 = -t148 * t342 + t151 * t348;
t117 = t150 * t352 + t153 * t346;
t116 = t149 * t350 + t152 * t344;
t115 = t148 * t348 + t151 * t342;
t105 = t114 * t351 - t345 * t535;
t103 = t113 * t349 - t343 * t539;
t101 = t112 * t347 - t341 * t543;
t72 = -0.2e1 * t114 * t334 - 0.4e1 * t78;
t71 = -0.2e1 * t113 * t333 - 0.4e1 * t77;
t70 = -0.2e1 * t112 * t332 - 0.4e1 * t76;
t42 = (t351 * t444 + t570) * t345;
t41 = (t349 * t445 + t563) * t343;
t40 = (t347 * t446 + t565) * t341;
t39 = t464 - t629;
t38 = t465 - t630;
t37 = t466 - t631;
t36 = t692 * t345 + t351 * t648;
t35 = t345 * t648 - t692 * t351;
t34 = t343 * t649 - t691 * t349;
t33 = t691 * t343 + t349 * t649;
t32 = t341 * t650 - t690 * t347;
t31 = t690 * t341 + t347 * t650;
t30 = 0.2e1 * t48 * t516 + (0.4e1 * t325 - 0.2e1) * t476;
t29 = 0.2e1 * t47 * t517 + (0.4e1 * t324 - 0.2e1) * t477;
t28 = 0.2e1 * t46 * t518 + (0.4e1 * t323 - 0.2e1) * t478;
t27 = t441 + 0.2e1 * t87 - 0.2e1 * t562;
t26 = t442 + 0.2e1 * t85 - 0.2e1 * t564;
t25 = t443 + 0.2e1 * t83 - 0.2e1 * t566;
t24 = -t104 * pkin(2) + t337 * t48 + t60 - t677;
t23 = -t102 * pkin(2) + t336 * t47 + t59 - t678;
t22 = -t100 * pkin(2) + t335 * t46 + t58 - t679;
t18 = -t400 * t341 + t401 * t347;
t17 = -t396 * t345 + t397 * t351;
t16 = -t398 * t343 + t399 * t349;
t15 = t345 * t397 + t396 * t351;
t14 = t343 * t399 + t398 * t349;
t13 = t341 * t401 + t400 * t347;
t12 = -t334 * t90 + (0.2e1 * t438 - t567) * pkin(2) + t511 - t682;
t11 = -t333 * t89 + (0.2e1 * t439 - t568) * pkin(2) + t512 - t684;
t10 = -t332 * t88 + (0.2e1 * t440 - t569) * pkin(2) + t513 - t686;
t9 = -pkin(2) * t574 + t276 * t429 - t48 * t608 + t72 * t611 - t681 * t614 - t411 + t508;
t8 = -pkin(2) * t575 + t273 * t430 - t47 * t609 + t71 * t612 - t683 * t615 - t412 + t509;
t7 = -pkin(2) * t576 + t269 * t431 - t46 * t610 + t70 * t613 - t685 * t616 - t413 + t510;
t6 = t261 * t429 + t681 * t611 + t72 * t614 - t414 + t505 + (t48 * t276 + t571) * pkin(2);
t5 = t258 * t430 + t683 * t612 + t71 * t615 - t415 + t506 + (t47 * t273 + t572) * pkin(2);
t4 = t255 * t431 + t685 * t613 + t70 * t616 - t416 + t507 + (t46 * t269 + t573) * pkin(2);
t3 = 0.2e1 * ((-t298 / 0.2e1 + t597 / 0.2e1) * t286 + (t596 / 0.2e1 + t595 / 0.2e1) * t283 - pkin(2) * t438 + t45 + (-t479 / 0.16e2 + (t637 - qJ(3,1) / 0.2e1) * t326) * t174 - (-t556 / 0.2e1 - t557 / 0.2e1 + t470 / 0.4e1 - (-t553 / 0.4e1 - t589 / 0.8e1) * t173) * t291) * t297 + (t211 * t346 - t212 * t352) * t286 + (t211 * t352 + t212 * t346) * t283 - 0.2e1 * (qJ(3,1) * t626 + t75) * t605 + (t60 + 0.2e1 * t629) * qJ(3,1) + pkin(5) * t60 + pkin(1) * t682 + (qJ(3,1) ^ 2 + t325 * t374 + t370) * t48;
t2 = 0.2e1 * ((-t583 / 0.2e1 + t294 / 0.2e1) * t285 + (t584 / 0.2e1 + t587 / 0.2e1) * t282 - pkin(2) * t439 + t44 + (-t480 / 0.16e2 + (t637 - qJ(3,2) / 0.2e1) * t326) * t171 - (-t558 / 0.2e1 - t559 / 0.2e1 + t471 / 0.4e1 - (-t554 / 0.4e1 - t590 / 0.8e1) * t170) * t289) * t296 + (t209 * t344 - t210 * t350) * t285 + (t209 * t350 + t210 * t344) * t282 - 0.2e1 * (qJ(3,2) * t627 + t74) * t606 + (t59 + 0.2e1 * t630) * qJ(3,2) + pkin(5) * t59 + pkin(1) * t684 + (qJ(3,2) ^ 2 + t324 * t374 + t370) * t47;
t1 = 0.2e1 * ((-t585 / 0.2e1 + t293 / 0.2e1) * t284 + (t586 / 0.2e1 + t588 / 0.2e1) * t281 - pkin(2) * t440 + t43 + (-t481 / 0.16e2 + (t637 - qJ(3,3) / 0.2e1) * t326) * t168 - (-t560 / 0.2e1 - t561 / 0.2e1 + t472 / 0.4e1 - (-t555 / 0.4e1 - t591 / 0.8e1) * t167) * t287) * t295 + (t207 * t342 - t208 * t348) * t284 + (t207 * t348 + t208 * t342) * t281 - 0.2e1 * (qJ(3,3) * t628 + t73) * t607 + (t58 + 0.2e1 * t631) * qJ(3,3) + pkin(5) * t58 + pkin(1) * t686 + (qJ(3,3) ^ 2 + t323 * t374 + t370) * t46;
t19 = [-t46 * t551 - t47 * t549 - t48 * t547, -t115 * t551 - t116 * t549 - t117 * t547, -t118 * t551 - t119 * t549 - t120 * t547, -t40 * t551 - t41 * t549 - t42 * t547, -t28 * t551 - t29 * t549 - t30 * t547, -t100 * t551 - t102 * t549 - t104 * t547, -t101 * t551 - t103 * t549 - t105 * t547, 0, -t32 * t551 - t34 * t549 - t35 * t547, -t31 * t551 - t33 * t549 - t36 * t547, -(t135 * t6 + t15 * t99) * t291 - (t133 * t5 + t14 * t97) * t289 - (t13 * t95 + t131 * t4) * t287, -(t135 * t9 + t17 * t99) * t291 - (t133 * t8 + t16 * t97) * t289 - (t131 * t7 + t18 * t95) * t287, -(t135 * t24 - t90 * t99) * t291 - (t133 * t23 - t89 * t97) * t289 - (t131 * t22 - t88 * t95) * t287, -(t12 * t99 + t135 * t3) * t291 - (t11 * t97 + t133 * t2) * t289 - (t1 * t131 + t10 * t95) * t287, t340 - g(1); -t46 * t552 - t47 * t550 - t48 * t548, -t115 * t552 - t116 * t550 - t117 * t548, -t118 * t552 - t119 * t550 - t120 * t548, -t40 * t552 - t41 * t550 - t42 * t548, -t28 * t552 - t29 * t550 - t30 * t548, -t100 * t552 - t102 * t550 - t104 * t548, -t101 * t552 - t103 * t550 - t105 * t548, 0, -t32 * t552 - t34 * t550 - t35 * t548, -t31 * t552 - t33 * t550 - t36 * t548, -(t134 * t6 + t15 * t98) * t291 - (t132 * t5 + t14 * t96) * t289 - (t13 * t94 + t130 * t4) * t287, -(t134 * t9 + t17 * t98) * t291 - (t132 * t8 + t16 * t96) * t289 - (t130 * t7 + t18 * t94) * t287, -(t134 * t24 - t90 * t98) * t291 - (t132 * t23 - t89 * t96) * t289 - (t130 * t22 - t88 * t94) * t287, -(t12 * t98 + t134 * t3) * t291 - (t11 * t96 + t132 * t2) * t289 - (t1 * t130 + t10 * t94) * t287, t339 - g(2); t46 * t462 + t48 * t460 + t47 * t461, t115 * t462 + t116 * t461 + t117 * t460, t118 * t462 + t119 * t461 + t120 * t460, -(-t42 * t532 - t467) * t173 - (-t41 * t533 - t468) * t170 - (-t40 * t534 - t469) * t167, -(-t30 * t532 - 0.2e1 * t325 * t90 + t90) * t173 - (-t29 * t533 - 0.2e1 * t324 * t89 + t89) * t170 - (-t28 * t534 - 0.2e1 * t323 * t88 + t88) * t167, -(-t104 * t532 + t570) * t173 - (-t102 * t533 + t563) * t170 - (-t100 * t534 + t565) * t167, -(-t105 * t532 + t567) * t173 - (-t103 * t533 + t568) * t170 - (-t101 * t534 + t569) * t167, -t167 * t112 - t170 * t113 - t173 * t114, -(t345 * t39 - t35 * t532 - t592) * t173 - (-t34 * t533 + t343 * t38 - t593) * t170 - (-t32 * t534 + t341 * t37 - t594) * t167, -(g(3) * t345 + t351 * t39 - t36 * t532) * t173 - (g(3) * t343 - t33 * t533 + t349 * t38) * t170 - (g(3) * t341 - t31 * t534 + t347 * t37) * t167, t6 * t460 - t173 * (t27 * t614 - g(3) * t277 + (t114 * t639 + t90 * t261) * pkin(2) + t414 + t505) - t15 * t432 + t5 * t461 - t170 * (t26 * t615 - g(3) * t274 + (t113 * t639 + t89 * t258) * pkin(2) + t415 + t506) - t14 * t433 + t4 * t462 - t167 * (t25 * t616 - g(3) * t271 + (t112 * t639 + t88 * t255) * pkin(2) + t416 + t507) - t13 * t434, t9 * t460 - t173 * (t27 * t611 + g(3) * t262 + (t114 * t640 + t90 * t276) * pkin(2) + t411 + t508) - t17 * t432 + t8 * t461 - t170 * (t26 * t612 + g(3) * t259 + (t113 * t640 + t89 * t273) * pkin(2) + t412 + t509) - t16 * t433 + t7 * t462 - t167 * (t25 * t613 + g(3) * t256 + (t112 * t640 + t88 * t269) * pkin(2) + t413 + t510) - t18 * t434, (t187 * t24 + t90 * t623) * t538 + (t186 * t23 + t89 * t624) * t542 + (t185 * t22 + t88 * t625) * t546 + (t167 * t565 + t170 * t563 + t173 * t570) * pkin(2), (t187 * t3 + t123 * t12 / 0.2e1) * t538 + (t186 * t2 + t122 * t11 / 0.2e1) * t542 + (t185 * t1 + t121 * t10 / 0.2e1) * t546 + (-t173 * ((t441 / 0.2e1 - t562 + t464) * t345 - t592) - t170 * ((t442 / 0.2e1 - t564 + t465) * t343 - t593) - t167 * ((t443 / 0.2e1 - t566 + t466) * t341 - t594) + (-t173 * (t114 + t467) - t170 * (t113 + t468) - t167 * (t112 + t469)) * pkin(2)) * pkin(2), t338 - g(3);];
tauX_reg  = t19;
