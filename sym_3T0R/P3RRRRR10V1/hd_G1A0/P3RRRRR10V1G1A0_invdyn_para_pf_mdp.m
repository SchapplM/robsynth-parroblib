% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRRRR10V1G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR10V1G1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 22:09
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR10V1G1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(6,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P3RRRRR10V1G1A0_invdyn_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 21:56:00
% EndTime: 2020-08-06 22:02:01
% DurationCPUTime: 368.68s
% Computational Cost: add. (3236808->2016), mult. (7649358->3328), div. (102741->23), fcn. (5953230->26), ass. (0->1303)
t5160 = sin(pkin(3));
t5101 = t5160 * g(3);
t5161 = cos(pkin(3));
t5182 = sin(qJ(1,1));
t5191 = cos(qJ(1,1));
t5193 = xDP(2);
t5194 = xDP(1);
t5036 = t5182 * t5193 + t5191 * t5194;
t5039 = -t5182 * t5194 + t5191 * t5193;
t5170 = legFrame(1,3);
t5105 = sin(t5170);
t5108 = cos(t5170);
t4967 = t5036 * t5108 + t5039 * t5105;
t5192 = xDP(3);
t5770 = t5160 * t5192;
t5055 = pkin(6) * t5770;
t5180 = sin(qJ(3,1));
t5181 = sin(qJ(2,1));
t5190 = cos(qJ(2,1));
t5303 = t5036 * t5105 - t5039 * t5108;
t5189 = cos(qJ(3,1));
t5738 = t5189 * t5190;
t5745 = t5181 * t5189;
t5760 = t5161 * t5190;
t4892 = t5055 * t5190 + (-t4967 * t5181 - t5303 * t5760) * pkin(6) + ((-t5180 * t5192 + t5303 * t5745) * t5161 - t4967 * t5738 + (-t5180 * t5303 - t5192 * t5745) * t5160) * pkin(2);
t4889 = t4892 ^ 2;
t5117 = t5180 * pkin(2);
t5091 = pkin(1) * t5117;
t5118 = t5181 * pkin(6);
t5654 = pkin(2) * t5745;
t5939 = t5190 * pkin(6);
t5042 = t5654 - t5939;
t5846 = t5042 * t5161;
t5285 = pkin(1) * t5846 + (-t5091 + (pkin(2) * t5738 + t5118) * pkin(5)) * t5160;
t4954 = 0.1e1 / t5285 ^ 2;
t4880 = t4889 * t4954;
t5646 = pkin(5) * t4880;
t5737 = t5190 * t5192;
t4928 = -pkin(5) * t5303 + pkin(6) * t5737;
t4964 = pkin(2) * t5303;
t5139 = t5161 ^ 2;
t5744 = t5181 * t5190;
t5505 = t5180 * t5744;
t5963 = pkin(2) * t5160;
t5351 = t5505 * t5963;
t5818 = (t5190 + 0.1e1) * (t5190 - 0.1e1);
t5954 = pkin(6) * t5160;
t5453 = t5818 * t5954;
t5157 = t5190 ^ 2;
t5973 = t5157 - 0.1e1;
t5473 = t5973 * t5117 - pkin(5);
t5153 = t5189 ^ 2;
t5794 = t5153 * t5181;
t5664 = pkin(2) * t5794;
t5100 = t5157 - 0.2e1;
t5668 = t5100 * t5117;
t5675 = 0.2e1 * t5770;
t5777 = t5160 * t5181;
t5852 = t4967 * t5160;
t5956 = pkin(2) * t5192;
t5964 = pkin(2) * t5153;
t5123 = pkin(5) * t5192;
t6027 = -t5303 * t5939 - t5123;
t6040 = t5118 + pkin(1);
t6045 = -0.2e1 * t5964;
t4808 = ((-t5192 * t5668 - t6027) * t5189 + (-t4928 * t5180 + t5303 * t6045 + t4964) * t5181) * t5139 + ((t4967 * t5190 + t5181 * t5675) * t5964 + ((-t5303 * t5668 - t4928) * t5160 + t6040 * t4967) * t5189 + (t6027 * t5180 - t5956) * t5777) * t5161 + t5303 * t5664 + (-t4967 * t5351 + t5192 * t5473) * t5189 + ((-pkin(1) * t5852 + t4928) * t5180 - t4964) * t5181 + (pkin(1) * t5737 + t4967 * t5453) * t5180;
t4953 = 0.1e1 / t5285;
t5154 = 0.1e1 / t5189;
t5860 = t4953 * t5154;
t4802 = t4808 * t5860;
t5896 = t4892 * t4953;
t4871 = t5161 * t5896;
t4751 = -t4871 - t4802;
t5201 = pkin(6) ^ 2;
t4788 = t5201 * t4802;
t5983 = t5139 - 0.1e1;
t5468 = t5983 * t5192;
t5784 = t5160 * t5161;
t5544 = t5303 * t5784;
t4925 = -t5468 - t5544;
t5815 = t5139 * t5181;
t5640 = pkin(6) * t5815;
t5027 = -t5640 + t6040;
t5074 = 0.2e1 * t5118 + pkin(1);
t5126 = pkin(1) * t5181;
t5081 = t5126 + pkin(6);
t5073 = t5117 + pkin(5);
t5821 = (t5161 + 0.1e1) * (t5161 - 0.1e1);
t5380 = t5073 * t5303 * t5821;
t5631 = t5983 * pkin(6);
t5438 = t5126 - t5631;
t5441 = pkin(6) * t5544;
t5204 = pkin(2) ^ 2;
t5793 = t5153 * t5204;
t5462 = -t5201 + t5793;
t5759 = t5161 * t5192;
t5523 = t5073 * t5759;
t6013 = 0.2e1 * pkin(6);
t5938 = pkin(2) * t6013;
t5632 = t5189 * t5938;
t5958 = pkin(2) * t5189;
t4832 = (t4925 * t5632 - t5462 * t5852) * t5157 + (-t4925 * t5181 * t5793 - ((t4967 * t5074 + t5523) * t5160 - t5380) * t5958 + (t5027 * t5192 - t5181 * t5441) * pkin(6)) * t5190 - (t5192 * t5438 - t5441) * t5958 - pkin(6) * ((t4967 * t5081 + t5181 * t5523) * t5160 - t5181 * t5380);
t5000 = t5160 * (-pkin(5) * t5118 + t5091);
t5967 = pkin(1) * t5161;
t5085 = pkin(6) * t5967;
t5772 = t5160 * t5189;
t5660 = pkin(2) * t5772;
t4937 = (-pkin(5) * t5660 + t5085) * t5190 - t5654 * t5967 + t5000;
t4933 = 0.1e1 / t4937;
t5880 = t4933 * t5154;
t5595 = t4832 * t5880;
t4814 = t5180 * t5595;
t5264 = -pkin(6) * t4814 - t4788;
t5758 = t5161 * t5201;
t5778 = t5160 * t5180;
t4691 = t4751 * t5793 - (-pkin(2) * t5042 * t5778 + t5758) * t5896 + t5264;
t5858 = t4953 * t5180;
t5608 = t4808 * t5858;
t5411 = t5154 * t5608;
t4715 = -pkin(6) * t5411 - t5595;
t5764 = t5161 * t5180;
t5957 = pkin(2) * t5190;
t4697 = (-((pkin(6) * t5745 + t5957) * t5160 + pkin(6) * t5764) * t5896 + t4715) * t4953 * t5595;
t5172 = xDDP(2);
t4994 = t5105 * t5182 - t5108 * t5191;
t4997 = t5105 * t5191 + t5108 * t5182;
t5541 = t4994 * t5778;
t4910 = -t4997 * t5118 + t4994 * t5846 + (-t4997 * t5738 - t5541) * pkin(2);
t5891 = t4910 * t4953;
t4895 = t5172 * t5891;
t5173 = xDDP(1);
t5538 = t4997 * t5778;
t4913 = t4994 * t5118 + t4997 * t5846 + (t4994 * t5738 - t5538) * pkin(2);
t5888 = t4913 * t4953;
t4898 = t5173 * t5888;
t5171 = xDDP(3);
t5855 = t4953 * (pkin(2) * t5764 + t5042 * t5160);
t4922 = t5171 * t5855;
t5372 = -t4697 - t4895 - t4898 + t4922;
t5910 = t4808 * t5154;
t5198 = pkin(5) / 0.2e1;
t5061 = t5117 + t5198;
t5072 = pkin(5) * t5180 + pkin(2);
t5090 = pkin(5) * t5117;
t5094 = pkin(1) * t5118;
t5517 = t5160 * t5760;
t5450 = pkin(6) * t5517;
t5521 = t5100 * t5793;
t5535 = t5061 * t5784;
t5911 = t4808 * t4953;
t5607 = t5204 * t5911;
t5812 = t5139 * t5190;
t5637 = pkin(6) * t5812;
t5691 = 0.2e1 * t5181;
t5701 = t5201 + t5204;
t4769 = pkin(2) * t5411;
t5205 = 0.1e1 / pkin(2);
t5879 = t4933 * t5205;
t5594 = t4832 * t5879;
t5404 = t5154 * t5594;
t4817 = pkin(6) * t5404;
t5731 = -t4769 + t4817;
t5788 = t5157 * t5201;
t5790 = t5154 * t5190;
t4682 = (-t5189 * t5607 + t5264) * t5161 + (-t5731 * t5745 + (-pkin(6) * t5608 - t4832 * t4933) * t5790) * t5963 - (-(t5521 - t5788) * t5139 + 0.2e1 * t5061 * t5450 + t5793 * t5818 - t5788 + t5090 + t5094 + (-t5072 * t5139 + (t5074 * t5190 + (-t5535 - t5637) * t5691) * t5189) * pkin(2) + t5701) * t5896;
t5924 = t4682 * t4892;
t4655 = (-t4691 * t5910 - t5924) * t4954 + t5372;
t4650 = t4655 * pkin(1);
t5122 = g(1) * t5182;
t5951 = g(2) * t5191;
t5053 = -t5122 + t5951;
t5952 = g(2) * t5182;
t5953 = g(1) * t5191;
t5054 = t5952 + t5953;
t5709 = t5053 * t5108 - t5054 * t5105;
t6068 = t4650 - t5709;
t6054 = -t5160 * t5646 - t6068;
t6071 = t5161 * t6054 + t5101;
t5176 = sin(qJ(1,3));
t5185 = cos(qJ(1,3));
t5034 = t5176 * t5193 + t5185 * t5194;
t5037 = -t5176 * t5194 + t5185 * t5193;
t5168 = legFrame(3,3);
t5103 = sin(t5168);
t5106 = cos(t5168);
t4965 = t5034 * t5106 + t5037 * t5103;
t5174 = sin(qJ(3,3));
t5175 = sin(qJ(2,3));
t5184 = cos(qJ(2,3));
t5305 = t5034 * t5103 - t5037 * t5106;
t5183 = cos(qJ(3,3));
t5742 = t5183 * t5184;
t5755 = t5175 * t5183;
t5762 = t5161 * t5184;
t4890 = t5055 * t5184 + (-t4965 * t5175 - t5305 * t5762) * pkin(6) + ((-t5174 * t5192 + t5305 * t5755) * t5161 - t4965 * t5742 + (-t5174 * t5305 - t5192 * t5755) * t5160) * pkin(2);
t4887 = t4890 ^ 2;
t5111 = t5174 * pkin(2);
t5087 = pkin(1) * t5111;
t5112 = t5175 * pkin(6);
t5656 = pkin(2) * t5755;
t5945 = t5184 * pkin(6);
t5040 = t5656 - t5945;
t5848 = t5040 * t5161;
t5287 = pkin(1) * t5848 + (-t5087 + (pkin(2) * t5742 + t5112) * pkin(5)) * t5160;
t4948 = 0.1e1 / t5287 ^ 2;
t4878 = t4887 * t4948;
t5648 = pkin(5) * t4878;
t5741 = t5184 * t5192;
t4926 = -pkin(5) * t5305 + pkin(6) * t5741;
t4962 = pkin(2) * t5305;
t5754 = t5175 * t5184;
t5510 = t5174 * t5754;
t5353 = t5510 * t5963;
t5820 = (t5184 + 0.1e1) * (t5184 - 0.1e1);
t5455 = t5820 * t5954;
t5145 = t5184 ^ 2;
t5979 = t5145 - 0.1e1;
t5475 = t5979 * t5111 - pkin(5);
t5141 = t5183 ^ 2;
t5810 = t5141 * t5175;
t5667 = pkin(2) * t5810;
t5098 = t5145 - 0.2e1;
t5670 = t5098 * t5111;
t5781 = t5160 * t5175;
t5854 = t4965 * t5160;
t5966 = pkin(2) * t5141;
t6025 = -t5305 * t5945 - t5123;
t6042 = t5112 + pkin(1);
t6043 = -0.2e1 * t5966;
t4806 = ((-t5192 * t5670 - t6025) * t5183 + (-t4926 * t5174 + t5305 * t6043 + t4962) * t5175) * t5139 + ((t4965 * t5184 + t5175 * t5675) * t5966 + ((-t5305 * t5670 - t4926) * t5160 + t6042 * t4965) * t5183 + (t6025 * t5174 - t5956) * t5781) * t5161 + t5305 * t5667 + (-t4965 * t5353 + t5192 * t5475) * t5183 + ((-pkin(1) * t5854 + t4926) * t5174 - t4962) * t5175 + (pkin(1) * t5741 + t4965 * t5455) * t5174;
t4947 = 0.1e1 / t5287;
t5142 = 0.1e1 / t5183;
t5870 = t4947 * t5142;
t4798 = t4806 * t5870;
t5902 = t4890 * t4947;
t4869 = t5161 * t5902;
t4747 = -t4869 - t4798;
t4786 = t5201 * t4798;
t5546 = t5305 * t5784;
t4923 = -t5468 - t5546;
t5817 = t5139 * t5175;
t5642 = pkin(6) * t5817;
t5025 = -t5642 + t6042;
t5066 = 0.2e1 * t5112 + pkin(1);
t5124 = pkin(1) * t5175;
t5079 = t5124 + pkin(6);
t5065 = t5111 + pkin(5);
t5382 = t5065 * t5305 * t5821;
t5440 = t5124 - t5631;
t5443 = pkin(6) * t5546;
t5809 = t5141 * t5204;
t5464 = -t5201 + t5809;
t5531 = t5065 * t5759;
t5634 = t5183 * t5938;
t5962 = pkin(2) * t5183;
t4830 = (t4923 * t5634 - t5464 * t5854) * t5145 + (-t4923 * t5175 * t5809 - ((t4965 * t5066 + t5531) * t5160 - t5382) * t5962 + (t5025 * t5192 - t5175 * t5443) * pkin(6)) * t5184 - (t5192 * t5440 - t5443) * t5962 - pkin(6) * ((t4965 * t5079 + t5175 * t5531) * t5160 - t5175 * t5382);
t4998 = t5160 * (-pkin(5) * t5112 + t5087);
t5776 = t5160 * t5183;
t5662 = pkin(2) * t5776;
t4935 = (-pkin(5) * t5662 + t5085) * t5184 - t5656 * t5967 + t4998;
t4929 = 0.1e1 / t4935;
t5884 = t4929 * t5142;
t5601 = t4830 * t5884;
t4812 = t5174 * t5601;
t5266 = -pkin(6) * t4812 - t4786;
t5782 = t5160 * t5174;
t4689 = t4747 * t5809 - (-pkin(2) * t5040 * t5782 + t5758) * t5902 + t5266;
t5868 = t4947 * t5174;
t5617 = t4806 * t5868;
t5421 = t5142 * t5617;
t4713 = -pkin(6) * t5421 - t5601;
t5768 = t5161 * t5174;
t5961 = pkin(2) * t5184;
t4695 = (-((pkin(6) * t5755 + t5961) * t5160 + pkin(6) * t5768) * t5902 + t4713) * t4947 * t5601;
t4992 = t5103 * t5176 - t5106 * t5185;
t4995 = t5103 * t5185 + t5106 * t5176;
t5543 = t4992 * t5782;
t4908 = -t4995 * t5112 + t4992 * t5848 + (-t4995 * t5742 - t5543) * pkin(2);
t5893 = t4908 * t4947;
t4893 = t5172 * t5893;
t5540 = t4995 * t5782;
t4911 = t4992 * t5112 + t4995 * t5848 + (t4992 * t5742 - t5540) * pkin(2);
t5890 = t4911 * t4947;
t4896 = t5173 * t5890;
t5857 = t4947 * (pkin(2) * t5768 + t5040 * t5160);
t4920 = t5171 * t5857;
t5374 = -t4695 - t4893 - t4896 + t4920;
t5916 = t4806 * t5142;
t5057 = t5111 + t5198;
t5064 = pkin(5) * t5174 + pkin(2);
t5086 = pkin(5) * t5111;
t5092 = pkin(1) * t5112;
t5519 = t5160 * t5762;
t5452 = pkin(6) * t5519;
t5502 = t5098 * t5809;
t5537 = t5057 * t5784;
t5917 = t4806 * t4947;
t5616 = t5204 * t5917;
t5814 = t5139 * t5184;
t5639 = pkin(6) * t5814;
t5693 = 0.2e1 * t5175;
t4767 = pkin(2) * t5421;
t5883 = t4929 * t5205;
t5600 = t4830 * t5883;
t5408 = t5142 * t5600;
t4815 = pkin(6) * t5408;
t5733 = -t4767 + t4815;
t5804 = t5145 * t5201;
t5806 = t5142 * t5184;
t4680 = (-t5183 * t5616 + t5266) * t5161 + (-t5733 * t5755 + (-pkin(6) * t5617 - t4830 * t4929) * t5806) * t5963 - (-(t5502 - t5804) * t5139 + 0.2e1 * t5057 * t5452 + t5809 * t5820 - t5804 + t5086 + t5092 + (-t5064 * t5139 + (t5066 * t5184 + (-t5537 - t5639) * t5693) * t5183) * pkin(2) + t5701) * t5902;
t5926 = t4680 * t4890;
t4653 = (-t4689 * t5916 - t5926) * t4948 + t5374;
t4651 = pkin(1) * t4653;
t5113 = t5176 * g(1);
t5943 = t5185 * g(2);
t5049 = -t5113 + t5943;
t5944 = t5185 * g(1);
t5947 = t5176 * g(2);
t5050 = t5944 + t5947;
t5717 = t5049 * t5106 - t5050 * t5103;
t6067 = t4651 - t5717;
t6055 = -t5160 * t5648 - t6067;
t6070 = t5161 * t6055 + t5101;
t5179 = sin(qJ(1,2));
t5188 = cos(qJ(1,2));
t5035 = t5179 * t5193 + t5188 * t5194;
t5038 = -t5179 * t5194 + t5188 * t5193;
t5169 = legFrame(2,3);
t5104 = sin(t5169);
t5107 = cos(t5169);
t4966 = t5035 * t5107 + t5038 * t5104;
t5177 = sin(qJ(3,2));
t5178 = sin(qJ(2,2));
t5187 = cos(qJ(2,2));
t5304 = t5035 * t5104 - t5038 * t5107;
t5186 = cos(qJ(3,2));
t5740 = t5186 * t5187;
t5750 = t5178 * t5186;
t5761 = t5161 * t5187;
t4891 = t5055 * t5187 + (-t4966 * t5178 - t5304 * t5761) * pkin(6) + ((-t5177 * t5192 + t5304 * t5750) * t5161 - t4966 * t5740 + (-t5177 * t5304 - t5192 * t5750) * t5160) * pkin(2);
t4888 = t4891 ^ 2;
t5114 = t5177 * pkin(2);
t5089 = pkin(1) * t5114;
t5115 = t5178 * pkin(6);
t5655 = pkin(2) * t5750;
t5942 = t5187 * pkin(6);
t5041 = t5655 - t5942;
t5847 = t5041 * t5161;
t5286 = pkin(1) * t5847 + (-t5089 + (pkin(2) * t5740 + t5115) * pkin(5)) * t5160;
t4951 = 0.1e1 / t5286 ^ 2;
t4879 = t4888 * t4951;
t5647 = pkin(5) * t4879;
t5739 = t5187 * t5192;
t4927 = -pkin(5) * t5304 + pkin(6) * t5739;
t4963 = pkin(2) * t5304;
t5749 = t5178 * t5187;
t5508 = t5177 * t5749;
t5352 = t5508 * t5963;
t5819 = (t5187 + 0.1e1) * (t5187 - 0.1e1);
t5454 = t5819 * t5954;
t5151 = t5187 ^ 2;
t5976 = t5151 - 0.1e1;
t5474 = t5976 * t5114 - pkin(5);
t5147 = t5186 ^ 2;
t5802 = t5147 * t5178;
t5666 = pkin(2) * t5802;
t5099 = t5151 - 0.2e1;
t5669 = t5099 * t5114;
t5779 = t5160 * t5178;
t5853 = t4966 * t5160;
t5965 = pkin(2) * t5147;
t6026 = -t5304 * t5942 - t5123;
t6041 = t5115 + pkin(1);
t6044 = -0.2e1 * t5965;
t4807 = ((-t5192 * t5669 - t6026) * t5186 + (-t4927 * t5177 + t5304 * t6044 + t4963) * t5178) * t5139 + ((t4966 * t5187 + t5178 * t5675) * t5965 + ((-t5304 * t5669 - t4927) * t5160 + t6041 * t4966) * t5186 + (t6026 * t5177 - t5956) * t5779) * t5161 + t5304 * t5666 + (-t4966 * t5352 + t5192 * t5474) * t5186 + ((-pkin(1) * t5853 + t4927) * t5177 - t4963) * t5178 + (pkin(1) * t5739 + t4966 * t5454) * t5177;
t4950 = 0.1e1 / t5286;
t5148 = 0.1e1 / t5186;
t5865 = t4950 * t5148;
t4800 = t4807 * t5865;
t5899 = t4891 * t4950;
t4870 = t5161 * t5899;
t4749 = -t4870 - t4800;
t4787 = t5201 * t4800;
t5545 = t5304 * t5784;
t4924 = -t5468 - t5545;
t5816 = t5139 * t5178;
t5641 = pkin(6) * t5816;
t5026 = -t5641 + t6041;
t5070 = 0.2e1 * t5115 + pkin(1);
t5125 = pkin(1) * t5178;
t5080 = t5125 + pkin(6);
t5069 = t5114 + pkin(5);
t5381 = t5069 * t5304 * t5821;
t5439 = t5125 - t5631;
t5442 = pkin(6) * t5545;
t5801 = t5147 * t5204;
t5463 = -t5201 + t5801;
t5527 = t5069 * t5759;
t5633 = t5186 * t5938;
t5960 = pkin(2) * t5186;
t4831 = (t4924 * t5633 - t5463 * t5853) * t5151 + (-t4924 * t5178 * t5801 - ((t4966 * t5070 + t5527) * t5160 - t5381) * t5960 + (t5026 * t5192 - t5178 * t5442) * pkin(6)) * t5187 - (t5192 * t5439 - t5442) * t5960 - pkin(6) * ((t4966 * t5080 + t5178 * t5527) * t5160 - t5178 * t5381);
t4999 = t5160 * (-pkin(5) * t5115 + t5089);
t5774 = t5160 * t5186;
t5661 = pkin(2) * t5774;
t4936 = (-pkin(5) * t5661 + t5085) * t5187 - t5655 * t5967 + t4999;
t4931 = 0.1e1 / t4936;
t5882 = t4931 * t5148;
t5598 = t4831 * t5882;
t4813 = t5177 * t5598;
t5265 = -pkin(6) * t4813 - t4787;
t5780 = t5160 * t5177;
t4690 = t4749 * t5801 - (-pkin(2) * t5041 * t5780 + t5758) * t5899 + t5265;
t5863 = t4950 * t5177;
t5613 = t4807 * t5863;
t5416 = t5148 * t5613;
t4714 = -pkin(6) * t5416 - t5598;
t5766 = t5161 * t5177;
t5959 = pkin(2) * t5187;
t4696 = (-((pkin(6) * t5750 + t5959) * t5160 + pkin(6) * t5766) * t5899 + t4714) * t4950 * t5598;
t4993 = t5104 * t5179 - t5107 * t5188;
t4996 = t5104 * t5188 + t5107 * t5179;
t5542 = t4993 * t5780;
t4909 = -t4996 * t5115 + t4993 * t5847 + (-t4996 * t5740 - t5542) * pkin(2);
t5892 = t4909 * t4950;
t4894 = t5172 * t5892;
t5539 = t4996 * t5780;
t4912 = t4993 * t5115 + t4996 * t5847 + (t4993 * t5740 - t5539) * pkin(2);
t5889 = t4912 * t4950;
t4897 = t5173 * t5889;
t5856 = t4950 * (pkin(2) * t5766 + t5041 * t5160);
t4921 = t5171 * t5856;
t5373 = -t4696 - t4894 - t4897 + t4921;
t5913 = t4807 * t5148;
t5059 = t5114 + t5198;
t5068 = pkin(5) * t5177 + pkin(2);
t5088 = pkin(5) * t5114;
t5093 = pkin(1) * t5115;
t5518 = t5160 * t5761;
t5451 = pkin(6) * t5518;
t5522 = t5099 * t5801;
t5536 = t5059 * t5784;
t5914 = t4807 * t4950;
t5612 = t5204 * t5914;
t5813 = t5139 * t5187;
t5638 = pkin(6) * t5813;
t5692 = 0.2e1 * t5178;
t4768 = pkin(2) * t5416;
t5881 = t4931 * t5205;
t5597 = t4831 * t5881;
t5406 = t5148 * t5597;
t4816 = pkin(6) * t5406;
t5732 = -t4768 + t4816;
t5796 = t5151 * t5201;
t5798 = t5148 * t5187;
t4681 = (-t5186 * t5612 + t5265) * t5161 + (-t5732 * t5750 + (-pkin(6) * t5613 - t4831 * t4931) * t5798) * t5963 - (-(t5522 - t5796) * t5139 + 0.2e1 * t5059 * t5451 + t5801 * t5819 - t5796 + t5088 + t5093 + (-t5068 * t5139 + (t5070 * t5187 + (-t5536 - t5638) * t5692) * t5186) * pkin(2) + t5701) * t5899;
t5925 = t4681 * t4891;
t4654 = (-t4690 * t5913 - t5925) * t4951 + t5373;
t4652 = pkin(1) * t4654;
t5116 = t5179 * g(1);
t5940 = t5188 * g(2);
t5051 = -t5116 + t5940;
t5941 = t5188 * g(1);
t5946 = t5179 * g(2);
t5052 = t5941 + t5946;
t5713 = t5051 * t5107 - t5052 * t5104;
t6066 = t4652 - t5713;
t6056 = -t5160 * t5647 - t6066;
t6069 = t6056 * t5161 + t5101;
t5833 = t5065 * t5160;
t5532 = t5185 * t5833;
t4977 = t5079 * t5176 - t5175 * t5532;
t4986 = t5066 * t5176 - t5532;
t5533 = t5176 * t5833;
t5254 = t5079 * t5185 + t5175 * t5533;
t5272 = t5066 * t5185 + t5533;
t5338 = t5464 * t4995;
t5659 = t5161 * t5962;
t5449 = t4992 * t5659;
t5767 = t5161 * t5175;
t6039 = t4992 * t5464;
t4884 = (t5449 * t6013 + t5338) * t5145 + ((t4986 * t5106 + t5103 * t5272) * t5962 - t5767 * t6039) * t5184 + (t4977 * t5106 + t5103 * t5254 - t5449) * pkin(6);
t4789 = pkin(6) * t4798;
t4716 = t4812 + t4789;
t4795 = pkin(1) * t4798;
t5140 = t5183 * t5141;
t5203 = pkin(2) * t5204;
t5127 = pkin(1) * t5145;
t5046 = t5127 - t6042;
t5356 = t5046 * t5161;
t5534 = t5065 * t5781;
t5388 = t5184 * t5534;
t5143 = 0.1e1 / t5183 ^ 2;
t5775 = t5160 * t5184;
t5645 = pkin(5) * t5775;
t6011 = 0.1e1 / ((pkin(1) * t5767 + t5645) * t5962 - t5184 * t5085 - t4998);
t5875 = t6011 * t5143;
t5422 = t5875 * t5917;
t5985 = pkin(6) / 0.2e1;
t5335 = (t5184 * t5203 * t4747 * t5140 + (t4747 * t5112 - t4795 - (t5145 * t5967 - t5388) * t5902) * t5809 + ((-t4812 / 0.2e1 - t4789 / 0.2e1) * t5184 - ((t5124 + t5985) * t5762 + (t5145 - 0.1e1 / 0.2e1) * t5833) * t5902) * t5634 - (t4716 * t6042 - (t5356 - t5388) * pkin(6) * t5902) * pkin(6)) * t5422;
t5278 = t5160 * t5335;
t5350 = pkin(5) * t5408;
t4719 = t4789 + t5350;
t4818 = pkin(1) * t5408;
t5294 = t5160 * t4818;
t5299 = t5184 * t4818;
t5379 = t5175 * t5601;
t5397 = t5821 * t5902;
t5437 = t5983 * t5754;
t5699 = t5204 - t5201;
t5485 = t5086 + t5699;
t5599 = t4830 * t5875;
t5831 = t6042 * t5184;
t5920 = t4719 * t5175;
t5429 = ((-t5397 * t5831 + t5294) * t5966 + (-t5485 * t5145 * t5397 - (-t5601 + (-t4869 * t5079 - t4719) * t5174) * pkin(2) * t5775 + pkin(1) * t5379 * t5768) * t5183 + (-t5299 * t5768 - ((-t4795 - t5920) * t5174 - t5379) * t5160 - (t5983 * t5183 * t5079 + t5064 * t5437 + t5356 * t5782) * t5902) * pkin(6)) * t5599;
t4782 = pkin(5) * t4798;
t5730 = -t4782 + t4815;
t4704 = -t4767 + t5730;
t5501 = t5916 / 0.2e1;
t5706 = t5139 - 0.1e1 / 0.2e1;
t4740 = (t4890 * t5706 + t5161 * t5501) * t4947;
t4776 = pkin(6) * t4782;
t4779 = 0.2e1 * t4789;
t5325 = t5205 * t5379;
t4809 = pkin(1) * t5325;
t5365 = -0.2e1 * t5065 * t4869;
t4857 = pkin(6) * t5365;
t5202 = pkin(5) ^ 2;
t5700 = pkin(1) ^ 2 + t5202;
t5481 = t5204 + t5700;
t5056 = t5201 + t5481;
t5058 = t5112 / 0.2e1 + pkin(1);
t5082 = 0.2e1 * t5086;
t5144 = t5184 * t5145;
t5984 = pkin(1) * pkin(6);
t5159 = 0.2e1 * t5984;
t5196 = -0.3e1 * t5201;
t5320 = t5183 * t5397;
t5138 = t5161 * t5139;
t5366 = (-t5138 + t5161) * t6013;
t5371 = 0.3e1 * t5201 + t5481;
t5520 = t5204 * t5821;
t5385 = t5141 * t5520;
t5808 = t5142 * t5161;
t5512 = t4806 * t5808;
t5461 = pkin(1) * t5512;
t5472 = t5160 * t5085;
t5479 = 0.2e1 * t5204 * t5954;
t5480 = -0.2e1 * pkin(2) * t5821;
t5702 = t5202 / 0.2e1 + t5204 / 0.2e1;
t5482 = t5201 + t5702;
t5727 = t4809 + t4815;
t5494 = t4782 - t5727;
t5577 = t5138 * t5902;
t5696 = 0.2e1 * t5160;
t5674 = t5203 * t5696;
t5736 = t4704 * t5175 + t4818;
t5753 = t5175 * t5201;
t5869 = t4947 * t5160;
t6000 = -0.2e1 * t5139;
t6014 = -0.2e1 * pkin(6);
t6015 = 0.2e1 * pkin(1);
t5627 = ((t5196 + t5809) * t5144 * t5320 * t5963 + ((t4857 + pkin(6) * (-t4782 + t4815 / 0.2e1) + (-(t4779 + t5350) * t5174 / 0.2e1 - t5601 / 0.2e1) * pkin(2)) * t5183 * t5480 + t4716 * t5472 - (t5461 * t5809 + ((t6015 + 0.3e1 * t5112 - 0.3e1 * t5642) * t5809 + pkin(6) * (t5058 * t6014 + t5139 * t5753)) * t4890) * t5869) * t5145 + (-t4740 * t5140 * t5674 + (t5175 * t5365 + t5736) * t5385 + ((-(t4812 + t4779) * t5124 + t5266) * t5161 - ((t5086 + t5482) * t6000 + t5082 + 0.4e1 * t5092 + t5371) * t5902) * t5662 + (-t5983 * (-t4776 + (-t4719 * t5174 - t5601) * pkin(2)) - t5065 * t5366 * t5902) * t5112) * t5184 - t4740 * t5479 * t5810 - (t4857 + (0.2e1 * t5065 * t5577 - (-t4767 - t5494) * t5139 + t4809 + t4704) * pkin(6)) * t5962 + ((-pkin(1) * t4716 + t5175 * t5266) * t5161 - (t5159 + ((t5086 + t5702) * t6000 + t5082 + t5056) * t5175) * t5902) * t5954) * t5902;
t5769 = t5160 * t5205;
t5516 = t5173 * t5769;
t5446 = t4995 * t5659;
t5586 = ((t5446 * t6014 + t6039) * t5145 + ((t5103 * t4986 - t5106 * t5272) * t5962 + t5338 * t5767) * t5184 + (t5103 * t4977 - t5106 * t5254 + t5446) * pkin(6)) * t5884;
t4848 = t5516 * t5586;
t6049 = 0.2e1 * t5139;
t5982 = t6049 - 0.2e1;
t5063 = t5982 * pkin(6);
t4914 = -t5385 * t5754 + (t5063 * t5145 + t5065 * t5519 + t5440) * t5962 - (t5025 * t5184 - t5161 * t5534) * pkin(6);
t5876 = t6011 * t5142;
t5551 = t5171 * t5876;
t4902 = t4914 * t5205 * t5551;
t5724 = t4848 + t4902;
t5783 = t5160 * t5172;
t4581 = (-t5278 + (t5429 + (-t4884 * t5783 + t5627) * t5142) * t4929) * t5205 + t5724;
t4797 = t4806 ^ 2 * t4948 * t5143;
t5206 = 0.1e1 / pkin(2) ^ 2;
t5604 = t4830 ^ 2 / t4935 ^ 2 * t5206;
t4821 = t5143 * t5604;
t4725 = t4797 + t4821;
t5807 = t5142 * t5175;
t5615 = t4806 * t5807;
t5420 = t4947 * t5615;
t4770 = pkin(1) * t5420;
t5471 = -0.2e1 * t5902;
t5491 = 0.2e1 * t4651 - t5717;
t5955 = pkin(5) * t5160;
t5698 = 0.2e1 * t5955;
t5718 = t5049 * t5103 + t5050 * t5106;
t4773 = -t4782 / 0.2e1;
t4792 = t5142 * t5616;
t5136 = t5202 + t5204;
t5199 = 0.2e1 * pkin(5);
t5158 = pkin(2) * t5199;
t5269 = (-pkin(2) * t4719 + (-pkin(2) * t5601 - t4776) * t5174) * t5184;
t5504 = t4890 * t5754;
t5395 = t4947 * t5504;
t5290 = pkin(6) * t5064 * t5395;
t5575 = t4890 * t5868;
t5347 = t5575 * t5954;
t5370 = 0.3e1 * t5204 + t5201 + t5700;
t5576 = t4890 * t5869;
t5396 = t5175 * t5576;
t5460 = pkin(1) * t5615;
t5811 = t5140 * t5204;
t5549 = t4947 * t5811;
t5572 = t4890 * t5775;
t5900 = t4890 * t5142;
t5573 = t4948 * t5900;
t5574 = t5184 * t5902;
t5636 = t5145 * t5111;
t5703 = t5202 / 0.3e1 + t5204;
t5704 = -t5201 / 0.3e1 - 0.2e1 / 0.3e1 * t5204;
t5705 = t5201 / 0.2e1 + t5204;
t5923 = (-pkin(2) * t4798 + t5174 * t5730) * t5145;
t5968 = pkin(1) * t5160;
t5988 = 0.2e1 * t5174;
t5989 = -0.2e1 * t5160;
t5997 = 0.2e1 * t5145;
t5998 = -0.2e1 * t5145;
t4595 = (-0.3e1 * ((t5145 - 0.4e1 / 0.3e1) * t5811 + ((-0.2e1 / 0.3e1 * t5086 + t5704) * t5145 + 0.4e1 / 0.3e1 * t5086 + t5703) * t5183 + (0.4e1 / 0.3e1 * t5966 - 0.2e1 / 0.3e1 * t5064) * pkin(6) * t5754) * t5577 + (-t5502 * t5917 - ((-t4795 + t5920) * t5184 - (-0.4e1 * t5065 + t5636) * t5396) * t5966 + (t4786 - t4792 - (-0.4e1 * t5057 * t5572 - t5460) * t4947 * pkin(6) + (-0.2e1 * t5144 * t5347 - t5923 + (t4773 + t5727) * t5988) * pkin(2)) * t5183 - t5175 * (t5269 - (t5158 + (t5136 - t5804) * t5174) * t5576)) * t5139 + (-(-0.3e1 * t5145 + 0.3e1) * t4890 * t5549 - (t5145 * t5294 - 0.2e1 * t5066 * t5574 + (t4818 + (t4773 + t5733) * t5175) * t5989) * t5966 + ((t4776 + ((t4719 - t4770) * t5174 + t5601) * pkin(2)) * t5775 - ((t5086 + t5705) * t5997 - 0.4e1 * t5086 - 0.2e1 * t5092 - t5370) * t5902) * t5183 - t4713 * t5145 * t5968 - 0.2e1 * t5290 + (-(pkin(6) * t5325 + t4818) * pkin(2) - (t5753 + t5984) * t5421) * t5160) * t5161 + t5979 * t4792 * t5140 + (t4719 * t5184 - (-t5111 - t5199 + t5636) * t5576) * t5667 + (t4792 + (t5923 + ((-pkin(6) * t5144 + t5079 * t5184) * t5160 * t5471 + t5494) * t5174) * pkin(2)) * t5183 - t5058 * t5347 * t5998 + t5175 * t5269 - ((t5056 * t5175 + t5159) * t5174 + t5175 * t5158) * t5576) * t5573;
t5824 = t5098 * t5139;
t5467 = -t5145 + t5824;
t5369 = t5467 + 0.1e1;
t5832 = t6042 * t5160;
t4659 = (-(t4890 * t5369 - t5512) * t5549 - (-t5160 * t5736 - (t5184 * t5461 + ((-t5112 + pkin(1)) * t5814 + (-0.2e1 * t5537 + t5945) * t5175) * t4890) * t4947) * t5966 + ((t5079 * t5161 + t5645) * t4716 - (-(t5092 - t5485) * t5139 + (-pkin(6) * t5065 + t5087 * t5175) * t5519 + (-t5145 * t5139 + t5979) * pkin(2) * t5064) * t5902) * t5183 + t5139 * t5290 + t5347 * t5356 - t5290 + t4713 * t5832) * t5422;
t5200 = -0.2e1 * pkin(1);
t5312 = t5065 * t5395;
t5614 = t4806 * t5806;
t5950 = t5145 * pkin(6);
t4668 = (-(-t5832 * t5916 + ((t5127 - 0.2e1 * t5112 + t5200) * t5784 + pkin(5) * t5437) * t4890) * t4947 * t5141 + (-(-t5950 / 0.2e1 + t5079) * t5575 * t6000 + (-(-t5064 * t5572 - t5174 * t5460) * t4947 - t4713) * t5161 - (-t5614 * t5955 + t4890 * (t5079 - t5950)) * t5868) * t5183 + t5139 * t5312 + (t5046 * t5576 + t5299) * t5161 + ((-t4719 - t4812) * t5175 - t4795) * t5160 - t5312) * t4929 * t5599;
t5043 = -pkin(5) + t5670;
t5478 = t5064 + t6043;
t6018 = -t5064 * t5175 + (-pkin(6) * t5510 - t5043 * t5183) * t5784 + t5667 + (pkin(6) * t5742 + t5175 * t5478) * t5139;
t6051 = (t5141 * t5961 + t5183 * t6042) * t5161 + t5174 * t5455 - t5183 * t5353;
t4851 = t6018 * t4992 + t4995 * t6051 - t5540 * t5124;
t5592 = t4851 * t5870;
t4842 = t5172 * t5592;
t4854 = -t4992 * t6051 + t6018 * t4995 + t5543 * t5124;
t5589 = t4854 * t5870;
t4845 = t5173 * t5589;
t4917 = (t5043 * t5139 + t5452 - t5475) * t5183 - t5174 * t5831 + (t5174 * t5639 + t5478 * t5784) * t5175;
t4905 = t4917 * t5551;
t4572 = -t4845 - t4842 + t4905 - t4595 - t4659 - t4668;
t5756 = t5175 * t4572;
t5971 = pkin(1) * t4572;
t4644 = t5175 * t4653;
t5424 = t4806 * t5573;
t5313 = t5184 * t5424;
t6033 = t4644 + t5313;
t6065 = (t5139 * t5350 - t4770 - t5350) * t5471 + (pkin(1) * t4581 + (t4725 * t5184 + t5756) * pkin(5)) * t5160 + (t6033 * t5698 - t5184 * t5971 + (pkin(1) * t4725 - t5718) * t5175) * t5161 - t5184 * t5491;
t5830 = t5069 * t5160;
t5528 = t5188 * t5830;
t4978 = t5080 * t5179 - t5178 * t5528;
t4987 = t5070 * t5179 - t5528;
t5529 = t5179 * t5830;
t5253 = t5080 * t5188 + t5178 * t5529;
t5271 = t5070 * t5188 + t5529;
t5337 = t5463 * t4996;
t5658 = t5161 * t5960;
t5448 = t4993 * t5658;
t5765 = t5161 * t5178;
t6038 = t4993 * t5463;
t4885 = (t5448 * t6013 + t5337) * t5151 + ((t4987 * t5107 + t5104 * t5271) * t5960 - t5765 * t6038) * t5187 + (t4978 * t5107 + t5104 * t5253 - t5448) * pkin(6);
t4790 = pkin(6) * t4800;
t4717 = t4813 + t4790;
t4796 = pkin(1) * t4800;
t5146 = t5186 * t5147;
t5128 = pkin(1) * t5151;
t5047 = t5128 - t6041;
t5355 = t5047 * t5161;
t5530 = t5069 * t5779;
t5387 = t5187 * t5530;
t5149 = 0.1e1 / t5186 ^ 2;
t5773 = t5160 * t5187;
t5644 = pkin(5) * t5773;
t6010 = 0.1e1 / ((pkin(1) * t5765 + t5644) * t5960 - t5187 * t5085 - t4999);
t5873 = t6010 * t5149;
t5417 = t5873 * t5914;
t5334 = (t5187 * t5203 * t4749 * t5146 + (t4749 * t5115 - t4796 - (t5151 * t5967 - t5387) * t5899) * t5801 + ((-t4813 / 0.2e1 - t4790 / 0.2e1) * t5187 - ((t5125 + t5985) * t5761 + (t5151 - 0.1e1 / 0.2e1) * t5830) * t5899) * t5633 - (t4717 * t6041 - (t5355 - t5387) * pkin(6) * t5899) * pkin(6)) * t5417;
t5277 = t5160 * t5334;
t5349 = pkin(5) * t5406;
t4720 = t4790 + t5349;
t4819 = pkin(1) * t5406;
t5297 = t5187 * t4819;
t5298 = t5160 * t4819;
t5378 = t5178 * t5598;
t5394 = t5821 * t5899;
t5436 = t5983 * t5749;
t5484 = t5088 + t5699;
t5596 = t4831 * t5873;
t5828 = t6041 * t5187;
t5919 = t4720 * t5178;
t5431 = ((-t5394 * t5828 + t5298) * t5965 + (-t5484 * t5151 * t5394 - (-t5598 + (-t4870 * t5080 - t4720) * t5177) * pkin(2) * t5773 + pkin(1) * t5378 * t5766) * t5186 + (-t5297 * t5766 - ((-t4796 - t5919) * t5177 - t5378) * t5160 - (t5983 * t5186 * t5080 + t5068 * t5436 + t5355 * t5780) * t5899) * pkin(6)) * t5596;
t4783 = pkin(5) * t4800;
t5729 = -t4783 + t4816;
t4705 = -t4768 + t5729;
t5500 = t5913 / 0.2e1;
t4741 = (t4891 * t5706 + t5161 * t5500) * t4950;
t4777 = pkin(6) * t4783;
t4780 = 0.2e1 * t4790;
t5323 = t5205 * t5378;
t4810 = pkin(1) * t5323;
t5364 = -0.2e1 * t5069 * t4870;
t4858 = pkin(6) * t5364;
t5060 = t5115 / 0.2e1 + pkin(1);
t5083 = 0.2e1 * t5088;
t5150 = t5187 * t5151;
t5319 = t5186 * t5394;
t5384 = t5147 * t5520;
t5800 = t5148 * t5161;
t5611 = t4807 * t5800;
t5459 = pkin(1) * t5611;
t5726 = t4810 + t4816;
t5493 = t4783 - t5726;
t5571 = t5138 * t5899;
t5735 = t4705 * t5178 + t4819;
t5748 = t5178 * t5201;
t5864 = t4950 * t5160;
t5626 = ((t5196 + t5801) * t5150 * t5319 * t5963 + ((t4858 + pkin(6) * (-t4783 + t4816 / 0.2e1) + (-(t4780 + t5349) * t5177 / 0.2e1 - t5598 / 0.2e1) * pkin(2)) * t5186 * t5480 + t4717 * t5472 - (t5459 * t5801 + ((t6015 + 0.3e1 * t5115 - 0.3e1 * t5641) * t5801 + pkin(6) * (t5060 * t6014 + t5139 * t5748)) * t4891) * t5864) * t5151 + (-t4741 * t5146 * t5674 + (t5178 * t5364 + t5735) * t5384 + ((-(t4813 + t4780) * t5125 + t5265) * t5161 - ((t5088 + t5482) * t6000 + t5083 + 0.4e1 * t5093 + t5371) * t5899) * t5661 + (-t5983 * (-t4777 + (-t4720 * t5177 - t5598) * pkin(2)) - t5069 * t5366 * t5899) * t5115) * t5187 - t4741 * t5479 * t5802 - (t4858 + (0.2e1 * t5069 * t5571 - (-t4768 - t5493) * t5139 + t4810 + t4705) * pkin(6)) * t5960 + ((-pkin(1) * t4717 + t5178 * t5265) * t5161 - (t5159 + ((t5088 + t5702) * t6000 + t5083 + t5056) * t5178) * t5899) * t5954) * t5899;
t5445 = t4996 * t5658;
t5585 = ((t5445 * t6014 + t6038) * t5151 + ((t5104 * t4987 - t5107 * t5271) * t5960 + t5337 * t5765) * t5187 + (t5104 * t4978 - t5107 * t5253 + t5445) * pkin(6)) * t5882;
t4849 = t5516 * t5585;
t4915 = -t5384 * t5749 + (t5063 * t5151 + t5069 * t5518 + t5439) * t5960 - (t5026 * t5187 - t5161 * t5530) * pkin(6);
t5874 = t6010 * t5148;
t5550 = t5171 * t5874;
t4903 = t4915 * t5205 * t5550;
t5723 = t4849 + t4903;
t4582 = (-t5277 + (t5431 + (-t4885 * t5783 + t5626) * t5148) * t4931) * t5205 + t5723;
t4799 = t4807 ^ 2 * t4951 * t5149;
t5603 = t4831 ^ 2 / t4936 ^ 2 * t5206;
t4822 = t5149 * t5603;
t4728 = t4799 + t4822;
t5799 = t5148 * t5178;
t5610 = t4807 * t5799;
t5415 = t4950 * t5610;
t4771 = pkin(1) * t5415;
t5470 = -0.2e1 * t5899;
t5489 = 0.2e1 * t4652 - t5713;
t5714 = t5051 * t5104 + t5052 * t5107;
t4774 = -t4783 / 0.2e1;
t4793 = t5148 * t5612;
t5268 = (-pkin(2) * t4720 + (-pkin(2) * t5598 - t4777) * t5177) * t5187;
t5506 = t4891 * t5749;
t5392 = t4950 * t5506;
t5289 = pkin(6) * t5068 * t5392;
t5569 = t4891 * t5863;
t5346 = t5569 * t5954;
t5570 = t4891 * t5864;
t5393 = t5178 * t5570;
t5458 = pkin(1) * t5610;
t5803 = t5146 * t5204;
t5548 = t4950 * t5803;
t5565 = t4891 * t5773;
t5897 = t4891 * t5148;
t5567 = t4951 * t5897;
t5568 = t5187 * t5899;
t5665 = t5151 * t5114;
t5922 = (-pkin(2) * t4800 + t5177 * t5729) * t5151;
t5987 = 0.2e1 * t5177;
t5994 = 0.2e1 * t5151;
t5995 = -0.2e1 * t5151;
t4593 = (-0.3e1 * ((t5151 - 0.4e1 / 0.3e1) * t5803 + ((-0.2e1 / 0.3e1 * t5088 + t5704) * t5151 + 0.4e1 / 0.3e1 * t5088 + t5703) * t5186 + (0.4e1 / 0.3e1 * t5965 - 0.2e1 / 0.3e1 * t5068) * pkin(6) * t5749) * t5571 + (-t5522 * t5914 - ((-t4796 + t5919) * t5187 - (-0.4e1 * t5069 + t5665) * t5393) * t5965 + (t4787 - t4793 - (-0.4e1 * t5059 * t5565 - t5458) * t4950 * pkin(6) + (-0.2e1 * t5150 * t5346 - t5922 + (t4774 + t5726) * t5987) * pkin(2)) * t5186 - t5178 * (t5268 - (t5158 + (t5136 - t5796) * t5177) * t5570)) * t5139 + (-(-0.3e1 * t5151 + 0.3e1) * t4891 * t5548 - (t5151 * t5298 - 0.2e1 * t5070 * t5568 + (t4819 + (t4774 + t5732) * t5178) * t5989) * t5965 + ((t4777 + ((t4720 - t4771) * t5177 + t5598) * pkin(2)) * t5773 - ((t5088 + t5705) * t5994 - 0.4e1 * t5088 - 0.2e1 * t5093 - t5370) * t5899) * t5186 - t4714 * t5151 * t5968 - 0.2e1 * t5289 + (-(pkin(6) * t5323 + t4819) * pkin(2) - (t5748 + t5984) * t5416) * t5160) * t5161 + t5976 * t4793 * t5146 + (t4720 * t5187 - (-t5114 - t5199 + t5665) * t5570) * t5666 + (t4793 + (t5922 + ((-pkin(6) * t5150 + t5080 * t5187) * t5160 * t5470 + t5493) * t5177) * pkin(2)) * t5186 - t5060 * t5346 * t5995 + t5178 * t5268 - ((t5056 * t5178 + t5159) * t5177 + t5178 * t5158) * t5570) * t5567;
t5823 = t5099 * t5139;
t5466 = -t5151 + t5823;
t5368 = t5466 + 0.1e1;
t5829 = t6041 * t5160;
t4660 = (-(t4891 * t5368 - t5611) * t5548 - (-t5160 * t5735 - (t5187 * t5459 + ((-t5115 + pkin(1)) * t5813 + (-0.2e1 * t5536 + t5942) * t5178) * t4891) * t4950) * t5965 + ((t5080 * t5161 + t5644) * t4717 - (-(t5093 - t5484) * t5139 + (-pkin(6) * t5069 + t5089 * t5178) * t5518 + (-t5139 * t5151 + t5976) * pkin(2) * t5068) * t5899) * t5186 + t5139 * t5289 + t5346 * t5355 - t5289 + t4714 * t5829) * t5417;
t5311 = t5069 * t5392;
t5609 = t4807 * t5798;
t5949 = t5151 * pkin(6);
t4669 = (-(-t5829 * t5913 + ((t5128 - 0.2e1 * t5115 + t5200) * t5784 + pkin(5) * t5436) * t4891) * t4950 * t5147 + (-(-t5949 / 0.2e1 + t5080) * t5569 * t6000 + (-(-t5068 * t5565 - t5177 * t5458) * t4950 - t4714) * t5161 - (-t5609 * t5955 + t4891 * (t5080 - t5949)) * t5863) * t5186 + t5139 * t5311 + (t5047 * t5570 + t5297) * t5161 + ((-t4720 - t4813) * t5178 - t4796) * t5160 - t5311) * t4931 * t5596;
t5044 = -pkin(5) + t5669;
t5477 = t5068 + t6044;
t6017 = -t5068 * t5178 + (-pkin(6) * t5508 - t5044 * t5186) * t5784 + t5666 + (pkin(6) * t5740 + t5178 * t5477) * t5139;
t6052 = (t5147 * t5959 + t5186 * t6041) * t5161 + t5177 * t5454 - t5186 * t5352;
t4852 = t6017 * t4993 + t4996 * t6052 - t5539 * t5125;
t5591 = t4852 * t5865;
t4843 = t5172 * t5591;
t4855 = -t4993 * t6052 + t6017 * t4996 + t5542 * t5125;
t5588 = t4855 * t5865;
t4846 = t5173 * t5588;
t4918 = (t5044 * t5139 + t5451 - t5474) * t5186 - t5177 * t5828 + (t5177 * t5638 + t5477 * t5784) * t5178;
t4906 = t4918 * t5550;
t4573 = -t4846 - t4843 + t4906 - t4593 - t4660 - t4669;
t5751 = t5178 * t4573;
t5970 = pkin(1) * t4573;
t4645 = t5178 * t4654;
t5419 = t4807 * t5567;
t5318 = t5187 * t5419;
t6032 = t4645 + t5318;
t6064 = (t5139 * t5349 - t4771 - t5349) * t5470 + (pkin(1) * t4582 + (t4728 * t5187 + t5751) * pkin(5)) * t5160 + (t6032 * t5698 - t5187 * t5970 + (pkin(1) * t4728 - t5714) * t5178) * t5161 - t5187 * t5489;
t5827 = t5073 * t5160;
t5524 = t5191 * t5827;
t4979 = t5081 * t5182 - t5181 * t5524;
t4988 = t5074 * t5182 - t5524;
t5525 = t5182 * t5827;
t5252 = t5081 * t5191 + t5181 * t5525;
t5270 = t5074 * t5191 + t5525;
t5336 = t5462 * t4997;
t5657 = t5161 * t5958;
t5447 = t4994 * t5657;
t5763 = t5161 * t5181;
t6037 = t4994 * t5462;
t4886 = (t5447 * t6013 + t5336) * t5157 + ((t4988 * t5108 + t5105 * t5270) * t5958 - t5763 * t6037) * t5190 + (t4979 * t5108 + t5105 * t5252 - t5447) * pkin(6);
t4791 = pkin(6) * t4802;
t4718 = t4814 + t4791;
t4785 = pkin(1) * t4802;
t5152 = t5189 * t5153;
t5129 = pkin(1) * t5157;
t5048 = t5129 - t6040;
t5354 = t5048 * t5161;
t5526 = t5073 * t5777;
t5386 = t5190 * t5526;
t5155 = 0.1e1 / t5189 ^ 2;
t5771 = t5160 * t5190;
t5643 = pkin(5) * t5771;
t6012 = 0.1e1 / ((pkin(1) * t5763 + t5643) * t5958 - t5190 * t5085 - t5000);
t5877 = t6012 * t5155;
t5412 = t5877 * t5911;
t5333 = (t5190 * t5203 * t4751 * t5152 + (t4751 * t5118 - t4785 - (t5157 * t5967 - t5386) * t5896) * t5793 + ((-t4814 / 0.2e1 - t4791 / 0.2e1) * t5190 - ((t5126 + t5985) * t5760 + (t5157 - 0.1e1 / 0.2e1) * t5827) * t5896) * t5632 - (t4718 * t6040 - (t5354 - t5386) * pkin(6) * t5896) * pkin(6)) * t5412;
t5276 = t5160 * t5333;
t5348 = pkin(5) * t5404;
t4721 = t4791 + t5348;
t4820 = pkin(1) * t5404;
t5295 = t5190 * t4820;
t5296 = t5160 * t4820;
t5377 = t5181 * t5595;
t5391 = t5821 * t5896;
t5435 = t5983 * t5744;
t5483 = t5090 + t5699;
t5593 = t4832 * t5877;
t5825 = t6040 * t5190;
t5918 = t4721 * t5181;
t5430 = ((-t5391 * t5825 + t5296) * t5964 + (-t5483 * t5157 * t5391 - (-t5595 + (-t4871 * t5081 - t4721) * t5180) * pkin(2) * t5771 + pkin(1) * t5377 * t5764) * t5189 + (-t5295 * t5764 - ((-t4785 - t5918) * t5180 - t5377) * t5160 - (t5983 * t5189 * t5081 + t5072 * t5435 + t5354 * t5778) * t5896) * pkin(6)) * t5593;
t4784 = pkin(5) * t4802;
t5728 = -t4784 + t4817;
t4706 = -t4769 + t5728;
t5499 = t5910 / 0.2e1;
t4742 = (t4892 * t5706 + t5161 * t5499) * t4953;
t4778 = pkin(6) * t4784;
t4781 = 0.2e1 * t4791;
t5321 = t5205 * t5377;
t4811 = pkin(1) * t5321;
t5363 = -0.2e1 * t5073 * t4871;
t4859 = pkin(6) * t5363;
t5062 = t5118 / 0.2e1 + pkin(1);
t5084 = 0.2e1 * t5090;
t5156 = t5190 * t5157;
t5317 = t5189 * t5391;
t5383 = t5153 * t5520;
t5792 = t5154 * t5161;
t5511 = t4808 * t5792;
t5457 = pkin(1) * t5511;
t5725 = t4811 + t4817;
t5492 = t4784 - t5725;
t5564 = t5138 * t5896;
t5734 = t4706 * t5181 + t4820;
t5743 = t5181 * t5201;
t5859 = t4953 * t5160;
t5625 = ((t5196 + t5793) * t5156 * t5317 * t5963 + ((t4859 + pkin(6) * (-t4784 + t4817 / 0.2e1) + (-(t4781 + t5348) * t5180 / 0.2e1 - t5595 / 0.2e1) * pkin(2)) * t5189 * t5480 + t4718 * t5472 - (t5457 * t5793 + ((t6015 + 0.3e1 * t5118 - 0.3e1 * t5640) * t5793 + pkin(6) * (t5062 * t6014 + t5139 * t5743)) * t4892) * t5859) * t5157 + (-t4742 * t5152 * t5674 + (t5181 * t5363 + t5734) * t5383 + ((-(t4814 + t4781) * t5126 + t5264) * t5161 - ((t5090 + t5482) * t6000 + t5084 + 0.4e1 * t5094 + t5371) * t5896) * t5660 + (-t5983 * (-t4778 + (-t4721 * t5180 - t5595) * pkin(2)) - t5073 * t5366 * t5896) * t5118) * t5190 - t4742 * t5479 * t5794 - (t4859 + (0.2e1 * t5073 * t5564 - (-t4769 - t5492) * t5139 + t4811 + t4706) * pkin(6)) * t5958 + ((-pkin(1) * t4718 + t5181 * t5264) * t5161 - (t5159 + ((t5090 + t5702) * t6000 + t5084 + t5056) * t5181) * t5896) * t5954) * t5896;
t5444 = t4997 * t5657;
t5584 = ((t5444 * t6014 + t6037) * t5157 + ((t5105 * t4988 - t5108 * t5270) * t5958 + t5336 * t5763) * t5190 + (t5105 * t4979 - t5108 * t5252 + t5444) * pkin(6)) * t5880;
t4850 = t5516 * t5584;
t4916 = -t5383 * t5744 + (t5063 * t5157 + t5073 * t5517 + t5438) * t5958 - (t5027 * t5190 - t5161 * t5526) * pkin(6);
t5878 = t6012 * t5154;
t5552 = t5171 * t5878;
t4904 = t4916 * t5205 * t5552;
t5722 = t4850 + t4904;
t4583 = (-t5276 + (t5430 + (-t4886 * t5783 + t5625) * t5154) * t4933) * t5205 + t5722;
t4801 = t4808 ^ 2 * t4954 * t5155;
t5602 = t4832 ^ 2 / t4937 ^ 2 * t5206;
t4823 = t5155 * t5602;
t4731 = t4801 + t4823;
t5791 = t5154 * t5181;
t5606 = t4808 * t5791;
t5410 = t4953 * t5606;
t4772 = pkin(1) * t5410;
t5469 = -0.2e1 * t5896;
t5487 = 0.2e1 * t4650 - t5709;
t5710 = t5053 * t5105 + t5054 * t5108;
t4775 = -t4784 / 0.2e1;
t4794 = t5154 * t5607;
t5267 = (-pkin(2) * t4721 + (-pkin(2) * t5595 - t4778) * t5180) * t5190;
t5503 = t4892 * t5744;
t5389 = t4953 * t5503;
t5288 = pkin(6) * t5072 * t5389;
t5562 = t4892 * t5858;
t5345 = t5562 * t5954;
t5563 = t4892 * t5859;
t5390 = t5181 * t5563;
t5456 = pkin(1) * t5606;
t5795 = t5152 * t5204;
t5547 = t4953 * t5795;
t5559 = t4892 * t5771;
t5894 = t4892 * t5154;
t5560 = t4954 * t5894;
t5561 = t5190 * t5896;
t5663 = t5157 * t5117;
t5921 = (-pkin(2) * t4802 + t5180 * t5728) * t5157;
t5986 = 0.2e1 * t5180;
t5991 = 0.2e1 * t5157;
t5992 = -0.2e1 * t5157;
t4594 = (-0.3e1 * ((t5157 - 0.4e1 / 0.3e1) * t5795 + ((-0.2e1 / 0.3e1 * t5090 + t5704) * t5157 + 0.4e1 / 0.3e1 * t5090 + t5703) * t5189 + (0.4e1 / 0.3e1 * t5964 - 0.2e1 / 0.3e1 * t5072) * pkin(6) * t5744) * t5564 + (-t5521 * t5911 - ((-t4785 + t5918) * t5190 - (-0.4e1 * t5073 + t5663) * t5390) * t5964 + (t4788 - t4794 - (-0.4e1 * t5061 * t5559 - t5456) * t4953 * pkin(6) + (-0.2e1 * t5156 * t5345 - t5921 + (t4775 + t5725) * t5986) * pkin(2)) * t5189 - t5181 * (t5267 - (t5158 + (t5136 - t5788) * t5180) * t5563)) * t5139 + (-(-0.3e1 * t5157 + 0.3e1) * t4892 * t5547 - (t5157 * t5296 - 0.2e1 * t5074 * t5561 + (t4820 + (t4775 + t5731) * t5181) * t5989) * t5964 + ((t4778 + ((t4721 - t4772) * t5180 + t5595) * pkin(2)) * t5771 - ((t5090 + t5705) * t5991 - 0.4e1 * t5090 - 0.2e1 * t5094 - t5370) * t5896) * t5189 - t4715 * t5157 * t5968 - 0.2e1 * t5288 + (-(pkin(6) * t5321 + t4820) * pkin(2) - (t5743 + t5984) * t5411) * t5160) * t5161 + t5973 * t4794 * t5152 + (t4721 * t5190 - (-t5117 - t5199 + t5663) * t5563) * t5664 + (t4794 + (t5921 + ((-pkin(6) * t5156 + t5081 * t5190) * t5160 * t5469 + t5492) * t5180) * pkin(2)) * t5189 - t5062 * t5345 * t5992 + t5181 * t5267 - ((t5056 * t5181 + t5159) * t5180 + t5181 * t5158) * t5563) * t5560;
t5822 = t5100 * t5139;
t5465 = -t5157 + t5822;
t5367 = t5465 + 0.1e1;
t5826 = t6040 * t5160;
t4661 = (-(t4892 * t5367 - t5511) * t5547 - (-t5160 * t5734 - (t5190 * t5457 + ((-t5118 + pkin(1)) * t5812 + (-0.2e1 * t5535 + t5939) * t5181) * t4892) * t4953) * t5964 + ((t5081 * t5161 + t5643) * t4718 - (-(t5094 - t5483) * t5139 + (-pkin(6) * t5073 + t5091 * t5181) * t5517 + (-t5157 * t5139 + t5973) * pkin(2) * t5072) * t5896) * t5189 + t5139 * t5288 + t5345 * t5354 - t5288 + t4715 * t5826) * t5412;
t5309 = t5073 * t5389;
t5605 = t4808 * t5790;
t5948 = t5157 * pkin(6);
t4670 = (-(-t5826 * t5910 + ((t5129 - 0.2e1 * t5118 + t5200) * t5784 + pkin(5) * t5435) * t4892) * t4953 * t5153 + (-(-t5948 / 0.2e1 + t5081) * t5562 * t6000 + (-(-t5072 * t5559 - t5180 * t5456) * t4953 - t4715) * t5161 - (-t5605 * t5955 + t4892 * (t5081 - t5948)) * t5858) * t5189 + t5139 * t5309 + (t5048 * t5563 + t5295) * t5161 + ((-t4721 - t4814) * t5181 - t4785) * t5160 - t5309) * t4933 * t5593;
t5045 = -pkin(5) + t5668;
t5476 = t5072 + t6045;
t6016 = -t5072 * t5181 + (-pkin(6) * t5505 - t5045 * t5189) * t5784 + t5664 + (pkin(6) * t5738 + t5181 * t5476) * t5139;
t6053 = (t5153 * t5957 + t5189 * t6040) * t5161 + t5180 * t5453 - t5189 * t5351;
t4853 = t6016 * t4994 + t4997 * t6053 - t5538 * t5126;
t5590 = t4853 * t5860;
t4844 = t5172 * t5590;
t4856 = -t4994 * t6053 + t6016 * t4997 + t5541 * t5126;
t5587 = t4856 * t5860;
t4847 = t5173 * t5587;
t4919 = (t5045 * t5139 + t5450 - t5473) * t5189 - t5180 * t5825 + (t5180 * t5637 + t5476 * t5784) * t5181;
t4907 = t4919 * t5552;
t4574 = -t4847 - t4844 + t4907 - t4594 - t4661 - t4670;
t5746 = t5181 * t4574;
t5969 = pkin(1) * t4574;
t4646 = t4655 * t5181;
t5414 = t4808 * t5560;
t5310 = t5190 * t5414;
t6031 = t4646 + t5310;
t6063 = (t5139 * t5348 - t4772 - t5348) * t5469 + (pkin(1) * t4583 + (t4731 * t5190 + t5746) * pkin(5)) * t5160 + (t6031 * t5698 - t5190 * t5969 + (pkin(1) * t4731 - t5710) * t5181) * t5161 - t5190 * t5487;
t5649 = t4655 * t5955;
t6059 = -pkin(1) * t4801 - 0.2e1 * t5649 + t5710;
t5650 = t4654 * t5955;
t6058 = -pkin(1) * t4799 - 0.2e1 * t5650 + t5714;
t5651 = t4653 * t5955;
t6057 = -pkin(1) * t4797 - 0.2e1 * t5651 + t5718;
t6050 = -0.2e1 * pkin(5);
t6048 = 0.2e1 * t5184;
t6047 = 0.2e1 * t5187;
t6046 = 0.2e1 * t5190;
t5990 = 0.4e1 * t5157;
t6036 = (t5990 - 0.2e1) * t5139;
t5993 = 0.4e1 * t5151;
t6035 = (t5993 - 0.2e1) * t5139;
t5996 = 0.4e1 * t5145;
t6034 = (t5996 - 0.2e1) * t5139;
t4641 = t5161 * t4653;
t5273 = -t4595 / 0.2e1 - t4659 / 0.2e1 - t4668 / 0.2e1 - t4842 / 0.2e1 - t4845 / 0.2e1 + t4905 / 0.2e1;
t4545 = t4641 + t5273;
t4743 = -t4869 - t4798 / 0.2e1;
t4539 = -t4545 * t5184 - t4743 * t5420;
t6009 = -0.2e1 * t4539;
t4642 = t5161 * t4654;
t5275 = -t4593 / 0.2e1 - t4660 / 0.2e1 - t4669 / 0.2e1 - t4843 / 0.2e1 - t4846 / 0.2e1 + t4906 / 0.2e1;
t4546 = t4642 + t5275;
t4744 = -t4870 - t4800 / 0.2e1;
t4541 = -t4546 * t5187 - t4744 * t5415;
t6008 = -0.2e1 * t4541;
t4643 = t5161 * t4655;
t5274 = -t4594 / 0.2e1 - t4661 / 0.2e1 - t4670 / 0.2e1 - t4844 / 0.2e1 - t4847 / 0.2e1 + t4907 / 0.2e1;
t4547 = t4643 + t5274;
t4745 = -t4871 - t4802 / 0.2e1;
t4543 = -t4547 * t5190 - t4745 * t5410;
t6007 = -0.2e1 * t4543;
t6006 = 0.2e1 * t4908;
t6005 = 0.2e1 * t4909;
t6004 = 0.2e1 * t4910;
t6003 = 0.2e1 * t4911;
t6002 = 0.2e1 * t4912;
t6001 = 0.2e1 * t4913;
t5981 = t6049 - 0.1e1;
t5980 = 0.2e1 * t5141 - 0.1e1;
t5977 = 0.2e1 * t5147 - 0.1e1;
t5974 = 0.2e1 * t5153 - 0.1e1;
t5137 = t5160 ^ 2;
t5937 = MDP(4) * t5137;
t5936 = MDP(5) * t5137;
t5935 = MDP(6) * t5160;
t5934 = MDP(7) * t5160;
t5933 = MDP(15) * t5160;
t5932 = t4653 * t5183;
t5931 = t4653 * t5184;
t5930 = t4654 * t5186;
t5929 = t4654 * t5187;
t5928 = t4655 * t5189;
t5927 = t4655 * t5190;
t5915 = t4806 * t5143;
t5912 = t4807 * t5149;
t5909 = t4808 * t5155;
t5908 = t4851 * t5142;
t5907 = t4852 * t5148;
t5906 = t4853 * t5154;
t5905 = t4854 * t5142;
t5904 = t4855 * t5148;
t5903 = t4856 * t5154;
t5901 = t4890 * t4948;
t5898 = t4891 * t4951;
t5895 = t4892 * t4954;
t5887 = t4917 * t6011;
t5886 = t4918 * t6010;
t5885 = t4919 * t6012;
t5028 = g(1) * t5103 - g(2) * t5106;
t5031 = g(1) * t5106 + g(2) * t5103;
t4971 = t5028 * t5185 + t5031 * t5176;
t5872 = t4947 * t4971;
t4974 = -t5028 * t5176 + t5031 * t5185;
t5871 = t4947 * t4974;
t5029 = g(1) * t5104 - g(2) * t5107;
t5032 = g(1) * t5107 + g(2) * t5104;
t4972 = t5029 * t5188 + t5032 * t5179;
t5867 = t4950 * t4972;
t4975 = -t5029 * t5179 + t5032 * t5188;
t5866 = t4950 * t4975;
t5030 = g(1) * t5105 - g(2) * t5108;
t5033 = g(1) * t5108 + g(2) * t5105;
t4973 = t5030 * t5191 + t5033 * t5182;
t5862 = t4953 * t4973;
t4976 = -t5030 * t5182 + t5033 * t5191;
t5861 = t4953 * t4976;
t5805 = t5145 * t4653;
t5797 = t5151 * t4654;
t5789 = t5157 * t4655;
t5787 = t5160 * t4572;
t5786 = t5160 * t4573;
t5785 = t5160 * t4574;
t5757 = t5174 * t5183;
t5752 = t5177 * t5186;
t5747 = t5180 * t5189;
t5721 = t4878 - t4797;
t5720 = t4879 - t4799;
t5719 = t4880 - t4801;
t5695 = 0.2e1 * t5161;
t5694 = 0.4e1 * t5161;
t5327 = t5160 * t5414;
t4754 = t5181 * t5327;
t5495 = -t5783 / 0.2e1;
t4577 = t4754 + t4850 / 0.2e1 + t4904 / 0.2e1 + (-t5276 / 0.2e1 + (t5430 / 0.2e1 + (t4886 * t5495 + t5625 / 0.2e1) * t5154) * t4933) * t5205;
t5405 = t4953 * t5594;
t5282 = t5405 * t5909;
t5256 = t5181 * t5282;
t5496 = -t5789 / 0.2e1;
t4557 = t5160 * t5496 + t4577 * t5190 + t5256 / 0.2e1;
t5690 = 0.2e1 * t4557 * t4953;
t5329 = t5160 * t5424;
t4752 = t5175 * t5329;
t4575 = t4752 + t4848 / 0.2e1 + t4902 / 0.2e1 + (-t5278 / 0.2e1 + (t5429 / 0.2e1 + (t4884 * t5495 + t5627 / 0.2e1) * t5142) * t4929) * t5205;
t5409 = t4947 * t5600;
t5284 = t5409 * t5915;
t5260 = t5175 * t5284;
t5498 = -t5805 / 0.2e1;
t4558 = t5160 * t5498 + t4575 * t5184 + t5260 / 0.2e1;
t5689 = 0.2e1 * t4558 * t4947;
t5328 = t5160 * t5419;
t4753 = t5178 * t5328;
t4576 = t4753 + t4849 / 0.2e1 + t4903 / 0.2e1 + (-t5277 / 0.2e1 + (t5431 / 0.2e1 + (t4885 * t5495 + t5626 / 0.2e1) * t5148) * t4931) * t5205;
t5407 = t4950 * t5597;
t5283 = t5407 * t5912;
t5258 = t5178 * t5283;
t5497 = -t5797 / 0.2e1;
t4559 = t5160 * t5497 + t4576 * t5187 + t5258 / 0.2e1;
t5688 = 0.2e1 * t4559 * t4950;
t5326 = t4890 * t5409;
t5281 = t5142 * t5326;
t5259 = t5175 * t5281;
t5687 = (-t5259 - t5787 / 0.2e1) * t6048;
t5324 = t4891 * t5407;
t5280 = t5148 * t5324;
t5257 = t5178 * t5280;
t5686 = (-t5257 - t5786 / 0.2e1) * t6047;
t5322 = t4892 * t5405;
t5279 = t5154 * t5322;
t5255 = t5181 * t5279;
t5685 = (-t5255 - t5785 / 0.2e1) * t6046;
t5684 = -0.2e1 * (t4653 * t5174 - t5326) * t5184;
t5683 = -0.2e1 * (t4654 * t5177 - t5324) * t5187;
t5682 = -0.2e1 * (t4655 * t5180 - t5322) * t5190;
t5681 = -0.2e1 * t5857;
t5680 = 0.2e1 * t5857;
t5679 = -0.2e1 * t5856;
t5678 = 0.2e1 * t5856;
t5677 = -0.2e1 * t5855;
t5676 = 0.2e1 * t5855;
t5673 = 0.4e1 * t5757;
t5672 = 0.4e1 * t5752;
t5671 = 0.4e1 * t5747;
t5490 = pkin(1) * t4878 + t5718;
t4632 = t5490 - t5651;
t4605 = t5175 * t4632 - t6070 * t5184;
t5624 = t4605 * t5142 * t5174;
t5488 = pkin(1) * t4879 + t5714;
t4633 = t5488 - t5650;
t4607 = t4633 * t5178 - t6069 * t5187;
t5623 = t4607 * t5148 * t5177;
t5486 = pkin(1) * t4880 + t5710;
t4634 = t5486 - t5649;
t4609 = t4634 * t5181 - t6071 * t5190;
t5622 = t4609 * t5154 * t5180;
t5621 = t4655 * t5744;
t5620 = (-t4798 + t5408) * (-t4798 - t5408) * t5160;
t5619 = (-t4800 + t5406) * (-t4800 - t5406) * t5160;
t5618 = (-t4802 + t5404) * (-t4802 - t5404) * t5160;
t5583 = t4884 * t5884;
t5582 = t4885 * t5882;
t5581 = t4886 * t5880;
t5580 = t5184 * t4878;
t5579 = t5187 * t4879;
t5578 = t5190 * t4880;
t5566 = t4891 * t5800;
t5558 = t4914 * t5876;
t5557 = t4915 * t5874;
t5556 = t4916 * t5878;
t5555 = t4917 * t5876;
t5554 = t4918 * t5874;
t5553 = t4919 * t5878;
t5515 = t5160 * t4644;
t5514 = t5160 * t4645;
t5513 = t4655 * t5777;
t5509 = t4653 * t5754;
t5507 = t4654 * t5749;
t5434 = t4605 * t5555;
t5433 = t4607 * t5554;
t5432 = t4609 * t5553;
t4863 = t4947 * t5572;
t5428 = (-t4863 - t5408) * t4890 * t5807;
t4864 = t4950 * t5565;
t5427 = (-t4864 - t5406) * t4891 * t5799;
t4865 = t4953 * t5559;
t5426 = (-t4865 - t5404) * t4892 * t5791;
t5425 = t5187 * t4799;
t5423 = t4890 * t5512;
t5418 = t4807 * t5566;
t5413 = t4892 * t5511;
t5403 = t5160 * t5580;
t5402 = t4947 * t5806 * t4878;
t5401 = t5160 * t5579;
t5400 = t4950 * t5798 * t4879;
t5399 = t5160 * t5578;
t5398 = t4953 * t5790 * t4880;
t5376 = t5184 * t4797;
t5375 = t5190 * t4801;
t5362 = -t4689 + t5504;
t5361 = -t4690 + t5506;
t5360 = -t4691 + t5503;
t5359 = t5983 * t4878;
t5358 = t5983 * t4879;
t5357 = t5983 * t4880;
t5341 = t4797 * t5955;
t5340 = t4799 * t5955;
t5339 = t4801 * t5955;
t5332 = t4948 * t5428;
t5331 = t4951 * t5427;
t5330 = t4954 * t5426;
t5316 = t4747 * t5396;
t5315 = t4749 * t5393;
t5314 = t4751 * t5390;
t4735 = 0.2e1 * t5284;
t4737 = 0.2e1 * t5283;
t4739 = 0.2e1 * t5282;
t5263 = 0.2e1 * t5281;
t4761 = -0.2e1 * t5281;
t5262 = 0.2e1 * t5280;
t4762 = -0.2e1 * t5280;
t5261 = 0.2e1 * t5279;
t4763 = -0.2e1 * t5279;
t4548 = t4641 + t4572;
t4549 = t4642 + t4573;
t4550 = t4643 + t4574;
t4635 = t4878 * t5767 + t5931;
t4636 = t4879 * t5765 + t5929;
t4639 = t4880 * t5763 + t5927;
t5245 = t5160 * t4761;
t5244 = t5160 * t4762;
t5243 = t5160 * t4763;
t5242 = t5160 * t5256;
t5241 = t5160 * t5255;
t5240 = t5160 * t5260;
t5239 = t5160 * t5259;
t5238 = t5160 * t5258;
t5237 = t5160 * t5257;
t5230 = -pkin(5) * t5787 + t5424 * t5200;
t5229 = -pkin(5) * t5786 + t5419 * t5200;
t5228 = -pkin(5) * t5785 + t5414 * t5200;
t5227 = t5184 * t5245 + t5359 * t5997 - t4821 - t5359;
t5226 = t5187 * t5244 + t5358 * t5994 - t4822 - t5358;
t5225 = t5190 * t5243 + t5357 * t5991 - t4823 - t5357;
t5224 = t5580 * t5817 + (t5245 - t5580) * t5175 - t4548;
t5223 = t5579 * t5816 + (t5244 - t5579) * t5178 - t4549;
t5222 = t5578 * t5815 + (t5243 - t5578) * t5181 - t4550;
t5102 = t5161 * g(3);
t4868 = t4880 * t5992;
t4867 = t4879 * t5995;
t4866 = t4878 * t5998;
t4835 = t4868 + t4880;
t4834 = t4867 + t4879;
t4833 = t4866 + t4878;
t4760 = 0.2e1 * t5241;
t4759 = 0.2e1 * t5237;
t4758 = 0.2e1 * t5239;
t4750 = -t4871 - 0.2e1 * t4802;
t4748 = -t4870 - 0.2e1 * t4800;
t4746 = -t4869 - 0.2e1 * t4798;
t4738 = -0.4e1 * t5282;
t4736 = -0.4e1 * t5283;
t4734 = -0.4e1 * t5284;
t4688 = ((t4889 * t5465 - 0.2e1 * t5413) * t4954 + t5719) * t5747 + t5974 * t5314;
t4687 = ((t4888 * t5466 - 0.2e1 * t5418) * t4951 + t5720) * t5752 + t5977 * t5315;
t4686 = ((t4887 * t5467 - 0.2e1 * t5423) * t4948 + t5721) * t5757 + t5980 * t5316;
t4685 = (-0.2e1 * t4801 + t4868 + 0.2e1 * t4880) * t5153 - t5314 * t5671 + ((-0.4e1 * t5153 + 0.2e1) * t5413 + (t5974 * t5822 + t5157) * t4889) * t4954 - t5719;
t4684 = (-0.2e1 * t4799 + t4867 + 0.2e1 * t4879) * t5147 - t5315 * t5672 + ((-0.4e1 * t5147 + 0.2e1) * t5418 + (t5977 * t5823 + t5151) * t4888) * t4951 - t5720;
t4683 = (-0.2e1 * t4797 + t4866 + 0.2e1 * t4878) * t5141 - t5316 * t5673 + ((-0.4e1 * t5141 + 0.2e1) * t5423 + (t5980 * t5824 + t5145) * t4887) * t4948 - t5721;
t4640 = t5161 * t5578 - t4646;
t4638 = t5161 * t5579 - t4645;
t4637 = t5161 * t5580 - t4644;
t4628 = t6068 * t5160 - t5983 * t5646 + t5102;
t4627 = t6066 * t5160 - t5983 * t5647 + t5102;
t4626 = t6067 * t5160 - t5983 * t5648 + t5102;
t4622 = t5180 * t5279 + t5928;
t4621 = t5177 * t5280 + t5930;
t4620 = t5174 * t5281 + t5932;
t4618 = t4646 + 0.2e1 * t5310;
t4616 = t4644 + 0.2e1 * t5313;
t4614 = t4645 + 0.2e1 * t5318;
t4613 = t5621 + (t5991 - 0.1e1) * t5414;
t4612 = t5507 + (t5994 - 0.1e1) * t5419;
t4611 = t5509 + (t5997 - 0.1e1) * t5424;
t4610 = t4634 * t5190 + t6071 * t5181;
t4608 = t5187 * t4633 + t6069 * t5178;
t4606 = t5184 * t4632 + t6070 * t5175;
t4604 = t6054 * t5763 + (-pkin(5) * t5927 + g(3) * t5181) * t5160 + t5486 * t5190;
t4603 = t6055 * t5767 + (-pkin(5) * t5931 + g(3) * t5175) * t5160 + t5490 * t5184;
t4602 = t6056 * t5765 + (-pkin(5) * t5929 + g(3) * t5178) * t5160 + t5488 * t5187;
t4589 = t4604 * t5189 + t4628 * t5180;
t4588 = t4604 * t5180 - t4628 * t5189;
t4587 = t4603 * t5183 + t4626 * t5174;
t4586 = t4603 * t5174 - t4626 * t5183;
t4585 = t4602 * t5186 + t4627 * t5177;
t4584 = t4602 * t5177 - t4627 * t5186;
t4580 = t4583 * t5777 + 0.2e1 * t5414;
t4579 = t4582 * t5779 + 0.2e1 * t5419;
t4578 = t4581 * t5781 + 0.2e1 * t5424;
t4568 = t5327 * t6050 + t5969;
t4567 = t5328 * t6050 + t5970;
t4566 = t5329 * t6050 + t5971;
t4565 = (-t5154 * t5625 - t5430) * t5879 + ((t5172 * t5581 + t5333) * t5205 + t4639) * t5160 - t5722;
t4564 = (-t5148 * t5626 - t5431) * t5881 + ((t5172 * t5582 + t5334) * t5205 + t4636) * t5160 - t5723;
t4563 = (-t5142 * t5627 - t5429) * t5883 + ((t5172 * t5583 + t5335) * t5205 + t4635) * t5160 - t5724;
t4562 = -t4655 * t5771 + t4583 + t4754;
t4561 = -t4654 * t5773 + t4582 + t4753;
t4560 = -t4653 * t5775 + t4581 + t4752;
t4556 = -t5180 * t4565 - t5189 * t5225;
t4555 = -t5189 * t4565 + t5180 * t5225;
t4554 = -t5177 * t4564 - t5186 * t5226;
t4553 = -t5186 * t4564 + t5177 * t5226;
t4552 = -t5174 * t4563 - t5183 * t5227;
t4551 = -t5183 * t4563 + t5174 * t5227;
t4544 = -t4745 * t4953 * t5605 + t4547 * t5181;
t4542 = -t4744 * t4950 * t5609 + t4546 * t5178;
t4540 = -t4743 * t4947 * t5614 + t4545 * t5175;
t4535 = -(-t5174 * t5175 * t5397 + t4746 * t5776) * t5574 + t5174 * t4548 + t5183 * t5515;
t4534 = -(-t4750 * t5778 - t5181 * t5317) * t5561 + t5189 * t4550 - t5180 * t5513;
t4533 = -(-t5180 * t5181 * t5391 + t4750 * t5772) * t5561 + t5180 * t4550 + t5189 * t5513;
t4532 = -(-t4748 * t5780 - t5178 * t5319) * t5568 + t5186 * t4549 - t5177 * t5514;
t4531 = -(-t5177 * t5178 * t5394 + t4748 * t5774) * t5568 + t5177 * t4549 + t5186 * t5514;
t4530 = -(-t4746 * t5782 - t5175 * t5320) * t5574 + t5183 * t4548 - t5174 * t5515;
t4529 = ((-0.4e1 * t5279 - 0.2e1 * t5399) * t5161 + 0.2e1 * t5513 + t4738) * t5153 - 0.2e1 * t5222 * t5747 - (-t4865 - 0.2e1 * t5404) * t4871 - t5513 + t4739;
t4528 = ((-0.4e1 * t5280 - 0.2e1 * t5401) * t5161 + 0.2e1 * t5514 + t4736) * t5147 - 0.2e1 * t5223 * t5752 - (-t4864 - 0.2e1 * t5406) * t4870 - t5514 + t4737;
t4527 = ((-0.4e1 * t5281 - 0.2e1 * t5403) * t5161 + 0.2e1 * t5515 + t4734) * t5141 - 0.2e1 * t5224 * t5757 - (-t4863 - 0.2e1 * t5408) * t4869 - t5515 + t4735;
t4523 = -t5710 * t5160 + ((-t4583 * t5181 + t4739 * t5190) * t5161 + t5160 * t4823 + t5190 * t5261) * pkin(1) + ((-t4583 * t5190 - (t4892 * t5792 + t5909) * t5405 * t5691) * t5160 - t5982 * t4655) * pkin(5);
t4522 = -t5714 * t5160 + ((-t4582 * t5178 + t4737 * t5187) * t5161 + t5160 * t4822 + t5187 * t5262) * pkin(1) + ((-t4582 * t5187 - (t5566 + t5912) * t5407 * t5692) * t5160 - t5982 * t4654) * pkin(5);
t4521 = -t5718 * t5160 + ((-t4581 * t5175 + t4735 * t5184) * t5161 + t5160 * t4821 + t5184 * t5263) * pkin(1) + ((-t4581 * t5184 - (t4890 * t5808 + t5915) * t5409 * t5693) * t5160 - t5982 * t4653) * pkin(5);
t4520 = (t4568 * t5161 - t5339 + t5487) * t5190 + (t6059 * t5161 + t5228) * t5181;
t4519 = (t4567 * t5161 - t5340 + t5489) * t5187 + (t6058 * t5161 + t5229) * t5178;
t4518 = (t4566 * t5161 - t5341 + t5491) * t5184 + (t6057 * t5161 + t5230) * t5175;
t4517 = (-t5181 * t4568 + t6059 * t5190) * t5161 + t5228 * t5190 - 0.2e1 * ((-t5951 / 0.2e1 + t5122 / 0.2e1) * t5108 + (t5953 / 0.2e1 + t5952 / 0.2e1) * t5105 - t5339 / 0.2e1 + t4650) * t5181;
t4516 = (-t5178 * t4567 + t6058 * t5187) * t5161 + t5229 * t5187 - 0.2e1 * ((-t5940 / 0.2e1 + t5116 / 0.2e1) * t5107 + (t5941 / 0.2e1 + t5946 / 0.2e1) * t5104 - t5340 / 0.2e1 + t4652) * t5178;
t4515 = (-t5175 * t4566 + t6057 * t5184) * t5161 + t5230 * t5184 - 0.2e1 * ((-t5943 / 0.2e1 + t5113 / 0.2e1) * t5106 + (t5944 / 0.2e1 + t5947 / 0.2e1) * t5103 - t5341 / 0.2e1 + t4651) * t5175;
t4514 = t5222 * t5153 + (t5513 + (t4763 - t5399) * t5161 - 0.2e1 * t5282) * t5747 + t5241 + t4550;
t4513 = t5223 * t5147 + (t5514 + (t4762 - t5401) * t5161 - 0.2e1 * t5283) * t5752 + t5237 + t4549;
t4512 = t5224 * t5141 + (t5515 + (t4761 - t5403) * t5161 - 0.2e1 * t5284) * t5757 + t5239 + t4548;
t4511 = (t4577 * t5986 + t5154 * t5602 + t5160 * t5682) * t5161 + t5180 * t5685 + t4580 * t5189 + (t5180 * t5618 + (t4622 * t5139 - t5928) * t6046) * t5181 + (-0.4e1 * t5157 + t6036) * t4808 * t5895;
t4510 = (t4576 * t5987 + t5148 * t5603 + t5160 * t5683) * t5161 + t5177 * t5686 + t4579 * t5186 + (t5177 * t5619 + (t4621 * t5139 - t5930) * t6047) * t5178 + (-0.4e1 * t5151 + t6035) * t4807 * t5898;
t4509 = (t4575 * t5988 + t5142 * t5604 + t5160 * t5684) * t5161 + t5174 * t5687 + t4578 * t5183 + (t5174 * t5620 + (t4620 * t5139 - t5932) * t6048) * t5175 + (-0.4e1 * t5145 + t6034) * t4806 * t5901;
t4508 = (t4577 * t5189 - t4622 * t5771) * t5695 + t5189 * t5685 + (t5139 * t5682 + t5189 * t5618) * t5181 + (-t5161 * t4823 + 0.2e1 * t5621 - t4580 + (t5990 - t6036) * t5414) * t5180;
t4507 = (t4576 * t5186 - t4621 * t5773) * t5695 + t5186 * t5686 + (t5139 * t5683 + t5186 * t5619) * t5178 + (-t5161 * t4822 + 0.2e1 * t5507 - t4579 + (t5993 - t6035) * t5419) * t5177;
t4506 = (t4575 * t5183 - t4620 * t5775) * t5695 + t5183 * t5687 + (t5139 * t5684 + t5183 * t5620) * t5175 + (-t5161 * t4821 + 0.2e1 * t5509 - t4578 + (t5996 - t6034) * t5424) * t5174;
t4505 = ((0.2e1 * t4697 + 0.2e1 * t4895 + 0.2e1 * t4898 - 0.2e1 * t4922 + t5789) * t5139 + (-0.4e1 * t5241 - t4574) * t5161 - 0.2e1 * t5242 - t5789 + (t5981 * t5924 + (-t5360 * t6049 - t4691 + 0.2e1 * t5503) * t5910) * t4954 + t5372) * t5153 + 0.2e1 * ((t6031 * t5161 + t5375 / 0.2e1 + t5746 / 0.2e1) * t5160 - (t5161 * t5909 + (t5818 - t5822) * t5894) * t5405) * t5747 + t5139 * t4655 + (t4760 + t4574) * t5161 + t5242;
t4504 = ((0.2e1 * t4695 + 0.2e1 * t4893 + 0.2e1 * t4896 - 0.2e1 * t4920 + t5805) * t5139 + (-0.4e1 * t5239 - t4572) * t5161 - 0.2e1 * t5240 - t5805 + (t5981 * t5926 + (-t5362 * t6049 - t4689 + 0.2e1 * t5504) * t5916) * t4948 + t5374) * t5141 + 0.2e1 * ((t6033 * t5161 + t5376 / 0.2e1 + t5756 / 0.2e1) * t5160 - (t5161 * t5915 + (t5820 - t5824) * t5900) * t5409) * t5757 + t5139 * t4653 + (t4758 + t4572) * t5161 + t5240;
t4503 = ((0.2e1 * t4696 + 0.2e1 * t4894 + 0.2e1 * t4897 - 0.2e1 * t4921 + t5797) * t5139 + (-0.4e1 * t5237 - t4573) * t5161 - 0.2e1 * t5238 - t5797 + (t5981 * t5925 + (-t5361 * t6049 - t4690 + 0.2e1 * t5506) * t5913) * t4951 + t5373) * t5147 + 0.2e1 * ((t6032 * t5161 + t5425 / 0.2e1 + t5751 / 0.2e1) * t5160 - (t5161 * t5912 + (t5819 - t5823) * t5897) * t5407) * t5752 + t5139 * t4654 + (t4759 + t4573) * t5161 + t5238;
t4502 = (t4738 * t5161 + 0.4e1 * t5279 * t5367) * t5153 + ((t5496 + (t5360 * t5910 - t5924) * t4954 + t5372) * t5139 + (t4760 + t5274) * t5161 - t5181 * t5310 + t5242 + t5789 / 0.2e1 + t4898 / 0.2e1 + t4895 / 0.2e1 - t4922 / 0.2e1 + t4682 * t5895 / 0.2e1 + t4691 * t4954 * t5499 + t4697 / 0.2e1) * t5671 + t4763 * t5822 + (-t5696 * t6031 + t4739) * t5161 + t5157 * t5261 + t4763 + ((t5694 * t6031 + 0.2e1 * t5375 + 0.2e1 * t5746) * t5153 - t5375 - t5746) * t5160;
t4501 = (t4736 * t5161 + 0.4e1 * t5280 * t5368) * t5147 + ((t5497 + (t5361 * t5913 - t5925) * t4951 + t5373) * t5139 + (t4759 + t5275) * t5161 - t5178 * t5318 + t5238 + t5797 / 0.2e1 + t4897 / 0.2e1 + t4894 / 0.2e1 - t4921 / 0.2e1 + t4681 * t5898 / 0.2e1 + t4690 * t4951 * t5500 + t4696 / 0.2e1) * t5672 + t4762 * t5823 + (-t5696 * t6032 + t4737) * t5161 + t5151 * t5262 + t4762 + ((t5694 * t6032 + 0.2e1 * t5425 + 0.2e1 * t5751) * t5147 - t5425 - t5751) * t5160;
t4500 = (t4734 * t5161 + 0.4e1 * t5281 * t5369) * t5141 + ((t5498 + (t5362 * t5916 - t5926) * t4948 + t5374) * t5139 + (t4758 + t5273) * t5161 - t5175 * t5313 + t5240 + t5805 / 0.2e1 + t4896 / 0.2e1 + t4893 / 0.2e1 - t4920 / 0.2e1 + t4680 * t5901 / 0.2e1 + t4689 * t4948 * t5501 + t4695 / 0.2e1) * t5673 + t4761 * t5824 + (-t5696 * t6033 + t4735) * t5161 + t5145 * t5263 + t4761 + ((t5694 * t6033 + 0.2e1 * t5376 + 0.2e1 * t5756) * t5141 - t5376 - t5756) * t5160;
t4499 = t4523 * t5180 - t6063 * t5189;
t4498 = t4523 * t5189 + t6063 * t5180;
t4497 = t4522 * t5177 - t6064 * t5186;
t4496 = t4522 * t5186 + t6064 * t5177;
t4495 = t4521 * t5174 - t6065 * t5183;
t4494 = t4521 * t5183 + t6065 * t5174;
t1 = [(-t4653 * t5890 - t4654 * t5889 - t4655 * t5888) * MDP(1) + (-t4911 * t5872 - t4912 * t5867 - t4913 * t5862) * MDP(2) + (-t4911 * t5871 - t4912 * t5866 - t4913 * t5861) * MDP(3) + ((-t4618 * t5888 + t4856 * t5398) * t5181 + (-t4614 * t5889 + t4855 * t5400) * t5178 + (-t4616 * t5890 + t4854 * t5402) * t5175) * t5937 + (-(t4613 * t6001 + t4835 * t5903) * t4953 - (t4612 * t6002 + t4834 * t5904) * t4950 - (t4611 * t6003 + t4833 * t5905) * t4947) * t5936 + (-(t4544 * t6001 - t4640 * t5903) * t4953 - (t4542 * t6002 - t4638 * t5904) * t4950 - (t4540 * t6003 - t4637 * t5905) * t4947) * t5935 + (-(t4639 * t5903 + t4913 * t6007) * t4953 - (t4636 * t5904 + t4912 * t6008) * t4950 - (t4635 * t5905 + t4911 * t6009) * t4947) * t5934 + (-t4548 * t5589 - t4549 * t5588 - t4550 * t5587 + (-t4548 * t5890 - t4549 * t5889 - t4550 * t5888) * t5161) * MDP(8) + (-(t4520 * t4913 + t4609 * t5903) * t4953 - (t4519 * t4912 + t4607 * t5904) * t4950 - (t4518 * t4911 + t4605 * t5905) * t4947) * MDP(9) + (-(t4517 * t4913 + t4610 * t5903) * t4953 - (t4516 * t4912 + t4608 * t5904) * t4950 - (t4515 * t4911 + t4606 * t5905) * t4947) * MDP(10) + (-(t4505 * t4913 + t4514 * t5903) * t4953 - (t4503 * t4912 + t4513 * t5904) * t4950 - (t4504 * t4911 + t4512 * t5905) * t4947 + (t4686 * t5586 + t4687 * t5585 + t4688 * t5584) * t5769) * MDP(11) + (-(t4502 * t4913 + t4529 * t5903) * t4953 - (t4501 * t4912 + t4528 * t5904) * t4950 - (t4500 * t4911 + t4527 * t5905) * t4947 + (t4683 * t5586 + t4684 * t5585 + t4685 * t5584) * t5769) * MDP(12) + (-(t4511 * t4913 + t4556 * t5903) * t4953 - (t4510 * t4912 + t4554 * t5904) * t4950 - (t4509 * t4911 + t4552 * t5905) * t4947 + (t4531 * t5585 + t4533 * t5584 + t4535 * t5586) * t5769) * MDP(13) + (-(t4508 * t4913 + t4555 * t5903) * t4953 - (t4507 * t4912 + t4553 * t5904) * t4950 - (t4506 * t4911 + t4551 * t5905) * t4947 + (t4530 * t5586 + t4532 * t5585 + t4534 * t5584) * t5769) * MDP(14) + (t4854 * t5332 + t4855 * t5331 + t4856 * t5330 + t4913 * t5690 + t4911 * t5689 + t4912 * t5688 + (t4560 * t5586 + t4561 * t5585 + t4562 * t5584) * t5205) * t5933 + (-(t4499 * t4913 + t4609 * t4856) * t4953 - (t4497 * t4912 + t4607 * t4855) * t4950 - (t4495 * t4911 + t4605 * t4854) * t4947 + (t4584 * t5585 + t4586 * t5586 + t4588 * t5584) * t5769) * MDP(16) + (-(t4913 * t4498 - t4856 * t5622) * t4953 - (t4912 * t4496 - t4855 * t5623) * t4950 - (t4911 * t4494 - t4854 * t5624) * t4947 + (t4585 * t5585 + t4587 * t5586 + t4589 * t5584) * t5769) * MDP(17) + (t5173 - g(1)) * MDP(18); (-t4653 * t5893 - t4654 * t5892 - t4655 * t5891) * MDP(1) + (-t4908 * t5872 - t4909 * t5867 - t4910 * t5862) * MDP(2) + (-t4908 * t5871 - t4909 * t5866 - t4910 * t5861) * MDP(3) + ((-t4618 * t5891 + t4853 * t5398) * t5181 + (-t4614 * t5892 + t4852 * t5400) * t5178 + (-t4616 * t5893 + t4851 * t5402) * t5175) * t5937 + (-(t4613 * t6004 + t4835 * t5906) * t4953 - (t4612 * t6005 + t4834 * t5907) * t4950 - (t4611 * t6006 + t4833 * t5908) * t4947) * t5936 + (-(t4544 * t6004 - t4640 * t5906) * t4953 - (t4542 * t6005 - t4638 * t5907) * t4950 - (t4540 * t6006 - t4637 * t5908) * t4947) * t5935 + (-(t4639 * t5906 + t4910 * t6007) * t4953 - (t4636 * t5907 + t4909 * t6008) * t4950 - (t4635 * t5908 + t4908 * t6009) * t4947) * t5934 + (-t4548 * t5592 - t4549 * t5591 - t4550 * t5590 + (-t4548 * t5893 - t4549 * t5892 - t4550 * t5891) * t5161) * MDP(8) + (-(t4520 * t4910 + t4609 * t5906) * t4953 - (t4519 * t4909 + t4607 * t5907) * t4950 - (t4518 * t4908 + t4605 * t5908) * t4947) * MDP(9) + (-(t4517 * t4910 + t4610 * t5906) * t4953 - (t4516 * t4909 + t4608 * t5907) * t4950 - (t4515 * t4908 + t4606 * t5908) * t4947) * MDP(10) + (-(t4505 * t4910 + t4514 * t5906) * t4953 - (t4503 * t4909 + t4513 * t5907) * t4950 - (t4504 * t4908 + t4512 * t5908) * t4947 + (-t4686 * t5583 - t4687 * t5582 - t4688 * t5581) * t5769) * MDP(11) + (-(t4502 * t4910 + t4529 * t5906) * t4953 - (t4501 * t4909 + t4528 * t5907) * t4950 - (t4500 * t4908 + t4527 * t5908) * t4947 + (-t4683 * t5583 - t4684 * t5582 - t4685 * t5581) * t5769) * MDP(12) + (-(t4511 * t4910 + t4556 * t5906) * t4953 - (t4510 * t4909 + t4554 * t5907) * t4950 - (t4509 * t4908 + t4552 * t5908) * t4947 + (-t4531 * t5582 - t4533 * t5581 - t4535 * t5583) * t5769) * MDP(13) + (-(t4508 * t4910 + t4555 * t5906) * t4953 - (t4507 * t4909 + t4553 * t5907) * t4950 - (t4506 * t4908 + t4551 * t5908) * t4947 + (-t4530 * t5583 - t4532 * t5582 - t4534 * t5581) * t5769) * MDP(14) + (t4851 * t5332 + t4852 * t5331 + t4853 * t5330 + t4910 * t5690 + t4908 * t5689 + t4909 * t5688 + (-t4560 * t5583 - t4561 * t5582 - t4562 * t5581) * t5205) * t5933 + (-(t4499 * t4910 + t4609 * t4853) * t4953 - (t4497 * t4909 + t4607 * t4852) * t4950 - (t4495 * t4908 + t4605 * t4851) * t4947 + (-t4584 * t5582 - t4586 * t5583 - t4588 * t5581) * t5769) * MDP(16) + (-(t4910 * t4498 - t4853 * t5622) * t4953 - (t4909 * t4496 - t4852 * t5623) * t4950 - (t4908 * t4494 - t4851 * t5624) * t4947 + (-t4585 * t5582 - t4587 * t5583 - t4589 * t5581) * t5769) * MDP(17) + (t5172 - g(2)) * MDP(18); (t4653 * t5857 + t4654 * t5856 + t4655 * t5855) * MDP(1) + (t4971 * t5857 + t4972 * t5856 + t4973 * t5855) * MDP(2) + (t4974 * t5857 + t4975 * t5856 + t4976 * t5855) * MDP(3) + ((t4618 * t5855 - t5553 * t5578) * t5181 + (t4614 * t5856 - t5554 * t5579) * t5178 + (t4616 * t5857 - t5555 * t5580) * t5175) * t5937 + (t4611 * t5680 + t4612 * t5678 + t4613 * t5676 + t4833 * t5555 + t4834 * t5554 + t4835 * t5553) * t5936 + (t4540 * t5680 + t4542 * t5678 + t4544 * t5676 - t4637 * t5555 - t4638 * t5554 - t4640 * t5553) * t5935 + (t4539 * t5681 + t4541 * t5679 + t4543 * t5677 + t4635 * t5555 + t4636 * t5554 + t4639 * t5553) * t5934 + (t4548 * t5555 + t4549 * t5554 + t4550 * t5553 + (t4548 * t5857 + t4549 * t5856 + t4550 * t5855) * t5161) * MDP(8) + (t4518 * t5857 + t4519 * t5856 + t4520 * t5855 + t5432 + t5433 + t5434) * MDP(9) + (t4515 * t5857 + t4516 * t5856 + t4517 * t5855 + t4606 * t5555 + t4608 * t5554 + t4610 * t5553) * MDP(10) + (t4512 * t5555 + t4513 * t5554 + t4514 * t5553 + t4503 * t5856 + t4504 * t5857 + t4505 * t5855 + (t4686 * t5558 + t4687 * t5557 + t4688 * t5556) * t5205) * MDP(11) + (t4527 * t5555 + t4528 * t5554 + t4529 * t5553 + t4500 * t5857 + t4501 * t5856 + t4502 * t5855 + (t4683 * t5558 + t4684 * t5557 + t4685 * t5556) * t5205) * MDP(12) + (t4552 * t5555 + t4554 * t5554 + t4556 * t5553 + t4509 * t5857 + t4510 * t5856 + t4511 * t5855 + (t4531 * t5557 + t4533 * t5556 + t4535 * t5558) * t5205) * MDP(13) + (t4551 * t5555 + t4553 * t5554 + t4555 * t5553 + t4506 * t5857 + t4507 * t5856 + t4508 * t5855 + (t4530 * t5558 + t4532 * t5557 + t4534 * t5556) * t5205) * MDP(14) + ((t4560 * t5558 + t4561 * t5557 + t4562 * t5556) * t5205 + (-t4947 * t5428 * t5887 - t4950 * t5427 * t5886 - t4953 * t5426 * t5885 + t4557 * t5677 + t4558 * t5681 + t4559 * t5679) * t5160) * MDP(15) + (t4495 * t5857 + t4497 * t5856 + t4499 * t5855 + t4605 * t5887 + t4607 * t5886 + t4609 * t5885 + (t4584 * t5557 + t4586 * t5558 + t4588 * t5556) * t5205) * MDP(16) + (-t5174 * t5434 - t5177 * t5433 - t5180 * t5432 + t4494 * t5857 + t4496 * t5856 + t4498 * t5855 + (t4585 * t5557 + t4587 * t5558 + t4589 * t5556) * t5205) * MDP(17) + (t5171 - g(3)) * MDP(18);];
tauX  = t1;
