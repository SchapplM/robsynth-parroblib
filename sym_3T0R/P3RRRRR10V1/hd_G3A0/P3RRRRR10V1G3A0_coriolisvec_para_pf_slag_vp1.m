% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR10V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-06 23:28
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(6,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V1G3A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 22:57:21
% EndTime: 2020-08-06 22:59:41
% DurationCPUTime: 145.41s
% Computational Cost: add. (545247->1656), mult. (1590372->2687), div. (44253->13), fcn. (1310583->32), ass. (0->984)
t2321 = cos(pkin(3));
t2299 = t2321 ^ 2;
t2980 = t2299 - 0.1e1;
t2367 = rSges(3,3) ^ 2;
t2368 = rSges(3,2) ^ 2;
t2369 = rSges(2,2) ^ 2;
t2371 = rSges(2,1) ^ 2;
t2921 = Icges(3,3) - Icges(3,2);
t2136 = Icges(2,2) - Icges(2,1) + t2921 + (-t2369 + t2371) * m(2) + (-t2367 + t2368) * m(3);
t2340 = cos(qJ(3,3));
t2989 = m(3) * rSges(3,2);
t2242 = rSges(3,1) * t2989 - Icges(3,4);
t2331 = sin(qJ(3,3));
t2813 = t2242 * t2331;
t2675 = -0.2e1 * t2813;
t2370 = rSges(3,1) ^ 2;
t2271 = -t2368 + t2370;
t2922 = Icges(3,2) - Icges(3,1);
t2175 = m(3) * t2271 + t2922;
t2304 = t2340 ^ 2;
t3044 = t2175 * t2304;
t3046 = t2340 * t2675 + t3044;
t2390 = -t2136 - t3046;
t2343 = cos(qJ(3,2));
t2334 = sin(qJ(3,2));
t2812 = t2242 * t2334;
t2673 = -0.2e1 * t2812;
t2309 = t2343 ^ 2;
t3043 = t2175 * t2309;
t3047 = t2343 * t2673 + t3043;
t2389 = -t2136 - t3047;
t2346 = cos(qJ(3,1));
t2337 = sin(qJ(3,1));
t2811 = t2242 * t2337;
t2671 = -0.2e1 * t2811;
t2314 = t2346 ^ 2;
t3042 = t2175 * t2314;
t3048 = t2346 * t2671 + t3042;
t2388 = -t2136 - t3048;
t2349 = rSges(2,3) + pkin(5);
t2976 = m(2) * t2349;
t2414 = -rSges(2,1) * t2976 + Icges(2,5) + t2242;
t2923 = t2337 * rSges(3,2);
t2690 = m(3) * t2923;
t2402 = -pkin(5) * t2690 - t2414;
t2990 = m(3) * rSges(3,1);
t2300 = pkin(5) * t2990;
t2832 = t2175 * t2337;
t2841 = (t2300 + t2832) * t2346;
t3033 = 0.2e1 * t2242;
t3060 = t2314 * t3033 + t2402 + t2841;
t2924 = t2334 * rSges(3,2);
t2691 = m(3) * t2924;
t2403 = -pkin(5) * t2691 - t2414;
t2833 = t2175 * t2334;
t2842 = (t2300 + t2833) * t2343;
t3059 = t2309 * t3033 + t2403 + t2842;
t2925 = t2331 * rSges(3,2);
t2692 = m(3) * t2925;
t2404 = -pkin(5) * t2692 - t2414;
t2834 = t2175 * t2331;
t2843 = (t2300 + t2834) * t2340;
t3058 = t2304 * t3033 + t2404 + t2843;
t2341 = cos(qJ(2,3));
t2307 = t2341 ^ 2;
t2666 = -0.2e1 * t2300;
t3057 = t2390 * t2307 + t2331 * t2666;
t2344 = cos(qJ(2,2));
t2312 = t2344 ^ 2;
t3056 = t2389 * t2312 + t2334 * t2666;
t2347 = cos(qJ(2,1));
t2317 = t2347 ^ 2;
t3055 = t2388 * t2317 + t2337 * t2666;
t3045 = pkin(6) * t2980;
t2995 = -0.2e1 * t2314;
t3041 = t2242 * t2995 - t2841;
t2996 = -0.2e1 * t2309;
t3040 = t2242 * t2996 - t2842;
t2997 = -0.2e1 * t2304;
t3039 = t2242 * t2997 - t2843;
t3038 = -0.4e1 * pkin(6);
t3037 = 0.2e1 * pkin(6);
t2257 = t2307 - 0.2e1;
t2810 = t2257 * t2331;
t2163 = pkin(2) * t2810 - pkin(5);
t2332 = sin(qJ(2,3));
t2278 = t2332 * pkin(6);
t2216 = t2278 + pkin(1);
t2320 = sin(pkin(3));
t2333 = sin(qJ(1,3));
t2342 = cos(qJ(1,3));
t2118 = t2163 * t2320 * t2333 - t2216 * t2342;
t2277 = t2331 * pkin(2);
t2979 = t2307 - 0.1e1;
t2160 = t2277 * t2979 - pkin(5);
t2213 = pkin(5) * t2331 + pkin(2);
t2328 = legFrame(3,2);
t2264 = sin(t2328);
t2267 = cos(t2328);
t2762 = t2332 * t2341;
t2531 = t2331 * t2762;
t2956 = pkin(2) * t2320;
t2439 = t2531 * t2956;
t2413 = t2342 * t2439;
t2939 = pkin(6) * t2341;
t2618 = t2333 * t2939;
t2476 = t2331 * t2618;
t2955 = pkin(2) * t2332;
t2613 = t2333 * t2955;
t2484 = t2304 * t2613;
t2765 = t2331 * t2341;
t2544 = t2267 * t2765;
t2786 = t2320 * t2341;
t2621 = pkin(6) * t2786;
t2750 = t2341 * t2342;
t2791 = t2320 * t2332;
t2959 = pkin(2) * t2304;
t2806 = (t2341 + 0.1e1) * (t2341 - 0.1e1);
t2940 = pkin(6) * t2320;
t2479 = t2806 * t2940;
t2785 = t2320 * t2342;
t3012 = t2331 * (-(pkin(1) * t2785 + pkin(5) * t2333) * t2332 + t2342 * t2479) - t2613;
t2515 = -t2213 + 0.2e1 * t2959;
t3025 = t2333 * t2515;
t2052 = ((-t2163 * t2267 - t2264 * t2618) * t2340 + (-pkin(6) * t2544 + t2264 * t3025) * t2332) * t2299 + (-(t2264 * t2750 - 0.2e1 * t2267 * t2791) * t2959 + (t2118 * t2264 - t2267 * t2621) * t2340 + (-t2213 * t2267 + t2264 * t2476) * t2791) * t2321 - t2264 * t2484 + (t2160 * t2267 + t2264 * t2413) * t2340 - t3012 * t2264 + t2216 * t2544;
t2547 = t2264 * t2765;
t2055 = ((-t2163 * t2264 + t2267 * t2618) * t2340 + (-pkin(6) * t2547 - t2267 * t3025) * t2332) * t2299 + ((0.2e1 * t2264 * t2791 + t2267 * t2750) * t2959 + (-t2118 * t2267 - t2264 * t2621) * t2340 - (t2213 * t2264 + t2267 * t2476) * t2791) * t2321 + t2267 * t2484 + (t2160 * t2264 - t2267 * t2413) * t2340 + t3012 * t2267 + t2216 * t2547;
t2751 = t2340 * t2341;
t2615 = pkin(6) * t2751;
t2651 = t2304 * t2955;
t2766 = t2331 * t2333;
t2967 = pkin(1) * t2320;
t2073 = ((-pkin(6) * t2531 - t2163 * t2340) * t2785 + (-t2216 * t2340 - t2341 * t2959) * t2333) * t2321 + t2340 * t2333 * t2439 + (t2332 * t2967 - t2479) * t2766 + ((-t2332 * t2515 + t2615) * t2299 + t2651 - t2213 * t2332) * t2342;
t2305 = 0.1e1 / t2340;
t2249 = pkin(1) * t2277;
t2763 = t2332 * t2340;
t2638 = pkin(2) * t2763;
t2153 = -t2638 + t2939;
t2840 = t2153 * t2321;
t3020 = -pkin(2) * t2751 - t2278;
t2106 = 0.1e1 / (pkin(1) * t2840 + (pkin(5) * t3020 + t2249) * t2320);
t2356 = xDP(1);
t2850 = t2106 * t2356;
t2355 = xDP(2);
t2851 = t2106 * t2355;
t2354 = xDP(3);
t2852 = t2106 * t2354;
t1992 = (t2052 * t2851 + t2055 * t2850 + t2073 * t2852) * t2305;
t3006 = 0.2e1 * t1992;
t2258 = t2312 - 0.2e1;
t2809 = t2258 * t2334;
t2164 = pkin(2) * t2809 - pkin(5);
t2335 = sin(qJ(2,2));
t2280 = t2335 * pkin(6);
t2220 = t2280 + pkin(1);
t2336 = sin(qJ(1,2));
t2345 = cos(qJ(1,2));
t2119 = t2164 * t2320 * t2336 - t2220 * t2345;
t2279 = t2334 * pkin(2);
t2978 = t2312 - 0.1e1;
t2161 = t2279 * t2978 - pkin(5);
t2217 = pkin(5) * t2334 + pkin(2);
t2329 = legFrame(2,2);
t2265 = sin(t2329);
t2268 = cos(t2329);
t2757 = t2335 * t2344;
t2530 = t2334 * t2757;
t2438 = t2530 * t2956;
t2412 = t2345 * t2438;
t2938 = pkin(6) * t2344;
t2617 = t2336 * t2938;
t2475 = t2334 * t2617;
t2954 = pkin(2) * t2335;
t2612 = t2336 * t2954;
t2483 = t2309 * t2612;
t2760 = t2334 * t2344;
t2543 = t2268 * t2760;
t2784 = t2320 * t2344;
t2620 = pkin(6) * t2784;
t2748 = t2344 * t2345;
t2789 = t2320 * t2335;
t2958 = pkin(2) * t2309;
t2805 = (t2344 + 0.1e1) * (t2344 - 0.1e1);
t2478 = t2805 * t2940;
t2783 = t2320 * t2345;
t3011 = t2334 * (-(pkin(1) * t2783 + pkin(5) * t2336) * t2335 + t2345 * t2478) - t2612;
t2514 = -t2217 + 0.2e1 * t2958;
t3024 = t2336 * t2514;
t2053 = ((-t2164 * t2268 - t2265 * t2617) * t2343 + (-pkin(6) * t2543 + t2265 * t3024) * t2335) * t2299 + (-(t2265 * t2748 - 0.2e1 * t2268 * t2789) * t2958 + (t2119 * t2265 - t2268 * t2620) * t2343 + (-t2217 * t2268 + t2265 * t2475) * t2789) * t2321 - t2265 * t2483 + (t2161 * t2268 + t2265 * t2412) * t2343 - t3011 * t2265 + t2220 * t2543;
t2546 = t2265 * t2760;
t2056 = ((-t2164 * t2265 + t2268 * t2617) * t2343 + (-pkin(6) * t2546 - t2268 * t3024) * t2335) * t2299 + ((0.2e1 * t2265 * t2789 + t2268 * t2748) * t2958 + (-t2119 * t2268 - t2265 * t2620) * t2343 - (t2217 * t2265 + t2268 * t2475) * t2789) * t2321 + t2268 * t2483 + (t2161 * t2265 - t2268 * t2412) * t2343 + t3011 * t2268 + t2220 * t2546;
t2749 = t2343 * t2344;
t2614 = pkin(6) * t2749;
t2649 = t2309 * t2954;
t2761 = t2334 * t2336;
t2074 = ((-pkin(6) * t2530 - t2164 * t2343) * t2783 + (-t2220 * t2343 - t2344 * t2958) * t2336) * t2321 + t2343 * t2336 * t2438 + (t2335 * t2967 - t2478) * t2761 + ((-t2335 * t2514 + t2614) * t2299 + t2649 - t2217 * t2335) * t2345;
t2310 = 0.1e1 / t2343;
t2251 = pkin(1) * t2279;
t2758 = t2335 * t2343;
t2636 = pkin(2) * t2758;
t2154 = -t2636 + t2938;
t2839 = t2154 * t2321;
t3021 = -pkin(2) * t2749 - t2280;
t2107 = 0.1e1 / (pkin(1) * t2839 + (pkin(5) * t3021 + t2251) * t2320);
t2847 = t2107 * t2356;
t2848 = t2107 * t2355;
t2849 = t2107 * t2354;
t1993 = (t2053 * t2848 + t2056 * t2847 + t2074 * t2849) * t2310;
t3005 = 0.2e1 * t1993;
t2259 = t2317 - 0.2e1;
t2808 = t2259 * t2337;
t2165 = pkin(2) * t2808 - pkin(5);
t2338 = sin(qJ(2,1));
t2282 = t2338 * pkin(6);
t2224 = t2282 + pkin(1);
t2339 = sin(qJ(1,1));
t2348 = cos(qJ(1,1));
t2120 = t2165 * t2320 * t2339 - t2224 * t2348;
t2281 = t2337 * pkin(2);
t2977 = t2317 - 0.1e1;
t2162 = t2281 * t2977 - pkin(5);
t2221 = pkin(5) * t2337 + pkin(2);
t2330 = legFrame(1,2);
t2266 = sin(t2330);
t2269 = cos(t2330);
t2752 = t2338 * t2347;
t2529 = t2337 * t2752;
t2437 = t2529 * t2956;
t2411 = t2348 * t2437;
t2937 = pkin(6) * t2347;
t2616 = t2339 * t2937;
t2474 = t2337 * t2616;
t2953 = pkin(2) * t2338;
t2610 = t2339 * t2953;
t2482 = t2314 * t2610;
t2755 = t2337 * t2347;
t2542 = t2269 * t2755;
t2782 = t2320 * t2347;
t2619 = pkin(6) * t2782;
t2746 = t2347 * t2348;
t2787 = t2320 * t2338;
t2957 = pkin(2) * t2314;
t2804 = (t2347 + 0.1e1) * (t2347 - 0.1e1);
t2477 = t2804 * t2940;
t2781 = t2320 * t2348;
t3010 = t2337 * (-(pkin(1) * t2781 + pkin(5) * t2339) * t2338 + t2348 * t2477) - t2610;
t2513 = -t2221 + 0.2e1 * t2957;
t3023 = t2339 * t2513;
t2054 = ((-t2165 * t2269 - t2266 * t2616) * t2346 + (-pkin(6) * t2542 + t2266 * t3023) * t2338) * t2299 + (-(t2266 * t2746 - 0.2e1 * t2269 * t2787) * t2957 + (t2120 * t2266 - t2269 * t2619) * t2346 + (-t2221 * t2269 + t2266 * t2474) * t2787) * t2321 - t2266 * t2482 + (t2162 * t2269 + t2266 * t2411) * t2346 - t3010 * t2266 + t2224 * t2542;
t2545 = t2266 * t2755;
t2057 = ((-t2165 * t2266 + t2269 * t2616) * t2346 + (-pkin(6) * t2545 - t2269 * t3023) * t2338) * t2299 + ((0.2e1 * t2266 * t2787 + t2269 * t2746) * t2957 + (-t2120 * t2269 - t2266 * t2619) * t2346 - (t2221 * t2266 + t2269 * t2474) * t2787) * t2321 + t2269 * t2482 + (t2162 * t2266 - t2269 * t2411) * t2346 + t3010 * t2269 + t2224 * t2545;
t2647 = t2314 * t2953;
t2747 = t2346 * t2347;
t2756 = t2337 * t2339;
t2075 = ((-pkin(6) * t2529 - t2165 * t2346) * t2781 + (-t2224 * t2346 - t2347 * t2957) * t2339) * t2321 + t2346 * t2339 * t2437 + (t2338 * t2967 - t2477) * t2756 + ((pkin(6) * t2747 - t2338 * t2513) * t2299 + t2647 - t2221 * t2338) * t2348;
t2315 = 0.1e1 / t2346;
t2253 = pkin(1) * t2281;
t2753 = t2338 * t2346;
t2634 = pkin(2) * t2753;
t2155 = -t2634 + t2937;
t2838 = t2155 * t2321;
t3022 = -pkin(2) * t2747 - t2282;
t2108 = 0.1e1 / (pkin(1) * t2838 + (pkin(5) * t3022 + t2253) * t2320);
t2844 = t2108 * t2356;
t2845 = t2108 * t2355;
t2846 = t2108 * t2354;
t1994 = (t2054 * t2845 + t2057 * t2844 + t2075 * t2846) * t2315;
t3004 = 0.2e1 * t1994;
t2776 = t2321 * t2333;
t2115 = t2153 * t2776 - t2342 * t3020;
t2639 = pkin(2) * t2766;
t2778 = t2321 * t2331;
t2642 = pkin(2) * t2778;
t2091 = (t2153 * t2267 + t2264 * t2639) * t2320 + t2115 * t2264 - t2267 * t2642;
t2076 = t2091 * t2851;
t2092 = (t2153 * t2264 - t2267 * t2639) * t2320 - t2115 * t2267 - t2264 * t2642;
t2077 = t2092 * t2850;
t2792 = t2320 * t2331;
t2100 = -t3020 * t2333 + (-pkin(2) * t2792 - t2840) * t2342;
t2088 = t2100 * t2852;
t2049 = t2077 + t2076 + t2088;
t3036 = 0.2e1 * t2049;
t2773 = t2321 * t2336;
t2116 = t2154 * t2773 - t2345 * t3021;
t2637 = pkin(2) * t2761;
t2775 = t2321 * t2334;
t2641 = pkin(2) * t2775;
t2093 = (t2154 * t2268 + t2265 * t2637) * t2320 + t2116 * t2265 - t2268 * t2641;
t2078 = t2093 * t2848;
t2094 = (t2154 * t2265 - t2268 * t2637) * t2320 - t2116 * t2268 - t2265 * t2641;
t2079 = t2094 * t2847;
t2790 = t2320 * t2334;
t2101 = -t3021 * t2336 + (-pkin(2) * t2790 - t2839) * t2345;
t2089 = t2101 * t2849;
t2050 = t2079 + t2078 + t2089;
t3035 = 0.2e1 * t2050;
t2770 = t2321 * t2339;
t2117 = t2155 * t2770 - t2348 * t3022;
t2635 = pkin(2) * t2756;
t2772 = t2321 * t2337;
t2640 = pkin(2) * t2772;
t2095 = (t2155 * t2269 + t2266 * t2635) * t2320 + t2117 * t2266 - t2269 * t2640;
t2080 = t2095 * t2845;
t2096 = (t2155 * t2266 - t2269 * t2635) * t2320 - t2117 * t2269 - t2266 * t2640;
t2081 = t2096 * t2844;
t2788 = t2320 * t2337;
t2102 = -t3022 * t2339 + (-pkin(2) * t2788 - t2838) * t2348;
t2090 = t2102 * t2846;
t2051 = t2081 + t2080 + t2090;
t3034 = 0.2e1 * t2051;
t3032 = 0.2e1 * t2320;
t3030 = Icges(2,3) + (t2369 + t2371) * m(2);
t2991 = m(2) * rSges(2,2);
t2711 = rSges(2,1) * t2991;
t3029 = -t2711 + Icges(2,4);
t2377 = pkin(2) ^ 2;
t1983 = t2377 * t1992;
t2303 = t2340 * t2304;
t3028 = t1983 * t2303;
t1984 = t2377 * t1993;
t2308 = t2343 * t2309;
t3027 = t1984 * t2308;
t1985 = t2377 * t1994;
t2313 = t2346 * t2314;
t3026 = t1985 * t2313;
t2286 = pkin(1) * t2307;
t2170 = t2286 - t2216;
t2287 = pkin(1) * t2312;
t2171 = t2287 - t2220;
t2288 = pkin(1) * t2317;
t2172 = t2288 - t2224;
t2932 = rSges(3,1) * t2337;
t3019 = rSges(3,2) * t2346 + t2932;
t2933 = rSges(3,1) * t2334;
t3018 = rSges(3,2) * t2343 + t2933;
t2934 = rSges(3,1) * t2331;
t3017 = rSges(3,2) * t2340 + t2934;
t3009 = 0.2e1 * pkin(1);
t2372 = 0.2e1 * pkin(5);
t3008 = -0.2e1 * pkin(6);
t3003 = -0.2e1 * t2049;
t3002 = -0.2e1 * t2050;
t3001 = -0.2e1 * t2051;
t2999 = 0.3e1 * t2321 * t2299;
t2998 = -0.2e1 * t2299;
t2994 = -0.2e1 * t2320;
t2360 = pkin(6) / 0.2e1;
t2992 = pkin(5) * m(3);
t2353 = m(2) * rSges(2,1);
t2988 = rSges(3,3) * m(3);
t2352 = pkin(1) * rSges(3,1);
t2987 = pkin(1) * rSges(3,2);
t1980 = pkin(5) * t1992;
t2986 = t1980 / 0.2e1;
t1981 = pkin(5) * t1993;
t2985 = t1981 / 0.2e1;
t1982 = pkin(5) * t1994;
t2984 = t1982 / 0.2e1;
t2983 = -t2175 / 0.2e1;
t2982 = t3033 / 0.2e1;
t2283 = pkin(1) * t2332;
t2225 = t2283 + pkin(6);
t2214 = t2277 + pkin(5);
t2465 = t2980 * t2333 * t2214;
t2109 = t2225 * t2785 - t2332 * t2465;
t2215 = 0.2e1 * t2278 + pkin(1);
t2112 = t2215 * t2785 - t2465;
t2535 = t2320 * t2776;
t2456 = t2264 * t2535;
t2121 = -t2267 * t2299 + t2267 + t2456;
t2624 = t2299 * t2278;
t2143 = -t2624 + t2216;
t2166 = t2283 - t3045;
t2374 = pkin(6) ^ 2;
t2801 = t2304 * t2377;
t2493 = -t2374 + t2801;
t2426 = t2493 * t2342;
t2436 = t2535 * t2278;
t2559 = t2214 * t2791;
t2459 = t2321 * t2559;
t2540 = t2332 * t2801;
t2793 = t2320 * t2321;
t2560 = t2214 * t2793;
t2952 = pkin(2) * t2340;
t2706 = pkin(6) * t2952;
t2608 = 0.2e1 * t2706;
t2058 = (t2264 * t2320 * t2426 + t2121 * t2608) * t2307 + (-t2121 * t2540 + (t2112 * t2264 - t2267 * t2560) * t2952 + (t2143 * t2267 + t2264 * t2436) * pkin(6)) * t2341 - (pkin(6) * t2456 + t2166 * t2267) * t2952 + pkin(6) * (t2109 * t2264 - t2267 * t2459);
t2453 = t2267 * t2535;
t2122 = t2264 * t2299 - t2264 + t2453;
t2609 = -0.2e1 * t2706;
t2059 = (-t2267 * t2493 * t2785 + t2122 * t2609) * t2307 + (t2122 * t2540 - (t2112 * t2267 + t2264 * t2560) * t2952 + pkin(6) * (t2143 * t2264 - t2267 * t2436)) * t2341 - (-pkin(6) * t2453 + t2166 * t2264) * t2952 - (t2109 * t2267 + t2264 * t2459) * pkin(6);
t2777 = t2321 * t2332;
t2082 = (t2321 * t2342 * t2609 + t2333 * t2493) * t2307 + ((-t2214 * t2785 + t2215 * t2333) * t2952 + t2426 * t2777) * t2341 + pkin(6) * (t2225 * t2333 + (t2321 * t2952 - t2559) * t2342);
t2378 = 0.1e1 / pkin(2);
t2779 = t2320 * t2378;
t2532 = t2354 * t2779;
t2140 = t2320 * (-pkin(5) * t2278 + t2249);
t2966 = pkin(1) * t2321;
t2245 = pkin(6) * t2966;
t2645 = t2320 * t2952;
t2858 = 0.1e1 / ((-pkin(5) * t2645 + t2245) * t2341 - t2638 * t2966 + t2140) * t2305;
t2566 = t2378 * t2858;
t2025 = t2082 * t2532 * t2858 + (t2058 * t2355 + t2059 * t2356) * t2566;
t2975 = m(3) * t2025;
t2284 = pkin(1) * t2335;
t2226 = t2284 + pkin(6);
t2218 = t2279 + pkin(5);
t2464 = t2980 * t2336 * t2218;
t2110 = t2226 * t2783 - t2335 * t2464;
t2219 = 0.2e1 * t2280 + pkin(1);
t2113 = t2219 * t2783 - t2464;
t2534 = t2320 * t2773;
t2455 = t2265 * t2534;
t2123 = -t2268 * t2299 + t2268 + t2455;
t2623 = t2299 * t2280;
t2144 = -t2623 + t2220;
t2167 = t2284 - t3045;
t2798 = t2309 * t2377;
t2492 = -t2374 + t2798;
t2425 = t2492 * t2345;
t2435 = t2534 * t2280;
t2557 = t2218 * t2789;
t2458 = t2321 * t2557;
t2538 = t2335 * t2798;
t2558 = t2218 * t2793;
t2951 = pkin(2) * t2343;
t2705 = pkin(6) * t2951;
t2606 = 0.2e1 * t2705;
t2060 = (t2265 * t2320 * t2425 + t2123 * t2606) * t2312 + (-t2123 * t2538 + (t2113 * t2265 - t2268 * t2558) * t2951 + (t2144 * t2268 + t2265 * t2435) * pkin(6)) * t2344 - (pkin(6) * t2455 + t2167 * t2268) * t2951 + pkin(6) * (t2110 * t2265 - t2268 * t2458);
t2452 = t2268 * t2534;
t2124 = t2265 * t2299 - t2265 + t2452;
t2607 = -0.2e1 * t2705;
t2061 = (-t2268 * t2492 * t2783 + t2124 * t2607) * t2312 + (t2124 * t2538 - (t2113 * t2268 + t2265 * t2558) * t2951 + pkin(6) * (t2144 * t2265 - t2268 * t2435)) * t2344 - (-pkin(6) * t2452 + t2167 * t2265) * t2951 - (t2110 * t2268 + t2265 * t2458) * pkin(6);
t2774 = t2321 * t2335;
t2083 = (t2321 * t2345 * t2607 + t2336 * t2492) * t2312 + ((-t2218 * t2783 + t2219 * t2336) * t2951 + t2425 * t2774) * t2344 + pkin(6) * (t2226 * t2336 + (t2321 * t2951 - t2557) * t2345);
t2141 = t2320 * (-pkin(5) * t2280 + t2251);
t2644 = t2320 * t2951;
t2857 = 0.1e1 / ((-pkin(5) * t2644 + t2245) * t2344 - t2636 * t2966 + t2141) * t2310;
t2565 = t2378 * t2857;
t2026 = t2083 * t2532 * t2857 + (t2060 * t2355 + t2061 * t2356) * t2565;
t2974 = m(3) * t2026;
t2285 = pkin(1) * t2338;
t2227 = t2285 + pkin(6);
t2222 = t2281 + pkin(5);
t2463 = t2980 * t2339 * t2222;
t2111 = t2227 * t2781 - t2338 * t2463;
t2223 = 0.2e1 * t2282 + pkin(1);
t2114 = t2223 * t2781 - t2463;
t2533 = t2320 * t2770;
t2454 = t2266 * t2533;
t2125 = -t2269 * t2299 + t2269 + t2454;
t2622 = t2299 * t2282;
t2145 = -t2622 + t2224;
t2168 = t2285 - t3045;
t2795 = t2314 * t2377;
t2491 = -t2374 + t2795;
t2424 = t2491 * t2348;
t2434 = t2533 * t2282;
t2555 = t2222 * t2787;
t2457 = t2321 * t2555;
t2536 = t2338 * t2795;
t2556 = t2222 * t2793;
t2950 = pkin(2) * t2346;
t2704 = pkin(6) * t2950;
t2604 = 0.2e1 * t2704;
t2062 = (t2266 * t2320 * t2424 + t2125 * t2604) * t2317 + (-t2125 * t2536 + (t2114 * t2266 - t2269 * t2556) * t2950 + (t2145 * t2269 + t2266 * t2434) * pkin(6)) * t2347 - (pkin(6) * t2454 + t2168 * t2269) * t2950 + pkin(6) * (t2111 * t2266 - t2269 * t2457);
t2451 = t2269 * t2533;
t2126 = t2266 * t2299 - t2266 + t2451;
t2605 = -0.2e1 * t2704;
t2063 = (-t2269 * t2491 * t2781 + t2126 * t2605) * t2317 + (t2126 * t2536 - (t2114 * t2269 + t2266 * t2556) * t2950 + pkin(6) * (t2145 * t2266 - t2269 * t2434)) * t2347 - (-pkin(6) * t2451 + t2168 * t2266) * t2950 - (t2111 * t2269 + t2266 * t2457) * pkin(6);
t2771 = t2321 * t2338;
t2084 = (t2321 * t2348 * t2605 + t2339 * t2491) * t2317 + ((-t2222 * t2781 + t2223 * t2339) * t2950 + t2424 * t2771) * t2347 + pkin(6) * (t2227 * t2339 + (t2321 * t2950 - t2555) * t2348);
t2142 = t2320 * (-pkin(5) * t2282 + t2253);
t2643 = t2320 * t2950;
t2856 = 0.1e1 / ((-pkin(5) * t2643 + t2245) * t2347 - t2634 * t2966 + t2142) * t2315;
t2564 = t2378 * t2856;
t2027 = t2084 * t2532 * t2856 + (t2062 * t2355 + t2063 * t2356) * t2564;
t2973 = m(3) * t2027;
t2972 = m(3) * t2368;
t1986 = pkin(1) * t1992;
t1987 = pkin(1) * t1993;
t1988 = pkin(1) * t1994;
t2019 = pkin(1) * t2025;
t2020 = pkin(1) * t2026;
t2021 = pkin(1) * t2027;
t2187 = -t2353 + t2692;
t2971 = pkin(1) * t2187;
t2188 = -t2353 + t2691;
t2970 = pkin(1) * t2188;
t2189 = -t2353 + t2690;
t2969 = pkin(1) * t2189;
t2212 = -t2988 + t2991;
t2968 = pkin(1) * t2212;
t2965 = pkin(2) * t1992;
t2964 = pkin(2) * t1993;
t2963 = pkin(2) * t1994;
t2962 = pkin(2) * t2025;
t2961 = pkin(2) * t2026;
t2960 = pkin(2) * t2027;
t2949 = pkin(5) * t2025;
t2948 = pkin(5) * t2026;
t2947 = pkin(5) * t2027;
t2946 = pkin(5) * t2341;
t2945 = pkin(5) * t2344;
t2944 = pkin(5) * t2347;
t1977 = pkin(6) * t1992;
t1978 = pkin(6) * t1993;
t1979 = pkin(6) * t1994;
t2943 = pkin(6) * t2049;
t2942 = pkin(6) * t2050;
t2941 = pkin(6) * t2051;
t2013 = t2025 * pkin(6);
t2014 = t2026 * pkin(6);
t2015 = t2027 * pkin(6);
t2931 = rSges(3,1) * t2340;
t2930 = rSges(3,1) * t2343;
t2929 = rSges(3,1) * t2346;
t2319 = pkin(1) * t3037;
t2920 = 0.2e1 * m(3);
t1953 = t3029 * t1992;
t1995 = t2025 * t2834;
t2709 = rSges(3,2) * t2988;
t2237 = -Icges(3,6) + t2709;
t2823 = t2237 * t2331;
t2891 = t2025 * t2242;
t2710 = rSges(3,1) * t2988;
t2240 = -Icges(3,5) + t2710;
t2903 = t1992 * t2240;
t2918 = ((t1995 / 0.2e1 - t2903) * t2340 + t1992 * t2823 - t1953 + (t2304 - 0.1e1 / 0.2e1) * t2891) * t2307;
t1954 = t3029 * t1993;
t1996 = t2026 * t2833;
t2822 = t2237 * t2334;
t2887 = t2026 * t2242;
t2899 = t1993 * t2240;
t2917 = ((t1996 / 0.2e1 - t2899) * t2343 + t1993 * t2822 - t1954 + (t2309 - 0.1e1 / 0.2e1) * t2887) * t2312;
t1955 = t3029 * t1994;
t1997 = t2027 * t2832;
t2821 = t2237 * t2337;
t2883 = t2027 * t2242;
t2895 = t1994 * t2240;
t2916 = ((t1997 / 0.2e1 - t2895) * t2346 + t1994 * t2821 - t1955 + (t2314 - 0.1e1 / 0.2e1) * t2883) * t2317;
t2010 = t2025 * t2277;
t1914 = t2010 - t1977;
t2915 = t1914 * t2321;
t2011 = t2026 * t2279;
t1915 = t2011 - t1978;
t2914 = t1915 * t2321;
t2012 = t2027 * t2281;
t1916 = t2012 - t1979;
t2913 = t1916 * t2321;
t1920 = -t1977 + t2949;
t2912 = t1920 * t2332;
t1921 = -t1978 + t2948;
t2911 = t1921 * t2335;
t1922 = -t1979 + t2947;
t2910 = t1922 * t2338;
t2909 = (t2049 + t1992) * (t2049 - t1992);
t2908 = (t2050 + t1993) * (t2050 - t1993);
t2907 = (t2051 + t1994) * (t2051 - t1994);
t2906 = (t2050 + t2026) * (t2050 - t2026);
t2905 = (t2049 + t2025) * (t2049 - t2025);
t2904 = (t2051 + t2027) * (t2051 - t2027);
t2902 = t1992 * t2242;
t2901 = t1992 * t2321;
t2900 = t1992 * t2331;
t2898 = t1993 * t2242;
t2897 = t1993 * t2321;
t2896 = t1993 * t2334;
t2894 = t1994 * t2242;
t2893 = t1994 * t2321;
t2892 = t1994 * t2337;
t2890 = t2025 * t2304;
t2889 = t2025 * t2320;
t2888 = t2025 * t2332;
t2886 = t2026 * t2309;
t2885 = t2026 * t2320;
t2884 = t2026 * t2335;
t2882 = t2027 * t2314;
t2881 = t2027 * t2320;
t2880 = t2027 * t2338;
t2046 = t2049 ^ 2;
t2879 = t2046 * t2299;
t2878 = t2046 * t2307;
t2047 = t2050 ^ 2;
t2877 = t2047 * t2299;
t2876 = t2047 * t2312;
t2048 = t2051 ^ 2;
t2875 = t2048 * t2299;
t2874 = t2048 * t2317;
t2873 = t2049 * t2299;
t2872 = t2049 * t2320;
t2871 = t2049 * t2321;
t2870 = t2049 * t2332;
t2869 = t2049 * t2341;
t2868 = t2050 * t2299;
t2867 = t2050 * t2320;
t2866 = t2050 * t2321;
t2865 = t2050 * t2335;
t2864 = t2050 * t2344;
t2863 = t2051 * t2299;
t2862 = t2051 * t2320;
t2861 = t2051 * t2321;
t2860 = t2051 * t2338;
t2859 = t2051 * t2347;
t2630 = pkin(5) * t2786;
t2407 = pkin(1) * t2777 + t2630;
t2769 = t2321 * t2341;
t2657 = pkin(1) * t2769;
t2855 = 0.1e1 / (pkin(6) * t2657 - t2407 * t2952 + t2140) * t2305;
t2629 = pkin(5) * t2784;
t2406 = pkin(1) * t2774 + t2629;
t2768 = t2321 * t2344;
t2656 = pkin(1) * t2768;
t2854 = 0.1e1 / (pkin(6) * t2656 - t2406 * t2951 + t2141) * t2310;
t2628 = pkin(5) * t2782;
t2405 = pkin(1) * t2771 + t2628;
t2767 = t2321 * t2347;
t2655 = pkin(1) * t2767;
t2853 = 0.1e1 / (pkin(6) * t2655 - t2405 * t2950 + t2142) * t2315;
t2831 = (Icges(3,1) + t2921 + 0.2e1 * t2972) * t2320;
t2830 = t2216 * t2320;
t2829 = t2220 * t2320;
t2828 = t2224 * t2320;
t2827 = t2225 * t2321;
t2826 = t2226 * t2321;
t2825 = t2227 * t2321;
t2824 = t2237 * t2320;
t2820 = t2237 * t2340;
t2819 = t2237 * t2343;
t2818 = t2237 * t2346;
t2184 = t2240 * t2331;
t2185 = t2240 * t2334;
t2186 = t2240 * t2337;
t2817 = t2240 * t2341;
t2816 = t2240 * t2344;
t2815 = t2240 * t2347;
t2814 = t2242 * t2320;
t2807 = (t2321 + 0.1e1) * (t2321 - 0.1e1);
t2803 = t2299 * t2374;
t2802 = t2303 * t2377;
t2800 = t2307 * t2374;
t2799 = t2308 * t2377;
t2797 = t2312 * t2374;
t2796 = t2313 * t2377;
t2794 = t2317 * t2374;
t2780 = t2377 * t2956;
t2764 = t2332 * t2240;
t2759 = t2335 * t2240;
t2754 = t2338 * t2240;
t2302 = m(3) * t2352;
t2745 = pkin(5) * t2989;
t2016 = t2377 * t2025;
t2471 = -pkin(5) * t1977 + t2016;
t1899 = pkin(2) * t1920 + t2331 * t2471;
t1911 = pkin(6) * t2900 - t2962;
t1908 = t1911 * t2830;
t1917 = t2986 + t2013 / 0.2e1;
t1974 = t2374 * t1992;
t2375 = pkin(5) ^ 2;
t2713 = pkin(1) ^ 2 + t2375;
t2517 = t2377 + t2713;
t2196 = t2374 + t2517;
t2361 = pkin(5) / 0.2e1;
t2203 = t2277 + t2361;
t2204 = t2278 / 0.2e1 + pkin(1);
t2248 = pkin(5) * t2277;
t2254 = pkin(1) * t2278;
t2295 = t2375 + t2377;
t2306 = t2341 * t2307;
t2318 = pkin(2) * t2372;
t2373 = -0.2e1 * pkin(1);
t2577 = t2049 * t2762;
t2433 = pkin(6) * t2213 * t2577;
t2446 = -0.3e1 * t2377 - t2374 - t2713;
t2450 = t2214 * t2577;
t2578 = t2049 * t2786;
t2462 = t2203 * t2578;
t2468 = t2980 * t2762;
t2481 = t2792 * t2943;
t2496 = t2257 * t2299 - t2307;
t2712 = t2377 - t2374;
t2521 = t2248 + t2712;
t2579 = t2049 * t2791;
t2580 = t2306 * t2872;
t2587 = t2025 * t2855;
t2592 = t1992 * t2830;
t2593 = t1992 * t2855;
t2650 = t2307 * t2277;
t2660 = t2307 * t2967;
t2664 = pkin(1) * t2888;
t2669 = -0.2e1 * t2793;
t2716 = -0.2e1 / 0.3e1 * t2377 - t2374 / 0.3e1;
t2718 = t2375 / 0.3e1 + t2377;
t2719 = t2374 / 0.2e1 + t2377;
t2729 = t1980 + t2013;
t1960 = pkin(2) * t2900;
t2738 = t1960 + t2013;
t2524 = t1960 + t2729;
t2741 = t2524 * t2332 + t2019;
t1881 = (((t2307 - 0.4e1 / 0.3e1) * t2802 + ((-0.2e1 / 0.3e1 * t2248 + t2716) * t2307 + 0.4e1 / 0.3e1 * t2248 + t2718) * t2340 + (0.4e1 / 0.3e1 * t2959 - 0.2e1 / 0.3e1 * t2213) * pkin(6) * t2762) * t2049 * t2999 + (t2257 * t3028 - ((t1986 + t2912) * t2341 + (-0.4e1 * t2214 + t2650) * t2579) * t2959 + (t2462 * t3038 - t1974 + t1983 + (-t2307 * t2965 + (-t2307 * t2729 + t2580 * t3037 + t1980 + 0.2e1 * t2013) * t2331) * pkin(2) + (0.2e1 * t2010 - t1977) * t2283) * t2340 + t2332 * (t1899 * t2341 + (-t2318 + (-t2295 + t2800) * t2331) * t2872)) * t2299 + ((-0.3e1 * t2307 + 0.3e1) * t2049 * t2802 - (t2025 * t2660 + 0.2e1 * t2215 * t2869 + ((t2986 + t2738) * t2332 + t2019) * t2994) * t2959 + (((t1992 * t2283 + t1920) * t2277 + t2471) * t2786 + (0.2e1 * (t2248 + t2719) * t2307 - 0.4e1 * t2248 - 0.2e1 * t2254 + t2446) * t2049) * t2340 - t1911 * t2660 + 0.2e1 * t2433 + t1908) * t2321 - t2979 * t3028 + (t1920 * t2341 + (-t2277 - t2372 + t2650) * t2872) * t2651 + 0.2e1 * ((t2307 / 0.2e1 - 0.1e1 / 0.2e1) * t2965 + (t1917 * t2307 - t2664 / 0.2e1 - t1917 + (-pkin(6) * t2306 + t2225 * t2341) * t2872) * t2331) * t2952 - 0.2e1 * t2204 * t2307 * t2481 - t1899 * t2762 + ((t2196 * t2331 + t2318) * t2332 + t2331 * t2319) * t2872) * t2305 * t2106 * t2049 + ((t2049 * t2496 + t2049 - t2901) * t2802 - (t1992 * t2657 - t2741 * t2320 + (t2341 * (-t2278 + pkin(1)) * t2299 + (t2203 * t2669 + t2939) * t2332) * t2049) * t2959 + ((t2630 + t2827) * t1914 + (-(t2254 - t2521) * t2299 + (-pkin(6) * t2214 + t2249 * t2332) * t2320 * t2769 + (-t2299 * t2307 + t2979) * pkin(2) * t2213) * t2049) * t2340 - t2299 * t2433 - t2170 * t2321 * t2481 + t2433 + t1908) * t2593 - ((-t2592 + ((t2286 - 0.2e1 * t2278 + t2373) * t2793 + pkin(5) * t2468) * t2049) * t2304 + ((-t2213 * t2578 - t1911) * t2321 + ((t2225 * t2998 + t2307 * t3045 + t2225) * t2049 - t2407 * t1992) * t2331) * t2340 - t2299 * t2450 + (t2341 * t2019 - t2170 * t2872) * t2321 + ((-t1920 - t2010) * t2332 + t1986) * t2320 + t2450) * pkin(2) * t2587;
t1926 = t2873 + t2901 / 0.2e1 - t2077 / 0.2e1 - t2076 / 0.2e1 - t2088 / 0.2e1;
t1929 = t1992 + t2871;
t1971 = -0.2e1 * t1977;
t2228 = 0.2e1 * t2248;
t2358 = -0.3e1 * t2374;
t2551 = t2341 * t2807;
t2423 = t2332 * t2214 * t2551;
t2430 = -pkin(6) * t2010 + t1974;
t2447 = 0.3e1 * t2374 + t2517;
t2586 = t2025 * t2778;
t2490 = pkin(1) * t2586;
t2581 = t2214 * t2871;
t2503 = 0.2e1 * t2581;
t2516 = t2807 * t3008;
t2717 = t2375 / 0.2e1 + t2377 / 0.2e1;
t2518 = t2374 + t2717;
t2541 = t2303 * t2780;
t2548 = t2377 * t2807;
t2554 = t2307 * t2807;
t2627 = pkin(6) * t2871;
t2652 = pkin(2) * t2807;
t2732 = t1977 / 0.2e1 - t2010 / 0.2e1;
t2703 = pkin(5) * t2360;
t2735 = pkin(6) * t2581 + t1992 * t2703;
t1884 = (((pkin(1) * t2901 + (t3009 + 0.3e1 * t2278 - 0.3e1 * t2624) * t2049) * t2801 + (pkin(1) * t2915 + (t2204 * t3008 + t2332 * t2803) * t2049) * pkin(6)) * t2320 * t2307 + (0.2e1 * t1926 * t2541 + (t2332 * t2503 + t2741) * t2304 * t2548 + ((-(t2010 + t1971) * t2283 + t2430) * t2321 + ((t2248 + t2518) * t2998 + t2228 + 0.4e1 * t2254 + t2447) * t2049) * t2645 + (-t1920 * t2277 / 0.2e1 - t2016 / 0.2e1 + t2735) * t2332 * t2516) * t2341 + (t1926 * t2540 * t3032 + (-t2216 * t2915 + (t2319 + ((t2248 + t2717) * t2998 + t2228 + t2196) * t2332) * t2049) * t2320) * pkin(6) + (-(t2358 + t2801) * t2580 + ((t1971 + t2949) * t2277 + t2016 - t2025 * t2374 - 0.4e1 * t2735) * t2307 + (t2503 + t2524 + t2664) * pkin(6)) * t2340 * t2652) * t2049 * t2566 + (t2341 * t1929 * t2541 + (t2592 + (t2423 + (t2278 + t2286) * t2793) * t2049) * t2801 + (((t2283 + t2360) * t2871 + t2732) * t2786 + (-t2307 + 0.1e1 / 0.2e1) * t2049 * t2214 * t2807) * t2608 - (t2423 * t2943 + (t2627 * t2286 + (-t2627 + t1914) * t2216) * t2320) * pkin(6)) * t2378 * t2593 + ((t2049 * t2216 * t2551 + pkin(1) * t2889) * t2959 + (t2049 * t2521 * t2554 - (-t2962 + (t2049 * t2827 - t1920) * t2331) * pkin(2) * t2786 + t2490 * t2955) * t2340 + (-t2341 * t2490 - ((t1986 - t2912) * t2331 - pkin(2) * t2888) * t2320 + (t2170 * t2320 * t2778 + t2980 * t2340 * t2225 + t2213 * t2468) * t2049) * pkin(6)) * t2587;
t2714 = t2374 + t2377;
t1893 = ((t1929 * t2801 + t2430) * t1992 - t1911 * t2962 + ((-(t2257 * t2801 - t2800) * t2299 + t2801 * t2806 - t2800 + t2248 + t2254 + t2714) * t2049 + ((t2462 + t2732) * t3037 + (t2374 + t2801) * t1992) * t2321 + (-pkin(6) * t2586 + (-(0.2e1 * t2332 * t2615 + t2213) * t2299 + t2215 * t2751) * t2049 + (t2153 * t2900 + (t1911 - t2962) * t2341 + (-0.2e1 * t2203 * t2871 - t2013 - t2738) * t2763) * t2320) * pkin(2)) * t2049) * t2106;
t2001 = t2025 * t2237;
t1905 = t1992 * t2675 + t2001;
t2159 = rSges(2,2) * t2976 - pkin(5) * t2988 - Icges(2,6);
t1947 = t2159 * t1992;
t1950 = t1992 * t2212;
t1956 = t1992 * t2237;
t1989 = t1992 ^ 2;
t2002 = t2025 * t2240;
t2563 = t2175 * t2791;
t2034 = t2049 * t2563;
t2130 = t2159 - t2184;
t2181 = t2237 * t2341;
t2472 = Icges(3,1) + (t2367 + t2368) * m(3) + t3030;
t2070 = -(-t2341 * t2130 + t2181 * t2340 + (-t2404 + t3039) * t2332) * t2320 - ((-t2212 * t2332 + (m(3) * t2931 - t2187) * t2341) * pkin(1) + t2472 + t3046) * t2321;
t2178 = t2332 * t2237;
t2715 = t2368 + t2370;
t2190 = m(3) * t2715 + Icges(3,3);
t2085 = -((-t2764 - m(3) * (rSges(3,2) * t2946 + t2352)) * t2340 + (t2178 - m(3) * (rSges(3,1) * t2946 - t2987)) * t2331 - t2190 * t2341) * t2320 + (-Icges(3,5) * t2331 - t2340 * Icges(3,6) + t3017 * m(3) * (rSges(3,3) + t2283)) * t2321;
t2420 = t2240 * t2340 - t2823;
t2127 = -t3029 - t2420;
t2174 = t2271 * t2920 - 0.2e1 * Icges(3,1) + (2 * Icges(3,2));
t2195 = -0.2e1 * m(3) * t2370 - Icges(3,3) - t2922;
t2197 = -t2711 / 0.2e1 + Icges(2,4) / 0.2e1;
t2198 = Icges(3,6) / 0.2e1 - t2709 / 0.2e1;
t2199 = -Icges(3,5) / 0.2e1 + t2710 / 0.2e1;
t2238 = 0.2e1 * t2237;
t2239 = 0.2e1 * t2240;
t2243 = 0.4e1 * t2242;
t2274 = 0.2e1 * t2745;
t2275 = -0.2e1 * t2745;
t2276 = 0.2e1 * t2302;
t2391 = -(rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) - (t2369 + (t2372 + rSges(2,3)) * rSges(2,3) + t2713) * m(2) - (t2367 + t2370 + t2713) * m(3) - Icges(2,1) - Icges(3,2) - Icges(1,3);
t2395 = -(rSges(2,1) + t2349) * (-rSges(2,1) + t2349) * m(2) - Icges(2,1) + Icges(2,3) + (-t2375 - t2271) * m(3) - t2922;
t2698 = rSges(3,1) * t2975;
t2528 = pkin(5) * t2698;
t2410 = t2528 - t2903;
t2674 = 0.4e1 * t2813;
t2417 = t2674 + t2745;
t2022 = t2025 ^ 2;
t1923 = t1989 + t2022;
t2509 = t1923 * t2692;
t2707 = m(3) * t2967;
t2512 = t2022 * t2707;
t2663 = t2049 * t2971;
t2667 = -0.2e1 * t2302;
t2668 = 0.2e1 * t2793;
t2683 = 0.2e1 * t2890;
t2688 = 0.2e1 * t2902;
t2695 = rSges(3,2) * t2975;
t2701 = t1923 * t2990;
t2708 = 0.2e1 * t2968;
t2720 = 0.2e1 * t3029;
t2723 = t1992 * t2136 + t2025 * t2184;
t2726 = -t1989 + t2022;
t2744 = (-(0.2e1 * t2127 * t2762 + t2174 * t2304 + (-t2243 * t2331 + t2275) * t2340 + t2395 + t3057) * t2299 + ((t2130 - t2820) * t2341 + t3058 * t2332) * t2668 - ((t2239 * t2332 + t2276) * t2340 + (-t2238 * t2331 + t2720) * t2332 - 0.2e1 * t2971) * t2341 + t3044 - (t2331 * t3033 + t2274) * t2340 + t2332 * t2708 + t2391 + t3057) * t1893 + t2070 * t1881 + t2085 * t1884 + 0.4e1 * (t2918 + (t1905 * t2340 + t1992 * t3044 + t2723) * t2762 / 0.2e1 + (t2199 * t1992 - t1995) * t2340 + t2198 * t2900 + t2197 * t1992 + ((t2997 + 0.1e1) * t2242 + (-t2931 / 0.2e1 + t2925 / 0.2e1) * t2992) * t2025) * t2873 + (((-t2025 * t2920 * t3017 - t1950) * t1986 + (-t2001 * t2331 + t2002 * t2340 + (t2745 * t2331 + t2414 + t3039) * t1992) * t2049 * t3032) * t2341 + 0.4e1 * (-t2034 - t2902) * t2890 + ((-0.2e1 * (-t2025 * t2417 + t1956) * t2872 - pkin(1) * t2701) * t2332 - (t2834 * t3006 + t2002) * t2025) * t2340 + (0.2e1 * (t2025 * t2175 + t2331 * t2410 + t1947) * t2872 - pkin(1) * (t1989 * t2353 - t2509)) * t2332 + (t2025 * t2823 + t2688) * t2025) * t2321 - 0.4e1 * t2049 * t2918 + ((-t1992 * t2814 - t2175 * t2870) * t2304 * t3006 + ((-pkin(5) * t2701 - t1989 * t2834) * t2320 + (-pkin(1) * t2695 - t1905 * t2332) * t3036) * t2340 - 0.2e1 * t2723 * t2870 + (pkin(5) * t2509 + t1989 * t2414) * t2320 + pkin(1) * (t2331 * t2698 + t1950) * t3003) * t2341 + (-t1992 * t2563 + t2049 * t3033) * t2683 + ((t2726 * t2824 + (t2049 * t2667 + (t2274 + t2674) * t2889) * t1992) * t2332 + rSges(3,2) * t2512 + (-t1995 - t2410) * t3003) * t2340 + (((t2240 * t2726 + t2528 * t3006) * t2331 + t1992 * (-t2025 * t2195 + t1947)) * t2320 + t2663 * t3006) * t2332 + t2512 * t2934 + ((-pkin(5) * t2695 + t1956) * t2331 - t1953 - t2891) * t3036;
t2017 = t2377 * t2026;
t2470 = -pkin(5) * t1978 + t2017;
t1900 = pkin(2) * t1921 + t2334 * t2470;
t1912 = pkin(6) * t2896 - t2961;
t1909 = t1912 * t2829;
t1918 = t2985 + t2014 / 0.2e1;
t1975 = t2374 * t1993;
t2205 = t2279 + t2361;
t2206 = t2280 / 0.2e1 + pkin(1);
t2250 = pkin(5) * t2279;
t2255 = pkin(1) * t2280;
t2311 = t2344 * t2312;
t2572 = t2050 * t2757;
t2432 = pkin(6) * t2217 * t2572;
t2449 = t2218 * t2572;
t2573 = t2050 * t2784;
t2461 = t2205 * t2573;
t2467 = t2980 * t2757;
t2473 = t2790 * t2942;
t2495 = t2258 * t2299 - t2312;
t2520 = t2250 + t2712;
t2574 = t2050 * t2789;
t2575 = t2311 * t2867;
t2585 = t2026 * t2854;
t2590 = t1993 * t2829;
t2591 = t1993 * t2854;
t2648 = t2312 * t2279;
t2654 = pkin(1) * t2884;
t2659 = t2312 * t2967;
t2728 = t1981 + t2014;
t1962 = pkin(2) * t2896;
t2737 = t1962 + t2014;
t2523 = t1962 + t2728;
t2740 = t2523 * t2335 + t2020;
t1882 = (((t2312 - 0.4e1 / 0.3e1) * t2799 + ((-0.2e1 / 0.3e1 * t2250 + t2716) * t2312 + 0.4e1 / 0.3e1 * t2250 + t2718) * t2343 + (0.4e1 / 0.3e1 * t2958 - 0.2e1 / 0.3e1 * t2217) * pkin(6) * t2757) * t2050 * t2999 + (t2258 * t3027 - ((t1987 + t2911) * t2344 + (-0.4e1 * t2218 + t2648) * t2574) * t2958 + (t2461 * t3038 - t1975 + t1984 + (-t2312 * t2964 + (-t2312 * t2728 + t2575 * t3037 + t1981 + 0.2e1 * t2014) * t2334) * pkin(2) + (0.2e1 * t2011 - t1978) * t2284) * t2343 + t2335 * (t1900 * t2344 + (-t2318 + (-t2295 + t2797) * t2334) * t2867)) * t2299 + ((-0.3e1 * t2312 + 0.3e1) * t2050 * t2799 - (t2026 * t2659 + 0.2e1 * t2219 * t2864 + ((t2985 + t2737) * t2335 + t2020) * t2994) * t2958 + (((t1993 * t2284 + t1921) * t2279 + t2470) * t2784 + (0.2e1 * (t2250 + t2719) * t2312 - 0.4e1 * t2250 - 0.2e1 * t2255 + t2446) * t2050) * t2343 - t1912 * t2659 + 0.2e1 * t2432 + t1909) * t2321 - t2978 * t3027 + (t1921 * t2344 + (-t2279 - t2372 + t2648) * t2867) * t2649 + 0.2e1 * ((t2312 / 0.2e1 - 0.1e1 / 0.2e1) * t2964 + (t1918 * t2312 - t2654 / 0.2e1 - t1918 + (-pkin(6) * t2311 + t2226 * t2344) * t2867) * t2334) * t2951 - 0.2e1 * t2206 * t2312 * t2473 - t1900 * t2757 + ((t2196 * t2334 + t2318) * t2335 + t2334 * t2319) * t2867) * t2310 * t2107 * t2050 + ((t2050 * t2495 + t2050 - t2897) * t2799 - (t1993 * t2656 - t2740 * t2320 + (t2344 * (-t2280 + pkin(1)) * t2299 + (t2205 * t2669 + t2938) * t2335) * t2050) * t2958 + ((t2629 + t2826) * t1915 + (-(t2255 - t2520) * t2299 + (-pkin(6) * t2218 + t2251 * t2335) * t2320 * t2768 + (-t2299 * t2312 + t2978) * pkin(2) * t2217) * t2050) * t2343 - t2299 * t2432 - t2171 * t2321 * t2473 + t2432 + t1909) * t2591 - ((-t2590 + ((t2287 - 0.2e1 * t2280 + t2373) * t2793 + pkin(5) * t2467) * t2050) * t2309 + ((-t2217 * t2573 - t1912) * t2321 + ((t2226 * t2998 + t2312 * t3045 + t2226) * t2050 - t2406 * t1993) * t2334) * t2343 - t2299 * t2449 + (t2344 * t2020 - t2171 * t2867) * t2321 + ((-t1921 - t2011) * t2335 + t1987) * t2320 + t2449) * pkin(2) * t2585;
t1927 = t2868 + t2897 / 0.2e1 - t2079 / 0.2e1 - t2078 / 0.2e1 - t2089 / 0.2e1;
t1930 = t1993 + t2866;
t1972 = -0.2e1 * t1978;
t2229 = 0.2e1 * t2250;
t2550 = t2344 * t2807;
t2422 = t2335 * t2218 * t2550;
t2429 = -pkin(6) * t2011 + t1975;
t2584 = t2026 * t2775;
t2489 = pkin(1) * t2584;
t2576 = t2218 * t2866;
t2502 = 0.2e1 * t2576;
t2539 = t2308 * t2780;
t2553 = t2312 * t2807;
t2626 = pkin(6) * t2866;
t2731 = t1978 / 0.2e1 - t2011 / 0.2e1;
t2734 = pkin(6) * t2576 + t1993 * t2703;
t1885 = (((pkin(1) * t2897 + (t3009 + 0.3e1 * t2280 - 0.3e1 * t2623) * t2050) * t2798 + (pkin(1) * t2914 + (t2206 * t3008 + t2335 * t2803) * t2050) * pkin(6)) * t2320 * t2312 + (0.2e1 * t1927 * t2539 + (t2335 * t2502 + t2740) * t2309 * t2548 + ((-(t2011 + t1972) * t2284 + t2429) * t2321 + ((t2250 + t2518) * t2998 + t2229 + 0.4e1 * t2255 + t2447) * t2050) * t2644 + (-t1921 * t2279 / 0.2e1 - t2017 / 0.2e1 + t2734) * t2335 * t2516) * t2344 + (t1927 * t2538 * t3032 + (-t2220 * t2914 + (t2319 + ((t2250 + t2717) * t2998 + t2229 + t2196) * t2335) * t2050) * t2320) * pkin(6) + (-(t2358 + t2798) * t2575 + ((t1972 + t2948) * t2279 + t2017 - t2026 * t2374 - 0.4e1 * t2734) * t2312 + (t2502 + t2523 + t2654) * pkin(6)) * t2343 * t2652) * t2050 * t2565 + (t2344 * t1930 * t2539 + (t2590 + (t2422 + (t2280 + t2287) * t2793) * t2050) * t2798 + (((t2284 + t2360) * t2866 + t2731) * t2784 + (-t2312 + 0.1e1 / 0.2e1) * t2050 * t2218 * t2807) * t2606 - (t2422 * t2942 + (t2626 * t2287 + (-t2626 + t1915) * t2220) * t2320) * pkin(6)) * t2378 * t2591 + ((t2050 * t2220 * t2550 + pkin(1) * t2885) * t2958 + (t2050 * t2520 * t2553 - (-t2961 + (t2050 * t2826 - t1921) * t2334) * pkin(2) * t2784 + t2489 * t2954) * t2343 + (-t2344 * t2489 - ((t1987 - t2911) * t2334 - pkin(2) * t2884) * t2320 + (t2171 * t2320 * t2775 + t2980 * t2343 * t2226 + t2217 * t2467) * t2050) * pkin(6)) * t2585;
t1894 = ((t1930 * t2798 + t2429) * t1993 - t1912 * t2961 + ((-(t2258 * t2798 - t2797) * t2299 + t2798 * t2805 - t2797 + t2250 + t2255 + t2714) * t2050 + ((t2461 + t2731) * t3037 + (t2374 + t2798) * t1993) * t2321 + (-pkin(6) * t2584 + (-(0.2e1 * t2335 * t2614 + t2217) * t2299 + t2219 * t2749) * t2050 + (t2154 * t2896 + (t1912 - t2961) * t2344 + (-0.2e1 * t2205 * t2866 - t2014 - t2737) * t2758) * t2320) * pkin(2)) * t2050) * t2107;
t2003 = t2026 * t2237;
t1906 = t1993 * t2673 + t2003;
t1948 = t2159 * t1993;
t1951 = t1993 * t2212;
t1957 = t1993 * t2237;
t1990 = t1993 ^ 2;
t2004 = t2026 * t2240;
t2562 = t2175 * t2789;
t2035 = t2050 * t2562;
t2131 = t2159 - t2185;
t2182 = t2237 * t2344;
t2071 = -(-t2344 * t2131 + t2182 * t2343 + (-t2403 + t3040) * t2335) * t2320 - ((-t2212 * t2335 + (m(3) * t2930 - t2188) * t2344) * pkin(1) + t2472 + t3047) * t2321;
t2179 = t2335 * t2237;
t2086 = -((-t2759 - m(3) * (rSges(3,2) * t2945 + t2352)) * t2343 + (t2179 - m(3) * (rSges(3,1) * t2945 - t2987)) * t2334 - t2190 * t2344) * t2320 + (-Icges(3,5) * t2334 - t2343 * Icges(3,6) + t3018 * m(3) * (rSges(3,3) + t2284)) * t2321;
t2419 = t2240 * t2343 - t2822;
t2128 = -t3029 - t2419;
t2697 = rSges(3,1) * t2974;
t2527 = pkin(5) * t2697;
t2409 = t2527 - t2899;
t2672 = 0.4e1 * t2812;
t2416 = t2672 + t2745;
t2023 = t2026 ^ 2;
t1924 = t1990 + t2023;
t2508 = t1924 * t2691;
t2511 = t2023 * t2707;
t2662 = t2050 * t2970;
t2682 = 0.2e1 * t2886;
t2686 = 0.2e1 * t2898;
t2694 = rSges(3,2) * t2974;
t2700 = t1924 * t2990;
t2722 = t1993 * t2136 + t2026 * t2185;
t2725 = -t1990 + t2023;
t2743 = (-(0.2e1 * t2128 * t2757 + t2174 * t2309 + (-t2243 * t2334 + t2275) * t2343 + t2395 + t3056) * t2299 + ((t2131 - t2819) * t2344 + t3059 * t2335) * t2668 - ((t2239 * t2335 + t2276) * t2343 + (-t2238 * t2334 + t2720) * t2335 - 0.2e1 * t2970) * t2344 + t3043 - (t2334 * t3033 + t2274) * t2343 + t2335 * t2708 + t2391 + t3056) * t1894 + t2071 * t1882 + t2086 * t1885 + 0.4e1 * (t2917 + (t1906 * t2343 + t1993 * t3043 + t2722) * t2757 / 0.2e1 + (t2199 * t1993 - t1996) * t2343 + t2198 * t2896 + t2197 * t1993 + ((t2996 + 0.1e1) * t2242 + (-t2930 / 0.2e1 + t2924 / 0.2e1) * t2992) * t2026) * t2868 + (((-t2026 * t2920 * t3018 - t1951) * t1987 + (-t2003 * t2334 + t2004 * t2343 + (t2745 * t2334 + t2414 + t3040) * t1993) * t2050 * t3032) * t2344 + 0.4e1 * (-t2035 - t2898) * t2886 + ((-0.2e1 * (-t2026 * t2416 + t1957) * t2867 - pkin(1) * t2700) * t2335 - (t2833 * t3005 + t2004) * t2026) * t2343 + (0.2e1 * (t2026 * t2175 + t2334 * t2409 + t1948) * t2867 - pkin(1) * (t1990 * t2353 - t2508)) * t2335 + (t2026 * t2822 + t2686) * t2026) * t2321 - 0.4e1 * t2050 * t2917 + ((-t1993 * t2814 - t2175 * t2865) * t2309 * t3005 + ((-pkin(5) * t2700 - t1990 * t2833) * t2320 + (-pkin(1) * t2694 - t1906 * t2335) * t3035) * t2343 - 0.2e1 * t2722 * t2865 + (pkin(5) * t2508 + t1990 * t2414) * t2320 + pkin(1) * (t2334 * t2697 + t1951) * t3002) * t2344 + (-t1993 * t2562 + t2050 * t3033) * t2682 + ((t2725 * t2824 + (t2050 * t2667 + (t2274 + t2672) * t2885) * t1993) * t2335 + rSges(3,2) * t2511 + (-t1996 - t2409) * t3002) * t2343 + (((t2240 * t2725 + t2527 * t3005) * t2334 + t1993 * (-t2026 * t2195 + t1948)) * t2320 + t2662 * t3005) * t2335 + t2511 * t2933 + ((-pkin(5) * t2694 + t1957) * t2334 - t1954 - t2887) * t3035;
t2018 = t2377 * t2027;
t2469 = -pkin(5) * t1979 + t2018;
t1901 = pkin(2) * t1922 + t2337 * t2469;
t1913 = pkin(6) * t2892 - t2960;
t1910 = t1913 * t2828;
t1919 = t2984 + t2015 / 0.2e1;
t1976 = t2374 * t1994;
t2207 = t2281 + t2361;
t2208 = t2282 / 0.2e1 + pkin(1);
t2252 = pkin(5) * t2281;
t2256 = pkin(1) * t2282;
t2316 = t2347 * t2317;
t2567 = t2051 * t2752;
t2431 = pkin(6) * t2221 * t2567;
t2448 = t2222 * t2567;
t2568 = t2051 * t2782;
t2460 = t2207 * t2568;
t2466 = t2980 * t2752;
t2480 = t2788 * t2941;
t2494 = t2259 * t2299 - t2317;
t2519 = t2252 + t2712;
t2569 = t2051 * t2787;
t2570 = t2316 * t2862;
t2583 = t2027 * t2853;
t2588 = t1994 * t2828;
t2589 = t1994 * t2853;
t2611 = pkin(6) * t2752;
t2646 = t2317 * t2281;
t2653 = pkin(1) * t2880;
t2658 = t2317 * t2967;
t2727 = t1982 + t2015;
t1964 = pkin(2) * t2892;
t2736 = t1964 + t2015;
t2522 = t1964 + t2727;
t2739 = t2522 * t2338 + t2021;
t1883 = (((t2317 - 0.4e1 / 0.3e1) * t2796 + ((-0.2e1 / 0.3e1 * t2252 + t2716) * t2317 + 0.4e1 / 0.3e1 * t2252 + t2718) * t2346 + (0.4e1 / 0.3e1 * t2957 - 0.2e1 / 0.3e1 * t2221) * t2611) * t2051 * t2999 + (t2259 * t3026 - ((t1988 + t2910) * t2347 + (-0.4e1 * t2222 + t2646) * t2569) * t2957 + (t2460 * t3038 - t1976 + t1985 + (-t2317 * t2963 + (-t2317 * t2727 + t2570 * t3037 + t1982 + 0.2e1 * t2015) * t2337) * pkin(2) + (0.2e1 * t2012 - t1979) * t2285) * t2346 + t2338 * (t1901 * t2347 + (-t2318 + (-t2295 + t2794) * t2337) * t2862)) * t2299 + ((-0.3e1 * t2317 + 0.3e1) * t2051 * t2796 - (t2027 * t2658 + 0.2e1 * t2223 * t2859 + ((t2984 + t2736) * t2338 + t2021) * t2994) * t2957 + (((t1994 * t2285 + t1922) * t2281 + t2469) * t2782 + (0.2e1 * (t2252 + t2719) * t2317 - 0.4e1 * t2252 - 0.2e1 * t2256 + t2446) * t2051) * t2346 - t1913 * t2658 + 0.2e1 * t2431 + t1910) * t2321 - t2977 * t3026 + (t1922 * t2347 + (-t2281 - t2372 + t2646) * t2862) * t2647 + 0.2e1 * ((t2317 / 0.2e1 - 0.1e1 / 0.2e1) * t2963 + (t1919 * t2317 - t2653 / 0.2e1 - t1919 + (-pkin(6) * t2316 + t2227 * t2347) * t2862) * t2337) * t2950 - 0.2e1 * t2208 * t2317 * t2480 - t1901 * t2752 + ((t2196 * t2337 + t2318) * t2338 + t2337 * t2319) * t2862) * t2315 * t2108 * t2051 + ((t2051 * t2494 + t2051 - t2893) * t2796 - (t1994 * t2655 - t2739 * t2320 + (t2347 * (-t2282 + pkin(1)) * t2299 + (t2207 * t2669 + t2937) * t2338) * t2051) * t2957 + ((t2628 + t2825) * t1916 + (-(t2256 - t2519) * t2299 + (-pkin(6) * t2222 + t2253 * t2338) * t2320 * t2767 + (-t2299 * t2317 + t2977) * pkin(2) * t2221) * t2051) * t2346 - t2299 * t2431 - t2172 * t2321 * t2480 + t2431 + t1910) * t2589 - ((-t2588 + ((t2288 - 0.2e1 * t2282 + t2373) * t2793 + pkin(5) * t2466) * t2051) * t2314 + ((-t2221 * t2568 - t1913) * t2321 + ((t2227 * t2998 + t2317 * t3045 + t2227) * t2051 - t2405 * t1994) * t2337) * t2346 - t2299 * t2448 + (t2347 * t2021 - t2172 * t2862) * t2321 + ((-t1922 - t2012) * t2338 + t1988) * t2320 + t2448) * pkin(2) * t2583;
t1928 = t2863 + t2893 / 0.2e1 - t2081 / 0.2e1 - t2080 / 0.2e1 - t2090 / 0.2e1;
t1931 = t1994 + t2861;
t1973 = -0.2e1 * t1979;
t2230 = 0.2e1 * t2252;
t2549 = t2347 * t2807;
t2421 = t2338 * t2222 * t2549;
t2428 = -pkin(6) * t2012 + t1976;
t2582 = t2027 * t2772;
t2488 = pkin(1) * t2582;
t2571 = t2222 * t2861;
t2501 = 0.2e1 * t2571;
t2537 = t2313 * t2780;
t2552 = t2317 * t2807;
t2625 = pkin(6) * t2861;
t2730 = t1979 / 0.2e1 - t2012 / 0.2e1;
t2733 = pkin(6) * t2571 + t1994 * t2703;
t1886 = (((pkin(1) * t2893 + (t3009 + 0.3e1 * t2282 - 0.3e1 * t2622) * t2051) * t2795 + (pkin(1) * t2913 + (t2208 * t3008 + t2338 * t2803) * t2051) * pkin(6)) * t2320 * t2317 + (0.2e1 * t1928 * t2537 + (t2338 * t2501 + t2739) * t2314 * t2548 + ((-(t2012 + t1973) * t2285 + t2428) * t2321 + ((t2252 + t2518) * t2998 + t2230 + 0.4e1 * t2256 + t2447) * t2051) * t2643 + (-t1922 * t2281 / 0.2e1 - t2018 / 0.2e1 + t2733) * t2338 * t2516) * t2347 + (t1928 * t2536 * t3032 + (-t2224 * t2913 + (t2319 + ((t2252 + t2717) * t2998 + t2230 + t2196) * t2338) * t2051) * t2320) * pkin(6) + (-(t2358 + t2795) * t2570 + ((t1973 + t2947) * t2281 + t2018 - t2027 * t2374 - 0.4e1 * t2733) * t2317 + (t2501 + t2522 + t2653) * pkin(6)) * t2346 * t2652) * t2051 * t2564 + (t2347 * t1931 * t2537 + (t2588 + (t2421 + (t2282 + t2288) * t2793) * t2051) * t2795 + (((t2285 + t2360) * t2861 + t2730) * t2782 + (-t2317 + 0.1e1 / 0.2e1) * t2051 * t2222 * t2807) * t2604 - (t2421 * t2941 + (t2625 * t2288 + (-t2625 + t1916) * t2224) * t2320) * pkin(6)) * t2378 * t2589 + ((t2051 * t2224 * t2549 + pkin(1) * t2881) * t2957 + (t2051 * t2519 * t2552 - (-t2960 + (t2051 * t2825 - t1922) * t2337) * pkin(2) * t2782 + t2488 * t2953) * t2346 + (-t2347 * t2488 - ((t1988 - t2910) * t2337 - pkin(2) * t2880) * t2320 + (t2172 * t2320 * t2772 + t2980 * t2346 * t2227 + t2221 * t2466) * t2051) * pkin(6)) * t2583;
t1895 = ((t1931 * t2795 + t2428) * t1994 - t1913 * t2960 + ((-(t2259 * t2795 - t2794) * t2299 + t2795 * t2804 - t2794 + t2252 + t2256 + t2714) * t2051 + ((t2460 + t2730) * t3037 + (t2374 + t2795) * t1994) * t2321 + (-pkin(6) * t2582 + (-(0.2e1 * t2346 * t2611 + t2221) * t2299 + t2223 * t2747) * t2051 + (t2155 * t2892 + (t1913 - t2960) * t2347 + (-0.2e1 * t2207 * t2861 - t2015 - t2736) * t2753) * t2320) * pkin(2)) * t2051) * t2108;
t2005 = t2027 * t2237;
t1907 = t1994 * t2671 + t2005;
t1949 = t2159 * t1994;
t1952 = t1994 * t2212;
t1958 = t1994 * t2237;
t1991 = t1994 ^ 2;
t2006 = t2027 * t2240;
t2561 = t2175 * t2787;
t2036 = t2051 * t2561;
t2132 = t2159 - t2186;
t2183 = t2237 * t2347;
t2072 = -(-t2347 * t2132 + t2183 * t2346 + (-t2402 + t3041) * t2338) * t2320 - ((-t2212 * t2338 + (m(3) * t2929 - t2189) * t2347) * pkin(1) + t2472 + t3048) * t2321;
t2180 = t2338 * t2237;
t2087 = -((-t2754 - m(3) * (rSges(3,2) * t2944 + t2352)) * t2346 + (t2180 - m(3) * (rSges(3,1) * t2944 - t2987)) * t2337 - t2190 * t2347) * t2320 + (-Icges(3,5) * t2337 - t2346 * Icges(3,6) + t3019 * m(3) * (rSges(3,3) + t2285)) * t2321;
t2418 = t2240 * t2346 - t2821;
t2129 = -t3029 - t2418;
t2696 = rSges(3,1) * t2973;
t2526 = pkin(5) * t2696;
t2408 = t2526 - t2895;
t2670 = 0.4e1 * t2811;
t2415 = t2670 + t2745;
t2024 = t2027 ^ 2;
t1925 = t1991 + t2024;
t2507 = t1925 * t2690;
t2510 = t2024 * t2707;
t2661 = t2051 * t2969;
t2681 = 0.2e1 * t2882;
t2684 = 0.2e1 * t2894;
t2693 = rSges(3,2) * t2973;
t2699 = t1925 * t2990;
t2721 = t1994 * t2136 + t2027 * t2186;
t2724 = -t1991 + t2024;
t2742 = (-(0.2e1 * t2129 * t2752 + t2174 * t2314 + (-t2243 * t2337 + t2275) * t2346 + t2395 + t3055) * t2299 + ((t2132 - t2818) * t2347 + t3060 * t2338) * t2668 - ((t2239 * t2338 + t2276) * t2346 + (-t2238 * t2337 + t2720) * t2338 - 0.2e1 * t2969) * t2347 + t3042 - (t2337 * t3033 + t2274) * t2346 + t2338 * t2708 + t2391 + t3055) * t1895 + t2072 * t1883 + t2087 * t1886 + 0.4e1 * (t2916 + (t1907 * t2346 + t1994 * t3042 + t2721) * t2752 / 0.2e1 + (t2199 * t1994 - t1997) * t2346 + t2198 * t2892 + t2197 * t1994 + ((t2995 + 0.1e1) * t2242 + (-t2929 / 0.2e1 + t2923 / 0.2e1) * t2992) * t2027) * t2863 + (((-t2027 * t2920 * t3019 - t1952) * t1988 + (-t2005 * t2337 + t2006 * t2346 + (t2745 * t2337 + t2414 + t3041) * t1994) * t2051 * t3032) * t2347 + 0.4e1 * (-t2036 - t2894) * t2882 + ((-0.2e1 * (-t2027 * t2415 + t1958) * t2862 - pkin(1) * t2699) * t2338 - (t2832 * t3004 + t2006) * t2027) * t2346 + (0.2e1 * (t2027 * t2175 + t2337 * t2408 + t1949) * t2862 - pkin(1) * (t1991 * t2353 - t2507)) * t2338 + (t2027 * t2821 + t2684) * t2027) * t2321 - 0.4e1 * t2051 * t2916 + ((-t1994 * t2814 - t2175 * t2860) * t2314 * t3004 + ((-pkin(5) * t2699 - t1991 * t2832) * t2320 + (-pkin(1) * t2693 - t1907 * t2338) * t3034) * t2346 - 0.2e1 * t2721 * t2860 + (pkin(5) * t2507 + t1991 * t2414) * t2320 + pkin(1) * (t2337 * t2696 + t1952) * t3001) * t2347 + (-t1994 * t2561 + t2051 * t3033) * t2681 + ((t2724 * t2824 + (t2051 * t2667 + (t2274 + t2670) * t2881) * t1994) * t2338 + rSges(3,2) * t2510 + (-t1997 - t2408) * t3001) * t2346 + (((t2240 * t2724 + t2526 * t3004) * t2337 + t1994 * (-t2027 * t2195 + t1949)) * t2320 + t2661 * t3004) * t2338 + t2510 * t2932 + ((-pkin(5) * t2693 + t1958) * t2337 - t1955 - t2883) * t3034;
t2689 = -0.2e1 * t2902;
t2687 = -0.2e1 * t2898;
t2685 = -0.2e1 * t2894;
t2680 = 0.2e1 * t2175 * t2321;
t2679 = 0.2e1 * t2824;
t2596 = t2242 * t2909;
t2595 = t2242 * t2908;
t2594 = t2242 * t2907;
t2525 = -t2302 / 0.4e1;
t2134 = t2185 + t2819;
t2363 = 0.2e1 * qJ(3,2);
t2350 = -Icges(3,2) / 0.2e1;
t2427 = -(0.2e1 * t2367 + t2715) * m(3) / 0.2e1 + t2350 - Icges(3,1) / 0.2e1 - t3030;
t2506 = t2310 * (t2071 * t1894 + (cos(t2363) * t2983 + sin(t2363) * t2982 + t2427) * t1882 + t2134 * t1885 + (t2419 * t2026 * t3032 + (t2980 * t2335 * t2389 + t3059 * t2793 + t2968) * t2050) * t2864 + t2128 * t2877 - ((-t2237 * t2574 + 0.2e1 * t1996) * t2343 + t2131 * t2574 + (0.4e1 * t2309 - 0.2e1) * t2887) * t2866 + (-t2035 + t2687) * t2682 + (-0.4e1 * (t2050 * t2525 - t2790 * t2887) * t2865 - t1996 * t3005 + t2240 * t2906) * t2343 + (-t2026 * t2831 - t2662) * t2865 - t2822 * t2906 + t2026 * t2686 + (-0.2e1 * t2128 * t2553 + t3029) * t2047);
t2133 = t2184 + t2820;
t2362 = 0.2e1 * qJ(3,3);
t2505 = (t2070 * t1893 + (cos(t2362) * t2983 + sin(t2362) * t2982 + t2427) * t1881 + t2133 * t1884 + (t2420 * t2025 * t3032 + (t2980 * t2332 * t2390 + t3058 * t2793 + t2968) * t2049) * t2869 + t2127 * t2879 - ((-t2237 * t2579 + 0.2e1 * t1995) * t2340 + t2130 * t2579 + (0.4e1 * t2304 - 0.2e1) * t2891) * t2871 + (-t2034 + t2689) * t2683 + (-0.4e1 * (t2049 * t2525 - t2792 * t2891) * t2870 - t1995 * t3006 + t2240 * t2905) * t2340 + (-t2025 * t2831 - t2663) * t2870 - t2823 * t2905 + t2025 * t2688 + (-0.2e1 * t2127 * t2554 + t3029) * t2046) * t2305;
t2135 = t2186 + t2818;
t2364 = 0.2e1 * qJ(3,1);
t2504 = (t2072 * t1895 + (cos(t2364) * t2983 + sin(t2364) * t2982 + t2427) * t1883 + t2135 * t1886 + (t2418 * t2027 * t3032 + (t2980 * t2338 * t2388 + t3060 * t2793 + t2968) * t2051) * t2859 + t2129 * t2875 - ((-t2237 * t2569 + 0.2e1 * t1997) * t2346 + t2132 * t2569 + (0.4e1 * t2314 - 0.2e1) * t2883) * t2861 + (-t2036 + t2685) * t2681 + (-0.4e1 * (t2051 * t2525 - t2788 * t2883) * t2860 - t1997 * t3004 + t2240 * t2904) * t2346 + (-t2027 * t2831 - t2661) * t2860 - t2821 * t2904 + t2027 * t2684 + (-0.2e1 * t2129 * t2552 + t3029) * t2048) * t2315;
t2173 = t2972 + t2350 + Icges(3,3) / 0.2e1 + Icges(3,1) / 0.2e1;
t2301 = m(3) * t2987;
t2442 = t2579 * t3006;
t2445 = (t1881 * t2133 - t1884 * t2190 + t1893 * t2085 + (0.2e1 * (t2175 * t2579 + t2688) * t2871 + t2175 * t2442 - 0.2e1 * t2596 - t2496 * t2046 * t3033) * t2304 + (-(t2237 * t2762 - t2300) * t2879 + (((t2178 + t2301) * t2341 - t2300 - (t2332 * t2417 + t2817) * t2793) * t2049 + (t2331 * t2680 + (-0.4e1 * t2332 * t2813 - 0.2e1 * t2817) * t2320) * t1992) * t2049 + (-t2810 * t2879 + (t2878 - t2909) * t2331) * t2175) * t2340 + ((-t2240 * t2762 - t2745) * t2331 + t2257 * t2242) * t2879 + (t2689 + ((-t2300 * t2332 + t2181) * t2331 - t2175 * t2332) * t2872) * t2871 + t2049 * ((t1992 * t2679 + t2049 * (t2302 + t2764)) * t2341 + t2049 * t2745) * t2331 - t2242 * t2878 + t2173 * t2442 + t2596) * t2858;
t2441 = t2574 * t3005;
t2444 = (t1882 * t2134 - t1885 * t2190 + t1894 * t2086 + (0.2e1 * (t2175 * t2574 + t2686) * t2866 + t2175 * t2441 - 0.2e1 * t2595 - t2495 * t2047 * t3033) * t2309 + (-(t2237 * t2757 - t2300) * t2877 + (((t2179 + t2301) * t2344 - t2300 - (t2335 * t2416 + t2816) * t2793) * t2050 + (t2334 * t2680 + (-0.4e1 * t2335 * t2812 - 0.2e1 * t2816) * t2320) * t1993) * t2050 + (-t2809 * t2877 + (t2876 - t2908) * t2334) * t2175) * t2343 + ((-t2240 * t2757 - t2745) * t2334 + t2258 * t2242) * t2877 + (t2687 + ((-t2300 * t2335 + t2182) * t2334 - t2175 * t2335) * t2867) * t2866 + t2050 * ((t1993 * t2679 + t2050 * (t2302 + t2759)) * t2344 + t2050 * t2745) * t2334 - t2242 * t2876 + t2173 * t2441 + t2595) * t2857;
t2440 = t2569 * t3004;
t2443 = (t1883 * t2135 - t1886 * t2190 + t1895 * t2087 + (0.2e1 * (t2175 * t2569 + t2684) * t2861 + t2175 * t2440 - 0.2e1 * t2594 - t2494 * t2048 * t3033) * t2314 + (-(t2237 * t2752 - t2300) * t2875 + (((t2180 + t2301) * t2347 - t2300 - (t2338 * t2415 + t2815) * t2793) * t2051 + (t2337 * t2680 + (-0.4e1 * t2338 * t2811 - 0.2e1 * t2815) * t2320) * t1994) * t2051 + (-t2808 * t2875 + (t2874 - t2907) * t2337) * t2175) * t2346 + ((-t2240 * t2752 - t2745) * t2337 + t2259 * t2242) * t2875 + (t2685 + ((-t2300 * t2338 + t2183) * t2337 - t2175 * t2338) * t2862) * t2861 + t2051 * ((t1994 * t2679 + t2051 * (t2302 + t2754)) * t2347 + t2051 * t2745) * t2337 - t2242 * t2874 + t2173 * t2440 + t2594) * t2856;
t1 = [(t2057 * t2504 + t2096 * t2742) * t2108 + (t2056 * t2506 + t2094 * t2743) * t2107 + (t2055 * t2505 + t2092 * t2744) * t2106 + (t2059 * t2445 + t2061 * t2444 + t2063 * t2443) * t2378; (t2054 * t2504 + t2095 * t2742) * t2108 + (t2053 * t2506 + t2093 * t2743) * t2107 + (t2052 * t2505 + t2091 * t2744) * t2106 + (t2058 * t2445 + t2060 * t2444 + t2062 * t2443) * t2378; (t2075 * t2504 + t2102 * t2742) * t2108 + (t2074 * t2506 + t2101 * t2743) * t2107 + (t2073 * t2505 + t2100 * t2744) * t2106 + (t2082 * t2445 + t2083 * t2444 + t2084 * t2443) * t2779;];
taucX  = t1;
