% Calculate inertia matrix for parallel robot
% P3RRRRR10V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [3x3]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 00:48
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G1A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-06 23:38:02
% EndTime: 2020-08-06 23:38:14
% DurationCPUTime: 12.39s
% Computational Cost: add. (22800->684), mult. (36738->1046), div. (432->16), fcn. (22698->26), ass. (0->433)
t2213 = -2 * pkin(2);
t1945 = (pkin(7) + rSges(3,3));
t2172 = (m(3) * t1945);
t1838 = rSges(3,2) * t2172 - Icges(3,6);
t1839 = rSges(3,1) * t2172 - Icges(3,5);
t1927 = sin(qJ(3,3));
t1936 = cos(qJ(3,3));
t1752 = -t1838 * t1936 - t1927 * t1839;
t1955 = (rSges(3,2) ^ 2);
t1957 = (rSges(3,1) ^ 2);
t1822 = m(3) * (-t1955 + t1957) - Icges(3,1) + Icges(3,2);
t1950 = rSges(3,2) * pkin(2);
t2178 = (rSges(3,1) * pkin(6));
t1837 = m(3) * (t1950 + t2178);
t1949 = rSges(3,2) * pkin(6);
t2179 = rSges(3,1) * pkin(2);
t1849 = -t1949 + t2179;
t1916 = t1936 ^ 2;
t1928 = sin(qJ(2,3));
t1937 = cos(qJ(2,3));
t1946 = rSges(2,3) + pkin(6);
t2176 = m(2) * t1946;
t1986 = -rSges(2,2) * t2176 + pkin(6) * t2172 + Icges(2,6);
t2175 = m(3) * t1927;
t2177 = rSges(3,1) * rSges(3,2);
t1875 = m(3) * t2177 - Icges(3,4);
t2182 = -2 * t1875;
t2194 = rSges(2,1) * t2176 + Icges(3,4) - Icges(2,5) - (-pkin(2) * pkin(6) + t2177) * m(3);
t2212 = t1928 * (t1849 * t2175 - t1916 * t2182 + (t1822 * t1927 + t1837) * t1936 + t2194) - (t1986 - t1752) * t1937;
t1930 = sin(qJ(3,2));
t1939 = cos(qJ(3,2));
t1753 = -t1838 * t1939 - t1930 * t1839;
t1918 = t1939 ^ 2;
t1931 = sin(qJ(2,2));
t1940 = cos(qJ(2,2));
t2174 = m(3) * t1930;
t2211 = t1931 * (t1849 * t2174 - t1918 * t2182 + (t1822 * t1930 + t1837) * t1939 + t2194) - (t1986 - t1753) * t1940;
t1933 = sin(qJ(3,1));
t1942 = cos(qJ(3,1));
t1754 = -t1838 * t1942 - t1933 * t1839;
t1920 = t1942 ^ 2;
t1934 = sin(qJ(2,1));
t1943 = cos(qJ(2,1));
t2173 = m(3) * t1933;
t2210 = t1934 * (t1849 * t2173 - t1920 * t2182 + (t1822 * t1933 + t1837) * t1942 + t2194) - (t1986 - t1754) * t1943;
t1786 = t1822 * t1920;
t2054 = rSges(3,2) * t2173;
t2209 = t2054 * t2213 + t1786;
t1785 = t1822 * t1918;
t2055 = rSges(3,2) * t2174;
t2208 = t2055 * t2213 + t1785;
t1784 = t1822 * t1916;
t2056 = rSges(3,2) * t2175;
t2207 = t2056 * t2213 + t1784;
t1904 = t1936 * pkin(3);
t1858 = t1904 + pkin(2);
t2203 = t1858 * t1928;
t1906 = t1939 * pkin(3);
t1860 = t1906 + pkin(2);
t2202 = t1860 * t1931;
t1908 = t1942 * pkin(3);
t1862 = t1908 + pkin(2);
t2201 = t1862 * t1934;
t2070 = m(3) * t2179;
t1898 = 2 * t2070;
t2098 = t1875 * t1927;
t2053 = 0.2e1 * t2098;
t2197 = (-t2053 + t1898) * t1936 + t2207;
t2097 = t1875 * t1930;
t2052 = 0.2e1 * t2097;
t2196 = (-t2052 + t1898) * t1939 + t2208;
t2096 = t1875 * t1933;
t2051 = 0.2e1 * t2096;
t2195 = (-t2051 + t1898) * t1942 + t2209;
t1956 = rSges(2,2) ^ 2;
t1958 = rSges(2,1) ^ 2;
t1962 = pkin(2) ^ 2;
t2065 = t1955 + t1962;
t2154 = (Icges(3,1) + Icges(2,3));
t2006 = (t1945 ^ 2 + t2065) * m(3) + (t1956 + t1958) * m(2) + t2154;
t1722 = t2006 + t2197;
t1723 = t2006 + t2196;
t1724 = t2006 + t2195;
t2181 = m(2) * rSges(2,2);
t1987 = -rSges(2,1) * t2181 + pkin(2) * t2172 + Icges(2,4);
t2155 = (Icges(2,1) + Icges(3,2));
t1981 = (t1955 - (pkin(2) + t1945) * (-pkin(2) + t1945)) * m(3) + (-t1956 + t1958) * m(2) + Icges(2,2) + Icges(3,3) - t2155;
t2184 = 2 * m(3);
t2183 = -2 * pkin(1);
t1952 = (pkin(8) + pkin(7));
t2180 = m(3) * rSges(3,1);
t1923 = cos(pkin(4));
t2171 = pkin(1) * t1923;
t2170 = pkin(1) * t1928;
t2169 = pkin(1) * t1931;
t2168 = pkin(1) * t1934;
t2167 = pkin(2) * t1923;
t2166 = pkin(2) * t1927;
t2165 = pkin(2) * t1930;
t2164 = pkin(2) * t1933;
t2163 = pkin(3) * t1916;
t2162 = pkin(3) * t1918;
t2161 = pkin(3) * t1920;
t1901 = t1927 * pkin(3);
t1902 = t1930 * pkin(3);
t1903 = t1933 * pkin(3);
t1905 = t1937 * pkin(2);
t1907 = t1940 * pkin(2);
t1909 = t1943 * pkin(2);
t1913 = t1923 ^ 2;
t2157 = (t1913 - 0.1e1) * pkin(6);
t2156 = pkin(3) * t2213;
t2153 = 2 * t2180;
t1915 = pkin(2) - t1952;
t1914 = pkin(2) + t1952;
t1852 = t1901 + pkin(6);
t2082 = t1923 * t1928;
t1922 = sin(pkin(4));
t2101 = t1858 * t1922;
t2110 = (t1904 + t1914) * (t1904 + t1915);
t1728 = -t1852 * t2101 + t2082 * t2110;
t1929 = sin(qJ(1,3));
t1938 = cos(qJ(1,3));
t1869 = t1952 * t1928;
t2113 = (pkin(1) + 0.2e1 * t1869) * t1858;
t1716 = -t1728 * t1929 + t1938 * t2113;
t1719 = t1728 * t1938 + t1929 * t2113;
t2092 = t1922 * t1928;
t1749 = -t1852 * t2092 + t1858 * t1923;
t1844 = t2170 + t1952;
t1731 = -t1749 * t1929 + t1844 * t1938;
t1734 = t1749 * t1938 + t1844 * t1929;
t2074 = t1923 * t1952;
t2029 = t1858 * t2074;
t1737 = 0.2e1 * t1929 * t2029 + t1938 * t2110;
t1924 = legFrame(3,3);
t1886 = sin(t1924);
t1889 = cos(t1924);
t1917 = t1937 ^ 2;
t1996 = t1938 * t2029;
t2020 = t1929 * t2110;
t1671 = (t1737 * t1889 + 0.2e1 * (t1996 - t2020 / 0.2e1) * t1886) * t1917 + (t1716 * t1889 - t1719 * t1886) * t1937 + (t1731 * t1889 - t1886 * t1734) * t1952;
t1779 = -pkin(6) * t1922 * t1952 - pkin(1) * t2167;
t1840 = pkin(1) * t2074;
t1853 = t1901 - pkin(6);
t2059 = pkin(6) * t2163;
t2060 = pkin(3) * t2171;
t2073 = t1936 * t1937;
t1701 = 0.1e1 / (t1840 * t2073 + (t1779 * t1936 - t1916 * t2060) * t1928 + ((pkin(2) * t1853 * t1936 - t2059) * t1937 + (pkin(1) * t1858 + pkin(2) * t1869 + t1962 * t1937) * t1927) * t1922);
t2152 = t1671 * t1701;
t1854 = t1902 + pkin(6);
t2080 = t1923 * t1931;
t2100 = t1860 * t1922;
t2109 = (t1906 + t1914) * (t1906 + t1915);
t1729 = -t1854 * t2100 + t2080 * t2109;
t1932 = sin(qJ(1,2));
t1941 = cos(qJ(1,2));
t1870 = t1952 * t1931;
t2112 = (pkin(1) + 0.2e1 * t1870) * t1860;
t1717 = -t1729 * t1932 + t1941 * t2112;
t1720 = t1729 * t1941 + t1932 * t2112;
t2090 = t1922 * t1931;
t1750 = -t1854 * t2090 + t1860 * t1923;
t1845 = t2169 + t1952;
t1732 = -t1750 * t1932 + t1845 * t1941;
t1735 = t1750 * t1941 + t1845 * t1932;
t2028 = t1860 * t2074;
t1738 = 0.2e1 * t1932 * t2028 + t1941 * t2109;
t1925 = legFrame(2,3);
t1887 = sin(t1925);
t1890 = cos(t1925);
t1919 = t1940 ^ 2;
t1995 = t1941 * t2028;
t2017 = t1932 * t2109;
t1672 = (t1738 * t1890 + 0.2e1 * (t1995 - t2017 / 0.2e1) * t1887) * t1919 + (t1717 * t1890 - t1720 * t1887) * t1940 + (t1732 * t1890 - t1735 * t1887) * t1952;
t1855 = t1902 - pkin(6);
t2058 = pkin(6) * t2162;
t2072 = t1939 * t1940;
t1702 = 0.1e1 / (t1840 * t2072 + (t1779 * t1939 - t1918 * t2060) * t1931 + ((pkin(2) * t1855 * t1939 - t2058) * t1940 + (pkin(1) * t1860 + pkin(2) * t1870 + t1962 * t1940) * t1930) * t1922);
t2151 = t1672 * t1702;
t1856 = t1903 + pkin(6);
t2078 = t1923 * t1934;
t2099 = t1862 * t1922;
t2108 = (t1908 + t1914) * (t1908 + t1915);
t1730 = -t1856 * t2099 + t2078 * t2108;
t1935 = sin(qJ(1,1));
t1944 = cos(qJ(1,1));
t1871 = t1952 * t1934;
t2111 = (pkin(1) + 0.2e1 * t1871) * t1862;
t1718 = -t1730 * t1935 + t1944 * t2111;
t1721 = t1730 * t1944 + t1935 * t2111;
t2088 = t1922 * t1934;
t1751 = -t1856 * t2088 + t1862 * t1923;
t1846 = t2168 + t1952;
t1733 = -t1751 * t1935 + t1846 * t1944;
t1736 = t1751 * t1944 + t1846 * t1935;
t2027 = t1862 * t2074;
t1739 = 0.2e1 * t1935 * t2027 + t1944 * t2108;
t1926 = legFrame(1,3);
t1888 = sin(t1926);
t1891 = cos(t1926);
t1921 = t1943 ^ 2;
t1994 = t1944 * t2027;
t2015 = t1935 * t2108;
t1673 = (t1739 * t1891 + 0.2e1 * (t1994 - t2015 / 0.2e1) * t1888) * t1921 + (t1718 * t1891 - t1721 * t1888) * t1943 + (t1733 * t1891 - t1736 * t1888) * t1952;
t1857 = t1903 - pkin(6);
t2057 = pkin(6) * t2161;
t2071 = t1942 * t1943;
t1703 = 0.1e1 / (t1840 * t2071 + (t1779 * t1942 - t1920 * t2060) * t1934 + ((pkin(2) * t1857 * t1942 - t2057) * t1943 + (pkin(1) * t1862 + pkin(2) * t1871 + t1962 * t1943) * t1933) * t1922);
t2150 = t1673 * t1703;
t1674 = ((-0.2e1 * t1996 + t2020) * t1889 + t1737 * t1886) * t1917 + (t1716 * t1886 + t1719 * t1889) * t1937 + (t1731 * t1886 + t1734 * t1889) * t1952;
t2149 = t1674 * t1701;
t1675 = ((-0.2e1 * t1995 + t2017) * t1890 + t1738 * t1887) * t1919 + (t1717 * t1887 + t1720 * t1890) * t1940 + (t1732 * t1887 + t1735 * t1890) * t1952;
t2148 = t1675 * t1702;
t1676 = ((-0.2e1 * t1994 + t2015) * t1891 + t1739 * t1888) * t1921 + (t1718 * t1888 + t1721 * t1891) * t1943 + (t1733 * t1888 + t1736 * t1891) * t1952;
t2147 = t1676 * t1703;
t1764 = t1886 * t1938 + t1889 * t1929;
t1765 = -t1886 * t1929 + t1889 * t1938;
t1872 = t1952 * t1937;
t1776 = pkin(2) * t1917 + t1928 * t1872 - pkin(2);
t1806 = -pkin(2) * t1928 + t1872;
t1882 = t1917 - 0.2e1;
t2040 = pkin(6) * t1927 + pkin(3);
t2094 = t1922 * t1923;
t1966 = ((t1882 * t1901 - pkin(6)) * t1936 + t1927 * t1776) * t2094 - (t1806 * t1936 + (t2040 - 0.2e1 * t2163) * t1928) * t1913 - t1928 * (-t2040 + t2163);
t1803 = t1905 + t1869;
t1789 = pkin(1) + t1803;
t1859 = t1905 + pkin(1);
t2077 = t1923 * t1936;
t2093 = t1922 * t1927;
t1973 = -(t1859 * t1928 + t1952 + (t1928 * t1904 - t1872) * t1937) * t2093 + (pkin(3) * t2073 + t1789) * t2077;
t1677 = -t1966 * t1764 + t1973 * t1765;
t1985 = -pkin(6) * t1803 + t1859 * t1901;
t2044 = t1789 * t2166;
t2047 = pkin(1) * t2077;
t1713 = 0.1e1 / ((t1872 - t2203) * t2047 + t1922 * (t1985 * t1936 - t1937 * t2059 + t2044));
t2146 = t1677 * t1713;
t1678 = t1973 * t1764 + t1966 * t1765;
t2145 = t1678 * t1713;
t1766 = t1887 * t1941 + t1890 * t1932;
t1767 = -t1887 * t1932 + t1890 * t1941;
t1873 = t1952 * t1940;
t1777 = pkin(2) * t1919 + t1931 * t1873 - pkin(2);
t1807 = -pkin(2) * t1931 + t1873;
t1883 = t1919 - 0.2e1;
t2039 = pkin(6) * t1930 + pkin(3);
t1965 = ((t1883 * t1902 - pkin(6)) * t1939 + t1930 * t1777) * t2094 - (t1807 * t1939 + (t2039 - 0.2e1 * t2162) * t1931) * t1913 - t1931 * (-t2039 + t2162);
t1804 = t1907 + t1870;
t1790 = pkin(1) + t1804;
t1861 = t1907 + pkin(1);
t2076 = t1923 * t1939;
t2091 = t1922 * t1930;
t1972 = -(t1861 * t1931 + t1952 + (t1931 * t1906 - t1873) * t1940) * t2091 + (pkin(3) * t2072 + t1790) * t2076;
t1679 = -t1965 * t1766 + t1972 * t1767;
t1984 = -pkin(6) * t1804 + t1861 * t1902;
t2043 = t1790 * t2165;
t2046 = pkin(1) * t2076;
t1714 = 0.1e1 / ((t1873 - t2202) * t2046 + t1922 * (t1984 * t1939 - t1940 * t2058 + t2043));
t2144 = t1679 * t1714;
t1680 = t1972 * t1766 + t1965 * t1767;
t2143 = t1680 * t1714;
t1768 = t1888 * t1944 + t1891 * t1935;
t1769 = -t1888 * t1935 + t1891 * t1944;
t1874 = t1952 * t1943;
t1778 = pkin(2) * t1921 + t1934 * t1874 - pkin(2);
t1808 = -pkin(2) * t1934 + t1874;
t1884 = t1921 - 0.2e1;
t2038 = pkin(6) * t1933 + pkin(3);
t1964 = ((t1884 * t1903 - pkin(6)) * t1942 + t1933 * t1778) * t2094 - (t1808 * t1942 + (t2038 - 0.2e1 * t2161) * t1934) * t1913 - t1934 * (-t2038 + t2161);
t1805 = t1909 + t1871;
t1791 = pkin(1) + t1805;
t1863 = t1909 + pkin(1);
t2075 = t1923 * t1942;
t2089 = t1922 * t1933;
t1971 = -(t1863 * t1934 + t1952 + (t1934 * t1908 - t1874) * t1943) * t2089 + (pkin(3) * t2071 + t1791) * t2075;
t1681 = -t1964 * t1768 + t1971 * t1769;
t1983 = -pkin(6) * t1805 + t1863 * t1903;
t2042 = t1791 * t2164;
t2045 = pkin(1) * t2075;
t1715 = 0.1e1 / ((t1874 - t2201) * t2045 + t1922 * (t1983 * t1942 - t1943 * t2057 + t2042));
t2142 = t1681 * t1715;
t1682 = t1971 * t1768 + t1964 * t1769;
t2141 = t1682 * t1715;
t2066 = -m(2) * rSges(2,1) - pkin(2) * m(3);
t1793 = t2056 + t2066;
t1834 = -t2172 + t2181;
t1683 = -t2212 * t1922 + ((-t1834 * t1928 + (t1936 * t2180 - t1793) * t1937) * pkin(1) + t1722) * t1923;
t2140 = t1683 * t1713;
t1794 = t2055 + t2066;
t1684 = -t2211 * t1922 + ((-t1834 * t1931 + (t1939 * t2180 - t1794) * t1940) * pkin(1) + t1723) * t1923;
t2139 = t1684 * t1714;
t1795 = t2054 + t2066;
t1685 = -t2210 * t1922 + ((-t1834 * t1934 + (t1942 * t2180 - t1795) * t1943) * pkin(1) + t1724) * t1923;
t2138 = t1685 * t1715;
t2021 = t1765 * t2093;
t1686 = -(t1764 * t1937 + t1765 * t2082) * t2163 + (pkin(3) * t2021 + (-pkin(2) * t1764 + t1765 * t2074) * t1937 - (t1764 * t1952 + t1765 * t2167) * t1928) * t1936 + pkin(2) * t2021;
t1770 = t1806 * t2171;
t1990 = pkin(1) * t1901 - pkin(6) * t1869;
t2087 = t1922 * t1937;
t1993 = -(pkin(1) * t2082 + pkin(6) * t2087) * t2163 + t1922 * t2044;
t1707 = 0.1e1 / (((t1853 * t1905 + t1990) * t1922 + t1770) * t1936 + t1993);
t2137 = t1686 * t1707;
t2022 = t1764 * t2093;
t1687 = -(-t1764 * t2082 + t1765 * t1937) * t2163 + (-pkin(3) * t2022 + (-pkin(2) * t1765 - t1764 * t2074) * t1937 + (t1764 * t2167 - t1765 * t1952) * t1928) * t1936 - pkin(2) * t2022;
t2136 = t1687 * t1707;
t2018 = t1767 * t2091;
t1688 = -(t1766 * t1940 + t1767 * t2080) * t2162 + (pkin(3) * t2018 + (-pkin(2) * t1766 + t1767 * t2074) * t1940 - (t1766 * t1952 + t1767 * t2167) * t1931) * t1939 + pkin(2) * t2018;
t1771 = t1807 * t2171;
t1989 = pkin(1) * t1902 - pkin(6) * t1870;
t2086 = t1922 * t1940;
t1992 = -(pkin(1) * t2080 + pkin(6) * t2086) * t2162 + t1922 * t2043;
t1708 = 0.1e1 / (((t1855 * t1907 + t1989) * t1922 + t1771) * t1939 + t1992);
t2135 = t1688 * t1708;
t2019 = t1766 * t2091;
t1689 = -(-t1766 * t2080 + t1767 * t1940) * t2162 + (-pkin(3) * t2019 + (-pkin(2) * t1767 - t1766 * t2074) * t1940 + (t1766 * t2167 - t1767 * t1952) * t1931) * t1939 - pkin(2) * t2019;
t2134 = t1689 * t1708;
t2031 = t1769 * t2089;
t1690 = -(t1768 * t1943 + t1769 * t2078) * t2161 + (pkin(3) * t2031 + (-pkin(2) * t1768 + t1769 * t2074) * t1943 - (t1768 * t1952 + t1769 * t2167) * t1934) * t1942 + pkin(2) * t2031;
t1772 = t1808 * t2171;
t1988 = pkin(1) * t1903 - pkin(6) * t1871;
t2085 = t1922 * t1943;
t1991 = -(pkin(1) * t2078 + pkin(6) * t2085) * t2161 + t1922 * t2042;
t1709 = 0.1e1 / (((t1857 * t1909 + t1988) * t1922 + t1772) * t1942 + t1991);
t2133 = t1690 * t1709;
t2016 = t1768 * t2089;
t1691 = -(-t1768 * t2078 + t1769 * t1943) * t2161 + (-pkin(3) * t2016 + (-pkin(2) * t1769 - t1768 * t2074) * t1943 + (t1768 * t2167 - t1769 * t1952) * t1934) * t1942 - pkin(2) * t2016;
t2132 = t1691 * t1709;
t1910 = pkin(1) * t1952;
t1960 = pkin(3) ^ 2;
t2026 = t1922 * t2074;
t2050 = -0.2e1 * (t1923 + 0.1e1) * (t1923 - 0.1e1);
t2095 = t1914 * t1915;
t2131 = (t1910 * t1937 + (-t1852 * t1923 * t2087 - t1844 + (t1917 * t2050 + t1913) * t1952) * t1858 + ((t1913 * t2110 - t1916 * t1960 + t1936 * t2156 - t2095) * t1937 - t1852 * t2026) * t1928) / ((t1936 * t1840 - (pkin(6) * t1936 - t2166) * t2101) * t1937 - t2047 * t2203 + (t1990 * t1936 + (t1869 + pkin(1)) * t2166) * t1922);
t2130 = (t1910 * t1940 + (-t1854 * t1923 * t2086 - t1845 + (t1919 * t2050 + t1913) * t1952) * t1860 + ((t1913 * t2109 - t1918 * t1960 + t1939 * t2156 - t2095) * t1940 - t1854 * t2026) * t1931) / ((t1840 * t1939 - (pkin(6) * t1939 - t2165) * t2100) * t1940 - t2046 * t2202 + (t1989 * t1939 + (t1870 + pkin(1)) * t2165) * t1922);
t2129 = (t1910 * t1943 + (-t1856 * t1923 * t2085 - t1846 + (t1921 * t2050 + t1913) * t1952) * t1862 + ((t1913 * t2108 - t1920 * t1960 + t1942 * t2156 - t2095) * t1943 - t1856 * t2026) * t1934) / ((t1840 * t1942 - (pkin(6) * t1942 - t2164) * t2099) * t1943 - t2045 * t2201 + (t1988 * t1942 + (t1871 + pkin(1)) * t2164) * t1922);
t2025 = t1922 * t2082;
t2128 = ((-t1806 * t2094 + t2157) * t1936 + (-pkin(6) * t2025 - t1776 * t1913 + t1789 * t1937) * t1927 + (-(t1882 * t1913 - t1917 + 0.1e1) * t1927 * t1936 + (0.2e1 * t1916 - 0.1e1) * t2025) * pkin(3)) / ((t1922 * t1985 + t1770) * t1936 + t1993);
t2024 = t1922 * t2080;
t2127 = ((-t1807 * t2094 + t2157) * t1939 + (-pkin(6) * t2024 - t1777 * t1913 + t1790 * t1940) * t1930 + (-(t1883 * t1913 - t1919 + 0.1e1) * t1930 * t1939 + (0.2e1 * t1918 - 0.1e1) * t2024) * pkin(3)) / ((t1922 * t1984 + t1771) * t1939 + t1992);
t2023 = t1922 * t2078;
t2126 = ((-t1808 * t2094 + t2157) * t1942 + (-pkin(6) * t2023 - t1778 * t1913 + t1791 * t1943) * t1933 + (-(t1884 * t1913 - t1921 + 0.1e1) * t1933 * t1942 + (0.2e1 * t1920 - 0.1e1) * t2023) * pkin(3)) / ((t1922 * t1983 + t1772) * t1942 + t1991);
t1827 = (t1955 + t1957) * m(3) + Icges(3,3);
t1848 = t1949 + t2179;
t1851 = t1950 - t2178;
t1947 = pkin(1) * rSges(3,2);
t1948 = pkin(1) * rSges(3,1);
t2104 = t1839 * t1928;
t1698 = ((-t2104 - m(3) * (t1848 * t1937 + t1948)) * t1936 + (t1838 * t1928 + m(3) * (t1851 * t1937 + t1947)) * t1927 - t1827 * t1937) * t1922 - t1923 * (-t1927 * Icges(3,5) - Icges(3,6) * t1936 + (rSges(3,1) * t1927 + rSges(3,2) * t1936) * m(3) * (t1945 + t2170));
t2125 = t1698 * t1707;
t2103 = t1839 * t1931;
t1699 = ((-t2103 - m(3) * (t1848 * t1940 + t1948)) * t1939 + (t1838 * t1931 + m(3) * (t1851 * t1940 + t1947)) * t1930 - t1827 * t1940) * t1922 - t1923 * (-t1930 * Icges(3,5) - Icges(3,6) * t1939 + (rSges(3,1) * t1930 + rSges(3,2) * t1939) * m(3) * (t1945 + t2169));
t2124 = t1699 * t1708;
t2102 = t1839 * t1934;
t1700 = ((-t2102 - m(3) * (t1848 * t1943 + t1948)) * t1942 + (t1838 * t1934 + m(3) * (t1851 * t1943 + t1947)) * t1933 - t1827 * t1943) * t1922 - t1923 * (-t1933 * Icges(3,5) - Icges(3,6) * t1942 + (rSges(3,1) * t1933 + rSges(3,2) * t1942) * m(3) * (t1945 + t2168));
t2123 = t1700 * t1709;
t2083 = t1923 * t1927;
t2122 = t1707 * (-t2092 * t2163 + (-pkin(3) * t2083 + t1806 * t1922) * t1936 - pkin(2) * t2083);
t2081 = t1923 * t1930;
t2121 = t1708 * (-t2090 * t2162 + (-pkin(3) * t2081 + t1807 * t1922) * t1939 - pkin(2) * t2081);
t2079 = t1923 * t1933;
t2120 = t1709 * (-t2088 * t2161 + (-pkin(3) * t2079 + t1808 * t1922) * t1942 - pkin(2) * t2079);
t2119 = t1713 * t1722;
t2118 = t1713 * t1752;
t2117 = t1714 * t1723;
t2116 = t1714 * t1753;
t2115 = t1715 * t1724;
t2114 = t1715 * t1754;
t2107 = t1838 * t1927;
t2106 = t1838 * t1930;
t2105 = t1838 * t1933;
t1961 = 0.1e1 / pkin(3);
t2084 = t1922 * t1961;
t1959 = pkin(6) ^ 2;
t2064 = pkin(1) ^ 2 + t1959;
t2062 = -2 * t1837;
t2061 = t1834 * t2183;
t2049 = -0.2e1 * t2094;
t2048 = pkin(6) * t2153;
t2037 = t1961 * t2131;
t2036 = t1961 * t2130;
t2035 = t1961 * t2129;
t2034 = t1701 * t2084;
t2033 = t1702 * t2084;
t2032 = t1703 * t2084;
t2030 = t1827 * t2084;
t2011 = 2 * t1987;
t2005 = t1698 * t2034;
t2004 = t1699 * t2033;
t2003 = t1700 * t2032;
t2002 = t1752 * t2034;
t2001 = t1701 * t2030;
t2000 = t1753 * t2033;
t1999 = t1702 * t2030;
t1998 = t1754 * t2032;
t1997 = t1703 * t2030;
t1980 = Icges(1,3) + (pkin(7) ^ 2 + t1957 + (2 * pkin(7) + rSges(3,3)) * rSges(3,3) + t2064) * m(3) + (t1956 + (2 * pkin(6) + rSges(2,3)) * rSges(2,3) + t2064) * m(2) + (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + t2155;
t1970 = -(rSges(2,1) + t1946) * (-rSges(2,1) + t1946) * m(2) + (-t1957 - t1959 + t2065) * m(3) + t2154 - t2155;
t1900 = pkin(1) * t2153;
t1899 = -2 * t2070;
t1897 = t1949 * t2184;
t1826 = t1849 * t2184;
t1796 = 0.2e1 * t1822;
t1670 = (((t2051 + t1899) * t1942 - t1981 - t2209) * t1921 - 0.2e1 * t1934 * (t1839 * t1942 + t1987 - t2105) * t1943 + t1796 * t1920 + (t1826 - 0.4e1 * t2096) * t1942 + t1933 * t2062 + t1970) * t1913 + t2210 * t2049 + (t1981 + t2195) * t1921 + ((t1900 + 0.2e1 * t2102) * t1942 + (t2011 - 0.2e1 * t2105) * t1934 + t1795 * t2183) * t1943 - t1786 + (t2051 + t1897) * t1942 + t1934 * t2061 + t1933 * t2048 + t1980;
t1669 = (((t2052 + t1899) * t1939 - t1981 - t2208) * t1919 - 0.2e1 * t1931 * (t1839 * t1939 + t1987 - t2106) * t1940 + t1796 * t1918 + (t1826 - 0.4e1 * t2097) * t1939 + t1930 * t2062 + t1970) * t1913 + t2211 * t2049 + (t1981 + t2196) * t1919 + ((t1900 + 0.2e1 * t2103) * t1939 + (t2011 - 0.2e1 * t2106) * t1931 + t1794 * t2183) * t1940 - t1785 + (t2052 + t1897) * t1939 + t1931 * t2061 + t1930 * t2048 + t1980;
t1668 = (((t2053 + t1899) * t1936 - t1981 - t2207) * t1917 - 0.2e1 * t1928 * (t1839 * t1936 + t1987 - t2107) * t1937 + t1796 * t1916 + (t1826 - 0.4e1 * t2098) * t1936 + t1927 * t2062 + t1970) * t1913 + t2212 * t2049 + (t1981 + t2197) * t1917 + ((t1900 + 0.2e1 * t2104) * t1936 + (t2011 - 0.2e1 * t2107) * t1928 + t1793 * t2183) * t1937 - t1784 + (t2053 + t1897) * t1936 + t1928 * t2061 + t1927 * t2048 + t1980;
t1667 = t1700 * t2120 + t1754 * t2126 + t1827 * t2035;
t1666 = t1699 * t2121 + t1753 * t2127 + t1827 * t2036;
t1665 = t1698 * t2122 + t1752 * t2128 + t1827 * t2037;
t1664 = t1685 * t2120 + t1724 * t2126 + t1754 * t2035;
t1663 = t1684 * t2121 + t1723 * t2127 + t1753 * t2036;
t1662 = t1683 * t2122 + t1722 * t2128 + t1752 * t2037;
t1661 = -t1676 * t1997 + t1682 * t2114 + t1690 * t2123;
t1660 = -t1675 * t1999 + t1680 * t2116 + t1688 * t2124;
t1659 = -t1674 * t2001 + t1678 * t2118 + t1686 * t2125;
t1658 = -t1673 * t1997 + t1681 * t2114 + t1691 * t2123;
t1657 = -t1672 * t1999 + t1679 * t2116 + t1689 * t2124;
t1656 = -t1671 * t2001 + t1677 * t2118 + t1687 * t2125;
t1655 = -t1676 * t1998 + t1682 * t2115 + t1685 * t2133;
t1654 = -t1675 * t2000 + t1680 * t2117 + t1684 * t2135;
t1653 = -t1674 * t2002 + t1678 * t2119 + t1683 * t2137;
t1652 = -t1673 * t1998 + t1681 * t2115 + t1685 * t2132;
t1651 = -t1672 * t2000 + t1679 * t2117 + t1684 * t2134;
t1650 = -t1671 * t2002 + t1677 * t2119 + t1683 * t2136;
t1649 = t1670 * t2120 + t1685 * t2126 + t1700 * t2035;
t1648 = t1669 * t2121 + t1684 * t2127 + t1699 * t2036;
t1647 = t1668 * t2122 + t1683 * t2128 + t1698 * t2037;
t1646 = t1670 * t2133 - t1676 * t2003 + t1682 * t2138;
t1645 = t1669 * t2135 - t1675 * t2004 + t1680 * t2139;
t1644 = t1668 * t2137 - t1674 * t2005 + t1678 * t2140;
t1643 = t1670 * t2132 - t1673 * t2003 + t1681 * t2138;
t1642 = t1669 * t2134 - t1672 * t2004 + t1679 * t2139;
t1641 = t1668 * t2136 - t1671 * t2005 + t1677 * t2140;
t1 = [t1641 * t2136 + t1642 * t2134 + t1643 * t2132 + t1650 * t2146 + t1651 * t2144 + t1652 * t2142 + m(4) + (-t1656 * t2152 - t1657 * t2151 - t1658 * t2150) * t2084, t1641 * t2137 + t1642 * t2135 + t1643 * t2133 + t1650 * t2145 + t1651 * t2143 + t1652 * t2141 + (-t1656 * t2149 - t1657 * t2148 - t1658 * t2147) * t2084, t1641 * t2122 + t1642 * t2121 + t1643 * t2120 + t1650 * t2128 + t1651 * t2127 + t1652 * t2126 + (t1656 * t2131 + t1657 * t2130 + t1658 * t2129) * t1961; t1644 * t2136 + t1645 * t2134 + t1646 * t2132 + t1653 * t2146 + t1654 * t2144 + t1655 * t2142 + (-t1659 * t2152 - t1660 * t2151 - t1661 * t2150) * t2084, t1644 * t2137 + t1645 * t2135 + t1646 * t2133 + t1653 * t2145 + t1654 * t2143 + t1655 * t2141 + m(4) + (-t1659 * t2149 - t1660 * t2148 - t1661 * t2147) * t2084, t1644 * t2122 + t1645 * t2121 + t1646 * t2120 + t1653 * t2128 + t1654 * t2127 + t1655 * t2126 + (t1659 * t2131 + t1660 * t2130 + t1661 * t2129) * t1961; t1647 * t2136 + t1648 * t2134 + t1649 * t2132 + t1662 * t2146 + t1663 * t2144 + t1664 * t2142 + (-t1665 * t2152 - t1666 * t2151 - t1667 * t2150) * t2084, t1647 * t2137 + t1648 * t2135 + t1649 * t2133 + t1662 * t2145 + t1663 * t2143 + t1664 * t2141 + (-t1665 * t2149 - t1666 * t2148 - t1667 * t2147) * t2084, t1647 * t2122 + t1648 * t2121 + t1649 * t2120 + t1662 * t2128 + t1663 * t2127 + t1664 * t2126 + m(4) + (t1665 * t2131 + t1666 * t2130 + t1667 * t2129) * t1961;];
MX  = t1;
