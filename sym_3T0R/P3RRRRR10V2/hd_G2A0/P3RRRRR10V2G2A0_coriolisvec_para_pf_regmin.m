% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P3RRRRR10V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3x18]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 02:06
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 01:27:50
% EndTime: 2020-08-07 01:39:33
% DurationCPUTime: 757.27s
% Computational Cost: add. (9487845->2627), mult. (18655686->4270), div. (125172->38), fcn. (14243331->26), ass. (0->1575)
t3988 = sin(qJ(2,3));
t3989 = sin(qJ(1,3));
t3998 = cos(qJ(1,3));
t4005 = xDP(3);
t3984 = legFrame(3,2);
t3903 = sin(t3984);
t4006 = xDP(2);
t3906 = cos(t3984);
t4007 = xDP(1);
t4906 = t3906 * t4007;
t4170 = -t3903 * t4006 + t4906;
t3715 = t3989 * t4170 + t3998 * t4005;
t4841 = t3989 * t4005;
t3718 = t3998 * t4170 - t4841;
t4915 = t3903 * t4007;
t3739 = t3906 * t4006 + t4915;
t3927 = pkin(1) * t3988;
t3862 = t3927 + pkin(7);
t3830 = pkin(8) + t3862;
t4008 = pkin(8) + pkin(7);
t3942 = pkin(1) * t4008;
t3836 = t4006 * t3942;
t3837 = t4007 * t3942;
t3987 = sin(qJ(3,3));
t3909 = t3987 * pkin(3);
t3845 = t3909 + pkin(6);
t3973 = cos(pkin(4));
t3949 = t3973 ^ 2;
t3997 = cos(qJ(2,3));
t3958 = t3997 ^ 2;
t3972 = sin(pkin(4));
t3996 = cos(qJ(3,3));
t3913 = t3996 * pkin(3);
t5154 = t3913 + pkin(2);
t4269 = t5154 * t4006;
t4918 = (t3973 + 0.1e1) * (t3973 - 0.1e1);
t4556 = t4008 * t4918;
t4309 = t5154 * t4556;
t3950 = pkin(2) + t4008;
t3951 = pkin(2) - t4008;
t4957 = (t3913 + t3950) * (t3913 + t3951);
t4571 = t3988 * t4957;
t4852 = t3973 * t4008;
t4580 = t3718 * t4852;
t4872 = t3972 * t4008;
t4891 = t3972 * t3973;
t4896 = t3949 * t4008;
t4938 = t3845 * t3988;
t4009 = 0.2e1 * t4008;
t4844 = t3988 * t4009;
t3825 = pkin(1) + t4844;
t4951 = t3825 * t5154;
t4963 = t3739 * t5154;
t4969 = t3718 * t3973;
t5084 = t3949 - 0.1e1;
t3604 = ((-t3715 * t4957 + 0.2e1 * t4580 * t5154) * t3972 - 0.2e1 * t3739 * t4309) * t3958 + ((-t3715 * t4951 - t4571 * t4969) * t3972 + t3836 * t3906 + t3837 * t3903 + t5084 * t3739 * t4571 + ((-t3718 * t3949 - t3739 * t4891 - t4841) * t5154 + (-t3903 * t4269 + t4906 * t5154) * t3998) * t3845) * t3997 - ((t3718 * t5154 + t3739 * t4938) * t3973 + t3715 * t3830) * t4872 - (t3718 * t4938 - t4963) * t4896 + (t3718 * t4008 * t3845 + (-t3906 * t4269 - t4915 * t5154) * pkin(1)) * t3988 - t4008 * t4963;
t5051 = pkin(6) * t3996;
t5067 = pkin(2) * t3987;
t3800 = t5051 - t5067;
t4847 = t3988 * t3996;
t4514 = t3973 * t4847;
t4931 = t5154 * t3972;
t3829 = pkin(1) * t4852;
t4945 = t3829 * t3996;
t5073 = pkin(1) * t5154;
t4116 = -t4514 * t5073 + (-t3800 * t4931 + t4945) * t3997;
t4803 = t4008 * t3988;
t3700 = (-t3800 * t4803 + t3987 * t5073) * t3972 + t4116;
t3691 = 0.1e1 / t3700;
t4028 = 0.1e1 / pkin(3);
t4972 = t3691 * t4028;
t3596 = t3604 * t4972;
t3589 = pkin(6) * t3596;
t3712 = t3997 * t3715;
t4846 = t3988 * t3997;
t4718 = pkin(2) * t4846;
t4140 = t3958 * t4008 - t4718;
t3733 = -t4140 + t3830;
t3924 = pkin(2) * t3997;
t4767 = t4803 + t3924;
t3788 = pkin(1) + t4767;
t3877 = t4008 * t3997;
t5066 = pkin(2) * t3988;
t3793 = t3877 - t5066;
t3956 = t3996 ^ 2;
t3844 = pkin(6) * t3987 + pkin(3);
t5055 = pkin(3) * t3956;
t4755 = 0.2e1 * t5055;
t5061 = pkin(2) * t3996;
t4044 = t3988 * (-t3844 + t4755 + t5061) - t3996 * t3877;
t3897 = t3958 - 0.2e1;
t3811 = t3988 * t3877;
t3914 = t3958 * pkin(2);
t4770 = t3811 + t3914;
t5155 = -pkin(2) + t4770;
t4068 = t3897 * t3913 + t5155;
t3822 = t4803 + pkin(1);
t4244 = t3822 * t3997 + t3914;
t4525 = t3972 * t4846;
t4889 = t3972 * t3988;
t4577 = t3739 * t4889;
t4968 = t3718 * t3988;
t4691 = pkin(3) * t4968;
t4890 = t3972 * t3987;
t4899 = (t3997 + 0.1e1) * (t3997 - 0.1e1);
t3562 = ((-t3987 * t4068 + t5051) * t3739 + t4044 * t3718) * t3949 + ((-pkin(6) * t3739 * t3988 + t3718 * t4068) * t4890 + (t3712 + 0.2e1 * t4577) * t5055 + ((-pkin(6) * t3718 - t3739 * t3793) * t3972 + t3715 * t3788) * t3996 - pkin(3) * t4577) * t3973 + (pkin(6) * t4968 + (-t3733 * t3972 - t4525 * t3913) * t3715 + (t4899 * t3913 + t4244) * t3739) * t3987 - t3956 * t4691 - t3739 * t5051 + t4691;
t4858 = t3973 * t3996;
t3721 = (-t3988 * t5154 + t3877) * pkin(1) * t4858;
t4815 = t3996 * t3997;
t5151 = t3924 + pkin(1);
t3688 = t3721 + t3972 * ((pkin(2) * t3788 + t3913 * t5151) * t3987 - (pkin(3) * t4815 + t4767) * t5051);
t3551 = t3562 / t3688;
t4648 = t4008 * t3551;
t4785 = -t4648 + t3589;
t5185 = t3988 * t4785;
t3991 = sin(qJ(2,2));
t3992 = sin(qJ(1,2));
t4001 = cos(qJ(1,2));
t3985 = legFrame(2,2);
t3904 = sin(t3985);
t3907 = cos(t3985);
t4903 = t3907 * t4007;
t4169 = -t3904 * t4006 + t4903;
t3716 = t3992 * t4169 + t4001 * t4005;
t4829 = t3992 * t4005;
t3719 = t4001 * t4169 - t4829;
t4912 = t3904 * t4007;
t3740 = t3907 * t4006 + t4912;
t3928 = pkin(1) * t3991;
t3863 = t3928 + pkin(7);
t3831 = pkin(8) + t3863;
t3990 = sin(qJ(3,2));
t3910 = t3990 * pkin(3);
t3848 = t3910 + pkin(6);
t4000 = cos(qJ(2,2));
t3962 = t4000 ^ 2;
t3999 = cos(qJ(3,2));
t3916 = t3999 * pkin(3);
t5153 = t3916 + pkin(2);
t4271 = t4006 * t5153;
t4308 = t5153 * t4556;
t4956 = (t3916 + t3950) * (t3916 + t3951);
t4570 = t3991 * t4956;
t4579 = t3719 * t4852;
t4936 = t3848 * t3991;
t4832 = t3991 * t4009;
t3826 = pkin(1) + t4832;
t4949 = t3826 * t5153;
t4962 = t3740 * t5153;
t4967 = t3719 * t3973;
t3605 = ((-t3716 * t4956 + 0.2e1 * t4579 * t5153) * t3972 - 0.2e1 * t3740 * t4308) * t3962 + ((-t3716 * t4949 - t4570 * t4967) * t3972 + t3836 * t3907 + t3837 * t3904 + t5084 * t3740 * t4570 + ((-t3719 * t3949 - t3740 * t4891 - t4829) * t5153 + (-t3904 * t4271 + t4903 * t5153) * t4001) * t3848) * t4000 - ((t3719 * t5153 + t3740 * t4936) * t3973 + t3716 * t3831) * t4872 - (t3719 * t4936 - t4962) * t4896 + (t3719 * t4008 * t3848 + (-t3907 * t4271 - t4912 * t5153) * pkin(1)) * t3991 - t4008 * t4962;
t5049 = pkin(6) * t3999;
t5065 = pkin(2) * t3990;
t3802 = t5049 - t5065;
t4835 = t3991 * t3999;
t4512 = t3973 * t4835;
t4928 = t5153 * t3972;
t4944 = t3829 * t3999;
t5072 = pkin(1) * t5153;
t4115 = -t4512 * t5072 + (-t3802 * t4928 + t4944) * t4000;
t4802 = t4008 * t3991;
t3701 = (-t3802 * t4802 + t3990 * t5072) * t3972 + t4115;
t3693 = 0.1e1 / t3701;
t4971 = t3693 * t4028;
t3598 = t3605 * t4971;
t3590 = pkin(6) * t3598;
t3713 = t4000 * t3716;
t4834 = t3991 * t4000;
t4717 = pkin(2) * t4834;
t4139 = t3962 * t4008 - t4717;
t3734 = -t4139 + t3831;
t3925 = pkin(2) * t4000;
t4766 = t4802 + t3925;
t3789 = pkin(1) + t4766;
t3878 = t4008 * t4000;
t5064 = pkin(2) * t3991;
t3794 = t3878 - t5064;
t3960 = t3999 ^ 2;
t3847 = pkin(6) * t3990 + pkin(3);
t5054 = pkin(3) * t3960;
t4754 = 0.2e1 * t5054;
t5059 = pkin(2) * t3999;
t4043 = t3991 * (-t3847 + t4754 + t5059) - t3999 * t3878;
t3898 = t3962 - 0.2e1;
t3812 = t3991 * t3878;
t3917 = t3962 * pkin(2);
t4769 = t3812 + t3917;
t5156 = -pkin(2) + t4769;
t4067 = t3898 * t3916 + t5156;
t3823 = t4802 + pkin(1);
t4243 = t3823 * t4000 + t3917;
t4521 = t3972 * t4834;
t4886 = t3972 * t3991;
t4576 = t3740 * t4886;
t4966 = t3719 * t3991;
t4690 = pkin(3) * t4966;
t4887 = t3972 * t3990;
t4898 = (t4000 + 0.1e1) * (t4000 - 0.1e1);
t3563 = ((-t3990 * t4067 + t5049) * t3740 + t4043 * t3719) * t3949 + ((-pkin(6) * t3740 * t3991 + t3719 * t4067) * t4887 + (t3713 + 0.2e1 * t4576) * t5054 + ((-pkin(6) * t3719 - t3740 * t3794) * t3972 + t3716 * t3789) * t3999 - pkin(3) * t4576) * t3973 + (pkin(6) * t4966 + (-t3734 * t3972 - t4521 * t3916) * t3716 + (t4898 * t3916 + t4243) * t3740) * t3990 - t3960 * t4690 - t3740 * t5049 + t4690;
t4856 = t3973 * t3999;
t3722 = (-t3991 * t5153 + t3878) * pkin(1) * t4856;
t4811 = t3999 * t4000;
t5150 = t3925 + pkin(1);
t3689 = t3722 + ((pkin(2) * t3789 + t3916 * t5150) * t3990 - (pkin(3) * t4811 + t4766) * t5049) * t3972;
t3553 = t3563 / t3689;
t4641 = t4008 * t3553;
t4784 = -t4641 + t3590;
t5184 = t3991 * t4784;
t3994 = sin(qJ(2,1));
t3995 = sin(qJ(1,1));
t4004 = cos(qJ(1,1));
t3986 = legFrame(1,2);
t3905 = sin(t3986);
t3908 = cos(t3986);
t4900 = t3908 * t4007;
t4168 = -t3905 * t4006 + t4900;
t3717 = t3995 * t4168 + t4004 * t4005;
t4817 = t3995 * t4005;
t3720 = t4004 * t4168 - t4817;
t4909 = t3905 * t4007;
t3741 = t3908 * t4006 + t4909;
t3929 = pkin(1) * t3994;
t3864 = t3929 + pkin(7);
t3832 = pkin(8) + t3864;
t3993 = sin(qJ(3,1));
t3911 = t3993 * pkin(3);
t3851 = t3911 + pkin(6);
t4003 = cos(qJ(2,1));
t3966 = t4003 ^ 2;
t4002 = cos(qJ(3,1));
t3919 = t4002 * pkin(3);
t5152 = t3919 + pkin(2);
t4270 = t4006 * t5152;
t4307 = t5152 * t4556;
t4955 = (t3919 + t3950) * (t3919 + t3951);
t4569 = t3994 * t4955;
t4578 = t3720 * t4852;
t4934 = t3851 * t3994;
t4820 = t3994 * t4009;
t3827 = pkin(1) + t4820;
t4947 = t3827 * t5152;
t4961 = t3741 * t5152;
t4965 = t3720 * t3973;
t3606 = ((-t3717 * t4955 + 0.2e1 * t4578 * t5152) * t3972 - 0.2e1 * t3741 * t4307) * t3966 + ((-t3717 * t4947 - t4569 * t4965) * t3972 + t3836 * t3908 + t3837 * t3905 + t5084 * t3741 * t4569 + ((-t3720 * t3949 - t3741 * t4891 - t4817) * t5152 + (-t3905 * t4270 + t4900 * t5152) * t4004) * t3851) * t4003 - ((t3720 * t5152 + t3741 * t4934) * t3973 + t3717 * t3832) * t4872 - (t3720 * t4934 - t4961) * t4896 + (t3720 * t4008 * t3851 + (-t3908 * t4270 - t4909 * t5152) * pkin(1)) * t3994 - t4008 * t4961;
t5047 = pkin(6) * t4002;
t5063 = pkin(2) * t3993;
t3804 = t5047 - t5063;
t4823 = t3994 * t4002;
t4510 = t3973 * t4823;
t4925 = t5152 * t3972;
t4943 = t3829 * t4002;
t5071 = pkin(1) * t5152;
t4114 = -t4510 * t5071 + (-t3804 * t4925 + t4943) * t4003;
t4801 = t4008 * t3994;
t3702 = (-t3804 * t4801 + t3993 * t5071) * t3972 + t4114;
t3695 = 0.1e1 / t3702;
t4970 = t3695 * t4028;
t3600 = t3606 * t4970;
t3591 = pkin(6) * t3600;
t3714 = t4003 * t3717;
t4822 = t3994 * t4003;
t4716 = pkin(2) * t4822;
t4138 = t3966 * t4008 - t4716;
t3735 = -t4138 + t3832;
t3926 = pkin(2) * t4003;
t4765 = t4801 + t3926;
t3790 = pkin(1) + t4765;
t3879 = t4008 * t4003;
t5062 = pkin(2) * t3994;
t3795 = t3879 - t5062;
t3964 = t4002 ^ 2;
t3850 = pkin(6) * t3993 + pkin(3);
t5053 = pkin(3) * t3964;
t4753 = 0.2e1 * t5053;
t5057 = pkin(2) * t4002;
t4042 = t3994 * (-t3850 + t4753 + t5057) - t4002 * t3879;
t3899 = t3966 - 0.2e1;
t3813 = t3994 * t3879;
t3920 = t3966 * pkin(2);
t4768 = t3813 + t3920;
t5157 = -pkin(2) + t4768;
t4066 = t3899 * t3919 + t5157;
t3824 = t4801 + pkin(1);
t4242 = t3824 * t4003 + t3920;
t4517 = t3972 * t4822;
t4883 = t3972 * t3994;
t4575 = t3741 * t4883;
t4964 = t3720 * t3994;
t4689 = pkin(3) * t4964;
t4884 = t3972 * t3993;
t4897 = (t4003 + 0.1e1) * (t4003 - 0.1e1);
t3564 = ((-t3993 * t4066 + t5047) * t3741 + t4042 * t3720) * t3949 + ((-pkin(6) * t3741 * t3994 + t3720 * t4066) * t4884 + (t3714 + 0.2e1 * t4575) * t5053 + ((-pkin(6) * t3720 - t3741 * t3795) * t3972 + t3790 * t3717) * t4002 - pkin(3) * t4575) * t3973 + (pkin(6) * t4964 + (-t3735 * t3972 - t4517 * t3919) * t3717 + (t4897 * t3919 + t4242) * t3741) * t3993 - t3964 * t4689 - t3741 * t5047 + t4689;
t4854 = t3973 * t4002;
t3723 = (-t3994 * t5152 + t3879) * pkin(1) * t4854;
t4807 = t4002 * t4003;
t5149 = t3926 + pkin(1);
t3690 = t3723 + ((pkin(2) * t3790 + t3919 * t5149) * t3993 - (pkin(3) * t4807 + t4765) * t5047) * t3972;
t3555 = t3564 / t3690;
t4633 = t4008 * t3555;
t4783 = -t4633 + t3591;
t5183 = t3994 * t4783;
t4746 = 0.2e1 * t3997;
t4745 = 0.2e1 * t4000;
t4744 = 0.2e1 * t4003;
t5082 = 0.2e1 * t3956 - 0.1e1;
t5079 = 0.2e1 * t3960 - 0.1e1;
t5076 = 0.2e1 * t3964 - 0.1e1;
t3787 = pkin(1) * t3911 - pkin(6) * t4801;
t3852 = t3911 - pkin(6);
t3732 = t3852 * t3926 + t3787;
t5069 = pkin(1) * t3973;
t3750 = t3795 * t5069;
t3744 = t3790 * t5063;
t4874 = t3972 * t4003;
t4695 = pkin(6) * t4874;
t4860 = t3973 * t3994;
t4729 = pkin(1) * t4860;
t3760 = t4695 + t4729;
t4272 = t3972 * t3744 - t3760 * t5053;
t3670 = (t3732 * t3972 + t3750) * t4002 + t4272;
t3664 = 0.1e1 / t3670;
t4117 = t3972 * t3795;
t4861 = t3973 * t3993;
t4063 = -pkin(3) * t4861 + t4117;
t4713 = pkin(3) * t4884;
t3636 = -(t3714 + (t3741 * t3972 + t4965) * t3994) * t5053 + (t3720 * t4713 + (-pkin(2) * t3717 + t4578) * t4003 + (-pkin(2) * t4965 - t3717 * t4008) * t3994 + t4063 * t3741) * t4002 + (t3720 * t3972 - t3741 * t3973) * t5063;
t4587 = t3636 * t4970;
t4188 = t3664 * t3606 * t4587;
t4919 = t3899 * t3949;
t4432 = -t3966 + t4919;
t5182 = (t4432 + 0.1e1) * t4188;
t3786 = pkin(1) * t3910 - pkin(6) * t4802;
t3849 = t3910 - pkin(6);
t3731 = t3849 * t3925 + t3786;
t3749 = t3794 * t5069;
t3743 = t3789 * t5065;
t4877 = t3972 * t4000;
t4696 = pkin(6) * t4877;
t4863 = t3973 * t3991;
t4730 = pkin(1) * t4863;
t3762 = t4696 + t4730;
t4273 = t3972 * t3743 - t3762 * t5054;
t3672 = (t3731 * t3972 + t3749) * t3999 + t4273;
t3668 = 0.1e1 / t3672;
t4118 = t3972 * t3794;
t4864 = t3973 * t3990;
t4064 = -pkin(3) * t4864 + t4118;
t4714 = pkin(3) * t4887;
t3635 = -(t3713 + (t3740 * t3972 + t4967) * t3991) * t5054 + (t3719 * t4714 + (-pkin(2) * t3716 + t4579) * t4000 + (-pkin(2) * t4967 - t3716 * t4008) * t3991 + t4064 * t3740) * t3999 + (t3719 * t3972 - t3740 * t3973) * t5065;
t4597 = t3635 * t4971;
t4195 = t3668 * t3605 * t4597;
t4920 = t3898 * t3949;
t4433 = -t3962 + t4920;
t5181 = (t4433 + 0.1e1) * t4195;
t3785 = pkin(1) * t3909 - pkin(6) * t4803;
t3846 = t3909 - pkin(6);
t3730 = t3846 * t3924 + t3785;
t3748 = t3793 * t5069;
t3742 = t3788 * t5067;
t4880 = t3972 * t3997;
t4697 = pkin(6) * t4880;
t4866 = t3973 * t3988;
t4731 = pkin(1) * t4866;
t3761 = t4697 + t4731;
t4274 = t3972 * t3742 - t3761 * t5055;
t3671 = (t3730 * t3972 + t3748) * t3996 + t4274;
t3666 = 0.1e1 / t3671;
t4119 = t3972 * t3793;
t4867 = t3973 * t3987;
t4065 = -pkin(3) * t4867 + t4119;
t4715 = pkin(3) * t4890;
t3634 = -(t3712 + (t3739 * t3972 + t4969) * t3988) * t5055 + (t3718 * t4715 + (-pkin(2) * t3715 + t4580) * t3997 + (-pkin(2) * t4969 - t3715 * t4008) * t3988 + t4065 * t3739) * t3996 + (t3718 * t3972 - t3739 * t3973) * t5067;
t4607 = t3634 * t4972;
t4202 = t3666 * t3604 * t4607;
t4921 = t3897 * t3949;
t4434 = -t3958 + t4921;
t5180 = (t4434 + 0.1e1) * t4202;
t3522 = pkin(6) * t4633;
t3542 = pkin(7) * t3555;
t3547 = pkin(8) * t3555;
t5009 = t3606 * t3695;
t4495 = -t5009 / 0.2e1;
t4792 = (t3542 + t3547 - t3591 / 0.2e1) * t3911 + pkin(3) * t4495;
t3351 = t3522 + t4792;
t3432 = t3591 - t3542;
t3402 = t3547 - t3432;
t4624 = t3993 * t5009;
t3423 = t4633 - t4624;
t3546 = pkin(1) * t3555;
t5000 = t3636 * t3664;
t3618 = t3973 * t5000;
t4027 = pkin(3) ^ 2;
t4010 = pkin(8) * pkin(7);
t4024 = pkin(8) ^ 2;
t4025 = pkin(7) ^ 2;
t4760 = t4024 + t4025;
t4490 = 0.2e1 * t4010 + t4760;
t4026 = pkin(6) ^ 2;
t4759 = pkin(1) ^ 2 + t4026;
t4175 = t4490 + t4759;
t3792 = t4027 + t4175;
t4030 = pkin(2) ^ 2;
t3796 = -0.2e1 / 0.3e1 * t4010 - t4024 / 0.3e1 - t4025 / 0.3e1 + t4030;
t4895 = t3950 * t3951;
t3814 = pkin(1) * t4895;
t3815 = t4030 + t4490;
t3835 = pkin(1) * t4801;
t3890 = pkin(6) * t3911;
t3893 = pkin(2) * t3919;
t3918 = t3964 * t4027;
t3943 = t4027 + t4030;
t3944 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t3965 = t4003 * t3966;
t4022 = 0.2e1 * pkin(2);
t3582 = pkin(8) * t3600;
t3594 = pkin(1) * t3600;
t4636 = t3993 * t3555;
t3515 = pkin(3) * t4636;
t3588 = pkin(7) * t3600;
t3543 = pkin(6) * t3555;
t4780 = t3543 + t3582;
t4283 = t3515 + t3588 + t4780;
t4162 = t4283 * t3994;
t4372 = t4895 * t3555;
t4487 = t4030 - t4760;
t4623 = t4008 * t5009;
t5167 = t4162 + t3594;
t4060 = (pkin(6) * t4372 + (((t3591 - 0.2e1 * t3547) * pkin(7) + pkin(6) * t3582) * t3993 + t4623 + t4487 * t4636) * pkin(3)) * t3994 + (t3594 + 0.2e1 * t4162) * t3893 + t5167 * t3918;
t4355 = t3994 * t3600;
t3573 = pkin(1) * t4355;
t3545 = pkin(2) * t3555;
t4413 = t3851 * t3545;
t4090 = (t3573 + t4283) * t3919 + t4413;
t4726 = t3824 * t5063;
t4750 = pkin(6) * t5053;
t4102 = -t4729 * t5053 + (t4943 + (t3852 * t5057 + t3993 * t4030 - t4750) * t3972) * t4003 + t3972 * t4726;
t3969 = -0.2e1 * t4010;
t3982 = t4030 / 0.2e1;
t4488 = -t4026 / 0.2e1 - t4027 / 0.2e1 + t3982;
t4120 = t3969 + t4488 - t4760;
t5129 = 0.3e1 * t4490;
t4121 = t4027 + t4759 + t5129;
t4356 = t3993 * t3600;
t4147 = t4356 * t5069;
t3498 = t3815 * t3555;
t4352 = t3993 * t4623;
t4153 = t3498 - t4352;
t4156 = t3618 * t3832 + t3402;
t4165 = 0.2e1 * t3893 + t3918;
t4174 = t3969 + t4027 + t4487;
t4182 = t3851 * t4307;
t4327 = t3851 * t5152 * t5000;
t4185 = t4008 * t4327;
t4588 = t4008 * t5000;
t4323 = t3972 * t4588;
t4186 = t3994 * t4323;
t4591 = t3994 * t5000;
t4324 = t3972 * t4591;
t4263 = 0.2e1 * t4324;
t5136 = t4024 / 0.2e1 + t4025 / 0.2e1;
t4281 = t3982 + t4010 + t5136;
t4282 = t4030 - t5129;
t4634 = t4002 * t3555;
t4396 = pkin(2) * t4634;
t3510 = pkin(3) * t4396;
t4632 = t4027 * t3555;
t3516 = t3964 * t4632;
t4289 = t3993 * t4495;
t4286 = t3498 / 0.2e1 + t3516 / 0.2e1 + t3510 + t4008 * t4289;
t4317 = t3851 * t4569;
t4326 = t4918 * t5000;
t4357 = t3972 * t3600;
t4388 = t5084 * t5000;
t3948 = t3973 * t3949;
t4391 = 0.2e1 * t3948 - 0.2e1 * t3973;
t4625 = t3964 * t5009;
t4410 = pkin(3) * t4625;
t4428 = t3972 * t3829;
t4494 = 0.3e1 / 0.2e1 * t3796 * t4008;
t4593 = t3972 * t5000;
t4594 = t3966 * t5000;
t4128 = t4028 * (-t4030 / 0.2e1 + t5136);
t4692 = (pkin(7) * t4780 + pkin(8) * t3543 + t4128 * t5009 + t4792) * t3919;
t4719 = pkin(2) * t4860;
t4871 = t3972 * t4028;
t4722 = pkin(2) * t4871;
t4732 = pkin(1) * t4891;
t4738 = 0.2e1 * t4891;
t4786 = 0.2e1 * t3510 + t3516;
t5068 = pkin(2) * t3972;
t5070 = pkin(1) * t3972;
t5100 = 0.2e1 * t3949;
t5103 = 0.2e1 * t3948;
t5104 = 0.2e1 * t3942;
t5130 = t3893 + t3918 - t3890;
t5140 = 0.2e1 * t3890 - t3918;
t5161 = -0.4e1 * t3948;
t3261 = (0.1e1 / ((t3787 * t4002 + t4726) * t3972 + t4114) * ((-(t4282 + t4165) * t3965 * t4326 * t4925 + (t4185 * t5161 + (-0.3e1 * (t3796 + t4165) * t4186 - 0.2e1 * t4692 + (-0.2e1 * t3351 + t4410) * pkin(2)) * t3949 + ((t4352 + t4372 + t4786) * t5070 + 0.4e1 * t4185) * t3973 + 0.2e1 * (t3994 * t4494 + t3814 + t4165 * (t3944 * t3994 + pkin(1))) * t4593 - pkin(2) * t4410 + 0.2e1 * t4692 + t3351 * t4022) * t3966 + (t4060 * t3949 + t5152 * ((t4289 + t4633) * t3929 + t4286) * t4738 + (((t4120 + t5130) * t5100 + 0.4e1 * t3835 + t4121 + t5140) * t4925 + t4317 * t4391) * t5000 - t4060) * t4003 + (t4327 * t5103 + ((t4488 + t5130) * t4263 + t4090) * t3949 + (-0.2e1 * t4327 + t3423 * t5070 + (t3555 * t4165 + t4153) * t4883) * t3973 + (t5104 + (t3792 + t5140) * t3994) * t4593 - t4090) * t4008) * t5000 + ((t4732 * t4955 - 0.2e1 * t4182) * t4594 + (0.2e1 * ((t3918 / 0.2e1 + t3893 + t3835 + t4281) * t3618 + t4286) * t4925 + t4317 * t4326) * t4003 + ((t3942 + (t3815 + t4165) * t3994) * t4008 * t3618 + t3824 * (t4153 + t4786)) * t3972 + t4182 * t5000) * t3555) + ((t3993 * t4428 + ((t3890 + t4174) * t4002 + (t3850 + t5053) * pkin(2)) * t4918) * t4594 + ((pkin(2) * t4357 + t3824 * t4326) * t5053 + ((t3600 * t3943 - t3911 * t4156) * t3972 + pkin(2) * t3827 * t4326) * t4002 - (t3993 * t4156 - t5009) * t5068 - (-t5084 * t3850 * t4591 + t4147) * t4008) * t4003 + t4625 * t5070 + (t4008 * t3832 * t4388 + (t3824 * t4722 + t3993 * t4729) * t5009) * t4002 - (-t3994 * t5009 + (t3402 * t3994 + t3618 * t3824 + t3546) * t3993) * t4872 + t4147 * t5062) / ((-pkin(1) * t4719 + t3787 * t3972) * t4002 + t4102) * t5009) * t4028;
t3521 = pkin(6) * t4641;
t3537 = pkin(8) * t3553;
t3538 = pkin(7) * t3553;
t5010 = t3605 * t3693;
t4496 = -t5010 / 0.2e1;
t4793 = (t3538 + t3537 - t3590 / 0.2e1) * t3910 + pkin(3) * t4496;
t3350 = t3521 + t4793;
t3431 = t3590 - t3538;
t3401 = t3537 - t3431;
t4627 = t3990 * t5010;
t3422 = t4641 - t4627;
t3549 = pkin(1) * t3553;
t5001 = t3635 * t3668;
t3617 = t3973 * t5001;
t3834 = pkin(1) * t4802;
t3889 = pkin(6) * t3910;
t3892 = pkin(2) * t3916;
t3915 = t3960 * t4027;
t3961 = t4000 * t3962;
t3581 = pkin(8) * t3598;
t3593 = pkin(1) * t3598;
t4644 = t3990 * t3553;
t3513 = pkin(3) * t4644;
t3586 = pkin(7) * t3598;
t3539 = pkin(6) * t3553;
t4781 = t3539 + t3581;
t4284 = t3513 + t3586 + t4781;
t4163 = t4284 * t3991;
t4377 = t4895 * t3553;
t4626 = t4008 * t5010;
t5166 = t4163 + t3593;
t4061 = (pkin(6) * t4377 + (((t3590 - 0.2e1 * t3537) * pkin(7) + pkin(6) * t3581) * t3990 + t4626 + t4487 * t4644) * pkin(3)) * t3991 + (t3593 + 0.2e1 * t4163) * t3892 + t5166 * t3915;
t4361 = t3991 * t3598;
t3572 = pkin(1) * t4361;
t3541 = pkin(2) * t3553;
t4414 = t3848 * t3541;
t4091 = (t3572 + t4284) * t3916 + t4414;
t4727 = t3823 * t5065;
t4751 = pkin(6) * t5054;
t4103 = -t4730 * t5054 + (t4944 + (t3849 * t5059 + t3990 * t4030 - t4751) * t3972) * t4000 + t3972 * t4727;
t4362 = t3990 * t3598;
t4148 = t4362 * t5069;
t3497 = t3815 * t3553;
t4358 = t3990 * t4626;
t4154 = t3497 - t4358;
t4157 = t3617 * t3831 + t3401;
t4166 = 0.2e1 * t3892 + t3915;
t4183 = t3848 * t4308;
t4335 = t3848 * t5153 * t5001;
t4192 = t4008 * t4335;
t4598 = t4008 * t5001;
t4331 = t3972 * t4598;
t4193 = t3991 * t4331;
t4601 = t3991 * t5001;
t4332 = t3972 * t4601;
t4265 = 0.2e1 * t4332;
t4642 = t3999 * t3553;
t4398 = pkin(2) * t4642;
t3509 = pkin(3) * t4398;
t4640 = t4027 * t3553;
t3514 = t3960 * t4640;
t4290 = t3990 * t4496;
t4287 = t3497 / 0.2e1 + t3514 / 0.2e1 + t3509 + t4008 * t4290;
t4319 = t3848 * t4570;
t4334 = t4918 * t5001;
t4363 = t3972 * t3598;
t4389 = t5084 * t5001;
t4628 = t3960 * t5010;
t4411 = pkin(3) * t4628;
t4603 = t3972 * t5001;
t4604 = t3962 * t5001;
t4693 = (pkin(6) * t3537 + pkin(7) * t4781 + t4128 * t5010 + t4793) * t3916;
t4720 = pkin(2) * t4863;
t4787 = 0.2e1 * t3509 + t3514;
t5131 = t3892 + t3915 - t3889;
t5141 = 0.2e1 * t3889 - t3915;
t3260 = (0.1e1 / ((t3786 * t3999 + t4727) * t3972 + t4115) * ((-(t4282 + t4166) * t3961 * t4334 * t4928 + (t4192 * t5161 + (-0.3e1 * (t3796 + t4166) * t4193 - 0.2e1 * t4693 + (-0.2e1 * t3350 + t4411) * pkin(2)) * t3949 + ((t4358 + t4377 + t4787) * t5070 + 0.4e1 * t4192) * t3973 + 0.2e1 * (t3991 * t4494 + t3814 + t4166 * (t3944 * t3991 + pkin(1))) * t4603 - pkin(2) * t4411 + 0.2e1 * t4693 + t3350 * t4022) * t3962 + (t4061 * t3949 + t5153 * ((t4290 + t4641) * t3928 + t4287) * t4738 + (((t4120 + t5131) * t5100 + 0.4e1 * t3834 + t4121 + t5141) * t4928 + t4319 * t4391) * t5001 - t4061) * t4000 + (t4335 * t5103 + ((t4488 + t5131) * t4265 + t4091) * t3949 + (-0.2e1 * t4335 + t3422 * t5070 + (t3553 * t4166 + t4154) * t4886) * t3973 + (t5104 + (t3792 + t5141) * t3991) * t4603 - t4091) * t4008) * t5001 + ((t4732 * t4956 - 0.2e1 * t4183) * t4604 + (0.2e1 * ((t3915 / 0.2e1 + t3892 + t3834 + t4281) * t3617 + t4287) * t4928 + t4319 * t4334) * t4000 + ((t3942 + (t3815 + t4166) * t3991) * t4008 * t3617 + t3823 * (t4154 + t4787)) * t3972 + t4183 * t5001) * t3553) + ((t3990 * t4428 + ((t3889 + t4174) * t3999 + (t3847 + t5054) * pkin(2)) * t4918) * t4604 + ((pkin(2) * t4363 + t3823 * t4334) * t5054 + ((t3598 * t3943 - t3910 * t4157) * t3972 + pkin(2) * t3826 * t4334) * t3999 - (t3990 * t4157 - t5010) * t5068 - (-t5084 * t3847 * t4601 + t4148) * t4008) * t4000 + t4628 * t5070 + (t4008 * t3831 * t4389 + (t3823 * t4722 + t3990 * t4730) * t5010) * t3999 - (-t3991 * t5010 + (t3401 * t3991 + t3617 * t3823 + t3549) * t3990) * t4872 + t4148 * t5064) / ((-pkin(1) * t4720 + t3786 * t3972) * t3999 + t4103) * t5010) * t4028;
t3520 = pkin(6) * t4648;
t3532 = pkin(8) * t3551;
t3533 = pkin(7) * t3551;
t5011 = t3604 * t3691;
t4497 = -t5011 / 0.2e1;
t4794 = (t3533 + t3532 - t3589 / 0.2e1) * t3909 + pkin(3) * t4497;
t3349 = t3520 + t4794;
t3430 = t3589 - t3533;
t3400 = t3532 - t3430;
t4630 = t3987 * t5011;
t3421 = t4648 - t4630;
t3548 = pkin(1) * t3551;
t5002 = t3634 * t3666;
t3616 = t3973 * t5002;
t3833 = pkin(1) * t4803;
t3888 = pkin(6) * t3909;
t3891 = pkin(2) * t3913;
t3912 = t3956 * t4027;
t3957 = t3997 * t3958;
t3580 = pkin(8) * t3596;
t3592 = pkin(1) * t3596;
t4651 = t3987 * t3551;
t3511 = pkin(3) * t4651;
t3584 = pkin(7) * t3596;
t3534 = pkin(6) * t3551;
t4782 = t3534 + t3580;
t4285 = t3511 + t3584 + t4782;
t4164 = t4285 * t3988;
t4382 = t4895 * t3551;
t4629 = t4008 * t5011;
t5165 = t4164 + t3592;
t4062 = (pkin(6) * t4382 + (((t3589 - 0.2e1 * t3532) * pkin(7) + pkin(6) * t3580) * t3987 + t4629 + t4487 * t4651) * pkin(3)) * t3988 + (t3592 + 0.2e1 * t4164) * t3891 + t5165 * t3912;
t4367 = t3988 * t3596;
t3571 = pkin(1) * t4367;
t3536 = pkin(2) * t3551;
t4415 = t3845 * t3536;
t4092 = (t3571 + t4285) * t3913 + t4415;
t4728 = t3822 * t5067;
t4752 = pkin(6) * t5055;
t4104 = -t4731 * t5055 + (t4945 + (t3846 * t5061 + t3987 * t4030 - t4752) * t3972) * t3997 + t3972 * t4728;
t4368 = t3987 * t3596;
t4149 = t4368 * t5069;
t3496 = t3815 * t3551;
t4364 = t3987 * t4629;
t4155 = t3496 - t4364;
t4158 = t3616 * t3830 + t3400;
t4167 = 0.2e1 * t3891 + t3912;
t4184 = t3845 * t4309;
t4343 = t3845 * t5154 * t5002;
t4199 = t4008 * t4343;
t4608 = t4008 * t5002;
t4339 = t3972 * t4608;
t4200 = t3988 * t4339;
t4611 = t3988 * t5002;
t4340 = t3972 * t4611;
t4267 = 0.2e1 * t4340;
t4649 = t3996 * t3551;
t4400 = pkin(2) * t4649;
t3508 = pkin(3) * t4400;
t4647 = t4027 * t3551;
t3512 = t3956 * t4647;
t4291 = t3987 * t4497;
t4288 = t3496 / 0.2e1 + t3512 / 0.2e1 + t3508 + t4008 * t4291;
t4321 = t3845 * t4571;
t4342 = t4918 * t5002;
t4369 = t3972 * t3596;
t4390 = t5084 * t5002;
t4631 = t3956 * t5011;
t4412 = pkin(3) * t4631;
t4613 = t3972 * t5002;
t4614 = t3958 * t5002;
t4694 = (pkin(6) * t3532 + pkin(7) * t4782 + t4128 * t5011 + t4794) * t3913;
t4721 = pkin(2) * t4866;
t4788 = 0.2e1 * t3508 + t3512;
t5132 = t3891 + t3912 - t3888;
t5142 = 0.2e1 * t3888 - t3912;
t3259 = (0.1e1 / ((t3785 * t3996 + t4728) * t3972 + t4116) * ((-(t4282 + t4167) * t3957 * t4342 * t4931 + (t4199 * t5161 + (-0.3e1 * (t3796 + t4167) * t4200 - 0.2e1 * t4694 + (-0.2e1 * t3349 + t4412) * pkin(2)) * t3949 + ((t4364 + t4382 + t4788) * t5070 + 0.4e1 * t4199) * t3973 + 0.2e1 * (t3988 * t4494 + t3814 + t4167 * (t3944 * t3988 + pkin(1))) * t4613 - pkin(2) * t4412 + 0.2e1 * t4694 + t3349 * t4022) * t3958 + (t4062 * t3949 + t5154 * ((t4291 + t4648) * t3927 + t4288) * t4738 + (((t4120 + t5132) * t5100 + 0.4e1 * t3833 + t4121 + t5142) * t4931 + t4321 * t4391) * t5002 - t4062) * t3997 + (t4343 * t5103 + ((t4488 + t5132) * t4267 + t4092) * t3949 + (-0.2e1 * t4343 + t3421 * t5070 + (t3551 * t4167 + t4155) * t4889) * t3973 + (t5104 + (t3792 + t5142) * t3988) * t4613 - t4092) * t4008) * t5002 + ((t4732 * t4957 - 0.2e1 * t4184) * t4614 + (0.2e1 * ((t3912 / 0.2e1 + t3891 + t3833 + t4281) * t3616 + t4288) * t4931 + t4321 * t4342) * t3997 + ((t3942 + (t3815 + t4167) * t3988) * t4008 * t3616 + t3822 * (t4155 + t4788)) * t3972 + t4184 * t5002) * t3551) + ((t3987 * t4428 + ((t3888 + t4174) * t3996 + (t3844 + t5055) * pkin(2)) * t4918) * t4614 + ((pkin(2) * t4369 + t3822 * t4342) * t5055 + ((t3596 * t3943 - t3909 * t4158) * t3972 + pkin(2) * t3825 * t4342) * t3996 - (t3987 * t4158 - t5011) * t5068 - (-t5084 * t3844 * t4611 + t4149) * t4008) * t3997 + t4631 * t5070 + (t4008 * t3830 * t4390 + (t3822 * t4722 + t3987 * t4731) * t5011) * t3996 - (-t3988 * t5011 + (t3400 * t3988 + t3616 * t3822 + t3548) * t3987) * t4872 + t4149 * t5066) / ((-pkin(1) * t4721 + t3785 * t3972) * t3996 + t4104) * t5011) * t4028;
t3418 = t3987 * t4648 - t5011;
t3930 = pkin(1) * t3958;
t3931 = pkin(1) * t3997;
t4015 = -pkin(7) / 0.2e1;
t3945 = t4015 - pkin(8) / 0.2e1;
t4023 = -0.2e1 * pkin(1);
t4650 = t3988 * t3551;
t4380 = t3987 * t4650;
t4857 = t3973 * t3997;
t4531 = t3972 * t4857;
t4559 = t3988 * t4918;
t4850 = t3987 * t3996;
t5050 = pkin(6) * t3997;
t5094 = 0.2e1 * t3987;
t3300 = ((pkin(1) * t4380 + t3418) * t3996 - (t3931 + pkin(2)) * t3596) * t3973 + ((t4630 + t4785) * t3988 - t3548 + (t3788 * t3956 + (pkin(6) * t4850 - pkin(2)) * t3997) * t3551) * t3972 + ((-(-t3924 + t3930 + t4023 - t4844) * t4891 - t4559 * t5050) * t3956 + (t3844 * t4531 + (t3945 * t3958 + t4718 / 0.2e1 + t3830) * t3949 * t5094 - t3987 * t3733) * t3996 + (t3930 - t3822) * t4891 + t5084 * t3845 * t4846) * t5002;
t4017 = pkin(6) / 0.2e1;
t3839 = t3909 + t4017;
t4268 = -0.2e1 * t4340;
t3609 = t3839 * t4268;
t3865 = t3931 + t4022;
t4021 = 0.3e1 * pkin(2);
t3971 = t4008 ^ 2;
t3887 = t3971 + t4030;
t4137 = -pkin(1) * t3924 - t3833 - t3887;
t4365 = t3997 * t3596;
t4256 = pkin(2) * t4365;
t4612 = t3987 * t5002;
t4341 = t3972 * t4612;
t4616 = t3844 * t5002;
t4344 = t5155 * t4616;
t4652 = t3973 * t3551;
t3955 = t3996 * t3956;
t4894 = t3955 * t4027;
t5080 = t3958 - 0.1e1;
t4500 = (t4652 + (t5080 - t4921) * t5002) * t4894;
t4615 = t3949 * t5002;
t4016 = pkin(6) / 0.3e1;
t4725 = (t3909 + t4016) * t5066;
t4764 = t3888 + t4027;
t5045 = pkin(6) * t4008;
t5133 = t3887 * t3988 + t3942;
t4660 = (-t4500 - ((t3551 * t3865 + t3609) * t3973 + (-t4256 - t5165) * t3972 + ((-t3914 + (-t4803 + pkin(1)) * t3997 + t4021) * t3949 + t5155) * t5002) * t5055 + (-(pkin(3) * t3844 * t3958 - t4137 - t4764) * t4615 + ((((t3927 - t4008) * t3909 - t5045) * t3997 + 0.3e1 * t4725) * t4613 + t3830 * t4630 + t4137 * t3551) * t3973 + (-t3421 * t5050 + t3988 * t4415) * t3972 + pkin(3) * t4616 * t4899) * t3996 - t3949 * t4344 - (pkin(1) * t4140 - t5133) * t3973 * t4341 + t3788 * t3418 * t3972 + t4344) * t3551;
t3427 = pkin(3) * t5011 - t3520;
t3517 = pkin(1) * t4650;
t3529 = pkin(2) * t3534;
t3535 = pkin(3) * t3551;
t3568 = pkin(1) * t4369;
t3574 = t4008 * t3596;
t3791 = 0.3e1 * t4027 + t4175;
t3810 = -t4895 / 0.2e1;
t4758 = t4030 - t4027;
t3828 = t3971 + t4758;
t3883 = -t4026 + t4758;
t4161 = 0.2e1 * t3957 * t4339;
t4071 = pkin(3) * (pkin(6) * t4268 + t3536) + t4161 * t5067;
t4214 = t3988 * t4365;
t4238 = -t3997 * t4752 + t3742;
t4250 = pkin(2) * t4339;
t4424 = pkin(2) * t4613;
t4277 = 0.2e1 * t4424;
t4381 = t3955 * t4647;
t4409 = pkin(2) * t3811;
t4653 = t3972 * t3551;
t4427 = pkin(2) * t4653;
t4431 = pkin(1) * t4648;
t4437 = -(pkin(2) * t4267 + t3534 + t3574) * t3958 + t3534;
t4443 = 0.2e1 * t4608;
t4479 = 0.2e1 * t5002;
t4703 = pkin(6) * t5002;
t4482 = pkin(2) * t4703;
t4485 = pkin(2) * t3535;
t4489 = t4026 / 0.3e1 - t4030 / 0.3e1 + t4027;
t4543 = t3988 * t4895;
t4711 = pkin(3) * t5185;
t4757 = -0.2e1 * t3942;
t4761 = -0.2e1 / 0.3e1 * t4027 + t4895 / 0.3e1;
t4779 = t5002 * t4022 + t3568;
t4201 = t3987 * t4340;
t4143 = pkin(3) * t4201;
t5014 = (-t3536 + t4143) * t3958;
t5102 = 0.3e1 * t3948;
t5109 = 0.2e1 * pkin(6);
t5110 = -0.2e1 * pkin(6);
t5113 = 0.2e1 * pkin(1);
t5160 = 0.2e1 * t3988;
t4674 = (((t3958 - 0.4e1 / 0.3e1) * t4894 + ((-0.2e1 / 0.3e1 * t3888 + t4761) * t3958 + 0.2e1 / 0.3e1 * t4409 + 0.4e1 / 0.3e1 * t3888 + t4489) * t3996 + (0.4e1 / 0.3e1 * t5055 - 0.2e1 / 0.3e1 * t3844) * t5155) * t5002 * t5102 + (t3897 * t4381 - (t5014 + (t3548 + t5185) * t3997 + 0.3e1 * t3536 - 0.4e1 * t3845 * t4340) * t5055 + ((-pkin(1) * t3536 + t4339 * t5110) * t3997 + (pkin(6) * t4277 - t4431) * t3988 - t3828 * t3551 + (-t3535 * t3958 + (t4161 + (pkin(2) * t4367 - 0.4e1 * t4339) * t3997 + (t3592 + t4277) * t5160 + 0.2e1 * t3574 + t4437) * t3987) * pkin(3)) * t3996 + ((-t4340 * t4895 - t3529) * t3987 - t4485) * t3958 + ((t3427 * t3988 - 0.2e1 * t4250) * t3987 + t4711) * t3997 + (t3883 * t4340 + t3529) * t3987 + t4071) * t3949 + ((-0.3e1 * t3958 + 0.3e1) * t4894 * t5002 - (t3897 * t3568 + (-t4256 + (-t3534 - 0.2e1 * t3574 - 0.2e1 * t3511) * t3988) * t3972 + ((t5113 + 0.4e1 * t4803) * t3997 + (0.4e1 * t3958 - 0.2e1) * pkin(2)) * t5002) * t5055 + (0.2e1 * (t3810 + t4764) * t4614 + (((t3517 + t4785) * t3909 + t3427) * t3972 - t3822 * pkin(2) * t4479) * t3997 + (0.3e1 * t3988 * t4427 - 0.4e1 * t4703) * t3909 + (pkin(6) * t4427 + t4608 * t4023) * t3988 - t3791 * t5002) * t3996 + ((-t3972 * t4431 + 0.2e1 * t4482) * t3987 + pkin(3) * t4779) * t3958 + ((pkin(1) * t4427 + pkin(6) * t4443) * t3987 + pkin(3) * t4443) * t4846 + (t4653 * t5133 - 0.2e1 * t4482) * t3987 - (t3574 * t4889 + t4779) * pkin(3)) * t3973 - t5080 * t4381 - (-t5014 - t3536 + (-t4785 * t3997 + (t5109 + t3909) * t4613) * t3988) * t5055 - (-t5080 * t3535 + (pkin(2) * t4214 + t3571 + t3574 + (t4008 * t3957 - (t4008 + t3927) * t3997) * t3972 * t4479 + t4437) * t3987) * t3913 + ((t3529 + (t4543 + t4757) * t4613) * t3987 + t4485) * t3958 + (((pkin(1) * t4277 - t3427) * t3988 + 0.2e1 * t4250) * t3987 - t4711) * t3997 + (-t3529 + (t3792 * t3988 + t5104) * t4613) * t3987 - t4071) / (t3721 + (t3730 * t3996 + t4238) * t3972) * t3634;
t3263 = (-t3300 * t5011 - t4660 - t4674) * t3666;
t3468 = t3616 + t3551;
t4609 = t3997 * t5002;
t3610 = t3972 * t4609;
t3482 = t3610 - t3596;
t3667 = 0.1e1 / t3671 ^ 2;
t3727 = -pkin(6) * t4767 + t3909 * t5151;
t4018 = -0.3e1 / 0.2e1 * pkin(2);
t4152 = t3958 * t4895 + t4764;
t4259 = pkin(2) * t4380;
t4537 = t3972 * t4867;
t4737 = 0.2e1 * t4872;
t4950 = t3825 * t3997;
t5017 = t3418 * t3997;
t5099 = -0.3e1 * t3972;
t5101 = -0.2e1 * t3949;
t3280 = -(t4500 + (t3551 * t3887 - t4364) * t4858 + (-t4259 + t5017) * t5068 + ((t3609 + 0.2e1 * t3536) * t3973 * t3956 + (-(t3511 + t3574) * t3988 * t3956 + (-0.2e1 * t4259 + t5017) * t3996) * t3972) * pkin(3) + (((t4018 + t4770) * t5101 + 0.2e1 * t3914 + t4950 - pkin(2)) * t5055 + (-(-t4030 + t4152 + 0.2e1 * t4409) * t3949 + (t3839 * t3997 * t4737 + t4725 * t5099) * t3973 + pkin(2) * t4950 + t3833 + t3971 + t4152) * t3996 + pkin(2) * (t3793 * t4537 - t3844 * t3949 + t3844)) * t5002) * t3667 * t3634 + (-(t3468 * t4894 + (-t4143 / 0.2e1 + t3468 * pkin(2)) * t4755 + (t3468 * t3887 + ((t3877 - 0.2e1 * t5066) * pkin(3) * t4613 - t4629) * t3987) * t3996 + t3793 * pkin(2) * t4341) * t3551 + (t3956 * t4200 + (t3468 * t3987 * t4008 + pkin(3) * t3610 - t5011) * t3996 + pkin(2) * t3482) * t5011) / ((t3727 * t3972 + t3748) * t3996 + t4274);
t4029 = 0.1e1 / pkin(3) ^ 2;
t3595 = t3604 ^ 2 * t4029 / t3700 ^ 2;
t3583 = pkin(7) * t3595;
t3631 = t3634 ^ 2;
t3622 = t3631 * t3667;
t4127 = t3972 * t4202;
t4095 = t4127 * t4022;
t4622 = t3988 * t3622;
t4700 = pkin(6) * t4889;
t5038 = pkin(7) * t3958;
t5111 = -0.2e1 * pkin(2);
t5139 = pkin(6) * t4531 + t3927;
t5179 = t3263 * t5111 + (-t3865 * t3973 + t4700) * t3280 - t3622 * ((t4015 - t4718 + t5038) * t5100 + pkin(7) - 0.2e1 * t5038 + t5139) - (pkin(2) * t4622 + pkin(7) * t4127) * t4746 + t3988 * t4095 + t3583;
t3419 = t3990 * t4641 - t5010;
t3932 = pkin(1) * t3962;
t3933 = pkin(1) * t4000;
t4643 = t3991 * t3553;
t4375 = t3990 * t4643;
t4855 = t3973 * t4000;
t4530 = t3972 * t4855;
t4558 = t3991 * t4918;
t4838 = t3990 * t3999;
t5048 = pkin(6) * t4000;
t5092 = 0.2e1 * t3990;
t3298 = ((pkin(1) * t4375 + t3419) * t3999 - (t3933 + pkin(2)) * t3598) * t3973 + ((t4627 + t4784) * t3991 - t3549 + (t3789 * t3960 + (pkin(6) * t4838 - pkin(2)) * t4000) * t3553) * t3972 + ((-(-t3925 + t3932 + t4023 - t4832) * t4891 - t4558 * t5048) * t3960 + (t3847 * t4530 + (t3945 * t3962 + t4717 / 0.2e1 + t3831) * t3949 * t5092 - t3990 * t3734) * t3999 + (t3932 - t3823) * t4891 + t5084 * t3848 * t4834) * t5001;
t3841 = t3910 + t4017;
t4266 = -0.2e1 * t4332;
t3607 = t3841 * t4266;
t3866 = t3933 + t4022;
t4136 = -pkin(1) * t3925 - t3834 - t3887;
t4359 = t4000 * t3598;
t4254 = pkin(2) * t4359;
t4602 = t3990 * t5001;
t4333 = t3972 * t4602;
t4606 = t3847 * t5001;
t4336 = t5156 * t4606;
t4516 = t3973 * t3553;
t3959 = t3999 * t3960;
t4893 = t3959 * t4027;
t5077 = t3962 - 0.1e1;
t4499 = (t4516 + (t5077 - t4920) * t5001) * t4893;
t4605 = t3949 * t5001;
t4724 = (t3910 + t4016) * t5064;
t4763 = t3889 + t4027;
t5134 = t3887 * t3991 + t3942;
t4659 = (-t4499 - ((t3553 * t3866 + t3607) * t3973 + (-t4254 - t5166) * t3972 + ((-t3917 + (-t4802 + pkin(1)) * t4000 + t4021) * t3949 + t5156) * t5001) * t5054 + (-(pkin(3) * t3847 * t3962 - t4136 - t4763) * t4605 + ((((t3928 - t4008) * t3910 - t5045) * t4000 + 0.3e1 * t4724) * t4603 + t3831 * t4627 + t4136 * t3553) * t3973 + (-t3422 * t5048 + t3991 * t4414) * t3972 + pkin(3) * t4606 * t4898) * t3999 - t3949 * t4336 - (pkin(1) * t4139 - t5134) * t3973 * t4333 + t3789 * t3419 * t3972 + t4336) * t3553;
t3428 = pkin(3) * t5010 - t3521;
t3518 = pkin(1) * t4643;
t3530 = pkin(2) * t3539;
t3540 = pkin(3) * t3553;
t3569 = pkin(1) * t4363;
t3575 = t4008 * t3598;
t4160 = 0.2e1 * t3961 * t4331;
t4070 = pkin(3) * (pkin(6) * t4266 + t3541) + t4160 * t5065;
t4213 = t3991 * t4359;
t4237 = -t4000 * t4751 + t3743;
t4249 = pkin(2) * t4331;
t4423 = pkin(2) * t4603;
t4276 = 0.2e1 * t4423;
t4376 = t3959 * t4640;
t4406 = pkin(2) * t3812;
t4645 = t3972 * t3553;
t4426 = pkin(2) * t4645;
t4430 = pkin(1) * t4641;
t4436 = -(pkin(2) * t4265 + t3539 + t3575) * t3962 + t3539;
t4442 = 0.2e1 * t4598;
t4478 = 0.2e1 * t5001;
t4702 = pkin(6) * t5001;
t4481 = pkin(2) * t4702;
t4484 = pkin(2) * t3540;
t4542 = t3991 * t4895;
t4709 = pkin(3) * t5184;
t4778 = t5001 * t4022 + t3569;
t4194 = t3990 * t4332;
t4142 = pkin(3) * t4194;
t5013 = (-t3541 + t4142) * t3962;
t5159 = 0.2e1 * t3991;
t4673 = (((-0.4e1 / 0.3e1 + t3962) * t4893 + ((-0.2e1 / 0.3e1 * t3889 + t4761) * t3962 + 0.2e1 / 0.3e1 * t4406 + 0.4e1 / 0.3e1 * t3889 + t4489) * t3999 + (0.4e1 / 0.3e1 * t5054 - 0.2e1 / 0.3e1 * t3847) * t5156) * t5001 * t5102 + (t3898 * t4376 - (t5013 + (t3549 + t5184) * t4000 + 0.3e1 * t3541 - 0.4e1 * t3848 * t4332) * t5054 + ((-pkin(1) * t3541 + t4331 * t5110) * t4000 + (pkin(6) * t4276 - t4430) * t3991 - t3828 * t3553 + (-t3540 * t3962 + (t4160 + (pkin(2) * t4361 - 0.4e1 * t4331) * t4000 + (t3593 + t4276) * t5159 + 0.2e1 * t3575 + t4436) * t3990) * pkin(3)) * t3999 + ((-t4332 * t4895 - t3530) * t3990 - t4484) * t3962 + ((t3428 * t3991 - 0.2e1 * t4249) * t3990 + t4709) * t4000 + (t3883 * t4332 + t3530) * t3990 + t4070) * t3949 + ((-0.3e1 * t3962 + 0.3e1) * t4893 * t5001 - (t3898 * t3569 + (-t4254 + (-t3539 - 0.2e1 * t3575 - 0.2e1 * t3513) * t3991) * t3972 + ((t5113 + 0.4e1 * t4802) * t4000 + (0.4e1 * t3962 - 0.2e1) * pkin(2)) * t5001) * t5054 + (0.2e1 * (t3810 + t4763) * t4604 + (((t3518 + t4784) * t3910 + t3428) * t3972 - t3823 * pkin(2) * t4478) * t4000 + (0.3e1 * t3991 * t4426 - 0.4e1 * t4702) * t3910 + (pkin(6) * t4426 + t4598 * t4023) * t3991 - t3791 * t5001) * t3999 + ((-t3972 * t4430 + 0.2e1 * t4481) * t3990 + pkin(3) * t4778) * t3962 + ((pkin(1) * t4426 + pkin(6) * t4442) * t3990 + pkin(3) * t4442) * t4834 + (t4645 * t5134 - 0.2e1 * t4481) * t3990 - (t3575 * t4886 + t4778) * pkin(3)) * t3973 - t5077 * t4376 - (-t5013 - t3541 + (-t4784 * t4000 + (t5109 + t3910) * t4603) * t3991) * t5054 - (-t5077 * t3540 + (pkin(2) * t4213 + t3572 + t3575 + (t4008 * t3961 - (t4008 + t3928) * t4000) * t3972 * t4478 + t4436) * t3990) * t3916 + ((t3530 + (t4542 + t4757) * t4603) * t3990 + t4484) * t3962 + (((pkin(1) * t4276 - t3428) * t3991 + 0.2e1 * t4249) * t3990 - t4709) * t4000 + (-t3530 + (t3792 * t3991 + t5104) * t4603) * t3990 - t4070) / (t3722 + (t3731 * t3999 + t4237) * t3972) * t3635;
t3264 = (-t3298 * t5010 - t4659 - t4673) * t3668;
t3471 = t3617 + t3553;
t4599 = t4000 * t5001;
t3611 = t3972 * t4599;
t3484 = t3611 - t3598;
t3669 = 0.1e1 / t3672 ^ 2;
t3728 = -pkin(6) * t4766 + t3910 * t5150;
t4151 = t3962 * t4895 + t4763;
t4258 = pkin(2) * t4375;
t4535 = t3972 * t4864;
t4948 = t3826 * t4000;
t5016 = t3419 * t4000;
t3281 = -(t4499 + (t3553 * t3887 - t4358) * t4856 + (-t4258 + t5016) * t5068 + ((t3607 + 0.2e1 * t3541) * t3973 * t3960 + (-(t3513 + t3575) * t3991 * t3960 + (-0.2e1 * t4258 + t5016) * t3999) * t3972) * pkin(3) + (((t4018 + t4769) * t5101 + 0.2e1 * t3917 + t4948 - pkin(2)) * t5054 + (-(-t4030 + t4151 + 0.2e1 * t4406) * t3949 + (t3841 * t4000 * t4737 + t4724 * t5099) * t3973 + pkin(2) * t4948 + t3834 + t3971 + t4151) * t3999 + pkin(2) * (t3794 * t4535 - t3847 * t3949 + t3847)) * t5001) * t3669 * t3635 + (-(t3471 * t4893 + (-t4142 / 0.2e1 + t3471 * pkin(2)) * t4754 + (t3471 * t3887 + ((t3878 - 0.2e1 * t5064) * pkin(3) * t4603 - t4626) * t3990) * t3999 + t3794 * pkin(2) * t4333) * t3553 + (t3960 * t4193 + (t3471 * t3990 * t4008 + pkin(3) * t3611 - t5010) * t3999 + pkin(2) * t3484) * t5010) / ((t3728 * t3972 + t3749) * t3999 + t4273);
t3597 = t3605 ^ 2 * t4029 / t3701 ^ 2;
t3585 = pkin(7) * t3597;
t3632 = t3635 ^ 2;
t3623 = t3632 * t3669;
t4126 = t3972 * t4195;
t4094 = t4126 * t4022;
t4620 = t3991 * t3623;
t4699 = pkin(6) * t4886;
t5037 = pkin(7) * t3962;
t5138 = pkin(6) * t4530 + t3928;
t5178 = t3264 * t5111 + (-t3866 * t3973 + t4699) * t3281 - t3623 * ((t4015 - t4717 + t5037) * t5100 + pkin(7) - 0.2e1 * t5037 + t5138) - (pkin(2) * t4620 + pkin(7) * t4126) * t4745 + t3991 * t4094 + t3585;
t3420 = t3993 * t4633 - t5009;
t3934 = pkin(1) * t3966;
t3935 = pkin(1) * t4003;
t4635 = t3994 * t3555;
t4370 = t3993 * t4635;
t4853 = t3973 * t4003;
t4529 = t3972 * t4853;
t4557 = t3994 * t4918;
t4826 = t3993 * t4002;
t5046 = pkin(6) * t4003;
t5090 = 0.2e1 * t3993;
t3299 = ((pkin(1) * t4370 + t3420) * t4002 - (t3935 + pkin(2)) * t3600) * t3973 + ((t4624 + t4783) * t3994 - t3546 + (t3790 * t3964 + (pkin(6) * t4826 - pkin(2)) * t4003) * t3555) * t3972 + ((-(-t3926 + t3934 + t4023 - t4820) * t4891 - t4557 * t5046) * t3964 + (t3850 * t4529 + (t3945 * t3966 + t4716 / 0.2e1 + t3832) * t3949 * t5090 - t3993 * t3735) * t4002 + (t3934 - t3824) * t4891 + t5084 * t3851 * t4822) * t5000;
t3843 = t3911 + t4017;
t4264 = -0.2e1 * t4324;
t3608 = t3843 * t4264;
t3867 = t3935 + t4022;
t4135 = -pkin(1) * t3926 - t3835 - t3887;
t4353 = t4003 * t3600;
t4252 = pkin(2) * t4353;
t4592 = t3993 * t5000;
t4325 = t3972 * t4592;
t4596 = t3850 * t5000;
t4328 = t5157 * t4596;
t4637 = t3973 * t3555;
t3963 = t4002 * t3964;
t4892 = t3963 * t4027;
t5074 = t3966 - 0.1e1;
t4498 = (t4637 + (t5074 - t4919) * t5000) * t4892;
t4595 = t3949 * t5000;
t4723 = (t3911 + t4016) * t5062;
t4762 = t3890 + t4027;
t5135 = t3887 * t3994 + t3942;
t4658 = (-t4498 - ((t3555 * t3867 + t3608) * t3973 + (-t4252 - t5167) * t3972 + ((-t3920 + (-t4801 + pkin(1)) * t4003 + t4021) * t3949 + t5157) * t5000) * t5053 + (-(pkin(3) * t3850 * t3966 - t4135 - t4762) * t4595 + ((((t3929 - t4008) * t3911 - t5045) * t4003 + 0.3e1 * t4723) * t4593 + t3832 * t4624 + t4135 * t3555) * t3973 + (-t3423 * t5046 + t3994 * t4413) * t3972 + pkin(3) * t4596 * t4897) * t4002 - t3949 * t4328 - (pkin(1) * t4138 - t5135) * t3973 * t4325 + t3790 * t3420 * t3972 + t4328) * t3555;
t3429 = pkin(3) * t5009 - t3522;
t3519 = pkin(1) * t4635;
t3531 = pkin(2) * t3543;
t3544 = pkin(3) * t3555;
t3570 = pkin(1) * t4357;
t3576 = t4008 * t3600;
t4159 = 0.2e1 * t3965 * t4323;
t4069 = pkin(3) * (pkin(6) * t4264 + t3545) + t4159 * t5063;
t4212 = t3994 * t4353;
t4236 = -t4003 * t4750 + t3744;
t4248 = pkin(2) * t4323;
t4422 = pkin(2) * t4593;
t4275 = 0.2e1 * t4422;
t4371 = t3963 * t4632;
t4403 = pkin(2) * t3813;
t4638 = t3972 * t3555;
t4425 = pkin(2) * t4638;
t4429 = pkin(1) * t4633;
t4435 = -(pkin(2) * t4263 + t3543 + t3576) * t3966 + t3543;
t4441 = 0.2e1 * t4588;
t4477 = 0.2e1 * t5000;
t4701 = pkin(6) * t5000;
t4480 = pkin(2) * t4701;
t4483 = pkin(2) * t3544;
t4541 = t3994 * t4895;
t4707 = pkin(3) * t5183;
t4777 = t5000 * t4022 + t3570;
t4187 = t3993 * t4324;
t4141 = pkin(3) * t4187;
t5012 = (-t3545 + t4141) * t3966;
t5158 = 0.2e1 * t3994;
t4675 = (((-0.4e1 / 0.3e1 + t3966) * t4892 + ((-0.2e1 / 0.3e1 * t3890 + t4761) * t3966 + 0.2e1 / 0.3e1 * t4403 + 0.4e1 / 0.3e1 * t3890 + t4489) * t4002 + (0.4e1 / 0.3e1 * t5053 - 0.2e1 / 0.3e1 * t3850) * t5157) * t5000 * t5102 + (t3899 * t4371 - (t5012 + (t3546 + t5183) * t4003 + 0.3e1 * t3545 - 0.4e1 * t3851 * t4324) * t5053 + ((-pkin(1) * t3545 + t4323 * t5110) * t4003 + (pkin(6) * t4275 - t4429) * t3994 - t3828 * t3555 + (-t3544 * t3966 + (t4159 + (pkin(2) * t4355 - 0.4e1 * t4323) * t4003 + (t3594 + t4275) * t5158 + 0.2e1 * t3576 + t4435) * t3993) * pkin(3)) * t4002 + ((-t4324 * t4895 - t3531) * t3993 - t4483) * t3966 + ((t3429 * t3994 - 0.2e1 * t4248) * t3993 + t4707) * t4003 + (t3883 * t4324 + t3531) * t3993 + t4069) * t3949 + ((-0.3e1 * t3966 + 0.3e1) * t4892 * t5000 - (t3899 * t3570 + (-t4252 + (-t3543 - 0.2e1 * t3576 - 0.2e1 * t3515) * t3994) * t3972 + ((t5113 + 0.4e1 * t4801) * t4003 + (0.4e1 * t3966 - 0.2e1) * pkin(2)) * t5000) * t5053 + (0.2e1 * (t3810 + t4762) * t4594 + (((t3519 + t4783) * t3911 + t3429) * t3972 - t3824 * pkin(2) * t4477) * t4003 + (0.3e1 * t3994 * t4425 - 0.4e1 * t4701) * t3911 + (pkin(6) * t4425 + t4588 * t4023) * t3994 - t3791 * t5000) * t4002 + ((-t3972 * t4429 + 0.2e1 * t4480) * t3993 + pkin(3) * t4777) * t3966 + ((pkin(1) * t4425 + pkin(6) * t4441) * t3993 + pkin(3) * t4441) * t4822 + (t4638 * t5135 - 0.2e1 * t4480) * t3993 - (t3576 * t4883 + t4777) * pkin(3)) * t3973 - t5074 * t4371 - (-t5012 - t3545 + (-t4783 * t4003 + (t5109 + t3911) * t4593) * t3994) * t5053 - (-t5074 * t3544 + (pkin(2) * t4212 + t3573 + t3576 + (t4008 * t3965 - (t4008 + t3929) * t4003) * t3972 * t4477 + t4435) * t3993) * t3919 + ((t3531 + (t4541 + t4757) * t4593) * t3993 + t4483) * t3966 + (((pkin(1) * t4275 - t3429) * t3994 + 0.2e1 * t4248) * t3993 - t4707) * t4003 + (-t3531 + (t3792 * t3994 + t5104) * t4593) * t3993 - t4069) / (t3723 + (t3732 * t4002 + t4236) * t3972) * t3636;
t3262 = (-t3299 * t5009 - t4658 - t4675) * t3664;
t3474 = t3618 + t3555;
t4589 = t4003 * t5000;
t3612 = t3972 * t4589;
t3486 = t3612 - t3600;
t3665 = 0.1e1 / t3670 ^ 2;
t3729 = -pkin(6) * t4765 + t3911 * t5149;
t4150 = t3966 * t4895 + t4762;
t4257 = pkin(2) * t4370;
t4533 = t3972 * t4861;
t4946 = t3827 * t4003;
t5015 = t3420 * t4003;
t3282 = -(t4498 + (t3555 * t3887 - t4352) * t4854 + (-t4257 + t5015) * t5068 + ((t3608 + 0.2e1 * t3545) * t3973 * t3964 + (-(t3515 + t3576) * t3994 * t3964 + (-0.2e1 * t4257 + t5015) * t4002) * t3972) * pkin(3) + (((t4018 + t4768) * t5101 + 0.2e1 * t3920 + t4946 - pkin(2)) * t5053 + (-(-t4030 + t4150 + 0.2e1 * t4403) * t3949 + (t3843 * t4003 * t4737 + t4723 * t5099) * t3973 + pkin(2) * t4946 + t3835 + t3971 + t4150) * t4002 + pkin(2) * (t3795 * t4533 - t3850 * t3949 + t3850)) * t5000) * t3665 * t3636 + (-(t3474 * t4892 + (-t4141 / 0.2e1 + t3474 * pkin(2)) * t4753 + (t3474 * t3887 + ((t3879 - 0.2e1 * t5062) * pkin(3) * t4593 - t4623) * t3993) * t4002 + t3795 * pkin(2) * t4325) * t3555 + (t3964 * t4186 + (t3474 * t3993 * t4008 + pkin(3) * t3612 - t5009) * t4002 + pkin(2) * t3486) * t5009) / ((t3729 * t3972 + t3750) * t4002 + t4272);
t3599 = t3606 ^ 2 * t4029 / t3702 ^ 2;
t3587 = pkin(7) * t3599;
t3633 = t3636 ^ 2;
t3624 = t3633 * t3665;
t4125 = t3972 * t4188;
t4093 = t4125 * t4022;
t4618 = t3994 * t3624;
t4698 = pkin(6) * t4883;
t5036 = pkin(7) * t3966;
t5137 = pkin(6) * t4529 + t3929;
t5177 = t3262 * t5111 + (-t3867 * t3973 + t4698) * t3282 - t3624 * ((t4015 - t4716 + t5036) * t5100 + pkin(7) - 0.2e1 * t5036 + t5137) - (pkin(2) * t4618 + pkin(7) * t4125) * t4744 + t3994 * t4093 + t3587;
t4219 = t3596 * t3551;
t4146 = pkin(2) * t4219;
t3436 = -0.2e1 * t4146;
t3801 = pkin(7) * t3997 - t5066;
t4776 = t3610 - 0.2e1 * t3596;
t5025 = t3280 * t3972;
t5044 = pkin(7) * t3259;
t5176 = t3801 * t5025 + (pkin(2) * t4776 + pkin(7) * t4340) * t3616 + t3436 + t5044;
t4217 = t3598 * t3553;
t4145 = pkin(2) * t4217;
t3437 = -0.2e1 * t4145;
t3803 = pkin(7) * t4000 - t5064;
t4775 = t3611 - 0.2e1 * t3598;
t5022 = t3281 * t3972;
t5043 = pkin(7) * t3260;
t5175 = t3803 * t5022 + (pkin(2) * t4775 + pkin(7) * t4332) * t3617 + t3437 + t5043;
t4215 = t3600 * t3555;
t4144 = pkin(2) * t4215;
t3438 = -0.2e1 * t4144;
t3805 = pkin(7) * t4003 - t5062;
t4774 = t3612 - 0.2e1 * t3600;
t5019 = t3282 * t3972;
t5042 = pkin(7) * t3261;
t5174 = t3805 * t5019 + (pkin(2) * t4774 + pkin(7) * t4324) * t3618 + t3438 + t5042;
t3238 = t3280 * t4880 + t3259;
t4536 = t3972 * t4866;
t5173 = -t4536 * t3622 - t3238;
t3239 = t3281 * t4877 + t3260;
t4534 = t3972 * t4863;
t5172 = -t4534 * t3623 - t3239;
t3240 = t3282 * t4874 + t3261;
t4532 = t3972 * t4860;
t5171 = -t4532 * t3624 - t3240;
t3277 = t3973 * t3280;
t3550 = t3562 ^ 2 / t3688 ^ 2;
t3921 = pkin(7) * t3988;
t3856 = t3921 + pkin(1);
t4181 = t3616 * t3551;
t4421 = pkin(6) * t4536;
t4960 = (pkin(7) * t4846 - pkin(2) + t3914) * t3949;
t5040 = pkin(7) * t3263;
t5170 = -t3277 * t3862 + (0.2e1 * t4181 + t3550) * pkin(2) + (t3856 * t3997 + t3914 - t4421 - t4960) * t3622 - t5040;
t3278 = t3973 * t3281;
t3552 = t3563 ^ 2 / t3689 ^ 2;
t3922 = pkin(7) * t3991;
t3857 = t3922 + pkin(1);
t4180 = t3617 * t3553;
t4420 = pkin(6) * t4534;
t4959 = (pkin(7) * t4834 - pkin(2) + t3917) * t3949;
t5039 = pkin(7) * t3264;
t5169 = -t3278 * t3863 + (0.2e1 * t4180 + t3552) * pkin(2) + (t3857 * t4000 + t3917 - t4420 - t4959) * t3623 - t5039;
t3279 = t3973 * t3282;
t3554 = t3564 ^ 2 / t3690 ^ 2;
t3923 = pkin(7) * t3994;
t3858 = t3923 + pkin(1);
t4179 = t3618 * t3555;
t4419 = pkin(6) * t4532;
t4958 = (pkin(7) * t4822 - pkin(2) + t3920) * t3949;
t5041 = pkin(7) * t3262;
t5168 = -t3279 * t3864 + (0.2e1 * t4179 + t3554) * pkin(2) + (t3858 * t4003 + t3920 - t4419 - t4958) * t3624 - t5041;
t3797 = t3921 + t5151;
t4669 = t3280 * t4889;
t5164 = t3972 * (-t3259 * t5151 + (pkin(6) * t3263 - t5044) * t3988) + 0.2e1 * (-t3797 * t3997 + t4960) * t3280 + (-t3263 * t3865 + t4669 * t5109) * t3973;
t3798 = t3922 + t5150;
t4665 = t3281 * t4886;
t5163 = t3972 * (-t3260 * t5150 + (pkin(6) * t3264 - t5043) * t3991) + 0.2e1 * (-t3798 * t4000 + t4959) * t3281 + (-t3264 * t3866 + t4665 * t5109) * t3973;
t3799 = t3923 + t5149;
t4661 = t3282 * t4883;
t5162 = t3972 * (-t3261 * t5149 + (pkin(6) * t3262 - t5042) * t3994) + 0.2e1 * (-t3799 * t4003 + t4958) * t3282 + (-t3262 * t3867 + t4661 * t5109) * t3973;
t5148 = t3482 * t3634;
t5147 = t3484 * t3635;
t5146 = t3486 * t3636;
t5145 = t3595 - t3550;
t5144 = t3597 - t3552;
t5143 = t3599 - t3554;
t4392 = t3899 * t3911 - pkin(6);
t4873 = t3972 * t4004;
t5116 = t3995 * t3790 + t4392 * t4873;
t4393 = t3898 * t3910 - pkin(6);
t4876 = t3972 * t4001;
t5115 = t3992 * t3789 + t4393 * t4876;
t4394 = t3897 * t3909 - pkin(6);
t4879 = t3972 * t3998;
t5114 = t3989 * t3788 + t4394 * t4879;
t5112 = -0.4e1 * pkin(2);
t5108 = 0.2e1 * pkin(7);
t5107 = -0.2e1 * t3610 + t3596;
t5106 = -0.2e1 * t3611 + t3598;
t5105 = -0.2e1 * t3612 + t3600;
t5098 = -0.2e1 * t3972;
t5097 = 0.2e1 * t3972;
t5096 = -0.2e1 * t3973;
t5095 = -0.2e1 * t3987;
t5093 = -0.2e1 * t3990;
t5091 = -0.2e1 * t3993;
t5089 = -0.2e1 * t3996;
t5088 = -0.2e1 * t3999;
t5087 = -0.2e1 * t4002;
t5086 = -0.4e1 * t3949 + 0.4e1;
t5085 = t5101 + 0.1e1;
t5083 = t5100 - 0.2e1;
t5081 = 0.4e1 * t3956 - 0.2e1;
t5078 = 0.4e1 * t3960 - 0.2e1;
t5075 = 0.4e1 * t3964 - 0.2e1;
t5060 = pkin(2) * t3998;
t5058 = pkin(2) * t4001;
t5056 = pkin(2) * t4004;
t5052 = pkin(6) * t3972;
t5032 = t3238 * t3997;
t5031 = t3239 * t4000;
t5030 = t3240 * t4003;
t5026 = t3280 * t3666;
t5024 = t3280 * t3997;
t5023 = t3281 * t3668;
t5021 = t3281 * t4000;
t5020 = t3282 * t3664;
t5018 = t3282 * t4003;
t4041 = -t3987 * t5155 - t3996 * t4394;
t4849 = t3987 * t3998;
t4077 = t5155 * t4849;
t4845 = t3988 * t3998;
t4888 = t3972 * t3989;
t4107 = pkin(6) * t4845 - t3733 * t4888;
t4305 = t3989 * t4525;
t4554 = t3903 * t4845;
t4408 = pkin(3) * t4554;
t4549 = t3906 * t4889;
t4842 = t3989 * t3997;
t4908 = t3906 * t3988;
t4916 = t3903 * t3998;
t3625 = (t4041 * t3906 - t4044 * t4916) * t3949 + (-(t3903 * t4842 - 0.2e1 * t4549) * t5055 + (-t3903 * t5114 - t3906 * t4119) * t3996 - (t3844 * t4908 + t3903 * t4077) * t3972) * t3973 + t3956 * t4408 + ((t3903 * t4305 + t3906 * t3958 - t3906) * t3909 - t3906 * pkin(6)) * t3996 + (-t3903 * t4107 + t3906 * t4244) * t3987 - t4408;
t3676 = 0.1e1 / ((t3727 * t3996 + t4238) * t3972 + t3721);
t5008 = t3625 * t3676;
t4040 = -t3990 * t5156 - t3999 * t4393;
t4837 = t3990 * t4001;
t4076 = t5156 * t4837;
t4833 = t3991 * t4001;
t4885 = t3972 * t3992;
t4106 = pkin(6) * t4833 - t3734 * t4885;
t4303 = t3992 * t4521;
t4552 = t3904 * t4833;
t4405 = pkin(3) * t4552;
t4547 = t3907 * t4886;
t4830 = t3992 * t4000;
t4905 = t3907 * t3991;
t4913 = t3904 * t4001;
t3626 = (t4040 * t3907 - t4043 * t4913) * t3949 + (-(t3904 * t4830 - 0.2e1 * t4547) * t5054 + (-t3904 * t5115 - t3907 * t4118) * t3999 - (t3847 * t4905 + t3904 * t4076) * t3972) * t3973 + t3960 * t4405 + ((t3904 * t4303 + t3907 * t3962 - t3907) * t3910 - t3907 * pkin(6)) * t3999 + (-t3904 * t4106 + t3907 * t4243) * t3990 - t4405;
t3677 = 0.1e1 / ((t3728 * t3999 + t4237) * t3972 + t3722);
t5007 = t3626 * t3677;
t4039 = -t3993 * t5157 - t4002 * t4392;
t4825 = t3993 * t4004;
t4075 = t5157 * t4825;
t4821 = t3994 * t4004;
t4882 = t3972 * t3995;
t4105 = pkin(6) * t4821 - t3735 * t4882;
t4301 = t3995 * t4517;
t4550 = t3905 * t4821;
t4402 = pkin(3) * t4550;
t4545 = t3908 * t4883;
t4818 = t3995 * t4003;
t4902 = t3908 * t3994;
t4910 = t3905 * t4004;
t3627 = (t4039 * t3908 - t4042 * t4910) * t3949 + (-(t3905 * t4818 - 0.2e1 * t4545) * t5053 + (-t3905 * t5116 - t3908 * t4117) * t4002 - (t3850 * t4902 + t3905 * t4075) * t3972) * t3973 + t3964 * t4402 + ((t3905 * t4301 + t3908 * t3966 - t3908) * t3911 - t3908 * pkin(6)) * t4002 + (-t3905 * t4105 + t3908 * t4242) * t3993 - t4402;
t3678 = 0.1e1 / ((t3729 * t4002 + t4236) * t3972 + t3723);
t5006 = t3627 * t3678;
t4548 = t3906 * t4845;
t4407 = pkin(3) * t4548;
t4555 = t3903 * t4889;
t4907 = t3906 * t3998;
t4917 = t3903 * t3988;
t3628 = (t3903 * t4041 + t4044 * t4907) * t3949 + ((t3906 * t4842 + 0.2e1 * t4555) * t5055 + (-t3903 * t4119 + t3906 * t5114) * t3996 + t3972 * (-t3844 * t4917 + t3906 * t4077)) * t3973 - t3956 * t4407 + ((t3903 * t3958 - t3906 * t4305 - t3903) * t3909 - t3903 * pkin(6)) * t3996 + (t3903 * t4244 + t3906 * t4107) * t3987 + t4407;
t5005 = t3628 * t3676;
t4546 = t3907 * t4833;
t4404 = pkin(3) * t4546;
t4553 = t3904 * t4886;
t4904 = t3907 * t4001;
t4914 = t3904 * t3991;
t3629 = (t3904 * t4040 + t4043 * t4904) * t3949 + ((t3907 * t4830 + 0.2e1 * t4553) * t5054 + (-t3904 * t4118 + t3907 * t5115) * t3999 + t3972 * (-t3847 * t4914 + t3907 * t4076)) * t3973 - t3960 * t4404 + ((t3904 * t3962 - t3907 * t4303 - t3904) * t3910 - t3904 * pkin(6)) * t3999 + (t3904 * t4243 + t3907 * t4106) * t3990 + t4404;
t5004 = t3629 * t3677;
t4544 = t3908 * t4821;
t4401 = pkin(3) * t4544;
t4551 = t3905 * t4883;
t4901 = t3908 * t4004;
t4911 = t3905 * t3994;
t3630 = (t3905 * t4039 + t4042 * t4901) * t3949 + ((t3908 * t4818 + 0.2e1 * t4551) * t5053 + (-t3905 * t4117 + t3908 * t5116) * t4002 + t3972 * (-t3850 * t4911 + t3908 * t4075)) * t3973 - t3964 * t4401 + ((t3905 * t3966 - t3908 * t4301 - t3905) * t3911 - t3905 * pkin(6)) * t4002 + (t3905 * t4242 + t3908 * t4105) * t3993 + t4401;
t5003 = t3630 * t3678;
t3724 = t3942 - t4571;
t4740 = -0.2e1 * t4918;
t4262 = t5154 * t3958 * t4740;
t4565 = t5154 * t4916;
t4298 = t3845 * t4565;
t4315 = t3845 * t4554;
t4320 = t3998 * t4571;
t4568 = t3989 * t4951;
t4812 = t3998 * t4008;
t4509 = t3973 * t4812;
t4583 = (t5154 * t4509 - t3989 * t4957 / 0.2e1) * t3958 * t3972;
t4932 = t5154 * t3906;
t4942 = t3830 * t3989;
t3637 = -0.2e1 * t3903 * t4583 + (((-t3845 * t4932 + t3903 * t4320) * t3973 + t3903 * t4568) * t3972 + (t3906 * t4571 + t4298) * t3949 - t4298 + t3724 * t3906) * t3997 - t3830 * t4932 + (t3906 * t4262 + ((-t3845 * t4908 + t4565) * t3973 + t3903 * t4942) * t3972 + (t4315 + t4932) * t3949 - t4315) * t4008;
t4999 = t3637 * t3691;
t4564 = t5154 * t4907;
t4297 = t3845 * t4564;
t4314 = t3845 * t4548;
t4933 = t5154 * t3903;
t3638 = 0.2e1 * t3906 * t4583 + (((-t3845 * t4933 - t3906 * t4320) * t3973 - t3906 * t4568) * t3972 + (t3903 * t4571 - t4297) * t3949 + t4297 + t3724 * t3903) * t3997 - t3830 * t4933 + (t3903 * t4262 - ((t3845 * t4917 + t4564) * t3973 + t3906 * t4942) * t3972 - (t4314 - t4933) * t3949 + t4314) * t4008;
t4998 = t3638 * t3691;
t3725 = t3942 - t4570;
t4261 = t5153 * t3962 * t4740;
t4563 = t5153 * t4913;
t4295 = t3848 * t4563;
t4313 = t3848 * t4552;
t4318 = t4001 * t4570;
t4567 = t3992 * t4949;
t4808 = t4001 * t4008;
t4508 = t3973 * t4808;
t4582 = (t5153 * t4508 - t3992 * t4956 / 0.2e1) * t3962 * t3972;
t4929 = t5153 * t3907;
t4941 = t3831 * t3992;
t3639 = -0.2e1 * t3904 * t4582 + (((-t3848 * t4929 + t3904 * t4318) * t3973 + t3904 * t4567) * t3972 + (t3907 * t4570 + t4295) * t3949 - t4295 + t3725 * t3907) * t4000 - t3831 * t4929 + (t3907 * t4261 + ((-t3848 * t4905 + t4563) * t3973 + t3904 * t4941) * t3972 + (t4313 + t4929) * t3949 - t4313) * t4008;
t4997 = t3639 * t3693;
t4562 = t5153 * t4904;
t4294 = t3848 * t4562;
t4312 = t3848 * t4546;
t4930 = t5153 * t3904;
t3640 = 0.2e1 * t3907 * t4582 + (((-t3848 * t4930 - t3907 * t4318) * t3973 - t3907 * t4567) * t3972 + (t3904 * t4570 - t4294) * t3949 + t4294 + t3725 * t3904) * t4000 - t3831 * t4930 + (t3904 * t4261 - ((t3848 * t4914 + t4562) * t3973 + t3907 * t4941) * t3972 - (t4312 - t4930) * t3949 + t4312) * t4008;
t4996 = t3640 * t3693;
t3726 = t3942 - t4569;
t4260 = t5152 * t3966 * t4740;
t4561 = t5152 * t4910;
t4293 = t3851 * t4561;
t4311 = t3851 * t4550;
t4316 = t4004 * t4569;
t4566 = t3995 * t4947;
t4804 = t4004 * t4008;
t4507 = t3973 * t4804;
t4581 = (t5152 * t4507 - t3995 * t4955 / 0.2e1) * t3966 * t3972;
t4926 = t5152 * t3908;
t4940 = t3832 * t3995;
t3641 = -0.2e1 * t3905 * t4581 + (((-t3851 * t4926 + t3905 * t4316) * t3973 + t3905 * t4566) * t3972 + (t3908 * t4569 + t4293) * t3949 - t4293 + t3726 * t3908) * t4003 - t3832 * t4926 + (t3908 * t4260 + ((-t3851 * t4902 + t4561) * t3973 + t3905 * t4940) * t3972 + (t4311 + t4926) * t3949 - t4311) * t4008;
t4995 = t3641 * t3695;
t4560 = t5152 * t4901;
t4292 = t3851 * t4560;
t4310 = t3851 * t4544;
t4927 = t5152 * t3905;
t3642 = 0.2e1 * t3908 * t4581 + (((-t3851 * t4927 - t3908 * t4316) * t3973 - t3908 * t4566) * t3972 + (t3905 * t4569 - t4292) * t3949 + t4292 + t3726 * t3905) * t4003 - t3832 * t4927 + (t3905 * t4260 - ((t3851 * t4911 + t4560) * t3973 + t3908 * t4940) * t3972 - (t4310 - t4927) * t3949 + t4310) * t4008;
t4994 = t3642 * t3695;
t4840 = t3989 * t4008;
t3775 = t3973 * t4840 + t5060;
t3781 = -pkin(2) * t5069 - pkin(6) * t4872;
t4486 = t4852 * t4022;
t4848 = t3988 * t3989;
t4515 = t3973 * t4848;
t4813 = t3998 * t3825;
t4939 = t3845 * t3972;
t4993 = ((t3989 * t4486 + 0.2e1 * t3775 * t3913 + (t3912 + t4895) * t3998) * t3958 + (-t4515 * t3912 + ((-0.2e1 * t4721 + t4939) * t3989 + t4813) * t3913 + (pkin(2) * t4939 - t3973 * t4543) * t3989 + pkin(2) * t4813) * t3997 + (t3998 * t3830 + (t3845 * t4889 - t3973 * t5154) * t3989) * t4008) / ((pkin(1) * t4715 + t3781 * t3988) * t3996 + t4104);
t4828 = t3992 * t4008;
t3776 = t3973 * t4828 + t5058;
t4836 = t3991 * t3992;
t4513 = t3973 * t4836;
t4809 = t4001 * t3826;
t4937 = t3848 * t3972;
t4992 = ((t3992 * t4486 + 0.2e1 * t3776 * t3916 + (t3915 + t4895) * t4001) * t3962 + (-t4513 * t3915 + ((-0.2e1 * t4720 + t4937) * t3992 + t4809) * t3916 + (pkin(2) * t4937 - t3973 * t4542) * t3992 + pkin(2) * t4809) * t4000 + (t4001 * t3831 + (t3848 * t4886 - t3973 * t5153) * t3992) * t4008) / ((pkin(1) * t4714 + t3781 * t3991) * t3999 + t4103);
t4816 = t3995 * t4008;
t3777 = t3973 * t4816 + t5056;
t4824 = t3994 * t3995;
t4511 = t3973 * t4824;
t4805 = t4004 * t3827;
t4935 = t3851 * t3972;
t4991 = ((t3995 * t4486 + 0.2e1 * t3777 * t3919 + (t3918 + t4895) * t4004) * t3966 + (-t4511 * t3918 + ((-0.2e1 * t4719 + t4935) * t3995 + t4805) * t3919 + (pkin(2) * t4935 - t3973 * t4541) * t3995 + pkin(2) * t4805) * t4003 + (t4004 * t3832 + (t3851 * t4883 - t3973 * t5152) * t3995) * t4008) / ((pkin(1) * t4713 + t3781 * t3994) * t4002 + t4102);
t4712 = pkin(3) * t4849;
t4814 = t3997 * t3998;
t4865 = t3973 * t3989;
t3646 = ((-t4394 * t4865 - t4712 * t4846) * t3996 - (t5155 * t4865 + t3998 * (t3988 * t5151 - t4008 * t4899)) * t3987) * t3972 + (t3973 * t4814 + t5085 * t4848) * t5055 + (t3788 * t3998 + t3793 * t4865) * t4858 + t3989 * t3844 * t4559;
t4990 = t3646 * t3676;
t4710 = pkin(3) * t4837;
t4810 = t4000 * t4001;
t4862 = t3973 * t3992;
t3647 = ((-t4393 * t4862 - t4710 * t4834) * t3999 - (t5156 * t4862 + t4001 * (t3991 * t5150 - t4008 * t4898)) * t3990) * t3972 + (t3973 * t4810 + t5085 * t4836) * t5054 + (t3789 * t4001 + t3794 * t4862) * t4856 + t3992 * t3847 * t4558;
t4989 = t3647 * t3677;
t4708 = pkin(3) * t4825;
t4806 = t4003 * t4004;
t4859 = t3973 * t3995;
t3648 = ((-t4392 * t4859 - t4708 * t4822) * t4002 - (t5157 * t4859 + t4004 * (t3994 * t5149 - t4008 * t4897)) * t3993) * t3972 + (t3973 * t4806 + t5085 * t4824) * t5053 + (t3790 * t4004 + t3795 * t4859) * t4854 + t3995 * t3850 * t4557;
t4988 = t3648 * t3678;
t3745 = t3973 * t4845 + t4842;
t4074 = -(t3973 * t5060 + t4840) * t3988 + (-pkin(2) * t3989 + t4509) * t3997 + t3972 * t4712;
t3649 = -(t3745 * t3906 + t4555) * t5055 + (t3903 * t4065 + t3906 * t4074) * t3996 + (-t3903 * t3973 + t3906 * t4879) * t5067;
t4987 = t3649 * t3666;
t3650 = (t3745 * t3903 - t4549) * t5055 + (-t3903 * t4074 + t3906 * t4065) * t3996 - (t3903 * t4879 + t3906 * t3973) * t5067;
t4986 = t3650 * t3666;
t3746 = t3973 * t4833 + t4830;
t4073 = -(t3973 * t5058 + t4828) * t3991 + (-pkin(2) * t3992 + t4508) * t4000 + t3972 * t4710;
t3651 = -(t3746 * t3907 + t4553) * t5054 + (t3904 * t4064 + t3907 * t4073) * t3999 + (-t3904 * t3973 + t3907 * t4876) * t5065;
t4985 = t3651 * t3668;
t3652 = (t3746 * t3904 - t4547) * t5054 + (-t3904 * t4073 + t3907 * t4064) * t3999 - (t3904 * t4876 + t3907 * t3973) * t5065;
t4984 = t3652 * t3668;
t3747 = t3973 * t4821 + t4818;
t4072 = -(t3973 * t5056 + t4816) * t3994 + (-pkin(2) * t3995 + t4507) * t4003 + t3972 * t4708;
t3653 = -(t3747 * t3908 + t4551) * t5053 + (t3905 * t4063 + t3908 * t4072) * t4002 + (-t3905 * t3973 + t3908 * t4873) * t5063;
t4983 = t3653 * t3664;
t3654 = (t3747 * t3905 - t4545) * t5053 + (-t3905 * t4072 + t3908 * t4063) * t4002 - (t3905 * t4873 + t3908 * t3973) * t5063;
t4982 = t3654 * t3664;
t4519 = t3993 * t4882;
t3699 = -(-t4511 + t4806) * t5053 + (-pkin(3) * t4519 - t3777 * t4003 - t3994 * (-pkin(2) * t4859 + t4804)) * t4002 - pkin(2) * t4519;
t4981 = t3664 * t3699;
t4980 = t3665 * t4003;
t4527 = t3987 * t4888;
t3697 = -(-t4515 + t4814) * t5055 + (-pkin(3) * t4527 - t3775 * t3997 - t3988 * (-pkin(2) * t4865 + t4812)) * t3996 - pkin(2) * t4527;
t4979 = t3666 * t3697;
t4978 = t3667 * t3997;
t4523 = t3990 * t4885;
t3698 = -(-t4513 + t4810) * t5054 + (-pkin(3) * t4523 - t3776 * t4000 - t3991 * (-pkin(2) * t4862 + t4808)) * t3999 - pkin(2) * t4523;
t4977 = t3668 * t3698;
t4976 = t3669 * t4000;
t4975 = t3676 * t3988;
t4974 = t3677 * t3991;
t4973 = t3678 * t3994;
t4881 = t3972 * t3996;
t4878 = t3972 * t3999;
t4875 = t3972 * t4002;
t4870 = t3973 * t3262;
t4869 = t3973 * t3263;
t4868 = t3973 * t3264;
t4851 = t3987 * t3988;
t4839 = t3990 * t3991;
t4827 = t3993 * t3994;
t4574 = t3801 * t4891;
t4688 = t5084 * pkin(6);
t3379 = 0.2e1 * t3801 * t4653 + (t4574 - t4688) * t5002;
t4800 = (-pkin(6) * t4815 + t3797 * t3987) * t5025 + t3379 * t4612 + t5170 * t3996;
t4572 = t3805 * t4891;
t3381 = 0.2e1 * t3805 * t4638 + (t4572 - t4688) * t5000;
t4590 = t4002 * t5000;
t4799 = -t3799 * t4002 * t5019 - t3381 * t4590 + (-t5046 * t5019 + t5168) * t3993;
t4610 = t3996 * t5002;
t4798 = -t3797 * t3996 * t5025 - t3379 * t4610 + (-t5050 * t5025 + t5170) * t3987;
t4573 = t3803 * t4891;
t3380 = 0.2e1 * t3803 * t4645 + (t4573 - t4688) * t5001;
t4600 = t3999 * t5001;
t4797 = -t3798 * t3999 * t5022 - t3380 * t4600 + (-t5048 * t5022 + t5169) * t3990;
t4796 = (-pkin(6) * t4811 + t3798 * t3990) * t5022 + t3380 * t4602 + t5169 * t3999;
t4795 = (-pkin(6) * t4807 + t3799 * t3993) * t5019 + t3381 * t4592 + t5168 * t4002;
t4791 = t4776 * t3616 - 0.2e1 * t4219;
t4790 = t4775 * t3617 - 0.2e1 * t4217;
t4789 = t4774 * t3618 - 0.2e1 * t4215;
t4773 = t3622 - t3550;
t4772 = t3623 - t3552;
t4771 = t3624 - t3554;
t4743 = -0.2e1 * t3551;
t4742 = -0.2e1 * t3553;
t4741 = -0.2e1 * t3555;
t4739 = -0.2e1 * t4891;
t4736 = -0.2e1 * t4850;
t4735 = -0.2e1 * t4838;
t4734 = -0.2e1 * t4826;
t4733 = t5083 * pkin(6);
t3439 = t3550 + t3595;
t4706 = t3439 * t5052;
t3440 = t3552 + t3597;
t4705 = t3440 * t5052;
t3441 = t3554 + t3599;
t4704 = t3441 * t5052;
t3247 = t3277 + (-t4674 / 0.2e1 - t4660 / 0.2e1 + t3300 * t4497) * t3666;
t4681 = t3247 * t4889;
t3248 = t3278 + (-t4673 / 0.2e1 - t4659 / 0.2e1 + t3298 * t4496) * t3668;
t4680 = t3248 * t4886;
t3249 = t3279 + (-t4675 / 0.2e1 - t4658 / 0.2e1 + t3299 * t4495) * t3664;
t4679 = t3249 * t4883;
t4678 = t3262 * t4874;
t4677 = t3263 * t4880;
t4676 = t3264 * t4877;
t4672 = t3988 ^ 2 * t5026;
t4671 = t3280 * t4975;
t4670 = t3676 * t5024;
t4668 = t3991 ^ 2 * t5023;
t4667 = t3281 * t4974;
t4666 = t3677 * t5021;
t4664 = t3994 ^ 2 * t5020;
t4663 = t3282 * t4973;
t4662 = t3678 * t5018;
t4657 = t3676 * t5148;
t4656 = t3677 * t5147;
t4655 = t3678 * t5146;
t4654 = t3634 * t3551;
t4646 = t3635 * t3553;
t4639 = t3636 * t3555;
t4621 = t3631 * t4978;
t4619 = t3632 * t4976;
t4617 = t3633 * t4980;
t4586 = t3646 * t4975;
t4585 = t3647 * t4974;
t4584 = t3648 * t4973;
t4540 = t3958 * t3622;
t4539 = t3962 * t3623;
t4538 = t3966 * t3624;
t4528 = t3972 * t4851;
t4526 = t3972 * t4847;
t4524 = t3972 * t4839;
t4522 = t3972 * t4835;
t4520 = t3972 * t4827;
t4518 = t3972 * t4823;
t4506 = t3987 * t4847;
t4505 = t3990 * t4835;
t4504 = t3993 * t4823;
t3186 = -t3261 * t3864 * t3973 + ((-pkin(6) * t3261 - t5041) * t4003 + t3262 * t5062) * t3972 + (-0.2e1 * t4572 + t4733) * t3282;
t3369 = (-pkin(7) * t3554 + t4215 * t5109 + t3587) * t3994 + pkin(1) * t3599;
t3378 = t3587 + (pkin(1) * t3441 + t4093) * t3994;
t3399 = t3519 - t3432;
t4354 = t4002 * t3600;
t4251 = pkin(2) * t4354;
t3417 = t4636 * t5108 + t4251;
t3435 = t3543 - t3588;
t3492 = t3594 + t4422;
t4122 = t3858 * t4188;
t4374 = t3636 * t4635;
t4216 = t3664 * t4374;
t4221 = t3432 * t4324;
t4476 = t3664 * (t5162 * t3993 - t4002 * t3186 + 0.2e1 * (t3417 * t3966 + (pkin(7) * t4354 + t4636 * t5111) * t4822 - t4251 + t3993 * t3432) * t4595 + ((t3435 * t4325 - t3492 * t4634) * t4744 + (t3438 + 0.2e1 * t4221) * t4002 + t3993 * t3378) * t3973 - 0.2e1 * t3417 * t4594 + (t4122 * t5087 + t3993 * t4704 + (0.4e1 * t3993 * t4216 + t4875 * t5143) * pkin(2)) * t4003 + t3369 * t4875 + 0.2e1 * t3399 * t4592);
t4176 = t4356 / 0.2e1;
t4245 = pkin(2) * t4356;
t4395 = pkin(7) * t4634;
t4475 = t3664 * (-t5162 * t4002 - t3993 * t3186 - 0.4e1 * ((t4395 - t4245 / 0.2e1) * t3966 - (pkin(7) * t4176 + t4396) * t4822 + (t3591 / 0.2e1 - t3542 / 0.2e1) * t4002 + pkin(2) * t4176) * t4595 + ((-t3435 * t3972 * t4590 - t3492 * t4636) * t4744 - t3378 * t4002 + (-t4144 + t4221) * t5090) * t3973 + (-0.2e1 * t4245 + 0.4e1 * t4395) * t4594 + ((t4216 * t5112 - t4704) * t4002 + (t4122 + (t3554 / 0.2e1 - t3599 / 0.2e1) * t5068) * t5091) * t4003 - 0.2e1 * t3399 * t4590 + t3369 * t4884);
t3219 = t3282 * t4432 + t3282 - t4870;
t4224 = t4003 * t4388;
t3348 = t4125 * t5096 + (t4224 - t4357) * t3555;
t4300 = t4874 * t3554;
t4373 = (t3612 + t3600) * t4637;
t4474 = t3664 * (t3219 * t4734 + t4679 * t5075 + (0.2e1 * t4300 + 0.4e1 * t4373) * t3964 + 0.4e1 * t3348 * t4504 - 0.2e1 * t4373 - t4300 - 0.2e1 * t5076 * t5182);
t3258 = t3279 + t3262;
t3463 = t3618 + t3555 / 0.2e1;
t4302 = t3972 * t4504;
t4473 = t3664 * (t3219 * t3964 + 0.2e1 * t3249 * t4302 + t3258 * t3973 + (-t4373 - t4300 / 0.2e1 + t5182) * t4734 + (-t3348 * t3964 - t3463 * t4357) * t5158);
t4108 = t4188 * t4744;
t3382 = -t3972 * t5143 + t4108;
t3408 = t3972 * t4108 - t3599;
t3886 = t3966 - 0.1e1 / 0.2e1;
t4472 = t3664 * (-t4002 * t4678 + t3261 * (t4520 - t4854) + (t4002 * t4739 - t5083 * t4827) * t5018 + t3382 * t4823 + t3408 * t4861 + (t3949 * t4212 * t5087 + (t5086 * t3993 * t3886 + t4510 * t5097) * t3555) * t5000);
t4471 = t3664 * (-t3993 * t4678 - t3261 * (t4518 + t4861) + (t5083 * t4823 - 0.2e1 * t4533) * t5018 + t3382 * t4827 - t3408 * t4854 + (-((t3966 * t4741 + t3555) * t4002 + t3993 * t4212) * t3949 + t4370 * t4891 - 0.2e1 * t3886 * t4634) * t4477);
t3184 = -t3259 * t3862 * t3973 + ((-pkin(6) * t3259 - t5040) * t3997 + t3263 * t5066) * t3972 + (-0.2e1 * t4574 + t4733) * t3280;
t3367 = (-pkin(7) * t3550 + t4219 * t5109 + t3583) * t3988 + pkin(1) * t3595;
t3376 = t3583 + (pkin(1) * t3439 + t4095) * t3988;
t3397 = t3517 - t3430;
t4366 = t3996 * t3596;
t4255 = pkin(2) * t4366;
t3415 = t4651 * t5108 + t4255;
t3433 = t3534 - t3584;
t3490 = t3592 + t4424;
t4124 = t3856 * t4202;
t4384 = t3634 * t4650;
t4220 = t3666 * t4384;
t4223 = t3430 * t4340;
t4470 = t3666 * (t5164 * t3987 - t3184 * t3996 + 0.2e1 * (t3415 * t3958 + (pkin(7) * t4366 + t4651 * t5111) * t4846 - t4255 + t3987 * t3430) * t4615 + ((t3433 * t4341 - t3490 * t4649) * t4746 + (t3436 + 0.2e1 * t4223) * t3996 + t3987 * t3376) * t3973 - 0.2e1 * t3415 * t4614 + (t4124 * t5089 + t3987 * t4706 + (0.4e1 * t3987 * t4220 + t4881 * t5145) * pkin(2)) * t3997 + t3367 * t4881 + 0.2e1 * t3397 * t4612);
t4178 = t4368 / 0.2e1;
t4247 = pkin(2) * t4368;
t4399 = pkin(7) * t4649;
t4469 = t3666 * (-t5164 * t3996 - t3184 * t3987 - 0.4e1 * ((t4399 - t4247 / 0.2e1) * t3958 - (pkin(7) * t4178 + t4400) * t4846 + (t3589 / 0.2e1 - t3533 / 0.2e1) * t3996 + pkin(2) * t4178) * t4615 + ((-t3433 * t3972 * t4610 - t3490 * t4651) * t4746 - t3376 * t3996 + (-t4146 + t4223) * t5094) * t3973 + (-0.2e1 * t4247 + 0.4e1 * t4399) * t4614 + ((t4220 * t5112 - t4706) * t3996 + (t4124 + (t3550 / 0.2e1 - t3595 / 0.2e1) * t5068) * t5095) * t3997 - 0.2e1 * t3397 * t4610 + t3367 * t4890);
t3217 = t3280 * t4434 + t3280 - t4869;
t4226 = t3997 * t4390;
t3346 = t4127 * t5096 + (t4226 - t4369) * t3551;
t4299 = t4880 * t3550;
t4383 = (t3610 + t3596) * t4652;
t4468 = t3666 * (t3217 * t4736 + t4681 * t5081 + (0.2e1 * t4299 + 0.4e1 * t4383) * t3956 + 0.4e1 * t3346 * t4506 - 0.2e1 * t4383 - t4299 - 0.2e1 * t5082 * t5180);
t3254 = t3277 + t3263;
t3461 = t3616 + t3551 / 0.2e1;
t4306 = t3972 * t4506;
t4467 = t3666 * (t3217 * t3956 + 0.2e1 * t3247 * t4306 + t3254 * t3973 + (-t4383 - t4299 / 0.2e1 + t5180) * t4736 + (-t3346 * t3956 - t3461 * t4369) * t5160);
t4110 = t4202 * t4746;
t3383 = -t3972 * t5145 + t4110;
t3406 = t3972 * t4110 - t3595;
t3884 = t3958 - 0.1e1 / 0.2e1;
t4466 = t3666 * (-t3996 * t4677 + t3259 * (t4528 - t4858) + (t3996 * t4739 - t5083 * t4851) * t5024 + t3383 * t4847 + t3406 * t4867 + (t3949 * t4214 * t5089 + (t5086 * t3987 * t3884 + t4514 * t5097) * t3551) * t5002);
t4465 = t3666 * (-t3987 * t4677 - t3259 * (t4526 + t4867) + (t5083 * t4847 - 0.2e1 * t4537) * t5024 + t3383 * t4851 - t3406 * t4858 + (-((t3958 * t4743 + t3551) * t3996 + t3987 * t4214) * t3949 + t4380 * t4891 - 0.2e1 * t3884 * t4649) * t4479);
t3185 = -t3260 * t3863 * t3973 + ((-pkin(6) * t3260 - t5039) * t4000 + t3264 * t5064) * t3972 + (-0.2e1 * t4573 + t4733) * t3281;
t3368 = (-pkin(7) * t3552 + t4217 * t5109 + t3585) * t3991 + pkin(1) * t3597;
t3377 = t3585 + (pkin(1) * t3440 + t4094) * t3991;
t3398 = t3518 - t3431;
t4360 = t3999 * t3598;
t4253 = pkin(2) * t4360;
t3416 = t4644 * t5108 + t4253;
t3434 = t3539 - t3586;
t3491 = t3593 + t4423;
t4123 = t3857 * t4195;
t4379 = t3635 * t4643;
t4218 = t3668 * t4379;
t4222 = t3431 * t4332;
t4464 = t3668 * (t5163 * t3990 - t3185 * t3999 + 0.2e1 * (t3416 * t3962 + (pkin(7) * t4360 + t4644 * t5111) * t4834 - t4253 + t3990 * t3431) * t4605 + ((t3434 * t4333 - t3491 * t4642) * t4745 + (t3437 + 0.2e1 * t4222) * t3999 + t3990 * t3377) * t3973 - 0.2e1 * t3416 * t4604 + (t4123 * t5088 + t3990 * t4705 + (0.4e1 * t3990 * t4218 + t4878 * t5144) * pkin(2)) * t4000 + t3368 * t4878 + 0.2e1 * t3398 * t4602);
t4177 = t4362 / 0.2e1;
t4246 = pkin(2) * t4362;
t4397 = pkin(7) * t4642;
t4463 = t3668 * (-t5163 * t3999 - t3185 * t3990 - 0.4e1 * ((t4397 - t4246 / 0.2e1) * t3962 - (pkin(7) * t4177 + t4398) * t4834 + (t3590 / 0.2e1 - t3538 / 0.2e1) * t3999 + pkin(2) * t4177) * t4605 + ((-t3434 * t3972 * t4600 - t3491 * t4644) * t4745 - t3377 * t3999 + (-t4145 + t4222) * t5092) * t3973 + (-0.2e1 * t4246 + 0.4e1 * t4397) * t4604 + ((t4218 * t5112 - t4705) * t3999 + (t4123 + (t3552 / 0.2e1 - t3597 / 0.2e1) * t5068) * t5093) * t4000 - 0.2e1 * t3398 * t4600 + t3368 * t4887);
t3218 = t3281 * t4433 + t3281 - t4868;
t4225 = t4000 * t4389;
t3347 = t4126 * t5096 + (t4225 - t4363) * t3553;
t4296 = t4877 * t3552;
t4378 = (t3611 + t3598) * t4516;
t4462 = t3668 * (t3218 * t4735 + t4680 * t5078 + (0.2e1 * t4296 + 0.4e1 * t4378) * t3960 + 0.4e1 * t3347 * t4505 - 0.2e1 * t4378 - t4296 - 0.2e1 * t5079 * t5181);
t3256 = t3278 + t3264;
t3462 = t3617 + t3553 / 0.2e1;
t4304 = t3972 * t4505;
t4461 = t3668 * (t3218 * t3960 + 0.2e1 * t3248 * t4304 + t3256 * t3973 + (-t4378 - t4296 / 0.2e1 + t5181) * t4735 + (-t3347 * t3960 - t3462 * t4363) * t5159);
t4109 = t4195 * t4745;
t3384 = -t3972 * t5144 + t4109;
t3407 = t3972 * t4109 - t3597;
t3885 = t3962 - 0.1e1 / 0.2e1;
t4460 = t3668 * (-t3999 * t4676 + t3260 * (t4524 - t4856) + (t3999 * t4739 - t5083 * t4839) * t5021 + t3384 * t4835 + t3407 * t4864 + (t3949 * t4213 * t5088 + (t5086 * t3990 * t3885 + t4512 * t5097) * t3553) * t5001);
t4459 = t3668 * (-t3990 * t4676 - t3260 * (t4522 + t4864) + (t5083 * t4835 - 0.2e1 * t4535) * t5021 + t3384 * t4839 - t3407 * t4856 + (-((t3962 * t4742 + t3553) * t3999 + t3990 * t4213) * t3949 + t4375 * t4891 - 0.2e1 * t3885 * t4642) * t4478);
t4458 = t3676 * (t3987 * t5179 + t3996 * t5176);
t4457 = t3676 * (t3987 * t5176 - t3996 * t5179);
t3445 = t4226 + 0.2e1 * t4369;
t4338 = t3988 * t4610;
t4456 = t3676 * (0.2e1 * t3254 * t4850 + t5082 * t4669 + ((t4621 * t5098 + 0.4e1 * t4202) * t3973 + 0.4e1 * t4219) * t3956 + t3445 * t4338 * t5095 + t4791);
t4455 = t3677 * (t3990 * t5178 + t3999 * t5175);
t4454 = t3677 * (t3990 * t5175 - t3999 * t5178);
t3446 = t4225 + 0.2e1 * t4363;
t4330 = t3991 * t4600;
t4453 = t3677 * (0.2e1 * t3256 * t4838 + t4665 * t5079 + ((t4619 * t5098 + 0.4e1 * t4195) * t3973 + 0.4e1 * t4217) * t3960 + t3446 * t4330 * t5093 + t4790);
t4452 = t3678 * (t3993 * t5177 + t4002 * t5174);
t4451 = t3678 * (t3993 * t5174 - t4002 * t5177);
t3447 = t4224 + 0.2e1 * t4357;
t4322 = t3994 * t4590;
t4450 = t3678 * (0.2e1 * t3258 * t4826 + t4661 * t5076 + ((t4617 * t5098 + 0.4e1 * t4188) * t3973 + 0.4e1 * t4215) * t3964 + t3447 * t4322 * t5091 + t4789);
t4449 = t3691 * t4800;
t4448 = t3691 * t4798;
t4447 = t3693 * t4797;
t4446 = t3693 * t4796;
t4445 = t3695 * t4799;
t4444 = t3695 * t4795;
t4440 = 0.2e1 * t4540;
t4439 = 0.2e1 * t4539;
t4438 = 0.2e1 * t4538;
t4351 = t3676 * t4622;
t4350 = t3676 * t4621;
t4349 = t3677 * t4620;
t4348 = t3677 * t4619;
t4347 = t3678 * t4618;
t4346 = t3678 * t4617;
t4345 = t3691 * t4609;
t4337 = t3693 * t4599;
t4329 = t3695 * t4589;
t3232 = t3254 * t3987 + t3280 * t4526;
t4235 = t3676 * (t3232 * t3987 - t4791 * t4850 + (t3445 * t3956 - t4369) * t4611);
t3613 = -0.2e1 * t4540;
t3556 = -t3622 + t4440;
t4047 = t3556 * t3949 + t3406 + t3622;
t4234 = t3676 * ((t3613 + t4047) * t3987 + t5173 * t3996);
t4233 = t3676 * ((-t4047 + t4440) * t3996 + t5173 * t3987);
t3233 = t3256 * t3990 + t3281 * t4522;
t4232 = t3677 * (t3233 * t3990 - t4790 * t4838 + (t3446 * t3960 - t4363) * t4601);
t3614 = -0.2e1 * t4539;
t3557 = -t3623 + t4439;
t4046 = t3557 * t3949 + t3407 + t3623;
t4231 = t3677 * ((t3614 + t4046) * t3990 + t5172 * t3999);
t4230 = t3677 * ((-t4046 + t4439) * t3999 + t5172 * t3990);
t3234 = t3258 * t3993 + t3282 * t4518;
t4229 = t3678 * (t3234 * t3993 - t4789 * t4826 + (t3447 * t3964 - t4357) * t4591);
t3615 = -0.2e1 * t4538;
t3558 = -t3624 + t4438;
t4045 = t3558 * t3949 + t3408 + t3624;
t4228 = t3678 * ((t3615 + t4045) * t3993 + t5171 * t4002);
t4227 = t3678 * ((-t4045 + t4438) * t4002 + t5171 * t3993);
t4211 = t3988 * t4350;
t4209 = t3991 * t4348;
t4207 = t3994 * t4346;
t4205 = t3637 * t4345;
t4204 = t3638 * t4345;
t4203 = t4609 * t4993;
t4198 = t3639 * t4337;
t4197 = t3640 * t4337;
t4196 = t4599 * t4992;
t4191 = t3641 * t4329;
t4190 = t3642 * t4329;
t4189 = t4589 * t4991;
t3250 = t4870 / 0.2e1 + t3282;
t3465 = t4637 / 0.2e1 + t5000;
t4134 = t3664 * ((-t3463 * t4698 + t3465 * t3935) * t4741 - 0.2e1 * t3249 * t4695 - 0.2e1 * t3250 * t3929);
t4133 = t3664 * ((t3463 * t4695 + t3465 * t3929) * t4741 + t4679 * t5110 + 0.2e1 * t3250 * t3935);
t3251 = t4869 / 0.2e1 + t3280;
t3464 = t4652 / 0.2e1 + t5002;
t4132 = t3666 * ((-t3461 * t4700 + t3464 * t3931) * t4743 - 0.2e1 * t3247 * t4697 - 0.2e1 * t3251 * t3927);
t4131 = t3666 * ((t3461 * t4697 + t3464 * t3927) * t4743 + t4681 * t5110 + 0.2e1 * t3251 * t3931);
t3252 = t4868 / 0.2e1 + t3281;
t3460 = t4516 / 0.2e1 + t5001;
t4130 = t3668 * ((t3460 * t3933 - t3462 * t4699) * t4742 - 0.2e1 * t3248 * t4696 - 0.2e1 * t3252 * t3928);
t4129 = t3668 * ((t3460 * t3928 + t3462 * t4696) * t4742 + t4680 * t5110 + 0.2e1 * t3252 * t3933);
t4089 = t3676 * (-t3280 * t3761 + t3622 * (t3931 - t4421));
t4088 = t3676 * (t3280 * (pkin(1) * t4857 - t4700) + t3622 * t5139);
t4087 = t3677 * (-t3281 * t3762 + t3623 * (t3933 - t4420));
t4086 = t3677 * (t3281 * (pkin(1) * t4855 - t4699) + t3623 * t5138);
t4085 = t3678 * (-t3282 * t3760 + t3624 * (t3935 - t4419));
t4084 = t3678 * (t3282 * (pkin(1) * t4853 - t4698) + t3624 * t5137);
t3257 = 0.2e1 * t3279 + t3262;
t3472 = 0.2e1 * t3618 + t3555;
t4083 = t3664 * (t3472 * t3555 * t4003 + t3257 * t3994);
t4082 = t3664 * (t3257 * t4003 - t3472 * t4635);
t3253 = 0.2e1 * t3277 + t3263;
t3466 = 0.2e1 * t3616 + t3551;
t4081 = t3666 * (t3466 * t3551 * t3997 + t3253 * t3988);
t4080 = t3666 * (t3253 * t3997 - t3466 * t4650);
t3255 = 0.2e1 * t3278 + t3264;
t3469 = 0.2e1 * t3617 + t3553;
t4079 = t3668 * (t3469 * t3553 * t4000 + t3255 * t3991);
t4078 = t3668 * (t3255 * t4000 - t3469 * t4643);
t4059 = 0.4e1 * t3667 * t3884 * t4654 + 0.2e1 * t4846 * t5026;
t4058 = 0.2e1 * t4384 * t4978 + t4672;
t4057 = 0.4e1 * t3669 * t3885 * t4646 + 0.2e1 * t4834 * t5023;
t4056 = 0.2e1 * t4379 * t4976 + t4668;
t4055 = 0.4e1 * t3665 * t3886 * t4639 + 0.2e1 * t4822 * t5020;
t4054 = 0.2e1 * t4374 * t4980 + t4664;
t3947 = t3972 ^ 2;
t3473 = t3618 + 0.2e1 * t3555;
t3470 = t3617 + 0.2e1 * t3553;
t3467 = t3616 + 0.2e1 * t3551;
t3414 = t3473 * t3993 + t3972 * t4322;
t3413 = t3470 * t3990 + t3972 * t4330;
t3412 = t3467 * t3987 + t3972 * t4338;
t3411 = t3473 * t4002 - t4187;
t3410 = t3470 * t3999 - t4194;
t3409 = t3467 * t3996 - t4201;
t3333 = (t3624 * t4432 - 0.2e1 * t4179 + t4771) * t4826 - t5076 * t3474 * t4324;
t3332 = (t3623 * t4433 - 0.2e1 * t4180 + t4772) * t4838 - t5079 * t3471 * t4332;
t3331 = (t3622 * t4434 - 0.2e1 * t4181 + t4773) * t4850 - t5082 * t3468 * t4340;
t3318 = (-0.2e1 * t3554 + t3615 + 0.2e1 * t3624) * t3964 + (0.4e1 * t3474 * t4302 - t4637 * t5075) * t5000 + (t4919 * t5076 + t3966) * t3624 - t4771;
t3317 = (-0.2e1 * t3552 + t3614 + 0.2e1 * t3623) * t3960 + (0.4e1 * t3471 * t4304 - t4516 * t5078) * t5001 + (t4920 * t5079 + t3962) * t3623 - t4772;
t3316 = (-0.2e1 * t3550 + t3613 + 0.2e1 * t3622) * t3956 + (0.4e1 * t3468 * t4306 - t4652 * t5081) * t5002 + (t5082 * t4921 + t3958) * t3622 - t4773;
t3231 = t3258 * t4002 - t3282 * t4520;
t3230 = t3256 * t3999 - t3281 * t4524;
t3229 = t3254 * t3996 - t3280 * t4528;
t1 = [t3280 * t4987 + t3281 * t4985 + t3282 * t4983, 0, 0, (-t3628 * t4211 - t3629 * t4209 - t3630 * t4207 + t3649 * t4058 + t3651 * t4056 + t3653 * t4054) * t3947, (-t3556 * t5005 - t3557 * t5004 - t3558 * t5003 + t3649 * t4059 + t3651 * t4057 + t3653 * t4055) * t3947, (t3628 * t4671 + t3629 * t4667 + t3630 * t4663 + t3653 * t4083 + t3651 * t4079 + t3649 * t4081 + (-t3628 * t4350 - t3629 * t4348 - t3630 * t4346) * t3973) * t3972, (t3628 * t4670 + t3629 * t4666 + t3630 * t4662 + t3653 * t4082 + t3651 * t4078 + t3649 * t4080 + (t3628 * t4351 + t3629 * t4349 + t3630 * t4347) * t3973) * t3972, t3254 * t5005 + t3256 * t5004 + t3258 * t5003 + (t3254 * t4987 + t3256 * t4985 + t3258 * t4983) * t3973, t3628 * t4088 + t3629 * t4086 + t3630 * t4084 + t3649 * t4131 + t3651 * t4129 + t3653 * t4133, t3628 * t4089 + t3629 * t4087 + t3630 * t4085 + t3649 * t4132 + t3651 * t4130 + t3653 * t4134, t3653 * t4473 + t3651 * t4461 + t3649 * t4467 + t3630 * t4229 + t3629 * t4232 + t3628 * t4235 + (t3331 * t4998 + t3332 * t4996 + t3333 * t4994) * t4028, t3653 * t4474 + t3651 * t4462 + t3649 * t4468 + t3630 * t4450 + t3629 * t4453 + t3628 * t4456 + (t3316 * t4998 + t3317 * t4996 + t3318 * t4994) * t4028, t3653 * t4471 + t3651 * t4459 + t3649 * t4465 + t3630 * t4227 + t3629 * t4230 + t3628 * t4233 + (t3232 * t4998 + t3233 * t4996 + t3234 * t4994 + (t3409 * t4204 + t3410 * t4197 + t3411 * t4190) * t3972) * t4028, t3653 * t4472 + t3651 * t4460 + t3649 * t4466 + t3630 * t4228 + t3629 * t4231 + t3628 * t4234 + (t3229 * t4998 + t3230 * t4996 + t3231 * t4994 + (-t3412 * t4204 - t3413 * t4197 - t3414 * t4190) * t3972) * t4028, (-t3238 * t4998 - t3239 * t4996 - t3240 * t4994) * t4028 + ((t3651 * t5031 + (t3629 * t4656 + (t3640 * t4597 + t3651 * t5106) * t3553) * t3991) * t3668 + (t3649 * t5032 + (t3628 * t4657 + (t3638 * t4607 + t3649 * t5107) * t3551) * t3988) * t3666 + (t3653 * t5030 + (t3630 * t4655 + (t3642 * t4587 + t3653 * t5105) * t3555) * t3994) * t3664) * t3972, t3653 * t4475 + t3651 * t4463 + t3649 * t4469 + t3630 * t4451 + t3629 * t4454 + t3628 * t4457 + (t3638 * t4448 + t3640 * t4447 + t3642 * t4445) * t4028, t3653 * t4476 + t3651 * t4464 + t3649 * t4470 + t3630 * t4452 + t3629 * t4455 + t3628 * t4458 + (t3638 * t4449 + t3640 * t4446 + t3642 * t4444) * t4028, 0; t3280 * t4986 + t3281 * t4984 + t3282 * t4982, 0, 0, (-t3625 * t4211 - t3626 * t4209 - t3627 * t4207 + t3650 * t4058 + t3652 * t4056 + t3654 * t4054) * t3947, (-t3556 * t5008 - t3557 * t5007 - t3558 * t5006 + t3650 * t4059 + t3652 * t4057 + t3654 * t4055) * t3947, (t3625 * t4671 + t3626 * t4667 + t3627 * t4663 + t3654 * t4083 + t3652 * t4079 + t3650 * t4081 + (-t3625 * t4350 - t3626 * t4348 - t3627 * t4346) * t3973) * t3972, (t3625 * t4670 + t3626 * t4666 + t3627 * t4662 + t3654 * t4082 + t3652 * t4078 + t3650 * t4080 + (t3625 * t4351 + t3626 * t4349 + t3627 * t4347) * t3973) * t3972, t3254 * t5008 + t3256 * t5007 + t3258 * t5006 + (t3254 * t4986 + t3256 * t4984 + t3258 * t4982) * t3973, t3625 * t4088 + t3626 * t4086 + t3627 * t4084 + t3650 * t4131 + t3652 * t4129 + t3654 * t4133, t3625 * t4089 + t3626 * t4087 + t3627 * t4085 + t3650 * t4132 + t3652 * t4130 + t3654 * t4134, t3654 * t4473 + t3652 * t4461 + t3650 * t4467 + t3627 * t4229 + t3626 * t4232 + t3625 * t4235 + (t3331 * t4999 + t3332 * t4997 + t3333 * t4995) * t4028, t3654 * t4474 + t3652 * t4462 + t3650 * t4468 + t3627 * t4450 + t3626 * t4453 + t3625 * t4456 + (t3316 * t4999 + t3317 * t4997 + t3318 * t4995) * t4028, t3654 * t4471 + t3652 * t4459 + t3650 * t4465 + t3627 * t4227 + t3626 * t4230 + t3625 * t4233 + (t3232 * t4999 + t3233 * t4997 + t3234 * t4995 + (t3409 * t4205 + t3410 * t4198 + t3411 * t4191) * t3972) * t4028, t3654 * t4472 + t3652 * t4460 + t3650 * t4466 + t3627 * t4228 + t3626 * t4231 + t3625 * t4234 + (t3229 * t4999 + t3230 * t4997 + t3231 * t4995 + (-t3412 * t4205 - t3413 * t4198 - t3414 * t4191) * t3972) * t4028, (-t3238 * t4999 - t3239 * t4997 - t3240 * t4995) * t4028 + ((t3652 * t5031 + (t3626 * t4656 + (t3639 * t4597 + t3652 * t5106) * t3553) * t3991) * t3668 + (t3650 * t5032 + (t3625 * t4657 + (t3637 * t4607 + t3650 * t5107) * t3551) * t3988) * t3666 + (t3654 * t5030 + (t3627 * t4655 + (t3641 * t4587 + t3654 * t5105) * t3555) * t3994) * t3664) * t3972, t3654 * t4475 + t3652 * t4463 + t3650 * t4469 + t3627 * t4451 + t3626 * t4454 + t3625 * t4457 + (t3637 * t4448 + t3639 * t4447 + t3641 * t4445) * t4028, t3654 * t4476 + t3652 * t4464 + t3650 * t4470 + t3627 * t4452 + t3626 * t4455 + t3625 * t4458 + (t3637 * t4449 + t3639 * t4446 + t3641 * t4444) * t4028, 0; t3280 * t4979 + t3281 * t4977 + t3282 * t4981, 0, 0, (t3697 * t4672 + t3698 * t4668 + t3699 * t4664 + (-t3632 * t4989 + 0.2e1 * t3698 * t4646) * t3669 * t4834 + (-t3631 * t4990 + 0.2e1 * t3697 * t4654) * t3667 * t4846 + (-t3633 * t4988 + 0.2e1 * t3699 * t4639) * t3665 * t4822) * t3947, (-t3556 * t4990 - t3557 * t4989 - t3558 * t4988 + t3697 * t4059 + t3698 * t4057 + t3699 * t4055) * t3947, (t3280 * t4586 + t3281 * t4585 + t3282 * t4584 + t3698 * t4079 + t3697 * t4081 + t3699 * t4083 + (-t3646 * t4350 - t3647 * t4348 - t3648 * t4346) * t3973) * t3972, (t3646 * t4670 + t3647 * t4666 + t3648 * t4662 + t3698 * t4078 + t3697 * t4080 + t3699 * t4082 + (t3646 * t4351 + t3647 * t4349 + t3648 * t4347) * t3973) * t3972, t3254 * t4990 + t3256 * t4989 + t3258 * t4988 + (t3254 * t4979 + t3256 * t4977 + t3258 * t4981) * t3973, t3646 * t4088 + t3647 * t4086 + t3648 * t4084 + t3697 * t4131 + t3698 * t4129 + t3699 * t4133, t3646 * t4089 + t3647 * t4087 + t3648 * t4085 + t3697 * t4132 + t3698 * t4130 + t3699 * t4134, t3698 * t4461 + t3697 * t4467 + t3699 * t4473 + t3648 * t4229 + t3647 * t4232 + t3646 * t4235 + (-t3331 * t4993 - t3332 * t4992 - t3333 * t4991) * t4871, t3698 * t4462 + t3697 * t4468 + t3699 * t4474 + t3648 * t4450 + t3647 * t4453 + t3646 * t4456 + (-t3316 * t4993 - t3317 * t4992 - t3318 * t4991) * t4871, t3698 * t4459 + t3697 * t4465 + t3699 * t4471 + t3648 * t4227 + t3647 * t4230 + t3646 * t4233 + ((-t3232 * t4993 - t3233 * t4992 - t3234 * t4991) * t3972 + (-t3409 * t4203 - t3410 * t4196 - t3411 * t4189) * t3947) * t4028, t3698 * t4460 + t3697 * t4466 + t3699 * t4472 + t3648 * t4228 + t3647 * t4231 + t3646 * t4234 + ((-t3229 * t4993 - t3230 * t4992 - t3231 * t4991) * t3972 + (t3412 * t4203 + t3413 * t4196 + t3414 * t4189) * t3947) * t4028, (-t4216 * t4991 - t4218 * t4992 - t4220 * t4993) * t4028 * t3947 + ((t3238 * t4993 + t3239 * t4992 + t3240 * t4991) * t4028 + (t4585 * t5147 + (t4643 * t5106 + t5031) * t3698) * t3668 + (t4586 * t5148 + (t4650 * t5107 + t5032) * t3697) * t3666 + (t4584 * t5146 + (t4635 * t5105 + t5030) * t3699) * t3664) * t3972, t3698 * t4463 + t3697 * t4469 + t3699 * t4475 + t3648 * t4451 + t3647 * t4454 + t3646 * t4457 + (-t4797 * t4992 - t4798 * t4993 - t4799 * t4991) * t4871, t3698 * t4464 + t3697 * t4470 + t3699 * t4476 + t3648 * t4452 + t3647 * t4455 + t3646 * t4458 + (-t4795 * t4991 - t4796 * t4992 - t4800 * t4993) * t4871, 0;];
tau_reg  = t1;
