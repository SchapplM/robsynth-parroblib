% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR10V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 02:06
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G2A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 00:59:44
% EndTime: 2020-08-07 01:03:17
% DurationCPUTime: 225.46s
% Computational Cost: add. (1798122->2274), mult. (3398511->3351), div. (46377->25), fcn. (2774931->26), ass. (0->1282)
t3157 = pkin(8) + pkin(7);
t3082 = pkin(1) * t3157;
t3136 = sin(qJ(2,1));
t3144 = cos(qJ(3,1));
t3062 = t3144 * pkin(3);
t3095 = pkin(2) + t3157;
t3096 = pkin(2) - t3157;
t3830 = (t3062 + t3095) * (t3062 + t3096);
t3486 = t3136 * t3830;
t2817 = t3082 - t3486;
t3070 = pkin(1) * t3136;
t2964 = t3157 + t3070;
t3135 = sin(qJ(3,1));
t3054 = t3135 * pkin(3);
t2987 = t3054 + pkin(6);
t3128 = legFrame(1,2);
t3040 = sin(t3128);
t3043 = cos(t3128);
t3115 = cos(pkin(4));
t3092 = t3115 ^ 2;
t3114 = sin(pkin(4));
t3145 = cos(qJ(2,1));
t3108 = t3145 ^ 2;
t3782 = (t3115 + 0.1e1) * (t3115 - 0.1e1);
t3474 = t3108 * t3782;
t3387 = -0.2e1 * t3474;
t4071 = t3062 + pkin(2);
t3292 = t4071 * t3387;
t3146 = cos(qJ(1,1));
t3776 = t3040 * t3146;
t3478 = t4071 * t3776;
t3317 = t2987 * t3478;
t3706 = t3136 * t3146;
t3463 = t3040 * t3706;
t3329 = t2987 * t3463;
t3334 = t3146 * t3486;
t3158 = 0.2e1 * t3157;
t3705 = t3136 * t3158;
t2948 = pkin(1) + t3705;
t3137 = sin(qJ(1,1));
t3483 = t2948 * t4071 * t3137;
t3693 = t3146 * t3157;
t3440 = t3115 * t3693;
t3492 = (t4071 * t3440 - t3137 * t3830 / 0.2e1) * t3108 * t3114;
t3771 = t3043 * t3136;
t3800 = t4071 * t3043;
t3817 = t2964 * t3137;
t2740 = -0.2e1 * t3040 * t3492 + (((-t2987 * t3800 + t3040 * t3334) * t3115 + t3040 * t3483) * t3114 + (t3043 * t3486 + t3317) * t3092 - t3317 + t2817 * t3043) * t3145 - t2964 * t3800 + (t3043 * t3292 + ((-t2987 * t3771 + t3478) * t3115 + t3040 * t3817) * t3114 + (t3329 + t3800) * t3092 - t3329) * t3157;
t3770 = t3043 * t3146;
t3477 = t4071 * t3770;
t3316 = t2987 * t3477;
t3457 = t3043 * t3706;
t3328 = t2987 * t3457;
t3777 = t3040 * t3136;
t3801 = t4071 * t3040;
t2741 = 0.2e1 * t3043 * t3492 + (((-t2987 * t3801 - t3043 * t3334) * t3115 - t3043 * t3483) * t3114 + (t3040 * t3486 - t3316) * t3092 + t3316 + t2817 * t3040) * t3145 - t2964 * t3801 + (t3040 * t3292 - ((t2987 * t3777 + t3477) * t3115 + t3043 * t3817) * t3114 - (t3328 - t3801) * t3092 + t3328) * t3157;
t3949 = pkin(6) * t3144;
t3970 = pkin(2) * t3135;
t2905 = t3949 - t3970;
t3733 = t3115 * t3144;
t3579 = pkin(1) * t3733;
t3799 = t4071 * t3114;
t3732 = t3115 * t3157;
t2955 = pkin(1) * t3732;
t3820 = t2955 * t3144;
t4092 = t3136 * t4071;
t3234 = -t3579 * t4092 + (-t2905 * t3799 + t3820) * t3145;
t3685 = t3157 * t3136;
t2789 = 0.1e1 / ((pkin(1) * t3135 * t4071 - t2905 * t3685) * t3114 + t3234);
t3154 = xDP(3);
t3183 = 0.1e1 / pkin(3);
t3745 = t3114 * t3183;
t3446 = t3154 * t3745;
t3156 = xDP(1);
t3691 = t3156 * t3183;
t3155 = xDP(2);
t3692 = t3155 * t3183;
t3702 = t3137 * t3157;
t3963 = pkin(2) * t3146;
t2864 = t3115 * t3702 + t3963;
t3746 = t3114 * t3157;
t3982 = pkin(1) * t3115;
t2865 = -pkin(2) * t3982 - pkin(6) * t3746;
t3029 = pkin(1) * t3054;
t3106 = t3144 ^ 2;
t3182 = pkin(3) ^ 2;
t3061 = t3106 * t3182;
t2988 = t3054 - pkin(6);
t3184 = pkin(2) ^ 2;
t3760 = t3106 * t3136;
t3535 = pkin(3) * t3760;
t2945 = t3685 + pkin(1);
t3570 = t2945 * t3970;
t3954 = pkin(3) * t3106;
t3621 = pkin(6) * t3954;
t3964 = pkin(2) * t3144;
t3219 = -t3535 * t3982 + (t3820 + (t2988 * t3964 + t3135 * t3184 - t3621) * t3114) * t3145 + t3114 * t3570;
t3177 = 0.2e1 * pkin(2);
t3413 = t3732 * t3177;
t3708 = t3136 * t3137;
t3443 = t3115 * t3708;
t3766 = t3095 * t3096;
t3453 = t3115 * t3766;
t3737 = t3115 * t3136;
t3567 = pkin(2) * t3737;
t3694 = t3146 * t2948;
t3754 = t3114 * t3136;
t3808 = t2987 * t3114;
t3851 = ((t3137 * t3413 + 0.2e1 * t2864 * t3062 + (t3061 + t3766) * t3146) * t3108 + (-t3443 * t3061 + ((-0.2e1 * t3567 + t3808) * t3137 + t3694) * t3062 + (pkin(2) * t3808 - t3136 * t3453) * t3137 + pkin(2) * t3694) * t3145 + (t3146 * t2964 + (t2987 * t3754 - t3115 * t4071) * t3137) * t3157) / ((t2865 * t3136 + t3029 * t3114) * t3144 + t3219);
t2702 = -t3446 * t3851 + (t2740 * t3692 + t2741 * t3691) * t2789;
t2696 = pkin(1) * t2702;
t2986 = pkin(6) * t3135 + pkin(3);
t3032 = t3108 - 0.2e1;
t3783 = t3032 * t3135;
t3350 = pkin(3) * t3783 - pkin(6);
t3010 = t3157 * t3145;
t2927 = t3136 * t3010;
t3063 = t3108 * pkin(2);
t3647 = t2927 + t3063;
t4076 = -pkin(2) + t3647;
t3193 = -t3135 * t4076 - t3144 * t3350;
t3711 = t3135 * t3146;
t3212 = t4076 * t3711;
t3707 = t3136 * t3145;
t3564 = pkin(2) * t3707;
t3245 = -t3108 * t3157 + t3564;
t2832 = t3245 + t2964;
t3753 = t3114 * t3137;
t3222 = pkin(6) * t3706 - t2832 * t3753;
t3969 = pkin(2) * t3136;
t2892 = t3010 - t3969;
t3237 = t3114 * t2892;
t3282 = t2945 * t3145 + t3063;
t3703 = t3137 * t3145;
t3325 = t3703 * t3754;
t3359 = pkin(3) * t3463;
t3458 = t3043 * t3754;
t3067 = pkin(2) * t3145;
t3644 = t3685 + t3067;
t2883 = pkin(1) + t3644;
t3747 = t3114 * t3146;
t4029 = t3137 * t2883 + t3350 * t3747;
t3630 = 0.2e1 * t3954;
t4030 = t3136 * (-t2986 + t3630 + t3964) - t3144 * t3010;
t2732 = (t3193 * t3043 - t3776 * t4030) * t3092 + (-(t3040 * t3703 - 0.2e1 * t3458) * t3954 + (-t3040 * t4029 - t3043 * t3237) * t3144 - (t2986 * t3771 + t3040 * t3212) * t3114) * t3115 + t3106 * t3359 + ((t3040 * t3325 + t3043 * t3108 - t3043) * t3054 - t3043 * pkin(6)) * t3144 + (-t3040 * t3222 + t3043 * t3282) * t3135 - t3359;
t3358 = pkin(3) * t3457;
t3464 = t3040 * t3754;
t2735 = (t3193 * t3040 + t3770 * t4030) * t3092 + ((t3043 * t3703 + 0.2e1 * t3464) * t3954 + (-t3040 * t3237 + t3043 * t4029) * t3144 + t3114 * (-t2986 * t3777 + t3043 * t3212)) * t3115 - t3106 * t3358 + ((t3040 * t3108 - t3043 * t3325 - t3040) * t3054 - t3040 * pkin(6)) * t3144 + (t3040 * t3282 + t3043 * t3222) * t3135 + t3358;
t2994 = t3067 + pkin(1);
t3470 = t3136 * t3782;
t3561 = pkin(3) * t3711;
t3695 = t3145 * t3146;
t3736 = t3115 * t3137;
t3767 = (t3145 + 0.1e1) * (t3145 - 0.1e1);
t4014 = -0.2e1 * t3092;
t3997 = t4014 + 0.1e1;
t2759 = ((-t3350 * t3736 - t3561 * t3707) * t3144 - (t4076 * t3736 + t3146 * (t2994 * t3136 - t3157 * t3767)) * t3135) * t3114 + (t3115 * t3695 + t3708 * t3997) * t3954 + (t2883 * t3146 + t2892 * t3736) * t3733 + t3137 * t2986 * t3470;
t2810 = (t3010 - t4092) * t3579;
t2820 = -pkin(6) * t3644 + t2994 * t3054;
t2839 = t2883 * t3970;
t3272 = -t3145 * t3621 + t2839;
t2786 = 0.1e1 / ((t2820 * t3144 + t3272) * t3114 + t2810);
t2657 = (t2732 * t3155 + t2735 * t3156 + t2759 * t3154) * t2786;
t3895 = t2657 * t3135;
t2617 = pkin(3) * t3895;
t2645 = pkin(6) * t2657;
t2687 = pkin(8) * t2702;
t3657 = t2645 + t2687;
t4048 = -pkin(7) * t2702 - t2617 - t3657;
t3252 = t3136 * t4048;
t4110 = -t3252 + t2696;
t3133 = sin(qJ(2,2));
t3141 = cos(qJ(3,2));
t3059 = t3141 * pkin(3);
t3831 = (t3059 + t3095) * (t3059 + t3096);
t3487 = t3133 * t3831;
t2816 = t3082 - t3487;
t3069 = pkin(1) * t3133;
t2963 = t3157 + t3069;
t3132 = sin(qJ(3,2));
t3053 = t3132 * pkin(3);
t2984 = t3053 + pkin(6);
t3127 = legFrame(2,2);
t3039 = sin(t3127);
t3042 = cos(t3127);
t3142 = cos(qJ(2,2));
t3104 = t3142 ^ 2;
t3475 = t3104 * t3782;
t3388 = -0.2e1 * t3475;
t4072 = t3059 + pkin(2);
t3293 = t4072 * t3388;
t3143 = cos(qJ(1,2));
t3778 = t3039 * t3143;
t3480 = t4072 * t3778;
t3319 = t2984 * t3480;
t3716 = t3133 * t3143;
t3465 = t3039 * t3716;
t3331 = t2984 * t3465;
t3336 = t3143 * t3487;
t3715 = t3133 * t3158;
t2947 = pkin(1) + t3715;
t3134 = sin(qJ(1,2));
t3484 = t2947 * t4072 * t3134;
t3696 = t3143 * t3157;
t3441 = t3115 * t3696;
t3493 = (t4072 * t3441 - t3134 * t3831 / 0.2e1) * t3104 * t3114;
t3773 = t3042 * t3133;
t3803 = t4072 * t3042;
t3818 = t2963 * t3134;
t2738 = -0.2e1 * t3039 * t3493 + (((-t2984 * t3803 + t3039 * t3336) * t3115 + t3039 * t3484) * t3114 + (t3042 * t3487 + t3319) * t3092 - t3319 + t2816 * t3042) * t3142 - t2963 * t3803 + (t3042 * t3293 + ((-t2984 * t3773 + t3480) * t3115 + t3039 * t3818) * t3114 + (t3331 + t3803) * t3092 - t3331) * t3157;
t3772 = t3042 * t3143;
t3479 = t4072 * t3772;
t3318 = t2984 * t3479;
t3459 = t3042 * t3716;
t3330 = t2984 * t3459;
t3779 = t3039 * t3133;
t3804 = t4072 * t3039;
t2739 = 0.2e1 * t3042 * t3493 + (((-t2984 * t3804 - t3042 * t3336) * t3115 - t3042 * t3484) * t3114 + (t3039 * t3487 - t3318) * t3092 + t3318 + t2816 * t3039) * t3142 - t2963 * t3804 + (t3039 * t3293 - ((t2984 * t3779 + t3479) * t3115 + t3042 * t3818) * t3114 - (t3330 - t3804) * t3092 + t3330) * t3157;
t3951 = pkin(6) * t3141;
t3972 = pkin(2) * t3132;
t2904 = t3951 - t3972;
t3734 = t3115 * t3141;
t3580 = pkin(1) * t3734;
t3802 = t4072 * t3114;
t3821 = t2955 * t3141;
t4093 = t3133 * t4072;
t3235 = -t3580 * t4093 + (-t2904 * t3802 + t3821) * t3142;
t3686 = t3157 * t3133;
t2788 = 0.1e1 / ((pkin(1) * t3132 * t4072 - t2904 * t3686) * t3114 + t3235);
t3712 = t3134 * t3157;
t3965 = pkin(2) * t3143;
t2863 = t3115 * t3712 + t3965;
t3028 = pkin(1) * t3053;
t3102 = t3141 ^ 2;
t3058 = t3102 * t3182;
t2985 = t3053 - pkin(6);
t3762 = t3102 * t3133;
t3531 = pkin(3) * t3762;
t2944 = t3686 + pkin(1);
t3571 = t2944 * t3972;
t3955 = pkin(3) * t3102;
t3622 = pkin(6) * t3955;
t3966 = pkin(2) * t3141;
t3220 = -t3531 * t3982 + (t3821 + (t2985 * t3966 + t3132 * t3184 - t3622) * t3114) * t3142 + t3114 * t3571;
t3718 = t3133 * t3134;
t3444 = t3115 * t3718;
t3740 = t3115 * t3133;
t3568 = pkin(2) * t3740;
t3697 = t3143 * t2947;
t3756 = t3114 * t3133;
t3811 = t2984 * t3114;
t3852 = ((t3134 * t3413 + 0.2e1 * t2863 * t3059 + (t3058 + t3766) * t3143) * t3104 + (-t3444 * t3058 + ((-0.2e1 * t3568 + t3811) * t3134 + t3697) * t3059 + (pkin(2) * t3811 - t3133 * t3453) * t3134 + pkin(2) * t3697) * t3142 + (t3143 * t2963 + (t2984 * t3756 - t3115 * t4072) * t3134) * t3157) / ((t2865 * t3133 + t3028 * t3114) * t3141 + t3220);
t2701 = -t3446 * t3852 + (t2738 * t3692 + t2739 * t3691) * t2788;
t2695 = pkin(1) * t2701;
t2983 = pkin(6) * t3132 + pkin(3);
t3031 = t3104 - 0.2e1;
t3784 = t3031 * t3132;
t3351 = pkin(3) * t3784 - pkin(6);
t3009 = t3157 * t3142;
t2926 = t3133 * t3009;
t3060 = t3104 * pkin(2);
t3648 = t2926 + t3060;
t4075 = -pkin(2) + t3648;
t3194 = -t3132 * t4075 - t3141 * t3351;
t3721 = t3132 * t3143;
t3213 = t4075 * t3721;
t3717 = t3133 * t3142;
t3565 = pkin(2) * t3717;
t3246 = -t3104 * t3157 + t3565;
t2831 = t3246 + t2963;
t3755 = t3114 * t3134;
t3223 = pkin(6) * t3716 - t2831 * t3755;
t3971 = pkin(2) * t3133;
t2891 = t3009 - t3971;
t3238 = t3114 * t2891;
t3283 = t2944 * t3142 + t3060;
t3713 = t3134 * t3142;
t3326 = t3713 * t3756;
t3362 = pkin(3) * t3465;
t3460 = t3042 * t3756;
t3066 = pkin(2) * t3142;
t3645 = t3686 + t3066;
t2882 = pkin(1) + t3645;
t3749 = t3114 * t3143;
t4028 = t3134 * t2882 + t3351 * t3749;
t3631 = 0.2e1 * t3955;
t4031 = t3133 * (-t2983 + t3631 + t3966) - t3141 * t3009;
t2731 = (t3194 * t3042 - t3778 * t4031) * t3092 + (-(t3039 * t3713 - 0.2e1 * t3460) * t3955 + (-t3039 * t4028 - t3042 * t3238) * t3141 - (t2983 * t3773 + t3039 * t3213) * t3114) * t3115 + t3102 * t3362 + ((t3039 * t3326 + t3042 * t3104 - t3042) * t3053 - t3042 * pkin(6)) * t3141 + (-t3039 * t3223 + t3042 * t3283) * t3132 - t3362;
t3361 = pkin(3) * t3459;
t3466 = t3039 * t3756;
t2734 = (t3194 * t3039 + t3772 * t4031) * t3092 + ((t3042 * t3713 + 0.2e1 * t3466) * t3955 + (-t3039 * t3238 + t3042 * t4028) * t3141 + t3114 * (-t2983 * t3779 + t3042 * t3213)) * t3115 - t3102 * t3361 + ((t3039 * t3104 - t3042 * t3326 - t3039) * t3053 - t3039 * pkin(6)) * t3141 + (t3039 * t3283 + t3042 * t3223) * t3132 + t3361;
t2993 = t3066 + pkin(1);
t3471 = t3133 * t3782;
t3562 = pkin(3) * t3721;
t3698 = t3142 * t3143;
t3739 = t3115 * t3134;
t3768 = (t3142 + 0.1e1) * (t3142 - 0.1e1);
t2758 = ((-t3351 * t3739 - t3562 * t3717) * t3141 - (t4075 * t3739 + t3143 * (t2993 * t3133 - t3157 * t3768)) * t3132) * t3114 + (t3115 * t3698 + t3718 * t3997) * t3955 + (t2882 * t3143 + t2891 * t3739) * t3734 + t3134 * t2983 * t3471;
t2809 = (t3009 - t4093) * t3580;
t2819 = -pkin(6) * t3645 + t2993 * t3053;
t2838 = t2882 * t3972;
t3273 = -t3142 * t3622 + t2838;
t2785 = 0.1e1 / ((t2819 * t3141 + t3273) * t3114 + t2809);
t2656 = (t2731 * t3155 + t2734 * t3156 + t2758 * t3154) * t2785;
t3901 = t2656 * t3132;
t2615 = pkin(3) * t3901;
t2644 = pkin(6) * t2656;
t2686 = pkin(8) * t2701;
t3658 = t2644 + t2686;
t4047 = -pkin(7) * t2701 - t2615 - t3658;
t3253 = t3133 * t4047;
t4109 = -t3253 + t2695;
t3130 = sin(qJ(2,3));
t3138 = cos(qJ(3,3));
t3056 = t3138 * pkin(3);
t3832 = (t3056 + t3095) * (t3056 + t3096);
t3488 = t3130 * t3832;
t2815 = t3082 - t3488;
t3068 = pkin(1) * t3130;
t2962 = t3157 + t3068;
t3129 = sin(qJ(3,3));
t3052 = t3129 * pkin(3);
t2981 = t3052 + pkin(6);
t3126 = legFrame(3,2);
t3038 = sin(t3126);
t3041 = cos(t3126);
t3139 = cos(qJ(2,3));
t3100 = t3139 ^ 2;
t3476 = t3100 * t3782;
t3389 = -0.2e1 * t3476;
t4073 = t3056 + pkin(2);
t3294 = t4073 * t3389;
t3140 = cos(qJ(1,3));
t3780 = t3038 * t3140;
t3482 = t4073 * t3780;
t3321 = t2981 * t3482;
t3726 = t3130 * t3140;
t3467 = t3038 * t3726;
t3333 = t2981 * t3467;
t3338 = t3140 * t3488;
t3725 = t3130 * t3158;
t2946 = pkin(1) + t3725;
t3131 = sin(qJ(1,3));
t3485 = t2946 * t4073 * t3131;
t3699 = t3140 * t3157;
t3442 = t3115 * t3699;
t3494 = (t4073 * t3442 - t3131 * t3832 / 0.2e1) * t3100 * t3114;
t3775 = t3041 * t3130;
t3806 = t4073 * t3041;
t3819 = t2962 * t3131;
t2736 = -0.2e1 * t3038 * t3494 + (((-t2981 * t3806 + t3038 * t3338) * t3115 + t3038 * t3485) * t3114 + (t3041 * t3488 + t3321) * t3092 - t3321 + t2815 * t3041) * t3139 - t2962 * t3806 + (t3041 * t3294 + ((-t2981 * t3775 + t3482) * t3115 + t3038 * t3819) * t3114 + (t3333 + t3806) * t3092 - t3333) * t3157;
t3774 = t3041 * t3140;
t3481 = t4073 * t3774;
t3320 = t2981 * t3481;
t3461 = t3041 * t3726;
t3332 = t2981 * t3461;
t3781 = t3038 * t3130;
t3807 = t4073 * t3038;
t2737 = 0.2e1 * t3041 * t3494 + (((-t2981 * t3807 - t3041 * t3338) * t3115 - t3041 * t3485) * t3114 + (t3038 * t3488 - t3320) * t3092 + t3320 + t2815 * t3038) * t3139 - t2962 * t3807 + (t3038 * t3294 - ((t2981 * t3781 + t3481) * t3115 + t3041 * t3819) * t3114 - (t3332 - t3807) * t3092 + t3332) * t3157;
t3953 = pkin(6) * t3138;
t3974 = pkin(2) * t3129;
t2903 = t3953 - t3974;
t3735 = t3115 * t3138;
t3581 = pkin(1) * t3735;
t3805 = t4073 * t3114;
t3822 = t2955 * t3138;
t4094 = t3130 * t4073;
t3236 = -t3581 * t4094 + (-t2903 * t3805 + t3822) * t3139;
t3687 = t3157 * t3130;
t2787 = 0.1e1 / ((pkin(1) * t3129 * t4073 - t2903 * t3687) * t3114 + t3236);
t3722 = t3131 * t3157;
t3967 = pkin(2) * t3140;
t2862 = t3115 * t3722 + t3967;
t3027 = pkin(1) * t3052;
t3098 = t3138 ^ 2;
t3055 = t3098 * t3182;
t2982 = t3052 - pkin(6);
t3764 = t3098 * t3130;
t3533 = pkin(3) * t3764;
t2943 = t3687 + pkin(1);
t3572 = t2943 * t3974;
t3956 = pkin(3) * t3098;
t3623 = pkin(6) * t3956;
t3968 = pkin(2) * t3138;
t3221 = -t3533 * t3982 + (t3822 + (t2982 * t3968 + t3129 * t3184 - t3623) * t3114) * t3139 + t3114 * t3572;
t3728 = t3130 * t3131;
t3445 = t3115 * t3728;
t3743 = t3115 * t3130;
t3569 = pkin(2) * t3743;
t3700 = t3140 * t2946;
t3758 = t3114 * t3130;
t3814 = t2981 * t3114;
t3853 = ((t3131 * t3413 + 0.2e1 * t2862 * t3056 + (t3055 + t3766) * t3140) * t3100 + (-t3445 * t3055 + ((-0.2e1 * t3569 + t3814) * t3131 + t3700) * t3056 + (pkin(2) * t3814 - t3130 * t3453) * t3131 + pkin(2) * t3700) * t3139 + (t3140 * t2962 + (t2981 * t3758 - t3115 * t4073) * t3131) * t3157) / ((t2865 * t3130 + t3027 * t3114) * t3138 + t3221);
t2700 = -t3446 * t3853 + (t2736 * t3692 + t2737 * t3691) * t2787;
t2694 = pkin(1) * t2700;
t2980 = pkin(6) * t3129 + pkin(3);
t3030 = t3100 - 0.2e1;
t3785 = t3030 * t3129;
t3352 = pkin(3) * t3785 - pkin(6);
t3008 = t3157 * t3139;
t2925 = t3130 * t3008;
t3057 = t3100 * pkin(2);
t3649 = t2925 + t3057;
t4074 = -pkin(2) + t3649;
t3195 = -t3129 * t4074 - t3138 * t3352;
t3731 = t3129 * t3140;
t3214 = t4074 * t3731;
t3727 = t3130 * t3139;
t3566 = pkin(2) * t3727;
t3247 = -t3100 * t3157 + t3566;
t2830 = t3247 + t2962;
t3757 = t3114 * t3131;
t3224 = pkin(6) * t3726 - t2830 * t3757;
t3973 = pkin(2) * t3130;
t2890 = t3008 - t3973;
t3239 = t3114 * t2890;
t3284 = t2943 * t3139 + t3057;
t3723 = t3131 * t3139;
t3327 = t3723 * t3758;
t3365 = pkin(3) * t3467;
t3462 = t3041 * t3758;
t3065 = pkin(2) * t3139;
t3646 = t3687 + t3065;
t2881 = pkin(1) + t3646;
t3751 = t3114 * t3140;
t4027 = t3131 * t2881 + t3352 * t3751;
t3632 = 0.2e1 * t3956;
t4032 = t3130 * (-t2980 + t3632 + t3968) - t3138 * t3008;
t2730 = (t3195 * t3041 - t3780 * t4032) * t3092 + (-(t3038 * t3723 - 0.2e1 * t3462) * t3956 + (-t3038 * t4027 - t3041 * t3239) * t3138 - (t2980 * t3775 + t3038 * t3214) * t3114) * t3115 + t3098 * t3365 + ((t3038 * t3327 + t3041 * t3100 - t3041) * t3052 - t3041 * pkin(6)) * t3138 + (-t3038 * t3224 + t3041 * t3284) * t3129 - t3365;
t3364 = pkin(3) * t3461;
t3468 = t3038 * t3758;
t2733 = (t3195 * t3038 + t3774 * t4032) * t3092 + ((t3041 * t3723 + 0.2e1 * t3468) * t3956 + (-t3038 * t3239 + t3041 * t4027) * t3138 + t3114 * (-t2980 * t3781 + t3041 * t3214)) * t3115 - t3098 * t3364 + ((t3038 * t3100 - t3041 * t3327 - t3038) * t3052 - t3038 * pkin(6)) * t3138 + (t3038 * t3284 + t3041 * t3224) * t3129 + t3364;
t2992 = t3065 + pkin(1);
t3472 = t3130 * t3782;
t3563 = pkin(3) * t3731;
t3701 = t3139 * t3140;
t3742 = t3115 * t3131;
t3769 = (t3139 + 0.1e1) * (t3139 - 0.1e1);
t2757 = ((-t3352 * t3742 - t3563 * t3727) * t3138 - (t4074 * t3742 + t3140 * (t2992 * t3130 - t3157 * t3769)) * t3129) * t3114 + (t3115 * t3701 + t3728 * t3997) * t3956 + (t2881 * t3140 + t2890 * t3742) * t3735 + t3131 * t2980 * t3472;
t2808 = (t3008 - t4094) * t3581;
t2818 = -pkin(6) * t3646 + t2992 * t3052;
t2837 = t2881 * t3974;
t3274 = -t3139 * t3623 + t2837;
t2784 = 0.1e1 / ((t2818 * t3138 + t3274) * t3114 + t2808);
t2655 = (t2730 * t3155 + t2733 * t3156 + t2757 * t3154) * t2784;
t3907 = t2655 * t3129;
t2613 = pkin(3) * t3907;
t2643 = pkin(6) * t2655;
t2685 = pkin(8) * t2700;
t3659 = t2643 + t2685;
t4046 = -pkin(7) * t2700 - t2613 - t3659;
t3254 = t3130 * t4046;
t4108 = -t3254 + t2694;
t3152 = rSges(3,2) * pkin(2);
t3999 = rSges(3,1) * pkin(6);
t2977 = t3152 + t3999;
t2941 = m(3) * t2977;
t3151 = rSges(3,2) * pkin(6);
t4000 = rSges(3,1) * pkin(2);
t2976 = -t3151 + t4000;
t3990 = m(3) * t3129;
t3998 = rSges(3,1) * rSges(3,2);
t4004 = pkin(2) * pkin(6);
t3148 = rSges(2,3) + pkin(6);
t4077 = m(2) * t3148;
t4088 = -rSges(2,1) * t4077 - Icges(3,4) + Icges(2,5) + (t3998 - t4004) * m(3);
t3170 = rSges(3,2) ^ 2;
t3172 = rSges(3,1) ^ 2;
t3044 = -t3170 + t3172;
t3929 = Icges(3,2) - Icges(3,1);
t2907 = m(3) * t3044 + t3929;
t4097 = t2907 * t3129;
t4107 = -t2976 * t3990 + t3138 * (-t4097 - t2941) + t4088;
t3989 = m(3) * t3132;
t4096 = t2907 * t3132;
t4106 = -t2976 * t3989 + t3141 * (-t4096 - t2941) + t4088;
t3988 = m(3) * t3135;
t4095 = t2907 * t3135;
t4105 = -t2976 * t3988 + t3144 * (-t4095 - t2941) + t4088;
t2691 = pkin(6) * t2700;
t3905 = t2655 * t3157;
t4043 = t3905 - t2691;
t3922 = t4043 * t3139;
t2692 = pkin(6) * t2701;
t3899 = t2656 * t3157;
t4044 = t3899 - t2692;
t3921 = t4044 * t3142;
t2693 = pkin(6) * t2702;
t3893 = t2657 * t3157;
t4045 = t3893 - t2693;
t3920 = t4045 * t3145;
t3159 = pkin(8) * pkin(7);
t3111 = -0.2e1 * t3159;
t3179 = pkin(8) ^ 2;
t3180 = pkin(7) ^ 2;
t3639 = t3179 + t3180;
t4104 = t3111 - t3639;
t4100 = t2907 * t3098;
t4099 = t2907 * t3102;
t4098 = t2907 * t3106;
t3682 = m(3) * t4000;
t3048 = 0.2e1 * t3682;
t3927 = -m(3) * t3998 + Icges(3,4);
t3014 = 0.2e1 * t3927;
t3798 = t3014 * t3129;
t4091 = -t4100 - (t3798 + t3048) * t3138;
t3797 = t3014 * t3132;
t4090 = -t4099 - (t3797 + t3048) * t3141;
t3796 = t3014 * t3135;
t4089 = -t4098 - (t3796 + t3048) * t3144;
t3147 = pkin(7) + rSges(3,3);
t3987 = m(3) * t3147;
t4087 = rSges(2,2) * t4077 - pkin(6) * t3987 - Icges(2,6);
t3926 = 0.2e1 * m(3);
t2840 = t3115 * t3726 + t3723;
t3744 = t3115 * t3129;
t3201 = -pkin(3) * t3744 + t3239;
t3207 = -(t3115 * t3967 + t3722) * t3130 + (-pkin(2) * t3131 + t3442) * t3139 + t3114 * t3563;
t2763 = -(t2840 * t3041 + t3468) * t3956 + (t3038 * t3201 + t3041 * t3207) * t3138 + (-t3038 * t3115 + t3041 * t3751) * t3974;
t2869 = -pkin(6) * t3687 + t3027;
t2824 = t2982 * t3065 + t2869;
t2843 = t2890 * t3982;
t3752 = t3114 * t3139;
t3554 = pkin(6) * t3752;
t3584 = pkin(1) * t3743;
t3306 = t3114 * t2837 - (t3554 + t3584) * t3956;
t2778 = 0.1e1 / ((t2824 * t3114 + t2843) * t3138 + t3306);
t2745 = t2763 * t2778 * t3156;
t2764 = (t2840 * t3038 - t3462) * t3956 + (-t3038 * t3207 + t3041 * t3201) * t3138 - (t3038 * t3751 + t3041 * t3115) * t3974;
t2746 = t2764 * t2778 * t3155;
t3449 = t3129 * t3757;
t2790 = -(-t3445 + t3701) * t3956 + (-pkin(3) * t3449 - t2862 * t3139 - t3130 * (-pkin(2) * t3742 + t3699)) * t3138 - pkin(2) * t3449;
t2760 = t2790 * t2778 * t3154;
t2715 = t2745 + t2746 + t2760;
t4086 = 0.2e1 * t2715;
t2841 = t3115 * t3716 + t3713;
t3741 = t3115 * t3132;
t3200 = -pkin(3) * t3741 + t3238;
t3206 = -(t3115 * t3965 + t3712) * t3133 + (-pkin(2) * t3134 + t3441) * t3142 + t3114 * t3562;
t2765 = -(t2841 * t3042 + t3466) * t3955 + (t3039 * t3200 + t3042 * t3206) * t3141 + (-t3039 * t3115 + t3042 * t3749) * t3972;
t2870 = -pkin(6) * t3686 + t3028;
t2825 = t2985 * t3066 + t2870;
t2844 = t2891 * t3982;
t3750 = t3114 * t3142;
t3553 = pkin(6) * t3750;
t3583 = pkin(1) * t3740;
t3305 = t3114 * t2838 - (t3553 + t3583) * t3955;
t2779 = 0.1e1 / ((t2825 * t3114 + t2844) * t3141 + t3305);
t2747 = t2765 * t2779 * t3156;
t2766 = (t2841 * t3039 - t3460) * t3955 + (-t3039 * t3206 + t3042 * t3200) * t3141 - (t3039 * t3749 + t3042 * t3115) * t3972;
t2748 = t2766 * t2779 * t3155;
t3448 = t3132 * t3755;
t2791 = -(-t3444 + t3698) * t3955 + (-pkin(3) * t3448 - t2863 * t3142 - t3133 * (-pkin(2) * t3739 + t3696)) * t3141 - pkin(2) * t3448;
t2761 = t2791 * t2779 * t3154;
t2716 = t2747 + t2748 + t2761;
t4085 = 0.2e1 * t2716;
t2842 = t3115 * t3706 + t3703;
t3738 = t3115 * t3135;
t3199 = -pkin(3) * t3738 + t3237;
t3205 = -(t3115 * t3963 + t3702) * t3136 + (-pkin(2) * t3137 + t3440) * t3145 + t3114 * t3561;
t2767 = -(t2842 * t3043 + t3464) * t3954 + (t3040 * t3199 + t3043 * t3205) * t3144 + (-t3040 * t3115 + t3043 * t3747) * t3970;
t2871 = -pkin(6) * t3685 + t3029;
t2826 = t2988 * t3067 + t2871;
t2845 = t2892 * t3982;
t3748 = t3114 * t3145;
t3552 = pkin(6) * t3748;
t3582 = pkin(1) * t3737;
t3304 = t3114 * t2839 - (t3552 + t3582) * t3954;
t2780 = 0.1e1 / ((t2826 * t3114 + t2845) * t3144 + t3304);
t2749 = t2767 * t2780 * t3156;
t2768 = (t2842 * t3040 - t3458) * t3954 + (-t3040 * t3205 + t3043 * t3199) * t3144 - (t3040 * t3747 + t3043 * t3115) * t3970;
t2750 = t2768 * t2780 * t3155;
t3447 = t3135 * t3753;
t2792 = -(-t3443 + t3695) * t3954 + (-pkin(3) * t3447 - t2864 * t3145 - t3136 * (-pkin(2) * t3736 + t3693)) * t3144 - pkin(2) * t3447;
t2762 = t2792 * t2780 * t3154;
t2717 = t2749 + t2750 + t2762;
t4084 = 0.2e1 * t2717;
t3091 = t3115 * t3092;
t4083 = -0.4e1 * t3091;
t4082 = 0.2e1 * t3092;
t4008 = 0.2e1 * t3139;
t4007 = 0.2e1 * t3142;
t4006 = 0.2e1 * t3145;
t4081 = -0.3e1 * t3157;
t4080 = t3100 - 0.1e1;
t4079 = t3104 - 0.1e1;
t4078 = t3108 - 0.1e1;
t3765 = t3138 * t3055;
t3763 = t3141 * t3058;
t3761 = t3144 * t3061;
t2952 = rSges(3,1) * t3987 - Icges(3,5);
t2898 = t2952 * t3135;
t2823 = -t2898 + t4087;
t3932 = rSges(3,2) * t3147;
t2949 = t3932 * m(3) - Icges(3,6);
t3823 = t2949 * t3144;
t4070 = (-t2823 + t3823) * t3145;
t2897 = t2952 * t3132;
t2822 = -t2897 + t4087;
t3824 = t2949 * t3141;
t4069 = (-t2822 + t3824) * t3142;
t2896 = t2952 * t3129;
t2821 = -t2896 + t4087;
t3825 = t2949 * t3138;
t4068 = (-t2821 + t3825) * t3139;
t3880 = t2702 * t3114;
t2675 = pkin(1) * t3880;
t3976 = pkin(2) * t2717;
t2711 = 0.2e1 * t3976;
t4067 = (t2675 + t2711) * t3115;
t3885 = t2701 * t3114;
t2674 = pkin(1) * t3885;
t3977 = pkin(2) * t2716;
t2710 = 0.2e1 * t3977;
t4066 = (t2674 + t2710) * t3115;
t3890 = t2700 * t3114;
t2673 = pkin(1) * t3890;
t3978 = pkin(2) * t2715;
t2709 = 0.2e1 * t3978;
t4065 = (t2673 + t2709) * t3115;
t3681 = m(3) * t3152;
t4064 = -t4097 - t3681;
t4063 = -t4096 - t3681;
t4062 = -t4095 - t3681;
t4003 = m(2) * rSges(2,2);
t2889 = -rSges(2,1) * t4003 + pkin(2) * t3987 + Icges(2,4);
t3261 = -t2949 * t3135 + t2952 * t3144;
t3202 = t2889 + t3261;
t3262 = -t2949 * t3132 + t2952 * t3141;
t3203 = t2889 + t3262;
t3263 = -t2949 * t3129 + t2952 * t3138;
t3204 = t2889 + t3263;
t3021 = pkin(6) * t3052;
t4061 = 0.2e1 * t3021 - t3055;
t3022 = pkin(6) * t3053;
t4060 = 0.2e1 * t3022 - t3058;
t3023 = pkin(6) * t3054;
t4059 = 0.2e1 * t3023 - t3061;
t3024 = pkin(2) * t3056;
t3257 = 0.2e1 * t3024 + t3055;
t3025 = pkin(2) * t3059;
t3256 = 0.2e1 * t3025 + t3058;
t3026 = pkin(2) * t3062;
t3255 = 0.2e1 * t3026 + t3061;
t4058 = t3179 / 0.2e1 + t3180 / 0.2e1;
t3171 = rSges(2,2) ^ 2;
t3173 = rSges(2,1) ^ 2;
t3640 = t3170 + t3184;
t3353 = Icges(3,1) + Icges(2,3) + (t3147 ^ 2 + t3640) * m(3) + (t3171 + t3173) * m(2);
t4054 = -t3353 + t4089;
t4053 = -t3353 + t4090;
t4052 = -t3353 + t4091;
t2621 = pkin(6) * t3893;
t3878 = t2702 * t3182;
t2543 = -t2621 + t3878;
t4051 = -t4078 * pkin(2) * t2645 + t2543 * t3707;
t2620 = pkin(6) * t3899;
t3883 = t2701 * t3182;
t2542 = -t2620 + t3883;
t4050 = -t4079 * pkin(2) * t2644 + t2542 * t3717;
t2619 = pkin(6) * t3905;
t3888 = t2700 * t3182;
t2541 = -t2619 + t3888;
t4049 = -t4080 * pkin(2) * t2643 + t2541 * t3727;
t3936 = rSges(3,1) * t3135;
t4042 = rSges(3,2) * t3144 + t3936;
t3937 = rSges(3,1) * t3132;
t4041 = rSges(3,2) * t3141 + t3937;
t3938 = rSges(3,1) * t3129;
t4040 = rSges(3,2) * t3138 + t3938;
t3113 = t3157 ^ 2;
t3637 = t3184 - t3182;
t2954 = t3113 + t3637;
t2965 = pkin(1) * t3687;
t4039 = -pkin(1) * t3065 - t2954 - t2965;
t2966 = pkin(1) * t3686;
t4038 = -pkin(1) * t3066 - t2954 - t2966;
t2967 = pkin(1) * t3685;
t3064 = t3145 * pkin(1);
t4037 = -pkin(2) * t3064 - t2954 - t2967;
t4036 = t3024 + t3055 - t3021;
t4035 = t3025 + t3058 - t3022;
t4034 = t3026 + t3061 - t3023;
t4033 = 0.3e1 * t4104;
t3931 = Icges(2,1) + Icges(3,2);
t2814 = (t3170 - (pkin(2) + t3147) * (-pkin(2) + t3147)) * m(3) + (-t3171 + t3173) * m(2) + Icges(2,2) + Icges(3,3) - t3931;
t3178 = -0.2e1 * pkin(1);
t4026 = 0.2e1 * pkin(1);
t3176 = 0.3e1 * pkin(2);
t2679 = t2700 * t3157;
t4025 = 0.2e1 * t2679;
t2680 = t2701 * t3157;
t4024 = 0.2e1 * t2680;
t2681 = t2702 * t3157;
t4023 = 0.2e1 * t2681;
t4022 = -0.2e1 * t2700;
t4021 = -0.2e1 * t2701;
t4020 = -0.2e1 * t2702;
t4019 = -0.2e1 * t2907;
t4018 = -0.2e1 * t3927;
t4017 = 0.2e1 * t3091;
t4016 = 0.3e1 * t3091;
t4015 = 0.4e1 * t3091;
t4012 = 0.2e1 * t3100;
t4011 = 0.2e1 * t3104;
t4010 = 0.2e1 * t3108;
t4009 = -0.2e1 * t3114;
t4005 = pkin(1) * pkin(2);
t3160 = pkin(2) * m(3);
t4002 = m(3) * rSges(3,1);
t4001 = m(3) * rSges(3,2);
t3150 = pkin(1) * rSges(3,1);
t3149 = pkin(1) * rSges(3,2);
t3996 = t3092 - 0.1e1;
t3995 = t4012 - 0.2e1;
t3994 = t4011 - 0.2e1;
t3993 = t4010 - 0.2e1;
t3991 = m(3) * t2976;
t2649 = pkin(1) * t2655;
t2650 = pkin(1) * t2656;
t2651 = pkin(1) * t2657;
t3986 = pkin(1) * t2715;
t3985 = pkin(1) * t2716;
t3984 = pkin(1) * t2717;
t3983 = pkin(1) * t3114;
t2646 = pkin(2) * t2655;
t2647 = pkin(2) * t2656;
t2648 = pkin(2) * t2657;
t3981 = pkin(2) * t2700;
t3980 = pkin(2) * t2701;
t3979 = pkin(2) * t2702;
t3975 = pkin(2) * t3114;
t3962 = pkin(3) * t2700;
t3961 = pkin(3) * t2701;
t3960 = pkin(3) * t2702;
t3959 = pkin(3) * t2980;
t3958 = pkin(3) * t2983;
t3957 = pkin(3) * t2986;
t3952 = pkin(6) * t3139;
t3950 = pkin(6) * t3142;
t3948 = pkin(6) * t3145;
t3947 = pkin(6) * t3157;
t2641 = pkin(8) * t2655;
t2635 = t2656 * pkin(8);
t2638 = t2657 * pkin(8);
t3946 = t2890 * pkin(2);
t3945 = t2891 * pkin(2);
t3944 = t2892 * pkin(2);
t2938 = -t3987 + t4003;
t3942 = t2938 * pkin(1);
t2979 = m(2) * rSges(2,1) + t3160;
t3940 = t2979 * pkin(1);
t3928 = -0.2e1 * t4000;
t3730 = t3129 * t3157;
t2538 = t2655 * t3730 - t3962;
t3925 = t2538 * t3139;
t3720 = t3132 * t3157;
t2539 = t2656 * t3720 - t3961;
t3924 = t2539 * t3142;
t3710 = t3135 * t3157;
t2540 = t2657 * t3710 - t3960;
t3923 = t2540 * t3145;
t3507 = t2715 * t3758;
t3919 = (t3052 * t3507 - t2646) * t3100;
t3502 = t2716 * t3756;
t3918 = (t3053 * t3502 - t2647) * t3104;
t3497 = t2717 * t3754;
t3917 = (t3054 * t3497 - t2648) * t3108;
t3916 = (t2715 - t2655) * (t2715 + t2655);
t3915 = (t2716 - t2656) * (t2716 + t2656);
t3914 = (t2717 - t2657) * (t2717 + t2657);
t3913 = t2655 * t3056;
t3912 = t2656 * t3059;
t3911 = t2657 * t3062;
t3910 = t2655 * t3927;
t3909 = t2655 * t3098;
t3908 = t2655 * t3115;
t3906 = t2655 * t3130;
t3904 = t2656 * t3927;
t3903 = t2656 * t3102;
t3902 = t2656 * t3115;
t3900 = t2656 * t3133;
t3898 = t2657 * t3927;
t3897 = t2657 * t3106;
t3896 = t2657 * t3115;
t3894 = t2657 * t3136;
t3892 = t2700 * t3927;
t3891 = t2700 * t3098;
t3889 = t2700 * t3130;
t3887 = t2701 * t3927;
t3886 = t2701 * t3102;
t3884 = t2701 * t3133;
t3882 = t2702 * t3927;
t3881 = t2702 * t3106;
t3879 = t2702 * t3136;
t2712 = t2715 ^ 2;
t3877 = t2712 * t3092;
t3876 = t2712 * t3100;
t2713 = t2716 ^ 2;
t3875 = t2713 * t3092;
t3874 = t2713 * t3104;
t2714 = t2717 ^ 2;
t3873 = t2714 * t3092;
t3872 = t2714 * t3108;
t3871 = t2715 * t3092;
t3870 = t2715 * t3100;
t3869 = t2715 * t3114;
t3868 = t2715 * t3115;
t3867 = t2715 * t3130;
t3866 = t2715 * t3139;
t3865 = t2716 * t3092;
t3864 = t2716 * t3104;
t3863 = t2716 * t3114;
t3862 = t2716 * t3115;
t3861 = t2716 * t3133;
t3860 = t2716 * t3142;
t3859 = t2717 * t3092;
t3858 = t2717 * t3108;
t3857 = t2717 * t3114;
t3856 = t2717 * t3115;
t3855 = t2717 * t3136;
t3854 = t2717 * t3145;
t3847 = t4074 * t2980;
t3846 = t4075 * t2983;
t3845 = t4076 * t2986;
t3841 = t2881 * t3114;
t3840 = t2882 * t3114;
t3839 = t2883 * t3114;
t3829 = t2946 * t3139;
t3828 = t2947 * t3142;
t3827 = t2948 * t3145;
t3826 = t2949 * t3114;
t2592 = t2952 * t2655;
t2593 = t2952 * t2656;
t2594 = t2952 * t2657;
t2667 = t2952 * t2700;
t2668 = t2952 * t2701;
t2669 = t2952 * t2702;
t3816 = t2980 * t3092;
t3815 = t2981 * t4073;
t3813 = t2983 * t3092;
t3812 = t2984 * t4072;
t3810 = t2986 * t3092;
t3809 = t2987 * t4071;
t3795 = t3927 * t3098;
t3794 = t3927 * t3102;
t3793 = t3927 * t3106;
t3792 = t3927 * t3114;
t3791 = t3927 * t3129;
t3790 = t3927 * t3132;
t3789 = t3927 * t3135;
t3018 = t3113 + t3184;
t3788 = t3018 * t3130;
t3787 = t3018 * t3133;
t3786 = t3018 * t3136;
t3759 = t3114 * t3115;
t3729 = t3130 * t2952;
t3719 = t3133 * t2952;
t3709 = t3136 * t2952;
t3099 = t3139 * t3100;
t3690 = t3157 * t3099;
t3103 = t3142 * t3104;
t3689 = t3157 * t3103;
t3107 = t3145 * t3108;
t3688 = t3157 * t3107;
t3684 = t3157 * t3182;
t3683 = m(3) * t3999;
t3094 = m(3) * t3150;
t3660 = pkin(7) * t2655 + t2641;
t3675 = (-t2691 / 0.2e1 + t3660) * t3052 - t3888 / 0.2e1;
t2507 = t2619 + t3675;
t2526 = -t2691 + t3660;
t3541 = t2700 * t3052;
t2535 = t3905 - t3541;
t3110 = 0.2e1 * t3159;
t2930 = t3110 + t3184 + t3639;
t2583 = t2655 * t2930;
t2614 = t2655 * t3055;
t3181 = pkin(6) ^ 2;
t3638 = pkin(1) ^ 2 + t3181;
t3414 = t3180 + t3638;
t3265 = t3110 + t3179 + t3414;
t2885 = t3182 + t3265;
t2901 = -0.2e1 / 0.3e1 * t3159 - t3179 / 0.3e1 - t3180 / 0.3e1 + t3184;
t2929 = pkin(1) * t3766;
t3033 = 0.2e1 * t3082;
t3083 = t3182 + t3184;
t3084 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t3415 = t3184 - t3639;
t3307 = pkin(3) * t3415;
t3555 = pkin(6) * t3766;
t3198 = t3130 * (((t2691 - 0.2e1 * t2641) * pkin(7) + pkin(6) * t2685) * t3052 + t2700 * t3684 + (t3129 * t3307 + t3555) * t2655) + (t2694 - 0.2e1 * t3254) * t3024 + t4108 * t3055;
t2676 = pkin(1) * t3889;
t3548 = t2981 * t2646;
t3233 = (t2676 - t4046) * t3056 + t3548;
t3124 = t3184 / 0.2e1;
t3416 = -t3181 / 0.2e1 - t3182 / 0.2e1 + t3124;
t3240 = t3416 + t4104;
t3241 = t3182 + t3638 - t4033;
t3264 = t3111 + t3182 + t3415;
t3469 = t3157 * t3782;
t3268 = t3469 * t3815;
t3290 = t2962 * t3868 + t2526;
t3308 = t3124 + t3159 + t4058;
t3309 = t3184 + t4033;
t3578 = t2655 * t3968;
t2610 = pkin(3) * t3578;
t3357 = -t3541 / 0.2e1;
t3315 = t2583 / 0.2e1 + t2614 / 0.2e1 + t2610 + t3157 * t3357;
t3339 = t2981 * t3488;
t3509 = t2715 * t3815;
t3344 = t3157 * t3509;
t3349 = 0.2e1 * t3091 - 0.2e1 * t3115;
t3516 = t2700 * t3730;
t3369 = pkin(3) * t3516;
t3375 = t3129 * t3584;
t3376 = t3114 * t2955;
t3394 = 0.2e1 * t3507;
t3424 = 0.3e1 / 0.2e1 * t2901 * t3157;
t3473 = t3114 * t3782;
t3508 = t2715 * t3782;
t3517 = t2700 * t3055;
t3525 = t3996 * t3157;
t3291 = -t3184 / 0.2e1 + t4058;
t3549 = (pkin(6) * t2641 + pkin(7) * t3659 + t2700 * t3291 + t3675) * t3056;
t3575 = pkin(2) * t3890;
t3585 = pkin(1) * t3759;
t3589 = 0.2e1 * t3759;
t3598 = 0.2e1 * t3869;
t3668 = 0.2e1 * t2610 + t2614;
t2481 = ((t3129 * t3376 + ((t3021 + t3264) * t3138 + (t2980 + t3956) * pkin(2)) * t3782) * t3870 + ((t2943 * t3508 + t3575) * t3956 + ((t2700 * t3083 - t3052 * t3290) * t3114 + t2946 * pkin(2) * t3508) * t3138 - (t3129 * t3290 - t3962) * t3975 - t3157 * (-t2980 * t3867 * t3996 + t2694 * t3744)) * t3139 + t2673 * t3956 + (t2962 * t2715 * t3525 + (pkin(3) * t3375 + t2943 * t3975) * t2700) * t3138 - (-pkin(3) * t3889 + (t2526 * t3130 + t2943 * t3868 + t2649) * t3129) * t3746 + t3375 * t3981) / ((-pkin(1) * t3569 + t2869 * t3114) * t3138 + t3221) * t2700 + ((-t2715 * t4073 * (t3309 + t3257) * t3099 * t3473 + (t3344 * t4083 + ((t2901 + t3257) * t3507 * t4081 - 0.2e1 * t3549 + (-0.2e1 * t2507 + t3517) * pkin(2)) * t3092 + ((t2655 * t3766 + t3369 + t3668) * t3983 + 0.4e1 * t3344) * t3115 + (t3130 * t3424 + t2929 + t3257 * (t3084 * t3130 + pkin(1))) * t3598 - pkin(2) * t3517 + 0.2e1 * t3549 + t2507 * t3177) * t3100 + (t3198 * t3092 + ((t3357 + t3905) * t3068 + t3315) * t4073 * t3589 + (((t3240 + t4036) * t4082 + 0.4e1 * t2965 + t3241 + t4061) * t3805 + t3339 * t3349) * t2715 - t3198) * t3139 + (t3509 * t4017 + ((t3416 + t4036) * t3394 + t3233) * t3092 + (t2535 * t3983 - 0.2e1 * t3509 + (t2614 + t2583 + (-t3516 + 0.2e1 * t3578) * pkin(3)) * t3758) * t3115 + (t3033 + (t2885 + t4061) * t3130) * t3869 - t3233) * t3157) * t2715 + ((t3585 * t3832 - 0.2e1 * t3268) * t3870 + (0.2e1 * ((t3055 / 0.2e1 + t3024 + t2965 + t3308) * t3868 + t3315) * t3805 + t3339 * t3508) * t3139 + ((t3082 + (t2930 + t3257) * t3130) * t2715 * t3732 + (t2583 - t3369 + t3668) * t2943) * t3114 + t2715 * t3268) * t2655) / ((t2869 * t3138 + t3572) * t3114 + t3236) * t3183;
t3395 = -0.2e1 * t3507;
t2553 = pkin(6) * t3395 + t2646;
t3166 = pkin(6) / 0.2e1;
t2969 = t3052 + t3166;
t2706 = t2969 * t3395;
t2884 = 0.3e1 * t3182 + t3265;
t2924 = -t3766 / 0.2e1;
t3017 = -t3181 + t3637;
t3071 = pkin(1) * t3100;
t3072 = pkin(1) * t3139;
t3085 = -pkin(7) / 0.2e1 - pkin(8) / 0.2e1;
t3271 = t4080 * t3765;
t3287 = -t3913 - t2646;
t3366 = pkin(2) * t2925;
t3382 = (pkin(2) * t3394 + t2643 + t2679) * t3100 - t2643;
t3406 = t3759 * t4004;
t3417 = t3181 / 0.3e1 - t3184 / 0.3e1 + t3182;
t3433 = ((0.2e1 * t2745 + 0.2e1 * t2746 + 0.2e1 * t2760 - t3870) * t3092 + t3908 + t3870 - t2715) * t3765;
t3439 = t2981 * t3727;
t3452 = t3115 * t3752;
t3456 = t3100 * t3766;
t3505 = t2715 * t3008;
t3521 = t3129 * t3906;
t3165 = pkin(6) / 0.3e1;
t3534 = (t3052 + t3165) * t3973;
t3542 = t2700 * t3065;
t3547 = t2655 * t3065;
t3559 = pkin(6) * t3868;
t3560 = pkin(6) * t3869;
t3635 = 0.2e1 * t3986;
t3643 = t3021 + t3182;
t3650 = t3766 / 0.3e1 - 0.2e1 / 0.3e1 * t3182;
t2484 = (t2541 * t3138 * t3452 + ((t3030 * t3765 + t3138 * t4039) * t3092 + t3130 * t3138 * t3406 - t3271) * t2655 + (((-0.4e1 / 0.3e1 + t3100) * t3765 + ((-0.2e1 / 0.3e1 * t3021 + t3650) * t3100 + 0.2e1 / 0.3e1 * t3366 + 0.4e1 / 0.3e1 * t3021 + t3417) * t3138 - 0.2e1 / 0.3e1 * t3847) * t4016 + (-0.3e1 * t3271 + ((t2924 + t3643) * t4012 + (-pkin(2) * t3687 - t4005) * t4008 - 0.2e1 * t2965 - t2884) * t3138) * t3115 - t3239 * t4082 * t3953) * t2715 + (t4049 * t3092 + (pkin(2) * t3995 + 0.2e1 * t2925) * t3559 + ((t3788 + (t3157 + t3247) * pkin(1)) * t3908 + (-t3995 * t3082 + ((t3017 - t3456) * t3092 + t3456 + t2885) * t3130 + (t3727 * t4026 + ((t3099 - t3139) * t4082 - 0.2e1 * t3099 + t4008) * t3157) * pkin(2)) * t2715) * t3114 - t4049) * t3129 + (t2553 * t3092 - t4065 - t3913 - t2553 + (t3092 * t3287 - t3287 + t4065) * t3100 + (t2715 * t4074 * t4015 + (-t2649 * t3139 - 0.3e1 * t2646 - t3919) * t3092 + (-(t2673 + 0.4e1 * t3978) * t3100 - (-t3575 + t3635) * t3139 + 0.2e1 * t2673 + t2709) * t3115 + t3919 + t2646) * t3098 + ((-(-0.4e1 * t3560 - t3922) * t3098 - t3922) * t3092 + (-(0.4e1 * t3505 - (t2643 + t4025) * t3114) * t3098 + 0.2e1 * t3505 - t2700 * t3746) * t3115 - (0.2e1 * t3560 + t3922) * t3098 + t3922) * t3130 + (((t4025 - t3382) * t3092 - 0.4e1 * t3559 - t2676 - t2679 + ((0.2e1 * t2694 + t3542) * t3092 - t3542) * t3130 + (((pkin(1) * t3906 - t4043) * t3139 + t3906 * t3176) * t3115 + ((-0.4e1 * t3008 + 0.2e1 * t3690 + 0.4e1 * t3973) * t3092 - 0.2e1 * t3690 + t2962 * t4008) * t2715) * t3114 + t3382) * t3138 + (-t2715 + 0.4e1 * t3871 + 0.2e1 * t3908) * t3114 * t3533) * t3129) * pkin(3)) / (t2808 + t3114 * (t2824 * t3138 + t3274)) * t2715 + ((-t3433 - ((t2706 + t2655 * (t3072 + t3177)) * t3115 + (-t3542 - t4108) * t3114) * t3956 + ((-pkin(1) * t3547 + t2962 * t3541 - (t2965 + t3018) * t2655) * t3115 + (-t2535 * t3952 + t3130 * t3548) * t3114) * t3138 + t2538 * t3841) * t2655 + (t3841 * t3909 + (t3554 * t3907 + (pkin(1) * t3521 + t2538) * t3115) * t3138 + (-t3547 + (t3541 - t4043) * t3130 - t2649) * t3114 - t2700 * (t3072 + pkin(2)) * t3115) * t3962 + ((-((-t3057 + (-t3687 + pkin(1)) * t3139 + t3176) * t3092 + t4074) * t3956 + (-(t3100 * t3959 - t3021 - t4039) * t3092 + (((t3068 - t3157) * t3052 - t3947) * t3139 + 0.3e1 * t3534) * t3759 + t3769 * t3959) * t3138 - t4074 * t3816 - (-pkin(1) * t3247 - t3082 - t3788) * t3114 * t3744 + t3847) * t2655 + ((-(-t3065 + t3071 + t3178 - t3725) * t3759 - t3472 * t3952) * t3098 + (t2980 * t3452 + ((t3085 * t3100 + t3566 / 0.2e1 + t2962) * t4082 - t2830) * t3129) * t3138 + (t3071 - t2943) * t3759 + t3092 * t3439 - t3439) * t3962) * t2715) * t2778;
t2556 = t2655 + t3868;
t2775 = 0.1e1 / ((t2818 * t3114 + t2843) * t3138 + t3306);
t3167 = -0.3e1 / 0.2e1 * pkin(2);
t3250 = t3456 + t3643;
t3372 = pkin(2) * t3521;
t2493 = ((-t3369 * t3138 + (pkin(2) * t3632 + t3018 * t3138 + t3765) * t2556) * t2655 - ((t2556 * t3730 - t3962) * t3138 - t3981) * t3962) * t2775 + ((t3433 + (((t3167 + t3649) * t4014 + 0.2e1 * t3057 + t3829 - pkin(2)) * t3956 + (-(-t3184 + t3250 + 0.2e1 * t3366) * t3092 + pkin(2) * t3829 + t2965 + t3113 + t3250) * t3138 + (t2980 - t3816) * pkin(2)) * t2715 + ((t2706 + 0.2e1 * t2646) * t3956 + (t2655 * t3018 - t3369) * t3138) * t3115) * t2778 + (((-t3372 + t3925) * pkin(2) + ((0.2e1 * t2969 * t3008 - 0.3e1 * t3534) * t3138 + t3129 * t3946) * t3868 + (-(t2613 + t2679) * t3764 + (-0.2e1 * t3372 + t3925) * t3138) * pkin(3)) * t2778 + (-(t3098 * t3687 + t3139 * t4073) * t3962 + (t3946 + ((t3008 - 0.2e1 * t3973) * t3138 - t3533) * pkin(3)) * t3907) * t2775) * t3114) * t2715;
t2595 = -0.2e1 * t3910;
t2596 = 0.2e1 * t3910;
t2622 = t2655 * t3928;
t2652 = t2655 ^ 2;
t2893 = t3130 * t2949;
t2931 = (t3170 + t3172) * m(3) + Icges(3,3);
t2975 = t3151 + t4000;
t2978 = t3152 - t3999;
t2769 = -((-t3729 - m(3) * (t2975 * t3139 + t3150)) * t3138 + (t2893 + m(3) * (t2978 * t3139 + t3149)) * t3129 - t2931 * t3139) * t3114 + (-t3129 * Icges(3,5) - Icges(3,6) * t3138 + t4040 * m(3) * (t3147 + t3068)) * t3115;
t2827 = t2896 + t3825;
t2902 = t3170 * m(3) - Icges(3,2) / 0.2e1 + Icges(3,3) / 0.2e1 + Icges(3,1) / 0.2e1;
t3093 = m(3) * t3149;
t3345 = t3927 * t3507;
t3297 = -0.4e1 * t3345;
t3348 = t2655 * t3507;
t3302 = 0.2e1 * t3348;
t3303 = -0.2e1 * t3348;
t3324 = t2907 * t3507;
t3405 = t3996 * t3152;
t3506 = t2715 * t3752;
t3593 = t2952 * t4009;
t3594 = 0.2e1 * t3826;
t3605 = rSges(3,2) * t2646;
t3680 = -t2481 * t2931 + t2484 * t2827 + t2493 * t2769 + (0.2e1 * (t2595 + t3324) * t3868 + t2907 * t3302) * t3098 + (-(t2952 * t3506 - m(3) * (t2976 * t3507 + 0.2e1 * t3605)) * t3868 + (t2655 * t3593 + t2715 * (t2893 + t3093)) * t3866 - m(3) * (-t2652 * t3152 + t3303 * t4000) + (-(t2907 * t3785 + t2949 * t3727 - t2941) * t3092 + t3100 * t4097 + (-t3100 * t3405 - t3999) * m(3)) * t2712) * t3138 + (-t3324 + t2596) * t3868 + t2902 * t3302 + ((-(t2655 * t4019 + t3297) * t3868 + 0.4e1 * t2655 * t3345 - t2907 * t3916) * t3138 - (t2952 * t3727 + (rSges(3,1) * t3057 - t2976) * m(3)) * t3877 + (t2949 * t3506 - m(3) * (t2977 * t3507 + t2622)) * t3868 + (t2655 * t3594 + t2715 * (t3094 + t3729)) * t3866 + (t2712 * t3151 + (rSges(3,2) * t3303 + (t2652 + t3876) * rSges(3,1)) * pkin(2)) * m(3)) * t3129 - (0.2e1 * (-t3916 + (-t3030 * t3092 + t3100) * t2712) * t3098 + t3030 * t3877 - t3876 + t3916) * t3927;
t3662 = t2656 * pkin(7) + t2635;
t3677 = (-t2692 / 0.2e1 + t3662) * t3053 - t3883 / 0.2e1;
t2505 = t2620 + t3677;
t2527 = -t2692 + t3662;
t3539 = t2701 * t3053;
t2536 = t3899 - t3539;
t2584 = t2656 * t2930;
t2616 = t2656 * t3058;
t3197 = t3133 * (((t2692 - 0.2e1 * t2635) * pkin(7) + pkin(6) * t2686) * t3053 + t2701 * t3684 + (t3132 * t3307 + t3555) * t2656) + (t2695 - 0.2e1 * t3253) * t3025 + t4109 * t3058;
t2677 = pkin(1) * t3884;
t3546 = t2984 * t2647;
t3232 = (t2677 - t4047) * t3059 + t3546;
t3267 = t3469 * t3812;
t3289 = t2963 * t3862 + t2527;
t3577 = t2656 * t3966;
t2611 = pkin(3) * t3577;
t3356 = -t3539 / 0.2e1;
t3314 = t2584 / 0.2e1 + t2616 / 0.2e1 + t2611 + t3157 * t3356;
t3337 = t2984 * t3487;
t3504 = t2716 * t3812;
t3342 = t3157 * t3504;
t3513 = t2701 * t3720;
t3368 = pkin(3) * t3513;
t3374 = t3132 * t3583;
t3392 = 0.2e1 * t3502;
t3503 = t2716 * t3782;
t3514 = t2701 * t3058;
t3551 = (pkin(6) * t2635 + pkin(7) * t3658 + t2701 * t3291 + t3677) * t3059;
t3574 = pkin(2) * t3885;
t3597 = 0.2e1 * t3863;
t3667 = 0.2e1 * t2611 + t2616;
t2482 = ((t3132 * t3376 + ((t3022 + t3264) * t3141 + (t2983 + t3955) * pkin(2)) * t3782) * t3864 + ((t2944 * t3503 + t3574) * t3955 + ((t2701 * t3083 - t3053 * t3289) * t3114 + t2947 * pkin(2) * t3503) * t3141 - (t3132 * t3289 - t3961) * t3975 - t3157 * (-t2983 * t3861 * t3996 + t2695 * t3741)) * t3142 + t2674 * t3955 + (t2963 * t2716 * t3525 + (pkin(3) * t3374 + t2944 * t3975) * t2701) * t3141 - (-pkin(3) * t3884 + (t2527 * t3133 + t2944 * t3862 + t2650) * t3132) * t3746 + t3374 * t3980) / ((-pkin(1) * t3568 + t2870 * t3114) * t3141 + t3220) * t2701 + ((-t2716 * t4072 * (t3309 + t3256) * t3103 * t3473 + (t3342 * t4083 + ((t2901 + t3256) * t3502 * t4081 - 0.2e1 * t3551 + (-0.2e1 * t2505 + t3514) * pkin(2)) * t3092 + ((t2656 * t3766 + t3368 + t3667) * t3983 + 0.4e1 * t3342) * t3115 + (t3133 * t3424 + t2929 + t3256 * (t3084 * t3133 + pkin(1))) * t3597 - pkin(2) * t3514 + 0.2e1 * t3551 + t2505 * t3177) * t3104 + (t3197 * t3092 + ((t3356 + t3899) * t3069 + t3314) * t4072 * t3589 + (((t3240 + t4035) * t4082 + 0.4e1 * t2966 + t3241 + t4060) * t3802 + t3337 * t3349) * t2716 - t3197) * t3142 + (t3504 * t4017 + ((t3416 + t4035) * t3392 + t3232) * t3092 + (t2536 * t3983 - 0.2e1 * t3504 + (t2616 + t2584 + (-t3513 + 0.2e1 * t3577) * pkin(3)) * t3756) * t3115 + (t3033 + (t2885 + t4060) * t3133) * t3863 - t3232) * t3157) * t2716 + ((t3585 * t3831 - 0.2e1 * t3267) * t3864 + (0.2e1 * ((t3058 / 0.2e1 + t3025 + t2966 + t3308) * t3862 + t3314) * t3802 + t3337 * t3503) * t3142 + ((t3082 + (t2930 + t3256) * t3133) * t2716 * t3732 + (t2584 - t3368 + t3667) * t2944) * t3114 + t2716 * t3267) * t2656) / ((t2870 * t3141 + t3571) * t3114 + t3235) * t3183;
t3393 = -0.2e1 * t3502;
t2554 = pkin(6) * t3393 + t2647;
t2971 = t3053 + t3166;
t2707 = t2971 * t3393;
t3073 = pkin(1) * t3104;
t3074 = pkin(1) * t3142;
t3270 = t4079 * t3763;
t3286 = -t3912 - t2647;
t3363 = pkin(2) * t2926;
t3381 = (pkin(2) * t3392 + t2644 + t2680) * t3104 - t2644;
t3432 = ((0.2e1 * t2747 + 0.2e1 * t2748 + 0.2e1 * t2761 - t3864) * t3092 + t3902 + t3864 - t2716) * t3763;
t3438 = t2984 * t3717;
t3451 = t3115 * t3750;
t3455 = t3104 * t3766;
t3500 = t2716 * t3009;
t3520 = t3132 * t3900;
t3532 = (t3053 + t3165) * t3971;
t3540 = t2701 * t3066;
t3545 = t2656 * t3066;
t3557 = pkin(6) * t3862;
t3558 = pkin(6) * t3863;
t3634 = 0.2e1 * t3985;
t3642 = t3022 + t3182;
t2485 = (t2542 * t3141 * t3451 + ((t3031 * t3763 + t3141 * t4038) * t3092 + t3133 * t3141 * t3406 - t3270) * t2656 + (((t3104 - 0.4e1 / 0.3e1) * t3763 + ((-0.2e1 / 0.3e1 * t3022 + t3650) * t3104 + 0.2e1 / 0.3e1 * t3363 + 0.4e1 / 0.3e1 * t3022 + t3417) * t3141 - 0.2e1 / 0.3e1 * t3846) * t4016 + (-0.3e1 * t3270 + ((t2924 + t3642) * t4011 + (-pkin(2) * t3686 - t4005) * t4007 - 0.2e1 * t2966 - t2884) * t3141) * t3115 - t3238 * t4082 * t3951) * t2716 + (t4050 * t3092 + (pkin(2) * t3994 + 0.2e1 * t2926) * t3557 + ((t3787 + (t3157 + t3246) * pkin(1)) * t3902 + (-t3994 * t3082 + ((t3017 - t3455) * t3092 + t3455 + t2885) * t3133 + (t3717 * t4026 + ((t3103 - t3142) * t4082 - 0.2e1 * t3103 + t4007) * t3157) * pkin(2)) * t2716) * t3114 - t4050) * t3132 + (t2554 * t3092 - t4066 - t3912 - t2554 + (t3092 * t3286 - t3286 + t4066) * t3104 + (t2716 * t4075 * t4015 + (-t2650 * t3142 - 0.3e1 * t2647 - t3918) * t3092 + (-(t2674 + 0.4e1 * t3977) * t3104 - (-t3574 + t3634) * t3142 + 0.2e1 * t2674 + t2710) * t3115 + t3918 + t2647) * t3102 + ((-(-0.4e1 * t3558 - t3921) * t3102 - t3921) * t3092 + (-(0.4e1 * t3500 - (t2644 + t4024) * t3114) * t3102 + 0.2e1 * t3500 - t2701 * t3746) * t3115 - (0.2e1 * t3558 + t3921) * t3102 + t3921) * t3133 + (((t4024 - t3381) * t3092 - 0.4e1 * t3557 - t2677 - t2680 + ((0.2e1 * t2695 + t3540) * t3092 - t3540) * t3133 + (((pkin(1) * t3900 - t4044) * t3142 + t3900 * t3176) * t3115 + ((-0.4e1 * t3009 + 0.2e1 * t3689 + 0.4e1 * t3971) * t3092 - 0.2e1 * t3689 + t2963 * t4007) * t2716) * t3114 + t3381) * t3141 + (-t2716 + 0.4e1 * t3865 + 0.2e1 * t3902) * t3114 * t3531) * t3132) * pkin(3)) / (t2809 + t3114 * (t2825 * t3141 + t3273)) * t2716 + ((-t3432 - ((t2707 + t2656 * (t3074 + t3177)) * t3115 + (-t3540 - t4109) * t3114) * t3955 + ((-pkin(1) * t3545 + t2963 * t3539 - (t2966 + t3018) * t2656) * t3115 + (-t2536 * t3950 + t3133 * t3546) * t3114) * t3141 + t2539 * t3840) * t2656 + (t3840 * t3903 + (t3553 * t3901 + (pkin(1) * t3520 + t2539) * t3115) * t3141 + (-t3545 + (t3539 - t4044) * t3133 - t2650) * t3114 - t2701 * (t3074 + pkin(2)) * t3115) * t3961 + ((-((-t3060 + (-t3686 + pkin(1)) * t3142 + t3176) * t3092 + t4075) * t3955 + (-(t3104 * t3958 - t3022 - t4038) * t3092 + (((t3069 - t3157) * t3053 - t3947) * t3142 + 0.3e1 * t3532) * t3759 + t3768 * t3958) * t3141 - t4075 * t3813 - (-pkin(1) * t3246 - t3082 - t3787) * t3114 * t3741 + t3846) * t2656 + ((-(-t3066 + t3073 + t3178 - t3715) * t3759 - t3471 * t3950) * t3102 + (t2983 * t3451 + ((t3085 * t3104 + t3565 / 0.2e1 + t2963) * t4082 - t2831) * t3132) * t3141 + (t3073 - t2944) * t3759 + t3092 * t3438 - t3438) * t3961) * t2716) * t2779;
t2557 = t2656 + t3862;
t2776 = 0.1e1 / ((t2819 * t3114 + t2844) * t3141 + t3305);
t3249 = t3455 + t3642;
t3371 = pkin(2) * t3520;
t2494 = ((-t3368 * t3141 + (pkin(2) * t3631 + t3018 * t3141 + t3763) * t2557) * t2656 - ((t2557 * t3720 - t3961) * t3141 - t3980) * t3961) * t2776 + ((t3432 + (((t3167 + t3648) * t4014 + 0.2e1 * t3060 + t3828 - pkin(2)) * t3955 + (-(-t3184 + t3249 + 0.2e1 * t3363) * t3092 + pkin(2) * t3828 + t2966 + t3113 + t3249) * t3141 + (t2983 - t3813) * pkin(2)) * t2716 + ((t2707 + 0.2e1 * t2647) * t3955 + (t2656 * t3018 - t3368) * t3141) * t3115) * t2779 + (((-t3371 + t3924) * pkin(2) + ((0.2e1 * t2971 * t3009 - 0.3e1 * t3532) * t3141 + t3132 * t3945) * t3862 + (-(t2615 + t2680) * t3762 + (-0.2e1 * t3371 + t3924) * t3141) * pkin(3)) * t2779 + (-(t3102 * t3686 + t3142 * t4072) * t3961 + (t3945 + ((t3009 - 0.2e1 * t3971) * t3141 - t3531) * pkin(3)) * t3901) * t2776) * t3114) * t2716;
t2597 = -0.2e1 * t3904;
t2598 = 0.2e1 * t3904;
t2623 = t2656 * t3928;
t2653 = t2656 ^ 2;
t2894 = t3133 * t2949;
t2770 = -((-t3719 - m(3) * (t2975 * t3142 + t3150)) * t3141 + (t2894 + m(3) * (t2978 * t3142 + t3149)) * t3132 - t2931 * t3142) * t3114 + (-t3132 * Icges(3,5) - Icges(3,6) * t3141 + t4041 * m(3) * (t3147 + t3069)) * t3115;
t2828 = t2897 + t3824;
t3343 = t3927 * t3502;
t3296 = -0.4e1 * t3343;
t3347 = t2656 * t3502;
t3300 = 0.2e1 * t3347;
t3301 = -0.2e1 * t3347;
t3323 = t2907 * t3502;
t3501 = t2716 * t3750;
t3604 = rSges(3,2) * t2647;
t3679 = -t2482 * t2931 + t2485 * t2828 + t2494 * t2770 + (0.2e1 * (t2597 + t3323) * t3862 + t2907 * t3300) * t3102 + (-(t2952 * t3501 - m(3) * (t2976 * t3502 + 0.2e1 * t3604)) * t3862 + (t2656 * t3593 + t2716 * (t2894 + t3093)) * t3860 - m(3) * (-t2653 * t3152 + t3301 * t4000) + (-(t2907 * t3784 + t2949 * t3717 - t2941) * t3092 + t3104 * t4096 + (-t3104 * t3405 - t3999) * m(3)) * t2713) * t3141 + (-t3323 + t2598) * t3862 + t2902 * t3300 + ((-(t2656 * t4019 + t3296) * t3862 + 0.4e1 * t2656 * t3343 - t2907 * t3915) * t3141 - (t2952 * t3717 + (rSges(3,1) * t3060 - t2976) * m(3)) * t3875 + (t2949 * t3501 - m(3) * (t2977 * t3502 + t2623)) * t3862 + (t2656 * t3594 + t2716 * (t3094 + t3719)) * t3860 + (t2713 * t3151 + (rSges(3,2) * t3301 + (t2653 + t3874) * rSges(3,1)) * pkin(2)) * m(3)) * t3132 - (0.2e1 * (-t3915 + (-t3031 * t3092 + t3104) * t2713) * t3102 + t3031 * t3875 - t3874 + t3915) * t3927;
t3661 = t2657 * pkin(7) + t2638;
t3676 = (-t2693 / 0.2e1 + t3661) * t3054 - t3878 / 0.2e1;
t2506 = t2621 + t3676;
t2528 = -t2693 + t3661;
t3537 = t2702 * t3054;
t2537 = t3893 - t3537;
t2585 = t2657 * t2930;
t2618 = t2657 * t3061;
t3196 = t3136 * (((t2693 - 0.2e1 * t2638) * pkin(7) + pkin(6) * t2687) * t3054 + t2702 * t3684 + (t3135 * t3307 + t3555) * t2657) + (t2696 - 0.2e1 * t3252) * t3026 + t4110 * t3061;
t2678 = pkin(1) * t3879;
t3544 = t2987 * t2648;
t3231 = (t2678 - t4048) * t3062 + t3544;
t3266 = t3469 * t3809;
t3288 = t2964 * t3856 + t2528;
t3576 = t2657 * t3964;
t2612 = pkin(3) * t3576;
t3355 = -t3537 / 0.2e1;
t3313 = t2585 / 0.2e1 + t2618 / 0.2e1 + t2612 + t3157 * t3355;
t3335 = t2987 * t3486;
t3499 = t2717 * t3809;
t3340 = t3157 * t3499;
t3510 = t2702 * t3710;
t3367 = pkin(3) * t3510;
t3373 = t3135 * t3582;
t3390 = 0.2e1 * t3497;
t3498 = t2717 * t3782;
t3511 = t2702 * t3061;
t3550 = (pkin(6) * t2638 + pkin(7) * t3657 + t2702 * t3291 + t3676) * t3062;
t3573 = pkin(2) * t3880;
t3596 = 0.2e1 * t3857;
t3666 = 0.2e1 * t2612 + t2618;
t2483 = ((t3135 * t3376 + ((t3023 + t3264) * t3144 + (t2986 + t3954) * pkin(2)) * t3782) * t3858 + ((t2945 * t3498 + t3573) * t3954 + ((t2702 * t3083 - t3054 * t3288) * t3114 + t2948 * pkin(2) * t3498) * t3144 - (t3135 * t3288 - t3960) * t3975 - t3157 * (-t2986 * t3855 * t3996 + t2696 * t3738)) * t3145 + t2675 * t3954 + (t2964 * t2717 * t3525 + (pkin(3) * t3373 + t2945 * t3975) * t2702) * t3144 - (-pkin(3) * t3879 + (t2528 * t3136 + t2945 * t3856 + t2651) * t3135) * t3746 + t3373 * t3979) / ((-pkin(1) * t3567 + t2871 * t3114) * t3144 + t3219) * t2702 + ((-t2717 * t4071 * (t3309 + t3255) * t3107 * t3473 + (t3340 * t4083 + ((t2901 + t3255) * t3497 * t4081 - 0.2e1 * t3550 + (-0.2e1 * t2506 + t3511) * pkin(2)) * t3092 + ((t2657 * t3766 + t3367 + t3666) * t3983 + 0.4e1 * t3340) * t3115 + (t3136 * t3424 + t2929 + t3255 * (t3084 * t3136 + pkin(1))) * t3596 - pkin(2) * t3511 + 0.2e1 * t3550 + t2506 * t3177) * t3108 + (t3196 * t3092 + ((t3355 + t3893) * t3070 + t3313) * t4071 * t3589 + (((t3240 + t4034) * t4082 + 0.4e1 * t2967 + t3241 + t4059) * t3799 + t3335 * t3349) * t2717 - t3196) * t3145 + (t3499 * t4017 + ((t3416 + t4034) * t3390 + t3231) * t3092 + (t2537 * t3983 - 0.2e1 * t3499 + (t2618 + t2585 + (-t3510 + 0.2e1 * t3576) * pkin(3)) * t3754) * t3115 + (t3033 + (t2885 + t4059) * t3136) * t3857 - t3231) * t3157) * t2717 + ((t3585 * t3830 - 0.2e1 * t3266) * t3858 + (0.2e1 * ((t3061 / 0.2e1 + t3026 + t2967 + t3308) * t3856 + t3313) * t3799 + t3335 * t3498) * t3145 + ((t3082 + (t2930 + t3255) * t3136) * t2717 * t3732 + t2945 * (t2585 - t3367 + t3666)) * t3114 + t2717 * t3266) * t2657) / ((t2871 * t3144 + t3570) * t3114 + t3234) * t3183;
t3391 = -0.2e1 * t3497;
t2555 = pkin(6) * t3391 + t2648;
t2973 = t3054 + t3166;
t2708 = t2973 * t3391;
t3075 = pkin(1) * t3108;
t3269 = t4078 * t3761;
t3285 = -t3911 - t2648;
t3360 = pkin(2) * t2927;
t3380 = (pkin(2) * t3390 + t2645 + t2681) * t3108 - t2645;
t3431 = ((0.2e1 * t2749 + 0.2e1 * t2750 + 0.2e1 * t2762 - t3858) * t3092 + t3896 + t3858 - t2717) * t3761;
t3437 = t2987 * t3707;
t3450 = t3115 * t3748;
t3454 = t3108 * t3766;
t3495 = t2717 * t3010;
t3519 = t3135 * t3894;
t3530 = (t3054 + t3165) * t3969;
t3536 = pkin(6) * t3857;
t3538 = t2702 * t3067;
t3543 = t2657 * t3067;
t3556 = pkin(6) * t3856;
t3633 = 0.2e1 * t3984;
t3641 = t3023 + t3182;
t2486 = (t2543 * t3144 * t3450 + ((t3032 * t3761 + t3144 * t4037) * t3092 + t3136 * t3144 * t3406 - t3269) * t2657 + (((t3108 - 0.4e1 / 0.3e1) * t3761 + ((-0.2e1 / 0.3e1 * t3023 + t3650) * t3108 + 0.2e1 / 0.3e1 * t3360 + 0.4e1 / 0.3e1 * t3023 + t3417) * t3144 - 0.2e1 / 0.3e1 * t3845) * t4016 + (-0.3e1 * t3269 + ((t2924 + t3641) * t4010 + (-pkin(2) * t3685 - t4005) * t4006 - 0.2e1 * t2967 - t2884) * t3144) * t3115 - t3237 * t4082 * t3949) * t2717 + (t4051 * t3092 + (pkin(2) * t3993 + 0.2e1 * t2927) * t3556 + ((t3786 + (t3157 + t3245) * pkin(1)) * t3896 + (-t3993 * t3082 + ((t3017 - t3454) * t3092 + t3454 + t2885) * t3136 + (t3707 * t4026 + ((t3107 - t3145) * t4082 - 0.2e1 * t3107 + t4006) * t3157) * pkin(2)) * t2717) * t3114 - t4051) * t3135 + (t2555 * t3092 - t4067 - t3911 - t2555 + (t3092 * t3285 - t3285 + t4067) * t3108 + (t2717 * t4076 * t4015 + (-t2651 * t3145 - 0.3e1 * t2648 - t3917) * t3092 + (-(t2675 + 0.4e1 * t3976) * t3108 - (-t3573 + t3633) * t3145 + 0.2e1 * t2675 + t2711) * t3115 + t3917 + t2648) * t3106 + ((-(-0.4e1 * t3536 - t3920) * t3106 - t3920) * t3092 + (-(0.4e1 * t3495 - (t2645 + t4023) * t3114) * t3106 + 0.2e1 * t3495 - t2702 * t3746) * t3115 - (0.2e1 * t3536 + t3920) * t3106 + t3920) * t3136 + (((t4023 - t3380) * t3092 - 0.4e1 * t3556 - t2678 - t2681 + ((0.2e1 * t2696 + t3538) * t3092 - t3538) * t3136 + (((pkin(1) * t3894 - t4045) * t3145 + t3894 * t3176) * t3115 + ((-0.4e1 * t3010 + 0.2e1 * t3688 + 0.4e1 * t3969) * t3092 - 0.2e1 * t3688 + t2964 * t4006) * t2717) * t3114 + t3380) * t3144 + (-t2717 + 0.4e1 * t3859 + 0.2e1 * t3896) * t3114 * t3535) * t3135) * pkin(3)) / (t2810 + t3114 * (t2826 * t3144 + t3272)) * t2717 + ((-t3431 - ((t2708 + t2657 * (t3064 + t3177)) * t3115 + (-t3538 - t4110) * t3114) * t3954 + ((-pkin(1) * t3543 + t2964 * t3537 - (t2967 + t3018) * t2657) * t3115 + (-t2537 * t3948 + t3136 * t3544) * t3114) * t3144 + t2540 * t3839) * t2657 + (t3839 * t3897 + (t3552 * t3895 + (pkin(1) * t3519 + t2540) * t3115) * t3144 + (-t3543 + (t3537 - t4045) * t3136 - t2651) * t3114 - t2702 * (t3064 + pkin(2)) * t3115) * t3960 + ((-((-t3063 + (-t3685 + pkin(1)) * t3145 + t3176) * t3092 + t4076) * t3954 + (-(t3108 * t3957 - t3023 - t4037) * t3092 + (((t3070 - t3157) * t3054 - t3947) * t3145 + 0.3e1 * t3530) * t3759 + t3767 * t3957) * t3144 - t4076 * t3810 - t3114 * (-pkin(1) * t3245 - t3082 - t3786) * t3738 + t3845) * t2657 + ((-(-t3067 + t3075 + t3178 - t3705) * t3759 - t3470 * t3948) * t3106 + (t2986 * t3450 + ((t3085 * t3108 + t3564 / 0.2e1 + t2964) * t4082 - t2832) * t3135) * t3144 + (t3075 - t2945) * t3759 + t3092 * t3437 - t3437) * t3960) * t2717) * t2780;
t2558 = t2657 + t3856;
t2777 = 0.1e1 / ((t2820 * t3114 + t2845) * t3144 + t3304);
t3248 = t3454 + t3641;
t3370 = pkin(2) * t3519;
t2495 = ((-t3367 * t3144 + (pkin(2) * t3630 + t3018 * t3144 + t3761) * t2558) * t2657 - ((t2558 * t3710 - t3960) * t3144 - t3979) * t3960) * t2777 + ((t3431 + (((t3167 + t3647) * t4014 + 0.2e1 * t3063 + t3827 - pkin(2)) * t3954 + (-(-t3184 + t3248 + 0.2e1 * t3360) * t3092 + pkin(2) * t3827 + t2967 + t3113 + t3248) * t3144 + (t2986 - t3810) * pkin(2)) * t2717 + ((t2708 + 0.2e1 * t2648) * t3954 + (t2657 * t3018 - t3367) * t3144) * t3115) * t2780 + (((-t3370 + t3923) * pkin(2) + ((0.2e1 * t2973 * t3010 - 0.3e1 * t3530) * t3144 + t3135 * t3944) * t3856 + (-(t2617 + t2681) * t3760 + (-0.2e1 * t3370 + t3923) * t3144) * pkin(3)) * t2780 + (-(t3106 * t3685 + t3145 * t4071) * t3960 + (t3944 + ((t3010 - 0.2e1 * t3969) * t3144 - t3535) * pkin(3)) * t3895) * t2777) * t3114) * t2717;
t2599 = -0.2e1 * t3898;
t2600 = 0.2e1 * t3898;
t2624 = t2657 * t3928;
t2654 = t2657 ^ 2;
t2895 = t3136 * t2949;
t2771 = -((-t3709 - m(3) * (t2975 * t3145 + t3150)) * t3144 + (t2895 + m(3) * (t2978 * t3145 + t3149)) * t3135 - t2931 * t3145) * t3114 + (-t3135 * Icges(3,5) - Icges(3,6) * t3144 + t4042 * m(3) * (t3147 + t3070)) * t3115;
t2829 = t2898 + t3823;
t3341 = t3927 * t3497;
t3295 = -0.4e1 * t3341;
t3346 = t2657 * t3497;
t3298 = 0.2e1 * t3346;
t3299 = -0.2e1 * t3346;
t3322 = t2907 * t3497;
t3496 = t2717 * t3748;
t3603 = rSges(3,2) * t2648;
t3678 = -t2483 * t2931 + t2486 * t2829 + t2495 * t2771 + (0.2e1 * (t2599 + t3322) * t3856 + t2907 * t3298) * t3106 + (-(t2952 * t3496 - m(3) * (t2976 * t3497 + 0.2e1 * t3603)) * t3856 + (t2657 * t3593 + t2717 * (t2895 + t3093)) * t3854 - m(3) * (-t2654 * t3152 + t3299 * t4000) + (-(t2907 * t3783 + t2949 * t3707 - t2941) * t3092 + t3108 * t4095 + (-t3108 * t3405 - t3999) * m(3)) * t2714) * t3144 + (-t3322 + t2600) * t3856 + t2902 * t3298 + ((-(t2657 * t4019 + t3295) * t3856 + 0.4e1 * t2657 * t3341 - t2907 * t3914) * t3144 - (t2952 * t3707 + (rSges(3,1) * t3063 - t2976) * m(3)) * t3873 + (t2949 * t3496 - m(3) * (t2977 * t3497 + t2624)) * t3856 + (t2657 * t3594 + t2717 * (t3094 + t3709)) * t3854 + (t2714 * t3151 + (rSges(3,2) * t3299 + (t2654 + t3872) * rSges(3,1)) * pkin(2)) * m(3)) * t3135 - (0.2e1 * (-t3914 + (-t3032 * t3092 + t3108) * t2714) * t3106 + t3032 * t3873 - t3872 + t3914) * t3927;
t3430 = m(3) * t3605;
t3674 = (t2667 - 0.2e1 * t3430) * t3129 + t2814 * t2655;
t3429 = m(3) * t3604;
t3673 = (t2668 - 0.2e1 * t3429) * t3132 + t2814 * t2656;
t3428 = m(3) * t3603;
t3672 = (t2669 - 0.2e1 * t3428) * t3135 + t2814 * t2657;
t3671 = t2700 * t2941 - t2592;
t3670 = t2701 * t2941 - t2593;
t3669 = t2702 * t2941 - t2594;
t2697 = t2700 ^ 2;
t3656 = -t2652 + t2697;
t2698 = t2701 ^ 2;
t3655 = -t2653 + t2698;
t2699 = t2702 ^ 2;
t3654 = -t2654 + t2699;
t3636 = -0.2e1 * t2941;
t3629 = 0.2e1 * t3942;
t3628 = m(3) * t3983;
t3620 = t3160 / 0.2e1;
t3619 = 0.2e1 * t2655;
t3618 = 0.2e1 * t2656;
t3617 = 0.2e1 * t2657;
t3615 = 0.2e1 * t3114;
t3614 = m(3) * t3938;
t3613 = m(3) * t3937;
t3612 = m(3) * t3936;
t3611 = t2700 * t4001;
t3610 = t2701 * t4001;
t3609 = t2702 * t4001;
t3608 = rSges(3,2) * t3990;
t3607 = rSges(3,2) * t3989;
t3606 = rSges(3,2) * t3988;
t3601 = 0.2e1 * t3891;
t3600 = 0.2e1 * t3886;
t3599 = 0.2e1 * t3881;
t3595 = t2902 * t4009;
t3592 = 0.2e1 * t3795;
t3591 = 0.2e1 * t3794;
t3590 = 0.2e1 * t3793;
t3588 = -0.2e1 * t3683;
t3587 = 0.2e1 * t3683;
t3051 = t3151 * t3926;
t3586 = -0.2e1 * t3094;
t3518 = t2700 * t3795;
t3515 = t2701 * t3794;
t3512 = t2702 * t3793;
t3491 = t2907 * t3758;
t3490 = t2907 * t3756;
t3489 = t2907 * t3754;
t3427 = pkin(2) * t3608;
t3426 = pkin(2) * t3607;
t3425 = pkin(2) * t3606;
t3423 = rSges(3,1) * t3620;
t3422 = rSges(3,2) * t3620;
t3418 = 0.2e1 * t2889;
t3409 = t2697 * t3628;
t3408 = t2698 * t3628;
t3407 = t2699 * t3628;
t2664 = t2700 * t2949;
t3260 = t3682 + t3791;
t2520 = t3260 * t3619 + t2664;
t2547 = t2652 + t2697;
t2571 = t4087 * t2655;
t2574 = t2655 * t4097;
t2577 = t2889 * t2655;
t2586 = t2938 * t2655;
t2589 = t2949 * t2655;
t2658 = -0.4e1 * t3518;
t2703 = t2715 * t3491;
t2886 = t3608 - t2979;
t2957 = -0.2e1 * t3427;
t2751 = -(t4068 + (t3592 + t4107) * t3130) * t3114 - t3115 * (t2957 + (-t2938 * t3130 + (t3138 * t4002 - t2886) * t3139) * pkin(1) - t4052);
t3227 = t2957 + t2814;
t2793 = t3227 - t4091;
t2906 = t3044 * t3926 - 0.2e1 * Icges(3,1) + 0.2e1 * Icges(3,2);
t2928 = 0.2e1 * t3991;
t2950 = 0.2e1 * t2949;
t2951 = 0.2e1 * t2952;
t2953 = -0.2e1 * m(3) * t3172 - Icges(3,3) - t3929;
t2956 = 0.2e1 * t3427;
t3016 = 0.4e1 * t3927;
t3049 = -0.2e1 * t3682;
t3050 = 0.2e1 * t3094;
t3208 = -(rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) - (t3171 + (0.2e1 * pkin(6) + rSges(2,3)) * rSges(2,3) + t3638) * m(2) - (t3172 + (0.2e1 * pkin(7) + rSges(3,3)) * rSges(3,3) + t3414) * m(3) - Icges(1,3) - t3931;
t3211 = -t3014 * t3098 - t4107;
t3215 = -(rSges(2,1) + t3148) * (-rSges(2,1) + t3148) * m(2) - Icges(2,1) + Icges(2,3) + (-t3172 - t3181 + t3640) * m(3) - t3929;
t3404 = t2778 * ((-((-t4100 + (-t3798 + t3049) * t3138 + t2956 - t2814) * t3100 - 0.2e1 * t3204 * t3727 + t2906 * t3098 + (t3016 * t3129 + t2928) * t3138 + t3129 * t3636 + t3215) * t3092 + (t3130 * t3211 - t4068) * t3589 - t2793 * t3100 - ((t2951 * t3130 + t3050) * t3138 + (-t2950 * t3129 + t3418) * t3130 + t2886 * t3178) * t3139 + t4100 - (-t3798 + t3051) * t3138 + t3130 * t3629 + t3129 * t3588 + t3208) * t2493 + t2751 * t2484 + t2769 * t2481 + 0.4e1 * (-t3518 + (-t2592 + (t4097 / 0.2e1 + t3422) * t2700) * t3138 + (t2700 * t3423 + t2589) * t3129 - t2577 + t3892 / 0.2e1) * t2715 * t3476 + ((t2520 * t3138 + t2655 * t4100 + t3674) * t3867 * t4082 + ((-t2700 * t3926 * t4040 - t2586) * t2649 + ((-t2574 + t2667) * t3138 - t2664 * t3129 + (-t2941 * t3138 - t3991 * t3129 + t3592 + t4088) * t2655) * t2715 * t3615) * t3115 + 0.2e1 * (t2655 * t3792 - t2907 * t3867) * t3909 + ((-t2652 * t4097 - m(3) * (t2652 * t2977 - t2697 * t2978)) * t3114 + (-pkin(1) * t3611 - t2520 * t3130) * t4086) * t3138 - 0.2e1 * t3674 * t3867 + ((-t2652 * t2976 + t2697 * t2975) * t3990 + t4088 * t2652) * t3114 - 0.2e1 * (t2700 * t3614 + t2586) * t3986) * t3139 - 0.2e1 * (t2658 + (-t4022 * t4097 + t3671) * t3138 + (t2700 * t3991 + t2589) * t3129 - t2577 + 0.2e1 * t3892) * t3871 + (0.4e1 * (-t2703 + t3910) * t3891 + ((-0.2e1 * (t2589 + (0.4e1 * t3791 + t3991) * t2700) * t3869 - t2547 * t3094) * t3130 + 0.2e1 * t2700 * (-t2574 - t3430 - t2667 / 0.2e1)) * t3138 + ((t2700 * t2907 + t3129 * t3671 + t2571) * t3598 - (-t2547 * t3608 + t2652 * t2979) * pkin(1)) * t3130 + t2700 * ((m(3) * t2622 + t2664) * t3129 + t2595)) * t3115 + (-t2655 * t3491 + t2715 * t4018) * t3601 + ((t3656 * t3826 + (t2715 * t3586 + (t3051 - 0.4e1 * t3791) * t3890) * t2655) * t3130 + rSges(3,2) * t3409 - 0.2e1 * t2715 * (t2592 + (-t3683 - t4097) * t2700)) * t3138 + (((t2655 * t2700 * t3587 + t2952 * t3656) * t3129 + (-t2700 * t2953 + t2571) * t2655) * t3114 + t2655 * t2886 * t3635) * t3130 + t3409 * t3938 + ((-pkin(6) * t3611 + t2589) * t3129 - t2577 + t3892) * t4086);
t2665 = t2701 * t2949;
t3259 = t3682 + t3790;
t2521 = t3259 * t3618 + t2665;
t2548 = t2653 + t2698;
t2572 = t4087 * t2656;
t2575 = t2656 * t4096;
t2578 = t2889 * t2656;
t2587 = t2938 * t2656;
t2590 = t2949 * t2656;
t2659 = -0.4e1 * t3515;
t2704 = t2716 * t3490;
t2887 = t3607 - t2979;
t2959 = -0.2e1 * t3426;
t2752 = -(t4069 + (t3591 + t4106) * t3133) * t3114 - t3115 * (t2959 + (-t2938 * t3133 + (t3141 * t4002 - t2887) * t3142) * pkin(1) - t4053);
t3226 = t2959 + t2814;
t2794 = t3226 - t4090;
t2958 = 0.2e1 * t3426;
t3210 = -t3014 * t3102 - t4106;
t3403 = t2779 * ((-((-t4099 + (-t3797 + t3049) * t3141 + t2958 - t2814) * t3104 - 0.2e1 * t3203 * t3717 + t2906 * t3102 + (t3016 * t3132 + t2928) * t3141 + t3132 * t3636 + t3215) * t3092 + (t3133 * t3210 - t4069) * t3589 - t2794 * t3104 - ((t2951 * t3133 + t3050) * t3141 + (-t2950 * t3132 + t3418) * t3133 + t2887 * t3178) * t3142 + t4099 - (-t3797 + t3051) * t3141 + t3133 * t3629 + t3132 * t3588 + t3208) * t2494 + t2752 * t2485 + t2770 * t2482 + 0.4e1 * (-t3515 + (-t2593 + (t4096 / 0.2e1 + t3422) * t2701) * t3141 + (t2701 * t3423 + t2590) * t3132 - t2578 + t3887 / 0.2e1) * t2716 * t3475 + ((t2521 * t3141 + t2656 * t4099 + t3673) * t3861 * t4082 + ((-t2701 * t3926 * t4041 - t2587) * t2650 + ((-t2575 + t2668) * t3141 - t2665 * t3132 + (-t2941 * t3141 - t3991 * t3132 + t3591 + t4088) * t2656) * t2716 * t3615) * t3115 + 0.2e1 * (t2656 * t3792 - t2907 * t3861) * t3903 + ((-t2653 * t4096 - m(3) * (t2653 * t2977 - t2698 * t2978)) * t3114 + (-pkin(1) * t3610 - t2521 * t3133) * t4085) * t3141 - 0.2e1 * t3673 * t3861 + ((-t2653 * t2976 + t2698 * t2975) * t3989 + t4088 * t2653) * t3114 - 0.2e1 * (t2701 * t3613 + t2587) * t3985) * t3142 - 0.2e1 * (t2659 + (-t4021 * t4096 + t3670) * t3141 + (t2701 * t3991 + t2590) * t3132 - t2578 + 0.2e1 * t3887) * t3865 + (0.4e1 * (-t2704 + t3904) * t3886 + ((-0.2e1 * (t2590 + (0.4e1 * t3790 + t3991) * t2701) * t3863 - t2548 * t3094) * t3133 + 0.2e1 * t2701 * (-t2575 - t3429 - t2668 / 0.2e1)) * t3141 + ((t2701 * t2907 + t3132 * t3670 + t2572) * t3597 - (-t2548 * t3607 + t2653 * t2979) * pkin(1)) * t3133 + t2701 * ((m(3) * t2623 + t2665) * t3132 + t2597)) * t3115 + (-t2656 * t3490 + t2716 * t4018) * t3600 + ((t3655 * t3826 + (t2716 * t3586 + (t3051 - 0.4e1 * t3790) * t3885) * t2656) * t3133 + rSges(3,2) * t3408 - 0.2e1 * t2716 * (t2593 + (-t3683 - t4096) * t2701)) * t3141 + (((t2656 * t2701 * t3587 + t2952 * t3655) * t3132 + (-t2701 * t2953 + t2572) * t2656) * t3114 + t2656 * t2887 * t3634) * t3133 + t3408 * t3937 + ((-pkin(6) * t3610 + t2590) * t3132 - t2578 + t3887) * t4085);
t2666 = t2702 * t2949;
t3258 = t3682 + t3789;
t2522 = t3258 * t3617 + t2666;
t2549 = t2654 + t2699;
t2573 = t4087 * t2657;
t2576 = t2657 * t4095;
t2579 = t2889 * t2657;
t2588 = t2938 * t2657;
t2591 = t2949 * t2657;
t2660 = -0.4e1 * t3512;
t2705 = t2717 * t3489;
t2888 = t3606 - t2979;
t2961 = -0.2e1 * t3425;
t2753 = -(t4070 + (t3590 + t4105) * t3136) * t3114 - t3115 * (t2961 + (-t2938 * t3136 + (t3144 * t4002 - t2888) * t3145) * pkin(1) - t4054);
t3225 = t2961 + t2814;
t2795 = t3225 - t4089;
t2960 = 0.2e1 * t3425;
t3209 = -t3014 * t3106 - t4105;
t3402 = t2780 * ((-((-t4098 + (-t3796 + t3049) * t3144 + t2960 - t2814) * t3108 - 0.2e1 * t3202 * t3707 + t2906 * t3106 + (t3016 * t3135 + t2928) * t3144 + t3135 * t3636 + t3215) * t3092 + (t3136 * t3209 - t4070) * t3589 - t2795 * t3108 - ((t2951 * t3136 + t3050) * t3144 + (-t2950 * t3135 + t3418) * t3136 + t2888 * t3178) * t3145 + t4098 - (-t3796 + t3051) * t3144 + t3136 * t3629 + t3135 * t3588 + t3208) * t2495 + t2753 * t2486 + t2771 * t2483 + 0.4e1 * (-t3512 + (-t2594 + (t4095 / 0.2e1 + t3422) * t2702) * t3144 + (t2702 * t3423 + t2591) * t3135 - t2579 + t3882 / 0.2e1) * t2717 * t3474 + ((t2522 * t3144 + t2657 * t4098 + t3672) * t3855 * t4082 + ((-t2702 * t3926 * t4042 - t2588) * t2651 + ((-t2576 + t2669) * t3144 - t2666 * t3135 + (-t2941 * t3144 - t3991 * t3135 + t3590 + t4088) * t2657) * t2717 * t3615) * t3115 + 0.2e1 * (t2657 * t3792 - t2907 * t3855) * t3897 + ((-t2654 * t4095 - m(3) * (t2654 * t2977 - t2699 * t2978)) * t3114 + (-pkin(1) * t3609 - t2522 * t3136) * t4084) * t3144 - 0.2e1 * t3672 * t3855 + ((-t2654 * t2976 + t2699 * t2975) * t3988 + t4088 * t2654) * t3114 - 0.2e1 * (t2702 * t3612 + t2588) * t3984) * t3145 - 0.2e1 * (t2660 + (-t4020 * t4095 + t3669) * t3144 + (t2702 * t3991 + t2591) * t3135 - t2579 + 0.2e1 * t3882) * t3859 + (0.4e1 * (-t2705 + t3898) * t3881 + ((-0.2e1 * (t2591 + (0.4e1 * t3789 + t3991) * t2702) * t3857 - t2549 * t3094) * t3136 + 0.2e1 * t2702 * (-t2576 - t3428 - t2669 / 0.2e1)) * t3144 + ((t2702 * t2907 + t3135 * t3669 + t2573) * t3596 - (-t2549 * t3606 + t2654 * t2979) * pkin(1)) * t3136 + t2702 * ((m(3) * t2624 + t2666) * t3135 + t2599)) * t3115 + (-t2657 * t3489 + t2717 * t4018) * t3599 + ((t3654 * t3826 + (t2717 * t3586 + (t3051 - 0.4e1 * t3789) * t3880) * t2657) * t3136 + rSges(3,2) * t3407 - 0.2e1 * t2717 * (t2594 + (-t3683 - t4095) * t2702)) * t3144 + (((t2657 * t2702 * t3587 + t2952 * t3654) * t3135 + (-t2702 * t2953 + t2573) * t2657) * t3114 + t2657 * t2888 * t3633) * t3136 + t3407 * t3936 + ((-pkin(6) * t3609 + t2591) * t3135 - t2579 + t3882) * t4084);
t2567 = -0.2e1 * t3573 + t3984;
t3401 = t2786 * (t2753 * t2495 + (t2960 + t4054) * t2486 + t2829 * t2483 + (t3261 * t2702 * t3615 + (t3209 * t3759 + t3942 + (-t2795 * t3092 + 0.2e1 * t3144 * t3258 + t3225 + t4098) * t3136) * t2717) * t3854 - (t2660 + (-t2949 * t3497 + t4020 * t4062) * t3144 + t2823 * t3497 + (-pkin(2) * t3612 - t3927) * t4020) * t3856 + (-t2705 + t2600) * t3599 + (t2567 * t3855 * t4002 + (t3135 * t3295 + t3617 * t4062 - t2669) * t2702) * t3144 + (-t2567 * t3606 + t2702 * t3595 + t2717 * t3940) * t3855 + t2702 * ((t2702 * t3932 + t2624) * m(3) - Icges(3,6) * t2702) * t3135 + t2702 * t2599 + (-t3873 + (-t3387 + 0.1e1) * t2714) * t3202);
t3400 = t2787 * t3680;
t3399 = t2789 * t3678;
t2565 = -0.2e1 * t3575 + t3986;
t3398 = (t2751 * t2493 + (t2956 + t4052) * t2484 + t2827 * t2481 + (t3263 * t2700 * t3615 + (t3211 * t3759 + t3942 + (-t2793 * t3092 + 0.2e1 * t3138 * t3260 + t3227 + t4100) * t3130) * t2715) * t3866 - (t2658 + (-t2949 * t3507 + t4022 * t4064) * t3138 + t2821 * t3507 + (-pkin(2) * t3614 - t3927) * t4022) * t3868 + (-t2703 + t2596) * t3601 + (t2565 * t3867 * t4002 + (t3129 * t3297 + t3619 * t4064 - t2667) * t2700) * t3138 + (-t2565 * t3608 + t2700 * t3595 + t2715 * t3940) * t3867 + t2700 * ((t2700 * t3932 + t2622) * m(3) - Icges(3,6) * t2700) * t3129 + t2700 * t2595 + (-t3877 + (-t3389 + 0.1e1) * t2712) * t3204) * t2784;
t2566 = -0.2e1 * t3574 + t3985;
t3397 = (t2752 * t2494 + (t2958 + t4053) * t2485 + t2828 * t2482 + (t3262 * t2701 * t3615 + (t3210 * t3759 + t3942 + (-t2794 * t3092 + 0.2e1 * t3141 * t3259 + t3226 + t4099) * t3133) * t2716) * t3860 - (t2659 + (-t2949 * t3502 + t4021 * t4063) * t3141 + t2822 * t3502 + (-pkin(2) * t3613 - t3927) * t4021) * t3862 + (-t2704 + t2598) * t3600 + (t2566 * t3861 * t4002 + (t3132 * t3296 + t3618 * t4063 - t2668) * t2701) * t3141 + (-t2566 * t3607 + t2701 * t3595 + t2716 * t3940) * t3861 + t2701 * ((t2701 * t3932 + t2623) * m(3) - Icges(3,6) * t2701) * t3132 + t2701 * t2597 + (-t3875 + (-t3388 + 0.1e1) * t2713) * t3203) * t2785;
t3396 = t3679 * t2788;
t1 = [t2767 * t3402 + t2765 * t3403 + t2763 * t3404 + t2735 * t3401 + t2734 * t3397 + t2733 * t3398 + (t2737 * t3400 + t2739 * t3396 + t2741 * t3399) * t3183; t2768 * t3402 + t2766 * t3403 + t2764 * t3404 + t2732 * t3401 + t2731 * t3397 + t2730 * t3398 + (t2736 * t3400 + t2738 * t3396 + t2740 * t3399) * t3183; t2792 * t3402 + t2791 * t3403 + t2790 * t3404 + t2759 * t3401 + t2758 * t3397 + t2757 * t3398 + (-t3678 * t3851 - t3679 * t3852 - t3680 * t3853) * t3745;];
taucX  = t1;
