% Calculate inertia matrix for parallel robot
% P3RRRRR10V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% MX [3x3]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:25
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1(xP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR10V2G3A0_inertia_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 02:18:25
% EndTime: 2020-08-07 02:18:43
% DurationCPUTime: 19.36s
% Computational Cost: add. (24708->825), mult. (43002->1306), div. (432->13), fcn. (27846->26), ass. (0->550)
t2468 = -2 * pkin(2);
t2051 = (pkin(7) + rSges(3,3));
t2414 = (m(3) * t2051);
t1944 = rSges(3,2) * t2414 - Icges(3,6);
t1945 = rSges(3,1) * t2414 - Icges(3,5);
t2033 = sin(qJ(3,3));
t2042 = cos(qJ(3,3));
t1864 = -t1944 * t2042 - t1945 * t2033;
t2061 = (rSges(3,2) ^ 2);
t2063 = (rSges(3,1) ^ 2);
t1925 = m(3) * (-t2061 + t2063) - Icges(3,1) + Icges(3,2);
t2056 = rSges(3,2) * pkin(2);
t2421 = (rSges(3,1) * pkin(6));
t1940 = m(3) * (t2056 + t2421);
t2055 = rSges(3,2) * pkin(6);
t2422 = rSges(3,1) * pkin(2);
t1955 = -t2055 + t2422;
t2022 = t2042 ^ 2;
t2034 = sin(qJ(2,3));
t2043 = cos(qJ(2,3));
t2052 = rSges(2,3) + pkin(6);
t2418 = m(2) * t2052;
t2107 = -rSges(2,2) * t2418 + pkin(6) * t2414 + Icges(2,6);
t2417 = m(3) * t2033;
t2420 = rSges(3,1) * rSges(3,2);
t1981 = m(3) * t2420 - Icges(3,4);
t2425 = -2 * t1981;
t2449 = rSges(2,1) * t2418 + Icges(3,4) - Icges(2,5) - (-pkin(2) * pkin(6) + t2420) * m(3);
t2467 = (t1955 * t2417 - t2022 * t2425 + (t1925 * t2033 + t1940) * t2042 + t2449) * t2034 - (t2107 - t1864) * t2043;
t2036 = sin(qJ(3,2));
t2045 = cos(qJ(3,2));
t1865 = -t1944 * t2045 - t1945 * t2036;
t2024 = t2045 ^ 2;
t2037 = sin(qJ(2,2));
t2046 = cos(qJ(2,2));
t2416 = m(3) * t2036;
t2466 = (t1955 * t2416 - t2024 * t2425 + (t1925 * t2036 + t1940) * t2045 + t2449) * t2037 - (t2107 - t1865) * t2046;
t2039 = sin(qJ(3,1));
t2048 = cos(qJ(3,1));
t1866 = -t1944 * t2048 - t1945 * t2039;
t2026 = t2048 ^ 2;
t2040 = sin(qJ(2,1));
t2049 = cos(qJ(2,1));
t2415 = m(3) * t2039;
t2465 = (t1955 * t2415 - t2026 * t2425 + (t1925 * t2039 + t1940) * t2048 + t2449) * t2040 - (t2107 - t1866) * t2049;
t1892 = t1925 * t2026;
t2232 = rSges(3,2) * t2415;
t2464 = t2232 * t2468 + t1892;
t1891 = t1925 * t2024;
t2233 = rSges(3,2) * t2416;
t2463 = t2233 * t2468 + t1891;
t1890 = t1925 * t2022;
t2234 = rSges(3,2) * t2417;
t2462 = t2234 * t2468 + t1890;
t2007 = t2042 * pkin(3);
t1964 = t2007 + pkin(2);
t2458 = t1964 * t2034;
t2008 = t2045 * pkin(3);
t1965 = t2008 + pkin(2);
t2457 = t1965 * t2037;
t2009 = t2048 * pkin(3);
t1966 = t2009 + pkin(2);
t2456 = t1966 * t2040;
t2255 = m(3) * t2422;
t2001 = 2 * t2255;
t2324 = t1981 * t2033;
t2231 = 0.2e1 * t2324;
t2452 = (-t2231 + t2001) * t2042 + t2462;
t2323 = t1981 * t2036;
t2230 = 0.2e1 * t2323;
t2451 = (-t2230 + t2001) * t2045 + t2463;
t2322 = t1981 * t2039;
t2229 = 0.2e1 * t2322;
t2450 = (-t2229 + t2001) * t2048 + t2464;
t2023 = t2043 ^ 2;
t2058 = pkin(8) + pkin(7);
t2445 = t2023 * t2058;
t2025 = t2046 ^ 2;
t2444 = t2025 * t2058;
t2027 = t2049 ^ 2;
t2443 = t2027 * t2058;
t1980 = t2058 * t2049;
t1911 = -pkin(2) * t2040 + t1980;
t2028 = sin(pkin(4));
t2095 = t2028 * t1911;
t1979 = t2058 * t2046;
t1910 = -pkin(2) * t2037 + t1979;
t2096 = t2028 * t1910;
t1978 = t2058 * t2043;
t1909 = -pkin(2) * t2034 + t1978;
t2097 = t2028 * t1909;
t2062 = rSges(2,2) ^ 2;
t2064 = rSges(2,1) ^ 2;
t2068 = pkin(2) ^ 2;
t2246 = t2061 + t2068;
t2393 = (Icges(3,1) + Icges(2,3));
t2145 = (t2051 ^ 2 + t2246) * m(3) + (t2062 + t2064) * m(2) + t2393;
t2442 = t2145 + t2452;
t2441 = t2145 + t2451;
t2440 = t2145 + t2450;
t2424 = m(2) * rSges(2,2);
t2114 = -rSges(2,1) * t2424 + pkin(2) * t2414 + Icges(2,4);
t2394 = (Icges(2,1) + Icges(3,2));
t2105 = (t2061 - (pkin(2) + t2051) * (-pkin(2) + t2051)) * m(3) + (-t2062 + t2064) * m(2) + Icges(2,2) + Icges(3,3) - t2394;
t2212 = t2033 * pkin(6) + pkin(3);
t2400 = t2022 * pkin(3);
t2406 = pkin(2) * t2042;
t2433 = (-t2212 + 0.2e1 * t2400 + t2406) * t2034 - t2042 * t1978;
t2211 = t2036 * pkin(6) + pkin(3);
t2398 = t2024 * pkin(3);
t2405 = pkin(2) * t2045;
t2432 = (-t2211 + 0.2e1 * t2398 + t2405) * t2037 - t2045 * t1979;
t2210 = t2039 * pkin(6) + pkin(3);
t2396 = t2026 * pkin(3);
t2404 = pkin(2) * t2048;
t2431 = (-t2210 + 0.2e1 * t2396 + t2404) * t2040 - t2048 * t1980;
t1977 = t2058 * t2040;
t2012 = pkin(2) * t2049;
t2249 = t1977 + t2012;
t1897 = pkin(1) + t2249;
t2050 = cos(qJ(1,1));
t2006 = t2039 * pkin(3);
t2142 = (t2027 - 0.2e1) * t2006 - pkin(6);
t2041 = sin(qJ(1,1));
t2297 = t2028 * t2041;
t2430 = -t1897 * t2050 + t2142 * t2297;
t1976 = t2058 * t2037;
t2011 = pkin(2) * t2046;
t2250 = t1976 + t2011;
t1896 = pkin(1) + t2250;
t2047 = cos(qJ(1,2));
t2005 = t2036 * pkin(3);
t2143 = (t2025 - 0.2e1) * t2005 - pkin(6);
t2038 = sin(qJ(1,2));
t2299 = t2028 * t2038;
t2429 = -t1896 * t2047 + t2143 * t2299;
t1975 = t2058 * t2034;
t2010 = pkin(2) * t2043;
t2251 = t1975 + t2010;
t1895 = pkin(1) + t2251;
t2044 = cos(qJ(1,3));
t2004 = t2033 * pkin(3);
t2144 = (t2023 - 0.2e1) * t2004 - pkin(6);
t2035 = sin(qJ(1,3));
t2301 = t2028 * t2035;
t2428 = -t1895 * t2044 + t2144 * t2301;
t2427 = 2 * m(3);
t2426 = -0.2e1 * pkin(1);
t2423 = m(3) * rSges(3,1);
t2029 = cos(pkin(4));
t2419 = t2029 / 0.2e1;
t2413 = pkin(1) * t2029;
t2013 = pkin(1) * t2034;
t2014 = pkin(1) * t2037;
t2015 = pkin(1) * t2040;
t2412 = pkin(2) * t2033;
t2410 = pkin(2) * t2036;
t2408 = pkin(2) * t2039;
t2399 = t2023 * pkin(2);
t2397 = t2025 * pkin(2);
t2395 = t2027 * pkin(2);
t1988 = t2029 * pkin(2);
t2392 = 2 * t2423;
t2021 = pkin(2) - t2058;
t2020 = pkin(2) + t2058;
t2030 = legFrame(3,2);
t1992 = sin(t2030);
t1995 = cos(t2030);
t2019 = t2029 ^ 2;
t2094 = t2034 * t1978 - pkin(2) + t2399;
t2072 = -t2094 * t2033 - t2144 * t2042;
t2282 = t2033 * t2035;
t2081 = t2094 * t2282;
t1950 = t2013 + t2058;
t2280 = t2034 * t2043;
t2281 = t2034 * t2035;
t2295 = t2028 * t2044;
t2091 = pkin(6) * t2281 + (pkin(2) * t2280 + t1950 - t2445) * t2295;
t1941 = t1975 + pkin(1);
t2113 = t1941 * t2043 + t2399;
t2263 = t2044 * t2034;
t2296 = t2028 * t2043;
t2135 = t2263 * t2296;
t2184 = t1992 * t2281;
t2151 = pkin(3) * t2184;
t2302 = t2028 * t2034;
t2181 = t1995 * t2302;
t2264 = t2043 * t2044;
t2314 = t1995 * t2034;
t2320 = t1992 * t2035;
t1810 = (t2072 * t1995 + t2433 * t2320) * t2019 + (-(t1992 * t2264 - 0.2e1 * t2181) * t2400 + (t2428 * t1992 - t1995 * t2097) * t2042 + t2028 * (t1992 * t2081 - t2212 * t2314)) * t2029 - t2022 * t2151 + ((t1992 * t2135 + t1995 * t2023 - t1995) * t2004 - t1995 * pkin(6)) * t2042 + (t1992 * t2091 + t1995 * t2113) * t2033 + t2151;
t1967 = t2010 + pkin(1);
t2216 = t1895 * t2412;
t2289 = t2029 * t2042;
t2222 = pkin(1) * t2289;
t2237 = pkin(6) * t2400;
t1846 = 0.1e1 / ((-t2043 * t2237 + (-pkin(6) * t2251 + t1967 * t2004) * t2042 + t2216) * t2028 + (t1978 - t2458) * t2222);
t2391 = t1810 * t1846;
t2031 = legFrame(2,2);
t1993 = sin(t2031);
t1996 = cos(t2031);
t2093 = t2037 * t1979 - pkin(2) + t2397;
t2071 = -t2093 * t2036 - t2143 * t2045;
t2276 = t2036 * t2038;
t2080 = t2093 * t2276;
t1951 = t2014 + t2058;
t2274 = t2037 * t2046;
t2275 = t2037 * t2038;
t2293 = t2028 * t2047;
t2090 = pkin(6) * t2275 + (pkin(2) * t2274 + t1951 - t2444) * t2293;
t1942 = t1976 + pkin(1);
t2112 = t1942 * t2046 + t2397;
t2260 = t2047 * t2037;
t2294 = t2028 * t2046;
t2134 = t2260 * t2294;
t2183 = t1993 * t2275;
t2149 = pkin(3) * t2183;
t2300 = t2028 * t2037;
t2166 = t1996 * t2300;
t2261 = t2046 * t2047;
t2311 = t1996 * t2037;
t2318 = t1993 * t2038;
t1811 = (t2071 * t1996 + t2432 * t2318) * t2019 + (-(t1993 * t2261 - 0.2e1 * t2166) * t2398 + (t2429 * t1993 - t1996 * t2096) * t2045 + t2028 * (t1993 * t2080 - t2211 * t2311)) * t2029 - t2024 * t2149 + ((t1993 * t2134 + t1996 * t2025 - t1996) * t2005 - t1996 * pkin(6)) * t2045 + (t1993 * t2090 + t1996 * t2112) * t2036 + t2149;
t1968 = t2011 + pkin(1);
t2215 = t1896 * t2410;
t2287 = t2029 * t2045;
t2221 = pkin(1) * t2287;
t2236 = pkin(6) * t2398;
t1847 = 0.1e1 / ((-t2046 * t2236 + (-pkin(6) * t2250 + t1968 * t2005) * t2045 + t2215) * t2028 + (t1979 - t2457) * t2221);
t2390 = t1811 * t1847;
t2032 = legFrame(1,2);
t1994 = sin(t2032);
t1997 = cos(t2032);
t2092 = t2040 * t1980 - pkin(2) + t2395;
t2070 = -t2092 * t2039 - t2142 * t2048;
t2270 = t2039 * t2041;
t2079 = t2092 * t2270;
t1952 = t2015 + t2058;
t2268 = t2040 * t2049;
t2269 = t2040 * t2041;
t2291 = t2028 * t2050;
t2089 = pkin(6) * t2269 + (pkin(2) * t2268 + t1952 - t2443) * t2291;
t1943 = t1977 + pkin(1);
t2111 = t1943 * t2049 + t2395;
t2257 = t2050 * t2040;
t2292 = t2028 * t2049;
t2133 = t2257 * t2292;
t2182 = t1994 * t2269;
t2147 = pkin(3) * t2182;
t2298 = t2028 * t2040;
t2164 = t1997 * t2298;
t2258 = t2049 * t2050;
t2308 = t1997 * t2040;
t2316 = t1994 * t2041;
t1812 = (t2070 * t1997 + t2431 * t2316) * t2019 + (-(t1994 * t2258 - 0.2e1 * t2164) * t2396 + (t2430 * t1994 - t1997 * t2095) * t2048 + t2028 * (t1994 * t2079 - t2210 * t2308)) * t2029 - t2026 * t2147 + ((t1994 * t2133 + t1997 * t2027 - t1997) * t2006 - t1997 * pkin(6)) * t2048 + (t2089 * t1994 + t2111 * t1997) * t2039 + t2147;
t1969 = t2012 + pkin(1);
t2214 = t1897 * t2408;
t2285 = t2029 * t2048;
t2220 = pkin(1) * t2285;
t2235 = pkin(6) * t2396;
t1848 = 0.1e1 / ((-t2049 * t2235 + (-pkin(6) * t2249 + t1969 * t2006) * t2048 + t2214) * t2028 + (t1980 - t2456) * t2220);
t2389 = t1812 * t1848;
t2120 = t2034 * t2212;
t2180 = t1995 * t2281;
t2150 = pkin(3) * t2180;
t2185 = t1992 * t2302;
t2313 = t1995 * t2035;
t1813 = (t2072 * t1992 - t2433 * t2313) * t2019 + ((t1995 * t2264 + 0.2e1 * t2185) * t2400 + (-t1992 * t2097 - t2428 * t1995) * t2042 - t2028 * (t1992 * t2120 + t1995 * t2081)) * t2029 + t2022 * t2150 + (-(-t1992 * t2023 + t1995 * t2135 + t1992) * t2004 - t1992 * pkin(6)) * t2042 + (t2113 * t1992 - t2091 * t1995) * t2033 - t2150;
t2388 = t1813 * t1846;
t2119 = t2037 * t2211;
t2179 = t1996 * t2275;
t2148 = pkin(3) * t2179;
t2167 = t1993 * t2300;
t2310 = t1996 * t2038;
t1814 = (t2071 * t1993 - t2432 * t2310) * t2019 + ((t1996 * t2261 + 0.2e1 * t2167) * t2398 + (-t1993 * t2096 - t2429 * t1996) * t2045 - t2028 * (t1993 * t2119 + t1996 * t2080)) * t2029 + t2024 * t2148 + (-(-t1993 * t2025 + t1996 * t2134 + t1993) * t2005 - t1993 * pkin(6)) * t2045 + (t2112 * t1993 - t2090 * t1996) * t2036 - t2148;
t2387 = t1814 * t1847;
t2118 = t2040 * t2210;
t2178 = t1997 * t2269;
t2146 = pkin(3) * t2178;
t2165 = t1994 * t2298;
t2307 = t1997 * t2041;
t1815 = (t2070 * t1994 - t2431 * t2307) * t2019 + ((t1997 * t2258 + 0.2e1 * t2165) * t2396 + (-t1994 * t2095 - t2430 * t1997) * t2048 - t2028 * (t1994 * t2118 + t1997 * t2079)) * t2029 + t2026 * t2146 + (-(-t1994 * t2027 + t1997 * t2133 + t1994) * t2006 - t1994 * pkin(6)) * t2048 + (t2111 * t1994 - t2089 * t1997) * t2039 - t2146;
t2386 = t1815 * t1848;
t2016 = pkin(1) * t2058;
t2345 = (t2007 + t2020) * (t2007 + t2021);
t2194 = t2034 * t2345;
t1861 = t2016 - t2194;
t1958 = t2004 + pkin(6);
t2321 = (t2029 + 0.1e1) * (t2029 - 0.1e1);
t2228 = -0.2e1 * t2321;
t2117 = t1964 * t2023 * t2228;
t2130 = t1958 * t2184;
t2191 = t1964 * t2320;
t2132 = t1958 * t2191;
t2138 = t2035 * t2194;
t1919 = pkin(1) + 0.2e1 * t1975;
t2197 = t1919 * t1964 * t2044;
t2277 = t2035 * t2058;
t2172 = t2029 * t2277;
t2200 = (0.2e1 * t1964 * t2172 + t2044 * t2345) * t2028 * t2023;
t2315 = t1995 * t1950;
t2329 = t1964 * t1995;
t1816 = t1992 * t2200 + (((-t1958 * t2329 - t1992 * t2138) * t2029 + t1992 * t2197) * t2028 + (t1995 * t2194 - t2132) * t2019 + t2132 + t1995 * t1861) * t2043 - t1964 * t2315 + (t1995 * t2117 + ((-t1958 * t2314 - t2191) * t2029 + t2044 * t1992 * t1950) * t2028 + (-t2130 + t2329) * t2019 + t2130) * t2058;
t1922 = t2042 * pkin(6) - t2412;
t2283 = t2029 * t2058;
t1946 = pkin(1) * t2283;
t2336 = t1946 * t2042;
t1849 = 0.1e1 / ((-t1922 * t1964 * t2028 + t2336) * t2043 + (pkin(1) * t1964 * t2033 - t1922 * t1975) * t2028 - t2222 * t2458);
t2385 = t1816 * t1849;
t2344 = (t2008 + t2020) * (t2008 + t2021);
t2193 = t2037 * t2344;
t1862 = t2016 - t2193;
t1960 = t2005 + pkin(6);
t2116 = t1965 * t2025 * t2228;
t2126 = t1960 * t2183;
t2189 = t1965 * t2318;
t2128 = t1960 * t2189;
t2137 = t2038 * t2193;
t1920 = pkin(1) + 0.2e1 * t1976;
t2196 = t1920 * t1965 * t2047;
t2271 = t2038 * t2058;
t2170 = t2029 * t2271;
t2199 = (0.2e1 * t1965 * t2170 + t2047 * t2344) * t2028 * t2025;
t2312 = t1996 * t1951;
t2319 = t1993 * t1951;
t2327 = t1965 * t1996;
t1817 = t1993 * t2199 + (((-t1960 * t2327 - t1993 * t2137) * t2029 + t1993 * t2196) * t2028 + (t1996 * t2193 - t2128) * t2019 + t2128 + t1996 * t1862) * t2046 - t1965 * t2312 + (t1996 * t2116 + ((-t1960 * t2311 - t2189) * t2029 + t2047 * t2319) * t2028 + (-t2126 + t2327) * t2019 + t2126) * t2058;
t1923 = t2045 * pkin(6) - t2410;
t2335 = t1946 * t2045;
t1850 = 0.1e1 / ((-t1923 * t1965 * t2028 + t2335) * t2046 + (pkin(1) * t1965 * t2036 - t1923 * t1976) * t2028 - t2221 * t2457);
t2384 = t1817 * t1850;
t2343 = (t2009 + t2020) * (t2009 + t2021);
t2192 = t2040 * t2343;
t1863 = t2016 - t2192;
t1962 = t2006 + pkin(6);
t2115 = t1966 * t2027 * t2228;
t2122 = t1962 * t2182;
t2187 = t1966 * t2316;
t2124 = t1962 * t2187;
t2136 = t2041 * t2192;
t1921 = pkin(1) + 0.2e1 * t1977;
t2195 = t1921 * t1966 * t2050;
t2265 = t2041 * t2058;
t2168 = t2029 * t2265;
t2198 = (0.2e1 * t1966 * t2168 + t2050 * t2343) * t2028 * t2027;
t2309 = t1997 * t1952;
t2317 = t1994 * t1952;
t2325 = t1966 * t1997;
t1818 = t1994 * t2198 + (((-t1962 * t2325 - t1994 * t2136) * t2029 + t1994 * t2195) * t2028 + (t1997 * t2192 - t2124) * t2019 + t2124 + t1997 * t1863) * t2049 - t1966 * t2309 + (t1997 * t2115 + ((-t1962 * t2308 - t2187) * t2029 + t2050 * t2317) * t2028 + (-t2122 + t2325) * t2019 + t2122) * t2058;
t1924 = t2048 * pkin(6) - t2408;
t2334 = t1946 * t2048;
t1851 = 0.1e1 / ((-t1924 * t1966 * t2028 + t2334) * t2049 + (pkin(1) * t1966 * t2039 - t1924 * t1977) * t2028 - t2220 * t2456);
t2383 = t1818 * t1851;
t2129 = t1958 * t2180;
t2190 = t1964 * t2313;
t2131 = t1958 * t2190;
t2330 = t1964 * t1992;
t1819 = -t1995 * t2200 + (((-t1958 * t2330 + t1995 * t2138) * t2029 - t1995 * t2197) * t2028 + (t1992 * t2194 + t2131) * t2019 - t2131 + t1992 * t1861) * t2043 - t1950 * t2330 + (t1992 * t2117 - ((t1958 * t1992 * t2034 - t2190) * t2029 + t2044 * t2315) * t2028 + (t2129 + t2330) * t2019 - t2129) * t2058;
t2382 = t1819 * t1849;
t2125 = t1960 * t2179;
t2188 = t1965 * t2310;
t2127 = t1960 * t2188;
t2328 = t1965 * t1993;
t1820 = -t1996 * t2199 + (((-t1960 * t2328 + t1996 * t2137) * t2029 - t1996 * t2196) * t2028 + (t1993 * t2193 + t2127) * t2019 - t2127 + t1993 * t1862) * t2046 - t1965 * t2319 + (t1993 * t2116 - ((t1960 * t1993 * t2037 - t2188) * t2029 + t2047 * t2312) * t2028 + (t2125 + t2328) * t2019 - t2125) * t2058;
t2381 = t1820 * t1850;
t2121 = t1962 * t2178;
t2186 = t1966 * t2307;
t2123 = t1962 * t2186;
t2326 = t1966 * t1994;
t1821 = -t1997 * t2198 + (((-t1962 * t2326 + t1997 * t2136) * t2029 - t1997 * t2195) * t2028 + (t1994 * t2192 + t2123) * t2019 - t2123 + t1994 * t1863) * t2049 - t1966 * t2317 + (t1994 * t2115 - ((t1962 * t1994 * t2040 - t2186) * t2029 + t2050 * t2309) * t2028 + (t2121 + t2326) * t2019 - t2121) * t2058;
t2380 = t1821 * t1851;
t2247 = -m(2) * rSges(2,1) - pkin(2) * m(3);
t1899 = t2234 + t2247;
t1937 = -t2414 + t2424;
t1822 = -t2467 * t2028 + ((-t1937 * t2034 + (t2042 * t2423 - t1899) * t2043) * pkin(1) + t2442) * t2029;
t2379 = t1822 * t1846;
t1900 = t2233 + t2247;
t1823 = -t2466 * t2028 + ((-t1937 * t2037 + (t2045 * t2423 - t1900) * t2046) * pkin(1) + t2441) * t2029;
t2378 = t1823 * t1847;
t1901 = t2232 + t2247;
t1824 = -t2465 * t2028 + ((-t1937 * t2040 + (t2048 * t2423 - t1901) * t2049) * pkin(1) + t2440) * t2029;
t2377 = t1824 * t1848;
t2262 = t2044 * t2058;
t1882 = -pkin(2) * t2035 + t2029 * t2262;
t1885 = -pkin(6) * t2028 * t2058 - pkin(1) * t1988;
t1959 = t2004 - pkin(6);
t2156 = t2283 * t2468;
t2173 = t2029 * t2263;
t2306 = t2020 * t2021;
t2177 = t2029 * t2306;
t2225 = t2029 * t2013;
t2240 = pkin(1) * t2004;
t2241 = 0.2e1 * t1988;
t2279 = t2035 * t1919;
t2066 = pkin(3) ^ 2;
t2305 = t2022 * t2066;
t2333 = t1958 * t2028;
t2376 = ((t2044 * t2156 - 0.2e1 * t1882 * t2007 + (t2305 + t2306) * t2035) * t2023 + (t2173 * t2305 + ((t2034 * t2241 - t2333) * t2044 + t2279) * t2007 + (-pkin(2) * t2333 + t2034 * t2177) * t2044 + pkin(2) * t2279) * t2043 + t2058 * (t2035 * t1950 + (pkin(3) * t2289 - t1958 * t2302 + t1988) * t2044)) / ((t2336 + (t1959 * t2406 + t2033 * t2068 - t2237) * t2028) * t2043 - t2225 * t2400 + (t1885 * t2034 + t2028 * t2240) * t2042 + t1941 * t2028 * t2412);
t2259 = t2047 * t2058;
t1883 = -pkin(2) * t2038 + t2029 * t2259;
t1961 = t2005 - pkin(6);
t2171 = t2029 * t2260;
t2224 = t2029 * t2014;
t2239 = pkin(1) * t2005;
t2273 = t2038 * t1920;
t2304 = t2024 * t2066;
t2332 = t1960 * t2028;
t2375 = ((t2047 * t2156 - 0.2e1 * t1883 * t2008 + (t2304 + t2306) * t2038) * t2025 + (t2171 * t2304 + ((t2037 * t2241 - t2332) * t2047 + t2273) * t2008 + (-pkin(2) * t2332 + t2037 * t2177) * t2047 + pkin(2) * t2273) * t2046 + t2058 * (t2038 * t1951 + (pkin(3) * t2287 - t1960 * t2300 + t1988) * t2047)) / ((t2335 + (t1961 * t2405 + t2036 * t2068 - t2236) * t2028) * t2046 - t2224 * t2398 + (t1885 * t2037 + t2028 * t2239) * t2045 + t1942 * t2028 * t2410);
t2256 = t2050 * t2058;
t1884 = -pkin(2) * t2041 + t2029 * t2256;
t1963 = t2006 - pkin(6);
t2169 = t2029 * t2257;
t2223 = t2029 * t2015;
t2238 = pkin(1) * t2006;
t2267 = t2041 * t1921;
t2303 = t2026 * t2066;
t2331 = t1962 * t2028;
t2374 = ((t2050 * t2156 - 0.2e1 * t1884 * t2009 + (t2303 + t2306) * t2041) * t2027 + (t2169 * t2303 + ((t2040 * t2241 - t2331) * t2050 + t2267) * t2009 + (-pkin(2) * t2331 + t2040 * t2177) * t2050 + pkin(2) * t2267) * t2049 + t2058 * (t2041 * t1952 + (pkin(3) * t2285 - t1962 * t2298 + t1988) * t2050)) / ((t2334 + (t1963 * t2404 + t2039 * t2068 - t2235) * t2028) * t2049 - t2223 * t2396 + (t1885 * t2040 + t2028 * t2238) * t2048 + t1943 * t2028 * t2408);
t2219 = pkin(3) * t2282;
t2248 = t2019 - 0.1e1 / 0.2e1;
t2278 = t2035 * t2043;
t2288 = t2029 * t2044;
t1828 = ((-t2144 * t2288 + t2219 * t2280) * t2042 + (-t2094 * t2288 + t2035 * (t1967 * t2034 + t2058 - t2445)) * t2033) * t2028 - 0.2e1 * (t2248 * t2263 + t2278 * t2419) * t2400 - (t1895 * t2035 - t1909 * t2288) * t2289 + t2044 * t2120 * t2321;
t2373 = t1828 * t1846;
t2218 = pkin(3) * t2276;
t2272 = t2038 * t2046;
t2286 = t2029 * t2047;
t1829 = ((-t2143 * t2286 + t2218 * t2274) * t2045 + (-t2093 * t2286 + t2038 * (t1968 * t2037 + t2058 - t2444)) * t2036) * t2028 - 0.2e1 * (t2248 * t2260 + t2272 * t2419) * t2398 - (t1896 * t2038 - t1910 * t2286) * t2287 + t2047 * t2119 * t2321;
t2372 = t1829 * t1847;
t2217 = pkin(3) * t2270;
t2266 = t2041 * t2049;
t2284 = t2029 * t2050;
t1830 = ((-t2142 * t2284 + t2217 * t2268) * t2048 + (-t2092 * t2284 + t2041 * (t1969 * t2040 + t2058 - t2443)) * t2039) * t2028 - 0.2e1 * (t2248 * t2257 + t2266 * t2419) * t2396 - (t1897 * t2041 - t1911 * t2284) * t2285 + t2050 * t2118 * t2321;
t2371 = t1830 * t1848;
t1873 = -t2029 * t2281 + t2264;
t2075 = -t2029 * t2004 + t2097;
t2078 = (-t2035 * t1988 + t2262) * t2034 + (pkin(2) * t2044 + t2172) * t2043 + t2028 * t2219;
t1831 = -(t1873 * t1995 + t2185) * t2400 + (t2075 * t1992 - t2078 * t1995) * t2042 - (t1992 * t2029 + t1995 * t2301) * t2412;
t1843 = 0.1e1 / (-(pkin(6) * t2296 + t2225) * t2400 + ((-pkin(6) * t1975 + t1959 * t2010 + t2240) * t2028 + t1909 * t2413) * t2042 + t2028 * t2216);
t2370 = t1831 * t1843;
t1874 = -t2029 * t2275 + t2261;
t2074 = -t2029 * t2005 + t2096;
t2077 = (-t2038 * t1988 + t2259) * t2037 + (pkin(2) * t2047 + t2170) * t2046 + t2028 * t2218;
t1832 = -(t1874 * t1996 + t2167) * t2398 + (t2074 * t1993 - t2077 * t1996) * t2045 - (t1993 * t2029 + t1996 * t2299) * t2410;
t1844 = 0.1e1 / (-(pkin(6) * t2294 + t2224) * t2398 + ((-pkin(6) * t1976 + t1961 * t2011 + t2239) * t2028 + t1910 * t2413) * t2045 + t2028 * t2215);
t2369 = t1832 * t1844;
t1875 = -t2029 * t2269 + t2258;
t2073 = -t2029 * t2006 + t2095;
t2076 = (-t2041 * t1988 + t2256) * t2040 + (pkin(2) * t2050 + t2168) * t2049 + t2028 * t2217;
t1833 = -(t1875 * t1997 + t2165) * t2396 + (t2073 * t1994 - t2076 * t1997) * t2048 - (t1994 * t2029 + t1997 * t2297) * t2408;
t1845 = 0.1e1 / (-(pkin(6) * t2292 + t2223) * t2396 + ((-pkin(6) * t1977 + t1963 * t2012 + t2238) * t2028 + t1911 * t2413) * t2048 + t2028 * t2214);
t2368 = t1833 * t1845;
t1834 = (t1873 * t1992 - t2181) * t2400 + (t2078 * t1992 + t2075 * t1995) * t2042 + (t1992 * t2301 - t1995 * t2029) * t2412;
t2367 = t1834 * t1843;
t1835 = (t1874 * t1993 - t2166) * t2398 + (t2077 * t1993 + t2074 * t1996) * t2045 + (t1993 * t2299 - t1996 * t2029) * t2410;
t2366 = t1835 * t1844;
t1836 = (t1875 * t1994 - t2164) * t2396 + (t2076 * t1994 + t2073 * t1997) * t2048 + (t1994 * t2297 - t1997 * t2029) * t2408;
t2365 = t1836 * t1845;
t1930 = (t2061 + t2063) * m(3) + Icges(3,3);
t1954 = t2055 + t2422;
t1957 = t2056 - t2421;
t2053 = pkin(1) * rSges(3,2);
t2054 = pkin(1) * rSges(3,1);
t2339 = t1945 * t2034;
t1837 = ((-t2339 - (t1954 * t2043 + t2054) * m(3)) * t2042 + (t2034 * t1944 + (t1957 * t2043 + t2053) * m(3)) * t2033 - t1930 * t2043) * t2028 - (-Icges(3,5) * t2033 - Icges(3,6) * t2042 + (rSges(3,1) * t2033 + rSges(3,2) * t2042) * m(3) * (t2051 + t2013)) * t2029;
t2364 = t1837 * t1843;
t2338 = t1945 * t2037;
t1838 = ((-t2338 - (t1954 * t2046 + t2054) * m(3)) * t2045 + (t2037 * t1944 + (t1957 * t2046 + t2053) * m(3)) * t2036 - t1930 * t2046) * t2028 - (-Icges(3,5) * t2036 - Icges(3,6) * t2045 + (rSges(3,1) * t2036 + rSges(3,2) * t2045) * m(3) * (t2051 + t2014)) * t2029;
t2363 = t1838 * t1844;
t2337 = t1945 * t2040;
t1839 = ((-t2337 - (t1954 * t2049 + t2054) * m(3)) * t2048 + (t2040 * t1944 + (t1957 * t2049 + t2053) * m(3)) * t2039 - t1930 * t2049) * t2028 - (-Icges(3,5) * t2039 - Icges(3,6) * t2048 + (rSges(3,1) * t2039 + rSges(3,2) * t2048) * m(3) * (t2051 + t2015)) * t2029;
t2362 = t1839 * t1845;
t2176 = t2033 * t2295;
t2361 = t1843 * ((t2173 + t2278) * t2400 + (-pkin(3) * t2176 - t1882 * t2043 + (pkin(2) * t2288 + t2277) * t2034) * t2042 - pkin(2) * t2176);
t2175 = t2036 * t2293;
t2360 = t1844 * ((t2171 + t2272) * t2398 + (-pkin(3) * t2175 - t1883 * t2046 + (pkin(2) * t2286 + t2271) * t2037) * t2045 - pkin(2) * t2175);
t2174 = t2039 * t2291;
t2359 = t1845 * ((t2169 + t2266) * t2396 + (-pkin(3) * t2174 - t1884 * t2049 + (pkin(2) * t2284 + t2265) * t2040) * t2048 - pkin(2) * t2174);
t2358 = t1846 * t2442;
t2357 = t1846 * t1864;
t2356 = t1847 * t2441;
t2355 = t1847 * t1865;
t2354 = t1848 * t2440;
t2353 = t1848 * t1866;
t2067 = 0.1e1 / pkin(3);
t2352 = t1849 * t2067;
t2351 = t1850 * t2067;
t2350 = t1851 * t2067;
t2346 = t1930 * t2067;
t2342 = t1944 * t2033;
t2341 = t1944 * t2036;
t2340 = t1944 * t2039;
t2290 = t2028 * t2067;
t2065 = pkin(6) ^ 2;
t2245 = pkin(1) ^ 2 + t2065;
t2243 = -2 * t1940;
t2242 = t1937 * t2426;
t2227 = -0.2e1 * t2028 * t2029;
t2226 = pkin(6) * t2392;
t2209 = t1837 * t2352;
t2208 = t1838 * t2351;
t2207 = t1839 * t2350;
t2206 = t1864 * t2352;
t2205 = t1849 * t2346;
t2204 = t1865 * t2351;
t2203 = t1850 * t2346;
t2202 = t1866 * t2350;
t2201 = t1851 * t2346;
t2157 = 2 * t2114;
t2141 = t2290 * t2376;
t2140 = t2290 * t2375;
t2139 = t2290 * t2374;
t2104 = Icges(1,3) + ((pkin(7) ^ 2) + t2063 + ((2 * pkin(7) + rSges(3,3)) * rSges(3,3)) + t2245) * m(3) + (t2062 + ((2 * pkin(6) + rSges(2,3)) * rSges(2,3)) + t2245) * m(2) + (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + t2394;
t2085 = -(rSges(2,1) + t2052) * (-rSges(2,1) + t2052) * m(2) + (-t2063 - t2065 + t2246) * m(3) + t2393 - t2394;
t2003 = pkin(1) * t2392;
t2002 = -2 * t2255;
t2000 = t2055 * t2427;
t1929 = t1955 * t2427;
t1902 = 0.2e1 * t1925;
t1809 = (((t2229 + t2002) * t2048 - t2105 - t2464) * t2027 - 0.2e1 * (t1945 * t2048 + t2114 - t2340) * t2268 + t1902 * t2026 + (t1929 - 0.4e1 * t2322) * t2048 + t2039 * t2243 + t2085) * t2019 + t2465 * t2227 + (t2105 + t2450) * t2027 + ((t2003 + 0.2e1 * t2337) * t2048 + (t2157 - 0.2e1 * t2340) * t2040 + t1901 * t2426) * t2049 - t1892 + (t2229 + t2000) * t2048 + t2040 * t2242 + t2039 * t2226 + t2104;
t1808 = (((t2230 + t2002) * t2045 - t2105 - t2463) * t2025 - 0.2e1 * (t1945 * t2045 + t2114 - t2341) * t2274 + t1902 * t2024 + (t1929 - 0.4e1 * t2323) * t2045 + t2036 * t2243 + t2085) * t2019 + t2466 * t2227 + (t2105 + t2451) * t2025 + ((t2003 + 0.2e1 * t2338) * t2045 + (t2157 - 0.2e1 * t2341) * t2037 + t1900 * t2426) * t2046 - t1891 + (t2230 + t2000) * t2045 + t2037 * t2242 + t2036 * t2226 + t2104;
t1807 = (((t2231 + t2002) * t2042 - t2105 - t2462) * t2023 - 0.2e1 * (t1945 * t2042 + t2114 - t2342) * t2280 + t1902 * t2022 + (t1929 - 0.4e1 * t2324) * t2042 + t2033 * t2243 + t2085) * t2019 + t2467 * t2227 + (t2105 + t2452) * t2023 + ((t2003 + 0.2e1 * t2339) * t2042 + (t2157 - 0.2e1 * t2342) * t2034 + t1899 * t2426) * t2043 - t1890 + (t2231 + t2000) * t2042 + t2034 * t2242 + t2033 * t2226 + t2104;
t1806 = t1830 * t2353 + t1839 * t2359 + t1930 * t2139;
t1805 = t1829 * t2355 + t1838 * t2360 + t1930 * t2140;
t1804 = t1828 * t2357 + t1837 * t2361 + t1930 * t2141;
t1803 = t1824 * t2359 + t1830 * t2354 + t1866 * t2139;
t1802 = t1823 * t2360 + t1829 * t2356 + t1865 * t2140;
t1801 = t1822 * t2361 + t1828 * t2358 + t1864 * t2141;
t1800 = t1812 * t2353 + t1818 * t2201 + t1836 * t2362;
t1799 = t1811 * t2355 + t1817 * t2203 + t1835 * t2363;
t1798 = t1810 * t2357 + t1816 * t2205 + t1834 * t2364;
t1797 = t1815 * t2353 + t1821 * t2201 + t1833 * t2362;
t1796 = t1814 * t2355 + t1820 * t2203 + t1832 * t2363;
t1795 = t1813 * t2357 + t1819 * t2205 + t1831 * t2364;
t1794 = t1812 * t2354 + t1818 * t2202 + t1824 * t2365;
t1793 = t1811 * t2356 + t1817 * t2204 + t1823 * t2366;
t1792 = t1810 * t2358 + t1816 * t2206 + t1822 * t2367;
t1791 = t1815 * t2354 + t1821 * t2202 + t1824 * t2368;
t1790 = t1814 * t2356 + t1820 * t2204 + t1823 * t2369;
t1789 = t1813 * t2358 + t1819 * t2206 + t1822 * t2370;
t1788 = t1809 * t2359 + t1824 * t2371 + t1839 * t2139;
t1787 = t1808 * t2360 + t1823 * t2372 + t1838 * t2140;
t1786 = t1807 * t2361 + t1822 * t2373 + t1837 * t2141;
t1785 = t1809 * t2365 + t1812 * t2377 + t1818 * t2207;
t1784 = t1808 * t2366 + t1811 * t2378 + t1817 * t2208;
t1783 = t1807 * t2367 + t1810 * t2379 + t1816 * t2209;
t1782 = t1809 * t2368 + t1815 * t2377 + t1821 * t2207;
t1781 = t1808 * t2369 + t1814 * t2378 + t1820 * t2208;
t1780 = t1807 * t2370 + t1813 * t2379 + t1819 * t2209;
t1 = [t1780 * t2370 + t1781 * t2369 + t1782 * t2368 + t1789 * t2388 + t1790 * t2387 + t1791 * t2386 + m(4) + (t1795 * t2382 + t1796 * t2381 + t1797 * t2380) * t2067, t1780 * t2367 + t1781 * t2366 + t1782 * t2365 + t1789 * t2391 + t1790 * t2390 + t1791 * t2389 + (t1795 * t2385 + t1796 * t2384 + t1797 * t2383) * t2067, t1780 * t2361 + t1781 * t2360 + t1782 * t2359 + t1789 * t2373 + t1790 * t2372 + t1791 * t2371 + (t1795 * t2376 + t1796 * t2375 + t1797 * t2374) * t2290; t1783 * t2370 + t1784 * t2369 + t1785 * t2368 + t1792 * t2388 + t1793 * t2387 + t1794 * t2386 + (t1798 * t2382 + t1799 * t2381 + t1800 * t2380) * t2067, t1783 * t2367 + t1784 * t2366 + t1785 * t2365 + t1792 * t2391 + t1793 * t2390 + t1794 * t2389 + m(4) + (t1798 * t2385 + t1799 * t2384 + t1800 * t2383) * t2067, t1783 * t2361 + t1784 * t2360 + t1785 * t2359 + t1792 * t2373 + t1793 * t2372 + t1794 * t2371 + (t1798 * t2376 + t1799 * t2375 + t1800 * t2374) * t2290; t1786 * t2370 + t1787 * t2369 + t1788 * t2368 + t1801 * t2388 + t1802 * t2387 + t1803 * t2386 + (t1804 * t2382 + t1805 * t2381 + t1806 * t2380) * t2067, t1786 * t2367 + t1787 * t2366 + t1788 * t2365 + t1801 * t2391 + t1802 * t2390 + t1803 * t2389 + (t1804 * t2385 + t1805 * t2384 + t1806 * t2383) * t2067, t1786 * t2361 + t1787 * t2360 + t1788 * t2359 + t1801 * t2373 + t1802 * t2372 + t1803 * t2371 + m(4) + (t1804 * t2376 + t1805 * t2375 + t1806 * t2374) * t2290;];
MX  = t1;
