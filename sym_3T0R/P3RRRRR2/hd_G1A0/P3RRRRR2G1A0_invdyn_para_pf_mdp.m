% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRRRR2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [2x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [14x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR2G1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-09 21:05
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR2G1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(2,1),zeros(14,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [2 1]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: pkin has to be [2x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [14 1]), ...
  'P3RRRRR2G1A0_invdyn_para_pf_mdp: MDP has to be [14x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-03-09 21:04:44
% EndTime: 2020-03-09 21:04:53
% DurationCPUTime: 9.42s
% Computational Cost: add. (28923->546), mult. (49699->951), div. (13599->25), fcn. (42342->60), ass. (0->455)
t1976 = 2 * MDP(8);
t1731 = xDDP(3);
t1989 = -t1731 / 0.2e1;
t1735 = sin(qJ(2,3));
t1744 = cos(qJ(2,3));
t1753 = xDP(2);
t1754 = xDP(1);
t1593 = t1735 * t1753 + t1744 * t1754;
t1594 = t1735 * t1754 - t1744 * t1753;
t1728 = legFrame(3,3);
t1674 = qJ(1,3) + t1728;
t1665 = sin(t1674);
t1668 = cos(t1674);
t1743 = cos(qJ(3,3));
t1734 = sin(qJ(3,3));
t1752 = xDP(3);
t1885 = t1734 * t1752;
t1551 = t1885 + (t1593 * t1668 - t1594 * t1665) * t1743;
t1698 = 0.1e1 / t1735;
t1707 = 0.1e1 / t1743;
t1758 = 0.1e1 / pkin(1);
t1844 = t1698 * t1707 * t1758;
t1545 = t1551 * t1844;
t1943 = pkin(2) * t1743;
t1949 = pkin(1) * t1744;
t1623 = t1943 + t1949;
t1695 = pkin(1) * t1753;
t1696 = pkin(1) * t1754;
t1542 = -t1623 * t1885 + (-(t1593 * t1943 + t1696) * t1668 - (-t1594 * t1943 + t1695) * t1665) * t1743;
t1708 = 0.1e1 / t1743 ^ 2;
t1756 = 0.1e1 / pkin(2);
t1881 = t1756 * t1758;
t1836 = t1708 * t1881;
t1803 = t1698 * t1836;
t1786 = t1542 * t1803;
t1539 = t1545 + t1786;
t1922 = t1551 * t1698;
t1706 = t1743 ^ 2;
t1946 = pkin(2) * t1706;
t1988 = (-t1539 * t1946 - t1744 * t1922) * t1551;
t1738 = sin(qJ(2,2));
t1747 = cos(qJ(2,2));
t1595 = t1738 * t1753 + t1747 * t1754;
t1596 = t1738 * t1754 - t1747 * t1753;
t1729 = legFrame(2,3);
t1675 = qJ(1,2) + t1729;
t1666 = sin(t1675);
t1669 = cos(t1675);
t1746 = cos(qJ(3,2));
t1737 = sin(qJ(3,2));
t1884 = t1737 * t1752;
t1552 = t1884 + (t1595 * t1669 - t1596 * t1666) * t1746;
t1701 = 0.1e1 / t1738;
t1712 = 0.1e1 / t1746;
t1841 = t1701 * t1712 * t1758;
t1546 = t1552 * t1841;
t1942 = pkin(2) * t1746;
t1948 = pkin(1) * t1747;
t1626 = t1942 + t1948;
t1543 = -t1626 * t1884 + (-(t1595 * t1942 + t1696) * t1669 - (-t1596 * t1942 + t1695) * t1666) * t1746;
t1713 = 0.1e1 / t1746 ^ 2;
t1835 = t1713 * t1881;
t1801 = t1701 * t1835;
t1785 = t1543 * t1801;
t1540 = t1546 + t1785;
t1920 = t1552 * t1701;
t1711 = t1746 ^ 2;
t1945 = pkin(2) * t1711;
t1987 = (-t1540 * t1945 - t1747 * t1920) * t1552;
t1741 = sin(qJ(2,1));
t1750 = cos(qJ(2,1));
t1597 = t1741 * t1753 + t1750 * t1754;
t1598 = t1741 * t1754 - t1750 * t1753;
t1730 = legFrame(1,3);
t1676 = qJ(1,1) + t1730;
t1667 = sin(t1676);
t1670 = cos(t1676);
t1749 = cos(qJ(3,1));
t1740 = sin(qJ(3,1));
t1883 = t1740 * t1752;
t1553 = t1883 + (t1597 * t1670 - t1598 * t1667) * t1749;
t1704 = 0.1e1 / t1741;
t1717 = 0.1e1 / t1749;
t1838 = t1704 * t1717 * t1758;
t1547 = t1553 * t1838;
t1941 = pkin(2) * t1749;
t1947 = pkin(1) * t1750;
t1629 = t1941 + t1947;
t1544 = -t1629 * t1883 + (-(t1597 * t1941 + t1696) * t1670 - (-t1598 * t1941 + t1695) * t1667) * t1749;
t1718 = 0.1e1 / t1749 ^ 2;
t1834 = t1718 * t1881;
t1799 = t1704 * t1834;
t1784 = t1544 * t1799;
t1541 = t1547 + t1784;
t1918 = t1553 * t1704;
t1716 = t1749 ^ 2;
t1944 = pkin(2) * t1716;
t1986 = (-t1541 * t1944 - t1750 * t1918) * t1553;
t1760 = t1743 * t1706;
t1709 = 0.1e1 / t1760;
t1985 = t1698 * t1709;
t1762 = t1746 * t1711;
t1714 = 0.1e1 / t1762;
t1984 = t1701 * t1714;
t1764 = t1749 * t1716;
t1719 = 0.1e1 / t1764;
t1983 = t1704 * t1719;
t1699 = 0.1e1 / t1735 ^ 2;
t1759 = 0.1e1 / pkin(1) ^ 2;
t1898 = t1699 * t1759;
t1854 = t1542 * t1898;
t1515 = t1539 * t1707 * t1854;
t1732 = xDDP(2);
t1887 = t1732 * t1758;
t1671 = qJ(2,3) + t1674;
t1653 = sin(t1671);
t1904 = t1653 * t1698;
t1584 = t1887 * t1904;
t1733 = xDDP(1);
t1886 = t1733 * t1758;
t1656 = cos(t1671);
t1901 = t1656 * t1698;
t1587 = t1886 * t1901;
t1804 = t1734 * t1844;
t1602 = t1731 * t1804;
t1721 = t1752 ^ 2;
t1830 = t1721 * t1881;
t1620 = t1830 * t1985;
t1783 = t1515 + t1584 + t1587 + t1602 + t1620;
t1843 = t1708 * t1898;
t1789 = t1843 * t1988;
t1497 = t1783 - t1789;
t1882 = t1752 * t1756;
t1798 = t1707 * t1744 * t1882;
t1952 = pkin(1) * t1735;
t1527 = (-t1539 * t1734 * t1952 + t1707 * t1752) * t1743 + pkin(1) * t1798;
t1907 = t1623 * t1734;
t1774 = t1803 * t1907;
t1755 = pkin(2) ^ 2;
t1530 = t1755 * t1539 * t1760;
t1533 = t1545 + t1786 / 0.2e1;
t1829 = t1735 * t1885;
t1867 = t1744 * t1946;
t1921 = t1551 * t1709;
t1792 = (t1530 + (0.2e1 * t1533 * t1867 + (-t1829 + t1922) * t1743 * t1707) * pkin(1)) * t1898 * t1921;
t1793 = -t1752 * t1881 / 0.2e1;
t1820 = t1881 / 0.2e1;
t1794 = t1733 * t1820;
t1795 = t1732 * t1820;
t1757 = 0.1e1 / pkin(2) ^ 2;
t1824 = t1757 / t1706 ^ 2 * t1542;
t1816 = (t1530 + (t1539 * t1867 - t1829) * pkin(1)) * t1824;
t1659 = qJ(3,3) + t1671;
t1647 = cos(t1659);
t1660 = -qJ(3,3) + t1671;
t1648 = cos(t1660);
t1979 = -0.2e1 * pkin(1);
t1572 = t1668 * t1979 + (-t1647 - t1648) * pkin(2);
t1722 = qJ(2,3) + qJ(3,3);
t1677 = sin(t1722);
t1723 = qJ(2,3) - qJ(3,3);
t1678 = sin(t1723);
t1871 = t1677 + t1678;
t1617 = 0.1e1 / t1871;
t1913 = t1572 * t1617;
t1641 = sin(t1659);
t1642 = sin(t1660);
t1569 = t1665 * t1979 + (-t1641 - t1642) * pkin(2);
t1916 = t1569 * t1617;
t1959 = -t1756 / 0.2e1;
t1771 = t1792 * t1959 - t1816 * t1898 / 0.2e1 + t1527 * t1793 * t1985 + t1795 * t1916 + t1794 * t1913 + t1774 * t1989;
t1479 = t1497 + t1771;
t1689 = sin(t1728);
t1692 = cos(t1728);
t1889 = t1721 * t1757;
t1821 = t1889 / 0.2e1;
t1745 = cos(qJ(1,3));
t1931 = t1745 * g(2);
t1932 = t1745 * g(1);
t1736 = sin(qJ(1,3));
t1934 = t1736 * g(2);
t1940 = g(1) * t1736;
t1978 = 0.2e1 * pkin(1);
t1982 = t1744 * (t1479 * t1978 - (t1931 - t1940) * t1692 + (t1932 + t1934) * t1689) - 0.2e1 * ((-t1932 / 0.2e1 - t1934 / 0.2e1) * t1692 + (-t1931 / 0.2e1 + t1940 / 0.2e1) * t1689 + pkin(1) * (t1708 * t1821 + (t1756 * t1921 + t1824 / 0.2e1) * t1854)) * t1735;
t1702 = 0.1e1 / t1738 ^ 2;
t1897 = t1702 * t1759;
t1853 = t1543 * t1897;
t1516 = t1540 * t1712 * t1853;
t1672 = qJ(2,2) + t1675;
t1654 = sin(t1672);
t1903 = t1654 * t1701;
t1585 = t1887 * t1903;
t1657 = cos(t1672);
t1900 = t1657 * t1701;
t1588 = t1886 * t1900;
t1802 = t1737 * t1841;
t1603 = t1731 * t1802;
t1621 = t1830 * t1984;
t1782 = t1516 + t1585 + t1588 + t1603 + t1621;
t1840 = t1713 * t1897;
t1788 = t1840 * t1987;
t1498 = t1782 - t1788;
t1797 = t1712 * t1747 * t1882;
t1951 = pkin(1) * t1738;
t1528 = (-t1540 * t1737 * t1951 + t1712 * t1752) * t1746 + pkin(1) * t1797;
t1906 = t1626 * t1737;
t1773 = t1801 * t1906;
t1531 = t1755 * t1540 * t1762;
t1534 = t1546 + t1785 / 0.2e1;
t1828 = t1738 * t1884;
t1866 = t1747 * t1945;
t1919 = t1552 * t1714;
t1791 = (t1531 + (0.2e1 * t1534 * t1866 + (-t1828 + t1920) * t1746 * t1712) * pkin(1)) * t1897 * t1919;
t1823 = t1757 / t1711 ^ 2 * t1543;
t1815 = (t1531 + (t1540 * t1866 - t1828) * pkin(1)) * t1823;
t1661 = qJ(3,2) + t1672;
t1649 = cos(t1661);
t1662 = -qJ(3,2) + t1672;
t1650 = cos(t1662);
t1573 = t1669 * t1979 + (-t1649 - t1650) * pkin(2);
t1724 = qJ(2,2) + qJ(3,2);
t1679 = sin(t1724);
t1725 = qJ(2,2) - qJ(3,2);
t1680 = sin(t1725);
t1870 = t1679 + t1680;
t1618 = 0.1e1 / t1870;
t1912 = t1573 * t1618;
t1643 = sin(t1661);
t1644 = sin(t1662);
t1570 = t1666 * t1979 + (-t1643 - t1644) * pkin(2);
t1915 = t1570 * t1618;
t1770 = t1791 * t1959 - t1815 * t1897 / 0.2e1 + t1528 * t1793 * t1984 + t1795 * t1915 + t1794 * t1912 + t1773 * t1989;
t1480 = t1498 + t1770;
t1690 = sin(t1729);
t1693 = cos(t1729);
t1748 = cos(qJ(1,2));
t1929 = t1748 * g(2);
t1930 = t1748 * g(1);
t1739 = sin(qJ(1,2));
t1933 = t1739 * g(2);
t1939 = g(1) * t1739;
t1981 = t1747 * (t1480 * t1978 - (t1929 - t1939) * t1693 + (t1930 + t1933) * t1690) - 0.2e1 * ((-t1930 / 0.2e1 - t1933 / 0.2e1) * t1693 + (-t1929 / 0.2e1 + t1939 / 0.2e1) * t1690 + pkin(1) * (t1713 * t1821 + (t1756 * t1919 + t1823 / 0.2e1) * t1853)) * t1738;
t1705 = 0.1e1 / t1741 ^ 2;
t1896 = t1705 * t1759;
t1852 = t1544 * t1896;
t1517 = t1541 * t1717 * t1852;
t1673 = qJ(2,1) + t1676;
t1655 = sin(t1673);
t1902 = t1655 * t1704;
t1586 = t1887 * t1902;
t1658 = cos(t1673);
t1899 = t1658 * t1704;
t1589 = t1886 * t1899;
t1800 = t1740 * t1838;
t1604 = t1731 * t1800;
t1622 = t1830 * t1983;
t1781 = t1517 + t1586 + t1589 + t1604 + t1622;
t1837 = t1718 * t1896;
t1787 = t1837 * t1986;
t1499 = t1781 - t1787;
t1796 = t1717 * t1750 * t1882;
t1950 = pkin(1) * t1741;
t1529 = (-t1541 * t1740 * t1950 + t1717 * t1752) * t1749 + pkin(1) * t1796;
t1905 = t1629 * t1740;
t1772 = t1799 * t1905;
t1532 = t1755 * t1541 * t1764;
t1535 = t1547 + t1784 / 0.2e1;
t1827 = t1741 * t1883;
t1865 = t1750 * t1944;
t1917 = t1553 * t1719;
t1790 = (t1532 + (0.2e1 * t1535 * t1865 + (-t1827 + t1918) * t1749 * t1717) * pkin(1)) * t1896 * t1917;
t1822 = t1757 / t1716 ^ 2 * t1544;
t1814 = (t1532 + (t1541 * t1865 - t1827) * pkin(1)) * t1822;
t1663 = qJ(3,1) + t1673;
t1651 = cos(t1663);
t1664 = -qJ(3,1) + t1673;
t1652 = cos(t1664);
t1574 = t1670 * t1979 + (-t1651 - t1652) * pkin(2);
t1726 = qJ(2,1) + qJ(3,1);
t1681 = sin(t1726);
t1727 = qJ(2,1) - qJ(3,1);
t1682 = sin(t1727);
t1869 = t1681 + t1682;
t1619 = 0.1e1 / t1869;
t1911 = t1574 * t1619;
t1645 = sin(t1663);
t1646 = sin(t1664);
t1571 = t1667 * t1979 + (-t1645 - t1646) * pkin(2);
t1914 = t1571 * t1619;
t1769 = t1790 * t1959 - t1814 * t1896 / 0.2e1 + t1529 * t1793 * t1983 + t1795 * t1914 + t1794 * t1911 + t1772 * t1989;
t1481 = t1499 + t1769;
t1691 = sin(t1730);
t1694 = cos(t1730);
t1751 = cos(qJ(1,1));
t1935 = g(2) * t1751;
t1742 = sin(qJ(1,1));
t1936 = g(2) * t1742;
t1937 = g(1) * t1751;
t1938 = g(1) * t1742;
t1980 = t1750 * (t1481 * t1978 - (t1935 - t1938) * t1694 + (t1936 + t1937) * t1691) - 0.2e1 * ((-t1937 / 0.2e1 - t1936 / 0.2e1) * t1694 + (-t1935 / 0.2e1 + t1938 / 0.2e1) * t1691 + pkin(1) * (t1718 * t1821 + (t1756 * t1917 + t1822 / 0.2e1) * t1852)) * t1741;
t1977 = 2 * MDP(7);
t1975 = -pkin(1) / 0.2e1;
t1974 = pkin(1) / 0.2e1;
t1973 = g(1) / 0.2e1;
t1972 = -g(2) / 0.2e1;
t1971 = t1641 / 0.2e1;
t1970 = t1643 / 0.2e1;
t1969 = t1645 / 0.2e1;
t1968 = -t1648 / 0.2e1;
t1967 = -t1650 / 0.2e1;
t1966 = -t1652 / 0.2e1;
t1965 = -t1678 / 0.2e1;
t1964 = -t1680 / 0.2e1;
t1963 = -t1682 / 0.2e1;
t1683 = cos(t1722);
t1962 = t1683 / 0.2e1;
t1685 = cos(t1724);
t1961 = t1685 / 0.2e1;
t1687 = cos(t1726);
t1960 = t1687 / 0.2e1;
t1958 = pkin(1) * t1497;
t1957 = pkin(1) * t1498;
t1956 = pkin(1) * t1499;
t1833 = t1734 * t1889;
t1888 = t1731 * t1756;
t1581 = t1707 * t1888 + t1709 * t1833;
t1955 = pkin(1) * (0.2e1 * t1539 * t1798 + t1581 * t1735);
t1832 = t1737 * t1889;
t1582 = t1712 * t1888 + t1714 * t1832;
t1954 = pkin(1) * (0.2e1 * t1540 * t1797 + t1582 * t1738);
t1831 = t1740 * t1889;
t1583 = t1717 * t1888 + t1719 * t1831;
t1953 = pkin(1) * (0.2e1 * t1541 * t1796 + t1583 * t1741);
t1826 = t1539 * t1882;
t1476 = (t1587 / 0.2e1 + t1584 / 0.2e1 + t1602 / 0.2e1 - t1789 / 0.2e1 + t1515 / 0.2e1 + t1620 / 0.2e1 + t1771) * t1734 + t1826;
t1928 = t1476 * t1734;
t1825 = t1540 * t1882;
t1477 = (t1588 / 0.2e1 + t1585 / 0.2e1 + t1603 / 0.2e1 - t1788 / 0.2e1 + t1516 / 0.2e1 + t1621 / 0.2e1 + t1770) * t1737 + t1825;
t1927 = t1477 * t1737;
t1855 = t1541 * t1882;
t1478 = (t1589 / 0.2e1 + t1586 / 0.2e1 + t1604 / 0.2e1 - t1787 / 0.2e1 + t1517 / 0.2e1 + t1622 / 0.2e1 + t1769) * t1740 + t1855;
t1926 = t1478 * t1740;
t1575 = t1581 * t1734 + t1707 * t1889;
t1910 = t1575 * t1617;
t1576 = t1582 * t1737 + t1712 * t1889;
t1909 = t1576 * t1618;
t1577 = t1583 * t1740 + t1717 * t1889;
t1908 = t1577 * t1619;
t1895 = t1707 * t1734;
t1894 = t1707 * t1756;
t1893 = t1712 * t1737;
t1892 = t1712 * t1756;
t1891 = t1717 * t1740;
t1890 = t1717 * t1756;
t1880 = g(2) * t1971 + t1647 * t1973;
t1879 = g(2) * t1970 + t1649 * t1973;
t1878 = g(2) * t1969 + t1651 * t1973;
t1877 = g(1) * t1971 + t1647 * t1972;
t1876 = g(1) * t1970 + t1649 * t1972;
t1875 = g(1) * t1969 + t1651 * t1972;
t1874 = g(1) * t1656 + g(2) * t1653;
t1873 = g(1) * t1657 + g(2) * t1654;
t1872 = g(1) * t1658 + g(2) * t1655;
t1868 = 0.2e1 * t1758;
t1864 = t1617 * t1928;
t1863 = t1476 * t1734 ^ 2 * t1698;
t1862 = t1698 * t1928;
t1861 = t1618 * t1927;
t1860 = t1477 * t1737 ^ 2 * t1701;
t1859 = t1701 * t1927;
t1858 = t1619 * t1926;
t1857 = t1478 * t1740 ^ 2 * t1704;
t1856 = t1704 * t1926;
t1548 = t1551 ^ 2;
t1851 = t1548 * t1708 * t1758;
t1549 = t1552 ^ 2;
t1850 = t1549 * t1713 * t1758;
t1550 = t1553 ^ 2;
t1849 = t1550 * t1718 * t1758;
t1848 = t1708 * t1907;
t1847 = t1713 * t1906;
t1846 = t1718 * t1905;
t1845 = t1698 * t1895;
t1842 = t1701 * t1893;
t1839 = t1704 * t1891;
t1819 = g(1) * t1653 - g(2) * t1656;
t1818 = g(1) * t1654 - g(2) * t1657;
t1817 = g(1) * t1655 - g(2) * t1658;
t1813 = t1699 * t1851;
t1812 = t1548 * t1843;
t1811 = t1702 * t1850;
t1810 = t1549 * t1840;
t1809 = t1705 * t1849;
t1808 = t1550 * t1837;
t1807 = t1698 * t1848;
t1806 = t1701 * t1847;
t1805 = t1704 * t1846;
t1780 = g(2) * t1968 + t1642 * t1973;
t1779 = g(2) * t1967 + t1644 * t1973;
t1778 = g(2) * t1966 + t1646 * t1973;
t1777 = g(1) * t1968 + t1642 * t1972;
t1776 = g(1) * t1967 + t1644 * t1972;
t1775 = g(1) * t1966 + t1646 * t1972;
t1688 = cos(t1727);
t1686 = cos(t1725);
t1684 = cos(t1723);
t1601 = g(1) * t1694 + g(2) * t1691;
t1600 = g(1) * t1693 + g(2) * t1690;
t1599 = g(1) * t1692 + g(2) * t1689;
t1592 = g(1) * t1691 - g(2) * t1694;
t1591 = g(1) * t1690 - g(2) * t1693;
t1590 = g(1) * t1689 - g(2) * t1692;
t1568 = t1583 * t1749 - t1718 * t1831;
t1567 = t1582 * t1746 - t1713 * t1832;
t1566 = t1581 * t1743 - t1708 * t1833;
t1565 = -t1592 * t1742 + t1601 * t1751;
t1564 = -t1591 * t1739 + t1600 * t1748;
t1563 = -t1590 * t1736 + t1599 * t1745;
t1562 = t1592 * t1751 + t1601 * t1742;
t1561 = t1591 * t1748 + t1600 * t1739;
t1560 = t1590 * t1745 + t1599 * t1736;
t1538 = t1541 ^ 2;
t1537 = t1540 ^ 2;
t1536 = t1539 ^ 2;
t1496 = t1499 * t1947 + t1704 * t1849 + t1817;
t1495 = t1497 * t1949 + t1698 * t1851 + t1819;
t1494 = t1498 * t1948 + t1701 * t1850 + t1818;
t1493 = -t1499 * t1950 + t1750 * t1809 + t1872;
t1492 = -t1497 * t1952 + t1744 * t1813 + t1874;
t1491 = -t1498 * t1951 + t1747 * t1811 + t1873;
t1490 = ((-t1687 + t1688) * t1808 + (t1681 - t1682) * t1499) * t1975 + t1775 + t1878;
t1489 = ((-t1685 + t1686) * t1810 + (t1679 - t1680) * t1498) * t1975 + t1776 + t1879;
t1488 = ((-t1683 + t1684) * t1812 + (t1677 - t1678) * t1497) * t1975 + t1777 + t1880;
t1487 = (t1869 * t1808 + (t1687 + t1688) * t1499) * t1974 + t1778 + t1875;
t1486 = (t1870 * t1810 + (t1685 + t1686) * t1498) * t1974 + t1779 + t1876;
t1485 = (t1871 * t1812 + (t1683 + t1684) * t1497) * t1974 + t1780 + t1877;
t1484 = (-t1718 * t1986 - t1814) * t1896 + (-t1790 + ((-t1529 * t1719 * t1752 - t1731 * t1846) * t1704 + (t1571 * t1732 + t1574 * t1733) * t1619) * t1758) * t1756 + t1781;
t1483 = (-t1713 * t1987 - t1815) * t1897 + (-t1791 + ((-t1528 * t1714 * t1752 - t1731 * t1847) * t1701 + (t1570 * t1732 + t1573 * t1733) * t1618) * t1758) * t1756 + t1782;
t1482 = (-t1708 * t1988 - t1816) * t1898 + (-t1792 + ((-t1527 * t1709 * t1752 - t1731 * t1848) * t1698 + (t1569 * t1732 + t1572 * t1733) * t1617) * t1758) * t1756 + t1783;
t1475 = (-t1535 * t1544 * t1834 + t1481 * t1750) * t1978 + t1817;
t1474 = (-t1534 * t1543 * t1835 + t1480 * t1747) * t1978 + t1818;
t1473 = (-t1533 * t1542 * t1836 + t1479 * t1744) * t1978 + t1819;
t1472 = (t1535 * t1750 * t1784 + t1481 * t1741) * t1979 + t1872;
t1471 = (t1534 * t1747 * t1785 + t1480 * t1738) * t1979 + t1873;
t1470 = (t1533 * t1744 * t1786 + t1479 * t1735) * t1979 + t1874;
t1469 = t1740 * t1484 * t1749 + (-t1717 + 0.2e1 * t1749) * t1855;
t1468 = t1737 * t1483 * t1746 + (-t1712 + 0.2e1 * t1746) * t1825;
t1467 = t1734 * t1482 * t1743 + (-t1707 + 0.2e1 * t1743) * t1826;
t1466 = -t1740 * t1953 + t1980 * t1749;
t1465 = -t1980 * t1740 - t1749 * t1953;
t1464 = -t1737 * t1954 + t1981 * t1746;
t1463 = -t1981 * t1737 - t1746 * t1954;
t1462 = -t1734 * t1955 + t1982 * t1743;
t1461 = -t1982 * t1734 - t1743 * t1955;
t1 = [(t1733 - g(1)) * MDP(14) + ((t1497 * t1901 + t1498 * t1900 + t1499 * t1899) * MDP(1) + (t1560 * t1901 + t1561 * t1900 + t1562 * t1899) * MDP(2) + (t1563 * t1901 + t1564 * t1900 + t1565 * t1899) * MDP(3) + (t1482 * t1901 + t1483 * t1900 + t1484 * t1899) * MDP(4) + (t1473 * t1901 + t1474 * t1900 + t1475 * t1899) * MDP(5) + (t1470 * t1901 + t1471 * t1900 + t1472 * t1899) * MDP(6) + (t1575 * t1901 + t1576 * t1900 + t1577 * t1899) * MDP(9) + (t1566 * t1901 + t1567 * t1900 + t1568 * t1899) * MDP(10) + (t1462 * t1901 + t1464 * t1900 + t1466 * t1899) * MDP(12) + (t1461 * t1901 + t1463 * t1900 + t1465 * t1899) * MDP(13) + (t1656 * t1862 + t1657 * t1859 + t1658 * t1856) * t1977 + (t1467 * t1901 + t1468 * t1900 + t1469 * t1899) * t1976 + ((t1482 * t1913 + t1483 * t1912 + t1484 * t1911) * MDP(4) + (t1494 * t1912 + t1495 * t1913 + t1496 * t1911) * MDP(5) + (t1491 * t1912 + t1492 * t1913 + t1493 * t1911) * MDP(6) + (t1572 * t1910 + t1573 * t1909 + t1574 * t1908) * MDP(9) + (t1566 * t1913 + t1567 * t1912 + t1568 * t1911) * MDP(10) + (t1485 * t1913 + t1486 * t1912 + t1487 * t1911) * MDP(12) + (t1488 * t1913 + t1489 * t1912 + t1490 * t1911) * MDP(13) + (t1572 * t1864 + t1573 * t1861 + t1574 * t1858) * t1977 + (t1467 * t1913 + t1468 * t1912 + t1469 * t1911) * t1976) * t1756) * t1758; (t1732 - g(2)) * MDP(14) + ((t1497 * t1904 + t1498 * t1903 + t1499 * t1902) * MDP(1) + (t1560 * t1904 + t1561 * t1903 + t1562 * t1902) * MDP(2) + (t1563 * t1904 + t1564 * t1903 + t1565 * t1902) * MDP(3) + (t1482 * t1904 + t1483 * t1903 + t1484 * t1902) * MDP(4) + (t1473 * t1904 + t1474 * t1903 + t1475 * t1902) * MDP(5) + (t1470 * t1904 + t1471 * t1903 + t1472 * t1902) * MDP(6) + (t1575 * t1904 + t1576 * t1903 + t1577 * t1902) * MDP(9) + (t1566 * t1904 + t1567 * t1903 + t1568 * t1902) * MDP(10) + (t1462 * t1904 + t1464 * t1903 + t1466 * t1902) * MDP(12) + (t1461 * t1904 + t1463 * t1903 + t1465 * t1902) * MDP(13) + (t1653 * t1862 + t1654 * t1859 + t1655 * t1856) * t1977 + (t1467 * t1904 + t1468 * t1903 + t1469 * t1902) * t1976 + ((t1482 * t1916 + t1483 * t1915 + t1484 * t1914) * MDP(4) + (t1494 * t1915 + t1495 * t1916 + t1496 * t1914) * MDP(5) + (t1491 * t1915 + t1492 * t1916 + t1493 * t1914) * MDP(6) + (t1569 * t1910 + t1570 * t1909 + t1571 * t1908) * MDP(9) + (t1566 * t1916 + t1567 * t1915 + t1568 * t1914) * MDP(10) + (t1485 * t1916 + t1486 * t1915 + t1487 * t1914) * MDP(12) + (t1488 * t1916 + t1489 * t1915 + t1490 * t1914) * MDP(13) + (t1569 * t1864 + t1570 * t1861 + t1571 * t1858) * t1977 + (t1467 * t1916 + t1468 * t1915 + t1469 * t1914) * t1976) * t1756) * t1758; (t1707 * t1863 + t1712 * t1860 + t1717 * t1857) * t1868 * MDP(7) + (t1466 * t1800 - t1487 * t1772 + (-g(3) * t1749 + (t1681 / 0.2e1 + t1963) * t1809 + (-t1688 / 0.2e1 + t1960) * t1956 - t1778 + t1875) * t1890 + t1464 * t1802 - t1486 * t1773 + (-g(3) * t1746 + (t1679 / 0.2e1 + t1964) * t1811 + (-t1686 / 0.2e1 + t1961) * t1957 - t1779 + t1876) * t1892 + t1462 * t1804 - t1485 * t1774 + (-g(3) * t1743 + (t1677 / 0.2e1 + t1965) * t1813 + (-t1684 / 0.2e1 + t1962) * t1958 - t1780 + t1877) * t1894) * MDP(12) + (t1465 * t1800 - t1490 * t1772 + (g(3) * t1740 + (t1688 / 0.2e1 + t1960) * t1809 + (-t1681 / 0.2e1 + t1963) * t1956 - t1775 + t1878) * t1890 + t1463 * t1802 - t1489 * t1773 + (g(3) * t1737 + (t1686 / 0.2e1 + t1961) * t1811 + (-t1679 / 0.2e1 + t1964) * t1957 - t1776 + t1879) * t1892 + t1461 * t1804 - t1488 * t1774 + (g(3) * t1734 + (t1684 / 0.2e1 + t1962) * t1813 + (-t1677 / 0.2e1 + t1965) * t1958 - t1777 + t1880) * t1894) * MDP(13) + (t1731 - g(3)) * MDP(14) + ((-t1536 * t1734 - t1537 * t1737 - t1538 * t1740 + (-t1623 * t1708 * t1863 - t1626 * t1713 * t1860 - t1629 * t1718 * t1857) * t1868) * MDP(7) + (t1717 * t1538 * (-0.2e1 * t1716 + 0.1e1) + t1712 * t1537 * (-0.2e1 * t1711 + 0.1e1) + t1707 * t1536 * (-0.2e1 * t1706 + 0.1e1)) * MDP(8) + (t1482 * t1895 + t1483 * t1893 + t1484 * t1891) * MDP(9) + (t1482 + t1483 + t1484) * MDP(10) + (t1581 * t1707 + t1582 * t1712 + t1583 * t1717) * MDP(11)) * t1756 + ((t1497 * t1845 + t1498 * t1842 + t1499 * t1839) * MDP(1) + (t1560 * t1845 + t1561 * t1842 + t1562 * t1839) * MDP(2) + (t1563 * t1845 + t1564 * t1842 + t1565 * t1839) * MDP(3) + (t1482 * t1845 + t1483 * t1842 + t1484 * t1839 + (-t1482 * t1807 - t1483 * t1806 - t1484 * t1805) * t1756) * MDP(4) + (t1473 * t1845 + t1474 * t1842 + t1475 * t1839 + (-t1494 * t1806 - t1495 * t1807 - t1496 * t1805) * t1756) * MDP(5) + (t1470 * t1845 + t1471 * t1842 + t1472 * t1839 + (-t1491 * t1806 - t1492 * t1807 - t1493 * t1805) * t1756) * MDP(6) + (t1467 * t1845 + t1468 * t1842 + t1469 * t1839 + (-t1467 * t1807 - t1468 * t1806 - t1469 * t1805) * t1756) * t1976 + (t1575 * t1845 + t1576 * t1842 + t1577 * t1839 + (-t1575 * t1807 - t1576 * t1806 - t1577 * t1805) * t1756) * MDP(9) + (t1566 * t1845 + t1567 * t1842 + t1568 * t1839 + (-t1566 * t1807 - t1567 * t1806 - t1568 * t1805) * t1756) * MDP(10)) * t1758;];
tauX  = t1;
