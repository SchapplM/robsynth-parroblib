% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR7V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:52
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(5,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 03:41:32
% EndTime: 2020-08-07 03:41:50
% DurationCPUTime: 18.68s
% Computational Cost: add. (131316->763), mult. (225843->1046), div. (24204->17), fcn. (169485->159), ass. (0->502)
t1652 = (-pkin(5) - pkin(4));
t1653 = pkin(1) * pkin(2);
t1525 = (t1652 * t1653);
t1683 = 4 * t1525;
t1682 = 2 * t1652;
t1355 = cos(qJ(1,3));
t1407 = 0.1e1 / pkin(1);
t1367 = xDP(3);
t1319 = qJ(2,3) + qJ(3,3);
t1222 = sin(t1319);
t1376 = 2 * qJ(3,3);
t1313 = t1376 + qJ(2,3);
t1380 = 2 * qJ(2,3);
t1315 = t1380 + t1376;
t1316 = t1380 + qJ(3,3);
t1320 = qJ(2,3) - qJ(3,3);
t1345 = sin(qJ(2,3));
t1377 = -2 * qJ(3,3);
t1626 = -(2 * qJ(2,3)) + qJ(1,3);
t1629 = qJ(3,3) + qJ(1,3);
t1630 = -qJ(3,3) + qJ(1,3);
t1619 = ((-sin(qJ(2,3) - t1630) + sin(qJ(2,3) + t1629)) * t1682 + (-cos(t1377 + t1626) - cos(qJ(1,3) + t1315) - 0.2e1 * t1355) * pkin(2) + (-cos(t1630) - cos(t1629) - cos(qJ(3,3) - t1626) - cos(qJ(1,3) + t1316)) * pkin(1)) / ((-sin(t1313) + t1345) * pkin(2) + (sin(t1320) - t1222) * pkin(1));
t1494 = t1367 * t1619;
t1437 = t1407 * t1494;
t1353 = cos(qJ(3,3));
t1306 = t1353 ^ 2;
t1346 = sin(qJ(1,3));
t1568 = t1355 * t1652;
t1344 = sin(qJ(3,3));
t1577 = t1344 * t1345;
t1161 = t1568 * t1577 + (t1306 - 0.1e1) * t1346 * pkin(2);
t1341 = legFrame(3,2);
t1273 = sin(t1341);
t1276 = cos(t1341);
t1354 = cos(qJ(2,3));
t1307 = t1354 ^ 2;
t1479 = t1346 * t1577;
t1656 = 0.2e1 * pkin(2);
t1419 = pkin(1) * t1479 + (t1479 * t1656 - t1568) * t1353;
t1638 = pkin(2) * t1353;
t1512 = t1344 * t1638;
t1533 = 0.2e1 * t1638;
t1595 = (pkin(1) + t1533) * t1344;
t1282 = pkin(1) * t1353;
t1182 = t1306 * t1656 - pkin(2) + t1282;
t1600 = t1182 * t1346;
t1601 = t1182 * t1345;
t1107 = (-t1273 * t1600 + t1276 * t1595) * t1307 + (t1419 * t1273 + t1276 * t1601) * t1354 + t1161 * t1273 - t1276 * t1512;
t1368 = xDP(2);
t1205 = pkin(1) + t1638;
t1422 = pkin(2) * t1577 - t1205 * t1354;
t1167 = 0.1e1 / t1422;
t1303 = 0.1e1 / t1344;
t1583 = t1303 * t1407;
t1485 = t1167 * t1583;
t1101 = t1107 * t1368 * t1485;
t1108 = (t1273 * t1595 + t1276 * t1600) * t1307 + (t1273 * t1601 - t1419 * t1276) * t1354 - t1161 * t1276 - t1273 * t1512;
t1369 = xDP(1);
t1102 = t1108 * t1369 * t1485;
t1547 = -t1101 - t1102;
t1095 = t1437 / 0.2e1 + t1547;
t1404 = 0.1e1 / pkin(2);
t1561 = t1404 * t1407;
t1482 = t1303 * t1561;
t1152 = t1346 * t1652 + t1422 * t1355;
t1607 = t1152 * t1367;
t1149 = -t1422 * t1346 + t1568;
t1576 = t1344 * t1354;
t1511 = pkin(2) * t1576;
t1594 = t1205 * t1345;
t1170 = t1511 + t1594;
t1141 = -t1149 * t1276 - t1170 * t1273;
t1612 = t1141 * t1369;
t1140 = t1149 * t1273 - t1170 * t1276;
t1613 = t1140 * t1368;
t1662 = (t1612 / 0.2e1 + t1613 / 0.2e1 + t1607 / 0.2e1) * t1482;
t1077 = t1095 + t1662;
t1412 = t1303 * t1404 * (t1607 + t1612 + t1613);
t1098 = t1407 * t1412;
t1086 = t1098 + t1095;
t1403 = pkin(2) ^ 2;
t1080 = t1403 * t1086;
t1406 = pkin(1) ^ 2;
t1089 = t1406 * t1095;
t1245 = cos(t1319);
t1177 = 0.1e1 / (pkin(1) * t1354 + pkin(2) * t1245);
t1137 = (-t1346 * t1367 + (-t1273 * t1368 + t1276 * t1369) * t1355) * t1177;
t1375 = 3 * qJ(3,3);
t1312 = t1375 + t1380;
t1216 = sin(t1312);
t1374 = 4 * qJ(3,3);
t1314 = t1380 + t1374;
t1217 = sin(t1314);
t1218 = sin(t1315);
t1219 = sin(t1316);
t1379 = 3 * qJ(2,3);
t1237 = cos((t1375 + t1379));
t1238 = cos((t1375 + qJ(2,3)));
t1239 = cos(t1313);
t1240 = cos((qJ(3,3) + t1379));
t1241 = cos((t1379 + t1374));
t1242 = cos((t1379 + t1376));
t1243 = cos(t1315);
t1244 = cos(t1316);
t1246 = cos(t1320);
t1642 = -t1406 / 0.2e1;
t1270 = t1642 + t1403;
t1644 = -t1403 / 0.2e1;
t1271 = t1406 + t1644;
t1285 = t1403 + t1406;
t1289 = sin(t1376);
t1290 = sin(t1380);
t1298 = cos(t1380);
t1317 = t1380 - qJ(3,3);
t1318 = t1380 + t1377;
t1378 = 4 * qJ(2,3);
t1402 = pkin(2) * t1403;
t1405 = pkin(1) * t1406;
t1453 = t1403 * t1547;
t1616 = t1137 * t1652;
t1515 = pkin(1) * t1616;
t1462 = pkin(2) * t1515;
t1635 = pkin(2) * t1406;
t1466 = t1402 - 0.3e1 * t1635;
t1563 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t1657 = -0.2e1 * pkin(2);
t1467 = t1563 * t1657;
t1474 = 0.2e1 / 0.3e1 * t1561;
t1429 = t1369 * t1474;
t1430 = t1368 * t1474;
t1431 = t1367 * t1474;
t1473 = (t1140 * t1430 + t1141 * t1429 + t1152 * t1431) * t1303;
t1475 = t1563 / 0.2e1;
t1476 = t1652 * t1563;
t1495 = -4 * t1525;
t1496 = 2 * t1525;
t1500 = sin(t1375) * t1635;
t1557 = t1406 * sin(t1317);
t1503 = pkin(2) * t1557;
t1564 = t1652 * t1406;
t1516 = -0.2e1 * t1564;
t1565 = t1652 * t1403;
t1517 = 0.2e1 * t1565;
t1529 = t1407 * t1657;
t1530 = 0.3e1 * t1635;
t1339 = t1652 ^ 2;
t1215 = t1339 + t1403;
t1534 = 0.4e1 * pkin(2) * t1215;
t1543 = 0.2e1 / 0.3e1 * t1403 + t1406;
t1658 = -0.6e1 * pkin(2);
t1535 = (0.2e1 / 0.3e1 * t1339 + t1543) * t1658;
t1536 = -0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t1339 + t1543);
t1639 = pkin(1) * t1403;
t1537 = 0.5e1 * t1639;
t1538 = -0.3e1 * t1639;
t1544 = 0.4e1 / 0.3e1 * t1339 + t1406;
t1660 = -0.3e1 * pkin(1);
t1539 = (0.2e1 * t1403 + t1544) * t1660;
t1540 = (0.3e1 * t1403 + t1544) * t1660;
t1541 = 0.2e1 * pkin(1) * (0.9e1 / 0.2e1 * t1403 + t1406 + (2 * t1339));
t1550 = t1080 + t1089;
t1560 = t1405 * sin(t1318);
t1562 = t1403 * t1407;
t1640 = pkin(1) * (-0.3e1 * t1403 + t1406);
t1643 = t1403 / 0.2e1;
t1659 = -0.2e1 * pkin(1);
t1665 = 0.4e1 * t1562;
t1666 = 0.2e1 * t1562;
t1672 = t1354 + t1242;
t1677 = cos((qJ(2,3) + t1377)) + cos(t1379);
t1678 = t1239 + t1241;
t1057 = (((-t1557 / 0.2e1 + t1216 * t1643 + t1219 * t1475 + t1285 * t1344 + (t1218 + t1289 - t1290) * t1653) * t1086 - ((-t1242 / 0.4e1 + t1241 / 0.4e1 + t1239 / 0.4e1 - t1354 / 0.4e1) * pkin(2) + (t1237 / 0.4e1 - t1240 / 0.4e1 + t1238 / 0.4e1 - t1245 / 0.4e1) * pkin(1)) * t1616) * t1098 * t1529 + ((t1098 * t1238 * t1496 + t1672 * (t1089 - t1080) * t1682 + t1678 * t1086 * t1517 + ((t1217 + sin((t1378 + t1374))) * t1538 + t1466 * sin((t1375 + t1378)) + sin((t1378 + qJ(3,3))) * t1530 - sin((t1378 + t1376)) * t1640 - t1402 * sin((t1378 + 5 * qJ(3,3))) + t1405 * sin(t1378) + t1216 * t1535 + t1218 * t1539 + t1219 * t1534 + t1289 * t1540 + t1290 * t1541 + t1344 * t1536 - 0.3e1 * t1500 + 0.6e1 * t1503 + t1560) * t1137 + (t1246 * t1495 + t1677 * t1516) * t1095 + ((t1095 - t1662) * t1245 - (-t1237 + t1240) * t1077) * t1683) * t1137 / 0.4e1 + (-pkin(1) * (t1412 * t1665 + t1494 * t1666 + t1089 + 0.4e1 * t1453) * t1218 + t1550 * t1216 * t1657 + 0.4e1 * t1077 * t1503 + t1095 * t1560 - t1095 * t1217 * t1639 + t1086 * t1219 * t1467 + (0.3e1 * t1453 + t1089 + (0.3e1 / 0.2e1 * t1494 + 0.2e1 * t1412) * t1562) * t1289 * t1659 + ((0.4e1 / 0.5e1 * t1612 + 0.4e1 / 0.5e1 * t1613 + 0.4e1 / 0.5e1 * t1607) * t1482 + t1095) * t1290 * t1537 - 0.2e1 * t1095 * t1500 + t1344 * ((-0.2e1 / 0.3e1 * t1102 - 0.2e1 / 0.3e1 * t1101 + t1437 / 0.3e1 + t1473) * t1403 + t1406 * (t1473 + t1095)) * t1658 + 0.2e1 * (t1237 + t1245) * t1462 - 0.2e1 * (t1246 + t1240) * t1462 + (t1672 * t1476 - t1677 * t1564 + t1678 * t1565) * t1137) * t1095 / 0.2e1) * t1407) / (t1270 * t1243 + cos(t1318) * t1642 + cos(t1314) * t1644 + t1271 * t1298 - t1285 * cos(t1376) + (-cos(t1317) - cos(t1312) - cos(t1375) + 0.2e1 * t1244 + t1353) * t1653 + t1285);
t1506 = t1345 * pkin(1) * t1095;
t1542 = t1406 - t1403;
t1575 = t1345 * t1353;
t1580 = t1306 * t1403;
t1062 = (t1222 * t1616 + t1086 * (t1282 + pkin(2))) * t1098 * t1583 + ((t1345 * t1515 + (0.2e1 * t1077 * t1282 - (-t1575 - t1576) * t1616) * pkin(2) + t1550) * t1095 + (((pkin(1) * t1533 + t1542 + 0.2e1 * t1580) * t1307 - 0.2e1 * t1594 * t1511 - t1580 + t1215) * t1137 + (t1506 - (-pkin(2) * t1575 - t1511) * t1086) * t1652) * t1137) * t1482;
t1065 = (t1086 * t1222 * t1657 - 0.2e1 * t1506 - t1616) * t1137 * t1177;
t1092 = t1095 ^ 2;
t1362 = (rSges(3,3) + pkin(4));
t1641 = m(3) * t1362;
t1651 = m(2) * rSges(2,3);
t1181 = rSges(2,1) * t1651 + pkin(1) * t1641 - Icges(2,5);
t1197 = rSges(3,2) * t1641 - Icges(3,6);
t1198 = rSges(3,1) * t1641 - Icges(3,5);
t1212 = rSges(2,2) * t1651 - Icges(2,6);
t1122 = -(t1197 * t1344 - t1198 * t1353 - t1181) * t1345 + (t1197 * t1353 + t1198 * t1344 + t1212) * t1354;
t1155 = t1197 * t1245 + t1198 * t1222;
t1185 = rSges(3,1) * t1344 + rSges(3,2) * t1353;
t1398 = rSges(3,2) ^ 2;
t1400 = rSges(3,1) ^ 2;
t1188 = m(3) * (-t1398 + t1400) - Icges(3,1) + Icges(3,2);
t1650 = m(3) * rSges(3,2);
t1554 = pkin(1) * t1650;
t1200 = t1344 * t1554;
t1210 = rSges(3,1) * t1650 - Icges(3,4);
t1213 = m(2) * rSges(2,1) * rSges(2,2) - Icges(2,4);
t1279 = t1398 + t1400;
t1203 = t1406 + t1279;
t1399 = rSges(2,2) ^ 2;
t1401 = rSges(2,1) ^ 2;
t1281 = t1399 + t1401;
t1416 = -((2 * t1362 ^ 2) + t1203) * m(3) / 0.2e1 - ((2 * rSges(2,3) ^ 2) + t1281) * m(2) / 0.2e1 - (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) - Icges(3,2) / 0.2e1 - Icges(2,2) / 0.2e1 - Icges(3,1) / 0.2e1 - Icges(2,1) / 0.2e1 - Icges(1,3);
t1425 = rSges(3,1) * t1219 + rSges(3,2) * t1244;
t1586 = t1213 * t1298;
t1589 = t1210 * t1243;
t1180 = t1406 * m(3) + (-t1399 + t1401) * m(2) + Icges(2,2) - Icges(2,1);
t1604 = t1180 * t1290;
t1648 = -t1188 / 0.2e1;
t1649 = -t1180 / 0.2e1;
t1654 = pkin(1) * m(3);
t1669 = -0.2e1 * t1077;
t1459 = t1177 * (t1122 * t1057 + t1155 * t1062 + (t1218 * t1210 + t1243 * t1648 + t1290 * t1213 + t1298 * t1649 + t1200 + t1416 + (rSges(3,2) * t1219 + (-t1244 - t1353) * rSges(3,1)) * t1654) * t1065 + (-t1181 * t1354 + t1212 * t1345) * t1092 + (t1197 * t1222 - t1198 * t1245) * t1086 ^ 2 + ((-0.2e1 * t1586 - t1604) * t1095 + (-t1188 * t1218 - 0.2e1 * t1589) * t1086 + (-t1098 * t1185 + t1425 * t1669) * t1654) * t1137);
t1681 = t1355 * t1459;
t1358 = cos(qJ(1,2));
t1328 = qJ(2,2) + qJ(3,2);
t1229 = sin(t1328);
t1384 = 2 * qJ(3,2);
t1388 = 2 * qJ(2,2);
t1322 = t1384 + t1388;
t1323 = t1384 + qJ(2,2);
t1326 = t1388 + qJ(3,2);
t1329 = qJ(2,2) - qJ(3,2);
t1348 = sin(qJ(2,2));
t1385 = -2 * qJ(3,2);
t1627 = qJ(1,2) - (2 * qJ(2,2));
t1631 = qJ(3,2) + qJ(1,2);
t1632 = -qJ(3,2) + qJ(1,2);
t1618 = ((-sin(qJ(2,2) - t1632) + sin(qJ(2,2) + t1631)) * t1682 + (-cos(t1385 + t1627) - cos(qJ(1,2) + t1322) - 0.2e1 * t1358) * pkin(2) + (-cos(qJ(3,2) - t1627) - cos(qJ(1,2) + t1326) - cos(t1632) - cos(t1631)) * pkin(1)) / ((-sin(t1323) + t1348) * pkin(2) + (sin(t1329) - t1229) * pkin(1));
t1493 = t1367 * t1618;
t1436 = t1407 * t1493;
t1356 = cos(qJ(3,2));
t1308 = t1356 ^ 2;
t1349 = sin(qJ(1,2));
t1567 = t1358 * t1652;
t1347 = sin(qJ(3,2));
t1574 = t1347 * t1348;
t1162 = t1567 * t1574 + (t1308 - 0.1e1) * t1349 * pkin(2);
t1342 = legFrame(2,2);
t1274 = sin(t1342);
t1277 = cos(t1342);
t1357 = cos(qJ(2,2));
t1309 = t1357 ^ 2;
t1478 = t1349 * t1574;
t1418 = pkin(1) * t1478 + (t1478 * t1656 - t1567) * t1356;
t1637 = pkin(2) * t1356;
t1510 = t1347 * t1637;
t1532 = 0.2e1 * t1637;
t1593 = (pkin(1) + t1532) * t1347;
t1283 = pkin(1) * t1356;
t1183 = t1308 * t1656 - pkin(2) + t1283;
t1598 = t1183 * t1349;
t1599 = t1183 * t1348;
t1109 = (-t1274 * t1598 + t1277 * t1593) * t1309 + (t1418 * t1274 + t1277 * t1599) * t1357 + t1162 * t1274 - t1277 * t1510;
t1207 = pkin(1) + t1637;
t1421 = pkin(2) * t1574 - t1207 * t1357;
t1168 = 0.1e1 / t1421;
t1304 = 0.1e1 / t1347;
t1582 = t1304 * t1407;
t1484 = t1168 * t1582;
t1103 = t1109 * t1368 * t1484;
t1110 = (t1274 * t1593 + t1277 * t1598) * t1309 + (t1274 * t1599 - t1418 * t1277) * t1357 - t1162 * t1277 - t1274 * t1510;
t1104 = t1110 * t1369 * t1484;
t1546 = -t1103 - t1104;
t1096 = t1436 / 0.2e1 + t1546;
t1481 = t1304 * t1561;
t1153 = t1349 * t1652 + t1421 * t1358;
t1606 = t1153 * t1367;
t1150 = -t1421 * t1349 + t1567;
t1573 = t1347 * t1357;
t1509 = pkin(2) * t1573;
t1592 = t1207 * t1348;
t1171 = t1509 + t1592;
t1143 = -t1150 * t1277 - t1171 * t1274;
t1610 = t1143 * t1369;
t1142 = t1150 * t1274 - t1171 * t1277;
t1611 = t1142 * t1368;
t1663 = (t1610 / 0.2e1 + t1611 / 0.2e1 + t1606 / 0.2e1) * t1481;
t1078 = t1096 + t1663;
t1411 = t1304 * t1404 * (t1606 + t1610 + t1611);
t1099 = t1407 * t1411;
t1087 = t1099 + t1096;
t1081 = t1403 * t1087;
t1090 = t1406 * t1096;
t1257 = cos(t1328);
t1178 = 0.1e1 / (pkin(1) * t1357 + pkin(2) * t1257);
t1138 = (-t1349 * t1367 + (-t1274 * t1368 + t1277 * t1369) * t1358) * t1178;
t1382 = 4 * qJ(3,2);
t1321 = t1382 + t1388;
t1223 = sin(t1321);
t1224 = sin(t1322);
t1383 = 3 * qJ(3,2);
t1325 = t1388 + t1383;
t1226 = sin(t1325);
t1227 = sin(t1326);
t1248 = cos((t1383 + qJ(2,2)));
t1249 = cos(t1322);
t1250 = cos(t1323);
t1387 = 3 * qJ(2,2);
t1252 = cos((t1387 + t1382));
t1253 = cos((t1387 + t1383));
t1254 = cos((t1387 + t1384));
t1255 = cos((t1387 + qJ(3,2)));
t1256 = cos(t1326);
t1258 = cos(t1329);
t1292 = sin(t1384);
t1293 = sin(t1388);
t1300 = cos(t1388);
t1324 = -qJ(3,2) + t1388;
t1327 = t1388 + t1385;
t1386 = 4 * qJ(2,2);
t1452 = t1403 * t1546;
t1615 = t1138 * t1652;
t1514 = pkin(1) * t1615;
t1461 = pkin(2) * t1514;
t1472 = (t1142 * t1430 + t1143 * t1429 + t1153 * t1431) * t1304;
t1499 = sin(t1383) * t1635;
t1556 = t1406 * sin(t1324);
t1502 = pkin(2) * t1556;
t1549 = t1081 + t1090;
t1559 = t1405 * sin(t1327);
t1671 = t1357 + t1254;
t1675 = t1252 + t1250;
t1676 = cos((t1385 + qJ(2,2))) + cos(t1387);
t1056 = (((t1226 * t1643 - t1556 / 0.2e1 + t1227 * t1475 + t1285 * t1347 + (t1224 + t1292 - t1293) * t1653) * t1087 - ((-t1254 / 0.4e1 + t1252 / 0.4e1 + t1250 / 0.4e1 - t1357 / 0.4e1) * pkin(2) + (t1253 / 0.4e1 - t1255 / 0.4e1 + t1248 / 0.4e1 - t1257 / 0.4e1) * pkin(1)) * t1615) * t1099 * t1529 + ((t1099 * t1248 * t1496 + t1671 * (t1090 - t1081) * t1682 + t1675 * t1087 * t1517 + ((t1223 + sin((t1386 + t1382))) * t1538 + t1466 * sin((t1386 + t1383)) + sin((t1386 + qJ(3,2))) * t1530 - sin((t1386 + t1384)) * t1640 - t1402 * sin((5 * qJ(3,2) + t1386)) + t1405 * sin(t1386) + t1224 * t1539 + t1226 * t1535 + t1227 * t1534 + t1292 * t1540 + t1293 * t1541 + t1347 * t1536 - 0.3e1 * t1499 + 0.6e1 * t1502 + t1559) * t1138 + (t1258 * t1495 + t1676 * t1516) * t1096 + ((t1096 - t1663) * t1257 - (-t1253 + t1255) * t1078) * t1683) * t1138 / 0.4e1 + (t1549 * t1226 * t1657 - pkin(1) * (t1411 * t1665 + t1493 * t1666 + t1090 + 0.4e1 * t1452) * t1224 + 0.4e1 * t1078 * t1502 + t1096 * t1559 - t1096 * t1223 * t1639 + t1087 * t1227 * t1467 + (0.3e1 * t1452 + t1090 + (0.3e1 / 0.2e1 * t1493 + 0.2e1 * t1411) * t1562) * t1292 * t1659 + ((0.4e1 / 0.5e1 * t1610 + 0.4e1 / 0.5e1 * t1611 + 0.4e1 / 0.5e1 * t1606) * t1481 + t1096) * t1293 * t1537 - 0.2e1 * t1096 * t1499 + t1347 * ((-0.2e1 / 0.3e1 * t1104 - 0.2e1 / 0.3e1 * t1103 + t1436 / 0.3e1 + t1472) * t1403 + t1406 * (t1472 + t1096)) * t1658 + 0.2e1 * (t1253 + t1257) * t1461 - 0.2e1 * (t1258 + t1255) * t1461 + (t1671 * t1476 - t1676 * t1564 + t1675 * t1565) * t1138) * t1096 / 0.2e1) * t1407) / (t1270 * t1249 + cos(t1327) * t1642 + cos(t1321) * t1644 + t1271 * t1300 - t1285 * cos(t1384) + (-cos(t1325) - cos(t1324) - cos(t1383) + 0.2e1 * t1256 + t1356) * t1653 + t1285);
t1505 = t1348 * pkin(1) * t1096;
t1572 = t1348 * t1356;
t1579 = t1308 * t1403;
t1063 = (t1229 * t1615 + t1087 * (t1283 + pkin(2))) * t1099 * t1582 + ((t1348 * t1514 + (0.2e1 * t1078 * t1283 - (-t1572 - t1573) * t1615) * pkin(2) + t1549) * t1096 + (((pkin(1) * t1532 + t1542 + 0.2e1 * t1579) * t1309 - 0.2e1 * t1592 * t1509 - t1579 + t1215) * t1138 + (t1505 - (-pkin(2) * t1572 - t1509) * t1087) * t1652) * t1138) * t1481;
t1066 = (t1087 * t1229 * t1657 - 0.2e1 * t1505 - t1615) * t1138 * t1178;
t1093 = t1096 ^ 2;
t1123 = -(t1197 * t1347 - t1198 * t1356 - t1181) * t1348 + (t1197 * t1356 + t1198 * t1347 + t1212) * t1357;
t1156 = t1197 * t1257 + t1198 * t1229;
t1186 = rSges(3,1) * t1347 + rSges(3,2) * t1356;
t1201 = t1347 * t1554;
t1424 = rSges(3,1) * t1227 + rSges(3,2) * t1256;
t1585 = t1213 * t1300;
t1588 = t1210 * t1249;
t1603 = t1180 * t1293;
t1668 = -0.2e1 * t1078;
t1458 = t1178 * (t1123 * t1056 + t1156 * t1063 + (t1224 * t1210 + t1249 * t1648 + t1293 * t1213 + t1300 * t1649 + t1201 + t1416 + (rSges(3,2) * t1227 + (-t1256 - t1356) * rSges(3,1)) * t1654) * t1066 + (-t1181 * t1357 + t1212 * t1348) * t1093 + (t1197 * t1229 - t1198 * t1257) * t1087 ^ 2 + ((-0.2e1 * t1585 - t1603) * t1096 + (-t1188 * t1224 - 0.2e1 * t1588) * t1087 + (-t1099 * t1186 + t1424 * t1668) * t1654) * t1138);
t1680 = t1358 * t1458;
t1361 = cos(qJ(1,1));
t1337 = qJ(2,1) + qJ(3,1);
t1236 = sin(t1337);
t1392 = 2 * qJ(3,1);
t1331 = t1392 + qJ(2,1);
t1396 = 2 * qJ(2,1);
t1333 = t1396 + t1392;
t1334 = t1396 + qJ(3,1);
t1338 = qJ(2,1) - qJ(3,1);
t1351 = sin(qJ(2,1));
t1393 = -2 * qJ(3,1);
t1628 = qJ(1,1) - (2 * qJ(2,1));
t1633 = qJ(3,1) + qJ(1,1);
t1634 = -qJ(3,1) + qJ(1,1);
t1617 = ((-sin(qJ(2,1) - t1634) + sin(qJ(2,1) + t1633)) * t1682 + (-cos(t1393 + t1628) - cos(qJ(1,1) + t1333) - 0.2e1 * t1361) * pkin(2) + (-cos(qJ(3,1) - t1628) - cos(qJ(1,1) + t1334) - cos(t1634) - cos(t1633)) * pkin(1)) / ((-sin(t1331) + t1351) * pkin(2) + (sin(t1338) - t1236) * pkin(1));
t1492 = t1367 * t1617;
t1435 = t1407 * t1492;
t1359 = cos(qJ(3,1));
t1310 = t1359 ^ 2;
t1352 = sin(qJ(1,1));
t1566 = t1361 * t1652;
t1350 = sin(qJ(3,1));
t1571 = t1350 * t1351;
t1163 = t1566 * t1571 + (t1310 - 0.1e1) * t1352 * pkin(2);
t1343 = legFrame(1,2);
t1275 = sin(t1343);
t1278 = cos(t1343);
t1360 = cos(qJ(2,1));
t1311 = t1360 ^ 2;
t1477 = t1352 * t1571;
t1417 = pkin(1) * t1477 + (t1477 * t1656 - t1566) * t1359;
t1636 = pkin(2) * t1359;
t1508 = t1350 * t1636;
t1531 = 0.2e1 * t1636;
t1591 = (pkin(1) + t1531) * t1350;
t1284 = pkin(1) * t1359;
t1184 = t1310 * t1656 - pkin(2) + t1284;
t1596 = t1184 * t1352;
t1597 = t1184 * t1351;
t1111 = (-t1275 * t1596 + t1278 * t1591) * t1311 + (t1417 * t1275 + t1278 * t1597) * t1360 + t1163 * t1275 - t1278 * t1508;
t1209 = pkin(1) + t1636;
t1420 = pkin(2) * t1571 - t1209 * t1360;
t1169 = 0.1e1 / t1420;
t1305 = 0.1e1 / t1350;
t1581 = t1305 * t1407;
t1483 = t1169 * t1581;
t1105 = t1111 * t1368 * t1483;
t1112 = (t1275 * t1591 + t1278 * t1596) * t1311 + (t1275 * t1597 - t1417 * t1278) * t1360 - t1163 * t1278 - t1275 * t1508;
t1106 = t1112 * t1369 * t1483;
t1545 = -t1105 - t1106;
t1097 = t1435 / 0.2e1 + t1545;
t1480 = t1305 * t1561;
t1154 = t1352 * t1652 + t1420 * t1361;
t1605 = t1154 * t1367;
t1151 = -t1420 * t1352 + t1566;
t1570 = t1350 * t1360;
t1507 = pkin(2) * t1570;
t1590 = t1209 * t1351;
t1172 = t1507 + t1590;
t1145 = -t1151 * t1278 - t1172 * t1275;
t1608 = t1145 * t1369;
t1144 = t1151 * t1275 - t1172 * t1278;
t1609 = t1144 * t1368;
t1664 = (t1608 / 0.2e1 + t1609 / 0.2e1 + t1605 / 0.2e1) * t1480;
t1079 = t1097 + t1664;
t1410 = t1305 * t1404 * (t1605 + t1608 + t1609);
t1100 = t1407 * t1410;
t1088 = t1100 + t1097;
t1082 = t1403 * t1088;
t1091 = t1406 * t1097;
t1268 = cos(t1337);
t1179 = 0.1e1 / (pkin(1) * t1360 + pkin(2) * t1268);
t1139 = (-t1352 * t1367 + (-t1275 * t1368 + t1278 * t1369) * t1361) * t1179;
t1391 = 3 * qJ(3,1);
t1330 = t1391 + t1396;
t1230 = sin(t1330);
t1390 = 4 * qJ(3,1);
t1332 = t1396 + t1390;
t1231 = sin(t1332);
t1232 = sin(t1333);
t1233 = sin(t1334);
t1395 = 3 * qJ(2,1);
t1259 = cos((t1390 + t1395));
t1260 = cos((t1391 + qJ(2,1)));
t1261 = cos((t1392 + t1395));
t1262 = cos(t1331);
t1264 = cos((t1395 + t1391));
t1265 = cos((t1395 + qJ(3,1)));
t1266 = cos(t1333);
t1267 = cos(t1334);
t1269 = cos(t1338);
t1295 = sin(t1392);
t1296 = sin(t1396);
t1302 = cos(t1396);
t1335 = t1396 - qJ(3,1);
t1336 = t1396 + t1393;
t1394 = 4 * qJ(2,1);
t1451 = t1403 * t1545;
t1614 = t1139 * t1652;
t1513 = pkin(1) * t1614;
t1460 = pkin(2) * t1513;
t1471 = (t1144 * t1430 + t1145 * t1429 + t1154 * t1431) * t1305;
t1498 = sin(t1391) * t1635;
t1555 = t1406 * sin(t1335);
t1501 = pkin(2) * t1555;
t1548 = t1082 + t1091;
t1558 = t1405 * sin(t1336);
t1670 = t1360 + t1261;
t1673 = cos((t1393 + qJ(2,1))) + cos(t1395);
t1674 = t1262 + t1259;
t1058 = (((-t1555 / 0.2e1 + t1230 * t1643 + t1233 * t1475 + t1285 * t1350 + (t1232 + t1295 - t1296) * t1653) * t1088 - ((-t1261 / 0.4e1 + t1259 / 0.4e1 + t1262 / 0.4e1 - t1360 / 0.4e1) * pkin(2) + (t1264 / 0.4e1 - t1265 / 0.4e1 + t1260 / 0.4e1 - t1268 / 0.4e1) * pkin(1)) * t1614) * t1100 * t1529 + ((t1100 * t1260 * t1496 + t1670 * (t1091 - t1082) * t1682 + t1674 * t1088 * t1517 + ((sin((t1394 + t1390)) + t1231) * t1538 + t1466 * sin((t1391 + t1394)) + sin((qJ(3,1) + t1394)) * t1530 - sin((t1394 + t1392)) * t1640 - t1402 * sin((5 * qJ(3,1) + t1394)) + t1405 * sin(t1394) + t1230 * t1535 + t1232 * t1539 + t1233 * t1534 + t1295 * t1540 + t1296 * t1541 + t1350 * t1536 - 0.3e1 * t1498 + 0.6e1 * t1501 + t1558) * t1139 + (t1269 * t1495 + t1673 * t1516) * t1097 + ((t1097 - t1664) * t1268 - (t1265 - t1264) * t1079) * t1683) * t1139 / 0.4e1 + (-pkin(1) * (t1410 * t1665 + t1492 * t1666 + t1091 + 0.4e1 * t1451) * t1232 + t1548 * t1230 * t1657 + 0.4e1 * t1079 * t1501 + t1097 * t1558 - t1097 * t1231 * t1639 + t1088 * t1233 * t1467 + (0.3e1 * t1451 + t1091 + (0.3e1 / 0.2e1 * t1492 + 0.2e1 * t1410) * t1562) * t1295 * t1659 + ((0.4e1 / 0.5e1 * t1608 + 0.4e1 / 0.5e1 * t1609 + 0.4e1 / 0.5e1 * t1605) * t1480 + t1097) * t1296 * t1537 - 0.2e1 * t1097 * t1498 + t1350 * ((-0.2e1 / 0.3e1 * t1106 - 0.2e1 / 0.3e1 * t1105 + t1435 / 0.3e1 + t1471) * t1403 + t1406 * (t1471 + t1097)) * t1658 + 0.2e1 * (t1264 + t1268) * t1460 - 0.2e1 * (t1269 + t1265) * t1460 + (t1670 * t1476 - t1673 * t1564 + t1674 * t1565) * t1139) * t1097 / 0.2e1) * t1407) / (t1270 * t1266 + cos(t1336) * t1642 + cos(t1332) * t1644 + t1271 * t1302 - t1285 * cos(t1392) + (-cos(t1335) - cos(t1330) - cos(t1391) + 0.2e1 * t1267 + t1359) * t1653 + t1285);
t1504 = t1351 * pkin(1) * t1097;
t1569 = t1351 * t1359;
t1578 = t1310 * t1403;
t1064 = (t1236 * t1614 + t1088 * (t1284 + pkin(2))) * t1100 * t1581 + ((t1351 * t1513 + (0.2e1 * t1079 * t1284 - (-t1569 - t1570) * t1614) * pkin(2) + t1548) * t1097 + (((pkin(1) * t1531 + t1542 + 0.2e1 * t1578) * t1311 - 0.2e1 * t1590 * t1507 - t1578 + t1215) * t1139 + (t1504 - (-pkin(2) * t1569 - t1507) * t1088) * t1652) * t1139) * t1480;
t1067 = (t1088 * t1236 * t1657 - 0.2e1 * t1504 - t1614) * t1139 * t1179;
t1094 = t1097 ^ 2;
t1124 = -(t1197 * t1350 - t1198 * t1359 - t1181) * t1351 + (t1197 * t1359 + t1198 * t1350 + t1212) * t1360;
t1157 = t1197 * t1268 + t1198 * t1236;
t1187 = rSges(3,1) * t1350 + rSges(3,2) * t1359;
t1202 = t1350 * t1554;
t1423 = rSges(3,1) * t1233 + rSges(3,2) * t1267;
t1584 = t1213 * t1302;
t1587 = t1210 * t1266;
t1602 = t1180 * t1296;
t1667 = -0.2e1 * t1079;
t1457 = t1179 * (t1124 * t1058 + t1157 * t1064 + (t1232 * t1210 + t1266 * t1648 + t1296 * t1213 + t1302 * t1649 + t1202 + t1416 + (rSges(3,2) * t1233 + (-t1267 - t1359) * rSges(3,1)) * t1654) * t1067 + (-t1181 * t1360 + t1212 * t1351) * t1094 + (t1197 * t1236 - t1198 * t1268) * t1088 ^ 2 + ((-0.2e1 * t1584 - t1602) * t1097 + (-t1188 * t1232 - 0.2e1 * t1587) * t1088 + (-t1100 * t1187 + t1423 * t1667) * t1654) * t1139);
t1679 = t1361 * t1457;
t1647 = t1188 / 0.2e1;
t1528 = t1185 * t1654;
t1527 = t1186 * t1654;
t1526 = t1187 * t1654;
t1524 = t1654 / 0.2e1;
t1523 = rSges(3,1) * t1282;
t1522 = rSges(3,1) * t1283;
t1521 = rSges(3,1) * t1284;
t1134 = t1137 ^ 2;
t1119 = t1134 * t1218 * t1647;
t1164 = -Icges(3,3) + t1200 + (-t1279 - t1523) * m(3);
t1196 = -m(3) * t1279 - Icges(3,3);
t1456 = t1303 * (t1057 * t1164 + t1062 * t1196 + t1065 * t1155 + t1092 * t1528 + t1119 + (t1589 + (t1185 + t1425) * t1524) * t1134);
t1135 = t1138 ^ 2;
t1120 = t1135 * t1224 * t1647;
t1165 = -Icges(3,3) + t1201 + (-t1279 - t1522) * m(3);
t1455 = t1304 * (t1056 * t1165 + t1063 * t1196 + t1066 * t1156 + t1093 * t1527 + t1120 + (t1588 + (t1186 + t1424) * t1524) * t1135);
t1136 = t1139 ^ 2;
t1121 = t1136 * t1232 * t1647;
t1166 = -Icges(3,3) + t1202 + (-t1279 - t1521) * m(3);
t1454 = t1305 * (t1058 * t1166 + t1064 * t1196 + t1067 * t1157 + t1094 * t1526 + t1121 + (t1587 + (t1187 + t1423) * t1524) * t1136);
t1438 = -m(2) * t1281 - Icges(2,3) - Icges(3,3);
t1050 = t1122 * t1065 + (0.2e1 * t1200 + (-t1203 - 0.2e1 * t1523) * m(3) + t1438) * t1057 + t1164 * t1062;
t1068 = t1098 * t1528 * t1669 + t1119 + (t1589 + t1604 / 0.2e1 + t1586 + t1425 * t1654) * t1134;
t1428 = t1167 * t1303 * (t1050 + t1068);
t1051 = t1123 * t1066 + (0.2e1 * t1201 + (-t1203 - 0.2e1 * t1522) * m(3) + t1438) * t1056 + t1165 * t1063;
t1069 = t1099 * t1527 * t1668 + t1120 + (t1588 + t1603 / 0.2e1 + t1585 + t1424 * t1654) * t1135;
t1427 = t1168 * t1304 * (t1051 + t1069);
t1052 = t1124 * t1067 + (0.2e1 * t1202 + (-t1203 - 0.2e1 * t1521) * m(3) + t1438) * t1058 + t1166 * t1064;
t1070 = t1100 * t1526 * t1667 + t1121 + (t1587 + t1602 / 0.2e1 + t1584 + t1423 * t1654) * t1136;
t1426 = t1169 * t1305 * (t1052 + t1070);
t1 = [t1278 * t1679 + t1277 * t1680 + t1276 * t1681 + (-t1112 * t1426 - t1110 * t1427 - t1108 * t1428 + (t1141 * t1456 + t1143 * t1455 + t1145 * t1454) * t1404) * t1407; -t1275 * t1679 - t1274 * t1680 - t1273 * t1681 + (-t1111 * t1426 - t1109 * t1427 - t1107 * t1428 + (t1140 * t1456 + t1142 * t1455 + t1144 * t1454) * t1404) * t1407; -t1352 * t1457 - t1349 * t1458 - t1346 * t1459 + ((t1052 / 0.2e1 + t1070 / 0.2e1) * t1617 + (t1051 / 0.2e1 + t1069 / 0.2e1) * t1618 + (t1050 / 0.2e1 + t1068 / 0.2e1) * t1619 + (t1152 * t1456 + t1153 * t1455 + t1154 * t1454) * t1404) * t1407;];
taucX  = t1;
