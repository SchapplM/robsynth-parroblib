% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR7V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:52
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(5,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G2A0_coriolisvec_para_pf_slag_vp2: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 03:42:38
% EndTime: 2020-08-07 03:42:59
% DurationCPUTime: 21.02s
% Computational Cost: add. (141414->824), mult. (243285->1158), div. (26139->17), fcn. (183894->159), ass. (0->538)
t1688 = (-pkin(5) - pkin(4));
t1689 = pkin(1) * pkin(2);
t1548 = (t1688 * t1689);
t1730 = 4 * t1548;
t1729 = 2 * t1688;
t1728 = m(3) * pkin(4);
t1363 = cos(qJ(1,3));
t1413 = 0.1e1 / pkin(1);
t1372 = xDP(3);
t1324 = qJ(2,3) + qJ(3,3);
t1233 = sin(t1324);
t1384 = 2 * qJ(3,3);
t1388 = 2 * qJ(2,3);
t1318 = t1384 + t1388;
t1319 = t1384 + qJ(2,3);
t1322 = t1388 + qJ(3,3);
t1325 = qJ(2,3) - qJ(3,3);
t1353 = sin(qJ(2,3));
t1385 = -2 * qJ(3,3);
t1654 = -(2 * qJ(2,3)) + qJ(1,3);
t1657 = qJ(3,3) + qJ(1,3);
t1658 = -qJ(3,3) + qJ(1,3);
t1647 = ((-sin(qJ(2,3) - t1658) + sin(qJ(2,3) + t1657)) * t1729 + (-cos(t1385 + t1654) - cos(qJ(1,3) + t1318) - 0.2e1 * t1363) * pkin(2) + (-cos(qJ(3,3) - t1654) - cos(qJ(1,3) + t1322) - cos(t1658) - cos(t1657)) * pkin(1)) / ((-sin(t1319) + t1353) * pkin(2) + (sin(t1325) - t1233) * pkin(1));
t1509 = t1372 * t1647;
t1447 = t1413 * t1509;
t1361 = cos(qJ(3,3));
t1311 = t1361 ^ 2;
t1354 = sin(qJ(1,3));
t1590 = t1363 * t1688;
t1352 = sin(qJ(3,3));
t1605 = t1352 * t1353;
t1174 = t1590 * t1605 + (t1311 - 0.1e1) * t1354 * pkin(2);
t1349 = legFrame(3,2);
t1280 = sin(t1349);
t1283 = cos(t1349);
t1362 = cos(qJ(2,3));
t1312 = t1362 ^ 2;
t1491 = t1354 * t1605;
t1699 = 0.2e1 * pkin(2);
t1424 = pkin(1) * t1491 + (t1491 * t1699 - t1590) * t1361;
t1604 = t1352 * t1361;
t1530 = pkin(2) * t1604;
t1678 = pkin(2) * t1361;
t1553 = 0.2e1 * t1678;
t1623 = (pkin(1) + t1553) * t1352;
t1288 = pkin(1) * t1361;
t1192 = t1311 * t1699 - pkin(2) + t1288;
t1628 = t1192 * t1354;
t1629 = t1192 * t1353;
t1117 = (-t1280 * t1628 + t1283 * t1623) * t1312 + (t1424 * t1280 + t1283 * t1629) * t1362 + t1174 * t1280 - t1283 * t1530;
t1373 = xDP(2);
t1215 = pkin(1) + t1678;
t1427 = pkin(2) * t1605 - t1215 * t1362;
t1177 = 0.1e1 / t1427;
t1308 = 0.1e1 / t1352;
t1614 = t1308 * t1413;
t1500 = t1177 * t1614;
t1111 = t1117 * t1373 * t1500;
t1118 = (t1280 * t1623 + t1283 * t1628) * t1312 + (t1280 * t1629 - t1424 * t1283) * t1362 - t1174 * t1283 - t1280 * t1530;
t1374 = xDP(1);
t1112 = t1118 * t1374 * t1500;
t1570 = -t1111 - t1112;
t1105 = t1447 / 0.2e1 + t1570;
t1410 = 0.1e1 / pkin(2);
t1583 = t1410 * t1413;
t1497 = t1308 * t1583;
t1168 = t1354 * t1688 + t1427 * t1363;
t1632 = t1168 * t1372;
t1165 = -t1427 * t1354 + t1590;
t1603 = t1352 * t1362;
t1529 = pkin(2) * t1603;
t1622 = t1215 * t1353;
t1180 = t1529 + t1622;
t1148 = -t1165 * t1283 - t1180 * t1280;
t1637 = t1148 * t1374;
t1147 = t1165 * t1280 - t1180 * t1283;
t1638 = t1147 * t1373;
t1708 = (t1637 / 0.2e1 + t1638 / 0.2e1 + t1632 / 0.2e1) * t1497;
t1087 = t1105 + t1708;
t1418 = t1308 * t1410 * (t1632 + t1637 + t1638);
t1108 = t1413 * t1418;
t1096 = t1108 + t1105;
t1409 = pkin(2) ^ 2;
t1090 = t1409 * t1096;
t1412 = pkin(1) ^ 2;
t1099 = t1412 * t1105;
t1254 = cos(t1324);
t1189 = 0.1e1 / (pkin(1) * t1362 + pkin(2) * t1254);
t1144 = (-t1354 * t1372 + (-t1280 * t1373 + t1283 * t1374) * t1363) * t1189;
t1383 = 3 * qJ(3,3);
t1317 = t1383 + t1388;
t1227 = sin(t1317);
t1228 = sin(t1318);
t1382 = 4 * qJ(3,3);
t1321 = t1388 + t1382;
t1230 = sin(t1321);
t1231 = sin(t1322);
t1387 = 3 * qJ(2,3);
t1248 = cos((t1382 + t1387));
t1249 = cos((t1383 + qJ(2,3)));
t1250 = cos((t1384 + t1387));
t1251 = cos(t1319);
t1252 = cos((t1387 + t1383));
t1253 = cos((t1387 + qJ(3,3)));
t1255 = cos(t1325);
t1684 = -t1412 / 0.2e1;
t1275 = t1684 + t1409;
t1686 = -t1409 / 0.2e1;
t1276 = t1412 + t1686;
t1292 = t1409 + t1412;
t1295 = sin(t1384);
t1296 = sin(t1388);
t1320 = t1385 + t1388;
t1323 = t1388 - qJ(3,3);
t1386 = 4 * qJ(2,3);
t1408 = pkin(2) * t1409;
t1411 = pkin(1) * t1412;
t1465 = t1409 * t1570;
t1474 = t1144 * t1548;
t1675 = pkin(2) * t1412;
t1478 = t1408 - 0.3e1 * t1675;
t1585 = (-pkin(2) + pkin(1)) * (pkin(1) + pkin(2));
t1700 = -0.2e1 * pkin(2);
t1479 = t1585 * t1700;
t1486 = 0.2e1 / 0.3e1 * t1583;
t1439 = t1374 * t1486;
t1440 = t1373 * t1486;
t1441 = t1372 * t1486;
t1485 = (t1147 * t1440 + t1148 * t1439 + t1168 * t1441) * t1308;
t1487 = t1585 / 0.2e1;
t1488 = t1688 * t1585;
t1513 = -4 * t1548;
t1514 = 2 * t1548;
t1521 = sin(t1383) * t1675;
t1579 = t1412 * sin(t1323);
t1524 = pkin(2) * t1579;
t1586 = t1688 * t1412;
t1536 = -0.2e1 * t1586;
t1587 = t1688 * t1409;
t1537 = 0.2e1 * t1587;
t1549 = t1413 * t1700;
t1550 = 0.3e1 * t1675;
t1344 = t1688 ^ 2;
t1220 = t1344 + t1409;
t1554 = 0.4e1 * pkin(2) * t1220;
t1563 = 0.2e1 / 0.3e1 * t1409 + t1412;
t1701 = -0.6e1 * pkin(2);
t1555 = (0.2e1 / 0.3e1 * t1344 + t1563) * t1701;
t1556 = -0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t1344 + t1563);
t1679 = pkin(1) * t1409;
t1557 = 0.5e1 * t1679;
t1558 = -0.3e1 * t1679;
t1564 = 0.4e1 / 0.3e1 * t1344 + t1412;
t1703 = -0.3e1 * pkin(1);
t1559 = (0.2e1 * t1409 + t1564) * t1703;
t1560 = (0.3e1 * t1409 + t1564) * t1703;
t1561 = 0.2e1 * pkin(1) * (0.9e1 / 0.2e1 * t1409 + t1412 + (2 * t1344));
t1573 = t1090 + t1099;
t1582 = t1411 * sin(t1320);
t1584 = t1409 * t1413;
t1643 = t1144 * t1688;
t1680 = pkin(1) * (-0.3e1 * t1409 + t1412);
t1685 = t1409 / 0.2e1;
t1698 = 0.4e1 * t1087;
t1702 = -0.2e1 * pkin(1);
t1714 = 0.4e1 * t1584;
t1715 = 0.2e1 * t1584;
t1718 = t1362 + t1250;
t1719 = cos(t1387) + cos((qJ(2,3) + t1385));
t1724 = t1251 + t1248;
t1063 = (((-t1579 / 0.2e1 + t1227 * t1685 + t1231 * t1487 + t1292 * t1352 + (t1228 + t1295 - t1296) * t1689) * t1096 - ((-t1250 / 0.4e1 + t1248 / 0.4e1 + t1251 / 0.4e1 - t1362 / 0.4e1) * pkin(2) + (t1252 / 0.4e1 - t1253 / 0.4e1 + t1249 / 0.4e1 - t1254 / 0.4e1) * pkin(1)) * t1643) * t1108 * t1549 + ((t1108 * t1249 * t1514 + t1718 * (t1099 - t1090) * t1729 + t1724 * t1096 * t1537 + ((sin((t1382 + t1386)) + t1230) * t1558 + t1478 * sin((t1386 + t1383)) + t1411 * sin(t1386) - t1408 * sin((5 * qJ(3,3) + t1386)) + sin((t1386 + qJ(3,3))) * t1550 - sin((t1384 + t1386)) * t1680 + t1227 * t1555 + t1228 * t1559 + t1231 * t1554 + t1295 * t1560 + t1296 * t1561 + t1352 * t1556 - 0.3e1 * t1521 + 0.6e1 * t1524 + t1582) * t1144 + (t1255 * t1513 + t1719 * t1536) * t1105 + ((t1105 - t1708) * t1254 - (t1253 - t1252) * t1087) * t1730) * t1144 / 0.4e1 + (-pkin(1) * (t1418 * t1714 + t1509 * t1715 + t1099 + 0.4e1 * t1465) * t1228 + t1573 * t1227 * t1700 + t1524 * t1698 - t1105 * t1230 * t1679 + t1105 * t1582 + t1096 * t1231 * t1479 + (0.3e1 * t1465 + t1099 + (0.3e1 / 0.2e1 * t1509 + 0.2e1 * t1418) * t1584) * t1295 * t1702 + ((0.4e1 / 0.5e1 * t1637 + 0.4e1 / 0.5e1 * t1638 + 0.4e1 / 0.5e1 * t1632) * t1497 + t1105) * t1296 * t1557 - 0.2e1 * t1105 * t1521 + t1352 * ((-0.2e1 / 0.3e1 * t1112 - 0.2e1 / 0.3e1 * t1111 + t1447 / 0.3e1 + t1485) * t1409 + t1412 * (t1485 + t1105)) * t1701 + 0.2e1 * (t1252 + t1254) * t1474 - 0.2e1 * (t1255 + t1253) * t1474 + (t1718 * t1488 - t1719 * t1586 + t1724 * t1587) * t1144) * t1105 / 0.2e1) * t1413) / (t1275 * cos(t1318) + cos(t1321) * t1686 + cos(t1320) * t1684 + t1276 * cos(t1388) - t1292 * cos(t1384) + (-cos(t1323) - cos(t1317) + 0.2e1 * cos(t1322) - cos(t1383) + t1361) * t1689 + t1292);
t1562 = t1412 - t1409;
t1601 = t1353 * t1688;
t1611 = t1311 * t1409;
t1644 = t1144 * t1312;
t1687 = -t1688 / 0.2e1;
t1695 = 0.2e1 * t1144;
t1069 = (t1233 * t1643 + t1096 * (t1288 + pkin(2))) * t1108 * t1614 + (((pkin(1) * t1553 + t1562 + 0.2e1 * t1611) * t1644 - 0.2e1 * (t1096 * t1687 + t1144 * t1622) * t1529 - t1144 * t1611 + t1096 * t1601 * t1678 + t1144 * t1220) * t1144 + (pkin(1) * t1601 * t1695 + (0.2e1 * t1087 * t1288 - (-t1353 * t1361 - t1603) * t1643) * pkin(2) + t1573) * t1105) * t1497;
t1683 = pkin(1) * t1105;
t1075 = (t1096 * t1233 * t1700 - 0.2e1 * t1353 * t1683 - t1643) * t1144 * t1189;
t1093 = t1096 ^ 2;
t1102 = t1105 ^ 2;
t1209 = (mrSges(3,3) + t1728) * pkin(1) - Ifges(2,5);
t1278 = pkin(4) * mrSges(3,2) - Ifges(3,6);
t1279 = mrSges(3,1) * pkin(4) - Ifges(3,5);
t1617 = t1279 * t1352;
t1456 = -t1278 * t1361 - t1617;
t1567 = t1352 * t1278 - t1279 * t1361;
t1153 = -(-t1209 + t1567) * t1353 - (Ifges(2,6) + t1456) * t1362;
t1156 = -t1567 * t1353 - t1456 * t1362;
t1346 = Ifges(3,2) - Ifges(3,1);
t1381 = m(3) * t1412;
t1210 = -Ifges(2,1) + Ifges(2,2) + t1381 - t1346;
t1348 = 0.2e1 * t1346;
t1211 = t1348 * t1311;
t1668 = Ifges(3,4) * t1352;
t1224 = 0.4e1 * t1668;
t1371 = pkin(1) * mrSges(3,1);
t1306 = 0.2e1 * t1371;
t1665 = t1352 * mrSges(3,2);
t1547 = pkin(1) * t1665;
t1162 = t1211 + (t1224 + t1306) * t1361 - 0.2e1 * t1547 + t1210;
t1674 = mrSges(3,1) * t1352;
t1221 = pkin(1) * t1674;
t1286 = -Ifges(3,2) / 0.2e1 + Ifges(3,1) / 0.2e1;
t1287 = -Ifges(3,4) / 0.2e1 + Ifges(2,4) / 0.2e1;
t1370 = pkin(1) * mrSges(3,2);
t1291 = -t1370 / 0.2e1;
t1406 = 0.2e1 * Ifges(3,4);
t1431 = -Ifges(2,1) - Ifges(3,2) - Ifges(1,3) + (-0.2e1 * mrSges(3,3) - t1728) * pkin(4);
t1608 = t1346 * t1352;
t1512 = t1096 * t1608;
t1690 = -pkin(1) / 0.2e1;
t1518 = t1087 * t1690;
t1653 = t1096 * t1311;
t1540 = -0.4e1 * t1653;
t1544 = t1371 / 0.2e1;
t1602 = t1353 * t1362;
t1671 = Ifges(3,4) * t1311;
t1692 = -0.2e1 * t1210;
t1347 = Ifges(3,4) - Ifges(2,4);
t1707 = t1347 + t1221;
t1471 = t1189 * ((-t1162 * t1312 - 0.4e1 * (t1671 + (t1286 * t1352 + t1291) * t1361 - t1221 / 0.2e1 + t1287) * t1602 + t1346 * t1311 + t1604 * t1406 + t1431) * t1075 + t1153 * t1063 + t1156 * t1069 + 0.8e1 * ((-t1512 / 0.2e1 + mrSges(3,2) * t1518) * t1361 + t1518 * t1674 + t1287 * t1105 + (t1653 - t1108 / 0.2e1) * Ifges(3,4)) * t1644 + (-t1102 * t1209 + t1567 * t1093 + (-0.8e1 * (t1087 * t1544 + t1096 * t1668) * t1361 + t1547 * t1698 + t1105 * t1692 + (0.2e1 * t1108 + t1540) * t1346) * t1353 * t1144) * t1362 + Ifges(3,4) * t1144 * t1540 + (t1093 * t1278 * t1353 + (mrSges(3,2) * t1683 + t1512) * t1695) * t1361 + (-Ifges(2,6) * t1102 + t1093 * t1617) * t1353 + (Ifges(3,4) * t1108 + t1707 * t1105) * t1695);
t1727 = t1363 * t1471;
t1366 = cos(qJ(1,2));
t1333 = qJ(2,2) + qJ(3,2);
t1240 = sin(t1333);
t1392 = 2 * qJ(3,2);
t1327 = t1392 + qJ(2,2);
t1396 = 2 * qJ(2,2);
t1329 = t1396 + t1392;
t1330 = t1396 + qJ(3,2);
t1334 = qJ(2,2) - qJ(3,2);
t1356 = sin(qJ(2,2));
t1393 = -2 * qJ(3,2);
t1655 = qJ(1,2) - (2 * qJ(2,2));
t1659 = qJ(3,2) + qJ(1,2);
t1660 = -qJ(3,2) + qJ(1,2);
t1646 = ((-sin(qJ(2,2) - t1660) + sin(qJ(2,2) + t1659)) * t1729 + (-cos(t1393 + t1655) - cos(qJ(1,2) + t1329) - 0.2e1 * t1366) * pkin(2) + (-cos(qJ(3,2) - t1655) - cos(qJ(1,2) + t1330) - cos(t1660) - cos(t1659)) * pkin(1)) / ((-sin(t1327) + t1356) * pkin(2) + (sin(t1334) - t1240) * pkin(1));
t1508 = t1372 * t1646;
t1446 = t1413 * t1508;
t1364 = cos(qJ(3,2));
t1313 = t1364 ^ 2;
t1357 = sin(qJ(1,2));
t1589 = t1366 * t1688;
t1355 = sin(qJ(3,2));
t1600 = t1355 * t1356;
t1175 = t1589 * t1600 + (t1313 - 0.1e1) * t1357 * pkin(2);
t1350 = legFrame(2,2);
t1281 = sin(t1350);
t1284 = cos(t1350);
t1365 = cos(qJ(2,2));
t1314 = t1365 ^ 2;
t1490 = t1357 * t1600;
t1423 = pkin(1) * t1490 + (t1490 * t1699 - t1589) * t1364;
t1599 = t1355 * t1364;
t1528 = pkin(2) * t1599;
t1677 = pkin(2) * t1364;
t1552 = 0.2e1 * t1677;
t1621 = (pkin(1) + t1552) * t1355;
t1289 = pkin(1) * t1364;
t1193 = t1313 * t1699 - pkin(2) + t1289;
t1626 = t1193 * t1357;
t1627 = t1193 * t1356;
t1119 = (-t1281 * t1626 + t1284 * t1621) * t1314 + (t1423 * t1281 + t1284 * t1627) * t1365 + t1175 * t1281 - t1284 * t1528;
t1217 = pkin(1) + t1677;
t1426 = pkin(2) * t1600 - t1217 * t1365;
t1178 = 0.1e1 / t1426;
t1309 = 0.1e1 / t1355;
t1613 = t1309 * t1413;
t1499 = t1178 * t1613;
t1113 = t1119 * t1373 * t1499;
t1120 = (t1281 * t1621 + t1284 * t1626) * t1314 + (t1281 * t1627 - t1423 * t1284) * t1365 - t1175 * t1284 - t1281 * t1528;
t1114 = t1120 * t1374 * t1499;
t1569 = -t1113 - t1114;
t1106 = t1446 / 0.2e1 + t1569;
t1496 = t1309 * t1583;
t1169 = t1357 * t1688 + t1426 * t1366;
t1631 = t1169 * t1372;
t1166 = -t1426 * t1357 + t1589;
t1598 = t1355 * t1365;
t1527 = pkin(2) * t1598;
t1620 = t1217 * t1356;
t1181 = t1527 + t1620;
t1150 = -t1166 * t1284 - t1181 * t1281;
t1635 = t1150 * t1374;
t1149 = t1166 * t1281 - t1181 * t1284;
t1636 = t1149 * t1373;
t1709 = (t1635 / 0.2e1 + t1636 / 0.2e1 + t1631 / 0.2e1) * t1496;
t1088 = t1106 + t1709;
t1417 = t1309 * t1410 * (t1631 + t1635 + t1636);
t1109 = t1413 * t1417;
t1097 = t1109 + t1106;
t1091 = t1409 * t1097;
t1100 = t1412 * t1106;
t1264 = cos(t1333);
t1190 = 0.1e1 / (pkin(1) * t1365 + pkin(2) * t1264);
t1145 = (-t1357 * t1372 + (-t1281 * t1373 + t1284 * t1374) * t1366) * t1190;
t1391 = 3 * qJ(3,2);
t1326 = t1391 + t1396;
t1234 = sin(t1326);
t1390 = 4 * qJ(3,2);
t1328 = t1396 + t1390;
t1235 = sin(t1328);
t1236 = sin(t1329);
t1237 = sin(t1330);
t1257 = cos((t1391 + qJ(2,2)));
t1395 = 3 * qJ(2,2);
t1258 = cos((t1392 + t1395));
t1259 = cos(t1327);
t1260 = cos((qJ(3,2) + t1395));
t1262 = cos((t1395 + t1390));
t1263 = cos((t1395 + t1391));
t1265 = cos(t1334);
t1298 = sin(t1392);
t1299 = sin(t1396);
t1331 = t1396 - qJ(3,2);
t1332 = t1396 + t1393;
t1394 = 4 * qJ(2,2);
t1464 = t1409 * t1569;
t1473 = t1145 * t1548;
t1484 = (t1149 * t1440 + t1150 * t1439 + t1169 * t1441) * t1309;
t1520 = sin(t1391) * t1675;
t1578 = t1412 * sin(t1331);
t1523 = pkin(2) * t1578;
t1572 = t1091 + t1100;
t1581 = t1411 * sin(t1332);
t1641 = t1145 * t1688;
t1697 = 0.4e1 * t1088;
t1717 = t1365 + t1258;
t1722 = t1262 + t1259;
t1723 = cos((t1393 + qJ(2,2))) + cos(t1395);
t1065 = (((-t1578 / 0.2e1 + t1234 * t1685 + t1237 * t1487 + t1292 * t1355 + (t1236 + t1298 - t1299) * t1689) * t1097 - ((t1262 / 0.4e1 - t1258 / 0.4e1 + t1259 / 0.4e1 - t1365 / 0.4e1) * pkin(2) + (t1263 / 0.4e1 - t1260 / 0.4e1 + t1257 / 0.4e1 - t1264 / 0.4e1) * pkin(1)) * t1641) * t1109 * t1549 + ((t1109 * t1257 * t1514 + t1717 * (t1100 - t1091) * t1729 + t1722 * t1097 * t1537 + ((sin((t1394 + t1390)) + t1235) * t1558 + t1478 * sin((t1391 + t1394)) + t1411 * sin(t1394) - t1408 * sin((5 * qJ(3,2) + t1394)) + sin((t1394 + qJ(3,2))) * t1550 - sin((t1394 + t1392)) * t1680 + t1234 * t1555 + t1236 * t1559 + t1237 * t1554 + t1298 * t1560 + t1299 * t1561 + t1355 * t1556 - 0.3e1 * t1520 + 0.6e1 * t1523 + t1581) * t1145 + (t1265 * t1513 + t1723 * t1536) * t1106 + ((t1106 - t1709) * t1264 - (-t1263 + t1260) * t1088) * t1730) * t1145 / 0.4e1 + (-pkin(1) * (t1417 * t1714 + t1508 * t1715 + t1100 + 0.4e1 * t1464) * t1236 + t1572 * t1234 * t1700 + t1523 * t1697 + t1106 * t1581 - t1106 * t1235 * t1679 + t1097 * t1237 * t1479 + (0.3e1 * t1464 + t1100 + (0.3e1 / 0.2e1 * t1508 + 0.2e1 * t1417) * t1584) * t1298 * t1702 + ((0.4e1 / 0.5e1 * t1635 + 0.4e1 / 0.5e1 * t1636 + 0.4e1 / 0.5e1 * t1631) * t1496 + t1106) * t1299 * t1557 - 0.2e1 * t1106 * t1520 + t1355 * ((-0.2e1 / 0.3e1 * t1114 - 0.2e1 / 0.3e1 * t1113 + t1446 / 0.3e1 + t1484) * t1409 + t1412 * (t1484 + t1106)) * t1701 + 0.2e1 * (t1263 + t1264) * t1473 - 0.2e1 * (t1265 + t1260) * t1473 + (t1717 * t1488 - t1723 * t1586 + t1722 * t1587) * t1145) * t1106 / 0.2e1) * t1413) / (t1275 * cos(t1329) + cos(t1332) * t1684 + cos(t1328) * t1686 + t1276 * cos(t1396) - t1292 * cos(t1392) + (-cos(t1331) - cos(t1326) + 0.2e1 * cos(t1330) - cos(t1391) + t1364) * t1689 + t1292);
t1596 = t1356 * t1688;
t1610 = t1313 * t1409;
t1642 = t1145 * t1314;
t1694 = 0.2e1 * t1145;
t1070 = (t1240 * t1641 + t1097 * (t1289 + pkin(2))) * t1109 * t1613 + (((pkin(1) * t1552 + t1562 + 0.2e1 * t1610) * t1642 - 0.2e1 * (t1097 * t1687 + t1145 * t1620) * t1527 - t1145 * t1610 + t1097 * t1596 * t1677 + t1145 * t1220) * t1145 + (pkin(1) * t1596 * t1694 + (0.2e1 * t1088 * t1289 - (-t1356 * t1364 - t1598) * t1641) * pkin(2) + t1572) * t1106) * t1496;
t1682 = pkin(1) * t1106;
t1076 = (t1097 * t1240 * t1700 - 0.2e1 * t1356 * t1682 - t1641) * t1145 * t1190;
t1094 = t1097 ^ 2;
t1103 = t1106 ^ 2;
t1616 = t1279 * t1355;
t1455 = -t1278 * t1364 - t1616;
t1566 = t1355 * t1278 - t1279 * t1364;
t1154 = -(-t1209 + t1566) * t1356 - (Ifges(2,6) + t1455) * t1365;
t1157 = -t1566 * t1356 - t1455 * t1365;
t1212 = t1348 * t1313;
t1667 = Ifges(3,4) * t1355;
t1225 = 0.4e1 * t1667;
t1664 = t1355 * mrSges(3,2);
t1546 = pkin(1) * t1664;
t1163 = t1212 + (t1225 + t1306) * t1364 - 0.2e1 * t1546 + t1210;
t1673 = mrSges(3,1) * t1355;
t1222 = pkin(1) * t1673;
t1607 = t1346 * t1355;
t1511 = t1097 * t1607;
t1517 = t1088 * t1690;
t1652 = t1097 * t1313;
t1539 = -0.4e1 * t1652;
t1597 = t1356 * t1365;
t1670 = Ifges(3,4) * t1313;
t1706 = t1347 + t1222;
t1470 = t1190 * ((-t1163 * t1314 - 0.4e1 * (t1670 + (t1286 * t1355 + t1291) * t1364 - t1222 / 0.2e1 + t1287) * t1597 + t1346 * t1313 + t1599 * t1406 + t1431) * t1076 + t1154 * t1065 + t1157 * t1070 + 0.8e1 * ((-t1511 / 0.2e1 + mrSges(3,2) * t1517) * t1364 + t1517 * t1673 + t1287 * t1106 + (t1652 - t1109 / 0.2e1) * Ifges(3,4)) * t1642 + (-t1103 * t1209 + t1566 * t1094 + (-0.8e1 * (t1088 * t1544 + t1097 * t1667) * t1364 + t1546 * t1697 + t1106 * t1692 + (0.2e1 * t1109 + t1539) * t1346) * t1356 * t1145) * t1365 + Ifges(3,4) * t1145 * t1539 + (t1094 * t1278 * t1356 + (mrSges(3,2) * t1682 + t1511) * t1694) * t1364 + (-Ifges(2,6) * t1103 + t1094 * t1616) * t1356 + (Ifges(3,4) * t1109 + t1706 * t1106) * t1694);
t1726 = t1366 * t1470;
t1369 = cos(qJ(1,1));
t1342 = qJ(2,1) + qJ(3,1);
t1247 = sin(t1342);
t1400 = 2 * qJ(3,1);
t1404 = 2 * qJ(2,1);
t1336 = t1400 + t1404;
t1337 = t1400 + qJ(2,1);
t1340 = t1404 + qJ(3,1);
t1343 = qJ(2,1) - qJ(3,1);
t1359 = sin(qJ(2,1));
t1401 = -2 * qJ(3,1);
t1656 = qJ(1,1) - (2 * qJ(2,1));
t1661 = qJ(3,1) + qJ(1,1);
t1662 = -qJ(3,1) + qJ(1,1);
t1645 = ((-sin(qJ(2,1) - t1662) + sin(qJ(2,1) + t1661)) * t1729 + (-cos(t1401 + t1656) - cos(qJ(1,1) + t1336) - 0.2e1 * t1369) * pkin(2) + (-cos(qJ(3,1) - t1656) - cos(qJ(1,1) + t1340) - cos(t1662) - cos(t1661)) * pkin(1)) / ((-sin(t1337) + t1359) * pkin(2) + (sin(t1343) - t1247) * pkin(1));
t1507 = t1372 * t1645;
t1445 = t1413 * t1507;
t1367 = cos(qJ(3,1));
t1315 = t1367 ^ 2;
t1360 = sin(qJ(1,1));
t1588 = t1369 * t1688;
t1358 = sin(qJ(3,1));
t1595 = t1358 * t1359;
t1176 = t1588 * t1595 + (t1315 - 0.1e1) * t1360 * pkin(2);
t1351 = legFrame(1,2);
t1282 = sin(t1351);
t1285 = cos(t1351);
t1368 = cos(qJ(2,1));
t1316 = t1368 ^ 2;
t1489 = t1360 * t1595;
t1422 = pkin(1) * t1489 + (t1489 * t1699 - t1588) * t1367;
t1594 = t1358 * t1367;
t1526 = pkin(2) * t1594;
t1676 = pkin(2) * t1367;
t1551 = 0.2e1 * t1676;
t1619 = (pkin(1) + t1551) * t1358;
t1290 = pkin(1) * t1367;
t1194 = t1315 * t1699 - pkin(2) + t1290;
t1624 = t1194 * t1360;
t1625 = t1194 * t1359;
t1121 = (-t1282 * t1624 + t1285 * t1619) * t1316 + (t1422 * t1282 + t1285 * t1625) * t1368 + t1176 * t1282 - t1285 * t1526;
t1219 = pkin(1) + t1676;
t1425 = pkin(2) * t1595 - t1219 * t1368;
t1179 = 0.1e1 / t1425;
t1310 = 0.1e1 / t1358;
t1612 = t1310 * t1413;
t1498 = t1179 * t1612;
t1115 = t1121 * t1373 * t1498;
t1122 = (t1282 * t1619 + t1285 * t1624) * t1316 + (t1282 * t1625 - t1422 * t1285) * t1368 - t1176 * t1285 - t1282 * t1526;
t1116 = t1122 * t1374 * t1498;
t1568 = -t1115 - t1116;
t1107 = t1445 / 0.2e1 + t1568;
t1495 = t1310 * t1583;
t1170 = t1360 * t1688 + t1425 * t1369;
t1630 = t1170 * t1372;
t1167 = -t1425 * t1360 + t1588;
t1593 = t1358 * t1368;
t1525 = pkin(2) * t1593;
t1618 = t1219 * t1359;
t1182 = t1525 + t1618;
t1152 = -t1167 * t1285 - t1182 * t1282;
t1633 = t1152 * t1374;
t1151 = t1167 * t1282 - t1182 * t1285;
t1634 = t1151 * t1373;
t1710 = (t1633 / 0.2e1 + t1634 / 0.2e1 + t1630 / 0.2e1) * t1495;
t1089 = t1107 + t1710;
t1416 = t1310 * t1410 * (t1630 + t1633 + t1634);
t1110 = t1413 * t1416;
t1098 = t1110 + t1107;
t1092 = t1409 * t1098;
t1101 = t1412 * t1107;
t1272 = cos(t1342);
t1191 = 0.1e1 / (pkin(1) * t1368 + pkin(2) * t1272);
t1146 = (-t1360 * t1372 + (-t1282 * t1373 + t1285 * t1374) * t1369) * t1191;
t1399 = 3 * qJ(3,1);
t1335 = t1399 + t1404;
t1241 = sin(t1335);
t1242 = sin(t1336);
t1398 = 4 * qJ(3,1);
t1339 = t1404 + t1398;
t1244 = sin(t1339);
t1245 = sin(t1340);
t1403 = 3 * qJ(2,1);
t1266 = cos((t1399 + t1403));
t1267 = cos((t1399 + qJ(2,1)));
t1268 = cos(t1337);
t1269 = cos((qJ(3,1) + t1403));
t1270 = cos((t1403 + t1398));
t1271 = cos((t1403 + t1400));
t1273 = cos(t1343);
t1301 = sin(t1400);
t1302 = sin(t1404);
t1338 = t1401 + t1404;
t1341 = t1404 - qJ(3,1);
t1402 = 4 * qJ(2,1);
t1463 = t1409 * t1568;
t1472 = t1146 * t1548;
t1483 = (t1151 * t1440 + t1152 * t1439 + t1170 * t1441) * t1310;
t1519 = sin(t1399) * t1675;
t1577 = t1412 * sin(t1341);
t1522 = pkin(2) * t1577;
t1571 = t1092 + t1101;
t1580 = t1411 * sin(t1338);
t1639 = t1146 * t1688;
t1696 = 0.4e1 * t1089;
t1716 = t1368 + t1271;
t1720 = cos((qJ(2,1) + t1401)) + cos(t1403);
t1721 = t1270 + t1268;
t1064 = (((-t1577 / 0.2e1 + t1241 * t1685 + t1245 * t1487 + t1292 * t1358 + (t1242 + t1301 - t1302) * t1689) * t1098 - ((-t1271 / 0.4e1 + t1270 / 0.4e1 + t1268 / 0.4e1 - t1368 / 0.4e1) * pkin(2) + (t1266 / 0.4e1 - t1269 / 0.4e1 + t1267 / 0.4e1 - t1272 / 0.4e1) * pkin(1)) * t1639) * t1110 * t1549 + ((t1110 * t1267 * t1514 + t1716 * (t1101 - t1092) * t1729 + t1721 * t1098 * t1537 + ((sin((t1402 + t1398)) + t1244) * t1558 + t1478 * sin((t1399 + t1402)) + t1411 * sin(t1402) - t1408 * sin((t1402 + 5 * qJ(3,1))) + sin((t1402 + qJ(3,1))) * t1550 - sin((t1402 + t1400)) * t1680 + t1241 * t1555 + t1242 * t1559 + t1245 * t1554 + t1301 * t1560 + t1302 * t1561 + t1358 * t1556 - 0.3e1 * t1519 + 0.6e1 * t1522 + t1580) * t1146 + (t1273 * t1513 + t1720 * t1536) * t1107 + ((t1107 - t1710) * t1272 - (-t1266 + t1269) * t1089) * t1730) * t1146 / 0.4e1 + (-pkin(1) * (t1416 * t1714 + t1507 * t1715 + t1101 + 0.4e1 * t1463) * t1242 + t1571 * t1241 * t1700 + t1522 * t1696 - t1107 * t1244 * t1679 + t1107 * t1580 + t1098 * t1245 * t1479 + (0.3e1 * t1463 + t1101 + (0.3e1 / 0.2e1 * t1507 + 0.2e1 * t1416) * t1584) * t1301 * t1702 + ((0.4e1 / 0.5e1 * t1633 + 0.4e1 / 0.5e1 * t1634 + 0.4e1 / 0.5e1 * t1630) * t1495 + t1107) * t1302 * t1557 - 0.2e1 * t1107 * t1519 + t1358 * ((-0.2e1 / 0.3e1 * t1116 - 0.2e1 / 0.3e1 * t1115 + t1445 / 0.3e1 + t1483) * t1409 + t1412 * (t1483 + t1107)) * t1701 + 0.2e1 * (t1266 + t1272) * t1472 - 0.2e1 * (t1273 + t1269) * t1472 + (t1716 * t1488 - t1720 * t1586 + t1721 * t1587) * t1146) * t1107 / 0.2e1) * t1413) / (t1275 * cos(t1336) + cos(t1339) * t1686 + cos(t1338) * t1684 + t1276 * cos(t1404) - t1292 * cos(t1400) + (-cos(t1341) - cos(t1335) + 0.2e1 * cos(t1340) - cos(t1399) + t1367) * t1689 + t1292);
t1591 = t1359 * t1688;
t1609 = t1315 * t1409;
t1640 = t1146 * t1316;
t1693 = 0.2e1 * t1146;
t1071 = (t1247 * t1639 + t1098 * (t1290 + pkin(2))) * t1110 * t1612 + (((pkin(1) * t1551 + t1562 + 0.2e1 * t1609) * t1640 - 0.2e1 * (t1098 * t1687 + t1146 * t1618) * t1525 - t1146 * t1609 + t1098 * t1591 * t1676 + t1146 * t1220) * t1146 + (pkin(1) * t1591 * t1693 + (0.2e1 * t1089 * t1290 - (-t1359 * t1367 - t1593) * t1639) * pkin(2) + t1571) * t1107) * t1495;
t1681 = pkin(1) * t1107;
t1077 = (t1098 * t1247 * t1700 - 0.2e1 * t1359 * t1681 - t1639) * t1146 * t1191;
t1095 = t1098 ^ 2;
t1104 = t1107 ^ 2;
t1615 = t1279 * t1358;
t1454 = -t1278 * t1367 - t1615;
t1565 = t1358 * t1278 - t1279 * t1367;
t1155 = -(-t1209 + t1565) * t1359 - (Ifges(2,6) + t1454) * t1368;
t1158 = -t1565 * t1359 - t1454 * t1368;
t1213 = t1348 * t1315;
t1666 = Ifges(3,4) * t1358;
t1226 = 0.4e1 * t1666;
t1663 = t1358 * mrSges(3,2);
t1545 = pkin(1) * t1663;
t1164 = t1213 + (t1226 + t1306) * t1367 - 0.2e1 * t1545 + t1210;
t1672 = mrSges(3,1) * t1358;
t1223 = pkin(1) * t1672;
t1606 = t1346 * t1358;
t1510 = t1098 * t1606;
t1516 = t1089 * t1690;
t1651 = t1098 * t1315;
t1538 = -0.4e1 * t1651;
t1592 = t1359 * t1368;
t1669 = Ifges(3,4) * t1315;
t1705 = t1347 + t1223;
t1469 = t1191 * ((-t1164 * t1316 - 0.4e1 * (t1669 + (t1286 * t1358 + t1291) * t1367 - t1223 / 0.2e1 + t1287) * t1592 + t1346 * t1315 + t1594 * t1406 + t1431) * t1077 + t1155 * t1064 + t1158 * t1071 + 0.8e1 * ((-t1510 / 0.2e1 + mrSges(3,2) * t1516) * t1367 + t1516 * t1672 + t1287 * t1107 + (t1651 - t1110 / 0.2e1) * Ifges(3,4)) * t1640 + (-t1104 * t1209 + t1565 * t1095 + (-0.8e1 * (t1089 * t1544 + t1098 * t1666) * t1367 + t1545 * t1696 + t1107 * t1692 + (0.2e1 * t1110 + t1538) * t1346) * t1359 * t1146) * t1368 + Ifges(3,4) * t1146 * t1538 + (t1095 * t1278 * t1359 + (mrSges(3,2) * t1681 + t1510) * t1693) * t1367 + (-Ifges(2,6) * t1104 + t1095 * t1615) * t1359 + (Ifges(3,4) * t1110 + t1705 * t1107) * t1693);
t1725 = t1369 * t1469;
t1713 = (mrSges(3,2) * t1367 + t1672) * pkin(1);
t1712 = (mrSges(3,2) * t1364 + t1673) * pkin(1);
t1711 = (mrSges(3,2) * t1361 + t1674) * pkin(1);
t1535 = -Ifges(2,3) - Ifges(3,3) - t1381;
t1494 = t1346 * t1604;
t1493 = t1346 * t1599;
t1492 = t1346 * t1594;
t1141 = t1144 ^ 2;
t1129 = 0.2e1 * t1141 * t1671;
t1430 = (-mrSges(3,1) * t1361 + t1665) * pkin(1);
t1186 = -Ifges(3,3) + t1430;
t1468 = t1308 * (-Ifges(3,3) * t1069 + t1063 * t1186 + t1075 * t1156 + t1129 + t1102 * t1711 + ((-0.4e1 * t1671 + (t1348 * t1352 + t1370) * t1361 + t1221 + t1406) * t1312 + (t1211 + (t1224 + t1371) * t1361 - t1547 - t1346) * t1602 - t1494 - Ifges(3,4)) * t1141);
t1142 = t1145 ^ 2;
t1130 = 0.2e1 * t1142 * t1670;
t1429 = (-mrSges(3,1) * t1364 + t1664) * pkin(1);
t1187 = -Ifges(3,3) + t1429;
t1467 = t1309 * (-Ifges(3,3) * t1070 + t1065 * t1187 + t1076 * t1157 + t1130 + t1103 * t1712 + ((-0.4e1 * t1670 + (t1348 * t1355 + t1370) * t1364 + t1222 + t1406) * t1314 + (t1212 + (t1225 + t1371) * t1364 - t1546 - t1346) * t1597 - t1493 - Ifges(3,4)) * t1142);
t1143 = t1146 ^ 2;
t1131 = 0.2e1 * t1143 * t1669;
t1428 = (-mrSges(3,1) * t1367 + t1663) * pkin(1);
t1188 = -Ifges(3,3) + t1428;
t1466 = t1310 * (-Ifges(3,3) * t1071 + t1064 * t1188 + t1077 * t1158 + t1131 + t1104 * t1713 + ((-0.4e1 * t1669 + (t1348 * t1358 + t1370) * t1367 + t1223 + t1406) * t1316 + (t1213 + (t1226 + t1371) * t1367 - t1545 - t1346) * t1592 - t1492 - Ifges(3,4)) * t1143);
t1057 = t1153 * t1075 + (0.2e1 * t1430 + t1535) * t1063 + t1186 * t1069;
t1072 = t1129 - (t1141 + (0.2e1 * t1105 + t1108) * t1108) * t1711 + (0.2e1 * (-0.2e1 * t1671 + (t1370 + t1608) * t1361 + t1707) * t1312 + t1162 * t1602 - t1494 - t1347) * t1141;
t1438 = t1177 * t1308 * (t1057 + t1072);
t1058 = t1154 * t1076 + (0.2e1 * t1429 + t1535) * t1065 + t1187 * t1070;
t1073 = t1130 - (t1142 + (0.2e1 * t1106 + t1109) * t1109) * t1712 + (0.2e1 * (-0.2e1 * t1670 + (t1370 + t1607) * t1364 + t1706) * t1314 + t1163 * t1597 - t1493 - t1347) * t1142;
t1437 = t1178 * t1309 * (t1058 + t1073);
t1059 = t1155 * t1077 + (0.2e1 * t1428 + t1535) * t1064 + t1188 * t1071;
t1074 = t1131 - (t1143 + (0.2e1 * t1107 + t1110) * t1110) * t1713 + (0.2e1 * (-0.2e1 * t1669 + (t1370 + t1606) * t1367 + t1705) * t1316 + t1164 * t1592 - t1492 - t1347) * t1143;
t1436 = t1179 * t1310 * (t1059 + t1074);
t1 = [t1285 * t1725 + t1284 * t1726 + t1283 * t1727 + (-t1122 * t1436 - t1120 * t1437 - t1118 * t1438 + (t1148 * t1468 + t1150 * t1467 + t1152 * t1466) * t1410) * t1413; -t1282 * t1725 - t1281 * t1726 - t1280 * t1727 + (-t1121 * t1436 - t1119 * t1437 - t1117 * t1438 + (t1147 * t1468 + t1149 * t1467 + t1151 * t1466) * t1410) * t1413; -t1360 * t1469 - t1357 * t1470 - t1354 * t1471 + ((t1059 / 0.2e1 + t1074 / 0.2e1) * t1645 + (t1058 / 0.2e1 + t1073 / 0.2e1) * t1646 + (t1057 / 0.2e1 + t1072 / 0.2e1) * t1647 + (t1168 * t1468 + t1169 * t1467 + t1170 * t1466) * t1410) * t1413;];
taucX  = t1;
