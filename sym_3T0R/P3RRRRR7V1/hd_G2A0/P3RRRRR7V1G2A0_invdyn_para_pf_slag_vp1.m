% Calculate vector of inverse dynamics forces for parallel robot
% P3RRRRR7V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% tauX [3x1]
%   forces of inverse dynamics (contains inertial, gravitational coriolis and centrifugal forces)
%   in platform coordinates xP

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 03:52
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(5,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G2A0_invdyn_para_pf_slag_vp1: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 03:41:07
% EndTime: 2020-08-07 03:41:30
% DurationCPUTime: 24.21s
% Computational Cost: add. (137856->968), mult. (236610->1407), div. (24864->17), fcn. (175260->159), ass. (0->614)
t719 = (-pkin(5) - pkin(4));
t720 = pkin(1) * pkin(2);
t551 = (t719 * t720);
t751 = 4 * t551;
t750 = 2 * t719;
t366 = rSges(3,3) + pkin(4);
t705 = (m(3) * t366);
t717 = (m(2) * rSges(2,3));
t473 = m(1) * rSges(1,2) - t705 - t717;
t383 = 2 * qJ(3,3);
t314 = t383 + qJ(2,3);
t240 = cos(t314);
t381 = 4 * qJ(3,3);
t386 = 3 * qJ(2,3);
t242 = cos((t386 + t381));
t749 = t242 + t240;
t392 = -2 * qJ(3,2);
t394 = 3 * qJ(2,2);
t748 = cos((t392 + qJ(2,2))) + cos(t394);
t391 = 2 * qJ(3,2);
t324 = t391 + qJ(2,2);
t251 = cos(t324);
t389 = 4 * qJ(3,2);
t253 = cos((t394 + t389));
t747 = t253 + t251;
t397 = 4 * qJ(3,1);
t402 = 3 * qJ(2,1);
t260 = cos((t397 + t402));
t399 = 2 * qJ(3,1);
t332 = t399 + qJ(2,1);
t263 = cos(t332);
t746 = t263 + t260;
t400 = -2 * qJ(3,1);
t745 = cos((t400 + qJ(2,1))) + cos(t402);
t384 = -2 * qJ(3,3);
t744 = cos(t386) + cos((qJ(2,3) + t384));
t243 = cos((t386 + t383));
t358 = cos(qJ(2,3));
t743 = t358 + t243;
t255 = cos((t394 + t391));
t361 = cos(qJ(2,2));
t742 = t361 + t255;
t262 = cos((t399 + t402));
t364 = cos(qJ(2,1));
t741 = t364 + t262;
t740 = 2 * pkin(1);
t726 = -2 * pkin(2);
t410 = pkin(2) ^ 2;
t414 = 1 / pkin(1);
t583 = t410 * t414;
t739 = 2 * t583;
t738 = 4 * t583;
t373 = xDP(3);
t320 = qJ(2,3) + qJ(3,3);
t223 = sin(t320);
t387 = 2 * qJ(2,3);
t316 = t387 + t383;
t317 = t387 + qJ(3,3);
t321 = qJ(2,3) - qJ(3,3);
t349 = sin(qJ(2,3));
t359 = cos(qJ(1,3));
t388 = -2 * qJ(2,3);
t569 = qJ(3,3) + qJ(1,3);
t570 = -qJ(3,3) + qJ(1,3);
t674 = ((-sin(qJ(2,3) - t570) + sin(qJ(2,3) + t569)) * t750 + (-cos(t388 + t384 + qJ(1,3)) - cos(qJ(1,3) + t316) - 0.2e1 * t359) * pkin(2) + (-cos(t388 + t570) - cos(qJ(1,3) + t317) - cos(t570) - cos(t569)) * pkin(1)) / ((-sin(t314) + t349) * pkin(2) + (sin(t321) - t223) * pkin(1));
t489 = t674 / 0.2e1;
t443 = t414 * t489;
t374 = xDP(2);
t357 = cos(qJ(3,3));
t702 = pkin(2) * t357;
t203 = pkin(1) + t702;
t348 = sin(qJ(3,3));
t598 = t348 * t349;
t430 = pkin(2) * t598 - t203 * t358;
t148 = 0.1e1 / t430;
t304 = 0.1e1 / t348;
t606 = t304 * t414;
t511 = t148 * t606;
t307 = t357 ^ 2;
t350 = sin(qJ(1,3));
t589 = t359 * t719;
t142 = t589 * t598 + (t307 - 0.1e1) * t350 * pkin(2);
t342 = legFrame(3,2);
t274 = sin(t342);
t277 = cos(t342);
t308 = t358 ^ 2;
t499 = t350 * t598;
t725 = 2 * pkin(2);
t426 = pkin(1) * t499 + (t499 * t725 - t589) * t357;
t535 = t348 * t702;
t556 = 0.2e1 * t702;
t619 = (pkin(1) + t556) * t348;
t283 = pkin(1) * t357;
t178 = t307 * t725 - pkin(2) + t283;
t625 = t178 * t350;
t626 = t178 * t349;
t79 = (-t274 * t625 + t277 * t619) * t308 + (t274 * t426 + t277 * t626) * t358 + t142 * t274 - t277 * t535;
t459 = t79 * t511;
t73 = t374 * t459;
t375 = xDP(1);
t80 = (t274 * t619 + t277 * t625) * t308 + (t274 * t626 - t277 * t426) * t358 - t142 * t277 - t274 * t535;
t458 = t80 * t511;
t74 = t375 * t458;
t695 = -t73 - t74;
t46 = t373 * t443 + t695;
t411 = 1 / pkin(2);
t607 = t304 * t411;
t133 = t350 * t719 + t359 * t430;
t653 = t133 * t373;
t130 = -t350 * t430 + t589;
t597 = t348 * t358;
t534 = pkin(2) * t597;
t618 = t203 * t349;
t151 = t534 + t618;
t116 = -t130 * t277 - t151 * t274;
t666 = t116 * t375;
t115 = t130 * t274 - t151 * t277;
t668 = t115 * t374;
t420 = (t653 + t666 + t668) * t607;
t70 = t414 * t420;
t31 = t70 + t46;
t329 = qJ(2,2) + qJ(3,2);
t230 = sin(t329);
t395 = 2 * qJ(2,2);
t323 = t391 + t395;
t327 = t395 + qJ(3,2);
t330 = qJ(2,2) - qJ(3,2);
t352 = sin(qJ(2,2));
t362 = cos(qJ(1,2));
t396 = -2 * qJ(2,2);
t571 = qJ(3,2) + qJ(1,2);
t572 = -qJ(3,2) + qJ(1,2);
t673 = ((-sin(qJ(2,2) - t572) + sin(qJ(2,2) + t571)) * t750 + (-cos(t396 + t392 + qJ(1,2)) - cos(qJ(1,2) + t323) - 0.2e1 * t362) * pkin(2) + (-cos(t396 + t572) - cos(qJ(1,2) + t327) - cos(t572) - cos(t571)) * pkin(1)) / ((-sin(t324) + t352) * pkin(2) + (sin(t330) - t230) * pkin(1));
t488 = t673 / 0.2e1;
t442 = t414 * t488;
t360 = cos(qJ(3,2));
t701 = pkin(2) * t360;
t205 = pkin(1) + t701;
t351 = sin(qJ(3,2));
t595 = t351 * t352;
t429 = pkin(2) * t595 - t205 * t361;
t149 = 0.1e1 / t429;
t305 = 0.1e1 / t351;
t604 = t305 * t414;
t510 = t149 * t604;
t309 = t360 ^ 2;
t353 = sin(qJ(1,2));
t588 = t362 * t719;
t143 = t588 * t595 + (t309 - 0.1e1) * t353 * pkin(2);
t343 = legFrame(2,2);
t275 = sin(t343);
t278 = cos(t343);
t310 = t361 ^ 2;
t498 = t353 * t595;
t425 = pkin(1) * t498 + (t498 * t725 - t588) * t360;
t533 = t351 * t701;
t555 = 0.2e1 * t701;
t617 = (pkin(1) + t555) * t351;
t284 = pkin(1) * t360;
t179 = t309 * t725 - pkin(2) + t284;
t623 = t179 * t353;
t624 = t179 * t352;
t81 = (-t275 * t623 + t278 * t617) * t310 + (t275 * t425 + t278 * t624) * t361 + t143 * t275 - t278 * t533;
t457 = t81 * t510;
t75 = t374 * t457;
t82 = (t275 * t617 + t278 * t623) * t310 + (t275 * t624 - t278 * t425) * t361 - t143 * t278 - t275 * t533;
t456 = t82 * t510;
t76 = t375 * t456;
t694 = -t75 - t76;
t47 = t373 * t442 + t694;
t605 = t305 * t411;
t134 = t353 * t719 + t362 * t429;
t652 = t134 * t373;
t131 = -t353 * t429 + t588;
t594 = t351 * t361;
t532 = pkin(2) * t594;
t616 = t205 * t352;
t152 = t532 + t616;
t118 = -t131 * t278 - t152 * t275;
t662 = t118 * t375;
t117 = t131 * t275 - t152 * t278;
t664 = t117 * t374;
t419 = (t652 + t662 + t664) * t605;
t71 = t414 * t419;
t32 = t71 + t47;
t338 = qJ(2,1) + qJ(3,1);
t237 = sin(t338);
t403 = 2 * qJ(2,1);
t334 = t403 + t399;
t335 = t403 + qJ(3,1);
t339 = qJ(2,1) - qJ(3,1);
t355 = sin(qJ(2,1));
t365 = cos(qJ(1,1));
t404 = -2 * qJ(2,1);
t573 = qJ(3,1) + qJ(1,1);
t574 = -qJ(3,1) + qJ(1,1);
t672 = ((-sin(qJ(2,1) - t574) + sin(qJ(2,1) + t573)) * t750 + (-cos(t404 + t400 + qJ(1,1)) - cos(qJ(1,1) + t334) - 0.2e1 * t365) * pkin(2) + (-cos(t404 + t574) - cos(qJ(1,1) + t335) - cos(t574) - cos(t573)) * pkin(1)) / ((-sin(t332) + t355) * pkin(2) + (sin(t339) - t237) * pkin(1));
t487 = t672 / 0.2e1;
t441 = t414 * t487;
t363 = cos(qJ(3,1));
t700 = pkin(2) * t363;
t207 = pkin(1) + t700;
t354 = sin(qJ(3,1));
t592 = t354 * t355;
t428 = pkin(2) * t592 - t207 * t364;
t150 = 0.1e1 / t428;
t306 = 0.1e1 / t354;
t602 = t306 * t414;
t509 = t150 * t602;
t311 = t363 ^ 2;
t356 = sin(qJ(1,1));
t587 = t365 * t719;
t144 = t587 * t592 + (t311 - 0.1e1) * t356 * pkin(2);
t344 = legFrame(1,2);
t276 = sin(t344);
t279 = cos(t344);
t312 = t364 ^ 2;
t497 = t356 * t592;
t424 = pkin(1) * t497 + (t497 * t725 - t587) * t363;
t531 = t354 * t700;
t554 = 0.2e1 * t700;
t615 = (pkin(1) + t554) * t354;
t285 = pkin(1) * t363;
t180 = t311 * t725 - pkin(2) + t285;
t621 = t180 * t356;
t622 = t180 * t355;
t83 = (-t276 * t621 + t279 * t615) * t312 + (t276 * t424 + t279 * t622) * t364 + t144 * t276 - t279 * t531;
t455 = t83 * t509;
t77 = t374 * t455;
t84 = (t276 * t615 + t279 * t621) * t312 + (t276 * t622 - t279 * t424) * t364 - t144 * t279 - t276 * t531;
t454 = t84 * t509;
t78 = t375 * t454;
t693 = -t77 - t78;
t48 = t373 * t441 + t693;
t603 = t306 * t411;
t135 = t356 * t719 + t365 * t428;
t651 = t135 * t373;
t132 = -t356 * t428 + t587;
t591 = t354 * t364;
t530 = pkin(2) * t591;
t614 = t207 * t355;
t153 = t530 + t614;
t120 = -t132 * t279 - t153 * t276;
t658 = t120 * t375;
t119 = t132 * t276 - t153 * t279;
t660 = t119 * t374;
t418 = (t651 + t658 + t660) * t603;
t72 = t414 * t418;
t33 = t72 + t48;
t582 = t411 * t414;
t500 = t306 * t582;
t736 = (t658 / 0.2e1 + t660 / 0.2e1 + t651 / 0.2e1) * t500;
t501 = t305 * t582;
t735 = (t662 / 0.2e1 + t664 / 0.2e1 + t652 / 0.2e1) * t501;
t502 = t304 * t582;
t734 = (t666 / 0.2e1 + t668 / 0.2e1 + t653 / 0.2e1) * t502;
t716 = m(3) * rSges(3,2);
t545 = t354 * t716;
t380 = pkin(1) * m(3);
t566 = -m(2) * rSges(2,1) - t380;
t690 = rSges(3,1) * t363;
t156 = -m(3) * t690 + t545 + t566;
t183 = rSges(3,1) * t354 + rSges(3,2) * t363;
t371 = m(2) * rSges(2,2);
t162 = m(3) * t183 + t371;
t733 = -t156 * t364 - t162 * t355;
t546 = t351 * t716;
t691 = rSges(3,1) * t360;
t155 = -m(3) * t691 + t546 + t566;
t182 = rSges(3,1) * t351 + rSges(3,2) * t360;
t161 = m(3) * t182 + t371;
t732 = -t155 * t361 - t161 * t352;
t547 = t348 * t716;
t692 = rSges(3,1) * t357;
t154 = -m(3) * t692 + t547 + t566;
t181 = rSges(3,1) * t348 + rSges(3,2) * t357;
t160 = m(3) * t181 + t371;
t731 = -t154 * t358 - t160 * t349;
t729 = -3 * pkin(1);
t728 = -2 * pkin(1);
t727 = -6 * pkin(2);
t724 = -0.2e1 * t46;
t723 = -0.2e1 * t47;
t722 = -0.2e1 * t48;
t718 = m(1) * rSges(1,1);
t406 = rSges(2,2) ^ 2;
t408 = rSges(2,1) ^ 2;
t413 = pkin(1) ^ 2;
t176 = t413 * m(3) + (-t406 + t408) * m(2) + Icges(2,2) - Icges(2,1);
t715 = t176 / 0.2e1;
t405 = rSges(3,2) ^ 2;
t407 = rSges(3,1) ^ 2;
t184 = m(3) * (-t405 + t407) - Icges(3,1) + Icges(3,2);
t714 = t184 / 0.2e1;
t219 = sin(t316);
t712 = t219 / 0.2e1;
t225 = sin(t323);
t711 = t225 / 0.2e1;
t233 = sin(t334);
t710 = t233 / 0.2e1;
t708 = -t410 / 0.2e1;
t707 = t410 / 0.2e1;
t706 = -t413 / 0.2e1;
t704 = pkin(1) * (-3 * t410 + t413);
t703 = pkin(1) * t410;
t699 = pkin(2) * t413;
t25 = t410 * t31;
t40 = t413 * t46;
t698 = t25 + t40;
t26 = t410 * t32;
t41 = t413 * t47;
t697 = t26 + t41;
t27 = t410 * t33;
t42 = t413 * t48;
t696 = t27 + t42;
t689 = t148 * t79;
t688 = t148 * t80;
t177 = rSges(2,1) * t717 + pkin(1) * t705 - Icges(2,5);
t194 = rSges(3,2) * t705 - Icges(3,6);
t195 = rSges(3,1) * t705 - Icges(3,5);
t210 = rSges(2,2) * t717 - Icges(2,6);
t97 = (t194 * t348 - t195 * t357 - t177) * t349 - (t194 * t357 + t195 * t348 + t210) * t358;
t687 = t148 * t97;
t686 = t149 * t81;
t685 = t149 * t82;
t98 = (t194 * t351 - t195 * t360 - t177) * t352 - (t194 * t360 + t195 * t351 + t210) * t361;
t684 = t149 * t98;
t683 = t150 * t83;
t682 = t150 * t84;
t99 = (t194 * t354 - t195 * t363 - t177) * t355 - (t194 * t363 + t195 * t354 + t210) * t364;
t681 = t150 * t99;
t680 = t181 * t70;
t679 = t182 * t71;
t678 = t183 * t72;
t246 = cos(t320);
t173 = 0.1e1 / (pkin(1) * t358 + pkin(2) * t246);
t112 = (-t350 * t373 + (-t274 * t374 + t277 * t375) * t359) * t173;
t671 = t112 * t719;
t258 = cos(t329);
t174 = 0.1e1 / (pkin(1) * t361 + pkin(2) * t258);
t113 = (-t353 * t373 + (-t275 * t374 + t278 * t375) * t362) * t174;
t670 = t113 * t719;
t269 = cos(t338);
t175 = 0.1e1 / (pkin(1) * t364 + pkin(2) * t269);
t114 = (-t356 * t373 + (-t276 * t374 + t279 * t375) * t365) * t175;
t669 = t114 * t719;
t667 = t115 * t411;
t665 = t116 * t411;
t663 = t117 * t411;
t661 = t118 * t411;
t659 = t119 * t411;
t657 = t120 * t411;
t197 = pkin(1) * t547;
t280 = t405 + t407;
t201 = t413 + t280;
t282 = t406 + t408;
t437 = m(2) * t282 + Icges(2,3) + Icges(3,3);
t544 = pkin(1) * t692;
t127 = -0.2e1 * t197 + (t201 + 0.2e1 * t544) * m(3) + t437;
t656 = t127 * t148;
t198 = pkin(1) * t546;
t543 = pkin(1) * t691;
t128 = -0.2e1 * t198 + (t201 + 0.2e1 * t543) * m(3) + t437;
t655 = t128 * t149;
t199 = pkin(1) * t545;
t542 = pkin(1) * t690;
t129 = -0.2e1 * t199 + (t201 + 0.2e1 * t542) * m(3) + t437;
t654 = t129 * t150;
t136 = -t194 * t246 - t195 * t223;
t650 = t136 * t411;
t137 = -t194 * t258 - t195 * t230;
t649 = t137 * t411;
t138 = -t194 * t269 - t195 * t237;
t648 = t138 * t411;
t145 = Icges(3,3) - t197 + (t280 + t544) * m(3);
t647 = t145 * t148;
t646 = t145 * t411;
t146 = Icges(3,3) - t198 + (t280 + t543) * m(3);
t645 = t146 * t149;
t644 = t146 * t411;
t147 = Icges(3,3) - t199 + (t280 + t542) * m(3);
t643 = t147 * t150;
t642 = t147 * t411;
t635 = t173 * t350;
t634 = t173 * t359;
t633 = t174 * t353;
t632 = t174 * t362;
t631 = t175 * t356;
t630 = t175 * t365;
t291 = sin(t387);
t629 = t176 * t291;
t294 = sin(t395);
t628 = t176 * t294;
t297 = sin(t403);
t627 = t176 * t297;
t192 = m(3) * t280 + Icges(3,3);
t620 = t192 * t411;
t208 = rSges(3,1) * t716 - Icges(3,4);
t244 = cos(t316);
t613 = t208 * t244;
t250 = cos(t323);
t612 = t208 * t250;
t267 = cos(t334);
t611 = t208 * t267;
t211 = rSges(2,1) * t371 - Icges(2,4);
t299 = cos(t387);
t610 = t211 * t299;
t301 = cos(t395);
t609 = t211 * t301;
t303 = cos(t403);
t608 = t211 * t303;
t601 = t307 * t410;
t600 = t309 * t410;
t599 = t311 * t410;
t596 = t349 * t719;
t593 = t352 * t719;
t590 = t355 * t719;
t586 = t719 * t410;
t585 = t719 * t413;
t584 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t319 = t387 + t384;
t412 = pkin(1) * t413;
t581 = t412 * sin(t319);
t328 = t395 + t392;
t580 = t412 * sin(t328);
t337 = t403 + t400;
t579 = t412 * sin(t337);
t318 = t387 - qJ(3,3);
t578 = t413 * sin(t318);
t325 = -qJ(3,2) + t395;
t577 = t413 * sin(t325);
t336 = t403 - qJ(3,1);
t576 = t413 * sin(t336);
t575 = -2 * t380;
t340 = t719 ^ 2;
t568 = 0.4e1 / 0.3e1 * t340 + t413;
t567 = 0.2e1 / 0.3e1 * t410 + t413;
t286 = t410 + t413;
t565 = t413 - t410;
t564 = (0.9e1 / 0.2e1 * t410 + t413 + (2 * t340)) * t740;
t563 = ((3 * t410) + t568) * t729;
t562 = ((2 * t410) + t568) * t729;
t561 = -3 * t703;
t560 = 5 * t703;
t559 = -0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t340 + t567);
t558 = (0.2e1 / 0.3e1 * t340 + t567) * t727;
t213 = t340 + t410;
t557 = 4 * pkin(2) * t213;
t553 = 3 * t699;
t552 = t414 * t726;
t541 = t380 / 0.2e1;
t540 = 2 * t586;
t539 = -2 * t585;
t529 = pkin(2) * t578;
t528 = pkin(2) * t577;
t527 = pkin(2) * t576;
t382 = 3 * qJ(3,3);
t526 = sin(t382) * t699;
t390 = 3 * qJ(3,2);
t525 = sin(t390) * t699;
t398 = 3 * qJ(3,1);
t524 = sin(t398) * t699;
t523 = t373 * t674;
t522 = t373 * t673;
t521 = t373 * t672;
t514 = t133 * t607;
t513 = t134 * t605;
t512 = t135 * t603;
t508 = t274 * t634;
t507 = t277 * t634;
t506 = t275 * t632;
t505 = t278 * t632;
t504 = t276 * t630;
t503 = t279 * t630;
t496 = t719 * t584;
t494 = 2 * t551;
t493 = -4 * t551;
t484 = 0.2e1 / 0.3e1 * t582;
t438 = t375 * t484;
t439 = t374 * t484;
t440 = t373 * t484;
t492 = (t115 * t439 + t116 * t438 + t133 * t440) * t304;
t491 = (t117 * t439 + t118 * t438 + t134 * t440) * t305;
t490 = (t119 * t439 + t120 * t438 + t135 * t440) * t306;
t486 = t373 * t414 / 0.3e1;
t485 = t584 / 0.2e1;
t483 = t410 * t695;
t482 = t410 * t694;
t481 = t410 * t693;
t474 = t584 * t726;
t409 = pkin(2) * t410;
t472 = t409 - 3 * t699;
t471 = t112 * t551;
t470 = t113 * t551;
t469 = t114 * t551;
t109 = t112 ^ 2;
t313 = t382 + t387;
t217 = sin(t313);
t315 = t387 + t381;
t218 = sin(t315);
t22 = t46 + t734;
t220 = sin(t317);
t238 = cos((t382 + t386));
t239 = cos((t382 + qJ(2,3)));
t241 = cos((qJ(3,3) + t386));
t245 = cos(t317);
t247 = cos(t321);
t271 = t706 + t410;
t272 = t413 + t708;
t290 = sin(t383);
t385 = 4 * qJ(2,3);
t11 = (((-t578 / 0.2e1 + t217 * t707 + t220 * t485 + t286 * t348 + (t219 + t290 - t291) * t720) * t31 - ((-t243 / 0.4e1 + t242 / 0.4e1 + t240 / 0.4e1 - t358 / 0.4e1) * pkin(2) + (t238 / 0.4e1 - t241 / 0.4e1 + t239 / 0.4e1 - t246 / 0.4e1) * pkin(1)) * t671) * t70 * t552 + ((t70 * t239 * t494 + t743 * (t40 - t25) * t750 + t749 * t31 * t540 + ((t218 + sin((t385 + t381))) * t561 + sin((t385 + qJ(3,3))) * t553 - sin((t385 + t383)) * t704 + t472 * sin((t382 + t385)) + t412 * sin(t385) - t409 * sin((t385 + 5 * qJ(3,3))) + t217 * t558 + t219 * t562 + t220 * t557 + t290 * t563 + t291 * t564 + t348 * t559 - 0.3e1 * t526 + 0.6e1 * t529 + t581) * t112 + (t247 * t493 + t744 * t539) * t46 + ((t46 - t734) * t246 - (-t238 + t241) * t22) * t751) * t112 / 0.4e1 + (-pkin(1) * (t420 * t738 + t523 * t739 + t40 + 0.4e1 * t483) * t219 + t698 * t217 * t726 + 0.4e1 * t22 * t529 + t46 * t581 - t46 * t218 * t703 + t31 * t220 * t474 + (0.3e1 * t483 + t40 + (0.3e1 / 0.2e1 * t523 + 0.2e1 * t420) * t583) * t290 * t728 + ((0.4e1 / 0.5e1 * t666 + 0.4e1 / 0.5e1 * t668 + 0.4e1 / 0.5e1 * t653) * t502 + t46) * t291 * t560 + t526 * t724 + t348 * ((-0.2e1 / 0.3e1 * t74 - 0.2e1 / 0.3e1 * t73 + t486 * t674 + t492) * t410 + t413 * (t492 + t46)) * t727 + 0.2e1 * (t238 + t246) * t471 - 0.2e1 * (t247 + t241) * t471 + (t743 * t496 - t744 * t585 + t749 * t586) * t112) * t46 / 0.2e1) * t414) / (t271 * t244 + cos(t319) * t706 + cos(t315) * t708 + t272 * t299 - t286 * cos(t383) + (-cos(t318) - cos(t313) - cos(t382) + 0.2e1 * t245 + t357) * t720 + t286);
t13 = (t223 * t671 + t31 * (t283 + pkin(2))) * t70 * t606 + (((0.2e1 * t22 * t283 - (-t349 * t357 - t597) * t671) * pkin(2) + t698) * t46 + (t46 * t596 * t740 + ((pkin(1) * t556 + t565 + 0.2e1 * t601) * t308 - 0.2e1 * t618 * t534 - t601 + t213) * t112 + (t534 * t719 + t596 * t702) * t31) * t112) * t502;
t16 = (t349 * pkin(1) * t724 + t223 * t31 * t726 - t671) * t112 * t173;
t166 = g(1) * t274 + g(2) * t277;
t43 = t46 ^ 2;
t169 = g(1) * t277 - g(2) * t274;
t433 = g(3) * t359 + t169 * t350;
t436 = rSges(3,1) * t220 + rSges(3,2) * t245;
t94 = t184 * t109 * t712;
t462 = (-t136 * t16 - t145 * t11 - t192 * t13 + t94 + t109 * t613 + (0.2e1 * t43 * t181 + (t181 + t436) * t109) * t541 + ((-rSges(3,1) * t166 + rSges(3,2) * t433) * t246 + t223 * (rSges(3,1) * t433 + rSges(3,2) * t166)) * m(3)) * t502;
t322 = t389 + t395;
t224 = sin(t322);
t326 = t395 + t390;
t227 = sin(t326);
t228 = sin(t327);
t23 = t47 + t735;
t249 = cos((t390 + qJ(2,2)));
t254 = cos((t394 + t390));
t256 = cos((t394 + qJ(3,2)));
t257 = cos(t327);
t259 = cos(t330);
t293 = sin(t391);
t393 = 4 * qJ(2,2);
t10 = (((t227 * t707 - t577 / 0.2e1 + t228 * t485 + t286 * t351 + (t225 + t293 - t294) * t720) * t32 - ((-t255 / 0.4e1 + t253 / 0.4e1 + t251 / 0.4e1 - t361 / 0.4e1) * pkin(2) + (t254 / 0.4e1 - t256 / 0.4e1 + t249 / 0.4e1 - t258 / 0.4e1) * pkin(1)) * t670) * t71 * t552 + ((t71 * t249 * t494 + t742 * (t41 - t26) * t750 + t747 * t32 * t540 + ((t224 + sin((t393 + t389))) * t561 - sin((t393 + t391)) * t704 + sin((t393 + qJ(3,2))) * t553 + t472 * sin((t393 + t390)) + t412 * sin(t393) - t409 * sin((5 * qJ(3,2) + t393)) + t225 * t562 + t227 * t558 + t228 * t557 + t293 * t563 + t294 * t564 + t351 * t559 - 0.3e1 * t525 + 0.6e1 * t528 + t580) * t113 + (t259 * t493 + t748 * t539) * t47 + ((t47 - t735) * t258 - (t256 - t254) * t23) * t751) * t113 / 0.4e1 + (t697 * t227 * t726 - pkin(1) * (t419 * t738 + t522 * t739 + t41 + 0.4e1 * t482) * t225 + 0.4e1 * t23 * t528 + t47 * t580 - t47 * t224 * t703 + t32 * t228 * t474 + (0.3e1 * t482 + t41 + (0.3e1 / 0.2e1 * t522 + 0.2e1 * t419) * t583) * t293 * t728 + ((0.4e1 / 0.5e1 * t662 + 0.4e1 / 0.5e1 * t664 + 0.4e1 / 0.5e1 * t652) * t501 + t47) * t294 * t560 + t525 * t723 + t351 * ((-0.2e1 / 0.3e1 * t76 - 0.2e1 / 0.3e1 * t75 + t486 * t673 + t491) * t410 + t413 * (t491 + t47)) * t727 + 0.2e1 * (t254 + t258) * t470 - 0.2e1 * (t259 + t256) * t470 + (t742 * t496 - t748 * t585 + t747 * t586) * t113) * t47 / 0.2e1) * t414) / (t271 * t250 + cos(t328) * t706 + cos(t322) * t708 + t272 * t301 - t286 * cos(t391) + (-cos(t326) - cos(t325) - cos(t390) + 0.2e1 * t257 + t360) * t720 + t286);
t110 = t113 ^ 2;
t14 = (t230 * t670 + t32 * (t284 + pkin(2))) * t71 * t604 + (((0.2e1 * t23 * t284 - (-t352 * t360 - t594) * t670) * pkin(2) + t697) * t47 + (t47 * t593 * t740 + ((pkin(1) * t555 + t565 + 0.2e1 * t600) * t310 - 0.2e1 * t616 * t532 - t600 + t213) * t113 + (t532 * t719 + t593 * t701) * t32) * t113) * t501;
t167 = g(1) * t275 + g(2) * t278;
t17 = (t352 * pkin(1) * t723 + t230 * t32 * t726 - t670) * t113 * t174;
t170 = g(1) * t278 - g(2) * t275;
t432 = g(3) * t362 + t170 * t353;
t435 = rSges(3,1) * t228 + rSges(3,2) * t257;
t44 = t47 ^ 2;
t95 = t184 * t110 * t711;
t461 = (-t137 * t17 - t146 * t10 - t192 * t14 + t95 + t110 * t612 + (0.2e1 * t44 * t182 + (t182 + t435) * t110) * t541 + ((-rSges(3,1) * t167 + rSges(3,2) * t432) * t258 + t230 * (rSges(3,1) * t432 + rSges(3,2) * t167)) * m(3)) * t501;
t111 = t114 ^ 2;
t331 = t398 + t403;
t231 = sin(t331);
t333 = t403 + t397;
t232 = sin(t333);
t234 = sin(t335);
t24 = t48 + t736;
t261 = cos((t398 + qJ(2,1)));
t265 = cos((t402 + t398));
t266 = cos((t402 + qJ(3,1)));
t268 = cos(t335);
t270 = cos(t339);
t296 = sin(t399);
t401 = 4 * qJ(2,1);
t12 = (((-t576 / 0.2e1 + t231 * t707 + t234 * t485 + t286 * t354 + (t233 + t296 - t297) * t720) * t33 - ((-t262 / 0.4e1 + t260 / 0.4e1 + t263 / 0.4e1 - t364 / 0.4e1) * pkin(2) + (t265 / 0.4e1 - t266 / 0.4e1 + t261 / 0.4e1 - t269 / 0.4e1) * pkin(1)) * t669) * t72 * t552 + ((t72 * t261 * t494 + t741 * (t42 - t27) * t750 + t746 * t33 * t540 + ((sin((t401 + t397)) + t232) * t561 + sin((qJ(3,1) + t401)) * t553 - sin((t401 + t399)) * t704 + t412 * sin(t401) - t409 * sin((5 * qJ(3,1) + t401)) + t472 * sin((t398 + t401)) + t231 * t558 + t233 * t562 + t234 * t557 + t296 * t563 + t297 * t564 + t354 * t559 - 0.3e1 * t524 + 0.6e1 * t527 + t579) * t114 + (t270 * t493 + t745 * t539) * t48 + ((t48 - t736) * t269 - (-t265 + t266) * t24) * t751) * t114 / 0.4e1 + (-pkin(1) * (t418 * t738 + t521 * t739 + t42 + 0.4e1 * t481) * t233 + t696 * t231 * t726 + 0.4e1 * t24 * t527 + t48 * t579 - t48 * t232 * t703 + t33 * t234 * t474 + (0.3e1 * t481 + t42 + (0.3e1 / 0.2e1 * t521 + 0.2e1 * t418) * t583) * t296 * t728 + ((0.4e1 / 0.5e1 * t658 + 0.4e1 / 0.5e1 * t660 + 0.4e1 / 0.5e1 * t651) * t500 + t48) * t297 * t560 + t524 * t722 + t354 * ((-0.2e1 / 0.3e1 * t78 - 0.2e1 / 0.3e1 * t77 + t486 * t672 + t490) * t410 + t413 * (t490 + t48)) * t727 + 0.2e1 * (t265 + t269) * t469 - 0.2e1 * (t270 + t266) * t469 + (t741 * t496 - t745 * t585 + t746 * t586) * t114) * t48 / 0.2e1) * t414) / (t271 * t267 + cos(t337) * t706 + cos(t333) * t708 + t272 * t303 - t286 * cos(t399) + (-cos(t336) - cos(t331) - cos(t398) + 0.2e1 * t268 + t363) * t720 + t286);
t15 = (t237 * t669 + t33 * (t285 + pkin(2))) * t72 * t602 + (((0.2e1 * t24 * t285 - (-t355 * t363 - t591) * t669) * pkin(2) + t696) * t48 + (t48 * t590 * t740 + ((pkin(1) * t554 + t565 + 0.2e1 * t599) * t312 - 0.2e1 * t614 * t530 - t599 + t213) * t114 + (t530 * t719 + t590 * t700) * t33) * t114) * t500;
t168 = g(1) * t276 + g(2) * t279;
t18 = (t355 * pkin(1) * t722 + t237 * t33 * t726 - t669) * t114 * t175;
t171 = g(1) * t279 - g(2) * t276;
t431 = g(3) * t365 + t171 * t356;
t434 = rSges(3,1) * t234 + rSges(3,2) * t268;
t45 = t48 ^ 2;
t96 = t184 * t111 * t710;
t460 = (-t138 * t18 - t147 * t12 - t192 * t15 + t96 + t111 * t611 + (0.2e1 * t45 * t183 + (t183 + t434) * t111) * t541 + ((-rSges(3,1) * t168 + rSges(3,2) * t431) * t269 + t237 * (rSges(3,1) * t431 + rSges(3,2) * t168)) * m(3)) * t500;
t444 = t473 * g(3);
t427 = t366 ^ 2 + t405 / 0.2e1 + t407 / 0.2e1 + t413 / 0.2e1;
t417 = Icges(1,3) + Icges(2,1) / 0.2e1 + Icges(3,1) / 0.2e1 + Icges(2,2) / 0.2e1 + Icges(3,2) / 0.2e1 + ((2 * rSges(2,3) ^ 2 + t282) * m(2)) / 0.2e1 + (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1);
t347 = xDDP(1);
t346 = xDDP(2);
t345 = xDDP(3);
t288 = g(3) * t718;
t209 = 0.2e1 * t208;
t87 = t267 * t714 - t209 * t710 + t303 * t715 - t297 * t211 - t199 + ((-rSges(3,2) * t234 + (t268 + t363) * rSges(3,1)) * pkin(1) + t427) * m(3) + t417;
t86 = t250 * t714 - t209 * t711 + t301 * t715 - t294 * t211 - t198 + ((-rSges(3,2) * t228 + (t257 + t360) * rSges(3,1)) * pkin(1) + t427) * m(3) + t417;
t85 = t244 * t714 - t209 * t712 + t299 * t715 - t291 * t211 - t197 + ((-rSges(3,2) * t220 + (t245 + t357) * rSges(3,1)) * pkin(1) + t427) * m(3) + t417;
t69 = -t138 * t631 + (t147 * t487 + t192 * t512) * t414;
t68 = -t137 * t633 + (t146 * t488 + t192 * t513) * t414;
t67 = -t136 * t635 + (t145 * t489 + t192 * t514) * t414;
t66 = -t99 * t631 + (t129 * t487 + t147 * t512) * t414;
t65 = -t98 * t633 + (t128 * t488 + t146 * t513) * t414;
t64 = -t97 * t635 + (t127 * t489 + t145 * t514) * t414;
t63 = t138 * t503 + (t120 * t620 - t643 * t84) * t602;
t62 = t137 * t505 + (t118 * t620 - t645 * t82) * t604;
t61 = t136 * t507 + (t116 * t620 - t647 * t80) * t606;
t60 = -t138 * t504 + (t119 * t620 - t643 * t83) * t602;
t59 = -t137 * t506 + (t117 * t620 - t645 * t81) * t604;
t58 = -t136 * t508 + (t115 * t620 - t647 * t79) * t606;
t57 = t99 * t503 + (t120 * t642 - t654 * t84) * t602;
t56 = t98 * t505 + (t118 * t644 - t655 * t82) * t604;
t55 = t97 * t507 + (t116 * t646 - t656 * t80) * t606;
t54 = -t99 * t504 + (t119 * t642 - t654 * t83) * t602;
t53 = -t98 * t506 + (t117 * t644 - t655 * t81) * t604;
t52 = -t97 * t508 + (t115 * t646 - t656 * t79) * t606;
t51 = -t87 * t631 + (t138 * t512 + t487 * t99) * t414;
t50 = -t86 * t633 + (t137 * t513 + t488 * t98) * t414;
t49 = -t85 * t635 + (t136 * t514 + t489 * t97) * t414;
t39 = t87 * t503 + (t120 * t648 - t681 * t84) * t602;
t38 = t86 * t505 + (t118 * t649 - t684 * t82) * t604;
t37 = t85 * t507 + (t116 * t650 - t687 * t80) * t606;
t36 = -t87 * t504 + (t119 * t648 - t681 * t83) * t602;
t35 = -t86 * t506 + (t117 * t649 - t684 * t81) * t604;
t34 = -t85 * t508 + (t115 * t650 - t687 * t79) * t606;
t6 = -t99 * t18 - t129 * t12 - t147 * t15 + t96 + t24 * t575 * t678 + (-t156 * t431 + t162 * t168) * t355 + (t156 * t168 + t162 * t431) * t364 + (t611 + t627 / 0.2e1 + t608 + t434 * t380) * t111;
t5 = -t98 * t17 - t128 * t10 - t146 * t14 + t95 + t23 * t575 * t679 + (-t155 * t432 + t161 * t167) * t352 + (t155 * t167 + t161 * t432) * t361 + (t612 + t628 / 0.2e1 + t609 + t435 * t380) * t110;
t4 = -t97 * t16 - t127 * t11 - t145 * t13 + t94 + t22 * t575 * t680 + (-t154 * t433 + t160 * t166) * t349 + (t154 * t166 + t160 * t433) * t358 + (t613 + t629 / 0.2e1 + t610 + t436 * t380) * t109;
t3 = -t87 * t18 - t99 * t12 - t138 * t15 + t444 * t365 + t356 * (g(3) * t733 + t288) + (-t177 * t364 + t210 * t355) * t45 + (t194 * t237 - t195 * t269) * t33 ^ 2 + ((-t718 - t733) * t365 + t356 * t473) * t171 + ((-0.2e1 * t608 - t627) * t48 + (-t184 * t233 - 0.2e1 * t611) * t33 + (-0.2e1 * t24 * t434 - t678) * t380) * t114;
t2 = -t86 * t17 - t98 * t10 - t137 * t14 + t444 * t362 + t353 * (g(3) * t732 + t288) + (-t177 * t361 + t210 * t352) * t44 + (t194 * t230 - t195 * t258) * t32 ^ 2 + ((-t718 - t732) * t362 + t353 * t473) * t170 + ((-0.2e1 * t609 - t628) * t47 + (-t184 * t225 - 0.2e1 * t612) * t32 + (-0.2e1 * t23 * t435 - t679) * t380) * t113;
t1 = -t85 * t16 - t97 * t11 - t136 * t13 + t444 * t359 + t350 * (g(3) * t731 + t288) + (-t177 * t358 + t210 * t349) * t43 + (t194 * t223 - t195 * t246) * t31 ^ 2 + ((-t718 - t731) * t359 + t350 * t473) * t169 + ((-0.2e1 * t610 - t629) * t46 + (-t184 * t219 - 0.2e1 * t613) * t31 + (-0.2e1 * t22 * t436 - t680) * t380) * t112;
t7 = [-m(4) * g(1) + t1 * t507 + t116 * t462 + t118 * t461 + t120 * t460 + t2 * t505 + t3 * t503 - t4 * t458 - t6 * t454 - t5 * t456 + (-t39 * t504 + (-t57 * t683 + t63 * t659) * t602 - t38 * t506 + (-t56 * t686 + t62 * t663) * t604 - t37 * t508 + (-t55 * t689 + t61 * t667) * t606) * t346 + (-t37 * t635 - t38 * t633 - t39 * t631 + (t487 * t57 + t488 * t56 + t489 * t55 + t512 * t63 + t513 * t62 + t514 * t61) * t414) * t345 + (t39 * t503 + (-t57 * t682 + t63 * t657) * t602 + t38 * t505 + (-t56 * t685 + t62 * t661) * t604 + t37 * t507 + (-t55 * t688 + t61 * t665) * t606 + m(4)) * t347; -m(4) * g(2) - t1 * t508 + t115 * t462 + t117 * t461 + t119 * t460 - t2 * t506 - t3 * t504 - t4 * t459 - t6 * t455 - t5 * t457 + (t36 * t503 + (-t54 * t682 + t60 * t657) * t602 + t35 * t505 + (-t53 * t685 + t59 * t661) * t604 + t34 * t507 + (-t52 * t688 + t58 * t665) * t606) * t347 + (-t34 * t635 - t35 * t633 - t36 * t631 + (t487 * t54 + t488 * t53 + t489 * t52 + t512 * t60 + t513 * t59 + t514 * t58) * t414) * t345 + (-t36 * t504 + (-t54 * t683 + t60 * t659) * t602 - t35 * t506 + (-t53 * t686 + t59 * t663) * t604 - t34 * t508 + (-t52 * t689 + t58 * t667) * t606 + m(4)) * t346; -m(4) * g(3) - t1 * t635 + t133 * t462 + t134 * t461 + t135 * t460 - t2 * t633 - t3 * t631 + t4 * t443 + t6 * t441 + t5 * t442 + (t51 * t503 + (t657 * t69 - t66 * t682) * t602 + t50 * t505 + (-t65 * t685 + t661 * t68) * t604 + t49 * t507 + (-t64 * t688 + t665 * t67) * t606) * t347 + (-t51 * t504 + (t659 * t69 - t66 * t683) * t602 - t50 * t506 + (-t65 * t686 + t663 * t68) * t604 - t49 * t508 + (-t64 * t689 + t667 * t67) * t606) * t346 + (-t49 * t635 - t50 * t633 - t51 * t631 + m(4) + (t487 * t66 + t488 * t65 + t489 * t64 + t512 * t69 + t513 * t68 + t514 * t67) * t414) * t345;];
tauX  = t7;
