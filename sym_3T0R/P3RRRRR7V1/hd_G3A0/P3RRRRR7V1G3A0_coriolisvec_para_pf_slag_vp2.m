% Calculate vector of centrifugal and coriolis load on the joints for
% P3RRRRR7V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% taucX [3x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 09:03
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(5,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: xDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: pkin has to be [5x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G3A0_coriolisvec_para_pf_slag_vp2: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 08:52:58
% EndTime: 2020-08-07 08:53:18
% DurationCPUTime: 21.01s
% Computational Cost: add. (141414->827), mult. (241167->1148), div. (26139->17), fcn. (181776->159), ass. (0->543)
t1699 = (-pkin(5) - pkin(4));
t1700 = pkin(1) * pkin(2);
t1560 = (t1699 * t1700);
t1744 = 4 * t1560;
t1743 = 2 * t1699;
t1742 = m(3) * pkin(4);
t1363 = sin(qJ(1,3));
t1422 = 0.1e1 / pkin(1);
t1381 = xDP(3);
t1333 = qJ(2,3) + qJ(3,3);
t1242 = sin(t1333);
t1393 = 2 * qJ(3,3);
t1397 = 2 * qJ(2,3);
t1327 = t1393 + t1397;
t1328 = t1393 + qJ(2,3);
t1331 = t1397 + qJ(3,3);
t1334 = qJ(2,3) - qJ(3,3);
t1362 = sin(qJ(2,3));
t1394 = -2 * qJ(3,3);
t1666 = -(2 * qJ(2,3)) + qJ(1,3);
t1669 = qJ(3,3) + qJ(1,3);
t1670 = -qJ(3,3) + qJ(1,3);
t1656 = ((cos(qJ(2,3) - t1670) + cos(qJ(2,3) + t1669)) * t1743 + (sin(t1394 + t1666) + sin(qJ(1,3) + t1327) + 0.2e1 * t1363) * pkin(2) + (-sin(qJ(3,3) - t1666) + sin(qJ(1,3) + t1331) + sin(t1670) + sin(t1669)) * pkin(1)) / ((-sin(t1328) + t1362) * pkin(2) + (sin(t1334) - t1242) * pkin(1));
t1518 = t1381 * t1656;
t1456 = t1422 * t1518;
t1226 = t1363 * t1699;
t1370 = cos(qJ(3,3));
t1320 = t1370 ^ 2;
t1372 = cos(qJ(1,3));
t1361 = sin(qJ(3,3));
t1614 = t1361 * t1362;
t1177 = -t1226 * t1614 + (t1320 - 0.1e1) * t1372 * pkin(2);
t1358 = legFrame(3,2);
t1289 = sin(t1358);
t1292 = cos(t1358);
t1371 = cos(qJ(2,3));
t1321 = t1371 ^ 2;
t1500 = t1372 * t1614;
t1710 = 0.2e1 * pkin(2);
t1433 = pkin(1) * t1500 + (t1500 * t1710 + t1226) * t1370;
t1613 = t1361 * t1370;
t1542 = pkin(2) * t1613;
t1690 = pkin(2) * t1370;
t1565 = 0.2e1 * t1690;
t1632 = (pkin(1) + t1565) * t1361;
t1297 = pkin(1) * t1370;
t1198 = t1320 * t1710 - pkin(2) + t1297;
t1637 = t1198 * t1372;
t1638 = t1198 * t1362;
t1123 = (-t1289 * t1637 + t1292 * t1632) * t1321 + (t1433 * t1289 + t1292 * t1638) * t1371 + t1177 * t1289 - t1292 * t1542;
t1382 = xDP(2);
t1221 = pkin(1) + t1690;
t1436 = pkin(2) * t1614 - t1221 * t1371;
t1180 = 0.1e1 / t1436;
t1317 = 0.1e1 / t1361;
t1623 = t1317 * t1422;
t1509 = t1180 * t1623;
t1117 = t1123 * t1382 * t1509;
t1124 = (t1289 * t1632 + t1292 * t1637) * t1321 + (t1289 * t1638 - t1433 * t1292) * t1371 - t1177 * t1292 - t1289 * t1542;
t1383 = xDP(1);
t1118 = t1124 * t1383 * t1509;
t1582 = -t1117 - t1118;
t1111 = t1456 / 0.2e1 + t1582;
t1419 = 0.1e1 / pkin(2);
t1595 = t1419 * t1422;
t1506 = t1317 * t1595;
t1171 = -t1363 * t1436 + t1372 * t1699;
t1641 = t1171 * t1381;
t1612 = t1361 * t1371;
t1541 = pkin(2) * t1612;
t1631 = t1221 * t1362;
t1183 = t1541 + t1631;
t1729 = t1436 * t1372 + t1226;
t1154 = -t1289 * t1183 + t1292 * t1729;
t1646 = t1154 * t1383;
t1153 = -t1292 * t1183 - t1289 * t1729;
t1647 = t1153 * t1382;
t1719 = (t1646 / 0.2e1 + t1647 / 0.2e1 + t1641 / 0.2e1) * t1506;
t1093 = t1111 + t1719;
t1427 = t1317 * t1419 * (t1641 + t1646 + t1647);
t1114 = t1422 * t1427;
t1102 = t1114 + t1111;
t1418 = pkin(2) ^ 2;
t1096 = t1418 * t1102;
t1421 = pkin(1) ^ 2;
t1105 = t1421 * t1111;
t1264 = cos(t1333);
t1195 = 0.1e1 / (pkin(1) * t1371 + pkin(2) * t1264);
t1150 = (-t1372 * t1381 + (t1289 * t1382 - t1292 * t1383) * t1363) * t1195;
t1392 = 3 * qJ(3,3);
t1326 = t1392 + t1397;
t1236 = sin(t1326);
t1237 = sin(t1327);
t1391 = 4 * qJ(3,3);
t1330 = t1397 + t1391;
t1239 = sin(t1330);
t1240 = sin(t1331);
t1396 = 3 * qJ(2,3);
t1257 = cos((t1392 + t1396));
t1258 = cos((t1392 + qJ(2,3)));
t1259 = cos((t1393 + t1396));
t1260 = cos(t1328);
t1261 = cos((qJ(3,3) + t1396));
t1263 = cos((t1396 + t1391));
t1265 = cos(t1334);
t1696 = -t1421 / 0.2e1;
t1284 = t1696 + t1418;
t1698 = -t1418 / 0.2e1;
t1285 = t1421 + t1698;
t1301 = t1418 + t1421;
t1304 = sin(t1393);
t1305 = sin(t1397);
t1329 = t1394 + t1397;
t1332 = t1397 - qJ(3,3);
t1395 = 4 * qJ(2,3);
t1417 = pkin(2) * t1418;
t1420 = pkin(1) * t1421;
t1477 = t1418 * t1582;
t1652 = t1150 * t1699;
t1545 = pkin(1) * t1652;
t1483 = pkin(2) * t1545;
t1687 = t1421 * pkin(2);
t1487 = t1417 - 0.3e1 * t1687;
t1597 = (-pkin(2) + pkin(1)) * (pkin(1) + pkin(2));
t1711 = -0.2e1 * pkin(2);
t1488 = t1597 * t1711;
t1495 = 0.2e1 / 0.3e1 * t1595;
t1448 = t1383 * t1495;
t1449 = t1382 * t1495;
t1450 = t1381 * t1495;
t1494 = (t1153 * t1449 + t1154 * t1448 + t1171 * t1450) * t1317;
t1496 = t1597 / 0.2e1;
t1497 = t1699 * t1597;
t1522 = -4 * t1560;
t1523 = 2 * t1560;
t1530 = sin(t1392) * t1687;
t1591 = t1421 * sin(t1332);
t1536 = pkin(2) * t1591;
t1598 = t1699 * t1421;
t1548 = -0.2e1 * t1598;
t1599 = t1699 * t1418;
t1549 = 0.2e1 * t1599;
t1561 = 0.3e1 * t1687;
t1562 = t1422 * t1711;
t1353 = t1699 ^ 2;
t1229 = t1353 + t1418;
t1566 = 0.4e1 * pkin(2) * t1229;
t1575 = 0.2e1 / 0.3e1 * t1418 + t1421;
t1712 = -0.6e1 * pkin(2);
t1567 = (0.2e1 / 0.3e1 * t1353 + t1575) * t1712;
t1568 = -0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t1353 + t1575);
t1691 = pkin(1) * t1418;
t1569 = 0.5e1 * t1691;
t1570 = -0.3e1 * t1691;
t1576 = 0.4e1 / 0.3e1 * t1353 + t1421;
t1714 = -0.3e1 * pkin(1);
t1571 = (0.2e1 * t1418 + t1576) * t1714;
t1572 = (0.3e1 * t1418 + t1576) * t1714;
t1573 = 0.2e1 * pkin(1) * (0.9e1 / 0.2e1 * t1418 + t1421 + (2 * t1353));
t1585 = t1096 + t1105;
t1594 = t1420 * sin(t1329);
t1596 = t1418 * t1422;
t1692 = pkin(1) * (-0.3e1 * t1418 + t1421);
t1697 = t1418 / 0.2e1;
t1709 = 0.4e1 * t1093;
t1713 = -0.2e1 * pkin(1);
t1725 = 0.4e1 * t1596;
t1726 = 0.2e1 * t1596;
t1732 = t1371 + t1259;
t1737 = t1263 + t1260;
t1738 = cos((t1394 + qJ(2,3))) + cos(t1396);
t1069 = (((-t1591 / 0.2e1 + t1236 * t1697 + t1240 * t1496 + t1301 * t1361 + (t1237 + t1304 - t1305) * t1700) * t1102 - ((t1263 / 0.4e1 - t1259 / 0.4e1 + t1260 / 0.4e1 - t1371 / 0.4e1) * pkin(2) + (t1257 / 0.4e1 - t1261 / 0.4e1 + t1258 / 0.4e1 - t1264 / 0.4e1) * pkin(1)) * t1652) * t1114 * t1562 + ((t1114 * t1258 * t1523 + t1732 * (t1105 - t1096) * t1743 + t1737 * t1102 * t1549 + ((sin((t1391 + t1395)) + t1239) * t1570 + t1487 * sin((t1395 + t1392)) + sin((t1395 + qJ(3,3))) * t1561 - sin((t1395 + t1393)) * t1692 + t1420 * sin(t1395) - t1417 * sin((5 * qJ(3,3) + t1395)) + t1236 * t1567 + t1237 * t1571 + t1240 * t1566 + t1304 * t1572 + t1305 * t1573 + t1361 * t1568 - 0.3e1 * t1530 + 0.6e1 * t1536 + t1594) * t1150 + (t1265 * t1522 + t1738 * t1548) * t1111 + ((t1111 - t1719) * t1264 - (-t1257 + t1261) * t1093) * t1744) * t1150 / 0.4e1 + (-(t1427 * t1725 + t1518 * t1726 + t1105 + 0.4e1 * t1477) * pkin(1) * t1237 + t1585 * t1236 * t1711 + t1536 * t1709 - t1111 * t1239 * t1691 + t1111 * t1594 + t1102 * t1240 * t1488 + (0.3e1 * t1477 + t1105 + (0.3e1 / 0.2e1 * t1518 + 0.2e1 * t1427) * t1596) * t1304 * t1713 + ((0.4e1 / 0.5e1 * t1646 + 0.4e1 / 0.5e1 * t1647 + 0.4e1 / 0.5e1 * t1641) * t1506 + t1111) * t1305 * t1569 - 0.2e1 * t1111 * t1530 + ((-0.2e1 / 0.3e1 * t1118 - 0.2e1 / 0.3e1 * t1117 + t1456 / 0.3e1 + t1494) * t1418 + t1421 * (t1494 + t1111)) * t1361 * t1712 + 0.2e1 * (t1257 + t1264) * t1483 - 0.2e1 * (t1265 + t1261) * t1483 + (t1732 * t1497 - t1738 * t1598 + t1737 * t1599) * t1150) * t1111 / 0.2e1) * t1422) / (t1284 * cos(t1327) + cos(t1330) * t1698 + cos(t1329) * t1696 + t1285 * cos(t1397) - t1301 * cos(t1393) + (-cos(t1332) - cos(t1326) + 0.2e1 * cos(t1331) - cos(t1392) + t1370) * t1700 + t1301);
t1695 = pkin(1) * t1111;
t1533 = t1362 * t1695;
t1574 = t1421 - t1418;
t1611 = t1362 * t1370;
t1620 = t1320 * t1418;
t1653 = t1150 * t1321;
t1075 = (t1242 * t1652 + t1102 * (t1297 + pkin(2))) * t1114 * t1623 + ((t1362 * t1545 + (0.2e1 * t1093 * t1297 - (-t1611 - t1612) * t1652) * pkin(2) + t1585) * t1111 + ((pkin(1) * t1565 + t1574 + 0.2e1 * t1620) * t1653 + (-0.2e1 * t1631 * t1541 + t1229 - t1620) * t1150 + (t1533 - (-pkin(2) * t1611 - t1541) * t1102) * t1699) * t1150) * t1506;
t1081 = (t1102 * t1242 * t1711 - 0.2e1 * t1533 - t1652) * t1150 * t1195;
t1099 = t1102 ^ 2;
t1108 = t1111 ^ 2;
t1215 = (mrSges(3,3) + t1742) * pkin(1) - Ifges(2,5);
t1287 = pkin(4) * mrSges(3,2) - Ifges(3,6);
t1288 = mrSges(3,1) * pkin(4) - Ifges(3,5);
t1626 = t1288 * t1361;
t1465 = -t1287 * t1370 - t1626;
t1579 = t1361 * t1287 - t1288 * t1370;
t1159 = -(-t1215 + t1579) * t1362 - (Ifges(2,6) + t1465) * t1371;
t1162 = -t1579 * t1362 - t1465 * t1371;
t1355 = Ifges(3,2) - Ifges(3,1);
t1390 = m(3) * t1421;
t1216 = -Ifges(2,1) + Ifges(2,2) + t1390 - t1355;
t1357 = 0.2e1 * t1355;
t1217 = t1357 * t1320;
t1677 = Ifges(3,4) * t1361;
t1233 = 0.4e1 * t1677;
t1380 = pkin(1) * mrSges(3,1);
t1315 = 0.2e1 * t1380;
t1683 = mrSges(3,2) * t1361;
t1559 = pkin(1) * t1683;
t1168 = t1217 + (t1233 + t1315) * t1370 - 0.2e1 * t1559 + t1216;
t1686 = mrSges(3,1) * t1361;
t1230 = pkin(1) * t1686;
t1295 = -Ifges(3,2) / 0.2e1 + Ifges(3,1) / 0.2e1;
t1296 = -Ifges(3,4) / 0.2e1 + Ifges(2,4) / 0.2e1;
t1379 = pkin(1) * mrSges(3,2);
t1300 = -t1379 / 0.2e1;
t1415 = 0.2e1 * Ifges(3,4);
t1440 = -Ifges(2,1) - Ifges(3,2) - Ifges(1,3) + (-0.2e1 * mrSges(3,3) - t1742) * pkin(4);
t1617 = t1355 * t1361;
t1521 = t1102 * t1617;
t1701 = -pkin(1) / 0.2e1;
t1527 = t1093 * t1701;
t1665 = t1102 * t1320;
t1552 = -0.4e1 * t1665;
t1556 = t1380 / 0.2e1;
t1610 = t1362 * t1371;
t1680 = Ifges(3,4) * t1320;
t1703 = -0.2e1 * t1216;
t1706 = 0.2e1 * t1150;
t1356 = Ifges(3,4) - Ifges(2,4);
t1718 = t1356 + t1230;
t1480 = t1195 * ((-t1168 * t1321 - 0.4e1 * (t1680 + (t1295 * t1361 + t1300) * t1370 - t1230 / 0.2e1 + t1296) * t1610 + t1355 * t1320 + t1613 * t1415 + t1440) * t1081 + t1159 * t1069 + t1162 * t1075 + 0.8e1 * ((-t1521 / 0.2e1 + mrSges(3,2) * t1527) * t1370 + t1527 * t1686 + t1296 * t1111 + (t1665 - t1114 / 0.2e1) * Ifges(3,4)) * t1653 + (-t1108 * t1215 + t1579 * t1099 + (-0.8e1 * (t1093 * t1556 + t1102 * t1677) * t1370 + t1559 * t1709 + t1111 * t1703 + (0.2e1 * t1114 + t1552) * t1355) * t1362 * t1150) * t1371 + Ifges(3,4) * t1150 * t1552 + (t1099 * t1287 * t1362 + (mrSges(3,2) * t1695 + t1521) * t1706) * t1370 + (-Ifges(2,6) * t1108 + t1099 * t1626) * t1362 + (Ifges(3,4) * t1114 + t1718 * t1111) * t1706);
t1741 = t1363 * t1480;
t1366 = sin(qJ(1,2));
t1342 = qJ(2,2) + qJ(3,2);
t1249 = sin(t1342);
t1401 = 2 * qJ(3,2);
t1405 = 2 * qJ(2,2);
t1335 = t1401 + t1405;
t1336 = t1401 + qJ(2,2);
t1340 = t1405 + qJ(3,2);
t1343 = qJ(2,2) - qJ(3,2);
t1365 = sin(qJ(2,2));
t1402 = -2 * qJ(3,2);
t1667 = qJ(1,2) - (2 * qJ(2,2));
t1671 = qJ(3,2) + qJ(1,2);
t1672 = -qJ(3,2) + qJ(1,2);
t1655 = ((cos(qJ(2,2) - t1672) + cos(qJ(2,2) + t1671)) * t1743 + (sin(t1402 + t1667) + sin(qJ(1,2) + t1335) + 0.2e1 * t1366) * pkin(2) + (-sin(qJ(3,2) - t1667) + sin(qJ(1,2) + t1340) + sin(t1672) + sin(t1671)) * pkin(1)) / ((-sin(t1336) + t1365) * pkin(2) + (sin(t1343) - t1249) * pkin(1));
t1517 = t1381 * t1655;
t1455 = t1422 * t1517;
t1227 = t1366 * t1699;
t1373 = cos(qJ(3,2));
t1322 = t1373 ^ 2;
t1375 = cos(qJ(1,2));
t1364 = sin(qJ(3,2));
t1609 = t1364 * t1365;
t1178 = -t1227 * t1609 + (t1322 - 0.1e1) * t1375 * pkin(2);
t1359 = legFrame(2,2);
t1290 = sin(t1359);
t1293 = cos(t1359);
t1374 = cos(qJ(2,2));
t1323 = t1374 ^ 2;
t1499 = t1375 * t1609;
t1432 = pkin(1) * t1499 + (t1499 * t1710 + t1227) * t1373;
t1608 = t1364 * t1373;
t1540 = pkin(2) * t1608;
t1689 = pkin(2) * t1373;
t1564 = 0.2e1 * t1689;
t1630 = (pkin(1) + t1564) * t1364;
t1298 = pkin(1) * t1373;
t1199 = t1322 * t1710 - pkin(2) + t1298;
t1635 = t1199 * t1375;
t1636 = t1199 * t1365;
t1125 = (-t1290 * t1635 + t1293 * t1630) * t1323 + (t1432 * t1290 + t1293 * t1636) * t1374 + t1178 * t1290 - t1293 * t1540;
t1223 = pkin(1) + t1689;
t1435 = pkin(2) * t1609 - t1223 * t1374;
t1181 = 0.1e1 / t1435;
t1318 = 0.1e1 / t1364;
t1622 = t1318 * t1422;
t1508 = t1181 * t1622;
t1119 = t1125 * t1382 * t1508;
t1126 = (t1290 * t1630 + t1293 * t1635) * t1323 + (t1290 * t1636 - t1432 * t1293) * t1374 - t1178 * t1293 - t1290 * t1540;
t1120 = t1126 * t1383 * t1508;
t1581 = -t1119 - t1120;
t1112 = t1455 / 0.2e1 + t1581;
t1505 = t1318 * t1595;
t1172 = -t1366 * t1435 + t1375 * t1699;
t1640 = t1172 * t1381;
t1607 = t1364 * t1374;
t1539 = pkin(2) * t1607;
t1629 = t1223 * t1365;
t1184 = t1539 + t1629;
t1728 = t1435 * t1375 + t1227;
t1156 = -t1290 * t1184 + t1293 * t1728;
t1644 = t1156 * t1383;
t1155 = -t1293 * t1184 - t1290 * t1728;
t1645 = t1155 * t1382;
t1720 = (t1644 / 0.2e1 + t1645 / 0.2e1 + t1640 / 0.2e1) * t1505;
t1094 = t1112 + t1720;
t1426 = t1318 * t1419 * (t1640 + t1644 + t1645);
t1115 = t1422 * t1426;
t1103 = t1115 + t1112;
t1097 = t1418 * t1103;
t1106 = t1421 * t1112;
t1273 = cos(t1342);
t1196 = 0.1e1 / (pkin(1) * t1374 + pkin(2) * t1273);
t1151 = (-t1375 * t1381 + (t1290 * t1382 - t1293 * t1383) * t1366) * t1196;
t1243 = sin(t1335);
t1399 = 4 * qJ(3,2);
t1338 = t1405 + t1399;
t1245 = sin(t1338);
t1400 = 3 * qJ(3,2);
t1339 = t1405 + t1400;
t1246 = sin(t1339);
t1247 = sin(t1340);
t1404 = 3 * qJ(2,2);
t1266 = cos((t1400 + t1404));
t1267 = cos((t1400 + qJ(2,2)));
t1268 = cos(t1336);
t1270 = cos((t1404 + t1399));
t1271 = cos((t1404 + t1401));
t1272 = cos((t1404 + qJ(3,2)));
t1274 = cos(t1343);
t1307 = sin(t1401);
t1308 = sin(t1405);
t1337 = t1402 + t1405;
t1341 = t1405 - qJ(3,2);
t1403 = 4 * qJ(2,2);
t1476 = t1418 * t1581;
t1650 = t1151 * t1699;
t1544 = pkin(1) * t1650;
t1482 = pkin(2) * t1544;
t1493 = (t1155 * t1449 + t1156 * t1448 + t1172 * t1450) * t1318;
t1529 = sin(t1400) * t1687;
t1590 = t1421 * sin(t1341);
t1535 = pkin(2) * t1590;
t1584 = t1097 + t1106;
t1593 = t1420 * sin(t1337);
t1708 = 0.4e1 * t1094;
t1731 = t1374 + t1271;
t1735 = t1270 + t1268;
t1736 = cos((t1402 + qJ(2,2))) + cos(t1404);
t1070 = (((-t1590 / 0.2e1 + t1246 * t1697 + t1247 * t1496 + t1301 * t1364 + (t1243 + t1307 - t1308) * t1700) * t1103 - ((-t1271 / 0.4e1 + t1270 / 0.4e1 + t1268 / 0.4e1 - t1374 / 0.4e1) * pkin(2) + (t1266 / 0.4e1 - t1272 / 0.4e1 + t1267 / 0.4e1 - t1273 / 0.4e1) * pkin(1)) * t1650) * t1115 * t1562 + ((t1115 * t1267 * t1523 + t1731 * (t1106 - t1097) * t1743 + t1735 * t1103 * t1549 + ((sin((t1403 + t1399)) + t1245) * t1570 + t1420 * sin(t1403) + t1487 * sin((t1400 + t1403)) + sin((t1403 + qJ(3,2))) * t1561 - sin((t1401 + t1403)) * t1692 - t1417 * sin((5 * qJ(3,2) + t1403)) + t1243 * t1571 + t1246 * t1567 + t1247 * t1566 + t1307 * t1572 + t1308 * t1573 + t1364 * t1568 - 0.3e1 * t1529 + 0.6e1 * t1535 + t1593) * t1151 + (t1274 * t1522 + t1736 * t1548) * t1112 + ((t1112 - t1720) * t1273 - (t1272 - t1266) * t1094) * t1744) * t1151 / 0.4e1 + (t1584 * t1246 * t1711 - (t1426 * t1725 + t1517 * t1726 + t1106 + 0.4e1 * t1476) * pkin(1) * t1243 + t1535 * t1708 - t1112 * t1245 * t1691 + t1112 * t1593 + t1103 * t1247 * t1488 + (0.3e1 * t1476 + t1106 + (0.3e1 / 0.2e1 * t1517 + 0.2e1 * t1426) * t1596) * t1307 * t1713 + ((0.4e1 / 0.5e1 * t1644 + 0.4e1 / 0.5e1 * t1645 + 0.4e1 / 0.5e1 * t1640) * t1505 + t1112) * t1308 * t1569 - 0.2e1 * t1112 * t1529 + ((-0.2e1 / 0.3e1 * t1120 - 0.2e1 / 0.3e1 * t1119 + t1455 / 0.3e1 + t1493) * t1418 + t1421 * (t1493 + t1112)) * t1364 * t1712 + 0.2e1 * (t1266 + t1273) * t1482 - 0.2e1 * (t1274 + t1272) * t1482 + (t1731 * t1497 - t1736 * t1598 + t1735 * t1599) * t1151) * t1112 / 0.2e1) * t1422) / (t1284 * cos(t1335) + cos(t1338) * t1698 + cos(t1337) * t1696 + t1285 * cos(t1405) - t1301 * cos(t1401) + (-cos(t1341) - cos(t1339) + 0.2e1 * cos(t1340) - cos(t1400) + t1373) * t1700 + t1301);
t1694 = pkin(1) * t1112;
t1532 = t1365 * t1694;
t1606 = t1365 * t1373;
t1619 = t1322 * t1418;
t1651 = t1151 * t1323;
t1076 = (t1249 * t1650 + t1103 * (t1298 + pkin(2))) * t1115 * t1622 + ((t1365 * t1544 + (0.2e1 * t1094 * t1298 - (-t1606 - t1607) * t1650) * pkin(2) + t1584) * t1112 + ((pkin(1) * t1564 + t1574 + 0.2e1 * t1619) * t1651 + (-0.2e1 * t1629 * t1539 + t1229 - t1619) * t1151 + (t1532 - (-pkin(2) * t1606 - t1539) * t1103) * t1699) * t1151) * t1505;
t1082 = (t1103 * t1249 * t1711 - 0.2e1 * t1532 - t1650) * t1151 * t1196;
t1100 = t1103 ^ 2;
t1109 = t1112 ^ 2;
t1625 = t1288 * t1364;
t1464 = -t1287 * t1373 - t1625;
t1578 = t1364 * t1287 - t1288 * t1373;
t1160 = -(-t1215 + t1578) * t1365 - (Ifges(2,6) + t1464) * t1374;
t1163 = -t1578 * t1365 - t1464 * t1374;
t1218 = t1357 * t1322;
t1676 = Ifges(3,4) * t1364;
t1234 = 0.4e1 * t1676;
t1682 = mrSges(3,2) * t1364;
t1558 = pkin(1) * t1682;
t1169 = t1218 + (t1234 + t1315) * t1373 - 0.2e1 * t1558 + t1216;
t1685 = mrSges(3,1) * t1364;
t1231 = pkin(1) * t1685;
t1616 = t1355 * t1364;
t1520 = t1103 * t1616;
t1526 = t1094 * t1701;
t1663 = t1103 * t1322;
t1551 = -0.4e1 * t1663;
t1605 = t1365 * t1374;
t1679 = Ifges(3,4) * t1322;
t1705 = 0.2e1 * t1151;
t1717 = t1356 + t1231;
t1479 = t1196 * ((-t1169 * t1323 - 0.4e1 * (t1679 + (t1295 * t1364 + t1300) * t1373 - t1231 / 0.2e1 + t1296) * t1605 + t1355 * t1322 + t1608 * t1415 + t1440) * t1082 + t1160 * t1070 + t1163 * t1076 + 0.8e1 * ((-t1520 / 0.2e1 + mrSges(3,2) * t1526) * t1373 + t1526 * t1685 + t1296 * t1112 + (t1663 - t1115 / 0.2e1) * Ifges(3,4)) * t1651 + (-t1109 * t1215 + t1578 * t1100 + (-0.8e1 * (t1094 * t1556 + t1103 * t1676) * t1373 + t1558 * t1708 + t1112 * t1703 + (0.2e1 * t1115 + t1551) * t1355) * t1365 * t1151) * t1374 + Ifges(3,4) * t1151 * t1551 + (t1100 * t1287 * t1365 + (mrSges(3,2) * t1694 + t1520) * t1705) * t1373 + (-Ifges(2,6) * t1109 + t1100 * t1625) * t1365 + (Ifges(3,4) * t1115 + t1717 * t1112) * t1705);
t1740 = t1366 * t1479;
t1369 = sin(qJ(1,1));
t1351 = qJ(2,1) + qJ(3,1);
t1256 = sin(t1351);
t1409 = 2 * qJ(3,1);
t1413 = 2 * qJ(2,1);
t1345 = t1409 + t1413;
t1346 = t1409 + qJ(2,1);
t1349 = t1413 + qJ(3,1);
t1352 = qJ(2,1) - qJ(3,1);
t1368 = sin(qJ(2,1));
t1410 = -2 * qJ(3,1);
t1668 = qJ(1,1) - (2 * qJ(2,1));
t1673 = qJ(3,1) + qJ(1,1);
t1674 = -qJ(3,1) + qJ(1,1);
t1654 = ((cos(qJ(2,1) - t1674) + cos(qJ(2,1) + t1673)) * t1743 + (sin(t1410 + t1668) + sin(qJ(1,1) + t1345) + 0.2e1 * t1369) * pkin(2) + (-sin(qJ(3,1) - t1668) + sin(qJ(1,1) + t1349) + sin(t1674) + sin(t1673)) * pkin(1)) / ((-sin(t1346) + t1368) * pkin(2) + (sin(t1352) - t1256) * pkin(1));
t1516 = t1381 * t1654;
t1454 = t1422 * t1516;
t1228 = t1369 * t1699;
t1376 = cos(qJ(3,1));
t1324 = t1376 ^ 2;
t1378 = cos(qJ(1,1));
t1367 = sin(qJ(3,1));
t1604 = t1367 * t1368;
t1179 = -t1228 * t1604 + (t1324 - 0.1e1) * t1378 * pkin(2);
t1360 = legFrame(1,2);
t1291 = sin(t1360);
t1294 = cos(t1360);
t1377 = cos(qJ(2,1));
t1325 = t1377 ^ 2;
t1498 = t1378 * t1604;
t1431 = pkin(1) * t1498 + (t1498 * t1710 + t1228) * t1376;
t1603 = t1367 * t1376;
t1538 = pkin(2) * t1603;
t1688 = pkin(2) * t1376;
t1563 = 0.2e1 * t1688;
t1628 = (pkin(1) + t1563) * t1367;
t1299 = pkin(1) * t1376;
t1200 = t1324 * t1710 - pkin(2) + t1299;
t1633 = t1200 * t1378;
t1634 = t1200 * t1368;
t1127 = (-t1291 * t1633 + t1294 * t1628) * t1325 + (t1431 * t1291 + t1294 * t1634) * t1377 + t1179 * t1291 - t1294 * t1538;
t1225 = pkin(1) + t1688;
t1434 = pkin(2) * t1604 - t1225 * t1377;
t1182 = 0.1e1 / t1434;
t1319 = 0.1e1 / t1367;
t1621 = t1319 * t1422;
t1507 = t1182 * t1621;
t1121 = t1127 * t1382 * t1507;
t1128 = (t1291 * t1628 + t1294 * t1633) * t1325 + (t1291 * t1634 - t1431 * t1294) * t1377 - t1179 * t1294 - t1291 * t1538;
t1122 = t1128 * t1383 * t1507;
t1580 = -t1121 - t1122;
t1113 = t1454 / 0.2e1 + t1580;
t1504 = t1319 * t1595;
t1173 = -t1369 * t1434 + t1378 * t1699;
t1639 = t1173 * t1381;
t1602 = t1367 * t1377;
t1537 = pkin(2) * t1602;
t1627 = t1225 * t1368;
t1185 = t1537 + t1627;
t1727 = t1434 * t1378 + t1228;
t1158 = -t1291 * t1185 + t1294 * t1727;
t1642 = t1158 * t1383;
t1157 = -t1294 * t1185 - t1291 * t1727;
t1643 = t1157 * t1382;
t1721 = (t1642 / 0.2e1 + t1643 / 0.2e1 + t1639 / 0.2e1) * t1504;
t1095 = t1113 + t1721;
t1425 = t1319 * t1419 * (t1639 + t1642 + t1643);
t1116 = t1422 * t1425;
t1104 = t1116 + t1113;
t1098 = t1418 * t1104;
t1107 = t1421 * t1113;
t1281 = cos(t1351);
t1197 = 0.1e1 / (pkin(1) * t1377 + pkin(2) * t1281);
t1152 = (-t1378 * t1381 + (t1291 * t1382 - t1294 * t1383) * t1369) * t1197;
t1408 = 3 * qJ(3,1);
t1344 = t1408 + t1413;
t1250 = sin(t1344);
t1251 = sin(t1345);
t1407 = 4 * qJ(3,1);
t1348 = t1413 + t1407;
t1253 = sin(t1348);
t1254 = sin(t1349);
t1412 = 3 * qJ(2,1);
t1275 = cos((t1408 + t1412));
t1276 = cos((t1408 + qJ(2,1)));
t1277 = cos((t1409 + t1412));
t1278 = cos(t1346);
t1279 = cos((t1412 + t1407));
t1280 = cos((t1412 + qJ(3,1)));
t1282 = cos(t1352);
t1310 = sin(t1409);
t1311 = sin(t1413);
t1347 = t1410 + t1413;
t1350 = t1413 - qJ(3,1);
t1411 = 4 * qJ(2,1);
t1475 = t1418 * t1580;
t1648 = t1152 * t1699;
t1543 = pkin(1) * t1648;
t1481 = pkin(2) * t1543;
t1492 = (t1157 * t1449 + t1158 * t1448 + t1173 * t1450) * t1319;
t1528 = sin(t1408) * t1687;
t1589 = t1421 * sin(t1350);
t1534 = pkin(2) * t1589;
t1583 = t1098 + t1107;
t1592 = t1420 * sin(t1347);
t1707 = 0.4e1 * t1095;
t1730 = t1377 + t1277;
t1733 = cos((qJ(2,1) + t1410)) + cos(t1412);
t1734 = t1279 + t1278;
t1071 = (((-t1589 / 0.2e1 + t1250 * t1697 + t1254 * t1496 + t1301 * t1367 + (t1251 + t1310 - t1311) * t1700) * t1104 - ((t1279 / 0.4e1 - t1277 / 0.4e1 + t1278 / 0.4e1 - t1377 / 0.4e1) * pkin(2) + (t1275 / 0.4e1 - t1280 / 0.4e1 + t1276 / 0.4e1 - t1281 / 0.4e1) * pkin(1)) * t1648) * t1116 * t1562 + ((t1116 * t1276 * t1523 + t1730 * (t1107 - t1098) * t1743 + t1734 * t1104 * t1549 + ((t1253 + sin((t1411 + t1407))) * t1570 + sin((t1411 + qJ(3,1))) * t1561 - sin((t1411 + t1409)) * t1692 + t1420 * sin(t1411) - t1417 * sin((t1411 + 5 * qJ(3,1))) + t1487 * sin((t1408 + t1411)) + t1250 * t1567 + t1251 * t1571 + t1254 * t1566 + t1310 * t1572 + t1311 * t1573 + t1367 * t1568 - 0.3e1 * t1528 + 0.6e1 * t1534 + t1592) * t1152 + (t1282 * t1522 + t1733 * t1548) * t1113 + ((t1113 - t1721) * t1281 - (-t1275 + t1280) * t1095) * t1744) * t1152 / 0.4e1 + (-(t1425 * t1725 + t1516 * t1726 + t1107 + 0.4e1 * t1475) * pkin(1) * t1251 + t1583 * t1250 * t1711 + t1534 * t1707 - t1113 * t1253 * t1691 + t1113 * t1592 + t1104 * t1254 * t1488 + (0.3e1 * t1475 + t1107 + (0.3e1 / 0.2e1 * t1516 + 0.2e1 * t1425) * t1596) * t1310 * t1713 + ((0.4e1 / 0.5e1 * t1642 + 0.4e1 / 0.5e1 * t1643 + 0.4e1 / 0.5e1 * t1639) * t1504 + t1113) * t1311 * t1569 - 0.2e1 * t1113 * t1528 + ((-0.2e1 / 0.3e1 * t1122 - 0.2e1 / 0.3e1 * t1121 + t1454 / 0.3e1 + t1492) * t1418 + t1421 * (t1492 + t1113)) * t1367 * t1712 + 0.2e1 * (t1275 + t1281) * t1481 - 0.2e1 * (t1282 + t1280) * t1481 + (t1730 * t1497 - t1733 * t1598 + t1734 * t1599) * t1152) * t1113 / 0.2e1) * t1422) / (t1284 * cos(t1345) + cos(t1348) * t1698 + cos(t1347) * t1696 + t1285 * cos(t1413) - t1301 * cos(t1409) + (-cos(t1350) - cos(t1344) + 0.2e1 * cos(t1349) - cos(t1408) + t1376) * t1700 + t1301);
t1693 = pkin(1) * t1113;
t1531 = t1368 * t1693;
t1601 = t1368 * t1376;
t1618 = t1324 * t1418;
t1649 = t1152 * t1325;
t1077 = (t1256 * t1648 + t1104 * (t1299 + pkin(2))) * t1116 * t1621 + ((t1368 * t1543 + (0.2e1 * t1095 * t1299 - (-t1601 - t1602) * t1648) * pkin(2) + t1583) * t1113 + ((pkin(1) * t1563 + t1574 + 0.2e1 * t1618) * t1649 + (-0.2e1 * t1627 * t1537 + t1229 - t1618) * t1152 + (t1531 - (-pkin(2) * t1601 - t1537) * t1104) * t1699) * t1152) * t1504;
t1083 = (t1104 * t1256 * t1711 - 0.2e1 * t1531 - t1648) * t1152 * t1197;
t1101 = t1104 ^ 2;
t1110 = t1113 ^ 2;
t1624 = t1288 * t1367;
t1463 = -t1287 * t1376 - t1624;
t1577 = t1367 * t1287 - t1288 * t1376;
t1161 = -(-t1215 + t1577) * t1368 - (Ifges(2,6) + t1463) * t1377;
t1164 = -t1577 * t1368 - t1463 * t1377;
t1219 = t1357 * t1324;
t1675 = Ifges(3,4) * t1367;
t1235 = 0.4e1 * t1675;
t1681 = mrSges(3,2) * t1367;
t1557 = pkin(1) * t1681;
t1170 = t1219 + (t1235 + t1315) * t1376 - 0.2e1 * t1557 + t1216;
t1684 = mrSges(3,1) * t1367;
t1232 = pkin(1) * t1684;
t1615 = t1355 * t1367;
t1519 = t1104 * t1615;
t1525 = t1095 * t1701;
t1661 = t1104 * t1324;
t1550 = -0.4e1 * t1661;
t1600 = t1368 * t1377;
t1678 = Ifges(3,4) * t1324;
t1704 = 0.2e1 * t1152;
t1716 = t1356 + t1232;
t1478 = t1197 * ((-t1170 * t1325 - 0.4e1 * (t1678 + (t1295 * t1367 + t1300) * t1376 - t1232 / 0.2e1 + t1296) * t1600 + t1355 * t1324 + t1603 * t1415 + t1440) * t1083 + t1161 * t1071 + t1164 * t1077 + 0.8e1 * ((-t1519 / 0.2e1 + mrSges(3,2) * t1525) * t1376 + t1525 * t1684 + t1296 * t1113 + (t1661 - t1116 / 0.2e1) * Ifges(3,4)) * t1649 + (-t1110 * t1215 + t1577 * t1101 + (-0.8e1 * (t1095 * t1556 + t1104 * t1675) * t1376 + t1557 * t1707 + t1113 * t1703 + (0.2e1 * t1116 + t1550) * t1355) * t1368 * t1152) * t1377 + Ifges(3,4) * t1152 * t1550 + (t1101 * t1287 * t1368 + (mrSges(3,2) * t1693 + t1519) * t1704) * t1376 + (-Ifges(2,6) * t1110 + t1101 * t1624) * t1368 + (Ifges(3,4) * t1116 + t1716 * t1113) * t1704);
t1739 = t1369 * t1478;
t1724 = (mrSges(3,2) * t1376 + t1684) * pkin(1);
t1723 = (mrSges(3,2) * t1373 + t1685) * pkin(1);
t1722 = (mrSges(3,2) * t1370 + t1686) * pkin(1);
t1547 = -Ifges(2,3) - Ifges(3,3) - t1390;
t1503 = t1355 * t1613;
t1502 = t1355 * t1608;
t1501 = t1355 * t1603;
t1147 = t1150 ^ 2;
t1135 = 0.2e1 * t1147 * t1680;
t1439 = (-mrSges(3,1) * t1370 + t1683) * pkin(1);
t1192 = -Ifges(3,3) + t1439;
t1474 = (-Ifges(3,3) * t1075 + t1069 * t1192 + t1081 * t1162 + t1135 + t1108 * t1722 + ((-0.4e1 * t1680 + (t1357 * t1361 + t1379) * t1370 + t1230 + t1415) * t1321 + (t1217 + (t1233 + t1380) * t1370 - t1559 - t1355) * t1610 - t1503 - Ifges(3,4)) * t1147) * t1317;
t1148 = t1151 ^ 2;
t1136 = 0.2e1 * t1148 * t1679;
t1438 = (-mrSges(3,1) * t1373 + t1682) * pkin(1);
t1193 = -Ifges(3,3) + t1438;
t1473 = (-Ifges(3,3) * t1076 + t1070 * t1193 + t1082 * t1163 + t1136 + t1109 * t1723 + ((-0.4e1 * t1679 + (t1357 * t1364 + t1379) * t1373 + t1231 + t1415) * t1323 + (t1218 + (t1234 + t1380) * t1373 - t1558 - t1355) * t1605 - t1502 - Ifges(3,4)) * t1148) * t1318;
t1149 = t1152 ^ 2;
t1137 = 0.2e1 * t1149 * t1678;
t1437 = (-mrSges(3,1) * t1376 + t1681) * pkin(1);
t1194 = -Ifges(3,3) + t1437;
t1472 = (-Ifges(3,3) * t1077 + t1071 * t1194 + t1083 * t1164 + t1137 + t1110 * t1724 + ((-0.4e1 * t1678 + (t1357 * t1367 + t1379) * t1376 + t1232 + t1415) * t1325 + (t1219 + (t1235 + t1380) * t1376 - t1557 - t1355) * t1600 - t1501 - Ifges(3,4)) * t1149) * t1319;
t1063 = t1159 * t1081 + (0.2e1 * t1439 + t1547) * t1069 + t1192 * t1075;
t1078 = t1135 - (t1147 + (0.2e1 * t1111 + t1114) * t1114) * t1722 + (0.2e1 * (-0.2e1 * t1680 + (t1379 + t1617) * t1370 + t1718) * t1321 + t1168 * t1610 - t1503 - t1356) * t1147;
t1447 = t1180 * t1317 * (t1063 + t1078);
t1064 = t1160 * t1082 + (0.2e1 * t1438 + t1547) * t1070 + t1193 * t1076;
t1079 = t1136 - (t1148 + (0.2e1 * t1112 + t1115) * t1115) * t1723 + (0.2e1 * (-0.2e1 * t1679 + (t1379 + t1616) * t1373 + t1717) * t1323 + t1169 * t1605 - t1502 - t1356) * t1148;
t1446 = t1181 * t1318 * (t1064 + t1079);
t1065 = t1161 * t1083 + (0.2e1 * t1437 + t1547) * t1071 + t1194 * t1077;
t1080 = t1137 - (t1149 + (0.2e1 * t1113 + t1116) * t1116) * t1724 + (0.2e1 * (-0.2e1 * t1678 + (t1379 + t1615) * t1376 + t1716) * t1325 + t1170 * t1600 - t1501 - t1356) * t1149;
t1445 = t1182 * t1319 * (t1065 + t1080);
t1 = [-t1294 * t1739 - t1293 * t1740 - t1292 * t1741 + (-t1128 * t1445 - t1126 * t1446 - t1124 * t1447 + (t1154 * t1474 + t1156 * t1473 + t1158 * t1472) * t1419) * t1422; t1291 * t1739 + t1290 * t1740 + t1289 * t1741 + (-t1127 * t1445 - t1125 * t1446 - t1123 * t1447 + (t1153 * t1474 + t1155 * t1473 + t1157 * t1472) * t1419) * t1422; -t1378 * t1478 - t1375 * t1479 - t1372 * t1480 + ((t1065 / 0.2e1 + t1080 / 0.2e1) * t1654 + (t1064 / 0.2e1 + t1079 / 0.2e1) * t1655 + (t1063 / 0.2e1 + t1078 / 0.2e1) * t1656 + (t1171 * t1474 + t1172 * t1473 + t1173 * t1472) * t1419) * t1422;];
taucX  = t1;
