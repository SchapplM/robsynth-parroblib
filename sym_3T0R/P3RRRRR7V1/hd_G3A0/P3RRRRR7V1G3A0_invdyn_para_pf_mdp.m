% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRRRR7V1G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [5x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,d1,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR7V1G3A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 09:03
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR7V1G3A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(5,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [5 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: pkin has to be [5x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P3RRRRR7V1G3A0_invdyn_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 08:58:18
% EndTime: 2020-08-07 09:00:29
% DurationCPUTime: 136.74s
% Computational Cost: add. (1450281->1509), mult. (3762642->2333), div. (40836->30), fcn. (2351394->201), ass. (0->988)
t3688 = cos(qJ(1,3));
t4271 = legFrame(3,2);
t3591 = cos(t4271);
t3696 = xDP(1);
t4046 = sin(t4271);
t4277 = xDP(2);
t3835 = t4046 * t4277;
t3754 = -t3591 * t3696 + t3835;
t4324 = t3754 * t3688;
t3691 = cos(qJ(1,2));
t4272 = legFrame(2,2);
t3592 = cos(t4272);
t4047 = sin(t4272);
t3836 = t4047 * t4277;
t3755 = -t3592 * t3696 + t3836;
t4323 = t3755 * t3691;
t3694 = cos(qJ(1,1));
t4273 = legFrame(1,2);
t3593 = cos(t4273);
t4048 = sin(t4273);
t3837 = t4048 * t4277;
t3756 = -t3593 * t3696 + t3837;
t4322 = t3756 * t3694;
t3697 = -pkin(5) - pkin(4);
t4274 = sin(qJ(1,3));
t3524 = t4274 * t3697;
t3686 = cos(qJ(3,3));
t4209 = t3686 * pkin(2);
t3519 = pkin(1) + t4209;
t3687 = cos(qJ(2,3));
t3680 = sin(qJ(3,3));
t3681 = sin(qJ(2,3));
t4115 = t3680 * t3681;
t3792 = pkin(2) * t4115 - t3519 * t3687;
t3784 = t3688 * t3792 + t3524;
t4275 = sin(qJ(1,2));
t3525 = t4275 * t3697;
t3689 = cos(qJ(3,2));
t4207 = t3689 * pkin(2);
t3521 = pkin(1) + t4207;
t3690 = cos(qJ(2,2));
t3682 = sin(qJ(3,2));
t3683 = sin(qJ(2,2));
t4110 = t3682 * t3683;
t3791 = pkin(2) * t4110 - t3521 * t3690;
t3785 = t3691 * t3791 + t3525;
t4276 = sin(qJ(1,1));
t3526 = t4276 * t3697;
t3692 = cos(qJ(3,1));
t4205 = t3692 * pkin(2);
t3523 = pkin(1) + t4205;
t3693 = cos(qJ(2,1));
t3684 = sin(qJ(3,1));
t3685 = sin(qJ(2,1));
t4105 = t3684 * t3685;
t3790 = pkin(2) * t4105 - t3523 * t3693;
t3786 = t3694 * t3790 + t3526;
t4321 = 0.2e1 * t3697;
t3728 = pkin(2) ^ 2;
t4320 = 0.2e1 * t3728;
t3676 = -t3728 / 0.2e1;
t3731 = pkin(1) ^ 2;
t3583 = t3676 + t3731;
t3644 = t3692 ^ 2;
t4093 = (pkin(1) + pkin(2)) * (pkin(1) - pkin(2));
t4319 = -0.2e1 * t3644 * t4093 + 0.2e1 * t3583;
t3640 = t3689 ^ 2;
t4318 = -0.2e1 * t3640 * t4093 + 0.2e1 * t3583;
t3636 = t3686 ^ 2;
t4317 = -0.2e1 * t3636 * t4093 + 0.2e1 * t3583;
t4316 = 0.4e1 * pkin(2);
t4096 = t3692 * t3684;
t3646 = t3693 ^ 2;
t4240 = 0.4e1 * t3646 - 0.2e1;
t4315 = t4240 * t4096;
t4098 = t3689 * t3682;
t3642 = t3690 ^ 2;
t4243 = 0.4e1 * t3642 - 0.2e1;
t4314 = t4243 * t4098;
t4100 = t3686 * t3680;
t3638 = t3687 ^ 2;
t4246 = 0.4e1 * t3638 - 0.2e1;
t4313 = t4246 * t4100;
t3703 = 0.4e1 * qJ(3,3);
t3708 = 0.3e1 * qJ(2,3);
t3552 = cos(t3703 + t3708);
t3705 = 0.2e1 * qJ(3,3);
t3647 = t3705 + qJ(2,3);
t3554 = cos(t3647);
t4312 = t3552 + t3554;
t3706 = -0.2e1 * qJ(3,3);
t4311 = cos(qJ(2,3) + t3706) + cos(t3708);
t3711 = 0.4e1 * qJ(3,2);
t3716 = 0.3e1 * qJ(2,2);
t3562 = cos(t3711 + t3716);
t3713 = 0.2e1 * qJ(3,2);
t3657 = t3713 + qJ(2,2);
t3566 = cos(t3657);
t4310 = t3562 + t3566;
t3714 = -0.2e1 * qJ(3,2);
t4309 = cos(qJ(2,2) + t3714) + cos(t3716);
t3719 = 0.4e1 * qJ(3,1);
t3724 = 0.3e1 * qJ(2,1);
t3572 = cos(t3719 + t3724);
t3721 = 0.2e1 * qJ(3,1);
t3667 = t3721 + qJ(2,1);
t3574 = cos(t3667);
t4308 = t3572 + t3574;
t3722 = -0.2e1 * qJ(3,1);
t4307 = cos(qJ(2,1) + t3722) + cos(t3724);
t3556 = cos(t3708 + t3705);
t4306 = t3687 + t3556;
t3565 = cos(t3713 + t3716);
t4305 = t3690 + t3565;
t3576 = cos(t3724 + t3721);
t4304 = t3693 + t3576;
t4303 = -0.2e1 * pkin(1);
t4302 = -0.3e1 * pkin(2);
t4301 = -0.2e1 * pkin(2);
t4300 = 0.2e1 * pkin(2);
t3732 = 0.1e1 / pkin(1);
t3629 = 0.1e1 / t3680;
t3435 = t4274 * t3835;
t4033 = t3591 * t4274;
t3921 = t3696 * t4033;
t3695 = xDP(3);
t4099 = t3688 * t3695;
t3303 = t3921 / 0.2e1 - t3435 / 0.2e1 + t4099;
t3506 = t3695 * t4274;
t3319 = t3506 + t4324;
t4114 = t3680 * t3687;
t4121 = (t3686 + 0.1e1) * (t3686 - 0.1e1);
t4225 = pkin(2) * t3681;
t3327 = t3519 * t4114 + t4121 * t4225;
t3378 = t3591 * t4277 + t3696 * t4046;
t4139 = t3378 * t3681;
t3354 = pkin(1) * t4139;
t3363 = pkin(1) * t3378;
t3601 = pkin(1) * t3686;
t3609 = t3728 + t3731;
t3612 = sin(t3705);
t3635 = t3686 * t3636;
t3637 = t3687 * t3638;
t3744 = 0.2e1 * t4324;
t3594 = t3688 * pkin(2);
t3910 = t3680 * t3524;
t3775 = t3681 * t3910 + t3594;
t3799 = t3524 * t3754 + t3354;
t3981 = t3680 * t4324;
t4080 = -pkin(1) * t3981 + pkin(2) * t3378;
t4229 = pkin(2) * t3636;
t3804 = -0.2e1 * t3378 * t4229 + t4080;
t3709 = 0.2e1 * qJ(2,3);
t3622 = cos(t3709);
t3834 = t3327 * t3622 * t3506;
t4113 = t3681 * t3687;
t3968 = t3680 * t4113;
t3867 = t3686 * t3968;
t3613 = sin(t3709);
t3918 = t3613 * t3506;
t3312 = -t3435 + t3921 + t4099;
t4158 = t3312 * t3697;
t4042 = pkin(1) * t4158;
t3930 = t3681 * t4042;
t4226 = pkin(2) * t3680;
t4067 = 0.2e1 * t4226;
t3938 = t3688 * t4067;
t4094 = t3695 * t3697;
t3965 = t3688 * t4094;
t4112 = t3681 * t3688;
t3980 = t3754 * t4112;
t3982 = t3378 * t4100;
t4049 = 0.2e1 * t4093;
t4054 = 0.2e1 * t4113;
t4062 = pkin(1) * t4226;
t4076 = 0.4e1 * t3635 - 0.5e1 * t3686;
t4092 = t3728 * t3378;
t4111 = t3681 * t3697;
t4166 = (-pkin(1) * t4324 + t3378 * t4067) * t3686;
t4208 = t3687 * pkin(2);
t3620 = cos(t3705);
t4232 = pkin(2) * t3620;
t4236 = pkin(1) * t3695;
t4239 = pkin(1) * t3680;
t4248 = 0.2e1 * t3636 - 0.1e1;
t4278 = pkin(1) * pkin(2);
t4290 = 0.4e1 * t3636;
t3246 = -(t3834 + ((-t3981 * t4301 + t3363) * t3686 - t3804) * t3637 + (-t3799 * t3680 + (pkin(2) * t4248 * t4324 - t4166) * t3681) * t3638 + ((-t3363 - (t3524 * t3681 + t3938) * t3754) * t3686 + t3804) * t3687 - t3980 * t4229 + t3982 * t4225 + (pkin(2) * t4112 + t3910) * t3754) * t4232 + pkin(2) * (t3327 * t3918 + ((t3378 * t4239 + t4166) * t3638 + (-t3681 * t4080 + t3686 * t3799) * t3687 - t3775 * t3754) * t3687 + ((t3636 * t4054 - t4100) * t3378 - (t4248 * t3638 - t3636 - 0.2e1 * t3867) * t4324) * t4208) * t3612 + t3792 * pkin(1) * t3918 * t4121 - t3834 * t3601 + (-t3686 * t3981 * t4049 + t3378 * t4317 + (-(t4290 - 0.3e1) * t3981 - t4076 * t3378) * t4278) * t3637 + ((((t3354 - t3965) * t4290 - 0.3e1 * t3354 + t3303 * t4321) * t3680 - t4076 * pkin(1) * t3980) * pkin(2) + 0.2e1 * (t4093 * t4139 - t4042) * t4100 + t3980 * t4317) * t3638 + ((-0.2e1 * t3681 * t3965 + t3363) * t3635 * t4300 + (-(t3506 - t3744) * t4062 - 0.2e1 * t3930 - 0.2e1 * t4092) * t3636 + ((-t3506 * t3609 - t3728 * t3744) * t3680 + (-0.4e1 / 0.3e1 * (t3921 / 0.4e1 - t3435 / 0.4e1 + t4099) * t4111 + t3363) * t4302) * t3686 - (t3506 + 0.3e1 * t4324) * t4062 + 0.2e1 * t3930 + t4092) * t3687 - pkin(2) * ((-t3636 * t4099 + t3303) * t3680 * t4321 + ((t3319 * t3636 - t3319 - t3982) * pkin(2) + (t3635 - t3686) * t4236 * t4274) * t3681);
t3529 = pkin(1) * t4209;
t3702 = -0.3e1 / 0.2e1 * pkin(1);
t4251 = t3728 / 0.2e1;
t3273 = (t3519 * t4113 + (t3638 - 0.1e1) * t4226) * t4232 / 0.2e1 - t3792 * t3612 * t4208 / 0.2e1 + pkin(2) * (pkin(1) * t3636 - t4209 / 0.2e1 + t3702) * t4113 + ((t3529 + t3583) * t3638 + t4251) * t3680;
t4187 = t3246 / t3273;
t4015 = t3629 * t4187;
t3858 = t4015 / 0.2e1;
t3237 = t3732 * t3858;
t3321 = t3688 * t3697 - t3792 * t4274;
t4039 = pkin(2) * t4114;
t4124 = t3519 * t3681;
t3369 = t4039 + t4124;
t3255 = (-t3369 * t4277 + t3696 * t3784) * t3591 + (-t3369 * t3696 - t3784 * t4277) * t4046 + t3695 * t3321;
t3729 = 0.1e1 / pkin(2);
t4088 = t3729 * t3732;
t4012 = t3255 * t4088;
t3888 = t3629 * t4012;
t3222 = t3237 + t3888 / 0.2e1;
t4299 = 0.2e1 * t3222;
t3631 = 0.1e1 / t3682;
t3436 = t4275 * t3836;
t4032 = t3592 * t4275;
t3920 = t3696 * t4032;
t4097 = t3691 * t3695;
t3304 = t3920 / 0.2e1 - t3436 / 0.2e1 + t4097;
t3507 = t3695 * t4275;
t3320 = t3507 + t4323;
t4109 = t3682 * t3690;
t4120 = (t3689 + 0.1e1) * (t3689 - 0.1e1);
t4223 = pkin(2) * t3683;
t3328 = t3521 * t4109 + t4120 * t4223;
t3380 = t3592 * t4277 + t3696 * t4047;
t4137 = t3380 * t3683;
t3355 = pkin(1) * t4137;
t3364 = pkin(1) * t3380;
t3602 = pkin(1) * t3689;
t3615 = sin(t3713);
t3639 = t3689 * t3640;
t3641 = t3690 * t3642;
t3743 = 0.2e1 * t4323;
t3595 = t3691 * pkin(2);
t3912 = t3682 * t3525;
t3776 = t3683 * t3912 + t3595;
t3800 = t3525 * t3755 + t3355;
t3978 = t3682 * t4323;
t4079 = -pkin(1) * t3978 + pkin(2) * t3380;
t4228 = pkin(2) * t3640;
t3803 = -0.2e1 * t3380 * t4228 + t4079;
t3717 = 0.2e1 * qJ(2,2);
t3625 = cos(t3717);
t3833 = t3328 * t3625 * t3507;
t4108 = t3683 * t3690;
t3967 = t3682 * t4108;
t3866 = t3689 * t3967;
t3616 = sin(t3717);
t3917 = t3616 * t3507;
t3314 = -t3436 + t3920 + t4097;
t4155 = t3314 * t3697;
t4041 = pkin(1) * t4155;
t3929 = t3683 * t4041;
t4224 = pkin(2) * t3682;
t4066 = 0.2e1 * t4224;
t3937 = t3691 * t4066;
t3963 = t3691 * t4094;
t4107 = t3683 * t3691;
t3964 = t3755 * t4107;
t3979 = t3380 * t4098;
t4052 = 0.2e1 * t4108;
t4061 = pkin(1) * t4224;
t4075 = 0.4e1 * t3639 - 0.5e1 * t3689;
t4091 = t3728 * t3380;
t4106 = t3683 * t3697;
t4165 = (-pkin(1) * t4323 + t3380 * t4066) * t3689;
t4206 = t3690 * pkin(2);
t3623 = cos(t3713);
t4231 = pkin(2) * t3623;
t4238 = pkin(1) * t3682;
t4245 = 0.2e1 * t3640 - 0.1e1;
t4288 = 0.4e1 * t3640;
t3247 = -(t3833 + ((-t3978 * t4301 + t3364) * t3689 - t3803) * t3641 + (-t3800 * t3682 + (pkin(2) * t4245 * t4323 - t4165) * t3683) * t3642 + ((-t3364 - (t3525 * t3683 + t3937) * t3755) * t3689 + t3803) * t3690 - t3964 * t4228 + t3979 * t4223 + (pkin(2) * t4107 + t3912) * t3755) * t4231 + (t3328 * t3917 + ((t3380 * t4238 + t4165) * t3642 + (-t3683 * t4079 + t3689 * t3800) * t3690 - t3776 * t3755) * t3690 + ((t3640 * t4052 - t4098) * t3380 - (t4245 * t3642 - t3640 - 0.2e1 * t3866) * t4323) * t4206) * pkin(2) * t3615 + t3791 * pkin(1) * t3917 * t4120 - t3833 * t3602 + (-t3689 * t3978 * t4049 + t3380 * t4318 + (-(t4288 - 0.3e1) * t3978 - t4075 * t3380) * t4278) * t3641 + ((((t3355 - t3963) * t4288 - 0.3e1 * t3355 + t3304 * t4321) * t3682 - t4075 * pkin(1) * t3964) * pkin(2) + 0.2e1 * (t4093 * t4137 - t4041) * t4098 + t3964 * t4318) * t3642 + ((-0.2e1 * t3683 * t3963 + t3364) * t3639 * t4300 + (-(t3507 - t3743) * t4061 - 0.2e1 * t3929 - 0.2e1 * t4091) * t3640 + ((-t3507 * t3609 - t3728 * t3743) * t3682 + (-0.4e1 / 0.3e1 * (t3920 / 0.4e1 - t3436 / 0.4e1 + t4097) * t4106 + t3364) * t4302) * t3689 - (t3507 + 0.3e1 * t4323) * t4061 + 0.2e1 * t3929 + t4091) * t3690 - pkin(2) * ((-t3640 * t4097 + t3304) * t3682 * t4321 + ((t3320 * t3640 - t3320 - t3979) * pkin(2) + (t3639 - t3689) * t4236 * t4275) * t3683);
t3530 = pkin(1) * t4207;
t3274 = (t3521 * t4108 + (t3642 - 0.1e1) * t4224) * t4231 / 0.2e1 - t3791 * t3615 * t4206 / 0.2e1 + pkin(2) * (t3640 * pkin(1) - t4207 / 0.2e1 + t3702) * t4108 + ((t3530 + t3583) * t3642 + t4251) * t3682;
t4186 = t3247 / t3274;
t4014 = t3631 * t4186;
t3856 = t4014 / 0.2e1;
t3238 = t3732 * t3856;
t3322 = t3691 * t3697 - t3791 * t4275;
t4038 = pkin(2) * t4109;
t4123 = t3521 * t3683;
t3370 = t4038 + t4123;
t3256 = (-t3370 * t4277 + t3696 * t3785) * t3592 + (-t3370 * t3696 - t3785 * t4277) * t4047 + t3695 * t3322;
t4011 = t3256 * t4088;
t3887 = t3631 * t4011;
t3223 = t3238 + t3887 / 0.2e1;
t4298 = 0.2e1 * t3223;
t3633 = 0.1e1 / t3684;
t3437 = t4276 * t3837;
t4031 = t3593 * t4276;
t3919 = t3696 * t4031;
t4095 = t3694 * t3695;
t3305 = t3919 / 0.2e1 - t3437 / 0.2e1 + t4095;
t3508 = t3695 * t4276;
t3318 = t3508 + t4322;
t4104 = t3684 * t3693;
t4119 = (t3692 + 0.1e1) * (t3692 - 0.1e1);
t4221 = pkin(2) * t3685;
t3329 = t3523 * t4104 + t4119 * t4221;
t3382 = t3593 * t4277 + t3696 * t4048;
t4135 = t3382 * t3685;
t3356 = pkin(1) * t4135;
t3365 = pkin(1) * t3382;
t3596 = t3692 * pkin(1);
t3618 = sin(t3721);
t3643 = t3692 * t3644;
t3645 = t3693 * t3646;
t3742 = 0.2e1 * t4322;
t3597 = t3694 * pkin(2);
t3914 = t3684 * t3526;
t3777 = t3685 * t3914 + t3597;
t3801 = t3526 * t3756 + t3356;
t3976 = t3684 * t4322;
t4078 = -pkin(1) * t3976 + pkin(2) * t3382;
t4227 = pkin(2) * t3644;
t3802 = -0.2e1 * t3382 * t4227 + t4078;
t3725 = 0.2e1 * qJ(2,1);
t3628 = cos(t3725);
t3832 = t3329 * t3628 * t3508;
t4103 = t3685 * t3693;
t3966 = t3684 * t4103;
t3865 = t3692 * t3966;
t3619 = sin(t3725);
t3916 = t3619 * t3508;
t3316 = -t3437 + t3919 + t4095;
t4152 = t3316 * t3697;
t4040 = pkin(1) * t4152;
t3928 = t3685 * t4040;
t4222 = pkin(2) * t3684;
t4065 = 0.2e1 * t4222;
t3936 = t3694 * t4065;
t3962 = t3694 * t4094;
t4102 = t3685 * t3694;
t3975 = t3756 * t4102;
t3977 = t3382 * t4096;
t4050 = 0.2e1 * t4103;
t4060 = pkin(1) * t4222;
t4074 = 0.4e1 * t3643 - 0.5e1 * t3692;
t4090 = t3728 * t3382;
t4101 = t3685 * t3697;
t4164 = (-pkin(1) * t4322 + t3382 * t4065) * t3692;
t4220 = pkin(2) * t3693;
t3626 = cos(t3721);
t4230 = pkin(2) * t3626;
t4237 = pkin(1) * t3684;
t4242 = 0.2e1 * t3644 - 0.1e1;
t4286 = 0.4e1 * t3644;
t3248 = -(t3832 + ((-t3976 * t4301 + t3365) * t3692 - t3802) * t3645 + (-t3801 * t3684 + (pkin(2) * t4242 * t4322 - t4164) * t3685) * t3646 + ((-t3365 - (t3526 * t3685 + t3936) * t3756) * t3692 + t3802) * t3693 - t3975 * t4227 + t3977 * t4221 + (pkin(2) * t4102 + t3914) * t3756) * t4230 + (t3329 * t3916 + ((t3382 * t4237 + t4164) * t3646 + (-t3685 * t4078 + t3692 * t3801) * t3693 - t3777 * t3756) * t3693 + ((t3644 * t4050 - t4096) * t3382 - (t4242 * t3646 - t3644 - 0.2e1 * t3865) * t4322) * t4220) * pkin(2) * t3618 + t3790 * pkin(1) * t3916 * t4119 - t3832 * t3596 + (-t3692 * t3976 * t4049 + t3382 * t4319 + (-(t4286 - 0.3e1) * t3976 - t4074 * t3382) * t4278) * t3645 + ((((t3356 - t3962) * t4286 - 0.3e1 * t3356 + t3305 * t4321) * t3684 - t4074 * pkin(1) * t3975) * pkin(2) + 0.2e1 * (t4093 * t4135 - t4040) * t4096 + t3975 * t4319) * t3646 + ((-0.2e1 * t3685 * t3962 + t3365) * t3643 * t4300 + (-(t3508 - t3742) * t4060 - 0.2e1 * t3928 - 0.2e1 * t4090) * t3644 + ((-t3508 * t3609 - t3728 * t3742) * t3684 + (-0.4e1 / 0.3e1 * (t3919 / 0.4e1 - t3437 / 0.4e1 + t4095) * t4101 + t3365) * t4302) * t3692 - (t3508 + 0.3e1 * t4322) * t4060 + 0.2e1 * t3928 + t4090) * t3693 - pkin(2) * ((-t3644 * t4095 + t3305) * t3684 * t4321 + ((t3318 * t3644 - t3318 - t3977) * pkin(2) + (t3643 - t3692) * t4236 * t4276) * t3685);
t3528 = pkin(1) * t4205;
t3275 = (t3523 * t4103 + (t3646 - 0.1e1) * t4222) * t4230 / 0.2e1 - t3790 * t3618 * t4220 / 0.2e1 + pkin(2) * (pkin(1) * t3644 - t4205 / 0.2e1 + t3702) * t4103 + ((t3528 + t3583) * t3646 + t4251) * t3684;
t4185 = t3248 / t3275;
t4013 = t3633 * t4185;
t3854 = t4013 / 0.2e1;
t3239 = t3732 * t3854;
t3323 = t3694 * t3697 - t3790 * t4276;
t4037 = pkin(2) * t4104;
t4122 = t3523 * t3685;
t3371 = t4037 + t4122;
t3257 = (-t3371 * t4277 + t3696 * t3786) * t3593 + (-t3371 * t3696 - t3786 * t4277) * t4048 + t3695 * t3323;
t4010 = t3257 * t4088;
t3886 = t3633 * t4010;
t3224 = t3239 + t3886 / 0.2e1;
t4297 = 0.2e1 * t3224;
t3674 = t3697 ^ 2;
t4296 = -0.9e1 * t3728 - 0.2e1 * t3731 - 0.4e1 * t3674;
t4077 = 0.4e1 / 0.3e1 * t3674 + t3731;
t4295 = 0.9e1 * t3728 + 0.3e1 * t4077;
t4294 = 0.3e1 * t4320 + 0.3e1 * t4077;
t3652 = t3709 + qJ(3,3);
t3558 = cos(t3652);
t4293 = 0.2e1 * t3558;
t3662 = t3717 + qJ(3,2);
t3568 = cos(t3662);
t4292 = 0.2e1 * t3568;
t3670 = t3725 + qJ(3,1);
t3578 = cos(t3670);
t4291 = 0.2e1 * t3578;
t4289 = -0.2e1 * t3638;
t4287 = -0.2e1 * t3642;
t4285 = -0.2e1 * t3646;
t4282 = g(1) / 0.4e1;
t4281 = -g(2) / 0.4e1;
t4280 = -g(3) / 0.2e1;
t4279 = g(3) / 0.2e1;
t3654 = qJ(2,3) + qJ(3,3);
t3925 = t4271 - t3654;
t3489 = qJ(1,3) - t3925;
t4270 = sin(t3489) / 0.4e1;
t3490 = qJ(1,3) + t3925;
t4269 = sin(t3490) / 0.4e1;
t3663 = qJ(2,2) + qJ(3,2);
t3926 = t4272 - t3663;
t3493 = qJ(1,2) - t3926;
t4268 = sin(t3493) / 0.4e1;
t3494 = qJ(1,2) + t3926;
t4267 = sin(t3494) / 0.4e1;
t3672 = qJ(2,1) + qJ(3,1);
t3927 = t4273 - t3672;
t3497 = qJ(1,1) - t3927;
t4266 = sin(t3497) / 0.4e1;
t3498 = qJ(1,1) + t3927;
t4265 = sin(t3498) / 0.4e1;
t3500 = t4271 + t3654;
t3488 = qJ(1,3) + t3500;
t4264 = cos(t3488) / 0.4e1;
t3461 = cos(t3490);
t4263 = -t3461 / 0.4e1;
t3491 = qJ(1,3) - t3500;
t3462 = cos(t3491);
t4262 = -t3462 / 0.4e1;
t3502 = t4272 + t3663;
t3492 = qJ(1,2) + t3502;
t4261 = cos(t3492) / 0.4e1;
t3465 = cos(t3494);
t4260 = -t3465 / 0.4e1;
t3495 = qJ(1,2) - t3502;
t3466 = cos(t3495);
t4259 = -t3466 / 0.4e1;
t3504 = t4273 + t3672;
t3496 = qJ(1,1) + t3504;
t4258 = cos(t3496) / 0.4e1;
t3469 = cos(t3498);
t4257 = -t3469 / 0.4e1;
t3499 = qJ(1,1) - t3504;
t3470 = cos(t3499);
t4256 = -t3470 / 0.4e1;
t4255 = -sin(t3925) / 0.2e1;
t4254 = -sin(t3926) / 0.2e1;
t4253 = -sin(t3927) / 0.2e1;
t4252 = -t3697 / 0.2e1;
t4250 = -t3731 / 0.2e1;
t3733 = 0.1e1 / pkin(1) ^ 2;
t4249 = -t3733 / 0.4e1;
t4247 = t4289 + 0.1e1;
t4244 = t4287 + 0.1e1;
t4241 = t4285 + 0.1e1;
t3537 = sin(t3654);
t4235 = pkin(2) * t3537;
t3544 = sin(t3663);
t4234 = pkin(2) * t3544;
t3551 = sin(t3672);
t4233 = pkin(2) * t3551;
t4219 = pkin(2) * t3731;
t3559 = cos(t3654);
t3432 = pkin(1) * t3687 + pkin(2) * t3559;
t3399 = 0.1e1 / t3432;
t3679 = xDDP(1);
t3911 = t3679 * t4033;
t3677 = xDDP(3);
t4118 = t3677 * t3688;
t3760 = -t3911 - t4118;
t3228 = t3237 + t3888;
t3960 = -t4187 / 0.2e1;
t3859 = t3629 * t3960;
t3991 = t3399 * t4158;
t3210 = -t3228 * t4235 + t3681 * t3859 + t3991;
t3400 = 0.1e1 / t3432 ^ 2;
t4132 = t3400 * t3629;
t3249 = t3312 * t3537 * t3255 * t3732 * t4132;
t3678 = xDDP(2);
t3838 = t4274 * t4046;
t3789 = t3399 * t3838;
t3345 = t3678 * t3789;
t3891 = t3732 * t4015;
t3819 = (pkin(1) * t3681 + t4235) * t3891;
t3771 = -t3249 + t3345 + (t3210 - t3819 / 0.2e1) * t3312 * t3400;
t3204 = t3399 * t3760 + t3771;
t4218 = pkin(4) * t3204;
t3569 = cos(t3663);
t3433 = pkin(1) * t3690 + pkin(2) * t3569;
t3401 = 0.1e1 / t3433;
t3913 = t3679 * t4032;
t4117 = t3677 * t3691;
t3761 = -t3913 - t4117;
t3229 = t3238 + t3887;
t3958 = -t4186 / 0.2e1;
t3857 = t3631 * t3958;
t3989 = t3401 * t4155;
t3211 = -t3229 * t4234 + t3683 * t3857 + t3989;
t3402 = 0.1e1 / t3433 ^ 2;
t4130 = t3402 * t3631;
t3250 = t3314 * t3544 * t3256 * t3732 * t4130;
t3839 = t4275 * t4047;
t3788 = t3401 * t3839;
t3346 = t3678 * t3788;
t3890 = t3732 * t4014;
t3818 = (pkin(1) * t3683 + t4234) * t3890;
t3770 = -t3250 + t3346 + (t3211 - t3818 / 0.2e1) * t3314 * t3402;
t3205 = t3401 * t3761 + t3770;
t4217 = pkin(4) * t3205;
t3579 = cos(t3672);
t3434 = pkin(1) * t3693 + pkin(2) * t3579;
t3403 = 0.1e1 / t3434;
t3915 = t3679 * t4031;
t4116 = t3677 * t3694;
t3762 = -t3915 - t4116;
t3230 = t3239 + t3886;
t3956 = -t4185 / 0.2e1;
t3855 = t3633 * t3956;
t3987 = t3403 * t4152;
t3212 = -t3230 * t4233 + t3685 * t3855 + t3987;
t3404 = 0.1e1 / t3434 ^ 2;
t4128 = t3404 * t3633;
t3251 = t3316 * t3551 * t3257 * t3732 * t4128;
t3840 = t4276 * t4048;
t3787 = t3403 * t3840;
t3347 = t3678 * t3787;
t3889 = t3732 * t4013;
t3817 = (pkin(1) * t3685 + t4233) * t3889;
t3769 = -t3251 + t3347 + (t3212 - t3817 / 0.2e1) * t3316 * t3404;
t3206 = t3403 * t3762 + t3769;
t4216 = pkin(4) * t3206;
t4200 = -qJ(3,3) + qJ(1,3);
t3586 = -qJ(2,3) + t4200;
t4215 = g(3) * sin(t3586);
t4202 = -qJ(3,2) + qJ(1,2);
t3588 = -qJ(2,2) + t4202;
t4214 = g(3) * sin(t3588);
t4204 = -qJ(3,1) + qJ(1,1);
t3590 = -qJ(2,1) + t4204;
t4213 = g(3) * sin(t3590);
t3513 = cos(t3586);
t4212 = g(3) * t3513;
t3515 = cos(t3588);
t4211 = g(3) * t3515;
t3517 = cos(t3590);
t4210 = g(3) * t3517;
t4203 = qJ(3,1) + qJ(1,1);
t4201 = qJ(3,2) + qJ(1,2);
t4199 = qJ(3,3) + qJ(1,3);
t4198 = MDP(8) * t3732;
t4197 = qJ(1,1) - 0.2e1 * qJ(2,1);
t4196 = qJ(1,2) - 0.2e1 * qJ(2,2);
t4195 = -0.2e1 * qJ(2,3) + qJ(1,3);
t4194 = MDP(15) * t3732;
t4193 = t3204 * t3629;
t4192 = t3205 * t3631;
t4191 = t3206 * t3633;
t4190 = (-t3537 * t3991 + t3228 * (t3601 + pkin(2))) * t3255;
t4189 = (-t3544 * t3989 + t3229 * (t3602 + pkin(2))) * t3256;
t4188 = (-t3551 * t3987 + t3230 * (t3596 + pkin(2))) * t3257;
t4184 = t3255 * t3729;
t4183 = t3256 * t3729;
t4182 = t3257 * t3729;
t3585 = qJ(2,3) + t4199;
t3512 = cos(t3585);
t3651 = t3709 + t3705;
t3655 = qJ(2,3) - qJ(3,3);
t4181 = ((t3512 + t3513) * t4321 + (0.2e1 * t4274 + sin(t3706 + t4195) + sin(qJ(1,3) + t3651)) * pkin(2) + (-sin(qJ(3,3) - t4195) + sin(qJ(1,3) + t3652) + sin(t4200) + sin(t4199)) * pkin(1)) / ((-sin(t3647) + t3681) * pkin(2) + (sin(t3655) - t3537) * pkin(1));
t3587 = qJ(2,2) + t4201;
t3514 = cos(t3587);
t3656 = t3713 + t3717;
t3664 = qJ(2,2) - qJ(3,2);
t4180 = ((t3514 + t3515) * t4321 + (sin(t3714 + t4196) + sin(qJ(1,2) + t3656) + 0.2e1 * t4275) * pkin(2) + (sin(t4202) + sin(t4201) - sin(qJ(3,2) - t4196) + sin(qJ(1,2) + t3662)) * pkin(1)) / ((-sin(t3657) + t3683) * pkin(2) + (sin(t3664) - t3544) * pkin(1));
t3589 = qJ(2,1) + t4203;
t3516 = cos(t3589);
t3669 = t3725 + t3721;
t3673 = qJ(2,1) - qJ(3,1);
t4179 = ((t3516 + t3517) * t4321 + (sin(t3722 + t4197) + sin(qJ(1,1) + t3669) + 0.2e1 * t4276) * pkin(2) + (-sin(qJ(3,1) - t4197) + sin(qJ(1,1) + t3670) + sin(t4204) + sin(t4203)) * pkin(1)) / ((-sin(t3667) + t3685) * pkin(2) + (sin(t3673) - t3551) * pkin(1));
t3288 = -t3591 * t3369 - t3784 * t4046;
t4178 = t3288 * t3629;
t4177 = t3288 * t3678;
t3289 = -t4046 * t3369 + t3591 * t3784;
t4176 = t3289 * t3629;
t4175 = t3289 * t3679;
t3290 = -t3592 * t3370 - t3785 * t4047;
t4174 = t3290 * t3631;
t4173 = t3290 * t3678;
t3291 = -t4047 * t3370 + t3592 * t3785;
t4172 = t3291 * t3631;
t4171 = t3291 * t3679;
t3292 = -t3593 * t3371 - t3786 * t4048;
t4170 = t3292 * t3633;
t4169 = t3292 * t3678;
t3293 = -t4048 * t3371 + t3593 * t3786;
t4168 = t3293 * t3633;
t4167 = t3293 * t3679;
t3306 = t3312 ^ 2;
t4163 = t3306 * t3400;
t3307 = t3314 ^ 2;
t4162 = t3307 * t3402;
t3308 = t3316 ^ 2;
t4161 = t3308 * t3404;
t4160 = t3312 * t3399;
t4157 = t3314 * t3401;
t4154 = t3316 * t3403;
t4151 = t3321 * t3629;
t4150 = t3321 * t3677;
t4149 = t3322 * t3631;
t4148 = t3322 * t3677;
t4147 = t3323 * t3633;
t4146 = t3323 * t3677;
t3366 = 0.1e1 / t3792;
t4145 = t3366 * t3629;
t3367 = 0.1e1 / t3791;
t4144 = t3367 * t3631;
t3368 = 0.1e1 / t3790;
t4143 = t3368 * t3633;
t4133 = t3399 * t3688;
t4131 = t3401 * t3691;
t4129 = t3403 * t3694;
t3438 = -pkin(2) + t3601 + 0.2e1 * t4229;
t4127 = t3438 * t3591;
t3439 = -pkin(2) + t3602 + 0.2e1 * t4228;
t4126 = t3439 * t3592;
t3440 = -pkin(2) + t3596 + 0.2e1 * t4227;
t4125 = t3440 * t3593;
t3219 = t3728 * t3228;
t3220 = t3728 * t3229;
t3221 = t3728 * t3230;
t4089 = t3728 * t3732;
t4087 = t3729 * t3733;
t3648 = -qJ(3,3) + t3709;
t4086 = t3731 * sin(t3648);
t3658 = -qJ(3,2) + t3717;
t4085 = t3731 * sin(t3658);
t3668 = -qJ(3,1) + t3725;
t4084 = t3731 * sin(t3668);
t3240 = pkin(1) * t3858;
t4083 = t3219 + t3240;
t3241 = pkin(1) * t3856;
t4082 = t3220 + t3241;
t3242 = pkin(1) * t3854;
t4081 = t3221 + t3242;
t4073 = 0.2e1 / 0.3e1 * t3728 + t3731;
t4072 = t3731 - t3728;
t4071 = 0.5e1 * pkin(1) * t3728;
t4070 = 0.9e1 * pkin(2) * (0.8e1 / 0.9e1 * t3674 + t4073);
t4069 = 0.6e1 * pkin(2) * (0.2e1 / 0.3e1 * t3674 + t4073);
t3527 = t3674 + t3728;
t4068 = -0.4e1 * pkin(2) * t3527;
t4064 = -0.3e1 * t4219;
t4063 = 0.3e1 * t4219;
t4057 = 0.3e1 * t3728;
t4056 = 0.2e1 * t3729;
t4055 = -0.8e1 * t4113;
t4053 = -0.8e1 * t4108;
t4051 = -0.8e1 * t4103;
t4045 = pkin(1) * t4163;
t4044 = pkin(1) * t4162;
t4043 = pkin(1) * t4161;
t4036 = pkin(2) * t4086;
t4035 = pkin(2) * t4085;
t4034 = pkin(2) * t4084;
t3990 = t3728 * t4160;
t4030 = (-(t3636 * t4320 + 0.2e1 * t3529 + t4072) * t3638 * t4160 - 0.2e1 * (t3228 * t4252 - t4124 * t4160) * t4039 + t3636 * t3990 - t3527 * t4160 + (t3228 * t4209 + t3858) * t4111) * t4160;
t3988 = t3728 * t4157;
t4029 = (-(t3640 * t4320 + 0.2e1 * t3530 + t4072) * t3642 * t4157 - 0.2e1 * (t3229 * t4252 - t4123 * t4157) * t4038 + t3640 * t3988 - t3527 * t4157 + (t3229 * t4207 + t3856) * t4106) * t4157;
t3986 = t3728 * t4154;
t4028 = (-(t3644 * t4320 + 0.2e1 * t3528 + t4072) * t3646 * t4154 - 0.2e1 * (t3230 * t4252 - t4122 * t4154) * t4037 + t3644 * t3986 - t3527 * t4154 + (t3230 * t4205 + t3854) * t4101) * t4154;
t4027 = t3204 * t4145;
t3387 = t3686 * t3687 - t4115;
t4026 = t3387 * t4193;
t3390 = t3681 * t3686 + t4114;
t4025 = t3390 * t4193;
t4024 = t3205 * t4144;
t3388 = t3689 * t3690 - t4110;
t4023 = t3388 * t4192;
t3391 = t3683 * t3689 + t4109;
t4022 = t3391 * t4192;
t4021 = t3206 * t4143;
t3389 = t3692 * t3693 - t4105;
t4020 = t3389 * t4191;
t3392 = t3685 * t3692 + t4104;
t4019 = t3392 * t4191;
t3630 = 0.1e1 / t3680 ^ 2;
t4018 = t3246 ^ 2 / t3273 ^ 2 * t3630;
t3632 = 0.1e1 / t3682 ^ 2;
t4017 = t3247 ^ 2 / t3274 ^ 2 * t3632;
t3634 = 0.1e1 / t3684 ^ 2;
t4016 = t3248 ^ 2 / t3275 ^ 2 * t3634;
t3333 = t3636 * t3594 - t3775;
t3518 = pkin(1) + 0.2e1 * t4209;
t3768 = (t3681 * t3938 + t3524) * t3686 + t4112 * t4239;
t3909 = t3438 * t4046;
t3258 = (t3680 * t3591 * t3518 - t3688 * t3909) * t3638 + (t3681 * t4127 + t3768 * t4046) * t3687 + t3333 * t4046 - t3591 * pkin(2) * t4100;
t4009 = t3258 * t4145;
t3906 = t3680 * t4046;
t3259 = (t3518 * t3906 + t3688 * t4127) * t3638 + (-t3591 * t3768 + t3681 * t3909) * t3687 - t3333 * t3591 - t3906 * t4209;
t4008 = t3259 * t4145;
t3334 = t3640 * t3595 - t3776;
t3520 = pkin(1) + 0.2e1 * t4207;
t3767 = (t3683 * t3937 + t3525) * t3689 + t4107 * t4238;
t3908 = t3439 * t4047;
t3260 = (t3682 * t3592 * t3520 - t3691 * t3908) * t3642 + (t3683 * t4126 + t3767 * t4047) * t3690 + t3334 * t4047 - t3592 * pkin(2) * t4098;
t4007 = t3260 * t4144;
t3905 = t3682 * t4047;
t3261 = (t3520 * t3905 + t3691 * t4126) * t3642 + (-t3592 * t3767 + t3683 * t3908) * t3690 - t3334 * t3592 - t3905 * t4207;
t4006 = t3261 * t4144;
t3335 = t3644 * t3597 - t3777;
t3522 = pkin(1) + 0.2e1 * t4205;
t3766 = (t3685 * t3936 + t3526) * t3692 + t4102 * t4237;
t3907 = t3440 * t4048;
t3262 = (t3684 * t3593 * t3522 - t3694 * t3907) * t3646 + (t3685 * t4125 + t3766 * t4048) * t3693 + t3335 * t4048 - t3593 * pkin(2) * t4096;
t4005 = t3262 * t4143;
t3904 = t3684 * t4048;
t3263 = (t3522 * t3904 + t3694 * t4125) * t3646 + (-t3593 * t3766 + t3685 * t3907) * t3693 - t3335 * t3593 - t3904 * t4205;
t4004 = t3263 * t4143;
t3276 = t4247 * t4163;
t4003 = t3276 * t4145;
t3277 = t4244 * t4162;
t4002 = t3277 * t4144;
t3278 = t4241 * t4161;
t4001 = t3278 * t4143;
t3393 = g(1) * t4046 + t3591 * g(2);
t3396 = t3591 * g(1) - g(2) * t4046;
t3795 = -g(3) * t4274 + t3396 * t3688;
t3294 = -t3393 * t3687 + t3681 * t3795;
t4000 = t3294 * t4145;
t3384 = t3393 * t3681;
t3295 = t3687 * t3795 + t3384;
t3999 = t3295 * t4145;
t3394 = g(1) * t4047 + t3592 * g(2);
t3397 = t3592 * g(1) - g(2) * t4047;
t3794 = -g(3) * t4275 + t3397 * t3691;
t3296 = -t3394 * t3690 + t3683 * t3794;
t3998 = t3296 * t4144;
t3385 = t3394 * t3683;
t3297 = t3690 * t3794 + t3385;
t3997 = t3297 * t4144;
t3395 = g(1) * t4048 + t3593 * g(2);
t3398 = t3593 * g(1) - g(2) * t4048;
t3793 = -g(3) * t4276 + t3398 * t3694;
t3298 = -t3395 * t3693 + t3685 * t3793;
t3996 = t3298 * t4143;
t3386 = t3395 * t3685;
t3299 = t3693 * t3793 + t3386;
t3995 = t3299 * t4143;
t3994 = t3306 * t4132;
t3993 = t3307 * t4130;
t3992 = t3308 * t4128;
t3598 = g(3) * t3688;
t3339 = g(1) * t4033 - g(2) * t3838 + t3598;
t3985 = t3339 * t4133;
t3599 = g(3) * t3691;
t3340 = g(1) * t4032 - g(2) * t3839 + t3599;
t3984 = t3340 * t4131;
t3600 = g(3) * t3694;
t3341 = g(1) * t4031 - g(2) * t3840 + t3600;
t3983 = t3341 * t4129;
t3974 = t3629 * t4089;
t3973 = t3630 * t4087;
t3972 = t3631 * t4089;
t3971 = t3632 * t4087;
t3970 = t3633 * t4089;
t3969 = t3634 * t4087;
t3961 = t3697 * t4093;
t3959 = -t4187 / 0.4e1;
t3957 = -t4186 / 0.4e1;
t3955 = -t4185 / 0.4e1;
t3954 = t4181 / 0.2e1;
t3953 = t4180 / 0.2e1;
t3952 = t4179 / 0.2e1;
t3951 = t4093 / 0.2e1;
t3450 = sin(t3491);
t3950 = -t3450 / 0.4e1 + t4269;
t3949 = t3450 / 0.4e1 + t4269;
t3454 = sin(t3495);
t3948 = -t3454 / 0.4e1 + t4267;
t3947 = t3454 / 0.4e1 + t4267;
t3458 = sin(t3499);
t3946 = -t3458 / 0.4e1 + t4265;
t3945 = t3458 / 0.4e1 + t4265;
t3944 = t4263 - cos(t3925) / 0.2e1;
t3943 = t3462 / 0.4e1 - cos(t3500) / 0.2e1;
t3942 = t4260 - cos(t3926) / 0.2e1;
t3941 = t3466 / 0.4e1 - cos(t3502) / 0.2e1;
t3940 = t4257 - cos(t3927) / 0.2e1;
t3939 = t3470 / 0.4e1 - cos(t3504) / 0.2e1;
t3935 = t4093 * t4301;
t3727 = pkin(2) * t3728;
t3934 = -t3727 + t4063;
t3582 = t4250 + t3728;
t3649 = t3709 + t3703;
t3704 = 0.3e1 * qJ(3,3);
t3650 = t3709 + t3704;
t3653 = t3709 + t3706;
t3279 = 0.1e1 / (t3582 * cos(t3651) + cos(t3653) * t4250 + cos(t3649) * t3676 + t3583 * t3622 - t3609 * t3620 + t3529 + (-cos(t3650) - cos(t3648) - cos(t3704) + t4293) * t4278 + t3609);
t3532 = sin(t3649);
t3533 = sin(t3650);
t3534 = sin(t3651);
t3535 = sin(t3652);
t3536 = sin(t3653);
t3553 = cos(t3704 + qJ(2,3));
t3555 = cos(t3708 + t3704);
t3557 = cos(t3708 + qJ(3,3));
t3560 = cos(t3655);
t3610 = -0.3e1 * t3728 + t3731;
t3611 = sin(t3704);
t3707 = 0.4e1 * qJ(2,3);
t3730 = pkin(1) * t3731;
t3747 = (t3677 * t3954 + ((t4312 * t3228 * t4320 + (-t4311 * t4015 + ((t3237 - t3888 / 0.2e1) * t3559 + (-t3557 + t3555) * t3222) * t4316) * pkin(1)) * t3697 + (t3934 * sin(t3707 + t3704) + t3611 * t4063 - 0.6e1 * t4036 + t3680 * t4070 + sin(t3707 + qJ(3,3)) * t4064 + t3533 * t4069 + t3535 * t4068 + t3727 * sin(t3707 + 0.5e1 * qJ(3,3)) + (-t3536 - sin(t3707)) * t3730 + (t3610 * sin(t3707 + t3705) + t3613 * t4296 + t3612 * t4295 + t3534 * t4294 + (sin(t3703 + t3707) + t3532) * t4057) * pkin(1)) * t4160 + ((-pkin(2) * t3560 * t4187 + t3255 * t3553) * t3629 + t4306 * (t3240 - t3219)) * t4321) * t3279 * t4160 / 0.4e1) * t3732;
t3252 = 0.2e1 / 0.3e1 * t3888;
t3852 = t3991 * t4278;
t3753 = ((-(t3240 + (0.4e1 * t4184 + 0.2e1 * t4187) * t3974) * pkin(1) * t3534 + t4083 * t3533 * t4301 + 0.4e1 * t3222 * t4036 + t3731 * t3536 * t3858 + t3728 * t3532 * t3859 + t3228 * t3535 * t3935 + (t3240 + (0.3e1 / 0.2e1 * t4187 + 0.2e1 * t4184) * t3974) * t3612 * t4303 + (t3237 + 0.4e1 / 0.5e1 * t3888) * t3613 * t4071 - t3611 * t4015 * t4278 - 0.6e1 * ((t3891 / 0.3e1 + t3252) * t3728 + t3731 * (t3237 + t3252)) * t4226 - t4312 * t3697 * t3990 + t4311 * t3731 * t3991 - 0.2e1 * (t3555 + t3559) * t3852 + 0.2e1 * (t3560 + t3557) * t3852 - t4306 * t3961 * t4160) * t3959 + 0.2e1 * ((t3533 * t4251 - t4086 / 0.2e1 + t3535 * t3951 + t3609 * t3680 + (t3534 + t3612 - t3613) * t4278) * t3228 + ((-t3556 / 0.4e1 + t3552 / 0.4e1 + t3554 / 0.4e1 - t3687 / 0.4e1) * pkin(2) + (t3555 / 0.4e1 - t3557 / 0.4e1 + t3553 / 0.4e1 - t3559 / 0.4e1) * pkin(1)) * t3991) * t3255) * t3733 * t3279;
t3774 = (t3258 * t3678 + t3259 * t3679) * t3366;
t3165 = t3747 + (-t3732 * t3774 + t3753) * t3629;
t3198 = t3795 - t4218;
t3933 = pkin(1) * t3165 + t3198 * t3681 + (t3681 * t4045 - t3393) * t3687;
t3659 = t3714 + t3717;
t3660 = t3717 + t3711;
t3712 = 0.3e1 * qJ(3,2);
t3661 = t3717 + t3712;
t3280 = 0.1e1 / (t3582 * cos(t3656) + cos(t3660) * t3676 + cos(t3659) * t4250 + t3583 * t3625 - t3609 * t3623 + t3530 + (-cos(t3661) - cos(t3658) - cos(t3712) + t4292) * t4278 + t3609);
t3538 = sin(t3656);
t3540 = sin(t3659);
t3541 = sin(t3660);
t3542 = sin(t3661);
t3543 = sin(t3662);
t3563 = cos(t3712 + t3716);
t3564 = cos(t3712 + qJ(2,2));
t3567 = cos(t3716 + qJ(3,2));
t3570 = cos(t3664);
t3614 = sin(t3712);
t3715 = 0.4e1 * qJ(2,2);
t3746 = (t3677 * t3953 + ((t4310 * t3229 * t4320 + (-t4309 * t4014 + ((t3238 - t3887 / 0.2e1) * t3569 + (t3563 - t3567) * t3223) * t4316) * pkin(1)) * t3697 + (sin(t3715 + qJ(3,2)) * t4064 + t3614 * t4063 - 0.6e1 * t4035 + t3934 * sin(t3712 + t3715) + t3682 * t4070 + t3542 * t4069 + t3543 * t4068 + t3727 * sin(t3715 + 0.5e1 * qJ(3,2)) + (-t3540 - sin(t3715)) * t3730 + (t3610 * sin(t3715 + t3713) + t3616 * t4296 + t3615 * t4295 + t3538 * t4294 + (sin(t3711 + t3715) + t3541) * t4057) * pkin(1)) * t4157 + ((-pkin(2) * t3570 * t4186 + t3256 * t3564) * t3631 + t4305 * (t3241 - t3220)) * t4321) * t3280 * t4157 / 0.4e1) * t3732;
t3253 = 0.2e1 / 0.3e1 * t3887;
t3851 = t3989 * t4278;
t3752 = ((t4082 * t3542 * t4301 - (t3241 + (0.4e1 * t4183 + 0.2e1 * t4186) * t3972) * pkin(1) * t3538 + 0.4e1 * t3223 * t4035 + t3728 * t3541 * t3857 + t3731 * t3540 * t3856 + t3229 * t3543 * t3935 + (t3241 + (0.3e1 / 0.2e1 * t4186 + 0.2e1 * t4183) * t3972) * t3615 * t4303 + (t3238 + 0.4e1 / 0.5e1 * t3887) * t3616 * t4071 - t3614 * t4014 * t4278 - 0.6e1 * ((t3890 / 0.3e1 + t3253) * t3728 + t3731 * (t3238 + t3253)) * t4224 - t4310 * t3697 * t3988 + t4309 * t3731 * t3989 - 0.2e1 * (t3563 + t3569) * t3851 + 0.2e1 * (t3570 + t3567) * t3851 - t4305 * t3961 * t4157) * t3957 + 0.2e1 * ((t3542 * t4251 - t4085 / 0.2e1 + t3543 * t3951 + t3609 * t3682 + (t3538 + t3615 - t3616) * t4278) * t3229 + ((-t3565 / 0.4e1 + t3562 / 0.4e1 + t3566 / 0.4e1 - t3690 / 0.4e1) * pkin(2) + (t3563 / 0.4e1 - t3567 / 0.4e1 + t3564 / 0.4e1 - t3569 / 0.4e1) * pkin(1)) * t3989) * t3256) * t3733 * t3280;
t3773 = (t3260 * t3678 + t3261 * t3679) * t3367;
t3166 = t3746 + (-t3732 * t3773 + t3752) * t3631;
t3199 = t3794 - t4217;
t3932 = pkin(1) * t3166 + t3199 * t3683 + (t3683 * t4044 - t3394) * t3690;
t3665 = t3719 + t3725;
t3720 = 0.3e1 * qJ(3,1);
t3666 = t3720 + t3725;
t3671 = t3725 + t3722;
t3281 = 0.1e1 / (t3582 * cos(t3669) + cos(t3671) * t4250 + cos(t3665) * t3676 + t3583 * t3628 - t3609 * t3626 + t3528 + (-cos(t3668) - cos(t3666) - cos(t3720) + t4291) * t4278 + t3609);
t3545 = sin(t3665);
t3546 = sin(t3666);
t3548 = sin(t3669);
t3549 = sin(t3670);
t3550 = sin(t3671);
t3573 = cos(t3720 + qJ(2,1));
t3575 = cos(t3724 + t3720);
t3577 = cos(t3724 + qJ(3,1));
t3580 = cos(t3673);
t3617 = sin(t3720);
t3723 = 0.4e1 * qJ(2,1);
t3745 = (t3677 * t3952 + ((t4308 * t3230 * t4320 + (-t4307 * t4013 + ((t3239 - t3886 / 0.2e1) * t3579 + (t3575 - t3577) * t3224) * t4316) * pkin(1)) * t3697 + (t3617 * t4063 - 0.6e1 * t4034 + sin(qJ(3,1) + t3723) * t4064 + t3934 * sin(t3723 + t3720) + t3684 * t4070 + t3727 * sin(t3723 + 0.5e1 * qJ(3,1)) + t3546 * t4069 + t3549 * t4068 + (-t3550 - sin(t3723)) * t3730 + (t3610 * sin(t3723 + t3721) + t3619 * t4296 + t3618 * t4295 + t3548 * t4294 + (sin(t3723 + t3719) + t3545) * t4057) * pkin(1)) * t4154 + ((-pkin(2) * t3580 * t4185 + t3257 * t3573) * t3633 + t4304 * (t3242 - t3221)) * t4321) * t3281 * t4154 / 0.4e1) * t3732;
t3254 = 0.2e1 / 0.3e1 * t3886;
t3850 = t3987 * t4278;
t3751 = ((-(t3242 + (0.4e1 * t4182 + 0.2e1 * t4185) * t3970) * pkin(1) * t3548 + t4081 * t3546 * t4301 + 0.4e1 * t3224 * t4034 + t3731 * t3550 * t3854 + t3728 * t3545 * t3855 + t3230 * t3549 * t3935 + (t3242 + (0.3e1 / 0.2e1 * t4185 + 0.2e1 * t4182) * t3970) * t3618 * t4303 + (t3239 + 0.4e1 / 0.5e1 * t3886) * t3619 * t4071 - t3617 * t4013 * t4278 - 0.6e1 * ((t3889 / 0.3e1 + t3254) * t3728 + t3731 * (t3239 + t3254)) * t4222 - t4308 * t3697 * t3986 + t4307 * t3731 * t3987 - 0.2e1 * (t3575 + t3579) * t3850 + 0.2e1 * (t3580 + t3577) * t3850 - t4304 * t3961 * t4154) * t3955 + 0.2e1 * ((-t4084 / 0.2e1 + t3546 * t4251 + t3549 * t3951 + t3609 * t3684 + (t3548 + t3618 - t3619) * t4278) * t3230 + ((-t3576 / 0.4e1 + t3572 / 0.4e1 + t3574 / 0.4e1 - t3693 / 0.4e1) * pkin(2) + (t3575 / 0.4e1 - t3577 / 0.4e1 + t3573 / 0.4e1 - t3579 / 0.4e1) * pkin(1)) * t3987) * t3257) * t3733 * t3281;
t3772 = (t3262 * t3678 + t3263 * t3679) * t3368;
t3167 = t3745 + (-t3732 * t3772 + t3751) * t3633;
t3200 = t3793 - t4216;
t3931 = pkin(1) * t3167 + t3200 * t3685 + (t3685 * t4043 - t3395) * t3693;
t3924 = t3399 * t4033;
t3923 = t3401 * t4032;
t3922 = t3403 * t4031;
t3903 = t3366 * t4026;
t3902 = t3366 * t4025;
t3901 = t3681 * t4027;
t3900 = t3687 * t4027;
t3899 = t3367 * t4023;
t3898 = t3367 * t4022;
t3897 = t3683 * t4024;
t3896 = t3690 * t4024;
t3895 = t3368 * t4020;
t3894 = t3368 * t4019;
t3893 = t3685 * t4021;
t3892 = t3693 * t4021;
t3885 = t4163 * t4181;
t3884 = t4162 * t4180;
t3883 = t4161 * t4179;
t3309 = (t3636 - 0.1e1 / 0.2e1) * t4113 + (t3638 - 0.1e1 / 0.2e1) * t4100;
t3882 = t3309 * t3994;
t3324 = t4246 * t3636 - 0.4e1 * t3867 + t4247;
t3881 = t3324 * t3994;
t3880 = t3366 * t3994;
t3310 = (t3640 - 0.1e1 / 0.2e1) * t4108 + (t3642 - 0.1e1 / 0.2e1) * t4098;
t3879 = t3310 * t3993;
t3325 = t4243 * t3640 - 0.4e1 * t3866 + t4244;
t3878 = t3325 * t3993;
t3877 = t3367 * t3993;
t3311 = (t3644 - 0.1e1 / 0.2e1) * t4103 + (t3646 - 0.1e1 / 0.2e1) * t4096;
t3876 = t3311 * t3992;
t3326 = t4240 * t3644 - 0.4e1 * t3865 + t4241;
t3875 = t3326 * t3992;
t3874 = t3368 * t3992;
t3864 = t3204 * t3954;
t3863 = t3206 * t3952;
t3862 = t4018 / 0.4e1;
t3861 = t4017 / 0.4e1;
t3860 = t4016 / 0.4e1;
t3853 = t3205 * t3953;
t3831 = t3339 * t3924;
t3830 = t3340 * t3923;
t3829 = t3341 * t3922;
t3828 = t3686 * t3888;
t3827 = t3689 * t3887;
t3826 = t3692 * t3886;
t3825 = t3324 * t3880;
t3824 = t3325 * t3877;
t3823 = t3326 * t3874;
t3816 = -t3885 / 0.2e1;
t3815 = -t3884 / 0.2e1;
t3814 = -t3883 / 0.2e1;
t3447 = sin(t3488);
t3460 = cos(t3489);
t3813 = g(1) * t4264 + g(2) * t4270 + t3447 * t4281 + t3460 * t4282 + sin(t3585) * t4280;
t3451 = sin(t3492);
t3464 = cos(t3493);
t3812 = g(1) * t4261 + g(2) * t4268 + t3451 * t4281 + t3464 * t4282 + sin(t3587) * t4280;
t3455 = sin(t3496);
t3468 = cos(t3497);
t3811 = g(1) * t4258 + g(2) * t4266 + t3455 * t4281 + t3468 * t4282 + sin(t3589) * t4280;
t3810 = g(1) * t4270 + g(2) * t4264 + t3447 * t4282 + t3460 * t4281 + t3512 * t4279;
t3809 = g(1) * t4268 + g(2) * t4261 + t3451 * t4282 + t3464 * t4281 + t3514 * t4279;
t3808 = g(1) * t4266 + g(2) * t4258 + t3455 * t4282 + t3468 * t4281 + t3516 * t4279;
t3207 = -t3399 * t3930 + (-t3390 * t3991 + t3601 * t4299) * pkin(2) + t4083;
t3147 = t3747 + (t3207 * t3960 - t4190) * t3973 + (t3753 + (-t3774 + (t4030 + t4150 + t4175 + t4177) * t3729) * t3732) * t3629;
t3225 = t3228 ^ 2;
t3807 = t3147 * t3686 - t3225 * t3680;
t3208 = -t3401 * t3929 + (-t3391 * t3989 + t3602 * t4298) * pkin(2) + t4082;
t3148 = t3746 + (t3208 * t3958 - t4189) * t3971 + (t3752 + (-t3773 + (t4029 + t4148 + t4171 + t4173) * t3729) * t3732) * t3631;
t3226 = t3229 ^ 2;
t3806 = t3148 * t3689 - t3226 * t3682;
t3209 = -t3403 * t3928 + (-t3392 * t3987 + t3596 * t4297) * pkin(2) + t4081;
t3149 = t3745 + (t3209 * t3956 - t4188) * t3969 + (t3751 + (-t3772 + (t4028 + t4146 + t4167 + t4169) * t3729) * t3732) * t3633;
t3227 = t3230 ^ 2;
t3805 = t3149 * t3692 - t3227 * t3684;
t3798 = 0.2e1 * t3309 * t3880;
t3797 = 0.2e1 * t3310 * t3877;
t3796 = 0.2e1 * t3311 * t3874;
t3783 = t3891 * t4160;
t3782 = t3890 * t4157;
t3781 = t3889 * t4154;
t3780 = t3880 * t4113;
t3779 = t3877 * t4108;
t3778 = t3874 * t4103;
t3765 = t3339 * t3789;
t3764 = t3340 * t3788;
t3763 = t3341 * t3787;
t3759 = t3198 * t3687 + t3638 * t4045 + t3732 * t3862 + t3384;
t3758 = t3199 * t3690 + t3642 * t4044 + t3732 * t3861 + t3385;
t3757 = t3200 * t3693 + t3646 * t4043 + t3732 * t3860 + t3386;
t3480 = sin(t3504);
t3478 = sin(t3502);
t3476 = sin(t3500);
t3352 = t3398 * t4276 + t3600;
t3350 = t3397 * t4275 + t3599;
t3348 = t3396 * t4274 + t3598;
t3197 = (t3206 * t3685 - t3693 * t3781) * t3685;
t3196 = (t3205 * t3683 - t3690 * t3782) * t3683;
t3195 = (t3204 * t3681 - t3687 * t3783) * t3681;
t3194 = t3206 * t4050 + t4241 * t3781;
t3193 = t3205 * t4052 + t4244 * t3782;
t3192 = t3204 * t4054 + t4247 * t3783;
t3173 = t3769 * t3646 + (t3644 * t4285 + (t3692 + 0.2e1 * t3966) * t3692) * t3206 + (t3762 * t3646 + (-t4242 * t4050 - t4315) * t3316 * t3230) * t3403;
t3172 = t3770 * t3642 + (t3640 * t4287 + (t3689 + 0.2e1 * t3967) * t3689) * t3205 + (t3761 * t3642 + (-t4245 * t4052 - t4314) * t3314 * t3229) * t3401;
t3171 = t3771 * t3638 + (t3636 * t4289 + (t3686 + 0.2e1 * t3968) * t3686) * t3204 + (t3760 * t3638 + (-t4248 * t4054 - t4313) * t3312 * t3228) * t3399;
t3170 = (-t3644 * t3206 / 0.2e1 + t3347 / 0.4e1 - t3251 / 0.4e1 + (-t3915 / 0.4e1 - t4116 / 0.4e1) * t3403) * t4051 + t3206 * t4315 + ((t3212 / 0.4e1 - t3817 / 0.8e1) * t3404 * t4051 + ((-0.8e1 * t3644 + 0.4e1) * t3646 + 0.8e1 * t3865 + t4286 - 0.2e1) * t3403 * t3230) * t3316;
t3169 = (-t3640 * t3205 / 0.2e1 + t3346 / 0.4e1 - t3250 / 0.4e1 + (-t3913 / 0.4e1 - t4117 / 0.4e1) * t3401) * t4053 + t3205 * t4314 + ((t3211 / 0.4e1 - t3818 / 0.8e1) * t3402 * t4053 + ((-0.8e1 * t3640 + 0.4e1) * t3642 + 0.8e1 * t3866 + t4288 - 0.2e1) * t3401 * t3229) * t3314;
t3168 = (-t3636 * t3204 / 0.2e1 + t3345 / 0.4e1 - t3249 / 0.4e1 + (-t3911 / 0.4e1 - t4118 / 0.4e1) * t3399) * t4055 + t3204 * t4313 + ((t3210 / 0.4e1 - t3819 / 0.8e1) * t3400 * t4055 + ((-0.8e1 * t3636 + 0.4e1) * t3638 + 0.8e1 * t3867 + t4290 - 0.2e1) * t3399 * t3228) * t3312;
t3164 = t3685 * t4016 * t4249 + t3167 * t3693;
t3163 = t3693 * t3733 * t3860 + t3167 * t3685;
t3162 = t3683 * t4017 * t4249 + t3166 * t3690;
t3161 = t3690 * t3733 * t3861 + t3166 * t3683;
t3160 = t3681 * t4018 * t4249 + t3165 * t3687;
t3159 = t3687 * t3733 * t3862 + t3165 * t3681;
t3155 = t3684 * t3757 + t3692 * t3931;
t3154 = -t3684 * t3931 + t3692 * t3757;
t3153 = t3682 * t3758 + t3689 * t3932;
t3152 = -t3682 * t3932 + t3689 * t3758;
t3151 = t3680 * t3759 + t3686 * t3933;
t3150 = -t3680 * t3933 + t3686 * t3759;
t3146 = t3745 + (t3209 * t3955 - t4188 / 0.2e1) * t3969 + (t3751 + (-t3772 + (t4167 / 0.2e1 + t4169 / 0.2e1 + t4146 / 0.2e1 + t4028 / 0.2e1) * t3729) * t3732) * t3633;
t3145 = t3746 + (t3208 * t3957 - t4189 / 0.2e1) * t3971 + (t3752 + (-t3773 + (t4171 / 0.2e1 + t4173 / 0.2e1 + t4148 / 0.2e1 + t4029 / 0.2e1) * t3729) * t3732) * t3631;
t3144 = t3747 + (t3207 * t3959 - t4190 / 0.2e1) * t3973 + (t3753 + (-t3774 + (t4175 / 0.2e1 + t4177 / 0.2e1 + t4150 / 0.2e1 + t4030 / 0.2e1) * t3729) * t3732) * t3629;
t3143 = t3149 * t3684 + t3227 * t3692;
t3142 = t3148 * t3682 + t3226 * t3689;
t3141 = t3147 * t3680 + t3225 * t3686;
t3140 = -t4210 / 0.2e1 + t3549 * t4043 - t3551 * t4216 + (-t3146 * t3692 + t3224 * t4010) * t4303 + (t3939 + t3940) * g(2) + (t4253 - t3480 / 0.2e1 - t3945) * g(1) + t3808;
t3139 = -t4211 / 0.2e1 + t3543 * t4044 - t3544 * t4217 + (-t3145 * t3689 + t3223 * t4011) * t4303 + (t3941 + t3942) * g(2) + (t4254 - t3478 / 0.2e1 - t3947) * g(1) + t3809;
t3138 = -t4212 / 0.2e1 + t3535 * t4045 - t3537 * t4218 + (-t3144 * t3686 + t3222 * t4012) * t4303 + (t3943 + t3944) * g(2) + (t4255 - t3476 / 0.2e1 - t3949) * g(1) + t3810;
t3137 = -t4213 / 0.2e1 + t3578 * t4043 - t3579 * t4216 + (t3146 * t3684 + t3224 * t3826) * t4303 + (t4253 + t3480 / 0.2e1 - t3946) * g(2) + (t3939 - t3940) * g(1) + t3811;
t3136 = -t4214 / 0.2e1 + t3568 * t4044 - t3569 * t4217 + (t3145 * t3682 + t3223 * t3827) * t4303 + (t4254 + t3478 / 0.2e1 - t3948) * g(2) + (t3941 - t3942) * g(1) + t3812;
t3135 = -t4215 / 0.2e1 + t3558 * t4045 - t3559 * t4218 + (t3144 * t3680 + t3222 * t3828) * t4303 + (t4255 + t3476 / 0.2e1 - t3950) * g(2) + (t3943 - t3944) * g(1) + t3813;
t3134 = t4210 / 0.2e1 + (t4256 + t3469 / 0.4e1) * g(2) + t3945 * g(1) + (-t3149 * t3551 - t3227 * t3579) * pkin(4) + ((t3549 * t4297 + t4010) * t4154 + (t3578 + t3692) * t3206) * pkin(1) + t3808;
t3133 = t4211 / 0.2e1 + (t4259 + t3465 / 0.4e1) * g(2) + t3947 * g(1) + (-t3148 * t3544 - t3226 * t3569) * pkin(4) + ((t3543 * t4298 + t4011) * t4157 + (t3568 + t3689) * t3205) * pkin(1) + t3809;
t3132 = t4212 / 0.2e1 + (t4262 + t3461 / 0.4e1) * g(2) + t3949 * g(1) + (-t3147 * t3537 - t3225 * t3559) * pkin(4) + ((t3535 * t4299 + t4012) * t4160 + (t3558 + t3686) * t3204) * pkin(1) + t3810;
t3131 = t4213 / 0.2e1 + t3946 * g(2) + (t4256 + t4257) * g(1) + (-t3149 * t3579 + t3227 * t3551) * pkin(4) + ((t3224 * t4291 + t3826) * t4154 + (-t3549 - t3684) * t3206) * pkin(1) + t3811;
t3130 = t4214 / 0.2e1 + t3948 * g(2) + (t4259 + t4260) * g(1) + (-t3148 * t3569 + t3226 * t3544) * pkin(4) + ((t3223 * t4292 + t3827) * t4157 + (-t3543 - t3682) * t3205) * pkin(1) + t3812;
t3129 = t4215 / 0.2e1 + t3950 * g(2) + (t4262 + t4263) * g(1) + (-t3147 * t3559 + t3225 * t3537) * pkin(4) + ((t3222 * t4293 + t3828) * t4160 + (-t3535 - t3680) * t3204) * pkin(1) + t3813;
t3128 = t3143 * t3693 + t3685 * t3805;
t3127 = t3142 * t3690 + t3683 * t3806;
t3126 = t3141 * t3687 + t3681 * t3807;
t3125 = -t3685 * t3143 + t3693 * t3805;
t3124 = -t3142 * t3683 + t3690 * t3806;
t3123 = -t3141 * t3681 + t3687 * t3807;
t1 = [(-t3204 * t3924 - t3205 * t3923 - t3206 * t3922) * MDP(1) + (-t3348 * t3924 - t3350 * t3923 - t3352 * t3922) * MDP(2) + (-t3793 * t3922 - t3794 * t3923 - t3795 * t3924) * MDP(3) + (-t3195 * t3924 - t3196 * t3923 - t3197 * t3922 + (t3259 * t3780 + t3261 * t3779 + t3263 * t3778) * t3732) * MDP(4) + (-t3192 * t3924 - t3193 * t3923 - t3194 * t3922 + (-t3259 * t4003 - t3261 * t4002 - t3263 * t4001) * t3732) * MDP(5) + (-t3159 * t3924 - t3161 * t3923 - t3163 * t3922 + (-t3259 * t3901 - t3261 * t3897 - t3263 * t3893) * t3732) * MDP(6) + (-t3160 * t3924 - t3162 * t3923 - t3164 * t3922 + (-t3259 * t3900 - t3261 * t3896 - t3263 * t3892) * t3732) * MDP(7) + (-t3165 * t4008 - t3166 * t4006 - t3167 * t4004) * t4198 + (-t3687 * t3831 - t3690 * t3830 - t3693 * t3829 + (-t3259 * t4000 - t3261 * t3998 - t3263 * t3996) * t3732) * MDP(9) + (t3681 * t3831 + t3683 * t3830 + t3685 * t3829 + (-t3259 * t3999 - t3261 * t3997 - t3263 * t3995) * t3732) * MDP(10) + (-t3171 * t3924 - t3172 * t3923 - t3173 * t3922 + (t3259 * t3798 + t3261 * t3797 + t3263 * t3796 + (-t3289 * t3882 - t3291 * t3879 - t3293 * t3876) * t4056) * t3732) * MDP(11) + (-t3168 * t3924 - t3169 * t3923 - t3170 * t3922 + (t3259 * t3825 + t3261 * t3824 + t3263 * t3823 + (-t3289 * t3881 - t3291 * t3878 - t3293 * t3875) * t3729) * t3732) * MDP(12) + (-t3126 * t3924 - t3127 * t3923 - t3128 * t3922 + (-t3259 * t3902 - t3261 * t3898 - t3263 * t3894 + (t3289 * t4025 + t3291 * t4022 + t3293 * t4019) * t3729) * t3732) * MDP(13) + (-t3123 * t3924 - t3124 * t3923 - t3125 * t3922 + (-t3259 * t3903 - t3261 * t3899 - t3263 * t3895 + (t3289 * t4026 + t3291 * t4023 + t3293 * t4020) * t3729) * t3732) * MDP(14) + (-t3147 * t4008 - t3148 * t4006 - t3149 * t4004 + (t3147 * t4176 + t3148 * t4172 + t3149 * t4168) * t3729) * t4194 + (-t3132 * t3924 - t3133 * t3923 - t3134 * t3922 + (-t3138 * t4008 - t3139 * t4006 - t3140 * t4004 + (t3151 * t4176 + t3153 * t4172 + t3155 * t4168) * t3729) * t3732) * MDP(16) + (-t3129 * t3924 - t3130 * t3923 - t3131 * t3922 + (-t3135 * t4008 - t3136 * t4006 - t3137 * t4004 + (t3150 * t4176 + t3152 * t4172 + t3154 * t4168) * t3729) * t3732) * MDP(17) + (t3679 - g(1)) * MDP(18); (t3204 * t3789 + t3205 * t3788 + t3206 * t3787) * MDP(1) + (t3348 * t3789 + t3350 * t3788 + t3352 * t3787) * MDP(2) + (t3787 * t3793 + t3788 * t3794 + t3789 * t3795) * MDP(3) + (t3195 * t3789 + t3197 * t3787 + t3196 * t3788 + (t3258 * t3780 + t3260 * t3779 + t3262 * t3778) * t3732) * MDP(4) + (t3192 * t3789 + t3194 * t3787 + t3193 * t3788 + (-t3258 * t4003 - t3260 * t4002 - t3262 * t4001) * t3732) * MDP(5) + (t3159 * t3789 + t3163 * t3787 + t3161 * t3788 + (-t3258 * t3901 - t3260 * t3897 - t3262 * t3893) * t3732) * MDP(6) + (t3160 * t3789 + t3164 * t3787 + t3162 * t3788 + (-t3258 * t3900 - t3260 * t3896 - t3262 * t3892) * t3732) * MDP(7) + (-t3165 * t4009 - t3166 * t4007 - t3167 * t4005) * t4198 + (t3687 * t3765 + t3693 * t3763 + t3690 * t3764 + (-t3258 * t4000 - t3260 * t3998 - t3262 * t3996) * t3732) * MDP(9) + (-t3681 * t3765 - t3685 * t3763 - t3683 * t3764 + (-t3258 * t3999 - t3260 * t3997 - t3262 * t3995) * t3732) * MDP(10) + (t3171 * t3789 + t3173 * t3787 + t3172 * t3788 + (t3258 * t3798 + t3260 * t3797 + t3262 * t3796 + (-t3288 * t3882 - t3290 * t3879 - t3292 * t3876) * t4056) * t3732) * MDP(11) + (t3168 * t3789 + t3170 * t3787 + t3169 * t3788 + (t3258 * t3825 + t3260 * t3824 + t3262 * t3823 + (-t3288 * t3881 - t3290 * t3878 - t3292 * t3875) * t3729) * t3732) * MDP(12) + (t3126 * t3789 + t3128 * t3787 + t3127 * t3788 + (-t3258 * t3902 - t3260 * t3898 - t3262 * t3894 + (t3288 * t4025 + t3290 * t4022 + t3292 * t4019) * t3729) * t3732) * MDP(13) + (t3123 * t3789 + t3125 * t3787 + t3124 * t3788 + (-t3258 * t3903 - t3260 * t3899 - t3262 * t3895 + (t3288 * t4026 + t3290 * t4023 + t3292 * t4020) * t3729) * t3732) * MDP(14) + (-t3147 * t4009 - t3148 * t4007 - t3149 * t4005 + (t3147 * t4178 + t3148 * t4174 + t3149 * t4170) * t3729) * t4194 + (t3132 * t3789 + t3134 * t3787 + t3133 * t3788 + (-t3138 * t4009 - t3139 * t4007 - t3140 * t4005 + (t3151 * t4178 + t3153 * t4174 + t3155 * t4170) * t3729) * t3732) * MDP(16) + (t3129 * t3789 + t3131 * t3787 + t3130 * t3788 + (-t3135 * t4009 - t3136 * t4007 - t3137 * t4005 + (t3150 * t4178 + t3152 * t4174 + t3154 * t4170) * t3729) * t3732) * MDP(17) + (t3678 - g(2)) * MDP(18); (-t3204 * t4133 - t3205 * t4131 - t3206 * t4129) * MDP(1) + (-t3348 * t4133 - t3350 * t4131 - t3352 * t4129) * MDP(2) + (-t3793 * t4129 - t3794 * t4131 - t3795 * t4133) * MDP(3) + (-t3195 * t4133 - t3196 * t4131 - t3197 * t4129 + (t3814 * t4103 + t3815 * t4108 + t3816 * t4113) * t3732) * MDP(4) + (-t3192 * t4133 - t3193 * t4131 - t3194 * t4129 + (t3276 * t3954 + t3277 * t3953 + t3278 * t3952) * t3732) * MDP(5) + (-t3159 * t4133 - t3161 * t4131 - t3163 * t4129 + (t3681 * t3864 + t3683 * t3853 + t3685 * t3863) * t3732) * MDP(6) + (-t3160 * t4133 - t3162 * t4131 - t3164 * t4129 + (t3687 * t3864 + t3690 * t3853 + t3693 * t3863) * t3732) * MDP(7) + (t3165 * t3954 + t3166 * t3953 + t3167 * t3952) * t4198 + (-t3687 * t3985 - t3690 * t3984 - t3693 * t3983 + (t3294 * t3954 + t3296 * t3953 + t3298 * t3952) * t3732) * MDP(9) + (t3681 * t3985 + t3683 * t3984 + t3685 * t3983 + (t3295 * t3954 + t3297 * t3953 + t3299 * t3952) * t3732) * MDP(10) + (-t3171 * t4133 - t3172 * t4131 - t3173 * t4129 + (-t3309 * t3885 - t3310 * t3884 - t3311 * t3883 + (-t3321 * t3882 - t3322 * t3879 - t3323 * t3876) * t4056) * t3732) * MDP(11) + (-t3168 * t4133 - t3169 * t4131 - t3170 * t4129 + (t3326 * t3814 + t3325 * t3815 + t3324 * t3816 + (-t3321 * t3881 - t3322 * t3878 - t3323 * t3875) * t3729) * t3732) * MDP(12) + (-t3126 * t4133 - t3127 * t4131 - t3128 * t4129 + (t3392 * t3863 + t3391 * t3853 + t3390 * t3864 + (t3321 * t4025 + t3322 * t4022 + t3323 * t4019) * t3729) * t3732) * MDP(13) + (-t3123 * t4133 - t3124 * t4131 - t3125 * t4129 + (t3389 * t3863 + t3388 * t3853 + t3387 * t3864 + (t3321 * t4026 + t3322 * t4023 + t3323 * t4020) * t3729) * t3732) * MDP(14) + (t3149 * t3952 + t3148 * t3953 + t3147 * t3954 + (t3147 * t4151 + t3148 * t4149 + t3149 * t4147) * t3729) * t4194 + (-t3132 * t4133 - t3133 * t4131 - t3134 * t4129 + (t3140 * t3952 + t3139 * t3953 + t3138 * t3954 + (t3151 * t4151 + t3153 * t4149 + t3155 * t4147) * t3729) * t3732) * MDP(16) + (-t3129 * t4133 - t3130 * t4131 - t3131 * t4129 + (t3137 * t3952 + t3136 * t3953 + t3135 * t3954 + (t3150 * t4151 + t3152 * t4149 + t3154 * t4147) * t3729) * t3732) * MDP(17) + (t3677 - g(3)) * MDP(18);];
tauX  = t1;
