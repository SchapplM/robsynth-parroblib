% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P3RRRRR7V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [3*3x18]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 10:08
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P3RRRRR7V2G2A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,3),zeros(3,3),zeros(3,3),zeros(7,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V2G2A0_inertia_para_pf_regmin: xP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V2G2A0_inertia_para_pf_regmin: qJ has to be [3x3] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RRRRR7V2G2A0_inertia_para_pf_regmin: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V2G2A0_inertia_para_pf_regmin: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V2G2A0_inertia_para_pf_regmin: Koppelpunkt has to be [3x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 09:52:01
% EndTime: 2020-08-07 09:52:28
% DurationCPUTime: 32.26s
% Computational Cost: add. (35910->865), mult. (62274->1583), div. (4239->27), fcn. (43746->66), ass. (0->683)
t1975 = legFrame(3,2);
t1932 = sin(t1975);
t2429 = -0.2e1 * t1932;
t1976 = legFrame(2,2);
t1933 = sin(t1976);
t2428 = -0.2e1 * t1933;
t1977 = legFrame(1,2);
t1934 = sin(t1977);
t2427 = -0.2e1 * t1934;
t1935 = cos(t1975);
t2426 = 0.2e1 * t1935;
t1936 = cos(t1976);
t2425 = 0.2e1 * t1936;
t1937 = cos(t1977);
t2424 = 0.2e1 * t1937;
t2390 = qJ(3,1) + qJ(1,1);
t1930 = qJ(2,1) + t2390;
t2391 = -qJ(3,1) + qJ(1,1);
t1931 = -qJ(2,1) + t2391;
t1995 = cos(qJ(1,1));
t2007 = 2 * qJ(3,1);
t2379 = 2 * pkin(1);
t2384 = qJ(1,1) - (2 * qJ(2,1));
t2385 = qJ(1,1) + (2 * qJ(2,1));
t1998 = pkin(5) + pkin(6);
t1948 = (pkin(7) + t1998);
t2413 = 2 * t1948;
t1832 = (cos(t1931) + cos(t1930)) * t2379 + (sin(t1931) + sin(t1930)) * t2413 + (cos((2 * qJ(3,1)) - t2384) + cos(t2007 + t2385) + 0.2e1 * t1995) * pkin(3) + (cos(qJ(3,1) - t2384) + cos(qJ(3,1) + t2385) + cos(t2391) + cos(t2390)) * pkin(2);
t1972 = qJ(2,1) + qJ(3,1);
t1985 = sin(qJ(2,1));
t2012 = pkin(2) ^ 2;
t1984 = sin(qJ(3,1));
t2396 = t1984 * pkin(1);
t1847 = -t2012 * sin((qJ(2,1) - qJ(3,1))) + pkin(2) * (pkin(2) * sin(t1972) + 0.2e1 * t2396 + (sin((t2007 + qJ(2,1))) - t1985) * pkin(3));
t2376 = t1832 / t1847;
t1823 = t2376 / 0.2e1;
t2388 = qJ(3,2) + qJ(1,2);
t1928 = qJ(2,2) + t2388;
t2389 = -qJ(3,2) + qJ(1,2);
t1929 = -qJ(2,2) + t2389;
t1992 = cos(qJ(1,2));
t2004 = 2 * qJ(3,2);
t2382 = qJ(1,2) - (2 * qJ(2,2));
t2383 = qJ(1,2) + (2 * qJ(2,2));
t1831 = (cos(t1929) + cos(t1928)) * t2379 + (sin(t1929) + sin(t1928)) * t2413 + (cos((2 * qJ(3,2)) - t2382) + cos(t2004 + t2383) + 0.2e1 * t1992) * pkin(3) + (cos(qJ(3,2) - t2382) + cos(qJ(3,2) + t2383) + cos(t2389) + cos(t2388)) * pkin(2);
t1971 = qJ(2,2) + qJ(3,2);
t1982 = sin(qJ(2,2));
t1981 = sin(qJ(3,2));
t2398 = t1981 * pkin(1);
t1846 = -t2012 * sin((qJ(2,2) - qJ(3,2))) + pkin(2) * (pkin(2) * sin(t1971) + 0.2e1 * t2398 + (sin((t2004 + qJ(2,2))) - t1982) * pkin(3));
t2377 = t1831 / t1846;
t1822 = t2377 / 0.2e1;
t2386 = qJ(3,3) + qJ(1,3);
t1926 = qJ(2,3) + t2386;
t2387 = -qJ(3,3) + qJ(1,3);
t1927 = -qJ(2,3) + t2387;
t1989 = cos(qJ(1,3));
t2001 = 2 * qJ(3,3);
t2380 = -(2 * qJ(2,3)) + qJ(1,3);
t2381 = (2 * qJ(2,3)) + qJ(1,3);
t1830 = (cos(t1927) + cos(t1926)) * t2379 + (sin(t1927) + sin(t1926)) * t2413 + (cos((2 * qJ(3,3)) - t2380) + cos(t2001 + t2381) + 0.2e1 * t1989) * pkin(3) + (cos(qJ(3,3) - t2380) + cos(qJ(3,3) + t2381) + cos(t2387) + cos(t2386)) * pkin(2);
t1970 = qJ(2,3) + qJ(3,3);
t1979 = sin(qJ(2,3));
t1978 = sin(qJ(3,3));
t2400 = t1978 * pkin(1);
t1845 = -t2012 * sin((qJ(2,3) - qJ(3,3))) + pkin(2) * (pkin(2) * sin(t1970) + 0.2e1 * t2400 + (sin((t2001 + qJ(2,3))) - t1979) * pkin(3));
t2378 = t1830 / t1845;
t1821 = t2378 / 0.2e1;
t1987 = cos(qJ(3,3));
t1938 = t1987 * pkin(3);
t2306 = pkin(2) * t1938;
t2010 = pkin(3) ^ 2;
t2307 = -t2010 / 0.2e1 + t2012 / 0.2e1;
t1961 = t1987 ^ 2;
t2324 = t1961 * t2010;
t1884 = t2306 + t2307 + t2324;
t1941 = pkin(3) * t1961;
t1980 = sin(qJ(1,3));
t2321 = t1978 * t1979;
t2238 = t1980 * t2321;
t2289 = pkin(3) * t2321;
t1917 = t1938 + pkin(2);
t1988 = cos(qJ(2,3));
t2346 = t1917 * t1988;
t1962 = t1988 ^ 2;
t2412 = -0.2e1 * t1962;
t1834 = t1884 * t1989 * t2412 - ((pkin(1) - 0.2e1 * t2289) * t1989 + t1980 * t1948) * t2346 + pkin(3) * ((pkin(1) * t2321 - pkin(3) + t1941) * t1989 + t1948 * t2238);
t2011 = 0.1e1 / pkin(3);
t2013 = 0.1e1 / pkin(2);
t1881 = pkin(1) - t2289 + t2346;
t2369 = 0.1e1 / t1881 / t1978;
t2267 = t2013 * t2369;
t2200 = t2011 * t2267;
t2423 = t1834 * t2200 + t1821;
t1990 = cos(qJ(3,2));
t1939 = t1990 * pkin(3);
t2305 = pkin(2) * t1939;
t1964 = t1990 ^ 2;
t2323 = t1964 * t2010;
t1885 = t2305 + t2307 + t2323;
t1942 = pkin(3) * t1964;
t1983 = sin(qJ(1,2));
t2318 = t1981 * t1982;
t2237 = t1983 * t2318;
t2288 = pkin(3) * t2318;
t1918 = t1939 + pkin(2);
t1991 = cos(qJ(2,2));
t2343 = t1918 * t1991;
t1965 = t1991 ^ 2;
t2410 = -0.2e1 * t1965;
t1835 = t1885 * t1992 * t2410 - ((pkin(1) - 0.2e1 * t2288) * t1992 + t1983 * t1948) * t2343 + pkin(3) * ((pkin(1) * t2318 - pkin(3) + t1942) * t1992 + t1948 * t2237);
t1882 = pkin(1) - t2288 + t2343;
t2367 = 0.1e1 / t1882 / t1981;
t2265 = t2013 * t2367;
t2197 = t2011 * t2265;
t2422 = t1835 * t2197 + t1822;
t1993 = cos(qJ(3,1));
t1940 = t1993 * pkin(3);
t2304 = pkin(2) * t1940;
t1967 = t1993 ^ 2;
t2322 = t1967 * t2010;
t1886 = t2304 + t2307 + t2322;
t1943 = pkin(3) * t1967;
t1986 = sin(qJ(1,1));
t2315 = t1984 * t1985;
t2236 = t1986 * t2315;
t2287 = pkin(3) * t2315;
t1919 = t1940 + pkin(2);
t1994 = cos(qJ(2,1));
t2340 = t1919 * t1994;
t1968 = t1994 ^ 2;
t2408 = -0.2e1 * t1968;
t1836 = t1886 * t1995 * t2408 - ((pkin(1) - 0.2e1 * t2287) * t1995 + t1986 * t1948) * t2340 + pkin(3) * ((pkin(1) * t2315 - pkin(3) + t1943) * t1995 + t1948 * t2236);
t1883 = pkin(1) - t2287 + t2340;
t2365 = 0.1e1 / t1883 / t1984;
t2263 = t2013 * t2365;
t2194 = t2011 * t2263;
t2421 = t1836 * t2194 + t1823;
t2310 = t1993 * t1985;
t2417 = -2 * pkin(1);
t2420 = -t1984 * pkin(2) * t2408 + 0.2e1 * (pkin(2) * t2310 + t2396) * t1994 - t2310 * t2417;
t2311 = t1990 * t1982;
t2419 = -t1981 * pkin(2) * t2410 + 0.2e1 * (pkin(2) * t2311 + t2398) * t1991 - t2311 * t2417;
t2312 = t1987 * t1979;
t2418 = -t1978 * pkin(2) * t2412 + 0.2e1 * (pkin(2) * t2312 + t2400) * t1988 - t2312 * t2417;
t2416 = -0.2e1 * pkin(2);
t2415 = 0.2e1 * pkin(2);
t2414 = 0.2e1 * pkin(3);
t2411 = 0.2e1 * t1962;
t2409 = 0.2e1 * t1965;
t2407 = 0.2e1 * t1968;
t2406 = -0.2e1 * t1979;
t2405 = -0.2e1 * t1982;
t2404 = -0.2e1 * t1985;
t2403 = t1998 / 0.2e1;
t2402 = pkin(5) / 0.2e1;
t2401 = pkin(5) * t2013;
t2399 = t1978 * pkin(3);
t2397 = t1981 * pkin(3);
t2395 = t1984 * pkin(3);
t2394 = t1987 * pkin(2);
t2393 = t1990 * pkin(2);
t2392 = t1993 * pkin(2);
t2232 = pkin(1) * t1980 - t1989 * t1948;
t1848 = t2232 * t2321 + (t1961 - 0.1e1) * t1980 * pkin(3);
t2375 = t1848 * t1932;
t2374 = t1848 * t1935;
t2231 = pkin(1) * t1983 - t1992 * t1948;
t1849 = t2231 * t2318 + (t1964 - 0.1e1) * t1983 * pkin(3);
t2373 = t1849 * t1933;
t2372 = t1849 * t1936;
t2230 = pkin(1) * t1986 - t1995 * t1948;
t1850 = t2230 * t2315 + (t1967 - 0.1e1) * t1986 * pkin(3);
t2371 = t1850 * t1934;
t2370 = t1850 * t1937;
t2368 = 0.1e1 / t1881 ^ 2 / t1978 ^ 2;
t2366 = 0.1e1 / t1882 ^ 2 / t1981 ^ 2;
t2364 = 0.1e1 / t1883 ^ 2 / t1984 ^ 2;
t1902 = pkin(3) * cos(t1970) + t1988 * pkin(2) + pkin(1);
t1896 = 0.1e1 / t1902;
t2363 = t1896 * t1980;
t2362 = t1896 * t1998;
t1897 = 0.1e1 / t1902 ^ 2;
t1963 = t1989 ^ 2;
t2361 = t1897 * t1963;
t1903 = pkin(3) * cos(t1971) + t1991 * pkin(2) + pkin(1);
t1898 = 0.1e1 / t1903;
t2360 = t1898 * t1983;
t2359 = t1898 * t1998;
t1899 = 0.1e1 / t1903 ^ 2;
t1966 = t1992 ^ 2;
t2358 = t1899 * t1966;
t1904 = pkin(3) * cos(t1972) + t1994 * pkin(2) + pkin(1);
t1900 = 0.1e1 / t1904;
t2357 = t1900 * t1986;
t2356 = t1900 * t1998;
t1901 = 0.1e1 / t1904 ^ 2;
t1969 = t1995 ^ 2;
t2355 = t1901 * t1969;
t1911 = pkin(1) * t1979 - t2399;
t2354 = t1911 * t1987;
t1912 = pkin(1) * t1982 - t2397;
t2353 = t1912 * t1990;
t1913 = pkin(1) * t1985 - t2395;
t2352 = t1913 * t1993;
t2000 = pkin(2) / 0.2e1;
t2351 = (t1938 + t2000) * t1978;
t2350 = (t1939 + t2000) * t1981;
t2349 = (t1940 + t2000) * t1984;
t2348 = t1917 * t1932;
t2347 = t1917 * t1935;
t2345 = t1918 * t1933;
t2344 = t1918 * t1936;
t2342 = t1919 * t1934;
t2341 = t1919 * t1937;
t2339 = t1932 * t1980;
t2338 = t1932 * t1989;
t2337 = t1933 * t1983;
t2336 = t1933 * t1992;
t2335 = t1934 * t1986;
t2334 = t1934 * t1995;
t2333 = t1935 * t1980;
t2332 = t1935 * t1989;
t2331 = t1936 * t1983;
t2330 = t1936 * t1992;
t2329 = t1937 * t1986;
t2328 = t1937 * t1995;
t1952 = t1980 ^ 2;
t2327 = t1952 * t1897;
t1956 = t1983 ^ 2;
t2326 = t1956 * t1899;
t1960 = t1986 ^ 2;
t2325 = t1960 * t1901;
t2320 = t1978 * t1998;
t2319 = t1979 * t1988;
t2317 = t1981 * t1998;
t2316 = t1982 * t1991;
t2314 = t1984 * t1998;
t2313 = t1985 * t1994;
t2309 = t2013 / 0.2e1;
t2308 = t2011 * t2013;
t2299 = 0.2e1 * t2013;
t2298 = pkin(1) * t2363;
t2297 = pkin(1) * t1896 * t1989;
t2296 = pkin(1) * t2360;
t2295 = pkin(1) * t1898 * t1992;
t2294 = pkin(1) * t2357;
t2293 = pkin(1) * t1900 * t1995;
t2292 = t1917 * t2399;
t2291 = t1918 * t2397;
t2290 = t1919 * t2395;
t1947 = -t2010 + t2012;
t1851 = pkin(1) * t2399 + (t1947 + 0.2e1 * t2306 + 0.2e1 * t2324) * t1979;
t1872 = t2238 * t2414 - t2232;
t1797 = (t1884 * t2339 - t1935 * t2292) * t2411 + (-t1851 * t1935 - t1872 * t2348) * t1988 - pkin(3) * t2375 - t1911 * t2347;
t2286 = t1797 * t2369;
t1798 = (-t1884 * t2333 - t1932 * t2292) * t2411 + (-t1932 * t1851 + t1872 * t2347) * t1988 + pkin(3) * t2374 - t1911 * t2348;
t2285 = t1798 * t2369;
t1852 = pkin(1) * t2397 + (t1947 + 0.2e1 * t2305 + 0.2e1 * t2323) * t1982;
t1873 = t2237 * t2414 - t2231;
t1799 = (t1885 * t2337 - t1936 * t2291) * t2409 + (-t1852 * t1936 - t1873 * t2345) * t1991 - pkin(3) * t2373 - t1912 * t2344;
t2284 = t1799 * t2367;
t1800 = (-t1885 * t2331 - t1933 * t2291) * t2409 + (-t1933 * t1852 + t1873 * t2344) * t1991 + pkin(3) * t2372 - t1912 * t2345;
t2283 = t1800 * t2367;
t1853 = pkin(1) * t2395 + (t1947 + 0.2e1 * t2304 + 0.2e1 * t2322) * t1985;
t1874 = t2236 * t2414 - t2230;
t1801 = (t1886 * t2335 - t1937 * t2290) * t2407 + (-t1853 * t1937 - t1874 * t2342) * t1994 - pkin(3) * t2371 - t1913 * t2341;
t2282 = t1801 * t2365;
t1802 = (-t1886 * t2329 - t1934 * t2290) * t2407 + (-t1934 * t1853 + t1874 * t2341) * t1994 + pkin(3) * t2370 - t1913 * t2342;
t2281 = t1802 * t2365;
t1869 = t2400 + (-pkin(3) + t2394 + 0.2e1 * t1941) * t1979;
t1999 = -pkin(3) / 0.2e1;
t1905 = t1941 + t2394 / 0.2e1 + t1999;
t2052 = pkin(2) * t2238 + t1872 * t1987;
t1803 = (-t1905 * t2339 + t1935 * t2351) * t2411 + (t1935 * t1869 + t2052 * t1932) * t1988 + t2375 + t1935 * t2354;
t2280 = t1803 * t2369;
t1804 = (t1905 * t2333 + t1932 * t2351) * t2411 + (t1932 * t1869 - t2052 * t1935) * t1988 - t2374 + t1932 * t2354;
t2279 = t1804 * t2369;
t1870 = t2398 + (-pkin(3) + t2393 + 0.2e1 * t1942) * t1982;
t1906 = t1942 + t2393 / 0.2e1 + t1999;
t2051 = pkin(2) * t2237 + t1873 * t1990;
t1805 = (-t1906 * t2337 + t1936 * t2350) * t2409 + (t1936 * t1870 + t2051 * t1933) * t1991 + t2373 + t1936 * t2353;
t2278 = t1805 * t2367;
t1806 = (t1906 * t2331 + t1933 * t2350) * t2409 + (t1933 * t1870 - t2051 * t1936) * t1991 - t2372 + t1933 * t2353;
t2277 = t1806 * t2367;
t1871 = t2396 + (-pkin(3) + t2392 + 0.2e1 * t1943) * t1985;
t1907 = t1943 + t2392 / 0.2e1 + t1999;
t2050 = pkin(2) * t2236 + t1874 * t1993;
t1807 = (-t1907 * t2335 + t1937 * t2349) * t2407 + (t1937 * t1871 + t2050 * t1934) * t1994 + t2371 + t1937 * t2352;
t2276 = t1807 * t2365;
t1808 = (t1907 * t2329 + t1934 * t2349) * t2407 + (t1934 * t1871 - t2050 * t1937) * t1994 - t2370 + t1934 * t2352;
t2275 = t1808 * t2365;
t2274 = t1896 * t2378;
t2273 = t1898 * t2377;
t2272 = t1900 * t2376;
t2271 = t1834 * t2369;
t2270 = t1835 * t2367;
t2269 = t1836 * t2365;
t2268 = t1896 * t2369;
t2266 = t1898 * t2367;
t2264 = t1900 * t2365;
t2262 = t1896 * t2338;
t2261 = t1896 * t2332;
t2260 = t1980 * t2362;
t2259 = t1989 * t2362;
t2258 = t1897 * t2319;
t2257 = t1897 * t1980 * t1989;
t2256 = t1898 * t2336;
t2255 = t1898 * t2330;
t2254 = t1983 * t2359;
t2253 = t1992 * t2359;
t2252 = t1899 * t2316;
t2251 = t1899 * t1983 * t1992;
t2250 = t1900 * t2334;
t2249 = t1900 * t2328;
t2248 = t1986 * t2356;
t2247 = t1995 * t2356;
t2246 = t1901 * t2313;
t2245 = t1901 * t1986 * t1995;
t1920 = t1932 ^ 2;
t2244 = t1920 * t2361;
t1921 = t1933 ^ 2;
t2243 = t1921 * t2358;
t1922 = t1934 ^ 2;
t2242 = t1922 * t2355;
t1923 = t1935 ^ 2;
t2241 = t1923 * t2361;
t1924 = t1936 ^ 2;
t2240 = t1924 * t2358;
t1925 = t1937 ^ 2;
t2239 = t1925 * t2355;
t2235 = t1987 * t2403;
t2234 = t1990 * t2403;
t2233 = t1993 * t2403;
t2229 = t1978 * t2297;
t2228 = t1979 * t2297;
t2227 = t1988 * t2297;
t2226 = t1981 * t2295;
t2225 = t1982 * t2295;
t2224 = t1991 * t2295;
t2223 = t1984 * t2293;
t2222 = t1985 * t2293;
t2221 = t1994 * t2293;
t2220 = t1896 * t1962 * t2394;
t2219 = t1898 * t1965 * t2393;
t2218 = t1900 * t1968 * t2392;
t2217 = pkin(5) * t1821;
t2216 = pkin(5) * t1822;
t2215 = pkin(5) * t1823;
t2214 = pkin(5) * t2267;
t2213 = pkin(5) * t2265;
t2212 = pkin(5) * t2263;
t2211 = t2369 * t2378;
t2210 = t1980 * t2274;
t2209 = t1989 * t2274;
t2208 = t2367 * t2377;
t2207 = t1983 * t2273;
t2206 = t1992 * t2273;
t2205 = t2365 * t2376;
t2204 = t1986 * t2272;
t2203 = t1995 * t2272;
t2202 = t1980 * t2268;
t2201 = t1989 * t2268;
t2199 = t1983 * t2266;
t2198 = t1992 * t2266;
t2196 = t1986 * t2264;
t2195 = t1995 * t2264;
t2097 = -t1987 * t1988 + t2321;
t2193 = t2097 * t2262;
t2192 = t2097 * t2261;
t2096 = -t1990 * t1991 + t2318;
t2191 = t2096 * t2256;
t2190 = t2096 * t2255;
t2095 = -t1993 * t1994 + t2315;
t2189 = t2095 * t2250;
t2188 = t2095 * t2249;
t1893 = t1978 * t1988 + t2312;
t2187 = t1893 * t2262;
t2186 = t1893 * t2261;
t1894 = t1981 * t1991 + t2311;
t2185 = t1894 * t2256;
t2184 = t1894 * t2255;
t1895 = t1984 * t1994 + t2310;
t2183 = t1895 * t2250;
t2182 = t1895 * t2249;
t2181 = t1979 * t2259;
t2180 = t1988 * t2260;
t2179 = t1988 * t2259;
t2178 = t1963 * t2258;
t2177 = t1982 * t2253;
t2176 = t1991 * t2254;
t2175 = t1991 * t2253;
t2174 = t1966 * t2252;
t2173 = t1985 * t2247;
t2172 = t1994 * t2248;
t2171 = t1994 * t2247;
t2170 = t1969 * t2246;
t2169 = t1932 * t2257;
t2168 = t1933 * t2251;
t2167 = t1934 * t2245;
t2166 = t1935 * t1932 * t2361;
t2165 = t1936 * t1933 * t2358;
t2164 = t1937 * t1934 * t2355;
t2163 = t1979 * t2260;
t2162 = t1982 * t2254;
t2161 = t1985 * t2248;
t2160 = t1935 * t2257;
t2159 = t1936 * t2251;
t2158 = t1937 * t2245;
t2157 = t1989 * t2220;
t2156 = t1992 * t2219;
t2155 = t1995 * t2218;
t2154 = t1979 * t2214;
t2153 = t1988 * t2214;
t2152 = t1982 * t2213;
t2151 = t1991 * t2213;
t2150 = t1985 * t2212;
t2149 = t1994 * t2212;
t2148 = t1979 * t2209;
t2147 = t1988 * t2209;
t2146 = t1982 * t2206;
t2145 = t1991 * t2206;
t2144 = t1985 * t2203;
t2143 = t1994 * t2203;
t2139 = t2097 * t2202;
t2138 = t1893 * t2202;
t2137 = t1932 * t2201;
t2136 = t1935 * t2201;
t2135 = t1979 * t2202;
t2134 = t1979 * t2201;
t2133 = t1988 * t2202;
t2132 = t1988 * t2201;
t2131 = t2096 * t2199;
t2130 = t1894 * t2199;
t2129 = t1933 * t2198;
t2128 = t1936 * t2198;
t2127 = t1982 * t2199;
t2126 = t1982 * t2198;
t2125 = t1991 * t2199;
t2124 = t1991 * t2198;
t2123 = t2095 * t2196;
t2122 = t1895 * t2196;
t2121 = t1934 * t2195;
t2120 = t1937 * t2195;
t2119 = t1985 * t2196;
t2118 = t1985 * t2195;
t2117 = t1994 * t2196;
t2116 = t1994 * t2195;
t2115 = t1978 * t2179;
t2114 = t1987 * t2179;
t2113 = t2257 * t2319;
t2112 = t1981 * t2175;
t2111 = t1990 * t2175;
t2110 = t2251 * t2316;
t2109 = t1984 * t2171;
t2108 = t1993 * t2171;
t2107 = t2245 * t2313;
t2106 = t1932 * t2181;
t2105 = t1933 * t2177;
t2104 = t1934 * t2173;
t2103 = t1935 * t2181;
t2102 = t1936 * t2177;
t2101 = t1937 * t2173;
t2100 = t2200 / 0.2e1;
t2099 = t2197 / 0.2e1;
t2098 = t2194 / 0.2e1;
t2093 = -pkin(1) * t1987 + pkin(2) * t2321;
t2091 = -pkin(1) * t1990 + pkin(2) * t2318;
t2089 = -pkin(1) * t1993 + pkin(2) * t2315;
t2088 = t2097 * t2137;
t2087 = t2097 * t2136;
t2086 = t1893 * t2137;
t2085 = t1893 * t2136;
t2084 = t1932 * t2134;
t2083 = t1932 * t2132;
t2082 = t1935 * t2134;
t2081 = t1935 * t2132;
t2080 = t2096 * t2129;
t2079 = t2096 * t2128;
t2078 = t1894 * t2129;
t2077 = t1894 * t2128;
t2076 = t1933 * t2126;
t2075 = t1933 * t2124;
t2074 = t1936 * t2126;
t2073 = t1936 * t2124;
t2072 = t2095 * t2121;
t2071 = t2095 * t2120;
t2070 = t1895 * t2121;
t2069 = t1895 * t2120;
t2068 = t1934 * t2118;
t2067 = t1934 * t2116;
t2066 = t1937 * t2118;
t2065 = t1937 * t2116;
t2064 = t1935 * t2115;
t2063 = t1936 * t2112;
t2062 = t1937 * t2109;
t2061 = t1935 * t2114;
t2060 = t1936 * t2111;
t2059 = t1937 * t2108;
t2055 = t1998 * t2097;
t2054 = t1998 * t2096;
t2053 = t1998 * t2095;
t2049 = 0.2e1 * t1896 * t2093;
t2048 = 0.2e1 * t1898 * t2091;
t2047 = 0.2e1 * t1900 * t2089;
t2043 = (t1803 * t1935 - t1804 * t1932) * t2201;
t2042 = (t1805 * t1936 - t1806 * t1933) * t2198;
t2041 = (t1807 * t1937 - t1808 * t1934) * t2195;
t2040 = -0.2e1 * t2423 * t2363;
t2039 = -0.2e1 * t2422 * t2360;
t2038 = -0.2e1 * t2421 * t2357;
t1785 = t1803 * t2267;
t1737 = t1797 * t2200 + t1785;
t2037 = t1896 * (-t1737 * t1980 - t2338 * t2423);
t1786 = t1804 * t2267;
t1738 = t1798 * t2200 + t1786;
t2036 = t1896 * (-t1738 * t1980 + t2332 * t2423);
t1787 = t1805 * t2265;
t1739 = t1799 * t2197 + t1787;
t2035 = t1898 * (-t1739 * t1983 - t2336 * t2422);
t1788 = t1806 * t2265;
t1740 = t1800 * t2197 + t1788;
t2034 = t1898 * (-t1740 * t1983 + t2330 * t2422);
t1789 = t1807 * t2263;
t1741 = t1801 * t2194 + t1789;
t2033 = t1900 * (-t1741 * t1986 - t2334 * t2421);
t1790 = t1808 * t2263;
t1742 = t1802 * t2194 + t1790;
t2032 = t1900 * (-t1742 * t1986 + t2328 * t2421);
t2031 = t1896 * t2418;
t2030 = t1898 * t2419;
t2029 = t1900 * t2420;
t2028 = t1979 * t2210 + t1982 * t2207 + t1985 * t2204;
t2027 = t1988 * t2210 + t1991 * t2207 + t1994 * t2204;
t2026 = t1803 * t2135 + t1805 * t2127 + t1807 * t2119;
t2025 = t1803 * t2133 + t1805 * t2125 + t1807 * t2117;
t2024 = t1804 * t2135 + t1806 * t2127 + t1808 * t2119;
t2023 = t1804 * t2133 + t1806 * t2125 + t1808 * t2117;
t2022 = t1932 * t2148 + t1933 * t2146 + t1934 * t2144;
t2021 = t1932 * t2147 + t1933 * t2145 + t1934 * t2143;
t2020 = t1935 * t2148 + t1936 * t2146 + t1937 * t2144;
t2019 = t1935 * t2147 + t1936 * t2145 + t1937 * t2143;
t2018 = t1803 * t2084 + t1805 * t2076 + t1807 * t2068;
t2017 = t1803 * t2083 + t1805 * t2075 + t1807 * t2067;
t2016 = t1804 * t2082 + t1806 * t2074 + t1808 * t2066;
t2015 = t1804 * t2081 + t1806 * t2073 + t1808 * t2065;
t2014 = 0.1e1 / pkin(2) ^ 2;
t1959 = t1985 ^ 2;
t1955 = t1982 ^ 2;
t1951 = t1979 ^ 2;
t1889 = t1895 ^ 2;
t1888 = t1894 ^ 2;
t1887 = t1893 ^ 2;
t1868 = t1993 * t2172;
t1867 = t1990 * t2176;
t1866 = t1987 * t2180;
t1865 = t1984 * t2172;
t1864 = t1981 * t2176;
t1863 = t1978 * t2180;
t1862 = t1934 * t2108;
t1861 = t1933 * t2111;
t1860 = t1932 * t2114;
t1859 = t1934 * t2109;
t1858 = t1933 * t2112;
t1857 = t1932 * t2115;
t1856 = (t1967 - 0.1e1 / 0.2e1) * t2313 + (t1968 - 0.1e1 / 0.2e1) * t1993 * t1984;
t1855 = (t1964 - 0.1e1 / 0.2e1) * t2316 + (t1965 - 0.1e1 / 0.2e1) * t1990 * t1981;
t1854 = (t1961 - 0.1e1 / 0.2e1) * t2319 + (t1962 - 0.1e1 / 0.2e1) * t1987 * t1978;
t1841 = -t2158 - t2159 - t2160;
t1840 = t2167 + t2168 + t2169;
t1839 = -t2164 - t2165 - t2166;
t1838 = -t1951 * t2160 - t1955 * t2159 - t1959 * t2158;
t1837 = t1951 * t2169 + t1955 * t2168 + t1959 * t2167;
t1833 = -t1951 * t2166 - t1955 * t2165 - t1959 * t2164;
t1829 = -0.2e1 * t1935 * t2113 - 0.2e1 * t1936 * t2110 - 0.2e1 * t1937 * t2107;
t1828 = 0.2e1 * t1932 * t2113 + 0.2e1 * t1933 * t2110 + 0.2e1 * t1934 * t2107;
t1827 = -0.2e1 * t2164 * t2313 - 0.2e1 * t2165 * t2316 - 0.2e1 * t2166 * t2319;
t1826 = -t1887 * t2160 - t1888 * t2159 - t1889 * t2158;
t1825 = t1887 * t2169 + t1888 * t2168 + t1889 * t2167;
t1824 = -t1887 * t2166 - t1888 * t2165 - t1889 * t2164;
t1820 = pkin(2) * t1823 + t2161;
t1819 = pkin(2) * t1822 + t2162;
t1818 = pkin(2) * t1821 + t2163;
t1817 = 0.2e1 * t1985 * t2294 - t1994 * t2215;
t1816 = 0.2e1 * t1982 * t2296 - t1991 * t2216;
t1815 = 0.2e1 * t1979 * t2298 - t1988 * t2217;
t1814 = -t1985 * t2215 - 0.2e1 * t1994 * t2294;
t1813 = -t1982 * t2216 - 0.2e1 * t1991 * t2296;
t1812 = -t1979 * t2217 - 0.2e1 * t1988 * t2298;
t1811 = -0.4e1 * t1854 * t2160 - 0.4e1 * t1855 * t2159 - 0.4e1 * t1856 * t2158;
t1810 = 0.4e1 * t1854 * t2169 + 0.4e1 * t1855 * t2168 + 0.4e1 * t1856 * t2167;
t1809 = -0.4e1 * t1854 * t2166 - 0.4e1 * t1855 * t2165 - 0.4e1 * t1856 * t2164;
t1796 = -t1820 * t1984 + t1868;
t1795 = t1820 * t1993 + t1865;
t1794 = -t1819 * t1981 + t1867;
t1793 = t1819 * t1990 + t1864;
t1792 = -t1818 * t1978 + t1866;
t1791 = t1818 * t1987 + t1863;
t1784 = t2101 - t2275;
t1783 = t2102 - t2277;
t1782 = t2103 - t2279;
t1781 = t2104 + t2276;
t1780 = t2105 + t2278;
t1779 = t2106 + t2280;
t1778 = -t1808 * t2149 - 0.2e1 * t1937 * t2222;
t1777 = -t1807 * t2149 + 0.2e1 * t1934 * t2222;
t1776 = -t1806 * t2151 - 0.2e1 * t1936 * t2225;
t1775 = -t1805 * t2151 + 0.2e1 * t1933 * t2225;
t1774 = -t1804 * t2153 - 0.2e1 * t1935 * t2228;
t1773 = -t1803 * t2153 + 0.2e1 * t1932 * t2228;
t1772 = -t1808 * t2150 + t2221 * t2424;
t1771 = -t1807 * t2150 + t2221 * t2427;
t1770 = -t1806 * t2152 + t2224 * t2425;
t1769 = -t1805 * t2152 + t2224 * t2428;
t1768 = -t1804 * t2154 + t2227 * t2426;
t1767 = -t1803 * t2154 + t2227 * t2429;
t1763 = -t1784 * t1993 - t2062;
t1762 = t1784 * t1984 - t2059;
t1761 = -t1783 * t1990 - t2063;
t1760 = t1783 * t1981 - t2060;
t1759 = -t1782 * t1987 - t2064;
t1758 = t1782 * t1978 - t2061;
t1757 = -t1781 * t1984 + t1862;
t1756 = t1781 * t1993 + t1859;
t1755 = -t1780 * t1981 + t1861;
t1754 = t1780 * t1990 + t1858;
t1753 = -t1779 * t1978 + t1860;
t1752 = t1779 * t1987 + t1857;
t1751 = t2161 + (t1836 * t2098 + t1823) * t2415;
t1750 = t2162 + (t1835 * t2099 + t1822) * t2415;
t1749 = t2163 + (t1834 * t2100 + t1821) * t2415;
t1748 = -t1751 * t1984 + t1868;
t1747 = t1751 * t1993 + t1865;
t1746 = -t1750 * t1981 + t1867;
t1745 = t1750 * t1990 + t1864;
t1744 = -t1749 * t1978 + t1866;
t1743 = t1749 * t1987 + t1863;
t1736 = t2101 + (t1802 * t2098 + t1790) * t2416;
t1735 = t2102 + (t1800 * t2099 + t1788) * t2416;
t1734 = t2103 + (t1798 * t2100 + t1786) * t2416;
t1733 = t2104 + (t1801 * t2098 + t1789) * t2415;
t1732 = t2105 + (t1799 * t2099 + t1787) * t2415;
t1731 = t2106 + (t1797 * t2100 + t1785) * t2415;
t1730 = -t1736 * t1993 - t2062;
t1729 = t1736 * t1984 - t2059;
t1728 = -t1735 * t1990 - t2063;
t1727 = t1735 * t1981 - t2060;
t1726 = -t1734 * t1987 - t2064;
t1725 = t1734 * t1978 - t2061;
t1724 = -t1733 * t1984 + t1862;
t1723 = t1733 * t1993 + t1859;
t1722 = -t1732 * t1981 + t1861;
t1721 = t1732 * t1990 + t1858;
t1720 = -t1731 * t1978 + t1860;
t1719 = t1731 * t1987 + t1857;
t1718 = t1986 * t2029 + t2053 * t2421;
t1717 = t1983 * t2030 + t2054 * t2422;
t1716 = t1980 * t2031 + t2055 * t2423;
t1715 = -0.2e1 * t1986 * t2218 + (t1986 * t2047 - t2314 * t2421) * t1994 + (-t1984 * t2294 + t2233 * t2421) * t2404;
t1714 = -0.2e1 * t1983 * t2219 + (t1983 * t2048 - t2317 * t2422) * t1991 + (-t1981 * t2296 + t2234 * t2422) * t2405;
t1713 = -0.2e1 * t1980 * t2220 + (t1980 * t2049 - t2320 * t2423) * t1988 + (-t1978 * t2298 + t2235 * t2423) * t2406;
t1712 = t1742 * t2053 - t2249 * t2420;
t1711 = t1741 * t2053 + t2029 * t2334;
t1710 = t1740 * t2054 - t2255 * t2419;
t1709 = t1739 * t2054 + t2030 * t2336;
t1708 = t1738 * t2055 - t2261 * t2418;
t1707 = t1737 * t2055 + t2031 * t2338;
t1706 = t2155 * t2424 + (-t1742 * t2314 - 0.2e1 * t2089 * t2249) * t1994 + (t1742 * t2233 + t1937 * t2223) * t2404;
t1705 = t2155 * t2427 + (-t1741 * t2314 + t2047 * t2334) * t1994 + (t1741 * t2233 - t1934 * t2223) * t2404;
t1704 = t2156 * t2425 + (-t1740 * t2317 - 0.2e1 * t2091 * t2255) * t1991 + (t1740 * t2234 + t1936 * t2226) * t2405;
t1703 = t2156 * t2428 + (-t1739 * t2317 + t2048 * t2336) * t1991 + (t1739 * t2234 - t1933 * t2226) * t2405;
t1702 = t2157 * t2426 + (-t1738 * t2320 - 0.2e1 * t2093 * t2261) * t1988 + (t1738 * t2235 + t1935 * t2229) * t2406;
t1701 = t2157 * t2429 + (-t1737 * t2320 + t2049 * t2338) * t1988 + (t1737 * t2235 - t1932 * t2229) * t2406;
t1700 = (t1804 * t2211 + t1806 * t2208 + t1808 * t2205) * t2309;
t1699 = (t1803 * t2211 + t1805 * t2208 + t1807 * t2205) * t2309;
t1698 = -t2023 * t2013 + t2019 / 0.2e1;
t1697 = -t2024 * t2013 + t2020 / 0.2e1;
t1696 = -t2025 * t2013 - t2021 / 0.2e1;
t1695 = -t2026 * t2013 - t2022 / 0.2e1;
t1694 = (t1803 * t1804 * t2368 + t1805 * t1806 * t2366 + t1807 * t1808 * t2364) * t2014;
t1693 = (t1988 * t2043 + t1991 * t2042 + t1994 * t2041) * t2013;
t1692 = (t1979 * t2043 + t1982 * t2042 + t1985 * t2041) * t2013;
t1 = [t2239 + t2240 + t2241, 0, 0, t1951 * t2241 + t1955 * t2240 + t1959 * t2239, 0.2e1 * t1923 * t2178 + 0.2e1 * t1924 * t2174 + 0.2e1 * t1925 * t2170, t2016 * t2299, t2015 * t2299, (t1804 ^ 2 * t2368 + t1806 ^ 2 * t2366 + t1808 ^ 2 * t2364) * t2014, t1768 * t2261 + t1770 * t2255 + t1772 * t2249 - t2016 * t2401, t1774 * t2261 + t1776 * t2255 + t1778 * t2249 - t2015 * t2401, t1887 * t2241 + t1888 * t2240 + t1889 * t2239, 0.4e1 * t1854 * t2241 + 0.4e1 * t1855 * t2240 + 0.4e1 * t1856 * t2239, t1738 * t2186 + t1740 * t2184 + t1742 * t2182 + (t1804 * t2085 + t1806 * t2077 + t1808 * t2069 + (t1798 * t2085 + t1800 * t2077 + t1802 * t2069) * t2011) * t2013, -t1738 * t2192 - t1740 * t2190 - t1742 * t2188 + (-t1804 * t2087 - t1806 * t2079 - t1808 * t2071 + (-t1798 * t2087 - t1800 * t2079 - t1802 * t2071) * t2011) * t2013, (t1738 * t2279 + t1740 * t2277 + t1742 * t2275 + (t1738 * t2285 + t1740 * t2283 + t1742 * t2281) * t2011) * t2013, t1702 * t2261 + t1704 * t2255 + t1706 * t2249 + (t1726 * t2279 + t1728 * t2277 + t1730 * t2275 + (t1759 * t2285 + t1761 * t2283 + t1763 * t2281) * t2011) * t2013, t1708 * t2261 + t1710 * t2255 + t1712 * t2249 + (t1725 * t2279 + t1727 * t2277 + t1729 * t2275 + (t1758 * t2285 + t1760 * t2283 + t1762 * t2281) * t2011) * t2013, 1; t1839, 0, 0, t1833, t1827, t1692, t1693, t1694, t1767 * t2261 + t1769 * t2255 + t1771 * t2249 + (t1804 * t2084 + t1806 * t2076 + t1808 * t2068) * t2401, t1773 * t2261 + t1775 * t2255 + t1777 * t2249 + (t1804 * t2083 + t1806 * t2075 + t1808 * t2067) * t2401, t1824, t1809, t1737 * t2186 + t1739 * t2184 + t1741 * t2182 + (-t1804 * t2086 - t1806 * t2078 - t1808 * t2070 + (-t1798 * t2086 - t1800 * t2078 - t1802 * t2070) * t2011) * t2013, -t1737 * t2192 - t1739 * t2190 - t1741 * t2188 + (t1804 * t2088 + t1806 * t2080 + t1808 * t2072 + (t1798 * t2088 + t1800 * t2080 + t1802 * t2072) * t2011) * t2013, (t1737 * t2279 + t1739 * t2277 + t1741 * t2275 + (t1737 * t2285 + t1739 * t2283 + t1741 * t2281) * t2011) * t2013, t1701 * t2261 + t1703 * t2255 + t1705 * t2249 + (t1719 * t2279 + t1721 * t2277 + t1723 * t2275 + (t1752 * t2285 + t1754 * t2283 + t1756 * t2281) * t2011) * t2013, t1707 * t2261 + t1709 * t2255 + t1711 * t2249 + (t1720 * t2279 + t1722 * t2277 + t1724 * t2275 + (t1753 * t2285 + t1755 * t2283 + t1757 * t2281) * t2011) * t2013, 0; t1841, 0, 0, t1838, t1829, t1697, t1698, t1700, t1812 * t2261 + t1813 * t2255 + t1814 * t2249 + t2024 * t2401, t1815 * t2261 + t1816 * t2255 + t1817 * t2249 + t2023 * t2401, t1826, t1811, t2423 * t2186 + t2422 * t2184 + t2421 * t2182 + (-t1804 * t2138 - t1806 * t2130 - t1808 * t2122 + (-t1798 * t2138 - t1800 * t2130 - t1802 * t2122) * t2011) * t2013, -t2423 * t2192 - t2422 * t2190 - t2421 * t2188 + (t1804 * t2139 + t1806 * t2131 + t1808 * t2123 + (t1798 * t2139 + t1800 * t2131 + t1802 * t2123) * t2011) * t2013, (t2423 * t2279 + t2422 * t2277 + t2421 * t2275 + (t2281 * t2421 + t2283 * t2422 + t2285 * t2423) * t2011) * t2013, t1713 * t2261 + t1714 * t2255 + t1715 * t2249 + (t1743 * t2279 + t1745 * t2277 + t1747 * t2275 + (t1791 * t2285 + t1793 * t2283 + t1795 * t2281) * t2011) * t2013, t1716 * t2261 + t1717 * t2255 + t1718 * t2249 + (t1744 * t2279 + t1746 * t2277 + t1748 * t2275 + (t1792 * t2285 + t1794 * t2283 + t1796 * t2281) * t2011) * t2013, 0; t1839, 0, 0, t1833, t1827, t1692, t1693, t1694, -t1768 * t2262 - t1770 * t2256 - t1772 * t2250 + (-t1803 * t2082 - t1805 * t2074 - t1807 * t2066) * t2401, -t1774 * t2262 - t1776 * t2256 - t1778 * t2250 + (-t1803 * t2081 - t1805 * t2073 - t1807 * t2065) * t2401, t1824, t1809, -t1738 * t2187 - t1740 * t2185 - t1742 * t2183 + (t1803 * t2085 + t1805 * t2077 + t1807 * t2069 + (t1797 * t2085 + t1799 * t2077 + t1801 * t2069) * t2011) * t2013, t1738 * t2193 + t1740 * t2191 + t1742 * t2189 + (-t1803 * t2087 - t1805 * t2079 - t1807 * t2071 + (-t1797 * t2087 - t1799 * t2079 - t1801 * t2071) * t2011) * t2013, (t1738 * t2280 + t1740 * t2278 + t1742 * t2276 + (t1738 * t2286 + t1740 * t2284 + t1742 * t2282) * t2011) * t2013, -t1702 * t2262 - t1704 * t2256 - t1706 * t2250 + (t1726 * t2280 + t1728 * t2278 + t1730 * t2276 + (t1759 * t2286 + t1761 * t2284 + t1763 * t2282) * t2011) * t2013, -t1708 * t2262 - t1710 * t2256 - t1712 * t2250 + (t1725 * t2280 + t1727 * t2278 + t1729 * t2276 + (t1758 * t2286 + t1760 * t2284 + t1762 * t2282) * t2011) * t2013, 0; t2242 + t2243 + t2244, 0, 0, t1951 * t2244 + t1955 * t2243 + t1959 * t2242, 0.2e1 * t1920 * t2178 + 0.2e1 * t1921 * t2174 + 0.2e1 * t1922 * t2170, -t2018 * t2299, -t2017 * t2299, (t1803 ^ 2 * t2368 + t1805 ^ 2 * t2366 + t1807 ^ 2 * t2364) * t2014, -t1767 * t2262 - t1769 * t2256 - t1771 * t2250 + t2018 * t2401, -t1773 * t2262 - t1775 * t2256 - t1777 * t2250 + t2017 * t2401, t1887 * t2244 + t1888 * t2243 + t1889 * t2242, 0.4e1 * t1854 * t2244 + 0.4e1 * t1855 * t2243 + 0.4e1 * t1856 * t2242, -t1737 * t2187 - t1739 * t2185 - t1741 * t2183 + (-t1803 * t2086 - t1805 * t2078 - t1807 * t2070 + (-t1797 * t2086 - t1799 * t2078 - t1801 * t2070) * t2011) * t2013, t1737 * t2193 + t1739 * t2191 + t1741 * t2189 + (t1803 * t2088 + t1805 * t2080 + t1807 * t2072 + (t1797 * t2088 + t1799 * t2080 + t1801 * t2072) * t2011) * t2013, (t1737 * t2280 + t1739 * t2278 + t1741 * t2276 + (t1737 * t2286 + t1739 * t2284 + t1741 * t2282) * t2011) * t2013, -t1701 * t2262 - t1703 * t2256 - t1705 * t2250 + (t1719 * t2280 + t1721 * t2278 + t1723 * t2276 + (t1752 * t2286 + t1754 * t2284 + t1756 * t2282) * t2011) * t2013, -t1707 * t2262 - t1709 * t2256 - t1711 * t2250 + (t1720 * t2280 + t1722 * t2278 + t1724 * t2276 + (t1753 * t2286 + t1755 * t2284 + t1757 * t2282) * t2011) * t2013, 1; t1840, 0, 0, t1837, t1828, t1695, t1696, t1699, -t1812 * t2262 - t1813 * t2256 - t1814 * t2250 + t2026 * t2401, -t1815 * t2262 - t1816 * t2256 - t1817 * t2250 + t2025 * t2401, t1825, t1810, -t2423 * t2187 - t2422 * t2185 - t2421 * t2183 + (-t1803 * t2138 - t1805 * t2130 - t1807 * t2122 + (-t1797 * t2138 - t1799 * t2130 - t1801 * t2122) * t2011) * t2013, t2423 * t2193 + t2422 * t2191 + t2421 * t2189 + (t1803 * t2139 + t1805 * t2131 + t1807 * t2123 + (t1797 * t2139 + t1799 * t2131 + t1801 * t2123) * t2011) * t2013, (t2423 * t2280 + t2422 * t2278 + t2421 * t2276 + (t2282 * t2421 + t2284 * t2422 + t2286 * t2423) * t2011) * t2013, -t1713 * t2262 - t1714 * t2256 - t1715 * t2250 + (t1743 * t2280 + t1745 * t2278 + t1747 * t2276 + (t1791 * t2286 + t1793 * t2284 + t1795 * t2282) * t2011) * t2013, -t1716 * t2262 - t1717 * t2256 - t1718 * t2250 + (t1744 * t2280 + t1746 * t2278 + t1748 * t2276 + (t1792 * t2286 + t1794 * t2284 + t1796 * t2282) * t2011) * t2013, 0; t1841, 0, 0, t1838, t1829, t1697, t1698, t1700, -t1768 * t2363 - t1770 * t2360 - t1772 * t2357 - t2020 * t2402, -t1774 * t2363 - t1776 * t2360 - t1778 * t2357 - t2019 * t2402, t1826, t1811, t1893 * t2036 + t1894 * t2034 + t1895 * t2032, -t2032 * t2095 - t2034 * t2096 - t2036 * t2097, (t1738 * t2271 + t1740 * t2270 + t1742 * t2269) * t2308 + t1738 * t1821 + t1740 * t1822 + t1742 * t1823, -t1702 * t2363 - t1704 * t2360 - t1706 * t2357 + (t1759 * t2271 + t1761 * t2270 + t1763 * t2269) * t2308 + t1726 * t1821 + t1728 * t1822 + t1730 * t1823, -t1708 * t2363 - t1710 * t2360 - t1712 * t2357 + (t1758 * t2271 + t1760 * t2270 + t1762 * t2269) * t2308 + t1725 * t1821 + t1727 * t1822 + t1729 * t1823, 0; t1840, 0, 0, t1837, t1828, t1695, t1696, t1699, -t1767 * t2363 - t1769 * t2360 - t1771 * t2357 + t2022 * t2402, -t1773 * t2363 - t1775 * t2360 - t1777 * t2357 + t2021 * t2402, t1825, t1810, t1893 * t2037 + t1894 * t2035 + t1895 * t2033, -t2033 * t2095 - t2035 * t2096 - t2037 * t2097, (t1737 * t2271 + t1739 * t2270 + t1741 * t2269) * t2308 + t1737 * t1821 + t1739 * t1822 + t1741 * t1823, -t1701 * t2363 - t1703 * t2360 - t1705 * t2357 + (t1752 * t2271 + t1754 * t2270 + t1756 * t2269) * t2308 + t1719 * t1821 + t1721 * t1822 + t1723 * t1823, -t1707 * t2363 - t1709 * t2360 - t1711 * t2357 + (t1753 * t2271 + t1755 * t2270 + t1757 * t2269) * t2308 + t1720 * t1821 + t1722 * t1822 + t1724 * t1823, 0; t2325 + t2326 + t2327, 0, 0, t1951 * t2327 + t1955 * t2326 + t1959 * t2325, 0.2e1 * t1952 * t2258 + 0.2e1 * t1956 * t2252 + 0.2e1 * t1960 * t2246, -t2028, -t2027, t1832 ^ 2 / t1847 ^ 2 / 0.4e1 + t1831 ^ 2 / t1846 ^ 2 / 0.4e1 + t1830 ^ 2 / t1845 ^ 2 / 0.4e1, -t1812 * t2363 - t1813 * t2360 - t1814 * t2357 + t2028 * t2402, -t1815 * t2363 - t1816 * t2360 - t1817 * t2357 + t2027 * t2402, t1887 * t2327 + t1888 * t2326 + t1889 * t2325, 0.4e1 * t1854 * t2327 + 0.4e1 * t1855 * t2326 + 0.4e1 * t1856 * t2325, t1893 * t2040 + t1894 * t2039 + t1895 * t2038, -t2038 * t2095 - t2039 * t2096 - t2040 * t2097, (t2269 * t2421 + t2270 * t2422 + t2271 * t2423) * t2308 + t2423 * t1821 + t2422 * t1822 + t2421 * t1823, -t1713 * t2363 - t1714 * t2360 - t1715 * t2357 + (t1791 * t2271 + t1793 * t2270 + t1795 * t2269) * t2308 + t1743 * t1821 + t1745 * t1822 + t1747 * t1823, -t1716 * t2363 - t1717 * t2360 - t1718 * t2357 + (t1792 * t2271 + t1794 * t2270 + t1796 * t2269) * t2308 + t1744 * t1821 + t1746 * t1822 + t1748 * t1823, 1;];
tau_reg  = t1;
