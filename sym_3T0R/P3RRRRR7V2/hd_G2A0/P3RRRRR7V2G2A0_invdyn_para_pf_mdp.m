% Calculate minimal parameter regressor of inverse dynamics forces for
% P3RRRRR7V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [3x1]
%   Generalized platform coordinates
% xDP [3x1]
%   Generalized platform velocities
% xDDP [3x1]
%   Generalized platform accelerations
% qJ [3x3]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [3x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,d1,d2,d3,d4]';
% koppelP [3x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [18x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P3RRRRR7V2G2A0_convert_par2_MPV_fixb.m

% Output:
% tauX [3x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 10:08
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P3RRRRR7V2G2A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(3,1),zeros(3,1),zeros(3,1),zeros(3,3),zeros(3,1),zeros(3,3),zeros(3,3),zeros(7,1),zeros(18,1)}
assert(isreal(xP) && all(size(xP) == [3 1]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: xP has to be [3x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [3 1]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: xDP has to be [3x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [3 1]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: xDDP has to be [3x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 3]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: qJ has to be [3x3] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [3 3]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: legFrame has to be [3x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [3 3]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: Koppelpunkt has to be [3x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [18 1]), ...
  'P3RRRRR7V2G2A0_invdyn_para_pf_mdp: MDP has to be [18x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 09:57:43
% EndTime: 2020-08-07 10:03:08
% DurationCPUTime: 341.65s
% Computational Cost: add. (4734678->2048), mult. (10291752->3159), div. (77262->37), fcn. (5776704->222), ass. (0->1300)
t5975 = 2 * pkin(1);
t5974 = 4 * pkin(2);
t5126 = (pkin(5) + pkin(6));
t5125 = 4 * t5126;
t5865 = g(1) / 0.4e1;
t5863 = -g(2) / 0.4e1;
t5973 = -g(3) / 0.2e1;
t5860 = g(3) / 0.2e1;
t5056 = qJ(2,3) + qJ(3,3);
t5098 = legFrame(3,2);
t4838 = t5098 + t5056;
t4810 = qJ(1,3) - t4838;
t5972 = sin(t4810) / 0.4e1;
t5071 = qJ(2,2) + qJ(3,2);
t5099 = legFrame(2,2);
t4840 = t5099 + t5071;
t4814 = qJ(1,2) - t4840;
t5971 = sin(t4814) / 0.4e1;
t5087 = qJ(2,1) + qJ(3,1);
t5100 = legFrame(1,2);
t4836 = t5100 + t5087;
t4818 = qJ(1,1) - t4836;
t5970 = sin(t4818) / 0.4e1;
t4839 = -t5098 + t5056;
t4809 = qJ(1,3) - t4839;
t5969 = cos(t4809) / 0.4e1;
t4841 = -t5099 + t5071;
t4813 = qJ(1,2) - t4841;
t5968 = cos(t4813) / 0.4e1;
t5490 = t5100 - t5087;
t4817 = qJ(1,1) + t5490;
t5967 = cos(t4817) / 0.4e1;
t5966 = 2 * pkin(1);
t4965 = sin(t5098);
t4968 = cos(t5098);
t5106 = sin(qJ(1,3));
t5124 = xDP(1);
t5622 = t5106 * t5124;
t5123 = xDP(2);
t5623 = t5106 * t5123;
t5281 = -t4965 * t5623 + t4968 * t5622;
t4966 = sin(t5099);
t4969 = cos(t5099);
t5109 = sin(qJ(1,2));
t5615 = t5109 * t5124;
t5616 = t5109 * t5123;
t5280 = -t4966 * t5616 + t4969 * t5615;
t4967 = sin(t5100);
t4970 = cos(t5100);
t5112 = sin(qJ(1,1));
t5607 = t5112 * t5124;
t5608 = t5112 * t5123;
t5279 = -t4967 * t5608 + t4970 * t5607;
t5136 = 2 * qJ(3,3);
t5140 = 2 * qJ(2,3);
t5047 = t5136 + t5140;
t4919 = cos(t5047);
t5015 = cos(t5136);
t5017 = cos(t5140);
t5965 = t4919 - t5017 - t5015;
t5144 = 2 * qJ(3,2);
t5148 = 2 * qJ(2,2);
t5062 = t5144 + t5148;
t4930 = cos(t5062);
t5018 = cos(t5144);
t5020 = cos(t5148);
t5964 = t4930 - t5020 - t5018;
t5152 = 2 * qJ(3,1);
t5156 = 2 * qJ(2,1);
t5080 = t5152 + t5156;
t4947 = cos(t5080);
t5021 = cos(t5152);
t5023 = cos(t5156);
t5963 = t4947 - t5023 - t5021;
t5170 = pkin(2) ^ 2;
t5130 = -2 * t5170;
t5166 = (pkin(3) ^ 2);
t5962 = t5130 + t5166;
t4577 = -t4967 * t5123 + t4970 * t5124;
t4576 = -t4966 * t5123 + t4969 * t5124;
t4575 = -t4965 * t5123 + t4968 * t5124;
t5173 = pkin(1) ^ 2;
t5949 = 2 * t5166;
t5961 = 4 * t5173 + 2 * t5170 + t5949;
t5113 = cos(qJ(3,3));
t4975 = t5113 * pkin(3);
t4877 = pkin(2) * t4975;
t4857 = -0.2e1 * t4877;
t5135 = 3 * qJ(3,3);
t5045 = t5135 + qJ(2,3);
t4917 = cos(t5045);
t5048 = t5136 + qJ(2,3);
t4920 = cos(t5048);
t5049 = qJ(3,3) + t5140;
t4921 = cos(t5049);
t4925 = cos(t5056);
t5057 = qJ(2,3) - qJ(3,3);
t4926 = cos(t5057);
t5137 = -2 * qJ(3,3);
t5058 = qJ(2,3) + t5137;
t4927 = cos(t5058);
t5050 = -qJ(3,3) + t5140;
t5051 = t5137 + t5140;
t5134 = 4 * qJ(3,3);
t5054 = t5140 + t5134;
t5114 = cos(qJ(2,3));
t5129 = -2 * t5166;
t5385 = t5129 + t5130 - 4 * t5173;
t5854 = pkin(2) * pkin(3);
t5735 = 0.2e1 * t5854;
t5737 = -0.4e1 * t5854;
t5855 = pkin(1) * pkin(3);
t5738 = 0.4e1 * t5855;
t5739 = -0.8e1 * t5855;
t5856 = pkin(1) * pkin(2);
t5740 = 4 * t5856;
t5741 = -8 * t5856;
t5926 = t5129 + t5170;
t5960 = t4919 * t5926 + cos(t5051) * t5170 + cos(t5054) * t5166 + t4921 * t5737 + t4925 * t5739 + t5114 * t5741 + t4857 + t5385 + (t4920 + t4927) * t5740 + (t4917 + t4926) * t5738 + (cos(t5050) + cos(t5135)) * t5735 + t5962 * t5017 + t5961 * t5015;
t5116 = cos(qJ(3,2));
t4977 = t5116 * pkin(3);
t4878 = pkin(2) * t4977;
t4859 = -0.2e1 * t4878;
t5063 = t5144 + qJ(2,2);
t4931 = cos(t5063);
t5064 = qJ(3,2) + t5148;
t4932 = cos(t5064);
t5143 = 3 * qJ(3,2);
t5070 = qJ(2,2) + t5143;
t4938 = cos(t5070);
t4939 = cos(t5071);
t5072 = qJ(2,2) - qJ(3,2);
t4940 = cos(t5072);
t5145 = -2 * qJ(3,2);
t5073 = qJ(2,2) + t5145;
t4941 = cos(t5073);
t5142 = 4 * qJ(3,2);
t5059 = t5142 + t5148;
t5117 = cos(qJ(2,2));
t5959 = t4930 * t5926 + cos(t5143) * t5735 + cos(t5059) * t5166 + t4932 * t5737 + t4939 * t5739 + t5117 * t5741 + t4859 + t5385 + (t4931 + t4941) * t5740 + (t4938 + t4940) * t5738 + t5962 * t5020 + t5961 * t5018;
t5119 = cos(qJ(3,1));
t4979 = t5119 * pkin(3);
t4879 = pkin(2) * t4979;
t4861 = -0.2e1 * t4879;
t5151 = 3 * qJ(3,1);
t5078 = t5151 + qJ(2,1);
t4945 = cos(t5078);
t5081 = t5152 + qJ(2,1);
t4948 = cos(t5081);
t5083 = qJ(3,1) + t5156;
t4950 = cos(t5083);
t5153 = -2 * qJ(3,1);
t5085 = t5153 + qJ(2,1);
t4952 = cos(t5085);
t4954 = cos(t5087);
t5088 = qJ(2,1) - qJ(3,1);
t4955 = cos(t5088);
t5150 = 4 * qJ(3,1);
t5075 = t5150 + t5156;
t5120 = cos(qJ(2,1));
t5958 = t4947 * t5926 + cos(t5151) * t5735 + cos(t5075) * t5166 + t4950 * t5737 + t4954 * t5739 + t5120 * t5741 + t4861 + t5385 + (t4948 + t4952) * t5740 + (t4945 + t4955) * t5738 + t5962 * t5023 + t5961 * t5021;
t5025 = pkin(7) + t5126;
t5110 = sin(qJ(3,1));
t5111 = sin(qJ(2,1));
t5611 = t5111 * t5112;
t5406 = t5110 * t5611;
t4621 = t5025 * t5406;
t5579 = t5166 - t5170;
t4723 = t5579 * t5123;
t4724 = t5579 * t5124;
t5614 = t5110 * t5111;
t4772 = pkin(1) * t5614 - pkin(3);
t5043 = t5120 ^ 2;
t5121 = cos(qJ(1,1));
t5504 = pkin(3) * t5614;
t4769 = pkin(1) - 0.2e1 * t5504;
t5601 = t5121 * t5025;
t5237 = t4769 * t5112 - t5601;
t5041 = t5119 ^ 2;
t4978 = t5041 * t5166;
t5122 = xDP(3);
t5595 = t5122 * t5121;
t5398 = (t5279 + t5595) * t4978;
t5594 = (pkin(2) + pkin(3)) * (pkin(2) - pkin(3));
t5404 = t5122 * t5594;
t5411 = t5111 * t5601;
t4574 = t4967 * t5124 + t4970 * t5123;
t4994 = pkin(1) * t5111;
t5786 = pkin(3) * t5110;
t4727 = t4994 - t5786;
t5668 = t4727 * t5119;
t5441 = t4574 * t5668;
t5736 = -0.2e1 * t5854;
t5491 = t5124 * t5736;
t5492 = t5123 * t5736;
t5501 = pkin(2) * t5595;
t5781 = pkin(3) * t5124;
t5510 = t5110 * t5781;
t5782 = pkin(3) * t5123;
t5511 = t5110 * t5782;
t5800 = pkin(2) * t5124;
t5522 = t5111 * t5800;
t5801 = pkin(2) * t5123;
t5523 = t5111 * t5801;
t5550 = -0.2e1 * t4978;
t4825 = t5112 * t5025;
t4556 = t4769 * t5121 + t4825;
t5598 = t5122 * t4556;
t5681 = t4574 * t5111;
t5783 = pkin(3) * t5122;
t4439 = (-0.2e1 * t5398 - 0.2e1 * ((pkin(2) * t5607 + t5511) * t4970 + (-pkin(2) * t5608 + t5510) * t4967 + t5501) * t4979 + (t4724 * t5112 + t5110 * t5492) * t4970 + (-t4723 * t5112 + t5110 * t5491) * t4967 - t5121 * t5404) * t5043 + (t5550 * t5681 - ((t5124 * t5237 + 0.2e1 * t5523) * t4970 + (-t5123 * t5237 + 0.2e1 * t5522) * t4967 + t5598) * t4979 + (-pkin(1) * t5511 + t4723 * t5111 - t5237 * t5800) * t4970 + (-pkin(1) * t5510 + t4724 * t5111 + t5237 * t5801) * t4967 - pkin(2) * t5598) * t5120 + t5398 - pkin(3) * t5441 + (-pkin(1) * t5523 + (t4772 * t5607 + (-t5124 * t5411 + t5801) * t5110) * pkin(3)) * t4970 + (-pkin(1) * t5522 + (-t4772 * t5608 + (t5123 * t5411 + t5800) * t5110) * pkin(3)) * t4967 + (t4772 * t5121 + t4621) * t5783;
t4768 = pkin(1) - t5504;
t4856 = t4979 + pkin(2);
t5656 = t4856 * t5120;
t4565 = t4768 + t5656;
t5168 = 0.1e1 / pkin(3) ^ 2;
t4561 = 0.1e1 / t4565;
t5167 = 0.1e1 / pkin(3);
t5474 = t4439 * t4561 * t5167;
t5031 = 0.1e1 / t5110 ^ 2;
t5172 = 1 / pkin(2) ^ 2;
t5635 = t5031 * t5172;
t4998 = pkin(1) * t5121;
t4585 = t5122 * (t4998 + t4825);
t4995 = pkin(1) * t5112;
t4480 = t4585 / 0.2e1 + t4577 * (t4995 - t5601 / 0.2e1);
t4568 = pkin(1) * t4574;
t5433 = t4577 * t5611;
t4487 = -pkin(2) * t5433 + t4568;
t4493 = t5279 * pkin(1) + t4585;
t4973 = t5110 * pkin(1);
t5818 = t5041 - 0.1e1;
t5540 = pkin(3) * t5818;
t5613 = t5110 * t5120;
t4505 = t4856 * t5613 + t5111 * t5540 + t4973;
t5674 = t4577 * t5112;
t4544 = pkin(2) * t5674;
t4547 = pkin(2) * t5681;
t4550 = pkin(1) * t5681;
t4629 = t4995 - t5601;
t4794 = pkin(1) * t4825;
t5093 = t5166 / 0.2e1;
t4958 = t5093 + t5173;
t5097 = t5170 / 0.2e1;
t4819 = t5097 + t4958;
t4875 = 0.2e1 / 0.3e1 * pkin(5) + 0.2e1 / 0.3e1 * pkin(6) + 0.2e1 / 0.3e1 * pkin(7);
t5094 = -t5166 / 0.2e1;
t4957 = t5094 + t5170;
t4989 = pkin(3) * t5041;
t5005 = t5166 + t5173;
t5013 = sin(t5152);
t5040 = t5119 * t5041;
t5042 = t5120 * t5043;
t5282 = t4577 * (t4995 - t5601 / 0.3e1);
t5545 = 0.2e1 * t5594;
t5288 = t5545 * t5674;
t5309 = t4505 * t5023 * t5595;
t5610 = t5111 * t5120;
t5405 = t5110 * t5610;
t5314 = t5119 * t5405;
t5365 = t5111 * t5501;
t5675 = t4577 * t4629;
t5377 = t4547 + t5675;
t5014 = sin(t5156);
t5414 = t5014 * t5595;
t5420 = t4629 * t5614;
t5432 = t5119 * t5674;
t5434 = t5110 * t5674;
t5806 = pkin(2) * t4574;
t5569 = pkin(1) * t5806;
t5493 = 0.4e1 * t5569;
t5802 = pkin(2) * t5111;
t5508 = t4480 * t5802;
t5534 = pkin(1) * t5601;
t5894 = 0.2e1 * t4958;
t5555 = t4574 * t5894;
t5584 = -0.4e1 * t5040 + 0.5e1 * t5119;
t5602 = t5119 * t5110;
t5612 = t5111 * (t5122 * (t4958 * t5121 + t4794) + t4577 * (t4958 * t5112 - t5534));
t5630 = t5041 * t5111;
t5680 = t4574 * t5119;
t5742 = t5119 * pkin(2);
t5784 = pkin(3) * t5120;
t5794 = pkin(3) * t5021;
t5881 = 0.2e1 * t5041;
t5817 = t5881 - 0.1e1;
t5870 = -pkin(2) / 0.2e1;
t5877 = 0.2e1 * t5122;
t5880 = 0.4e1 * t5041;
t5890 = -2 * t5005;
t5895 = -0.2e1 * t4957;
t5898 = -0.2e1 * t4574;
t5906 = -0.3e1 * pkin(3);
t5907 = -0.5e1 * pkin(3);
t5946 = (t5041 * t5898 + 0.2e1 * t5110 * t5432 + t4574) * pkin(3);
t5950 = 0.2e1 * t5043;
t4424 = -(-t5309 + ((-t5434 + t5680) * pkin(2) - t5946) * t5042 + (t4568 * t5119 - t5377 * t5110 + (-pkin(2) * t5432 + (t5602 * t5898 - t5817 * t5674) * pkin(3)) * t5111) * t5043 + ((-t5111 * t5675 - t5806) * t5119 + (-t4550 + t4544) * t5110 + t5946) * t5120 + t5433 * t4989 - t4768 * t5680 + t4577 * (-pkin(3) * t5611 + t4629 * t5110)) * t5794 + pkin(3) * (-t4505 * t5414 + t5120 * ((t4544 * t5119 + t5110 * t5806) * t5043 + (t4487 * t5110 + t5119 * t5377) * t5120 + t5441 - t4577 * t5420) + ((t5602 * t5950 + (-t5111 + 0.2e1 * t5630) * t5120) * t4574 + (t5817 * t5043 - 0.2e1 * t5314 - t5818) * t5674) * t5784) * t5013 + t4565 * (t5119 + 0.1e1) * pkin(2) * (t5119 - 0.1e1) * t5414 + t5309 * t5742 + (t5288 * t5602 + 0.2e1 * (-t5041 * t5594 + t4957) * t4574 + ((t5880 - 0.3e1) * t5434 + t5584 * t4574) * t5854) * t5042 + ((t5111 * t5288 - 0.4e1 * t5569) * t5041 + (t4480 * t5974 + t5545 * t5681) * t5602 + t5433 * t5895 + t5493 + ((t4493 + t4547) * t5110 * t5880 - 0.3e1 * (t4547 + 0.2e1 / 0.3e1 * t4585 + t5282) * t5110 + t5584 * t4487) * pkin(3)) * t5043 + ((0.4e1 * (t4550 + (-t5595 / 0.2e1 + t5279) * t5870) * t5786 + 0.4e1 * t5508 + t4574 * t5890) * t5041 + ((t5111 * t5493 + (t4819 * t5121 + t4794) * t5877 + 0.2e1 * t4577 * (t5005 * t5112 - t5534)) * t5110 + ((0.4e1 / 0.5e1 * t4585 + t4577 * (t4995 - t5601 / 0.5e1)) * t5111 + 0.3e1 / 0.5e1 * t5806) * t5907) * t5119 - 0.3e1 * (t4550 - (t5595 / 0.3e1 + t5279) * pkin(2)) * t5786 - 0.4e1 * t5508 + t5555) * t5120 + (-t4493 * t5786 + t5612) * t5881 + ((pkin(1) * t5501 + t5111 * t5555) * t5110 + (t5365 / 0.3e1 + t4568) * t5906) * t5119 + 0.3e1 * (t5122 * (t4875 * t5112 + t4998) + t5282) * t5786 - 0.2e1 * t5612 + ((0.4e1 * t4493 * t5111 + 0.2e1 * t5806) * t5120 + t5365 + 0.2e1 * t4568) * pkin(3) * t5040;
t5568 = -0.3e1 / 0.2e1 * t5855;
t5629 = t5043 * t5110;
t5785 = pkin(3) * t5111;
t5828 = t5013 / 0.2e1;
t5891 = 0.2e1 * t4973;
t4460 = (t4856 * t5610 + t4994 + (t5043 - 0.1e1) * t5786) * t5794 / 0.2e1 + t4565 * t5784 * t5828 + (t4879 + t4957) * t5629 + ((t4973 - t5785 / 0.2e1) * t4979 + (t5891 + (t5041 - 0.3e1 / 0.2e1) * t5785) * pkin(2)) * t5120 + t5630 * t5855 + t4958 * t5110 + t5111 * t5568;
t5712 = t4424 / t4460;
t5715 = t4424 ^ 2 / t4460 ^ 2;
t4618 = pkin(2) * t5120 + pkin(3) * t4954 + pkin(1);
t4599 = 0.1e1 / t4618;
t5030 = 0.1e1 / t5110;
t5395 = -t5712 / 0.2e1;
t5304 = t5030 * t5395;
t4517 = t4577 * t5121 - t5112 * t5122;
t5689 = t4517 * t4599;
t5449 = t5025 * t5689;
t5171 = 1 / pkin(2);
t5477 = t5030 * t5712;
t5303 = t5477 / 0.2e1;
t4416 = t5171 * t5303;
t5339 = t5171 * t5474;
t5264 = t5030 * t5339;
t4406 = t4416 + t5264;
t4914 = sin(t5087);
t5797 = pkin(3) * t4914;
t5519 = t4406 * t5797;
t4391 = t5111 * t5304 + t5449 - t5519;
t4600 = 0.1e1 / t4618 ^ 2;
t5686 = t4561 * t5030;
t5444 = t4600 * t5686;
t4427 = t4517 * t4914 * t4439 * t5171 * t5444;
t5103 = xDDP(1);
t5424 = t4599 * t4970 * t5121;
t4529 = t5103 * t5424;
t4685 = t5797 + t5802;
t5216 = t4517 * t4416;
t5206 = t4427 + t4529 + (-t4391 * t4517 + t4685 * t5216) * t4600;
t5102 = xDDP(2);
t5648 = t4967 * t5121;
t5417 = t5102 * t5648;
t5101 = xDDP(3);
t5609 = t5112 * t5101;
t5212 = -t5417 - t5609;
t4388 = t4599 * t5212 + t5206;
t5747 = t4388 * pkin(1);
t5957 = (t4439 ^ 2 / t4565 ^ 2 * t5168 + t5715 / 0.4e1 + t5474 * t5712) * t5125 * t5635 - 0.8e1 * t5747;
t5107 = sin(qJ(3,2));
t5108 = sin(qJ(2,2));
t5619 = t5108 * t5109;
t5408 = t5107 * t5619;
t4620 = t5025 * t5408;
t5621 = t5107 * t5108;
t4771 = pkin(1) * t5621 - pkin(3);
t5039 = t5117 ^ 2;
t5118 = cos(qJ(1,2));
t5505 = pkin(3) * t5621;
t4767 = pkin(1) - 0.2e1 * t5505;
t5603 = t5118 * t5025;
t5238 = t4767 * t5109 - t5603;
t5037 = t5116 ^ 2;
t4976 = t5037 * t5166;
t5596 = t5122 * t5118;
t5399 = (t5280 + t5596) * t4976;
t5412 = t5108 * t5603;
t4573 = t4966 * t5124 + t4969 * t5123;
t4992 = pkin(1) * t5108;
t5788 = pkin(3) * t5107;
t4726 = t4992 - t5788;
t5669 = t4726 * t5116;
t5442 = t4573 * t5669;
t5502 = pkin(2) * t5596;
t5512 = t5107 * t5781;
t5513 = t5107 * t5782;
t5524 = t5108 * t5800;
t5525 = t5108 * t5801;
t5552 = -0.2e1 * t4976;
t4824 = t5109 * t5025;
t4555 = t4767 * t5118 + t4824;
t5599 = t5122 * t4555;
t5683 = t4573 * t5108;
t4438 = (-0.2e1 * t5399 - 0.2e1 * ((pkin(2) * t5615 + t5513) * t4969 + (-pkin(2) * t5616 + t5512) * t4966 + t5502) * t4977 + (t4724 * t5109 + t5107 * t5492) * t4969 + (-t4723 * t5109 + t5107 * t5491) * t4966 - t5118 * t5404) * t5039 + (t5552 * t5683 - ((t5124 * t5238 + 0.2e1 * t5525) * t4969 + (-t5123 * t5238 + 0.2e1 * t5524) * t4966 + t5599) * t4977 + (-pkin(1) * t5513 + t4723 * t5108 - t5238 * t5800) * t4969 + (-pkin(1) * t5512 + t4724 * t5108 + t5238 * t5801) * t4966 - pkin(2) * t5599) * t5117 + t5399 - pkin(3) * t5442 + (-pkin(1) * t5525 + (t4771 * t5615 + (-t5124 * t5412 + t5801) * t5107) * pkin(3)) * t4969 + (-pkin(1) * t5524 + (-t4771 * t5616 + (t5123 * t5412 + t5800) * t5107) * pkin(3)) * t4966 + (t4771 * t5118 + t4620) * t5783;
t4766 = pkin(1) - t5505;
t4855 = t4977 + pkin(2);
t5659 = t4855 * t5117;
t4564 = t4766 + t5659;
t4559 = 0.1e1 / t4564;
t5475 = t4438 * t4559 * t5167;
t5029 = 0.1e1 / t5107 ^ 2;
t5637 = t5029 * t5172;
t4997 = pkin(1) * t5118;
t4584 = t5122 * (t4997 + t4824);
t4993 = pkin(1) * t5109;
t4479 = t4584 / 0.2e1 + t4576 * (t4993 - t5603 / 0.2e1);
t4567 = pkin(1) * t4573;
t5436 = t4576 * t5619;
t4486 = -pkin(2) * t5436 + t4567;
t4492 = t5280 * pkin(1) + t4584;
t4972 = t5107 * pkin(1);
t5822 = t5037 - 0.1e1;
t5541 = pkin(3) * t5822;
t5620 = t5107 * t5117;
t4504 = t4855 * t5620 + t5108 * t5541 + t4972;
t5676 = t4576 * t5109;
t4543 = pkin(2) * t5676;
t4546 = pkin(2) * t5683;
t4549 = pkin(1) * t5683;
t4628 = t4993 - t5603;
t4793 = pkin(1) * t4824;
t4988 = pkin(3) * t5037;
t5010 = sin(t5144);
t5036 = t5116 * t5037;
t5038 = t5117 * t5039;
t5283 = t4576 * (t4993 - t5603 / 0.3e1);
t5289 = t5545 * t5676;
t5310 = t4504 * t5020 * t5596;
t5618 = t5108 * t5117;
t5407 = t5107 * t5618;
t5312 = t5116 * t5407;
t5363 = t5108 * t5502;
t5677 = t4576 * t4628;
t5378 = t4546 + t5677;
t5011 = sin(t5148);
t5415 = t5011 * t5596;
t5421 = t4628 * t5621;
t5435 = t5116 * t5676;
t5437 = t5107 * t5676;
t5807 = pkin(2) * t4573;
t5570 = pkin(1) * t5807;
t5494 = 0.4e1 * t5570;
t5803 = pkin(2) * t5108;
t5509 = t4479 * t5803;
t5535 = pkin(1) * t5603;
t5556 = t4573 * t5894;
t5585 = -0.4e1 * t5036 + 0.5e1 * t5116;
t5604 = t5116 * t5107;
t5632 = t5037 * t5108;
t5682 = t4573 * t5116;
t5698 = (t5122 * (t4958 * t5118 + t4793) + t4576 * (t4958 * t5109 - t5535)) * t5108;
t5743 = t5117 * pkin(3);
t5744 = t5116 * pkin(2);
t5795 = pkin(3) * t5018;
t5885 = 0.2e1 * t5037;
t5821 = t5885 - 0.1e1;
t5884 = 0.4e1 * t5037;
t5899 = -0.2e1 * t4573;
t5945 = (t5037 * t5899 + 0.2e1 * t5107 * t5435 + t4573) * pkin(3);
t5951 = 0.2e1 * t5039;
t4423 = -(-t5310 + ((-t5437 + t5682) * pkin(2) - t5945) * t5038 + (t4567 * t5116 - t5378 * t5107 + (-pkin(2) * t5435 + (t5604 * t5899 - t5821 * t5676) * pkin(3)) * t5108) * t5039 + ((-t5108 * t5677 - t5807) * t5116 + (-t4549 + t4543) * t5107 + t5945) * t5117 + t5436 * t4988 - t4766 * t5682 + t4576 * (-pkin(3) * t5619 + t4628 * t5107)) * t5795 + (-t4504 * t5415 + t5117 * ((t4543 * t5116 + t5107 * t5807) * t5039 + (t4486 * t5107 + t5116 * t5378) * t5117 + t5442 - t4576 * t5421) + ((t5604 * t5951 + (-t5108 + 0.2e1 * t5632) * t5117) * t4573 + (t5821 * t5039 - 0.2e1 * t5312 - t5822) * t5676) * t5743) * pkin(3) * t5010 + t4564 * (t5116 + 0.1e1) * (t5116 - 0.1e1) * pkin(2) * t5415 + t5310 * t5744 + (t5289 * t5604 + 0.2e1 * (-t5037 * t5594 + t4957) * t4573 + ((t5884 - 0.3e1) * t5437 + t5585 * t4573) * t5854) * t5038 + ((t5108 * t5289 - 0.4e1 * t5570) * t5037 + (t4479 * t5974 + t5545 * t5683) * t5604 + t5436 * t5895 + t5494 + ((t4492 + t4546) * t5107 * t5884 - 0.3e1 * (t4546 + 0.2e1 / 0.3e1 * t4584 + t5283) * t5107 + t5585 * t4486) * pkin(3)) * t5039 + ((0.4e1 * (t4549 + (-t5596 / 0.2e1 + t5280) * t5870) * t5788 + 0.4e1 * t5509 + t4573 * t5890) * t5037 + ((t5108 * t5494 + (t4819 * t5118 + t4793) * t5877 + 0.2e1 * t4576 * (t5005 * t5109 - t5535)) * t5107 + ((0.4e1 / 0.5e1 * t4584 + t4576 * (t4993 - t5603 / 0.5e1)) * t5108 + 0.3e1 / 0.5e1 * t5807) * t5907) * t5116 - 0.3e1 * (t4549 - (t5596 / 0.3e1 + t5280) * pkin(2)) * t5788 - 0.4e1 * t5509 + t5556) * t5117 + (-t4492 * t5788 + t5698) * t5885 + ((pkin(1) * t5502 + t5108 * t5556) * t5107 + (t5363 / 0.3e1 + t4567) * t5906) * t5116 + 0.3e1 * (t5122 * (t4875 * t5109 + t4997) + t5283) * t5788 - 0.2e1 * t5698 + ((0.4e1 * t4492 * t5108 + 0.2e1 * t5807) * t5117 + t5363 + 0.2e1 * t4567) * pkin(3) * t5036;
t5631 = t5039 * t5107;
t5787 = pkin(3) * t5108;
t5829 = t5010 / 0.2e1;
t5892 = 0.2e1 * t4972;
t4459 = (t4855 * t5618 + t4992 + (t5039 - 0.1e1) * t5788) * t5795 / 0.2e1 + t4564 * t5743 * t5829 + (t4878 + t4957) * t5631 + ((t4972 - t5787 / 0.2e1) * t4977 + (t5892 + (t5037 - 0.3e1 / 0.2e1) * t5787) * pkin(2)) * t5117 + t5632 * t5855 + t4958 * t5107 + t5108 * t5568;
t5713 = t4423 / t4459;
t5716 = t4423 ^ 2 / t4459 ^ 2;
t4617 = pkin(2) * t5117 + pkin(3) * t4939 + pkin(1);
t4597 = 0.1e1 / t4617;
t5028 = 0.1e1 / t5107;
t5396 = -t5713 / 0.2e1;
t5306 = t5028 * t5396;
t4516 = t4576 * t5118 - t5109 * t5122;
t5690 = t4516 * t4597;
t5452 = t5025 * t5690;
t5478 = t5028 * t5713;
t5305 = t5478 / 0.2e1;
t4415 = t5171 * t5305;
t5340 = t5171 * t5475;
t5265 = t5028 * t5340;
t4405 = t4415 + t5265;
t4902 = sin(t5071);
t5798 = pkin(3) * t4902;
t5520 = t4405 * t5798;
t4390 = t5108 * t5306 + t5452 - t5520;
t4598 = 0.1e1 / t4617 ^ 2;
t5687 = t4559 * t5028;
t5445 = t4598 * t5687;
t4426 = t4516 * t4902 * t4438 * t5171 * t5445;
t5427 = t4597 * t4969 * t5118;
t4528 = t5103 * t5427;
t4686 = t5798 + t5803;
t5217 = t4516 * t4415;
t5207 = t4426 + t4528 + (-t4390 * t4516 + t4686 * t5217) * t4598;
t5651 = t4966 * t5118;
t5418 = t5102 * t5651;
t5617 = t5109 * t5101;
t5213 = -t5418 - t5617;
t4387 = t4597 * t5213 + t5207;
t5748 = t4387 * pkin(1);
t5956 = (t4438 ^ 2 / t4564 ^ 2 * t5168 + t5716 / 0.4e1 + t5475 * t5713) * t5125 * t5637 - 0.8e1 * t5748;
t5104 = sin(qJ(3,3));
t5105 = sin(qJ(2,3));
t5626 = t5105 * t5106;
t5410 = t5104 * t5626;
t4619 = t5025 * t5410;
t5628 = t5104 * t5105;
t4770 = pkin(1) * t5628 - pkin(3);
t5035 = t5114 ^ 2;
t5115 = cos(qJ(1,3));
t5506 = pkin(3) * t5628;
t4765 = pkin(1) - 0.2e1 * t5506;
t5605 = t5115 * t5025;
t5239 = t4765 * t5106 - t5605;
t5033 = t5113 ^ 2;
t4974 = t5033 * t5166;
t5597 = t5122 * t5115;
t5400 = (t5281 + t5597) * t4974;
t5413 = t5105 * t5605;
t4572 = t4965 * t5124 + t4968 * t5123;
t4990 = pkin(1) * t5105;
t5790 = pkin(3) * t5104;
t4725 = t4990 - t5790;
t5670 = t4725 * t5113;
t5443 = t4572 * t5670;
t5503 = pkin(2) * t5597;
t5514 = t5104 * t5781;
t5515 = t5104 * t5782;
t5526 = t5105 * t5800;
t5527 = t5105 * t5801;
t5554 = -0.2e1 * t4974;
t4823 = t5106 * t5025;
t4554 = t4765 * t5115 + t4823;
t5600 = t5122 * t4554;
t5685 = t4572 * t5105;
t4437 = (-0.2e1 * t5400 - 0.2e1 * ((pkin(2) * t5622 + t5515) * t4968 + (-pkin(2) * t5623 + t5514) * t4965 + t5503) * t4975 + (t4724 * t5106 + t5104 * t5492) * t4968 + (-t4723 * t5106 + t5104 * t5491) * t4965 - t5115 * t5404) * t5035 + (t5554 * t5685 - ((t5124 * t5239 + 0.2e1 * t5527) * t4968 + (-t5123 * t5239 + 0.2e1 * t5526) * t4965 + t5600) * t4975 + (-pkin(1) * t5515 + t4723 * t5105 - t5239 * t5800) * t4968 + (-pkin(1) * t5514 + t4724 * t5105 + t5239 * t5801) * t4965 - pkin(2) * t5600) * t5114 + t5400 - pkin(3) * t5443 + (-pkin(1) * t5527 + (t4770 * t5622 + (-t5124 * t5413 + t5801) * t5104) * pkin(3)) * t4968 + (-pkin(1) * t5526 + (-t4770 * t5623 + (t5123 * t5413 + t5800) * t5104) * pkin(3)) * t4965 + (t4770 * t5115 + t4619) * t5783;
t4764 = pkin(1) - t5506;
t4854 = t4975 + pkin(2);
t5662 = t4854 * t5114;
t4563 = t4764 + t5662;
t4557 = 0.1e1 / t4563;
t5476 = t4437 * t4557 * t5167;
t5027 = 0.1e1 / t5104 ^ 2;
t5639 = t5027 * t5172;
t4996 = pkin(1) * t5115;
t4583 = t5122 * (t4996 + t4823);
t4991 = pkin(1) * t5106;
t4481 = t4583 / 0.2e1 + t4575 * (t4991 - t5605 / 0.2e1);
t4566 = pkin(1) * t4572;
t5439 = t4575 * t5626;
t4485 = -pkin(2) * t5439 + t4566;
t4491 = t5281 * pkin(1) + t4583;
t4971 = t5104 * pkin(1);
t5826 = t5033 - 0.1e1;
t5542 = pkin(3) * t5826;
t5627 = t5104 * t5114;
t4503 = t4854 * t5627 + t5105 * t5542 + t4971;
t5678 = t4575 * t5106;
t4542 = pkin(2) * t5678;
t4545 = pkin(2) * t5685;
t4548 = pkin(1) * t5685;
t4627 = t4991 - t5605;
t4792 = pkin(1) * t4823;
t4987 = pkin(3) * t5033;
t5007 = sin(t5136);
t5032 = t5113 * t5033;
t5034 = t5114 * t5035;
t5284 = t4575 * (t4991 - t5605 / 0.3e1);
t5290 = t5545 * t5678;
t5311 = t4503 * t5017 * t5597;
t5625 = t5105 * t5114;
t5409 = t5104 * t5625;
t5313 = t5113 * t5409;
t5364 = t5105 * t5503;
t5679 = t4575 * t4627;
t5379 = t4545 + t5679;
t5008 = sin(t5140);
t5416 = t5008 * t5597;
t5422 = t4627 * t5628;
t5438 = t5113 * t5678;
t5440 = t5104 * t5678;
t5808 = pkin(2) * t4572;
t5571 = pkin(1) * t5808;
t5495 = 0.4e1 * t5571;
t5804 = pkin(2) * t5105;
t5507 = t4481 * t5804;
t5536 = pkin(1) * t5605;
t5557 = t4572 * t5894;
t5586 = -0.4e1 * t5032 + 0.5e1 * t5113;
t5606 = t5113 * t5104;
t5634 = t5033 * t5105;
t5684 = t4572 * t5113;
t5699 = (t5122 * (t4958 * t5115 + t4792) + t4575 * (t4958 * t5106 - t5536)) * t5105;
t5745 = t5114 * pkin(3);
t5746 = t5113 * pkin(2);
t5796 = pkin(3) * t5015;
t5889 = 0.2e1 * t5033;
t5825 = t5889 - 0.1e1;
t5888 = 0.4e1 * t5033;
t5900 = -0.2e1 * t4572;
t5944 = (t5033 * t5900 + 0.2e1 * t5104 * t5438 + t4572) * pkin(3);
t5952 = 0.2e1 * t5035;
t4422 = -(-t5311 + ((-t5440 + t5684) * pkin(2) - t5944) * t5034 + (t4566 * t5113 - t5379 * t5104 + (-pkin(2) * t5438 + (t5606 * t5900 - t5825 * t5678) * pkin(3)) * t5105) * t5035 + ((-t5105 * t5679 - t5808) * t5113 + (-t4548 + t4542) * t5104 + t5944) * t5114 + t5439 * t4987 - t4764 * t5684 + (-pkin(3) * t5626 + t4627 * t5104) * t4575) * t5796 + (-t4503 * t5416 + t5114 * ((t4542 * t5113 + t5104 * t5808) * t5035 + (t4485 * t5104 + t5113 * t5379) * t5114 + t5443 - t4575 * t5422) + ((t5606 * t5952 + (-t5105 + 0.2e1 * t5634) * t5114) * t4572 + (t5825 * t5035 - 0.2e1 * t5313 - t5826) * t5678) * t5745) * pkin(3) * t5007 + t4563 * (t5113 + 0.1e1) * (t5113 - 0.1e1) * pkin(2) * t5416 + t5311 * t5746 + (t5290 * t5606 + 0.2e1 * (-t5033 * t5594 + t4957) * t4572 + ((t5888 - 0.3e1) * t5440 + t5586 * t4572) * t5854) * t5034 + ((t5105 * t5290 - 0.4e1 * t5571) * t5033 + (t4481 * t5974 + t5545 * t5685) * t5606 + t5439 * t5895 + t5495 + ((t4491 + t4545) * t5104 * t5888 - 0.3e1 * (t4545 + 0.2e1 / 0.3e1 * t4583 + t5284) * t5104 + t5586 * t4485) * pkin(3)) * t5035 + ((0.4e1 * (t4548 + (-t5597 / 0.2e1 + t5281) * t5870) * t5790 + 0.4e1 * t5507 + t4572 * t5890) * t5033 + ((t5105 * t5495 + (t4819 * t5115 + t4792) * t5877 + 0.2e1 * t4575 * (t5005 * t5106 - t5536)) * t5104 + ((0.4e1 / 0.5e1 * t4583 + t4575 * (t4991 - t5605 / 0.5e1)) * t5105 + 0.3e1 / 0.5e1 * t5808) * t5907) * t5113 - 0.3e1 * (t4548 - (t5597 / 0.3e1 + t5281) * pkin(2)) * t5790 - 0.4e1 * t5507 + t5557) * t5114 + (-t4491 * t5790 + t5699) * t5889 + ((pkin(1) * t5503 + t5105 * t5557) * t5104 + (t5364 / 0.3e1 + t4566) * t5906) * t5113 + 0.3e1 * (t5122 * (t4875 * t5106 + t4996) + t5284) * t5790 - 0.2e1 * t5699 + ((0.4e1 * t4491 * t5105 + 0.2e1 * t5808) * t5114 + t5364 + 0.2e1 * t4566) * pkin(3) * t5032;
t5633 = t5035 * t5104;
t5789 = pkin(3) * t5105;
t5830 = t5007 / 0.2e1;
t5893 = 0.2e1 * t4971;
t4458 = (t4854 * t5625 + t4990 + (t5035 - 0.1e1) * t5790) * t5796 / 0.2e1 + t4563 * t5745 * t5830 + (t4877 + t4957) * t5633 + ((t4971 - t5789 / 0.2e1) * t4975 + (t5893 + (t5033 - 0.3e1 / 0.2e1) * t5789) * pkin(2)) * t5114 + t5634 * t5855 + t4958 * t5104 + t5105 * t5568;
t5714 = t4422 / t4458;
t5717 = t4422 ^ 2 / t4458 ^ 2;
t4616 = pkin(2) * t5114 + pkin(3) * t4925 + pkin(1);
t4595 = 0.1e1 / t4616;
t5026 = 0.1e1 / t5104;
t5397 = -t5714 / 0.2e1;
t5308 = t5026 * t5397;
t4515 = t4575 * t5115 - t5106 * t5122;
t5691 = t4515 * t4595;
t5455 = t5025 * t5691;
t5479 = t5026 * t5714;
t5307 = t5479 / 0.2e1;
t4414 = t5171 * t5307;
t5341 = t5171 * t5476;
t5266 = t5026 * t5341;
t4404 = t4414 + t5266;
t4891 = sin(t5056);
t5799 = pkin(3) * t4891;
t5521 = t4404 * t5799;
t4389 = t5105 * t5308 + t5455 - t5521;
t4596 = 0.1e1 / t4616 ^ 2;
t5688 = t4557 * t5026;
t5446 = t4596 * t5688;
t4425 = t4515 * t4891 * t4437 * t5171 * t5446;
t5430 = t4595 * t4968 * t5115;
t4527 = t5103 * t5430;
t4684 = t5799 + t5804;
t5218 = t4515 * t4414;
t5208 = t4425 + t4527 + (-t4389 * t4515 + t4684 * t5218) * t4596;
t5654 = t4965 * t5115;
t5419 = t5102 * t5654;
t5624 = t5106 * t5101;
t5214 = -t5419 - t5624;
t4386 = t4595 * t5214 + t5208;
t5749 = t4386 * pkin(1);
t5955 = (t4437 ^ 2 / t4563 ^ 2 * t5168 + t5717 / 0.4e1 + t5476 * t5714) * t5125 * t5639 - 0.8e1 * t5749;
t5953 = 4 * pkin(1);
t5560 = 3 * t5166;
t5948 = 8 * t5856;
t5947 = -0.2e1 / 0.3e1 * pkin(2);
t4506 = t4515 ^ 2;
t4488 = t4506 * t4596;
t5394 = t4488 / 0.2e1;
t4507 = t4516 ^ 2;
t4489 = t4507 * t4598;
t5393 = t4489 / 0.2e1;
t4508 = t4517 ^ 2;
t4490 = t4508 * t4600;
t5392 = t4490 / 0.2e1;
t5345 = t5635 * t5715;
t5249 = t5345 / 0.4e1;
t5346 = t5637 * t5716;
t5250 = t5346 / 0.4e1;
t5347 = t5639 * t5717;
t5251 = t5347 / 0.4e1;
t5139 = 3 * qJ(2,3);
t5044 = t5134 + t5139;
t4916 = cos(t5044);
t5941 = t4916 + t4920;
t5046 = t5136 + t5139;
t4918 = cos(t5046);
t5940 = t4918 + t5114;
t5055 = t5140 + t5135;
t4924 = cos(t5055);
t5939 = -t4921 + t4924;
t5938 = -t4927 - cos(t5139);
t5147 = 3 * qJ(2,2);
t5061 = t5144 + t5147;
t4929 = cos(t5061);
t5937 = t4929 + t5117;
t5066 = t5147 + t5142;
t4934 = cos(t5066);
t5936 = t4931 + t4934;
t5068 = t5148 + t5143;
t4936 = cos(t5068);
t5935 = -t4932 + t4936;
t5934 = -t4941 - cos(t5147);
t5155 = 3 * qJ(2,1);
t5074 = t5150 + t5155;
t4942 = cos(t5074);
t5933 = t4942 + t4948;
t5077 = t5151 + t5156;
t4944 = cos(t5077);
t5932 = t4944 - t4950;
t5079 = t5152 + t5155;
t4946 = cos(t5079);
t5931 = t4946 + t5120;
t5930 = -t4952 - cos(t5155);
t4750 = sin(t4817);
t4763 = cos(t4818);
t5733 = -qJ(3,1) + qJ(1,1);
t4964 = -qJ(2,1) + t5733;
t4853 = cos(t4964);
t5922 = g(1) * t5970 + g(2) * t5967 + t4750 * t5865 + t4763 * t5863 + t4853 * t5860;
t4746 = sin(t4813);
t4759 = cos(t4814);
t5731 = -qJ(3,2) + qJ(1,2);
t4962 = -qJ(2,2) + t5731;
t4851 = cos(t4962);
t5921 = g(1) * t5971 + g(2) * t5968 + t4746 * t5865 + t4759 * t5863 + t4851 * t5860;
t4742 = sin(t4809);
t4755 = cos(t4810);
t5729 = -qJ(3,3) + qJ(1,3);
t4960 = -qJ(2,3) + t5729;
t4849 = cos(t4960);
t5920 = g(1) * t5972 + g(2) * t5969 + t4742 * t5865 + t4755 * t5863 + t4849 * t5860;
t4847 = sin(t4964);
t5919 = g(1) * t5967 + g(2) * t5970 + t4750 * t5863 + t4763 * t5865 + t4847 * t5973;
t4845 = sin(t4962);
t5918 = g(1) * t5968 + g(2) * t5971 + t4746 * t5863 + t4759 * t5865 + t4845 * t5973;
t4843 = sin(t4960);
t5917 = g(1) * t5969 + g(2) * t5972 + t4742 * t5863 + t4755 * t5865 + t4843 * t5973;
t5916 = -8 * pkin(1);
t5915 = -4 * pkin(1);
t5914 = -2 * pkin(1);
t5911 = -2 * pkin(2);
t5910 = 2 * pkin(2);
t5909 = 3 * pkin(2);
t5905 = -0.2e1 * pkin(3);
t5904 = 0.2e1 * pkin(3);
t5158 = 2 * pkin(7);
t4524 = t4971 + (-pkin(3) + t5746 + 0.2e1 * t4987) * t5105;
t5132 = -pkin(3) / 0.2e1;
t4681 = t4987 + t5746 / 0.2e1 + t5132;
t4533 = t5410 * t5904 - t4627;
t5205 = pkin(2) * t5410 + t4533 * t5113;
t5655 = t4965 * t5106;
t5133 = pkin(2) / 0.2e1;
t5667 = (t4975 + t5133) * t5104;
t4500 = t5106 * t5542 + t5422;
t5697 = t4500 * t4965;
t4446 = (-t4681 * t5655 + t4968 * t5667) * t5952 + (t4968 * t4524 + t4965 * t5205) * t5114 + t5697 + t4968 * t5670;
t5646 = t4968 * t5106;
t5696 = t4500 * t4968;
t4447 = (t4681 * t5646 + t4965 * t5667) * t5952 + (t4965 * t4524 - t4968 * t5205) * t5114 - t5696 + t4965 * t5670;
t5780 = pkin(3) * t5170;
t5497 = t4924 * t5780;
t4466 = 0.1e1 / (pkin(2) * t5960 + 0.2e1 * t5497);
t4884 = sin(t5047);
t4886 = sin(t5049);
t4890 = sin(t5055);
t4892 = sin(t5057);
t5052 = t5139 + t5135;
t4922 = cos(t5052);
t5053 = t5139 + qJ(3,3);
t4923 = cos(t5053);
t4885 = sin(t5048);
t5384 = (t4885 - t5105) * pkin(3);
t5388 = t5594 / 0.4e1;
t5590 = t5170 * sin(t5050);
t5827 = t5166 / 0.4e1;
t5199 = -0.8e1 * (((t4924 / 0.4e1 - t4921 / 0.4e1) * pkin(1) + (-t4918 / 0.8e1 + t4916 / 0.8e1 + t4920 / 0.8e1 - t5114 / 0.8e1) * pkin(3) + (t4922 / 0.8e1 + t4917 / 0.8e1 - t4923 / 0.8e1 - t4925 / 0.8e1) * pkin(2)) * t5455 + (t4890 * t5827 - t5590 / 0.4e1 + t4886 * t5388 + t4819 * t5104 + pkin(1) * t5384 + ((-t4892 + t4891) * pkin(1) + (t4884 / 0.2e1 - t5008 / 0.2e1 + t5830) * pkin(3)) * pkin(2)) * t4404) * t4466 * t4437 + t4446 * t5102 + t4447 * t5103;
t4413 = pkin(2) * t5307;
t5720 = t4404 * t5166;
t4395 = t4413 + t5720;
t4429 = t5266 / 0.2e1;
t4398 = t4414 + t4429;
t4883 = sin(t5045);
t4888 = sin(t5051);
t4889 = sin(t5054);
t4893 = sin(t5058);
t5006 = sin(t5135);
t5325 = t5594 * t5691;
t5257 = t5025 * t5325;
t5369 = pkin(3) * t5455;
t5293 = pkin(2) * t5369;
t5344 = t5171 * t5479;
t5366 = pkin(2) * t5479;
t5374 = pkin(2) * t5455;
t5381 = pkin(3) * t5545;
t5453 = t5166 * t5691;
t5500 = pkin(3) * t5590;
t5543 = -0.12e2 * pkin(1) * t5854;
t5578 = -5 * pkin(2) * t5166;
t5593 = t5166 * t5171;
t5254 = (t5521 * t5948 + t5166 * t4889 * t5307 + t5170 * t4888 * t5308 + t4395 * t4890 * t5904 + (t5366 / 0.4e1 + (0.3e1 / 0.4e1 * t5714 + t5476) * t5026 * t5593 + t5173 * t4414) * t5007 * t5974 + (t4413 + 0.2e1 * t5720) * t4885 * t5953 + t4893 * t5366 * t5914 + pkin(3) * t5006 * t5366 - 0.4e1 * t4398 * t5500 + (t4414 + 0.4e1 / 0.5e1 * t5266) * t5008 * t5578 + (t5105 * t5720 - t5374 / 0.4e1) * t5916 + 0.8e1 * ((0.3e1 / 0.8e1 * t5344 + t4429) * t5170 + t4404 * t4958) * t5790 + (t4413 + 0.4e1 * t5720) * pkin(2) * t4884 + 0.2e1 * t4883 * t5479 * t5855 + (t4414 + 0.2e1 / 0.3e1 * t5266) * t4892 * t5543 + t4404 * t4886 * t5381 + t5941 * t5025 * t5453 + t5938 * t5170 * t5455 + t5939 * t5369 * t5975 - 0.2e1 * (t4926 + t4923) * t5293 + 0.2e1 * (t4925 + t4922) * t5293 + t5940 * t5257 + t5965 * t5374 * t5966) * t4466 * t5397;
t4392 = t4413 - t5720;
t5004 = -3 * t5166 + t5170;
t5138 = 4 * qJ(2,3);
t5165 = pkin(3) * t5166;
t5169 = pkin(2) * t5170;
t5576 = 0.3e1 * t5780;
t5380 = -t5165 + t5576;
t5496 = 0.12e2 * t5854;
t5544 = 0.6e1 * t5594;
t5558 = 6 * t5170;
t5000 = t5025 ^ 2;
t5587 = t5000 / 0.3e1 + t5173;
t4722 = t5166 / 0.3e1 + t5587;
t5565 = -0.12e2 * pkin(3) * t4722;
t5566 = 0.12e2 * pkin(3) * (t5097 + t4722);
t5567 = 0.24e2 * pkin(3) * (t5827 + 0.3e1 / 0.8e1 * t5170 + t5587);
t5577 = -0.3e1 * t5780;
t4494 = 0.1e1 / (pkin(2) * (pkin(2) * t4891 + t5384 + t5893) - t4892 * t5170);
t5728 = qJ(3,3) + qJ(1,3);
t4959 = qJ(2,3) + t5728;
t4842 = sin(t4959);
t4848 = cos(t4959);
t5581 = 0.2e1 * pkin(6) + t5158;
t5024 = 0.2e1 * pkin(5) + t5581;
t5724 = -(2 * qJ(2,3)) + qJ(1,3);
t5705 = ((t4842 + t4843) * t5024 + (t4848 + t4849) * t5975 + (cos(t5137 + t5724) + cos(qJ(1,3) + t5047) + 0.2e1 * t5115) * pkin(3) + (cos(t5729) + cos(t5728) + cos(qJ(3,3) - t5724) + cos(qJ(1,3) + t5049)) * pkin(2)) * t4494 / 0.2e1;
t5096 = t5170 / 0.4e1;
t5387 = t5096 + t5587;
t5857 = 0.12e2 * t5093 + 0.12e2 * t5387;
t5091 = 0.3e1 / 0.4e1 * t5166;
t5858 = 0.12e2 * t5091 + 0.12e2 * t5387;
t5859 = -0.12e2 * t5091 + t5130 - 0.12e2 * t5587;
t5873 = 6 * t5166;
t5386 = t5000 + 0.9e1 / 0.4e1 * t5166 + t5173;
t5896 = (12 * t5170) + 0.8e1 * t5386;
t5897 = -(6 * t5170) - 0.8e1 * t5386;
t5287 = t5101 * t5705 - ((0.2e1 * t4437 * t4917 * t5688 + t5941 * t4404 * t5949 + 0.2e1 * t5940 * t4392 + (t5939 * t4404 * t5953 + ((t4414 - t5266 / 0.2e1) * t4925 + (t4922 - t4923) * t4398) * t5974) * pkin(3) + (t4926 * t5905 + t5938 * pkin(2) + (0.1e1 + t5965) * t5975) * t5479) * t5025 + (t5165 * sin((5 * qJ(3,3) + t5138)) + t5380 * sin((t5135 + t5138)) + sin((qJ(3,3) + t5138)) * t5577 + t5006 * t5576 - 0.6e1 * t5500 + t5104 * t5567 + t4886 * t5565 + t4890 * t5566 + (-sin(t5138) - t4888) * t5169 + (t5004 * sin((t5136 + t5138)) + t5008 * t5859 + t5007 * t5858 + t4884 * t5857 + (sin((t5134 + t5138)) + t4889) * t5560) * pkin(2) + (sin(t5046) * t5544 + sin(t5044) * t5873 + t5105 * t5897 + t4885 * t5896 + (-sin(t5139) - t4893) * t5558 + (sin(t5052) - sin(t5053) + t4883 + t4891 - 0.2e1 * t4892) * t5496) * pkin(1)) * t5691) / (t5910 * t5960 + 0.4e1 * t5497) * t5691;
t5640 = t5026 * t5171;
t4329 = (t4557 * t5199 + t5254) * t5640 + t5287;
t5869 = pkin(5) / 0.2e1;
t5903 = -0.2e1 * pkin(1) * t4595 * t5218 - 0.2e1 * t4329 * t5869;
t4525 = t4972 + (-pkin(3) + t5744 + 0.2e1 * t4988) * t5108;
t4682 = t4988 + t5744 / 0.2e1 + t5132;
t4534 = t5408 * t5904 - t4628;
t5204 = pkin(2) * t5408 + t4534 * t5116;
t5652 = t4966 * t5109;
t5666 = (t4977 + t5133) * t5107;
t4501 = t5109 * t5541 + t5421;
t5695 = t4501 * t4966;
t4448 = (-t4682 * t5652 + t4969 * t5666) * t5951 + (t4969 * t4525 + t4966 * t5204) * t5117 + t5695 + t4969 * t5669;
t5644 = t4969 * t5109;
t5694 = t4501 * t4969;
t4449 = (t4682 * t5644 + t4966 * t5666) * t5951 + (t4966 * t4525 - t4969 * t5204) * t5117 - t5694 + t4966 * t5669;
t5065 = -qJ(3,2) + t5148;
t4933 = cos(t5065);
t5069 = t5148 + t5145;
t4937 = cos(t5069);
t5489 = 0.2e1 * t5780;
t4464 = 0.1e1 / (t5169 * t4937 + (t4933 + t4936) * t5489 + t5959 * pkin(2));
t4895 = sin(t5062);
t4897 = sin(t5064);
t4899 = sin(t5068);
t4903 = sin(t5072);
t5060 = t5143 + t5147;
t4928 = cos(t5060);
t5067 = t5147 + qJ(3,2);
t4935 = cos(t5067);
t4896 = sin(t5063);
t5383 = (t4896 - t5108) * pkin(3);
t5589 = t5170 * sin(t5065);
t5198 = -0.8e1 * (((t4936 / 0.4e1 - t4932 / 0.4e1) * pkin(1) + (t4934 / 0.8e1 - t4929 / 0.8e1 + t4931 / 0.8e1 - t5117 / 0.8e1) * pkin(3) + (t4928 / 0.8e1 + t4938 / 0.8e1 - t4935 / 0.8e1 - t4939 / 0.8e1) * pkin(2)) * t5452 + (t4899 * t5827 - t5589 / 0.4e1 + t4897 * t5388 + t4819 * t5107 + pkin(1) * t5383 + ((-t4903 + t4902) * pkin(1) + (t4895 / 0.2e1 - t5011 / 0.2e1 + t5829) * pkin(3)) * pkin(2)) * t4405) * t4464 * t4438 + t4448 * t5102 + t4449 * t5103;
t4417 = pkin(2) * t5305;
t5719 = t4405 * t5166;
t4396 = t4417 + t5719;
t4431 = t5265 / 0.2e1;
t4399 = t4415 + t4431;
t4894 = sin(t5059);
t4900 = sin(t5069);
t4901 = sin(t5070);
t4904 = sin(t5073);
t5009 = sin(t5143);
t5320 = t5594 * t5690;
t5256 = t5025 * t5320;
t5368 = pkin(3) * t5452;
t5292 = pkin(2) * t5368;
t5343 = t5171 * t5478;
t5371 = pkin(3) * t5478;
t5373 = pkin(2) * t5452;
t5376 = pkin(2) * t5478;
t5450 = t5166 * t5690;
t5499 = pkin(3) * t5589;
t5252 = (t5520 * t5948 + t5166 * t4894 * t5305 + t5170 * t4900 * t5306 + t4396 * t4899 * t5904 + (t5376 / 0.4e1 + (0.3e1 / 0.4e1 * t5713 + t5475) * t5028 * t5593 + t5173 * t4415) * t5010 * t5974 + (t4417 + 0.2e1 * t5719) * t4896 * t5953 + t4904 * t5376 * t5914 - 0.4e1 * t4399 * t5499 + (t4415 + 0.4e1 / 0.5e1 * t5265) * t5011 * t5578 + (t5108 * t5719 - t5373 / 0.4e1) * t5916 + 0.8e1 * ((0.3e1 / 0.8e1 * t5343 + t4431) * t5170 + t4405 * t4958) * t5788 + (t4415 + 0.2e1 / 0.3e1 * t5265) * t4903 * t5543 + t4405 * t4897 * t5381 + t5936 * t5025 * t5450 + t5934 * t5170 * t5452 - 0.2e1 * (t4940 + t4935) * t5292 + 0.2e1 * (t4939 + t4928) * t5292 + t5937 * t5256 + (t5009 * t5371 + (t4417 + 0.4e1 * t5719) * t4895) * pkin(2) + t5964 * t5373 * t5966 + (t4901 * t5371 + t5935 * t5368) * t5975) * t4464 * t5396;
t4393 = t4417 - t5719;
t5146 = 4 * qJ(2,2);
t5575 = 0.4e1 * t5780;
t4496 = 0.1e1 / (pkin(2) * (pkin(2) * t4902 + t5383 + t5892) - t4903 * t5170);
t5730 = qJ(3,2) + qJ(1,2);
t4961 = qJ(2,2) + t5730;
t4844 = sin(t4961);
t4850 = cos(t4961);
t5725 = qJ(1,2) - (2 * qJ(2,2));
t5704 = ((t4844 + t4845) * t5024 + (t4850 + t4851) * t5975 + (cos(t5145 + t5725) + cos(qJ(1,2) + t5062) + 0.2e1 * t5118) * pkin(3) + (cos(t5731) + cos(t5730) + cos(qJ(3,2) - t5725) + cos(qJ(1,2) + t5064)) * pkin(2)) * t4496 / 0.2e1;
t5286 = t5101 * t5704 - ((0.2e1 * t4438 * t4938 * t5687 + t5936 * t4405 * t5949 + 0.2e1 * t5937 * t4393 + (t5935 * t4405 * t5953 + ((t4415 - t5265 / 0.2e1) * t4939 + (-t4935 + t4928) * t4399) * t5974) * pkin(3) + (t4940 * t5905 + t5934 * pkin(2) + (0.1e1 + t5964) * t5975) * t5478) * t5025 + (t5009 * t5576 - 0.6e1 * t5499 + t5107 * t5567 + t4899 * t5566 + t4897 * t5565 + sin((qJ(3,2) + t5146)) * t5577 + t5165 * sin((5 * qJ(3,2) + t5146)) + t5380 * sin((t5143 + t5146)) + (-sin(t5146) - t4900) * t5169 + (t5004 * sin((t5146 + t5144)) + t5011 * t5859 + t5010 * t5858 + t4895 * t5857 + (sin((t5142 + t5146)) + t4894) * t5560) * pkin(2) + (sin(t5061) * t5544 + sin(t5066) * t5873 + t5108 * t5897 + t4896 * t5896 + (-sin(t5147) - t4904) * t5558 + (sin(t5060) - sin(t5067) + t4901 + t4902 - 0.2e1 * t4903) * t5496) * pkin(1)) * t5690) / (t4936 * t5575 + (t4933 * t5735 + t4937 * t5170 + t5959) * t5910) * t5690;
t5638 = t5028 * t5171;
t4330 = (t4559 * t5198 + t5252) * t5638 + t5286;
t5902 = -0.2e1 * pkin(1) * t4597 * t5217 - 0.2e1 * t4330 * t5869;
t4526 = t4973 + (-pkin(3) + t5742 + 0.2e1 * t4989) * t5111;
t4683 = t4989 + t5742 / 0.2e1 + t5132;
t4535 = t5406 * t5904 - t4629;
t5203 = pkin(2) * t5406 + t4535 * t5119;
t5649 = t4967 * t5112;
t5665 = (t4979 + t5133) * t5110;
t4502 = t5112 * t5540 + t5420;
t5693 = t4502 * t4967;
t4450 = (-t4683 * t5649 + t4970 * t5665) * t5950 + (t4970 * t4526 + t4967 * t5203) * t5120 + t5693 + t4970 * t5668;
t5642 = t4970 * t5112;
t5692 = t4502 * t4970;
t4451 = (t4683 * t5642 + t4967 * t5665) * t5950 + (t4967 * t4526 - t4970 * t5203) * t5120 - t5692 + t4967 * t5668;
t5084 = -qJ(3,1) + t5156;
t4951 = cos(t5084);
t5086 = t5156 + t5153;
t4953 = cos(t5086);
t4465 = 0.1e1 / (t5169 * t4953 + (t4944 + t4951) * t5489 + t5958 * pkin(2));
t4906 = sin(t5077);
t4908 = sin(t5080);
t4910 = sin(t5083);
t4915 = sin(t5088);
t5076 = t5151 + t5155;
t4943 = cos(t5076);
t5082 = qJ(3,1) + t5155;
t4949 = cos(t5082);
t4909 = sin(t5081);
t5382 = (t4909 - t5111) * pkin(3);
t5588 = t5170 * sin(t5084);
t5197 = -0.8e1 * (((t4944 / 0.4e1 - t4950 / 0.4e1) * pkin(1) + (-t4946 / 0.8e1 + t4942 / 0.8e1 + t4948 / 0.8e1 - t5120 / 0.8e1) * pkin(3) + (t4943 / 0.8e1 + t4945 / 0.8e1 - t4949 / 0.8e1 - t4954 / 0.8e1) * pkin(2)) * t5449 + (-t5588 / 0.4e1 + t4906 * t5827 + t4910 * t5388 + t4819 * t5110 + pkin(1) * t5382 + ((-t4915 + t4914) * pkin(1) + (t4908 / 0.2e1 - t5014 / 0.2e1 + t5828) * pkin(3)) * pkin(2)) * t4406) * t4465 * t4439 + t4450 * t5102 + t4451 * t5103;
t4418 = pkin(2) * t5303;
t5718 = t4406 * t5166;
t4397 = t4418 + t5718;
t4433 = t5264 / 0.2e1;
t4400 = t4416 + t4433;
t4905 = sin(t5075);
t4907 = sin(t5078);
t4912 = sin(t5085);
t4913 = sin(t5086);
t5012 = sin(t5151);
t5315 = t5594 * t5689;
t5255 = t5025 * t5315;
t5367 = pkin(3) * t5449;
t5291 = pkin(2) * t5367;
t5342 = t5171 * t5477;
t5370 = pkin(3) * t5477;
t5372 = pkin(2) * t5449;
t5375 = pkin(2) * t5477;
t5447 = t5166 * t5689;
t5498 = pkin(3) * t5588;
t5253 = (t5166 * t4905 * t5303 + t5170 * t4913 * t5304 + t4397 * t4906 * t5904 + (t5375 / 0.4e1 + (0.3e1 / 0.4e1 * t5712 + t5474) * t5030 * t5593 + t5173 * t4416) * t5013 * t5974 + (t4418 + 0.2e1 * t5718) * t4909 * t5953 + t4912 * t5375 * t5914 + 0.8e1 * ((0.3e1 / 0.8e1 * t5342 + t4433) * t5170 + t4406 * t4958) * t5786 + (t4416 + 0.4e1 / 0.5e1 * t5264) * t5014 * t5578 + (t5111 * t5718 - t5372 / 0.4e1) * t5916 - 0.4e1 * t4400 * t5498 + t5519 * t5948 + (t4416 + 0.2e1 / 0.3e1 * t5264) * t4915 * t5543 + t4406 * t4910 * t5381 + t5933 * t5025 * t5447 + t5930 * t5170 * t5449 - 0.2e1 * (t4955 + t4949) * t5291 + 0.2e1 * (t4954 + t4943) * t5291 + t5931 * t5255 + (t5012 * t5370 + (t4418 + 0.4e1 * t5718) * t4908) * pkin(2) + t5963 * t5372 * t5966 + (t4907 * t5370 + t5932 * t5367) * t5975) * t4465 * t5395;
t4394 = t4418 - t5718;
t5154 = 4 * qJ(2,1);
t4498 = 0.1e1 / (pkin(2) * (pkin(2) * t4914 + t5382 + t5891) - t4915 * t5170);
t5732 = qJ(3,1) + qJ(1,1);
t4963 = qJ(2,1) + t5732;
t4846 = sin(t4963);
t4852 = cos(t4963);
t5726 = qJ(1,1) - (2 * qJ(2,1));
t5703 = ((t4846 + t4847) * t5024 + (t4852 + t4853) * t5975 + (cos(t5153 + t5726) + cos(qJ(1,1) + t5080) + 0.2e1 * t5121) * pkin(3) + (cos(qJ(3,1) - t5726) + cos(qJ(1,1) + t5083) + cos(t5733) + cos(t5732)) * pkin(2)) * t4498 / 0.2e1;
t5285 = t5101 * t5703 - ((0.2e1 * t4439 * t4945 * t5686 + t5933 * t4406 * t5949 + 0.2e1 * t5931 * t4394 + (t5932 * t4406 * t5953 + ((t4416 - t5264 / 0.2e1) * t4954 + (-t4949 + t4943) * t4400) * t5974) * pkin(3) + (t4955 * t5905 + t5930 * pkin(2) + (0.1e1 + t5963) * t5975) * t5477) * t5025 + (t5380 * sin((t5151 + t5154)) + t5165 * sin((5 * qJ(3,1) + t5154)) + t4906 * t5566 + t4910 * t5565 + t5110 * t5567 + sin((qJ(3,1) + t5154)) * t5577 + t5012 * t5576 - 0.6e1 * t5498 + (-t4913 - sin(t5154)) * t5169 + (t5004 * sin((t5154 + t5152)) + t5014 * t5859 + t5013 * t5858 + t4908 * t5857 + (sin((t5154 + t5150)) + t4905) * t5560) * pkin(2) + (sin(t5079) * t5544 + sin(t5074) * t5873 + t5111 * t5897 + t4909 * t5896 + (-sin(t5155) - t4912) * t5558 + (sin(t5076) - sin(t5082) + t4907 + t4914 - 0.2e1 * t4915) * t5496) * pkin(1)) * t5689) / (t4944 * t5575 + (t4951 * t5735 + t4953 * t5170 + t5958) * t5910) * t5689;
t5636 = t5030 * t5171;
t4331 = (t4561 * t5197 + t5253) * t5636 + t5285;
t5901 = -0.2e1 * pkin(1) * t4599 * t5216 - 0.2e1 * t4331 * t5869;
t5887 = -0.2e1 * t5035;
t5883 = -0.2e1 * t5039;
t5879 = -0.2e1 * t5043;
t5876 = -4 * t5126;
t5875 = -0.3e1 * t5165;
t5868 = -g(1) / 0.2e1;
t5867 = -g(1) / 0.4e1;
t5866 = g(1) / 0.2e1;
t5864 = -g(2) / 0.2e1;
t5862 = g(2) / 0.2e1;
t5861 = g(2) / 0.4e1;
t5852 = t5394 + t5251;
t5851 = t5393 + t5250;
t5850 = t5392 + t5249;
t4807 = qJ(1,3) + t4838;
t5849 = sin(t4807) / 0.4e1;
t4811 = qJ(1,2) + t4840;
t5848 = sin(t4811) / 0.4e1;
t4815 = qJ(1,1) + t4836;
t5847 = sin(t4815) / 0.4e1;
t4808 = qJ(1,3) + t4839;
t5846 = -cos(t4808) / 0.4e1;
t4812 = qJ(1,2) + t4841;
t5845 = -cos(t4812) / 0.4e1;
t4816 = qJ(1,1) - t5490;
t5844 = -cos(t4816) / 0.4e1;
t5843 = -sin(t5490) / 0.2e1;
t5842 = sin(t4839) / 0.2e1;
t5841 = sin(t4841) / 0.2e1;
t5840 = -cos(t4836) / 0.2e1;
t5839 = -cos(t4838) / 0.2e1;
t5838 = -cos(t4840) / 0.2e1;
t5837 = t4891 / 0.4e1;
t5836 = t4902 / 0.4e1;
t5835 = t4914 / 0.4e1;
t5834 = t4925 / 0.4e1;
t5833 = t4939 / 0.4e1;
t5832 = t4954 / 0.4e1;
t5831 = 0.3e1 / 0.2e1 * t5170 + t5094;
t5824 = t5952 - 0.1e1;
t5823 = 0.4e1 * t5035 - 0.2e1;
t5820 = t5951 - 0.1e1;
t5819 = 0.4e1 * t5039 - 0.2e1;
t5816 = t5950 - 0.1e1;
t5815 = 0.4e1 * t5043 - 0.2e1;
t5814 = pkin(2) * t4386;
t5813 = pkin(2) * t4387;
t5812 = pkin(2) * t4388;
t5811 = pkin(2) * t4398;
t5810 = pkin(2) * t4399;
t5809 = pkin(2) * t4400;
t5805 = pkin(2) * t5025;
t5734 = 0.3e1 * t5854;
t5727 = MDP(8) * t5171;
t5723 = MDP(15) * t5171;
t5553 = 0.2e1 * t4974;
t4509 = pkin(3) * t4971 + (-t5579 + t5553 + 0.2e1 * t4877) * t5105;
t5583 = t5094 + t5097;
t4586 = t4974 + t4877 + t5583;
t5518 = t4854 * t5790;
t5663 = t4854 * t4968;
t5664 = t4854 * t4965;
t4440 = (t4586 * t5655 - t4968 * t5518) * t5952 + (-t4509 * t4968 - t4533 * t5664) * t5114 - pkin(3) * t5697 - t4725 * t5663;
t5711 = t4440 * t5102;
t4441 = (-t4586 * t5646 - t4965 * t5518) * t5952 + (-t4509 * t4965 + t4533 * t5663) * t5114 + pkin(3) * t5696 - t4725 * t5664;
t5710 = t4441 * t5103;
t5551 = 0.2e1 * t4976;
t4510 = pkin(3) * t4972 + (-t5579 + t5551 + 0.2e1 * t4878) * t5108;
t4587 = t4976 + t4878 + t5583;
t5517 = t4855 * t5788;
t5660 = t4855 * t4969;
t5661 = t4855 * t4966;
t4442 = (t4587 * t5652 - t4969 * t5517) * t5951 + (-t4510 * t4969 - t4534 * t5661) * t5117 - pkin(3) * t5695 - t4726 * t5660;
t5709 = t4442 * t5102;
t4443 = (-t4587 * t5644 - t4966 * t5517) * t5951 + (-t4510 * t4966 + t4534 * t5660) * t5117 + pkin(3) * t5694 - t4726 * t5661;
t5708 = t4443 * t5103;
t5549 = 0.2e1 * t4978;
t4511 = pkin(3) * t4973 + (-t5579 + t5549 + 0.2e1 * t4879) * t5111;
t4588 = t4978 + t4879 + t5583;
t5516 = t4856 * t5786;
t5657 = t4856 * t4970;
t5658 = t4856 * t4967;
t4444 = (t4588 * t5649 - t4970 * t5516) * t5950 + (-t4511 * t4970 - t4535 * t5658) * t5120 - pkin(3) * t5693 - t4727 * t5657;
t5707 = t4444 * t5102;
t4445 = (-t4588 * t5642 - t4967 * t5516) * t5950 + (-t4511 * t4967 + t4535 * t5657) * t5120 + pkin(3) * t5692 - t4727 * t5658;
t5706 = t4445 * t5103;
t4473 = t4586 * t5115 * t5887 - t4554 * t5662 + pkin(3) * ((t4987 + t4770) * t5115 + t4619);
t5702 = t4473 * t5101;
t4474 = t4587 * t5118 * t5883 - t4555 * t5659 + pkin(3) * ((t4988 + t4771) * t5118 + t4620);
t5701 = t4474 * t5101;
t4475 = t4588 * t5121 * t5879 - t4556 * t5656 + pkin(3) * ((t4989 + t4772) * t5121 + t4621);
t5700 = t4475 * t5101;
t5673 = t4595 * t5106;
t5672 = t4597 * t5109;
t5671 = t4599 * t5112;
t5592 = t5167 * t5171;
t5591 = t5167 * t5172;
t5582 = -0.3e1 / 0.4e1 * t5166 + t5096;
t5574 = 0.2e1 * t4975;
t5573 = 0.2e1 * t4977;
t5572 = 0.2e1 * t4979;
t5559 = 0.2e1 * t5167;
t5548 = 0.2e1 * t5625;
t5547 = 0.2e1 * t5618;
t5546 = 0.2e1 * t5610;
t5539 = pkin(1) * t4488;
t5538 = pkin(1) * t4489;
t5537 = pkin(1) * t4490;
t5533 = pkin(2) * t4488;
t5532 = pkin(2) * t4489;
t5531 = pkin(2) * t4490;
t5530 = pkin(2) * t5691;
t5529 = pkin(2) * t5690;
t5528 = pkin(2) * t5689;
t5001 = t5949 + t5170;
t5488 = ((-pkin(3) * t4884 + (-t4886 - t5104) * pkin(2)) * t5455 + (t5170 * t4926 + t4920 * t5854 + t5001 * t4925 + t5114 * t5734 + (pkin(3) + t5746) * t5975) * t4404) * t4437 * t4494;
t5487 = ((-pkin(3) * t4895 + (-t4897 - t5107) * pkin(2)) * t5452 + (t5170 * t4940 + t4931 * t5854 + t5001 * t4939 + t5117 * t5734 + (pkin(3) + t5744) * t5975) * t4405) * t4438 * t4496;
t5486 = ((-pkin(3) * t4908 + (-t4910 - t5110) * pkin(2)) * t5449 + (t5170 * t4955 + t4948 * t5854 + t5001 * t4954 + t5120 * t5734 + (pkin(3) + t5742) * t5975) * t4406) * t4439 * t4498;
t5485 = t4386 * t5705;
t5484 = t4386 * t5688;
t5483 = t4387 * t5704;
t5482 = t4387 * t5687;
t5481 = t4388 * t5703;
t5480 = t4388 * t5686;
t5473 = t4440 * t5688;
t5472 = t4441 * t5688;
t5471 = t4442 * t5687;
t5470 = t4443 * t5687;
t5469 = t4444 * t5686;
t5468 = t4445 * t5686;
t5467 = t4446 * t5688;
t5466 = t4447 * t5688;
t5465 = t4448 * t5687;
t5464 = t4449 * t5687;
t5463 = t4450 * t5686;
t5462 = t4451 * t5686;
t4467 = (t5887 + 0.1e1) * t4488;
t5461 = t4467 * t5688;
t4468 = (t5883 + 0.1e1) * t4489;
t5460 = t4468 * t5687;
t4469 = (t5879 + 0.1e1) * t4490;
t5459 = t4469 * t5686;
t5458 = t4473 * t5688;
t5457 = t4474 * t5687;
t5456 = t4475 * t5686;
t5454 = t5105 * t5691;
t5451 = t5108 * t5690;
t5448 = t5111 * t5689;
t5431 = t4595 * t5654;
t5429 = t4596 * t5625;
t5428 = t4597 * t5651;
t5426 = t4598 * t5618;
t5425 = t4599 * t5648;
t5423 = t4600 * t5610;
t5391 = -t5691 / 0.2e1;
t5390 = -t5690 / 0.2e1;
t5389 = -t5689 / 0.2e1;
t4604 = g(1) * t4968 - g(2) * t4965;
t4536 = g(3) * t5106 - t4604 * t5115;
t4539 = g(3) * t5115 + t4604 * t5106;
t4605 = g(1) * t4969 - g(2) * t4966;
t4537 = g(3) * t5109 - t4605 * t5118;
t4540 = g(3) * t5118 + t4605 * t5109;
t4606 = g(1) * t4970 - g(2) * t4967;
t4538 = g(3) * t5112 - t4606 * t5121;
t4541 = g(3) * t5121 + t4606 * t5112;
t5362 = t5823 * t5606;
t5361 = t5819 * t5604;
t5360 = t5815 * t5602;
t4589 = t5113 * t5114 - t5628;
t5359 = t4589 * t5484;
t4592 = t5105 * t5113 + t5627;
t5358 = t4592 * t5484;
t5357 = t5105 * t5484;
t5356 = t5114 * t5484;
t4590 = t5116 * t5117 - t5621;
t5355 = t4590 * t5482;
t4593 = t5108 * t5116 + t5620;
t5354 = t4593 * t5482;
t5353 = t5108 * t5482;
t5352 = t5117 * t5482;
t4591 = t5119 * t5120 - t5614;
t5351 = t4591 * t5480;
t4594 = t5111 * t5119 + t5613;
t5350 = t4594 * t5480;
t5349 = t5111 * t5480;
t5348 = t5120 * t5480;
t5338 = t4488 * t5705;
t5337 = t4489 * t5704;
t5336 = t4490 * t5703;
t5335 = t4506 * t5446;
t5334 = t4506 * t5429;
t5333 = t4507 * t5445;
t5332 = t4507 * t5426;
t5331 = t4508 * t5444;
t5330 = t4508 * t5423;
t5329 = t5025 * t5454;
t5326 = t5640 * t5691;
t5324 = t5025 * t5451;
t5321 = t5638 * t5690;
t5319 = t5025 * t5448;
t5316 = t5636 * t5689;
t5302 = -0.2e1 * t4398 * t5530;
t5301 = -0.2e1 * t4399 * t5529;
t5300 = -0.2e1 * t4400 * t5528;
t5215 = (pkin(7) ^ 2) + t5173 + (t5158 + pkin(6)) * pkin(6) + (t5581 + pkin(5)) * pkin(5);
t4581 = t5560 + t5215;
t5269 = t5506 * t5915 + t4581;
t5268 = t5505 * t5915 + t4581;
t5267 = t5504 * t5915 + t4581;
t4512 = (t5033 - 0.1e1 / 0.2e1) * t5625 + (t5035 - 0.1e1 / 0.2e1) * t5606;
t5263 = t4512 * t5335;
t4522 = t5823 * t5033 - 0.4e1 * t5313 - t5824;
t5262 = t4522 * t5335;
t4513 = (t5037 - 0.1e1 / 0.2e1) * t5618 + (t5039 - 0.1e1 / 0.2e1) * t5604;
t5261 = t4513 * t5333;
t4523 = t5819 * t5037 - 0.4e1 * t5312 - t5820;
t5260 = t4523 * t5333;
t4514 = (t5041 - 0.1e1 / 0.2e1) * t5610 + (t5043 - 0.1e1 / 0.2e1) * t5602;
t5259 = t4514 * t5331;
t4521 = -t5815 * t5041 + 0.4e1 * t5314 + t5816;
t5258 = t4521 * t5331;
t4741 = sin(t4808);
t4752 = cos(t4807);
t5248 = g(1) * t5846 + g(2) * t5849 + t4741 * t5863 + t4752 * t5867 + t4842 * t5860;
t4745 = sin(t4812);
t4756 = cos(t4811);
t5247 = g(1) * t5845 + g(2) * t5848 + t4745 * t5863 + t4756 * t5867 + t4844 * t5860;
t4749 = sin(t4816);
t4760 = cos(t4815);
t5246 = g(1) * t5844 + g(2) * t5847 + t4749 * t5863 + t4760 * t5867 + t4846 * t5860;
t5245 = g(1) * t5849 + g(2) * t5846 + t4741 * t5865 + t4752 * t5861 + t4848 * t5860;
t5244 = g(1) * t5848 + g(2) * t5845 + t4745 * t5865 + t4756 * t5861 + t4850 * t5860;
t5243 = g(1) * t5847 + g(2) * t5844 + t4749 * t5865 + t4760 * t5861 + t4852 * t5860;
t4582 = t5166 + t5215;
t4360 = 0.4e1 * t4854 * (t4974 + t4877 / 0.2e1 + t5582) * t5034 * t5691 + (t4764 * t5453 * t5889 + (-(t4404 * t5025 + t5454 * t5909) * t5790 / 0.2e1 + pkin(1) * t5530) * t5574 - (t4398 * t5805 + t5454 * t5831) * t5790 + pkin(1) * t5325) * t5952 + ((t4398 * t4857 + t4404 * t5554 - t4392) * t5105 * t5025 + (t5032 * t5875 + t5269 * t4975 + (t5269 - 0.3e1 * t4974) * pkin(2)) * t5691) * t5114 - ((-t4404 * t4975 + t5308) * t5104 * t5025 + (t4582 * t5628 + (-t5033 * t5506 + (t5889 - 0.2e1) * pkin(1)) * pkin(3)) * t5691) * pkin(3);
t5193 = t5254 * t5640 + t5287;
t4428 = t5266 / 0.3e1;
t5233 = (-0.2e1 * t4854 * t5369 * t5633 + ((-t5329 + t5811) * t5553 + 0.3e1 * (t5329 * t5947 + (t5344 / 0.6e1 + t4428) * t5166 + t5170 * (t4414 + t4428)) * t4975 - t5105 * t5257 + t4395 * pkin(2)) * t5114 + (-(t4398 * t5804 + t5025 * t5391) * t5790 + pkin(1) * t5811) * t5574 - (t4395 * t5105 - t5374) * t5790 + pkin(1) * t4395) * t5027 * t5591 * t5714;
t4305 = (-t5233 / 0.2e1 + ((-t4360 * t5691 - t5488 + t5702 + t5710 + t5711) * t5167 + t5199) * t5640) * t4557 + t5193;
t4401 = t4404 ^ 2;
t5242 = t4305 * t5113 - t4401 * t5104;
t4361 = 0.4e1 * t4855 * (t4976 + t4878 / 0.2e1 + t5582) * t5038 * t5690 + (t4766 * t5450 * t5885 + (-(t4405 * t5025 + t5451 * t5909) * t5788 / 0.2e1 + pkin(1) * t5529) * t5573 - (t4399 * t5805 + t5451 * t5831) * t5788 + pkin(1) * t5320) * t5951 + ((t4399 * t4859 + t4405 * t5552 - t4393) * t5108 * t5025 + (t5036 * t5875 + t5268 * t4977 + (t5268 - 0.3e1 * t4976) * pkin(2)) * t5690) * t5117 - ((-t4405 * t4977 + t5306) * t5107 * t5025 + (t4582 * t5621 + (-t5037 * t5505 + (t5885 - 0.2e1) * pkin(1)) * pkin(3)) * t5690) * pkin(3);
t5192 = t5252 * t5638 + t5286;
t4430 = t5265 / 0.3e1;
t5232 = (-0.2e1 * t4855 * t5368 * t5631 + ((-t5324 + t5810) * t5551 + 0.3e1 * (t5324 * t5947 + (t5343 / 0.6e1 + t4430) * t5166 + t5170 * (t4415 + t4430)) * t4977 - t5108 * t5256 + t4396 * pkin(2)) * t5117 + (-(t4399 * t5803 + t5025 * t5390) * t5788 + pkin(1) * t5810) * t5573 - (t4396 * t5108 - t5373) * t5788 + pkin(1) * t4396) * t5029 * t5591 * t5713;
t4306 = (-t5232 / 0.2e1 + ((-t4361 * t5690 - t5487 + t5701 + t5708 + t5709) * t5167 + t5198) * t5638) * t4559 + t5192;
t4402 = t4405 ^ 2;
t5241 = t4306 * t5116 - t4402 * t5107;
t4359 = 0.4e1 * (t4978 + t4879 / 0.2e1 + t5582) * t4856 * t5042 * t5689 + (t4768 * t5447 * t5881 + (-(t4406 * t5025 + t5448 * t5909) * t5786 / 0.2e1 + pkin(1) * t5528) * t5572 - (t4400 * t5805 + t5448 * t5831) * t5786 + pkin(1) * t5315) * t5950 + ((t4400 * t4861 + t4406 * t5550 - t4394) * t5111 * t5025 + (t5040 * t5875 + t5267 * t4979 + (t5267 - 0.3e1 * t4978) * pkin(2)) * t5689) * t5120 - ((-t4406 * t4979 + t5304) * t5110 * t5025 + (t4582 * t5614 + (-t5041 * t5504 + (t5881 - 0.2e1) * pkin(1)) * pkin(3)) * t5689) * pkin(3);
t5191 = t5253 * t5636 + t5285;
t4432 = t5264 / 0.3e1;
t5231 = (-0.2e1 * t4856 * t5367 * t5629 + ((-t5319 + t5809) * t5549 + 0.3e1 * (t5319 * t5947 + (t5342 / 0.6e1 + t4432) * t5166 + t5170 * (t4416 + t4432)) * t4979 - t5111 * t5255 + t4397 * pkin(2)) * t5120 + (-(t4400 * t5802 + t5025 * t5389) * t5786 + pkin(1) * t5809) * t5572 - (t4397 * t5111 - t5372) * t5786 + pkin(1) * t4397) * t5031 * t5591 * t5712;
t4307 = (-t5231 / 0.2e1 + ((-t4359 * t5689 - t5486 + t5700 + t5706 + t5707) * t5167 + t5197) * t5636) * t4561 + t5191;
t4403 = t4406 ^ 2;
t5240 = t4307 * t5119 - t4403 * t5110;
t5236 = -0.2e1 * t5263;
t5235 = -0.2e1 * t5261;
t5234 = -0.2e1 * t5259;
t5230 = t5326 * t5714;
t5228 = t5321 * t5713;
t5226 = t5316 * t5712;
t5224 = t5113 * t5266;
t5223 = t5116 * t5265;
t5222 = t5119 * t5264;
t5221 = t5334 * t5688;
t5220 = t5332 * t5687;
t5219 = t5330 * t5686;
t5196 = pkin(5) * t5251 - t4536 - 0.2e1 * t5749;
t5195 = pkin(5) * t5250 - t4537 - 0.2e1 * t5748;
t5194 = pkin(5) * t5249 - t4538 - 0.2e1 * t5747;
t4797 = sin(t4838);
t4804 = cos(t4839);
t5190 = g(1) * t5842 + g(2) * t5839 + t4797 * t5868 + t4804 * t5864 + t5248 + t5917;
t4799 = sin(t4840);
t4806 = cos(t4841);
t5189 = g(1) * t5841 + g(2) * t5838 + t4799 * t5868 + t4806 * t5864 + t5247 + t5918;
t4795 = sin(t4836);
t4802 = cos(t5490);
t5188 = g(1) * t5843 + g(2) * t5840 + t4795 * t5868 + t4802 * t5864 + t5246 + t5919;
t5187 = g(1) * t5839 + g(2) * t5842 + t4797 * t5862 + t4804 * t5866 + t5245 + t5920;
t5186 = g(1) * t5838 + g(2) * t5841 + t4799 * t5862 + t4806 * t5866 + t5244 + t5921;
t5185 = g(1) * t5840 + g(2) * t5843 + t4795 * t5862 + t4802 * t5866 + t5243 + t5922;
t4603 = g(1) * t4967 + g(2) * t4970;
t4602 = g(1) * t4966 + g(2) * t4969;
t4601 = g(1) * t4965 + g(2) * t4968;
t4484 = 0.4e1 * t5537;
t4483 = 0.4e1 * t5538;
t4482 = 0.4e1 * t5539;
t4385 = -t4388 * t5125 + t4484;
t4384 = -t4387 * t5125 + t4483;
t4383 = -t4386 * t5125 + t4482;
t4382 = t4388 * t5876 + t4484;
t4381 = t4387 * t5876 + t4483;
t4380 = t4386 * t5876 + t4482;
t4379 = -pkin(5) * t4388 + t4541 + t5537;
t4378 = -pkin(5) * t4387 + t4540 + t5538;
t4377 = -pkin(5) * t4386 + t4539 + t5539;
t4376 = t4379 * t5120 + t4603 * t5111;
t4375 = t4379 * t5111 - t4603 * t5120;
t4374 = t4378 * t5117 + t4602 * t5108;
t4373 = t4378 * t5108 - t4602 * t5117;
t4372 = t4377 * t5114 + t4601 * t5105;
t4371 = t4377 * t5105 - t4601 * t5114;
t4370 = (t4388 * t5111 + t5120 * t5226) * t5111;
t4369 = (t4387 * t5108 + t5117 * t5228) * t5108;
t4368 = (t4386 * t5105 + t5114 * t5230) * t5105;
t4364 = t4388 * t5546 + t5816 * t5226;
t4363 = t4387 * t5547 + t5820 * t5228;
t4362 = t4386 * t5548 + t5824 * t5230;
t4349 = t5206 * t5043 + (t5041 * t5879 + (t5119 + 0.2e1 * t5405) * t5119) * t4388 + (t5212 * t5043 + (t5546 * t5817 + t5360) * t4517 * t4406) * t4599;
t4348 = t5207 * t5039 + (t5037 * t5883 + (t5116 + 0.2e1 * t5407) * t5116) * t4387 + (t5213 * t5039 + (t5547 * t5821 + t5361) * t4516 * t4405) * t4597;
t4347 = t5208 * t5035 + (t5033 * t5887 + (t5113 + 0.2e1 * t5409) * t5113) * t4386 + (t5214 * t5035 + (t5548 * t5825 + t5362) * t4515 * t4404) * t4595;
t4346 = -0.8e1 * (-t5041 * t4388 / 0.2e1 + t4529 / 0.4e1 + t4427 / 0.4e1 + (-t5417 / 0.4e1 - t5609 / 0.4e1) * t4599) * t5610 + t4388 * t5360 + (-0.8e1 * (-t4391 / 0.4e1 + t4685 * t5342 / 0.8e1) * t5423 + ((0.8e1 * t5041 - 0.4e1) * t5043 - 0.8e1 * t5314 - 0.4e1 * t5041 + 0.2e1) * t4599 * t4406) * t4517;
t4345 = -0.8e1 * (-t5037 * t4387 / 0.2e1 + t4528 / 0.4e1 + t4426 / 0.4e1 + (-t5418 / 0.4e1 - t5617 / 0.4e1) * t4597) * t5618 + t4387 * t5361 + (-0.8e1 * (-t4390 / 0.4e1 + t4686 * t5343 / 0.8e1) * t5426 + ((0.8e1 * t5037 - 0.4e1) * t5039 - 0.8e1 * t5312 - 0.4e1 * t5037 + 0.2e1) * t4597 * t4405) * t4516;
t4344 = -0.8e1 * (-t5033 * t4386 / 0.2e1 + t4527 / 0.4e1 + t4425 / 0.4e1 + (-t5419 / 0.4e1 - t5624 / 0.4e1) * t4595) * t5625 + t4386 * t5362 + (-0.8e1 * (-t4389 / 0.4e1 + t4684 * t5344 / 0.8e1) * t5429 + ((0.8e1 * t5033 - 0.4e1) * t5035 - 0.8e1 * t5313 - 0.4e1 * t5033 + 0.2e1) * t4595 * t4404) * t4515;
t4328 = t4331 * t5120 - t5111 * t5345 / 0.4e1;
t4327 = t4331 * t5111 + t5120 * t5249;
t4326 = t4330 * t5117 - t5108 * t5346 / 0.4e1;
t4325 = t4330 * t5108 + t5117 * t5250;
t4324 = t4329 * t5114 - t5105 * t5347 / 0.4e1;
t4323 = t4329 * t5105 + t5114 * t5251;
t4319 = t4382 * t5835 + t5188 + (t4331 * t5119 + t4910 * t5392 + t5110 * t5850) * pkin(2);
t4318 = t4381 * t5836 + t5189 + (t4330 * t5116 + t4897 * t5393 + t5107 * t5851) * pkin(2);
t4317 = t4380 * t5837 + t5190 + (t4329 * t5113 + t4886 * t5394 + t5104 * t5852) * pkin(2);
t4316 = t4382 * t5832 + t5185 + (-t4331 * t5110 + t4950 * t5392 + t5119 * t5850) * pkin(2);
t4315 = t4381 * t5833 + t5186 + (-t4330 * t5107 + t4932 * t5393 + t5116 * t5851) * pkin(2);
t4314 = t4380 * t5834 + t5187 + (-t4329 * t5104 + t4921 * t5394 + t5113 * t5852) * pkin(2);
t4313 = t5111 * t5901 - t5120 * t5194;
t4312 = t5111 * t5194 + t5120 * t5901;
t4311 = t5108 * t5902 - t5117 * t5195;
t4310 = t5108 * t5195 + t5117 * t5902;
t4309 = t5105 * t5903 - t5114 * t5196;
t4308 = t5105 * t5196 + t5114 * t5903;
t4304 = (-t5231 / 0.4e1 + ((t5706 / 0.2e1 + t5707 / 0.2e1 + t5700 / 0.2e1 + t4359 * t5389 - t5486 / 0.2e1) * t5167 + t5197) * t5636) * t4561 + t5191;
t4303 = (-t5232 / 0.4e1 + ((t5708 / 0.2e1 + t5709 / 0.2e1 + t5701 / 0.2e1 + t4361 * t5390 - t5487 / 0.2e1) * t5167 + t5198) * t5638) * t4559 + t5192;
t4302 = (-t5233 / 0.4e1 + ((t5710 / 0.2e1 + t5711 / 0.2e1 + t5702 / 0.2e1 + t4360 * t5391 - t5488 / 0.2e1) * t5167 + t5199) * t5640) * t4557 + t5193;
t4301 = t4307 * t5110 + t4403 * t5119;
t4300 = t4306 * t5107 + t4402 * t5116;
t4299 = t4305 * t5104 + t4401 * t5113;
t4298 = t4307 * t5876 + (-0.8e1 * t5474 - 0.4e1 * t5712) * pkin(1) * t5316;
t4297 = t4306 * t5876 + (-0.8e1 * t5475 - 0.4e1 * t5713) * pkin(1) * t5321;
t4296 = t4305 * t5876 + (-0.8e1 * t5476 - 0.4e1 * t5714) * pkin(1) * t5326;
t4295 = t4385 * t5835 + (-t4304 * t5119 + t4400 * t5339) * t5911 + t4910 * t5531 + t5188;
t4294 = t4384 * t5836 + t4897 * t5532 + (-t4303 * t5116 + t4399 * t5340) * t5911 + t5189;
t4293 = t4383 * t5837 + t4886 * t5533 + (-t4302 * t5113 + t4398 * t5341) * t5911 + t5190;
t4292 = t4385 * t5832 + (t4304 * t5110 + t4400 * t5222) * t5911 + t4950 * t5531 + t5185;
t4291 = t4384 * t5833 + (t4303 * t5107 + t4399 * t5223) * t5911 + t4932 * t5532 + t5186;
t4290 = t4383 * t5834 + (t4302 * t5104 + t4398 * t5224) * t5911 + t4921 * t5533 + t5187;
t4289 = t4910 * t5300 + t4950 * t5812 - t5957 * t5832 + t4298 * t5835 - pkin(2) * (-t4388 * t5119 + t5339 * t5689) + t5246 - t5919;
t4288 = t4897 * t5301 + t4932 * t5813 - t5956 * t5833 + t4297 * t5836 - pkin(2) * (-t4387 * t5116 + t5340 * t5690) + t5247 - t5918;
t4287 = t4886 * t5302 + t4921 * t5814 - t5955 * t5834 + t4296 * t5837 - pkin(2) * (-t4386 * t5113 + t5341 * t5691) + t5248 - t5917;
t4286 = t4950 * t5300 - t4910 * t5812 + t5957 * t5835 + t4298 * t5832 - pkin(2) * (t4388 * t5110 + t5222 * t5689) + t5243 - t5922;
t4285 = t4932 * t5301 - t4897 * t5813 + t5956 * t5836 + t4297 * t5833 - pkin(2) * (t4387 * t5107 + t5223 * t5690) + t5244 - t5921;
t4284 = t4921 * t5302 - t4886 * t5814 + t5955 * t5837 + t4296 * t5834 - pkin(2) * (t4386 * t5104 + t5224 * t5691) + t5245 - t5920;
t4283 = t4301 * t5120 + t5111 * t5240;
t4282 = t4300 * t5117 + t5108 * t5241;
t4281 = t4299 * t5114 + t5105 * t5242;
t4280 = -t5111 * t4301 + t5120 * t5240;
t4279 = -t5108 * t4300 + t5117 * t5241;
t4278 = -t5105 * t4299 + t5114 * t5242;
t1 = [(t4386 * t5430 + t4387 * t5427 + t4388 * t5424) * MDP(1) + (t4536 * t5430 + t4537 * t5427 + t4538 * t5424) * MDP(2) + (t4539 * t5430 + t4540 * t5427 + t4541 * t5424) * MDP(3) + (t4368 * t5430 + t4369 * t5427 + t4370 * t5424 + (-t4447 * t5221 - t4449 * t5220 - t4451 * t5219) * t5171) * MDP(4) + (t4362 * t5430 + t4363 * t5427 + t4364 * t5424 + (t4447 * t5461 + t4449 * t5460 + t4451 * t5459) * t5171) * MDP(5) + (t4323 * t5430 + t4325 * t5427 + t4327 * t5424 + (t4447 * t5357 + t4449 * t5353 + t4451 * t5349) * t5171) * MDP(6) + (t4324 * t5430 + t4326 * t5427 + t4328 * t5424 + (t4447 * t5356 + t4449 * t5352 + t4451 * t5348) * t5171) * MDP(7) + (t4329 * t5466 + t4330 * t5464 + t4331 * t5462) * t5727 + (t4309 * t5430 + t4311 * t5427 + t4313 * t5424 + (t4371 * t5466 + t4373 * t5464 + t4375 * t5462) * t5171) * MDP(9) + (t4308 * t5430 + t4310 * t5427 + t4312 * t5424 + (t4372 * t5466 + t4374 * t5464 + t4376 * t5462) * t5171) * MDP(10) + (t4347 * t5430 + t4348 * t5427 + t4349 * t5424 + (t4447 * t5236 + t4449 * t5235 + t4451 * t5234 + (-t4441 * t5263 - t4443 * t5261 - t4445 * t5259) * t5559) * t5171) * MDP(11) + (t4344 * t5430 + t4345 * t5427 + t4346 * t5424 + (-t4447 * t5262 - t4449 * t5260 + t4451 * t5258 + (-t4441 * t5262 - t4443 * t5260 + t4445 * t5258) * t5167) * t5171) * MDP(12) + (t4281 * t5430 + t4282 * t5427 + t4283 * t5424 + (t4447 * t5358 + t4449 * t5354 + t4451 * t5350 + (t4441 * t5358 + t4443 * t5354 + t4445 * t5350) * t5167) * t5171) * MDP(13) + (t4278 * t5430 + t4279 * t5427 + t4280 * t5424 + (t4447 * t5359 + t4449 * t5355 + t4451 * t5351 + (t4441 * t5359 + t4443 * t5355 + t4445 * t5351) * t5167) * t5171) * MDP(14) + (t4305 * t5466 + t4306 * t5464 + t4307 * t5462 + (t4305 * t5472 + t4306 * t5470 + t4307 * t5468) * t5167) * t5723 + (t4287 * t5430 + t4288 * t5427 + t4289 * t5424 + (t4293 * t5466 + t4294 * t5464 + t4295 * t5462 + (t4317 * t5472 + t4318 * t5470 + t4319 * t5468) * t5167) * t5171) * MDP(16) + (t4284 * t5430 + t4285 * t5427 + t4286 * t5424 + (t4290 * t5466 + t4291 * t5464 + t4292 * t5462 + (t4314 * t5472 + t4315 * t5470 + t4316 * t5468) * t5167) * t5171) * MDP(17) + (t5103 - g(1)) * MDP(18); (-t4386 * t5431 - t4387 * t5428 - t4388 * t5425) * MDP(1) + (-t4536 * t5431 - t4537 * t5428 - t4538 * t5425) * MDP(2) + (-t4539 * t5431 - t4540 * t5428 - t4541 * t5425) * MDP(3) + (-t4368 * t5431 - t4369 * t5428 - t4370 * t5425 + (-t4446 * t5221 - t4448 * t5220 - t4450 * t5219) * t5171) * MDP(4) + (-t4362 * t5431 - t4363 * t5428 - t4364 * t5425 + (t4446 * t5461 + t4448 * t5460 + t4450 * t5459) * t5171) * MDP(5) + (-t4323 * t5431 - t4325 * t5428 - t4327 * t5425 + (t4446 * t5357 + t4448 * t5353 + t4450 * t5349) * t5171) * MDP(6) + (-t4324 * t5431 - t4326 * t5428 - t4328 * t5425 + (t4446 * t5356 + t4448 * t5352 + t4450 * t5348) * t5171) * MDP(7) + (t4329 * t5467 + t4330 * t5465 + t4331 * t5463) * t5727 + (-t4309 * t5431 - t4311 * t5428 - t4313 * t5425 + (t4371 * t5467 + t4373 * t5465 + t4375 * t5463) * t5171) * MDP(9) + (-t4308 * t5431 - t4310 * t5428 - t4312 * t5425 + (t4372 * t5467 + t4374 * t5465 + t4376 * t5463) * t5171) * MDP(10) + (-t4347 * t5431 - t4348 * t5428 - t4349 * t5425 + (t4446 * t5236 + t4448 * t5235 + t4450 * t5234 + (-t4440 * t5263 - t4442 * t5261 - t4444 * t5259) * t5559) * t5171) * MDP(11) + (-t4344 * t5431 - t4345 * t5428 - t4346 * t5425 + (-t4446 * t5262 - t4448 * t5260 + t4450 * t5258 + (-t4440 * t5262 - t4442 * t5260 + t4444 * t5258) * t5167) * t5171) * MDP(12) + (-t4281 * t5431 - t4282 * t5428 - t4283 * t5425 + (t4446 * t5358 + t4448 * t5354 + t4450 * t5350 + (t4440 * t5358 + t4442 * t5354 + t4444 * t5350) * t5167) * t5171) * MDP(13) + (-t4278 * t5431 - t4279 * t5428 - t4280 * t5425 + (t4446 * t5359 + t4448 * t5355 + t4450 * t5351 + (t4440 * t5359 + t4442 * t5355 + t4444 * t5351) * t5167) * t5171) * MDP(14) + (t4305 * t5467 + t4306 * t5465 + t4307 * t5463 + (t4305 * t5473 + t4306 * t5471 + t4307 * t5469) * t5167) * t5723 + (-t4287 * t5431 - t4288 * t5428 - t4289 * t5425 + (t4293 * t5467 + t4294 * t5465 + t4295 * t5463 + (t4317 * t5473 + t4318 * t5471 + t4319 * t5469) * t5167) * t5171) * MDP(16) + (-t4284 * t5431 - t4285 * t5428 - t4286 * t5425 + (t4290 * t5467 + t4291 * t5465 + t4292 * t5463 + (t4314 * t5473 + t4315 * t5471 + t4316 * t5469) * t5167) * t5171) * MDP(17) + (t5102 - g(2)) * MDP(18); (-t4386 * t5673 - t4387 * t5672 - t4388 * t5671) * MDP(1) + (-t4536 * t5673 - t4537 * t5672 - t4538 * t5671) * MDP(2) + (-t4539 * t5673 - t4540 * t5672 - t4541 * t5671) * MDP(3) + (-t4368 * t5673 - t4369 * t5672 - t4370 * t5671 - t5330 * t5703 - t5332 * t5704 - t5334 * t5705) * MDP(4) + (-t4362 * t5673 - t4363 * t5672 - t4364 * t5671 + t4467 * t5705 + t4468 * t5704 + t4469 * t5703) * MDP(5) + (-t4323 * t5673 - t4325 * t5672 - t4327 * t5671 + t5105 * t5485 + t5108 * t5483 + t5111 * t5481) * MDP(6) + (-t4324 * t5673 - t4326 * t5672 - t4328 * t5671 + t5114 * t5485 + t5117 * t5483 + t5120 * t5481) * MDP(7) + (t4329 * t5705 + t4330 * t5704 + t4331 * t5703) * MDP(8) + (-t4309 * t5673 - t4311 * t5672 - t4313 * t5671 + t4371 * t5705 + t4373 * t5704 + t4375 * t5703) * MDP(9) + (-t4308 * t5673 - t4310 * t5672 - t4312 * t5671 + t4372 * t5705 + t4374 * t5704 + t4376 * t5703) * MDP(10) + (-0.2e1 * t4512 * t5338 - 0.2e1 * t4513 * t5337 - 0.2e1 * t4514 * t5336 - t4347 * t5673 - t4348 * t5672 - t4349 * t5671 + (-t4473 * t5263 - t4474 * t5261 - t4475 * t5259) * t5171 * t5559) * MDP(11) + (-t4522 * t5338 - t4523 * t5337 + t4521 * t5336 - t4344 * t5673 - t4345 * t5672 - t4346 * t5671 + (-t4473 * t5262 - t4474 * t5260 + t4475 * t5258) * t5592) * MDP(12) + (t4592 * t5485 + t4593 * t5483 + t4594 * t5481 - t4281 * t5673 - t4282 * t5672 - t4283 * t5671 + (t4473 * t5358 + t4474 * t5354 + t4475 * t5350) * t5592) * MDP(13) + (t4589 * t5485 + t4590 * t5483 + t4591 * t5481 - t4278 * t5673 - t4279 * t5672 - t4280 * t5671 + (t4473 * t5359 + t4474 * t5355 + t4475 * t5351) * t5592) * MDP(14) + (t4305 * t5705 + t4306 * t5704 + t4307 * t5703 + (t4305 * t5458 + t4306 * t5457 + t4307 * t5456) * t5592) * MDP(15) + (-t4287 * t5673 - t4288 * t5672 - t4289 * t5671 + t4293 * t5705 + t4294 * t5704 + t4295 * t5703 + (t4317 * t5458 + t4318 * t5457 + t4319 * t5456) * t5592) * MDP(16) + (-t4284 * t5673 - t4285 * t5672 - t4286 * t5671 + t4290 * t5705 + t4291 * t5704 + t4292 * t5703 + (t4314 * t5458 + t4315 * t5457 + t4316 * t5456) * t5592) * MDP(17) + (t5101 - g(3)) * MDP(18);];
tauX  = t1;
