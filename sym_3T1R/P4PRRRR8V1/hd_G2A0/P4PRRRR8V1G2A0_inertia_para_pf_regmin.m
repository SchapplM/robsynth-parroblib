% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P4PRRRR8V1G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d2,d4,theta1]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [4*4x15]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 11:06
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P4PRRRR8V1G2A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4PRRRR8V1G2A0_inertia_para_pf_regmin: xP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4PRRRR8V1G2A0_inertia_para_pf_regmin: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P4PRRRR8V1G2A0_inertia_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4PRRRR8V1G2A0_inertia_para_pf_regmin: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4PRRRR8V1G2A0_inertia_para_pf_regmin: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 11:03:47
% EndTime: 2020-08-07 11:04:36
% DurationCPUTime: 55.30s
% Computational Cost: add. (19564->984), mult. (60976->2142), div. (5058->18), fcn. (64822->30), ass. (0->942)
t903 = xP(4);
t866 = sin(t903);
t867 = cos(t903);
t904 = koppelP(4,2);
t908 = koppelP(4,1);
t826 = t866 * t908 + t867 * t904;
t830 = -t866 * t904 + t867 * t908;
t887 = legFrame(4,2);
t858 = sin(t887);
t862 = cos(t887);
t1091 = t826 * t862 + t858 * t830;
t882 = cos(pkin(3));
t883 = sin(qJ(3,4));
t1513 = t882 * t883;
t884 = sin(qJ(2,4));
t885 = cos(qJ(3,4));
t1507 = t884 * t885;
t886 = cos(qJ(2,4));
t834 = pkin(2) * t1507 - t886 * pkin(5);
t881 = sin(pkin(3));
t1367 = pkin(2) * t1513 + t834 * t881;
t1665 = 0.1e1 / t1367;
t1600 = t1091 * t1665;
t1627 = cos(pkin(6));
t1374 = t1627 * t886;
t1508 = t883 * t884;
t1520 = t881 * t885;
t880 = sin(pkin(6));
t771 = -t883 * t1374 + (t882 * t1508 + t1520) * t880;
t1471 = t771 * t1600;
t907 = koppelP(1,2);
t911 = koppelP(1,1);
t829 = t866 * t911 + t867 * t907;
t833 = -t866 * t907 + t867 * t911;
t890 = legFrame(1,2);
t861 = sin(t890);
t865 = cos(t890);
t1088 = t829 * t865 + t861 * t833;
t895 = sin(qJ(3,1));
t1510 = t882 * t895;
t896 = sin(qJ(2,1));
t901 = cos(qJ(3,1));
t1501 = t896 * t901;
t902 = cos(qJ(2,1));
t838 = pkin(2) * t1501 - t902 * pkin(5);
t1364 = pkin(2) * t1510 + t838 * t881;
t1671 = 0.1e1 / t1364;
t1599 = t1088 * t1671;
t1368 = t1627 * t902;
t1502 = t895 * t896;
t1516 = t881 * t901;
t780 = -t895 * t1368 + (t882 * t1502 + t1516) * t880;
t1470 = t780 * t1599;
t900 = cos(qJ(2,2));
t1369 = t1627 * t900;
t894 = sin(qJ(2,2));
t1372 = t1627 * t894;
t1522 = t880 * t900;
t1525 = t880 * t894;
t899 = cos(qJ(3,2));
t1629 = pkin(2) * t899;
t1379 = -pkin(5) * (-t882 * t1525 + t1369) + (t882 * t1522 + t1372) * t1629;
t960 = -t882 * t1372 - t1522;
t758 = -(t882 * t1369 - t1525) * t1629 + pkin(5) * t960;
t893 = sin(qJ(3,2));
t1504 = t893 * t894;
t779 = -t893 * t1369 + (t882 * t1504 + t881 * t899) * t880;
t1590 = t758 * t779;
t1377 = t881 * t1627;
t782 = -t899 * t1377 + t960 * t893;
t1678 = t1379 * t782 + t1590;
t898 = cos(qJ(2,3));
t1370 = t1627 * t898;
t892 = sin(qJ(2,3));
t1373 = t1627 * t892;
t1523 = t880 * t898;
t1526 = t880 * t892;
t897 = cos(qJ(3,3));
t1630 = pkin(2) * t897;
t1380 = -pkin(5) * (-t882 * t1526 + t1370) + (t882 * t1523 + t1373) * t1630;
t961 = -t882 * t1373 - t1523;
t757 = -(t882 * t1370 - t1526) * t1630 + pkin(5) * t961;
t891 = sin(qJ(3,3));
t1506 = t891 * t892;
t778 = -t891 * t1370 + (t882 * t1506 + t881 * t897) * t880;
t1591 = t757 * t778;
t781 = -t897 * t1377 + t961 * t891;
t1677 = t1380 * t781 + t1591;
t888 = legFrame(3,2);
t859 = sin(t888);
t851 = t859 ^ 2;
t1676 = 0.2e1 * t851;
t889 = legFrame(2,2);
t860 = sin(t889);
t852 = t860 ^ 2;
t1675 = 0.2e1 * t852;
t1674 = 0.2e1 * t881;
t912 = 0.1e1 / pkin(2);
t1673 = 0.2e1 * t912;
t1672 = 0.1e1 / t1364 ^ 2;
t1511 = t882 * t893;
t1503 = t894 * t899;
t837 = pkin(2) * t1503 - t900 * pkin(5);
t1365 = pkin(2) * t1511 + t837 * t881;
t1670 = 0.1e1 / t1365 ^ 2;
t1669 = 0.1e1 / t1365;
t1512 = t882 * t891;
t1505 = t892 * t897;
t836 = pkin(2) * t1505 - t898 * pkin(5);
t1366 = pkin(2) * t1512 + t836 * t881;
t1668 = 0.1e1 / t1366 ^ 2;
t1667 = 0.1e1 / t1366;
t1666 = 0.1e1 / t1367 ^ 2;
t1528 = t880 * t884;
t1631 = pkin(2) * t885;
t1375 = t1627 * t884;
t1527 = t880 * t886;
t962 = -t882 * t1375 - t1527;
t751 = -(t882 * t1374 - t1528) * t1631 + pkin(5) * t962;
t772 = -t885 * t1377 + t962 * t883;
t1664 = t751 * t772;
t1663 = t757 * t781;
t1662 = t758 * t782;
t1524 = t880 * t896;
t1628 = pkin(2) * t901;
t1371 = t1627 * t896;
t1521 = t880 * t902;
t959 = -t882 * t1371 - t1521;
t759 = -(t882 * t1368 - t1524) * t1628 + pkin(5) * t959;
t783 = -t901 * t1377 + t959 * t895;
t1661 = t759 * t783;
t1660 = t771 * t772;
t1659 = t778 * t781;
t1658 = t779 * t782;
t1657 = t780 * t783;
t869 = 0.1e1 / t885;
t1543 = t858 * t869;
t814 = -t882 * t1528 + t1374;
t784 = t880 * t1520 - t814 * t883;
t1432 = t784 * t1543;
t1240 = pkin(2) * t1377;
t1376 = t882 * t1627;
t835 = pkin(5) * t884 + t886 * t1631;
t738 = t883 * t1240 - t834 * t1376 - t880 * t835;
t730 = t1367 * t862 + t738 * t858;
t731 = t1367 * t858 - t738 * t862;
t644 = (t730 * t830 - t731 * t826) * t1665;
t1570 = t1665 * t869;
t958 = t1091 * t1570;
t688 = t771 * t958;
t1656 = t1665 * (t644 * t1432 + t688 * t730);
t878 = 0.1e1 / t901;
t1539 = t861 * t878;
t817 = t882 * t1524 - t1368;
t785 = t880 * t1516 + t817 * t895;
t1426 = t785 * t1539;
t841 = pkin(5) * t896 + t902 * t1628;
t742 = t895 * t1240 - t838 * t1376 - t880 * t841;
t736 = t1364 * t865 + t742 * t861;
t737 = t1364 * t861 - t742 * t865;
t649 = (t736 * t833 - t737 * t829) * t1671;
t1550 = t1671 * t878;
t952 = t1088 * t1550;
t691 = t780 * t952;
t1655 = t1671 * (t649 * t1426 + t691 * t736);
t875 = 0.1e1 / t897 ^ 2;
t1654 = t875 * t891;
t877 = 0.1e1 / t899 ^ 2;
t1653 = t877 * t893;
t1349 = t878 * t1470;
t1652 = (t691 + t1349) * t649;
t906 = koppelP(2,2);
t910 = koppelP(2,1);
t828 = t866 * t910 + t867 * t906;
t832 = -t866 * t906 + t867 * t910;
t864 = cos(t889);
t1089 = t828 * t864 + t860 * t832;
t1577 = t779 * t1669;
t1468 = t1089 * t1577;
t876 = 0.1e1 / t899;
t1343 = t876 * t1468;
t840 = pkin(5) * t894 + t900 * t1629;
t741 = t893 * t1240 - t837 * t1376 - t880 * t840;
t734 = t1365 * t864 + t741 * t860;
t735 = t1365 * t860 - t741 * t864;
t648 = (t734 * t832 - t735 * t828) * t1669;
t1558 = t1669 * t876;
t954 = t1089 * t1558;
t690 = t779 * t954;
t1651 = (t690 + t1343) * t648;
t905 = koppelP(3,2);
t909 = koppelP(3,1);
t827 = t866 * t909 + t867 * t905;
t831 = -t866 * t905 + t867 * t909;
t863 = cos(t888);
t1090 = t827 * t863 + t859 * t831;
t1579 = t778 * t1667;
t1469 = t1090 * t1579;
t874 = 0.1e1 / t897;
t1346 = t874 * t1469;
t839 = pkin(5) * t892 + t898 * t1630;
t740 = t891 * t1240 - t836 * t1376 - t880 * t839;
t732 = t1366 * t863 + t740 * t859;
t733 = t1366 * t859 - t740 * t863;
t647 = (t732 * t831 - t733 * t827) * t1667;
t1564 = t1667 * t874;
t956 = t1090 * t1564;
t689 = t778 * t956;
t1650 = (t689 + t1346) * t647;
t1351 = t869 * t1471;
t1649 = (t688 + t1351) * t644;
t1648 = t1088 * t861;
t1647 = t1091 * t858;
t1378 = t817 * pkin(5) + (t882 * t1521 + t1371) * t1628;
t1581 = t1378 * t1088;
t1646 = 0.2e1 * t1581 * t780;
t1381 = -pkin(5) * t814 + (t882 * t1527 + t1375) * t1631;
t1592 = t1381 * t1091;
t1645 = 0.2e1 * t1592 * t771;
t857 = t865 ^ 2;
t1644 = t1378 * t857;
t1552 = t1671 ^ 2;
t1429 = t785 * t1552;
t1643 = t1378 * (t1672 * t780 + t1429);
t1642 = t1379 * t779;
t1641 = t1380 * t778;
t854 = t862 ^ 2;
t1640 = t1381 * t854;
t1572 = t1665 ^ 2;
t1435 = t784 * t1572;
t1639 = t1381 * (t1666 * t771 + t1435);
t1638 = t736 * t1539 * (t780 * t1552 + t1672 * t785);
t1637 = t730 * t1543 * (t771 * t1572 + t1666 * t784);
t1584 = t1379 * t1089;
t1586 = t1380 * t1090;
t1636 = t771 ^ 2;
t1635 = t780 ^ 2;
t1632 = pkin(2) * t881;
t1626 = t647 * t781;
t1625 = t648 * t782;
t1624 = t688 * t883;
t1623 = t689 * t1667;
t1622 = t690 * t1669;
t1621 = t691 * t895;
t1620 = t730 * t772;
t1619 = t730 * t1665;
t1618 = t731 * t1665;
t1617 = t732 * t1667;
t1616 = t733 * t1667;
t1615 = t734 * t1669;
t1614 = t735 * t1669;
t1613 = t736 * t783;
t1612 = t736 * t1671;
t1611 = t737 * t1671;
t739 = t1627 * t835 + (t883 * t1632 - t834 * t882) * t880;
t1610 = t739 * t1665;
t1609 = t739 * t1666;
t1608 = t739 * t858;
t743 = t1627 * t839 + (t891 * t1632 - t836 * t882) * t880;
t1607 = t743 * t1667;
t1606 = t743 * t1668;
t744 = t1627 * t840 + (t893 * t1632 - t837 * t882) * t880;
t1605 = t744 * t1669;
t1604 = t744 * t1670;
t745 = t1627 * t841 + (t895 * t1632 - t838 * t882) * t880;
t1603 = t745 * t1671;
t1602 = t745 * t1672;
t1601 = t745 * t861;
t1598 = t1090 * t1667;
t1597 = t1089 * t1669;
t1596 = t751 * t771;
t1595 = t751 * t1665;
t1594 = t1381 * t862;
t1593 = t1381 * t912;
t1589 = t759 * t780;
t1588 = t759 * t1671;
t1583 = t1378 * t865;
t1582 = t1378 * t912;
t1580 = t771 * t862;
t1578 = t778 * t859;
t1576 = t779 * t860;
t1575 = t780 * t865;
t1574 = t784 * t858;
t1573 = t785 * t861;
t1571 = t1665 * t862;
t1569 = t1665 * t886;
t1568 = t1666 * t858;
t1567 = t1666 * t862;
t1566 = t1666 * t869;
t870 = 0.1e1 / t885 ^ 2;
t1565 = t1666 * t870;
t1563 = t1667 * t892;
t1562 = t1667 * t898;
t1561 = t1668 * t863;
t1560 = t1668 * t874;
t1559 = t1668 * t875;
t1557 = t1669 * t894;
t1556 = t1669 * t900;
t1555 = t1670 * t864;
t1554 = t1670 * t876;
t1553 = t1670 * t877;
t1551 = t1671 * t865;
t1549 = t1671 * t902;
t1548 = t1672 * t861;
t1547 = t1672 * t865;
t1546 = t1672 * t878;
t879 = 0.1e1 / t901 ^ 2;
t1545 = t1672 * t879;
t1544 = t858 * t862;
t1542 = t859 * t912;
t1541 = t860 * t912;
t1540 = t861 * t865;
t1538 = t869 * t883;
t1537 = t869 * t884;
t1536 = t869 * t886;
t1535 = t870 * t883;
t1534 = t874 * t891;
t1533 = t876 * t893;
t1532 = t878 * t895;
t1531 = t878 * t896;
t1530 = t878 * t902;
t1529 = t879 * t895;
t1519 = t881 * t886;
t1518 = t881 * t898;
t1517 = t881 * t900;
t1515 = t881 * t902;
t1514 = t881 * t912;
t1509 = t882 * t912;
t1402 = t876 * t1556;
t1257 = t881 * t1402;
t1040 = t1257 * t1576;
t1412 = t874 * t1562;
t1263 = t881 * t1412;
t1046 = t1263 * t1578;
t1500 = t648 * t1040 + t647 * t1046;
t1403 = t876 * t1557;
t1289 = t779 * t1403;
t1038 = t864 * t881 * t1289;
t1413 = t874 * t1563;
t1295 = t778 * t1413;
t1044 = t863 * t881 * t1295;
t1499 = t648 * t1038 + t647 * t1044;
t973 = t1669 * t1038;
t978 = t1667 * t1044;
t1498 = t732 * t978 + t734 * t973;
t975 = t1669 * t1040;
t980 = t1667 * t1046;
t1497 = t733 * t980 + t735 * t975;
t1399 = t1670 * t1541;
t993 = -0.2e1 * t864 * t1399 * t1642;
t1409 = t1668 * t1542;
t994 = -0.2e1 * t863 * t1409 * t1641;
t1496 = t993 * t1653 + t994 * t1654;
t1495 = t874 * t994 + t876 * t993;
t1398 = t1670 * t1533;
t1152 = t1398 * t1658;
t1408 = t1668 * t1534;
t1159 = t1408 * t1659;
t1494 = t860 * t1152 + t859 * t1159;
t1300 = t1559 * t1659;
t728 = t859 * t1300;
t1294 = t1553 * t1658;
t729 = t860 * t1294;
t871 = t891 ^ 2;
t872 = t893 ^ 2;
t1493 = t871 * t728 + t872 * t729;
t1492 = t728 + t729;
t673 = t912 * t1380 * t956;
t1489 = t673 * t1579;
t674 = t912 * t1379 * t954;
t1488 = t674 * t1577;
t1487 = t1665 * t1624;
t1486 = t1380 * t1623;
t1485 = t891 * t1623;
t1484 = t1379 * t1622;
t1483 = t893 * t1622;
t1482 = t1671 * t1621;
t1480 = t689 * t1617;
t1479 = t689 * t1616;
t1478 = t690 * t1615;
t1477 = t690 * t1614;
t1475 = t688 * t1610;
t1474 = t689 * t1607;
t1473 = t690 * t1605;
t1472 = t691 * t1603;
t1467 = t1381 ^ 2 * t1565;
t1466 = t751 * t1570;
t1465 = t1381 * t1665 * t858;
t1464 = t1665 * t1592;
t1463 = t1378 ^ 2 * t1545;
t1462 = t757 * t1564;
t1461 = t758 * t1558;
t1460 = t759 * t1550;
t1459 = t1667 * t1586;
t1458 = t1669 * t1584;
t1457 = t1378 * t1671 * t861;
t1456 = t1671 * t1581;
t770 = t772 ^ 2;
t1455 = t770 * t1565;
t1454 = t771 * t1571;
t1453 = t771 * t1569;
t1452 = t771 * t1566;
t1451 = t772 * t1570;
t1450 = t772 * t1569;
t775 = t781 ^ 2;
t1449 = t775 * t1559;
t776 = t782 ^ 2;
t1448 = t776 * t1553;
t777 = t783 ^ 2;
t1447 = t777 * t1545;
t1446 = t778 * t1562;
t1445 = t779 * t1556;
t1444 = t780 * t1551;
t1443 = t780 * t1549;
t1442 = t780 * t1546;
t1441 = t781 * t1564;
t1440 = t781 * t1562;
t1439 = t782 * t1558;
t1438 = t782 * t1556;
t1437 = t783 * t1550;
t1436 = t783 * t1549;
t1434 = t1665 * t1574;
t1433 = t1666 * t1574;
t1431 = t883 * t1574;
t1430 = t886 * t1574;
t1428 = t1671 * t1573;
t1427 = t1672 * t1573;
t1425 = t895 * t1573;
t1424 = t902 * t1573;
t1423 = t862 * t1570;
t1422 = t1665 * t1538;
t1421 = t1665 * t1537;
t1420 = t1665 * t1536;
t1419 = t1666 * t1538;
t1418 = t1636 * t1565;
t1417 = t1666 * t1535;
t1416 = t859 * t1564;
t1415 = t863 * t1564;
t1414 = t1667 * t1534;
t1411 = t851 * t1559;
t855 = t863 ^ 2;
t1410 = t855 * t1559;
t1407 = t891 * t1559;
t1406 = t860 * t1558;
t1405 = t864 * t1558;
t1404 = t1669 * t1533;
t1401 = t852 * t1553;
t856 = t864 ^ 2;
t1400 = t856 * t1553;
t1397 = t893 * t1553;
t1396 = t865 * t1550;
t1395 = t1671 * t1532;
t1394 = t1671 * t1531;
t1393 = t1671 * t1530;
t1392 = t1672 * t1532;
t1391 = t1635 * t1545;
t1390 = t1672 * t1529;
t1389 = t881 * t1508;
t1388 = t881 * t1507;
t1387 = t881 * t1506;
t1386 = t881 * t1505;
t1385 = t881 * t1504;
t1384 = t881 * t1503;
t1383 = t881 * t1502;
t1382 = t881 * t1501;
t672 = t958 * t1593;
t1363 = t672 * t1422;
t1362 = t673 * t1414;
t1361 = t674 * t1404;
t675 = t952 * t1582;
t1360 = t675 * t1395;
t1359 = t771 * t1487;
t1358 = t688 * t1422;
t1357 = t778 * t1485;
t1356 = t689 * t1414;
t1355 = t779 * t1483;
t1354 = t690 * t1404;
t1353 = t780 * t1482;
t1352 = t691 * t1395;
t1350 = t1091 * t1453;
t1348 = t1088 * t1443;
t773 = t778 ^ 2;
t1347 = t1090 * t773 * t1559;
t1345 = t1090 * t1446;
t774 = t779 ^ 2;
t1344 = t1089 * t774 * t1553;
t1342 = t1089 * t1445;
t1341 = t751 * t1381 * t1565;
t815 = t885 * t882 - t1389;
t1340 = t815 * t1466;
t816 = t1388 + t1513;
t1339 = t816 * t1466;
t1338 = t869 * t1465;
t1337 = t1381 * t1423;
t1336 = t869 * t1464;
t1335 = t1565 * t1592;
t1334 = t757 * t1380 * t1559;
t820 = t897 * t882 - t1387;
t1333 = t820 * t1462;
t821 = t1386 + t1512;
t1332 = t821 * t1462;
t1331 = t758 * t1379 * t1553;
t822 = t899 * t882 - t1385;
t1330 = t822 * t1461;
t823 = t1384 + t1511;
t1329 = t823 * t1461;
t1328 = t759 * t1378 * t1545;
t824 = t882 * t901 - t1383;
t1327 = t824 * t1460;
t825 = t1382 + t1510;
t1326 = t825 * t1460;
t1325 = t1560 * t1641;
t1324 = t1380 * t1416;
t1323 = t1380 * t1415;
t1322 = t874 * t1459;
t1321 = t1559 * t1586;
t1320 = t1554 * t1642;
t1319 = t1379 * t1406;
t1318 = t1379 * t1405;
t1317 = t876 * t1458;
t1316 = t1553 * t1584;
t1315 = t878 * t1457;
t1314 = t1378 * t1396;
t1313 = t878 * t1456;
t1312 = t1545 * t1581;
t1311 = t1565 * t1660;
t1310 = t771 * t1423;
t1309 = t862 * t1453;
t1308 = t771 * t1421;
t1307 = t771 * t1420;
t1306 = t858 * t1452;
t1305 = t771 * t1417;
t1304 = t1665 * t1450;
t1303 = t688 * t1451;
t1302 = t773 * t1408;
t1301 = t774 * t1398;
t1299 = t778 * t1416;
t1298 = t859 * t1446;
t1297 = t778 * t1415;
t1296 = t863 * t1446;
t1293 = t779 * t1406;
t1292 = t860 * t1445;
t1291 = t779 * t1405;
t1290 = t864 * t1445;
t1288 = t1545 * t1657;
t1287 = t780 * t1396;
t1286 = t865 * t1443;
t1285 = t780 * t1394;
t1284 = t780 * t1393;
t1283 = t861 * t1442;
t1282 = t780 * t1390;
t1281 = t1667 * t1440;
t1280 = t689 * t1441;
t1279 = t1669 * t1438;
t1278 = t690 * t1439;
t1277 = t1671 * t1436;
t1276 = t691 * t1437;
t1275 = t1665 * t1432;
t1274 = t1666 * t1430;
t1273 = t869 * t1431;
t1272 = t1671 * t1426;
t1271 = t1672 * t1424;
t1270 = t878 * t1425;
t1269 = t1665 * t1421;
t1268 = t883 * t1420;
t1267 = t1665 * t884 * t1514;
t1266 = t862 * t1418;
t1265 = t1636 * t1419;
t1264 = t1667 * t1413;
t1262 = t891 * t1412;
t1261 = t1514 * t1563;
t1260 = t859 * t863 * t1559;
t1258 = t1669 * t1403;
t1256 = t893 * t1402;
t1255 = t1514 * t1557;
t1254 = t860 * t864 * t1553;
t1252 = t1671 * t1394;
t1251 = t895 * t1393;
t1250 = t1671 * t896 * t1514;
t1249 = t865 * t1391;
t1248 = t1635 * t1392;
t1247 = t773 * t1411;
t1246 = t774 * t1401;
t1245 = t854 * t1418;
t1244 = t773 * t1410;
t1243 = t774 * t1400;
t1242 = t857 * t1391;
t1130 = t783 * t881 * t1393;
t1132 = t782 * t1257;
t1135 = t781 * t1263;
t1172 = t772 * t881 * t1420;
t1241 = t649 * t1130 + t648 * t1132 + t647 * t1135 + t644 * t1172;
t1239 = t771 * t1363;
t1238 = t778 * t1362;
t1237 = t779 * t1361;
t1236 = t780 * t1360;
t1235 = t1381 * t1358;
t1234 = t1380 * t1356;
t1233 = t1379 * t1354;
t1232 = t1378 * t1352;
t1231 = t1665 * t1350;
t1230 = t1671 * t1348;
t1229 = t1667 * t1345;
t1228 = t1669 * t1342;
t1227 = t1665 * t1340;
t1226 = t1665 * t1339;
t1225 = t1381 * t1335;
t1224 = t772 * t1568 * t1593;
t1223 = t815 * t1338;
t1222 = t815 * t1337;
t1221 = t816 * t1338;
t1220 = t816 * t1337;
t1219 = t1381 * t1267;
t1218 = t815 * t1336;
t1217 = t816 * t1336;
t1216 = t1667 * t1333;
t1215 = t1667 * t1332;
t1214 = t1669 * t1330;
t1213 = t1669 * t1329;
t1212 = t1671 * t1327;
t1211 = t1671 * t1326;
t1210 = t1380 * t1321;
t1209 = t1407 * t1641;
t1208 = t820 * t1324;
t1207 = t820 * t1323;
t1206 = t821 * t1324;
t1205 = t821 * t1323;
t1204 = t1380 * t1261;
t1203 = t820 * t1322;
t1202 = t821 * t1322;
t1201 = t1379 * t1316;
t1200 = t1397 * t1642;
t1199 = t822 * t1319;
t1198 = t822 * t1318;
t1197 = t823 * t1319;
t1196 = t823 * t1318;
t1195 = t1379 * t1255;
t1194 = t822 * t1317;
t1193 = t823 * t1317;
t1192 = t1378 * t1312;
t1191 = t783 * t1548 * t1582;
t1190 = t824 * t1315;
t1189 = t824 * t1314;
t1188 = t825 * t1315;
t1187 = t825 * t1314;
t1186 = t1378 * t1250;
t1185 = t824 * t1313;
t1184 = t825 * t1313;
t1183 = t688 * t1351;
t1182 = t1091 * t1311;
t1181 = t1419 * t1660;
t850 = t858 ^ 2;
t1180 = t771 * t850 * t1435;
t1179 = t1665 * t1309;
t1178 = t771 * t1269;
t1177 = t1665 * t1307;
t1176 = t771 * t1268;
t1175 = t858 * t1305;
t1174 = t1418 * t1647;
t1173 = t1091 * t1266;
t1171 = t772 * t1268;
t1170 = t739 * t1304;
t1169 = t858 * t1311;
t1168 = t862 * t1311;
t1167 = t859 * t1347;
t1166 = t863 * t1347;
t1165 = t863 * t1302;
t1164 = t860 * t1344;
t1163 = t864 * t1344;
t1162 = t864 * t1301;
t1161 = t689 * t1346;
t1160 = t1090 * t1300;
t1158 = t1667 * t1298;
t1157 = t1667 * t1296;
t1156 = t778 * t1264;
t1155 = t778 * t1262;
t1154 = t690 * t1343;
t1153 = t1089 * t1294;
t1151 = t1669 * t1292;
t1150 = t1669 * t1290;
t1149 = t779 * t1258;
t1148 = t779 * t1256;
t1147 = t691 * t1349;
t1146 = t1088 * t1288;
t1145 = t1392 * t1657;
t853 = t861 ^ 2;
t1144 = t780 * t853 * t1429;
t1143 = t1671 * t1286;
t1142 = t780 * t1252;
t1141 = t1671 * t1284;
t1140 = t780 * t1251;
t1139 = t861 * t1282;
t1138 = t1391 * t1648;
t1137 = t1088 * t1249;
t1136 = t781 * t1264;
t1134 = t743 * t1281;
t1133 = t782 * t1258;
t1131 = t744 * t1279;
t1129 = t783 * t1251;
t1128 = t745 * t1277;
t1127 = t861 * t1288;
t1126 = t865 * t1288;
t1125 = t1665 * t870 * t1434;
t1124 = t1665 * t1273;
t1123 = t1671 * t879 * t1428;
t1122 = t1671 * t1270;
t1121 = t862 * t1265;
t1120 = t1667 * t1262;
t1118 = t1669 * t1256;
t1116 = t865 * t1248;
t1115 = t1665 * t644 * t1430;
t1114 = t739 * t1274;
t1113 = t688 * t1275;
t1112 = t689 * t1299;
t1111 = t690 * t1293;
t1110 = t691 * t1272;
t1109 = t1671 * t649 * t1424;
t1108 = t745 * t1271;
t1107 = t688 * t1310;
t1106 = t858 * t1266;
t1105 = t773 * t1260;
t1104 = t689 * t1297;
t1103 = t863 * t1300;
t1102 = t774 * t1254;
t1101 = t690 * t1291;
t1100 = t864 * t1294;
t1099 = t691 * t1287;
t1098 = t861 * t1249;
t1097 = t730 * t862 - t731 * t858;
t1096 = t736 * t865 - t737 * t861;
t1093 = 0.2e1 * t1586;
t1092 = 0.2e1 * t1584;
t1083 = t647 * t1155;
t1082 = t648 * t1148;
t1081 = t733 * t1156;
t1080 = t735 * t1149;
t1079 = t1091 * t1176;
t1078 = t1088 * t1140;
t1077 = t1665 * t1223;
t1076 = t1665 * t1222;
t1075 = t1665 * t1221;
t1074 = t1665 * t1220;
t1073 = t1665 * t1218;
t1072 = t1665 * t1217;
t1071 = t1667 * t1208;
t1070 = t1667 * t1207;
t1069 = t1667 * t1206;
t1068 = t1667 * t1205;
t1067 = t1667 * t1203;
t1066 = t1667 * t1202;
t1065 = t1669 * t1199;
t1064 = t1669 * t1198;
t1063 = t1669 * t1197;
t1062 = t1669 * t1196;
t1061 = t1669 * t1194;
t1060 = t1669 * t1193;
t1059 = t1671 * t1190;
t1058 = t1671 * t1189;
t1057 = t1671 * t1188;
t1056 = t1671 * t1187;
t1055 = t1671 * t1185;
t1054 = t1671 * t1184;
t1053 = t739 * t1231;
t1052 = t862 * t1176;
t1051 = t1665 * t1172;
t1050 = t1665 * t1171;
t1049 = t732 * t1229;
t1048 = t743 * t1229;
t1047 = t859 * t1156;
t1045 = t859 * t1155;
t1043 = t734 * t1228;
t1042 = t744 * t1228;
t1041 = t860 * t1149;
t1039 = t860 * t1148;
t1037 = t745 * t1230;
t1036 = t865 * t1140;
t1035 = t1667 * t1135;
t1034 = t781 * t1120;
t1033 = t1669 * t1132;
t1032 = t782 * t1118;
t1031 = t1671 * t1130;
t1030 = t1671 * t1129;
t1029 = t1665 * t1124;
t1028 = t1666 * t886 * t1273;
t1027 = t1671 * t1122;
t1026 = t1672 * t902 * t1270;
t1025 = t1267 * t1538;
t1024 = t1261 * t1534;
t1023 = t1255 * t1533;
t1022 = t1250 * t1532;
t1021 = t870 * t1180;
t1020 = t879 * t1144;
t1019 = t772 * t1125;
t1018 = t732 * t1158;
t1017 = t734 * t1151;
t1016 = t783 * t1123;
t1015 = t731 * t1179;
t1014 = t739 * t1179;
t1013 = t732 * t1157;
t1012 = t733 * t1157;
t1011 = t743 * t1157;
t1010 = t734 * t1150;
t1009 = t735 * t1150;
t1008 = t744 * t1150;
t1007 = t737 * t1143;
t1006 = t745 * t1143;
t1005 = t736 * t1031 + t734 * t1033 + t732 * t1035 + t730 * t1051 + t743 * t980 + t744 * t975;
t1004 = t1678 * t1397 * t1541 + t1677 * t1407 * t1542 + t1191 * t1529 + t1224 * t1535;
t1003 = t1678 * t876 * t1399 + t1677 * t874 * t1409 + t878 * t1191 + t869 * t1224;
t1002 = t730 * t1600 + t644 * t858;
t1001 = t731 * t1600 - t644 * t862;
t1000 = t736 * t1599 + t649 * t861;
t999 = t737 * t1599 - t649 * t865;
t992 = t733 * t778 * t1120;
t991 = t735 * t779 * t1118;
t990 = t1665 * t1079;
t989 = t1671 * t1078;
t988 = t1381 * t1025;
t987 = t1380 * t1024;
t986 = t1379 * t1023;
t985 = t1378 * t1022;
t984 = t869 * t1053;
t983 = t1665 * t1052;
t982 = t874 * t1049;
t981 = t874 * t1048;
t979 = t1667 * t1045;
t977 = t876 * t1043;
t976 = t876 * t1042;
t974 = t1669 * t1039;
t972 = t878 * t1037;
t971 = t1671 * t1036;
t970 = t1125 * t1580;
t969 = t1123 * t1575;
t968 = t874 * t1013;
t967 = t874 * t1011;
t966 = t876 * t1010;
t965 = t876 * t1008;
t957 = (-t1381 * t772 - t1596) * t1567;
t955 = t1677 * t1561;
t953 = t1678 * t1555;
t951 = (-t1378 * t783 - t1589) * t1547;
t950 = t1666 * (t1091 * t1596 + t772 * t1592);
t949 = t1668 * (t1090 * t1591 + t781 * t1586);
t948 = t1670 * (t1089 * t1590 + t782 * t1584);
t947 = t1672 * (t1088 * t1589 + t783 * t1581);
t946 = t850 * t1639;
t945 = t853 * t1643;
t944 = t1568 * t1645;
t943 = t1567 * t1645;
t942 = t1668 * t1093 * t1578;
t941 = t778 * t1093 * t1561;
t940 = t1670 * t1092 * t1576;
t939 = t779 * t1092 * t1555;
t938 = t1548 * t1646;
t937 = t1547 * t1646;
t936 = t644 * t1310 - t688 * t1618;
t935 = t649 * t1287 - t691 * t1611;
t934 = (t1381 * t1509 + t771 * t1519) * t1570;
t933 = (t1380 * t1509 + t778 * t1518) * t1564;
t932 = (t1379 * t1509 + t779 * t1517) * t1558;
t931 = (t1378 * t1509 + t780 * t1515) * t1550;
t930 = t1544 * t1639;
t929 = t1540 * t1643;
t928 = -t731 * t1433 + t1454 * t1619;
t927 = -t737 * t1427 + t1444 * t1612;
t926 = -t1102 - t1105;
t925 = -t872 * t1102 - t871 * t1105;
t924 = -t860 * t1162 - t859 * t1165;
t923 = -t966 - t968;
t922 = -t1041 * t735 - t1047 * t733;
t921 = -t1100 - t1103 - t1126 - t1168;
t920 = (-t743 * t1578 - t732 * t781) * t1264 + (-t744 * t1576 - t734 * t782) * t1258;
t868 = t883 ^ 2;
t873 = t895 ^ 2;
t919 = -t872 * t1100 - t871 * t1103 - t873 * t1126 - t868 * t1168;
t918 = -0.2e1 * t865 * t1145 - 0.2e1 * t864 * t1152 - 0.2e1 * t863 * t1159 - 0.2e1 * t862 * t1181;
t917 = t737 * t1031 + t735 * t1033 + t733 * t1035 + t731 * t1051 + (-t1006 * t878 - t1014 * t869 - t965 - t967) * t881;
t916 = (t869 * t957 - t874 * t955 - t876 * t953 + t878 * t951) * t912;
t915 = t744 * t973 + t743 * t978 + (-t733 * t1136 - t735 * t1133 + (t745 * t1575 - t737 * t783) * t1252 + (t739 * t1580 - t731 * t772) * t1269) * t881;
t914 = (t951 * t1529 + t957 * t1535 - t953 * t1653 - t955 * t1654) * t912;
t913 = 0.1e1 / pkin(2) ^ 2;
t842 = t866 ^ 2 + t867 ^ 2;
t755 = t1379 ^ 2;
t754 = t1380 ^ 2;
t707 = (t759 * t1509 + t783 * t1515) * t1550;
t706 = (t758 * t1509 + t782 * t1517) * t1558;
t705 = (t757 * t1509 + t781 * t1518) * t1564;
t700 = (t751 * t1509 + t772 * t1519) * t1570;
t699 = t865 * t931;
t698 = t861 * t931;
t697 = t864 * t932;
t696 = t860 * t932;
t695 = t863 * t933;
t694 = t859 * t933;
t693 = t862 * t934;
t692 = t858 * t934;
t671 = -t759 * t1250 - t707 * t895;
t670 = -t758 * t1255 - t706 * t893;
t669 = -t757 * t1261 - t705 * t891;
t668 = -t1022 * t759 + t707 * t901;
t667 = -t1023 * t758 + t706 * t899;
t666 = -t1024 * t757 + t705 * t897;
t665 = -t751 * t1267 - t700 * t883;
t664 = -t1025 * t751 + t700 * t885;
t663 = t865 * t1186 + t699 * t895;
t662 = -t861 * t1186 - t698 * t895;
t661 = t864 * t1195 + t697 * t893;
t660 = -t860 * t1195 - t696 * t893;
t659 = t863 * t1204 + t695 * t891;
t658 = -t859 * t1204 - t694 * t891;
t657 = -t699 * t901 + t865 * t985;
t656 = t698 * t901 - t861 * t985;
t655 = -t697 * t899 + t864 * t986;
t654 = t696 * t899 - t860 * t986;
t653 = -t695 * t897 + t863 * t987;
t652 = t694 * t897 - t859 * t987;
t651 = t862 * t1219 + t693 * t883;
t650 = -t858 * t1219 - t692 * t883;
t646 = -t693 * t885 + t862 * t988;
t645 = t692 * t885 - t858 * t988;
t635 = (-t1254 * t755 - t1260 * t754 - t1463 * t1540 - t1467 * t1544) * t913;
t634 = t1515 * t691 + t882 * t675;
t633 = t1517 * t690 + t882 * t674;
t632 = t1518 * t689 + t882 * t673;
t631 = t1519 * t688 + t882 * t672;
t630 = (-t1328 * t865 - t1331 * t864 - t1334 * t863 - t1341 * t862) * t913;
t629 = (t1328 * t861 + t1331 * t860 + t1334 * t859 + t1341 * t858) * t913;
t628 = -t1382 * t675 - t634 * t895;
t627 = -t1383 * t675 + t634 * t901;
t626 = -t1384 * t674 - t633 * t893;
t625 = -t1385 * t674 + t633 * t899;
t624 = -t1386 * t673 - t632 * t891;
t623 = -t1387 * t673 + t632 * t897;
t622 = -t1388 * t672 - t631 * t883;
t621 = -t1389 * t672 + t631 * t885;
t620 = t1602 * t737 + t1604 * t735 + t733 * t1606 + t731 * t1609;
t619 = t1602 * t736 + t1604 * t734 + t732 * t1606 + t730 * t1609;
t618 = t1666 * t730 * t731 + t1668 * t732 * t733 + t1670 * t734 * t735 + t1672 * t736 * t737;
t617 = t1603 * t649 + t1605 * t648 + t647 * t1607 + t644 * t1610;
t616 = t649 * t1611 + t648 * t1614 + t647 * t1616 + t644 * t1618;
t615 = t649 * t1612 + t648 * t1615 + t647 * t1617 + t644 * t1619;
t1 = [t1666 * t731 ^ 2 + t1668 * t733 ^ 2 + t1670 * t735 ^ 2 + t1672 * t737 ^ 2, t1242 + t1243 + t1244 + t1245, (-t1007 * t878 - t1009 * t876 - t1012 * t874 - t1015 * t869) * t1674, (t1142 * t737 * t865 + t1178 * t731 * t862 + t1080 * t864 + t1081 * t863) * t1674, t1242 * t873 + t1243 * t872 + t1244 * t871 + t1245 * t868, 0.2e1 * t1248 * t857 + 0.2e1 * t1265 * t854 + 0.2e1 * t1301 * t856 + 0.2e1 * t1302 * t855, (t1200 * t856 + t1209 * t855 + t1282 * t1644 + t1305 * t1640) * t1673, (t1320 * t856 + t1325 * t855 + t1442 * t1644 + t1452 * t1640) * t1673, (t1400 * t755 + t1410 * t754 + t1463 * t857 + t1467 * t854) * t913, t646 * t1618 + t653 * t1616 + t655 * t1614 + t657 * t1611 + (-t1058 * t737 - t1064 * t735 - t1070 * t733 - t1076 * t731) * t912 + (-t1007 - t1009 - t1012 - t1015) * t881, t651 * t1618 + t659 * t1616 + t661 * t1614 + t663 * t1611 + (t1056 * t737 + t1062 * t735 + t1068 * t733 + t1074 * t731) * t912 + (t731 * t983 + t737 * t971 + t863 * t992 + t864 * t991) * t881, 0, 0, 0, t842; t618, -t1098 + t926 - t1106, (-t1096 * t1141 - t1097 * t1177 + t923) * t881 + t1497, (t1096 * t1142 + t1097 * t1178 + t922) * t881 + t1498, -t1098 * t873 - t1106 * t868 + t925, -0.2e1 * t1116 * t861 - 0.2e1 * t1121 * t858 + 0.2e1 * t924, (-t1139 * t1583 - t1175 * t1594) * t1673 + t1496, (-t1283 * t1583 - t1306 * t1594) * t1673 + t1495, t635, t645 * t1618 + t652 * t1616 + t654 * t1614 + t656 * t1611 + (-t1058 * t736 - t1064 * t734 - t1070 * t732 - t1076 * t730) * t912 + (-t1143 * t736 - t1179 * t730 - t1010 - t1013) * t881, t650 * t1618 + t658 * t1616 + t660 * t1614 + t662 * t1611 + (t1056 * t736 + t1062 * t734 + t1068 * t732 + t1074 * t730) * t912 + (t730 * t983 + t736 * t971 + t891 * t968 + t893 * t966) * t881, 0, 0, 0, 0; t620, t921, t917, t915, t919, t918, t914, t916, t630, t664 * t1618 + t666 * t1616 + t667 * t1614 + t668 * t1611 + (-t1058 * t745 - t1064 * t744 - t1070 * t743 - t1076 * t739) * t912 + (-t1006 - t1008 - t1011 - t1014) * t881, t665 * t1618 + t669 * t1616 + t670 * t1614 + t671 * t1611 + (t1056 * t745 + t1062 * t744 + t1068 * t743 + t1074 * t739) * t912 + (t739 * t983 + t745 * t971 + t891 * t967 + t893 * t965) * t881, 0, 0, 0, 0; t616, -t1099 - t1101 - t1104 - t1107, (-t935 * t902 + (-t1291 * t648 + t1477) * t900 + (-t1297 * t647 + t1479) * t898 - t936 * t886) * t881, (-t1477 * t894 - t1479 * t892 + t884 * t936 + t896 * t935) * t881 + t1499, -t1099 * t873 - t1101 * t872 - t1104 * t871 - t1107 * t868, -0.2e1 * t1353 * t865 - 0.2e1 * t1355 * t864 - 0.2e1 * t1357 * t863 - 0.2e1 * t1359 * t862, -t862 * t1239 - t863 * t1238 - t864 * t1237 - t865 * t1236 + (-t1232 * t865 - t1233 * t864 - t1234 * t863 - t1235 * t862) * t912, -t672 * t1454 - t863 * t1489 - t864 * t1488 - t675 * t1444 + (-t1378 * t1551 * t691 - t1381 * t1571 * t688 - t1484 * t864 - t1486 * t863) * t912, (-t1314 * t675 - t1318 * t674 - t1323 * t673 - t1337 * t672) * t912, t621 * t1618 + t623 * t1616 + t625 * t1614 + t627 * t1611 + (-t1189 * t649 - t1198 * t648 - t1207 * t647 - t1222 * t644) * t912 + (-t1286 * t649 - t1290 * t648 - t1296 * t647 - t1309 * t644) * t881, t622 * t1618 + t624 * t1616 + t626 * t1614 + t628 * t1611 + (t1187 * t649 + t1196 * t648 + t1205 * t647 + t1220 * t644) * t912 + (t1036 * t649 + t1052 * t644 + t1082 * t864 + t1083 * t863) * t881, 0, -t866, -t867, 0; t618, t926 - t969 - t970, (-t1530 * t927 - t1536 * t928 + t923) * t881 + t1497, (t1531 * t927 + t1537 * t928 + t922) * t881 + t1498, -t868 * t970 - t873 * t969 + t925, -0.2e1 * t1027 * t1575 - 0.2e1 * t1029 * t1580 + 0.2e1 * t924, (-t1529 * t929 - t1535 * t930) * t912 + t1496, (-t869 * t930 - t878 * t929) * t912 + t1495, t635, t646 * t1619 + t653 * t1617 + t655 * t1615 + t657 * t1612 + (t1059 * t737 + t1065 * t735 + t1071 * t733 + t1077 * t731) * t912 + (t1151 * t735 + t1158 * t733 + t1271 * t737 + t1274 * t731) * t881, t651 * t1619 + t659 * t1617 + t661 * t1615 + t663 * t1612 + (-t1057 * t737 - t1063 * t735 - t1069 * t733 - t1075 * t731) * t912 + (-t1026 * t737 - t1028 * t731 - t733 * t979 - t735 * t974) * t881, 0, 0, 0, 0; t1666 * t730 ^ 2 + t1668 * t732 ^ 2 + t1670 * t734 ^ 2 + t1672 * t736 ^ 2, t1020 + t1021 + t1246 + t1247, (0.2e1 * t1017 * t876 + 0.2e1 * t1018 * t874 + t886 * t1637 + t902 * t1638) * t881, (-0.2e1 * t1041 * t734 - 0.2e1 * t1047 * t732 - t884 * t1637 - t896 * t1638) * t881, t1020 * t873 + t1021 * t868 + t1246 * t872 + t1247 * t871, 0.2e1 * t1144 * t1532 + 0.2e1 * t1180 * t1538 + 0.2e1 * t1301 * t852 + 0.2e1 * t1302 * t851, (t1200 * t1675 + t1209 * t1676 + t1529 * t945 + t1535 * t946) * t912, (t1320 * t1675 + t1325 * t1676 + t869 * t946 + t878 * t945) * t912, (t1401 * t755 + t1411 * t754 + t1463 * t853 + t1467 * t850) * t913, t645 * t1619 + t652 * t1617 + t654 * t1615 + t656 * t1612 + (t1059 * t736 + t1065 * t734 + t1071 * t732 + t1077 * t730) * t912 + (t1271 * t736 + t1274 * t730 + t1017 + t1018) * t881, t650 * t1619 + t658 * t1617 + t660 * t1615 + t662 * t1612 + (-t1057 * t736 - t1063 * t734 - t1069 * t732 - t1075 * t730) * t912 + (-t1026 * t736 - t1028 * t730 - t732 * t979 - t734 * t974) * t881, 0, 0, 0, t842; t619, t1016 + t1019 + t1492, (t1108 * t878 + t1114 * t869) * t881 + t1005, ((-t1427 * t745 - t1552 * t1613) * t1531 + (-t1433 * t739 - t1572 * t1620) * t1537 + t920) * t881, t1016 * t873 + t1019 * t868 + t1493, 0.2e1 * t1027 * t783 + 0.2e1 * t1029 * t772 + 0.2e1 * t1494, (t1123 * t759 * t895 + t1125 * t751 * t883) * t912 + t1004, (t1272 * t1588 + t1275 * t1595) * t912 + t1003, t629, t664 * t1619 + t666 * t1617 + t667 * t1615 + t668 * t1612 + (t1059 * t745 + t1065 * t744 + t1071 * t743 + t1077 * t739) * t912 + (t1151 * t744 + t1158 * t743 + t1108 + t1114) * t881, t665 * t1619 + t669 * t1617 + t670 * t1615 + t671 * t1612 + (-t1057 * t745 - t1063 * t744 - t1069 * t743 - t1075 * t739) * t912 + (-t1026 * t745 - t1028 * t739 - t743 * t979 - t744 * t974) * t881, 0, 0, 0, 0; t615, t1110 + t1111 + t1112 + t1113, (t1478 * t900 + t1480 * t898 + t902 * t1655 + t886 * t1656) * t881 + t1500, ((-t1293 * t648 - t1478) * t894 + (-t1299 * t647 - t1480) * t892 - t896 * t1655 - t884 * t1656) * t881, t1110 * t873 + t1111 * t872 + t1112 * t871 + t1113 * t868, 0.2e1 * t1425 * t1671 * t691 + 0.2e1 * t1431 * t1665 * t688 + 0.2e1 * t1355 * t860 + 0.2e1 * t1357 * t859, t672 * t1124 + t859 * t1238 + t860 * t1237 + t675 * t1122 + (t1232 * t861 + t1233 * t860 + t1234 * t859 + t1235 * t858) * t912, t672 * t1434 + t859 * t1489 + t860 * t1488 + t675 * t1428 + (t1457 * t691 + t1465 * t688 + t1484 * t860 + t1486 * t859) * t912, (t1315 * t675 + t1319 * t674 + t1324 * t673 + t1338 * t672) * t912, t621 * t1619 + t623 * t1617 + t625 * t1615 + t627 * t1612 + (t1190 * t649 + t1199 * t648 + t1208 * t647 + t1223 * t644) * t912 + (t1292 * t648 + t1298 * t647 + t1109 + t1115) * t881, t622 * t1619 + t624 * t1617 + t626 * t1615 + t628 * t1612 + (-t1188 * t649 - t1197 * t648 - t1206 * t647 - t1221 * t644) * t912 + (-t1039 * t648 - t1045 * t647 - t1109 * t1532 - t1115 * t1538) * t881, 0, t867, -t866, 0; t620, t921, t917, t915, t919, t918, t914, t916, t630, t646 * t1610 + t653 * t1607 + t655 * t1605 + t657 * t1603 + (t1212 * t737 + t1214 * t735 + t1216 * t733 + t1227 * t731) * t912 + (t1277 * t737 + t1279 * t735 + t1281 * t733 + t1304 * t731) * t881, t651 * t1610 + t659 * t1607 + t661 * t1605 + t663 * t1603 + (-t1211 * t737 - t1213 * t735 - t1215 * t733 - t1226 * t731) * t912 + (-t1030 * t737 - t1032 * t735 - t1034 * t733 - t1050 * t731) * t881, 0, 0, 0, 0; t619, t1127 + t1169 + t1492, (t1141 * t1601 + t1177 * t1608) * t881 + t1005, ((-t1601 * t780 - t1613) * t1252 + (-t1608 * t771 - t1620) * t1269 + t920) * t881, t1127 * t873 + t1169 * t868 + t1493, 0.2e1 * t1145 * t861 + 0.2e1 * t1181 * t858 + 0.2e1 * t1494, (t1139 * t759 + t1175 * t751) * t912 + t1004, (t1283 * t759 + t1306 * t751) * t912 + t1003, t629, t645 * t1610 + t652 * t1607 + t654 * t1605 + t656 * t1603 + (t1212 * t736 + t1214 * t734 + t1216 * t732 + t1227 * t730) * t912 + (t1277 * t736 + t1279 * t734 + t1281 * t732 + t1304 * t730) * t881, t650 * t1610 + t658 * t1607 + t660 * t1605 + t662 * t1603 + (-t1211 * t736 - t1213 * t734 - t1215 * t732 - t1226 * t730) * t912 + (-t1030 * t736 - t1032 * t734 - t1034 * t732 - t1050 * t730) * t881, 0, 0, 0, 0; t1666 * t739 ^ 2 + t1668 * t743 ^ 2 + t1670 * t744 ^ 2 + t1672 * t745 ^ 2, t1447 + t1448 + t1449 + t1455, (t1128 * t878 + t1131 * t876 + t1134 * t874 + t1170 * t869) * t1674, (-t1252 * t745 * t783 - t1269 * t739 * t772 - t1133 * t744 - t1136 * t743) * t1674, t1447 * t873 + t1448 * t872 + t1449 * t871 + t1455 * t868, 0.2e1 * t1392 * t777 + 0.2e1 * t1398 * t776 + 0.2e1 * t1408 * t775 + 0.2e1 * t1419 * t770, (t1390 * t1661 + t1397 * t1662 + t1407 * t1663 + t1417 * t1664) * t1673, (t1546 * t1661 + t1554 * t1662 + t1560 * t1663 + t1566 * t1664) * t1673, (t1545 * t759 ^ 2 + t1553 * t758 ^ 2 + t1559 * t757 ^ 2 + t1565 * t751 ^ 2) * t913, t664 * t1610 + t666 * t1607 + t667 * t1605 + t668 * t1603 + (t1212 * t745 + t1214 * t744 + t1216 * t743 + t1227 * t739) * t912 + (t1128 + t1131 + t1134 + t1170) * t881, t665 * t1610 + t669 * t1607 + t670 * t1605 + t671 * t1603 + (-t1211 * t745 - t1213 * t744 - t1215 * t743 - t1226 * t739) * t912 + (-t1030 * t745 - t1032 * t744 - t1034 * t743 - t1050 * t739) * t881, 0, 0, 0, 1; t617, t1276 + t1278 + t1280 + t1303, (t1472 * t902 + t1473 * t900 + t1474 * t898 + t1475 * t886) * t881 + t1241, ((-t1437 * t649 - t1472) * t896 + (-t1439 * t648 - t1473) * t894 + (-t1441 * t647 - t1474) * t892 + (-t1451 * t644 - t1475) * t884) * t881, t1276 * t873 + t1278 * t872 + t1280 * t871 + t1303 * t868, 0.2e1 * t1482 * t783 + 0.2e1 * t1483 * t782 + 0.2e1 * t1485 * t781 + 0.2e1 * t1487 * t772, t772 * t1363 + t781 * t1362 + t782 * t1361 + t783 * t1360 + (t1352 * t759 + t1354 * t758 + t1356 * t757 + t1358 * t751) * t912, t772 * t1665 * t672 + t781 * t1667 * t673 + t782 * t1669 * t674 + t783 * t1671 * t675 + (t1588 * t691 + t1595 * t688 + t1622 * t758 + t1623 * t757) * t912, (t1460 * t675 + t1461 * t674 + t1462 * t673 + t1466 * t672) * t912, t621 * t1610 + t623 * t1607 + t625 * t1605 + t627 * t1603 + (t1327 * t649 + t1330 * t648 + t1333 * t647 + t1340 * t644) * t912 + (t1436 * t649 + t1438 * t648 + t1440 * t647 + t1450 * t644) * t881, t622 * t1610 + t624 * t1607 + t626 * t1605 + t628 * t1603 + (-t1326 * t649 - t1329 * t648 - t1332 * t647 - t1339 * t644) * t912 + (-t1129 * t649 - t1171 * t644 - t1256 * t1625 - t1262 * t1626) * t881, 0, 0, 0, 0; t616, -t1137 - t1163 - t1166 - t1173, (t999 * t1284 + (t1597 * t735 - t648 * t864) * t779 * t1402 + (t1598 * t733 - t647 * t863) * t778 * t1412 + t1001 * t1307) * t881, (-t1001 * t1308 - t1080 * t1089 - t1081 * t1090 - t1285 * t999) * t881 + t1499, -t1137 * t873 - t1163 * t872 - t1166 * t871 - t1173 * t868, -0.2e1 * t1088 * t1116 - 0.2e1 * t1089 * t1162 - 0.2e1 * t1090 * t1165 - 0.2e1 * t1091 * t1121, (-t1529 * t937 - t1535 * t943 - t1653 * t939 - t941 * t1654) * t912, (-t869 * t943 - t874 * t941 - t876 * t939 - t878 * t937) * t912, (-t1192 * t865 - t1201 * t864 - t1210 * t863 - t1225 * t862) * t913, t644 * t646 + t647 * t653 + t648 * t655 + t649 * t657 + (t1055 * t737 + t1061 * t735 + t1067 * t733 + t1073 * t731) * t912 + (t1228 * t735 + t1229 * t733 + t1230 * t737 + t1231 * t731) * t881, t644 * t651 + t647 * t659 + t648 * t661 + t649 * t663 + (-t1054 * t737 - t1060 * t735 - t1066 * t733 - t1072 * t731) * t912 + (-t1089 * t991 - t1090 * t992 - t731 * t990 - t737 * t989) * t881, 0, -t866, -t867, 0; t615, t1138 + t1164 + t1167 + t1174, (t1000 * t1284 + t1002 * t1307 + t977 + t982) * t881 + t1500, (-t1000 * t1285 + (-t1597 * t734 - t648 * t860) * t1289 + (-t1598 * t732 - t647 * t859) * t1295 - t1002 * t1308) * t881, t1138 * t873 + t1164 * t872 + t1167 * t871 + t1174 * t868, 0.2e1 * t1089 * t1301 * t860 + 0.2e1 * t1090 * t1302 * t859 + 0.2e1 * t1248 * t1648 + 0.2e1 * t1265 * t1647, (t1529 * t938 + t1535 * t944 + t1653 * t940 + t942 * t1654) * t912, (t869 * t944 + t874 * t942 + t876 * t940 + t878 * t938) * t912, (t1192 * t861 + t1201 * t860 + t1210 * t859 + t1225 * t858) * t913, t644 * t645 + t647 * t652 + t648 * t654 + t649 * t656 + (t1055 * t736 + t1061 * t734 + t1067 * t732 + t1073 * t730) * t912 + (t1230 * t736 + t1231 * t730 + t1043 + t1049) * t881, t644 * t650 + t647 * t658 + t648 * t660 + t649 * t662 + (-t1054 * t736 - t1060 * t734 - t1066 * t732 - t1072 * t730) * t912 + (-t730 * t990 - t736 * t989 - t891 * t982 - t893 * t977) * t881, 0, t867, -t866, 0; t617, t1146 + t1153 + t1160 + t1182, (t972 + t976 + t981 + t984) * t881 + t1241, ((-t745 * t1470 - t649 * t783) * t1394 + (-t1597 * t744 * t779 - t1625) * t1403 + (-t1598 * t743 * t778 - t1626) * t1413 + (-t739 * t1471 - t644 * t772) * t1421) * t881, t1146 * t873 + t1153 * t872 + t1160 * t871 + t1182 * t868, 0.2e1 * t1088 * t1145 + 0.2e1 * t1089 * t1152 + 0.2e1 * t1090 * t1159 + 0.2e1 * t1091 * t1181, (t1529 * t947 + t1535 * t950 + t1653 * t948 + t949 * t1654) * t912, (t869 * t950 + t874 * t949 + t876 * t948 + t878 * t947) * t912, (t1312 * t759 + t1316 * t758 + t1321 * t757 + t1335 * t751) * t913, t644 * t664 + t647 * t666 + t648 * t667 + t649 * t668 + (t1055 * t745 + t1061 * t744 + t1067 * t743 + t1073 * t739) * t912 + (t1037 + t1042 + t1048 + t1053) * t881, t644 * t665 + t647 * t669 + t648 * t670 + t649 * t671 + (-t1054 * t745 - t1060 * t744 - t1066 * t743 - t1072 * t739) * t912 + (-t883 * t984 - t891 * t981 - t893 * t976 - t895 * t972) * t881, 0, 0, 0, 0; t644 ^ 2 + t647 ^ 2 + t648 ^ 2 + t649 ^ 2, t1147 + t1154 + t1161 + t1183, (t886 * t1649 + t898 * t1650 + t900 * t1651 + t902 * t1652) * t881, (-t884 * t1649 - t892 * t1650 - t894 * t1651 - t896 * t1652) * t881, t1147 * t873 + t1154 * t872 + t1161 * t871 + t1183 * t868, 0.2e1 * t1088 * t1353 + 0.2e1 * t1089 * t1355 + 0.2e1 * t1090 * t1357 + 0.2e1 * t1091 * t1359, t1091 * t1239 + t1090 * t1238 + t1089 * t1237 + t1088 * t1236 + (t1317 * t690 * t893 + t1322 * t689 * t891 + t1313 * t1621 + t1336 * t1624) * t912, t672 * t1471 + t673 * t1469 + t674 * t1468 + t675 * t1470 + (t1456 * t691 + t1458 * t690 + t1459 * t689 + t1464 * t688) * t912, (t1313 * t675 + t1317 * t674 + t1322 * t673 + t1336 * t672) * t912, t644 * t621 + t647 * t623 + t648 * t625 + t649 * t627 + (t1185 * t649 + t1194 * t648 + t1203 * t647 + t1218 * t644) * t912 + (t1342 * t648 + t1345 * t647 + t1348 * t649 + t1350 * t644) * t881, t644 * t622 + t647 * t624 + t648 * t626 + t649 * t628 + (-t1184 * t649 - t1193 * t648 - t1202 * t647 - t1217 * t644) * t912 + (-t1078 * t649 - t1079 * t644 - t1082 * t1089 - t1083 * t1090) * t881, 1, 0, 0, 0;];
tau_reg  = t1;
