% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P4PRRRR8V2G2A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d2,d3,d4,theta1]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [4*4x15]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 11:22
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P4PRRRR8V2G2A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4PRRRR8V2G2A0_inertia_para_pf_regmin: xP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4PRRRR8V2G2A0_inertia_para_pf_regmin: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P4PRRRR8V2G2A0_inertia_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4PRRRR8V2G2A0_inertia_para_pf_regmin: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4PRRRR8V2G2A0_inertia_para_pf_regmin: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 11:17:58
% EndTime: 2020-08-07 11:19:08
% DurationCPUTime: 78.81s
% Computational Cost: add. (44784->1128), mult. (103888->2427), div. (4096->14), fcn. (103852->30), ass. (0->857)
t1058 = sin(qJ(2,4));
t1060 = cos(qJ(2,4));
t1077 = pkin(7) + pkin(6);
t1015 = pkin(2) * t1060 + t1058 * t1077;
t1053 = sin(pkin(8));
t1055 = cos(pkin(8));
t1056 = cos(pkin(4));
t1509 = t1056 * t1060;
t1516 = t1055 * t1056;
t1059 = cos(qJ(3,4));
t1649 = pkin(3) * t1059;
t1678 = pkin(2) * t1058 - t1060 * t1077;
t938 = (t1053 * t1058 - t1055 * t1509) * t1649 - t1015 * t1516 + t1678 * t1053;
t1535 = t1053 * t1056;
t939 = (t1053 * t1509 + t1055 * t1058) * t1649 + t1015 * t1535 + t1678 * t1055;
t1057 = sin(qJ(3,4));
t1054 = sin(pkin(4));
t1531 = t1054 * t1059;
t1511 = t1056 * t1058;
t996 = t1053 * t1511 - t1055 * t1060;
t974 = t1053 * t1531 + t1057 * t996;
t1515 = t1055 * t1059;
t997 = t1053 * t1060 + t1055 * t1511;
t976 = -t1054 * t1515 - t1057 * t997;
t1722 = t938 * t974 + t939 * t976;
t1061 = legFrame(4,2);
t1036 = cos(t1061);
t1703 = t1036 * t974;
t1032 = sin(t1061);
t1704 = t1032 * t974;
t1532 = t1054 * t1058;
t1534 = t1054 * t1055;
t1653 = pkin(3) * t1059 ^ 2;
t1657 = pkin(2) * t1057;
t1533 = t1054 * t1057;
t1169 = pkin(3) * t1533 - t1056 * t1678;
t958 = -t1015 * t1053 + t1055 * t1169;
t1496 = t1057 * t1056;
t992 = pkin(3) * t1496 + t1054 * t1678;
t902 = (t1032 * t1532 + t1036 * t997) * t1653 + (t1032 * t992 - t1036 * t958) * t1059 + (t1056 * t1032 - t1036 * t1534) * t1657;
t903 = -(t1032 * t997 - t1036 * t1532) * t1653 + (t1032 * t958 + t1036 * t992) * t1059 + (t1032 * t1534 + t1036 * t1056) * t1657;
t1137 = t1703 * t903 - t1704 * t902;
t1064 = legFrame(1,2);
t1035 = sin(t1064);
t1076 = cos(qJ(2,1));
t1075 = cos(qJ(3,1));
t1070 = sin(qJ(2,1));
t1650 = pkin(3) * t1075 ^ 2;
t1484 = t1070 * t1650;
t1069 = sin(qJ(3,1));
t1505 = t1056 * t1069;
t1675 = pkin(2) * t1070 - t1076 * t1077;
t995 = pkin(3) * t1505 + t1054 * t1675;
t961 = pkin(2) * t1505 + t1054 * t1484 + t1075 * t995;
t957 = 0.1e1 / t961 ^ 2;
t1536 = t1076 * t957;
t1504 = t1056 * t1070;
t1000 = t1053 * t1504 - t1055 * t1076;
t1519 = t1054 * t1075;
t987 = t1000 * t1069 + t1053 * t1519;
t1386 = t987 * t1536;
t1291 = t1035 * t1386;
t1212 = t1054 * t1291;
t1063 = legFrame(2,2);
t1034 = sin(t1063);
t1074 = cos(qJ(2,2));
t1073 = cos(qJ(3,2));
t1068 = sin(qJ(2,2));
t1651 = pkin(3) * t1073 ^ 2;
t1485 = t1068 * t1651;
t1067 = sin(qJ(3,2));
t1507 = t1056 * t1067;
t1676 = pkin(2) * t1068 - t1074 * t1077;
t994 = pkin(3) * t1507 + t1054 * t1676;
t960 = pkin(2) * t1507 + t1054 * t1485 + t1073 * t994;
t955 = 0.1e1 / t960 ^ 2;
t1539 = t1074 * t955;
t1521 = t1054 * t1073;
t1506 = t1056 * t1068;
t999 = t1053 * t1506 - t1055 * t1074;
t985 = t1053 * t1521 + t1067 * t999;
t1389 = t985 * t1539;
t1294 = t1034 * t1389;
t1213 = t1054 * t1294;
t1062 = legFrame(3,2);
t1033 = sin(t1062);
t1072 = cos(qJ(2,3));
t1071 = cos(qJ(3,3));
t1066 = sin(qJ(2,3));
t1652 = pkin(3) * t1071 ^ 2;
t1486 = t1066 * t1652;
t1065 = sin(qJ(3,3));
t1494 = t1065 * t1056;
t1677 = pkin(2) * t1066 - t1072 * t1077;
t993 = pkin(3) * t1494 + t1054 * t1677;
t959 = pkin(2) * t1494 + t1054 * t1486 + t1071 * t993;
t953 = 0.1e1 / t959 ^ 2;
t1542 = t1072 * t953;
t1523 = t1054 * t1071;
t1508 = t1056 * t1066;
t998 = t1053 * t1508 - t1055 * t1072;
t983 = t1053 * t1523 + t1065 * t998;
t1392 = t983 * t1542;
t1297 = t1033 * t1392;
t1214 = t1054 * t1297;
t1039 = cos(t1064);
t1283 = t1039 * t1386;
t1038 = cos(t1063);
t1285 = t1038 * t1389;
t1037 = cos(t1062);
t1287 = t1037 * t1392;
t1487 = t1058 * t1653;
t951 = pkin(2) * t1496 + t1054 * t1487 + t1059 * t992;
t950 = 0.1e1 / t951 ^ 2;
t1554 = t1060 * t950;
t1001 = t1053 * t1072 + t1055 * t1508;
t1528 = t1054 * t1066;
t1656 = pkin(2) * t1065;
t1019 = pkin(2) * t1072 + t1066 * t1077;
t1529 = t1054 * t1065;
t1168 = pkin(3) * t1529 - t1056 * t1677;
t962 = -t1019 * t1053 + t1055 * t1168;
t904 = (t1001 * t1037 + t1033 * t1528) * t1652 + (t1033 * t993 - t1037 * t962) * t1071 + (t1033 * t1056 - t1037 * t1534) * t1656;
t1002 = t1053 * t1074 + t1055 * t1506;
t1526 = t1054 * t1068;
t1655 = pkin(2) * t1067;
t1020 = pkin(2) * t1074 + t1068 * t1077;
t1527 = t1054 * t1067;
t1167 = pkin(3) * t1527 - t1056 * t1676;
t963 = -t1020 * t1053 + t1055 * t1167;
t905 = (t1002 * t1038 + t1034 * t1526) * t1651 + (t1034 * t994 - t1038 * t963) * t1073 + (t1034 * t1056 - t1038 * t1534) * t1655;
t1003 = t1053 * t1076 + t1055 * t1504;
t1524 = t1054 * t1070;
t1654 = pkin(2) * t1069;
t1021 = pkin(2) * t1076 + t1070 * t1077;
t1525 = t1054 * t1069;
t1166 = pkin(3) * t1525 - t1056 * t1675;
t964 = -t1021 * t1053 + t1055 * t1166;
t906 = (t1003 * t1039 + t1035 * t1524) * t1650 + (t1035 * t995 - t1039 * t964) * t1075 + (t1035 * t1056 - t1039 * t1534) * t1654;
t907 = -(t1001 * t1033 - t1037 * t1528) * t1652 + (t1033 * t962 + t1037 * t993) * t1071 + (t1033 * t1534 + t1037 * t1056) * t1656;
t908 = -(t1002 * t1034 - t1038 * t1526) * t1651 + (t1034 * t963 + t1038 * t994) * t1073 + (t1034 * t1534 + t1038 * t1056) * t1655;
t909 = -(t1003 * t1035 - t1039 * t1524) * t1650 + (t1035 * t964 + t1039 * t995) * t1075 + (t1035 * t1534 + t1039 * t1056) * t1654;
t1721 = (-t1137 * t1554 - t1283 * t909 - t1285 * t908 - t1287 * t907) * t1054 + t906 * t1212 + t905 * t1213 + t904 * t1214;
t1545 = t1070 * t957;
t1396 = t987 * t1545;
t1284 = t1039 * t1396;
t1208 = t1054 * t1284;
t1548 = t1068 * t955;
t1400 = t985 * t1548;
t1286 = t1038 * t1400;
t1209 = t1054 * t1286;
t1551 = t1066 * t953;
t1404 = t983 * t1551;
t1288 = t1037 * t1404;
t1210 = t1054 * t1288;
t1292 = t1035 * t1396;
t1295 = t1034 * t1400;
t1298 = t1033 * t1404;
t1557 = t1058 * t950;
t1720 = (t1137 * t1557 - t1292 * t906 - t1295 * t905 - t1298 * t904) * t1054 + t909 * t1208 + t908 * t1209 + t907 * t1210;
t1718 = t974 * t976;
t1087 = 0.1e1 / pkin(3);
t1581 = t1032 * t950;
t1717 = t1722 * t1087 * t1581;
t1498 = t1056 * t1076;
t1646 = pkin(3) * t1075;
t945 = (t1053 * t1070 - t1055 * t1498) * t1646 - t1021 * t1516 + t1675 * t1053;
t948 = (t1053 * t1498 + t1055 * t1070) * t1646 + t1021 * t1535 + t1675 * t1055;
t1512 = t1055 * t1075;
t991 = -t1003 * t1069 - t1054 * t1512;
t1712 = t945 * t987 + t948 * t991;
t1500 = t1056 * t1074;
t1647 = pkin(3) * t1073;
t944 = (t1053 * t1068 - t1055 * t1500) * t1647 - t1020 * t1516 + t1676 * t1053;
t947 = (t1053 * t1500 + t1055 * t1068) * t1647 + t1020 * t1535 + t1676 * t1055;
t1513 = t1055 * t1073;
t990 = -t1002 * t1067 - t1054 * t1513;
t1711 = t944 * t985 + t947 * t990;
t1502 = t1056 * t1072;
t1648 = pkin(3) * t1071;
t943 = (t1053 * t1066 - t1055 * t1502) * t1648 - t1019 * t1516 + t1677 * t1053;
t946 = (t1053 * t1502 + t1055 * t1066) * t1648 + t1019 * t1535 + t1677 * t1055;
t1514 = t1055 * t1071;
t989 = -t1001 * t1065 - t1054 * t1514;
t1710 = t943 * t983 + t946 * t989;
t1357 = t1057 * t1059 * t950;
t1277 = t976 * t1357;
t1716 = t1277 * t974;
t1045 = t1057 ^ 2;
t1563 = t1045 * t950;
t1714 = t1563 * t1718;
t1713 = t1581 * t974;
t1565 = t1039 * t957;
t1127 = t1712 * t1565;
t1567 = t1038 * t955;
t1128 = t1711 * t1567;
t1569 = t1037 * t953;
t1129 = t1710 * t1569;
t1572 = t1036 * t950;
t1697 = t1722 * t1572;
t1709 = (-t1057 * t1697 - t1065 * t1129 - t1067 * t1128 - t1069 * t1127) * t1087;
t1708 = (-t1059 * t1697 - t1071 * t1129 - t1073 * t1128 - t1075 * t1127) * t1087;
t1573 = t1035 * t987;
t1575 = t1034 * t985;
t1577 = t1033 * t983;
t933 = -t996 * t1653 + t1015 * t1515 + (pkin(2) * t1533 + t1059 * t1169) * t1053;
t934 = -t998 * t1652 + t1019 * t1514 + (pkin(2) * t1529 + t1071 * t1168) * t1053;
t935 = -t999 * t1651 + t1020 * t1513 + (pkin(2) * t1527 + t1073 * t1167) * t1053;
t936 = -t1000 * t1650 + t1021 * t1512 + (pkin(2) * t1525 + t1075 * t1166) * t1053;
t1707 = ((-t1704 * t933 - t903 * t976) * t1557 + (-t1573 * t936 - t909 * t991) * t1545 + (-t1575 * t935 - t908 * t990) * t1548 + (-t1577 * t934 - t907 * t989) * t1551) * t1054;
t1395 = t991 * t1545;
t1399 = t990 * t1548;
t1403 = t989 * t1551;
t1706 = ((t1703 * t933 - t902 * t976) * t1557 - t1395 * t906 - t1399 * t905 - t1403 * t904) * t1054 + t936 * t1208 + t935 * t1209 + t934 * t1210;
t1705 = 0.2e1 * t974;
t1668 = 0.2e1 * t983;
t1666 = 0.2e1 * t985;
t1664 = 0.2e1 * t987;
t1702 = t1054 * (t1075 * t1675 + t1484);
t1701 = t1054 * (t1073 * t1676 + t1485);
t1700 = t1054 * (t1071 * t1677 + t1486);
t1699 = t1054 * (t1059 * t1678 + t1487);
t1679 = t950 * t1705;
t1698 = t1058 * t1679;
t1574 = t1035 * t957;
t1696 = t1712 * t1087 * t1574;
t1576 = t1034 * t955;
t1695 = t1711 * t1087 * t1576;
t1578 = t1033 * t953;
t1694 = t1710 * t1087 * t1578;
t1047 = t1065 ^ 2;
t1048 = t1067 ^ 2;
t1049 = t1069 ^ 2;
t1596 = t957 * t991;
t1450 = t987 * t1596;
t1326 = t1039 * t1450;
t1598 = t955 * t990;
t1453 = t985 * t1598;
t1327 = t1038 * t1453;
t1600 = t953 * t989;
t1456 = t983 * t1600;
t1328 = t1037 * t1456;
t1693 = -t1036 * t1714 - t1047 * t1328 - t1048 * t1327 - t1049 * t1326;
t1692 = -t1572 * t1718 - t1326 - t1327 - t1328;
t1691 = t1717 * t1059 + t1694 * t1071 + t1695 * t1073 + t1696 * t1075;
t1690 = t1717 * t1057 + t1694 * t1065 + t1695 * t1067 + t1696 * t1069;
t1518 = t1054 * t1076;
t1366 = t991 * t1518;
t1279 = t957 * t1366;
t1520 = t1054 * t1074;
t1367 = t990 * t1520;
t1280 = t955 * t1367;
t1522 = t1054 * t1072;
t1368 = t989 * t1522;
t1281 = t953 * t1368;
t1530 = t1054 * t1060;
t1372 = t976 * t1530;
t1282 = t950 * t1372;
t1373 = t933 * t1530;
t1689 = t936 * t1212 + t935 * t1213 + t934 * t1214 + t909 * t1279 + t908 * t1280 + t907 * t1281 + t903 * t1282 + t1373 * t1713;
t930 = t1033 * t1456;
t931 = t1034 * t1453;
t932 = t1035 * t1450;
t1688 = t1032 * t1714 + t1047 * t930 + t1048 * t931 + t1049 * t932;
t1687 = t976 * t1713 + t930 + t931 + t932;
t1491 = t1069 * t1075;
t1354 = t957 * t1491;
t1223 = t987 * t991 * t1354;
t1492 = t1067 * t1073;
t1355 = t955 * t1492;
t1226 = t985 * t990 * t1355;
t1493 = t1065 * t1071;
t1356 = t953 * t1493;
t1229 = t983 * t989 * t1356;
t1686 = -0.2e1 * t1036 * t1716 - 0.2e1 * t1037 * t1229 - 0.2e1 * t1038 * t1226 - 0.2e1 * t1039 * t1223;
t1685 = 0.2e1 * t1032 * t1716 + 0.2e1 * t1033 * t1229 + 0.2e1 * t1034 * t1226 + 0.2e1 * t1035 * t1223;
t1407 = t933 * t1554;
t1684 = (-t1283 * t936 - t1285 * t935 - t1287 * t934 - t1407 * t1703) * t1054 + t906 * t1279 + t905 * t1280 + t904 * t1281 + t902 * t1282;
t1683 = t974 ^ 2;
t1682 = t948 * t1664;
t1681 = t947 * t1666;
t1680 = t946 * t1668;
t949 = 0.1e1 / t951;
t1078 = xP(4);
t1043 = sin(t1078);
t1044 = cos(t1078);
t1079 = koppelP(4,2);
t1083 = koppelP(4,1);
t1006 = t1043 * t1083 + t1044 * t1079;
t1010 = -t1043 * t1079 + t1044 * t1083;
t966 = t1006 * t1036 + t1010 * t1032;
t1141 = t949 * t966;
t1471 = t939 * t1141;
t952 = 0.1e1 / t959;
t1080 = koppelP(3,2);
t1084 = koppelP(3,1);
t1007 = t1043 * t1084 + t1044 * t1080;
t1011 = -t1043 * t1080 + t1044 * t1084;
t967 = t1007 * t1037 + t1011 * t1033;
t1140 = t952 * t967;
t1464 = t946 * t1140;
t954 = 0.1e1 / t960;
t1081 = koppelP(2,2);
t1085 = koppelP(2,1);
t1008 = t1043 * t1085 + t1044 * t1081;
t1012 = -t1043 * t1081 + t1044 * t1085;
t968 = t1008 * t1038 + t1012 * t1034;
t1139 = t954 * t968;
t1463 = t947 * t1139;
t956 = 0.1e1 / t961;
t1082 = koppelP(1,2);
t1086 = koppelP(1,1);
t1009 = t1043 * t1086 + t1044 * t1082;
t1013 = -t1043 * t1082 + t1044 * t1086;
t969 = t1009 * t1039 + t1013 * t1035;
t1138 = t956 * t969;
t1462 = t948 * t1138;
t1382 = pkin(2) + t1646;
t1251 = t1056 * t1382;
t1383 = pkin(2) + t1647;
t1252 = t1056 * t1383;
t1384 = pkin(2) + t1648;
t1253 = t1056 * t1384;
t1385 = pkin(2) + t1649;
t1254 = t1056 * t1385;
t1670 = 0.2e1 * pkin(2);
t1669 = -0.2e1 * t983;
t1667 = -0.2e1 * t985;
t1665 = -0.2e1 * t987;
t1663 = 0.2e1 * t1054;
t1662 = 0.2e1 * t1087;
t858 = t1087 * t1471;
t1661 = pkin(6) * t858;
t859 = t1087 * t1464;
t1660 = pkin(6) * t859;
t860 = t1087 * t1463;
t1659 = pkin(6) * t860;
t861 = t1087 * t1462;
t1658 = pkin(6) * t861;
t1645 = pkin(6) * t1087;
t888 = t974 * t1141;
t1644 = t888 * t949;
t890 = t983 * t1140;
t1643 = t890 * t952;
t891 = t985 * t1139;
t1642 = t891 * t954;
t892 = t987 * t1138;
t1641 = t892 * t956;
t1640 = t902 * t949;
t1638 = t903 * t949;
t1636 = t904 * t952;
t1635 = t905 * t954;
t1634 = t906 * t956;
t1633 = t907 * t952;
t1632 = t908 * t954;
t1631 = t909 * t956;
t1630 = t933 * t949;
t1629 = t933 * t950;
t1628 = t934 * t952;
t1627 = t934 * t953;
t1626 = t935 * t954;
t1625 = t935 * t955;
t1624 = t936 * t956;
t1623 = t936 * t957;
t937 = t939 ^ 2;
t1622 = t937 * t950;
t1621 = t938 * t949;
t1620 = t938 * t950;
t1619 = t939 * t949;
t1617 = t943 * t952;
t1615 = t944 * t954;
t1613 = t945 * t956;
t1611 = t946 * t952;
t1610 = t946 * t953;
t1608 = t947 * t954;
t1607 = t947 * t955;
t1605 = t948 * t956;
t1604 = t948 * t957;
t1602 = t949 * t976;
t1601 = t952 * t989;
t1599 = t954 * t990;
t1597 = t956 * t991;
t1595 = t966 * t974;
t1594 = t967 * t983;
t1593 = t968 * t985;
t1592 = t969 * t987;
t1024 = t1033 ^ 2;
t1587 = t1024 * t953;
t1025 = t1034 ^ 2;
t1586 = t1025 * t955;
t1026 = t1035 ^ 2;
t1585 = t1026 * t957;
t1028 = t1037 ^ 2;
t1584 = t1028 * t953;
t1029 = t1038 ^ 2;
t1583 = t1029 * t955;
t1030 = t1039 ^ 2;
t1582 = t1030 * t957;
t1568 = t1037 * t983;
t1566 = t1038 * t985;
t1564 = t1039 * t987;
t1562 = t1047 * t953;
t1561 = t1048 * t955;
t1560 = t1049 * t957;
t1559 = t1057 * t949;
t1558 = t1058 * t949;
t1556 = t1059 * t949;
t1555 = t1060 * t949;
t1553 = t1065 * t952;
t1552 = t1066 * t952;
t1550 = t1067 * t954;
t1549 = t1068 * t954;
t1547 = t1069 * t956;
t1546 = t1070 * t956;
t1544 = t1071 * t952;
t1543 = t1072 * t952;
t1541 = t1073 * t954;
t1540 = t1074 * t954;
t1538 = t1075 * t956;
t1537 = t1076 * t956;
t1517 = t1054 * t1087;
t1510 = t1056 * t1059;
t1503 = t1056 * t1071;
t1501 = t1056 * t1073;
t1499 = t1056 * t1075;
t1497 = t1056 * t1087;
t1483 = t1057 * t1645;
t1482 = t1059 * t1645;
t1481 = t1065 * t1645;
t1480 = t1067 * t1645;
t1479 = t1069 * t1645;
t1478 = t1071 * t1645;
t1477 = t1073 * t1645;
t1476 = t1075 * t1645;
t1004 = pkin(2) * t1053 - t1077 * t1516;
t1005 = pkin(2) * t1516 + t1053 * t1077;
t1102 = t997 * t1653 + (t1004 * t1060 + t1005 * t1058) * t1059;
t1193 = t1385 * t1534;
t783 = ((-t1102 * t1006 + t1010 * t1699 + (t1006 * t1193 + t1010 * t1254) * t1057) * t1036 + (-t1006 * t1699 - t1102 * t1010 + (-t1006 * t1254 + t1010 * t1193) * t1057) * t1032) / ((t1058 * t1649 + t1678) * t1531 + t1057 * t1254);
t1475 = t783 * t949 * t974;
t1474 = t974 * t1644;
t1473 = t939 * t1620;
t1472 = t976 * t1620;
t1470 = t943 * t1610;
t1469 = t943 * t1600;
t1468 = t944 * t1607;
t1467 = t944 * t1598;
t1466 = t945 * t1604;
t1465 = t945 * t1596;
t1461 = t949 * t1595;
t1460 = t950 * t1595;
t1459 = t950 * t1683;
t1458 = t952 * t1594;
t1457 = t953 * t1594;
t1455 = t954 * t1593;
t1454 = t955 * t1593;
t1452 = t956 * t1592;
t1451 = t957 * t1592;
t1443 = t1032 * t1619;
t1442 = t966 * t1581;
t1440 = t1033 * t1611;
t1439 = t952 * t1577;
t1438 = t967 * t1578;
t1437 = t1034 * t1608;
t1436 = t954 * t1575;
t1435 = t968 * t1576;
t1434 = t1035 * t1605;
t1433 = t956 * t1573;
t1432 = t969 * t1574;
t1431 = t937 * t1572;
t1430 = t1036 * t1619;
t1428 = t1037 * t1611;
t1427 = t952 * t1568;
t1426 = t967 * t1569;
t1425 = t1038 * t1608;
t1424 = t954 * t1566;
t1423 = t968 * t1567;
t1422 = t1039 * t1605;
t1421 = t956 * t1564;
t1420 = t969 * t1565;
t1419 = t1045 * t1644;
t1417 = t1047 * t1643;
t977 = t983 ^ 2;
t1416 = t977 * t1562;
t1415 = t1048 * t1642;
t978 = t985 ^ 2;
t1414 = t978 * t1561;
t1413 = t1049 * t1641;
t979 = t987 ^ 2;
t1412 = t979 * t1560;
t1411 = t858 * t1559;
t1410 = t888 * t1559;
t1409 = t858 * t1556;
t1408 = t888 * t1556;
t1406 = t859 * t1553;
t1405 = t890 * t1553;
t1402 = t860 * t1550;
t1401 = t891 * t1550;
t1398 = t861 * t1547;
t1397 = t892 * t1547;
t1394 = t859 * t1544;
t1393 = t890 * t1544;
t1391 = t860 * t1541;
t1390 = t891 * t1541;
t1388 = t861 * t1538;
t1387 = t892 * t1538;
t1380 = t1033 * t1569;
t1378 = t1034 * t1567;
t1376 = t1035 * t1565;
t1374 = t858 * t1532;
t1371 = t859 * t1528;
t1370 = t860 * t1526;
t1369 = t861 * t1524;
t1365 = t949 * t1496;
t1364 = t949 * t1510;
t1363 = t952 * t1494;
t1362 = t954 * t1507;
t1361 = t956 * t1505;
t1360 = t952 * t1503;
t1359 = t954 * t1501;
t1358 = t956 * t1499;
t1353 = t1057 * t1530;
t1352 = t1059 * t1530;
t1351 = t1065 * t1522;
t1350 = t1067 * t1520;
t1349 = t1069 * t1518;
t1348 = t1071 * t1522;
t1347 = t1073 * t1520;
t1346 = t1075 * t1518;
t1343 = t1610 * t1668;
t1342 = t1607 * t1666;
t1341 = t1604 * t1664;
t1340 = t859 * t1458;
t1339 = t860 * t1455;
t1338 = t861 * t1452;
t1337 = t890 * t1458;
t1336 = t891 * t1455;
t1335 = t892 * t1452;
t1334 = t976 * t1460;
t1333 = t983 * t1457;
t1332 = t985 * t1454;
t1331 = t987 * t1451;
t1329 = t1036 * t1459;
t1325 = t974 * t1419;
t1324 = t1045 * t1459;
t1323 = t983 * t1417;
t1322 = t1047 * t1457;
t1321 = t985 * t1415;
t1320 = t1048 * t1454;
t1319 = t987 * t1413;
t1318 = t1049 * t1451;
t1317 = t974 * t1411;
t1316 = t939 * t1410;
t1315 = t974 * t1409;
t1314 = t939 * t1408;
t1313 = t983 * t1406;
t1312 = t946 * t1405;
t1311 = t985 * t1402;
t1310 = t947 * t1401;
t1309 = t987 * t1398;
t1308 = t948 * t1397;
t1307 = t983 * t1394;
t1306 = t946 * t1393;
t1305 = t985 * t1391;
t1304 = t947 * t1390;
t1303 = t987 * t1388;
t1302 = t948 * t1387;
t1299 = t977 * t1380;
t1296 = t978 * t1378;
t1293 = t979 * t1376;
t1278 = t1057 * t1408;
t1276 = t1065 * t1393;
t1275 = t977 * t1356;
t1274 = t1493 * t1594;
t1273 = t1067 * t1390;
t1272 = t978 * t1355;
t1271 = t1492 * t1593;
t1270 = t1069 * t1387;
t1269 = t979 * t1354;
t1268 = t1491 * t1592;
t1267 = t1517 * t1558;
t1266 = t1517 * t1552;
t1265 = t1517 * t1549;
t1264 = t1517 * t1546;
t1263 = t939 * t1679;
t1262 = t1032 * t1679;
t1261 = t1036 * t1679;
t1260 = t1065 * t1343;
t1259 = t1067 * t1342;
t1258 = t1069 * t1341;
t1257 = t1071 * t1343;
t1256 = t1073 * t1342;
t1255 = t1075 * t1341;
t1250 = t1442 * t1683;
t1249 = t983 * t1322;
t1248 = t985 * t1320;
t1247 = t987 * t1318;
t787 = (-t1006 * t902 + t1010 * t903) * t949;
t1246 = t787 * t976 + t888 * t933;
t788 = (-t1007 * t904 + t1011 * t907) * t952;
t1245 = t788 * t989 + t890 * t934;
t789 = (-t1008 * t905 + t1012 * t908) * t954;
t1244 = t789 * t990 + t891 * t935;
t790 = (-t1009 * t906 + t1013 * t909) * t956;
t1243 = t790 * t991 + t892 * t936;
t1234 = t1036 * t1324;
t1233 = t974 * t1278;
t1232 = t1357 * t1683;
t1231 = t983 * t1276;
t1230 = t953 * t1274;
t1228 = t985 * t1273;
t1227 = t955 * t1271;
t1225 = t987 * t1270;
t1224 = t957 * t1268;
t1207 = t1057 * t1267;
t1206 = t1059 * t1267;
t1205 = t1065 * t1266;
t1204 = t1071 * t1266;
t1203 = t1067 * t1265;
t1202 = t1073 * t1265;
t1201 = t1069 * t1264;
t1200 = t1075 * t1264;
t1199 = t939 * t1261;
t1198 = t1057 * t1263;
t1197 = t1059 * t1263;
t1196 = t946 * t1380 * t1669;
t1195 = t947 * t1378 * t1667;
t1194 = t948 * t1376 * t1665;
t1192 = t1384 * t1534;
t1191 = t1383 * t1534;
t1190 = t1382 * t1534;
t1189 = t1530 * t787 + t888 * t1670;
t1188 = t976 * t1670 + t1373;
t1187 = t1522 * t788 + t890 * t1670;
t1186 = t1522 * t934 + t989 * t1670;
t1185 = t1520 * t789 + t891 * t1670;
t1184 = t1520 * t935 + t990 * t1670;
t1183 = t1518 * t790 + t892 * t1670;
t1182 = t1518 * t936 + t991 * t1670;
t1181 = t983 * t1230;
t1180 = t985 * t1227;
t1179 = t987 * t1224;
t1178 = -t1704 * t787 - t888 * t903;
t1177 = t1577 * t788 + t890 * t907;
t1176 = t1575 * t789 + t891 * t908;
t1175 = t1573 * t790 + t892 * t909;
t1174 = -t1703 * t787 + t888 * t902;
t1173 = t1568 * t788 - t890 * t904;
t1172 = t1566 * t789 - t891 * t905;
t1171 = t1564 * t790 - t892 * t906;
t1170 = t1036 * t1232;
t1165 = t939 * t1207;
t1164 = t939 * t1206;
t1163 = t946 * t1205;
t1162 = t946 * t1204;
t1161 = t947 * t1203;
t1160 = t947 * t1202;
t1159 = t948 * t1201;
t1158 = t948 * t1200;
t1157 = t939 * t966 * t1262;
t1156 = t1438 * t1680;
t1155 = t1435 * t1681;
t1154 = t1432 * t1682;
t1153 = t1426 * t1680;
t1152 = t1423 * t1681;
t1151 = t1420 * t1682;
t1150 = t1057 * t1199;
t1149 = t1059 * t1199;
t1145 = -t1461 * t787 - t783 * t888;
t1101 = t1001 * t1652 + (t1004 * t1072 + t1005 * t1066) * t1071;
t784 = ((-t1101 * t1007 + t1011 * t1700 + (t1007 * t1192 + t1011 * t1253) * t1065) * t1037 + (-t1007 * t1700 - t1011 * t1101 + (-t1007 * t1253 + t1011 * t1192) * t1065) * t1033) / ((t1066 * t1648 + t1677) * t1523 + t1065 * t1253);
t1144 = -t1458 * t788 - t784 * t890;
t1100 = t1002 * t1651 + (t1004 * t1074 + t1005 * t1068) * t1073;
t785 = ((-t1100 * t1008 + t1012 * t1701 + (t1008 * t1191 + t1012 * t1252) * t1067) * t1038 + (-t1008 * t1701 - t1012 * t1100 + (-t1008 * t1252 + t1012 * t1191) * t1067) * t1034) / ((t1068 * t1647 + t1676) * t1521 + t1067 * t1252);
t1143 = -t1455 * t789 - t785 * t891;
t1099 = t1003 * t1650 + (t1004 * t1076 + t1005 * t1070) * t1075;
t786 = ((-t1009 * t1099 + t1013 * t1702 + (t1009 * t1190 + t1013 * t1251) * t1069) * t1039 + (-t1009 * t1702 - t1013 * t1099 + (-t1009 * t1251 + t1013 * t1190) * t1069) * t1035) / ((t1070 * t1646 + t1675) * t1519 + t1069 * t1251);
t1142 = -t1452 * t790 - t786 * t892;
t1135 = t950 * t966 * t1722;
t1134 = t953 * t967 * t1710;
t1133 = t955 * t968 * t1711;
t1132 = t957 * t969 * t1712;
t1126 = t1482 * t939 + t1657 * t1705;
t1125 = -0.2e1 * pkin(2) * t1059 * t974 + t1483 * t939;
t1124 = t1478 * t946 + t1656 * t1668;
t1123 = pkin(2) * t1071 * t1669 + t1481 * t946;
t1122 = t1477 * t947 + t1655 * t1666;
t1121 = pkin(2) * t1073 * t1667 + t1480 * t947;
t1120 = t1476 * t948 + t1654 * t1664;
t1119 = pkin(2) * t1075 * t1665 + t948 * t1479;
t1118 = -t1460 * t933 - t783 * t1602;
t1117 = -t1457 * t934 - t784 * t1601;
t1116 = -t1454 * t935 - t785 * t1599;
t1115 = -t1451 * t936 - t786 * t1597;
t1114 = t949 * (t1497 * t939 + t1530 * t974);
t1113 = t952 * (t1497 * t946 + t1522 * t983);
t1112 = t954 * (t1497 * t947 + t1520 * t985);
t1111 = t956 * (t1497 * t948 + t1518 * t987);
t1110 = t1032 * t1475 + t1460 * t903;
t1109 = t1439 * t784 + t1457 * t907;
t1108 = t1436 * t785 + t1454 * t908;
t1107 = t1433 * t786 + t1451 * t909;
t1106 = t1036 * t1475 - t1460 * t902;
t1105 = t1427 * t784 - t1457 * t904;
t1104 = t1424 * t785 - t1454 * t905;
t1103 = t1421 * t786 - t1451 * t906;
t1088 = 0.1e1 / pkin(3) ^ 2;
t1027 = t1036 ^ 2;
t1023 = t1032 ^ 2;
t1022 = t1043 ^ 2 + t1044 ^ 2;
t982 = t991 ^ 2;
t981 = t990 ^ 2;
t980 = t989 ^ 2;
t973 = t976 ^ 2;
t942 = t948 ^ 2;
t941 = t947 ^ 2;
t940 = t946 ^ 2;
t895 = (t1497 * t945 + t1366) * t956;
t894 = (t1497 * t944 + t1367) * t954;
t893 = (t1497 * t943 + t1368) * t952;
t889 = (t1497 * t938 + t1372) * t949;
t887 = t1039 * t1111;
t886 = t1035 * t1111;
t885 = t1038 * t1112;
t884 = t1034 * t1112;
t883 = t1037 * t1113;
t882 = t1033 * t1113;
t881 = t1036 * t1114;
t880 = t1032 * t1114;
t879 = (pkin(6) * t991 + t1524 * t936) * t956;
t878 = (pkin(6) * t990 + t1526 * t935) * t954;
t877 = (pkin(6) * t989 + t1528 * t934) * t952;
t876 = (pkin(6) * t976 + t1532 * t933) * t949;
t857 = (pkin(6) * t1573 + t1524 * t909) * t956;
t856 = (-pkin(6) * t1564 + t1524 * t906) * t956;
t855 = (pkin(6) * t1575 + t1526 * t908) * t954;
t854 = (-pkin(6) * t1566 + t1526 * t905) * t954;
t853 = (pkin(6) * t1577 + t1528 * t907) * t952;
t852 = (-pkin(6) * t1568 + t1528 * t904) * t952;
t851 = (pkin(6) * t1704 + t1532 * t903) * t949;
t850 = (-pkin(6) * t1703 + t1532 * t902) * t949;
t849 = -t1069 * t895 - t1200 * t945;
t848 = t1075 * t895 - t1201 * t945;
t847 = -t1067 * t894 - t1202 * t944;
t846 = t1073 * t894 - t1203 * t944;
t845 = -t1065 * t893 - t1204 * t943;
t844 = t1071 * t893 - t1205 * t943;
t843 = -t1057 * t889 - t1206 * t938;
t842 = t1059 * t889 - t1207 * t938;
t841 = t1039 * t1159 - t1075 * t887;
t840 = t1039 * t1158 + t1069 * t887;
t839 = -t1035 * t1158 - t1069 * t886;
t838 = -t1035 * t1159 + t1075 * t886;
t837 = t1038 * t1161 - t1073 * t885;
t836 = t1038 * t1160 + t1067 * t885;
t835 = -t1034 * t1160 - t1067 * t884;
t834 = -t1034 * t1161 + t1073 * t884;
t833 = t1037 * t1163 - t1071 * t883;
t832 = t1037 * t1162 + t1065 * t883;
t831 = -t1033 * t1162 - t1065 * t882;
t830 = -t1033 * t1163 + t1071 * t882;
t829 = (t1075 * t1182 - t1479 * t945) * t956;
t828 = (-t1069 * t1182 - t1476 * t945) * t956;
t827 = (t1073 * t1184 - t1480 * t944) * t954;
t826 = (-t1067 * t1184 - t1477 * t944) * t954;
t825 = (t1071 * t1186 - t1481 * t943) * t952;
t824 = (-t1065 * t1186 - t1478 * t943) * t952;
t823 = t1036 * t1165 - t1059 * t881;
t822 = t1036 * t1164 + t1057 * t881;
t821 = -t1032 * t1164 - t1057 * t880;
t820 = -t1032 * t1165 + t1059 * t880;
t819 = (t1059 * t1188 - t1483 * t938) * t949;
t818 = (-t1057 * t1188 - t1482 * t938) * t949;
t817 = -t1075 * t879 - t1361 * t936;
t816 = -t1073 * t878 - t1362 * t935;
t815 = -t1071 * t877 - t1363 * t934;
t814 = -t1069 * t879 + t1358 * t936;
t813 = -t1067 * t878 + t1359 * t935;
t812 = -t1065 * t877 + t1360 * t934;
t811 = -t1059 * t876 - t1365 * t933;
t810 = -t1057 * t876 + t1364 * t933;
t809 = -t1032 * t1329 - t1293 - t1296 - t1299;
t808 = -t1032 * t1234 - t1047 * t1299 - t1048 * t1296 - t1049 * t1293;
t807 = (-t1035 * t1119 + t1346 * t909) * t956;
t806 = (t1039 * t1119 + t1346 * t906) * t956;
t805 = (-t1035 * t1120 - t1349 * t909) * t956;
t804 = (t1039 * t1120 - t1349 * t906) * t956;
t803 = (-t1034 * t1121 + t1347 * t908) * t954;
t802 = (t1038 * t1121 + t1347 * t905) * t954;
t801 = (-t1034 * t1122 - t1350 * t908) * t954;
t800 = (t1038 * t1122 - t1350 * t905) * t954;
t799 = (-t1033 * t1123 + t1348 * t907) * t952;
t798 = (t1037 * t1123 + t1348 * t904) * t952;
t797 = (-t1033 * t1124 - t1351 * t907) * t952;
t796 = (t1037 * t1124 - t1351 * t904) * t952;
t795 = -0.2e1 * t1033 * t1037 * t1275 - 0.2e1 * t1034 * t1038 * t1272 - 0.2e1 * t1035 * t1039 * t1269 - 0.2e1 * t1032 * t1170;
t794 = (-t1032 * t1125 + t1352 * t903) * t949;
t793 = (t1036 * t1125 + t1352 * t902) * t949;
t792 = (-t1032 * t1126 - t1353 * t903) * t949;
t791 = (t1036 * t1126 - t1353 * t902) * t949;
t782 = t1056 * t861 + t1518 * t892;
t781 = t1056 * t860 + t1520 * t891;
t780 = t1056 * t859 + t1522 * t890;
t779 = (-t1032 * t1431 - t1376 * t942 - t1378 * t941 - t1380 * t940) * t1088;
t778 = t1056 * t858 + t1530 * t888;
t777 = -t1075 * t857 - t1361 * t909;
t776 = -t1075 * t856 - t1361 * t906;
t775 = -t1073 * t855 - t1362 * t908;
t774 = -t1073 * t854 - t1362 * t905;
t773 = -t1071 * t853 - t1363 * t907;
t772 = -t1071 * t852 - t1363 * t904;
t771 = -t1069 * t857 + t1358 * t909;
t770 = -t1069 * t856 + t1358 * t906;
t769 = -t1067 * t855 + t1359 * t908;
t768 = -t1067 * t854 + t1359 * t905;
t767 = -t1065 * t853 + t1360 * t907;
t766 = -t1065 * t852 + t1360 * t904;
t765 = -t1059 * t851 - t1365 * t903;
t764 = -t1059 * t850 - t1365 * t902;
t763 = -t1057 * t851 + t1364 * t903;
t762 = -t1057 * t850 + t1364 * t902;
t761 = pkin(6) * t892 + t1524 * t790;
t760 = pkin(6) * t891 + t1526 * t789;
t759 = pkin(6) * t890 + t1528 * t788;
t758 = pkin(6) * t888 + t1532 * t787;
t757 = (-t1036 * t1473 - t1037 * t1470 - t1038 * t1468 - t1039 * t1466) * t1088;
t756 = (t1032 * t1473 + t1033 * t1470 + t1034 * t1468 + t1035 * t1466) * t1088;
t755 = -t1069 * t782 - t1075 * t1369;
t754 = -t1069 * t1369 + t1075 * t782;
t753 = -t1067 * t781 - t1073 * t1370;
t752 = -t1067 * t1370 + t1073 * t781;
t751 = -t1065 * t780 - t1071 * t1371;
t750 = -t1065 * t1371 + t1071 * t780;
t749 = -t1057 * t778 - t1059 * t1374;
t748 = -t1057 * t1374 + t1059 * t778;
t747 = (-t1032 * t1149 + t1071 * t1196 + t1073 * t1195 + t1075 * t1194) * t1087;
t746 = (-t1032 * t1150 + t1065 * t1196 + t1067 * t1195 + t1069 * t1194) * t1087;
t745 = -t1069 * t1658 + t1075 * t1183;
t744 = -t1069 * t1183 - t1075 * t1658;
t743 = -t1067 * t1659 + t1073 * t1185;
t742 = -t1067 * t1185 - t1073 * t1659;
t741 = -t1065 * t1660 + t1071 * t1187;
t740 = -t1065 * t1187 - t1071 * t1660;
t739 = -t1057 * t1661 + t1059 * t1189;
t738 = -t1057 * t1189 - t1059 * t1661;
t737 = -t1075 * t761 - t1505 * t790;
t736 = -t1073 * t760 - t1507 * t789;
t735 = -t1071 * t759 - t1494 * t788;
t734 = -t1069 * t761 + t1499 * t790;
t733 = -t1067 * t760 + t1501 * t789;
t732 = -t1065 * t759 + t1503 * t788;
t731 = -t1059 * t758 - t1496 * t787;
t730 = -t1057 * t758 + t1510 * t787;
t729 = t909 * t1623 + t908 * t1625 + t907 * t1627 + t903 * t1629;
t728 = t906 * t1623 + t905 * t1625 + t904 * t1627 + t902 * t1629;
t727 = t902 * t903 * t950 + t904 * t907 * t953 + t905 * t908 * t955 + t906 * t909 * t957;
t1 = [t902 ^ 2 * t950 + t904 ^ 2 * t953 + t905 ^ 2 * t955 + t906 ^ 2 * t957, t1027 * t1459 + t1582 * t979 + t1583 * t978 + t1584 * t977, (-t1060 * t1261 * t902 - 0.2e1 * t1283 * t906 - 0.2e1 * t1285 * t905 - 0.2e1 * t1287 * t904) * t1054, (t1036 * t902 * t1698 + 0.2e1 * t1284 * t906 + 0.2e1 * t1286 * t905 + 0.2e1 * t1288 * t904) * t1054, t1027 * t1324 + t1028 * t1416 + t1029 * t1414 + t1030 * t1412, 0.2e1 * t1027 * t1232 + 0.2e1 * t1028 * t1275 + 0.2e1 * t1029 * t1272 + 0.2e1 * t1030 * t1269, (t1027 * t1198 + t1028 * t1260 + t1029 * t1259 + t1030 * t1258) * t1087, (t1027 * t1197 + t1028 * t1257 + t1029 * t1256 + t1030 * t1255) * t1087, (t1027 * t1622 + t1582 * t942 + t1583 * t941 + t1584 * t940) * t1088, (-t1564 * t806 + t906 * t841) * t956 + (-t1566 * t802 + t905 * t837) * t954 + (-t1568 * t798 + t904 * t833) * t952 + (-t1703 * t793 + t902 * t823) * t949 + (-t1422 * t770 - t1425 * t768 - t1428 * t766 - t1430 * t762) * t1087, (-t1564 * t804 + t906 * t840) * t956 + (-t1566 * t800 + t905 * t836) * t954 + (-t1568 * t796 + t904 * t832) * t952 + (-t1703 * t791 + t902 * t822) * t949 + (-t1422 * t776 - t1425 * t774 - t1428 * t772 - t1430 * t764) * t1087, 0, 0, 0, t1022; t727, t809, t1721, t1720, t808, t795, t746, t747, t779, (-t1564 * t807 + t906 * t838) * t956 + (-t1566 * t803 + t905 * t834) * t954 + (-t1568 * t799 + t904 * t830) * t952 + (-t1703 * t794 + t902 * t820) * t949 + (-t1422 * t771 - t1425 * t769 - t1428 * t767 - t1430 * t763) * t1087, (-t1564 * t805 + t906 * t839) * t956 + (-t1566 * t801 + t905 * t835) * t954 + (-t1568 * t797 + t904 * t831) * t952 + (-t1703 * t792 + t902 * t821) * t949 + (-t1422 * t777 - t1425 * t775 - t1428 * t773 - t1430 * t765) * t1087, 0, 0, 0, 0; t728, t1692, t1684, t1706, t1693, t1686, t1709, t1708, t757, (-t1564 * t829 + t906 * t848) * t956 + (-t1566 * t827 + t905 * t846) * t954 + (-t1568 * t825 + t904 * t844) * t952 + (-t1703 * t819 + t902 * t842) * t949 + (-t1422 * t814 - t1425 * t813 - t1428 * t812 - t1430 * t810) * t1087, (-t1564 * t828 + t906 * t849) * t956 + (-t1566 * t826 + t905 * t847) * t954 + (-t1568 * t824 + t904 * t845) * t952 + (-t1703 * t818 + t902 * t843) * t949 + (-t1422 * t817 - t1425 * t816 - t1428 * t815 - t1430 * t811) * t1087, 0, 0, 0, 0; t790 * t1634 + t789 * t1635 + t788 * t1636 + t787 * t1640, -t1036 * t1474 - t1421 * t892 - t1424 * t891 - t1427 * t890, (-t1171 * t1537 - t1172 * t1540 - t1173 * t1543 + t1174 * t1555) * t1054, (t1171 * t1546 + t1172 * t1549 + t1173 * t1552 - t1174 * t1558) * t1054, -t1036 * t1325 - t1037 * t1323 - t1038 * t1321 - t1039 * t1319, -0.2e1 * t1036 * t1233 - 0.2e1 * t1037 * t1231 - 0.2e1 * t1038 * t1228 - 0.2e1 * t1039 * t1225, -t1036 * t1317 - t1037 * t1313 - t1038 * t1311 - t1039 * t1309 + (-t1036 * t1316 - t1037 * t1312 - t1038 * t1310 - t1039 * t1308) * t1087, -t1036 * t1315 - t1037 * t1307 - t1038 * t1305 - t1039 * t1303 + (-t1036 * t1314 - t1037 * t1306 - t1038 * t1304 - t1039 * t1302) * t1087, (-t1422 * t861 - t1425 * t860 - t1428 * t859 - t1430 * t858) * t1087, (-t1564 * t745 + t906 * t754) * t956 + (-t1566 * t743 + t905 * t752) * t954 + (-t1568 * t741 + t904 * t750) * t952 + (-t1703 * t739 + t902 * t748) * t949 + (-t1422 * t734 - t1425 * t733 - t1428 * t732 - t1430 * t730) * t1087, (-t1564 * t744 + t906 * t755) * t956 + (-t1566 * t742 + t905 * t753) * t954 + (-t1568 * t740 + t904 * t751) * t952 + (-t1703 * t738 + t902 * t749) * t949 + (-t1422 * t737 - t1425 * t736 - t1428 * t735 - t1430 * t731) * t1087, 0, -t1043, -t1044, 0; t727, t809, t1721, t1720, t808, t795, t746, t747, t779, (t1573 * t806 + t909 * t841) * t956 + (t1575 * t802 + t908 * t837) * t954 + (t1577 * t798 + t907 * t833) * t952 + (t1704 * t793 + t903 * t823) * t949 + (t1434 * t770 + t1437 * t768 + t1440 * t766 + t1443 * t762) * t1087, (t1573 * t804 + t909 * t840) * t956 + (t1575 * t800 + t908 * t836) * t954 + (t1577 * t796 + t907 * t832) * t952 + (t1704 * t791 + t903 * t822) * t949 + (t1434 * t776 + t1437 * t774 + t1440 * t772 + t1443 * t764) * t1087, 0, 0, 0, 0; t903 ^ 2 * t950 + t907 ^ 2 * t953 + t908 ^ 2 * t955 + t909 ^ 2 * t957, t1023 * t1459 + t1585 * t979 + t1586 * t978 + t1587 * t977, (t1060 * t1262 * t903 + 0.2e1 * t1291 * t909 + 0.2e1 * t1294 * t908 + 0.2e1 * t1297 * t907) * t1054, (-t1032 * t903 * t1698 - 0.2e1 * t1292 * t909 - 0.2e1 * t1295 * t908 - 0.2e1 * t1298 * t907) * t1054, t1023 * t1324 + t1024 * t1416 + t1025 * t1414 + t1026 * t1412, 0.2e1 * t1023 * t1232 + 0.2e1 * t1024 * t1275 + 0.2e1 * t1025 * t1272 + 0.2e1 * t1026 * t1269, (t1023 * t1198 + t1024 * t1260 + t1025 * t1259 + t1026 * t1258) * t1087, (t1023 * t1197 + t1024 * t1257 + t1025 * t1256 + t1026 * t1255) * t1087, (t1023 * t1622 + t1585 * t942 + t1586 * t941 + t1587 * t940) * t1088, (t1573 * t807 + t909 * t838) * t956 + (t1575 * t803 + t908 * t834) * t954 + (t1577 * t799 + t907 * t830) * t952 + (t1704 * t794 + t903 * t820) * t949 + (t1434 * t771 + t1437 * t769 + t1440 * t767 + t1443 * t763) * t1087, (t1573 * t805 + t909 * t839) * t956 + (t1575 * t801 + t908 * t835) * t954 + (t1577 * t797 + t907 * t831) * t952 + (t1704 * t792 + t903 * t821) * t949 + (t1434 * t777 + t1437 * t775 + t1440 * t773 + t1443 * t765) * t1087, 0, 0, 0, t1022; t729, t1687, t1689, t1707, t1688, t1685, t1690, t1691, t756, (t1573 * t829 + t909 * t848) * t956 + (t1575 * t827 + t908 * t846) * t954 + (t1577 * t825 + t907 * t844) * t952 + (t1704 * t819 + t903 * t842) * t949 + (t1434 * t814 + t1437 * t813 + t1440 * t812 + t1443 * t810) * t1087, (t1573 * t828 + t909 * t849) * t956 + (t1575 * t826 + t908 * t847) * t954 + (t1577 * t824 + t907 * t845) * t952 + (t1704 * t818 + t903 * t843) * t949 + (t1434 * t817 + t1437 * t816 + t1440 * t815 + t1443 * t811) * t1087, 0, 0, 0, 0; t790 * t1631 + t1632 * t789 + t1633 * t788 + t1638 * t787, t1032 * t1474 + t1433 * t892 + t1436 * t891 + t1439 * t890, (t1175 * t1537 + t1176 * t1540 + t1177 * t1543 - t1178 * t1555) * t1054, (-t1175 * t1546 - t1176 * t1549 - t1177 * t1552 + t1178 * t1558) * t1054, t1032 * t1325 + t1033 * t1323 + t1034 * t1321 + t1035 * t1319, 0.2e1 * t1032 * t1233 + 0.2e1 * t1033 * t1231 + 0.2e1 * t1034 * t1228 + 0.2e1 * t1035 * t1225, t1032 * t1317 + t1033 * t1313 + t1034 * t1311 + t1035 * t1309 + (t1032 * t1316 + t1033 * t1312 + t1034 * t1310 + t1035 * t1308) * t1087, t1032 * t1315 + t1033 * t1307 + t1034 * t1305 + t1035 * t1303 + (t1032 * t1314 + t1033 * t1306 + t1034 * t1304 + t1035 * t1302) * t1087, (t1434 * t861 + t1437 * t860 + t1440 * t859 + t1443 * t858) * t1087, (t1573 * t745 + t909 * t754) * t956 + (t1575 * t743 + t908 * t752) * t954 + (t1577 * t741 + t907 * t750) * t952 + (t1704 * t739 + t903 * t748) * t949 + (t1434 * t734 + t1437 * t733 + t1440 * t732 + t1443 * t730) * t1087, (t1573 * t744 + t909 * t755) * t956 + (t1575 * t742 + t908 * t753) * t954 + (t1577 * t740 + t907 * t751) * t952 + (t1704 * t738 + t903 * t749) * t949 + (t1434 * t737 + t1437 * t736 + t1440 * t735 + t1443 * t731) * t1087, 0, t1044, -t1043, 0; t728, t1692, t1684, t1706, t1693, t1686, t1709, t1708, t757, (t806 * t991 + t841 * t936) * t956 + (t802 * t990 + t837 * t935) * t954 + (t798 * t989 + t833 * t934) * t952 + (t793 * t976 + t823 * t933) * t949 + (t1613 * t770 + t1615 * t768 + t1617 * t766 + t1621 * t762) * t1087, (t804 * t991 + t840 * t936) * t956 + (t800 * t990 + t836 * t935) * t954 + (t796 * t989 + t832 * t934) * t952 + (t791 * t976 + t822 * t933) * t949 + (t1613 * t776 + t1615 * t774 + t1617 * t772 + t1621 * t764) * t1087, 0, 0, 0, 0; t729, t1687, t1689, t1707, t1688, t1685, t1690, t1691, t756, (t807 * t991 + t838 * t936) * t956 + (t803 * t990 + t834 * t935) * t954 + (t799 * t989 + t830 * t934) * t952 + (t794 * t976 + t820 * t933) * t949 + (t1613 * t771 + t1615 * t769 + t1617 * t767 + t1621 * t763) * t1087, (t805 * t991 + t839 * t936) * t956 + (t801 * t990 + t835 * t935) * t954 + (t797 * t989 + t831 * t934) * t952 + (t792 * t976 + t821 * t933) * t949 + (t1613 * t777 + t1615 * t775 + t1617 * t773 + t1621 * t765) * t1087, 0, 0, 0, 0; t933 ^ 2 * t950 + t934 ^ 2 * t953 + t935 ^ 2 * t955 + t936 ^ 2 * t957, t950 * t973 + t953 * t980 + t955 * t981 + t957 * t982, (t1536 * t936 * t991 + t1539 * t935 * t990 + t1542 * t934 * t989 + t1407 * t976) * t1663, (-t1557 * t933 * t976 - t1395 * t936 - t1399 * t935 - t1403 * t934) * t1663, t1560 * t982 + t1561 * t981 + t1562 * t980 + t1563 * t973, 0.2e1 * t1354 * t982 + 0.2e1 * t1355 * t981 + 0.2e1 * t1356 * t980 + 0.2e1 * t1357 * t973, (t1057 * t1472 + t1065 * t1469 + t1067 * t1467 + t1069 * t1465) * t1662, (t1059 * t1472 + t1071 * t1469 + t1073 * t1467 + t1075 * t1465) * t1662, (t938 ^ 2 * t950 + t943 ^ 2 * t953 + t944 ^ 2 * t955 + t945 ^ 2 * t957) * t1088, (t829 * t991 + t848 * t936) * t956 + (t827 * t990 + t846 * t935) * t954 + (t825 * t989 + t844 * t934) * t952 + (t819 * t976 + t842 * t933) * t949 + (t1613 * t814 + t1615 * t813 + t1617 * t812 + t1621 * t810) * t1087, (t828 * t991 + t849 * t936) * t956 + (t826 * t990 + t847 * t935) * t954 + (t824 * t989 + t845 * t934) * t952 + (t818 * t976 + t843 * t933) * t949 + (t1613 * t817 + t1615 * t816 + t1617 * t815 + t1621 * t811) * t1087, 0, 0, 0, 1; t1624 * t790 + t1626 * t789 + t1628 * t788 + t1630 * t787, t1597 * t892 + t1599 * t891 + t1601 * t890 + t1602 * t888, (t1243 * t1537 + t1244 * t1540 + t1245 * t1543 + t1246 * t1555) * t1054, (-t1243 * t1546 - t1244 * t1549 - t1245 * t1552 - t1246 * t1558) * t1054, t1413 * t991 + t1415 * t990 + t1417 * t989 + t1419 * t976, 0.2e1 * t1270 * t991 + 0.2e1 * t1273 * t990 + 0.2e1 * t1276 * t989 + 0.2e1 * t1278 * t976, t976 * t1411 + t989 * t1406 + t990 * t1402 + t991 * t1398 + (t1397 * t945 + t1401 * t944 + t1405 * t943 + t1410 * t938) * t1087, t976 * t1409 + t989 * t1394 + t990 * t1391 + t991 * t1388 + (t1387 * t945 + t1390 * t944 + t1393 * t943 + t1408 * t938) * t1087, (t1613 * t861 + t1615 * t860 + t1617 * t859 + t1621 * t858) * t1087, (t745 * t991 + t754 * t936) * t956 + (t743 * t990 + t752 * t935) * t954 + (t741 * t989 + t750 * t934) * t952 + (t739 * t976 + t748 * t933) * t949 + (t1613 * t734 + t1615 * t733 + t1617 * t732 + t1621 * t730) * t1087, (t744 * t991 + t755 * t936) * t956 + (t742 * t990 + t753 * t935) * t954 + (t740 * t989 + t751 * t934) * t952 + (t738 * t976 + t749 * t933) * t949 + (t1613 * t737 + t1615 * t736 + t1617 * t735 + t1621 * t731) * t1087, 0, 0, 0, 0; t1634 * t786 + t1635 * t785 + t1636 * t784 + t1640 * t783, -t1037 * t1333 - t1038 * t1332 - t1039 * t1331 - t1329 * t966, (-t1060 * t1106 - t1072 * t1105 - t1074 * t1104 - t1076 * t1103) * t1054, (t1058 * t1106 + t1066 * t1105 + t1068 * t1104 + t1070 * t1103) * t1054, -t1037 * t1249 - t1038 * t1248 - t1039 * t1247 - t1234 * t966, -0.2e1 * t1037 * t1181 - 0.2e1 * t1038 * t1180 - 0.2e1 * t1039 * t1179 - 0.2e1 * t1170 * t966, (-t1065 * t1153 - t1067 * t1152 - t1069 * t1151 - t1150 * t966) * t1087, (-t1071 * t1153 - t1073 * t1152 - t1075 * t1151 - t1149 * t966) * t1087, (-t1420 * t942 - t1423 * t941 - t1426 * t940 - t1431 * t966) * t1088, t793 * t1461 + t798 * t1458 + t802 * t1455 + t806 * t1452 + t783 * t823 + t784 * t833 + t785 * t837 + t786 * t841 + (t1462 * t770 + t1463 * t768 + t1464 * t766 + t1471 * t762) * t1087, t791 * t1461 + t796 * t1458 + t800 * t1455 + t804 * t1452 + t783 * t822 + t784 * t832 + t785 * t836 + t786 * t840 + (t1462 * t776 + t1463 * t774 + t1464 * t772 + t1471 * t764) * t1087, 0, -t1043, -t1044, 0; t1631 * t786 + t1632 * t785 + t1633 * t784 + t1638 * t783, t1033 * t1333 + t1034 * t1332 + t1035 * t1331 + t1250, (t1060 * t1110 + t1072 * t1109 + t1074 * t1108 + t1076 * t1107) * t1054, (-t1058 * t1110 - t1066 * t1109 - t1068 * t1108 - t1070 * t1107) * t1054, t1033 * t1249 + t1034 * t1248 + t1035 * t1247 + t1045 * t1250, 0.2e1 * t1032 * t1232 * t966 + 0.2e1 * t1033 * t1181 + 0.2e1 * t1034 * t1180 + 0.2e1 * t1035 * t1179, (t1057 * t1157 + t1065 * t1156 + t1067 * t1155 + t1069 * t1154) * t1087, (t1059 * t1157 + t1071 * t1156 + t1073 * t1155 + t1075 * t1154) * t1087, (t1432 * t942 + t1435 * t941 + t1438 * t940 + t1442 * t937) * t1088, t794 * t1461 + t799 * t1458 + t803 * t1455 + t807 * t1452 + t783 * t820 + t784 * t830 + t785 * t834 + t786 * t838 + (t1462 * t771 + t1463 * t769 + t1464 * t767 + t1471 * t763) * t1087, t792 * t1461 + t797 * t1458 + t801 * t1455 + t805 * t1452 + t783 * t821 + t784 * t831 + t785 * t835 + t786 * t839 + (t1462 * t777 + t1463 * t775 + t1464 * t773 + t1471 * t765) * t1087, 0, t1044, -t1043, 0; t1624 * t786 + t1626 * t785 + t1628 * t784 + t1630 * t783, t1451 * t991 + t1454 * t990 + t1457 * t989 + t1334, (-t1060 * t1118 - t1072 * t1117 - t1074 * t1116 - t1076 * t1115) * t1054, (t1058 * t1118 + t1066 * t1117 + t1068 * t1116 + t1070 * t1115) * t1054, t1045 * t1334 + t1318 * t991 + t1320 * t990 + t1322 * t989, 0.2e1 * t1224 * t991 + 0.2e1 * t1227 * t990 + 0.2e1 * t1230 * t989 + 0.2e1 * t1277 * t1595, (t1057 * t1135 + t1065 * t1134 + t1067 * t1133 + t1069 * t1132) * t1087, (t1059 * t1135 + t1071 * t1134 + t1073 * t1133 + t1075 * t1132) * t1087, (t1466 * t969 + t1468 * t968 + t1470 * t967 + t1473 * t966) * t1088, t819 * t1461 + t825 * t1458 + t827 * t1455 + t829 * t1452 + t783 * t842 + t784 * t844 + t785 * t846 + t786 * t848 + (t1462 * t814 + t1463 * t813 + t1464 * t812 + t1471 * t810) * t1087, t818 * t1461 + t824 * t1458 + t826 * t1455 + t828 * t1452 + t783 * t843 + t784 * t845 + t785 * t847 + t786 * t849 + (t1462 * t817 + t1463 * t816 + t1464 * t815 + t1471 * t811) * t1087, 0, 0, 0, 0; t783 * t787 + t784 * t788 + t785 * t789 + t786 * t790, t1461 * t888 + t1335 + t1336 + t1337, (-t1060 * t1145 - t1072 * t1144 - t1074 * t1143 - t1076 * t1142) * t1054, (t1058 * t1145 + t1066 * t1144 + t1068 * t1143 + t1070 * t1142) * t1054, t1047 * t1337 + t1048 * t1336 + t1049 * t1335 + t1325 * t966, 0.2e1 * t1233 * t966 + 0.2e1 * t1268 * t1641 + 0.2e1 * t1271 * t1642 + 0.2e1 * t1274 * t1643, t966 * t1317 + t1065 * t1340 + t1067 * t1339 + t1069 * t1338 + (t1308 * t969 + t1310 * t968 + t1312 * t967 + t1316 * t966) * t1087, t966 * t1315 + t1071 * t1340 + t1073 * t1339 + t1075 * t1338 + (t1302 * t969 + t1304 * t968 + t1306 * t967 + t1314 * t966) * t1087, (t1462 * t861 + t1463 * t860 + t1464 * t859 + t1471 * t858) * t1087, t739 * t1461 + t741 * t1458 + t743 * t1455 + t745 * t1452 + t783 * t748 + t784 * t750 + t785 * t752 + t786 * t754 + (t1462 * t734 + t1463 * t733 + t1464 * t732 + t1471 * t730) * t1087, t738 * t1461 + t740 * t1458 + t742 * t1455 + t744 * t1452 + t783 * t749 + t784 * t751 + t785 * t753 + t786 * t755 + (t1462 * t737 + t1463 * t736 + t1464 * t735 + t1471 * t731) * t1087, 1, 0, 0, 0;];
tau_reg  = t1;
