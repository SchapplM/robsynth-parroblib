% Calculate minimal parameter regressor of inverse dynamics forces for
% P4PRRRR8V2G3A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% xDDP [4x1]
%   Generalized platform accelerations
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d2,d3,d4,theta1]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tauX_reg [4x15]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 11:30
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX_reg = P4PRRRR8V2G3A0_invdyn_para_pf_regmin(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,4),zeros(3,1),zeros(4,3),zeros(4,3),zeros(8,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: xDP has to be [4x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [4 1]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: xDDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: qJ has to be [3x4] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: pkin has to be [8x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4PRRRR8V2G3A0_invdyn_para_pf_regmin: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 11:26:24
% EndTime: 2020-08-07 11:26:51
% DurationCPUTime: 29.31s
% Computational Cost: add. (185813->822), mult. (377780->1491), div. (10692->22), fcn. (300388->30), ass. (0->568)
t372 = sin(qJ(2,4));
t373 = cos(qJ(3,4));
t563 = t372 * t373;
t374 = cos(qJ(2,4));
t399 = pkin(7) + pkin(6);
t335 = t374 * t399;
t704 = pkin(2) * t372 - t335;
t265 = pkin(3) * t563 + t704;
t673 = t373 * pkin(3);
t333 = pkin(2) + t673;
t370 = cos(pkin(4));
t371 = sin(qJ(3,4));
t578 = t370 * t371;
t299 = t333 * t578;
t368 = sin(pkin(4));
t591 = t368 * t373;
t198 = t265 * t591 + t299;
t195 = 0.1e1 / t198;
t384 = sin(qJ(2,3));
t389 = cos(qJ(3,3));
t560 = t384 * t389;
t390 = cos(qJ(2,3));
t342 = t390 * t399;
t703 = pkin(2) * t384 - t342;
t266 = pkin(3) * t560 + t703;
t672 = t389 * pkin(3);
t336 = pkin(2) + t672;
t383 = sin(qJ(3,3));
t575 = t370 * t383;
t300 = t336 * t575;
t584 = t368 * t389;
t220 = t266 * t584 + t300;
t211 = 0.1e1 / t220;
t386 = sin(qJ(2,2));
t391 = cos(qJ(3,2));
t558 = t386 * t391;
t392 = cos(qJ(2,2));
t343 = t392 * t399;
t702 = pkin(2) * t386 - t343;
t267 = pkin(3) * t558 + t702;
t671 = t391 * pkin(3);
t337 = pkin(2) + t671;
t385 = sin(qJ(3,2));
t573 = t370 * t385;
t301 = t337 * t573;
t583 = t368 * t391;
t221 = t267 * t583 + t301;
t213 = 0.1e1 / t221;
t388 = sin(qJ(2,1));
t393 = cos(qJ(3,1));
t556 = t388 * t393;
t394 = cos(qJ(2,1));
t344 = t394 * t399;
t701 = pkin(2) * t388 - t344;
t268 = pkin(3) * t556 + t701;
t670 = t393 * pkin(3);
t338 = pkin(2) + t670;
t387 = sin(qJ(3,1));
t571 = t370 * t387;
t302 = t338 * t571;
t582 = t368 * t393;
t222 = t268 * t582 + t302;
t215 = 0.1e1 / t222;
t256 = pkin(3) * t571 + t368 * t701;
t365 = t393 ^ 2;
t675 = pkin(3) * t365;
t545 = t388 * t675;
t190 = 0.1e1 / (pkin(2) * t571 + t256 * t393 + t368 * t545);
t255 = pkin(3) * t573 + t368 * t702;
t364 = t391 ^ 2;
t676 = pkin(3) * t364;
t546 = t386 * t676;
t189 = 0.1e1 / (pkin(2) * t573 + t255 * t391 + t368 * t546);
t254 = pkin(3) * t575 + t368 * t703;
t363 = t389 ^ 2;
t677 = pkin(3) * t363;
t547 = t384 * t677;
t188 = 0.1e1 / (pkin(2) * t575 + t254 * t389 + t368 * t547);
t253 = pkin(3) * t578 + t368 * t704;
t362 = t373 ^ 2;
t678 = pkin(3) * t362;
t548 = t372 * t678;
t187 = 0.1e1 / (pkin(2) * t578 + t253 * t373 + t368 * t548);
t334 = t372 * t399;
t304 = pkin(2) * t374 + t334;
t367 = sin(pkin(8));
t369 = cos(pkin(8));
t576 = t370 * t374;
t580 = t369 * t370;
t171 = (t367 * t372 - t369 * t576) * t673 + t704 * t367 - t304 * t580;
t631 = t171 * t187;
t339 = t384 * t399;
t308 = pkin(2) * t390 + t339;
t569 = t370 * t390;
t178 = (t367 * t384 - t369 * t569) * t672 + t703 * t367 - t308 * t580;
t561 = t383 * t389;
t400 = xP(4);
t360 = sin(t400);
t361 = cos(t400);
t402 = koppelP(3,2);
t406 = koppelP(3,1);
t290 = t360 * t406 + t361 * t402;
t376 = legFrame(3,2);
t350 = sin(t376);
t354 = cos(t376);
t395 = xDP(4);
t397 = xDP(2);
t398 = xDP(1);
t440 = t360 * t402 - t361 * t406;
t175 = -t350 * (t395 * t440 - t397) + (t290 * t395 - t398) * t354;
t396 = xDP(3);
t332 = t396 * t367;
t168 = t175 * t369 + t332;
t566 = t370 * t396;
t574 = t370 * t384;
t132 = ((t175 * t574 - t390 * t396) * t369 + (t175 * t390 + t384 * t566) * t367) * t383 + t168 * t584;
t653 = t132 ^ 2 / t220 ^ 2;
t451 = t188 * t561 * t653;
t424 = t178 * t451;
t340 = t386 * t399;
t309 = pkin(2) * t392 + t340;
t568 = t370 * t392;
t180 = (t367 * t386 - t369 * t568) * t671 + t702 * t367 - t309 * t580;
t559 = t385 * t391;
t403 = koppelP(2,2);
t407 = koppelP(2,1);
t291 = t360 * t407 + t361 * t403;
t377 = legFrame(2,2);
t351 = sin(t377);
t355 = cos(t377);
t439 = t360 * t403 - t361 * t407;
t176 = -t351 * (t395 * t439 - t397) + (t291 * t395 - t398) * t355;
t169 = t176 * t369 + t332;
t572 = t370 * t386;
t133 = ((t176 * t572 - t392 * t396) * t369 + (t176 * t392 + t386 * t566) * t367) * t385 + t169 * t583;
t652 = t133 ^ 2 / t221 ^ 2;
t450 = t189 * t559 * t652;
t423 = t180 * t450;
t341 = t388 * t399;
t310 = pkin(2) * t394 + t341;
t567 = t370 * t394;
t182 = (t367 * t388 - t369 * t567) * t670 + t701 * t367 - t310 * t580;
t557 = t387 * t393;
t404 = koppelP(1,2);
t408 = koppelP(1,1);
t292 = t360 * t408 + t361 * t404;
t378 = legFrame(1,2);
t352 = sin(t378);
t356 = cos(t378);
t438 = t360 * t404 - t361 * t408;
t177 = -t352 * (t395 * t438 - t397) + (t292 * t395 - t398) * t356;
t170 = t177 * t369 + t332;
t570 = t370 * t388;
t134 = ((t177 * t570 - t394 * t396) * t369 + (t177 * t394 + t388 * t566) * t367) * t387 + t170 * t582;
t651 = t134 ^ 2 / t222 ^ 2;
t449 = t190 * t557 * t651;
t422 = t182 * t449;
t720 = t368 * (t393 * t701 + t545);
t719 = t368 * (t391 * t702 + t546);
t718 = t368 * (t389 * t703 + t547);
t717 = t368 * (t373 * t704 + t548);
t458 = g(1) * t356 - g(2) * t352;
t674 = t367 * g(3);
t252 = t369 * t458 - t674;
t594 = t367 * t370;
t297 = t368 * g(1) + g(2) * t594;
t298 = g(1) * t594 - t368 * g(2);
t315 = g(3) * t580;
t648 = t134 * t215;
t529 = t399 * t648;
t462 = t387 * t529;
t284 = t388 * t338 - t344;
t579 = t369 * t396;
t148 = (t338 * t394 + t341) * t170 * t370 - (t177 * t367 - t579) * t284;
t234 = t284 * t582 + t302;
t644 = t148 / t234;
t117 = t462 - t644;
t366 = t395 ^ 2;
t379 = xDDP(4);
t381 = xDDP(2);
t206 = -t366 * t292 - t379 * t438 + t381;
t382 = xDDP(1);
t210 = -t292 * t379 + t366 * t438 + t382;
t380 = xDDP(3);
t345 = pkin(2) ^ 2 + t399 ^ 2;
t409 = pkin(3) ^ 2;
t518 = t387 * t644;
t555 = 0.2e1 * pkin(2) * pkin(3);
t470 = (-t399 * t518 + (t365 * t409 + t393 * t555 + t345) * t648) * t190 * t648;
t410 = 0.1e1 / pkin(3);
t517 = t410 * t644;
t280 = t367 * t394 + t369 * t570;
t586 = t368 * t387;
t426 = pkin(3) * t586 - t370 * t701;
t166 = -t280 * t675 - t310 * t367 * t393 + (pkin(2) * t586 + t393 * t426) * t369;
t632 = t166 * t190;
t194 = t310 * t369 + t367 * t426;
t274 = t367 * t570 - t369 * t394;
t585 = t368 * t388;
t595 = t367 * t368;
t680 = pkin(2) * t387;
t156 = -(t274 * t356 - t352 * t585) * t675 + (t194 * t356 + t256 * t352) * t393 + (t370 * t352 + t356 * t595) * t680;
t636 = t156 * t190;
t155 = (t274 * t352 + t356 * t585) * t675 + (-t194 * t352 + t256 * t356) * t393 + (-t352 * t595 + t370 * t356) * t680;
t637 = t155 * t190;
t96 = t393 * t470 + (pkin(2) * t517 - t117 * t393) * t190 * t644 + t206 * t637 + t210 * t636 + t380 * t632;
t82 = t297 * t352 - t298 * t356 - t368 * t96 - t315;
t656 = t82 * t394;
t72 = t252 * t388 - t656;
t459 = g(1) * t355 - g(2) * t351;
t251 = t459 * t369 - t674;
t649 = t133 * t213;
t531 = t399 * t649;
t463 = t385 * t531;
t283 = t386 * t337 - t343;
t147 = (t337 * t392 + t340) * t169 * t370 - (t176 * t367 - t579) * t283;
t233 = t283 * t583 + t301;
t645 = t147 / t233;
t116 = t463 - t645;
t205 = -t366 * t291 - t379 * t439 + t381;
t209 = -t291 * t379 + t366 * t439 + t382;
t520 = t385 * t645;
t471 = (-t399 * t520 + (t364 * t409 + t391 * t555 + t345) * t649) * t189 * t649;
t519 = t410 * t645;
t279 = t367 * t392 + t369 * t572;
t588 = t368 * t385;
t427 = pkin(3) * t588 - t370 * t702;
t165 = -t279 * t676 - t309 * t367 * t391 + (pkin(2) * t588 + t391 * t427) * t369;
t633 = t165 * t189;
t193 = t309 * t369 + t367 * t427;
t273 = t367 * t572 - t369 * t392;
t587 = t368 * t386;
t681 = pkin(2) * t385;
t154 = -(t273 * t355 - t351 * t587) * t676 + (t193 * t355 + t255 * t351) * t391 + (t370 * t351 + t355 * t595) * t681;
t638 = t154 * t189;
t153 = (t273 * t351 + t355 * t587) * t676 + (-t193 * t351 + t255 * t355) * t391 + (-t351 * t595 + t370 * t355) * t681;
t639 = t153 * t189;
t95 = t391 * t471 + (pkin(2) * t519 - t116 * t391) * t189 * t645 + t205 * t639 + t209 * t638 + t380 * t633;
t81 = t297 * t351 - t298 * t355 - t368 * t95 - t315;
t657 = t81 * t392;
t71 = t251 * t386 - t657;
t460 = g(1) * t354 - g(2) * t350;
t250 = t460 * t369 - t674;
t650 = t132 * t211;
t533 = t399 * t650;
t464 = t383 * t533;
t282 = t384 * t336 - t342;
t146 = (t336 * t390 + t339) * t168 * t370 - (t175 * t367 - t579) * t282;
t232 = t282 * t584 + t300;
t646 = t146 / t232;
t115 = t464 - t646;
t204 = -t366 * t290 - t379 * t440 + t381;
t208 = -t290 * t379 + t366 * t440 + t382;
t522 = t383 * t646;
t472 = (-t399 * t522 + (t363 * t409 + t389 * t555 + t345) * t650) * t188 * t650;
t521 = t410 * t646;
t278 = t367 * t390 + t369 * t574;
t590 = t368 * t383;
t428 = pkin(3) * t590 - t370 * t703;
t164 = -t278 * t677 - t308 * t367 * t389 + (pkin(2) * t590 + t389 * t428) * t369;
t634 = t164 * t188;
t192 = t308 * t369 + t367 * t428;
t272 = t367 * t574 - t369 * t390;
t589 = t368 * t384;
t682 = pkin(2) * t383;
t152 = -(t272 * t354 - t350 * t589) * t677 + (t192 * t354 + t254 * t350) * t389 + (t370 * t350 + t354 * t595) * t682;
t640 = t152 * t188;
t151 = (t272 * t350 + t354 * t589) * t677 + (-t192 * t350 + t254 * t354) * t389 + (-t350 * t595 + t370 * t354) * t682;
t641 = t151 * t188;
t94 = t389 * t472 + (pkin(2) * t521 - t115 * t389) * t188 * t646 + t204 * t641 + t208 * t640 + t380 * t634;
t80 = t297 * t350 - t298 * t354 - t368 * t94 - t315;
t658 = t80 * t390;
t70 = t250 * t384 - t658;
t375 = legFrame(4,2);
t349 = sin(t375);
t353 = cos(t375);
t461 = g(1) * t353 - g(2) * t349;
t249 = t461 * t369 - t674;
t401 = koppelP(4,2);
t405 = koppelP(4,1);
t289 = t360 * t405 + t361 * t401;
t441 = t360 * t401 - t361 * t405;
t174 = -t349 * (t395 * t441 - t397) + (t289 * t395 - t398) * t353;
t167 = t174 * t369 + t332;
t577 = t370 * t372;
t128 = ((t174 * t577 - t374 * t396) * t369 + (t174 * t374 + t372 * t566) * t367) * t371 + t167 * t591;
t654 = t128 * t195;
t535 = t399 * t654;
t465 = t371 * t535;
t281 = t372 * t333 - t335;
t142 = t167 * (t333 * t374 + t334) * t370 - (t174 * t367 - t579) * t281;
t225 = t281 * t591 + t299;
t647 = t142 / t225;
t113 = t465 - t647;
t203 = -t366 * t289 - t379 * t441 + t381;
t207 = -t289 * t379 + t366 * t441 + t382;
t527 = t371 * t647;
t473 = (-t399 * t527 + (t362 * t409 + t373 * t555 + t345) * t654) * t187 * t654;
t526 = t410 * t647;
t271 = t367 * t374 + t369 * t577;
t593 = t368 * t371;
t429 = pkin(3) * t593 - t370 * t704;
t163 = -t271 * t678 - t304 * t367 * t373 + (pkin(2) * t593 + t373 * t429) * t369;
t635 = t163 * t187;
t191 = t304 * t369 + t367 * t429;
t269 = t367 * t577 - t369 * t374;
t592 = t368 * t372;
t683 = pkin(2) * t371;
t150 = (t269 * t349 + t353 * t592) * t678 + (-t191 * t349 + t253 * t353) * t373 + (-t349 * t595 + t370 * t353) * t683;
t642 = t150 * t187;
t149 = (-t269 * t353 + t349 * t592) * t678 + (t191 * t353 + t253 * t349) * t373 + (t370 * t349 + t353 * t595) * t683;
t643 = t149 * t187;
t90 = t373 * t473 + (pkin(2) * t526 - t113 * t373) * t187 * t647 + t203 * t642 + t207 * t643 + t380 * t635;
t68 = t297 * t349 - t298 * t353 - t368 * t90 - t315;
t659 = t68 * t374;
t65 = t249 * t372 - t659;
t708 = t333 * t370;
t707 = t336 * t370;
t706 = t337 * t370;
t705 = t338 * t370;
t700 = -t206 * t352 + t210 * t356;
t699 = -t205 * t351 + t209 * t355;
t698 = -t204 * t350 + t208 * t354;
t697 = -t203 * t349 + t207 * t353;
t235 = t371 * t269 + t367 * t591;
t236 = t371 * t271 + t369 * t591;
t536 = t374 * t654;
t45 = (-((t368 * t536 + t370 * t526) * t678 + ((-t527 + t535) * t372 + pkin(2) * t536) * t591 + t113 * t370) * t654 + t235 * t380 - (t374 * t368 * t526 + (t362 * t370 - t563 * t593 - t370) * t654) * t647 - t697 * t236) * t187;
t692 = 0.2e1 * t45;
t238 = t383 * t272 + t367 * t584;
t240 = t383 * t278 + t369 * t584;
t534 = t390 * t650;
t46 = (-((t368 * t534 + t370 * t521) * t677 + ((-t522 + t533) * t384 + pkin(2) * t534) * t584 + t115 * t370) * t650 + t238 * t380 - (t390 * t368 * t521 + (t363 * t370 - t560 * t590 - t370) * t650) * t646 - t698 * t240) * t188;
t691 = 0.2e1 * t46;
t239 = t385 * t273 + t367 * t583;
t241 = t385 * t279 + t369 * t583;
t532 = t392 * t649;
t47 = (-((t368 * t532 + t370 * t519) * t676 + ((-t520 + t531) * t386 + pkin(2) * t532) * t583 + t116 * t370) * t649 + t239 * t380 - (t392 * t368 * t519 + (t364 * t370 - t558 * t588 - t370) * t649) * t645 - t699 * t241) * t189;
t690 = 0.2e1 * t47;
t237 = t387 * t274 + t367 * t582;
t242 = t280 * t387 + t369 * t582;
t530 = t394 * t648;
t48 = (-((t368 * t530 + t370 * t517) * t675 + ((-t518 + t529) * t388 + pkin(2) * t530) * t582 + t117 * t370) * t648 + t237 * t380 - (t394 * t368 * t517 + (t365 * t370 - t556 * t586 - t370) * t648) * t644 - t700 * t242) * t190;
t689 = 0.2e1 * t48;
t469 = t195 * t526;
t452 = t128 * t469;
t684 = pkin(6) / 0.2e1;
t562 = t380 * t410;
t565 = t370 * t410;
t581 = t368 * t410;
t173 = (t367 * t576 + t369 * t372) * t673 + t304 * t594 + t369 * t704;
t630 = t173 * t187;
t679 = pkin(2) * t410;
t76 = t562 * t630 - t473 * t565 - (-t370 * t465 + (-t265 * t371 * t581 + t370 * (t373 * t679 + t362)) * t647) * t469 + t697 * t410 * t631;
t688 = -0.2e1 * pkin(2) * t452 - 0.2e1 * t76 * t684;
t468 = t211 * t521;
t448 = t132 * t468;
t184 = (t367 * t569 + t369 * t384) * t672 + t308 * t594 + t369 * t703;
t626 = t184 * t188;
t629 = t178 * t188;
t87 = t562 * t626 - t472 * t565 - (-t370 * t464 + (-t266 * t383 * t581 + t370 * (t389 * t679 + t363)) * t646) * t468 + t698 * t410 * t629;
t687 = -0.2e1 * pkin(2) * t448 - 0.2e1 * t87 * t684;
t467 = t213 * t519;
t447 = t133 * t467;
t185 = (t367 * t568 + t369 * t386) * t671 + t309 * t594 + t369 * t702;
t625 = t185 * t189;
t628 = t180 * t189;
t88 = t562 * t625 - t471 * t565 - (-t370 * t463 + (-t267 * t385 * t581 + t370 * (t391 * t679 + t364)) * t645) * t467 + t699 * t410 * t628;
t686 = -0.2e1 * pkin(2) * t447 - 0.2e1 * t88 * t684;
t466 = t215 * t517;
t446 = t134 * t466;
t186 = (t367 * t567 + t369 * t388) * t670 + t310 * t594 + t369 * t701;
t624 = t186 * t190;
t627 = t182 * t190;
t89 = t562 * t624 - t470 * t565 - (-t370 * t462 + (-t268 * t387 * t581 + t370 * (t393 * t679 + t365)) * t644) * t466 + t700 * t410 * t627;
t685 = -0.2e1 * pkin(2) * t446 - 0.2e1 * t89 * t684;
t669 = t381 - g(2);
t668 = t382 - g(1);
t667 = t371 * t45;
t666 = t374 * t45;
t665 = t383 * t46;
t664 = t385 * t47;
t663 = t387 * t48;
t662 = t390 * t46;
t661 = t392 * t47;
t660 = t394 * t48;
t655 = t128 ^ 2 / t198 ^ 2;
t199 = t289 * t353 - t349 * t441;
t623 = t187 * t199;
t622 = t187 * t235;
t200 = t290 * t354 - t350 * t440;
t621 = t188 * t200;
t620 = t188 * t238;
t201 = t291 * t355 - t351 * t439;
t619 = t189 * t201;
t618 = t189 * t239;
t202 = t292 * t356 - t352 * t438;
t617 = t190 * t202;
t616 = t190 * t237;
t607 = t236 * t349;
t606 = t236 * t353;
t605 = t240 * t350;
t604 = t240 * t354;
t603 = t241 * t351;
t602 = t241 * t355;
t601 = t242 * t352;
t600 = t242 * t356;
t599 = t249 * t374;
t598 = t250 * t390;
t597 = t251 * t392;
t596 = t252 * t394;
t564 = t371 * t373;
t544 = t187 * t667;
t543 = t187 * t373 * t45;
t542 = t188 * t665;
t541 = t188 * t389 * t46;
t540 = t189 * t664;
t539 = t189 * t391 * t47;
t538 = t190 * t663;
t537 = t190 * t393 * t48;
t411 = 0.1e1 / pkin(3) ^ 2;
t528 = t142 ^ 2 * t411 / t225 ^ 2;
t525 = t146 ^ 2 / t232 ^ 2 * t411;
t524 = t147 ^ 2 / t233 ^ 2 * t411;
t523 = t148 ^ 2 / t234 ^ 2 * t411;
t515 = t171 * t623;
t514 = t349 * t631;
t513 = t353 * t631;
t512 = t350 * t629;
t511 = t354 * t629;
t509 = t178 * t621;
t508 = t351 * t628;
t507 = t355 * t628;
t505 = t180 * t619;
t504 = t352 * t627;
t503 = t356 * t627;
t501 = t182 * t617;
t500 = t236 * t623;
t499 = t187 * t607;
t498 = t187 * t606;
t497 = t240 * t621;
t496 = t188 * t605;
t495 = t188 * t604;
t494 = t241 * t619;
t493 = t189 * t603;
t492 = t189 * t602;
t491 = t242 * t617;
t490 = t190 * t601;
t489 = t190 * t600;
t484 = t171 * t544;
t483 = t171 * t543;
t482 = t178 * t542;
t481 = t178 * t541;
t480 = t46 * t509;
t479 = t180 * t540;
t478 = t180 * t539;
t477 = t47 * t505;
t476 = t182 * t538;
t475 = t182 * t537;
t474 = t48 * t501;
t453 = t187 * t564 * t655;
t445 = (t528 + t655) * t372 - t666;
t444 = (t525 + t653) * t384 - t662;
t443 = (t524 + t652) * t386 - t661;
t442 = (t523 + t651) * t388 - t660;
t437 = t333 * t595;
t436 = t336 * t595;
t435 = t337 * t595;
t434 = t338 * t595;
t433 = 0.2e1 * t452;
t432 = 0.2e1 * t448;
t431 = 0.2e1 * t447;
t430 = 0.2e1 * t446;
t425 = t171 * t453;
t419 = pkin(2) * t692 - pkin(6) * t528;
t418 = pkin(2) * t691 - pkin(6) * t525;
t417 = pkin(2) * t690 - pkin(6) * t524;
t416 = pkin(2) * t689 - pkin(6) * t523;
t287 = t369 * pkin(2) + t399 * t594;
t288 = pkin(2) * t594 - t369 * t399;
t415 = t269 * t678 - (t287 * t374 - t288 * t372) * t373;
t414 = t272 * t677 - (t287 * t390 - t288 * t384) * t389;
t413 = t273 * t676 - (t287 * t392 - t288 * t386) * t391;
t412 = t274 * t675 - (t287 * t394 - t288 * t388) * t393;
t347 = t369 * g(3);
t286 = -t360 * t379 - t361 * t366;
t285 = -t360 * t366 + t361 * t379;
t248 = t367 * t458 + t347;
t247 = t459 * t367 + t347;
t246 = t460 * t367 + t347;
t245 = t461 * t367 + t347;
t124 = ((t292 * t412 - t438 * t720 + (-t292 * t434 - t438 * t705) * t387) * t356 + (-t292 * t720 - t412 * t438 + (-t292 * t705 + t434 * t438) * t387) * t352) * t215;
t123 = ((t291 * t413 - t439 * t719 + (-t291 * t435 - t439 * t706) * t385) * t355 + (-t291 * t719 - t413 * t439 + (-t291 * t706 + t435 * t439) * t385) * t351) * t213;
t122 = ((t290 * t414 - t440 * t718 + (-t290 * t436 - t440 * t707) * t383) * t354 + (-t290 * t718 - t414 * t440 + (-t290 * t707 + t436 * t440) * t383) * t350) * t211;
t121 = ((t415 * t289 - t441 * t717 + (-t289 * t437 - t441 * t708) * t371) * t353 + (-t289 * t717 - t441 * t415 + (-t289 * t708 + t437 * t441) * t371) * t349) * t195;
t112 = (-0.2e1 * t365 + 0.1e1) * t651;
t111 = (-0.2e1 * t364 + 0.1e1) * t652;
t110 = (-0.2e1 * t363 + 0.1e1) * t653;
t109 = (-0.2e1 * t362 + 0.1e1) * t655;
t93 = -t352 * g(1) - t356 * g(2) + t96;
t92 = -t351 * g(1) - t355 * g(2) + t95;
t91 = -t350 * g(1) - t354 * g(2) + t94;
t86 = -t248 * t368 + t370 * t93;
t85 = -t247 * t368 + t370 * t92;
t84 = -t246 * t368 + t370 * t91;
t83 = -g(1) * t349 - g(2) * t353 + t90;
t75 = t388 * t82 + t596;
t74 = t386 * t81 + t597;
t73 = t384 * t80 + t598;
t69 = -t245 * t368 + t370 * t83;
t66 = t372 * t68 + t599;
t64 = -t387 * t523 + t89 * t393;
t63 = t89 * t387 + t393 * t523;
t62 = -t385 * t524 + t88 * t391;
t61 = t88 * t385 + t391 * t524;
t60 = -t383 * t525 + t87 * t389;
t59 = t87 * t383 + t389 * t525;
t58 = -t371 * t528 + t76 * t373;
t57 = t76 * t371 + t373 * t528;
t53 = t388 * t89 + t394 * t430;
t52 = t386 * t88 + t392 * t431;
t51 = t384 * t87 + t390 * t432;
t49 = t372 * t76 + t374 * t433;
t44 = t386 * t47 + t392 * t652;
t43 = t386 * t652 - t661;
t42 = t388 * t48 + t394 * t651;
t41 = t384 * t46 + t390 * t653;
t40 = t388 * t651 - t660;
t39 = t384 * t653 - t662;
t38 = t372 * t45 + t374 * t655;
t37 = t372 * t655 - t666;
t36 = (t393 * t430 + t663) * t387;
t35 = (t391 * t431 + t664) * t385;
t34 = (t389 * t432 + t665) * t383;
t33 = (t373 * t433 + t667) * t371;
t32 = t557 * t689 + (0.4e1 * t365 - 0.2e1) * t446;
t31 = t559 * t690 + (0.4e1 * t364 - 0.2e1) * t447;
t30 = t561 * t691 + (0.4e1 * t363 - 0.2e1) * t448;
t29 = t564 * t692 + (0.4e1 * t362 - 0.2e1) * t452;
t28 = pkin(2) * t651 - t48 * pkin(6) + (-t248 * t370 - t368 * t93) * t388 + t596;
t27 = pkin(2) * t652 - t47 * pkin(6) + (-t247 * t370 - t368 * t92) * t386 + t597;
t26 = pkin(2) * t653 - t46 * pkin(6) + (-t246 * t370 - t368 * t91) * t384 + t598;
t25 = pkin(2) * t655 - t45 * pkin(6) + (-t245 * t370 - t368 * t83) * t372 + t599;
t24 = t28 * t393 - t387 * t86;
t23 = t28 * t387 + t393 * t86;
t22 = t27 * t391 - t385 * t85;
t21 = t27 * t385 + t391 * t85;
t20 = t26 * t389 - t383 * t84;
t19 = t26 * t383 + t389 * t84;
t18 = t25 * t373 - t371 * t69;
t17 = t25 * t371 + t373 * t69;
t16 = t393 * t685 + (-t416 - t72) * t387;
t15 = t391 * t686 + (-t417 - t71) * t385;
t14 = t389 * t687 + (-t418 - t70) * t383;
t13 = (t416 - t656) * t393 + t387 * t685 + t252 * t556;
t12 = (t417 - t657) * t391 + t385 * t686 + t251 * t558;
t11 = (t418 - t658) * t389 + t383 * t687 + t250 * t560;
t10 = t373 * t688 + (-t419 - t65) * t371;
t9 = (t419 - t659) * t373 + t371 * t688 + t249 * t563;
t8 = (-t387 * t53 - t393 * t442) * t368 + t370 * t64;
t7 = (t387 * t442 - t393 * t53) * t368 - t370 * t63;
t6 = (-t385 * t52 - t391 * t443) * t368 + t370 * t62;
t5 = (t385 * t443 - t391 * t52) * t368 - t370 * t61;
t4 = (-t383 * t51 - t389 * t444) * t368 + t370 * t60;
t3 = (t383 * t444 - t389 * t51) * t368 - t370 * t59;
t2 = (-t371 * t49 - t373 * t445) * t368 + t370 * t58;
t1 = (t371 * t445 - t373 * t49) * t368 - t370 * t57;
t50 = [t93 * t636 + t92 * t638 + t91 * t640 + t83 * t643, -t45 * t498 - t46 * t495 - t47 * t492 - t48 * t489, -t65 * t498 - t70 * t495 - t71 * t492 - t72 * t489 + (-t37 * t643 - t39 * t640 - t40 * t636 - t43 * t638) * t368, -t66 * t498 - t73 * t495 - t74 * t492 - t75 * t489 + (-t38 * t643 - t41 * t640 - t42 * t636 - t44 * t638) * t368, -t33 * t498 - t34 * t495 - t35 * t492 - t36 * t489 + (-t353 * t425 - t354 * t424 - t355 * t423 - t356 * t422) * t410, -t29 * t498 - t30 * t495 - t31 * t492 - t32 * t489 + (t109 * t513 + t110 * t511 + t111 * t507 + t112 * t503) * t410, -t57 * t498 - t59 * t495 - t61 * t492 - t63 * t489 + (t353 * t484 + t354 * t482 + t355 * t479 + t356 * t476) * t410, -t58 * t498 - t60 * t495 - t62 * t492 - t64 * t489 + (t353 * t483 + t354 * t481 + t355 * t478 + t356 * t475) * t410, (t503 * t89 + t507 * t88 + t511 * t87 + t513 * t76) * t410, (-t13 * t600 + t156 * t8) * t190 + (-t12 * t602 + t154 * t6) * t189 + (-t11 * t604 + t152 * t4) * t188 + (t149 * t2 - t606 * t9) * t187 + (t17 * t513 + t19 * t511 + t21 * t507 + t23 * t503) * t410, (t156 * t7 - t16 * t600) * t190 + (-t15 * t602 + t154 * t5) * t189 + (-t14 * t604 + t152 * t3) * t188 + (t1 * t149 - t10 * t606) * t187 + (t18 * t513 + t20 * t511 + t22 * t507 + t24 * t503) * t410, 0, t286, -t285, t668; t93 * t637 + t92 * t639 + t91 * t641 + t83 * t642, t45 * t499 + t46 * t496 + t47 * t493 + t48 * t490, t65 * t499 + t70 * t496 + t71 * t493 + t72 * t490 + (-t37 * t642 - t39 * t641 - t40 * t637 - t43 * t639) * t368, t66 * t499 + t73 * t496 + t74 * t493 + t75 * t490 + (-t38 * t642 - t41 * t641 - t42 * t637 - t44 * t639) * t368, t33 * t499 + t34 * t496 + t35 * t493 + t36 * t490 + (t349 * t425 + t350 * t424 + t351 * t423 + t352 * t422) * t410, t29 * t499 + t30 * t496 + t31 * t493 + t32 * t490 + (-t109 * t514 - t110 * t512 - t111 * t508 - t112 * t504) * t410, t57 * t499 + t59 * t496 + t61 * t493 + t63 * t490 + (-t349 * t484 - t350 * t482 - t351 * t479 - t352 * t476) * t410, t58 * t499 + t60 * t496 + t62 * t493 + t64 * t490 + (-t349 * t483 - t350 * t481 - t351 * t478 - t352 * t475) * t410, (-t504 * t89 - t508 * t88 - t512 * t87 - t514 * t76) * t410, (t13 * t601 + t155 * t8) * t190 + (t12 * t603 + t153 * t6) * t189 + (t11 * t605 + t151 * t4) * t188 + (t150 * t2 + t607 * t9) * t187 + (-t17 * t514 - t19 * t512 - t21 * t508 - t23 * t504) * t410, (t155 * t7 + t16 * t601) * t190 + (t15 * t603 + t153 * t5) * t189 + (t14 * t605 + t151 * t3) * t188 + (t1 * t150 + t10 * t607) * t187 + (-t18 * t514 - t20 * t512 - t22 * t508 - t24 * t504) * t410, 0, t285, t286, t669; t93 * t632 + t92 * t633 + t91 * t634 + t83 * t635, t45 * t622 + t46 * t620 + t47 * t618 + t48 * t616, t65 * t622 + t70 * t620 + t71 * t618 + t72 * t616 + (-t37 * t635 - t39 * t634 - t40 * t632 - t43 * t633) * t368, t66 * t622 + t73 * t620 + t74 * t618 + t75 * t616 + (-t38 * t635 - t41 * t634 - t42 * t632 - t44 * t633) * t368, t33 * t622 + t34 * t620 + t35 * t618 + t36 * t616 + (-t173 * t453 - t184 * t451 - t185 * t450 - t186 * t449) * t410, t29 * t622 + t30 * t620 + t31 * t618 + t32 * t616 + (t109 * t630 + t110 * t626 + t111 * t625 + t112 * t624) * t410, t57 * t622 + t59 * t620 + t61 * t618 + t63 * t616 + (t173 * t544 + t184 * t542 + t185 * t540 + t186 * t538) * t410, t58 * t622 + t60 * t620 + t62 * t618 + t64 * t616 + (t173 * t543 + t184 * t541 + t185 * t539 + t186 * t537) * t410, (t624 * t89 + t625 * t88 + t626 * t87 + t630 * t76) * t410, (t13 * t237 + t166 * t8) * t190 + (t12 * t239 + t165 * t6) * t189 + (t11 * t238 + t164 * t4) * t188 + (t163 * t2 + t235 * t9) * t187 + (t17 * t630 + t19 * t626 + t21 * t625 + t23 * t624) * t410, (t16 * t237 + t166 * t7) * t190 + (t15 * t239 + t165 * t5) * t189 + (t14 * t238 + t164 * t3) * t188 + (t1 * t163 + t10 * t235) * t187 + (t18 * t630 + t20 * t626 + t22 * t625 + t24 * t624) * t410, 0, 0, 0, t380 - g(3); t121 * t83 + t122 * t91 + t123 * t92 + t124 * t93, t45 * t500 + t46 * t497 + t47 * t494 + t48 * t491, t65 * t500 + t70 * t497 + t71 * t494 + t72 * t491 + (-t121 * t37 - t122 * t39 - t123 * t43 - t124 * t40) * t368, t66 * t500 + t73 * t497 + t74 * t494 + t75 * t491 + (-t121 * t38 - t122 * t41 - t123 * t44 - t124 * t42) * t368, t33 * t500 + t34 * t497 + t35 * t494 + t36 * t491 + (t199 * t425 + t200 * t424 + t201 * t423 + t202 * t422) * t410, t29 * t500 + t30 * t497 + t31 * t494 + t32 * t491 + (-t109 * t515 - t110 * t509 - t111 * t505 - t112 * t501) * t410, t57 * t500 + t59 * t497 + t61 * t494 + t63 * t491 + (-t199 * t484 - t383 * t480 - t385 * t477 - t387 * t474) * t410, t58 * t500 + t60 * t497 + t62 * t494 + t64 * t491 + (-t199 * t483 - t389 * t480 - t391 * t477 - t393 * t474) * t410, (-t501 * t89 - t505 * t88 - t509 * t87 - t515 * t76) * t410, t11 * t497 + t12 * t494 + t13 * t491 + t9 * t500 + t121 * t2 + t122 * t4 + t123 * t6 + t124 * t8 + (-t17 * t515 - t19 * t509 - t21 * t505 - t23 * t501) * t410, t10 * t500 + t14 * t497 + t15 * t494 + t16 * t491 + t121 * t1 + t122 * t3 + t123 * t5 + t124 * t7 + (-t18 * t515 - t20 * t509 - t22 * t505 - t24 * t501) * t410, t379, -t360 * t668 + t361 * t669, -t360 * t669 - t361 * t668, 0;];
tauX_reg  = t50;
