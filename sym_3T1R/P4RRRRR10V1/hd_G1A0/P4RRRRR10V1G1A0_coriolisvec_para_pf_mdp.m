% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P4RRRRR10V1G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P4RRRRR10V1G1A0_convert_par2_MPV_fixb.m

% Output:
% taucX [4x1]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 13:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(6,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: xDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: Koppelpunkt has to be [4x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 12:56:22
% EndTime: 2020-08-07 13:17:28
% DurationCPUTime: 1238.26s
% Computational Cost: add. (12145712->2931), mult. (26873424->5144), div. (163608->34), fcn. (16530656->36), ass. (0->1924)
t11863 = sin(qJ(3,4));
t13268 = 0.2e1 * t11863;
t11869 = sin(qJ(3,3));
t13267 = 0.2e1 * t11869;
t11872 = sin(qJ(3,2));
t13266 = 0.2e1 * t11872;
t11875 = sin(qJ(3,1));
t13265 = 0.2e1 * t11875;
t11866 = cos(qJ(3,4));
t11823 = 0.1e1 / t11866;
t13264 = 0.2e1 * t11823;
t11878 = cos(qJ(3,3));
t11832 = 0.1e1 / t11878;
t11793 = t11869 * pkin(2);
t11763 = pkin(1) * t11793;
t11870 = sin(qJ(2,3));
t11794 = t11870 * pkin(6);
t11851 = sin(pkin(3));
t11665 = t11851 * (-pkin(5) * t11794 + t11763);
t11852 = cos(pkin(3));
t13129 = pkin(6) * t11852;
t11757 = pkin(1) * t13129;
t11879 = cos(qJ(2,3));
t12869 = t11852 * t11870;
t12745 = pkin(1) * t12869;
t12390 = t11878 * t12745;
t12886 = t11851 * t11878;
t12723 = pkin(2) * t12886;
t11981 = pkin(2) * t12390 + (pkin(5) * t12723 - t11757) * t11879 - t11665;
t13260 = 0.1e1 / t11981;
t13021 = t13260 * t11832;
t11881 = cos(qJ(3,2));
t11838 = 0.1e1 / t11881;
t11795 = t11872 * pkin(2);
t11765 = pkin(1) * t11795;
t11873 = sin(qJ(2,2));
t11796 = t11873 * pkin(6);
t11666 = t11851 * (-pkin(5) * t11796 + t11765);
t11882 = cos(qJ(2,2));
t12867 = t11852 * t11873;
t12744 = pkin(1) * t12867;
t12389 = t11881 * t12744;
t12884 = t11851 * t11881;
t12722 = pkin(2) * t12884;
t11980 = pkin(2) * t12389 + (pkin(5) * t12722 - t11757) * t11882 - t11666;
t13261 = 0.1e1 / t11980;
t13020 = t13261 * t11838;
t11884 = cos(qJ(3,1));
t11844 = 0.1e1 / t11884;
t11797 = t11875 * pkin(2);
t11767 = pkin(1) * t11797;
t11876 = sin(qJ(2,1));
t11798 = t11876 * pkin(6);
t11667 = t11851 * (-pkin(5) * t11798 + t11767);
t11885 = cos(qJ(2,1));
t12865 = t11852 * t11876;
t12743 = pkin(1) * t12865;
t12391 = t11884 * t12743;
t12882 = t11851 * t11884;
t12721 = pkin(2) * t12882;
t11979 = pkin(2) * t12391 + (pkin(5) * t12721 - t11757) * t11885 - t11667;
t13262 = 0.1e1 / t11979;
t13019 = t13262 * t11844;
t11867 = cos(qJ(2,4));
t13125 = t11863 * pkin(2);
t11759 = pkin(1) * t13125;
t11864 = sin(qJ(2,4));
t13124 = t11864 * pkin(6);
t12187 = t11851 * (-pkin(5) * t13124 + t11759);
t12873 = t11852 * t11864;
t12746 = pkin(1) * t12873;
t12392 = t11866 * t12746;
t12894 = t11851 * t11866;
t12727 = pkin(2) * t12894;
t11936 = pkin(2) * t12392 + (pkin(5) * t12727 - t11757) * t11867 - t12187;
t13263 = 0.1e1 / t11936;
t13024 = t13263 * t11823;
t11887 = xDP(4);
t11889 = xDP(2);
t11891 = xP(4);
t11815 = sin(t11891);
t11816 = cos(t11891);
t11897 = koppelP(3,2);
t11901 = koppelP(3,1);
t12192 = t11815 * t11897 - t11816 * t11901;
t11626 = t11887 * t12192 - t11889;
t11890 = xDP(1);
t12193 = t11815 * t11901 + t11816 * t11897;
t11627 = t11887 * t12193 - t11890;
t11871 = sin(qJ(1,3));
t11880 = cos(qJ(1,3));
t11520 = t11626 * t11880 - t11627 * t11871;
t11521 = t11626 * t11871 + t11627 * t11880;
t11860 = legFrame(3,3);
t11779 = sin(t11860);
t11783 = cos(t11860);
t12198 = t11520 * t11783 - t11779 * t11521;
t11479 = pkin(2) * t12198;
t11485 = t11520 * t11779 + t11521 * t11783;
t12979 = t11626 * t11851;
t11528 = -pkin(1) * t11627 + pkin(5) * t12979;
t12978 = t11627 * t11851;
t11529 = pkin(1) * t11626 + pkin(5) * t12978;
t11536 = pkin(1) * t12979 + pkin(5) * t11627;
t11537 = pkin(1) * t12978 - pkin(5) * t11626;
t11888 = xDP(3);
t12832 = t11879 * t11888;
t11709 = pkin(6) * t12832;
t11835 = t11879 ^ 2;
t11775 = t11835 - 0.2e1;
t11820 = t11852 ^ 2;
t12845 = t11870 * t11879;
t12492 = t11869 * t12845;
t13146 = pkin(2) * t11851;
t12228 = t12492 * t13146;
t12945 = (t11879 + 0.1e1) * (t11879 - 0.1e1);
t13130 = pkin(6) * t11851;
t12411 = t12945 * t13130;
t13163 = t11835 - 0.1e1;
t12471 = t13163 * t11793 - pkin(5);
t12892 = t11851 * t11869;
t12726 = pkin(2) * t12892;
t11831 = t11878 ^ 2;
t12927 = t11831 * t11870;
t12734 = pkin(2) * t12927;
t12738 = t11775 * t11793;
t13174 = -0.2e1 * t11851;
t12752 = t11888 * t13174;
t13149 = pkin(2) * t11831;
t12825 = 0.2e1 * t13149;
t12891 = t11851 * t11870;
t13137 = pkin(2) * t11888;
t11802 = t11888 * pkin(5);
t13122 = t11879 * pkin(6);
t13213 = -t12198 * t13122 - t11802;
t11344 = ((-t11888 * t12738 - t13213) * t11878 + (-t12198 * t12825 - (-pkin(5) * t12198 + t11709) * t11869 + t11479) * t11870) * t11820 + (-(t11485 * t11879 + t11870 * t12752) * t13149 + (-t11775 * t12198 * t12726 + (t11528 * t11880 - t11529 * t11871) * t11783 + (-t11528 * t11871 - t11529 * t11880) * t11779 + (-t11485 * t11870 - t11851 * t12832) * pkin(6)) * t11878 + (t11869 * t13213 - t13137) * t12891) * t11852 + t12198 * t12734 + (t11485 * t12228 + t11888 * t12471) * t11878 + (((t11536 * t11871 + t11537 * t11880) * t11783 + (t11536 * t11880 - t11537 * t11871) * t11779 + t11709) * t11869 - t11479) * t11870 + (pkin(1) * t12832 - t11485 * t12411) * t11869;
t12833 = t11878 * t11879;
t12715 = pkin(2) * t12833;
t12846 = t11870 * t11878;
t11681 = pkin(2) * t12846 - t13122;
t12964 = t11681 * t11852;
t12124 = pkin(1) * t12964 + (-t11763 + (t12715 + t11794) * pkin(5)) * t11851;
t11573 = 0.1e1 / t12124;
t13005 = t11573 * t11832;
t11334 = t11344 * t13005;
t12339 = t11869 * t11334;
t11300 = pkin(2) * t12339;
t11319 = pkin(5) * t11334;
t13171 = t11820 - 0.1e1;
t12434 = t13171 * t11888;
t12897 = t11851 * t11852;
t12581 = t12198 * t12897;
t11467 = -t12434 - t12581;
t12703 = t11820 * t11794;
t13238 = t11794 + pkin(1);
t11677 = -t12703 + t13238;
t11733 = 0.2e1 * t11794 + pkin(1);
t11803 = pkin(1) * t11870;
t11746 = t11803 + pkin(6);
t11732 = t11793 + pkin(5);
t12947 = (t11852 + 0.1e1) * (t11852 - 0.1e1);
t12273 = t12198 * t11732 * t12947;
t12689 = t13171 * pkin(6);
t12387 = t11803 - t12689;
t12395 = pkin(6) * t12581;
t11906 = pkin(6) ^ 2;
t11908 = pkin(2) ^ 2;
t12926 = t11831 * t11908;
t12416 = -t11906 + t12926;
t12858 = t11852 * t11888;
t12534 = t11732 * t12858;
t13197 = 0.2e1 * pkin(6);
t13119 = pkin(2) * t13197;
t12692 = t11878 * t13119;
t13143 = pkin(2) * t11878;
t11389 = (t11485 * t11851 * t12416 + t11467 * t12692) * t11835 + (-t11467 * t11870 * t12926 + ((t11485 * t11733 - t12534) * t11851 + t12273) * t13143 + (t11677 * t11888 - t11870 * t12395) * pkin(6)) * t11879 - (t11888 * t12387 - t12395) * t13143 + ((t11485 * t11746 - t11870 * t12534) * t11851 + t11870 * t12273) * pkin(6);
t11909 = 0.1e1 / pkin(2);
t12920 = t11832 * t11909;
t12569 = t13260 * t12920;
t12320 = t11389 * t12569;
t11375 = pkin(6) * t12320;
t12781 = -t11319 - t11375;
t11193 = -t11300 + t12781;
t11318 = pkin(6) * t11334;
t12639 = t11389 * t13021;
t11372 = t11869 * t12639;
t11225 = -t11372 + t11318;
t12224 = pkin(5) * t12320;
t11228 = t11318 - t12224;
t12924 = t11832 * t11852;
t12653 = t11344 * t12924;
t11294 = -t11573 * t12653 / 0.2e1;
t11472 = t11627 * t11794 + t11626 * t12964 + (-t11626 * t12892 + t11627 * t12833) * pkin(2);
t11473 = t11626 * t11794 - t11627 * t12964 + (t11626 * t12833 + t11627 * t12892) * pkin(2);
t12870 = t11852 * t11869;
t11617 = pkin(2) * t12870 + t11681 * t11851;
t11431 = (t11472 * t11880 + t11473 * t11871) * t11783 + (-t11472 * t11871 + t11473 * t11880) * t11779 - t11888 * t11617;
t11421 = t11431 * t11573;
t13006 = t11573 * t11820;
t11253 = -t11431 * t13006 + t11294 + t11421 / 0.2e1;
t11417 = t11852 * t11421;
t11268 = -t11417 - t11334;
t11312 = pkin(5) * t11318;
t11315 = 0.2e1 * t11318;
t11331 = pkin(1) * t11334;
t12264 = t11870 * t12639;
t12169 = t11909 * t12264;
t11369 = pkin(1) * t12169;
t13187 = -0.2e1 * t11417;
t12236 = t11732 * t13187;
t11406 = pkin(6) * t12236;
t12960 = t11732 * t11851;
t12535 = t11880 * t12960;
t11610 = t11746 * t11871 - t11870 * t12535;
t11621 = t11733 * t11871 - t12535;
t12536 = t11871 * t12960;
t12018 = t11746 * t11880 + t11870 * t12536;
t12077 = t11733 * t11880 + t12536;
t11643 = t11779 * t11880 + t11783 * t11871;
t12203 = t12416 * t11643;
t12864 = t11852 * t11878;
t12720 = pkin(2) * t12864;
t12400 = t11643 * t12720;
t11640 = t11779 * t11871 - t11880 * t11783;
t13198 = -0.2e1 * pkin(6);
t13256 = (t11640 * t12416 + t12400 * t13198) * t11835;
t11452 = t13256 + ((t11779 * t11621 - t11783 * t12077) * t13143 + t12203 * t12869) * t11879 + (t11779 * t11610 - t11783 * t12018 + t12400) * pkin(6);
t12104 = t12416 * t12869;
t12403 = t11640 * t12720;
t11455 = (t12403 * t13197 + t12203) * t11835 + ((t11621 * t11783 + t11779 * t12077) * t13143 - t11640 * t12104) * t11879 + (t11610 * t11783 + t11779 * t12018 - t12403) * pkin(6);
t11907 = pkin(5) ^ 2;
t12765 = pkin(1) ^ 2 + t11907;
t12475 = t11908 + t12765;
t11707 = t11906 + t12475;
t11715 = t11794 / 0.2e1 + pkin(1);
t11731 = pkin(5) * t11869 + pkin(2);
t11762 = pkin(5) * t11793;
t11750 = 0.2e1 * t11762;
t11754 = t11835 - 0.1e1 / 0.2e1;
t11768 = pkin(1) * t11794;
t11830 = t11878 * t11831;
t11834 = t11879 * t11835;
t11848 = t11887 ^ 2;
t13172 = pkin(6) * pkin(1);
t11849 = 0.2e1 * t13172;
t11893 = -0.3e1 * t11906;
t11912 = pkin(2) * t11908;
t12033 = t11851 * t12193;
t11325 = t11906 * t11334;
t12041 = pkin(6) * t11372 - t11325;
t12168 = t11879 * t12320;
t12061 = t11869 * t12168;
t12170 = t11851 * t12320;
t12119 = pkin(1) * t12170;
t11806 = pkin(1) * t11835;
t11696 = t11806 - t13238;
t12254 = t11696 * t11852;
t11819 = t11852 * t11820;
t12255 = (-t11819 + t11852) * t13197;
t12261 = 0.3e1 * t11906 + t12475;
t12522 = t11908 * t12947;
t12269 = t11831 * t12522;
t12885 = t11851 * t11879;
t12489 = t11732 * t12885;
t12276 = t11870 * t12489;
t12291 = t12947 * t11421;
t12383 = t13171 * t12845;
t12468 = t11851 * t11757;
t12767 = t11907 / 0.2e1 + t11908 / 0.2e1;
t12476 = t11906 + t12767;
t12764 = t11908 - t11906;
t12479 = t11762 + t12764;
t12777 = -t11369 - t11375;
t12483 = t11319 - t12777;
t12485 = 0.2e1 * t11908 * t13130;
t12486 = -0.2e1 * pkin(2) * t12947;
t12856 = t11852 * t11908;
t12517 = t11831 * t12856;
t12613 = t11819 * t11421;
t11833 = 0.1e1 / t11878 ^ 2;
t12863 = t11852 * t11879;
t11704 = pkin(6) * t12863;
t12706 = pkin(5) * t12885;
t11663 = t12706 + t12745;
t12741 = t11663 * t13143;
t13195 = 0.1e1 / (-pkin(1) * t11704 - t11665 + t12741);
t13015 = t13195 * t11833;
t12640 = t11389 * t13015;
t13081 = t11344 * t11573;
t12655 = t11833 * t13081;
t13079 = t11344 * t11832;
t12749 = pkin(1) * t13079;
t13173 = 0.2e1 * t11851;
t12751 = t11912 * t13173;
t11378 = pkin(1) * t12320;
t12792 = t11193 * t11870 - t11378;
t12844 = t11870 * t11906;
t12898 = t11848 * t11851;
t12958 = t13238 * t11879;
t13004 = t11573 * t11851;
t13089 = t11228 * t11870;
t13155 = pkin(1) * t11852;
t13184 = -0.2e1 * t11820;
t13192 = pkin(6) / 0.2e1;
t13199 = 0.2e1 * pkin(1);
t11070 = -t11455 * t11848 * t12033 * t12569 + t11909 * (t13260 * (t11832 * (-t11452 * t12192 * t12898 - ((t11893 + t12926) * t11834 * t12291 * t12723 + ((t11406 + pkin(6) * (-t11319 - t11375 / 0.2e1) + (-(t11315 - t12224) * t11869 / 0.2e1 + t12639 / 0.2e1) * pkin(2)) * t11878 * t12486 + t11225 * t12468 - (t12517 * t12749 + ((t13199 + 0.3e1 * t11794 - 0.3e1 * t12703) * t12926 + (t11715 * t13198 + t11820 * t12844) * pkin(6)) * t11431) * t13004) * t11835 + (t11253 * t11830 * t12751 + (t11870 * t12236 + t12792) * t12269 + ((-(-t11372 + t11315) * t11803 + t12041) * t11852 - ((t11762 + t12476) * t13184 + t11750 + 0.4e1 * t11768 + t12261) * t11421) * t12723 + (-t13171 * (-t11312 + (-t11228 * t11869 + t12639) * pkin(2)) - t11732 * t12255 * t11421) * t11794) * t11879 + t11253 * t12485 * t12927 - (t11406 + (0.2e1 * t11732 * t12613 - (-t11300 - t12483) * t11820 - t11369 + t11193) * pkin(6)) * t13143 + ((-pkin(1) * t11225 + t11870 * t12041) * t11852 - (t11849 + ((t11762 + t12767) * t13184 + t11750 + t11707) * t11870) * t11421) * t13130) * t11421) - ((-t12291 * t12958 - t12119) * t13149 + (-t12479 * t11835 * t12291 - (t12639 + (-t11417 * t11746 - t11228) * t11869) * pkin(2) * t12885 - pkin(1) * t12264 * t12870) * t11878 + (t12061 * t13155 - t11851 * ((-t11331 - t13089) * t11869 + t12264) - (t11746 * t11878 * t13171 + t11731 * t12383 + t12254 * t12892) * t11421) * pkin(6)) * t12640) - (t11879 * t11912 * t11268 * t11830 + (t11268 * t11794 - t11331 - (t11835 * t13155 - t12276) * t11421) * t12926 + ((t11372 / 0.2e1 - t11318 / 0.2e1) * t11879 - ((t11803 + t13192) * t12863 + t11754 * t12960) * t11421) * t12692 - (t11225 * t13238 - (t12254 - t12276) * pkin(6) * t11421) * pkin(6)) * t13195 * t11851 * t12655);
t11898 = koppelP(2,2);
t11902 = koppelP(2,1);
t12190 = t11815 * t11898 - t11816 * t11902;
t11628 = t11887 * t12190 - t11889;
t12191 = t11815 * t11902 + t11816 * t11898;
t11629 = t11887 * t12191 - t11890;
t11874 = sin(qJ(1,2));
t11883 = cos(qJ(1,2));
t11522 = t11628 * t11883 - t11629 * t11874;
t11523 = t11628 * t11874 + t11629 * t11883;
t11861 = legFrame(2,3);
t11780 = sin(t11861);
t11784 = cos(t11861);
t12197 = t11522 * t11784 - t11780 * t11523;
t11480 = pkin(2) * t12197;
t11487 = t11522 * t11780 + t11523 * t11784;
t12977 = t11628 * t11851;
t11530 = -pkin(1) * t11629 + pkin(5) * t12977;
t12976 = t11629 * t11851;
t11531 = pkin(1) * t11628 + pkin(5) * t12976;
t11538 = pkin(1) * t12977 + pkin(5) * t11629;
t11539 = pkin(1) * t12976 - pkin(5) * t11628;
t12830 = t11882 * t11888;
t11710 = pkin(6) * t12830;
t11841 = t11882 ^ 2;
t11776 = t11841 - 0.2e1;
t12840 = t11873 * t11882;
t12491 = t11872 * t12840;
t12227 = t12491 * t13146;
t12944 = (t11882 + 0.1e1) * (t11882 - 0.1e1);
t12410 = t12944 * t13130;
t13160 = t11841 - 0.1e1;
t12470 = t13160 * t11795 - pkin(5);
t12890 = t11851 * t11872;
t12725 = pkin(2) * t12890;
t11837 = t11881 ^ 2;
t12917 = t11837 * t11873;
t12732 = pkin(2) * t12917;
t12737 = t11776 * t11795;
t13148 = pkin(2) * t11837;
t12824 = 0.2e1 * t13148;
t12889 = t11851 * t11873;
t13121 = t11882 * pkin(6);
t13214 = -t12197 * t13121 - t11802;
t11345 = ((-t11888 * t12737 - t13214) * t11881 + (-t12197 * t12824 - (-pkin(5) * t12197 + t11710) * t11872 + t11480) * t11873) * t11820 + (-(t11487 * t11882 + t11873 * t12752) * t13148 + (-t11776 * t12197 * t12725 + (t11530 * t11883 - t11531 * t11874) * t11784 + (-t11530 * t11874 - t11531 * t11883) * t11780 + (-t11487 * t11873 - t11851 * t12830) * pkin(6)) * t11881 + (t11872 * t13214 - t13137) * t12889) * t11852 + t12197 * t12732 + (t11487 * t12227 + t11888 * t12470) * t11881 + (((t11538 * t11874 + t11539 * t11883) * t11784 + (t11538 * t11883 - t11539 * t11874) * t11780 + t11710) * t11872 - t11480) * t11873 + (pkin(1) * t12830 - t11487 * t12410) * t11872;
t12831 = t11881 * t11882;
t12713 = pkin(2) * t12831;
t12841 = t11873 * t11881;
t11682 = pkin(2) * t12841 - t13121;
t12963 = t11682 * t11852;
t12123 = pkin(1) * t12963 + (-t11765 + (t12713 + t11796) * pkin(5)) * t11851;
t11576 = 0.1e1 / t12123;
t12999 = t11576 * t11838;
t11336 = t11345 * t12999;
t12334 = t11872 * t11336;
t11301 = pkin(2) * t12334;
t11321 = pkin(5) * t11336;
t12580 = t12197 * t12897;
t11468 = -t12434 - t12580;
t12702 = t11820 * t11796;
t13237 = t11796 + pkin(1);
t11678 = -t12702 + t13237;
t11737 = 0.2e1 * t11796 + pkin(1);
t11804 = pkin(1) * t11873;
t11747 = t11804 + pkin(6);
t11736 = t11795 + pkin(5);
t12272 = t12197 * t11736 * t12947;
t12386 = t11804 - t12689;
t12394 = pkin(6) * t12580;
t12916 = t11837 * t11908;
t12415 = -t11906 + t12916;
t12531 = t11736 * t12858;
t12691 = t11881 * t13119;
t13141 = pkin(2) * t11881;
t11390 = (t11487 * t11851 * t12415 + t11468 * t12691) * t11841 + (-t11468 * t11873 * t12916 + ((t11487 * t11737 - t12531) * t11851 + t12272) * t13141 + (t11678 * t11888 - t11873 * t12394) * pkin(6)) * t11882 - (t11888 * t12386 - t12394) * t13141 + ((t11487 * t11747 - t11873 * t12531) * t11851 + t11873 * t12272) * pkin(6);
t12910 = t11838 * t11909;
t12568 = t13261 * t12910;
t12317 = t11390 * t12568;
t11376 = pkin(6) * t12317;
t12780 = -t11321 - t11376;
t11194 = -t11301 + t12780;
t11320 = pkin(6) * t11336;
t12636 = t11390 * t13020;
t11373 = t11872 * t12636;
t11226 = -t11373 + t11320;
t12223 = pkin(5) * t12317;
t11229 = t11320 - t12223;
t12914 = t11838 * t11852;
t12648 = t11345 * t12914;
t11295 = -t11576 * t12648 / 0.2e1;
t11474 = t11629 * t11796 + t11628 * t12963 + (-t11628 * t12890 + t11629 * t12831) * pkin(2);
t11475 = t11628 * t11796 - t11629 * t12963 + (t11628 * t12831 + t11629 * t12890) * pkin(2);
t12868 = t11852 * t11872;
t11618 = pkin(2) * t12868 + t11682 * t11851;
t11432 = (t11474 * t11883 + t11475 * t11874) * t11784 + (-t11474 * t11874 + t11475 * t11883) * t11780 - t11888 * t11618;
t11423 = t11432 * t11576;
t13000 = t11576 * t11820;
t11254 = -t11432 * t13000 + t11295 + t11423 / 0.2e1;
t11418 = t11852 * t11423;
t11271 = -t11418 - t11336;
t11313 = pkin(5) * t11320;
t11316 = 0.2e1 * t11320;
t11332 = pkin(1) * t11336;
t12263 = t11873 * t12636;
t12166 = t11909 * t12263;
t11370 = pkin(1) * t12166;
t13186 = -0.2e1 * t11418;
t12235 = t11736 * t13186;
t11407 = pkin(6) * t12235;
t12957 = t11736 * t11851;
t12532 = t11883 * t12957;
t11611 = t11747 * t11874 - t11873 * t12532;
t11622 = t11737 * t11874 - t12532;
t12533 = t11874 * t12957;
t12017 = t11747 * t11883 + t11873 * t12533;
t12076 = t11737 * t11883 + t12533;
t11644 = t11780 * t11883 + t11784 * t11874;
t12202 = t12415 * t11644;
t12862 = t11852 * t11881;
t12719 = pkin(2) * t12862;
t12399 = t11644 * t12719;
t11641 = t11780 * t11874 - t11883 * t11784;
t13257 = (t11641 * t12415 + t12399 * t13198) * t11841;
t11453 = t13257 + ((t11780 * t11622 - t11784 * t12076) * t13141 + t12202 * t12867) * t11882 + (t11780 * t11611 - t11784 * t12017 + t12399) * pkin(6);
t12103 = t12415 * t12867;
t12402 = t11641 * t12719;
t11456 = (t12402 * t13197 + t12202) * t11841 + ((t11622 * t11784 + t11780 * t12076) * t13141 - t11641 * t12103) * t11882 + (t11611 * t11784 + t11780 * t12017 - t12402) * pkin(6);
t11717 = t11796 / 0.2e1 + pkin(1);
t11735 = pkin(5) * t11872 + pkin(2);
t11764 = pkin(5) * t11795;
t11751 = 0.2e1 * t11764;
t11755 = t11841 - 0.1e1 / 0.2e1;
t11769 = pkin(1) * t11796;
t11836 = t11881 * t11837;
t11840 = t11882 * t11841;
t12032 = t11851 * t12191;
t11326 = t11906 * t11336;
t12040 = pkin(6) * t11373 - t11326;
t12165 = t11882 * t12317;
t12060 = t11872 * t12165;
t12167 = t11851 * t12317;
t12118 = pkin(1) * t12167;
t11807 = pkin(1) * t11841;
t11697 = t11807 - t13237;
t12253 = t11697 * t11852;
t12268 = t11837 * t12522;
t12883 = t11851 * t11882;
t12488 = t11736 * t12883;
t12275 = t11873 * t12488;
t12286 = t12947 * t11423;
t12382 = t13171 * t12840;
t12478 = t11764 + t12764;
t12776 = -t11370 - t11376;
t12482 = t11321 - t12776;
t12515 = t11837 * t12856;
t12608 = t11819 * t11423;
t11839 = 0.1e1 / t11881 ^ 2;
t12861 = t11852 * t11882;
t11705 = pkin(6) * t12861;
t12705 = pkin(5) * t12883;
t11664 = t12705 + t12744;
t12740 = t11664 * t13141;
t13194 = 0.1e1 / (-pkin(1) * t11705 - t11666 + t12740);
t13013 = t13194 * t11839;
t12637 = t11390 * t13013;
t13078 = t11345 * t11576;
t12650 = t11839 * t13078;
t13076 = t11345 * t11838;
t12748 = pkin(1) * t13076;
t11379 = pkin(1) * t12317;
t12791 = t11194 * t11873 - t11379;
t12839 = t11873 * t11906;
t12955 = t13237 * t11882;
t12998 = t11576 * t11851;
t13088 = t11229 * t11873;
t11071 = -t11456 * t11848 * t12032 * t12568 + t11909 * (t13261 * (t11838 * (-t11453 * t12190 * t12898 - ((t11893 + t12916) * t11840 * t12286 * t12722 + ((t11407 + pkin(6) * (-t11321 - t11376 / 0.2e1) + (-(t11316 - t12223) * t11872 / 0.2e1 + t12636 / 0.2e1) * pkin(2)) * t11881 * t12486 + t11226 * t12468 - (t12515 * t12748 + ((t13199 + 0.3e1 * t11796 - 0.3e1 * t12702) * t12916 + (t11717 * t13198 + t11820 * t12839) * pkin(6)) * t11432) * t12998) * t11841 + (t11254 * t11836 * t12751 + (t11873 * t12235 + t12791) * t12268 + ((-(-t11373 + t11316) * t11804 + t12040) * t11852 - ((t11764 + t12476) * t13184 + t11751 + 0.4e1 * t11769 + t12261) * t11423) * t12722 + (-t13171 * (-t11313 + (-t11229 * t11872 + t12636) * pkin(2)) - t11736 * t12255 * t11423) * t11796) * t11882 + t11254 * t12485 * t12917 - (t11407 + (0.2e1 * t11736 * t12608 - (-t11301 - t12482) * t11820 - t11370 + t11194) * pkin(6)) * t13141 + ((-pkin(1) * t11226 + t11873 * t12040) * t11852 - (t11849 + ((t11764 + t12767) * t13184 + t11751 + t11707) * t11873) * t11423) * t13130) * t11423) - ((-t12286 * t12955 - t12118) * t13148 + (-t12478 * t11841 * t12286 - pkin(2) * (t12636 + (-t11418 * t11747 - t11229) * t11872) * t12883 - pkin(1) * t12263 * t12868) * t11881 + (t12060 * t13155 - t11851 * ((-t11332 - t13088) * t11872 + t12263) - (t11747 * t11881 * t13171 + t11735 * t12382 + t12253 * t12890) * t11423) * pkin(6)) * t12637) - (t11882 * t11912 * t11271 * t11836 + (t11271 * t11796 - t11332 - (t11841 * t13155 - t12275) * t11423) * t12916 + ((t11373 / 0.2e1 - t11320 / 0.2e1) * t11882 - ((t11804 + t13192) * t12861 + t11755 * t12957) * t11423) * t12691 - (t11226 * t13237 - (t12253 - t12275) * pkin(6) * t11423) * pkin(6)) * t13194 * t11851 * t12650);
t11899 = koppelP(1,2);
t11903 = koppelP(1,1);
t12188 = t11815 * t11899 - t11816 * t11903;
t11630 = t11887 * t12188 - t11889;
t12189 = t11815 * t11903 + t11816 * t11899;
t11631 = t11887 * t12189 - t11890;
t11877 = sin(qJ(1,1));
t11886 = cos(qJ(1,1));
t11524 = t11630 * t11886 - t11631 * t11877;
t11525 = t11630 * t11877 + t11631 * t11886;
t11862 = legFrame(1,3);
t11781 = sin(t11862);
t11785 = cos(t11862);
t12196 = t11524 * t11785 - t11781 * t11525;
t11481 = pkin(2) * t12196;
t11489 = t11524 * t11781 + t11525 * t11785;
t12975 = t11630 * t11851;
t11532 = -pkin(1) * t11631 + pkin(5) * t12975;
t12974 = t11631 * t11851;
t11533 = pkin(1) * t11630 + pkin(5) * t12974;
t11540 = pkin(1) * t12975 + pkin(5) * t11631;
t11541 = pkin(1) * t12974 - pkin(5) * t11630;
t12828 = t11885 * t11888;
t11711 = pkin(6) * t12828;
t11847 = t11885 ^ 2;
t11777 = t11847 - 0.2e1;
t12835 = t11876 * t11885;
t12490 = t11875 * t12835;
t12226 = t12490 * t13146;
t12943 = (t11885 + 0.1e1) * (t11885 - 0.1e1);
t12409 = t12943 * t13130;
t13157 = t11847 - 0.1e1;
t12469 = t13157 * t11797 - pkin(5);
t12888 = t11851 * t11875;
t12724 = pkin(2) * t12888;
t11843 = t11884 ^ 2;
t12907 = t11843 * t11876;
t12730 = pkin(2) * t12907;
t12736 = t11777 * t11797;
t13147 = pkin(2) * t11843;
t12823 = 0.2e1 * t13147;
t12887 = t11851 * t11876;
t13120 = t11885 * pkin(6);
t13215 = -t12196 * t13120 - t11802;
t11346 = ((-t11888 * t12736 - t13215) * t11884 + (-t12196 * t12823 - (-pkin(5) * t12196 + t11711) * t11875 + t11481) * t11876) * t11820 + (-(t11489 * t11885 + t11876 * t12752) * t13147 + (-t11777 * t12196 * t12724 + (t11532 * t11886 - t11533 * t11877) * t11785 + (-t11532 * t11877 - t11533 * t11886) * t11781 + (-t11489 * t11876 - t11851 * t12828) * pkin(6)) * t11884 + (t11875 * t13215 - t13137) * t12887) * t11852 + t12196 * t12730 + (t11489 * t12226 + t11888 * t12469) * t11884 + (((t11540 * t11877 + t11541 * t11886) * t11785 + (t11540 * t11886 - t11541 * t11877) * t11781 + t11711) * t11875 - t11481) * t11876 + (pkin(1) * t12828 - t11489 * t12409) * t11875;
t12829 = t11884 * t11885;
t12712 = pkin(2) * t12829;
t12836 = t11876 * t11884;
t11683 = pkin(2) * t12836 - t13120;
t12962 = t11683 * t11852;
t12122 = pkin(1) * t12962 + (-t11767 + (t12712 + t11798) * pkin(5)) * t11851;
t11579 = 0.1e1 / t12122;
t12993 = t11579 * t11844;
t11338 = t11346 * t12993;
t12329 = t11875 * t11338;
t11302 = pkin(2) * t12329;
t11323 = pkin(5) * t11338;
t12579 = t12196 * t12897;
t11469 = -t12434 - t12579;
t12701 = t11820 * t11798;
t13236 = t11798 + pkin(1);
t11679 = -t12701 + t13236;
t11741 = 0.2e1 * t11798 + pkin(1);
t11805 = pkin(1) * t11876;
t11748 = t11805 + pkin(6);
t11740 = t11797 + pkin(5);
t12271 = t12196 * t11740 * t12947;
t12385 = t11805 - t12689;
t12393 = pkin(6) * t12579;
t12906 = t11843 * t11908;
t12414 = -t11906 + t12906;
t12528 = t11740 * t12858;
t12690 = t11884 * t13119;
t13139 = pkin(2) * t11884;
t11391 = (t11489 * t11851 * t12414 + t11469 * t12690) * t11847 + (-t11469 * t11876 * t12906 + ((t11489 * t11741 - t12528) * t11851 + t12271) * t13139 + (t11679 * t11888 - t11876 * t12393) * pkin(6)) * t11885 - (t11888 * t12385 - t12393) * t13139 + ((t11489 * t11748 - t11876 * t12528) * t11851 + t11876 * t12271) * pkin(6);
t12900 = t11844 * t11909;
t12567 = t13262 * t12900;
t12314 = t11391 * t12567;
t11377 = pkin(6) * t12314;
t12779 = -t11323 - t11377;
t11195 = -t11302 + t12779;
t11322 = pkin(6) * t11338;
t12633 = t11391 * t13019;
t11374 = t11875 * t12633;
t11227 = -t11374 + t11322;
t12222 = pkin(5) * t12314;
t11230 = t11322 - t12222;
t12904 = t11844 * t11852;
t12643 = t11346 * t12904;
t11296 = -t11579 * t12643 / 0.2e1;
t11476 = t11631 * t11798 + t11630 * t12962 + (-t11630 * t12888 + t11631 * t12829) * pkin(2);
t11477 = t11630 * t11798 - t11631 * t12962 + (t11630 * t12829 + t11631 * t12888) * pkin(2);
t12866 = t11852 * t11875;
t11619 = pkin(2) * t12866 + t11683 * t11851;
t11433 = (t11476 * t11886 + t11477 * t11877) * t11785 + (-t11476 * t11877 + t11477 * t11886) * t11781 - t11888 * t11619;
t11425 = t11433 * t11579;
t12994 = t11579 * t11820;
t11255 = -t11433 * t12994 + t11296 + t11425 / 0.2e1;
t11419 = t11852 * t11425;
t11274 = -t11419 - t11338;
t11314 = pkin(5) * t11322;
t11317 = 0.2e1 * t11322;
t11324 = pkin(1) * t11338;
t12262 = t11876 * t12633;
t12163 = t11909 * t12262;
t11371 = pkin(1) * t12163;
t13185 = -0.2e1 * t11419;
t12234 = t11740 * t13185;
t11408 = pkin(6) * t12234;
t12954 = t11740 * t11851;
t12529 = t11886 * t12954;
t11612 = t11748 * t11877 - t11876 * t12529;
t11623 = t11741 * t11877 - t12529;
t12530 = t11877 * t12954;
t12016 = t11748 * t11886 + t11876 * t12530;
t12075 = t11741 * t11886 + t12530;
t11645 = t11781 * t11886 + t11785 * t11877;
t12201 = t12414 * t11645;
t12860 = t11852 * t11884;
t12718 = pkin(2) * t12860;
t12398 = t11645 * t12718;
t11642 = t11781 * t11877 - t11886 * t11785;
t13258 = (t11642 * t12414 + t12398 * t13198) * t11847;
t11454 = t13258 + ((t11781 * t11623 - t11785 * t12075) * t13139 + t12201 * t12865) * t11885 + (t11781 * t11612 - t11785 * t12016 + t12398) * pkin(6);
t12102 = t12414 * t12865;
t12401 = t11642 * t12718;
t11457 = (t12401 * t13197 + t12201) * t11847 + ((t11623 * t11785 + t11781 * t12075) * t13139 - t11642 * t12102) * t11885 + (t11612 * t11785 + t11781 * t12016 - t12401) * pkin(6);
t11719 = t11798 / 0.2e1 + pkin(1);
t11739 = pkin(5) * t11875 + pkin(2);
t11766 = pkin(5) * t11797;
t11752 = 0.2e1 * t11766;
t11756 = t11847 - 0.1e1 / 0.2e1;
t11770 = pkin(1) * t11798;
t11842 = t11884 * t11843;
t11846 = t11885 * t11847;
t12031 = t11851 * t12189;
t11327 = t11906 * t11338;
t12039 = pkin(6) * t11374 - t11327;
t12162 = t11885 * t12314;
t12059 = t11875 * t12162;
t12164 = t11851 * t12314;
t12117 = pkin(1) * t12164;
t11808 = pkin(1) * t11847;
t11698 = t11808 - t13236;
t12252 = t11698 * t11852;
t12267 = t11843 * t12522;
t12881 = t11851 * t11885;
t12487 = t11740 * t12881;
t12274 = t11876 * t12487;
t12281 = t12947 * t11425;
t12381 = t13171 * t12835;
t12477 = t11766 + t12764;
t12775 = -t11371 - t11377;
t12481 = t11323 - t12775;
t12513 = t11843 * t12856;
t12603 = t11819 * t11425;
t11845 = 0.1e1 / t11884 ^ 2;
t12859 = t11852 * t11885;
t11706 = pkin(6) * t12859;
t12704 = pkin(5) * t12881;
t11662 = t12704 + t12743;
t12742 = t11662 * t13139;
t13196 = 0.1e1 / (-pkin(1) * t11706 - t11667 + t12742);
t13017 = t13196 * t11845;
t12634 = t11391 * t13017;
t13075 = t11346 * t11579;
t12645 = t11845 * t13075;
t13073 = t11346 * t11844;
t12747 = pkin(1) * t13073;
t11380 = pkin(1) * t12314;
t12790 = t11195 * t11876 - t11380;
t12834 = t11876 * t11906;
t12952 = t13236 * t11885;
t12992 = t11579 * t11851;
t13087 = t11230 * t11876;
t11072 = -t11457 * t11848 * t12031 * t12567 + t11909 * (t13262 * (t11844 * (-t11454 * t12188 * t12898 - ((t11893 + t12906) * t11846 * t12281 * t12721 + ((t11408 + pkin(6) * (-t11323 - t11377 / 0.2e1) + (-(t11317 - t12222) * t11875 / 0.2e1 + t12633 / 0.2e1) * pkin(2)) * t11884 * t12486 + t11227 * t12468 - (t12513 * t12747 + ((t13199 + 0.3e1 * t11798 - 0.3e1 * t12701) * t12906 + (t11719 * t13198 + t11820 * t12834) * pkin(6)) * t11433) * t12992) * t11847 + (t11255 * t11842 * t12751 + (t11876 * t12234 + t12790) * t12267 + ((-(-t11374 + t11317) * t11805 + t12039) * t11852 - ((t11766 + t12476) * t13184 + t11752 + 0.4e1 * t11770 + t12261) * t11425) * t12721 + (-t13171 * (-t11314 + (-t11230 * t11875 + t12633) * pkin(2)) - t11740 * t12255 * t11425) * t11798) * t11885 + t11255 * t12485 * t12907 - (t11408 + (0.2e1 * t11740 * t12603 - (-t11302 - t12481) * t11820 - t11371 + t11195) * pkin(6)) * t13139 + ((-pkin(1) * t11227 + t11876 * t12039) * t11852 - (t11849 + ((t11766 + t12767) * t13184 + t11752 + t11707) * t11876) * t11425) * t13130) * t11425) - ((-t12281 * t12952 - t12117) * t13147 + (-t12477 * t11847 * t12281 - pkin(2) * (t12633 + (-t11419 * t11748 - t11230) * t11875) * t12881 - pkin(1) * t12262 * t12866) * t11884 + (t12059 * t13155 - t11851 * ((-t11324 - t13087) * t11875 + t12262) - (t11748 * t11884 * t13171 + t11739 * t12381 + t12252 * t12888) * t11425) * pkin(6)) * t12634) - (t11885 * t11912 * t11274 * t11842 + (t11274 * t11798 - t11324 - (t11847 * t13155 - t12274) * t11425) * t12906 + ((t11374 / 0.2e1 - t11322 / 0.2e1) * t11885 - ((t11805 + t13192) * t12859 + t11756 * t12954) * t11425) * t12690 - (t11227 * t13236 - (t12252 - t12274) * pkin(6) * t11425) * pkin(6)) * t13196 * t11851 * t12645);
t12850 = t11866 * t11867;
t12716 = pkin(2) * t12850;
t12853 = t11864 * t11866;
t12717 = pkin(2) * t12853;
t13123 = t11867 * pkin(6);
t11680 = t12717 - t13123;
t12965 = t11680 * t11852;
t12125 = pkin(1) * t12965 + (-t11759 + (t12716 + t13124) * pkin(5)) * t11851;
t11568 = 0.1e1 / t12125;
t11896 = koppelP(4,2);
t11900 = koppelP(4,1);
t12194 = t11815 * t11896 - t11816 * t11900;
t11624 = t11887 * t12194 - t11889;
t12195 = t11815 * t11900 + t11816 * t11896;
t11625 = t11887 * t12195 - t11890;
t12896 = t11851 * t11863;
t11470 = t11625 * t13124 + t11624 * t12965 + (-t11624 * t12896 + t11625 * t12850) * pkin(2);
t11471 = t11624 * t13124 - t11625 * t12965 + (t11624 * t12850 + t11625 * t12896) * pkin(2);
t12874 = t11852 * t11863;
t11613 = pkin(2) * t12874 + t11680 * t11851;
t11859 = legFrame(4,3);
t11778 = sin(t11859);
t11782 = cos(t11859);
t11865 = sin(qJ(1,4));
t11868 = cos(qJ(1,4));
t11427 = (t11470 * t11868 + t11471 * t11865) * t11782 + (-t11470 * t11865 + t11471 * t11868) * t11778 - t11888 * t11613;
t11410 = t11427 * t11568;
t12467 = -0.2e1 * t11410;
t12875 = t11852 * t11427;
t11518 = t11624 * t11868 - t11625 * t11865;
t11519 = t11624 * t11865 + t11625 * t11868;
t12199 = t11518 * t11782 - t11778 * t11519;
t11478 = pkin(2) * t12199;
t11483 = t11518 * t11778 + t11519 * t11782;
t12981 = t11624 * t11851;
t11526 = -pkin(1) * t11625 + pkin(5) * t12981;
t12980 = t11625 * t11851;
t11527 = pkin(1) * t11624 + pkin(5) * t12980;
t11534 = pkin(1) * t12981 + pkin(5) * t11625;
t11535 = pkin(1) * t12980 - pkin(5) * t11624;
t12849 = t11867 * t11888;
t11708 = pkin(6) * t12849;
t11826 = t11867 ^ 2;
t11771 = t11826 - 0.2e1;
t12852 = t11864 * t11867;
t12493 = t11863 * t12852;
t12229 = t12493 * t13146;
t12946 = (t11867 + 0.1e1) * (t11867 - 0.1e1);
t12412 = t12946 * t13130;
t12728 = pkin(2) * t12896;
t11822 = t11866 ^ 2;
t12936 = t11822 * t11864;
t12735 = pkin(2) * t12936;
t12739 = t11771 * t13125;
t13150 = pkin(2) * t11822;
t12826 = 0.2e1 * t13150;
t12895 = t11851 * t11864;
t13167 = t11826 - 0.1e1;
t11728 = t13167 * pkin(2);
t12961 = t11728 * t11863;
t13212 = -t12199 * t13123 - t11802;
t11340 = ((-t11888 * t12739 - t13212) * t11866 + (-t12199 * t12826 - (-pkin(5) * t12199 + t11708) * t11863 + t11478) * t11864) * t11820 + (-(t11483 * t11867 + t11864 * t12752) * t13150 + (-t11771 * t12199 * t12728 + (t11526 * t11868 - t11527 * t11865) * t11782 + (-t11526 * t11865 - t11527 * t11868) * t11778 + (-t11483 * t11864 - t11851 * t12849) * pkin(6)) * t11866 + (t11863 * t13212 - t13137) * t12895) * t11852 + t12199 * t12735 + (t11483 * t12229 + t11888 * (-pkin(5) + t12961)) * t11866 + (((t11534 * t11865 + t11535 * t11868) * t11782 + (t11534 * t11868 - t11535 * t11865) * t11778 + t11708) * t11863 - t11478) * t11864 + (pkin(1) * t12849 - t11483 * t12412) * t11863;
t13083 = t11340 * t11823;
t12200 = t12875 + t13083;
t13193 = t11568 ^ 2;
t13259 = t12200 * t13193;
t11638 = t11778 * t11865 - t11868 * t11782;
t11639 = t11778 * t11868 + t11782 * t11865;
t12872 = t11852 * t11866;
t12696 = pkin(2) * t12872;
t12404 = t11639 * t12696;
t12935 = t11822 * t11908;
t12417 = -t11906 + t12935;
t13255 = (t11638 * t12417 + t12404 * t13198) * t11826;
t13131 = pkin(6) * t11847;
t11695 = t11748 - t13131;
t11905 = -0.2e1 * pkin(1);
t12990 = t11579 * t11885;
t12600 = t11433 * t12990;
t12277 = t11876 * t12600;
t12131 = t11740 * t12277;
t12230 = pkin(6) * t12329 - t12633;
t12504 = t11851 * t12859;
t12602 = t11433 * t12992;
t12953 = t13236 * t11851;
t11101 = (-(-t12953 * t13073 + ((t11808 - 0.2e1 * t11798 + t11905) * t12897 + pkin(5) * t12381) * t11433) * t11579 * t11843 + (t12230 * t11852 - (-t11433 * t11739 * t12504 + (((-t13131 / 0.2e1 + t11748) * t13184 + t11695) * t11433 - t11662 * t13073) * t11875) * t11579) * t11884 + t11820 * t12131 + (-pkin(1) * t12162 + t11698 * t12602) * t11852 + ((-t11230 + t11374) * t11876 - t11324) * t11851 - t12131) * t13262 * t12634;
t12540 = t11645 * t12888;
t11690 = -pkin(5) + t12736;
t12472 = t11739 - 0.2e1 * t13147;
t13200 = -t11739 * t11876 + (-pkin(6) * t12490 - t11690 * t11884) * t12897 + t12730 + (pkin(6) * t12829 + t11876 * t12472) * t11820;
t13138 = pkin(2) * t11885;
t13246 = t11852 * (t11843 * t13138 + t11884 * t13236) + t11875 * t12409 - t11884 * t12226;
t11443 = t13200 * t11642 + t11645 * t13246 - t12540 * t11805;
t12035 = t11443 * t12189;
t12901 = t11844 * t11885;
t12551 = t11579 * t12901;
t12327 = t11346 * t12551;
t11308 = pkin(1) * t12327;
t12109 = pkin(6) * t11739 * t12277;
t13126 = pkin(6) * t11875;
t12218 = t12602 * t13126;
t12948 = t11777 * t11820;
t12418 = -t11847 + t12948;
t11895 = pkin(5) / 0.2e1;
t11718 = t11797 + t11895;
t12537 = t11718 * t12897;
t12908 = t11842 * t11908;
t12937 = t11820 * t11885;
t12350 = ((-t11425 - (t11433 * t12418 - t12643) * t11579) * t12908 - (-t11308 * t11852 - t11851 * t12790 - ((-t11798 + pkin(1)) * t12937 + (-0.2e1 * t12537 + t13120) * t11876) * t11425) * t13147 + ((t11748 * t11852 + t12704) * t11227 - (-(t11770 - t12477) * t11820 + (-pkin(6) * t11740 + t11767 * t11876) * t12504 + (-t11820 * t11847 + t13157) * pkin(2) * t11739) * t11425) * t11884 + t11820 * t12109 + t12218 * t12252 - t12109 - t12230 * t12953) * t11346 * t13017;
t12902 = t11844 * t11876;
t12552 = t11579 * t12902;
t12328 = t11346 * t12552;
t11307 = pkin(1) * t12328;
t11311 = -t11323 / 0.2e1;
t11330 = t11908 * t11338;
t11580 = 0.1e1 / t12122 ^ 2;
t11817 = t11907 + t11908;
t11904 = 0.2e1 * pkin(5);
t11850 = pkin(2) * t11904;
t12106 = (-pkin(2) * t11230 + (pkin(2) * t12633 - t11314) * t11875) * t11885;
t12260 = 0.3e1 * t11908 + t11906 + t12765;
t12991 = t11579 * t11876;
t12601 = t11433 * t12991;
t12279 = t11851 * t12601;
t12524 = t11777 * t12906;
t12599 = t11433 * t12881;
t12729 = t11847 * t11797;
t12768 = t11907 / 0.3e1 + t11908;
t12769 = -t11906 / 0.3e1 - 0.2e1 / 0.3e1 * t11908;
t12770 = t11906 / 0.2e1 + t11908;
t12782 = -t11302 - t11377;
t12899 = t11847 * t11906;
t13049 = t11433 * t11844;
t13091 = (-pkin(2) * t11338 + t11875 * t12779) * t11847;
t13156 = pkin(1) * t11851;
t13175 = 0.2e1 * t11847;
t13176 = -0.2e1 * t11847;
t12369 = (-0.3e1 * ((t11847 - 0.4e1 / 0.3e1) * t12908 + ((-0.2e1 / 0.3e1 * t11766 + t12769) * t11847 + 0.4e1 / 0.3e1 * t11766 + t12768) * t11884 + (0.4e1 / 0.3e1 * t13147 - 0.2e1 / 0.3e1 * t11739) * pkin(6) * t12835) * t12603 + (-t12524 * t13075 - ((-t11324 + t13087) * t11885 - (-0.4e1 * t11740 + t12729) * t12279) * t13147 + (t11327 - t11330 - (-0.4e1 * t11718 * t12599 - t11876 * t12747) * t11579 * pkin(6) + (-0.2e1 * t11846 * t12218 - t13091 + (t11311 + t12775) * t13265) * pkin(2)) * t11884 - (t12106 - (t11850 + (t11817 - t12899) * t11875) * t12602) * t11876) * t11820 + (-(-0.3e1 * t11847 + 0.3e1) * t12908 * t11425 - (-t11847 * t12117 - 0.2e1 * t11741 * t12600 + (-t11380 + (t11311 + t12782) * t11876) * t13174) * t13147 + ((t11314 + ((t11230 - t11307) * t11875 - t12633) * pkin(2)) * t12881 - ((t11766 + t12770) * t13175 - 0.4e1 * t11766 - 0.2e1 * t11770 - t12260) * t11425) * t11884 + t12230 * t11847 * t13156 - 0.2e1 * t12109 + t11851 * (-pkin(2) * (-pkin(6) * t12163 - t11380) - (t12834 + t13172) * t12329)) * t11852 + t13157 * t11330 * t11842 + (t11230 * t11885 - (-t11797 - t11904 + t12729) * t12602) * t12730 + (t11330 + (t13091 + (-0.2e1 * (-pkin(6) * t11846 + t11748 * t11885) * t12602 + t12481) * t11875) * pkin(2)) * t11884 - t11719 * t12218 * t13176 + t11876 * t12106 - ((t11707 * t11876 + t11849) * t11875 + t11876 * t11850) * t12602) * t11580 * t13049;
t12905 = t11844 * t11848;
t12543 = t11642 * t12888;
t11446 = -t11642 * t13246 + t13200 * t11645 + t12543 * t11805;
t13045 = t11446 * t12188;
t11068 = -t12369 + t11101 - (t12350 + (-t12035 + t13045) * t12905) * t11579;
t11343 = t11346 ^ 2;
t12989 = t11580 * t11845;
t11337 = t11343 * t12989;
t11910 = 0.1e1 / pkin(2) ^ 2;
t11383 = t11391 ^ 2 * t11845 * t11910 / t11979 ^ 2;
t11236 = t11337 + t11383;
t12043 = t12314 * t11425;
t12027 = 0.2e1 * t12043;
t12646 = t11346 * t13049;
t12242 = 0.2e1 * t11885 * t12646;
t11183 = (-((pkin(6) * t12836 + t13138) * t11851 + pkin(6) * t12866) * t11425 - t12230) * t11579 * t12633;
t12406 = pkin(6) * t12504;
t12698 = pkin(6) * t12937;
t12766 = t11906 + t11908;
t12857 = t11852 * t11906;
t13066 = t11391 * t13262;
t13230 = t11580 * (((-t11884 * t11908 * t13075 + t12039) * t11852 + (-t12782 * t12836 + (-t13075 * t13126 + t13066) * t12901) * t13146 - (-(t12524 - t12899) * t11820 + 0.2e1 * t11718 * t12406 + t12906 * t12943 - t12899 + t11766 + t11770 + (-t11739 * t11820 + (t11741 * t11885 + 0.2e1 * (-t12537 - t12698) * t11876) * t11884) * pkin(2) + t12766) * t11425) * t11433 + (t11274 * t12906 - (-t11683 * t12724 + t12857) * t11425 + t12039) * t13073);
t11494 = -t11645 * t11798 + t11642 * t12962 + (-t11645 * t12829 - t12543) * pkin(2);
t11497 = t11642 * t11798 + t11645 * t12962 + (t11642 * t12829 - t12540) * pkin(2);
t13231 = t11579 * (t11494 * t12189 - t11497 * t12188);
t11089 = t11848 * t13231 + t11183 - t13230;
t12667 = t11089 * t12887;
t13095 = t11089 * t11885;
t12758 = 0.2e1 * t13095;
t13136 = pkin(5) * t11851;
t13151 = pkin(1) * t11885;
t13254 = pkin(1) * t12758 - (pkin(5) * t11068 * t11876 + pkin(1) * t11072) * t11851 - pkin(5) * (t11236 * t12881 + t11820 * t12027) + 0.2e1 * (-t11307 + t12222) * t11425 + (-t11580 * t12242 * t13136 + t11068 * t13151 - t11236 * t11805 - t11904 * t12667) * t11852;
t13132 = pkin(6) * t11841;
t11694 = t11747 - t13132;
t12996 = t11576 * t11882;
t12605 = t11432 * t12996;
t12282 = t11873 * t12605;
t12133 = t11736 * t12282;
t12231 = pkin(6) * t12334 - t12636;
t12505 = t11851 * t12861;
t12607 = t11432 * t12998;
t12956 = t13237 * t11851;
t11100 = (-(-t12956 * t13076 + ((t11807 - 0.2e1 * t11796 + t11905) * t12897 + pkin(5) * t12382) * t11432) * t11576 * t11837 + (t12231 * t11852 - (-t11432 * t11735 * t12505 + (((-t13132 / 0.2e1 + t11747) * t13184 + t11694) * t11432 - t11664 * t13076) * t11872) * t11576) * t11881 + t11820 * t12133 + (-pkin(1) * t12165 + t11697 * t12607) * t11852 + ((-t11229 + t11373) * t11873 - t11332) * t11851 - t12133) * t13261 * t12637;
t12541 = t11644 * t12890;
t11689 = -pkin(5) + t12737;
t12473 = t11735 - 0.2e1 * t13148;
t13201 = -t11735 * t11873 + (-pkin(6) * t12491 - t11689 * t11881) * t12897 + t12732 + (pkin(6) * t12831 + t11873 * t12473) * t11820;
t13140 = pkin(2) * t11882;
t13245 = t11852 * (t11837 * t13140 + t11881 * t13237) + t11872 * t12410 - t11881 * t12227;
t11442 = t13201 * t11641 + t11644 * t13245 - t12541 * t11804;
t12036 = t11442 * t12191;
t12911 = t11838 * t11882;
t12556 = t11576 * t12911;
t12332 = t11345 * t12556;
t11306 = pkin(1) * t12332;
t12110 = pkin(6) * t11735 * t12282;
t13127 = pkin(6) * t11872;
t12219 = t12607 * t13127;
t12949 = t11776 * t11820;
t12419 = -t11841 + t12949;
t11716 = t11795 + t11895;
t12538 = t11716 * t12897;
t12918 = t11836 * t11908;
t12938 = t11820 * t11882;
t12351 = ((-t11423 - (t11432 * t12419 - t12648) * t11576) * t12918 - (-t11306 * t11852 - t11851 * t12791 - ((-t11796 + pkin(1)) * t12938 + (-0.2e1 * t12538 + t13121) * t11873) * t11423) * t13148 + ((t11747 * t11852 + t12705) * t11226 - (-(t11769 - t12478) * t11820 + (-pkin(6) * t11736 + t11765 * t11873) * t12505 + (-t11820 * t11841 + t13160) * pkin(2) * t11735) * t11423) * t11881 + t11820 * t12110 + t12219 * t12253 - t12110 - t12231 * t12956) * t11345 * t13013;
t12912 = t11838 * t11873;
t12557 = t11576 * t12912;
t12333 = t11345 * t12557;
t11305 = pkin(1) * t12333;
t11310 = -t11321 / 0.2e1;
t11329 = t11908 * t11336;
t11577 = 0.1e1 / t12123 ^ 2;
t12107 = (-pkin(2) * t11229 + (pkin(2) * t12636 - t11313) * t11872) * t11882;
t12997 = t11576 * t11873;
t12606 = t11432 * t12997;
t12284 = t11851 * t12606;
t12525 = t11776 * t12916;
t12604 = t11432 * t12883;
t12731 = t11841 * t11795;
t12783 = -t11301 - t11376;
t12909 = t11841 * t11906;
t13050 = t11432 * t11838;
t13092 = (-pkin(2) * t11336 + t11872 * t12780) * t11841;
t13177 = 0.2e1 * t11841;
t13178 = -0.2e1 * t11841;
t12370 = (-0.3e1 * ((t11841 - 0.4e1 / 0.3e1) * t12918 + ((-0.2e1 / 0.3e1 * t11764 + t12769) * t11841 + 0.4e1 / 0.3e1 * t11764 + t12768) * t11881 + (0.4e1 / 0.3e1 * t13148 - 0.2e1 / 0.3e1 * t11735) * pkin(6) * t12840) * t12608 + (-t12525 * t13078 - ((-t11332 + t13088) * t11882 - (-0.4e1 * t11736 + t12731) * t12284) * t13148 + (t11326 - t11329 - (-0.4e1 * t11716 * t12604 - t11873 * t12748) * t11576 * pkin(6) + (-0.2e1 * t11840 * t12219 - t13092 + (t11310 + t12776) * t13266) * pkin(2)) * t11881 - (t12107 - (t11850 + (t11817 - t12909) * t11872) * t12607) * t11873) * t11820 + (-(-0.3e1 * t11841 + 0.3e1) * t12918 * t11423 - (-t11841 * t12118 - 0.2e1 * t11737 * t12605 + (-t11379 + (t11310 + t12783) * t11873) * t13174) * t13148 + ((t11313 + ((t11229 - t11305) * t11872 - t12636) * pkin(2)) * t12883 - ((t11764 + t12770) * t13177 - 0.4e1 * t11764 - 0.2e1 * t11769 - t12260) * t11423) * t11881 + t12231 * t11841 * t13156 - 0.2e1 * t12110 + t11851 * (-pkin(2) * (-pkin(6) * t12166 - t11379) - (t12839 + t13172) * t12334)) * t11852 + t13160 * t11329 * t11836 + (t11229 * t11882 - (-t11795 - t11904 + t12731) * t12607) * t12732 + (t11329 + (t13092 + (-0.2e1 * (-pkin(6) * t11840 + t11747 * t11882) * t12607 + t12482) * t11872) * pkin(2)) * t11881 - t11717 * t12219 * t13178 + t11873 * t12107 - ((t11707 * t11873 + t11849) * t11872 + t11873 * t11850) * t12607) * t11577 * t13050;
t12915 = t11838 * t11848;
t12544 = t11641 * t12890;
t11445 = -t11641 * t13245 + t13201 * t11644 + t12544 * t11804;
t13046 = t11445 * t12190;
t11067 = -t12370 + t11100 - (t12351 + (-t12036 + t13046) * t12915) * t11576;
t11342 = t11345 ^ 2;
t12995 = t11577 * t11839;
t11335 = t11342 * t12995;
t11382 = t11390 ^ 2 * t11839 * t11910 / t11980 ^ 2;
t11235 = t11335 + t11382;
t12047 = t12317 * t11423;
t12028 = 0.2e1 * t12047;
t12651 = t11345 * t13050;
t12245 = 0.2e1 * t11882 * t12651;
t11182 = (-((pkin(6) * t12841 + t13140) * t11851 + pkin(6) * t12868) * t11423 - t12231) * t11576 * t12636;
t12407 = pkin(6) * t12505;
t12699 = pkin(6) * t12938;
t13067 = t11390 * t13261;
t13232 = t11577 * (((-t11881 * t11908 * t13078 + t12040) * t11852 + (-t12783 * t12841 + (-t13078 * t13127 + t13067) * t12911) * t13146 - (-(t12525 - t12909) * t11820 + 0.2e1 * t11716 * t12407 + t12916 * t12944 - t12909 + t11764 + t11769 + (-t11735 * t11820 + (t11737 * t11882 + 0.2e1 * (-t12538 - t12699) * t11873) * t11881) * pkin(2) + t12766) * t11423) * t11432 + (t11271 * t12916 - (-t11682 * t12725 + t12857) * t11423 + t12040) * t13076);
t11493 = -t11644 * t11796 + t11641 * t12963 + (-t11644 * t12831 - t12544) * pkin(2);
t11496 = t11641 * t11796 + t11644 * t12963 + (t11641 * t12831 - t12541) * pkin(2);
t13233 = t11576 * (t11493 * t12191 - t11496 * t12190);
t11088 = t11848 * t13233 + t11182 - t13232;
t12669 = t11088 * t12889;
t13099 = t11088 * t11882;
t12759 = 0.2e1 * t13099;
t13152 = pkin(1) * t11882;
t13253 = pkin(1) * t12759 - (pkin(5) * t11067 * t11873 + pkin(1) * t11071) * t11851 - pkin(5) * (t11235 * t12883 + t11820 * t12028) + 0.2e1 * (-t11305 + t12223) * t11423 + (-t11577 * t12245 * t13136 + t11067 * t13152 - t11235 * t11804 - t11904 * t12669) * t11852;
t13133 = pkin(6) * t11835;
t11693 = t11746 - t13133;
t13002 = t11573 * t11879;
t12610 = t11431 * t13002;
t12287 = t11870 * t12610;
t12135 = t11732 * t12287;
t12232 = pkin(6) * t12339 - t12639;
t12506 = t11851 * t12863;
t12612 = t11431 * t13004;
t12959 = t13238 * t11851;
t11099 = (-(-t12959 * t13079 + ((t11806 - 0.2e1 * t11794 + t11905) * t12897 + pkin(5) * t12383) * t11431) * t11573 * t11831 + (t12232 * t11852 - (-t11431 * t11731 * t12506 + (((-t13133 / 0.2e1 + t11746) * t13184 + t11693) * t11431 - t11663 * t13079) * t11869) * t11573) * t11878 + t11820 * t12135 + (-pkin(1) * t12168 + t11696 * t12612) * t11852 + ((-t11228 + t11372) * t11870 - t11331) * t11851 - t12135) * t13260 * t12640;
t12542 = t11643 * t12892;
t11688 = -pkin(5) + t12738;
t12474 = t11731 - 0.2e1 * t13149;
t13202 = -t11731 * t11870 + (-pkin(6) * t12492 - t11688 * t11878) * t12897 + t12734 + (pkin(6) * t12833 + t11870 * t12474) * t11820;
t13142 = pkin(2) * t11879;
t13244 = t11852 * (t11831 * t13142 + t11878 * t13238) + t11869 * t12411 - t11878 * t12228;
t11441 = t13202 * t11640 + t11643 * t13244 - t12542 * t11803;
t12037 = t11441 * t12193;
t12921 = t11832 * t11879;
t12561 = t11573 * t12921;
t12337 = t11344 * t12561;
t11304 = pkin(1) * t12337;
t12111 = pkin(6) * t11731 * t12287;
t13128 = pkin(6) * t11869;
t12220 = t12612 * t13128;
t12950 = t11775 * t11820;
t12420 = -t11835 + t12950;
t11714 = t11793 + t11895;
t12539 = t11714 * t12897;
t12928 = t11830 * t11908;
t12939 = t11820 * t11879;
t12352 = ((-t11421 - (t11431 * t12420 - t12653) * t11573) * t12928 - (-t11304 * t11852 - t11851 * t12792 - ((-t11794 + pkin(1)) * t12939 + (-0.2e1 * t12539 + t13122) * t11870) * t11421) * t13149 + ((t11746 * t11852 + t12706) * t11225 - (-(t11768 - t12479) * t11820 + (-pkin(6) * t11732 + t11763 * t11870) * t12506 + (-t11820 * t11835 + t13163) * pkin(2) * t11731) * t11421) * t11878 + t11820 * t12111 + t12220 * t12254 - t12111 - t12232 * t12959) * t11344 * t13015;
t12922 = t11832 * t11870;
t12562 = t11573 * t12922;
t12338 = t11344 * t12562;
t11303 = pkin(1) * t12338;
t11309 = -t11319 / 0.2e1;
t11328 = t11908 * t11334;
t11574 = 0.1e1 / t12124 ^ 2;
t12108 = (-pkin(2) * t11228 + (pkin(2) * t12639 - t11312) * t11869) * t11879;
t13003 = t11573 * t11870;
t12611 = t11431 * t13003;
t12289 = t11851 * t12611;
t12526 = t11775 * t12926;
t12609 = t11431 * t12885;
t12733 = t11835 * t11793;
t12784 = -t11300 - t11375;
t12919 = t11835 * t11906;
t13051 = t11431 * t11832;
t13093 = (-pkin(2) * t11334 + t11869 * t12781) * t11835;
t13179 = 0.2e1 * t11835;
t13180 = -0.2e1 * t11835;
t12371 = (-0.3e1 * ((t11835 - 0.4e1 / 0.3e1) * t12928 + ((-0.2e1 / 0.3e1 * t11762 + t12769) * t11835 + 0.4e1 / 0.3e1 * t11762 + t12768) * t11878 + (0.4e1 / 0.3e1 * t13149 - 0.2e1 / 0.3e1 * t11731) * pkin(6) * t12845) * t12613 + (-t12526 * t13081 - ((-t11331 + t13089) * t11879 - (-0.4e1 * t11732 + t12733) * t12289) * t13149 + (t11325 - t11328 - (-0.4e1 * t11714 * t12609 - t11870 * t12749) * t11573 * pkin(6) + (-0.2e1 * t11834 * t12220 - t13093 + (t11309 + t12777) * t13267) * pkin(2)) * t11878 - (t12108 - (t11850 + (t11817 - t12919) * t11869) * t12612) * t11870) * t11820 + (-(-0.3e1 * t11835 + 0.3e1) * t12928 * t11421 - (-t11835 * t12119 - 0.2e1 * t11733 * t12610 + (-t11378 + (t11309 + t12784) * t11870) * t13174) * t13149 + ((t11312 + ((t11228 - t11303) * t11869 - t12639) * pkin(2)) * t12885 - ((t11762 + t12770) * t13179 - 0.4e1 * t11762 - 0.2e1 * t11768 - t12260) * t11421) * t11878 + t12232 * t11835 * t13156 - 0.2e1 * t12111 + t11851 * (-pkin(2) * (-pkin(6) * t12169 - t11378) - (t12844 + t13172) * t12339)) * t11852 + t13163 * t11328 * t11830 + (t11228 * t11879 - (-t11793 - t11904 + t12733) * t12612) * t12734 + (t11328 + (t13093 + (-0.2e1 * (-pkin(6) * t11834 + t11746 * t11879) * t12612 + t12483) * t11869) * pkin(2)) * t11878 - t11715 * t12220 * t13180 + t11870 * t12108 - ((t11707 * t11870 + t11849) * t11869 + t11870 * t11850) * t12612) * t11574 * t13051;
t12925 = t11832 * t11848;
t12545 = t11640 * t12892;
t11444 = -t11640 * t13244 + t13202 * t11643 + t12545 * t11803;
t13047 = t11444 * t12192;
t11066 = -t12371 + t11099 - (t12352 + (-t12037 + t13047) * t12925) * t11573;
t11341 = t11344 ^ 2;
t13001 = t11574 * t11833;
t11333 = t11341 * t13001;
t11381 = t11389 ^ 2 * t11833 * t11910 / t11981 ^ 2;
t11234 = t11333 + t11381;
t12051 = t12320 * t11421;
t12029 = 0.2e1 * t12051;
t12656 = t11344 * t13051;
t12248 = 0.2e1 * t11879 * t12656;
t11181 = (-((pkin(6) * t12846 + t13142) * t11851 + pkin(6) * t12870) * t11421 - t12232) * t11573 * t12639;
t12408 = pkin(6) * t12506;
t12700 = pkin(6) * t12939;
t13068 = t11389 * t13260;
t13234 = t11574 * (((-t11878 * t11908 * t13081 + t12041) * t11852 + (-t12784 * t12846 + (-t13081 * t13128 + t13068) * t12921) * t13146 - (-(t12526 - t12919) * t11820 + 0.2e1 * t11714 * t12408 + t12926 * t12945 - t12919 + t11762 + t11768 + (-t11731 * t11820 + (t11733 * t11879 + 0.2e1 * (-t12539 - t12700) * t11870) * t11878) * pkin(2) + t12766) * t11421) * t11431 + (t11268 * t12926 - (-t11681 * t12726 + t12857) * t11421 + t12041) * t13079);
t11492 = -t11643 * t11794 + t11640 * t12964 + (-t11643 * t12833 - t12545) * pkin(2);
t11495 = t11640 * t11794 + t11643 * t12964 + (t11640 * t12833 - t12542) * pkin(2);
t13235 = t11573 * (t11492 * t12193 - t11495 * t12192);
t11087 = t11848 * t13235 + t11181 - t13234;
t12671 = t11087 * t12891;
t13103 = t11087 * t11879;
t12760 = 0.2e1 * t13103;
t13153 = pkin(1) * t11879;
t13252 = pkin(1) * t12760 - (pkin(5) * t11066 * t11870 + pkin(1) * t11070) * t11851 - pkin(5) * (t11234 * t12885 + t11820 * t12029) + 0.2e1 * (-t11303 + t12224) * t11421 + (-t11574 * t12248 * t13136 + t11066 * t13153 - t11234 * t11803 - t11904 * t12671) * t11852;
t13011 = t11568 * t11823;
t12662 = t11340 * t13011;
t11289 = pkin(6) * t12662;
t12582 = t12199 * t12897;
t11466 = -t12434 - t12582;
t11676 = -t13124 * t13171 + pkin(1);
t11727 = pkin(1) + 0.2e1 * t13124;
t11789 = pkin(1) * t11864;
t11729 = t11789 + pkin(6);
t12684 = pkin(5) + t13125;
t12073 = t12199 * t12684 * t12947;
t12373 = t12684 * t11852;
t12182 = t11888 * t12373;
t12388 = t11789 - t12689;
t12396 = pkin(6) * t12582;
t13145 = pkin(2) * t11866;
t12763 = pkin(6) * t13145;
t11385 = (t11483 * t11851 * t12417 + 0.2e1 * t11466 * t12763) * t11826 + (-t11466 * t11864 * t12935 + ((t11483 * t11727 - t12182) * t11851 + t12073) * t13145 + (t11676 * t11888 - t11864 * t12396) * pkin(6)) * t11867 - (t11888 * t12388 - t12396) * t13145 + ((t11483 * t11729 - t11864 * t12182) * t11851 + t11864 * t12073) * pkin(6);
t12930 = t11823 * t11909;
t12570 = t13263 * t12930;
t12323 = t11385 * t12570;
t11365 = pkin(1) * t12323;
t11368 = t11385 * t13024;
t13134 = pkin(6) * t11826;
t11691 = t11729 - t13134;
t11790 = pkin(1) * t11826;
t12688 = pkin(1) + t13124;
t11692 = t11790 - t12688;
t11726 = pkin(5) * t11863 + pkin(2);
t12893 = t11851 * t11867;
t12697 = pkin(5) * t12893;
t11652 = t12697 + t12746;
t11632 = t11652 * t13145;
t12871 = t11852 * t11867;
t11703 = pkin(6) * t12871;
t11546 = 0.1e1 / (-pkin(1) * t11703 + t11632 - t12187);
t11824 = 0.1e1 / t11866 ^ 2;
t11939 = t11824 * t11546;
t11937 = t11385 * t11939;
t12186 = t12684 * t11410;
t12015 = t12186 * t12852;
t12376 = t11851 * t12688;
t12510 = t11851 * t12871;
t12626 = t11851 * t11410;
t12683 = t11864 * t13171;
t13085 = t11340 * t11568;
t13135 = pkin(5) * t11867;
t13247 = t11729 * t11852 + t12697;
t11097 = (-(-t12376 * t13083 + ((t11790 + t11905 - 0.2e1 * t13124) * t12897 + t12683 * t13135) * t11427) * t11568 * t11822 + (-t11368 * t11852 - (-t11427 * t11726 * t12510 + (((-t13134 / 0.2e1 + t11729) * t13184 + t11691) * t11427 - t13247 * t13083) * t11863) * t11568) * t11866 + t11820 * t12015 + (-t11365 * t11867 + t11692 * t12626) * t11852 + (-t11289 * t11864 + (-pkin(1) * t13085 - (-pkin(5) * t11909 - t11863) * t13263 * t11864 * t11385) * t11823) * t11851 - t12015) * t13263 * t11937;
t12933 = t11823 * t11863;
t12660 = t11340 * t12933;
t12343 = t11568 * t12660;
t12213 = pkin(6) * t12343;
t11213 = -t11368 + t12213;
t12265 = t11863 * t11368;
t11214 = t11289 - t12265;
t11712 = t11895 + t13125;
t11760 = pkin(1) * t13124;
t11938 = t11340 * t11939;
t13010 = t11568 * t11864;
t12625 = t11427 * t13010;
t12303 = t11726 * t12625;
t12112 = t12303 * t13123;
t12622 = t11427 * t12896;
t12300 = t11568 * t12622;
t12156 = t11852 * t12300;
t12931 = t11823 * t11867;
t12658 = t11340 * t12931;
t12413 = pkin(1) * t12658;
t12951 = t11771 * t11820;
t12421 = -t11826 + t12951;
t12511 = t11851 * t12873;
t12438 = 0.2e1 * t12511;
t11758 = pkin(5) * t13125;
t12480 = t11758 + t12764;
t13082 = t11340 * t11852;
t12661 = t11823 * t13082;
t11284 = pkin(2) * t12343;
t11290 = pkin(5) * t12662;
t11364 = pkin(6) * t12323;
t12785 = -t11290 - t11364;
t11186 = -t11284 + t12785;
t12793 = t11186 * t11864 - t11365;
t11922 = t11866 * t11822;
t12827 = t11908 * t11922;
t11931 = ((-t11410 - (t11427 * t12421 - t12661) * t11568) * t12827 + (t11851 * t12793 - (-t11852 * t12413 + (t11712 * t12438 + (-(pkin(1) - t13124) * t11820 - t13124) * t11867) * t11427) * t11568) * t13150 + (t13247 * t11214 - (-(t11760 - t12480) * t11820 + (-pkin(6) * t12684 + t11759 * t11864) * t12510 + (-t11820 * t11826 + t13167) * pkin(2) * t11726) * t11410) * t11866 + t11820 * t12112 + pkin(6) * t11692 * t12156 - t12112 - t11213 * t12376) * t11938;
t12546 = t11639 * t12896;
t11609 = pkin(6) * t12850 + (t11726 - 0.2e1 * t13150) * t11864;
t11687 = -pkin(5) + t12739;
t13203 = -t11726 * t11864 + (-pkin(6) * t12493 - t11687 * t11866) * t12897 + t12735 + t11609 * t11820;
t13144 = pkin(2) * t11867;
t13243 = t11852 * (t11822 * t13144 + t11866 * t12688) + t11863 * t12412 - t11866 * t12229;
t11438 = t13203 * t11638 + t11639 * t13243 - t12546 * t11789;
t12038 = t11438 * t12195;
t12225 = pkin(5) * t12323;
t11215 = t11289 - t12225;
t11367 = pkin(2) * t11368;
t11216 = pkin(5) * t11289 - t11367;
t12932 = t11823 * t11864;
t12566 = t11568 * t12932;
t12342 = t11340 * t12566;
t11285 = pkin(1) * t12342;
t11291 = t11906 * t12662;
t11292 = t11908 * t12662;
t12172 = t11864 * t12323;
t11363 = pkin(1) * t12172;
t11713 = t13124 / 0.2e1 + pkin(1);
t11825 = t11867 * t11826;
t12173 = t11851 * t12323;
t12120 = pkin(1) * t12173;
t12221 = pkin(6) * t12300;
t12233 = pkin(2) * t11215 + t11216 * t11863;
t12621 = t11427 * t12895;
t12299 = t11568 * t12621;
t12484 = t11363 - t12785;
t12527 = t11771 * t12935;
t12620 = t11427 * t12893;
t11569 = 0.1e1 / t12125 ^ 2;
t13059 = t11427 * t11569;
t12623 = t11823 * t13059;
t13009 = t11568 * t11867;
t12624 = t11427 * t13009;
t12659 = t11340 * t12932;
t12778 = -t11364 - t11290 / 0.2e1;
t12851 = t11864 * t11906;
t12929 = t11826 * t11906;
t13090 = t11215 * t11864;
t13094 = (-pkin(2) * t12662 + t11863 * t12785) * t11826;
t13181 = 0.2e1 * t11826;
t13182 = -0.2e1 * t11826;
t12372 = (-0.3e1 * ((t11826 - 0.4e1 / 0.3e1) * t12827 + ((-0.2e1 / 0.3e1 * t11758 + t12769) * t11826 + 0.4e1 / 0.3e1 * t11758 + t12768) * t11866 + (0.4e1 / 0.3e1 * t13150 - 0.2e1 / 0.3e1 * t11726) * pkin(6) * t12852) * t11819 * t11410 + (-t12527 * t13085 - ((-pkin(1) * t12662 + t13090) * t11867 - (-0.4e1 * pkin(5) + (t11826 - 0.4e1) * t13125) * t12299) * t13150 + (t11291 - t11292 - (-pkin(1) * t12659 - 0.4e1 * t11712 * t12620) * t11568 * pkin(6) + (-0.2e1 * t11825 * t12221 - t13094 + (-t11363 + t12778) * t13268) * pkin(2)) * t11866 + (t12233 * t11867 - (-t11850 + (-t11817 + t12929) * t11863) * t12626) * t11864) * t11820 + (-(-0.3e1 * t11826 + 0.3e1) * t12827 * t11410 - (-t11826 * t12120 - 0.2e1 * t11727 * t12624 + (-t11365 + (-t11284 + t12778) * t11864) * t13174) * t13150 + (((t11215 - t11285) * t13125 + t11216) * t12893 - ((t11758 + t12770) * t13181 - 0.4e1 * t11758 - 0.2e1 * t11760 - t12260) * t11410) * t11866 + t11213 * t11826 * t13156 - 0.2e1 * t12112 - (pkin(2) * (-pkin(6) * t12172 - t11365) - (-t12851 - t13172) * t12343) * t11851) * t11852 + t13167 * t11292 * t11922 + (t11215 * t11867 - (-t11904 + t12961) * t12626) * t12735 + (t11292 + (t13094 + ((-pkin(6) * t11825 + t11729 * t11867) * t11851 * t12467 + t12484) * t11863) * pkin(2)) * t11866 - t11713 * t12221 * t13182 - t12233 * t12852 - ((t11707 * t11864 + t11849) * t11863 + t11864 * t11850) * t12626) * t12623;
t12934 = t11823 * t11848;
t12547 = t11638 * t12896;
t11439 = -t11638 * t13243 + t13203 * t11639 + t12547 * t11789;
t13048 = t11439 * t12194;
t11065 = -t12372 + t11097 - (t11931 + (-t12038 + t13048) * t12934) * t11568;
t11283 = -t11568 * t12661 / 0.2e1;
t13012 = t11568 * t11820;
t12521 = t11427 * t13012;
t11246 = -t12521 + t11283 + t11410 / 0.2e1;
t11288 = 0.2e1 * t11289;
t12375 = t11851 * t12684;
t12185 = t11864 * t12375;
t11608 = t11865 * t11729 - t11868 * t12185;
t11620 = t11865 * t11727 - t11868 * t12375;
t12184 = t11865 * t12375;
t11974 = t11729 * t11868 + t11864 * t12184;
t11998 = t11727 * t11868 + t12184;
t12204 = t12417 * t11639;
t11450 = t13255 + ((t11778 * t11620 - t11782 * t11998) * t13145 + t12204 * t12873) * t11867 + (t11778 * t11608 - t11782 * t11974 + t12404) * pkin(6);
t12105 = t12417 * t12873;
t12405 = t11638 * t12696;
t11451 = (t12405 * t13197 + t12204) * t11826 + ((t11620 * t11782 + t11778 * t11998) * t13145 - t11638 * t12105) * t11867 + (t11608 * t11782 + t11778 * t11974 - t12405) * pkin(6);
t11730 = 0.2e1 * t11758;
t12034 = t11851 * t12195;
t12042 = pkin(6) * t12265 - t11291;
t12074 = t11852 * t12186;
t12121 = t12265 * t13155;
t12183 = t11867 * t12375;
t12270 = t11822 * t12522;
t12302 = t12947 * t11410;
t12374 = t12688 * t11852;
t12384 = t13171 * t11410;
t12495 = t11568 * t12875;
t12397 = pkin(6) * t12495;
t12520 = t11822 * t12856;
t12523 = t11866 * t12947;
t12750 = pkin(1) * t13083;
t12880 = t11851 * t11909;
t13023 = t13263 * t11909;
t13229 = (t11819 * t12684 - t12373) * t12467;
t13239 = 0.2e1 * t11864;
t11069 = t13023 * (t11823 * (-t11450 * t12194 * t12898 - ((t11893 + t12935) * t11825 * t12302 * t12727 + (pkin(2) * ((t11288 - t12225) * t13125 - t11367 + (0.4e1 * t12074 + 0.2e1 * t11290 + t11364) * pkin(6)) * t12523 + (t11214 * t11757 - (t12520 * t12750 + ((t13199 + (-0.3e1 * t11820 + 0.3e1) * t13124) * t12935 + (t11713 * t13198 + t11820 * t12851) * pkin(6)) * t11427) * t11568) * t11851) * t11826 + (t11246 * t11922 * t12751 + (-t12074 * t13239 + t12793) * t12270 + ((-(t11288 - t12265) * t11789 + t12042) * t11852 - ((t11758 + t12476) * t13184 + t11730 + 0.4e1 * t11760 + t12261) * t11410) * t12727 + (t13171 * (t11215 * t13125 + t11216) - pkin(6) * t13229) * t13124) * t11867 + t11246 * t12485 * t12936 + ((-t11284 - t12484) * t11820 + t11363 - t11186 + t13229) * t12763 + ((-pkin(1) * t11214 + t11864 * t12042) * t11852 - (t11849 + ((t11758 + t12767) * t13184 + t11730 + t11707) * t11864) * t11410) * t13130) * t11410) - ((-t11867 * t12302 * t12688 - t12120) * t13150 + (-t12480 * t11826 * t12302 - pkin(2) * (t11368 + (-t11729 * t12495 - t11215) * t11863) * t12893 - t11864 * t12121 - t11729 * pkin(6) * t12384) * t11866 - (t12156 * t11790 + (-t11909 * t12121 + t12303 * t13171) * t11867 + t11851 * (t11864 * t11368 + (-t13090 - (t11427 * t12374 + t12750) * t11568) * t11863)) * pkin(6)) * t11937) + (t11912 * t12200 * t11922 * t13009 + ((pkin(6) * t12200 - t11427 * t12183) * t11864 + (t11826 * t12875 + t13083) * pkin(1)) * t11568 * t12935 - 0.2e1 * ((t12265 / 0.2e1 - t11289 / 0.2e1) * t11867 - ((t12684 * t11826 - t13125 / 0.2e1 - pkin(5) / 0.2e1) * t11851 + (t11789 + t13192) * t12871) * t11410) * t12763 + (-t12397 * t11790 + t12015 * t13130 + (t11214 + t12397) * t12688) * pkin(6)) * t11568 * t11938 * t12880 - t11451 * t11848 * t12034 * t12570;
t11339 = t11340 ^ 2;
t13008 = t11569 * t11824;
t11293 = t11339 * t13008;
t11366 = t11385 ^ 2 * t11824 * t11910 / t11936 ^ 2;
t11217 = t11293 + t11366;
t12055 = t12323 * t11410;
t12030 = 0.2e1 * t12055;
t12130 = t11340 * t12623 * t13173;
t11490 = -t11639 * t13124 + t11638 * t12965 + (-t11639 * t12850 - t12547) * pkin(2);
t11491 = t11638 * t13124 + t11639 * t12965 + (t11638 * t12850 - t12546) * pkin(2);
t11956 = t11490 * t12195 - t11491 * t12194;
t12346 = (-t11368 - (-pkin(6) * t12660 + (-(pkin(6) * t12853 + t13144) * t11851 - pkin(6) * t12874) * t11427) * t11568) * t11368;
t12664 = t11866 * t13085;
t13228 = (((-t11908 * t12664 + t12042) * t11852 + (-(-t11284 - t11364) * t12717 - (pkin(2) * t12213 - t11367) * t11867) * t11851 - (-(t12527 - t12929) * t11820 + t11712 * t12510 * t13197 + t12935 * t12946 - t12929 + t11758 + t11760 + (-t11726 * t11820 + (t11727 * t11867 + (-t11712 * t12897 - t11820 * t13123) * t13239) * t11866) * pkin(2) + t12766) * t11410) * t11427 + (-(-pkin(2) * t11680 * t12622 + t11427 * t12857 + t12200 * t12935) * t11568 + t12042) * t13083) * t11569;
t11082 = -t13228 - (-t11848 * t11956 + t12346) * t11568;
t12673 = t11082 * t12895;
t13107 = t11082 * t11867;
t12761 = 0.2e1 * t13107;
t13154 = pkin(1) * t11867;
t13251 = pkin(1) * t12761 - (pkin(5) * t11065 * t11864 + pkin(1) * t11069) * t11851 - pkin(5) * (t11217 * t12893 + t11820 * t12030) - (-t11285 + t12225) * t12467 + (t11065 * t13154 - t11217 * t11789 - t11904 * t12673 - t12130 * t13135) * t11852;
t13242 = 0.4e1 * t11754;
t13241 = 0.4e1 * t11755;
t13240 = 0.4e1 * t11756;
t11404 = t11568 * t12620;
t11347 = -t11404 + t12323 / 0.2e1;
t13191 = -0.2e1 * t11347;
t11411 = t11573 * t12609;
t11351 = -t11411 + t12320 / 0.2e1;
t13190 = -0.2e1 * t11351;
t11412 = t11576 * t12604;
t11352 = -t11412 + t12317 / 0.2e1;
t13189 = -0.2e1 * t11352;
t11413 = t11579 * t12599;
t11353 = -t11413 + t12314 / 0.2e1;
t13188 = -0.2e1 * t11353;
t13183 = 0.2e1 * t11820;
t13170 = t13183 - 0.2e1;
t13169 = 0.2e1 * t11822 - 0.1e1;
t13168 = 0.4e1 * t11822 - 0.2e1;
t13166 = t13181 - 0.1e1;
t13165 = 0.2e1 * t11831 - 0.1e1;
t13164 = 0.4e1 * t11831 - 0.2e1;
t13162 = 0.2e1 * t11837 - 0.1e1;
t13161 = 0.4e1 * t11837 - 0.2e1;
t13159 = 0.2e1 * t11843 - 0.1e1;
t13158 = 0.4e1 * t11843 - 0.2e1;
t11818 = t11851 ^ 2;
t13118 = MDP(4) * t11818;
t13117 = MDP(5) * t11818;
t13116 = MDP(6) * t11851;
t13115 = MDP(7) * t11851;
t11061 = t11082 * t12893 - t11069;
t13114 = t11061 * t11867;
t11062 = t11087 * t12885 - t11070;
t13113 = t11062 * t11879;
t11063 = t11088 * t12883 - t11071;
t13112 = t11063 * t11882;
t11064 = t11089 * t12881 - t11072;
t13111 = t11064 * t11885;
t12710 = pkin(5) * t12895;
t11651 = pkin(1) * t12871 - t12710;
t13110 = t11082 * t11651;
t13109 = t11082 * t11652;
t11821 = t11864 ^ 2;
t13108 = t11082 * t11821;
t12709 = pkin(5) * t12891;
t11659 = pkin(1) * t12863 - t12709;
t13106 = t11087 * t11659;
t13105 = t11087 * t11663;
t11827 = t11870 ^ 2;
t13104 = t11087 * t11827;
t12708 = pkin(5) * t12889;
t11660 = pkin(1) * t12861 - t12708;
t13102 = t11088 * t11660;
t13101 = t11088 * t11664;
t11828 = t11873 ^ 2;
t13100 = t11088 * t11828;
t12707 = pkin(5) * t12887;
t11661 = pkin(1) * t12859 - t12707;
t13098 = t11089 * t11661;
t13097 = t11089 * t11662;
t11829 = t11876 ^ 2;
t13096 = t11089 * t11829;
t13086 = t11340 * t11427;
t13084 = t11340 * t11569;
t13080 = t11344 * t11574;
t13077 = t11345 * t11577;
t13074 = t11346 * t11580;
t11349 = -t11404 + t12323;
t13072 = t11349 * t11427;
t11355 = -t11411 + t12320;
t13071 = t11355 * t11431;
t11357 = -t11412 + t12317;
t13070 = t11357 * t11432;
t11359 = -t11413 + t12314;
t13069 = t11359 * t11433;
t11749 = t11820 - 0.1e1 / 0.2e1;
t12855 = t11863 * t11864;
t12503 = t11851 * t12855;
t11637 = t12503 - t12872;
t12973 = t11637 * t11867;
t11506 = (-t11726 * t12947 + t11749 * t12826) * t11864 + (pkin(6) * t12973 + (t11826 * t13125 - 0.2e1 * t11712) * t12894) * t11852;
t11514 = (-pkin(2) * t12973 + t12374) * t11866 - t11691 * t12896;
t11458 = t11506 * t11868 + t11514 * t11865;
t11459 = -t11506 * t11865 + t11514 * t11868;
t11396 = (t12195 * (-t11458 * t11778 + t11459 * t11782) + t12194 * (t11458 * t11782 + t11459 * t11778)) * t13024;
t13065 = t11396 * t11866;
t12843 = t11872 * t11873;
t12499 = t11851 * t12843;
t11647 = t12499 - t12862;
t12971 = t11647 * t11882;
t11508 = (-t11735 * t12947 + t11749 * t12824) * t11873 + (pkin(6) * t12971 + (-0.2e1 * t11716 + t12731) * t12884) * t11852;
t11516 = (-pkin(2) * t12971 + t11852 * t13237) * t11881 - t11694 * t12890;
t11461 = t11508 * t11883 + t11516 * t11874;
t11464 = -t11508 * t11874 + t11516 * t11883;
t11397 = (t12191 * (-t11461 * t11780 + t11464 * t11784) + t12190 * (t11461 * t11784 + t11464 * t11780)) * t13020;
t13064 = t11397 * t11881;
t12838 = t11875 * t11876;
t12497 = t11851 * t12838;
t11648 = t12497 - t12860;
t12970 = t11648 * t11885;
t11509 = (-t11739 * t12947 + t11749 * t12823) * t11876 + (pkin(6) * t12970 + (-0.2e1 * t11718 + t12729) * t12882) * t11852;
t11517 = (-pkin(2) * t12970 + t11852 * t13236) * t11884 - t11695 * t12888;
t11462 = t11509 * t11886 + t11517 * t11877;
t11465 = -t11509 * t11877 + t11517 * t11886;
t11398 = (t12189 * (-t11462 * t11781 + t11465 * t11785) + (t11462 * t11785 + t11465 * t11781) * t12188) * t13019;
t13063 = t11398 * t11884;
t12848 = t11869 * t11870;
t12501 = t11851 * t12848;
t11646 = t12501 - t12864;
t12972 = t11646 * t11879;
t11507 = (-t11731 * t12947 + t11749 * t12825) * t11870 + (pkin(6) * t12972 + (-0.2e1 * t11714 + t12733) * t12886) * t11852;
t11515 = (-pkin(2) * t12972 + t11852 * t13238) * t11878 - t11693 * t12892;
t11460 = t11507 * t11880 + t11515 * t11871;
t11463 = -t11507 * t11871 + t11515 * t11880;
t11399 = ((-t11460 * t11779 + t11463 * t11783) * t12193 + t12192 * (t11460 * t11783 + t11463 * t11779)) * t13021;
t13062 = t11399 * t11878;
t11426 = t11427 ^ 2;
t11409 = t11426 * t11569;
t11649 = -pkin(5) * t12511 + t13154;
t13061 = t11426 * t11649;
t11650 = pkin(5) * t12510 + t11789;
t13060 = t11426 * t11650;
t13058 = t11427 * t11867;
t11428 = t11431 ^ 2;
t11420 = t11428 * t11574;
t12509 = t11851 * t12869;
t11653 = -pkin(5) * t12509 + t13153;
t13057 = t11428 * t11653;
t11656 = pkin(5) * t12506 + t11803;
t13056 = t11428 * t11656;
t11429 = t11432 ^ 2;
t11422 = t11429 * t11577;
t12508 = t11851 * t12867;
t11654 = -pkin(5) * t12508 + t13152;
t13055 = t11429 * t11654;
t11657 = pkin(5) * t12505 + t11804;
t13054 = t11429 * t11657;
t11430 = t11433 ^ 2;
t11424 = t11430 * t11580;
t12507 = t11851 * t12865;
t11655 = -pkin(5) * t12507 + t13151;
t13053 = t11430 * t11655;
t11658 = pkin(5) * t12504 + t11805;
t13052 = t11430 * t11658;
t13044 = t11450 * t13263;
t13043 = t11452 * t13260;
t13042 = t11453 * t13261;
t13041 = t11454 * t13262;
t13040 = t11490 * t11568;
t13039 = t11491 * t11568;
t13038 = t11492 * t11573;
t13037 = t11493 * t11576;
t13036 = t11494 * t11579;
t13035 = t11495 * t11573;
t13034 = t11496 * t11576;
t13033 = t11497 * t11579;
t11498 = (t11687 * t11820 + pkin(5)) * t11866 + (-t11728 * t11866 + (pkin(6) * t12683 - pkin(1)) * t11867) * t11863 + t11609 * t12897;
t13032 = t11498 * t11546;
t11724 = t13170 * pkin(6);
t11499 = -t12270 * t12852 + (t11724 * t11826 + t11852 * t12183 + t12388) * t13145 - (t11676 * t11867 - t11852 * t12185) * pkin(6);
t13031 = t11499 * t11546;
t11500 = -t12269 * t12845 + (t11724 * t11835 + t11852 * t12489 + t12387) * t13143 - (t11677 * t11879 - t11732 * t12509) * pkin(6);
t13030 = t11500 * t13195;
t11501 = -t12268 * t12840 + (t11724 * t11841 + t11852 * t12488 + t12386) * t13141 - (t11678 * t11882 - t11736 * t12508) * pkin(6);
t13029 = t11501 * t13194;
t11502 = -t12267 * t12835 + (t11724 * t11847 + t11852 * t12487 + t12385) * t13139 - (t11679 * t11885 - t11740 * t12507) * pkin(6);
t13028 = t11502 * t13196;
t11503 = (t11688 * t11820 + t12408 - t12471) * t11878 - t11869 * t12958 + (t11869 * t12700 + t12474 * t12897) * t11870;
t13027 = t11503 * t13195;
t11504 = (t11689 * t11820 + t12407 - t12470) * t11881 - t11872 * t12955 + (t11872 * t12699 + t12473 * t12897) * t11873;
t13026 = t11504 * t13194;
t11505 = (t11690 * t11820 + t12406 - t12469) * t11884 - t11875 * t12952 + (t11875 * t12698 + t12472 * t12897) * t11876;
t13025 = t11505 * t13196;
t13022 = t11546 * t11823;
t13018 = t13196 * t11844;
t13016 = t13195 * t11832;
t13014 = t13194 * t11838;
t13007 = t11568 * t11613;
t12988 = t11573 * t11617;
t12987 = t11576 * t11618;
t12986 = t11579 * t11619;
t12969 = t11650 * t11863;
t12968 = t11656 * t11869;
t12967 = t11657 * t11872;
t12966 = t11658 * t11875;
t12942 = t11815 * t11848;
t12941 = t11816 * t11848;
t12940 = t11818 * t11909;
t12923 = t11832 * t11869;
t12913 = t11838 * t11872;
t12903 = t11844 * t11875;
t12879 = t11852 * t11065;
t12878 = t11852 * t11066;
t12877 = t11852 * t11067;
t12876 = t11852 * t11068;
t12854 = t11863 * t11866;
t12847 = t11869 * t11878;
t12842 = t11872 * t11881;
t12837 = t11875 * t11884;
t11026 = t11082 * t12421 + t11082 - t12879;
t12753 = -0.2e1 * t12897;
t11153 = t12055 * t12753 + (-t11568 * t12173 + (t11569 * t11820 - t13193) * t13058) * t13083;
t12563 = t11569 * t12893;
t12137 = t11339 * t11824 * t12563;
t12642 = t11385 * t13023;
t12325 = t11427 * t12642;
t12380 = t12421 + 0.1e1;
t12494 = t11863 * t12853;
t12666 = (-t11404 - t12323) * t13082;
t11081 = t11852 * t11082;
t11042 = t11081 - t12372 / 0.2e1 + t11097 / 0.2e1 - (t11931 / 0.2e1 + (t13048 / 0.2e1 - t12038 / 0.2e1) * t12934) * t11568;
t12682 = t11042 * t12895;
t12822 = -0.2e1 * t11026 * t12854 + t12682 * t13168 + 0.4e1 * t11153 * t12494 + t13169 * t12137 - (t13168 * t12666 - (-0.4e1 * t11822 * t12380 + 0.2e1 * t12951 + t13182 + 0.2e1) * t12325) * t13011;
t11030 = t11087 * t12420 + t11087 - t12878;
t11154 = t12051 * t12753 + (-t11573 * t12170 + (-t11573 ^ 2 + t11574 * t11820) * t11879 * t11431) * t13079;
t12558 = t11574 * t12885;
t12136 = t11341 * t11833 * t12558;
t12641 = t11909 * t13068;
t12322 = t11431 * t12641;
t12379 = t12420 + 0.1e1;
t12657 = t11344 * (-t11411 - t12320) * t11852;
t11084 = t11852 * t11087;
t11049 = t11084 - t12371 / 0.2e1 + t11099 / 0.2e1 - (t12352 / 0.2e1 + (t13047 / 0.2e1 - t12037 / 0.2e1) * t12925) * t11573;
t12681 = t11049 * t12891;
t12821 = -0.2e1 * t11030 * t12847 + t12681 * t13164 + 0.4e1 * t11869 * t11154 * t12846 + t13165 * t12136 - (t13164 * t12657 - (-0.4e1 * t11831 * t12379 + 0.2e1 * t12950 + t13180 + 0.2e1) * t12322) * t13005;
t11031 = t11088 * t12419 + t11088 - t12877;
t11155 = t12047 * t12753 + (-t11576 * t12167 + (-t11576 ^ 2 + t11577 * t11820) * t11882 * t11432) * t13076;
t12553 = t11577 * t12883;
t12134 = t11342 * t11839 * t12553;
t12638 = t11909 * t13067;
t12319 = t11432 * t12638;
t12378 = t12419 + 0.1e1;
t12652 = t11345 * (-t11412 - t12317) * t11852;
t11085 = t11852 * t11088;
t11050 = t11085 - t12370 / 0.2e1 + t11100 / 0.2e1 - (t12351 / 0.2e1 + (t13046 / 0.2e1 - t12036 / 0.2e1) * t12915) * t11576;
t12680 = t11050 * t12889;
t12820 = -0.2e1 * t11031 * t12842 + t12680 * t13161 + 0.4e1 * t11155 * t11872 * t12841 + t13162 * t12134 - (t13161 * t12652 - (-0.4e1 * t11837 * t12378 + 0.2e1 * t12949 + t13178 + 0.2e1) * t12319) * t12999;
t11032 = t11089 * t12418 + t11089 - t12876;
t11156 = t12043 * t12753 + (-t11579 * t12164 + (-t11579 ^ 2 + t11580 * t11820) * t11885 * t11433) * t13073;
t12548 = t11580 * t12881;
t12132 = t11343 * t11845 * t12548;
t12635 = t11909 * t13066;
t12316 = t11433 * t12635;
t12377 = t12418 + 0.1e1;
t12647 = t11346 * (-t11413 - t12314) * t11852;
t11086 = t11852 * t11089;
t11051 = t11086 - t12369 / 0.2e1 + t11101 / 0.2e1 - (t12350 / 0.2e1 + (t13045 / 0.2e1 - t12035 / 0.2e1) * t12905) * t11579;
t12679 = t11051 * t12887;
t12819 = -0.2e1 * t11032 * t12837 + t12679 * t13158 + 0.4e1 * t11156 * t11875 * t12836 + t13159 * t12132 - (t13158 * t12647 - (-0.4e1 * t11843 * t12377 + 0.2e1 * t12948 + t13176 + 0.2e1) * t12316) * t12993;
t11045 = t11081 + t11065;
t11257 = (t12875 + t13083 / 0.2e1) * t11568;
t12266 = t11851 * t12494;
t12324 = t11864 * t12642;
t12818 = t11026 * t11822 + 0.2e1 * t11042 * t12266 + t11045 * t11852 + t12137 * t12854 - 0.2e1 * t11153 * t12936 + (-t11257 * t11851 * t12324 + (-t12325 * t12380 - t12666) * t11568 * t12854) * t13264;
t11056 = t11084 + t11066;
t11263 = -t11417 - t11334 / 0.2e1;
t12321 = t11870 * t12641;
t12437 = 0.2e1 * t12501;
t12817 = t11049 * t11878 * t12437 + t11030 * t11831 + t11056 * t11852 + t12136 * t12847 - 0.2e1 * t11154 * t12927 + 0.2e1 * (t11851 * t11263 * t12321 + (-t12322 * t12379 - t12657) * t11573 * t12847) * t11832;
t11060 = t11086 + t11068;
t11265 = -t11419 - t11338 / 0.2e1;
t12315 = t11876 * t12635;
t12435 = 0.2e1 * t12497;
t12816 = t11051 * t11884 * t12435 + t11032 * t11843 + t11060 * t11852 + t12132 * t12837 - 0.2e1 * t11156 * t12907 + 0.2e1 * (t11851 * t11265 * t12315 + (-t12316 * t12377 - t12647) * t11579 * t12837) * t11844;
t11058 = t11085 + t11067;
t11264 = -t11418 - t11336 / 0.2e1;
t12318 = t11873 * t12638;
t12436 = 0.2e1 * t12499;
t12815 = t11050 * t11881 * t12436 + t11031 * t11837 + t11058 * t11852 + t12134 * t12842 - 0.2e1 * t11155 * t12917 + 0.2e1 * (t11851 * t11264 * t12318 + (-t12319 * t12378 - t12652) * t11576 * t12842) * t11838;
t12762 = 0.2e1 * t11848;
t11017 = t11069 * t12746 + (t11069 * t12893 + t11082 * t13183 + 0.2e1 * t13228 - (t11956 * t12762 - 0.2e1 * t12346) * t11568) * pkin(5);
t11165 = t11365 * t11851 / 0.2e1 - ((-pkin(5) * t12621 + t12413) * t11852 - t12659 * t13136 + pkin(1) * t13058) * t11568;
t12240 = 0.2e1 * t12323;
t12814 = t13251 * t11866 + (t11165 * t12240 - t11017) * t11863;
t12813 = -t11017 * t11866 + 0.2e1 * t11165 * t12642 - t11863 * t13251;
t11018 = t11070 * t12745 + (t11070 * t12885 + t11087 * t13183 - t12762 * t13235 - 0.2e1 * t11181 + 0.2e1 * t13234) * pkin(5);
t12239 = 0.2e1 * ((pkin(5) * t12289 - t11304) * t11852 + (pkin(5) * t12338 + t11378 / 0.2e1) * t11851 - pkin(1) * t12610) * t12641;
t12812 = -t11869 * t11018 + t11878 * t13252 + t12239 * t12923;
t11019 = t11071 * t12744 + (t11071 * t12883 + t11088 * t13183 - t12762 * t13233 - 0.2e1 * t11182 + 0.2e1 * t13232) * pkin(5);
t12238 = 0.2e1 * ((pkin(5) * t12284 - t11306) * t11852 + (pkin(5) * t12333 + t11379 / 0.2e1) * t11851 - pkin(1) * t12605) * t12638;
t12811 = -t11872 * t11019 + t11881 * t13253 + t12238 * t12913;
t11020 = t11072 * t12743 + (t11072 * t12881 + t11089 * t13183 - t12762 * t13231 - 0.2e1 * t11183 + 0.2e1 * t13230) * pkin(5);
t12237 = 0.2e1 * ((pkin(5) * t12279 - t11308) * t11852 + (pkin(5) * t12328 + t11380 / 0.2e1) * t11851 - pkin(1) * t12600) * t12635;
t12810 = -t11875 * t11020 + t11884 * t13254 + t12237 * t12903;
t12809 = -t11878 * t11018 - t11869 * t13252 + t12239;
t12808 = -t11881 * t11019 - t11872 * t13253 + t12238;
t12807 = -t11020 * t11884 - t11875 * t13254 + t12237;
t12006 = t11867 * t12030;
t11196 = t12006 + t11851 * (t11293 - t11366);
t11240 = t11851 * t12006 - t11366;
t12171 = t11867 * t12324;
t12502 = t11851 * t12853;
t11753 = t11826 - 0.1e1 / 0.2e1;
t12665 = t11753 * t13086;
t12678 = t11065 * t12893;
t12805 = (-t11863 * t12171 + t12664 * t13166) * t12521 * t13264 + (-t11240 * t11866 + t12130 * t12855) * t11852 - 0.4e1 * t11569 * t12665 + t11196 * t12855 - t11863 * t12678 + t11069 * (t12502 + t12874) + (t11863 * t12753 + t12853 * t13170) * t13107;
t12003 = t11879 * t12029;
t11197 = t12003 + t11851 * (t11333 - t11381);
t11241 = t11851 * t12003 - t11381;
t12451 = 0.2e1 * t11334;
t12500 = t11851 * t12846;
t12677 = t11066 * t12885;
t12804 = t11197 * t12848 - t11241 * t12864 + (0.2e1 * ((t11835 * t12451 - t11334) * t11878 - t11870 * t12061) * t13006 + (t12437 * t12924 - 0.4e1 * t11754) * t13080) * t11431 - t11869 * t12677 + t11070 * (t12500 + t12870) + (t11869 * t12753 + t12846 * t13170) * t13103;
t12005 = t11882 * t12028;
t11198 = t12005 + t11851 * (t11335 - t11382);
t11242 = t11851 * t12005 - t11382;
t12447 = 0.2e1 * t11336;
t12498 = t11851 * t12841;
t12676 = t11067 * t12883;
t12803 = t11198 * t12843 - t11242 * t12862 + (0.2e1 * ((t11841 * t12447 - t11336) * t11881 - t11873 * t12060) * t13000 + (t12436 * t12914 - 0.4e1 * t11755) * t13077) * t11432 - t11872 * t12676 + t11071 * (t12498 + t12868) + (t11872 * t12753 + t12841 * t13170) * t13099;
t12004 = t11885 * t12027;
t11199 = t12004 + t11851 * (t11337 - t11383);
t11243 = t11851 * t12004 - t11383;
t12443 = 0.2e1 * t11338;
t12496 = t11851 * t12836;
t12675 = t11068 * t12881;
t12802 = t11199 * t12838 - t11243 * t12860 + (0.2e1 * ((t11847 * t12443 - t11338) * t11884 - t11876 * t12059) * t12994 + (t12435 * t12904 - 0.4e1 * t11756) * t13074) * t11433 - t11875 * t12675 + t11072 * (t12496 + t12866) + (t11875 * t12753 + t12836 * t13170) * t13095;
t12801 = t11196 * t12853 + t11240 * t12874 + (0.4e1 * (-t11753 * t12343 - t12171 / 0.2e1) * t13012 + (0.4e1 * t11753 * t12933 + t12438) * t13084) * t11427 - t11866 * t12678 - t11069 * t11637 + (t11866 * t12753 - t12855 * t13170) * t13107;
t12800 = t11197 * t12846 + t11241 * t12870 + (0.4e1 * (-t11754 * t12339 - t11879 * t12321 / 0.2e1) * t13006 + (t12923 * t13242 + 0.2e1 * t12509) * t13080) * t11431 - t11878 * t12677 - t11070 * t11646 + (t11878 * t12753 - t12848 * t13170) * t13103;
t12799 = t11199 * t12836 + t11243 * t12866 + (0.4e1 * (-t11756 * t12329 - t11885 * t12315 / 0.2e1) * t12994 + (t12903 * t13240 + 0.2e1 * t12507) * t13074) * t11433 - t11884 * t12675 - t11072 * t11648 + (t11884 * t12753 - t12838 * t13170) * t13095;
t12798 = t11198 * t12841 + t11242 * t12868 + (0.4e1 * (-t11755 * t12334 - t11882 * t12318 / 0.2e1) * t13000 + (t12913 * t13241 + 0.2e1 * t12508) * t13077) * t11432 - t11881 * t12676 - t11071 * t11647 + (t11881 * t12753 - t12843 * t13170) * t13099;
t11275 = -t11867 * t12384 - 0.2e1 * t12173;
t12068 = t11824 * t12642 * t13085;
t12298 = t11866 * t12625;
t12789 = -(-t11404 + t12240) * t12495 - 0.2e1 * t12068;
t12797 = 0.2e1 * t11045 * t12854 + t12673 * t13169 + ((-0.2e1 * t11426 * t12563 + 0.4e1 * t12055) * t11852 + 0.4e1 * t12068) * t11822 + t11275 * t12298 * t13268 + t12789;
t11277 = -t12610 * t13171 - 0.2e1 * t12170;
t12066 = t12641 * t12655;
t12288 = t11878 * t12611;
t12788 = -(-t11411 + 0.2e1 * t12320) * t11417 - 0.2e1 * t12066;
t12796 = 0.2e1 * t11056 * t12847 + t12671 * t13165 + ((-0.2e1 * t11428 * t12558 + 0.4e1 * t12051) * t11852 + 0.4e1 * t12066) * t11831 + t11277 * t12288 * t13267 + t12788;
t11278 = -t12605 * t13171 - 0.2e1 * t12167;
t12064 = t12638 * t12650;
t12283 = t11881 * t12606;
t12787 = -(-t11412 + 0.2e1 * t12317) * t11418 - 0.2e1 * t12064;
t12795 = 0.2e1 * t11058 * t12842 + t12669 * t13162 + ((-0.2e1 * t11429 * t12553 + 0.4e1 * t12047) * t11852 + 0.4e1 * t12064) * t11837 + t11278 * t12283 * t13266 + t12787;
t11279 = -t12600 * t13171 - 0.2e1 * t12164;
t12062 = t12635 * t12645;
t12278 = t11884 * t12601;
t12786 = -(-t11413 + 0.2e1 * t12314) * t11419 - 0.2e1 * t12062;
t12794 = 0.2e1 * t11060 * t12837 + t12667 * t13159 + ((-0.2e1 * t11430 * t12548 + 0.4e1 * t12043) * t11852 + 0.4e1 * t12062) * t11843 + t11279 * t12278 * t13265 + t12786;
t12774 = t11409 - t11293;
t12773 = t11420 - t11333;
t12772 = t11422 - t11335;
t12771 = t11424 - t11337;
t12757 = -0.2e1 * t13084;
t12756 = -0.2e1 * t13080;
t12755 = -0.2e1 * t13077;
t12754 = -0.2e1 * t13074;
t12711 = pkin(5) * t12947;
t12674 = t11082 * t13007;
t12672 = t11087 * t12988;
t12670 = t11088 * t12987;
t12668 = t11089 * t12986;
t12663 = t11340 * t13007;
t12654 = t11344 * t12988;
t12649 = t11345 * t12987;
t12644 = t11346 * t12986;
t12632 = t11396 * t11409;
t12631 = t11397 * t11422;
t12630 = t11398 * t11424;
t12629 = t11399 * t11420;
t11570 = t11568 * t11569;
t12628 = t11570 * t13060;
t12627 = t11426 * t11570 * t11823;
t11575 = t11573 * t11574;
t12619 = t11575 * t13056;
t12618 = t11428 * t11575 * t11832;
t11578 = t11576 * t11577;
t12617 = t11578 * t13054;
t12616 = t11429 * t11578 * t11838;
t11581 = t11579 * t11580;
t12615 = t11581 * t13052;
t12614 = t11430 * t11581 * t11844;
t12598 = t11438 * t13011;
t12597 = t11439 * t13011;
t12596 = t11441 * t13005;
t12595 = t11442 * t12999;
t12594 = t11443 * t12993;
t12593 = t11444 * t13005;
t12592 = t11445 * t12999;
t12591 = t11446 * t12993;
t12590 = t11450 * t13024;
t12589 = t11451 * t13024;
t12588 = t11452 * t13021;
t12587 = t11453 * t13020;
t12586 = t11454 * t13019;
t12585 = t11455 * t13021;
t12584 = t11456 * t13020;
t12583 = t11457 * t13019;
t12578 = t11498 * t13022;
t12577 = t11499 * t13022;
t12576 = t11500 * t13016;
t12575 = t11501 * t13014;
t12574 = t11502 * t13018;
t12573 = t11503 * t13016;
t12572 = t11504 * t13014;
t12571 = t11505 * t13018;
t12565 = t11568 * t12931;
t12564 = t11569 * t12932;
t12560 = t11574 * t12922;
t12559 = t11574 * t12921;
t12555 = t11577 * t12912;
t12554 = t11577 * t12911;
t12550 = t11580 * t12902;
t12549 = t11580 * t12901;
t12519 = t11823 * t12852;
t12518 = t11826 * t11409;
t12516 = t11835 * t11420;
t12514 = t11841 * t11422;
t12512 = t11847 * t11424;
t12466 = t11823 * t12797;
t12465 = t11832 * t12796;
t12464 = t11838 * t12795;
t12463 = t11844 * t12794;
t12462 = t11864 * t12761;
t12461 = t11870 * t12760;
t12460 = t11873 * t12759;
t12459 = t11876 * t12758;
t12458 = t11490 * t12757;
t12457 = t11491 * t12757;
t12456 = -0.2e1 * t12663;
t12455 = 0.2e1 * t12662;
t12454 = t11492 * t12756;
t12453 = t11495 * t12756;
t12452 = -0.2e1 * t12654;
t12450 = t11493 * t12755;
t12449 = t11496 * t12755;
t12448 = -0.2e1 * t12649;
t12446 = t11494 * t12754;
t12445 = t11497 * t12754;
t12444 = -0.2e1 * t12644;
t12442 = 0.2e1 * t12518;
t12441 = 0.2e1 * t12516;
t12440 = 0.2e1 * t12514;
t12439 = 0.2e1 * t12512;
t11034 = t11045 * t11863 + t11082 * t12502;
t12433 = t11034 * t11863 - t12789 * t12854 - (t11275 * t11822 + t12173) * t12625;
t11038 = t11056 * t11869 + t11087 * t12500;
t12432 = t11038 * t11869 - t12788 * t12847 - (t11277 * t11831 + t12170) * t12611;
t11039 = t11058 * t11872 + t11088 * t12498;
t12431 = t11039 * t11872 - t12787 * t12842 - (t11278 * t11837 + t12167) * t12606;
t11040 = t11060 * t11875 + t11089 * t12496;
t12430 = t11040 * t11875 - t12786 * t12837 - (t11279 * t11843 + t12164) * t12601;
t11405 = -0.2e1 * t12518;
t11392 = -t11409 + t12442;
t11935 = t11392 * t11820 + t11240 + t11409;
t12160 = t12511 * t11409;
t11169 = (t11405 + t11935) * t11863 - t11866 * t12160;
t12429 = t11169 * t11823 - t11061;
t12428 = (-t11935 + t12442) * t11866 + (-t11061 - t12160) * t11863;
t11414 = -0.2e1 * t12516;
t11393 = -t11420 + t12441;
t11934 = t11393 * t11820 + t11241 + t11420;
t12154 = t12509 * t11420;
t11171 = (t11414 + t11934) * t11869 - t11878 * t12154;
t12427 = t11171 * t11832 - t11062;
t12426 = (-t11934 + t12441) * t11878 + (-t11062 - t12154) * t11869;
t11415 = -0.2e1 * t12514;
t11394 = -t11422 + t12440;
t11933 = t11394 * t11820 + t11242 + t11422;
t12150 = t12508 * t11422;
t11173 = (t11415 + t11933) * t11872 - t11881 * t12150;
t12425 = t11173 * t11838 - t11063;
t12424 = (-t11933 + t12440) * t11881 + (-t11063 - t12150) * t11872;
t11416 = -0.2e1 * t12512;
t11395 = -t11424 + t12439;
t11932 = t11395 * t11820 + t11243 + t11424;
t12146 = t12507 * t11424;
t11175 = (t11416 + t11932) * t11875 - t11884 * t12146;
t12423 = t11175 * t11844 - t11064;
t12422 = (-t11932 + t12439) * t11884 + (-t11064 - t12146) * t11875;
t12368 = t11082 * t12578;
t12367 = t11082 * t12566;
t12366 = t11082 * t12565;
t12365 = t12933 * t13110;
t12364 = t11087 * t12573;
t12363 = t11087 * t12562;
t12362 = t11087 * t12561;
t12361 = t12923 * t13106;
t12360 = t11088 * t12572;
t12359 = t11088 * t12557;
t12358 = t11088 * t12556;
t12357 = t12913 * t13102;
t12356 = t11089 * t12571;
t12355 = t11089 * t12552;
t12354 = t11089 * t12551;
t12353 = t12903 * t13098;
t11258 = (0.2e1 * t12875 + t13083) * t11568;
t12345 = t11258 * t12658;
t12344 = t11427 * t12661;
t12341 = t11340 * t12564;
t12340 = t11431 * t12653;
t12336 = t11344 * t12560;
t12335 = t11432 * t12648;
t12331 = t11345 * t12555;
t12330 = t11433 * t12643;
t12326 = t11346 * t12550;
t12313 = t11867 * t12632;
t12312 = t11882 * t12631;
t12311 = t11885 * t12630;
t12310 = t11879 * t12629;
t11510 = -(t13129 * t13166 + t12183) * t13145 + (t11867 * t12520 - (t12375 + t11703) * pkin(6)) * t11864;
t11588 = pkin(6) * t11691 + t11727 * t12716 + t11826 * t12935;
t11400 = (-(-t13255 + ((-t11638 * t11727 + t11639 * t12375) * t13145 - t11639 * t12105) * t11867 + (-t11638 * t11729 + (t12185 - t12696) * t11639) * pkin(6)) * t13263 * t12034 - ((t11510 * t11868 + t11588 * t11865) * t11782 + (-t11510 * t11865 + t11588 * t11868) * t11778) * t11851 * t12194 / (t11632 + pkin(6) * t12710 - pkin(1) * (t11703 + t12728))) * t12930;
t12309 = t11400 * t12624;
t11511 = -((t13179 - 0.1e1) * t13129 + t12489) * t13143 + (t11879 * t12517 - (t11704 + t12960) * pkin(6)) * t11870;
t11593 = pkin(6) * t11693 + t11733 * t12715 + t11835 * t12926;
t11401 = (-(-t13256 + ((-t11640 * t11733 + t11643 * t12960) * t13143 - t11643 * t12104) * t11879 + (-t11640 * t11746 + (t11732 * t12891 - t12720) * t11643) * pkin(6)) * t13260 * t12033 - t12192 * t11851 * ((t11511 * t11880 + t11593 * t11871) * t11783 + (-t11511 * t11871 + t11593 * t11880) * t11779) / (t12741 + pkin(6) * t12709 - pkin(1) * (t11704 + t12726))) * t12920;
t12308 = t11401 * t12610;
t11513 = -((t13175 - 0.1e1) * t13129 + t12487) * t13139 + (t11885 * t12513 - (t11706 + t12954) * pkin(6)) * t11876;
t11595 = pkin(6) * t11695 + t11741 * t12712 + t11847 * t12906;
t11402 = (-(-t13258 + ((-t11642 * t11741 + t11645 * t12954) * t13139 - t11645 * t12102) * t11885 + (-t11642 * t11748 + (t11740 * t12887 - t12718) * t11645) * pkin(6)) * t13262 * t12031 - ((t11513 * t11886 + t11595 * t11877) * t11785 + t11781 * (-t11513 * t11877 + t11595 * t11886)) * t12188 * t11851 / (t12742 + pkin(6) * t12707 - pkin(1) * (t11706 + t12724))) * t12900;
t12307 = t11402 * t12600;
t11512 = -((t13177 - 0.1e1) * t13129 + t12488) * t13141 + (t11882 * t12515 - (t11705 + t12957) * pkin(6)) * t11873;
t11594 = pkin(6) * t11694 + t11737 * t12713 + t11841 * t12916;
t11403 = (-(-t13257 + ((-t11641 * t11737 + t11644 * t12957) * t13141 - t11644 * t12103) * t11882 + (-t11641 * t11747 + (t11736 * t12889 - t12719) * t11644) * pkin(6)) * t13261 * t12032 - ((t11512 * t11883 + t11594 * t11874) * t11784 + (-t11512 * t11874 + t11594 * t11883) * t11780) * t12190 * t11851 / (t12740 + pkin(6) * t12708 - pkin(1) * (t11705 + t12725))) * t12910;
t12306 = t11403 * t12605;
t12305 = t11864 * t12627;
t12304 = t11867 * t12627;
t12301 = t11427 * t12565;
t12297 = t11870 * t12618;
t12296 = t11879 * t12618;
t12295 = t11873 * t12616;
t12294 = t11882 * t12616;
t12293 = t11876 * t12614;
t12292 = t11885 * t12614;
t12290 = t11431 * t12561;
t12285 = t11432 * t12556;
t12280 = t11433 * t12551;
t12251 = 0.4e1 * t11823 * t12665;
t12250 = t11568 * t12456;
t12249 = t12656 * t13242;
t12247 = t11573 * t12452;
t12246 = t12651 * t13241;
t12244 = t11576 * t12448;
t12243 = t12646 * t13240;
t12241 = t11579 * t12444;
t12212 = t11823 * t12433;
t12211 = t11823 * t12428;
t12210 = t11832 * t12432;
t12209 = t11832 * t12426;
t12208 = t11838 * t12431;
t12207 = t11838 * t12424;
t12206 = t11844 * t12430;
t12205 = t11844 * t12422;
t12181 = t11864 * t13008 * t13086;
t12180 = t11344 * t11431 * t11870 * t13001;
t12179 = t11345 * t11432 * t11873 * t12995;
t12178 = t11346 * t11433 * t11876 * t12989;
t12177 = t12564 * t13072;
t12176 = t12560 * t13071;
t12175 = t12555 * t13070;
t12174 = t12550 * t13069;
t12161 = t12578 * t11409;
t12159 = t12627 * t12969;
t12158 = t11864 * t12304;
t12157 = t13263 * t12301;
t12155 = t12573 * t11420;
t12153 = t12618 * t12968;
t12152 = t11870 * t12296;
t12151 = t12572 * t11422;
t12149 = t12616 * t12967;
t12148 = t11873 * t12294;
t12147 = t12571 * t11424;
t12145 = t12614 * t12966;
t12144 = t11876 * t12292;
t12143 = t13260 * t12290;
t12142 = t13261 * t12285;
t12141 = t13262 * t12280;
t12140 = t11268 * t12289;
t12139 = t11271 * t12284;
t12138 = t11274 * t12279;
t12129 = 0.2e1 * t12519 * t13086;
t12128 = t11870 * t12248;
t12127 = t11873 * t12245;
t12126 = t11876 * t12242;
t11589 = pkin(5) * t12523 + t11649 * t11863;
t11600 = pkin(1) * t12894 + t11652 * t11863;
t12101 = -t11082 * t11600 + t11409 * t11589;
t11725 = t13171 * pkin(5);
t11596 = t11649 * t11866 - t11725 * t11863;
t11601 = (pkin(1) * t11863 - pkin(5) * t12850) * t11851 - t12392;
t12100 = t11082 * t11601 + t11409 * t11596;
t12099 = t11569 * t13061 - t13109;
t12098 = t11569 * t13060 + t13110;
t11590 = t11653 * t11869 + t11878 * t12711;
t11602 = pkin(1) * t12886 + t11663 * t11869;
t12097 = -t11087 * t11602 + t11420 * t11590;
t11597 = t11653 * t11878 - t11725 * t11869;
t11605 = (pkin(1) * t11869 - pkin(5) * t12833) * t11851 - t12390;
t12096 = t11087 * t11605 + t11420 * t11597;
t12095 = t11574 * t13057 - t13105;
t12094 = t11574 * t13056 + t13106;
t11591 = t11654 * t11872 + t11881 * t12711;
t11603 = pkin(1) * t12884 + t11664 * t11872;
t12093 = -t11088 * t11603 + t11422 * t11591;
t11598 = t11654 * t11881 - t11725 * t11872;
t11606 = (pkin(1) * t11872 - pkin(5) * t12831) * t11851 - t12389;
t12092 = t11088 * t11606 + t11422 * t11598;
t12091 = t11577 * t13055 - t13101;
t12090 = t11577 * t13054 + t13102;
t11592 = t11655 * t11875 + t11884 * t12711;
t11604 = pkin(1) * t12882 + t11662 * t11875;
t12089 = -t11089 * t11604 + t11424 * t11592;
t11599 = t11655 * t11884 - t11725 * t11875;
t11607 = (pkin(1) * t11875 - pkin(5) * t12829) * t11851 - t12391;
t12088 = t11089 * t11607 + t11424 * t11599;
t12087 = t11580 * t13053 - t13097;
t12086 = t11580 * t13052 + t13098;
t12069 = t13263 * t12181;
t12067 = t13260 * t12180;
t12065 = t13261 * t12179;
t12063 = t13262 * t12178;
t12058 = t11450 * t12157;
t12057 = t11451 * t12157;
t12056 = t12301 * t13031;
t12054 = t11452 * t12143;
t12053 = t11455 * t12143;
t12052 = t12290 * t13030;
t12050 = t11453 * t12142;
t12049 = t11456 * t12142;
t12048 = t12285 * t13029;
t12046 = t11454 * t12141;
t12045 = t11457 * t12141;
t12044 = t12280 * t13028;
t12026 = t11568 * t13109 - t11570 * t13061;
t12025 = -t11568 * t13110 - t12628;
t12024 = t11573 * t13105 - t11575 * t13057;
t12023 = -t11573 * t13106 - t12619;
t12022 = t11576 * t13101 - t11578 * t13055;
t12021 = -t11576 * t13102 - t12617;
t12020 = t11579 * t13097 - t11581 * t13053;
t12019 = -t11579 * t13098 - t12615;
t12014 = t11823 * t12101;
t12013 = t11823 * t12100;
t12012 = t11832 * t12097;
t12011 = t11832 * t12096;
t12010 = t11838 * t12093;
t12009 = t11838 * t12092;
t12008 = t11844 * t12089;
t12007 = t11844 * t12088;
t11044 = 0.2e1 * t11081 + t11065;
t11997 = t11044 * t11864 + t11568 * t12345;
t11996 = t11044 * t11867 - t11258 * t12342;
t11055 = 0.2e1 * t11084 + t11066;
t11266 = t13187 - t11334;
t11995 = t11055 * t11870 - t11266 * t12337;
t11994 = t11055 * t11879 + t11266 * t12338;
t11057 = 0.2e1 * t11085 + t11067;
t11269 = t13186 - t11336;
t11993 = t11057 * t11873 - t11269 * t12332;
t11992 = t11057 * t11882 + t11269 * t12333;
t11059 = 0.2e1 * t11086 + t11068;
t11272 = t13185 - t11338;
t11991 = t11059 * t11876 - t11272 * t12327;
t11990 = t11059 * t11885 + t11272 * t12328;
t11978 = t12098 * t13032;
t11977 = t12094 * t13027;
t11976 = t12090 * t13026;
t11975 = t12086 * t13025;
t11972 = -t11044 * t13010 - t11569 * t12345;
t11971 = -t11044 * t13009 + t11258 * t12341;
t11970 = t11266 * t11344 * t12559 - t11055 * t13003;
t11969 = -t11055 * t13002 - t11266 * t12336;
t11968 = t11269 * t11345 * t12554 - t11057 * t12997;
t11967 = -t11057 * t12996 - t11269 * t12331;
t11966 = t11272 * t11346 * t12549 - t11059 * t12991;
t11965 = -t11059 * t12990 - t11272 * t12326;
t11964 = -t11061 * t13009 + t12341 * t13191;
t11963 = -t11062 * t13002 + t12336 * t13190;
t11962 = -t11063 * t12996 + t12331 * t13189;
t11961 = -t11064 * t12990 + t12326 * t13188;
t11960 = t11569 * t12251 + t12462;
t11959 = t11574 * t12249 + t12461;
t11958 = t11577 * t12246 + t12460;
t11957 = t11580 * t12243 + t12459;
t11952 = -t11568 * t12462 - t11570 * t12251;
t11951 = -t11568 * t13108 - t11570 * t12129;
t11950 = -t11573 * t12461 - t11575 * t12249;
t11949 = -t11573 * t13104 - t11575 * t12128;
t11948 = -t11576 * t12460 - t11578 * t12246;
t11947 = -t11576 * t13100 - t11578 * t12127;
t11946 = -t11579 * t12459 - t11581 * t12243;
t11945 = -t11579 * t13096 - t11581 * t12126;
t11449 = (-t11494 * t12188 - t11497 * t12189) * t11579;
t11448 = (-t11493 * t12190 - t11496 * t12191) * t11576;
t11447 = (-t11492 * t12192 - t11495 * t12193) * t11573;
t11440 = (-t11490 * t12194 - t11491 * t12195) * t11568;
t11273 = -t11419 - 0.2e1 * t11338;
t11270 = -t11418 - 0.2e1 * t11336;
t11267 = -t11417 - 0.2e1 * t11334;
t11262 = t11296 - t11425;
t11261 = t11295 - t11423;
t11260 = t11294 - t11421;
t11259 = (t12875 + 0.2e1 * t13083) * t11568;
t11256 = t11283 - t11410;
t11252 = t11273 * t11875 - t11851 * t12278;
t11251 = t11270 * t11872 - t11851 * t12283;
t11250 = t11267 * t11869 - t11851 * t12288;
t11249 = t11273 * t11884 + t11875 * t12279;
t11248 = t11270 * t11881 + t11872 * t12284;
t11247 = t11267 * t11878 + t11869 * t12289;
t11245 = -t11259 * t11863 - t11851 * t12298;
t11244 = -t11259 * t11866 + t11863 * t12299;
t11207 = t11262 * t11805 + t11265 * t12704;
t11206 = t11261 * t11804 + t11264 * t12705;
t11205 = t11260 * t11803 + t11263 * t12706;
t11204 = t11262 * t13151 - t11265 * t12707;
t11203 = t11261 * t13152 - t11264 * t12708;
t11202 = t11260 * t13153 - t11263 * t12709;
t11201 = t11256 * t13154 + t11257 * t12710;
t11200 = t11256 * t11789 - t11257 * t12697;
t11148 = ((t11430 * t12418 - 0.2e1 * t12330) * t11580 + t12771) * t12837 + t13159 * t12138;
t11147 = ((t11429 * t12419 - 0.2e1 * t12335) * t11577 + t12772) * t12842 + t13162 * t12139;
t11146 = ((t11428 * t12420 - 0.2e1 * t12340) * t11574 + t12773) * t12847 + t13165 * t12140;
t11145 = ((t11426 * t12421 - 0.2e1 * t12344) * t11569 + t12774) * t12854 - t12621 * t13169 * t13259;
t11140 = (-0.2e1 * t11337 + t11416 + 0.2e1 * t11424) * t11843 - 0.4e1 * t12138 * t12837 + (-t13158 * t12330 + (t12948 * t13159 + t11847) * t11430) * t11580 - t12771;
t11139 = (-0.2e1 * t11335 + t11415 + 0.2e1 * t11422) * t11837 - 0.4e1 * t12139 * t12842 + (-t13161 * t12335 + (t12949 * t13162 + t11841) * t11429) * t11577 - t12772;
t11138 = (-0.2e1 * t11333 + t11414 + 0.2e1 * t11420) * t11831 - 0.4e1 * t12140 * t12847 + (-t13164 * t12340 + (t12950 * t13165 + t11835) * t11428) * t11574 - t12773;
t11137 = (-0.2e1 * t11293 + t11405 + 0.2e1 * t11409) * t11822 + 0.4e1 * t11427 * t12266 * t13259 + (-t13168 * t12344 + (t12951 * t13169 + t11826) * t11426) * t11569 - t12774;
t11054 = t12876 / 0.2e1 + t11089;
t11053 = t12877 / 0.2e1 + t11088;
t11052 = t12878 / 0.2e1 + t11087;
t11043 = t12879 / 0.2e1 + t11082;
t11037 = t11060 * t11884 - t11089 * t12497;
t11036 = t11058 * t11881 - t11088 * t12499;
t11035 = t11056 * t11878 - t11087 * t12501;
t11033 = t11045 * t11866 - t11082 * t12503;
t11016 = -0.2e1 * pkin(5) * t12679 + 0.2e1 * t11054 * t13151;
t11015 = -0.2e1 * pkin(5) * t12680 + 0.2e1 * t11053 * t13152;
t11014 = -0.2e1 * pkin(5) * t12681 + 0.2e1 * t11052 * t13153;
t11013 = -0.2e1 * t11051 * t12704 - 0.2e1 * t11054 * t11805;
t11012 = -0.2e1 * t11050 * t12705 - 0.2e1 * t11053 * t11804;
t11011 = -0.2e1 * t11049 * t12706 - 0.2e1 * t11052 * t11803;
t11004 = -0.2e1 * pkin(5) * t12682 + 0.2e1 * t11043 * t13154;
t11003 = -0.2e1 * t11042 * t12697 - 0.2e1 * t11043 * t11789;
t1 = [(-t11082 * t13039 - t11087 * t13035 - t11088 * t13034 - t11089 * t13033) * MDP(1) + (t11439 * t12158 + t11444 * t12152 + t11445 * t12148 + t11446 * t12144 + t11491 * t11951 + t11495 * t11949 + t11496 * t11947 + t11497 * t11945) * t13118 + (t11392 * t12597 + t11393 * t12593 + t11394 * t12592 + t11395 * t12591 + t11491 * t11952 + t11495 * t11950 + t11496 * t11948 + t11497 * t11946) * t13117 + (-t11439 * t12367 - t11444 * t12363 - t11445 * t12359 - t11446 * t12355 + t11966 * t11497 + t11968 * t11496 + t11970 * t11495 + t11972 * t11491 + (t11439 * t12304 + t11444 * t12296 + t11445 * t12294 + t11446 * t12292) * t11852) * t13116 + (-t11439 * t12366 - t11444 * t12362 - t11445 * t12358 - t11446 * t12354 + t11965 * t11497 + t11967 * t11496 + t11969 * t11495 + t11971 * t11491 + (-t11439 * t12305 - t11444 * t12297 - t11445 * t12295 - t11446 * t12293) * t11852) * t13115 + (-t11045 * t12597 - t11056 * t12593 - t11058 * t12592 - t11060 * t12591 + (-t11045 * t13039 - t11056 * t13035 - t11058 * t13034 - t11060 * t13033) * t11852) * MDP(8) + (-t11004 * t13039 - t11014 * t13035 - t11015 * t13034 - t11016 * t13033 + (t11207 * t12445 + t11446 * t12019) * t11844 + (t11206 * t12449 + t11445 * t12021) * t11838 + (t11205 * t12453 + t11444 * t12023) * t11832 + (t11200 * t12457 + t11439 * t12025) * t11823) * MDP(9) + (-t11003 * t13039 - t11011 * t13035 - t11012 * t13034 - t11013 * t13033 + (t11204 * t12445 + t11446 * t12020) * t11844 + (t11203 * t12449 + t11445 * t12022) * t11838 + (t11202 * t12453 + t11444 * t12024) * t11832 + (t11201 * t12457 + t11439 * t12026) * t11823) * MDP(10) + ((-t11145 * t12590 - t11146 * t12588 - t11147 * t12587 - t11148 * t12586) * t12880 - (t11446 * t12206 + t11497 * t12816) * t11579 - (t11445 * t12208 + t11496 * t12815) * t11576 - (t11444 * t12210 + t11495 * t12817) * t11573 - (t11439 * t12212 + t11491 * t12818) * t11568) * MDP(11) + ((-t11137 * t12590 - t11138 * t12588 - t11139 * t12587 - t11140 * t12586) * t12880 - (t11446 * t12463 + t11497 * t12819) * t11579 - (t11445 * t12464 + t11496 * t12820) * t11576 - (t11444 * t12465 + t11495 * t12821) * t11573 - (t11439 * t12466 + t11491 * t12822) * t11568) * MDP(12) + (-(t11446 * t12205 + t11497 * t12802) * t11579 - (t11445 * t12207 + t11496 * t12803) * t11576 - (t11444 * t12209 + t11495 * t12804) * t11573 - (t11439 * t12211 + t11491 * t12805) * t11568 + ((-t11034 * t12590 - t11038 * t12588 - t11039 * t12587 - t11040 * t12586) * t11851 + (t11244 * t12058 + t11247 * t12054 + t11248 * t12050 + t11249 * t12046) * t11818) * t11909) * MDP(13) + (-(t11446 * t12423 + t11497 * t12799) * t11579 - (t11445 * t12425 + t11496 * t12798) * t11576 - (t11444 * t12427 + t11495 * t12800) * t11573 - (t11439 * t12429 + t11491 * t12801) * t11568 + ((-t11033 * t12590 - t11035 * t12588 - t11036 * t12587 - t11037 * t12586) * t11851 + (-t11245 * t12058 - t11250 * t12054 - t11251 * t12050 - t11252 * t12046) * t11818) * t11909) * MDP(14) + ((-t11450 * t12069 - t11452 * t12067 - t11453 * t12065 - t11454 * t12063) * t12940 + (t11439 * t12177 + t11444 * t12176 + t11445 * t12175 + t11446 * t12174 + t11961 * t11497 + t11962 * t11496 + t11963 * t11495 + t11964 * t11491 + (t11061 * t12590 + t11062 * t12588 + t11063 * t12587 + t11064 * t12586) * t11909) * t11851) * MDP(15) + (-t11439 * t12628 - t11444 * t12619 - t11445 * t12617 - t11446 * t12615 - (t11446 * t13098 + t11497 * t12810) * t11579 - (t11445 * t13102 + t11496 * t12811) * t11576 - (t11444 * t13106 + t11495 * t12812) * t11573 - (t11439 * t13110 + t11491 * t12814) * t11568 + (-t12008 * t13041 - t12010 * t13042 - t12012 * t13043 - t12014 * t13044) * t12880) * MDP(16) + (t11439 * t12159 + t11444 * t12153 + t11445 * t12149 + t11446 * t12145 - (-t11446 * t12353 + t11497 * t12807) * t11579 - (-t11445 * t12357 + t11496 * t12808) * t11576 - (-t11444 * t12361 + t11495 * t12809) * t11573 - (-t11439 * t12365 + t11491 * t12813) * t11568 + (-t12007 * t13041 - t12009 * t13042 - t12011 * t13043 - t12013 * t13044) * t12880) * MDP(17) - MDP(19) * t12941 + MDP(20) * t12942; (-t11082 * t13040 - t11087 * t13038 - t11088 * t13037 - t11089 * t13036) * MDP(1) + (t11438 * t12158 + t11441 * t12152 + t11442 * t12148 + t11443 * t12144 + t11490 * t11951 + t11492 * t11949 + t11493 * t11947 + t11494 * t11945) * t13118 + (t11392 * t12598 + t11393 * t12596 + t11394 * t12595 + t11395 * t12594 + t11490 * t11952 + t11492 * t11950 + t11493 * t11948 + t11494 * t11946) * t13117 + (-t11438 * t12367 - t11441 * t12363 - t11442 * t12359 - t11443 * t12355 + t11966 * t11494 + t11968 * t11493 + t11970 * t11492 + t11972 * t11490 + (t11438 * t12304 + t11441 * t12296 + t11442 * t12294 + t11443 * t12292) * t11852) * t13116 + (-t11438 * t12366 - t11441 * t12362 - t11442 * t12358 - t11443 * t12354 + t11965 * t11494 + t11967 * t11493 + t11969 * t11492 + t11971 * t11490 + (-t11438 * t12305 - t11441 * t12297 - t11442 * t12295 - t11443 * t12293) * t11852) * t13115 + (-t11045 * t12598 - t11056 * t12596 - t11058 * t12595 - t11060 * t12594 + (-t11045 * t13040 - t11056 * t13038 - t11058 * t13037 - t11060 * t13036) * t11852) * MDP(8) + (-t11004 * t13040 - t11014 * t13038 - t11015 * t13037 - t11016 * t13036 + (t11207 * t12446 + t11443 * t12019) * t11844 + (t11206 * t12450 + t11442 * t12021) * t11838 + (t11205 * t12454 + t11441 * t12023) * t11832 + (t11200 * t12458 + t11438 * t12025) * t11823) * MDP(9) + (-t11003 * t13040 - t11011 * t13038 - t11012 * t13037 - t11013 * t13036 + (t11204 * t12446 + t11443 * t12020) * t11844 + (t11203 * t12450 + t11442 * t12022) * t11838 + (t11202 * t12454 + t11441 * t12024) * t11832 + (t11201 * t12458 + t11438 * t12026) * t11823) * MDP(10) + ((t11145 * t12589 + t11146 * t12585 + t11147 * t12584 + t11148 * t12583) * t12880 - (t11443 * t12206 + t11494 * t12816) * t11579 - (t11442 * t12208 + t11493 * t12815) * t11576 - (t11441 * t12210 + t11492 * t12817) * t11573 - (t11438 * t12212 + t11490 * t12818) * t11568) * MDP(11) + ((t11137 * t12589 + t11138 * t12585 + t11139 * t12584 + t11140 * t12583) * t12880 - (t11443 * t12463 + t11494 * t12819) * t11579 - (t11442 * t12464 + t11493 * t12820) * t11576 - (t11441 * t12465 + t11492 * t12821) * t11573 - (t11438 * t12466 + t11490 * t12822) * t11568) * MDP(12) + (-(t11443 * t12205 + t11494 * t12802) * t11579 - (t11442 * t12207 + t11493 * t12803) * t11576 - (t11441 * t12209 + t11492 * t12804) * t11573 - (t11438 * t12211 + t11490 * t12805) * t11568 + ((t11034 * t12589 + t11038 * t12585 + t11039 * t12584 + t11040 * t12583) * t11851 + (-t11244 * t12057 - t11247 * t12053 - t11248 * t12049 - t11249 * t12045) * t11818) * t11909) * MDP(13) + (-(t11443 * t12423 + t11494 * t12799) * t11579 - (t11442 * t12425 + t11493 * t12798) * t11576 - (t11441 * t12427 + t11492 * t12800) * t11573 - (t11438 * t12429 + t11490 * t12801) * t11568 + ((t11033 * t12589 + t11035 * t12585 + t11036 * t12584 + t11037 * t12583) * t11851 + (t11245 * t12057 + t11250 * t12053 + t11251 * t12049 + t11252 * t12045) * t11818) * t11909) * MDP(14) + ((t11451 * t12069 + t11455 * t12067 + t11456 * t12065 + t11457 * t12063) * t12940 + (t11438 * t12177 + t11441 * t12176 + t11442 * t12175 + t11443 * t12174 + t11961 * t11494 + t11962 * t11493 + t11963 * t11492 + t11964 * t11490 + (-t11061 * t12589 - t11062 * t12585 - t11063 * t12584 - t11064 * t12583) * t11909) * t11851) * MDP(15) + (-t11438 * t12628 - t11441 * t12619 - t11442 * t12617 - t11443 * t12615 - (t11443 * t13098 + t11494 * t12810) * t11579 - (t11442 * t13102 + t11493 * t12811) * t11576 - (t11441 * t13106 + t11492 * t12812) * t11573 - (t11438 * t13110 + t11490 * t12814) * t11568 + (t12089 * t12583 + t12093 * t12584 + t12097 * t12585 + t12101 * t12589) * t12880) * MDP(16) + (t11438 * t12159 + t11441 * t12153 + t11442 * t12149 + t11443 * t12145 - (-t11443 * t12353 + t11494 * t12807) * t11579 - (-t11442 * t12357 + t11493 * t12808) * t11576 - (-t11441 * t12361 + t11492 * t12809) * t11573 - (-t11438 * t12365 + t11490 * t12813) * t11568 + (t12088 * t12583 + t12092 * t12584 + t12096 * t12585 + t12100 * t12589) * t12880) * MDP(17) - MDP(19) * t12942 - MDP(20) * t12941; (t12668 + t12670 + t12672 + t12674) * MDP(1) + (t11821 * t12674 + t11827 * t12672 + t11828 * t12670 + t11829 * t12668 + (-t11430 * t13025 + 0.2e1 * t11433 * t12644) * t11876 * t12549 + (-t11429 * t13026 + 0.2e1 * t11432 * t12649) * t11873 * t12554 + (-t11428 * t13027 + 0.2e1 * t11431 * t12654) * t11870 * t12559 + (-t11426 * t13032 + 0.2e1 * t11427 * t12663) * t11569 * t12519) * t13118 + (-t11392 * t12578 - t11393 * t12573 - t11394 * t12572 - t11395 * t12571 + t11957 * t12986 + t11958 * t12987 + t11959 * t12988 + t11960 * t13007) * t13117 + (t11864 * t12368 + t11870 * t12364 + t11873 * t12360 + t11876 * t12356 + t11991 * t12986 + t11993 * t12987 + t11995 * t12988 + t11997 * t13007 + (-t11867 * t12161 - t11879 * t12155 - t11882 * t12151 - t11885 * t12147) * t11852) * t13116 + (t11867 * t12368 + t11879 * t12364 + t11882 * t12360 + t11885 * t12356 + t11990 * t12986 + t11992 * t12987 + t11994 * t12988 + t11996 * t13007 + (t11864 * t12161 + t11870 * t12155 + t11873 * t12151 + t11876 * t12147) * t11852) * t13115 + (t11045 * t12578 + t11056 * t12573 + t11058 * t12572 + t11060 * t12571 + (t11045 * t13007 + t11056 * t12988 + t11058 * t12987 + t11060 * t12986) * t11852) * MDP(8) + (t11004 * t13007 + t11014 * t12988 + t11015 * t12987 + t11016 * t12986 + (-t11207 * t12241 + t11975) * t11844 + (-t11206 * t12244 + t11976) * t11838 + (-t11205 * t12247 + t11977) * t11832 + (-t11200 * t12250 + t11978) * t11823) * MDP(9) + (t11003 * t13007 + t11011 * t12988 + t11012 * t12987 + t11013 * t12986 + (-t11204 * t12241 + t12087 * t13025) * t11844 + (-t11203 * t12244 + t12091 * t13026) * t11838 + (-t11202 * t12247 + t12095 * t13027) * t11832 + (-t11201 * t12250 + t12099 * t13032) * t11823) * MDP(10) + (t12816 * t12986 + t12815 * t12987 + t12817 * t12988 + t12818 * t13007 + t12206 * t13025 + t12208 * t13026 + t12210 * t13027 + t12212 * t13032 + (t11145 * t12577 + t11146 * t12576 + t11147 * t12575 + t11148 * t12574) * t11909) * MDP(11) + (t12819 * t12986 + t12820 * t12987 + t12821 * t12988 + t12822 * t13007 + t12463 * t13025 + t12464 * t13026 + t12465 * t13027 + t12466 * t13032 + (t11137 * t12577 + t11138 * t12576 + t11139 * t12575 + t11140 * t12574) * t11909) * MDP(12) + (t12802 * t12986 + t12803 * t12987 + t12804 * t12988 + t12805 * t13007 + t12205 * t13025 + t12207 * t13026 + t12209 * t13027 + t12211 * t13032 + (t11034 * t12577 + t11038 * t12576 + t11039 * t12575 + t11040 * t12574 + (-t11244 * t12056 - t11247 * t12052 - t11248 * t12048 - t11249 * t12044) * t11851) * t11909) * MDP(13) + (t12799 * t12986 + t12798 * t12987 + t12800 * t12988 + t12801 * t13007 + t12423 * t13025 + t12425 * t13026 + t12427 * t13027 + t12429 * t13032 + (t11033 * t12577 + t11035 * t12576 + t11036 * t12575 + t11037 * t12574 + (t11245 * t12056 + t11250 * t12052 + t11251 * t12048 + t11252 * t12044) * t11851) * t11909) * MDP(14) + ((-t11061 * t12577 - t11062 * t12576 - t11063 * t12575 - t11064 * t12574) * t11909 + (t13007 * t13114 + t12988 * t13113 + t12987 * t13112 + t12986 * t13111 - (t11353 * t12444 + t13025 * t13069) * t12552 - (t11352 * t12448 + t13026 * t13070) * t12557 - (t11351 * t12452 + t13027 * t13071) * t12562 - (t11347 * t12456 + t13032 * t13072) * t12566 + (t12178 * t13028 + t12179 * t13029 + t12180 * t13030 + t12181 * t13031) * t11909) * t11851) * MDP(15) + (t12810 * t12986 + t12811 * t12987 + t12812 * t12988 + t12814 * t13007 + t11975 + t11976 + t11977 + t11978 + (t12008 * t13028 + t12010 * t13029 + t12012 * t13030 + t12014 * t13031) * t11909) * MDP(16) + (t12807 * t12986 + t12808 * t12987 + t12809 * t12988 + t12813 * t13007 - t12086 * t11875 * t12571 - t12090 * t11872 * t12572 - t12094 * t11869 * t12573 - t12098 * t11863 * t12578 + (t12007 * t13028 + t12009 * t13029 + t12011 * t13030 + t12013 * t13031) * t11909) * MDP(17); (-t11082 * t11440 - t11087 * t11447 - t11088 * t11448 - t11089 * t11449) * MDP(1) + (-t11864 * t12313 - t11873 * t12312 - t11876 * t12311 - t11870 * t12310 - (t11580 * t12126 + t13096) * t11449 - (t11577 * t12127 + t13100) * t11448 - (t11574 * t12128 + t13104) * t11447 - (t11569 * t12129 + t13108) * t11440) * t13118 + (-t11396 * t11392 - t11399 * t11393 - t11397 * t11394 - t11398 * t11395 - t11440 * t11960 - t11447 * t11959 - t11448 * t11958 - t11449 * t11957) * t13117 + (t11396 * t11864 * t11082 + t11399 * t11870 * t11087 + t11397 * t11873 * t11088 + t11398 * t11876 * t11089 - t11991 * t11449 - t11993 * t11448 - t11995 * t11447 - t11997 * t11440 + (-t12310 - t12311 - t12312 - t12313) * t11852) * t13116 + (t11396 * t13107 + t11399 * t13103 + t11397 * t13099 + t11398 * t13095 - t11990 * t11449 - t11992 * t11448 - t11994 * t11447 - t11996 * t11440 + (t11864 * t12632 + t11870 * t12629 + t11873 * t12631 + t11876 * t12630) * t11852) * t13115 + (t11045 * t11396 + t11056 * t11399 + t11058 * t11397 + t11060 * t11398 + (-t11045 * t11440 - t11056 * t11447 - t11058 * t11448 - t11060 * t11449) * t11852) * MDP(8) + (-(t11207 * t12443 + t11016) * t11449 - (t11206 * t12447 + t11015) * t11448 - (t11205 * t12451 + t11014) * t11447 - (t11200 * t12455 + t11004) * t11440 + t12094 * t11399 + t12086 * t11398 + t12090 * t11397 + t12098 * t11396) * MDP(9) + (-(t11204 * t12443 + t11013) * t11449 - (t11203 * t12447 + t11012) * t11448 - (t11202 * t12451 + t11011) * t11447 - (t11201 * t12455 + t11003) * t11440 + t12095 * t11399 + t12087 * t11398 + t12091 * t11397 + t12099 * t11396) * MDP(10) + (t11400 * t11145 + t11401 * t11146 + t11403 * t11147 + t11402 * t11148 + t11396 * t12433 + t11397 * t12431 + t11398 * t12430 + t11399 * t12432 - t11440 * t12818 - t11447 * t12817 - t11448 * t12815 - t11449 * t12816) * MDP(11) + (t11400 * t11137 + t11401 * t11138 + t11403 * t11139 + t11402 * t11140 + t11396 * t12797 + t11397 * t12795 + t11398 * t12794 + t11399 * t12796 - t11440 * t12822 - t11447 * t12821 - t11448 * t12820 - t11449 * t12819) * MDP(12) + (t11400 * t11034 + t11401 * t11038 + t11403 * t11039 + t11402 * t11040 - t12802 * t11449 - t12803 * t11448 - t12804 * t11447 - t12805 * t11440 + t12426 * t11399 + t12422 * t11398 + t12424 * t11397 + t12428 * t11396 + (-t11244 * t12309 - t11247 * t12308 - t11248 * t12306 - t11249 * t12307) * t11851) * MDP(13) + (t11400 * t11033 + t11401 * t11035 + t11403 * t11036 + t11402 * t11037 - t12799 * t11449 - t12798 * t11448 - t12800 * t11447 - t12801 * t11440 + (-t11062 * t11878 + t11171) * t11399 + (-t11064 * t11884 + t11175) * t11398 + (-t11063 * t11881 + t11173) * t11397 + (-t11061 * t11866 + t11169) * t11396 + (t11245 * t12309 + t11250 * t12308 + t11251 * t12306 + t11252 * t12307) * t11851) * MDP(14) + (-t11400 * t11061 - t11401 * t11062 - t11403 * t11063 - t11402 * t11064 + (-t11440 * t13114 - t11447 * t13113 - t11448 * t13112 - t11449 * t13111 + (-t11398 * t11359 * t11425 + (t11402 * t11433 * t11580 + t11449 * t11579 * t13188) * t13073) * t11876 + (-t11397 * t11357 * t11423 + (t11403 * t11432 * t11577 + t11448 * t11576 * t13189) * t13076) * t11873 + (-t11399 * t11355 * t11421 + (t11401 * t11431 * t11574 + t11447 * t11573 * t13190) * t13079) * t11870 + (-t11396 * t11349 * t11410 + (t11440 * t11568 * t13191 + t11400 * t13059) * t13083) * t11864) * t11851) * MDP(15) + (-t12810 * t11449 - t12811 * t11448 - t12812 * t11447 - t12814 * t11440 + (t11402 * t11592 + t11658 * t13063) * t11424 + (t11403 * t11591 + t11657 * t13064) * t11422 + (t11401 * t11590 + t11656 * t13062) * t11420 + (t11400 * t11589 + t11650 * t13065) * t11409 + (-t11402 * t11604 + t11661 * t13063) * t11089 + (-t11403 * t11603 + t11660 * t13064) * t11088 + (-t11401 * t11602 + t11659 * t13062) * t11087 + (-t11400 * t11600 + t11651 * t13065) * t11082) * MDP(16) + (-t12807 * t11449 - t12808 * t11448 - t12809 * t11447 - t12813 * t11440 + (-t11398 * t12966 + t11402 * t11599) * t11424 + (-t11397 * t12967 + t11403 * t11598) * t11422 + (-t11399 * t12968 + t11401 * t11597) * t11420 + (-t11396 * t12969 + t11400 * t11596) * t11409 + (-t11398 * t11661 * t11875 + t11402 * t11607) * t11089 + (-t11397 * t11660 * t11872 + t11403 * t11606) * t11088 + (-t11399 * t11659 * t11869 + t11401 * t11605) * t11087 + (-t11396 * t11651 * t11863 + t11400 * t11601) * t11082) * MDP(17);];
taucX  = t1;
