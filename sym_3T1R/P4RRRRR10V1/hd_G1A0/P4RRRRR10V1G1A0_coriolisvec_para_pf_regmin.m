% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P4RRRRR10V1G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [4x21]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 13:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(6,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin: xDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 12:13:20
% EndTime: 2020-08-07 12:31:19
% DurationCPUTime: 1168.24s
% Computational Cost: add. (12145655->2874), mult. (26873360->5093), div. (163608->34), fcn. (16530656->36), ass. (0->1925)
t4878 = sin(qJ(3,4));
t6284 = 0.2e1 * t4878;
t4884 = sin(qJ(3,3));
t6283 = 0.2e1 * t4884;
t4887 = sin(qJ(3,2));
t6282 = 0.2e1 * t4887;
t4890 = sin(qJ(3,1));
t6281 = 0.2e1 * t4890;
t4881 = cos(qJ(3,4));
t4838 = 0.1e1 / t4881;
t6280 = 0.2e1 * t4838;
t4893 = cos(qJ(3,3));
t4847 = 0.1e1 / t4893;
t4808 = t4884 * pkin(2);
t4778 = pkin(1) * t4808;
t4885 = sin(qJ(2,3));
t4809 = t4885 * pkin(6);
t4866 = sin(pkin(3));
t4680 = t4866 * (-pkin(5) * t4809 + t4778);
t4867 = cos(pkin(3));
t6145 = pkin(6) * t4867;
t4772 = pkin(1) * t6145;
t4894 = cos(qJ(2,3));
t5889 = t4867 * t4885;
t5765 = pkin(1) * t5889;
t5409 = t4893 * t5765;
t5906 = t4866 * t4893;
t5743 = pkin(2) * t5906;
t4996 = pkin(2) * t5409 + (pkin(5) * t5743 - t4772) * t4894 - t4680;
t6276 = 0.1e1 / t4996;
t6041 = t6276 * t4847;
t4896 = cos(qJ(3,2));
t4853 = 0.1e1 / t4896;
t4810 = t4887 * pkin(2);
t4780 = pkin(1) * t4810;
t4888 = sin(qJ(2,2));
t4811 = t4888 * pkin(6);
t4681 = t4866 * (-pkin(5) * t4811 + t4780);
t4897 = cos(qJ(2,2));
t5887 = t4867 * t4888;
t5764 = pkin(1) * t5887;
t5408 = t4896 * t5764;
t5904 = t4866 * t4896;
t5742 = pkin(2) * t5904;
t4995 = pkin(2) * t5408 + (pkin(5) * t5742 - t4772) * t4897 - t4681;
t6277 = 0.1e1 / t4995;
t6040 = t6277 * t4853;
t4899 = cos(qJ(3,1));
t4859 = 0.1e1 / t4899;
t4812 = t4890 * pkin(2);
t4782 = pkin(1) * t4812;
t4891 = sin(qJ(2,1));
t4813 = t4891 * pkin(6);
t4682 = t4866 * (-pkin(5) * t4813 + t4782);
t4900 = cos(qJ(2,1));
t5885 = t4867 * t4891;
t5763 = pkin(1) * t5885;
t5410 = t4899 * t5763;
t5902 = t4866 * t4899;
t5741 = pkin(2) * t5902;
t4994 = pkin(2) * t5410 + (pkin(5) * t5741 - t4772) * t4900 - t4682;
t6278 = 0.1e1 / t4994;
t6039 = t6278 * t4859;
t4882 = cos(qJ(2,4));
t6141 = t4878 * pkin(2);
t4774 = pkin(1) * t6141;
t4879 = sin(qJ(2,4));
t6140 = t4879 * pkin(6);
t5151 = t4866 * (-pkin(5) * t6140 + t4774);
t5893 = t4867 * t4879;
t5766 = pkin(1) * t5893;
t5411 = t4881 * t5766;
t5914 = t4866 * t4881;
t5747 = pkin(2) * t5914;
t4951 = pkin(2) * t5411 + (pkin(5) * t5747 - t4772) * t4882 - t5151;
t6279 = 0.1e1 / t4951;
t6044 = t6279 * t4838;
t4902 = xDP(4);
t4904 = xDP(2);
t4906 = xP(4);
t4830 = sin(t4906);
t4831 = cos(t4906);
t4912 = koppelP(3,2);
t4916 = koppelP(3,1);
t5156 = t4830 * t4912 - t4831 * t4916;
t4641 = t4902 * t5156 - t4904;
t4905 = xDP(1);
t5157 = t4830 * t4916 + t4831 * t4912;
t4642 = t4902 * t5157 - t4905;
t4886 = sin(qJ(1,3));
t4895 = cos(qJ(1,3));
t4535 = t4641 * t4895 - t4642 * t4886;
t4536 = t4641 * t4886 + t4642 * t4895;
t4875 = legFrame(3,3);
t4794 = sin(t4875);
t4798 = cos(t4875);
t5162 = t4535 * t4798 - t4794 * t4536;
t4494 = pkin(2) * t5162;
t4500 = t4535 * t4794 + t4536 * t4798;
t5999 = t4641 * t4866;
t4543 = -pkin(1) * t4642 + pkin(5) * t5999;
t5998 = t4642 * t4866;
t4544 = pkin(1) * t4641 + pkin(5) * t5998;
t4551 = pkin(1) * t5999 + pkin(5) * t4642;
t4552 = pkin(1) * t5998 - pkin(5) * t4641;
t4903 = xDP(3);
t5852 = t4894 * t4903;
t4724 = pkin(6) * t5852;
t4850 = t4894 ^ 2;
t4790 = t4850 - 0.2e1;
t4835 = t4867 ^ 2;
t5865 = t4885 * t4894;
t5512 = t4884 * t5865;
t6162 = pkin(2) * t4866;
t5244 = t5512 * t6162;
t5965 = (t4894 + 0.1e1) * (t4894 - 0.1e1);
t6146 = pkin(6) * t4866;
t5430 = t5965 * t6146;
t6179 = t4850 - 0.1e1;
t5490 = t4808 * t6179 - pkin(5);
t5912 = t4866 * t4884;
t5746 = pkin(2) * t5912;
t4846 = t4893 ^ 2;
t5947 = t4846 * t4885;
t5754 = pkin(2) * t5947;
t5758 = t4790 * t4808;
t6191 = -0.2e1 * t4866;
t5772 = t4903 * t6191;
t6165 = pkin(2) * t4846;
t5786 = 0.2e1 * t6165;
t5911 = t4866 * t4885;
t6153 = pkin(2) * t4903;
t4817 = t4903 * pkin(5);
t6138 = t4894 * pkin(6);
t6229 = -t5162 * t6138 - t4817;
t4359 = ((-t4903 * t5758 - t6229) * t4893 + (-t5162 * t5786 - (-pkin(5) * t5162 + t4724) * t4884 + t4494) * t4885) * t4835 + (-(t4500 * t4894 + t4885 * t5772) * t6165 + (-t4790 * t5162 * t5746 + (t4543 * t4895 - t4544 * t4886) * t4798 + (-t4543 * t4886 - t4544 * t4895) * t4794 + (-t4500 * t4885 - t4866 * t5852) * pkin(6)) * t4893 + (t4884 * t6229 - t6153) * t5911) * t4867 + t5162 * t5754 + (t4500 * t5244 + t4903 * t5490) * t4893 + (((t4551 * t4886 + t4552 * t4895) * t4798 + (t4551 * t4895 - t4552 * t4886) * t4794 + t4724) * t4884 - t4494) * t4885 + (pkin(1) * t5852 - t4500 * t5430) * t4884;
t5853 = t4893 * t4894;
t5735 = pkin(2) * t5853;
t5866 = t4885 * t4893;
t4696 = pkin(2) * t5866 - t6138;
t5984 = t4696 * t4867;
t5126 = pkin(1) * t5984 + (-t4778 + (t5735 + t4809) * pkin(5)) * t4866;
t4588 = 0.1e1 / t5126;
t6025 = t4588 * t4847;
t4349 = t4359 * t6025;
t5366 = t4884 * t4349;
t4315 = pkin(2) * t5366;
t4334 = pkin(5) * t4349;
t6187 = t4835 - 0.1e1;
t5453 = t6187 * t4903;
t5917 = t4866 * t4867;
t5601 = t5162 * t5917;
t4482 = -t5453 - t5601;
t5723 = t4835 * t4809;
t6254 = t4809 + pkin(1);
t4692 = -t5723 + t6254;
t4748 = 0.2e1 * t4809 + pkin(1);
t4818 = pkin(1) * t4885;
t4761 = t4818 + pkin(6);
t4747 = t4808 + pkin(5);
t5967 = (t4867 + 0.1e1) * (t4867 - 0.1e1);
t5300 = t5162 * t4747 * t5967;
t5709 = t6187 * pkin(6);
t5406 = t4818 - t5709;
t5414 = pkin(6) * t5601;
t4921 = pkin(6) ^ 2;
t4923 = pkin(2) ^ 2;
t5946 = t4846 * t4923;
t5435 = -t4921 + t5946;
t5878 = t4867 * t4903;
t5554 = t4747 * t5878;
t6213 = 0.2e1 * pkin(6);
t6135 = pkin(2) * t6213;
t5712 = t4893 * t6135;
t6159 = pkin(2) * t4893;
t4404 = (t4500 * t4866 * t5435 + t4482 * t5712) * t4850 + (-t4482 * t4885 * t5946 + ((t4500 * t4748 - t5554) * t4866 + t5300) * t6159 + (t4692 * t4903 - t4885 * t5414) * pkin(6)) * t4894 - (t4903 * t5406 - t5414) * t6159 + ((t4500 * t4761 - t4885 * t5554) * t4866 + t4885 * t5300) * pkin(6);
t4924 = 0.1e1 / pkin(2);
t5940 = t4847 * t4924;
t5589 = t6276 * t5940;
t5347 = t4404 * t5589;
t4390 = pkin(6) * t5347;
t5805 = -t4334 - t4390;
t4208 = -t4315 + t5805;
t4333 = pkin(6) * t4349;
t5659 = t4404 * t6041;
t4387 = t4884 * t5659;
t4240 = -t4387 + t4333;
t5240 = pkin(5) * t5347;
t4243 = t4333 - t5240;
t5944 = t4847 * t4867;
t5673 = t4359 * t5944;
t4309 = -t4588 * t5673 / 0.2e1;
t4487 = t4642 * t4809 + t4641 * t5984 + (-t4641 * t5912 + t4642 * t5853) * pkin(2);
t4488 = t4641 * t4809 - t4642 * t5984 + (t4641 * t5853 + t4642 * t5912) * pkin(2);
t5890 = t4867 * t4884;
t4632 = pkin(2) * t5890 + t4696 * t4866;
t4446 = (t4487 * t4895 + t4488 * t4886) * t4798 + (-t4487 * t4886 + t4488 * t4895) * t4794 - t4903 * t4632;
t4436 = t4446 * t4588;
t6026 = t4588 * t4835;
t4268 = -t4446 * t6026 + t4309 + t4436 / 0.2e1;
t4432 = t4867 * t4436;
t4283 = -t4432 - t4349;
t4327 = pkin(5) * t4333;
t4330 = 0.2e1 * t4333;
t4346 = pkin(1) * t4349;
t5291 = t4885 * t5659;
t5203 = t4924 * t5291;
t4384 = pkin(1) * t5203;
t6204 = -0.2e1 * t4432;
t5254 = t4747 * t6204;
t4421 = pkin(6) * t5254;
t5980 = t4747 * t4866;
t5555 = t4895 * t5980;
t4625 = t4761 * t4886 - t4885 * t5555;
t4636 = t4748 * t4886 - t5555;
t5556 = t4886 * t5980;
t5033 = t4761 * t4895 + t4885 * t5556;
t5065 = t4748 * t4895 + t5556;
t4658 = t4794 * t4895 + t4798 * t4886;
t5218 = t5435 * t4658;
t5884 = t4867 * t4893;
t5740 = pkin(2) * t5884;
t5419 = t4658 * t5740;
t4655 = t4794 * t4886 - t4895 * t4798;
t6214 = -0.2e1 * pkin(6);
t6272 = (t4655 * t5435 + t5419 * t6214) * t4850;
t4467 = t6272 + ((t4794 * t4636 - t4798 * t5065) * t6159 + t5218 * t5889) * t4894 + (t4794 * t4625 - t4798 * t5033 + t5419) * pkin(6);
t5122 = t5435 * t5889;
t5422 = t4655 * t5740;
t4470 = (t5422 * t6213 + t5218) * t4850 + ((t4636 * t4798 + t4794 * t5065) * t6159 - t4655 * t5122) * t4894 + (t4625 * t4798 + t4794 * t5033 - t5422) * pkin(6);
t4922 = pkin(5) ^ 2;
t5789 = pkin(1) ^ 2 + t4922;
t5496 = t4923 + t5789;
t4722 = t4921 + t5496;
t4730 = t4809 / 0.2e1 + pkin(1);
t4746 = pkin(5) * t4884 + pkin(2);
t4777 = pkin(5) * t4808;
t4765 = 0.2e1 * t4777;
t4769 = t4850 - 0.1e1 / 0.2e1;
t4783 = pkin(1) * t4809;
t4845 = t4893 * t4846;
t4849 = t4894 * t4850;
t4863 = t4902 ^ 2;
t6188 = pkin(6) * pkin(1);
t4864 = 0.2e1 * t6188;
t4908 = -0.3e1 * t4921;
t4927 = pkin(2) * t4923;
t5048 = t4866 * t5157;
t4340 = t4921 * t4349;
t5058 = pkin(6) * t4387 - t4340;
t5202 = t4894 * t5347;
t5108 = t4884 * t5202;
t5204 = t4866 * t5347;
t5138 = pkin(1) * t5204;
t4821 = pkin(1) * t4850;
t4711 = t4821 - t6254;
t5248 = t4711 * t4867;
t4834 = t4867 * t4835;
t5270 = (-t4834 + t4867) * t6213;
t5284 = 0.3e1 * t4921 + t5496;
t5287 = t5659 / 0.2e1;
t5542 = t4923 * t5967;
t5296 = t4846 * t5542;
t5905 = t4866 * t4894;
t5509 = t4747 * t5905;
t5303 = t4885 * t5509;
t5318 = t5967 * t4436;
t5402 = t6187 * t5865;
t5487 = t4866 * t4772;
t5494 = 0.2e1 * t4923 * t6146;
t5495 = -0.2e1 * pkin(2) * t5967;
t5791 = t4922 / 0.2e1 + t4923 / 0.2e1;
t5497 = t4921 + t5791;
t5788 = t4923 - t4921;
t5500 = t4777 + t5788;
t5801 = -t4384 - t4390;
t5504 = t4334 - t5801;
t5876 = t4867 * t4923;
t5537 = t4846 * t5876;
t5633 = t4834 * t4436;
t4848 = 0.1e1 / t4893 ^ 2;
t5883 = t4867 * t4894;
t4719 = pkin(6) * t5883;
t5726 = pkin(5) * t5905;
t4678 = t5726 + t5765;
t5761 = t4678 * t6159;
t6211 = 0.1e1 / (-pkin(1) * t4719 - t4680 + t5761);
t6035 = t6211 * t4848;
t5660 = t4404 * t6035;
t6101 = t4359 * t4588;
t5675 = t4848 * t6101;
t6099 = t4359 * t4847;
t5769 = pkin(1) * t6099;
t6190 = 0.2e1 * t4866;
t5771 = t4927 * t6190;
t4393 = pkin(1) * t5347;
t5816 = t4208 * t4885 - t4393;
t5864 = t4885 * t4921;
t5918 = t4863 * t4866;
t5978 = t6254 * t4894;
t6024 = t4588 * t4866;
t6109 = t4243 * t4885;
t6171 = pkin(1) * t4867;
t6189 = pkin(6) / 0.2e1;
t6201 = -0.2e1 * t4835;
t6215 = 0.2e1 * pkin(1);
t4085 = -t4470 * t4863 * t5048 * t5589 + t4924 * (t6276 * (t4847 * (-t4467 * t5156 * t5918 - ((t4908 + t5946) * t4849 * t5318 * t5743 + ((t4421 + pkin(6) * (-t4334 - t4390 / 0.2e1) + (-(t4330 - t5240) * t4884 / 0.2e1 + t5287) * pkin(2)) * t4893 * t5495 + t4240 * t5487 - (t5537 * t5769 + ((t6215 + 0.3e1 * t4809 - 0.3e1 * t5723) * t5946 + (t4730 * t6214 + t4835 * t5864) * pkin(6)) * t4446) * t6024) * t4850 + (t4268 * t4845 * t5771 + (t4885 * t5254 + t5816) * t5296 + ((-(-t4387 + t4330) * t4818 + t5058) * t4867 - ((t4777 + t5497) * t6201 + t4765 + 0.4e1 * t4783 + t5284) * t4436) * t5743 + (-t6187 * (-t4327 + (-t4243 * t4884 + t5659) * pkin(2)) - t4747 * t5270 * t4436) * t4809) * t4894 + t4268 * t5494 * t5947 - (t4421 + (0.2e1 * t4747 * t5633 - (-t4315 - t5504) * t4835 - t4384 + t4208) * pkin(6)) * t6159 + ((-pkin(1) * t4240 + t4885 * t5058) * t4867 - (t4864 + ((t4777 + t5791) * t6201 + t4765 + t4722) * t4885) * t4436) * t6146) * t4436) - ((-t5318 * t5978 - t5138) * t6165 + (-t5500 * t4850 * t5318 - (t5659 + (-t4432 * t4761 - t4243) * t4884) * pkin(2) * t5905 - pkin(1) * t5291 * t5890) * t4893 + (t5108 * t6171 - t4866 * ((-t4346 - t6109) * t4884 + t5291) - (t4761 * t4893 * t6187 + t4746 * t5402 + t5248 * t5912) * t4436) * pkin(6)) * t5660) - (t4894 * t4927 * t4283 * t4845 + (t4283 * t4809 - t4346 - (t4850 * t6171 - t5303) * t4436) * t5946 + ((t4387 / 0.2e1 - t4333 / 0.2e1) * t4894 - ((t4818 + t6189) * t5883 + t4769 * t5980) * t4436) * t5712 - (t4240 * t6254 - (t5248 - t5303) * pkin(6) * t4436) * pkin(6)) * t6211 * t4866 * t5675);
t4913 = koppelP(2,2);
t4917 = koppelP(2,1);
t5154 = t4830 * t4913 - t4831 * t4917;
t4643 = t4902 * t5154 - t4904;
t5155 = t4830 * t4917 + t4831 * t4913;
t4644 = t4902 * t5155 - t4905;
t4889 = sin(qJ(1,2));
t4898 = cos(qJ(1,2));
t4537 = t4643 * t4898 - t4644 * t4889;
t4538 = t4643 * t4889 + t4644 * t4898;
t4876 = legFrame(2,3);
t4795 = sin(t4876);
t4799 = cos(t4876);
t5161 = t4537 * t4799 - t4795 * t4538;
t4495 = pkin(2) * t5161;
t4502 = t4537 * t4795 + t4538 * t4799;
t5997 = t4643 * t4866;
t4545 = -pkin(1) * t4644 + pkin(5) * t5997;
t5996 = t4644 * t4866;
t4546 = pkin(1) * t4643 + pkin(5) * t5996;
t4553 = pkin(1) * t5997 + pkin(5) * t4644;
t4554 = pkin(1) * t5996 - pkin(5) * t4643;
t5850 = t4897 * t4903;
t4725 = pkin(6) * t5850;
t4856 = t4897 ^ 2;
t4791 = t4856 - 0.2e1;
t5860 = t4888 * t4897;
t5511 = t4887 * t5860;
t5243 = t5511 * t6162;
t5964 = (t4897 + 0.1e1) * (t4897 - 0.1e1);
t5429 = t5964 * t6146;
t6176 = t4856 - 0.1e1;
t5489 = t4810 * t6176 - pkin(5);
t5910 = t4866 * t4887;
t5745 = pkin(2) * t5910;
t4852 = t4896 ^ 2;
t5937 = t4852 * t4888;
t5752 = pkin(2) * t5937;
t5757 = t4791 * t4810;
t6164 = pkin(2) * t4852;
t5785 = 0.2e1 * t6164;
t5909 = t4866 * t4888;
t6137 = t4897 * pkin(6);
t6230 = -t5161 * t6137 - t4817;
t4360 = ((-t4903 * t5757 - t6230) * t4896 + (-t5161 * t5785 - (-pkin(5) * t5161 + t4725) * t4887 + t4495) * t4888) * t4835 + (-(t4502 * t4897 + t4888 * t5772) * t6164 + (-t4791 * t5161 * t5745 + (t4545 * t4898 - t4546 * t4889) * t4799 + (-t4545 * t4889 - t4546 * t4898) * t4795 + (-t4502 * t4888 - t4866 * t5850) * pkin(6)) * t4896 + (t4887 * t6230 - t6153) * t5909) * t4867 + t5161 * t5752 + (t4502 * t5243 + t4903 * t5489) * t4896 + (((t4553 * t4889 + t4554 * t4898) * t4799 + (t4553 * t4898 - t4554 * t4889) * t4795 + t4725) * t4887 - t4495) * t4888 + (pkin(1) * t5850 - t4502 * t5429) * t4887;
t5851 = t4896 * t4897;
t5733 = pkin(2) * t5851;
t5861 = t4888 * t4896;
t4697 = pkin(2) * t5861 - t6137;
t5983 = t4697 * t4867;
t5125 = pkin(1) * t5983 + (-t4780 + (t5733 + t4811) * pkin(5)) * t4866;
t4591 = 0.1e1 / t5125;
t6019 = t4591 * t4853;
t4351 = t4360 * t6019;
t5361 = t4887 * t4351;
t4316 = pkin(2) * t5361;
t4336 = pkin(5) * t4351;
t5600 = t5161 * t5917;
t4483 = -t5453 - t5600;
t5722 = t4835 * t4811;
t6253 = t4811 + pkin(1);
t4693 = -t5722 + t6253;
t4752 = 0.2e1 * t4811 + pkin(1);
t4819 = pkin(1) * t4888;
t4762 = t4819 + pkin(6);
t4751 = t4810 + pkin(5);
t5299 = t5161 * t4751 * t5967;
t5405 = t4819 - t5709;
t5413 = pkin(6) * t5600;
t5936 = t4852 * t4923;
t5434 = -t4921 + t5936;
t5551 = t4751 * t5878;
t5711 = t4896 * t6135;
t6157 = pkin(2) * t4896;
t4405 = (t4502 * t4866 * t5434 + t4483 * t5711) * t4856 + (-t4483 * t4888 * t5936 + ((t4502 * t4752 - t5551) * t4866 + t5299) * t6157 + (t4693 * t4903 - t4888 * t5413) * pkin(6)) * t4897 - (t4903 * t5405 - t5413) * t6157 + ((t4502 * t4762 - t4888 * t5551) * t4866 + t4888 * t5299) * pkin(6);
t5930 = t4853 * t4924;
t5588 = t6277 * t5930;
t5344 = t4405 * t5588;
t4391 = pkin(6) * t5344;
t5804 = -t4336 - t4391;
t4209 = -t4316 + t5804;
t4335 = pkin(6) * t4351;
t5656 = t4405 * t6040;
t4388 = t4887 * t5656;
t4241 = -t4388 + t4335;
t5239 = pkin(5) * t5344;
t4244 = t4335 - t5239;
t5934 = t4853 * t4867;
t5668 = t4360 * t5934;
t4310 = -t4591 * t5668 / 0.2e1;
t4489 = t4644 * t4811 + t4643 * t5983 + (-t4643 * t5910 + t4644 * t5851) * pkin(2);
t4490 = t4643 * t4811 - t4644 * t5983 + (t4643 * t5851 + t4644 * t5910) * pkin(2);
t5888 = t4867 * t4887;
t4633 = pkin(2) * t5888 + t4697 * t4866;
t4447 = (t4489 * t4898 + t4490 * t4889) * t4799 + (-t4489 * t4889 + t4490 * t4898) * t4795 - t4903 * t4633;
t4438 = t4447 * t4591;
t6020 = t4591 * t4835;
t4269 = -t4447 * t6020 + t4310 + t4438 / 0.2e1;
t4433 = t4867 * t4438;
t4286 = -t4433 - t4351;
t4328 = pkin(5) * t4335;
t4331 = 0.2e1 * t4335;
t4347 = pkin(1) * t4351;
t5290 = t4888 * t5656;
t5200 = t4924 * t5290;
t4385 = pkin(1) * t5200;
t6203 = -0.2e1 * t4433;
t5253 = t4751 * t6203;
t4422 = pkin(6) * t5253;
t5977 = t4751 * t4866;
t5552 = t4898 * t5977;
t4626 = t4762 * t4889 - t4888 * t5552;
t4637 = t4752 * t4889 - t5552;
t5553 = t4889 * t5977;
t5032 = t4762 * t4898 + t4888 * t5553;
t5064 = t4752 * t4898 + t5553;
t4659 = t4795 * t4898 + t4799 * t4889;
t5217 = t5434 * t4659;
t5882 = t4867 * t4896;
t5739 = pkin(2) * t5882;
t5418 = t4659 * t5739;
t4656 = t4795 * t4889 - t4898 * t4799;
t6273 = (t4656 * t5434 + t5418 * t6214) * t4856;
t4468 = t6273 + ((t4795 * t4637 - t4799 * t5064) * t6157 + t5217 * t5887) * t4897 + (t4795 * t4626 - t4799 * t5032 + t5418) * pkin(6);
t5121 = t5434 * t5887;
t5421 = t4656 * t5739;
t4471 = (t5421 * t6213 + t5217) * t4856 + ((t4637 * t4799 + t4795 * t5064) * t6157 - t4656 * t5121) * t4897 + (t4626 * t4799 + t4795 * t5032 - t5421) * pkin(6);
t4732 = t4811 / 0.2e1 + pkin(1);
t4750 = pkin(5) * t4887 + pkin(2);
t4779 = pkin(5) * t4810;
t4766 = 0.2e1 * t4779;
t4770 = t4856 - 0.1e1 / 0.2e1;
t4784 = pkin(1) * t4811;
t4851 = t4896 * t4852;
t4855 = t4897 * t4856;
t5047 = t4866 * t5155;
t4341 = t4921 * t4351;
t5057 = pkin(6) * t4388 - t4341;
t5199 = t4897 * t5344;
t5107 = t4887 * t5199;
t5201 = t4866 * t5344;
t5137 = pkin(1) * t5201;
t4822 = pkin(1) * t4856;
t4712 = t4822 - t6253;
t5247 = t4712 * t4867;
t5286 = t5656 / 0.2e1;
t5295 = t4852 * t5542;
t5903 = t4866 * t4897;
t5508 = t4751 * t5903;
t5302 = t4888 * t5508;
t5313 = t5967 * t4438;
t5401 = t6187 * t5860;
t5499 = t4779 + t5788;
t5800 = -t4385 - t4391;
t5503 = t4336 - t5800;
t5535 = t4852 * t5876;
t5628 = t4834 * t4438;
t4854 = 0.1e1 / t4896 ^ 2;
t5881 = t4867 * t4897;
t4720 = pkin(6) * t5881;
t5725 = pkin(5) * t5903;
t4679 = t5725 + t5764;
t5760 = t4679 * t6157;
t6210 = 0.1e1 / (-pkin(1) * t4720 - t4681 + t5760);
t6033 = t6210 * t4854;
t5657 = t4405 * t6033;
t6098 = t4360 * t4591;
t5670 = t4854 * t6098;
t6096 = t4360 * t4853;
t5768 = pkin(1) * t6096;
t4394 = pkin(1) * t5344;
t5815 = t4209 * t4888 - t4394;
t5859 = t4888 * t4921;
t5975 = t6253 * t4897;
t6018 = t4591 * t4866;
t6108 = t4244 * t4888;
t4086 = -t4471 * t4863 * t5047 * t5588 + t4924 * (t6277 * (t4853 * (-t4468 * t5154 * t5918 - ((t4908 + t5936) * t4855 * t5313 * t5742 + ((t4422 + pkin(6) * (-t4336 - t4391 / 0.2e1) + (-(t4331 - t5239) * t4887 / 0.2e1 + t5286) * pkin(2)) * t4896 * t5495 + t4241 * t5487 - (t5535 * t5768 + ((t6215 + 0.3e1 * t4811 - 0.3e1 * t5722) * t5936 + (t4732 * t6214 + t4835 * t5859) * pkin(6)) * t4447) * t6018) * t4856 + (t4269 * t4851 * t5771 + (t4888 * t5253 + t5815) * t5295 + ((-(-t4388 + t4331) * t4819 + t5057) * t4867 - ((t4779 + t5497) * t6201 + t4766 + 0.4e1 * t4784 + t5284) * t4438) * t5742 + (-t6187 * (-t4328 + (-t4244 * t4887 + t5656) * pkin(2)) - t4751 * t5270 * t4438) * t4811) * t4897 + t4269 * t5494 * t5937 - (t4422 + (0.2e1 * t4751 * t5628 - (-t4316 - t5503) * t4835 - t4385 + t4209) * pkin(6)) * t6157 + ((-pkin(1) * t4241 + t4888 * t5057) * t4867 - (t4864 + ((t4779 + t5791) * t6201 + t4766 + t4722) * t4888) * t4438) * t6146) * t4438) - ((-t5313 * t5975 - t5137) * t6164 + (-t5499 * t4856 * t5313 - pkin(2) * (t5656 + (-t4433 * t4762 - t4244) * t4887) * t5903 - pkin(1) * t5290 * t5888) * t4896 + (t5107 * t6171 - t4866 * ((-t4347 - t6108) * t4887 + t5290) - (t4762 * t4896 * t6187 + t4750 * t5401 + t5247 * t5910) * t4438) * pkin(6)) * t5657) - (t4897 * t4927 * t4286 * t4851 + (t4286 * t4811 - t4347 - (t4856 * t6171 - t5302) * t4438) * t5936 + ((t4388 / 0.2e1 - t4335 / 0.2e1) * t4897 - ((t4819 + t6189) * t5881 + t4770 * t5977) * t4438) * t5711 - (t4241 * t6253 - (t5247 - t5302) * pkin(6) * t4438) * pkin(6)) * t6210 * t4866 * t5670);
t4914 = koppelP(1,2);
t4918 = koppelP(1,1);
t5152 = t4830 * t4914 - t4831 * t4918;
t4645 = t4902 * t5152 - t4904;
t5153 = t4830 * t4918 + t4831 * t4914;
t4646 = t4902 * t5153 - t4905;
t4892 = sin(qJ(1,1));
t4901 = cos(qJ(1,1));
t4539 = t4645 * t4901 - t4646 * t4892;
t4540 = t4645 * t4892 + t4646 * t4901;
t4877 = legFrame(1,3);
t4796 = sin(t4877);
t4800 = cos(t4877);
t5160 = t4539 * t4800 - t4796 * t4540;
t4496 = pkin(2) * t5160;
t4504 = t4539 * t4796 + t4540 * t4800;
t5995 = t4645 * t4866;
t4547 = -pkin(1) * t4646 + pkin(5) * t5995;
t5994 = t4646 * t4866;
t4548 = pkin(1) * t4645 + pkin(5) * t5994;
t4555 = pkin(1) * t5995 + pkin(5) * t4646;
t4556 = pkin(1) * t5994 - pkin(5) * t4645;
t5848 = t4900 * t4903;
t4726 = pkin(6) * t5848;
t4862 = t4900 ^ 2;
t4792 = t4862 - 0.2e1;
t5855 = t4891 * t4900;
t5510 = t4890 * t5855;
t5242 = t5510 * t6162;
t5963 = (t4900 + 0.1e1) * (t4900 - 0.1e1);
t5428 = t5963 * t6146;
t6173 = t4862 - 0.1e1;
t5488 = t4812 * t6173 - pkin(5);
t5908 = t4866 * t4890;
t5744 = pkin(2) * t5908;
t4858 = t4899 ^ 2;
t5927 = t4858 * t4891;
t5750 = pkin(2) * t5927;
t5756 = t4792 * t4812;
t6163 = pkin(2) * t4858;
t5784 = 0.2e1 * t6163;
t5907 = t4866 * t4891;
t6136 = t4900 * pkin(6);
t6231 = -t5160 * t6136 - t4817;
t4361 = ((-t4903 * t5756 - t6231) * t4899 + (-t5160 * t5784 - (-pkin(5) * t5160 + t4726) * t4890 + t4496) * t4891) * t4835 + (-(t4504 * t4900 + t4891 * t5772) * t6163 + (-t4792 * t5160 * t5744 + (t4547 * t4901 - t4548 * t4892) * t4800 + (-t4547 * t4892 - t4548 * t4901) * t4796 + (-t4504 * t4891 - t4866 * t5848) * pkin(6)) * t4899 + (t4890 * t6231 - t6153) * t5907) * t4867 + t5160 * t5750 + (t4504 * t5242 + t4903 * t5488) * t4899 + (((t4555 * t4892 + t4556 * t4901) * t4800 + (t4555 * t4901 - t4556 * t4892) * t4796 + t4726) * t4890 - t4496) * t4891 + (pkin(1) * t5848 - t4504 * t5428) * t4890;
t5849 = t4899 * t4900;
t5732 = pkin(2) * t5849;
t5856 = t4891 * t4899;
t4698 = pkin(2) * t5856 - t6136;
t5982 = t4698 * t4867;
t5124 = pkin(1) * t5982 + (-t4782 + (t5732 + t4813) * pkin(5)) * t4866;
t4594 = 0.1e1 / t5124;
t6013 = t4594 * t4859;
t4353 = t4361 * t6013;
t5356 = t4890 * t4353;
t4317 = pkin(2) * t5356;
t4338 = pkin(5) * t4353;
t5599 = t5160 * t5917;
t4484 = -t5453 - t5599;
t5721 = t4835 * t4813;
t6252 = t4813 + pkin(1);
t4694 = -t5721 + t6252;
t4756 = 0.2e1 * t4813 + pkin(1);
t4820 = pkin(1) * t4891;
t4763 = t4820 + pkin(6);
t4755 = t4812 + pkin(5);
t5298 = t5160 * t4755 * t5967;
t5404 = t4820 - t5709;
t5412 = pkin(6) * t5599;
t5926 = t4858 * t4923;
t5433 = -t4921 + t5926;
t5548 = t4755 * t5878;
t5710 = t4899 * t6135;
t6155 = pkin(2) * t4899;
t4406 = (t4504 * t4866 * t5433 + t4484 * t5710) * t4862 + (-t4484 * t4891 * t5926 + ((t4504 * t4756 - t5548) * t4866 + t5298) * t6155 + (t4694 * t4903 - t4891 * t5412) * pkin(6)) * t4900 - (t4903 * t5404 - t5412) * t6155 + ((t4504 * t4763 - t4891 * t5548) * t4866 + t4891 * t5298) * pkin(6);
t5920 = t4859 * t4924;
t5587 = t6278 * t5920;
t5341 = t4406 * t5587;
t4392 = pkin(6) * t5341;
t5803 = -t4338 - t4392;
t4210 = -t4317 + t5803;
t4337 = pkin(6) * t4353;
t5653 = t4406 * t6039;
t4389 = t4890 * t5653;
t4242 = -t4389 + t4337;
t5238 = pkin(5) * t5341;
t4245 = t4337 - t5238;
t5924 = t4859 * t4867;
t5663 = t4361 * t5924;
t4311 = -t4594 * t5663 / 0.2e1;
t4491 = t4646 * t4813 + t4645 * t5982 + (-t4645 * t5908 + t4646 * t5849) * pkin(2);
t4492 = t4645 * t4813 - t4646 * t5982 + (t4645 * t5849 + t4646 * t5908) * pkin(2);
t5886 = t4867 * t4890;
t4634 = pkin(2) * t5886 + t4698 * t4866;
t4448 = (t4491 * t4901 + t4492 * t4892) * t4800 + (-t4491 * t4892 + t4492 * t4901) * t4796 - t4903 * t4634;
t4440 = t4448 * t4594;
t6014 = t4594 * t4835;
t4270 = -t4448 * t6014 + t4311 + t4440 / 0.2e1;
t4434 = t4867 * t4440;
t4289 = -t4434 - t4353;
t4329 = pkin(5) * t4337;
t4332 = 0.2e1 * t4337;
t4339 = pkin(1) * t4353;
t5289 = t4891 * t5653;
t5197 = t4924 * t5289;
t4386 = pkin(1) * t5197;
t6202 = -0.2e1 * t4434;
t5252 = t4755 * t6202;
t4423 = pkin(6) * t5252;
t5974 = t4755 * t4866;
t5549 = t4901 * t5974;
t4627 = t4763 * t4892 - t4891 * t5549;
t4638 = t4756 * t4892 - t5549;
t5550 = t4892 * t5974;
t5031 = t4763 * t4901 + t4891 * t5550;
t5063 = t4756 * t4901 + t5550;
t4660 = t4796 * t4901 + t4800 * t4892;
t5216 = t5433 * t4660;
t5880 = t4867 * t4899;
t5738 = pkin(2) * t5880;
t5417 = t4660 * t5738;
t4657 = t4796 * t4892 - t4901 * t4800;
t6274 = (t4657 * t5433 + t5417 * t6214) * t4862;
t4469 = t6274 + ((t4796 * t4638 - t4800 * t5063) * t6155 + t5216 * t5885) * t4900 + (t4796 * t4627 - t4800 * t5031 + t5417) * pkin(6);
t5120 = t5433 * t5885;
t5420 = t4657 * t5738;
t4472 = (t5420 * t6213 + t5216) * t4862 + ((t4638 * t4800 + t4796 * t5063) * t6155 - t4657 * t5120) * t4900 + (t4627 * t4800 + t4796 * t5031 - t5420) * pkin(6);
t4734 = t4813 / 0.2e1 + pkin(1);
t4754 = pkin(5) * t4890 + pkin(2);
t4781 = pkin(5) * t4812;
t4767 = 0.2e1 * t4781;
t4771 = t4862 - 0.1e1 / 0.2e1;
t4785 = pkin(1) * t4813;
t4857 = t4899 * t4858;
t4861 = t4900 * t4862;
t5046 = t4866 * t5153;
t4342 = t4921 * t4353;
t5056 = pkin(6) * t4389 - t4342;
t5196 = t4900 * t5341;
t5106 = t4890 * t5196;
t5198 = t4866 * t5341;
t5136 = pkin(1) * t5198;
t4823 = pkin(1) * t4862;
t4713 = t4823 - t6252;
t5246 = t4713 * t4867;
t5285 = t5653 / 0.2e1;
t5294 = t4858 * t5542;
t5901 = t4866 * t4900;
t5507 = t4755 * t5901;
t5301 = t4891 * t5507;
t5308 = t5967 * t4440;
t5400 = t6187 * t5855;
t5498 = t4781 + t5788;
t5799 = -t4386 - t4392;
t5502 = t4338 - t5799;
t5533 = t4858 * t5876;
t5623 = t4834 * t4440;
t4860 = 0.1e1 / t4899 ^ 2;
t5879 = t4867 * t4900;
t4721 = pkin(6) * t5879;
t5724 = pkin(5) * t5901;
t4677 = t5724 + t5763;
t5762 = t4677 * t6155;
t6212 = 0.1e1 / (-pkin(1) * t4721 - t4682 + t5762);
t6037 = t6212 * t4860;
t5654 = t4406 * t6037;
t6095 = t4361 * t4594;
t5665 = t4860 * t6095;
t6093 = t4361 * t4859;
t5767 = pkin(1) * t6093;
t4395 = pkin(1) * t5341;
t5814 = t4210 * t4891 - t4395;
t5854 = t4891 * t4921;
t5972 = t6252 * t4900;
t6012 = t4594 * t4866;
t6107 = t4245 * t4891;
t4087 = -t4472 * t4863 * t5046 * t5587 + t4924 * (t6278 * (t4859 * (-t4469 * t5152 * t5918 - ((t4908 + t5926) * t4861 * t5308 * t5741 + ((t4423 + pkin(6) * (-t4338 - t4392 / 0.2e1) + (-(t4332 - t5238) * t4890 / 0.2e1 + t5285) * pkin(2)) * t4899 * t5495 + t4242 * t5487 - (t5533 * t5767 + ((t6215 + 0.3e1 * t4813 - 0.3e1 * t5721) * t5926 + (t4734 * t6214 + t4835 * t5854) * pkin(6)) * t4448) * t6012) * t4862 + (t4270 * t4857 * t5771 + (t4891 * t5252 + t5814) * t5294 + ((-(-t4389 + t4332) * t4820 + t5056) * t4867 - ((t4781 + t5497) * t6201 + t4767 + 0.4e1 * t4785 + t5284) * t4440) * t5741 + (-t6187 * (-t4329 + (-t4245 * t4890 + t5653) * pkin(2)) - t4755 * t5270 * t4440) * t4813) * t4900 + t4270 * t5494 * t5927 - (t4423 + (0.2e1 * t4755 * t5623 - (-t4317 - t5502) * t4835 - t4386 + t4210) * pkin(6)) * t6155 + ((-pkin(1) * t4242 + t4891 * t5056) * t4867 - (t4864 + ((t4781 + t5791) * t6201 + t4767 + t4722) * t4891) * t4440) * t6146) * t4440) - ((-t5308 * t5972 - t5136) * t6163 + (-t5498 * t4862 * t5308 - pkin(2) * (t5653 + (-t4434 * t4763 - t4245) * t4890) * t5901 - pkin(1) * t5289 * t5886) * t4899 + (t5106 * t6171 - t4866 * ((-t4339 - t6107) * t4890 + t5289) - (t4763 * t4899 * t6187 + t4754 * t5400 + t5246 * t5908) * t4440) * pkin(6)) * t5654) - (t4900 * t4927 * t4289 * t4857 + (t4289 * t4813 - t4339 - (t4862 * t6171 - t5301) * t4440) * t5926 + ((t4389 / 0.2e1 - t4337 / 0.2e1) * t4900 - ((t4820 + t6189) * t5879 + t4771 * t5974) * t4440) * t5710 - (t4242 * t6252 - (t5246 - t5301) * pkin(6) * t4440) * pkin(6)) * t6212 * t4866 * t5665);
t5870 = t4881 * t4882;
t5736 = pkin(2) * t5870;
t5873 = t4879 * t4881;
t5737 = pkin(2) * t5873;
t6139 = t4882 * pkin(6);
t4695 = t5737 - t6139;
t5985 = t4695 * t4867;
t5127 = pkin(1) * t5985 + (-t4774 + (t5736 + t6140) * pkin(5)) * t4866;
t4583 = 0.1e1 / t5127;
t4911 = koppelP(4,2);
t4915 = koppelP(4,1);
t5158 = t4830 * t4911 - t4831 * t4915;
t4639 = t4902 * t5158 - t4904;
t5159 = t4830 * t4915 + t4831 * t4911;
t4640 = t4902 * t5159 - t4905;
t5916 = t4866 * t4878;
t4485 = t4640 * t6140 + t4639 * t5985 + (-t4639 * t5916 + t4640 * t5870) * pkin(2);
t4486 = t4639 * t6140 - t4640 * t5985 + (t4639 * t5870 + t4640 * t5916) * pkin(2);
t5894 = t4867 * t4878;
t4628 = pkin(2) * t5894 + t4695 * t4866;
t4874 = legFrame(4,3);
t4793 = sin(t4874);
t4797 = cos(t4874);
t4880 = sin(qJ(1,4));
t4883 = cos(qJ(1,4));
t4442 = (t4485 * t4883 + t4486 * t4880) * t4797 + (-t4485 * t4880 + t4486 * t4883) * t4793 - t4903 * t4628;
t4425 = t4442 * t4583;
t5486 = -0.2e1 * t4425;
t5895 = t4867 * t4442;
t4533 = t4639 * t4883 - t4640 * t4880;
t4534 = t4639 * t4880 + t4640 * t4883;
t5163 = t4533 * t4797 - t4793 * t4534;
t4493 = pkin(2) * t5163;
t4498 = t4533 * t4793 + t4534 * t4797;
t6001 = t4639 * t4866;
t4541 = -pkin(1) * t4640 + pkin(5) * t6001;
t6000 = t4640 * t4866;
t4542 = pkin(1) * t4639 + pkin(5) * t6000;
t4549 = pkin(1) * t6001 + pkin(5) * t4640;
t4550 = pkin(1) * t6000 - pkin(5) * t4639;
t5869 = t4882 * t4903;
t4723 = pkin(6) * t5869;
t4841 = t4882 ^ 2;
t4786 = t4841 - 0.2e1;
t5872 = t4879 * t4882;
t5513 = t4878 * t5872;
t5245 = t5513 * t6162;
t5966 = (t4882 + 0.1e1) * (t4882 - 0.1e1);
t5431 = t5966 * t6146;
t5748 = pkin(2) * t5916;
t4837 = t4881 ^ 2;
t5956 = t4837 * t4879;
t5755 = pkin(2) * t5956;
t5759 = t4786 * t6141;
t6166 = pkin(2) * t4837;
t5787 = 0.2e1 * t6166;
t5915 = t4866 * t4879;
t6183 = t4841 - 0.1e1;
t4743 = t6183 * pkin(2);
t5981 = t4743 * t4878;
t6228 = -t5163 * t6139 - t4817;
t4355 = ((-t4903 * t5759 - t6228) * t4881 + (-t5163 * t5787 - (-pkin(5) * t5163 + t4723) * t4878 + t4493) * t4879) * t4835 + (-(t4498 * t4882 + t4879 * t5772) * t6166 + (-t4786 * t5163 * t5748 + (t4541 * t4883 - t4542 * t4880) * t4797 + (-t4541 * t4880 - t4542 * t4883) * t4793 + (-t4498 * t4879 - t4866 * t5869) * pkin(6)) * t4881 + (t4878 * t6228 - t6153) * t5915) * t4867 + t5163 * t5755 + (t4498 * t5245 + t4903 * (-pkin(5) + t5981)) * t4881 + (((t4549 * t4880 + t4550 * t4883) * t4797 + (t4549 * t4883 - t4550 * t4880) * t4793 + t4723) * t4878 - t4493) * t4879 + (pkin(1) * t5869 - t4498 * t5431) * t4878;
t6103 = t4355 * t4838;
t5164 = t5895 + t6103;
t6209 = t4583 ^ 2;
t6275 = t5164 * t6209;
t4653 = t4793 * t4880 - t4883 * t4797;
t4654 = t4793 * t4883 + t4797 * t4880;
t5892 = t4867 * t4881;
t5716 = pkin(2) * t5892;
t5423 = t4654 * t5716;
t5955 = t4837 * t4923;
t5436 = -t4921 + t5955;
t6271 = (t4653 * t5436 + t5423 * t6214) * t4841;
t6147 = pkin(6) * t4862;
t4710 = t4763 - t6147;
t4920 = -0.2e1 * pkin(1);
t6010 = t4594 * t4900;
t5620 = t4448 * t6010;
t5304 = t4891 * t5620;
t5165 = t4755 * t5304;
t5249 = pkin(6) * t5356 - t5653;
t5524 = t4866 * t5879;
t5622 = t4448 * t6012;
t5973 = t6252 * t4866;
t4116 = (-(-t5973 * t6093 + ((t4823 - 0.2e1 * t4813 + t4920) * t5917 + pkin(5) * t5400) * t4448) * t4594 * t4858 + (t5249 * t4867 - (-t4448 * t4754 * t5524 + (((-t6147 / 0.2e1 + t4763) * t6201 + t4710) * t4448 - t4677 * t6093) * t4890) * t4594) * t4899 + t4835 * t5165 + (-pkin(1) * t5196 + t4713 * t5622) * t4867 + ((-t4245 + t4389) * t4891 - t4339) * t4866 - t5165) * t6278 * t5654;
t5560 = t4660 * t5908;
t4705 = -pkin(5) + t5756;
t5491 = t4754 - 0.2e1 * t6163;
t6216 = -t4754 * t4891 + (-pkin(6) * t5510 - t4705 * t4899) * t5917 + t5750 + (pkin(6) * t5849 + t4891 * t5491) * t4835;
t6154 = pkin(2) * t4900;
t6262 = t4867 * (t4858 * t6154 + t4899 * t6252) + t4890 * t5428 - t4899 * t5242;
t4458 = t6216 * t4657 + t4660 * t6262 - t5560 * t4820;
t5050 = t4458 * t5153;
t5921 = t4859 * t4900;
t5571 = t4594 * t5921;
t5354 = t4361 * t5571;
t4323 = pkin(1) * t5354;
t5128 = pkin(6) * t4754 * t5304;
t6142 = pkin(6) * t4890;
t5234 = t5622 * t6142;
t5968 = t4792 * t4835;
t5437 = -t4862 + t5968;
t4910 = pkin(5) / 0.2e1;
t4733 = t4812 + t4910;
t5557 = t4733 * t5917;
t5928 = t4857 * t4923;
t5957 = t4835 * t4900;
t5377 = ((-t4440 - (t4448 * t5437 - t5663) * t4594) * t5928 - (-t4323 * t4867 - t4866 * t5814 - ((-t4813 + pkin(1)) * t5957 + (-0.2e1 * t5557 + t6136) * t4891) * t4440) * t6163 + ((t4763 * t4867 + t5724) * t4242 - (-(t4785 - t5498) * t4835 + (-pkin(6) * t4755 + t4782 * t4891) * t5524 + (-t4835 * t4862 + t6173) * pkin(2) * t4754) * t4440) * t4899 + t4835 * t5128 + t5234 * t5246 - t5128 - t5249 * t5973) * t4361 * t6037;
t5922 = t4859 * t4891;
t5572 = t4594 * t5922;
t5355 = t4361 * t5572;
t4322 = pkin(1) * t5355;
t4326 = -t4338 / 0.2e1;
t4345 = t4923 * t4353;
t4595 = 0.1e1 / t5124 ^ 2;
t4832 = t4922 + t4923;
t4919 = 0.2e1 * pkin(5);
t4865 = pkin(2) * t4919;
t5060 = (-pkin(2) * t4245 + (pkin(2) * t5653 - t4329) * t4890) * t4900;
t5283 = 0.3e1 * t4923 + t4921 + t5789;
t6011 = t4594 * t4891;
t5621 = t4448 * t6011;
t5306 = t4866 * t5621;
t5544 = t4792 * t5926;
t5619 = t4448 * t5901;
t5749 = t4862 * t4812;
t5792 = t4922 / 0.3e1 + t4923;
t5793 = -t4921 / 0.3e1 - 0.2e1 / 0.3e1 * t4923;
t5794 = t4921 / 0.2e1 + t4923;
t5806 = -t4317 - t4392;
t5919 = t4862 * t4921;
t6069 = t4448 * t4859;
t6111 = (-pkin(2) * t4353 + t4890 * t5803) * t4862;
t6172 = pkin(1) * t4866;
t6192 = 0.2e1 * t4862;
t6193 = -0.2e1 * t4862;
t5396 = (-0.3e1 * ((t4862 - 0.4e1 / 0.3e1) * t5928 + ((-0.2e1 / 0.3e1 * t4781 + t5793) * t4862 + 0.4e1 / 0.3e1 * t4781 + t5792) * t4899 + (0.4e1 / 0.3e1 * t6163 - 0.2e1 / 0.3e1 * t4754) * pkin(6) * t5855) * t5623 + (-t5544 * t6095 - ((-t4339 + t6107) * t4900 - (-0.4e1 * t4755 + t5749) * t5306) * t6163 + (t4342 - t4345 - (-0.4e1 * t4733 * t5619 - t4891 * t5767) * t4594 * pkin(6) + (-0.2e1 * t4861 * t5234 - t6111 + (t4326 + t5799) * t6281) * pkin(2)) * t4899 - (t5060 - (t4865 + (t4832 - t5919) * t4890) * t5622) * t4891) * t4835 + (-(-0.3e1 * t4862 + 0.3e1) * t5928 * t4440 - (-t4862 * t5136 - 0.2e1 * t4756 * t5620 + (-t4395 + (t4326 + t5806) * t4891) * t6191) * t6163 + ((t4329 + ((t4245 - t4322) * t4890 - t5653) * pkin(2)) * t5901 - ((t4781 + t5794) * t6192 - 0.4e1 * t4781 - 0.2e1 * t4785 - t5283) * t4440) * t4899 + t5249 * t4862 * t6172 - 0.2e1 * t5128 + t4866 * (-pkin(2) * (-pkin(6) * t5197 - t4395) - (t5854 + t6188) * t5356)) * t4867 + t6173 * t4345 * t4857 + (t4245 * t4900 - (-t4812 - t4919 + t5749) * t5622) * t5750 + (t4345 + (t6111 + (-0.2e1 * (-pkin(6) * t4861 + t4763 * t4900) * t5622 + t5502) * t4890) * pkin(2)) * t4899 - t4734 * t5234 * t6193 + t4891 * t5060 - ((t4722 * t4891 + t4864) * t4890 + t4891 * t4865) * t5622) * t4595 * t6069;
t5925 = t4859 * t4863;
t5563 = t4657 * t5908;
t4461 = -t4657 * t6262 + t6216 * t4660 + t5563 * t4820;
t6065 = t4461 * t5152;
t4083 = -t5396 + t4116 - (t5377 + (-t5050 + t6065) * t5925) * t4594;
t4358 = t4361 ^ 2;
t6009 = t4595 * t4860;
t4352 = t4358 * t6009;
t4925 = 0.1e1 / pkin(2) ^ 2;
t4398 = t4406 ^ 2 * t4860 * t4925 / t4994 ^ 2;
t4251 = t4352 + t4398;
t5090 = t5341 * t4440;
t5042 = 0.2e1 * t5090;
t5666 = t4361 * t6069;
t5260 = 0.2e1 * t4900 * t5666;
t4198 = (-((pkin(6) * t5856 + t6154) * t4866 + pkin(6) * t5886) * t4440 - t5249) * t4594 * t5653;
t5425 = pkin(6) * t5524;
t5718 = pkin(6) * t5957;
t5790 = t4921 + t4923;
t5877 = t4867 * t4921;
t6086 = t4406 * t6278;
t6246 = t4595 * (((-t4899 * t4923 * t6095 + t5056) * t4867 + (-t5806 * t5856 + (-t6095 * t6142 + t6086) * t5921) * t6162 - (-(t5544 - t5919) * t4835 + 0.2e1 * t4733 * t5425 + t5926 * t5963 - t5919 + t4781 + t4785 + (-t4754 * t4835 + (t4756 * t4900 + 0.2e1 * (-t5557 - t5718) * t4891) * t4899) * pkin(2) + t5790) * t4440) * t4448 + (t4289 * t5926 - (-t4698 * t5744 + t5877) * t4440 + t5056) * t6093);
t4509 = -t4660 * t4813 + t4657 * t5982 + (-t4660 * t5849 - t5563) * pkin(2);
t4512 = t4657 * t4813 + t4660 * t5982 + (t4657 * t5849 - t5560) * pkin(2);
t6247 = t4594 * (t4509 * t5153 - t4512 * t5152);
t4104 = t4863 * t6247 + t4198 - t6246;
t5687 = t4104 * t5907;
t6115 = t4104 * t4900;
t5778 = 0.2e1 * t6115;
t6152 = pkin(5) * t4866;
t6167 = pkin(1) * t4900;
t6270 = pkin(1) * t5778 - (pkin(5) * t4083 * t4891 + pkin(1) * t4087) * t4866 - pkin(5) * (t4251 * t5901 + t4835 * t5042) + 0.2e1 * (-t4322 + t5238) * t4440 + (-t4595 * t5260 * t6152 + t4083 * t6167 - t4251 * t4820 - t4919 * t5687) * t4867;
t6148 = pkin(6) * t4856;
t4709 = t4762 - t6148;
t6016 = t4591 * t4897;
t5625 = t4447 * t6016;
t5309 = t4888 * t5625;
t5167 = t4751 * t5309;
t5250 = pkin(6) * t5361 - t5656;
t5525 = t4866 * t5881;
t5627 = t4447 * t6018;
t5976 = t6253 * t4866;
t4115 = (-(-t5976 * t6096 + ((t4822 - 0.2e1 * t4811 + t4920) * t5917 + pkin(5) * t5401) * t4447) * t4591 * t4852 + (t5250 * t4867 - (-t4447 * t4750 * t5525 + (((-t6148 / 0.2e1 + t4762) * t6201 + t4709) * t4447 - t4679 * t6096) * t4887) * t4591) * t4896 + t4835 * t5167 + (-pkin(1) * t5199 + t4712 * t5627) * t4867 + ((-t4244 + t4388) * t4888 - t4347) * t4866 - t5167) * t6277 * t5657;
t5561 = t4659 * t5910;
t4704 = -pkin(5) + t5757;
t5492 = t4750 - 0.2e1 * t6164;
t6217 = -t4750 * t4888 + (-pkin(6) * t5511 - t4704 * t4896) * t5917 + t5752 + (pkin(6) * t5851 + t4888 * t5492) * t4835;
t6156 = pkin(2) * t4897;
t6261 = t4867 * (t4852 * t6156 + t4896 * t6253) + t4887 * t5429 - t4896 * t5243;
t4457 = t6217 * t4656 + t4659 * t6261 - t5561 * t4819;
t5051 = t4457 * t5155;
t5931 = t4853 * t4897;
t5576 = t4591 * t5931;
t5359 = t4360 * t5576;
t4321 = pkin(1) * t5359;
t5129 = pkin(6) * t4750 * t5309;
t6143 = pkin(6) * t4887;
t5235 = t5627 * t6143;
t5969 = t4791 * t4835;
t5438 = -t4856 + t5969;
t4731 = t4810 + t4910;
t5558 = t4731 * t5917;
t5938 = t4851 * t4923;
t5958 = t4835 * t4897;
t5378 = ((-t4438 - (t4447 * t5438 - t5668) * t4591) * t5938 - (-t4321 * t4867 - t4866 * t5815 - ((-t4811 + pkin(1)) * t5958 + (-0.2e1 * t5558 + t6137) * t4888) * t4438) * t6164 + ((t4762 * t4867 + t5725) * t4241 - (-(t4784 - t5499) * t4835 + (-pkin(6) * t4751 + t4780 * t4888) * t5525 + (-t4835 * t4856 + t6176) * pkin(2) * t4750) * t4438) * t4896 + t4835 * t5129 + t5235 * t5247 - t5129 - t5250 * t5976) * t4360 * t6033;
t5932 = t4853 * t4888;
t5577 = t4591 * t5932;
t5360 = t4360 * t5577;
t4320 = pkin(1) * t5360;
t4325 = -t4336 / 0.2e1;
t4344 = t4923 * t4351;
t4592 = 0.1e1 / t5125 ^ 2;
t5061 = (-pkin(2) * t4244 + (pkin(2) * t5656 - t4328) * t4887) * t4897;
t6017 = t4591 * t4888;
t5626 = t4447 * t6017;
t5311 = t4866 * t5626;
t5545 = t4791 * t5936;
t5624 = t4447 * t5903;
t5751 = t4856 * t4810;
t5807 = -t4316 - t4391;
t5929 = t4856 * t4921;
t6070 = t4447 * t4853;
t6112 = (-pkin(2) * t4351 + t4887 * t5804) * t4856;
t6194 = 0.2e1 * t4856;
t6195 = -0.2e1 * t4856;
t5397 = (-0.3e1 * ((t4856 - 0.4e1 / 0.3e1) * t5938 + ((-0.2e1 / 0.3e1 * t4779 + t5793) * t4856 + 0.4e1 / 0.3e1 * t4779 + t5792) * t4896 + (0.4e1 / 0.3e1 * t6164 - 0.2e1 / 0.3e1 * t4750) * pkin(6) * t5860) * t5628 + (-t5545 * t6098 - ((-t4347 + t6108) * t4897 - (-0.4e1 * t4751 + t5751) * t5311) * t6164 + (t4341 - t4344 - (-0.4e1 * t4731 * t5624 - t4888 * t5768) * t4591 * pkin(6) + (-0.2e1 * t4855 * t5235 - t6112 + (t4325 + t5800) * t6282) * pkin(2)) * t4896 - (t5061 - (t4865 + (t4832 - t5929) * t4887) * t5627) * t4888) * t4835 + (-(-0.3e1 * t4856 + 0.3e1) * t5938 * t4438 - (-t4856 * t5137 - 0.2e1 * t4752 * t5625 + (-t4394 + (t4325 + t5807) * t4888) * t6191) * t6164 + ((t4328 + ((t4244 - t4320) * t4887 - t5656) * pkin(2)) * t5903 - ((t4779 + t5794) * t6194 - 0.4e1 * t4779 - 0.2e1 * t4784 - t5283) * t4438) * t4896 + t5250 * t4856 * t6172 - 0.2e1 * t5129 + t4866 * (-pkin(2) * (-pkin(6) * t5200 - t4394) - (t5859 + t6188) * t5361)) * t4867 + t6176 * t4344 * t4851 + (t4244 * t4897 - (-t4810 - t4919 + t5751) * t5627) * t5752 + (t4344 + (t6112 + (-0.2e1 * (-pkin(6) * t4855 + t4762 * t4897) * t5627 + t5503) * t4887) * pkin(2)) * t4896 - t4732 * t5235 * t6195 + t4888 * t5061 - ((t4722 * t4888 + t4864) * t4887 + t4888 * t4865) * t5627) * t4592 * t6070;
t5935 = t4853 * t4863;
t5564 = t4656 * t5910;
t4460 = -t4656 * t6261 + t6217 * t4659 + t5564 * t4819;
t6066 = t4460 * t5154;
t4082 = -t5397 + t4115 - (t5378 + (-t5051 + t6066) * t5935) * t4591;
t4357 = t4360 ^ 2;
t6015 = t4592 * t4854;
t4350 = t4357 * t6015;
t4397 = t4405 ^ 2 * t4854 * t4925 / t4995 ^ 2;
t4250 = t4350 + t4397;
t5094 = t5344 * t4438;
t5043 = 0.2e1 * t5094;
t5671 = t4360 * t6070;
t5263 = 0.2e1 * t4897 * t5671;
t4197 = (-((pkin(6) * t5861 + t6156) * t4866 + pkin(6) * t5888) * t4438 - t5250) * t4591 * t5656;
t5426 = pkin(6) * t5525;
t5719 = pkin(6) * t5958;
t6087 = t4405 * t6277;
t6248 = t4592 * (((-t4896 * t4923 * t6098 + t5057) * t4867 + (-t5807 * t5861 + (-t6098 * t6143 + t6087) * t5931) * t6162 - (-(t5545 - t5929) * t4835 + 0.2e1 * t4731 * t5426 + t5936 * t5964 - t5929 + t4779 + t4784 + (-t4750 * t4835 + (t4752 * t4897 + 0.2e1 * (-t5558 - t5719) * t4888) * t4896) * pkin(2) + t5790) * t4438) * t4447 + (t4286 * t5936 - (-t4697 * t5745 + t5877) * t4438 + t5057) * t6096);
t4508 = -t4659 * t4811 + t4656 * t5983 + (-t4659 * t5851 - t5564) * pkin(2);
t4511 = t4656 * t4811 + t4659 * t5983 + (t4656 * t5851 - t5561) * pkin(2);
t6249 = t4591 * (t4508 * t5155 - t4511 * t5154);
t4103 = t4863 * t6249 + t4197 - t6248;
t5689 = t4103 * t5909;
t6119 = t4103 * t4897;
t5779 = 0.2e1 * t6119;
t6168 = pkin(1) * t4897;
t6269 = pkin(1) * t5779 - (pkin(5) * t4082 * t4888 + pkin(1) * t4086) * t4866 - pkin(5) * (t4250 * t5903 + t4835 * t5043) + 0.2e1 * (-t4320 + t5239) * t4438 + (-t4592 * t5263 * t6152 + t4082 * t6168 - t4250 * t4819 - t4919 * t5689) * t4867;
t6149 = pkin(6) * t4850;
t4708 = t4761 - t6149;
t6022 = t4588 * t4894;
t5630 = t4446 * t6022;
t5314 = t4885 * t5630;
t5169 = t4747 * t5314;
t5251 = pkin(6) * t5366 - t5659;
t5526 = t4866 * t5883;
t5632 = t4446 * t6024;
t5979 = t6254 * t4866;
t4114 = (-(-t5979 * t6099 + ((t4821 - 0.2e1 * t4809 + t4920) * t5917 + pkin(5) * t5402) * t4446) * t4588 * t4846 + (t5251 * t4867 - (-t4446 * t4746 * t5526 + (((-t6149 / 0.2e1 + t4761) * t6201 + t4708) * t4446 - t4678 * t6099) * t4884) * t4588) * t4893 + t4835 * t5169 + (-pkin(1) * t5202 + t4711 * t5632) * t4867 + ((-t4243 + t4387) * t4885 - t4346) * t4866 - t5169) * t6276 * t5660;
t5562 = t4658 * t5912;
t4703 = -pkin(5) + t5758;
t5493 = t4746 - 0.2e1 * t6165;
t6218 = -t4746 * t4885 + (-pkin(6) * t5512 - t4703 * t4893) * t5917 + t5754 + (pkin(6) * t5853 + t4885 * t5493) * t4835;
t6158 = pkin(2) * t4894;
t6260 = t4867 * (t4846 * t6158 + t4893 * t6254) + t4884 * t5430 - t4893 * t5244;
t4456 = t6218 * t4655 + t4658 * t6260 - t5562 * t4818;
t5052 = t4456 * t5157;
t5941 = t4847 * t4894;
t5581 = t4588 * t5941;
t5364 = t4359 * t5581;
t4319 = pkin(1) * t5364;
t5130 = pkin(6) * t4746 * t5314;
t6144 = pkin(6) * t4884;
t5236 = t5632 * t6144;
t5970 = t4790 * t4835;
t5439 = -t4850 + t5970;
t4729 = t4808 + t4910;
t5559 = t4729 * t5917;
t5948 = t4845 * t4923;
t5959 = t4835 * t4894;
t5379 = ((-t4436 - (t4446 * t5439 - t5673) * t4588) * t5948 - (-t4319 * t4867 - t4866 * t5816 - ((-t4809 + pkin(1)) * t5959 + (-0.2e1 * t5559 + t6138) * t4885) * t4436) * t6165 + ((t4761 * t4867 + t5726) * t4240 - (-(t4783 - t5500) * t4835 + (-pkin(6) * t4747 + t4778 * t4885) * t5526 + (-t4835 * t4850 + t6179) * pkin(2) * t4746) * t4436) * t4893 + t4835 * t5130 + t5236 * t5248 - t5130 - t5251 * t5979) * t4359 * t6035;
t5942 = t4847 * t4885;
t5582 = t4588 * t5942;
t5365 = t4359 * t5582;
t4318 = pkin(1) * t5365;
t4324 = -t4334 / 0.2e1;
t4343 = t4923 * t4349;
t4589 = 0.1e1 / t5126 ^ 2;
t5062 = (-pkin(2) * t4243 + (t5659 * pkin(2) - t4327) * t4884) * t4894;
t6023 = t4588 * t4885;
t5631 = t4446 * t6023;
t5316 = t4866 * t5631;
t5546 = t4790 * t5946;
t5629 = t4446 * t5905;
t5753 = t4850 * t4808;
t5808 = -t4315 - t4390;
t5939 = t4850 * t4921;
t6071 = t4446 * t4847;
t6113 = (-pkin(2) * t4349 + t4884 * t5805) * t4850;
t6196 = 0.2e1 * t4850;
t6197 = -0.2e1 * t4850;
t5398 = (-0.3e1 * ((t4850 - 0.4e1 / 0.3e1) * t5948 + ((-0.2e1 / 0.3e1 * t4777 + t5793) * t4850 + 0.4e1 / 0.3e1 * t4777 + t5792) * t4893 + (0.4e1 / 0.3e1 * t6165 - 0.2e1 / 0.3e1 * t4746) * pkin(6) * t5865) * t5633 + (-t5546 * t6101 - ((-t4346 + t6109) * t4894 - (-0.4e1 * t4747 + t5753) * t5316) * t6165 + (t4340 - t4343 - (-0.4e1 * t4729 * t5629 - t4885 * t5769) * t4588 * pkin(6) + (-0.2e1 * t4849 * t5236 - t6113 + (t4324 + t5801) * t6283) * pkin(2)) * t4893 - (t5062 - (t4865 + (t4832 - t5939) * t4884) * t5632) * t4885) * t4835 + (-(-0.3e1 * t4850 + 0.3e1) * t5948 * t4436 - (-t4850 * t5138 - 0.2e1 * t4748 * t5630 + (-t4393 + (t4324 + t5808) * t4885) * t6191) * t6165 + ((t4327 + ((t4243 - t4318) * t4884 - t5659) * pkin(2)) * t5905 - ((t4777 + t5794) * t6196 - 0.4e1 * t4777 - 0.2e1 * t4783 - t5283) * t4436) * t4893 + t5251 * t4850 * t6172 - 0.2e1 * t5130 + t4866 * (-pkin(2) * (-pkin(6) * t5203 - t4393) - (t5864 + t6188) * t5366)) * t4867 + t6179 * t4343 * t4845 + (t4243 * t4894 - (-t4808 - t4919 + t5753) * t5632) * t5754 + (t4343 + (t6113 + (-0.2e1 * (-pkin(6) * t4849 + t4761 * t4894) * t5632 + t5504) * t4884) * pkin(2)) * t4893 - t4730 * t5236 * t6197 + t4885 * t5062 - ((t4722 * t4885 + t4864) * t4884 + t4885 * t4865) * t5632) * t4589 * t6071;
t5945 = t4847 * t4863;
t5565 = t4655 * t5912;
t4459 = -t4655 * t6260 + t6218 * t4658 + t5565 * t4818;
t6067 = t4459 * t5156;
t4081 = -t5398 + t4114 - (t5379 + (-t5052 + t6067) * t5945) * t4588;
t4356 = t4359 ^ 2;
t6021 = t4589 * t4848;
t4348 = t4356 * t6021;
t4396 = t4404 ^ 2 * t4848 * t4925 / t4996 ^ 2;
t4249 = t4348 + t4396;
t5098 = t5347 * t4436;
t5044 = 0.2e1 * t5098;
t5676 = t4359 * t6071;
t5266 = 0.2e1 * t4894 * t5676;
t4196 = (-((pkin(6) * t5866 + t6158) * t4866 + pkin(6) * t5890) * t4436 - t5251) * t4588 * t5659;
t5427 = pkin(6) * t5526;
t5720 = pkin(6) * t5959;
t6088 = t4404 * t6276;
t6250 = t4589 * (((-t4893 * t4923 * t6101 + t5058) * t4867 + (-t5808 * t5866 + (-t6101 * t6144 + t6088) * t5941) * t6162 - (-(t5546 - t5939) * t4835 + 0.2e1 * t4729 * t5427 + t5946 * t5965 - t5939 + t4777 + t4783 + (-t4746 * t4835 + (t4748 * t4894 + 0.2e1 * (-t5559 - t5720) * t4885) * t4893) * pkin(2) + t5790) * t4436) * t4446 + (t4283 * t5946 - (-t4696 * t5746 + t5877) * t4436 + t5058) * t6099);
t4507 = -t4658 * t4809 + t4655 * t5984 + (-t4658 * t5853 - t5565) * pkin(2);
t4510 = t4655 * t4809 + t4658 * t5984 + (t4655 * t5853 - t5562) * pkin(2);
t6251 = t4588 * (t4507 * t5157 - t4510 * t5156);
t4102 = t4863 * t6251 + t4196 - t6250;
t5691 = t4102 * t5911;
t6123 = t4102 * t4894;
t5780 = 0.2e1 * t6123;
t6169 = pkin(1) * t4894;
t6268 = pkin(1) * t5780 - (pkin(5) * t4081 * t4885 + pkin(1) * t4085) * t4866 - pkin(5) * (t4249 * t5905 + t4835 * t5044) + 0.2e1 * (-t4318 + t5240) * t4436 + (-t4589 * t5266 * t6152 + t4081 * t6169 - t4249 * t4818 - t4919 * t5691) * t4867;
t6031 = t4583 * t4838;
t5682 = t4355 * t6031;
t4304 = pkin(6) * t5682;
t5602 = t5163 * t5917;
t4481 = -t5453 - t5602;
t4691 = -t6140 * t6187 + pkin(1);
t4742 = pkin(1) + 0.2e1 * t6140;
t4804 = pkin(1) * t4879;
t4744 = t4804 + pkin(6);
t5704 = pkin(5) + t6141;
t5054 = t5163 * t5704 * t5967;
t5276 = t4867 * t5704;
t5146 = t4903 * t5276;
t5407 = t4804 - t5709;
t5415 = pkin(6) * t5602;
t6161 = pkin(2) * t4881;
t5783 = pkin(6) * t6161;
t4400 = (t4498 * t4866 * t5436 + 0.2e1 * t4481 * t5783) * t4841 + (-t4481 * t4879 * t5955 + ((t4498 * t4742 - t5146) * t4866 + t5054) * t6161 + (t4691 * t4903 - t4879 * t5415) * pkin(6)) * t4882 - (t4903 * t5407 - t5415) * t6161 + ((t4498 * t4744 - t4879 * t5146) * t4866 + t4879 * t5054) * pkin(6);
t5950 = t4838 * t4924;
t5590 = t6279 * t5950;
t5350 = t4400 * t5590;
t4380 = pkin(1) * t5350;
t4383 = t4400 * t6044;
t6150 = pkin(6) * t4841;
t4706 = t4744 - t6150;
t4805 = pkin(1) * t4841;
t5708 = pkin(1) + t6140;
t4707 = t4805 - t5708;
t4741 = pkin(5) * t4878 + pkin(2);
t5913 = t4866 * t4882;
t5717 = pkin(5) * t5913;
t4667 = t5717 + t5766;
t4647 = t4667 * t6161;
t5891 = t4867 * t4882;
t4718 = pkin(6) * t5891;
t4561 = 0.1e1 / (-pkin(1) * t4718 + t4647 - t5151);
t4839 = 0.1e1 / t4881 ^ 2;
t4954 = t4839 * t4561;
t4952 = t4400 * t4954;
t5150 = t5704 * t4425;
t5030 = t5150 * t5872;
t5278 = t4866 * t5708;
t5530 = t4866 * t5891;
t5646 = t4866 * t4425;
t5703 = t4879 * t6187;
t6105 = t4355 * t4583;
t6151 = pkin(5) * t4882;
t6263 = t4744 * t4867 + t5717;
t4112 = (-(-t5278 * t6103 + ((t4805 + t4920 - 0.2e1 * t6140) * t5917 + t5703 * t6151) * t4442) * t4583 * t4837 + (-t4383 * t4867 - (-t4442 * t4741 * t5530 + (((-t6150 / 0.2e1 + t4744) * t6201 + t4706) * t4442 - t6263 * t6103) * t4878) * t4583) * t4881 + t4835 * t5030 + (-t4380 * t4882 + t4707 * t5646) * t4867 + (-t4304 * t4879 + (-pkin(1) * t6105 - (-pkin(5) * t4924 - t4878) * t6279 * t4879 * t4400) * t4838) * t4866 - t5030) * t6279 * t4952;
t5953 = t4838 * t4878;
t5680 = t4355 * t5953;
t5370 = t4583 * t5680;
t5229 = pkin(6) * t5370;
t4228 = -t4383 + t5229;
t5292 = t4878 * t4383;
t4229 = t4304 - t5292;
t4727 = t4910 + t6141;
t4775 = pkin(1) * t6140;
t4953 = t4355 * t4954;
t6030 = t4583 * t4879;
t5645 = t4442 * t6030;
t5330 = t4741 * t5645;
t5131 = t5330 * t6139;
t5642 = t4442 * t5916;
t5327 = t4583 * t5642;
t5190 = t4867 * t5327;
t5951 = t4838 * t4882;
t5678 = t4355 * t5951;
t5432 = pkin(1) * t5678;
t5971 = t4786 * t4835;
t5440 = -t4841 + t5971;
t5531 = t4866 * t5893;
t5457 = 0.2e1 * t5531;
t4773 = pkin(5) * t6141;
t5501 = t4773 + t5788;
t6102 = t4355 * t4867;
t5681 = t4838 * t6102;
t4299 = pkin(2) * t5370;
t4305 = pkin(5) * t5682;
t4379 = pkin(6) * t5350;
t5809 = -t4305 - t4379;
t4201 = -t4299 + t5809;
t5817 = t4201 * t4879 - t4380;
t4937 = t4881 * t4837;
t5847 = t4923 * t4937;
t4946 = ((-t4425 - (t4442 * t5440 - t5681) * t4583) * t5847 + (t4866 * t5817 - (-t4867 * t5432 + (t4727 * t5457 + (-(pkin(1) - t6140) * t4835 - t6140) * t4882) * t4442) * t4583) * t6166 + (t6263 * t4229 - (-(t4775 - t5501) * t4835 + (-pkin(6) * t5704 + t4774 * t4879) * t5530 + (-t4835 * t4841 + t6183) * pkin(2) * t4741) * t4425) * t4881 + t4835 * t5131 + pkin(6) * t4707 * t5190 - t5131 - t4228 * t5278) * t4953;
t5566 = t4654 * t5916;
t4624 = pkin(6) * t5870 + (t4741 - 0.2e1 * t6166) * t4879;
t4702 = -pkin(5) + t5759;
t6219 = -t4741 * t4879 + (-pkin(6) * t5513 - t4702 * t4881) * t5917 + t5755 + t4624 * t4835;
t6160 = pkin(2) * t4882;
t6259 = t4867 * (t4837 * t6160 + t4881 * t5708) + t4878 * t5431 - t4881 * t5245;
t4453 = t6219 * t4653 + t4654 * t6259 - t5566 * t4804;
t5053 = t4453 * t5159;
t5241 = pkin(5) * t5350;
t4230 = t4304 - t5241;
t4382 = pkin(2) * t4383;
t4231 = pkin(5) * t4304 - t4382;
t5952 = t4838 * t4879;
t5586 = t4583 * t5952;
t5369 = t4355 * t5586;
t4300 = pkin(1) * t5369;
t4306 = t4921 * t5682;
t4307 = t4923 * t5682;
t5206 = t4879 * t5350;
t4378 = pkin(1) * t5206;
t4728 = t6140 / 0.2e1 + pkin(1);
t4840 = t4882 * t4841;
t5207 = t4866 * t5350;
t5139 = pkin(1) * t5207;
t5228 = pkin(2) * t4230 + t4231 * t4878;
t5237 = pkin(6) * t5327;
t5641 = t4442 * t5915;
t5326 = t4583 * t5641;
t5505 = t4378 - t5809;
t5547 = t4786 * t5955;
t5640 = t4442 * t5913;
t4584 = 0.1e1 / t5127 ^ 2;
t6079 = t4442 * t4584;
t5643 = t4838 * t6079;
t6029 = t4583 * t4882;
t5644 = t4442 * t6029;
t5679 = t4355 * t5952;
t5802 = -t4379 - t4305 / 0.2e1;
t5871 = t4879 * t4921;
t5949 = t4841 * t4921;
t6110 = t4230 * t4879;
t6114 = (-pkin(2) * t5682 + t4878 * t5809) * t4841;
t6198 = 0.2e1 * t4841;
t6199 = -0.2e1 * t4841;
t5399 = (-0.3e1 * ((t4841 - 0.4e1 / 0.3e1) * t5847 + ((-0.2e1 / 0.3e1 * t4773 + t5793) * t4841 + 0.4e1 / 0.3e1 * t4773 + t5792) * t4881 + (0.4e1 / 0.3e1 * t6166 - 0.2e1 / 0.3e1 * t4741) * pkin(6) * t5872) * t4834 * t4425 + (-t5547 * t6105 - ((-pkin(1) * t5682 + t6110) * t4882 - (-0.4e1 * pkin(5) + (t4841 - 0.4e1) * t6141) * t5326) * t6166 + (t4306 - t4307 - (-pkin(1) * t5679 - 0.4e1 * t4727 * t5640) * t4583 * pkin(6) + (-0.2e1 * t4840 * t5237 - t6114 + (-t4378 + t5802) * t6284) * pkin(2)) * t4881 + (t5228 * t4882 - (-t4865 + (-t4832 + t5949) * t4878) * t5646) * t4879) * t4835 + (-(-0.3e1 * t4841 + 0.3e1) * t5847 * t4425 - (-t4841 * t5139 - 0.2e1 * t4742 * t5644 + (-t4380 + (-t4299 + t5802) * t4879) * t6191) * t6166 + (((t4230 - t4300) * t6141 + t4231) * t5913 - ((t4773 + t5794) * t6198 - 0.4e1 * t4773 - 0.2e1 * t4775 - t5283) * t4425) * t4881 + t4228 * t4841 * t6172 - 0.2e1 * t5131 - (pkin(2) * (-pkin(6) * t5206 - t4380) - (-t5871 - t6188) * t5370) * t4866) * t4867 + t6183 * t4307 * t4937 + (t4230 * t4882 - (-t4919 + t5981) * t5646) * t5755 + (t4307 + (t6114 + ((-pkin(6) * t4840 + t4744 * t4882) * t4866 * t5486 + t5505) * t4878) * pkin(2)) * t4881 - t4728 * t5237 * t6199 - t5228 * t5872 - ((t4722 * t4879 + t4864) * t4878 + t4879 * t4865) * t5646) * t5643;
t5954 = t4838 * t4863;
t5567 = t4653 * t5916;
t4454 = -t4653 * t6259 + t6219 * t4654 + t5567 * t4804;
t6068 = t4454 * t5158;
t4080 = -t5399 + t4112 - (t4946 + (-t5053 + t6068) * t5954) * t4583;
t5506 = t6103 / 0.2e1;
t4298 = t4583 * t4867 * t5506;
t6032 = t4583 * t4835;
t5541 = t4442 * t6032;
t4261 = -t5541 - t4298 + t4425 / 0.2e1;
t4303 = 0.2e1 * t4304;
t5277 = t4866 * t5704;
t5149 = t4879 * t5277;
t4623 = t4880 * t4744 - t4883 * t5149;
t4635 = t4880 * t4742 - t4883 * t5277;
t5148 = t4880 * t5277;
t4973 = t4744 * t4883 + t4879 * t5148;
t4997 = t4742 * t4883 + t5148;
t5219 = t5436 * t4654;
t4465 = t6271 + ((t4793 * t4635 - t4797 * t4997) * t6161 + t5219 * t5893) * t4882 + (t4793 * t4623 - t4797 * t4973 + t5423) * pkin(6);
t5123 = t5436 * t5893;
t5424 = t4653 * t5716;
t4466 = (t5424 * t6213 + t5219) * t4841 + ((t4635 * t4797 + t4793 * t4997) * t6161 - t4653 * t5123) * t4882 + (t4623 * t4797 + t4793 * t4973 - t5424) * pkin(6);
t4745 = 0.2e1 * t4773;
t5049 = t4866 * t5159;
t5055 = t4867 * t5150;
t5059 = pkin(6) * t5292 - t4306;
t5140 = t5292 * t6171;
t5147 = t4882 * t5277;
t5275 = t5708 * t4867;
t5288 = t4383 / 0.2e1;
t5297 = t4837 * t5542;
t5329 = t5967 * t4425;
t5403 = t6187 * t4425;
t5515 = t4583 * t5895;
t5416 = pkin(6) * t5515;
t5540 = t4837 * t5876;
t5543 = t4881 * t5967;
t5770 = pkin(1) * t6103;
t5900 = t4866 * t4924;
t6043 = t6279 * t4924;
t6245 = (t4834 * t5704 - t5276) * t5486;
t6255 = 0.2e1 * t4879;
t4084 = t6043 * (t4838 * (-t4465 * t5158 * t5918 - ((t4908 + t5955) * t4840 * t5329 * t5747 + (pkin(2) * ((t4303 - t5241) * t6141 - t4382 + (0.4e1 * t5055 + 0.2e1 * t4305 + t4379) * pkin(6)) * t5543 + (t4229 * t4772 - (t5540 * t5770 + ((t6215 + (-0.3e1 * t4835 + 0.3e1) * t6140) * t5955 + (t4728 * t6214 + t4835 * t5871) * pkin(6)) * t4442) * t4583) * t4866) * t4841 + (t4261 * t4937 * t5771 + (-t5055 * t6255 + t5817) * t5297 + ((-(t4303 - t5292) * t4804 + t5059) * t4867 - ((t4773 + t5497) * t6201 + t4745 + 0.4e1 * t4775 + t5284) * t4425) * t5747 + (t6187 * (t4230 * t6141 + t4231) - pkin(6) * t6245) * t6140) * t4882 + t4261 * t5494 * t5956 + ((-t4299 - t5505) * t4835 + t4378 - t4201 + t6245) * t5783 + ((-pkin(1) * t4229 + t4879 * t5059) * t4867 - (t4864 + ((t4773 + t5791) * t6201 + t4745 + t4722) * t4879) * t4425) * t6146) * t4425) - ((-t4882 * t5329 * t5708 - t5139) * t6166 + (-t5501 * t4841 * t5329 - pkin(2) * (t4383 + (-t4744 * t5515 - t4230) * t4878) * t5913 - t4879 * t5140 - t4744 * pkin(6) * t5403) * t4881 - (t5190 * t4805 + (-t4924 * t5140 + t5330 * t6187) * t4882 + t4866 * (t4879 * t4383 + (-t6110 - (t4442 * t5275 + t5770) * t4583) * t4878)) * pkin(6)) * t4952) + (t4927 * t5164 * t4937 * t6029 + ((pkin(6) * t5164 - t4442 * t5147) * t4879 + (t4841 * t5895 + t6103) * pkin(1)) * t4583 * t5955 - 0.2e1 * ((t4878 * t5288 - t4304 / 0.2e1) * t4882 - ((t5704 * t4841 - t6141 / 0.2e1 - pkin(5) / 0.2e1) * t4866 + (t4804 + t6189) * t5891) * t4425) * t5783 + (-t5416 * t4805 + t5030 * t6146 + (t4229 + t5416) * t5708) * pkin(6)) * t4583 * t4953 * t5900 - t4466 * t4863 * t5049 * t5590;
t4354 = t4355 ^ 2;
t6028 = t4584 * t4839;
t4308 = t4354 * t6028;
t4381 = t4400 ^ 2 * t4839 * t4925 / t4951 ^ 2;
t4232 = t4308 + t4381;
t5102 = t5350 * t4425;
t5045 = 0.2e1 * t5102;
t5145 = t4355 * t5643 * t6190;
t4505 = -t4654 * t6140 + t4653 * t5985 + (-t4654 * t5870 - t5567) * pkin(2);
t4506 = t4653 * t6140 + t4654 * t5985 + (t4653 * t5870 - t5566) * pkin(2);
t4972 = t4505 * t5159 - t4506 * t5158;
t5373 = (-t4383 - (-pkin(6) * t5680 + (-(pkin(6) * t5873 + t6160) * t4866 - pkin(6) * t5894) * t4442) * t4583) * t4383;
t5684 = t4881 * t6105;
t6244 = (((-t4923 * t5684 + t5059) * t4867 + (-(-t4299 - t4379) * t5737 - (pkin(2) * t5229 - t4382) * t4882) * t4866 - (-(t5547 - t5949) * t4835 + t4727 * t5530 * t6213 + t5955 * t5966 - t5949 + t4773 + t4775 + (-t4741 * t4835 + (t4742 * t4882 + (-t4727 * t5917 - t4835 * t6139) * t6255) * t4881) * pkin(2) + t5790) * t4425) * t4442 + (-(-pkin(2) * t4695 * t5642 + t4442 * t5877 + t5164 * t5955) * t4583 + t5059) * t6103) * t4584;
t4097 = -t6244 - (-t4863 * t4972 + t5373) * t4583;
t5693 = t4097 * t5915;
t6127 = t4097 * t4882;
t5781 = 0.2e1 * t6127;
t6170 = pkin(1) * t4882;
t6267 = pkin(1) * t5781 - (pkin(5) * t4080 * t4879 + pkin(1) * t4084) * t4866 - pkin(5) * (t4232 * t5913 + t4835 * t5045) - (-t4300 + t5241) * t5486 + (t4080 * t6170 - t4232 * t4804 - t4919 * t5693 - t5145 * t6151) * t4867;
t6258 = 0.4e1 * t4769;
t6257 = 0.4e1 * t4770;
t6256 = 0.4e1 * t4771;
t4419 = t4583 * t5640;
t4362 = t4924 * t5288 - t4419;
t6208 = -0.2e1 * t4362;
t4426 = t4588 * t5629;
t4366 = t4924 * t5287 - t4426;
t6207 = -0.2e1 * t4366;
t4427 = t4591 * t5624;
t4367 = t4924 * t5286 - t4427;
t6206 = -0.2e1 * t4367;
t4428 = t4594 * t5619;
t4368 = t4924 * t5285 - t4428;
t6205 = -0.2e1 * t4368;
t6200 = 0.2e1 * t4835;
t6186 = t6200 - 0.2e1;
t6185 = 0.2e1 * t4837 - 0.1e1;
t6184 = 0.4e1 * t4837 - 0.2e1;
t6182 = t6198 - 0.1e1;
t6181 = 0.2e1 * t4846 - 0.1e1;
t6180 = 0.4e1 * t4846 - 0.2e1;
t6178 = 0.2e1 * t4852 - 0.1e1;
t6177 = 0.4e1 * t4852 - 0.2e1;
t6175 = 0.2e1 * t4858 - 0.1e1;
t6174 = 0.4e1 * t4858 - 0.2e1;
t4076 = t4097 * t5913 - t4084;
t6134 = t4076 * t4882;
t4077 = t4102 * t5905 - t4085;
t6133 = t4077 * t4894;
t4078 = t4103 * t5903 - t4086;
t6132 = t4078 * t4897;
t4079 = t4104 * t5901 - t4087;
t6131 = t4079 * t4900;
t5730 = pkin(5) * t5915;
t4666 = pkin(1) * t5891 - t5730;
t6130 = t4097 * t4666;
t6129 = t4097 * t4667;
t4836 = t4879 ^ 2;
t6128 = t4097 * t4836;
t5729 = pkin(5) * t5911;
t4674 = pkin(1) * t5883 - t5729;
t6126 = t4102 * t4674;
t6125 = t4102 * t4678;
t4842 = t4885 ^ 2;
t6124 = t4102 * t4842;
t5728 = pkin(5) * t5909;
t4675 = pkin(1) * t5881 - t5728;
t6122 = t4103 * t4675;
t6121 = t4103 * t4679;
t4843 = t4888 ^ 2;
t6120 = t4103 * t4843;
t5727 = pkin(5) * t5907;
t4676 = pkin(1) * t5879 - t5727;
t6118 = t4104 * t4676;
t6117 = t4104 * t4677;
t4844 = t4891 ^ 2;
t6116 = t4104 * t4844;
t6106 = t4355 * t4442;
t6104 = t4355 * t4584;
t6100 = t4359 * t4589;
t6097 = t4360 * t4592;
t6094 = t4361 * t4595;
t4364 = -t4419 + t5350;
t6092 = t4364 * t4442;
t4370 = -t4426 + t5347;
t6091 = t4370 * t4446;
t4372 = -t4427 + t5344;
t6090 = t4372 * t4447;
t4374 = -t4428 + t5341;
t6089 = t4374 * t4448;
t4764 = t4835 - 0.1e1 / 0.2e1;
t5875 = t4878 * t4879;
t5523 = t4866 * t5875;
t4652 = t5523 - t5892;
t5993 = t4652 * t4882;
t4521 = (-t4741 * t5967 + t4764 * t5787) * t4879 + (pkin(6) * t5993 + (t4841 * t6141 - 0.2e1 * t4727) * t5914) * t4867;
t4529 = (-pkin(2) * t5993 + t5275) * t4881 - t4706 * t5916;
t4473 = t4521 * t4883 + t4529 * t4880;
t4474 = -t4521 * t4880 + t4529 * t4883;
t4411 = (t5159 * (-t4473 * t4793 + t4474 * t4797) + t5158 * (t4473 * t4797 + t4474 * t4793)) * t6044;
t6085 = t4411 * t4881;
t5863 = t4887 * t4888;
t5519 = t4866 * t5863;
t4662 = t5519 - t5882;
t5991 = t4662 * t4897;
t4523 = (-t4750 * t5967 + t4764 * t5785) * t4888 + (pkin(6) * t5991 + (-0.2e1 * t4731 + t5751) * t5904) * t4867;
t4531 = (-pkin(2) * t5991 + t4867 * t6253) * t4896 - t4709 * t5910;
t4476 = t4523 * t4898 + t4531 * t4889;
t4479 = -t4523 * t4889 + t4531 * t4898;
t4412 = (t5155 * (-t4476 * t4795 + t4479 * t4799) + t5154 * (t4476 * t4799 + t4479 * t4795)) * t6040;
t6084 = t4412 * t4896;
t5858 = t4890 * t4891;
t5517 = t4866 * t5858;
t4663 = t5517 - t5880;
t5990 = t4663 * t4900;
t4524 = (-t4754 * t5967 + t4764 * t5784) * t4891 + (pkin(6) * t5990 + (-0.2e1 * t4733 + t5749) * t5902) * t4867;
t4532 = (-pkin(2) * t5990 + t4867 * t6252) * t4899 - t4710 * t5908;
t4477 = t4524 * t4901 + t4532 * t4892;
t4480 = -t4524 * t4892 + t4532 * t4901;
t4413 = (t5153 * (-t4477 * t4796 + t4480 * t4800) + (t4477 * t4800 + t4480 * t4796) * t5152) * t6039;
t6083 = t4413 * t4899;
t5868 = t4884 * t4885;
t5521 = t4866 * t5868;
t4661 = t5521 - t5884;
t5992 = t4661 * t4894;
t4522 = (-t4746 * t5967 + t4764 * t5786) * t4885 + (pkin(6) * t5992 + (-0.2e1 * t4729 + t5753) * t5906) * t4867;
t4530 = (-pkin(2) * t5992 + t4867 * t6254) * t4893 - t4708 * t5912;
t4475 = t4522 * t4895 + t4530 * t4886;
t4478 = -t4522 * t4886 + t4530 * t4895;
t4414 = ((-t4475 * t4794 + t4478 * t4798) * t5157 + t5156 * (t4475 * t4798 + t4478 * t4794)) * t6041;
t6082 = t4414 * t4893;
t4441 = t4442 ^ 2;
t4424 = t4441 * t4584;
t4664 = -pkin(5) * t5531 + t6170;
t6081 = t4441 * t4664;
t4665 = pkin(5) * t5530 + t4804;
t6080 = t4441 * t4665;
t6078 = t4442 * t4882;
t4443 = t4446 ^ 2;
t4435 = t4443 * t4589;
t5529 = t4866 * t5889;
t4668 = -pkin(5) * t5529 + t6169;
t6077 = t4443 * t4668;
t4671 = pkin(5) * t5526 + t4818;
t6076 = t4443 * t4671;
t4444 = t4447 ^ 2;
t4437 = t4444 * t4592;
t5528 = t4866 * t5887;
t4669 = -pkin(5) * t5528 + t6168;
t6075 = t4444 * t4669;
t4672 = pkin(5) * t5525 + t4819;
t6074 = t4444 * t4672;
t4445 = t4448 ^ 2;
t4439 = t4445 * t4595;
t5527 = t4866 * t5885;
t4670 = -pkin(5) * t5527 + t6167;
t6073 = t4445 * t4670;
t4673 = pkin(5) * t5524 + t4820;
t6072 = t4445 * t4673;
t6064 = t4465 * t6279;
t6063 = t4467 * t6276;
t6062 = t4468 * t6277;
t6061 = t4469 * t6278;
t6060 = t4505 * t4583;
t6059 = t4506 * t4583;
t6058 = t4507 * t4588;
t6057 = t4508 * t4591;
t6056 = t4509 * t4594;
t6055 = t4510 * t4588;
t6054 = t4511 * t4591;
t6053 = t4512 * t4594;
t4513 = (t4702 * t4835 + pkin(5)) * t4881 + (-t4743 * t4881 + (pkin(6) * t5703 - pkin(1)) * t4882) * t4878 + t4624 * t5917;
t6052 = t4513 * t4561;
t4739 = t6186 * pkin(6);
t4514 = -t5297 * t5872 + (t4739 * t4841 + t4867 * t5147 + t5407) * t6161 - (t4691 * t4882 - t4867 * t5149) * pkin(6);
t6051 = t4514 * t4561;
t4515 = -t5296 * t5865 + (t4739 * t4850 + t4867 * t5509 + t5406) * t6159 - (t4692 * t4894 - t4747 * t5529) * pkin(6);
t6050 = t4515 * t6211;
t4516 = -t5295 * t5860 + (t4739 * t4856 + t4867 * t5508 + t5405) * t6157 - (t4693 * t4897 - t4751 * t5528) * pkin(6);
t6049 = t4516 * t6210;
t4517 = -t5294 * t5855 + (t4739 * t4862 + t4867 * t5507 + t5404) * t6155 - (t4694 * t4900 - t4755 * t5527) * pkin(6);
t6048 = t4517 * t6212;
t4518 = (t4703 * t4835 + t5427 - t5490) * t4893 - t4884 * t5978 + (t4884 * t5720 + t5493 * t5917) * t4885;
t6047 = t4518 * t6211;
t4519 = (t4704 * t4835 + t5426 - t5489) * t4896 - t4887 * t5975 + (t4887 * t5719 + t5492 * t5917) * t4888;
t6046 = t4519 * t6210;
t4520 = (t4705 * t4835 + t5425 - t5488) * t4899 - t4890 * t5972 + (t4890 * t5718 + t5491 * t5917) * t4891;
t6045 = t4520 * t6212;
t6042 = t4561 * t4838;
t6038 = t6212 * t4859;
t6036 = t6211 * t4847;
t6034 = t6210 * t4853;
t6027 = t4583 * t4628;
t6008 = t4588 * t4632;
t6007 = t4591 * t4633;
t6006 = t4594 * t4634;
t5989 = t4665 * t4878;
t5988 = t4671 * t4884;
t5987 = t4672 * t4887;
t5986 = t4673 * t4890;
t5962 = t4830 * t4863;
t5961 = t4831 * t4863;
t4833 = t4866 ^ 2;
t5960 = t4833 * t4924;
t5943 = t4847 * t4884;
t5933 = t4853 * t4887;
t5923 = t4859 * t4890;
t5899 = t4867 * t4080;
t5898 = t4867 * t4081;
t5897 = t4867 * t4082;
t5896 = t4867 * t4083;
t5874 = t4878 * t4881;
t5867 = t4884 * t4893;
t5862 = t4887 * t4896;
t5857 = t4890 * t4899;
t4041 = t4097 * t5440 + t4097 - t5899;
t5773 = -0.2e1 * t5917;
t4168 = t5102 * t5773 + (-t4583 * t5207 + (t4584 * t4835 - t6209) * t6078) * t6103;
t5583 = t4584 * t5913;
t5171 = t4354 * t4839 * t5583;
t5282 = t5440 + 0.1e1;
t5662 = t4400 * t6043;
t5352 = t4442 * t5662;
t5514 = t4878 * t5873;
t5686 = (-t4419 - t5350) * t6102;
t4096 = t4867 * t4097;
t4057 = t4096 - t5399 / 0.2e1 + t4112 / 0.2e1 - (t4946 / 0.2e1 + (t6068 / 0.2e1 - t5053 / 0.2e1) * t5954) * t4583;
t5702 = t4057 * t5915;
t5846 = -0.2e1 * t4041 * t5874 + t5702 * t6184 + 0.4e1 * t4168 * t5514 + t6185 * t5171 - (t6184 * t5686 - (-0.4e1 * t4837 * t5282 + 0.2e1 * t5971 + t6199 + 0.2e1) * t5352) * t6031;
t4045 = t4102 * t5439 + t4102 - t5898;
t4169 = t5098 * t5773 + (-t4588 * t5204 + (-t4588 ^ 2 + t4589 * t4835) * t4894 * t4446) * t6099;
t5578 = t4589 * t5905;
t5170 = t4356 * t4848 * t5578;
t5281 = t5439 + 0.1e1;
t5661 = t4924 * t6088;
t5349 = t4446 * t5661;
t5677 = t4359 * (-t4426 - t5347) * t4867;
t4099 = t4867 * t4102;
t4064 = t4099 - t5398 / 0.2e1 + t4114 / 0.2e1 - (t5379 / 0.2e1 + (t6067 / 0.2e1 - t5052 / 0.2e1) * t5945) * t4588;
t5701 = t4064 * t5911;
t5845 = -0.2e1 * t4045 * t5867 + t5701 * t6180 + 0.4e1 * t4884 * t4169 * t5866 + t6181 * t5170 - (t6180 * t5677 - (-0.4e1 * t4846 * t5281 + 0.2e1 * t5970 + t6197 + 0.2e1) * t5349) * t6025;
t4046 = t4103 * t5438 + t4103 - t5897;
t4170 = t5094 * t5773 + (-t4591 * t5201 + (-t4591 ^ 2 + t4592 * t4835) * t4897 * t4447) * t6096;
t5573 = t4592 * t5903;
t5168 = t4357 * t4854 * t5573;
t5280 = t5438 + 0.1e1;
t5658 = t4924 * t6087;
t5346 = t4447 * t5658;
t5672 = t4360 * (-t4427 - t5344) * t4867;
t4100 = t4867 * t4103;
t4065 = t4100 - t5397 / 0.2e1 + t4115 / 0.2e1 - (t5378 / 0.2e1 + (t6066 / 0.2e1 - t5051 / 0.2e1) * t5935) * t4591;
t5700 = t4065 * t5909;
t5844 = -0.2e1 * t4046 * t5862 + t5700 * t6177 + 0.4e1 * t4170 * t4887 * t5861 + t6178 * t5168 - (t6177 * t5672 - (-0.4e1 * t4852 * t5280 + 0.2e1 * t5969 + t6195 + 0.2e1) * t5346) * t6019;
t4047 = t4104 * t5437 + t4104 - t5896;
t4171 = t5090 * t5773 + (-t4594 * t5198 + (-t4594 ^ 2 + t4595 * t4835) * t4900 * t4448) * t6093;
t5568 = t4595 * t5901;
t5166 = t4358 * t4860 * t5568;
t5279 = t5437 + 0.1e1;
t5655 = t4924 * t6086;
t5343 = t4448 * t5655;
t5667 = t4361 * (-t4428 - t5341) * t4867;
t4101 = t4867 * t4104;
t4066 = t4101 - t5396 / 0.2e1 + t4116 / 0.2e1 - (t5377 / 0.2e1 + (t6065 / 0.2e1 - t5050 / 0.2e1) * t5925) * t4594;
t5699 = t4066 * t5907;
t5843 = -0.2e1 * t4047 * t5857 + t5699 * t6174 + 0.4e1 * t4171 * t4890 * t5856 + t6175 * t5166 - (t6174 * t5667 - (-0.4e1 * t4858 * t5279 + 0.2e1 * t5968 + t6193 + 0.2e1) * t5343) * t6013;
t4060 = t4096 + t4080;
t4272 = (t5506 + t5895) * t4583;
t5293 = t4866 * t5514;
t5351 = t4879 * t5662;
t5842 = t4041 * t4837 + 0.2e1 * t4057 * t5293 + t4060 * t4867 + t5171 * t5874 - 0.2e1 * t4168 * t5956 + (-t4272 * t4866 * t5351 + (-t5282 * t5352 - t5686) * t4583 * t5874) * t6280;
t4071 = t4099 + t4081;
t4278 = -t4432 - t4349 / 0.2e1;
t5348 = t4885 * t5661;
t5456 = 0.2e1 * t5521;
t5841 = t4064 * t4893 * t5456 + t4045 * t4846 + t4071 * t4867 + t5170 * t5867 - 0.2e1 * t4169 * t5947 + 0.2e1 * (t4866 * t4278 * t5348 + (-t5281 * t5349 - t5677) * t4588 * t5867) * t4847;
t4075 = t4101 + t4083;
t4280 = -t4434 - t4353 / 0.2e1;
t5342 = t4891 * t5655;
t5454 = 0.2e1 * t5517;
t5840 = t4066 * t4899 * t5454 + t4047 * t4858 + t4075 * t4867 + t5166 * t5857 - 0.2e1 * t4171 * t5927 + 0.2e1 * (t4866 * t4280 * t5342 + (-t5279 * t5343 - t5667) * t4594 * t5857) * t4859;
t4073 = t4100 + t4082;
t4279 = -t4433 - t4351 / 0.2e1;
t5345 = t4888 * t5658;
t5455 = 0.2e1 * t5519;
t5839 = t4065 * t4896 * t5455 + t4046 * t4852 + t4073 * t4867 + t5168 * t5862 - 0.2e1 * t4170 * t5937 + 0.2e1 * (t4866 * t4279 * t5345 + (-t5280 * t5346 - t5672) * t4591 * t5862) * t4853;
t5782 = 0.2e1 * t4863;
t4032 = t4084 * t5766 + (t4084 * t5913 + t4097 * t6200 + 0.2e1 * t6244 - (t4972 * t5782 - 0.2e1 * t5373) * t4583) * pkin(5);
t4180 = t4380 * t4866 / 0.2e1 - ((-pkin(5) * t5641 + t5432) * t4867 - t5679 * t6152 + pkin(1) * t6078) * t4583;
t5258 = 0.2e1 * t5350;
t5838 = t6267 * t4881 + (t4180 * t5258 - t4032) * t4878;
t5837 = -t4032 * t4881 + 0.2e1 * t4180 * t5662 - t4878 * t6267;
t4033 = t4085 * t5765 + (t4085 * t5905 + t4102 * t6200 - t5782 * t6251 - 0.2e1 * t4196 + 0.2e1 * t6250) * pkin(5);
t5257 = 0.2e1 * ((pkin(5) * t5316 - t4319) * t4867 + (pkin(5) * t5365 + t4393 / 0.2e1) * t4866 - pkin(1) * t5630) * t5661;
t5836 = -t4884 * t4033 + t4893 * t6268 + t5257 * t5943;
t4034 = t4086 * t5764 + (t4086 * t5903 + t4103 * t6200 - t5782 * t6249 - 0.2e1 * t4197 + 0.2e1 * t6248) * pkin(5);
t5256 = 0.2e1 * ((pkin(5) * t5311 - t4321) * t4867 + (pkin(5) * t5360 + t4394 / 0.2e1) * t4866 - pkin(1) * t5625) * t5658;
t5835 = -t4887 * t4034 + t4896 * t6269 + t5256 * t5933;
t4035 = t4087 * t5763 + (t4087 * t5901 + t4104 * t6200 - t5782 * t6247 - 0.2e1 * t4198 + 0.2e1 * t6246) * pkin(5);
t5255 = 0.2e1 * ((pkin(5) * t5306 - t4323) * t4867 + (pkin(5) * t5355 + t4395 / 0.2e1) * t4866 - pkin(1) * t5620) * t5655;
t5834 = -t4890 * t4035 + t4899 * t6270 + t5255 * t5923;
t5833 = -t4893 * t4033 - t4884 * t6268 + t5257;
t5832 = -t4896 * t4034 - t4887 * t6269 + t5256;
t5831 = -t4035 * t4899 - t4890 * t6270 + t5255;
t5021 = t4882 * t5045;
t4211 = t5021 + t4866 * (t4308 - t4381);
t4255 = t4866 * t5021 - t4381;
t5205 = t4882 * t5351;
t5522 = t4866 * t5873;
t4768 = t4841 - 0.1e1 / 0.2e1;
t5685 = t4768 * t6106;
t5698 = t4080 * t5913;
t5829 = (-t4878 * t5205 + t5684 * t6182) * t5541 * t6280 + (-t4255 * t4881 + t5145 * t5875) * t4867 - 0.4e1 * t4584 * t5685 + t4211 * t5875 - t4878 * t5698 + t4084 * (t5522 + t5894) + (t4878 * t5773 + t5873 * t6186) * t6127;
t5018 = t4894 * t5044;
t4212 = t5018 + t4866 * (t4348 - t4396);
t4256 = t4866 * t5018 - t4396;
t5470 = 0.2e1 * t4349;
t5520 = t4866 * t5866;
t5697 = t4081 * t5905;
t5828 = t4212 * t5868 - t4256 * t5884 + (0.2e1 * ((t4850 * t5470 - t4349) * t4893 - t4885 * t5108) * t6026 + (t5456 * t5944 - 0.4e1 * t4769) * t6100) * t4446 - t4884 * t5697 + t4085 * (t5520 + t5890) + (t4884 * t5773 + t5866 * t6186) * t6123;
t5020 = t4897 * t5043;
t4213 = t5020 + t4866 * (t4350 - t4397);
t4257 = t4866 * t5020 - t4397;
t5466 = 0.2e1 * t4351;
t5518 = t4866 * t5861;
t5696 = t4082 * t5903;
t5827 = t4213 * t5863 - t4257 * t5882 + (0.2e1 * ((t4856 * t5466 - t4351) * t4896 - t4888 * t5107) * t6020 + (t5455 * t5934 - 0.4e1 * t4770) * t6097) * t4447 - t4887 * t5696 + t4086 * (t5518 + t5888) + (t4887 * t5773 + t5861 * t6186) * t6119;
t5019 = t4900 * t5042;
t4214 = t5019 + t4866 * (t4352 - t4398);
t4258 = t4866 * t5019 - t4398;
t5462 = 0.2e1 * t4353;
t5516 = t4866 * t5856;
t5695 = t4083 * t5901;
t5826 = t4214 * t5858 - t4258 * t5880 + (0.2e1 * ((t4862 * t5462 - t4353) * t4899 - t4891 * t5106) * t6014 + (t5454 * t5924 - 0.4e1 * t4771) * t6094) * t4448 - t4890 * t5695 + t4087 * (t5516 + t5886) + (t4890 * t5773 + t5856 * t6186) * t6115;
t5825 = t4211 * t5873 + t4255 * t5894 + (0.4e1 * (-t4768 * t5370 - t5205 / 0.2e1) * t6032 + (0.4e1 * t4768 * t5953 + t5457) * t6104) * t4442 - t4881 * t5698 - t4084 * t4652 + (t4881 * t5773 - t5875 * t6186) * t6127;
t5824 = t4212 * t5866 + t4256 * t5890 + (0.4e1 * (-t4769 * t5366 - t4894 * t5348 / 0.2e1) * t6026 + (t5943 * t6258 + 0.2e1 * t5529) * t6100) * t4446 - t4893 * t5697 - t4085 * t4661 + (t4893 * t5773 - t5868 * t6186) * t6123;
t5823 = t4214 * t5856 + t4258 * t5886 + (0.4e1 * (-t4771 * t5356 - t4900 * t5342 / 0.2e1) * t6014 + (t5923 * t6256 + 0.2e1 * t5527) * t6094) * t4448 - t4899 * t5695 - t4087 * t4663 + (t4899 * t5773 - t5858 * t6186) * t6115;
t5822 = t4213 * t5861 + t4257 * t5888 + (0.4e1 * (-t4770 * t5361 - t4897 * t5345 / 0.2e1) * t6020 + (t5933 * t6257 + 0.2e1 * t5528) * t6097) * t4447 - t4896 * t5696 - t4086 * t4662 + (t4896 * t5773 - t5863 * t6186) * t6119;
t4290 = -t4882 * t5403 - 0.2e1 * t5207;
t5115 = t4839 * t5662 * t6105;
t5325 = t4881 * t5645;
t5813 = -(-t4419 + t5258) * t5515 - 0.2e1 * t5115;
t5821 = 0.2e1 * t4060 * t5874 + t5693 * t6185 + ((-0.2e1 * t4441 * t5583 + 0.4e1 * t5102) * t4867 + 0.4e1 * t5115) * t4837 + t4290 * t5325 * t6284 + t5813;
t4292 = -t5630 * t6187 - 0.2e1 * t5204;
t5113 = t5661 * t5675;
t5315 = t4893 * t5631;
t5812 = -(-t4426 + 0.2e1 * t5347) * t4432 - 0.2e1 * t5113;
t5820 = 0.2e1 * t4071 * t5867 + t5691 * t6181 + ((-0.2e1 * t4443 * t5578 + 0.4e1 * t5098) * t4867 + 0.4e1 * t5113) * t4846 + t4292 * t5315 * t6283 + t5812;
t4293 = -t5625 * t6187 - 0.2e1 * t5201;
t5111 = t5658 * t5670;
t5310 = t4896 * t5626;
t5811 = -(-t4427 + 0.2e1 * t5344) * t4433 - 0.2e1 * t5111;
t5819 = 0.2e1 * t4073 * t5862 + t5689 * t6178 + ((-0.2e1 * t4444 * t5573 + 0.4e1 * t5094) * t4867 + 0.4e1 * t5111) * t4852 + t4293 * t5310 * t6282 + t5811;
t4294 = -t5620 * t6187 - 0.2e1 * t5198;
t5109 = t5655 * t5665;
t5305 = t4899 * t5621;
t5810 = -(-t4428 + 0.2e1 * t5341) * t4434 - 0.2e1 * t5109;
t5818 = 0.2e1 * t4075 * t5857 + t5687 * t6175 + ((-0.2e1 * t4445 * t5568 + 0.4e1 * t5090) * t4867 + 0.4e1 * t5109) * t4858 + t4294 * t5305 * t6281 + t5810;
t5798 = t4424 - t4308;
t5797 = t4435 - t4348;
t5796 = t4437 - t4350;
t5795 = t4439 - t4352;
t5777 = -0.2e1 * t6104;
t5776 = -0.2e1 * t6100;
t5775 = -0.2e1 * t6097;
t5774 = -0.2e1 * t6094;
t5731 = pkin(5) * t5967;
t5694 = t4097 * t6027;
t5692 = t4102 * t6008;
t5690 = t4103 * t6007;
t5688 = t4104 * t6006;
t5683 = t4355 * t6027;
t5674 = t4359 * t6008;
t5669 = t4360 * t6007;
t5664 = t4361 * t6006;
t5652 = t4411 * t4424;
t5651 = t4412 * t4437;
t5650 = t4413 * t4439;
t5649 = t4414 * t4435;
t4585 = t4583 * t4584;
t5648 = t4585 * t6080;
t5647 = t4441 * t4585 * t4838;
t4590 = t4588 * t4589;
t5639 = t4590 * t6076;
t5638 = t4443 * t4590 * t4847;
t4593 = t4591 * t4592;
t5637 = t4593 * t6074;
t5636 = t4444 * t4593 * t4853;
t4596 = t4594 * t4595;
t5635 = t4596 * t6072;
t5634 = t4445 * t4596 * t4859;
t5618 = t4453 * t6031;
t5617 = t4454 * t6031;
t5616 = t4456 * t6025;
t5615 = t4457 * t6019;
t5614 = t4458 * t6013;
t5613 = t4459 * t6025;
t5612 = t4460 * t6019;
t5611 = t4461 * t6013;
t5610 = t4465 * t6044;
t5609 = t4466 * t6044;
t5608 = t4467 * t6041;
t5607 = t4468 * t6040;
t5606 = t4469 * t6039;
t5605 = t4470 * t6041;
t5604 = t4471 * t6040;
t5603 = t4472 * t6039;
t5598 = t4513 * t6042;
t5597 = t4514 * t6042;
t5596 = t4515 * t6036;
t5595 = t4516 * t6034;
t5594 = t4517 * t6038;
t5593 = t4518 * t6036;
t5592 = t4519 * t6034;
t5591 = t4520 * t6038;
t5585 = t4583 * t5951;
t5584 = t4584 * t5952;
t5580 = t4589 * t5942;
t5579 = t4589 * t5941;
t5575 = t4592 * t5932;
t5574 = t4592 * t5931;
t5570 = t4595 * t5922;
t5569 = t4595 * t5921;
t5539 = t4838 * t5872;
t5538 = t4841 * t4424;
t5536 = t4850 * t4435;
t5534 = t4856 * t4437;
t5532 = t4862 * t4439;
t5485 = t4838 * t5821;
t5484 = t4847 * t5820;
t5483 = t4853 * t5819;
t5482 = t4859 * t5818;
t5481 = t4879 * t5781;
t5480 = t4885 * t5780;
t5479 = t4888 * t5779;
t5478 = t4891 * t5778;
t5477 = t4505 * t5777;
t5476 = t4506 * t5777;
t5475 = -0.2e1 * t5683;
t5474 = 0.2e1 * t5682;
t5473 = t4507 * t5776;
t5472 = t4510 * t5776;
t5471 = -0.2e1 * t5674;
t5469 = t4508 * t5775;
t5468 = t4511 * t5775;
t5467 = -0.2e1 * t5669;
t5465 = t4509 * t5774;
t5464 = t4512 * t5774;
t5463 = -0.2e1 * t5664;
t5461 = 0.2e1 * t5538;
t5460 = 0.2e1 * t5536;
t5459 = 0.2e1 * t5534;
t5458 = 0.2e1 * t5532;
t4049 = t4060 * t4878 + t4097 * t5522;
t5452 = t4049 * t4878 - t5813 * t5874 - (t4290 * t4837 + t5207) * t5645;
t4053 = t4071 * t4884 + t4102 * t5520;
t5451 = t4053 * t4884 - t5812 * t5867 - (t4292 * t4846 + t5204) * t5631;
t4054 = t4073 * t4887 + t4103 * t5518;
t5450 = t4054 * t4887 - t5811 * t5862 - (t4293 * t4852 + t5201) * t5626;
t4055 = t4075 * t4890 + t4104 * t5516;
t5449 = t4055 * t4890 - t5810 * t5857 - (t4294 * t4858 + t5198) * t5621;
t4420 = -0.2e1 * t5538;
t4407 = -t4424 + t5461;
t4950 = t4407 * t4835 + t4255 + t4424;
t5194 = t5531 * t4424;
t4184 = (t4420 + t4950) * t4878 - t4881 * t5194;
t5448 = t4184 * t4838 - t4076;
t5447 = (-t4950 + t5461) * t4881 + (-t4076 - t5194) * t4878;
t4429 = -0.2e1 * t5536;
t4408 = -t4435 + t5460;
t4949 = t4408 * t4835 + t4256 + t4435;
t5188 = t5529 * t4435;
t4186 = (t4429 + t4949) * t4884 - t4893 * t5188;
t5446 = t4186 * t4847 - t4077;
t5445 = (-t4949 + t5460) * t4893 + (-t4077 - t5188) * t4884;
t4430 = -0.2e1 * t5534;
t4409 = -t4437 + t5459;
t4948 = t4409 * t4835 + t4257 + t4437;
t5184 = t5528 * t4437;
t4188 = (t4430 + t4948) * t4887 - t4896 * t5184;
t5444 = t4188 * t4853 - t4078;
t5443 = (-t4948 + t5459) * t4896 + (-t4078 - t5184) * t4887;
t4431 = -0.2e1 * t5532;
t4410 = -t4439 + t5458;
t4947 = t4410 * t4835 + t4258 + t4439;
t5180 = t5527 * t4439;
t4190 = (t4431 + t4947) * t4890 - t4899 * t5180;
t5442 = t4190 * t4859 - t4079;
t5441 = (-t4947 + t5458) * t4899 + (-t4079 - t5180) * t4890;
t5395 = t4097 * t5598;
t5394 = t4097 * t5586;
t5393 = t4097 * t5585;
t5392 = t5953 * t6130;
t5391 = t4102 * t5593;
t5390 = t4102 * t5582;
t5389 = t4102 * t5581;
t5388 = t5943 * t6126;
t5387 = t4103 * t5592;
t5386 = t4103 * t5577;
t5385 = t4103 * t5576;
t5384 = t5933 * t6122;
t5383 = t4104 * t5591;
t5382 = t4104 * t5572;
t5381 = t4104 * t5571;
t5380 = t5923 * t6118;
t4273 = (0.2e1 * t5895 + t6103) * t4583;
t5372 = t4273 * t5678;
t5371 = t4442 * t5681;
t5368 = t4355 * t5584;
t5367 = t4446 * t5673;
t5363 = t4359 * t5580;
t5362 = t4447 * t5668;
t5358 = t4360 * t5575;
t5357 = t4448 * t5663;
t5353 = t4361 * t5570;
t5340 = t4882 * t5652;
t5339 = t4897 * t5651;
t5338 = t4900 * t5650;
t5337 = t4894 * t5649;
t4525 = -(t6145 * t6182 + t5147) * t6161 + (t4882 * t5540 - (t5277 + t4718) * pkin(6)) * t4879;
t4603 = pkin(6) * t4706 + t4742 * t5736 + t4841 * t5955;
t4415 = (-(-t6271 + ((-t4653 * t4742 + t4654 * t5277) * t6161 - t4654 * t5123) * t4882 + (-t4653 * t4744 + (t5149 - t5716) * t4654) * pkin(6)) * t6279 * t5049 - ((t4525 * t4883 + t4603 * t4880) * t4797 + (-t4525 * t4880 + t4603 * t4883) * t4793) * t4866 * t5158 / (t4647 + pkin(6) * t5730 - pkin(1) * (t4718 + t5748))) * t5950;
t5336 = t4415 * t5644;
t4526 = -((t6196 - 0.1e1) * t6145 + t5509) * t6159 + (t4894 * t5537 - (t4719 + t5980) * pkin(6)) * t4885;
t4608 = pkin(6) * t4708 + t4748 * t5735 + t4850 * t5946;
t4416 = (-(-t6272 + ((-t4655 * t4748 + t4658 * t5980) * t6159 - t4658 * t5122) * t4894 + (-t4655 * t4761 + (t4747 * t5911 - t5740) * t4658) * pkin(6)) * t6276 * t5048 - t5156 * t4866 * ((t4526 * t4895 + t4608 * t4886) * t4798 + (-t4526 * t4886 + t4608 * t4895) * t4794) / (t5761 + pkin(6) * t5729 - pkin(1) * (t4719 + t5746))) * t5940;
t5335 = t4416 * t5630;
t4528 = -((t6192 - 0.1e1) * t6145 + t5507) * t6155 + (t4900 * t5533 - (t4721 + t5974) * pkin(6)) * t4891;
t4610 = pkin(6) * t4710 + t4756 * t5732 + t4862 * t5926;
t4417 = (-(-t6274 + ((-t4657 * t4756 + t4660 * t5974) * t6155 - t4660 * t5120) * t4900 + (-t4657 * t4763 + (t4755 * t5907 - t5738) * t4660) * pkin(6)) * t6278 * t5046 - ((t4528 * t4901 + t4610 * t4892) * t4800 + t4796 * (-t4528 * t4892 + t4610 * t4901)) * t5152 * t4866 / (t5762 + pkin(6) * t5727 - pkin(1) * (t4721 + t5744))) * t5920;
t5334 = t4417 * t5620;
t4527 = -((t6194 - 0.1e1) * t6145 + t5508) * t6157 + (t4897 * t5535 - (t4720 + t5977) * pkin(6)) * t4888;
t4609 = pkin(6) * t4709 + t4752 * t5733 + t4856 * t5936;
t4418 = (-(-t6273 + ((-t4656 * t4752 + t4659 * t5977) * t6157 - t4659 * t5121) * t4897 + (-t4656 * t4762 + (t4751 * t5909 - t5739) * t4659) * pkin(6)) * t6277 * t5047 - ((t4527 * t4898 + t4609 * t4889) * t4799 + (-t4527 * t4889 + t4609 * t4898) * t4795) * t5154 * t4866 / (t5760 + pkin(6) * t5728 - pkin(1) * (t4720 + t5745))) * t5930;
t5333 = t4418 * t5625;
t5332 = t4879 * t5647;
t5331 = t4882 * t5647;
t5328 = t4442 * t5585;
t5324 = t4885 * t5638;
t5323 = t4894 * t5638;
t5322 = t4888 * t5636;
t5321 = t4897 * t5636;
t5320 = t4891 * t5634;
t5319 = t4900 * t5634;
t5317 = t4446 * t5581;
t5312 = t4447 * t5576;
t5307 = t4448 * t5571;
t5269 = 0.4e1 * t4838 * t5685;
t5268 = t4583 * t5475;
t5267 = t5676 * t6258;
t5265 = t4588 * t5471;
t5264 = t5671 * t6257;
t5262 = t4591 * t5467;
t5261 = t5666 * t6256;
t5259 = t4594 * t5463;
t5227 = t4838 * t5452;
t5226 = t4838 * t5447;
t5225 = t4847 * t5451;
t5224 = t4847 * t5445;
t5223 = t4853 * t5450;
t5222 = t4853 * t5443;
t5221 = t4859 * t5449;
t5220 = t4859 * t5441;
t5215 = t4879 * t6028 * t6106;
t5214 = t4359 * t4446 * t4885 * t6021;
t5213 = t4360 * t4447 * t4888 * t6015;
t5212 = t4361 * t4448 * t4891 * t6009;
t5211 = t5584 * t6092;
t5210 = t5580 * t6091;
t5209 = t5575 * t6090;
t5208 = t5570 * t6089;
t5195 = t5598 * t4424;
t5193 = t5647 * t5989;
t5192 = t4879 * t5331;
t5191 = t6279 * t5328;
t5189 = t5593 * t4435;
t5187 = t5638 * t5988;
t5186 = t4885 * t5323;
t5185 = t5592 * t4437;
t5183 = t5636 * t5987;
t5182 = t4888 * t5321;
t5181 = t5591 * t4439;
t5179 = t5634 * t5986;
t5178 = t4891 * t5319;
t5177 = t6276 * t5317;
t5176 = t6277 * t5312;
t5175 = t6278 * t5307;
t5174 = t4283 * t5316;
t5173 = t4286 * t5311;
t5172 = t4289 * t5306;
t5144 = 0.2e1 * t5539 * t6106;
t5143 = t4885 * t5266;
t5142 = t4888 * t5263;
t5141 = t4891 * t5260;
t5116 = t6279 * t5215;
t5114 = t6276 * t5214;
t5112 = t6277 * t5213;
t5110 = t6278 * t5212;
t5105 = t4465 * t5191;
t5104 = t4466 * t5191;
t5103 = t5328 * t6051;
t5101 = t4467 * t5177;
t5100 = t4470 * t5177;
t5099 = t5317 * t6050;
t5097 = t4468 * t5176;
t5096 = t4471 * t5176;
t5095 = t5312 * t6049;
t5093 = t4469 * t5175;
t5092 = t4472 * t5175;
t5091 = t5307 * t6048;
t4604 = pkin(5) * t5543 + t4664 * t4878;
t4615 = pkin(1) * t5914 + t4667 * t4878;
t5089 = -t4097 * t4615 + t4604 * t4424;
t4740 = t6187 * pkin(5);
t4611 = t4664 * t4881 - t4740 * t4878;
t4616 = (pkin(1) * t4878 - pkin(5) * t5870) * t4866 - t5411;
t5088 = t4097 * t4616 + t4611 * t4424;
t5087 = t4584 * t6081 - t6129;
t5086 = t4584 * t6080 + t6130;
t4605 = t4668 * t4884 + t4893 * t5731;
t4617 = pkin(1) * t5906 + t4678 * t4884;
t5085 = -t4102 * t4617 + t4605 * t4435;
t4612 = t4668 * t4893 - t4740 * t4884;
t4620 = (pkin(1) * t4884 - pkin(5) * t5853) * t4866 - t5409;
t5084 = t4102 * t4620 + t4612 * t4435;
t5083 = t4589 * t6077 - t6125;
t5082 = t4589 * t6076 + t6126;
t4606 = t4669 * t4887 + t4896 * t5731;
t4618 = pkin(1) * t5904 + t4679 * t4887;
t5081 = -t4103 * t4618 + t4606 * t4437;
t4613 = t4669 * t4896 - t4740 * t4887;
t4621 = (pkin(1) * t4887 - pkin(5) * t5851) * t4866 - t5408;
t5080 = t4103 * t4621 + t4613 * t4437;
t5079 = t4592 * t6075 - t6121;
t5078 = t4592 * t6074 + t6122;
t4607 = t4670 * t4890 + t4899 * t5731;
t4619 = pkin(1) * t5902 + t4677 * t4890;
t5077 = -t4104 * t4619 + t4607 * t4439;
t4614 = t4670 * t4899 - t4740 * t4890;
t4622 = (pkin(1) * t4890 - pkin(5) * t5849) * t4866 - t5410;
t5076 = t4104 * t4622 + t4614 * t4439;
t5075 = t4595 * t6073 - t6117;
t5074 = t4595 * t6072 + t6118;
t5041 = t4583 * t6129 - t4585 * t6081;
t5040 = -t6130 * t4583 - t5648;
t5039 = t4588 * t6125 - t4590 * t6077;
t5038 = -t6126 * t4588 - t5639;
t5037 = t4591 * t6121 - t4593 * t6075;
t5036 = -t6122 * t4591 - t5637;
t5035 = t4594 * t6117 - t4596 * t6073;
t5034 = -t6118 * t4594 - t5635;
t5029 = t4838 * t5089;
t5028 = t4838 * t5088;
t5027 = t4847 * t5085;
t5026 = t4847 * t5084;
t5025 = t4853 * t5081;
t5024 = t4853 * t5080;
t5023 = t4859 * t5077;
t5022 = t4859 * t5076;
t4059 = 0.2e1 * t4096 + t4080;
t5017 = t4059 * t4879 + t4583 * t5372;
t5016 = t4059 * t4882 - t4273 * t5369;
t4070 = 0.2e1 * t4099 + t4081;
t4281 = t6204 - t4349;
t5015 = t4070 * t4885 - t4281 * t5364;
t5014 = t4070 * t4894 + t4281 * t5365;
t4072 = 0.2e1 * t4100 + t4082;
t4284 = t6203 - t4351;
t5013 = t4072 * t4888 - t4284 * t5359;
t5012 = t4072 * t4897 + t4284 * t5360;
t4074 = 0.2e1 * t4101 + t4083;
t4287 = t6202 - t4353;
t5011 = t4074 * t4891 - t4287 * t5354;
t5010 = t4074 * t4900 + t4287 * t5355;
t4993 = t5086 * t6052;
t4992 = t5082 * t6047;
t4991 = t5078 * t6046;
t4990 = t5074 * t6045;
t4989 = -t4059 * t6030 - t4584 * t5372;
t4988 = -t4059 * t6029 + t4273 * t5368;
t4987 = t4281 * t4359 * t5579 - t4070 * t6023;
t4986 = -t4070 * t6022 - t4281 * t5363;
t4985 = t4284 * t4360 * t5574 - t4072 * t6017;
t4984 = -t4072 * t6016 - t4284 * t5358;
t4983 = t4287 * t4361 * t5569 - t4074 * t6011;
t4982 = -t4074 * t6010 - t4287 * t5353;
t4981 = -t4076 * t6029 + t5368 * t6208;
t4980 = -t4077 * t6022 + t5363 * t6207;
t4979 = -t4078 * t6016 + t5358 * t6206;
t4978 = -t4079 * t6010 + t5353 * t6205;
t4977 = t4584 * t5269 + t5481;
t4976 = t4589 * t5267 + t5480;
t4975 = t4592 * t5264 + t5479;
t4974 = t4595 * t5261 + t5478;
t4967 = -t4583 * t5481 - t4585 * t5269;
t4966 = -t4583 * t6128 - t4585 * t5144;
t4965 = -t4588 * t5480 - t4590 * t5267;
t4964 = -t4588 * t6124 - t4590 * t5143;
t4963 = -t4591 * t5479 - t4593 * t5264;
t4962 = -t4591 * t6120 - t4593 * t5142;
t4961 = -t4594 * t5478 - t4596 * t5261;
t4960 = -t4594 * t6116 - t4596 * t5141;
t4464 = (-t4509 * t5152 - t4512 * t5153) * t4594;
t4463 = (-t4508 * t5154 - t4511 * t5155) * t4591;
t4462 = (-t4507 * t5156 - t4510 * t5157) * t4588;
t4455 = (-t4505 * t5158 - t4506 * t5159) * t4583;
t4288 = -t4434 - 0.2e1 * t4353;
t4285 = -t4433 - 0.2e1 * t4351;
t4282 = -t4432 - 0.2e1 * t4349;
t4277 = t4311 - t4440;
t4276 = t4310 - t4438;
t4275 = t4309 - t4436;
t4274 = (t5895 + 0.2e1 * t6103) * t4583;
t4271 = -t4298 - t4425;
t4267 = t4288 * t4890 - t4866 * t5305;
t4266 = t4285 * t4887 - t4866 * t5310;
t4265 = t4282 * t4884 - t4866 * t5315;
t4264 = t4288 * t4899 + t4890 * t5306;
t4263 = t4285 * t4896 + t4887 * t5311;
t4262 = t4282 * t4893 + t4884 * t5316;
t4260 = -t4274 * t4878 - t4866 * t5325;
t4259 = -t4274 * t4881 + t4878 * t5326;
t4222 = t4277 * t4820 + t4280 * t5724;
t4221 = t4276 * t4819 + t4279 * t5725;
t4220 = t4275 * t4818 + t4278 * t5726;
t4219 = t4277 * t6167 - t4280 * t5727;
t4218 = t4276 * t6168 - t4279 * t5728;
t4217 = t4275 * t6169 - t4278 * t5729;
t4216 = t4271 * t6170 + t4272 * t5730;
t4215 = t4271 * t4804 - t4272 * t5717;
t4163 = ((t4445 * t5437 - 0.2e1 * t5357) * t4595 + t5795) * t5857 + t6175 * t5172;
t4162 = ((t4444 * t5438 - 0.2e1 * t5362) * t4592 + t5796) * t5862 + t6178 * t5173;
t4161 = ((t4443 * t5439 - 0.2e1 * t5367) * t4589 + t5797) * t5867 + t6181 * t5174;
t4160 = ((t4441 * t5440 - 0.2e1 * t5371) * t4584 + t5798) * t5874 - t5641 * t6185 * t6275;
t4155 = (-0.2e1 * t4352 + t4431 + 0.2e1 * t4439) * t4858 - 0.4e1 * t5172 * t5857 + (-t6174 * t5357 + (t5968 * t6175 + t4862) * t4445) * t4595 - t5795;
t4154 = (-0.2e1 * t4350 + t4430 + 0.2e1 * t4437) * t4852 - 0.4e1 * t5173 * t5862 + (-t6177 * t5362 + (t5969 * t6178 + t4856) * t4444) * t4592 - t5796;
t4153 = (-0.2e1 * t4348 + t4429 + 0.2e1 * t4435) * t4846 - 0.4e1 * t5174 * t5867 + (-t6180 * t5367 + (t5970 * t6181 + t4850) * t4443) * t4589 - t5797;
t4152 = (-0.2e1 * t4308 + t4420 + 0.2e1 * t4424) * t4837 + 0.4e1 * t4442 * t5293 * t6275 + (-t6184 * t5371 + (t5971 * t6185 + t4841) * t4441) * t4584 - t5798;
t4069 = t5896 / 0.2e1 + t4104;
t4068 = t5897 / 0.2e1 + t4103;
t4067 = t5898 / 0.2e1 + t4102;
t4058 = t5899 / 0.2e1 + t4097;
t4052 = t4075 * t4899 - t4104 * t5517;
t4051 = t4073 * t4896 - t4103 * t5519;
t4050 = t4071 * t4893 - t4102 * t5521;
t4048 = t4060 * t4881 - t4097 * t5523;
t4031 = -0.2e1 * pkin(5) * t5699 + 0.2e1 * t4069 * t6167;
t4030 = -0.2e1 * pkin(5) * t5700 + 0.2e1 * t4068 * t6168;
t4029 = -0.2e1 * pkin(5) * t5701 + 0.2e1 * t4067 * t6169;
t4028 = -0.2e1 * t4066 * t5724 - 0.2e1 * t4069 * t4820;
t4027 = -0.2e1 * t4065 * t5725 - 0.2e1 * t4068 * t4819;
t4026 = -0.2e1 * t4064 * t5726 - 0.2e1 * t4067 * t4818;
t4019 = -0.2e1 * pkin(5) * t5702 + 0.2e1 * t4058 * t6170;
t4018 = -0.2e1 * t4057 * t5717 - 0.2e1 * t4058 * t4804;
t1 = [-t4097 * t6059 - t4102 * t6055 - t4103 * t6054 - t4104 * t6053, 0, 0, (t4454 * t5192 + t4459 * t5186 + t4460 * t5182 + t4461 * t5178 + t4506 * t4966 + t4510 * t4964 + t4511 * t4962 + t4512 * t4960) * t4833, (t4407 * t5617 + t4408 * t5613 + t4409 * t5612 + t4410 * t5611 + t4506 * t4967 + t4510 * t4965 + t4511 * t4963 + t4512 * t4961) * t4833, (-t4454 * t5394 - t4459 * t5390 - t4460 * t5386 - t4461 * t5382 + t4983 * t4512 + t4985 * t4511 + t4987 * t4510 + t4989 * t4506 + (t4454 * t5331 + t4459 * t5323 + t4460 * t5321 + t4461 * t5319) * t4867) * t4866, (-t4454 * t5393 - t4459 * t5389 - t4460 * t5385 - t4461 * t5381 + t4982 * t4512 + t4984 * t4511 + t4986 * t4510 + t4988 * t4506 + (-t4454 * t5332 - t4459 * t5324 - t4460 * t5322 - t4461 * t5320) * t4867) * t4866, -t4060 * t5617 - t4071 * t5613 - t4073 * t5612 - t4075 * t5611 + (-t4060 * t6059 - t4071 * t6055 - t4073 * t6054 - t4075 * t6053) * t4867, -t4019 * t6059 - t4029 * t6055 - t4030 * t6054 - t4031 * t6053 + (t4222 * t5464 + t4461 * t5034) * t4859 + (t4221 * t5468 + t4460 * t5036) * t4853 + (t4220 * t5472 + t4459 * t5038) * t4847 + (t4215 * t5476 + t4454 * t5040) * t4838, -t4018 * t6059 - t4026 * t6055 - t4027 * t6054 - t4028 * t6053 + (t4219 * t5464 + t4461 * t5035) * t4859 + (t4218 * t5468 + t4460 * t5037) * t4853 + (t4217 * t5472 + t4459 * t5039) * t4847 + (t4216 * t5476 + t4454 * t5041) * t4838, (-t4160 * t5610 - t4161 * t5608 - t4162 * t5607 - t4163 * t5606) * t5900 - (t4461 * t5221 + t4512 * t5840) * t4594 - (t4460 * t5223 + t4511 * t5839) * t4591 - (t4459 * t5225 + t4510 * t5841) * t4588 - (t4454 * t5227 + t4506 * t5842) * t4583, (-t4152 * t5610 - t4153 * t5608 - t4154 * t5607 - t4155 * t5606) * t5900 - (t4461 * t5482 + t4512 * t5843) * t4594 - (t4460 * t5483 + t4511 * t5844) * t4591 - (t4459 * t5484 + t4510 * t5845) * t4588 - (t4454 * t5485 + t4506 * t5846) * t4583, -(t4461 * t5220 + t4512 * t5826) * t4594 - (t4460 * t5222 + t4511 * t5827) * t4591 - (t4459 * t5224 + t4510 * t5828) * t4588 - (t4454 * t5226 + t4506 * t5829) * t4583 + ((-t4049 * t5610 - t4053 * t5608 - t4054 * t5607 - t4055 * t5606) * t4866 + (t4259 * t5105 + t4262 * t5101 + t4263 * t5097 + t4264 * t5093) * t4833) * t4924, -(t4461 * t5442 + t4512 * t5823) * t4594 - (t4460 * t5444 + t4511 * t5822) * t4591 - (t4459 * t5446 + t4510 * t5824) * t4588 - (t4454 * t5448 + t4506 * t5825) * t4583 + ((-t4048 * t5610 - t4050 * t5608 - t4051 * t5607 - t4052 * t5606) * t4866 + (-t4260 * t5105 - t4265 * t5101 - t4266 * t5097 - t4267 * t5093) * t4833) * t4924, (-t4465 * t5116 - t4467 * t5114 - t4468 * t5112 - t4469 * t5110) * t5960 + (t4454 * t5211 + t4459 * t5210 + t4460 * t5209 + t4461 * t5208 + t4978 * t4512 + t4979 * t4511 + t4980 * t4510 + t4981 * t4506 + (t4076 * t5610 + t4077 * t5608 + t4078 * t5607 + t4079 * t5606) * t4924) * t4866, -t4454 * t5648 - t4459 * t5639 - t4460 * t5637 - t4461 * t5635 - (t4461 * t6118 + t4512 * t5834) * t4594 - (t4460 * t6122 + t4511 * t5835) * t4591 - (t4459 * t6126 + t4510 * t5836) * t4588 - (t4454 * t6130 + t4506 * t5838) * t4583 + (-t5023 * t6061 - t5025 * t6062 - t5027 * t6063 - t5029 * t6064) * t5900, t4454 * t5193 + t4459 * t5187 + t4460 * t5183 + t4461 * t5179 - (-t4461 * t5380 + t4512 * t5831) * t4594 - (-t4460 * t5384 + t4511 * t5832) * t4591 - (-t4459 * t5388 + t4510 * t5833) * t4588 - (-t4454 * t5392 + t4506 * t5837) * t4583 + (-t5022 * t6061 - t5024 * t6062 - t5026 * t6063 - t5028 * t6064) * t5900, 0, -t5961, t5962, 0; -t4097 * t6060 - t4102 * t6058 - t4103 * t6057 - t4104 * t6056, 0, 0, (t4453 * t5192 + t4456 * t5186 + t4457 * t5182 + t4458 * t5178 + t4505 * t4966 + t4507 * t4964 + t4508 * t4962 + t4509 * t4960) * t4833, (t4407 * t5618 + t4408 * t5616 + t4409 * t5615 + t4410 * t5614 + t4505 * t4967 + t4507 * t4965 + t4508 * t4963 + t4509 * t4961) * t4833, (-t4453 * t5394 - t4456 * t5390 - t4457 * t5386 - t4458 * t5382 + t4983 * t4509 + t4985 * t4508 + t4987 * t4507 + t4989 * t4505 + (t4453 * t5331 + t4456 * t5323 + t4457 * t5321 + t4458 * t5319) * t4867) * t4866, (-t4453 * t5393 - t4456 * t5389 - t4457 * t5385 - t4458 * t5381 + t4982 * t4509 + t4984 * t4508 + t4986 * t4507 + t4988 * t4505 + (-t4453 * t5332 - t4456 * t5324 - t4457 * t5322 - t4458 * t5320) * t4867) * t4866, -t4060 * t5618 - t4071 * t5616 - t4073 * t5615 - t4075 * t5614 + (-t4060 * t6060 - t4071 * t6058 - t4073 * t6057 - t4075 * t6056) * t4867, -t4019 * t6060 - t4029 * t6058 - t4030 * t6057 - t4031 * t6056 + (t4222 * t5465 + t4458 * t5034) * t4859 + (t4221 * t5469 + t4457 * t5036) * t4853 + (t4220 * t5473 + t4456 * t5038) * t4847 + (t4215 * t5477 + t4453 * t5040) * t4838, -t4018 * t6060 - t4026 * t6058 - t4027 * t6057 - t4028 * t6056 + (t4219 * t5465 + t4458 * t5035) * t4859 + (t4218 * t5469 + t4457 * t5037) * t4853 + (t4217 * t5473 + t4456 * t5039) * t4847 + (t4216 * t5477 + t4453 * t5041) * t4838, (t4160 * t5609 + t4161 * t5605 + t4162 * t5604 + t4163 * t5603) * t5900 - (t4458 * t5221 + t4509 * t5840) * t4594 - (t4457 * t5223 + t4508 * t5839) * t4591 - (t4456 * t5225 + t4507 * t5841) * t4588 - (t4453 * t5227 + t4505 * t5842) * t4583, (t4152 * t5609 + t4153 * t5605 + t4154 * t5604 + t4155 * t5603) * t5900 - (t4458 * t5482 + t4509 * t5843) * t4594 - (t4457 * t5483 + t4508 * t5844) * t4591 - (t4456 * t5484 + t4507 * t5845) * t4588 - (t4453 * t5485 + t4505 * t5846) * t4583, -(t4458 * t5220 + t4509 * t5826) * t4594 - (t4457 * t5222 + t4508 * t5827) * t4591 - (t4456 * t5224 + t4507 * t5828) * t4588 - (t4453 * t5226 + t4505 * t5829) * t4583 + ((t4049 * t5609 + t4053 * t5605 + t4054 * t5604 + t4055 * t5603) * t4866 + (-t4259 * t5104 - t4262 * t5100 - t4263 * t5096 - t4264 * t5092) * t4833) * t4924, -(t4458 * t5442 + t4509 * t5823) * t4594 - (t4457 * t5444 + t4508 * t5822) * t4591 - (t4456 * t5446 + t4507 * t5824) * t4588 - (t4453 * t5448 + t4505 * t5825) * t4583 + ((t4048 * t5609 + t4050 * t5605 + t4051 * t5604 + t4052 * t5603) * t4866 + (t4260 * t5104 + t4265 * t5100 + t4266 * t5096 + t4267 * t5092) * t4833) * t4924, (t4466 * t5116 + t4470 * t5114 + t4471 * t5112 + t4472 * t5110) * t5960 + (t4453 * t5211 + t4456 * t5210 + t4457 * t5209 + t4458 * t5208 + t4978 * t4509 + t4979 * t4508 + t4980 * t4507 + t4981 * t4505 + (-t4076 * t5609 - t4077 * t5605 - t4078 * t5604 - t4079 * t5603) * t4924) * t4866, -t4453 * t5648 - t4456 * t5639 - t4457 * t5637 - t4458 * t5635 - (t4458 * t6118 + t4509 * t5834) * t4594 - (t4457 * t6122 + t4508 * t5835) * t4591 - (t4456 * t6126 + t4507 * t5836) * t4588 - (t4453 * t6130 + t4505 * t5838) * t4583 + (t5077 * t5603 + t5081 * t5604 + t5085 * t5605 + t5089 * t5609) * t5900, t4453 * t5193 + t4456 * t5187 + t4457 * t5183 + t4458 * t5179 - (-t4458 * t5380 + t4509 * t5831) * t4594 - (-t4457 * t5384 + t4508 * t5832) * t4591 - (-t4456 * t5388 + t4507 * t5833) * t4588 - (-t4453 * t5392 + t4505 * t5837) * t4583 + (t5076 * t5603 + t5080 * t5604 + t5084 * t5605 + t5088 * t5609) * t5900, 0, -t5962, -t5961, 0; t5688 + t5690 + t5692 + t5694, 0, 0, (t4836 * t5694 + t4842 * t5692 + t4843 * t5690 + t4844 * t5688 + (-t4445 * t6045 + 0.2e1 * t4448 * t5664) * t4891 * t5569 + (-t4444 * t6046 + 0.2e1 * t4447 * t5669) * t4888 * t5574 + (-t4443 * t6047 + 0.2e1 * t4446 * t5674) * t4885 * t5579 + (-t4441 * t6052 + 0.2e1 * t4442 * t5683) * t4584 * t5539) * t4833, (-t4407 * t5598 - t4408 * t5593 - t4409 * t5592 - t4410 * t5591 + t4974 * t6006 + t4975 * t6007 + t4976 * t6008 + t4977 * t6027) * t4833, (t4879 * t5395 + t4885 * t5391 + t4888 * t5387 + t4891 * t5383 + t5011 * t6006 + t5013 * t6007 + t5015 * t6008 + t5017 * t6027 + (-t4882 * t5195 - t4894 * t5189 - t4897 * t5185 - t4900 * t5181) * t4867) * t4866, (t4882 * t5395 + t4894 * t5391 + t4897 * t5387 + t4900 * t5383 + t5010 * t6006 + t5012 * t6007 + t5014 * t6008 + t5016 * t6027 + (t4879 * t5195 + t4885 * t5189 + t4888 * t5185 + t4891 * t5181) * t4867) * t4866, t4060 * t5598 + t4071 * t5593 + t4073 * t5592 + t4075 * t5591 + (t4060 * t6027 + t4071 * t6008 + t4073 * t6007 + t4075 * t6006) * t4867, t4019 * t6027 + t4029 * t6008 + t4030 * t6007 + t4031 * t6006 + (-t4222 * t5259 + t4990) * t4859 + (-t4221 * t5262 + t4991) * t4853 + (-t4220 * t5265 + t4992) * t4847 + (-t4215 * t5268 + t4993) * t4838, t4018 * t6027 + t4026 * t6008 + t4027 * t6007 + t4028 * t6006 + (-t4219 * t5259 + t5075 * t6045) * t4859 + (-t4218 * t5262 + t5079 * t6046) * t4853 + (-t4217 * t5265 + t5083 * t6047) * t4847 + (-t4216 * t5268 + t5087 * t6052) * t4838, t5840 * t6006 + t5839 * t6007 + t5841 * t6008 + t5842 * t6027 + t5221 * t6045 + t5223 * t6046 + t5225 * t6047 + t5227 * t6052 + (t4160 * t5597 + t4161 * t5596 + t4162 * t5595 + t4163 * t5594) * t4924, t5843 * t6006 + t5844 * t6007 + t5845 * t6008 + t5846 * t6027 + t5482 * t6045 + t5483 * t6046 + t5484 * t6047 + t5485 * t6052 + (t4152 * t5597 + t4153 * t5596 + t4154 * t5595 + t4155 * t5594) * t4924, t5826 * t6006 + t5827 * t6007 + t5828 * t6008 + t5829 * t6027 + t5220 * t6045 + t5222 * t6046 + t5224 * t6047 + t5226 * t6052 + (t4049 * t5597 + t4053 * t5596 + t4054 * t5595 + t4055 * t5594 + (-t4259 * t5103 - t4262 * t5099 - t4263 * t5095 - t4264 * t5091) * t4866) * t4924, t5823 * t6006 + t5822 * t6007 + t5824 * t6008 + t5825 * t6027 + t5442 * t6045 + t5444 * t6046 + t5446 * t6047 + t5448 * t6052 + (t4048 * t5597 + t4050 * t5596 + t4051 * t5595 + t4052 * t5594 + (t4260 * t5103 + t4265 * t5099 + t4266 * t5095 + t4267 * t5091) * t4866) * t4924, (-t4076 * t5597 - t4077 * t5596 - t4078 * t5595 - t4079 * t5594) * t4924 + (t6027 * t6134 + t6008 * t6133 + t6007 * t6132 + t6006 * t6131 - (t4368 * t5463 + t6045 * t6089) * t5572 - (t4367 * t5467 + t6046 * t6090) * t5577 - (t4366 * t5471 + t6047 * t6091) * t5582 - (t4362 * t5475 + t6052 * t6092) * t5586 + (t5212 * t6048 + t5213 * t6049 + t5214 * t6050 + t5215 * t6051) * t4924) * t4866, t5834 * t6006 + t5835 * t6007 + t5836 * t6008 + t5838 * t6027 + t4990 + t4991 + t4992 + t4993 + (t5023 * t6048 + t5025 * t6049 + t5027 * t6050 + t5029 * t6051) * t4924, t5831 * t6006 + t5832 * t6007 + t5833 * t6008 + t5837 * t6027 - t5074 * t4890 * t5591 - t5078 * t4887 * t5592 - t5082 * t4884 * t5593 - t5086 * t4878 * t5598 + (t5022 * t6048 + t5024 * t6049 + t5026 * t6050 + t5028 * t6051) * t4924, 0, 0, 0, 0; -t4097 * t4455 - t4102 * t4462 - t4103 * t4463 - t4104 * t4464, 0, 0, (-t4879 * t5340 - t4888 * t5339 - t4891 * t5338 - t4885 * t5337 - (t4595 * t5141 + t6116) * t4464 - (t4592 * t5142 + t6120) * t4463 - (t4589 * t5143 + t6124) * t4462 - (t4584 * t5144 + t6128) * t4455) * t4833, (-t4411 * t4407 - t4414 * t4408 - t4412 * t4409 - t4413 * t4410 - t4455 * t4977 - t4462 * t4976 - t4463 * t4975 - t4464 * t4974) * t4833, (t4411 * t4879 * t4097 + t4414 * t4885 * t4102 + t4412 * t4888 * t4103 + t4413 * t4891 * t4104 - t5011 * t4464 - t5013 * t4463 - t5015 * t4462 - t5017 * t4455 + (-t5337 - t5338 - t5339 - t5340) * t4867) * t4866, (t4411 * t6127 + t4414 * t6123 + t4412 * t6119 + t4413 * t6115 - t5010 * t4464 - t5012 * t4463 - t5014 * t4462 - t5016 * t4455 + (t4879 * t5652 + t4885 * t5649 + t4888 * t5651 + t4891 * t5650) * t4867) * t4866, t4060 * t4411 + t4071 * t4414 + t4073 * t4412 + t4075 * t4413 + (-t4060 * t4455 - t4071 * t4462 - t4073 * t4463 - t4075 * t4464) * t4867, -(t4222 * t5462 + t4031) * t4464 - (t4221 * t5466 + t4030) * t4463 - (t4220 * t5470 + t4029) * t4462 - (t4215 * t5474 + t4019) * t4455 + t5082 * t4414 + t5074 * t4413 + t5078 * t4412 + t5086 * t4411, -(t4219 * t5462 + t4028) * t4464 - (t4218 * t5466 + t4027) * t4463 - (t4217 * t5470 + t4026) * t4462 - (t4216 * t5474 + t4018) * t4455 + t5083 * t4414 + t5075 * t4413 + t5079 * t4412 + t5087 * t4411, t4415 * t4160 + t4416 * t4161 + t4418 * t4162 + t4417 * t4163 + t4411 * t5452 + t4412 * t5450 + t4413 * t5449 + t4414 * t5451 - t4455 * t5842 - t4462 * t5841 - t4463 * t5839 - t4464 * t5840, t4415 * t4152 + t4416 * t4153 + t4418 * t4154 + t4417 * t4155 + t4411 * t5821 + t4412 * t5819 + t4413 * t5818 + t4414 * t5820 - t4455 * t5846 - t4462 * t5845 - t4463 * t5844 - t4464 * t5843, t4415 * t4049 + t4416 * t4053 + t4418 * t4054 + t4417 * t4055 - t5826 * t4464 - t5827 * t4463 - t5828 * t4462 - t5829 * t4455 + t5445 * t4414 + t5441 * t4413 + t5443 * t4412 + t5447 * t4411 + (-t4259 * t5336 - t4262 * t5335 - t4263 * t5333 - t4264 * t5334) * t4866, t4415 * t4048 + t4416 * t4050 + t4418 * t4051 + t4417 * t4052 - t5823 * t4464 - t5822 * t4463 - t5824 * t4462 - t5825 * t4455 + (-t4077 * t4893 + t4186) * t4414 + (-t4079 * t4899 + t4190) * t4413 + (-t4078 * t4896 + t4188) * t4412 + (-t4076 * t4881 + t4184) * t4411 + (t4260 * t5336 + t4265 * t5335 + t4266 * t5333 + t4267 * t5334) * t4866, -t4415 * t4076 - t4416 * t4077 - t4418 * t4078 - t4417 * t4079 + (-t4455 * t6134 - t4462 * t6133 - t4463 * t6132 - t4464 * t6131 + (-t4413 * t4374 * t4440 + (t4417 * t4448 * t4595 + t4464 * t4594 * t6205) * t6093) * t4891 + (-t4412 * t4372 * t4438 + (t4418 * t4447 * t4592 + t4463 * t4591 * t6206) * t6096) * t4888 + (-t4414 * t4370 * t4436 + (t4416 * t4446 * t4589 + t4462 * t4588 * t6207) * t6099) * t4885 + (-t4411 * t4364 * t4425 + (t4455 * t4583 * t6208 + t4415 * t6079) * t6103) * t4879) * t4866, -t5834 * t4464 - t5835 * t4463 - t5836 * t4462 - t5838 * t4455 + (t4417 * t4607 + t4673 * t6083) * t4439 + (t4418 * t4606 + t4672 * t6084) * t4437 + (t4416 * t4605 + t4671 * t6082) * t4435 + (t4415 * t4604 + t4665 * t6085) * t4424 + (-t4417 * t4619 + t4676 * t6083) * t4104 + (-t4418 * t4618 + t4675 * t6084) * t4103 + (-t4416 * t4617 + t4674 * t6082) * t4102 + (-t4415 * t4615 + t4666 * t6085) * t4097, -t5831 * t4464 - t5832 * t4463 - t5833 * t4462 - t5837 * t4455 + (-t4413 * t5986 + t4417 * t4614) * t4439 + (-t4412 * t5987 + t4418 * t4613) * t4437 + (-t4414 * t5988 + t4416 * t4612) * t4435 + (-t4411 * t5989 + t4415 * t4611) * t4424 + (-t4413 * t4676 * t4890 + t4417 * t4622) * t4104 + (-t4412 * t4675 * t4887 + t4418 * t4621) * t4103 + (-t4414 * t4674 * t4884 + t4416 * t4620) * t4102 + (-t4411 * t4666 * t4878 + t4415 * t4616) * t4097, 0, 0, 0, 0;];
tau_reg  = t1;
