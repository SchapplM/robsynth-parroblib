% Calculate vector of centrifugal and coriolis load on the joints for
% P4RRRRR10V1G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [4x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 13:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(6,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: xDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: pkin has to be [6x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V1G1A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 11:38:02
% EndTime: 2020-08-07 11:41:52
% DurationCPUTime: 241.87s
% Computational Cost: add. (1031792->2284), mult. (2686422->3646), div. (84672->17), fcn. (2365940->44), ass. (0->1333)
t3106 = cos(pkin(3));
t3078 = t3106 ^ 2;
t3968 = t3078 - 0.1e1;
t4093 = -2 * pkin(5);
t3171 = rSges(3,3) ^ 2;
t3172 = rSges(3,2) ^ 2;
t3173 = (rSges(2,2) ^ 2);
t3175 = (rSges(2,1) ^ 2);
t3907 = Icges(3,3) - Icges(3,2);
t2867 = Icges(2,2) - Icges(2,1) + t3907 + (-t3173 + t3175) * m(2) + (-t3171 + t3172) * m(3);
t3120 = cos(qJ(3,4));
t3974 = (m(3) * rSges(3,2));
t2999 = rSges(3,1) * t3974 - Icges(3,4);
t3117 = sin(qJ(3,4));
t3726 = t2999 * t3117;
t3556 = -0.2e1 * t3726;
t3174 = rSges(3,1) ^ 2;
t3043 = -t3172 + t3174;
t3908 = Icges(3,2) - Icges(3,1);
t2917 = m(3) * t3043 + t3908;
t3083 = t3120 ^ 2;
t4071 = t2917 * t3083;
t4073 = t3120 * t3556 + t4071;
t3198 = t2867 + t4073;
t3132 = cos(qJ(3,3));
t3123 = sin(qJ(3,3));
t3725 = t2999 * t3123;
t3554 = -0.2e1 * t3725;
t3088 = t3132 ^ 2;
t4070 = t2917 * t3088;
t4074 = t3132 * t3554 + t4070;
t3197 = t2867 + t4074;
t3135 = cos(qJ(3,2));
t3126 = sin(qJ(3,2));
t3724 = t2999 * t3126;
t3552 = -0.2e1 * t3724;
t3093 = t3135 ^ 2;
t4069 = t2917 * t3093;
t4075 = t3135 * t3552 + t4069;
t3196 = t2867 + t4075;
t3138 = cos(qJ(3,1));
t3129 = sin(qJ(3,1));
t3723 = t2999 * t3129;
t3550 = -0.2e1 * t3723;
t3098 = t3138 ^ 2;
t4068 = t2917 * t3098;
t4076 = t3138 * t3550 + t4068;
t3195 = t2867 + t4076;
t3141 = rSges(2,3) + pkin(5);
t3963 = m(2) * t3141;
t3247 = -(rSges(2,1) * t3963) + Icges(2,5) + t2999;
t3910 = t3129 * rSges(3,2);
t3578 = m(3) * t3910;
t3221 = -pkin(5) * t3578 - t3247;
t3975 = m(3) * rSges(3,1);
t3079 = pkin(5) * t3975;
t3755 = t2917 * t3129;
t3767 = (t3079 + t3755) * t3138;
t4055 = 0.2e1 * t2999;
t4092 = t3098 * t4055 + t3221 + t3767;
t3911 = t3126 * rSges(3,2);
t3579 = m(3) * t3911;
t3222 = -pkin(5) * t3579 - t3247;
t3756 = t2917 * t3126;
t3768 = (t3079 + t3756) * t3135;
t4091 = t3093 * t4055 + t3222 + t3768;
t3912 = t3123 * rSges(3,2);
t3580 = m(3) * t3912;
t3223 = -pkin(5) * t3580 - t3247;
t3757 = t2917 * t3123;
t3769 = (t3079 + t3757) * t3132;
t4090 = t3088 * t4055 + t3223 + t3769;
t3913 = t3117 * rSges(3,2);
t3581 = m(3) * t3913;
t3224 = -pkin(5) * t3581 - t3247;
t3758 = t2917 * t3117;
t3770 = (t3079 + t3758) * t3120;
t4089 = t3083 * t4055 + t3224 + t3770;
t3139 = cos(qJ(2,1));
t3101 = t3139 ^ 2;
t3921 = rSges(3,1) * t3129;
t3586 = m(3) * t3921;
t4088 = -t3195 * t3101 + t3586 * t4093;
t3136 = cos(qJ(2,2));
t3096 = t3136 ^ 2;
t3922 = rSges(3,1) * t3126;
t3587 = m(3) * t3922;
t4087 = -t3196 * t3096 + t3587 * t4093;
t3133 = cos(qJ(2,3));
t3091 = t3133 ^ 2;
t3923 = rSges(3,1) * t3123;
t3588 = m(3) * t3923;
t4086 = -t3197 * t3091 + t3588 * t4093;
t3121 = cos(qJ(2,4));
t3086 = t3121 ^ 2;
t3925 = rSges(3,1) * t3117;
t3589 = m(3) * t3925;
t4085 = -t3198 * t3086 + t3589 * t4093;
t3105 = sin(pkin(3));
t3686 = t3105 * t3121;
t3491 = pkin(5) * t3686;
t3118 = sin(qJ(2,4));
t3040 = pkin(1) * t3118;
t2968 = t3040 + pkin(6);
t3750 = t2968 * t3106;
t4072 = t3491 + t3750;
t3041 = pkin(1) * t3086;
t3038 = t3118 * pkin(6);
t4054 = t3038 + pkin(1);
t2906 = t3041 - t4054;
t3297 = t2906 * t3106;
t3063 = pkin(1) * t3091;
t3124 = sin(qJ(2,3));
t3052 = t3124 * pkin(6);
t4053 = t3052 + pkin(1);
t2908 = t3063 - t4053;
t3296 = t2908 * t3106;
t3064 = pkin(1) * t3096;
t3127 = sin(qJ(2,2));
t3054 = t3127 * pkin(6);
t4052 = t3054 + pkin(1);
t2909 = t3064 - t4052;
t3295 = t2909 * t3106;
t3065 = pkin(1) * t3101;
t3130 = sin(qJ(2,1));
t3056 = t3130 * pkin(6);
t4051 = t3056 + pkin(1);
t2910 = t3065 - t4051;
t3294 = t2910 * t3106;
t3689 = t3105 * t3106;
t3981 = -0.2e1 * t3098;
t4067 = t2999 * t3981 - t3767;
t3982 = -0.2e1 * t3093;
t4066 = t2999 * t3982 - t3768;
t3983 = -0.2e1 * t3088;
t4065 = t2999 * t3983 - t3769;
t3984 = -0.2e1 * t3083;
t4064 = t2999 * t3984 - t3770;
t3639 = t3138 * t3139;
t3408 = t3130 * t3639;
t3681 = t3105 * t3129;
t3496 = pkin(6) * t3681;
t3714 = (t3139 + 0.1e1) * (t3139 - 0.1e1);
t3948 = pkin(2) * t3098;
t4063 = t3106 * (t3138 * t4051 + t3139 * t3948) - pkin(2) * t3408 * t3681 + t3496 * t3714;
t3640 = t3135 * t3136;
t3409 = t3127 * t3640;
t3683 = t3105 * t3126;
t3497 = pkin(6) * t3683;
t3715 = (t3136 + 0.1e1) * (t3136 - 0.1e1);
t3949 = pkin(2) * t3093;
t4062 = t3106 * (t3135 * t4052 + t3136 * t3949) - pkin(2) * t3409 * t3683 + t3497 * t3715;
t3641 = t3132 * t3133;
t3410 = t3124 * t3641;
t3685 = t3105 * t3123;
t3498 = pkin(6) * t3685;
t3716 = (t3133 + 0.1e1) * (t3133 - 0.1e1);
t3950 = pkin(2) * t3088;
t4061 = t3106 * (t3132 * t4053 + t3133 * t3950) - pkin(2) * t3410 * t3685 + t3498 * t3716;
t3657 = t3120 * t3121;
t3411 = t3118 * t3657;
t3688 = t3105 * t3117;
t3499 = pkin(6) * t3688;
t3717 = (t3121 + 0.1e1) * (t3121 - 0.1e1);
t3951 = pkin(2) * t3083;
t4060 = t3106 * (t3120 * t4054 + t3121 * t3951) - pkin(2) * t3411 * t3688 + t3499 * t3717;
t4002 = -0.2e1 * pkin(6);
t4001 = 0.2e1 * pkin(6);
t3055 = t3129 * pkin(2);
t3014 = pkin(1) * t3055;
t3644 = t3130 * t3138;
t3510 = pkin(2) * t3644;
t3926 = t3139 * pkin(6);
t2900 = t3510 - t3926;
t3763 = t2900 * t3106;
t2819 = 0.1e1 / (pkin(1) * t3763 + (-t3014 + (pkin(2) * t3639 + t3056) * pkin(5)) * t3105);
t3053 = t3126 * pkin(2);
t3012 = pkin(1) * t3053;
t3649 = t3127 * t3135;
t3511 = pkin(2) * t3649;
t3927 = t3136 * pkin(6);
t2899 = t3511 - t3927;
t3764 = t2899 * t3106;
t2818 = 0.1e1 / (pkin(1) * t3764 + (-t3012 + (pkin(2) * t3640 + t3054) * pkin(5)) * t3105);
t3051 = t3123 * pkin(2);
t3010 = pkin(1) * t3051;
t3654 = t3124 * t3132;
t3512 = pkin(2) * t3654;
t3928 = t3133 * pkin(6);
t2898 = t3512 - t3928;
t3765 = t2898 * t3106;
t2817 = 0.1e1 / (pkin(1) * t3765 + (-t3010 + (pkin(2) * t3641 + t3052) * pkin(5)) * t3105);
t3037 = t3117 * pkin(2);
t3004 = pkin(1) * t3037;
t3660 = t3118 * t3120;
t3514 = pkin(2) * t3660;
t3929 = t3121 * pkin(6);
t2893 = t3514 - t3929;
t3766 = t2893 * t3106;
t2815 = 0.1e1 / (pkin(1) * t3766 + (-t3004 + (pkin(2) * t3657 + t3038) * pkin(5)) * t3105);
t3150 = xP(4);
t3072 = sin(t3150);
t3073 = cos(t3150);
t3163 = koppelP(4,2);
t3167 = koppelP(4,1);
t2888 = -t3072 * t3163 + t3073 * t3167;
t3146 = xDP(4);
t3148 = xDP(2);
t2847 = t2888 * t3146 + t3148;
t2884 = t3072 * t3167 + t3073 * t3163;
t3149 = xDP(1);
t2851 = -t2884 * t3146 + t3149;
t3147 = xDP(3);
t3018 = t3086 - 0.2e1;
t3722 = t3018 * t3117;
t2901 = pkin(2) * t3722 - pkin(5);
t2964 = pkin(5) * t3117 + pkin(2);
t3387 = t2964 - 0.2e1 * t3951;
t3672 = t3106 * t3121;
t3415 = t3105 * t3672;
t3662 = t3117 * t3121;
t3934 = pkin(6) * t3078;
t3967 = -t3086 + 0.1e1;
t2783 = (pkin(6) * t3415 + t2901 * t3078 + t3037 * t3967 + pkin(5)) * t3120 - t4054 * t3662 + (t3387 * t3689 + t3662 * t3934) * t3118;
t3084 = 0.1e1 / t3120;
t2880 = t3105 * (-pkin(5) * t3038 + t3004);
t3955 = pkin(1) * t3106;
t3002 = pkin(6) * t3955;
t3673 = t3106 * t3118;
t3947 = pkin(2) * t3120;
t4000 = 0.1e1 / ((pkin(1) * t3673 + t3491) * t3947 - t3121 * t3002 - t2880);
t4037 = t4000 * t3084;
t3454 = t2783 * t4037;
t3113 = legFrame(4,3);
t3025 = sin(t3113);
t3029 = cos(t3113);
t3119 = sin(qJ(1,4));
t3122 = cos(qJ(1,4));
t2869 = t3025 * t3119 - t3029 * t3122;
t2870 = t3025 * t3122 + t3029 * t3119;
t3450 = t2869 * t3688;
t3659 = t3118 * t3121;
t3495 = pkin(6) * t3659;
t3708 = t3083 * t3118;
t3530 = pkin(2) * t3708;
t4007 = -t2964 * t3118 + (-t2901 * t3120 - t3117 * t3495) * t3689 + t3530 + (pkin(6) * t3657 + t3118 * t3387) * t3078;
t2732 = -t2869 * t4060 + t4007 * t2870 + t3450 * t3040;
t3786 = t2815 * t3084;
t3461 = t2732 * t3786;
t3449 = t2870 * t3688;
t2731 = t4007 * t2869 + t2870 * t4060 - t3449 * t3040;
t3462 = t2731 * t3786;
t2590 = -t2847 * t3462 - t2851 * t3461 + t3147 * t3454;
t3996 = 0.2e1 * t2590;
t3164 = koppelP(3,2);
t3168 = koppelP(3,1);
t2889 = -t3072 * t3164 + t3073 * t3168;
t2848 = t2889 * t3146 + t3148;
t2885 = t3072 * t3168 + t3073 * t3164;
t2852 = -t2885 * t3146 + t3149;
t3022 = t3091 - 0.2e1;
t3721 = t3022 * t3123;
t2903 = pkin(2) * t3721 - pkin(5);
t2970 = pkin(5) * t3123 + pkin(2);
t3386 = t2970 - 0.2e1 * t3950;
t3665 = t3106 * t3133;
t3414 = t3105 * t3665;
t3656 = t3123 * t3133;
t3966 = -t3091 + 0.1e1;
t2788 = (pkin(6) * t3414 + t2903 * t3078 + t3051 * t3966 + pkin(5)) * t3132 - t4053 * t3656 + (t3386 * t3689 + t3656 * t3934) * t3124;
t3089 = 0.1e1 / t3132;
t2881 = t3105 * (-pkin(5) * t3052 + t3010);
t3679 = t3105 * t3133;
t3506 = pkin(5) * t3679;
t3670 = t3106 * t3124;
t3227 = pkin(1) * t3670 + t3506;
t3532 = pkin(1) * t3665;
t3946 = pkin(2) * t3132;
t3999 = 0.1e1 / (-pkin(6) * t3532 + t3227 * t3946 - t2881);
t4038 = t3999 * t3089;
t3453 = t2788 * t4038;
t3114 = legFrame(3,3);
t3026 = sin(t3114);
t3030 = cos(t3114);
t3125 = sin(qJ(1,3));
t3134 = cos(qJ(1,3));
t2874 = t3026 * t3125 - t3030 * t3134;
t2877 = t3026 * t3134 + t3030 * t3125;
t3060 = pkin(1) * t3124;
t3448 = t2874 * t3685;
t3653 = t3124 * t3133;
t3494 = pkin(6) * t3653;
t3703 = t3088 * t3124;
t3528 = pkin(2) * t3703;
t4006 = -t2970 * t3124 + (-t2903 * t3132 - t3123 * t3494) * t3689 + t3528 + (pkin(6) * t3641 + t3124 * t3386) * t3078;
t2737 = -t2874 * t4061 + t4006 * t2877 + t3448 * t3060;
t3784 = t2817 * t3089;
t3457 = t2737 * t3784;
t3445 = t2877 * t3685;
t2734 = t4006 * t2874 + t2877 * t4061 - t3445 * t3060;
t3460 = t2734 * t3784;
t2639 = -t2848 * t3460 - t2852 * t3457 + t3147 * t3453;
t3995 = 0.2e1 * t2639;
t3165 = koppelP(2,2);
t3169 = koppelP(2,1);
t2890 = -t3072 * t3165 + t3073 * t3169;
t2849 = t2890 * t3146 + t3148;
t2886 = t3072 * t3169 + t3073 * t3165;
t2853 = -t2886 * t3146 + t3149;
t3023 = t3096 - 0.2e1;
t3720 = t3023 * t3126;
t2904 = pkin(2) * t3720 - pkin(5);
t2974 = pkin(5) * t3126 + pkin(2);
t3385 = t2974 - 0.2e1 * t3949;
t3664 = t3106 * t3136;
t3413 = t3105 * t3664;
t3651 = t3126 * t3136;
t3965 = -t3096 + 0.1e1;
t2789 = (pkin(6) * t3413 + t2904 * t3078 + t3053 * t3965 + pkin(5)) * t3135 - t4052 * t3651 + (t3385 * t3689 + t3651 * t3934) * t3127;
t3094 = 0.1e1 / t3135;
t2882 = t3105 * (-pkin(5) * t3054 + t3012);
t3678 = t3105 * t3136;
t3505 = pkin(5) * t3678;
t3668 = t3106 * t3127;
t3226 = pkin(1) * t3668 + t3505;
t3945 = pkin(2) * t3135;
t3998 = 0.1e1 / (-t3002 * t3136 + t3226 * t3945 - t2882);
t4039 = t3998 * t3094;
t3452 = t2789 * t4039;
t3115 = legFrame(2,3);
t3027 = sin(t3115);
t3031 = cos(t3115);
t3128 = sin(qJ(1,2));
t3137 = cos(qJ(1,2));
t2875 = t3027 * t3128 - t3031 * t3137;
t2878 = t3027 * t3137 + t3031 * t3128;
t3061 = pkin(1) * t3127;
t3447 = t2875 * t3683;
t3648 = t3127 * t3136;
t3493 = pkin(6) * t3648;
t3698 = t3093 * t3127;
t3526 = pkin(2) * t3698;
t4005 = -t2974 * t3127 + (-t2904 * t3135 - t3126 * t3493) * t3689 + t3526 + (pkin(6) * t3640 + t3127 * t3385) * t3078;
t2738 = -t2875 * t4062 + t4005 * t2878 + t3447 * t3061;
t3783 = t2818 * t3094;
t3456 = t2738 * t3783;
t3444 = t2878 * t3683;
t2735 = t4005 * t2875 + t2878 * t4062 - t3444 * t3061;
t3459 = t2735 * t3783;
t2640 = -t2849 * t3459 - t2853 * t3456 + t3147 * t3452;
t3994 = 0.2e1 * t2640;
t3166 = koppelP(1,2);
t3170 = koppelP(1,1);
t2891 = -t3072 * t3166 + t3073 * t3170;
t2850 = t2891 * t3146 + t3148;
t2887 = t3072 * t3170 + t3073 * t3166;
t2854 = -t2887 * t3146 + t3149;
t3024 = t3101 - 0.2e1;
t3719 = t3024 * t3129;
t2905 = pkin(2) * t3719 - pkin(5);
t2978 = pkin(5) * t3129 + pkin(2);
t3384 = t2978 - 0.2e1 * t3948;
t3663 = t3106 * t3139;
t3412 = t3105 * t3663;
t3646 = t3129 * t3139;
t3964 = -t3101 + 0.1e1;
t2790 = (pkin(6) * t3412 + t2905 * t3078 + t3055 * t3964 + pkin(5)) * t3138 - t4051 * t3646 + (t3384 * t3689 + t3646 * t3934) * t3130;
t3099 = 0.1e1 / t3138;
t2883 = t3105 * (-pkin(5) * t3056 + t3014);
t3677 = t3105 * t3139;
t3504 = pkin(5) * t3677;
t3666 = t3106 * t3130;
t3225 = pkin(1) * t3666 + t3504;
t3944 = pkin(2) * t3138;
t3997 = 0.1e1 / (-t3002 * t3139 + t3225 * t3944 - t2883);
t4040 = t3997 * t3099;
t3451 = t2790 * t4040;
t3116 = legFrame(1,3);
t3028 = sin(t3116);
t3032 = cos(t3116);
t3131 = sin(qJ(1,1));
t3140 = cos(qJ(1,1));
t2876 = t3028 * t3131 - t3032 * t3140;
t2879 = t3028 * t3140 + t3032 * t3131;
t3062 = pkin(1) * t3130;
t3446 = t2876 * t3681;
t3643 = t3130 * t3139;
t3492 = pkin(6) * t3643;
t3693 = t3098 * t3130;
t3524 = pkin(2) * t3693;
t4004 = -t2978 * t3130 + (-t2905 * t3138 - t3129 * t3492) * t3689 + t3524 + (pkin(6) * t3639 + t3130 * t3384) * t3078;
t2739 = -t2876 * t4063 + t4004 * t2879 + t3446 * t3062;
t3782 = t2819 * t3099;
t3455 = t2739 * t3782;
t3443 = t2879 * t3681;
t2736 = t4004 * t2876 + t2879 * t4063 - t3443 * t3062;
t3458 = t2736 * t3782;
t2641 = -t2850 * t3458 - t2854 * t3455 + t3147 * t3451;
t3993 = 0.2e1 * t2641;
t2771 = -t2870 * t3038 + t2869 * t3766 + (-t2870 * t3657 - t3450) * pkin(2);
t3810 = t2771 * t2815;
t2755 = t2847 * t3810;
t2772 = t2869 * t3038 + t2870 * t3766 + (t2869 * t3657 - t3449) * pkin(2);
t3809 = t2772 * t2815;
t2756 = t2851 * t3809;
t3674 = t3106 * t3117;
t3785 = t2815 * (pkin(2) * t3674 + t2893 * t3105);
t2791 = t3147 * t3785;
t2709 = -t2756 - t2755 + t2791;
t4059 = 0.2e1 * t2709;
t2773 = -t2877 * t3052 + t2874 * t3765 + (-t2877 * t3641 - t3448) * pkin(2);
t3808 = t2773 * t2817;
t2757 = t2848 * t3808;
t2776 = t2874 * t3052 + t2877 * t3765 + (t2874 * t3641 - t3445) * pkin(2);
t3805 = t2776 * t2817;
t2760 = t2852 * t3805;
t3671 = t3106 * t3123;
t3781 = t2817 * (pkin(2) * t3671 + t2898 * t3105);
t2792 = t3147 * t3781;
t2716 = -t2760 - t2757 + t2792;
t4058 = 0.2e1 * t2716;
t2774 = -t2878 * t3054 + t2875 * t3764 + (-t2878 * t3640 - t3447) * pkin(2);
t3807 = t2774 * t2818;
t2758 = t2849 * t3807;
t2777 = t2875 * t3054 + t2878 * t3764 + (t2875 * t3640 - t3444) * pkin(2);
t3804 = t2777 * t2818;
t2761 = t2853 * t3804;
t3669 = t3106 * t3126;
t3780 = t2818 * (pkin(2) * t3669 + t2899 * t3105);
t2793 = t3147 * t3780;
t2717 = -t2761 - t2758 + t2793;
t4057 = 0.2e1 * t2717;
t2775 = -t2879 * t3056 + t2876 * t3763 + (-t2879 * t3639 - t3446) * pkin(2);
t3806 = t2775 * t2819;
t2759 = t2850 * t3806;
t2778 = t2876 * t3056 + t2879 * t3763 + (t2876 * t3639 - t3443) * pkin(2);
t3803 = t2778 * t2819;
t2762 = t2854 * t3803;
t3667 = t3106 * t3129;
t3779 = t2819 * (pkin(2) * t3667 + t2900 * t3105);
t2794 = t3147 * t3779;
t2718 = -t2762 - t2759 + t2794;
t4056 = 0.2e1 * t2718;
t3594 = 0.2e1 * t3105;
t4050 = Icges(2,3) + (t3173 + t3175) * m(2);
t3976 = m(2) * rSges(2,2);
t3601 = rSges(2,1) * t3976;
t4049 = -t3601 + Icges(2,4);
t3181 = pkin(2) ^ 2;
t2587 = t3181 * t2590;
t3082 = t3120 * t3083;
t4048 = t2587 * t3082;
t2630 = t3181 * t2639;
t3087 = t3132 * t3088;
t4047 = t2630 * t3087;
t2631 = t3181 * t2640;
t3092 = t3135 * t3093;
t4046 = t2631 * t3092;
t2632 = t3181 * t2641;
t3097 = t3138 * t3098;
t4045 = t2632 * t3097;
t3178 = pkin(6) ^ 2;
t3707 = t3083 * t3181;
t3352 = -t3178 + t3707;
t4044 = t2869 * t3352;
t3702 = t3088 * t3181;
t3351 = -t3178 + t3702;
t4043 = t2874 * t3351;
t3697 = t3093 * t3181;
t3350 = -t3178 + t3697;
t4042 = t2875 * t3350;
t3692 = t3098 * t3181;
t3349 = -t3178 + t3692;
t4041 = t2876 * t3349;
t2965 = t3037 + pkin(5);
t3752 = t2965 * t3105;
t3436 = t3122 * t3752;
t2827 = t2968 * t3119 - t3118 * t3436;
t2966 = 0.2e1 * t3038 + pkin(1);
t2843 = t2966 * t3119 - t3436;
t3437 = t3119 * t3752;
t3220 = t2968 * t3122 + t3118 * t3437;
t3238 = t2966 * t3122 + t3437;
t3279 = t3352 * t2870;
t3518 = t3106 * t3947;
t3337 = t2869 * t3518;
t2744 = (t3337 * t4001 + t3279) * t3086 + ((t2843 * t3029 + t3025 * t3238) * t3947 - t3673 * t4044) * t3121 + (t2827 * t3029 + t3025 * t3220 - t3337) * pkin(6);
t3522 = t3105 * t3947;
t2795 = 0.1e1 / ((-pkin(5) * t3522 + t3002) * t3121 - t3514 * t3955 + t2880);
t3182 = 0.1e1 / pkin(2);
t3675 = t3105 * t3182;
t3419 = t3084 * t3675;
t3320 = t2795 * t3419;
t3274 = t2744 * t3320;
t3336 = t2870 * t3518;
t2743 = (t3336 * t4002 + t4044) * t3086 + ((t3025 * t2843 - t3029 * t3238) * t3947 + t3279 * t3673) * t3121 + (t3025 * t2827 - t3029 * t3220 + t3336) * pkin(6);
t3275 = t2743 * t3320;
t2959 = (0.2e1 * t3078 - 0.2e1) * pkin(6);
t3718 = (t3106 + 0.1e1) * (t3106 - 0.1e1);
t3420 = t3181 * t3718;
t3312 = t3083 * t3420;
t3435 = t2965 * t3673;
t3487 = pkin(6) - t3934;
t3503 = t3078 * t3038;
t2784 = -t3312 * t3659 + (t2959 * t3086 + t2965 * t3415 + t3040 + t3487) * t3947 - ((-t3503 + t4054) * t3121 - t3105 * t3435) * pkin(6);
t3706 = t3084 * t3182;
t3324 = t2784 * t4000 * t3706;
t2653 = -t2847 * t3274 + t2851 * t3275 + t3147 * t3324;
t2650 = pkin(2) * t2653;
t3882 = t2590 * t3117;
t2500 = -pkin(6) * t3882 + t2650;
t2584 = t2590 * pkin(6);
t2646 = t2653 * t3037;
t2501 = t2646 - t2584;
t2649 = t2653 * t3181;
t2502 = -pkin(5) * t2584 + t2649;
t3943 = pkin(5) * t2653;
t2503 = -t2584 + t3943;
t2580 = pkin(2) * t3882;
t2585 = t3178 * t2590;
t2588 = pkin(1) * t2590;
t3866 = t2653 * t3118;
t2647 = pkin(1) * t3866;
t2651 = pkin(1) * t2653;
t3179 = pkin(5) ^ 2;
t3603 = pkin(1) ^ 2 + t3179;
t3389 = t3181 + t3603;
t2942 = t3178 + t3389;
t3154 = pkin(5) / 0.2e1;
t2950 = t3037 + t3154;
t2951 = t3038 / 0.2e1 + pkin(1);
t3003 = pkin(5) * t3037;
t3005 = pkin(1) * t3038;
t3074 = t3179 + t3181;
t3077 = t3106 * t3078;
t3085 = t3121 * t3086;
t3977 = pkin(6) * pkin(1);
t3103 = 0.2e1 * t3977;
t3176 = 2 * pkin(5);
t3104 = pkin(2) * t3176;
t3177 = -0.2e1 * pkin(1);
t3285 = pkin(2) * t2503 + t2502 * t3117;
t3438 = t2964 * t3659;
t3935 = pkin(6) * t2709;
t3289 = t3438 * t3935;
t3303 = -0.3e1 * t3181 - t3178 - t3603;
t3434 = t2965 * t3659;
t3308 = t2709 * t3434;
t3341 = t2709 * t3499;
t3356 = t3018 * t3078 - t3086;
t3375 = t2709 * t3594;
t3602 = t3181 - t3178;
t3394 = t3003 + t3602;
t2586 = pkin(5) * t2590;
t2648 = t2653 * pkin(6);
t3630 = t2586 + t2648;
t3398 = -t2647 - t3630;
t3469 = t2709 * t3686;
t3687 = t3105 * t3118;
t3470 = t2709 * t3687;
t3474 = t2653 * t4037;
t3883 = t2590 * t3106;
t3490 = pkin(1) * t3883;
t3529 = t3086 * t3037;
t3956 = pkin(1) * t3105;
t3536 = t3086 * t3956;
t3544 = t2590 * t3040;
t3545 = pkin(6) * t3968;
t3607 = t3179 / 0.3e1 + t3181;
t3608 = -t3178 / 0.3e1 - 0.2e1 / 0.3e1 * t3181;
t3609 = t3178 / 0.2e1 + t3181;
t3618 = t2648 + t2586 / 0.2e1;
t2477 = t2580 + t3630;
t3634 = t2477 * t3118 + t2651;
t3658 = t3118 * t3178;
t3705 = t3086 * t3178;
t3709 = t3082 * t3181;
t3751 = t4054 * t3105;
t3844 = t2709 * t3121;
t3847 = t2709 * t3105;
t3865 = t2653 * t3121;
t3897 = t2503 * t3118;
t3901 = (pkin(2) * t2590 + t3117 * t3630) * t3086;
t3980 = -0.2e1 * t3105;
t3985 = -0.2e1 * t3078;
t3987 = -0.4e1 * t2965;
t2447 = -(0.3e1 * ((t3086 - 0.4e1 / 0.3e1) * t3709 + ((-0.2e1 / 0.3e1 * t3003 + t3608) * t3086 + 0.4e1 / 0.3e1 * t3003 + t3607) * t3120 + (0.4e1 / 0.3e1 * t3951 - 0.2e1 / 0.3e1 * t2964) * t3495) * t2709 * t3077 + (t3018 * t4048 - ((t2588 + t3897) * t3121 + (t3987 + t3529) * t3470) * t3951 + (-t2585 + t2587 + (-0.4e1 * t2950 * t3469 - t3544) * pkin(6) + (0.2e1 * t3085 * t3341 - t3901 + 0.2e1 * (t2647 + t3618) * t3117) * pkin(2)) * t3120 + (t3285 * t3121 + (-t3104 + (-t3074 + t3705) * t3117) * t3847) * t3118) * t3078 + ((-0.3e1 * t3086 + 0.3e1) * t2709 * t3709 - (t2653 * t3536 + 0.2e1 * t2966 * t3844 + (t2651 + (t2580 + t3618) * t3118) * t3980) * t3951 + (((t2503 + t3544) * t3037 + t2502) * t3686 + (0.2e1 * (t3003 + t3609) * t3086 - 0.4e1 * t3003 - 0.2e1 * t3005 + t3303) * t2709) * t3120 + t2500 * t3536 + 0.2e1 * t3289 - t3105 * ((pkin(6) * t3866 + t2651) * pkin(2) + (-t3658 - t3977) * t3882)) * t3106 + t3967 * t4048 + (t2503 * t3121 + (-t3037 - t3176 + t3529) * t3847) * t3530 + (-t2587 + (t3901 + ((-pkin(6) * t3085 + t2968 * t3121) * t3375 + t3398) * t3117) * pkin(2)) * t3120 - 0.2e1 * t2951 * t3086 * t3341 - t3285 * t3659 + ((t2942 * t3118 + t3103) * t3117 + t3118 * t3104) * t3847) * t2709 * t3786 - ((t2709 * t3356 + t2709 - t3883) * t3709 + (-t3121 * t3490 + t3634 * t3105 + (-t3121 * (-t3038 + pkin(1)) * t3078 + (0.2e1 * t2950 * t3689 - t3929) * t3118) * t2709) * t3951 + (t4072 * t2501 + (-(t3005 - t3394) * t3078 + (-pkin(6) * t2965 + t3004 * t3118) * t3415 + (-t3078 * t3086 - t3967) * pkin(2) * t2964) * t2709) * t3120 - t3078 * t3289 - t3341 * t3297 + t3289 - t2500 * t3751) * t2590 * t4037 + ((-t2590 * t3751 + ((t3041 - 0.2e1 * t3038 + t3177) * t3689 + t3968 * pkin(5) * t3659) * t2709) * t3083 + ((-t2964 * t3469 + t2650) * t3106 + ((t2968 * t3985 + t3086 * t3545 + t2968) * t2709 - t4072 * t2590) * t3117) * t3120 - t3078 * t3308 + (pkin(1) * t3865 - t2906 * t3847) * t3106 + ((-t2503 - t2646) * t3118 + t2588) * t3105 + t3308) * pkin(2) * t3474;
t3713 = t3078 * t2709;
t2508 = t3713 + t3883 / 0.2e1 + t2756 / 0.2e1 + t2755 / 0.2e1 - t2791 / 0.2e1;
t3846 = t2709 * t3106;
t2535 = t2590 + t3846;
t2583 = -0.2e1 * t2584;
t2969 = 0.2e1 * t3003;
t3152 = -0.3e1 * t3178;
t3180 = pkin(2) * t3181;
t3379 = pkin(6) * t2646;
t3283 = t2585 - t3379;
t3610 = t3077 - t3106;
t3302 = t3610 * t4001;
t3304 = 0.3e1 * t3178 + t3389;
t3316 = t3105 * t3434;
t3421 = t3120 * t3718;
t3325 = t2709 * t3421;
t3348 = t3674 * t2651;
t3676 = t3105 * t3181;
t3388 = t3676 * t4001;
t3606 = t3179 / 0.2e1 + t3181 / 0.2e1;
t3390 = t3178 + t3606;
t3547 = t3180 * t3594;
t3596 = pkin(6) * t3947;
t3867 = t2653 * t3105;
t3933 = pkin(6) * t3105;
t3979 = pkin(6) / 0.2e1;
t4003 = 0.2e1 * pkin(1);
t2451 = (-t3105 * pkin(2) * (t3152 + t3707) * t3085 * t3325 + (((t2583 + t3943) * t3037 + t2649 + (t3846 * t3987 - 0.2e1 * t2586 - t2648) * pkin(6)) * pkin(2) * t3421 + ((t3490 + (t4003 + 0.3e1 * t3038 - 0.3e1 * t3503) * t2709) * t3707 + pkin(6) * (t2501 * t3955 + (t2951 * t4002 + t3078 * t3658) * t2709)) * t3105) * t3086 + (t2508 * t3082 * t3547 + (t3435 * t4059 + t3634) * t3312 + ((-(t2646 + t2583) * t3040 + t3283) * t3106 + ((t3003 + t3390) * t3985 + t2969 + 0.4e1 * t3005 + t3304) * t2709) * t3522 + (t3968 * (t2503 * t3037 + t2502) - t2965 * t2709 * t3302) * t3038) * t3121 + t2508 * t3388 * t3708 + ((t2580 - t3398) * t3078 - t2647 - t2477 + t3610 * t2965 * t4059) * t3596 + ((-pkin(1) * t2501 + t3118 * t3283) * t3106 + (t3103 + ((t3003 + t3606) * t3985 + t2969 + t2942) * t3118) * t2709) * t3933) * t2795 * t2709 * t3706 + (-t3121 * t3180 * t2535 * t3082 - (t2535 * t3038 + t2588 + (t3086 * t3955 - t3316) * t2709) * t3707 - 0.2e1 * ((-t2646 / 0.2e1 + t2584 / 0.2e1) * t3121 + ((t3040 + t3979) * t3672 + (t3086 - 0.1e1 / 0.2e1) * t3752) * t2709) * t3596 + (t2501 * t4054 + (t3297 - t3316) * t3935) * pkin(6)) * t4000 * t2590 * t3419 - (t3394 * t3086 * t3325 + ((t3718 * t3844 * t4054 + pkin(1) * t3867) * t3083 + (-(-t2650 + (t2709 * t3750 - t2503) * t3117) * t3686 + t3118 * t3348) * t3120) * pkin(2) + (-t3121 * t3348 - ((t2588 - t3897) * t3117 - pkin(2) * t3866) * t3105 + (t3297 * t3688 + (t2968 * t3120 + t3438) * t3968) * t2709) * pkin(6)) * t3474;
t3284 = t2585 - 0.2e1 * t3379;
t3604 = t3178 + t3181;
t2463 = (t2650 ^ 2 + (t2535 * t3707 + t3284) * t2590 + ((-(t3018 * t3707 - t3705) * t3078 + t3707 * t3717 - t3705 + t3003 + t3005 + (-(t3411 * t4001 + t2964) * t3078 + t2966 * t3657) * pkin(2) + t3604) * t2709 + (-t2649 * t3121 + (-(t2580 + t2648) * t3660 - t2893 * t3882 - pkin(2) * t3865 + (t2590 * t3662 - t2653 * t3660) * pkin(6)) * pkin(2)) * t3105 + (-t2893 * t2950 * t3375 + (t3178 + t3707) * t2590 + t3284) * t3106) * t2709) * t2815;
t3973 = rSges(3,3) * m(3);
t3599 = rSges(3,2) * t3973;
t2994 = -Icges(3,6) + t3599;
t2644 = t2653 * t2994;
t2499 = t2590 * t3556 + t2644;
t2902 = (rSges(2,2) * t3963) - pkin(5) * t3973 - Icges(2,6);
t2576 = t2902 * t2590;
t2963 = -t3973 + t3976;
t2577 = t2590 * t2963;
t2578 = t4049 * t2590;
t2579 = t2590 * t2994;
t2589 = t2590 ^ 2;
t2642 = t2653 * t3758;
t3600 = rSges(3,1) * t3973;
t2997 = -Icges(3,5) + t3600;
t2645 = t2653 * t2997;
t3442 = t2917 * t3687;
t2700 = t2709 * t3442;
t3739 = t2994 * t3117;
t3255 = t2997 * t3120 - t3739;
t2833 = -t4049 - t3255;
t2915 = t2997 * t3117;
t2855 = t2902 - t2915;
t3906 = 0.2e1 * m(3);
t2916 = t3043 * t3906 - (2 * Icges(3,1)) + (2 * Icges(3,2));
t2995 = 0.2e1 * t2994;
t2996 = 0.2e1 * t2997;
t3000 = 0.4e1 * t2999;
t3635 = pkin(5) * t3974;
t3048 = 2 * t3635;
t3049 = -2 * t3635;
t3144 = pkin(1) * rSges(3,1);
t3081 = m(3) * t3144;
t3050 = 0.2e1 * t3081;
t3203 = (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + (t3173 + ((t3176 + rSges(2,3)) * rSges(2,3)) + t3603) * m(2) + (t3171 + t3174 + t3603) * m(3) + Icges(2,1) + Icges(3,2) + Icges(1,3);
t3212 = -((rSges(2,1) + t3141) * (-rSges(2,1) + t3141) * m(2)) - Icges(2,1) + Icges(2,3) + (-t3179 - t3043) * m(3) - t3908;
t3548 = -0.2e1 * t3689;
t3957 = pkin(1) * t2963;
t3598 = -0.2e1 * t3957;
t3611 = 2 * t4049;
t3738 = t2994 * t3120;
t3145 = m(2) * rSges(2,1);
t2932 = -t3145 + t3581;
t3961 = pkin(1) * t2932;
t2704 = (0.2e1 * t2833 * t3659 + t2916 * t3083 + (-t3000 * t3117 + t3049) * t3120 + t3212 + t4085) * t3078 + ((t2855 - t3738) * t3121 + t3118 * t4089) * t3548 + ((t2996 * t3118 + t3050) * t3120 + (-t2995 * t3117 + t3611) * t3118 - 0.2e1 * t3961) * t3121 - t4071 + (t3117 * t4055 + t3048) * t3120 + t3118 * t3598 + t3203 - t4085;
t2913 = t2994 * t3121;
t3329 = Icges(3,1) + (t3171 + t3172) * m(3) + t4050;
t3924 = rSges(3,1) * t3120;
t2751 = (-t3121 * t2855 + t2913 * t3120 + (-t3224 + t4064) * t3118) * t3105 + ((-t2963 * t3118 + (m(3) * t3924 - t2932) * t3121) * pkin(1) + t3329 + t4073) * t3106;
t2912 = t3118 * t2994;
t3605 = t3172 + t3174;
t2936 = m(3) * t3605 + Icges(3,3);
t3661 = t3118 * t2997;
t3939 = pkin(5) * t3121;
t3972 = pkin(1) * rSges(3,2);
t4017 = rSges(3,2) * t3120 + t3925;
t2779 = ((-t3661 - m(3) * (rSges(3,2) * t3939 + t3144)) * t3120 + (t2912 - m(3) * (rSges(3,1) * t3939 - t3972)) * t3117 - t3121 * t2936) * t3105 - t3106 * (-Icges(3,5) * t3117 - t3120 * Icges(3,6) + t4017 * m(3) * (rSges(3,3) + t3040));
t2941 = -0.2e1 * m(3) * t3174 - Icges(3,3) - t3908;
t2943 = -t3599 / 0.2e1 + Icges(3,6) / 0.2e1;
t2944 = t3600 / 0.2e1 - Icges(3,5) / 0.2e1;
t2945 = -t3601 / 0.2e1 + Icges(2,4) / 0.2e1;
t3407 = t2653 * t3079;
t3885 = t2590 * t2997;
t3234 = t3407 - t3885;
t3555 = 0.4e1 * t3726;
t3251 = t3555 + t3635;
t2652 = t2653 ^ 2;
t2504 = t2589 + t2652;
t3371 = t2504 * t3581;
t3597 = m(3) * t3956;
t3383 = t2652 * t3597;
t3540 = t2709 * t3961;
t3546 = -0.2e1 * t3081;
t3868 = t2653 * t3083;
t3569 = 0.2e1 * t3868;
t3884 = t2590 * t2999;
t3576 = 0.2e1 * t3884;
t3585 = t2653 * t3974;
t3593 = t2504 * t3975;
t3619 = t2590 * t2867 + t2653 * t2915;
t3629 = -t2589 + t2652;
t3727 = t2999 * t3105;
t3740 = t2994 * t3105;
t3845 = t2709 * t3118;
t3869 = t2653 * t2999;
t3905 = ((t2642 / 0.2e1 - t3885) * t3120 + t2590 * t3739 - t2578 + (t3083 - 0.1e1 / 0.2e1) * t3869) * t3086;
t3978 = pkin(5) * m(3);
t3992 = -0.2e1 * t2709;
t4036 = -t2447 * t2751 - t2451 * t2779 + t2463 * t2704 + 0.4e1 * (t3905 + (t2499 * t3120 + t2590 * t4071 + t3619) * t3659 / 0.2e1 + (t2944 * t2590 - t2642) * t3120 + t2943 * t3882 + t2945 * t2590 + ((t3984 + 0.1e1) * t2999 + (-t3924 / 0.2e1 + t3913 / 0.2e1) * t3978) * t2653) * t3713 + (((-t2653 * t3906 * t4017 - t2577) * t2588 + (-t2644 * t3117 + t2645 * t3120 + (t3635 * t3117 + t3247 + t4064) * t2590) * t3375) * t3121 + 0.4e1 * (-t2700 - t3884) * t3868 + ((-0.2e1 * (-t2653 * t3251 + t2579) * t3847 - pkin(1) * t3593) * t3118 - (t3758 * t3996 + t2645) * t2653) * t3120 + (0.2e1 * (t2653 * t2917 + t3117 * t3234 + t2576) * t3847 - (t2589 * t3145 - t3371) * pkin(1)) * t3118 + t2653 * (t2653 * t3739 + t3576)) * t3106 - 0.4e1 * t2709 * t3905 + ((-t2590 * t3727 - t2917 * t3845) * t3083 * t3996 + ((-pkin(5) * t3593 - t2589 * t3758) * t3105 + (-pkin(1) * t3585 - t2499 * t3118) * t4059) * t3120 - 0.2e1 * t3619 * t3845 + (pkin(5) * t3371 + t2589 * t3247) * t3105 + pkin(1) * (t2653 * t3589 + t2577) * t3992) * t3121 + (-t2590 * t3442 + t2709 * t4055) * t3569 + ((t3629 * t3740 + (t2709 * t3546 + (t3048 + t3555) * t3867) * t2590) * t3118 + rSges(3,2) * t3383 + (-t2642 - t3234) * t3992) * t3120 + (((t2997 * t3629 + t3407 * t3996) * t3117 + (-t2653 * t2941 + t2576) * t2590) * t3105 + t3540 * t3996) * t3118 + t3383 * t3925 + ((-pkin(5) * t3585 + t2579) * t3117 - t2578 - t3869) * t4059;
t3878 = t2639 * t3123;
t2982 = t3060 + pkin(6);
t2971 = t3051 + pkin(5);
t3749 = t2971 * t3105;
t3432 = t3134 * t3749;
t2829 = t2982 * t3125 - t3124 * t3432;
t2972 = 0.2e1 * t3052 + pkin(1);
t2844 = t2972 * t3125 - t3432;
t3433 = t3125 * t3749;
t3219 = t2982 * t3134 + t3124 * t3433;
t3237 = t2972 * t3134 + t3433;
t3278 = t3351 * t2877;
t3517 = t3106 * t3946;
t3335 = t2874 * t3517;
t2748 = (t3335 * t4001 + t3278) * t3091 + ((t2844 * t3030 + t3026 * t3237) * t3946 - t3670 * t4043) * t3133 + (t2829 * t3030 + t3026 * t3219 - t3335) * pkin(6);
t3521 = t3105 * t3946;
t2802 = 0.1e1 / ((-pkin(5) * t3521 + t3002) * t3133 - t3512 * t3955 + t2881);
t3418 = t3089 * t3675;
t3319 = t2802 * t3418;
t3270 = t2748 * t3319;
t3332 = t2877 * t3517;
t2745 = (t3332 * t4002 + t4043) * t3091 + ((t3026 * t2844 - t3030 * t3237) * t3946 + t3278 * t3670) * t3133 + (t3026 * t2829 - t3030 * t3219 + t3332) * pkin(6);
t3273 = t2745 * t3319;
t3311 = t3088 * t3420;
t3502 = t3078 * t3052;
t2785 = -t3311 * t3653 + (t2959 * t3091 + t2971 * t3414 + t3060 + t3487) * t3946 - ((-t3502 + t4053) * t3133 - t3670 * t3749) * pkin(6);
t3701 = t3089 * t3182;
t3323 = t2785 * t3999 * t3701;
t2681 = -t2848 * t3270 + t2852 * t3273 + t3147 * t3323;
t3954 = pkin(2) * t2681;
t2509 = pkin(6) * t3878 - t3954;
t2621 = t2639 * pkin(6);
t2666 = t2681 * t3051;
t2512 = t2666 - t2621;
t3942 = pkin(5) * t2681;
t2518 = -t2621 + t3942;
t2627 = pkin(5) * t2639;
t2612 = t2627 / 0.2e1;
t2624 = t3178 * t2639;
t2633 = pkin(1) * t2639;
t2675 = pkin(1) * t2681;
t2952 = t3051 + t3154;
t2953 = t3052 / 0.2e1 + pkin(1);
t3009 = pkin(5) * t3051;
t3015 = pkin(1) * t3052;
t3090 = t3133 * t3091;
t3638 = t3181 * t2681;
t3359 = -pkin(5) * t2621 + t3638;
t3230 = (-pkin(2) * t2518 - t3123 * t3359) * t3133;
t3288 = t2716 * t2970 * t3494;
t3431 = t2971 * t3653;
t3307 = t2716 * t3431;
t3328 = t3968 * t3653;
t3340 = t2716 * t3498;
t3355 = t3022 * t3078 - t3091;
t3374 = t2716 * t3594;
t3393 = t3009 + t3602;
t3861 = t2681 * t3124;
t2669 = pkin(1) * t3861;
t2672 = t2681 * pkin(6);
t3614 = t2669 + t2672;
t3397 = -t2627 - t3614;
t3467 = t2716 * t3679;
t3684 = t3105 * t3124;
t3468 = t2716 * t3684;
t3473 = t2681 * t4038;
t3527 = t3091 * t3051;
t3535 = t3091 * t3956;
t3543 = t2639 * t3060;
t2607 = pkin(2) * t3878;
t3628 = t2607 + t2672;
t3625 = t2627 + t2672;
t2484 = t2607 + t3625;
t3633 = t2484 * t3124 + t2675;
t3652 = t3124 * t3178;
t3700 = t3091 * t3178;
t3704 = t3087 * t3181;
t3743 = t2982 * t3106;
t3748 = t4053 * t3105;
t3833 = t2716 * t3133;
t3836 = t2716 * t3105;
t3837 = t2716 * t3077;
t3860 = t2681 * t3133;
t3879 = t2639 * t3106;
t3896 = t2518 * t3124;
t3900 = (pkin(2) * t2639 + t3123 * t3625) * t3091;
t2449 = -(0.3e1 * ((t3091 - 0.4e1 / 0.3e1) * t3704 + ((-0.2e1 / 0.3e1 * t3009 + t3608) * t3091 + 0.4e1 / 0.3e1 * t3009 + t3607) * t3132 + (0.4e1 / 0.3e1 * t3950 - 0.2e1 / 0.3e1 * t2970) * t3494) * t3837 + (t3022 * t4047 - ((t2633 + t3896) * t3133 + (-0.4e1 * t2971 + t3527) * t3468) * t3950 + (t2630 - t2624 + (-0.4e1 * t2952 * t3467 - t3543) * pkin(6) + (0.2e1 * t3090 * t3340 - t3900 + 0.2e1 * (t2612 + t3614) * t3123) * pkin(2)) * t3132 - (t3230 + (t3104 + (t3074 - t3700) * t3123) * t3836) * t3124) * t3078 + ((-0.3e1 * t3091 + 0.3e1) * t2716 * t3704 - (t2681 * t3535 + 0.2e1 * t2972 * t3833 + (t2675 + (t2612 + t3628) * t3124) * t3980) * t3950 + (((t2518 + t3543) * t3051 + t3359) * t3679 + (0.2e1 * (t3009 + t3609) * t3091 - 0.4e1 * t3009 - 0.2e1 * t3015 + t3303) * t2716) * t3132 - t2509 * t3535 + 0.2e1 * t3288 + (-(pkin(6) * t3861 + t2675) * pkin(2) + (t3652 + t3977) * t3878) * t3105) * t3106 + t3966 * t4047 + (t2518 * t3133 + (-t3051 - t3176 + t3527) * t3836) * t3528 + (-t2630 + (t3900 + ((-pkin(6) * t3090 + t2982 * t3133) * t3374 + t3397) * t3123) * pkin(2)) * t3132 - 0.2e1 * t2953 * t3091 * t3340 + t3124 * t3230 + ((t2942 * t3124 + t3103) * t3123 + t3124 * t3104) * t3836) * t2716 * t3784 - ((t2716 * t3355 + t2716 - t3879) * t3704 - (t2639 * t3532 - t3633 * t3105 + (t3133 * (-t3052 + pkin(1)) * t3078 + (t2952 * t3548 + t3928) * t3124) * t2716) * t3950 + ((t3506 + t3743) * t2512 + (-(t3015 - t3393) * t3078 + (-pkin(6) * t2971 + t3010 * t3124) * t3414 + (-t3078 * t3091 - t3966) * pkin(2) * t2970) * t2716) * t3132 - t3078 * t3288 - t3340 * t3296 + t3288 + t2509 * t3748) * t2639 * t4038 + ((-t2639 * t3748 + ((t3063 - 0.2e1 * t3052 + t3177) * t3689 + pkin(5) * t3328) * t2716) * t3088 + ((-t2970 * t3467 - t2509) * t3106 + ((t2982 * t3985 + t3091 * t3545 + t2982) * t2716 - t3227 * t2639) * t3123) * t3132 - t3078 * t3307 + (pkin(1) * t3860 - t2908 * t3836) * t3106 + ((-t2518 - t2666) * t3124 + t2633) * t3105 + t3307) * pkin(2) * t3473;
t3712 = t3078 * t2716;
t2524 = t3712 + t3879 / 0.2e1 + t2760 / 0.2e1 + t2757 / 0.2e1 - t2792 / 0.2e1;
t3835 = t2716 * t3106;
t2538 = t2639 + t3835;
t2618 = -0.2e1 * t2621;
t3565 = 0.2e1 * t3835;
t3367 = t2971 * t3565;
t2705 = pkin(6) * t3367;
t2985 = 0.2e1 * t3009;
t3378 = pkin(6) * t2666;
t3282 = t2624 - t3378;
t3315 = t3105 * t3431;
t3347 = t3671 * t2675;
t3424 = t3091 * t3718;
t3531 = pkin(2) * t3718;
t3862 = t2681 * t3105;
t3909 = pkin(2) * t4001;
t2452 = (((pkin(1) * t3879 + (t4003 + 0.3e1 * t3052 - 0.3e1 * t3502) * t2716) * t3088 * t3676 + (t2512 * t3955 + (t2953 * t4002 + t3078 * t3652) * t2716) * t3933) * t3091 + (t2524 * t3087 * t3547 + (t3124 * t3367 + t3633) * t3311 + ((-(t2666 + t2618) * t3060 + t3282) * t3106 + ((t3009 + t3390) * t3985 + t2985 + 0.4e1 * t3015 + t3304) * t2716) * t3521 + (-t3968 * (-t2518 * t3051 - t3359) - t2971 * t2716 * t3302) * t3052) * t3133 + t2524 * t3388 * t3703 - (t2705 + (-0.2e1 * t2971 * t3837 - (t2607 - t3397) * t3078 + t2669 + t2484) * pkin(6)) * t3946 + ((-pkin(1) * t2512 + t3124 * t3282) * t3106 + (t3103 + ((t3009 + t3606) * t3985 + t2985 + t2942) * t3124) * t2716) * t3933 + (-(t3152 + t3702) * t3090 * t3836 + (-0.2e1 * t2705 + (t2618 + t3942) * t3051 + t3638 + (t2627 + t2672 / 0.2e1) * t4002) * t3091) * t3132 * t3531) * t2802 * t2716 * t3701 - (t3133 * t3180 * t2538 * t3087 + (t2538 * t3052 + t2633 + (t3091 * t3955 - t3315) * t2716) * t3702 + ((-t2666 / 0.2e1 + t2621 / 0.2e1) * t3133 + ((t3060 + t3979) * t3665 + (t3091 - 0.1e1 / 0.2e1) * t3749) * t2716) * t3132 * t3909 - (t2512 * t4053 + (t3296 - t3315) * t2716 * pkin(6)) * pkin(6)) * t3999 * t2639 * t3418 - ((t3718 * t3833 * t4053 + pkin(1) * t3862) * t3950 + (t2716 * t3393 * t3424 + (-(-t3954 + (t2716 * t3743 - t2518) * t3123) * t3679 + t3124 * t3347) * pkin(2)) * t3132 + (-t3133 * t3347 - ((t2633 - t3896) * t3123 - pkin(2) * t3861) * t3105 + (t2982 * t3132 * t3968 + t2970 * t3328 + t3296 * t3685) * t2716) * pkin(6)) * t3473;
t2464 = ((t2538 * t3702 + t3282) * t2639 - t2509 * t3954 + ((-(t3022 * t3702 - t3700) * t3078 + t3702 * t3716 - t3700 + t3009 + t3015 + (-(t3410 * t4001 + t2970) * t3078 + t2972 * t3641) * pkin(2) + t3604) * t2716 + (-t3133 * t3638 + (-t3628 * t3654 - t2898 * t3878 - pkin(2) * t3860 + (t2639 * t3656 - t2681 * t3654) * pkin(6)) * pkin(2)) * t3105 + (-0.2e1 * t3378 + t2624 - t2898 * t2952 * t3374 + (t3178 + t3702) * t2639) * t3106) * t2716) * t2817;
t2660 = t2681 * t2994;
t2505 = t2639 * t3554 + t2660;
t2594 = t2902 * t2639;
t2597 = t2639 * t2963;
t2600 = t4049 * t2639;
t2603 = t2639 * t2994;
t2636 = t2639 ^ 2;
t2654 = t2681 * t3757;
t2661 = t2681 * t2997;
t3441 = t2917 * t3684;
t2701 = t2716 * t3441;
t3737 = t2994 * t3123;
t3254 = t2997 * t3132 - t3737;
t2834 = -t4049 - t3254;
t2929 = t2997 * t3123;
t2856 = t2902 - t2929;
t3734 = t2994 * t3132;
t2933 = -t3145 + t3580;
t3960 = pkin(1) * t2933;
t2710 = (0.2e1 * t2834 * t3653 + t2916 * t3088 + (-t3000 * t3123 + t3049) * t3132 + t3212 + t4086) * t3078 + ((t2856 - t3734) * t3133 + t3124 * t4090) * t3548 + ((t2996 * t3124 + t3050) * t3132 + (-t2995 * t3123 + t3611) * t3124 - 0.2e1 * t3960) * t3133 - t4070 + (t3123 * t4055 + t3048) * t3132 + t3124 * t3598 + t3203 - t4086;
t2923 = t2994 * t3133;
t3920 = rSges(3,1) * t3132;
t2752 = (-t3133 * t2856 + t2923 * t3132 + (-t3223 + t4065) * t3124) * t3105 + ((-t2963 * t3124 + (m(3) * t3920 - t2933) * t3133) * pkin(1) + t3329 + t4074) * t3106;
t2920 = t3124 * t2994;
t3655 = t3124 * t2997;
t3938 = pkin(5) * t3133;
t4018 = rSges(3,2) * t3132 + t3923;
t2780 = ((-t3655 - m(3) * (rSges(3,2) * t3938 + t3144)) * t3132 + (t2920 - m(3) * (rSges(3,1) * t3938 - t3972)) * t3123 - t3133 * t2936) * t3105 - t3106 * (-Icges(3,5) * t3123 - t3132 * Icges(3,6) + t4018 * m(3) * (rSges(3,3) + t3060));
t3406 = t2681 * t3079;
t3881 = t2639 * t2997;
t3233 = t3406 - t3881;
t3553 = 0.4e1 * t3725;
t3250 = t3553 + t3635;
t2678 = t2681 ^ 2;
t2521 = t2636 + t2678;
t3370 = t2521 * t3580;
t3382 = t2678 * t3597;
t3539 = t2716 * t3960;
t3863 = t2681 * t3088;
t3568 = 0.2e1 * t3863;
t3880 = t2639 * t2999;
t3574 = 0.2e1 * t3880;
t3584 = t2681 * t3974;
t3592 = t2521 * t3975;
t3617 = t2639 * t2867 + t2681 * t2929;
t3622 = -t2636 + t2678;
t3834 = t2716 * t3124;
t3864 = t2681 * t2999;
t3904 = ((t2654 / 0.2e1 - t3881) * t3132 + t2639 * t3737 - t2600 + (t3088 - 0.1e1 / 0.2e1) * t3864) * t3091;
t3990 = -0.2e1 * t2716;
t4035 = -t2449 * t2752 - t2452 * t2780 + t2464 * t2710 + 0.4e1 * (t3904 + (t2505 * t3132 + t2639 * t4070 + t3617) * t3653 / 0.2e1 + (t2944 * t2639 - t2654) * t3132 + t2943 * t3878 + t2945 * t2639 + ((t3983 + 0.1e1) * t2999 + (-t3920 / 0.2e1 + t3912 / 0.2e1) * t3978) * t2681) * t3712 + (((-t2681 * t3906 * t4018 - t2597) * t2633 + (-t2660 * t3123 + t2661 * t3132 + (t3635 * t3123 + t3247 + t4065) * t2639) * t3374) * t3133 + 0.4e1 * (-t2701 - t3880) * t3863 + ((-0.2e1 * (-t2681 * t3250 + t2603) * t3836 - pkin(1) * t3592) * t3124 - (t3757 * t3995 + t2661) * t2681) * t3132 + (0.2e1 * (t2681 * t2917 + t3123 * t3233 + t2594) * t3836 - (t2636 * t3145 - t3370) * pkin(1)) * t3124 + t2681 * (t2681 * t3737 + t3574)) * t3106 - 0.4e1 * t2716 * t3904 + ((-t2639 * t3727 - t2917 * t3834) * t3088 * t3995 + ((-pkin(5) * t3592 - t2636 * t3757) * t3105 + (-pkin(1) * t3584 - t2505 * t3124) * t4058) * t3132 - 0.2e1 * t3617 * t3834 + (pkin(5) * t3370 + t2636 * t3247) * t3105 + pkin(1) * (t2681 * t3588 + t2597) * t3990) * t3133 + (-t2639 * t3441 + t2716 * t4055) * t3568 + ((t3622 * t3740 + (t2716 * t3546 + (t3048 + t3553) * t3862) * t2639) * t3124 + rSges(3,2) * t3382 + (-t2654 - t3233) * t3990) * t3132 + (((t2997 * t3622 + t3406 * t3995) * t3123 + (-t2681 * t2941 + t2594) * t2639) * t3105 + t3539 * t3995) * t3124 + t3382 * t3923 + ((-pkin(5) * t3584 + t2603) * t3123 - t2600 - t3864) * t4058;
t3874 = t2640 * t3126;
t2983 = t3061 + pkin(6);
t2975 = t3053 + pkin(5);
t3747 = t2975 * t3105;
t3429 = t3137 * t3747;
t2830 = t2983 * t3128 - t3127 * t3429;
t2976 = 0.2e1 * t3054 + pkin(1);
t2845 = t2976 * t3128 - t3429;
t3430 = t3128 * t3747;
t3218 = t2983 * t3137 + t3127 * t3430;
t3236 = t2976 * t3137 + t3430;
t3277 = t3350 * t2878;
t3516 = t3106 * t3945;
t3334 = t2875 * t3516;
t2749 = (t3334 * t4001 + t3277) * t3096 + ((t2845 * t3031 + t3027 * t3236) * t3945 - t3668 * t4042) * t3136 + (t2830 * t3031 + t3027 * t3218 - t3334) * pkin(6);
t3520 = t3105 * t3945;
t2803 = 0.1e1 / ((-pkin(5) * t3520 + t3002) * t3136 - t3511 * t3955 + t2882);
t3417 = t3094 * t3675;
t3318 = t2803 * t3417;
t3269 = t2749 * t3318;
t3331 = t2878 * t3516;
t2746 = (t3331 * t4002 + t4042) * t3096 + ((t3027 * t2845 - t3031 * t3236) * t3945 + t3277 * t3668) * t3136 + (t3027 * t2830 - t3031 * t3218 + t3331) * pkin(6);
t3272 = t2746 * t3318;
t3310 = t3093 * t3420;
t3501 = t3078 * t3054;
t2786 = -t3310 * t3648 + (t2959 * t3096 + t2975 * t3413 + t3061 + t3487) * t3945 - ((-t3501 + t4052) * t3136 - t3668 * t3747) * pkin(6);
t3696 = t3094 * t3182;
t3322 = t2786 * t3998 * t3696;
t2682 = -t2849 * t3269 + t2853 * t3272 + t3147 * t3322;
t3953 = pkin(2) * t2682;
t2510 = pkin(6) * t3874 - t3953;
t2622 = t2640 * pkin(6);
t2667 = t2682 * t3053;
t2513 = t2667 - t2622;
t3941 = pkin(5) * t2682;
t2519 = -t2622 + t3941;
t2628 = pkin(5) * t2640;
t2613 = t2628 / 0.2e1;
t2625 = t3178 * t2640;
t2634 = pkin(1) * t2640;
t2676 = pkin(1) * t2682;
t2954 = t3053 + t3154;
t2955 = t3054 / 0.2e1 + pkin(1);
t3011 = pkin(5) * t3053;
t3016 = pkin(1) * t3054;
t3095 = t3136 * t3096;
t3637 = t3181 * t2682;
t3358 = -pkin(5) * t2622 + t3637;
t3229 = (-pkin(2) * t2519 - t3126 * t3358) * t3136;
t3287 = t2717 * t2974 * t3493;
t3428 = t2975 * t3648;
t3306 = t2717 * t3428;
t3327 = t3968 * t3648;
t3339 = t2717 * t3497;
t3354 = t3023 * t3078 - t3096;
t3373 = t2717 * t3594;
t3392 = t3011 + t3602;
t3856 = t2682 * t3127;
t2670 = pkin(1) * t3856;
t2673 = t2682 * pkin(6);
t3613 = t2670 + t2673;
t3396 = -t2628 - t3613;
t3465 = t2717 * t3678;
t3682 = t3105 * t3127;
t3466 = t2717 * t3682;
t3472 = t2682 * t4039;
t3875 = t2640 * t3106;
t3489 = pkin(1) * t3875;
t3525 = t3096 * t3053;
t3534 = t3096 * t3956;
t3542 = t2640 * t3061;
t2609 = pkin(2) * t3874;
t3627 = t2609 + t2673;
t3624 = t2628 + t2673;
t2485 = t2609 + t3624;
t3632 = t2485 * t3127 + t2676;
t3647 = t3127 * t3178;
t3695 = t3096 * t3178;
t3699 = t3092 * t3181;
t3742 = t2983 * t3106;
t3746 = t4052 * t3105;
t3828 = t2717 * t3136;
t3831 = t2717 * t3105;
t3832 = t2717 * t3077;
t3855 = t2682 * t3136;
t3895 = t2519 * t3127;
t3899 = (pkin(2) * t2640 + t3126 * t3624) * t3096;
t2450 = -(0.3e1 * ((t3096 - 0.4e1 / 0.3e1) * t3699 + ((-0.2e1 / 0.3e1 * t3011 + t3608) * t3096 + 0.4e1 / 0.3e1 * t3011 + t3607) * t3135 + (0.4e1 / 0.3e1 * t3949 - 0.2e1 / 0.3e1 * t2974) * t3493) * t3832 + (t3023 * t4046 - ((t2634 + t3895) * t3136 + (-0.4e1 * t2975 + t3525) * t3466) * t3949 + (-t2625 + t2631 + (-0.4e1 * t2954 * t3465 - t3542) * pkin(6) + (0.2e1 * t3095 * t3339 - t3899 + 0.2e1 * (t2613 + t3613) * t3126) * pkin(2)) * t3135 - (t3229 + (t3104 + (t3074 - t3695) * t3126) * t3831) * t3127) * t3078 + ((-0.3e1 * t3096 + 0.3e1) * t2717 * t3699 - (t2682 * t3534 + 0.2e1 * t2976 * t3828 + (t2676 + (t2613 + t3627) * t3127) * t3980) * t3949 + (((t2519 + t3542) * t3053 + t3358) * t3678 + (0.2e1 * (t3011 + t3609) * t3096 - 0.4e1 * t3011 - 0.2e1 * t3016 + t3303) * t2717) * t3135 - t2510 * t3534 + 0.2e1 * t3287 + (-(pkin(6) * t3856 + t2676) * pkin(2) + (t3647 + t3977) * t3874) * t3105) * t3106 + t3965 * t4046 + (t2519 * t3136 + (-t3053 - t3176 + t3525) * t3831) * t3526 + (-t2631 + (t3899 + ((-pkin(6) * t3095 + t2983 * t3136) * t3373 + t3396) * t3126) * pkin(2)) * t3135 - 0.2e1 * t2955 * t3096 * t3339 + t3127 * t3229 + ((t2942 * t3127 + t3103) * t3126 + t3127 * t3104) * t3831) * t2717 * t3783 - ((t2717 * t3354 + t2717 - t3875) * t3699 - (t3136 * t3489 - t3632 * t3105 + (t3136 * (-t3054 + pkin(1)) * t3078 + (t2954 * t3548 + t3927) * t3127) * t2717) * t3949 + ((t3505 + t3742) * t2513 + (-(t3016 - t3392) * t3078 + (-pkin(6) * t2975 + t3012 * t3127) * t3413 + (-t3078 * t3096 - t3965) * pkin(2) * t2974) * t2717) * t3135 - t3078 * t3287 - t3339 * t3295 + t3287 + t2510 * t3746) * t2640 * t4039 + ((-t2640 * t3746 + ((t3064 - 0.2e1 * t3054 + t3177) * t3689 + pkin(5) * t3327) * t2717) * t3093 + ((-t2974 * t3465 - t2510) * t3106 + ((t2983 * t3985 + t3096 * t3545 + t2983) * t2717 - t3226 * t2640) * t3126) * t3135 - t3078 * t3306 + (pkin(1) * t3855 - t2909 * t3831) * t3106 + ((-t2519 - t2667) * t3127 + t2634) * t3105 + t3306) * pkin(2) * t3472;
t3711 = t3078 * t2717;
t2525 = t3711 + t3875 / 0.2e1 + t2761 / 0.2e1 + t2758 / 0.2e1 - t2793 / 0.2e1;
t3830 = t2717 * t3106;
t2539 = t2640 + t3830;
t2619 = -0.2e1 * t2622;
t3564 = 0.2e1 * t3830;
t3366 = t2975 * t3564;
t2706 = pkin(6) * t3366;
t2986 = 0.2e1 * t3011;
t3377 = pkin(6) * t2667;
t3281 = t2625 - t3377;
t3314 = t3105 * t3428;
t3346 = t3669 * t2676;
t3423 = t3096 * t3718;
t3857 = t2682 * t3105;
t2453 = (((t3489 + (t4003 + 0.3e1 * t3054 - 0.3e1 * t3501) * t2717) * t3093 * t3676 + (t2513 * t3955 + (t2955 * t4002 + t3078 * t3647) * t2717) * t3933) * t3096 + (t2525 * t3092 * t3547 + (t3127 * t3366 + t3632) * t3310 + ((-(t2667 + t2619) * t3061 + t3281) * t3106 + ((t3011 + t3390) * t3985 + t2986 + 0.4e1 * t3016 + t3304) * t2717) * t3520 + (-t3968 * (-t2519 * t3053 - t3358) - t2975 * t2717 * t3302) * t3054) * t3136 + t2525 * t3388 * t3698 - (t2706 + (-0.2e1 * t2975 * t3832 - (t2609 - t3396) * t3078 + t2670 + t2485) * pkin(6)) * t3945 + ((-pkin(1) * t2513 + t3127 * t3281) * t3106 + (t3103 + ((t3011 + t3606) * t3985 + t2986 + t2942) * t3127) * t2717) * t3933 + (-(t3152 + t3697) * t3095 * t3831 + (-0.2e1 * t2706 + (t2619 + t3941) * t3053 + t3637 + (t2628 + t2673 / 0.2e1) * t4002) * t3096) * t3135 * t3531) * t2803 * t2717 * t3696 - (t3136 * t3180 * t2539 * t3092 + (t2539 * t3054 + t2634 + (t3096 * t3955 - t3314) * t2717) * t3697 + ((-t2667 / 0.2e1 + t2622 / 0.2e1) * t3136 + ((t3061 + t3979) * t3664 + (t3096 - 0.1e1 / 0.2e1) * t3747) * t2717) * t3135 * t3909 - (t2513 * t4052 + (t3295 - t3314) * t2717 * pkin(6)) * pkin(6)) * t3998 * t2640 * t3417 - ((t3718 * t3828 * t4052 + pkin(1) * t3857) * t3949 + (t2717 * t3392 * t3423 + (-(-t3953 + (t2717 * t3742 - t2519) * t3126) * t3678 + t3127 * t3346) * pkin(2)) * t3135 + (-t3136 * t3346 - ((t2634 - t3895) * t3126 - pkin(2) * t3856) * t3105 + (t2983 * t3135 * t3968 + t2974 * t3327 + t3295 * t3683) * t2717) * pkin(6)) * t3472;
t2465 = ((t2539 * t3697 + t3281) * t2640 - t2510 * t3953 + ((-(t3023 * t3697 - t3695) * t3078 + t3697 * t3715 - t3695 + t3011 + t3016 + (-(t3409 * t4001 + t2974) * t3078 + t2976 * t3640) * pkin(2) + t3604) * t2717 + (-t3136 * t3637 + (-t3627 * t3649 - t2899 * t3874 - pkin(2) * t3855 + (t2640 * t3651 - t2682 * t3649) * pkin(6)) * pkin(2)) * t3105 + (-0.2e1 * t3377 + t2625 - t2899 * t2954 * t3373 + (t3178 + t3697) * t2640) * t3106) * t2717) * t2818;
t2662 = t2682 * t2994;
t2506 = t2640 * t3552 + t2662;
t2595 = t2902 * t2640;
t2598 = t2640 * t2963;
t2601 = t4049 * t2640;
t2604 = t2640 * t2994;
t2637 = t2640 ^ 2;
t2655 = t2682 * t3756;
t2663 = t2682 * t2997;
t3440 = t2917 * t3682;
t2702 = t2717 * t3440;
t3736 = t2994 * t3126;
t3253 = t2997 * t3135 - t3736;
t2835 = -t4049 - t3253;
t2930 = t2997 * t3126;
t2857 = t2902 - t2930;
t3733 = t2994 * t3135;
t2934 = -t3145 + t3579;
t3959 = pkin(1) * t2934;
t2711 = (0.2e1 * t2835 * t3648 + t2916 * t3093 + (-t3000 * t3126 + t3049) * t3135 + t3212 + t4087) * t3078 + ((t2857 - t3733) * t3136 + t3127 * t4091) * t3548 + ((t2996 * t3127 + t3050) * t3135 + (-t2995 * t3126 + t3611) * t3127 - 0.2e1 * t3959) * t3136 - t4069 + (t3126 * t4055 + t3048) * t3135 + t3127 * t3598 + t3203 - t4087;
t2924 = t2994 * t3136;
t3919 = rSges(3,1) * t3135;
t2753 = (-t3136 * t2857 + t2924 * t3135 + (-t3222 + t4066) * t3127) * t3105 + ((-t2963 * t3127 + (m(3) * t3919 - t2934) * t3136) * pkin(1) + t3329 + t4075) * t3106;
t2921 = t3127 * t2994;
t3650 = t3127 * t2997;
t3937 = pkin(5) * t3136;
t4019 = rSges(3,2) * t3135 + t3922;
t2781 = ((-t3650 - m(3) * (rSges(3,2) * t3937 + t3144)) * t3135 + (t2921 - m(3) * (rSges(3,1) * t3937 - t3972)) * t3126 - t3136 * t2936) * t3105 - t3106 * (-Icges(3,5) * t3126 - t3135 * Icges(3,6) + t4019 * m(3) * (rSges(3,3) + t3061));
t3405 = t2682 * t3079;
t3877 = t2640 * t2997;
t3232 = t3405 - t3877;
t3551 = 0.4e1 * t3724;
t3249 = t3551 + t3635;
t2679 = t2682 ^ 2;
t2522 = t2637 + t2679;
t3369 = t2522 * t3579;
t3381 = t2679 * t3597;
t3538 = t2717 * t3959;
t3858 = t2682 * t3093;
t3567 = 0.2e1 * t3858;
t3876 = t2640 * t2999;
t3572 = 0.2e1 * t3876;
t3583 = t2682 * t3974;
t3591 = t2522 * t3975;
t3616 = t2640 * t2867 + t2682 * t2930;
t3621 = -t2637 + t2679;
t3829 = t2717 * t3127;
t3859 = t2682 * t2999;
t3903 = ((t2655 / 0.2e1 - t3877) * t3135 + t2640 * t3736 - t2601 + (t3093 - 0.1e1 / 0.2e1) * t3859) * t3096;
t3989 = -0.2e1 * t2717;
t4034 = -t2450 * t2753 - t2453 * t2781 + t2465 * t2711 + 0.4e1 * (t3903 + (t2506 * t3135 + t2640 * t4069 + t3616) * t3648 / 0.2e1 + (t2944 * t2640 - t2655) * t3135 + t2943 * t3874 + t2945 * t2640 + ((t3982 + 0.1e1) * t2999 + (-t3919 / 0.2e1 + t3911 / 0.2e1) * t3978) * t2682) * t3711 + (((-t2682 * t3906 * t4019 - t2598) * t2634 + (-t2662 * t3126 + t2663 * t3135 + (t3635 * t3126 + t3247 + t4066) * t2640) * t3373) * t3136 + 0.4e1 * (-t2702 - t3876) * t3858 + ((-0.2e1 * (-t2682 * t3249 + t2604) * t3831 - pkin(1) * t3591) * t3127 - (t3756 * t3994 + t2663) * t2682) * t3135 + (0.2e1 * (t2682 * t2917 + t3126 * t3232 + t2595) * t3831 - (t2637 * t3145 - t3369) * pkin(1)) * t3127 + t2682 * (t2682 * t3736 + t3572)) * t3106 - 0.4e1 * t2717 * t3903 + ((-t2640 * t3727 - t2917 * t3829) * t3093 * t3994 + ((-pkin(5) * t3591 - t2637 * t3756) * t3105 + (-pkin(1) * t3583 - t2506 * t3127) * t4057) * t3135 - 0.2e1 * t3616 * t3829 + (pkin(5) * t3369 + t2637 * t3247) * t3105 + pkin(1) * (t2682 * t3587 + t2598) * t3989) * t3136 + (-t2640 * t3440 + t2717 * t4055) * t3567 + ((t3621 * t3740 + (t2717 * t3546 + (t3048 + t3551) * t3857) * t2640) * t3127 + rSges(3,2) * t3381 + (-t2655 - t3232) * t3989) * t3135 + (((t2997 * t3621 + t3405 * t3994) * t3126 + (-t2682 * t2941 + t2595) * t2640) * t3105 + t3538 * t3994) * t3127 + t3381 * t3922 + ((-pkin(5) * t3583 + t2604) * t3126 - t2601 - t3859) * t4057;
t3870 = t2641 * t3129;
t2984 = t3062 + pkin(6);
t2979 = t3055 + pkin(5);
t3745 = t2979 * t3105;
t3426 = t3140 * t3745;
t2831 = t2984 * t3131 - t3130 * t3426;
t2980 = 0.2e1 * t3056 + pkin(1);
t2846 = t2980 * t3131 - t3426;
t3427 = t3131 * t3745;
t3217 = t2984 * t3140 + t3130 * t3427;
t3235 = t2980 * t3140 + t3427;
t3276 = t3349 * t2879;
t3515 = t3106 * t3944;
t3333 = t2876 * t3515;
t2750 = (t3333 * t4001 + t3276) * t3101 + ((t2846 * t3032 + t3028 * t3235) * t3944 - t3666 * t4041) * t3139 + (t2831 * t3032 + t3028 * t3217 - t3333) * pkin(6);
t3519 = t3105 * t3944;
t2804 = 0.1e1 / ((-pkin(5) * t3519 + t3002) * t3139 - t3510 * t3955 + t2883);
t3416 = t3099 * t3675;
t3317 = t2804 * t3416;
t3268 = t2750 * t3317;
t3330 = t2879 * t3515;
t2747 = (t3330 * t4002 + t4041) * t3101 + ((t3028 * t2846 - t3032 * t3235) * t3944 + t3276 * t3666) * t3139 + (t3028 * t2831 - t3032 * t3217 + t3330) * pkin(6);
t3271 = t2747 * t3317;
t3309 = t3098 * t3420;
t3500 = t3078 * t3056;
t2787 = -t3309 * t3643 + (t2959 * t3101 + t2979 * t3412 + t3062 + t3487) * t3944 - ((-t3500 + t4051) * t3139 - t3666 * t3745) * pkin(6);
t3691 = t3099 * t3182;
t3321 = t2787 * t3997 * t3691;
t2683 = -t2850 * t3268 + t2854 * t3271 + t3147 * t3321;
t3952 = pkin(2) * t2683;
t2511 = pkin(6) * t3870 - t3952;
t2623 = t2641 * pkin(6);
t2668 = t2683 * t3055;
t2514 = t2668 - t2623;
t3940 = pkin(5) * t2683;
t2520 = -t2623 + t3940;
t2629 = pkin(5) * t2641;
t2614 = t2629 / 0.2e1;
t2626 = t3178 * t2641;
t2635 = pkin(1) * t2641;
t2677 = pkin(1) * t2683;
t2956 = t3055 + t3154;
t2957 = t3056 / 0.2e1 + pkin(1);
t3013 = pkin(5) * t3055;
t3017 = pkin(1) * t3056;
t3100 = t3139 * t3101;
t3636 = t3181 * t2683;
t3357 = -pkin(5) * t2623 + t3636;
t3228 = (-pkin(2) * t2520 - t3129 * t3357) * t3139;
t3286 = t2718 * t2978 * t3492;
t3425 = t2979 * t3643;
t3305 = t2718 * t3425;
t3326 = t3968 * t3643;
t3338 = t2718 * t3496;
t3353 = t3024 * t3078 - t3101;
t3372 = t2718 * t3594;
t3391 = t3013 + t3602;
t3851 = t2683 * t3130;
t2671 = pkin(1) * t3851;
t2674 = t2683 * pkin(6);
t3612 = t2671 + t2674;
t3395 = -t2629 - t3612;
t3463 = t2718 * t3677;
t3680 = t3105 * t3130;
t3464 = t2718 * t3680;
t3471 = t2683 * t4040;
t3871 = t2641 * t3106;
t3488 = pkin(1) * t3871;
t3523 = t3101 * t3055;
t3533 = t3101 * t3956;
t3541 = t2641 * t3062;
t2611 = pkin(2) * t3870;
t3626 = t2611 + t2674;
t3623 = t2629 + t2674;
t2486 = t2611 + t3623;
t3631 = t2486 * t3130 + t2677;
t3642 = t3130 * t3178;
t3690 = t3101 * t3178;
t3694 = t3097 * t3181;
t3741 = t2984 * t3106;
t3744 = t4051 * t3105;
t3823 = t2718 * t3139;
t3826 = t2718 * t3105;
t3827 = t2718 * t3077;
t3850 = t2683 * t3139;
t3894 = t2520 * t3130;
t3898 = (pkin(2) * t2641 + t3129 * t3623) * t3101;
t2448 = -(0.3e1 * ((t3101 - 0.4e1 / 0.3e1) * t3694 + ((-0.2e1 / 0.3e1 * t3013 + t3608) * t3101 + 0.4e1 / 0.3e1 * t3013 + t3607) * t3138 + (0.4e1 / 0.3e1 * t3948 - 0.2e1 / 0.3e1 * t2978) * t3492) * t3827 + (t3024 * t4045 - ((t2635 + t3894) * t3139 + (-0.4e1 * t2979 + t3523) * t3464) * t3948 + (-t2626 + t2632 + (-0.4e1 * t2956 * t3463 - t3541) * pkin(6) + (0.2e1 * t3100 * t3338 - t3898 + 0.2e1 * (t2614 + t3612) * t3129) * pkin(2)) * t3138 - (t3228 + (t3104 + (t3074 - t3690) * t3129) * t3826) * t3130) * t3078 + ((-0.3e1 * t3101 + 0.3e1) * t2718 * t3694 - (t2683 * t3533 + 0.2e1 * t2980 * t3823 + (t2677 + (t2614 + t3626) * t3130) * t3980) * t3948 + (((t2520 + t3541) * t3055 + t3357) * t3677 + (0.2e1 * (t3013 + t3609) * t3101 - 0.4e1 * t3013 - 0.2e1 * t3017 + t3303) * t2718) * t3138 - t2511 * t3533 + 0.2e1 * t3286 + (-(pkin(6) * t3851 + t2677) * pkin(2) + (t3642 + t3977) * t3870) * t3105) * t3106 + t3964 * t4045 + (t2520 * t3139 + (-t3055 - t3176 + t3523) * t3826) * t3524 + (-t2632 + (t3898 + ((-pkin(6) * t3100 + t2984 * t3139) * t3372 + t3395) * t3129) * pkin(2)) * t3138 - 0.2e1 * t2957 * t3101 * t3338 + t3130 * t3228 + ((t2942 * t3130 + t3103) * t3129 + t3130 * t3104) * t3826) * t2718 * t3782 - ((t2718 * t3353 + t2718 - t3871) * t3694 - (t3139 * t3488 - t3631 * t3105 + (t3139 * (-t3056 + pkin(1)) * t3078 + (t2956 * t3548 + t3926) * t3130) * t2718) * t3948 + ((t3504 + t3741) * t2514 + (-(t3017 - t3391) * t3078 + (-pkin(6) * t2979 + t3014 * t3130) * t3412 + (-t3078 * t3101 - t3964) * pkin(2) * t2978) * t2718) * t3138 - t3078 * t3286 - t3338 * t3294 + t3286 + t2511 * t3744) * t2641 * t4040 + ((-t2641 * t3744 + ((t3065 - 0.2e1 * t3056 + t3177) * t3689 + pkin(5) * t3326) * t2718) * t3098 + ((-t2978 * t3463 - t2511) * t3106 + ((t2984 * t3985 + t3101 * t3545 + t2984) * t2718 - t3225 * t2641) * t3129) * t3138 - t3078 * t3305 + (pkin(1) * t3850 - t2910 * t3826) * t3106 + ((-t2520 - t2668) * t3130 + t2635) * t3105 + t3305) * pkin(2) * t3471;
t3710 = t3078 * t2718;
t2526 = t3710 + t3871 / 0.2e1 + t2762 / 0.2e1 + t2759 / 0.2e1 - t2794 / 0.2e1;
t3825 = t2718 * t3106;
t2540 = t2641 + t3825;
t2620 = -0.2e1 * t2623;
t3563 = 0.2e1 * t3825;
t3365 = t2979 * t3563;
t2707 = pkin(6) * t3365;
t2987 = 0.2e1 * t3013;
t3376 = pkin(6) * t2668;
t3280 = t2626 - t3376;
t3313 = t3105 * t3425;
t3345 = t3667 * t2677;
t3422 = t3101 * t3718;
t3852 = t2683 * t3105;
t2454 = (((t3488 + (t4003 + 0.3e1 * t3056 - 0.3e1 * t3500) * t2718) * t3098 * t3676 + (t2514 * t3955 + (t2957 * t4002 + t3078 * t3642) * t2718) * t3933) * t3101 + (t2526 * t3097 * t3547 + (t3130 * t3365 + t3631) * t3309 + ((-(t2668 + t2620) * t3062 + t3280) * t3106 + ((t3013 + t3390) * t3985 + t2987 + 0.4e1 * t3017 + t3304) * t2718) * t3519 + (-t3968 * (-t2520 * t3055 - t3357) - t2979 * t2718 * t3302) * t3056) * t3139 + t2526 * t3388 * t3693 - (t2707 + (-0.2e1 * t2979 * t3827 - (t2611 - t3395) * t3078 + t2671 + t2486) * pkin(6)) * t3944 + ((-pkin(1) * t2514 + t3130 * t3280) * t3106 + (t3103 + ((t3013 + t3606) * t3985 + t2987 + t2942) * t3130) * t2718) * t3933 + (-(t3152 + t3692) * t3100 * t3826 + (-0.2e1 * t2707 + (t2620 + t3940) * t3055 + t3636 + (t2629 + t2674 / 0.2e1) * t4002) * t3101) * t3138 * t3531) * t2804 * t2718 * t3691 - (t3139 * t3180 * t2540 * t3097 + (t2540 * t3056 + t2635 + (t3101 * t3955 - t3313) * t2718) * t3692 + ((-t2668 / 0.2e1 + t2623 / 0.2e1) * t3139 + ((t3062 + t3979) * t3663 + (t3101 - 0.1e1 / 0.2e1) * t3745) * t2718) * t3138 * t3909 - (t2514 * t4051 + (t3294 - t3313) * t2718 * pkin(6)) * pkin(6)) * t3997 * t2641 * t3416 - ((t3718 * t3823 * t4051 + pkin(1) * t3852) * t3948 + (t2718 * t3391 * t3422 + (-(-t3952 + (t2718 * t3741 - t2520) * t3129) * t3677 + t3130 * t3345) * pkin(2)) * t3138 + (-t3139 * t3345 - ((t2635 - t3894) * t3129 - pkin(2) * t3851) * t3105 + (t2984 * t3138 * t3968 + t2978 * t3326 + t3294 * t3681) * t2718) * pkin(6)) * t3471;
t2466 = ((t2540 * t3692 + t3280) * t2641 - t2511 * t3952 + ((-(t3024 * t3692 - t3690) * t3078 + t3692 * t3714 - t3690 + t3013 + t3017 + (-(t3408 * t4001 + t2978) * t3078 + t2980 * t3639) * pkin(2) + t3604) * t2718 + (-t3139 * t3636 + (-t3626 * t3644 - t2900 * t3870 - pkin(2) * t3850 + (t2641 * t3646 - t2683 * t3644) * pkin(6)) * pkin(2)) * t3105 + (-0.2e1 * t3376 + t2626 - t2900 * t2956 * t3372 + (t3178 + t3692) * t2641) * t3106) * t2718) * t2819;
t2664 = t2683 * t2994;
t2507 = t2641 * t3550 + t2664;
t2596 = t2902 * t2641;
t2599 = t2641 * t2963;
t2602 = t4049 * t2641;
t2605 = t2641 * t2994;
t2638 = t2641 ^ 2;
t2656 = t2683 * t3755;
t2665 = t2683 * t2997;
t3439 = t2917 * t3680;
t2703 = t2718 * t3439;
t3735 = t2994 * t3129;
t3252 = t2997 * t3138 - t3735;
t2836 = -t4049 - t3252;
t2931 = t2997 * t3129;
t2858 = t2902 - t2931;
t3732 = t2994 * t3138;
t2935 = -t3145 + t3578;
t3958 = pkin(1) * t2935;
t2712 = (0.2e1 * t2836 * t3643 + t2916 * t3098 + (-t3000 * t3129 + t3049) * t3138 + t3212 + t4088) * t3078 + ((t2858 - t3732) * t3139 + t3130 * t4092) * t3548 + ((t2996 * t3130 + t3050) * t3138 + (-t2995 * t3129 + t3611) * t3130 - 0.2e1 * t3958) * t3139 - t4068 + (t3129 * t4055 + t3048) * t3138 + t3130 * t3598 + t3203 - t4088;
t2925 = t2994 * t3139;
t3918 = rSges(3,1) * t3138;
t2754 = (-t3139 * t2858 + t2925 * t3138 + (-t3221 + t4067) * t3130) * t3105 + ((-t2963 * t3130 + (m(3) * t3918 - t2935) * t3139) * pkin(1) + t3329 + t4076) * t3106;
t2922 = t3130 * t2994;
t3645 = t3130 * t2997;
t3936 = pkin(5) * t3139;
t4020 = rSges(3,2) * t3138 + t3921;
t2782 = ((-t3645 - m(3) * (rSges(3,2) * t3936 + t3144)) * t3138 + (t2922 - m(3) * (rSges(3,1) * t3936 - t3972)) * t3129 - t3139 * t2936) * t3105 - t3106 * (-Icges(3,5) * t3129 - t3138 * Icges(3,6) + t4020 * m(3) * (rSges(3,3) + t3062));
t3404 = t2683 * t3079;
t3873 = t2641 * t2997;
t3231 = t3404 - t3873;
t3549 = 0.4e1 * t3723;
t3248 = t3549 + t3635;
t2680 = t2683 ^ 2;
t2523 = t2638 + t2680;
t3368 = t2523 * t3578;
t3380 = t2680 * t3597;
t3537 = t2718 * t3958;
t3853 = t2683 * t3098;
t3566 = 0.2e1 * t3853;
t3872 = t2641 * t2999;
t3570 = 0.2e1 * t3872;
t3582 = t2683 * t3974;
t3590 = t2523 * t3975;
t3615 = t2641 * t2867 + t2683 * t2931;
t3620 = -t2638 + t2680;
t3824 = t2718 * t3130;
t3854 = t2683 * t2999;
t3902 = ((t2656 / 0.2e1 - t3873) * t3138 + t2641 * t3735 - t2602 + (t3098 - 0.1e1 / 0.2e1) * t3854) * t3101;
t3988 = -0.2e1 * t2718;
t4033 = -t2448 * t2754 - t2454 * t2782 + t2466 * t2712 + 0.4e1 * (t3902 + (t2507 * t3138 + t2641 * t4068 + t3615) * t3643 / 0.2e1 + (t2944 * t2641 - t2656) * t3138 + t2943 * t3870 + t2945 * t2641 + ((t3981 + 0.1e1) * t2999 + (-t3918 / 0.2e1 + t3910 / 0.2e1) * t3978) * t2683) * t3710 + (((-t2683 * t3906 * t4020 - t2599) * t2635 + (-t2664 * t3129 + t2665 * t3138 + (t3635 * t3129 + t3247 + t4067) * t2641) * t3372) * t3139 + 0.4e1 * (-t2703 - t3872) * t3853 + ((-0.2e1 * (-t2683 * t3248 + t2605) * t3826 - pkin(1) * t3590) * t3130 - (t3755 * t3993 + t2665) * t2683) * t3138 + (0.2e1 * (t2683 * t2917 + t3129 * t3231 + t2596) * t3826 - (t2638 * t3145 - t3368) * pkin(1)) * t3130 + t2683 * (t2683 * t3735 + t3570)) * t3106 - 0.4e1 * t2718 * t3902 + ((-t2641 * t3727 - t2917 * t3824) * t3098 * t3993 + ((-pkin(5) * t3590 - t2638 * t3755) * t3105 + (-pkin(1) * t3582 - t2507 * t3130) * t4056) * t3138 - 0.2e1 * t3615 * t3824 + (pkin(5) * t3368 + t2638 * t3247) * t3105 + pkin(1) * (t2683 * t3586 + t2599) * t3988) * t3139 + (-t2641 * t3439 + t2718 * t4055) * t3566 + ((t3620 * t3740 + (t2718 * t3546 + (t3048 + t3549) * t3852) * t2641) * t3130 + rSges(3,2) * t3380 + (-t2656 - t3231) * t3988) * t3138 + (((t2997 * t3620 + t3404 * t3993) * t3129 + (-t2683 * t2941 + t2596) * t2641) * t3105 + t3537 * t3993) * t3130 + t3380 * t3921 + ((-pkin(5) * t3582 + t2605) * t3129 - t2602 - t3854) * t4056;
t2708 = t2709 ^ 2;
t2860 = -t2915 - t3738;
t3962 = m(3) * t3172;
t3971 = Icges(3,1) / 0.2e1;
t2911 = t3962 - Icges(3,2) / 0.2e1 + Icges(3,3) / 0.2e1 + t3971;
t3080 = m(3) * t3972;
t3301 = t3470 * t3996;
t3893 = (t2709 + t2590) * (t2709 - t2590);
t3478 = t2999 * t3893;
t3561 = 0.2e1 * t3740;
t3562 = 0.2e1 * t2917 * t3106;
t3577 = -0.2e1 * t3884;
t3731 = t2997 * t3121;
t3848 = t2708 * t3086;
t3849 = t2708 * t3078;
t4032 = -t2447 * t2860 - t2451 * t2936 + t2463 * t2779 + (0.2e1 * (t2917 * t3470 + t3576) * t3846 + t2917 * t3301 - 0.2e1 * t3478 - t3356 * t2708 * t4055) * t3083 + (-(t2994 * t3659 - t3079) * t3849 + (((t2912 + t3080) * t3121 - t3079 - (t3118 * t3251 + t3731) * t3689) * t2709 + (t3117 * t3562 + (-0.4e1 * t3118 * t3726 - 0.2e1 * t3731) * t3105) * t2590) * t2709 + (-t3722 * t3849 + (t3848 - t3893) * t3117) * t2917) * t3120 + ((-t2997 * t3659 - t3635) * t3117 + t3018 * t2999) * t3849 + (t3577 + ((-t3079 * t3118 + t2913) * t3117 - t3118 * t2917) * t3847) * t3846 + t2709 * ((t2590 * t3561 + t2709 * (t3081 + t3661)) * t3121 + t2709 * t3635) * t3117 - t2999 * t3848 + t2911 * t3301 + t3478;
t2713 = t2716 ^ 2;
t2864 = -t2929 - t3734;
t3300 = t3468 * t3995;
t3892 = (t2716 + t2639) * (t2716 - t2639);
t3477 = t2999 * t3892;
t3575 = -0.2e1 * t3880;
t3730 = t2997 * t3133;
t3842 = t2713 * t3091;
t3843 = t2713 * t3078;
t4031 = -t2449 * t2864 - t2452 * t2936 + t2464 * t2780 + ((t2917 * t3468 + t3574) * t3565 + t2917 * t3300 - 0.2e1 * t3477 - t3355 * t2713 * t4055) * t3088 + (-(t2994 * t3653 - t3079) * t3843 + (((t2920 + t3080) * t3133 - t3079 - (t3124 * t3250 + t3730) * t3689) * t2716 + (t3123 * t3562 + (-0.4e1 * t3124 * t3725 - 0.2e1 * t3730) * t3105) * t2639) * t2716 + (-t3721 * t3843 + (t3842 - t3892) * t3123) * t2917) * t3132 + ((-t2997 * t3653 - t3635) * t3123 + t3022 * t2999) * t3843 + (t3575 + ((-t3079 * t3124 + t2923) * t3123 - t3124 * t2917) * t3836) * t3835 + t2716 * ((t2639 * t3561 + t2716 * (t3081 + t3655)) * t3133 + t2716 * t3635) * t3123 - t2999 * t3842 + t2911 * t3300 + t3477;
t2714 = t2717 ^ 2;
t2865 = -t2930 - t3733;
t3299 = t3466 * t3994;
t3891 = (t2717 + t2640) * (t2717 - t2640);
t3476 = t2999 * t3891;
t3573 = -0.2e1 * t3876;
t3729 = t2997 * t3136;
t3840 = t2714 * t3096;
t3841 = t2714 * t3078;
t4030 = -t2450 * t2865 - t2453 * t2936 + t2465 * t2781 + ((t2917 * t3466 + t3572) * t3564 + t2917 * t3299 - 0.2e1 * t3476 - t3354 * t2714 * t4055) * t3093 + (-(t2994 * t3648 - t3079) * t3841 + (((t2921 + t3080) * t3136 - t3079 - (t3127 * t3249 + t3729) * t3689) * t2717 + (t3126 * t3562 + (-0.4e1 * t3127 * t3724 - 0.2e1 * t3729) * t3105) * t2640) * t2717 + (-t3720 * t3841 + (t3840 - t3891) * t3126) * t2917) * t3135 + ((-t2997 * t3648 - t3635) * t3126 + t3023 * t2999) * t3841 + (t3573 + ((-t3079 * t3127 + t2924) * t3126 - t3127 * t2917) * t3831) * t3830 + t2717 * ((t2640 * t3561 + t2717 * (t3081 + t3650)) * t3136 + t2717 * t3635) * t3126 - t2999 * t3840 + t2911 * t3299 + t3476;
t2715 = t2718 ^ 2;
t2866 = -t2931 - t3732;
t3298 = t3464 * t3993;
t3890 = (t2718 + t2641) * (t2718 - t2641);
t3475 = t2999 * t3890;
t3571 = -0.2e1 * t3872;
t3728 = t2997 * t3139;
t3838 = t2715 * t3101;
t3839 = t2715 * t3078;
t4029 = -t2448 * t2866 - t2454 * t2936 + t2466 * t2782 + ((t2917 * t3464 + t3570) * t3563 + t2917 * t3298 - 0.2e1 * t3475 - t3353 * t2715 * t4055) * t3098 + (-(t2994 * t3643 - t3079) * t3839 + (((t2922 + t3080) * t3139 - t3079 - (t3130 * t3248 + t3728) * t3689) * t2718 + (t3129 * t3562 + (-0.4e1 * t3130 * t3723 - 0.2e1 * t3728) * t3105) * t2641) * t2718 + (-t3719 * t3839 + (t3838 - t3890) * t3129) * t2917) * t3138 + ((-t2997 * t3643 - t3635) * t3129 + t3024 * t2999) * t3839 + (t3571 + ((-t3079 * t3130 + t2925) * t3129 - t3130 * t2917) * t3826) * t3825 + t2718 * ((t2641 * t3561 + t2718 * (t3081 + t3645)) * t3139 + t2718 * t3635) * t3129 - t2999 * t3838 + t2911 * t3298 + t3475;
t3157 = 0.2e1 * qJ(3,4);
t3194 = t3971 + Icges(3,2) / 0.2e1 + (0.2e1 * t3171 + t3605) * m(3) / 0.2e1 + t4050;
t3969 = -t4055 / 0.2e1;
t3970 = t2917 / 0.2e1;
t2796 = cos(t3157) * t3970 + sin(t3157) * t3969 + t3194;
t3399 = -t3081 / 0.4e1;
t3753 = (Icges(3,1) + t3907 + 0.2e1 * t3962) * t3105;
t3889 = (t2653 + t2709) * (-t2653 + t2709);
t4028 = -t2447 * t2796 - t2451 * t2860 + t2463 * t2751 + (t3255 * t2653 * t3594 + (-t3968 * t3118 * t3198 + t4089 * t3689 + t3957) * t2709) * t3844 - ((-t2994 * t3470 + 0.2e1 * t2642) * t3120 + t2855 * t3470 + (0.4e1 * t3083 - 0.2e1) * t3869) * t3846 + (-t2700 + t3577) * t3569 + (-0.4e1 * (t2709 * t3399 - t3688 * t3869) * t3845 - t2642 * t3996 + t2997 * t3889) * t3120 + (-t2653 * t3753 - t3540) * t3845 - t3739 * t3889 + t4049 * t2708 + t2653 * t3576 + (-0.2e1 * t3718 * t3848 + t3849) * t2833;
t3158 = 0.2e1 * qJ(3,3);
t2797 = cos(t3158) * t3970 + sin(t3158) * t3969 + t3194;
t3887 = (t2681 + t2716) * (-t2681 + t2716);
t4027 = -t2449 * t2797 - t2452 * t2864 + t2464 * t2752 + (t3254 * t2681 * t3594 + (-t3968 * t3124 * t3197 + t4090 * t3689 + t3957) * t2716) * t3833 + t2834 * t3843 - ((-t2994 * t3468 + 0.2e1 * t2654) * t3132 + t2856 * t3468 + (0.4e1 * t3088 - 0.2e1) * t3864) * t3835 + (-t2701 + t3575) * t3568 + (-0.4e1 * (t2716 * t3399 - t3685 * t3864) * t3834 - t2654 * t3995 + t2997 * t3887) * t3132 + (-t2681 * t3753 - t3539) * t3834 - t3737 * t3887 + t2681 * t3574 + (-0.2e1 * t2834 * t3424 + t4049) * t2713;
t3159 = 0.2e1 * qJ(3,2);
t2798 = cos(t3159) * t3970 + sin(t3159) * t3969 + t3194;
t3888 = (t2682 + t2717) * (-t2682 + t2717);
t4026 = -t2450 * t2798 - t2453 * t2865 + t2465 * t2753 + (t3253 * t2682 * t3594 + (-t3968 * t3127 * t3196 + t4091 * t3689 + t3957) * t2717) * t3828 + t2835 * t3841 - ((-t2994 * t3466 + 0.2e1 * t2655) * t3135 + t2857 * t3466 + (0.4e1 * t3093 - 0.2e1) * t3859) * t3830 + (-t2702 + t3573) * t3567 + (-0.4e1 * (t2717 * t3399 - t3683 * t3859) * t3829 - t2655 * t3994 + t2997 * t3888) * t3135 + (-t2682 * t3753 - t3538) * t3829 - t3736 * t3888 + t2682 * t3572 + (-0.2e1 * t2835 * t3423 + t4049) * t2714;
t3160 = 0.2e1 * qJ(3,1);
t2799 = cos(t3160) * t3970 + sin(t3160) * t3969 + t3194;
t3886 = (t2683 + t2718) * (-t2683 + t2718);
t4025 = -t2448 * t2799 - t2454 * t2866 + t2466 * t2754 + (t3252 * t2683 * t3594 + (-t3968 * t3130 * t3195 + t4092 * t3689 + t3957) * t2718) * t3823 + t2836 * t3839 - ((-t2994 * t3464 + 0.2e1 * t2656) * t3138 + t2858 * t3464 + (0.4e1 * t3098 - 0.2e1) * t3854) * t3825 + (-t2703 + t3571) * t3566 + (-0.4e1 * (t2718 * t3399 - t3681 * t3854) * t3824 - t2656 * t3993 + t2997 * t3886) * t3138 + (-t2683 * t3753 - t3537) * t3824 - t3735 * t3886 + t2683 * t3570 + (-0.2e1 * t2836 * t3422 + t4049) * t2715;
t3102 = t3146 ^ 2;
t3932 = m(4) * t3102;
t3822 = t2731 * t3084;
t3821 = t2732 * t3084;
t3820 = t2734 * t3089;
t3819 = t2735 * t3094;
t3818 = t2736 * t3099;
t3817 = t2737 * t3089;
t3816 = t2738 * t3094;
t3815 = t2739 * t3099;
t3814 = t2751 * t3084;
t3813 = t2752 * t3089;
t3812 = t2753 * t3094;
t3811 = t2754 * t3099;
t3802 = t2784 * t3182;
t3801 = t2785 * t3182;
t3800 = t2786 * t3182;
t3799 = t2787 * t3182;
t3798 = t2796 * t3084;
t3797 = t2797 * t3089;
t3796 = t2798 * t3094;
t3795 = t2799 * t3099;
t3774 = t2860 * t3084;
t3773 = t2864 * t3089;
t3772 = t2865 * t3094;
t3771 = t2866 * t3099;
t3754 = t2936 * t3182;
t3267 = t2779 * t3320;
t3266 = t2780 * t3319;
t3265 = t2781 * t3318;
t3264 = t2782 * t3317;
t3263 = t2860 * t3320;
t3262 = t2936 * t3320;
t3261 = t2864 * t3319;
t3260 = t2936 * t3319;
t3259 = t2865 * t3318;
t3258 = t2936 * t3318;
t3257 = t2866 * t3317;
t3256 = t2936 * t3317;
t3202 = (-t2743 * t2888 + t2744 * t2884) * t3320;
t3201 = (-t2745 * t2889 + t2748 * t2885) * t3319;
t3200 = (-t2746 * t2890 + t2749 * t2886) * t3318;
t3199 = (-t2747 * t2891 + t2750 * t2887) * t3317;
t3156 = rSges(4,1);
t3155 = rSges(4,2);
t2742 = (t2775 * t2891 - t2778 * t2887) * t2819;
t2741 = (t2774 * t2890 - t2777 * t2886) * t2818;
t2740 = (t2773 * t2889 - t2776 * t2885) * t2817;
t2733 = (t2771 * t2888 - t2772 * t2884) * t2815;
t2695 = t2754 * t3779 + (t2790 * t2799 + t2866 * t3799) * t4040;
t2694 = t2753 * t3780 + (t2789 * t2798 + t2865 * t3800) * t4039;
t2693 = t2752 * t3781 + (t2788 * t2797 + t2864 * t3801) * t4038;
t2692 = t2751 * t3785 + (t2783 * t2796 + t2860 * t3802) * t4037;
t2691 = (-t2747 * t2887 - t2750 * t2891) * t3317;
t2690 = (-t2746 * t2886 - t2749 * t2890) * t3318;
t2689 = (-t2745 * t2885 - t2748 * t2889) * t3319;
t2688 = (-t2743 * t2884 - t2744 * t2888) * t3320;
t2687 = (t2736 * t2891 - t2739 * t2887) * t3782;
t2686 = (t2735 * t2890 - t2738 * t2886) * t3783;
t2685 = (t2734 * t2889 - t2737 * t2885) * t3784;
t2684 = (t2731 * t2888 - t2732 * t2884) * t3786;
t2566 = t2712 * t3779 + (t2754 * t2790 + t2782 * t3799) * t4040;
t2565 = t2711 * t3780 + (t2753 * t2789 + t2781 * t3800) * t4039;
t2564 = t2710 * t3781 + (t2752 * t2788 + t2780 * t3801) * t4038;
t2563 = t2704 * t3785 + (t2751 * t2783 + t2779 * t3802) * t4037;
t2562 = t2747 * t3257 - (t2739 * t3795 + t2754 * t2778) * t2819;
t2561 = t2746 * t3259 - (t2738 * t3796 + t2753 * t2777) * t2818;
t2560 = t2745 * t3261 - (t2737 * t3797 + t2752 * t2776) * t2817;
t2559 = -t2750 * t3257 - (t2736 * t3795 + t2754 * t2775) * t2819;
t2558 = -t2749 * t3259 - (t2735 * t3796 + t2753 * t2774) * t2818;
t2557 = -t2748 * t3261 - (t2734 * t3797 + t2752 * t2773) * t2817;
t2556 = t2743 * t3263 - (t2732 * t3798 + t2751 * t2772) * t2815;
t2555 = -t2744 * t3263 - (t2731 * t3798 + t2751 * t2771) * t2815;
t2534 = t2747 * t3264 - (t2712 * t2778 + t2739 * t3811) * t2819;
t2533 = t2746 * t3265 - (t2711 * t2777 + t2738 * t3812) * t2818;
t2532 = t2745 * t3266 - (t2710 * t2776 + t2737 * t3813) * t2817;
t2531 = -t2750 * t3264 - (t2712 * t2775 + t2736 * t3811) * t2819;
t2530 = -t2749 * t3265 - (t2711 * t2774 + t2735 * t3812) * t2818;
t2529 = -t2748 * t3266 - (t2710 * t2773 + t2734 * t3813) * t2817;
t2528 = t2743 * t3267 - (t2704 * t2772 + t2732 * t3814) * t2815;
t2527 = -t2744 * t3267 - (t2704 * t2771 + t2731 * t3814) * t2815;
t2494 = -t2687 * t2799 + t2691 * t2866 - t2742 * t2754;
t2493 = -t2686 * t2798 + t2690 * t2865 - t2741 * t2753;
t2492 = -t2685 * t2797 + t2689 * t2864 - t2740 * t2752;
t2491 = -t2684 * t2796 + t2688 * t2860 - t2733 * t2751;
t2490 = -t2687 * t2754 + t2691 * t2782 - t2712 * t2742;
t2489 = -t2686 * t2753 + t2690 * t2781 - t2711 * t2741;
t2488 = -t2685 * t2752 + t2689 * t2780 - t2710 * t2740;
t2487 = -t2684 * t2751 + t2688 * t2779 - t2704 * t2733;
t1 = [(t3072 * t3155 - t3073 * t3156) * t3932 - t4036 * t3809 - t4035 * t3805 - t4034 * t3804 - t4033 * t3803 - t4028 * t3461 - t4027 * t3457 - t4026 * t3456 - t4025 * t3455 + t4032 * t3275 + t4031 * t3273 + t4030 * t3272 + t4029 * t3271 + ((t2743 * t3262 - (t2732 * t3774 + t2772 * t2779) * t2815) * t3202 - (-(t2528 * t2772 + t2556 * t3821) * t2888 - (t2528 * t2771 + t2556 * t3822) * t2884) * t2815 + (t2745 * t3260 - (t2737 * t3773 + t2776 * t2780) * t2817) * t3201 - (-(t2532 * t2776 + t2560 * t3817) * t2889 - (t2532 * t2773 + t2560 * t3820) * t2885) * t2817 + (t2747 * t3256 - (t2739 * t3771 + t2778 * t2782) * t2819) * t3199 - (-(t2534 * t2778 + t2562 * t3815) * t2891 - (t2534 * t2775 + t2562 * t3818) * t2887) * t2819 + (t2746 * t3258 - (t2738 * t3772 + t2777 * t2781) * t2818) * t3200 - (-(t2533 * t2777 + t2561 * t3816) * t2890 - (t2533 * t2774 + t2561 * t3819) * t2886) * t2818) * t3102; -(t3072 * t3156 + t3073 * t3155) * t3932 - t4036 * t3810 - t4035 * t3808 - t4034 * t3807 - t4033 * t3806 - t4028 * t3462 - t4027 * t3460 - t4026 * t3459 - t4025 * t3458 - t4032 * t3274 - t4031 * t3270 - t4030 * t3269 - t4029 * t3268 + ((-t2744 * t3262 - (t2731 * t3774 + t2771 * t2779) * t2815) * t3202 - (-(t2527 * t2772 + t2555 * t3821) * t2888 - (t2527 * t2771 + t2555 * t3822) * t2884) * t2815 + (-t2749 * t3258 - (t2735 * t3772 + t2774 * t2781) * t2818) * t3200 - (-(t2530 * t2777 + t2558 * t3816) * t2890 - (t2530 * t2774 + t2558 * t3819) * t2886) * t2818 + (-t2748 * t3260 - (t2734 * t3773 + t2773 * t2780) * t2817) * t3201 - (-(t2529 * t2776 + t2557 * t3817) * t2889 - (t2529 * t2773 + t2557 * t3820) * t2885) * t2817 + (-t2750 * t3256 - (t2736 * t3771 + t2775 * t2782) * t2819) * t3199 - (-(t2531 * t2778 + t2559 * t3815) * t2891 - (t2531 * t2775 + t2559 * t3818) * t2887) * t2819) * t3102; t4036 * t3785 + t4035 * t3781 + t4034 * t3780 + t4033 * t3779 + t4028 * t3454 + t4027 * t3453 + t4026 * t3452 + t4025 * t3451 + t4032 * t3324 + t4031 * t3323 + t4030 * t3322 + t4029 * t3321 + ((t2779 * t3785 + (t2783 * t2860 + t2784 * t3754) * t4037) * t3202 - (-(t2563 * t2772 + t2692 * t3821) * t2888 - (t2563 * t2771 + t2692 * t3822) * t2884) * t2815 + (t2780 * t3781 + (t2785 * t3754 + t2788 * t2864) * t4038) * t3201 - (-(t2564 * t2776 + t2693 * t3817) * t2889 - (t2564 * t2773 + t2693 * t3820) * t2885) * t2817 + (t2782 * t3779 + (t2787 * t3754 + t2790 * t2866) * t4040) * t3199 - (-(t2566 * t2778 + t2695 * t3815) * t2891 - (t2566 * t2775 + t2695 * t3818) * t2887) * t2819 + (t2781 * t3780 + (t2786 * t3754 + t2789 * t2865) * t4039) * t3200 - (-(t2565 * t2777 + t2694 * t3816) * t2890 - (t2565 * t2774 + t2694 * t3819) * t2886) * t2818) * t3102; -t4033 * t2742 - t4034 * t2741 - t4035 * t2740 - t4036 * t2733 + t4029 * t2691 + t4030 * t2690 + t4031 * t2689 + t4032 * t2688 - t4025 * t2687 - t4026 * t2686 - t4027 * t2685 - t4028 * t2684 + ((-t2684 * t2860 + t2688 * t2936 - t2733 * t2779) * t3202 - (-(t2487 * t2772 + t2491 * t3821) * t2888 - (t2487 * t2771 + t2491 * t3822) * t2884) * t2815 + (-t2686 * t2865 + t2690 * t2936 - t2741 * t2781) * t3200 - (-(t2489 * t2777 + t2493 * t3816) * t2890 - (t2489 * t2774 + t2493 * t3819) * t2886) * t2818 + (-t2685 * t2864 + t2689 * t2936 - t2740 * t2780) * t3201 - (-(t2488 * t2776 + t2492 * t3817) * t2889 - (t2488 * t2773 + t2492 * t3820) * t2885) * t2817 + (-t2687 * t2866 + t2691 * t2936 - t2742 * t2782) * t3199 - (-(t2490 * t2778 + t2494 * t3815) * t2891 - (t2490 * t2775 + t2494 * t3818) * t2887) * t2819) * t3102;];
taucX  = t1;
