% Calculate minimal parameter regressor of inverse dynamics forces for
% P4RRRRR10V1G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% xDDP [4x1]
%   Generalized platform accelerations
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [6x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a4,alpha2,d1,d2,d4]';
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P4RRRRR10V1G1A0_convert_par2_MPV_fixb.m

% Output:
% tauX [4x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 13:17
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P4RRRRR10V1G1A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(4,1),zeros(3,4),zeros(3,1),zeros(4,3),zeros(4,3),zeros(6,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: xDP has to be [4x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [4 1]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: xDDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: qJ has to be [3x4] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [6 1]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: pkin has to be [6x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: Koppelpunkt has to be [4x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P4RRRRR10V1G1A0_invdyn_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 12:31:39
% EndTime: 2020-08-07 12:51:06
% DurationCPUTime: 1226.64s
% Computational Cost: add. (13512699->3052), mult. (29891414->4984), div. (182924->34), fcn. (18383620->36), ass. (0->1883)
t7992 = sin(pkin(3));
t7914 = t7992 * g(3);
t7993 = cos(pkin(3));
t8032 = xDP(4);
t8034 = xDP(2);
t8036 = xP(4);
t7959 = sin(t8036);
t7960 = cos(t8036);
t8041 = koppelP(4,2);
t8045 = koppelP(4,1);
t8194 = t7959 * t8041 - t7960 * t8045;
t7722 = t8032 * t8194 - t8034;
t7792 = t7959 * t8045 + t7960 * t8041;
t8035 = xDP(1);
t7723 = t7792 * t8032 - t8035;
t8005 = sin(qJ(2,4));
t7927 = t8005 * pkin(6);
t8007 = cos(qJ(3,4));
t8008 = cos(qJ(2,4));
t8806 = t8007 * t8008;
t8004 = sin(qJ(3,4));
t8848 = t7992 * t8004;
t8809 = t8005 * t8007;
t8661 = pkin(2) * t8809;
t9086 = t8008 * pkin(6);
t7812 = t8661 - t9086;
t8942 = t7812 * t7993;
t7562 = t7723 * t7927 + t7722 * t8942 + (-t7722 * t8848 + t7723 * t8806) * pkin(2);
t7563 = t7722 * t7927 - t7723 * t8942 + (t7722 * t8806 + t7723 * t8848) * pkin(2);
t8831 = t7993 * t8004;
t7711 = pkin(2) * t8831 + t7812 * t7992;
t8000 = legFrame(4,3);
t7916 = sin(t8000);
t7920 = cos(t8000);
t8006 = sin(qJ(1,4));
t8009 = cos(qJ(1,4));
t8033 = xDP(3);
t7483 = (t7562 * t8009 + t7563 * t8006) * t7920 + (-t7562 * t8006 + t7563 * t8009) * t7916 - t8033 * t7711;
t7482 = t7483 ^ 2;
t7926 = t8004 * pkin(2);
t7895 = pkin(1) * t7926;
t8660 = pkin(2) * t8806;
t8170 = pkin(1) * t8942 + (-t7895 + (t8660 + t7927) * pkin(5)) * t7992;
t7667 = 0.1e1 / t8170 ^ 2;
t7463 = t7482 * t7667;
t8648 = pkin(5) * t7463;
t7614 = t7722 * t8009 - t7723 * t8006;
t7615 = t7722 * t8006 + t7723 * t8009;
t8198 = t7614 * t7920 - t7916 * t7615;
t7570 = pkin(2) * t8198;
t7575 = t7614 * t7916 + t7615 * t7920;
t8954 = t7722 * t7992;
t7622 = -pkin(1) * t7723 + pkin(5) * t8954;
t8953 = t7723 * t7992;
t7623 = pkin(1) * t7722 + pkin(5) * t8953;
t7630 = pkin(1) * t8954 + pkin(5) * t7723;
t7631 = pkin(1) * t8953 - pkin(5) * t7722;
t8805 = t8008 * t8033;
t7851 = pkin(6) * t8805;
t7970 = t8008 ^ 2;
t7907 = t7970 - 0.2e1;
t7964 = t7993 ^ 2;
t8808 = t8005 * t8008;
t8473 = t8004 * t8808;
t9106 = pkin(2) * t7992;
t8264 = t8473 * t9106;
t8905 = (t8008 + 0.1e1) * (t8008 - 0.1e1);
t9095 = pkin(6) * t7992;
t8404 = t8905 * t9095;
t9131 = t7970 - 0.1e1;
t8426 = t9131 * t7926 - pkin(5);
t8673 = pkin(2) * t8848;
t7966 = t8007 ^ 2;
t8891 = t7966 * t8005;
t8681 = pkin(2) * t8891;
t8686 = t7907 * t7926;
t9144 = -0.2e1 * t7992;
t8697 = t8033 * t9144;
t9110 = pkin(2) * t7966;
t8734 = 0.2e1 * t9110;
t8847 = t7992 * t8005;
t9101 = pkin(2) * t8033;
t7945 = t8033 * pkin(5);
t9200 = -t8198 * t9086 - t7945;
t7386 = ((-t8033 * t8686 - t9200) * t8007 + (-t8198 * t8734 - (-pkin(5) * t8198 + t7851) * t8004 + t7570) * t8005) * t7964 + (-(t7575 * t8008 + t8005 * t8697) * t9110 + (-t7907 * t8198 * t8673 + (t7622 * t8009 - t7623 * t8006) * t7920 + (-t7622 * t8006 - t7623 * t8009) * t7916 + (-t7575 * t8005 - t7992 * t8805) * pkin(6)) * t8007 + (t8004 * t9200 - t9101) * t8847) * t7993 + t8198 * t8681 + (t7575 * t8264 + t8033 * t8426) * t8007 + (((t7630 * t8006 + t7631 * t8009) * t7920 + (t7630 * t8009 - t7631 * t8006) * t7916 + t7851) * t8004 - t7570) * t8005 + (pkin(1) * t8805 - t7575 * t8404) * t8004;
t7666 = 0.1e1 / t8170;
t7967 = 0.1e1 / t8007;
t8975 = t7666 * t7967;
t7345 = t7386 * t8975;
t9025 = t7483 * t7666;
t7454 = t7993 * t9025;
t7320 = -t7454 - t7345;
t8051 = pkin(6) ^ 2;
t7341 = t8051 * t7345;
t9135 = t7964 - 0.1e1;
t8417 = t9135 * t8033;
t8849 = t7992 * t7993;
t8541 = t8198 * t8849;
t7558 = -t8417 - t8541;
t8900 = t7964 * t8005;
t8641 = pkin(6) * t8900;
t9223 = t7927 + pkin(1);
t7800 = -t8641 + t9223;
t7866 = 0.2e1 * t7927 + pkin(1);
t7930 = pkin(1) * t8005;
t7869 = t7930 + pkin(6);
t7865 = t7926 + pkin(5);
t8906 = (t7993 + 0.1e1) * (t7993 - 0.1e1);
t8310 = t8198 * t7865 * t8906;
t8626 = t9135 * pkin(6);
t8384 = t7930 - t8626;
t8388 = pkin(6) * t8541;
t8054 = pkin(2) ^ 2;
t8889 = t7966 * t8054;
t8412 = -t8051 + t8889;
t8815 = t7993 * t8033;
t8503 = t7865 * t8815;
t9105 = pkin(2) * t8007;
t8729 = pkin(6) * t9105;
t7428 = (t7575 * t7992 * t8412 + 0.2e1 * t7558 * t8729) * t7970 + (-t7558 * t8005 * t8889 + ((t7575 * t7866 - t8503) * t7992 + t8310) * t9105 + (t7800 * t8033 - t8005 * t8388) * pkin(6)) * t8008 - (t8033 * t8384 - t8388) * t9105 + ((t7575 * t7869 - t8005 * t8503) * t7992 + t8005 * t8310) * pkin(6);
t8728 = pkin(5) * t7927;
t7752 = t7992 * (t7895 - t8728);
t9094 = pkin(6) * t7993;
t7893 = pkin(1) * t9094;
t8846 = t7992 * t8007;
t8672 = pkin(2) * t8846;
t9112 = pkin(1) * t7993;
t8088 = (pkin(5) * t8672 - t7893) * t8008 + t8661 * t9112 - t7752;
t9239 = 0.1e1 / t8088;
t8993 = t9239 * t7967;
t7411 = t7428 * t8993;
t7406 = t8004 * t7411;
t8140 = pkin(6) * t7406 - t7341;
t8814 = t7993 * t8051;
t7247 = t7320 * t8889 - (-t7812 * t8673 + t8814) * t9025 + t8140;
t8888 = t7967 * t8004;
t8605 = t7386 * t8888;
t7270 = -t7411 - (-pkin(6) * t8605 + (-(pkin(2) * t8008 + pkin(6) * t8809) * t7992 - pkin(6) * t8831) * t7483) * t7666;
t8235 = t7270 * t7666 * t7411;
t7989 = t8032 ^ 2;
t8010 = xDDP(4);
t8012 = xDDP(2);
t7686 = -t7792 * t7989 - t8010 * t8194 + t8012;
t7735 = t7916 * t8006 - t8009 * t7920;
t7736 = t7916 * t8009 + t7920 * t8006;
t8517 = t7735 * t8848;
t7582 = -t7736 * t7927 + t7735 * t8942 + (-t7736 * t8806 - t8517) * pkin(2);
t9005 = t7582 * t7666;
t7530 = t7686 * t9005;
t8013 = xDDP(1);
t7690 = -t7792 * t8010 + t7989 * t8194 + t8013;
t8516 = t7736 * t8848;
t7583 = t7735 * t7927 + t7736 * t8942 + (t7735 * t8806 - t8516) * pkin(2);
t9004 = t7583 * t7666;
t7531 = t7690 * t9004;
t8011 = xDDP(3);
t8974 = t7666 * t7711;
t7602 = t8011 * t8974;
t8447 = -t7530 - t7531 + t7602;
t8084 = -t8235 + t8447;
t9038 = t7386 * t7967;
t8367 = t7666 * t8605;
t7334 = pkin(2) * t8367;
t8055 = 0.1e1 / pkin(2);
t8886 = t7967 * t8055;
t8529 = t9239 * t8886;
t8343 = t7428 * t8529;
t7407 = pkin(6) * t8343;
t7410 = pkin(2) * t7411;
t8040 = pkin(5) / 0.2e1;
t7855 = t7926 + t8040;
t7864 = pkin(5) * t8004 + pkin(2);
t7894 = pkin(5) * t7926;
t7896 = pkin(1) * t7927;
t8244 = pkin(6) * t8367;
t8828 = t7993 * t8008;
t8484 = t7992 * t8828;
t8400 = pkin(6) * t8484;
t8490 = t7907 * t8889;
t8509 = t7855 * t8849;
t8899 = t7964 * t8008;
t8640 = pkin(6) * t8899;
t8737 = t8051 + t8054;
t8884 = t7970 * t8051;
t9039 = t7386 * t7666;
t9142 = 0.2e1 * t8005;
t7235 = (-t8007 * t8054 * t9039 + t8140) * t7993 + (-(-t7334 - t7407) * t8661 - (pkin(2) * t8244 - t7410) * t8008) * t7992 - (-(t8490 - t8884) * t7964 + 0.2e1 * t7855 * t8400 + t8889 * t8905 - t8884 + t7894 + t7896 + (-t7864 * t7964 + (t7866 * t8008 + (-t8509 - t8640) * t9142) * t8007) * pkin(2) + t8737) * t9025;
t9051 = t7235 * t7483;
t7186 = (-t7247 * t9038 - t9051) * t7667 + t8084;
t7185 = pkin(1) * t7186;
t7928 = t8006 * g(1);
t9084 = t8009 * g(2);
t7834 = -t7928 + t9084;
t9085 = t8009 * g(1);
t9087 = t8006 * g(2);
t7835 = t9085 + t9087;
t8757 = t7834 * t7920 - t7835 * t7916;
t9262 = t7185 - t8757;
t9243 = -t7992 * t8648 - t9262;
t9266 = t7993 * t9243 + t7914;
t8042 = koppelP(3,2);
t8046 = koppelP(3,1);
t8193 = t7959 * t8042 - t7960 * t8046;
t7724 = t8032 * t8193 - t8034;
t7793 = t7959 * t8046 + t7960 * t8042;
t7725 = t7793 * t8032 - t8035;
t8015 = sin(qJ(2,3));
t7935 = t8015 * pkin(6);
t8023 = cos(qJ(3,3));
t8024 = cos(qJ(2,3));
t8786 = t8023 * t8024;
t8014 = sin(qJ(3,3));
t8844 = t7992 * t8014;
t8801 = t8015 * t8023;
t8659 = pkin(2) * t8801;
t9081 = t8024 * pkin(6);
t7813 = t8659 - t9081;
t8941 = t7813 * t7993;
t7564 = t7725 * t7935 + t7724 * t8941 + (-t7724 * t8844 + t7725 * t8786) * pkin(2);
t7565 = t7724 * t7935 - t7725 * t8941 + (t7724 * t8786 + t7725 * t8844) * pkin(2);
t8827 = t7993 * t8014;
t7715 = pkin(2) * t8827 + t7813 * t7992;
t8001 = legFrame(3,3);
t7917 = sin(t8001);
t7921 = cos(t8001);
t8016 = sin(qJ(1,3));
t8025 = cos(qJ(1,3));
t7487 = (t7564 * t8025 + t7565 * t8016) * t7921 + (-t7564 * t8016 + t7565 * t8025) * t7917 - t8033 * t7715;
t7484 = t7487 ^ 2;
t7934 = t8014 * pkin(2);
t7899 = pkin(1) * t7934;
t8656 = pkin(2) * t8786;
t8169 = pkin(1) * t8941 + (-t7899 + (t8656 + t7935) * pkin(5)) * t7992;
t7672 = 0.1e1 / t8169 ^ 2;
t7479 = t7484 * t7672;
t8647 = pkin(5) * t7479;
t7616 = t7724 * t8025 - t7725 * t8016;
t7617 = t7724 * t8016 + t7725 * t8025;
t8197 = t7616 * t7921 - t7917 * t7617;
t7571 = pkin(2) * t8197;
t7577 = t7616 * t7917 + t7617 * t7921;
t8952 = t7724 * t7992;
t7624 = -pkin(1) * t7725 + pkin(5) * t8952;
t8951 = t7725 * t7992;
t7625 = pkin(1) * t7724 + pkin(5) * t8951;
t7632 = pkin(1) * t8952 + pkin(5) * t7725;
t7633 = pkin(1) * t8951 - pkin(5) * t7724;
t8785 = t8024 * t8033;
t7852 = pkin(6) * t8785;
t7976 = t8024 ^ 2;
t7911 = t7976 - 0.2e1;
t8800 = t8015 * t8024;
t8470 = t8014 * t8800;
t8263 = t8470 * t9106;
t8904 = (t8024 + 0.1e1) * (t8024 - 0.1e1);
t8403 = t8904 * t9095;
t9127 = t7976 - 0.1e1;
t8425 = t9127 * t7934 - pkin(5);
t8671 = pkin(2) * t8844;
t7972 = t8023 ^ 2;
t8882 = t7972 * t8015;
t8679 = pkin(2) * t8882;
t8685 = t7911 * t7934;
t9109 = pkin(2) * t7972;
t8733 = 0.2e1 * t9109;
t8843 = t7992 * t8015;
t9201 = -t8197 * t9081 - t7945;
t7390 = ((-t8033 * t8685 - t9201) * t8023 + (-t8197 * t8733 - (-pkin(5) * t8197 + t7852) * t8014 + t7571) * t8015) * t7964 + (-(t7577 * t8024 + t8015 * t8697) * t9109 + (-t7911 * t8197 * t8671 + (t7624 * t8025 - t7625 * t8016) * t7921 + (-t7624 * t8016 - t7625 * t8025) * t7917 + (-t7577 * t8015 - t7992 * t8785) * pkin(6)) * t8023 + (t8014 * t9201 - t9101) * t8843) * t7993 + t8197 * t8679 + (t7577 * t8263 + t8033 * t8425) * t8023 + (((t7632 * t8016 + t7633 * t8025) * t7921 + (t7632 * t8025 - t7633 * t8016) * t7917 + t7852) * t8014 - t7571) * t8015 + (pkin(1) * t8785 - t7577 * t8403) * t8014;
t7671 = 0.1e1 / t8169;
t7973 = 0.1e1 / t8023;
t8971 = t7671 * t7973;
t7380 = t7390 * t8971;
t9022 = t7487 * t7671;
t7470 = t7993 * t9022;
t7325 = -t7470 - t7380;
t7371 = t8051 * t7380;
t8540 = t8197 * t8849;
t7559 = -t8417 - t8540;
t8898 = t7964 * t8015;
t8639 = pkin(6) * t8898;
t9222 = t7935 + pkin(1);
t7801 = -t8639 + t9222;
t7873 = 0.2e1 * t7935 + pkin(1);
t7947 = pkin(1) * t8015;
t7886 = t7947 + pkin(6);
t7872 = t7934 + pkin(5);
t8309 = t8197 * t7872 * t8906;
t8383 = t7947 - t8626;
t8387 = pkin(6) * t8540;
t8880 = t7972 * t8054;
t8411 = -t8051 + t8880;
t8499 = t7872 * t8815;
t9184 = 0.2e1 * pkin(6);
t9072 = pkin(2) * t9184;
t8629 = t8023 * t9072;
t9104 = pkin(2) * t8023;
t7432 = (t7577 * t7992 * t8411 + t7559 * t8629) * t7976 + (-t7559 * t8015 * t8880 + ((t7577 * t7873 - t8499) * t7992 + t8309) * t9104 + (t7801 * t8033 - t8015 * t8387) * pkin(6)) * t8024 - (t8033 * t8383 - t8387) * t9104 + ((t7577 * t7886 - t8015 * t8499) * t7992 + t8015 * t8309) * pkin(6);
t8727 = pkin(5) * t7935;
t7753 = t7992 * (t7899 - t8727);
t8838 = t7992 * t8023;
t8668 = pkin(2) * t8838;
t8087 = (pkin(5) * t8668 - t7893) * t8024 + t8659 * t9112 - t7753;
t9240 = 0.1e1 / t8087;
t8989 = t9240 * t7973;
t8593 = t7432 * t8989;
t7415 = t8014 * t8593;
t8139 = pkin(6) * t7415 - t7371;
t7248 = t7325 * t8880 - (-t7813 * t8671 + t8814) * t9022 + t8139;
t8360 = t8014 * t7380;
t8275 = pkin(6) * t8360 - t8593;
t7255 = (-((pkin(2) * t8024 + pkin(6) * t8801) * t7992 + pkin(6) * t8827) * t9022 - t8275) * t7671 * t8593;
t7687 = -t7793 * t7989 - t8010 * t8193 + t8012;
t7737 = t7917 * t8016 - t8025 * t7921;
t7740 = t7917 * t8025 + t7921 * t8016;
t8515 = t7737 * t8844;
t7584 = -t7740 * t7935 + t7737 * t8941 + (-t7740 * t8786 - t8515) * pkin(2);
t9003 = t7584 * t7671;
t7532 = t7687 * t9003;
t7691 = -t7793 * t8010 + t7989 * t8193 + t8013;
t8512 = t7740 * t8844;
t7587 = t7737 * t7935 + t7740 * t8941 + (t7737 * t8786 - t8512) * pkin(2);
t9000 = t7587 * t7671;
t7535 = t7691 * t9000;
t8961 = t7671 * t7715;
t7603 = t8011 * t8961;
t8296 = t7255 - t7532 - t7535 + t7603;
t9034 = t7390 * t7973;
t7857 = t7934 + t8040;
t7871 = pkin(5) * t8014 + pkin(2);
t7898 = pkin(5) * t7934;
t7904 = pkin(1) * t7935;
t8820 = t7993 * t8024;
t8483 = t7992 * t8820;
t8399 = pkin(6) * t8483;
t8489 = t7911 * t8880;
t8508 = t7857 * t8849;
t8895 = t7964 * t8024;
t8636 = pkin(6) * t8895;
t8720 = 0.2e1 * t8015;
t7349 = pkin(2) * t8360;
t8876 = t7973 * t8055;
t8527 = t9240 * t8876;
t8340 = t7432 * t8527;
t7418 = pkin(6) * t8340;
t8775 = -t7349 - t7418;
t8874 = t7976 * t8051;
t8877 = t7973 * t8024;
t9035 = t7390 * t7671;
t9093 = pkin(6) * t8014;
t7236 = (-t8023 * t8054 * t9035 + t8139) * t7993 + (-t8775 * t8801 + (t7432 * t9240 - t9035 * t9093) * t8877) * t9106 - (-(t8489 - t8874) * t7964 + 0.2e1 * t7857 * t8399 + t8880 * t8904 - t8874 + t7898 + t7904 + (-t7871 * t7964 + (t7873 * t8024 + (-t8508 - t8636) * t8720) * t8023) * pkin(2) + t8737) * t9022;
t9050 = t7236 * t7487;
t7199 = (-t7248 * t9034 - t9050) * t7672 + t8296;
t7196 = pkin(1) * t7199;
t7936 = t8016 * g(1);
t9079 = t8025 * g(2);
t7836 = -t7936 + t9079;
t9080 = t8025 * g(1);
t9083 = t8016 * g(2);
t7837 = t9080 + t9083;
t8753 = t7836 * t7921 - t7837 * t7917;
t9261 = t7196 - t8753;
t9244 = -t7992 * t8647 - t9261;
t9265 = t7993 * t9244 + t7914;
t8043 = koppelP(2,2);
t8047 = koppelP(2,1);
t8192 = t7959 * t8043 - t7960 * t8047;
t7726 = t8032 * t8192 - t8034;
t7794 = t7959 * t8047 + t7960 * t8043;
t7727 = t7794 * t8032 - t8035;
t8018 = sin(qJ(2,2));
t7938 = t8018 * pkin(6);
t8026 = cos(qJ(3,2));
t8027 = cos(qJ(2,2));
t8784 = t8026 * t8027;
t8017 = sin(qJ(3,2));
t8842 = t7992 * t8017;
t8795 = t8018 * t8026;
t8658 = pkin(2) * t8795;
t9078 = t8027 * pkin(6);
t7814 = t8658 - t9078;
t8940 = t7814 * t7993;
t7566 = t7727 * t7938 + t7726 * t8940 + (-t7726 * t8842 + t7727 * t8784) * pkin(2);
t7567 = t7726 * t7938 - t7727 * t8940 + (t7726 * t8784 + t7727 * t8842) * pkin(2);
t8825 = t7993 * t8017;
t7716 = pkin(2) * t8825 + t7814 * t7992;
t8002 = legFrame(2,3);
t7918 = sin(t8002);
t7922 = cos(t8002);
t8019 = sin(qJ(1,2));
t8028 = cos(qJ(1,2));
t7488 = (t7566 * t8028 + t7567 * t8019) * t7922 + (-t7566 * t8019 + t7567 * t8028) * t7918 - t8033 * t7716;
t7485 = t7488 ^ 2;
t7937 = t8017 * pkin(2);
t7901 = pkin(1) * t7937;
t8654 = pkin(2) * t8784;
t8168 = pkin(1) * t8940 + (-t7901 + (t8654 + t7938) * pkin(5)) * t7992;
t7675 = 0.1e1 / t8168 ^ 2;
t7480 = t7485 * t7675;
t8646 = pkin(5) * t7480;
t7618 = t7726 * t8028 - t7727 * t8019;
t7619 = t7726 * t8019 + t7727 * t8028;
t8196 = t7618 * t7922 - t7918 * t7619;
t7572 = pkin(2) * t8196;
t7579 = t7618 * t7918 + t7619 * t7922;
t8950 = t7726 * t7992;
t7626 = -pkin(1) * t7727 + pkin(5) * t8950;
t8949 = t7727 * t7992;
t7627 = pkin(1) * t7726 + pkin(5) * t8949;
t7634 = pkin(1) * t8950 + pkin(5) * t7727;
t7635 = pkin(1) * t8949 - pkin(5) * t7726;
t8783 = t8027 * t8033;
t7853 = pkin(6) * t8783;
t7982 = t8027 ^ 2;
t7912 = t7982 - 0.2e1;
t8794 = t8018 * t8027;
t8468 = t8017 * t8794;
t8262 = t8468 * t9106;
t8903 = (t8027 + 0.1e1) * (t8027 - 0.1e1);
t8402 = t8903 * t9095;
t9123 = t7982 - 0.1e1;
t8424 = t9123 * t7937 - pkin(5);
t8670 = pkin(2) * t8842;
t7978 = t8026 ^ 2;
t8872 = t7978 * t8018;
t8677 = pkin(2) * t8872;
t8684 = t7912 * t7937;
t9108 = pkin(2) * t7978;
t8732 = 0.2e1 * t9108;
t8841 = t7992 * t8018;
t9202 = -t8196 * t9078 - t7945;
t7391 = ((-t8033 * t8684 - t9202) * t8026 + (-t8196 * t8732 - (-pkin(5) * t8196 + t7853) * t8017 + t7572) * t8018) * t7964 + (-(t7579 * t8027 + t8018 * t8697) * t9108 + (-t7912 * t8196 * t8670 + (t7626 * t8028 - t7627 * t8019) * t7922 + (-t7626 * t8019 - t7627 * t8028) * t7918 + (-t7579 * t8018 - t7992 * t8783) * pkin(6)) * t8026 + (t8017 * t9202 - t9101) * t8841) * t7993 + t8196 * t8677 + (t7579 * t8262 + t8033 * t8424) * t8026 + (((t7634 * t8019 + t7635 * t8028) * t7922 + (t7634 * t8028 - t7635 * t8019) * t7918 + t7853) * t8017 - t7572) * t8018 + (pkin(1) * t8783 - t7579 * t8402) * t8017;
t7674 = 0.1e1 / t8168;
t7979 = 0.1e1 / t8026;
t8967 = t7674 * t7979;
t7382 = t7391 * t8967;
t9019 = t7488 * t7674;
t7471 = t7993 * t9019;
t7327 = -t7471 - t7382;
t7372 = t8051 * t7382;
t8539 = t8196 * t8849;
t7560 = -t8417 - t8539;
t8897 = t7964 * t8018;
t8638 = pkin(6) * t8897;
t9221 = t7938 + pkin(1);
t7802 = -t8638 + t9221;
t7877 = 0.2e1 * t7938 + pkin(1);
t7948 = pkin(1) * t8018;
t7887 = t7948 + pkin(6);
t7876 = t7937 + pkin(5);
t8308 = t8196 * t7876 * t8906;
t8382 = t7948 - t8626;
t8386 = pkin(6) * t8539;
t8870 = t7978 * t8054;
t8410 = -t8051 + t8870;
t8495 = t7876 * t8815;
t8628 = t8026 * t9072;
t9103 = pkin(2) * t8026;
t7433 = (t7579 * t7992 * t8410 + t7560 * t8628) * t7982 + (-t7560 * t8018 * t8870 + ((t7579 * t7877 - t8495) * t7992 + t8308) * t9103 + (t7802 * t8033 - t8018 * t8386) * pkin(6)) * t8027 - (t8033 * t8382 - t8386) * t9103 + ((t7579 * t7887 - t8018 * t8495) * t7992 + t8018 * t8308) * pkin(6);
t8726 = pkin(5) * t7938;
t7754 = t7992 * (t7901 - t8726);
t8836 = t7992 * t8026;
t8667 = pkin(2) * t8836;
t8086 = (pkin(5) * t8667 - t7893) * t8027 + t8658 * t9112 - t7754;
t9241 = 0.1e1 / t8086;
t8987 = t9241 * t7979;
t8591 = t7433 * t8987;
t7416 = t8017 * t8591;
t8138 = pkin(6) * t7416 - t7372;
t7249 = t7327 * t8870 - (-t7814 * t8670 + t8814) * t9019 + t8138;
t8355 = t8017 * t7382;
t8274 = pkin(6) * t8355 - t8591;
t7256 = (-((pkin(2) * t8027 + pkin(6) * t8795) * t7992 + pkin(6) * t8825) * t9019 - t8274) * t7674 * t8591;
t7688 = -t7794 * t7989 - t8010 * t8192 + t8012;
t7738 = t7918 * t8019 - t8028 * t7922;
t7741 = t7918 * t8028 + t7922 * t8019;
t8514 = t7738 * t8842;
t7585 = -t7741 * t7938 + t7738 * t8940 + (-t7741 * t8784 - t8514) * pkin(2);
t9002 = t7585 * t7674;
t7533 = t7688 * t9002;
t7692 = -t7794 * t8010 + t7989 * t8192 + t8013;
t8511 = t7741 * t8842;
t7588 = t7738 * t7938 + t7741 * t8940 + (t7738 * t8784 - t8511) * pkin(2);
t8999 = t7588 * t7674;
t7536 = t7692 * t8999;
t8960 = t7674 * t7716;
t7604 = t8011 * t8960;
t8295 = t7256 - t7533 - t7536 + t7604;
t9031 = t7391 * t7979;
t7859 = t7937 + t8040;
t7875 = pkin(5) * t8017 + pkin(2);
t7900 = pkin(5) * t7937;
t7905 = pkin(1) * t7938;
t8818 = t7993 * t8027;
t8482 = t7992 * t8818;
t8398 = pkin(6) * t8482;
t8488 = t7912 * t8870;
t8507 = t7859 * t8849;
t8894 = t7964 * t8027;
t8635 = pkin(6) * t8894;
t8719 = 0.2e1 * t8018;
t7350 = pkin(2) * t8355;
t8866 = t7979 * t8055;
t8526 = t9241 * t8866;
t8338 = t7433 * t8526;
t7419 = pkin(6) * t8338;
t8774 = -t7350 - t7419;
t8864 = t7982 * t8051;
t8867 = t7979 * t8027;
t9032 = t7391 * t7674;
t9092 = pkin(6) * t8017;
t7237 = (-t8026 * t8054 * t9032 + t8138) * t7993 + (-t8774 * t8795 + (t7433 * t9241 - t9032 * t9092) * t8867) * t9106 - (-(t8488 - t8864) * t7964 + 0.2e1 * t7859 * t8398 + t8870 * t8903 - t8864 + t7900 + t7905 + (-t7875 * t7964 + (t7877 * t8027 + (-t8507 - t8635) * t8719) * t8026) * pkin(2) + t8737) * t9019;
t9049 = t7237 * t7488;
t7200 = (-t7249 * t9031 - t9049) * t7675 + t8295;
t7197 = pkin(1) * t7200;
t7939 = t8019 * g(1);
t9076 = t8028 * g(2);
t7838 = -t7939 + t9076;
t9077 = t8028 * g(1);
t9082 = t8019 * g(2);
t7839 = t9077 + t9082;
t8749 = t7838 * t7922 - t7839 * t7918;
t9260 = t7197 - t8749;
t9245 = -t7992 * t8646 - t9260;
t9264 = t7993 * t9245 + t7914;
t8044 = koppelP(1,2);
t8048 = koppelP(1,1);
t8191 = t7959 * t8044 - t7960 * t8048;
t7728 = t8032 * t8191 - t8034;
t7795 = t7959 * t8048 + t7960 * t8044;
t7729 = t7795 * t8032 - t8035;
t8021 = sin(qJ(2,1));
t7941 = t8021 * pkin(6);
t8029 = cos(qJ(3,1));
t8030 = cos(qJ(2,1));
t8782 = t8029 * t8030;
t8020 = sin(qJ(3,1));
t8840 = t7992 * t8020;
t8789 = t8021 * t8029;
t8657 = pkin(2) * t8789;
t9075 = t8030 * pkin(6);
t7815 = t8657 - t9075;
t8939 = t7815 * t7993;
t7568 = t7729 * t7941 + t7728 * t8939 + (-t7728 * t8840 + t7729 * t8782) * pkin(2);
t7569 = t7728 * t7941 - t7729 * t8939 + (t7728 * t8782 + t7729 * t8840) * pkin(2);
t8823 = t7993 * t8020;
t7717 = pkin(2) * t8823 + t7815 * t7992;
t8003 = legFrame(1,3);
t7919 = sin(t8003);
t7923 = cos(t8003);
t8022 = sin(qJ(1,1));
t8031 = cos(qJ(1,1));
t7489 = (t7568 * t8031 + t7569 * t8022) * t7923 + (-t7568 * t8022 + t7569 * t8031) * t7919 - t8033 * t7717;
t7486 = t7489 ^ 2;
t7940 = t8020 * pkin(2);
t7903 = pkin(1) * t7940;
t8653 = pkin(2) * t8782;
t8167 = pkin(1) * t8939 + (-t7903 + (t8653 + t7941) * pkin(5)) * t7992;
t7678 = 0.1e1 / t8167 ^ 2;
t7481 = t7486 * t7678;
t8645 = pkin(5) * t7481;
t7620 = t7728 * t8031 - t7729 * t8022;
t7621 = t7728 * t8022 + t7729 * t8031;
t8195 = t7620 * t7923 - t7919 * t7621;
t7573 = pkin(2) * t8195;
t7581 = t7620 * t7919 + t7621 * t7923;
t8948 = t7728 * t7992;
t7628 = -pkin(1) * t7729 + pkin(5) * t8948;
t8947 = t7729 * t7992;
t7629 = pkin(1) * t7728 + pkin(5) * t8947;
t7636 = pkin(1) * t8948 + pkin(5) * t7729;
t7637 = pkin(1) * t8947 - pkin(5) * t7728;
t8781 = t8030 * t8033;
t7854 = pkin(6) * t8781;
t7988 = t8030 ^ 2;
t7913 = t7988 - 0.2e1;
t8788 = t8021 * t8030;
t8467 = t8020 * t8788;
t8261 = t8467 * t9106;
t8902 = (t8030 + 0.1e1) * (t8030 - 0.1e1);
t8401 = t8902 * t9095;
t9119 = t7988 - 0.1e1;
t8423 = t9119 * t7940 - pkin(5);
t8669 = pkin(2) * t8840;
t7984 = t8029 ^ 2;
t8862 = t7984 * t8021;
t8675 = pkin(2) * t8862;
t8683 = t7913 * t7940;
t9107 = pkin(2) * t7984;
t8731 = 0.2e1 * t9107;
t8839 = t7992 * t8021;
t9203 = -t8195 * t9075 - t7945;
t7392 = ((-t8033 * t8683 - t9203) * t8029 + (-t8195 * t8731 - (-pkin(5) * t8195 + t7854) * t8020 + t7573) * t8021) * t7964 + (-(t7581 * t8030 + t8021 * t8697) * t9107 + (-t7913 * t8195 * t8669 + (t7628 * t8031 - t7629 * t8022) * t7923 + (-t7628 * t8022 - t7629 * t8031) * t7919 + (-t7581 * t8021 - t7992 * t8781) * pkin(6)) * t8029 + (t8020 * t9203 - t9101) * t8839) * t7993 + t8195 * t8675 + (t7581 * t8261 + t8033 * t8423) * t8029 + (((t7636 * t8022 + t7637 * t8031) * t7923 + (t7636 * t8031 - t7637 * t8022) * t7919 + t7854) * t8020 - t7573) * t8021 + (pkin(1) * t8781 - t7581 * t8401) * t8020;
t7677 = 0.1e1 / t8167;
t7985 = 0.1e1 / t8029;
t8963 = t7677 * t7985;
t7384 = t7392 * t8963;
t9016 = t7489 * t7677;
t7472 = t7993 * t9016;
t7329 = -t7472 - t7384;
t7373 = t8051 * t7384;
t8538 = t8195 * t8849;
t7561 = -t8417 - t8538;
t8896 = t7964 * t8021;
t8637 = pkin(6) * t8896;
t9220 = t7941 + pkin(1);
t7803 = -t8637 + t9220;
t7881 = 0.2e1 * t7941 + pkin(1);
t7949 = pkin(1) * t8021;
t7888 = t7949 + pkin(6);
t7880 = t7940 + pkin(5);
t8307 = t8195 * t7880 * t8906;
t8381 = t7949 - t8626;
t8385 = pkin(6) * t8538;
t8860 = t7984 * t8054;
t8409 = -t8051 + t8860;
t8491 = t7880 * t8815;
t8627 = t8029 * t9072;
t9102 = pkin(2) * t8029;
t7434 = (t7581 * t7992 * t8409 + t7561 * t8627) * t7988 + (-t7561 * t8021 * t8860 + ((t7581 * t7881 - t8491) * t7992 + t8307) * t9102 + (t7803 * t8033 - t8021 * t8385) * pkin(6)) * t8030 - (t8033 * t8381 - t8385) * t9102 + ((t7581 * t7888 - t8021 * t8491) * t7992 + t8021 * t8307) * pkin(6);
t8725 = pkin(5) * t7941;
t7755 = t7992 * (t7903 - t8725);
t8834 = t7992 * t8029;
t8666 = pkin(2) * t8834;
t8085 = (pkin(5) * t8666 - t7893) * t8030 + t8657 * t9112 - t7755;
t9242 = 0.1e1 / t8085;
t8985 = t9242 * t7985;
t8589 = t7434 * t8985;
t7417 = t8020 * t8589;
t8137 = pkin(6) * t7417 - t7373;
t7250 = t7329 * t8860 - (-t7815 * t8669 + t8814) * t9016 + t8137;
t8350 = t8020 * t7384;
t8273 = pkin(6) * t8350 - t8589;
t7257 = (-((pkin(2) * t8030 + pkin(6) * t8789) * t7992 + pkin(6) * t8823) * t9016 - t8273) * t7677 * t8589;
t7689 = -t7795 * t7989 - t8010 * t8191 + t8012;
t7739 = t7919 * t8022 - t8031 * t7923;
t7742 = t7919 * t8031 + t7923 * t8022;
t8513 = t7739 * t8840;
t7586 = -t7742 * t7941 + t7739 * t8939 + (-t7742 * t8782 - t8513) * pkin(2);
t9001 = t7586 * t7677;
t7534 = t7689 * t9001;
t7693 = -t7795 * t8010 + t7989 * t8191 + t8013;
t8510 = t7742 * t8840;
t7589 = t7739 * t7941 + t7742 * t8939 + (t7739 * t8782 - t8510) * pkin(2);
t8998 = t7589 * t7677;
t7537 = t7693 * t8998;
t8959 = t7677 * t7717;
t7605 = t8011 * t8959;
t8294 = t7257 - t7534 - t7537 + t7605;
t9028 = t7392 * t7985;
t7861 = t7940 + t8040;
t7879 = pkin(5) * t8020 + pkin(2);
t7902 = pkin(5) * t7940;
t7906 = pkin(1) * t7941;
t8816 = t7993 * t8030;
t8481 = t7992 * t8816;
t8397 = pkin(6) * t8481;
t8487 = t7913 * t8860;
t8506 = t7861 * t8849;
t8893 = t7964 * t8030;
t8634 = pkin(6) * t8893;
t8718 = 0.2e1 * t8021;
t7351 = pkin(2) * t8350;
t8856 = t7985 * t8055;
t8525 = t9242 * t8856;
t8336 = t7434 * t8525;
t7420 = pkin(6) * t8336;
t8773 = -t7351 - t7420;
t8854 = t7988 * t8051;
t8857 = t7985 * t8030;
t9029 = t7392 * t7677;
t9091 = pkin(6) * t8020;
t7238 = (-t8029 * t8054 * t9029 + t8137) * t7993 + (-t8773 * t8789 + (t7434 * t9242 - t9029 * t9091) * t8857) * t9106 - (-(t8487 - t8854) * t7964 + 0.2e1 * t7861 * t8397 + t8860 * t8902 - t8854 + t7902 + t7906 + (-t7879 * t7964 + (t7881 * t8030 + (-t8506 - t8634) * t8718) * t8029) * pkin(2) + t8737) * t9016;
t9048 = t7238 * t7489;
t7201 = (-t7250 * t9028 - t9048) * t7678 + t8294;
t7198 = pkin(1) * t7201;
t7946 = g(1) * t8022;
t9088 = g(2) * t8031;
t7840 = -t7946 + t9088;
t9089 = g(2) * t8022;
t9090 = g(1) * t8031;
t7841 = t9089 + t9090;
t8745 = t7840 * t7923 - t7841 * t7919;
t9259 = t7198 - t8745;
t9246 = -t7992 * t8645 - t9259;
t9263 = t7993 * t9246 + t7914;
t7275 = -t7411 + t8244;
t7339 = pkin(6) * t7345;
t8260 = pkin(5) * t8343;
t7277 = t7339 - t8260;
t7278 = pkin(5) * t7339 - t7410;
t8887 = t7967 * t8005;
t8604 = t7386 * t8887;
t8366 = t7666 * t8604;
t7335 = pkin(1) * t8366;
t7342 = t8054 * t7345;
t7343 = pkin(1) * t7345;
t8342 = t8005 * t7411;
t8221 = t8055 * t8342;
t7405 = pkin(1) * t8221;
t7408 = pkin(1) * t8343;
t8052 = pkin(5) ^ 2;
t8736 = pkin(1) ^ 2 + t8052;
t8433 = t8054 + t8736;
t7850 = t8051 + t8433;
t7856 = t7927 / 0.2e1 + pkin(1);
t7961 = t8052 + t8054;
t7963 = t7993 * t7964;
t7965 = t8007 * t7966;
t7969 = t8008 * t7970;
t9137 = pkin(6) * pkin(1);
t7990 = 0.2e1 * t9137;
t8049 = 0.2e1 * pkin(5);
t7991 = pkin(2) * t8049;
t8471 = t7483 * t8808;
t8330 = t7666 * t8471;
t8174 = pkin(6) * t7864 * t8330;
t8186 = t7992 * t7408;
t8243 = pkin(2) * t7277 + t7278 * t8004;
t8587 = t7992 * t9025;
t8256 = pkin(6) * t8004 * t8587;
t8292 = 0.3e1 * t8054 + t8051 + t8736;
t8586 = t8005 * t9025;
t8331 = t7992 * t8586;
t8421 = -0.2e1 * t9025;
t7340 = pkin(5) * t7345;
t8776 = -t7340 - t7407;
t8451 = t7405 - t8776;
t8892 = t7965 * t8054;
t8521 = t7666 * t8892;
t8845 = t7992 * t8008;
t8583 = t7483 * t8845;
t9023 = t7483 * t7967;
t8584 = t7667 * t9023;
t8585 = t8008 * t9025;
t8680 = t7970 * t7926;
t8739 = t8052 / 0.3e1 + t8054;
t8740 = -t8051 / 0.3e1 - 0.2e1 / 0.3e1 * t8054;
t8741 = t8051 / 0.2e1 + t8054;
t8769 = -t7407 - t7340 / 0.2e1;
t8807 = t8005 * t8051;
t9043 = t7277 * t8005;
t9047 = (-pkin(2) * t7345 + t8004 * t8776) * t7970;
t9113 = pkin(1) * t7992;
t9143 = 0.2e1 * t8004;
t9155 = 0.2e1 * t7970;
t9156 = -0.2e1 * t7970;
t7115 = (-0.3e1 * ((t7970 - 0.4e1 / 0.3e1) * t8892 + ((-0.2e1 / 0.3e1 * t7894 + t8740) * t7970 + 0.4e1 / 0.3e1 * t7894 + t8739) * t8007 + (0.4e1 / 0.3e1 * t9110 - 0.2e1 / 0.3e1 * t7864) * pkin(6) * t8808) * t7963 * t9025 + (-t8490 * t9039 - ((-t7343 + t9043) * t8008 - (-0.4e1 * t7865 + t8680) * t8331) * t9110 + (t7341 - t7342 - (-pkin(1) * t8604 - 0.4e1 * t7855 * t8583) * t7666 * pkin(6) + (-0.2e1 * t7969 * t8256 - t9047 + (-t7405 + t8769) * t9143) * pkin(2)) * t8007 + (t8243 * t8008 - (-t7991 + (-t7961 + t8884) * t8004) * t8587) * t8005) * t7964 + (-(-0.3e1 * t7970 + 0.3e1) * t7483 * t8521 - (-t7970 * t8186 - 0.2e1 * t7866 * t8585 + (-t7408 + (-t7334 + t8769) * t8005) * t9144) * t9110 + (((t7277 - t7335) * t7926 + t7278) * t8845 - ((t7894 + t8741) * t9155 - 0.4e1 * t7894 - 0.2e1 * t7896 - t8292) * t9025) * t8007 + t7275 * t7970 * t9113 - 0.2e1 * t8174 - (pkin(2) * (-pkin(6) * t8221 - t7408) - (-t8807 - t9137) * t8367) * t7992) * t7993 + t9131 * t7342 * t7965 + (t7277 * t8008 - (-t7926 - t8049 + t8680) * t8587) * t8681 + (t7342 + (t9047 + ((-pkin(6) * t7969 + t7869 * t8008) * t7992 * t8421 + t8451) * t8004) * pkin(2)) * t8007 - t7856 * t8256 * t9156 - t8243 * t8808 - ((t7850 * t8005 + t7990) * t8004 + t8005 * t7991) * t8587) * t8584;
t7276 = -t7406 + t7339;
t7931 = pkin(1) * t7970;
t7827 = t7931 - t9223;
t8268 = t7827 * t7993;
t8910 = t7907 * t7964;
t8416 = -t7970 + t8910;
t8291 = t8416 + 0.1e1;
t9036 = t7386 * t7993;
t8606 = t7967 * t9036;
t8408 = pkin(1) * t8606;
t8735 = t8054 - t8051;
t8438 = t7894 + t8735;
t7260 = -t7334 + t8776;
t8780 = t7260 * t8005 - t7408;
t8921 = t9223 * t7992;
t7968 = 0.1e1 / t8007 ^ 2;
t7846 = pkin(6) * t8828;
t8633 = pkin(5) * t8845;
t8830 = t7993 * t8005;
t8691 = pkin(1) * t8830;
t8690 = (t8633 + t8691) * t9105;
t9183 = 0.1e1 / (-pkin(1) * t7846 - t7752 + t8690);
t8990 = t9183 * t7968;
t9234 = t7869 * t7993 + t8633;
t7203 = (-(t7483 * t8291 - t8606) * t8521 + (t7992 * t8780 - (-t8008 * t8408 + (-(-t7927 + pkin(1)) * t8899 + (0.2e1 * t8509 - t9086) * t8005) * t7483) * t7666) * t9110 + (t9234 * t7276 - (-(t7896 - t8438) * t7964 + (-pkin(6) * t7865 + t7895 * t8005) * t8484 + (-t7964 * t7970 + t9131) * pkin(2) * t7864) * t9025) * t8007 + t7964 * t8174 + t8256 * t8268 - t8174 - t7275 * t8921) * t8990 * t9039;
t9099 = pkin(6) * t7970;
t7826 = t7869 - t9099;
t8050 = -0.2e1 * pkin(1);
t8185 = t8008 * t7408;
t8206 = t7865 * t8330;
t8598 = t7428 * t8990;
t9158 = -0.2e1 * t7964;
t7215 = (-(-t8921 * t9038 + ((t7931 - 0.2e1 * t7927 + t8050) * t8849 + t9135 * pkin(5) * t8808) * t7483) * t7666 * t7966 + (-t7411 * t7993 - (-t7483 * t7864 * t8484 + (((-t9099 / 0.2e1 + t7869) * t9158 + t7826) * t7483 - t9234 * t9038) * t8004) * t7666) * t8007 + t7964 * t8206 + (t7827 * t8587 - t8185) * t7993 + ((-t7277 + t7406) * t8005 - t7343) * t7992 - t8206) * t9239 * t8598;
t7820 = -pkin(5) + t8686;
t8430 = t7864 - 0.2e1 * t9110;
t9190 = -t7864 * t8005 + (-pkin(6) * t8473 - t7820 * t8007) * t8849 + t8681 + (pkin(6) * t8806 + t8005 * t8430) * t7964;
t8890 = t7966 * t8008;
t9230 = t7993 * (pkin(2) * t8890 + t8007 * t9223) + t8004 * t8404 - t8007 * t8264;
t7510 = t9190 * t7735 + t9230 * t7736 - t8516 * t7930;
t8561 = t7510 * t8975;
t7492 = t7686 * t8561;
t7511 = -t9230 * t7735 + t9190 * t7736 + t8517 * t7930;
t8560 = t7511 * t8975;
t7493 = t7690 * t8560;
t8920 = t9223 * t8008;
t7590 = (t7820 * t7964 + t8400 - t8426) * t8007 - t8004 * t8920 + (t8004 * t8640 + t8430 * t8849) * t8005;
t8991 = t9183 * t7967;
t8528 = t8011 * t8991;
t7548 = t7590 * t8528;
t7090 = -t7493 - t7492 + t7548 - t7115 - t7203 + t7215;
t8053 = pkin(2) * t8054;
t8472 = t7865 * t8845;
t8314 = t8005 * t8472;
t8832 = t7992 * t8055;
t9037 = t7386 * t7968;
t8365 = t8832 * t9037;
t8922 = t7865 * t7992;
t9138 = pkin(6) / 0.2e1;
t7226 = (-t8008 * t8053 * t7320 * t7965 - (t7320 * t7927 - t7343 - (t7970 * t9112 - t8314) * t9025) * t8889 - 0.2e1 * ((t7406 / 0.2e1 - t7339 / 0.2e1) * t8008 - ((t7930 + t9138) * t8828 + (t7970 - 0.1e1 / 0.2e1) * t8922) * t9025) * t8729 + (t7276 * t9223 - (t8268 - t8314) * pkin(6) * t9025) * pkin(6)) * t9183 * t7666 * t8365;
t8504 = t8009 * t8922;
t7706 = t7869 * t8006 - t8005 * t8504;
t7718 = t7866 * t8006 - t8504;
t8505 = t8006 * t8922;
t8124 = t7869 * t8009 + t8005 * t8505;
t8147 = t7866 * t8009 + t8505;
t8242 = t8412 * t7736;
t8829 = t7993 * t8007;
t8665 = pkin(2) * t8829;
t8395 = t7736 * t8665;
t9185 = -0.2e1 * pkin(6);
t9235 = (t7735 * t8412 + t8395 * t9185) * t7970;
t7522 = t9235 + ((t7916 * t7718 - t7920 * t8147) * t9105 + t8242 * t8830) * t8008 + (t7916 * t7706 - t7920 * t8124 + t8395) * pkin(6);
t7506 = t7522 * t7992 * t7690 * t8529;
t9228 = 0.2e1 * t7964;
t9134 = t9228 - 0.2e1;
t7863 = t9134 * pkin(6);
t8486 = t8054 * t8906;
t8306 = t7966 * t8486;
t8485 = t7992 * t8830;
t7591 = -t8306 * t8808 + (t7863 * t7970 + t7993 * t8472 + t8384) * t9105 - (t7800 * t8008 - t7865 * t8485) * pkin(6);
t7547 = t7591 * t8055 * t8528;
t8332 = t8906 * t9025;
t8373 = ((-t8332 * t8920 - t8186) * t9110 + (-t8438 * t7970 * t8332 - pkin(2) * (t7411 + (-t7454 * t7869 - t7277) * t8004) * t8845 - t7406 * t8691) * t8007 + (t8185 * t8831 - t7992 * ((-t7343 - t9043) * t8004 + t8342) - (t8268 * t8848 + (t7864 * t8808 + t7869 * t8007) * t9135) * t9025) * pkin(6)) * t8598;
t8166 = t8412 * t8830;
t8396 = t7735 * t8665;
t7523 = (t8396 * t9184 + t8242) * t7970 + ((t7718 * t7920 + t7916 * t8147) * t9105 - t7735 * t8166) * t8008 + (t7706 * t7920 + t7916 * t8124 - t8396) * pkin(6);
t8551 = t7523 * t7992 * t7686;
t7889 = t7964 - 0.1e1 / 0.2e1;
t8460 = t9038 / 0.2e1;
t7314 = (t7483 * t7889 + t7993 * t8460) * t7666;
t7338 = 0.2e1 * t7339;
t7870 = 0.2e1 * t7894;
t8038 = -0.3e1 * t8051;
t8214 = t8007 * t8332;
t8742 = t7963 - t7993;
t8283 = t8742 * t9184;
t8293 = 0.3e1 * t8051 + t8433;
t8333 = t7865 * t7454;
t8431 = 0.2e1 * t8054 * t9095;
t8738 = t8052 / 0.2e1 + t8054 / 0.2e1;
t8434 = t8051 + t8738;
t8682 = pkin(2) * t8906;
t8723 = 0.2e1 * t7992;
t8696 = t8053 * t8723;
t9186 = 0.2e1 * pkin(1);
t8621 = ((t8038 + t8889) * t7969 * t8214 * t9106 + (((t7338 - t8260) * t7926 - t7410 + (0.2e1 * t7340 + t7407 + 0.4e1 * t8333) * pkin(6)) * t8007 * t8682 + (t7276 * t7893 - (t8408 * t8889 + ((t9186 + 0.3e1 * t7927 - 0.3e1 * t8641) * t8889 + (t7856 * t9185 + t7964 * t8807) * pkin(6)) * t7483) * t7666) * t7992) * t7970 + (-t7314 * t7965 * t8696 + (-t8333 * t9142 + t8780) * t8306 + ((-(-t7406 + t7338) * t7930 + t8140) * t7993 - ((t7894 + t8434) * t9158 + t7870 + 0.4e1 * t7896 + t8293) * t9025) * t8672 + (t9135 * (t7277 * t7926 + t7278) + t7865 * t8283 * t9025) * t7927) * t8008 - t7314 * t8431 * t8891 + ((-t7334 - t8451) * t7964 + t7405 - t7260 + t8742 * t7865 * t8421) * t8729 + ((-pkin(1) * t7276 + t8005 * t8140) * t7993 - (t7990 + ((t7894 + t8738) * t9158 + t7870 + t7850) * t8005) * t9025) * t9095) * t9025;
t8992 = t9239 * t8055;
t7102 = t8992 * (t7967 * (t8551 - t8621) - t8373) + t7226 - t7506 + t7547;
t7344 = t7386 ^ 2 * t7968 * t7667;
t8056 = 0.1e1 / pkin(2) ^ 2;
t8600 = t7428 ^ 2 / t8088 ^ 2 * t8056;
t7409 = t7968 * t8600;
t7279 = t7344 + t7409;
t8446 = 0.2e1 * t7185 - t8757;
t9100 = pkin(5) * t7992;
t8730 = 0.2e1 * t9100;
t8758 = t7834 * t7916 + t7835 * t7920;
t8810 = t8005 * t7090;
t9111 = pkin(1) * t8008;
t7183 = t7186 * t8005;
t8369 = t7386 * t8584;
t8233 = t8008 * t8369;
t9215 = t7183 + t8233;
t9258 = (-t7964 * t8260 - t7335 + t8260) * t8421 + (pkin(1) * t7102 + (t7279 * t8008 + t8810) * pkin(5)) * t7992 + (t9215 * t8730 - t7090 * t9111 + (pkin(1) * t7279 - t8758) * t8005) * t7993 - t8008 * t8446;
t7364 = pkin(6) * t7380;
t7290 = -t7415 + t7364;
t7377 = pkin(1) * t7380;
t7971 = t8023 * t7972;
t7950 = pkin(1) * t7976;
t7831 = t7950 - t9222;
t8267 = t7831 * t7993;
t8837 = t7992 * t8024;
t8466 = t7872 * t8837;
t8313 = t8015 * t8466;
t7974 = 0.1e1 / t8023 ^ 2;
t7847 = pkin(6) * t8820;
t8644 = pkin(5) * t8837;
t8826 = t7993 * t8015;
t7750 = pkin(1) * t8826 + t8644;
t8688 = t7750 * t9104;
t9181 = 0.1e1 / (-pkin(1) * t7847 - t7753 + t8688);
t8980 = t9181 * t7974;
t8361 = t8980 * t9035;
t8919 = t7872 * t7992;
t8238 = (t8024 * t8053 * t7325 * t7971 + (t7325 * t7935 - t7377 - (t7976 * t9112 - t8313) * t9022) * t8880 + ((t7415 / 0.2e1 - t7364 / 0.2e1) * t8024 - ((t7947 + t9138) * t8820 + (t7976 - 0.1e1 / 0.2e1) * t8919) * t9022) * t8629 - (t7290 * t9222 - (t8267 - t8313) * pkin(6) * t9022) * pkin(6)) * t8361;
t8154 = t7992 * t8238;
t8259 = pkin(5) * t8340;
t7293 = t7364 - t8259;
t7421 = pkin(1) * t8340;
t8183 = t8024 * t7421;
t8184 = t7992 * t7421;
t8301 = t8015 * t8593;
t8323 = t8906 * t9022;
t8380 = t9135 * t8800;
t8437 = t7898 + t8735;
t8594 = t7432 * t8980;
t8917 = t9222 * t8024;
t9042 = t7293 * t8015;
t8372 = ((-t8323 * t8917 - t8184) * t9109 + (-t8437 * t7976 * t8323 - (t8593 + (-t7470 * t7886 - t7293) * t8014) * pkin(2) * t8837 - pkin(1) * t8301 * t8827) * t8023 + (t8183 * t8827 - t7992 * ((-t7377 - t9042) * t8014 + t8301) - (t7886 * t8023 * t9135 + t7871 * t8380 + t8267 * t8844) * t9022) * pkin(6)) * t8594;
t8500 = t8025 * t8919;
t7708 = t7886 * t8016 - t8015 * t8500;
t7719 = t7873 * t8016 - t8500;
t8501 = t8016 * t8919;
t8123 = t7886 * t8025 + t8015 * t8501;
t8146 = t7873 * t8025 + t8501;
t8165 = t8411 * t8826;
t8241 = t8411 * t7740;
t8821 = t7993 * t8023;
t8664 = pkin(2) * t8821;
t8394 = t7737 * t8664;
t7527 = (t8394 * t9184 + t8241) * t7976 + ((t7719 * t7921 + t7917 * t8146) * t9104 - t7737 * t8165) * t8024 + (t7708 * t7921 + t7917 * t8123 - t8394) * pkin(6);
t8546 = t7527 * t7992 * t7687;
t7365 = pkin(5) * t7380;
t8772 = -t7365 - t7418;
t7267 = -t7349 + t8772;
t8459 = t9034 / 0.2e1;
t7315 = (t7487 * t7889 + t7993 * t8459) * t7671;
t7358 = pkin(5) * t7364;
t7361 = 0.2e1 * t7364;
t8219 = t8055 * t8301;
t7412 = pkin(1) * t8219;
t8282 = -0.2e1 * t7872 * t7470;
t7455 = pkin(6) * t8282;
t7858 = t7935 / 0.2e1 + pkin(1);
t7890 = 0.2e1 * t7898;
t7975 = t8024 * t7976;
t8213 = t8023 * t8323;
t8305 = t7972 * t8486;
t8879 = t7973 * t7993;
t8476 = t7390 * t8879;
t8407 = pkin(1) * t8476;
t8422 = t7992 * t7893;
t8432 = -0.2e1 * t8682;
t8768 = -t7412 - t7418;
t8450 = t7365 - t8768;
t8579 = t7963 * t9022;
t8779 = t7267 * t8015 - t7421;
t8799 = t8015 * t8051;
t8970 = t7671 * t7992;
t8620 = ((t8038 + t8880) * t7975 * t8213 * t9106 + ((t7455 + pkin(6) * (-t7365 - t7418 / 0.2e1) + (-(t7361 - t8259) * t8014 / 0.2e1 + t8593 / 0.2e1) * pkin(2)) * t8023 * t8432 + t7290 * t8422 - (t8407 * t8880 + ((t9186 + 0.3e1 * t7935 - 0.3e1 * t8639) * t8880 + (t7858 * t9185 + t7964 * t8799) * pkin(6)) * t7487) * t8970) * t7976 + (-t7315 * t7971 * t8696 + (t8015 * t8282 + t8779) * t8305 + ((-(-t7415 + t7361) * t7947 + t8139) * t7993 - ((t7898 + t8434) * t9158 + t7890 + 0.4e1 * t7904 + t8293) * t9022) * t8668 + (-t9135 * (-t7358 + (-t7293 * t8014 + t8593) * pkin(2)) + t7872 * t8283 * t9022) * t7935) * t8024 - t7315 * t8431 * t8882 - (t7455 + (0.2e1 * t7872 * t8579 - (-t7349 - t8450) * t7964 - t7412 + t7267) * pkin(6)) * t9104 + ((-pkin(1) * t7290 + t8015 * t8139) * t7993 - (t7990 + ((t7898 + t8738) * t9158 + t7890 + t7850) * t8015) * t9022) * t9095) * t9022;
t8391 = t7740 * t8664;
t9236 = (t7737 * t8411 + t8391 * t9185) * t7976;
t7524 = t9236 + ((t7917 * t7719 - t7921 * t8146) * t9104 + t8241 * t8826) * t8024 + (t7917 * t7708 - t7921 * t8123 + t8391) * pkin(6);
t7507 = t7524 * t7992 * t7691 * t8527;
t8502 = t7872 * t8843;
t7592 = -t8305 * t8800 + (t7863 * t7976 + t7993 * t8466 + t8383) * t9104 - (t7801 * t8024 - t7993 * t8502) * pkin(6);
t8981 = t9181 * t7973;
t8523 = t8011 * t8981;
t7552 = t7592 * t8055 * t8523;
t8761 = -t7507 + t7552;
t7103 = (-t8154 - (t8372 + (-t8546 + t8620) * t7973) * t9240) * t8055 + t8761;
t7379 = t7390 ^ 2 * t7974 * t7672;
t8597 = t7432 ^ 2 / t8087 ^ 2 * t8056;
t7424 = t7974 * t8597;
t7299 = t7379 + t7424;
t8878 = t7973 * t8015;
t8603 = t7390 * t8878;
t8359 = t7671 * t8603;
t7352 = pkin(1) * t8359;
t8420 = -0.2e1 * t9022;
t8444 = 0.2e1 * t7196 - t8753;
t8754 = t7836 * t7917 + t7837 * t7921;
t7355 = -t7365 / 0.2e1;
t7374 = t8054 * t7380;
t8143 = (-pkin(2) * t7293 + (pkin(2) * t8593 - t7358) * t8014) * t8024;
t8465 = t7487 * t8800;
t8321 = t7671 * t8465;
t8173 = pkin(6) * t7871 * t8321;
t8578 = t7487 * t8970;
t8255 = t8578 * t9093;
t8577 = t8015 * t9022;
t8322 = t7992 * t8577;
t8883 = t7971 * t8054;
t8520 = t7671 * t8883;
t8574 = t7487 * t8837;
t9020 = t7487 * t7973;
t8575 = t7672 * t9020;
t8576 = t8024 * t9022;
t8678 = t7976 * t7934;
t9046 = (-pkin(2) * t7380 + t8014 * t8772) * t7976;
t9141 = 0.2e1 * t8014;
t9152 = 0.2e1 * t7976;
t9153 = -0.2e1 * t7976;
t7120 = (-0.3e1 * ((t7976 - 0.4e1 / 0.3e1) * t8883 + ((-0.2e1 / 0.3e1 * t7898 + t8740) * t7976 + 0.4e1 / 0.3e1 * t7898 + t8739) * t8023 + (0.4e1 / 0.3e1 * t9109 - 0.2e1 / 0.3e1 * t7871) * pkin(6) * t8800) * t8579 + (-t8489 * t9035 - ((-t7377 + t9042) * t8024 - (-0.4e1 * t7872 + t8678) * t8322) * t9109 + (t7371 - t7374 - (-pkin(1) * t8603 - 0.4e1 * t7857 * t8574) * t7671 * pkin(6) + (-0.2e1 * t7975 * t8255 - t9046 + (t7355 + t8768) * t9141) * pkin(2)) * t8023 - (t8143 - (t7991 + (t7961 - t8874) * t8014) * t8578) * t8015) * t7964 + (-(-0.3e1 * t7976 + 0.3e1) * t7487 * t8520 - (-t7976 * t8184 - 0.2e1 * t7873 * t8576 + (-t7421 + (t7355 + t8775) * t8015) * t9144) * t9109 + ((t7358 + ((t7293 - t7352) * t8014 - t8593) * pkin(2)) * t8837 - ((t7898 + t8741) * t9152 - 0.4e1 * t7898 - 0.2e1 * t7904 - t8292) * t9022) * t8023 + t8275 * t7976 * t9113 - 0.2e1 * t8173 + t7992 * (-pkin(2) * (-pkin(6) * t8219 - t7421) - (t8799 + t9137) * t8360)) * t7993 + t9127 * t7374 * t7971 + (t7293 * t8024 - (-t7934 - t8049 + t8678) * t8578) * t8679 + (t7374 + (t9046 + ((-pkin(6) * t7975 + t7886 * t8024) * t7992 * t8420 + t8450) * t8014) * pkin(2)) * t8023 - t7858 * t8255 * t9153 + t8015 * t8143 - ((t7850 * t8015 + t7990) * t8014 + t8015 * t7991) * t8578) * t8575;
t8909 = t7911 * t7964;
t8415 = -t7976 + t8909;
t8290 = t8415 + 0.1e1;
t8918 = t9222 * t7992;
t7207 = (-(t7487 * t8290 - t8476) * t8520 - (-t7992 * t8779 - (t8024 * t8407 + ((-t7935 + pkin(1)) * t8895 + (-0.2e1 * t8508 + t9081) * t8015) * t7487) * t7671) * t9109 + ((t7886 * t7993 + t8644) * t7290 - (-(t7904 - t8437) * t7964 + (-pkin(6) * t7872 + t7899 * t8015) * t8483 + (-t7964 * t7976 + t9127) * pkin(2) * t7871) * t9022) * t8023 + t7964 * t8173 + t8255 * t8267 - t8173 - t8275 * t8918) * t8361;
t9098 = pkin(6) * t7976;
t7828 = t7886 - t9098;
t8205 = t7872 * t8321;
t7219 = (-(-t8918 * t9034 + ((t7950 - 0.2e1 * t7935 + t8050) * t8849 + pkin(5) * t8380) * t7487) * t7671 * t7972 + (t8275 * t7993 - (-t7487 * t7871 * t8483 + (((-t9098 / 0.2e1 + t7886) * t9158 + t7828) * t7487 - t7750 * t9034) * t8014) * t7671) * t8023 + t7964 * t8205 + (t7831 * t8578 - t8183) * t7993 + ((-t7293 + t7415) * t8015 - t7377) * t7992 - t8205) * t9240 * t8594;
t7823 = -pkin(5) + t8685;
t8429 = t7871 - 0.2e1 * t9109;
t9189 = -t7871 * t8015 + (-pkin(6) * t8470 - t7823 * t8023) * t8849 + t8679 + (pkin(6) * t8786 + t8015 * t8429) * t7964;
t8881 = t7972 * t8024;
t9231 = t7993 * (pkin(2) * t8881 + t8023 * t9222) + t8014 * t8403 - t8023 * t8263;
t7513 = t9189 * t7737 + t9231 * t7740 - t8512 * t7947;
t8559 = t7513 * t8971;
t7500 = t7687 * t8559;
t7516 = -t9231 * t7737 + t9189 * t7740 + t8515 * t7947;
t8556 = t7516 * t8971;
t7503 = t7691 * t8556;
t7595 = (t7823 * t7964 + t8399 - t8425) * t8023 - t8014 * t8917 + (t8014 * t8636 + t8429 * t8849) * t8015;
t7555 = t7595 * t8523;
t7091 = -t7503 - t7500 + t7555 - t7120 - t7207 + t7219;
t8802 = t8015 * t7091;
t9116 = pkin(1) * t7091;
t7190 = t8015 * t7199;
t8363 = t7390 * t8575;
t8231 = t8024 * t8363;
t9214 = t7190 + t8231;
t9257 = (-t7964 * t8259 - t7352 + t8259) * t8420 + (pkin(1) * t7103 + (t7299 * t8024 + t8802) * pkin(5)) * t7992 + (t9214 * t8730 - t8024 * t9116 + (pkin(1) * t7299 - t8754) * t8015) * t7993 - t8024 * t8444;
t7366 = pkin(6) * t7382;
t7291 = -t7416 + t7366;
t7378 = pkin(1) * t7382;
t7977 = t8026 * t7978;
t7951 = pkin(1) * t7982;
t7832 = t7951 - t9221;
t8266 = t7832 * t7993;
t8835 = t7992 * t8027;
t8464 = t7876 * t8835;
t8312 = t8018 * t8464;
t7980 = 0.1e1 / t8026 ^ 2;
t7848 = pkin(6) * t8818;
t8643 = pkin(5) * t8835;
t8824 = t7993 * t8018;
t7751 = pkin(1) * t8824 + t8643;
t8687 = t7751 * t9103;
t9180 = 0.1e1 / (-pkin(1) * t7848 - t7754 + t8687);
t8978 = t9180 * t7980;
t8356 = t8978 * t9032;
t8916 = t7876 * t7992;
t8237 = (t8027 * t8053 * t7327 * t7977 + (t7327 * t7938 - t7378 - (t7982 * t9112 - t8312) * t9019) * t8870 + ((t7416 / 0.2e1 - t7366 / 0.2e1) * t8027 - ((t7948 + t9138) * t8818 + (t7982 - 0.1e1 / 0.2e1) * t8916) * t9019) * t8628 - (t7291 * t9221 - (t8266 - t8312) * pkin(6) * t9019) * pkin(6)) * t8356;
t8153 = t7992 * t8237;
t8258 = pkin(5) * t8338;
t7294 = t7366 - t8258;
t7422 = pkin(1) * t8338;
t8181 = t8027 * t7422;
t8182 = t7992 * t7422;
t8300 = t8018 * t8591;
t8320 = t8906 * t9019;
t8379 = t9135 * t8794;
t8436 = t7900 + t8735;
t8592 = t7433 * t8978;
t8914 = t9221 * t8027;
t9041 = t7294 * t8018;
t8371 = ((-t8320 * t8914 - t8182) * t9108 + (-t8436 * t7982 * t8320 - pkin(2) * (t8591 + (-t7471 * t7887 - t7294) * t8017) * t8835 - pkin(1) * t8300 * t8825) * t8026 + (t8181 * t8825 - t7992 * ((-t7378 - t9041) * t8017 + t8300) - (t7887 * t8026 * t9135 + t7875 * t8379 + t8266 * t8842) * t9019) * pkin(6)) * t8592;
t8496 = t8028 * t8916;
t7709 = t7887 * t8019 - t8018 * t8496;
t7720 = t7877 * t8019 - t8496;
t8497 = t8019 * t8916;
t8122 = t7887 * t8028 + t8018 * t8497;
t8145 = t7877 * t8028 + t8497;
t8164 = t8410 * t8824;
t8240 = t8410 * t7741;
t8819 = t7993 * t8026;
t8663 = pkin(2) * t8819;
t8393 = t7738 * t8663;
t7528 = (t8393 * t9184 + t8240) * t7982 + ((t7720 * t7922 + t7918 * t8145) * t9103 - t7738 * t8164) * t8027 + (t7709 * t7922 + t7918 * t8122 - t8393) * pkin(6);
t8544 = t7528 * t7992 * t7688;
t7367 = pkin(5) * t7382;
t8771 = -t7367 - t7419;
t7268 = -t7350 + t8771;
t8458 = t9031 / 0.2e1;
t7316 = (t7488 * t7889 + t7993 * t8458) * t7674;
t7359 = pkin(5) * t7366;
t7362 = 0.2e1 * t7366;
t8217 = t8055 * t8300;
t7413 = pkin(1) * t8217;
t8281 = -0.2e1 * t7876 * t7471;
t7456 = pkin(6) * t8281;
t7860 = t7938 / 0.2e1 + pkin(1);
t7891 = 0.2e1 * t7900;
t7981 = t8027 * t7982;
t8212 = t8026 * t8320;
t8304 = t7978 * t8486;
t8869 = t7979 * t7993;
t8475 = t7391 * t8869;
t8406 = pkin(1) * t8475;
t8767 = -t7413 - t7419;
t8449 = t7367 - t8767;
t8573 = t7963 * t9019;
t8778 = t7268 * t8018 - t7422;
t8793 = t8018 * t8051;
t8966 = t7674 * t7992;
t8619 = ((t8038 + t8870) * t7981 * t8212 * t9106 + ((t7456 + pkin(6) * (-t7367 - t7419 / 0.2e1) + (-(t7362 - t8258) * t8017 / 0.2e1 + t8591 / 0.2e1) * pkin(2)) * t8026 * t8432 + t7291 * t8422 - (t8406 * t8870 + ((t9186 + 0.3e1 * t7938 - 0.3e1 * t8638) * t8870 + (t7860 * t9185 + t7964 * t8793) * pkin(6)) * t7488) * t8966) * t7982 + (-t7316 * t7977 * t8696 + (t8018 * t8281 + t8778) * t8304 + ((-(-t7416 + t7362) * t7948 + t8138) * t7993 - ((t7900 + t8434) * t9158 + t7891 + 0.4e1 * t7905 + t8293) * t9019) * t8667 + (-t9135 * (-t7359 + (-t7294 * t8017 + t8591) * pkin(2)) + t7876 * t8283 * t9019) * t7938) * t8027 - t7316 * t8431 * t8872 - (t7456 + (0.2e1 * t7876 * t8573 - (-t7350 - t8449) * t7964 - t7413 + t7268) * pkin(6)) * t9103 + ((-pkin(1) * t7291 + t8018 * t8138) * t7993 - (t7990 + ((t7900 + t8738) * t9158 + t7891 + t7850) * t8018) * t9019) * t9095) * t9019;
t8390 = t7741 * t8663;
t9237 = (t7738 * t8410 + t8390 * t9185) * t7982;
t7525 = t9237 + ((t7918 * t7720 - t7922 * t8145) * t9103 + t8240 * t8824) * t8027 + (t7918 * t7709 - t7922 * t8122 + t8390) * pkin(6);
t7508 = t7525 * t7992 * t7692 * t8526;
t8498 = t7876 * t8841;
t7593 = -t8304 * t8794 + (t7863 * t7982 + t7993 * t8464 + t8382) * t9103 - (t7802 * t8027 - t7993 * t8498) * pkin(6);
t8979 = t9180 * t7979;
t8522 = t8011 * t8979;
t7553 = t7593 * t8055 * t8522;
t8760 = -t7508 + t7553;
t7104 = (-t8153 - (t8371 + (-t8544 + t8619) * t7979) * t9241) * t8055 + t8760;
t7381 = t7391 ^ 2 * t7980 * t7675;
t8596 = t7433 ^ 2 / t8086 ^ 2 * t8056;
t7425 = t7980 * t8596;
t7302 = t7381 + t7425;
t8868 = t7979 * t8018;
t8602 = t7391 * t8868;
t8354 = t7674 * t8602;
t7353 = pkin(1) * t8354;
t8419 = -0.2e1 * t9019;
t8442 = 0.2e1 * t7197 - t8749;
t8750 = t7838 * t7918 + t7839 * t7922;
t7356 = -t7367 / 0.2e1;
t7375 = t8054 * t7382;
t8142 = (-pkin(2) * t7294 + (pkin(2) * t8591 - t7359) * t8017) * t8027;
t8463 = t7488 * t8794;
t8318 = t7674 * t8463;
t8172 = pkin(6) * t7875 * t8318;
t8572 = t7488 * t8966;
t8254 = t8572 * t9092;
t8571 = t8018 * t9019;
t8319 = t7992 * t8571;
t8873 = t7977 * t8054;
t8519 = t7674 * t8873;
t8568 = t7488 * t8835;
t9017 = t7488 * t7979;
t8569 = t7675 * t9017;
t8570 = t8027 * t9019;
t8676 = t7982 * t7937;
t9045 = (-pkin(2) * t7382 + t8017 * t8771) * t7982;
t9140 = 0.2e1 * t8017;
t9149 = 0.2e1 * t7982;
t9150 = -0.2e1 * t7982;
t7121 = (-0.3e1 * ((t7982 - 0.4e1 / 0.3e1) * t8873 + ((-0.2e1 / 0.3e1 * t7900 + t8740) * t7982 + 0.4e1 / 0.3e1 * t7900 + t8739) * t8026 + (0.4e1 / 0.3e1 * t9108 - 0.2e1 / 0.3e1 * t7875) * pkin(6) * t8794) * t8573 + (-t8488 * t9032 - ((-t7378 + t9041) * t8027 - (-0.4e1 * t7876 + t8676) * t8319) * t9108 + (t7372 - t7375 - (-pkin(1) * t8602 - 0.4e1 * t7859 * t8568) * t7674 * pkin(6) + (-0.2e1 * t7981 * t8254 - t9045 + (t7356 + t8767) * t9140) * pkin(2)) * t8026 - (t8142 - (t7991 + (t7961 - t8864) * t8017) * t8572) * t8018) * t7964 + (-(-0.3e1 * t7982 + 0.3e1) * t7488 * t8519 - (-t7982 * t8182 - 0.2e1 * t7877 * t8570 + (-t7422 + (t7356 + t8774) * t8018) * t9144) * t9108 + ((t7359 + ((t7294 - t7353) * t8017 - t8591) * pkin(2)) * t8835 - ((t7900 + t8741) * t9149 - 0.4e1 * t7900 - 0.2e1 * t7905 - t8292) * t9019) * t8026 + t8274 * t7982 * t9113 - 0.2e1 * t8172 + t7992 * (-pkin(2) * (-pkin(6) * t8217 - t7422) - (t8793 + t9137) * t8355)) * t7993 + t9123 * t7375 * t7977 + (t7294 * t8027 - (-t7937 - t8049 + t8676) * t8572) * t8677 + (t7375 + (t9045 + ((-pkin(6) * t7981 + t7887 * t8027) * t7992 * t8419 + t8449) * t8017) * pkin(2)) * t8026 - t7860 * t8254 * t9150 + t8018 * t8142 - ((t7850 * t8018 + t7990) * t8017 + t8018 * t7991) * t8572) * t8569;
t8908 = t7912 * t7964;
t8414 = -t7982 + t8908;
t8289 = t8414 + 0.1e1;
t8915 = t9221 * t7992;
t7208 = (-(t7488 * t8289 - t8475) * t8519 - (-t7992 * t8778 - (t8027 * t8406 + ((-t7938 + pkin(1)) * t8894 + (-0.2e1 * t8507 + t9078) * t8018) * t7488) * t7674) * t9108 + ((t7887 * t7993 + t8643) * t7291 - (-(t7905 - t8436) * t7964 + (-pkin(6) * t7876 + t7901 * t8018) * t8482 + (-t7964 * t7982 + t9123) * pkin(2) * t7875) * t9019) * t8026 + t7964 * t8172 + t8254 * t8266 - t8172 - t8274 * t8915) * t8356;
t9097 = pkin(6) * t7982;
t7829 = t7887 - t9097;
t8204 = t7876 * t8318;
t7220 = (-(-t8915 * t9031 + ((t7951 - 0.2e1 * t7938 + t8050) * t8849 + pkin(5) * t8379) * t7488) * t7674 * t7978 + (t8274 * t7993 - (-t7488 * t7875 * t8482 + (((-t9097 / 0.2e1 + t7887) * t9158 + t7829) * t7488 - t7751 * t9031) * t8017) * t7674) * t8026 + t7964 * t8204 + (t7832 * t8572 - t8181) * t7993 + ((-t7294 + t7416) * t8018 - t7378) * t7992 - t8204) * t9241 * t8592;
t7824 = -pkin(5) + t8684;
t8428 = t7875 - 0.2e1 * t9108;
t9188 = -t7875 * t8018 + (-pkin(6) * t8468 - t7824 * t8026) * t8849 + t8677 + (pkin(6) * t8784 + t8018 * t8428) * t7964;
t8871 = t7978 * t8027;
t9232 = t7993 * (pkin(2) * t8871 + t8026 * t9221) + t8017 * t8402 - t8026 * t8262;
t7514 = t9188 * t7738 + t9232 * t7741 - t8511 * t7948;
t8558 = t7514 * t8967;
t7501 = t7688 * t8558;
t7517 = -t9232 * t7738 + t9188 * t7741 + t8514 * t7948;
t8555 = t7517 * t8967;
t7504 = t7692 * t8555;
t7596 = (t7824 * t7964 + t8398 - t8424) * t8026 - t8017 * t8914 + (t8017 * t8635 + t8428 * t8849) * t8018;
t7556 = t7596 * t8522;
t7092 = -t7504 - t7501 + t7556 - t7121 - t7208 + t7220;
t8796 = t8018 * t7092;
t9115 = pkin(1) * t7092;
t7191 = t7200 * t8018;
t8358 = t7391 * t8569;
t8229 = t8027 * t8358;
t9213 = t7191 + t8229;
t9256 = (-t7964 * t8258 - t7353 + t8258) * t8419 + (pkin(1) * t7104 + (t7302 * t8027 + t8796) * pkin(5)) * t7992 + (t9213 * t8730 - t8027 * t9115 + (pkin(1) * t7302 - t8750) * t8018) * t7993 - t8027 * t8442;
t7368 = pkin(6) * t7384;
t7292 = -t7417 + t7368;
t7370 = pkin(1) * t7384;
t7983 = t8029 * t7984;
t7952 = pkin(1) * t7988;
t7833 = t7952 - t9220;
t8265 = t7833 * t7993;
t8833 = t7992 * t8030;
t8462 = t7880 * t8833;
t8311 = t8021 * t8462;
t7986 = 0.1e1 / t8029 ^ 2;
t7849 = pkin(6) * t8816;
t8642 = pkin(5) * t8833;
t8822 = t7993 * t8021;
t7749 = pkin(1) * t8822 + t8642;
t8689 = t7749 * t9102;
t9182 = 0.1e1 / (-pkin(1) * t7849 - t7755 + t8689);
t8982 = t9182 * t7986;
t8351 = t8982 * t9029;
t8913 = t7880 * t7992;
t8236 = (t8030 * t8053 * t7329 * t7983 + (t7329 * t7941 - t7370 - (t7988 * t9112 - t8311) * t9016) * t8860 + ((t7417 / 0.2e1 - t7368 / 0.2e1) * t8030 - ((t7949 + t9138) * t8816 + (t7988 - 0.1e1 / 0.2e1) * t8913) * t9016) * t8627 - (t7292 * t9220 - (t8265 - t8311) * pkin(6) * t9016) * pkin(6)) * t8351;
t8152 = t7992 * t8236;
t8257 = pkin(5) * t8336;
t7295 = t7368 - t8257;
t7423 = pkin(1) * t8336;
t8179 = t8030 * t7423;
t8180 = t7992 * t7423;
t8299 = t8021 * t8589;
t8317 = t8906 * t9016;
t8378 = t9135 * t8788;
t8435 = t7902 + t8735;
t8590 = t7434 * t8982;
t8911 = t9220 * t8030;
t9040 = t7295 * t8021;
t8370 = ((-t8317 * t8911 - t8180) * t9107 + (-t8435 * t7988 * t8317 - pkin(2) * (t8589 + (-t7472 * t7888 - t7295) * t8020) * t8833 - pkin(1) * t8299 * t8823) * t8029 + (t8179 * t8823 - t7992 * ((-t7370 - t9040) * t8020 + t8299) - (t7888 * t8029 * t9135 + t7879 * t8378 + t8265 * t8840) * t9016) * pkin(6)) * t8590;
t8492 = t8031 * t8913;
t7710 = t7888 * t8022 - t8021 * t8492;
t7721 = t7881 * t8022 - t8492;
t8493 = t8022 * t8913;
t8121 = t7888 * t8031 + t8021 * t8493;
t8144 = t7881 * t8031 + t8493;
t8163 = t8409 * t8822;
t8239 = t8409 * t7742;
t8817 = t7993 * t8029;
t8662 = pkin(2) * t8817;
t8392 = t7739 * t8662;
t7529 = (t8392 * t9184 + t8239) * t7988 + ((t7721 * t7923 + t7919 * t8144) * t9102 - t7739 * t8163) * t8030 + (t7710 * t7923 + t7919 * t8121 - t8392) * pkin(6);
t8542 = t7529 * t7992 * t7689;
t7369 = pkin(5) * t7384;
t8770 = -t7369 - t7420;
t7269 = -t7351 + t8770;
t8457 = t9028 / 0.2e1;
t7317 = (t7489 * t7889 + t7993 * t8457) * t7677;
t7360 = pkin(5) * t7368;
t7363 = 0.2e1 * t7368;
t8215 = t8055 * t8299;
t7414 = pkin(1) * t8215;
t8280 = -0.2e1 * t7880 * t7472;
t7457 = pkin(6) * t8280;
t7862 = t7941 / 0.2e1 + pkin(1);
t7892 = 0.2e1 * t7902;
t7987 = t8030 * t7988;
t8211 = t8029 * t8317;
t8303 = t7984 * t8486;
t8859 = t7985 * t7993;
t8474 = t7392 * t8859;
t8405 = pkin(1) * t8474;
t8766 = -t7414 - t7420;
t8448 = t7369 - t8766;
t8567 = t7963 * t9016;
t8777 = t7269 * t8021 - t7423;
t8787 = t8021 * t8051;
t8962 = t7677 * t7992;
t8618 = ((t8038 + t8860) * t7987 * t8211 * t9106 + ((t7457 + pkin(6) * (-t7369 - t7420 / 0.2e1) + (-(t7363 - t8257) * t8020 / 0.2e1 + t8589 / 0.2e1) * pkin(2)) * t8029 * t8432 + t7292 * t8422 - (t8405 * t8860 + ((t9186 + 0.3e1 * t7941 - 0.3e1 * t8637) * t8860 + (t7862 * t9185 + t7964 * t8787) * pkin(6)) * t7489) * t8962) * t7988 + (-t7317 * t7983 * t8696 + (t8021 * t8280 + t8777) * t8303 + ((-(-t7417 + t7363) * t7949 + t8137) * t7993 - ((t7902 + t8434) * t9158 + t7892 + 0.4e1 * t7906 + t8293) * t9016) * t8666 + (-t9135 * (-t7360 + (-t7295 * t8020 + t8589) * pkin(2)) + t7880 * t8283 * t9016) * t7941) * t8030 - t7317 * t8431 * t8862 - (t7457 + (0.2e1 * t7880 * t8567 - (-t7351 - t8448) * t7964 - t7414 + t7269) * pkin(6)) * t9102 + ((-pkin(1) * t7292 + t8021 * t8137) * t7993 - (t7990 + ((t7902 + t8738) * t9158 + t7892 + t7850) * t8021) * t9016) * t9095) * t9016;
t8389 = t7742 * t8662;
t9238 = (t7739 * t8409 + t8389 * t9185) * t7988;
t7526 = t9238 + ((t7919 * t7721 - t7923 * t8144) * t9102 + t8239 * t8822) * t8030 + (t7919 * t7710 - t7923 * t8121 + t8389) * pkin(6);
t7509 = t7526 * t7992 * t7693 * t8525;
t8494 = t7880 * t8839;
t7594 = -t8303 * t8788 + (t7863 * t7988 + t7993 * t8462 + t8381) * t9102 - (t7803 * t8030 - t7993 * t8494) * pkin(6);
t8983 = t9182 * t7985;
t8524 = t8011 * t8983;
t7554 = t7594 * t8055 * t8524;
t8759 = -t7509 + t7554;
t7105 = (-t8152 - (t8370 + (-t8542 + t8618) * t7985) * t9242) * t8055 + t8759;
t7383 = t7392 ^ 2 * t7986 * t7678;
t8595 = t7434 ^ 2 / t8085 ^ 2 * t8056;
t7426 = t7986 * t8595;
t7305 = t7383 + t7426;
t8858 = t7985 * t8021;
t8601 = t7392 * t8858;
t8349 = t7677 * t8601;
t7354 = pkin(1) * t8349;
t8418 = -0.2e1 * t9016;
t8440 = 0.2e1 * t7198 - t8745;
t8746 = t7840 * t7919 + t7841 * t7923;
t7357 = -t7369 / 0.2e1;
t7376 = t8054 * t7384;
t8141 = (-pkin(2) * t7295 + (pkin(2) * t8589 - t7360) * t8020) * t8030;
t8461 = t7489 * t8788;
t8315 = t7677 * t8461;
t8171 = pkin(6) * t7879 * t8315;
t8566 = t7489 * t8962;
t8253 = t8566 * t9091;
t8565 = t8021 * t9016;
t8316 = t7992 * t8565;
t8863 = t7983 * t8054;
t8518 = t7677 * t8863;
t8562 = t7489 * t8833;
t9014 = t7489 * t7985;
t8563 = t7678 * t9014;
t8564 = t8030 * t9016;
t8674 = t7988 * t7940;
t9044 = (-pkin(2) * t7384 + t8020 * t8770) * t7988;
t9139 = 0.2e1 * t8020;
t9146 = 0.2e1 * t7988;
t9147 = -0.2e1 * t7988;
t7122 = (-0.3e1 * ((t7988 - 0.4e1 / 0.3e1) * t8863 + ((-0.2e1 / 0.3e1 * t7902 + t8740) * t7988 + 0.4e1 / 0.3e1 * t7902 + t8739) * t8029 + (0.4e1 / 0.3e1 * t9107 - 0.2e1 / 0.3e1 * t7879) * pkin(6) * t8788) * t8567 + (-t8487 * t9029 - ((-t7370 + t9040) * t8030 - (-0.4e1 * t7880 + t8674) * t8316) * t9107 + (t7373 - t7376 - (-pkin(1) * t8601 - 0.4e1 * t7861 * t8562) * t7677 * pkin(6) + (-0.2e1 * t7987 * t8253 - t9044 + (t7357 + t8766) * t9139) * pkin(2)) * t8029 - (t8141 - (t7991 + (t7961 - t8854) * t8020) * t8566) * t8021) * t7964 + (-(-0.3e1 * t7988 + 0.3e1) * t7489 * t8518 - (-t7988 * t8180 - 0.2e1 * t7881 * t8564 + (-t7423 + (t7357 + t8773) * t8021) * t9144) * t9107 + ((t7360 + ((t7295 - t7354) * t8020 - t8589) * pkin(2)) * t8833 - ((t7902 + t8741) * t9146 - 0.4e1 * t7902 - 0.2e1 * t7906 - t8292) * t9016) * t8029 + t8273 * t7988 * t9113 - 0.2e1 * t8171 + t7992 * (-pkin(2) * (-pkin(6) * t8215 - t7423) - (t8787 + t9137) * t8350)) * t7993 + t9119 * t7376 * t7983 + (t7295 * t8030 - (-t7940 - t8049 + t8674) * t8566) * t8675 + (t7376 + (t9044 + ((-pkin(6) * t7987 + t7888 * t8030) * t7992 * t8418 + t8448) * t8020) * pkin(2)) * t8029 - t7862 * t8253 * t9147 + t8021 * t8141 - ((t7850 * t8021 + t7990) * t8020 + t8021 * t7991) * t8566) * t8563;
t8907 = t7913 * t7964;
t8413 = -t7988 + t8907;
t8288 = t8413 + 0.1e1;
t8912 = t9220 * t7992;
t7209 = (-(t7489 * t8288 - t8474) * t8518 - (-t7992 * t8777 - (t8030 * t8405 + ((-t7941 + pkin(1)) * t8893 + (-0.2e1 * t8506 + t9075) * t8021) * t7489) * t7677) * t9107 + ((t7888 * t7993 + t8642) * t7292 - (-(t7906 - t8435) * t7964 + (-pkin(6) * t7880 + t7903 * t8021) * t8481 + (-t7964 * t7988 + t9119) * pkin(2) * t7879) * t9016) * t8029 + t7964 * t8171 + t8253 * t8265 - t8171 - t8273 * t8912) * t8351;
t9096 = pkin(6) * t7988;
t7830 = t7888 - t9096;
t8203 = t7880 * t8315;
t7221 = (-(-t8912 * t9028 + ((t7952 - 0.2e1 * t7941 + t8050) * t8849 + pkin(5) * t8378) * t7489) * t7677 * t7984 + (t8273 * t7993 - (-t7489 * t7879 * t8481 + (((-t9096 / 0.2e1 + t7888) * t9158 + t7830) * t7489 - t7749 * t9028) * t8020) * t7677) * t8029 + t7964 * t8203 + (t7833 * t8566 - t8179) * t7993 + ((-t7295 + t7417) * t8021 - t7370) * t7992 - t8203) * t9242 * t8590;
t7825 = -pkin(5) + t8683;
t8427 = t7879 - 0.2e1 * t9107;
t9187 = -t7879 * t8021 + (-pkin(6) * t8467 - t7825 * t8029) * t8849 + t8675 + (pkin(6) * t8782 + t8021 * t8427) * t7964;
t8861 = t7984 * t8030;
t9233 = t7993 * (pkin(2) * t8861 + t8029 * t9220) + t8020 * t8401 - t8029 * t8261;
t7515 = t9187 * t7739 + t9233 * t7742 - t8510 * t7949;
t8557 = t7515 * t8963;
t7502 = t7689 * t8557;
t7518 = -t9233 * t7739 + t9187 * t7742 + t8513 * t7949;
t8554 = t7518 * t8963;
t7505 = t7693 * t8554;
t7597 = (t7825 * t7964 + t8397 - t8423) * t8029 - t8020 * t8911 + (t8020 * t8634 + t8427 * t8849) * t8021;
t7557 = t7597 * t8524;
t7093 = -t7505 - t7502 + t7557 - t7122 - t7209 + t7221;
t8790 = t8021 * t7093;
t9114 = pkin(1) * t7093;
t7192 = t7201 * t8021;
t8353 = t7392 * t8563;
t8227 = t8030 * t8353;
t9212 = t7192 + t8227;
t9255 = (-t7964 * t8257 - t7354 + t8257) * t8418 + (pkin(1) * t7105 + (t7305 * t8030 + t8790) * pkin(5)) * t7992 + (t9212 * t8730 - t8030 * t9114 + (pkin(1) * t7305 - t8746) * t8021) * t7993 - t8030 * t8440;
t8649 = t7201 * t9100;
t9250 = -pkin(1) * t7383 - 0.2e1 * t8649 + t8746;
t8650 = t7200 * t9100;
t9249 = -pkin(1) * t7381 - 0.2e1 * t8650 + t8750;
t8651 = t7199 * t9100;
t9248 = -pkin(1) * t7379 - 0.2e1 * t8651 + t8754;
t8652 = t7186 * t9100;
t9247 = -pkin(1) * t7344 - 0.2e1 * t8652 + t8758;
t9229 = -0.2e1 * pkin(5);
t9227 = 0.2e1 * t8008;
t9226 = 0.2e1 * t8024;
t9225 = 0.2e1 * t8027;
t9224 = 0.2e1 * t8030;
t8588 = t8008 * t7463;
t9145 = 0.4e1 * t7988;
t9219 = t7964 * (t9145 - 0.2e1);
t9148 = 0.4e1 * t7982;
t9218 = t7964 * (t9148 - 0.2e1);
t9151 = 0.4e1 * t7976;
t9217 = t7964 * (t9151 - 0.2e1);
t9154 = 0.4e1 * t7970;
t9216 = t7964 * (t9154 - 0.2e1);
t7821 = t9084 / 0.2e1 - t7928 / 0.2e1;
t7822 = t9085 / 0.2e1 + t9087 / 0.2e1;
t8599 = t7428 * t9239 * t7666;
t8344 = t8055 * t8599;
t8222 = t7483 * t8344;
t8158 = t7967 * t8222;
t8132 = t8005 * t8158;
t8107 = t7992 * t8132;
t8162 = t8344 * t9037;
t8133 = t8005 * t8162;
t8901 = t7964 * t7186;
t9136 = t7102 / 0.2e1;
t9179 = -0.2e1 * (t8005 * t9136 + t8008 * t8162) * t9112 - 0.2e1 * (t7822 * t7920 + t7821 * t7916 - pkin(1) * t7409 / 0.2e1) * t7992 - 0.2e1 * t8158 * t9111 - 0.2e1 * (t8901 - t8107 * t7993 + (t8008 * t9136 - t8133) * t7992 - t7186) * pkin(5);
t7182 = t7993 * t7186;
t8151 = -t7115 / 0.2e1 - t7203 / 0.2e1 + t7215 / 0.2e1 - t7492 / 0.2e1 - t7493 / 0.2e1 + t7548 / 0.2e1;
t7054 = t7182 + t8151;
t7318 = -t7454 - t7345 / 0.2e1;
t7043 = -t7054 * t8008 - t7318 * t8366;
t9178 = -0.2e1 * t7043;
t7187 = t7993 * t7199;
t8150 = -t7120 / 0.2e1 - t7207 / 0.2e1 + t7219 / 0.2e1 - t7500 / 0.2e1 - t7503 / 0.2e1 + t7555 / 0.2e1;
t7056 = t7187 + t8150;
t7321 = -t7470 - t7380 / 0.2e1;
t7048 = -t7056 * t8024 - t7321 * t8359;
t9177 = -0.2e1 * t7048;
t7188 = t7993 * t7200;
t8149 = -t7121 / 0.2e1 - t7208 / 0.2e1 + t7220 / 0.2e1 - t7501 / 0.2e1 - t7504 / 0.2e1 + t7556 / 0.2e1;
t7057 = t7188 + t8149;
t7322 = -t7471 - t7382 / 0.2e1;
t7050 = -t7057 * t8027 - t7322 * t8354;
t9176 = -0.2e1 * t7050;
t7189 = t7993 * t7201;
t8148 = -t7122 / 0.2e1 - t7209 / 0.2e1 + t7221 / 0.2e1 - t7502 / 0.2e1 - t7505 / 0.2e1 + t7557 / 0.2e1;
t7058 = t7189 + t8148;
t7323 = -t7472 - t7384 / 0.2e1;
t7052 = -t7058 * t8030 - t7323 * t8349;
t9175 = -0.2e1 * t7052;
t7512 = (-t7582 * t8194 - t7583 * t7792) * t7666;
t9174 = 0.2e1 * t7512;
t9173 = -0.2e1 * t7512;
t7519 = (-t7584 * t8193 - t7587 * t7793) * t7671;
t9172 = 0.2e1 * t7519;
t9171 = -0.2e1 * t7519;
t7520 = (-t7585 * t8192 - t7588 * t7794) * t7674;
t9170 = 0.2e1 * t7520;
t9169 = -0.2e1 * t7520;
t7521 = (-t7586 * t8191 - t7589 * t7795) * t7677;
t9168 = 0.2e1 * t7521;
t9167 = -0.2e1 * t7521;
t9166 = 0.2e1 * t7582;
t9165 = 0.2e1 * t7583;
t9164 = 0.2e1 * t7584;
t9163 = 0.2e1 * t7585;
t9162 = 0.2e1 * t7586;
t9161 = 0.2e1 * t7587;
t9160 = 0.2e1 * t7588;
t9159 = 0.2e1 * t7589;
t9133 = t9228 - 0.1e1;
t9132 = 0.2e1 * t7966 - 0.1e1;
t9130 = t9155 - 0.1e1;
t9128 = 0.2e1 * t7972 - 0.1e1;
t9126 = t9152 - 0.1e1;
t9124 = 0.2e1 * t7978 - 0.1e1;
t9122 = t9149 - 0.1e1;
t9120 = 0.2e1 * t7984 - 0.1e1;
t9118 = t9146 - 0.1e1;
t9074 = t8012 - g(2);
t9073 = t8013 - g(1);
t7962 = t7992 ^ 2;
t9071 = MDP(4) * t7962;
t9070 = MDP(5) * t7962;
t9069 = MDP(6) * t7992;
t9068 = MDP(7) * t7992;
t9067 = MDP(15) * t7992;
t8445 = pkin(1) * t7463 + t8758;
t7167 = t8445 - t8652;
t7131 = t8005 * t7167 - t9266 * t8008;
t8812 = t8004 * t8005;
t8946 = (-t7992 * t8812 + t8829) * t8008;
t7598 = (-t7864 * t8906 + t7889 * t8734) * t8005 + (-pkin(6) * t8946 + (-0.2e1 * t7855 + t8680) * t8846) * t7993;
t7610 = (pkin(2) * t8946 + t7993 * t9223) * t8007 - t7826 * t8848;
t7538 = t7598 * t8009 + t7610 * t8006;
t7539 = -t7598 * t8006 + t7610 * t8009;
t7443 = (t7792 * (-t7538 * t7916 + t7539 * t7920) + t8194 * (t7538 * t7920 + t7539 * t7916)) * t8993;
t9066 = t7131 * t7443;
t8443 = pkin(1) * t7479 + t8754;
t7173 = t8443 - t8651;
t7136 = t8015 * t7173 - t9265 * t8024;
t8804 = t8014 * t8015;
t8945 = (-t7992 * t8804 + t8821) * t8024;
t7599 = (-t7871 * t8906 + t7889 * t8733) * t8015 + (-pkin(6) * t8945 + (-0.2e1 * t7857 + t8678) * t8838) * t7993;
t7611 = (pkin(2) * t8945 + t7993 * t9222) * t8023 - t7828 * t8844;
t7540 = t7599 * t8025 + t7611 * t8016;
t7543 = -t7599 * t8016 + t7611 * t8025;
t7446 = ((-t7540 * t7917 + t7543 * t7921) * t7793 + t8193 * (t7540 * t7921 + t7543 * t7917)) * t8989;
t9065 = t7136 * t7446;
t9064 = t7136 * t8014;
t8441 = pkin(1) * t7480 + t8750;
t7174 = t8441 - t8650;
t7138 = t8018 * t7174 - t9264 * t8027;
t8798 = t8017 * t8018;
t8944 = (-t7992 * t8798 + t8819) * t8027;
t7600 = (-t7875 * t8906 + t7889 * t8732) * t8018 + (-pkin(6) * t8944 + (-0.2e1 * t7859 + t8676) * t8836) * t7993;
t7612 = (pkin(2) * t8944 + t7993 * t9221) * t8026 - t7829 * t8842;
t7541 = t7600 * t8028 + t7612 * t8019;
t7544 = -t7600 * t8019 + t7612 * t8028;
t7444 = (t7794 * (-t7541 * t7918 + t7544 * t7922) + t8192 * (t7541 * t7922 + t7544 * t7918)) * t8987;
t9063 = t7138 * t7444;
t9062 = t7138 * t8017;
t8439 = pkin(1) * t7481 + t8746;
t7175 = t8439 - t8649;
t7140 = t7175 * t8021 - t9263 * t8030;
t8792 = t8020 * t8021;
t8943 = (-t7992 * t8792 + t8817) * t8030;
t7601 = (-t7879 * t8906 + t7889 * t8731) * t8021 + (-pkin(6) * t8943 + (-0.2e1 * t7861 + t8674) * t8834) * t7993;
t7613 = (pkin(2) * t8943 + t7993 * t9220) * t8029 - t7830 * t8840;
t7542 = t7601 * t8031 + t7613 * t8022;
t7545 = -t7601 * t8022 + t7613 * t8031;
t7445 = (t7795 * (-t7542 * t7919 + t7545 * t7923) + (t7542 * t7923 + t7545 * t7919) * t8191) * t8985;
t9061 = t7140 * t7445;
t9060 = t7140 * t8020;
t9059 = t7186 * t8007;
t9058 = t7186 * t8008;
t9057 = t7199 * t8023;
t9056 = t7199 * t8024;
t9055 = t7200 * t8026;
t9054 = t7200 * t8027;
t9053 = t7201 * t8029;
t9052 = t7201 * t8030;
t9033 = t7390 * t7974;
t9030 = t7391 * t7980;
t9027 = t7392 * t7986;
t9024 = t7483 * t7667;
t9021 = t7487 * t7672;
t9018 = t7488 * t7675;
t9015 = t7489 * t7678;
t9013 = t7510 * t7967;
t9012 = t7511 * t7967;
t9011 = t7513 * t7973;
t9010 = t7514 * t7979;
t9009 = t7515 * t7985;
t9008 = t7516 * t7973;
t9007 = t7517 * t7979;
t9006 = t7518 * t7985;
t8997 = t7590 * t9183;
t8996 = t7595 * t9181;
t8995 = t7596 * t9180;
t8994 = t7597 * t9182;
t8988 = t9240 * t8055;
t8986 = t9241 * t8055;
t8984 = t9242 * t8055;
t7804 = g(1) * t7916 - g(2) * t7920;
t7808 = g(1) * t7920 + g(2) * t7916;
t7695 = t7804 * t8009 + t7808 * t8006;
t8977 = t7666 * t7695;
t7696 = -t7804 * t8006 + t7808 * t8009;
t8976 = t7666 * t7696;
t7805 = g(1) * t7917 - g(2) * t7921;
t7809 = g(1) * t7921 + g(2) * t7917;
t7697 = t7805 * t8025 + t7809 * t8016;
t8973 = t7671 * t7697;
t7700 = -t7805 * t8016 + t7809 * t8025;
t8972 = t7671 * t7700;
t7806 = g(1) * t7918 - g(2) * t7922;
t7810 = g(1) * t7922 + g(2) * t7918;
t7698 = t7806 * t8028 + t7810 * t8019;
t8969 = t7674 * t7698;
t7701 = -t7806 * t8019 + t7810 * t8028;
t8968 = t7674 * t7701;
t7807 = g(1) * t7919 - g(2) * t7923;
t7811 = g(1) * t7923 + g(2) * t7919;
t7699 = t7807 * t8031 + t7811 * t8022;
t8965 = t7677 * t7699;
t7702 = -t7807 * t8022 + t7811 * t8031;
t8964 = t7677 * t7702;
t8885 = t7970 * t7186;
t8875 = t7976 * t7199;
t8865 = t7982 * t7200;
t8855 = t7988 * t7201;
t8853 = t7992 * t7090;
t8852 = t7992 * t7091;
t8851 = t7992 * t7092;
t8850 = t7992 * t7093;
t8813 = t7993 * t8054;
t8811 = t8004 * t8007;
t8803 = t8014 * t8023;
t8797 = t8017 * t8026;
t8791 = t8020 * t8029;
t8765 = t7463 - t7344;
t8764 = t7479 - t7379;
t8763 = t7480 - t7381;
t8762 = t7481 - t7383;
t8722 = 0.2e1 * t7993;
t8721 = 0.4e1 * t7993;
t8234 = t7992 * t8369;
t7330 = t8005 * t8234;
t7094 = t7330 - t7506 / 0.2e1 + t7547 / 0.2e1 + t7226 / 0.2e1 - (t8373 / 0.2e1 + (-t8551 / 0.2e1 + t8621 / 0.2e1) * t7967) * t8992;
t8456 = -t8885 / 0.2e1;
t7064 = t7992 * t8456 + t7094 * t8008 - t8133 / 0.2e1;
t8717 = 0.2e1 * t7064 * t7666;
t8232 = t7992 * t8363;
t7331 = t8015 * t8232;
t7096 = t7331 - t7507 / 0.2e1 + t7552 / 0.2e1 + (-t8154 / 0.2e1 - (t8372 / 0.2e1 + (-t8546 / 0.2e1 + t8620 / 0.2e1) * t7973) * t9240) * t8055;
t8341 = t7432 * t7671 * t8988;
t8161 = t8341 * t9033;
t8131 = t8015 * t8161;
t8455 = -t8875 / 0.2e1;
t7071 = t7992 * t8455 + t7096 * t8024 - t8131 / 0.2e1;
t8716 = 0.2e1 * t7071 * t7671;
t8230 = t7992 * t8358;
t7332 = t8018 * t8230;
t7097 = t7332 - t7508 / 0.2e1 + t7553 / 0.2e1 + (-t8153 / 0.2e1 - (t8371 / 0.2e1 + (-t8544 / 0.2e1 + t8619 / 0.2e1) * t7979) * t9241) * t8055;
t8339 = t7433 * t7674 * t8986;
t8160 = t8339 * t9030;
t8129 = t8018 * t8160;
t8454 = -t8865 / 0.2e1;
t7072 = t7992 * t8454 + t7097 * t8027 - t8129 / 0.2e1;
t8715 = 0.2e1 * t7072 * t7674;
t8228 = t7992 * t8353;
t7333 = t8021 * t8228;
t7098 = t7333 - t7509 / 0.2e1 + t7554 / 0.2e1 + (-t8152 / 0.2e1 - (t8370 / 0.2e1 + (-t8542 / 0.2e1 + t8618 / 0.2e1) * t7985) * t9242) * t8055;
t8337 = t7434 * t7677 * t8984;
t8159 = t8337 * t9027;
t8127 = t8021 * t8159;
t8453 = -t8855 / 0.2e1;
t7073 = t7992 * t8453 + t7098 * t8030 - t8127 / 0.2e1;
t8714 = 0.2e1 * t7073 * t7677;
t8713 = (t8132 - t8853 / 0.2e1) * t9227;
t8220 = t7487 * t8341;
t8157 = t7973 * t8220;
t8130 = t8015 * t8157;
t8712 = (t8130 - t8852 / 0.2e1) * t9226;
t8218 = t7488 * t8339;
t8156 = t7979 * t8218;
t8128 = t8018 * t8156;
t8711 = (t8128 - t8851 / 0.2e1) * t9225;
t8216 = t7489 * t8337;
t8155 = t7985 * t8216;
t8126 = t8021 * t8155;
t8710 = (t8126 - t8850 / 0.2e1) * t9224;
t8709 = -0.2e1 * (t7186 * t8004 + t8222) * t8008;
t8708 = -0.2e1 * (t7199 * t8014 + t8220) * t8024;
t8707 = -0.2e1 * (t7200 * t8017 + t8218) * t8027;
t8706 = -0.2e1 * (t7201 * t8020 + t8216) * t8030;
t8705 = -0.2e1 * t8974;
t8704 = 0.2e1 * t8974;
t8703 = -0.2e1 * t8961;
t8702 = 0.2e1 * t8961;
t8701 = -0.2e1 * t8960;
t8700 = 0.2e1 * t8960;
t8699 = -0.2e1 * t8959;
t8698 = 0.2e1 * t8959;
t8695 = 0.4e1 * t8811;
t8694 = 0.4e1 * t8803;
t8693 = 0.4e1 * t8797;
t8692 = 0.4e1 * t8791;
t8617 = t7131 * t8888;
t8616 = t7973 * t9064;
t8615 = t7979 * t9062;
t8614 = t7985 * t9060;
t8613 = t7186 * t8808;
t8612 = t7200 * t8794;
t8611 = t7201 * t8788;
t8610 = (-t7345 + t8343) * (-t7345 - t8343) * t7992;
t8609 = (-t7380 + t8340) * (-t7380 - t8340) * t7992;
t8608 = (-t7382 + t8338) * (-t7382 - t8338) * t7992;
t8607 = (-t7384 + t8336) * (-t7384 - t8336) * t7992;
t8582 = t8024 * t7479;
t8581 = t8027 * t7480;
t8580 = t8030 * t7481;
t8553 = t7522 * t8993;
t8552 = t7523 * t8993;
t8550 = t7524 * t8989;
t8549 = t7525 * t8987;
t8548 = t7526 * t8985;
t8547 = t7527 * t8989;
t8545 = t7528 * t8987;
t8543 = t7529 * t8985;
t8537 = t7590 * t8991;
t8536 = t7591 * t8991;
t8535 = t7592 * t8981;
t8534 = t7593 * t8979;
t8533 = t7594 * t8983;
t8532 = t7595 * t8981;
t8531 = t7596 * t8979;
t8530 = t7597 * t8983;
t8480 = t7186 * t8847;
t8479 = t7992 * t7190;
t8478 = t7200 * t8841;
t8477 = t7201 * t8839;
t8469 = t7199 * t8800;
t8377 = t7131 * t8537;
t8376 = t7136 * t8532;
t8375 = t7138 * t8531;
t8374 = t7140 * t8530;
t8368 = t7483 * t8606;
t8364 = t8027 * t7381;
t8362 = t7487 * t8476;
t8357 = t7488 * t8475;
t8352 = t7489 * t8474;
t7452 = t7666 * t8583;
t7393 = -t7452 + t8343;
t8348 = t7393 * t7483 * t8887;
t7464 = t7671 * t8574;
t7396 = -t7464 + t8340;
t8347 = t7396 * t7487 * t8878;
t7465 = t7674 * t8568;
t7397 = -t7465 + t8338;
t8346 = t7397 * t7488 * t8868;
t7466 = t7677 * t8562;
t7398 = -t7466 + t8336;
t8345 = t7398 * t7489 * t8858;
t8335 = t7992 * t8588;
t8334 = t8588 * t8975;
t8329 = t7992 * t8582;
t8328 = t7671 * t8877 * t7479;
t8327 = t7992 * t8581;
t8326 = t7674 * t8867 * t7480;
t8325 = t7992 * t8580;
t8324 = t7677 * t8857 * t7481;
t8302 = t8008 * t7344;
t8298 = t8024 * t7379;
t8297 = t8030 * t7383;
t8279 = -t7247 + t8471;
t8278 = -t7248 + t8465;
t8277 = -t7249 + t8463;
t8276 = -t7250 + t8461;
t8272 = t9135 * t7463;
t8271 = t9135 * t7479;
t8270 = t9135 * t7480;
t8269 = t9135 * t7481;
t8248 = t7344 * t9100;
t8247 = t7379 * t9100;
t8246 = t7381 * t9100;
t8245 = t7383 * t9100;
t8226 = t7667 * t8348;
t8225 = t7672 * t8347;
t8224 = t7675 * t8346;
t8223 = t7678 * t8345;
t8210 = t7320 * t8331;
t8209 = t7325 * t8322;
t8208 = t7327 * t8319;
t8207 = t7329 * t8316;
t7309 = -0.2e1 * t8161;
t7311 = -0.2e1 * t8160;
t7313 = -0.2e1 * t8159;
t7395 = 0.2e1 * t8158;
t8136 = -0.2e1 * t8157;
t7402 = 0.2e1 * t8157;
t8135 = -0.2e1 * t8156;
t7403 = 0.2e1 * t8156;
t8134 = -0.2e1 * t8155;
t7404 = 0.2e1 * t8155;
t7055 = t7182 + t7090;
t7059 = t7187 + t7091;
t7060 = t7188 + t7092;
t7061 = t7189 + t7093;
t7168 = t7463 * t8830 + t9058;
t7176 = t7479 * t8826 + t9056;
t7177 = t7480 * t8824 + t9054;
t7178 = t7481 * t8822 + t9052;
t8112 = t7992 * t7395;
t8111 = t7992 * t7402;
t8110 = t7992 * t7403;
t8109 = t7992 * t7404;
t8108 = t7992 * t8133;
t8106 = t7992 * t8131;
t8105 = t7992 * t8130;
t8104 = t7992 * t8129;
t8103 = t7992 * t8128;
t8102 = t7992 * t8127;
t8101 = t7992 * t8126;
t8092 = -pkin(5) * t8853 + t8050 * t8369;
t8091 = -pkin(5) * t8852 + t8050 * t8363;
t8090 = -pkin(5) * t8851 + t8050 * t8358;
t8089 = -pkin(5) * t8850 + t8050 * t8353;
t8083 = t8008 * t8112 + t8272 * t9155 - t7409 - t8272;
t8082 = t8024 * t8111 + t8271 * t9152 - t7424 - t8271;
t8081 = t8027 * t8110 + t8270 * t9149 - t7425 - t8270;
t8080 = t8030 * t8109 + t8269 * t9146 - t7426 - t8269;
t8079 = t8588 * t8900 + (t8112 - t8588) * t8005 - t7055;
t8078 = t8582 * t8898 + (t8111 - t8582) * t8015 - t7059;
t8077 = t8581 * t8897 + (t8110 - t8581) * t8018 - t7060;
t8076 = t8580 * t8896 + (t8109 - t8580) * t8021 - t7061;
t7915 = t7993 * g(3);
t7748 = -t7959 * t8010 - t7960 * t7989;
t7747 = -t7959 * t7989 + t7960 * t8010;
t7705 = pkin(6) * t7830 + t7881 * t8653 + t7988 * t8860;
t7704 = pkin(6) * t7829 + t7877 * t8654 + t7982 * t8870;
t7703 = pkin(6) * t7828 + t7873 * t8656 + t7976 * t8880;
t7694 = pkin(6) * t7826 + t7866 * t8660 + t7970 * t8889;
t7609 = -(t9094 * t9118 + t8462) * t9102 + (t8813 * t8861 - (t7849 + t8913) * pkin(6)) * t8021;
t7608 = -(t9094 * t9122 + t8464) * t9103 + (t8813 * t8871 - (t7848 + t8916) * pkin(6)) * t8018;
t7607 = -(t9094 * t9126 + t8466) * t9104 + (t8813 * t8881 - (t7847 + t8919) * pkin(6)) * t8015;
t7606 = -(t9094 * t9130 + t8472) * t9105 + (t8813 * t8890 - (t7846 + t8922) * pkin(6)) * t8005;
t7469 = t7481 * t9147;
t7468 = t7480 * t9150;
t7467 = t7479 * t9153;
t7453 = t7463 * t9156;
t7450 = (-t7794 * (-t9237 + ((-t7738 * t7877 + t7741 * t8916) * t9103 - t7741 * t8164) * t8027 + (-t7738 * t7887 + (t8498 - t8663) * t7741) * pkin(6)) * t7992 * t9241 - ((t7608 * t8028 + t7704 * t8019) * t7922 + (-t7608 * t8019 + t7704 * t8028) * t7918) * t8192 * t7992 / (t8687 + t7992 * t8726 - pkin(1) * (t7848 + t8670))) * t8866;
t7449 = (-(-t9238 + ((-t7739 * t7881 + t7742 * t8913) * t9102 - t7742 * t8163) * t8030 + (-t7739 * t7888 + (t8494 - t8662) * t7742) * pkin(6)) * t7795 * t7992 * t9242 - ((t7609 * t8031 + t7705 * t8022) * t7923 + t7919 * (-t7609 * t8022 + t7705 * t8031)) * t8191 * t7992 / (t8689 + t7992 * t8725 - pkin(1) * (t7849 + t8669))) * t8856;
t7448 = (-t7992 * (-t9236 + ((-t7737 * t7873 + t7740 * t8919) * t9104 - t7740 * t8165) * t8024 + (-t7737 * t7886 + (t8502 - t8664) * t7740) * pkin(6)) * t7793 * t9240 - t8193 * t7992 * ((t7607 * t8025 + t7703 * t8016) * t7921 + (-t7607 * t8016 + t7703 * t8025) * t7917) / (t8688 + t7992 * t8727 - pkin(1) * (t7847 + t8671))) * t8876;
t7447 = (-t7792 * t7992 * (-t9235 + ((-t7735 * t7866 + t7736 * t8922) * t9105 - t7736 * t8166) * t8008 + (-t7735 * t7869 + (t7865 * t8847 - t8665) * t7736) * pkin(6)) * t9239 - ((t7606 * t8009 + t7694 * t8006) * t7920 + (-t7606 * t8006 + t7694 * t8009) * t7916) * t7992 * t8194 / (t8690 + t7992 * t8728 - pkin(1) * (t7846 + t8673))) * t8886;
t7442 = t7469 + t7481;
t7441 = t7468 + t7480;
t7440 = t7467 + t7479;
t7436 = t7453 + t7463;
t7401 = -0.2e1 * t8101;
t7400 = -0.2e1 * t8103;
t7399 = -0.2e1 * t8105;
t7394 = -0.2e1 * t8107;
t7328 = -t7472 - 0.2e1 * t7384;
t7326 = -t7471 - 0.2e1 * t7382;
t7324 = -t7470 - 0.2e1 * t7380;
t7319 = -t7454 - 0.2e1 * t7345;
t7312 = 0.4e1 * t8159;
t7310 = 0.4e1 * t8160;
t7308 = 0.4e1 * t8161;
t7283 = -0.2e1 * t8162;
t7282 = 0.4e1 * t8162;
t7246 = ((t7486 * t8413 - 0.2e1 * t8352) * t7678 + t8762) * t8791 + t9120 * t8207;
t7245 = ((t7485 * t8414 - 0.2e1 * t8357) * t7675 + t8763) * t8797 + t9124 * t8208;
t7244 = ((t7484 * t8415 - 0.2e1 * t8362) * t7672 + t8764) * t8803 + t9128 * t8209;
t7243 = ((t7482 * t8416 - 0.2e1 * t8368) * t7667 + t8765) * t8811 + t9132 * t8210;
t7242 = (-0.2e1 * t7383 + t7469 + 0.2e1 * t7481) * t7984 - t8207 * t8692 + ((-0.4e1 * t7984 + 0.2e1) * t8352 + (t8907 * t9120 + t7988) * t7486) * t7678 - t8762;
t7241 = (-0.2e1 * t7381 + t7468 + 0.2e1 * t7480) * t7978 - t8208 * t8693 + ((-0.4e1 * t7978 + 0.2e1) * t8357 + (t8908 * t9124 + t7982) * t7485) * t7675 - t8763;
t7240 = (-0.2e1 * t7379 + t7467 + 0.2e1 * t7479) * t7972 - t8209 * t8694 + ((-0.4e1 * t7972 + 0.2e1) * t8362 + (t8909 * t9128 + t7976) * t7484) * t7672 - t8764;
t7239 = (-0.2e1 * t7344 + t7453 + 0.2e1 * t7463) * t7966 - t8210 * t8695 + ((-0.4e1 * t7966 + 0.2e1) * t8368 + (t8910 * t9132 + t7970) * t7482) * t7667 - t8765;
t7181 = t7993 * t8580 - t7192;
t7180 = t7993 * t8581 - t7191;
t7179 = t7993 * t8582 - t7190;
t7169 = t7993 * t8588 - t7183;
t7165 = t9259 * t7992 - t9135 * t8645 + t7915;
t7164 = t9260 * t7992 - t9135 * t8646 + t7915;
t7163 = t9261 * t7992 - t9135 * t8647 + t7915;
t7162 = t9262 * t7992 - t9135 * t8648 + t7915;
t7158 = -t8020 * t8155 + t9053;
t7157 = -t8017 * t8156 + t9055;
t7156 = -t8014 * t8157 + t9057;
t7154 = -t8004 * t8158 + t9059;
t7152 = t7192 + 0.2e1 * t8227;
t7150 = t7190 + 0.2e1 * t8231;
t7148 = t7191 + 0.2e1 * t8229;
t7146 = t7183 + 0.2e1 * t8233;
t7145 = t8353 * t9118 + t8611;
t7144 = t8358 * t9122 + t8612;
t7143 = t8363 * t9126 + t8469;
t7142 = t8369 * t9130 + t8613;
t7141 = t8030 * t7175 + t9263 * t8021;
t7139 = t7174 * t8027 + t9264 * t8018;
t7137 = t7173 * t8024 + t9265 * t8015;
t7135 = t9246 * t8822 + (-pkin(5) * t9052 + g(3) * t8021) * t7992 + t8439 * t8030;
t7134 = t9245 * t8824 + (-pkin(5) * t9054 + g(3) * t8018) * t7992 + t8027 * t8441;
t7133 = t9244 * t8826 + (-pkin(5) * t9056 + g(3) * t8015) * t7992 + t8024 * t8443;
t7132 = t8008 * t7167 + t9266 * t8005;
t7130 = t9243 * t8830 + (-pkin(5) * t9058 + g(3) * t8005) * t7992 + t8445 * t8008;
t7113 = t7135 * t8029 + t7165 * t8020;
t7112 = t7135 * t8020 - t7165 * t8029;
t7111 = t7134 * t8026 + t7164 * t8017;
t7110 = t7134 * t8017 - t7164 * t8026;
t7109 = t7133 * t8023 + t7163 * t8014;
t7108 = t7133 * t8014 - t7163 * t8023;
t7107 = t7130 * t8007 + t7162 * t8004;
t7106 = t7130 * t8004 - t7162 * t8007;
t7101 = t7105 * t8839 + 0.2e1 * t8353;
t7100 = t7104 * t8841 + 0.2e1 * t8358;
t7099 = t7103 * t8843 + 0.2e1 * t8363;
t7095 = t7102 * t8847 + 0.2e1 * t8369;
t7086 = t8228 * t9229 + t9114;
t7085 = t8230 * t9229 + t9115;
t7084 = t8232 * t9229 + t9116;
t7083 = -(-t7985 * t8618 - t8370) * t8984 + ((-t7689 * t8543 + t8236) * t8055 + t7178) * t7992 - t8759;
t7082 = -(-t7979 * t8619 - t8371) * t8986 + ((-t7688 * t8545 + t8237) * t8055 + t7177) * t7992 - t8760;
t7081 = -(-t7973 * t8620 - t8372) * t8988 + ((-t7687 * t8547 + t8238) * t8055 + t7176) * t7992 - t8761;
t7079 = pkin(1) * t7090 + t8234 * t9229;
t7078 = t7168 * t7992 - t7102;
t7077 = -t7201 * t8833 + t7105 + t7333;
t7076 = -t7200 * t8835 + t7104 + t7332;
t7075 = -t7199 * t8837 + t7103 + t7331;
t7074 = -t7186 * t8845 + t7102 + t7330;
t7070 = -t8020 * t7083 - t8029 * t8080;
t7069 = -t8029 * t7083 + t8020 * t8080;
t7068 = -t8017 * t7082 - t8026 * t8081;
t7067 = -t8026 * t7082 + t8017 * t8081;
t7066 = -t8014 * t7081 - t8023 * t8082;
t7065 = -t8023 * t7081 + t8014 * t8082;
t7063 = -t8004 * t7078 - t8007 * t8083;
t7062 = -t8007 * t7078 + t8004 * t8083;
t7053 = -t7323 * t7384 * t8030 + t7058 * t8021;
t7051 = -t7322 * t7382 * t8027 + t7057 * t8018;
t7049 = -t7321 * t7380 * t8024 + t7056 * t8015;
t7044 = -t7318 * t7345 * t8008 + t7054 * t8005;
t7041 = -(t7328 * t8834 - t8317 * t8792) * t8564 + t8020 * t7061 + t8029 * t8477;
t7040 = -(-t7326 * t8842 - t8018 * t8212) * t8570 + t8026 * t7060 - t8017 * t8478;
t7039 = -(t7326 * t8836 - t8320 * t8798) * t8570 + t8017 * t7060 + t8026 * t8478;
t7038 = -(-t7324 * t8844 - t8015 * t8213) * t8576 + t8023 * t7059 - t8014 * t8479;
t7037 = -(t7324 * t8838 - t8323 * t8804) * t8576 + t8014 * t7059 + t8023 * t8479;
t7036 = -(-t7328 * t8840 - t8021 * t8211) * t8564 + t8029 * t7061 - t8020 * t8477;
t7035 = -(-t7319 * t8848 - t8005 * t8214) * t8585 + t8007 * t7055 - t8004 * t8480;
t7034 = -(t7319 * t8846 - t8332 * t8812) * t8585 + t8004 * t7055 + t8007 * t8480;
t7033 = ((0.4e1 * t8155 - 0.2e1 * t8325) * t7993 + 0.2e1 * t8477 + t7312) * t7984 - 0.2e1 * t8076 * t8791 - (-t7466 + 0.2e1 * t8336) * t7472 - t8477 + t7313;
t7032 = ((0.4e1 * t8156 - 0.2e1 * t8327) * t7993 + 0.2e1 * t8478 + t7310) * t7978 - 0.2e1 * t8077 * t8797 - (-t7465 + 0.2e1 * t8338) * t7471 - t8478 + t7311;
t7031 = ((0.4e1 * t8157 - 0.2e1 * t8329) * t7993 + 0.2e1 * t8479 + t7308) * t7972 - 0.2e1 * t8078 * t8803 - (-t7464 + 0.2e1 * t8340) * t7470 - t8479 + t7309;
t7030 = ((0.4e1 * t8158 - 0.2e1 * t8335) * t7993 + 0.2e1 * t8480 + t7282) * t7966 - 0.2e1 * t8079 * t8811 - (-t7452 + 0.2e1 * t8343) * t7454 - t8480 + t7283;
t7025 = -t8746 * t7992 + ((-t7105 * t8021 + t7313 * t8030) * t7993 + t7992 * t7426 + t8030 * t8134) * pkin(1) + ((-t7105 * t8030 + (t7489 * t8859 + t9027) * t8337 * t8718) * t7992 - t9134 * t7201) * pkin(5);
t7024 = -t8750 * t7992 + ((-t7104 * t8018 + t7311 * t8027) * t7993 + t7992 * t7425 + t8027 * t8135) * pkin(1) + ((-t7104 * t8027 + (t7488 * t8869 + t9030) * t8339 * t8719) * t7992 - t9134 * t7200) * pkin(5);
t7023 = -t8754 * t7992 + ((-t7103 * t8015 + t7309 * t8024) * t7993 + t7992 * t7424 + t8024 * t8136) * pkin(1) + ((-t7103 * t8024 + (t7487 * t8879 + t9033) * t8341 * t8720) * t7992 - t9134 * t7199) * pkin(5);
t7021 = (t7086 * t7993 - t8245 + t8440) * t8030 + (t7993 * t9250 + t8089) * t8021;
t7020 = (t7085 * t7993 - t8246 + t8442) * t8027 + (t7993 * t9249 + t8090) * t8018;
t7019 = (t7084 * t7993 - t8247 + t8444) * t8024 + (t7993 * t9248 + t8091) * t8015;
t7018 = (-t8021 * t7086 + t8030 * t9250) * t7993 + t8089 * t8030 - 0.2e1 * ((-t9088 / 0.2e1 + t7946 / 0.2e1) * t7923 + (t9090 / 0.2e1 + t9089 / 0.2e1) * t7919 - t8245 / 0.2e1 + t7198) * t8021;
t7017 = (-t8018 * t7085 + t8027 * t9249) * t7993 + t8090 * t8027 - 0.2e1 * t8018 * ((-t9076 / 0.2e1 + t7939 / 0.2e1) * t7922 + (t9077 / 0.2e1 + t9082 / 0.2e1) * t7918 - t8246 / 0.2e1 + t7197);
t7016 = (-t8015 * t7084 + t8024 * t9248) * t7993 + t8091 * t8024 - 0.2e1 * t8015 * ((-t9079 / 0.2e1 + t7936 / 0.2e1) * t7921 + (t9080 / 0.2e1 + t9083 / 0.2e1) * t7917 - t8247 / 0.2e1 + t7196);
t7015 = (t7079 * t7993 - t8248 + t8446) * t8008 + (t7993 * t9247 + t8092) * t8005;
t7014 = (-t8005 * t7079 + t8008 * t9247) * t7993 + t8092 * t8008 - 0.2e1 * (-t7821 * t7920 + t7822 * t7916 - t8248 / 0.2e1 + t7185) * t8005;
t7013 = t8076 * t7984 + (t8477 + (t7404 - t8325) * t7993 + 0.2e1 * t8159) * t8791 - t8101 + t7061;
t7012 = t8077 * t7978 + (t8478 + (t7403 - t8327) * t7993 + 0.2e1 * t8160) * t8797 - t8103 + t7060;
t7011 = t8078 * t7972 + (t8479 + (t7402 - t8329) * t7993 + 0.2e1 * t8161) * t8803 - t8105 + t7059;
t7010 = t8079 * t7966 + (t8480 + (t7395 - t8335) * t7993 + 0.2e1 * t8162) * t8811 - t8107 + t7055;
t7009 = (t7098 * t9139 + t7985 * t8595 + t7992 * t8706) * t7993 + t8020 * t8710 + t7101 * t8029 + (t8020 * t8607 + (t7158 * t7964 - t9053) * t9224) * t8021 + (-0.4e1 * t7988 + t9219) * t7392 * t9015;
t7008 = (t7097 * t9140 + t7979 * t8596 + t7992 * t8707) * t7993 + t8017 * t8711 + t7100 * t8026 + (t8017 * t8608 + (t7157 * t7964 - t9055) * t9225) * t8018 + (-0.4e1 * t7982 + t9218) * t7391 * t9018;
t7007 = (t7096 * t9141 + t7973 * t8597 + t7992 * t8708) * t7993 + t8014 * t8712 + t7099 * t8023 + (t8014 * t8609 + (t7156 * t7964 - t9057) * t9226) * t8015 + (-0.4e1 * t7976 + t9217) * t7390 * t9021;
t7006 = (t7098 * t8029 - t7158 * t8833) * t8722 + t8029 * t8710 + (t7964 * t8706 + t8029 * t8607) * t8021 + (-t7993 * t7426 + 0.2e1 * t8611 - t7101 + (t9145 - t9219) * t8353) * t8020;
t7005 = (t7097 * t8026 - t7157 * t8835) * t8722 + t8026 * t8711 + (t7964 * t8707 + t8026 * t8608) * t8018 + (-t7993 * t7425 + 0.2e1 * t8612 - t7100 + (t9148 - t9218) * t8358) * t8017;
t7004 = (t7096 * t8023 - t7156 * t8837) * t8722 + t8023 * t8712 + (t7964 * t8708 + t8023 * t8609) * t8015 + (-t7993 * t7424 + 0.2e1 * t8469 - t7099 + (t9151 - t9217) * t8363) * t8014;
t7003 = (t7094 * t9143 + t7967 * t8600 + t7992 * t8709) * t7993 + t8004 * t8713 + t7095 * t8007 + (t8004 * t8610 + (t7154 * t7964 - t9059) * t9227) * t8005 + (-0.4e1 * t7970 + t9216) * t7386 * t9024;
t7002 = (t7094 * t8007 - t7154 * t8845) * t8722 + t8007 * t8713 + (t7964 * t8709 + t8007 * t8610) * t8005 + (-t7993 * t7409 + 0.2e1 * t8613 - t7095 + (t9154 - t9216) * t8369) * t8004;
t7001 = ((-0.2e1 * t7257 + 0.2e1 * t7534 + 0.2e1 * t7537 - 0.2e1 * t7605 + t8855) * t7964 + (0.4e1 * t8101 - t7093) * t7993 + 0.2e1 * t8102 - t8855 + (t9133 * t9048 + (-t8276 * t9228 - t7250 + 0.2e1 * t8461) * t9028) * t7678 + t8294) * t7984 + 0.2e1 * ((t9212 * t7993 + t8297 / 0.2e1 + t8790 / 0.2e1) * t7992 + (t7993 * t9027 + (t8902 - t8907) * t9014) * t8337) * t8791 + t7964 * t7201 + (t7401 + t7093) * t7993 - t8102;
t7000 = ((-0.2e1 * t7255 + 0.2e1 * t7532 + 0.2e1 * t7535 - 0.2e1 * t7603 + t8875) * t7964 + (0.4e1 * t8105 - t7091) * t7993 + 0.2e1 * t8106 - t8875 + (t9133 * t9050 + (-t8278 * t9228 - t7248 + 0.2e1 * t8465) * t9034) * t7672 + t8296) * t7972 + 0.2e1 * ((t9214 * t7993 + t8298 / 0.2e1 + t8802 / 0.2e1) * t7992 + (t7993 * t9033 + (t8904 - t8909) * t9020) * t8341) * t8803 + t7964 * t7199 + (t7399 + t7091) * t7993 - t8106;
t6999 = ((-0.2e1 * t7256 + 0.2e1 * t7533 + 0.2e1 * t7536 - 0.2e1 * t7604 + t8865) * t7964 + (0.4e1 * t8103 - t7092) * t7993 + 0.2e1 * t8104 - t8865 + (t9133 * t9049 + (-t8277 * t9228 - t7249 + 0.2e1 * t8463) * t9031) * t7675 + t8295) * t7978 + 0.2e1 * ((t9213 * t7993 + t8364 / 0.2e1 + t8796 / 0.2e1) * t7992 + (t7993 * t9030 + (t8903 - t8908) * t9017) * t8339) * t8797 + t7964 * t7200 + (t7400 + t7092) * t7993 - t8104;
t6998 = ((0.2e1 * t7530 + 0.2e1 * t7531 - 0.2e1 * t7602 + t8885) * t7964 - t7090 * t7993 - t8885 + (t8365 * t9142 + (0.4e1 * t7483 * t8055 * t8485 + t7270 * t9228 - t7270) * t7967) * t8599 + (t9133 * t9051 + (-t8279 * t9228 - t7247 + 0.2e1 * t8471) * t9038) * t7667 + t8447) * t7966 + 0.2e1 * ((t9215 * t7993 + t8302 / 0.2e1 + t8810 / 0.2e1) * t7992 + (t7968 * t9036 + (t8905 - t8910) * t9023) * t8344) * t8811 + t8901 + (t7394 + t7090) * t7993 - t8108;
t6997 = (t7312 * t7993 - 0.4e1 * t8155 * t8288) * t7984 + ((t8453 + (t8276 * t9028 - t9048) * t7678 + t8294) * t7964 + (t7401 + t8148) * t7993 - t8021 * t8227 - t8102 + t8855 / 0.2e1 + t7537 / 0.2e1 + t7534 / 0.2e1 - t7605 / 0.2e1 + t7238 * t9015 / 0.2e1 + t7250 * t7678 * t8457 - t7257 / 0.2e1) * t8692 + t7404 * t8907 + (-t8723 * t9212 + t7313) * t7993 + t7988 * t8134 + t7404 + ((t8721 * t9212 + 0.2e1 * t8297 + 0.2e1 * t8790) * t7984 - t8297 - t8790) * t7992;
t6996 = (t7310 * t7993 - 0.4e1 * t8156 * t8289) * t7978 + ((t8454 + (t8277 * t9031 - t9049) * t7675 + t8295) * t7964 + (t7400 + t8149) * t7993 - t8018 * t8229 - t8104 + t8865 / 0.2e1 + t7536 / 0.2e1 + t7533 / 0.2e1 - t7604 / 0.2e1 + t7237 * t9018 / 0.2e1 + t7249 * t7675 * t8458 - t7256 / 0.2e1) * t8693 + t7403 * t8908 + (-t8723 * t9213 + t7311) * t7993 + t7982 * t8135 + t7403 + ((t8721 * t9213 + 0.2e1 * t8364 + 0.2e1 * t8796) * t7978 - t8364 - t8796) * t7992;
t6995 = (t7308 * t7993 - 0.4e1 * t8157 * t8290) * t7972 + ((t8455 + (t8278 * t9034 - t9050) * t7672 + t8296) * t7964 + (t7399 + t8150) * t7993 - t8015 * t8231 - t8106 + t8875 / 0.2e1 + t7535 / 0.2e1 + t7532 / 0.2e1 - t7603 / 0.2e1 + t7236 * t9021 / 0.2e1 + t7248 * t7672 * t8459 - t7255 / 0.2e1) * t8694 + t7402 * t8909 + (-t8723 * t9214 + t7309) * t7993 + t7976 * t8136 + t7402 + ((t8721 * t9214 + 0.2e1 * t8298 + 0.2e1 * t8802) * t7972 - t8298 - t8802) * t7992;
t6994 = (t7282 * t7993 - 0.4e1 * t8158 * t8291) * t7966 + ((t8456 + (t8279 * t9038 - t9051) * t7667 + t8084) * t7964 + (t7394 + t8151) * t7993 - t8005 * t8233 - t8108 + t8885 / 0.2e1 + t7531 / 0.2e1 + t7530 / 0.2e1 - t7602 / 0.2e1 + t7235 * t9024 / 0.2e1 + t7247 * t7667 * t8460 + t8235 / 0.2e1) * t8695 + t7395 * t8910 + (-t8723 * t9215 + t7283) * t7993 + t8158 * t9156 + t7395 + ((t8721 * t9215 + 0.2e1 * t8302 + 0.2e1 * t8810) * t7966 - t8302 - t8810) * t7992;
t6993 = t8020 * t7025 - t8029 * t9255;
t6992 = t8029 * t7025 + t8020 * t9255;
t6991 = t7024 * t8017 - t8026 * t9256;
t6990 = t7024 * t8026 + t8017 * t9256;
t6989 = t7023 * t8014 - t8023 * t9257;
t6988 = t7023 * t8023 + t8014 * t9257;
t6987 = t8004 * t9179 - t8007 * t9258;
t6986 = t8004 * t9258 + t8007 * t9179;
t1 = [(-t7186 * t9004 - t7199 * t9000 - t7200 * t8999 - t7201 * t8998) * MDP(1) + (-t7583 * t8977 - t7587 * t8973 - t7588 * t8969 - t7589 * t8965) * MDP(2) + (-t7583 * t8976 - t7587 * t8972 - t7588 * t8968 - t7589 * t8964) * MDP(3) + ((-t7152 * t8998 + t7518 * t8324) * t8021 + (-t7148 * t8999 + t7517 * t8326) * t8018 + (-t7150 * t9000 + t7516 * t8328) * t8015 + (-t7146 * t9004 + t7511 * t8334) * t8005) * t9071 + (-(t7145 * t9159 + t7442 * t9006) * t7677 - (t7144 * t9160 + t7441 * t9007) * t7674 - (t7143 * t9161 + t7440 * t9008) * t7671 - (t7142 * t9165 + t7436 * t9012) * t7666) * t9070 + (-(t7053 * t9159 - t7181 * t9006) * t7677 - (t7051 * t9160 - t7180 * t9007) * t7674 - (t7049 * t9161 - t7179 * t9008) * t7671 - (t7044 * t9165 - t7169 * t9012) * t7666) * t9069 + (-(t7178 * t9006 + t7589 * t9175) * t7677 - (t7177 * t9007 + t7588 * t9176) * t7674 - (t7176 * t9008 + t7587 * t9177) * t7671 - (t7168 * t9012 + t7583 * t9178) * t7666) * t9068 + (-t7055 * t8560 - t7059 * t8556 - t7060 * t8555 - t7061 * t8554 + (-t7055 * t9004 - t7059 * t9000 - t7060 * t8999 - t7061 * t8998) * t7993) * MDP(8) + (-(t7021 * t7589 + t7140 * t9006) * t7677 - (t7020 * t7588 + t7138 * t9007) * t7674 - (t7019 * t7587 + t7136 * t9008) * t7671 - (t7015 * t7583 + t7131 * t9012) * t7666) * MDP(9) + (-(t7018 * t7589 + t7141 * t9006) * t7677 - (t7017 * t7588 + t7139 * t9007) * t7674 - (t7016 * t7587 + t7137 * t9008) * t7671 - (t7014 * t7583 + t7132 * t9012) * t7666) * MDP(10) + (-(t7589 * t7001 + t7013 * t9006) * t7677 - (t7588 * t6999 + t7012 * t9007) * t7674 - (t7587 * t7000 + t7011 * t9008) * t7671 - (t7583 * t6998 + t7010 * t9012) * t7666 + (-t7243 * t8553 - t7244 * t8550 - t7245 * t8549 - t7246 * t8548) * t8832) * MDP(11) + (-(t7589 * t6997 + t7033 * t9006) * t7677 - (t7588 * t6996 + t7032 * t9007) * t7674 - (t7587 * t6995 + t7031 * t9008) * t7671 - (t7583 * t6994 + t7030 * t9012) * t7666 + (-t7239 * t8553 - t7240 * t8550 - t7241 * t8549 - t7242 * t8548) * t8832) * MDP(12) + (-(t7589 * t7009 + t7070 * t9006) * t7677 - (t7588 * t7008 + t7068 * t9007) * t7674 - (t7587 * t7007 + t7066 * t9008) * t7671 - (t7583 * t7003 + t7063 * t9012) * t7666 + (-t7034 * t8553 - t7037 * t8550 - t7039 * t8549 - t7041 * t8548) * t8832) * MDP(13) + (-(t7589 * t7006 + t7069 * t9006) * t7677 - (t7588 * t7005 + t7067 * t9007) * t7674 - (t7587 * t7004 + t7065 * t9008) * t7671 - (t7583 * t7002 + t7062 * t9012) * t7666 + (-t7035 * t8553 - t7036 * t8548 - t7038 * t8550 - t7040 * t8549) * t8832) * MDP(14) + (t7589 * t8714 + t7518 * t8223 + t7588 * t8715 + t7517 * t8224 + t7587 * t8716 + t7516 * t8225 + t7583 * t8717 + t7511 * t8226 + (-t7074 * t8553 - t7075 * t8550 - t7076 * t8549 - t7077 * t8548) * t8055) * t9067 + (-(t7589 * t6993 + t7518 * t7140) * t7677 - (t7588 * t6991 + t7517 * t7138) * t7674 - (t7587 * t6989 + t7516 * t7136) * t7671 - (t7583 * t6987 + t7511 * t7131) * t7666 + (-t7106 * t8553 - t7108 * t8550 - t7110 * t8549 - t7112 * t8548) * t8832) * MDP(16) + (-(t7589 * t6992 - t7518 * t8614) * t7677 - (t7588 * t6990 - t7517 * t8615) * t7674 - (t7587 * t6988 - t7516 * t8616) * t7671 - (t7583 * t6986 - t7511 * t8617) * t7666 + (-t7107 * t8553 - t7109 * t8550 - t7111 * t8549 - t7113 * t8548) * t8832) * MDP(17) + t7748 * MDP(19) - t7747 * MDP(20) + t9073 * MDP(21); (-t7186 * t9005 - t7199 * t9003 - t7200 * t9002 - t7201 * t9001) * MDP(1) + (-t7582 * t8977 - t7584 * t8973 - t7585 * t8969 - t7586 * t8965) * MDP(2) + (-t7582 * t8976 - t7584 * t8972 - t7585 * t8968 - t7586 * t8964) * MDP(3) + ((-t7152 * t9001 + t7515 * t8324) * t8021 + (-t7148 * t9002 + t7514 * t8326) * t8018 + (-t7150 * t9003 + t7513 * t8328) * t8015 + (-t7146 * t9005 + t7510 * t8334) * t8005) * t9071 + (-(t7145 * t9162 + t7442 * t9009) * t7677 - (t7144 * t9163 + t7441 * t9010) * t7674 - (t7143 * t9164 + t7440 * t9011) * t7671 - (t7142 * t9166 + t7436 * t9013) * t7666) * t9070 + (-(t7053 * t9162 - t7181 * t9009) * t7677 - (t7051 * t9163 - t7180 * t9010) * t7674 - (t7049 * t9164 - t7179 * t9011) * t7671 - (t7044 * t9166 - t7169 * t9013) * t7666) * t9069 + (-(t7178 * t9009 + t7586 * t9175) * t7677 - (t7177 * t9010 + t7585 * t9176) * t7674 - (t7176 * t9011 + t7584 * t9177) * t7671 - (t7168 * t9013 + t7582 * t9178) * t7666) * t9068 + (-t7055 * t8561 - t7059 * t8559 - t7060 * t8558 - t7061 * t8557 + (-t7055 * t9005 - t7059 * t9003 - t7060 * t9002 - t7061 * t9001) * t7993) * MDP(8) + (-(t7021 * t7586 + t7140 * t9009) * t7677 - (t7020 * t7585 + t7138 * t9010) * t7674 - (t7019 * t7584 + t7136 * t9011) * t7671 - (t7015 * t7582 + t7131 * t9013) * t7666) * MDP(9) + (-(t7018 * t7586 + t7141 * t9009) * t7677 - (t7017 * t7585 + t7139 * t9010) * t7674 - (t7016 * t7584 + t7137 * t9011) * t7671 - (t7014 * t7582 + t7132 * t9013) * t7666) * MDP(10) + (-(t7001 * t7586 + t7013 * t9009) * t7677 - (t6999 * t7585 + t7012 * t9010) * t7674 - (t7000 * t7584 + t7011 * t9011) * t7671 - (t6998 * t7582 + t7010 * t9013) * t7666 + (t7243 * t8552 + t7244 * t8547 + t7245 * t8545 + t7246 * t8543) * t8832) * MDP(11) + (-(t6997 * t7586 + t7033 * t9009) * t7677 - (t6996 * t7585 + t7032 * t9010) * t7674 - (t6995 * t7584 + t7031 * t9011) * t7671 - (t6994 * t7582 + t7030 * t9013) * t7666 + (t7239 * t8552 + t7240 * t8547 + t7241 * t8545 + t7242 * t8543) * t8832) * MDP(12) + (-(t7009 * t7586 + t7070 * t9009) * t7677 - (t7008 * t7585 + t7068 * t9010) * t7674 - (t7007 * t7584 + t7066 * t9011) * t7671 - (t7003 * t7582 + t7063 * t9013) * t7666 + (t7034 * t8552 + t7037 * t8547 + t7039 * t8545 + t7041 * t8543) * t8832) * MDP(13) + (-(t7006 * t7586 + t7069 * t9009) * t7677 - (t7005 * t7585 + t7067 * t9010) * t7674 - (t7004 * t7584 + t7065 * t9011) * t7671 - (t7002 * t7582 + t7062 * t9013) * t7666 + (t7035 * t8552 + t7036 * t8543 + t7038 * t8547 + t7040 * t8545) * t8832) * MDP(14) + (t7586 * t8714 + t7515 * t8223 + t7585 * t8715 + t7514 * t8224 + t7584 * t8716 + t7513 * t8225 + t7582 * t8717 + t7510 * t8226 + (t7074 * t8552 + t7075 * t8547 + t7076 * t8545 + t7077 * t8543) * t8055) * t9067 + (-(t6993 * t7586 + t7140 * t7515) * t7677 - (t6991 * t7585 + t7138 * t7514) * t7674 - (t6989 * t7584 + t7136 * t7513) * t7671 - (t6987 * t7582 + t7131 * t7510) * t7666 + (t7106 * t8552 + t7108 * t8547 + t7110 * t8545 + t7112 * t8543) * t8832) * MDP(16) + (-(t6992 * t7586 - t7515 * t8614) * t7677 - (t6990 * t7585 - t7514 * t8615) * t7674 - (t6988 * t7584 - t7513 * t8616) * t7671 - (t6986 * t7582 - t7510 * t8617) * t7666 + (t7107 * t8552 + t7109 * t8547 + t7111 * t8545 + t7113 * t8543) * t8832) * MDP(17) + t7747 * MDP(19) + t7748 * MDP(20) + t9074 * MDP(21); (t7186 * t8974 + t7199 * t8961 + t7200 * t8960 + t7201 * t8959) * MDP(1) + (t7695 * t8974 + t7697 * t8961 + t7698 * t8960 + t7699 * t8959) * MDP(2) + (t7696 * t8974 + t7700 * t8961 + t7701 * t8960 + t7702 * t8959) * MDP(3) + ((t7152 * t8959 - t8530 * t8580) * t8021 + (t7148 * t8960 - t8531 * t8581) * t8018 + (t7150 * t8961 - t8532 * t8582) * t8015 + (t7146 * t8974 - t8537 * t8588) * t8005) * t9071 + (t7142 * t8704 + t7143 * t8702 + t7144 * t8700 + t7145 * t8698 + t7436 * t8537 + t7440 * t8532 + t7441 * t8531 + t7442 * t8530) * t9070 + (t7044 * t8704 + t7049 * t8702 + t7051 * t8700 + t7053 * t8698 - t7169 * t8537 - t7179 * t8532 - t7180 * t8531 - t7181 * t8530) * t9069 + (t7043 * t8705 + t7048 * t8703 + t7050 * t8701 + t7052 * t8699 + t7168 * t8537 + t7176 * t8532 + t7177 * t8531 + t7178 * t8530) * t9068 + (t7055 * t8537 + t7059 * t8532 + t7060 * t8531 + t7061 * t8530 + (t7055 * t8974 + t7059 * t8961 + t7060 * t8960 + t7061 * t8959) * t7993) * MDP(8) + (t7015 * t8974 + t7019 * t8961 + t7020 * t8960 + t7021 * t8959 + t8374 + t8375 + t8376 + t8377) * MDP(9) + (t7014 * t8974 + t7016 * t8961 + t7017 * t8960 + t7018 * t8959 + t7132 * t8537 + t7137 * t8532 + t7139 * t8531 + t7141 * t8530) * MDP(10) + (t7010 * t8537 + t7011 * t8532 + t7012 * t8531 + t7013 * t8530 + t6998 * t8974 + t6999 * t8960 + t7000 * t8961 + t7001 * t8959 + (t7243 * t8536 + t7244 * t8535 + t7245 * t8534 + t7246 * t8533) * t8055) * MDP(11) + (t7030 * t8537 + t7031 * t8532 + t7032 * t8531 + t7033 * t8530 + t6994 * t8974 + t6995 * t8961 + t6996 * t8960 + t6997 * t8959 + (t7239 * t8536 + t7240 * t8535 + t7241 * t8534 + t7242 * t8533) * t8055) * MDP(12) + (t7063 * t8537 + t7066 * t8532 + t7068 * t8531 + t7070 * t8530 + t7003 * t8974 + t7007 * t8961 + t7008 * t8960 + t7009 * t8959 + (t7034 * t8536 + t7037 * t8535 + t7039 * t8534 + t7041 * t8533) * t8055) * MDP(13) + (t7062 * t8537 + t7065 * t8532 + t7067 * t8531 + t7069 * t8530 + t7002 * t8974 + t7004 * t8961 + t7005 * t8960 + t7006 * t8959 + (t7035 * t8536 + t7036 * t8533 + t7038 * t8535 + t7040 * t8534) * t8055) * MDP(14) + ((t7074 * t8536 + t7075 * t8535 + t7076 * t8534 + t7077 * t8533) * t8055 + (-t7666 * t8348 * t8997 - t7671 * t8347 * t8996 - t7674 * t8346 * t8995 - t7677 * t8345 * t8994 + t7064 * t8705 + t7071 * t8703 + t7072 * t8701 + t7073 * t8699) * t7992) * MDP(15) + (t6987 * t8974 + t6989 * t8961 + t6991 * t8960 + t6993 * t8959 + t7131 * t8997 + t7136 * t8996 + t7138 * t8995 + t7140 * t8994 + (t7106 * t8536 + t7108 * t8535 + t7110 * t8534 + t7112 * t8533) * t8055) * MDP(16) + (t6992 * t8959 - t8020 * t8374 + t6990 * t8960 - t8017 * t8375 + t6988 * t8961 - t8014 * t8376 + t6986 * t8974 - t8004 * t8377 + (t7107 * t8536 + t7109 * t8535 + t7111 * t8534 + t7113 * t8533) * t8055) * MDP(17) + (t8011 - g(3)) * MDP(21); (-t7186 * t7512 - t7199 * t7519 - t7200 * t7520 - t7201 * t7521) * MDP(1) + (-t7512 * t7695 - t7519 * t7697 - t7520 * t7698 - t7521 * t7699) * MDP(2) + (-t7512 * t7696 - t7519 * t7700 - t7520 * t7701 - t7521 * t7702) * MDP(3) + ((-t7152 * t7521 - t7445 * t8580) * t8021 + (-t7148 * t7520 - t7444 * t8581) * t8018 + (-t7150 * t7519 - t7446 * t8582) * t8015 + (-t7146 * t7512 - t7443 * t8588) * t8005) * t9071 + (t7142 * t9173 + t7143 * t9171 + t7144 * t9169 + t7145 * t9167 + t7436 * t7443 + t7440 * t7446 + t7441 * t7444 + t7442 * t7445) * t9070 + (t7044 * t9173 + t7049 * t9171 + t7051 * t9169 + t7053 * t9167 - t7169 * t7443 - t7179 * t7446 - t7180 * t7444 - t7181 * t7445) * t9069 + (t7043 * t9174 + t7048 * t9172 + t7050 * t9170 + t7052 * t9168 + t7168 * t7443 + t7176 * t7446 + t7177 * t7444 + t7178 * t7445) * t9068 + (t7055 * t7443 + t7059 * t7446 + t7060 * t7444 + t7061 * t7445 + (-t7055 * t7512 - t7059 * t7519 - t7060 * t7520 - t7061 * t7521) * t7993) * MDP(8) + (-t7015 * t7512 - t7019 * t7519 - t7020 * t7520 - t7021 * t7521 + t9061 + t9063 + t9065 + t9066) * MDP(9) + (-t7014 * t7512 - t7016 * t7519 - t7017 * t7520 - t7018 * t7521 + t7132 * t7443 + t7137 * t7446 + t7139 * t7444 + t7141 * t7445) * MDP(10) + (-t6998 * t7512 - t6999 * t7520 - t7000 * t7519 - t7001 * t7521 + t7010 * t7443 + t7011 * t7446 + t7012 * t7444 + t7013 * t7445 + t7243 * t7447 + t7244 * t7448 + t7245 * t7450 + t7246 * t7449) * MDP(11) + (-t6994 * t7512 - t6995 * t7519 - t6996 * t7520 - t6997 * t7521 + t7030 * t7443 + t7031 * t7446 + t7032 * t7444 + t7033 * t7445 + t7239 * t7447 + t7240 * t7448 + t7241 * t7450 + t7242 * t7449) * MDP(12) + (-t7003 * t7512 - t7007 * t7519 - t7008 * t7520 - t7009 * t7521 + t7034 * t7447 + t7037 * t7448 + t7039 * t7450 + t7041 * t7449 + t7063 * t7443 + t7066 * t7446 + t7068 * t7444 + t7070 * t7445) * MDP(13) + (-t7002 * t7512 - t7004 * t7519 - t7005 * t7520 - t7006 * t7521 + t7035 * t7447 + t7036 * t7449 + t7038 * t7448 + t7040 * t7450 + t7062 * t7443 + t7065 * t7446 + t7067 * t7444 + t7069 * t7445) * MDP(14) + (t7447 * t7074 + t7448 * t7075 + t7450 * t7076 + t7449 * t7077 + (-t7393 * t7443 * t8586 - t7396 * t7446 * t8577 - t7397 * t7444 * t8571 - t7398 * t7445 * t8565 + t7064 * t9174 + t7071 * t9172 + t7072 * t9170 + t7073 * t9168) * t7992) * MDP(15) + (-t6987 * t7512 - t6989 * t7519 - t6991 * t7520 - t6993 * t7521 + t7106 * t7447 + t7108 * t7448 + t7110 * t7450 + t7112 * t7449 + t8007 * t9066 + t8023 * t9065 + t8026 * t9063 + t8029 * t9061) * MDP(16) + (-t6986 * t7512 - t6988 * t7519 - t6990 * t7520 - t6992 * t7521 + t7107 * t7447 + t7109 * t7448 + t7111 * t7450 + t7113 * t7449 - t7444 * t9062 - t7445 * t9060 - t7446 * t9064 - t8004 * t9066) * MDP(17) + t8010 * MDP(18) + (-t7959 * t9073 + t7960 * t9074) * MDP(19) + (-t7959 * t9074 - t7960 * t9073) * MDP(20);];
tauX  = t1;
