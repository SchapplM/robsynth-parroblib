% Calculate vector of centrifugal and coriolis load on the joints for
% P4RRRRR10V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [4x1]
%   Generalized platform coordinates
% xDP [4x1]
%   Generalized platform velocities
% qJ [3x4]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [4x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [4x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [8x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,d1,d2,d3,d4]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [4x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-08-07 17:14
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(4,1),zeros(4,1),zeros(3,4),zeros(4,3),zeros(4,3),zeros(8,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: xP has to be [4x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: xDP has to be [4x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 4]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x4] (double)');
assert(isreal(pkin) && all(size(pkin) == [8 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: pkin has to be [8x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [4 3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [4x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [4 3]), ...
  'P4RRRRR10V2G1A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [4x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2020-08-07 13:33:55
% EndTime: 2020-08-07 13:41:43
% DurationCPUTime: 452.80s
% Computational Cost: add. (3184304->3121), mult. (5365266->4636), div. (90360->33), fcn. (4337052->36), ass. (0->1661)
t3907 = rSges(3,2) * pkin(2);
t4885 = rSges(3,1) * pkin(6);
t3696 = t3907 + t4885;
t3655 = m(3) * t3696;
t3906 = rSges(3,2) * pkin(6);
t4886 = rSges(3,1) * pkin(2);
t3695 = -t3906 + t4886;
t3881 = cos(qJ(3,4));
t3878 = sin(qJ(3,4));
t4878 = m(3) * t3878;
t4884 = rSges(3,1) * rSges(3,2);
t3903 = rSges(2,3) + pkin(6);
t4973 = m(2) * t3903;
t4982 = -rSges(2,1) * t4973 - Icges(3,4) + Icges(2,5) + (-pkin(2) * pkin(6) + t4884) * m(3);
t3936 = rSges(3,2) ^ 2;
t3938 = rSges(3,1) ^ 2;
t3788 = -t3936 + t3938;
t4805 = Icges(3,2) - Icges(3,1);
t3618 = m(3) * t3788 + t4805;
t4995 = t3618 * t3878;
t5013 = -t3695 * t4878 + t3881 * (-t4995 - t3655) + t4982;
t3893 = cos(qJ(3,3));
t3884 = sin(qJ(3,3));
t4877 = m(3) * t3884;
t4994 = t3618 * t3884;
t5012 = -t3695 * t4877 + t3893 * (-t4994 - t3655) + t4982;
t3896 = cos(qJ(3,2));
t3887 = sin(qJ(3,2));
t4876 = m(3) * t3887;
t4993 = t3618 * t3887;
t5011 = -t3695 * t4876 + t3896 * (-t4993 - t3655) + t4982;
t3899 = cos(qJ(3,1));
t3890 = sin(qJ(3,1));
t4875 = m(3) * t3890;
t4992 = t3618 * t3890;
t5010 = -t3695 * t4875 + t3899 * (-t4992 - t3655) + t4982;
t3882 = cos(qJ(2,4));
t3913 = pkin(8) + pkin(7);
t3706 = t3913 * t3882;
t3879 = sin(qJ(2,4));
t4855 = pkin(2) * t3879;
t3585 = t3706 - t4855;
t3864 = sin(pkin(4));
t5009 = t3585 * t3864;
t3945 = pkin(8) ^ 2;
t3946 = pkin(7) ^ 2;
t4502 = (-t3946 - t3945);
t4890 = (pkin(8) * pkin(7));
t4212 = -2 * t4890 + t4502;
t3798 = t3884 * pkin(3);
t3710 = t3798 + pkin(6);
t3865 = cos(pkin(4));
t3885 = sin(qJ(2,3));
t3802 = t3893 * pkin(3);
t3844 = pkin(2) + t3913;
t3845 = pkin(2) - t3913;
t4656 = (t3802 + t3844) * (t3802 + t3845);
t4276 = t3885 * t4656;
t4971 = t3802 + pkin(2);
t4633 = t4971 * t3864;
t3439 = -t3710 * t4633 + t3865 * t4276;
t3886 = sin(qJ(1,3));
t3895 = cos(qJ(1,3));
t4975 = 0.2e1 * t3913;
t4563 = t3885 * t4975;
t3660 = pkin(1) + t4563;
t4651 = t3660 * t4971;
t3416 = -t3439 * t3886 + t3895 * t4651;
t3419 = t3439 * t3895 + t3886 * t4651;
t4595 = t3864 * t3885;
t4270 = t3710 * t4595;
t3492 = t3865 * t4971 - t4270;
t3811 = pkin(1) * t3885;
t3679 = t3913 + t3811;
t3444 = -t3492 * t3886 + t3679 * t3895;
t3447 = t3492 * t3895 + t3679 * t3886;
t4573 = t3865 * t3913;
t4267 = t4971 * t4573;
t3451 = 0.2e1 * t3886 * t4267 + t3895 * t4656;
t3875 = legFrame(3,3);
t3770 = sin(t3875);
t3774 = cos(t3875);
t3894 = cos(qJ(2,3));
t3849 = t3894 ^ 2;
t4097 = t3895 * t4267;
t4236 = t3886 * t4656;
t3329 = (t3451 * t3774 + 0.2e1 * (t4097 - t4236 / 0.2e1) * t3770) * t3849 + (t3416 * t3774 - t3419 * t3770) * t3894 + (t3444 * t3774 - t3447 * t3770) * t3913;
t3332 = ((-0.2e1 * t4097 + t4236) * t3774 + t3451 * t3770) * t3849 + (t3416 * t3770 + t3419 * t3774) * t3894 + t3913 * (t3444 * t3770 + t3447 * t3774);
t3916 = xP(4);
t3826 = sin(t3916);
t3827 = cos(t3916);
t3929 = koppelP(3,2);
t3933 = koppelP(3,1);
t3550 = -t3826 * t3929 + t3827 * t3933;
t3909 = xDP(4);
t3911 = xDP(2);
t3500 = t3550 * t3909 + t3911;
t3546 = t3826 * t3933 + t3827 * t3929;
t3912 = xDP(1);
t3504 = -t3546 * t3909 + t3912;
t3910 = xDP(3);
t3711 = t3798 - pkin(6);
t3951 = pkin(2) ^ 2;
t3847 = t3893 ^ 2;
t4841 = pkin(3) * t3847;
t4481 = pkin(6) * t4841;
t3670 = pkin(1) * t4573;
t4639 = t3670 * t3893;
t3431 = (t4639 + (pkin(2) * t3711 * t3893 + t3884 * t3951 - t4481) * t3864) * t3894;
t4857 = pkin(2) * t3865;
t3748 = pkin(1) * t4857;
t4587 = t3864 * t3913;
t4375 = pkin(6) * t4587;
t3554 = -t3748 - t4375;
t4865 = pkin(1) * t3865;
t4490 = pkin(3) * t4865;
t4193 = t3847 * t4490;
t4395 = pkin(2) * t4587;
t4596 = t3864 * t3884;
t4421 = pkin(1) * t4596;
t3387 = 0.1e1 / (t3431 + (t3554 * t3893 + t3884 * t4395 - t4193) * t3885 + t4971 * t4421);
t3950 = 0.1e1 / pkin(3);
t4586 = t3864 * t3950;
t4293 = t3387 * t4586;
t3825 = pkin(1) * t3913;
t3837 = t3865 ^ 2;
t3757 = pkin(2) * t3802;
t3949 = pkin(3) ^ 2;
t3801 = t3847 * t3949;
t4029 = 0.2e1 * t3757 + t3801;
t4605 = t3844 * t3845;
t3985 = t4029 + t4605;
t4613 = (t3865 + 0.1e1) * (t3865 - 0.1e1);
t4263 = t3849 * t4613;
t4179 = -0.2e1 * t4263;
t4242 = t3864 * t4573;
t4590 = t3864 * t3894;
t4245 = t3865 * t4590;
t4551 = t3913 * t3885;
t3559 = pkin(1) * t3798 - pkin(6) * t4551;
t3657 = t4551 + pkin(1);
t4854 = pkin(2) * t3884;
t4400 = t3657 * t4854;
t4576 = t3865 * t3893;
t4412 = pkin(1) * t4576;
t4990 = t3885 * t4971;
t4680 = 0.1e1 / ((t4639 - (pkin(6) * t3893 - t4854) * t4633) * t3894 - t4412 * t4990 + t3864 * (t3559 * t3893 + t4400)) * t3950;
t4297 = (t3825 * t3894 + (-t3710 * t4245 - t3679 + (t3837 + t4179) * t3913) * t4971 + ((t3837 * t4656 - t3985) * t3894 - t3710 * t4242) * t3885) * t4680;
t3166 = t3910 * t4297 + (-t3329 * t3504 - t3332 * t3500) * t4293;
t3160 = pkin(1) * t3166;
t3803 = t3894 * pkin(2);
t3587 = t3803 + t4551;
t3719 = t3803 + pkin(1);
t3482 = -pkin(6) * t3587 + t3719 * t3798;
t3737 = t3913 * t3894;
t4853 = pkin(2) * t3885;
t3590 = t3737 - t4853;
t3530 = t3590 * t4865;
t3574 = pkin(1) + t3587;
t3525 = t3574 * t4854;
t4581 = t3865 * t3885;
t4415 = pkin(1) * t4581;
t4087 = t3864 * t3525 - (pkin(6) * t4590 + t4415) * t4841;
t3396 = 0.1e1 / ((t3482 * t3864 + t3530) * t3893 + t4087);
t4237 = t3885 * t3737;
t4820 = t3849 * pkin(2);
t4019 = t4237 + t4820;
t3542 = -pkin(2) + t4019;
t3764 = t3849 - 0.2e1;
t4165 = -t3764 * t3837 + t3849;
t4248 = t3864 * t4581;
t4567 = t3884 * t3893;
t4600 = t3864 * t3865;
t3768 = pkin(6) * t3837;
t4817 = t3768 - pkin(6);
t4895 = 0.2e1 * t3847;
t4694 = ((-t3590 * t4600 + t4817) * t3893 + (-pkin(6) * t4248 - t3542 * t3837 + t3574 * t3894) * t3884 + (-(-t4165 + 0.1e1) * t4567 + (t4895 - 0.1e1) * t4248) * pkin(3)) * t3396;
t3519 = t3770 * t3895 + t3774 * t3886;
t3520 = -t3770 * t3886 + t3774 * t3895;
t3709 = pkin(6) * t3884 + pkin(3);
t4616 = t3764 * t3884;
t3978 = ((pkin(3) * t4616 - pkin(6)) * t3893 + t3884 * t3542) * t4600 - (t3590 * t3893 + (t3709 - 0.2e1 * t4841) * t3885) * t3837 - (-t3709 + t4841) * t3885;
t4381 = t3894 * t3802;
t4611 = (t3894 + 0.1e1) * (t3894 - 0.1e1);
t3991 = -(-t3913 * t4611 + (t3719 + t4381) * t3885) * t4596 + (t3574 + t4381) * t4576;
t3346 = t3519 * t3991 + t3520 * t3978;
t3471 = (t3737 - t4990) * t4412;
t4060 = -t3894 * t4481 + t3525;
t3407 = 0.1e1 / (t3471 + t3864 * (t3482 * t3893 + t4060));
t4712 = t3346 * t3407;
t3345 = -t3519 * t3978 + t3520 * t3991;
t4713 = t3345 * t3407;
t3269 = t3500 * t4712 + t3504 * t4713 + t3910 * t4694;
t4764 = t3269 * t3884;
t3227 = pkin(3) * t4764;
t3154 = pkin(7) * t3166;
t3151 = pkin(8) * t3166;
t3257 = pkin(6) * t3269;
t4511 = t3257 + t3151;
t4216 = -t3154 - t4511;
t4930 = t4216 - t3227;
t5004 = -t3885 * t4930 + t3160;
t3799 = t3887 * pkin(3);
t3713 = t3799 + pkin(6);
t3888 = sin(qJ(2,2));
t3805 = t3896 * pkin(3);
t4655 = (t3805 + t3844) * (t3805 + t3845);
t4275 = t3888 * t4655;
t4970 = t3805 + pkin(2);
t4632 = t4970 * t3864;
t3440 = -t3713 * t4632 + t3865 * t4275;
t3889 = sin(qJ(1,2));
t3898 = cos(qJ(1,2));
t4558 = t3888 * t4975;
t3661 = pkin(1) + t4558;
t4649 = t3661 * t4970;
t3417 = -t3440 * t3889 + t3898 * t4649;
t3420 = t3440 * t3898 + t3889 * t4649;
t4593 = t3864 * t3888;
t4269 = t3713 * t4593;
t3493 = t3865 * t4970 - t4269;
t3812 = pkin(1) * t3888;
t3680 = t3913 + t3812;
t3445 = -t3493 * t3889 + t3680 * t3898;
t3448 = t3493 * t3898 + t3680 * t3889;
t4266 = t4970 * t4573;
t3452 = 0.2e1 * t3889 * t4266 + t3898 * t4655;
t3876 = legFrame(2,3);
t3771 = sin(t3876);
t3775 = cos(t3876);
t3897 = cos(qJ(2,2));
t3853 = t3897 ^ 2;
t4096 = t3898 * t4266;
t4234 = t3889 * t4655;
t3330 = (t3452 * t3775 + 0.2e1 * (t4096 - t4234 / 0.2e1) * t3771) * t3853 + (t3417 * t3775 - t3420 * t3771) * t3897 + (t3445 * t3775 - t3448 * t3771) * t3913;
t3333 = ((-0.2e1 * t4096 + t4234) * t3775 + t3452 * t3771) * t3853 + (t3417 * t3771 + t3420 * t3775) * t3897 + t3913 * (t3445 * t3771 + t3448 * t3775);
t3930 = koppelP(2,2);
t3934 = koppelP(2,1);
t3551 = -t3826 * t3930 + t3827 * t3934;
t3501 = t3551 * t3909 + t3911;
t3547 = t3826 * t3934 + t3827 * t3930;
t3505 = -t3547 * t3909 + t3912;
t3714 = t3799 - pkin(6);
t3851 = t3896 ^ 2;
t4840 = pkin(3) * t3851;
t4480 = pkin(6) * t4840;
t4638 = t3670 * t3896;
t3432 = (t4638 + (pkin(2) * t3714 * t3896 + t3887 * t3951 - t4480) * t3864) * t3897;
t4192 = t3851 * t4490;
t4594 = t3864 * t3887;
t4420 = pkin(1) * t4594;
t3388 = 0.1e1 / (t3432 + (t3554 * t3896 + t3887 * t4395 - t4192) * t3888 + t4970 * t4420);
t4292 = t3388 * t4586;
t3758 = pkin(2) * t3805;
t3804 = t3851 * t3949;
t4028 = 0.2e1 * t3758 + t3804;
t3984 = t4028 + t4605;
t4262 = t3853 * t4613;
t4178 = -0.2e1 * t4262;
t4589 = t3864 * t3897;
t4244 = t3865 * t4589;
t4550 = t3913 * t3888;
t3560 = pkin(1) * t3799 - pkin(6) * t4550;
t3658 = t4550 + pkin(1);
t4852 = pkin(2) * t3887;
t4399 = t3658 * t4852;
t4575 = t3865 * t3896;
t4411 = pkin(1) * t4575;
t4989 = t3888 * t4970;
t4679 = 0.1e1 / ((t4638 - (pkin(6) * t3896 - t4852) * t4632) * t3897 - t4411 * t4989 + t3864 * (t3560 * t3896 + t4399)) * t3950;
t4296 = (t3825 * t3897 + (-t3713 * t4244 - t3680 + (t3837 + t4178) * t3913) * t4970 + ((t3837 * t4655 - t3984) * t3897 - t3713 * t4242) * t3888) * t4679;
t3167 = t3910 * t4296 + (-t3330 * t3505 - t3333 * t3501) * t4292;
t3161 = pkin(1) * t3167;
t3806 = t3897 * pkin(2);
t3588 = t3806 + t4550;
t3721 = t3806 + pkin(1);
t3483 = -pkin(6) * t3588 + t3721 * t3799;
t3738 = t3913 * t3897;
t4851 = pkin(2) * t3888;
t3591 = t3738 - t4851;
t3531 = t3591 * t4865;
t3575 = pkin(1) + t3588;
t3526 = t3575 * t4852;
t4579 = t3865 * t3888;
t4414 = pkin(1) * t4579;
t4086 = t3864 * t3526 - (pkin(6) * t4589 + t4414) * t4840;
t3397 = 0.1e1 / ((t3483 * t3864 + t3531) * t3896 + t4086);
t4235 = t3888 * t3738;
t4819 = t3853 * pkin(2);
t4017 = t4235 + t4819;
t3543 = -pkin(2) + t4017;
t3765 = t3853 - 0.2e1;
t4164 = -t3765 * t3837 + t3853;
t4247 = t3864 * t4579;
t4562 = t3887 * t3896;
t4894 = 0.2e1 * t3851;
t4693 = ((-t3591 * t4600 + t4817) * t3896 + (-pkin(6) * t4247 - t3543 * t3837 + t3575 * t3897) * t3887 + (-(-t4164 + 0.1e1) * t4562 + (t4894 - 0.1e1) * t4247) * pkin(3)) * t3397;
t3521 = t3771 * t3898 + t3775 * t3889;
t3522 = -t3771 * t3889 + t3775 * t3898;
t3712 = pkin(6) * t3887 + pkin(3);
t4615 = t3765 * t3887;
t3977 = ((pkin(3) * t4615 - pkin(6)) * t3896 + t3887 * t3543) * t4600 - (t3591 * t3896 + (t3712 - 0.2e1 * t4840) * t3888) * t3837 - (-t3712 + t4840) * t3888;
t4380 = t3897 * t3805;
t4610 = (t3897 + 0.1e1) * (t3897 - 0.1e1);
t3990 = -(-t3913 * t4610 + (t3721 + t4380) * t3888) * t4594 + (t3575 + t4380) * t4575;
t3348 = t3521 * t3990 + t3522 * t3977;
t3472 = (t3738 - t4989) * t4411;
t4059 = -t3897 * t4480 + t3526;
t3408 = 0.1e1 / (t3472 + t3864 * (t3483 * t3896 + t4059));
t4710 = t3348 * t3408;
t3347 = -t3521 * t3977 + t3522 * t3990;
t4711 = t3347 * t3408;
t3270 = t3501 * t4710 + t3505 * t4711 + t3910 * t4693;
t4760 = t3270 * t3887;
t3228 = pkin(3) * t4760;
t3155 = pkin(7) * t3167;
t3152 = pkin(8) * t3167;
t3258 = pkin(6) * t3270;
t4510 = t3258 + t3152;
t4215 = -t3155 - t4510;
t4931 = t4215 - t3228;
t5003 = -t3888 * t4931 + t3161;
t3800 = t3890 * pkin(3);
t3716 = t3800 + pkin(6);
t3891 = sin(qJ(2,1));
t3808 = t3899 * pkin(3);
t4654 = (t3808 + t3844) * (t3808 + t3845);
t4274 = t3891 * t4654;
t4969 = t3808 + pkin(2);
t4631 = t4969 * t3864;
t3441 = -t3716 * t4631 + t3865 * t4274;
t3892 = sin(qJ(1,1));
t3901 = cos(qJ(1,1));
t4553 = t3891 * t4975;
t3662 = pkin(1) + t4553;
t4647 = t3662 * t4969;
t3418 = -t3441 * t3892 + t3901 * t4647;
t3421 = t3441 * t3901 + t3892 * t4647;
t4591 = t3864 * t3891;
t4268 = t3716 * t4591;
t3494 = t3865 * t4969 - t4268;
t3813 = pkin(1) * t3891;
t3681 = t3913 + t3813;
t3446 = -t3494 * t3892 + t3681 * t3901;
t3449 = t3494 * t3901 + t3681 * t3892;
t4265 = t4969 * t4573;
t3453 = 0.2e1 * t3892 * t4265 + t3901 * t4654;
t3877 = legFrame(1,3);
t3772 = sin(t3877);
t3776 = cos(t3877);
t3900 = cos(qJ(2,1));
t3857 = t3900 ^ 2;
t4095 = t3901 * t4265;
t4232 = t3892 * t4654;
t3331 = (t3453 * t3776 + 0.2e1 * (t4095 - t4232 / 0.2e1) * t3772) * t3857 + (t3418 * t3776 - t3421 * t3772) * t3900 + (t3446 * t3776 - t3449 * t3772) * t3913;
t3334 = ((-0.2e1 * t4095 + t4232) * t3776 + t3453 * t3772) * t3857 + (t3418 * t3772 + t3421 * t3776) * t3900 + t3913 * (t3446 * t3772 + t3449 * t3776);
t3931 = koppelP(1,2);
t3935 = koppelP(1,1);
t3552 = -t3826 * t3931 + t3827 * t3935;
t3502 = t3552 * t3909 + t3911;
t3548 = t3826 * t3935 + t3827 * t3931;
t3506 = -t3548 * t3909 + t3912;
t3717 = t3800 - pkin(6);
t3855 = t3899 ^ 2;
t4839 = pkin(3) * t3855;
t4479 = pkin(6) * t4839;
t4637 = t3670 * t3899;
t3433 = (t4637 + (pkin(2) * t3717 * t3899 + t3890 * t3951 - t4479) * t3864) * t3900;
t4191 = t3855 * t4490;
t4592 = t3864 * t3890;
t4419 = pkin(1) * t4592;
t3389 = 0.1e1 / (t3433 + (t3554 * t3899 + t3890 * t4395 - t4191) * t3891 + t4969 * t4419);
t4291 = t3389 * t4586;
t3759 = pkin(2) * t3808;
t3807 = t3855 * t3949;
t4027 = 0.2e1 * t3759 + t3807;
t3983 = t4027 + t4605;
t4261 = t3857 * t4613;
t4177 = -0.2e1 * t4261;
t4588 = t3864 * t3900;
t4243 = t3865 * t4588;
t4549 = t3913 * t3891;
t3561 = pkin(1) * t3800 - pkin(6) * t4549;
t3659 = t4549 + pkin(1);
t4850 = pkin(2) * t3890;
t4398 = t3659 * t4850;
t4574 = t3865 * t3899;
t4410 = pkin(1) * t4574;
t4988 = t3891 * t4969;
t4678 = 0.1e1 / ((t4637 - (pkin(6) * t3899 - t4850) * t4631) * t3900 - t4410 * t4988 + t3864 * (t3561 * t3899 + t4398)) * t3950;
t4295 = (t3825 * t3900 + (-t3716 * t4243 - t3681 + (t3837 + t4177) * t3913) * t4969 + ((t3837 * t4654 - t3983) * t3900 - t3716 * t4242) * t3891) * t4678;
t3168 = t3910 * t4295 + (-t3331 * t3506 - t3334 * t3502) * t4291;
t3162 = pkin(1) * t3168;
t3809 = t3900 * pkin(2);
t3589 = t3809 + t4549;
t3723 = t3809 + pkin(1);
t3484 = -pkin(6) * t3589 + t3723 * t3800;
t3739 = t3913 * t3900;
t4849 = pkin(2) * t3891;
t3592 = t3739 - t4849;
t3532 = t3592 * t4865;
t3576 = pkin(1) + t3589;
t3527 = t3576 * t4850;
t4577 = t3865 * t3891;
t4413 = pkin(1) * t4577;
t4085 = t3864 * t3527 - (pkin(6) * t4588 + t4413) * t4839;
t3398 = 0.1e1 / ((t3484 * t3864 + t3532) * t3899 + t4085);
t4233 = t3891 * t3739;
t4818 = t3857 * pkin(2);
t4015 = t4233 + t4818;
t3544 = -pkin(2) + t4015;
t3766 = t3857 - 0.2e1;
t4163 = -t3766 * t3837 + t3857;
t4246 = t3864 * t4577;
t4557 = t3890 * t3899;
t4893 = 0.2e1 * t3855;
t4692 = ((-t3592 * t4600 + t4817) * t3899 + (-pkin(6) * t4246 - t3544 * t3837 + t3576 * t3900) * t3890 + (-(-t4163 + 0.1e1) * t4557 + (t4893 - 0.1e1) * t4246) * pkin(3)) * t3398;
t3523 = t3772 * t3901 + t3776 * t3892;
t3524 = -t3772 * t3892 + t3776 * t3901;
t3715 = pkin(6) * t3890 + pkin(3);
t4614 = t3766 * t3890;
t3976 = ((pkin(3) * t4614 - pkin(6)) * t3899 + t3890 * t3544) * t4600 - (t3592 * t3899 + (t3715 - 0.2e1 * t4839) * t3891) * t3837 - (-t3715 + t4839) * t3891;
t4379 = t3900 * t3808;
t4609 = (t3900 + 0.1e1) * (t3900 - 0.1e1);
t3989 = -(-t3913 * t4609 + (t3723 + t4379) * t3891) * t4592 + (t3576 + t4379) * t4574;
t3350 = t3523 * t3989 + t3524 * t3976;
t3473 = (t3739 - t4988) * t4410;
t4058 = -t3900 * t4479 + t3527;
t3409 = 0.1e1 / (t3473 + t3864 * (t3484 * t3899 + t4058));
t4708 = t3350 * t3409;
t3349 = -t3523 * t3976 + t3524 * t3989;
t4709 = t3349 * t3409;
t3271 = t3502 * t4708 + t3506 * t4709 + t3910 * t4692;
t4756 = t3271 * t3890;
t3229 = pkin(3) * t4756;
t3156 = pkin(7) * t3168;
t3153 = pkin(8) * t3168;
t3259 = pkin(6) * t3271;
t4509 = t3259 + t3153;
t4214 = -t3156 - t4509;
t4932 = t4214 - t3229;
t5002 = -t3891 * t4932 + t3162;
t3841 = t3881 ^ 2;
t5001 = 0.2e1 * t3841;
t4882 = t3837 - 0.1e1;
t4999 = t3618 * t3841;
t4998 = t3618 * t3847;
t4997 = t3618 * t3851;
t4996 = t3618 * t3855;
t3783 = t3881 * pkin(3);
t4972 = t3783 + pkin(2);
t4991 = t3879 * t4972;
t3023 = t3154 + t3151;
t3024 = t3155 + t3152;
t3025 = t3156 + t3153;
t4546 = m(3) * t4886;
t3795 = 0.2e1 * t4546;
t4803 = -m(3) * t4884 + Icges(3,4);
t3743 = 0.2e1 * t4803;
t4630 = t3743 * t3878;
t4987 = t4999 + (t4630 + t3795) * t3881;
t4629 = t3743 * t3884;
t4986 = t4998 + (t4629 + t3795) * t3893;
t4628 = t3743 * t3887;
t4985 = t4997 + (t4628 + t3795) * t3896;
t4627 = t3743 * t3890;
t4984 = t4996 + (t4627 + t3795) * t3899;
t4552 = t3913 * t3879;
t3678 = pkin(1) * t4552;
t3863 = t3913 ^ 2;
t4983 = t3678 + t3863;
t3902 = pkin(7) + rSges(3,3);
t4874 = m(3) * t3902;
t4981 = rSges(2,2) * t4973 - pkin(6) * t4874 - Icges(2,6);
t4802 = 0.2e1 * m(3);
t3928 = koppelP(4,2);
t3932 = koppelP(4,1);
t3549 = -t3826 * t3928 + t3827 * t3932;
t3499 = t3549 * t3909 + t3911;
t3545 = t3826 * t3932 + t3827 * t3928;
t3503 = -t3545 * t3909 + t3912;
t3784 = t3882 * pkin(2);
t3584 = t3784 + t4552;
t3702 = t3784 + pkin(1);
t3781 = t3878 * pkin(3);
t3478 = -pkin(6) * t3584 + t3702 * t3781;
t3528 = t3585 * t4865;
t3570 = pkin(1) + t3584;
t4856 = pkin(2) * t3878;
t3518 = t3570 * t4856;
t4597 = t3864 * t3882;
t4376 = pkin(6) * t4597;
t4584 = t3865 * t3879;
t4417 = pkin(1) * t4584;
t4842 = pkin(3) * t3841;
t4088 = t3864 * t3518 - (t4376 + t4417) * t4842;
t3391 = 0.1e1 / ((t3478 * t3864 + t3528) * t3881 + t4088);
t4240 = t3879 * t3706;
t3843 = t3882 ^ 2;
t4821 = t3843 * pkin(2);
t4021 = t4240 + t4821;
t3537 = -pkin(2) + t4021;
t3763 = t3843 - 0.2e1;
t4166 = t3763 * t3837 - t3843;
t4250 = t3864 * t4584;
t4695 = ((-t3585 * t4600 + t4817) * t3881 + (-pkin(6) * t4250 - t3537 * t3837 + t3570 * t3882) * t3878 + (-(t4166 + 0.1e1) * t3878 * t3881 + (t5001 - 0.1e1) * t4250) * pkin(3)) * t3391;
t3874 = legFrame(4,3);
t3769 = sin(t3874);
t3773 = cos(t3874);
t3880 = sin(qJ(1,4));
t3883 = cos(qJ(1,4));
t3516 = t3769 * t3883 + t3773 * t3880;
t3517 = -t3769 * t3880 + t3773 * t3883;
t3698 = pkin(6) * t3878 + pkin(3);
t4617 = t3763 * t3878;
t3979 = ((pkin(3) * t4617 - pkin(6)) * t3881 + t3878 * t3537) * t4600 - (t3585 * t3881 + (t3698 - 0.2e1 * t4842) * t3879) * t3837 - (-t3698 + t4842) * t3879;
t4382 = t3882 * t3783;
t4583 = t3865 * t3881;
t4599 = t3864 * t3878;
t4612 = (t3882 + 0.1e1) * (t3882 - 0.1e1);
t3992 = -(-t3913 * t4612 + (t3702 + t4382) * t3879) * t4599 + (t3570 + t4382) * t4583;
t3344 = t3516 * t3992 + t3517 * t3979;
t4416 = pkin(1) * t4583;
t3470 = (t3706 - t4991) * t4416;
t4482 = pkin(6) * t4842;
t4061 = -t3882 * t4482 + t3518;
t3403 = 0.1e1 / (t3470 + t3864 * (t3478 * t3881 + t4061));
t4714 = t3344 * t3403;
t3343 = -t3516 * t3979 + t3517 * t3992;
t4715 = t3343 * t3403;
t3193 = t3499 * t4714 + t3503 * t4715 + t3910 * t4695;
t4980 = 0.2e1 * t3193;
t3558 = pkin(1) * t3781 - pkin(6) * t4552;
t3700 = t3781 - pkin(6);
t3480 = t3700 * t3784 + t3558;
t3392 = 0.1e1 / ((t3480 * t3864 + t3528) * t3881 + t4088);
t4383 = t3879 * t4842;
t4585 = t3865 * t3878;
t4687 = t3392 * (-t3864 * t4383 + (-pkin(3) * t4585 + t5009) * t3881 - pkin(2) * t4585);
t4290 = t3516 * t4599;
t3363 = -(-t3516 * t4584 + t3517 * t3882) * t4842 + (-pkin(3) * t4290 + (-pkin(2) * t3517 - t3516 * t4573) * t3882 + t3879 * (t3516 * t4857 - t3517 * t3913)) * t3881 - pkin(2) * t4290;
t4702 = t3363 * t3392;
t4289 = t3517 * t4599;
t3362 = -(t3516 * t3882 + t3517 * t4584) * t4842 + (pkin(3) * t4289 + (-pkin(2) * t3516 + t3517 * t4573) * t3882 - t3879 * (t3516 * t3913 + t3517 * t4857)) * t3881 + pkin(2) * t4289;
t4703 = t3362 * t3392;
t3287 = t3499 * t4703 + t3503 * t4702 + t3910 * t4687;
t4979 = 0.2e1 * t3287;
t4287 = t3520 * t4596;
t3364 = -(t3519 * t3894 + t3520 * t4581) * t4841 + (pkin(3) * t4287 + (-pkin(2) * t3519 + t3520 * t4573) * t3894 - t3885 * (t3519 * t3913 + t3520 * t4857)) * t3893 + pkin(2) * t4287;
t3489 = t3711 * t3803 + t3559;
t3399 = 0.1e1 / ((t3489 * t3864 + t3530) * t3893 + t4087);
t4701 = t3364 * t3399;
t3337 = t3500 * t4701;
t4288 = t3519 * t4596;
t3365 = -(-t3519 * t4581 + t3520 * t3894) * t4841 + (-pkin(3) * t4288 + (-pkin(2) * t3520 - t3519 * t4573) * t3894 + t3885 * (t3519 * t4857 - t3520 * t3913)) * t3893 - pkin(2) * t4288;
t4700 = t3365 * t3399;
t3338 = t3504 * t4700;
t4838 = pkin(3) * t3885;
t4362 = t3847 * t4838;
t4582 = t3865 * t3884;
t4686 = t3399 * (-t3864 * t4362 + (-pkin(3) * t4582 + t3590 * t3864) * t3893 - pkin(2) * t4582);
t3375 = t3910 * t4686;
t3300 = t3338 + t3337 + t3375;
t4978 = 0.2e1 * t3300;
t4285 = t3522 * t4594;
t3366 = -(t3521 * t3897 + t3522 * t4579) * t4840 + (pkin(3) * t4285 + (-pkin(2) * t3521 + t3522 * t4573) * t3897 - t3888 * (t3521 * t3913 + t3522 * t4857)) * t3896 + pkin(2) * t4285;
t3490 = t3714 * t3806 + t3560;
t3400 = 0.1e1 / ((t3490 * t3864 + t3531) * t3896 + t4086);
t4699 = t3366 * t3400;
t3339 = t3501 * t4699;
t4286 = t3521 * t4594;
t3367 = -(-t3521 * t4579 + t3522 * t3897) * t4840 + (-pkin(3) * t4286 + (-pkin(2) * t3522 - t3521 * t4573) * t3897 + t3888 * (t3521 * t4857 - t3522 * t3913)) * t3896 - pkin(2) * t4286;
t4698 = t3367 * t3400;
t3340 = t3505 * t4698;
t4837 = pkin(3) * t3888;
t4367 = t3851 * t4837;
t4580 = t3865 * t3887;
t4685 = t3400 * (-t3864 * t4367 + (-pkin(3) * t4580 + t3591 * t3864) * t3896 - pkin(2) * t4580);
t3376 = t3910 * t4685;
t3301 = t3340 + t3339 + t3376;
t4977 = 0.2e1 * t3301;
t4283 = t3524 * t4592;
t3368 = -(t3523 * t3900 + t3524 * t4577) * t4839 + (pkin(3) * t4283 + (-pkin(2) * t3523 + t3524 * t4573) * t3900 - t3891 * (t3523 * t3913 + t3524 * t4857)) * t3899 + pkin(2) * t4283;
t3491 = t3717 * t3809 + t3561;
t3401 = 0.1e1 / ((t3491 * t3864 + t3532) * t3899 + t4085);
t4697 = t3368 * t3401;
t3341 = t3502 * t4697;
t4284 = t3523 * t4592;
t3369 = -(-t3523 * t4577 + t3524 * t3900) * t4839 + (-pkin(3) * t4284 + (-pkin(2) * t3524 - t3523 * t4573) * t3900 + t3891 * (t3523 * t4857 - t3524 * t3913)) * t3899 - pkin(2) * t4284;
t4696 = t3369 * t3401;
t3342 = t3506 * t4696;
t4836 = pkin(3) * t3891;
t4366 = t3855 * t4836;
t4578 = t3865 * t3890;
t4684 = t3401 * (-t3864 * t4366 + (-pkin(3) * t4578 + t3592 * t3864) * t3899 - pkin(2) * t4578);
t3377 = t3910 * t4684;
t3302 = t3342 + t3341 + t3377;
t4976 = 0.2e1 * t3302;
t4468 = 0.2e1 * t3881;
t4598 = t3864 * t3879;
t4317 = t3287 * t4598;
t4974 = -0.2e1 * t4317;
t3650 = t4552 + pkin(1);
t3666 = rSges(3,1) * t4874 - Icges(3,5);
t3604 = t3666 * t3890;
t3487 = -t3604 + t4981;
t4808 = rSges(3,2) * t3902;
t3663 = m(3) * t4808 - Icges(3,6);
t4641 = t3663 * t3899;
t4968 = (-t3487 + t4641) * t3900;
t3603 = t3666 * t3887;
t3486 = -t3603 + t4981;
t4642 = t3663 * t3896;
t4967 = (-t3486 + t4642) * t3897;
t3602 = t3666 * t3884;
t3485 = -t3602 + t4981;
t4643 = t3663 * t3893;
t4966 = (-t3485 + t4643) * t3894;
t3595 = t3666 * t3878;
t3481 = -t3595 + t4981;
t4644 = t3663 * t3881;
t4965 = (-t3481 + t4644) * t3882;
t4766 = t3193 * t3913;
t3180 = pkin(6) * t4766;
t3699 = t3781 + pkin(6);
t4657 = (t3783 + t3844) * (t3783 + t3845);
t4278 = t3879 * t4657;
t4634 = t4972 * t3864;
t3435 = -t3699 * t4634 + t3865 * t4278;
t4568 = t3879 * t4975;
t3651 = pkin(1) + t4568;
t4653 = t3651 * t4972;
t3410 = -t3435 * t3880 + t3883 * t4653;
t3411 = t3435 * t3883 + t3880 * t4653;
t4273 = t3699 * t4598;
t3488 = t3865 * t4972 - t4273;
t3785 = pkin(1) * t3879;
t4939 = -t3913 - t3785;
t3442 = -t3488 * t3880 - t3883 * t4939;
t3443 = t3488 * t3883 - t3880 * t4939;
t4271 = t4972 * t4573;
t3450 = 0.2e1 * t3880 * t4271 + t3883 * t4657;
t4098 = t3883 * t4271;
t4239 = t3880 * t4657;
t3327 = (t3450 * t3773 + 0.2e1 * (t4098 - t4239 / 0.2e1) * t3769) * t3843 + (t3410 * t3773 - t3411 * t3769) * t3882 + (t3442 * t3773 - t3443 * t3769) * t3913;
t3328 = ((-0.2e1 * t4098 + t4239) * t3773 + t3450 * t3769) * t3843 + (t3410 * t3769 + t3411 * t3773) * t3882 + t3913 * (t3442 * t3769 + t3443 * t3773);
t3750 = pkin(2) * t3783;
t3782 = t3841 * t3949;
t4030 = 0.2e1 * t3750 + t3782;
t3986 = t4030 + t4605;
t4264 = t3843 * t4613;
t4180 = -0.2e1 * t4264;
t4249 = t3865 * t4597;
t3370 = t3825 * t3882 + (-t3699 * t4249 + t4939 + (t3837 + t4180) * t3913) * t4972 + ((t3837 * t4657 - t3986) * t3882 - t3699 * t4242) * t3879;
t4640 = t3670 * t3881;
t3430 = (t4640 + (pkin(2) * t3700 * t3881 + t3878 * t3951 - t4482) * t3864) * t3882;
t4194 = t3841 * t4490;
t4571 = t3878 * t3913;
t4241 = t3864 * t4571;
t4422 = pkin(1) * t4599;
t3386 = 0.1e1 / (t3430 + (pkin(2) * t4241 + t3554 * t3881 - t4194) * t3879 + t4972 * t4422);
t4401 = t3650 * t4856;
t4835 = pkin(6) * t3881;
t3402 = 0.1e1 / ((t4640 - (t4835 - t4856) * t4634) * t3882 - t4416 * t4991 + t3864 * (t3558 * t3881 + t4401));
t3123 = (t3370 * t3402 * t3910 + (-t3327 * t3503 - t3328 * t3499) * t3864 * t3386) * t3950;
t3120 = pkin(6) * t3123;
t3188 = pkin(8) * t3193;
t4522 = pkin(7) * t3193 + t3188;
t4786 = t3123 * t3949;
t4544 = (-t3120 / 0.2e1 + t4522) * t3781 - t4786 / 0.2e1;
t2978 = t3180 + t4544;
t3190 = pkin(6) * t3193;
t3118 = pkin(8) * t3123;
t3119 = pkin(7) * t3123;
t3022 = t3119 + t3118;
t4768 = t3193 * t3878;
t3179 = pkin(3) * t4768;
t4217 = t3179 + t3022;
t2986 = t3190 + t4217;
t2997 = -t3120 + t4522;
t3860 = 2 * t4890;
t4135 = -t4502 + t3860;
t3639 = t3951 + t4135;
t4365 = t3123 * t3781;
t4153 = t3913 * t4365;
t4034 = t3193 * t3639 - t4153;
t4658 = t3639 * t3865;
t3010 = t3287 * t4658 + t4034;
t3027 = t4766 - t4365;
t3053 = t3179 + t3190;
t4748 = t3287 * t3865;
t3068 = t3193 + t4748;
t4788 = t3123 * t3864;
t3113 = pkin(1) * t4788;
t4787 = t3123 * t3879;
t3114 = pkin(1) * t4787;
t3121 = pkin(1) * t3123;
t3187 = t3193 * t3951;
t3191 = pkin(1) * t3193;
t3283 = t3287 * t4587;
t3638 = pkin(1) * t4605;
t3578 = t3865 * t3638;
t3947 = pkin(6) ^ 2;
t4501 = pkin(1) ^ 2 + t3947;
t4209 = t3946 + t4501;
t4044 = t3860 + t3945 + t4209;
t3580 = t3949 + t4044;
t3609 = -0.2e1 / 0.3e1 * t4890 - t3945 / 0.3e1 - t3946 / 0.3e1 + t3951;
t3640 = pkin(2) * t3670;
t3749 = pkin(6) * t3781;
t3828 = t3949 + t3951;
t3829 = 0.3e1 / 0.2e1 * pkin(7) + 0.3e1 / 0.2e1 * pkin(8);
t3840 = t3881 * t3841;
t3842 = t3882 * t3843;
t3943 = 0.2e1 * pkin(2);
t3948 = pkin(3) * t3949;
t4377 = pkin(6) * t4605;
t4535 = 0.2e1 * t3022;
t4548 = t3913 * t3949;
t3966 = (((t3120 - 0.2e1 * t3188) * pkin(7) + t3187 + pkin(6) * t3118 + t4502 * t3193) * t3781 + t3123 * t4548 + t3193 * t4377) * t3879 + ((0.2e1 * t3179 + 0.2e1 * t3190 + t4535) * t3879 + t3121) * t3750 + (t2986 * t3879 + t3121) * t3782;
t3996 = t3864 * t4401 - t3879 * t4194 + t3430;
t4210 = -t3947 / 0.2e1 - t3949 / 0.2e1 + t3951 / 0.2e1;
t4001 = t4210 + t4212;
t4916 = 3 * t4212;
t4002 = t3949 + t4501 - t4916;
t4043 = t4212 + t3828;
t3836 = t3865 * t3837;
t4751 = t3287 * t4972;
t4320 = t3699 * t4751;
t4129 = t3913 * t4320;
t4051 = t3836 * t4129;
t4052 = t3287 * t3699 * t4278;
t4219 = t3945 / 0.2e1 + t3946 / 0.2e1;
t4062 = t4219 + t4890;
t4068 = -t4748 * t4939 + t2997;
t4089 = t3951 + t4916;
t3636 = -t4605 / 0.2e1;
t4090 = t3864 * t3636;
t4272 = t3699 * t4587;
t4128 = t3287 * t4272;
t4355 = -t3781 / 0.2e1;
t4142 = t3123 * t4355;
t4161 = t3878 * t4417;
t4162 = pkin(1) * t4242;
t4205 = 0.2e1 * t4395;
t4222 = 0.3e1 / 0.2e1 * t3609 * t3913;
t4883 = 0.3e1 / 0.2e1 * t3951 + t4062;
t4223 = t3865 * t4883;
t4260 = t3864 * t4613;
t4315 = t3287 * t4552;
t4318 = t3287 * t4613;
t4319 = t3287 * t4634;
t4334 = t3123 * t3782;
t4346 = t4882 * t3913;
t4372 = pkin(2) * t4788;
t4390 = t3022 * t3781;
t4069 = -t3951 / 0.2e1 + t4219;
t4521 = t3190 + t3118;
t4392 = (pkin(6) * t3188 + pkin(7) * t4521 + t3123 * t4069 + t4544) * t3783;
t4409 = t3949 * t4865;
t4747 = t3287 * t3879;
t4445 = 0.2e1 * t4747;
t4749 = t3287 * t3864;
t4446 = 0.2e1 * t4749;
t4469 = 0.2e1 * t3865;
t4495 = 0.2e1 * t3783;
t4601 = t3863 * t3865;
t4608 = t3837 * t3913;
t4683 = t3402 * t3950;
t4750 = t3287 * t3843;
t4847 = pkin(3) * t3123;
t4848 = pkin(2) * t3913;
t4858 = pkin(2) * t3864;
t4863 = pkin(2) * t3123;
t4864 = pkin(2) * t3068;
t4866 = pkin(1) * t3864;
t4900 = 0.2e1 * t3836;
t4901 = 0.2e1 * t3825;
t4920 = t3750 + t3782 - t3749;
t4944 = 0.2e1 * t3749 - t3782;
t4952 = t3068 * t4552 + t3191;
t2938 = (-(t4089 + t4030) * t3842 * t4260 * t4751 + (-0.4e1 * t4051 + (-0.3e1 * (t3609 + t4030) * t3864 * t4315 - 0.2e1 * t4392 + (-0.2e1 * t2978 + t4334) * pkin(2)) * t3837 + ((t3193 * t3986 + t4153) * t4866 + 0.4e1 * t4129) * t3865 + (t3879 * t4222 + t3638 + t4030 * (t3829 * t3879 + pkin(1))) * t4446 - pkin(2) * t4334 + 0.2e1 * t4392 + t2978 * t3943) * t3843 + (t4052 * t4900 + (0.2e1 * (t4001 + t4920) * t4319 + t3966) * t3837 + (-t4052 + ((t4142 + t4766) * t3785 + t3022 * t4355 + t3187 / 0.2e1 + (t3782 / 0.2e1 + t3750 + t4062) * t3193) * t4634) * t4469 + (0.4e1 * t3678 + t4002 + t4944) * t4319 - t3966) * t3882 + 0.2e1 * t4051 + (0.2e1 * (t4210 + t4920) * t4317 + (t3114 + t2986) * t3783 + pkin(2) * t3053) * t4608 + (((t3187 - t4390) * t3879 + t3027 * pkin(1)) * t3864 - 0.2e1 * t4320 + (t4030 + t4135) * t3193 * t4598) * t4573 + (t4901 + (t3580 + t4944) * t3879) * t3283 - (t2986 * t3913 + t3022 * t3785) * t3783 - t3053 * t4848) * t3287 * t4683 + ((t3841 * t4409 + (t3748 + t4272) * t4495 + t3699 * t4205 + t3578) * t4750 + (t3948 * t3068 * t3840 - (t3287 * t4273 - 0.3e1 * t4864) * t3782 + (t3913 * t4142 + t3193 * t4883 + ((-t3699 * t4858 + t3670) * t3879 + t4223) * t3287) * t4495 + (t3699 * t4090 + t3640) * t4445 + pkin(2) * t3010) * t3882 + t4952 * t3782 + (-t4128 / 0.2e1 + t4952 * pkin(2)) * t4495 + t3010 * t4552 - pkin(2) * t4128 + pkin(1) * (t3287 * t4601 + t4034)) / ((pkin(3) * t4422 + t3554 * t3879) * t3881 + t3996) * t3193 * t4586 + ((t3878 * t4162 + ((t3749 + t4043) * t3881 + (t3698 + t4842) * pkin(2)) * t4613) * t4750 + ((t3650 * t4318 + t4372) * t4842 + ((t3123 * t3828 - t3781 * t4068) * t3864 + pkin(2) * t3651 * t4318) * t3881 - (t3878 * t4068 - t4847) * t4858 - (-t3698 * t4747 * t4882 + t3121 * t4585) * t3913) * t3882 + t3113 * t4842 + (-t4939 * t3287 * t4346 + (pkin(3) * t4161 + t3650 * t4858) * t3123) * t3881 - (-pkin(3) * t4787 + (t2997 * t3879 + t3650 * t4748 + t3191) * t3878) * t4587 + t4161 * t4863) / ((-pkin(2) * t4417 + t3558 * t3864) * t3881 + t3996) * t3123;
t4327 = t3193 * t4571;
t3028 = t4327 - t4847;
t3029 = -t3180 + t4786;
t3282 = t4317 * t3781;
t4832 = t3193 * pkin(2);
t4199 = t3282 - t4832;
t3066 = t4199 * t3843;
t3184 = t3190 / 0.2e1;
t3186 = t3193 * t3949;
t3922 = pkin(6) / 0.2e1;
t3683 = t3781 + t3922;
t3281 = t3683 * t4974;
t4859 = pkin(2) * t3287;
t3284 = 0.2e1 * t4859;
t3285 = t3287 * pkin(1);
t3579 = 0.3e1 * t3949 + t4044;
t4500 = t3951 - t3949;
t3746 = -t3947 + t4500;
t3747 = t3863 + t3951;
t3786 = pkin(1) * t3843;
t3787 = pkin(1) * t3882;
t3830 = -pkin(7) / 0.2e1 - pkin(8) / 0.2e1;
t3942 = 0.3e1 * pkin(2);
t3944 = -0.2e1 * pkin(1);
t4569 = t3879 * t3882;
t4926 = t4766 - t3120;
t4340 = t4926 * t4569;
t3988 = pkin(6) * t4974 - t3193 * t4821 - t4340 + t4832;
t4364 = pkin(2) * t4569;
t4020 = -t3843 * t3913 + t4364;
t4053 = t3287 * t3842 * t4241;
t4146 = pkin(2) * t4240;
t4176 = 0.2e1 * t4240;
t4211 = t3947 / 0.3e1 - t3951 / 0.3e1 + t3949;
t4218 = t3119 + t4521;
t4238 = t3699 * t4569;
t4259 = t3843 * t4605;
t4607 = t3840 * t3949;
t4342 = (-t3193 * t3865 + t3287 * t4166 + t3287) * t4607;
t4356 = -t4863 / 0.2e1;
t4368 = t3193 * t3784;
t4378 = pkin(6) * t4613;
t3921 = pkin(6) / 0.3e1;
t4397 = (t3781 + t3921) * t4855;
t4767 = t3193 * t3879;
t4405 = pkin(2) * t4767;
t4507 = t3749 + t3949;
t4508 = t4605 / 0.3e1 - 0.2e1 / 0.3e1 * t3949;
t4536 = t3113 + t3284;
t4572 = t3878 * t3882;
t4606 = t3843 * t3949;
t4635 = t3698 * t3837;
t4636 = t3698 * t3537;
t4667 = t3570 * t3864;
t4769 = t3193 * t3841;
t4801 = ((pkin(2) * t4317 + t3184 + t3119 / 0.2e1 + t3118 / 0.2e1) * t3878 + t3193 * pkin(3) / 0.2e1) * t3843;
t4834 = pkin(6) * t3913;
t4843 = pkin(3) * t3698;
t4896 = 0.2e1 * t3843;
t4881 = t4896 - 0.2e1;
t4898 = -0.2e1 * t3837;
t4899 = 0.3e1 * t3836;
t4915 = 0.2e1 * pkin(1);
t4933 = -(t3843 - 0.1e1) * pkin(6) * t4832 + t3029 * t4569;
t4934 = -pkin(1) * t3784 - t4983;
t2942 = (t3186 * t3840 + ((t3186 - t3187) * t3837 - t3186) * t3881 + ((t3763 * t4607 + t3881 * t4934) * t3837 - t3840 * t4606) * t3193 + (pkin(6) * t4405 + t3029 * t3882) * t3864 * t4583 + (((t3843 - 0.4e1 / 0.3e1) * t4607 + ((-0.2e1 / 0.3e1 * t3749 + t4508) * t3843 + 0.2e1 / 0.3e1 * t4146 + 0.4e1 / 0.3e1 * t3749 + t4211) * t3881 - 0.2e1 / 0.3e1 * t4636) * t4899 + (0.3e1 * (t3949 - t4606) * t3840 + ((t3636 + t4507) * t4896 - 0.2e1 * t3678 - t3579 - 0.2e1 * t3650 * t3784) * t3881) * t3865 - t4468 * t3768 * t5009) * t3287 + (t4933 * t3837 + (pkin(2) * t4881 + t4176) * pkin(6) * t4748 + (((t3863 * t3193 + t3187) * t3879 + (t3913 + t4020) * t3191) * t3865 + (-t4881 * t3825 + ((t3746 - t4259) * t3837 + t4259 + t3580) * t3879 + (t4569 * t4915 + t4882 * (t3842 - t3882) * t4975) * pkin(2)) * t3287) * t3864 - t4933) * t3878 + (((t4053 - t4801 - 0.2e1 * (-pkin(2) * t4787 / 0.4e1 + t3283) * t4572 + ((pkin(2) * t4446 + t3121) * t3879 + t3184 + t3022) * t3878) * t4468 + t3988) * t3837 + (-0.2e1 * t4053 + 0.2e1 * t4801 + 0.2e1 * ((pkin(1) * t4749 + t4356) * t3879 + t3283) * t4572 - (t3114 + t4218) * t3878) * t3881 + ((-t3066 - (-t3879 * t4926 + t3191) * t3882 + 0.4e1 * t3282 - 0.3e1 * t4832) * t3837 - t4340 + t3066 + (0.4e1 * t3537 * t3836 + (0.4e1 * t3837 - 0.2e1) * pkin(6) * t4598) * t3287 - t4199) * t3841 + (-0.2e1 * ((t3113 / 0.2e1 + t3284) * t3843 + (t3864 * t4356 + t3285 + 0.2e1 * t4315) * t3882 - (t3190 + t4535) * t4598 / 0.2e1 - t3113 - t4859) * t3841 + t4536 * t3843 + t3287 * t4176 - t3022 * t4598 + (-0.4e1 * t3287 * t4835 + (((pkin(1) * t4767 - t4926) * t3882 + 0.3e1 * t4405) * t3881 + t4383 * t4980) * t3864) * t3878 - t4536) * t3865 - t3988) * pkin(3)) / (t3470 + (t3480 * t3881 + t4061) * t3864) * t3287 + ((t4342 - ((t3281 + t3193 * (t3787 + t3943)) * t3865 + (-t3123 * t3784 - t3121 + (-t4218 - t3179) * t3879) * t3864) * t4842 + ((-pkin(1) * t4368 - t4939 * t4365 - t3193 * (t3678 + t3747)) * t3865 + (-pkin(6) * t3027 * t3882 + t3699 * t4405) * t3864) * t3881 + t3028 * t4667) * t3193 - (-t4667 * t4769 + (-t4376 * t4768 + (t4768 * t4939 + t4847) * t3865) * t3881 + (t4368 + (t3027 - t3120) * t3879 + t3191) * t3864 + t3123 * (t3787 + pkin(2)) * t3865) * t4847 + ((-((-t4821 + (-t4552 + pkin(1)) * t3882 + t3942) * t3837 + t3537) * t4842 + (-(t3843 * t4843 - t3749 + t4500 - t4934) * t3837 + (((t3785 - t3913) * t3781 - t4834) * t3882 + 0.3e1 * t4397) * t4600 + t4612 * t4843) * t3881 - t3537 * t4635 - t3864 * (-pkin(1) * t4020 - t3747 * t3879 - t3825) * t4585 + t4636) * t3193 - (((-t3784 + t3786 + t3944 - t4568) * t4600 + t4378 * t4569) * t3841 + (-t3698 * t4249 + ((t3830 * t3843 + t4364 / 0.2e1 - t4939) * t4898 + t4020 - t4939) * t3878) * t3881 - (t3786 - t3650) * t4600 - t3837 * t4238 + t4238) * t4847) * t3287) * t3392;
t3923 = -0.3e1 / 0.2e1 * pkin(2);
t4025 = t4259 + t4507;
t4294 = t3386 * t4586;
t4117 = t3328 * t4294;
t4118 = t3327 * t4294;
t4157 = t3878 * t4405;
t4298 = t3370 * t4683;
t4652 = t3651 * t3882;
t4914 = -0.2e1 * pkin(3);
t2950 = ((t3068 * t4607 - (t3282 - 0.2e1 * t4864) * t4842 + (t3747 * t3068 - t4153) * t3881) * t3193 - ((t3068 * t4571 - t4847) * t3881 + pkin(2) * (t3499 * t4117 + t3503 * t4118 - t3910 * t4298)) * t4847) * t3391 + ((-t4342 + (((t3923 + t4021) * t4898 + 0.2e1 * t4821 + t4652 - pkin(2)) * t4842 + (-(-t3951 + t4025 + 0.2e1 * t4146) * t3837 + pkin(2) * t4652 + t4025 + t4983) * t3881 + pkin(2) * (t3698 - t4635)) * t3287 + ((t3281 + 0.2e1 * t4832) * t4842 + (t3193 * t3747 - t4390) * t3881) * t3865) * t3392 + ((-t4217 * t4383 + ((pkin(3) * t4327 - t4786) * t3882 + t4157 * t4914) * t3881 + pkin(2) * (t3028 * t3882 - t4157) + ((0.2e1 * t3683 * t3706 - 0.3e1 * t4397) * t3881 + t3585 * t4856) * t4748) * t3392 + (-(t3841 * t4552 + t3882 * t4972) * t4847 + ((t3706 - 0.2e1 * t4855) * t3783 + pkin(2) * t3585) * t4768) * t3391) * t3864) * t3287;
t3110 = t3123 * t3663;
t4621 = t4803 * t3878;
t4038 = t4546 + t4621;
t2995 = t4038 * t4980 + t3110;
t3122 = t3123 ^ 2;
t3192 = t3193 ^ 2;
t3031 = t3192 + t3122;
t4626 = t4803 * t3841;
t4335 = t3123 * t4626;
t3109 = -0.4e1 * t4335;
t3111 = t3666 * t3123;
t3170 = t4981 * t3193;
t3171 = t3193 * t4995;
t4889 = m(2) * rSges(2,2);
t3586 = -rSges(2,1) * t4889 + pkin(2) * t4874 + Icges(2,4);
t3172 = t3586 * t3193;
t3652 = -t4874 + t4889;
t3174 = t3193 * t3652;
t3175 = t3663 * t3193;
t3176 = t3666 * t3193;
t4770 = t3193 * t4803;
t3177 = -0.2e1 * t4770;
t4804 = -0.2e1 * t4886;
t3181 = t3193 * t4804;
t4282 = t3618 * t4598;
t3280 = t3287 * t4282;
t3937 = rSges(2,2) ^ 2;
t3939 = rSges(2,1) ^ 2;
t4807 = Icges(2,1) + Icges(3,2);
t3479 = (t3936 - (pkin(2) + t3902) * (-pkin(2) + t3902)) * m(3) + (-t3937 + t3939) * m(2) + Icges(2,2) + Icges(3,3) - t4807;
t4459 = rSges(3,2) * t4878;
t4227 = pkin(2) * t4459;
t3669 = -0.2e1 * t4227;
t4000 = t3669 + t3479;
t3412 = t4000 + t4987;
t3915 = pkin(2) * m(3);
t3708 = m(2) * rSges(2,1) + t3915;
t3577 = t4459 - t3708;
t3617 = t3788 * t4802 - (2 * Icges(3,1)) + (2 * Icges(3,2));
t4879 = m(3) * t3695;
t3637 = 0.2e1 * t4879;
t3664 = 0.2e1 * t3663;
t3665 = 0.2e1 * t3666;
t3745 = 0.4e1 * t4803;
t3794 = t3906 * t4802;
t3796 = -0.2e1 * t4546;
t3905 = pkin(1) * rSges(3,1);
t3839 = m(3) * t3905;
t3797 = 0.2e1 * t3839;
t4042 = -t3663 * t3878 + t3666 * t3881;
t3970 = t3586 + t4042;
t4912 = 0.2e1 * pkin(6);
t3971 = (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + (t3937 + (t4912 + rSges(2,3)) * rSges(2,3) + t4501) * m(2) + (t3938 + (0.2e1 * pkin(7) + rSges(3,3)) * rSges(3,3) + t4209) * m(3) + Icges(1,3) + t4807;
t3975 = -t3743 * t3841 - t5013;
t4503 = t3936 + t3951;
t3987 = -(rSges(2,1) + t3903) * (-rSges(2,1) + t3903) * m(2) - Icges(2,1) + Icges(2,3) + (-t3938 - t3947 + t4503) * m(3) - t4805;
t4213 = 0.2e1 * t3586;
t4547 = m(3) * t4885;
t4427 = 0.2e1 * t4547;
t4428 = -0.2e1 * t4600;
t4824 = t3652 * pkin(1);
t4496 = -0.2e1 * t4824;
t4499 = -0.2e1 * t3655;
t3315 = ((-t4999 + (-t4630 + t3796) * t3881 + 0.2e1 * t4227 - t3479) * t3843 - 0.2e1 * t3970 * t4569 + t3617 * t3841 + (t3745 * t3878 + t3637) * t3881 + t3878 * t4499 + t3987) * t3837 + (t3879 * t3975 - t4965) * t4428 + t3412 * t3843 + ((t3665 * t3879 + t3797) * t3881 + (-t3664 * t3878 + t4213) * t3879 + t3577 * t3944) * t3882 - t4999 + (-t4630 + t3794) * t3881 + t3879 * t4496 + t3878 * t4427 + t3971;
t4137 = Icges(3,1) + Icges(2,3) + (t3902 ^ 2 + t4503) * m(3) + (t3937 + t3939) * m(2);
t3422 = t3669 + t4137 + t4987;
t4432 = 0.2e1 * t4626;
t4888 = m(3) * rSges(3,1);
t3358 = (t4965 + (t4432 + t5013) * t3879) * t3864 + ((-t3652 * t3879 + (t3881 * t4888 - t3577) * t3882) * pkin(1) + t3422) * t3865;
t3593 = t3663 * t3879;
t3643 = (t3936 + t3938) * m(3) + Icges(3,3);
t3694 = t3906 + t4886;
t3697 = t3907 - t4885;
t3904 = pkin(1) * rSges(3,2);
t4570 = t3879 * t3666;
t4816 = rSges(3,1) * t3878;
t4922 = rSges(3,2) * t3881 + t4816;
t3382 = ((-t4570 - m(3) * (t3694 * t3882 + t3905)) * t3881 + (t3593 + (t3697 * t3882 + t3904) * m(3)) * t3878 - t3882 * t3643) * t3864 - (-t3878 * Icges(3,5) - Icges(3,6) * t3881 + t4922 * m(3) * (t3902 + t3785)) * t3865;
t3667 = -0.2e1 * m(3) * t3938 - Icges(3,3) - t4805;
t4491 = m(3) * t4866;
t4198 = t3122 * t4491;
t4478 = t3915 / 0.2e1;
t4220 = rSges(3,2) * t4478;
t4221 = rSges(3,1) * t4478;
t4455 = rSges(3,2) * t4832;
t4231 = m(3) * t4455;
t4426 = -0.2e1 * t3839;
t4789 = t3123 * t3841;
t4450 = 0.2e1 * t4789;
t4887 = m(3) * rSges(3,2);
t4463 = t3123 * t4887;
t4467 = m(3) * t4816;
t4470 = 0.2e1 * t3864;
t4524 = t3123 * t3655 - t3176;
t4534 = t3122 - t3192;
t4540 = (t3111 - 0.2e1 * t4231) * t3878 + t3193 * t3479;
t4622 = t4803 * t3864;
t4645 = t3663 * t3864;
t4790 = t3123 * t4803;
t4902 = -0.2e1 * t4803;
t4911 = -0.2e1 * t3123;
t4964 = -t2938 * t3382 - t2942 * t3358 - t2950 * t3315 + 0.4e1 * t3287 * (-t4335 + (-t3176 + (t4995 / 0.2e1 + t4220) * t3123) * t3881 + (t3123 * t4221 + t3175) * t3878 - t3172 + t4790 / 0.2e1) * t4264 + ((t2995 * t3881 + t3193 * t4999 + t4540) * t3837 * t4445 + ((-t3123 * t4802 * t4922 - t3174) * t3191 + ((t3111 - t3171) * t3881 - t3110 * t3878 + (-t3655 * t3881 - t3878 * t4879 + t4432 + t4982) * t3193) * t3287 * t4470) * t3865 + 0.2e1 * (t3193 * t4622 - t3618 * t4747) * t4769 + ((-t3192 * t4995 - m(3) * (-t3122 * t3697 + t3192 * t3696)) * t3864 + (-pkin(1) * t4463 - t2995 * t3879) * t4979) * t3881 - 0.2e1 * t4540 * t4747 + ((t3122 * t3694 - t3192 * t3695) * t4878 + t3192 * t4982) * t3864 - 0.2e1 * (t3123 * t4467 + t3174) * t3285) * t3882 + (t3109 + (-t4911 * t4995 + t4524) * t3881 + (t3123 * t4879 + t3175) * t3878 - t3172 + 0.2e1 * t4790) * t3287 * t4898 + (0.4e1 * (-t3280 + t4770) * t4789 + ((-0.2e1 * (t3175 + (0.4e1 * t4621 + t4879) * t3123) * t4749 - t3031 * t3839) * t3879 + 0.2e1 * (-t3171 - t4231 - t3111 / 0.2e1) * t3123) * t3881 + ((t3123 * t3618 + t3878 * t4524 + t3170) * t4446 - (-t3031 * t4459 + t3192 * t3708) * pkin(1)) * t3879 + t3123 * ((m(3) * t3181 + t3110) * t3878 + t3177)) * t3865 + (-t3193 * t4282 + t3287 * t4902) * t4450 + ((t4534 * t4645 + (t3287 * t4426 + (t3794 - 0.4e1 * t4621) * t4788) * t3193) * t3879 + rSges(3,2) * t4198 - 0.2e1 * (t3176 + (-t4547 - t4995) * t3123) * t3287) * t3881 + (((t3123 * t3193 * t4427 + t3666 * t4534) * t3878 + t3193 * (-t3123 * t3667 + t3170)) * t3864 + t3577 * t3285 * t4980) * t3879 + t4198 * t4816 + ((-pkin(6) * t4463 + t3175) * t3878 - t3172 + t4790) * t4979;
t4762 = t3269 * t3913;
t3230 = pkin(6) * t4762;
t3157 = pkin(6) * t3166;
t3245 = t3269 * pkin(8);
t4514 = t3269 * pkin(7) + t3245;
t4781 = t3166 * t3949;
t4543 = (-t3157 / 0.2e1 + t4514) * t3798 - t4781 / 0.2e1;
t2979 = t3230 + t4543;
t3007 = -t3157 + t4514;
t4363 = t3166 * t3798;
t4152 = t3913 * t4363;
t4033 = t3269 * t3639 - t4152;
t3011 = t3300 * t4658 + t4033;
t3035 = t4762 - t4363;
t3063 = t3227 + t3257;
t4734 = t3300 * t3865;
t3080 = t3269 + t4734;
t3077 = pkin(2) * t3080;
t4783 = t3166 * t3864;
t3136 = pkin(1) * t4783;
t4782 = t3166 * t3885;
t3139 = pkin(1) * t4782;
t3248 = t3269 * t3951;
t3263 = pkin(1) * t3269;
t3684 = pkin(1) * t4551;
t3754 = pkin(6) * t3798;
t3846 = t3893 * t3847;
t3848 = t3894 * t3849;
t4530 = 0.2e1 * t3023;
t4927 = t4530 + 0.2e1 * t3227;
t3965 = (((t3157 - 0.2e1 * t3245) * pkin(7) + t3248 + pkin(6) * t3151 + t4502 * t3269) * t3798 + t3166 * t4548 + t3269 * t4377) * t3885 + ((0.2e1 * t3257 + t4927) * t3885 + t3160) * t3757 + t5004 * t3801;
t3995 = t3864 * t4400 - t3885 * t4193 + t3431;
t4047 = t3300 * t3710 * t4276;
t4738 = t3300 * t4971;
t4313 = t3710 * t4738;
t4126 = t3913 * t4313;
t4050 = t3836 * t4126;
t4067 = t3679 * t4734 + t3007;
t4254 = t3300 * t4587;
t4125 = t3710 * t4254;
t4354 = -t3798 / 0.2e1;
t4141 = t3166 * t4354;
t4160 = t3884 * t4415;
t4310 = t3300 * t4595;
t4185 = 0.2e1 * t4310;
t4311 = t3300 * t4613;
t4312 = t3300 * t4633;
t4326 = t3269 * t4595;
t4332 = t3166 * t3801;
t4374 = (pkin(6) * t3245 + pkin(7) * t4511 + t3166 * t4069 + t4543) * t3802;
t4389 = t3023 * t3798;
t4408 = pkin(2) * t4783;
t4733 = t3300 * t3885;
t4443 = 0.2e1 * t4733;
t4735 = t3300 * t3864;
t4444 = 0.2e1 * t4735;
t4494 = 0.2e1 * t3802;
t4736 = t3300 * t3849;
t4846 = pkin(3) * t3166;
t4862 = pkin(2) * t3166;
t4919 = t3757 + t3801 - t3754;
t4943 = 0.2e1 * t3754 - t3801;
t4951 = t3080 * t4551 + t3263;
t2939 = (-(t4089 + t4029) * t3848 * t4260 * t4738 + (-0.4e1 * t4050 + (-0.3e1 * (t3609 + t4029) * t3885 * t4254 - 0.2e1 * t4374 + (-0.2e1 * t2979 + t4332) * pkin(2)) * t3837 + ((t3269 * t3985 + t4152) * t4866 + 0.4e1 * t4126) * t3865 + (t3885 * t4222 + t3638 + t4029 * (t3829 * t3885 + pkin(1))) * t4444 - pkin(2) * t4332 + 0.2e1 * t4374 + t2979 * t3943) * t3849 + (t4047 * t4900 + (0.2e1 * (t4001 + t4919) * t4312 + t3965) * t3837 + (-t4047 + ((t4141 + t4762) * t3811 + t3023 * t4354 + t3248 / 0.2e1 + (t3801 / 0.2e1 + t3757 + t4062) * t3269) * t4633) * t4469 + (0.4e1 * t3684 + t4002 + t4943) * t4312 - t3965) * t3894 + 0.2e1 * t4050 + ((t4210 + t4919) * t4185 + (t3139 - t4930) * t3802 + pkin(2) * t3063) * t4608 + (((t3248 - t4389) * t3885 + pkin(1) * t3035) * t3864 - 0.2e1 * t4313 + (t4029 + t4135) * t4326) * t4573 + (t4901 + (t3580 + t4943) * t3885) * t4254 - (t3023 * t3811 - t3913 * t4930) * t3802 - t3063 * t4848) * t3300 * t4680 + ((t3847 * t4409 + (t3710 * t4587 + t3748) * t4494 + t3710 * t4205 + t3578) * t4736 + (t3948 * t3080 * t3846 + (t3913 * t4141 + t3269 * t4883 + ((-t3710 * t4858 + t3670) * t3885 + t4223) * t3300) * t4494 + (t3710 * t4090 + t3640) * t4443 + pkin(2) * t3011) * t3894 + (-t4125 / 0.2e1 + t4951 * pkin(2)) * t4494 + t3011 * t4551 - pkin(2) * t4125 + (t3300 * t4601 + t4033) * pkin(1) + ((-t3300 * t4270 + 0.3e1 * t3077) * t3894 + t4951) * t3801) / ((pkin(3) * t4421 + t3554 * t3885) * t3893 + t3995) * t3269 * t4586 + ((t3884 * t4162 + ((t3754 + t4043) * t3893 + (t3709 + t4841) * pkin(2)) * t4613) * t4736 + ((t3657 * t4311 + t4408) * t4841 + ((t3166 * t3828 - t3798 * t4067) * t3864 + pkin(2) * t3660 * t4311) * t3893 - (t3884 * t4067 - t4846) * t4858 - (-t3709 * t4733 * t4882 + t3160 * t4582) * t3913) * t3894 + t3136 * t4841 + (t3679 * t3300 * t4346 + (pkin(3) * t4160 + t3657 * t4858) * t3166) * t3893 - (-pkin(3) * t4782 + (t3007 * t3885 + t3657 * t4734 + t3263) * t3884) * t4587 + t4160 * t4862) / ((-pkin(2) * t4415 + t3559 * t3864) * t3893 + t3995) * t3166;
t4566 = t3884 * t3913;
t3224 = t3269 * t4566;
t3038 = t3224 - t4846;
t3041 = -t3230 + t4781;
t3044 = t4762 - t3157;
t3242 = pkin(2) * t3257;
t3247 = t3269 * t3949;
t3260 = pkin(2) * t3269;
t3688 = t3798 + t3922;
t4186 = -0.2e1 * t4310;
t3291 = t3688 * t4186;
t3814 = pkin(1) * t3849;
t3815 = pkin(1) * t3894;
t4072 = 0.2e1 * t3848 * t4254;
t3982 = pkin(3) * (pkin(6) * t4186 + t3260) + t4072 * t4854;
t4009 = -pkin(1) * t3803 - t3684 - t3747;
t4564 = t3885 * t3894;
t4359 = pkin(2) * t4564;
t4018 = t3849 * t3913 - t4359;
t4145 = pkin(2) * t4237;
t4149 = pkin(2) * t4254;
t4173 = t3863 * t3269 + t3248;
t4189 = t3300 * t4470;
t4204 = -0.2e1 * t4375;
t4208 = pkin(2) * t4444;
t4258 = t3885 * t4605;
t4739 = t3300 * t3709;
t4314 = t3542 * t4739;
t4763 = t3269 * t3885;
t4325 = t3884 * t4763;
t4604 = t3846 * t3949;
t4345 = ((0.2e1 * t3337 + 0.2e1 * t3338 + 0.2e1 * t3375 - t4736) * t3837 + t3269 * t3865 + t4736 - t3300) * t4604;
t4371 = t3166 * t3803;
t4386 = t3044 * t4838;
t4394 = (t3798 + t3921) * t4853;
t4404 = t3269 * t4858;
t4418 = pkin(1) * t4587;
t4425 = pkin(1) * t4762;
t4442 = t3300 * t4975;
t4828 = t3300 * pkin(2);
t4486 = pkin(6) * t4828;
t4831 = t3269 * pkin(3);
t4489 = pkin(2) * t4831;
t4498 = -0.2e1 * t3825;
t4506 = t3754 + t3949;
t4533 = t3136 + 0.2e1 * t4828;
t4737 = t3300 * t3837;
t4796 = (t3798 * t4310 - t3260) * t3849;
t4800 = ((pkin(2) * t4185 - t4216) * t3884 + t4831) * t3849;
t4897 = 0.2e1 * t3837;
t4913 = -0.4e1 * pkin(6);
t2943 = (t3300 * ((-0.4e1 / 0.3e1 + t3849) * t4604 + ((-0.2e1 / 0.3e1 * t3754 + t4508) * t3849 + 0.2e1 / 0.3e1 * t4145 + 0.4e1 / 0.3e1 * t3754 + t4211) * t3893 + (0.4e1 / 0.3e1 * t4841 - 0.2e1 / 0.3e1 * t3709) * t3542) * t4899 + (t3269 * t3764 * t4604 - (t4796 + (-t3044 * t3885 + t3263) * t3894 + 0.3e1 * t3260 - 0.4e1 * t3710 * t4310) * t4841 + ((-pkin(1) * t3260 + t3300 * t4204) * t3894 + (pkin(6) * t4208 - t4425) * t3885 + t3247 + (-t4800 + (t4072 + (pkin(2) * t4782 - 0.4e1 * t4254) * t3894 + 0.2e1 * (t3160 + t4208) * t3885 + t3257 + t4530) * t3884) * pkin(3) - t4173) * t3893 + ((-t4258 * t4735 - t3242) * t3884 - t4489) * t3849 + ((t3041 * t3885 - 0.2e1 * t4149) * t3884 - t4386) * t3894 + (t3746 * t4310 + t3242) * t3884 + t3982) * t3837 + ((-0.3e1 * t3849 + 0.3e1) * t3300 * t4604 - (t3764 * t3136 + (-t4371 + (-t3257 - t4927) * t3885) * t3864 + ((t4915 + 0.4e1 * t4551) * t3894 + (0.4e1 * t3849 - 0.2e1) * pkin(2)) * t3300) * t4841 + (0.2e1 * (t3636 + t4506) * t4736 + (((pkin(1) * t4763 - t3044) * t3798 + t3041) * t3864 - t3657 * pkin(2) * t4978) * t3894 + (t3300 * t4913 + t3942 * t4326) * t3798 + (pkin(6) * t4404 + t3300 * t4498) * t3885 - t3300 * t3579) * t3893 + ((-t3269 * t4418 + 0.2e1 * t4486) * t3884 + pkin(3) * t4533) * t3849 + ((pkin(1) * t4404 + pkin(6) * t4442) * t3884 + pkin(3) * t4442) * t4564 + (-0.2e1 * t4486 + (t3885 * t4173 + t4425) * t3864) * t3884 - pkin(3) * (t3023 * t4595 + t4533)) * t3865 + (-t3849 + 0.1e1) * t3247 * t3846 - (-t4796 - t3260 + (t3044 * t3894 + (t4912 + t3798) * t4735) * t3885) * t4841 + (-t3247 + (t4800 + (-t3166 * t4359 - t3139 + (t3679 * t3894 - t3913 * t3848) * t4189 + t4216) * t3884) * pkin(3)) * t3893 + ((t3242 + (t4258 + t4498) * t4735) * t3884 + t4489) * t3849 + (((pkin(1) * t4208 - t3041) * t3885 + 0.2e1 * t4149) * t3884 + t4386) * t3894 + (-t3242 + (t3580 * t3885 + t4901) * t4735) * t3884 - t3982) / (t3471 + (t3489 * t3893 + t4060) * t3864) * t3300 + ((-t4345 - ((-t4820 + (-t4551 + pkin(1)) * t3894 + t3942) * t4737 + (t3291 + t3269 * (t3815 + t3943)) * t3865 + (-t4371 - t5004) * t3864 + t3300 * t3542) * t4841 + (-(pkin(3) * t3709 * t3849 - t4009 - t4506) * t4737 + ((((t3811 - t3913) * t3798 - t4834) * t3894 + 0.3e1 * t4394) * t4735 + t3679 * t4363 + t4009 * t3269) * t3865 + (pkin(2) * t3710 * t4763 - pkin(6) * t3035 * t3894) * t3864 + pkin(3) * t4611 * t4739) * t3893 - t3837 * t4314 - (pkin(1) * t4018 - t3747 * t3885 - t3825) * t4582 * t4735 + t3574 * t3038 * t3864 + t4314) * t3269 + (((pkin(1) * t4325 + t3038) * t3893 - t3166 * (t3815 + pkin(2))) * t3865 + ((t4363 - t3044) * t3885 - t3263 + (t3574 * t3847 + (pkin(6) * t4567 - pkin(2)) * t3894) * t3269) * t3864 + ((-(-t3803 + t3814 + t3944 - t4563) * t4600 - t4378 * t4564) * t3847 + (t3709 * t4245 + ((t3830 * t3849 + t4359 / 0.2e1 + t3679) * t4897 + t4018 - t3679) * t3884) * t3893 + (t3814 - t3657) * t4600 + t4882 * t3710 * t4564) * t3300) * t4846) * t3399;
t4024 = t3849 * t4605 + t4506;
t4156 = pkin(2) * t4325;
t4650 = t3660 * t3894;
t4921 = pkin(2) * t4882;
t2951 = ((t3080 * t4604 + 0.2e1 * t3077 * t4841 + (t3080 * t3747 - t4152) * t3893) * t3269 - ((t3080 * t4566 - t4846) * t3893 - t4862) * t4846) * t3396 + ((t4345 + (((t3923 + t4019) * t4898 + 0.2e1 * t4820 + t4650 - pkin(2)) * t4841 + (-(-t3951 + t4024 + 0.2e1 * t4145) * t3837 + pkin(2) * t4650 + t3684 + t3863 + t4024) * t3893 - t3709 * t4921) * t3300 + ((t3291 + 0.2e1 * t3260) * t4841 + (t3269 * t3747 - t4389) * t3893) * t3865) * t3399 + ((-(t3227 + t3023) * t4362 + ((pkin(3) * t3224 - t4781) * t3894 + t4156 * t4914) * t3893 + pkin(2) * (t3038 * t3894 - t4156) + ((0.2e1 * t3688 * t3737 - 0.3e1 * t4394) * t3893 + t3590 * t4854) * t4734) * t3399 + (-(t3847 * t4551 + t3894 * t4971) * t4846 + (pkin(2) * t3590 + ((t3737 - 0.2e1 * t4853) * t3893 - t4362) * pkin(3)) * t4764) * t3396) * t3864) * t3300;
t3127 = t3166 * t3663;
t4620 = t4803 * t3884;
t4037 = t4546 + t4620;
t4476 = 0.2e1 * t3269;
t3001 = t4037 * t4476 + t3127;
t3163 = t3166 ^ 2;
t3266 = t3269 ^ 2;
t3047 = t3266 + t3163;
t4625 = t4803 * t3847;
t4333 = t3166 * t4625;
t3124 = -0.4e1 * t4333;
t3130 = t3666 * t3166;
t3197 = t4981 * t3269;
t3200 = t3269 * t4994;
t3203 = t3586 * t3269;
t3209 = t3269 * t3652;
t3212 = t3663 * t3269;
t3215 = t3666 * t3269;
t4765 = t3269 * t4803;
t3218 = -0.2e1 * t4765;
t3233 = t3269 * t4804;
t4281 = t3618 * t4595;
t3288 = t3300 * t4281;
t4458 = rSges(3,2) * t4877;
t4226 = pkin(2) * t4458;
t3673 = -0.2e1 * t4226;
t3999 = t3673 + t3479;
t3413 = t3999 + t4986;
t4041 = -t3663 * t3884 + t3666 * t3893;
t3969 = t3586 + t4041;
t3974 = -t3743 * t3847 - t5012;
t3581 = t4458 - t3708;
t4870 = pkin(1) * t3581;
t3316 = ((-t4998 + (-t4629 + t3796) * t3893 + 0.2e1 * t4226 - t3479) * t3849 - 0.2e1 * t3969 * t4564 + t3617 * t3847 + (t3745 * t3884 + t3637) * t3893 + t3884 * t4499 + t3987) * t3837 + (t3885 * t3974 - t4966) * t4428 + t3413 * t3849 + ((t3665 * t3885 + t3797) * t3893 + (-t3664 * t3884 + t4213) * t3885 - 0.2e1 * t4870) * t3894 - t4998 + (-t4629 + t3794) * t3893 + t3885 * t4496 + t3884 * t4427 + t3971;
t3423 = t3673 + t4137 + t4986;
t4431 = 0.2e1 * t4625;
t3359 = (t4966 + (t4431 + t5012) * t3885) * t3864 + ((-t3652 * t3885 + (t3893 * t4888 - t3581) * t3894) * pkin(1) + t3423) * t3865;
t3596 = t3663 * t3885;
t4565 = t3885 * t3666;
t4815 = rSges(3,1) * t3884;
t4923 = rSges(3,2) * t3893 + t4815;
t3383 = ((-t4565 - m(3) * (t3694 * t3894 + t3905)) * t3893 + (t3596 + (t3697 * t3894 + t3904) * m(3)) * t3884 - t3894 * t3643) * t3864 - (-t3884 * Icges(3,5) - Icges(3,6) * t3893 + t4923 * m(3) * (t3902 + t3811)) * t3865;
t4197 = t3163 * t4491;
t4454 = rSges(3,2) * t3260;
t4230 = m(3) * t4454;
t4784 = t3166 * t3847;
t4449 = 0.2e1 * t4784;
t4462 = t3166 * t4887;
t4466 = m(3) * t4815;
t4520 = t3166 * t3655 - t3215;
t4527 = t3163 - t3266;
t4539 = (t3130 - 0.2e1 * t4230) * t3884 + t3269 * t3479;
t4785 = t3166 * t4803;
t4873 = pkin(1) * t3300;
t4910 = -0.2e1 * t3166;
t4963 = -t2939 * t3383 - t2943 * t3359 - t2951 * t3316 + 0.4e1 * t3300 * (-t4333 + (-t3215 + (t4994 / 0.2e1 + t4220) * t3166) * t3893 + (t3166 * t4221 + t3212) * t3884 - t3203 + t4785 / 0.2e1) * t4263 + ((t3001 * t3893 + t3269 * t4998 + t4539) * t3837 * t4443 + ((-t3166 * t4802 * t4923 - t3209) * t3263 + ((t3130 - t3200) * t3893 - t3127 * t3884 + (-t3655 * t3893 - t3884 * t4879 + t4431 + t4982) * t3269) * t4189) * t3865 + t3269 * (t3269 * t4622 - t3618 * t4733) * t4895 + ((-t3266 * t4994 - m(3) * (-t3163 * t3697 + t3266 * t3696)) * t3864 + (-pkin(1) * t4462 - t3001 * t3885) * t4978) * t3893 - 0.2e1 * t4539 * t4733 + ((t3163 * t3694 - t3266 * t3695) * t4877 + t3266 * t4982) * t3864 - 0.2e1 * (t3166 * t4466 + t3209) * t4873) * t3894 - 0.2e1 * (t3124 + (-t4910 * t4994 + t4520) * t3893 + (t3166 * t4879 + t3212) * t3884 - t3203 + 0.2e1 * t4785) * t4737 + (0.4e1 * (-t3288 + t4765) * t4784 + ((-0.2e1 * (t3212 + (0.4e1 * t4620 + t4879) * t3166) * t4735 - t3047 * t3839) * t3885 + 0.2e1 * (-t3200 - t4230 - t3130 / 0.2e1) * t3166) * t3893 + ((t3166 * t3618 + t3884 * t4520 + t3197) * t4444 - (-t3047 * t4458 + t3266 * t3708) * pkin(1)) * t3885 + t3166 * ((m(3) * t3233 + t3127) * t3884 + t3218)) * t3865 + (-t3269 * t4281 + t3300 * t4902) * t4449 + ((t4527 * t4645 + (t3300 * t4426 + (t3794 - 0.4e1 * t4620) * t4783) * t3269) * t3885 + rSges(3,2) * t4197 - 0.2e1 * (t3215 + (-t4547 - t4994) * t3166) * t3300) * t3893 + (((t3166 * t3269 * t4427 + t3666 * t4527) * t3884 + t3269 * (-t3166 * t3667 + t3197)) * t3864 + t3269 * t4870 * t4978) * t3885 + t4197 * t4815 + ((-pkin(6) * t4462 + t3212) * t3884 - t3203 + t4785) * t4978;
t4758 = t3270 * t3913;
t3231 = pkin(6) * t4758;
t3158 = pkin(6) * t3167;
t3255 = pkin(8) * t3270;
t4512 = pkin(7) * t3270 + t3255;
t4776 = t3167 * t3949;
t4541 = (-t3158 / 0.2e1 + t4512) * t3799 - t4776 / 0.2e1;
t2981 = t3231 + t4541;
t3008 = -t3158 + t4512;
t4361 = t3167 * t3799;
t4151 = t3913 * t4361;
t4032 = t3270 * t3639 - t4151;
t3012 = t3301 * t4658 + t4032;
t3036 = t4758 - t4361;
t3064 = t3228 + t3258;
t4726 = t3301 * t3865;
t3081 = t3270 + t4726;
t3078 = pkin(2) * t3081;
t4778 = t3167 * t3864;
t3137 = pkin(1) * t4778;
t4777 = t3167 * t3888;
t3140 = pkin(1) * t4777;
t3250 = t3270 * t3951;
t3264 = pkin(1) * t3270;
t3685 = pkin(1) * t4550;
t3755 = pkin(6) * t3799;
t3850 = t3896 * t3851;
t3852 = t3897 * t3853;
t4529 = 0.2e1 * t3024;
t4928 = t4529 + 0.2e1 * t3228;
t3964 = (((t3158 - 0.2e1 * t3255) * pkin(7) + t3250 + pkin(6) * t3152 + t4502 * t3270) * t3799 + t3167 * t4548 + t3270 * t4377) * t3888 + ((0.2e1 * t3258 + t4928) * t3888 + t3161) * t3758 + t5003 * t3804;
t3994 = t3864 * t4399 - t3888 * t4192 + t3432;
t4046 = t3301 * t3713 * t4275;
t4730 = t3301 * t4970;
t4308 = t3713 * t4730;
t4123 = t3913 * t4308;
t4049 = t3836 * t4123;
t4066 = t3680 * t4726 + t3008;
t4253 = t3301 * t4587;
t4122 = t3713 * t4253;
t4353 = -t3799 / 0.2e1;
t4140 = t3167 * t4353;
t4159 = t3887 * t4414;
t4305 = t3301 * t4593;
t4183 = 0.2e1 * t4305;
t4306 = t3301 * t4613;
t4307 = t3301 * t4632;
t4324 = t3270 * t4593;
t4330 = t3167 * t3804;
t4388 = t3024 * t3799;
t4391 = (pkin(6) * t3255 + pkin(7) * t4510 + t3167 * t4069 + t4541) * t3805;
t4407 = pkin(2) * t4778;
t4725 = t3301 * t3888;
t4440 = 0.2e1 * t4725;
t4727 = t3301 * t3864;
t4441 = 0.2e1 * t4727;
t4493 = 0.2e1 * t3805;
t4728 = t3301 * t3853;
t4845 = pkin(3) * t3167;
t4861 = pkin(2) * t3167;
t4918 = t3758 + t3804 - t3755;
t4942 = 0.2e1 * t3755 - t3804;
t4950 = t3081 * t4550 + t3264;
t2940 = (-(t4089 + t4028) * t3852 * t4260 * t4730 + (-0.4e1 * t4049 + (-0.3e1 * (t3609 + t4028) * t3888 * t4253 - 0.2e1 * t4391 + (-0.2e1 * t2981 + t4330) * pkin(2)) * t3837 + ((t3270 * t3984 + t4151) * t4866 + 0.4e1 * t4123) * t3865 + (t3888 * t4222 + t3638 + t4028 * (t3829 * t3888 + pkin(1))) * t4441 - pkin(2) * t4330 + 0.2e1 * t4391 + t2981 * t3943) * t3853 + (t4046 * t4900 + (0.2e1 * (t4001 + t4918) * t4307 + t3964) * t3837 + (-t4046 + ((t4140 + t4758) * t3812 + t3024 * t4353 + t3250 / 0.2e1 + (t3804 / 0.2e1 + t3758 + t4062) * t3270) * t4632) * t4469 + (0.4e1 * t3685 + t4002 + t4942) * t4307 - t3964) * t3897 + 0.2e1 * t4049 + ((t4210 + t4918) * t4183 + (t3140 - t4931) * t3805 + pkin(2) * t3064) * t4608 + (((t3250 - t4388) * t3888 + pkin(1) * t3036) * t3864 - 0.2e1 * t4308 + (t4028 + t4135) * t4324) * t4573 + (t4901 + (t3580 + t4942) * t3888) * t4253 - (t3024 * t3812 - t3913 * t4931) * t3805 - t3064 * t4848) * t3301 * t4679 + ((t3851 * t4409 + (t3713 * t4587 + t3748) * t4493 + t3713 * t4205 + t3578) * t4728 + (t3948 * t3081 * t3850 + (t3913 * t4140 + t3270 * t4883 + ((-t3713 * t4858 + t3670) * t3888 + t4223) * t3301) * t4493 + (t3713 * t4090 + t3640) * t4440 + pkin(2) * t3012) * t3897 + (-t4122 / 0.2e1 + t4950 * pkin(2)) * t4493 + t3012 * t4550 - pkin(2) * t4122 + (t3301 * t4601 + t4032) * pkin(1) + ((-t3301 * t4269 + 0.3e1 * t3078) * t3897 + t4950) * t3804) / ((pkin(3) * t4420 + t3554 * t3888) * t3896 + t3994) * t3270 * t4586 + ((t3887 * t4162 + ((t3755 + t4043) * t3896 + (t3712 + t4840) * pkin(2)) * t4613) * t4728 + ((t3658 * t4306 + t4407) * t4840 + ((t3167 * t3828 - t3799 * t4066) * t3864 + pkin(2) * t3661 * t4306) * t3896 - (t3887 * t4066 - t4845) * t4858 - (-t3712 * t4725 * t4882 + t3161 * t4580) * t3913) * t3897 + t3137 * t4840 + (t3680 * t3301 * t4346 + (pkin(3) * t4159 + t3658 * t4858) * t3167) * t3896 - (-pkin(3) * t4777 + (t3008 * t3888 + t3658 * t4726 + t3264) * t3887) * t4587 + t4159 * t4861) / ((-pkin(2) * t4414 + t3560 * t3864) * t3896 + t3994) * t3167;
t4561 = t3887 * t3913;
t3225 = t3270 * t4561;
t3039 = t3225 - t4845;
t3042 = -t3231 + t4776;
t3045 = t4758 - t3158;
t3243 = pkin(2) * t3258;
t3249 = t3270 * t3949;
t3261 = pkin(2) * t3270;
t3690 = t3799 + t3922;
t4184 = -0.2e1 * t4305;
t3292 = t3690 * t4184;
t3816 = pkin(1) * t3853;
t3817 = pkin(1) * t3897;
t4071 = 0.2e1 * t3852 * t4253;
t3981 = pkin(3) * (pkin(6) * t4184 + t3261) + t4071 * t4852;
t4008 = -pkin(1) * t3806 - t3685 - t3747;
t4559 = t3888 * t3897;
t4358 = pkin(2) * t4559;
t4016 = t3853 * t3913 - t4358;
t4144 = pkin(2) * t4235;
t4148 = pkin(2) * t4253;
t4172 = t3863 * t3270 + t3250;
t4188 = t3301 * t4470;
t4207 = pkin(2) * t4441;
t4257 = t3888 * t4605;
t4731 = t3301 * t3712;
t4309 = t3543 * t4731;
t4759 = t3270 * t3888;
t4323 = t3887 * t4759;
t4603 = t3850 * t3949;
t4344 = ((0.2e1 * t3339 + 0.2e1 * t3340 + 0.2e1 * t3376 - t4728) * t3837 + t3270 * t3865 + t4728 - t3301) * t4603;
t4370 = t3167 * t3806;
t4385 = t3045 * t4837;
t4396 = (t3799 + t3921) * t4851;
t4403 = t3270 * t4858;
t4424 = pkin(1) * t4758;
t4439 = t3301 * t4975;
t4827 = t3301 * pkin(2);
t4485 = pkin(6) * t4827;
t4830 = t3270 * pkin(3);
t4488 = pkin(2) * t4830;
t4505 = t3755 + t3949;
t4532 = t3137 + 0.2e1 * t4827;
t4729 = t3301 * t3837;
t4795 = (t3799 * t4305 - t3261) * t3853;
t4799 = ((pkin(2) * t4183 - t4215) * t3887 + t4830) * t3853;
t2944 = (t3301 * ((-0.4e1 / 0.3e1 + t3853) * t4603 + ((-0.2e1 / 0.3e1 * t3755 + t4508) * t3853 + 0.2e1 / 0.3e1 * t4144 + 0.4e1 / 0.3e1 * t3755 + t4211) * t3896 + (0.4e1 / 0.3e1 * t4840 - 0.2e1 / 0.3e1 * t3712) * t3543) * t4899 + (t3270 * t3765 * t4603 - (t4795 + (-t3045 * t3888 + t3264) * t3897 + 0.3e1 * t3261 - 0.4e1 * t3713 * t4305) * t4840 + ((-pkin(1) * t3261 + t3301 * t4204) * t3897 + (pkin(6) * t4207 - t4424) * t3888 + t3249 + (-t4799 + (t4071 + (pkin(2) * t4777 - 0.4e1 * t4253) * t3897 + 0.2e1 * (t3161 + t4207) * t3888 + t3258 + t4529) * t3887) * pkin(3) - t4172) * t3896 + ((-t4257 * t4727 - t3243) * t3887 - t4488) * t3853 + ((t3042 * t3888 - 0.2e1 * t4148) * t3887 - t4385) * t3897 + (t3746 * t4305 + t3243) * t3887 + t3981) * t3837 + ((-0.3e1 * t3853 + 0.3e1) * t3301 * t4603 - (t3765 * t3137 + (-t4370 + (-t3258 - t4928) * t3888) * t3864 + ((t4915 + 0.4e1 * t4550) * t3897 + (0.4e1 * t3853 - 0.2e1) * pkin(2)) * t3301) * t4840 + (0.2e1 * (t3636 + t4505) * t4728 + (((pkin(1) * t4759 - t3045) * t3799 + t3042) * t3864 - t3658 * pkin(2) * t4977) * t3897 + (t3301 * t4913 + t3942 * t4324) * t3799 + (pkin(6) * t4403 + t3301 * t4498) * t3888 - t3301 * t3579) * t3896 + ((-t3270 * t4418 + 0.2e1 * t4485) * t3887 + pkin(3) * t4532) * t3853 + ((pkin(1) * t4403 + pkin(6) * t4439) * t3887 + pkin(3) * t4439) * t4559 + (-0.2e1 * t4485 + (t3888 * t4172 + t4424) * t3864) * t3887 - pkin(3) * (t3024 * t4593 + t4532)) * t3865 + (-t3853 + 0.1e1) * t3249 * t3850 - (-t4795 - t3261 + (t3045 * t3897 + (t4912 + t3799) * t4727) * t3888) * t4840 + (-t3249 + (t4799 + (-t3167 * t4358 - t3140 + (t3680 * t3897 - t3913 * t3852) * t4188 + t4215) * t3887) * pkin(3)) * t3896 + ((t3243 + (t4257 + t4498) * t4727) * t3887 + t4488) * t3853 + (((pkin(1) * t4207 - t3042) * t3888 + 0.2e1 * t4148) * t3887 + t4385) * t3897 + (-t3243 + (t3580 * t3888 + t4901) * t4727) * t3887 - t3981) / (t3472 + (t3490 * t3896 + t4059) * t3864) * t3301 + ((-t4344 - ((-t4819 + (-t4550 + pkin(1)) * t3897 + t3942) * t4729 + (t3292 + t3270 * (t3817 + t3943)) * t3865 + (-t4370 - t5003) * t3864 + t3301 * t3543) * t4840 + (-(pkin(3) * t3712 * t3853 - t4008 - t4505) * t4729 + ((((t3812 - t3913) * t3799 - t4834) * t3897 + 0.3e1 * t4396) * t4727 + t3680 * t4361 + t4008 * t3270) * t3865 + (pkin(2) * t3713 * t4759 - pkin(6) * t3036 * t3897) * t3864 + pkin(3) * t4610 * t4731) * t3896 - t3837 * t4309 - (pkin(1) * t4016 - t3747 * t3888 - t3825) * t4580 * t4727 + t3575 * t3039 * t3864 + t4309) * t3270 + (((pkin(1) * t4323 + t3039) * t3896 - t3167 * (t3817 + pkin(2))) * t3865 + ((t4361 - t3045) * t3888 - t3264 + (t3575 * t3851 + (pkin(6) * t4562 - pkin(2)) * t3897) * t3270) * t3864 + ((-(-t3806 + t3816 + t3944 - t4558) * t4600 - t4378 * t4559) * t3851 + (t3712 * t4244 + ((t3830 * t3853 + t4358 / 0.2e1 + t3680) * t4897 + t4016 - t3680) * t3887) * t3896 + (t3816 - t3658) * t4600 + t4882 * t3713 * t4559) * t3301) * t4845) * t3400;
t4023 = t3853 * t4605 + t4505;
t4155 = pkin(2) * t4323;
t4648 = t3661 * t3897;
t2952 = ((t3081 * t4603 + 0.2e1 * t3078 * t4840 + (t3081 * t3747 - t4151) * t3896) * t3270 - ((t3081 * t4561 - t4845) * t3896 - t4861) * t4845) * t3397 + ((t4344 + (((t3923 + t4017) * t4898 + 0.2e1 * t4819 + t4648 - pkin(2)) * t4840 + (-(-t3951 + t4023 + 0.2e1 * t4144) * t3837 + pkin(2) * t4648 + t3685 + t3863 + t4023) * t3896 - t3712 * t4921) * t3301 + ((t3292 + 0.2e1 * t3261) * t4840 + (t3270 * t3747 - t4388) * t3896) * t3865) * t3400 + ((-(t3228 + t3024) * t4367 + ((pkin(3) * t3225 - t4776) * t3897 + t4155 * t4914) * t3896 + pkin(2) * (t3039 * t3897 - t4155) + ((0.2e1 * t3690 * t3738 - 0.3e1 * t4396) * t3896 + t3591 * t4852) * t4726) * t3400 + (-(t3851 * t4550 + t3897 * t4970) * t4845 + (pkin(2) * t3591 + ((t3738 - 0.2e1 * t4851) * t3896 - t4367) * pkin(3)) * t4760) * t3397) * t3864) * t3301;
t3128 = t3167 * t3663;
t4619 = t4803 * t3887;
t4036 = t4546 + t4619;
t4475 = 0.2e1 * t3270;
t3002 = t4036 * t4475 + t3128;
t3164 = t3167 ^ 2;
t3267 = t3270 ^ 2;
t3048 = t3267 + t3164;
t4624 = t4803 * t3851;
t4331 = t3167 * t4624;
t3125 = -0.4e1 * t4331;
t3131 = t3666 * t3167;
t3198 = t4981 * t3270;
t3201 = t3270 * t4993;
t3204 = t3586 * t3270;
t3210 = t3270 * t3652;
t3213 = t3663 * t3270;
t3216 = t3666 * t3270;
t4761 = t3270 * t4803;
t3220 = -0.2e1 * t4761;
t3234 = t3270 * t4804;
t4280 = t3618 * t4593;
t3289 = t3301 * t4280;
t4457 = rSges(3,2) * t4876;
t4225 = pkin(2) * t4457;
t3675 = -0.2e1 * t4225;
t3998 = t3675 + t3479;
t3414 = t3998 + t4985;
t4040 = -t3663 * t3887 + t3666 * t3896;
t3968 = t3586 + t4040;
t3973 = -t3743 * t3851 - t5011;
t3582 = t4457 - t3708;
t4869 = pkin(1) * t3582;
t3317 = ((-t4997 + (-t4628 + t3796) * t3896 + 0.2e1 * t4225 - t3479) * t3853 - 0.2e1 * t3968 * t4559 + t3617 * t3851 + (t3745 * t3887 + t3637) * t3896 + t3887 * t4499 + t3987) * t3837 + (t3888 * t3973 - t4967) * t4428 + t3414 * t3853 + ((t3665 * t3888 + t3797) * t3896 + (-t3664 * t3887 + t4213) * t3888 - 0.2e1 * t4869) * t3897 - t4997 + (-t4628 + t3794) * t3896 + t3888 * t4496 + t3887 * t4427 + t3971;
t3424 = t3675 + t4137 + t4985;
t4430 = 0.2e1 * t4624;
t3360 = (t4967 + (t4430 + t5011) * t3888) * t3864 + ((-t3652 * t3888 + (t3896 * t4888 - t3582) * t3897) * pkin(1) + t3424) * t3865;
t3597 = t3663 * t3888;
t4560 = t3888 * t3666;
t4814 = rSges(3,1) * t3887;
t4924 = rSges(3,2) * t3896 + t4814;
t3384 = ((-t4560 - m(3) * (t3694 * t3897 + t3905)) * t3896 + (t3597 + (t3697 * t3897 + t3904) * m(3)) * t3887 - t3897 * t3643) * t3864 - (-t3887 * Icges(3,5) - Icges(3,6) * t3896 + t4924 * m(3) * (t3902 + t3812)) * t3865;
t4196 = t3164 * t4491;
t4453 = rSges(3,2) * t3261;
t4229 = m(3) * t4453;
t4779 = t3167 * t3851;
t4448 = 0.2e1 * t4779;
t4461 = t3167 * t4887;
t4465 = m(3) * t4814;
t4519 = t3167 * t3655 - t3216;
t4526 = t3164 - t3267;
t4538 = (t3131 - 0.2e1 * t4229) * t3887 + t3270 * t3479;
t4780 = t3167 * t4803;
t4872 = pkin(1) * t3301;
t4909 = -0.2e1 * t3167;
t4962 = -t2940 * t3384 - t2944 * t3360 - t2952 * t3317 + 0.4e1 * t3301 * (-t4331 + (-t3216 + (t4993 / 0.2e1 + t4220) * t3167) * t3896 + (t3167 * t4221 + t3213) * t3887 - t3204 + t4780 / 0.2e1) * t4262 + ((t3002 * t3896 + t3270 * t4997 + t4538) * t3837 * t4440 + ((-t3167 * t4802 * t4924 - t3210) * t3264 + ((t3131 - t3201) * t3896 - t3128 * t3887 + (-t3655 * t3896 - t3887 * t4879 + t4430 + t4982) * t3270) * t4188) * t3865 + t3270 * (t3270 * t4622 - t3618 * t4725) * t4894 + ((-t3267 * t4993 - m(3) * (-t3164 * t3697 + t3267 * t3696)) * t3864 + (-pkin(1) * t4461 - t3002 * t3888) * t4977) * t3896 - 0.2e1 * t4538 * t4725 + ((t3164 * t3694 - t3267 * t3695) * t4876 + t3267 * t4982) * t3864 - 0.2e1 * (t3167 * t4465 + t3210) * t4872) * t3897 - 0.2e1 * (t3125 + (-t4909 * t4993 + t4519) * t3896 + (t3167 * t4879 + t3213) * t3887 - t3204 + 0.2e1 * t4780) * t4729 + (0.4e1 * (-t3289 + t4761) * t4779 + ((-0.2e1 * (t3213 + (0.4e1 * t4619 + t4879) * t3167) * t4727 - t3048 * t3839) * t3888 + 0.2e1 * (-t3201 - t4229 - t3131 / 0.2e1) * t3167) * t3896 + ((t3167 * t3618 + t3887 * t4519 + t3198) * t4441 - (-t3048 * t4457 + t3267 * t3708) * pkin(1)) * t3888 + t3167 * ((m(3) * t3234 + t3128) * t3887 + t3220)) * t3865 + (-t3270 * t4280 + t3301 * t4902) * t4448 + ((t4526 * t4645 + (t3301 * t4426 + (t3794 - 0.4e1 * t4619) * t4778) * t3270) * t3888 + rSges(3,2) * t4196 - 0.2e1 * (t3216 + (-t4547 - t4993) * t3167) * t3301) * t3896 + (((t3167 * t3270 * t4427 + t3666 * t4526) * t3887 + t3270 * (-t3167 * t3667 + t3198)) * t3864 + t3270 * t4869 * t4977) * t3888 + t4196 * t4814 + ((-pkin(6) * t4461 + t3213) * t3887 - t3204 + t4780) * t4977;
t4754 = t3271 * t3913;
t3232 = pkin(6) * t4754;
t3159 = pkin(6) * t3168;
t3251 = t3271 * pkin(8);
t4513 = t3271 * pkin(7) + t3251;
t4771 = t3168 * t3949;
t4542 = (-t3159 / 0.2e1 + t4513) * t3800 - t4771 / 0.2e1;
t2980 = t3232 + t4542;
t3009 = -t3159 + t4513;
t4360 = t3168 * t3800;
t4150 = t3913 * t4360;
t4031 = t3271 * t3639 - t4150;
t3013 = t3302 * t4658 + t4031;
t3037 = t4754 - t4360;
t3065 = t3229 + t3259;
t4718 = t3302 * t3865;
t3082 = t3271 + t4718;
t3079 = pkin(2) * t3082;
t4773 = t3168 * t3864;
t3138 = pkin(1) * t4773;
t4772 = t3168 * t3891;
t3141 = pkin(1) * t4772;
t3254 = t3271 * t3951;
t3265 = pkin(1) * t3271;
t3686 = pkin(1) * t4549;
t3756 = pkin(6) * t3800;
t3854 = t3899 * t3855;
t3856 = t3900 * t3857;
t4528 = 0.2e1 * t3025;
t4929 = t4528 + 0.2e1 * t3229;
t3963 = (((t3159 - 0.2e1 * t3251) * pkin(7) + t3254 + pkin(6) * t3153 + t4502 * t3271) * t3800 + t3168 * t4548 + t3271 * t4377) * t3891 + ((0.2e1 * t3259 + t4929) * t3891 + t3162) * t3759 + t5002 * t3807;
t3993 = t3864 * t4398 - t3891 * t4191 + t3433;
t4045 = t3302 * t3716 * t4274;
t4722 = t3302 * t4969;
t4302 = t3716 * t4722;
t4120 = t3913 * t4302;
t4048 = t3836 * t4120;
t4065 = t3681 * t4718 + t3009;
t4251 = t3302 * t4587;
t4119 = t3716 * t4251;
t4352 = -t3800 / 0.2e1;
t4139 = t3168 * t4352;
t4158 = t3890 * t4413;
t4299 = t3302 * t4591;
t4181 = 0.2e1 * t4299;
t4300 = t3302 * t4613;
t4301 = t3302 * t4631;
t4322 = t3271 * t4591;
t4328 = t3168 * t3807;
t4373 = (pkin(6) * t3251 + pkin(7) * t4509 + t3168 * t4069 + t4542) * t3808;
t4387 = t3025 * t3800;
t4406 = pkin(2) * t4773;
t4717 = t3302 * t3891;
t4437 = 0.2e1 * t4717;
t4719 = t3302 * t3864;
t4438 = 0.2e1 * t4719;
t4492 = 0.2e1 * t3808;
t4720 = t3302 * t3857;
t4844 = pkin(3) * t3168;
t4860 = pkin(2) * t3168;
t4917 = t3759 + t3807 - t3756;
t4941 = 0.2e1 * t3756 - t3807;
t4949 = t3082 * t4549 + t3265;
t2941 = (-(t4089 + t4027) * t3856 * t4260 * t4722 + (-0.4e1 * t4048 + (-0.3e1 * (t3609 + t4027) * t3891 * t4251 - 0.2e1 * t4373 + (-0.2e1 * t2980 + t4328) * pkin(2)) * t3837 + ((t3271 * t3983 + t4150) * t4866 + 0.4e1 * t4120) * t3865 + (t3891 * t4222 + t3638 + t4027 * (t3829 * t3891 + pkin(1))) * t4438 - pkin(2) * t4328 + 0.2e1 * t4373 + t2980 * t3943) * t3857 + (t4045 * t4900 + (0.2e1 * (t4001 + t4917) * t4301 + t3963) * t3837 + (-t4045 + ((t4139 + t4754) * t3813 + t3025 * t4352 + t3254 / 0.2e1 + (t3807 / 0.2e1 + t3759 + t4062) * t3271) * t4631) * t4469 + (0.4e1 * t3686 + t4002 + t4941) * t4301 - t3963) * t3900 + 0.2e1 * t4048 + ((t4210 + t4917) * t4181 + (t3141 - t4932) * t3808 + pkin(2) * t3065) * t4608 + (((t3254 - t4387) * t3891 + pkin(1) * t3037) * t3864 - 0.2e1 * t4302 + (t4027 + t4135) * t4322) * t4573 + (t4901 + (t3580 + t4941) * t3891) * t4251 - (t3025 * t3813 - t3913 * t4932) * t3808 - t3065 * t4848) * t3302 * t4678 + ((t3855 * t4409 + (t3716 * t4587 + t3748) * t4492 + t3716 * t4205 + t3578) * t4720 + (t3948 * t3082 * t3854 + (t3913 * t4139 + t3271 * t4883 + ((-t3716 * t4858 + t3670) * t3891 + t4223) * t3302) * t4492 + (t3716 * t4090 + t3640) * t4437 + pkin(2) * t3013) * t3900 + (-t4119 / 0.2e1 + t4949 * pkin(2)) * t4492 + t3013 * t4549 - pkin(2) * t4119 + (t3302 * t4601 + t4031) * pkin(1) + ((-t3302 * t4268 + 0.3e1 * t3079) * t3900 + t4949) * t3807) / ((pkin(3) * t4419 + t3554 * t3891) * t3899 + t3993) * t3271 * t4586 + ((t3890 * t4162 + ((t3756 + t4043) * t3899 + (t3715 + t4839) * pkin(2)) * t4613) * t4720 + ((t3659 * t4300 + t4406) * t4839 + ((t3168 * t3828 - t3800 * t4065) * t3864 + pkin(2) * t3662 * t4300) * t3899 - (t3890 * t4065 - t4844) * t4858 - (-t3715 * t4717 * t4882 + t3162 * t4578) * t3913) * t3900 + t3138 * t4839 + (t3681 * t3302 * t4346 + (pkin(3) * t4158 + t3659 * t4858) * t3168) * t3899 - (-pkin(3) * t4772 + (t3009 * t3891 + t3659 * t4718 + t3265) * t3890) * t4587 + t4158 * t4860) / ((-pkin(2) * t4413 + t3561 * t3864) * t3899 + t3993) * t3168;
t4556 = t3890 * t3913;
t3226 = t3271 * t4556;
t3040 = t3226 - t4844;
t3043 = -t3232 + t4771;
t3046 = t4754 - t3159;
t3244 = pkin(2) * t3259;
t3253 = t3271 * t3949;
t3262 = pkin(2) * t3271;
t3692 = t3800 + t3922;
t4182 = -0.2e1 * t4299;
t3293 = t3692 * t4182;
t3810 = t3900 * pkin(1);
t3818 = pkin(1) * t3857;
t4070 = 0.2e1 * t3856 * t4251;
t3980 = pkin(3) * (pkin(6) * t4182 + t3262) + t4070 * t4850;
t4007 = -pkin(1) * t3809 - t3686 - t3747;
t4554 = t3891 * t3900;
t4357 = pkin(2) * t4554;
t4014 = t3857 * t3913 - t4357;
t4143 = pkin(2) * t4233;
t4147 = pkin(2) * t4251;
t4171 = t3863 * t3271 + t3254;
t4187 = t3302 * t4470;
t4206 = pkin(2) * t4438;
t4256 = t3891 * t4605;
t4723 = t3302 * t3715;
t4303 = t3544 * t4723;
t4755 = t3271 * t3891;
t4321 = t3890 * t4755;
t4602 = t3854 * t3949;
t4343 = ((0.2e1 * t3341 + 0.2e1 * t3342 + 0.2e1 * t3377 - t4720) * t3837 + t3271 * t3865 + t4720 - t3302) * t4602;
t4369 = t3168 * t3809;
t4384 = t3046 * t4836;
t4393 = (t3800 + t3921) * t4849;
t4402 = t3271 * t4858;
t4423 = pkin(1) * t4754;
t4436 = t3302 * t4975;
t4826 = t3302 * pkin(2);
t4484 = pkin(6) * t4826;
t4829 = t3271 * pkin(3);
t4487 = pkin(2) * t4829;
t4504 = t3756 + t3949;
t4531 = t3138 + 0.2e1 * t4826;
t4721 = t3302 * t3837;
t4794 = (t3800 * t4299 - t3262) * t3857;
t4798 = ((pkin(2) * t4181 - t4214) * t3890 + t4829) * t3857;
t2945 = (t3302 * ((-0.4e1 / 0.3e1 + t3857) * t4602 + ((-0.2e1 / 0.3e1 * t3756 + t4508) * t3857 + 0.2e1 / 0.3e1 * t4143 + 0.4e1 / 0.3e1 * t3756 + t4211) * t3899 + (0.4e1 / 0.3e1 * t4839 - 0.2e1 / 0.3e1 * t3715) * t3544) * t4899 + (t3271 * t3766 * t4602 - (t4794 + (-t3046 * t3891 + t3265) * t3900 + 0.3e1 * t3262 - 0.4e1 * t3716 * t4299) * t4839 + ((-pkin(1) * t3262 + t3302 * t4204) * t3900 + (pkin(6) * t4206 - t4423) * t3891 + t3253 + (-t4798 + (t4070 + (pkin(2) * t4772 - 0.4e1 * t4251) * t3900 + 0.2e1 * (t3162 + t4206) * t3891 + t3259 + t4528) * t3890) * pkin(3) - t4171) * t3899 + ((-t4256 * t4719 - t3244) * t3890 - t4487) * t3857 + ((t3043 * t3891 - 0.2e1 * t4147) * t3890 - t4384) * t3900 + (t3746 * t4299 + t3244) * t3890 + t3980) * t3837 + ((-0.3e1 * t3857 + 0.3e1) * t3302 * t4602 - (t3766 * t3138 + (-t4369 + (-t3259 - t4929) * t3891) * t3864 + ((t4915 + 0.4e1 * t4549) * t3900 + (0.4e1 * t3857 - 0.2e1) * pkin(2)) * t3302) * t4839 + (0.2e1 * (t3636 + t4504) * t4720 + (((pkin(1) * t4755 - t3046) * t3800 + t3043) * t3864 - t3659 * pkin(2) * t4976) * t3900 + (t3302 * t4913 + t3942 * t4322) * t3800 + (pkin(6) * t4402 + t3302 * t4498) * t3891 - t3302 * t3579) * t3899 + ((-t3271 * t4418 + 0.2e1 * t4484) * t3890 + pkin(3) * t4531) * t3857 + ((pkin(1) * t4402 + pkin(6) * t4436) * t3890 + pkin(3) * t4436) * t4554 + (-0.2e1 * t4484 + (t3891 * t4171 + t4423) * t3864) * t3890 - pkin(3) * (t3025 * t4591 + t4531)) * t3865 + (-t3857 + 0.1e1) * t3253 * t3854 - (-t4794 - t3262 + (t3046 * t3900 + (t4912 + t3800) * t4719) * t3891) * t4839 + (-t3253 + (t4798 + (-t3168 * t4357 - t3141 + (t3681 * t3900 - t3913 * t3856) * t4187 + t4214) * t3890) * pkin(3)) * t3899 + ((t3244 + (t4256 + t4498) * t4719) * t3890 + t4487) * t3857 + (((pkin(1) * t4206 - t3043) * t3891 + 0.2e1 * t4147) * t3890 + t4384) * t3900 + (-t3244 + (t3580 * t3891 + t4901) * t4719) * t3890 - t3980) / (t3473 + (t3491 * t3899 + t4058) * t3864) * t3302 + ((-t4343 - ((-t4818 + (-t4549 + pkin(1)) * t3900 + t3942) * t4721 + (t3293 + t3271 * (t3810 + t3943)) * t3865 + (-t4369 - t5002) * t3864 + t3302 * t3544) * t4839 + (-(pkin(3) * t3715 * t3857 - t4007 - t4504) * t4721 + ((((t3813 - t3913) * t3800 - t4834) * t3900 + 0.3e1 * t4393) * t4719 + t3681 * t4360 + t4007 * t3271) * t3865 + (pkin(2) * t3716 * t4755 - pkin(6) * t3037 * t3900) * t3864 + pkin(3) * t4609 * t4723) * t3899 - t3837 * t4303 - (pkin(1) * t4014 - t3747 * t3891 - t3825) * t4578 * t4719 + t3576 * t3040 * t3864 + t4303) * t3271 + (((pkin(1) * t4321 + t3040) * t3899 - t3168 * (t3810 + pkin(2))) * t3865 + ((t4360 - t3046) * t3891 - t3265 + (t3576 * t3855 + (pkin(6) * t4557 - pkin(2)) * t3900) * t3271) * t3864 + ((-(-t3809 + t3818 + t3944 - t4553) * t4600 - t4378 * t4554) * t3855 + (t3715 * t4243 + ((t3830 * t3857 + t4357 / 0.2e1 + t3681) * t4897 + t4014 - t3681) * t3890) * t3899 + (t3818 - t3659) * t4600 + t4882 * t3716 * t4554) * t3302) * t4844) * t3401;
t4022 = t3857 * t4605 + t4504;
t4154 = pkin(2) * t4321;
t4646 = t3662 * t3900;
t2953 = ((t3082 * t4602 + 0.2e1 * t3079 * t4839 + (t3082 * t3747 - t4150) * t3899) * t3271 - ((t3082 * t4556 - t4844) * t3899 - t4860) * t4844) * t3398 + ((t4343 + (((t3923 + t4015) * t4898 + 0.2e1 * t4818 + t4646 - pkin(2)) * t4839 + (-(-t3951 + t4022 + 0.2e1 * t4143) * t3837 + pkin(2) * t4646 + t3686 + t3863 + t4022) * t3899 - t3715 * t4921) * t3302 + ((t3293 + 0.2e1 * t3262) * t4839 + (t3271 * t3747 - t4387) * t3899) * t3865) * t3401 + ((-(t3229 + t3025) * t4366 + ((pkin(3) * t3226 - t4771) * t3900 + t4154 * t4914) * t3899 + pkin(2) * (t3040 * t3900 - t4154) + ((0.2e1 * t3692 * t3739 - 0.3e1 * t4393) * t3899 + t3592 * t4850) * t4718) * t3401 + (-(t3855 * t4549 + t3900 * t4969) * t4844 + (pkin(2) * t3592 + ((t3739 - 0.2e1 * t4849) * t3899 - t4366) * pkin(3)) * t4756) * t3398) * t3864) * t3302;
t3129 = t3168 * t3663;
t4618 = t4803 * t3890;
t4035 = t4546 + t4618;
t4474 = 0.2e1 * t3271;
t3003 = t4035 * t4474 + t3129;
t3165 = t3168 ^ 2;
t3268 = t3271 ^ 2;
t3049 = t3268 + t3165;
t4623 = t4803 * t3855;
t4329 = t3168 * t4623;
t3126 = -0.4e1 * t4329;
t3132 = t3666 * t3168;
t3199 = t4981 * t3271;
t3202 = t3271 * t4992;
t3205 = t3586 * t3271;
t3211 = t3271 * t3652;
t3214 = t3663 * t3271;
t3217 = t3666 * t3271;
t4757 = t3271 * t4803;
t3222 = -0.2e1 * t4757;
t3235 = t3271 * t4804;
t4279 = t3618 * t4591;
t3290 = t3302 * t4279;
t4456 = rSges(3,2) * t4875;
t4224 = pkin(2) * t4456;
t3677 = -0.2e1 * t4224;
t3997 = t3677 + t3479;
t3415 = t3997 + t4984;
t4039 = -t3663 * t3890 + t3666 * t3899;
t3967 = t3586 + t4039;
t3972 = -t3743 * t3855 - t5010;
t3583 = t4456 - t3708;
t4868 = pkin(1) * t3583;
t3318 = ((-t4996 + (-t4627 + t3796) * t3899 + 0.2e1 * t4224 - t3479) * t3857 - 0.2e1 * t3967 * t4554 + t3617 * t3855 + (t3745 * t3890 + t3637) * t3899 + t3890 * t4499 + t3987) * t3837 + (t3891 * t3972 - t4968) * t4428 + t3415 * t3857 + ((t3665 * t3891 + t3797) * t3899 + (-t3664 * t3890 + t4213) * t3891 - 0.2e1 * t4868) * t3900 - t4996 + (-t4627 + t3794) * t3899 + t3891 * t4496 + t3890 * t4427 + t3971;
t3425 = t3677 + t4137 + t4984;
t4429 = 0.2e1 * t4623;
t3361 = (t4968 + (t4429 + t5010) * t3891) * t3864 + ((-t3652 * t3891 + (t3899 * t4888 - t3583) * t3900) * pkin(1) + t3425) * t3865;
t3598 = t3663 * t3891;
t4555 = t3891 * t3666;
t4813 = rSges(3,1) * t3890;
t4925 = rSges(3,2) * t3899 + t4813;
t3385 = ((-t4555 - m(3) * (t3694 * t3900 + t3905)) * t3899 + (t3598 + (t3697 * t3900 + t3904) * m(3)) * t3890 - t3900 * t3643) * t3864 - (-t3890 * Icges(3,5) - Icges(3,6) * t3899 + t4925 * m(3) * (t3902 + t3813)) * t3865;
t4195 = t3165 * t4491;
t4452 = rSges(3,2) * t3262;
t4228 = m(3) * t4452;
t4774 = t3168 * t3855;
t4447 = 0.2e1 * t4774;
t4460 = t3168 * t4887;
t4464 = m(3) * t4813;
t4518 = t3168 * t3655 - t3217;
t4525 = t3165 - t3268;
t4537 = (t3132 - 0.2e1 * t4228) * t3890 + t3271 * t3479;
t4775 = t3168 * t4803;
t4871 = pkin(1) * t3302;
t4908 = -0.2e1 * t3168;
t4961 = -t2941 * t3385 - t2945 * t3361 - t2953 * t3318 + 0.4e1 * t3302 * (-t4329 + (-t3217 + (t4992 / 0.2e1 + t4220) * t3168) * t3899 + (t3168 * t4221 + t3214) * t3890 - t3205 + t4775 / 0.2e1) * t4261 + ((t3003 * t3899 + t3271 * t4996 + t4537) * t3837 * t4437 + ((-t3168 * t4802 * t4925 - t3211) * t3265 + ((t3132 - t3202) * t3899 - t3129 * t3890 + (-t3655 * t3899 - t3890 * t4879 + t4429 + t4982) * t3271) * t4187) * t3865 + t3271 * (t3271 * t4622 - t3618 * t4717) * t4893 + ((-t3268 * t4992 - m(3) * (-t3165 * t3697 + t3268 * t3696)) * t3864 + (-pkin(1) * t4460 - t3003 * t3891) * t4976) * t3899 - 0.2e1 * t4537 * t4717 + ((t3165 * t3694 - t3268 * t3695) * t4875 + t3268 * t4982) * t3864 - 0.2e1 * (t3168 * t4464 + t3211) * t4871) * t3900 - 0.2e1 * (t3126 + (-t4908 * t4992 + t4518) * t3899 + (t3168 * t4879 + t3214) * t3890 - t3205 + 0.2e1 * t4775) * t4721 + (0.4e1 * (-t3290 + t4757) * t4774 + ((-0.2e1 * (t3214 + (0.4e1 * t4618 + t4879) * t3168) * t4719 - t3049 * t3839) * t3891 + 0.2e1 * (-t3202 - t4228 - t3132 / 0.2e1) * t3168) * t3899 + ((t3168 * t3618 + t3890 * t4518 + t3199) * t4438 - (-t3049 * t4456 + t3268 * t3708) * pkin(1)) * t3891 + t3168 * ((m(3) * t3235 + t3129) * t3890 + t3222)) * t3865 + (-t3271 * t4279 + t3302 * t4902) * t4447 + ((t4525 * t4645 + (t3302 * t4426 + (t3794 - 0.4e1 * t4618) * t4773) * t3271) * t3891 + rSges(3,2) * t4195 - 0.2e1 * (t3217 + (-t4547 - t4992) * t3168) * t3302) * t3899 + (((t3168 * t3271 * t4427 + t3666 * t4525) * t3890 + t3271 * (-t3168 * t3667 + t3199)) * t3864 + t3271 * t4868 * t4976) * t3891 + t4195 * t4813 + ((-pkin(6) * t4460 + t3214) * t3890 - t3205 + t4775) * t4976;
t3178 = 0.2e1 * t4770;
t3286 = t3287 ^ 2;
t3495 = -t3595 - t4644;
t3613 = m(3) * t3936 - Icges(3,2) / 0.2e1 + Icges(3,3) / 0.2e1 + Icges(3,1) / 0.2e1;
t3838 = m(3) * t3904;
t4130 = t4803 * t4317;
t4076 = -0.4e1 * t4130;
t4134 = t3193 * t4317;
t4083 = 0.2e1 * t4134;
t4084 = -0.2e1 * t4134;
t4094 = t3618 * t4317;
t4190 = t4882 * t3907;
t4316 = t3287 * t4597;
t4892 = -0.2e1 * t3864;
t4433 = t3666 * t4892;
t4434 = 0.2e1 * t4645;
t4746 = t3287 * t3882;
t4752 = t3286 * t3843;
t4753 = t3286 * t3837;
t4797 = (t3287 - t3193) * (t3287 + t3193);
t4903 = -0.2e1 * t3618;
t4960 = -t2938 * t3643 - t2942 * t3495 - t2950 * t3382 + (0.2e1 * (t3177 + t4094) * t4748 + t3618 * t4083) * t3841 + (-(t3666 * t4316 - m(3) * (t3695 * t4317 + 0.2e1 * t4455)) * t4748 + (t3193 * t4433 + t3287 * (t3593 + t3838)) * t4746 - m(3) * (-t3192 * t3907 + t4084 * t4886) + (-(t3618 * t4617 + t3663 * t4569 - t3655) * t3837 + t3843 * t4995 + (-t3843 * t4190 - t4885) * m(3)) * t3286) * t3881 + (-t4094 + t3178) * t4748 + t3613 * t4083 + ((-(t3193 * t4903 + t4076) * t4748 + 0.4e1 * t3193 * t4130 - t3618 * t4797) * t3881 - (t3666 * t4569 + (rSges(3,1) * t4821 - t3695) * m(3)) * t4753 + (t3663 * t4316 - (t3696 * t4317 + t3181) * m(3)) * t4748 + (t3193 * t4434 + t3287 * (t3839 + t4570)) * t4746 + (t3286 * t3906 + (rSges(3,2) * t4084 + (t3192 + t4752) * rSges(3,1)) * pkin(2)) * m(3)) * t3878 - ((-t3286 * t4166 - t4797) * t5001 + t3763 * t4753 - t4752 + t4797) * t4803;
t3219 = 0.2e1 * t4765;
t3297 = t3300 ^ 2;
t3496 = -t3602 - t4643;
t4127 = t4803 * t4310;
t4075 = -0.4e1 * t4127;
t4133 = t3269 * t4310;
t4081 = 0.2e1 * t4133;
t4082 = -0.2e1 * t4133;
t4093 = t3618 * t4310;
t4255 = t3300 * t4590;
t4732 = t3300 * t3894;
t4744 = t3297 * t3849;
t4745 = t3297 * t3837;
t4793 = (t3300 - t3269) * (t3300 + t3269);
t4959 = -t2939 * t3643 - t2943 * t3496 - t2951 * t3383 + (0.2e1 * (t3218 + t4093) * t4734 + t3618 * t4081) * t3847 + (-(t3666 * t4255 - m(3) * (t3695 * t4310 + 0.2e1 * t4454)) * t4734 + (t3269 * t4433 + t3300 * (t3596 + t3838)) * t4732 - m(3) * (-t3266 * t3907 + t4082 * t4886) + (-(t3618 * t4616 + t3663 * t4564 - t3655) * t3837 + t3849 * t4994 + (-t3849 * t4190 - t4885) * m(3)) * t3297) * t3893 + (-t4093 + t3219) * t4734 + t3613 * t4081 + ((-(t3269 * t4903 + t4075) * t4734 + 0.4e1 * t3269 * t4127 - t3618 * t4793) * t3893 - (t3666 * t4564 + (rSges(3,1) * t4820 - t3695) * m(3)) * t4745 + (t3663 * t4255 - (t3696 * t4310 + t3233) * m(3)) * t4734 + (t3269 * t4434 + t3300 * (t3839 + t4565)) * t4732 + (t3297 * t3906 + (rSges(3,2) * t4082 + (t3266 + t4744) * rSges(3,1)) * pkin(2)) * m(3)) * t3884 - ((t3297 * t4165 - t4793) * t4895 + t3764 * t4745 - t4744 + t4793) * t4803;
t3221 = 0.2e1 * t4761;
t3298 = t3301 ^ 2;
t3497 = -t3603 - t4642;
t4124 = t4803 * t4305;
t4074 = -0.4e1 * t4124;
t4132 = t3270 * t4305;
t4079 = 0.2e1 * t4132;
t4080 = -0.2e1 * t4132;
t4092 = t3618 * t4305;
t4304 = t3301 * t4589;
t4724 = t3301 * t3897;
t4742 = t3298 * t3853;
t4743 = t3298 * t3837;
t4792 = (t3301 - t3270) * (t3301 + t3270);
t4958 = -t2940 * t3643 - t2944 * t3497 - t2952 * t3384 + (0.2e1 * (t3220 + t4092) * t4726 + t3618 * t4079) * t3851 + (-(t3666 * t4304 - m(3) * (t3695 * t4305 + 0.2e1 * t4453)) * t4726 + (t3270 * t4433 + t3301 * (t3597 + t3838)) * t4724 - m(3) * (-t3267 * t3907 + t4080 * t4886) + (-(t3618 * t4615 + t3663 * t4559 - t3655) * t3837 + t3853 * t4993 + (-t3853 * t4190 - t4885) * m(3)) * t3298) * t3896 + (-t4092 + t3221) * t4726 + t3613 * t4079 + ((-(t3270 * t4903 + t4074) * t4726 + 0.4e1 * t3270 * t4124 - t3618 * t4792) * t3896 - (t3666 * t4559 + (rSges(3,1) * t4819 - t3695) * m(3)) * t4743 + (t3663 * t4304 - (t3696 * t4305 + t3234) * m(3)) * t4726 + (t3270 * t4434 + t3301 * (t3839 + t4560)) * t4724 + (t3298 * t3906 + (rSges(3,2) * t4080 + (t3267 + t4742) * rSges(3,1)) * pkin(2)) * m(3)) * t3887 - ((t3298 * t4164 - t4792) * t4894 + t3765 * t4743 - t4742 + t4792) * t4803;
t3223 = 0.2e1 * t4757;
t3299 = t3302 ^ 2;
t3498 = -t3604 - t4641;
t4121 = t4803 * t4299;
t4073 = -0.4e1 * t4121;
t4131 = t3271 * t4299;
t4077 = 0.2e1 * t4131;
t4078 = -0.2e1 * t4131;
t4091 = t3618 * t4299;
t4252 = t3302 * t4588;
t4716 = t3302 * t3900;
t4740 = t3299 * t3857;
t4741 = t3299 * t3837;
t4791 = (t3302 - t3271) * (t3302 + t3271);
t4957 = -t2941 * t3643 - t2945 * t3498 - t2953 * t3385 + (0.2e1 * (t3222 + t4091) * t4718 + t3618 * t4077) * t3855 + (-(t3666 * t4252 - m(3) * (t3695 * t4299 + 0.2e1 * t4452)) * t4718 + (t3271 * t4433 + t3302 * (t3598 + t3838)) * t4716 - m(3) * (-t3268 * t3907 + t4078 * t4886) + (-(t3618 * t4614 + t3663 * t4554 - t3655) * t3837 + t3857 * t4992 + (-t3857 * t4190 - t4885) * m(3)) * t3299) * t3899 + (-t4091 + t3223) * t4718 + t3613 * t4077 + ((-(t3271 * t4903 + t4073) * t4718 + 0.4e1 * t3271 * t4121 - t3618 * t4791) * t3899 - (t3666 * t4554 + (rSges(3,1) * t4818 - t3695) * m(3)) * t4741 + (t3663 * t4252 - (t3696 * t4299 + t3235) * m(3)) * t4718 + (t3271 * t4434 + t3302 * (t3839 + t4555)) * t4716 + (t3299 * t3906 + (rSges(3,2) * t4078 + (t3268 + t4740) * rSges(3,1)) * pkin(2)) * m(3)) * t3890 - ((t3299 * t4163 - t4791) * t4893 + t3766 * t4741 - t4740 + t4791) * t4803;
t3050 = t3285 - 0.2e1 * t4372;
t4435 = t3613 * t4892;
t4545 = m(3) * t3907;
t4948 = -t4995 - t4545;
t4956 = -t2938 * t3495 - t2942 * t3422 - t2950 * t3358 + (t4042 * t3123 * t4470 + (t3975 * t4600 + t4824 + (-t3412 * t3837 + t4038 * t4468 + t4000 + t4999) * t3879) * t3287) * t4746 - (t3109 + (-t3663 * t4317 + t4911 * t4948) * t3881 + t3481 * t4317 + (-pkin(2) * t4467 - t4803) * t4911) * t4748 + (-t3280 + t3178) * t4450 + (t3050 * t4747 * t4888 + (t3878 * t4076 + t4948 * t4980 - t3111) * t3123) * t3881 + (-t3050 * t4459 + t3123 * t4435 + t3285 * t3708) * t4747 + ((t3123 * t4808 + t3181) * m(3) - Icges(3,6) * t3123) * t3123 * t3878 + t3123 * t3177 + (-t4753 + (-t4180 + 0.1e1) * t3286) * t3970;
t3054 = -0.2e1 * t4408 + t4873;
t4867 = pkin(1) * t3708;
t4947 = -t4994 - t4545;
t4955 = -t2939 * t3496 - t2943 * t3423 - t2951 * t3359 + (t4041 * t3166 * t4470 + (t3974 * t4600 + t4824 + (-t3413 * t3837 + 0.2e1 * t3893 * t4037 + t3999 + t4998) * t3885) * t3300) * t4732 - (t3124 + (-t3663 * t4310 + t4910 * t4947) * t3893 + t3485 * t4310 + (-pkin(2) * t4466 - t4803) * t4910) * t4734 + (-t3288 + t3219) * t4449 + (t3054 * t4733 * t4888 + (t3884 * t4075 + t4476 * t4947 - t3130) * t3166) * t3893 + (-t3054 * t4458 + t3166 * t4435 + t3300 * t4867) * t4733 + ((t3166 * t4808 + t3233) * m(3) - Icges(3,6) * t3166) * t3166 * t3884 + t3166 * t3218 + (-t4745 + (-t4179 + 0.1e1) * t3297) * t3969;
t3055 = -0.2e1 * t4407 + t4872;
t4946 = -t4993 - t4545;
t4954 = -t2940 * t3497 - t2944 * t3424 - t2952 * t3360 + (t4040 * t3167 * t4470 + (t3973 * t4600 + t4824 + (-t3414 * t3837 + 0.2e1 * t3896 * t4036 + t3998 + t4997) * t3888) * t3301) * t4724 - (t3125 + (-t3663 * t4305 + t4909 * t4946) * t3896 + t3486 * t4305 + (-pkin(2) * t4465 - t4803) * t4909) * t4726 + (-t3289 + t3221) * t4448 + (t3055 * t4725 * t4888 + (t3887 * t4074 + t4475 * t4946 - t3131) * t3167) * t3896 + (-t3055 * t4457 + t3167 * t4435 + t3301 * t4867) * t4725 + ((t3167 * t4808 + t3234) * m(3) - Icges(3,6) * t3167) * t3167 * t3887 + t3167 * t3220 + (-t4743 + (-t4178 + 0.1e1) * t3298) * t3968;
t3056 = -0.2e1 * t4406 + t4871;
t4945 = -t4992 - t4545;
t4953 = -t2941 * t3498 - t2945 * t3425 - t2953 * t3361 + (t4039 * t3168 * t4470 + (t3972 * t4600 + t4824 + (-t3415 * t3837 + 0.2e1 * t3899 * t4035 + t3997 + t4996) * t3891) * t3302) * t4716 - (t3126 + (-t3663 * t4299 + t4908 * t4945) * t3899 + t3487 * t4299 + (-pkin(2) * t4464 - t4803) * t4908) * t4718 + (-t3290 + t3223) * t4447 + (t3056 * t4717 * t4888 + (t3890 * t4073 + t4474 * t4945 - t3132) * t3168) * t3899 + (-t3056 * t4456 + t3168 * t4435 + t3302 * t4867) * t4717 + ((t3168 * t4808 + t3235) * m(3) - Icges(3,6) * t3168) * t3168 * t3890 + t3168 * t3222 + (-t4741 + (-t4177 + 0.1e1) * t3299) * t3967;
t3858 = t3909 ^ 2;
t4833 = m(4) * t3858;
t4707 = t3358 * t3403;
t4706 = t3359 * t3407;
t4705 = t3360 * t3408;
t4704 = t3361 * t3409;
t4691 = t3382 * t3392;
t4690 = t3383 * t3399;
t4689 = t3384 * t3400;
t4688 = t3385 * t3401;
t4682 = t3403 * t3422;
t4681 = t3403 * t3495;
t4677 = t3407 * t3423;
t4676 = t3407 * t3496;
t4675 = t3408 * t3424;
t4674 = t3408 * t3497;
t4673 = t3409 * t3425;
t4672 = t3409 * t3498;
t4277 = t3643 * t4586;
t4116 = t3329 * t4293;
t4115 = t3330 * t4292;
t4114 = t3331 * t4291;
t4113 = t3332 * t4293;
t4112 = t3333 * t4292;
t4111 = t3334 * t4291;
t4110 = t3382 * t4294;
t4109 = t3383 * t4293;
t4108 = t3384 * t4292;
t4107 = t3385 * t4291;
t4106 = t3495 * t4294;
t4105 = t3386 * t4277;
t4104 = t3496 * t4293;
t4103 = t3387 * t4277;
t4102 = t3497 * t4292;
t4101 = t3388 * t4277;
t4100 = t3498 * t4291;
t4099 = t3389 * t4277;
t3925 = rSges(4,1);
t3924 = rSges(4,2);
t3314 = (t3368 * t3552 - t3369 * t3548) * t3401;
t3313 = (t3366 * t3551 - t3367 * t3547) * t3400;
t3312 = (t3364 * t3550 - t3365 * t3546) * t3399;
t3311 = (t3362 * t3549 - t3363 * t3545) * t3392;
t3310 = (-t3349 * t3548 + t3350 * t3552) * t3409;
t3309 = (-t3347 * t3547 + t3348 * t3551) * t3408;
t3308 = (-t3345 * t3546 + t3346 * t3550) * t3407;
t3307 = (-t3343 * t3545 + t3344 * t3549) * t3403;
t3306 = t3385 * t4684 + t3498 * t4692 + t3643 * t4295;
t3305 = t3384 * t4685 + t3497 * t4693 + t3643 * t4296;
t3304 = t3383 * t4686 + t3496 * t4694 + t3643 * t4297;
t3303 = t3382 * t4687 + t3495 * t4695 + t3643 * t4298;
t3279 = (t3331 * t3548 - t3334 * t3552) * t4291;
t3278 = (t3330 * t3547 - t3333 * t3551) * t4292;
t3277 = (t3329 * t3546 - t3332 * t3550) * t4293;
t3276 = t3361 * t4684 + t3425 * t4692 + t3498 * t4295;
t3275 = t3360 * t4685 + t3424 * t4693 + t3497 * t4296;
t3274 = t3359 * t4686 + t3423 * t4694 + t3496 * t4297;
t3273 = (t3327 * t3545 - t3328 * t3549) * t4294;
t3272 = t3358 * t4687 + t3422 * t4695 + t3495 * t4298;
t3108 = -t3334 * t4099 + t3350 * t4672 + t3368 * t4688;
t3107 = -t3333 * t4101 + t3348 * t4674 + t3366 * t4689;
t3106 = -t3332 * t4103 + t3346 * t4676 + t3364 * t4690;
t3105 = -t3331 * t4099 + t3349 * t4672 + t3369 * t4688;
t3104 = -t3330 * t4101 + t3347 * t4674 + t3367 * t4689;
t3103 = -t3329 * t4103 + t3345 * t4676 + t3365 * t4690;
t3102 = -t3328 * t4105 + t3344 * t4681 + t3362 * t4691;
t3101 = -t3327 * t4105 + t3343 * t4681 + t3363 * t4691;
t3100 = -t3334 * t4100 + t3350 * t4673 + t3361 * t4697;
t3099 = -t3333 * t4102 + t3348 * t4675 + t3360 * t4699;
t3098 = -t3332 * t4104 + t3346 * t4677 + t3359 * t4701;
t3097 = -t3331 * t4100 + t3349 * t4673 + t3361 * t4696;
t3096 = -t3330 * t4102 + t3347 * t4675 + t3360 * t4698;
t3095 = -t3329 * t4104 + t3345 * t4677 + t3359 * t4700;
t3094 = -t3328 * t4106 + t3344 * t4682 + t3358 * t4703;
t3093 = -t3327 * t4106 + t3343 * t4682 + t3358 * t4702;
t3092 = t3318 * t4684 + t3361 * t4692 + t3385 * t4295;
t3091 = t3317 * t4685 + t3360 * t4693 + t3384 * t4296;
t3090 = t3316 * t4686 + t3359 * t4694 + t3383 * t4297;
t3089 = t3315 * t4687 + t3358 * t4695 + t3382 * t4298;
t3062 = t3318 * t4697 - t3334 * t4107 + t3350 * t4704;
t3061 = t3317 * t4699 - t3333 * t4108 + t3348 * t4705;
t3060 = t3316 * t4701 - t3332 * t4109 + t3346 * t4706;
t3059 = t3318 * t4696 - t3331 * t4107 + t3349 * t4704;
t3058 = t3317 * t4698 - t3330 * t4108 + t3347 * t4705;
t3057 = t3316 * t4700 - t3329 * t4109 + t3345 * t4706;
t3052 = t3315 * t4703 - t3328 * t4110 + t3344 * t4707;
t3051 = t3315 * t4702 - t3327 * t4110 + t3343 * t4707;
t3021 = t3279 * t3643 + t3310 * t3498 + t3314 * t3385;
t3020 = t3278 * t3643 + t3309 * t3497 + t3313 * t3384;
t3019 = t3277 * t3643 + t3308 * t3496 + t3312 * t3383;
t3018 = t3273 * t3643 + t3307 * t3495 + t3311 * t3382;
t3017 = t3279 * t3498 + t3310 * t3425 + t3314 * t3361;
t3016 = t3278 * t3497 + t3309 * t3424 + t3313 * t3360;
t3015 = t3277 * t3496 + t3308 * t3423 + t3312 * t3359;
t3014 = t3273 * t3495 + t3307 * t3422 + t3311 * t3358;
t3000 = t3279 * t3385 + t3310 * t3361 + t3314 * t3318;
t2999 = t3278 * t3384 + t3309 * t3360 + t3313 * t3317;
t2998 = t3277 * t3383 + t3308 * t3359 + t3312 * t3316;
t2994 = t3273 * t3382 + t3307 * t3358 + t3311 * t3315;
t1 = [(t3826 * t3924 - t3827 * t3925) * t4833 + t4956 * t4715 + t4955 * t4713 + t4954 * t4711 + t4953 * t4709 + t4964 * t4702 + t4963 * t4700 + t4962 * t4698 + t4961 * t4696 - t4960 * t4118 - t4959 * t4116 - t4958 * t4115 - t4957 * t4114 + (-(t3059 * t4696 + t3097 * t4709 - t3105 * t4114) * t3552 - (t3059 * t4697 + t3097 * t4708 - t3105 * t4111) * t3548 - (t3058 * t4698 + t3096 * t4711 - t3104 * t4115) * t3551 - (t3058 * t4699 + t3096 * t4710 - t3104 * t4112) * t3547 - (t3057 * t4700 + t3095 * t4713 - t3103 * t4116) * t3550 - (t3057 * t4701 + t3095 * t4712 - t3103 * t4113) * t3546 - (t3051 * t4702 + t3093 * t4715 - t3101 * t4118) * t3549 - (t3051 * t4703 + t3093 * t4714 - t3101 * t4117) * t3545) * t3858; -(t3826 * t3925 + t3827 * t3924) * t4833 + t4956 * t4714 + t4955 * t4712 + t4954 * t4710 + t4953 * t4708 + t4964 * t4703 + t4963 * t4701 + t4962 * t4699 + t4961 * t4697 - t4960 * t4117 - t4959 * t4113 - t4958 * t4112 - t4957 * t4111 + (-(t3062 * t4696 + t3100 * t4709 - t3108 * t4114) * t3552 - (t3062 * t4697 + t3100 * t4708 - t3108 * t4111) * t3548 - (t3061 * t4698 + t3099 * t4711 - t3107 * t4115) * t3551 - (t3061 * t4699 + t3099 * t4710 - t3107 * t4112) * t3547 - (t3060 * t4700 + t3098 * t4713 - t3106 * t4116) * t3550 - (t3060 * t4701 + t3098 * t4712 - t3106 * t4113) * t3546 - (t3052 * t4702 + t3094 * t4715 - t3102 * t4118) * t3549 - (t3052 * t4703 + t3094 * t4714 - t3102 * t4117) * t3545) * t3858; t4956 * t4695 + t4955 * t4694 + t4954 * t4693 + t4953 * t4692 + t4964 * t4687 + t4963 * t4686 + t4962 * t4685 + t4961 * t4684 + t4960 * t4298 + t4959 * t4297 + t4958 * t4296 + t4957 * t4295 + (-(t3092 * t4696 + t3276 * t4709 - t3306 * t4114) * t3552 - (t3092 * t4697 + t3276 * t4708 - t3306 * t4111) * t3548 - (t3091 * t4698 + t3275 * t4711 - t3305 * t4115) * t3551 - (t3091 * t4699 + t3275 * t4710 - t3305 * t4112) * t3547 - (t3090 * t4700 + t3274 * t4713 - t3304 * t4116) * t3550 - (t3090 * t4701 + t3274 * t4712 - t3304 * t4113) * t3546 - (t3089 * t4702 + t3272 * t4715 - t3303 * t4118) * t3549 - (t3089 * t4703 + t3272 * t4714 - t3303 * t4117) * t3545) * t3858; t4961 * t3314 + t4962 * t3313 + t4963 * t3312 + t4964 * t3311 + t4953 * t3310 + t4954 * t3309 + t4955 * t3308 + t4956 * t3307 + t4957 * t3279 + t4958 * t3278 + t4959 * t3277 + t4960 * t3273 + (-(t2998 * t4700 + t3015 * t4713 - t3019 * t4116) * t3550 - (t2998 * t4701 + t3015 * t4712 - t3019 * t4113) * t3546 - (t2994 * t4702 + t3014 * t4715 - t3018 * t4118) * t3549 - (t2994 * t4703 + t3014 * t4714 - t3018 * t4117) * t3545 - (t3000 * t4696 + t3017 * t4709 - t3021 * t4114) * t3552 - (t3000 * t4697 + t3017 * t4708 - t3021 * t4111) * t3548 - (t2999 * t4698 + t3016 * t4711 - t3020 * t4115) * t3551 - (t2999 * t4699 + t3016 * t4710 - t3020 * t4112) * t3547) * t3858;];
taucX  = t1;
