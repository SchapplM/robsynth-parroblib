% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6PRRRRR6V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [21x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6PRRRRR6V2G1A0_convert_par2_MPV_fixb.m

% Output:
% taugX [6x1]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-09-11 16:13
% Revision: 7993d029b5937b704dcf3fc7d8ae322038cdcbdd (2019-09-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6PRRRRR6V2G1A0_gravload_para_pf_mdp(xP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(21,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [21 1]), ...
  'P6PRRRRR6V2G1A0_gravload_para_pf_mdp: MDP has to be [21x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2019-09-11 16:11:34
% EndTime: 2019-09-11 16:12:59
% DurationCPUTime: 87.65s
% Computational Cost: add. (17992->1555), mult. (47817->2676), div. (240->36), fcn. (40632->50), ass. (0->1051)
t20166 = cos(pkin(5));
t20153 = t20166 ^ 2;
t20735 = t20153 - 0.1e1;
t20165 = cos(pkin(6));
t20152 = t20165 ^ 2;
t20219 = pkin(9) ^ 2;
t20097 = pkin(3) ^ 2 + t20152 * t20219 - t20219;
t20430 = t20097 * t20735;
t20162 = sin(pkin(5));
t20546 = t20162 * t20166;
t20100 = pkin(3) * t20546;
t20120 = pkin(9) * t20165 + pkin(8);
t20161 = sin(pkin(6));
t20123 = t20161 * pkin(9);
t20122 = pkin(2) * t20123;
t20460 = t20120 * t20100 - t20122;
t20168 = legFrame(6,3);
t20124 = sin(t20168);
t20130 = cos(t20168);
t20160 = sin(pkin(10));
t20164 = cos(pkin(10));
t19950 = t20124 * t20164 + t20130 * t20160;
t19956 = -t20124 * t20160 + t20130 * t20164;
t20181 = cos(qJ(2,6));
t20167 = cos(pkin(4));
t20175 = sin(qJ(2,6));
t20508 = t20167 * t20175;
t19795 = -t19950 * t20508 + t19956 * t20181;
t20174 = sin(qJ(3,6));
t20180 = cos(qJ(3,6));
t20502 = t20167 * t20181;
t20163 = sin(pkin(4));
t20547 = t20162 * t20163;
t20245 = (t19950 * t20502 + t19956 * t20175) * t20166 - t19950 * t20547;
t19616 = (t20245 * pkin(3) - t19795 * t20123) * t20180 + t20174 * (pkin(3) * t19795 + t20245 * t20123);
t20527 = t20166 * t20174;
t20612 = t20120 * t20162;
t19918 = pkin(3) * t20527 - t20612;
t20559 = t20161 * t20174;
t20101 = pkin(9) * t20559;
t20086 = t20101 + pkin(2);
t19862 = t19918 * t20181 + t20086 * t20175;
t20523 = t20166 * t20181;
t20373 = t20161 * t20523;
t20317 = pkin(9) * t20373;
t20703 = t20175 * pkin(3);
t20009 = t20317 - t20703;
t20437 = t20175 * t20123;
t20006 = pkin(3) * t20181 + t20166 * t20437;
t20637 = t20006 * t20167;
t20643 = (-t19918 * t20175 + t20086 * t20181) * t20167;
t19643 = (t19950 * t20637 - t19956 * t20009) * t20180 + t19862 * t19956 + t19950 * t20643;
t20599 = (t20166 + 0.1e1) * (t20166 - 0.1e1);
t20449 = pkin(3) * t20599;
t20299 = t20449 * t20123;
t19943 = t20167 * t20299;
t20298 = pkin(3) * t20317;
t20483 = t20175 * t20097;
t20154 = t20180 ^ 2;
t20742 = 0.2e1 * t20154;
t19771 = (t19943 - (t20298 - t20483 / 0.2e1) * t20547) * t20742;
t20311 = t20174 * t20430;
t19786 = -t20311 + t20460;
t20560 = t20161 * t20166;
t20438 = pkin(9) * t20560;
t20318 = t20162 * t20438;
t20285 = t20120 * t20318;
t20440 = t20153 * t20123;
t20334 = pkin(3) * t20440;
t20263 = t20174 * t20285 + pkin(3) * (pkin(2) * t20174 + t20123) - t20334;
t19843 = t20263 * t20167;
t20386 = t20097 * t20546;
t19922 = t20174 * t20386;
t20727 = pkin(3) * t20120;
t20341 = t20735 * t20727;
t19855 = t19922 + t20341;
t20427 = t20735 * t20174;
t19873 = t20120 * t20427 + t20100;
t20431 = (-t20152 + 0.1e1) * pkin(9);
t20049 = pkin(2) * t20559 + t20431;
t20085 = 0.2e1 * t20101 + pkin(2);
t20545 = t20162 * t20175;
t20398 = t20085 * t20545;
t20556 = t20161 * t20181;
t20717 = pkin(9) * t20163;
t19607 = 0.1e1 / (t19771 + (t19786 * t20167 + t20163 * (pkin(3) * t20398 + t19855 * t20181)) * t20180 + t19843 + (t19873 * t20556 + t20049 * t20545) * t20717);
t20119 = t20167 * t20162;
t19944 = t20163 * t20523 + t20119;
t19947 = t20166 * t20502 - t20547;
t19971 = -t20160 * t20175 + t20164 * t20502;
t19974 = t20160 * t20181 + t20164 * t20508;
t20485 = t20174 * t20175;
t19986 = -t20166 * t20485 + t20180 * t20181;
t20061 = g(1) * t20124 - g(2) * t20130;
t20067 = g(1) * t20130 + g(2) * t20124;
t20367 = t20164 * t20547;
t20482 = t20175 * t20180;
t19667 = t20067 * ((-t19947 * t20174 - t20167 * t20482) * t20160 + t20164 * t19986) + t20061 * (-t19974 * t20180 + (-t19971 * t20166 + t20367) * t20174) + (t19944 * t20174 + t20163 * t20482) * g(3);
t20661 = t19607 * t19667;
t20237 = -0.2e1 * t20298 + t20483;
t20725 = pkin(3) * t20167;
t20099 = t20161 * t20725;
t20327 = t20153 * t20099;
t20239 = pkin(9) * (t20099 - t20327);
t20107 = pkin(2) * t20545;
t20608 = t20120 * t20181;
t20292 = t20153 * t20608 + t20107 - t20608;
t20257 = t20292 * t20174;
t20282 = t20460 * t20167;
t20286 = t20167 * t20430;
t20441 = pkin(9) * (t20165 + 0.1e1) * (t20165 - 0.1e1);
t20325 = t20175 * t20441;
t20347 = 0.2e1 * t20437;
t20098 = pkin(9) * t20099;
t20459 = 0.2e1 * pkin(9) * t20327 - 0.2e1 * t20098;
t20121 = pkin(2) * t20725;
t20461 = t20167 * t20285 + t20121;
t20724 = pkin(3) * t20180;
t19589 = 0.1e1 / (t20459 * t20154 + (-t20286 * t20174 + t20282) * t20180 + t20461 * t20174 + t20239 + (t20257 * t20123 + t20292 * t20724 + (t20237 * t20154 + (pkin(3) * t20347 + t20097 * t20523) * t20174 * t20180 + pkin(9) * (pkin(3) * t20373 - t20325)) * t20162) * t20163);
t20484 = t20174 * t20181;
t19985 = t20166 * t20482 + t20484;
t20503 = t20167 * t20180;
t20356 = t20166 * t20503;
t20509 = t20167 * t20174;
t20524 = t20166 * t20180;
t20710 = g(3) * t20163;
t19683 = ((-t20160 * t20356 - t20164 * t20174) * t20175 + t20181 * (-t20160 * t20509 + t20164 * t20524)) * t20067 - t20061 * ((-t20160 * t20174 + t20164 * t20356) * t20175 + t20181 * (t20160 * t20524 + t20164 * t20509)) + t19985 * t20710;
t20690 = t19589 * t19683;
t20790 = t19616 * t20690 - t19643 * t20661;
t19876 = t19947 * t20180 - t20167 * t20485;
t19671 = (t19876 * t20160 + t19985 * t20164) * t20067 + t20061 * (t19876 * t20164 - t19985 * t20160) - (t19944 * t20180 - t20163 * t20485) * g(3);
t20660 = t19607 * t19671;
t20359 = t20166 * t20509;
t19679 = t20067 * ((-t20160 * t20359 + t20164 * t20180) * t20175 + t20181 * (t20160 * t20503 + t20164 * t20527)) + t20061 * ((-t20160 * t20180 - t20164 * t20359) * t20175 + t20181 * (-t20160 * t20527 + t20164 * t20503)) - t19986 * t20710;
t20691 = t19589 * t19679;
t20789 = t19616 * t20691 - t19643 * t20660;
t20169 = legFrame(5,3);
t20125 = sin(t20169);
t20131 = cos(t20169);
t19951 = t20125 * t20164 + t20131 * t20160;
t19957 = -t20125 * t20160 + t20131 * t20164;
t20183 = cos(qJ(2,5));
t20177 = sin(qJ(2,5));
t20506 = t20167 * t20177;
t19797 = -t19951 * t20506 + t19957 * t20183;
t20176 = sin(qJ(3,5));
t20182 = cos(qJ(3,5));
t20500 = t20167 * t20183;
t20244 = (t19951 * t20500 + t19957 * t20177) * t20166 - t19951 * t20547;
t19619 = (t20244 * pkin(3) - t19797 * t20123) * t20182 + t20176 * (pkin(3) * t19797 + t20244 * t20123);
t20526 = t20166 * t20176;
t19919 = pkin(3) * t20526 - t20612;
t20558 = t20161 * t20176;
t20103 = pkin(9) * t20558;
t20088 = t20103 + pkin(2);
t19864 = t19919 * t20183 + t20088 * t20177;
t20521 = t20166 * t20183;
t20372 = t20161 * t20521;
t20316 = pkin(9) * t20372;
t20702 = t20177 * pkin(3);
t20010 = t20316 - t20702;
t20436 = t20177 * t20123;
t20007 = pkin(3) * t20183 + t20166 * t20436;
t20636 = t20007 * t20167;
t20642 = (-t19919 * t20177 + t20088 * t20183) * t20167;
t19645 = (t19951 * t20636 - t19957 * t20010) * t20182 + t19864 * t19957 + t19951 * t20642;
t20297 = pkin(3) * t20316;
t20479 = t20177 * t20097;
t20155 = t20182 ^ 2;
t20741 = 0.2e1 * t20155;
t19772 = (t19943 - (t20297 - t20479 / 0.2e1) * t20547) * t20741;
t20310 = t20176 * t20430;
t19787 = -t20310 + t20460;
t20262 = t20176 * t20285 + pkin(3) * (pkin(2) * t20176 + t20123) - t20334;
t19844 = t20262 * t20167;
t19923 = t20176 * t20386;
t19856 = t19923 + t20341;
t20428 = t20176 * t20735;
t19874 = t20120 * t20428 + t20100;
t20050 = pkin(2) * t20558 + t20431;
t20087 = 0.2e1 * t20103 + pkin(2);
t20544 = t20162 * t20177;
t20397 = t20087 * t20544;
t20555 = t20161 * t20183;
t19608 = 0.1e1 / (t19772 + (t19787 * t20167 + t20163 * (pkin(3) * t20397 + t19856 * t20183)) * t20182 + t19844 + (t19874 * t20555 + t20050 * t20544) * t20717);
t19945 = t20163 * t20521 + t20119;
t19948 = t20166 * t20500 - t20547;
t19972 = -t20160 * t20177 + t20164 * t20500;
t19975 = t20160 * t20183 + t20164 * t20506;
t20481 = t20176 * t20177;
t19988 = -t20166 * t20481 + t20182 * t20183;
t20062 = g(1) * t20125 - g(2) * t20131;
t20068 = g(1) * t20131 + g(2) * t20125;
t20478 = t20177 * t20182;
t19668 = ((-t19948 * t20176 - t20167 * t20478) * t20160 + t20164 * t19988) * t20068 + t20062 * (-t19975 * t20182 + (-t19972 * t20166 + t20367) * t20176) + (t19945 * t20176 + t20163 * t20478) * g(3);
t20659 = t19608 * t19668;
t20236 = -0.2e1 * t20297 + t20479;
t20108 = pkin(2) * t20544;
t20607 = t20120 * t20183;
t20291 = t20153 * t20607 + t20108 - t20607;
t20256 = t20291 * t20176;
t20324 = t20177 * t20441;
t20346 = 0.2e1 * t20436;
t20723 = pkin(3) * t20182;
t19590 = 0.1e1 / (t20459 * t20155 + (-t20286 * t20176 + t20282) * t20182 + t20461 * t20176 + t20239 + (t20256 * t20123 + t20291 * t20723 + (t20236 * t20155 + (pkin(3) * t20346 + t20097 * t20521) * t20176 * t20182 + pkin(9) * (pkin(3) * t20372 - t20324)) * t20162) * t20163);
t20480 = t20176 * t20183;
t19987 = t20166 * t20478 + t20480;
t20501 = t20167 * t20182;
t20355 = t20166 * t20501;
t20507 = t20167 * t20176;
t20522 = t20166 * t20182;
t19681 = t20068 * ((-t20160 * t20355 - t20164 * t20176) * t20177 + t20183 * (-t20160 * t20507 + t20164 * t20522)) - ((-t20160 * t20176 + t20164 * t20355) * t20177 + t20183 * (t20160 * t20522 + t20164 * t20507)) * t20062 + t19987 * t20710;
t20685 = t19590 * t19681;
t20788 = t19619 * t20685 - t19645 * t20659;
t19877 = t19948 * t20182 - t20167 * t20481;
t19672 = (t19877 * t20160 + t19987 * t20164) * t20068 + (t19877 * t20164 - t19987 * t20160) * t20062 - (t19945 * t20182 - t20163 * t20481) * g(3);
t20658 = t19608 * t19672;
t20358 = t20166 * t20507;
t19680 = t20068 * ((-t20160 * t20358 + t20164 * t20182) * t20177 + t20183 * (t20160 * t20501 + t20164 * t20526)) + t20062 * ((-t20160 * t20182 - t20164 * t20358) * t20177 + t20183 * (-t20160 * t20526 + t20164 * t20501)) - t19988 * t20710;
t20686 = t19590 * t19680;
t20787 = t19619 * t20686 - t19645 * t20658;
t20170 = legFrame(4,3);
t20126 = sin(t20170);
t20132 = cos(t20170);
t19952 = t20126 * t20164 + t20132 * t20160;
t19958 = -t20126 * t20160 + t20132 * t20164;
t20185 = cos(qJ(2,4));
t20179 = sin(qJ(2,4));
t20504 = t20167 * t20179;
t19799 = -t19952 * t20504 + t19958 * t20185;
t20178 = sin(qJ(3,4));
t20184 = cos(qJ(3,4));
t20498 = t20167 * t20185;
t20243 = (t19952 * t20498 + t19958 * t20179) * t20166 - t19952 * t20547;
t19622 = (t20243 * pkin(3) - t19799 * t20123) * t20184 + t20178 * (pkin(3) * t19799 + t20243 * t20123);
t20525 = t20166 * t20178;
t19920 = pkin(3) * t20525 - t20612;
t20557 = t20161 * t20178;
t20105 = pkin(9) * t20557;
t20090 = t20105 + pkin(2);
t19866 = t19920 * t20185 + t20090 * t20179;
t20519 = t20166 * t20185;
t20371 = t20161 * t20519;
t20315 = pkin(9) * t20371;
t20701 = t20179 * pkin(3);
t20011 = t20315 - t20701;
t20435 = t20179 * t20123;
t20008 = pkin(3) * t20185 + t20166 * t20435;
t20635 = t20008 * t20167;
t20641 = (-t19920 * t20179 + t20090 * t20185) * t20167;
t19647 = (t19952 * t20635 - t19958 * t20011) * t20184 + t19866 * t19958 + t19952 * t20641;
t20296 = pkin(3) * t20315;
t20475 = t20179 * t20097;
t20156 = t20184 ^ 2;
t20740 = 0.2e1 * t20156;
t19773 = (t19943 - (t20296 - t20475 / 0.2e1) * t20547) * t20740;
t20309 = t20178 * t20430;
t19788 = -t20309 + t20460;
t20261 = t20178 * t20285 + pkin(3) * (pkin(2) * t20178 + t20123) - t20334;
t19845 = t20261 * t20167;
t19924 = t20178 * t20386;
t19857 = t19924 + t20341;
t20426 = t20735 * t20178;
t19875 = t20120 * t20426 + t20100;
t20051 = pkin(2) * t20557 + t20431;
t20089 = 0.2e1 * t20105 + pkin(2);
t20543 = t20162 * t20179;
t20396 = t20089 * t20543;
t20554 = t20161 * t20185;
t19609 = 0.1e1 / (t19773 + (t19788 * t20167 + t20163 * (pkin(3) * t20396 + t19857 * t20185)) * t20184 + t19845 + (t19875 * t20554 + t20051 * t20543) * t20717);
t19946 = t20163 * t20519 + t20119;
t19949 = t20166 * t20498 - t20547;
t19973 = -t20160 * t20179 + t20164 * t20498;
t19976 = t20160 * t20185 + t20164 * t20504;
t20477 = t20178 * t20179;
t19990 = -t20166 * t20477 + t20184 * t20185;
t20063 = g(1) * t20126 - g(2) * t20132;
t20069 = g(1) * t20132 + g(2) * t20126;
t20474 = t20179 * t20184;
t19669 = ((-t19949 * t20178 - t20167 * t20474) * t20160 + t20164 * t19990) * t20069 + t20063 * (-t19976 * t20184 + (-t19973 * t20166 + t20367) * t20178) + (t19946 * t20178 + t20163 * t20474) * g(3);
t20657 = t19609 * t19669;
t20235 = -0.2e1 * t20296 + t20475;
t20109 = pkin(2) * t20543;
t20606 = t20120 * t20185;
t20290 = t20153 * t20606 + t20109 - t20606;
t20255 = t20290 * t20178;
t20323 = t20179 * t20441;
t20345 = 0.2e1 * t20435;
t20722 = pkin(3) * t20184;
t19591 = 0.1e1 / (t20459 * t20156 + (-t20286 * t20178 + t20282) * t20184 + t20461 * t20178 + t20239 + (t20255 * t20123 + t20290 * t20722 + (t20235 * t20156 + (pkin(3) * t20345 + t20097 * t20519) * t20178 * t20184 + (pkin(3) * t20371 - t20323) * pkin(9)) * t20162) * t20163);
t20476 = t20178 * t20185;
t19989 = t20166 * t20474 + t20476;
t20499 = t20167 * t20184;
t20354 = t20166 * t20499;
t20505 = t20167 * t20178;
t20520 = t20166 * t20184;
t19684 = ((-t20160 * t20354 - t20164 * t20178) * t20179 + t20185 * (-t20160 * t20505 + t20164 * t20520)) * t20069 - t20063 * ((-t20160 * t20178 + t20164 * t20354) * t20179 + t20185 * (t20160 * t20520 + t20164 * t20505)) + t19989 * t20710;
t20680 = t19591 * t19684;
t20786 = t19622 * t20680 - t19647 * t20657;
t19878 = t19949 * t20184 - t20167 * t20477;
t19670 = t20069 * (t19878 * t20160 + t19989 * t20164) + (t19878 * t20164 - t19989 * t20160) * t20063 - g(3) * (t19946 * t20184 - t20163 * t20477);
t20656 = t19609 * t19670;
t20357 = t20166 * t20505;
t19682 = ((-t20160 * t20357 + t20164 * t20184) * t20179 + t20185 * (t20160 * t20499 + t20164 * t20525)) * t20069 + ((-t20160 * t20184 - t20164 * t20357) * t20179 + t20185 * (-t20160 * t20525 + t20164 * t20499)) * t20063 - t19990 * t20710;
t20681 = t19591 * t19682;
t20785 = t19622 * t20681 - t19647 * t20656;
t19649 = (t19950 * t20009 + t19956 * t20637) * t20180 - t19862 * t19950 + t19956 * t20643;
t19796 = t19950 * t20181 + t19956 * t20508;
t19802 = -t19950 * t20175 + t19956 * t20502;
t20439 = t20163 * t20123;
t20319 = t20162 * t20439;
t19891 = t19956 * t20319;
t20333 = (-pkin(3) * t19796 + t19802 * t20438 - t19891) * t20174 + (t19796 * t20123 + (t19802 * t20166 - t19956 * t20547) * pkin(3)) * t20180;
t20784 = t19649 * t20660 - t20333 * t20691;
t20783 = t19649 * t20661 - t20333 * t20690;
t19651 = (t19951 * t20010 + t19957 * t20636) * t20182 - t19864 * t19951 + t19957 * t20642;
t19798 = t19951 * t20183 + t19957 * t20506;
t19804 = -t19951 * t20177 + t19957 * t20500;
t19892 = t19957 * t20319;
t20332 = (-pkin(3) * t19798 + t19804 * t20438 - t19892) * t20176 + (t19798 * t20123 + (t19804 * t20166 - t19957 * t20547) * pkin(3)) * t20182;
t20782 = t19651 * t20658 - t20332 * t20686;
t20781 = t19651 * t20659 - t20332 * t20685;
t19653 = (t19952 * t20011 + t19958 * t20635) * t20184 - t19866 * t19952 + t19958 * t20641;
t19800 = t19952 * t20185 + t19958 * t20504;
t19806 = -t19952 * t20179 + t19958 * t20498;
t19893 = t19958 * t20319;
t20331 = (-pkin(3) * t19800 + t19806 * t20438 - t19893) * t20178 + (t19800 * t20123 + (t19806 * t20166 - t19958 * t20547) * pkin(3)) * t20184;
t20780 = t19653 * t20656 - t20331 * t20681;
t20779 = t19653 * t20657 - t20331 * t20680;
t20171 = legFrame(3,3);
t20127 = sin(t20171);
t20133 = cos(t20171);
t19953 = t20127 * t20164 + t20133 * t20160;
t19959 = -t20127 * t20160 + t20133 * t20164;
t20193 = cos(qJ(2,3));
t20187 = sin(qJ(2,3));
t20496 = t20167 * t20187;
t19819 = -t19953 * t20496 + t19959 * t20193;
t20186 = sin(qJ(3,3));
t20192 = cos(qJ(3,3));
t20490 = t20167 * t20193;
t20242 = (t19953 * t20490 + t19959 * t20187) * t20166 - t19953 * t20547;
t19628 = (t20242 * pkin(3) - t19819 * t20123) * t20192 + t20186 * (pkin(3) * t19819 + t20242 * t20123);
t20518 = t20166 * t20186;
t19925 = pkin(3) * t20518 - t20612;
t20553 = t20161 * t20186;
t20110 = pkin(9) * t20553;
t20092 = t20110 + pkin(2);
t19868 = t19925 * t20193 + t20092 * t20187;
t20514 = t20166 * t20193;
t20370 = t20161 * t20514;
t20314 = pkin(9) * t20370;
t20700 = t20187 * pkin(3);
t20021 = t20314 - t20700;
t20434 = t20187 * t20123;
t20018 = pkin(3) * t20193 + t20166 * t20434;
t20631 = t20018 * t20167;
t20640 = (-t19925 * t20187 + t20092 * t20193) * t20167;
t19655 = (t19953 * t20631 - t19959 * t20021) * t20192 + t19868 * t19959 + t19953 * t20640;
t20295 = pkin(3) * t20314;
t20471 = t20187 * t20097;
t20157 = t20192 ^ 2;
t20739 = 0.2e1 * t20157;
t19774 = (t19943 - (t20295 - t20471 / 0.2e1) * t20547) * t20739;
t20308 = t20186 * t20430;
t19792 = -t20308 + t20460;
t20260 = t20186 * t20285 + pkin(3) * (pkin(2) * t20186 + t20123) - t20334;
t19846 = t20260 * t20167;
t19934 = t20186 * t20386;
t19858 = t19934 + t20341;
t20425 = t20735 * t20186;
t19879 = t20120 * t20425 + t20100;
t20055 = pkin(2) * t20553 + t20431;
t20091 = 0.2e1 * t20110 + pkin(2);
t20542 = t20162 * t20187;
t20395 = t20091 * t20542;
t20550 = t20161 * t20193;
t19610 = 0.1e1 / (t19774 + (t19792 * t20167 + t20163 * (pkin(3) * t20395 + t19858 * t20193)) * t20192 + t19846 + (t19879 * t20550 + t20055 * t20542) * t20717);
t19965 = t20163 * t20514 + t20119;
t19968 = t20166 * t20490 - t20547;
t19991 = -t20160 * t20187 + t20164 * t20490;
t19994 = t20160 * t20193 + t20164 * t20496;
t20473 = t20186 * t20187;
t20001 = -t20166 * t20473 + t20192 * t20193;
t20064 = g(1) * t20127 - g(2) * t20133;
t20070 = g(1) * t20133 + g(2) * t20127;
t20470 = t20187 * t20192;
t19675 = ((-t19968 * t20186 - t20167 * t20470) * t20160 + t20164 * t20001) * t20070 + t20064 * (-t19994 * t20192 + (-t19991 * t20166 + t20367) * t20186) + (t19965 * t20186 + t20163 * t20470) * g(3);
t20655 = t19610 * t19675;
t20234 = -0.2e1 * t20295 + t20471;
t20116 = pkin(2) * t20542;
t20602 = t20120 * t20193;
t20289 = t20153 * t20602 + t20116 - t20602;
t20254 = t20289 * t20186;
t20322 = t20187 * t20441;
t20344 = 0.2e1 * t20434;
t20721 = pkin(3) * t20192;
t19592 = 0.1e1 / (t20459 * t20157 + (-t20286 * t20186 + t20282) * t20192 + t20461 * t20186 + t20239 + (t20254 * t20123 + t20289 * t20721 + (t20234 * t20157 + (pkin(3) * t20344 + t20097 * t20514) * t20186 * t20192 + pkin(9) * (pkin(3) * t20370 - t20322)) * t20162) * t20163);
t20472 = t20186 * t20193;
t20000 = t20166 * t20470 + t20472;
t20491 = t20167 * t20192;
t20350 = t20166 * t20491;
t20497 = t20167 * t20186;
t20515 = t20166 * t20192;
t19689 = ((-t20160 * t20350 - t20164 * t20186) * t20187 + t20193 * (-t20160 * t20497 + t20164 * t20515)) * t20070 - ((-t20160 * t20186 + t20164 * t20350) * t20187 + t20193 * (t20160 * t20515 + t20164 * t20497)) * t20064 + t20000 * t20710;
t20675 = t19592 * t19689;
t20778 = t19628 * t20675 - t19655 * t20655;
t19882 = t19968 * t20192 - t20167 * t20473;
t19678 = (t19882 * t20160 + t20000 * t20164) * t20070 + t20064 * (t19882 * t20164 - t20000 * t20160) - (t19965 * t20192 - t20163 * t20473) * g(3);
t20654 = t19610 * t19678;
t20353 = t20166 * t20497;
t19687 = ((-t20160 * t20353 + t20164 * t20192) * t20187 + t20193 * (t20160 * t20491 + t20164 * t20518)) * t20070 + ((-t20160 * t20192 - t20164 * t20353) * t20187 + t20193 * (-t20160 * t20518 + t20164 * t20491)) * t20064 - t20001 * t20710;
t20676 = t19592 * t19687;
t20777 = t19628 * t20676 - t19655 * t20654;
t20172 = legFrame(2,3);
t20128 = sin(t20172);
t20134 = cos(t20172);
t19954 = t20128 * t20164 + t20134 * t20160;
t19960 = -t20128 * t20160 + t20134 * t20164;
t20195 = cos(qJ(2,2));
t20189 = sin(qJ(2,2));
t20494 = t20167 * t20189;
t19821 = -t19954 * t20494 + t19960 * t20195;
t20188 = sin(qJ(3,2));
t20194 = cos(qJ(3,2));
t20488 = t20167 * t20195;
t20241 = (t19954 * t20488 + t19960 * t20189) * t20166 - t19954 * t20547;
t19631 = (t20241 * pkin(3) - t19821 * t20123) * t20194 + t20188 * (pkin(3) * t19821 + t20241 * t20123);
t20517 = t20166 * t20188;
t19926 = pkin(3) * t20517 - t20612;
t20552 = t20161 * t20188;
t20112 = pkin(9) * t20552;
t20094 = t20112 + pkin(2);
t19870 = t19926 * t20195 + t20094 * t20189;
t20512 = t20166 * t20195;
t20369 = t20161 * t20512;
t20313 = pkin(9) * t20369;
t20699 = t20189 * pkin(3);
t20022 = t20313 - t20699;
t20433 = t20189 * t20123;
t20019 = pkin(3) * t20195 + t20166 * t20433;
t20630 = t20019 * t20167;
t20639 = (-t19926 * t20189 + t20094 * t20195) * t20167;
t19657 = (t19954 * t20630 - t19960 * t20022) * t20194 + t19870 * t19960 + t19954 * t20639;
t20294 = pkin(3) * t20313;
t20467 = t20189 * t20097;
t20158 = t20194 ^ 2;
t20738 = 0.2e1 * t20158;
t19775 = (t19943 - (t20294 - t20467 / 0.2e1) * t20547) * t20738;
t20307 = t20188 * t20430;
t19793 = -t20307 + t20460;
t20259 = t20188 * t20285 + pkin(3) * (pkin(2) * t20188 + t20123) - t20334;
t19847 = t20259 * t20167;
t19935 = t20188 * t20386;
t19859 = t19935 + t20341;
t20424 = t20735 * t20188;
t19880 = t20120 * t20424 + t20100;
t20056 = pkin(2) * t20552 + t20431;
t20093 = 0.2e1 * t20112 + pkin(2);
t20541 = t20162 * t20189;
t20394 = t20093 * t20541;
t20549 = t20161 * t20195;
t19611 = 0.1e1 / (t19775 + (t19793 * t20167 + t20163 * (pkin(3) * t20394 + t19859 * t20195)) * t20194 + t19847 + (t19880 * t20549 + t20056 * t20541) * t20717);
t19966 = t20163 * t20512 + t20119;
t19969 = t20166 * t20488 - t20547;
t19992 = -t20160 * t20189 + t20164 * t20488;
t19995 = t20160 * t20195 + t20164 * t20494;
t20469 = t20188 * t20189;
t20003 = -t20166 * t20469 + t20194 * t20195;
t20065 = g(1) * t20128 - g(2) * t20134;
t20071 = g(1) * t20134 + g(2) * t20128;
t20466 = t20189 * t20194;
t19673 = t20071 * ((-t19969 * t20188 - t20167 * t20466) * t20160 + t20164 * t20003) + t20065 * (-t19995 * t20194 + (-t19992 * t20166 + t20367) * t20188) + (t19966 * t20188 + t20163 * t20466) * g(3);
t20653 = t19611 * t19673;
t20233 = -0.2e1 * t20294 + t20467;
t20117 = pkin(2) * t20541;
t20601 = t20120 * t20195;
t20288 = t20153 * t20601 + t20117 - t20601;
t20253 = t20288 * t20188;
t20321 = t20189 * t20441;
t20343 = 0.2e1 * t20433;
t20720 = pkin(3) * t20194;
t19593 = 0.1e1 / (t20459 * t20158 + (-t20286 * t20188 + t20282) * t20194 + t20461 * t20188 + t20239 + (t20253 * t20123 + t20288 * t20720 + (t20233 * t20158 + (pkin(3) * t20343 + t20097 * t20512) * t20188 * t20194 + pkin(9) * (pkin(3) * t20369 - t20321)) * t20162) * t20163);
t20468 = t20188 * t20195;
t20002 = t20166 * t20466 + t20468;
t20489 = t20167 * t20194;
t20349 = t20166 * t20489;
t20495 = t20167 * t20188;
t20513 = t20166 * t20194;
t19690 = ((-t20160 * t20349 - t20164 * t20188) * t20189 + t20195 * (-t20160 * t20495 + t20164 * t20513)) * t20071 - ((-t20160 * t20188 + t20164 * t20349) * t20189 + t20195 * (t20160 * t20513 + t20164 * t20495)) * t20065 + t20002 * t20710;
t20670 = t19593 * t19690;
t20776 = t19631 * t20670 - t19657 * t20653;
t19883 = t19969 * t20194 - t20167 * t20469;
t19676 = t20071 * (t19883 * t20160 + t20002 * t20164) + t20065 * (t19883 * t20164 - t20002 * t20160) - (t19966 * t20194 - t20163 * t20469) * g(3);
t20652 = t19611 * t19676;
t20352 = t20166 * t20495;
t19688 = ((-t20160 * t20352 + t20164 * t20194) * t20189 + t20195 * (t20160 * t20489 + t20164 * t20517)) * t20071 + ((-t20160 * t20194 - t20164 * t20352) * t20189 + t20195 * (-t20160 * t20517 + t20164 * t20489)) * t20065 - t20003 * t20710;
t20671 = t19593 * t19688;
t20775 = t19631 * t20671 - t19657 * t20652;
t20173 = legFrame(1,3);
t20129 = sin(t20173);
t20135 = cos(t20173);
t19955 = t20129 * t20164 + t20135 * t20160;
t19961 = -t20129 * t20160 + t20135 * t20164;
t20197 = cos(qJ(2,1));
t20191 = sin(qJ(2,1));
t20492 = t20167 * t20191;
t19823 = -t19955 * t20492 + t19961 * t20197;
t20190 = sin(qJ(3,1));
t20196 = cos(qJ(3,1));
t20486 = t20167 * t20197;
t20240 = (t19955 * t20486 + t19961 * t20191) * t20166 - t19955 * t20547;
t19634 = (t20240 * pkin(3) - t19823 * t20123) * t20196 + t20190 * (pkin(3) * t19823 + t20240 * t20123);
t20516 = t20166 * t20190;
t19927 = pkin(3) * t20516 - t20612;
t20551 = t20161 * t20190;
t20114 = pkin(9) * t20551;
t20096 = t20114 + pkin(2);
t19872 = t19927 * t20197 + t20096 * t20191;
t20510 = t20166 * t20197;
t20368 = t20161 * t20510;
t20312 = pkin(9) * t20368;
t20698 = t20191 * pkin(3);
t20023 = t20312 - t20698;
t20432 = t20191 * t20123;
t20020 = pkin(3) * t20197 + t20166 * t20432;
t20629 = t20020 * t20167;
t20638 = (-t19927 * t20191 + t20096 * t20197) * t20167;
t19659 = (t19955 * t20629 - t19961 * t20023) * t20196 + t19872 * t19961 + t19955 * t20638;
t20293 = pkin(3) * t20312;
t20463 = t20191 * t20097;
t20159 = t20196 ^ 2;
t20737 = 0.2e1 * t20159;
t19776 = (t19943 - (t20293 - t20463 / 0.2e1) * t20547) * t20737;
t20306 = t20190 * t20430;
t19794 = -t20306 + t20460;
t20258 = t20190 * t20285 + pkin(3) * (pkin(2) * t20190 + t20123) - t20334;
t19848 = t20258 * t20167;
t19936 = t20190 * t20386;
t19860 = t19936 + t20341;
t20423 = t20735 * t20190;
t19881 = t20120 * t20423 + t20100;
t20057 = pkin(2) * t20551 + t20431;
t20095 = 0.2e1 * t20114 + pkin(2);
t20540 = t20162 * t20191;
t20393 = t20095 * t20540;
t20548 = t20161 * t20197;
t19612 = 0.1e1 / (t19776 + (t19794 * t20167 + t20163 * (pkin(3) * t20393 + t19860 * t20197)) * t20196 + t19848 + (t19881 * t20548 + t20057 * t20540) * t20717);
t19967 = t20163 * t20510 + t20119;
t19970 = t20166 * t20486 - t20547;
t19993 = -t20160 * t20191 + t20164 * t20486;
t19996 = t20160 * t20197 + t20164 * t20492;
t20465 = t20190 * t20191;
t20005 = -t20166 * t20465 + t20196 * t20197;
t20066 = g(1) * t20129 - g(2) * t20135;
t20072 = g(1) * t20135 + g(2) * t20129;
t20462 = t20191 * t20196;
t19674 = t20072 * ((-t19970 * t20190 - t20167 * t20462) * t20160 + t20164 * t20005) + t20066 * (-t19996 * t20196 + (-t19993 * t20166 + t20367) * t20190) + g(3) * (t19967 * t20190 + t20163 * t20462);
t20651 = t19612 * t19674;
t20232 = -0.2e1 * t20293 + t20463;
t20118 = pkin(2) * t20540;
t20600 = t20120 * t20197;
t20287 = t20153 * t20600 + t20118 - t20600;
t20252 = t20287 * t20190;
t20320 = t20191 * t20441;
t20342 = 0.2e1 * t20432;
t20719 = pkin(3) * t20196;
t19594 = 0.1e1 / (t20459 * t20159 + (-t20286 * t20190 + t20282) * t20196 + t20461 * t20190 + t20239 + (t20252 * t20123 + t20287 * t20719 + (t20232 * t20159 + (pkin(3) * t20342 + t20097 * t20510) * t20190 * t20196 + pkin(9) * (pkin(3) * t20368 - t20320)) * t20162) * t20163);
t20464 = t20190 * t20197;
t20004 = t20166 * t20462 + t20464;
t20487 = t20167 * t20196;
t20348 = t20166 * t20487;
t20493 = t20167 * t20190;
t20511 = t20166 * t20196;
t19686 = t20072 * ((-t20160 * t20348 - t20164 * t20190) * t20191 + t20197 * (-t20160 * t20493 + t20164 * t20511)) - ((-t20160 * t20190 + t20164 * t20348) * t20191 + t20197 * (t20160 * t20511 + t20164 * t20493)) * t20066 + t20004 * t20710;
t20665 = t19594 * t19686;
t20774 = t19634 * t20665 - t19659 * t20651;
t19884 = t19970 * t20196 - t20167 * t20465;
t19677 = t20072 * (t19884 * t20160 + t20004 * t20164) + (t19884 * t20164 - t20004 * t20160) * t20066 - (t19967 * t20196 - t20163 * t20465) * g(3);
t20650 = t19612 * t19677;
t20351 = t20166 * t20493;
t19685 = t20072 * ((-t20160 * t20351 + t20164 * t20196) * t20191 + t20197 * (t20160 * t20487 + t20164 * t20516)) + t20066 * ((-t20160 * t20196 - t20164 * t20351) * t20191 + t20197 * (-t20160 * t20516 + t20164 * t20487)) - t20005 * t20710;
t20666 = t19594 * t19685;
t20773 = t19634 * t20666 - t19659 * t20650;
t19661 = (t19953 * t20021 + t19959 * t20631) * t20192 - t19868 * t19953 + t19959 * t20640;
t19820 = t19953 * t20193 + t19959 * t20496;
t19826 = -t19953 * t20187 + t19959 * t20490;
t19894 = t19959 * t20319;
t20330 = (-pkin(3) * t19820 + t19826 * t20438 - t19894) * t20186 + (t19820 * t20123 + (t19826 * t20166 - t19959 * t20547) * pkin(3)) * t20192;
t20772 = t19661 * t20654 - t20330 * t20676;
t20771 = t19661 * t20655 - t20330 * t20675;
t19663 = (t19954 * t20022 + t19960 * t20630) * t20194 - t19870 * t19954 + t19960 * t20639;
t19822 = t19954 * t20195 + t19960 * t20494;
t19828 = -t19954 * t20189 + t19960 * t20488;
t19895 = t19960 * t20319;
t20329 = (-pkin(3) * t19822 + t19828 * t20438 - t19895) * t20188 + (t19822 * t20123 + (t19828 * t20166 - t19960 * t20547) * pkin(3)) * t20194;
t20770 = t19663 * t20652 - t20329 * t20671;
t20769 = t19663 * t20653 - t20329 * t20670;
t19665 = (t19955 * t20023 + t19961 * t20629) * t20196 - t19872 * t19955 + t19961 * t20638;
t19824 = t19955 * t20197 + t19961 * t20492;
t19830 = -t19955 * t20191 + t19961 * t20486;
t19896 = t19961 * t20319;
t20328 = (-pkin(3) * t19824 + t19830 * t20438 - t19896) * t20190 + (t19824 * t20123 + (t19830 * t20166 - t19961 * t20547) * pkin(3)) * t20196;
t20768 = t19665 * t20650 - t20328 * t20666;
t20767 = t19665 * t20651 - t20328 * t20665;
t20457 = 0.2e1 * t20599;
t20766 = t20163 * (t20159 * t20457 - t20735);
t20765 = t20163 * (t20158 * t20457 - t20735);
t20764 = t20163 * (t20157 * t20457 - t20735);
t20763 = t20163 * (t20156 * t20457 - t20735);
t20762 = t20163 * (t20155 * t20457 - t20735);
t20761 = t20163 * (t20154 * t20457 - t20735);
t20748 = t20546 * (t20737 - 0.1e1);
t20747 = t20546 * (t20738 - 0.1e1);
t20746 = t20546 * (t20739 - 0.1e1);
t20745 = t20546 * (t20740 - 0.1e1);
t20744 = t20546 * (t20741 - 0.1e1);
t20743 = t20546 * (t20742 - 0.1e1);
t20736 = g(3) * MDP(1);
t20728 = pkin(2) * t20163;
t20726 = pkin(3) * t20163;
t20718 = pkin(9) * t20162;
t20081 = t20120 * t20725;
t20429 = t20120 * t20735;
t20305 = t20181 * t20429;
t20326 = t20120 * t20439;
t20365 = t20163 * t20484;
t20536 = t20163 * t20181;
t20539 = t20163 * t20175;
t20716 = g(3) / (t19771 + ((t20097 * t20365 + t20081) * t20546 + (t20305 + t20398) * t20726 + (-t20311 - t20122) * t20167) * t20180 + ((pkin(3) * t20536 + t20120 * t20509) * t20560 + t20049 * t20539) * t20718 + (t20120 * t20365 - t20725) * t20440 + (-t20181 * t20326 + t20121) * t20174 + t20098);
t20304 = t20183 * t20429;
t20364 = t20163 * t20480;
t20535 = t20163 * t20183;
t20538 = t20163 * t20177;
t20715 = g(3) / (t19772 + ((t20097 * t20364 + t20081) * t20546 + (t20304 + t20397) * t20726 + (-t20310 - t20122) * t20167) * t20182 + ((pkin(3) * t20535 + t20120 * t20507) * t20560 + t20050 * t20538) * t20718 + (t20120 * t20364 - t20725) * t20440 + (-t20183 * t20326 + t20121) * t20176 + t20098);
t20303 = t20185 * t20429;
t20363 = t20163 * t20476;
t20534 = t20163 * t20185;
t20537 = t20163 * t20179;
t20714 = g(3) / (t19773 + ((t20097 * t20363 + t20081) * t20546 + (t20303 + t20396) * t20726 + (-t20309 - t20122) * t20167) * t20184 + ((pkin(3) * t20534 + t20120 * t20505) * t20560 + t20051 * t20537) * t20718 + (t20120 * t20363 - t20725) * t20440 + (-t20185 * t20326 + t20121) * t20178 + t20098);
t20302 = t20193 * t20429;
t20362 = t20163 * t20472;
t20530 = t20163 * t20193;
t20533 = t20163 * t20187;
t20713 = g(3) / (t19774 + ((t20097 * t20362 + t20081) * t20546 + (t20302 + t20395) * t20726 + (-t20308 - t20122) * t20167) * t20192 + ((pkin(3) * t20530 + t20120 * t20497) * t20560 + t20055 * t20533) * t20718 + (t20120 * t20362 - t20725) * t20440 + (-t20193 * t20326 + t20121) * t20186 + t20098);
t20301 = t20195 * t20429;
t20361 = t20163 * t20468;
t20529 = t20163 * t20195;
t20532 = t20163 * t20189;
t20712 = g(3) / (t19775 + ((t20097 * t20361 + t20081) * t20546 + (t20301 + t20394) * t20726 + (-t20307 - t20122) * t20167) * t20194 + ((pkin(3) * t20529 + t20120 * t20495) * t20560 + t20056 * t20532) * t20718 + (t20120 * t20361 - t20725) * t20440 + (-t20195 * t20326 + t20121) * t20188 + t20098);
t20300 = t20197 * t20429;
t20360 = t20163 * t20464;
t20528 = t20163 * t20197;
t20531 = t20163 * t20191;
t20711 = g(3) / (t19776 + ((t20097 * t20360 + t20081) * t20546 + (t20300 + t20393) * t20726 + (-t20306 - t20122) * t20167) * t20196 + ((pkin(3) * t20528 + t20120 * t20493) * t20560 + t20057 * t20531) * t20718 + (t20120 * t20360 - t20725) * t20440 + (-t20197 * t20326 + t20121) * t20190 + t20098);
t20709 = t20085 * pkin(3);
t20708 = t20087 * pkin(3);
t20707 = t20089 * pkin(3);
t20706 = t20091 * pkin(3);
t20705 = t20093 * pkin(3);
t20704 = t20095 * pkin(3);
t20198 = xP(6);
t20146 = sin(t20198);
t20199 = xP(5);
t20147 = sin(t20199);
t20200 = xP(4);
t20148 = sin(t20200);
t20149 = cos(t20198);
t20151 = cos(t20200);
t20213 = koppelP(6,1);
t20566 = t20151 * t20213;
t20207 = koppelP(6,2);
t20572 = t20151 * t20207;
t20150 = cos(t20199);
t20201 = koppelP(6,3);
t20578 = t20150 * t20201;
t20587 = t20148 * t20213;
t20593 = t20148 * t20207;
t19759 = -t20148 * t20578 + (t20147 * t20587 + t20572) * t20149 + t20146 * (-t20147 * t20593 + t20566);
t20036 = -t20146 * t20207 + t20149 * t20213;
t19897 = t20036 * t20150 + t20147 * t20201;
t19715 = t19759 * t20164 - t19897 * t20160;
t19721 = t19759 * t20160 + t19897 * t20164;
t19849 = pkin(9) * t20049 + t20097 * t20154 + t20180 * t20709;
t19783 = t19849 * t20545;
t19885 = t20180 * t20438 - t19918;
t20284 = 0.2e1 * t20299;
t19931 = t20154 * t20284;
t20283 = -0.2e1 * pkin(3) * t20318;
t20030 = t20154 * t20283;
t20052 = t20086 + t20724;
t20697 = ((t19885 * t20175 + t20052 * t20181) * (t19715 * t20130 - t19721 * t20124) * t20167 - (t19715 * t20124 + t19721 * t20130) * (-t19885 * t20181 + t20052 * t20175)) / ((t19786 * t20180 + t19931 + t20263) * t20167 + ((t19855 * t20180 + t19873 * t20123 + t20030) * t20181 + t19783) * t20163);
t20214 = koppelP(5,1);
t20565 = t20151 * t20214;
t20208 = koppelP(5,2);
t20571 = t20151 * t20208;
t20202 = koppelP(5,3);
t20577 = t20150 * t20202;
t20586 = t20148 * t20214;
t20592 = t20148 * t20208;
t19760 = -t20148 * t20577 + (t20147 * t20586 + t20571) * t20149 + t20146 * (-t20147 * t20592 + t20565);
t20037 = -t20146 * t20208 + t20149 * t20214;
t19898 = t20037 * t20150 + t20147 * t20202;
t19716 = t19760 * t20164 - t19898 * t20160;
t19722 = t19760 * t20160 + t19898 * t20164;
t19850 = pkin(9) * t20050 + t20097 * t20155 + t20182 * t20708;
t19784 = t19850 * t20544;
t19886 = t20182 * t20438 - t19919;
t19932 = t20155 * t20284;
t20031 = t20155 * t20283;
t20053 = t20088 + t20723;
t20696 = ((t19886 * t20177 + t20053 * t20183) * (t19716 * t20131 - t19722 * t20125) * t20167 - (-t19886 * t20183 + t20053 * t20177) * (t19716 * t20125 + t19722 * t20131)) / ((t19787 * t20182 + t19932 + t20262) * t20167 + ((t19856 * t20182 + t19874 * t20123 + t20031) * t20183 + t19784) * t20163);
t20215 = koppelP(4,1);
t20564 = t20151 * t20215;
t20209 = koppelP(4,2);
t20570 = t20151 * t20209;
t20203 = koppelP(4,3);
t20576 = t20150 * t20203;
t20585 = t20148 * t20215;
t20591 = t20148 * t20209;
t19761 = -t20148 * t20576 + (t20147 * t20585 + t20570) * t20149 + t20146 * (-t20147 * t20591 + t20564);
t20038 = -t20146 * t20209 + t20149 * t20215;
t19899 = t20038 * t20150 + t20147 * t20203;
t19717 = t19761 * t20164 - t19899 * t20160;
t19723 = t19761 * t20160 + t19899 * t20164;
t19851 = pkin(9) * t20051 + t20097 * t20156 + t20184 * t20707;
t19785 = t19851 * t20543;
t19887 = t20184 * t20438 - t19920;
t19933 = t20156 * t20284;
t20032 = t20156 * t20283;
t20054 = t20090 + t20722;
t20695 = ((t19887 * t20179 + t20054 * t20185) * (t19717 * t20132 - t19723 * t20126) * t20167 - (-t19887 * t20185 + t20054 * t20179) * (t19717 * t20126 + t19723 * t20132)) / ((t19788 * t20184 + t19933 + t20261) * t20167 + ((t19857 * t20184 + t19875 * t20123 + t20032) * t20185 + t19785) * t20163);
t20216 = koppelP(3,1);
t20563 = t20151 * t20216;
t20210 = koppelP(3,2);
t20569 = t20151 * t20210;
t20204 = koppelP(3,3);
t20575 = t20150 * t20204;
t20584 = t20148 * t20216;
t20590 = t20148 * t20210;
t19762 = -t20148 * t20575 + (t20147 * t20584 + t20569) * t20149 + t20146 * (-t20147 * t20590 + t20563);
t20039 = -t20146 * t20210 + t20149 * t20216;
t19900 = t20039 * t20150 + t20147 * t20204;
t19718 = t19762 * t20164 - t19900 * t20160;
t19724 = t19762 * t20160 + t19900 * t20164;
t19852 = pkin(9) * t20055 + t20097 * t20157 + t20192 * t20706;
t19789 = t19852 * t20542;
t19888 = t20192 * t20438 - t19925;
t19937 = t20157 * t20284;
t20033 = t20157 * t20283;
t20058 = t20092 + t20721;
t20694 = ((t19888 * t20187 + t20058 * t20193) * (t19718 * t20133 - t19724 * t20127) * t20167 - (t19718 * t20127 + t19724 * t20133) * (-t19888 * t20193 + t20058 * t20187)) / ((t19792 * t20192 + t19937 + t20260) * t20167 + ((t19858 * t20192 + t19879 * t20123 + t20033) * t20193 + t19789) * t20163);
t20217 = koppelP(2,1);
t20562 = t20151 * t20217;
t20211 = koppelP(2,2);
t20568 = t20151 * t20211;
t20205 = koppelP(2,3);
t20574 = t20150 * t20205;
t20583 = t20148 * t20217;
t20589 = t20148 * t20211;
t19763 = -t20148 * t20574 + (t20147 * t20583 + t20568) * t20149 + t20146 * (-t20147 * t20589 + t20562);
t20040 = -t20146 * t20211 + t20149 * t20217;
t19901 = t20040 * t20150 + t20147 * t20205;
t19719 = t19763 * t20164 - t19901 * t20160;
t19725 = t19763 * t20160 + t19901 * t20164;
t19853 = pkin(9) * t20056 + t20097 * t20158 + t20194 * t20705;
t19790 = t19853 * t20541;
t19889 = t20194 * t20438 - t19926;
t19938 = t20158 * t20284;
t20034 = t20158 * t20283;
t20059 = t20094 + t20720;
t20693 = ((t19889 * t20189 + t20059 * t20195) * (t19719 * t20134 - t19725 * t20128) * t20167 - (-t19889 * t20195 + t20059 * t20189) * (t19719 * t20128 + t19725 * t20134)) / ((t19793 * t20194 + t19938 + t20259) * t20167 + ((t19859 * t20194 + t19880 * t20123 + t20034) * t20195 + t19790) * t20163);
t20218 = koppelP(1,1);
t20561 = t20151 * t20218;
t20212 = koppelP(1,2);
t20567 = t20151 * t20212;
t20206 = koppelP(1,3);
t20573 = t20150 * t20206;
t20582 = t20148 * t20218;
t20588 = t20148 * t20212;
t19764 = -t20148 * t20573 + (t20147 * t20582 + t20567) * t20149 + t20146 * (-t20147 * t20588 + t20561);
t20041 = -t20146 * t20212 + t20149 * t20218;
t19902 = t20041 * t20150 + t20147 * t20206;
t19720 = t19764 * t20164 - t19902 * t20160;
t19726 = t19764 * t20160 + t19902 * t20164;
t19854 = pkin(9) * t20057 + t20097 * t20159 + t20196 * t20704;
t19791 = t19854 * t20540;
t19890 = t20196 * t20438 - t19927;
t19939 = t20159 * t20284;
t20035 = t20159 * t20283;
t20060 = t20096 + t20719;
t20692 = ((t19720 * t20135 - t19726 * t20129) * (t19890 * t20191 + t20060 * t20197) * t20167 - (-t19890 * t20197 + t20060 * t20191) * (t19720 * t20129 + t19726 * t20135)) / ((t19794 * t20196 + t19939 + t20258) * t20167 + ((t19860 * t20196 + t19881 * t20123 + t20035) * t20197 + t19791) * t20163);
t19962 = t20160 * t20502 + t20164 * t20175;
t19745 = -g(3) * t20536 + t19962 * t20067 + t19971 * t20061;
t20689 = t19589 * t19745;
t19977 = -t20160 * t20508 + t20164 * t20181;
t19746 = g(3) * t20539 - t19974 * t20061 + t19977 * t20067;
t20688 = t19589 * t19746;
t20042 = t20146 * t20213 + t20149 * t20207;
t19777 = (t20036 * t20147 - t20578) * t20151 - t20148 * t20042;
t20687 = t19589 * t19777;
t19963 = t20160 * t20500 + t20164 * t20177;
t19747 = -g(3) * t20535 + t19963 * t20068 + t19972 * t20062;
t20684 = t19590 * t19747;
t19978 = -t20160 * t20506 + t20164 * t20183;
t19748 = g(3) * t20538 - t19975 * t20062 + t19978 * t20068;
t20683 = t19590 * t19748;
t20043 = t20146 * t20214 + t20149 * t20208;
t19778 = (t20037 * t20147 - t20577) * t20151 - t20148 * t20043;
t20682 = t19590 * t19778;
t19964 = t20160 * t20498 + t20164 * t20179;
t19749 = -g(3) * t20534 + t19964 * t20069 + t19973 * t20063;
t20679 = t19591 * t19749;
t19979 = -t20160 * t20504 + t20164 * t20185;
t19750 = g(3) * t20537 - t19976 * t20063 + t19979 * t20069;
t20678 = t19591 * t19750;
t20044 = t20146 * t20215 + t20149 * t20209;
t19779 = (t20038 * t20147 - t20576) * t20151 - t20148 * t20044;
t20677 = t19591 * t19779;
t19982 = t20160 * t20490 + t20164 * t20187;
t19751 = -g(3) * t20530 + t19982 * t20070 + t19991 * t20064;
t20674 = t19592 * t19751;
t19997 = -t20160 * t20496 + t20164 * t20193;
t19752 = g(3) * t20533 - t19994 * t20064 + t19997 * t20070;
t20673 = t19592 * t19752;
t20045 = t20146 * t20216 + t20149 * t20210;
t19780 = (t20039 * t20147 - t20575) * t20151 - t20148 * t20045;
t20672 = t19592 * t19780;
t19983 = t20160 * t20488 + t20164 * t20189;
t19753 = -g(3) * t20529 + t19983 * t20071 + t19992 * t20065;
t20669 = t19593 * t19753;
t19998 = -t20160 * t20494 + t20164 * t20195;
t19754 = g(3) * t20532 - t19995 * t20065 + t19998 * t20071;
t20668 = t19593 * t19754;
t20046 = t20146 * t20217 + t20149 * t20211;
t19781 = (t20040 * t20147 - t20574) * t20151 - t20148 * t20046;
t20667 = t19593 * t19781;
t19984 = t20160 * t20486 + t20164 * t20191;
t19755 = -g(3) * t20528 + t19984 * t20072 + t19993 * t20066;
t20664 = t19594 * t19755;
t19999 = -t20160 * t20492 + t20164 * t20197;
t19756 = g(3) * t20531 - t19996 * t20066 + t19999 * t20072;
t20663 = t19594 * t19756;
t20047 = t20146 * t20218 + t20149 * t20212;
t19782 = (t20041 * t20147 - t20573) * t20151 - t20148 * t20047;
t20662 = t19594 * t19782;
t19981 = t20120 * t20449;
t20379 = t20174 * t20599;
t19727 = t20030 + (t19922 + t19981) * t20180 + (t20120 * t20379 + t20100) * t20123;
t19691 = t19727 * t20181 + t19783;
t19910 = pkin(2) * pkin(3) + t20285;
t19709 = t19931 + (-t20097 * t20379 + t20460) * t20180 + t19910 * t20174 - t20299;
t19637 = 0.1e1 / (t19691 * t20163 + t19709 * t20167);
t20649 = t19637 * ((t20147 * t20566 - t20593) * t20149 + (-t20147 * t20572 - t20587) * t20146 - t20151 * t20578);
t20378 = t20176 * t20599;
t19728 = t20031 + (t19923 + t19981) * t20182 + (t20120 * t20378 + t20100) * t20123;
t19692 = t19728 * t20183 + t19784;
t19710 = t19932 + (-t20097 * t20378 + t20460) * t20182 + t19910 * t20176 - t20299;
t19638 = 0.1e1 / (t19692 * t20163 + t19710 * t20167);
t20648 = t19638 * ((t20147 * t20565 - t20592) * t20149 + (-t20147 * t20571 - t20586) * t20146 - t20151 * t20577);
t20377 = t20178 * t20599;
t19729 = t20032 + (t19924 + t19981) * t20184 + (t20120 * t20377 + t20100) * t20123;
t19693 = t19729 * t20185 + t19785;
t19711 = t19933 + (-t20097 * t20377 + t20460) * t20184 + t19910 * t20178 - t20299;
t19639 = 0.1e1 / (t19693 * t20163 + t19711 * t20167);
t20647 = t19639 * ((t20147 * t20564 - t20591) * t20149 + (-t20147 * t20570 - t20585) * t20146 - t20151 * t20576);
t20376 = t20186 * t20599;
t19730 = t20033 + (t19934 + t19981) * t20192 + (t20120 * t20376 + t20100) * t20123;
t19694 = t19730 * t20193 + t19789;
t19712 = t19937 + (-t20097 * t20376 + t20460) * t20192 + t19910 * t20186 - t20299;
t19640 = 0.1e1 / (t19694 * t20163 + t19712 * t20167);
t20646 = t19640 * ((t20147 * t20563 - t20590) * t20149 + (-t20147 * t20569 - t20584) * t20146 - t20151 * t20575);
t20375 = t20188 * t20599;
t19731 = t20034 + (t19935 + t19981) * t20194 + (t20120 * t20375 + t20100) * t20123;
t19695 = t19731 * t20195 + t19790;
t19713 = t19938 + (-t20097 * t20375 + t20460) * t20194 + t19910 * t20188 - t20299;
t19641 = 0.1e1 / (t19695 * t20163 + t19713 * t20167);
t20645 = t19641 * ((t20147 * t20562 - t20589) * t20149 + (-t20147 * t20568 - t20583) * t20146 - t20151 * t20574);
t20374 = t20190 * t20599;
t19732 = t20035 + (t19936 + t19981) * t20196 + (t20120 * t20374 + t20100) * t20123;
t19696 = t19732 * t20197 + t19791;
t19714 = t19939 + (-t20097 * t20374 + t20460) * t20196 + t19910 * t20190 - t20299;
t19642 = 0.1e1 / (t19696 * t20163 + t19714 * t20167);
t20644 = t19642 * ((t20147 * t20561 - t20588) * t20149 + (-t20147 * t20567 - t20582) * t20146 - t20151 * t20573);
t20634 = t20009 * t20167;
t20633 = t20010 * t20167;
t20632 = t20011 * t20167;
t20628 = t20021 * t20167;
t20627 = t20022 * t20167;
t20626 = t20023 * t20167;
t20625 = t20049 * t20162;
t20624 = t20050 * t20162;
t20623 = t20051 * t20162;
t20622 = t20055 * t20162;
t20621 = t20056 * t20162;
t20620 = t20057 * t20162;
t20619 = t20097 * t20162;
t20618 = t20097 * t20174;
t20617 = t20097 * t20176;
t20616 = t20097 * t20178;
t20615 = t20097 * t20186;
t20614 = t20097 * t20188;
t20613 = t20097 * t20190;
t20611 = t20120 * t20174;
t20610 = t20120 * t20176;
t20609 = t20120 * t20178;
t20605 = t20120 * t20186;
t20604 = t20120 * t20188;
t20603 = t20120 * t20190;
t20598 = t20146 * t20148;
t20597 = t20146 * t20150;
t20596 = t20146 * t20151;
t20595 = t20148 * t20149;
t20594 = t20148 * t20150;
t20581 = t20149 * t20150;
t20580 = t20149 * t20151;
t20579 = t20150 * t20151;
t20458 = pkin(2) * t20726;
t20456 = t20180 * t20728;
t20455 = t20182 * t20728;
t20454 = t20184 * t20728;
t20453 = t20192 * t20728;
t20452 = t20194 * t20728;
t20451 = t20196 * t20728;
t20450 = t20120 * t20726;
t20448 = pkin(3) * t20547;
t20447 = pkin(3) * t20523;
t20446 = pkin(3) * t20521;
t20445 = pkin(3) * t20519;
t20444 = pkin(3) * t20514;
t20443 = pkin(3) * t20512;
t20442 = pkin(3) * t20510;
t20422 = t19745 * t20687;
t20421 = t19746 * t20687;
t20420 = t19747 * t20682;
t20419 = t19748 * t20682;
t20418 = t19749 * t20677;
t20417 = t19750 * t20677;
t20416 = t19751 * t20672;
t20415 = t19752 * t20672;
t20414 = t19753 * t20667;
t20413 = t19754 * t20667;
t20412 = t19755 * t20662;
t20411 = t19756 * t20662;
t20392 = t20154 * t20619;
t20391 = t20155 * t20619;
t20390 = t20156 * t20619;
t20389 = t20157 * t20619;
t20388 = t20158 * t20619;
t20387 = t20159 * t20619;
t20385 = t20163 * t20618;
t20384 = t20163 * t20617;
t20383 = t20163 * t20616;
t20382 = t20163 * t20615;
t20381 = t20163 * t20614;
t20380 = t20163 * t20613;
t20366 = t20163 * t20546;
t20340 = t20174 * t20458;
t20339 = t20176 * t20458;
t20338 = t20178 * t20458;
t20337 = t20186 * t20458;
t20336 = t20188 * t20458;
t20335 = t20190 * t20458;
t20281 = t19691 * t20167 - t19709 * t20163;
t20280 = t19692 * t20167 - t19710 * t20163;
t20279 = t19693 * t20167 - t19711 * t20163;
t20278 = t19694 * t20167 - t19712 * t20163;
t20277 = t19695 * t20167 - t19713 * t20163;
t20276 = t19696 * t20167 - t19714 * t20163;
t20269 = (t20437 + t20447) * t20167 - t20448;
t20268 = (t20436 + t20446) * t20167 - t20448;
t20267 = (t20435 + t20445) * t20167 - t20448;
t20266 = (t20434 + t20444) * t20167 - t20448;
t20265 = (t20433 + t20443) * t20167 - t20448;
t20264 = (t20432 + t20442) * t20167 - t20448;
t20251 = t19849 * t20162 * t20181 - t19727 * t20175;
t20250 = t19850 * t20162 * t20183 - t19728 * t20177;
t20249 = t19851 * t20162 * t20185 - t19729 * t20179;
t20248 = t19852 * t20162 * t20193 - t19730 * t20187;
t20247 = t19853 * t20162 * t20195 - t19731 * t20189;
t20246 = t19854 * t20162 * t20197 - t19732 * t20191;
t20238 = t20201 + t20202 + t20203 + t20204 + t20205 + t20206;
t19807 = t19962 * t20130 + t19971 * t20124;
t20231 = -t19807 * t20727 - t19950 * t20385;
t19808 = t19963 * t20131 + t19972 * t20125;
t20230 = -t19808 * t20727 - t19951 * t20384;
t19809 = t19964 * t20132 + t19973 * t20126;
t20229 = -t19809 * t20727 - t19952 * t20383;
t19810 = -t19962 * t20124 + t19971 * t20130;
t20228 = t19810 * t20727 + t19956 * t20385;
t19811 = -t19963 * t20125 + t19972 * t20131;
t20227 = t19811 * t20727 + t19957 * t20384;
t19812 = -t19964 * t20126 + t19973 * t20132;
t20226 = t19812 * t20727 + t19958 * t20383;
t19831 = t19982 * t20133 + t19991 * t20127;
t20225 = -t19831 * t20727 - t19953 * t20382;
t19832 = t19983 * t20134 + t19992 * t20128;
t20224 = -t19832 * t20727 - t19954 * t20381;
t19833 = t19984 * t20135 + t19993 * t20129;
t20223 = -t19833 * t20727 - t19955 * t20380;
t19834 = -t19982 * t20127 + t19991 * t20133;
t20222 = t19834 * t20727 + t19959 * t20382;
t19835 = -t19983 * t20128 + t19992 * t20134;
t20221 = t19835 * t20727 + t19960 * t20381;
t19836 = -t19984 * t20129 + t19993 * t20135;
t20220 = t19836 * t20727 + t19961 * t20380;
t20026 = -pkin(9) * t20548 + t20166 * t20698;
t20025 = -pkin(9) * t20549 + t20166 * t20699;
t20024 = -pkin(9) * t20550 + t20166 * t20700;
t20014 = -pkin(9) * t20554 + t20166 * t20701;
t20013 = -pkin(9) * t20555 + t20166 * t20702;
t20012 = -pkin(9) * t20556 + t20166 * t20703;
t19921 = 0.2e1 * t19943;
t19909 = -t20147 * t20580 + t20598;
t19908 = t20147 * t20596 + t20595;
t19907 = t20147 * t20595 + t20596;
t19906 = -t20147 * t20598 + t20580;
t19903 = g(1) * t20147 - g(2) * t20594 + g(3) * t20579;
t19842 = -t19996 * t20129 + t19999 * t20135;
t19841 = -t19995 * t20128 + t19998 * t20134;
t19840 = -t19994 * t20127 + t19997 * t20133;
t19839 = t19996 * t20135 + t19999 * t20129;
t19838 = t19995 * t20134 + t19998 * t20128;
t19837 = t19994 * t20133 + t19997 * t20127;
t19818 = -t19976 * t20126 + t19979 * t20132;
t19817 = -t19975 * t20125 + t19978 * t20131;
t19816 = -t19974 * t20124 + t19977 * t20130;
t19815 = t19976 * t20132 + t19979 * t20126;
t19814 = t19975 * t20131 + t19978 * t20125;
t19813 = t19974 * t20130 + t19977 * t20124;
t19758 = g(1) * t20581 + g(2) * t19907 + g(3) * t19909;
t19757 = g(1) * t20597 - t19906 * g(2) - t19908 * g(3);
t19588 = t20246 * t19955 + t20276 * t19961;
t19587 = -t20276 * t19955 + t20246 * t19961;
t19586 = -t20277 * t19954 + t20247 * t19960;
t19585 = -t20278 * t19953 + t20248 * t19959;
t19584 = t20247 * t19954 + t20277 * t19960;
t19583 = t20248 * t19953 + t20278 * t19959;
t19582 = -t20279 * t19952 + t20249 * t19958;
t19581 = -t20280 * t19951 + t20250 * t19957;
t19580 = -t20281 * t19950 + t20251 * t19956;
t19579 = t20249 * t19952 + t20279 * t19958;
t19578 = t20250 * t19951 + t20280 * t19957;
t19577 = t20251 * t19950 + t20281 * t19956;
t19570 = (-((-t19955 * t20026 + t20264 * t19961) * t20196 - (t19955 * t20020 - t19961 * t20626 + t19896) * t20190) * t19764 + ((t20020 * t20190 + t20026 * t20196) * t19961 + (t20264 * t20196 + t20190 * (-t20319 + t20626)) * t19955) * t19902) / ((t20232 * t20547 + t19921) * t20159 + ((t20197 * t19936 + (t20162 * t20190 * t20342 + t20118 + t20300) * pkin(3)) * t20163 - (t20097 * t20423 - t20460) * t20167) * t20196 + (-t20162 * t20320 + (t20162 * t20442 + t20252) * t20161) * t20717 + t19848);
t19569 = (-((-t19953 * t20024 + t20266 * t19959) * t20192 - t20186 * (t19953 * t20018 - t19959 * t20628 + t19894)) * t19762 + ((t20018 * t20186 + t20024 * t20192) * t19959 + (t20266 * t20192 + (-t20319 + t20628) * t20186) * t19953) * t19900) / ((t20234 * t20547 + t19921) * t20157 + ((t20193 * t19934 + (t20162 * t20186 * t20344 + t20116 + t20302) * pkin(3)) * t20163 - (t20097 * t20425 - t20460) * t20167) * t20192 + (-t20162 * t20322 + (t20162 * t20444 + t20254) * t20161) * t20717 + t19846);
t19568 = (-t19763 * ((-t19954 * t20025 + t20265 * t19960) * t20194 - t20188 * (t19954 * t20019 - t19960 * t20627 + t19895)) + t19901 * ((t20019 * t20188 + t20025 * t20194) * t19960 + (t20265 * t20194 + (-t20319 + t20627) * t20188) * t19954)) / ((t20233 * t20547 + t19921) * t20158 + ((t20195 * t19935 + (t20162 * t20188 * t20343 + t20117 + t20301) * pkin(3)) * t20163 - (t20097 * t20424 - t20460) * t20167) * t20194 + (-t20162 * t20321 + (t20162 * t20443 + t20253) * t20161) * t20717 + t19847);
t19567 = (-((-t19950 * t20012 + t20269 * t19956) * t20180 - t20174 * (t19950 * t20006 - t19956 * t20634 + t19891)) * t19759 + t19897 * ((t20006 * t20174 + t20012 * t20180) * t19956 + (t20269 * t20180 + (-t20319 + t20634) * t20174) * t19950)) / ((t20237 * t20547 + t19921) * t20154 + ((t20181 * t19922 + (t20162 * t20174 * t20347 + t20107 + t20305) * pkin(3)) * t20163 - (t20097 * t20427 - t20460) * t20167) * t20180 + (-t20162 * t20325 + (t20162 * t20447 + t20257) * t20161) * t20717 + t19843);
t19566 = (-t19761 * ((-t19952 * t20014 + t20267 * t19958) * t20184 - t20178 * (t19952 * t20008 - t19958 * t20632 + t19893)) + t19899 * ((t20008 * t20178 + t20014 * t20184) * t19958 + (t20267 * t20184 + (-t20319 + t20632) * t20178) * t19952)) / ((t20235 * t20547 + t19921) * t20156 + ((t20185 * t19924 + (t20162 * t20178 * t20345 + t20109 + t20303) * pkin(3)) * t20163 - (t20097 * t20426 - t20460) * t20167) * t20184 + (-t20162 * t20323 + (t20162 * t20445 + t20255) * t20161) * t20717 + t19845);
t19565 = (-t19760 * ((-t19951 * t20013 + t20268 * t19957) * t20182 - t20176 * (t19951 * t20007 - t19957 * t20633 + t19892)) + ((t20007 * t20176 + t20013 * t20182) * t19957 + (t20268 * t20182 + (-t20319 + t20633) * t20176) * t19951) * t19898) / ((t20236 * t20547 + t19921) * t20155 + ((t20183 * t19923 + (t20162 * t20176 * t20346 + t20108 + t20304) * pkin(3)) * t20163 - (t20097 * t20428 - t20460) * t20167) * t20182 + (-t20162 * t20324 + (t20162 * t20446 + t20256) * t20161) * t20717 + t19844);
t1 = [(-(t19842 * t20387 + (((-t19833 * t20613 + t19955 * t20450) * t20166 + t19842 * t20704) * t20162 + t20223 * t20153 - t20223) * t20196 + t19955 * t20335 + (t19842 * t20620 + (-t19955 * t20451 + (-t19833 * t20153 + t19955 * t20366 + t19833) * t20603 + (t19833 * t20748 + t19955 * t20766) * pkin(3)) * t20161) * pkin(9)) * t20711 - (t19841 * t20388 + (((-t19832 * t20614 + t19954 * t20450) * t20166 + t19841 * t20705) * t20162 + t20224 * t20153 - t20224) * t20194 + t19954 * t20336 + (t19841 * t20621 + (-t19954 * t20452 + (-t19832 * t20153 + t19954 * t20366 + t19832) * t20604 + (t19832 * t20747 + t19954 * t20765) * pkin(3)) * t20161) * pkin(9)) * t20712 - (t19840 * t20389 + (((-t19831 * t20615 + t19953 * t20450) * t20166 + t19840 * t20706) * t20162 + t20225 * t20153 - t20225) * t20192 + t19953 * t20337 + (t19840 * t20622 + (-t19953 * t20453 + (-t19831 * t20153 + t19953 * t20366 + t19831) * t20605 + (t19831 * t20746 + t19953 * t20764) * pkin(3)) * t20161) * pkin(9)) * t20713 - (t19818 * t20390 + (((-t19809 * t20616 + t19952 * t20450) * t20166 + t19818 * t20707) * t20162 + t20229 * t20153 - t20229) * t20184 + t19952 * t20338 + (t19818 * t20623 + (-t19952 * t20454 + (-t19809 * t20153 + t19952 * t20366 + t19809) * t20609 + (t19809 * t20745 + t19952 * t20763) * pkin(3)) * t20161) * pkin(9)) * t20714 - (t19817 * t20391 + (((-t19808 * t20617 + t19951 * t20450) * t20166 + t19817 * t20708) * t20162 + t20230 * t20153 - t20230) * t20182 + t19951 * t20339 + (t19817 * t20624 + (-t19951 * t20455 + (-t19808 * t20153 + t19951 * t20366 + t19808) * t20610 + (t19808 * t20744 + t19951 * t20762) * pkin(3)) * t20161) * pkin(9)) * t20715 - (t19816 * t20392 + (((-t19807 * t20618 + t19950 * t20450) * t20166 + t19816 * t20709) * t20162 + t20231 * t20153 - t20231) * t20180 + t19950 * t20340 + (t19816 * t20625 + (-t19950 * t20456 + (-t19807 * t20153 + t19950 * t20366 + t19807) * t20611 + (t19807 * t20743 + t19950 * t20761) * pkin(3)) * t20161) * pkin(9)) * t20716) * MDP(1) + (t20328 * t20664 + t20329 * t20669 + t20330 * t20674 + t20331 * t20679 + t20332 * t20684 + t20333 * t20689) * MDP(3) + (t20328 * t20663 + t20329 * t20668 + t20330 * t20673 + t20331 * t20678 + t20332 * t20683 + t20333 * t20688) * MDP(4) + (-t20768 - t20770 - t20772 - t20780 - t20782 - t20784) * MDP(10) + (-t20767 - t20769 - t20771 - t20779 - t20781 - t20783) * MDP(11) + (-t19903 * t20147 + (-t19757 * t20146 - t19758 * t20149) * t20150) * MDP(21); (-(t19839 * t20387 + (((t19836 * t20613 - t19961 * t20450) * t20166 + t19839 * t20704) * t20162 + t20220 * t20153 - t20220) * t20196 - t19961 * t20335 + (t19839 * t20620 + (t19961 * t20451 + (t19836 * t20153 - t19961 * t20366 - t19836) * t20603 + (-t19836 * t20748 - t19961 * t20766) * pkin(3)) * t20161) * pkin(9)) * t20711 - (t19838 * t20388 + (((t19835 * t20614 - t19960 * t20450) * t20166 + t19838 * t20705) * t20162 + t20221 * t20153 - t20221) * t20194 - t19960 * t20336 + (t19838 * t20621 + (t19960 * t20452 + (t19835 * t20153 - t19960 * t20366 - t19835) * t20604 + (-t19835 * t20747 - t19960 * t20765) * pkin(3)) * t20161) * pkin(9)) * t20712 - (t19837 * t20389 + (((t19834 * t20615 - t19959 * t20450) * t20166 + t19837 * t20706) * t20162 + t20222 * t20153 - t20222) * t20192 - t19959 * t20337 + (t19837 * t20622 + (t19959 * t20453 + (t19834 * t20153 - t19959 * t20366 - t19834) * t20605 + (-t19834 * t20746 - t19959 * t20764) * pkin(3)) * t20161) * pkin(9)) * t20713 - (t19815 * t20390 + (((t19812 * t20616 - t19958 * t20450) * t20166 + t19815 * t20707) * t20162 + t20226 * t20153 - t20226) * t20184 - t19958 * t20338 + (t19815 * t20623 + (t19958 * t20454 + (t19812 * t20153 - t19958 * t20366 - t19812) * t20609 + (-t19812 * t20745 - t19958 * t20763) * pkin(3)) * t20161) * pkin(9)) * t20714 - (t19814 * t20391 + (((t19811 * t20617 - t19957 * t20450) * t20166 + t19814 * t20708) * t20162 + t20227 * t20153 - t20227) * t20182 - t19957 * t20339 + (t19814 * t20624 + (t19957 * t20455 + (t19811 * t20153 - t19957 * t20366 - t19811) * t20610 + (-t19811 * t20744 - t19957 * t20762) * pkin(3)) * t20161) * pkin(9)) * t20715 - (t19813 * t20392 + (((t19810 * t20618 - t19956 * t20450) * t20166 + t19813 * t20709) * t20162 + t20228 * t20153 - t20228) * t20180 - t19956 * t20340 + (t19813 * t20625 + (t19956 * t20456 + (t19810 * t20153 - t19956 * t20366 - t19810) * t20611 + (-t19810 * t20743 - t19956 * t20761) * pkin(3)) * t20161) * pkin(9)) * t20716) * MDP(1) + (t19616 * t20689 + t19619 * t20684 + t19622 * t20679 + t19628 * t20674 + t19631 * t20669 + t19634 * t20664) * MDP(3) + (t19616 * t20688 + t19619 * t20683 + t19622 * t20678 + t19628 * t20673 + t19631 * t20668 + t19634 * t20663) * MDP(4) + (t20773 + t20775 + t20777 + t20785 + t20787 + t20789) * MDP(10) + (t20774 + t20776 + t20778 + t20786 + t20788 + t20790) * MDP(11) + (t19757 * t19906 - t19758 * t19907 + t19903 * t20594) * MDP(21); -0.6e1 * t20736 + (t19757 * t19908 - t19758 * t19909 - t19903 * t20579) * MDP(21); (-t19577 * t20649 - t19578 * t20648 - t19579 * t20647 - t19583 * t20646 - t19584 * t20645 - t19588 * t20644 + (-t20047 - t20046 - t20045 - t20044 - t20043 - t20042) * t20151 + (t20238 * t20150 + (-t20036 - t20037 - t20038 - t20039 - t20040 - t20041) * t20147) * t20148) * t20736 + (t19616 * t20422 + t19619 * t20420 + t19622 * t20418 + t19628 * t20416 + t19631 * t20414 + t19634 * t20412) * MDP(3) + (t19616 * t20421 + t19619 * t20419 + t19622 * t20417 + t19628 * t20415 + t19631 * t20413 + t19634 * t20411) * MDP(4) + (t20789 * t19777 + t20787 * t19778 + t20785 * t19779 + t20777 * t19780 + t20775 * t19781 + t20773 * t19782) * MDP(10) + (t20790 * t19777 + t20788 * t19778 + t20786 * t19779 + t20778 * t19780 + t20776 * t19781 + t20774 * t19782) * MDP(11) + (t19757 * t20147 - t19903 * t20597) * MDP(18) + (t19758 * t20147 - t19903 * t20581) * MDP(19) + (-t19757 * t20149 + t19758 * t20146) * t20150 * MDP(20); (t19580 * t20649 + t19581 * t20648 + t19582 * t20647 + t19585 * t20646 + t19586 * t20645 + t19587 * t20644 + t20238 * t20147 + ((t20213 + t20214 + t20215 + t20216 + t20217 + t20218) * t20149 + (-t20207 - t20208 - t20209 - t20210 - t20211 - t20212) * t20146) * t20150) * t20736 + (-t20328 * t20412 - t20329 * t20414 - t20330 * t20416 - t20331 * t20418 - t20332 * t20420 - t20333 * t20422) * MDP(3) + (-t20328 * t20411 - t20329 * t20413 - t20330 * t20415 - t20331 * t20417 - t20332 * t20419 - t20333 * t20421) * MDP(4) + (t20784 * t19777 + t20782 * t19778 + t20780 * t19779 + t20772 * t19780 + t20770 * t19781 + t20768 * t19782) * MDP(10) + (t20783 * t19777 + t20781 * t19778 + t20779 * t19779 + t20771 * t19780 + t20769 * t19781 + t20767 * t19782) * MDP(11) + (-t19757 * t20594 + t19903 * t19906) * MDP(18) + (-t19758 * t20594 - t19903 * t19907) * MDP(19) + (-t19757 * t19907 - t19758 * t19906) * MDP(20); ((t19587 * t19764 - t19588 * t19902) * t19642 + (-t19584 * t19901 + t19586 * t19763) * t19641 + (-t19583 * t19900 + t19585 * t19762) * t19640 + (-t19579 * t19899 + t19582 * t19761) * t19639 + (-t19578 * t19898 + t19581 * t19760) * t19638 + (-t19577 * t19897 + t19580 * t19759) * t19637) * t20736 + (t19565 * t19747 + t19566 * t19749 + t19567 * t19745 + t19568 * t19753 + t19569 * t19751 + t19570 * t19755) * MDP(3) + (t19565 * t19748 + t19566 * t19750 + t19567 * t19746 + t19568 * t19754 + t19569 * t19752 + t19570 * t19756) * MDP(4) + (t19565 * t19680 + t19566 * t19682 + t19567 * t19679 + t19568 * t19688 + t19569 * t19687 + t19570 * t19685 + t19670 * t20695 + t19671 * t20697 + t19672 * t20696 + t19676 * t20693 + t19677 * t20692 + t19678 * t20694) * MDP(10) + (t19565 * t19681 + t19566 * t19684 + t19567 * t19683 + t19568 * t19690 + t19569 * t19689 + t19570 * t19686 + t19667 * t20697 + t19668 * t20696 + t19669 * t20695 + t19673 * t20693 + t19674 * t20692 + t19675 * t20694) * MDP(11) + (t19757 * t20579 + t19903 * t19908) * MDP(18) + (t19758 * t20579 - t19903 * t19909) * MDP(19) + (-t19757 * t19909 - t19758 * t19908) * MDP(20);];
taugX  = t1;
