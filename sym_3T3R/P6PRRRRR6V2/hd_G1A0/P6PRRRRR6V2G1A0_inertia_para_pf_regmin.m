% Calculate minimal parameter regressor of inertia matrix for parallel robot
% P6PRRRRR6V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6*6x21]
%   minimal parameter regressor of inertia matrix for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2019-09-11 16:13
% Revision: 7993d029b5937b704dcf3fc7d8ae322038cdcbdd (2019-09-11)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6PRRRRR6V2G1A0_inertia_para_pf_regmin(xP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(10,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G1A0_inertia_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G1A0_inertia_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G1A0_inertia_para_pf_regmin: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G1A0_inertia_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G1A0_inertia_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_MMreg_matlab.m
% OptimizationMode: 2
% StartTime: 2019-09-11 14:22:38
% EndTime: 2019-09-11 14:37:38
% DurationCPUTime: 947.13s
% Computational Cost: add. (1082802->4386), mult. (2924418->6802), div. (14448->48), fcn. (2461664->50), ass. (0->2770)
t4237 = xP(6);
t4178 = sin(t4237);
t4246 = koppelP(6,2);
t4181 = cos(t4237);
t4252 = koppelP(6,1);
t5420 = t4252 * t4181;
t4056 = t4178 * t4246 - t5420;
t4238 = xP(5);
t4179 = sin(t4238);
t4182 = cos(t4238);
t4240 = koppelP(6,3);
t5540 = t4182 * t4240;
t3907 = t4056 * t4179 + t5540;
t4062 = t4178 * t4252 + t4181 * t4246;
t4239 = xP(4);
t4180 = sin(t4239);
t4183 = cos(t4239);
t3744 = t3907 * t4183 + t4180 * t4062;
t4207 = legFrame(6,3);
t4156 = sin(t4207);
t4162 = cos(t4207);
t4199 = sin(pkin(10));
t4203 = cos(pkin(10));
t3985 = t4156 * t4203 + t4162 * t4199;
t3991 = -t4156 * t4199 + t4162 * t4203;
t4220 = cos(qJ(2,6));
t4206 = cos(pkin(4));
t4214 = sin(qJ(2,6));
t5473 = t4206 * t4214;
t3773 = -t3985 * t5473 + t3991 * t4220;
t4200 = sin(pkin(6));
t4151 = t4200 * pkin(9);
t4213 = sin(qJ(3,6));
t4219 = cos(qJ(3,6));
t4205 = cos(pkin(5));
t5468 = t4206 * t4220;
t4201 = sin(pkin(5));
t4202 = sin(pkin(4));
t5507 = t4201 * t4202;
t4524 = (t3985 * t5468 + t3991 * t4214) * t4205 - t3985 * t5507;
t3578 = (pkin(3) * t4524 - t3773 * t4151) * t4219 + t4213 * (pkin(3) * t3773 + t4524 * t4151);
t4204 = cos(pkin(6));
t4185 = t4204 ^ 2;
t4258 = pkin(9) ^ 2;
t4114 = pkin(3) ^ 2 + t4185 * t4258 - t4258;
t4190 = t4219 ^ 2;
t5480 = t4205 * t4220;
t4956 = t4200 * t5480;
t4859 = pkin(9) * t4956;
t4725 = pkin(3) * t4859;
t5453 = t4214 * t4114;
t4355 = -0.2e1 * t4725 + t5453;
t5847 = pkin(3) * t4206;
t4122 = t4200 * t5847;
t4186 = t4205 ^ 2;
t4853 = t4186 * t4122;
t4518 = pkin(9) * (t4122 - t4853);
t5503 = t4201 * t4214;
t4130 = pkin(2) * t5503;
t4148 = pkin(9) * t4204 + pkin(8);
t5582 = t4148 * t4220;
t4707 = t4186 * t5582 + t4130 - t5582;
t4584 = t4707 * t4213;
t5506 = t4201 * t4205;
t4123 = pkin(3) * t5506;
t4150 = pkin(2) * t4151;
t5407 = t4148 * t4123 - t4150;
t4685 = t5407 * t4206;
t5881 = t4186 - 0.1e1;
t5326 = t4114 * t5881;
t4701 = t4206 * t5326;
t5337 = pkin(9) * (t4204 + 0.1e1) * (t4204 - 0.1e1);
t4867 = t4214 * t5337;
t5333 = t4214 * t4151;
t4925 = 0.2e1 * t5333;
t4115 = pkin(9) * t4122;
t5406 = 0.2e1 * pkin(9) * t4853 - 0.2e1 * t4115;
t4149 = pkin(2) * t5847;
t5520 = t4200 * t4205;
t5334 = pkin(9) * t5520;
t4860 = t4201 * t5334;
t4694 = t4148 * t4860;
t5408 = t4206 * t4694 + t4149;
t5455 = t4213 * t4219;
t5846 = pkin(3) * t4219;
t3527 = t5406 * t4190 + (-t4213 * t4701 + t4685) * t4219 + t5408 * t4213 + t4518 + (t4584 * t4151 + t4707 * t5846 + (t4355 * t4190 + (pkin(3) * t4925 + t4114 * t5480) * t5455 + pkin(9) * (pkin(3) * t4956 - t4867)) * t4201) * t4202;
t3521 = 0.1e1 / t3527;
t5758 = t3521 * t4205;
t5122 = t3578 * t5758;
t4803 = t3744 * t5122;
t5572 = (t4205 + 0.1e1) * (t4205 - 0.1e1);
t5375 = pkin(3) * t5572;
t4726 = t5375 * t4151;
t4687 = 0.2e1 * t4726;
t3960 = t4206 * t4687;
t5401 = -0.2e1 * t5507;
t3731 = (t3960 + (t4725 - t5453 / 0.2e1) * t5401) * t4190;
t4852 = t4213 * t5326;
t3764 = -t4852 + t5407;
t5336 = t4186 * t4151;
t4912 = pkin(3) * t5336;
t4590 = t4213 * t4694 + pkin(3) * (pkin(2) * t4213 + t4151) - t4912;
t3821 = t4590 * t4206;
t4976 = t4114 * t5506;
t3961 = t4213 * t4976;
t5850 = pkin(3) * t4148;
t4919 = t5881 * t5850;
t3837 = t3961 + t4919;
t5320 = t5881 * t4213;
t3861 = t4148 * t5320 + t4123;
t5327 = (-t4185 + 0.1e1) * pkin(9);
t5519 = t4200 * t4213;
t4069 = pkin(2) * t5519 + t5327;
t4124 = pkin(9) * t5519;
t4102 = 0.2e1 * t4124 + pkin(2);
t4988 = t4102 * t5503;
t5516 = t4200 * t4220;
t5838 = pkin(9) * t4202;
t3563 = 0.1e1 / (t3731 + (t3764 * t4206 + t4202 * (pkin(3) * t4988 + t3837 * t4220)) * t4219 + t3821 + (t3861 * t5516 + t4069 * t5503) * t5838);
t5586 = t4148 * t4201;
t5848 = pkin(3) * t4205;
t3957 = t4213 * t5848 - t5586;
t4103 = t4124 + pkin(2);
t3844 = t3957 * t4220 + t4103 * t4214;
t5837 = t4214 * pkin(3);
t4029 = t4859 - t5837;
t4026 = pkin(3) * t4220 + t4205 * t5333;
t5611 = t4026 * t4206;
t5633 = (-t3957 * t4214 + t4103 * t4220) * t4206;
t3611 = (t3985 * t5611 - t3991 * t4029) * t4219 + t3844 * t3991 + t3985 * t5633;
t5948 = t3563 * t3611;
t6182 = t3744 * t5948;
t3290 = t6182 - 0.2e1 * t4803;
t6200 = t3290 + t6182;
t4247 = koppelP(5,2);
t4253 = koppelP(5,1);
t5419 = t4253 * t4181;
t4057 = t4178 * t4247 - t5419;
t4241 = koppelP(5,3);
t5539 = t4182 * t4241;
t3910 = t4057 * t4179 + t5539;
t4063 = t4178 * t4253 + t4181 * t4247;
t3747 = t3910 * t4183 + t4180 * t4063;
t4208 = legFrame(5,3);
t4157 = sin(t4208);
t4163 = cos(t4208);
t3986 = t4157 * t4203 + t4163 * t4199;
t3992 = -t4157 * t4199 + t4163 * t4203;
t4222 = cos(qJ(2,5));
t4216 = sin(qJ(2,5));
t5471 = t4206 * t4216;
t3775 = -t3986 * t5471 + t3992 * t4222;
t4215 = sin(qJ(3,5));
t4221 = cos(qJ(3,5));
t5467 = t4206 * t4222;
t4523 = (t3986 * t5467 + t3992 * t4216) * t4205 - t3986 * t5507;
t3581 = (pkin(3) * t4523 - t3775 * t4151) * t4221 + t4215 * (pkin(3) * t3775 + t4523 * t4151);
t4191 = t4221 ^ 2;
t5479 = t4205 * t4222;
t4955 = t4200 * t5479;
t4858 = pkin(9) * t4955;
t4724 = pkin(3) * t4858;
t5448 = t4216 * t4114;
t4354 = -0.2e1 * t4724 + t5448;
t5501 = t4201 * t4216;
t4131 = pkin(2) * t5501;
t5581 = t4148 * t4222;
t4706 = t4186 * t5581 + t4131 - t5581;
t4583 = t4706 * t4215;
t4866 = t4216 * t5337;
t5332 = t4216 * t4151;
t4924 = 0.2e1 * t5332;
t5450 = t4215 * t4221;
t5845 = pkin(3) * t4221;
t3528 = t5406 * t4191 + (-t4215 * t4701 + t4685) * t4221 + t5408 * t4215 + t4518 + (t4583 * t4151 + t4706 * t5845 + (t4354 * t4191 + (pkin(3) * t4924 + t4114 * t5479) * t5450 + pkin(9) * (pkin(3) * t4955 - t4866)) * t4201) * t4202;
t3523 = 0.1e1 / t3528;
t5745 = t3523 * t4205;
t5097 = t3581 * t5745;
t4793 = t3747 * t5097;
t3732 = (t3960 + (t4724 - t5448 / 0.2e1) * t5401) * t4191;
t4851 = t4215 * t5326;
t3765 = -t4851 + t5407;
t4589 = t4215 * t4694 + pkin(3) * (pkin(2) * t4215 + t4151) - t4912;
t3822 = t4589 * t4206;
t3962 = t4215 * t4976;
t3838 = t3962 + t4919;
t5324 = t4215 * t5881;
t3862 = t4148 * t5324 + t4123;
t5518 = t4200 * t4215;
t4070 = pkin(2) * t5518 + t5327;
t4126 = pkin(9) * t5518;
t4104 = 0.2e1 * t4126 + pkin(2);
t4987 = t4104 * t5501;
t5515 = t4200 * t4222;
t3564 = 0.1e1 / (t3732 + (t3765 * t4206 + t4202 * (pkin(3) * t4987 + t3838 * t4222)) * t4221 + t3822 + (t3862 * t5515 + t4070 * t5501) * t5838);
t3958 = t4215 * t5848 - t5586;
t4105 = t4126 + pkin(2);
t3846 = t3958 * t4222 + t4105 * t4216;
t5836 = t4216 * pkin(3);
t4030 = t4858 - t5836;
t4027 = pkin(3) * t4222 + t4205 * t5332;
t5610 = t4027 * t4206;
t5632 = (-t3958 * t4216 + t4105 * t4222) * t4206;
t3613 = (t3986 * t5610 - t3992 * t4030) * t4221 + t3846 * t3992 + t3986 * t5632;
t5946 = t3564 * t3613;
t6181 = t3747 * t5946;
t3292 = t6181 - 0.2e1 * t4793;
t6199 = t3292 + t6181;
t4248 = koppelP(4,2);
t4254 = koppelP(4,1);
t5418 = t4254 * t4181;
t4058 = t4178 * t4248 - t5418;
t4242 = koppelP(4,3);
t5538 = t4182 * t4242;
t3913 = t4058 * t4179 + t5538;
t4064 = t4178 * t4254 + t4181 * t4248;
t3750 = t3913 * t4183 + t4180 * t4064;
t4209 = legFrame(4,3);
t4158 = sin(t4209);
t4164 = cos(t4209);
t3987 = t4158 * t4203 + t4164 * t4199;
t3993 = -t4158 * t4199 + t4164 * t4203;
t4224 = cos(qJ(2,4));
t4218 = sin(qJ(2,4));
t5469 = t4206 * t4218;
t3777 = -t3987 * t5469 + t3993 * t4224;
t4217 = sin(qJ(3,4));
t4223 = cos(qJ(3,4));
t5466 = t4206 * t4224;
t4522 = (t3987 * t5466 + t3993 * t4218) * t4205 - t3987 * t5507;
t3584 = (pkin(3) * t4522 - t3777 * t4151) * t4223 + t4217 * (pkin(3) * t3777 + t4522 * t4151);
t4192 = t4223 ^ 2;
t5478 = t4205 * t4224;
t4954 = t4200 * t5478;
t4857 = pkin(9) * t4954;
t4723 = pkin(3) * t4857;
t5443 = t4218 * t4114;
t4353 = -0.2e1 * t4723 + t5443;
t5499 = t4201 * t4218;
t4132 = pkin(2) * t5499;
t5580 = t4148 * t4224;
t4705 = t4186 * t5580 + t4132 - t5580;
t4582 = t4705 * t4217;
t4865 = t4218 * t5337;
t5331 = t4218 * t4151;
t4923 = 0.2e1 * t5331;
t5445 = t4217 * t4223;
t5844 = pkin(3) * t4223;
t3529 = t5406 * t4192 + (-t4217 * t4701 + t4685) * t4223 + t5408 * t4217 + t4518 + (t4582 * t4151 + t4705 * t5844 + (t4353 * t4192 + (pkin(3) * t4923 + t4114 * t5478) * t5445 + (pkin(3) * t4954 - t4865) * pkin(9)) * t4201) * t4202;
t3525 = 0.1e1 / t3529;
t5732 = t3525 * t4205;
t5072 = t3584 * t5732;
t4783 = t3750 * t5072;
t3733 = (t3960 + (t4723 - t5443 / 0.2e1) * t5401) * t4192;
t4850 = t4217 * t5326;
t3766 = -t4850 + t5407;
t4588 = t4217 * t4694 + pkin(3) * (pkin(2) * t4217 + t4151) - t4912;
t3823 = t4588 * t4206;
t3963 = t4217 * t4976;
t3839 = t3963 + t4919;
t5323 = t4217 * t5881;
t3863 = t4148 * t5323 + t4123;
t5517 = t4200 * t4217;
t4071 = pkin(2) * t5517 + t5327;
t4128 = pkin(9) * t5517;
t4106 = 0.2e1 * t4128 + pkin(2);
t4986 = t4106 * t5499;
t5514 = t4200 * t4224;
t3565 = 0.1e1 / (t3733 + (t3766 * t4206 + t4202 * (pkin(3) * t4986 + t3839 * t4224)) * t4223 + t3823 + (t3863 * t5514 + t4071 * t5499) * t5838);
t3959 = t4217 * t5848 - t5586;
t4107 = t4128 + pkin(2);
t3848 = t3959 * t4224 + t4107 * t4218;
t5835 = t4218 * pkin(3);
t4031 = t4857 - t5835;
t4028 = pkin(3) * t4224 + t4205 * t5331;
t5609 = t4028 * t4206;
t5631 = (-t3959 * t4218 + t4107 * t4224) * t4206;
t3615 = (t3987 * t5609 - t3993 * t4031) * t4223 + t3848 * t3993 + t3987 * t5631;
t5944 = t3565 * t3615;
t6180 = t3750 * t5944;
t3294 = t6180 - 0.2e1 * t4783;
t6198 = t3294 + t6180;
t4249 = koppelP(3,2);
t4255 = koppelP(3,1);
t5417 = t4255 * t4181;
t4059 = t4178 * t4249 - t5417;
t4243 = koppelP(3,3);
t5537 = t4182 * t4243;
t3916 = t4059 * t4179 + t5537;
t4065 = t4178 * t4255 + t4181 * t4249;
t3753 = t3916 * t4183 + t4180 * t4065;
t4210 = legFrame(3,3);
t4159 = sin(t4210);
t4165 = cos(t4210);
t3988 = t4159 * t4203 + t4165 * t4199;
t3994 = -t4159 * t4199 + t4165 * t4203;
t4232 = cos(qJ(2,3));
t4226 = sin(qJ(2,3));
t5464 = t4206 * t4226;
t3797 = -t3988 * t5464 + t3994 * t4232;
t4225 = sin(qJ(3,3));
t4231 = cos(qJ(3,3));
t5459 = t4206 * t4232;
t4521 = (t3988 * t5459 + t3994 * t4226) * t4205 - t3988 * t5507;
t3596 = (pkin(3) * t4521 - t3797 * t4151) * t4231 + t4225 * (pkin(3) * t3797 + t4521 * t4151);
t4196 = t4231 ^ 2;
t5477 = t4205 * t4232;
t4953 = t4200 * t5477;
t4856 = pkin(9) * t4953;
t4722 = pkin(3) * t4856;
t5435 = t4226 * t4114;
t4352 = -0.2e1 * t4722 + t5435;
t5497 = t4201 * t4226;
t4139 = pkin(2) * t5497;
t5576 = t4148 * t4232;
t4704 = t4186 * t5576 + t4139 - t5576;
t4581 = t4704 * t4225;
t4864 = t4226 * t5337;
t5330 = t4226 * t4151;
t4922 = 0.2e1 * t5330;
t5437 = t4225 * t4231;
t5843 = pkin(3) * t4231;
t3536 = t5406 * t4196 + (-t4225 * t4701 + t4685) * t4231 + t5408 * t4225 + t4518 + (t4581 * t4151 + t4704 * t5843 + (t4352 * t4196 + (pkin(3) * t4922 + t4114 * t5477) * t5437 + pkin(9) * (pkin(3) * t4953 - t4864)) * t4201) * t4202;
t3530 = 0.1e1 / t3536;
t5719 = t3530 * t4205;
t5047 = t3596 * t5719;
t4773 = t3753 * t5047;
t3734 = (t3960 + (t4722 - t5435 / 0.2e1) * t5401) * t4196;
t4849 = t4225 * t5326;
t3770 = -t4849 + t5407;
t4587 = t4225 * t4694 + pkin(3) * (pkin(2) * t4225 + t4151) - t4912;
t3824 = t4587 * t4206;
t3973 = t4225 * t4976;
t3840 = t3973 + t4919;
t5322 = t4225 * t5881;
t3870 = t4148 * t5322 + t4123;
t5513 = t4200 * t4225;
t4075 = pkin(2) * t5513 + t5327;
t4133 = pkin(9) * t5513;
t4108 = 0.2e1 * t4133 + pkin(2);
t4985 = t4108 * t5497;
t5510 = t4200 * t4232;
t3566 = 0.1e1 / (t3734 + (t3770 * t4206 + t4202 * (pkin(3) * t4985 + t3840 * t4232)) * t4231 + t3824 + (t3870 * t5510 + t4075 * t5497) * t5838);
t3964 = t4225 * t5848 - t5586;
t4109 = t4133 + pkin(2);
t3850 = t3964 * t4232 + t4109 * t4226;
t5834 = t4226 * pkin(3);
t4041 = t4856 - t5834;
t4038 = pkin(3) * t4232 + t4205 * t5330;
t5605 = t4038 * t4206;
t5630 = (-t3964 * t4226 + t4109 * t4232) * t4206;
t3623 = (t3988 * t5605 - t3994 * t4041) * t4231 + t3850 * t3994 + t3988 * t5630;
t5942 = t3566 * t3623;
t6179 = t3753 * t5942;
t3305 = t6179 - 0.2e1 * t4773;
t6197 = t3305 + t6179;
t4250 = koppelP(2,2);
t4256 = koppelP(2,1);
t5416 = t4256 * t4181;
t4060 = t4178 * t4250 - t5416;
t4244 = koppelP(2,3);
t5536 = t4182 * t4244;
t3919 = t4060 * t4179 + t5536;
t4066 = t4178 * t4256 + t4181 * t4250;
t3756 = t3919 * t4183 + t4180 * t4066;
t4211 = legFrame(2,3);
t4160 = sin(t4211);
t4166 = cos(t4211);
t3989 = t4160 * t4203 + t4166 * t4199;
t3995 = -t4160 * t4199 + t4166 * t4203;
t4234 = cos(qJ(2,2));
t4228 = sin(qJ(2,2));
t5462 = t4206 * t4228;
t3799 = -t3989 * t5462 + t3995 * t4234;
t4227 = sin(qJ(3,2));
t4233 = cos(qJ(3,2));
t5458 = t4206 * t4234;
t4520 = (t3989 * t5458 + t3995 * t4228) * t4205 - t3989 * t5507;
t3599 = (pkin(3) * t4520 - t3799 * t4151) * t4233 + t4227 * (pkin(3) * t3799 + t4520 * t4151);
t4197 = t4233 ^ 2;
t5476 = t4205 * t4234;
t4952 = t4200 * t5476;
t4855 = pkin(9) * t4952;
t4721 = pkin(3) * t4855;
t5430 = t4228 * t4114;
t4351 = -0.2e1 * t4721 + t5430;
t5495 = t4201 * t4228;
t4140 = pkin(2) * t5495;
t5575 = t4148 * t4234;
t4703 = t4186 * t5575 + t4140 - t5575;
t4580 = t4703 * t4227;
t4863 = t4228 * t5337;
t5329 = t4228 * t4151;
t4921 = 0.2e1 * t5329;
t5432 = t4227 * t4233;
t5842 = pkin(3) * t4233;
t3537 = t5406 * t4197 + (-t4227 * t4701 + t4685) * t4233 + t5408 * t4227 + t4518 + (t4580 * t4151 + t4703 * t5842 + (t4351 * t4197 + (pkin(3) * t4921 + t4114 * t5476) * t5432 + pkin(9) * (pkin(3) * t4952 - t4863)) * t4201) * t4202;
t3532 = 0.1e1 / t3537;
t5706 = t3532 * t4205;
t5022 = t3599 * t5706;
t4763 = t3756 * t5022;
t3735 = (t3960 + (t4721 - t5430 / 0.2e1) * t5401) * t4197;
t4848 = t4227 * t5326;
t3771 = -t4848 + t5407;
t4586 = t4227 * t4694 + pkin(3) * (pkin(2) * t4227 + t4151) - t4912;
t3825 = t4586 * t4206;
t3974 = t4227 * t4976;
t3841 = t3974 + t4919;
t5321 = t4227 * t5881;
t3871 = t4148 * t5321 + t4123;
t5512 = t4200 * t4227;
t4076 = pkin(2) * t5512 + t5327;
t4135 = pkin(9) * t5512;
t4110 = 0.2e1 * t4135 + pkin(2);
t4984 = t4110 * t5495;
t5509 = t4200 * t4234;
t3567 = 0.1e1 / (t3735 + (t3771 * t4206 + t4202 * (pkin(3) * t4984 + t3841 * t4234)) * t4233 + t3825 + (t3871 * t5509 + t4076 * t5495) * t5838);
t3965 = t4227 * t5848 - t5586;
t4111 = t4135 + pkin(2);
t3852 = t3965 * t4234 + t4111 * t4228;
t5833 = t4228 * pkin(3);
t4042 = t4855 - t5833;
t4039 = pkin(3) * t4234 + t4205 * t5329;
t5604 = t4039 * t4206;
t5629 = (-t3965 * t4228 + t4111 * t4234) * t4206;
t3625 = (t3989 * t5604 - t3995 * t4042) * t4233 + t3852 * t3995 + t3989 * t5629;
t5940 = t3567 * t3625;
t6178 = t3756 * t5940;
t3307 = t6178 - 0.2e1 * t4763;
t6196 = t3307 + t6178;
t4251 = koppelP(1,2);
t4257 = koppelP(1,1);
t5415 = t4257 * t4181;
t4061 = t4178 * t4251 - t5415;
t4245 = koppelP(1,3);
t5535 = t4182 * t4245;
t3922 = t4061 * t4179 + t5535;
t4067 = t4178 * t4257 + t4181 * t4251;
t3759 = t3922 * t4183 + t4180 * t4067;
t4212 = legFrame(1,3);
t4161 = sin(t4212);
t4167 = cos(t4212);
t3990 = t4161 * t4203 + t4167 * t4199;
t3996 = -t4161 * t4199 + t4167 * t4203;
t4236 = cos(qJ(2,1));
t4230 = sin(qJ(2,1));
t5460 = t4206 * t4230;
t3801 = -t3990 * t5460 + t3996 * t4236;
t4229 = sin(qJ(3,1));
t4235 = cos(qJ(3,1));
t5457 = t4206 * t4236;
t4519 = (t3990 * t5457 + t3996 * t4230) * t4205 - t3990 * t5507;
t3602 = (pkin(3) * t4519 - t3801 * t4151) * t4235 + t4229 * (pkin(3) * t3801 + t4519 * t4151);
t4198 = t4235 ^ 2;
t5475 = t4205 * t4236;
t4951 = t4200 * t5475;
t4854 = pkin(9) * t4951;
t4720 = pkin(3) * t4854;
t5425 = t4230 * t4114;
t4350 = -0.2e1 * t4720 + t5425;
t5493 = t4201 * t4230;
t4141 = pkin(2) * t5493;
t5574 = t4148 * t4236;
t4702 = t4186 * t5574 + t4141 - t5574;
t4579 = t4702 * t4229;
t4862 = t4230 * t5337;
t5328 = t4230 * t4151;
t4920 = 0.2e1 * t5328;
t5427 = t4229 * t4235;
t5841 = pkin(3) * t4235;
t3538 = t5406 * t4198 + (-t4229 * t4701 + t4685) * t4235 + t5408 * t4229 + t4518 + (t4579 * t4151 + t4702 * t5841 + (t4350 * t4198 + (pkin(3) * t4920 + t4114 * t5475) * t5427 + pkin(9) * (pkin(3) * t4951 - t4862)) * t4201) * t4202;
t3534 = 0.1e1 / t3538;
t5693 = t3534 * t4205;
t4997 = t3602 * t5693;
t4753 = t3759 * t4997;
t3736 = (t3960 + (t4720 - t5425 / 0.2e1) * t5401) * t4198;
t4847 = t4229 * t5326;
t3772 = -t4847 + t5407;
t4585 = t4229 * t4694 + pkin(3) * (pkin(2) * t4229 + t4151) - t4912;
t3826 = t4585 * t4206;
t3975 = t4229 * t4976;
t3842 = t3975 + t4919;
t5319 = t5881 * t4229;
t3872 = t4148 * t5319 + t4123;
t5511 = t4200 * t4229;
t4077 = pkin(2) * t5511 + t5327;
t4137 = pkin(9) * t5511;
t4112 = 0.2e1 * t4137 + pkin(2);
t4983 = t4112 * t5493;
t5508 = t4200 * t4236;
t3568 = 0.1e1 / (t3736 + (t3772 * t4206 + t4202 * (pkin(3) * t4983 + t3842 * t4236)) * t4235 + t3826 + (t3872 * t5508 + t4077 * t5493) * t5838);
t3966 = t4229 * t5848 - t5586;
t4113 = t4137 + pkin(2);
t3854 = t3966 * t4236 + t4113 * t4230;
t5832 = t4230 * pkin(3);
t4043 = t4854 - t5832;
t4040 = pkin(3) * t4236 + t4205 * t5328;
t5603 = t4040 * t4206;
t5628 = (-t3966 * t4230 + t4113 * t4236) * t4206;
t3627 = (t3990 * t5603 - t3996 * t4043) * t4235 + t3854 * t3996 + t3990 * t5628;
t5938 = t3568 * t3627;
t6177 = t3759 * t5938;
t3309 = t6177 - 0.2e1 * t4753;
t6195 = t3309 + t6177;
t3535 = 0.1e1 / t3538 ^ 2;
t3591 = t3602 ^ 2;
t5690 = t3535 * t3591;
t5202 = t3759 * t5690;
t3533 = 0.1e1 / t3537 ^ 2;
t3589 = t3599 ^ 2;
t5703 = t3533 * t3589;
t5216 = t3756 * t5703;
t3531 = 0.1e1 / t3536 ^ 2;
t3587 = t3596 ^ 2;
t5716 = t3531 * t3587;
t5230 = t3753 * t5716;
t3526 = 0.1e1 / t3529 ^ 2;
t3576 = t3584 ^ 2;
t5729 = t3526 * t3576;
t5244 = t3750 * t5729;
t3524 = 0.1e1 / t3528 ^ 2;
t3574 = t3581 ^ 2;
t5742 = t3524 * t3574;
t5258 = t3747 * t5742;
t3522 = 0.1e1 / t3527 ^ 2;
t3572 = t3578 ^ 2;
t5755 = t3522 * t3572;
t5272 = t3744 * t5755;
t6194 = -t5202 - t5216 - t5230 - t5244 - t5258 - t5272;
t5198 = t3535 * t5427;
t4748 = t3591 * t5198;
t4646 = t3759 * t4748;
t5212 = t3533 * t5432;
t4758 = t3589 * t5212;
t4652 = t3756 * t4758;
t5226 = t3531 * t5437;
t4768 = t3587 * t5226;
t4658 = t3753 * t4768;
t5240 = t3526 * t5445;
t4778 = t3576 * t5240;
t4664 = t3750 * t4778;
t5254 = t3524 * t5450;
t4788 = t3574 * t5254;
t4670 = t3747 * t4788;
t5268 = t3522 * t5455;
t4798 = t3572 * t5268;
t4676 = t3744 * t4798;
t4184 = t4201 ^ 2;
t5404 = 0.2e1 * t4184;
t6193 = (-t4646 - t4652 - t4658 - t4664 - t4670 - t4676) * t5404;
t4195 = t4229 ^ 2;
t5688 = t3535 * t4195;
t5201 = t3591 * t5688;
t4749 = t3759 * t5201;
t4194 = t4227 ^ 2;
t5701 = t3533 * t4194;
t5215 = t3589 * t5701;
t4759 = t3756 * t5215;
t4193 = t4225 ^ 2;
t5714 = t3531 * t4193;
t5229 = t3587 * t5714;
t4769 = t3753 * t5229;
t4189 = t4217 ^ 2;
t5727 = t3526 * t4189;
t5243 = t3576 * t5727;
t4779 = t3750 * t5243;
t4188 = t4215 ^ 2;
t5740 = t3524 * t4188;
t5257 = t3574 * t5740;
t4789 = t3747 * t5257;
t4187 = t4213 ^ 2;
t5753 = t3522 * t4187;
t5271 = t3572 * t5753;
t4799 = t3744 * t5271;
t6192 = (-t4749 - t4759 - t4769 - t4779 - t4789 - t4799) * t4184;
t3997 = t4199 * t5468 + t4203 * t4214;
t4003 = -t4199 * t4214 + t4203 * t5468;
t3785 = t3997 * t4162 + t4003 * t4156;
t4006 = t4199 * t4220 + t4203 * t5473;
t4009 = -t4199 * t5473 + t4203 * t4220;
t3794 = -t4006 * t4156 + t4009 * t4162;
t5592 = t4114 * t4213;
t4975 = t4202 * t5592;
t4337 = -t3785 * t5850 - t3985 * t4975;
t5849 = pkin(3) * t4202;
t5405 = pkin(2) * t5849;
t4918 = t4213 * t5405;
t4950 = t4202 * t5506;
t5593 = t4114 * t4201;
t4982 = t4190 * t5593;
t5376 = t4148 * t5849;
t5862 = pkin(2) * t4219;
t5382 = t4202 * t5862;
t5585 = t4148 * t4213;
t5599 = t4069 * t4201;
t5856 = pkin(3) * t4102;
t5882 = t5506 * (0.2e1 * t4190 - 0.1e1);
t5402 = 0.2e1 * t5572;
t5901 = t4202 * (t4190 * t5402 - t5881);
t3386 = t3794 * t4982 + (((-t3785 * t5592 + t3985 * t5376) * t4205 + t3794 * t5856) * t4201 + t4337 * t4186 - t4337) * t4219 + t3985 * t4918 + (t3794 * t5599 + (-t3985 * t5382 + (-t3785 * t4186 + t3985 * t4950 + t3785) * t5585 + (t3785 * t5882 + t3985 * t5901) * pkin(3)) * t4200) * pkin(9);
t4093 = t4148 * t5847;
t5325 = t4148 * t5881;
t4846 = t4220 * t5325;
t5335 = t4202 * t4151;
t4868 = t4148 * t5335;
t5454 = t4213 * t4220;
t4937 = t4202 * t5454;
t5474 = t4206 * t4213;
t5489 = t4202 * t4220;
t5492 = t4202 * t4214;
t5839 = pkin(9) * t4201;
t3548 = t3731 + ((t4114 * t4937 + t4093) * t5506 + (t4846 + t4988) * t5849 + (-t4852 - t4150) * t4206) * t4219 + ((pkin(3) * t5489 + t4148 * t5474) * t5520 + t4069 * t5492) * t5839 + (t4148 * t4937 - t5847) * t5336 + (-t4220 * t4868 + t4149) * t4213 + t4115;
t3542 = 0.1e1 / t3548;
t5687 = t3542 * t3578;
t6191 = t3744 * t3386 * t5687;
t3788 = -t3997 * t4156 + t4003 * t4162;
t3791 = t4006 * t4162 + t4009 * t4156;
t4334 = t3788 * t5850 + t3991 * t4975;
t3383 = t3791 * t4982 + (((t3788 * t5592 - t3991 * t5376) * t4205 + t3791 * t5856) * t4201 + t4334 * t4186 - t4334) * t4219 - t3991 * t4918 + (t3791 * t5599 + (t3991 * t5382 + (t3788 * t4186 - t3991 * t4950 - t3788) * t5585 + (-t3788 * t5882 - t3991 * t5901) * pkin(3)) * t4200) * pkin(9);
t5795 = t3383 * t3542;
t3275 = t3744 * t5795;
t3998 = t4199 * t5467 + t4203 * t4216;
t4004 = -t4199 * t4216 + t4203 * t5467;
t3786 = t3998 * t4163 + t4004 * t4157;
t4007 = t4199 * t4222 + t4203 * t5471;
t4010 = -t4199 * t5471 + t4203 * t4222;
t3795 = -t4007 * t4157 + t4010 * t4163;
t5591 = t4114 * t4215;
t4974 = t4202 * t5591;
t4336 = -t3786 * t5850 - t3986 * t4974;
t4917 = t4215 * t5405;
t4981 = t4191 * t5593;
t5861 = pkin(2) * t4221;
t5381 = t4202 * t5861;
t5584 = t4148 * t4215;
t5598 = t4070 * t4201;
t5855 = pkin(3) * t4104;
t5883 = t5506 * (0.2e1 * t4191 - 0.1e1);
t5902 = t4202 * (t4191 * t5402 - t5881);
t3387 = t3795 * t4981 + (((-t3786 * t5591 + t3986 * t5376) * t4205 + t3795 * t5855) * t4201 + t4336 * t4186 - t4336) * t4221 + t3986 * t4917 + (t3795 * t5598 + (-t3986 * t5381 + (-t3786 * t4186 + t3986 * t4950 + t3786) * t5584 + (t3786 * t5883 + t3986 * t5902) * pkin(3)) * t4200) * pkin(9);
t4845 = t4222 * t5325;
t5449 = t4215 * t4222;
t4936 = t4202 * t5449;
t5472 = t4206 * t4215;
t5488 = t4202 * t4222;
t5491 = t4202 * t4216;
t3549 = t3732 + ((t4114 * t4936 + t4093) * t5506 + (t4845 + t4987) * t5849 + (-t4851 - t4150) * t4206) * t4221 + ((pkin(3) * t5488 + t4148 * t5472) * t5520 + t4070 * t5491) * t5839 + (t4148 * t4936 - t5847) * t5336 + (-t4222 * t4868 + t4149) * t4215 + t4115;
t3544 = 0.1e1 / t3549;
t5686 = t3544 * t3581;
t6190 = t3747 * t3387 * t5686;
t3789 = -t3998 * t4157 + t4004 * t4163;
t3792 = t4007 * t4163 + t4010 * t4157;
t4333 = t3789 * t5850 + t3992 * t4974;
t3384 = t3792 * t4981 + (((t3789 * t5591 - t3992 * t5376) * t4205 + t3792 * t5855) * t4201 + t4333 * t4186 - t4333) * t4221 - t3992 * t4917 + (t3792 * t5598 + (t3992 * t5381 + (t3789 * t4186 - t3992 * t4950 - t3789) * t5584 + (-t3789 * t5883 - t3992 * t5902) * pkin(3)) * t4200) * pkin(9);
t5794 = t3384 * t3544;
t3276 = t3747 * t5794;
t3999 = t4199 * t5466 + t4203 * t4218;
t4005 = -t4199 * t4218 + t4203 * t5466;
t3787 = t3999 * t4164 + t4005 * t4158;
t4008 = t4199 * t4224 + t4203 * t5469;
t4011 = -t4199 * t5469 + t4203 * t4224;
t3796 = -t4008 * t4158 + t4011 * t4164;
t5590 = t4114 * t4217;
t4973 = t4202 * t5590;
t4335 = -t3787 * t5850 - t3987 * t4973;
t4916 = t4217 * t5405;
t4980 = t4192 * t5593;
t5860 = pkin(2) * t4223;
t5380 = t4202 * t5860;
t5583 = t4148 * t4217;
t5597 = t4071 * t4201;
t5854 = pkin(3) * t4106;
t5884 = t5506 * (0.2e1 * t4192 - 0.1e1);
t5903 = t4202 * (t4192 * t5402 - t5881);
t3388 = t3796 * t4980 + (((-t3787 * t5590 + t3987 * t5376) * t4205 + t3796 * t5854) * t4201 + t4335 * t4186 - t4335) * t4223 + t3987 * t4916 + (t3796 * t5597 + (-t3987 * t5380 + (-t3787 * t4186 + t3987 * t4950 + t3787) * t5583 + (t3787 * t5884 + t3987 * t5903) * pkin(3)) * t4200) * pkin(9);
t4844 = t4224 * t5325;
t5444 = t4217 * t4224;
t4935 = t4202 * t5444;
t5470 = t4206 * t4217;
t5487 = t4202 * t4224;
t5490 = t4202 * t4218;
t3550 = t3733 + ((t4114 * t4935 + t4093) * t5506 + (t4844 + t4986) * t5849 + (-t4850 - t4150) * t4206) * t4223 + ((pkin(3) * t5487 + t4148 * t5470) * t5520 + t4071 * t5490) * t5839 + (t4148 * t4935 - t5847) * t5336 + (-t4224 * t4868 + t4149) * t4217 + t4115;
t3546 = 0.1e1 / t3550;
t5685 = t3546 * t3584;
t6189 = t3750 * t3388 * t5685;
t3790 = -t3999 * t4158 + t4005 * t4164;
t3793 = t4008 * t4164 + t4011 * t4158;
t4332 = t3790 * t5850 + t3993 * t4973;
t3385 = t3793 * t4980 + (((t3790 * t5590 - t3993 * t5376) * t4205 + t3793 * t5854) * t4201 + t4332 * t4186 - t4332) * t4223 - t3993 * t4916 + (t3793 * t5597 + (t3993 * t5380 + (t3790 * t4186 - t3993 * t4950 - t3790) * t5583 + (-t3790 * t5884 - t3993 * t5903) * pkin(3)) * t4200) * pkin(9);
t5793 = t3385 * t3546;
t3277 = t3750 * t5793;
t4014 = t4199 * t5459 + t4203 * t4226;
t4017 = -t4199 * t4226 + t4203 * t5459;
t3809 = t4014 * t4165 + t4017 * t4159;
t4020 = t4199 * t4232 + t4203 * t5464;
t4023 = -t4199 * t5464 + t4203 * t4232;
t3818 = -t4020 * t4159 + t4023 * t4165;
t5589 = t4114 * t4225;
t4972 = t4202 * t5589;
t4331 = -t3809 * t5850 - t3988 * t4972;
t4915 = t4225 * t5405;
t4979 = t4196 * t5593;
t5859 = pkin(2) * t4231;
t5379 = t4202 * t5859;
t5579 = t4148 * t4225;
t5596 = t4075 * t4201;
t5853 = pkin(3) * t4108;
t5885 = t5506 * (0.2e1 * t4196 - 0.1e1);
t5904 = t4202 * (t4196 * t5402 - t5881);
t3392 = t3818 * t4979 + (((-t3809 * t5589 + t3988 * t5376) * t4205 + t3818 * t5853) * t4201 + t4331 * t4186 - t4331) * t4231 + t3988 * t4915 + (t3818 * t5596 + (-t3988 * t5379 + (-t3809 * t4186 + t3988 * t4950 + t3809) * t5579 + (t3809 * t5885 + t3988 * t5904) * pkin(3)) * t4200) * pkin(9);
t4843 = t4232 * t5325;
t5436 = t4225 * t4232;
t4934 = t4202 * t5436;
t5465 = t4206 * t4225;
t5483 = t4202 * t4232;
t5486 = t4202 * t4226;
t3560 = t3734 + ((t4114 * t4934 + t4093) * t5506 + (t4843 + t4985) * t5849 + (-t4849 - t4150) * t4206) * t4231 + ((pkin(3) * t5483 + t4148 * t5465) * t5520 + t4075 * t5486) * t5839 + (t4148 * t4934 - t5847) * t5336 + (-t4232 * t4868 + t4149) * t4225 + t4115;
t3554 = 0.1e1 / t3560;
t5684 = t3554 * t3596;
t6188 = t3753 * t3392 * t5684;
t3812 = -t4014 * t4159 + t4017 * t4165;
t3815 = t4020 * t4165 + t4023 * t4159;
t4328 = t3812 * t5850 + t3994 * t4972;
t3389 = t3815 * t4979 + (((t3812 * t5589 - t3994 * t5376) * t4205 + t3815 * t5853) * t4201 + t4328 * t4186 - t4328) * t4231 - t3994 * t4915 + (t3815 * t5596 + (t3994 * t5379 + (t3812 * t4186 - t3994 * t4950 - t3812) * t5579 + (-t3812 * t5885 - t3994 * t5904) * pkin(3)) * t4200) * pkin(9);
t5789 = t3389 * t3554;
t3278 = t3753 * t5789;
t4015 = t4199 * t5458 + t4203 * t4228;
t4018 = -t4199 * t4228 + t4203 * t5458;
t3810 = t4015 * t4166 + t4018 * t4160;
t4021 = t4199 * t4234 + t4203 * t5462;
t4024 = -t4199 * t5462 + t4203 * t4234;
t3819 = -t4021 * t4160 + t4024 * t4166;
t5588 = t4114 * t4227;
t4971 = t4202 * t5588;
t4330 = -t3810 * t5850 - t3989 * t4971;
t4914 = t4227 * t5405;
t4978 = t4197 * t5593;
t5858 = pkin(2) * t4233;
t5378 = t4202 * t5858;
t5578 = t4148 * t4227;
t5595 = t4076 * t4201;
t5852 = pkin(3) * t4110;
t5886 = t5506 * (0.2e1 * t4197 - 0.1e1);
t5905 = t4202 * (t4197 * t5402 - t5881);
t3393 = t3819 * t4978 + (((-t3810 * t5588 + t3989 * t5376) * t4205 + t3819 * t5852) * t4201 + t4330 * t4186 - t4330) * t4233 + t3989 * t4914 + (t3819 * t5595 + (-t3989 * t5378 + (-t3810 * t4186 + t3989 * t4950 + t3810) * t5578 + (t3810 * t5886 + t3989 * t5905) * pkin(3)) * t4200) * pkin(9);
t4842 = t4234 * t5325;
t5431 = t4227 * t4234;
t4933 = t4202 * t5431;
t5463 = t4206 * t4227;
t5482 = t4202 * t4234;
t5485 = t4202 * t4228;
t3561 = t3735 + ((t4114 * t4933 + t4093) * t5506 + (t4842 + t4984) * t5849 + (-t4848 - t4150) * t4206) * t4233 + ((pkin(3) * t5482 + t4148 * t5463) * t5520 + t4076 * t5485) * t5839 + (t4148 * t4933 - t5847) * t5336 + (-t4234 * t4868 + t4149) * t4227 + t4115;
t3556 = 0.1e1 / t3561;
t5683 = t3556 * t3599;
t6187 = t3756 * t3393 * t5683;
t3813 = -t4015 * t4160 + t4018 * t4166;
t3816 = t4021 * t4166 + t4024 * t4160;
t4327 = t3813 * t5850 + t3995 * t4971;
t3390 = t3816 * t4978 + (((t3813 * t5588 - t3995 * t5376) * t4205 + t3816 * t5852) * t4201 + t4327 * t4186 - t4327) * t4233 - t3995 * t4914 + (t3816 * t5595 + (t3995 * t5378 + (t3813 * t4186 - t3995 * t4950 - t3813) * t5578 + (-t3813 * t5886 - t3995 * t5905) * pkin(3)) * t4200) * pkin(9);
t5788 = t3390 * t3556;
t3279 = t3756 * t5788;
t4016 = t4199 * t5457 + t4203 * t4230;
t4019 = -t4199 * t4230 + t4203 * t5457;
t3811 = t4016 * t4167 + t4019 * t4161;
t4022 = t4199 * t4236 + t4203 * t5460;
t4025 = -t4199 * t5460 + t4203 * t4236;
t3820 = -t4022 * t4161 + t4025 * t4167;
t5587 = t4114 * t4229;
t4970 = t4202 * t5587;
t4329 = -t3811 * t5850 - t3990 * t4970;
t4913 = t4229 * t5405;
t4977 = t4198 * t5593;
t5857 = pkin(2) * t4235;
t5377 = t4202 * t5857;
t5577 = t4148 * t4229;
t5594 = t4077 * t4201;
t5851 = pkin(3) * t4112;
t5887 = t5506 * (0.2e1 * t4198 - 0.1e1);
t5906 = t4202 * (t4198 * t5402 - t5881);
t3394 = t3820 * t4977 + (((-t3811 * t5587 + t3990 * t5376) * t4205 + t3820 * t5851) * t4201 + t4329 * t4186 - t4329) * t4235 + t3990 * t4913 + (t3820 * t5594 + (-t3990 * t5377 + (-t3811 * t4186 + t3990 * t4950 + t3811) * t5577 + (t3811 * t5887 + t3990 * t5906) * pkin(3)) * t4200) * pkin(9);
t4841 = t4236 * t5325;
t5426 = t4229 * t4236;
t4932 = t4202 * t5426;
t5461 = t4206 * t4229;
t5481 = t4202 * t4236;
t5484 = t4202 * t4230;
t3562 = t3736 + ((t4114 * t4932 + t4093) * t5506 + (t4841 + t4983) * t5849 + (-t4847 - t4150) * t4206) * t4235 + ((pkin(3) * t5481 + t4148 * t5461) * t5520 + t4077 * t5484) * t5839 + (t4148 * t4932 - t5847) * t5336 + (-t4236 * t4868 + t4149) * t4229 + t4115;
t3558 = 0.1e1 / t3562;
t5682 = t3558 * t3602;
t6186 = t3759 * t3394 * t5682;
t3814 = -t4016 * t4161 + t4019 * t4167;
t3817 = t4022 * t4167 + t4025 * t4161;
t4326 = t3814 * t5850 + t3996 * t4970;
t3391 = t3817 * t4977 + (((t3814 * t5587 - t3996 * t5376) * t4205 + t3817 * t5851) * t4201 + t4326 * t4186 - t4326) * t4235 - t3996 * t4913 + (t3817 * t5594 + (t3996 * t5377 + (t3814 * t4186 - t3996 * t4950 - t3814) * t5577 + (-t3814 * t5887 - t3996 * t5906) * pkin(3)) * t4200) * pkin(9);
t5787 = t3391 * t3558;
t3280 = t3759 * t5787;
t3802 = t3990 * t4236 + t3996 * t5460;
t3808 = -t3990 * t4230 + t3996 * t5457;
t4861 = t4201 * t5335;
t3904 = t3996 * t4861;
t4906 = (-pkin(3) * t3802 + t3808 * t5334 - t3904) * t4229 + (t3802 * t4151 + (t3808 * t4205 - t3996 * t5507) * pkin(3)) * t4235;
t5689 = t3535 * t3602;
t5200 = t4906 * t5689;
t3800 = t3989 * t4234 + t3995 * t5462;
t3806 = -t3989 * t4228 + t3995 * t5458;
t3903 = t3995 * t4861;
t4907 = (-pkin(3) * t3800 + t3806 * t5334 - t3903) * t4227 + (t3800 * t4151 + (t3806 * t4205 - t3995 * t5507) * pkin(3)) * t4233;
t5702 = t3533 * t3599;
t5214 = t4907 * t5702;
t3798 = t3988 * t4232 + t3994 * t5464;
t3804 = -t3988 * t4226 + t3994 * t5459;
t3902 = t3994 * t4861;
t4908 = (-pkin(3) * t3798 + t3804 * t5334 - t3902) * t4225 + (t3798 * t4151 + (t3804 * t4205 - t3994 * t5507) * pkin(3)) * t4231;
t5715 = t3531 * t3596;
t5228 = t4908 * t5715;
t3778 = t3987 * t4224 + t3993 * t5469;
t3784 = -t3987 * t4218 + t3993 * t5466;
t3901 = t3993 * t4861;
t4909 = (-pkin(3) * t3778 + t3784 * t5334 - t3901) * t4217 + (t3778 * t4151 + (t3784 * t4205 - t3993 * t5507) * pkin(3)) * t4223;
t5728 = t3526 * t3584;
t5242 = t4909 * t5728;
t3776 = t3986 * t4222 + t3992 * t5471;
t3782 = -t3986 * t4216 + t3992 * t5467;
t3900 = t3992 * t4861;
t4910 = (-pkin(3) * t3776 + t3782 * t5334 - t3900) * t4215 + (t3776 * t4151 + (t3782 * t4205 - t3992 * t5507) * pkin(3)) * t4221;
t5741 = t3524 * t3581;
t5256 = t4910 * t5741;
t3774 = t3985 * t4220 + t3991 * t5473;
t3780 = -t3985 * t4214 + t3991 * t5468;
t3899 = t3991 * t4861;
t4911 = (-pkin(3) * t3774 + t3780 * t5334 - t3899) * t4213 + (t3774 * t4151 + (t3780 * t4205 - t3991 * t5507) * pkin(3)) * t4219;
t5754 = t3522 * t3578;
t5270 = t4911 * t5754;
t6185 = -t3744 * t5270 - t3747 * t5256 - t3750 * t5242 - t3753 * t5228 - t3756 * t5214 - t3759 * t5200;
t4995 = t4906 * t5427;
t4645 = t4995 * t5689;
t5020 = t4907 * t5432;
t4651 = t5020 * t5702;
t5045 = t4908 * t5437;
t4657 = t5045 * t5715;
t5070 = t4909 * t5445;
t4663 = t5070 * t5728;
t5095 = t4910 * t5450;
t4669 = t5095 * t5741;
t5120 = t4911 * t5455;
t4675 = t5120 * t5754;
t6184 = (-t3744 * t4675 - t3747 * t4669 - t3750 * t4663 - t3753 * t4657 - t3756 * t4651 - t3759 * t4645) * t5404;
t4747 = t4195 * t5200;
t4757 = t4194 * t5214;
t4767 = t4193 * t5228;
t4777 = t4189 * t5242;
t4787 = t4188 * t5256;
t4797 = t4187 * t5270;
t6183 = (-t3744 * t4797 - t3747 * t4787 - t3750 * t4777 - t3753 * t4767 - t3756 * t4757 - t3759 * t4747) * t4184;
t3617 = (t3985 * t4029 + t3991 * t5611) * t4219 - t3844 * t3985 + t3991 * t5633;
t5947 = t3563 * t3617;
t3619 = (t3986 * t4030 + t3992 * t5610) * t4221 - t3846 * t3986 + t3992 * t5632;
t5945 = t3564 * t3619;
t3621 = (t3987 * t4031 + t3993 * t5609) * t4223 - t3848 * t3987 + t3993 * t5631;
t5943 = t3565 * t3621;
t3629 = (t3988 * t4041 + t3994 * t5605) * t4231 - t3850 * t3988 + t3994 * t5630;
t5941 = t3566 * t3629;
t3631 = (t3989 * t4042 + t3995 * t5604) * t4233 - t3852 * t3989 + t3995 * t5629;
t5939 = t3567 * t3631;
t3633 = (t3990 * t4043 + t3996 * t5603) * t4235 - t3854 * t3990 + t3996 * t5628;
t5937 = t3568 * t3633;
t3353 = -t5948 + 0.2e1 * t5122;
t6176 = t3353 - t5948;
t5121 = t4911 * t5758;
t3355 = -t5947 + 0.2e1 * t5121;
t6175 = t3355 - t5947;
t3357 = -t5946 + 0.2e1 * t5097;
t6174 = t3357 - t5946;
t5096 = t4910 * t5745;
t3359 = -t5945 + 0.2e1 * t5096;
t6173 = t3359 - t5945;
t3361 = -t5944 + 0.2e1 * t5072;
t6172 = t3361 - t5944;
t5071 = t4909 * t5732;
t3363 = -t5943 + 0.2e1 * t5071;
t6171 = t3363 - t5943;
t3371 = -t5942 + 0.2e1 * t5047;
t6170 = t3371 - t5942;
t5046 = t4908 * t5719;
t3373 = -t5941 + 0.2e1 * t5046;
t6169 = t3373 - t5941;
t3375 = -t5940 + 0.2e1 * t5022;
t6168 = t3375 - t5940;
t5021 = t4907 * t5706;
t3377 = -t5939 + 0.2e1 * t5021;
t6167 = t3377 - t5939;
t3379 = -t5938 + 0.2e1 * t4997;
t6166 = t3379 - t5938;
t4996 = t4906 * t5693;
t3381 = -t5937 + 0.2e1 * t4996;
t6165 = t3381 - t5937;
t5542 = t4182 * t4178;
t4095 = t4246 * t5542;
t5569 = t4179 * t4240;
t3893 = t4182 * t5420 - t4095 + t5569;
t3743 = t3907 * t4180 - t4183 * t4062;
t3653 = (t3743 * t4183 - t3744 * t4180) * t4182;
t5533 = t4183 * t4182;
t3672 = -t3744 * t4179 + t3893 * t5533;
t5792 = t3386 * t3542;
t4931 = t3653 * t5792 + t3672 * t5795 - t3743 * t4179;
t5555 = t4180 * t4182;
t3068 = t3893 * t5555 + t4931;
t3065 = t3068 * t5492;
t5765 = t3521 * t3578;
t5918 = t3521 * t4911;
t3233 = t3653 * t5918 + t3672 * t5765;
t5840 = pkin(8) * t4201;
t5367 = t3233 * t5840;
t3002 = t3065 + t5367;
t5318 = t3068 * t5489;
t5505 = t4201 * t4206;
t5874 = pkin(2) * t3233;
t4560 = (t5318 + t5874) * t4205 + t3068 * t5505;
t2828 = -t4213 * t3002 + t4219 * t4560;
t3001 = t3065 + 0.2e1 * t5367;
t3320 = -t3653 * t5947 - t3672 * t5948;
t5504 = t4201 * t4213;
t5343 = pkin(8) * t5504;
t2840 = (-t3001 * t4213 + t3320 * t5862) * t4205 + (t5318 + 0.2e1 * t5874) * t4219 - t3320 * t5343;
t6164 = -t2828 * t5948 + t2840 * t5765;
t6163 = t2828 * t5947 - t2840 * t5918;
t2829 = -t4219 * t3002 - t4213 * t4560;
t5819 = t3320 * t4205;
t2843 = (-t5318 + (-0.2e1 * t3233 - t5819) * pkin(2)) * t4213 - t4219 * (t3001 * t4205 + t3320 * t5840);
t6162 = -t2829 * t5948 + t2843 * t5765;
t6161 = t2829 * t5947 - t2843 * t5918;
t4096 = t4247 * t5542;
t5568 = t4179 * t4241;
t3894 = t4182 * t5419 - t4096 + t5568;
t3746 = t3910 * t4180 - t4183 * t4063;
t3654 = (t3746 * t4183 - t3747 * t4180) * t4182;
t3673 = -t3747 * t4179 + t3894 * t5533;
t5791 = t3387 * t3544;
t4930 = t3654 * t5791 + t3673 * t5794 - t3746 * t4179;
t3069 = t3894 * t5555 + t4930;
t3066 = t3069 * t5491;
t5752 = t3523 * t3581;
t5917 = t3523 * t4910;
t3234 = t3654 * t5917 + t3673 * t5752;
t5366 = t3234 * t5840;
t3004 = t3066 + t5366;
t5317 = t3069 * t5488;
t5873 = pkin(2) * t3234;
t4559 = (t5317 + t5873) * t4205 + t3069 * t5505;
t2830 = -t4215 * t3004 + t4221 * t4559;
t3003 = t3066 + 0.2e1 * t5366;
t3321 = -t3654 * t5945 - t3673 * t5946;
t5502 = t4201 * t4215;
t5342 = pkin(8) * t5502;
t2841 = (-t3003 * t4215 + t3321 * t5861) * t4205 + (t5317 + 0.2e1 * t5873) * t4221 - t3321 * t5342;
t6160 = -t2830 * t5946 + t2841 * t5752;
t6159 = t2830 * t5945 - t2841 * t5917;
t2831 = -t4221 * t3004 - t4215 * t4559;
t5818 = t3321 * t4205;
t2844 = (-t5317 + (-0.2e1 * t3234 - t5818) * pkin(2)) * t4215 - t4221 * (t3003 * t4205 + t3321 * t5840);
t6158 = -t2831 * t5946 + t2844 * t5752;
t6157 = t2831 * t5945 - t2844 * t5917;
t4097 = t4248 * t5542;
t5567 = t4179 * t4242;
t3895 = t4182 * t5418 - t4097 + t5567;
t3749 = t3913 * t4180 - t4183 * t4064;
t3655 = (t3749 * t4183 - t3750 * t4180) * t4182;
t3674 = -t3750 * t4179 + t3895 * t5533;
t5790 = t3388 * t3546;
t4929 = t3655 * t5790 + t3674 * t5793 - t3749 * t4179;
t3070 = t3895 * t5555 + t4929;
t3067 = t3070 * t5490;
t5739 = t3525 * t3584;
t5916 = t3525 * t4909;
t3235 = t3655 * t5916 + t3674 * t5739;
t5365 = t3235 * t5840;
t3006 = t3067 + t5365;
t5316 = t3070 * t5487;
t5872 = pkin(2) * t3235;
t4558 = (t5316 + t5872) * t4205 + t3070 * t5505;
t2832 = -t4217 * t3006 + t4223 * t4558;
t3005 = t3067 + 0.2e1 * t5365;
t3322 = -t3655 * t5943 - t3674 * t5944;
t5500 = t4201 * t4217;
t5341 = pkin(8) * t5500;
t2842 = (-t3005 * t4217 + t3322 * t5860) * t4205 + (t5316 + 0.2e1 * t5872) * t4223 - t3322 * t5341;
t6156 = -t2832 * t5944 + t2842 * t5739;
t6155 = t2832 * t5943 - t2842 * t5916;
t2833 = -t4223 * t3006 - t4217 * t4558;
t5817 = t3322 * t4205;
t2845 = (-t5316 + (-0.2e1 * t3235 - t5817) * pkin(2)) * t4217 - t4223 * (t3005 * t4205 + t3322 * t5840);
t6154 = -t2833 * t5944 + t2845 * t5739;
t6153 = t2833 * t5943 - t2845 * t5916;
t4098 = t4249 * t5542;
t5566 = t4179 * t4243;
t3896 = t4182 * t5417 - t4098 + t5566;
t3752 = t3916 * t4180 - t4183 * t4065;
t3656 = (t3752 * t4183 - t3753 * t4180) * t4182;
t3675 = -t3753 * t4179 + t3896 * t5533;
t5786 = t3392 * t3554;
t4928 = t3656 * t5786 + t3675 * t5789 - t3752 * t4179;
t3086 = t3896 * t5555 + t4928;
t3083 = t3086 * t5486;
t5726 = t3530 * t3596;
t5915 = t3530 * t4908;
t3236 = t3656 * t5915 + t3675 * t5726;
t5364 = t3236 * t5840;
t3011 = t3083 + t5364;
t5315 = t3086 * t5483;
t5871 = pkin(2) * t3236;
t4557 = (t5315 + t5871) * t4205 + t3086 * t5505;
t2834 = -t4225 * t3011 + t4231 * t4557;
t3010 = t3083 + 0.2e1 * t5364;
t3326 = -t3656 * t5941 - t3675 * t5942;
t5498 = t4201 * t4225;
t5340 = pkin(8) * t5498;
t2846 = (-t3010 * t4225 + t3326 * t5859) * t4205 + (t5315 + 0.2e1 * t5871) * t4231 - t3326 * t5340;
t6152 = -t2834 * t5942 + t2846 * t5726;
t6151 = t2834 * t5941 - t2846 * t5915;
t2835 = -t4231 * t3011 - t4225 * t4557;
t5816 = t3326 * t4205;
t2849 = (-t5315 + (-0.2e1 * t3236 - t5816) * pkin(2)) * t4225 - t4231 * (t3010 * t4205 + t3326 * t5840);
t6150 = -t2835 * t5942 + t2849 * t5726;
t6149 = t2835 * t5941 - t2849 * t5915;
t4099 = t4250 * t5542;
t5565 = t4179 * t4244;
t3897 = t4182 * t5416 - t4099 + t5565;
t3755 = t3919 * t4180 - t4183 * t4066;
t3657 = (t3755 * t4183 - t3756 * t4180) * t4182;
t3676 = -t3756 * t4179 + t3897 * t5533;
t5785 = t3393 * t3556;
t4927 = t3657 * t5785 + t3676 * t5788 - t3755 * t4179;
t3087 = t3897 * t5555 + t4927;
t3084 = t3087 * t5485;
t5713 = t3532 * t3599;
t5914 = t3532 * t4907;
t3237 = t3657 * t5914 + t3676 * t5713;
t5363 = t3237 * t5840;
t3013 = t3084 + t5363;
t5314 = t3087 * t5482;
t5870 = pkin(2) * t3237;
t4556 = (t5314 + t5870) * t4205 + t3087 * t5505;
t2836 = -t4227 * t3013 + t4233 * t4556;
t3012 = t3084 + 0.2e1 * t5363;
t3327 = -t3657 * t5939 - t3676 * t5940;
t5496 = t4201 * t4227;
t5339 = pkin(8) * t5496;
t2847 = (-t3012 * t4227 + t3327 * t5858) * t4205 + (t5314 + 0.2e1 * t5870) * t4233 - t3327 * t5339;
t6148 = -t2836 * t5940 + t2847 * t5713;
t6147 = t2836 * t5939 - t2847 * t5914;
t2837 = -t4233 * t3013 - t4227 * t4556;
t5815 = t3327 * t4205;
t2850 = (-t5314 + (-0.2e1 * t3237 - t5815) * pkin(2)) * t4227 - t4233 * (t3012 * t4205 + t3327 * t5840);
t6146 = -t2837 * t5940 + t2850 * t5713;
t6145 = t2837 * t5939 - t2850 * t5914;
t4100 = t4251 * t5542;
t5564 = t4179 * t4245;
t3898 = t4182 * t5415 - t4100 + t5564;
t3758 = t3922 * t4180 - t4183 * t4067;
t3658 = (t3758 * t4183 - t3759 * t4180) * t4182;
t3677 = -t3759 * t4179 + t3898 * t5533;
t5784 = t3394 * t3558;
t4926 = t3658 * t5784 + t3677 * t5787 - t3758 * t4179;
t3088 = t3898 * t5555 + t4926;
t3085 = t3088 * t5484;
t5700 = t3534 * t3602;
t5913 = t3534 * t4906;
t3238 = t3658 * t5913 + t3677 * t5700;
t5362 = t3238 * t5840;
t3015 = t3085 + t5362;
t5313 = t3088 * t5481;
t5869 = pkin(2) * t3238;
t4555 = (t5313 + t5869) * t4205 + t3088 * t5505;
t2838 = -t4229 * t3015 + t4235 * t4555;
t3014 = t3085 + 0.2e1 * t5362;
t3328 = -t3658 * t5937 - t3677 * t5938;
t5494 = t4201 * t4229;
t5338 = pkin(8) * t5494;
t2848 = (-t3014 * t4229 + t3328 * t5857) * t4205 + (t5313 + 0.2e1 * t5869) * t4235 - t3328 * t5338;
t6144 = -t2838 * t5938 + t2848 * t5700;
t6143 = t2838 * t5937 - t2848 * t5913;
t2839 = -t4235 * t3015 - t4229 * t4555;
t5814 = t3328 * t4205;
t2851 = (-t5313 + (-0.2e1 * t3238 - t5814) * pkin(2)) * t4229 - t4235 * (t3014 * t4205 + t3328 * t5840);
t6142 = -t2839 * t5938 + t2851 * t5700;
t6141 = t2839 * t5937 - t2851 * t5913;
t3659 = t3743 * t4180 + t3744 * t4183;
t5627 = t3893 * t4180;
t3110 = t3659 * t5792 - t3893 * t4183 + t5627 * t5795;
t3107 = t3110 * t5492;
t3239 = t3659 * t5918 + t5627 * t5765;
t5361 = t3239 * t5840;
t3020 = t3107 + t5361;
t5312 = t3110 * t5489;
t5868 = pkin(2) * t3239;
t4554 = (t5312 + t5868) * t4205 + t3110 * t5505;
t2852 = -t4213 * t3020 + t4219 * t4554;
t3019 = t3107 + 0.2e1 * t5361;
t3338 = -t3659 * t5947 - t5627 * t5948;
t2864 = (-t3019 * t4213 + t3338 * t5862) * t4205 + (t5312 + 0.2e1 * t5868) * t4219 - t3338 * t5343;
t6140 = -t2852 * t5948 + t2864 * t5765;
t6139 = t2852 * t5947 - t2864 * t5918;
t2853 = -t4219 * t3020 - t4213 * t4554;
t5807 = t3338 * t4205;
t2867 = (-t5312 + (-0.2e1 * t3239 - t5807) * pkin(2)) * t4213 - t4219 * (t3019 * t4205 + t3338 * t5840);
t6138 = -t2853 * t5948 + t2867 * t5765;
t6137 = t2853 * t5947 - t2867 * t5918;
t3660 = t3746 * t4180 + t3747 * t4183;
t5626 = t3894 * t4180;
t3111 = t3660 * t5791 - t3894 * t4183 + t5626 * t5794;
t3108 = t3111 * t5491;
t3240 = t3660 * t5917 + t5626 * t5752;
t5360 = t3240 * t5840;
t3022 = t3108 + t5360;
t5311 = t3111 * t5488;
t5867 = pkin(2) * t3240;
t4553 = (t5311 + t5867) * t4205 + t3111 * t5505;
t2854 = -t4215 * t3022 + t4221 * t4553;
t3021 = t3108 + 0.2e1 * t5360;
t3339 = -t3660 * t5945 - t5626 * t5946;
t2865 = (-t3021 * t4215 + t3339 * t5861) * t4205 + (t5311 + 0.2e1 * t5867) * t4221 - t3339 * t5342;
t6136 = -t2854 * t5946 + t2865 * t5752;
t6135 = t2854 * t5945 - t2865 * t5917;
t2855 = -t4221 * t3022 - t4215 * t4553;
t5806 = t3339 * t4205;
t2868 = (-t5311 + (-0.2e1 * t3240 - t5806) * pkin(2)) * t4215 - t4221 * (t3021 * t4205 + t3339 * t5840);
t6134 = -t2855 * t5946 + t2868 * t5752;
t6133 = t2855 * t5945 - t2868 * t5917;
t3661 = t3749 * t4180 + t3750 * t4183;
t5625 = t3895 * t4180;
t3112 = t3661 * t5790 - t3895 * t4183 + t5625 * t5793;
t3109 = t3112 * t5490;
t3241 = t3661 * t5916 + t5625 * t5739;
t5359 = t3241 * t5840;
t3024 = t3109 + t5359;
t5310 = t3112 * t5487;
t5866 = pkin(2) * t3241;
t4552 = (t5310 + t5866) * t4205 + t3112 * t5505;
t2856 = -t4217 * t3024 + t4223 * t4552;
t3023 = t3109 + 0.2e1 * t5359;
t3340 = -t3661 * t5943 - t5625 * t5944;
t2866 = (-t3023 * t4217 + t3340 * t5860) * t4205 + (t5310 + 0.2e1 * t5866) * t4223 - t3340 * t5341;
t6132 = -t2856 * t5944 + t2866 * t5739;
t6131 = t2856 * t5943 - t2866 * t5916;
t2857 = -t4223 * t3024 - t4217 * t4552;
t5805 = t3340 * t4205;
t2869 = (-t5310 + (-0.2e1 * t3241 - t5805) * pkin(2)) * t4217 - t4223 * (t3023 * t4205 + t3340 * t5840);
t6130 = -t2857 * t5944 + t2869 * t5739;
t6129 = t2857 * t5943 - t2869 * t5916;
t3662 = t3752 * t4180 + t3753 * t4183;
t5624 = t3896 * t4180;
t3116 = t3662 * t5786 - t3896 * t4183 + t5624 * t5789;
t3113 = t3116 * t5486;
t3242 = t3662 * t5915 + t5624 * t5726;
t5358 = t3242 * t5840;
t3029 = t3113 + t5358;
t5309 = t3116 * t5483;
t5865 = pkin(2) * t3242;
t4551 = (t5309 + t5865) * t4205 + t3116 * t5505;
t2858 = -t4225 * t3029 + t4231 * t4551;
t3028 = t3113 + 0.2e1 * t5358;
t3344 = -t3662 * t5941 - t5624 * t5942;
t2870 = (-t3028 * t4225 + t3344 * t5859) * t4205 + (t5309 + 0.2e1 * t5865) * t4231 - t3344 * t5340;
t6128 = -t2858 * t5942 + t2870 * t5726;
t6127 = t2858 * t5941 - t2870 * t5915;
t2859 = -t4231 * t3029 - t4225 * t4551;
t5804 = t3344 * t4205;
t2873 = (-t5309 + (-0.2e1 * t3242 - t5804) * pkin(2)) * t4225 - t4231 * (t3028 * t4205 + t3344 * t5840);
t6126 = -t2859 * t5942 + t2873 * t5726;
t6125 = t2859 * t5941 - t2873 * t5915;
t3663 = t3755 * t4180 + t3756 * t4183;
t5623 = t3897 * t4180;
t3117 = t3663 * t5785 - t3897 * t4183 + t5623 * t5788;
t3114 = t3117 * t5485;
t3243 = t3663 * t5914 + t5623 * t5713;
t5357 = t3243 * t5840;
t3031 = t3114 + t5357;
t5308 = t3117 * t5482;
t5864 = pkin(2) * t3243;
t4550 = (t5308 + t5864) * t4205 + t3117 * t5505;
t2860 = -t4227 * t3031 + t4233 * t4550;
t3030 = t3114 + 0.2e1 * t5357;
t3345 = -t3663 * t5939 - t5623 * t5940;
t2871 = (-t3030 * t4227 + t3345 * t5858) * t4205 + (t5308 + 0.2e1 * t5864) * t4233 - t3345 * t5339;
t6124 = -t2860 * t5940 + t2871 * t5713;
t6123 = t2860 * t5939 - t2871 * t5914;
t2861 = -t4233 * t3031 - t4227 * t4550;
t5803 = t3345 * t4205;
t2874 = (-t5308 + (-0.2e1 * t3243 - t5803) * pkin(2)) * t4227 - t4233 * (t3030 * t4205 + t3345 * t5840);
t6122 = -t2861 * t5940 + t2874 * t5713;
t6121 = t2861 * t5939 - t2874 * t5914;
t3664 = t3758 * t4180 + t3759 * t4183;
t5622 = t3898 * t4180;
t3118 = t3664 * t5784 - t3898 * t4183 + t5622 * t5787;
t3115 = t3118 * t5484;
t3244 = t3664 * t5913 + t5622 * t5700;
t5356 = t3244 * t5840;
t3033 = t3115 + t5356;
t5307 = t3118 * t5481;
t5863 = pkin(2) * t3244;
t4549 = (t5307 + t5863) * t4205 + t3118 * t5505;
t2862 = -t4229 * t3033 + t4235 * t4549;
t3032 = t3115 + 0.2e1 * t5356;
t3346 = -t3664 * t5937 - t5622 * t5938;
t2872 = (-t3032 * t4229 + t3346 * t5857) * t4205 + (t5307 + 0.2e1 * t5863) * t4235 - t3346 * t5338;
t6120 = -t2862 * t5938 + t2872 * t5700;
t6119 = t2862 * t5937 - t2872 * t5913;
t2863 = -t4235 * t3033 - t4229 * t4549;
t5802 = t3346 * t4205;
t2875 = (-t5307 + (-0.2e1 * t3244 - t5802) * pkin(2)) * t4229 - t4235 * (t3032 * t4205 + t3346 * t5840);
t6118 = -t2863 * t5938 + t2875 * t5700;
t6117 = t2863 * t5937 - t2875 * t5913;
t3257 = -t3275 - t3743;
t3251 = t3257 * t5492;
t5355 = t3521 * t5840;
t4892 = t3578 * t5355;
t4700 = t3744 * t4892;
t3174 = t3251 - t4700;
t5651 = t3578 * t3744;
t5280 = t3521 * t5651;
t4904 = pkin(2) * t5280;
t5306 = t3257 * t5489;
t4536 = (-t4904 + t5306) * t4205 + t3257 * t5505;
t2911 = -t4213 * t3174 + t4219 * t4536;
t3173 = t3251 - 0.2e1 * t4700;
t4879 = t3563 * t5343;
t4693 = t3611 * t4879;
t5388 = t3563 * t5862;
t4898 = t3611 * t5388;
t2929 = (-t3173 * t4213 + t3744 * t4898) * t4205 + (-0.2e1 * t4904 + t5306) * t4219 - t3744 * t4693;
t6116 = -t2911 * t5948 + t2929 * t5765;
t6115 = t2911 * t5947 - t2929 * t5918;
t2912 = -t4219 * t3174 - t4213 * t4536;
t5171 = t4205 * t5948;
t4361 = (t5171 - 0.2e1 * t5765) * pkin(2);
t5349 = t3563 * t5840;
t4880 = t3611 * t5349;
t2932 = (-t3744 * t4361 - t5306) * t4213 - t4219 * (t3173 * t4205 + t3744 * t4880);
t6114 = -t2912 * t5948 + t2932 * t5765;
t6113 = t2912 * t5947 - t2932 * t5918;
t3258 = -t3276 - t3746;
t3252 = t3258 * t5491;
t5354 = t3523 * t5840;
t4890 = t3581 * t5354;
t4699 = t3747 * t4890;
t3176 = t3252 - t4699;
t5649 = t3581 * t3747;
t5266 = t3523 * t5649;
t4903 = pkin(2) * t5266;
t5305 = t3258 * t5488;
t4535 = (-t4903 + t5305) * t4205 + t3258 * t5505;
t2913 = -t4215 * t3176 + t4221 * t4535;
t3175 = t3252 - 0.2e1 * t4699;
t4877 = t3564 * t5342;
t4692 = t3613 * t4877;
t5387 = t3564 * t5861;
t4897 = t3613 * t5387;
t2930 = (-t3175 * t4215 + t3747 * t4897) * t4205 + (-0.2e1 * t4903 + t5305) * t4221 - t3747 * t4692;
t6112 = -t2913 * t5946 + t2930 * t5752;
t6111 = t2913 * t5945 - t2930 * t5917;
t2914 = -t4221 * t3176 - t4215 * t4535;
t5166 = t4205 * t5946;
t4360 = (t5166 - 0.2e1 * t5752) * pkin(2);
t5348 = t3564 * t5840;
t4878 = t3613 * t5348;
t2933 = (-t3747 * t4360 - t5305) * t4215 - t4221 * (t3175 * t4205 + t3747 * t4878);
t6110 = -t2914 * t5946 + t2933 * t5752;
t6109 = t2914 * t5945 - t2933 * t5917;
t3259 = -t3277 - t3749;
t3253 = t3259 * t5490;
t5353 = t3525 * t5840;
t4888 = t3584 * t5353;
t4698 = t3750 * t4888;
t3178 = t3253 - t4698;
t5647 = t3584 * t3750;
t5252 = t3525 * t5647;
t4902 = pkin(2) * t5252;
t5304 = t3259 * t5487;
t4534 = (-t4902 + t5304) * t4205 + t3259 * t5505;
t2915 = -t4217 * t3178 + t4223 * t4534;
t3177 = t3253 - 0.2e1 * t4698;
t4875 = t3565 * t5341;
t4691 = t3615 * t4875;
t5386 = t3565 * t5860;
t4896 = t3615 * t5386;
t2931 = (-t3177 * t4217 + t3750 * t4896) * t4205 + (-0.2e1 * t4902 + t5304) * t4223 - t3750 * t4691;
t6108 = -t2915 * t5944 + t2931 * t5739;
t6107 = t2915 * t5943 - t2931 * t5916;
t2916 = -t4223 * t3178 - t4217 * t4534;
t5161 = t4205 * t5944;
t4359 = (t5161 - 0.2e1 * t5739) * pkin(2);
t5347 = t3565 * t5840;
t4876 = t3615 * t5347;
t2934 = (-t3750 * t4359 - t5304) * t4217 - t4223 * (t3177 * t4205 + t3750 * t4876);
t6106 = -t2916 * t5944 + t2934 * t5739;
t6105 = t2916 * t5943 - t2934 * t5916;
t3269 = -t3278 - t3752;
t3263 = t3269 * t5486;
t5352 = t3530 * t5840;
t4886 = t3596 * t5352;
t4697 = t3753 * t4886;
t3183 = t3263 - t4697;
t5645 = t3596 * t3753;
t5238 = t3530 * t5645;
t4901 = pkin(2) * t5238;
t5303 = t3269 * t5483;
t4533 = (-t4901 + t5303) * t4205 + t3269 * t5505;
t2923 = -t4225 * t3183 + t4231 * t4533;
t3182 = t3263 - 0.2e1 * t4697;
t4873 = t3566 * t5340;
t4690 = t3623 * t4873;
t5385 = t3566 * t5859;
t4895 = t3623 * t5385;
t2941 = (-t3182 * t4225 + t3753 * t4895) * t4205 + (-0.2e1 * t4901 + t5303) * t4231 - t3753 * t4690;
t6104 = -t2923 * t5942 + t2941 * t5726;
t6103 = t2923 * t5941 - t2941 * t5915;
t2924 = -t4231 * t3183 - t4225 * t4533;
t5156 = t4205 * t5942;
t4358 = (t5156 - 0.2e1 * t5726) * pkin(2);
t5346 = t3566 * t5840;
t4874 = t3623 * t5346;
t2944 = (-t3753 * t4358 - t5303) * t4225 - t4231 * (t3182 * t4205 + t3753 * t4874);
t6102 = -t2924 * t5942 + t2944 * t5726;
t6101 = t2924 * t5941 - t2944 * t5915;
t3270 = -t3279 - t3755;
t3264 = t3270 * t5485;
t5351 = t3532 * t5840;
t4884 = t3599 * t5351;
t4696 = t3756 * t4884;
t3185 = t3264 - t4696;
t5643 = t3599 * t3756;
t5224 = t3532 * t5643;
t4900 = pkin(2) * t5224;
t5302 = t3270 * t5482;
t4532 = (-t4900 + t5302) * t4205 + t3270 * t5505;
t2925 = -t4227 * t3185 + t4233 * t4532;
t3184 = t3264 - 0.2e1 * t4696;
t4871 = t3567 * t5339;
t4689 = t3625 * t4871;
t5384 = t3567 * t5858;
t4894 = t3625 * t5384;
t2942 = (-t3184 * t4227 + t3756 * t4894) * t4205 + (-0.2e1 * t4900 + t5302) * t4233 - t3756 * t4689;
t6100 = -t2925 * t5940 + t2942 * t5713;
t6099 = t2925 * t5939 - t2942 * t5914;
t2926 = -t4233 * t3185 - t4227 * t4532;
t5151 = t4205 * t5940;
t4357 = (t5151 - 0.2e1 * t5713) * pkin(2);
t5345 = t3567 * t5840;
t4872 = t3625 * t5345;
t2945 = (-t3756 * t4357 - t5302) * t4227 - t4233 * (t3184 * t4205 + t3756 * t4872);
t6098 = -t2926 * t5940 + t2945 * t5713;
t6097 = t2926 * t5939 - t2945 * t5914;
t3271 = -t3280 - t3758;
t3265 = t3271 * t5484;
t5350 = t3534 * t5840;
t4882 = t3602 * t5350;
t4695 = t3759 * t4882;
t3187 = t3265 - t4695;
t5641 = t3602 * t3759;
t5210 = t3534 * t5641;
t4899 = pkin(2) * t5210;
t5301 = t3271 * t5481;
t4531 = (-t4899 + t5301) * t4205 + t3271 * t5505;
t2927 = -t4229 * t3187 + t4235 * t4531;
t3186 = t3265 - 0.2e1 * t4695;
t4869 = t3568 * t5338;
t4688 = t3627 * t4869;
t5383 = t3568 * t5857;
t4893 = t3627 * t5383;
t2943 = (-t3186 * t4229 + t3759 * t4893) * t4205 + (-0.2e1 * t4899 + t5301) * t4235 - t3759 * t4688;
t6096 = -t2927 * t5938 + t2943 * t5700;
t6095 = t2927 * t5937 - t2943 * t5913;
t2928 = -t4235 * t3187 - t4229 * t4531;
t5146 = t4205 * t5938;
t4356 = (t5146 - 0.2e1 * t5700) * pkin(2);
t5344 = t3568 * t5840;
t4870 = t3627 * t5344;
t2946 = (-t3759 * t4356 - t5301) * t4229 - t4235 * (t3186 * t4205 + t3759 * t4870);
t6094 = -t2928 * t5938 + t2946 * t5700;
t6093 = t2928 * t5937 - t2946 * t5913;
t5195 = t3542 * t5492;
t3296 = t3383 * t5195;
t3192 = t3296 + t4892;
t5194 = t3542 * t5489;
t4833 = t3383 * t5194;
t5196 = t3542 * t5505;
t5400 = pkin(2) * t5765;
t4433 = (t4833 + t5400) * t4205 + t3383 * t5196;
t2953 = -t4213 * t3192 + t4219 * t4433;
t3191 = t3296 + 0.2e1 * t4892;
t2977 = (-t3191 * t4213 - t4898) * t4205 + (t4833 + 0.2e1 * t5400) * t4219 + t4693;
t6092 = -t2953 * t5948 + t2977 * t5765;
t6091 = t2953 * t5947 - t2977 * t5918;
t2954 = -t4219 * t3192 - t4213 * t4433;
t2983 = (t4361 - t4833) * t4213 - t4219 * (t3191 * t4205 - t4880);
t6090 = -t2954 * t5948 + t2983 * t5765;
t6089 = t2954 * t5947 - t2983 * t5918;
t3297 = t3386 * t5195;
t4891 = t4911 * t5355;
t3194 = t3297 + t4891;
t4827 = t3386 * t5194;
t5399 = pkin(2) * t5918;
t4432 = (t4827 + t5399) * t4205 + t3386 * t5196;
t2955 = -t4213 * t3194 + t4219 * t4432;
t3193 = t3297 + 0.2e1 * t4891;
t2980 = (-t3193 * t4213 - t3617 * t5388) * t4205 + (t4827 + 0.2e1 * t5399) * t4219 + t3617 * t4879;
t6088 = -t2955 * t5948 + t2980 * t5765;
t6087 = t2955 * t5947 - t2980 * t5918;
t2956 = -t4219 * t3194 - t4213 * t4432;
t5169 = t4205 * t5947;
t2986 = (-t4827 + (t5169 - 0.2e1 * t5918) * pkin(2)) * t4213 - t4219 * (t3193 * t4205 - t3617 * t5349);
t6086 = -t2956 * t5948 + t2986 * t5765;
t6085 = t2956 * t5947 - t2986 * t5918;
t5191 = t3544 * t5491;
t3298 = t3384 * t5191;
t3196 = t3298 + t4890;
t5190 = t3544 * t5488;
t4831 = t3384 * t5190;
t5192 = t3544 * t5505;
t5398 = pkin(2) * t5752;
t4431 = (t4831 + t5398) * t4205 + t3384 * t5192;
t2957 = -t4215 * t3196 + t4221 * t4431;
t3195 = t3298 + 0.2e1 * t4890;
t2978 = (-t3195 * t4215 - t4897) * t4205 + (t4831 + 0.2e1 * t5398) * t4221 + t4692;
t6084 = -t2957 * t5946 + t2978 * t5752;
t6083 = t2957 * t5945 - t2978 * t5917;
t2958 = -t4221 * t3196 - t4215 * t4431;
t2984 = (t4360 - t4831) * t4215 - t4221 * (t3195 * t4205 - t4878);
t6082 = -t2958 * t5946 + t2984 * t5752;
t6081 = t2958 * t5945 - t2984 * t5917;
t3299 = t3387 * t5191;
t4889 = t4910 * t5354;
t3198 = t3299 + t4889;
t4825 = t3387 * t5190;
t5397 = pkin(2) * t5917;
t4430 = (t4825 + t5397) * t4205 + t3387 * t5192;
t2959 = -t4215 * t3198 + t4221 * t4430;
t3197 = t3299 + 0.2e1 * t4889;
t2981 = (-t3197 * t4215 - t3619 * t5387) * t4205 + (t4825 + 0.2e1 * t5397) * t4221 + t3619 * t4877;
t6080 = -t2959 * t5946 + t2981 * t5752;
t6079 = t2959 * t5945 - t2981 * t5917;
t2960 = -t4221 * t3198 - t4215 * t4430;
t5164 = t4205 * t5945;
t2987 = (-t4825 + (t5164 - 0.2e1 * t5917) * pkin(2)) * t4215 - t4221 * (t3197 * t4205 - t3619 * t5348);
t6078 = -t2960 * t5946 + t2987 * t5752;
t6077 = t2960 * t5945 - t2987 * t5917;
t5187 = t3546 * t5490;
t3300 = t3385 * t5187;
t3200 = t3300 + t4888;
t5186 = t3546 * t5487;
t4829 = t3385 * t5186;
t5188 = t3546 * t5505;
t5396 = pkin(2) * t5739;
t4429 = (t4829 + t5396) * t4205 + t3385 * t5188;
t2961 = -t4217 * t3200 + t4223 * t4429;
t3199 = t3300 + 0.2e1 * t4888;
t2979 = (-t3199 * t4217 - t4896) * t4205 + (t4829 + 0.2e1 * t5396) * t4223 + t4691;
t6076 = -t2961 * t5944 + t2979 * t5739;
t6075 = t2961 * t5943 - t2979 * t5916;
t2962 = -t4223 * t3200 - t4217 * t4429;
t2985 = (t4359 - t4829) * t4217 - t4223 * (t3199 * t4205 - t4876);
t6074 = -t2962 * t5944 + t2985 * t5739;
t6073 = t2962 * t5943 - t2985 * t5916;
t3301 = t3388 * t5187;
t4887 = t4909 * t5353;
t3202 = t3301 + t4887;
t4823 = t3388 * t5186;
t5395 = pkin(2) * t5916;
t4428 = (t4823 + t5395) * t4205 + t3388 * t5188;
t2963 = -t4217 * t3202 + t4223 * t4428;
t3201 = t3301 + 0.2e1 * t4887;
t2982 = (-t3201 * t4217 - t3621 * t5386) * t4205 + (t4823 + 0.2e1 * t5395) * t4223 + t3621 * t4875;
t6072 = -t2963 * t5944 + t2982 * t5739;
t6071 = t2963 * t5943 - t2982 * t5916;
t2964 = -t4223 * t3202 - t4217 * t4428;
t5159 = t4205 * t5943;
t2988 = (-t4823 + (t5159 - 0.2e1 * t5916) * pkin(2)) * t4217 - t4223 * (t3201 * t4205 - t3621 * t5347);
t6070 = -t2964 * t5944 + t2988 * t5739;
t6069 = t2964 * t5943 - t2988 * t5916;
t5183 = t3554 * t5486;
t3314 = t3389 * t5183;
t3210 = t3314 + t4886;
t5182 = t3554 * t5483;
t4821 = t3389 * t5182;
t5184 = t3554 * t5505;
t5394 = pkin(2) * t5726;
t4427 = (t4821 + t5394) * t4205 + t3389 * t5184;
t2965 = -t4225 * t3210 + t4231 * t4427;
t3209 = t3314 + 0.2e1 * t4886;
t2989 = (-t3209 * t4225 - t4895) * t4205 + (t4821 + 0.2e1 * t5394) * t4231 + t4690;
t6068 = -t2965 * t5942 + t2989 * t5726;
t6067 = t2965 * t5941 - t2989 * t5915;
t2966 = -t4231 * t3210 - t4225 * t4427;
t2995 = (t4358 - t4821) * t4225 - t4231 * (t3209 * t4205 - t4874);
t6066 = -t2966 * t5942 + t2995 * t5726;
t6065 = t2966 * t5941 - t2995 * t5915;
t3315 = t3392 * t5183;
t4885 = t4908 * t5352;
t3212 = t3315 + t4885;
t4815 = t3392 * t5182;
t5393 = pkin(2) * t5915;
t4426 = (t4815 + t5393) * t4205 + t3392 * t5184;
t2967 = -t4225 * t3212 + t4231 * t4426;
t3211 = t3315 + 0.2e1 * t4885;
t2992 = (-t3211 * t4225 - t3629 * t5385) * t4205 + (t4815 + 0.2e1 * t5393) * t4231 + t3629 * t4873;
t6064 = -t2967 * t5942 + t2992 * t5726;
t6063 = t2967 * t5941 - t2992 * t5915;
t2968 = -t4231 * t3212 - t4225 * t4426;
t5154 = t4205 * t5941;
t2998 = (-t4815 + (t5154 - 0.2e1 * t5915) * pkin(2)) * t4225 - t4231 * (t3211 * t4205 - t3629 * t5346);
t6062 = -t2968 * t5942 + t2998 * t5726;
t6061 = t2968 * t5941 - t2998 * t5915;
t5179 = t3556 * t5485;
t3316 = t3390 * t5179;
t3214 = t3316 + t4884;
t5178 = t3556 * t5482;
t4819 = t3390 * t5178;
t5180 = t3556 * t5505;
t5392 = pkin(2) * t5713;
t4425 = (t4819 + t5392) * t4205 + t3390 * t5180;
t2969 = -t4227 * t3214 + t4233 * t4425;
t3213 = t3316 + 0.2e1 * t4884;
t2990 = (-t3213 * t4227 - t4894) * t4205 + (t4819 + 0.2e1 * t5392) * t4233 + t4689;
t6060 = -t2969 * t5940 + t2990 * t5713;
t6059 = t2969 * t5939 - t2990 * t5914;
t2970 = -t4233 * t3214 - t4227 * t4425;
t2996 = (t4357 - t4819) * t4227 - t4233 * (t3213 * t4205 - t4872);
t6058 = -t2970 * t5940 + t2996 * t5713;
t6057 = t2970 * t5939 - t2996 * t5914;
t3317 = t3393 * t5179;
t4883 = t4907 * t5351;
t3216 = t3317 + t4883;
t4813 = t3393 * t5178;
t5391 = pkin(2) * t5914;
t4424 = (t4813 + t5391) * t4205 + t3393 * t5180;
t2971 = -t4227 * t3216 + t4233 * t4424;
t3215 = t3317 + 0.2e1 * t4883;
t2993 = (-t3215 * t4227 - t3631 * t5384) * t4205 + (t4813 + 0.2e1 * t5391) * t4233 + t3631 * t4871;
t6056 = -t2971 * t5940 + t2993 * t5713;
t6055 = t2971 * t5939 - t2993 * t5914;
t2972 = -t4233 * t3216 - t4227 * t4424;
t5149 = t4205 * t5939;
t2999 = (-t4813 + (t5149 - 0.2e1 * t5914) * pkin(2)) * t4227 - t4233 * (t3215 * t4205 - t3631 * t5345);
t6054 = -t2972 * t5940 + t2999 * t5713;
t6053 = t2972 * t5939 - t2999 * t5914;
t5175 = t3558 * t5484;
t3318 = t3391 * t5175;
t3218 = t3318 + t4882;
t5174 = t3558 * t5481;
t4817 = t3391 * t5174;
t5176 = t3558 * t5505;
t5390 = pkin(2) * t5700;
t4423 = (t4817 + t5390) * t4205 + t3391 * t5176;
t2973 = -t4229 * t3218 + t4235 * t4423;
t3217 = t3318 + 0.2e1 * t4882;
t2991 = (-t3217 * t4229 - t4893) * t4205 + (t4817 + 0.2e1 * t5390) * t4235 + t4688;
t6052 = -t2973 * t5938 + t2991 * t5700;
t6051 = t2973 * t5937 - t2991 * t5913;
t2974 = -t4235 * t3218 - t4229 * t4423;
t2997 = (t4356 - t4817) * t4229 - t4235 * (t3217 * t4205 - t4870);
t6050 = -t2974 * t5938 + t2997 * t5700;
t6049 = t2974 * t5937 - t2997 * t5913;
t3319 = t3394 * t5175;
t4881 = t4906 * t5350;
t3220 = t3319 + t4881;
t4811 = t3394 * t5174;
t5389 = pkin(2) * t5913;
t4422 = (t4811 + t5389) * t4205 + t3394 * t5176;
t2975 = -t4229 * t3220 + t4235 * t4422;
t3219 = t3319 + 0.2e1 * t4881;
t2994 = (-t3219 * t4229 - t3633 * t5383) * t4205 + (t4811 + 0.2e1 * t5389) * t4235 + t3633 * t4869;
t6048 = -t2975 * t5938 + t2994 * t5700;
t6047 = t2975 * t5937 - t2994 * t5913;
t2976 = -t4235 * t3220 - t4229 * t4422;
t5144 = t4205 * t5937;
t3000 = (-t4811 + (t5144 - 0.2e1 * t5913) * pkin(2)) * t4229 - t4235 * (t3219 * t4205 - t3633 * t5344);
t6046 = -t2976 * t5938 + t3000 * t5700;
t6045 = t2976 * t5937 - t3000 * t5913;
t5831 = t3233 * t4205;
t3092 = t3320 + 0.2e1 * t5831;
t4481 = t3092 * t5765 - t3233 * t5948;
t6044 = -t3092 * t5918 + t3233 * t5947;
t5830 = t3234 * t4205;
t3094 = t3321 + 0.2e1 * t5830;
t4479 = t3094 * t5752 - t3234 * t5946;
t6043 = -t3094 * t5917 + t3234 * t5945;
t5829 = t3235 * t4205;
t3096 = t3322 + 0.2e1 * t5829;
t4477 = t3096 * t5739 - t3235 * t5944;
t6042 = -t3096 * t5916 + t3235 * t5943;
t5828 = t3236 * t4205;
t3101 = t3326 + 0.2e1 * t5828;
t4475 = t3101 * t5726 - t3236 * t5942;
t6041 = -t3101 * t5915 + t3236 * t5941;
t5827 = t3237 * t4205;
t3103 = t3327 + 0.2e1 * t5827;
t4473 = t3103 * t5713 - t3237 * t5940;
t6040 = -t3103 * t5914 + t3237 * t5939;
t5826 = t3238 * t4205;
t3105 = t3328 + 0.2e1 * t5826;
t4471 = t3105 * t5700 - t3238 * t5938;
t6039 = -t3105 * t5913 + t3238 * t5937;
t5825 = t3239 * t4205;
t3122 = t3338 + 0.2e1 * t5825;
t4445 = t3122 * t5765 - t3239 * t5948;
t6038 = -t3122 * t5918 + t3239 * t5947;
t5824 = t3240 * t4205;
t3124 = t3339 + 0.2e1 * t5824;
t4443 = t3124 * t5752 - t3240 * t5946;
t6037 = -t3124 * t5917 + t3240 * t5945;
t5823 = t3241 * t4205;
t3126 = t3340 + 0.2e1 * t5823;
t4441 = t3126 * t5739 - t3241 * t5944;
t6036 = -t3126 * t5916 + t3241 * t5943;
t5822 = t3242 * t4205;
t3131 = t3344 + 0.2e1 * t5822;
t4439 = t3131 * t5726 - t3242 * t5942;
t6035 = -t3131 * t5915 + t3242 * t5941;
t5821 = t3243 * t4205;
t3133 = t3345 + 0.2e1 * t5821;
t4437 = t3133 * t5713 - t3243 * t5940;
t6034 = -t3133 * t5914 + t3243 * t5939;
t5820 = t3244 * t4205;
t3135 = t3346 + 0.2e1 * t5820;
t4435 = t3135 * t5700 - t3244 * t5938;
t6033 = -t3135 * t5913 + t3244 * t5937;
t6032 = -t3353 * t4911 + t3578 * t5947;
t6031 = -t3357 * t4910 + t3581 * t5945;
t6030 = -t3361 * t4909 + t3584 * t5943;
t6029 = -t3371 * t4908 + t3596 * t5941;
t6028 = -t3375 * t4907 + t3599 * t5939;
t6027 = -t3379 * t4906 + t3602 * t5937;
t6026 = t3381 * t3602 - t4906 * t5938;
t6025 = t3377 * t3599 - t4907 * t5940;
t6024 = t3373 * t3596 - t4908 * t5942;
t6023 = t3363 * t3584 - t4909 * t5944;
t6022 = t3359 * t3581 - t4910 * t5946;
t6021 = t3355 * t3578 - t4911 * t5948;
t5936 = -t3290 * t4911 - t5651 * t5947;
t5935 = -t3292 * t4910 - t5649 * t5945;
t5934 = -t3294 * t4909 - t5647 * t5943;
t5933 = -t3305 * t4908 - t5645 * t5941;
t5932 = -t3307 * t4907 - t5643 * t5939;
t5931 = -t3309 * t4906 - t5641 * t5937;
t5912 = t3542 * (t3383 * t4911 + t3386 * t3578);
t5911 = t3544 * (t3384 * t4910 + t3387 * t3581);
t5910 = t3546 * (t3385 * t4909 + t3388 * t3584);
t5909 = t3554 * (t3389 * t4908 + t3392 * t3596);
t5908 = t3556 * (t3390 * t4907 + t3393 * t3599);
t5907 = t3558 * (t3391 * t4906 + t3394 * t3602);
t5534 = t4183 * t4181;
t5557 = t4180 * t4178;
t3941 = t4179 * t5534 - t5557;
t5613 = t3941 * t4178;
t4116 = t4179 * t4178;
t5556 = t4180 * t4181;
t3940 = t4116 * t4183 + t5556;
t5614 = t3940 * t4181;
t3712 = (-t5613 + t5614) * t4182;
t5571 = t4178 * t4183;
t3939 = t4179 * t5556 + t5571;
t5900 = (t3939 * t4183 - t3941 * t4180) * t4182;
t5618 = t3939 * t4178;
t3937 = t4179 * t5557 - t5534;
t5619 = t3937 * t4181;
t3711 = (-t5618 + t5619) * t4182;
t5421 = t4235 * t4236;
t5428 = t4229 * t4230;
t3936 = (-t4205 * t5428 + t5421) * t4202;
t5695 = t3534 * t3936;
t5899 = t4906 * t5695;
t5424 = t4230 * t4235;
t3935 = (-t4205 * t5424 - t5426) * t4202;
t5696 = t3534 * t3935;
t5898 = t4906 * t5696;
t5422 = t4233 * t4234;
t5433 = t4227 * t4228;
t3934 = (-t4205 * t5433 + t5422) * t4202;
t5708 = t3532 * t3934;
t5897 = t4907 * t5708;
t5429 = t4228 * t4233;
t3933 = (-t4205 * t5429 - t5431) * t4202;
t5709 = t3532 * t3933;
t5896 = t4907 * t5709;
t5423 = t4231 * t4232;
t5438 = t4225 * t4226;
t3932 = (-t4205 * t5438 + t5423) * t4202;
t5721 = t3530 * t3932;
t5895 = t4908 * t5721;
t5434 = t4226 * t4231;
t3931 = (-t4205 * t5434 - t5436) * t4202;
t5722 = t3530 * t3931;
t5894 = t4908 * t5722;
t5439 = t4223 * t4224;
t5446 = t4217 * t4218;
t3930 = (-t4205 * t5446 + t5439) * t4202;
t5734 = t3525 * t3930;
t5893 = t4909 * t5734;
t5442 = t4218 * t4223;
t3929 = (-t4205 * t5442 - t5444) * t4202;
t5735 = t3525 * t3929;
t5892 = t4909 * t5735;
t5440 = t4221 * t4222;
t5451 = t4215 * t4216;
t3928 = (-t4205 * t5451 + t5440) * t4202;
t5747 = t3523 * t3928;
t5891 = t4910 * t5747;
t5447 = t4216 * t4221;
t3927 = (-t4205 * t5447 - t5449) * t4202;
t5748 = t3523 * t3927;
t5890 = t4910 * t5748;
t5441 = t4219 * t4220;
t5456 = t4213 * t4214;
t3926 = (-t4205 * t5456 + t5441) * t4202;
t5760 = t3521 * t3926;
t5889 = t4911 * t5760;
t5452 = t4214 * t4219;
t3925 = (-t4205 * t5452 - t5454) * t4202;
t5761 = t3521 * t3925;
t5888 = t4911 * t5761;
t5525 = t4183 * t4253;
t5531 = t4183 * t4247;
t5547 = t4180 * t4253;
t5553 = t4180 * t4247;
t3714 = -t4180 * t5539 + (t4179 * t5547 + t5531) * t4181 + t4178 * (-t4179 * t5553 + t5525);
t3912 = -t4057 * t4182 + t5568;
t4033 = -pkin(9) * t5515 + t4205 * t5836;
t5372 = pkin(3) * t5479;
t5374 = pkin(3) * t5507;
t4595 = (t5332 + t5372) * t4206 - t5374;
t5607 = t4030 * t4206;
t3329 = (-t3714 * ((-t3986 * t4033 + t3992 * t4595) * t4221 - t4215 * (t3986 * t4027 - t3992 * t5607 + t3900)) + ((t4027 * t4215 + t4033 * t4221) * t3992 + (t4595 * t4221 + (-t4861 + t5607) * t4215) * t3986) * t3912) / ((t4354 * t5507 + t3960) * t4191 + ((t4222 * t3962 + (t4924 * t5502 + t4131 + t4845) * pkin(3)) * t4202 - (t4114 * t5324 - t5407) * t4206) * t4221 + (-t4201 * t4866 + (t4201 * t5372 + t4583) * t4200) * t5838 + t3822);
t5813 = t3329 * t4188;
t5524 = t4183 * t4254;
t5530 = t4183 * t4248;
t5546 = t4180 * t4254;
t5552 = t4180 * t4248;
t3715 = -t4180 * t5538 + (t4179 * t5546 + t5530) * t4181 + t4178 * (-t4179 * t5552 + t5524);
t3915 = -t4058 * t4182 + t5567;
t4034 = -pkin(9) * t5514 + t4205 * t5835;
t5371 = pkin(3) * t5478;
t4594 = (t5331 + t5371) * t4206 - t5374;
t5606 = t4031 * t4206;
t3330 = (-t3715 * ((-t3987 * t4034 + t3993 * t4594) * t4223 - t4217 * (t3987 * t4028 - t3993 * t5606 + t3901)) + t3915 * ((t4028 * t4217 + t4034 * t4223) * t3993 + (t4594 * t4223 + (-t4861 + t5606) * t4217) * t3987)) / ((t4353 * t5507 + t3960) * t4192 + ((t4224 * t3963 + (t4923 * t5500 + t4132 + t4844) * pkin(3)) * t4202 - (t4114 * t5323 - t5407) * t4206) * t4223 + (-t4201 * t4865 + (t4201 * t5371 + t4582) * t4200) * t5838 + t3823);
t5812 = t3330 * t4189;
t5526 = t4183 * t4252;
t5532 = t4183 * t4246;
t5548 = t4180 * t4252;
t5554 = t4180 * t4246;
t3713 = -t4180 * t5540 + (t4179 * t5548 + t5532) * t4181 + t4178 * (-t4179 * t5554 + t5526);
t3909 = -t4056 * t4182 + t5569;
t4032 = -pkin(9) * t5516 + t4205 * t5837;
t5373 = pkin(3) * t5480;
t4596 = (t5333 + t5373) * t4206 - t5374;
t5608 = t4029 * t4206;
t3331 = (-((-t3985 * t4032 + t3991 * t4596) * t4219 - t4213 * (t3985 * t4026 - t3991 * t5608 + t3899)) * t3713 + t3909 * ((t4026 * t4213 + t4032 * t4219) * t3991 + (t4596 * t4219 + (-t4861 + t5608) * t4213) * t3985)) / ((t4355 * t5507 + t3960) * t4190 + ((t4220 * t3961 + (t4925 * t5504 + t4130 + t4846) * pkin(3)) * t4202 - (t4114 * t5320 - t5407) * t4206) * t4219 + (-t4201 * t4867 + (t4201 * t5373 + t4584) * t4200) * t5838 + t3821);
t5811 = t3331 * t4187;
t5522 = t4183 * t4256;
t5528 = t4183 * t4250;
t5544 = t4180 * t4256;
t5550 = t4180 * t4250;
t3717 = -t4180 * t5536 + (t4179 * t5544 + t5528) * t4181 + t4178 * (-t4179 * t5550 + t5522);
t3921 = -t4060 * t4182 + t5565;
t4045 = -pkin(9) * t5509 + t4205 * t5833;
t5369 = pkin(3) * t5476;
t4592 = (t5329 + t5369) * t4206 - t5374;
t5601 = t4042 * t4206;
t3332 = (-t3717 * ((-t3989 * t4045 + t3995 * t4592) * t4233 - t4227 * (t3989 * t4039 - t3995 * t5601 + t3903)) + t3921 * ((t4039 * t4227 + t4045 * t4233) * t3995 + (t4592 * t4233 + (-t4861 + t5601) * t4227) * t3989)) / ((t4351 * t5507 + t3960) * t4197 + ((t4234 * t3974 + (t4921 * t5496 + t4140 + t4842) * pkin(3)) * t4202 - (t4114 * t5321 - t5407) * t4206) * t4233 + (-t4201 * t4863 + (t4201 * t5369 + t4580) * t4200) * t5838 + t3825);
t5810 = t3332 * t4194;
t5523 = t4183 * t4255;
t5529 = t4183 * t4249;
t5545 = t4180 * t4255;
t5551 = t4180 * t4249;
t3716 = -t4180 * t5537 + (t4179 * t5545 + t5529) * t4181 + t4178 * (-t4179 * t5551 + t5523);
t3918 = -t4059 * t4182 + t5566;
t4044 = -pkin(9) * t5510 + t4205 * t5834;
t5370 = pkin(3) * t5477;
t4593 = (t5330 + t5370) * t4206 - t5374;
t5602 = t4041 * t4206;
t3333 = (-((-t3988 * t4044 + t3994 * t4593) * t4231 - t4225 * (t3988 * t4038 - t3994 * t5602 + t3902)) * t3716 + ((t4038 * t4225 + t4044 * t4231) * t3994 + (t4593 * t4231 + (-t4861 + t5602) * t4225) * t3988) * t3918) / ((t4352 * t5507 + t3960) * t4196 + ((t4232 * t3973 + (t4922 * t5498 + t4139 + t4843) * pkin(3)) * t4202 - (t4114 * t5322 - t5407) * t4206) * t4231 + (-t4201 * t4864 + (t4201 * t5370 + t4581) * t4200) * t5838 + t3824);
t5809 = t3333 * t4193;
t5521 = t4183 * t4257;
t5527 = t4183 * t4251;
t5543 = t4180 * t4257;
t5549 = t4180 * t4251;
t3718 = -t4180 * t5535 + (t4179 * t5543 + t5527) * t4181 + t4178 * (-t4179 * t5549 + t5521);
t3924 = -t4061 * t4182 + t5564;
t4046 = -pkin(9) * t5508 + t4205 * t5832;
t5368 = pkin(3) * t5475;
t4591 = (t5328 + t5368) * t4206 - t5374;
t5600 = t4043 * t4206;
t3334 = (-((-t3990 * t4046 + t3996 * t4591) * t4235 - (t3990 * t4040 - t3996 * t5600 + t3904) * t4229) * t3718 + ((t4040 * t4229 + t4046 * t4235) * t3996 + (t4591 * t4235 + t4229 * (-t4861 + t5600)) * t3990) * t3924) / ((t4350 * t5507 + t3960) * t4198 + ((t4236 * t3975 + (t4920 * t5494 + t4141 + t4841) * pkin(3)) * t4202 - (t4114 * t5319 - t5407) * t4206) * t4235 + (-t4201 * t4862 + (t4201 * t5368 + t4579) * t4200) * t5838 + t3826);
t5808 = t3334 * t4195;
t4013 = t4148 * t5375;
t4686 = -0.2e1 * pkin(3) * t4860;
t4050 = t4190 * t4686;
t4967 = t4213 * t5572;
t3690 = t4050 + (t3961 + t4013) * t4219 + (t4148 * t4967 + t4123) * t4151;
t3827 = pkin(9) * t4069 + t4102 * t5846 + t4114 * t4190;
t4530 = t3827 * t4201 * t4220 - t3690 * t4214;
t3761 = t3827 * t5503;
t3635 = t3690 * t4220 + t3761;
t3943 = pkin(2) * pkin(3) + t4694;
t3970 = t4190 * t4687;
t3666 = t3970 + (-t4114 * t4967 + t5407) * t4219 + t3943 * t4213 - t4726;
t4612 = t3635 * t4206 - t3666 * t4202;
t3509 = t3985 * t4530 + t3991 * t4612;
t3605 = 0.1e1 / (t3635 * t4202 + t3666 * t4206);
t5639 = t3605 * ((t4179 * t5526 - t5554) * t4181 + (-t4179 * t5532 - t5548) * t4178 - t4240 * t5533);
t3407 = t3509 * t5639;
t3395 = t3407 - t3743;
t5783 = t3395 * t3542;
t4051 = t4191 * t4686;
t4966 = t4215 * t5572;
t3691 = t4051 + (t3962 + t4013) * t4221 + (t4148 * t4966 + t4123) * t4151;
t3828 = pkin(9) * t4070 + t4104 * t5845 + t4114 * t4191;
t4529 = t3828 * t4201 * t4222 - t3691 * t4216;
t3762 = t3828 * t5501;
t3636 = t3691 * t4222 + t3762;
t3971 = t4191 * t4687;
t3667 = t3971 + (-t4114 * t4966 + t5407) * t4221 + t3943 * t4215 - t4726;
t4611 = t3636 * t4206 - t3667 * t4202;
t3510 = t3986 * t4529 + t3992 * t4611;
t3606 = 0.1e1 / (t3636 * t4202 + t3667 * t4206);
t5638 = t3606 * ((t4179 * t5525 - t5553) * t4181 + (-t4179 * t5531 - t5547) * t4178 - t4241 * t5533);
t3408 = t3510 * t5638;
t3396 = t3408 - t3746;
t5782 = t3396 * t3544;
t4052 = t4192 * t4686;
t4965 = t4217 * t5572;
t3692 = t4052 + (t3963 + t4013) * t4223 + (t4148 * t4965 + t4123) * t4151;
t3829 = pkin(9) * t4071 + t4106 * t5844 + t4114 * t4192;
t4528 = t3829 * t4201 * t4224 - t3692 * t4218;
t3763 = t3829 * t5499;
t3637 = t3692 * t4224 + t3763;
t3972 = t4192 * t4687;
t3668 = t3972 + (-t4114 * t4965 + t5407) * t4223 + t3943 * t4217 - t4726;
t4610 = t3637 * t4206 - t3668 * t4202;
t3511 = t3987 * t4528 + t3993 * t4610;
t3607 = 0.1e1 / (t3637 * t4202 + t3668 * t4206);
t5637 = t3607 * ((t4179 * t5524 - t5552) * t4181 + (-t4179 * t5530 - t5546) * t4178 - t4242 * t5533);
t3409 = t3511 * t5637;
t3397 = t3409 - t3749;
t5781 = t3397 * t3546;
t4053 = t4196 * t4686;
t4964 = t4225 * t5572;
t3693 = t4053 + (t3973 + t4013) * t4231 + (t4148 * t4964 + t4123) * t4151;
t3830 = pkin(9) * t4075 + t4108 * t5843 + t4114 * t4196;
t4527 = t3830 * t4201 * t4232 - t3693 * t4226;
t3767 = t3830 * t5497;
t3638 = t3693 * t4232 + t3767;
t3976 = t4196 * t4687;
t3669 = t3976 + (-t4114 * t4964 + t5407) * t4231 + t3943 * t4225 - t4726;
t4609 = t3638 * t4206 - t3669 * t4202;
t3515 = t3988 * t4527 + t3994 * t4609;
t3608 = 0.1e1 / (t3638 * t4202 + t3669 * t4206);
t5636 = t3608 * ((t4179 * t5523 - t5551) * t4181 + (-t4179 * t5529 - t5545) * t4178 - t4243 * t5533);
t3410 = t3515 * t5636;
t3398 = t3410 - t3752;
t5780 = t3398 * t3554;
t4054 = t4197 * t4686;
t4963 = t4227 * t5572;
t3694 = t4054 + (t3974 + t4013) * t4233 + (t4148 * t4963 + t4123) * t4151;
t3831 = pkin(9) * t4076 + t4110 * t5842 + t4114 * t4197;
t4526 = t3831 * t4201 * t4234 - t3694 * t4228;
t3768 = t3831 * t5495;
t3639 = t3694 * t4234 + t3768;
t3977 = t4197 * t4687;
t3670 = t3977 + (-t4114 * t4963 + t5407) * t4233 + t3943 * t4227 - t4726;
t4608 = t3639 * t4206 - t3670 * t4202;
t3516 = t3989 * t4526 + t3995 * t4608;
t3609 = 0.1e1 / (t3639 * t4202 + t3670 * t4206);
t5635 = t3609 * ((t4179 * t5522 - t5550) * t4181 + (-t4179 * t5528 - t5544) * t4178 - t4244 * t5533);
t3411 = t3516 * t5635;
t3399 = t3411 - t3755;
t5779 = t3399 * t3556;
t4055 = t4198 * t4686;
t4962 = t4229 * t5572;
t3695 = t4055 + (t3975 + t4013) * t4235 + (t4148 * t4962 + t4123) * t4151;
t3832 = pkin(9) * t4077 + t4112 * t5841 + t4114 * t4198;
t4525 = t3832 * t4201 * t4236 - t3695 * t4230;
t3769 = t3832 * t5493;
t3640 = t3695 * t4236 + t3769;
t3978 = t4198 * t4687;
t3671 = t3978 + (-t4114 * t4962 + t5407) * t4235 + t3943 * t4229 - t4726;
t4607 = t3640 * t4206 - t3671 * t4202;
t3520 = t3990 * t4525 + t3996 * t4607;
t3610 = 0.1e1 / (t3640 * t4202 + t3671 * t4206);
t5634 = t3610 * ((t4179 * t5521 - t5549) * t4181 + (-t4179 * t5527 - t5543) * t4178 - t4245 * t5533);
t3412 = t3520 * t5634;
t3400 = t3412 - t3758;
t5778 = t3400 * t3558;
t3512 = -t3985 * t4612 + t3991 * t4530;
t4993 = t3512 * t5639;
t3401 = -t3893 - t4993;
t5777 = t3401 * t3542;
t3513 = -t3986 * t4611 + t3992 * t4529;
t4992 = t3513 * t5638;
t3402 = -t3894 - t4992;
t5776 = t3402 * t3544;
t3514 = -t3987 * t4610 + t3993 * t4528;
t4991 = t3514 * t5637;
t3403 = -t3895 - t4991;
t5775 = t3403 * t3546;
t3519 = -t3990 * t4607 + t3996 * t4525;
t5282 = t3519 * t5634;
t3404 = -t3898 - t5282;
t5774 = t3404 * t3558;
t3517 = -t3988 * t4609 + t3994 * t4527;
t4990 = t3517 * t5636;
t3405 = -t3896 - t4990;
t5773 = t3405 * t3554;
t3518 = -t3989 * t4608 + t3995 * t4526;
t4989 = t3518 * t5635;
t3406 = -t3897 - t4989;
t5772 = t3406 * t3556;
t3678 = t3713 * t4203 - t3909 * t4199;
t3684 = t3713 * t4199 + t3909 * t4203;
t3887 = t4219 * t5334 - t3957;
t4072 = t4103 + t5846;
t5771 = ((t3887 * t4214 + t4072 * t4220) * (t3678 * t4162 - t3684 * t4156) * t4206 - (t3678 * t4156 + t3684 * t4162) * (-t3887 * t4220 + t4072 * t4214)) / ((t3764 * t4219 + t3970 + t4590) * t4206 + ((t3837 * t4219 + t3861 * t4151 + t4050) * t4220 + t3761) * t4202);
t3679 = t3714 * t4203 - t3912 * t4199;
t3685 = t3714 * t4199 + t3912 * t4203;
t3888 = t4221 * t5334 - t3958;
t4073 = t4105 + t5845;
t5770 = ((t3888 * t4216 + t4073 * t4222) * (t3679 * t4163 - t3685 * t4157) * t4206 - (-t3888 * t4222 + t4073 * t4216) * (t3679 * t4157 + t3685 * t4163)) / ((t3765 * t4221 + t3971 + t4589) * t4206 + ((t3838 * t4221 + t3862 * t4151 + t4051) * t4222 + t3762) * t4202);
t3680 = t3715 * t4203 - t3915 * t4199;
t3686 = t3715 * t4199 + t3915 * t4203;
t3889 = t4223 * t5334 - t3959;
t4074 = t4107 + t5844;
t5769 = ((t3889 * t4218 + t4074 * t4224) * (t3680 * t4164 - t3686 * t4158) * t4206 - (-t3889 * t4224 + t4074 * t4218) * (t3680 * t4158 + t3686 * t4164)) / ((t3766 * t4223 + t3972 + t4588) * t4206 + ((t3839 * t4223 + t3863 * t4151 + t4052) * t4224 + t3763) * t4202);
t3681 = t3716 * t4203 - t3918 * t4199;
t3687 = t3716 * t4199 + t3918 * t4203;
t3890 = t4231 * t5334 - t3964;
t4078 = t4109 + t5843;
t5768 = ((t3890 * t4226 + t4078 * t4232) * (t3681 * t4165 - t3687 * t4159) * t4206 - (t3681 * t4159 + t3687 * t4165) * (-t3890 * t4232 + t4078 * t4226)) / ((t3770 * t4231 + t3976 + t4587) * t4206 + ((t3840 * t4231 + t3870 * t4151 + t4053) * t4232 + t3767) * t4202);
t3682 = t3717 * t4203 - t3921 * t4199;
t3688 = t3717 * t4199 + t3921 * t4203;
t3891 = t4233 * t5334 - t3965;
t4079 = t4111 + t5842;
t5767 = ((t3891 * t4228 + t4079 * t4234) * (t3682 * t4166 - t3688 * t4160) * t4206 - (-t3891 * t4234 + t4079 * t4228) * (t3682 * t4160 + t3688 * t4166)) / ((t3771 * t4233 + t3977 + t4586) * t4206 + ((t3841 * t4233 + t3871 * t4151 + t4054) * t4234 + t3768) * t4202);
t3683 = t3718 * t4203 - t3924 * t4199;
t3689 = t3718 * t4199 + t3924 * t4203;
t3892 = t4235 * t5334 - t3966;
t4080 = t4113 + t5841;
t5766 = ((t3683 * t4167 - t3689 * t4161) * (t3892 * t4230 + t4080 * t4236) * t4206 - (-t3892 * t4236 + t4080 * t4230) * (t3683 * t4161 + t3689 * t4167)) / ((t3772 * t4235 + t3978 + t4585) * t4206 + ((t3842 * t4235 + t3872 * t4151 + t4055) * t4236 + t3769) * t4202);
t5762 = t3521 * t3744;
t5759 = t3521 * t4187;
t5757 = t3521 * t4214;
t5756 = t3521 * t4220;
t5749 = t3523 * t3747;
t5746 = t3523 * t4188;
t5744 = t3523 * t4216;
t5743 = t3523 * t4222;
t5736 = t3525 * t3750;
t5733 = t3525 * t4189;
t5731 = t3525 * t4218;
t5730 = t3525 * t4224;
t5723 = t3530 * t3753;
t5720 = t3530 * t4193;
t5718 = t3530 * t4226;
t5717 = t3530 * t4232;
t5710 = t3532 * t3756;
t5707 = t3532 * t4194;
t5705 = t3532 * t4228;
t5704 = t3532 * t4234;
t5697 = t3534 * t3759;
t5694 = t3534 * t4195;
t5692 = t3534 * t4230;
t5691 = t3534 * t4236;
t5679 = t3563 * t3744;
t3982 = t4202 * t5480 + t5505;
t3864 = t3982 * t4219 - t4202 * t5456;
t5678 = t3563 * t3864;
t3865 = -t3982 * t4213 - t4202 * t5452;
t5677 = t3563 * t3865;
t5674 = t3564 * t3747;
t3983 = t4202 * t5479 + t5505;
t3866 = t3983 * t4221 - t4202 * t5451;
t5673 = t3564 * t3866;
t3867 = -t3983 * t4215 - t4202 * t5447;
t5672 = t3564 * t3867;
t5669 = t3565 * t3750;
t3984 = t4202 * t5478 + t5505;
t3868 = t3984 * t4223 - t4202 * t5446;
t5668 = t3565 * t3868;
t3869 = -t3984 * t4217 - t4202 * t5442;
t5667 = t3565 * t3869;
t5664 = t3566 * t3753;
t4000 = t4202 * t5477 + t5505;
t3881 = t4000 * t4231 - t4202 * t5438;
t5663 = t3566 * t3881;
t3882 = -t4000 * t4225 - t4202 * t5434;
t5662 = t3566 * t3882;
t5659 = t3567 * t3756;
t4001 = t4202 * t5476 + t5505;
t3883 = t4001 * t4233 - t4202 * t5433;
t5658 = t3567 * t3883;
t3884 = -t4001 * t4227 - t4202 * t5429;
t5657 = t3567 * t3884;
t5654 = t3568 * t3759;
t4002 = t4202 * t5475 + t5505;
t3885 = t4002 * t4235 - t4202 * t5428;
t5653 = t3568 * t3885;
t3886 = -t4002 * t4229 - t4202 * t5424;
t5652 = t3568 * t3886;
t5650 = t4911 * t3744;
t5648 = t4910 * t3747;
t5646 = t4909 * t3750;
t5644 = t4908 * t3753;
t5642 = t4907 * t3756;
t5640 = t4906 * t3759;
t5621 = t3937 * t4178;
t5620 = t3937 * t4179;
t5617 = t3939 * t4179;
t5616 = t3940 * t4178;
t5615 = t3940 * t4179;
t5612 = t3941 * t4179;
t4152 = t4178 ^ 2;
t5573 = t4152 * t4182;
t5570 = t4179 * t4181;
t5541 = t4182 * t4181;
t3089 = t3233 + t5819;
t3093 = t3320 + t5831;
t4946 = t4219 * t5505;
t2879 = (t3089 * t5441 - t3093 * t5456) * t4202 + t3320 * t4946;
t3090 = t3234 + t5818;
t3095 = t3321 + t5830;
t4945 = t4221 * t5505;
t2881 = (t3090 * t5440 - t3095 * t5451) * t4202 + t3321 * t4945;
t3091 = t3235 + t5817;
t3097 = t3322 + t5829;
t4944 = t4223 * t5505;
t2883 = (t3091 * t5439 - t3097 * t5446) * t4202 + t3322 * t4944;
t3098 = t3236 + t5816;
t3102 = t3326 + t5828;
t4940 = t4231 * t5505;
t2885 = (t3098 * t5423 - t3102 * t5438) * t4202 + t3326 * t4940;
t3099 = t3237 + t5815;
t3104 = t3327 + t5827;
t4939 = t4233 * t5505;
t2887 = (t3099 * t5422 - t3104 * t5433) * t4202 + t3327 * t4939;
t3100 = t3238 + t5814;
t3106 = t3328 + t5826;
t4938 = t4235 * t5505;
t2889 = (t3100 * t5421 - t3106 * t5428) * t4202 + t3328 * t4938;
t3119 = t3239 + t5807;
t3123 = t3338 + t5825;
t2891 = (t3119 * t5441 - t3123 * t5456) * t4202 + t3338 * t4946;
t3120 = t3240 + t5806;
t3125 = t3339 + t5824;
t2893 = (t3120 * t5440 - t3125 * t5451) * t4202 + t3339 * t4945;
t3121 = t3241 + t5805;
t3127 = t3340 + t5823;
t2895 = (t3121 * t5439 - t3127 * t5446) * t4202 + t3340 * t4944;
t3128 = t3242 + t5804;
t3132 = t3344 + t5822;
t2897 = (t3128 * t5423 - t3132 * t5438) * t4202 + t3344 * t4940;
t3129 = t3243 + t5803;
t3134 = t3345 + t5821;
t2899 = (t3129 * t5422 - t3134 * t5433) * t4202 + t3345 * t4939;
t3130 = t3244 + t5802;
t3136 = t3346 + t5820;
t2901 = (t3130 * t5421 - t3136 * t5428) * t4202 + t3346 * t4938;
t3347 = -t5171 + t5765;
t3287 = t3347 * t3744;
t3291 = t6182 - t4803;
t4743 = t3563 * t4946;
t3485 = t3611 * t4743;
t3042 = (-t3287 * t5441 - t3291 * t5456) * t4202 + t3744 * t3485;
t3348 = -t5166 + t5752;
t3288 = t3348 * t3747;
t3293 = t6181 - t4793;
t4741 = t3564 * t4945;
t3487 = t3613 * t4741;
t3044 = (-t3288 * t5440 - t3293 * t5451) * t4202 + t3747 * t3487;
t3349 = -t5161 + t5739;
t3289 = t3349 * t3750;
t3295 = t6180 - t4783;
t4739 = t3565 * t4944;
t3489 = t3615 * t4739;
t3046 = (-t3289 * t5439 - t3295 * t5446) * t4202 + t3750 * t3489;
t3365 = -t5156 + t5726;
t3302 = t3365 * t3753;
t3306 = t6179 - t4773;
t4737 = t3566 * t4940;
t3491 = t3623 * t4737;
t3048 = (-t3302 * t5423 - t3306 * t5438) * t4202 + t3753 * t3491;
t3366 = -t5151 + t5713;
t3303 = t3366 * t3756;
t3308 = t6178 - t4763;
t4735 = t3567 * t4939;
t3493 = t3625 * t4735;
t3050 = (-t3303 * t5422 - t3308 * t5433) * t4202 + t3756 * t3493;
t3367 = -t5146 + t5700;
t3304 = t3367 * t3759;
t3310 = t6177 - t4753;
t4733 = t3568 * t4938;
t3495 = t3627 * t4733;
t3052 = (-t3304 * t5421 - t3310 * t5428) * t4202 + t3759 * t3495;
t3354 = -t5948 + t5122;
t3055 = (t3347 * t5441 - t3354 * t5456) * t4202 - t3485;
t3350 = -t5169 + t5918;
t3356 = -t5947 + t5121;
t3056 = (t3350 * t5441 - t3356 * t5456) * t4202 - t3617 * t4743;
t3358 = -t5946 + t5097;
t3059 = (t3348 * t5440 - t3358 * t5451) * t4202 - t3487;
t3351 = -t5164 + t5917;
t3360 = -t5945 + t5096;
t3060 = (t3351 * t5440 - t3360 * t5451) * t4202 - t3619 * t4741;
t3362 = -t5944 + t5072;
t3063 = (t3349 * t5439 - t3362 * t5446) * t4202 - t3489;
t3352 = -t5159 + t5916;
t3364 = -t5943 + t5071;
t3064 = (t3352 * t5439 - t3364 * t5446) * t4202 - t3621 * t4739;
t3372 = -t5942 + t5047;
t3073 = (t3365 * t5423 - t3372 * t5438) * t4202 - t3491;
t3368 = -t5154 + t5915;
t3374 = -t5941 + t5046;
t3074 = (t3368 * t5423 - t3374 * t5438) * t4202 - t3629 * t4737;
t3376 = -t5940 + t5022;
t3077 = (t3366 * t5422 - t3376 * t5433) * t4202 - t3493;
t3369 = -t5149 + t5914;
t3378 = -t5939 + t5021;
t3078 = (t3369 * t5422 - t3378 * t5433) * t4202 - t3631 * t4735;
t3380 = -t5938 + t4997;
t3081 = (t3367 * t5421 - t3380 * t5428) * t4202 - t3495;
t3370 = -t5144 + t5913;
t3382 = -t5937 + t4996;
t3082 = (t3370 * t5421 - t3382 * t5428) * t4202 - t3633 * t4733;
t5403 = 0.2e1 * t4202;
t5300 = t3329 * t5450;
t5299 = t3330 * t5445;
t5298 = t3331 * t5455;
t5297 = t3332 * t5432;
t5296 = t3333 * t5437;
t5295 = t3334 * t5427;
t5288 = t3521 * t5771;
t5287 = t3523 * t5770;
t5286 = t3525 * t5769;
t5285 = t3530 * t5768;
t5284 = t3532 * t5767;
t5283 = t3534 * t5766;
t5281 = t3578 * t5762;
t5279 = t3578 * t5759;
t5278 = t3578 * t5757;
t5277 = t3578 * t5756;
t5276 = t4911 * t5759;
t5275 = t3521 * t5650;
t5274 = t3744 * t5757;
t5273 = t3744 * t5756;
t5269 = t3522 * t5650;
t5267 = t3581 * t5749;
t5265 = t3581 * t5746;
t5264 = t3581 * t5744;
t5263 = t3581 * t5743;
t5262 = t4910 * t5746;
t5261 = t3523 * t5648;
t5260 = t3747 * t5744;
t5259 = t3747 * t5743;
t5255 = t3524 * t5648;
t5253 = t3584 * t5736;
t5251 = t3584 * t5733;
t5250 = t3584 * t5731;
t5249 = t3584 * t5730;
t5248 = t4909 * t5733;
t5247 = t3525 * t5646;
t5246 = t3750 * t5731;
t5245 = t3750 * t5730;
t5241 = t3526 * t5646;
t5239 = t3596 * t5723;
t5237 = t3596 * t5720;
t5236 = t3596 * t5718;
t5235 = t3596 * t5717;
t5234 = t4908 * t5720;
t5233 = t3530 * t5644;
t5232 = t3753 * t5718;
t5231 = t3753 * t5717;
t5227 = t3531 * t5644;
t5225 = t3599 * t5710;
t5223 = t3599 * t5707;
t5222 = t3599 * t5705;
t5221 = t3599 * t5704;
t5220 = t4907 * t5707;
t5219 = t3532 * t5642;
t5218 = t3756 * t5705;
t5217 = t3756 * t5704;
t5213 = t3533 * t5642;
t5211 = t3602 * t5697;
t5209 = t3602 * t5694;
t5208 = t3602 * t5692;
t5207 = t3602 * t5691;
t5206 = t4906 * t5694;
t5205 = t3534 * t5640;
t5204 = t3759 * t5692;
t5203 = t3759 * t5691;
t5199 = t3535 * t5640;
t5197 = t3542 * t5650;
t5193 = t3544 * t5648;
t5189 = t3546 * t5646;
t5185 = t3554 * t5644;
t5181 = t3556 * t5642;
t5177 = t3558 * t5640;
t5172 = t3611 * t5679;
t5170 = t3617 * t5679;
t5167 = t3613 * t5674;
t5165 = t3619 * t5674;
t5162 = t3615 * t5669;
t5160 = t3621 * t5669;
t5157 = t3623 * t5664;
t5155 = t3629 * t5664;
t5152 = t3625 * t5659;
t5150 = t3631 * t5659;
t5147 = t3627 * t5654;
t5145 = t3633 * t5654;
t5133 = t3068 * t5765;
t5131 = t3093 * t5765;
t5130 = t3110 * t5765;
t5128 = t3123 * t5765;
t5127 = t3291 * t5765;
t5126 = t3354 * t5765;
t5125 = t3356 * t5765;
t5124 = t3578 * t5761;
t5123 = t3578 * t5760;
t5119 = t4187 * t5650;
t5108 = t3069 * t5752;
t5106 = t3095 * t5752;
t5105 = t3111 * t5752;
t5103 = t3125 * t5752;
t5102 = t3293 * t5752;
t5101 = t3358 * t5752;
t5100 = t3360 * t5752;
t5099 = t3581 * t5748;
t5098 = t3581 * t5747;
t5094 = t4188 * t5648;
t5083 = t3070 * t5739;
t5081 = t3097 * t5739;
t5080 = t3112 * t5739;
t5078 = t3127 * t5739;
t5077 = t3295 * t5739;
t5076 = t3362 * t5739;
t5075 = t3364 * t5739;
t5074 = t3584 * t5735;
t5073 = t3584 * t5734;
t5069 = t4189 * t5646;
t5058 = t3086 * t5726;
t5056 = t3102 * t5726;
t5055 = t3116 * t5726;
t5053 = t3132 * t5726;
t5052 = t3306 * t5726;
t5051 = t3372 * t5726;
t5050 = t3374 * t5726;
t5049 = t3596 * t5722;
t5048 = t3596 * t5721;
t5044 = t4193 * t5644;
t5033 = t3087 * t5713;
t5031 = t3104 * t5713;
t5030 = t3117 * t5713;
t5028 = t3134 * t5713;
t5027 = t3308 * t5713;
t5026 = t3376 * t5713;
t5025 = t3378 * t5713;
t5024 = t3599 * t5709;
t5023 = t3599 * t5708;
t5019 = t4194 * t5642;
t5008 = t3088 * t5700;
t5006 = t3106 * t5700;
t5005 = t3118 * t5700;
t5003 = t3136 * t5700;
t5002 = t3310 * t5700;
t5001 = t3380 * t5700;
t5000 = t3382 * t5700;
t4999 = t3602 * t5696;
t4998 = t3602 * t5695;
t4994 = t4195 * t5640;
t4155 = t4182 ^ 2;
t4969 = t4155 * t5571;
t4968 = t4155 * t5556;
t4961 = t4180 * t5542;
t4960 = t4180 * t5541;
t4959 = t3940 * t5542;
t4958 = t4178 * t5541;
t4957 = t4181 * t5533;
t4949 = t4201 * t5474;
t4948 = t4201 * t5472;
t4947 = t4201 * t5470;
t4943 = t4201 * t5465;
t4942 = t4201 * t5463;
t4941 = t4201 * t5461;
t4083 = t4155 * t5534;
t4905 = t4083 + t5612;
t4840 = t3329 * t5265;
t4839 = t3330 * t5251;
t4838 = t3331 * t5279;
t4837 = t3332 * t5223;
t4836 = t3333 * t5237;
t4835 = t3334 * t5209;
t4834 = t3383 * t3521 * t5687;
t4832 = t3384 * t3523 * t5686;
t4830 = t3385 * t3525 * t5685;
t4828 = t5918 * t5792;
t4826 = t5917 * t5791;
t4824 = t5916 * t5790;
t4822 = t3389 * t3530 * t5684;
t4820 = t3390 * t3532 * t5683;
t4818 = t3391 * t3534 * t5682;
t4816 = t5915 * t5786;
t4814 = t5914 * t5785;
t4812 = t5913 * t5784;
t4810 = t3578 * t5288;
t4809 = t3581 * t5287;
t4808 = t3584 * t5286;
t4807 = t3596 * t5285;
t4806 = t3599 * t5284;
t4805 = t3602 * t5283;
t4804 = t3744 * t5279;
t4802 = t5455 * t5765;
t4801 = t3521 * t5120;
t4800 = t3521 * t5119;
t4796 = t3578 * t5269;
t4795 = t3522 * t5119;
t4794 = t3747 * t5265;
t4792 = t5450 * t5752;
t4791 = t3523 * t5095;
t4790 = t3523 * t5094;
t4786 = t3581 * t5255;
t4785 = t3524 * t5094;
t4784 = t3750 * t5251;
t4782 = t5445 * t5739;
t4781 = t3525 * t5070;
t4780 = t3525 * t5069;
t4776 = t3584 * t5241;
t4775 = t3526 * t5069;
t4774 = t3753 * t5237;
t4772 = t5437 * t5726;
t4771 = t3530 * t5045;
t4770 = t3530 * t5044;
t4766 = t3596 * t5227;
t4765 = t3531 * t5044;
t4764 = t3756 * t5223;
t4762 = t5432 * t5713;
t4761 = t3532 * t5020;
t4760 = t3532 * t5019;
t4756 = t3599 * t5213;
t4755 = t3533 * t5019;
t4754 = t3759 * t5209;
t4752 = t5427 * t5700;
t4751 = t3534 * t4995;
t4750 = t3534 * t4994;
t4746 = t3602 * t5199;
t4745 = t3535 * t4994;
t4744 = t3563 * t4949;
t4742 = t3564 * t4948;
t4740 = t3565 * t4947;
t4738 = t3566 * t4943;
t4736 = t3567 * t4942;
t4734 = t3568 * t4941;
t4732 = t5455 * t5650;
t4731 = t5450 * t5648;
t4730 = t5445 * t5646;
t4729 = t5437 * t5644;
t4728 = t5432 * t5642;
t4727 = t5427 * t5640;
t4719 = t3257 - t3275;
t4718 = t3258 - t3276;
t4717 = t3259 - t3277;
t4716 = t3269 - t3278;
t4715 = t3270 - t3279;
t4714 = t3271 - t3280;
t4713 = t3395 - t3275;
t4712 = t3396 - t3276;
t4711 = t3397 - t3277;
t4710 = t3398 - t3278;
t4709 = t3399 - t3279;
t4708 = t3400 - t3280;
t3227 = (t3509 * t3909 - t3512 * t3713) * t3605;
t3228 = (t3510 * t3912 - t3513 * t3714) * t3606;
t3229 = (t3511 * t3915 - t3514 * t3715) * t3607;
t3230 = (t3515 * t3918 - t3517 * t3716) * t3608;
t3231 = (t3516 * t3921 - t3518 * t3717) * t3609;
t3232 = (-t3519 * t3718 + t3520 * t3924) * t3610;
t4684 = t3329 * t4792;
t4683 = t3330 * t4782;
t4682 = t3331 * t4802;
t4681 = t3332 * t4762;
t4680 = t3333 * t4772;
t4679 = t3334 * t4752;
t4678 = t3744 * t4802;
t4677 = t3521 * t4732;
t4674 = t3578 * t4795;
t4673 = t3522 * t4732;
t4672 = t3747 * t4792;
t4671 = t3523 * t4731;
t4668 = t3581 * t4785;
t4667 = t3524 * t4731;
t4666 = t3750 * t4782;
t4665 = t3525 * t4730;
t4662 = t3584 * t4775;
t4661 = t3526 * t4730;
t4660 = t3753 * t4772;
t4659 = t3530 * t4729;
t4656 = t3596 * t4765;
t4655 = t3531 * t4729;
t4654 = t3756 * t4762;
t4653 = t3532 * t4728;
t4650 = t3599 * t4755;
t4649 = t3533 * t4728;
t4648 = t3759 * t4752;
t4647 = t3534 * t4727;
t4644 = t3602 * t4745;
t4643 = t3535 * t4727;
t4642 = t3611 * t4744;
t4641 = t3613 * t4742;
t4640 = t3615 * t4740;
t4639 = t3623 * t4738;
t4638 = t3625 * t4736;
t4637 = t3627 * t4734;
t4636 = t3068 * t3331 + t3227 * t3233;
t4635 = t3069 * t3329 + t3228 * t3234;
t4634 = t3070 * t3330 + t3229 * t3235;
t4633 = t3086 * t3333 + t3230 * t3236;
t4632 = t3087 * t3332 + t3231 * t3237;
t4631 = t3088 * t3334 + t3232 * t3238;
t4630 = t3110 * t3331 + t3227 * t3239;
t4629 = t3111 * t3329 + t3228 * t3240;
t4628 = t3112 * t3330 + t3229 * t3241;
t4627 = t3116 * t3333 + t3230 * t3242;
t4626 = t3117 * t3332 + t3231 * t3243;
t4625 = t3118 * t3334 + t3232 * t3244;
t4624 = (-t3257 - t3395) * t3744;
t4623 = (-t3258 - t3396) * t3747;
t4622 = (-t3259 - t3397) * t3750;
t4621 = (-t3269 - t3398) * t3753;
t4620 = (-t3270 - t3399) * t3756;
t4619 = (-t3271 - t3400) * t3759;
t4606 = t3937 * t3941 - t3939 * t3940;
t4578 = t6176 * t5765;
t4577 = t6175 * t5918;
t4576 = t6174 * t5752;
t4575 = t6173 * t5917;
t4574 = t6172 * t5739;
t4573 = t6171 * t5916;
t4572 = t6170 * t5726;
t4571 = t6169 * t5915;
t4570 = t6168 * t5713;
t4569 = t6167 * t5914;
t4568 = t6166 * t5700;
t4567 = t6165 * t5913;
t4566 = t3584 * t4661;
t4565 = t3596 * t4655;
t4564 = t3599 * t4649;
t4563 = t3602 * t4643;
t4562 = t3578 * t4673;
t4561 = t3581 * t4667;
t4548 = t3092 * t3331 + t3233 * t5771;
t4547 = t3094 * t3329 + t3234 * t5770;
t4546 = t3096 * t3330 + t3235 * t5769;
t4545 = t3101 * t3333 + t3236 * t5768;
t4544 = t3103 * t3332 + t3237 * t5767;
t4543 = t3105 * t3334 + t3238 * t5766;
t4542 = t3122 * t3331 + t3239 * t5771;
t4541 = t3124 * t3329 + t3240 * t5770;
t4540 = t3126 * t3330 + t3241 * t5769;
t4539 = t3131 * t3333 + t3242 * t5768;
t4538 = t3133 * t3332 + t3243 * t5767;
t4537 = t3135 * t3334 + t3244 * t5766;
t3834 = t4968 + t5617;
t4517 = t6200 * t5765;
t4516 = t6199 * t5752;
t4515 = t6198 * t5739;
t4514 = t6197 * t5726;
t4513 = t6196 * t5713;
t4512 = t6195 * t5700;
t4511 = t6176 * t5281;
t4510 = t6174 * t5267;
t4509 = t6172 * t5253;
t4508 = t6170 * t5239;
t4507 = t6168 * t5225;
t4506 = t6166 * t5211;
t4505 = t3233 * t5795 + t5133;
t4504 = t3068 * t5918 + t3233 * t5792;
t4503 = t3395 * t3233 - t3744 * t5133;
t4502 = -t3068 * t5275 - t3401 * t3233;
t4501 = t3234 * t5794 + t5108;
t4500 = t3069 * t5917 + t3234 * t5791;
t4499 = t3396 * t3234 - t3747 * t5108;
t4498 = -t3069 * t5261 - t3402 * t3234;
t4497 = t3235 * t5793 + t5083;
t4496 = t3070 * t5916 + t3235 * t5790;
t4495 = t3397 * t3235 - t3750 * t5083;
t4494 = -t3070 * t5247 - t3403 * t3235;
t4493 = t3236 * t5789 + t5058;
t4492 = t3086 * t5915 + t3236 * t5786;
t4491 = t3398 * t3236 - t3753 * t5058;
t4490 = -t3086 * t5233 - t3405 * t3236;
t4489 = t3237 * t5788 + t5033;
t4488 = t3087 * t5914 + t3237 * t5785;
t4487 = t3399 * t3237 - t3756 * t5033;
t4486 = -t3087 * t5219 - t3406 * t3237;
t4485 = t3238 * t5787 + t5008;
t4484 = t3088 * t5913 + t3238 * t5784;
t4483 = t3400 * t3238 - t3759 * t5008;
t4482 = -t3088 * t5205 - t3404 * t3238;
t4469 = t3239 * t5795 + t5130;
t4468 = t3110 * t5918 + t3239 * t5792;
t4467 = t3395 * t3239 - t3744 * t5130;
t4466 = -t3110 * t5275 - t3401 * t3239;
t4465 = t3240 * t5794 + t5105;
t4464 = t3111 * t5917 + t3240 * t5791;
t4463 = t3396 * t3240 - t3747 * t5105;
t4462 = -t3111 * t5261 - t3402 * t3240;
t4461 = t3241 * t5793 + t5080;
t4460 = t3112 * t5916 + t3241 * t5790;
t4459 = t3397 * t3241 - t3750 * t5080;
t4458 = -t3112 * t5247 - t3403 * t3241;
t4457 = t3242 * t5789 + t5055;
t4456 = t3116 * t5915 + t3242 * t5786;
t4455 = t3398 * t3242 - t3753 * t5055;
t4454 = -t3116 * t5233 - t3405 * t3242;
t4453 = t3243 * t5788 + t5030;
t4452 = t3117 * t5914 + t3243 * t5785;
t4451 = t3399 * t3243 - t3756 * t5030;
t4450 = -t3117 * t5219 - t3406 * t3243;
t4449 = t3244 * t5787 + t5005;
t4448 = t3118 * t5913 + t3244 * t5784;
t4447 = t3400 * t3244 - t3759 * t5005;
t4446 = -t3118 * t5205 - t3404 * t3244;
t4421 = -t3227 * t5280 + t3331 * t3257;
t4420 = t3227 * t5765 + t3331 * t5795;
t4419 = t3227 * t5918 + t3331 * t5792;
t4418 = -t3228 * t5266 + t3329 * t3258;
t4417 = t3228 * t5752 + t3329 * t5794;
t4416 = t3228 * t5917 + t3329 * t5791;
t4415 = -t3229 * t5252 + t3330 * t3259;
t4414 = t3229 * t5739 + t3330 * t5793;
t4413 = t3229 * t5916 + t3330 * t5790;
t4412 = -t3230 * t5238 + t3333 * t3269;
t4411 = t3230 * t5726 + t3333 * t5789;
t4410 = t3230 * t5915 + t3333 * t5786;
t4409 = -t3231 * t5224 + t3332 * t3270;
t4408 = t3231 * t5713 + t3332 * t5788;
t4407 = t3231 * t5914 + t3332 * t5785;
t4406 = -t3232 * t5210 + t3334 * t3271;
t4405 = t3232 * t5700 + t3334 * t5787;
t4404 = t3232 * t5913 + t3334 * t5784;
t4403 = t3257 * t4911 - t6191;
t4402 = -t3257 * t5650 + t3401 * t5651;
t4401 = t3258 * t4910 - t6190;
t4400 = -t3258 * t5648 + t3402 * t5649;
t4399 = t3259 * t4909 - t6189;
t4398 = -t3259 * t5646 + t3403 * t5647;
t4397 = t3269 * t4908 - t6188;
t4396 = -t3269 * t5644 + t3405 * t5645;
t4395 = t3270 * t4907 - t6187;
t4394 = -t3270 * t5642 + t3406 * t5643;
t4393 = t3271 * t4906 - t6186;
t4392 = -t3271 * t5640 + t3404 * t5641;
t4391 = t3329 * t3357 + t4809;
t4390 = t3329 * t3359 + t4910 * t5287;
t4389 = t3330 * t3361 + t4808;
t4388 = t3330 * t3363 + t4909 * t5286;
t4387 = t3331 * t3353 + t4810;
t4386 = t3331 * t3355 + t4911 * t5288;
t4385 = t3332 * t3375 + t4806;
t4384 = t3332 * t3377 + t4907 * t5284;
t4383 = t3333 * t3371 + t4807;
t4382 = t3333 * t3373 + t4908 * t5285;
t4381 = t3334 * t3379 + t4805;
t4380 = t3334 * t3381 + t4906 * t5283;
t4379 = -t3383 * t5197 - t3401 * t3578;
t4378 = -t3384 * t5193 - t3402 * t3581;
t4377 = -t3385 * t5189 - t3403 * t3584;
t4376 = t3395 * t4911 - t6191;
t4375 = -t3386 * t5197 - t3401 * t4911;
t4374 = t3396 * t4910 - t6190;
t4373 = -t3387 * t5193 - t3402 * t4910;
t4372 = t3397 * t4909 - t6189;
t4371 = -t3388 * t5189 - t3403 * t4909;
t4370 = -t3389 * t5185 - t3405 * t3596;
t4369 = -t3390 * t5181 - t3406 * t3599;
t4368 = -t3391 * t5177 - t3404 * t3602;
t4367 = t3398 * t4908 - t6188;
t4366 = -t3392 * t5185 - t3405 * t4908;
t4365 = t3399 * t4907 - t6187;
t4364 = -t3393 * t5181 - t3406 * t4907;
t4363 = t3400 * t4906 - t6186;
t4362 = -t3394 * t5177 - t3404 * t4906;
t4349 = t3521 * t6032;
t4348 = t3521 * t6021;
t4347 = t3523 * t6031;
t4346 = t3523 * t6022;
t4345 = t3525 * t6030;
t4344 = t3525 * t6023;
t4343 = t3530 * t6029;
t4342 = t3530 * t6024;
t4341 = t3532 * t6028;
t4340 = t3532 * t6025;
t4339 = t3534 * t6027;
t4338 = t3534 * t6026;
t4325 = t6200 * t5281;
t4324 = t6199 * t5267;
t4323 = t6198 * t5253;
t4322 = t6197 * t5239;
t4321 = t6196 * t5225;
t4320 = t6195 * t5211;
t4319 = t3290 * t3331 - t3744 * t4810;
t4318 = t3292 * t3329 - t3747 * t4809;
t4317 = t3294 * t3330 - t3750 * t4808;
t4316 = t3305 * t3333 - t3753 * t4807;
t4315 = t3307 * t3332 - t3756 * t4806;
t4314 = t3309 * t3334 - t3759 * t4805;
t4313 = t3521 * t5936;
t4312 = t3523 * t5935;
t4311 = t3525 * t5934;
t4310 = t3530 * t5933;
t4309 = t3532 * t5932;
t4308 = t3534 * t5931;
t4307 = t3744 * t4481;
t4306 = t3744 * t6044;
t4305 = t3744 * t4445;
t4304 = t3744 * t6038;
t4303 = t3747 * t4479;
t4302 = t3747 * t6043;
t4301 = t3747 * t4443;
t4300 = t3747 * t6037;
t4299 = t3750 * t4477;
t4298 = t3750 * t6042;
t4297 = t3750 * t4441;
t4296 = t3750 * t6036;
t4295 = t3753 * t4475;
t4294 = t3753 * t6041;
t4293 = t3753 * t4439;
t4292 = t3753 * t6035;
t4291 = t3756 * t4473;
t4290 = t3756 * t6040;
t4289 = t3756 * t4437;
t4288 = t3756 * t6034;
t4287 = t3759 * t4471;
t4286 = t3759 * t6039;
t4285 = t3759 * t4435;
t4284 = t3759 * t6033;
t4283 = t6032 * t5762;
t4282 = t6021 * t5762;
t4281 = t6175 * t4911 * t5762;
t4280 = t6031 * t5749;
t4279 = t6022 * t5749;
t4278 = t6173 * t4910 * t5749;
t4277 = t6030 * t5736;
t4276 = t6023 * t5736;
t4275 = t6171 * t4909 * t5736;
t4274 = t6029 * t5723;
t4273 = t6024 * t5723;
t4272 = t6169 * t4908 * t5723;
t4271 = t6028 * t5710;
t4270 = t6025 * t5710;
t4269 = t6167 * t4907 * t5710;
t4268 = t6027 * t5697;
t4267 = t6026 * t5697;
t4266 = t6165 * t4906 * t5697;
t4265 = t5936 * t5762;
t4264 = t5935 * t5749;
t4263 = t5934 * t5736;
t4262 = t5933 * t5723;
t4261 = t5932 * t5710;
t4260 = t5931 * t5697;
t4259 = -t3758 - t3755 - t3752 - t3749 - t3746 - t3743;
t4154 = t4181 ^ 2;
t4153 = t4179 ^ 2;
t4120 = t4182 * t4154;
t4119 = t4155 * t4154;
t4118 = t4155 * t4152;
t4084 = t4178 * t5533;
t4082 = t4155 * t5557;
t4081 = t4179 * t5533;
t3906 = t3941 * t4181;
t3905 = t3939 * t4181;
t3880 = t3941 * t5541;
t3879 = t3939 * t5541;
t3835 = t4969 + t5615;
t3833 = -t4082 - t5620;
t3710 = (-t3937 * t4183 + t3940 * t4180) * t4182;
t3697 = -t3880 + t4081 - t4959;
t3696 = t3879 + (-t4179 * t4180 + t5621) * t4182;
t3665 = -t4155 * t4180 * t4183 - t3937 * t3940 - t3939 * t3941;
t3592 = t4906 ^ 2;
t3590 = t4907 ^ 2;
t3588 = t4908 ^ 2;
t3577 = t4909 ^ 2;
t3575 = t4910 ^ 2;
t3573 = t4911 ^ 2;
t3559 = 0.1e1 / t3562 ^ 2;
t3557 = 0.1e1 / t3561 ^ 2;
t3555 = 0.1e1 / t3560 ^ 2;
t3547 = 0.1e1 / t3550 ^ 2;
t3545 = 0.1e1 / t3549 ^ 2;
t3543 = 0.1e1 / t3548 ^ 2;
t3170 = (-t3370 * t5426 - t3382 * t5424) * t4202;
t3169 = (-t3367 * t5426 - t3380 * t5424) * t4202;
t3166 = (-t3369 * t5431 - t3378 * t5429) * t4202;
t3165 = (-t3366 * t5431 - t3376 * t5429) * t4202;
t3162 = (-t3368 * t5436 - t3374 * t5434) * t4202;
t3161 = (-t3365 * t5436 - t3372 * t5434) * t4202;
t3158 = (-t3352 * t5444 - t3364 * t5442) * t4202;
t3157 = (-t3349 * t5444 - t3362 * t5442) * t4202;
t3154 = (-t3351 * t5449 - t3360 * t5447) * t4202;
t3153 = (-t3348 * t5449 - t3358 * t5447) * t4202;
t3150 = (-t3350 * t5454 - t3356 * t5452) * t4202;
t3149 = (-t3347 * t5454 - t3354 * t5452) * t4202;
t3147 = (t3304 * t5426 - t3310 * t5424) * t4202;
t3145 = (t3303 * t5431 - t3308 * t5429) * t4202;
t3143 = (t3302 * t5436 - t3306 * t5434) * t4202;
t3141 = (t3289 * t5444 - t3295 * t5442) * t4202;
t3139 = (t3288 * t5449 - t3293 * t5447) * t4202;
t3137 = (t3287 * t5454 - t3291 * t5452) * t4202;
t3080 = t3633 * t4734 + t3170;
t3079 = t3169 + t4637;
t3076 = t3631 * t4736 + t3166;
t3075 = t3165 + t4638;
t3072 = t3629 * t4738 + t3162;
t3071 = t3161 + t4639;
t3062 = t3621 * t4740 + t3158;
t3061 = t3157 + t4640;
t3058 = t3619 * t4742 + t3154;
t3057 = t3153 + t4641;
t3054 = t3617 * t4744 + t3150;
t3053 = t3149 + t4642;
t3051 = -t3759 * t4637 + t3147;
t3049 = -t3756 * t4638 + t3145;
t3047 = -t3753 * t4639 + t3143;
t3045 = -t3750 * t4640 + t3141;
t3043 = -t3747 * t4641 + t3139;
t3041 = -t3744 * t4642 + t3137;
t3040 = (t4906 * t5691 + t4907 * t5704 + t4908 * t5717 + t4909 * t5730 + t4910 * t5743 + t4911 * t5756) * t4202;
t3039 = (-t4906 * t5692 - t4907 * t5705 - t4908 * t5718 - t4909 * t5731 - t4910 * t5744 - t4911 * t5757) * t4202;
t3038 = (t5207 + t5221 + t5235 + t5249 + t5263 + t5277) * t4202;
t3037 = (-t5208 - t5222 - t5236 - t5250 - t5264 - t5278) * t4202;
t2951 = (-t3130 * t5426 - t3136 * t5424) * t4202;
t2949 = (-t3129 * t5431 - t3134 * t5429) * t4202;
t2947 = (-t3128 * t5436 - t3132 * t5434) * t4202;
t2939 = (-t3121 * t5444 - t3127 * t5442) * t4202;
t2937 = (-t3120 * t5449 - t3125 * t5447) * t4202;
t2935 = (-t3119 * t5454 - t3123 * t5452) * t4202;
t2921 = (-t3100 * t5426 - t3106 * t5424) * t4202;
t2919 = (-t3099 * t5431 - t3104 * t5429) * t4202;
t2917 = (-t3098 * t5436 - t3102 * t5434) * t4202;
t2909 = (-t3091 * t5444 - t3097 * t5442) * t4202;
t2907 = (-t3090 * t5449 - t3095 * t5447) * t4202;
t2905 = (-t3089 * t5454 - t3093 * t5452) * t4202;
t2904 = t5200 + t5214 + t5228 + t5242 + t5256 + t5270;
t2903 = (t4747 + t4757 + t4767 + t4777 + t4787 + t4797) * t4184;
t2902 = (t4645 + t4651 + t4657 + t4663 + t4669 + t4675) * t5404;
t2900 = -t3346 * t4941 + t2951;
t2898 = -t3345 * t4942 + t2949;
t2896 = -t3344 * t4943 + t2947;
t2894 = -t3340 * t4947 + t2939;
t2892 = -t3339 * t4948 + t2937;
t2890 = -t3338 * t4949 + t2935;
t2888 = -t3328 * t4941 + t2921;
t2886 = -t3327 * t4942 + t2919;
t2884 = -t3326 * t4943 + t2917;
t2882 = -t3322 * t4947 + t2909;
t2880 = -t3321 * t4948 + t2907;
t2878 = -t3320 * t4949 + t2905;
t2877 = t5784 + t5785 + t5786 + t5790 + t5791 + t5792;
t2876 = t5787 + t5788 + t5789 + t5793 + t5794 + t5795;
t2827 = t3383 * t3386 * t3543 + t3384 * t3387 * t3545 + t3385 * t3388 * t3547 + t3389 * t3392 * t3555 + t3390 * t3393 * t3557 + t3391 * t3394 * t3559;
t2826 = (t5691 * t5907 + t5704 * t5908 + t5717 * t5909 + t5730 * t5910 + t5743 * t5911 + t5756 * t5912) * t4202;
t2825 = (-t5692 * t5907 - t5705 * t5908 - t5718 * t5909 - t5731 * t5910 - t5744 * t5911 - t5757 * t5912) * t4202;
t1 = [t3386 ^ 2 * t3543 + t3387 ^ 2 * t3545 + t3388 ^ 2 * t3547 + t3392 ^ 2 * t3555 + t3393 ^ 2 * t3557 + t3394 ^ 2 * t3559, t3522 * t3573 + t3524 * t3575 + t3526 * t3577 + t3531 * t3588 + t3533 * t3590 + t3535 * t3592, (t4220 * t4828 + t4222 * t4826 + t4224 * t4824 + t4232 * t4816 + t4234 * t4814 + t4236 * t4812) * t5403, (-t4214 * t4828 - t4216 * t4826 - t4218 * t4824 - t4226 * t4816 - t4228 * t4814 - t4230 * t4812) * t5403, (t3573 * t5753 + t3575 * t5740 + t3577 * t5727 + t3588 * t5714 + t3590 * t5701 + t3592 * t5688) * t4184, (t3573 * t5268 + t3575 * t5254 + t3577 * t5240 + t3588 * t5226 + t3590 * t5212 + t3592 * t5198) * t5404, (t4213 * t4577 + t4215 * t4575 + t4217 * t4573 + t4225 * t4571 + t4227 * t4569 + t4229 * t4567) * t4201, (t4219 * t4577 + t4221 * t4575 + t4223 * t4573 + t4231 * t4571 + t4233 * t4569 + t4235 * t4567) * t4201, -t3356 * t5947 - t3360 * t5945 - t3364 * t5943 - t3374 * t5941 - t3378 * t5939 - t3382 * t5937 + (t3356 * t5918 + t3360 * t5917 + t3364 * t5916 + t3374 * t5915 + t3378 * t5914 + t3382 * t5913) * t4205, t3056 * t5792 + t3060 * t5791 + t3064 * t5790 + t3074 * t5786 + t3078 * t5785 + t3082 * t5784 - t6047 - t6055 - t6063 - t6071 - t6079 - t6087, t3054 * t5792 + t3058 * t5791 + t3062 * t5790 + t3072 * t5786 + t3076 * t5785 + t3080 * t5784 - t6045 - t6053 - t6061 - t6069 - t6077 - t6085, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4119 + t4118 + t4153; t2827, t2904, t2826, t2825, t2903, t2902, (-t4213 * t4349 - t4215 * t4347 - t4217 * t4345 - t4225 * t4343 - t4227 * t4341 - t4229 * t4339) * t4201, (-t4219 * t4349 - t4221 * t4347 - t4223 * t4345 - t4231 * t4343 - t4233 * t4341 - t4235 * t4339) * t4201, -t3354 * t5947 - t3358 * t5945 - t3362 * t5943 - t3372 * t5941 - t3376 * t5939 - t3380 * t5937 + (t3354 * t5918 + t3358 * t5917 + t3362 * t5916 + t3372 * t5915 + t3376 * t5914 + t3380 * t5913) * t4205, t3055 * t5792 + t3059 * t5791 + t3063 * t5790 + t3073 * t5786 + t3077 * t5785 + t3081 * t5784 - t6051 - t6059 - t6067 - t6075 - t6083 - t6091, t3053 * t5792 + t3057 * t5791 + t3061 * t5790 + t3071 * t5786 + t3075 * t5785 + t3079 * t5784 - t6049 - t6057 - t6065 - t6073 - t6081 - t6089, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3696; t2877, 0, t3040, t3039, 0, 0, 0, 0, 0, -t3864 * t5947 - t3866 * t5945 - t3868 * t5943 - t3881 * t5941 - t3883 * t5939 - t3885 * t5937 + t5889 + t5891 + t5893 + t5895 + t5897 + t5899, -t3865 * t5947 - t3867 * t5945 - t3869 * t5943 - t3882 * t5941 - t3884 * t5939 - t3886 * t5937 + t5888 + t5890 + t5892 + t5894 + t5896 + t5898, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3697; t3257 * t5792 + t3258 * t5791 + t3259 * t5790 + t3269 * t5786 + t3270 * t5785 + t3271 * t5784, t6185, (t4393 * t5691 + t4395 * t5704 + t4397 * t5717 + t4399 * t5730 + t4401 * t5743 + t4403 * t5756) * t4202, (-t4393 * t5692 - t4395 * t5705 - t4397 * t5718 - t4399 * t5731 - t4401 * t5744 - t4403 * t5757) * t4202, t6183, t6184, (-t4213 * t4313 - t4215 * t4312 - t4217 * t4311 - t4225 * t4310 - t4227 * t4309 - t4229 * t4308) * t4201, (-t4219 * t4313 - t4221 * t4312 - t4223 * t4311 - t4231 * t4310 - t4233 * t4309 - t4235 * t4308) * t4201, -t3291 * t5947 - t3293 * t5945 - t3295 * t5943 - t3306 * t5941 - t3308 * t5939 - t3310 * t5937 + (t3291 * t5918 + t3293 * t5917 + t3295 * t5916 + t3306 * t5915 + t3308 * t5914 + t3310 * t5913) * t4205, t3042 * t5792 + t3044 * t5791 + t3046 * t5790 + t3048 * t5786 + t3050 * t5785 + t3052 * t5784 - t6095 - t6099 - t6103 - t6107 - t6111 - t6115, t3041 * t5792 + t3043 * t5791 + t3045 * t5790 + t3047 * t5786 + t3049 * t5785 + t3051 * t5784 - t6093 - t6097 - t6101 - t6105 - t6109 - t6113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; t3110 * t5792 + t3111 * t5791 + t3112 * t5790 + t3116 * t5786 + t3117 * t5785 + t3118 * t5784, t3239 * t5918 + t3240 * t5917 + t3241 * t5916 + t3242 * t5915 + t3243 * t5914 + t3244 * t5913, (t4220 * t4468 + t4222 * t4464 + t4224 * t4460 + t4232 * t4456 + t4234 * t4452 + t4236 * t4448) * t4202, (-t4214 * t4468 - t4216 * t4464 - t4218 * t4460 - t4226 * t4456 - t4228 * t4452 - t4230 * t4448) * t4202, (t3239 * t5276 + t3240 * t5262 + t3241 * t5248 + t3242 * t5234 + t3243 * t5220 + t3244 * t5206) * t4184, (t3239 * t4801 + t3240 * t4791 + t3241 * t4781 + t3242 * t4771 + t3243 * t4761 + t3244 * t4751) * t5404, (-t4213 * t6038 - t4215 * t6037 - t4217 * t6036 - t4225 * t6035 - t4227 * t6034 - t4229 * t6033) * t4201, (-t4219 * t6038 - t4221 * t6037 - t4223 * t6036 - t4231 * t6035 - t4233 * t6034 - t4235 * t6033) * t4201, -t3123 * t5947 - t3125 * t5945 - t3127 * t5943 - t3132 * t5941 - t3134 * t5939 - t3136 * t5937 + (t3123 * t5918 + t3125 * t5917 + t3127 * t5916 + t3132 * t5915 + t3134 * t5914 + t3136 * t5913) * t4205, t2891 * t5792 + t2893 * t5791 + t2895 * t5790 + t2897 * t5786 + t2899 * t5785 + t2901 * t5784 - t6119 - t6123 - t6127 - t6131 - t6135 - t6139, t2890 * t5792 + t2892 * t5791 + t2894 * t5790 + t2896 * t5786 + t2898 * t5785 + t2900 * t5784 - t6117 - t6121 - t6125 - t6129 - t6133 - t6137, 0, 0, 0, 0, 0, 0, -t5570, t4116, t4120 + t5573, 0; t3068 * t5792 + t3069 * t5791 + t3070 * t5790 + t3086 * t5786 + t3087 * t5785 + t3088 * t5784, t3233 * t5918 + t3234 * t5917 + t3235 * t5916 + t3236 * t5915 + t3237 * t5914 + t3238 * t5913, (t4220 * t4504 + t4222 * t4500 + t4224 * t4496 + t4232 * t4492 + t4234 * t4488 + t4236 * t4484) * t4202, (-t4214 * t4504 - t4216 * t4500 - t4218 * t4496 - t4226 * t4492 - t4228 * t4488 - t4230 * t4484) * t4202, (t3233 * t5276 + t3234 * t5262 + t3235 * t5248 + t3236 * t5234 + t3237 * t5220 + t3238 * t5206) * t4184, (t3233 * t4801 + t3234 * t4791 + t3235 * t4781 + t3236 * t4771 + t3237 * t4761 + t3238 * t4751) * t5404, (-t4213 * t6044 - t4215 * t6043 - t4217 * t6042 - t4225 * t6041 - t4227 * t6040 - t4229 * t6039) * t4201, (-t4219 * t6044 - t4221 * t6043 - t4223 * t6042 - t4231 * t6041 - t4233 * t6040 - t4235 * t6039) * t4201, -t3093 * t5947 - t3095 * t5945 - t3097 * t5943 - t3102 * t5941 - t3104 * t5939 - t3106 * t5937 + (t3093 * t5918 + t3095 * t5917 + t3097 * t5916 + t3102 * t5915 + t3104 * t5914 + t3106 * t5913) * t4205, t2879 * t5792 + t2881 * t5791 + t2883 * t5790 + t2885 * t5786 + t2887 * t5785 + t2889 * t5784 - t6143 - t6147 - t6151 - t6155 - t6159 - t6163, t2878 * t5792 + t2880 * t5791 + t2882 * t5790 + t2884 * t5786 + t2886 * t5785 + t2888 * t5784 - t6141 - t6145 - t6149 - t6153 - t6157 - t6161, 0, 0, 0, 0, 0, 0, -t5542, -t5541, 0, 0; t2827, t2904, t2826, t2825, t2903, t2902, (t4213 * t4348 + t4215 * t4346 + t4217 * t4344 + t4225 * t4342 + t4227 * t4340 + t4229 * t4338) * t4201, (t4219 * t4348 + t4221 * t4346 + t4223 * t4344 + t4231 * t4342 + t4233 * t4340 + t4235 * t4338) * t4201, -t3356 * t5948 - t3360 * t5946 - t3364 * t5944 - t3374 * t5942 - t3378 * t5940 - t3382 * t5938 + (t5000 + t5025 + t5050 + t5075 + t5100 + t5125) * t4205, t3056 * t5795 + t3060 * t5794 + t3064 * t5793 + t3074 * t5789 + t3078 * t5788 + t3082 * t5787 + t6048 + t6056 + t6064 + t6072 + t6080 + t6088, t3054 * t5795 + t3058 * t5794 + t3062 * t5793 + t3072 * t5789 + t3076 * t5788 + t3080 * t5787 + t6046 + t6054 + t6062 + t6070 + t6078 + t6086, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3696; t3383 ^ 2 * t3543 + t3384 ^ 2 * t3545 + t3385 ^ 2 * t3547 + t3389 ^ 2 * t3555 + t3390 ^ 2 * t3557 + t3391 ^ 2 * t3559, t5690 + t5703 + t5716 + t5729 + t5742 + t5755, (t4220 * t4834 + t4222 * t4832 + t4224 * t4830 + t4232 * t4822 + t4234 * t4820 + t4236 * t4818) * t5403, (-t4214 * t4834 - t4216 * t4832 - t4218 * t4830 - t4226 * t4822 - t4228 * t4820 - t4230 * t4818) * t5403, (t5201 + t5215 + t5229 + t5243 + t5257 + t5271) * t4184, (t4748 + t4758 + t4768 + t4778 + t4788 + t4798) * t5404, (t4213 * t4578 + t4215 * t4576 + t4217 * t4574 + t4225 * t4572 + t4227 * t4570 + t4229 * t4568) * t4201, (t4219 * t4578 + t4221 * t4576 + t4223 * t4574 + t4231 * t4572 + t4233 * t4570 + t4235 * t4568) * t4201, -t3354 * t5948 - t3358 * t5946 - t3362 * t5944 - t3372 * t5942 - t3376 * t5940 - t3380 * t5938 + (t5001 + t5026 + t5051 + t5076 + t5101 + t5126) * t4205, t3055 * t5795 + t3059 * t5794 + t3063 * t5793 + t3073 * t5789 + t3077 * t5788 + t3081 * t5787 + t6052 + t6060 + t6068 + t6076 + t6084 + t6092, t3053 * t5795 + t3057 * t5794 + t3061 * t5793 + t3071 * t5789 + t3075 * t5788 + t3079 * t5787 + t6050 + t6058 + t6066 + t6074 + t6082 + t6090, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4155 * t4180 ^ 2 + t3937 ^ 2 + t3939 ^ 2; t2876, 0, t3038, t3037, 0, 0, 0, 0, 0, -t3864 * t5948 - t3866 * t5946 - t3868 * t5944 - t3881 * t5942 - t3883 * t5940 - t3885 * t5938 + t4998 + t5023 + t5048 + t5073 + t5098 + t5123, -t3865 * t5948 - t3867 * t5946 - t3869 * t5944 - t3882 * t5942 - t3884 * t5940 - t3886 * t5938 + t4999 + t5024 + t5049 + t5074 + t5099 + t5124, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3665; t3257 * t5795 + t3258 * t5794 + t3259 * t5793 + t3269 * t5789 + t3270 * t5788 + t3271 * t5787, t6194, (t4714 * t5207 + t4715 * t5221 + t4716 * t5235 + t4717 * t5249 + t4718 * t5263 + t4719 * t5277) * t4202, (-t4714 * t5208 - t4715 * t5222 - t4716 * t5236 - t4717 * t5250 - t4718 * t5264 - t4719 * t5278) * t4202, t6192, t6193, (t4213 * t4517 + t4215 * t4516 + t4217 * t4515 + t4225 * t4514 + t4227 * t4513 + t4229 * t4512) * t4201, (t4219 * t4517 + t4221 * t4516 + t4223 * t4515 + t4231 * t4514 + t4233 * t4513 + t4235 * t4512) * t4201, -t3291 * t5948 - t3293 * t5946 - t3295 * t5944 - t3306 * t5942 - t3308 * t5940 - t3310 * t5938 + (t5002 + t5027 + t5052 + t5077 + t5102 + t5127) * t4205, t3042 * t5795 + t3044 * t5794 + t3046 * t5793 + t3048 * t5789 + t3050 * t5788 + t3052 * t5787 + t6096 + t6100 + t6104 + t6108 + t6112 + t6116, t3041 * t5795 + t3043 * t5794 + t3045 * t5793 + t3047 * t5789 + t3049 * t5788 + t3051 * t5787 + t6094 + t6098 + t6102 + t6106 + t6110 + t6114, 0, 0, 0, 0, 0, 0, t3833, -t3834, t3711, 0; t3110 * t5795 + t3111 * t5794 + t3112 * t5793 + t3116 * t5789 + t3117 * t5788 + t3118 * t5787, t3239 * t5765 + t3240 * t5752 + t3241 * t5739 + t3242 * t5726 + t3243 * t5713 + t3244 * t5700, (t4220 * t4469 + t4222 * t4465 + t4224 * t4461 + t4232 * t4457 + t4234 * t4453 + t4236 * t4449) * t4202, (-t4214 * t4469 - t4216 * t4465 - t4218 * t4461 - t4226 * t4457 - t4228 * t4453 - t4230 * t4449) * t4202, (t3239 * t5279 + t3240 * t5265 + t3241 * t5251 + t3242 * t5237 + t3243 * t5223 + t3244 * t5209) * t4184, (t3239 * t4802 + t3240 * t4792 + t3241 * t4782 + t3242 * t4772 + t3243 * t4762 + t3244 * t4752) * t5404, (t4213 * t4445 + t4215 * t4443 + t4217 * t4441 + t4225 * t4439 + t4227 * t4437 + t4229 * t4435) * t4201, (t4219 * t4445 + t4221 * t4443 + t4223 * t4441 + t4231 * t4439 + t4233 * t4437 + t4235 * t4435) * t4201, -t3123 * t5948 - t3125 * t5946 - t3127 * t5944 - t3132 * t5942 - t3134 * t5940 - t3136 * t5938 + (t5003 + t5028 + t5053 + t5078 + t5103 + t5128) * t4205, t2891 * t5795 + t2893 * t5794 + t2895 * t5793 + t2897 * t5789 + t2899 * t5788 + t2901 * t5787 + t6120 + t6124 + t6128 + t6132 + t6136 + t6140, t2890 * t5795 + t2892 * t5794 + t2894 * t5793 + t2896 * t5789 + t2898 * t5788 + t2900 * t5787 + t6118 + t6122 + t6126 + t6130 + t6134 + t6138, 0, 0, 0, 0, 0, 0, t4960, -t4961, t3905 + t5621, 0; t3068 * t5795 + t3069 * t5794 + t3070 * t5793 + t3086 * t5789 + t3087 * t5788 + t3088 * t5787, t3233 * t5765 + t3234 * t5752 + t3235 * t5739 + t3236 * t5726 + t3237 * t5713 + t3238 * t5700, (t4220 * t4505 + t4222 * t4501 + t4224 * t4497 + t4232 * t4493 + t4234 * t4489 + t4236 * t4485) * t4202, (-t4214 * t4505 - t4216 * t4501 - t4218 * t4497 - t4226 * t4493 - t4228 * t4489 - t4230 * t4485) * t4202, (t3233 * t5279 + t3234 * t5265 + t3235 * t5251 + t3236 * t5237 + t3237 * t5223 + t3238 * t5209) * t4184, (t3233 * t4802 + t3234 * t4792 + t3235 * t4782 + t3236 * t4772 + t3237 * t4762 + t3238 * t4752) * t5404, (t4213 * t4481 + t4215 * t4479 + t4217 * t4477 + t4225 * t4475 + t4227 * t4473 + t4229 * t4471) * t4201, (t4219 * t4481 + t4221 * t4479 + t4223 * t4477 + t4231 * t4475 + t4233 * t4473 + t4235 * t4471) * t4201, -t3093 * t5948 - t3095 * t5946 - t3097 * t5944 - t3102 * t5942 - t3104 * t5940 - t3106 * t5938 + (t5006 + t5031 + t5056 + t5081 + t5106 + t5131) * t4205, t2879 * t5795 + t2881 * t5794 + t2883 * t5793 + t2885 * t5789 + t2887 * t5788 + t2889 * t5787 + t6144 + t6148 + t6152 + t6156 + t6160 + t6164, t2878 * t5795 + t2880 * t5794 + t2882 * t5793 + t2884 * t5789 + t2886 * t5788 + t2888 * t5787 + t6142 + t6146 + t6150 + t6154 + t6158 + t6162, 0, 0, 0, 0, 0, 0, -t3937, -t3939, 0, 0; t2877, 0, t3040, t3039, 0, 0, 0, 0, 0, t3082 + t3078 + t3074 + t3064 + t3060 + t3056, t3150 + t3154 + t3158 + t3162 + t3166 + t3170 + (t4213 * t5947 + t4215 * t5945 + t4217 * t5943 + t4225 * t5941 + t4227 * t5939 + t4229 * t5937) * t5505, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3697; t2876, 0, t3038, t3037, 0, 0, 0, 0, 0, t3081 + t3077 + t3073 + t3063 + t3059 + t3055, t3149 + t3153 + t3157 + t3161 + t3165 + t3169 + (t4213 * t5948 + t4215 * t5946 + t4217 * t5944 + t4225 * t5942 + t4227 * t5940 + t4229 * t5938) * t5505, 0, 0, 0, 0, 0, 0, 0, 0, 0, t3665; 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t4155 * t4183 ^ 2 + t3940 ^ 2 + t3941 ^ 2; -t3276 + t4259 - t3277 - t3280 - t3279 - t3278 - t3275, 0, (-t3744 * t5277 - t3747 * t5263 - t3750 * t5249 - t3753 * t5235 - t3756 * t5221 - t3759 * t5207) * t4202, (t3744 * t5278 + t3747 * t5264 + t3750 * t5250 + t3753 * t5236 + t3756 * t5222 + t3759 * t5208) * t4202, 0, 0, 0, 0, 0, t3052 + t3050 + t3048 + t3046 + t3044 + t3042, t3147 + t3145 + t3143 + t3141 + t3139 + t3137 + (-t4213 * t6182 - t4215 * t6181 - t4217 * t6180 - t4225 * t6179 - t4227 * t6178 - t4229 * t6177) * t5505, 0, 0, 0, 0, 0, 0, t3835, t4905, -t3712, 0; t3118 + t3117 + t3116 + t3112 + t3111 + t3110, 0, (t3239 * t4220 + t3240 * t4222 + t3241 * t4224 + t3242 * t4232 + t3243 * t4234 + t3244 * t4236) * t4202, (-t3239 * t4214 - t3240 * t4216 - t3241 * t4218 - t3242 * t4226 - t3243 * t4228 - t3244 * t4230) * t4202, 0, 0, 0, 0, 0, t2901 + t2899 + t2897 + t2895 + t2893 + t2891, t2935 + t2937 + t2939 + t2947 + t2949 + t2951 + (-t3338 * t4213 - t3339 * t4215 - t3340 * t4217 - t3344 * t4225 - t3345 * t4227 - t3346 * t4229) * t5505, 0, 0, 0, 0, 0, 0, -t4957, t4084, -t3906 - t5616, 0; (t3893 + t3894 + t3895 + t3896 + t3897 + t3898) * t5555 + t4926 + t4927 + t4928 + t4929 + t4930 + t4931, 0, (t3233 * t4220 + t3234 * t4222 + t3235 * t4224 + t3236 * t4232 + t3237 * t4234 + t3238 * t4236) * t4202, (-t3233 * t4214 - t3234 * t4216 - t3235 * t4218 - t3236 * t4226 - t3237 * t4228 - t3238 * t4230) * t4202, 0, 0, 0, 0, 0, t2889 + t2887 + t2885 + t2883 + t2881 + t2879, t2905 + t2907 + t2909 + t2917 + t2919 + t2921 + (-t3320 * t4213 - t3321 * t4215 - t3322 * t4217 - t3326 * t4225 - t3327 * t4227 - t3328 * t4229) * t5505, 0, 0, 0, 0, 0, 0, t3940, t3941, 0, 0; t3386 * t5783 + t3387 * t5782 + t3388 * t5781 + t3392 * t5780 + t3393 * t5779 + t3394 * t5778, t6185, (t4363 * t5691 + t4365 * t5704 + t4367 * t5717 + t4372 * t5730 + t4374 * t5743 + t4376 * t5756) * t4202, (-t4363 * t5692 - t4365 * t5705 - t4367 * t5718 - t4372 * t5731 - t4374 * t5744 - t4376 * t5757) * t4202, t6183, t6184, (-t4213 * t4282 - t4215 * t4279 - t4217 * t4276 - t4225 * t4273 - t4227 * t4270 - t4229 * t4267) * t4201, (-t4219 * t4282 - t4221 * t4279 - t4223 * t4276 - t4231 * t4273 - t4233 * t4270 - t4235 * t4267) * t4201, t3356 * t5172 + t3360 * t5167 + t3364 * t5162 + t3374 * t5157 + t3378 * t5152 + t3382 * t5147 + (-t3744 * t5125 - t3747 * t5100 - t3750 * t5075 - t3753 * t5050 - t3756 * t5025 - t3759 * t5000) * t4205, t3395 * t3056 + t3396 * t3060 + t3397 * t3064 + t3398 * t3074 + t3399 * t3078 + t3400 * t3082 - t3744 * t6088 - t3747 * t6080 - t3750 * t6072 - t3753 * t6064 - t3756 * t6056 - t3759 * t6048, t3395 * t3054 + t3396 * t3058 + t3397 * t3062 + t3398 * t3072 + t3399 * t3076 + t3400 * t3080 - t3744 * t6086 - t3747 * t6078 - t3750 * t6070 - t3753 * t6062 - t3756 * t6054 - t3759 * t6046, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; t3383 * t5783 + t3384 * t5782 + t3385 * t5781 + t3389 * t5780 + t3390 * t5779 + t3391 * t5778, t6194, (t4708 * t5207 + t4709 * t5221 + t4710 * t5235 + t4711 * t5249 + t4712 * t5263 + t4713 * t5277) * t4202, (-t4708 * t5208 - t4709 * t5222 - t4710 * t5236 - t4711 * t5250 - t4712 * t5264 - t4713 * t5278) * t4202, t6192, t6193, (-t4213 * t4511 - t4215 * t4510 - t4217 * t4509 - t4225 * t4508 - t4227 * t4507 - t4229 * t4506) * t4201, (-t4219 * t4511 - t4221 * t4510 - t4223 * t4509 - t4231 * t4508 - t4233 * t4507 - t4235 * t4506) * t4201, t3354 * t5172 + t3358 * t5167 + t3362 * t5162 + t3372 * t5157 + t3376 * t5152 + t3380 * t5147 + (-t3744 * t5126 - t3747 * t5101 - t3750 * t5076 - t3753 * t5051 - t3756 * t5026 - t3759 * t5001) * t4205, t3395 * t3055 + t3396 * t3059 + t3397 * t3063 + t3398 * t3073 + t3399 * t3077 + t3400 * t3081 - t3744 * t6092 - t3747 * t6084 - t3750 * t6076 - t3753 * t6068 - t3756 * t6060 - t3759 * t6052, t3395 * t3053 + t3396 * t3057 + t3397 * t3061 + t3398 * t3071 + t3399 * t3075 + t3400 * t3079 - t3744 * t6090 - t3747 * t6082 - t3750 * t6074 - t3753 * t6066 - t3756 * t6058 - t3759 * t6050, 0, 0, 0, 0, 0, 0, t3833, -t3834, t3711, 0; t4259 + t3410 + t3411 + t3407 + t3412 + t3409 + t3408, 0, (-t3578 * t5273 - t3581 * t5259 - t3584 * t5245 - t3596 * t5231 - t3599 * t5217 - t3602 * t5203) * t4202, (t3578 * t5274 + t3581 * t5260 + t3584 * t5246 + t3596 * t5232 + t3599 * t5218 + t3602 * t5204) * t4202, 0, 0, 0, 0, 0, -(-t3627 * t5653 + t4998) * t3759 - (-t3625 * t5658 + t5023) * t3756 - (-t3623 * t5663 + t5048) * t3753 - (-t3615 * t5668 + t5073) * t3750 - (-t3613 * t5673 + t5098) * t3747 - (-t3611 * t5678 + t5123) * t3744, -(-t3627 * t5652 + t4999) * t3759 - (-t3625 * t5657 + t5024) * t3756 - (-t3623 * t5662 + t5049) * t3753 - (-t3615 * t5667 + t5074) * t3750 - (-t3613 * t5672 + t5099) * t3747 - (-t3611 * t5677 + t5124) * t3744, 0, 0, 0, 0, 0, 0, t3835, t4905, -t3712, 0; t3257 * t3395 + t3258 * t3396 + t3259 * t3397 + t3269 * t3398 + t3270 * t3399 + t3271 * t3400, t3744 * t5272 + t3747 * t5258 + t3750 * t5244 + t3753 * t5230 + t3756 * t5216 + t3759 * t5202, (t4619 * t5207 + t4620 * t5221 + t4621 * t5235 + t4622 * t5249 + t4623 * t5263 + t4624 * t5277) * t4202, (-t4619 * t5208 - t4620 * t5222 - t4621 * t5236 - t4622 * t5250 - t4623 * t5264 - t4624 * t5278) * t4202, (t3744 * t4799 + t3747 * t4789 + t3750 * t4779 + t3753 * t4769 + t3756 * t4759 + t3759 * t4749) * t4184, (t3744 * t4676 + t3747 * t4670 + t3750 * t4664 + t3753 * t4658 + t3756 * t4652 + t3759 * t4646) * t5404, (-t4213 * t4325 - t4215 * t4324 - t4217 * t4323 - t4225 * t4322 - t4227 * t4321 - t4229 * t4320) * t4201, (-t4219 * t4325 - t4221 * t4324 - t4223 * t4323 - t4231 * t4322 - t4233 * t4321 - t4235 * t4320) * t4201, t3291 * t5172 + t3293 * t5167 + t3295 * t5162 + t3306 * t5157 + t3308 * t5152 + t3310 * t5147 + (-t3744 * t5127 - t3747 * t5102 - t3750 * t5077 - t3753 * t5052 - t3756 * t5027 - t3759 * t5002) * t4205, t3395 * t3042 + t3396 * t3044 + t3397 * t3046 + t3398 * t3048 + t3399 * t3050 + t3400 * t3052 - t3744 * t6116 - t3747 * t6112 - t3750 * t6108 - t3753 * t6104 - t3756 * t6100 - t3759 * t6096, t3395 * t3041 + t3396 * t3043 + t3397 * t3045 + t3398 * t3047 + t3399 * t3049 + t3400 * t3051 - t3744 * t6114 - t3747 * t6110 - t3750 * t6106 - t3753 * t6102 - t3756 * t6098 - t3759 * t6094, t4119, -0.2e1 * t4155 * t4181 * t4178, 0.2e1 * t4179 * t5541, t4118, -0.2e1 * t4179 * t5542, t4153, 0, 0, 0, 0; t3110 * t3395 + t3111 * t3396 + t3112 * t3397 + t3116 * t3398 + t3117 * t3399 + t3118 * t3400, -t3239 * t5281 - t3240 * t5267 - t3241 * t5253 - t3242 * t5239 - t3243 * t5225 - t3244 * t5211, (t4220 * t4467 + t4222 * t4463 + t4224 * t4459 + t4232 * t4455 + t4234 * t4451 + t4236 * t4447) * t4202, (-t4214 * t4467 - t4216 * t4463 - t4218 * t4459 - t4226 * t4455 - t4228 * t4451 - t4230 * t4447) * t4202, (-t3239 * t4804 - t3240 * t4794 - t3241 * t4784 - t3242 * t4774 - t3243 * t4764 - t3244 * t4754) * t4184, (-t3239 * t4678 - t3240 * t4672 - t3241 * t4666 - t3242 * t4660 - t3243 * t4654 - t3244 * t4648) * t5404, (-t4213 * t4305 - t4215 * t4301 - t4217 * t4297 - t4225 * t4293 - t4227 * t4289 - t4229 * t4285) * t4201, (-t4219 * t4305 - t4221 * t4301 - t4223 * t4297 - t4231 * t4293 - t4233 * t4289 - t4235 * t4285) * t4201, t3123 * t5172 + t3125 * t5167 + t3127 * t5162 + t3132 * t5157 + t3134 * t5152 + t3136 * t5147 + (-t3744 * t5128 - t3747 * t5103 - t3750 * t5078 - t3753 * t5053 - t3756 * t5028 - t3759 * t5003) * t4205, t3395 * t2891 + t3396 * t2893 + t3397 * t2895 + t3398 * t2897 + t3399 * t2899 + t3400 * t2901 - t3744 * t6140 - t3747 * t6136 - t3750 * t6132 - t3753 * t6128 - t3756 * t6124 - t3759 * t6120, t3395 * t2890 + t3396 * t2892 + t3397 * t2894 + t3398 * t2896 + t3399 * t2898 + t3400 * t2900 - t3744 * t6138 - t3747 * t6134 - t3750 * t6130 - t3753 * t6126 - t3756 * t6122 - t3759 * t6118, t4958, t4120 - t5573, t4116, -t4958, t5570, 0, 0, 0, 0, 0; t3068 * t3395 + t3069 * t3396 + t3070 * t3397 + t3086 * t3398 + t3087 * t3399 + t3088 * t3400, -t3233 * t5281 - t3234 * t5267 - t3235 * t5253 - t3236 * t5239 - t3237 * t5225 - t3238 * t5211, (t4220 * t4503 + t4222 * t4499 + t4224 * t4495 + t4232 * t4491 + t4234 * t4487 + t4236 * t4483) * t4202, (-t4214 * t4503 - t4216 * t4499 - t4218 * t4495 - t4226 * t4491 - t4228 * t4487 - t4230 * t4483) * t4202, (-t3233 * t4804 - t3234 * t4794 - t3235 * t4784 - t3236 * t4774 - t3237 * t4764 - t3238 * t4754) * t4184, (-t3233 * t4678 - t3234 * t4672 - t3235 * t4666 - t3236 * t4660 - t3237 * t4654 - t3238 * t4648) * t5404, (-t4213 * t4307 - t4215 * t4303 - t4217 * t4299 - t4225 * t4295 - t4227 * t4291 - t4229 * t4287) * t4201, (-t4219 * t4307 - t4221 * t4303 - t4223 * t4299 - t4231 * t4295 - t4233 * t4291 - t4235 * t4287) * t4201, t3093 * t5172 + t3095 * t5167 + t3097 * t5162 + t3102 * t5157 + t3104 * t5152 + t3106 * t5147 + (-t3744 * t5131 - t3747 * t5106 - t3750 * t5081 - t3753 * t5056 - t3756 * t5031 - t3759 * t5006) * t4205, t3395 * t2879 + t3396 * t2881 + t3397 * t2883 + t3398 * t2885 + t3399 * t2887 + t3400 * t2889 - t3744 * t6164 - t3747 * t6160 - t3750 * t6156 - t3753 * t6152 - t3756 * t6148 - t3759 * t6144, t3395 * t2878 + t3396 * t2880 + t3397 * t2882 + t3398 * t2884 + t3399 * t2886 + t3400 * t2888 - t3744 * t6162 - t3747 * t6158 - t3750 * t6154 - t3753 * t6150 - t3756 * t6146 - t3759 * t6142, 0, 0, t5541, 0, -t5542, t4179, 0, 0, 0, 0; t3386 * t5777 + t3387 * t5776 + t3388 * t5775 + t3392 * t5773 + t3393 * t5772 + t3394 * t5774, t4906 * t5199 + t4907 * t5213 + t4908 * t5227 + t4909 * t5241 + t4910 * t5255 + t4911 * t5269, (-t4362 * t5691 - t4364 * t5704 - t4366 * t5717 - t4371 * t5730 - t4373 * t5743 - t4375 * t5756) * t4202, (t4362 * t5692 + t4364 * t5705 + t4366 * t5718 + t4371 * t5731 + t4373 * t5744 + t4375 * t5757) * t4202, (t4745 * t4906 + t4755 * t4907 + t4765 * t4908 + t4775 * t4909 + t4785 * t4910 + t4795 * t4911) * t4184, (t4643 * t4906 + t4649 * t4907 + t4655 * t4908 + t4661 * t4909 + t4667 * t4910 + t4673 * t4911) * t5404, (t4213 * t4281 + t4215 * t4278 + t4217 * t4275 + t4225 * t4272 + t4227 * t4269 + t4229 * t4266) * t4201, (t4219 * t4281 + t4221 * t4278 + t4223 * t4275 + t4231 * t4272 + t4233 * t4269 + t4235 * t4266) * t4201, -t3356 * t5170 - t3360 * t5165 - t3364 * t5160 - t3374 * t5155 - t3378 * t5150 - t3382 * t5145 + (t3356 * t5275 + t3360 * t5261 + t3364 * t5247 + t3374 * t5233 + t3378 * t5219 + t3382 * t5205) * t4205, t3401 * t3056 + t3402 * t3060 + t3403 * t3064 + t3405 * t3074 + t3406 * t3078 + t3404 * t3082 - t3744 * t6087 - t3747 * t6079 - t3750 * t6071 - t3753 * t6063 - t3756 * t6055 - t3759 * t6047, t3401 * t3054 + t3402 * t3058 + t3403 * t3062 + t3405 * t3072 + t3406 * t3076 + t3404 * t3080 - t3744 * t6085 - t3747 * t6077 - t3750 * t6069 - t3753 * t6061 - t3756 * t6053 - t3759 * t6045, 0, 0, 0, 0, 0, 0, -t3833, t3834, -t3711, 0; t3383 * t5777 + t3384 * t5776 + t3385 * t5775 + t3389 * t5773 + t3390 * t5772 + t3391 * t5774, t4746 + t4756 + t4766 + t4776 + t4786 + t4796, (-t4368 * t5691 - t4369 * t5704 - t4370 * t5717 - t4377 * t5730 - t4378 * t5743 - t4379 * t5756) * t4202, (t4368 * t5692 + t4369 * t5705 + t4370 * t5718 + t4377 * t5731 + t4378 * t5744 + t4379 * t5757) * t4202, (t4644 + t4650 + t4656 + t4662 + t4668 + t4674) * t4184, (t4561 + t4562 + t4563 + t4564 + t4565 + t4566) * t5404, (-t4213 * t4283 - t4215 * t4280 - t4217 * t4277 - t4225 * t4274 - t4227 * t4271 - t4229 * t4268) * t4201, (-t4219 * t4283 - t4221 * t4280 - t4223 * t4277 - t4231 * t4274 - t4233 * t4271 - t4235 * t4268) * t4201, -t3354 * t5170 - t3358 * t5165 - t3362 * t5160 - t3372 * t5155 - t3376 * t5150 - t3380 * t5145 + (t3354 * t5275 + t3358 * t5261 + t3362 * t5247 + t3372 * t5233 + t3376 * t5219 + t3380 * t5205) * t4205, t3401 * t3055 + t3402 * t3059 + t3403 * t3063 + t3405 * t3073 + t3406 * t3077 + t3404 * t3081 - t3744 * t6091 - t3747 * t6083 - t3750 * t6075 - t3753 * t6067 - t3756 * t6059 - t3759 * t6051, t3401 * t3053 + t3402 * t3057 + t3403 * t3061 + t3405 * t3071 + t3406 * t3075 + t3404 * t3079 - t3744 * t6089 - t3747 * t6081 - t3750 * t6073 - t3753 * t6065 - t3756 * t6057 - t3759 * t6049, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; -t4993 - t4992 - t4991 - t4990 - t4989 - t5282 + t4095 + t4096 + t4097 + t4098 + t4099 + t4100 + (-t4252 - t4253 - t4254 - t4255 - t4256 - t4257) * t5541 + (-t4245 - t4244 - t4243 - t4242 - t4241 - t4240) * t4179, 0, (t4906 * t5203 + t4907 * t5217 + t4908 * t5231 + t4909 * t5245 + t4910 * t5259 + t4911 * t5273) * t4202, (-t4906 * t5204 - t4907 * t5218 - t4908 * t5232 - t4909 * t5246 - t4910 * t5260 - t4911 * t5274) * t4202, 0, 0, 0, 0, 0, -(t3633 * t5653 - t5899) * t3759 - (t3631 * t5658 - t5897) * t3756 - (t3629 * t5663 - t5895) * t3753 - (t3621 * t5668 - t5893) * t3750 - (t3619 * t5673 - t5891) * t3747 - (t3617 * t5678 - t5889) * t3744, -(t3633 * t5652 - t5898) * t3759 - (t3631 * t5657 - t5896) * t3756 - (t3629 * t5662 - t5894) * t3753 - (t3621 * t5667 - t5892) * t3750 - (t3619 * t5672 - t5890) * t3747 - (t3617 * t5677 - t5888) * t3744, 0, 0, 0, 0, 0, 0, -t3710, t5900, t4606, 0; t3257 * t3401 + t3258 * t3402 + t3259 * t3403 + t3269 * t3405 + t3270 * t3406 + t3271 * t3404, -t3744 * t4796 - t3747 * t4786 - t3750 * t4776 - t3753 * t4766 - t3756 * t4756 - t3759 * t4746, (-t4392 * t5691 - t4394 * t5704 - t4396 * t5717 - t4398 * t5730 - t4400 * t5743 - t4402 * t5756) * t4202, (t4392 * t5692 + t4394 * t5705 + t4396 * t5718 + t4398 * t5731 + t4400 * t5744 + t4402 * t5757) * t4202, (-t3744 * t4674 - t3747 * t4668 - t3750 * t4662 - t3753 * t4656 - t3756 * t4650 - t3759 * t4644) * t4184, (-t3744 * t4562 - t3747 * t4561 - t3750 * t4566 - t3753 * t4565 - t3756 * t4564 - t3759 * t4563) * t5404, (-t4213 * t4265 - t4215 * t4264 - t4217 * t4263 - t4225 * t4262 - t4227 * t4261 - t4229 * t4260) * t4201, (-t4219 * t4265 - t4221 * t4264 - t4223 * t4263 - t4231 * t4262 - t4233 * t4261 - t4235 * t4260) * t4201, -t3291 * t5170 - t3293 * t5165 - t3295 * t5160 - t3306 * t5155 - t3308 * t5150 - t3310 * t5145 + (t3291 * t5275 + t3293 * t5261 + t3295 * t5247 + t3306 * t5233 + t3308 * t5219 + t3310 * t5205) * t4205, t3401 * t3042 + t3402 * t3044 + t3403 * t3046 + t3405 * t3048 + t3406 * t3050 + t3404 * t3052 - t3744 * t6115 - t3747 * t6111 - t3750 * t6107 - t3753 * t6103 - t3756 * t6099 - t3759 * t6095, t3401 * t3041 + t3402 * t3043 + t3403 * t3045 + t3405 * t3047 + t3406 * t3049 + t3404 * t3051 - t3744 * t6113 - t3747 * t6109 - t3750 * t6105 - t3753 * t6101 - t3756 * t6097 - t3759 * t6093, t3879, (-t5618 - t5619) * t4182, -t4968 + t5617, t3937 * t5542, t4082 - t5620, -t4179 * t5555, 0, 0, 0, 0; t3110 * t3401 + t3111 * t3402 + t3112 * t3403 + t3116 * t3405 + t3117 * t3406 + t3118 * t3404, t3239 * t5275 + t3240 * t5261 + t3241 * t5247 + t3242 * t5233 + t3243 * t5219 + t3244 * t5205, (-t4220 * t4466 - t4222 * t4462 - t4224 * t4458 - t4232 * t4454 - t4234 * t4450 - t4236 * t4446) * t4202, (t4214 * t4466 + t4216 * t4462 + t4218 * t4458 + t4226 * t4454 + t4228 * t4450 + t4230 * t4446) * t4202, (t3239 * t4800 + t3240 * t4790 + t3241 * t4780 + t3242 * t4770 + t3243 * t4760 + t3244 * t4750) * t4184, (t3239 * t4677 + t3240 * t4671 + t3241 * t4665 + t3242 * t4659 + t3243 * t4653 + t3244 * t4647) * t5404, (-t4213 * t4304 - t4215 * t4300 - t4217 * t4296 - t4225 * t4292 - t4227 * t4288 - t4229 * t4284) * t4201, (-t4219 * t4304 - t4221 * t4300 - t4223 * t4296 - t4231 * t4292 - t4233 * t4288 - t4235 * t4284) * t4201, -t3123 * t5170 - t3125 * t5165 - t3127 * t5160 - t3132 * t5155 - t3134 * t5150 - t3136 * t5145 + (t3123 * t5275 + t3125 * t5261 + t3127 * t5247 + t3132 * t5233 + t3134 * t5219 + t3136 * t5205) * t4205, t3401 * t2891 + t3402 * t2893 + t3403 * t2895 + t3405 * t2897 + t3406 * t2899 + t3404 * t2901 - t3744 * t6139 - t3747 * t6135 - t3750 * t6131 - t3753 * t6127 - t3756 * t6123 - t3759 * t6119, t3401 * t2890 + t3402 * t2892 + t3403 * t2894 + t3405 * t2896 + t3406 * t2898 + t3404 * t2900 - t3744 * t6137 - t3747 * t6133 - t3750 * t6129 - t3753 * t6125 - t3756 * t6121 - t3759 * t6117, t5618, t3905 - t5621, -t4961, -t5619, -t4960, 0, 0, 0, 0, 0; t3068 * t3401 + t3069 * t3402 + t3070 * t3403 + t3086 * t3405 + t3087 * t3406 + t3088 * t3404, t3233 * t5275 + t3234 * t5261 + t3235 * t5247 + t3236 * t5233 + t3237 * t5219 + t3238 * t5205, (-t4220 * t4502 - t4222 * t4498 - t4224 * t4494 - t4232 * t4490 - t4234 * t4486 - t4236 * t4482) * t4202, (t4214 * t4502 + t4216 * t4498 + t4218 * t4494 + t4226 * t4490 + t4228 * t4486 + t4230 * t4482) * t4202, (t3233 * t4800 + t3234 * t4790 + t3235 * t4780 + t3236 * t4770 + t3237 * t4760 + t3238 * t4750) * t4184, (t3233 * t4677 + t3234 * t4671 + t3235 * t4665 + t3236 * t4659 + t3237 * t4653 + t3238 * t4647) * t5404, (-t4213 * t4306 - t4215 * t4302 - t4217 * t4298 - t4225 * t4294 - t4227 * t4290 - t4229 * t4286) * t4201, (-t4219 * t4306 - t4221 * t4302 - t4223 * t4298 - t4231 * t4294 - t4233 * t4290 - t4235 * t4286) * t4201, -t3093 * t5170 - t3095 * t5165 - t3097 * t5160 - t3102 * t5155 - t3104 * t5150 - t3106 * t5145 + (t3093 * t5275 + t3095 * t5261 + t3097 * t5247 + t3102 * t5233 + t3104 * t5219 + t3106 * t5205) * t4205, t3401 * t2879 + t3402 * t2881 + t3403 * t2883 + t3405 * t2885 + t3406 * t2887 + t3404 * t2889 - t3744 * t6163 - t3747 * t6159 - t3750 * t6155 - t3753 * t6151 - t3756 * t6147 - t3759 * t6143, t3401 * t2878 + t3402 * t2880 + t3403 * t2882 + t3405 * t2884 + t3406 * t2886 + t3404 * t2888 - t3744 * t6161 - t3747 * t6157 - t3750 * t6153 - t3753 * t6149 - t3756 * t6145 - t3759 * t6141, 0, 0, t3939, 0, -t3937, -t5555, 0, 0, 0, 0; t3227 * t5792 + t3228 * t5791 + t3229 * t5790 + t3230 * t5786 + t3231 * t5785 + t3232 * t5784, t3329 * t5917 + t3330 * t5916 + t3331 * t5918 + t3332 * t5914 + t3333 * t5915 + t3334 * t5913, (t4220 * t4419 + t4222 * t4416 + t4224 * t4413 + t4232 * t4410 + t4234 * t4407 + t4236 * t4404) * t4202, (-t4214 * t4419 - t4216 * t4416 - t4218 * t4413 - t4226 * t4410 - t4228 * t4407 - t4230 * t4404) * t4202, (t3329 * t5262 + t3330 * t5248 + t3331 * t5276 + t3332 * t5220 + t3333 * t5234 + t3334 * t5206) * t4184, (t3329 * t4791 + t3330 * t4781 + t3331 * t4801 + t3332 * t4761 + t3333 * t4771 + t3334 * t4751) * t5404, (t4213 * t4386 + t4215 * t4390 + t4217 * t4388 + t4225 * t4382 + t4227 * t4384 + t4229 * t4380) * t4201, (t4219 * t4386 + t4221 * t4390 + t4223 * t4388 + t4231 * t4382 + t4233 * t4384 + t4235 * t4380) * t4201, t3356 * t5771 + t3360 * t5770 + t3364 * t5769 + t3374 * t5768 + t3378 * t5767 + t3382 * t5766 + (t3329 * t3360 + t3330 * t3364 + t3331 * t3356 + t3332 * t3378 + t3333 * t3374 + t3334 * t3382) * t4205, t3232 * t3082 + t3334 * t2994 + t2975 * t5766 + t3231 * t3078 + t3332 * t2993 + t2971 * t5767 + t3230 * t3074 + t3333 * t2992 + t2967 * t5768 + t3229 * t3064 + t3330 * t2982 + t2963 * t5769 + t3228 * t3060 + t3329 * t2981 + t2959 * t5770 + t3227 * t3056 + t3331 * t2980 + t2955 * t5771, t3232 * t3080 + t3334 * t3000 + t2976 * t5766 + t3231 * t3076 + t3332 * t2999 + t2972 * t5767 + t3230 * t3072 + t3333 * t2998 + t2968 * t5768 + t3229 * t3062 + t3330 * t2988 + t2964 * t5769 + t3228 * t3058 + t3329 * t2987 + t2960 * t5770 + t3227 * t3054 + t3331 * t2986 + t2956 * t5771, 0, 0, 0, 0, 0, 0, -t3835, -t4905, t3712, 0; t3227 * t5795 + t3228 * t5794 + t3229 * t5793 + t3230 * t5789 + t3231 * t5788 + t3232 * t5787, t3329 * t5752 + t3330 * t5739 + t3331 * t5765 + t3332 * t5713 + t3333 * t5726 + t3334 * t5700, (t4220 * t4420 + t4222 * t4417 + t4224 * t4414 + t4232 * t4411 + t4234 * t4408 + t4236 * t4405) * t4202, (-t4214 * t4420 - t4216 * t4417 - t4218 * t4414 - t4226 * t4411 - t4228 * t4408 - t4230 * t4405) * t4202, (t4835 + t4836 + t4837 + t4838 + t4839 + t4840) * t4184, (t4679 + t4680 + t4681 + t4682 + t4683 + t4684) * t5404, (t4213 * t4387 + t4215 * t4391 + t4217 * t4389 + t4225 * t4383 + t4227 * t4385 + t4229 * t4381) * t4201, (t4219 * t4387 + t4221 * t4391 + t4223 * t4389 + t4231 * t4383 + t4233 * t4385 + t4235 * t4381) * t4201, t3354 * t5771 + t3358 * t5770 + t3362 * t5769 + t3372 * t5768 + t3376 * t5767 + t3380 * t5766 + (t3329 * t3358 + t3330 * t3362 + t3331 * t3354 + t3332 * t3376 + t3333 * t3372 + t3334 * t3380) * t4205, t3232 * t3081 + t3334 * t2991 + t2973 * t5766 + t3231 * t3077 + t3332 * t2990 + t2969 * t5767 + t3230 * t3073 + t3333 * t2989 + t2965 * t5768 + t3229 * t3063 + t3330 * t2979 + t2961 * t5769 + t3228 * t3059 + t3329 * t2978 + t2957 * t5770 + t3227 * t3055 + t3331 * t2977 + t2953 * t5771, t3232 * t3079 + t3334 * t2997 + t2974 * t5766 + t3231 * t3075 + t3332 * t2996 + t2970 * t5767 + t3230 * t3071 + t3333 * t2995 + t2966 * t5768 + t3229 * t3061 + t3330 * t2985 + t2962 * t5769 + t3228 * t3057 + t3329 * t2984 + t2958 * t5770 + t3227 * t3053 + t3331 * t2983 + t2954 * t5771, 0, 0, 0, 0, 0, 0, t3710, -t5900, -t4606, 0; t3227 + t3228 + t3229 + t3230 + t3231 + t3232, 0, (t3329 * t4222 + t3330 * t4224 + t3331 * t4220 + t3332 * t4234 + t3333 * t4232 + t3334 * t4236) * t4202, (-t3329 * t4216 - t3330 * t4218 - t3331 * t4214 - t3332 * t4228 - t3333 * t4226 - t3334 * t4230) * t4202, 0, 0, 0, 0, 0, t3329 * t3928 + t3330 * t3930 + t3331 * t3926 + t3332 * t3934 + t3333 * t3932 + t3334 * t3936 + t3864 * t5771 + t3866 * t5770 + t3868 * t5769 + t3881 * t5768 + t3883 * t5767 + t3885 * t5766, t3329 * t3927 + t3330 * t3929 + t3331 * t3925 + t3332 * t3933 + t3333 * t3931 + t3334 * t3935 + t3865 * t5771 + t3867 * t5770 + t3869 * t5769 + t3882 * t5768 + t3884 * t5767 + t3886 * t5766, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; t3227 * t3257 + t3228 * t3258 + t3229 * t3259 + t3230 * t3269 + t3231 * t3270 + t3232 * t3271, -t3329 * t5266 - t3330 * t5252 - t3331 * t5280 - t3332 * t5224 - t3333 * t5238 - t3334 * t5210, (t4220 * t4421 + t4222 * t4418 + t4224 * t4415 + t4232 * t4412 + t4234 * t4409 + t4236 * t4406) * t4202, (-t4214 * t4421 - t4216 * t4418 - t4218 * t4415 - t4226 * t4412 - t4228 * t4409 - t4230 * t4406) * t4202, (-t3744 * t4838 - t3747 * t4840 - t3750 * t4839 - t3753 * t4836 - t3756 * t4837 - t3759 * t4835) * t4184, (-t3744 * t4682 - t3747 * t4684 - t3750 * t4683 - t3753 * t4680 - t3756 * t4681 - t3759 * t4679) * t5404, (t4213 * t4319 + t4215 * t4318 + t4217 * t4317 + t4225 * t4316 + t4227 * t4315 + t4229 * t4314) * t4201, (t4219 * t4319 + t4221 * t4318 + t4223 * t4317 + t4231 * t4316 + t4233 * t4315 + t4235 * t4314) * t4201, t3291 * t5771 + t3293 * t5770 + t3295 * t5769 + t3306 * t5768 + t3308 * t5767 + t3310 * t5766 + (t3291 * t3331 + t3293 * t3329 + t3295 * t3330 + t3306 * t3333 + t3308 * t3332 + t3310 * t3334) * t4205, t3232 * t3052 + t3334 * t2943 + t2927 * t5766 + t3231 * t3050 + t3332 * t2942 + t2925 * t5767 + t3230 * t3048 + t3333 * t2941 + t2923 * t5768 + t3229 * t3046 + t3330 * t2931 + t2915 * t5769 + t3228 * t3044 + t3329 * t2930 + t2913 * t5770 + t3227 * t3042 + t3331 * t2929 + t2911 * t5771, t3232 * t3051 + t3334 * t2946 + t2928 * t5766 + t3231 * t3049 + t3332 * t2945 + t2926 * t5767 + t3230 * t3047 + t3333 * t2944 + t2924 * t5768 + t3229 * t3045 + t3330 * t2934 + t2916 * t5769 + t3228 * t3043 + t3329 * t2933 + t2914 * t5770 + t3227 * t3041 + t3331 * t2932 + t2912 * t5771, -t3880, (t5613 + t5614) * t4182, t4083 - t5612, -t4959, -t4969 + t5615, t4081, 0, 0, 0, 0; t3110 * t3227 + t3111 * t3228 + t3112 * t3229 + t3116 * t3230 + t3117 * t3231 + t3118 * t3232, t3239 * t3331 + t3240 * t3329 + t3241 * t3330 + t3242 * t3333 + t3243 * t3332 + t3244 * t3334, (t4220 * t4630 + t4222 * t4629 + t4224 * t4628 + t4232 * t4627 + t4234 * t4626 + t4236 * t4625) * t4202, (-t4214 * t4630 - t4216 * t4629 - t4218 * t4628 - t4226 * t4627 - t4228 * t4626 - t4230 * t4625) * t4202, (t3239 * t5811 + t3240 * t5813 + t3241 * t5812 + t3242 * t5809 + t3243 * t5810 + t3244 * t5808) * t4184, (t3239 * t5298 + t3240 * t5300 + t3241 * t5299 + t3242 * t5296 + t3243 * t5297 + t3244 * t5295) * t5404, (t4213 * t4542 + t4215 * t4541 + t4217 * t4540 + t4225 * t4539 + t4227 * t4538 + t4229 * t4537) * t4201, (t4219 * t4542 + t4221 * t4541 + t4223 * t4540 + t4231 * t4539 + t4233 * t4538 + t4235 * t4537) * t4201, t3123 * t5771 + t3125 * t5770 + t3127 * t5769 + t3132 * t5768 + t3134 * t5767 + t3136 * t5766 + (t3123 * t3331 + t3125 * t3329 + t3127 * t3330 + t3132 * t3333 + t3134 * t3332 + t3136 * t3334) * t4205, t3232 * t2901 + t3334 * t2872 + t2862 * t5766 + t3231 * t2899 + t3332 * t2871 + t2860 * t5767 + t3230 * t2897 + t3333 * t2870 + t2858 * t5768 + t3229 * t2895 + t3330 * t2866 + t2856 * t5769 + t3228 * t2893 + t3329 * t2865 + t2854 * t5770 + t3227 * t2891 + t3331 * t2864 + t2852 * t5771, t3232 * t2900 + t3334 * t2875 + t2863 * t5766 + t3231 * t2898 + t3332 * t2874 + t2861 * t5767 + t3230 * t2896 + t3333 * t2873 + t2859 * t5768 + t3229 * t2894 + t3330 * t2869 + t2857 * t5769 + t3228 * t2892 + t3329 * t2868 + t2855 * t5770 + t3227 * t2890 + t3331 * t2867 + t2853 * t5771, -t5613, -t3906 + t5616, t4084, t5614, t4957, 0, 0, 0, 0, 0; t3068 * t3227 + t3069 * t3228 + t3070 * t3229 + t3086 * t3230 + t3087 * t3231 + t3088 * t3232, t3233 * t3331 + t3234 * t3329 + t3235 * t3330 + t3236 * t3333 + t3237 * t3332 + t3238 * t3334, (t4220 * t4636 + t4222 * t4635 + t4224 * t4634 + t4232 * t4633 + t4234 * t4632 + t4236 * t4631) * t4202, (-t4214 * t4636 - t4216 * t4635 - t4218 * t4634 - t4226 * t4633 - t4228 * t4632 - t4230 * t4631) * t4202, (t3233 * t5811 + t3234 * t5813 + t3235 * t5812 + t3236 * t5809 + t3237 * t5810 + t3238 * t5808) * t4184, (t3233 * t5298 + t3234 * t5300 + t3235 * t5299 + t3236 * t5296 + t3237 * t5297 + t3238 * t5295) * t5404, (t4213 * t4548 + t4215 * t4547 + t4217 * t4546 + t4225 * t4545 + t4227 * t4544 + t4229 * t4543) * t4201, (t4219 * t4548 + t4221 * t4547 + t4223 * t4546 + t4231 * t4545 + t4233 * t4544 + t4235 * t4543) * t4201, t3093 * t5771 + t3095 * t5770 + t3097 * t5769 + t3102 * t5768 + t3104 * t5767 + t3106 * t5766 + (t3093 * t3331 + t3095 * t3329 + t3097 * t3330 + t3102 * t3333 + t3104 * t3332 + t3106 * t3334) * t4205, t3232 * t2889 + t3334 * t2848 + t2838 * t5766 + t3231 * t2887 + t3332 * t2847 + t2836 * t5767 + t3230 * t2885 + t3333 * t2846 + t2834 * t5768 + t3229 * t2883 + t3330 * t2842 + t2832 * t5769 + t3228 * t2881 + t3329 * t2841 + t2830 * t5770 + t3227 * t2879 + t3331 * t2840 + t2828 * t5771, t3232 * t2888 + t3334 * t2851 + t2839 * t5766 + t3231 * t2886 + t3332 * t2850 + t2837 * t5767 + t3230 * t2884 + t3333 * t2849 + t2835 * t5768 + t3229 * t2882 + t3330 * t2845 + t2833 * t5769 + t3228 * t2880 + t3329 * t2844 + t2831 * t5770 + t3227 * t2878 + t3331 * t2843 + t2829 * t5771, 0, 0, -t3941, 0, t3940, t5533, 0, 0, 0, 0;];
tau_reg  = t1;
