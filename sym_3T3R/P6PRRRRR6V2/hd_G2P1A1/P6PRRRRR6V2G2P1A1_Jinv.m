% Analytische Jacobi-Matrix für parallelen Roboter
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorpose und aktiven Gelenkkoordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% Jinv [6x6]
%   Analytische Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-09-20 23:31
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jinv = P6PRRRRR6V2G2P1A1_Jinv(xP, qJ, pkin, koppelP, ...
legFrame)


%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(10,1),zeros(6,3),zeros(6,3)}
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G2P1A1_Jinv: qJ has to be [3x6] (double)');
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G2P1A1_Jinv: xP has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G2P1A1_Jinv: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G2P1A1_Jinv: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G2P1A1_Jinv: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From Jinv_para_matlab.m
% OptimizationMode: 2
% StartTime: 2020-09-20 23:13:22
% EndTime: 2020-09-20 23:13:56
% DurationCPUTime: 34.86s
% Computational Cost: add. (6252->1094), mult. (16142->1949), div. (54->18), fcn. (11900->50), ass. (0->730)
t303 = cos(pkin(6));
t290 = t303 ^ 2;
t777 = (t290 - 0.1e1) * pkin(9);
t335 = cos(qJ(2,1));
t299 = sin(pkin(6));
t304 = cos(pkin(5));
t660 = t299 * t304;
t569 = pkin(3) * t660;
t250 = t335 * t569;
t329 = sin(qJ(2,1));
t191 = -t329 * t777 + t250;
t312 = cos(qJ(3,6));
t292 = t312 ^ 2;
t776 = 0.2e1 * t292;
t314 = cos(qJ(3,5));
t293 = t314 ^ 2;
t775 = 0.2e1 * t293;
t316 = cos(qJ(3,4));
t294 = t316 ^ 2;
t774 = 0.2e1 * t294;
t330 = cos(qJ(3,3));
t295 = t330 ^ 2;
t773 = 0.2e1 * t295;
t332 = cos(qJ(3,2));
t296 = t332 ^ 2;
t772 = 0.2e1 * t296;
t334 = cos(qJ(3,1));
t297 = t334 ^ 2;
t771 = 0.2e1 * t297;
t302 = cos(pkin(10));
t770 = 0.2e1 * t302;
t291 = t304 ^ 2;
t759 = t291 - 0.1e1;
t265 = t303 * pkin(9) + pkin(8);
t328 = sin(qJ(3,1));
t697 = t265 * t328;
t768 = t759 * t265;
t300 = sin(pkin(5));
t305 = cos(pkin(4));
t602 = t305 * t335;
t478 = t265 * t602;
t301 = sin(pkin(4));
t704 = t265 * t304;
t485 = t301 * t704;
t605 = t305 * t329;
t767 = -(pkin(2) * t605 - t485) * t300 - t291 * t478 + t478;
t336 = pkin(2) * pkin(3);
t758 = t771 - 0.1e1;
t307 = sin(qJ(2,6));
t757 = pkin(2) * t307;
t309 = sin(qJ(2,5));
t756 = pkin(2) * t309;
t311 = sin(qJ(2,4));
t755 = pkin(2) * t311;
t325 = sin(qJ(2,3));
t754 = pkin(2) * t325;
t327 = sin(qJ(2,2));
t753 = pkin(2) * t327;
t752 = pkin(2) * t335;
t306 = sin(qJ(3,6));
t740 = pkin(9) * t299;
t589 = 0.2e1 * t740;
t251 = t306 * t589 + pkin(2);
t751 = pkin(3) * t251;
t308 = sin(qJ(3,5));
t252 = t308 * t589 + pkin(2);
t750 = pkin(3) * t252;
t310 = sin(qJ(3,4));
t253 = t310 * t589 + pkin(2);
t749 = pkin(3) * t253;
t324 = sin(qJ(3,3));
t254 = t324 * t589 + pkin(2);
t748 = pkin(3) * t254;
t326 = sin(qJ(3,2));
t255 = t326 * t589 + pkin(2);
t747 = pkin(3) * t255;
t471 = t328 * t589;
t256 = pkin(2) + t471;
t746 = pkin(3) * t256;
t745 = pkin(3) * t265;
t744 = pkin(3) * t299;
t743 = pkin(3) * t300;
t742 = pkin(3) * t305;
t741 = pkin(3) * t334;
t739 = pkin(9) * t300;
t313 = cos(qJ(2,6));
t651 = t300 * t307;
t122 = pkin(2) * t651 + t313 * t768;
t459 = t313 * t569;
t415 = pkin(9) * t459;
t358 = pkin(9) ^ 2;
t257 = pkin(3) ^ 2 + t290 * t358 - t358;
t601 = t307 * t257;
t158 = -0.2e1 * t415 + t601;
t568 = t307 * t744;
t467 = pkin(9) * t568;
t429 = 0.2e1 * t467;
t598 = t313 * t257;
t161 = t304 * t598 + t429;
t171 = -t307 * t777 + t459;
t653 = t300 * t304;
t501 = t265 * t653;
t192 = t501 * t740 + t336;
t267 = pkin(2) * t740;
t193 = pkin(3) * t501 - t267;
t696 = (t304 + 0.1e1) * (t304 - 0.1e1);
t570 = pkin(3) * t696;
t462 = t299 * t570;
t416 = pkin(9) * t462;
t500 = t306 * t696;
t49 = (-t257 * t500 + t193) * t312 + t192 * t306 + (t776 - 0.1e1) * t416;
t44 = t305 * t49;
t587 = pkin(3) * t740;
t477 = -0.2e1 * t587;
t561 = pkin(9) * (t303 + 0.1e1) * (t303 - 0.1e1);
t646 = t300 * t313;
t298 = sin(pkin(10));
t661 = t298 * t305;
t61 = -t122 * t661 + (pkin(2) * t646 - t307 * t768) * t302;
t652 = t300 * t306;
t659 = t299 * t306;
t662 = t298 * t301;
t668 = t292 * t300;
t738 = (t49 * t662 + (-t158 * t661 + (t304 * t429 + t598) * t302) * t668 + (-(t161 * t661 + (t304 * t601 + t313 * t477) * t302) * t652 + t61 * pkin(3)) * t312 + pkin(9) * (t61 * t659 - (t171 * t661 + t302 * (t304 * t568 + t313 * t561)) * t300)) / ((t158 * t668 + (pkin(3) * t122 + t161 * t652) * t312 + pkin(9) * (t122 * t659 + t300 * t171)) * t301 + t44);
t315 = cos(qJ(2,5));
t649 = t300 * t309;
t123 = pkin(2) * t649 + t315 * t768;
t458 = t315 * t569;
t414 = pkin(9) * t458;
t600 = t309 * t257;
t159 = -0.2e1 * t414 + t600;
t567 = t309 * t744;
t466 = pkin(9) * t567;
t428 = 0.2e1 * t466;
t597 = t315 * t257;
t162 = t304 * t597 + t428;
t172 = -t309 * t777 + t458;
t499 = t308 * t696;
t50 = (-t257 * t499 + t193) * t314 + t192 * t308 + (t775 - 0.1e1) * t416;
t45 = t305 * t50;
t645 = t300 * t315;
t62 = -t123 * t661 + (pkin(2) * t645 - t309 * t768) * t302;
t650 = t300 * t308;
t658 = t299 * t308;
t667 = t293 * t300;
t737 = (t50 * t662 + (-t159 * t661 + (t304 * t428 + t597) * t302) * t667 + (-(t162 * t661 + (t304 * t600 + t315 * t477) * t302) * t650 + t62 * pkin(3)) * t314 + pkin(9) * (t62 * t658 - (t172 * t661 + t302 * (t304 * t567 + t315 * t561)) * t300)) / ((t159 * t667 + (pkin(3) * t123 + t162 * t650) * t314 + pkin(9) * (t123 * t658 + t300 * t172)) * t301 + t45);
t317 = cos(qJ(2,4));
t647 = t300 * t311;
t124 = pkin(2) * t647 + t317 * t768;
t457 = t317 * t569;
t413 = pkin(9) * t457;
t599 = t311 * t257;
t160 = -0.2e1 * t413 + t599;
t566 = t311 * t744;
t465 = pkin(9) * t566;
t427 = 0.2e1 * t465;
t596 = t317 * t257;
t163 = t304 * t596 + t427;
t173 = -t311 * t777 + t457;
t498 = t310 * t696;
t51 = (-t257 * t498 + t193) * t316 + t192 * t310 + (t774 - 0.1e1) * t416;
t46 = t305 * t51;
t644 = t300 * t317;
t63 = -t124 * t661 + (pkin(2) * t644 - t311 * t768) * t302;
t648 = t300 * t310;
t657 = t299 * t310;
t666 = t294 * t300;
t736 = (t51 * t662 + (-t160 * t661 + (t304 * t427 + t596) * t302) * t666 + (-(t163 * t661 + (t304 * t599 + t317 * t477) * t302) * t648 + t63 * pkin(3)) * t316 + pkin(9) * (t63 * t657 - (t173 * t661 + t302 * (t304 * t566 + t317 * t561)) * t300)) / ((t160 * t666 + (pkin(3) * t124 + t163 * t648) * t316 + pkin(9) * (t124 * t657 + t300 * t173)) * t301 + t46);
t331 = cos(qJ(2,3));
t642 = t300 * t325;
t125 = pkin(2) * t642 + t331 * t768;
t456 = t331 * t569;
t412 = pkin(9) * t456;
t595 = t325 * t257;
t164 = -0.2e1 * t412 + t595;
t565 = t325 * t744;
t464 = pkin(9) * t565;
t426 = 0.2e1 * t464;
t592 = t331 * t257;
t168 = t304 * t592 + t426;
t186 = -t325 * t777 + t456;
t497 = t324 * t696;
t52 = (-t257 * t497 + t193) * t330 + t192 * t324 + (t773 - 0.1e1) * t416;
t47 = t305 * t52;
t638 = t300 * t331;
t64 = -t125 * t661 + (pkin(2) * t638 - t325 * t768) * t302;
t643 = t300 * t324;
t656 = t299 * t324;
t665 = t295 * t300;
t735 = (t52 * t662 + (-t164 * t661 + t302 * (t304 * t426 + t592)) * t665 + (-(t168 * t661 + t302 * (t304 * t595 + t331 * t477)) * t643 + pkin(3) * t64) * t330 + (t64 * t656 - t300 * (t186 * t661 + t302 * (t304 * t565 + t331 * t561))) * pkin(9)) / ((t164 * t665 + (pkin(3) * t125 + t168 * t643) * t330 + (t125 * t656 + t300 * t186) * pkin(9)) * t301 + t47);
t333 = cos(qJ(2,2));
t640 = t300 * t327;
t126 = pkin(2) * t640 + t333 * t768;
t455 = t333 * t569;
t411 = pkin(9) * t455;
t594 = t327 * t257;
t165 = -0.2e1 * t411 + t594;
t564 = t327 * t744;
t463 = pkin(9) * t564;
t425 = 0.2e1 * t463;
t591 = t333 * t257;
t169 = t304 * t591 + t425;
t187 = -t327 * t777 + t455;
t496 = t326 * t696;
t53 = (-t257 * t496 + t193) * t332 + t192 * t326 + (t772 - 0.1e1) * t416;
t48 = t305 * t53;
t641 = t300 * t326;
t637 = t300 * t333;
t65 = -t126 * t661 + (pkin(2) * t637 - t327 * t768) * t302;
t655 = t299 * t326;
t664 = t296 * t300;
t734 = (t53 * t662 + (-t165 * t661 + t302 * (t304 * t425 + t591)) * t664 + (-(t169 * t661 + t302 * (t304 * t594 + t333 * t477)) * t641 + pkin(3) * t65) * t332 + (t65 * t655 - t300 * (t187 * t661 + t302 * (t304 * t564 + t333 * t561))) * pkin(9)) / ((t165 * t664 + (pkin(3) * t126 + t169 * t641) * t332 + (t126 * t655 + t300 * t187) * pkin(9)) * t301 + t48);
t338 = xP(5);
t285 = sin(t338);
t337 = xP(6);
t284 = sin(t337);
t287 = cos(t337);
t351 = koppelP(1,2);
t357 = koppelP(1,1);
t385 = -t284 * t351 + t287 * t357;
t288 = cos(t338);
t345 = koppelP(1,3);
t679 = t288 * t345;
t129 = t385 * t285 - t679;
t233 = t284 * t357 + t287 * t351;
t263 = pkin(2) * t329 * t300;
t423 = t335 * t768;
t127 = t263 + t423;
t424 = 0.2e1 * t329 * t587;
t590 = t335 * t257;
t170 = t304 * t590 + t424;
t516 = t257 * t696;
t454 = t328 * t516;
t639 = t300 * t328;
t654 = t299 * t328;
t410 = pkin(9) * t250;
t593 = t329 * t257;
t166 = -0.2e1 * t410 + t593;
t206 = t305 * t416;
t635 = t301 * t300;
t78 = t166 * t635 + 0.2e1 * t206;
t24 = 0.1e1 / (t78 * t297 + ((pkin(3) * t127 + t170 * t639) * t301 - t305 * (t454 - t193)) * t334 + pkin(9) * (t127 * t654 + t300 * t191) * t301 + (t192 * t328 - t416) * t305);
t339 = xP(4);
t286 = sin(t339);
t289 = cos(t339);
t733 = t24 * (t129 * t289 - t286 * t233);
t503 = t265 * t696;
t220 = pkin(3) * t503;
t262 = pkin(3) * t653;
t472 = -0.2e1 * t262;
t509 = t257 * t653;
t55 = (t306 * t509 + t220) * t312 + (t265 * t500 + t292 * t472 + t262) * t740;
t722 = t55 * t313;
t236 = pkin(2) * t659 - t777;
t79 = pkin(9) * t236 + t257 * t292 + t312 * t751;
t30 = 0.1e1 / ((t79 * t651 + t722) * t301 + t44);
t352 = koppelP(6,1);
t673 = t289 * t352;
t346 = koppelP(6,2);
t678 = t289 * t346;
t340 = koppelP(6,3);
t684 = t288 * t340;
t689 = t286 * t352;
t694 = t286 * t346;
t732 = t30 * ((t285 * t673 - t694) * t287 + (-t285 * t678 - t689) * t284 - t289 * t684);
t56 = (t308 * t509 + t220) * t314 + (t265 * t499 + t293 * t472 + t262) * t740;
t721 = t56 * t315;
t237 = pkin(2) * t658 - t777;
t80 = pkin(9) * t237 + t257 * t293 + t314 * t750;
t31 = 0.1e1 / ((t80 * t649 + t721) * t301 + t45);
t353 = koppelP(5,1);
t672 = t289 * t353;
t347 = koppelP(5,2);
t677 = t289 * t347;
t341 = koppelP(5,3);
t683 = t288 * t341;
t688 = t286 * t353;
t693 = t286 * t347;
t731 = t31 * ((t285 * t672 - t693) * t287 + (-t285 * t677 - t688) * t284 - t289 * t683);
t57 = (t310 * t509 + t220) * t316 + (t265 * t498 + t294 * t472 + t262) * t740;
t720 = t57 * t317;
t238 = pkin(2) * t657 - t777;
t81 = pkin(9) * t238 + t257 * t294 + t316 * t749;
t32 = 0.1e1 / ((t81 * t647 + t720) * t301 + t46);
t354 = koppelP(4,1);
t671 = t289 * t354;
t348 = koppelP(4,2);
t676 = t289 * t348;
t342 = koppelP(4,3);
t682 = t288 * t342;
t687 = t286 * t354;
t692 = t286 * t348;
t730 = t32 * ((t285 * t671 - t692) * t287 + (-t285 * t676 - t687) * t284 - t289 * t682);
t58 = (t324 * t509 + t220) * t330 + (t265 * t497 + t295 * t472 + t262) * t740;
t719 = t58 * t331;
t242 = pkin(2) * t656 - t777;
t83 = pkin(9) * t242 + t257 * t295 + t330 * t748;
t33 = 0.1e1 / ((t83 * t642 + t719) * t301 + t47);
t355 = koppelP(3,1);
t670 = t289 * t355;
t349 = koppelP(3,2);
t675 = t289 * t349;
t343 = koppelP(3,3);
t681 = t288 * t343;
t686 = t286 * t355;
t691 = t286 * t349;
t729 = t33 * ((t285 * t670 - t691) * t287 + (-t285 * t675 - t686) * t284 - t289 * t681);
t59 = (t326 * t509 + t220) * t332 + (t265 * t496 + t296 * t472 + t262) * t740;
t718 = t59 * t333;
t243 = pkin(2) * t655 - t777;
t84 = pkin(9) * t243 + t257 * t296 + t332 * t747;
t34 = 0.1e1 / ((t84 * t640 + t718) * t301 + t48);
t356 = koppelP(2,1);
t669 = t289 * t356;
t350 = koppelP(2,2);
t674 = t289 * t350;
t344 = koppelP(2,3);
t680 = t288 * t344;
t685 = t286 * t356;
t690 = t286 * t350;
t728 = t34 * ((t285 * t669 - t690) * t287 + (-t285 * t674 - t685) * t284 - t289 * t680);
t727 = t298 * (-t325 * t58 + t83 * t638);
t726 = t298 * (-t327 * t59 + t84 * t637);
t725 = (-t307 * t55 + t79 * t646) * t298;
t724 = (-t309 * t56 + t80 * t645) * t298;
t723 = (-t311 * t57 + t81 * t644) * t298;
t717 = t193 * t334;
t716 = t236 * t300;
t715 = t237 * t300;
t714 = t238 * t300;
t713 = t242 * t300;
t712 = t243 * t300;
t244 = pkin(2) * t654 - t777;
t711 = t244 * t300;
t710 = t257 * t306;
t709 = t257 * t308;
t708 = t257 * t310;
t707 = t257 * t324;
t706 = t257 * t326;
t705 = t257 * t328;
t703 = t265 * t305;
t702 = t265 * t306;
t701 = t265 * t308;
t700 = t265 * t310;
t699 = t265 * t324;
t698 = t265 * t326;
t695 = t285 * t286;
t663 = t297 * t300;
t636 = t300 * t334;
t634 = t301 * t302;
t633 = t301 * t307;
t632 = t301 * t309;
t631 = t301 * t311;
t630 = t301 * t313;
t629 = t301 * t315;
t628 = t301 * t317;
t627 = t301 * t325;
t626 = t301 * t327;
t625 = t301 * t328;
t624 = t301 * t329;
t623 = t301 * t331;
t622 = t301 * t333;
t621 = t301 * t335;
t620 = t302 * t335;
t619 = t305 * t306;
t618 = t305 * t307;
t617 = t305 * t308;
t616 = t305 * t309;
t615 = t305 * t310;
t614 = t305 * t311;
t613 = t305 * t313;
t612 = t305 * t315;
t611 = t305 * t317;
t610 = t305 * t324;
t609 = t305 * t325;
t608 = t305 * t326;
t607 = t305 * t327;
t606 = t305 * t328;
t604 = t305 * t331;
t603 = t305 * t333;
t552 = pkin(3) * t621;
t247 = t265 * t552;
t558 = t305 * t740;
t260 = pkin(2) * t558;
t185 = t247 + t260;
t588 = t302 * t336;
t318 = legFrame(6,2);
t272 = sin(t318);
t580 = t272 * t757;
t278 = cos(t318);
t579 = t278 * t757;
t319 = legFrame(5,2);
t273 = sin(t319);
t578 = t273 * t756;
t279 = cos(t319);
t577 = t279 * t756;
t320 = legFrame(4,2);
t274 = sin(t320);
t576 = t274 * t755;
t280 = cos(t320);
t575 = t280 * t755;
t321 = legFrame(3,2);
t275 = sin(t321);
t574 = t275 * t754;
t281 = cos(t321);
t573 = t281 * t754;
t322 = legFrame(2,2);
t276 = sin(t322);
t572 = t276 * t753;
t282 = cos(t322);
t571 = t282 * t753;
t563 = pkin(3) * t304 * t329;
t562 = t265 * t740;
t560 = t291 * t740;
t559 = t299 * t739;
t261 = pkin(3) * t662;
t557 = pkin(3) * t630;
t556 = pkin(3) * t629;
t555 = pkin(3) * t628;
t554 = pkin(3) * t623;
t553 = pkin(3) * t622;
t550 = t278 * t722;
t549 = t279 * t721;
t548 = t280 * t720;
t547 = t272 * t722;
t546 = t273 * t721;
t545 = t274 * t720;
t544 = t275 * t719;
t543 = t281 * t719;
t542 = t276 * t718;
t541 = t282 * t718;
t210 = -t298 * t307 + t302 * t613;
t98 = t210 * t272 - t278 * t630;
t540 = t98 * t653;
t99 = t210 * t278 + t272 * t630;
t539 = t99 * t653;
t211 = -t298 * t309 + t302 * t612;
t100 = t211 * t273 - t279 * t629;
t538 = t100 * t653;
t101 = t211 * t279 + t273 * t629;
t537 = t101 * t653;
t212 = -t298 * t311 + t302 * t611;
t102 = t212 * t274 - t280 * t628;
t536 = t102 * t653;
t103 = t212 * t280 + t274 * t628;
t535 = t103 * t653;
t224 = -t298 * t325 + t302 * t604;
t110 = t224 * t275 - t281 * t623;
t534 = t110 * t653;
t111 = t224 * t281 + t275 * t623;
t533 = t111 * t653;
t225 = -t298 * t327 + t302 * t603;
t112 = t225 * t276 - t282 * t622;
t532 = t112 * t653;
t113 = t225 * t282 + t276 * t622;
t531 = t113 * t653;
t226 = -t298 * t329 + t302 * t602;
t323 = legFrame(1,2);
t277 = sin(t323);
t283 = cos(t323);
t114 = t226 * t277 - t283 * t621;
t530 = t114 * t653;
t115 = t226 * t283 + t277 * t621;
t529 = t115 * t653;
t194 = t272 * t634 + t305 * t278;
t528 = t194 * t710;
t195 = t273 * t634 + t305 * t279;
t527 = t195 * t709;
t196 = t274 * t634 + t305 * t280;
t526 = t196 * t708;
t197 = t275 * t634 + t305 * t281;
t525 = t197 * t707;
t198 = t276 * t634 + t305 * t282;
t524 = t198 * t706;
t199 = t277 * t634 + t305 * t283;
t523 = t199 * t705;
t200 = t305 * t272 - t278 * t634;
t522 = t200 * t710;
t201 = t305 * t273 - t279 * t634;
t521 = t201 * t709;
t202 = t305 * t274 - t280 * t634;
t520 = t202 * t708;
t203 = t305 * t275 - t281 * t634;
t519 = t203 * t707;
t204 = t305 * t276 - t282 * t634;
t518 = t204 * t706;
t205 = t305 * t277 - t283 * t634;
t517 = t205 * t705;
t515 = t257 * t668;
t514 = t257 * t667;
t513 = t257 * t666;
t512 = t257 * t665;
t511 = t257 * t664;
t510 = t257 * t663;
t508 = t300 * t601;
t507 = t300 * t600;
t506 = t300 * t599;
t505 = t300 * t595;
t504 = t300 * t594;
t502 = t265 * t662;
t495 = t272 * t704;
t494 = t273 * t704;
t493 = t274 * t704;
t492 = t275 * t704;
t491 = t276 * t704;
t490 = t278 * t704;
t489 = t279 * t704;
t488 = t280 * t704;
t487 = t281 * t704;
t486 = t282 * t704;
t484 = t306 * t630;
t483 = t308 * t629;
t482 = t310 * t628;
t481 = t324 * t623;
t480 = t326 * t622;
t479 = t328 * t621;
t475 = t257 * t759;
t470 = t302 * t267;
t469 = t301 * t588;
t468 = pkin(9) * t569;
t461 = t301 * t562;
t460 = t300 * t561;
t453 = t272 * t516;
t452 = t273 * t516;
t451 = t274 * t516;
t450 = t275 * t516;
t449 = t276 * t516;
t448 = t278 * t516;
t447 = t279 * t516;
t446 = t280 * t516;
t445 = t281 * t516;
t444 = t282 * t516;
t443 = t634 * t696;
t442 = t272 * t508;
t441 = t278 * t508;
t440 = t273 * t507;
t439 = t279 * t507;
t438 = t274 * t506;
t437 = t280 * t506;
t436 = t275 * t505;
t435 = t281 * t505;
t434 = t276 * t504;
t433 = t282 * t504;
t432 = t329 * t503;
t430 = 0.2e1 * t468;
t422 = t301 * t470;
t421 = t300 * t467;
t420 = t300 * t466;
t419 = t300 * t465;
t418 = t300 * t464;
t417 = t300 * t463;
t239 = t265 * t557;
t409 = -t257 * t619 + t239;
t240 = t265 * t556;
t408 = -t257 * t617 + t240;
t241 = t265 * t555;
t407 = -t257 * t615 + t241;
t245 = t265 * t554;
t406 = -t257 * t610 + t245;
t246 = t265 * t553;
t405 = -t257 * t608 + t246;
t404 = -t257 * t606 + t247;
t403 = t272 * t462;
t402 = t273 * t462;
t401 = t274 * t462;
t400 = t275 * t462;
t399 = t276 * t462;
t398 = t278 * t462;
t397 = t279 * t462;
t396 = t280 * t462;
t395 = t281 * t462;
t394 = t282 * t462;
t393 = t307 * t460;
t392 = t309 * t460;
t391 = t311 * t460;
t390 = t325 * t460;
t389 = t327 * t460;
t388 = t758 * t570;
t387 = -0.2e1 * t416;
t386 = 0.2e1 * t416;
t384 = t278 * t421;
t383 = t279 * t420;
t382 = t280 * t419;
t381 = t281 * t418;
t380 = t282 * t417;
t379 = t272 * t393;
t378 = t278 * t393;
t377 = t273 * t392;
t376 = t279 * t392;
t375 = t274 * t391;
t374 = t280 * t391;
t373 = t275 * t390;
t372 = t281 * t390;
t371 = t276 * t389;
t370 = t282 * t389;
t369 = t302 * t387;
t368 = t278 * t387;
t367 = t279 * t387;
t366 = t280 * t387;
t365 = t281 * t387;
t364 = t282 * t387;
t363 = 0.2e1 * t272 * t421;
t362 = 0.2e1 * t273 * t420;
t361 = 0.2e1 * t274 * t419;
t360 = 0.2e1 * t275 * t418;
t359 = 0.2e1 * t276 * t417;
t151 = t300 * t752 - t432;
t266 = pkin(2) * t742;
t259 = pkin(2) * t261;
t258 = pkin(3) * t558;
t249 = pkin(3) * t703;
t248 = t261 * t740;
t234 = pkin(3) * t502;
t232 = -t298 * t605 + t620;
t231 = -t298 * t607 + t302 * t333;
t230 = -t298 * t609 + t302 * t331;
t229 = t298 * t335 + t302 * t605;
t228 = t298 * t333 + t302 * t607;
t227 = t298 * t331 + t302 * t609;
t223 = t298 * t602 + t302 * t329;
t222 = t298 * t603 + t302 * t327;
t221 = t298 * t604 + t302 * t325;
t218 = -t298 * t614 + t302 * t317;
t217 = -t298 * t616 + t302 * t315;
t216 = -t298 * t618 + t302 * t313;
t215 = t298 * t317 + t302 * t614;
t214 = t298 * t315 + t302 * t616;
t213 = t298 * t313 + t302 * t618;
t209 = t298 * t611 + t302 * t311;
t208 = t298 * t612 + t302 * t309;
t207 = t298 * t613 + t302 * t307;
t190 = pkin(2) * t624 + t304 * t703;
t188 = t386 * t662;
t184 = t246 + t260;
t183 = t245 + t260;
t182 = -t335 * t461 + t266;
t181 = -t333 * t461 + t266;
t180 = -t331 * t461 + t266;
t179 = t241 + t260;
t178 = t240 + t260;
t177 = t239 + t260;
t176 = -t317 * t461 + t266;
t175 = -t315 * t461 + t266;
t174 = -t313 * t461 + t266;
t167 = t304 * t593 + t335 * t477;
t157 = t285 * t345 + t385 * t288;
t156 = (-t284 * t350 + t287 * t356) * t288 + t285 * t344;
t155 = (-t284 * t349 + t287 * t355) * t288 + t285 * t343;
t154 = (-t284 * t348 + t287 * t354) * t288 + t285 * t342;
t153 = (-t284 * t347 + t287 * t353) * t288 + t285 * t341;
t152 = (-t284 * t346 + t287 * t352) * t288 + t285 * t340;
t150 = t302 * t572 - t486;
t149 = t302 * t574 - t487;
t148 = t302 * t571 + t491;
t147 = t302 * t573 + t492;
t146 = t335 * t503 + t263;
t145 = -t302 * t486 + t572;
t144 = -t302 * t487 + t574;
t143 = t302 * t491 + t571;
t142 = t302 * t492 + t573;
t141 = t302 * t576 - t488;
t140 = t302 * t578 - t489;
t139 = t302 * t580 - t490;
t138 = t302 * t575 + t493;
t137 = t302 * t577 + t494;
t136 = t302 * t579 + t495;
t135 = -t302 * t488 + t576;
t134 = -t302 * t489 + t578;
t133 = -t302 * t490 + t580;
t132 = t302 * t493 + t575;
t131 = t302 * t494 + t577;
t130 = t302 * t495 + t579;
t128 = (t304 * t424 + t590) * t663;
t121 = t229 * t283 + t277 * t624;
t120 = t229 * t277 - t283 * t624;
t119 = t228 * t282 + t276 * t626;
t118 = t228 * t276 - t282 * t626;
t117 = t227 * t281 + t275 * t627;
t116 = t227 * t275 - t281 * t627;
t109 = t215 * t280 + t274 * t631;
t108 = t215 * t274 - t280 * t631;
t107 = t214 * t279 + t273 * t632;
t106 = t214 * t273 - t279 * t632;
t105 = t213 * t278 + t272 * t633;
t104 = t213 * t272 - t278 * t633;
t97 = pkin(2) * t229 - t302 * t485;
t96 = t226 * t562 + t469;
t95 = t225 * t562 + t469;
t94 = t224 * t562 + t469;
t93 = -t226 * t745 + t422;
t92 = -t225 * t745 + t422;
t91 = -t224 * t745 + t422;
t90 = t212 * t562 + t469;
t89 = t211 * t562 + t469;
t88 = t210 * t562 + t469;
t87 = -t212 * t745 + t422;
t86 = -t211 * t745 + t422;
t85 = -t210 * t745 + t422;
t82 = -t334 * t516 + t192;
t71 = -t286 * t680 + (t285 * t685 + t674) * t287 + t284 * (-t285 * t690 + t669);
t70 = -t286 * t681 + (t285 * t686 + t675) * t287 + t284 * (-t285 * t691 + t670);
t69 = -t286 * t682 + (t285 * t687 + t676) * t287 + t284 * (-t285 * t692 + t671);
t68 = -t286 * t683 + (t285 * t688 + t677) * t287 + t284 * (-t285 * t693 + t672);
t67 = -t286 * t684 + (t285 * t689 + t678) * t287 + t284 * (-t285 * t694 + t673);
t66 = t146 * t740 + t170 * t636;
t60 = (-0.2e1 * t226 * t468 + t257 * t229) * t300 + t301 * t369;
t54 = t146 * t741 + (t191 * pkin(9) + t166 * t297) * t300;
t43 = (t190 * pkin(3) + t170 * t625) * t300 - t305 * t454 + t247 * t291 - t185;
t42 = t266 * t328 - t206 + ((t190 * t654 + t301 * t191) * t300 + t299 * t423 * t625) * pkin(9);
t36 = t422 + (t226 * t653 + t443) * t705 + ((t229 * t471 + t97) * t300 + t226 * t768) * pkin(3);
t35 = -t328 * t469 + (-t229 * t460 + (pkin(3) * t443 + t97 * t639 + (t759 * t697 + t262) * t226) * t299) * pkin(9);
t23 = 0.1e1 / ((t206 - (t410 - t593 / 0.2e1) * t635) * t771 + (((t257 * t479 + t249) * t304 + t624 * t746) * t300 + t404 * t291 - t260 - t404) * t334 + ((t265 * t606 + t552) * t660 + t244 * t624) * t739 + (t265 * t479 - t742) * t560 + t182 * t328 + t258);
t22 = 0.1e1 / ((t206 - (t411 - t594 / 0.2e1) * t635) * t772 + (((t257 * t480 + t249) * t304 + t626 * t747) * t300 + t405 * t291 - t260 - t405) * t332 + ((t265 * t608 + t553) * t660 + t243 * t626) * t739 + (t265 * t480 - t742) * t560 + t181 * t326 + t258);
t21 = 0.1e1 / ((t206 - (t412 - t595 / 0.2e1) * t635) * t773 + (((t257 * t481 + t249) * t304 + t627 * t748) * t300 + t406 * t291 - t260 - t406) * t330 + ((t265 * t610 + t554) * t660 + t242 * t627) * t739 + (t265 * t481 - t742) * t560 + t180 * t324 + t258);
t20 = 0.1e1 / ((t206 - (t413 - t599 / 0.2e1) * t635) * t774 + (((t257 * t482 + t249) * t304 + t631 * t749) * t300 + t407 * t291 - t260 - t407) * t316 + ((t265 * t615 + t555) * t660 + t238 * t631) * t739 + (t265 * t482 - t742) * t560 + t176 * t310 + t258);
t19 = 0.1e1 / ((t206 - (t414 - t600 / 0.2e1) * t635) * t775 + (((t257 * t483 + t249) * t304 + t632 * t750) * t300 + t408 * t291 - t260 - t408) * t314 + ((t265 * t617 + t556) * t660 + t237 * t632) * t739 + (t265 * t483 - t742) * t560 + t175 * t308 + t258);
t18 = 0.1e1 / ((t206 - (t415 - t601 / 0.2e1) * t635) * t776 + (((t257 * t484 + t249) * t304 + t633 * t751) * t300 + t409 * t291 - t260 - t409) * t312 + ((t265 * t619 + t557) * t660 + t236 * t633) * t739 + (t265 * t484 - t742) * t560 + t174 * t306 + t258);
t12 = (t277 * t78 + t60 * t283) * t297 + (t277 * t43 + t36 * t283) * t334 + t35 * t283 + t277 * t42;
t11 = (t60 * t277 - t78 * t283) * t297 + (t36 * t277 - t43 * t283) * t334 + t35 * t277 - t42 * t283;
t10 = (-t541 + (t276 * t369 - t433) * t296 + ((t302 * t449 - 0.2e1 * t380) * t326 + t276 * t470 - t143 * t743) * t332 + (-t143 * t559 - t276 * t588) * t326 + pkin(9) * (t302 * t399 + t370)) * t301 + (t302 * t542 + (t302 * t434 + t364) * t296 + ((t302 * t359 + t444) * t326 + t282 * t267 + t150 * t743) * t332 + (t150 * t559 - t282 * t336) * t326 + pkin(9) * (-t302 * t371 + t394)) * t305 + t276 * t726;
t9 = (t542 + (t302 * t364 + t434) * t296 + ((t302 * t444 + t359) * t326 + t282 * t470 + t145 * t743) * t332 + (t145 * t559 - t282 * t588) * t326 + pkin(9) * (t302 * t394 - t371)) * t301 + (t302 * t541 + (t276 * t386 + t302 * t433) * t296 + ((t380 * t770 - t449) * t326 - t276 * t267 + t148 * t743) * t332 + (t148 * t559 + t276 * t336) * t326 - pkin(9) * (t302 * t370 + t399)) * t305 + t282 * t726;
t8 = (-t543 + (t275 * t369 - t435) * t295 + ((t302 * t450 - 0.2e1 * t381) * t324 + t275 * t470 - t142 * t743) * t330 + (-t142 * t559 - t275 * t588) * t324 + pkin(9) * (t302 * t400 + t372)) * t301 + (t302 * t544 + (t302 * t436 + t365) * t295 + ((t302 * t360 + t445) * t324 + t281 * t267 + t149 * t743) * t330 + (t149 * t559 - t281 * t336) * t324 + pkin(9) * (-t302 * t373 + t395)) * t305 + t275 * t727;
t7 = (t544 + (t302 * t365 + t436) * t295 + ((t302 * t445 + t360) * t324 + t281 * t470 + t144 * t743) * t330 + (t144 * t559 - t281 * t588) * t324 + pkin(9) * (t302 * t395 - t373)) * t301 + (t302 * t543 + (t275 * t386 + t302 * t435) * t295 + ((t381 * t770 - t450) * t324 - t275 * t267 + t147 * t743) * t330 + (t147 * t559 + t275 * t336) * t324 - pkin(9) * (t302 * t372 + t400)) * t305 + t281 * t727;
t6 = (t545 + (t302 * t366 + t438) * t294 + ((t302 * t446 + t361) * t310 + t280 * t470 + t135 * t743) * t316 + (t135 * t559 - t280 * t588) * t310 + (t302 * t396 - t375) * pkin(9)) * t301 + (t302 * t548 + (t274 * t386 + t302 * t437) * t294 + ((t382 * t770 - t451) * t310 - t274 * t267 + t138 * t743) * t316 + (t138 * t559 + t274 * t336) * t310 - pkin(9) * (t302 * t374 + t401)) * t305 + t280 * t723;
t5 = (t546 + (t302 * t367 + t440) * t293 + ((t302 * t447 + t362) * t308 + t279 * t470 + t134 * t743) * t314 + (t134 * t559 - t279 * t588) * t308 + (t302 * t397 - t377) * pkin(9)) * t301 + (t302 * t549 + (t273 * t386 + t302 * t439) * t293 + ((t383 * t770 - t452) * t308 - t273 * t267 + t137 * t743) * t314 + (t137 * t559 + t273 * t336) * t308 - pkin(9) * (t302 * t376 + t402)) * t305 + t279 * t724;
t4 = (t547 + (t302 * t368 + t442) * t292 + ((t302 * t448 + t363) * t306 + t278 * t470 + t133 * t743) * t312 + (t133 * t559 - t278 * t588) * t306 + (t302 * t398 - t379) * pkin(9)) * t301 + (t302 * t550 + (t272 * t386 + t302 * t441) * t292 + ((t384 * t770 - t453) * t306 - t272 * t267 + t136 * t743) * t312 + (t136 * t559 + t272 * t336) * t306 - pkin(9) * (t302 * t378 + t403)) * t305 + t278 * t725;
t3 = (-t548 + (t274 * t369 - t437) * t294 + ((t302 * t451 - 0.2e1 * t382) * t310 + t274 * t470 - t132 * t743) * t316 + (-t132 * t559 - t274 * t588) * t310 + pkin(9) * (t302 * t401 + t374)) * t301 + (t302 * t545 + (t302 * t438 + t366) * t294 + ((t302 * t361 + t446) * t310 + t280 * t267 + t141 * t743) * t316 + (t141 * t559 - t280 * t336) * t310 + (-t302 * t375 + t396) * pkin(9)) * t305 + t274 * t723;
t2 = (-t549 + (t273 * t369 - t439) * t293 + ((t302 * t452 - 0.2e1 * t383) * t308 + t273 * t470 - t131 * t743) * t314 + (-t131 * t559 - t273 * t588) * t308 + pkin(9) * (t302 * t402 + t376)) * t301 + (t302 * t546 + (t302 * t440 + t367) * t293 + ((t302 * t362 + t447) * t308 + t279 * t267 + t140 * t743) * t314 + (t140 * t559 - t279 * t336) * t308 + (-t302 * t377 + t397) * pkin(9)) * t305 + t273 * t724;
t1 = (-t550 + (t272 * t369 - t441) * t292 + ((t302 * t453 - 0.2e1 * t384) * t306 + t272 * t470 - t130 * t743) * t312 + (-t130 * t559 - t272 * t588) * t306 + pkin(9) * (t302 * t403 + t378)) * t301 + (t302 * t547 + (t302 * t442 + t368) * t292 + ((t302 * t363 + t448) * t306 + t278 * t267 + t139 * t743) * t312 + (t139 * t559 - t278 * t336) * t306 + (-t302 * t379 + t398) * pkin(9)) * t305 + t272 * t725;
t13 = [(t121 * t510 + (((t115 * t705 + t205 * t745) * t304 + t121 * t746) * t300 + (t115 * t745 - t517) * t291 + t517 + t93 * t283 - t185 * t277) * t334 + (t277 * t182 - t96 * t283) * t328 + (t121 * t711 + ((t115 * t291 + t205 * t653) * t697 + ((t205 * t696 - t529) * t771 + t529 - t205 * t291 + t205) * pkin(3)) * t299) * pkin(9)) * t23, (-t120 * t510 + (((-t114 * t705 + t199 * t745) * t304 - t120 * t746) * t300 + (-t114 * t745 - t523) * t291 + t523 - t93 * t277 - t185 * t283) * t334 + (t283 * t182 + t96 * t277) * t328 + (-t120 * t711 + ((-t114 * t291 + t199 * t653) * t697 + ((t199 * t696 + t530) * t771 - t530 - t199 * t291 + t199) * pkin(3)) * t299) * pkin(9)) * t23, (((t223 * t430 + t257 * t232) * t300 + t188) * t297 + ((-t223 * t705 + t234) * t653 + (t232 * t256 * t300 - t223 * t768) * pkin(3) + (-t328 * t475 - t267) * t662) * t334 + (-(pkin(3) * t223 - t328 * t502) * t660 + t232 * t244) * t739 - (t223 * t697 + t261) * t560 + (t223 * t562 + t259) * t328 + t248) * t23, -t11 * t733 + ((t289 * t351 + t357 * t695) * t287 + (t289 * t357 - t351 * t695) * t284 - t286 * t679) * (((t301 * t82 - t66 * t305) * t298 + (t151 * t740 - t167 * t636) * t302) * t328 + (-t54 * t305 - t301 * (-t758 * t416 - t717)) * t298 + t302 * (t128 + t151 * t741 - (t299 * t563 + t335 * t777) * t739)) / ((t301 * t66 + t82 * t305) * t328 + (t388 * t740 + t717) * t305 + t54 * t301), -t12 * t733 - t157 * ((-t166 * t305 * t663 + (-t170 * t606 * t300 + t767 * pkin(3) - t301 * t454) * t334 + t625 * t336) * t298 + t302 * (t128 + ((pkin(3) * t752 - t167 * t328) * t300 - pkin(3) * t432) * t334) + ((-t191 * t661 - t620 * t777) * t300 + (-t302 * t300 * t563 + (t302 * t151 + t767 * t298) * t328 + (-pkin(2) * t334 + t388) * t662) * t299) * pkin(9)) * t24, (-(t129 * t286 + t289 * t233) * t12 - t157 * t11) * t24; (t119 * t511 + (((t113 * t706 + t204 * t745) * t304 + t119 * t747) * t300 + (t113 * t745 - t518) * t291 + t518 + t92 * t282 - t184 * t276) * t332 + (t276 * t181 - t95 * t282) * t326 + (t119 * t712 + ((t113 * t291 + t204 * t653) * t698 + ((t204 * t696 - t531) * t772 + t531 - t204 * t291 + t204) * pkin(3)) * t299) * pkin(9)) * t22, (-t118 * t511 + (((-t112 * t706 + t198 * t745) * t304 - t118 * t747) * t300 + (-t112 * t745 - t524) * t291 + t524 - t92 * t276 - t184 * t282) * t332 + (t282 * t181 + t95 * t276) * t326 + (-t118 * t712 + ((-t112 * t291 + t198 * t653) * t698 + ((t198 * t696 + t532) * t772 - t532 - t198 * t291 + t198) * pkin(3)) * t299) * pkin(9)) * t22, (((t222 * t430 + t257 * t231) * t300 + t188) * t296 + ((-t222 * t706 + t234) * t653 + (t231 * t255 * t300 - t222 * t768) * pkin(3) + (-t326 * t475 - t267) * t662) * t332 + (-(pkin(3) * t222 - t326 * t502) * t660 + t231 * t243) * t739 - (t222 * t698 + t261) * t560 + (t222 * t562 + t259) * t326 + t248) * t22, -t10 * t728 + t71 * t734, -t156 * t734 - t9 * t728, (-t10 * t156 - t71 * t9) * t34; (t117 * t512 + (((t111 * t707 + t203 * t745) * t304 + t117 * t748) * t300 + (t111 * t745 - t519) * t291 + t519 + t91 * t281 - t183 * t275) * t330 + (t275 * t180 - t94 * t281) * t324 + (t117 * t713 + ((t111 * t291 + t203 * t653) * t699 + ((t203 * t696 - t533) * t773 + t533 - t203 * t291 + t203) * pkin(3)) * t299) * pkin(9)) * t21, (-t116 * t512 + (((-t110 * t707 + t197 * t745) * t304 - t116 * t748) * t300 + (-t110 * t745 - t525) * t291 + t525 - t91 * t275 - t183 * t281) * t330 + (t281 * t180 + t94 * t275) * t324 + (-t116 * t713 + ((-t110 * t291 + t197 * t653) * t699 + ((t197 * t696 + t534) * t773 - t534 - t197 * t291 + t197) * pkin(3)) * t299) * pkin(9)) * t21, (((t221 * t430 + t257 * t230) * t300 + t188) * t295 + ((-t221 * t707 + t234) * t653 + (t230 * t254 * t300 - t221 * t768) * pkin(3) + (-t324 * t475 - t267) * t662) * t330 + (-(pkin(3) * t221 - t324 * t502) * t660 + t230 * t242) * t739 - (t221 * t699 + t261) * t560 + (t221 * t562 + t259) * t324 + t248) * t21, t70 * t735 - t8 * t729, -t155 * t735 - t7 * t729, (-t155 * t8 - t7 * t70) * t33; (t109 * t513 + (((t103 * t708 + t202 * t745) * t304 + t109 * t749) * t300 + (t103 * t745 - t520) * t291 + t520 + t87 * t280 - t179 * t274) * t316 + (t274 * t176 - t90 * t280) * t310 + (t109 * t714 + ((t103 * t291 + t202 * t653) * t700 + ((t202 * t696 - t535) * t774 + t535 - t202 * t291 + t202) * pkin(3)) * t299) * pkin(9)) * t20, (-t108 * t513 + (((-t102 * t708 + t196 * t745) * t304 - t108 * t749) * t300 + (-t102 * t745 - t526) * t291 + t526 - t87 * t274 - t179 * t280) * t316 + (t280 * t176 + t90 * t274) * t310 + (-t108 * t714 + ((-t102 * t291 + t196 * t653) * t700 + ((t196 * t696 + t536) * t774 - t536 - t196 * t291 + t196) * pkin(3)) * t299) * pkin(9)) * t20, (((t209 * t430 + t257 * t218) * t300 + t188) * t294 + ((-t209 * t708 + t234) * t653 + (t218 * t253 * t300 - t209 * t768) * pkin(3) + (-t310 * t475 - t267) * t662) * t316 + (-(pkin(3) * t209 - t310 * t502) * t660 + t218 * t238) * t739 - (t209 * t700 + t261) * t560 + (t209 * t562 + t259) * t310 + t248) * t20, -t3 * t730 + t69 * t736, -t154 * t736 - t6 * t730, (-t154 * t3 - t6 * t69) * t32; (t107 * t514 + (((t101 * t709 + t201 * t745) * t304 + t107 * t750) * t300 + (t101 * t745 - t521) * t291 + t521 + t86 * t279 - t178 * t273) * t314 + (t273 * t175 - t89 * t279) * t308 + (t107 * t715 + ((t101 * t291 + t201 * t653) * t701 + ((t201 * t696 - t537) * t775 + t537 - t201 * t291 + t201) * pkin(3)) * t299) * pkin(9)) * t19, (-t106 * t514 + (((-t100 * t709 + t195 * t745) * t304 - t106 * t750) * t300 + (-t100 * t745 - t527) * t291 + t527 - t86 * t273 - t178 * t279) * t314 + (t279 * t175 + t89 * t273) * t308 + (-t106 * t715 + ((-t100 * t291 + t195 * t653) * t701 + ((t195 * t696 + t538) * t775 - t538 - t195 * t291 + t195) * pkin(3)) * t299) * pkin(9)) * t19, (((t208 * t430 + t257 * t217) * t300 + t188) * t293 + ((-t208 * t709 + t234) * t653 + (t217 * t252 * t300 - t208 * t768) * pkin(3) + (-t308 * t475 - t267) * t662) * t314 + (-(pkin(3) * t208 - t308 * t502) * t660 + t217 * t237) * t739 - (t208 * t701 + t261) * t560 + (t208 * t562 + t259) * t308 + t248) * t19, -t2 * t731 + t68 * t737, -t153 * t737 - t5 * t731, (-t153 * t2 - t5 * t68) * t31; (t105 * t515 + (((t200 * t745 + t99 * t710) * t304 + t105 * t751) * t300 + (t99 * t745 - t522) * t291 + t522 + t85 * t278 - t177 * t272) * t312 + (t272 * t174 - t88 * t278) * t306 + (t105 * t716 + ((t200 * t653 + t291 * t99) * t702 + ((t200 * t696 - t539) * t776 + t539 - t200 * t291 + t200) * pkin(3)) * t299) * pkin(9)) * t18, (-t104 * t515 + (((t194 * t745 - t98 * t710) * t304 - t104 * t751) * t300 + (-t98 * t745 - t528) * t291 + t528 - t85 * t272 - t177 * t278) * t312 + (t278 * t174 + t88 * t272) * t306 + (-t104 * t716 + ((t194 * t653 - t291 * t98) * t702 + ((t194 * t696 + t540) * t776 - t540 - t194 * t291 + t194) * pkin(3)) * t299) * pkin(9)) * t18, (((t207 * t430 + t257 * t216) * t300 + t188) * t292 + ((-t207 * t710 + t234) * t653 + (t216 * t251 * t300 - t207 * t768) * pkin(3) + (-t306 * t475 - t267) * t662) * t312 + (-(pkin(3) * t207 - t306 * t502) * t660 + t216 * t236) * t739 - (t207 * t702 + t261) * t560 + (t207 * t562 + t259) * t306 + t248) * t18, -t1 * t732 + t67 * t738, -t152 * t738 - t4 * t732, (-t1 * t152 - t4 * t67) * t30;];
Jinv  = t13;
