% Analytische Jacobi-Matrix für parallelen Roboter
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorpose und aktiven Gelenkkoordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d2,d3,d4,theta1]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% Jinv [6x6]
%   Analytische Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-09-21 00:16
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jinv = P6PRRRRR6V2G3P4A1_Jinv(xP, qJ, pkin, koppelP, ...
legFrame)


%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(10,1),zeros(6,3),zeros(6,3)}
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6PRRRRR6V2G3P4A1_Jinv: qJ has to be [3x6] (double)');
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6PRRRRR6V2G3P4A1_Jinv: xP has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6PRRRRR6V2G3P4A1_Jinv: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6PRRRRR6V2G3P4A1_Jinv: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6PRRRRR6V2G3P4A1_Jinv: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From Jinv_para_matlab.m
% OptimizationMode: 2
% StartTime: 2020-09-20 23:59:53
% EndTime: 2020-09-21 00:00:29
% DurationCPUTime: 37.24s
% Computational Cost: add. (6252->1095), mult. (16142->1954), div. (54->18), fcn. (11900->50), ass. (0->732)
t304 = cos(pkin(6));
t291 = t304 ^ 2;
t779 = (t291 - 0.1e1) * pkin(9);
t336 = cos(qJ(2,1));
t300 = sin(pkin(6));
t305 = cos(pkin(5));
t659 = t300 * t305;
t567 = pkin(3) * t659;
t251 = t336 * t567;
t330 = sin(qJ(2,1));
t192 = -t330 * t779 + t251;
t313 = cos(qJ(3,6));
t293 = t313 ^ 2;
t778 = 0.2e1 * t293;
t315 = cos(qJ(3,5));
t294 = t315 ^ 2;
t777 = 0.2e1 * t294;
t317 = cos(qJ(3,4));
t295 = t317 ^ 2;
t776 = 0.2e1 * t295;
t331 = cos(qJ(3,3));
t296 = t331 ^ 2;
t775 = 0.2e1 * t296;
t333 = cos(qJ(3,2));
t297 = t333 ^ 2;
t774 = 0.2e1 * t297;
t335 = cos(qJ(3,1));
t298 = t335 ^ 2;
t773 = 0.2e1 * t298;
t299 = sin(pkin(10));
t772 = -0.2e1 * t299;
t292 = t305 ^ 2;
t761 = t292 - 0.1e1;
t266 = t304 * pkin(9) + pkin(8);
t329 = sin(qJ(3,1));
t699 = t266 * t329;
t770 = t266 * t761;
t301 = sin(pkin(5));
t306 = cos(pkin(4));
t606 = t306 * t336;
t479 = t266 * t606;
t302 = sin(pkin(4));
t706 = t266 * t305;
t486 = t302 * t706;
t609 = t306 * t330;
t769 = (pkin(2) * t609 - t486) * t301 + t292 * t479 - t479;
t337 = pkin(2) * pkin(3);
t760 = t773 - 0.1e1;
t308 = sin(qJ(2,6));
t759 = pkin(2) * t308;
t310 = sin(qJ(2,5));
t758 = pkin(2) * t310;
t312 = sin(qJ(2,4));
t757 = pkin(2) * t312;
t326 = sin(qJ(2,3));
t756 = pkin(2) * t326;
t328 = sin(qJ(2,2));
t755 = pkin(2) * t328;
t754 = pkin(2) * t336;
t307 = sin(qJ(3,6));
t742 = pkin(9) * t300;
t588 = 0.2e1 * t742;
t252 = t307 * t588 + pkin(2);
t753 = pkin(3) * t252;
t309 = sin(qJ(3,5));
t253 = t309 * t588 + pkin(2);
t752 = pkin(3) * t253;
t311 = sin(qJ(3,4));
t254 = t311 * t588 + pkin(2);
t751 = pkin(3) * t254;
t325 = sin(qJ(3,3));
t255 = t325 * t588 + pkin(2);
t750 = pkin(3) * t255;
t327 = sin(qJ(3,2));
t256 = t327 * t588 + pkin(2);
t749 = pkin(3) * t256;
t257 = t329 * t588 + pkin(2);
t748 = pkin(3) * t257;
t747 = pkin(3) * t266;
t746 = pkin(3) * t300;
t745 = pkin(3) * t301;
t744 = pkin(3) * t306;
t743 = pkin(3) * t335;
t741 = pkin(9) * t301;
t314 = cos(qJ(2,6));
t604 = t308 * t301;
t122 = pkin(2) * t604 + t314 * t770;
t460 = t314 * t567;
t417 = pkin(9) * t460;
t359 = pkin(9) ^ 2;
t258 = pkin(3) ^ 2 + t291 * t359 - t359;
t605 = t308 * t258;
t159 = -0.2e1 * t417 + t605;
t566 = t308 * t746;
t468 = pkin(9) * t566;
t431 = 0.2e1 * t468;
t599 = t314 * t258;
t162 = t305 * t599 + t431;
t172 = -t308 * t779 + t460;
t651 = t301 * t305;
t503 = t266 * t651;
t193 = t503 * t742 + t337;
t268 = pkin(2) * t742;
t194 = pkin(3) * t503 - t268;
t698 = (t305 + 0.1e1) * (t305 - 0.1e1);
t569 = pkin(3) * t698;
t463 = t300 * t569;
t418 = pkin(9) * t463;
t501 = t307 * t698;
t49 = (-t258 * t501 + t194) * t313 + t193 * t307 + (t778 - 0.1e1) * t418;
t44 = t49 * t306;
t586 = pkin(3) * t742;
t478 = -0.2e1 * t586;
t559 = pkin(9) * (t304 + 0.1e1) * (t304 - 0.1e1);
t303 = cos(pkin(10));
t624 = t303 * t306;
t647 = t301 * t314;
t61 = t122 * t624 + t299 * (pkin(2) * t647 - t308 * t770);
t638 = t302 * t303;
t650 = t301 * t307;
t658 = t300 * t307;
t670 = t293 * t301;
t740 = (-t49 * t638 + (t159 * t624 + t299 * (t305 * t431 + t599)) * t670 + ((t162 * t624 - t299 * (t305 * t605 + t314 * t478)) * t650 + t61 * pkin(3)) * t313 + (t61 * t658 + t301 * (t172 * t624 - t299 * (t305 * t566 + t314 * t559))) * pkin(9)) / ((t159 * t670 + (pkin(3) * t122 + t162 * t650) * t313 + (t122 * t658 + t301 * t172) * pkin(9)) * t302 + t44);
t316 = cos(qJ(2,5));
t602 = t310 * t301;
t123 = pkin(2) * t602 + t316 * t770;
t459 = t316 * t567;
t416 = pkin(9) * t459;
t603 = t310 * t258;
t160 = -0.2e1 * t416 + t603;
t565 = t310 * t746;
t467 = pkin(9) * t565;
t430 = 0.2e1 * t467;
t598 = t316 * t258;
t163 = t305 * t598 + t430;
t173 = -t310 * t779 + t459;
t500 = t309 * t698;
t50 = (-t258 * t500 + t194) * t315 + t193 * t309 + (t777 - 0.1e1) * t418;
t45 = t50 * t306;
t646 = t301 * t316;
t62 = t123 * t624 + t299 * (pkin(2) * t646 - t310 * t770);
t649 = t301 * t309;
t657 = t300 * t309;
t669 = t294 * t301;
t739 = (-t50 * t638 + (t160 * t624 + t299 * (t305 * t430 + t598)) * t669 + ((t163 * t624 - t299 * (t305 * t603 + t316 * t478)) * t649 + t62 * pkin(3)) * t315 + (t62 * t657 + t301 * (t173 * t624 - t299 * (t305 * t565 + t316 * t559))) * pkin(9)) / ((t160 * t669 + (pkin(3) * t123 + t163 * t649) * t315 + (t123 * t657 + t301 * t173) * pkin(9)) * t302 + t45);
t318 = cos(qJ(2,4));
t600 = t312 * t301;
t124 = pkin(2) * t600 + t318 * t770;
t458 = t318 * t567;
t415 = pkin(9) * t458;
t601 = t312 * t258;
t161 = -0.2e1 * t415 + t601;
t564 = t312 * t746;
t466 = pkin(9) * t564;
t429 = 0.2e1 * t466;
t597 = t318 * t258;
t164 = t305 * t597 + t429;
t174 = -t312 * t779 + t458;
t499 = t311 * t698;
t51 = (-t258 * t499 + t194) * t317 + t193 * t311 + (t776 - 0.1e1) * t418;
t46 = t51 * t306;
t645 = t301 * t318;
t63 = t124 * t624 + t299 * (pkin(2) * t645 - t312 * t770);
t648 = t301 * t311;
t656 = t300 * t311;
t668 = t295 * t301;
t738 = (-t51 * t638 + (t161 * t624 + t299 * (t305 * t429 + t597)) * t668 + ((t164 * t624 - t299 * (t305 * t601 + t318 * t478)) * t648 + t63 * pkin(3)) * t317 + (t63 * t656 + t301 * (t174 * t624 - t299 * (t305 * t564 + t318 * t559))) * pkin(9)) / ((t161 * t668 + (pkin(3) * t124 + t164 * t648) * t317 + (t124 * t656 + t301 * t174) * pkin(9)) * t302 + t46);
t332 = cos(qJ(2,3));
t595 = t326 * t301;
t125 = pkin(2) * t595 + t332 * t770;
t457 = t332 * t567;
t414 = pkin(9) * t457;
t596 = t326 * t258;
t165 = -0.2e1 * t414 + t596;
t563 = t326 * t746;
t465 = pkin(9) * t563;
t428 = 0.2e1 * t465;
t591 = t332 * t258;
t169 = t305 * t591 + t428;
t187 = -t326 * t779 + t457;
t498 = t325 * t698;
t52 = (-t258 * t498 + t194) * t331 + t193 * t325 + (t775 - 0.1e1) * t418;
t47 = t306 * t52;
t641 = t301 * t332;
t64 = t125 * t624 + (pkin(2) * t641 - t326 * t770) * t299;
t644 = t301 * t325;
t655 = t300 * t325;
t667 = t296 * t301;
t737 = (-t52 * t638 + (t165 * t624 + (t305 * t428 + t591) * t299) * t667 + ((t169 * t624 - (t305 * t596 + t332 * t478) * t299) * t644 + t64 * pkin(3)) * t331 + pkin(9) * (t64 * t655 + t301 * (t187 * t624 - t299 * (t305 * t563 + t332 * t559)))) / ((t165 * t667 + (pkin(3) * t125 + t169 * t644) * t331 + pkin(9) * (t125 * t655 + t301 * t187)) * t302 + t47);
t334 = cos(qJ(2,2));
t593 = t328 * t301;
t126 = pkin(2) * t593 + t334 * t770;
t456 = t334 * t567;
t413 = pkin(9) * t456;
t594 = t328 * t258;
t166 = -0.2e1 * t413 + t594;
t562 = t328 * t746;
t464 = pkin(9) * t562;
t427 = 0.2e1 * t464;
t590 = t334 * t258;
t170 = t305 * t590 + t427;
t188 = -t328 * t779 + t456;
t497 = t327 * t698;
t53 = (-t258 * t497 + t194) * t333 + t193 * t327 + (t774 - 0.1e1) * t418;
t48 = t306 * t53;
t643 = t301 * t327;
t640 = t301 * t334;
t65 = t126 * t624 + (pkin(2) * t640 - t328 * t770) * t299;
t654 = t300 * t327;
t666 = t297 * t301;
t736 = (-t53 * t638 + (t166 * t624 + (t305 * t427 + t590) * t299) * t666 + ((t170 * t624 - (t305 * t594 + t334 * t478) * t299) * t643 + t65 * pkin(3)) * t333 + pkin(9) * (t65 * t654 + t301 * (t188 * t624 - t299 * (t305 * t562 + t334 * t559)))) / ((t166 * t666 + (pkin(3) * t126 + t170 * t643) * t333 + pkin(9) * (t126 * t654 + t301 * t188)) * t302 + t48);
t339 = xP(5);
t286 = sin(t339);
t338 = xP(6);
t285 = sin(t338);
t288 = cos(t338);
t352 = koppelP(1,2);
t358 = koppelP(1,1);
t387 = -t285 * t352 + t288 * t358;
t289 = cos(t339);
t346 = koppelP(1,3);
t681 = t289 * t346;
t129 = t387 * t286 - t681;
t234 = t285 * t358 + t288 * t352;
t264 = pkin(2) * t330 * t301;
t425 = t336 * t770;
t127 = t264 + t425;
t477 = 0.2e1 * t586;
t426 = t330 * t477;
t589 = t336 * t258;
t171 = t305 * t589 + t426;
t517 = t258 * t698;
t455 = t329 * t517;
t642 = t301 * t329;
t653 = t300 * t329;
t412 = pkin(9) * t251;
t592 = t330 * t258;
t167 = -0.2e1 * t412 + t592;
t207 = t306 * t418;
t652 = t301 * t302;
t78 = t167 * t652 + 0.2e1 * t207;
t24 = 0.1e1 / (t78 * t298 + ((t127 * pkin(3) + t171 * t642) * t302 - t306 * (t455 - t194)) * t335 + (t127 * t653 + t301 * t192) * pkin(9) * t302 + t306 * (t193 * t329 - t418));
t340 = xP(4);
t287 = sin(t340);
t290 = cos(t340);
t735 = t24 * (t129 * t290 - t287 * t234);
t504 = t266 * t698;
t221 = pkin(3) * t504;
t263 = pkin(3) * t651;
t472 = -0.2e1 * t263;
t510 = t258 * t651;
t55 = (t307 * t510 + t221) * t313 + (t266 * t501 + t293 * t472 + t263) * t742;
t724 = t55 * t314;
t237 = pkin(2) * t658 - t779;
t79 = pkin(9) * t237 + t258 * t293 + t313 * t753;
t30 = 0.1e1 / ((t79 * t604 + t724) * t302 + t44);
t353 = koppelP(6,1);
t675 = t290 * t353;
t347 = koppelP(6,2);
t680 = t290 * t347;
t341 = koppelP(6,3);
t686 = t289 * t341;
t691 = t287 * t353;
t696 = t287 * t347;
t734 = t30 * ((t286 * t675 - t696) * t288 + (-t286 * t680 - t691) * t285 - t290 * t686);
t56 = (t309 * t510 + t221) * t315 + (t266 * t500 + t294 * t472 + t263) * t742;
t723 = t56 * t316;
t238 = pkin(2) * t657 - t779;
t80 = pkin(9) * t238 + t258 * t294 + t315 * t752;
t31 = 0.1e1 / ((t80 * t602 + t723) * t302 + t45);
t354 = koppelP(5,1);
t674 = t290 * t354;
t348 = koppelP(5,2);
t679 = t290 * t348;
t342 = koppelP(5,3);
t685 = t289 * t342;
t690 = t287 * t354;
t695 = t287 * t348;
t733 = t31 * ((t286 * t674 - t695) * t288 + (-t286 * t679 - t690) * t285 - t290 * t685);
t57 = (t311 * t510 + t221) * t317 + (t266 * t499 + t295 * t472 + t263) * t742;
t722 = t57 * t318;
t239 = pkin(2) * t656 - t779;
t81 = pkin(9) * t239 + t258 * t295 + t317 * t751;
t32 = 0.1e1 / ((t81 * t600 + t722) * t302 + t46);
t355 = koppelP(4,1);
t673 = t290 * t355;
t349 = koppelP(4,2);
t678 = t290 * t349;
t343 = koppelP(4,3);
t684 = t289 * t343;
t689 = t287 * t355;
t694 = t287 * t349;
t732 = t32 * ((t286 * t673 - t694) * t288 + (-t286 * t678 - t689) * t285 - t290 * t684);
t58 = (t325 * t510 + t221) * t331 + (t266 * t498 + t296 * t472 + t263) * t742;
t721 = t58 * t332;
t243 = pkin(2) * t655 - t779;
t83 = pkin(9) * t243 + t258 * t296 + t331 * t750;
t33 = 0.1e1 / ((t83 * t595 + t721) * t302 + t47);
t356 = koppelP(3,1);
t672 = t290 * t356;
t350 = koppelP(3,2);
t677 = t290 * t350;
t344 = koppelP(3,3);
t683 = t289 * t344;
t688 = t287 * t356;
t693 = t287 * t350;
t731 = t33 * ((t286 * t672 - t693) * t288 + (-t286 * t677 - t688) * t285 - t290 * t683);
t59 = (t327 * t510 + t221) * t333 + (t266 * t497 + t297 * t472 + t263) * t742;
t720 = t59 * t334;
t244 = pkin(2) * t654 - t779;
t84 = pkin(9) * t244 + t258 * t297 + t333 * t749;
t34 = 0.1e1 / ((t84 * t593 + t720) * t302 + t48);
t357 = koppelP(2,1);
t671 = t290 * t357;
t351 = koppelP(2,2);
t676 = t290 * t351;
t345 = koppelP(2,3);
t682 = t289 * t345;
t687 = t287 * t357;
t692 = t287 * t351;
t730 = t34 * ((t286 * t671 - t692) * t288 + (-t286 * t676 - t687) * t285 - t290 * t682);
t729 = t303 * (-t308 * t55 + t79 * t647);
t728 = t303 * (-t310 * t56 + t80 * t646);
t727 = t303 * (-t312 * t57 + t81 * t645);
t726 = t303 * (-t326 * t58 + t83 * t641);
t725 = t303 * (-t328 * t59 + t84 * t640);
t719 = t194 * t335;
t718 = t237 * t301;
t717 = t238 * t301;
t716 = t239 * t301;
t715 = t243 * t301;
t714 = t244 * t301;
t245 = pkin(2) * t653 - t779;
t713 = t245 * t301;
t712 = t258 * t307;
t711 = t258 * t309;
t710 = t258 * t311;
t709 = t258 * t325;
t708 = t258 * t327;
t707 = t258 * t329;
t705 = t266 * t306;
t704 = t266 * t307;
t703 = t266 * t309;
t702 = t266 * t311;
t701 = t266 * t325;
t700 = t266 * t327;
t697 = t286 * t287;
t665 = t298 * t301;
t664 = t299 * t302;
t663 = t299 * t314;
t662 = t299 * t316;
t661 = t299 * t318;
t660 = t299 * t336;
t639 = t301 * t335;
t637 = t302 * t308;
t636 = t302 * t310;
t635 = t302 * t312;
t634 = t302 * t314;
t633 = t302 * t316;
t632 = t302 * t318;
t631 = t302 * t326;
t630 = t302 * t328;
t629 = t302 * t329;
t628 = t302 * t330;
t627 = t302 * t332;
t626 = t302 * t334;
t625 = t302 * t336;
t623 = t306 * t307;
t622 = t306 * t308;
t621 = t306 * t309;
t620 = t306 * t310;
t619 = t306 * t311;
t618 = t306 * t312;
t617 = t306 * t314;
t616 = t306 * t316;
t615 = t306 * t318;
t614 = t306 * t325;
t613 = t306 * t326;
t612 = t306 * t327;
t611 = t306 * t328;
t610 = t306 * t329;
t608 = t306 * t332;
t607 = t306 * t334;
t550 = pkin(3) * t625;
t248 = t266 * t550;
t556 = t306 * t742;
t261 = pkin(2) * t556;
t186 = t248 + t261;
t587 = t299 * t337;
t319 = legFrame(6,2);
t273 = sin(t319);
t579 = t273 * t759;
t279 = cos(t319);
t578 = t279 * t759;
t320 = legFrame(5,2);
t274 = sin(t320);
t577 = t274 * t758;
t280 = cos(t320);
t576 = t280 * t758;
t321 = legFrame(4,2);
t275 = sin(t321);
t575 = t275 * t757;
t281 = cos(t321);
t574 = t281 * t757;
t322 = legFrame(3,2);
t276 = sin(t322);
t573 = t276 * t756;
t282 = cos(t322);
t572 = t282 * t756;
t323 = legFrame(2,2);
t277 = sin(t323);
t571 = t277 * t755;
t283 = cos(t323);
t570 = t283 * t755;
t224 = t299 * t606 + t303 * t330;
t158 = t224 * t747;
t568 = pkin(3) * t664;
t561 = pkin(3) * t305 * t330;
t560 = t266 * t742;
t558 = t292 * t742;
t557 = t300 * t741;
t262 = pkin(3) * t638;
t555 = pkin(3) * t634;
t554 = pkin(3) * t633;
t553 = pkin(3) * t632;
t552 = pkin(3) * t627;
t551 = pkin(3) * t626;
t548 = t276 * t721;
t547 = t277 * t720;
t546 = t55 * t663;
t545 = t56 * t662;
t544 = t57 * t661;
t543 = t282 * t721;
t542 = t283 * t720;
t208 = t299 * t617 + t303 * t308;
t98 = t208 * t273 + t279 * t634;
t541 = t98 * t651;
t99 = t208 * t279 - t273 * t634;
t540 = t99 * t651;
t209 = t299 * t616 + t303 * t310;
t100 = t209 * t274 + t280 * t633;
t539 = t100 * t651;
t101 = t209 * t280 - t274 * t633;
t538 = t101 * t651;
t210 = t299 * t615 + t303 * t312;
t102 = t210 * t275 + t281 * t632;
t537 = t102 * t651;
t103 = t210 * t281 - t275 * t632;
t536 = t103 * t651;
t222 = t299 * t608 + t303 * t326;
t110 = t222 * t276 + t282 * t627;
t535 = t110 * t651;
t111 = t222 * t282 - t276 * t627;
t534 = t111 * t651;
t223 = t299 * t607 + t303 * t328;
t112 = t223 * t277 + t283 * t626;
t533 = t112 * t651;
t113 = t223 * t283 - t277 * t626;
t532 = t113 * t651;
t324 = legFrame(1,2);
t278 = sin(t324);
t284 = cos(t324);
t114 = t224 * t278 + t284 * t625;
t531 = t114 * t651;
t115 = t224 * t284 - t278 * t625;
t530 = t115 * t651;
t195 = -t273 * t664 + t306 * t279;
t529 = t195 * t712;
t196 = -t274 * t664 + t306 * t280;
t528 = t196 * t711;
t197 = -t275 * t664 + t306 * t281;
t527 = t197 * t710;
t198 = -t276 * t664 + t306 * t282;
t526 = t198 * t709;
t199 = -t277 * t664 + t306 * t283;
t525 = t199 * t708;
t200 = -t278 * t664 + t306 * t284;
t524 = t200 * t707;
t201 = t306 * t273 + t279 * t664;
t523 = t201 * t712;
t202 = t306 * t274 + t280 * t664;
t522 = t202 * t711;
t203 = t306 * t275 + t281 * t664;
t521 = t203 * t710;
t204 = t306 * t276 + t282 * t664;
t520 = t204 * t709;
t205 = t306 * t277 + t283 * t664;
t519 = t205 * t708;
t206 = t306 * t278 + t284 * t664;
t518 = t206 * t707;
t516 = t258 * t670;
t515 = t258 * t669;
t514 = t258 * t668;
t513 = t258 * t667;
t512 = t258 * t666;
t511 = t258 * t665;
t509 = t258 * t604;
t508 = t258 * t602;
t507 = t258 * t600;
t506 = t258 * t595;
t505 = t258 * t593;
t502 = t266 * t638;
t496 = t273 * t706;
t495 = t274 * t706;
t494 = t275 * t706;
t493 = t276 * t706;
t492 = t277 * t706;
t491 = t279 * t706;
t490 = t280 * t706;
t489 = t281 * t706;
t488 = t282 * t706;
t487 = t283 * t706;
t485 = t307 * t634;
t484 = t309 * t633;
t483 = t311 * t632;
t482 = t325 * t627;
t481 = t327 * t626;
t480 = t329 * t625;
t475 = t258 * t761;
t471 = pkin(2) * t568;
t470 = t629 * t337;
t469 = t299 * t268;
t462 = t302 * t560;
t461 = t301 * t559;
t454 = t273 * t517;
t453 = t274 * t517;
t452 = t275 * t517;
t451 = t276 * t517;
t450 = t277 * t517;
t449 = t279 * t517;
t448 = t280 * t517;
t447 = t281 * t517;
t446 = t282 * t517;
t445 = t283 * t517;
t444 = t273 * t509;
t443 = t279 * t509;
t442 = t274 * t508;
t441 = t280 * t508;
t440 = t275 * t507;
t439 = t281 * t507;
t438 = t276 * t506;
t437 = t282 * t506;
t436 = t277 * t505;
t435 = t283 * t505;
t434 = t330 * t504;
t432 = t305 * t477;
t424 = t302 * t469;
t423 = t301 * t468;
t422 = t301 * t467;
t421 = t301 * t466;
t420 = t301 * t465;
t419 = t301 * t464;
t240 = t266 * t555;
t411 = -t258 * t623 + t240;
t241 = t266 * t554;
t410 = -t258 * t621 + t241;
t242 = t266 * t553;
t409 = -t258 * t619 + t242;
t246 = t266 * t552;
t408 = -t258 * t614 + t246;
t247 = t266 * t551;
t407 = -t258 * t612 + t247;
t406 = -t258 * t610 + t248;
t405 = t273 * t463;
t404 = t274 * t463;
t403 = t275 * t463;
t402 = t276 * t463;
t401 = t277 * t463;
t400 = t279 * t463;
t399 = t280 * t463;
t398 = t281 * t463;
t397 = t282 * t463;
t396 = t283 * t463;
t395 = t308 * t461;
t394 = t310 * t461;
t393 = t312 * t461;
t392 = t326 * t461;
t391 = t328 * t461;
t390 = t760 * t569;
t389 = -0.2e1 * t418;
t388 = 0.2e1 * t418;
t386 = t273 * t423;
t385 = t274 * t422;
t384 = t275 * t421;
t383 = t276 * t420;
t382 = t277 * t419;
t381 = t273 * t395;
t380 = t279 * t395;
t379 = t274 * t394;
t378 = t280 * t394;
t377 = t275 * t393;
t376 = t281 * t393;
t375 = t276 * t392;
t374 = t282 * t392;
t373 = t277 * t391;
t372 = t283 * t391;
t371 = t299 * t388;
t370 = t273 * t388;
t369 = t274 * t388;
t368 = t275 * t388;
t367 = t276 * t388;
t366 = t277 * t388;
t365 = t302 * t388;
t364 = -0.2e1 * t279 * t423;
t363 = -0.2e1 * t280 * t422;
t362 = -0.2e1 * t281 * t421;
t361 = -0.2e1 * t282 * t420;
t360 = -0.2e1 * t283 * t419;
t151 = t301 * t754 - t434;
t267 = pkin(2) * t744;
t260 = pkin(2) * t262;
t259 = pkin(3) * t556;
t250 = pkin(3) * t705;
t249 = t262 * t742;
t235 = pkin(3) * t502;
t233 = -t299 * t609 + t303 * t336;
t232 = -t299 * t611 + t303 * t334;
t231 = -t299 * t613 + t303 * t332;
t230 = t303 * t609 + t660;
t229 = t299 * t334 + t303 * t611;
t228 = t299 * t332 + t303 * t613;
t227 = -t299 * t330 + t303 * t606;
t226 = -t299 * t328 + t303 * t607;
t225 = -t299 * t326 + t303 * t608;
t219 = -t299 * t618 + t303 * t318;
t218 = -t299 * t620 + t303 * t316;
t217 = -t299 * t622 + t303 * t314;
t216 = t303 * t618 + t661;
t215 = t303 * t620 + t662;
t214 = t303 * t622 + t663;
t213 = -t299 * t312 + t303 * t615;
t212 = -t299 * t310 + t303 * t616;
t211 = -t299 * t308 + t303 * t617;
t191 = pkin(2) * t628 + t305 * t705;
t189 = t303 * t365;
t185 = t247 + t261;
t184 = t246 + t261;
t183 = -t336 * t462 + t267;
t182 = -t334 * t462 + t267;
t181 = -t332 * t462 + t267;
t180 = t242 + t261;
t179 = t241 + t261;
t178 = t240 + t261;
t177 = -t318 * t462 + t267;
t176 = -t316 * t462 + t267;
t175 = -t314 * t462 + t267;
t168 = t305 * t592 + t336 * t478;
t157 = t286 * t346 + t387 * t289;
t156 = (-t285 * t351 + t288 * t357) * t289 + t286 * t345;
t155 = (-t285 * t350 + t288 * t356) * t289 + t286 * t344;
t154 = (-t285 * t349 + t288 * t355) * t289 + t286 * t343;
t153 = (-t285 * t348 + t288 * t354) * t289 + t286 * t342;
t152 = (-t285 * t347 + t288 * t353) * t289 + t286 * t341;
t150 = t299 * t571 + t487;
t149 = t299 * t573 + t488;
t148 = t299 * t570 - t492;
t147 = t299 * t572 - t493;
t146 = t336 * t504 + t264;
t145 = t299 * t487 + t571;
t144 = t299 * t488 + t573;
t143 = -t299 * t492 + t570;
t142 = -t299 * t493 + t572;
t141 = t299 * t575 + t489;
t140 = t299 * t577 + t490;
t139 = t299 * t579 + t491;
t138 = t299 * t574 - t494;
t137 = t299 * t576 - t495;
t136 = t299 * t578 - t496;
t135 = t299 * t489 + t575;
t134 = t299 * t490 + t577;
t133 = t299 * t491 + t579;
t132 = -t299 * t494 + t574;
t131 = -t299 * t495 + t576;
t130 = -t299 * t496 + t578;
t128 = (t305 * t426 + t589) * t665;
t121 = t233 * t284 + t278 * t628;
t120 = t233 * t278 - t284 * t628;
t119 = t232 * t283 + t277 * t630;
t118 = t232 * t277 - t283 * t630;
t117 = t231 * t282 + t276 * t631;
t116 = t231 * t276 - t282 * t631;
t109 = t219 * t281 + t275 * t635;
t108 = t219 * t275 - t281 * t635;
t107 = t218 * t280 + t274 * t636;
t106 = t218 * t274 - t280 * t636;
t105 = t217 * t279 + t273 * t637;
t104 = t217 * t273 - t279 * t637;
t97 = pkin(2) * t233 + t299 * t486;
t96 = t224 * t560 + t471;
t95 = t223 * t560 + t471;
t94 = t222 * t560 + t471;
t93 = -t158 + t424;
t92 = -t223 * t747 + t424;
t91 = -t222 * t747 + t424;
t90 = t210 * t560 + t471;
t89 = t209 * t560 + t471;
t88 = t208 * t560 + t471;
t87 = -t210 * t747 + t424;
t86 = -t209 * t747 + t424;
t85 = -t208 * t747 + t424;
t82 = -t335 * t517 + t193;
t71 = -t287 * t682 + (t286 * t687 + t676) * t288 + t285 * (-t286 * t692 + t671);
t70 = -t287 * t683 + (t286 * t688 + t677) * t288 + t285 * (-t286 * t693 + t672);
t69 = -t287 * t684 + (t286 * t689 + t678) * t288 + t285 * (-t286 * t694 + t673);
t68 = -t287 * t685 + (t286 * t690 + t679) * t288 + t285 * (-t286 * t695 + t674);
t67 = -t287 * t686 + (t286 * t691 + t680) * t288 + t285 * (-t286 * t696 + t675);
t66 = t146 * t742 + t171 * t639;
t60 = (t224 * t432 + t258 * t233) * t301 + t299 * t365;
t54 = t146 * t743 + (pkin(9) * t192 + t167 * t298) * t301;
t43 = (pkin(3) * t191 + t171 * t629) * t301 - t306 * t455 + t248 * t292 - t186;
t42 = t267 * t329 - t207 + ((t191 * t653 + t302 * t192) * t301 + t300 * t425 * t629) * pkin(9);
t36 = ((-t258 * t224 * t305 + t233 * t477) * t329 + pkin(3) * t97) * t301 - t292 * t158 + t158 + (-t455 - t268) * t664;
t35 = t299 * t470 + (-t233 * t461 + (-t568 * t698 + t97 * t642 + (-t761 * t699 - t263) * t224) * t300) * pkin(9);
t23 = 0.1e1 / ((t207 - (t412 - t592 / 0.2e1) * t652) * t773 + (((t258 * t480 + t250) * t305 + t628 * t748) * t301 + t406 * t292 - t261 - t406) * t335 + ((t266 * t610 + t550) * t659 + t245 * t628) * t741 + (t266 * t480 - t744) * t558 + t183 * t329 + t259);
t22 = 0.1e1 / ((t207 - (t413 - t594 / 0.2e1) * t652) * t774 + (((t258 * t481 + t250) * t305 + t630 * t749) * t301 + t407 * t292 - t261 - t407) * t333 + ((t266 * t612 + t551) * t659 + t244 * t630) * t741 + (t266 * t481 - t744) * t558 + t182 * t327 + t259);
t21 = 0.1e1 / ((t207 - (t414 - t596 / 0.2e1) * t652) * t775 + (((t258 * t482 + t250) * t305 + t631 * t750) * t301 + t408 * t292 - t261 - t408) * t331 + ((t266 * t614 + t552) * t659 + t243 * t631) * t741 + (t266 * t482 - t744) * t558 + t181 * t325 + t259);
t20 = 0.1e1 / ((t207 - (t415 - t601 / 0.2e1) * t652) * t776 + (((t258 * t483 + t250) * t305 + t635 * t751) * t301 + t409 * t292 - t261 - t409) * t317 + ((t266 * t619 + t553) * t659 + t239 * t635) * t741 + (t266 * t483 - t744) * t558 + t177 * t311 + t259);
t19 = 0.1e1 / ((t207 - (t416 - t603 / 0.2e1) * t652) * t777 + (((t258 * t484 + t250) * t305 + t636 * t752) * t301 + t410 * t292 - t261 - t410) * t315 + ((t266 * t621 + t554) * t659 + t238 * t636) * t741 + (t266 * t484 - t744) * t558 + t176 * t309 + t259);
t18 = 0.1e1 / ((t207 - (t417 - t605 / 0.2e1) * t652) * t778 + (((t258 * t485 + t250) * t305 + t637 * t753) * t301 + t411 * t292 - t261 - t411) * t313 + ((t266 * t623 + t555) * t659 + t237 * t637) * t741 + (t266 * t485 - t744) * t558 + t175 * t307 + t259);
t12 = (t278 * t78 + t60 * t284) * t298 + (t43 * t278 + t36 * t284) * t335 + t35 * t284 + t278 * t42;
t11 = (t60 * t278 - t78 * t284) * t298 + (t36 * t278 - t43 * t284) * t335 + t35 * t278 - t42 * t284;
t10 = (-t542 + (t299 * t366 - t435) * t297 + ((-t299 * t450 + t360) * t327 - t277 * t469 - t143 * t745) * t333 + (-t143 * t557 + t277 * t587) * t327 - (t299 * t401 - t372) * pkin(9)) * t302 + (-t299 * t547 + (t283 * t389 - t299 * t436) * t297 + ((t382 * t772 + t445) * t327 + t283 * t268 - t150 * t745) * t333 + (-t150 * t557 - t283 * t337) * t327 + (t299 * t373 + t396) * pkin(9)) * t306 + t277 * t725;
t9 = (-t543 + (t299 * t367 - t437) * t296 + ((-t299 * t451 + t361) * t325 - t276 * t469 - t142 * t745) * t331 + (-t142 * t557 + t276 * t587) * t325 - (t299 * t402 - t374) * pkin(9)) * t302 + (-t299 * t548 + (t282 * t389 - t299 * t438) * t296 + ((t383 * t772 + t446) * t325 + t282 * t268 - t149 * t745) * t331 + (-t149 * t557 - t282 * t337) * t325 + (t299 * t375 + t397) * pkin(9)) * t306 + t276 * t726;
t8 = (t547 + (t283 * t371 + t436) * t297 + ((-t299 * t445 + 0.2e1 * t382) * t327 - t283 * t469 + t145 * t745) * t333 + (t145 * t557 + t283 * t587) * t327 - (t299 * t396 + t373) * pkin(9)) * t302 + (-t299 * t542 + (-t299 * t435 + t366) * t297 + ((t299 * t360 - t450) * t327 - t277 * t268 - t148 * t745) * t333 + (-t148 * t557 + t277 * t337) * t327 - (-t299 * t372 + t401) * pkin(9)) * t306 + t283 * t725;
t7 = (t548 + (t282 * t371 + t438) * t296 + ((-t299 * t446 + 0.2e1 * t383) * t325 - t282 * t469 + t144 * t745) * t331 + (t144 * t557 + t282 * t587) * t325 - (t299 * t397 + t375) * pkin(9)) * t302 + (-t299 * t543 + (-t299 * t437 + t367) * t296 + ((t299 * t361 - t451) * t325 - t276 * t268 - t147 * t745) * t331 + (-t147 * t557 + t276 * t337) * t325 - (-t299 * t374 + t402) * pkin(9)) * t306 + t282 * t726;
t6 = (-t281 * t722 + (t299 * t368 - t439) * t295 + ((-t299 * t452 + t362) * t311 - t275 * t469 - t132 * t745) * t317 + (-t132 * t557 + t275 * t587) * t311 - pkin(9) * (t299 * t403 - t376)) * t302 + (-t275 * t544 + (t281 * t389 - t299 * t440) * t295 + ((t384 * t772 + t447) * t311 + t281 * t268 - t141 * t745) * t317 + (-t141 * t557 - t281 * t337) * t311 + pkin(9) * (t299 * t377 + t398)) * t306 + t275 * t727;
t5 = (-t280 * t723 + (t299 * t369 - t441) * t294 + ((-t299 * t453 + t363) * t309 - t274 * t469 - t131 * t745) * t315 + (-t131 * t557 + t274 * t587) * t309 - pkin(9) * (t299 * t404 - t378)) * t302 + (-t274 * t545 + (t280 * t389 - t299 * t442) * t294 + ((t385 * t772 + t448) * t309 + t280 * t268 - t140 * t745) * t315 + (-t140 * t557 - t280 * t337) * t309 + pkin(9) * (t299 * t379 + t399)) * t306 + t274 * t728;
t4 = (-t279 * t724 + (t299 * t370 - t443) * t293 + ((-t299 * t454 + t364) * t307 - t273 * t469 - t130 * t745) * t313 + (-t130 * t557 + t273 * t587) * t307 - pkin(9) * (t299 * t405 - t380)) * t302 + (-t273 * t546 + (t279 * t389 - t299 * t444) * t293 + ((t386 * t772 + t449) * t307 + t279 * t268 - t139 * t745) * t313 + (-t139 * t557 - t279 * t337) * t307 + pkin(9) * (t299 * t381 + t400)) * t306 + t273 * t729;
t3 = (t275 * t722 + (t281 * t371 + t440) * t295 + ((-t299 * t447 + 0.2e1 * t384) * t311 - t281 * t469 + t135 * t745) * t317 + (t135 * t557 + t281 * t587) * t311 - (t299 * t398 + t377) * pkin(9)) * t302 + (-t281 * t544 + (-t299 * t439 + t368) * t295 + ((t299 * t362 - t452) * t311 - t275 * t268 - t138 * t745) * t317 + (-t138 * t557 + t275 * t337) * t311 - (-t299 * t376 + t403) * pkin(9)) * t306 + t281 * t727;
t2 = (t274 * t723 + (t280 * t371 + t442) * t294 + ((-t299 * t448 + 0.2e1 * t385) * t309 - t280 * t469 + t134 * t745) * t315 + (t134 * t557 + t280 * t587) * t309 - (t299 * t399 + t379) * pkin(9)) * t302 + (-t280 * t545 + (-t299 * t441 + t369) * t294 + ((t299 * t363 - t453) * t309 - t274 * t268 - t137 * t745) * t315 + (-t137 * t557 + t274 * t337) * t309 - (-t299 * t378 + t404) * pkin(9)) * t306 + t280 * t728;
t1 = (t273 * t724 + (t279 * t371 + t444) * t293 + ((-t299 * t449 + 0.2e1 * t386) * t307 - t279 * t469 + t133 * t745) * t313 + (t133 * t557 + t279 * t587) * t307 - (t299 * t400 + t381) * pkin(9)) * t302 + (-t279 * t546 + (-t299 * t443 + t370) * t293 + ((t299 * t364 - t454) * t307 - t273 * t268 - t136 * t745) * t313 + (-t136 * t557 + t273 * t337) * t307 - (-t299 * t380 + t405) * pkin(9)) * t306 + t279 * t729;
t13 = [(t121 * t511 + (((-t115 * t707 + t206 * t747) * t305 + t121 * t748) * t301 + (-t115 * t747 - t518) * t292 + t518 - t93 * t284 - t186 * t278) * t335 + (t183 * t278 + t96 * t284) * t329 + (t121 * t713 + ((-t115 * t292 + t206 * t651) * t699 + ((t206 * t698 + t530) * t773 - t530 - t206 * t292 + t206) * pkin(3)) * t300) * pkin(9)) * t23, (-t120 * t511 + (((t114 * t707 + t200 * t747) * t305 - t120 * t748) * t301 + (t114 * t747 - t524) * t292 + t524 + t93 * t278 - t284 * t186) * t335 + (t183 * t284 - t96 * t278) * t329 + (-t120 * t713 + ((t114 * t292 + t200 * t651) * t699 + ((t200 * t698 - t531) * t773 + t531 - t200 * t292 + t200) * pkin(3)) * t300) * pkin(9)) * t23, (((t227 * t432 - t258 * t230) * t301 + t189) * t298 + ((-t227 * t707 + t235) * t651 + (-t230 * t257 * t301 - t227 * t770) * pkin(3) + (-t329 * t475 - t268) * t638) * t335 - ((pkin(3) * t227 - t329 * t502) * t659 + t230 * t245) * t741 - (t227 * t699 + t262) * t558 + (t227 * t560 + t260) * t329 + t249) * t23, -t11 * t735 - ((t290 * t352 + t358 * t697) * t288 + (t290 * t358 - t352 * t697) * t285 - t287 * t681) * (((-t82 * t302 + t66 * t306) * t303 + (t151 * t742 - t168 * t639) * t299) * t329 + (t54 * t306 + t302 * (-t390 * t742 - t719)) * t303 + t299 * (t128 + t151 * t743 - (t300 * t561 + t336 * t779) * t741)) / ((t302 * t66 + t82 * t306) * t329 + (t760 * t418 + t719) * t306 + t302 * t54), -t12 * t735 + ((t167 * t306 * t665 + (t171 * t610 * t301 + t769 * pkin(3) + t302 * t455) * t335 - t470) * t303 + t299 * (t128 + ((pkin(3) * t754 - t168 * t329) * t301 - pkin(3) * t434) * t335) + ((t192 * t624 - t660 * t779) * t301 + (-t299 * t301 * t561 + (t299 * t151 + t769 * t303) * t329 + (pkin(2) * t335 - t390) * t638) * t300) * pkin(9)) * t157 * t24, (-(t129 * t287 + t290 * t234) * t12 - t157 * t11) * t24; (t119 * t512 + (((-t113 * t708 + t205 * t747) * t305 + t119 * t749) * t301 + (-t113 * t747 - t519) * t292 + t519 - t92 * t283 - t185 * t277) * t333 + (t182 * t277 + t95 * t283) * t327 + (t119 * t714 + ((-t113 * t292 + t205 * t651) * t700 + ((t205 * t698 + t532) * t774 - t532 - t205 * t292 + t205) * pkin(3)) * t300) * pkin(9)) * t22, (-t118 * t512 + (((t112 * t708 + t199 * t747) * t305 - t118 * t749) * t301 + (t112 * t747 - t525) * t292 + t525 + t92 * t277 - t283 * t185) * t333 + (t182 * t283 - t95 * t277) * t327 + (-t118 * t714 + ((t112 * t292 + t199 * t651) * t700 + ((t199 * t698 - t533) * t774 + t533 - t199 * t292 + t199) * pkin(3)) * t300) * pkin(9)) * t22, (((t226 * t432 - t258 * t229) * t301 + t189) * t297 + ((-t226 * t708 + t235) * t651 + (-t229 * t256 * t301 - t226 * t770) * pkin(3) + (-t327 * t475 - t268) * t638) * t333 - ((pkin(3) * t226 - t327 * t502) * t659 + t229 * t244) * t741 - (t226 * t700 + t262) * t558 + (t226 * t560 + t260) * t327 + t249) * t22, -t10 * t730 - t71 * t736, t156 * t736 - t8 * t730, (-t10 * t156 - t71 * t8) * t34; (t117 * t513 + (((-t111 * t709 + t204 * t747) * t305 + t117 * t750) * t301 + (-t111 * t747 - t520) * t292 + t520 - t91 * t282 - t184 * t276) * t331 + (t181 * t276 + t94 * t282) * t325 + (t117 * t715 + ((-t111 * t292 + t204 * t651) * t701 + ((t204 * t698 + t534) * t775 - t534 - t204 * t292 + t204) * pkin(3)) * t300) * pkin(9)) * t21, (-t116 * t513 + (((t110 * t709 + t198 * t747) * t305 - t116 * t750) * t301 + (t110 * t747 - t526) * t292 + t526 + t91 * t276 - t282 * t184) * t331 + (t181 * t282 - t94 * t276) * t325 + (-t116 * t715 + ((t110 * t292 + t198 * t651) * t701 + ((t198 * t698 - t535) * t775 + t535 - t198 * t292 + t198) * pkin(3)) * t300) * pkin(9)) * t21, (((t225 * t432 - t258 * t228) * t301 + t189) * t296 + ((-t225 * t709 + t235) * t651 + (-t228 * t255 * t301 - t225 * t770) * pkin(3) + (-t325 * t475 - t268) * t638) * t331 - ((pkin(3) * t225 - t325 * t502) * t659 + t228 * t243) * t741 - (t225 * t701 + t262) * t558 + (t225 * t560 + t260) * t325 + t249) * t21, -t70 * t737 - t9 * t731, t155 * t737 - t7 * t731, (-t155 * t9 - t7 * t70) * t33; (t109 * t514 + (((-t103 * t710 + t203 * t747) * t305 + t109 * t751) * t301 + (-t103 * t747 - t521) * t292 + t521 - t87 * t281 - t180 * t275) * t317 + (t177 * t275 + t90 * t281) * t311 + (t109 * t716 + ((-t103 * t292 + t203 * t651) * t702 + ((t203 * t698 + t536) * t776 - t536 - t203 * t292 + t203) * pkin(3)) * t300) * pkin(9)) * t20, (-t108 * t514 + (((t102 * t710 + t197 * t747) * t305 - t108 * t751) * t301 + (t102 * t747 - t527) * t292 + t527 + t87 * t275 - t281 * t180) * t317 + (t177 * t281 - t90 * t275) * t311 + (-t108 * t716 + ((t102 * t292 + t197 * t651) * t702 + ((t197 * t698 - t537) * t776 + t537 - t197 * t292 + t197) * pkin(3)) * t300) * pkin(9)) * t20, (((t213 * t432 - t258 * t216) * t301 + t189) * t295 + ((-t213 * t710 + t235) * t651 + (-t216 * t254 * t301 - t213 * t770) * pkin(3) + (-t311 * t475 - t268) * t638) * t317 - ((pkin(3) * t213 - t311 * t502) * t659 + t216 * t239) * t741 - (t213 * t702 + t262) * t558 + (t213 * t560 + t260) * t311 + t249) * t20, -t6 * t732 - t69 * t738, t154 * t738 - t3 * t732, (-t154 * t6 - t3 * t69) * t32; (t107 * t515 + (((-t101 * t711 + t202 * t747) * t305 + t107 * t752) * t301 + (-t101 * t747 - t522) * t292 + t522 - t86 * t280 - t179 * t274) * t315 + (t176 * t274 + t89 * t280) * t309 + (t107 * t717 + ((-t101 * t292 + t202 * t651) * t703 + ((t202 * t698 + t538) * t777 - t538 - t202 * t292 + t202) * pkin(3)) * t300) * pkin(9)) * t19, (-t106 * t515 + (((t100 * t711 + t196 * t747) * t305 - t106 * t752) * t301 + (t100 * t747 - t528) * t292 + t528 + t86 * t274 - t280 * t179) * t315 + (t176 * t280 - t89 * t274) * t309 + (-t106 * t717 + ((t100 * t292 + t196 * t651) * t703 + ((t196 * t698 - t539) * t777 + t539 - t196 * t292 + t196) * pkin(3)) * t300) * pkin(9)) * t19, (((t212 * t432 - t258 * t215) * t301 + t189) * t294 + ((-t212 * t711 + t235) * t651 + (-t215 * t253 * t301 - t212 * t770) * pkin(3) + (-t309 * t475 - t268) * t638) * t315 - ((pkin(3) * t212 - t309 * t502) * t659 + t215 * t238) * t741 - (t212 * t703 + t262) * t558 + (t212 * t560 + t260) * t309 + t249) * t19, -t5 * t733 - t68 * t739, t153 * t739 - t2 * t733, (-t153 * t5 - t2 * t68) * t31; (t105 * t516 + (((t201 * t747 - t99 * t712) * t305 + t105 * t753) * t301 + (-t99 * t747 - t523) * t292 + t523 - t85 * t279 - t178 * t273) * t313 + (t175 * t273 + t88 * t279) * t307 + (t105 * t718 + ((t201 * t651 - t292 * t99) * t704 + ((t201 * t698 + t540) * t778 - t540 - t201 * t292 + t201) * pkin(3)) * t300) * pkin(9)) * t18, (-t104 * t516 + (((t195 * t747 + t98 * t712) * t305 - t104 * t753) * t301 + (t98 * t747 - t529) * t292 + t529 + t85 * t273 - t279 * t178) * t313 + (t175 * t279 - t88 * t273) * t307 + (-t104 * t718 + ((t195 * t651 + t292 * t98) * t704 + ((t195 * t698 - t541) * t778 + t541 - t195 * t292 + t195) * pkin(3)) * t300) * pkin(9)) * t18, (((t211 * t432 - t258 * t214) * t301 + t189) * t293 + ((-t211 * t712 + t235) * t651 + (-t214 * t252 * t301 - t211 * t770) * pkin(3) + (-t307 * t475 - t268) * t638) * t313 - ((pkin(3) * t211 - t307 * t502) * t659 + t214 * t237) * t741 - (t211 * t704 + t262) * t558 + (t211 * t560 + t260) * t307 + t249) * t18, -t4 * t734 - t67 * t740, -t1 * t734 + t152 * t740, (-t1 * t67 - t152 * t4) * t30;];
Jinv  = t13;
