% Calculate Gravitation load for parallel robot
% P6RRPRRR14V2G1A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d1,d2,d4,theta3]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
%
% Output:
% taugX [6x1]
%   forces required to compensate gravitation load
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 22:59
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2(xP, qJ, g, legFrame, ...
  koppelP, pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(10,1),zeros(3+1,1),zeros(3+1,3)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: pkin has to be [10x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: g has to be [3x1] (double)');
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V2G1A0_gravload_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From gravvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-10 18:21:40
% EndTime: 2020-03-10 18:21:43
% DurationCPUTime: 2.89s
% Computational Cost: add. (24107->2221), mult. (55272->4060), div. (162->30), fcn. (42215->50), ass. (0->1126)
unknown=NaN(6,1);
t1 = cos(pkin(6));
t2 = t1 * pkin(9);
t3 = t2 + qJ(3,1);
t4 = cos(qJ(1,1));
t5 = sin(legFrame(1,3));
t7 = sin(qJ(1,1));
t8 = cos(legFrame(1,3));
t10 = t5 * t4 + t8 * t7;
t11 = t10 * t3;
t12 = sin(pkin(4));
t13 = t12 * t11;
t14 = cos(pkin(10));
t15 = sin(pkin(6));
t16 = t15 * t14;
t17 = pkin(9) * t16;
t18 = sin(pkin(10));
t19 = pkin(3) * t18;
t20 = t17 - t19;
t23 = t4 * t8 - t7 * t5;
t24 = sin(qJ(2,1));
t26 = cos(pkin(4));
t27 = cos(qJ(2,1));
t28 = t27 * t26;
t33 = cos(pkin(5));
t34 = t33 ^ 2;
t36 = sin(pkin(5));
t37 = t36 * t20;
t38 = t12 * t10;
t40 = t18 * t15;
t41 = pkin(9) * t40;
t43 = pkin(3) * t14 + pkin(2) + t41;
t44 = t10 * t43;
t45 = t26 * t44;
t46 = t3 * t36;
t47 = t23 * t46;
t50 = t26 * t10;
t52 = t23 * t43;
t57 = t34 * (-t13 - (t10 * t28 + t24 * t23) * t20) + t33 * (t38 * t37 + t24 * (t45 - t47) - t27 * (t50 * t46 + t52)) + t13;
t58 = t26 * pkin(1);
t59 = t27 * t20;
t61 = t20 * pkin(8);
t63 = t3 * pkin(1);
t65 = t12 * (-t24 * t61 + t63);
t67 = t34 * (t59 * t58 + t65);
t68 = t43 * pkin(8);
t70 = pkin(8) * t36;
t71 = t17 + t70 - t19;
t73 = t24 * t3 * t71;
t74 = t36 * pkin(1);
t75 = t20 * t74;
t77 = t12 * (-t27 * t68 - t73 - t75);
t79 = t27 * t46;
t86 = t24 * t46;
t89 = t3 * t12 * (t27 * t43 + pkin(1) + t86);
t91 = 0.1e1 / (t67 + t33 * (t77 + pkin(1) * t26 * (-t24 * t43 + t79)) - t89);
t95 = mrSges(3,1) * t18 + mrSges(3,2) * t14;
t96 = t33 * t95;
t98 = -m(3) * qJ(3,1) - mrSges(3,3);
t100 = t36 * t98 + mrSges(2,2) + t96;
t105 = -m(3) * pkin(2) - t14 * mrSges(3,1) + t18 * mrSges(3,2) - mrSges(2,1);
t107 = t27 * t100 - t105 * t24;
t110 = g(1) * t8 + g(2) * t5;
t115 = -g(1) * t5 + g(2) * t8;
t121 = t36 * t95;
t122 = m(2) * pkin(8);
t123 = pkin(8) * m(3);
t124 = -t33 * t98 + mrSges(2,3) + t121 + t122 + t123;
t130 = m(2) * pkin(1) + m(3) * pkin(1) + mrSges(1,1);
t146 = t4 * (t24 * t100 * t115 + t27 * t105 * t115 + t26 * t110 * t107 - t12 * t110 * t124 + t110 * mrSges(1,2) - t130 * t115) + t7 * (-t24 * t110 * t100 - t27 * t105 * t110 + t26 * t115 * t107 - t12 * t115 * t124 + mrSges(1,2) * t115 + t110 * t130);
t148 = t12 * t26;
t149 = t27 ^ 2;
t152 = t3 * t24;
t153 = t12 * t23;
t155 = t20 * t10;
t156 = t26 ^ 2;
t157 = t156 - 0.1e1 / 0.2e1;
t162 = t20 * t24;
t168 = t36 * t148;
t171 = t24 * t36;
t172 = t23 * t20;
t178 = t26 * t52;
t179 = t10 * t46;
t182 = t37 - pkin(8);
t185 = t24 * t43;
t187 = t86 + pkin(1);
t194 = t43 * t36;
t200 = t74 + t152;
t204 = t26 - 0.1e1;
t205 = t26 + 0.1e1;
t206 = t205 * t204;
t207 = t17 - t70 - t19;
t212 = t34 * (t149 * t11 * t148 + t27 * (t153 * t152 + 0.2e1 * t157 * t155) + t26 * (t23 * t162 + t13)) + t33 * (-t149 * t155 * t168 + t27 * (0.2e1 * t156 * t10 * t46 - t12 * t172 * t171 + t178 - t179) + t26 * (-t12 * t10 * t182 - t50 * t185 + t187 * t23)) - t27 * (t27 * (t26 * t11 + t23 * t194) * t12 + t12 * (-t45 * t171 + t23 * t200) + t10 * t207 * t206);
t213 = t3 * t26;
t215 = pkin(8) * t12;
t216 = t43 * t215;
t217 = t213 * t74 - t216;
t221 = t20 * pkin(1);
t227 = t24 * pkin(1);
t228 = t26 * t43;
t229 = t228 * t227;
t233 = 0.1e1 / (t67 + t33 * (t27 * t217 + t12 * (t36 * (-t24 * t3 * pkin(8) - t221) - t3 * t162) - t229) - t89);
t237 = t110 * t7 - t4 * t115;
t238 = -t33 * t95;
t240 = -t36 * t98 - mrSges(2,2) + t238;
t247 = t12 * g(3);
t257 = -t105 * t247;
t260 = t24 * (-t4 * t105 * t110 - t7 * t105 * t115 + t26 * t240 * t237 - t240 * t247) - (t26 * t105 * t237 + t4 * t110 * t240 + t7 * t240 * t115 + t257) * t27;
t262 = t1 ^ 2;
t263 = pkin(9) ^ 2;
t264 = t263 * t262;
t265 = pkin(3) ^ 2;
t266 = t264 + t265 - t263;
t267 = t14 ^ 2;
t268 = t267 * t266;
t269 = pkin(9) * pkin(3);
t272 = 0.2e1 * t14 * t269 * t40;
t273 = t2 - pkin(3) + qJ(3,1);
t274 = t2 + pkin(3) + qJ(3,1);
t275 = t274 * t273;
t276 = t268 + t272 + t275;
t279 = t15 * t26;
t280 = pkin(3) * t279;
t282 = t267 * t10 * pkin(9);
t285 = t15 * t36;
t292 = t18 * (-t265 + t263);
t293 = t15 * pkin(2);
t294 = pkin(9) * t293;
t295 = -t262 * t263 * t18 + t292 + t294;
t296 = t295 * t7;
t298 = -t4 * t3 * pkin(9) * t285 + t26 * t296;
t300 = t26 * t295;
t302 = t36 * t7;
t303 = pkin(9) * t15;
t306 = t3 * t303 * t302 + t4 * t300;
t311 = t18 * t36;
t312 = t4 * t3;
t314 = t26 * t7;
t316 = t18 * pkin(2) + t303;
t318 = -t312 * t311 + t316 * t314;
t320 = t316 * t26;
t324 = t3 * t18 * t302 + t4 * t320;
t332 = t267 * t23 * t266;
t333 = t41 + pkin(2);
t336 = t46 * t314 + t4 * t333;
t338 = t36 * t26;
t340 = t333 * t7;
t341 = t312 * t338 - t340;
t349 = 0.2e1 * pkin(9) * t18 * t293;
t350 = 0.2e1 * t264;
t352 = 0.2e1 * qJ(3,1) * t2;
t353 = pkin(2) ^ 2;
t354 = qJ(3,1) ^ 2;
t355 = t349 - t350 - t352 + t353 + t263 - t354;
t360 = 0.2e1 * t333 * t46 * t314 + t4 * t355;
t364 = t4 * t333 * t3 * t338;
t365 = t355 * t7;
t372 = t276 * t10;
t373 = t26 * t24;
t376 = t15 * t24;
t377 = pkin(3) * t376;
t379 = t267 * t23 * pkin(9);
t384 = t7 * t3;
t385 = pkin(9) * t285;
t387 = pkin(3) * t12;
t388 = t387 / 0.2e1;
t389 = t385 * t373 + t388;
t391 = t4 * t24 * t295 + t389 * t384;
t396 = t4 * t389 * t3 - t24 * t296;
t404 = pkin(3) * t311;
t407 = t333 * t12 / 0.2e1;
t408 = t404 * t373 - t407;
t410 = -t4 * t316 * pkin(3) * t24 - t408 * t384;
t414 = t24 * t7;
t415 = t316 * pkin(3);
t417 = t4 * t408 * t3 - t415 * t414;
t422 = t266 * t26;
t424 = t36 * t12;
t425 = pkin(3) * t15;
t428 = 0.2e1 * pkin(9) * t425 * t424;
t429 = t24 * t422 + t428;
t433 = 0.2e1 * t86 + pkin(1);
t436 = pkin(3) * t26;
t438 = t24 * t333 * t436;
t442 = pkin(3) * pkin(8);
t444 = (-t264 * t311 + t36 * (t292 + t294) - t442) * t12;
t445 = t444 / 0.2e1;
t449 = t4 * pkin(3) * t433 - 0.2e1 * (t438 + t445) * t7;
t456 = t4 * (0.2e1 * t438 + t444) + pkin(3) * t433 * t7;
t464 = t36 * t415;
t465 = t333 * pkin(8);
t467 = (t464 + t465) * t12;
t468 = t24 * t355 * t26 - t467;
t470 = t4 * t433 * t333 - t468 * t7;
t474 = t433 * t340 + t4 * t468;
t482 = -pkin(3) * t18 * t4 + t3 * t12 * t414;
t484 = t12 * t24;
t486 = t18 * t7;
t488 = pkin(3) * t486 + t312 * t484;
t499 = 0.2e1 * t3 * t19 * t12 * t414;
t505 = t4 * t3 * pkin(3) * t18 * t484;
t507 = t274 * t273 * t7;
t517 = 0.2e1 * t269 * t279;
t518 = t24 * t266 * t424 - t517;
t522 = t227 + 0.2e1 * t46;
t527 = t404 + pkin(8) / 0.2e1;
t528 = t12 * t527;
t530 = t24 * t303 * t528;
t531 = t300 / 0.2e1;
t535 = t4 * pkin(9) * t522 * t15 + 0.2e1 * (t530 - t531) * t7;
t543 = t4 * (-0.2e1 * t530 + t300) + pkin(9) * t522 * t15 * t7;
t551 = t263 * t36 * t262;
t552 = pkin(9) * t36;
t558 = pkin(8) * t19;
t562 = t316 * t436;
t563 = t24 * t12 * (t551 + 0.2e1 * t1 * qJ(3,1) * t552 + t36 * (-t265 + t354) - t558) + t562;
t565 = -t4 * pkin(3) * t522 * t18 + t563 * t7;
t569 = pkin(3) * t522 * t486;
t575 = pkin(3) * t338;
t576 = t303 * t484 + t575;
t579 = t24 * t74;
t580 = t579 + t2 + qJ(3,1);
t583 = (t70 + t19) * t12;
t585 = t333 * t338;
t586 = t24 * t583 - t585;
t588 = t4 * t580 + t586 * t7;
t592 = -t4 * t586 + t580 * t7;
t596 = t149 * (t34 * t23 * t276 + t33 * (0.4e1 * t282 * t280 + t14 * (0.2e1 * t8 * t298 + 0.2e1 * t306 * t5) - 0.2e1 * pkin(3) * (t8 * t318 + t324 * t5)) + t332 + 0.2e1 * t14 * pkin(3) * (t8 * t336 + t341 * t5) + t8 * t360 + 0.2e1 * (t364 - t365 / 0.2e1) * t5) + t27 * (-t34 * t373 * t372 + t33 * (0.4e1 * t379 * t377 + t14 * (0.2e1 * t8 * t391 + 0.2e1 * t396 * t5) + 0.2e1 * t8 * t410 - 0.2e1 * t5 * t417) - t267 * t10 * t429 + t14 * (t8 * t449 - t456 * t5) + t8 * t470 - t474 * t5) + t34 * (-t332 + 0.2e1 * t14 * (t8 * t482 + t488 * t5) * t303 + t8 * (t4 * (-t264 - t352 + t265 - t354) - t499) - 0.2e1 * (t505 - t507 / 0.2e1) * t5) + t33 * (t267 * t518 * t10 + t14 * (-t543 * t5 + t8 * t535) + t8 * t565 + (t4 * t563 + t569) * t5) + (-t14 * t10 * t576 - t592 * t5 + t8 * t588) * t3;
t599 = t34 * t20 * t58;
t601 = t14 * pkin(8) * t387;
t604 = pkin(9) * t36 * t1 * t58;
t605 = qJ(3,1) * t36;
t607 = t333 * t215;
t610 = t43 * t12;
t611 = t3 * t610;
t615 = t14 * pkin(9) * pkin(8);
t624 = t263 * t15 * t12 * t1;
t625 = t15 * t12;
t628 = pkin(3) * t58;
t631 = t12 * pkin(1);
t632 = t385 * t631;
t638 = t1 * (t70 - t19) * pkin(9) * t12;
t641 = t26 * t333 * pkin(1);
t642 = t18 * t12;
t647 = t404 * t631;
t651 = t3 * t12 * t187;
t653 = 0.1e1 / (t27 * (t599 + t33 * (t605 * t58 - t601 + t604 - t607) - t611) + t34 * (t442 * t18 * t24 - t615 * t376 + t63) * t12 + t33 * (t14 * (t24 * (-pkin(9) * qJ(3,1) * t625 - t624 - t628) - t632) + t24 * (pkin(3) * qJ(3,1) * t642 - t605 * t215 - t638 - t641) + t647) - t651);
t665 = t26 * g(3);
t669 = t36 * (t26 * t237 * t27 - g(3) * t12 * t27 + (t4 * t110 + t115 * t7) * t24) + t33 * (t237 * t12 + t665);
t670 = t669 * m(3) * t653;
t672 = t2 + qJ(3,2);
t673 = cos(qJ(1,2));
t674 = sin(legFrame(2,3));
t676 = sin(qJ(1,2));
t677 = cos(legFrame(2,3));
t679 = t674 * t673 + t677 * t676;
t680 = t679 * t672;
t681 = t12 * t680;
t684 = t673 * t677 - t676 * t674;
t685 = sin(qJ(2,2));
t687 = cos(qJ(2,2));
t688 = t687 * t26;
t694 = t12 * t679;
t696 = t679 * t43;
t697 = t26 * t696;
t698 = t672 * t36;
t699 = t684 * t698;
t702 = t26 * t679;
t704 = t684 * t43;
t709 = t34 * (-t681 - (t679 * t688 + t685 * t684) * t20) + t33 * (t694 * t37 + t685 * (t697 - t699) - t687 * (t702 * t698 + t704)) + t681;
t710 = t687 * t20;
t713 = t672 * pkin(1);
t715 = t12 * (-t685 * t61 + t713);
t717 = t34 * (t710 * t58 + t715);
t720 = t685 * t672 * t71;
t722 = t12 * (-t687 * t68 - t720 - t75);
t724 = t687 * t698;
t731 = t685 * t698;
t734 = t672 * t12 * (t687 * t43 + pkin(1) + t731);
t736 = 0.1e1 / (t717 + t33 * (t722 + pkin(1) * t26 * (-t685 * t43 + t724)) - t734);
t739 = -m(3) * qJ(3,2) - mrSges(3,3);
t741 = t36 * t739 + mrSges(2,2) + t96;
t744 = -t105 * t685 + t687 * t741;
t747 = g(1) * t677 + g(2) * t674;
t752 = -g(1) * t674 + g(2) * t677;
t758 = -t33 * t739 + mrSges(2,3) + t121 + t122 + t123;
t777 = t673 * (t687 * t105 * t752 - t12 * t747 * t758 + t26 * t747 * t744 + t685 * t741 * t752 + t747 * mrSges(1,2) - t130 * t752) + t676 * (-t687 * t105 * t747 - t12 * t752 * t758 + t26 * t752 * t744 - t685 * t747 * t741 + mrSges(1,2) * t752 + t747 * t130);
t779 = t687 ^ 2;
t782 = t672 * t685;
t783 = t12 * t684;
t785 = t20 * t679;
t790 = t20 * t685;
t798 = t685 * t36;
t799 = t684 * t20;
t805 = t26 * t704;
t806 = t679 * t698;
t811 = t685 * t43;
t813 = t731 + pkin(1);
t825 = t74 + t782;
t833 = t34 * (t779 * t680 * t148 + t687 * (0.2e1 * t157 * t785 + t783 * t782) + t26 * (t684 * t790 + t681)) + t33 * (-t779 * t785 * t168 + t687 * (-t12 * t799 * t798 + 0.2e1 * t156 * t679 * t698 + t805 - t806) + t26 * (-t12 * t679 * t182 + t813 * t684 - t702 * t811)) - t687 * (t687 * (t684 * t194 + t26 * t680) * t12 + t12 * (t684 * t825 - t697 * t798) + t679 * t207 * t206);
t834 = t672 * t26;
t836 = t834 * t74 - t216;
t845 = t685 * pkin(1);
t846 = t228 * t845;
t850 = 0.1e1 / (t717 + t33 * (t687 * t836 + t12 * (t36 * (-t685 * t672 * pkin(8) - t221) - t672 * t790) - t846) - t734);
t854 = -t673 * t752 + t747 * t676;
t856 = -t36 * t739 - mrSges(2,2) + t238;
t874 = t685 * (-t673 * t105 * t747 - t676 * t105 * t752 + t26 * t856 * t854 - t856 * t247) - (t26 * t105 * t854 + t673 * t747 * t856 + t676 * t856 * t752 + t257) * t687;
t876 = t2 - pkin(3) + qJ(3,2);
t877 = t2 + pkin(3) + qJ(3,2);
t878 = t877 * t876;
t879 = t268 + t272 + t878;
t883 = t267 * t679 * pkin(9);
t889 = t295 * t676;
t891 = -t673 * t672 * pkin(9) * t285 + t26 * t889;
t894 = t36 * t676;
t897 = t672 * t303 * t894 + t673 * t300;
t902 = t673 * t672;
t904 = t26 * t676;
t906 = -t902 * t311 + t316 * t904;
t911 = t672 * t18 * t894 + t673 * t320;
t919 = t267 * t684 * t266;
t922 = t673 * t333 + t698 * t904;
t925 = t333 * t676;
t926 = t902 * t338 - t925;
t933 = 0.2e1 * qJ(3,2) * t2;
t934 = qJ(3,2) ^ 2;
t935 = t349 - t350 - t933 + t353 + t263 - t934;
t940 = 0.2e1 * t333 * t698 * t904 + t673 * t935;
t944 = t673 * t333 * t672 * t338;
t945 = t935 * t676;
t952 = t879 * t679;
t953 = t26 * t685;
t956 = t15 * t685;
t957 = pkin(3) * t956;
t959 = t267 * t684 * pkin(9);
t964 = t676 * t672;
t966 = t385 * t953 + t388;
t968 = t673 * t685 * t295 + t966 * t964;
t973 = t673 * t966 * t672 - t685 * t889;
t982 = t404 * t953 - t407;
t984 = -t673 * t316 * pkin(3) * t685 - t982 * t964;
t988 = t685 * t676;
t990 = t673 * t982 * t672 - t415 * t988;
t996 = t685 * t422 + t428;
t1000 = 0.2e1 * t731 + pkin(1);
t1004 = t685 * t333 * t436;
t1008 = t673 * pkin(3) * t1000 - 0.2e1 * (t1004 + t445) * t676;
t1015 = t673 * (0.2e1 * t1004 + t444) + pkin(3) * t1000 * t676;
t1023 = t685 * t935 * t26 - t467;
t1025 = t673 * t1000 * t333 - t1023 * t676;
t1029 = t1000 * t925 + t673 * t1023;
t1037 = -pkin(3) * t18 * t673 + t672 * t12 * t988;
t1039 = t12 * t685;
t1041 = t18 * t676;
t1043 = pkin(3) * t1041 + t902 * t1039;
t1054 = 0.2e1 * t672 * t19 * t12 * t988;
t1060 = t673 * t672 * pkin(3) * t18 * t1039;
t1062 = t877 * t876 * t676;
t1071 = t685 * t266 * t424 - t517;
t1075 = t845 + 0.2e1 * t698;
t1080 = t685 * t303 * t528;
t1084 = t673 * pkin(9) * t1075 * t15 + 0.2e1 * (t1080 - t531) * t676;
t1092 = t673 * (-0.2e1 * t1080 + t300) + pkin(9) * t1075 * t15 * t676;
t1107 = t685 * t12 * (t551 + 0.2e1 * t1 * qJ(3,2) * t552 + t36 * (-t265 + t934) - t558) + t562;
t1109 = -t673 * pkin(3) * t1075 * t18 + t1107 * t676;
t1113 = pkin(3) * t1075 * t1041;
t1119 = t303 * t1039 + t575;
t1122 = t685 * t74;
t1123 = t1122 + t2 + qJ(3,2);
t1126 = t685 * t583 - t585;
t1128 = t673 * t1123 + t1126 * t676;
t1132 = t1123 * t676 - t673 * t1126;
t1136 = t779 * (t34 * t684 * t879 + t33 * (0.4e1 * t883 * t280 + t14 * (0.2e1 * t897 * t674 + 0.2e1 * t677 * t891) - 0.2e1 * pkin(3) * (t911 * t674 + t677 * t906)) + t919 + 0.2e1 * t14 * pkin(3) * (t926 * t674 + t677 * t922) + t677 * t940 + 0.2e1 * (t944 - t945 / 0.2e1) * t674) + t687 * (-t34 * t953 * t952 + t33 * (0.4e1 * t959 * t957 + t14 * (0.2e1 * t973 * t674 + 0.2e1 * t677 * t968) + 0.2e1 * t677 * t984 - 0.2e1 * t674 * t990) - t267 * t679 * t996 + t14 * (t677 * t1008 - t1015 * t674) + t677 * t1025 - t1029 * t674) + t34 * (-t919 + 0.2e1 * t14 * (t677 * t1037 + t1043 * t674) * t303 + t677 * (t673 * (-t264 - t933 + t265 - t934) - t1054) - 0.2e1 * (t1060 - t1062 / 0.2e1) * t674) + t33 * (t267 * t1071 * t679 + t14 * (t677 * t1084 - t1092 * t674) + t677 * t1109 + (t673 * t1107 + t1113) * t674) + (-t14 * t679 * t1119 + t677 * t1128 - t1132 * t674) * t672;
t1138 = qJ(3,2) * t36;
t1142 = t672 * t610;
t1165 = t672 * t12 * t813;
t1167 = 0.1e1 / (t687 * (t599 + t33 * (t1138 * t58 - t601 + t604 - t607) - t1142) + t34 * (t442 * t18 * t685 - t615 * t956 + t713) * t12 + t33 * (t14 * (t685 * (-pkin(9) * qJ(3,2) * t625 - t624 - t628) - t632) + t685 * (pkin(3) * qJ(3,2) * t642 - t1138 * t215 - t638 - t641) + t647) - t1165);
t1182 = t36 * (t26 * t854 * t687 - g(3) * t12 * t687 + (t673 * t747 + t752 * t676) * t685) + t33 * (t854 * t12 + t665);
t1183 = t1182 * m(3) * t1167;
t1185 = t2 + qJ(3,3);
t1186 = cos(qJ(1,3));
t1187 = sin(legFrame(3,3));
t1189 = sin(qJ(1,3));
t1190 = cos(legFrame(3,3));
t1192 = t1187 * t1186 + t1190 * t1189;
t1193 = t1192 * t1185;
t1194 = t12 * t1193;
t1197 = t1186 * t1190 - t1189 * t1187;
t1198 = sin(qJ(2,3));
t1200 = cos(qJ(2,3));
t1201 = t1200 * t26;
t1207 = t12 * t1192;
t1209 = t1192 * t43;
t1210 = t26 * t1209;
t1211 = t1185 * t36;
t1212 = t1197 * t1211;
t1215 = t26 * t1192;
t1217 = t1197 * t43;
t1222 = t34 * (-t1194 - (t1192 * t1201 + t1198 * t1197) * t20) + t33 * (t1207 * t37 + t1198 * (t1210 - t1212) - t1200 * (t1215 * t1211 + t1217)) + t1194;
t1223 = t1200 * t20;
t1226 = t1185 * pkin(1);
t1228 = t12 * (-t1198 * t61 + t1226);
t1230 = t34 * (t1223 * t58 + t1228);
t1233 = t1198 * t1185 * t71;
t1235 = t12 * (-t1200 * t68 - t1233 - t75);
t1237 = t1200 * t1211;
t1244 = t1198 * t1211;
t1247 = t1185 * t12 * (t1200 * t43 + pkin(1) + t1244);
t1249 = 0.1e1 / (t1230 + t33 * (t1235 + pkin(1) * t26 * (-t1198 * t43 + t1237)) - t1247);
t1252 = -m(3) * qJ(3,3) - mrSges(3,3);
t1254 = t1252 * t36 + mrSges(2,2) + t96;
t1257 = -t105 * t1198 + t1200 * t1254;
t1260 = g(1) * t1190 + g(2) * t1187;
t1265 = -g(1) * t1187 + g(2) * t1190;
t1271 = -t33 * t1252 + mrSges(2,3) + t121 + t122 + t123;
t1290 = t1186 * (t1200 * t105 * t1265 + t1198 * t1254 * t1265 - t12 * t1260 * t1271 + t26 * t1260 * t1257 + t1260 * mrSges(1,2) - t130 * t1265) + t1189 * (-t1200 * t105 * t1260 - t1198 * t1260 * t1254 - t12 * t1265 * t1271 + t26 * t1265 * t1257 + mrSges(1,2) * t1265 + t1260 * t130);
t1292 = t1200 ^ 2;
t1295 = t1185 * t1198;
t1296 = t12 * t1197;
t1298 = t20 * t1192;
t1303 = t20 * t1198;
t1311 = t1198 * t36;
t1312 = t1197 * t20;
t1318 = t26 * t1217;
t1319 = t1192 * t1211;
t1324 = t1198 * t43;
t1326 = t1244 + pkin(1);
t1338 = t74 + t1295;
t1346 = t34 * (t1292 * t1193 * t148 + t1200 * (t1296 * t1295 + 0.2e1 * t157 * t1298) + t26 * (t1197 * t1303 + t1194)) + t33 * (-t1292 * t1298 * t168 + t1200 * (0.2e1 * t156 * t1192 * t1211 - t12 * t1312 * t1311 + t1318 - t1319) + t26 * (-t12 * t1192 * t182 + t1326 * t1197 - t1215 * t1324)) - t1200 * (t1200 * (t26 * t1193 + t1197 * t194) * t12 + t12 * (t1197 * t1338 - t1210 * t1311) + t1192 * t207 * t206);
t1347 = t1185 * t26;
t1349 = t1347 * t74 - t216;
t1358 = t1198 * pkin(1);
t1359 = t228 * t1358;
t1363 = 0.1e1 / (t1230 + t33 * (t1200 * t1349 + t12 * (t36 * (-t1198 * t1185 * pkin(8) - t221) - t1185 * t1303) - t1359) - t1247);
t1367 = -t1186 * t1265 + t1260 * t1189;
t1369 = -t1252 * t36 - mrSges(2,2) + t238;
t1387 = t1198 * (-t1186 * t105 * t1260 - t1189 * t105 * t1265 + t26 * t1369 * t1367 - t1369 * t247) - (t26 * t105 * t1367 + t1186 * t1260 * t1369 + t1189 * t1369 * t1265 + t257) * t1200;
t1389 = t2 - pkin(3) + qJ(3,3);
t1390 = t2 + pkin(3) + qJ(3,3);
t1391 = t1390 * t1389;
t1392 = t268 + t272 + t1391;
t1396 = t267 * t1192 * pkin(9);
t1402 = t295 * t1189;
t1404 = -t1186 * t1185 * pkin(9) * t285 + t26 * t1402;
t1407 = t36 * t1189;
t1410 = t1185 * t303 * t1407 + t1186 * t300;
t1415 = t1186 * t1185;
t1417 = t26 * t1189;
t1419 = -t1415 * t311 + t316 * t1417;
t1424 = t1185 * t18 * t1407 + t1186 * t320;
t1432 = t267 * t1197 * t266;
t1435 = t1186 * t333 + t1211 * t1417;
t1438 = t333 * t1189;
t1439 = t1415 * t338 - t1438;
t1446 = 0.2e1 * qJ(3,3) * t2;
t1447 = qJ(3,3) ^ 2;
t1448 = t349 - t350 - t1446 + t353 + t263 - t1447;
t1453 = 0.2e1 * t333 * t1211 * t1417 + t1186 * t1448;
t1457 = t1186 * t333 * t1185 * t338;
t1458 = t1448 * t1189;
t1465 = t1392 * t1192;
t1466 = t26 * t1198;
t1469 = t15 * t1198;
t1470 = pkin(3) * t1469;
t1472 = t267 * t1197 * pkin(9);
t1477 = t1189 * t1185;
t1479 = t385 * t1466 + t388;
t1481 = t1186 * t1198 * t295 + t1479 * t1477;
t1486 = t1186 * t1479 * t1185 - t1198 * t1402;
t1495 = t404 * t1466 - t407;
t1497 = -t1186 * t316 * pkin(3) * t1198 - t1495 * t1477;
t1501 = t1198 * t1189;
t1503 = t1186 * t1495 * t1185 - t415 * t1501;
t1509 = t1198 * t422 + t428;
t1513 = 0.2e1 * t1244 + pkin(1);
t1517 = t1198 * t333 * t436;
t1521 = t1186 * pkin(3) * t1513 - 0.2e1 * (t1517 + t445) * t1189;
t1528 = t1186 * (0.2e1 * t1517 + t444) + pkin(3) * t1513 * t1189;
t1536 = t1198 * t1448 * t26 - t467;
t1538 = t1186 * t1513 * t333 - t1536 * t1189;
t1542 = t1186 * t1536 + t1513 * t1438;
t1550 = -pkin(3) * t18 * t1186 + t1185 * t12 * t1501;
t1552 = t12 * t1198;
t1554 = t18 * t1189;
t1556 = pkin(3) * t1554 + t1415 * t1552;
t1567 = 0.2e1 * t1185 * t19 * t12 * t1501;
t1573 = t1186 * t1185 * pkin(3) * t18 * t1552;
t1575 = t1390 * t1389 * t1189;
t1584 = t1198 * t266 * t424 - t517;
t1588 = t1358 + 0.2e1 * t1211;
t1593 = t1198 * t303 * t528;
t1597 = t1186 * pkin(9) * t1588 * t15 + 0.2e1 * (t1593 - t531) * t1189;
t1605 = t1186 * (-0.2e1 * t1593 + t300) + pkin(9) * t1588 * t15 * t1189;
t1620 = t1198 * t12 * (t551 + 0.2e1 * t1 * qJ(3,3) * t552 + t36 * (-t265 + t1447) - t558) + t562;
t1622 = -t1186 * pkin(3) * t1588 * t18 + t1620 * t1189;
t1626 = pkin(3) * t1588 * t1554;
t1632 = t303 * t1552 + t575;
t1635 = t1198 * t74;
t1636 = t1635 + t2 + qJ(3,3);
t1639 = t1198 * t583 - t585;
t1641 = t1186 * t1636 + t1639 * t1189;
t1645 = -t1186 * t1639 + t1636 * t1189;
t1649 = t1292 * (t34 * t1197 * t1392 + t33 * (0.4e1 * t1396 * t280 + t14 * (0.2e1 * t1410 * t1187 + 0.2e1 * t1190 * t1404) - 0.2e1 * pkin(3) * (t1424 * t1187 + t1190 * t1419)) + t1432 + 0.2e1 * t14 * pkin(3) * (t1439 * t1187 + t1190 * t1435) + t1190 * t1453 + 0.2e1 * (t1457 - t1458 / 0.2e1) * t1187) + t1200 * (-t34 * t1466 * t1465 + t33 * (0.4e1 * t1472 * t1470 + t14 * (0.2e1 * t1486 * t1187 + 0.2e1 * t1190 * t1481) + 0.2e1 * t1190 * t1497 - 0.2e1 * t1187 * t1503) - t267 * t1192 * t1509 + t14 * (-t1528 * t1187 + t1190 * t1521) + t1190 * t1538 - t1542 * t1187) + t34 * (-t1432 + 0.2e1 * t14 * (t1556 * t1187 + t1190 * t1550) * t303 + t1190 * (t1186 * (-t264 - t1446 + t265 - t1447) - t1567) - 0.2e1 * (t1573 - t1575 / 0.2e1) * t1187) + t33 * (t267 * t1584 * t1192 + t14 * (-t1605 * t1187 + t1190 * t1597) + t1190 * t1622 + (t1186 * t1620 + t1626) * t1187) + (-t14 * t1192 * t1632 - t1645 * t1187 + t1190 * t1641) * t1185;
t1651 = qJ(3,3) * t36;
t1655 = t1185 * t610;
t1678 = t1185 * t12 * t1326;
t1680 = 0.1e1 / (t1200 * (t599 + t33 * (t1651 * t58 - t601 + t604 - t607) - t1655) + t34 * (t442 * t18 * t1198 - t615 * t1469 + t1226) * t12 + t33 * (t14 * (t1198 * (-pkin(9) * qJ(3,3) * t625 - t624 - t628) - t632) + t1198 * (pkin(3) * qJ(3,3) * t642 - t1651 * t215 - t638 - t641) + t647) - t1678);
t1695 = t36 * (t26 * t1367 * t1200 - g(3) * t12 * t1200 + (t1186 * t1260 + t1265 * t1189) * t1198) + t33 * (t1367 * t12 + t665);
t1696 = t1695 * m(3) * t1680;
t1698 = t2 + qJ(3,4);
t1699 = cos(qJ(1,4));
t1700 = sin(legFrame(4,3));
t1702 = sin(qJ(1,4));
t1703 = cos(legFrame(4,3));
t1705 = t1700 * t1699 + t1703 * t1702;
t1706 = t1705 * t1698;
t1707 = t12 * t1706;
t1710 = t1699 * t1703 - t1702 * t1700;
t1711 = sin(qJ(2,4));
t1713 = cos(qJ(2,4));
t1714 = t1713 * t26;
t1720 = t12 * t1705;
t1722 = t1705 * t43;
t1723 = t26 * t1722;
t1724 = t1698 * t36;
t1725 = t1710 * t1724;
t1728 = t26 * t1705;
t1730 = t1710 * t43;
t1735 = t34 * (-t1707 - (t1705 * t1714 + t1711 * t1710) * t20) + t33 * (t1720 * t37 + t1711 * (t1723 - t1725) - t1713 * (t1728 * t1724 + t1730)) + t1707;
t1736 = t1713 * t20;
t1739 = t1698 * pkin(1);
t1741 = t12 * (-t1711 * t61 + t1739);
t1743 = t34 * (t1736 * t58 + t1741);
t1746 = t1711 * t1698 * t71;
t1748 = t12 * (-t1713 * t68 - t1746 - t75);
t1750 = t1713 * t1724;
t1757 = t1711 * t1724;
t1760 = t1698 * t12 * (t1713 * t43 + pkin(1) + t1757);
t1762 = 0.1e1 / (t1743 + t33 * (t1748 + pkin(1) * t26 * (-t1711 * t43 + t1750)) - t1760);
t1765 = -m(3) * qJ(3,4) - mrSges(3,3);
t1767 = t36 * t1765 + mrSges(2,2) + t96;
t1770 = -t105 * t1711 + t1713 * t1767;
t1773 = g(1) * t1703 + g(2) * t1700;
t1778 = -g(1) * t1700 + g(2) * t1703;
t1784 = -t33 * t1765 + mrSges(2,3) + t121 + t122 + t123;
t1803 = t1699 * (t1713 * t105 * t1778 - t12 * t1773 * t1784 + t1711 * t1767 * t1778 + t26 * t1773 * t1770 + t1773 * mrSges(1,2) - t130 * t1778) + t1702 * (-t1713 * t105 * t1773 - t12 * t1778 * t1784 - t1711 * t1773 * t1767 + t26 * t1778 * t1770 + mrSges(1,2) * t1778 + t1773 * t130);
t1805 = t1713 ^ 2;
t1808 = t1698 * t1711;
t1809 = t12 * t1710;
t1811 = t20 * t1705;
t1816 = t20 * t1711;
t1824 = t1711 * t36;
t1825 = t1710 * t20;
t1831 = t26 * t1730;
t1832 = t1705 * t1724;
t1837 = t1711 * t43;
t1839 = t1757 + pkin(1);
t1851 = t74 + t1808;
t1859 = t34 * (t1805 * t1706 * t148 + t1713 * (0.2e1 * t157 * t1811 + t1809 * t1808) + t26 * (t1710 * t1816 + t1707)) + t33 * (-t1805 * t1811 * t168 + t1713 * (-t12 * t1825 * t1824 + 0.2e1 * t156 * t1705 * t1724 + t1831 - t1832) + t26 * (-t12 * t1705 * t182 + t1839 * t1710 - t1728 * t1837)) - t1713 * (t1713 * (t26 * t1706 + t1710 * t194) * t12 + t12 * (t1710 * t1851 - t1723 * t1824) + t1705 * t207 * t206);
t1860 = t1698 * t26;
t1862 = t1860 * t74 - t216;
t1871 = t1711 * pkin(1);
t1872 = t228 * t1871;
t1876 = 0.1e1 / (t1743 + t33 * (t1713 * t1862 + t12 * (t36 * (-t1711 * t1698 * pkin(8) - t221) - t1698 * t1816) - t1872) - t1760);
t1880 = -t1699 * t1778 + t1773 * t1702;
t1882 = -t36 * t1765 - mrSges(2,2) + t238;
t1900 = t1711 * (-t1699 * t105 * t1773 - t1702 * t105 * t1778 + t26 * t1882 * t1880 - t1882 * t247) - (t26 * t105 * t1880 + t1699 * t1773 * t1882 + t1702 * t1882 * t1778 + t257) * t1713;
t1902 = t2 - pkin(3) + qJ(3,4);
t1903 = t2 + pkin(3) + qJ(3,4);
t1904 = t1903 * t1902;
t1905 = t268 + t272 + t1904;
t1909 = t267 * t1705 * pkin(9);
t1915 = t295 * t1702;
t1917 = -t1699 * t1698 * pkin(9) * t285 + t26 * t1915;
t1920 = t36 * t1702;
t1923 = t1698 * t303 * t1920 + t1699 * t300;
t1928 = t1699 * t1698;
t1930 = t26 * t1702;
t1932 = -t1928 * t311 + t316 * t1930;
t1937 = t1698 * t18 * t1920 + t1699 * t320;
t1945 = t267 * t1710 * t266;
t1948 = t1699 * t333 + t1724 * t1930;
t1951 = t333 * t1702;
t1952 = t1928 * t338 - t1951;
t1959 = 0.2e1 * qJ(3,4) * t2;
t1960 = qJ(3,4) ^ 2;
t1961 = t349 - t350 - t1959 + t353 + t263 - t1960;
t1966 = 0.2e1 * t333 * t1724 * t1930 + t1699 * t1961;
t1970 = t1699 * t333 * t1698 * t338;
t1971 = t1961 * t1702;
t1978 = t1905 * t1705;
t1979 = t26 * t1711;
t1982 = t15 * t1711;
t1983 = pkin(3) * t1982;
t1985 = t267 * t1710 * pkin(9);
t1990 = t1702 * t1698;
t1992 = t385 * t1979 + t388;
t1994 = t1699 * t1711 * t295 + t1992 * t1990;
t1999 = t1699 * t1992 * t1698 - t1711 * t1915;
t2008 = t404 * t1979 - t407;
t2010 = -t1699 * t316 * pkin(3) * t1711 - t2008 * t1990;
t2014 = t1711 * t1702;
t2016 = t1699 * t2008 * t1698 - t415 * t2014;
t2022 = t1711 * t422 + t428;
t2026 = 0.2e1 * t1757 + pkin(1);
t2030 = t1711 * t333 * t436;
t2034 = t1699 * pkin(3) * t2026 - 0.2e1 * (t2030 + t445) * t1702;
t2041 = t1699 * (0.2e1 * t2030 + t444) + pkin(3) * t2026 * t1702;
t2049 = t1711 * t1961 * t26 - t467;
t2051 = t1699 * t2026 * t333 - t2049 * t1702;
t2055 = t1699 * t2049 + t2026 * t1951;
t2063 = -pkin(3) * t18 * t1699 + t1698 * t12 * t2014;
t2065 = t12 * t1711;
t2067 = t18 * t1702;
t2069 = pkin(3) * t2067 + t1928 * t2065;
t2080 = 0.2e1 * t1698 * t19 * t12 * t2014;
t2086 = t1699 * t1698 * pkin(3) * t18 * t2065;
t2088 = t1903 * t1902 * t1702;
t2097 = t1711 * t266 * t424 - t517;
t2101 = t1871 + 0.2e1 * t1724;
t2106 = t1711 * t303 * t528;
t2110 = t1699 * pkin(9) * t2101 * t15 + 0.2e1 * (t2106 - t531) * t1702;
t2118 = t1699 * (-0.2e1 * t2106 + t300) + pkin(9) * t2101 * t15 * t1702;
t2133 = t1711 * t12 * (t551 + 0.2e1 * t1 * qJ(3,4) * t552 + t36 * (-t265 + t1960) - t558) + t562;
t2135 = -t1699 * pkin(3) * t2101 * t18 + t2133 * t1702;
t2139 = pkin(3) * t2101 * t2067;
t2145 = t303 * t2065 + t575;
t2148 = t1711 * t74;
t2149 = t2148 + t2 + qJ(3,4);
t2152 = t1711 * t583 - t585;
t2154 = t1699 * t2149 + t2152 * t1702;
t2158 = -t1699 * t2152 + t2149 * t1702;
t2162 = t1805 * (t34 * t1710 * t1905 + t33 * (0.4e1 * t1909 * t280 + t14 * (0.2e1 * t1923 * t1700 + 0.2e1 * t1703 * t1917) - 0.2e1 * pkin(3) * (t1937 * t1700 + t1703 * t1932)) + t1945 + 0.2e1 * t14 * pkin(3) * (t1952 * t1700 + t1703 * t1948) + t1703 * t1966 + 0.2e1 * (t1970 - t1971 / 0.2e1) * t1700) + t1713 * (-t34 * t1979 * t1978 + t33 * (0.4e1 * t1985 * t1983 + t14 * (0.2e1 * t1999 * t1700 + 0.2e1 * t1703 * t1994) + 0.2e1 * t1703 * t2010 - 0.2e1 * t1700 * t2016) - t267 * t1705 * t2022 + t14 * (-t2041 * t1700 + t1703 * t2034) + t1703 * t2051 - t2055 * t1700) + t34 * (-t1945 + 0.2e1 * t14 * (t2069 * t1700 + t1703 * t2063) * t303 + t1703 * (t1699 * (-t264 - t1959 + t265 - t1960) - t2080) - 0.2e1 * (t2086 - t2088 / 0.2e1) * t1700) + t33 * (t267 * t2097 * t1705 + t14 * (-t2118 * t1700 + t1703 * t2110) + t1703 * t2135 + (t1699 * t2133 + t2139) * t1700) + (-t14 * t1705 * t2145 - t2158 * t1700 + t1703 * t2154) * t1698;
t2164 = qJ(3,4) * t36;
t2168 = t1698 * t610;
t2191 = t1698 * t12 * t1839;
t2193 = 0.1e1 / (t1713 * (t599 + t33 * (t2164 * t58 - t601 + t604 - t607) - t2168) + t34 * (t442 * t18 * t1711 - t615 * t1982 + t1739) * t12 + t33 * (t14 * (t1711 * (-pkin(9) * qJ(3,4) * t625 - t624 - t628) - t632) + t1711 * (pkin(3) * qJ(3,4) * t642 - t2164 * t215 - t638 - t641) + t647) - t2191);
t2208 = t36 * (t26 * t1880 * t1713 - g(3) * t12 * t1713 + (t1699 * t1773 + t1778 * t1702) * t1711) + t33 * (t1880 * t12 + t665);
t2209 = t2208 * m(3) * t2193;
t2211 = t2 + qJ(3,5);
t2212 = cos(qJ(1,5));
t2213 = sin(legFrame(5,3));
t2215 = sin(qJ(1,5));
t2216 = cos(legFrame(5,3));
t2218 = t2213 * t2212 + t2216 * t2215;
t2219 = t2218 * t2211;
t2220 = t12 * t2219;
t2223 = t2212 * t2216 - t2215 * t2213;
t2224 = sin(qJ(2,5));
t2226 = cos(qJ(2,5));
t2227 = t2226 * t26;
t2233 = t12 * t2218;
t2235 = t2218 * t43;
t2236 = t26 * t2235;
t2237 = t2211 * t36;
t2238 = t2223 * t2237;
t2241 = t26 * t2218;
t2243 = t2223 * t43;
t2248 = t34 * (-t2220 - (t2218 * t2227 + t2224 * t2223) * t20) + t33 * (t2233 * t37 + t2224 * (t2236 - t2238) - t2226 * (t2241 * t2237 + t2243)) + t2220;
t2249 = t2226 * t20;
t2252 = t2211 * pkin(1);
t2254 = t12 * (-t2224 * t61 + t2252);
t2256 = t34 * (t2249 * t58 + t2254);
t2259 = t2224 * t2211 * t71;
t2261 = t12 * (-t2226 * t68 - t2259 - t75);
t2263 = t2226 * t2237;
t2270 = t2224 * t2237;
t2273 = t2211 * t12 * (t2226 * t43 + pkin(1) + t2270);
t2275 = 0.1e1 / (t2256 + t33 * (t2261 + pkin(1) * t26 * (-t2224 * t43 + t2263)) - t2273);
t2278 = -m(3) * qJ(3,5) - mrSges(3,3);
t2280 = t36 * t2278 + mrSges(2,2) + t96;
t2283 = -t105 * t2224 + t2226 * t2280;
t2286 = g(1) * t2216 + g(2) * t2213;
t2291 = -g(1) * t2213 + g(2) * t2216;
t2297 = -t33 * t2278 + mrSges(2,3) + t121 + t122 + t123;
t2316 = t2212 * (t2226 * t105 * t2291 - t12 * t2286 * t2297 + t2224 * t2280 * t2291 + t26 * t2286 * t2283 + t2286 * mrSges(1,2) - t130 * t2291) + t2215 * (-t2226 * t105 * t2286 - t12 * t2291 * t2297 - t2224 * t2286 * t2280 + t26 * t2291 * t2283 + mrSges(1,2) * t2291 + t2286 * t130);
t2318 = t2226 ^ 2;
t2321 = t2211 * t2224;
t2322 = t12 * t2223;
t2324 = t20 * t2218;
t2329 = t20 * t2224;
t2337 = t2224 * t36;
t2338 = t2223 * t20;
t2344 = t26 * t2243;
t2345 = t2218 * t2237;
t2350 = t2224 * t43;
t2352 = t2270 + pkin(1);
t2364 = t74 + t2321;
t2372 = t34 * (t2318 * t2219 * t148 + t2226 * (0.2e1 * t157 * t2324 + t2322 * t2321) + t26 * (t2223 * t2329 + t2220)) + t33 * (-t2318 * t2324 * t168 + t2226 * (-t12 * t2338 * t2337 + 0.2e1 * t156 * t2218 * t2237 + t2344 - t2345) + t26 * (-t12 * t2218 * t182 + t2352 * t2223 - t2241 * t2350)) - t2226 * (t2226 * (t2223 * t194 + t26 * t2219) * t12 + t12 * (t2223 * t2364 - t2236 * t2337) + t2218 * t207 * t206);
t2373 = t2211 * t26;
t2375 = t2373 * t74 - t216;
t2384 = t2224 * pkin(1);
t2385 = t228 * t2384;
t2389 = 0.1e1 / (t2256 + t33 * (t2226 * t2375 + t12 * (t36 * (-t2224 * t2211 * pkin(8) - t221) - t2211 * t2329) - t2385) - t2273);
t2393 = -t2212 * t2291 + t2286 * t2215;
t2395 = -t36 * t2278 - mrSges(2,2) + t238;
t2413 = t2224 * (-t2212 * t105 * t2286 - t2215 * t105 * t2291 + t26 * t2395 * t2393 - t2395 * t247) - (t26 * t105 * t2393 + t2212 * t2286 * t2395 + t2215 * t2395 * t2291 + t257) * t2226;
t2415 = t2 - pkin(3) + qJ(3,5);
t2416 = t2 + pkin(3) + qJ(3,5);
t2417 = t2416 * t2415;
t2418 = t268 + t272 + t2417;
t2422 = t267 * t2218 * pkin(9);
t2428 = t295 * t2215;
t2430 = -t2212 * t2211 * pkin(9) * t285 + t26 * t2428;
t2433 = t36 * t2215;
t2436 = t2211 * t303 * t2433 + t2212 * t300;
t2441 = t2212 * t2211;
t2443 = t26 * t2215;
t2445 = -t2441 * t311 + t316 * t2443;
t2450 = t2211 * t18 * t2433 + t2212 * t320;
t2458 = t267 * t2223 * t266;
t2461 = t2212 * t333 + t2237 * t2443;
t2464 = t333 * t2215;
t2465 = t2441 * t338 - t2464;
t2472 = 0.2e1 * qJ(3,5) * t2;
t2473 = qJ(3,5) ^ 2;
t2474 = t349 - t350 - t2472 + t353 + t263 - t2473;
t2479 = 0.2e1 * t333 * t2237 * t2443 + t2212 * t2474;
t2483 = t2212 * t333 * t2211 * t338;
t2484 = t2474 * t2215;
t2491 = t2418 * t2218;
t2492 = t26 * t2224;
t2495 = t15 * t2224;
t2496 = pkin(3) * t2495;
t2498 = t267 * t2223 * pkin(9);
t2503 = t2215 * t2211;
t2505 = t385 * t2492 + t388;
t2507 = t2212 * t2224 * t295 + t2505 * t2503;
t2512 = t2212 * t2505 * t2211 - t2224 * t2428;
t2521 = t404 * t2492 - t407;
t2523 = -t2212 * t316 * pkin(3) * t2224 - t2521 * t2503;
t2527 = t2224 * t2215;
t2529 = t2212 * t2521 * t2211 - t415 * t2527;
t2535 = t2224 * t422 + t428;
t2539 = 0.2e1 * t2270 + pkin(1);
t2543 = t2224 * t333 * t436;
t2547 = t2212 * pkin(3) * t2539 - 0.2e1 * (t2543 + t445) * t2215;
t2554 = t2212 * (0.2e1 * t2543 + t444) + pkin(3) * t2539 * t2215;
t2562 = t2224 * t2474 * t26 - t467;
t2564 = t2212 * t2539 * t333 - t2562 * t2215;
t2568 = t2212 * t2562 + t2539 * t2464;
t2576 = -pkin(3) * t18 * t2212 + t2211 * t12 * t2527;
t2578 = t12 * t2224;
t2580 = t18 * t2215;
t2582 = pkin(3) * t2580 + t2441 * t2578;
t2593 = 0.2e1 * t2211 * t19 * t12 * t2527;
t2599 = t2212 * t2211 * pkin(3) * t18 * t2578;
t2601 = t2416 * t2415 * t2215;
t2610 = t2224 * t266 * t424 - t517;
t2614 = t2384 + 0.2e1 * t2237;
t2619 = t2224 * t303 * t528;
t2623 = t2212 * pkin(9) * t2614 * t15 + 0.2e1 * (t2619 - t531) * t2215;
t2631 = t2212 * (-0.2e1 * t2619 + t300) + pkin(9) * t2614 * t15 * t2215;
t2646 = t2224 * t12 * (t551 + 0.2e1 * t1 * qJ(3,5) * t552 + t36 * (-t265 + t2473) - t558) + t562;
t2648 = -t2212 * pkin(3) * t2614 * t18 + t2646 * t2215;
t2652 = pkin(3) * t2614 * t2580;
t2658 = t303 * t2578 + t575;
t2661 = t2224 * t74;
t2662 = t2661 + t2 + qJ(3,5);
t2665 = t2224 * t583 - t585;
t2667 = t2212 * t2662 + t2665 * t2215;
t2671 = -t2212 * t2665 + t2662 * t2215;
t2675 = t2318 * (t34 * t2223 * t2418 + t33 * (0.4e1 * t2422 * t280 + t14 * (0.2e1 * t2436 * t2213 + 0.2e1 * t2216 * t2430) - 0.2e1 * pkin(3) * (t2450 * t2213 + t2216 * t2445)) + t2458 + 0.2e1 * t14 * pkin(3) * (t2465 * t2213 + t2216 * t2461) + t2216 * t2479 + 0.2e1 * (t2483 - t2484 / 0.2e1) * t2213) + t2226 * (-t34 * t2492 * t2491 + t33 * (0.4e1 * t2498 * t2496 + t14 * (0.2e1 * t2512 * t2213 + 0.2e1 * t2216 * t2507) + 0.2e1 * t2216 * t2523 - 0.2e1 * t2213 * t2529) - t267 * t2218 * t2535 + t14 * (-t2554 * t2213 + t2216 * t2547) + t2216 * t2564 - t2568 * t2213) + t34 * (-t2458 + 0.2e1 * t14 * (t2582 * t2213 + t2216 * t2576) * t303 + t2216 * (t2212 * (-t264 - t2472 + t265 - t2473) - t2593) - 0.2e1 * (t2599 - t2601 / 0.2e1) * t2213) + t33 * (t267 * t2610 * t2218 + t14 * (-t2631 * t2213 + t2216 * t2623) + t2216 * t2648 + (t2212 * t2646 + t2652) * t2213) + (-t14 * t2218 * t2658 - t2671 * t2213 + t2216 * t2667) * t2211;
t2677 = qJ(3,5) * t36;
t2681 = t2211 * t610;
t2704 = t2211 * t12 * t2352;
t2706 = 0.1e1 / (t2226 * (t599 + t33 * (t2677 * t58 - t601 + t604 - t607) - t2681) + t34 * (t442 * t18 * t2224 - t615 * t2495 + t2252) * t12 + t33 * (t14 * (t2224 * (-pkin(9) * qJ(3,5) * t625 - t624 - t628) - t632) + t2224 * (pkin(3) * qJ(3,5) * t642 - t2677 * t215 - t638 - t641) + t647) - t2704);
t2721 = t36 * (t26 * t2393 * t2226 - g(3) * t12 * t2226 + (t2212 * t2286 + t2291 * t2215) * t2224) + t33 * (t2393 * t12 + t665);
t2722 = t2721 * m(3) * t2706;
t2724 = t2 + qJ(3,6);
t2725 = cos(qJ(1,6));
t2726 = sin(legFrame(6,3));
t2728 = sin(qJ(1,6));
t2729 = cos(legFrame(6,3));
t2731 = t2726 * t2725 + t2729 * t2728;
t2732 = t2731 * t2724;
t2733 = t12 * t2732;
t2736 = t2725 * t2729 - t2728 * t2726;
t2737 = sin(qJ(2,6));
t2739 = cos(qJ(2,6));
t2740 = t2739 * t26;
t2746 = t12 * t2731;
t2748 = t2731 * t43;
t2749 = t26 * t2748;
t2750 = t2724 * t36;
t2751 = t2736 * t2750;
t2754 = t26 * t2731;
t2756 = t2736 * t43;
t2761 = t34 * (-t2733 - (t2731 * t2740 + t2737 * t2736) * t20) + t33 * (t2746 * t37 + t2737 * (t2749 - t2751) - t2739 * (t2754 * t2750 + t2756)) + t2733;
t2762 = t2739 * t20;
t2765 = t2724 * pkin(1);
t2767 = t12 * (-t2737 * t61 + t2765);
t2769 = t34 * (t2762 * t58 + t2767);
t2772 = t2737 * t2724 * t71;
t2774 = t12 * (-t2739 * t68 - t2772 - t75);
t2776 = t2739 * t2750;
t2783 = t2737 * t2750;
t2786 = t2724 * t12 * (t2739 * t43 + pkin(1) + t2783);
t2788 = 0.1e1 / (t2769 + t33 * (t2774 + pkin(1) * t26 * (-t2737 * t43 + t2776)) - t2786);
t2791 = -m(3) * qJ(3,6) - mrSges(3,3);
t2793 = t36 * t2791 + mrSges(2,2) + t96;
t2796 = -t105 * t2737 + t2739 * t2793;
t2799 = g(1) * t2729 + g(2) * t2726;
t2804 = -g(1) * t2726 + g(2) * t2729;
t2810 = -t33 * t2791 + mrSges(2,3) + t121 + t122 + t123;
t2829 = t2725 * (t2739 * t105 * t2804 - t12 * t2799 * t2810 + t26 * t2799 * t2796 + t2737 * t2793 * t2804 + t2799 * mrSges(1,2) - t130 * t2804) + t2728 * (-t2739 * t105 * t2799 - t12 * t2804 * t2810 + t26 * t2804 * t2796 - t2737 * t2799 * t2793 + mrSges(1,2) * t2804 + t2799 * t130);
t2831 = t2739 ^ 2;
t2834 = t2724 * t2737;
t2835 = t12 * t2736;
t2837 = t20 * t2731;
t2842 = t20 * t2737;
t2850 = t2737 * t36;
t2851 = t2736 * t20;
t2857 = t26 * t2756;
t2858 = t2731 * t2750;
t2863 = t2737 * t43;
t2865 = t2783 + pkin(1);
t2877 = t74 + t2834;
t2885 = t34 * (t2831 * t2732 * t148 + t2739 * (0.2e1 * t157 * t2837 + t2835 * t2834) + t26 * (t2736 * t2842 + t2733)) + t33 * (-t2831 * t2837 * t168 + t2739 * (-t12 * t2851 * t2850 + 0.2e1 * t156 * t2731 * t2750 + t2857 - t2858) + t26 * (-t12 * t2731 * t182 + t2865 * t2736 - t2754 * t2863)) - t2739 * (t2739 * (t2736 * t194 + t26 * t2732) * t12 + t12 * (t2736 * t2877 - t2749 * t2850) + t2731 * t207 * t206);
t2886 = t2724 * t26;
t2888 = t2886 * t74 - t216;
t2897 = t2737 * pkin(1);
t2898 = t228 * t2897;
t2902 = 0.1e1 / (t2769 + t33 * (t2739 * t2888 + t12 * (t36 * (-t2737 * t2724 * pkin(8) - t221) - t2724 * t2842) - t2898) - t2786);
t2906 = -t2725 * t2804 + t2799 * t2728;
t2908 = -t36 * t2791 - mrSges(2,2) + t238;
t2926 = t2737 * (-t2725 * t105 * t2799 - t2728 * t105 * t2804 + t26 * t2908 * t2906 - t2908 * t247) - (t26 * t105 * t2906 + t2725 * t2799 * t2908 + t2728 * t2908 * t2804 + t257) * t2739;
t2928 = t2 - pkin(3) + qJ(3,6);
t2929 = t2 + pkin(3) + qJ(3,6);
t2930 = t2929 * t2928;
t2931 = t268 + t272 + t2930;
t2935 = t267 * t2731 * pkin(9);
t2941 = t295 * t2728;
t2943 = -t2725 * t2724 * pkin(9) * t285 + t26 * t2941;
t2946 = t36 * t2728;
t2949 = t2724 * t303 * t2946 + t2725 * t300;
t2954 = t2725 * t2724;
t2956 = t26 * t2728;
t2958 = -t2954 * t311 + t316 * t2956;
t2963 = t2724 * t18 * t2946 + t2725 * t320;
t2971 = t267 * t2736 * t266;
t2974 = t2725 * t333 + t2750 * t2956;
t2977 = t333 * t2728;
t2978 = t2954 * t338 - t2977;
t2985 = 0.2e1 * qJ(3,6) * t2;
t2986 = qJ(3,6) ^ 2;
t2987 = t349 - t350 - t2985 + t353 + t263 - t2986;
t2992 = 0.2e1 * t333 * t2750 * t2956 + t2725 * t2987;
t2996 = t2725 * t333 * t2724 * t338;
t2997 = t2987 * t2728;
t3004 = t2931 * t2731;
t3005 = t26 * t2737;
t3008 = t15 * t2737;
t3009 = pkin(3) * t3008;
t3011 = t267 * t2736 * pkin(9);
t3016 = t2728 * t2724;
t3018 = t385 * t3005 + t388;
t3020 = t2725 * t2737 * t295 + t3018 * t3016;
t3025 = t2725 * t3018 * t2724 - t2737 * t2941;
t3034 = t404 * t3005 - t407;
t3036 = -t2725 * t316 * pkin(3) * t2737 - t3034 * t3016;
t3040 = t2737 * t2728;
t3042 = t2725 * t3034 * t2724 - t415 * t3040;
t3048 = t2737 * t422 + t428;
t3052 = 0.2e1 * t2783 + pkin(1);
t3056 = t2737 * t333 * t436;
t3060 = t2725 * pkin(3) * t3052 - 0.2e1 * (t3056 + t445) * t2728;
t3067 = t2725 * (0.2e1 * t3056 + t444) + pkin(3) * t3052 * t2728;
t3075 = t2737 * t2987 * t26 - t467;
t3077 = t2725 * t3052 * t333 - t3075 * t2728;
t3081 = t2725 * t3075 + t3052 * t2977;
t3089 = -pkin(3) * t18 * t2725 + t2724 * t12 * t3040;
t3091 = t12 * t2737;
t3093 = t18 * t2728;
t3095 = pkin(3) * t3093 + t2954 * t3091;
t3106 = 0.2e1 * t2724 * t19 * t12 * t3040;
t3112 = t2725 * t2724 * pkin(3) * t18 * t3091;
t3114 = t2929 * t2928 * t2728;
t3123 = t2737 * t266 * t424 - t517;
t3127 = t2897 + 0.2e1 * t2750;
t3132 = t2737 * t303 * t528;
t3136 = t2725 * pkin(9) * t3127 * t15 + 0.2e1 * (t3132 - t531) * t2728;
t3144 = t2725 * (-0.2e1 * t3132 + t300) + pkin(9) * t3127 * t15 * t2728;
t3159 = t2737 * t12 * (t551 + 0.2e1 * t1 * qJ(3,6) * t552 + t36 * (-t265 + t2986) - t558) + t562;
t3161 = -t2725 * pkin(3) * t3127 * t18 + t3159 * t2728;
t3165 = pkin(3) * t3127 * t3093;
t3171 = t303 * t3091 + t575;
t3174 = t2737 * t74;
t3175 = t3174 + t2 + qJ(3,6);
t3178 = t2737 * t583 - t585;
t3180 = t2725 * t3175 + t3178 * t2728;
t3184 = -t2725 * t3178 + t3175 * t2728;
t3188 = t2831 * (t34 * t2736 * t2931 + t33 * (0.4e1 * t2935 * t280 + t14 * (0.2e1 * t2949 * t2726 + 0.2e1 * t2729 * t2943) - 0.2e1 * pkin(3) * (t2963 * t2726 + t2729 * t2958)) + t2971 + 0.2e1 * t14 * pkin(3) * (t2978 * t2726 + t2729 * t2974) + t2729 * t2992 + 0.2e1 * (t2996 - t2997 / 0.2e1) * t2726) + t2739 * (-t34 * t3005 * t3004 + t33 * (0.4e1 * t3011 * t3009 + t14 * (0.2e1 * t3025 * t2726 + 0.2e1 * t2729 * t3020) + 0.2e1 * t2729 * t3036 - 0.2e1 * t2726 * t3042) - t267 * t2731 * t3048 + t14 * (-t3067 * t2726 + t2729 * t3060) + t2729 * t3077 - t3081 * t2726) + t34 * (-t2971 + 0.2e1 * t14 * (t3095 * t2726 + t2729 * t3089) * t303 + t2729 * (t2725 * (-t264 - t2985 + t265 - t2986) - t3106) - 0.2e1 * (t3112 - t3114 / 0.2e1) * t2726) + t33 * (t267 * t3123 * t2731 + t14 * (-t3144 * t2726 + t2729 * t3136) + t2729 * t3161 + (t2725 * t3159 + t3165) * t2726) + (-t14 * t2731 * t3171 - t3184 * t2726 + t2729 * t3180) * t2724;
t3190 = qJ(3,6) * t36;
t3194 = t2724 * t610;
t3217 = t2724 * t12 * t2865;
t3219 = 0.1e1 / (t2739 * (t599 + t33 * (t3190 * t58 - t601 + t604 - t607) - t3194) + t34 * (t442 * t18 * t2737 - t615 * t3008 + t2765) * t12 + t33 * (t14 * (t2737 * (-pkin(9) * qJ(3,6) * t625 - t624 - t628) - t632) + t2737 * (pkin(3) * qJ(3,6) * t642 - t3190 * t215 - t638 - t641) + t647) - t3217);
t3234 = t36 * (t26 * t2906 * t2739 - g(3) * t12 * t2739 + (t2725 * t2799 + t2804 * t2728) * t2737) + t33 * (t2906 * t12 + t665);
t3235 = t3234 * m(3) * t3219;
t3238 = t146 * t91 * t57 + t260 * t233 * t212 + t670 * t12 * t596 + t777 * t736 * t709 + t874 * t850 * t833 + t1183 * t12 * t1136 + t1290 * t1249 * t1222 + t1387 * t1363 * t1346 + t1696 * t12 * t1649 + t1803 * t1762 * t1735 + t1900 * t1876 * t1859 + t2209 * t12 * t2162 + t2316 * t2275 * t2248 + t2413 * t2389 * t2372 + t2722 * t12 * t2675 + t2829 * t2788 * t2761 + t2926 * t2902 * t2885 + t3235 * t12 * t3188 - g(1) * m(4);
t3239 = t23 * t3;
t3240 = t12 * t3239;
t3250 = t26 * t23;
t3256 = t34 * (t3240 + t20 * (-t24 * t10 + t23 * t28)) + t33 * (-t153 * t37 + t24 * (-t178 - t179) + t27 * (t3250 * t46 - t44)) - t3240;
t3262 = t157 * t20;
t3302 = t34 * (-t149 * t3239 * t148 + t27 * (t38 * t152 - 0.2e1 * t23 * t3262) + t26 * (t10 * t162 - t3240)) + t33 * (t149 * t172 * t168 + t27 * (-t12 * t155 * t171 - 0.2e1 * t156 * t23 * t46 + t45 + t47) + t26 * (t12 * t23 * t182 + t187 * t10 + t3250 * t185)) - t27 * (-t27 * (-t10 * t194 + t26 * t3239) * t12 + t12 * (t200 * t10 + t178 * t171) - t23 * t207 * t206);
t3321 = t267 * t10 * t266;
t3391 = t149 * (t34 * t372 + t33 * (-0.4e1 * t379 * t280 + t14 * (0.2e1 * t298 * t5 - 0.2e1 * t8 * t306) + 0.2e1 * pkin(3) * (-t318 * t5 + t8 * t324)) + t3321 - 0.2e1 * t14 * pkin(3) * (-t5 * t336 + t8 * t341) + t8 * (-0.2e1 * t364 + t365) + t360 * t5) + t27 * (t34 * t3250 * t24 * t276 + t33 * (0.4e1 * t282 * t377 + t14 * (0.2e1 * t391 * t5 - 0.2e1 * t8 * t396) + 0.2e1 * t8 * t417 + 0.2e1 * t410 * t5) + t267 * t23 * t429 + t14 * (t5 * t449 + t8 * t456) + t8 * t474 + t470 * t5) + t34 * (-t3321 - 0.2e1 * t14 * (-t482 * t5 + t8 * t488) * t303 + t8 * (0.2e1 * t505 - t507) - (t4 * t275 + t499) * t5) + t33 * (-t267 * t23 * t518 + t14 * (t535 * t5 + t8 * t543) + t8 * (-t4 * t563 - t569) + t5 * t565) + (t14 * t23 * t576 + t588 * t5 + t8 * t592) * t3;
t3394 = t684 * t672;
t3395 = t12 * t3394;
t3405 = t26 * t684;
t3411 = t34 * (t3395 + t20 * (-t685 * t679 + t684 * t688)) + t33 * (-t783 * t37 + t685 * (-t805 - t806) + t687 * (t3405 * t698 - t696)) - t3395;
t3456 = t34 * (-t779 * t3394 * t148 + t687 * (-0.2e1 * t684 * t3262 + t694 * t782) + t26 * (t679 * t790 - t3395)) + t33 * (t779 * t799 * t168 + t687 * (-t12 * t785 * t798 - 0.2e1 * t156 * t684 * t698 + t697 + t699) + t26 * (t12 * t684 * t182 + t3405 * t811 + t813 * t679)) - t687 * (-t687 * (-t679 * t194 + t26 * t3394) * t12 + t12 * (t825 * t679 + t805 * t798) - t684 * t207 * t206);
t3475 = t267 * t679 * t266;
t3545 = t779 * (t34 * t952 + t33 * (-0.4e1 * t959 * t280 + t14 * (0.2e1 * t891 * t674 - 0.2e1 * t677 * t897) + 0.2e1 * pkin(3) * (-t906 * t674 + t677 * t911)) + t3475 - 0.2e1 * t14 * pkin(3) * (-t674 * t922 + t677 * t926) + t677 * (-0.2e1 * t944 + t945) + t940 * t674) + t687 * (t34 * t3405 * t685 * t879 + t33 * (0.4e1 * t883 * t957 + t14 * (0.2e1 * t968 * t674 - 0.2e1 * t677 * t973) + 0.2e1 * t677 * t990 + 0.2e1 * t984 * t674) + t267 * t684 * t996 + t14 * (t674 * t1008 + t677 * t1015) + t677 * t1029 + t1025 * t674) + t34 * (-t3475 - 0.2e1 * t14 * (-t1037 * t674 + t677 * t1043) * t303 + t677 * (0.2e1 * t1060 - t1062) - (t673 * t878 + t1054) * t674) + t33 * (-t267 * t684 * t1071 + t14 * (t1084 * t674 + t677 * t1092) + t677 * (-t673 * t1107 - t1113) + t674 * t1109) + (t14 * t684 * t1119 + t1128 * t674 + t677 * t1132) * t672;
t3548 = t1197 * t1185;
t3549 = t12 * t3548;
t3559 = t26 * t1197;
t3565 = t34 * (t3549 + t20 * (-t1198 * t1192 + t1197 * t1201)) + t33 * (-t1296 * t37 + t1198 * (-t1318 - t1319) + t1200 * (t3559 * t1211 - t1209)) - t3549;
t3610 = t34 * (-t1292 * t3548 * t148 + t1200 * (-0.2e1 * t1197 * t3262 + t1207 * t1295) + t26 * (t1192 * t1303 - t3549)) + t33 * (t1292 * t1312 * t168 + t1200 * (-0.2e1 * t156 * t1197 * t1211 - t12 * t1298 * t1311 + t1210 + t1212) + t26 * (t12 * t1197 * t182 + t1326 * t1192 + t3559 * t1324)) - t1200 * (-t1200 * (-t1192 * t194 + t26 * t3548) * t12 + t12 * (t1338 * t1192 + t1318 * t1311) - t1197 * t207 * t206);
t3629 = t267 * t1192 * t266;
t3699 = t1292 * (t34 * t1465 + t33 * (-0.4e1 * t1472 * t280 + t14 * (0.2e1 * t1404 * t1187 - 0.2e1 * t1190 * t1410) + 0.2e1 * pkin(3) * (-t1419 * t1187 + t1190 * t1424)) + t3629 - 0.2e1 * t14 * pkin(3) * (-t1187 * t1435 + t1190 * t1439) + t1190 * (-0.2e1 * t1457 + t1458) + t1453 * t1187) + t1200 * (t34 * t3559 * t1198 * t1392 + t33 * (0.4e1 * t1396 * t1470 + t14 * (0.2e1 * t1481 * t1187 - 0.2e1 * t1190 * t1486) + 0.2e1 * t1190 * t1503 + 0.2e1 * t1497 * t1187) + t267 * t1197 * t1509 + t14 * (t1187 * t1521 + t1190 * t1528) + t1190 * t1542 + t1538 * t1187) + t34 * (-t3629 - 0.2e1 * t14 * (-t1550 * t1187 + t1190 * t1556) * t303 + t1190 * (0.2e1 * t1573 - t1575) - (t1186 * t1391 + t1567) * t1187) + t33 * (-t267 * t1197 * t1584 + t14 * (t1597 * t1187 + t1190 * t1605) + t1190 * (-t1186 * t1620 - t1626) + t1187 * t1622) + (t14 * t1197 * t1632 + t1641 * t1187 + t1190 * t1645) * t1185;
t3702 = t1710 * t1698;
t3703 = t12 * t3702;
t3713 = t26 * t1710;
t3719 = t34 * (t3703 + t20 * (-t1711 * t1705 + t1710 * t1714)) + t33 * (-t1809 * t37 + t1711 * (-t1831 - t1832) + t1713 * (t3713 * t1724 - t1722)) - t3703;
t3764 = t34 * (-t1805 * t3702 * t148 + t1713 * (-0.2e1 * t1710 * t3262 + t1720 * t1808) + t26 * (t1705 * t1816 - t3703)) + t33 * (t1805 * t1825 * t168 + t1713 * (-t12 * t1811 * t1824 - 0.2e1 * t156 * t1710 * t1724 + t1723 + t1725) + t26 * (t12 * t1710 * t182 + t1839 * t1705 + t3713 * t1837)) - t1713 * (-t1713 * (-t1705 * t194 + t26 * t3702) * t12 + t12 * (t1851 * t1705 + t1831 * t1824) - t1710 * t207 * t206);
t3783 = t267 * t1705 * t266;
t3853 = t1805 * (t34 * t1978 + t33 * (-0.4e1 * t1985 * t280 + t14 * (0.2e1 * t1917 * t1700 - 0.2e1 * t1703 * t1923) + 0.2e1 * pkin(3) * (-t1932 * t1700 + t1703 * t1937)) + t3783 - 0.2e1 * t14 * pkin(3) * (-t1700 * t1948 + t1703 * t1952) + t1703 * (-0.2e1 * t1970 + t1971) + t1966 * t1700) + t1713 * (t34 * t3713 * t1711 * t1905 + t33 * (0.4e1 * t1909 * t1983 + t14 * (0.2e1 * t1994 * t1700 - 0.2e1 * t1703 * t1999) + 0.2e1 * t1703 * t2016 + 0.2e1 * t2010 * t1700) + t267 * t1710 * t2022 + t14 * (t1700 * t2034 + t1703 * t2041) + t1703 * t2055 + t2051 * t1700) + t34 * (-t3783 - 0.2e1 * t14 * (-t2063 * t1700 + t1703 * t2069) * t303 + t1703 * (0.2e1 * t2086 - t2088) - (t1699 * t1904 + t2080) * t1700) + t33 * (-t267 * t1710 * t2097 + t14 * (t2110 * t1700 + t1703 * t2118) + t1703 * (-t1699 * t2133 - t2139) + t1700 * t2135) + (t14 * t1710 * t2145 + t2154 * t1700 + t1703 * t2158) * t1698;
t3856 = t2223 * t2211;
t3857 = t12 * t3856;
t3867 = t26 * t2223;
t3873 = t34 * (t3857 + t20 * (-t2224 * t2218 + t2223 * t2227)) + t33 * (-t2322 * t37 + t2224 * (-t2344 - t2345) + t2226 * (t3867 * t2237 - t2235)) - t3857;
t3918 = t34 * (-t2318 * t3856 * t148 + t2226 * (-0.2e1 * t2223 * t3262 + t2233 * t2321) + t26 * (t2218 * t2329 - t3857)) + t33 * (t2318 * t2338 * t168 + t2226 * (-t12 * t2324 * t2337 - 0.2e1 * t156 * t2223 * t2237 + t2236 + t2238) + t26 * (t12 * t2223 * t182 + t2352 * t2218 + t3867 * t2350)) - t2226 * (-t2226 * (-t2218 * t194 + t26 * t3856) * t12 + t12 * (t2364 * t2218 + t2344 * t2337) - t2223 * t207 * t206);
t3937 = t267 * t2218 * t266;
t4007 = t2318 * (t34 * t2491 + t33 * (-0.4e1 * t2498 * t280 + t14 * (0.2e1 * t2430 * t2213 - 0.2e1 * t2216 * t2436) + 0.2e1 * pkin(3) * (-t2445 * t2213 + t2216 * t2450)) + t3937 - 0.2e1 * t14 * pkin(3) * (-t2213 * t2461 + t2216 * t2465) + t2216 * (-0.2e1 * t2483 + t2484) + t2479 * t2213) + t2226 * (t34 * t3867 * t2224 * t2418 + t33 * (0.4e1 * t2422 * t2496 + t14 * (0.2e1 * t2507 * t2213 - 0.2e1 * t2216 * t2512) + 0.2e1 * t2216 * t2529 + 0.2e1 * t2523 * t2213) + t267 * t2223 * t2535 + t14 * (t2213 * t2547 + t2216 * t2554) + t2216 * t2568 + t2564 * t2213) + t34 * (-t3937 - 0.2e1 * t14 * (-t2576 * t2213 + t2216 * t2582) * t303 + t2216 * (0.2e1 * t2599 - t2601) - (t2212 * t2417 + t2593) * t2213) + t33 * (-t267 * t2223 * t2610 + t14 * (t2623 * t2213 + t2216 * t2631) + t2216 * (-t2212 * t2646 - t2652) + t2213 * t2648) + (t14 * t2223 * t2658 + t2667 * t2213 + t2216 * t2671) * t2211;
t4010 = t2736 * t2724;
t4011 = t12 * t4010;
t4021 = t26 * t2736;
t4027 = t34 * (t4011 + t20 * (-t2737 * t2731 + t2736 * t2740)) + t33 * (-t2835 * t37 + t2737 * (-t2857 - t2858) + t2739 * (t4021 * t2750 - t2748)) - t4011;
t4072 = t34 * (-t2831 * t4010 * t148 + t2739 * (-0.2e1 * t2736 * t3262 + t2746 * t2834) + t26 * (t2731 * t2842 - t4011)) + t33 * (t2831 * t2851 * t168 + t2739 * (-t12 * t2837 * t2850 - 0.2e1 * t156 * t2736 * t2750 + t2749 + t2751) + t26 * (t12 * t2736 * t182 + t2865 * t2731 + t4021 * t2863)) - t2739 * (-t2739 * (-t2731 * t194 + t26 * t4010) * t12 + t12 * (t2877 * t2731 + t2857 * t2850) - t2736 * t207 * t206);
t4091 = t267 * t2731 * t266;
t4161 = t2831 * (t34 * t3004 + t33 * (-0.4e1 * t3011 * t280 + t14 * (0.2e1 * t2943 * t2726 - 0.2e1 * t2729 * t2949) + 0.2e1 * pkin(3) * (-t2958 * t2726 + t2729 * t2963)) + t4091 - 0.2e1 * t14 * pkin(3) * (-t2726 * t2974 + t2729 * t2978) + t2729 * (-0.2e1 * t2996 + t2997) + t2992 * t2726) + t2739 * (t34 * t4021 * t2737 * t2931 + t33 * (0.4e1 * t2935 * t3009 + t14 * (0.2e1 * t3020 * t2726 - 0.2e1 * t2729 * t3025) + 0.2e1 * t2729 * t3042 + 0.2e1 * t3036 * t2726) + t267 * t2736 * t3048 + t14 * (t2726 * t3060 + t2729 * t3067) + t2729 * t3081 + t3077 * t2726) + t34 * (-t4091 - 0.2e1 * t14 * (-t3089 * t2726 + t2729 * t3095) * t303 + t2729 * (0.2e1 * t3112 - t3114) - (t2725 * t2930 + t3106) * t2726) + t33 * (-t267 * t2736 * t3123 + t14 * (t3136 * t2726 + t2729 * t3144) + t2729 * (-t2725 * t3159 - t3165) + t2726 * t3161) + (t14 * t2736 * t3171 + t3180 * t2726 + t2729 * t3184) * t2724;
t4165 = t146 * t91 * t3256 + t260 * t233 * t3302 + t670 * t3391 * t12 + t777 * t736 * t3411 + t874 * t850 * t3456 + t1183 * t3545 * t12 + t1290 * t1249 * t3565 + t1387 * t1363 * t3610 + t1696 * t3699 * t12 + t1803 * t1762 * t3719 + t1900 * t1876 * t3764 + t2209 * t3853 * t12 + t2316 * t2275 * t3873 + t2413 * t2389 * t3918 + t2722 * t4007 * t12 + t2829 * t2788 * t4027 + t2926 * t2902 * t4072 + t3235 * t4161 * t12 - g(2) * m(4);
t4169 = t79 - t185;
t4171 = t20 * t338;
t4174 = t34 * (t12 * t59 - t213) + t33 * (t12 * t4169 + t4171) + t213;
t4180 = 0.1e1 / (t67 + t33 * (pkin(1) * t26 * t4169 + t77) - t89);
t4184 = t149 * t3 * t206;
t4187 = t3 * t156;
t4190 = t204 * t36;
t4191 = t20 * t205;
t4199 = t156 * (-t36 * t20 + pkin(8));
t4203 = t12 * t207 * t26;
t4204 = t43 * t206;
t4208 = t34 * (-0.2e1 * t59 * t148 + t4184 + t4187) + t33 * (-t149 * t4191 * t4190 - 0.2e1 * t79 * t148 + t610 * t373 - pkin(8) + t4199) - t4184 + t27 * (t4204 * t171 + t4203) - t579 - t2 - qJ(3,1);
t4213 = 0.2e1 * t267 * pkin(9) * t425;
t4215 = t18 * t266 - t294;
t4216 = t14 * t4215;
t4218 = t33 * (-t4213 + t4216 + t415);
t4229 = t3 * t20;
t4239 = 0.2e1 * t14 * t333 * pkin(3);
t4251 = t26 * t12 * (-0.2e1 * t267 * t269 * t285 + t14 * (t36 * t4215 + t442) + t464 + t465);
t4252 = -t267 * t266;
t4266 = t156 * (t4213 + t14 * (-t18 * t266 + t294) - t415);
t4268 = t267 * t266 * t36;
t4271 = 0.2e1 * t16 * pkin(9) * t527;
t4284 = 0.2e1 * t149 * t204 * (-t3 * t194 + t4218) * t205 + t27 * (t34 * t204 * t24 * t205 * t276 + t33 * (-0.2e1 * t156 * t4229 * t171 + t433 * t20 - t213 * t610) + t156 * t24 * (t268 + t4239 - t350 + t349 - t352 + t353 + t263 - t354) - t4251 + t24 * (t4252 - t4239 + t350 - t349 + t352 - t353 - t263 + t354) + t3 * t74) - 0.2e1 * t34 * t4229 * t12 * t373 + t33 * (t4266 - t148 * (t36 * t275 + t4268 + t4271 - t558) * t24 - t4213 + t4216 + t415) + t4187 * t194 + t26 * t3 * t207 * t484 - (t227 + t46) * t43;
t4294 = 0.1e1 / (t27 * (t33 * t217 + t599 - t611) + t34 * t65 + t33 * (-t229 - t12 * (t73 + t75)) - t651);
t4301 = t724 - t811;
t4305 = t34 * (t12 * t710 - t834) + t33 * (t12 * t4301 + t4171) + t834;
t4311 = 0.1e1 / (t717 + t33 * (pkin(1) * t26 * t4301 + t722) - t734);
t4315 = t779 * t672 * t206;
t4318 = t672 * t156;
t4331 = t34 * (-0.2e1 * t710 * t148 + t4315 + t4318) + t33 * (-t779 * t4191 * t4190 - 0.2e1 * t724 * t148 + t610 * t953 - pkin(8) + t4199) - t4315 + t687 * (t4204 * t798 + t4203) - t1122 - t2 - qJ(3,2);
t4344 = t672 * t20;
t4376 = 0.2e1 * t779 * t204 * (-t672 * t194 + t4218) * t205 + t687 * (t34 * t204 * t685 * t205 * t879 + t33 * (-0.2e1 * t156 * t4344 * t798 + t1000 * t20 - t834 * t610) + t156 * t685 * (t268 + t4239 - t350 + t349 - t933 + t353 + t263 - t934) - t4251 + t685 * (t4252 - t4239 + t350 - t349 + t933 - t353 - t263 + t934) + t672 * t74) - 0.2e1 * t34 * t4344 * t12 * t953 + t33 * (t4266 - t148 * (t36 * t878 + t4268 + t4271 - t558) * t685 - t4213 + t4216 + t415) + t4318 * t194 + t26 * t672 * t207 * t1039 - (t845 + t698) * t43;
t4386 = 0.1e1 / (t687 * (t33 * t836 - t1142 + t599) + t34 * t715 + t33 * (-t846 - t12 * (t720 + t75)) - t1165);
t4393 = t1237 - t1324;
t4397 = t34 * (t12 * t1223 - t1347) + t33 * (t12 * t4393 + t4171) + t1347;
t4403 = 0.1e1 / (t1230 + t33 * (pkin(1) * t26 * t4393 + t1235) - t1247);
t4407 = t1292 * t1185 * t206;
t4410 = t1185 * t156;
t4423 = t34 * (-0.2e1 * t1223 * t148 + t4407 + t4410) + t33 * (-t1292 * t4191 * t4190 - 0.2e1 * t1237 * t148 + t610 * t1466 - pkin(8) + t4199) - t4407 + t1200 * (t4204 * t1311 + t4203) - t1635 - t2 - qJ(3,3);
t4436 = t1185 * t20;
t4468 = 0.2e1 * t1292 * t204 * (-t1185 * t194 + t4218) * t205 + t1200 * (t34 * t204 * t1198 * t205 * t1392 + t33 * (-0.2e1 * t156 * t4436 * t1311 - t1347 * t610 + t1513 * t20) + t156 * t1198 * (t268 + t4239 - t350 + t349 - t1446 + t353 + t263 - t1447) - t4251 + t1198 * (t4252 - t4239 + t350 - t349 + t1446 - t353 - t263 + t1447) + t1185 * t74) - 0.2e1 * t34 * t4436 * t12 * t1466 + t33 * (t4266 - t148 * (t36 * t1391 + t4268 + t4271 - t558) * t1198 - t4213 + t4216 + t415) + t4410 * t194 + t26 * t1185 * t207 * t1552 - (t1358 + t1211) * t43;
t4478 = 0.1e1 / (t1200 * (t33 * t1349 - t1655 + t599) + t34 * t1228 + t33 * (-t1359 - t12 * (t1233 + t75)) - t1678);
t4485 = t1750 - t1837;
t4489 = t34 * (t12 * t1736 - t1860) + t33 * (t12 * t4485 + t4171) + t1860;
t4495 = 0.1e1 / (t1743 + t33 * (pkin(1) * t26 * t4485 + t1748) - t1760);
t4499 = t1805 * t1698 * t206;
t4502 = t1698 * t156;
t4515 = t34 * (-0.2e1 * t1736 * t148 + t4499 + t4502) + t33 * (-t1805 * t4191 * t4190 - 0.2e1 * t1750 * t148 + t610 * t1979 - pkin(8) + t4199) - t4499 + t1713 * (t4204 * t1824 + t4203) - t2148 - t2 - qJ(3,4);
t4528 = t1698 * t20;
t4560 = 0.2e1 * t1805 * t204 * (-t1698 * t194 + t4218) * t205 + t1713 * (t34 * t204 * t1711 * t205 * t1905 + t33 * (-0.2e1 * t156 * t4528 * t1824 - t1860 * t610 + t2026 * t20) + t156 * t1711 * (t268 + t4239 - t350 + t349 - t1959 + t353 + t263 - t1960) - t4251 + t1711 * (t4252 - t4239 + t350 - t349 + t1959 - t353 - t263 + t1960) + t1698 * t74) - 0.2e1 * t34 * t4528 * t12 * t1979 + t33 * (t4266 - t148 * (t36 * t1904 + t4268 + t4271 - t558) * t1711 - t4213 + t4216 + t415) + t4502 * t194 + t26 * t1698 * t207 * t2065 - (t1871 + t1724) * t43;
t4570 = 0.1e1 / (t1713 * (t33 * t1862 - t2168 + t599) + t34 * t1741 + t33 * (-t1872 - t12 * (t1746 + t75)) - t2191);
t4577 = t2263 - t2350;
t4581 = t34 * (t12 * t2249 - t2373) + t33 * (t12 * t4577 + t4171) + t2373;
t4587 = 0.1e1 / (t2256 + t33 * (pkin(1) * t26 * t4577 + t2261) - t2273);
t4591 = t2318 * t2211 * t206;
t4594 = t2211 * t156;
t4607 = t34 * (-0.2e1 * t2249 * t148 + t4591 + t4594) + t33 * (-t2318 * t4191 * t4190 - 0.2e1 * t2263 * t148 + t610 * t2492 - pkin(8) + t4199) - t4591 + t2226 * (t4204 * t2337 + t4203) - t2661 - t2 - qJ(3,5);
t4620 = t2211 * t20;
t4652 = 0.2e1 * t2318 * t204 * (-t2211 * t194 + t4218) * t205 + t2226 * (t34 * t204 * t2224 * t205 * t2418 + t33 * (-0.2e1 * t156 * t4620 * t2337 + t2539 * t20 - t2373 * t610) + t156 * t2224 * (t268 + t4239 - t350 + t349 - t2472 + t353 + t263 - t2473) - t4251 + t2224 * (t4252 - t4239 + t350 - t349 + t2472 - t353 - t263 + t2473) + t2211 * t74) - 0.2e1 * t34 * t4620 * t12 * t2492 + t33 * (t4266 - t148 * (t36 * t2417 + t4268 + t4271 - t558) * t2224 - t4213 + t4216 + t415) + t4594 * t194 + t26 * t2211 * t207 * t2578 - (t2384 + t2237) * t43;
t4662 = 0.1e1 / (t2226 * (t33 * t2375 - t2681 + t599) + t34 * t2254 + t33 * (-t2385 - t12 * (t2259 + t75)) - t2704);
t4669 = t2776 - t2863;
t4673 = t34 * (t12 * t2762 - t2886) + t33 * (t12 * t4669 + t4171) + t2886;
t4679 = 0.1e1 / (t2769 + t33 * (pkin(1) * t26 * t4669 + t2774) - t2786);
t4683 = t2831 * t2724 * t206;
t4686 = t2724 * t156;
t4699 = t34 * (-0.2e1 * t2762 * t148 + t4683 + t4686) + t33 * (-t2831 * t4191 * t4190 - 0.2e1 * t2776 * t148 + t610 * t3005 - pkin(8) + t4199) - t4683 + t2739 * (t4204 * t2850 + t4203) - t3174 - t2 - qJ(3,6);
t4712 = t2724 * t20;
t4744 = 0.2e1 * t2831 * t204 * (-t2724 * t194 + t4218) * t205 + t2739 * (t34 * t204 * t2737 * t205 * t2931 + t33 * (-0.2e1 * t156 * t4712 * t2850 + t3052 * t20 - t2886 * t610) + t156 * t2737 * (t268 + t4239 - t350 + t349 - t2985 + t353 + t263 - t2986) - t4251 + t2737 * (t4252 - t4239 + t350 - t349 + t2985 - t353 - t263 + t2986) + t2724 * t74) - 0.2e1 * t34 * t4712 * t12 * t3005 + t33 * (t4266 - t148 * (t36 * t2930 + t4268 + t4271 - t558) * t2737 - t4213 + t4216 + t415) + t4686 * t194 + t26 * t2724 * t207 * t3091 - (t2897 + t2750) * t43;
t4754 = 0.1e1 / (t2739 * (t33 * t2888 - t3194 + t599) + t34 * t2767 + t33 * (-t2898 - t12 * (t2772 + t75)) - t3217);
t4759 = t146 * t4180 * t4174 + t260 * t233 * t4208 - t669 * m(3) * t4294 * t4284 + t777 * t4311 * t4305 + t874 * t850 * t4331 - t1182 * m(3) * t4386 * t4376 + t1290 * t4403 * t4397 + t1387 * t1363 * t4423 - t1695 * m(3) * t4478 * t4468 + t1803 * t4495 * t4489 + t1900 * t1876 * t4515 - t2208 * m(3) * t4570 * t4560 + t2316 * t4587 * t4581 + t2413 * t2389 * t4607 - t2721 * m(3) * t4662 * t4652 + t2829 * t4679 * t4673 + t2926 * t2902 * t4699 - t3234 * m(3) * t4754 * t4744 - g(3) * m(4);
t4760 = sin(xP(6));
t4762 = cos(xP(6));
t4764 = -koppelP(1,2) * t4760 + t4762 * koppelP(1,1);
t4765 = sin(xP(5));
t4767 = cos(xP(5));
t4768 = koppelP(1,3) * t4767;
t4769 = t4765 * t4764 - t4768;
t4770 = cos(xP(4));
t4772 = sin(xP(4));
t4775 = koppelP(1,1) * t4760 + t4762 * koppelP(1,2);
t4776 = t4775 * t4772;
t4777 = t4770 * t4769 - t4776;
t4781 = t4775 * t4770;
t4782 = t4772 * t4769 + t4781;
t4794 = t653 * t3391;
t4803 = -koppelP(2,2) * t4760 + t4762 * koppelP(2,1);
t4805 = koppelP(2,3) * t4767;
t4806 = t4765 * t4803 - t4805;
t4810 = koppelP(2,1) * t4760 + t4762 * koppelP(2,2);
t4811 = t4810 * t4772;
t4812 = t4770 * t4806 - t4811;
t4816 = t4810 * t4770;
t4817 = t4772 * t4806 + t4816;
t4829 = t1167 * t3545;
t4838 = -koppelP(3,2) * t4760 + t4762 * koppelP(3,1);
t4840 = koppelP(3,3) * t4767;
t4841 = t4765 * t4838 - t4840;
t4845 = koppelP(3,1) * t4760 + t4762 * koppelP(3,2);
t4846 = t4845 * t4772;
t4847 = t4770 * t4841 - t4846;
t4851 = t4845 * t4770;
t4852 = t4772 * t4841 + t4851;
t4864 = t1680 * t3699;
t4873 = -koppelP(4,2) * t4760 + t4762 * koppelP(4,1);
t4875 = koppelP(4,3) * t4767;
t4876 = t4765 * t4873 - t4875;
t4880 = koppelP(4,1) * t4760 + t4762 * koppelP(4,2);
t4881 = t4880 * t4772;
t4882 = t4770 * t4876 - t4881;
t4886 = t4880 * t4770;
t4887 = t4772 * t4876 + t4886;
t4899 = t2193 * t3853;
t4908 = -koppelP(5,2) * t4760 + t4762 * koppelP(5,1);
t4910 = koppelP(5,3) * t4767;
t4911 = t4765 * t4908 - t4910;
t4915 = koppelP(5,1) * t4760 + t4762 * koppelP(5,2);
t4916 = t4915 * t4772;
t4917 = t4770 * t4911 - t4916;
t4921 = t4915 * t4770;
t4922 = t4772 * t4911 + t4921;
t4934 = t2706 * t4007;
t4943 = -koppelP(6,2) * t4760 + t4762 * koppelP(6,1);
t4945 = koppelP(6,3) * t4767;
t4946 = t4765 * t4943 - t4945;
t4950 = koppelP(6,1) * t4760 + t4762 * koppelP(6,2);
t4951 = t4950 * t4772;
t4952 = t4770 * t4946 - t4951;
t4956 = t4950 * t4770;
t4957 = t4772 * t4946 + t4956;
t4969 = t3219 * t4161;
t4976 = t4765 * g(2);
t4978 = g(3) * mrSges(4,2);
t4981 = mrSges(4,2) * t4760;
t4989 = g(3) * t4765;
t4996 = t4760 * g(2);
t5002 = t146 * (t91 * t3256 * t4777 + t4180 * t4174 * t4782) + t260 * (t233 * t3302 * t4777 + t233 * t4208 * t4782) - t669 * m(3) * (-t4794 * t12 * t4777 + t4294 * t4284 * t4782) + t777 * (t736 * t3411 * t4812 + t4311 * t4305 * t4817) + t874 * (t850 * t3456 * t4812 + t850 * t4331 * t4817) - t1182 * m(3) * (-t4829 * t12 * t4812 + t4386 * t4376 * t4817) + t1290 * (t1249 * t3565 * t4847 + t4403 * t4397 * t4852) + t1387 * (t1363 * t3610 * t4847 + t1363 * t4423 * t4852) - t1695 * m(3) * (-t4864 * t12 * t4847 + t4478 * t4468 * t4852) + t1803 * (t1762 * t3719 * t4882 + t4495 * t4489 * t4887) + t1900 * (t1876 * t3764 * t4882 + t1876 * t4515 * t4887) - t2208 * m(3) * (-t4899 * t12 * t4882 + t4570 * t4560 * t4887) + t2316 * (t2275 * t3873 * t4917 + t4587 * t4581 * t4922) + t2413 * (t2389 * t3918 * t4917 + t2389 * t4607 * t4922) - t2721 * m(3) * (-t4934 * t12 * t4917 + t4662 * t4652 * t4922) + t2829 * (t2788 * t4027 * t4952 + t4679 * t4673 * t4957) + t2926 * (t2902 * t4072 * t4952 + t2902 * t4699 * t4957) - t3234 * m(3) * (-t4969 * t12 * t4952 + t4754 * t4744 * t4957) - t4770 * (t4762 * (mrSges(4,1) * t4976 + t4978) - t4981 * t4976 - mrSges(4,3) * t4767 * g(2) + t4760 * mrSges(4,1) * g(3)) + t4772 * (t4762 * (g(2) * mrSges(4,2) - mrSges(4,1) * t4989) + t4978 * t4760 * t4765 + mrSges(4,1) * t4996 + mrSges(4,3) * g(3) * t4767);
t5004 = -t4765 * t4764 + t4768;
t5006 = t4770 * t5004 + t4776;
t5009 = t4762 * t4767;
t5011 = t4760 * t4767;
t5014 = -koppelP(1,3) * t4765 - koppelP(1,1) * t5009 + koppelP(1,2) * t5011;
t5026 = t653 * t12;
t5034 = -t4765 * t4803 + t4805;
t5036 = t4770 * t5034 + t4811;
t5042 = -koppelP(2,3) * t4765 - koppelP(2,1) * t5009 + koppelP(2,2) * t5011;
t5054 = t1167 * t12;
t5062 = -t4765 * t4838 + t4840;
t5064 = t4770 * t5062 + t4846;
t5070 = -koppelP(3,3) * t4765 - koppelP(3,1) * t5009 + koppelP(3,2) * t5011;
t5082 = t1680 * t12;
t5090 = -t4765 * t4873 + t4875;
t5092 = t4770 * t5090 + t4881;
t5098 = -koppelP(4,3) * t4765 - koppelP(4,1) * t5009 + koppelP(4,2) * t5011;
t5109 = t146 * (t4180 * t4174 * t5014 + t91 * t57 * t5006) + t260 * (t233 * t212 * t5006 + t233 * t4208 * t5014) - t669 * m(3) * (t4294 * t4284 * t5014 - t5026 * t596 * t5006) + t777 * (t4311 * t4305 * t5042 + t736 * t709 * t5036) + t874 * (t850 * t4331 * t5042 + t850 * t833 * t5036) - t1182 * m(3) * (-t5054 * t1136 * t5036 + t4386 * t4376 * t5042) + t1290 * (t1249 * t1222 * t5064 + t4403 * t4397 * t5070) + t1387 * (t1363 * t1346 * t5064 + t1363 * t4423 * t5070) - t1695 * m(3) * (-t5082 * t1649 * t5064 + t4478 * t4468 * t5070) + t1803 * (t1762 * t1735 * t5092 + t4495 * t4489 * t5098) + t1900 * (t1876 * t1859 * t5092 + t1876 * t4515 * t5098);
t5111 = t2193 * t12;
t5119 = -t4765 * t4908 + t4910;
t5121 = t4770 * t5119 + t4916;
t5127 = -koppelP(5,3) * t4765 - koppelP(5,1) * t5009 + koppelP(5,2) * t5011;
t5139 = t2706 * t12;
t5147 = -t4765 * t4943 + t4945;
t5149 = t4770 * t5147 + t4951;
t5155 = -koppelP(6,3) * t4765 - koppelP(6,1) * t5009 + koppelP(6,2) * t5011;
t5167 = t3219 * t12;
t5176 = mrSges(4,1) * t4762 - t4981;
t5187 = g(1) * mrSges(4,1);
t5190 = -t2208 * m(3) * (-t5111 * t2162 * t5092 + t4570 * t4560 * t5098) + t2316 * (t2275 * t2248 * t5121 + t4587 * t4581 * t5127) + t2413 * (t2389 * t2372 * t5121 + t2389 * t4607 * t5127) - t2721 * m(3) * (-t5139 * t2675 * t5121 + t4662 * t4652 * t5127) + t2829 * (t2788 * t2761 * t5149 + t4679 * t4673 * t5155) + t2926 * (t2902 * t2885 * t5149 + t2902 * t4699 * t5155) - t3234 * m(3) * (-t5167 * t3188 * t5149 + t4754 * t4744 * t5155) - t4770 * (-t5176 * t4765 + mrSges(4,3) * t4767) * g(1) + t4767 * t5176 * g(3) - g(1) * mrSges(4,2) * t4772 * t4762 - t5187 * t4760 * t4772 + mrSges(4,3) * t4989;
t5193 = t4772 * t5004 - t4781;
t5214 = t4772 * t5034 - t4816;
t5235 = t4772 * t5062 - t4851;
t5256 = t4772 * t5090 - t4886;
t5269 = t146 * (-t91 * t3256 * t5014 + t91 * t57 * t5193) + t260 * (t233 * t212 * t5193 - t233 * t3302 * t5014) - t669 * m(3) * (t4794 * t12 * t5014 - t5026 * t596 * t5193) + t777 * (-t736 * t3411 * t5042 + t736 * t709 * t5214) + t874 * (-t850 * t3456 * t5042 + t850 * t833 * t5214) - t1182 * m(3) * (-t5054 * t1136 * t5214 + t4829 * t12 * t5042) + t1290 * (t1249 * t1222 * t5235 - t1249 * t3565 * t5070) + t1387 * (t1363 * t1346 * t5235 - t1363 * t3610 * t5070) - t1695 * m(3) * (t4864 * t12 * t5070 - t5082 * t1649 * t5235) + t1803 * (t1762 * t1735 * t5256 - t1762 * t3719 * t5098) + t1900 * (t1876 * t1859 * t5256 - t1876 * t3764 * t5098);
t5278 = t4772 * t5119 - t4921;
t5299 = t4772 * t5147 - t4956;
t5326 = t4765 * t4772;
t5338 = -t2208 * m(3) * (t4899 * t12 * t5098 - t5111 * t2162 * t5256) + t2316 * (t2275 * t2248 * t5278 - t2275 * t3873 * t5127) + t2413 * (t2389 * t2372 * t5278 - t2389 * t3918 * t5127) - t2721 * m(3) * (t4934 * t12 * t5127 - t5139 * t2675 * t5278) + t2829 * (t2788 * t2761 * t5299 - t2788 * t4027 * t5155) + t2926 * (t2902 * t2885 * t5299 - t2902 * t4072 * t5155) - t3234 * m(3) * (t4969 * t12 * t5155 - t5167 * t3188 * t5299) - t4767 * (mrSges(4,3) * t4772 * g(1) + t4762 * mrSges(4,1) * g(2) - mrSges(4,2) * t4996) + t4762 * (t4770 * mrSges(4,2) + mrSges(4,1) * t5326) * g(1) - mrSges(4,2) * g(1) * t4760 * t5326 + t5187 * t4760 * t4770 - mrSges(4,3) * t4976;
unknown(1,1) = t3238;
unknown(2,1) = t4165;
unknown(3,1) = t4759;
unknown(4,1) = t5002;
unknown(5,1) = t5109 + t5190;
unknown(6,1) = t5269 + t5338;
taugX  = unknown;
