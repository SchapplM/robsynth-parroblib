% Calculate inertia matrix for parallel robot
% P6RRPRRR14V3G8A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [1x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[dummy]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2020-03-12 23:36
% Revision: 0f11fd83bca0a8cdff505979e09e2c4d81033460 (2020-02-15)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(1,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [1 1]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: pkin has to be [1x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V3G8A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2020-03-12 23:32:57
% EndTime: 2020-03-12 23:32:59
% DurationCPUTime: 3.10s
% Computational Cost: add. (44919->1398), mult. (90957->2251), div. (5832->12), fcn. (103138->66), ass. (0->784)
unknown=NaN(6,6);
t1 = 0.1e1 / qJ(3,1);
t2 = sin(qJ(1,1));
t3 = cos(legFrame(1,3));
t5 = cos(qJ(1,1));
t6 = sin(legFrame(1,3));
t8 = t2 * t3 + t5 * t6;
t9 = t8 * t1;
t10 = cos(legFrame(1,2));
t11 = sin(qJ(2,1));
t12 = 0.1e1 / t11;
t13 = t12 * t10;
t14 = qJ(3,1) ^ 2;
t15 = (t14 * m(3));
t17 = 2 * mrSges(3,3) * qJ(3,1);
t19 = cos(qJ(2,1));
t20 = t19 ^ 2;
t27 = t20 * (-t15 - t17 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t19 * (mrSges(3,1) * qJ(3,1) + Ifges(2,4) - Ifges(3,5)) * t11 + t15 + t17 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t32 = -t2 * t6 + t3 * t5;
t35 = sin(legFrame(1,2));
t37 = t10 * t19 * t32 + t11 * t35;
t38 = t1 * t37;
t39 = Ifges(3,4) + Ifges(2,5);
t44 = t11 * t39 + (qJ(3,1) * mrSges(3,2) + Ifges(2,6) - Ifges(3,6)) * t19;
t49 = t10 * t11 * t32 - t19 * t35;
t52 = mrSges(3,2) * t11 * t49 - t13 * t27 * t9 + t38 * t44;
t55 = t12 * t10 * t8;
t59 = t15 + t17 + Ifges(3,2) + Ifges(2,3);
t62 = -t13 * t44 * t9 - mrSges(3,1) * t49 + t38 * t59;
t69 = -mrSges(3,2) * t10 * t9 + m(3) * t49 - mrSges(3,1) * t38;
t71 = 0.1e1 / qJ(3,2);
t72 = sin(qJ(1,2));
t73 = cos(legFrame(2,3));
t75 = cos(qJ(1,2));
t76 = sin(legFrame(2,3));
t78 = t72 * t73 + t75 * t76;
t79 = t78 * t71;
t80 = cos(legFrame(2,2));
t81 = sin(qJ(2,2));
t82 = 0.1e1 / t81;
t83 = t82 * t80;
t84 = qJ(3,2) ^ 2;
t85 = t84 * m(3);
t87 = 2 * mrSges(3,3) * qJ(3,2);
t89 = cos(qJ(2,2));
t90 = t89 ^ 2;
t97 = t90 * (-t85 - t87 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t89 * (mrSges(3,1) * qJ(3,2) + Ifges(2,4) - Ifges(3,5)) * t81 + t85 + t87 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t102 = -t72 * t76 + t73 * t75;
t105 = sin(legFrame(2,2));
t107 = t102 * t80 * t89 + t105 * t81;
t108 = t71 * t107;
t113 = t81 * t39 + (mrSges(3,2) * qJ(3,2) + Ifges(2,6) - Ifges(3,6)) * t89;
t118 = t102 * t80 * t81 - t105 * t89;
t121 = mrSges(3,2) * t118 * t81 - t79 * t83 * t97 + t108 * t113;
t124 = t82 * t80 * t78;
t128 = t85 + t87 + Ifges(3,2) + Ifges(2,3);
t131 = -t113 * t79 * t83 - mrSges(3,1) * t118 + t108 * t128;
t138 = -mrSges(3,2) * t79 * t80 + m(3) * t118 - mrSges(3,1) * t108;
t140 = 0.1e1 / qJ(3,3);
t141 = sin(qJ(1,3));
t142 = cos(legFrame(3,3));
t144 = cos(qJ(1,3));
t145 = sin(legFrame(3,3));
t147 = t141 * t142 + t144 * t145;
t148 = t147 * t140;
t149 = cos(legFrame(3,2));
t150 = sin(qJ(2,3));
t151 = 0.1e1 / t150;
t152 = t151 * t149;
t153 = qJ(3,3) ^ 2;
t154 = t153 * m(3);
t156 = 2 * mrSges(3,3) * qJ(3,3);
t158 = cos(qJ(2,3));
t159 = t158 ^ 2;
t166 = t159 * (-t154 - t156 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t158 * (mrSges(3,1) * qJ(3,3) + Ifges(2,4) - Ifges(3,5)) * t150 + t154 + t156 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t171 = -t141 * t145 + t142 * t144;
t174 = sin(legFrame(3,2));
t176 = t149 * t158 * t171 + t150 * t174;
t177 = t140 * t176;
t182 = t150 * t39 + (mrSges(3,2) * qJ(3,3) + Ifges(2,6) - Ifges(3,6)) * t158;
t187 = t149 * t150 * t171 - t158 * t174;
t190 = mrSges(3,2) * t150 * t187 - t148 * t152 * t166 + t177 * t182;
t193 = t151 * t149 * t147;
t197 = t154 + t156 + Ifges(3,2) + Ifges(2,3);
t200 = -t148 * t152 * t182 - mrSges(3,1) * t187 + t177 * t197;
t207 = -mrSges(3,2) * t148 * t149 + m(3) * t187 - mrSges(3,1) * t177;
t209 = 0.1e1 / qJ(3,4);
t210 = sin(qJ(1,4));
t211 = cos(legFrame(4,3));
t213 = cos(qJ(1,4));
t214 = sin(legFrame(4,3));
t216 = t210 * t211 + t213 * t214;
t217 = t216 * t209;
t218 = cos(legFrame(4,2));
t219 = sin(qJ(2,4));
t220 = 0.1e1 / t219;
t221 = t220 * t218;
t222 = qJ(3,4) ^ 2;
t223 = t222 * m(3);
t225 = 2 * mrSges(3,3) * qJ(3,4);
t227 = cos(qJ(2,4));
t228 = t227 ^ 2;
t235 = t228 * (-t223 - t225 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t227 * (mrSges(3,1) * qJ(3,4) + Ifges(2,4) - Ifges(3,5)) * t219 + t223 + t225 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t240 = -t210 * t214 + t211 * t213;
t243 = sin(legFrame(4,2));
t245 = t218 * t227 * t240 + t219 * t243;
t246 = t209 * t245;
t251 = t219 * t39 + (mrSges(3,2) * qJ(3,4) + Ifges(2,6) - Ifges(3,6)) * t227;
t256 = t218 * t219 * t240 - t227 * t243;
t259 = mrSges(3,2) * t219 * t256 - t217 * t221 * t235 + t246 * t251;
t262 = t220 * t218 * t216;
t266 = t223 + t225 + Ifges(3,2) + Ifges(2,3);
t269 = -t217 * t221 * t251 - mrSges(3,1) * t256 + t246 * t266;
t276 = -mrSges(3,2) * t217 * t218 + m(3) * t256 - mrSges(3,1) * t246;
t278 = 0.1e1 / qJ(3,5);
t279 = sin(qJ(1,5));
t280 = cos(legFrame(5,3));
t282 = cos(qJ(1,5));
t283 = sin(legFrame(5,3));
t285 = t279 * t280 + t282 * t283;
t286 = t285 * t278;
t287 = cos(legFrame(5,2));
t288 = sin(qJ(2,5));
t289 = 0.1e1 / t288;
t290 = t289 * t287;
t291 = qJ(3,5) ^ 2;
t292 = t291 * m(3);
t294 = 2 * mrSges(3,3) * qJ(3,5);
t296 = cos(qJ(2,5));
t297 = t296 ^ 2;
t304 = t297 * (-t292 - t294 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t296 * (mrSges(3,1) * qJ(3,5) + Ifges(2,4) - Ifges(3,5)) * t288 + t292 + t294 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t309 = -t279 * t283 + t280 * t282;
t312 = sin(legFrame(5,2));
t314 = t287 * t296 * t309 + t288 * t312;
t315 = t278 * t314;
t320 = t288 * t39 + (mrSges(3,2) * qJ(3,5) + Ifges(2,6) - Ifges(3,6)) * t296;
t325 = t287 * t288 * t309 - t296 * t312;
t328 = mrSges(3,2) * t288 * t325 - t286 * t290 * t304 + t315 * t320;
t331 = t289 * t287 * t285;
t335 = t292 + t294 + Ifges(3,2) + Ifges(2,3);
t338 = -t286 * t290 * t320 - mrSges(3,1) * t325 + t315 * t335;
t345 = -mrSges(3,2) * t286 * t287 + m(3) * t325 - mrSges(3,1) * t315;
t347 = 0.1e1 / qJ(3,6);
t348 = sin(qJ(1,6));
t349 = cos(legFrame(6,3));
t351 = cos(qJ(1,6));
t352 = sin(legFrame(6,3));
t354 = t348 * t349 + t351 * t352;
t355 = t354 * t347;
t356 = cos(legFrame(6,2));
t357 = sin(qJ(2,6));
t358 = 0.1e1 / t357;
t359 = t358 * t356;
t360 = qJ(3,6) ^ 2;
t361 = t360 * m(3);
t363 = 2 * mrSges(3,3) * qJ(3,6);
t365 = cos(qJ(2,6));
t366 = t365 ^ 2;
t373 = t366 * (-t361 - t363 - Ifges(2,1) - Ifges(3,1) + Ifges(2,2) + Ifges(3,3)) + 0.2e1 * t365 * (mrSges(3,1) * qJ(3,6) + Ifges(2,4) - Ifges(3,5)) * t357 + t361 + t363 + Ifges(2,1) + Ifges(3,1) + Ifges(1,3);
t378 = -t348 * t352 + t349 * t351;
t381 = sin(legFrame(6,2));
t383 = t356 * t365 * t378 + t357 * t381;
t384 = t347 * t383;
t389 = t357 * t39 + (mrSges(3,2) * qJ(3,6) + Ifges(2,6) - Ifges(3,6)) * t365;
t394 = t356 * t357 * t378 - t365 * t381;
t397 = mrSges(3,2) * t357 * t394 - t355 * t359 * t373 + t384 * t389;
t400 = t358 * t356 * t354;
t404 = t361 + t363 + Ifges(3,2) + Ifges(2,3);
t407 = -t355 * t359 * t389 - mrSges(3,1) * t394 + t384 * t404;
t414 = -mrSges(3,2) * t355 * t356 + m(3) * t394 - mrSges(3,1) * t384;
t416 = -t55 * t1 * t52 + t1 * t37 * t62 + t49 * t69 - t124 * t71 * t121 + t71 * t107 * t131 + t118 * t138 - t193 * t140 * t190 + t140 * t176 * t200 + t187 * t207 - t262 * t209 * t259 + t209 * t245 * t269 + t256 * t276 - t331 * t278 * t328 + t278 * t314 * t338 + t325 * t345 - t400 * t347 * t397 + t347 * t383 * t407 + t394 * t414 + m(4);
t417 = cos(legFrame(1,1));
t419 = sin(legFrame(1,1));
t422 = -t35 * t419 * t8 + t32 * t417;
t424 = t12 * t1;
t426 = t32 * t35;
t429 = t417 * t8 + t419 * t426;
t433 = -t10 * t11 * t419 + t19 * t429;
t439 = t10 * t19 * t419 + t11 * t429;
t441 = cos(legFrame(2,1));
t443 = sin(legFrame(2,1));
t446 = -t105 * t443 * t78 + t102 * t441;
t448 = t82 * t71;
t450 = t102 * t105;
t453 = t441 * t78 + t443 * t450;
t457 = -t443 * t80 * t81 + t453 * t89;
t463 = t443 * t80 * t89 + t453 * t81;
t465 = cos(legFrame(3,1));
t467 = sin(legFrame(3,1));
t470 = -t147 * t174 * t467 + t171 * t465;
t472 = t151 * t140;
t474 = t171 * t174;
t477 = t147 * t465 + t467 * t474;
t481 = -t149 * t150 * t467 + t158 * t477;
t487 = t149 * t158 * t467 + t150 * t477;
t489 = cos(legFrame(4,1));
t491 = sin(legFrame(4,1));
t494 = -t216 * t243 * t491 + t240 * t489;
t496 = t220 * t209;
t498 = t240 * t243;
t501 = t216 * t489 + t491 * t498;
t505 = -t218 * t219 * t491 + t227 * t501;
t511 = t218 * t227 * t491 + t219 * t501;
t513 = cos(legFrame(5,1));
t515 = sin(legFrame(5,1));
t518 = -t285 * t312 * t515 + t309 * t513;
t520 = t289 * t278;
t522 = t309 * t312;
t525 = t285 * t513 + t515 * t522;
t529 = -t287 * t288 * t515 + t296 * t525;
t535 = t287 * t296 * t515 + t288 * t525;
t537 = cos(legFrame(6,1));
t539 = sin(legFrame(6,1));
t542 = -t354 * t381 * t539 + t378 * t537;
t544 = t358 * t347;
t546 = t378 * t381;
t549 = t354 * t537 + t539 * t546;
t553 = -t356 * t357 * t539 + t365 * t549;
t559 = t356 * t365 * t539 + t357 * t549;
t561 = t424 * t422 * t52 + t1 * t433 * t62 + t439 * t69 + t448 * t446 * t121 + t71 * t457 * t131 + t463 * t138 + t472 * t470 * t190 + t140 * t481 * t200 + t487 * t207 + t496 * t494 * t259 + t209 * t505 * t269 + t511 * t276 + t520 * t518 * t328 + t278 * t529 * t338 + t535 * t345 + t544 * t542 * t397 + t347 * t553 * t407 + t559 * t414;
t565 = t35 * t417 * t8 + t32 * t419;
t570 = -t417 * t426 + t419 * t8;
t574 = t10 * t11 * t417 + t19 * t570;
t580 = -t10 * t19 * t417 + t11 * t570;
t585 = t105 * t441 * t78 + t102 * t443;
t590 = -t441 * t450 + t443 * t78;
t594 = t441 * t80 * t81 + t590 * t89;
t600 = -t441 * t80 * t89 + t590 * t81;
t605 = t147 * t174 * t465 + t171 * t467;
t610 = t147 * t467 - t465 * t474;
t614 = t149 * t150 * t465 + t158 * t610;
t620 = -t149 * t158 * t465 + t150 * t610;
t625 = t216 * t243 * t489 + t240 * t491;
t630 = t216 * t491 - t489 * t498;
t634 = t218 * t219 * t489 + t227 * t630;
t640 = -t218 * t227 * t489 + t219 * t630;
t645 = t285 * t312 * t513 + t309 * t515;
t650 = t285 * t515 - t513 * t522;
t654 = t287 * t288 * t513 + t296 * t650;
t660 = -t287 * t296 * t513 + t288 * t650;
t665 = t354 * t381 * t537 + t378 * t539;
t670 = t354 * t539 - t537 * t546;
t674 = t356 * t357 * t537 + t365 * t670;
t680 = -t356 * t365 * t537 + t357 * t670;
t682 = t424 * t565 * t52 + t1 * t574 * t62 + t580 * t69 + t448 * t585 * t121 + t71 * t594 * t131 + t600 * t138 + t472 * t605 * t190 + t140 * t614 * t200 + t620 * t207 + t496 * t625 * t259 + t209 * t634 * t269 + t640 * t276 + t520 * t645 * t328 + t278 * t654 * t338 + t660 * t345 + t544 * t665 * t397 + t347 * t674 * t407 + t680 * t414;
t683 = sin(xP(6));
t685 = cos(xP(6));
t687 = -t683 * koppelP(1,2) + t685 * koppelP(1,1);
t688 = sin(xP(5));
t690 = cos(xP(5));
t691 = koppelP(1,3) * t690;
t692 = t687 * t688 - t691;
t693 = cos(xP(4));
t695 = sin(xP(4));
t698 = t683 * koppelP(1,1) + t685 * koppelP(1,2);
t699 = t698 * t695;
t700 = t692 * t693 - t699;
t704 = t698 * t693;
t705 = t692 * t695 + t704;
t708 = t422 * t424 * t700 + t424 * t565 * t705;
t709 = t708 * t52;
t714 = t1 * t433 * t700 + t1 * t574 * t705;
t715 = t714 * t62;
t718 = t439 * t700 + t580 * t705;
t719 = t718 * t69;
t722 = -t683 * koppelP(2,2) + t685 * koppelP(2,1);
t724 = koppelP(2,3) * t690;
t725 = t688 * t722 - t724;
t729 = t683 * koppelP(2,1) + t685 * koppelP(2,2);
t730 = t729 * t695;
t731 = t693 * t725 - t730;
t735 = t729 * t693;
t736 = t695 * t725 + t735;
t739 = t446 * t448 * t731 + t448 * t585 * t736;
t740 = t739 * t121;
t745 = t457 * t71 * t731 + t594 * t71 * t736;
t746 = t745 * t131;
t749 = t463 * t731 + t600 * t736;
t750 = t749 * t138;
t753 = -t683 * koppelP(3,2) + t685 * koppelP(3,1);
t755 = koppelP(3,3) * t690;
t756 = t688 * t753 - t755;
t760 = t683 * koppelP(3,1) + t685 * koppelP(3,2);
t761 = t760 * t695;
t762 = t693 * t756 - t761;
t766 = t760 * t693;
t767 = t695 * t756 + t766;
t770 = t470 * t472 * t762 + t472 * t605 * t767;
t771 = t770 * t190;
t776 = t140 * t481 * t762 + t140 * t614 * t767;
t777 = t776 * t200;
t780 = t487 * t762 + t620 * t767;
t781 = t780 * t207;
t784 = -t683 * koppelP(4,2) + t685 * koppelP(4,1);
t786 = koppelP(4,3) * t690;
t787 = t688 * t784 - t786;
t791 = t683 * koppelP(4,1) + t685 * koppelP(4,2);
t792 = t791 * t695;
t793 = t693 * t787 - t792;
t797 = t791 * t693;
t798 = t695 * t787 + t797;
t801 = t494 * t496 * t793 + t496 * t625 * t798;
t802 = t801 * t259;
t807 = t209 * t505 * t793 + t209 * t634 * t798;
t808 = t807 * t269;
t811 = t511 * t793 + t640 * t798;
t812 = t811 * t276;
t815 = -t683 * koppelP(5,2) + t685 * koppelP(5,1);
t817 = koppelP(5,3) * t690;
t818 = t688 * t815 - t817;
t822 = t683 * koppelP(5,1) + t685 * koppelP(5,2);
t823 = t822 * t695;
t824 = t693 * t818 - t823;
t828 = t822 * t693;
t829 = t695 * t818 + t828;
t832 = t518 * t520 * t824 + t520 * t645 * t829;
t833 = t832 * t328;
t838 = t278 * t529 * t824 + t278 * t654 * t829;
t839 = t838 * t338;
t842 = t535 * t824 + t660 * t829;
t843 = t842 * t345;
t846 = -t683 * koppelP(6,2) + t685 * koppelP(6,1);
t848 = koppelP(6,3) * t690;
t849 = t688 * t846 - t848;
t853 = t683 * koppelP(6,1) + t685 * koppelP(6,2);
t854 = t853 * t695;
t855 = t693 * t849 - t854;
t859 = t853 * t693;
t860 = t695 * t849 + t859;
t863 = t542 * t544 * t855 + t544 * t665 * t860;
t864 = t863 * t397;
t869 = t347 * t553 * t855 + t347 * t674 * t860;
t870 = t869 * t407;
t873 = t559 * t855 + t680 * t860;
t874 = t873 * t414;
t875 = t709 + t715 + t719 + t740 + t746 + t750 + t771 + t777 + t781 + t802 + t808 + t812 + t833 + t839 + t843 + t864 + t870 + t874;
t877 = -t687 * t688 + t691;
t879 = t693 * t877 + t699;
t882 = t685 * t690;
t884 = t683 * t690;
t887 = -t688 * koppelP(1,3) - t882 * koppelP(1,1) + t884 * koppelP(1,2);
t890 = -t1 * t55 * t879 + t424 * t565 * t887;
t896 = t1 * t37 * t879 + t1 * t574 * t887;
t900 = t49 * t879 + t580 * t887;
t902 = t52 * t890 + t62 * t896 + t69 * t900;
t905 = t695 * t877 - t704;
t910 = -t1 * t55 * t905 - t422 * t424 * t887;
t916 = t1 * t37 * t905 - t1 * t433 * t887;
t920 = -t439 * t887 + t49 * t905;
t922 = t52 * t910 + t62 * t916 + t69 * t920;
t925 = -t688 * t722 + t724;
t927 = t693 * t925 + t730;
t933 = -t688 * koppelP(2,3) - t882 * koppelP(2,1) + t884 * koppelP(2,2);
t936 = -t124 * t71 * t927 + t448 * t585 * t933;
t942 = t107 * t71 * t927 + t594 * t71 * t933;
t946 = t118 * t927 + t600 * t933;
t948 = t121 * t936 + t131 * t942 + t138 * t946;
t951 = t695 * t925 - t735;
t956 = -t124 * t71 * t951 - t446 * t448 * t933;
t962 = t107 * t71 * t951 - t457 * t71 * t933;
t966 = t118 * t951 - t463 * t933;
t968 = t121 * t956 + t131 * t962 + t138 * t966;
t971 = -t688 * t753 + t755;
t973 = t693 * t971 + t761;
t979 = -t688 * koppelP(3,3) - t882 * koppelP(3,1) + t884 * koppelP(3,2);
t982 = -t140 * t193 * t973 + t472 * t605 * t979;
t988 = t140 * t176 * t973 + t140 * t614 * t979;
t992 = t187 * t973 + t620 * t979;
t994 = t190 * t982 + t200 * t988 + t207 * t992;
t997 = t695 * t971 - t766;
t1002 = -t140 * t193 * t997 - t470 * t472 * t979;
t1008 = t140 * t176 * t997 - t140 * t481 * t979;
t1012 = t187 * t997 - t487 * t979;
t1014 = t1002 * t190 + t1008 * t200 + t1012 * t207;
t1017 = -t688 * t784 + t786;
t1019 = t1017 * t693 + t792;
t1025 = -t688 * koppelP(4,3) - t882 * koppelP(4,1) + t884 * koppelP(4,2);
t1028 = -t1019 * t209 * t262 + t1025 * t496 * t625;
t1034 = t1019 * t209 * t245 + t1025 * t209 * t634;
t1038 = t1019 * t256 + t1025 * t640;
t1040 = t1028 * t259 + t1034 * t269 + t1038 * t276;
t1043 = t1017 * t695 - t797;
t1048 = -t1025 * t494 * t496 - t1043 * t209 * t262;
t1054 = -t1025 * t209 * t505 + t1043 * t209 * t245;
t1058 = -t1025 * t511 + t1043 * t256;
t1060 = t1048 * t259 + t1054 * t269 + t1058 * t276;
t1063 = -t688 * t815 + t817;
t1065 = t1063 * t693 + t823;
t1071 = -t688 * koppelP(5,3) - t882 * koppelP(5,1) + t884 * koppelP(5,2);
t1074 = -t1065 * t278 * t331 + t1071 * t520 * t645;
t1080 = t1065 * t278 * t314 + t1071 * t278 * t654;
t1084 = t1065 * t325 + t1071 * t660;
t1086 = t1074 * t328 + t1080 * t338 + t1084 * t345;
t1089 = t1063 * t695 - t828;
t1094 = -t1071 * t518 * t520 - t1089 * t278 * t331;
t1100 = -t1071 * t278 * t529 + t1089 * t278 * t314;
t1104 = -t1071 * t535 + t1089 * t325;
t1106 = t1094 * t328 + t1100 * t338 + t1104 * t345;
t1109 = -t688 * t846 + t848;
t1111 = t1109 * t693 + t854;
t1117 = -t688 * koppelP(6,3) - t882 * koppelP(6,1) + t884 * koppelP(6,2);
t1120 = -t1111 * t347 * t400 + t1117 * t544 * t665;
t1126 = t1111 * t347 * t383 + t1117 * t347 * t674;
t1130 = t1111 * t394 + t1117 * t680;
t1132 = t1120 * t397 + t1126 * t407 + t1130 * t414;
t1135 = t1109 * t695 - t859;
t1140 = -t1117 * t542 * t544 - t1135 * t347 * t400;
t1146 = -t1117 * t347 * t553 + t1135 * t347 * t383;
t1150 = -t1117 * t559 + t1135 * t394;
t1152 = t1140 * t397 + t1146 * t407 + t1150 * t414;
t1155 = mrSges(4,1) * t685 * t688;
t1156 = t683 * t688;
t1157 = mrSges(4,2) * t1156;
t1158 = mrSges(4,3) * t690;
t1159 = t1014 * t695 + t1040 * t693 + t1060 * t695 + t1086 * t693 + t1106 * t695 + t1132 * t693 + t1152 * t695 + t693 * t902 + t693 * t948 + t693 * t994 + t695 * t922 + t695 * t968 - t1155 + t1157 + t1158;
t1198 = t683 * mrSges(4,1) + t685 * mrSges(4,2);
t1200 = t688 * (t709 + t715 + t719) - t690 * t695 * t902 + t690 * t693 * t922 + t688 * (t740 + t746 + t750) - t690 * t695 * t948 + t690 * t693 * t968 + t688 * (t771 + t777 + t781) - t690 * t695 * t994 + t690 * t693 * t1014 + t688 * (t802 + t808 + t812) - t690 * t695 * t1040 + t690 * t693 * t1060 + t688 * (t833 + t839 + t843) - t690 * t695 * t1086 + t690 * t693 * t1106 + t688 * (t864 + t870 + t874) - t690 * t695 * t1132 + t690 * t693 * t1152 - t1198 * t690;
t1201 = t1 * t422;
t1202 = t27 * t12;
t1204 = t1 * t433;
t1208 = mrSges(3,2) * t11 * t439 + t1201 * t1202 + t1204 * t44;
t1211 = t44 * t12;
t1215 = -mrSges(3,1) * t439 + t1201 * t1211 + t1204 * t59;
t1221 = m(3) * t439 - mrSges(3,1) * t1204 + mrSges(3,2) * t1201;
t1223 = t71 * t446;
t1224 = t97 * t82;
t1226 = t71 * t457;
t1230 = mrSges(3,2) * t463 * t81 + t113 * t1226 + t1223 * t1224;
t1233 = t113 * t82;
t1237 = -mrSges(3,1) * t463 + t1223 * t1233 + t1226 * t128;
t1243 = m(3) * t463 - mrSges(3,1) * t1226 + mrSges(3,2) * t1223;
t1245 = t140 * t470;
t1246 = t166 * t151;
t1248 = t140 * t481;
t1252 = mrSges(3,2) * t150 * t487 + t1245 * t1246 + t1248 * t182;
t1255 = t182 * t151;
t1259 = -mrSges(3,1) * t487 + t1245 * t1255 + t1248 * t197;
t1265 = m(3) * t487 - mrSges(3,1) * t1248 + mrSges(3,2) * t1245;
t1267 = t209 * t494;
t1268 = t235 * t220;
t1270 = t209 * t505;
t1274 = mrSges(3,2) * t219 * t511 + t1267 * t1268 + t1270 * t251;
t1277 = t251 * t220;
t1281 = -mrSges(3,1) * t511 + t1267 * t1277 + t1270 * t266;
t1287 = m(3) * t511 - mrSges(3,1) * t1270 + mrSges(3,2) * t1267;
t1289 = t278 * t518;
t1290 = t304 * t289;
t1292 = t278 * t529;
t1296 = mrSges(3,2) * t288 * t535 + t1289 * t1290 + t1292 * t320;
t1299 = t320 * t289;
t1303 = -mrSges(3,1) * t535 + t1289 * t1299 + t1292 * t335;
t1309 = m(3) * t535 - mrSges(3,1) * t1292 + mrSges(3,2) * t1289;
t1311 = t347 * t542;
t1312 = t373 * t358;
t1314 = t347 * t553;
t1318 = mrSges(3,2) * t357 * t559 + t1311 * t1312 + t1314 * t389;
t1321 = t389 * t358;
t1325 = -mrSges(3,1) * t559 + t1311 * t1321 + t1314 * t404;
t1331 = m(3) * t559 - mrSges(3,1) * t1314 + mrSges(3,2) * t1311;
t1333 = -t55 * t1 * t1208 + t1 * t37 * t1215 + t49 * t1221 - t124 * t71 * t1230 + t71 * t107 * t1237 + t118 * t1243 - t193 * t140 * t1252 + t140 * t176 * t1259 + t187 * t1265 - t262 * t209 * t1274 + t209 * t245 * t1281 + t256 * t1287 - t331 * t278 * t1296 + t278 * t314 * t1303 + t325 * t1309 - t400 * t347 * t1318 + t347 * t383 * t1325 + t394 * t1331;
t1364 = t424 * t422 * t1208 + t1 * t433 * t1215 + t439 * t1221 + t448 * t446 * t1230 + t71 * t457 * t1237 + t463 * t1243 + t472 * t470 * t1252 + t140 * t481 * t1259 + t487 * t1265 + t496 * t494 * t1274 + t209 * t505 * t1281 + t511 * t1287 + t520 * t518 * t1296 + t278 * t529 * t1303 + t535 * t1309 + t544 * t542 * t1318 + t347 * t553 * t1325 + t559 * t1331 + m(4);
t1395 = t424 * t565 * t1208 + t1 * t574 * t1215 + t580 * t1221 + t448 * t585 * t1230 + t71 * t594 * t1237 + t600 * t1243 + t472 * t605 * t1252 + t140 * t614 * t1259 + t620 * t1265 + t496 * t625 * t1274 + t209 * t634 * t1281 + t640 * t1287 + t520 * t645 * t1296 + t278 * t654 * t1303 + t660 * t1309 + t544 * t665 * t1318 + t347 * t674 * t1325 + t680 * t1331;
t1396 = t708 * t1208;
t1397 = t714 * t1215;
t1398 = t718 * t1221;
t1399 = t739 * t1230;
t1400 = t745 * t1237;
t1401 = t749 * t1243;
t1402 = t770 * t1252;
t1403 = t776 * t1259;
t1404 = t780 * t1265;
t1405 = t801 * t1274;
t1406 = t807 * t1281;
t1407 = t811 * t1287;
t1408 = t832 * t1296;
t1409 = t838 * t1303;
t1410 = t842 * t1309;
t1411 = t863 * t1318;
t1412 = t869 * t1325;
t1413 = t873 * t1331;
t1414 = t1155 - t1157 - t1158;
t1415 = t693 * t1414;
t1416 = t1198 * t695;
t1417 = t1396 + t1397 + t1398 + t1399 + t1400 + t1401 + t1402 + t1403 + t1404 + t1405 + t1406 + t1407 + t1408 + t1409 + t1410 + t1411 + t1412 + t1413 + t1415 - t1416;
t1421 = t1208 * t890 + t1215 * t896 + t1221 * t900;
t1426 = t1208 * t910 + t1215 * t916 + t1221 * t920;
t1431 = t1230 * t936 + t1237 * t942 + t1243 * t946;
t1436 = t1230 * t956 + t1237 * t962 + t1243 * t966;
t1441 = t1252 * t982 + t1259 * t988 + t1265 * t992;
t1446 = t1002 * t1252 + t1008 * t1259 + t1012 * t1265;
t1451 = t1028 * t1274 + t1034 * t1281 + t1038 * t1287;
t1456 = t1048 * t1274 + t1054 * t1281 + t1058 * t1287;
t1461 = t1074 * t1296 + t1080 * t1303 + t1084 * t1309;
t1466 = t1094 * t1296 + t1100 * t1303 + t1104 * t1309;
t1471 = t1120 * t1318 + t1126 * t1325 + t1130 * t1331;
t1476 = t1140 * t1318 + t1146 * t1325 + t1150 * t1331;
t1478 = mrSges(4,1) * t882;
t1479 = mrSges(4,2) * t884;
t1480 = mrSges(4,3) * t688;
t1481 = t1478 - t1479 + t1480;
t1483 = t1421 * t693 + t1426 * t695 + t1431 * t693 + t1436 * t695 + t1441 * t693 + t1446 * t695 + t1451 * t693 + t1456 * t695 + t1461 * t693 + t1466 * t695 + t1471 * t693 + t1476 * t695 + t1481 * t695;
t1522 = -t683 * mrSges(4,2) + t685 * mrSges(4,1);
t1524 = t688 * t695;
t1526 = t688 * (t1396 + t1397 + t1398) - t690 * t695 * t1421 + t690 * t693 * t1426 + t688 * (t1399 + t1400 + t1401) - t690 * t695 * t1431 + t690 * t693 * t1436 + t688 * (t1402 + t1403 + t1404) - t690 * t695 * t1441 + t690 * t693 * t1446 + t688 * (t1405 + t1406 + t1407) - t690 * t695 * t1451 + t690 * t693 * t1456 + t688 * (t1408 + t1409 + t1410) - t690 * t695 * t1461 + t690 * t693 * t1466 + t688 * (t1411 + t1412 + t1413) - t690 * t695 * t1471 + t690 * t693 * t1476 + t693 * t1522 - t1198 * t1524;
t1527 = t1 * t565;
t1529 = t1 * t574;
t1533 = mrSges(3,2) * t11 * t580 + t1202 * t1527 + t1529 * t44;
t1539 = -mrSges(3,1) * t580 + t1211 * t1527 + t1529 * t59;
t1545 = m(3) * t580 - mrSges(3,1) * t1529 + mrSges(3,2) * t1527;
t1547 = t71 * t585;
t1549 = t71 * t594;
t1553 = mrSges(3,2) * t600 * t81 + t113 * t1549 + t1224 * t1547;
t1559 = -mrSges(3,1) * t600 + t1233 * t1547 + t128 * t1549;
t1565 = m(3) * t600 - mrSges(3,1) * t1549 + mrSges(3,2) * t1547;
t1567 = t140 * t605;
t1569 = t140 * t614;
t1573 = mrSges(3,2) * t150 * t620 + t1246 * t1567 + t1569 * t182;
t1579 = -mrSges(3,1) * t620 + t1255 * t1567 + t1569 * t197;
t1585 = m(3) * t620 - mrSges(3,1) * t1569 + mrSges(3,2) * t1567;
t1587 = t209 * t625;
t1589 = t209 * t634;
t1593 = mrSges(3,2) * t219 * t640 + t1268 * t1587 + t1589 * t251;
t1599 = -mrSges(3,1) * t640 + t1277 * t1587 + t1589 * t266;
t1605 = m(3) * t640 - mrSges(3,1) * t1589 + mrSges(3,2) * t1587;
t1607 = t278 * t645;
t1609 = t278 * t654;
t1613 = mrSges(3,2) * t288 * t660 + t1290 * t1607 + t1609 * t320;
t1619 = -mrSges(3,1) * t660 + t1299 * t1607 + t1609 * t335;
t1625 = m(3) * t660 - mrSges(3,1) * t1609 + mrSges(3,2) * t1607;
t1627 = t347 * t665;
t1629 = t347 * t674;
t1633 = mrSges(3,2) * t357 * t680 + t1312 * t1627 + t1629 * t389;
t1639 = -mrSges(3,1) * t680 + t1321 * t1627 + t1629 * t404;
t1645 = m(3) * t680 - mrSges(3,1) * t1629 + mrSges(3,2) * t1627;
t1647 = -t55 * t1 * t1533 + t1 * t37 * t1539 + t49 * t1545 - t124 * t71 * t1553 + t71 * t107 * t1559 + t118 * t1565 - t193 * t140 * t1573 + t140 * t176 * t1579 + t187 * t1585 - t262 * t209 * t1593 + t209 * t245 * t1599 + t256 * t1605 - t331 * t278 * t1613 + t278 * t314 * t1619 + t325 * t1625 - t400 * t347 * t1633 + t347 * t383 * t1639 + t394 * t1645;
t1678 = t424 * t422 * t1533 + t1 * t433 * t1539 + t439 * t1545 + t448 * t446 * t1553 + t71 * t457 * t1559 + t463 * t1565 + t472 * t470 * t1573 + t140 * t481 * t1579 + t487 * t1585 + t496 * t494 * t1593 + t209 * t505 * t1599 + t511 * t1605 + t520 * t518 * t1613 + t278 * t529 * t1619 + t535 * t1625 + t544 * t542 * t1633 + t347 * t553 * t1639 + t559 * t1645;
t1709 = t424 * t565 * t1533 + t1 * t574 * t1539 + t580 * t1545 + t448 * t585 * t1553 + t71 * t594 * t1559 + t600 * t1565 + t472 * t605 * t1573 + t140 * t614 * t1579 + t620 * t1585 + t496 * t625 * t1593 + t209 * t634 * t1599 + t640 * t1605 + t520 * t645 * t1613 + t278 * t654 * t1619 + t660 * t1625 + t544 * t665 * t1633 + t347 * t674 * t1639 + t680 * t1645 + m(4);
t1710 = t708 * t1533;
t1711 = t714 * t1539;
t1712 = t718 * t1545;
t1713 = t739 * t1553;
t1714 = t745 * t1559;
t1715 = t749 * t1565;
t1716 = t770 * t1573;
t1717 = t776 * t1579;
t1718 = t780 * t1585;
t1719 = t801 * t1593;
t1720 = t807 * t1599;
t1721 = t811 * t1605;
t1722 = t832 * t1613;
t1723 = t838 * t1619;
t1724 = t842 * t1625;
t1725 = t863 * t1633;
t1726 = t869 * t1639;
t1727 = t873 * t1645;
t1728 = t695 * t1414;
t1729 = t1198 * t693;
t1730 = t1710 + t1711 + t1712 + t1713 + t1714 + t1715 + t1716 + t1717 + t1718 + t1719 + t1720 + t1721 + t1722 + t1723 + t1724 + t1725 + t1726 + t1727 + t1728 + t1729;
t1734 = t1533 * t890 + t1539 * t896 + t1545 * t900;
t1739 = t1533 * t910 + t1539 * t916 + t1545 * t920;
t1744 = t1553 * t936 + t1559 * t942 + t1565 * t946;
t1749 = t1553 * t956 + t1559 * t962 + t1565 * t966;
t1754 = t1573 * t982 + t1579 * t988 + t1585 * t992;
t1759 = t1002 * t1573 + t1008 * t1579 + t1012 * t1585;
t1764 = t1028 * t1593 + t1034 * t1599 + t1038 * t1605;
t1769 = t1048 * t1593 + t1054 * t1599 + t1058 * t1605;
t1774 = t1074 * t1613 + t1080 * t1619 + t1084 * t1625;
t1779 = t1094 * t1613 + t1100 * t1619 + t1104 * t1625;
t1784 = t1120 * t1633 + t1126 * t1639 + t1130 * t1645;
t1789 = t1140 * t1633 + t1146 * t1639 + t1150 * t1645;
t1792 = -t1481 * t693 + t1734 * t693 + t1739 * t695 + t1744 * t693 + t1749 * t695 + t1754 * t693 + t1759 * t695 + t1764 * t693 + t1769 * t695 + t1774 * t693 + t1779 * t695 + t1784 * t693 + t1789 * t695;
t1832 = t688 * (t1710 + t1711 + t1712) - t690 * t695 * t1734 + t690 * t693 * t1739 + t688 * (t1713 + t1714 + t1715) - t690 * t695 * t1744 + t690 * t693 * t1749 + t688 * (t1716 + t1717 + t1718) - t690 * t695 * t1754 + t690 * t693 * t1759 + t688 * (t1719 + t1720 + t1721) - t690 * t695 * t1764 + t690 * t693 * t1769 + t688 * (t1722 + t1723 + t1724) - t690 * t695 * t1774 + t690 * t693 * t1779 + t688 * (t1725 + t1726 + t1727) - t690 * t695 * t1784 + t690 * t693 * t1789 + t693 * t1198 * t688 + t1522 * t695;
t1837 = mrSges(3,2) * t11 * t718 + t27 * t708 + t44 * t714;
t1843 = -mrSges(3,1) * t718 + t44 * t708 + t59 * t714;
t1850 = mrSges(3,2) * t11 * t708 + m(3) * t718 - mrSges(3,1) * t714;
t1856 = mrSges(3,2) * t749 * t81 + t113 * t745 + t739 * t97;
t1862 = -mrSges(3,1) * t749 + t113 * t739 + t128 * t745;
t1869 = mrSges(3,2) * t739 * t81 + m(3) * t749 - mrSges(3,1) * t745;
t1875 = mrSges(3,2) * t150 * t780 + t166 * t770 + t182 * t776;
t1881 = -mrSges(3,1) * t780 + t182 * t770 + t197 * t776;
t1888 = mrSges(3,2) * t150 * t770 + m(3) * t780 - mrSges(3,1) * t776;
t1894 = mrSges(3,2) * t219 * t811 + t235 * t801 + t251 * t807;
t1900 = -mrSges(3,1) * t811 + t251 * t801 + t266 * t807;
t1907 = mrSges(3,2) * t219 * t801 + m(3) * t811 - mrSges(3,1) * t807;
t1913 = mrSges(3,2) * t288 * t842 + t304 * t832 + t320 * t838;
t1919 = -mrSges(3,1) * t842 + t320 * t832 + t335 * t838;
t1926 = mrSges(3,2) * t288 * t832 + m(3) * t842 - mrSges(3,1) * t838;
t1932 = mrSges(3,2) * t357 * t873 + t373 * t863 + t389 * t869;
t1938 = -mrSges(3,1) * t873 + t389 * t863 + t404 * t869;
t1945 = mrSges(3,2) * t357 * t863 + m(3) * t873 - mrSges(3,1) * t869;
t1947 = -t55 * t1 * t1837 + t1 * t37 * t1843 + t49 * t1850 - t124 * t71 * t1856 + t71 * t107 * t1862 + t118 * t1869 - t193 * t140 * t1875 + t140 * t176 * t1881 + t187 * t1888 - t262 * t209 * t1894 + t209 * t245 * t1900 + t256 * t1907 - t331 * t278 * t1913 + t278 * t314 * t1919 + t325 * t1926 - t400 * t347 * t1932 + t347 * t383 * t1938 + t394 * t1945;
t1978 = t424 * t422 * t1837 + t1 * t433 * t1843 + t439 * t1850 + t448 * t446 * t1856 + t71 * t457 * t1862 + t463 * t1869 + t472 * t470 * t1875 + t140 * t481 * t1881 + t487 * t1888 + t496 * t494 * t1894 + t209 * t505 * t1900 + t511 * t1907 + t520 * t518 * t1913 + t278 * t529 * t1919 + t535 * t1926 + t544 * t542 * t1932 + t347 * t553 * t1938 + t559 * t1945 + t1415 - t1416;
t2009 = t424 * t565 * t1837 + t1 * t574 * t1843 + t580 * t1850 + t448 * t585 * t1856 + t71 * t594 * t1862 + t600 * t1869 + t472 * t605 * t1875 + t140 * t614 * t1881 + t620 * t1888 + t496 * t625 * t1894 + t209 * t634 * t1900 + t640 * t1907 + t520 * t645 * t1913 + t278 * t654 * t1919 + t660 * t1926 + t544 * t665 * t1932 + t347 * t674 * t1938 + t680 * t1945 + t1728 + t1729;
t2010 = t708 * t1837;
t2011 = t714 * t1843;
t2012 = t718 * t1850;
t2013 = t739 * t1856;
t2014 = t745 * t1862;
t2015 = t749 * t1869;
t2016 = t770 * t1875;
t2017 = t776 * t1881;
t2018 = t780 * t1888;
t2019 = t801 * t1894;
t2021 = t807 * t1900;
t2022 = t811 * t1907;
t2023 = t832 * t1913;
t2024 = t838 * t1919;
t2025 = t842 * t1926;
t2026 = t863 * t1932;
t2027 = t869 * t1938;
t2028 = t873 * t1945;
t2029 = Ifges(4,1) - Ifges(4,2);
t2030 = t685 ^ 2;
t2035 = -0.2e1 * Ifges(4,4) * t683 * t685 + t2029 * t2030 + Ifges(4,2) - Ifges(4,3);
t2036 = t690 ^ 2;
t2040 = Ifges(4,5) * t685 - Ifges(4,6) * t683;
t2044 = 0.2e1 * t2040 * t688 * t690 + t2035 * t2036 + Ifges(4,3) + t2021 + t2022 + t2023 + t2024 + t2025 + t2026 + t2027 + t2028;
t2049 = t1837 * t890 + t1843 * t896 + t1850 * t900;
t2054 = t1837 * t910 + t1843 * t916 + t1850 * t920;
t2059 = t1856 * t936 + t1862 * t942 + t1869 * t946;
t2064 = t1856 * t956 + t1862 * t962 + t1869 * t966;
t2069 = t1875 * t982 + t1881 * t988 + t1888 * t992;
t2074 = t1002 * t1875 + t1008 * t1881 + t1012 * t1888;
t2079 = t1028 * t1894 + t1034 * t1900 + t1038 * t1907;
t2084 = t1048 * t1894 + t1054 * t1900 + t1058 * t1907;
t2089 = t1074 * t1913 + t1080 * t1919 + t1084 * t1926;
t2094 = t1094 * t1913 + t1100 * t1919 + t1104 * t1926;
t2099 = t1120 * t1932 + t1126 * t1938 + t1130 * t1945;
t2104 = t1140 * t1932 + t1146 * t1938 + t1150 * t1945;
t2110 = t2029 * t683 * t685 + 0.2e1 * Ifges(4,4) * t2030 - Ifges(4,4);
t2114 = Ifges(4,5) * t683 + Ifges(4,6) * t685;
t2116 = t2049 * t693 + t2054 * t695 + t2059 * t693 + t2064 * t695 + t2069 * t693 + t2074 * t695 + t2079 * t693 + t2084 * t695 + t2089 * t693 + t2094 * t695 + t2099 * t693 + t2104 * t695 + t2110 * t690 + t2114 * t688;
t2157 = -t690 * t695 * t2079 + t690 * t693 * t2084 + t688 * (t2023 + t2024 + t2025) - t690 * t695 * t2089 + t690 * t693 * t2094 + t688 * (t2026 + t2027 + t2028) - t690 * t695 * t2099 + t690 * t693 * t2104 + Ifges(4,5) * t882 - Ifges(4,6) * t884 + Ifges(4,3) * t688;
t2163 = mrSges(3,2) * t11 * t900 + t27 * t890 + t44 * t896;
t2169 = -mrSges(3,1) * t900 + t44 * t890 + t59 * t896;
t2176 = mrSges(3,2) * t11 * t890 + m(3) * t900 - mrSges(3,1) * t896;
t2182 = mrSges(3,2) * t81 * t946 + t113 * t942 + t936 * t97;
t2188 = -mrSges(3,1) * t946 + t113 * t936 + t128 * t942;
t2195 = mrSges(3,2) * t81 * t936 + m(3) * t946 - mrSges(3,1) * t942;
t2201 = mrSges(3,2) * t150 * t992 + t166 * t982 + t182 * t988;
t2207 = -mrSges(3,1) * t992 + t182 * t982 + t197 * t988;
t2214 = mrSges(3,2) * t150 * t982 + m(3) * t992 - mrSges(3,1) * t988;
t2220 = mrSges(3,2) * t1038 * t219 + t1028 * t235 + t1034 * t251;
t2226 = -mrSges(3,1) * t1038 + t1028 * t251 + t1034 * t266;
t2233 = mrSges(3,2) * t1028 * t219 + m(3) * t1038 - mrSges(3,1) * t1034;
t2239 = mrSges(3,2) * t1084 * t288 + t1074 * t304 + t1080 * t320;
t2245 = -mrSges(3,1) * t1084 + t1074 * t320 + t1080 * t335;
t2252 = mrSges(3,2) * t1074 * t288 + m(3) * t1084 - mrSges(3,1) * t1080;
t2258 = mrSges(3,2) * t1130 * t357 + t1120 * t373 + t1126 * t389;
t2264 = -mrSges(3,1) * t1130 + t1120 * t389 + t1126 * t404;
t2271 = mrSges(3,2) * t1120 * t357 + m(3) * t1130 - mrSges(3,1) * t1126;
t2274 = -t55 * t1 * t2163 + t1 * t37 * t2169 + t49 * t2176 - t124 * t71 * t2182 + t71 * t107 * t2188 + t118 * t2195 - t193 * t140 * t2201 + t140 * t176 * t2207 + t187 * t2214 - t262 * t209 * t2220 + t209 * t245 * t2226 + t256 * t2233 - t331 * t278 * t2239 + t278 * t314 * t2245 + t325 * t2252 - t400 * t347 * t2258 + t347 * t383 * t2264 + t394 * t2271 - t693 * t1414 + t1416;
t2305 = t424 * t422 * t2163 + t1 * t433 * t2169 + t439 * t2176 + t448 * t446 * t2182 + t71 * t457 * t2188 + t463 * t2195 + t472 * t470 * t2201 + t140 * t481 * t2207 + t487 * t2214 + t496 * t494 * t2220 + t209 * t505 * t2226 + t511 * t2233 + t520 * t518 * t2239 + t278 * t529 * t2245 + t535 * t2252 + t544 * t542 * t2258 + t347 * t553 * t2264 + t559 * t2271;
t2337 = t209 * t2226 * t634 + t2239 * t520 * t645 + t2245 * t278 * t654 + t2258 * t544 * t665 + t2264 * t347 * t674 + t2233 * t640 + t2252 * t660 + t2271 * t680 - t1478 + t1479 - t1480;
t2339 = t708 * t2163;
t2340 = t714 * t2169;
t2341 = t718 * t2176;
t2342 = t739 * t2182;
t2343 = t745 * t2188;
t2344 = t749 * t2195;
t2345 = t770 * t2201;
t2346 = t776 * t2207;
t2347 = t780 * t2214;
t2348 = t801 * t2220;
t2349 = t807 * t2226;
t2350 = t2339 + t2340 + t2341 + t2342 + t2343 + t2344 + t2345 + t2346 + t2347 + t2348 + t2349;
t2351 = t811 * t2233;
t2352 = t832 * t2239;
t2353 = t838 * t2245;
t2354 = t842 * t2252;
t2355 = t863 * t2258;
t2356 = t869 * t2264;
t2357 = t873 * t2271;
t2363 = Ifges(4,4) * t693;
t2370 = -0.2e1 * Ifges(4,4) * t1524 + t2029 * t693;
t2378 = t688 * t693;
t2387 = t2351 + t2352 + t2353 + t2354 + t2355 + t2356 + t2357 - 0.2e1 * t2036 * t2040 * t695 + t690 * (t2030 * (t2029 * t688 * t695 + 0.2e1 * t2363) + t685 * t2370 * t683 + t695 * (Ifges(4,2) - Ifges(4,3)) * t688 - t2363) + t685 * (Ifges(4,5) * t695 + Ifges(4,6) * t2378) + (Ifges(4,5) * t2378 - Ifges(4,6) * t695) * t683;
t2392 = t2163 * t890 + t2169 * t896 + t2176 * t900;
t2397 = t2163 * t910 + t2169 * t916 + t2176 * t920;
t2402 = t2182 * t936 + t2188 * t942 + t2195 * t946;
t2407 = t2182 * t956 + t2188 * t962 + t2195 * t966;
t2412 = t2201 * t982 + t2207 * t988 + t2214 * t992;
t2417 = t1002 * t2201 + t1008 * t2207 + t1012 * t2214;
t2422 = t1028 * t2220 + t1034 * t2226 + t1038 * t2233;
t2427 = t1048 * t2220 + t1054 * t2226 + t1058 * t2233;
t2432 = t1074 * t2239 + t1080 * t2245 + t1084 * t2252;
t2437 = t1094 * t2239 + t1100 * t2245 + t1104 * t2252;
t2442 = t1120 * t2258 + t1126 * t2264 + t1130 * t2271;
t2447 = t1140 * t2258 + t1146 * t2264 + t1150 * t2271;
t2452 = -Ifges(4,6) * t690 + t1156 * t2029;
t2461 = -Ifges(4,4) * t688 - Ifges(4,5) * t884;
t2464 = t693 * t2392 + t695 * t2397 + t693 * t2402 + t695 * t2407 + t693 * t2412 + t695 * t2417 + t693 * t2422 + t695 * t2427 + t693 * t2432 + t695 * t2437 + t693 * t2442 + t695 * t2447 - t2030 * t2370 + t685 * (0.2e1 * Ifges(4,4) * t683 * t693 + t2452 * t695) + t695 * t2461 + Ifges(4,1) * t693;
t2505 = Ifges(4,5) * t685 * t688 - Ifges(4,6) * t1156 - Ifges(4,3) * t690;
t2508 = t688 * (t2339 + t2340 + t2341) - t690 * t695 * t2392 + t690 * t693 * t2397 + t688 * (t2342 + t2343 + t2344) - t690 * t695 * t2402 + t690 * t693 * t2407 + t688 * (t2345 + t2346 + t2347) - t690 * t695 * t2412 + t690 * t693 * t2417 + t688 * (t2348 + t2349 + t2351) - t690 * t695 * t2422 + t690 * t693 * t2427 + t688 * (t2352 + t2353 + t2354) - t690 * t695 * t2432 + t690 * t693 * t2437 + t688 * (t2355 + t2356 + t2357) - t690 * t695 * t2442 + t690 * t693 * t2447 + t695 * t2505 + t2114 * t693;
t2513 = mrSges(3,2) * t11 * t920 + t27 * t910 + t44 * t916;
t2519 = -mrSges(3,1) * t920 + t44 * t910 + t59 * t916;
t2526 = mrSges(3,2) * t11 * t910 + m(3) * t920 - mrSges(3,1) * t916;
t2532 = mrSges(3,2) * t81 * t966 + t113 * t962 + t956 * t97;
t2538 = -mrSges(3,1) * t966 + t113 * t956 + t128 * t962;
t2545 = mrSges(3,2) * t81 * t956 + m(3) * t966 - mrSges(3,1) * t962;
t2551 = mrSges(3,2) * t1012 * t150 + t1002 * t166 + t1008 * t182;
t2557 = -mrSges(3,1) * t1012 + t1002 * t182 + t1008 * t197;
t2564 = mrSges(3,2) * t1002 * t150 + m(3) * t1012 - mrSges(3,1) * t1008;
t2570 = mrSges(3,2) * t1058 * t219 + t1048 * t235 + t1054 * t251;
t2576 = -mrSges(3,1) * t1058 + t1048 * t251 + t1054 * t266;
t2583 = mrSges(3,2) * t1048 * t219 + m(3) * t1058 - mrSges(3,1) * t1054;
t2589 = mrSges(3,2) * t1104 * t288 + t1094 * t304 + t1100 * t320;
t2595 = -mrSges(3,1) * t1104 + t1094 * t320 + t1100 * t335;
t2602 = mrSges(3,2) * t1094 * t288 + m(3) * t1104 - mrSges(3,1) * t1100;
t2608 = mrSges(3,2) * t1150 * t357 + t1140 * t373 + t1146 * t389;
t2614 = -mrSges(3,1) * t1150 + t1140 * t389 + t1146 * t404;
t2621 = mrSges(3,2) * t1140 * t357 + m(3) * t1150 - mrSges(3,1) * t1146;
t2624 = -t55 * t1 * t2513 + t1 * t37 * t2519 + t49 * t2526 - t124 * t71 * t2532 + t71 * t107 * t2538 + t118 * t2545 - t193 * t140 * t2551 + t140 * t176 * t2557 + t187 * t2564 - t262 * t209 * t2570 + t209 * t245 * t2576 + t256 * t2583 - t331 * t278 * t2589 + t278 * t314 * t2595 + t325 * t2602 - t400 * t347 * t2608 + t347 * t383 * t2614 + t394 * t2621 - t695 * t1414 - t1729;
t2656 = t209 * t2576 * t505 + t2589 * t518 * t520 + t2595 * t278 * t529 + t2608 * t542 * t544 + t2614 * t347 * t553 + t2583 * t511 + t2602 * t535 + t2621 * t559 + t1478 - t1479 + t1480;
t2688 = t424 * t565 * t2513 + t1 * t574 * t2519 + t580 * t2526 + t448 * t585 * t2532 + t71 * t594 * t2538 + t600 * t2545 + t472 * t605 * t2551 + t140 * t614 * t2557 + t620 * t2564 + t496 * t625 * t2570 + t209 * t634 * t2576 + t640 * t2583 + t520 * t645 * t2589 + t278 * t654 * t2595 + t660 * t2602 + t544 * t665 * t2608 + t347 * t674 * t2614 + t680 * t2621;
t2689 = t708 * t2513;
t2690 = t714 * t2519;
t2691 = t718 * t2526;
t2692 = t739 * t2532;
t2693 = t745 * t2538;
t2694 = t749 * t2545;
t2695 = t770 * t2551;
t2696 = t776 * t2557;
t2697 = t780 * t2564;
t2698 = t801 * t2570;
t2699 = t807 * t2576;
t2700 = t2689 + t2690 + t2691 + t2692 + t2693 + t2694 + t2695 + t2696 + t2697 + t2698 + t2699;
t2701 = t811 * t2583;
t2702 = t832 * t2589;
t2703 = t838 * t2595;
t2704 = t842 * t2602;
t2705 = t863 * t2608;
t2706 = t869 * t2614;
t2707 = t873 * t2621;
t2718 = t2701 + t2702 + t2703 + t2704 + t2705 + t2706 + t2707 + 0.2e1 * t2036 * t2040 * t693 + t690 * (-t2035 * t688 * t693 + t2110 * t695) - t2040 * t693 + t2114 * t1524;
t2723 = t2513 * t890 + t2519 * t896 + t2526 * t900;
t2728 = t2513 * t910 + t2519 * t916 + t2526 * t920;
t2733 = t2532 * t936 + t2538 * t942 + t2545 * t946;
t2738 = t2532 * t956 + t2538 * t962 + t2545 * t966;
t2743 = t2551 * t982 + t2557 * t988 + t2564 * t992;
t2748 = t1002 * t2551 + t1008 * t2557 + t1012 * t2564;
t2753 = t1028 * t2570 + t1034 * t2576 + t1038 * t2583;
t2758 = t1048 * t2570 + t1054 * t2576 + t1058 * t2583;
t2763 = t1074 * t2589 + t1080 * t2595 + t1084 * t2602;
t2768 = t1094 * t2589 + t1100 * t2595 + t1104 * t2602;
t2773 = t1120 * t2608 + t1126 * t2614 + t1130 * t2621;
t2778 = t1140 * t2608 + t1146 * t2614 + t1150 * t2621;
t2793 = t693 * t2723 + t695 * t2728 + t693 * t2733 + t695 * t2738 + t693 * t2743 + t695 * t2748 + t693 * t2753 + t695 * t2758 + t693 * t2763 + t695 * t2768 + t693 * t2773 + t695 * t2778 + t2030 * (-0.2e1 * Ifges(4,4) * t2378 - t2029 * t695) + t685 * (0.2e1 * Ifges(4,4) * t683 * t695 - t2452 * t693) - t693 * t2461 + Ifges(4,1) * t695;
t2832 = t688 * (t2689 + t2690 + t2691) - t690 * t695 * t2723 + t690 * t693 * t2728 + t688 * (t2692 + t2693 + t2694) - t690 * t695 * t2733 + t690 * t693 * t2738 + t688 * (t2695 + t2696 + t2697) - t690 * t695 * t2743 + t690 * t693 * t2748 + t688 * (t2698 + t2699 + t2701) - t690 * t695 * t2753 + t690 * t693 * t2758 + t688 * (t2702 + t2703 + t2704) - t690 * t695 * t2763 + t690 * t693 * t2768 + t688 * (t2705 + t2706 + t2707) - t690 * t695 * t2773 + t690 * t693 * t2778 - t693 * t2505 + t2114 * t695;
unknown(1,1) = t416;
unknown(1,2) = t561;
unknown(1,3) = t682;
unknown(1,4) = t875;
unknown(1,5) = t1159;
unknown(1,6) = t1200;
unknown(2,1) = t1333;
unknown(2,2) = t1364;
unknown(2,3) = t1395;
unknown(2,4) = t1417;
unknown(2,5) = t1483;
unknown(2,6) = t1526;
unknown(3,1) = t1647;
unknown(3,2) = t1678;
unknown(3,3) = t1709;
unknown(3,4) = t1730;
unknown(3,5) = t1792;
unknown(3,6) = t1832;
unknown(4,1) = t1947;
unknown(4,2) = t1978;
unknown(4,3) = t2009;
unknown(4,4) = t2010 + t2011 + t2012 + t2013 + t2014 + t2015 + t2016 + t2017 + t2018 + t2019 + t2044;
unknown(4,5) = t2116;
unknown(4,6) = t688 * (t2010 + t2011 + t2012) - t690 * t695 * t2049 + t690 * t693 * t2054 + t688 * (t2013 + t2014 + t2015) - t690 * t695 * t2059 + t690 * t693 * t2064 + t688 * (t2016 + t2017 + t2018) - t690 * t695 * t2069 + t690 * t693 * t2074 + t688 * (t2019 + t2021 + t2022) + t2157;
unknown(5,1) = t2274;
unknown(5,2) = t2305;
unknown(5,3) = t1 * t2169 * t574 + t140 * t2207 * t614 + t2163 * t424 * t565 + t2182 * t448 * t585 + t2188 * t594 * t71 + t2201 * t472 * t605 + t2220 * t496 * t625 + t2176 * t580 + t2195 * t600 + t2214 * t620 + t2337;
unknown(5,4) = t2350 + t2387;
unknown(5,5) = t2464;
unknown(5,6) = t2508;
unknown(6,1) = t2624;
unknown(6,2) = t1 * t2519 * t433 + t140 * t2557 * t481 + t2513 * t422 * t424 + t2532 * t446 * t448 + t2538 * t457 * t71 + t2551 * t470 * t472 + t2570 * t494 * t496 + t2526 * t439 + t2545 * t463 + t2564 * t487 + t2656;
unknown(6,3) = t2688;
unknown(6,4) = t2700 + t2718;
unknown(6,5) = t2793;
unknown(6,6) = t2832;
MX  = unknown;
