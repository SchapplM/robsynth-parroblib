% Calculate minimal parameter regressor of vector of centrifugal and coriolis load for parallel robot
% P6RRPRRR14V4G7A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,alpha3,alpha4,d1,d4,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x24]
%   minimal parameter regressor of vector of coriolis and centrifugal joint torques
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-04 05:41
% Revision: e482436b586c4f286726c907c195760c5ac72455 (2022-11-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin(xP, xDP, qJ, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(7,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_tauCreg_matlab.m
% OptimizationMode: 2
% StartTime: 2022-11-04 01:15:27
% EndTime: 2022-11-04 02:35:31
% DurationCPUTime: 5748.69s
% Computational Cost: add. (59687185->5098), mult. (153861076->8799), div. (307728->48), fcn. (112022975->48), ass. (0->3127)
t11115 = sin(pkin(7));
t10247 = t11115 * pkin(2);
t8804 = sin(pkin(4));
t8806 = cos(pkin(7));
t10582 = t8804 * t8806;
t10251 = pkin(6) * t10582;
t8617 = -t10247 + t10251;
t8808 = cos(pkin(3));
t10792 = t8617 * t8808;
t8807 = cos(pkin(4));
t8750 = t8807 * pkin(6);
t8729 = t8750 + qJ(3,6);
t8805 = sin(pkin(3));
t11193 = t8729 * t8805 + t10792;
t11116 = t8806 * pkin(2);
t11117 = pkin(6) * t8804;
t9654 = t11115 * t11117;
t8676 = t9654 + pkin(1);
t8594 = t8676 + t11116;
t8815 = cos(qJ(2,6));
t8541 = t8815 * t8594;
t8809 = sin(qJ(2,6));
t11328 = t11193 * t8809 + t8541;
t11351 = 0.1e1 / t11328;
t8707 = 0.1e1 / t8729;
t8708 = 0.1e1 / t8729 ^ 2;
t8709 = t8707 * t8708;
t11386 = t11351 * t8709;
t8730 = t8750 + qJ(3,5);
t11194 = t8730 * t8805 + t10792;
t8817 = cos(qJ(2,5));
t8542 = t8817 * t8594;
t8811 = sin(qJ(2,5));
t11327 = t11194 * t8811 + t8542;
t11352 = 0.1e1 / t11327;
t8710 = 0.1e1 / t8730;
t8711 = 0.1e1 / t8730 ^ 2;
t8712 = t8710 * t8711;
t11385 = t11352 * t8712;
t8731 = t8750 + qJ(3,4);
t11195 = t8731 * t8805 + t10792;
t8819 = cos(qJ(2,4));
t8543 = t8819 * t8594;
t8813 = sin(qJ(2,4));
t11326 = t11195 * t8813 + t8543;
t11353 = 0.1e1 / t11326;
t8713 = 0.1e1 / t8731;
t8714 = 0.1e1 / t8731 ^ 2;
t8715 = t8713 * t8714;
t11384 = t11353 * t8715;
t8735 = t8750 + qJ(3,3);
t11196 = t8735 * t8805 + t10792;
t8833 = cos(qJ(2,3));
t8547 = t8833 * t8594;
t8827 = sin(qJ(2,3));
t11325 = t11196 * t8827 + t8547;
t11354 = 0.1e1 / t11325;
t8720 = 0.1e1 / t8735;
t8721 = 0.1e1 / t8735 ^ 2;
t8722 = t8720 * t8721;
t11383 = t11354 * t8722;
t8736 = t8750 + qJ(3,2);
t11197 = t8736 * t8805 + t10792;
t8835 = cos(qJ(2,2));
t8548 = t8835 * t8594;
t8829 = sin(qJ(2,2));
t11324 = t11197 * t8829 + t8548;
t11355 = 0.1e1 / t11324;
t8723 = 0.1e1 / t8736;
t8724 = 0.1e1 / t8736 ^ 2;
t8725 = t8723 * t8724;
t11382 = t11355 * t8725;
t8737 = t8750 + qJ(3,1);
t11198 = t8737 * t8805 + t10792;
t8837 = cos(qJ(2,1));
t8549 = t8837 * t8594;
t8831 = sin(qJ(2,1));
t11323 = t11198 * t8831 + t8549;
t11356 = 0.1e1 / t11323;
t8726 = 0.1e1 / t8737;
t8727 = 0.1e1 / t8737 ^ 2;
t8728 = t8726 * t8727;
t11381 = t11356 * t8728;
t10757 = t8707 * t8815;
t11362 = t11351 * t10757;
t10544 = t8808 * t8809;
t10576 = t8805 * t8809;
t8608 = t8729 * t10576;
t9332 = t10544 * t8617 + t8608;
t9156 = t8541 + t9332;
t8099 = 0.1e1 / t9156;
t10969 = t8099 * t8707;
t8810 = sin(qJ(1,6));
t8563 = t8810 * t8617;
t8816 = cos(qJ(1,6));
t8659 = t8816 * t8729;
t8324 = -t8563 * t8809 + t8659;
t8791 = t8808 ^ 2;
t11213 = -t8324 * t8791 + t8659;
t8656 = t8810 * t8729;
t8325 = -t8617 * t8816 - t8656 * t8809;
t7987 = (t8325 * t8805 - t8541 * t8810) * t8808 - t11213;
t10079 = t7987 * t10969;
t10570 = t8805 * t8815;
t8544 = t8594 * t8809;
t8315 = -t8729 * t10570 + t8544;
t8821 = legFrame(6,2);
t8769 = cos(t8821);
t10910 = t8315 * t8769;
t10699 = t8769 * t8815;
t10011 = t8617 * t10699;
t10525 = t8809 * t8816;
t8330 = t10525 * t8617 + t8656;
t8763 = sin(t8821);
t10897 = t8330 * t8763;
t11350 = -(t10011 + t10897) * t8791 + t8763 * t8656;
t10511 = t8815 * t8816;
t11244 = t8809 * t8659 - t8563;
t8067 = t8594 * t10511 + t11244 * t8805;
t7928 = (-t8067 * t8763 + t10910) * t8808 + t11350;
t10090 = t7928 * t10969;
t10719 = t8763 * t8815;
t11266 = (-t8617 * t10719 + t8330 * t8769) * t8791 - t8769 * t8656;
t8276 = t8763 * t8315;
t7927 = (t8067 * t8769 + t8276) * t8808 + t11266;
t10091 = t7927 * t10969;
t8795 = t8815 ^ 2;
t9319 = t8594 * t8805;
t10041 = t8795 * t9319;
t10577 = t8805 * t8808;
t8848 = xP(5);
t8782 = sin(t8848);
t8847 = xP(6);
t8784 = cos(t8847);
t10674 = t8782 * t8784;
t10791 = t8617 * t8809;
t8841 = xDP(4);
t8862 = koppelP(6,2);
t10452 = t8841 * t8862;
t8840 = xDP(5);
t8868 = koppelP(6,1);
t10458 = t8840 * t8868;
t8785 = cos(t8848);
t8684 = t8785 * t10458;
t8576 = t8684 - t10452;
t8849 = xP(4);
t8786 = cos(t8849);
t10839 = t8576 * t8786;
t8839 = xDP(6);
t8643 = t8782 * t8841 + t8839;
t8781 = sin(t8847);
t11253 = t8781 * t8643;
t8856 = koppelP(6,3);
t10626 = t8785 * t8856;
t9784 = t8841 * t10626;
t8304 = t11253 * t8862 + t9784;
t8783 = sin(t8849);
t10919 = t8304 * t8783;
t10635 = t8784 * t8868;
t11309 = t8643 * t10635 - t8304;
t8843 = xDP(2);
t10470 = t8840 * t8856;
t10477 = t8839 * t8868;
t10446 = t8841 * t8868;
t10464 = t8840 * t8862;
t8569 = t10464 * t8785 + t10446;
t8223 = t8569 * t8781 + (t10477 * t8781 - t10470) * t8782;
t9674 = -t8782 * t8839 - t8841;
t8461 = t8862 * t9674 + t8684;
t8999 = t8461 * t8784 - t8223;
t7957 = t11309 * t8786 + t8999 * t8783 + t8843;
t10987 = t7957 * t8763;
t10730 = t8729 * t8809;
t10614 = t8786 * t8810;
t10483 = t8839 * t8862;
t9888 = t8785 * t10483;
t9479 = t8769 * t9888;
t8232 = t10614 * t8576 - t8816 * t9479;
t9882 = t8785 * t10477;
t9478 = t8769 * t9882;
t8235 = t10614 * t8569 + t8816 * t9478;
t10610 = t8786 * t8816;
t9235 = t8810 * t9478;
t8238 = t10610 * t8569 - t9235;
t8241 = t10610 * t8576 + t8810 * t9479;
t8842 = xDP(3);
t10434 = t8842 * t8810;
t8844 = xDP(1);
t8621 = t8785 * t10470 + t8844;
t10784 = t8621 * t8769;
t8401 = t10784 * t8816 - t10434;
t9997 = t8810 * t10784;
t8404 = t8816 * t8842 + t9997;
t9831 = t8810 * t10477;
t9933 = t8769 * t10464;
t8431 = t8786 * t9831 - t8816 * t9933;
t9477 = t8810 * t9933;
t9857 = t8786 * t10477;
t8432 = t8816 * t9857 + t9477;
t9863 = t8786 * t10483;
t9932 = t8769 * t10458;
t8433 = t8810 * t9932 - t8816 * t9863;
t9832 = t8810 * t10483;
t8434 = t8786 * t9832 + t8816 * t9932;
t9851 = t8786 * t10470;
t10644 = t8783 * t8868;
t9990 = t8643 * t10644;
t11153 = ((t10730 * t8431 + t8432 * t8617) * t8781 + t8325 * t9851) * t8782 - (t10730 * t8232 - (t10730 * t8434 - t8433 * t8617) * t8782 + t8241 * t8617 + t8325 * t9990) * t8784 - t10730 * t8401 + t10919 * t8325 + t10987 * t11244 + (t10730 * t8235 + t8238 * t8617) * t8781 + t8404 * t8617;
t10035 = t8594 * t10576;
t8499 = t8617 * t10577;
t8650 = t8729 * t8791;
t11184 = t8650 - t8499 - t8729;
t11169 = -t10035 * t8815 - t11184 * t8795 - t8729;
t8516 = t10458 * t8782 + t9888;
t11176 = t8781 * (t10464 * t8782 - t9882) - t8516 * t8784 + t8621;
t11202 = t8842 - t10919;
t9162 = t8784 * t9888 - t8621;
t7771 = -(t8434 * t10674 + (t8769 * t9162 + t10987) * t8816 + (t8431 * t8782 + t8235) * t8781 + ((t9990 - t10839) * t8784 - t8782 * t9851 + t11202) * t8810) * t10041 + (t11153 * t8791 + (-t7957 * t10897 + (t8324 * t9990 + (-t10791 * t8434 - t8433 * t8729) * t8782 + t8232 * t10791 - t8241 * t8729) * t8784 - t8324 * t10919 + ((-t10791 * t8431 + t8432 * t8729) * t8781 - t8324 * t9851) * t8782 + (-t10791 * t8235 + t8238 * t8729) * t8781 + t8401 * t10791 + t8729 * t8404) * t10577 - t11153) * t8815 - t11169 * (t11176 * t8763 + t7957 * t8769);
t11014 = t7771 * t11351;
t10158 = t8815 * t11014;
t10161 = t8805 * t11014;
t10162 = t8708 * t11014;
t11374 = t11351 * t8707;
t10163 = t7771 * t11374;
t10003 = t8805 * t8563;
t8554 = t8805 * t8617;
t10004 = t8786 * t8554;
t10005 = t8783 * t8554;
t10023 = t8617 * t10784;
t10440 = t8842 * t8729;
t10620 = t8785 * t8868;
t10660 = t8782 * t8868;
t10666 = t8782 * t8862;
t10701 = t8769 * t8729;
t10785 = t8617 * t8842;
t10793 = t8617 * t8783;
t10838 = t8576 * t8810;
t10840 = t8576 * t8769;
t10851 = t8569 * t8786;
t10852 = t8569 * t8769;
t8557 = t9784 * t8786 - t8843;
t10858 = t8557 * t8769;
t8312 = t8541 + t8608;
t10913 = t8312 * t8816;
t11170 = t8784 * (t8461 * t8783 + t9857) - t8223 * t8783 - t8557;
t9486 = t8841 * t10004;
t8056 = t8315 * t8840 - t8810 * t9486;
t10510 = t8815 * t8840;
t10595 = t8786 * t8841;
t9875 = t8810 * t10595;
t8270 = -t10510 * t8617 + t8729 * t9875;
t8292 = t8541 * t10784;
t8500 = t8842 * t8554;
t8913 = t8810 * t11170;
t8938 = t8786 * (t10483 * t8782 - t8576) + t9990;
t8968 = t8769 * t8516;
t8950 = t8810 * t8968;
t10594 = t8786 * t8862;
t9246 = t10011 * t10594;
t9247 = t8617 * t9478;
t9935 = t8769 * t10477;
t9423 = t8815 * t9935;
t9445 = t8809 * t9832;
t9830 = t8810 * t10470;
t9453 = t8786 * t9830;
t9459 = t8810 * t9784;
t9485 = t8617 * t9857;
t9487 = t8840 * t10004;
t9493 = t8617 * t9933;
t9527 = t8315 * t9935;
t9936 = t8769 * t10483;
t9528 = t8315 * t9936;
t9529 = t10595 * t10910;
t9811 = t8815 * t10483;
t9828 = t8810 * t10446;
t9829 = t8810 * t10452;
t10523 = t8810 * t8862;
t9874 = t8786 * t10523;
t9894 = t8815 * t10620;
t9930 = t8769 * t10446;
t9934 = t8769 * t10470;
t7711 = ((-t8270 * t8782 * t10635 + (-t10525 * t7957 + t8815 * t9162) * t8617 - t8729 * t8913 + (t8270 * t10666 - t8839 * (-t8617 * t9894 - t8729 * t9874)) * t8781) * t8763 + ((-t10791 * t8968 + t8729 * t8938) * t8784 - t8729 * t10919 + ((t8729 * t9857 + t8809 * t9493) * t8781 - t8729 * t9851) * t8782 + (t10851 * t8729 - t8809 * t9247) * t8781 + t8809 * t10023 + t10440) * t8816 + (-t8729 * t8950 + (-((-t8769 * t9811 + t8809 * t9828) * t8782 + t8809 * t9831 + t8576 * t10699) * t8783 + ((-t8815 * t9930 - t9445) * t8782 + t8809 * t10838 - t9423) * t8786) * t8617) * t8784 + (((t8809 * t9829 + t9423) * t8781 - t8815 * t9934) * t8782 + (t10699 * t8569 + t9445) * t8781 + t8809 * t9459) * t10793 + (((t8729 * t9933 - t8809 * t9485) * t8810 + t8841 * t9246) * t8781 + t9453 * t10791) * t8782 + ((-t10791 * t10851 - t8729 * t9478) * t8810 + t8839 * t9246) * t8781 + (t10701 * t8621 - t10785 * t8809) * t8810 + t8557 * t10011) * t8791 + ((-t7957 * t10913 + (-t10660 * t8056 - t8315 * t9888) * t8784 + t8315 * t8621 + t11170 * t10003 + (t8056 * t10666 - (t10620 * t8315 + t8554 * t9874) * t8839) * t8781) * t8763 + ((-t8312 * t8968 - t8554 * t8938) * t8784 + t8304 * t10005 + ((t8312 * t9933 - t8805 * t9485) * t8781 + t8856 * t9487) * t8782 + (-t10004 * t8569 - t8312 * t9478) * t8781 + t8608 * t10784 + t8292 - t8500) * t8816 + (((-t8312 * t9828 - t9528) * t8782 - t8312 * t9831 + t8315 * t10840) * t8783 + ((-t8312 * t9863 + t8554 * t9932) * t8810 + t8868 * t9529) * t8782 + (t10839 * t8312 + t8554 * t9479) * t8810 + t8786 * t9527) * t8784 + (((t8312 * t9829 - t9527) * t8781 + t8315 * t9934) * t8782 + (-t10852 * t8315 + t8312 * t9832) * t8781 + t8312 * t9459) * t8783 + (((-t8312 * t9857 - t8805 * t9493) * t8810 - t8862 * t9529) * t8781 + t8312 * t9453) * t8782 + ((-t10851 * t8312 + t8805 * t9247) * t8810 - t8786 * t9528) * t8781 + (-t8842 * t8541 + (-t10440 * t8809 - t10023) * t8805) * t8810 - t8315 * t10858) * t8808 - t8729 * ((t11309 * t8783 - t8999 * t8786 + t8842) * t8816 + (t11176 * t8769 - t10987) * t8810);
t11026 = t7711 * t8099;
t10205 = t8815 * t11026;
t10206 = t8809 * t11026;
t10210 = t8707 * t11026;
t10294 = 0.2e1 * t8804;
t8850 = qJ(3,6) ^ 2;
t8875 = pkin(2) ^ 2;
t10308 = t8850 - t8875;
t10611 = t8786 * t8815;
t10683 = t8781 * t8785;
t10700 = t8769 * t8809;
t10808 = t8594 * t8843;
t10814 = t8594 * t8810;
t10822 = t8594 * t8769;
t10874 = t11193 * t8815;
t10932 = t11328 * t8816;
t8651 = t8729 * t8808;
t11238 = t8651 - t8554;
t11252 = t8781 * t8782;
t8036 = -t10510 * t11193 + t11238 * t9875;
t8259 = t11193 * t9936;
t8475 = t8594 * t9832;
t8478 = t8594 * t9831;
t9419 = t8594 * t9935;
t9429 = t11193 * t9831;
t9499 = t8594 * t9936;
t9510 = t11193 * t9832;
t9511 = t11193 * t9935;
t9931 = t8769 * t10452;
t7789 = (-t7957 * t10932 + t11176 * t8544 + (t11193 * t8785 * t9811 - t10660 * t8036) * t8784 - t8621 * t10874 - t11238 * t8913 + (t8036 * t10666 - t8839 * (-t11193 * t9894 - t11238 * t9874)) * t8781) * t8763 + (t11193 * t11176 * t10700 + t8292 + (t11252 * t9933 - t8784 * t8968) * t8541 + (t8938 * t8784 + (t8781 * t9857 - t9851) * t8782 + t10851 * t8781 + t11202) * t11238) * t8816 + (-t11193 * t10434 + t8769 * t10808 + (((-t11193 * t9828 - t9499) * t8782 - t9429 + t8576 * t10822) * t8784 + ((t11193 * t9829 - t9419) * t8781 + t8594 * t9934) * t8782 + (-t10822 * t8569 + t9510) * t8781 + t11193 * t9459) * t8783 + (((t8594 * t9930 - t9510) * t8782 + t11193 * t10838 + t9419) * t8784 - ((t8594 * t9931 + t9429) * t8781 - t11193 * t9830) * t8782 - (t11193 * t8569 * t8810 + t9499) * t8781 - t9784 * t10822) * t8786) * t8809 - t11238 * t8950 * t8784 + ((-(-t11193 * t9931 + t8478) * t10611 + t11238 * t9477) * t8781 + t9453 * t8541) * t8782 + (-(t10814 * t8569 - t8259) * t10611 - t11238 * t9235) * t8781 + t11238 * t9997 + (-t9419 * t10683 * t8816 + (-((t8594 * t9828 - t8259) * t8782 + t8478 + t11193 * t10840) * t8783 + (-(t11193 * t9930 + t8475) * t8782 - t9511 + t8576 * t10814) * t8786) * t8784 + (((t8594 * t9829 + t9511) * t8781 - t11193 * t9934) * t8782 + (t10852 * t11193 + t8475) * t8781 + t8594 * t9459) * t8783 - t10434 * t8594 + t10858 * t11193) * t8815;
t11005 = t7789 * t8707;
t7788 = pkin(2) * t11005;
t8874 = pkin(6) ^ 2;
t8751 = t8874 * t8807 ^ 2;
t9406 = t11115 * t11026;
t9199 = t8707 * t9406;
t10343 = t8809 * t9199 * t8751 + t7788;
t8752 = pkin(1) * t11115;
t8668 = t8752 + t11117;
t9618 = t8707 * t10206;
t9318 = pkin(2) * t9618;
t7645 = t8668 * t9318;
t7780 = t8676 * t11005;
t10346 = t7645 + t7780;
t10297 = -0.2e1 * t8750;
t11150 = 0.2e1 * pkin(2);
t9617 = t8707 * t10205;
t7666 = qJ(3,6) * t9617;
t9400 = t11115 * t11014;
t9193 = t8707 * t9400;
t9082 = qJ(3,6) * t9193;
t9150 = pkin(2) * t9193;
t10352 = (t7666 - t9150) * t10297 + t9082 * t11150;
t9145 = pkin(2) * t9199;
t7660 = t8815 * t9145;
t7735 = qJ(3,6) * t10163;
t7582 = t7660 + t7735;
t9660 = pkin(2) * t10206;
t10299 = -0.2e1 * t11117;
t9750 = t8805 * t10299;
t10358 = ((t10163 * t8750 + t7582) * t9750 + t9660) * t8806 + t8676 * t10206;
t10545 = t8807 * t8874;
t10816 = t8594 * t8791;
t11003 = t7789 * t8809;
t10758 = t8707 * t8809;
t11041 = (t10161 * t8668 - t11115 * t7789) * t10758;
t11141 = -0.2e1 * t8729;
t11142 = 0.2e1 * t8617;
t10551 = t8806 * t8815;
t11220 = pkin(2) * t10551 + t8676 * t8815;
t11226 = 0.2e1 * qJ(3,6) * t7660 + 0.2e1 * t7582 * t8750;
t10302 = t8874 - t8875;
t8741 = pkin(1) * t11117;
t8607 = t10302 * t11115 + t8741;
t11232 = t11115 * t8751 - t8607;
t9615 = t8807 * t10205;
t9749 = -0.2e1 * t10251;
t8788 = t8806 ^ 2;
t10761 = t8707 * t8788;
t8690 = t8751 - t10302;
t9978 = t8690 * t10761;
t11281 = (t7666 + (-pkin(2) * t9400 + pkin(6) * t9615) * t8707) * t9749 + t9978 * t11014 + t11226 + (t10308 + t8751) * t10163;
t9447 = t8805 * t10206;
t9297 = t8707 * t9447;
t7639 = t8676 * t9297;
t7657 = pkin(2) * t9297;
t9666 = t11014 * t11117;
t7510 = (-t8707 * t9666 + t7657) * t8806 + t7639 + t9150;
t9386 = -0.2e1 * t9666;
t7564 = (pkin(2) * t10576 * t9386 + t11026 * t8690) * t10761;
t11128 = -0.2e1 * t8805;
t9187 = t9660 * t11117;
t7565 = (-t11014 * t8690 + t11128 * t9187) * t10761;
t10298 = 0.2e1 * t11117;
t7654 = t9145 * t10298;
t7723 = t8676 * t10163;
t10760 = t8707 * t8804;
t7783 = t7789 * pkin(6) * t10760;
t10628 = t8785 * t8839;
t8601 = t8781 * t8868 + t8784 * t8862;
t8534 = t8786 * t8601;
t10681 = t8781 * t8862;
t8595 = -t10635 + t10681;
t9206 = t8595 * t8782 + t10626;
t11341 = -t9206 * t8783 + t8534;
t10938 = t11341 * t8841;
t11287 = t8601 * t8783 + t8786 * t9206;
t10939 = t11287 * t8841;
t10652 = t8783 * t8840;
t10675 = t8782 * t8783;
t10672 = t8782 * t8856;
t8413 = t8595 * t8785 - t10672;
t7970 = -t10652 * t8413 - (t10675 * t8601 + t8595 * t8786) * t8839 - t10939;
t10596 = t8786 * t8840;
t7971 = -t10596 * t8413 - (t8534 * t8782 - t8595 * t8783) * t8839 - t10938;
t10627 = t8785 * t8841;
t8473 = -t10596 * t8782 - t10627 * t8783;
t8474 = -t10595 * t8785 + t10652 * t8782;
t7825 = (t11287 * t8474 - t11341 * t8473) * t8839 + ((-t7971 - t10938) * t8786 + (-t7970 - t10939) * t8783) * t8840 + (-t7970 * t8786 + t7971 * t8783) * t10628;
t8127 = t10628 * t8601 - t8840 * t9206;
t11320 = t8127 * t8786;
t11321 = t8127 * t8783;
t8365 = t10620 * t8784 - t10681 * t8785 + t10672;
t7858 = t7971 * t8841 + (t10595 * t8365 - t11321) * t8840 + (t7971 * t8782 + t8365 * t8473 + (-t11287 * t8840 - t11320) * t8785) * t8839;
t10651 = t8783 * t8841;
t7859 = t7970 * t8841 + (t10651 * t8365 + t11320) * t8840 + (t7970 * t8782 - t8365 * t8474 + (t11341 * t8840 - t11321) * t8785) * t8839;
t10322 = qJ(3,6) * t10297 - t8850;
t10768 = t8690 * t8788;
t11322 = 0.2e1 * t11116;
t8876 = pkin(1) ^ 2;
t10301 = t8874 + t8876;
t8677 = 0.2e1 * pkin(1) * t9654;
t9771 = t8677 + t10301;
t9123 = t11322 * t8676 + t10768 - 0.2e1 * t8751 + t9771;
t8108 = t9123 + t10322;
t10323 = t11322 * t9654 + t10768;
t10767 = (pkin(2) + t8729) * (-pkin(2) + t8729);
t8220 = t10323 + t10767;
t8790 = t8808 * t8791;
t9200 = -t8751 - t10768;
t9263 = t10161 * t10767;
t11151 = -0.2e1 * pkin(2);
t10300 = t8676 * t11151;
t9392 = t10300 * t11014;
t10759 = t8707 * t8806;
t11250 = -0.2e1 * t7645 - t7780;
t9312 = t8805 * t9654;
t9060 = t9312 * t11014;
t9565 = t8690 * t10161;
t9620 = t11232 * t10206;
t9413 = (-0.4e1 * t9187 - t9565) * t10761 + (0.2e1 * t9620 + pkin(2) * (-0.2e1 * t9060 + t7789)) * t10759 - t11250;
t10159 = t8809 * t11014;
t9446 = t8594 * t10159;
t9564 = t8707 * t10161;
t10208 = t8805 * t11026;
t9616 = t8795 * t10208;
t10209 = t8795 * t11026;
t9619 = t8707 * t10209;
t10160 = t8806 * t11014;
t9672 = pkin(2) * t10160;
t10282 = 0.2e1 * t11014;
t9706 = t8617 * t10282;
t9770 = t8850 + t10301;
t7390 = t7825 * t10091 + t7858 * t10090 + t7859 * t10079 - (t11281 * t8790 + (t10358 + (t10352 + (-t10308 + t9200) * t9617) * t8805) * t8791 + (t7565 + (t10343 * t8805 + (t9392 + (-t8607 * t10576 + (pkin(6) * qJ(3,6) + t10545) * t8815 * t10294) * t11026) * t8707) * t8806 + t10346 * t8805 - (t8677 + t9770) * t10163 - t11226) * t8808 - t8315 * t11026) / (t9332 + t11220) * t10162 + (-(-(t8220 * t9617 + t9706) * t8815 * t8790 + (t9616 * t11142 + (-t8707 * t9263 + t9413) * t8815 + t9446) * t8791 + (-t8108 * t9619 + t7510 * t8815 * t11141 + t7564 + ((t11232 * t9564 + t7783) * t8809 + t7654) * t8806 + (-pkin(2) * t10210 + t11041) * pkin(2)) * t8808 - t8729 * (-t8805 * t10158 + t7723 * t8809 + (t8809 * t9672 + (t11026 * t8617 - t11003) * t8805) * t8707)) * t11026 - (t9447 + (t10205 * t10816 + (t10161 * t8594 + t10206 * t8617) * t8808) * t8707) * t7789) * t8099 * t8708;
t11380 = t7390 * t11362;
t10751 = t8710 * t8817;
t11361 = t11352 * t10751;
t10542 = t8808 * t8811;
t10574 = t8805 * t8811;
t8609 = t8730 * t10574;
t9331 = t10542 * t8617 + t8609;
t9155 = t8542 + t9331;
t8102 = 0.1e1 / t9155;
t10967 = t8102 * t8710;
t8812 = sin(qJ(1,5));
t8564 = t8812 * t8617;
t8818 = cos(qJ(1,5));
t8660 = t8818 * t8730;
t8326 = -t8564 * t8811 + t8660;
t11212 = -t8326 * t8791 + t8660;
t8657 = t8812 * t8730;
t8327 = -t8617 * t8818 - t8657 * t8811;
t7988 = (t8327 * t8805 - t8542 * t8812) * t8808 - t11212;
t10078 = t7988 * t10967;
t10568 = t8805 * t8817;
t8545 = t8594 * t8811;
t8316 = -t8730 * t10568 + t8545;
t8822 = legFrame(5,2);
t8770 = cos(t8822);
t10909 = t8316 * t8770;
t10696 = t8770 * t8817;
t10010 = t8617 * t10696;
t10520 = t8811 * t8818;
t8334 = t10520 * t8617 + t8657;
t8764 = sin(t8822);
t10896 = t8334 * t8764;
t11349 = -(t10010 + t10896) * t8791 + t8764 * t8657;
t10509 = t8817 * t8818;
t11243 = t8811 * t8660 - t8564;
t8068 = t8594 * t10509 + t11243 * t8805;
t7930 = (-t8068 * t8764 + t10909) * t8808 + t11349;
t10088 = t7930 * t10967;
t10716 = t8764 * t8817;
t11267 = (-t8617 * t10716 + t8334 * t8770) * t8791 - t8770 * t8657;
t8277 = t8764 * t8316;
t7929 = (t8068 * t8770 + t8277) * t8808 + t11267;
t10089 = t7929 * t10967;
t8796 = t8817 ^ 2;
t10040 = t8796 * t9319;
t10790 = t8617 * t8811;
t8863 = koppelP(5,2);
t10451 = t8841 * t8863;
t8869 = koppelP(5,1);
t10457 = t8840 * t8869;
t8685 = t8785 * t10457;
t8578 = t8685 - t10451;
t10836 = t8578 * t8786;
t8857 = koppelP(5,3);
t10625 = t8785 * t8857;
t9783 = t8841 * t10625;
t8305 = t11253 * t8863 + t9783;
t10918 = t8305 * t8783;
t10634 = t8784 * t8869;
t11308 = t8643 * t10634 - t8305;
t10469 = t8840 * t8857;
t10476 = t8839 * t8869;
t10445 = t8841 * t8869;
t10463 = t8840 * t8863;
t8570 = t10463 * t8785 + t10445;
t8224 = t8570 * t8781 + (t10476 * t8781 - t10469) * t8782;
t8462 = t8863 * t9674 + t8685;
t8998 = t8462 * t8784 - t8224;
t7958 = t11308 * t8786 + t8998 * t8783 + t8843;
t10986 = t7958 * t8764;
t10728 = t8730 * t8811;
t10613 = t8786 * t8812;
t10482 = t8839 * t8863;
t9887 = t8785 * t10482;
t9476 = t8770 * t9887;
t8233 = t10613 * t8578 - t8818 * t9476;
t9881 = t8785 * t10476;
t9475 = t8770 * t9881;
t8236 = t10613 * t8570 + t8818 * t9475;
t10608 = t8786 * t8818;
t9234 = t8812 * t9475;
t8239 = t10608 * t8570 - t9234;
t8242 = t10608 * t8578 + t8812 * t9476;
t10433 = t8842 * t8812;
t8622 = t8785 * t10469 + t8844;
t10783 = t8622 * t8770;
t8402 = t10783 * t8818 - t10433;
t9996 = t8812 * t10783;
t8405 = t8818 * t8842 + t9996;
t9823 = t8812 * t10476;
t9926 = t8770 * t10463;
t8435 = t8786 * t9823 - t8818 * t9926;
t9474 = t8812 * t9926;
t9856 = t8786 * t10476;
t8436 = t8818 * t9856 + t9474;
t9862 = t8786 * t10482;
t9925 = t8770 * t10457;
t8437 = t8812 * t9925 - t8818 * t9862;
t9824 = t8812 * t10482;
t8438 = t8786 * t9824 + t8818 * t9925;
t9850 = t8786 * t10469;
t10643 = t8783 * t8869;
t9989 = t8643 * t10643;
t11154 = ((t10728 * t8435 + t8436 * t8617) * t8781 + t8327 * t9850) * t8782 - (t10728 * t8233 - (t10728 * t8438 - t8437 * t8617) * t8782 + t8242 * t8617 + t8327 * t9989) * t8784 - t10728 * t8402 + t10918 * t8327 + t10986 * t11243 + (t10728 * t8236 + t8239 * t8617) * t8781 + t8405 * t8617;
t10034 = t8594 * t10574;
t8652 = t8730 * t8791;
t11183 = t8652 - t8499 - t8730;
t11168 = -t10034 * t8817 - t11183 * t8796 - t8730;
t8517 = t10457 * t8782 + t9887;
t11177 = t8781 * (t10463 * t8782 - t9881) - t8517 * t8784 + t8622;
t11203 = t8842 - t10918;
t9161 = t8784 * t9887 - t8622;
t7772 = -(t8438 * t10674 + (t8770 * t9161 + t10986) * t8818 + (t8435 * t8782 + t8236) * t8781 + ((t9989 - t10836) * t8784 - t8782 * t9850 + t11203) * t8812) * t10040 + (t11154 * t8791 + (-t7958 * t10896 + (t8326 * t9989 + (-t10790 * t8438 - t8437 * t8730) * t8782 + t8233 * t10790 - t8730 * t8242) * t8784 - t8326 * t10918 + ((-t10790 * t8435 + t8436 * t8730) * t8781 - t8326 * t9850) * t8782 + (-t10790 * t8236 + t8239 * t8730) * t8781 + t8402 * t10790 + t8730 * t8405) * t10577 - t11154) * t8817 - t11168 * (t11177 * t8764 + t7958 * t8770);
t11013 = t7772 * t11352;
t10152 = t8817 * t11013;
t10155 = t8805 * t11013;
t10156 = t8711 * t11013;
t11372 = t11352 * t8710;
t10157 = t7772 * t11372;
t10002 = t8805 * t8564;
t10022 = t8617 * t10783;
t10439 = t8842 * t8730;
t10619 = t8785 * t8869;
t10659 = t8782 * t8869;
t10665 = t8782 * t8863;
t10698 = t8770 * t8730;
t10835 = t8578 * t8812;
t10837 = t8578 * t8770;
t10849 = t8570 * t8786;
t10850 = t8570 * t8770;
t8558 = t8786 * t9783 - t8843;
t10857 = t8558 * t8770;
t8313 = t8542 + t8609;
t10912 = t8313 * t8818;
t11171 = t8784 * (t8462 * t8783 + t9856) - t8224 * t8783 - t8558;
t8057 = t8316 * t8840 - t8812 * t9486;
t10508 = t8817 * t8840;
t9873 = t8812 * t10595;
t8271 = -t10508 * t8617 + t8730 * t9873;
t8293 = t8542 * t10783;
t8912 = t8812 * t11171;
t8937 = t8786 * (t10482 * t8782 - t8578) + t9989;
t8967 = t8770 * t8517;
t8949 = t8812 * t8967;
t10593 = t8786 * t8863;
t9244 = t10010 * t10593;
t9245 = t8617 * t9475;
t9928 = t8770 * t10476;
t9422 = t8817 * t9928;
t9442 = t8811 * t9824;
t9822 = t8812 * t10469;
t9452 = t8786 * t9822;
t9458 = t8812 * t9783;
t9484 = t8617 * t9856;
t9492 = t8617 * t9926;
t9524 = t8316 * t9928;
t9929 = t8770 * t10482;
t9525 = t8316 * t9929;
t9526 = t10595 * t10909;
t9810 = t8817 * t10482;
t9820 = t8812 * t10445;
t9821 = t8812 * t10451;
t10518 = t8812 * t8863;
t9872 = t8786 * t10518;
t9893 = t8817 * t10619;
t9923 = t8770 * t10445;
t9927 = t8770 * t10469;
t7712 = ((-t8271 * t8782 * t10634 + (-t10520 * t7958 + t8817 * t9161) * t8617 - t8730 * t8912 + (t8271 * t10665 - t8839 * (-t8617 * t9893 - t8730 * t9872)) * t8781) * t8764 + ((-t10790 * t8967 + t8730 * t8937) * t8784 - t8730 * t10918 + ((t8730 * t9856 + t8811 * t9492) * t8781 - t8730 * t9850) * t8782 + (t10849 * t8730 - t8811 * t9245) * t8781 + t8811 * t10022 + t10439) * t8818 + (-t8730 * t8949 + (-((-t8770 * t9810 + t8811 * t9820) * t8782 + t8811 * t9823 + t8578 * t10696) * t8783 + ((-t8817 * t9923 - t9442) * t8782 + t8811 * t10835 - t9422) * t8786) * t8617) * t8784 + (((t8811 * t9821 + t9422) * t8781 - t8817 * t9927) * t8782 + (t10696 * t8570 + t9442) * t8781 + t8811 * t9458) * t10793 + (((t8730 * t9926 - t8811 * t9484) * t8812 + t8841 * t9244) * t8781 + t9452 * t10790) * t8782 + ((-t10790 * t10849 - t8730 * t9475) * t8812 + t8839 * t9244) * t8781 + (t10698 * t8622 - t10785 * t8811) * t8812 + t8558 * t10010) * t8791 + ((-t7958 * t10912 + (-t10659 * t8057 - t8316 * t9887) * t8784 + t8316 * t8622 + t11171 * t10002 + (t8057 * t10665 - t8839 * (t10619 * t8316 + t8554 * t9872)) * t8781) * t8764 + ((-t8313 * t8967 - t8554 * t8937) * t8784 + t8305 * t10005 + ((t8313 * t9926 - t8805 * t9484) * t8781 + t8857 * t9487) * t8782 + (-t10004 * t8570 - t8313 * t9475) * t8781 + t8609 * t10783 + t8293 - t8500) * t8818 + (((-t8313 * t9820 - t9525) * t8782 - t8313 * t9823 + t8316 * t10837) * t8783 + ((-t8313 * t9862 + t8554 * t9925) * t8812 + t8869 * t9526) * t8782 + (t10836 * t8313 + t8554 * t9476) * t8812 + t8786 * t9524) * t8784 + (((t8313 * t9821 - t9524) * t8781 + t8316 * t9927) * t8782 + (-t10850 * t8316 + t8313 * t9824) * t8781 + t8313 * t9458) * t8783 + (((-t8313 * t9856 - t8805 * t9492) * t8812 - t8863 * t9526) * t8781 + t8313 * t9452) * t8782 + ((-t10849 * t8313 + t8805 * t9245) * t8812 - t8786 * t9525) * t8781 + (-t8842 * t8542 + (-t10439 * t8811 - t10022) * t8805) * t8812 - t8316 * t10857) * t8808 - t8730 * ((t11308 * t8783 - t8998 * t8786 + t8842) * t8818 + (t11177 * t8770 - t10986) * t8812);
t11025 = t7712 * t8102;
t10199 = t8817 * t11025;
t10200 = t8811 * t11025;
t10204 = t8710 * t11025;
t8851 = qJ(3,5) ^ 2;
t10307 = t8851 - t8875;
t10609 = t8786 * t8817;
t10697 = t8770 * t8811;
t10813 = t8594 * t8812;
t10821 = t8594 * t8770;
t10873 = t11194 * t8817;
t10931 = t11327 * t8818;
t8653 = t8730 * t8808;
t11237 = t8653 - t8554;
t8037 = -t10508 * t11194 + t11237 * t9873;
t8260 = t11194 * t9929;
t8476 = t8594 * t9824;
t8479 = t8594 * t9823;
t9418 = t8594 * t9928;
t9428 = t11194 * t9823;
t9498 = t8594 * t9929;
t9508 = t11194 * t9824;
t9509 = t11194 * t9928;
t9924 = t8770 * t10451;
t7790 = (-t7958 * t10931 + t11177 * t8545 + (t11194 * t8785 * t9810 - t10659 * t8037) * t8784 - t8622 * t10873 - t11237 * t8912 + (t8037 * t10665 - t8839 * (-t11194 * t9893 - t11237 * t9872)) * t8781) * t8764 + (t11194 * t11177 * t10697 + t8293 + (t11252 * t9926 - t8784 * t8967) * t8542 + (t8937 * t8784 + (t8781 * t9856 - t9850) * t8782 + t10849 * t8781 + t11203) * t11237) * t8818 + (-t11194 * t10433 + t8770 * t10808 + (((-t11194 * t9820 - t9498) * t8782 - t9428 + t8578 * t10821) * t8784 + ((t11194 * t9821 - t9418) * t8781 + t8594 * t9927) * t8782 + (-t10821 * t8570 + t9508) * t8781 + t11194 * t9458) * t8783 + (((t8594 * t9923 - t9508) * t8782 + t11194 * t10835 + t9418) * t8784 - ((t8594 * t9924 + t9428) * t8781 - t11194 * t9822) * t8782 - (t11194 * t8570 * t8812 + t9498) * t8781 - t9783 * t10821) * t8786) * t8811 - t11237 * t8949 * t8784 + ((-(-t11194 * t9924 + t8479) * t10609 + t11237 * t9474) * t8781 + t9452 * t8542) * t8782 + (-(t10813 * t8570 - t8260) * t10609 - t11237 * t9234) * t8781 + t11237 * t9996 + (-t9418 * t10683 * t8818 + (-((t8594 * t9820 - t8260) * t8782 + t8479 + t11194 * t10837) * t8783 + (-(t11194 * t9923 + t8476) * t8782 - t9509 + t8578 * t10813) * t8786) * t8784 + (((t8594 * t9821 + t9509) * t8781 - t11194 * t9927) * t8782 + (t10850 * t11194 + t8476) * t8781 + t8594 * t9458) * t8783 - t10433 * t8594 + t10857 * t11194) * t8817;
t11002 = t7790 * t8710;
t7786 = pkin(2) * t11002;
t9405 = t11115 * t11025;
t9198 = t8710 * t9405;
t10342 = t8811 * t9198 * t8751 + t7786;
t9609 = t8710 * t10200;
t9317 = pkin(2) * t9609;
t7646 = t8668 * t9317;
t7781 = t8676 * t11002;
t10345 = t7646 + t7781;
t9608 = t8710 * t10199;
t7667 = qJ(3,5) * t9608;
t9399 = t11115 * t11013;
t9192 = t8710 * t9399;
t9083 = qJ(3,5) * t9192;
t9149 = pkin(2) * t9192;
t10351 = (t7667 - t9149) * t10297 + t9083 * t11150;
t9144 = pkin(2) * t9198;
t7661 = t8817 * t9144;
t7736 = qJ(3,5) * t10157;
t7583 = t7661 + t7736;
t9659 = pkin(2) * t10200;
t10357 = ((t10157 * t8750 + t7583) * t9750 + t9659) * t8806 + t8676 * t10200;
t11000 = t7790 * t8811;
t10752 = t8710 * t8811;
t11040 = (t10155 * t8668 - t11115 * t7790) * t10752;
t11140 = -0.2e1 * t8730;
t10550 = t8806 * t8817;
t11221 = pkin(2) * t10550 + t8676 * t8817;
t11227 = 0.2e1 * qJ(3,5) * t7661 + 0.2e1 * t7583 * t8750;
t9606 = t8807 * t10199;
t10755 = t8710 * t8788;
t9977 = t8690 * t10755;
t11282 = (t7667 + (-pkin(2) * t9399 + pkin(6) * t9606) * t8710) * t9749 + t9977 * t11013 + t11227 + (t10307 + t8751) * t10157;
t9444 = t8805 * t10200;
t9293 = t8710 * t9444;
t7640 = t8676 * t9293;
t7658 = pkin(2) * t9293;
t9665 = t11013 * t11117;
t7511 = (-t8710 * t9665 + t7658) * t8806 + t7640 + t9149;
t9186 = t9659 * t11117;
t7566 = (-t11013 * t8690 + t11128 * t9186) * t10755;
t9385 = -0.2e1 * t9665;
t7567 = (pkin(2) * t10574 * t9385 + t11025 * t8690) * t10755;
t7655 = t9144 * t10298;
t7724 = t8676 * t10157;
t10754 = t8710 * t8804;
t7784 = t7790 * pkin(6) * t10754;
t8602 = t8781 * t8869 + t8784 * t8863;
t10680 = t8781 * t8863;
t8596 = -t10634 + t10680;
t9205 = t8596 * t8782 + t10625;
t11288 = t8602 * t8783 + t8786 * t9205;
t10929 = t11288 * t8841;
t11289 = t8602 * t8786 - t8783 * t9205;
t10937 = t11289 * t8841;
t10671 = t8782 * t8857;
t8414 = t8596 * t8785 - t10671;
t7972 = -t10652 * t8414 - (t10675 * t8602 + t8596 * t8786) * t8839 - t10929;
t10673 = t8782 * t8786;
t7973 = -t10596 * t8414 - (t10673 * t8602 - t8596 * t8783) * t8839 - t10937;
t7826 = (t11288 * t8474 - t11289 * t8473) * t8839 + ((-t7973 - t10937) * t8786 + (-t7972 - t10929) * t8783) * t8840 + (-t7972 * t8786 + t7973 * t8783) * t10628;
t8128 = t10628 * t8602 - t8840 * t9205;
t11318 = t8128 * t8786;
t11319 = t8128 * t8783;
t8366 = t10619 * t8784 - t10680 * t8785 + t10671;
t7860 = t7973 * t8841 + (t10595 * t8366 - t11319) * t8840 + (t7973 * t8782 + t8366 * t8473 + (-t11288 * t8840 - t11318) * t8785) * t8839;
t7861 = t7972 * t8841 + (t10651 * t8366 + t11318) * t8840 + (t7972 * t8782 - t8366 * t8474 + (t11289 * t8840 - t11319) * t8785) * t8839;
t10321 = qJ(3,5) * t10297 - t8851;
t8109 = t9123 + t10321;
t10766 = (pkin(2) + t8730) * (-pkin(2) + t8730);
t8221 = t10323 + t10766;
t9261 = t10155 * t10766;
t9391 = t10300 * t11013;
t10753 = t8710 * t8806;
t11249 = -0.2e1 * t7646 - t7781;
t9059 = t9312 * t11013;
t9561 = t8690 * t10155;
t9611 = t11232 * t10200;
t9412 = (-0.4e1 * t9186 - t9561) * t10755 + (0.2e1 * t9611 + pkin(2) * (-0.2e1 * t9059 + t7790)) * t10753 - t11249;
t10153 = t8811 * t11013;
t9443 = t8594 * t10153;
t9560 = t8710 * t10155;
t10202 = t8805 * t11025;
t9607 = t8796 * t10202;
t10203 = t8796 * t11025;
t9610 = t8710 * t10203;
t10154 = t8806 * t11013;
t9671 = pkin(2) * t10154;
t10281 = 0.2e1 * t11013;
t9704 = t8617 * t10281;
t9769 = t8851 + t10301;
t7391 = t7826 * t10089 + t7860 * t10088 + t7861 * t10078 - (t11282 * t8790 + (t10357 + (t10351 + (-t10307 + t9200) * t9608) * t8805) * t8791 + (t7566 + (t10342 * t8805 + (t9391 + (-t8607 * t10574 + (pkin(6) * qJ(3,5) + t10545) * t8817 * t10294) * t11025) * t8710) * t8806 + t10345 * t8805 - (t8677 + t9769) * t10157 - t11227) * t8808 - t8316 * t11025) / (t9331 + t11221) * t10156 + (-(-t8817 * (t8221 * t9608 + t9704) * t8790 + (t9607 * t11142 + (-t8710 * t9261 + t9412) * t8817 + t9443) * t8791 + (-t8109 * t9610 + t7511 * t8817 * t11140 + t7567 + ((t11232 * t9560 + t7784) * t8811 + t7655) * t8806 + (-pkin(2) * t10204 + t11040) * pkin(2)) * t8808 - t8730 * (-t8805 * t10152 + t7724 * t8811 + (t8811 * t9671 + (t11025 * t8617 - t11000) * t8805) * t8710)) * t11025 - (t9444 + (t10199 * t10816 + (t10155 * t8594 + t10200 * t8617) * t8808) * t8710) * t7790) * t8102 * t8711;
t11379 = t7391 * t11361;
t10745 = t8713 * t8819;
t11360 = t11353 * t10745;
t10540 = t8808 * t8813;
t10572 = t8805 * t8813;
t8610 = t8731 * t10572;
t9330 = t10540 * t8617 + t8610;
t9154 = t8543 + t9330;
t8105 = 0.1e1 / t9154;
t10965 = t8105 * t8713;
t8814 = sin(qJ(1,4));
t8565 = t8814 * t8617;
t8820 = cos(qJ(1,4));
t8661 = t8820 * t8731;
t8328 = -t8565 * t8813 + t8661;
t11211 = -t8328 * t8791 + t8661;
t8658 = t8814 * t8731;
t8329 = -t8617 * t8820 - t8658 * t8813;
t7989 = (t8329 * t8805 - t8543 * t8814) * t8808 - t11211;
t10077 = t7989 * t10965;
t10566 = t8805 * t8819;
t8546 = t8594 * t8813;
t8317 = -t8731 * t10566 + t8546;
t8823 = legFrame(4,2);
t8771 = cos(t8823);
t10908 = t8317 * t8771;
t10693 = t8771 * t8819;
t10009 = t8617 * t10693;
t10515 = t8813 * t8820;
t8338 = t10515 * t8617 + t8658;
t8765 = sin(t8823);
t10895 = t8338 * t8765;
t11348 = -(t10009 + t10895) * t8791 + t8765 * t8658;
t10507 = t8819 * t8820;
t11242 = t8813 * t8661 - t8565;
t8069 = t8594 * t10507 + t11242 * t8805;
t7932 = (-t8069 * t8765 + t10908) * t8808 + t11348;
t10086 = t7932 * t10965;
t10713 = t8765 * t8819;
t11268 = (-t8617 * t10713 + t8338 * t8771) * t8791 - t8771 * t8658;
t8278 = t8765 * t8317;
t7931 = (t8069 * t8771 + t8278) * t8808 + t11268;
t10087 = t7931 * t10965;
t8797 = t8819 ^ 2;
t10039 = t8797 * t9319;
t10789 = t8617 * t8813;
t8864 = koppelP(4,2);
t10450 = t8841 * t8864;
t8870 = koppelP(4,1);
t10456 = t8840 * t8870;
t8686 = t8785 * t10456;
t8580 = t8686 - t10450;
t10833 = t8580 * t8786;
t8858 = koppelP(4,3);
t10624 = t8785 * t8858;
t9782 = t8841 * t10624;
t8306 = t11253 * t8864 + t9782;
t10917 = t8306 * t8783;
t10633 = t8784 * t8870;
t11307 = t8643 * t10633 - t8306;
t10468 = t8840 * t8858;
t10475 = t8839 * t8870;
t10444 = t8841 * t8870;
t10462 = t8840 * t8864;
t8571 = t10462 * t8785 + t10444;
t8225 = t8571 * t8781 + (t10475 * t8781 - t10468) * t8782;
t8463 = t8864 * t9674 + t8686;
t8997 = t8463 * t8784 - t8225;
t7959 = t11307 * t8786 + t8997 * t8783 + t8843;
t10985 = t7959 * t8765;
t10726 = t8731 * t8813;
t10612 = t8786 * t8814;
t10481 = t8839 * t8864;
t9886 = t8785 * t10481;
t9473 = t8771 * t9886;
t8234 = t10612 * t8580 - t8820 * t9473;
t9880 = t8785 * t10475;
t9472 = t8771 * t9880;
t8237 = t10612 * t8571 + t8820 * t9472;
t10606 = t8786 * t8820;
t9233 = t8814 * t9472;
t8240 = t10606 * t8571 - t9233;
t8243 = t10606 * t8580 + t8814 * t9473;
t10432 = t8842 * t8814;
t8623 = t8785 * t10468 + t8844;
t10782 = t8623 * t8771;
t8403 = t10782 * t8820 - t10432;
t9995 = t8814 * t10782;
t8406 = t8820 * t8842 + t9995;
t9815 = t8814 * t10475;
t9919 = t8771 * t10462;
t8439 = t8786 * t9815 - t8820 * t9919;
t9471 = t8814 * t9919;
t9855 = t8786 * t10475;
t8440 = t8820 * t9855 + t9471;
t9861 = t8786 * t10481;
t9918 = t8771 * t10456;
t8441 = t8814 * t9918 - t8820 * t9861;
t9816 = t8814 * t10481;
t8442 = t8786 * t9816 + t8820 * t9918;
t9849 = t8786 * t10468;
t10642 = t8783 * t8870;
t9988 = t8643 * t10642;
t11155 = ((t10726 * t8439 + t8440 * t8617) * t8781 + t8329 * t9849) * t8782 - (t10726 * t8234 - (t10726 * t8442 - t8441 * t8617) * t8782 + t8243 * t8617 + t8329 * t9988) * t8784 - t10726 * t8403 + t10917 * t8329 + t10985 * t11242 + (t10726 * t8237 + t8240 * t8617) * t8781 + t8406 * t8617;
t10033 = t8594 * t10572;
t8654 = t8731 * t8791;
t11182 = t8654 - t8499 - t8731;
t11167 = -t10033 * t8819 - t11182 * t8797 - t8731;
t8518 = t10456 * t8782 + t9886;
t11178 = t8781 * (t10462 * t8782 - t9880) - t8518 * t8784 + t8623;
t11204 = t8842 - t10917;
t9160 = t8784 * t9886 - t8623;
t7773 = -(t8442 * t10674 + (t8771 * t9160 + t10985) * t8820 + (t8439 * t8782 + t8237) * t8781 + ((t9988 - t10833) * t8784 - t8782 * t9849 + t11204) * t8814) * t10039 + (t11155 * t8791 + (-t7959 * t10895 + (t8328 * t9988 + (-t10789 * t8442 - t8441 * t8731) * t8782 + t8234 * t10789 - t8731 * t8243) * t8784 - t8328 * t10917 + ((-t10789 * t8439 + t8440 * t8731) * t8781 - t8328 * t9849) * t8782 + (-t10789 * t8237 + t8240 * t8731) * t8781 + t8403 * t10789 + t8731 * t8406) * t10577 - t11155) * t8819 - t11167 * (t11178 * t8765 + t7959 * t8771);
t11012 = t7773 * t11353;
t10146 = t8819 * t11012;
t10149 = t8805 * t11012;
t10150 = t8714 * t11012;
t11370 = t11353 * t8713;
t10151 = t7773 * t11370;
t10001 = t8805 * t8565;
t10021 = t8617 * t10782;
t10438 = t8842 * t8731;
t10618 = t8785 * t8870;
t10658 = t8782 * t8870;
t10664 = t8782 * t8864;
t10695 = t8771 * t8731;
t10832 = t8580 * t8814;
t10834 = t8580 * t8771;
t10847 = t8571 * t8786;
t10848 = t8571 * t8771;
t8559 = t9782 * t8786 - t8843;
t10856 = t8559 * t8771;
t8314 = t8543 + t8610;
t10911 = t8314 * t8820;
t11172 = t8784 * (t8463 * t8783 + t9855) - t8225 * t8783 - t8559;
t8058 = t8317 * t8840 - t8814 * t9486;
t10506 = t8819 * t8840;
t9871 = t8814 * t10595;
t8272 = -t10506 * t8617 + t8731 * t9871;
t8294 = t8543 * t10782;
t8911 = t8814 * t11172;
t8936 = t8786 * (t10481 * t8782 - t8580) + t9988;
t8966 = t8771 * t8518;
t8948 = t8814 * t8966;
t10592 = t8786 * t8864;
t9242 = t10009 * t10592;
t9243 = t8617 * t9472;
t9921 = t8771 * t10475;
t9421 = t8819 * t9921;
t9439 = t8813 * t9816;
t9814 = t8814 * t10468;
t9451 = t8786 * t9814;
t9457 = t8814 * t9782;
t9483 = t8617 * t9855;
t9491 = t8617 * t9919;
t9521 = t8317 * t9921;
t9922 = t8771 * t10481;
t9522 = t8317 * t9922;
t9523 = t10595 * t10908;
t9809 = t8819 * t10481;
t9812 = t8814 * t10444;
t9813 = t8814 * t10450;
t10513 = t8814 * t8864;
t9870 = t8786 * t10513;
t9892 = t8819 * t10618;
t9916 = t8771 * t10444;
t9920 = t8771 * t10468;
t7713 = ((-t8272 * t8782 * t10633 + (-t10515 * t7959 + t8819 * t9160) * t8617 - t8731 * t8911 + (t8272 * t10664 - t8839 * (-t8617 * t9892 - t8731 * t9870)) * t8781) * t8765 + ((-t10789 * t8966 + t8731 * t8936) * t8784 - t8731 * t10917 + ((t8731 * t9855 + t8813 * t9491) * t8781 - t8731 * t9849) * t8782 + (t10847 * t8731 - t8813 * t9243) * t8781 + t8813 * t10021 + t10438) * t8820 + (-t8731 * t8948 + (-((-t8771 * t9809 + t8813 * t9812) * t8782 + t8813 * t9815 + t8580 * t10693) * t8783 + ((-t8819 * t9916 - t9439) * t8782 + t8813 * t10832 - t9421) * t8786) * t8617) * t8784 + (((t8813 * t9813 + t9421) * t8781 - t8819 * t9920) * t8782 + (t10693 * t8571 + t9439) * t8781 + t8813 * t9457) * t10793 + (((t8731 * t9919 - t8813 * t9483) * t8814 + t8841 * t9242) * t8781 + t9451 * t10789) * t8782 + ((-t10789 * t10847 - t8731 * t9472) * t8814 + t8839 * t9242) * t8781 + (t10695 * t8623 - t10785 * t8813) * t8814 + t8559 * t10009) * t8791 + ((-t7959 * t10911 + (-t10658 * t8058 - t8317 * t9886) * t8784 + t8317 * t8623 + t11172 * t10001 + (t8058 * t10664 - t8839 * (t10618 * t8317 + t8554 * t9870)) * t8781) * t8765 + ((-t8314 * t8966 - t8554 * t8936) * t8784 + t8306 * t10005 + ((t8314 * t9919 - t8805 * t9483) * t8781 + t8858 * t9487) * t8782 + (-t10004 * t8571 - t8314 * t9472) * t8781 + t8610 * t10782 + t8294 - t8500) * t8820 + (((-t8314 * t9812 - t9522) * t8782 - t8314 * t9815 + t8317 * t10834) * t8783 + ((-t8314 * t9861 + t8554 * t9918) * t8814 + t8870 * t9523) * t8782 + (t10833 * t8314 + t8554 * t9473) * t8814 + t8786 * t9521) * t8784 + (((t8314 * t9813 - t9521) * t8781 + t8317 * t9920) * t8782 + (-t10848 * t8317 + t8314 * t9816) * t8781 + t8314 * t9457) * t8783 + (((-t8314 * t9855 - t8805 * t9491) * t8814 - t8864 * t9523) * t8781 + t8314 * t9451) * t8782 + ((-t10847 * t8314 + t8805 * t9243) * t8814 - t8786 * t9522) * t8781 + (-t8842 * t8543 + (-t10438 * t8813 - t10021) * t8805) * t8814 - t8317 * t10856) * t8808 - t8731 * ((t11307 * t8783 - t8997 * t8786 + t8842) * t8820 + (t11178 * t8771 - t10985) * t8814);
t11024 = t7713 * t8105;
t10193 = t8819 * t11024;
t10194 = t8813 * t11024;
t10198 = t8713 * t11024;
t8852 = qJ(3,4) ^ 2;
t10306 = t8852 - t8875;
t10607 = t8786 * t8819;
t10694 = t8771 * t8813;
t10812 = t8594 * t8814;
t10820 = t8594 * t8771;
t10872 = t11195 * t8819;
t10930 = t11326 * t8820;
t8655 = t8731 * t8808;
t11236 = t8655 - t8554;
t8038 = -t10506 * t11195 + t11236 * t9871;
t8261 = t11195 * t9922;
t8477 = t8594 * t9816;
t8480 = t8594 * t9815;
t9417 = t8594 * t9921;
t9427 = t11195 * t9815;
t9497 = t8594 * t9922;
t9506 = t11195 * t9816;
t9507 = t11195 * t9921;
t9917 = t8771 * t10450;
t7791 = (-t7959 * t10930 + t11178 * t8546 + (t11195 * t8785 * t9809 - t10658 * t8038) * t8784 - t8623 * t10872 - t11236 * t8911 + (t8038 * t10664 - t8839 * (-t11195 * t9892 - t11236 * t9870)) * t8781) * t8765 + (t11178 * t11195 * t10694 + t8294 + (t11252 * t9919 - t8784 * t8966) * t8543 + (t8936 * t8784 + (t8781 * t9855 - t9849) * t8782 + t10847 * t8781 + t11204) * t11236) * t8820 + (-t11195 * t10432 + t8771 * t10808 + (((-t11195 * t9812 - t9497) * t8782 - t9427 + t8580 * t10820) * t8784 + ((t11195 * t9813 - t9417) * t8781 + t8594 * t9920) * t8782 + (-t10820 * t8571 + t9506) * t8781 + t11195 * t9457) * t8783 + (((t8594 * t9916 - t9506) * t8782 + t11195 * t10832 + t9417) * t8784 - ((t8594 * t9917 + t9427) * t8781 - t11195 * t9814) * t8782 - (t11195 * t8571 * t8814 + t9497) * t8781 - t9782 * t10820) * t8786) * t8813 - t11236 * t8948 * t8784 + ((-(-t11195 * t9917 + t8480) * t10607 + t11236 * t9471) * t8781 + t9451 * t8543) * t8782 + (-(t10812 * t8571 - t8261) * t10607 - t11236 * t9233) * t8781 + t11236 * t9995 + (-t9417 * t10683 * t8820 + (-((t8594 * t9812 - t8261) * t8782 + t8480 + t11195 * t10834) * t8783 + (-(t11195 * t9916 + t8477) * t8782 - t9507 + t8580 * t10812) * t8786) * t8784 + (((t8594 * t9813 + t9507) * t8781 - t11195 * t9920) * t8782 + (t10848 * t11195 + t8477) * t8781 + t8594 * t9457) * t8783 - t10432 * t8594 + t10856 * t11195) * t8819;
t10999 = t7791 * t8713;
t7787 = pkin(2) * t10999;
t9404 = t11115 * t11024;
t9197 = t8713 * t9404;
t10341 = t8813 * t9197 * t8751 + t7787;
t9599 = t8713 * t10194;
t9316 = pkin(2) * t9599;
t7647 = t8668 * t9316;
t7782 = t8676 * t10999;
t10344 = t7647 + t7782;
t9598 = t8713 * t10193;
t7668 = qJ(3,4) * t9598;
t9398 = t11115 * t11012;
t9191 = t8713 * t9398;
t9084 = qJ(3,4) * t9191;
t9148 = pkin(2) * t9191;
t10350 = (t7668 - t9148) * t10297 + t9084 * t11150;
t9143 = pkin(2) * t9197;
t7662 = t8819 * t9143;
t7737 = qJ(3,4) * t10151;
t7584 = t7662 + t7737;
t9658 = pkin(2) * t10194;
t10356 = ((t10151 * t8750 + t7584) * t9750 + t9658) * t8806 + t8676 * t10194;
t10997 = t7791 * t8813;
t10746 = t8713 * t8813;
t11039 = (t10149 * t8668 - t11115 * t7791) * t10746;
t11139 = -0.2e1 * t8731;
t10549 = t8806 * t8819;
t11222 = pkin(2) * t10549 + t8676 * t8819;
t11228 = 0.2e1 * qJ(3,4) * t7662 + 0.2e1 * t7584 * t8750;
t9596 = t8807 * t10193;
t10749 = t8713 * t8788;
t9976 = t8690 * t10749;
t11283 = (t7668 + (-pkin(2) * t9398 + pkin(6) * t9596) * t8713) * t9749 + t9976 * t11012 + t11228 + (t10306 + t8751) * t10151;
t9441 = t8805 * t10194;
t9289 = t8713 * t9441;
t7641 = t8676 * t9289;
t7659 = pkin(2) * t9289;
t9664 = t11012 * t11117;
t7512 = (-t8713 * t9664 + t7659) * t8806 + t7641 + t9148;
t9185 = t9658 * t11117;
t7568 = (-t11012 * t8690 + t11128 * t9185) * t10749;
t9384 = -0.2e1 * t9664;
t7569 = (pkin(2) * t10572 * t9384 + t11024 * t8690) * t10749;
t7656 = t9143 * t10298;
t7725 = t8676 * t10151;
t10748 = t8713 * t8804;
t7785 = t7791 * pkin(6) * t10748;
t8603 = t8781 * t8870 + t8784 * t8864;
t10679 = t8781 * t8864;
t8597 = -t10633 + t10679;
t9204 = t8597 * t8782 + t10624;
t11290 = t8603 * t8783 + t8786 * t9204;
t10928 = t11290 * t8841;
t11291 = t8603 * t8786 - t8783 * t9204;
t10936 = t11291 * t8841;
t10670 = t8782 * t8858;
t8415 = t8597 * t8785 - t10670;
t7974 = -t10652 * t8415 - (t10675 * t8603 + t8597 * t8786) * t8839 - t10928;
t7975 = -t10596 * t8415 - (t10673 * t8603 - t8597 * t8783) * t8839 - t10936;
t7827 = (t11290 * t8474 - t11291 * t8473) * t8839 + ((-t7975 - t10936) * t8786 + (-t7974 - t10928) * t8783) * t8840 + (-t7974 * t8786 + t7975 * t8783) * t10628;
t8129 = t10628 * t8603 - t8840 * t9204;
t11316 = t8129 * t8786;
t11317 = t8129 * t8783;
t8367 = t10618 * t8784 - t10679 * t8785 + t10670;
t7862 = t7975 * t8841 + (t10595 * t8367 - t11317) * t8840 + (t7975 * t8782 + t8367 * t8473 + (-t11290 * t8840 - t11316) * t8785) * t8839;
t7863 = t7974 * t8841 + (t10651 * t8367 + t11316) * t8840 + (t7974 * t8782 - t8367 * t8474 + (t11291 * t8840 - t11317) * t8785) * t8839;
t10320 = qJ(3,4) * t10297 - t8852;
t8110 = t9123 + t10320;
t10765 = (pkin(2) + t8731) * (-pkin(2) + t8731);
t8222 = t10323 + t10765;
t9259 = t10149 * t10765;
t9288 = t8805 * t9598;
t9390 = t10300 * t11012;
t10747 = t8713 * t8806;
t11248 = -0.2e1 * t7647 - t7782;
t9058 = t9312 * t11012;
t9557 = t8690 * t10149;
t9602 = t11232 * t10194;
t9411 = (-0.4e1 * t9185 - t9557) * t10749 + (0.2e1 * t9602 + pkin(2) * (-0.2e1 * t9058 + t7791)) * t10747 - t11248;
t10147 = t8813 * t11012;
t9440 = t8594 * t10147;
t9556 = t8713 * t10149;
t10196 = t8805 * t11024;
t9597 = t8797 * t10196;
t10197 = t8797 * t11024;
t9600 = t8713 * t10197;
t10148 = t8806 * t11012;
t9670 = pkin(2) * t10148;
t10280 = 0.2e1 * t11012;
t9702 = t8617 * t10280;
t9768 = t8852 + t10301;
t7392 = t7827 * t10087 + t7862 * t10086 + t7863 * t10077 - (t11283 * t8790 + (t10350 * t8805 + (-t10306 + t9200) * t9288 + t10356) * t8791 + (t7568 + (t10341 * t8805 + (t9390 + (-t8607 * t10572 + (pkin(6) * qJ(3,4) + t10545) * t8819 * t10294) * t11024) * t8713) * t8806 + t10344 * t8805 - (t8677 + t9768) * t10151 - t11228) * t8808 - t8317 * t11024) / (t9330 + t11222) * t10150 + (-(-t8819 * (t8222 * t9598 + t9702) * t8790 + (t9597 * t11142 + (-t8713 * t9259 + t9411) * t8819 + t9440) * t8791 + (-t8110 * t9600 + t7512 * t8819 * t11139 + t7569 + ((t11232 * t9556 + t7785) * t8813 + t7656) * t8806 + (-pkin(2) * t10198 + t11039) * pkin(2)) * t8808 - (-t8805 * t10146 + t7725 * t8813 + (t8813 * t9670 + (t11024 * t8617 - t10997) * t8805) * t8713) * t8731) * t11024 - (t9441 + (t10193 * t10816 + (t10149 * t8594 + t10194 * t8617) * t8808) * t8713) * t7791) * t8105 * t8714;
t11378 = t7392 * t11360;
t10741 = t8720 * t8833;
t11359 = t11354 * t10741;
t10535 = t8808 * t8827;
t10564 = t8805 * t8827;
t8618 = t8735 * t10564;
t9329 = t10535 * t8617 + t8618;
t9153 = t8547 + t9329;
t8133 = 0.1e1 / t9153;
t10963 = t8133 * t8720;
t8828 = sin(qJ(1,3));
t8566 = t8828 * t8617;
t8834 = cos(qJ(1,3));
t8673 = t8834 * t8735;
t8347 = -t8566 * t8827 + t8673;
t11210 = -t8347 * t8791 + t8673;
t8670 = t8828 * t8735;
t8348 = -t8617 * t8834 - t8670 * t8827;
t7993 = (t8348 * t8805 - t8547 * t8828) * t8808 - t11210;
t10076 = t7993 * t10963;
t10558 = t8805 * t8833;
t8550 = t8594 * t8827;
t8321 = -t8735 * t10558 + t8550;
t8824 = legFrame(3,2);
t8772 = cos(t8824);
t10904 = t8321 * t8772;
t10690 = t8772 * t8833;
t10008 = t8617 * t10690;
t10504 = t8827 * t8834;
t8353 = t10504 * t8617 + t8670;
t8766 = sin(t8824);
t10889 = t8353 * t8766;
t11347 = -(t10008 + t10889) * t8791 + t8766 * t8670;
t10490 = t8833 * t8834;
t11241 = t8827 * t8673 - t8566;
t8076 = t8594 * t10490 + t11241 * t8805;
t7937 = (-t8076 * t8766 + t10904) * t8808 + t11347;
t10084 = t7937 * t10963;
t10710 = t8766 * t8833;
t11269 = (-t8617 * t10710 + t8353 * t8772) * t8791 - t8772 * t8670;
t8282 = t8766 * t8321;
t7936 = (t8076 * t8772 + t8282) * t8808 + t11269;
t10085 = t7936 * t10963;
t8801 = t8833 ^ 2;
t10038 = t8801 * t9319;
t10788 = t8617 * t8827;
t8865 = koppelP(3,2);
t10449 = t8841 * t8865;
t8871 = koppelP(3,1);
t10455 = t8840 * t8871;
t8687 = t8785 * t10455;
t8582 = t8687 - t10449;
t10830 = t8582 * t8786;
t8859 = koppelP(3,3);
t10623 = t8785 * t8859;
t9781 = t8841 * t10623;
t8307 = t11253 * t8865 + t9781;
t10916 = t8307 * t8783;
t10632 = t8784 * t8871;
t11306 = t8643 * t10632 - t8307;
t10467 = t8840 * t8859;
t10474 = t8839 * t8871;
t10443 = t8841 * t8871;
t10461 = t8840 * t8865;
t8572 = t10461 * t8785 + t10443;
t8226 = t8572 * t8781 + (t10474 * t8781 - t10467) * t8782;
t8464 = t8865 * t9674 + t8687;
t8996 = t8464 * t8784 - t8226;
t7960 = t11306 * t8786 + t8996 * t8783 + t8843;
t10984 = t7960 * t8766;
t10724 = t8735 * t8827;
t10605 = t8786 * t8828;
t10480 = t8839 * t8865;
t9885 = t8785 * t10480;
t9470 = t8772 * t9885;
t8244 = t10605 * t8582 - t8834 * t9470;
t9879 = t8785 * t10474;
t9469 = t8772 * t9879;
t8247 = t10605 * t8572 + t8834 * t9469;
t10601 = t8786 * t8834;
t9232 = t8828 * t9469;
t8250 = t10601 * t8572 - t9232;
t8253 = t10601 * t8582 + t8828 * t9470;
t10431 = t8842 * t8828;
t8624 = t8785 * t10467 + t8844;
t10781 = t8624 * t8772;
t8407 = t10781 * t8834 - t10431;
t9994 = t8828 * t10781;
t8410 = t8834 * t8842 + t9994;
t9805 = t8828 * t10474;
t9912 = t8772 * t10461;
t8443 = t8786 * t9805 - t8834 * t9912;
t9468 = t8828 * t9912;
t9854 = t8786 * t10474;
t8444 = t8834 * t9854 + t9468;
t9860 = t8786 * t10480;
t9911 = t8772 * t10455;
t8445 = t8828 * t9911 - t8834 * t9860;
t9806 = t8828 * t10480;
t8446 = t8786 * t9806 + t8834 * t9911;
t9848 = t8786 * t10467;
t10641 = t8783 * t8871;
t9987 = t8643 * t10641;
t11156 = ((t10724 * t8443 + t8444 * t8617) * t8781 + t8348 * t9848) * t8782 - (t10724 * t8244 - (t10724 * t8446 - t8445 * t8617) * t8782 + t8253 * t8617 + t8348 * t9987) * t8784 - t10724 * t8407 + t10916 * t8348 + t10984 * t11241 + (t10724 * t8247 + t8250 * t8617) * t8781 + t8410 * t8617;
t8662 = t8735 * t8791;
t9010 = t8499 + t8735 - t8662;
t10505 = t8827 * t8833;
t9838 = t8805 * t10505;
t11166 = -t8594 * t9838 + t8801 * t9010 - t8735;
t8519 = t10455 * t8782 + t9885;
t11179 = t8781 * (t10461 * t8782 - t9879) - t8519 * t8784 + t8624;
t11205 = t8842 - t10916;
t9159 = t8784 * t9885 - t8624;
t7777 = -(t8446 * t10674 + (t8772 * t9159 + t10984) * t8834 + (t8443 * t8782 + t8247) * t8781 + ((t9987 - t10830) * t8784 - t8782 * t9848 + t11205) * t8828) * t10038 + (t11156 * t8791 + (-t7960 * t10889 + (t8347 * t9987 + (-t10788 * t8446 - t8445 * t8735) * t8782 + t8244 * t10788 - t8253 * t8735) * t8784 - t8347 * t10916 + ((-t10788 * t8443 + t8444 * t8735) * t8781 - t8347 * t9848) * t8782 + (-t10788 * t8247 + t8250 * t8735) * t8781 + t8407 * t10788 + t8735 * t8410) * t10577 - t11156) * t8833 - t11166 * (t11179 * t8766 + t7960 * t8772);
t11008 = t7777 * t11354;
t10131 = t8833 * t11008;
t10134 = t8805 * t11008;
t10135 = t8721 * t11008;
t11368 = t11354 * t8720;
t10136 = t7777 * t11368;
t10000 = t8805 * t8566;
t10020 = t8617 * t10781;
t10437 = t8842 * t8735;
t10617 = t8785 * t8871;
t10657 = t8782 * t8871;
t10663 = t8782 * t8865;
t10692 = t8772 * t8735;
t10829 = t8582 * t8828;
t10831 = t8582 * t8772;
t10845 = t8572 * t8786;
t10846 = t8572 * t8772;
t8560 = t9781 * t8786 - t8843;
t10855 = t8560 * t8772;
t8318 = t8547 + t8618;
t10907 = t8318 * t8834;
t11173 = t8784 * (t8464 * t8783 + t9854) - t8226 * t8783 - t8560;
t8059 = t8321 * t8840 - t8828 * t9486;
t10489 = t8833 * t8840;
t9869 = t8828 * t10595;
t8279 = -t10489 * t8617 + t8735 * t9869;
t8295 = t8547 * t10781;
t8910 = t8828 * t11173;
t8935 = t8786 * (t10480 * t8782 - t8582) + t9987;
t8965 = t8772 * t8519;
t8947 = t8828 * t8965;
t10591 = t8786 * t8865;
t9240 = t10008 * t10591;
t9241 = t8617 * t9469;
t9436 = t8827 * t9806;
t9804 = t8828 * t10467;
t9450 = t8786 * t9804;
t9456 = t8828 * t9781;
t9914 = t8772 * t10474;
t9467 = t8833 * t9914;
t9482 = t8617 * t9854;
t9490 = t8617 * t9912;
t9518 = t8321 * t9914;
t9915 = t8772 * t10480;
t9519 = t8321 * t9915;
t9520 = t10595 * t10904;
t9787 = t8833 * t10480;
t9802 = t8828 * t10443;
t9803 = t8828 * t10449;
t10502 = t8828 * t8865;
t9868 = t8786 * t10502;
t9891 = t8833 * t10617;
t9909 = t8772 * t10443;
t9913 = t8772 * t10467;
t7717 = ((-t8279 * t8782 * t10632 + (-t10504 * t7960 + t8833 * t9159) * t8617 - t8735 * t8910 + (t8279 * t10663 - t8839 * (-t8617 * t9891 - t8735 * t9868)) * t8781) * t8766 + ((-t10788 * t8965 + t8735 * t8935) * t8784 - t8735 * t10916 + ((t8735 * t9854 + t8827 * t9490) * t8781 - t8735 * t9848) * t8782 + (t10845 * t8735 - t8827 * t9241) * t8781 + t8827 * t10020 + t10437) * t8834 + (-t8735 * t8947 + (-((-t8772 * t9787 + t8827 * t9802) * t8782 + t8827 * t9805 + t8582 * t10690) * t8783 + ((-t8833 * t9909 - t9436) * t8782 + t8827 * t10829 - t9467) * t8786) * t8617) * t8784 + (((t8827 * t9803 + t9467) * t8781 - t8833 * t9913) * t8782 + (t10690 * t8572 + t9436) * t8781 + t8827 * t9456) * t10793 + (((t8735 * t9912 - t8827 * t9482) * t8828 + t8841 * t9240) * t8781 + t9450 * t10788) * t8782 + ((-t10788 * t10845 - t8735 * t9469) * t8828 + t8839 * t9240) * t8781 + (t10692 * t8624 - t10785 * t8827) * t8828 + t8560 * t10008) * t8791 + ((-t7960 * t10907 + (-t10657 * t8059 - t8321 * t9885) * t8784 + t8624 * t8321 + t11173 * t10000 + (t8059 * t10663 - t8839 * (t10617 * t8321 + t8554 * t9868)) * t8781) * t8766 + ((-t8318 * t8965 - t8554 * t8935) * t8784 + t8307 * t10005 + ((t8318 * t9912 - t8805 * t9482) * t8781 + t8859 * t9487) * t8782 + (-t10004 * t8572 - t8318 * t9469) * t8781 + t8618 * t10781 + t8295 - t8500) * t8834 + (((-t8318 * t9802 - t9519) * t8782 - t8318 * t9805 + t8321 * t10831) * t8783 + ((-t8318 * t9860 + t8554 * t9911) * t8828 + t8871 * t9520) * t8782 + (t10830 * t8318 + t8554 * t9470) * t8828 + t8786 * t9518) * t8784 + (((t8318 * t9803 - t9518) * t8781 + t8321 * t9913) * t8782 + (-t10846 * t8321 + t8318 * t9806) * t8781 + t8318 * t9456) * t8783 + (((-t8318 * t9854 - t8805 * t9490) * t8828 - t8865 * t9520) * t8781 + t8318 * t9450) * t8782 + ((-t10845 * t8318 + t8805 * t9241) * t8828 - t8786 * t9519) * t8781 + (-t8842 * t8547 + (-t10437 * t8827 - t10020) * t8805) * t8828 - t8321 * t10855) * t8808 - t8735 * ((t11306 * t8783 - t8996 * t8786 + t8842) * t8834 + (t11179 * t8772 - t10984) * t8828);
t11020 = t7717 * t8133;
t10181 = t8833 * t11020;
t10182 = t8827 * t11020;
t10186 = t8720 * t11020;
t8853 = qJ(3,3) ^ 2;
t10305 = t8853 - t8875;
t10602 = t8786 * t8833;
t10691 = t8772 * t8827;
t10811 = t8594 * t8828;
t10819 = t8594 * t8772;
t10868 = t11196 * t8833;
t10924 = t11325 * t8834;
t8663 = t8735 * t8808;
t11235 = t8663 - t8554;
t8039 = -t10489 * t11196 + t11235 * t9869;
t8262 = t11196 * t9915;
t8485 = t8594 * t9806;
t8488 = t8594 * t9805;
t9416 = t8594 * t9914;
t9426 = t11196 * t9805;
t9496 = t8594 * t9915;
t9504 = t11196 * t9806;
t9505 = t11196 * t9914;
t9910 = t8772 * t10449;
t7804 = (-t7960 * t10924 + t11179 * t8550 + (t11196 * t8785 * t9787 - t10657 * t8039) * t8784 - t8624 * t10868 - t11235 * t8910 + (t8039 * t10663 - t8839 * (-t11196 * t9891 - t11235 * t9868)) * t8781) * t8766 + (t11179 * t11196 * t10691 + t8295 + (t11252 * t9912 - t8784 * t8965) * t8547 + (t8935 * t8784 + (t8781 * t9854 - t9848) * t8782 + t10845 * t8781 + t11205) * t11235) * t8834 + (-t11196 * t10431 + t8772 * t10808 + (((-t11196 * t9802 - t9496) * t8782 - t9426 + t8582 * t10819) * t8784 + ((t11196 * t9803 - t9416) * t8781 + t8594 * t9913) * t8782 + (-t10819 * t8572 + t9504) * t8781 + t11196 * t9456) * t8783 + (((t8594 * t9909 - t9504) * t8782 + t11196 * t10829 + t9416) * t8784 - ((t8594 * t9910 + t9426) * t8781 - t11196 * t9804) * t8782 - (t11196 * t8572 * t8828 + t9496) * t8781 - t9781 * t10819) * t8786) * t8827 - t11235 * t8947 * t8784 + ((-(-t11196 * t9910 + t8488) * t10602 + t11235 * t9468) * t8781 + t9450 * t8547) * t8782 + (-(t10811 * t8572 - t8262) * t10602 - t11235 * t9232) * t8781 + t11235 * t9994 + (-t9416 * t10683 * t8834 + (-((t8594 * t9802 - t8262) * t8782 + t8488 + t11196 * t10831) * t8783 + (-(t11196 * t9909 + t8485) * t8782 - t9505 + t8582 * t10811) * t8786) * t8784 + (((t8594 * t9803 + t9505) * t8781 - t11196 * t9913) * t8782 + (t10846 * t11196 + t8485) * t8781 + t8594 * t9456) * t8783 - t10431 * t8594 + t10855 * t11196) * t8833;
t10996 = t7804 * t8720;
t7801 = pkin(2) * t10996;
t9403 = t11115 * t11020;
t9196 = t8720 * t9403;
t10334 = t8827 * t9196 * t8751 + t7801;
t9584 = t8720 * t10182;
t9315 = pkin(2) * t9584;
t7681 = t8668 * t9315;
t7792 = t8676 * t10996;
t10337 = t7681 + t7792;
t9583 = t8720 * t10181;
t7702 = qJ(3,3) * t9583;
t9397 = t11115 * t11008;
t9190 = t8720 * t9397;
t9136 = qJ(3,3) * t9190;
t9147 = pkin(2) * t9190;
t10349 = (t7702 - t9147) * t10297 + t9136 * t11150;
t9142 = pkin(2) * t9196;
t7696 = t8833 * t9142;
t7759 = qJ(3,3) * t10136;
t7606 = t7696 + t7759;
t9657 = pkin(2) * t10182;
t10355 = ((t10136 * t8750 + t7606) * t9750 + t9657) * t8806 + t8676 * t10182;
t10994 = t7804 * t8827;
t10742 = t8720 * t8827;
t11035 = (t10134 * t8668 - t11115 * t7804) * t10742;
t11138 = -0.2e1 * t8735;
t11201 = pkin(6) * qJ(3,3) + t10545;
t10548 = t8806 * t8833;
t11223 = pkin(2) * t10548 + t8676 * t8833;
t11229 = 0.2e1 * qJ(3,3) * t7696 + 0.2e1 * t7606 * t8750;
t10743 = t8720 * t8788;
t9975 = t8690 * t10743;
t11284 = (t7702 + (-pkin(2) * t9397 + t10181 * t8750) * t8720) * t9749 + t9975 * t11008 + t11229 + (t10305 + t8751) * t10136;
t9438 = t8805 * t10182;
t9277 = t8720 * t9438;
t7675 = t8676 * t9277;
t7693 = pkin(2) * t9277;
t9663 = t11008 * t11117;
t7516 = (-t8720 * t9663 + t7693) * t8806 + t7675 + t9147;
t9383 = -0.2e1 * t9663;
t7589 = (pkin(2) * t10564 * t9383 + t11020 * t8690) * t10743;
t9184 = t9657 * t11117;
t7590 = (-t11008 * t8690 + t11128 * t9184) * t10743;
t7687 = t9142 * t10298;
t7747 = t8676 * t10136;
t7795 = t10996 * t11117;
t8604 = t8781 * t8871 + t8784 * t8865;
t10678 = t8781 * t8865;
t8598 = -t10632 + t10678;
t9203 = t8598 * t8782 + t10623;
t11292 = t8604 * t8783 + t8786 * t9203;
t10927 = t11292 * t8841;
t11293 = t8604 * t8786 - t8783 * t9203;
t10935 = t11293 * t8841;
t10669 = t8782 * t8859;
t8416 = t8598 * t8785 - t10669;
t7976 = -t10652 * t8416 - (t10675 * t8604 + t8598 * t8786) * t8839 - t10927;
t7977 = -t10596 * t8416 - (t10673 * t8604 - t8598 * t8783) * t8839 - t10935;
t7828 = (t11292 * t8474 - t11293 * t8473) * t8839 + ((-t7977 - t10935) * t8786 + (-t7976 - t10927) * t8783) * t8840 + (-t7976 * t8786 + t7977 * t8783) * t10628;
t8130 = t10628 * t8604 - t8840 * t9203;
t11314 = t8130 * t8786;
t11315 = t8130 * t8783;
t8368 = t10617 * t8784 - t10678 * t8785 + t10669;
t7864 = t7977 * t8841 + (t10595 * t8368 - t11315) * t8840 + (t7977 * t8782 + t8368 * t8473 + (-t11292 * t8840 - t11314) * t8785) * t8839;
t7865 = t7976 * t8841 + (t10651 * t8368 + t11314) * t8840 + (t7976 * t8782 - t8368 * t8474 + (t11293 * t8840 - t11315) * t8785) * t8839;
t10319 = qJ(3,3) * t10297 - t8853;
t8112 = t9123 + t10319;
t10764 = (pkin(2) + t8735) * (-pkin(2) + t8735);
t8229 = t10323 + t10764;
t9257 = t10134 * t10764;
t9276 = t8805 * t9583;
t9389 = t10300 * t11008;
t11247 = -0.2e1 * t7681 - t7792;
t11258 = 0.2e1 * t8806;
t7798 = -t10996 / 0.2e1;
t9063 = t9312 * t11008;
t9279 = t11232 * t9584;
t9553 = t8690 * t10134;
t9410 = (-0.4e1 * t9184 - t9553) * t10743 + (t9279 - (t8720 * t9063 + t7798) * pkin(2)) * t11258 - t11247;
t10132 = t8827 * t11008;
t9437 = t8594 * t10132;
t9552 = t8720 * t10134;
t10184 = t8805 * t11020;
t9582 = t8801 * t10184;
t10185 = t8801 * t11020;
t9585 = t8720 * t10185;
t10133 = t8806 * t11008;
t9669 = pkin(2) * t10133;
t10279 = 0.2e1 * t11008;
t9700 = t8617 * t10279;
t9767 = t8853 + t10301;
t7396 = t7828 * t10085 + t7864 * t10084 + t7865 * t10076 - (t11284 * t8790 + (t10349 * t8805 + (-t10305 + t9200) * t9276 + t10355) * t8791 + (t7590 + (t10334 * t8805 + (t9389 + (t10294 * t11201 * t8833 - t8607 * t10564) * t11020) * t8720) * t8806 + t10337 * t8805 - (t8677 + t9767) * t10136 - t11229) * t8808 - t8321 * t11020) / (t9329 + t11223) * t10135 + (-(-(t8229 * t9583 + t9700) * t8833 * t8790 + (t9582 * t11142 + (-t8720 * t9257 + t9410) * t8833 + t9437) * t8791 + (-t8112 * t9585 + t7516 * t8833 * t11138 + t7589 + ((t11232 * t9552 + t7795) * t8827 + t7687) * t8806 + pkin(2) * (-pkin(2) * t10186 + t11035)) * t8808 - t8735 * (-t8805 * t10131 + t7747 * t8827 + (t8827 * t9669 + (t11020 * t8617 - t10994) * t8805) * t8720)) * t11020 - (t9438 + (t10181 * t10816 + (t10134 * t8594 + t10182 * t8617) * t8808) * t8720) * t7804) * t8133 * t8721;
t11377 = t7396 * t11359;
t10737 = t8723 * t8835;
t11358 = t11355 * t10737;
t10533 = t8808 * t8829;
t10562 = t8805 * t8829;
t8619 = t8736 * t10562;
t9328 = t10533 * t8617 + t8619;
t9152 = t8548 + t9328;
t8136 = 0.1e1 / t9152;
t10961 = t8136 * t8723;
t8830 = sin(qJ(1,2));
t8567 = t8830 * t8617;
t8836 = cos(qJ(1,2));
t8674 = t8836 * t8736;
t8349 = -t8567 * t8829 + t8674;
t11209 = -t8349 * t8791 + t8674;
t8671 = t8830 * t8736;
t8350 = -t8617 * t8836 - t8671 * t8829;
t7994 = (t8350 * t8805 - t8548 * t8830) * t8808 - t11209;
t10075 = t7994 * t10961;
t10556 = t8805 * t8835;
t8551 = t8594 * t8829;
t8322 = -t8736 * t10556 + t8551;
t8825 = legFrame(2,2);
t8773 = cos(t8825);
t10903 = t8322 * t8773;
t10687 = t8773 * t8835;
t10007 = t8617 * t10687;
t10499 = t8829 * t8836;
t8357 = t10499 * t8617 + t8671;
t8767 = sin(t8825);
t10888 = t8357 * t8767;
t11346 = -(t10007 + t10888) * t8791 + t8767 * t8671;
t10488 = t8835 * t8836;
t11240 = t8829 * t8674 - t8567;
t8077 = t8594 * t10488 + t11240 * t8805;
t7939 = (-t8077 * t8767 + t10903) * t8808 + t11346;
t10082 = t7939 * t10961;
t10707 = t8767 * t8835;
t11270 = (-t8617 * t10707 + t8357 * t8773) * t8791 - t8773 * t8671;
t8283 = t8767 * t8322;
t7938 = (t8077 * t8773 + t8283) * t8808 + t11270;
t10083 = t7938 * t10961;
t8802 = t8835 ^ 2;
t10037 = t8802 * t9319;
t10787 = t8617 * t8829;
t8866 = koppelP(2,2);
t10448 = t8841 * t8866;
t8872 = koppelP(2,1);
t10454 = t8840 * t8872;
t8688 = t8785 * t10454;
t8584 = t8688 - t10448;
t10827 = t8584 * t8786;
t8860 = koppelP(2,3);
t10622 = t8785 * t8860;
t9780 = t8841 * t10622;
t8308 = t11253 * t8866 + t9780;
t10915 = t8308 * t8783;
t10631 = t8784 * t8872;
t11305 = t8643 * t10631 - t8308;
t10466 = t8840 * t8860;
t10473 = t8839 * t8872;
t10442 = t8841 * t8872;
t10460 = t8840 * t8866;
t8573 = t10460 * t8785 + t10442;
t8227 = t8573 * t8781 + (t10473 * t8781 - t10466) * t8782;
t8465 = t8866 * t9674 + t8688;
t8995 = t8465 * t8784 - t8227;
t7961 = t11305 * t8786 + t8995 * t8783 + t8843;
t10983 = t7961 * t8767;
t10722 = t8736 * t8829;
t10604 = t8786 * t8830;
t10479 = t8839 * t8866;
t9884 = t8785 * t10479;
t9466 = t8773 * t9884;
t8245 = t10604 * t8584 - t8836 * t9466;
t9878 = t8785 * t10473;
t9465 = t8773 * t9878;
t8248 = t10604 * t8573 + t8836 * t9465;
t10599 = t8786 * t8836;
t9231 = t8830 * t9465;
t8251 = t10599 * t8573 - t9231;
t8254 = t10599 * t8584 + t8830 * t9466;
t10430 = t8842 * t8830;
t8625 = t8785 * t10466 + t8844;
t10780 = t8625 * t8773;
t8408 = t10780 * t8836 - t10430;
t9993 = t8830 * t10780;
t8411 = t8836 * t8842 + t9993;
t9798 = t8830 * t10473;
t9905 = t8773 * t10460;
t8447 = t8786 * t9798 - t8836 * t9905;
t9464 = t8830 * t9905;
t9853 = t8786 * t10473;
t8448 = t8836 * t9853 + t9464;
t9859 = t8786 * t10479;
t9904 = t8773 * t10454;
t8449 = t8830 * t9904 - t8836 * t9859;
t9799 = t8830 * t10479;
t8450 = t8786 * t9799 + t8836 * t9904;
t9847 = t8786 * t10466;
t10640 = t8783 * t8872;
t9986 = t8643 * t10640;
t11157 = ((t10722 * t8447 + t8448 * t8617) * t8781 + t8350 * t9847) * t8782 - (t10722 * t8245 - (t10722 * t8450 - t8449 * t8617) * t8782 + t8254 * t8617 + t8350 * t9986) * t8784 - t10722 * t8408 + t10915 * t8350 + t10983 * t11240 + (t10722 * t8248 + t8251 * t8617) * t8781 + t8411 * t8617;
t8664 = t8736 * t8791;
t9009 = t8499 + t8736 - t8664;
t10500 = t8829 * t8835;
t9837 = t8805 * t10500;
t11165 = -t8594 * t9837 + t8802 * t9009 - t8736;
t8520 = t10454 * t8782 + t9884;
t11180 = t8781 * (t10460 * t8782 - t9878) - t8520 * t8784 + t8625;
t11206 = t8842 - t10915;
t9158 = t8784 * t9884 - t8625;
t7778 = -(t8450 * t10674 + (t8773 * t9158 + t10983) * t8836 + (t8447 * t8782 + t8248) * t8781 + ((t9986 - t10827) * t8784 - t8782 * t9847 + t11206) * t8830) * t10037 + (t11157 * t8791 + (-t7961 * t10888 + (t8349 * t9986 + (-t10787 * t8450 - t8449 * t8736) * t8782 + t8245 * t10787 - t8254 * t8736) * t8784 - t8349 * t10915 + ((-t10787 * t8447 + t8448 * t8736) * t8781 - t8349 * t9847) * t8782 + (-t10787 * t8248 + t8251 * t8736) * t8781 + t8408 * t10787 + t8736 * t8411) * t10577 - t11157) * t8835 - t11165 * (t11180 * t8767 + t7961 * t8773);
t11007 = t7778 * t11355;
t10125 = t8835 * t11007;
t10128 = t8805 * t11007;
t10129 = t8724 * t11007;
t11366 = t11355 * t8723;
t10130 = t7778 * t11366;
t10019 = t8617 * t10780;
t10436 = t8842 * t8736;
t10616 = t8785 * t8872;
t10656 = t8782 * t8872;
t10662 = t8782 * t8866;
t10689 = t8773 * t8736;
t10826 = t8584 * t8830;
t10828 = t8584 * t8773;
t10843 = t8573 * t8786;
t10844 = t8573 * t8773;
t8561 = t9780 * t8786 - t8843;
t10854 = t8561 * t8773;
t8319 = t8548 + t8619;
t10906 = t8319 * t8836;
t11174 = t8784 * (t8465 * t8783 + t9853) - t8227 * t8783 - t8561;
t8060 = t8322 * t8840 - t8830 * t9486;
t10487 = t8835 * t8840;
t9867 = t8830 * t10595;
t8280 = -t10487 * t8617 + t8736 * t9867;
t8296 = t8548 * t10780;
t8909 = t8830 * t11174;
t8934 = t8786 * (t10479 * t8782 - t8584) + t9986;
t8964 = t8773 * t8520;
t8946 = t8830 * t8964;
t10590 = t8786 * t8866;
t9238 = t10007 * t10590;
t9239 = t8617 * t9465;
t9907 = t8773 * t10473;
t9420 = t8835 * t9907;
t9433 = t8829 * t9799;
t9797 = t8830 * t10466;
t9449 = t8786 * t9797;
t9455 = t8830 * t9780;
t9481 = t8617 * t9853;
t9489 = t8617 * t9905;
t9515 = t8322 * t9907;
t9908 = t8773 * t10479;
t9516 = t8322 * t9908;
t9517 = t10595 * t10903;
t9786 = t8835 * t10479;
t9795 = t8830 * t10442;
t9796 = t8830 * t10448;
t10497 = t8830 * t8866;
t9866 = t8786 * t10497;
t9890 = t8835 * t10616;
t9902 = t8773 * t10442;
t9906 = t8773 * t10466;
t9999 = t8805 * t8567;
t7718 = ((-t8280 * t8782 * t10631 + (-t10499 * t7961 + t8835 * t9158) * t8617 - t8736 * t8909 + (t8280 * t10662 - t8839 * (-t8617 * t9890 - t8736 * t9866)) * t8781) * t8767 + ((-t10787 * t8964 + t8736 * t8934) * t8784 - t8736 * t10915 + ((t8736 * t9853 + t8829 * t9489) * t8781 - t8736 * t9847) * t8782 + (t10843 * t8736 - t8829 * t9239) * t8781 + t8829 * t10019 + t10436) * t8836 + (-t8736 * t8946 + (-((-t8773 * t9786 + t8829 * t9795) * t8782 + t8829 * t9798 + t8584 * t10687) * t8783 + ((-t8835 * t9902 - t9433) * t8782 + t8829 * t10826 - t9420) * t8786) * t8617) * t8784 + (((t8829 * t9796 + t9420) * t8781 - t8835 * t9906) * t8782 + (t10687 * t8573 + t9433) * t8781 + t8829 * t9455) * t10793 + (((t8736 * t9905 - t8829 * t9481) * t8830 + t8841 * t9238) * t8781 + t9449 * t10787) * t8782 + ((-t10787 * t10843 - t8736 * t9465) * t8830 + t8839 * t9238) * t8781 + (t10689 * t8625 - t10785 * t8829) * t8830 + t8561 * t10007) * t8791 + ((-t7961 * t10906 + (-t10656 * t8060 - t8322 * t9884) * t8784 + t8625 * t8322 + t11174 * t9999 + (t8060 * t10662 - t8839 * (t10616 * t8322 + t8554 * t9866)) * t8781) * t8767 + ((-t8319 * t8964 - t8554 * t8934) * t8784 + t8308 * t10005 + ((t8319 * t9905 - t8805 * t9481) * t8781 + t8860 * t9487) * t8782 + (-t10004 * t8573 - t8319 * t9465) * t8781 + t8619 * t10780 + t8296 - t8500) * t8836 + (((-t8319 * t9795 - t9516) * t8782 - t8319 * t9798 + t8322 * t10828) * t8783 + ((-t8319 * t9859 + t8554 * t9904) * t8830 + t8872 * t9517) * t8782 + (t10827 * t8319 + t8554 * t9466) * t8830 + t8786 * t9515) * t8784 + (((t8319 * t9796 - t9515) * t8781 + t8322 * t9906) * t8782 + (-t10844 * t8322 + t8319 * t9799) * t8781 + t8319 * t9455) * t8783 + (((-t8319 * t9853 - t8805 * t9489) * t8830 - t8866 * t9517) * t8781 + t8319 * t9449) * t8782 + ((-t10843 * t8319 + t8805 * t9239) * t8830 - t8786 * t9516) * t8781 + (-t8842 * t8548 + (-t10436 * t8829 - t10019) * t8805) * t8830 - t8322 * t10854) * t8808 - t8736 * ((t11305 * t8783 - t8995 * t8786 + t8842) * t8836 + (t11180 * t8773 - t10983) * t8830);
t11019 = t7718 * t8136;
t10175 = t8835 * t11019;
t10176 = t8829 * t11019;
t10180 = t8723 * t11019;
t8854 = qJ(3,2) ^ 2;
t10304 = t8854 - t8875;
t10600 = t8786 * t8835;
t10688 = t8773 * t8829;
t10810 = t8594 * t8830;
t10818 = t8594 * t8773;
t10867 = t11197 * t8835;
t10923 = t11324 * t8836;
t8665 = t8736 * t8808;
t11234 = t8665 - t8554;
t8040 = -t10487 * t11197 + t11234 * t9867;
t8263 = t11197 * t9908;
t8486 = t8594 * t9799;
t8489 = t8594 * t9798;
t9415 = t8594 * t9907;
t9425 = t11197 * t9798;
t9495 = t8594 * t9908;
t9502 = t11197 * t9799;
t9503 = t11197 * t9907;
t9903 = t8773 * t10448;
t7805 = (-t7961 * t10923 + t11180 * t8551 + (t11197 * t8785 * t9786 - t10656 * t8040) * t8784 - t8625 * t10867 - t11234 * t8909 + (t8040 * t10662 - (-t11197 * t9890 - t11234 * t9866) * t8839) * t8781) * t8767 + (t11180 * t11197 * t10688 + t8296 + (t11252 * t9905 - t8784 * t8964) * t8548 + (t8934 * t8784 + (t8781 * t9853 - t9847) * t8782 + t10843 * t8781 + t11206) * t11234) * t8836 + (-t11197 * t10430 + t8773 * t10808 + (((-t11197 * t9795 - t9495) * t8782 - t9425 + t8584 * t10818) * t8784 + ((t11197 * t9796 - t9415) * t8781 + t8594 * t9906) * t8782 + (-t10818 * t8573 + t9502) * t8781 + t11197 * t9455) * t8783 + (((t8594 * t9902 - t9502) * t8782 + t11197 * t10826 + t9415) * t8784 - ((t8594 * t9903 + t9425) * t8781 - t11197 * t9797) * t8782 - (t11197 * t8573 * t8830 + t9495) * t8781 - t9780 * t10818) * t8786) * t8829 - t11234 * t8946 * t8784 + ((-(-t11197 * t9903 + t8489) * t10600 + t11234 * t9464) * t8781 + t9449 * t8548) * t8782 + (-(t10810 * t8573 - t8263) * t10600 - t11234 * t9231) * t8781 + t11234 * t9993 + (-t9415 * t10683 * t8836 + (-((t8594 * t9795 - t8263) * t8782 + t8489 + t11197 * t10828) * t8783 + (-(t11197 * t9902 + t8486) * t8782 - t9503 + t8584 * t10810) * t8786) * t8784 + (((t8594 * t9796 + t9503) * t8781 - t11197 * t9906) * t8782 + (t10844 * t11197 + t8486) * t8781 + t8594 * t9455) * t8783 - t10430 * t8594 + t10854 * t11197) * t8835;
t10993 = t7805 * t8723;
t7802 = pkin(2) * t10993;
t9402 = t11115 * t11019;
t9195 = t8723 * t9402;
t10333 = t8829 * t9195 * t8751 + t7802;
t9576 = t8723 * t10176;
t9314 = pkin(2) * t9576;
t7682 = t8668 * t9314;
t7793 = t8676 * t10993;
t10336 = t7682 + t7793;
t9575 = t8723 * t10175;
t7703 = qJ(3,2) * t9575;
t9396 = t11115 * t11007;
t9189 = t8723 * t9396;
t9137 = qJ(3,2) * t9189;
t9139 = pkin(2) * t9189;
t10348 = (t7703 - t9139) * t10297 + t9137 * t11150;
t9141 = pkin(2) * t9195;
t7697 = t8835 * t9141;
t7760 = qJ(3,2) * t10130;
t7607 = t7697 + t7760;
t9656 = pkin(2) * t10176;
t10354 = ((t10130 * t8750 + t7607) * t9750 + t9656) * t8806 + t8676 * t10176;
t10991 = t7805 * t8829;
t10738 = t8723 * t8829;
t11034 = (t10128 * t8668 - t11115 * t7805) * t10738;
t11137 = -0.2e1 * t8736;
t11200 = pkin(6) * qJ(3,2) + t10545;
t10547 = t8806 * t8835;
t11224 = pkin(2) * t10547 + t8676 * t8835;
t11230 = 0.2e1 * qJ(3,2) * t7697 + 0.2e1 * t7607 * t8750;
t10739 = t8723 * t8788;
t9974 = t8690 * t10739;
t11285 = (t7703 + (-pkin(2) * t9396 + t10175 * t8750) * t8723) * t9749 + t9974 * t11007 + t11230 + (t10304 + t8751) * t10130;
t9435 = t8805 * t10176;
t9271 = t8723 * t9435;
t7676 = t8676 * t9271;
t7694 = pkin(2) * t9271;
t9662 = t11007 * t11117;
t7517 = (-t8723 * t9662 + t7694) * t8806 + t7676 + t9139;
t9382 = -0.2e1 * t9662;
t7588 = (pkin(2) * t10562 * t9382 + t11019 * t8690) * t10739;
t9183 = t9656 * t11117;
t7591 = (-t11007 * t8690 + t11128 * t9183) * t10739;
t7688 = t9141 * t10298;
t7748 = t8676 * t10130;
t7796 = t10993 * t11117;
t8605 = t8781 * t8872 + t8784 * t8866;
t10677 = t8781 * t8866;
t8599 = -t10631 + t10677;
t9202 = t8599 * t8782 + t10622;
t11294 = t8605 * t8783 + t8786 * t9202;
t10926 = t11294 * t8841;
t11295 = t8605 * t8786 - t8783 * t9202;
t10934 = t11295 * t8841;
t10668 = t8782 * t8860;
t8417 = t8599 * t8785 - t10668;
t7978 = -t10652 * t8417 - (t10675 * t8605 + t8599 * t8786) * t8839 - t10926;
t7979 = -t10596 * t8417 - (t10673 * t8605 - t8599 * t8783) * t8839 - t10934;
t7829 = (t11294 * t8474 - t11295 * t8473) * t8839 + ((-t7979 - t10934) * t8786 + (-t7978 - t10926) * t8783) * t8840 + (-t7978 * t8786 + t7979 * t8783) * t10628;
t8131 = t10628 * t8605 - t8840 * t9202;
t11312 = t8131 * t8786;
t11313 = t8131 * t8783;
t8369 = t10616 * t8784 - t10677 * t8785 + t10668;
t7866 = t7979 * t8841 + (t10595 * t8369 - t11313) * t8840 + (t7979 * t8782 + t8369 * t8473 + (-t11294 * t8840 - t11312) * t8785) * t8839;
t7867 = t7978 * t8841 + (t10651 * t8369 + t11312) * t8840 + (t7978 * t8782 - t8369 * t8474 + (t11295 * t8840 - t11313) * t8785) * t8839;
t10318 = qJ(3,2) * t10297 - t8854;
t8113 = t9123 + t10318;
t10763 = (pkin(2) + t8736) * (-pkin(2) + t8736);
t8230 = t10323 + t10763;
t9255 = t10128 * t10763;
t9270 = t8805 * t9575;
t9388 = t10300 * t11007;
t11246 = -0.2e1 * t7682 - t7793;
t7799 = -t10993 / 0.2e1;
t9062 = t9312 * t11007;
t9273 = t11232 * t9576;
t9549 = t8690 * t10128;
t9409 = (-0.4e1 * t9183 - t9549) * t10739 + (t9273 - (t8723 * t9062 + t7799) * pkin(2)) * t11258 - t11246;
t10126 = t8829 * t11007;
t9434 = t8594 * t10126;
t9548 = t8723 * t10128;
t10178 = t8805 * t11019;
t9574 = t8802 * t10178;
t10179 = t8802 * t11019;
t9577 = t8723 * t10179;
t10127 = t8806 * t11007;
t9668 = pkin(2) * t10127;
t10278 = 0.2e1 * t11007;
t9698 = t8617 * t10278;
t9766 = t8854 + t10301;
t7397 = t7829 * t10083 + t7866 * t10082 + t7867 * t10075 - (t11285 * t8790 + (t10348 * t8805 + (-t10304 + t9200) * t9270 + t10354) * t8791 + (t7591 + (t10333 * t8805 + (t9388 + (t10294 * t11200 * t8835 - t8607 * t10562) * t11019) * t8723) * t8806 + t10336 * t8805 - (t8677 + t9766) * t10130 - t11230) * t8808 - t8322 * t11019) / (t9328 + t11224) * t10129 + (-(-(t8230 * t9575 + t9698) * t8835 * t8790 + (t9574 * t11142 + (-t8723 * t9255 + t9409) * t8835 + t9434) * t8791 + (-t8113 * t9577 + t7517 * t8835 * t11137 + t7588 + ((t11232 * t9548 + t7796) * t8829 + t7688) * t8806 + pkin(2) * (-pkin(2) * t10180 + t11034)) * t8808 - t8736 * (-t8805 * t10125 + t7748 * t8829 + (t8829 * t9668 + (t11019 * t8617 - t10991) * t8805) * t8723)) * t11019 - (t9435 + (t10175 * t10816 + (t10128 * t8594 + t10176 * t8617) * t8808) * t8723) * t7805) * t8136 * t8724;
t11376 = t7397 * t11358;
t10733 = t8726 * t8837;
t11357 = t11356 * t10733;
t10531 = t8808 * t8831;
t10560 = t8805 * t8831;
t8620 = t8737 * t10560;
t9327 = t10531 * t8617 + t8620;
t9151 = t8549 + t9327;
t8139 = 0.1e1 / t9151;
t10959 = t8139 * t8726;
t8832 = sin(qJ(1,1));
t8568 = t8832 * t8617;
t8838 = cos(qJ(1,1));
t8675 = t8838 * t8737;
t8351 = -t8568 * t8831 + t8675;
t11208 = -t8351 * t8791 + t8675;
t8672 = t8832 * t8737;
t8352 = -t8617 * t8838 - t8672 * t8831;
t7995 = (t8352 * t8805 - t8549 * t8832) * t8808 - t11208;
t10074 = t7995 * t10959;
t10554 = t8805 * t8837;
t8552 = t8594 * t8831;
t8323 = -t8737 * t10554 + t8552;
t8826 = legFrame(1,2);
t8774 = cos(t8826);
t10902 = t8323 * t8774;
t10684 = t8774 * t8837;
t10006 = t8617 * t10684;
t10494 = t8831 * t8838;
t8361 = t10494 * t8617 + t8672;
t8768 = sin(t8826);
t10887 = t8361 * t8768;
t11345 = -(t10006 + t10887) * t8791 + t8768 * t8672;
t10486 = t8837 * t8838;
t11239 = t8831 * t8675 - t8568;
t8078 = t8594 * t10486 + t11239 * t8805;
t7941 = (-t8078 * t8768 + t10902) * t8808 + t11345;
t10080 = t7941 * t10959;
t10704 = t8768 * t8837;
t11271 = (-t8617 * t10704 + t8361 * t8774) * t8791 - t8774 * t8672;
t8284 = t8768 * t8323;
t7940 = (t8078 * t8774 + t8284) * t8808 + t11271;
t10081 = t7940 * t10959;
t8803 = t8837 ^ 2;
t10036 = t8803 * t9319;
t10786 = t8617 * t8831;
t8867 = koppelP(1,2);
t10447 = t8841 * t8867;
t8873 = koppelP(1,1);
t10453 = t8840 * t8873;
t8689 = t8785 * t10453;
t8586 = t8689 - t10447;
t10824 = t8586 * t8786;
t8861 = koppelP(1,3);
t10621 = t8785 * t8861;
t9779 = t8841 * t10621;
t8309 = t11253 * t8867 + t9779;
t10914 = t8309 * t8783;
t10630 = t8784 * t8873;
t11304 = t8643 * t10630 - t8309;
t10465 = t8840 * t8861;
t10472 = t8839 * t8873;
t10441 = t8841 * t8873;
t10459 = t8840 * t8867;
t8574 = t10459 * t8785 + t10441;
t8228 = t8574 * t8781 + (t10472 * t8781 - t10465) * t8782;
t8466 = t8867 * t9674 + t8689;
t8994 = t8466 * t8784 - t8228;
t7962 = t11304 * t8786 + t8994 * t8783 + t8843;
t10982 = t7962 * t8768;
t10720 = t8737 * t8831;
t10603 = t8786 * t8832;
t10478 = t8839 * t8867;
t9883 = t8785 * t10478;
t9463 = t8774 * t9883;
t8246 = t10603 * t8586 - t8838 * t9463;
t9877 = t8785 * t10472;
t9462 = t8774 * t9877;
t8249 = t10603 * t8574 + t8838 * t9462;
t10597 = t8786 * t8838;
t9230 = t8832 * t9462;
t8252 = t10597 * t8574 - t9230;
t8255 = t10597 * t8586 + t8832 * t9463;
t10429 = t8842 * t8832;
t8626 = t8785 * t10465 + t8844;
t10779 = t8626 * t8774;
t8409 = t10779 * t8838 - t10429;
t9992 = t8832 * t10779;
t8412 = t8838 * t8842 + t9992;
t9791 = t8832 * t10472;
t9898 = t8774 * t10459;
t8451 = t8786 * t9791 - t8838 * t9898;
t9461 = t8832 * t9898;
t9852 = t8786 * t10472;
t8452 = t8838 * t9852 + t9461;
t9858 = t8786 * t10478;
t9897 = t8774 * t10453;
t8453 = t8832 * t9897 - t8838 * t9858;
t9792 = t8832 * t10478;
t8454 = t8786 * t9792 + t8838 * t9897;
t9846 = t8786 * t10465;
t10639 = t8783 * t8873;
t9985 = t8643 * t10639;
t11158 = ((t10720 * t8451 + t8452 * t8617) * t8781 + t8352 * t9846) * t8782 - (t10720 * t8246 - (t10720 * t8454 - t8453 * t8617) * t8782 + t8255 * t8617 + t8352 * t9985) * t8784 - t10720 * t8409 + t10914 * t8352 + t10982 * t11239 + (t10720 * t8249 + t8252 * t8617) * t8781 + t8412 * t8617;
t8666 = t8737 * t8791;
t9008 = t8499 + t8737 - t8666;
t10495 = t8831 * t8837;
t9836 = t8805 * t10495;
t11164 = -t8594 * t9836 + t8803 * t9008 - t8737;
t8521 = t10453 * t8782 + t9883;
t11181 = t8781 * (t10459 * t8782 - t9877) - t8521 * t8784 + t8626;
t11207 = t8842 - t10914;
t9157 = t8784 * t9883 - t8626;
t7779 = -(t8454 * t10674 + (t8774 * t9157 + t10982) * t8838 + (t8451 * t8782 + t8249) * t8781 + ((t9985 - t10824) * t8784 - t8782 * t9846 + t11207) * t8832) * t10036 + (t11158 * t8791 + (-t7962 * t10887 + (t8351 * t9985 + (-t10786 * t8454 - t8453 * t8737) * t8782 + t8246 * t10786 - t8255 * t8737) * t8784 - t8351 * t10914 + ((-t10786 * t8451 + t8452 * t8737) * t8781 - t8351 * t9846) * t8782 + (-t10786 * t8249 + t8252 * t8737) * t8781 + t8409 * t10786 + t8737 * t8412) * t10577 - t11158) * t8837 - t11164 * (t11181 * t8768 + t7962 * t8774);
t11006 = t7779 * t11356;
t10119 = t8837 * t11006;
t10122 = t8805 * t11006;
t10123 = t8727 * t11006;
t11364 = t11356 * t8726;
t10124 = t7779 * t11364;
t10018 = t8617 * t10779;
t10435 = t8842 * t8737;
t10615 = t8785 * t8873;
t10655 = t8782 * t8873;
t10661 = t8782 * t8867;
t10686 = t8774 * t8737;
t10823 = t8586 * t8832;
t10825 = t8586 * t8774;
t10841 = t8574 * t8786;
t10842 = t8574 * t8774;
t8562 = t9779 * t8786 - t8843;
t10853 = t8562 * t8774;
t8320 = t8549 + t8620;
t10905 = t8320 * t8838;
t11175 = t8784 * (t8466 * t8783 + t9852) - t8228 * t8783 - t8562;
t8061 = t8323 * t8840 - t8832 * t9486;
t10485 = t8837 * t8840;
t9865 = t8832 * t10595;
t8281 = -t10485 * t8617 + t8737 * t9865;
t8297 = t8549 * t10779;
t8908 = t8832 * t11175;
t8933 = t8786 * (t10478 * t8782 - t8586) + t9985;
t8963 = t8774 * t8521;
t8945 = t8832 * t8963;
t10589 = t8786 * t8867;
t9236 = t10006 * t10589;
t9237 = t8617 * t9462;
t9430 = t8831 * t9792;
t9790 = t8832 * t10465;
t9448 = t8786 * t9790;
t9454 = t8832 * t9779;
t9900 = t8774 * t10472;
t9460 = t8837 * t9900;
t9480 = t8617 * t9852;
t9488 = t8617 * t9898;
t9512 = t8323 * t9900;
t9901 = t8774 * t10478;
t9513 = t8323 * t9901;
t9514 = t10595 * t10902;
t9785 = t8837 * t10478;
t9788 = t8832 * t10441;
t9789 = t8832 * t10447;
t10492 = t8832 * t8867;
t9864 = t8786 * t10492;
t9889 = t8837 * t10615;
t9895 = t8774 * t10441;
t9899 = t8774 * t10465;
t9998 = t8805 * t8568;
t7719 = ((-t8281 * t8782 * t10630 + (-t10494 * t7962 + t8837 * t9157) * t8617 - t8737 * t8908 + (t8281 * t10661 - t8839 * (-t8617 * t9889 - t8737 * t9864)) * t8781) * t8768 + ((-t10786 * t8963 + t8737 * t8933) * t8784 - t8737 * t10914 + ((t8737 * t9852 + t8831 * t9488) * t8781 - t8737 * t9846) * t8782 + (t10841 * t8737 - t8831 * t9237) * t8781 + t8831 * t10018 + t10435) * t8838 + (-t8737 * t8945 + (-((-t8774 * t9785 + t8831 * t9788) * t8782 + t8831 * t9791 + t8586 * t10684) * t8783 + ((-t8837 * t9895 - t9430) * t8782 + t8831 * t10823 - t9460) * t8786) * t8617) * t8784 + (((t8831 * t9789 + t9460) * t8781 - t8837 * t9899) * t8782 + (t10684 * t8574 + t9430) * t8781 + t8831 * t9454) * t10793 + (((t8737 * t9898 - t8831 * t9480) * t8832 + t8841 * t9236) * t8781 + t9448 * t10786) * t8782 + ((-t10786 * t10841 - t8737 * t9462) * t8832 + t8839 * t9236) * t8781 + (t10686 * t8626 - t10785 * t8831) * t8832 + t8562 * t10006) * t8791 + ((-t7962 * t10905 + (-t10655 * t8061 - t8323 * t9883) * t8784 + t8626 * t8323 + t11175 * t9998 + (t8061 * t10661 - t8839 * (t10615 * t8323 + t8554 * t9864)) * t8781) * t8768 + ((-t8320 * t8963 - t8554 * t8933) * t8784 + t8309 * t10005 + ((t8320 * t9898 - t8805 * t9480) * t8781 + t8861 * t9487) * t8782 + (-t10004 * t8574 - t8320 * t9462) * t8781 + t8620 * t10779 + t8297 - t8500) * t8838 + (((-t8320 * t9788 - t9513) * t8782 - t8320 * t9791 + t8323 * t10825) * t8783 + ((-t8320 * t9858 + t8554 * t9897) * t8832 + t8873 * t9514) * t8782 + (t10824 * t8320 + t8554 * t9463) * t8832 + t8786 * t9512) * t8784 + (((t8320 * t9789 - t9512) * t8781 + t8323 * t9899) * t8782 + (-t10842 * t8323 + t8320 * t9792) * t8781 + t8320 * t9454) * t8783 + (((-t8320 * t9852 - t8805 * t9488) * t8832 - t8867 * t9514) * t8781 + t8320 * t9448) * t8782 + ((-t10841 * t8320 + t8805 * t9237) * t8832 - t8786 * t9513) * t8781 + (-t8842 * t8549 + (-t10435 * t8831 - t10018) * t8805) * t8832 - t8323 * t10853) * t8808 - t8737 * ((t11304 * t8783 - t8994 * t8786 + t8842) * t8838 + (t11181 * t8774 - t10982) * t8832);
t11018 = t7719 * t8139;
t10169 = t8837 * t11018;
t10170 = t8831 * t11018;
t10174 = t8726 * t11018;
t8855 = qJ(3,1) ^ 2;
t10303 = t8855 - t8875;
t10598 = t8786 * t8837;
t10685 = t8774 * t8831;
t10809 = t8594 * t8832;
t10817 = t8594 * t8774;
t10866 = t11198 * t8837;
t10922 = t11323 * t8838;
t8667 = t8737 * t8808;
t11233 = t8667 - t8554;
t8041 = -t10485 * t11198 + t11233 * t9865;
t8264 = t11198 * t9901;
t8487 = t8594 * t9792;
t8490 = t8594 * t9791;
t9414 = t8594 * t9900;
t9424 = t11198 * t9791;
t9494 = t8594 * t9901;
t9500 = t11198 * t9792;
t9501 = t11198 * t9900;
t9896 = t8774 * t10447;
t7806 = (-t7962 * t10922 + t11181 * t8552 + (t11198 * t8785 * t9785 - t10655 * t8041) * t8784 - t8626 * t10866 - t11233 * t8908 + (t8041 * t10661 - t8839 * (-t11198 * t9889 - t11233 * t9864)) * t8781) * t8768 + (t11181 * t11198 * t10685 + t8297 + (t11252 * t9898 - t8784 * t8963) * t8549 + (t8933 * t8784 + (t8781 * t9852 - t9846) * t8782 + t10841 * t8781 + t11207) * t11233) * t8838 + (-t11198 * t10429 + t8774 * t10808 + (((-t11198 * t9788 - t9494) * t8782 - t9424 + t8586 * t10817) * t8784 + ((t11198 * t9789 - t9414) * t8781 + t8594 * t9899) * t8782 + (-t10817 * t8574 + t9500) * t8781 + t11198 * t9454) * t8783 + (((t8594 * t9895 - t9500) * t8782 + t11198 * t10823 + t9414) * t8784 - ((t8594 * t9896 + t9424) * t8781 - t11198 * t9790) * t8782 - (t11198 * t8574 * t8832 + t9494) * t8781 - t9779 * t10817) * t8786) * t8831 - t11233 * t8945 * t8784 + ((-(-t11198 * t9896 + t8490) * t10598 + t11233 * t9461) * t8781 + t9448 * t8549) * t8782 + (-(t10809 * t8574 - t8264) * t10598 - t11233 * t9230) * t8781 + t11233 * t9992 + (-t9414 * t10683 * t8838 + (-((t8594 * t9788 - t8264) * t8782 + t8490 + t11198 * t10825) * t8783 + (-(t11198 * t9895 + t8487) * t8782 - t9501 + t8586 * t10809) * t8786) * t8784 + (((t8594 * t9789 + t9501) * t8781 - t11198 * t9899) * t8782 + (t10842 * t11198 + t8487) * t8781 + t8594 * t9454) * t8783 - t10429 * t8594 + t10853 * t11198) * t8837;
t10990 = t7806 * t8726;
t7803 = pkin(2) * t10990;
t9401 = t11115 * t11018;
t9194 = t8726 * t9401;
t10332 = t8831 * t9194 * t8751 + t7803;
t9568 = t8726 * t10170;
t9313 = pkin(2) * t9568;
t7683 = t8668 * t9313;
t7794 = t8676 * t10990;
t10335 = t7683 + t7794;
t9567 = t8726 * t10169;
t7704 = qJ(3,1) * t9567;
t9395 = t11115 * t11006;
t9188 = t8726 * t9395;
t9138 = qJ(3,1) * t9188;
t9146 = pkin(2) * t9188;
t10347 = (t7704 - t9146) * t10297 + t9138 * t11150;
t9140 = pkin(2) * t9194;
t7698 = t8837 * t9140;
t7761 = qJ(3,1) * t10124;
t7608 = t7698 + t7761;
t9655 = pkin(2) * t10170;
t10353 = ((t10124 * t8750 + t7608) * t9750 + t9655) * t8806 + t8676 * t10170;
t10988 = t7806 * t8831;
t10734 = t8726 * t8831;
t11033 = (t10122 * t8668 - t11115 * t7806) * t10734;
t11136 = -0.2e1 * t8737;
t11199 = pkin(6) * qJ(3,1) + t10545;
t10546 = t8806 * t8837;
t11225 = pkin(2) * t10546 + t8676 * t8837;
t11231 = 0.2e1 * qJ(3,1) * t7698 + 0.2e1 * t7608 * t8750;
t10735 = t8726 * t8788;
t9973 = t8690 * t10735;
t11286 = (t7704 + (-pkin(2) * t9395 + t10169 * t8750) * t8726) * t9749 + t9973 * t11006 + t11231 + (t10303 + t8751) * t10124;
t9432 = t8805 * t10170;
t9265 = t8726 * t9432;
t7677 = t8676 * t9265;
t7695 = pkin(2) * t9265;
t9661 = t11006 * t11117;
t7518 = (-t8726 * t9661 + t7695) * t8806 + t7677 + t9146;
t9182 = t9655 * t11117;
t7592 = (-t11006 * t8690 + t11128 * t9182) * t10735;
t9381 = -0.2e1 * t9661;
t7593 = (pkin(2) * t10560 * t9381 + t11018 * t8690) * t10735;
t7689 = t9140 * t10298;
t7749 = t8676 * t10124;
t7797 = t10990 * t11117;
t8606 = t8781 * t8873 + t8784 * t8867;
t10676 = t8781 * t8867;
t8600 = -t10630 + t10676;
t9201 = t8600 * t8782 + t10621;
t11296 = t8606 * t8783 + t8786 * t9201;
t10925 = t11296 * t8841;
t11297 = t8606 * t8786 - t8783 * t9201;
t10933 = t11297 * t8841;
t10667 = t8782 * t8861;
t8418 = t8600 * t8785 - t10667;
t7980 = -t10652 * t8418 - (t10675 * t8606 + t8600 * t8786) * t8839 - t10925;
t7981 = -t10596 * t8418 - (t10673 * t8606 - t8600 * t8783) * t8839 - t10933;
t7830 = (t11296 * t8474 - t11297 * t8473) * t8839 + ((-t7981 - t10933) * t8786 + (-t7980 - t10925) * t8783) * t8840 + (-t7980 * t8786 + t7981 * t8783) * t10628;
t8132 = t10628 * t8606 - t8840 * t9201;
t11310 = t8132 * t8786;
t11311 = t8132 * t8783;
t8370 = t10615 * t8784 - t10676 * t8785 + t10667;
t7868 = t7981 * t8841 + (t10595 * t8370 - t11311) * t8840 + (t7981 * t8782 + t8370 * t8473 + (-t11296 * t8840 - t11310) * t8785) * t8839;
t7869 = t7980 * t8841 + (t10651 * t8370 + t11310) * t8840 + (t7980 * t8782 - t8370 * t8474 + (t11297 * t8840 - t11311) * t8785) * t8839;
t10317 = qJ(3,1) * t10297 - t8855;
t8114 = t9123 + t10317;
t10762 = (pkin(2) + t8737) * (-pkin(2) + t8737);
t8231 = t10323 + t10762;
t9253 = t10122 * t10762;
t9264 = t8805 * t9567;
t9387 = t10300 * t11006;
t11245 = -0.2e1 * t7683 - t7794;
t7800 = -t10990 / 0.2e1;
t9061 = t9312 * t11006;
t9267 = t11232 * t9568;
t9545 = t8690 * t10122;
t9408 = (-0.4e1 * t9182 - t9545) * t10735 + (t9267 - (t8726 * t9061 + t7800) * pkin(2)) * t11258 - t11245;
t10120 = t8831 * t11006;
t9431 = t8594 * t10120;
t9544 = t8726 * t10122;
t10172 = t8805 * t11018;
t9566 = t8803 * t10172;
t10173 = t8803 * t11018;
t9569 = t8726 * t10173;
t10121 = t8806 * t11006;
t9667 = pkin(2) * t10121;
t10277 = 0.2e1 * t11006;
t9696 = t8617 * t10277;
t9765 = t8855 + t10301;
t7398 = t7830 * t10081 + t7868 * t10080 + t7869 * t10074 - (t11286 * t8790 + (t10347 * t8805 + (-t10303 + t9200) * t9264 + t10353) * t8791 + (t7592 + (t10332 * t8805 + (t9387 + (t10294 * t11199 * t8837 - t8607 * t10560) * t11018) * t8726) * t8806 + t10335 * t8805 - (t8677 + t9765) * t10124 - t11231) * t8808 - t8323 * t11018) / (t9327 + t11225) * t10123 + (-(-(t8231 * t9567 + t9696) * t8837 * t8790 + (t9566 * t11142 + (-t8726 * t9253 + t9408) * t8837 + t9431) * t8791 + (-t8114 * t9569 + t7518 * t8837 * t11136 + t7593 + ((t11232 * t9544 + t7797) * t8831 + t7689) * t8806 + (-pkin(2) * t10174 + t11033) * pkin(2)) * t8808 - t8737 * (-t8805 * t10119 + t7749 * t8831 + (t8831 * t9667 + (t11018 * t8617 - t10988) * t8805) * t8726)) * t11018 - (t9432 + (t10169 * t10816 + (t10122 * t8594 + t10170 * t8617) * t8808) * t8726) * t7806) * t8139 * t8727;
t11375 = t7398 * t11357;
t10526 = t8809 * t8815;
t11029 = t7711 ^ 2 / t9156 ^ 2;
t9627 = t10526 * t11029;
t11373 = t9627 * t11386;
t10521 = t8811 * t8817;
t11028 = t7712 ^ 2 / t9155 ^ 2;
t9625 = t10521 * t11028;
t11371 = t9625 * t11385;
t10516 = t8813 * t8819;
t11027 = t7713 ^ 2 / t9154 ^ 2;
t9623 = t10516 * t11027;
t11369 = t9623 * t11384;
t11023 = t7717 ^ 2 / t9153 ^ 2;
t10191 = t8827 * t11023;
t9594 = t8833 * t10191;
t11367 = t9594 * t11383;
t11022 = t7718 ^ 2 / t9152 ^ 2;
t10189 = t8829 * t11022;
t9592 = t8835 * t10189;
t11365 = t9592 * t11382;
t11021 = t7719 ^ 2 / t9151 ^ 2;
t10187 = t8831 * t11021;
t9590 = t8837 * t10187;
t11363 = t9590 * t11381;
t9073 = t11287 * t8769;
t9072 = t11288 * t8770;
t9071 = t11290 * t8771;
t9070 = t11292 * t8772;
t9075 = t8773 * t11294;
t9074 = t8774 * t11296;
t8984 = t10577 * t8338 - t11242 * t8791 + t11242;
t11344 = t8765 * t8731 + (t8765 * t10033 + t8771 * t8984) * t8819;
t8985 = t10577 * t8334 - t11243 * t8791 + t11243;
t11343 = t8764 * t8730 + (t8764 * t10034 + t8770 * t8985) * t8817;
t8986 = t10577 * t8330 - t11244 * t8791 + t11244;
t11342 = t8763 * t8729 + (t8763 * t10035 + t8769 * t8986) * t8815;
t11334 = t8832 * t11233 + t10922;
t11333 = t8830 * t11234 + t10923;
t11332 = t8828 * t11235 + t10924;
t11331 = t8814 * t11236 + t10930;
t11330 = t8812 * t11237 + t10931;
t11329 = t8810 * t11238 + t10932;
t10553 = t8805 * t8838;
t10024 = t8594 * t10553;
t10027 = t8594 * t10560;
t9326 = -t8499 - t8750;
t8275 = -qJ(3,1) + t8666 + t9326;
t8981 = t10577 * t8361 - t11239 * t8791 + t11239;
t7926 = (t8768 * t10027 + t8774 * t8981) * t8837 + t8768 * t8737 + (t8774 * t10024 + t8275 * t8768) * t8803;
t10555 = t8805 * t8836;
t10025 = t8594 * t10555;
t10028 = t8594 * t10562;
t8274 = -qJ(3,2) + t8664 + t9326;
t8982 = t10577 * t8357 - t11240 * t8791 + t11240;
t7924 = (t8767 * t10028 + t8773 * t8982) * t8835 + t8767 * t8736 + (t8773 * t10025 + t8274 * t8767) * t8802;
t10557 = t8805 * t8834;
t10026 = t8594 * t10557;
t10029 = t8594 * t10564;
t8273 = -qJ(3,3) + t8662 + t9326;
t8983 = t10577 * t8353 - t11241 * t8791 + t11241;
t7922 = (t8766 * t10029 + t8772 * t8983) * t8833 + t8766 * t8735 + (t8772 * t10026 + t8273 * t8766) * t8801;
t11303 = t11233 * t8838;
t11302 = t11234 * t8836;
t11301 = t11235 * t8834;
t11300 = t11236 * t8820;
t11299 = t11237 * t8818;
t11298 = t11238 * t8816;
t11122 = t8791 / 0.2e1;
t10273 = t11122 - 0.1e1 / 0.2e1;
t7732 = pkin(1) * t9564;
t11265 = 0.4e1 * t10273 * t11005 + 0.4e1 * t7732;
t7733 = pkin(1) * t9560;
t11264 = 0.4e1 * t10273 * t11002 + 0.4e1 * t7733;
t7734 = pkin(1) * t9556;
t11263 = 0.4e1 * t10273 * t10999 + 0.4e1 * t7734;
t7756 = pkin(1) * t9552;
t11262 = 0.4e1 * t10996 * t11122 + 0.4e1 * t7756 + 0.4e1 * t7798;
t7757 = pkin(1) * t9548;
t11261 = 0.4e1 * t10993 * t11122 + 0.4e1 * t7757 + 0.4e1 * t7799;
t7758 = pkin(1) * t9544;
t11260 = 0.4e1 * t10990 * t11122 + 0.4e1 * t7758 + 0.4e1 * t7800;
t11259 = 0.4e1 * t8788;
t10293 = 0.2e1 * t8805;
t9573 = t11006 * t11018;
t9176 = 0.2e1 * t9573;
t9581 = t11007 * t11019;
t9177 = 0.2e1 * t9581;
t9589 = t11008 * t11020;
t9178 = 0.2e1 * t9589;
t9604 = t11012 * t11024;
t9179 = 0.2e1 * t9604;
t9613 = t11013 * t11025;
t9180 = 0.2e1 * t9613;
t9622 = t11014 * t11026;
t9181 = 0.2e1 * t9622;
t11257 = t8791 - 0.1e1;
t10471 = t8840 * t8841;
t10636 = t8784 * t8840;
t8504 = t10627 * t8781 - t10636;
t10862 = t8504 * t8643;
t10637 = t8784 * t8786;
t8494 = -t10637 * t8782 + t8781 * t8783;
t11251 = t8785 * (t10471 * t8494 + t10862 * t8786);
t9673 = t8875 - t8751;
t11186 = t8783 * t11257;
t11185 = t8786 * t11257;
t11135 = -0.2e1 * t8791;
t10276 = t8617 * t11135;
t7738 = pkin(1) * t10163;
t8179 = t8544 - t10874;
t7945 = -t11329 * t8763 + t8769 * t8179;
t7948 = t11329 * t8769 + t8763 * t8179;
t8005 = -t8810 * t9156 + t11298;
t9000 = t11115 * (pkin(2) + pkin(6)) * (pkin(2) - pkin(6)) - t8741;
t9001 = t8805 * t11232;
t9081 = t8707 * t9187;
t9226 = t8808 * t9446;
t9296 = t9978 * t11026;
t10316 = t8751 + t8875;
t9614 = (t10316 - t10322) * t10210;
t9686 = t8220 * t8791 + t8108;
t10275 = -0.2e1 * t10577;
t9693 = t8807 * t10275;
t9694 = -0.2e1 * t8499;
t7393 = -t8708 * (t11014 * (t11281 * t8791 + (-t9296 * t10570 + ((-t8751 + (pkin(2) - qJ(3,6)) * (pkin(2) + qJ(3,6))) * t9617 + t10352) * t8805 + t10358) * t8808 + t7565 + ((t9000 * t9618 + t10343) * t8805 + t8874 * t9615 * t10760 + t7666 * t11117 + t9150 * t10299 + t7738 * t11151) * t8806 + ((pkin(1) * t9318 + t7783) * t11115 + t9081 + pkin(1) * t11005) * t8805 - (t7660 + 0.2e1 * t7735) * t8750 + (-pkin(2) * qJ(3,6) * t10205 + pkin(1) * t9386) * t8707 * t11115 - t9770 * t10163) + t11026 * (-(t8729 * t9694 + t9686) * t9619 + (t9413 * t8808 + (t7657 * t8806 + t7639) * t11141 + (t10276 + (-t8729 * t10247 + (-t8850 + t9673) * t10577 + (qJ(3,6) * t9693 + t10582 * t8729) * pkin(6)) * t8707) * t11014) * t8815 + t9226 + t7564 + ((t10163 * t9001 + t7783) * t8809 + t7654) * t8806 + pkin(2) * t11041 - t9614) + (t9319 * t11014 + (t8541 * t8808 + t10791) * t11026) * t11005) + (t7825 * t7948 + t7858 * t7945 + t7859 * t8005) * t8707;
t7739 = pkin(1) * t10157;
t8180 = t8545 - t10873;
t7946 = -t11330 * t8764 + t8770 * t8180;
t7949 = t11330 * t8770 + t8764 * t8180;
t8006 = -t8812 * t9155 + t11299;
t9080 = t8710 * t9186;
t9225 = t8808 * t9443;
t9292 = t9977 * t11025;
t9605 = (t10316 - t10321) * t10204;
t9685 = t8221 * t8791 + t8109;
t7394 = -t8711 * (t11013 * (t11282 * t8791 + (-t9292 * t10568 + ((-t8751 + (pkin(2) - qJ(3,5)) * (pkin(2) + qJ(3,5))) * t9608 + t10351) * t8805 + t10357) * t8808 + t7566 + ((t9000 * t9609 + t10342) * t8805 + t8874 * t9606 * t10754 + t7667 * t11117 + t9149 * t10299 + t7739 * t11151) * t8806 + ((pkin(1) * t9317 + t7784) * t11115 + t9080 + pkin(1) * t11002) * t8805 - (t7661 + 0.2e1 * t7736) * t8750 + (-pkin(2) * qJ(3,5) * t10199 + pkin(1) * t9385) * t8710 * t11115 - t9769 * t10157) + t11025 * (-(t8730 * t9694 + t9685) * t9610 + (t9412 * t8808 + (t7658 * t8806 + t7640) * t11140 + (t10276 + (-t8730 * t10247 + (-t8851 + t9673) * t10577 + (qJ(3,5) * t9693 + t10582 * t8730) * pkin(6)) * t8710) * t11013) * t8817 + t9225 + t7567 + ((t10157 * t9001 + t7784) * t8811 + t7655) * t8806 + pkin(2) * t11040 - t9605) + (t9319 * t11013 + (t8542 * t8808 + t10790) * t11025) * t11002) + (t7826 * t7949 + t7860 * t7946 + t7861 * t8006) * t8710;
t7740 = pkin(1) * t10151;
t8181 = t8546 - t10872;
t7947 = -t11331 * t8765 + t8771 * t8181;
t7950 = t11331 * t8771 + t8765 * t8181;
t8007 = -t8814 * t9154 + t11300;
t9079 = t8713 * t9185;
t9224 = t8808 * t9440;
t9601 = (t10316 - t10320) * t10198;
t9684 = t8222 * t8791 + t8110;
t7395 = -t8714 * (t11012 * (t11283 * t8791 + (-t9288 * t10768 + ((-t8751 + (pkin(2) - qJ(3,4)) * (pkin(2) + qJ(3,4))) * t9598 + t10350) * t8805 + t10356) * t8808 + t7568 + ((t9000 * t9599 + t10341) * t8805 + t8874 * t9596 * t10748 + t7668 * t11117 + t9148 * t10299 + t7740 * t11151) * t8806 + ((pkin(1) * t9316 + t7785) * t11115 + t9079 + pkin(1) * t10999) * t8805 - (t7662 + 0.2e1 * t7737) * t8750 + (-pkin(2) * qJ(3,4) * t10193 + pkin(1) * t9384) * t8713 * t11115 - t9768 * t10151) + t11024 * (-(t8731 * t9694 + t9684) * t9600 + (t9411 * t8808 + (t7659 * t8806 + t7641) * t11139 + (t10276 + (-t8731 * t10247 + (-t8852 + t9673) * t10577 + (qJ(3,4) * t9693 + t10582 * t8731) * pkin(6)) * t8713) * t11012) * t8819 + t9224 + t7569 + ((t10151 * t9001 + t7785) * t8813 + t7656) * t8806 + pkin(2) * t11039 - t9601) + (t9319 * t11012 + (t8543 * t8808 + t10789) * t11024) * t10999) + (t7827 * t7950 + t7862 * t7947 + t7863 * t8007) * t8713;
t7762 = pkin(1) * t10136;
t8199 = t8550 - t10868;
t7951 = -t11332 * t8766 + t8772 * t8199;
t7954 = t11332 * t8772 + t8766 * t8199;
t8008 = -t8828 * t9153 + t11301;
t9078 = t8720 * t9184;
t9223 = t8808 * t9437;
t9586 = (t10316 - t10319) * t10186;
t9683 = t8229 * t8791 + t8112;
t7399 = -t8721 * (t11008 * (t11284 * t8791 + (-t9276 * t10768 + ((-t8751 + (pkin(2) - qJ(3,3)) * (pkin(2) + qJ(3,3))) * t9583 + t10349) * t8805 + t10355) * t8808 + t7590 + ((t9000 * t9584 + t10334) * t8805 + t9147 * t10299 + t7762 * t11151 + t11201 * t8804 * t9583) * t8806 + ((pkin(1) * t9315 + t7795) * t11115 + t9078 + pkin(1) * t10996) * t8805 - (t7696 + 0.2e1 * t7759) * t8750 + (-pkin(2) * qJ(3,3) * t10181 + pkin(1) * t9383) * t8720 * t11115 - t9767 * t10136) + t11020 * (-(t8735 * t9694 + t9683) * t9585 + (t9410 * t8808 + (t7693 * t8806 + t7675) * t11138 + (t10276 + (-t8735 * t10247 + (-t8853 + t9673) * t10577 + (qJ(3,3) * t9693 + t10582 * t8735) * pkin(6)) * t8720) * t11008) * t8833 + t9223 + t7589 + ((t10136 * t9001 + t7795) * t8827 + t7687) * t8806 + pkin(2) * t11035 - t9586) + (t9319 * t11008 + (t8547 * t8808 + t10788) * t11020) * t10996) + (t7828 * t7954 + t7864 * t7951 + t7865 * t8008) * t8720;
t7763 = pkin(1) * t10130;
t8200 = t8551 - t10867;
t7952 = -t11333 * t8767 + t8773 * t8200;
t7955 = t11333 * t8773 + t8767 * t8200;
t8009 = -t8830 * t9152 + t11302;
t9077 = t8723 * t9183;
t9221 = t8808 * t9434;
t9578 = (t10316 - t10318) * t10180;
t9682 = t8230 * t8791 + t8113;
t7400 = -t8724 * (t11007 * (t11285 * t8791 + (-t9270 * t10768 + ((-t8751 + (pkin(2) - qJ(3,2)) * (pkin(2) + qJ(3,2))) * t9575 + t10348) * t8805 + t10354) * t8808 + t7591 + ((t9000 * t9576 + t10333) * t8805 + t9139 * t10299 + t7763 * t11151 + t11200 * t8804 * t9575) * t8806 + ((pkin(1) * t9314 + t7796) * t11115 + t9077 + pkin(1) * t10993) * t8805 - (t7697 + 0.2e1 * t7760) * t8750 + (-pkin(2) * qJ(3,2) * t10175 + pkin(1) * t9382) * t8723 * t11115 - t9766 * t10130) + t11019 * (-(t8736 * t9694 + t9682) * t9577 + (t9409 * t8808 + (t7694 * t8806 + t7676) * t11137 + (t10276 + (-t8736 * t10247 + (-t8854 + t9673) * t10577 + (qJ(3,2) * t9693 + t10582 * t8736) * pkin(6)) * t8723) * t11007) * t8835 + t9221 + t7588 + ((t10130 * t9001 + t7796) * t8829 + t7688) * t8806 + pkin(2) * t11034 - t9578) + (t9319 * t11007 + (t8548 * t8808 + t10787) * t11019) * t10993) + (t7829 * t7955 + t7866 * t7952 + t7867 * t8009) * t8723;
t7764 = pkin(1) * t10124;
t8201 = t8552 - t10866;
t7953 = -t11334 * t8768 + t8774 * t8201;
t7956 = t11334 * t8774 + t8768 * t8201;
t8010 = -t8832 * t9151 + t11303;
t9076 = t8726 * t9182;
t9219 = t8808 * t9431;
t9570 = (t10316 - t10317) * t10174;
t9681 = t8231 * t8791 + t8114;
t7401 = -t8727 * (t11006 * (t11286 * t8791 + (-t9264 * t10768 + ((-t8751 + (pkin(2) - qJ(3,1)) * (pkin(2) + qJ(3,1))) * t9567 + t10347) * t8805 + t10353) * t8808 + t7592 + ((t9000 * t9568 + t10332) * t8805 + t9146 * t10299 + t7764 * t11151 + t11199 * t8804 * t9567) * t8806 + ((pkin(1) * t9313 + t7797) * t11115 + t9076 + pkin(1) * t10990) * t8805 - (t7698 + 0.2e1 * t7761) * t8750 + (-pkin(2) * qJ(3,1) * t10169 + pkin(1) * t9381) * t8726 * t11115 - t9765 * t10124) + t11018 * (-(t8737 * t9694 + t9681) * t9569 + (t9408 * t8808 + (t7695 * t8806 + t7677) * t11136 + (t10276 + (-t8737 * t10247 + (-t8855 + t9673) * t10577 + (qJ(3,1) * t9693 + t10582 * t8737) * pkin(6)) * t8726) * t11006) * t8837 + t9219 + t7593 + ((t10124 * t9001 + t7797) * t8831 + t7689) * t8806 + pkin(2) * t11033 - t9570) + (t9319 * t11006 + (t8549 * t8808 + t10786) * t11018) * t10990) + (t7830 * t7956 + t7868 * t7953 + t7869 * t8010) * t8726;
t11152 = -0.2e1 * pkin(1);
t8256 = t8504 ^ 2;
t10682 = t8781 * t8840;
t8506 = t10627 * t8784 + t10682;
t8257 = t8506 ^ 2;
t8481 = t8643 ^ 2;
t11149 = -0.2e1 * t7732 + 0.2e1 * t11005;
t11148 = -0.2e1 * t7733 + 0.2e1 * t11002;
t11147 = -0.2e1 * t7734 + 0.2e1 * t10999;
t11146 = -0.2e1 * t7756 + 0.2e1 * t10996;
t11145 = -0.2e1 * t7757 + 0.2e1 * t10993;
t11144 = -0.2e1 * t7758 + 0.2e1 * t10990;
t11143 = -0.2e1 * t11232;
t11134 = 0.2e1 * t8795;
t11133 = 0.2e1 * t8796;
t11132 = 0.2e1 * t8797;
t11131 = 0.2e1 * t8801;
t11130 = 0.2e1 * t8802;
t11129 = 0.2e1 * t8803;
t11127 = -0.4e1 * t8806;
t11121 = -t8808 / 0.2e1;
t11120 = t11135 + 0.1e1;
t11119 = 0.2e1 * t8791 - 0.2e1;
t11118 = 0.4e1 * t8791 - 0.4e1;
t11114 = qJ(3,1) * t7398;
t10048 = t8594 * (t8808 + 0.1e1) * (t8808 - 0.1e1);
t10092 = t7926 * t11364;
t7925 = (-t10024 * t8768 + t8275 * t8774) * t8803 + (t10027 * t8774 - t8768 * t8981) * t8837 + t10686;
t10093 = t7925 * t11364;
t10815 = t8594 * t8808;
t10989 = t7806 * t8805;
t7674 = t8594 * t9568;
t8553 = -t8751 + t9771;
t9002 = (0.2e1 * t9182 + t9545) * t10735 - t7803 * t8806 - t10335;
t10060 = t11356 * t10734;
t8203 = -t11232 * t8806 + (t10298 * t8788 - t8668) * pkin(2);
t9248 = t8203 * t7779 * t10060;
t9252 = t8617 * t9544;
t9311 = (t8790 - t8808) * t11142;
t9407 = -t10323 + t9673;
t9530 = t8231 * t10124;
t8004 = t11323 * t8832 - t11303;
t9536 = t8004 * t11357;
t9571 = t11232 * t10170;
t9653 = t11120 * t8554;
t9751 = t11115 * t8831;
t7413 = -t8805 * t7869 * t9536 + t7830 * t10092 + t7868 * t10093 + (-((t7518 * t8667 + t8790 * t9696 + t8791 * t9002 - t9002) * t8837 - t7749 * t10720 + ((t8231 * t8790 + (t9407 + t10317) * t8808 + t8737 * t9653) * t10173 + (((t11150 * t9061 - t9571) * t8806 + t9253) * t8791 + (t8805 * t9387 + t9571) * t8806 - t8553 * t10122) * t8837 - (t9667 - t10989) * t10720) * t8726) * t10123 + (((t8737 * t9311 + t8805 * t9681) * t9569 + (-t8790 * t9530 + ((t9076 * t11259 + (-t7803 - 0.2e1 * t9267) * t8806 + t11245) * t8805 + t9530) * t8808 + ((t7674 - t9252) * t11135 - t9252 + 0.2e1 * t7674) * t8737) * t8837 - t8791 * t9248 - t8805 * t9219 + (-t9973 * t11018 - (t11150 * t9401 + t10988) * t8726 * t10251 + t9751 * t7803 + t9570) * t8805 + t9248) * t10169 - (t8805 * t10120 + (t9566 * t10815 + (-t10048 * t11006 + t8617 * t9432) * t8837) * t8726) * t7806) * t8727) * t11356;
t11113 = qJ(3,1) * t7413;
t11112 = qJ(3,1) * t8727;
t11111 = qJ(3,1) * t8808;
t11110 = qJ(3,2) * t7397;
t10094 = t7924 * t11366;
t7923 = (-t10025 * t8767 + t8274 * t8773) * t8802 + (t10028 * t8773 - t8767 * t8982) * t8835 + t10689;
t10095 = t7923 * t11366;
t10992 = t7805 * t8805;
t7673 = t8594 * t9576;
t9003 = (0.2e1 * t9183 + t9549) * t10739 - t7802 * t8806 - t10336;
t10062 = t11355 * t10738;
t9220 = t7778 * t8203 * t10062;
t9254 = t8617 * t9548;
t9531 = t8230 * t10130;
t8003 = t11324 * t8830 - t11302;
t9537 = t8003 * t11358;
t9579 = t11232 * t10176;
t9752 = t11115 * t8829;
t7412 = -t8805 * t7867 * t9537 + t7829 * t10094 + t7866 * t10095 + (-((t7517 * t8665 + t8790 * t9698 + t8791 * t9003 - t9003) * t8835 - t7748 * t10722 + ((t8230 * t8790 + (t9407 + t10318) * t8808 + t8736 * t9653) * t10179 + (((t11150 * t9062 - t9579) * t8806 + t9255) * t8791 + (t8805 * t9388 + t9579) * t8806 - t8553 * t10128) * t8835 - (t9668 - t10992) * t10722) * t8723) * t10129 + (((t8736 * t9311 + t8805 * t9682) * t9577 + (-t8790 * t9531 + ((t9077 * t11259 + (-t7802 - 0.2e1 * t9273) * t8806 + t11246) * t8805 + t9531) * t8808 + ((t7673 - t9254) * t11135 - t9254 + 0.2e1 * t7673) * t8736) * t8835 - t8791 * t9220 - t8805 * t9221 + (-t9974 * t11019 - (t11150 * t9402 + t10991) * t8723 * t10251 + t9752 * t7802 + t9578) * t8805 + t9220) * t10175 - (t8805 * t10126 + (t9574 * t10815 + (-t10048 * t11007 + t8617 * t9435) * t8835) * t8723) * t7805) * t8724) * t11355;
t11109 = qJ(3,2) * t7412;
t11108 = qJ(3,2) * t8724;
t11107 = qJ(3,2) * t8808;
t11106 = qJ(3,3) * t7396;
t10096 = t7922 * t11368;
t7921 = (-t10026 * t8766 + t8273 * t8772) * t8801 + (t10029 * t8772 - t8766 * t8983) * t8833 + t10692;
t10097 = t7921 * t11368;
t10995 = t7804 * t8805;
t7672 = t8594 * t9584;
t9004 = (0.2e1 * t9184 + t9553) * t10743 - t7801 * t8806 - t10337;
t10064 = t11354 * t10742;
t9222 = t7777 * t8203 * t10064;
t9256 = t8617 * t9552;
t9532 = t8229 * t10136;
t8002 = t11325 * t8828 - t11301;
t9538 = t8002 * t11359;
t9587 = t11232 * t10182;
t9753 = t11115 * t8827;
t7411 = -t8805 * t7865 * t9538 + t7828 * t10096 + t7864 * t10097 + (-((t7516 * t8663 + t8790 * t9700 + t8791 * t9004 - t9004) * t8833 - t7747 * t10724 + ((t8229 * t8790 + (t9407 + t10319) * t8808 + t8735 * t9653) * t10185 + (((t11150 * t9063 - t9587) * t8806 + t9257) * t8791 + (t8805 * t9389 + t9587) * t8806 - t8553 * t10134) * t8833 - (t9669 - t10995) * t10724) * t8720) * t10135 + (((t8735 * t9311 + t8805 * t9683) * t9585 + (-t8790 * t9532 + ((t9078 * t11259 + (-t7801 - 0.2e1 * t9279) * t8806 + t11247) * t8805 + t9532) * t8808 + ((t7672 - t9256) * t11135 - t9256 + 0.2e1 * t7672) * t8735) * t8833 - t8791 * t9222 - t8805 * t9223 + (-t9975 * t11020 - (t11150 * t9403 + t10994) * t8720 * t10251 + t9753 * t7801 + t9586) * t8805 + t9222) * t10181 - (t8805 * t10132 + (t9582 * t10815 + (-t10048 * t11008 + t8617 * t9438) * t8833) * t8720) * t7804) * t8721) * t11354;
t11105 = qJ(3,3) * t7411;
t11104 = qJ(3,3) * t8721;
t11103 = qJ(3,3) * t8808;
t11102 = t8805 * qJ(3,1);
t11101 = t8805 * qJ(3,2);
t11100 = t8805 * qJ(3,3);
t11099 = qJ(3,4) * t7392;
t8269 = -qJ(3,4) + t8654 + t9326;
t10565 = t8805 * t8820;
t10030 = t8594 * t10565;
t8460 = t8771 * t10030;
t7914 = (t8269 * t8765 + t8460) * t8797 + t11344;
t10098 = t7914 * t11370;
t7913 = (-t10030 * t8765 + t8269 * t8771) * t8797 + (t10033 * t8771 - t8765 * t8984) * t8819 + t10695;
t10099 = t7913 * t11370;
t10998 = t7791 * t8805;
t7638 = t8594 * t9599;
t9005 = (0.2e1 * t9185 + t9557) * t10749 - t7787 * t8806 - t10344;
t10069 = t11353 * t10746;
t9249 = t8203 * t7773 * t10069;
t9258 = t8617 * t9556;
t9533 = t8222 * t10151;
t8001 = t11326 * t8814 - t11300;
t9539 = t8001 * t11360;
t9754 = t11115 * t8813;
t7407 = -t8805 * t7863 * t9539 + t7827 * t10098 + t7862 * t10099 + (-((t7512 * t8655 + t8790 * t9702 + t8791 * t9005 - t9005) * t8819 - t7725 * t10726 + ((t8222 * t8790 + (t9407 + t10320) * t8808 + t8731 * t9653) * t10197 + (((t11150 * t9058 - t9602) * t8806 + t9259) * t8791 + (t8805 * t9390 + t9602) * t8806 - t8553 * t10149) * t8819 - (t9670 - t10998) * t10726) * t8713) * t10150 + (((t8731 * t9311 + t8805 * t9684) * t9600 + (-t8790 * t9533 + ((t9079 * t11259 + (t11143 * t9599 - t7787) * t8806 + t11248) * t8805 + t9533) * t8808 + ((t7638 - t9258) * t11135 - t9258 + 0.2e1 * t7638) * t8731) * t8819 - t8791 * t9249 - t8805 * t9224 + (-t9976 * t11024 - (t11150 * t9404 + t10997) * t8713 * t10251 + t9754 * t7787 + t9601) * t8805 + t9249) * t10193 - (t8805 * t10147 + (t9597 * t10815 + (-t10048 * t11012 + t8617 * t9441) * t8819) * t8713) * t7791) * t8714) * t11353;
t11098 = qJ(3,4) * t7407;
t11097 = qJ(3,4) * t8714;
t11096 = qJ(3,4) * t8808;
t11095 = qJ(3,5) * t7391;
t8268 = -qJ(3,5) + t8652 + t9326;
t10567 = t8805 * t8818;
t10031 = t8594 * t10567;
t8459 = t8770 * t10031;
t7912 = (t8268 * t8764 + t8459) * t8796 + t11343;
t10100 = t7912 * t11372;
t7911 = (-t10031 * t8764 + t8268 * t8770) * t8796 + (t10034 * t8770 - t8764 * t8985) * t8817 + t10698;
t10101 = t7911 * t11372;
t11001 = t7790 * t8805;
t7637 = t8594 * t9609;
t9006 = (0.2e1 * t9186 + t9561) * t10755 - t7786 * t8806 - t10345;
t10071 = t11352 * t10752;
t9250 = t8203 * t7772 * t10071;
t9260 = t8617 * t9560;
t9534 = t8221 * t10157;
t8000 = t11327 * t8812 - t11299;
t9540 = t8000 * t11361;
t9755 = t11115 * t8811;
t7406 = -t8805 * t7861 * t9540 + t7826 * t10100 + t7860 * t10101 + (-((t7511 * t8653 + t8790 * t9704 + t8791 * t9006 - t9006) * t8817 - t7724 * t10728 + ((t8221 * t8790 + (t9407 + t10321) * t8808 + t8730 * t9653) * t10203 + (((t11150 * t9059 - t9611) * t8806 + t9261) * t8791 + (t8805 * t9391 + t9611) * t8806 - t8553 * t10155) * t8817 - (t9671 - t11001) * t10728) * t8710) * t10156 + (((t8730 * t9311 + t8805 * t9685) * t9610 + (-t8790 * t9534 + ((t9080 * t11259 + (t11143 * t9609 - t7786) * t8806 + t11249) * t8805 + t9534) * t8808 + ((t7637 - t9260) * t11135 - t9260 + 0.2e1 * t7637) * t8730) * t8817 - t8791 * t9250 - t8805 * t9225 + (-t9292 - (t11150 * t9405 + t11000) * t8710 * t10251 + t9755 * t7786 + t9605) * t8805 + t9250) * t10199 - (t8805 * t10153 + (t9607 * t10815 + (-t10048 * t11013 + t8617 * t9444) * t8817) * t8710) * t7790) * t8711) * t11352;
t11094 = qJ(3,5) * t7406;
t11093 = qJ(3,5) * t8808;
t11092 = qJ(3,6) * t7390;
t8267 = -qJ(3,6) + t8650 + t9326;
t10569 = t8805 * t8816;
t10032 = t8594 * t10569;
t8458 = t8769 * t10032;
t7910 = (t8267 * t8763 + t8458) * t8795 + t11342;
t10102 = t7910 * t11374;
t7909 = (-t10032 * t8763 + t8267 * t8769) * t8795 + (t10035 * t8769 - t8763 * t8986) * t8815 + t10701;
t10103 = t7909 * t11374;
t11004 = t7789 * t8805;
t7636 = t8594 * t9618;
t9007 = (0.2e1 * t9187 + t9565) * t10761 - t7788 * t8806 - t10346;
t10073 = t11351 * t10758;
t9251 = t8203 * t7771 * t10073;
t9262 = t8617 * t9564;
t9535 = t8220 * t10163;
t7999 = t11328 * t8810 - t11298;
t9541 = t7999 * t11362;
t9756 = t11115 * t8809;
t7405 = -t8805 * t7859 * t9541 + t7825 * t10102 + t7858 * t10103 + (-((t7510 * t8651 + t8790 * t9706 + t8791 * t9007 - t9007) * t8815 - t7723 * t10730 + ((t8220 * t8790 + (t9407 + t10322) * t8808 + t8729 * t9653) * t10209 + (((t11150 * t9060 - t9620) * t8806 + t9263) * t8791 + (t8805 * t9392 + t9620) * t8806 - t8553 * t10161) * t8815 - (t9672 - t11004) * t10730) * t8707) * t10162 + (((t8729 * t9311 + t8805 * t9686) * t9619 + (-t8790 * t9535 + ((t9081 * t11259 + (t11143 * t9618 - t7788) * t8806 + t11250) * t8805 + t9535) * t8808 + ((t7636 - t9262) * t11135 - t9262 + 0.2e1 * t7636) * t8729) * t8815 - t8791 * t9251 - t8805 * t9226 + (-t9296 - (t11150 * t9406 + t11003) * t8707 * t10251 + t9756 * t7788 + t9614) * t8805 + t9251) * t10205 - (t8805 * t10159 + (t9616 * t10815 + (-t10048 * t11014 + t8617 * t9447) * t8815) * t8707) * t7789) * t8708) * t11351;
t11091 = qJ(3,6) * t7405;
t11090 = qJ(3,6) * t8808;
t10235 = qJ(3,6) * t10570;
t10283 = qJ(3,6) * t11135;
t7402 = t7405 * t10283;
t8760 = pkin(1) * t8809;
t7366 = t7402 - t7390 * (t8760 - 0.2e1 * t10235) * t8808 + 0.2e1 * t11091;
t11089 = t7366 * t11351;
t10237 = qJ(3,5) * t10568;
t10284 = qJ(3,5) * t11135;
t7403 = t7406 * t10284;
t8761 = pkin(1) * t8811;
t7367 = t7403 - t7391 * (t8761 - 0.2e1 * t10237) * t8808 + 0.2e1 * t11094;
t11088 = t7367 * t11352;
t10239 = qJ(3,4) * t10566;
t10285 = qJ(3,4) * t11135;
t7404 = t7407 * t10285;
t8762 = pkin(1) * t8813;
t7368 = t7404 - t7392 * (t8762 - 0.2e1 * t10239) * t8808 + 0.2e1 * t11098;
t11087 = t7368 * t11353;
t10241 = qJ(3,3) * t10558;
t10289 = qJ(3,3) * t11135;
t7408 = t7411 * t10289;
t8778 = pkin(1) * t8827;
t7372 = t7408 - t7396 * (t8778 - 0.2e1 * t10241) * t8808 + 0.2e1 * t11105;
t11086 = t7372 * t11354;
t10243 = qJ(3,2) * t10556;
t10290 = qJ(3,2) * t11135;
t7409 = t7412 * t10290;
t8779 = pkin(1) * t8829;
t7373 = t7409 - t7397 * (t8779 - 0.2e1 * t10243) * t8808 + 0.2e1 * t11109;
t11085 = t7373 * t11355;
t10245 = qJ(3,1) * t10554;
t10291 = qJ(3,1) * t11135;
t7410 = t7413 * t10291;
t8780 = pkin(1) * t8831;
t7374 = t7410 - t7398 * (t8780 - 0.2e1 * t10245) * t8808 + 0.2e1 * t11113;
t11084 = t7374 * t11356;
t11083 = t7390 * t8809 ^ 2;
t11082 = t7390 * t8795;
t11081 = t7390 * t8809;
t11080 = t7390 * t8815;
t11079 = t7391 * t8811 ^ 2;
t11078 = t7391 * t8796;
t11077 = t7391 * t8811;
t11076 = t7391 * t8817;
t11075 = t7392 * t8813 ^ 2;
t11074 = t7392 * t8797;
t11073 = t7392 * t8813;
t11072 = t7392 * t8819;
t11071 = t7393 * t8805;
t11070 = t7394 * t8805;
t11069 = t7395 * t8805;
t11068 = t7396 * t8827 ^ 2;
t11067 = t7396 * t8801;
t11066 = t7396 * t8827;
t11065 = t7396 * t8833;
t11064 = t7397 * t8829 ^ 2;
t11063 = t7397 * t8802;
t11062 = t7397 * t8829;
t11061 = t7397 * t8835;
t11060 = t7398 * t8831 ^ 2;
t11059 = t7398 * t8803;
t11058 = t7398 * t8831;
t11057 = t7398 * t8837;
t11056 = t7399 * t8805;
t11055 = t7400 * t8805;
t11054 = t7401 * t8805;
t11053 = t7405 * t8805;
t11052 = t7405 * t8809;
t11051 = t7406 * t8805;
t11050 = t7406 * t8811;
t11049 = t7407 * t8805;
t11048 = t7407 * t8813;
t11047 = t7411 * t8805;
t11046 = t7411 * t8827;
t11045 = t7412 * t8805;
t11044 = t7412 * t8829;
t11043 = t7413 * t8805;
t11042 = t7413 * t8831;
t10118 = t8707 * t11004;
t11038 = (t7738 - 0.2e1 * t10118) * t8808;
t10117 = t8710 * t11001;
t11037 = (t7739 - 0.2e1 * t10117) * t8808;
t10116 = t8713 * t10998;
t11036 = (t7740 - 0.2e1 * t10116) * t8808;
t11032 = (-0.2e1 * t10995 * t8720 + t7762) * t8808;
t11031 = (-0.2e1 * t10992 * t8723 + t7763) * t8808;
t11030 = (-0.2e1 * t10989 * t8726 + t7764) * t8808;
t11017 = t7771 ^ 2 / t11328 ^ 2;
t11016 = t7772 ^ 2 / t11327 ^ 2;
t11015 = t7773 ^ 2 / t11326 ^ 2;
t11011 = t7777 ^ 2 / t11325 ^ 2;
t11010 = t7778 ^ 2 / t11324 ^ 2;
t11009 = t7779 ^ 2 / t11323 ^ 2;
t10579 = t8805 * qJ(3,6);
t10552 = t8806 * t8808;
t9763 = t8808 * t11115;
t8920 = (t10552 * t8804 + t8805 * t8807) * pkin(6) - pkin(2) * t9763;
t10981 = 0.1e1 / ((t8920 + t10579) * t8809 + t11220) * t8365;
t10580 = t8805 * qJ(3,5);
t10980 = 0.1e1 / ((t8920 + t10580) * t8811 + t11221) * t8366;
t10581 = t8805 * qJ(3,4);
t10979 = 0.1e1 / ((t8920 + t10581) * t8813 + t11222) * t8367;
t10978 = 0.1e1 / ((t8920 + t11101) * t8829 + t11224) * t8369;
t10977 = 0.1e1 / ((t8920 + t11102) * t8831 + t11225) * t8370;
t10976 = 0.1e1 / ((t8920 + t11100) * t8827 + t11223) * t8368;
t10975 = t11341 * t11351;
t10974 = t11289 * t11352;
t10973 = t11291 * t11353;
t10972 = t11293 * t11354;
t10971 = t11295 * t11355;
t10970 = t11297 * t11356;
t10484 = t8839 * t8840;
t8265 = (-t10628 * t8784 + t10682 * t8782) * t8841 - t8781 * t10484;
t10921 = t8265 * t8782;
t8266 = (-t10628 * t8781 - t10636 * t8782) * t8841 + t8784 * t10484;
t10920 = t8266 * t8781;
t10900 = t8325 * t8365;
t10892 = t8350 * t8369;
t10890 = t8352 * t8370;
t10886 = t8366 * t8327;
t10885 = t8367 * t8329;
t10884 = t8368 * t8348;
t8491 = -t10675 * t8781 + t10637;
t10864 = t8491 * t8504;
t10863 = t8504 * t8506;
t10861 = t8504 * t8781;
t10860 = t8506 * t8643;
t10859 = t8506 * t8784;
t10796 = (t8760 - t10235) * t8808;
t10795 = (t8761 - t10237) * t8808;
t10794 = (t8762 - t10239) * t8808;
t10778 = (t8778 - t10241) * t8808;
t10777 = (t8779 - t10243) * t8808;
t10776 = (t8780 - t10245) * t8808;
t10775 = t8643 * t8782;
t10756 = t8708 * t8809;
t10750 = t8711 * t8811;
t10744 = t8714 * t8813;
t10740 = t8721 * t8827;
t10736 = t8724 * t8829;
t10732 = t8727 * t8831;
t10718 = t8763 * t8862;
t10717 = t8763 * t8868;
t10715 = t8764 * t8863;
t10714 = t8764 * t8869;
t10712 = t8765 * t8864;
t10711 = t8765 * t8870;
t10709 = t8766 * t8865;
t10708 = t8766 * t8871;
t10706 = t8767 * t8866;
t10705 = t8767 * t8872;
t10703 = t8768 * t8867;
t10702 = t8768 * t8873;
t10654 = t8783 * t8784;
t10653 = t8783 * t8785;
t10650 = t8783 * t8862;
t10649 = t8783 * t8863;
t10648 = t8783 * t8864;
t10647 = t8783 * t8865;
t10646 = t8783 * t8866;
t10645 = t8783 * t8867;
t10638 = t8784 * t8785;
t10629 = t8785 * t8786;
t10588 = t8786 * t8868;
t10587 = t8786 * t8869;
t10586 = t8786 * t8870;
t10585 = t8786 * t8871;
t10584 = t8786 * t8872;
t10583 = t8786 * t8873;
t10578 = t8805 * t8806;
t10575 = t8805 * t8810;
t10573 = t8805 * t8812;
t10571 = t8805 * t8814;
t10563 = t8805 * t8828;
t10561 = t8805 * t8830;
t10559 = t8805 * t8832;
t10543 = t8808 * t8810;
t10541 = t8808 * t8812;
t10539 = t8808 * t8814;
t10538 = t8808 * t8815;
t10537 = t8808 * t8817;
t10536 = t8808 * t8819;
t10534 = t8808 * t8828;
t10532 = t8808 * t8830;
t10530 = t8808 * t8832;
t10529 = t8808 * t8833;
t10528 = t8808 * t8835;
t10527 = t8808 * t8837;
t10522 = t8810 * t8868;
t10517 = t8812 * t8869;
t10512 = t8814 * t8870;
t10501 = t8828 * t8871;
t10496 = t8830 * t8872;
t10491 = t8832 * t8873;
t10428 = t8850 * t8791;
t10427 = t8851 * t8791;
t10426 = t8852 * t8791;
t10425 = t8853 * t8791;
t10424 = t8854 * t8791;
t10423 = t8855 * t8791;
t10422 = t8868 * t8325;
t10421 = t8869 * t8327;
t10420 = t8870 * t8329;
t10419 = t8871 * t8348;
t10236 = t7405 * t11090;
t10233 = t7390 * t10544;
t7369 = t10233 * t11152 + t11091 + t7402;
t9835 = qJ(3,6) * t10576;
t7378 = t11121 * t7393 + t7390 * t9835;
t7384 = pkin(1) * t11053 - t7393;
t7615 = t7738 - t10118 / 0.2e1;
t7741 = t8708 * t11017;
t9227 = t7741 * t11090;
t7522 = t9227 / 0.4e1 + t7615 * t9618;
t7528 = t7732 + (0.4e1 * t11090 * t9447 + t11119 * t7789) * t8707;
t10207 = t8808 * t11026;
t10315 = t8791 - 0.1e1 / 0.2e1;
t7540 = (qJ(3,6) * t10159 * t10315 + pkin(1) * t10207) * t8707;
t8753 = pkin(1) * t8806;
t9347 = -0.4e1 * t9619;
t9394 = t8805 * t9763;
t9563 = t8707 * t10160;
t9705 = 0.2e1 * t10163;
t10418 = 0.2e1 * (qJ(3,6) * t9394 + t8753) * t11082 - (t10236 * t8806 + t11115 * t7384) * t8809 + (-t10579 * t9563 + t7615 * t9763) * t9347 + (-qJ(3,6) * t10208 * t10759 + t11115 * t7540) * t9705 + (t11115 * t7369 + t11127 * t7522 + t11258 * t7378 - t7528 * t9193) * t8815;
t10295 = 0.4e1 * t11115;
t10296 = -0.2e1 * t11115;
t10223 = t7396 * t10535;
t7375 = t10223 * t11152 + t11105 + t7408;
t10224 = t7396 * t10564;
t7381 = qJ(3,3) * t10224 + t11121 * t7399;
t7387 = pkin(1) * t11047 - t7399;
t7627 = t7798 * t8805 + t7762;
t10145 = t8808 * t11011;
t9308 = t10145 * t11104;
t7525 = t9308 / 0.4e1 + t7627 * t9584;
t7531 = t7756 + (0.4e1 * t11103 * t9438 + t11119 * t7804) * t8720;
t10183 = t8808 * t11020;
t7543 = (qJ(3,3) * t10132 * t10315 + pkin(1) * t10183) * t8720;
t9341 = -0.4e1 * t9585;
t9551 = t8720 * t10133;
t9699 = 0.2e1 * t10136;
t9839 = t8805 * t10552;
t10417 = -0.2e1 * (-qJ(3,3) * t9839 + t8752) * t11067 - t8827 * (-t11105 * t9763 + t7387 * t8806) + (t10552 * t7627 + t8805 * t9136) * t9341 + (t11100 * t9196 + t7543 * t8806) * t9699 + (t10295 * t7525 + t10296 * t7381 + t7375 * t8806 - t7531 * t9551) * t8833;
t10219 = t7397 * t10533;
t7376 = t10219 * t11152 + t11109 + t7409;
t10220 = t7397 * t10562;
t7382 = qJ(3,2) * t10220 + t11121 * t7400;
t7388 = pkin(1) * t11045 - t7400;
t7628 = t7799 * t8805 + t7763;
t10142 = t8808 * t11010;
t9309 = t10142 * t11108;
t7526 = t9309 / 0.4e1 + t7628 * t9576;
t7532 = t7757 + (0.4e1 * t11107 * t9435 + t11119 * t7805) * t8723;
t10177 = t8808 * t11019;
t7544 = (qJ(3,2) * t10126 * t10315 + pkin(1) * t10177) * t8723;
t9340 = -0.4e1 * t9577;
t9547 = t8723 * t10127;
t9697 = 0.2e1 * t10130;
t10416 = -0.2e1 * (-qJ(3,2) * t9839 + t8752) * t11063 - (-t11109 * t9763 + t7388 * t8806) * t8829 + (t10552 * t7628 + t8805 * t9137) * t9340 + (t11101 * t9195 + t7544 * t8806) * t9697 + (t10295 * t7526 + t10296 * t7382 + t7376 * t8806 - t7532 * t9547) * t8835;
t10215 = t7398 * t10531;
t7377 = t10215 * t11152 + t11113 + t7410;
t10216 = t7398 * t10560;
t7383 = qJ(3,1) * t10216 + t11121 * t7401;
t7389 = pkin(1) * t11043 - t7401;
t7629 = t7800 * t8805 + t7764;
t10139 = t8808 * t11009;
t9310 = t10139 * t11112;
t7527 = t9310 / 0.4e1 + t7629 * t9568;
t7533 = t7758 + (0.4e1 * t11111 * t9432 + t11119 * t7806) * t8726;
t10171 = t8808 * t11018;
t7545 = (qJ(3,1) * t10120 * t10315 + pkin(1) * t10171) * t8726;
t9339 = -0.4e1 * t9569;
t9543 = t8726 * t10121;
t9695 = 0.2e1 * t10124;
t10415 = -0.2e1 * (-qJ(3,1) * t9839 + t8752) * t11059 - t8831 * (-t11113 * t9763 + t7389 * t8806) + (t10552 * t7629 + t8805 * t9138) * t9339 + (t11102 * t9194 + t7545 * t8806) * t9695 + (t10295 * t7527 + t10296 * t7383 + t7377 * t8806 - t7533 * t9543) * t8837;
t10269 = pkin(1) * t11052;
t10272 = pkin(1) * t11081;
t10414 = t11119 * qJ(3,6) * t11082 + 0.2e1 * (t10236 + t10272) * t10570 - t8808 * t10269 + 0.2e1 * t11092 + t9619 * t11265 - t7771 * (qJ(3,6) * t11118 * t9618 + t11038) * t11362 - 0.2e1 * t9227 * t10576 + t10210 * t11149;
t10314 = t8795 - 0.1e1 / 0.2e1;
t10213 = (pkin(1) * t10526 - t10314 * t10579) * t11029;
t7336 = -t8805 * t10272 + (t10275 * t7405 + t11080 * t11120) * qJ(3,6);
t7345 = -qJ(3,6) * t10233 / 0.2e1 + t7405 * pkin(1) - t11071 / 0.2e1;
t9351 = 0.2e1 * t8815 * t9835;
t9562 = t7789 * t10161;
t7504 = (-0.2e1 * t9562 + (pkin(1) * t11134 - pkin(1) + t9351) * t11029) * t8708;
t9762 = t8815 * t11115;
t8980 = t10544 * t8806 + t8791 * t9762;
t9380 = 0.2e1 * t7789 * t11026;
t10413 = t11115 * t7336 + t11258 * t7345 + t7504 * t9763 + (t10213 * t11258 - t8980 * t9380) * t8708;
t10313 = t8796 - 0.1e1 / 0.2e1;
t10212 = (pkin(1) * t10521 - t10313 * t10580) * t11028;
t10271 = pkin(1) * t11077;
t7337 = -t8805 * t10271 + (t10275 * t7406 + t11076 * t11120) * qJ(3,5);
t10230 = t7391 * t10542;
t7346 = -qJ(3,5) * t10230 / 0.2e1 + t7406 * pkin(1) - t11070 / 0.2e1;
t9827 = qJ(3,5) * t10574;
t9352 = 0.2e1 * t8817 * t9827;
t9558 = t7790 * t10155;
t7505 = (-0.2e1 * t9558 + (pkin(1) * t11133 - pkin(1) + t9352) * t11028) * t8711;
t9761 = t8817 * t11115;
t8979 = t10542 * t8806 + t8791 * t9761;
t9379 = 0.2e1 * t7790 * t11025;
t10412 = t11115 * t7337 + t11258 * t7346 + t7505 * t9763 + (t10212 * t11258 - t8979 * t9379) * t8711;
t8973 = -t10550 * t8791 + t8808 * t9755;
t10411 = t10296 * t7346 + t7337 * t8806 + t7505 * t10552 + (t10212 * t10296 + t8973 * t9379) * t8711;
t10312 = t8797 - 0.1e1 / 0.2e1;
t10211 = (pkin(1) * t10516 - t10312 * t10581) * t11027;
t10270 = pkin(1) * t11073;
t7338 = -t8805 * t10270 + (t10275 * t7407 + t11072 * t11120) * qJ(3,4);
t10227 = t7392 * t10540;
t7347 = -qJ(3,4) * t10227 / 0.2e1 + t7407 * pkin(1) - t11069 / 0.2e1;
t9819 = qJ(3,4) * t10572;
t9353 = 0.2e1 * t8819 * t9819;
t9554 = t7791 * t10149;
t7506 = (-0.2e1 * t9554 + (pkin(1) * t11132 - pkin(1) + t9353) * t11027) * t8714;
t8972 = -t10549 * t8791 + t8808 * t9754;
t9378 = 0.2e1 * t7791 * t11024;
t10410 = t10296 * t7347 + t7338 * t8806 + t7506 * t10552 + (t10211 * t10296 + t8972 * t9378) * t8714;
t9298 = t8815 * t9622;
t9174 = -0.2e1 * t9298;
t9692 = t8850 - t10428;
t10409 = ((-pkin(1) * t7393 + t11053 * t8850) * t8815 - qJ(3,6) * t10269) * t8808 + ((t8876 - t9692) * t8795 + pkin(1) * t9351 + t8850) * t7390 + (-t10577 * t11017 * t8850 + t10428 * t9174) * t10756 + (-0.2e1 * t8809 * (-pkin(1) * t11004 + (-t8850 + t8876) * t11014) * t9617 + (-t10158 * t11038 + (t11265 * t8795 + t11149) * t11026) * qJ(3,6)) * t8707;
t10268 = pkin(1) * t11050;
t9294 = t8817 * t9613;
t9173 = -0.2e1 * t9294;
t9691 = t8851 - t10427;
t10408 = ((-pkin(1) * t7394 + t11051 * t8851) * t8817 - qJ(3,5) * t10268) * t8808 + ((t8876 - t9691) * t8796 + pkin(1) * t9352 + t8851) * t7391 + (-t10577 * t11016 * t8851 + t10427 * t9173) * t10750 + (-0.2e1 * t8811 * (-pkin(1) * t11001 + (-t8851 + t8876) * t11013) * t9608 + (-t10152 * t11037 + (t11264 * t8796 + t11148) * t11025) * qJ(3,5)) * t8710;
t10166 = t8808 * t11015;
t10267 = pkin(1) * t11048;
t9290 = t8819 * t9604;
t9172 = -0.2e1 * t9290;
t9690 = t8852 - t10426;
t10407 = ((-pkin(1) * t7395 + t11049 * t8852) * t8819 - qJ(3,4) * t10267) * t8808 + ((t8876 - t9690) * t8797 + pkin(1) * t9353 + t8852) * t7392 + (-t10166 * t8805 * t8852 + t10426 * t9172) * t10744 + (-0.2e1 * t8813 * (-pkin(1) * t10998 + (-t8852 + t8876) * t11012) * t9598 + (-t10146 * t11036 + (t11263 * t8797 + t11147) * t11024) * qJ(3,4)) * t8713;
t10242 = t7411 * t11103;
t10266 = pkin(1) * t11046;
t10406 = t11119 * qJ(3,3) * t11067 + 0.2e1 * (pkin(1) * t11066 + t10242) * t10558 - t8808 * t10266 + 0.2e1 * t11106 + t9585 * t11262 - (qJ(3,3) * t11118 * t9584 + t11032) * t7777 * t11359 - 0.2e1 * t9308 * t10564 + t10186 * t11146;
t10246 = t7413 * t11111;
t10264 = pkin(1) * t11042;
t10405 = t11119 * qJ(3,1) * t11059 + 0.2e1 * (pkin(1) * t11058 + t10246) * t10554 - t8808 * t10264 + 0.2e1 * t11114 + t9569 * t11260 - (qJ(3,1) * t11118 * t9568 + t11030) * t7779 * t11357 - 0.2e1 * t9310 * t10560 + t10174 * t11144;
t10311 = t8801 - 0.1e1 / 0.2e1;
t10192 = (pkin(1) * t10505 - t10311 * t11100) * t11023;
t7351 = -pkin(1) * t10224 + (t10275 * t7411 + t11065 * t11120) * qJ(3,3);
t7360 = -qJ(3,3) * t10223 / 0.2e1 + t7411 * pkin(1) - t11056 / 0.2e1;
t9372 = 0.2e1 * qJ(3,3) * t9838;
t9550 = t7804 * t10134;
t7507 = (-0.2e1 * t9550 + (pkin(1) * t11131 - pkin(1) + t9372) * t11023) * t8721;
t9759 = t8833 * t11115;
t8977 = t10535 * t8806 + t8791 * t9759;
t9377 = 0.2e1 * t7804 * t11020;
t10404 = t11115 * t7351 + t11258 * t7360 + t7507 * t9763 + (t10192 * t11258 - t8977 * t9377) * t8721;
t10310 = t8802 - 0.1e1 / 0.2e1;
t10190 = (pkin(1) * t10500 - t10310 * t11101) * t11022;
t7352 = -pkin(1) * t10220 + (t10275 * t7412 + t11061 * t11120) * qJ(3,2);
t7361 = -qJ(3,2) * t10219 / 0.2e1 + t7412 * pkin(1) - t11055 / 0.2e1;
t9373 = 0.2e1 * qJ(3,2) * t9837;
t9546 = t7805 * t10128;
t7509 = (-0.2e1 * t9546 + (pkin(1) * t11130 - pkin(1) + t9373) * t11022) * t8724;
t9758 = t8835 * t11115;
t8976 = t10533 * t8806 + t8791 * t9758;
t9376 = 0.2e1 * t7805 * t11019;
t10403 = t11115 * t7352 + t11258 * t7361 + t7509 * t9763 + (t10190 * t11258 - t8976 * t9376) * t8724;
t8970 = -t10547 * t8791 + t8808 * t9752;
t10402 = t10296 * t7361 + t7352 * t8806 + t7509 * t10552 + (t10190 * t10296 + t8970 * t9376) * t8724;
t10309 = t8803 - 0.1e1 / 0.2e1;
t10188 = (pkin(1) * t10495 - t10309 * t11102) * t11021;
t7353 = -pkin(1) * t10216 + (t10275 * t7413 + t11057 * t11120) * qJ(3,1);
t7362 = -qJ(3,1) * t10215 / 0.2e1 + t7413 * pkin(1) - t11054 / 0.2e1;
t9374 = 0.2e1 * qJ(3,1) * t9836;
t9542 = t7806 * t10122;
t7508 = (-0.2e1 * t9542 + (pkin(1) * t11129 - pkin(1) + t9374) * t11021) * t8727;
t8969 = -t10546 * t8791 + t8808 * t9751;
t9375 = 0.2e1 * t7806 * t11018;
t10401 = t10296 * t7362 + t7353 * t8806 + t7508 * t10552 + (t10188 * t10296 + t8969 * t9375) * t8727;
t9280 = t8833 * t9589;
t9171 = -0.2e1 * t9280;
t9689 = t8853 - t10425;
t10400 = ((-pkin(1) * t7399 + t11047 * t8853) * t8833 - qJ(3,3) * t10266) * t8808 + ((t8876 - t9689) * t8801 + pkin(1) * t9372 + t8853) * t7396 + (-t10145 * t8805 * t8853 + t10425 * t9171) * t10740 + (-0.2e1 * t8827 * (-pkin(1) * t10995 + (-t8853 + t8876) * t11008) * t9583 + (-t10131 * t11032 + (t11262 * t8801 + t11146) * t11020) * qJ(3,3)) * t8720;
t10265 = pkin(1) * t11044;
t9274 = t8835 * t9581;
t9170 = -0.2e1 * t9274;
t9688 = t8854 - t10424;
t10399 = ((-pkin(1) * t7400 + t11045 * t8854) * t8835 - qJ(3,2) * t10265) * t8808 + ((t8876 - t9688) * t8802 + pkin(1) * t9373 + t8854) * t7397 + (-t10142 * t8805 * t8854 + t10424 * t9170) * t10736 + (-0.2e1 * t8829 * (-pkin(1) * t10992 + (-t8854 + t8876) * t11007) * t9575 + (-t10125 * t11031 + (t11261 * t8802 + t11145) * t11019) * qJ(3,2)) * t8723;
t9268 = t8837 * t9573;
t9169 = -0.2e1 * t9268;
t9687 = t8855 - t10423;
t10398 = ((-pkin(1) * t7401 + t11043 * t8855) * t8837 - qJ(3,1) * t10264) * t8808 + ((t8876 - t9687) * t8803 + pkin(1) * t9374 + t8855) * t7398 + (-t10139 * t8805 * t8855 + t10423 * t9169) * t10732 + (-0.2e1 * t8831 * (-pkin(1) * t10989 + (-t8855 + t8876) * t11006) * t9567 + (-t10119 * t11030 + (t11260 * t8803 + t11144) * t11018) * qJ(3,1)) * t8726;
t10263 = pkin(1) * t11029;
t10274 = 0.2e1 * t10577;
t9845 = t8795 * t11029;
t9628 = t8708 * t9845;
t9350 = -0.2e1 * t9628;
t9621 = t7789 * t10207;
t10397 = -t10796 * t11092 - pkin(1) * t11071 + (t8876 + t9692) * t7405 + pkin(1) * t9350 * t10579 + (qJ(3,6) * t7789 * t10274 + (t10428 + (pkin(1) - qJ(3,6)) * (pkin(1) + qJ(3,6))) * t10206) * t8707 ^ 2 * t10205 + t7789 * t10162 * t10283 + t9621 * t10756 * t11152 + qJ(3,6) * (t10263 * t8805 + t10282 * t7789) * t8708;
t10262 = pkin(1) * t11028;
t9844 = t8796 * t11028;
t9626 = t8711 * t9844;
t9349 = -0.2e1 * t9626;
t10201 = t8808 * t11025;
t9612 = t7790 * t10201;
t10396 = -t10795 * t11095 - pkin(1) * t11070 + (t8876 + t9691) * t7406 + pkin(1) * t9349 * t10580 + (qJ(3,5) * t7790 * t10274 + (t10427 + (pkin(1) - qJ(3,5)) * (pkin(1) + qJ(3,5))) * t10200) * t8710 ^ 2 * t10199 + t7790 * t10156 * t10284 + t9612 * t10750 * t11152 + qJ(3,5) * (t10262 * t8805 + t10281 * t7790) * t8711;
t10261 = pkin(1) * t11027;
t9843 = t8797 * t11027;
t9624 = t8714 * t9843;
t9348 = -0.2e1 * t9624;
t10195 = t8808 * t11024;
t9603 = t7791 * t10195;
t10395 = -t10794 * t11099 - pkin(1) * t11069 + (t8876 + t9690) * t7407 + pkin(1) * t9348 * t10581 + (qJ(3,4) * t7791 * t10274 + (t10426 + (pkin(1) - qJ(3,4)) * (pkin(1) + qJ(3,4))) * t10194) * t8713 ^ 2 * t10193 + t7791 * t10150 * t10285 + t9603 * t10744 * t11152 + (t10261 * t8805 + t10280 * t7791) * t11097;
t10260 = pkin(1) * t11023;
t9842 = t8801 * t11023;
t9595 = t8721 * t9842;
t9344 = -0.2e1 * t9595;
t9588 = t7804 * t10183;
t10394 = -t10778 * t11106 - pkin(1) * t11056 + (t8876 + t9689) * t7411 + pkin(1) * t9344 * t11100 + t8720 ^ 2 * (qJ(3,3) * t7804 * t10274 + (t10425 + (pkin(1) - qJ(3,3)) * (pkin(1) + qJ(3,3))) * t10182) * t10181 + t7804 * t10135 * t10289 + t9588 * t10740 * t11152 + (t10260 * t8805 + t10279 * t7804) * t11104;
t10259 = pkin(1) * t11022;
t9841 = t8802 * t11022;
t9593 = t8724 * t9841;
t9343 = -0.2e1 * t9593;
t9580 = t7805 * t10177;
t10393 = -t10777 * t11110 - pkin(1) * t11055 + (t8876 + t9688) * t7412 + pkin(1) * t9343 * t11101 + (qJ(3,2) * t7805 * t10274 + (t10424 + (pkin(1) - qJ(3,2)) * (pkin(1) + qJ(3,2))) * t10176) * t8723 ^ 2 * t10175 + t7805 * t10129 * t10290 + t9580 * t10736 * t11152 + (t10259 * t8805 + t10278 * t7805) * t11108;
t10258 = pkin(1) * t11021;
t9840 = t8803 * t11021;
t9591 = t8727 * t9840;
t9342 = -0.2e1 * t9591;
t9572 = t7806 * t10171;
t10392 = -t10776 * t11114 - pkin(1) * t11054 + (t8876 + t9687) * t7413 + pkin(1) * t9342 * t11102 + t8726 ^ 2 * (qJ(3,1) * t7806 * t10274 + (t10423 + (pkin(1) - qJ(3,1)) * (pkin(1) + qJ(3,1))) * t10170) * t10169 + t7806 * t10123 * t10291 + t9572 * t10732 * t11152 + (t10258 * t8805 + t10277 * t7806) * t11112;
t7585 = t7741 - t9628;
t9304 = t8805 * t9627;
t10391 = -t7405 * t10578 + (-t10538 * t8806 + t9756) * t7390 + t7585 * t9394 + (-t8806 * t9304 + t8980 * t9181) * t8708;
t7742 = t8711 * t11016;
t7586 = t7742 - t9626;
t9302 = t8805 * t9625;
t10390 = -t7406 * t10578 + (-t10537 * t8806 + t9755) * t7391 + t7586 * t9394 + (-t8806 * t9302 + t8979 * t9180) * t8711;
t7743 = t8714 * t11015;
t7587 = t7743 - t9624;
t9760 = t8819 * t11115;
t8978 = t10540 * t8806 + t8791 * t9760;
t9300 = t8805 * t9623;
t10389 = -t7407 * t10578 + (-t10536 * t8806 + t9754) * t7392 + t7587 * t9394 + (-t8806 * t9300 + t8978 * t9179) * t8714;
t8974 = -t10551 * t8791 + t8808 * t9756;
t9764 = t8805 * t11115;
t10388 = t7405 * t9764 + (t8806 * t8809 + t8808 * t9762) * t7390 + t7585 * t9839 + (t11115 * t9304 - t8974 * t9181) * t8708;
t7671 = t8714 * t11027;
t10338 = t7671 + t7743;
t10387 = (-t10536 * t7392 - t11049) * pkin(1) + t7395 - qJ(3,4) * t10338 + (-pkin(1) * t9300 + t10794 * t9179 + ((-t9843 + t11015) * t8791 + t9843) * qJ(3,4)) * t8714;
t7767 = t8727 * t11009;
t7611 = t7767 - t9591;
t9757 = t8837 * t11115;
t8975 = t10531 * t8806 + t8791 * t9757;
t9282 = t8805 * t9590;
t10386 = -t7413 * t10578 + (-t10527 * t8806 + t9751) * t7398 + t7611 * t9394 + (-t8806 * t9282 + t8975 * t9176) * t8727;
t7765 = t8721 * t11011;
t7609 = t7765 - t9595;
t8971 = -t10548 * t8791 + t8808 * t9753;
t9286 = t8805 * t9594;
t10385 = t7411 * t9764 + (t8806 * t8827 + t8808 * t9759) * t7396 + t7609 * t9839 + (t11115 * t9286 - t8971 * t9178) * t8721;
t7705 = t8721 * t11023;
t10331 = t7705 + t7765;
t10384 = (-t10529 * t7396 - t11047) * pkin(1) + t7399 - qJ(3,3) * t10331 + (-pkin(1) * t9286 + t10778 * t9178 + ((-t9842 + t11011) * t8791 + t9842) * qJ(3,3)) * t8721;
t7706 = t8724 * t11022;
t7766 = t8724 * t11010;
t10330 = t7706 + t7766;
t9284 = t8805 * t9592;
t10383 = (-t10528 * t7397 - t11045) * pkin(1) + t7400 - qJ(3,2) * t10330 + (-pkin(1) * t9284 + t10777 * t9177 + ((-t9841 + t11010) * t8791 + t9841) * qJ(3,2)) * t8724;
t7707 = t8727 * t11021;
t10329 = t7707 + t7767;
t10382 = (-t10527 * t7398 - t11043) * pkin(1) + t7401 - qJ(3,1) * t10329 + (-pkin(1) * t9282 + t10776 * t9176 + ((-t9840 + t11009) * t8791 + t9840) * qJ(3,1)) * t8727;
t10381 = (t10552 * t7615 + t8805 * t9082) * t9347 + (t10579 * t9199 + t7540 * t8806) * t9705 - 0.2e1 * (-qJ(3,6) * t9839 + t8752) * t11082 - t8809 * (-t11091 * t9763 + t7384 * t8806) + (t10295 * t7522 + t10296 * t7378 + t7369 * t8806 - t7528 * t9563) * t8815;
t10238 = t7406 * t11093;
t7371 = t10230 * t11152 + t11094 + t7403;
t7379 = t11121 * t7394 + t7391 * t9827;
t7385 = pkin(1) * t11051 - t7394;
t7616 = t7739 - t10117 / 0.2e1;
t9228 = t7742 * t11093;
t7523 = t9228 / 0.4e1 + t7616 * t9609;
t7529 = t7733 + (0.4e1 * t11093 * t9444 + t11119 * t7790) * t8710;
t7541 = (qJ(3,5) * t10153 * t10315 + pkin(1) * t10201) * t8710;
t9346 = -0.4e1 * t9610;
t9559 = t8710 * t10154;
t9703 = 0.2e1 * t10157;
t10380 = (-t10580 * t9559 + t7616 * t9763) * t9346 + (-qJ(3,5) * t10202 * t10753 + t11115 * t7541) * t9703 + 0.2e1 * (qJ(3,5) * t9394 + t8753) * t11078 - t8811 * (t10238 * t8806 + t11115 * t7385) + (t11115 * t7371 + t11127 * t7523 + t11258 * t7379 - t7529 * t9192) * t8817;
t10379 = (t10552 * t7616 + t8805 * t9083) * t9346 + (t10580 * t9198 + t7541 * t8806) * t9703 - 0.2e1 * (-qJ(3,5) * t9839 + t8752) * t11078 - t8811 * (-t11094 * t9763 + t7385 * t8806) + (t10295 * t7523 + t10296 * t7379 + t7371 * t8806 - t7529 * t9559) * t8817;
t10240 = t7407 * t11096;
t7370 = t10227 * t11152 + t11098 + t7404;
t7380 = t11121 * t7395 + t7392 * t9819;
t7386 = pkin(1) * t11049 - t7395;
t7617 = t7740 - t10116 / 0.2e1;
t9229 = t10166 * t11097;
t7524 = t9229 / 0.4e1 + t7617 * t9599;
t7530 = t7734 + (0.4e1 * t11096 * t9441 + t11119 * t7791) * t8713;
t7542 = (qJ(3,4) * t10147 * t10315 + pkin(1) * t10195) * t8713;
t9345 = -0.4e1 * t9600;
t9555 = t8713 * t10148;
t9701 = 0.2e1 * t10151;
t10378 = (-t10581 * t9555 + t7617 * t9763) * t9345 + (-qJ(3,4) * t10196 * t10747 + t11115 * t7542) * t9701 + 0.2e1 * (qJ(3,4) * t9394 + t8753) * t11074 - t8813 * (t10240 * t8806 + t11115 * t7386) + (t11115 * t7370 + t11127 * t7524 + t11258 * t7380 - t7530 * t9191) * t8819;
t10377 = (t10552 * t7617 + t8805 * t9084) * t9345 + (t10581 * t9197 + t7542 * t8806) * t9701 - 0.2e1 * (-qJ(3,4) * t9839 + t8752) * t11074 - (-t11098 * t9763 + t7386 * t8806) * t8813 + (t10295 * t7524 + t10296 * t7380 + t7370 * t8806 - t7530 * t9555) * t8819;
t10376 = (-t11100 * t9551 + t7627 * t9763) * t9341 + (-qJ(3,3) * t10184 * t8720 * t8806 + t11115 * t7543) * t9699 + 0.2e1 * (qJ(3,3) * t9394 + t8753) * t11067 - (t10242 * t8806 + t11115 * t7387) * t8827 + (t11115 * t7375 + t11127 * t7525 + t11258 * t7381 - t7531 * t9190) * t8833;
t10375 = (-t11102 * t9543 + t7629 * t9763) * t9339 + (-qJ(3,1) * t10172 * t8726 * t8806 + t11115 * t7545) * t9695 + 0.2e1 * (qJ(3,1) * t9394 + t8753) * t11059 - (t10246 * t8806 + t11115 * t7389) * t8831 + (t11115 * t7377 + t11127 * t7527 + t11258 * t7383 - t7533 * t9188) * t8837;
t10244 = t7412 * t11107;
t10374 = (-t11101 * t9547 + t7628 * t9763) * t9340 + (-qJ(3,2) * t10178 * t8723 * t8806 + t11115 * t7544) * t9697 + 0.2e1 * (qJ(3,2) * t9394 + t8753) * t11063 - t8829 * (t10244 * t8806 + t11115 * t7388) + (t11115 * t7376 + t11127 * t7526 + t11258 * t7382 - t7532 * t9189) * t8835;
t10373 = t9610 * t11264 - t7772 * (qJ(3,5) * t11118 * t9609 + t11037) * t11361 - 0.2e1 * t9228 * t10574 + t10204 * t11148 + t11119 * qJ(3,5) * t11078 + 0.2e1 * (t10238 + t10271) * t10568 - t8808 * t10268 + 0.2e1 * t11095;
t10372 = t9600 * t11263 - t7773 * (qJ(3,4) * t11118 * t9599 + t11036) * t11360 - 0.2e1 * t9229 * t10572 + t10198 * t11147 + t11119 * qJ(3,4) * t11074 + 0.2e1 * (t10240 + t10270) * t10566 - t8808 * t10267 + 0.2e1 * t11099;
t10371 = t9577 * t11261 - (qJ(3,2) * t11118 * t9576 + t11031) * t7778 * t11358 - 0.2e1 * t9309 * t10562 + t10180 * t11145 + t11119 * qJ(3,2) * t11063 + 0.2e1 * (pkin(1) * t11062 + t10244) * t10556 - t8808 * t10265 + 0.2e1 * t11110;
t10370 = t10296 * t7345 + t7336 * t8806 + t7504 * t10552 + (t10213 * t10296 + t8974 * t9380) * t8708;
t10369 = t11115 * t7338 + t11258 * t7347 + t7506 * t9763 + (t10211 * t11258 - t8978 * t9378) * t8714;
t10368 = t11115 * t7353 + t11258 * t7362 + t7508 * t9763 + (t10188 * t11258 - t8975 * t9375) * t8727;
t10367 = t10296 * t7360 + t7351 * t8806 + t7507 * t10552 + (t10192 * t10296 + t8971 * t9377) * t8721;
t7669 = t8708 * t11029;
t10340 = t7669 + t7741;
t10366 = -qJ(3,6) * t10340 + (-pkin(1) * t9304 + t10796 * t9181 + ((-t9845 + t11017) * t8791 + t9845) * qJ(3,6)) * t8708 + (-t10538 * t7390 - t11053) * pkin(1) + t7393;
t7670 = t8711 * t11028;
t10339 = t7670 + t7742;
t10365 = -qJ(3,5) * t10339 + (-pkin(1) * t9302 + t10795 * t9180 + ((-t9844 + t11016) * t8791 + t9844) * qJ(3,5)) * t8711 + (-t10537 * t7391 - t11051) * pkin(1) + t7394;
t10364 = t7586 * t9839 + (t11115 * t9302 - t8973 * t9180) * t8711 + t7406 * t9764 + (t8806 * t8811 + t8808 * t9761) * t7391;
t10363 = t7587 * t9839 + (t11115 * t9300 - t8972 * t9179) * t8714 + t7407 * t9764 + (t8806 * t8813 + t8808 * t9760) * t7392;
t7610 = t7766 - t9593;
t10362 = t7610 * t9839 + (t11115 * t9284 - t8970 * t9177) * t8724 + t7412 * t9764 + (t8806 * t8829 + t8808 * t9758) * t7397;
t10361 = t7611 * t9839 + (t11115 * t9282 - t8969 * t9176) * t8727 + t7413 * t9764 + (t8806 * t8831 + t8808 * t9757) * t7398;
t10360 = t7609 * t9394 + (-t8806 * t9286 + t8977 * t9178) * t8721 - t7411 * t10578 + (-t10529 * t8806 + t9753) * t7396;
t10359 = t7610 * t9394 + (-t8806 * t9284 + t8976 * t9177) * t8724 - t7412 * t10578 + (-t10528 * t8806 + t9752) * t7397;
t8492 = t10654 * t8782 + t8781 * t8786;
t10328 = -t8491 * t10862 + t8492 * t8265;
t8493 = t10673 * t8781 + t10654;
t10327 = -t8493 * t10862 + t8494 * t8265;
t10326 = t8266 * t10629 - t8494 * t10863;
t10050 = t8785 * t10863;
t10325 = -t8784 * t10050 + t8782 * t8266;
t10049 = t8506 * t10629;
t9876 = t8785 * t10471;
t10324 = t8643 * t10049 + t8493 * t9876;
t10234 = t7390 * t11374;
t10232 = t7390 * t10526;
t10231 = t7391 * t11372;
t10229 = t7391 * t10521;
t10228 = t7392 * t11370;
t10226 = t7392 * t10516;
t10225 = t7396 * t11368;
t10222 = t7396 * t10505;
t10221 = t7397 * t11366;
t10218 = t7397 * t10500;
t10217 = t7398 * t11364;
t10214 = t7398 * t10495;
t10168 = t8709 * t11017;
t10167 = t8712 * t11016;
t10165 = t8813 * t11015;
t10164 = t8819 * t11015;
t10144 = t8827 * t11011;
t10143 = t8833 * t11011;
t10141 = t8829 * t11010;
t10140 = t8835 * t11010;
t10138 = t8831 * t11009;
t10137 = t8837 * t11009;
t10047 = t8594 * t10700;
t10054 = t8330 * t10717;
t9965 = t8763 * t10666;
t9031 = -t11244 * t9965 - t10422;
t9961 = t11244 * t10717;
t9032 = -t10666 * t8325 + t9961;
t9962 = t8816 * t10717;
t9963 = t8816 * t10718;
t9964 = t8763 * t10626;
t7807 = ((-((t8782 * t9962 + t10523) * t8784 - t8816 * t9964) * t8786 + ((-t10522 * t8782 + t9963) * t8784 + t8810 * t10626) * t8783 + (-(-t8782 * t9963 + t10522) * t8786 + (t10523 * t8782 + t9962) * t8783) * t8781) * t9319 - t11184 * t9073) * t8795 + (-(-t10626 * t8325 + (t10422 * t8782 + t10718 * t11244) * t8784) * t11186 + ((((-t10054 * t8782 + t8324 * t8862) * t8784 + t8330 * t9964) * t8808 - t9206 * t10047) * t8786 - (((-t10660 * t8324 - t10718 * t8330) * t8784 + t8324 * t10626) * t8808 + t8601 * t10047) * t8783) * t8805 + ((t9031 * t8791 + (t8324 * t8868 + t8330 * t9965) * t10577 - t9031) * t8786 - (t9032 * t8791 + (t10666 * t8324 - t10054) * t10577 - t9032) * t8783) * t8781 + ((-t8325 * t8862 + t8782 * t9961) * t8784 - t11244 * t9964) * t11185) * t8815 - t11287 * t10701;
t10115 = t7807 * t11374;
t10046 = t8594 * t10697;
t9960 = t8764 * t10665;
t9029 = -t11243 * t9960 - t10421;
t9030 = -t10665 * t8327 + t10714 * t11243;
t9956 = t8818 * t10714;
t9957 = t8818 * t10715;
t9958 = t8764 * t10625;
t9959 = t8764 * t10659;
t7808 = ((-((t8782 * t9956 + t10518) * t8784 - t8818 * t9958) * t8786 + t8783 * ((-t10517 * t8782 + t9957) * t8784 + t8812 * t10625) + (-(-t8782 * t9957 + t10517) * t8786 + t8783 * (t10518 * t8782 + t9956)) * t8781) * t9319 - t11183 * t9072) * t8796 + (-(-t10625 * t8327 + (t10421 * t8782 + t10715 * t11243) * t8784) * t11186 + ((((t8326 * t8863 - t8334 * t9959) * t8784 + t8334 * t9958) * t8808 - t9205 * t10046) * t8786 - (((-t10659 * t8326 - t10715 * t8334) * t8784 + t8326 * t10625) * t8808 + t8602 * t10046) * t8783) * t8805 + ((t9029 * t8791 + (t8326 * t8869 + t8334 * t9960) * t10577 - t9029) * t8786 - (t9030 * t8791 + (t10665 * t8326 - t10714 * t8334) * t10577 - t9030) * t8783) * t8781 + ((t11243 * t9959 - t8327 * t8863) * t8784 - t11243 * t9958) * t11185) * t8817 - t11288 * t10698;
t10114 = t7808 * t11372;
t10045 = t8594 * t10694;
t10053 = t8338 * t10711;
t9955 = t8765 * t10664;
t9027 = -t11242 * t9955 - t10420;
t9951 = t11242 * t10711;
t9028 = -t10664 * t8329 + t9951;
t9952 = t8820 * t10711;
t9953 = t8820 * t10712;
t9954 = t8765 * t10624;
t7809 = ((-((t8782 * t9952 + t10513) * t8784 - t8820 * t9954) * t8786 + t8783 * ((-t10512 * t8782 + t9953) * t8784 + t8814 * t10624) + (-(-t8782 * t9953 + t10512) * t8786 + t8783 * (t10513 * t8782 + t9952)) * t8781) * t9319 - t11182 * t9071) * t8797 + (((-t8329 * t8864 + t8782 * t9951) * t8784 - t11242 * t9954) * t11185 - (-t10624 * t8329 + (t10420 * t8782 + t10712 * t11242) * t8784) * t11186 + ((((-t10053 * t8782 + t8328 * t8864) * t8784 + t8338 * t9954) * t8808 - t9204 * t10045) * t8786 - t8783 * (((-t10658 * t8328 - t10712 * t8338) * t8784 + t8328 * t10624) * t8808 + t8603 * t10045)) * t8805 + ((t9027 * t8791 + (t8328 * t8870 + t8338 * t9955) * t10577 - t9027) * t8786 - t8783 * (t9028 * t8791 + (t10664 * t8328 - t10053) * t10577 - t9028)) * t8781) * t8819 - t11290 * t10695;
t10113 = t7809 * t11370;
t10044 = t8594 * t10691;
t9950 = t8766 * t10663;
t9025 = -t11241 * t9950 - t10419;
t9026 = -t10663 * t8348 + t10708 * t11241;
t9946 = t8834 * t10708;
t9947 = t8834 * t10709;
t9948 = t8766 * t10623;
t9949 = t8766 * t10657;
t7810 = ((-((t8782 * t9946 + t10502) * t8784 - t8834 * t9948) * t8786 + t8783 * ((-t10501 * t8782 + t9947) * t8784 + t8828 * t10623) + (-(-t8782 * t9947 + t10501) * t8786 + t8783 * (t10502 * t8782 + t9946)) * t8781) * t9319 + t9010 * t9070) * t8801 + (-(-t10623 * t8348 + (t10419 * t8782 + t10709 * t11241) * t8784) * t11186 + ((((t8347 * t8865 - t8353 * t9949) * t8784 + t8353 * t9948) * t8808 - t9203 * t10044) * t8786 - (((-t10657 * t8347 - t10709 * t8353) * t8784 + t8347 * t10623) * t8808 + t8604 * t10044) * t8783) * t8805 + ((t9025 * t8791 + (t8347 * t8871 + t8353 * t9950) * t10577 - t9025) * t8786 - (t9026 * t8791 + (t10663 * t8347 - t10708 * t8353) * t10577 - t9026) * t8783) * t8781 + ((t11241 * t9949 - t8348 * t8865) * t8784 - t11241 * t9948) * t11185) * t8833 - t11292 * t10692;
t10112 = t7810 * t11368;
t10043 = t8594 * t10688;
t10052 = t8357 * t10705;
t9945 = t8767 * t10662;
t9023 = -t11240 * t9945 - t8350 * t8872;
t9778 = t11240 * t10705;
t9024 = -t10662 * t8350 + t9778;
t9942 = t8836 * t10705;
t9943 = t8836 * t10706;
t9944 = t8767 * t10622;
t7811 = ((-((t8782 * t9942 + t10497) * t8784 - t8836 * t9944) * t8786 + ((-t10496 * t8782 + t9943) * t8784 + t8830 * t10622) * t8783 + (-(-t8782 * t9943 + t10496) * t8786 + (t10497 * t8782 + t9942) * t8783) * t8781) * t9319 + t9009 * t9075) * t8802 + (-(-t10622 * t8350 + (t10656 * t8350 + t10706 * t11240) * t8784) * t11186 + ((((-t10052 * t8782 + t8349 * t8866) * t8784 + t8357 * t9944) * t8808 - t9202 * t10043) * t8786 - (((-t10656 * t8349 - t10706 * t8357) * t8784 + t8349 * t10622) * t8808 + t8605 * t10043) * t8783) * t8805 + ((t9023 * t8791 + (t8349 * t8872 + t8357 * t9945) * t10577 - t9023) * t8786 - (t9024 * t8791 + (t10662 * t8349 - t10052) * t10577 - t9024) * t8783) * t8781 + ((-t8350 * t8866 + t8782 * t9778) * t8784 - t11240 * t9944) * t11185) * t8835 - t11294 * t10689;
t10111 = t7811 * t11366;
t10042 = t8594 * t10685;
t9941 = t8768 * t10661;
t9021 = -t11239 * t9941 - t8352 * t8873;
t9022 = -t10661 * t8352 + t10702 * t11239;
t9937 = t8838 * t10702;
t9938 = t8838 * t10703;
t9939 = t8768 * t10621;
t9940 = t8768 * t10655;
t7812 = ((-((t8782 * t9937 + t10492) * t8784 - t8838 * t9939) * t8786 + ((-t10491 * t8782 + t9938) * t8784 + t8832 * t10621) * t8783 + (-(-t8782 * t9938 + t10491) * t8786 + (t10492 * t8782 + t9937) * t8783) * t8781) * t9319 + t9008 * t9074) * t8803 + (-(-t10621 * t8352 + (t10655 * t8352 + t10703 * t11239) * t8784) * t11186 + ((((t8351 * t8867 - t8361 * t9940) * t8784 + t8361 * t9939) * t8808 - t9201 * t10042) * t8786 - (((-t10655 * t8351 - t10703 * t8361) * t8784 + t8351 * t10621) * t8808 + t8606 * t10042) * t8783) * t8805 + ((t9021 * t8791 + (t8351 * t8873 + t8361 * t9941) * t10577 - t9021) * t8786 - (t9022 * t8791 + (t10661 * t8351 - t10702 * t8361) * t10577 - t9022) * t8783) * t8781 + ((t11239 * t9940 - t8352 * t8867) * t8784 - t11239 * t9939) * t11185) * t8837 - t11296 * t10686;
t10110 = t7812 * t11364;
t7813 = -(-t8365 * t8810 - t8816 * t9073) * t10041 + (t8791 * t10900 + (-t8324 * t8365 + t8330 * t9073) * t10577 - t10900) * t8815 - (t10699 * t11244 * t11257 + t11169 * t8763) * t11287;
t10109 = t7813 * t11374;
t7814 = -(-t8366 * t8812 - t8818 * t9072) * t10040 + (t8791 * t10886 + (-t8326 * t8366 + t8334 * t9072) * t10577 - t10886) * t8817 - (t10696 * t11243 * t11257 + t11168 * t8764) * t11288;
t10108 = t7814 * t11372;
t7815 = -(-t8367 * t8814 - t8820 * t9071) * t10039 + (t8791 * t10885 + (-t8328 * t8367 + t8338 * t9071) * t10577 - t10885) * t8819 - (t10693 * t11242 * t11257 + t11167 * t8765) * t11290;
t10107 = t7815 * t11370;
t7816 = -(-t8368 * t8828 - t8834 * t9070) * t10038 + (t8791 * t10884 + (-t8347 * t8368 + t8353 * t9070) * t10577 - t10884) * t8833 - (t10690 * t11241 * t11257 + t11166 * t8766) * t11292;
t10106 = t7816 * t11368;
t7817 = -(-t8369 * t8830 - t8836 * t9075) * t10037 + (t8791 * t10892 + (-t8349 * t8369 + t8357 * t9075) * t10577 - t10892) * t8835 - (t10687 * t11240 * t11257 + t11165 * t8767) * t11294;
t10105 = t7817 * t11366;
t7818 = -(-t8370 * t8832 - t8838 * t9074) * t10036 + (t8791 * t10890 + (-t8351 * t8370 + t8361 * t9074) * t10577 - t10890) * t8837 - (t10684 * t11239 * t11257 + t11164 * t8768) * t11296;
t10104 = t7818 * t11364;
t10055 = t8265 * t10653;
t10051 = t8492 * t10471;
t9991 = t8643 * t10653;
t9966 = t8785 ^ 2 * t10471;
t9748 = t8099 * t10418;
t9747 = t8099 * t10414;
t9746 = t8099 * t10409;
t9745 = t8099 * t10381;
t9744 = t8102 * t10408;
t9743 = t8102 * t10380;
t9742 = t8102 * t10379;
t9741 = t8102 * t10373;
t9740 = t8105 * t10407;
t9739 = t8105 * t10378;
t9738 = t8105 * t10377;
t9737 = t8105 * t10372;
t9736 = t8133 * t10417;
t9735 = t8133 * t10406;
t9734 = t8133 * t10400;
t9733 = t8133 * t10376;
t9732 = t8136 * t10416;
t9731 = t8136 * t10399;
t9730 = t8136 * t10374;
t9729 = t8136 * t10371;
t9728 = t8139 * t10415;
t9727 = t8139 * t10405;
t9726 = t8139 * t10398;
t9725 = t8139 * t10375;
t9724 = t11351 * t10413;
t9723 = t11351 * t10397;
t9722 = t11351 * t10370;
t9721 = t11352 * t10412;
t9720 = t11352 * t10411;
t9719 = t11352 * t10396;
t9718 = t11353 * t10410;
t9717 = t11353 * t10395;
t9716 = t11353 * t10369;
t9715 = t11354 * t10404;
t9714 = t11354 * t10394;
t9713 = t11354 * t10367;
t9712 = t11355 * t10403;
t9711 = t11355 * t10402;
t9710 = t11355 * t10393;
t9709 = t11356 * t10401;
t9708 = t11356 * t10392;
t9707 = t11356 * t10368;
t9652 = t7390 * t10073;
t9650 = t8809 * t10234;
t9648 = t7391 * t10071;
t9646 = t8811 * t10231;
t9644 = t7392 * t10069;
t9642 = t8813 * t10228;
t9640 = t7396 * t10064;
t9638 = t8827 * t10225;
t9636 = t7397 * t10062;
t9634 = t8829 * t10221;
t9632 = t7398 * t10060;
t9630 = t8831 * t10217;
t9371 = t10413 * t11374;
t9370 = t10397 * t11374;
t9369 = t10370 * t11374;
t9368 = t10412 * t11372;
t9367 = t10411 * t11372;
t9366 = t10396 * t11372;
t9365 = t10410 * t11370;
t9364 = t10395 * t11370;
t9363 = t10369 * t11370;
t9362 = t10404 * t11368;
t9361 = t10394 * t11368;
t9360 = t10367 * t11368;
t9359 = t10403 * t11366;
t9358 = t10402 * t11366;
t9357 = t10393 * t11366;
t9356 = t10401 * t11364;
t9355 = t10392 * t11364;
t9354 = t10368 * t11364;
t9299 = (t11134 - 0.1e1) * t9622;
t9295 = (t11133 - 0.1e1) * t9613;
t9291 = (t11132 - 0.1e1) * t9604;
t9281 = (t11131 - 0.1e1) * t9589;
t9275 = (t11130 - 0.1e1) * t9581;
t9269 = (t11129 - 0.1e1) * t9573;
t9104 = t10860 * t8492 - t8266 * t8491;
t9103 = t10860 * t8494 - t8266 * t8493;
t8501 = t10525 * t8763 + t10699;
t9096 = t10543 * t8763 + t8501 * t8805;
t8502 = t10520 * t8764 + t10696;
t9095 = t10541 * t8764 + t8502 * t8805;
t8503 = t10515 * t8765 + t10693;
t9094 = t10539 * t8765 + t8503 * t8805;
t8507 = t10525 * t8769 - t10719;
t9093 = t10543 * t8769 + t8507 * t8805;
t8508 = t10520 * t8770 - t10716;
t9092 = t10541 * t8770 + t8508 * t8805;
t8509 = t10515 * t8771 - t10713;
t9091 = t10539 * t8771 + t8509 * t8805;
t8522 = t10504 * t8766 + t10690;
t9090 = t10534 * t8766 + t8522 * t8805;
t8523 = t10499 * t8767 + t10687;
t9089 = t10532 * t8767 + t8523 * t8805;
t8524 = t10494 * t8768 + t10684;
t9088 = t10530 * t8768 + t8524 * t8805;
t8526 = t10504 * t8772 - t10710;
t9087 = t10534 * t8772 + t8526 * t8805;
t8527 = t10499 * t8773 - t10707;
t9086 = t10532 * t8773 + t8527 * t8805;
t8528 = t10494 * t8774 - t10704;
t9085 = t10530 * t8774 + t8528 * t8805;
t9069 = 0.2e1 * t8809 * t9298;
t9068 = 0.2e1 * t8811 * t9294;
t9067 = 0.2e1 * t8813 * t9290;
t9066 = 0.2e1 * t8827 * t9280;
t9065 = 0.2e1 * t8829 * t9274;
t9064 = 0.2e1 * t8831 * t9268;
t9057 = t7741 * t8815 + t11052;
t9056 = t7405 * t8815 - t7741 * t8809;
t9055 = t7742 * t8817 + t11050;
t9054 = t7406 * t8817 - t7742 * t8811;
t9053 = t10164 * t8714 + t11048;
t9052 = -t10165 * t8714 + t7407 * t8819;
t9051 = t10143 * t8721 + t11046;
t9050 = -t10144 * t8721 + t7411 * t8833;
t9049 = t10140 * t8724 + t11044;
t9048 = -t10141 * t8724 + t7412 * t8835;
t9047 = t10137 * t8727 + t11042;
t9046 = -t10138 * t8727 + t7413 * t8837;
t9033 = -t10629 * t8265 - t10863 * t8493;
t8987 = -t10775 * t8504 - t8784 * t9966;
t8962 = t8099 * (t10168 * t8815 + t10758 * t7405);
t8961 = t8099 * (-t10168 * t8809 + t10757 * t7405);
t8960 = t8102 * (t10167 * t8817 + t10752 * t7406);
t8959 = t8102 * (-t10167 * t8811 + t10751 * t7406);
t8958 = t8105 * (t10164 * t8715 + t10746 * t7407);
t8957 = t8105 * (-t10165 * t8715 + t10745 * t7407);
t8956 = t8133 * (t10143 * t8722 + t10742 * t7411);
t8955 = t8133 * (-t10144 * t8722 + t10741 * t7411);
t8954 = t8136 * (t10140 * t8725 + t10738 * t7412);
t8953 = t8136 * (-t10141 * t8725 + t10737 * t7412);
t8952 = t8139 * (t10137 * t8728 + t10734 * t7413);
t8951 = t8139 * (-t10138 * t8728 + t10733 * t7413);
t8932 = t8708 * t9069 + t11083;
t8931 = t8711 * t9068 + t11079;
t8930 = t8714 * t9067 + t11075;
t8929 = t8721 * t9066 + t11068;
t8928 = t8724 * t9065 + t11064;
t8927 = t8727 * t9064 + t11060;
t8926 = 0.2e1 * t8708 * t9299 + 0.2e1 * t10232;
t8925 = 0.2e1 * t8711 * t9295 + 0.2e1 * t10229;
t8924 = 0.2e1 * t8714 * t9291 + 0.2e1 * t10226;
t8923 = 0.2e1 * t8721 * t9281 + 0.2e1 * t10222;
t8922 = 0.2e1 * t8724 * t9275 + 0.2e1 * t10218;
t8921 = 0.2e1 * t8727 * t9269 + 0.2e1 * t10214;
t8919 = t8099 * (t11083 * t8707 + t8709 * t9069);
t8918 = t8102 * (t11079 * t8710 + t8712 * t9068);
t8917 = t8105 * (t11075 * t8713 + t8715 * t9067);
t8916 = t8133 * (t11068 * t8720 + t8722 * t9066);
t8915 = t8136 * (t11064 * t8723 + t8725 * t9065);
t8914 = t8139 * (t11060 * t8726 + t8728 * t9064);
t8901 = 0.2e1 * t8099 * (t10232 * t8707 + t8709 * t9299);
t8900 = 0.2e1 * t8102 * (t10229 * t8710 + t8712 * t9295);
t8899 = 0.2e1 * t8105 * (t10226 * t8713 + t8715 * t9291);
t8898 = 0.2e1 * t8133 * (t10222 * t8720 + t8722 * t9281);
t8897 = 0.2e1 * t8136 * (t10218 * t8723 + t8725 * t9275);
t8896 = 0.2e1 * t8139 * (t10214 * t8726 + t8728 * t9269);
t8533 = t10488 * t8767 - t10688;
t8532 = t10488 * t8773 + t8767 * t8829;
t8531 = t10490 * t8772 + t8766 * t8827;
t8530 = t10490 * t8766 - t10691;
t8529 = t10486 * t8774 + t8768 * t8831;
t8525 = t10486 * t8768 - t10685;
t8515 = t10507 * t8771 + t8765 * t8813;
t8514 = t10507 * t8765 - t10694;
t8513 = t10509 * t8770 + t8764 * t8811;
t8512 = t10509 * t8764 - t10697;
t8511 = t10511 * t8769 + t8763 * t8809;
t8510 = t10511 * t8763 - t10700;
t8310 = t8491 * t9876;
t8303 = -t10559 * t8774 + t8528 * t8808;
t8302 = -t10561 * t8773 + t8527 * t8808;
t8301 = -t10563 * t8772 + t8526 * t8808;
t8300 = -t10559 * t8768 + t8524 * t8808;
t8299 = -t10561 * t8767 + t8523 * t8808;
t8298 = -t10563 * t8766 + t8522 * t8808;
t8291 = t8506 * t10775;
t8290 = -t10571 * t8771 + t8509 * t8808;
t8289 = -t10573 * t8770 + t8508 * t8808;
t8288 = -t10575 * t8769 + t8507 * t8808;
t8287 = -t10571 * t8765 + t8503 * t8808;
t8286 = -t10573 * t8764 + t8502 * t8808;
t8285 = -t10575 * t8763 + t8501 * t8808;
t8206 = -t8481 + t8256;
t8204 = t8265 * t10638;
t8111 = -t8257 + t8481;
t8084 = -t9998 + t10905;
t8083 = -t9999 + t10906;
t8082 = -t10000 + t10907;
t8081 = -t10001 + t10911;
t8080 = -t10002 + t10912;
t8079 = -t10003 + t10913;
t8075 = (t10583 * t8782 - t10645) * t8784 + (-t10589 * t8782 - t10639) * t8781 - t8786 * t10621;
t8074 = (t10584 * t8782 - t10646) * t8784 + (-t10590 * t8782 - t10640) * t8781 - t8786 * t10622;
t8073 = (t10585 * t8782 - t10647) * t8784 + (-t10591 * t8782 - t10641) * t8781 - t8786 * t10623;
t8072 = (t10586 * t8782 - t10648) * t8784 + (-t10592 * t8782 - t10642) * t8781 - t8786 * t10624;
t8071 = (t10587 * t8782 - t10649) * t8784 + (-t10593 * t8782 - t10643) * t8781 - t8786 * t10625;
t8070 = (t10588 * t8782 - t10650) * t8784 + (-t10594 * t8782 - t10644) * t8781 - t8786 * t10626;
t8064 = -t8256 + t8257;
t8062 = t8492 * t10863;
t8055 = -t8481 - t8257;
t8054 = -t8481 - t8256;
t8011 = -t8256 - t8257;
t7944 = (t8084 * t8774 + t8284) * t8808 + t11271;
t7943 = (t8083 * t8773 + t8283) * t8808 + t11270;
t7942 = (t8082 * t8772 + t8282) * t8808 + t11269;
t7935 = (t8081 * t8771 + t8278) * t8808 + t11268;
t7934 = (t8080 * t8770 + t8277) * t8808 + t11267;
t7933 = (t8079 * t8769 + t8276) * t8808 + t11266;
t7908 = pkin(1) * t8529 + t9085 * qJ(3,1) + (-t11115 * t8303 + t8529 * t8806) * pkin(2) + (t9085 * t8807 + (t11115 * t8529 + t8303 * t8806) * t8804) * pkin(6);
t7907 = pkin(1) * t8532 + t9086 * qJ(3,2) + (-t11115 * t8302 + t8532 * t8806) * pkin(2) + (t9086 * t8807 + (t11115 * t8532 + t8302 * t8806) * t8804) * pkin(6);
t7906 = pkin(1) * t8531 + t9087 * qJ(3,3) + (-t11115 * t8301 + t8531 * t8806) * pkin(2) + (t9087 * t8807 + (t11115 * t8531 + t8301 * t8806) * t8804) * pkin(6);
t7905 = pkin(1) * t8525 + t9088 * qJ(3,1) + (-t11115 * t8300 + t8525 * t8806) * pkin(2) + (t9088 * t8807 + (t11115 * t8525 + t8300 * t8806) * t8804) * pkin(6);
t7904 = pkin(1) * t8533 + t9089 * qJ(3,2) + (-t11115 * t8299 + t8533 * t8806) * pkin(2) + (t9089 * t8807 + (t11115 * t8533 + t8299 * t8806) * t8804) * pkin(6);
t7903 = pkin(1) * t8530 + t9090 * qJ(3,3) + (-t11115 * t8298 + t8530 * t8806) * pkin(2) + (t9090 * t8807 + (t11115 * t8530 + t8298 * t8806) * t8804) * pkin(6);
t7902 = pkin(1) * t8514 + t9094 * qJ(3,4) + (-t11115 * t8287 + t8514 * t8806) * pkin(2) + (t9094 * t8807 + (t11115 * t8514 + t8287 * t8806) * t8804) * pkin(6);
t7901 = pkin(1) * t8512 + t9095 * qJ(3,5) + (-t11115 * t8286 + t8512 * t8806) * pkin(2) + (t9095 * t8807 + (t11115 * t8512 + t8286 * t8806) * t8804) * pkin(6);
t7900 = pkin(1) * t8510 + t9096 * qJ(3,6) + (-t11115 * t8285 + t8510 * t8806) * pkin(2) + (t9096 * t8807 + (t11115 * t8510 + t8285 * t8806) * t8804) * pkin(6);
t7899 = pkin(1) * t8515 + t9091 * qJ(3,4) + (-t11115 * t8290 + t8515 * t8806) * pkin(2) + (t9091 * t8807 + (t11115 * t8515 + t8290 * t8806) * t8804) * pkin(6);
t7898 = pkin(1) * t8513 + t9092 * qJ(3,5) + (-t11115 * t8289 + t8513 * t8806) * pkin(2) + (t9092 * t8807 + (t11115 * t8513 + t8289 * t8806) * t8804) * pkin(6);
t7897 = pkin(1) * t8511 + t9093 * qJ(3,6) + (-t11115 * t8288 + t8511 * t8806) * pkin(2) + (t9093 * t8807 + (t11115 * t8511 + t8288 * t8806) * t8804) * pkin(6);
t7896 = (-t7908 * t8075 - t8010 * t8370) * t8726;
t7895 = (-t7907 * t8074 - t8009 * t8369) * t8723;
t7894 = (-t7906 * t8073 - t8008 * t8368) * t8720;
t7893 = (-t7899 * t8072 - t8007 * t8367) * t8713;
t7892 = (-t7898 * t8071 - t8006 * t8366) * t8710;
t7891 = (-t7897 * t8070 - t8005 * t8365) * t8707;
t7890 = (t11297 * t8010 - t7905 * t8075) * t8726;
t7889 = (t11295 * t8009 - t7904 * t8074) * t8723;
t7888 = (t11293 * t8008 - t7903 * t8073) * t8720;
t7887 = (t11291 * t8007 - t7902 * t8072) * t8713;
t7886 = (t11289 * t8006 - t7901 * t8071) * t8710;
t7885 = (t11341 * t8005 - t7900 * t8070) * t8707;
t7884 = (t11296 * t11356 * t7944 - t10977 * t7995) * t8726;
t7883 = (t11294 * t11355 * t7943 - t10978 * t7994) * t8723;
t7882 = (t11292 * t11354 * t7942 - t10976 * t7993) * t8720;
t7881 = (t11288 * t11352 * t7934 - t10980 * t7988) * t8710;
t7880 = (t11287 * t11351 * t7933 - t10981 * t7987) * t8707;
t7879 = (t11290 * t11353 * t7935 - t10979 * t7989) * t8713;
t7878 = (t11296 * ((t8084 * t8768 - t10902) * t8808 - t11345) - ((t10553 * t8617 + t8320 * t8832) * t8808 + t11208) * t11297) * t11364;
t7877 = (((t8083 * t8767 - t10903) * t8808 - t11346) * t11294 - ((t10555 * t8617 + t8319 * t8830) * t8808 + t11209) * t11295) * t11366;
t7876 = (((t8082 * t8766 - t10904) * t8808 - t11347) * t11292 - ((t10557 * t8617 + t8318 * t8828) * t8808 + t11210) * t11293) * t11368;
t7875 = (t11290 * ((t8081 * t8765 - t10908) * t8808 - t11348) - t11291 * ((t10565 * t8617 + t8314 * t8814) * t8808 + t11211)) * t11370;
t7874 = (t11287 * ((t8079 * t8763 - t10910) * t8808 - t11350) - ((t10569 * t8617 + t8312 * t8810) * t8808 + t11213) * t11341) * t11374;
t7873 = (((t8080 * t8764 - t10909) * t8808 - t11349) * t11288 - ((t10567 * t8617 + t8313 * t8812) * t8808 + t11212) * t11289) * t11372;
t7872 = (-t7908 * (-t8783 * t10621 + (t10639 * t8782 + t10589) * t8784 + t8781 * (-t10645 * t8782 + t10583)) + t7905 * t8418) * t8726;
t7871 = (-t7907 * (-t8783 * t10622 + (t10640 * t8782 + t10590) * t8784 + t8781 * (-t10646 * t8782 + t10584)) + t7904 * t8417) * t8723;
t7870 = (-t7906 * (-t8783 * t10623 + (t10641 * t8782 + t10591) * t8784 + t8781 * (-t10647 * t8782 + t10585)) + t7903 * t8416) * t8720;
t7857 = (-t7899 * (-t8783 * t10624 + (t10642 * t8782 + t10592) * t8784 + t8781 * (-t10648 * t8782 + t10586)) + t7902 * t8415) * t8713;
t7856 = (-t7898 * (-t8783 * t10625 + (t10643 * t8782 + t10593) * t8784 + t8781 * (-t10649 * t8782 + t10587)) + t7901 * t8414) * t8710;
t7855 = (-t7897 * (-t8783 * t10626 + (t10644 * t8782 + t10594) * t8784 + t8781 * (-t10650 * t8782 + t10588)) + t7900 * t8413) * t8707;
t7854 = (-t10970 * t7944 + t10977 * t7941) * t8726;
t7853 = (-t10971 * t7943 + t10978 * t7939) * t8723;
t7852 = (-t10972 * t7942 + t10976 * t7937) * t8720;
t7851 = (-t10975 * t7933 + t10981 * t7928) * t8707;
t7850 = (-t10973 * t7935 + t10979 * t7932) * t8713;
t7849 = (-t10974 * t7934 + t10980 * t7930) * t8710;
t7842 = (-t10971 * t7924 + t7923 * t10978) * t8723;
t7841 = (-t10972 * t7922 + t7921 * t10976) * t8720;
t7840 = (-t10970 * t7926 + t7925 * t10977) * t8726;
t7839 = (-((t11182 * t8765 + t8460) * t8797 + t11344) * t10973 + t7913 * t10979) * t8713;
t7838 = (-((t11183 * t8764 + t8459) * t8796 + t11343) * t10974 + t7911 * t10980) * t8710;
t7837 = (-((t11184 * t8763 + t8458) * t8795 + t11342) * t10975 + t7909 * t10981) * t8707;
t7563 = t7707 + t9342;
t7562 = t7706 + t9343;
t7561 = t7705 + t9344;
t7560 = t7671 + t9348;
t7559 = t7670 + t9349;
t7558 = t7669 + t9350;
t7497 = ((t10187 * t11102 - t9572) * t8837 - t9542 + t10309 * t10258) * t8727;
t7496 = ((t10189 * t11101 - t9580) * t8835 - t9546 + t10310 * t10259) * t8724;
t7495 = ((t10191 * t11100 - t9588) * t8833 - t9550 + t10311 * t10260) * t8721;
t7494 = ((t11027 * t9819 - t9603) * t8819 - t9554 + t10312 * t10261) * t8714;
t7493 = ((t11028 * t9827 - t9612) * t8817 - t9558 + t10313 * t10262) * t8711;
t7492 = ((t11029 * t9835 - t9621) * t8815 - t9562 + t10314 * t10263) * t8708;
t7491 = t7611 * t8791 + (t10577 * t9169 + t9840) * t8727 - t10329;
t7490 = t7610 * t8791 + (t10577 * t9170 + t9841) * t8724 - t10330;
t7489 = t7609 * t8791 + (t10577 * t9171 + t9842) * t8721 - t10331;
t7482 = t7587 * t8791 + (t10577 * t9172 + t9843) * t8714 - t10338;
t7481 = t7586 * t8791 + (t10577 * t9173 + t9844) * t8711 - t10339;
t7480 = t7585 * t8791 + (t10577 * t9174 + t9845) * t8708 - t10340;
t1 = [t10081 * t7398 + t10083 * t7397 + t10085 * t7396 + t10087 * t7392 + t10089 * t7391 + t10091 * t7390, 0, 0, -t11363 * t7926 - t11365 * t7924 - t11367 * t7922 - t11369 * t7914 - t11371 * t7912 - t11373 * t7910 + t7927 * t8919 + t7929 * t8918 + t7931 * t8917 + t7936 * t8916 + t7938 * t8915 + t7940 * t8914, t10092 * t7563 + t10094 * t7562 + t10096 * t7561 + t10098 * t7560 + t10100 * t7559 + t10102 * t7558 + t7927 * t8901 + t7929 * t8900 + t7931 * t8899 + t7936 * t8898 + t7938 * t8897 + t7940 * t8896, t7910 * t9650 + t7912 * t9646 + t7914 * t9642 + t7922 * t9638 + t7924 * t9634 + t7926 * t9630 + t7927 * t8962 + t7929 * t8960 + t7931 * t8958 + t7936 * t8956 + t7938 * t8954 + t7940 * t8952, t11375 * t7926 + t11376 * t7924 + t11377 * t7922 + t11378 * t7914 + t11379 * t7912 + t11380 * t7910 + t7927 * t8961 + t7929 * t8959 + t7931 * t8957 + t7936 * t8955 + t7938 * t8953 + t7940 * t8951, t10092 * t7413 + t10094 * t7412 + t10096 * t7411 + t10098 * t7407 + t10100 * t7406 + t10102 * t7405, 0, 0, (t10386 * t7956 + t7926 * t9707 + t7940 * t9725) * t8726 + (t10359 * t7955 + t7924 * t9712 + t7938 * t9730) * t8723 + (t10360 * t7954 + t7922 * t9715 + t7936 * t9733) * t8720 + (t10389 * t7950 + t7914 * t9716 + t7931 * t9739) * t8713 + (t10390 * t7949 + t7912 * t9721 + t7929 * t9743) * t8710 + (t10391 * t7948 + t7910 * t9724 + t7927 * t9748) * t8707, (t10361 * t7956 + t7926 * t9709 + t7940 * t9728) * t8726 + (t10362 * t7955 + t7924 * t9711 + t7938 * t9732) * t8723 + (t10385 * t7954 + t7922 * t9713 + t7936 * t9736) * t8720 + (t10363 * t7950 + t7914 * t9718 + t7931 * t9738) * t8713 + (t10364 * t7949 + t7912 * t9720 + t7929 * t9742) * t8710 + (t10388 * t7948 + t7910 * t9722 + t7927 * t9745) * t8707, (t11084 * t7926 + t7956 * t7491 + t7940 * t9727) * t8726 + (t11085 * t7924 + t7955 * t7490 + t7938 * t9729) * t8723 + (t11086 * t7922 + t7954 * t7489 + t7936 * t9735) * t8720 + (t11087 * t7914 + t7950 * t7482 + t7931 * t9737) * t8713 + (t11088 * t7912 + t7949 * t7481 + t7929 * t9741) * t8710 + (t11089 * t7910 + t7948 * t7480 + t7927 * t9747) * t8707 + (-t10092 * t7497 - t10094 * t7496 - t10096 * t7495 - t10098 * t7494 - t10100 * t7493 - t10102 * t7492) * t10293, (t10382 * t7956 + t7926 * t9708 + t7940 * t9726) * t8726 + (t10383 * t7955 + t7924 * t9710 + t7938 * t9731) * t8723 + (t10384 * t7954 + t7922 * t9714 + t7936 * t9734) * t8720 + (t10387 * t7950 + t7914 * t9717 + t7931 * t9740) * t8713 + (t10365 * t7949 + t7912 * t9719 + t7929 * t9744) * t8710 + (t10366 * t7948 + t7910 * t9723 + t7927 * t9746) * t8707, 0, 0, 0, 0, 0, 0, t8054 * t10638 - t10921 + t8291 + (-t9966 + t10050) * t8781, -t10683 * t8055 + t10325 + t8987, t8011 * t8782 + t8204 + (t10920 + (t10859 + t10861) * t8643) * t8785, 0; t10080 * t7398 + t10082 * t7397 + t10084 * t7396 + t10086 * t7392 + t10088 * t7391 + t10090 * t7390, 0, 0, -t11363 * t7925 - t11365 * t7923 - t11367 * t7921 - t11369 * t7913 - t11371 * t7911 - t11373 * t7909 + t7928 * t8919 + t7930 * t8918 + t7932 * t8917 + t7937 * t8916 + t7939 * t8915 + t7941 * t8914, t10093 * t7563 + t10095 * t7562 + t10097 * t7561 + t10099 * t7560 + t10101 * t7559 + t10103 * t7558 + t7928 * t8901 + t7930 * t8900 + t7932 * t8899 + t7937 * t8898 + t7939 * t8897 + t7941 * t8896, t7909 * t9650 + t7911 * t9646 + t7913 * t9642 + t7921 * t9638 + t7923 * t9634 + t7925 * t9630 + t7928 * t8962 + t7930 * t8960 + t7932 * t8958 + t7937 * t8956 + t7939 * t8954 + t7941 * t8952, t11375 * t7925 + t11376 * t7923 + t11377 * t7921 + t11378 * t7913 + t11379 * t7911 + t11380 * t7909 + t7928 * t8961 + t7930 * t8959 + t7932 * t8957 + t7937 * t8955 + t7939 * t8953 + t7941 * t8951, t10093 * t7413 + t10095 * t7412 + t10097 * t7411 + t10099 * t7407 + t10101 * t7406 + t10103 * t7405, 0, 0, (t10386 * t7953 + t7925 * t9707 + t7941 * t9725) * t8726 + (t10359 * t7952 + t7923 * t9712 + t7939 * t9730) * t8723 + (t10360 * t7951 + t7921 * t9715 + t7937 * t9733) * t8720 + (t10389 * t7947 + t7913 * t9716 + t7932 * t9739) * t8713 + (t10390 * t7946 + t7911 * t9721 + t7930 * t9743) * t8710 + (t10391 * t7945 + t7909 * t9724 + t7928 * t9748) * t8707, (t10361 * t7953 + t7925 * t9709 + t7941 * t9728) * t8726 + (t10362 * t7952 + t7923 * t9711 + t7939 * t9732) * t8723 + (t10385 * t7951 + t7921 * t9713 + t7937 * t9736) * t8720 + (t10363 * t7947 + t7913 * t9718 + t7932 * t9738) * t8713 + (t10364 * t7946 + t7911 * t9720 + t7930 * t9742) * t8710 + (t10388 * t7945 + t7909 * t9722 + t7928 * t9745) * t8707, (t11084 * t7925 + t7953 * t7491 + t7941 * t9727) * t8726 + (t11085 * t7923 + t7952 * t7490 + t7939 * t9729) * t8723 + (t11086 * t7921 + t7951 * t7489 + t7937 * t9735) * t8720 + (t11087 * t7913 + t7947 * t7482 + t7932 * t9737) * t8713 + (t11088 * t7911 + t7946 * t7481 + t7930 * t9741) * t8710 + (t11089 * t7909 + t7945 * t7480 + t7928 * t9747) * t8707 + (-t10093 * t7497 - t10095 * t7496 - t10097 * t7495 - t10099 * t7494 - t10101 * t7493 - t10103 * t7492) * t10293, (t10382 * t7953 + t7925 * t9708 + t7941 * t9726) * t8726 + (t10383 * t7952 + t7923 * t9710 + t7939 * t9731) * t8723 + (t10384 * t7951 + t7921 * t9714 + t7937 * t9734) * t8720 + (t10387 * t7947 + t7913 * t9717 + t7932 * t9740) * t8713 + (t10365 * t7946 + t7911 * t9719 + t7930 * t9744) * t8710 + (t10366 * t7945 + t7909 * t9723 + t7928 * t9746) * t8707, 0, 0, 0, 0, 0, 0, t10055 + t8054 * t8492 + t8310 + (-t9991 - t10864) * t8506, t8055 * t8491 - t8062 + (-t10051 + (-t8266 + t10862) * t8783) * t8785, -t10653 * t8011 + t10328 + t9104, 0; t10074 * t7398 + t10075 * t7397 + t10076 * t7396 + t10077 * t7392 + t10078 * t7391 + t10079 * t7390, 0, 0, t7995 * t8914 + t7994 * t8915 + t7993 * t8916 + t7989 * t8917 + t7988 * t8918 + t7987 * t8919 + (t8004 * t8831 * t9840 * t11381 + t8003 * t8829 * t9841 * t11382 + t8002 * t8827 * t9842 * t11383 + t8001 * t8813 * t9843 * t11384 + t8000 * t8811 * t9844 * t11385 + t7999 * t8809 * t9845 * t11386) * t8805, t7995 * t8896 + t7994 * t8897 + t7993 * t8898 + t7989 * t8899 + t7988 * t8900 + t7987 * t8901 + (-t7558 * t9541 - t7559 * t9540 - t7560 * t9539 - t7561 * t9538 - t7562 * t9537 - t7563 * t9536) * t8805, t7995 * t8952 + t7994 * t8954 + t7993 * t8956 + t7989 * t8958 + t7988 * t8960 + t7987 * t8962 + (-t11058 * t9536 - t11062 * t9537 - t11066 * t9538 - t11073 * t9539 - t11077 * t9540 - t11081 * t9541) * t8805, t7995 * t8951 + t7994 * t8953 + t7993 * t8955 + t7989 * t8957 + t7988 * t8959 + t7987 * t8961 + (-t10217 * t8004 * t8803 - t10221 * t8003 * t8802 - t10225 * t8002 * t8801 - t10228 * t8001 * t8797 - t10231 * t8000 * t8796 - t10234 * t7999 * t8795) * t8805, (-t7405 * t9541 - t7406 * t9540 - t7407 * t9539 - t7411 * t9538 - t7412 * t9537 - t7413 * t9536) * t8805, 0, 0, (t10386 * t8010 + t7995 * t9725) * t8726 + (t10359 * t8009 + t7994 * t9730) * t8723 + (t10360 * t8008 + t7993 * t9733) * t8720 + (t10389 * t8007 + t7989 * t9739) * t8713 + (t10390 * t8006 + t7988 * t9743) * t8710 + (t10391 * t8005 + t7987 * t9748) * t8707 + (-t10368 * t9536 - t10369 * t9539 - t10403 * t9537 - t10404 * t9538 - t10412 * t9540 - t10413 * t9541) * t8805, (t10361 * t8010 + t7995 * t9728) * t8726 + (t10362 * t8009 + t7994 * t9732) * t8723 + (t10385 * t8008 + t7993 * t9736) * t8720 + (t10363 * t8007 + t7989 * t9738) * t8713 + (t10364 * t8006 + t7988 * t9742) * t8710 + (t10388 * t8005 + t7987 * t9745) * t8707 + (-t10367 * t9538 - t10370 * t9541 - t10401 * t9536 - t10402 * t9537 - t10410 * t9539 - t10411 * t9540) * t8805, (t8010 * t7491 + t7995 * t9727) * t8726 + (t8009 * t7490 + t7994 * t9729) * t8723 + (t8008 * t7489 + t7993 * t9735) * t8720 + (t8007 * t7482 + t7989 * t9737) * t8713 + (t8006 * t7481 + t7988 * t9741) * t8710 + (t8005 * t7480 + t7987 * t9747) * t8707 + (-t7366 * t9541 - t7367 * t9540 - t7368 * t9539 - t7372 * t9538 - t7373 * t9537 - t7374 * t9536 + (t7492 * t9541 + t7493 * t9540 + t7494 * t9539 + t7495 * t9538 + t7496 * t9537 + t7497 * t9536) * t10293) * t8805, (t10382 * t8010 + t7995 * t9726) * t8726 + (t10383 * t8009 + t7994 * t9731) * t8723 + (t10384 * t8008 + t7993 * t9734) * t8720 + (t10387 * t8007 + t7989 * t9740) * t8713 + (t10365 * t8006 + t7988 * t9744) * t8710 + (t10366 * t8005 + t7987 * t9746) * t8707 + (-t10392 * t9536 - t10393 * t9537 - t10394 * t9538 - t10395 * t9539 - t10396 * t9540 - t10397 * t9541) * t8805, 0, 0, 0, 0, 0, 0, t8054 * t8494 + t10324 + t9033, t8055 * t8493 + t10326 - t11251, t10629 * t8011 + t10327 + t9103, 0; t7390 * t7874 + t7391 * t7873 + t7392 * t7875 + t7396 * t7876 + t7397 * t7877 + t7398 * t7878, 0, 0, -t11363 * t7812 - t11365 * t7811 - t11367 * t7810 - t11369 * t7809 - t11371 * t7808 - t11373 * t7807 + t7873 * t8931 + t7874 * t8932 + t7875 * t8930 + t7876 * t8929 + t7877 * t8928 + t7878 * t8927, t10110 * t7563 + t10111 * t7562 + t10112 * t7561 + t10113 * t7560 + t10114 * t7559 + t10115 * t7558 + t7873 * t8925 + t7874 * t8926 + t7875 * t8924 + t7876 * t8923 + t7877 * t8922 + t7878 * t8921, t7807 * t9652 + t7808 * t9648 + t7809 * t9644 + t7810 * t9640 + t7811 * t9636 + t7812 * t9632 + t7873 * t9055 + t7874 * t9057 + t7875 * t9053 + t7876 * t9051 + t7877 * t9049 + t7878 * t9047, t11375 * t7812 + t11376 * t7811 + t11377 * t7810 + t11378 * t7809 + t11379 * t7808 + t11380 * t7807 + t7873 * t9054 + t7874 * t9056 + t7875 * t9052 + t7876 * t9050 + t7877 * t9048 + t7878 * t9046, t10110 * t7413 + t10111 * t7412 + t10112 * t7411 + t10113 * t7407 + t10114 * t7406 + t10115 * t7405, 0, 0, t10386 * t7890 + t10359 * t7889 + t10360 * t7888 + t10389 * t7887 + t10390 * t7886 + t10391 * t7885 + t10375 * t7878 + t10374 * t7877 + t10376 * t7876 + t10378 * t7875 + t10418 * t7874 + t10380 * t7873 + t7812 * t9354 + t7811 * t9359 + t7810 * t9362 + t7809 * t9363 + t7808 * t9368 + t7807 * t9371, t10361 * t7890 + t10362 * t7889 + t10385 * t7888 + t10363 * t7887 + t10364 * t7886 + t10388 * t7885 + t10415 * t7878 + t10416 * t7877 + t10417 * t7876 + t10377 * t7875 + t10381 * t7874 + t10379 * t7873 + t7812 * t9356 + t7811 * t9358 + t7810 * t9360 + t7809 * t9365 + t7808 * t9367 + t7807 * t9369, t7887 * t7482 + t7888 * t7489 + t7889 * t7490 + t7890 * t7491 + t7885 * t7480 + t7886 * t7481 + t7374 * t10110 + t7373 * t10111 + t7372 * t10112 + t7368 * t10113 + t7367 * t10114 + t7366 * t10115 + t10405 * t7878 + t10371 * t7877 + t10406 * t7876 + t10372 * t7875 + t10414 * t7874 + t10373 * t7873 + (-t10110 * t7497 - t10111 * t7496 - t10112 * t7495 - t10113 * t7494 - t10114 * t7493 - t10115 * t7492) * t10293, t10382 * t7890 + t10383 * t7889 + t10384 * t7888 + t10387 * t7887 + t10365 * t7886 + t10366 * t7885 + t10398 * t7878 + t10399 * t7877 + t10400 * t7876 + t10407 * t7875 + t10409 * t7874 + t10408 * t7873 + t7812 * t9355 + t7811 * t9357 + t7810 * t9361 + t7809 * t9364 + t7808 * t9366 + t7807 * t9370, t8266 * t10638 + (-t10683 * t8643 + t8504 * t8782) * t8506, t8064 * t8782 + t8204 + (-t10920 + (-t10859 + t10861) * t8643) * t8785, -t10683 * t8111 + t10325 - t8987, -t8265 * t10683 + (t10638 * t8643 - t8506 * t8782) * t8504, t8206 * t10638 + t10921 + t8291 + (-t9966 - t10050) * t8781, (t8782 * t10471 + (-t8504 * t8784 + t8506 * t8781) * t8643) * t8785, 0, 0, 0, 0; t7390 * t7880 + t7391 * t7881 + t7392 * t7879 + t7396 * t7882 + t7397 * t7883 + t7398 * t7884, 0, 0, -t11363 * t7818 - t11365 * t7817 - t11367 * t7816 - t11369 * t7815 - t11371 * t7814 - t11373 * t7813 + t7879 * t8930 + t7880 * t8932 + t7881 * t8931 + t7882 * t8929 + t7883 * t8928 + t7884 * t8927, t10104 * t7563 + t10105 * t7562 + t10106 * t7561 + t10107 * t7560 + t10108 * t7559 + t10109 * t7558 + t7879 * t8924 + t7880 * t8926 + t7881 * t8925 + t7882 * t8923 + t7883 * t8922 + t7884 * t8921, t7813 * t9652 + t7814 * t9648 + t7815 * t9644 + t7816 * t9640 + t7817 * t9636 + t7818 * t9632 + t7879 * t9053 + t7880 * t9057 + t7881 * t9055 + t7882 * t9051 + t7883 * t9049 + t7884 * t9047, t11375 * t7818 + t11376 * t7817 + t11377 * t7816 + t11378 * t7815 + t11379 * t7814 + t11380 * t7813 + t7879 * t9052 + t7880 * t9056 + t7881 * t9054 + t7882 * t9050 + t7883 * t9048 + t7884 * t9046, t10104 * t7413 + t10105 * t7412 + t10106 * t7411 + t10107 * t7407 + t10108 * t7406 + t10109 * t7405, 0, 0, t10386 * t7896 + t10359 * t7895 + t10360 * t7894 + t10389 * t7893 + t10390 * t7892 + t10391 * t7891 + t10375 * t7884 + t10374 * t7883 + t10376 * t7882 + t10380 * t7881 + t10418 * t7880 + t10378 * t7879 + t7818 * t9354 + t7817 * t9359 + t7816 * t9362 + t7815 * t9363 + t7814 * t9368 + t7813 * t9371, t10361 * t7896 + t10362 * t7895 + t10385 * t7894 + t10363 * t7893 + t10364 * t7892 + t10388 * t7891 + t10415 * t7884 + t10416 * t7883 + t10417 * t7882 + t10379 * t7881 + t10381 * t7880 + t10377 * t7879 + t7818 * t9356 + t7817 * t9358 + t7816 * t9360 + t7815 * t9365 + t7814 * t9367 + t7813 * t9369, t7893 * t7482 + t7894 * t7489 + t7895 * t7490 + t7896 * t7491 + t7891 * t7480 + t7892 * t7481 + t7374 * t10104 + t7373 * t10105 + t7372 * t10106 + t7368 * t10107 + t7367 * t10108 + t7366 * t10109 + t10405 * t7884 + t10371 * t7883 + t10406 * t7882 + t10373 * t7881 + t10414 * t7880 + t10372 * t7879 + (-t10104 * t7497 - t10105 * t7496 - t10106 * t7495 - t10107 * t7494 - t10108 * t7493 - t10109 * t7492) * t10293, t10382 * t7896 + t10383 * t7895 + t10384 * t7894 + t10387 * t7893 + t10365 * t7892 + t10366 * t7891 + t10398 * t7884 + t10399 * t7883 + t10400 * t7882 + t10408 * t7881 + t10409 * t7880 + t10407 * t7879 + t7818 * t9355 + t7817 * t9357 + t7816 * t9361 + t7815 * t9364 + t7814 * t9366 + t7813 * t9370, t8266 * t8492 + (-t10653 * t8504 + t8491 * t8643) * t8506, -t10653 * t8064 + t10328 - t9104, t8111 * t8491 - t8062 + (t10051 + (-t8266 - t10862) * t8783) * t8785, t8265 * t8491 + (t10653 * t8506 + t8492 * t8643) * t8504, -t10055 + t8206 * t8492 + t8310 + (-t9991 + t10864) * t8506, -t8783 * t9966 + (-t8491 * t8506 - t8492 * t8504) * t8643, 0, 0, 0, 0; t7390 * t7851 + t7391 * t7849 + t7392 * t7850 + t7396 * t7852 + t7397 * t7853 + t7398 * t7854, 0, 0, -t7837 * t8708 * t9627 - t7838 * t8711 * t9625 - t7839 * t8714 * t9623 - t7840 * t8727 * t9590 - t7841 * t8721 * t9594 - t7842 * t8724 * t9592 + t7849 * t8931 + t7850 * t8930 + t7851 * t8932 + t7852 * t8929 + t7853 * t8928 + t7854 * t8927, t7837 * t7558 + t7838 * t7559 + t7839 * t7560 + t7841 * t7561 + t7842 * t7562 + t7840 * t7563 + t7849 * t8925 + t7850 * t8924 + t7851 * t8926 + t7852 * t8923 + t7853 * t8922 + t7854 * t8921, t11058 * t7840 + t11062 * t7842 + t11066 * t7841 + t11073 * t7839 + t11077 * t7838 + t11081 * t7837 + t7849 * t9055 + t7850 * t9053 + t7851 * t9057 + t7852 * t9051 + t7853 * t9049 + t7854 * t9047, t11057 * t7840 + t11061 * t7842 + t11065 * t7841 + t11072 * t7839 + t11076 * t7838 + t11080 * t7837 + t7849 * t9054 + t7850 * t9052 + t7851 * t9056 + t7852 * t9050 + t7853 * t9048 + t7854 * t9046, t7405 * t7837 + t7406 * t7838 + t7407 * t7839 + t7411 * t7841 + t7412 * t7842 + t7413 * t7840, 0, 0, t10386 * t7872 + t10359 * t7871 + t10360 * t7870 + t10389 * t7857 + t10390 * t7856 + t10391 * t7855 + t10375 * t7854 + t10374 * t7853 + t10376 * t7852 + t10418 * t7851 + t10378 * t7850 + t10380 * t7849 + t10403 * t7842 + t10404 * t7841 + t10368 * t7840 + t10369 * t7839 + t10412 * t7838 + t10413 * t7837, t10361 * t7872 + t10362 * t7871 + t10385 * t7870 + t10363 * t7857 + t10364 * t7856 + t10388 * t7855 + t10415 * t7854 + t10416 * t7853 + t10417 * t7852 + t10381 * t7851 + t10377 * t7850 + t10379 * t7849 + t10402 * t7842 + t10367 * t7841 + t10401 * t7840 + t10410 * t7839 + t10411 * t7838 + t10370 * t7837, t7837 * t7366 + t7838 * t7367 + t7839 * t7368 + t7841 * t7372 + t7842 * t7373 + t7840 * t7374 + t7855 * t7480 + t7856 * t7481 + t7857 * t7482 + t7870 * t7489 + t7871 * t7490 + t7872 * t7491 + t10405 * t7854 + t10371 * t7853 + t10406 * t7852 + t10414 * t7851 + t10372 * t7850 + t10373 * t7849 + (-t7492 * t7837 - t7493 * t7838 - t7494 * t7839 - t7495 * t7841 - t7496 * t7842 - t7497 * t7840) * t10293, t10382 * t7872 + t10383 * t7871 + t10384 * t7870 + t10387 * t7857 + t10365 * t7856 + t10366 * t7855 + t10398 * t7854 + t10399 * t7853 + t10400 * t7852 + t10409 * t7851 + t10407 * t7850 + t10408 * t7849 + t10393 * t7842 + t10394 * t7841 + t10392 * t7840 + t10395 * t7839 + t10396 * t7838 + t10397 * t7837, t8266 * t8494 + (t10629 * t8504 + t8493 * t8643) * t8506, t10629 * t8064 + t10327 - t9103, t8111 * t8493 + t10326 + t11251, t8265 * t8493 + (t8494 * t8643 - t10049) * t8504, t8206 * t8494 + t10324 - t9033, t8786 * t9966 + (-t8493 * t8506 - t8494 * t8504) * t8643, 0, 0, 0, 0;];
tau_reg  = t1;
