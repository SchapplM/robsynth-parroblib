% Calculate vector of centrifugal and Coriolis load for parallel robot
% P6RRPRRR14V4G7A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,alpha3,alpha4,d1,d4,theta3]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% rSges [4x3]
%   center of mass of all robot links (in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Icges [4x6]
%   inertia of all robot links about their respective center of mass, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertiavector2matrix.m)
%
% Output:
% taucX [6x1]
%   forces required to compensate Coriolis and centrifugal joint torques
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-04 05:41
% Revision: e482436b586c4f286726c907c195760c5ac72455 (2022-11-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taucX = P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1(xP, xDP, qJ, legFrame, ...
  koppelP, pkin, m, rSges, Icges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(7,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: xDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: pkin has to be [7x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: m has to be [4x1] (double)'); 
assert(isreal(rSges) && all(size(rSges) == [4,3]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: rSges has to be [4x3] (double)');
assert(isreal(Icges) && all(size(Icges) == [4 6]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: Icges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V4G7A0_coriolisvec_para_pf_slag_vp1: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From coriolisvec_para_plfcoord_par1_matlab.m
% OptimizationMode: 2
% StartTime: 2022-11-03 23:05:31
% EndTime: 2022-11-03 23:12:55
% DurationCPUTime: 478.57s
% Computational Cost: add. (2880771->3282), mult. (5776857->5069), div. (147024->12), fcn. (5296440->48), ass. (0->1831)
t4733 = xP(4);
t4662 = sin(t4733);
t4665 = cos(t4733);
t5309 = t4662 * t4665;
t5838 = 0.2e1 * t5309;
t4731 = xP(6);
t4660 = sin(t4731);
t4663 = cos(t4731);
t4745 = koppelP(6,1);
t5684 = koppelP(6,2);
t4484 = t4660 * t5684 - t4663 * t4745;
t4732 = xP(5);
t4661 = sin(t4732);
t4664 = cos(t4732);
t4744 = koppelP(6,3);
t4382 = -t4484 * t4664 + t4661 * t4744;
t4724 = xDP(5);
t5298 = t4665 * t4724;
t4485 = t4660 * t4745 + t4663 * t5684;
t4434 = t4665 * t4485;
t4843 = t4484 * t4661 + t4664 * t4744;
t4277 = -t4843 * t4662 + t4434;
t4725 = xDP(4);
t5456 = t4277 * t4725;
t5837 = t4382 * t5298 - t5456;
t5679 = koppelP(5,3);
t5685 = koppelP(5,2);
t5690 = koppelP(5,1);
t5727 = -t4660 * t5685 + t4663 * t5690;
t4383 = t4661 * t5679 + t4664 * t5727;
t4486 = t4660 * t5690 + t4663 * t5685;
t5701 = -t4661 * t5727 + t4664 * t5679;
t5781 = t4486 * t4665 - t4662 * t5701;
t5455 = t5781 * t4725;
t5836 = t4383 * t5298 - t5455;
t5308 = t4662 * t4724;
t5315 = t4662 * t4486;
t4279 = t4665 * t5701 + t5315;
t5450 = t4279 * t4725;
t5835 = -t4383 * t5308 + t5450;
t5680 = koppelP(4,3);
t5686 = koppelP(4,2);
t5691 = koppelP(4,1);
t5726 = -t4660 * t5686 + t4663 * t5691;
t4384 = t4661 * t5680 + t4664 * t5726;
t4487 = t4660 * t5691 + t4663 * t5686;
t5700 = -t4661 * t5726 + t4664 * t5680;
t5782 = t4487 * t4665 - t4662 * t5700;
t5454 = t5782 * t4725;
t5834 = t4384 * t5298 - t5454;
t5314 = t4662 * t4487;
t4282 = t4665 * t5700 + t5314;
t5449 = t4282 * t4725;
t5833 = -t4384 * t5308 + t5449;
t5681 = koppelP(3,3);
t5687 = koppelP(3,2);
t5692 = koppelP(3,1);
t5725 = -t4660 * t5687 + t4663 * t5692;
t4385 = t4661 * t5681 + t4664 * t5725;
t4488 = t4660 * t5692 + t4663 * t5687;
t5699 = -t4661 * t5725 + t4664 * t5681;
t5783 = t4488 * t4665 - t4662 * t5699;
t5453 = t5783 * t4725;
t5832 = t4385 * t5298 - t5453;
t5313 = t4662 * t4488;
t4285 = t4665 * t5699 + t5313;
t5448 = t4285 * t4725;
t5831 = -t4385 * t5308 + t5448;
t5682 = koppelP(2,3);
t5688 = koppelP(2,2);
t5693 = koppelP(2,1);
t5724 = -t4660 * t5688 + t4663 * t5693;
t4386 = t4661 * t5682 + t4664 * t5724;
t4489 = t4660 * t5693 + t4663 * t5688;
t5698 = -t4661 * t5724 + t4664 * t5682;
t5784 = t4489 * t4665 - t4662 * t5698;
t5452 = t5784 * t4725;
t5830 = t4386 * t5298 - t5452;
t5312 = t4662 * t4489;
t4288 = t4665 * t5698 + t5312;
t5447 = t4288 * t4725;
t5829 = -t4386 * t5308 + t5447;
t5683 = koppelP(1,3);
t5689 = koppelP(1,2);
t5694 = koppelP(1,1);
t5723 = -t4660 * t5689 + t4663 * t5694;
t4387 = t4661 * t5683 + t4664 * t5723;
t4490 = t4660 * t5694 + t4663 * t5689;
t5697 = -t4661 * t5723 + t4664 * t5683;
t5785 = t4490 * t4665 - t4662 * t5697;
t5451 = t5785 * t4725;
t5828 = t4387 * t5298 - t5451;
t5311 = t4662 * t4490;
t4291 = t4665 * t5697 + t5311;
t5446 = t4291 * t4725;
t5827 = -t4387 * t5308 + t5446;
t4734 = rSges(4,3);
t4736 = rSges(4,1);
t5620 = m(4) * t4736;
t4554 = t4734 * t5620 - Icges(4,5);
t5381 = t4554 * t4664;
t4462 = t4660 * t5381;
t4735 = rSges(4,2);
t4934 = t4735 * t5620 - Icges(4,4);
t4619 = t4663 ^ 2;
t5662 = 0.2e1 * t4619;
t5162 = t4934 * t5662;
t5322 = t4661 * t4934;
t4553 = m(4) * t4734 * t4735 - Icges(4,6);
t5384 = t4553 * t4664;
t4691 = t4735 ^ 2;
t4692 = t4736 ^ 2;
t5715 = (-t4691 + t4692) * m(4) + Icges(4,2) - Icges(4,1);
t5391 = t5715 * t4660;
t5789 = t4663 * (-t4661 * t5391 + t5384);
t4208 = -t4661 * t5162 + t4462 + t5322 + t5789;
t4621 = t4665 ^ 2;
t5392 = t5715 * t4619;
t4620 = t4664 ^ 2;
t5163 = 0.2e1 * t5381;
t4964 = t4661 * t5163;
t5380 = t4934 * t4660;
t5661 = 0.2e1 * t4620;
t5653 = t5661 - 0.4e1;
t5386 = t4553 * t4660;
t4690 = t4734 ^ 2;
t5745 = (-t4690 + t4691) * m(4) + Icges(4,3) - Icges(4,2);
t5320 = t4661 * t4664;
t5825 = -0.2e1 * t5320;
t5748 = t5745 * t4620 + t5386 * t5825;
t5811 = (-t5380 * t5653 + t4964) * t4663 + (t4620 - 0.2e1) * t5392 + t5715 + t5748;
t5826 = t4208 * t5838 - t5811 * t4621 - t5392;
t4264 = t4485 * t4662 + t4665 * t4843;
t5457 = t4264 * t4725;
t5822 = t4382 * t5308 - t5457;
t4681 = sin(pkin(7));
t4682 = sin(pkin(4));
t5621 = pkin(6) * t4682;
t5122 = t4681 * t5621;
t5821 = 0.2e1 * t5122;
t4684 = cos(pkin(7));
t4526 = rSges(3,1) * t4684 - rSges(3,2) * t4681 + pkin(1);
t4686 = cos(pkin(3));
t5772 = m(3) * t4686;
t5820 = t4526 * t5772;
t5615 = t4681 * rSges(3,1);
t5616 = rSges(3,2) * t4684;
t4537 = t5615 + t5616;
t5819 = t4537 * t5772;
t4685 = cos(pkin(4));
t4618 = t4685 * pkin(6);
t4602 = t4618 + qJ(3,1);
t4590 = 0.1e1 / t4602;
t4715 = sin(qJ(2,1));
t4683 = sin(pkin(3));
t5119 = t4684 * t5621;
t5623 = pkin(2) * t4681;
t4498 = t5119 - t5623;
t5407 = t4498 * t4686;
t5721 = -t4602 * t4683 - t5407;
t4791 = t5721 * t4715;
t4542 = pkin(1) + t5122;
t5622 = pkin(2) * t4684;
t4483 = t4542 + t5622;
t4721 = cos(qJ(2,1));
t5416 = t4483 * t4721;
t5741 = -t4791 + t5416;
t5805 = 0.1e1 / t5741;
t5818 = t5805 * t4590;
t4601 = t4618 + qJ(3,2);
t4589 = 0.1e1 / t4601;
t4713 = sin(qJ(2,2));
t5720 = -t4601 * t4683 - t5407;
t4792 = t5720 * t4713;
t4719 = cos(qJ(2,2));
t5418 = t4483 * t4719;
t5740 = -t4792 + t5418;
t5806 = 0.1e1 / t5740;
t5817 = t5806 * t4589;
t4600 = t4618 + qJ(3,3);
t4588 = 0.1e1 / t4600;
t4711 = sin(qJ(2,3));
t5719 = -t4600 * t4683 - t5407;
t4793 = t5719 * t4711;
t4717 = cos(qJ(2,3));
t5420 = t4483 * t4717;
t5739 = -t4793 + t5420;
t5807 = 0.1e1 / t5739;
t5816 = t5807 * t4588;
t4596 = t4618 + qJ(3,4);
t4584 = 0.1e1 / t4596;
t4697 = sin(qJ(2,4));
t5718 = -t4596 * t4683 - t5407;
t4794 = t5718 * t4697;
t4703 = cos(qJ(2,4));
t5422 = t4483 * t4703;
t5738 = -t4794 + t5422;
t5808 = 0.1e1 / t5738;
t5815 = t5808 * t4584;
t4595 = t4618 + qJ(3,5);
t4583 = 0.1e1 / t4595;
t4695 = sin(qJ(2,5));
t5717 = -t4595 * t4683 - t5407;
t4795 = t5717 * t4695;
t4701 = cos(qJ(2,5));
t5424 = t4483 * t4701;
t5737 = -t4795 + t5424;
t5809 = 0.1e1 / t5737;
t5814 = t5809 * t4583;
t4594 = t4618 + qJ(3,6);
t4582 = 0.1e1 / t4594;
t4693 = sin(qJ(2,6));
t5716 = -t4594 * t4683 - t5407;
t4796 = t5716 * t4693;
t4699 = cos(qJ(2,6));
t5426 = t4483 * t4699;
t5736 = -t4796 + t5426;
t5810 = 0.1e1 / t5736;
t5813 = t5810 * t4582;
t4587 = t4661 * t4725;
t4723 = xDP(6);
t5744 = t4587 + t4723;
t5768 = t4660 * t5744;
t4815 = t5715 * t5768;
t5247 = t4724 * t4554;
t5325 = t4660 * t4723;
t4372 = -t5325 * t5715 + 0.2e1 * t5247;
t4955 = t4372 * t4620 - t5247;
t5812 = 0.2e1 * t4815 + t4955;
t5323 = t4660 * t4736;
t4480 = t4663 * t4735 + t5323;
t5306 = t4663 * t4736;
t4479 = t4660 * t4735 - t5306;
t5301 = t4664 * t4734;
t5702 = t4479 * t4661 + t5301;
t4211 = -t4480 * t4665 + t4662 * t5702;
t4671 = t4686 ^ 2;
t5287 = t4683 * t4686;
t5026 = t4498 * t5287;
t4882 = -t4618 - t5026;
t4330 = t4594 * t4671 - qJ(3,6) + t4882;
t4705 = legFrame(6,2);
t4628 = sin(t4705);
t4634 = cos(t4705);
t4672 = t4699 ^ 2;
t4694 = sin(qJ(1,6));
t5365 = t4594 * t4694;
t4700 = cos(qJ(1,6));
t5405 = t4498 * t4700;
t4360 = t4693 * t5405 + t5365;
t4459 = t4694 * t4498;
t5258 = t4700 * t4594;
t4361 = t4693 * t5258 - t4459;
t4771 = t4360 * t5287 - t4361 * t4671 + t4361;
t5425 = t4483 * t4700;
t5035 = t4683 * t5425;
t5286 = t4683 * t4693;
t5038 = t4483 * t5286;
t5332 = t4634 * t4594;
t4066 = (t4330 * t4634 - t4628 * t5035) * t4672 + (-t4628 * t4771 + t4634 * t5038) * t4699 + t5332;
t5338 = t4628 * t4594;
t4067 = (t4330 * t4628 + t4634 * t5035) * t4672 + (t4628 * t5038 + t4634 * t4771) * t4699 + t5338;
t5303 = t4664 * t4723;
t4432 = t4665 * t5303 + t5308;
t4433 = -t4662 * t5303 + t5298;
t4728 = xDP(1);
t4126 = t4264 * t4433 - t4277 * t4432 + t4728;
t5318 = t4661 * t4723;
t4530 = t4725 + t5318;
t4726 = xDP(3);
t4165 = t4277 * t4530 - t4382 * t4433 + t4726;
t4727 = xDP(2);
t4171 = -t4264 * t4530 + t4382 * t4432 + t4727;
t5408 = t4498 * t4683;
t4842 = -t4594 * t4686 + t5408;
t4195 = t4694 * t5736 + t4700 * t4842;
t5283 = t4683 * t4699;
t5067 = t4195 * t5283;
t3782 = (t4066 * t4171 + t4067 * t4126 - t4165 * t5067) * t5813;
t5672 = 0.2e1 * t3782;
t4331 = t4595 * t4671 - qJ(3,5) + t4882;
t4706 = legFrame(5,2);
t4629 = sin(t4706);
t4635 = cos(t4706);
t4673 = t4701 ^ 2;
t4696 = sin(qJ(1,5));
t5361 = t4595 * t4696;
t4702 = cos(qJ(1,5));
t5403 = t4498 * t4702;
t4362 = t4695 * t5403 + t5361;
t4460 = t4696 * t4498;
t5257 = t4702 * t4595;
t4363 = t4695 * t5257 - t4460;
t4770 = t4362 * t5287 - t4363 * t4671 + t4363;
t5423 = t4483 * t4702;
t5034 = t4683 * t5423;
t5285 = t4683 * t4695;
t5037 = t4483 * t5285;
t5331 = t4635 * t4595;
t4068 = (t4331 * t4635 - t4629 * t5034) * t4673 + (-t4629 * t4770 + t4635 * t5037) * t4701 + t5331;
t5337 = t4629 * t4595;
t4069 = (t4331 * t4629 + t4635 * t5034) * t4673 + (t4629 * t5037 + t4635 * t4770) * t4701 + t5337;
t4127 = t4279 * t4433 - t4432 * t5781 + t4728;
t4166 = -t4383 * t4433 + t4530 * t5781 + t4726;
t4172 = -t4279 * t4530 + t4383 * t4432 + t4727;
t4841 = -t4595 * t4686 + t5408;
t4196 = t4696 * t5737 + t4702 * t4841;
t5282 = t4683 * t4701;
t5065 = t4196 * t5282;
t3783 = (t4068 * t4172 + t4069 * t4127 - t4166 * t5065) * t5814;
t5671 = 0.2e1 * t3783;
t4332 = t4596 * t4671 - qJ(3,4) + t4882;
t4707 = legFrame(4,2);
t4630 = sin(t4707);
t4636 = cos(t4707);
t4674 = t4703 ^ 2;
t4698 = sin(qJ(1,4));
t5357 = t4596 * t4698;
t4704 = cos(qJ(1,4));
t5401 = t4498 * t4704;
t4364 = t4697 * t5401 + t5357;
t4461 = t4698 * t4498;
t5256 = t4704 * t4596;
t4365 = t4697 * t5256 - t4461;
t4769 = t4364 * t5287 - t4365 * t4671 + t4365;
t5421 = t4483 * t4704;
t5033 = t4683 * t5421;
t5284 = t4683 * t4697;
t5036 = t4483 * t5284;
t5330 = t4636 * t4596;
t4070 = (t4332 * t4636 - t4630 * t5033) * t4674 + (-t4630 * t4769 + t4636 * t5036) * t4703 + t5330;
t5336 = t4630 * t4596;
t4071 = (t4332 * t4630 + t4636 * t5033) * t4674 + (t4630 * t5036 + t4636 * t4769) * t4703 + t5336;
t4128 = t4282 * t4433 - t4432 * t5782 + t4728;
t4167 = -t4384 * t4433 + t4530 * t5782 + t4726;
t4173 = -t4282 * t4530 + t4384 * t4432 + t4727;
t4840 = -t4596 * t4686 + t5408;
t4197 = t4698 * t5738 + t4704 * t4840;
t5281 = t4683 * t4703;
t5063 = t4197 * t5281;
t3784 = (t4070 * t4173 + t4071 * t4128 - t4167 * t5063) * t5815;
t5670 = 0.2e1 * t3784;
t4333 = t4600 * t4671 - qJ(3,3) + t4882;
t4708 = legFrame(3,2);
t4631 = sin(t4708);
t4637 = cos(t4708);
t4675 = t4717 ^ 2;
t4712 = sin(qJ(1,3));
t5353 = t4600 * t4712;
t4718 = cos(qJ(1,3));
t5399 = t4498 * t4718;
t4373 = t4711 * t5399 + t5353;
t4463 = t4712 * t4498;
t5252 = t4718 * t4600;
t4374 = t4711 * t5252 - t4463;
t4768 = t4373 * t5287 - t4374 * t4671 + t4374;
t5419 = t4483 * t4718;
t5029 = t4683 * t5419;
t5280 = t4683 * t4711;
t5032 = t4483 * t5280;
t5329 = t4637 * t4600;
t4073 = (t4333 * t4637 - t4631 * t5029) * t4675 + (-t4631 * t4768 + t4637 * t5032) * t4717 + t5329;
t5335 = t4631 * t4600;
t4074 = (t4333 * t4631 + t4637 * t5029) * t4675 + (t4631 * t5032 + t4637 * t4768) * t4717 + t5335;
t4129 = t4285 * t4433 - t4432 * t5783 + t4728;
t4168 = -t4385 * t4433 + t4530 * t5783 + t4726;
t4174 = -t4285 * t4530 + t4385 * t4432 + t4727;
t4839 = -t4600 * t4686 + t5408;
t4198 = t4712 * t5739 + t4718 * t4839;
t5277 = t4683 * t4717;
t5061 = t4198 * t5277;
t3803 = (t4073 * t4174 + t4074 * t4129 - t4168 * t5061) * t5816;
t5669 = 0.2e1 * t3803;
t4334 = t4601 * t4671 - qJ(3,2) + t4882;
t4709 = legFrame(2,2);
t4632 = sin(t4709);
t4638 = cos(t4709);
t4676 = t4719 ^ 2;
t4714 = sin(qJ(1,2));
t5349 = t4601 * t4714;
t4720 = cos(qJ(1,2));
t5397 = t4498 * t4720;
t4375 = t4713 * t5397 + t5349;
t4464 = t4714 * t4498;
t5251 = t4720 * t4601;
t4376 = t4713 * t5251 - t4464;
t4767 = t4375 * t5287 - t4376 * t4671 + t4376;
t5417 = t4483 * t4720;
t5028 = t4683 * t5417;
t5279 = t4683 * t4713;
t5031 = t4483 * t5279;
t5328 = t4638 * t4601;
t4075 = (t4334 * t4638 - t4632 * t5028) * t4676 + (-t4632 * t4767 + t4638 * t5031) * t4719 + t5328;
t5334 = t4632 * t4601;
t4076 = (t4334 * t4632 + t4638 * t5028) * t4676 + (t4632 * t5031 + t4638 * t4767) * t4719 + t5334;
t4130 = t4288 * t4433 - t4432 * t5784 + t4728;
t4169 = -t4386 * t4433 + t4530 * t5784 + t4726;
t4175 = -t4288 * t4530 + t4386 * t4432 + t4727;
t4838 = -t4601 * t4686 + t5408;
t4199 = t4714 * t5740 + t4720 * t4838;
t5276 = t4683 * t4719;
t5059 = t4199 * t5276;
t3804 = (t4075 * t4175 + t4076 * t4130 - t4169 * t5059) * t5817;
t5668 = 0.2e1 * t3804;
t4335 = t4602 * t4671 - qJ(3,1) + t4882;
t4710 = legFrame(1,2);
t4633 = sin(t4710);
t4639 = cos(t4710);
t4677 = t4721 ^ 2;
t4716 = sin(qJ(1,1));
t5345 = t4602 * t4716;
t4722 = cos(qJ(1,1));
t5395 = t4498 * t4722;
t4377 = t4715 * t5395 + t5345;
t4465 = t4716 * t4498;
t5250 = t4722 * t4602;
t4378 = t4715 * t5250 - t4465;
t4766 = t4377 * t5287 - t4378 * t4671 + t4378;
t5415 = t4483 * t4722;
t5027 = t4683 * t5415;
t5278 = t4683 * t4715;
t5030 = t4483 * t5278;
t5327 = t4639 * t4602;
t4077 = (t4335 * t4639 - t4633 * t5027) * t4677 + (-t4633 * t4766 + t4639 * t5030) * t4721 + t5327;
t5333 = t4633 * t4602;
t4078 = (t4335 * t4633 + t4639 * t5027) * t4677 + (t4633 * t5030 + t4639 * t4766) * t4721 + t5333;
t4131 = t4291 * t4433 - t4432 * t5785 + t4728;
t4170 = -t4387 * t4433 + t4530 * t5785 + t4726;
t4176 = -t4291 * t4530 + t4387 * t4432 + t4727;
t4837 = -t4602 * t4686 + t5408;
t4200 = t4716 * t5741 + t4722 * t4837;
t5275 = t4683 * t4721;
t5057 = t4200 * t5275;
t3805 = (t4077 * t4176 + t4078 * t4131 - t4170 * t5057) * t5818;
t5667 = 0.2e1 * t3805;
t5203 = -0.2e1 * t4618;
t5804 = 0.2e1 * t4934;
t4936 = pkin(2) * t5821;
t5249 = t4723 * t4934;
t5803 = -0.2e1 * t5249;
t4246 = t4485 * t5303 - t4724 * t4843;
t5802 = t4246 * t4662;
t5801 = t4246 * t4665;
t4247 = t4486 * t5303 - t4724 * t5701;
t5800 = t4247 * t4662;
t5799 = t4247 * t4665;
t4248 = t4487 * t5303 - t4724 * t5700;
t5798 = t4248 * t4662;
t5797 = t4248 * t4665;
t4249 = t4488 * t5303 - t4724 * t5699;
t5796 = t4249 * t4662;
t5795 = t4249 * t4665;
t4250 = t4489 * t5303 - t4724 * t5698;
t5794 = t4250 * t4662;
t5793 = t4250 * t4665;
t4251 = t4490 * t5303 - t4724 * t5697;
t5792 = t4251 * t4662;
t5791 = t4251 * t4665;
t4747 = rSges(3,2) ^ 2;
t4749 = rSges(3,1) ^ 2;
t4544 = m(3) * (-t4747 + t4749) - Icges(3,1) + Icges(3,2);
t4668 = t4684 ^ 2;
t4503 = t4544 * t4668;
t5289 = t4681 * t4684;
t5790 = t4544 * t5289;
t5324 = t4660 * t4724;
t4475 = t4553 * t5324;
t5665 = 0.2e1 * t4475;
t4402 = t5665 - t5249;
t5788 = -t4402 * t4620 + t4475;
t4142 = -(t4434 * t4661 - t4484 * t4662) * t4723 + t5837;
t4752 = pkin(6) ^ 2;
t4617 = t4685 ^ 2 * t4752;
t4753 = pkin(2) ^ 2;
t5206 = t4752 - t4753;
t4546 = t4617 - t5206;
t5388 = t4546 * t4668;
t5787 = t5388 + t4617;
t5625 = pkin(1) * t4681;
t5115 = -rSges(3,2) + t5625;
t4915 = t5115 * rSges(3,1);
t5654 = m(3) * rSges(3,2);
t5241 = pkin(1) * t5654;
t5429 = (-t4544 * t4681 - t5241) * t4684;
t5786 = -m(3) * t4915 - Icges(3,4) + t5429;
t4219 = t4361 * t4683 + t4699 * t5425;
t4447 = t4483 * t4693;
t4348 = -t4594 * t5283 + t4447;
t5406 = t4498 * t4699;
t4102 = (t4360 * t4634 - t4628 * t5406) * t4671 + (t4219 * t4634 + t4348 * t4628) * t4686 - t4694 * t5332;
t4103 = (-t4360 * t4628 - t4634 * t5406) * t4671 + (-t4219 * t4628 + t4348 * t4634) * t4686 + t4694 * t5338;
t4177 = (-t4459 * t4693 + t5258) * t4671 + (-t4694 * t5426 + (-t4693 * t5365 - t5405) * t4683) * t4686 - t5258;
t3875 = (t4102 * t4126 + t4103 * t4171 + t4165 * t4177) * t5813;
t5780 = 0.2e1 * t3875;
t4220 = t4363 * t4683 + t4701 * t5423;
t4448 = t4483 * t4695;
t4349 = -t4595 * t5282 + t4448;
t5404 = t4498 * t4701;
t4104 = (t4362 * t4635 - t4629 * t5404) * t4671 + (t4220 * t4635 + t4349 * t4629) * t4686 - t4696 * t5331;
t4105 = (-t4362 * t4629 - t4635 * t5404) * t4671 + (-t4220 * t4629 + t4349 * t4635) * t4686 + t4696 * t5337;
t4178 = (-t4460 * t4695 + t5257) * t4671 + (-t4696 * t5424 + (-t4695 * t5361 - t5403) * t4683) * t4686 - t5257;
t3876 = (t4104 * t4127 + t4105 * t4172 + t4166 * t4178) * t5814;
t5779 = 0.2e1 * t3876;
t4221 = t4365 * t4683 + t4703 * t5421;
t4449 = t4483 * t4697;
t4350 = -t4596 * t5281 + t4449;
t5402 = t4498 * t4703;
t4106 = (t4364 * t4636 - t4630 * t5402) * t4671 + (t4221 * t4636 + t4350 * t4630) * t4686 - t4698 * t5330;
t4107 = (-t4364 * t4630 - t4636 * t5402) * t4671 + (-t4221 * t4630 + t4350 * t4636) * t4686 + t4698 * t5336;
t4179 = (-t4461 * t4697 + t5256) * t4671 + (-t4698 * t5422 + (-t4697 * t5357 - t5401) * t4683) * t4686 - t5256;
t3877 = (t4106 * t4128 + t4107 * t4173 + t4167 * t4179) * t5815;
t5778 = 0.2e1 * t3877;
t4222 = t4374 * t4683 + t4717 * t5419;
t4451 = t4483 * t4711;
t4354 = -t4600 * t5277 + t4451;
t5400 = t4498 * t4717;
t4108 = (t4373 * t4637 - t4631 * t5400) * t4671 + (t4222 * t4637 + t4354 * t4631) * t4686 - t4712 * t5329;
t4109 = (-t4373 * t4631 - t4637 * t5400) * t4671 + (-t4222 * t4631 + t4354 * t4637) * t4686 + t4712 * t5335;
t4180 = (-t4463 * t4711 + t5252) * t4671 + (-t4712 * t5420 + (-t4711 * t5353 - t5399) * t4683) * t4686 - t5252;
t3899 = (t4108 * t4129 + t4109 * t4174 + t4168 * t4180) * t5816;
t5777 = 0.2e1 * t3899;
t4223 = t4376 * t4683 + t4719 * t5417;
t4452 = t4483 * t4713;
t4355 = -t4601 * t5276 + t4452;
t5398 = t4498 * t4719;
t4110 = (t4375 * t4638 - t4632 * t5398) * t4671 + (t4223 * t4638 + t4355 * t4632) * t4686 - t4714 * t5328;
t4111 = (-t4375 * t4632 - t4638 * t5398) * t4671 + (-t4223 * t4632 + t4355 * t4638) * t4686 + t4714 * t5334;
t4181 = (-t4464 * t4713 + t5251) * t4671 + (-t4714 * t5418 + (-t4713 * t5349 - t5397) * t4683) * t4686 - t5251;
t3900 = (t4110 * t4130 + t4111 * t4175 + t4169 * t4181) * t5817;
t5776 = 0.2e1 * t3900;
t4224 = t4378 * t4683 + t4721 * t5415;
t4453 = t4483 * t4715;
t4356 = -t4602 * t5275 + t4453;
t5396 = t4498 * t4721;
t4112 = (t4377 * t4639 - t4633 * t5396) * t4671 + (t4224 * t4639 + t4356 * t4633) * t4686 - t4716 * t5327;
t4113 = (-t4377 * t4633 - t4639 * t5396) * t4671 + (-t4224 * t4633 + t4356 * t4639) * t4686 + t4716 * t5333;
t4182 = (-t4465 * t4715 + t5250) * t4671 + (-t4716 * t5416 + (-t4715 * t5345 - t5395) * t4683) * t4686 - t5250;
t3901 = (t4112 * t4131 + t4113 * t4176 + t4170 * t4182) * t5818;
t5775 = 0.2e1 * t3901;
t5664 = 0.2e1 * t4498;
t4611 = rSges(3,1) * t5654 - Icges(3,4);
t4610 = 0.2e1 * t4611;
t5774 = 0.4e1 * t4668;
t5175 = 0.2e1 * t4684;
t5660 = -0.2e1 * t4671;
t5773 = t5660 + 0.1e1;
t5639 = m(3) * t4537;
t4482 = t5745 * t4724;
t4998 = t4554 * t5325;
t4371 = t4482 + t4998;
t4997 = t4934 * t5324;
t5383 = t4553 * t4723;
t4403 = -0.2e1 * t4997 + t5383;
t4209 = -t4403 * t4663 - t4724 * t5392 - t4371;
t5771 = t4209 * t4665;
t4614 = pkin(1) * t5621;
t4491 = t5206 * t4681 + t4614;
t5001 = t4681 * t4617;
t4428 = -t5001 + t4491;
t5770 = t4428 * t4684;
t4689 = qJ(3,1) + rSges(3,3);
t5626 = m(3) * t4689;
t4571 = rSges(3,2) * t5626 - Icges(3,6);
t5199 = pkin(1) * t5626;
t4446 = -t4571 * t4681 + t5199;
t4574 = rSges(3,1) * t5626 - Icges(3,5);
t5371 = t4574 * t4684;
t4777 = t4446 + t5371;
t5767 = t4683 * t4777;
t4688 = qJ(3,2) + rSges(3,3);
t5627 = m(3) * t4688;
t4570 = rSges(3,2) * t5627 - Icges(3,6);
t5200 = pkin(1) * t5627;
t4445 = -t4570 * t4681 + t5200;
t4573 = rSges(3,1) * t5627 - Icges(3,5);
t5372 = t4573 * t4684;
t4778 = t4445 + t5372;
t5766 = t4683 * t4778;
t4687 = qJ(3,3) + rSges(3,3);
t5628 = m(3) * t4687;
t4569 = rSges(3,2) * t5628 - Icges(3,6);
t5201 = pkin(1) * t5628;
t4444 = -t4569 * t4681 + t5201;
t4572 = rSges(3,1) * t5628 - Icges(3,5);
t5373 = t4572 * t4684;
t4779 = t4444 + t5373;
t5765 = t4683 * t4779;
t4680 = qJ(3,4) + rSges(3,3);
t5630 = m(3) * t4680;
t4559 = rSges(3,2) * t5630 - Icges(3,6);
t4443 = pkin(1) * t5630 - t4559 * t4681;
t4562 = rSges(3,1) * t5630 - Icges(3,5);
t5377 = t4562 * t4684;
t4780 = t4443 + t5377;
t5764 = t4683 * t4780;
t4679 = qJ(3,5) + rSges(3,3);
t5631 = m(3) * t4679;
t4558 = rSges(3,2) * t5631 - Icges(3,6);
t4442 = pkin(1) * t5631 - t4558 * t4681;
t4561 = rSges(3,1) * t5631 - Icges(3,5);
t5378 = t4561 * t4684;
t4781 = t4442 + t5378;
t5763 = t4683 * t4781;
t4678 = qJ(3,6) + rSges(3,3);
t5632 = m(3) * t4678;
t4557 = rSges(3,2) * t5632 - Icges(3,6);
t4441 = pkin(1) * t5632 - t4557 * t4681;
t4560 = rSges(3,1) * t5632 - Icges(3,5);
t5379 = t4560 * t4684;
t4782 = t4441 + t5379;
t5762 = t4683 * t4782;
t5093 = t3875 * t5286;
t3812 = t4542 * t5093;
t3839 = pkin(2) * t5093;
t5145 = t3782 * t5623;
t3545 = (-t3782 * t5621 + t3839) * t4684 + t3812 + t5145;
t5121 = t4683 * t5621;
t4988 = -0.2e1 * t5121;
t4935 = pkin(2) * t4988;
t4876 = t4693 * t4935;
t3626 = (t3782 * t4876 + t3875 * t4546) * t4668;
t3627 = (-t3782 * t4546 + t3875 * t4876) * t4668;
t4060 = t4728 + (t4264 * t4665 - t4277 * t4662) * t4724 + (-t4264 * t4662 - t4277 * t4665) * t5303;
t5310 = t4662 * t4664;
t4090 = t4726 + (t4277 * t4661 + t4382 * t5310) * t4723 - t5837;
t5304 = t4664 * t4665;
t4096 = t4727 + (-t4264 * t4661 + t4382 * t5304) * t4723 + t5822;
t3728 = (t4060 * t4067 + t4066 * t4096 - t4090 * t5067) * t5813;
t3734 = (t4060 * t4102 + t4090 * t4177 + t4096 * t4103) * t5813;
t3833 = t3875 * t4936;
t4274 = t4699 * t5716 + t4447;
t4849 = -t4694 * t4842 + t4700 * t5736;
t4114 = t4634 * t4274 - t4628 * t4849;
t4117 = t4628 * t4274 + t4634 * t4849;
t3848 = (t4060 * t4117 - t4090 * t4195 + t4096 * t4114) * t4582;
t5491 = t4195 * t4582;
t5512 = t4117 * t4582;
t5515 = t4114 * t4582;
t3923 = t4126 * t5512 - t4165 * t5491 + t4171 * t5515;
t3917 = t3923 * t5621;
t4754 = pkin(1) ^ 2;
t4991 = pkin(1) * t5821 + t4752 + t4754;
t4808 = 0.2e1 * t4542 * t5622 - 0.2e1 * t4617 + t4991 + t5388;
t4737 = qJ(3,6) ^ 2;
t5219 = qJ(3,6) * t5203 - t4737;
t4230 = t4808 + t5219;
t5221 = t4684 * t4936 + t5388;
t5376 = (pkin(2) + t4594) * (-pkin(2) + t4594);
t4317 = t5221 + t5376;
t4670 = t4686 * t4671;
t3773 = qJ(3,6) * t3782;
t5140 = t3875 * t5623;
t3842 = t4699 * t5140;
t3647 = t3842 + t3773;
t5576 = t3875 * t4699;
t4910 = qJ(3,6) * t5576 - t5145;
t5366 = t4594 * t4693;
t5094 = t3875 * t5366;
t5673 = 0.2e1 * qJ(3,6);
t4814 = ((t3782 * t4618 + t3647) * t4988 + pkin(2) * t5094) * t4684 + (t4910 * t5203 + t5145 * t5673) * t4683 + t4542 * t5094;
t3911 = t3923 * t4542;
t5596 = t3782 * t4683;
t4833 = t5376 * t5596 - t3911;
t4987 = -0.2e1 * t5119;
t5735 = 0.2e1 * qJ(3,6) * t3842 + 0.2e1 * t3647 * t4618;
t4855 = (t4618 * t5576 + t4910) * t4987 + t5735 + t5787 * t3782;
t4913 = t4483 * t3782;
t5039 = t4483 * t5287;
t4933 = t3782 * t5039;
t3920 = t3923 * pkin(2);
t5577 = t3875 * t4693;
t4971 = (t5001 * t5577 + t3920) * t4683;
t5164 = 0.2e1 * t5408;
t5176 = 0.2e1 * t4682;
t5624 = pkin(2) * t4542;
t5204 = -0.2e1 * t5624;
t5212 = t4737 - t4753;
t4538 = t5621 + t5625;
t5139 = pkin(2) * t5577;
t3824 = t4538 * t5139;
t5228 = t3824 + t3911;
t5274 = t4685 * t4752;
t5296 = t4670 * t4699;
t5364 = t4594 * t4699;
t5431 = t4428 * t4683;
t5556 = t3923 * t4693;
t5578 = t3875 * t4672;
t5389 = t4538 * t4683;
t5602 = (t3782 * t5389 - t3923 * t4681) * t4693;
t4897 = t5139 * t5621;
t4943 = t4681 * t5121;
t4914 = -0.2e1 * t4943;
t5095 = t4428 * t5577;
t5387 = t4546 * t4683;
t5112 = t3782 * t5387;
t5708 = (-0.2e1 * t5095 + pkin(2) * (t3782 * t4914 + t3923)) * t4684 + (-0.4e1 * t4897 - t5112) * t4668 + 0.2e1 * t3824;
t3452 = (((t3782 * t5212 + t4855) * t4670 + ((-t5212 - t5787) * t3875 * t5283 + t4814) * t4671 + (t3627 + (t4971 + t3782 * t5204 + (-t4491 * t5286 + (pkin(6) * qJ(3,6) + t5274) * t4699 * t5176) * t3875) * t4684 + t5228 * t4683 - t3782 * (t4737 + t4991) - t5735) * t4686 - t4348 * t3875 * t4594) * t3728 + (-(t3782 * t4594 * t5664 + t4317 * t5576) * t5296 + ((-t4833 + t5708) * t4699 + (t3782 * t4447 + t5164 * t5578) * t4594) * t4671 + (-t4230 * t5578 - 0.2e1 * t3545 * t5364 + t3626 + ((-t3782 * t5431 + t3917) * t4693 + t3833) * t4684 + pkin(2) * (-pkin(2) * t3875 + t5602)) * t4686 - (t4913 * t4693 + (-t3782 * t5364 + t3875 * t4498 - t5556) * t4683) * t4594) * t3734 + (t4933 + (t4671 * t5426 - t4796) * t3875) * t3848) * t5813;
t5213 = t4617 + t4753;
t4472 = -t5219 + t5213;
t4756 = t4683 * ((t4681 * (pkin(2) + pkin(6)) * (pkin(2) - pkin(6)) - t4614) * t4684 + pkin(2) * t4538);
t4757 = -t5175 * t5624 - t4991;
t4776 = t5773 * t4498;
t4950 = t4753 - t4617;
t4961 = t4317 * t4671 + t4230;
t4965 = -0.2e1 * t5026;
t4999 = t4668 * t5387;
t5000 = t4682 * t5274;
t5270 = t4686 * t4699;
t5273 = t4686 * t4693;
t5427 = t4483 * t4686;
t3455 = ((((t3911 + t5708) * t4686 - 0.2e1 * (t3839 * t4684 + t3812) * t4594) * t4699 + t3626 + (t3917 * t4693 + t3833) * t4684 + pkin(2) * t5602) * t3734 + (t4855 * t4671 + t4814 * t4686 + t3627 + t4684 * t4971 + (pkin(1) * t3923 + t3917 * t4681) * t4683 - (t3842 + 0.2e1 * t3773) * t4618) * t3728 + ((t4671 * t5212 - t4737 + t4757) * t3728 + (t4483 * t5273 + t4699 * t4776) * t3734 * t4594 + (((t5219 + t4950) * t5270 - t4693 * t5770) * t3734 + t4483 * t3848) * t4683) * t3782 + ((-(t4594 * t4965 + t4961) * t4672 - t4472) * t3734 + (t3728 * t4756 + t3848 * t4498) * t4693 + (((-t4999 + (-t4617 + (pkin(2) - qJ(3,6)) * (pkin(2) + qJ(3,6))) * t4683) * t4686 + (qJ(3,6) * t5621 + t5000) * t4684 - qJ(3,6) * t5623) * t3728 + t3848 * t5427) * t4699) * t3875) * t4582;
t3809 = t3875 * t4447;
t4870 = (t4670 - t4686) * t5664;
t4877 = t4683 * t4936;
t4888 = t3920 - t5095;
t4919 = -t5221 + t4950;
t4962 = t5773 * t4683;
t4989 = t4683 * t5204;
t5040 = t4483 * (t4686 + 0.1e1) * (t4686 - 0.1e1);
t5113 = t3782 * t5408;
t4301 = t5770 + (0.2e1 * t4668 * t5621 - t4538) * pkin(2);
t5114 = t3782 * t4301 * t4693;
t5261 = t4693 * t4699;
t5430 = (-t4617 + t4991) * t4683;
t5445 = t4317 * t4670;
t5468 = t5810 * t4699;
t5557 = t3923 * t4683;
t5608 = (0.2e1 * t4897 + t5112) * t4668;
t3464 = -((t4594 * t4870 + t4683 * t4961) * t5578 + (-t3782 * t5445 + ((t4897 * t5774 + (-t3920 + 0.2e1 * t5095) * t4684 - 0.2e1 * t3824 - t3911) * t4683 + t3782 * t4317) * t4686 + ((t3809 - t5113) * t5660 - t5113 + 0.2e1 * t3809) * t4594) * t4699 - t4671 * t5114 - t4933 * t5366 + (-(0.2e1 * t5140 + t5556) * t5119 + t5556 * t5623 + (-t5388 + t4472) * t3875) * t4683 + t5114) * t4582 * t3734 * t5468 + (((t5445 + (t4919 + t5219) * t4686) * t5578 + ((t5608 + (t3782 * t4877 - t4888) * t4684 - t3824 + t4833) * t4671 - t5608 + (t3782 * t4989 + t4888) * t4684 - t3782 * t5430 + t5228) * t4699 + (t3545 * t5270 - (t4913 - t5557) * t4693 + (t4962 * t5578 + t5296 * t5672) * t4498) * t4594) * t3728 + (-t3782 * t4699 * t5040 + (t3782 * t5366 + (t4498 * t5261 + t4672 * t5427) * t3875) * t4683) * t3848) * t5813;
t3779 = t3782 ^ 2;
t4499 = (t4747 - (pkin(1) + t4678) * (-pkin(1) + t4678)) * m(3);
t4748 = rSges(2,2) ^ 2;
t5614 = Icges(2,1) + Icges(3,2);
t5746 = t5289 * t4610 - t4503;
t4759 = (rSges(1,1) ^ 2 + rSges(1,2) ^ 2) * m(1) + (rSges(2,3) ^ 2 + t4748) * m(2) + Icges(1,3) + t5614 + t5746;
t4586 = -0.2e1 * t4681 * t5241;
t4750 = rSges(2,1) ^ 2;
t4834 = Icges(2,2) + Icges(3,3) + t4586 + (-t4748 + t4750) * m(2) - t5614;
t4773 = t4503 * (t4671 + 0.1e1) + t4834;
t4613 = m(2) * rSges(2,1) * rSges(2,2) - Icges(2,4);
t5343 = t4611 * t4668;
t5161 = -0.2e1 * t5343;
t4775 = -t4613 + (t5161 + t5786) * t4686;
t5613 = Icges(3,1) - Icges(3,3);
t4869 = m(3) * (rSges(3,1) + t4678) * (-rSges(3,1) + t4678) + t5613;
t5159 = 0.2e1 * t5287;
t4963 = t4681 * t5159;
t5655 = m(3) * rSges(3,1);
t5242 = pkin(1) * t5655;
t5220 = -t4610 * t4681 + 0.2e1 * t5242;
t5342 = t4611 * t4681;
t4992 = t5342 * t5660 + t5220;
t4050 = ((t4557 * t5159 + t4992) * t4684 + t4869 * t4671 + t4560 * t4963 + t4499 + t4773) * t4672 + 0.2e1 * (t4775 + t5762) * t5261 + (t4678 ^ 2 + t4749) * m(3) + t4759;
t4323 = -t4869 + t5746;
t4420 = -t4557 * t4684 - t4560 * t4681;
t5659 = 0.2e1 * t4671;
t4797 = 0.2e1 * t5343 - t5786;
t5656 = m(2) * rSges(2,3);
t5743 = rSges(2,1) * t5656 + t4797 * t4683 - Icges(2,5);
t5612 = rSges(2,2) * t5656 - Icges(2,6);
t5754 = t4420 + t5612;
t4079 = -t4782 * t5273 - t5743 * t4693 + (-t4323 * t5287 + t4420 * t5659 - t5754) * t4699;
t4984 = -t4610 * t4668 - Icges(3,4);
t4304 = -t5115 * t5655 + t4984 + t5429;
t4765 = (t5242 - t5342) * t5175 + t4503 + t4834;
t5629 = m(3) * t4683;
t4783 = (-t5616 / 0.2e1 - t5615 / 0.2e1) * t5629;
t4789 = 0.2e1 * t5639;
t5288 = t4683 * t4684;
t5023 = t4560 * t5288;
t4827 = -t4441 * t5596 + (t4613 - t5023) * t3782;
t4835 = t4526 * t5629;
t5157 = t3923 * t5632;
t4942 = t5157 / 0.2e1;
t4949 = t4671 * t5157;
t5437 = t4420 * t4693;
t5049 = t3875 * t5437;
t5096 = t4323 * t5577;
t5158 = t3923 * t5639;
t5171 = -0.2e1 * t5577;
t5595 = t3782 * t4686;
t4340 = t4526 * t5270 - t4537 * t4693;
t5646 = m(3) * t4340;
t5240 = -t3452 * t4050 + t3455 * t5646 - t3464 * t4079 - 0.4e1 * (-t4949 / 0.2e1 + (t3782 * t4797 + t3923 * t4783) * t4686 + t4942 + t4827) * t5578 + ((t5096 - t5158) * t3782 * t5659 + 0.4e1 * ((t4942 + t5049) * t4683 + (-t5379 / 0.4e1 - t4441 / 0.4e1) * t3782) * t5595 + (-t3923 * t4835 + (t4499 + t4765) * t3782) * t5171 - (t3782 * t5743 - t3923 * t4789) * t3782) * t4699 - 0.2e1 * (-t4323 * t3782 * t5286 / 0.2e1 + t4304 * t3875) * t5595 + (t4827 + t5157) * t5780 + (t5754 * t4693 + t5437 * t5660) * t3779;
t5089 = t3876 * t5285;
t3813 = t4542 * t5089;
t3840 = pkin(2) * t5089;
t5144 = t3783 * t5623;
t3546 = (-t3783 * t5621 + t3840) * t4684 + t3813 + t5144;
t4875 = t4695 * t4935;
t3628 = (t3783 * t4875 + t3876 * t4546) * t4668;
t3630 = (-t3783 * t4546 + t3876 * t4875) * t4668;
t4061 = t4728 + (t4279 * t4665 - t4662 * t5781) * t4724 + (-t4279 * t4662 - t4665 * t5781) * t5303;
t4091 = t4726 + (t4383 * t5310 + t4661 * t5781) * t4723 - t5836;
t4097 = t4727 + (-t4279 * t4661 + t4383 * t5304) * t4723 - t5835;
t3729 = (t4061 * t4069 + t4068 * t4097 - t4091 * t5065) * t5814;
t3735 = (t4061 * t4104 + t4091 * t4178 + t4097 * t4105) * t5814;
t3834 = t3876 * t4936;
t4275 = t4701 * t5717 + t4448;
t4848 = -t4696 * t4841 + t4702 * t5737;
t4115 = t4635 * t4275 - t4629 * t4848;
t4118 = t4629 * t4275 + t4635 * t4848;
t3849 = (t4061 * t4118 - t4091 * t4196 + t4097 * t4115) * t4583;
t5490 = t4196 * t4583;
t5511 = t4118 * t4583;
t5514 = t4115 * t4583;
t3924 = t4127 * t5511 - t4166 * t5490 + t4172 * t5514;
t3918 = t3924 * t5621;
t4738 = qJ(3,5) ^ 2;
t5218 = qJ(3,5) * t5203 - t4738;
t4231 = t4808 + t5218;
t5375 = (pkin(2) + t4595) * (-pkin(2) + t4595);
t4318 = t5221 + t5375;
t3774 = qJ(3,5) * t3783;
t5138 = t3876 * t5623;
t3843 = t4701 * t5138;
t3648 = t3843 + t3774;
t5573 = t3876 * t4701;
t4909 = qJ(3,5) * t5573 - t5144;
t5362 = t4595 * t4695;
t5090 = t3876 * t5362;
t5674 = 0.2e1 * qJ(3,5);
t4813 = ((t3783 * t4618 + t3648) * t4988 + pkin(2) * t5090) * t4684 + (t4909 * t5203 + t5144 * t5674) * t4683 + t4542 * t5090;
t3912 = t3924 * t4542;
t5594 = t3783 * t4683;
t4832 = t5375 * t5594 - t3912;
t5733 = 0.2e1 * qJ(3,5) * t3843 + 0.2e1 * t3648 * t4618;
t4854 = (t4618 * t5573 + t4909) * t4987 + t5733 + t5787 * t3783;
t4912 = t4483 * t3783;
t4932 = t3783 * t5039;
t3922 = pkin(2) * t3924;
t5574 = t3876 * t4695;
t4970 = (t5001 * t5574 + t3922) * t4683;
t5211 = t4738 - t4753;
t5137 = pkin(2) * t5574;
t3825 = t4538 * t5137;
t5227 = t3825 + t3912;
t5295 = t4670 * t4701;
t5360 = t4595 * t4701;
t5554 = t3924 * t4695;
t5575 = t3876 * t4673;
t5601 = (t3783 * t5389 - t3924 * t4681) * t4695;
t4896 = t5137 * t5621;
t5091 = t4428 * t5574;
t5109 = t3783 * t5387;
t5707 = (-0.2e1 * t5091 + pkin(2) * (t3783 * t4914 + t3924)) * t4684 + (-0.4e1 * t4896 - t5109) * t4668 + 0.2e1 * t3825;
t3453 = (((t3783 * t5211 + t4854) * t4670 + ((-t5211 - t5787) * t3876 * t5282 + t4813) * t4671 + (t3630 + (t4970 + t3783 * t5204 + (-t4491 * t5285 + (pkin(6) * qJ(3,5) + t5274) * t4701 * t5176) * t3876) * t4684 + t5227 * t4683 - t3783 * (t4738 + t4991) - t5733) * t4686 - t4349 * t3876 * t4595) * t3729 + (-(t3783 * t4595 * t5664 + t4318 * t5573) * t5295 + ((-t4832 + t5707) * t4701 + (t3783 * t4448 + t5164 * t5575) * t4595) * t4671 + (-t4231 * t5575 - 0.2e1 * t3546 * t5360 + t3628 + ((-t3783 * t5431 + t3918) * t4695 + t3834) * t4684 + pkin(2) * (-pkin(2) * t3876 + t5601)) * t4686 - (t4912 * t4695 + (-t3783 * t5360 + t3876 * t4498 - t5554) * t4683) * t4595) * t3735 + (t4932 + (t4671 * t5424 - t4795) * t3876) * t3849) * t5814;
t4473 = -t5218 + t5213;
t4960 = t4318 * t4671 + t4231;
t5269 = t4686 * t4701;
t5272 = t4686 * t4695;
t3456 = ((((t3912 + t5707) * t4686 - 0.2e1 * (t3840 * t4684 + t3813) * t4595) * t4701 + t3628 + (t3918 * t4695 + t3834) * t4684 + pkin(2) * t5601) * t3735 + (t4854 * t4671 + t4813 * t4686 + t3630 + t4684 * t4970 + (pkin(1) * t3924 + t3918 * t4681) * t4683 - (t3843 + 0.2e1 * t3774) * t4618) * t3729 + ((t4671 * t5211 - t4738 + t4757) * t3729 + (t4483 * t5272 + t4701 * t4776) * t3735 * t4595 + (((t5218 + t4950) * t5269 - t4695 * t5770) * t3735 + t4483 * t3849) * t4683) * t3783 + ((-(t4595 * t4965 + t4960) * t4673 - t4473) * t3735 + (t3729 * t4756 + t3849 * t4498) * t4695 + (((-t4999 + (-t4617 + (pkin(2) - qJ(3,5)) * (pkin(2) + qJ(3,5))) * t4683) * t4686 + (qJ(3,5) * t5621 + t5000) * t4684 - qJ(3,5) * t5623) * t3729 + t3849 * t5427) * t4701) * t3876) * t4583;
t3810 = t3876 * t4448;
t4887 = t3922 - t5091;
t5110 = t3783 * t5408;
t5111 = t3783 * t4301 * t4695;
t5260 = t4695 * t4701;
t5444 = t4318 * t4670;
t5466 = t5809 * t4701;
t5555 = t3924 * t4683;
t5607 = (0.2e1 * t4896 + t5109) * t4668;
t3465 = -((t4595 * t4870 + t4683 * t4960) * t5575 + (-t3783 * t5444 + ((t4896 * t5774 + (-t3922 + 0.2e1 * t5091) * t4684 - 0.2e1 * t3825 - t3912) * t4683 + t3783 * t4318) * t4686 + ((t3810 - t5110) * t5660 - t5110 + 0.2e1 * t3810) * t4595) * t4701 - t4671 * t5111 - t4932 * t5362 + (-(0.2e1 * t5138 + t5554) * t5119 + t5554 * t5623 + (-t5388 + t4473) * t3876) * t4683 + t5111) * t4583 * t3735 * t5466 + (((t5444 + (t4919 + t5218) * t4686) * t5575 + ((t5607 + (t3783 * t4877 - t4887) * t4684 - t3825 + t4832) * t4671 - t5607 + (t3783 * t4989 + t4887) * t4684 - t3783 * t5430 + t5227) * t4701 + (t3546 * t5269 - (t4912 - t5555) * t4695 + (t4962 * t5575 + t5295 * t5671) * t4498) * t4595) * t3729 + (-t3783 * t4701 * t5040 + (t3783 * t5362 + (t4498 * t5260 + t4673 * t5427) * t3876) * t4683) * t3849) * t5814;
t3780 = t3783 ^ 2;
t4500 = (t4747 - (pkin(1) + t4679) * (-pkin(1) + t4679)) * m(3);
t4868 = m(3) * (rSges(3,1) + t4679) * (-rSges(3,1) + t4679) + t5613;
t4051 = ((t4558 * t5159 + t4992) * t4684 + t4868 * t4671 + t4561 * t4963 + t4500 + t4773) * t4673 + 0.2e1 * (t4775 + t5763) * t5260 + (t4679 ^ 2 + t4749) * m(3) + t4759;
t4324 = -t4868 + t5746;
t4421 = -t4558 * t4684 - t4561 * t4681;
t5753 = t4421 + t5612;
t4080 = -t4781 * t5272 - t5743 * t4695 + (-t4324 * t5287 + t4421 * t5659 - t5753) * t4701;
t5022 = t4561 * t5288;
t4826 = -t4442 * t5594 + (t4613 - t5022) * t3783;
t5155 = t3924 * t5631;
t4941 = t5155 / 0.2e1;
t4948 = t4671 * t5155;
t5436 = t4421 * t4695;
t5048 = t3876 * t5436;
t5092 = t4324 * t5574;
t5156 = t3924 * t5639;
t5170 = -0.2e1 * t5574;
t5593 = t3783 * t4686;
t4341 = t4526 * t5269 - t4537 * t4695;
t5645 = m(3) * t4341;
t5239 = -t3453 * t4051 + t3456 * t5645 - t3465 * t4080 - 0.4e1 * (-t4948 / 0.2e1 + (t3783 * t4797 + t3924 * t4783) * t4686 + t4941 + t4826) * t5575 + ((t5092 - t5156) * t3783 * t5659 + 0.4e1 * ((t4941 + t5048) * t4683 + (-t5378 / 0.4e1 - t4442 / 0.4e1) * t3783) * t5593 + (-t3924 * t4835 + (t4500 + t4765) * t3783) * t5170 - (t3783 * t5743 - t3924 * t4789) * t3783) * t4701 - 0.2e1 * (-t4324 * t3783 * t5285 / 0.2e1 + t4304 * t3876) * t5593 + (t4826 + t5155) * t5779 + (t5753 * t4695 + t5436 * t5660) * t3780;
t5085 = t3877 * t5284;
t3814 = t4542 * t5085;
t3841 = pkin(2) * t5085;
t5143 = t3784 * t5623;
t3547 = (-t3784 * t5621 + t3841) * t4684 + t3814 + t5143;
t4874 = t4697 * t4935;
t3629 = (t3784 * t4874 + t3877 * t4546) * t4668;
t3631 = (-t3784 * t4546 + t3877 * t4874) * t4668;
t4062 = t4728 + (t4282 * t4665 - t4662 * t5782) * t4724 + (-t4282 * t4662 - t4665 * t5782) * t5303;
t4092 = t4726 + (t4384 * t5310 + t4661 * t5782) * t4723 - t5834;
t4098 = t4727 + (-t4282 * t4661 + t4384 * t5304) * t4723 - t5833;
t3730 = (t4062 * t4071 + t4070 * t4098 - t4092 * t5063) * t5815;
t3736 = (t4062 * t4106 + t4092 * t4179 + t4098 * t4107) * t5815;
t3835 = t3877 * t4936;
t4276 = t4703 * t5718 + t4449;
t4847 = -t4698 * t4840 + t4704 * t5738;
t4116 = t4636 * t4276 - t4630 * t4847;
t4119 = t4630 * t4276 + t4636 * t4847;
t3850 = (t4062 * t4119 - t4092 * t4197 + t4098 * t4116) * t4584;
t5489 = t4197 * t4584;
t5510 = t4119 * t4584;
t5513 = t4116 * t4584;
t3925 = t4128 * t5510 - t4167 * t5489 + t4173 * t5513;
t3919 = t3925 * t5621;
t4739 = qJ(3,4) ^ 2;
t5217 = qJ(3,4) * t5203 - t4739;
t4232 = t4808 + t5217;
t5374 = (pkin(2) + t4596) * (-pkin(2) + t4596);
t4319 = t5221 + t5374;
t3775 = qJ(3,4) * t3784;
t5136 = t3877 * t5623;
t3844 = t4703 * t5136;
t3649 = t3844 + t3775;
t5570 = t3877 * t4703;
t4908 = qJ(3,4) * t5570 - t5143;
t5358 = t4596 * t4697;
t5086 = t3877 * t5358;
t5675 = 0.2e1 * qJ(3,4);
t4812 = ((t3784 * t4618 + t3649) * t4988 + pkin(2) * t5086) * t4684 + (t4908 * t5203 + t5143 * t5675) * t4683 + t4542 * t5086;
t3913 = t3925 * t4542;
t5592 = t3784 * t4683;
t4831 = t5374 * t5592 - t3913;
t5734 = 0.2e1 * qJ(3,4) * t3844 + 0.2e1 * t3649 * t4618;
t4853 = (t4618 * t5570 + t4908) * t4987 + t5734 + t5787 * t3784;
t4911 = t4483 * t3784;
t4931 = t3784 * t5039;
t3921 = t3925 * pkin(2);
t5571 = t3877 * t4697;
t4969 = (t5001 * t5571 + t3921) * t4683;
t5210 = t4739 - t4753;
t5135 = pkin(2) * t5571;
t3826 = t4538 * t5135;
t5226 = t3826 + t3913;
t5294 = t4670 * t4703;
t5356 = t4596 * t4703;
t5552 = t3925 * t4697;
t5572 = t3877 * t4674;
t5600 = (t3784 * t5389 - t3925 * t4681) * t4697;
t4895 = t5135 * t5621;
t5087 = t4428 * t5571;
t5106 = t3784 * t5387;
t5706 = (-0.2e1 * t5087 + pkin(2) * (t3784 * t4914 + t3925)) * t4684 + (-0.4e1 * t4895 - t5106) * t4668 + 0.2e1 * t3826;
t3454 = (((t3784 * t5210 + t4853) * t4670 + ((-t5210 - t5787) * t3877 * t5281 + t4812) * t4671 + (t3631 + (t4969 + t3784 * t5204 + (-t4491 * t5284 + (pkin(6) * qJ(3,4) + t5274) * t4703 * t5176) * t3877) * t4684 + t5226 * t4683 - t3784 * (t4739 + t4991) - t5734) * t4686 - t4350 * t3877 * t4596) * t3730 + (-(t3784 * t4596 * t5664 + t4319 * t5570) * t5294 + ((-t4831 + t5706) * t4703 + (t3784 * t4449 + t5164 * t5572) * t4596) * t4671 + (-t4232 * t5572 - 0.2e1 * t3547 * t5356 + t3629 + ((-t3784 * t5431 + t3919) * t4697 + t3835) * t4684 + pkin(2) * (-pkin(2) * t3877 + t5600)) * t4686 - (t4911 * t4697 + (-t3784 * t5356 + t3877 * t4498 - t5552) * t4683) * t4596) * t3736 + (t4931 + (t4671 * t5422 - t4794) * t3877) * t3850) * t5815;
t4474 = -t5217 + t5213;
t4959 = t4319 * t4671 + t4232;
t5268 = t4686 * t4703;
t5271 = t4686 * t4697;
t3457 = ((((t3913 + t5706) * t4686 - 0.2e1 * (t3841 * t4684 + t3814) * t4596) * t4703 + t3629 + (t3919 * t4697 + t3835) * t4684 + pkin(2) * t5600) * t3736 + (t4853 * t4671 + t4812 * t4686 + t3631 + t4684 * t4969 + (pkin(1) * t3925 + t3919 * t4681) * t4683 - (t3844 + 0.2e1 * t3775) * t4618) * t3730 + ((t4671 * t5210 - t4739 + t4757) * t3730 + (t4483 * t5271 + t4703 * t4776) * t3736 * t4596 + (((t5217 + t4950) * t5268 - t4697 * t5770) * t3736 + t4483 * t3850) * t4683) * t3784 + ((-(t4596 * t4965 + t4959) * t4674 - t4474) * t3736 + (t3730 * t4756 + t3850 * t4498) * t4697 + (((-t4999 + (-t4617 + (pkin(2) - qJ(3,4)) * (pkin(2) + qJ(3,4))) * t4683) * t4686 + (qJ(3,4) * t5621 + t5000) * t4684 - qJ(3,4) * t5623) * t3730 + t3850 * t5427) * t4703) * t3877) * t4584;
t3811 = t3877 * t4449;
t4886 = t3921 - t5087;
t5107 = t3784 * t5408;
t5108 = t3784 * t4301 * t4697;
t5259 = t4697 * t4703;
t5443 = t4319 * t4670;
t5464 = t5808 * t4703;
t5553 = t3925 * t4683;
t5606 = (0.2e1 * t4895 + t5106) * t4668;
t3466 = -((t4596 * t4870 + t4683 * t4959) * t5572 + (-t3784 * t5443 + ((t4895 * t5774 + (-t3921 + 0.2e1 * t5087) * t4684 - 0.2e1 * t3826 - t3913) * t4683 + t3784 * t4319) * t4686 + ((t3811 - t5107) * t5660 - t5107 + 0.2e1 * t3811) * t4596) * t4703 - t4671 * t5108 - t4931 * t5358 + (-(0.2e1 * t5136 + t5552) * t5119 + t5552 * t5623 + (-t5388 + t4474) * t3877) * t4683 + t5108) * t4584 * t3736 * t5464 + (((t5443 + (t4919 + t5217) * t4686) * t5572 + ((t5606 + (t3784 * t4877 - t4886) * t4684 - t3826 + t4831) * t4671 - t5606 + (t3784 * t4989 + t4886) * t4684 - t3784 * t5430 + t5226) * t4703 + (t3547 * t5268 - (t4911 - t5553) * t4697 + (t4962 * t5572 + t5294 * t5670) * t4498) * t4596) * t3730 + (-t3784 * t4703 * t5040 + (t3784 * t5358 + (t4498 * t5259 + t4674 * t5427) * t3877) * t4683) * t3850) * t5815;
t3781 = t3784 ^ 2;
t4501 = (t4747 - (pkin(1) + t4680) * (-pkin(1) + t4680)) * m(3);
t4867 = m(3) * (rSges(3,1) + t4680) * (-rSges(3,1) + t4680) + t5613;
t4052 = ((t4559 * t5159 + t4992) * t4684 + t4867 * t4671 + t4562 * t4963 + t4501 + t4773) * t4674 + 0.2e1 * (t4775 + t5764) * t5259 + (t4680 ^ 2 + t4749) * m(3) + t4759;
t4325 = -t4867 + t5746;
t4422 = -t4559 * t4684 - t4562 * t4681;
t5752 = t4422 + t5612;
t4081 = -t4780 * t5271 - t5743 * t4697 + (-t4325 * t5287 + t4422 * t5659 - t5752) * t4703;
t5021 = t4562 * t5288;
t4825 = -t4443 * t5592 + (t4613 - t5021) * t3784;
t5153 = t3925 * t5630;
t4940 = t5153 / 0.2e1;
t4947 = t4671 * t5153;
t5435 = t4422 * t4697;
t5047 = t3877 * t5435;
t5088 = t4325 * t5571;
t5154 = t3925 * t5639;
t5169 = -0.2e1 * t5571;
t5591 = t3784 * t4686;
t4342 = t4526 * t5268 - t4537 * t4697;
t5644 = m(3) * t4342;
t5238 = -t3454 * t4052 + t3457 * t5644 - t3466 * t4081 - 0.4e1 * (-t4947 / 0.2e1 + (t3784 * t4797 + t3925 * t4783) * t4686 + t4940 + t4825) * t5572 + ((t5088 - t5154) * t3784 * t5659 + 0.4e1 * ((t4940 + t5047) * t4683 + (-t5377 / 0.4e1 - t4443 / 0.4e1) * t3784) * t5591 + (-t3925 * t4835 + (t4501 + t4765) * t3784) * t5169 - (t3784 * t5743 - t3925 * t4789) * t3784) * t4703 - 0.2e1 * (-t4325 * t3784 * t5284 / 0.2e1 + t4304 * t3877) * t5591 + (t4825 + t5153) * t5778 + (t5752 * t4697 + t5435 * t5660) * t3781;
t5082 = t3899 * t5280;
t3851 = t4542 * t5082;
t3887 = pkin(2) * t5082;
t5142 = t3803 * t5623;
t3551 = (-t3803 * t5621 + t3887) * t4684 + t3851 + t5142;
t4873 = t4711 * t4935;
t3650 = (t3803 * t4873 + t3899 * t4546) * t4668;
t3651 = (-t3803 * t4546 + t3899 * t4873) * t4668;
t4063 = t4728 + (t4285 * t4665 - t4662 * t5783) * t4724 + (-t4285 * t4662 - t4665 * t5783) * t5303;
t4093 = t4726 + (t4385 * t5310 + t4661 * t5783) * t4723 - t5832;
t4099 = t4727 + (-t4285 * t4661 + t4385 * t5304) * t4723 - t5831;
t3731 = (t4063 * t4074 + t4073 * t4099 - t4093 * t5061) * t5816;
t3737 = (t4063 * t4108 + t4093 * t4180 + t4099 * t4109) * t5816;
t4297 = t4717 * t5719 + t4451;
t4846 = -t4712 * t4839 + t4718 * t5739;
t4120 = t4637 * t4297 - t4631 * t4846;
t4123 = t4631 * t4297 + t4637 * t4846;
t3872 = (t4063 * t4123 - t4093 * t4198 + t4099 * t4120) * t4588;
t3882 = t3899 * t4936;
t5488 = t4198 * t4168;
t5506 = t4123 * t4129;
t5509 = t4120 * t4174;
t3935 = (-t5488 + t5506 + t5509) * t4588;
t3926 = t3935 * t5621;
t4741 = qJ(3,3) ^ 2;
t5216 = qJ(3,3) * t5203 - t4741;
t4233 = t4808 + t5216;
t5370 = (pkin(2) + t4600) * (-pkin(2) + t4600);
t4320 = t5221 + t5370;
t3797 = qJ(3,3) * t3803;
t5134 = t3899 * t5623;
t3890 = t4717 * t5134;
t3671 = t3890 + t3797;
t5564 = t3899 * t4717;
t4904 = qJ(3,3) * t5564 - t5142;
t5354 = t4600 * t4711;
t5083 = t3899 * t5354;
t5676 = 0.2e1 * qJ(3,3);
t4811 = ((t3803 * t4618 + t3671) * t4988 + pkin(2) * t5083) * t4684 + (t4904 * t5203 + t5142 * t5676) * t4683 + t4542 * t5083;
t3914 = t3935 * t4542;
t5590 = t3803 * t4683;
t4830 = t5370 * t5590 - t3914;
t5731 = 0.2e1 * qJ(3,3) * t3890 + 0.2e1 * t3671 * t4618;
t4852 = (t4618 * t5564 + t4904) * t4987 + t5731 + t5787 * t3803;
t4907 = t4483 * t3803;
t4930 = t3803 * t5039;
t3929 = pkin(2) * t3935;
t5565 = t3899 * t4711;
t4968 = (t5001 * t5565 + t3929) * t4683;
t5209 = t4741 - t4753;
t5133 = pkin(2) * t5565;
t3860 = t4538 * t5133;
t5225 = t3860 + t3914;
t5293 = t4670 * t4717;
t5352 = t4600 * t4717;
t5550 = t3935 * t4711;
t5566 = t3899 * t4675;
t5599 = (t3803 * t5389 - t3935 * t4681) * t4711;
t4894 = t5133 * t5621;
t5043 = t4428 * t5565;
t5103 = t3803 * t5387;
t5705 = (-t5043 - (t3803 * t4943 + (-t5506 / 0.2e1 - t5509 / 0.2e1 + t5488 / 0.2e1) * t4588) * pkin(2)) * t5175 + (-0.4e1 * t4894 - t5103) * t4668 + 0.2e1 * t3860;
t3458 = (((t3803 * t5209 + t4852) * t4670 + ((-t5209 - t5787) * t3899 * t5277 + t4811) * t4671 + (t3651 + (t4968 + t3803 * t5204 + (-t4491 * t5280 + (pkin(6) * qJ(3,3) + t5274) * t4717 * t5176) * t3899) * t4684 + t5225 * t4683 - t3803 * (t4741 + t4991) - t5731) * t4686 - t4354 * t3899 * t4600) * t3731 + (-(t3803 * t4600 * t5664 + t4320 * t5564) * t5293 + ((-t4830 + t5705) * t4717 + (t3803 * t4451 + t5164 * t5566) * t4600) * t4671 + (-t4233 * t5566 - 0.2e1 * t3551 * t5352 + t3650 + ((-t3803 * t5431 + t3926) * t4711 + t3882) * t4684 + pkin(2) * (-pkin(2) * t3899 + t5599)) * t4686 - (t4907 * t4711 + (-t3803 * t5352 + t3899 * t4498 - t5550) * t4683) * t4600) * t3737 + (t4930 + (t4671 * t5420 - t4793) * t3899) * t3872) * t5816;
t4476 = -t5216 + t5213;
t4958 = t4320 * t4671 + t4233;
t5264 = t4686 * t4717;
t5267 = t4686 * t4711;
t3461 = ((((t3914 + t5705) * t4686 - 0.2e1 * (t3887 * t4684 + t3851) * t4600) * t4717 + t3650 + (t3926 * t4711 + t3882) * t4684 + pkin(2) * t5599) * t3737 + (t4852 * t4671 + t4811 * t4686 + t3651 + t4684 * t4968 + (pkin(1) * t3935 + t3926 * t4681) * t4683 - (t3890 + 0.2e1 * t3797) * t4618) * t3731 + ((t4671 * t5209 - t4741 + t4757) * t3731 + (t4483 * t5267 + t4717 * t4776) * t3737 * t4600 + (((t5216 + t4950) * t5264 - t4711 * t5770) * t3737 + t4483 * t3872) * t4683) * t3803 + ((-(t4600 * t4965 + t4958) * t4675 - t4476) * t3737 + (t3731 * t4756 + t3872 * t4498) * t4711 + (((-t4999 + (-t4617 + (pkin(2) - qJ(3,3)) * (pkin(2) + qJ(3,3))) * t4683) * t4686 + (qJ(3,3) * t5621 + t5000) * t4684 - qJ(3,3) * t5623) * t3731 + t3872 * t5427) * t4717) * t3899) * t4588;
t3845 = t3899 * t4451;
t4885 = t3929 - t5043;
t5104 = t3803 * t5408;
t5105 = t3803 * t4301 * t4711;
t5255 = t4711 * t4717;
t5442 = t4320 * t4670;
t5462 = t5807 * t4717;
t5551 = t3935 * t4683;
t5605 = (0.2e1 * t4894 + t5103) * t4668;
t3467 = -((t4600 * t4870 + t4683 * t4958) * t5566 + (-t3803 * t5442 + ((t4894 * t5774 + (-t3929 + 0.2e1 * t5043) * t4684 - 0.2e1 * t3860 - t3914) * t4683 + t3803 * t4320) * t4686 + ((t3845 - t5104) * t5660 - t5104 + 0.2e1 * t3845) * t4600) * t4717 - t4671 * t5105 - t4930 * t5354 + (-(0.2e1 * t5134 + t5550) * t5119 + t5550 * t5623 + (-t5388 + t4476) * t3899) * t4683 + t5105) * t4588 * t3737 * t5462 + (((t5442 + (t4919 + t5216) * t4686) * t5566 + ((t5605 + (t3803 * t4877 - t4885) * t4684 - t3860 + t4830) * t4671 - t5605 + (t3803 * t4989 + t4885) * t4684 - t3803 * t5430 + t5225) * t4717 + (t3551 * t5264 - (t4907 - t5551) * t4711 + (t4962 * t5566 + t5293 * t5669) * t4498) * t4600) * t3731 + (-t3803 * t4717 * t5040 + (t3803 * t5354 + (t4498 * t5255 + t4675 * t5427) * t3899) * t4683) * t3872) * t5816;
t3800 = t3803 ^ 2;
t4504 = (t4747 - (pkin(1) + t4687) * (-pkin(1) + t4687)) * m(3);
t4866 = m(3) * (rSges(3,1) + t4687) * (-rSges(3,1) + t4687) + t5613;
t4053 = ((t4569 * t5159 + t4992) * t4684 + t4866 * t4671 + t4572 * t4963 + t4504 + t4773) * t4675 + 0.2e1 * (t4775 + t5765) * t5255 + (t4687 ^ 2 + t4749) * m(3) + t4759;
t4326 = -t4866 + t5746;
t4423 = -t4569 * t4684 - t4572 * t4681;
t5751 = t4423 + t5612;
t4085 = -t4779 * t5267 - t5743 * t4711 + (-t4326 * t5287 + t4423 * t5659 - t5751) * t4717;
t5020 = t4572 * t5288;
t4824 = -t4444 * t5590 + (t4613 - t5020) * t3803;
t5151 = t3935 * t5628;
t4939 = t5151 / 0.2e1;
t4946 = t4671 * t5151;
t5434 = t4423 * t4711;
t5046 = t3899 * t5434;
t5084 = t4326 * t5565;
t5152 = t3935 * t5639;
t5168 = -0.2e1 * t5565;
t5589 = t3803 * t4686;
t4343 = t4526 * t5264 - t4537 * t4711;
t5643 = m(3) * t4343;
t5234 = -t3458 * t4053 + t3461 * t5643 - t3467 * t4085 - 0.4e1 * (-t4946 / 0.2e1 + (t3803 * t4797 + t3935 * t4783) * t4686 + t4939 + t4824) * t5566 + ((t5084 - t5152) * t3803 * t5659 + 0.4e1 * ((t4939 + t5046) * t4683 + (-t5373 / 0.4e1 - t4444 / 0.4e1) * t3803) * t5589 + (-t3935 * t4835 + (t4504 + t4765) * t3803) * t5168 - (t3803 * t5743 - t3935 * t4789) * t3803) * t4717 - 0.2e1 * (-t4326 * t3803 * t5280 / 0.2e1 + t4304 * t3899) * t5589 + (t4824 + t5151) * t5777 + (t5751 * t4711 + t5434 * t5660) * t3800;
t5079 = t3900 * t5279;
t3852 = t4542 * t5079;
t3888 = pkin(2) * t5079;
t5120 = t3804 * t5623;
t3552 = (-t3804 * t5621 + t3888) * t4684 + t3852 + t5120;
t4872 = t4713 * t4935;
t3652 = (t3804 * t4872 + t3900 * t4546) * t4668;
t3653 = (-t3804 * t4546 + t3900 * t4872) * t4668;
t4064 = t4728 + (t4288 * t4665 - t4662 * t5784) * t4724 + (-t4288 * t4662 - t4665 * t5784) * t5303;
t4094 = t4726 + (t4386 * t5310 + t4661 * t5784) * t4723 - t5830;
t4100 = t4727 + (-t4288 * t4661 + t4386 * t5304) * t4723 - t5829;
t3732 = (t4064 * t4076 + t4075 * t4100 - t4094 * t5059) * t5817;
t3738 = (t4064 * t4110 + t4094 * t4181 + t4100 * t4111) * t5817;
t4298 = t4719 * t5720 + t4452;
t4845 = -t4714 * t4838 + t4720 * t5740;
t4121 = t4638 * t4298 - t4632 * t4845;
t4124 = t4632 * t4298 + t4638 * t4845;
t3873 = (t4064 * t4124 - t4094 * t4199 + t4100 * t4121) * t4589;
t3883 = t3900 * t4936;
t5486 = t4199 * t4169;
t5505 = t4124 * t4130;
t5508 = t4121 * t4175;
t3936 = (-t5486 + t5505 + t5508) * t4589;
t3927 = t3936 * t5621;
t4742 = qJ(3,2) ^ 2;
t5215 = qJ(3,2) * t5203 - t4742;
t4234 = t4808 + t5215;
t5369 = (pkin(2) + t4601) * (-pkin(2) + t4601);
t4321 = t5221 + t5369;
t3798 = qJ(3,2) * t3804;
t5132 = t3900 * t5623;
t3891 = t4719 * t5132;
t3672 = t3891 + t3798;
t5561 = t3900 * t4719;
t4903 = qJ(3,2) * t5561 - t5120;
t5350 = t4601 * t4713;
t5080 = t3900 * t5350;
t5677 = 0.2e1 * qJ(3,2);
t4810 = ((t3804 * t4618 + t3672) * t4988 + pkin(2) * t5080) * t4684 + (t4903 * t5203 + t5120 * t5677) * t4683 + t4542 * t5080;
t3915 = t3936 * t4542;
t5588 = t3804 * t4683;
t4829 = t5369 * t5588 - t3915;
t5732 = 0.2e1 * qJ(3,2) * t3891 + 0.2e1 * t3672 * t4618;
t4851 = (t4618 * t5561 + t4903) * t4987 + t5732 + t5787 * t3804;
t4906 = t4483 * t3804;
t4929 = t3804 * t5039;
t3930 = pkin(2) * t3936;
t5562 = t3900 * t4713;
t4967 = (t5001 * t5562 + t3930) * t4683;
t5208 = t4742 - t4753;
t5131 = pkin(2) * t5562;
t3861 = t4538 * t5131;
t5224 = t3861 + t3915;
t5292 = t4670 * t4719;
t5348 = t4601 * t4719;
t5548 = t3936 * t4713;
t5563 = t3900 * t4676;
t5598 = (t3804 * t5389 - t3936 * t4681) * t4713;
t4893 = t5131 * t5621;
t5042 = t4428 * t5562;
t5100 = t3804 * t5387;
t5704 = (-t5042 - (t3804 * t4943 + (-t5505 / 0.2e1 - t5508 / 0.2e1 + t5486 / 0.2e1) * t4589) * pkin(2)) * t5175 + (-0.4e1 * t4893 - t5100) * t4668 + 0.2e1 * t3861;
t3459 = (((t3804 * t5208 + t4851) * t4670 + ((-t5208 - t5787) * t3900 * t5276 + t4810) * t4671 + (t3653 + (t4967 + t3804 * t5204 + (-t4491 * t5279 + (pkin(6) * qJ(3,2) + t5274) * t4719 * t5176) * t3900) * t4684 + t5224 * t4683 - t3804 * (t4742 + t4991) - t5732) * t4686 - t4355 * t3900 * t4601) * t3732 + (-(t3804 * t4601 * t5664 + t4321 * t5561) * t5292 + ((-t4829 + t5704) * t4719 + (t3804 * t4452 + t5164 * t5563) * t4601) * t4671 + (-t4234 * t5563 - 0.2e1 * t3552 * t5348 + t3652 + ((-t3804 * t5431 + t3927) * t4713 + t3883) * t4684 + pkin(2) * (-pkin(2) * t3900 + t5598)) * t4686 - (t4906 * t4713 + (-t3804 * t5348 + t3900 * t4498 - t5548) * t4683) * t4601) * t3738 + (t4929 + (t4671 * t5418 - t4792) * t3900) * t3873) * t5817;
t4477 = -t5215 + t5213;
t4957 = t4321 * t4671 + t4234;
t5263 = t4686 * t4719;
t5266 = t4686 * t4713;
t3462 = ((((t3915 + t5704) * t4686 - 0.2e1 * (t3888 * t4684 + t3852) * t4601) * t4719 + t3652 + (t3927 * t4713 + t3883) * t4684 + pkin(2) * t5598) * t3738 + (t4851 * t4671 + t4810 * t4686 + t3653 + t4684 * t4967 + (pkin(1) * t3936 + t3927 * t4681) * t4683 - (t3891 + 0.2e1 * t3798) * t4618) * t3732 + ((t4671 * t5208 - t4742 + t4757) * t3732 + (t4483 * t5266 + t4719 * t4776) * t3738 * t4601 + (((t5215 + t4950) * t5263 - t4713 * t5770) * t3738 + t4483 * t3873) * t4683) * t3804 + ((-(t4601 * t4965 + t4957) * t4676 - t4477) * t3738 + (t3732 * t4756 + t3873 * t4498) * t4713 + (((-t4999 + (-t4617 + (pkin(2) - qJ(3,2)) * (pkin(2) + qJ(3,2))) * t4683) * t4686 + (qJ(3,2) * t5621 + t5000) * t4684 - qJ(3,2) * t5623) * t3732 + t3873 * t5427) * t4719) * t3900) * t4589;
t3846 = t3900 * t4452;
t4884 = t3930 - t5042;
t5101 = t3804 * t5408;
t5102 = t3804 * t4301 * t4713;
t5254 = t4713 * t4719;
t5441 = t4321 * t4670;
t5460 = t5806 * t4719;
t5549 = t3936 * t4683;
t5604 = (0.2e1 * t4893 + t5100) * t4668;
t3468 = -((t4601 * t4870 + t4683 * t4957) * t5563 + (-t3804 * t5441 + ((t4893 * t5774 + (-t3930 + 0.2e1 * t5042) * t4684 - 0.2e1 * t3861 - t3915) * t4683 + t3804 * t4321) * t4686 + ((t3846 - t5101) * t5660 - t5101 + 0.2e1 * t3846) * t4601) * t4719 - t4671 * t5102 - t4929 * t5350 + (-(0.2e1 * t5132 + t5548) * t5119 + t5548 * t5623 + (-t5388 + t4477) * t3900) * t4683 + t5102) * t4589 * t3738 * t5460 + (((t5441 + (t4919 + t5215) * t4686) * t5563 + ((t5604 + (t3804 * t4877 - t4884) * t4684 - t3861 + t4829) * t4671 - t5604 + (t3804 * t4989 + t4884) * t4684 - t3804 * t5430 + t5224) * t4719 + (t3552 * t5263 - (t4906 - t5549) * t4713 + (t4962 * t5563 + t5292 * t5668) * t4498) * t4601) * t3732 + (-t3804 * t4719 * t5040 + (t3804 * t5350 + (t4498 * t5254 + t4676 * t5427) * t3900) * t4683) * t3873) * t5817;
t3801 = t3804 ^ 2;
t4505 = (t4747 - (pkin(1) + t4688) * (-pkin(1) + t4688)) * m(3);
t4865 = m(3) * (rSges(3,1) + t4688) * (-rSges(3,1) + t4688) + t5613;
t4054 = ((t4570 * t5159 + t4992) * t4684 + t4865 * t4671 + t4573 * t4963 + t4505 + t4773) * t4676 + 0.2e1 * (t4775 + t5766) * t5254 + (t4688 ^ 2 + t4749) * m(3) + t4759;
t4327 = -t4865 + t5746;
t4424 = -t4570 * t4684 - t4573 * t4681;
t5750 = t4424 + t5612;
t4086 = -t4778 * t5266 - t5743 * t4713 + (-t4327 * t5287 + t4424 * t5659 - t5750) * t4719;
t5019 = t4573 * t5288;
t4823 = -t4445 * t5588 + (t4613 - t5019) * t3804;
t5149 = t3936 * t5627;
t4938 = t5149 / 0.2e1;
t4945 = t4671 * t5149;
t5433 = t4424 * t4713;
t5045 = t3900 * t5433;
t5081 = t4327 * t5562;
t5150 = t3936 * t5639;
t5167 = -0.2e1 * t5562;
t5587 = t3804 * t4686;
t4344 = t4526 * t5263 - t4537 * t4713;
t5642 = m(3) * t4344;
t5233 = -t3459 * t4054 + t3462 * t5642 - t3468 * t4086 - 0.4e1 * (-t4945 / 0.2e1 + (t3804 * t4797 + t3936 * t4783) * t4686 + t4938 + t4823) * t5563 + ((t5081 - t5150) * t3804 * t5659 + 0.4e1 * ((t4938 + t5045) * t4683 + (-t5372 / 0.4e1 - t4445 / 0.4e1) * t3804) * t5587 + (-t3936 * t4835 + (t4505 + t4765) * t3804) * t5167 - (t3804 * t5743 - t3936 * t4789) * t3804) * t4719 - 0.2e1 * (-t4327 * t3804 * t5279 / 0.2e1 + t4304 * t3900) * t5587 + (t4823 + t5149) * t5776 + (t5750 * t4713 + t5433 * t5660) * t3801;
t5076 = t3901 * t5278;
t3853 = t4542 * t5076;
t3889 = pkin(2) * t5076;
t5141 = t3805 * t5623;
t3553 = (-t3805 * t5621 + t3889) * t4684 + t3853 + t5141;
t4871 = t4715 * t4935;
t3654 = (t3805 * t4871 + t3901 * t4546) * t4668;
t3655 = (-t3805 * t4546 + t3901 * t4871) * t4668;
t4065 = t4728 + (t4291 * t4665 - t4662 * t5785) * t4724 + (-t4291 * t4662 - t4665 * t5785) * t5303;
t4095 = t4726 + (t4387 * t5310 + t4661 * t5785) * t4723 - t5828;
t4101 = t4727 + (-t4291 * t4661 + t4387 * t5304) * t4723 - t5827;
t3733 = (t4065 * t4078 + t4077 * t4101 - t4095 * t5057) * t5818;
t3739 = (t4065 * t4112 + t4095 * t4182 + t4101 * t4113) * t5818;
t4299 = t4721 * t5721 + t4453;
t4844 = -t4716 * t4837 + t4722 * t5741;
t4122 = t4639 * t4299 - t4633 * t4844;
t4125 = t4633 * t4299 + t4639 * t4844;
t3874 = (t4065 * t4125 - t4095 * t4200 + t4101 * t4122) * t4590;
t3884 = t3901 * t4936;
t5484 = t4200 * t4170;
t5504 = t4125 * t4131;
t5507 = t4122 * t4176;
t3937 = (-t5484 + t5504 + t5507) * t4590;
t3928 = t3937 * t5621;
t4743 = qJ(3,1) ^ 2;
t5214 = qJ(3,1) * t5203 - t4743;
t4235 = t4808 + t5214;
t5368 = (pkin(2) + t4602) * (-pkin(2) + t4602);
t4322 = t5221 + t5368;
t3799 = qJ(3,1) * t3805;
t5130 = t3901 * t5623;
t3892 = t4721 * t5130;
t3673 = t3892 + t3799;
t5558 = t3901 * t4721;
t4902 = qJ(3,1) * t5558 - t5141;
t5346 = t4602 * t4715;
t5077 = t3901 * t5346;
t5678 = 0.2e1 * qJ(3,1);
t4809 = ((t3805 * t4618 + t3673) * t4988 + pkin(2) * t5077) * t4684 + (t4902 * t5203 + t5141 * t5678) * t4683 + t4542 * t5077;
t3916 = t3937 * t4542;
t5586 = t3805 * t4683;
t4828 = t5368 * t5586 - t3916;
t5730 = 0.2e1 * qJ(3,1) * t3892 + 0.2e1 * t3673 * t4618;
t4850 = (t4618 * t5558 + t4902) * t4987 + t5730 + t5787 * t3805;
t4905 = t4483 * t3805;
t4928 = t3805 * t5039;
t3931 = pkin(2) * t3937;
t5559 = t3901 * t4715;
t4966 = (t5001 * t5559 + t3931) * t4683;
t5207 = t4743 - t4753;
t5129 = pkin(2) * t5559;
t3862 = t4538 * t5129;
t5223 = t3862 + t3916;
t5291 = t4670 * t4721;
t5344 = t4602 * t4721;
t5546 = t3937 * t4715;
t5560 = t3901 * t4677;
t5597 = (t3805 * t5389 - t3937 * t4681) * t4715;
t4892 = t5129 * t5621;
t5041 = t4428 * t5559;
t5097 = t3805 * t5387;
t5703 = (-t5041 - (t3805 * t4943 + (-t5504 / 0.2e1 - t5507 / 0.2e1 + t5484 / 0.2e1) * t4590) * pkin(2)) * t5175 + (-0.4e1 * t4892 - t5097) * t4668 + 0.2e1 * t3862;
t3460 = (((t3805 * t5207 + t4850) * t4670 + ((-t5207 - t5787) * t3901 * t5275 + t4809) * t4671 + (t3655 + (t4966 + t3805 * t5204 + (-t4491 * t5278 + (pkin(6) * qJ(3,1) + t5274) * t4721 * t5176) * t3901) * t4684 + t5223 * t4683 - t3805 * (t4743 + t4991) - t5730) * t4686 - t4356 * t3901 * t4602) * t3733 + (-(t3805 * t4602 * t5664 + t4322 * t5558) * t5291 + ((-t4828 + t5703) * t4721 + (t3805 * t4453 + t5164 * t5560) * t4602) * t4671 + (-t4235 * t5560 - 0.2e1 * t3553 * t5344 + t3654 + ((-t3805 * t5431 + t3928) * t4715 + t3884) * t4684 + pkin(2) * (-pkin(2) * t3901 + t5597)) * t4686 - (t4905 * t4715 + (-t3805 * t5344 + t3901 * t4498 - t5546) * t4683) * t4602) * t3739 + (t4928 + (t4671 * t5416 - t4791) * t3901) * t3874) * t5818;
t4478 = -t5214 + t5213;
t4956 = t4322 * t4671 + t4235;
t5262 = t4686 * t4721;
t5265 = t4686 * t4715;
t3463 = ((((t3916 + t5703) * t4686 - 0.2e1 * (t3889 * t4684 + t3853) * t4602) * t4721 + t3654 + (t3928 * t4715 + t3884) * t4684 + pkin(2) * t5597) * t3739 + (t4850 * t4671 + t4809 * t4686 + t3655 + t4684 * t4966 + (pkin(1) * t3937 + t3928 * t4681) * t4683 - (t3892 + 0.2e1 * t3799) * t4618) * t3733 + ((t4671 * t5207 - t4743 + t4757) * t3733 + (t4483 * t5265 + t4721 * t4776) * t3739 * t4602 + (((t5214 + t4950) * t5262 - t4715 * t5770) * t3739 + t4483 * t3874) * t4683) * t3805 + ((-(t4602 * t4965 + t4956) * t4677 - t4478) * t3739 + (t3733 * t4756 + t3874 * t4498) * t4715 + (((-t4999 + (-t4617 + (pkin(2) - qJ(3,1)) * (pkin(2) + qJ(3,1))) * t4683) * t4686 + (qJ(3,1) * t5621 + t5000) * t4684 - qJ(3,1) * t5623) * t3733 + t3874 * t5427) * t4721) * t3901) * t4590;
t3847 = t3901 * t4453;
t4883 = t3931 - t5041;
t5098 = t3805 * t5408;
t5099 = t3805 * t4301 * t4715;
t5253 = t4715 * t4721;
t5440 = t4322 * t4670;
t5458 = t5805 * t4721;
t5547 = t3937 * t4683;
t5603 = (0.2e1 * t4892 + t5097) * t4668;
t3469 = -((t4602 * t4870 + t4683 * t4956) * t5560 + (-t3805 * t5440 + ((t4892 * t5774 + (-t3931 + 0.2e1 * t5041) * t4684 - 0.2e1 * t3862 - t3916) * t4683 + t3805 * t4322) * t4686 + ((t3847 - t5098) * t5660 - t5098 + 0.2e1 * t3847) * t4602) * t4721 - t4671 * t5099 - t4928 * t5346 + (-(0.2e1 * t5130 + t5546) * t5119 + t5546 * t5623 + (-t5388 + t4478) * t3901) * t4683 + t5099) * t4590 * t3739 * t5458 + (((t5440 + (t4919 + t5214) * t4686) * t5560 + ((t5603 + (t3805 * t4877 - t4883) * t4684 - t3862 + t4828) * t4671 - t5603 + (t3805 * t4989 + t4883) * t4684 - t3805 * t5430 + t5223) * t4721 + (t3553 * t5262 - (t4905 - t5547) * t4715 + (t4962 * t5560 + t5291 * t5667) * t4498) * t4602) * t3733 + (-t3805 * t4721 * t5040 + (t3805 * t5346 + (t4498 * t5253 + t4677 * t5427) * t3901) * t4683) * t3874) * t5818;
t3802 = t3805 ^ 2;
t4506 = (t4747 - (pkin(1) + t4689) * (-pkin(1) + t4689)) * m(3);
t4864 = m(3) * (rSges(3,1) + t4689) * (-rSges(3,1) + t4689) + t5613;
t4055 = ((t4571 * t5159 + t4992) * t4684 + t4864 * t4671 + t4574 * t4963 + t4506 + t4773) * t4677 + 0.2e1 * (t4775 + t5767) * t5253 + (t4689 ^ 2 + t4749) * m(3) + t4759;
t4328 = -t4864 + t5746;
t4425 = -t4571 * t4684 - t4574 * t4681;
t5749 = t4425 + t5612;
t4087 = -t4777 * t5265 - t5743 * t4715 + (-t4328 * t5287 + t4425 * t5659 - t5749) * t4721;
t5018 = t4574 * t5288;
t4822 = -t4446 * t5586 + (t4613 - t5018) * t3805;
t5147 = t3937 * t5626;
t4937 = t5147 / 0.2e1;
t4944 = t4671 * t5147;
t5432 = t4425 * t4715;
t5044 = t3901 * t5432;
t5078 = t4328 * t5559;
t5148 = t3937 * t5639;
t5166 = -0.2e1 * t5559;
t5585 = t3805 * t4686;
t4345 = t4526 * t5262 - t4537 * t4715;
t5641 = m(3) * t4345;
t5232 = -t3460 * t4055 + t3463 * t5641 - t3469 * t4087 - 0.4e1 * (-t4944 / 0.2e1 + (t3805 * t4797 + t3937 * t4783) * t4686 + t4937 + t4822) * t5560 + ((t5078 - t5148) * t3805 * t5659 + 0.4e1 * ((t4937 + t5044) * t4683 + (-t5371 / 0.4e1 - t4446 / 0.4e1) * t3805) * t5585 + (-t3937 * t4835 + (t4506 + t4765) * t3805) * t5166 - (t3805 * t5743 - t3937 * t4789) * t3805) * t4721 - 0.2e1 * (-t4328 * t3805 * t5278 / 0.2e1 + t4304 * t3901) * t5585 + (t4822 + t5147) * t5775 + (t5749 * t4715 + t5432 * t5660) * t3802;
t3869 = t3875 ^ 2;
t5747 = t5220 * t4684 + t4503;
t4790 = (t4748 + t4750) * m(2) + Icges(3,1) + Icges(2,3) + t4586 + t5747;
t4990 = rSges(3,3) ^ 2 + t4747 + t4754;
t4158 = t4323 * t4671 + t4420 * t5159 + (rSges(3,3) * t5673 + t4737 + t4990) * m(3) + t4790;
t4785 = t4834 + t5747;
t4881 = (t5790 + (pkin(1) * t5616 + t4915) * m(3) - t4984) * t4686 + t4613;
t5393 = t4526 * t4683;
t5146 = m(3) * t5393;
t5160 = -0.2e1 * t5287;
t5202 = pkin(1) * t5629;
t5290 = t4681 * t4683;
t5583 = t3869 * t4678;
t5584 = t3869 * t4672;
t5695 = (-pkin(1) * t5639 + t4611 + t5161 - t5790) * t4686 - t4613;
t5761 = t3452 * t4079 - t3455 * t5146 + t3464 * t4158 - 0.2e1 * (t4881 - t5762) * t5584 - ((-t5096 - 0.2e1 * t5158) * t4671 + (t5049 - t5157) * t5160 + (t4499 + t4785) * t5577) * t5576 - t3923 * t5171 * t5820 - t5202 * t5583 - (-t4557 * t5290 + t5023 + t5695) * t3869 + (t5557 * t5819 + t4949 - t5157) * t5672;
t3870 = t3876 ^ 2;
t4159 = t4324 * t4671 + t4421 * t5159 + (rSges(3,3) * t5674 + t4738 + t4990) * m(3) + t4790;
t5581 = t3870 * t4679;
t5582 = t3870 * t4673;
t5760 = t3453 * t4080 - t3456 * t5146 + t3465 * t4159 - 0.2e1 * (t4881 - t5763) * t5582 - ((-t5092 - 0.2e1 * t5156) * t4671 + (t5048 - t5155) * t5160 + (t4500 + t4785) * t5574) * t5573 - t3924 * t5170 * t5820 - t5202 * t5581 - (-t4558 * t5290 + t5022 + t5695) * t3870 + (t5555 * t5819 + t4948 - t5155) * t5671;
t3871 = t3877 ^ 2;
t4160 = t4325 * t4671 + t4422 * t5159 + (rSges(3,3) * t5675 + t4739 + t4990) * m(3) + t4790;
t5579 = t3871 * t4680;
t5580 = t3871 * t4674;
t5759 = t3454 * t4081 - t3457 * t5146 + t3466 * t4160 - 0.2e1 * (t4881 - t5764) * t5580 - ((-t5088 - 0.2e1 * t5154) * t4671 + (t5047 - t5153) * t5160 + (t4501 + t4785) * t5571) * t5570 - t3925 * t5169 * t5820 - t5202 * t5579 - (-t4559 * t5290 + t5021 + t5695) * t3871 + (t5553 * t5819 + t4947 - t5153) * t5670;
t3896 = t3899 ^ 2;
t4161 = t4326 * t4671 + t4423 * t5159 + (rSges(3,3) * t5676 + t4741 + t4990) * m(3) + t4790;
t5569 = t3896 * t4675;
t5758 = t3458 * t4085 - t3461 * t5146 + t3467 * t4161 - 0.2e1 * (t4881 - t5765) * t5569 - ((-t5084 - 0.2e1 * t5152) * t4671 + (t5046 - t5151) * t5160 + (t4504 + t4785) * t5565) * t5564 - t3935 * t5168 * t5820 - (-t4569 * t5290 + t4683 * t5201 + t5020 + t5695) * t3896 + (t5551 * t5819 + t4946 - t5151) * t5669;
t3897 = t3900 ^ 2;
t4162 = t4327 * t4671 + t4424 * t5159 + (rSges(3,3) * t5677 + t4742 + t4990) * m(3) + t4790;
t5568 = t3897 * t4676;
t5757 = t3459 * t4086 - t3462 * t5146 + t3468 * t4162 - 0.2e1 * (t4881 - t5766) * t5568 - ((-t5081 - 0.2e1 * t5150) * t4671 + (t5045 - t5149) * t5160 + (t4505 + t4785) * t5562) * t5561 - t3936 * t5167 * t5820 - (-t4570 * t5290 + t4683 * t5200 + t5019 + t5695) * t3897 + (t5549 * t5819 + t4945 - t5149) * t5668;
t3898 = t3901 ^ 2;
t4163 = t4328 * t4671 + t4425 * t5159 + (rSges(3,3) * t5678 + t4743 + t4990) * m(3) + t4790;
t5567 = t3898 * t4677;
t5756 = t3460 * t4087 - t3463 * t5146 + t3469 * t4163 - 0.2e1 * (t4881 - t5767) * t5567 - ((-t5078 - 0.2e1 * t5148) * t4671 + (t5044 - t5147) * t5160 + (t4506 + t4785) * t5559) * t5558 - t3937 * t5166 * t5820 - (-t4571 * t5290 + t4683 * t5199 + t5018 + t5695) * t3898 + (t5547 * t5819 + t4944 - t5147) * t5667;
t5302 = t4664 * t4724;
t5025 = t5715 * t5302;
t4920 = t4661 * t5025;
t5243 = t4725 * t4934;
t4994 = t4661 * t5243;
t5248 = t4723 * t4620;
t5755 = (-t4920 - (-0.4e1 * t5744 + 0.2e1 * t5248) * t4934) * t4619 - 0.2e1 * t4994 + t5803 + t5788;
t5319 = t4661 * t4665;
t4152 = -(t4490 * t5319 + t4662 * t5723) * t4723 + t5828;
t4150 = -(t4489 * t5319 + t4662 * t5724) * t4723 + t5830;
t4148 = -(t4488 * t5319 + t4662 * t5725) * t4723 + t5832;
t4146 = -(t4487 * t5319 + t4662 * t5726) * t4723 + t5834;
t4144 = -(t4486 * t5319 + t4662 * t5727) * t4723 + t5836;
t5321 = t4661 * t4662;
t4141 = -(t4484 * t4665 + t4485 * t5321) * t4723 + t5822;
t4336 = t4371 * t4661;
t5382 = t4554 * t4660;
t4993 = t4725 * t5382;
t5729 = 0.2e1 * t4993 + t4336;
t4347 = t4403 * t4661;
t5244 = t4725 * t4553;
t5722 = 0.2e1 * t5244 + t4347;
t3451 = (t3460 * t4345 + t3469 * t5393 - t3463) * m(3);
t5390 = t4537 * t4683;
t5663 = -0.2e1 * t4537;
t3487 = (t3805 * t5558 * t5663 + (-t3802 + t5567) * t4689) * t4671 + (t5390 * t5567 + (-t3805 * t5390 + (-t4526 * t4715 + t4689 * t5275) * t5775) * t3805) * t4686 - t4689 * t5567 + t3898 * t5253 * t5393 + (t3898 + t3802) * t4689;
t5714 = -m(3) * t3487 + t3451;
t3450 = (t3459 * t4344 + t3468 * t5393 - t3462) * m(3);
t3486 = (t3804 * t5561 * t5663 + (-t3801 + t5568) * t4688) * t4671 + (t5390 * t5568 + (-t3804 * t5390 + (-t4526 * t4713 + t4688 * t5276) * t5776) * t3804) * t4686 - t4688 * t5568 + t3897 * t5254 * t5393 + (t3897 + t3801) * t4688;
t5713 = -m(3) * t3486 + t3450;
t3449 = (t3458 * t4343 + t3467 * t5393 - t3461) * m(3);
t3485 = (t3803 * t5564 * t5663 + (-t3800 + t5569) * t4687) * t4671 + (t5390 * t5569 + (-t3803 * t5390 + (-t4526 * t4711 + t4687 * t5277) * t5777) * t3803) * t4686 - t4687 * t5569 + t3896 * t5255 * t5393 + (t3896 + t3800) * t4687;
t5712 = -m(3) * t3485 + t3449;
t3442 = (t3454 * t4342 + t3466 * t5393 - t3457) * m(3);
t3484 = (t3784 * t5570 * t5663 + (-t3781 + t5580) * t4680) * t4671 + (t5390 * t5580 + (-t3784 * t5390 + (-t4526 * t4697 + t4680 * t5281) * t5778) * t3784) * t4686 - t4674 * t5579 + t3871 * t5259 * t5393 + (t3871 + t3781) * t4680;
t5711 = -m(3) * t3484 + t3442;
t3441 = (t3453 * t4341 + t3465 * t5393 - t3456) * m(3);
t3483 = (t3783 * t5573 * t5663 + (-t3780 + t5582) * t4679) * t4671 + (t5390 * t5582 + (-t3783 * t5390 + (-t4526 * t4695 + t4679 * t5282) * t5779) * t3783) * t4686 - t4673 * t5581 + t3870 * t5260 * t5393 + (t3870 + t3780) * t4679;
t5710 = -m(3) * t3483 + t3441;
t3440 = (t3452 * t4340 + t3464 * t5393 - t3455) * m(3);
t3482 = (t3782 * t5576 * t5663 + (-t3779 + t5584) * t4678) * t4671 + (t5390 * t5584 + (-t3782 * t5390 + (-t4526 * t4693 + t4678 * t5283) * t5780) * t3782) * t4686 - t4672 * t5583 + t3869 * t5261 * t5393 + (t3869 + t3779) * t4678;
t5709 = -m(3) * t3482 + t3440;
t5245 = t4725 * t5715;
t5696 = t4934 * (t4530 * t5662 - t4725) - t4663 * (t4372 * t4661 - t4660 * t5245) + t4402 * t4661;
t4419 = t4554 * t4663 - t5386;
t5666 = 0.2e1 * t4419;
t5640 = m(3) * t4526;
t5638 = m(3) * t4582;
t5637 = m(3) * t4583;
t5636 = m(3) * t4584;
t5635 = m(3) * t4588;
t5634 = m(3) * t4589;
t5633 = m(3) * t4590;
t4540 = Icges(4,1) + m(4) * (t4690 + t4691);
t4539 = Icges(4,2) + m(4) * (t4690 + t4692);
t5618 = Icges(4,3) + m(4) * (t4691 + t4692);
t5611 = t3485 * t4588;
t5610 = t3486 * t4589;
t5609 = t3487 * t4590;
t5545 = t4066 * t5810;
t5544 = t4067 * t5810;
t5543 = t4068 * t5809;
t5542 = t4069 * t5809;
t5541 = t4070 * t5808;
t5540 = t4071 * t5808;
t5539 = t4073 * t5807;
t5538 = t4074 * t5807;
t5537 = t4075 * t5806;
t5536 = t4076 * t5806;
t5535 = t4077 * t5805;
t5534 = t4078 * t5805;
t5533 = t4079 * t5810;
t5532 = t4080 * t5809;
t5531 = t4081 * t5808;
t5530 = t4085 * t5807;
t5529 = t4086 * t5806;
t5528 = t4087 * t5805;
t5527 = t4102 * t5810;
t5526 = t4103 * t5810;
t5525 = t4104 * t5809;
t5524 = t4105 * t5809;
t5523 = t4106 * t5808;
t5522 = t4107 * t5808;
t5521 = t4108 * t5807;
t5520 = t4109 * t5807;
t5519 = t4110 * t5806;
t5518 = t4111 * t5806;
t5517 = t4112 * t5805;
t5516 = t4113 * t5805;
t5503 = t4158 * t5810;
t5502 = t4159 * t5809;
t5501 = t4160 * t5808;
t5500 = t4161 * t5807;
t5499 = t4162 * t5806;
t5498 = t4163 * t5805;
t5497 = t4177 * t5810;
t5496 = t4178 * t5809;
t5495 = t4179 * t5808;
t5494 = t4180 * t5807;
t5493 = t4181 * t5806;
t5492 = t4182 * t5805;
t5246 = t4724 * t4734;
t5317 = t4661 * t4724;
t4226 = (t4480 * t4723 - t5246) * t4664 - t4479 * t5317;
t5482 = t4226 * t4662;
t5481 = t5810 * t4340;
t5479 = t5809 * t4341;
t5477 = t5808 * t4342;
t5475 = t5807 * t4343;
t5473 = t5806 * t4344;
t5471 = t5805 * t4345;
t5394 = t4526 * t4683 ^ 2;
t5385 = t4553 * t4663;
t5341 = t4619 * t4723;
t5340 = t4620 * t4662;
t5339 = t4620 * t4725;
t5326 = t4660 * t4663;
t5307 = t4662 * t4725;
t5300 = t4665 * t4419;
t5299 = t4665 * t4934;
t5297 = t4665 * t4725;
t4951 = t4723 + 0.2e1 * t4587;
t4995 = t5745 * t5339;
t4996 = t4934 * t5302;
t5024 = t4660 * t5247;
t4045 = (0.2e1 * t4996 - (-0.2e1 * t4530 + t5339) * t5715) * t4619 + ((-t4554 * t4951 + t5324 * t5715) * t4664 + t4553 * t5317 - (-t4725 * t5653 + 0.4e1 * t5318) * t5380) * t4663 - t4995 + (-t4724 * t4934 + t4951 * t5386) * t4664 + (-t4723 * t5715 + t5024) * t4661 - t5245;
t4394 = t4475 - t5249 / 0.2e1;
t4807 = t4994 + t5249;
t5222 = ((t4920 / 0.2e1 - (0.2e1 * t5744 - t5248) * t4934) * t4619 + (((-t4997 + t5383 / 0.2e1) * t4661 + t5244) * t4664 + (-t4620 + 0.1e1 / 0.2e1) * t5247 - (-t5248 / 0.2e1 + t5744) * t5391) * t4663 + t4394 * t4620 + ((t4998 / 0.2e1 + t4482 / 0.2e1) * t4661 + t4993) * t4664 - t4475 / 0.2e1 + t4807) * t5838 + t4045 * t4621;
t5165 = t4725 * t5666;
t5075 = t4045 * t5309;
t5068 = t4195 * t5468;
t5066 = t4196 * t5466;
t5064 = t4197 * t5464;
t5062 = t4198 * t5462;
t5060 = t4199 * t5460;
t5058 = t4200 * t5458;
t5055 = t5810 * t5393;
t5054 = t5809 * t5393;
t5053 = t5808 * t5393;
t5052 = t5807 * t5393;
t5051 = t5806 * t5393;
t5050 = t5805 * t5393;
t5005 = t4934 * t5326;
t5004 = t4934 * t5321;
t5003 = t4661 * t5299;
t4983 = t5810 * t5240;
t4982 = t5809 * t5239;
t4981 = t5808 * t5238;
t4980 = t5807 * t5234;
t4979 = t5806 * t5233;
t4978 = t5810 * t5761;
t4977 = t5809 * t5760;
t4976 = t5808 * t5759;
t4975 = t5807 * t5758;
t4974 = t5806 * t5757;
t4973 = t5805 * t5756;
t4972 = t5232 * t5805;
t4953 = -t4530 + t5339;
t4927 = t5810 * t5067;
t4926 = t5809 * t5065;
t4925 = t5808 * t5063;
t4924 = t5807 * t5061;
t4923 = t5806 * t5059;
t4922 = t5805 * t5057;
t4404 = t4479 * t4664 - t4661 * t4734;
t4798 = 0.2e1 * t5005 - t5392;
t4784 = (t4530 * t4735 - t4736 * t5302) * t4663 + (t4723 * t5323 - t5246) * t4661 + (t4725 * t4736 + t4735 * t5302) * t4660;
t4153 = (t4661 * t5315 - t4665 * t5727) * t4723 + t5835;
t4154 = (t4661 * t5314 - t4665 * t5726) * t4723 + t5833;
t4155 = (t4661 * t5313 - t4665 * t5725) * t4723 + t5831;
t4156 = (t4661 * t5312 - t4665 * t5724) * t4723 + t5829;
t4157 = (t4661 * t5311 - t4665 * t5723) * t4723 + t5827;
t4519 = t4587 + t4723 / 0.2e1;
t4431 = t5715 * t5321;
t4427 = t4661 * t5308 - t4664 * t5297;
t4426 = -t4661 * t5298 - t4664 * t5307;
t4401 = t4553 * t4724 + t4660 * t5803;
t4381 = t4540 * t4723 + t5024;
t4339 = -t4662 * t5715 - 0.2e1 * t5003;
t4338 = -t4665 * t5715 + 0.2e1 * t5004;
t4303 = t4798 - t5745;
t4236 = -t4725 * t5301 - t4735 * t5768 + t5306 * t5744;
t4225 = t4480 * t4662 + t4665 * t5702;
t4210 = t4554 * t5768 + t4724 * t5618 + t5385 * t5744;
t4207 = t4539 * t4723 - t4587 * t5745 + t4798 * t5744;
t4194 = t4387 * t5307 + t5791;
t4193 = t4387 * t5297 - t5792;
t4192 = t4386 * t5307 + t5793;
t4191 = t4386 * t5297 - t5794;
t4190 = t4385 * t5307 + t5795;
t4189 = t4385 * t5297 - t5796;
t4188 = t4384 * t5307 + t5797;
t4187 = t4384 * t5297 - t5798;
t4186 = t4383 * t5307 + t5799;
t4185 = t4383 * t5297 - t5800;
t4184 = t4382 * t5307 + t5801;
t4183 = t4382 * t5297 - t5802;
t4133 = t4665 * t4236 - t4662 * t4784;
t4132 = t4662 * t4236 + t4665 * t4784;
t4089 = (-t4372 * t4663 + t5665 - (-0.2e1 * t4619 + 0.1e1) * t5249) * t4620 - t4209 * t5320 + t4419 * t4724;
t4088 = (-t4303 * t5319 + t4662 * (-t4619 * t5804 - t5326 * t5715 + t4934)) * t4664 - (t5382 + t5385) * t5321 + (-0.2e1 * t4620 + 0.1e1) * t5300;
t4072 = t5340 * t5666 + ((-t4431 - 0.2e1 * t5299) * t4619 + t4338 * t5326 - t5745 * t5321 + t5299) * t4664 + (-t4553 * t5319 - t4554 * t4662) * t4663 - (-t4553 * t4662 + t4554 * t5319) * t4660;
t4059 = t4540 - 0.2e1 * t5005 - t5826;
t4046 = (-0.2e1 * t5789 - 0.2e1 * t4462 - (-0.4e1 * t4619 + 0.2e1) * t5322) * t4621 - t5811 * t5309 + t4208;
t4043 = t4152 * t4661 + t4387 * t4426 + (-t4291 * t4724 - t5791) * t4664;
t4042 = -t4157 * t4661 - t4387 * t4427 + (t4724 * t5785 - t5792) * t4664;
t4041 = t4150 * t4661 + t4386 * t4426 + (-t4288 * t4724 - t5793) * t4664;
t4040 = -t4156 * t4661 - t4386 * t4427 + (t4724 * t5784 - t5794) * t4664;
t4039 = t4148 * t4661 + t4385 * t4426 + (-t4285 * t4724 - t5795) * t4664;
t4038 = -t4155 * t4661 - t4385 * t4427 + (t4724 * t5783 - t5796) * t4664;
t4037 = t4146 * t4661 + t4384 * t4426 + (-t4282 * t4724 - t5797) * t4664;
t4036 = -t4154 * t4661 - t4384 * t4427 + (t4724 * t5782 - t5798) * t4664;
t4035 = t4144 * t4661 + t4383 * t4426 + (-t4279 * t4724 - t5799) * t4664;
t4034 = -t4153 * t4661 - t4383 * t4427 + (t4724 * t5781 - t5800) * t4664;
t4033 = t4142 * t4661 + t4382 * t4426 + (-t4264 * t4724 - t5801) * t4664;
t4032 = t4141 * t4661 - t4382 * t4427 + (t4277 * t4724 - t5802) * t4664;
t4031 = (t4125 * t4291 + t4200 * t4387) * t4590;
t4030 = (t4124 * t4288 + t4199 * t4386) * t4589;
t4029 = (t4123 * t4285 + t4198 * t4385) * t4588;
t4028 = (t4119 * t4282 + t4197 * t4384) * t4584;
t4027 = (t4118 * t4279 + t4196 * t4383) * t4583;
t4026 = (t4117 * t4264 + t4195 * t4382) * t4582;
t4025 = (t4964 - (t5661 - 0.2e1) * t5380) * t4663 + t4539 + t5392 * t4620 + t5748 + t5826;
t4024 = (-t4122 * t4291 - t4200 * t5785) * t4590;
t4023 = (-t4121 * t4288 - t4199 * t5784) * t4589;
t4022 = (-t4120 * t4285 - t4198 * t5783) * t4588;
t4020 = (-t4116 * t4282 - t4197 * t5782) * t4584;
t4019 = (-t4115 * t4279 - t4196 * t5781) * t4583;
t4018 = (-t4114 * t4264 - t4195 * t4277) * t4582;
t4017 = (t4122 * t4387 - t4125 * t5785) * t4590;
t4016 = (t4121 * t4386 - t4124 * t5784) * t4589;
t4015 = (t4120 * t4385 - t4123 * t5783) * t4588;
t4014 = (t4116 * t4384 - t4119 * t5782) * t4584;
t4013 = (t4115 * t4383 - t4118 * t5781) * t4583;
t4012 = (t4114 * t4382 - t4117 * t4277) * t4582;
t4011 = (-t4152 - t5451) * t4665 + (t4157 - t5446) * t4662;
t4010 = (-t4150 - t5452) * t4665 + (t4156 - t5447) * t4662;
t4009 = (-t4148 - t5453) * t4665 + (t4155 - t5448) * t4662;
t4008 = (-t4146 - t5454) * t4665 + (t4154 - t5449) * t4662;
t4007 = (-t4144 - t5455) * t4665 + (t4153 - t5450) * t4662;
t4006 = (-t4142 - t5456) * t4665 + (-t4141 - t5457) * t4662;
t4005 = -t4620 * t5771 + (t4339 * t5341 + (t4372 * t5319 - t4401 * t4662) * t4663 - 0.2e1 * t4394 * t5319 - t4381 * t4662) * t4664 + (t4338 * t4619 - (-t4665 * t5804 - t4431) * t5326 + t4539 * t4665 - t5004) * t4724;
t4004 = t4209 * t5340 + (t4338 * t5341 + (-t4372 * t5321 - t4401 * t4665) * t4663 + 0.2e1 * t4394 * t5321 - t4665 * t4381) * t4664 - t4724 * (t4339 * t4619 + (t4662 * t5804 - t5319 * t5715) * t5326 + t4539 * t4662 + t5003);
t4003 = -t5785 * t4426 + t4291 * t4427 + (t4152 * t4662 + t4157 * t4665) * t4664;
t4002 = -t5784 * t4426 + t4288 * t4427 + (t4150 * t4662 + t4156 * t4665) * t4664;
t4001 = -t5783 * t4426 + t4285 * t4427 + (t4148 * t4662 + t4155 * t4665) * t4664;
t4000 = -t5782 * t4426 + t4282 * t4427 + (t4146 * t4662 + t4154 * t4665) * t4664;
t3999 = -t5781 * t4426 + t4279 * t4427 + (t4144 * t4662 + t4153 * t4665) * t4664;
t3998 = t4264 * t4427 - t4277 * t4426 + (-t4141 * t4665 + t4142 * t4662) * t4664;
t3997 = (-t4182 * t5471 + t5058 * t5394 - t4200) * t5633;
t3996 = (-t4181 * t5473 + t5060 * t5394 - t4199) * t5634;
t3995 = (-t4180 * t5475 + t5062 * t5394 - t4198) * t5635;
t3994 = (-t4179 * t5477 + t5064 * t5394 - t4197) * t5636;
t3993 = (-t4178 * t5479 + t5066 * t5394 - t4196) * t5637;
t3992 = (-t4177 * t5481 + t5068 * t5394 - t4195) * t5638;
t3991 = (t4662 * t5165 - t5771) * t4620 + (t4207 * t4662 - t4665 * t5696) * t4664 - t4210 * t4665 - t4530 * t4419 * t4662;
t3990 = (t4209 * t4662 + t4665 * t5165) * t4620 + (t4207 * t4665 + t4662 * t5696) * t4664 + t4210 * t4662 - t4530 * t5300;
t3989 = (t4112 * t4291 - t4182 * t4387) * t5818;
t3988 = (t4110 * t4288 - t4181 * t4386) * t5817;
t3987 = (t4108 * t4285 - t4180 * t4385) * t5816;
t3986 = (t4106 * t4282 - t4179 * t4384) * t5815;
t3985 = (t4104 * t4279 - t4178 * t4383) * t5814;
t3984 = (t4102 * t4264 - t4177 * t4382) * t5813;
t3983 = (-t4113 * t4291 + t4182 * t5785) * t5818;
t3982 = (-t4111 * t4288 + t4181 * t5784) * t5817;
t3981 = (-t4109 * t4285 + t4180 * t5783) * t5816;
t3980 = (t4078 * t4291 + t4387 * t5057) * t5818;
t3979 = (t4076 * t4288 + t4386 * t5059) * t5817;
t3978 = (t4074 * t4285 + t4385 * t5061) * t5816;
t3977 = (-t4107 * t4282 + t4179 * t5782) * t5815;
t3976 = (-t4105 * t4279 + t4178 * t5781) * t5814;
t3975 = (-t4103 * t4264 + t4177 * t4277) * t5813;
t3974 = (t4071 * t4282 + t4384 * t5063) * t5815;
t3973 = (t4069 * t4279 + t4383 * t5065) * t5814;
t3972 = (t4067 * t4264 + t4382 * t5067) * t5813;
t3971 = (-t4077 * t4291 - t5057 * t5785) * t5818;
t3970 = (-t4075 * t4288 - t5059 * t5784) * t5817;
t3969 = (-t4073 * t4285 - t5061 * t5783) * t5816;
t3968 = (-t4070 * t4282 - t5063 * t5782) * t5815;
t3967 = (-t4068 * t4279 - t5065 * t5781) * t5814;
t3966 = (-t4066 * t4264 - t4277 * t5067) * t5813;
t3965 = (-t4112 * t5785 + t4113 * t4387) * t5818;
t3964 = (-t4110 * t5784 + t4111 * t4386) * t5817;
t3963 = (-t4108 * t5783 + t4109 * t4385) * t5816;
t3962 = (-t4106 * t5782 + t4107 * t4384) * t5815;
t3961 = (-t4104 * t5781 + t4105 * t4383) * t5814;
t3960 = (-t4102 * t4277 + t4103 * t4382) * t5813;
t3959 = (t4077 * t4387 - t4078 * t5785) * t5818;
t3958 = (t4075 * t4386 - t4076 * t5784) * t5817;
t3957 = (t4073 * t4385 - t4074 * t5783) * t5816;
t3956 = (t4070 * t4384 - t4071 * t5782) * t5815;
t3955 = (t4068 * t4383 - t4069 * t5781) * t5814;
t3954 = (t4066 * t4382 - t4067 * t4277) * t5813;
t3953 = (-t4077 * t5050 - t4113 * t5471 + t4122) * t5633;
t3952 = (-t4078 * t5050 - t4112 * t5471 + t4125) * t5633;
t3951 = (-t4075 * t5051 - t4111 * t5473 + t4121) * t5634;
t3950 = (-t4076 * t5051 - t4110 * t5473 + t4124) * t5634;
t3949 = (-t4073 * t5052 - t4109 * t5475 + t4120) * t5635;
t3948 = (-t4074 * t5052 - t4108 * t5475 + t4123) * t5635;
t3947 = (-t4070 * t5053 - t4107 * t5477 + t4116) * t5636;
t3946 = (-t4071 * t5053 - t4106 * t5477 + t4119) * t5636;
t3945 = (-t4068 * t5054 - t4105 * t5479 + t4115) * t5637;
t3944 = (-t4069 * t5054 - t4104 * t5479 + t4118) * t5637;
t3943 = (-t4066 * t5055 - t4103 * t5481 + t4114) * t5638;
t3942 = (-t4067 * t5055 - t4102 * t5481 + t4117) * t5638;
t3941 = (t5812 * t4663 + t5755) * t4621 + t5075 + ((-t4663 * t5722 - t5729) * t4621 + t5244 * t4663 + t4993) * t4664 + (-t5391 * t4663 + t4934 - t5162) * t5744;
t3940 = (t4087 * t5492 + (-t4163 * t5058 + t4200 * t5640) * t4683) * t4590;
t3939 = (t4086 * t5493 + (-t4162 * t5060 + t4199 * t5640) * t4683) * t4589;
t3938 = (t4085 * t5494 + (-t4161 * t5062 + t4198 * t5640) * t4683) * t4588;
t3934 = (t4081 * t5495 + (-t4160 * t5064 + t4197 * t5640) * t4683) * t4584;
t3933 = (t4080 * t5496 + (-t4159 * t5066 + t4196 * t5640) * t4683) * t4583;
t3932 = (t4079 * t5497 + (-t4158 * t5068 + t4195 * t5640) * t4683) * t4582;
t3910 = t4953 * t5392 + t4519 * t4663 * t5163 + t4995 + t4530 * t4539 + (-t4663 * t4953 * t5804 - 0.2e1 * t4519 * t5384) * t4660 + t5222;
t3909 = (-t4530 * t5715 - 0.2e1 * t4996) * t4619 + (-t4401 * t4661 + (-t5025 + 0.2e1 * t5243) * t4660) * t4663 + t4996 - t4381 * t4661 - t4725 * t4540 + t5222;
t3908 = (t4055 * t5492 - t4087 * t4922 + t4200 * t5641) * t4590;
t3907 = (t4054 * t5493 - t4086 * t4923 + t4199 * t5642) * t4589;
t3906 = (t4053 * t5494 - t4085 * t4924 + t4198 * t5643) * t4588;
t3905 = (t4052 * t5495 - t4081 * t4925 + t4197 * t5644) * t4584;
t3904 = (t4051 * t5496 - t4080 * t4926 + t4196 * t5645) * t4583;
t3903 = (t4050 * t5497 - t4079 * t4927 + t4195 * t5646) * t4582;
t3902 = ((t4664 * t5722 - t5812) * t4663 + t5729 * t4664 - t5755) * t4621 - t5075 + (-t4920 - (-t5744 + t5248) * t5804) * t4619 + ((-t4347 - t5244) * t4664 + t4815 + t4955) * t4663 + (-t4336 - t4993) * t4664 - t4807 + t5788;
t3868 = (t4077 * t5498 + t4087 * t5516 - t4122 * t5146) * t4590;
t3867 = (t4078 * t5498 + t4087 * t5517 - t4125 * t5146) * t4590;
t3866 = (t4075 * t5499 + t4086 * t5518 - t4121 * t5146) * t4589;
t3865 = (t4076 * t5499 + t4086 * t5519 - t4124 * t5146) * t4589;
t3864 = (t4073 * t5500 + t4085 * t5520 - t4120 * t5146) * t4588;
t3863 = (t4074 * t5500 + t4085 * t5521 - t4123 * t5146) * t4588;
t3823 = (t4070 * t5501 + t4081 * t5522 - t4116 * t5146) * t4584;
t3822 = (t4071 * t5501 + t4081 * t5523 - t4119 * t5146) * t4584;
t3821 = (t4068 * t5502 + t4080 * t5524 - t4115 * t5146) * t4583;
t3820 = (t4069 * t5502 + t4080 * t5525 - t4118 * t5146) * t4583;
t3819 = (t4066 * t5503 + t4079 * t5526 - t4114 * t5146) * t4582;
t3818 = (t4067 * t5503 + t4079 * t5527 - t4117 * t5146) * t4582;
t3751 = (t4055 * t5516 + t4077 * t5528 - t4122 * t5641) * t4590;
t3750 = (t4055 * t5517 + t4078 * t5528 - t4125 * t5641) * t4590;
t3749 = (t4054 * t5518 + t4075 * t5529 - t4121 * t5642) * t4589;
t3748 = (t4054 * t5519 + t4076 * t5529 - t4124 * t5642) * t4589;
t3747 = (t4053 * t5520 + t4073 * t5530 - t4120 * t5643) * t4588;
t3746 = (t4053 * t5521 + t4074 * t5530 - t4123 * t5643) * t4588;
t3745 = (t4052 * t5522 + t4070 * t5531 - t4116 * t5644) * t4584;
t3744 = (t4052 * t5523 + t4071 * t5531 - t4119 * t5644) * t4584;
t3743 = (t4051 * t5524 + t4068 * t5532 - t4115 * t5645) * t4583;
t3742 = (t4051 * t5525 + t4069 * t5532 - t4118 * t5645) * t4583;
t3741 = (t4050 * t5526 + t4066 * t5533 - t4114 * t5646) * t4582;
t3740 = (t4050 * t5527 + t4067 * t5533 - t4117 * t5646) * t4582;
t3727 = (-t3980 * t5393 - t3989 * t4345 + t4031) * m(3);
t3726 = (-t3979 * t5393 - t3988 * t4344 + t4030) * m(3);
t3725 = (-t3978 * t5393 - t3987 * t4343 + t4029) * m(3);
t3724 = (-t3974 * t5393 - t3986 * t4342 + t4028) * m(3);
t3723 = (-t3973 * t5393 - t3985 * t4341 + t4027) * m(3);
t3722 = (-t3972 * t5393 - t3984 * t4340 + t4026) * m(3);
t3721 = (-t3971 * t5393 - t3983 * t4345 + t4024) * m(3);
t3720 = (-t3970 * t5393 - t3982 * t4344 + t4023) * m(3);
t3719 = (-t3969 * t5393 - t3981 * t4343 + t4022) * m(3);
t3718 = (-t3968 * t5393 - t3977 * t4342 + t4020) * m(3);
t3717 = (-t3967 * t5393 - t3976 * t4341 + t4019) * m(3);
t3716 = (-t3966 * t5393 - t3975 * t4340 + t4018) * m(3);
t3715 = (-t3959 * t5393 - t3965 * t4345 + t4017) * m(3);
t3714 = (-t3958 * t5393 - t3964 * t4344 + t4016) * m(3);
t3713 = (-t3957 * t5393 - t3963 * t4343 + t4015) * m(3);
t3712 = (-t3956 * t5393 - t3962 * t4342 + t4014) * m(3);
t3711 = (-t3955 * t5393 - t3961 * t4341 + t4013) * m(3);
t3710 = (-t3954 * t5393 - t3960 * t4340 + t4012) * m(3);
t3709 = t3980 * t4163 + t3989 * t4087 - t4031 * t5146;
t3708 = t3979 * t4162 + t3988 * t4086 - t4030 * t5146;
t3707 = t3978 * t4161 + t3987 * t4085 - t4029 * t5146;
t3706 = t3974 * t4160 + t3986 * t4081 - t4028 * t5146;
t3705 = t3973 * t4159 + t3985 * t4080 - t4027 * t5146;
t3704 = t3972 * t4158 + t3984 * t4079 - t4026 * t5146;
t3703 = t3971 * t4163 + t3983 * t4087 - t4024 * t5146;
t3702 = t3970 * t4162 + t3982 * t4086 - t4023 * t5146;
t3701 = t3969 * t4161 + t3981 * t4085 - t4022 * t5146;
t3700 = t3968 * t4160 + t3977 * t4081 - t4020 * t5146;
t3699 = t3967 * t4159 + t3976 * t4080 - t4019 * t5146;
t3698 = t3966 * t4158 + t3975 * t4079 - t4018 * t5146;
t3697 = t3980 * t4087 + t3989 * t4055 - t4031 * t5641;
t3696 = t3979 * t4086 + t3988 * t4054 - t4030 * t5642;
t3695 = t3978 * t4085 + t3987 * t4053 - t4029 * t5643;
t3694 = t3974 * t4081 + t3986 * t4052 - t4028 * t5644;
t3693 = t3973 * t4080 + t3985 * t4051 - t4027 * t5645;
t3692 = t3972 * t4079 + t3984 * t4050 - t4026 * t5646;
t3685 = t3971 * t4087 + t3983 * t4055 - t4024 * t5641;
t3684 = t3970 * t4086 + t3982 * t4054 - t4023 * t5642;
t3683 = t3969 * t4085 + t3981 * t4053 - t4022 * t5643;
t3682 = t3968 * t4081 + t3977 * t4052 - t4020 * t5644;
t3681 = t3967 * t4080 + t3976 * t4051 - t4019 * t5645;
t3680 = t3966 * t4079 + t3975 * t4050 - t4018 * t5646;
t3679 = t3959 * t4163 + t3965 * t4087 - t4017 * t5146;
t3678 = t3958 * t4162 + t3964 * t4086 - t4016 * t5146;
t3677 = t3957 * t4161 + t3963 * t4085 - t4015 * t5146;
t3676 = t3956 * t4160 + t3962 * t4081 - t4014 * t5146;
t3675 = t3955 * t4159 + t3961 * t4080 - t4013 * t5146;
t3674 = t3954 * t4158 + t3960 * t4079 - t4012 * t5146;
t3670 = t3959 * t4087 + t3965 * t4055 - t4017 * t5641;
t3669 = t3958 * t4086 + t3964 * t4054 - t4016 * t5642;
t3668 = t3957 * t4085 + t3963 * t4053 - t4015 * t5643;
t3640 = t3956 * t4081 + t3962 * t4052 - t4014 * t5644;
t3639 = t3955 * t4080 + t3961 * t4051 - t4013 * t5645;
t3638 = t3954 * t4079 + t3960 * t4050 - t4012 * t5646;
t3625 = (t3908 * t5492 - t3940 * t4922 - t3997 * t4200) * t4590;
t3624 = (t3907 * t5493 - t3939 * t4923 - t3996 * t4199) * t4589;
t3623 = (t3906 * t5494 - t3938 * t4924 - t3995 * t4198) * t4588;
t3622 = (t3905 * t5495 - t3934 * t4925 - t3994 * t4197) * t4584;
t3621 = (t3904 * t5496 - t3933 * t4926 - t3993 * t4196) * t4583;
t3620 = (t3903 * t5497 - t3932 * t4927 - t3992 * t4195) * t4582;
t3619 = (t3908 * t5516 + t3940 * t5535 + t3997 * t4122) * t4590;
t3618 = (t3908 * t5517 + t3940 * t5534 + t3997 * t4125) * t4590;
t3617 = (t3907 * t5518 + t3939 * t5537 + t3996 * t4121) * t4589;
t3616 = (t3907 * t5519 + t3939 * t5536 + t3996 * t4124) * t4589;
t3615 = (t3906 * t5520 + t3938 * t5539 + t3995 * t4120) * t4588;
t3614 = (t3906 * t5521 + t3938 * t5538 + t3995 * t4123) * t4588;
t3613 = (t3905 * t5522 + t3934 * t5541 + t3994 * t4116) * t4584;
t3612 = (t3905 * t5523 + t3934 * t5540 + t3994 * t4119) * t4584;
t3611 = (t3904 * t5524 + t3933 * t5543 + t3993 * t4115) * t4583;
t3610 = (t3904 * t5525 + t3933 * t5542 + t3993 * t4118) * t4583;
t3609 = (t3903 * t5526 + t3932 * t5545 + t3992 * t4114) * t4582;
t3608 = (t3903 * t5527 + t3932 * t5544 + t3992 * t4117) * t4582;
t3589 = (t3751 * t5492 - t3868 * t4922 - t3953 * t4200) * t4590;
t3588 = (t3750 * t5492 - t3867 * t4922 - t3952 * t4200) * t4590;
t3587 = (t3749 * t5493 - t3866 * t4923 - t3951 * t4199) * t4589;
t3586 = (t3748 * t5493 - t3865 * t4923 - t3950 * t4199) * t4589;
t3585 = (t3747 * t5494 - t3864 * t4924 - t3949 * t4198) * t4588;
t3584 = (t3746 * t5494 - t3863 * t4924 - t3948 * t4198) * t4588;
t3583 = (t3745 * t5495 - t3823 * t4925 - t3947 * t4197) * t4584;
t3582 = (t3744 * t5495 - t3822 * t4925 - t3946 * t4197) * t4584;
t3581 = (t3743 * t5496 - t3821 * t4926 - t3945 * t4196) * t4583;
t3580 = (t3742 * t5496 - t3820 * t4926 - t3944 * t4196) * t4583;
t3579 = (t3741 * t5497 - t3819 * t4927 - t3943 * t4195) * t4582;
t3578 = (t3740 * t5497 - t3818 * t4927 - t3942 * t4195) * t4582;
t3577 = (t3751 * t5516 + t3868 * t5535 + t3953 * t4122) * t4590;
t3576 = (t3751 * t5517 + t3868 * t5534 + t3953 * t4125) * t4590;
t3575 = (t3750 * t5516 + t3867 * t5535 + t3952 * t4122) * t4590;
t3574 = (t3750 * t5517 + t3867 * t5534 + t3952 * t4125) * t4590;
t3573 = (t3749 * t5518 + t3866 * t5537 + t3951 * t4121) * t4589;
t3572 = (t3749 * t5519 + t3866 * t5536 + t3951 * t4124) * t4589;
t3571 = (t3748 * t5518 + t3865 * t5537 + t3950 * t4121) * t4589;
t3570 = (t3748 * t5519 + t3865 * t5536 + t3950 * t4124) * t4589;
t3569 = (t3747 * t5520 + t3864 * t5539 + t3949 * t4120) * t4588;
t3568 = (t3747 * t5521 + t3864 * t5538 + t3949 * t4123) * t4588;
t3567 = (t3746 * t5520 + t3863 * t5539 + t3948 * t4120) * t4588;
t3566 = (t3746 * t5521 + t3863 * t5538 + t3948 * t4123) * t4588;
t3565 = (t3745 * t5522 + t3823 * t5541 + t3947 * t4116) * t4584;
t3564 = (t3745 * t5523 + t3823 * t5540 + t3947 * t4119) * t4584;
t3563 = (t3744 * t5522 + t3822 * t5541 + t3946 * t4116) * t4584;
t3562 = (t3744 * t5523 + t3822 * t5540 + t3946 * t4119) * t4584;
t3561 = (t3743 * t5524 + t3821 * t5543 + t3945 * t4115) * t4583;
t3560 = (t3743 * t5525 + t3821 * t5542 + t3945 * t4118) * t4583;
t3559 = (t3742 * t5524 + t3820 * t5543 + t3944 * t4115) * t4583;
t3558 = (t3742 * t5525 + t3820 * t5542 + t3944 * t4118) * t4583;
t3557 = (t3741 * t5526 + t3819 * t5545 + t3943 * t4114) * t4582;
t3556 = (t3741 * t5527 + t3819 * t5544 + t3943 * t4117) * t4582;
t3555 = (t3740 * t5526 + t3818 * t5545 + t3942 * t4114) * t4582;
t3554 = (t3740 * t5527 + t3818 * t5544 + t3942 * t4117) * t4582;
t3541 = (t3697 * t5492 - t3709 * t4922 - t3727 * t4200) * t4590;
t3540 = (t3696 * t5493 - t3708 * t4923 - t3726 * t4199) * t4589;
t3539 = (t3695 * t5494 - t3707 * t4924 - t3725 * t4198) * t4588;
t3538 = (t3694 * t5495 - t3706 * t4925 - t3724 * t4197) * t4584;
t3537 = (t3693 * t5496 - t3705 * t4926 - t3723 * t4196) * t4583;
t3536 = (t3692 * t5497 - t3704 * t4927 - t3722 * t4195) * t4582;
t3535 = (t3685 * t5492 - t3703 * t4922 - t3721 * t4200) * t4590;
t3534 = (t3684 * t5493 - t3702 * t4923 - t3720 * t4199) * t4589;
t3533 = (t3683 * t5494 - t3701 * t4924 - t3719 * t4198) * t4588;
t3532 = (t3697 * t5516 + t3709 * t5535 + t3727 * t4122) * t4590;
t3531 = (t3697 * t5517 + t3709 * t5534 + t3727 * t4125) * t4590;
t3530 = (t3696 * t5518 + t3708 * t5537 + t3726 * t4121) * t4589;
t3529 = (t3696 * t5519 + t3708 * t5536 + t3726 * t4124) * t4589;
t3528 = (t3695 * t5520 + t3707 * t5539 + t3725 * t4120) * t4588;
t3527 = (t3695 * t5521 + t3707 * t5538 + t3725 * t4123) * t4588;
t3526 = (t3682 * t5495 - t3700 * t4925 - t3718 * t4197) * t4584;
t3525 = (t3681 * t5496 - t3699 * t4926 - t3717 * t4196) * t4583;
t3524 = (t3680 * t5497 - t3698 * t4927 - t3716 * t4195) * t4582;
t3523 = (t3694 * t5522 + t3706 * t5541 + t3724 * t4116) * t4584;
t3522 = (t3694 * t5523 + t3706 * t5540 + t3724 * t4119) * t4584;
t3521 = (t3693 * t5524 + t3705 * t5543 + t3723 * t4115) * t4583;
t3520 = (t3693 * t5525 + t3705 * t5542 + t3723 * t4118) * t4583;
t3519 = (t3692 * t5526 + t3704 * t5545 + t3722 * t4114) * t4582;
t3518 = (t3692 * t5527 + t3704 * t5544 + t3722 * t4117) * t4582;
t3517 = (t3685 * t5516 + t3703 * t5535 + t3721 * t4122) * t4590;
t3516 = (t3685 * t5517 + t3703 * t5534 + t3721 * t4125) * t4590;
t3515 = (t3684 * t5518 + t3702 * t5537 + t3720 * t4121) * t4589;
t3514 = (t3684 * t5519 + t3702 * t5536 + t3720 * t4124) * t4589;
t3513 = (t3683 * t5520 + t3701 * t5539 + t3719 * t4120) * t4588;
t3512 = (t3683 * t5521 + t3701 * t5538 + t3719 * t4123) * t4588;
t3511 = (t3682 * t5522 + t3700 * t5541 + t3718 * t4116) * t4584;
t3510 = (t3682 * t5523 + t3700 * t5540 + t3718 * t4119) * t4584;
t3509 = (t3681 * t5524 + t3699 * t5543 + t3717 * t4115) * t4583;
t3508 = (t3681 * t5525 + t3699 * t5542 + t3717 * t4118) * t4583;
t3507 = (t3680 * t5526 + t3698 * t5545 + t3716 * t4114) * t4582;
t3506 = (t3680 * t5527 + t3698 * t5544 + t3716 * t4117) * t4582;
t3505 = (t3670 * t5492 - t3679 * t4922 - t3715 * t4200) * t4590;
t3504 = (t3669 * t5493 - t3678 * t4923 - t3714 * t4199) * t4589;
t3503 = (t3668 * t5494 - t3677 * t4924 - t3713 * t4198) * t4588;
t3502 = (t3640 * t5495 - t3676 * t4925 - t3712 * t4197) * t4584;
t3501 = (t3639 * t5496 - t3675 * t4926 - t3711 * t4196) * t4583;
t3500 = (t3638 * t5497 - t3674 * t4927 - t3710 * t4195) * t4582;
t3499 = (t3670 * t5516 + t3679 * t5535 + t3715 * t4122) * t4590;
t3498 = (t3670 * t5517 + t3679 * t5534 + t3715 * t4125) * t4590;
t3497 = (t3669 * t5518 + t3678 * t5537 + t3714 * t4121) * t4589;
t3496 = (t3669 * t5519 + t3678 * t5536 + t3714 * t4124) * t4589;
t3495 = (t3668 * t5520 + t3677 * t5539 + t3713 * t4120) * t4588;
t3494 = (t3668 * t5521 + t3677 * t5538 + t3713 * t4123) * t4588;
t3493 = (t3640 * t5522 + t3676 * t5541 + t3712 * t4116) * t4584;
t3492 = (t3640 * t5523 + t3676 * t5540 + t3712 * t4119) * t4584;
t3491 = (t3639 * t5524 + t3675 * t5543 + t3711 * t4115) * t4583;
t3490 = (t3639 * t5525 + t3675 * t5542 + t3711 * t4118) * t4583;
t3489 = (t3638 * t5526 + t3674 * t5545 + t3710 * t4114) * t4582;
t3488 = (t3638 * t5527 + t3674 * t5544 + t3710 * t4117) * t4582;
t1 = [(t4125 * t3451 - t4078 * t4973 + t4112 * t4972) * t4590 + (t4124 * t3450 - t4076 * t4974 + t4110 * t4979) * t4589 + (t4123 * t3449 - t4074 * t4975 + t4108 * t4980) * t4588 + (t4119 * t3442 - t4071 * t4976 + t4106 * t4981) * t4584 + (t4118 * t3441 - t4069 * t4977 + t4104 * t4982) * t4583 + (t4117 * t3440 - t4067 * t4978 + t4102 * t4983) * t4582 + (t3555 * t4142 + t3559 * t4144 + t3563 * t4146 + t3567 * t4148 + t3571 * t4150 + t3575 * t4152 + t3578 * t4141 - t3580 * t4153 - t3582 * t4154 - t3584 * t4155 - t3586 * t4156 - t3588 * t4157) * t4725 + (t3566 * t4009 + t3567 * t4189 + t3584 * t4190 + t3570 * t4010 + t3571 * t4191 + t3586 * t4192 + t3574 * t4011 + t3575 * t4193 + t3588 * t4194 + t3558 * t4007 + t3559 * t4185 + t3580 * t4186 + t3562 * t4008 + t3563 * t4187 + t3582 * t4188 + t3554 * t4006 + t3555 * t4183 + t3578 * t4184) * t4724 + (t3566 * t4001 + t3567 * t4039 + t3584 * t4038 + t3570 * t4002 + t3571 * t4041 + t3586 * t4040 + t3574 * t4003 + t3575 * t4043 + t3588 * t4042 + t3558 * t3999 + t3559 * t4035 + t3580 * t4034 + t3562 * t4000 + t3563 * t4037 + t3582 * t4036 + t3554 * t3998 + t3555 * t4033 + t3578 * t4032) * t4723 + (-t3482 * t5512 - t3483 * t5511 - t3484 * t5510 - t4123 * t5611 - t4124 * t5610 - t4125 * t5609) * m(3) + ((t4132 * t4665 - t4133 * t4662 + t4211 * t5297 - t4225 * t5307) * t4724 + (-t4132 * t5310 - t4133 * t5304 + t4211 * t4426 + t4225 * t4427) * t4723) * m(4); (t4122 * t3451 - t4077 * t4973 + t4113 * t4972) * t4590 + (t4121 * t3450 - t4075 * t4974 + t4111 * t4979) * t4589 + (t4120 * t3449 - t4073 * t4975 + t4109 * t4980) * t4588 + (t4116 * t3442 - t4070 * t4976 + t4107 * t4981) * t4584 + (t4115 * t3441 - t4068 * t4977 + t4105 * t4982) * t4583 + (t4114 * t3440 - t4066 * t4978 + t4103 * t4983) * t4582 + (t3557 * t4142 + t3561 * t4144 + t3565 * t4146 + t3569 * t4148 + t3573 * t4150 + t3577 * t4152 + t3579 * t4141 - t3581 * t4153 - t3583 * t4154 - t3585 * t4155 - t3587 * t4156 - t3589 * t4157) * t4725 + (t3568 * t4009 + t3569 * t4189 + t3585 * t4190 + t3572 * t4010 + t3573 * t4191 + t3587 * t4192 + t3576 * t4011 + t3577 * t4193 + t3589 * t4194 + t3560 * t4007 + t3561 * t4185 + t3581 * t4186 + t3564 * t4008 + t3565 * t4187 + t3583 * t4188 + t3556 * t4006 + t3557 * t4183 + t3579 * t4184) * t4724 + (t3568 * t4001 + t3569 * t4039 + t3585 * t4038 + t3572 * t4002 + t3573 * t4041 + t3587 * t4040 + t3576 * t4003 + t3577 * t4043 + t3589 * t4042 + t3560 * t3999 + t3561 * t4035 + t3581 * t4034 + t3564 * t4000 + t3565 * t4037 + t3583 * t4036 + t3556 * t3998 + t3557 * t4033 + t3579 * t4032) * t4723 + (-t3482 * t5515 - t3483 * t5514 - t3484 * t5513 - t4120 * t5611 - t4121 * t5610 - t4122 * t5609) * m(3) + ((-t4404 * t5297 - t5482) * t4724 + (-t4132 * t4661 - t4225 * t5302 - t4226 * t5304 - t4404 * t4426) * t4723 - t4132 * t4725) * m(4); -t5709 * t5491 - t5710 * t5490 - t5711 * t5489 + t5240 * t4177 * t5813 + t5239 * t4178 * t5814 + t5238 * t4179 * t5815 + t5234 * t4180 * t5816 + t5233 * t4181 * t5817 + t5232 * t4182 * t5818 + t5761 * t4582 * t4927 + t5760 * t4583 * t4926 + t5759 * t4584 * t4925 + (m(4) * t4133 + t3609 * t4142 + t3611 * t4144 + t3613 * t4146 + t3615 * t4148 + t3617 * t4150 + t3619 * t4152 + t3620 * t4141 - t3621 * t4153 - t3622 * t4154 - t3623 * t4155 - t3624 * t4156 - t3625 * t4157) * t4725 + (t3614 * t4009 + t3615 * t4189 + t3623 * t4190 + t3616 * t4010 + t3617 * t4191 + t3624 * t4192 + t3618 * t4011 + t3619 * t4193 + t3625 * t4194 + t3610 * t4007 + t3611 * t4185 + t3621 * t4186 + t3612 * t4008 + t3613 * t4187 + t3622 * t4188 + t3608 * t4006 + t3609 * t4183 + t3620 * t4184 + (t4226 * t4665 - t4404 * t5307) * m(4)) * t4724 + (t3616 * t4002 + t3617 * t4041 + t3624 * t4040 + t3618 * t4003 + t3619 * t4043 + t3625 * t4042 + t3610 * t3999 + t3611 * t4035 + t3621 * t4034 + t3612 * t4000 + t3613 * t4037 + t3622 * t4036 + t3614 * t4001 + t3615 * t4039 + t3623 * t4038 + t3608 * t3998 + t3609 * t4033 + t3620 * t4032 + (t4133 * t4661 + t4404 * t4427 + (-t4211 * t4724 - t5482) * t4664) * m(4)) * t4723 + (-t4200 * t5714 + t5756 * t4922) * t4590 + (-t4199 * t5713 + t5757 * t4923) * t4589 + (-t4198 * t5712 + t5758 * t4924) * t4588; t5714 * t4024 + t5713 * t4023 + t5712 * t4022 + t5711 * t4020 + t5710 * t4019 + t5709 * t4018 + t5232 * t3983 + t5233 * t3982 + t5234 * t3981 + t5238 * t3977 + t5239 * t3976 + t5240 * t3975 - t5756 * t3971 - t5757 * t3970 - t5758 * t3969 - t5759 * t3968 - t5760 * t3967 - t5761 * t3966 + (t3507 * t4142 + t3509 * t4144 + t3511 * t4146 + t3513 * t4148 + t3515 * t4150 + t3517 * t4152 + t3524 * t4141 - t3525 * t4153 - t3526 * t4154 - t3533 * t4155 - t3534 * t4156 - t3535 * t4157 + t4089) * t4725 + ((t4088 * t4725 + t4004) * t4665 + (-t4072 * t4725 + t4005) * t4662 + t3512 * t4009 + t3513 * t4189 + t3533 * t4190 + t3514 * t4010 + t3515 * t4191 + t3534 * t4192 + t3516 * t4011 + t3517 * t4193 + t3535 * t4194 + t3508 * t4007 + t3509 * t4185 + t3525 * t4186 + t3510 * t4008 + t3511 * t4187 + t3526 * t4188 + t3506 * t4006 + t3507 * t4183 + t3524 * t4184) * t4724 + (t4072 * t4427 + t4088 * t4426 + t4089 * t4661 + (-t4004 * t4662 + t4005 * t4665 + (t4303 * t4620 + t4419 * t5825 + t5618) * t4724) * t4664 + t3514 * t4002 + t3515 * t4041 + t3534 * t4040 + t3516 * t4003 + t3517 * t4043 + t3535 * t4042 + t3508 * t3999 + t3509 * t4035 + t3525 * t4034 + t3510 * t4000 + t3511 * t4037 + t3526 * t4036 + t3512 * t4001 + t3513 * t4039 + t3533 * t4038 + t3506 * t3998 + t3507 * t4033 + t3524 * t4032) * t4723; t4026 * t3440 + t4027 * t3441 + t4028 * t3442 + t4029 * t3449 + t4030 * t3450 + t4031 * t3451 + t5232 * t3989 + t5233 * t3988 + t5234 * t3987 + t5238 * t3986 + t5239 * t3985 + t5240 * t3984 - t5756 * t3980 - t5757 * t3979 - t5758 * t3978 - t5759 * t3974 - t5760 * t3973 - t5761 * t3972 + (-t3482 * t4026 - t3483 * t4027 - t3484 * t4028 - t3485 * t4029 - t3486 * t4030 - t3487 * t4031) * m(3) + (t3902 * t4665 + t3909 * t4662 + t3527 * t4009 + t3528 * t4189 + t3539 * t4190 + t3529 * t4010 + t3530 * t4191 + t3540 * t4192 + t3531 * t4011 + t3532 * t4193 + t3541 * t4194 + t3520 * t4007 + t3521 * t4185 + t3537 * t4186 + t3522 * t4008 + t3523 * t4187 + t3538 * t4188 + t3518 * t4006 + t3519 * t4183 + t3536 * t4184) * t4724 + (t3529 * t4002 + t3530 * t4041 + t3540 * t4040 + t3531 * t4003 + t3532 * t4043 + t3541 * t4042 + t3520 * t3999 + t3521 * t4035 + t3537 * t4034 + t3522 * t4000 + t3523 * t4037 + t3538 * t4036 + t3527 * t4001 + t3528 * t4039 + t3539 * t4038 + t3518 * t3998 + t3519 * t4033 + t3536 * t4032 + t3990 * t4661 + t4025 * t4427 + t4046 * t4426 + (-t3902 * t4662 + t3909 * t4665 + t4072 * t4724) * t4664) * t4723 + ((-t4025 * t4662 + t4046 * t4665) * t4724 + t3530 * t4150 - t3540 * t4156 + t3532 * t4152 - t3541 * t4157 + t3523 * t4146 - t3538 * t4154 + t3528 * t4148 - t3539 * t4155 + t3519 * t4142 + t3536 * t4141 + t3521 * t4144 - t3537 * t4153 + t3990) * t4725; t4012 * t3440 + t4013 * t3441 + t4014 * t3442 + t4015 * t3449 + t4016 * t3450 + t4017 * t3451 + t5232 * t3965 + t5233 * t3964 + t5234 * t3963 + t5238 * t3962 + t5239 * t3961 + t5240 * t3960 - t5756 * t3959 - t5757 * t3958 - t5758 * t3957 - t5759 * t3956 - t5760 * t3955 - t5761 * t3954 + (-t3482 * t4012 - t3483 * t4013 - t3484 * t4014 - t3485 * t4015 - t3486 * t4016 - t3487 * t4017) * m(3) + (t3910 * t4665 + t3941 * t4662 + t3494 * t4009 + t3495 * t4189 + t3503 * t4190 + t3496 * t4010 + t3497 * t4191 + t3504 * t4192 + t3498 * t4011 + t3499 * t4193 + t3505 * t4194 + t3490 * t4007 + t3491 * t4185 + t3501 * t4186 + t3492 * t4008 + t3493 * t4187 + t3502 * t4188 + t3488 * t4006 + t3489 * t4183 + t3500 * t4184) * t4724 + (t3496 * t4002 + t3497 * t4041 + t3504 * t4040 + t3498 * t4003 + t3499 * t4043 + t3505 * t4042 + t3490 * t3999 + t3491 * t4035 + t3501 * t4034 + t3492 * t4000 + t3493 * t4037 + t3502 * t4036 + t3494 * t4001 + t3495 * t4039 + t3503 * t4038 + t3488 * t3998 + t3489 * t4033 + t3500 * t4032 + t3991 * t4661 + t4046 * t4427 + t4059 * t4426 + (-t3910 * t4662 + t3941 * t4665 + t4088 * t4724) * t4664) * t4723 + ((-t4046 * t4662 + t4059 * t4665) * t4724 + t3499 * t4152 - t3505 * t4157 + t3493 * t4146 - t3502 * t4154 + t3495 * t4148 - t3503 * t4155 + t3497 * t4150 - t3504 * t4156 + t3489 * t4142 + t3500 * t4141 + t3491 * t4144 - t3501 * t4153 + t3991) * t4725;];
taucX  = t1;
