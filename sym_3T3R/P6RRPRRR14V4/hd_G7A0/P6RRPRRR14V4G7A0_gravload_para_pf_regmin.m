% Calculate minimal parameter regressor of Gravitation load for parallel robot
% P6RRPRRR14V4G7A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,alpha3,alpha4,d1,d4,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% tau_reg [6x24]
%   minimal parameter regressor of Gravitation load for parallel robot
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-04 05:41
% Revision: e482436b586c4f286726c907c195760c5ac72455 (2022-11-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tau_reg = P6RRPRRR14V4G7A0_gravload_para_pf_regmin(xP, qJ, g, legFrame, ...
  koppelP, pkin)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(7,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_regmin: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_regmin: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_regmin: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_regmin: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_regmin: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_regmin: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From invdyn_para_plfcoord_taugreg_matlab.m
% OptimizationMode: 2
% StartTime: 2022-11-04 02:35:31
% EndTime: 2022-11-04 02:36:55
% DurationCPUTime: 94.63s
% Computational Cost: add. (30921->1480), mult. (69456->2667), div. (1422->18), fcn. (65814->48), ass. (0->979)
t11975 = sin(pkin(7));
t11978 = cos(pkin(7));
t11976 = sin(pkin(4));
t12644 = pkin(6) * t11976;
t11864 = -t11975 * pkin(2) + t11978 * t12644;
t11982 = sin(qJ(1,6));
t11830 = t11982 * t11864;
t11979 = cos(pkin(4));
t11936 = t11979 * pkin(6);
t11929 = t11936 + qJ(3,6);
t11988 = cos(qJ(1,6));
t11904 = t11988 * t11929;
t11981 = sin(qJ(2,6));
t11670 = -t11830 * t11981 + t11904;
t11901 = t11982 * t11929;
t11671 = -t11864 * t11988 - t11901 * t11981;
t12333 = t11981 * t11988;
t11676 = t11864 * t12333 + t11901;
t12011 = xP(6);
t11961 = sin(t12011);
t11964 = cos(t12011);
t12020 = koppelP(6,2);
t12026 = koppelP(6,1);
t11843 = -t11961 * t12020 + t11964 * t12026;
t12012 = xP(5);
t11962 = sin(t12012);
t11965 = cos(t12012);
t12014 = koppelP(6,3);
t12398 = t11965 * t12014;
t11712 = t11843 * t11962 - t12398;
t11849 = t11961 * t12026 + t12020 * t11964;
t12013 = xP(4);
t11963 = sin(t12013);
t11966 = cos(t12013);
t11980 = cos(pkin(3));
t11968 = t11980 ^ 2;
t11987 = cos(qJ(2,6));
t11969 = t11987 ^ 2;
t11977 = sin(pkin(3));
t12378 = t11977 * t11980;
t11782 = t11864 * t12378;
t11898 = t11929 * t11968;
t12047 = t11782 + t11929 - t11898;
t11993 = legFrame(6,2);
t11943 = sin(t11993);
t12427 = t11962 * t12020;
t12184 = t11943 * t12427;
t12292 = t12026 * t11671;
t12664 = t11981 * t11904 - t11830;
t12058 = -t12184 * t12664 - t12292;
t12476 = t11943 * t12026;
t12181 = t12664 * t12476;
t12059 = -t11671 * t12427 + t12181;
t11949 = cos(t11993);
t12653 = -t11712 * t11966 + t11849 * t11963;
t12071 = t12653 * t11949;
t12145 = t11943 * t12398;
t12182 = t11988 * t12476;
t12477 = t11943 * t12020;
t12183 = t11988 * t12477;
t11842 = pkin(2) * t11978 + t11975 * t12644 + pkin(1);
t12459 = t11949 * t11981;
t12214 = t11842 * t12459;
t12217 = t11676 * t12476;
t12329 = t11982 * t12026;
t12330 = t11982 * t12020;
t12460 = t11949 * t11929;
t12501 = t11842 * t11977;
t12540 = t11670 * t12026;
t12691 = t11968 - 0.1e1;
t12645 = t12691 * t11966;
t12646 = t11963 * t12691;
t11387 = ((-((t11962 * t12182 + t12330) * t11964 - t11988 * t12145) * t11966 + ((-t11962 * t12329 + t12183) * t11964 + t11982 * t12398) * t11963 + (-(-t11962 * t12183 + t12329) * t11966 + (t11962 * t12330 + t12182) * t11963) * t11961) * t12501 + t12047 * t12071) * t11969 + (-((t11962 * t12292 + t12477 * t12664) * t11964 - t11671 * t12398) * t12646 + ((((t11670 * t12020 - t11962 * t12217) * t11964 + t11676 * t12145) * t11980 + t11712 * t12214) * t11966 - (((-t11676 * t12477 - t11962 * t12540) * t11964 + t11670 * t12398) * t11980 + t11849 * t12214) * t11963) * t11977 + ((t12058 * t11968 + (t11676 * t12184 + t12540) * t12378 - t12058) * t11966 - (t12059 * t11968 + (t11670 * t12427 - t12217) * t12378 - t12059) * t11963) * t11961 + ((-t11671 * t12020 + t11962 * t12181) * t11964 - t12664 * t12145) * t12645) * t11987 - t12653 * t12460;
t11984 = sin(qJ(1,5));
t11831 = t11984 * t11864;
t11930 = t11936 + qJ(3,5);
t11990 = cos(qJ(1,5));
t11905 = t11990 * t11930;
t11983 = sin(qJ(2,5));
t11672 = -t11831 * t11983 + t11905;
t11902 = t11984 * t11930;
t11673 = -t11864 * t11990 - t11902 * t11983;
t12327 = t11983 * t11990;
t11680 = t11864 * t12327 + t11902;
t12021 = koppelP(5,2);
t12027 = koppelP(5,1);
t11844 = -t11961 * t12021 + t11964 * t12027;
t12015 = koppelP(5,3);
t12397 = t11965 * t12015;
t11713 = t11844 * t11962 - t12397;
t11850 = t11961 * t12027 + t12021 * t11964;
t11989 = cos(qJ(2,5));
t11970 = t11989 ^ 2;
t11899 = t11930 * t11968;
t12046 = t11782 + t11930 - t11899;
t11994 = legFrame(5,2);
t11944 = sin(t11994);
t12426 = t11962 * t12021;
t12180 = t11944 * t12426;
t12291 = t12027 * t11673;
t12663 = t11983 * t11905 - t11831;
t12056 = -t12180 * t12663 - t12291;
t12473 = t11944 * t12027;
t12216 = t12663 * t12473;
t12057 = -t11673 * t12426 + t12216;
t11950 = cos(t11994);
t12654 = -t11713 * t11966 + t11850 * t11963;
t12070 = t12654 * t11950;
t12143 = t11680 * t12473;
t12144 = t11944 * t12397;
t12178 = t11990 * t12473;
t12474 = t11944 * t12021;
t12179 = t11990 * t12474;
t12456 = t11950 * t11983;
t12213 = t11842 * t12456;
t12323 = t11984 * t12027;
t12324 = t11984 * t12021;
t12457 = t11950 * t11930;
t12537 = t11672 * t12027;
t11388 = ((-((t11962 * t12178 + t12324) * t11964 - t11990 * t12144) * t11966 + t11963 * ((-t11962 * t12323 + t12179) * t11964 + t11984 * t12397) + (-(-t11962 * t12179 + t12323) * t11966 + t11963 * (t11962 * t12324 + t12178)) * t11961) * t12501 + t12046 * t12070) * t11970 + (-((t11962 * t12291 + t12474 * t12663) * t11964 - t11673 * t12397) * t12646 + ((((t11672 * t12021 - t11962 * t12143) * t11964 + t11680 * t12144) * t11980 + t11713 * t12213) * t11966 - (((-t11680 * t12474 - t11962 * t12537) * t11964 + t11672 * t12397) * t11980 + t11850 * t12213) * t11963) * t11977 + ((t12056 * t11968 + (t11680 * t12180 + t12537) * t12378 - t12056) * t11966 - (t12057 * t11968 + (t11672 * t12426 - t12143) * t12378 - t12057) * t11963) * t11961 + ((-t11673 * t12021 + t11962 * t12216) * t11964 - t12663 * t12144) * t12645) * t11989 - t12654 * t12457;
t11986 = sin(qJ(1,4));
t11832 = t11986 * t11864;
t11931 = t11936 + qJ(3,4);
t11992 = cos(qJ(1,4));
t11906 = t11992 * t11931;
t11985 = sin(qJ(2,4));
t11674 = -t11832 * t11985 + t11906;
t11903 = t11986 * t11931;
t11675 = -t11864 * t11992 - t11903 * t11985;
t12321 = t11985 * t11992;
t11684 = t11864 * t12321 + t11903;
t12022 = koppelP(4,2);
t12028 = koppelP(4,1);
t11845 = -t11961 * t12022 + t11964 * t12028;
t12016 = koppelP(4,3);
t12396 = t11965 * t12016;
t11714 = t11845 * t11962 - t12396;
t11851 = t11961 * t12028 + t12022 * t11964;
t11991 = cos(qJ(2,4));
t11971 = t11991 ^ 2;
t11900 = t11931 * t11968;
t12045 = t11782 + t11931 - t11900;
t11995 = legFrame(4,2);
t11945 = sin(t11995);
t12425 = t11962 * t12022;
t12177 = t11945 * t12425;
t12290 = t12028 * t11675;
t12662 = t11985 * t11906 - t11832;
t12054 = -t12177 * t12662 - t12290;
t12470 = t11945 * t12028;
t12173 = t12662 * t12470;
t12055 = -t11675 * t12425 + t12173;
t11951 = cos(t11995);
t12655 = -t11714 * t11966 + t11851 * t11963;
t12069 = t12655 * t11951;
t12158 = t11945 * t12396;
t12174 = t11684 * t12470;
t12175 = t11992 * t12470;
t12471 = t11945 * t12022;
t12176 = t11992 * t12471;
t12453 = t11951 * t11985;
t12212 = t11842 * t12453;
t12317 = t11986 * t12028;
t12318 = t11986 * t12022;
t12454 = t11951 * t11931;
t12535 = t11674 * t12028;
t11389 = ((-((t11962 * t12175 + t12318) * t11964 - t11992 * t12158) * t11966 + t11963 * ((-t11962 * t12317 + t12176) * t11964 + t11986 * t12396) + (-(-t11962 * t12176 + t12317) * t11966 + t11963 * (t11962 * t12318 + t12175)) * t11961) * t12501 + t12045 * t12069) * t11971 + (-((t11962 * t12290 + t12471 * t12662) * t11964 - t11675 * t12396) * t12646 + ((((t11674 * t12022 - t11962 * t12174) * t11964 + t11684 * t12158) * t11980 + t11714 * t12212) * t11966 - t11963 * (((-t11684 * t12471 - t11962 * t12535) * t11964 + t11674 * t12396) * t11980 + t11851 * t12212)) * t11977 + ((t12054 * t11968 + (t11684 * t12177 + t12535) * t12378 - t12054) * t11966 - t11963 * (t12055 * t11968 + (t11674 * t12425 - t12174) * t12378 - t12055)) * t11961 + ((-t11675 * t12022 + t11962 * t12173) * t11964 - t12662 * t12158) * t12645) * t11991 - t12655 * t12454;
t12000 = sin(qJ(1,3));
t11833 = t12000 * t11864;
t11932 = t11936 + qJ(3,3);
t12006 = cos(qJ(1,3));
t11913 = t12006 * t11932;
t11999 = sin(qJ(2,3));
t11688 = -t11833 * t11999 + t11913;
t11910 = t12000 * t11932;
t11689 = -t11864 * t12006 - t11910 * t11999;
t12312 = t11999 * t12006;
t11694 = t11864 * t12312 + t11910;
t12023 = koppelP(3,2);
t12029 = koppelP(3,1);
t11846 = -t11961 * t12023 + t11964 * t12029;
t12017 = koppelP(3,3);
t12395 = t11965 * t12017;
t11715 = t11846 * t11962 - t12395;
t11852 = t12029 * t11961 + t12023 * t11964;
t12005 = cos(qJ(2,3));
t11972 = t12005 ^ 2;
t11907 = t11932 * t11968;
t12044 = t11782 + t11932 - t11907;
t11996 = legFrame(3,2);
t11946 = sin(t11996);
t12424 = t11962 * t12023;
t12172 = t11946 * t12424;
t12288 = t12029 * t11689;
t12661 = t11999 * t11913 - t11833;
t12052 = -t12172 * t12661 - t12288;
t12467 = t11946 * t12029;
t12053 = -t11689 * t12424 + t12467 * t12661;
t11952 = cos(t11996);
t12656 = -t11715 * t11966 + t11852 * t11963;
t12068 = t12656 * t11952;
t12168 = t12006 * t12467;
t12468 = t11946 * t12023;
t12169 = t12006 * t12468;
t12170 = t11946 * t12395;
t12171 = t11962 * t12467;
t12450 = t11952 * t11999;
t12211 = t11842 * t12450;
t12289 = t12029 * t11688;
t12308 = t12000 * t12029;
t12309 = t12000 * t12023;
t12451 = t11952 * t11932;
t11390 = ((-((t11962 * t12168 + t12309) * t11964 - t12006 * t12170) * t11966 + t11963 * ((-t11962 * t12308 + t12169) * t11964 + t12000 * t12395) + (-(-t11962 * t12169 + t12308) * t11966 + t11963 * (t11962 * t12309 + t12168)) * t11961) * t12501 + t12044 * t12068) * t11972 + (-((t11962 * t12288 + t12468 * t12661) * t11964 - t11689 * t12395) * t12646 + ((((t11688 * t12023 - t11694 * t12171) * t11964 + t11694 * t12170) * t11980 + t11715 * t12211) * t11966 - (((-t11694 * t12468 - t11962 * t12289) * t11964 + t11688 * t12395) * t11980 + t11852 * t12211) * t11963) * t11977 + ((t12052 * t11968 + (t11694 * t12172 + t12289) * t12378 - t12052) * t11966 - (t12053 * t11968 + (t11688 * t12424 - t11694 * t12467) * t12378 - t12053) * t11963) * t11961 + ((-t11689 * t12023 + t12171 * t12661) * t11964 - t12661 * t12170) * t12645) * t12005 - t12656 * t12451;
t12002 = sin(qJ(1,2));
t11834 = t12002 * t11864;
t11933 = t11936 + qJ(3,2);
t12008 = cos(qJ(1,2));
t11914 = t12008 * t11933;
t12001 = sin(qJ(2,2));
t11690 = -t11834 * t12001 + t11914;
t11911 = t12002 * t11933;
t11691 = -t11864 * t12008 - t11911 * t12001;
t12306 = t12001 * t12008;
t11698 = t11864 * t12306 + t11911;
t12024 = koppelP(2,2);
t12030 = koppelP(2,1);
t11847 = -t11961 * t12024 + t11964 * t12030;
t12018 = koppelP(2,3);
t12394 = t11965 * t12018;
t11716 = t11847 * t11962 - t12394;
t11853 = t12030 * t11961 + t12024 * t11964;
t12007 = cos(qJ(2,2));
t11973 = t12007 ^ 2;
t11908 = t11933 * t11968;
t12043 = t11782 + t11933 - t11908;
t11997 = legFrame(2,2);
t11947 = sin(t11997);
t12423 = t11962 * t12024;
t12167 = t11947 * t12423;
t12531 = t11691 * t12030;
t12660 = t12001 * t11914 - t11834;
t12050 = -t12167 * t12660 - t12531;
t12464 = t11947 * t12030;
t12142 = t12660 * t12464;
t12051 = -t11691 * t12423 + t12142;
t11953 = cos(t11997);
t12657 = -t11716 * t11966 + t11853 * t11963;
t12067 = t12657 * t11953;
t12164 = t12008 * t12464;
t12465 = t11947 * t12024;
t12165 = t12008 * t12465;
t12166 = t11947 * t12394;
t12447 = t11953 * t12001;
t12210 = t11842 * t12447;
t12215 = t11698 * t12464;
t12287 = t12030 * t11690;
t12302 = t12002 * t12030;
t12303 = t12002 * t12024;
t12448 = t11953 * t11933;
t11391 = ((-((t11962 * t12164 + t12303) * t11964 - t12008 * t12166) * t11966 + ((-t11962 * t12302 + t12165) * t11964 + t12002 * t12394) * t11963 + (-(-t11962 * t12165 + t12302) * t11966 + (t11962 * t12303 + t12164) * t11963) * t11961) * t12501 + t12043 * t12067) * t11973 + (-((t11962 * t12531 + t12465 * t12660) * t11964 - t11691 * t12394) * t12646 + ((((t11690 * t12024 - t11962 * t12215) * t11964 + t11698 * t12166) * t11980 + t11716 * t12210) * t11966 - (((-t11698 * t12465 - t11962 * t12287) * t11964 + t11690 * t12394) * t11980 + t11853 * t12210) * t11963) * t11977 + ((t12050 * t11968 + (t11698 * t12167 + t12287) * t12378 - t12050) * t11966 - (t12051 * t11968 + (t11690 * t12423 - t12215) * t12378 - t12051) * t11963) * t11961 + ((-t11691 * t12024 + t11962 * t12142) * t11964 - t12660 * t12166) * t12645) * t12007 - t12657 * t12448;
t12004 = sin(qJ(1,1));
t11835 = t12004 * t11864;
t11934 = t11936 + qJ(3,1);
t12010 = cos(qJ(1,1));
t11915 = t12010 * t11934;
t12003 = sin(qJ(2,1));
t11692 = -t11835 * t12003 + t11915;
t11912 = t12004 * t11934;
t11693 = -t11864 * t12010 - t11912 * t12003;
t12300 = t12003 * t12010;
t11702 = t11864 * t12300 + t11912;
t12025 = koppelP(1,2);
t12031 = koppelP(1,1);
t11848 = -t11961 * t12025 + t11964 * t12031;
t12019 = koppelP(1,3);
t12393 = t11965 * t12019;
t11717 = t11848 * t11962 - t12393;
t11854 = t12031 * t11961 + t12025 * t11964;
t12009 = cos(qJ(2,1));
t11974 = t12009 ^ 2;
t11909 = t11934 * t11968;
t12042 = t11782 + t11934 - t11909;
t11998 = legFrame(1,2);
t11948 = sin(t11998);
t12422 = t11962 * t12025;
t12163 = t11948 * t12422;
t12659 = t12003 * t11915 - t11835;
t12048 = -t11693 * t12031 - t12163 * t12659;
t12461 = t11948 * t12031;
t12049 = -t11693 * t12422 + t12461 * t12659;
t11954 = cos(t11998);
t12658 = -t11717 * t11966 + t11854 * t11963;
t12066 = t12658 * t11954;
t12159 = t12010 * t12461;
t12462 = t11948 * t12025;
t12160 = t12010 * t12462;
t12161 = t11948 * t12393;
t12421 = t11962 * t12031;
t12162 = t11948 * t12421;
t12444 = t11954 * t12003;
t12209 = t11842 * t12444;
t12286 = t12031 * t11692;
t12296 = t12004 * t12031;
t12297 = t12004 * t12025;
t12445 = t11954 * t11934;
t11392 = ((-((t11962 * t12159 + t12297) * t11964 - t12010 * t12161) * t11966 + ((-t11962 * t12296 + t12160) * t11964 + t12004 * t12393) * t11963 + (-(-t11962 * t12160 + t12296) * t11966 + (t11962 * t12297 + t12159) * t11963) * t11961) * t12501 + t12042 * t12066) * t11974 + (-((t11693 * t12421 + t12462 * t12659) * t11964 - t11693 * t12393) * t12646 + ((((t11692 * t12025 - t11702 * t12162) * t11964 + t11702 * t12161) * t11980 + t11717 * t12209) * t11966 - (((-t11702 * t12462 - t11962 * t12286) * t11964 + t11692 * t12393) * t11980 + t11854 * t12209) * t11963) * t11977 + ((t12048 * t11968 + (t11702 * t12163 + t12286) * t12378 - t12048) * t11966 - (t12049 * t11968 + (t11692 * t12422 - t11702 * t12461) * t12378 - t12049) * t11963) * t11961 + ((-t11693 * t12025 + t12162 * t12659) * t11964 - t12659 * t12161) * t12645) * t12009 - t12658 * t12445;
t11885 = g(1) * t11954 - g(2) * t11948;
t11765 = -g(3) * t12004 + t11885 * t12010;
t11879 = g(1) * t11948 + g(2) * t11954;
t11630 = t11765 * t12009 + t11879 * t12003;
t11928 = 0.1e1 / t11934;
t12493 = t11864 * t11980;
t11732 = -t11934 * t11977 - t12493;
t11821 = t12009 * t11842;
t12665 = -t11732 * t12003 + t11821;
t12733 = 0.1e1 / t12665;
t12741 = t12733 * t11928;
t12740 = t11630 * t12741;
t11884 = g(1) * t11953 - g(2) * t11947;
t11764 = -g(3) * t12002 + t11884 * t12008;
t11878 = g(1) * t11947 + g(2) * t11953;
t11628 = t11764 * t12007 + t11878 * t12001;
t11927 = 0.1e1 / t11933;
t11731 = -t11933 * t11977 - t12493;
t11820 = t12007 * t11842;
t12666 = -t11731 * t12001 + t11820;
t12732 = 0.1e1 / t12666;
t12743 = t12732 * t11927;
t12742 = t11628 * t12743;
t11881 = g(1) * t11950 - g(2) * t11944;
t11758 = -g(3) * t11984 + t11881 * t11990;
t11875 = g(1) * t11944 + g(2) * t11950;
t11622 = t11758 * t11989 + t11875 * t11983;
t11924 = 0.1e1 / t11930;
t11722 = -t11930 * t11977 - t12493;
t11814 = t11989 * t11842;
t12669 = -t11722 * t11983 + t11814;
t12729 = 0.1e1 / t12669;
t12749 = t12729 * t11924;
t12748 = t11622 * t12749;
t11880 = g(1) * t11949 - g(2) * t11943;
t11756 = -g(3) * t11982 + t11880 * t11988;
t11874 = g(1) * t11943 + g(2) * t11949;
t11620 = t11756 * t11987 + t11874 * t11981;
t11923 = 0.1e1 / t11929;
t11721 = -t11929 * t11977 - t12493;
t11813 = t11987 * t11842;
t12670 = -t11721 * t11981 + t11813;
t12728 = 0.1e1 / t12670;
t12751 = t12728 * t11923;
t12750 = t11620 * t12751;
t11883 = g(1) * t11952 - g(2) * t11946;
t11763 = -g(3) * t12000 + t11883 * t12006;
t11877 = g(1) * t11946 + g(2) * t11952;
t11626 = t11763 * t12005 + t11877 * t11999;
t11926 = 0.1e1 / t11932;
t11730 = -t11932 * t11977 - t12493;
t11819 = t12005 * t11842;
t12667 = -t11730 * t11999 + t11819;
t12731 = 0.1e1 / t12667;
t12745 = t12731 * t11926;
t12754 = t11626 * t12745;
t11882 = g(1) * t11951 - g(2) * t11945;
t11759 = -g(3) * t11986 + t11882 * t11992;
t11876 = g(1) * t11945 + g(2) * t11951;
t11624 = t11759 * t11991 + t11876 * t11985;
t11925 = 0.1e1 / t11931;
t11723 = -t11931 * t11977 - t12493;
t11815 = t11991 * t11842;
t12668 = -t11723 * t11985 + t11815;
t12730 = 0.1e1 / t12668;
t12747 = t12730 * t11925;
t12755 = t11624 * t12747;
t12757 = -t11387 * t12750 - t11388 * t12748 - t11389 * t12755 - t11390 * t12754 - t11391 * t12742 - t11392 * t12740;
t11706 = t11843 * t11965 + t11962 * t12014;
t12377 = t11977 * t11981;
t12208 = t11842 * t12377;
t12458 = t11949 * t11987;
t12539 = t11671 * t11706;
t11393 = -(-t11706 * t11982 - t11988 * t12071) * t11969 * t12501 + (t11968 * t12539 + (-t11670 * t11706 + t11676 * t12071) * t12378 - t12539) * t11987 - (t12691 * t12664 * t12458 + (t11969 * t12047 - t11987 * t12208 - t11929) * t11943) * t12653;
t11707 = t11844 * t11965 + t11962 * t12015;
t12375 = t11977 * t11983;
t12207 = t11842 * t12375;
t12455 = t11950 * t11989;
t12528 = t11707 * t11673;
t11394 = -(-t11707 * t11984 - t11990 * t12070) * t11970 * t12501 + (t11968 * t12528 + (-t11672 * t11707 + t11680 * t12070) * t12378 - t12528) * t11989 - (t12691 * t12663 * t12455 + (t11970 * t12046 - t11989 * t12207 - t11930) * t11944) * t12654;
t11708 = t11845 * t11965 + t11962 * t12016;
t12373 = t11977 * t11985;
t12206 = t11842 * t12373;
t12452 = t11951 * t11991;
t12527 = t11708 * t11675;
t11395 = -(-t11708 * t11986 - t11992 * t12069) * t11971 * t12501 + (t11968 * t12527 + (-t11674 * t11708 + t11684 * t12069) * t12378 - t12527) * t11991 - (t12691 * t12662 * t12452 + (t11971 * t12045 - t11991 * t12206 - t11931) * t11945) * t12655;
t11709 = t11846 * t11965 + t11962 * t12017;
t12365 = t11977 * t11999;
t12202 = t11842 * t12365;
t12449 = t11952 * t12005;
t12526 = t11709 * t11689;
t11396 = -(-t11709 * t12000 - t12006 * t12068) * t11972 * t12501 + (t11968 * t12526 + (-t11688 * t11709 + t11694 * t12068) * t12378 - t12526) * t12005 - (t12691 * t12661 * t12449 + (t11972 * t12044 - t12005 * t12202 - t11932) * t11946) * t12656;
t11710 = t11847 * t11965 + t11962 * t12018;
t12363 = t11977 * t12001;
t12201 = t11842 * t12363;
t12446 = t11953 * t12007;
t12532 = t11691 * t11710;
t11397 = -(-t11710 * t12002 - t12008 * t12067) * t11973 * t12501 + (t11968 * t12532 + (-t11690 * t11710 + t11698 * t12067) * t12378 - t12532) * t12007 - (t12691 * t12660 * t12446 + (t11973 * t12043 - t12007 * t12201 - t11933) * t11947) * t12657;
t11711 = t11848 * t11965 + t11962 * t12019;
t12361 = t11977 * t12003;
t12200 = t11842 * t12361;
t12443 = t11954 * t12009;
t12529 = t11693 * t11711;
t11398 = -(-t11711 * t12004 - t12010 * t12066) * t11974 * t12501 + (t11968 * t12529 + (-t11692 * t11711 + t11702 * t12066) * t12378 - t12529) * t12009 - (t12691 * t12659 * t12443 + (t11974 * t12042 - t12009 * t12200 - t11934) * t11948) * t12658;
t12756 = -t11393 * t12750 - t11394 * t12748 - t11395 * t12755 - t11396 * t12754 - t11397 * t12742 - t11398 * t12740;
t12114 = -t11782 - t11936;
t11634 = -qJ(3,6) + t11898 + t12114;
t12041 = t11676 * t12378 - t11968 * t12664 + t12664;
t12370 = t11977 * t11988;
t12205 = t11842 * t12370;
t11435 = (t11634 * t11949 - t11943 * t12205) * t11969 + (-t11943 * t12041 + t11949 * t12208) * t11987 + t12460;
t11436 = (t11943 * t12208 + t11949 * t12041) * t11987 + t11943 * t11929 + (t11634 * t11943 + t11949 * t12205) * t11969;
t11569 = t11712 * t11963 + t11966 * t11849;
t12589 = t11569 * t12728;
t11858 = t11987 * pkin(1) + qJ(3,6) * t12377;
t12352 = t11980 * t11981;
t12083 = -t11975 * t12352 + t11978 * t11987;
t12598 = 0.1e1 / (t12083 * pkin(2) + (t11979 * t12377 + (t11975 * t11987 + t11978 * t12352) * t11976) * pkin(6) + t11858) * t11706;
t11399 = (t11435 * t12598 - t11436 * t12589) * t11923;
t11635 = -qJ(3,5) + t11899 + t12114;
t12040 = t11680 * t12378 - t11968 * t12663 + t12663;
t12368 = t11977 * t11990;
t12204 = t11842 * t12368;
t11437 = (t11635 * t11950 - t11944 * t12204) * t11970 + (-t11944 * t12040 + t11950 * t12207) * t11989 + t12457;
t11438 = (t11944 * t12207 + t11950 * t12040) * t11989 + t11944 * t11930 + (t11635 * t11944 + t11950 * t12204) * t11970;
t11571 = t11713 * t11963 + t11966 * t11850;
t12588 = t11571 * t12729;
t11859 = t11989 * pkin(1) + qJ(3,5) * t12375;
t12350 = t11980 * t11983;
t12082 = -t11975 * t12350 + t11978 * t11989;
t12597 = 0.1e1 / (t12082 * pkin(2) + (t11979 * t12375 + (t11975 * t11989 + t11978 * t12350) * t11976) * pkin(6) + t11859) * t11707;
t11400 = (t11437 * t12597 - t11438 * t12588) * t11924;
t11636 = -qJ(3,4) + t11900 + t12114;
t12039 = t11684 * t12378 - t11968 * t12662 + t12662;
t12366 = t11977 * t11992;
t12203 = t11842 * t12366;
t11439 = (t11636 * t11951 - t11945 * t12203) * t11971 + (-t11945 * t12039 + t11951 * t12206) * t11991 + t12454;
t11440 = (t11945 * t12206 + t11951 * t12039) * t11991 + t11945 * t11931 + (t11636 * t11945 + t11951 * t12203) * t11971;
t11573 = t11714 * t11963 + t11966 * t11851;
t12587 = t11573 * t12730;
t11860 = t11991 * pkin(1) + qJ(3,4) * t12373;
t12348 = t11980 * t11985;
t12081 = -t11975 * t12348 + t11978 * t11991;
t12596 = 0.1e1 / (t12081 * pkin(2) + (t11979 * t12373 + (t11975 * t11991 + t11978 * t12348) * t11976) * pkin(6) + t11860) * t11708;
t11401 = (t11439 * t12596 - t11440 * t12587) * t11925;
t11639 = -qJ(3,1) + t11909 + t12114;
t12036 = t11702 * t12378 - t11968 * t12659 + t12659;
t12354 = t11977 * t12010;
t12197 = t11842 * t12354;
t11445 = (t11639 * t11954 - t11948 * t12197) * t11974 + (-t11948 * t12036 + t11954 * t12200) * t12009 + t12445;
t11446 = (t11948 * t12200 + t11954 * t12036) * t12009 + t11948 * t11934 + (t11639 * t11948 + t11954 * t12197) * t11974;
t11579 = t11717 * t11963 + t11966 * t11854;
t12584 = t11579 * t12733;
t11870 = t12009 * pkin(1) + qJ(3,1) * t12361;
t12339 = t11980 * t12003;
t12078 = -t11975 * t12339 + t11978 * t12009;
t12591 = 0.1e1 / (t12078 * pkin(2) + (t11979 * t12361 + (t11975 * t12009 + t11978 * t12339) * t11976) * pkin(6) + t11870) * t11711;
t11402 = (t11445 * t12591 - t11446 * t12584) * t11928;
t11637 = -qJ(3,3) + t11907 + t12114;
t12038 = t11694 * t12378 - t11968 * t12661 + t12661;
t12358 = t11977 * t12006;
t12199 = t11842 * t12358;
t11441 = (t11637 * t11952 - t11946 * t12199) * t11972 + (-t11946 * t12038 + t11952 * t12202) * t12005 + t12451;
t11442 = (t11946 * t12202 + t11952 * t12038) * t12005 + t11946 * t11932 + (t11637 * t11946 + t11952 * t12199) * t11972;
t11575 = t11715 * t11963 + t11966 * t11852;
t12586 = t11575 * t12731;
t11868 = t12005 * pkin(1) + qJ(3,3) * t12365;
t12343 = t11980 * t11999;
t12080 = -t11975 * t12343 + t11978 * t12005;
t12590 = 0.1e1 / (t12080 * pkin(2) + (t11979 * t12365 + (t11975 * t12005 + t11978 * t12343) * t11976) * pkin(6) + t11868) * t11709;
t11403 = (t11441 * t12590 - t11442 * t12586) * t11926;
t11638 = -qJ(3,2) + t11908 + t12114;
t12037 = t11698 * t12378 - t11968 * t12660 + t12660;
t12356 = t11977 * t12008;
t12198 = t11842 * t12356;
t11443 = (t11638 * t11953 - t11947 * t12198) * t11973 + (-t11947 * t12037 + t11953 * t12201) * t12007 + t12448;
t11444 = (t11947 * t12201 + t11953 * t12037) * t12007 + t11947 * t11933 + (t11638 * t11947 + t11953 * t12198) * t11973;
t11577 = t11716 * t11963 + t11966 * t11853;
t12585 = t11577 * t12732;
t11869 = t12007 * pkin(1) + qJ(3,2) * t12363;
t12341 = t11980 * t12001;
t12079 = -t11975 * t12341 + t11978 * t12007;
t12592 = 0.1e1 / (t12079 * pkin(2) + (t11979 * t12363 + (t11975 * t12007 + t11978 * t12341) * t11976) * pkin(6) + t11869) * t11710;
t11404 = (t11443 * t12592 - t11444 * t12585) * t11927;
t12753 = -t11399 * t11620 - t11400 * t11622 - t11401 * t11624 - t11402 * t11630 - t11403 * t11626 - t11404 * t11628;
t12494 = t11864 * t11977;
t12102 = -t11934 * t11980 + t12494;
t12698 = t12004 * t12665 + t12010 * t12102;
t12121 = t12698 * t12009 * t12741;
t12103 = -t11933 * t11980 + t12494;
t12699 = t12002 * t12666 + t12008 * t12103;
t12122 = t12699 * t12007 * t12743;
t12104 = -t11932 * t11980 + t12494;
t12700 = t12000 * t12667 + t12006 * t12104;
t12123 = t12700 * t12005 * t12745;
t12105 = -t11931 * t11980 + t12494;
t12701 = t11986 * t12668 + t11992 * t12105;
t12124 = t12701 * t11991 * t12747;
t12106 = -t11930 * t11980 + t12494;
t12702 = t11984 * t12669 + t11990 * t12106;
t12125 = t12702 * t11989 * t12749;
t12107 = -t11929 * t11980 + t12494;
t12703 = t11982 * t12670 + t11988 * t12107;
t12126 = t12703 * t11987 * t12751;
t12752 = t11620 * t12126 + t11622 * t12125 + t11624 * t12124 + t11626 * t12123 + t11628 * t12122 + t11630 * t12121;
t12371 = t11977 * t11987;
t11513 = -t11858 * t11874 + t11756 * (pkin(1) * t11981 - qJ(3,6) * t12371);
t12613 = t11513 * t12728;
t12369 = t11977 * t11989;
t11514 = -t11859 * t11875 + t11758 * (pkin(1) * t11983 - qJ(3,5) * t12369);
t12612 = t11514 * t12729;
t12367 = t11977 * t11991;
t11515 = -t11860 * t11876 + t11759 * (pkin(1) * t11985 - qJ(3,4) * t12367);
t12611 = t11515 * t12730;
t12359 = t11977 * t12005;
t11522 = -t11868 * t11877 + t11763 * (pkin(1) * t11999 - qJ(3,3) * t12359);
t12610 = t11522 * t12731;
t12357 = t11977 * t12007;
t11523 = -t11869 * t11878 + t11764 * (pkin(1) * t12001 - qJ(3,2) * t12357);
t12609 = t11523 * t12732;
t12355 = t11977 * t12009;
t11524 = -t11870 * t11879 + t11765 * (pkin(1) * t12003 - qJ(3,1) * t12355);
t12608 = t11524 * t12733;
t12739 = t11948 * t11912 - (t11702 * t11948 + t11864 * t12443) * t11968;
t12738 = t11947 * t11911 - (t11698 * t11947 + t11864 * t12446) * t11968;
t12737 = t11946 * t11910 - (t11694 * t11946 + t11864 * t12449) * t11968;
t12736 = t11945 * t11903 - (t11684 * t11945 + t11864 * t12452) * t11968;
t12735 = t11944 * t11902 - (t11680 * t11944 + t11864 * t12455) * t11968;
t12734 = t11943 * t11901 - (t11676 * t11943 + t11864 * t12458) * t11968;
t12721 = -t11982 * t12107 + t11988 * t12670;
t12720 = -t11984 * t12106 + t11990 * t12669;
t12719 = -t11986 * t12105 + t11992 * t12668;
t12718 = -t12000 * t12104 + t12006 * t12667;
t12717 = -t12002 * t12103 + t12008 * t12666;
t12716 = -t12004 * t12102 + t12010 * t12665;
t12478 = t11943 * t11987;
t12697 = (t11676 * t11949 - t11864 * t12478) * t11968 - t11949 * t11901;
t12475 = t11944 * t11989;
t12696 = (t11680 * t11950 - t11864 * t12475) * t11968 - t11950 * t11902;
t12472 = t11945 * t11991;
t12695 = (t11684 * t11951 - t11864 * t12472) * t11968 - t11951 * t11903;
t12469 = t11946 * t12005;
t12694 = (t11694 * t11952 - t11864 * t12469) * t11968 - t11952 * t11910;
t12466 = t11947 * t12007;
t12693 = (t11698 * t11953 - t11864 * t12466) * t11968 - t11953 * t11911;
t12463 = t11948 * t12009;
t12692 = (t11702 * t11954 - t11864 * t12463) * t11968 - t11954 * t11912;
t12652 = -t11692 * t11968 + t11915;
t12651 = -t11690 * t11968 + t11914;
t12650 = -t11688 * t11968 + t11913;
t12649 = -t11674 * t11968 + t11906;
t12648 = -t11672 * t11968 + t11905;
t12647 = -t11670 * t11968 + t11904;
t11619 = t11756 * t11981 - t11874 * t11987;
t12353 = t11978 * t11980;
t11471 = -t11619 * t11975 + t11620 * t12353;
t12637 = t11471 * t12728;
t11621 = t11758 * t11983 - t11875 * t11989;
t11472 = -t11621 * t11975 + t11622 * t12353;
t12636 = t11472 * t12729;
t11623 = t11759 * t11985 - t11876 * t11991;
t11473 = -t11623 * t11975 + t11624 * t12353;
t12635 = t11473 * t12730;
t12379 = t11975 * t11980;
t11474 = t11619 * t11978 + t11620 * t12379;
t12634 = t11474 * t12728;
t11475 = t11621 * t11978 + t11622 * t12379;
t12633 = t11475 * t12729;
t11476 = t11623 * t11978 + t11624 * t12379;
t12632 = t11476 * t12730;
t12141 = t11763 * t11999 - t11877 * t12005;
t11477 = t11626 * t12353 - t11975 * t12141;
t12631 = t11477 * t12731;
t12140 = t11764 * t12001 - t11878 * t12007;
t11478 = t11628 * t12353 - t11975 * t12140;
t12630 = t11478 * t12732;
t12139 = t11765 * t12003 - t11879 * t12009;
t11479 = t11630 * t12353 - t11975 * t12139;
t12629 = t11479 * t12733;
t11480 = t11626 * t12379 + t11978 * t12141;
t12628 = t11480 * t12731;
t11481 = t11628 * t12379 + t11978 * t12140;
t12627 = t11481 * t12732;
t11482 = t11630 * t12379 + t11978 * t12139;
t12626 = t11482 * t12733;
t12334 = t11981 * t11982;
t11825 = t11980 * t12334 + t12370;
t12331 = t11982 * t11987;
t12376 = t11977 * t11982;
t11495 = -t11880 * (t11825 * t11975 - t11978 * t12331) + g(3) * (t11975 * t12376 + t11988 * t12083);
t12625 = t11495 * t12728;
t12328 = t11983 * t11984;
t11826 = t11980 * t12328 + t12368;
t12325 = t11984 * t11989;
t12374 = t11977 * t11984;
t11496 = -t11881 * (t11826 * t11975 - t11978 * t12325) + g(3) * (t11975 * t12374 + t11990 * t12082);
t12624 = t11496 * t12729;
t12322 = t11985 * t11986;
t11827 = t11980 * t12322 + t12366;
t12319 = t11986 * t11991;
t12372 = t11977 * t11986;
t11497 = -t11882 * (t11827 * t11975 - t11978 * t12319) + g(3) * (t11975 * t12372 + t11992 * t12081);
t12623 = t11497 * t12730;
t12316 = t11987 * t11988;
t11498 = -t11880 * (t11825 * t11978 + t11975 * t12331) - ((t11980 * t12333 - t12376) * t11978 + t11975 * t12316) * g(3);
t12622 = t11498 * t12728;
t12315 = t11989 * t11990;
t11499 = -t11881 * (t11826 * t11978 + t11975 * t12325) - ((t11980 * t12327 - t12374) * t11978 + t11975 * t12315) * g(3);
t12621 = t11499 * t12729;
t12314 = t11991 * t11992;
t11500 = -t11882 * (t11827 * t11978 + t11975 * t12319) - ((t11980 * t12321 - t12372) * t11978 + t11975 * t12314) * g(3);
t12620 = t11500 * t12730;
t12307 = t12001 * t12002;
t11837 = t11980 * t12307 + t12356;
t12304 = t12002 * t12007;
t12362 = t11977 * t12002;
t11501 = -t11884 * (t11837 * t11975 - t11978 * t12304) + g(3) * (t11975 * t12362 + t12008 * t12079);
t12619 = t11501 * t12732;
t12301 = t12003 * t12004;
t11838 = t11980 * t12301 + t12354;
t12298 = t12004 * t12009;
t12360 = t11977 * t12004;
t11502 = -t11885 * (t11838 * t11975 - t11978 * t12298) + g(3) * (t11975 * t12360 + t12010 * t12078);
t12618 = t11502 * t12733;
t12313 = t11999 * t12000;
t11836 = t11980 * t12313 + t12358;
t12310 = t12000 * t12005;
t12364 = t11977 * t12000;
t11503 = -(t11836 * t11975 - t11978 * t12310) * t11883 + g(3) * (t11975 * t12364 + t12006 * t12080);
t12617 = t11503 * t12731;
t12294 = t12007 * t12008;
t11510 = -t11884 * (t11837 * t11978 + t11975 * t12304) - ((t11980 * t12306 - t12362) * t11978 + t11975 * t12294) * g(3);
t12616 = t11510 * t12732;
t12293 = t12009 * t12010;
t11511 = -t11885 * (t11838 * t11978 + t11975 * t12298) - ((t11980 * t12300 - t12360) * t11978 + t11975 * t12293) * g(3);
t12615 = t11511 * t12733;
t12295 = t12005 * t12006;
t11512 = -(t11836 * t11978 + t11975 * t12310) * t11883 - ((t11980 * t12312 - t12364) * t11978 + t11975 * t12295) * g(3);
t12614 = t11512 * t12731;
t12351 = t11980 * t11982;
t12077 = t11977 * t12333 + t12351;
t12346 = t11980 * t11988;
t11525 = -t11880 * t12077 + g(3) * (t11977 * t12334 - t12346) + t11874 * t12371;
t12607 = t11525 * t11923;
t12349 = t11980 * t11984;
t12076 = t11977 * t12327 + t12349;
t12345 = t11980 * t11990;
t11526 = -t11881 * t12076 + g(3) * (t11977 * t12328 - t12345) + t11875 * t12369;
t12606 = t11526 * t11924;
t12347 = t11980 * t11986;
t12075 = t11977 * t12321 + t12347;
t12344 = t11980 * t11992;
t11527 = -t11882 * t12075 + g(3) * (t11977 * t12322 - t12344) + t11876 * t12367;
t12605 = t11527 * t11925;
t11528 = (-qJ(3,6) * t12346 + t11858 * t11982) * t11880 + g(3) * (pkin(1) * t12316 + qJ(3,6) * t12077);
t12604 = t11528 * t12728;
t11529 = (-qJ(3,5) * t12345 + t11859 * t11984) * t11881 + g(3) * (pkin(1) * t12315 + qJ(3,5) * t12076);
t12603 = t11529 * t12729;
t11530 = (-qJ(3,4) * t12344 + t11860 * t11986) * t11882 + g(3) * (pkin(1) * t12314 + qJ(3,4) * t12075);
t12602 = t11530 * t12730;
t12342 = t11980 * t12000;
t12074 = t11977 * t12312 + t12342;
t12337 = t11980 * t12006;
t11531 = -t11883 * t12074 + g(3) * (t11977 * t12313 - t12337) + t11877 * t12359;
t12601 = t11531 * t11926;
t12340 = t11980 * t12002;
t12073 = t11977 * t12306 + t12340;
t12336 = t11980 * t12008;
t11532 = -t11884 * t12073 + g(3) * (t11977 * t12307 - t12336) + t11878 * t12357;
t12600 = t11532 * t11927;
t12338 = t11980 * t12004;
t12072 = t11977 * t12300 + t12338;
t12335 = t11980 * t12010;
t11533 = -t11885 * t12072 + g(3) * (t11977 * t12301 - t12335) + t11879 * t12355;
t12599 = t11533 * t11928;
t11537 = t11884 * (-qJ(3,2) * t12336 + t11869 * t12002) + g(3) * (pkin(1) * t12294 + qJ(3,2) * t12073);
t12595 = t11537 * t12732;
t11538 = t11885 * (-qJ(3,1) * t12335 + t11870 * t12004) + g(3) * (pkin(1) * t12293 + qJ(3,1) * t12072);
t12594 = t11538 * t12733;
t11539 = (-qJ(3,3) * t12337 + t11868 * t12000) * t11883 + g(3) * (pkin(1) * t12295 + qJ(3,3) * t12074);
t12593 = t11539 * t12731;
t12574 = t12728 * t11619;
t12573 = t12728 * t11620;
t12571 = t12729 * t11621;
t12570 = t12729 * t11622;
t12568 = t12730 * t11623;
t12567 = t12730 * t11624;
t12562 = t12731 * t12141;
t12561 = t12731 * t11626;
t12559 = t12732 * t12140;
t12558 = t12732 * t11628;
t12556 = t12733 * t12139;
t12555 = t12733 * t11630;
t11816 = t11842 * t11981;
t11661 = -t11929 * t12371 + t11816;
t12547 = t11661 * t11949;
t11817 = t11842 * t11983;
t11662 = -t11930 * t12369 + t11817;
t12546 = t11662 * t11950;
t11818 = t11842 * t11985;
t11663 = -t11931 * t12367 + t11818;
t12545 = t11663 * t11951;
t11822 = t11842 * t11999;
t11667 = -t11932 * t12359 + t11822;
t12544 = t11667 * t11952;
t11823 = t11842 * t12001;
t11668 = -t11933 * t12357 + t11823;
t12543 = t11668 * t11953;
t11824 = t11842 * t12003;
t11669 = -t11934 * t12355 + t11824;
t12542 = t11669 * t11954;
t12136 = g(3) * t11992 + t11882 * t11986;
t12513 = t12136 * t11985;
t12512 = t12136 * t11991;
t12138 = g(3) * t11988 + t11880 * t11982;
t12511 = t12138 * t11981;
t12510 = t12138 * t11987;
t12137 = g(3) * t11990 + t11881 * t11984;
t12509 = t12137 * t11983;
t12508 = t12137 * t11989;
t12134 = g(3) * t12008 + t11884 * t12002;
t12507 = t12134 * t12001;
t12506 = t12134 * t12007;
t12133 = g(3) * t12010 + t11885 * t12004;
t12505 = t12133 * t12003;
t12504 = t12133 * t12009;
t12135 = g(3) * t12006 + t11883 * t12000;
t12503 = t12135 * t11999;
t12502 = t12135 * t12005;
t12442 = t11961 * t11963;
t12441 = t11961 * t11965;
t12440 = t11961 * t11966;
t12420 = t11963 * t11964;
t12419 = t11963 * t11965;
t12418 = t11963 * t12020;
t12417 = t11963 * t12021;
t12416 = t11963 * t12022;
t12415 = t11963 * t12023;
t12414 = t11963 * t12024;
t12413 = t11963 * t12025;
t12412 = t11963 * t12026;
t12411 = t11963 * t12027;
t12410 = t11963 * t12028;
t12409 = t11963 * t12029;
t12408 = t11963 * t12030;
t12407 = t11963 * t12031;
t12406 = t11964 * t11965;
t12399 = t11965 * t11966;
t12392 = t11966 * t11964;
t12391 = t11966 * t12020;
t12390 = t11966 * t12021;
t12389 = t11966 * t12022;
t12388 = t11966 * t12023;
t12387 = t11966 * t12024;
t12386 = t11966 * t12025;
t12385 = t11966 * t12026;
t12384 = t11966 * t12027;
t12383 = t11966 * t12028;
t12382 = t11966 * t12029;
t12381 = t11966 * t12030;
t12380 = t11966 * t12031;
t11465 = (t11671 * t11977 - t11813 * t11982) * t11980 - t12647;
t12285 = t11465 * t12751;
t11466 = (t11673 * t11977 - t11814 * t11984) * t11980 - t12648;
t12284 = t11466 * t12749;
t11467 = (t11675 * t11977 - t11815 * t11986) * t11980 - t12649;
t12283 = t11467 * t12747;
t11468 = (t11689 * t11977 - t11819 * t12000) * t11980 - t12650;
t12282 = t11468 * t12745;
t11469 = (t11691 * t11977 - t11820 * t12002) * t11980 - t12651;
t12281 = t11469 * t12743;
t11470 = (t11693 * t11977 - t11821 * t12004) * t11980 - t12652;
t12280 = t11470 * t12741;
t12279 = t11471 * t12751;
t12278 = t11472 * t12749;
t12277 = t11473 * t12747;
t12276 = t11474 * t12751;
t12275 = t11475 * t12749;
t12274 = t11476 * t12747;
t12273 = t11477 * t12745;
t12272 = t11478 * t12743;
t12271 = t11479 * t12741;
t12270 = t11480 * t12745;
t12269 = t11481 * t12743;
t12268 = t11482 * t12741;
t11563 = -t11756 * t11980 + t12138 * t12377;
t12267 = t11563 * t12751;
t11564 = -t11758 * t11980 + t12137 * t12375;
t12266 = t11564 * t12749;
t11565 = -t11759 * t11980 + t12136 * t12373;
t12265 = t11565 * t12747;
t11566 = -t11763 * t11980 + t12135 * t12365;
t12264 = t11566 * t12745;
t11567 = -t11764 * t11980 + t12134 * t12363;
t12263 = t11567 * t12743;
t11568 = -t11765 * t11980 + t12133 * t12361;
t12262 = t11568 * t12741;
t12261 = t12728 * t12511;
t12260 = t12728 * t12510;
t12259 = t12138 * t12751;
t12258 = t11756 * t12751;
t12257 = t12729 * t12509;
t12256 = t12729 * t12508;
t12255 = t12137 * t12749;
t12254 = t11758 * t12749;
t12253 = t12730 * t12513;
t12252 = t12730 * t12512;
t12251 = t12136 * t12747;
t12250 = t11759 * t12747;
t12249 = t12731 * t12503;
t12248 = t12731 * t12502;
t12247 = t12135 * t12745;
t12246 = t11763 * t12745;
t12245 = t12732 * t12507;
t12244 = t12732 * t12506;
t12243 = t12134 * t12743;
t12242 = t11764 * t12743;
t12241 = t12733 * t12505;
t12240 = t12733 * t12504;
t12239 = t12133 * t12741;
t12238 = t11765 * t12741;
t12237 = t11619 * t12751;
t12235 = t11621 * t12749;
t12232 = t11623 * t12747;
t12226 = t12141 * t12745;
t12224 = t12140 * t12743;
t12222 = t12139 * t12741;
t12132 = t12138 * t12285;
t12131 = t12137 * t12284;
t12130 = t12136 * t12283;
t12129 = t12135 * t12282;
t12128 = t12134 * t12281;
t12127 = t12133 * t12280;
t11783 = t11943 * t12333 + t12458;
t12095 = t11783 * t11977 + t11943 * t12351;
t11784 = t11944 * t12327 + t12455;
t12094 = t11784 * t11977 + t11944 * t12349;
t11785 = t11945 * t12321 + t12452;
t12093 = t11785 * t11977 + t11945 * t12347;
t11786 = t11949 * t12333 - t12478;
t12092 = t11786 * t11977 + t11949 * t12351;
t11787 = t11950 * t12327 - t12475;
t12091 = t11787 * t11977 + t11950 * t12349;
t11788 = t11951 * t12321 - t12472;
t12090 = t11788 * t11977 + t11951 * t12347;
t11795 = t11946 * t12312 + t12449;
t12089 = t11795 * t11977 + t11946 * t12342;
t11796 = t11947 * t12306 + t12446;
t12088 = t11796 * t11977 + t11947 * t12340;
t11797 = t11948 * t12300 + t12443;
t12087 = t11797 * t11977 + t11948 * t12338;
t11799 = t11952 * t12312 - t12469;
t12086 = t11799 * t11977 + t11952 * t12342;
t11800 = t11953 * t12306 - t12466;
t12085 = t11800 * t11977 + t11953 * t12340;
t11801 = t11954 * t12300 - t12463;
t12084 = t11801 * t11977 + t11954 * t12338;
t11806 = t11947 * t12294 - t12447;
t11805 = t11947 * t12001 + t11953 * t12294;
t11804 = t11946 * t11999 + t11952 * t12295;
t11803 = t11946 * t12295 - t12450;
t11802 = t11948 * t12003 + t11954 * t12293;
t11798 = t11948 * t12293 - t12444;
t11794 = t11945 * t11985 + t11951 * t12314;
t11793 = t11945 * t12314 - t12453;
t11792 = t11944 * t11983 + t11950 * t12315;
t11791 = t11944 * t12315 - t12456;
t11790 = t11943 * t11981 + t11949 * t12316;
t11789 = t11943 * t12316 - t12459;
t11769 = -t11962 * t12392 + t12442;
t11768 = t11962 * t12440 + t12420;
t11767 = t11962 * t12420 + t12440;
t11766 = -t11962 * t12442 + t12392;
t11739 = g(1) * t11962 - g(2) * t12419 + g(3) * t12399;
t11666 = t11934 * t12361 + t11821;
t11665 = t11933 * t12363 + t11820;
t11664 = t11932 * t12365 + t11819;
t11660 = t11931 * t12373 + t11815;
t11659 = t11930 * t12375 + t11814;
t11658 = t11929 * t12377 + t11813;
t11657 = t11801 * t11980 - t11954 * t12360;
t11656 = t11800 * t11980 - t11953 * t12362;
t11655 = t11799 * t11980 - t11952 * t12364;
t11654 = t11797 * t11980 - t11948 * t12360;
t11653 = t11796 * t11980 - t11947 * t12362;
t11652 = t11795 * t11980 - t11946 * t12364;
t11651 = t11788 * t11980 - t11951 * t12372;
t11650 = t11787 * t11980 - t11950 * t12374;
t11649 = t11786 * t11980 - t11949 * t12376;
t11648 = t11785 * t11980 - t11945 * t12372;
t11647 = t11784 * t11980 - t11944 * t12374;
t11646 = t11783 * t11980 - t11943 * t12376;
t11645 = t11948 * t11669;
t11644 = t11947 * t11668;
t11643 = t11946 * t11667;
t11642 = t11945 * t11663;
t11641 = t11944 * t11662;
t11640 = t11943 * t11661;
t11616 = t11732 * t12009 + t11824;
t11615 = t11731 * t12007 + t11823;
t11614 = t11730 * t12005 + t11822;
t11610 = t11723 * t11991 + t11818;
t11609 = t11722 * t11989 + t11817;
t11608 = t11721 * t11987 + t11816;
t11562 = t11666 * t12010 - t11835 * t11977;
t11561 = t11665 * t12008 - t11834 * t11977;
t11560 = t11664 * t12006 - t11833 * t11977;
t11559 = t11660 * t11992 - t11832 * t11977;
t11558 = t11659 * t11990 - t11831 * t11977;
t11557 = t11658 * t11988 - t11830 * t11977;
t11556 = t11842 * t12293 + t12659 * t11977;
t11555 = t11842 * t12294 + t12660 * t11977;
t11554 = t11842 * t12295 + t12661 * t11977;
t11553 = (t11962 * t12380 - t12413) * t11964 + (-t11962 * t12386 - t12407) * t11961 - t11966 * t12393;
t11552 = (t11962 * t12381 - t12414) * t11964 + (-t11962 * t12387 - t12408) * t11961 - t11966 * t12394;
t11551 = (t11962 * t12382 - t12415) * t11964 + (-t11962 * t12388 - t12409) * t11961 - t11966 * t12395;
t11550 = (t11962 * t12383 - t12416) * t11964 + (-t11962 * t12389 - t12410) * t11961 - t11966 * t12396;
t11549 = (t11962 * t12384 - t12417) * t11964 + (-t11962 * t12390 - t12411) * t11961 - t11966 * t12397;
t11548 = (t11962 * t12385 - t12418) * t11964 + (-t11962 * t12391 - t12412) * t11961 - t11966 * t12398;
t11547 = g(1) * t12406 + g(2) * t11767 + g(3) * t11769;
t11546 = g(1) * t12441 - t11766 * g(2) - t11768 * g(3);
t11545 = t11842 * t12314 + t12662 * t11977;
t11544 = t11842 * t12315 + t12663 * t11977;
t11543 = t11842 * t12316 + t12664 * t11977;
t11464 = (t11562 * t11954 + t11645) * t11980 + t12692;
t11463 = (t11561 * t11953 + t11644) * t11980 + t12693;
t11462 = (t11560 * t11952 + t11643) * t11980 + t12694;
t11461 = (-t11556 * t11948 + t12542) * t11980 + t12739;
t11460 = (t11556 * t11954 + t11645) * t11980 + t12692;
t11459 = (-t11555 * t11947 + t12543) * t11980 + t12738;
t11458 = (t11555 * t11953 + t11644) * t11980 + t12693;
t11457 = (-t11554 * t11946 + t12544) * t11980 + t12737;
t11456 = (t11554 * t11952 + t11643) * t11980 + t12694;
t11455 = (t11559 * t11951 + t11642) * t11980 + t12695;
t11454 = (t11558 * t11950 + t11641) * t11980 + t12696;
t11453 = (t11557 * t11949 + t11640) * t11980 + t12697;
t11452 = (-t11545 * t11945 + t12545) * t11980 + t12736;
t11451 = (t11545 * t11951 + t11642) * t11980 + t12695;
t11450 = (-t11544 * t11944 + t12546) * t11980 + t12735;
t11449 = (t11544 * t11950 + t11641) * t11980 + t12696;
t11448 = (-t11543 * t11943 + t12547) * t11980 + t12734;
t11447 = (t11543 * t11949 + t11640) * t11980 + t12697;
t11434 = pkin(1) * t11802 + t12084 * qJ(3,1) + (-t11657 * t11975 + t11802 * t11978) * pkin(2) + (t12084 * t11979 + (t11657 * t11978 + t11802 * t11975) * t11976) * pkin(6);
t11433 = pkin(1) * t11805 + t12085 * qJ(3,2) + (-t11656 * t11975 + t11805 * t11978) * pkin(2) + (t12085 * t11979 + (t11656 * t11978 + t11805 * t11975) * t11976) * pkin(6);
t11432 = pkin(1) * t11804 + t12086 * qJ(3,3) + (-t11655 * t11975 + t11804 * t11978) * pkin(2) + (t12086 * t11979 + (t11655 * t11978 + t11804 * t11975) * t11976) * pkin(6);
t11431 = pkin(1) * t11798 + t12087 * qJ(3,1) + (-t11654 * t11975 + t11798 * t11978) * pkin(2) + (t12087 * t11979 + (t11654 * t11978 + t11798 * t11975) * t11976) * pkin(6);
t11430 = pkin(1) * t11806 + t12088 * qJ(3,2) + (-t11653 * t11975 + t11806 * t11978) * pkin(2) + (t12088 * t11979 + (t11653 * t11978 + t11806 * t11975) * t11976) * pkin(6);
t11429 = pkin(1) * t11803 + t12089 * qJ(3,3) + (-t11652 * t11975 + t11803 * t11978) * pkin(2) + (t12089 * t11979 + (t11652 * t11978 + t11803 * t11975) * t11976) * pkin(6);
t11428 = pkin(1) * t11793 + t12093 * qJ(3,4) + (-t11648 * t11975 + t11793 * t11978) * pkin(2) + (t12093 * t11979 + (t11648 * t11978 + t11793 * t11975) * t11976) * pkin(6);
t11427 = pkin(1) * t11791 + t12094 * qJ(3,5) + (-t11647 * t11975 + t11791 * t11978) * pkin(2) + (t12094 * t11979 + (t11647 * t11978 + t11791 * t11975) * t11976) * pkin(6);
t11426 = pkin(1) * t11789 + t12095 * qJ(3,6) + (-t11646 * t11975 + t11789 * t11978) * pkin(2) + (t12095 * t11979 + (t11646 * t11978 + t11789 * t11975) * t11976) * pkin(6);
t11425 = pkin(1) * t11794 + t12090 * qJ(3,4) + (-t11651 * t11975 + t11794 * t11978) * pkin(2) + (t12090 * t11979 + (t11651 * t11978 + t11794 * t11975) * t11976) * pkin(6);
t11424 = pkin(1) * t11792 + t12091 * qJ(3,5) + (-t11650 * t11975 + t11792 * t11978) * pkin(2) + (t12091 * t11979 + (t11650 * t11978 + t11792 * t11975) * t11976) * pkin(6);
t11423 = pkin(1) * t11790 + t12092 * qJ(3,6) + (-t11649 * t11975 + t11790 * t11978) * pkin(2) + (t12092 * t11979 + (t11649 * t11978 + t11790 * t11975) * t11976) * pkin(6);
t11422 = (t11464 * t12658 * t12733 - t11470 * t12591) * t11928;
t11421 = (t11463 * t12657 * t12732 - t11469 * t12592) * t11927;
t11420 = (t11462 * t12656 * t12731 - t11468 * t12590) * t11926;
t11419 = (t11454 * t12654 * t12729 - t11466 * t12597) * t11924;
t11418 = (t11453 * t12653 * t12728 - t11465 * t12598) * t11923;
t11417 = (t11455 * t12655 * t12730 - t11467 * t12596) * t11925;
t11416 = (t12658 * ((t11562 * t11948 - t12542) * t11980 - t12739) - ((t11666 * t12004 + t11864 * t12354) * t11980 + t12652) * t11579) * t12741;
t11415 = (((t11561 * t11947 - t12543) * t11980 - t12738) * t12657 - ((t11665 * t12002 + t11864 * t12356) * t11980 + t12651) * t11577) * t12743;
t11414 = (((t11560 * t11946 - t12544) * t11980 - t12737) * t12656 - ((t11664 * t12000 + t11864 * t12358) * t11980 + t12650) * t11575) * t12745;
t11413 = (t12655 * ((t11559 * t11945 - t12545) * t11980 - t12736) - t11573 * ((t11660 * t11986 + t11864 * t12366) * t11980 + t12649)) * t12747;
t11412 = (t12653 * ((t11557 * t11943 - t12547) * t11980 - t12734) - ((t11658 * t11982 + t11864 * t12370) * t11980 + t12647) * t11569) * t12751;
t11411 = (((t11558 * t11944 - t12546) * t11980 - t12735) * t12654 - ((t11659 * t11984 + t11864 * t12368) * t11980 + t12648) * t11571) * t12749;
t11410 = (t11461 * t12591 - t11464 * t12584) * t11928;
t11409 = (t11459 * t12592 - t11463 * t12585) * t11927;
t11408 = (t11457 * t12590 - t11462 * t12586) * t11926;
t11407 = (t11448 * t12598 - t11453 * t12589) * t11923;
t11406 = (t11452 * t12596 - t11455 * t12587) * t11925;
t11405 = (t11450 * t12597 - t11454 * t12588) * t11924;
t1 = [0, t11447 * t12259 + t11449 * t12255 + t11451 * t12251 + t11456 * t12247 + t11458 * t12243 + t11460 * t12239, t11447 * t12258 + t11449 * t12254 + t11451 * t12250 + t11456 * t12246 + t11458 * t12242 + t11460 * t12238, 0, 0, 0, 0, 0, (t11446 * t12556 + t11460 * t12240) * t11928 + (t11444 * t12559 + t11458 * t12244) * t11927 + (t11442 * t12562 + t11456 * t12248) * t11926 + (t11440 * t12568 + t11451 * t12252) * t11925 + (t11438 * t12571 + t11449 * t12256) * t11924 + (t11436 * t12574 + t11447 * t12260) * t11923, (t11446 * t12555 - t11460 * t12241) * t11928 + (t11444 * t12558 - t11458 * t12245) * t11927 + (t11442 * t12561 - t11456 * t12249) * t11926 + (t11440 * t12567 - t11451 * t12253) * t11925 + (t11438 * t12570 - t11449 * t12257) * t11924 + (t11436 * t12573 - t11447 * t12261) * t11923, (t11446 * t12626 + t11460 * t12618) * t11928 + (t11444 * t12627 + t11458 * t12619) * t11927 + (t11442 * t12628 + t11456 * t12617) * t11926 + (t11440 * t12632 + t11451 * t12623) * t11925 + (t11438 * t12633 + t11449 * t12624) * t11924 + (t11436 * t12634 + t11447 * t12625) * t11923, (t11446 * t12629 + t11460 * t12615) * t11928 + (t11444 * t12630 + t11458 * t12616) * t11927 + (t11442 * t12631 + t11456 * t12614) * t11926 + (t11440 * t12635 + t11451 * t12620) * t11925 + (t11438 * t12636 + t11449 * t12621) * t11924 + (t11436 * t12637 + t11447 * t12622) * t11923, t11447 * t12267 + t11449 * t12266 + t11451 * t12265 + t11456 * t12264 + t11458 * t12263 + t11460 * t12262 + (-t11436 * t12750 - t11438 * t12748 - t11440 * t12755 - t11442 * t12754 - t11444 * t12742 - t11446 * t12740) * t11977, (t11460 * t12594 + t11446 * t12608 + (t11948 * t11616 + t12716 * t11954) * t11533) * t11928 + (t11458 * t12595 + t11444 * t12609 + (t11947 * t11615 + t12717 * t11953) * t11532) * t11927 + (t11456 * t12593 + t11442 * t12610 + (t11946 * t11614 + t12718 * t11952) * t11531) * t11926 + (t11451 * t12602 + t11440 * t12611 + (t11945 * t11610 + t12719 * t11951) * t11527) * t11925 + (t11449 * t12603 + t11438 * t12612 + (t11944 * t11609 + t12720 * t11950) * t11526) * t11924 + (t11447 * t12604 + t11436 * t12613 + (t11943 * t11608 + t12721 * t11949) * t11525) * t11923, 0, 0, 0, 0, 0, 0, 0, 0, 0, -t11739 * t11962 + (-t11546 * t11961 - t11547 * t11964) * t11965; 0, t11448 * t12259 + t11450 * t12255 + t11452 * t12251 + t11457 * t12247 + t11459 * t12243 + t11461 * t12239, t11448 * t12258 + t11450 * t12254 + t11452 * t12250 + t11457 * t12246 + t11459 * t12242 + t11461 * t12238, 0, 0, 0, 0, 0, (t11445 * t12556 + t11461 * t12240) * t11928 + (t11443 * t12559 + t11459 * t12244) * t11927 + (t11441 * t12562 + t11457 * t12248) * t11926 + (t11439 * t12568 + t11452 * t12252) * t11925 + (t11437 * t12571 + t11450 * t12256) * t11924 + (t11435 * t12574 + t11448 * t12260) * t11923, (t11445 * t12555 - t11461 * t12241) * t11928 + (t11443 * t12558 - t11459 * t12245) * t11927 + (t11441 * t12561 - t11457 * t12249) * t11926 + (t11439 * t12567 - t11452 * t12253) * t11925 + (t11437 * t12570 - t11450 * t12257) * t11924 + (t11435 * t12573 - t11448 * t12261) * t11923, (t11445 * t12626 + t11461 * t12618) * t11928 + (t11443 * t12627 + t11459 * t12619) * t11927 + (t11441 * t12628 + t11457 * t12617) * t11926 + (t11439 * t12632 + t11452 * t12623) * t11925 + (t11437 * t12633 + t11450 * t12624) * t11924 + (t11435 * t12634 + t11448 * t12625) * t11923, (t11445 * t12629 + t11461 * t12615) * t11928 + (t11443 * t12630 + t11459 * t12616) * t11927 + (t11441 * t12631 + t11457 * t12614) * t11926 + (t11439 * t12635 + t11452 * t12620) * t11925 + (t11437 * t12636 + t11450 * t12621) * t11924 + (t11435 * t12637 + t11448 * t12622) * t11923, t11448 * t12267 + t11450 * t12266 + t11452 * t12265 + t11457 * t12264 + t11459 * t12263 + t11461 * t12262 + (-t11435 * t12750 - t11437 * t12748 - t11439 * t12755 - t11441 * t12754 - t11443 * t12742 - t11445 * t12740) * t11977, (t11461 * t12594 + t11445 * t12608 + (t11954 * t11616 - t12716 * t11948) * t11533) * t11928 + (t11459 * t12595 + t11443 * t12609 + (t11953 * t11615 - t12717 * t11947) * t11532) * t11927 + (t11457 * t12593 + t11441 * t12610 + (t11952 * t11614 - t12718 * t11946) * t11531) * t11926 + (t11452 * t12602 + t11439 * t12611 + (t11951 * t11610 - t12719 * t11945) * t11527) * t11925 + (t11450 * t12603 + t11437 * t12612 + (t11950 * t11609 - t12720 * t11944) * t11526) * t11924 + (t11448 * t12604 + t11435 * t12613 + (t11949 * t11608 - t12721 * t11943) * t11525) * t11923, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11546 * t11766 - t11547 * t11767 + t11739 * t12419; 0, t11465 * t12259 + t11466 * t12255 + t11467 * t12251 + t11468 * t12247 + t11469 * t12243 + t11470 * t12239, t11465 * t12258 + t11466 * t12254 + t11467 * t12250 + t11468 * t12246 + t11469 * t12242 + t11470 * t12238, 0, 0, 0, 0, 0, t11987 * t12132 + t11989 * t12131 + t11991 * t12130 + t12005 * t12129 + t12007 * t12128 + t12009 * t12127 + (-t11619 * t12126 - t11621 * t12125 - t11623 * t12124 - t12121 * t12139 - t12122 * t12140 - t12123 * t12141) * t11977, -t12752 * t11977 - t11981 * t12132 - t11983 * t12131 - t11985 * t12130 - t11999 * t12129 - t12001 * t12128 - t12003 * t12127, t11495 * t12285 + t11496 * t12284 + t11497 * t12283 + t11503 * t12282 + t11501 * t12281 + t11502 * t12280 + (-t11474 * t12126 - t11475 * t12125 - t11476 * t12124 - t11480 * t12123 - t11481 * t12122 - t11482 * t12121) * t11977, t11498 * t12285 + t11499 * t12284 + t11500 * t12283 + t11512 * t12282 + t11510 * t12281 + t11511 * t12280 + (-t11471 * t12126 - t11472 * t12125 - t11473 * t12124 - t11477 * t12123 - t11478 * t12122 - t11479 * t12121) * t11977, t12752 * t11977 ^ 2 + t11465 * t12267 + t11466 * t12266 + t11467 * t12265 + t11468 * t12264 + t11469 * t12263 + t11470 * t12262, (t11470 * t12594 - t11533 * t12698) * t11928 + (t11469 * t12595 - t11532 * t12699) * t11927 + (t11468 * t12593 - t11531 * t12700) * t11926 + (t11467 * t12602 - t11527 * t12701) * t11925 + (t11466 * t12603 - t11526 * t12702) * t11924 + (t11465 * t12604 - t11525 * t12703) * t11923 + (-t11513 * t12126 - t11514 * t12125 - t11515 * t12124 - t11522 * t12123 - t11523 * t12122 - t11524 * t12121) * t11977, 0, 0, 0, 0, 0, 0, 0, 0, 0, t11546 * t11768 - t11547 * t11769 - t11739 * t12399; 0, t11411 * t12137 + t11412 * t12138 + t11413 * t12136 + t11414 * t12135 + t11415 * t12134 + t11416 * t12133, t11411 * t11758 + t11412 * t11756 + t11413 * t11759 + t11414 * t11763 + t11415 * t11764 + t11416 * t11765, 0, 0, 0, 0, 0, t11387 * t12237 + t11388 * t12235 + t11389 * t12232 + t11390 * t12226 + t11391 * t12224 + t11392 * t12222 + t11411 * t12508 + t11412 * t12510 + t11413 * t12512 + t11414 * t12502 + t11415 * t12506 + t11416 * t12504, -t11411 * t12509 - t11412 * t12511 - t11413 * t12513 - t11414 * t12503 - t11415 * t12507 - t11416 * t12505 - t12757, t11387 * t12276 + t11388 * t12275 + t11389 * t12274 + t11390 * t12270 + t11391 * t12269 + t11392 * t12268 + t11411 * t11496 + t11412 * t11495 + t11413 * t11497 + t11414 * t11503 + t11415 * t11501 + t11416 * t11502, t11387 * t12279 + t11388 * t12278 + t11389 * t12277 + t11390 * t12273 + t11391 * t12272 + t11392 * t12271 + t11411 * t11499 + t11412 * t11498 + t11413 * t11500 + t11414 * t11512 + t11415 * t11510 + t11416 * t11511, t11411 * t11564 + t11412 * t11563 + t11413 * t11565 + t11414 * t11566 + t11415 * t11567 + t11416 * t11568 + t12757 * t11977, t11416 * t11538 + t11392 * t11524 * t12741 + (-t11431 * t11553 - t11579 * t12698) * t12599 + t11415 * t11537 + t11391 * t11523 * t12743 + (-t11430 * t11552 - t11577 * t12699) * t12600 + t11414 * t11539 + t11390 * t11522 * t12745 + (-t11429 * t11551 - t11575 * t12700) * t12601 + t11413 * t11530 + t11389 * t11515 * t12747 + (-t11550 * t11428 - t11573 * t12701) * t12605 + t11411 * t11529 + t11388 * t11514 * t12749 + (-t11549 * t11427 - t11571 * t12702) * t12606 + t11412 * t11528 + t11387 * t11513 * t12751 + (-t11548 * t11426 - t11569 * t12703) * t12607, 0, 0, 0, 0, 0, 0, t11546 * t11962 - t11739 * t12441, t11547 * t11962 - t11739 * t12406, (-t11546 * t11964 + t11547 * t11961) * t11965, 0; 0, t11417 * t12136 + t11418 * t12138 + t11419 * t12137 + t11420 * t12135 + t11421 * t12134 + t11422 * t12133, t11417 * t11759 + t11418 * t11756 + t11419 * t11758 + t11420 * t11763 + t11421 * t11764 + t11422 * t11765, 0, 0, 0, 0, 0, t11393 * t12237 + t11394 * t12235 + t11395 * t12232 + t11396 * t12226 + t11397 * t12224 + t11398 * t12222 + t11417 * t12512 + t11418 * t12510 + t11419 * t12508 + t11420 * t12502 + t11421 * t12506 + t11422 * t12504, -t11417 * t12513 - t11418 * t12511 - t11419 * t12509 - t11420 * t12503 - t11421 * t12507 - t11422 * t12505 - t12756, t11393 * t12276 + t11394 * t12275 + t11395 * t12274 + t11396 * t12270 + t11397 * t12269 + t11398 * t12268 + t11417 * t11497 + t11418 * t11495 + t11419 * t11496 + t11420 * t11503 + t11421 * t11501 + t11422 * t11502, t11393 * t12279 + t11394 * t12278 + t11395 * t12277 + t11396 * t12273 + t11397 * t12272 + t11398 * t12271 + t11417 * t11500 + t11418 * t11498 + t11419 * t11499 + t11420 * t11512 + t11421 * t11510 + t11422 * t11511, t11417 * t11565 + t11418 * t11563 + t11419 * t11564 + t11420 * t11566 + t11421 * t11567 + t11422 * t11568 + t12756 * t11977, t11417 * t11530 + t11418 * t11528 + t11419 * t11529 + t11420 * t11539 + t11421 * t11537 + t11422 * t11538 + (t11398 * t12608 + (-t11434 * t11553 + t11711 * t12698) * t11533) * t11928 + (t11397 * t12609 + (-t11433 * t11552 + t11710 * t12699) * t11532) * t11927 + (t11396 * t12610 + (-t11432 * t11551 + t11709 * t12700) * t11531) * t11926 + (t11395 * t12611 + (-t11425 * t11550 + t11708 * t12701) * t11527) * t11925 + (t11394 * t12612 + (-t11424 * t11549 + t11707 * t12702) * t11526) * t11924 + (t11393 * t12613 + (-t11423 * t11548 + t11706 * t12703) * t11525) * t11923, 0, 0, 0, 0, 0, 0, -t11546 * t12419 + t11739 * t11766, -t11547 * t12419 - t11739 * t11767, -t11546 * t11767 - t11547 * t11766, 0; 0, t11405 * t12137 + t11406 * t12136 + t11407 * t12138 + t11408 * t12135 + t11409 * t12134 + t11410 * t12133, t11405 * t11758 + t11406 * t11759 + t11407 * t11756 + t11408 * t11763 + t11409 * t11764 + t11410 * t11765, 0, 0, 0, 0, 0, t11399 * t11619 + t11400 * t11621 + t11401 * t11623 + t11402 * t12139 + t11403 * t12141 + t11404 * t12140 + t11405 * t12508 + t11406 * t12512 + t11407 * t12510 + t11408 * t12502 + t11409 * t12506 + t11410 * t12504, -t11405 * t12509 - t11406 * t12513 - t11407 * t12511 - t11408 * t12503 - t11409 * t12507 - t11410 * t12505 - t12753, t11399 * t11474 + t11400 * t11475 + t11401 * t11476 + t11402 * t11482 + t11403 * t11480 + t11404 * t11481 + t11405 * t11496 + t11406 * t11497 + t11407 * t11495 + t11408 * t11503 + t11409 * t11501 + t11410 * t11502, t11399 * t11471 + t11400 * t11472 + t11401 * t11473 + t11402 * t11479 + t11403 * t11477 + t11404 * t11478 + t11405 * t11499 + t11406 * t11500 + t11407 * t11498 + t11408 * t11512 + t11409 * t11510 + t11410 * t11511, t11405 * t11564 + t11406 * t11565 + t11407 * t11563 + t11408 * t11566 + t11409 * t11567 + t11410 * t11568 + t12753 * t11977, t11410 * t11538 + t11402 * t11524 + (-t11434 * (-t11963 * t12393 + (t11962 * t12407 + t12386) * t11964 + t11961 * (-t11962 * t12413 + t12380)) - t11431 * t11711) * t12599 + t11409 * t11537 + t11404 * t11523 + (-t11433 * (-t11963 * t12394 + (t11962 * t12408 + t12387) * t11964 + t11961 * (-t11962 * t12414 + t12381)) - t11430 * t11710) * t12600 + t11408 * t11539 + t11403 * t11522 + (-t11432 * (-t11963 * t12395 + (t11962 * t12409 + t12388) * t11964 + t11961 * (-t11962 * t12415 + t12382)) - t11429 * t11709) * t12601 + t11406 * t11530 + t11401 * t11515 + (-t11425 * (-t11963 * t12396 + (t11962 * t12410 + t12389) * t11964 + t11961 * (-t11962 * t12416 + t12383)) - t11428 * t11708) * t12605 + t11405 * t11529 + t11400 * t11514 + (-t11424 * (-t11963 * t12397 + (t11962 * t12411 + t12390) * t11964 + t11961 * (-t11962 * t12417 + t12384)) - t11427 * t11707) * t12606 + t11407 * t11528 + t11399 * t11513 + (-t11423 * (-t11963 * t12398 + (t11962 * t12412 + t12391) * t11964 + t11961 * (-t11962 * t12418 + t12385)) - t11426 * t11706) * t12607, 0, 0, 0, 0, 0, 0, t11546 * t12399 + t11739 * t11768, t11547 * t12399 - t11739 * t11769, -t11546 * t11769 - t11547 * t11768, 0;];
tau_reg  = t1;
