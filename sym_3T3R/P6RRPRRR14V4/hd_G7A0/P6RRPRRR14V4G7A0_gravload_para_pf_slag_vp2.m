% Calculate Gravitation load for parallel robot
% P6RRPRRR14V4G7A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,alpha3,alpha4,d1,d4,theta3]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
%
% Output:
% taugX [6x1]
%   forces required to compensate gravitation load
%   in platform coordinates

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-03 12:07
% Revision: 5de314b2d97380370c92dd342c670b987640c890 (2022-02-04)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function taugX = P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2(xP, qJ, g, legFrame, ...
  koppelP, pkin, m, mrSges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(7,1),zeros(3+1,1),zeros(3+1,3)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: pkin has to be [7x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: g has to be [3x1] (double)');
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V4G7A0_gravload_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From gravvec_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2022-11-03 09:22:42
% EndTime: 2022-11-03 09:22:42
% DurationCPUTime: 0.72s
% Computational Cost: add. (6791->716), mult. (12432->1383), div. (270->18), fcn. (10913->48), ass. (0->508)
unknown=NaN(6,1);
t1 = cos(qJ(1,1));
t2 = cos(pkin(7));
t3 = sin(pkin(4));
t6 = sin(pkin(7));
t8 = t2 * t3 * pkin(6) - t6 * pkin(2);
t9 = t1 * t8;
t10 = sin(qJ(2,1));
t12 = sin(qJ(1,1));
t13 = cos(pkin(4));
t14 = t13 * pkin(6);
t15 = t14 + qJ(3,1);
t17 = t9 * t10 + t12 * t15;
t18 = cos(legFrame(1,2));
t20 = cos(qJ(2,1));
t21 = sin(legFrame(1,2));
t25 = cos(pkin(3));
t26 = t25 ^ 2;
t28 = sin(pkin(3));
t29 = t1 * t28;
t30 = t15 * t10;
t35 = t3 * t6 * pkin(6) + t2 * pkin(2) + pkin(1);
t38 = t12 * t28;
t40 = t1 * t35 * t20 + t29 * t30 - t38 * t8;
t42 = t35 * t10;
t45 = -t20 * t28 * t15 + t42;
t51 = (-t20 * t21 * t8 + t18 * t17) * t26 + (t40 * t18 + t45 * t21) * t25 - t12 * t18 * t15;
t52 = 0.1e1 / t15;
t57 = t20 * t35;
t58 = t10 * t8 * t25 + t30 * t28 + t57;
t59 = 0.1e1 / t58;
t62 = -t6 * mrSges(3,1) - mrSges(3,2) * t2;
t63 = t62 * t25;
t65 = qJ(3,1) * m(3) + mrSges(3,3);
t67 = t65 * t28 - mrSges(2,2) + t63;
t68 = t67 * g(3);
t72 = t18 * g(1) - t21 * g(2);
t80 = m(3) * pkin(1) + mrSges(3,1) * t2 - mrSges(3,2) * t6 + mrSges(2,1);
t81 = g(3) * t80;
t83 = mrSges(1,2) - mrSges(2,3);
t85 = mrSges(1,1) * g(3);
t88 = t67 * t72;
t93 = -g(3) * t62 * t28;
t94 = t72 * t80;
t97 = g(3) * t83;
t100 = (-t72 * t65 * t25 + t72 * t62 * t28 + t68 * t10 + t81 * t20 + t83 * t72 + t85) * t1 + (g(3) * t65 * t25 + mrSges(1,1) * t72 + t88 * t10 + t94 * t20 + t93 - t97) * t12;
t101 = t59 * t100;
t103 = t35 * t18;
t106 = t28 * t8;
t107 = t106 * t25;
t108 = t15 * t26 - qJ(3,1) - t107 - t14;
t111 = t20 ^ 2;
t113 = t1 * t15;
t114 = t113 * t10;
t115 = t12 * t8;
t116 = -t114 + t115;
t119 = t28 * t17 * t25;
t122 = t10 * t28;
t123 = t21 * t35;
t128 = (t29 * t103 + t108 * t21) * t111 + ((t116 * t26 + t114 - t115 + t119) * t18 + t122 * t123) * t20 + t21 * t15;
t130 = t8 * t25;
t131 = t28 * t15;
t132 = t130 + t131;
t133 = t132 * t10;
t134 = t133 + t57;
t135 = 0.1e1 / t134;
t140 = t21 * g(1) + t18 * g(2);
t149 = (-t88 * t1 + t68 * t12 - t140 * t80) * t20 - (-t94 * t1 + t81 * t12 + t140 * t67) * t10;
t150 = t135 * t149;
t154 = t15 * t25 - t106;
t155 = t154 * t12;
t158 = -t8 * t25;
t161 = (t158 - t131) * t20 + t42;
t163 = (t134 * t1 + t155) * t18 + t21 * t161;
t176 = (-t12 * t10 * g(3) + t10 * t72 * t1 - t140 * t20) * t28 + t25 * (g(3) * t1 + t12 * t72);
t177 = t176 * m(3);
t179 = cos(qJ(1,2));
t180 = t179 * t8;
t181 = sin(qJ(2,2));
t183 = sin(qJ(1,2));
t184 = t14 + qJ(3,2);
t186 = t180 * t181 + t183 * t184;
t187 = cos(legFrame(2,2));
t189 = cos(qJ(2,2));
t190 = sin(legFrame(2,2));
t195 = t179 * t28;
t196 = t184 * t181;
t200 = t183 * t28;
t202 = t179 * t35 * t189 + t195 * t196 - t200 * t8;
t204 = t35 * t181;
t207 = -t189 * t28 * t184 + t204;
t213 = (-t189 * t190 * t8 + t186 * t187) * t26 + (t202 * t187 + t207 * t190) * t25 - t183 * t187 * t184;
t214 = 0.1e1 / t184;
t219 = t189 * t35;
t220 = t181 * t8 * t25 + t196 * t28 + t219;
t221 = 0.1e1 / t220;
t223 = m(3) * qJ(3,2) + mrSges(3,3);
t225 = t223 * t28 - mrSges(2,2) + t63;
t226 = t225 * g(3);
t230 = t187 * g(1) - t190 * g(2);
t239 = t225 * t230;
t243 = t230 * t80;
t248 = (-t230 * t223 * t25 + t230 * t62 * t28 + t226 * t181 + t81 * t189 + t83 * t230 + t85) * t179 + (g(3) * t223 * t25 + mrSges(1,1) * t230 + t239 * t181 + t243 * t189 + t93 - t97) * t183;
t249 = t221 * t248;
t251 = t35 * t187;
t254 = t184 * t26 - qJ(3,2) - t107 - t14;
t257 = t189 ^ 2;
t259 = t179 * t184;
t260 = t259 * t181;
t261 = t183 * t8;
t262 = -t260 + t261;
t265 = t28 * t186 * t25;
t268 = t181 * t28;
t269 = t190 * t35;
t274 = (t254 * t190 + t195 * t251) * t257 + ((t262 * t26 + t260 - t261 + t265) * t187 + t268 * t269) * t189 + t190 * t184;
t276 = t28 * t184;
t277 = t130 + t276;
t278 = t277 * t181;
t279 = t278 + t219;
t280 = 0.1e1 / t279;
t285 = t190 * g(1) + t187 * g(2);
t294 = (-t239 * t179 + t226 * t183 - t285 * t80) * t189 - (-t243 * t179 + t81 * t183 + t285 * t225) * t181;
t295 = t280 * t294;
t299 = t184 * t25 - t106;
t300 = t299 * t183;
t305 = (t158 - t276) * t189 + t204;
t307 = (t279 * t179 + t300) * t187 + t190 * t305;
t320 = (-t183 * t181 * g(3) + t181 * t230 * t179 - t285 * t189) * t28 + t25 * (g(3) * t179 + t183 * t230);
t321 = t320 * m(3);
t323 = cos(qJ(1,3));
t324 = t323 * t8;
t325 = sin(qJ(2,3));
t327 = sin(qJ(1,3));
t328 = t14 + qJ(3,3);
t330 = t324 * t325 + t327 * t328;
t331 = cos(legFrame(3,2));
t333 = cos(qJ(2,3));
t334 = sin(legFrame(3,2));
t339 = t323 * t28;
t340 = t328 * t325;
t344 = t327 * t28;
t346 = t323 * t35 * t333 + t339 * t340 - t344 * t8;
t348 = t35 * t325;
t351 = -t333 * t28 * t328 + t348;
t357 = (-t333 * t334 * t8 + t330 * t331) * t26 + (t346 * t331 + t351 * t334) * t25 - t327 * t331 * t328;
t358 = 0.1e1 / t328;
t363 = t333 * t35;
t364 = t325 * t8 * t25 + t340 * t28 + t363;
t365 = 0.1e1 / t364;
t367 = m(3) * qJ(3,3) + mrSges(3,3);
t369 = t367 * t28 - mrSges(2,2) + t63;
t370 = t369 * g(3);
t374 = t331 * g(1) - t334 * g(2);
t383 = t369 * t374;
t387 = t374 * t80;
t392 = (-t374 * t367 * t25 + t374 * t62 * t28 + t370 * t325 + t81 * t333 + t83 * t374 + t85) * t323 + (g(3) * t367 * t25 + mrSges(1,1) * t374 + t383 * t325 + t387 * t333 + t93 - t97) * t327;
t393 = t365 * t392;
t395 = t35 * t331;
t398 = t328 * t26 - qJ(3,3) - t107 - t14;
t401 = t333 ^ 2;
t403 = t323 * t328;
t404 = t403 * t325;
t405 = t327 * t8;
t406 = -t404 + t405;
t409 = t28 * t330 * t25;
t412 = t325 * t28;
t413 = t334 * t35;
t418 = (t398 * t334 + t339 * t395) * t401 + ((t406 * t26 + t404 - t405 + t409) * t331 + t412 * t413) * t333 + t334 * t328;
t420 = t28 * t328;
t421 = t130 + t420;
t422 = t421 * t325;
t423 = t422 + t363;
t424 = 0.1e1 / t423;
t429 = t334 * g(1) + t331 * g(2);
t438 = (-t383 * t323 + t370 * t327 - t429 * t80) * t333 - (-t387 * t323 + t81 * t327 + t429 * t369) * t325;
t439 = t424 * t438;
t443 = t328 * t25 - t106;
t444 = t443 * t327;
t449 = (t158 - t420) * t333 + t348;
t451 = (t423 * t323 + t444) * t331 + t334 * t449;
t464 = (-t327 * t325 * g(3) + t325 * t374 * t323 - t429 * t333) * t28 + t25 * (g(3) * t323 + t327 * t374);
t465 = t464 * m(3);
t467 = cos(qJ(1,4));
t468 = t467 * t8;
t469 = sin(qJ(2,4));
t471 = sin(qJ(1,4));
t472 = t14 + qJ(3,4);
t474 = t468 * t469 + t471 * t472;
t475 = cos(legFrame(4,2));
t477 = cos(qJ(2,4));
t478 = sin(legFrame(4,2));
t483 = t467 * t28;
t484 = t472 * t469;
t488 = t471 * t28;
t490 = t467 * t35 * t477 + t483 * t484 - t488 * t8;
t492 = t35 * t469;
t495 = -t477 * t28 * t472 + t492;
t501 = (-t477 * t478 * t8 + t474 * t475) * t26 + (t490 * t475 + t495 * t478) * t25 - t471 * t475 * t472;
t502 = 0.1e1 / t472;
t507 = t477 * t35;
t508 = t469 * t8 * t25 + t484 * t28 + t507;
t509 = 0.1e1 / t508;
t511 = m(3) * qJ(3,4) + mrSges(3,3);
t513 = t511 * t28 - mrSges(2,2) + t63;
t514 = t513 * g(3);
t518 = t475 * g(1) - t478 * g(2);
t527 = t513 * t518;
t531 = t518 * t80;
t536 = (-t518 * t511 * t25 + t518 * t62 * t28 + t514 * t469 + t81 * t477 + t83 * t518 + t85) * t467 + (g(3) * t511 * t25 + mrSges(1,1) * t518 + t527 * t469 + t531 * t477 + t93 - t97) * t471;
t537 = t509 * t536;
t539 = t35 * t475;
t542 = t472 * t26 - qJ(3,4) - t107 - t14;
t545 = t477 ^ 2;
t547 = t467 * t472;
t548 = t547 * t469;
t549 = t471 * t8;
t550 = -t548 + t549;
t553 = t28 * t474 * t25;
t556 = t469 * t28;
t557 = t478 * t35;
t562 = (t542 * t478 + t483 * t539) * t545 + ((t550 * t26 + t548 - t549 + t553) * t475 + t556 * t557) * t477 + t478 * t472;
t564 = t28 * t472;
t565 = t130 + t564;
t566 = t565 * t469;
t567 = t566 + t507;
t568 = 0.1e1 / t567;
t573 = t478 * g(1) + t475 * g(2);
t582 = (-t527 * t467 + t514 * t471 - t573 * t80) * t477 - (-t531 * t467 + t81 * t471 + t573 * t513) * t469;
t583 = t568 * t582;
t587 = t472 * t25 - t106;
t588 = t587 * t471;
t593 = (t158 - t564) * t477 + t492;
t595 = (t567 * t467 + t588) * t475 + t478 * t593;
t608 = (-t471 * t469 * g(3) + t469 * t518 * t467 - t573 * t477) * t28 + t25 * (g(3) * t467 + t471 * t518);
t609 = t608 * m(3);
t611 = cos(qJ(1,5));
t612 = t611 * t8;
t613 = sin(qJ(2,5));
t615 = sin(qJ(1,5));
t616 = t14 + qJ(3,5);
t618 = t612 * t613 + t615 * t616;
t619 = cos(legFrame(5,2));
t621 = cos(qJ(2,5));
t622 = sin(legFrame(5,2));
t627 = t611 * t28;
t628 = t616 * t613;
t632 = t615 * t28;
t634 = t611 * t35 * t621 + t627 * t628 - t632 * t8;
t636 = t35 * t613;
t639 = -t621 * t28 * t616 + t636;
t645 = (-t621 * t622 * t8 + t618 * t619) * t26 + (t634 * t619 + t639 * t622) * t25 - t615 * t619 * t616;
t646 = 0.1e1 / t616;
t651 = t621 * t35;
t652 = t613 * t8 * t25 + t628 * t28 + t651;
t653 = 0.1e1 / t652;
t655 = m(3) * qJ(3,5) + mrSges(3,3);
t657 = t655 * t28 - mrSges(2,2) + t63;
t658 = t657 * g(3);
t662 = t619 * g(1) - t622 * g(2);
t671 = t657 * t662;
t675 = t662 * t80;
t680 = (-t662 * t655 * t25 + t662 * t62 * t28 + t658 * t613 + t81 * t621 + t83 * t662 + t85) * t611 + (g(3) * t655 * t25 + mrSges(1,1) * t662 + t671 * t613 + t675 * t621 + t93 - t97) * t615;
t681 = t653 * t680;
t683 = t35 * t619;
t686 = t616 * t26 - qJ(3,5) - t107 - t14;
t689 = t621 ^ 2;
t691 = t611 * t616;
t692 = t691 * t613;
t693 = t615 * t8;
t694 = -t692 + t693;
t697 = t28 * t618 * t25;
t700 = t613 * t28;
t701 = t622 * t35;
t706 = (t686 * t622 + t627 * t683) * t689 + ((t694 * t26 + t692 - t693 + t697) * t619 + t700 * t701) * t621 + t622 * t616;
t708 = t28 * t616;
t709 = t130 + t708;
t710 = t709 * t613;
t711 = t710 + t651;
t712 = 0.1e1 / t711;
t717 = t622 * g(1) + t619 * g(2);
t726 = (-t671 * t611 + t658 * t615 - t717 * t80) * t621 - (-t675 * t611 + t81 * t615 + t717 * t657) * t613;
t727 = t712 * t726;
t731 = t616 * t25 - t106;
t732 = t731 * t615;
t737 = (t158 - t708) * t621 + t636;
t739 = (t711 * t611 + t732) * t619 + t622 * t737;
t752 = (-t615 * t613 * g(3) + t613 * t662 * t611 - t717 * t621) * t28 + t25 * (g(3) * t611 + t615 * t662);
t753 = t752 * m(3);
t755 = cos(qJ(1,6));
t756 = t755 * t8;
t757 = sin(qJ(2,6));
t759 = sin(qJ(1,6));
t760 = t14 + qJ(3,6);
t762 = t756 * t757 + t759 * t760;
t763 = cos(legFrame(6,2));
t765 = cos(qJ(2,6));
t766 = sin(legFrame(6,2));
t771 = t755 * t28;
t772 = t760 * t757;
t776 = t759 * t28;
t778 = t755 * t35 * t765 + t771 * t772 - t776 * t8;
t780 = t35 * t757;
t783 = -t765 * t28 * t760 + t780;
t789 = (-t765 * t766 * t8 + t762 * t763) * t26 + (t778 * t763 + t783 * t766) * t25 - t759 * t763 * t760;
t790 = 0.1e1 / t760;
t795 = t765 * t35;
t796 = t757 * t8 * t25 + t772 * t28 + t795;
t797 = 0.1e1 / t796;
t799 = m(3) * qJ(3,6) + mrSges(3,3);
t801 = t799 * t28 - mrSges(2,2) + t63;
t802 = t801 * g(3);
t806 = t763 * g(1) - t766 * g(2);
t815 = t801 * t806;
t819 = t806 * t80;
t824 = (-t806 * t799 * t25 + t806 * t62 * t28 + t802 * t757 + t81 * t765 + t83 * t806 + t85) * t755 + (g(3) * t799 * t25 + mrSges(1,1) * t806 + t815 * t757 + t819 * t765 + t93 - t97) * t759;
t825 = t797 * t824;
t827 = t35 * t763;
t830 = t760 * t26 - qJ(3,6) - t107 - t14;
t833 = t765 ^ 2;
t835 = t755 * t760;
t836 = t835 * t757;
t837 = t759 * t8;
t838 = -t836 + t837;
t841 = t28 * t762 * t25;
t844 = t757 * t28;
t845 = t766 * t35;
t850 = (t830 * t766 + t771 * t827) * t833 + ((t838 * t26 + t836 - t837 + t841) * t763 + t844 * t845) * t765 + t766 * t760;
t852 = t28 * t760;
t853 = t130 + t852;
t854 = t853 * t757;
t855 = t854 + t795;
t856 = 0.1e1 / t855;
t861 = t766 * g(1) + t763 * g(2);
t870 = (-t815 * t755 + t802 * t759 - t861 * t80) * t765 - (-t819 * t755 + t81 * t759 + t861 * t801) * t757;
t871 = t856 * t870;
t875 = t760 * t25 - t106;
t876 = t875 * t759;
t881 = (t158 - t852) * t765 + t780;
t883 = (t855 * t755 + t876) * t763 + t766 * t881;
t896 = (-t759 * t757 * g(3) + t757 * t806 * t755 - t861 * t765) * t28 + t25 * (g(3) * t755 + t759 * t806);
t897 = t896 * m(3);
t900 = t51 * t52 * t101 + t128 * t52 * t150 - t163 * t52 * t177 + t213 * t214 * t249 + t274 * t214 * t295 - t307 * t214 * t321 + t357 * t358 * t393 + t418 * t358 * t439 - t451 * t358 * t465 + t501 * t502 * t537 + t562 * t502 * t583 - t595 * t502 * t609 + t645 * t646 * t681 + t706 * t646 * t727 - t739 * t646 * t753 + t789 * t790 * t825 + t850 * t790 * t871 - t883 * t790 * t897 - g(1) * m(4);
t912 = (-t20 * t18 * t8 - t17 * t21) * t26 + (t45 * t18 - t40 * t21) * t25 + t12 * t21 * t15;
t926 = (t108 * t18 - t29 * t123) * t111 + ((-t116 * t26 - t114 + t115 - t119) * t21 + t122 * t103) * t20 + t18 * t15;
t935 = ((-t20 * t35 - t133) * t1 - t155) * t21 + t18 * t161;
t949 = (-t189 * t187 * t8 - t186 * t190) * t26 + (t207 * t187 - t202 * t190) * t25 + t183 * t190 * t184;
t963 = (t254 * t187 - t195 * t269) * t257 + ((-t262 * t26 - t260 + t261 - t265) * t190 + t268 * t251) * t189 + t187 * t184;
t972 = ((-t189 * t35 - t278) * t179 - t300) * t190 + t187 * t305;
t986 = (-t333 * t331 * t8 - t330 * t334) * t26 + (t351 * t331 - t346 * t334) * t25 + t327 * t334 * t328;
t1000 = (t398 * t331 - t339 * t413) * t401 + ((-t406 * t26 - t404 + t405 - t409) * t334 + t412 * t395) * t333 + t331 * t328;
t1009 = ((-t333 * t35 - t422) * t323 - t444) * t334 + t331 * t449;
t1023 = (-t477 * t475 * t8 - t474 * t478) * t26 + (t495 * t475 - t490 * t478) * t25 + t471 * t478 * t472;
t1037 = (t542 * t475 - t483 * t557) * t545 + ((-t550 * t26 - t548 + t549 - t553) * t478 + t556 * t539) * t477 + t475 * t472;
t1046 = ((-t477 * t35 - t566) * t467 - t588) * t478 + t475 * t593;
t1060 = (-t621 * t619 * t8 - t618 * t622) * t26 + (t639 * t619 - t634 * t622) * t25 + t615 * t622 * t616;
t1074 = (t686 * t619 - t627 * t701) * t689 + ((-t694 * t26 - t692 + t693 - t697) * t622 + t700 * t683) * t621 + t619 * t616;
t1083 = ((-t621 * t35 - t710) * t611 - t732) * t622 + t619 * t737;
t1097 = (-t765 * t763 * t8 - t762 * t766) * t26 + (t783 * t763 - t778 * t766) * t25 + t759 * t766 * t760;
t1111 = (t830 * t763 - t771 * t845) * t833 + ((-t838 * t26 - t836 + t837 - t841) * t766 + t844 * t827) * t765 + t763 * t760;
t1120 = ((-t765 * t35 - t854) * t755 - t876) * t766 + t763 * t881;
t1124 = t912 * t52 * t101 + t926 * t52 * t150 - t935 * t52 * t177 + t949 * t214 * t249 + t963 * t214 * t295 - t972 * t214 * t321 + t986 * t358 * t393 + t1000 * t358 * t439 - t1009 * t358 * t465 + t1023 * t502 * t537 + t1037 * t502 * t583 - t1046 * t502 * t609 + t1060 * t646 * t681 + t1074 * t646 * t727 - t1083 * t646 * t753 + t1097 * t790 * t825 + t1111 * t790 * t871 - t1120 * t790 * t897 - g(2) * m(4);
t1130 = t12 * t35 * t20;
t1131 = t9 * t28;
t1134 = (-t115 * t10 + t113) * t26 + (-t38 * t30 - t1130 - t1131) * t25 - t113;
t1141 = -t1 * t25 * t15 + t132 * t12 * t10 + t1130 + t1131;
t1144 = t52 * t135;
t1150 = (t154 * t1 - t58 * t12) * t52;
t1157 = t183 * t35 * t189;
t1158 = t180 * t28;
t1161 = (-t261 * t181 + t259) * t26 + (-t200 * t196 - t1157 - t1158) * t25 - t259;
t1168 = -t179 * t25 * t184 + t277 * t183 * t181 + t1157 + t1158;
t1171 = t214 * t280;
t1177 = (t299 * t179 - t220 * t183) * t214;
t1184 = t327 * t35 * t333;
t1185 = t324 * t28;
t1188 = (-t405 * t325 + t403) * t26 + (-t344 * t340 - t1184 - t1185) * t25 - t403;
t1195 = -t323 * t25 * t328 + t421 * t327 * t325 + t1184 + t1185;
t1198 = t358 * t424;
t1204 = (t443 * t323 - t364 * t327) * t358;
t1211 = t471 * t35 * t477;
t1212 = t468 * t28;
t1215 = (-t549 * t469 + t547) * t26 + (-t488 * t484 - t1211 - t1212) * t25 - t547;
t1222 = -t467 * t25 * t472 + t565 * t471 * t469 + t1211 + t1212;
t1225 = t502 * t568;
t1231 = (t587 * t467 - t508 * t471) * t502;
t1238 = t615 * t35 * t621;
t1239 = t612 * t28;
t1242 = (-t693 * t613 + t691) * t26 + (-t632 * t628 - t1238 - t1239) * t25 - t691;
t1249 = -t611 * t25 * t616 + t709 * t615 * t613 + t1238 + t1239;
t1252 = t646 * t712;
t1258 = (t731 * t611 - t652 * t615) * t646;
t1265 = t759 * t35 * t765;
t1266 = t756 * t28;
t1269 = (-t837 * t757 + t835) * t26 + (-t776 * t772 - t1265 - t1266) * t25 - t835;
t1276 = -t755 * t25 * t760 + t853 * t759 * t757 + t1265 + t1266;
t1279 = t790 * t856;
t1285 = (t875 * t755 - t796 * t759) * t790;
t1288 = t1134 * t52 * t101 - t20 * t1141 * t28 * t1144 * t149 - t1150 * t177 + t1161 * t214 * t249 - t189 * t1168 * t28 * t1171 * t294 - t1177 * t321 + t1188 * t358 * t393 - t333 * t1195 * t28 * t1198 * t438 - t1204 * t465 + t1215 * t502 * t537 - t477 * t1222 * t28 * t1225 * t582 - t1231 * t609 + t1242 * t646 * t681 - t621 * t1249 * t28 * t1252 * t726 - t1258 * t753 + t1269 * t790 * t825 - t765 * t1276 * t28 * t1279 * t870 - t1285 * t897 - g(3) * m(4);
t1289 = sin(xP(6));
t1291 = cos(xP(6));
t1293 = -t1289 * koppelP(1,2) + koppelP(1,1) * t1291;
t1294 = sin(xP(5));
t1296 = cos(xP(5));
t1297 = t1296 * koppelP(1,3);
t1298 = t1293 * t1294 - t1297;
t1299 = cos(xP(4));
t1301 = sin(xP(4));
t1304 = t1289 * koppelP(1,1) + koppelP(1,2) * t1291;
t1305 = t1301 * t1304;
t1306 = t1298 * t1299 - t1305;
t1308 = t52 * t59;
t1311 = t1299 * t1304;
t1312 = t1298 * t1301 + t1311;
t1322 = t28 * t52 * t135;
t1334 = -t1289 * koppelP(2,2) + koppelP(2,1) * t1291;
t1336 = t1296 * koppelP(2,3);
t1337 = t1334 * t1294 - t1336;
t1341 = t1289 * koppelP(2,1) + koppelP(2,2) * t1291;
t1342 = t1301 * t1341;
t1343 = t1337 * t1299 - t1342;
t1345 = t214 * t221;
t1348 = t1299 * t1341;
t1349 = t1337 * t1301 + t1348;
t1359 = t28 * t214 * t280;
t1371 = -t1289 * koppelP(3,2) + koppelP(3,1) * t1291;
t1373 = t1296 * koppelP(3,3);
t1374 = t1371 * t1294 - t1373;
t1378 = t1289 * koppelP(3,1) + koppelP(3,2) * t1291;
t1379 = t1301 * t1378;
t1380 = t1374 * t1299 - t1379;
t1382 = t358 * t365;
t1385 = t1299 * t1378;
t1386 = t1374 * t1301 + t1385;
t1396 = t28 * t358 * t424;
t1408 = -t1289 * koppelP(4,2) + koppelP(4,1) * t1291;
t1410 = t1296 * koppelP(4,3);
t1411 = t1408 * t1294 - t1410;
t1415 = t1289 * koppelP(4,1) + koppelP(4,2) * t1291;
t1416 = t1301 * t1415;
t1417 = t1411 * t1299 - t1416;
t1419 = t502 * t509;
t1422 = t1299 * t1415;
t1423 = t1411 * t1301 + t1422;
t1433 = t28 * t502 * t568;
t1445 = -t1289 * koppelP(5,2) + koppelP(5,1) * t1291;
t1447 = t1296 * koppelP(5,3);
t1448 = t1445 * t1294 - t1447;
t1452 = t1289 * koppelP(5,1) + koppelP(5,2) * t1291;
t1453 = t1301 * t1452;
t1454 = t1448 * t1299 - t1453;
t1456 = t646 * t653;
t1459 = t1299 * t1452;
t1460 = t1448 * t1301 + t1459;
t1470 = t28 * t646 * t712;
t1482 = -t1289 * koppelP(6,2) + koppelP(6,1) * t1291;
t1484 = t1296 * koppelP(6,3);
t1485 = t1482 * t1294 - t1484;
t1489 = t1289 * koppelP(6,1) + koppelP(6,2) * t1291;
t1490 = t1301 * t1489;
t1491 = t1485 * t1299 - t1490;
t1493 = t790 * t797;
t1496 = t1299 * t1489;
t1497 = t1485 * t1301 + t1496;
t1507 = t28 * t790 * t856;
t1517 = g(2) * t1294;
t1519 = g(3) * mrSges(4,2);
t1522 = t1289 * mrSges(4,2);
t1530 = t1294 * g(3);
t1532 = g(2) * mrSges(4,2);
t1543 = (t1312 * t1134 * t1308 + t1306 * t912 * t1308) * t100 + (-t1312 * t20 * t1141 * t1322 + t1306 * t926 * t1144) * t149 - (t1306 * t935 * t52 + t1150 * t1312) * t176 * m(3) + (t1349 * t1161 * t1345 + t1343 * t949 * t1345) * t248 + (-t1349 * t189 * t1168 * t1359 + t1343 * t963 * t1171) * t294 - (t1343 * t972 * t214 + t1177 * t1349) * t320 * m(3) + (t1386 * t1188 * t1382 + t1380 * t986 * t1382) * t392 + (-t1386 * t333 * t1195 * t1396 + t1380 * t1000 * t1198) * t438 - (t1380 * t1009 * t358 + t1204 * t1386) * t464 * m(3) + (t1417 * t1023 * t1419 + t1423 * t1215 * t1419) * t536 + (-t1423 * t477 * t1222 * t1433 + t1417 * t1037 * t1225) * t582 - (t1417 * t1046 * t502 + t1231 * t1423) * t608 * m(3) + (t1454 * t1060 * t1456 + t1460 * t1242 * t1456) * t680 + (-t1460 * t621 * t1249 * t1470 + t1454 * t1074 * t1252) * t726 - (t1454 * t1083 * t646 + t1258 * t1460) * t752 * m(3) + (t1491 * t1097 * t1493 + t1497 * t1269 * t1493) * t824 + (-t1497 * t765 * t1276 * t1507 + t1491 * t1111 * t1279) * t870 - (t1491 * t1120 * t790 + t1285 * t1497) * t896 * m(3) - ((t1517 * mrSges(4,1) + t1519) * t1291 - t1517 * t1522 - g(2) * t1296 * mrSges(4,3) + g(3) * mrSges(4,1) * t1289) * t1299 + ((-t1530 * mrSges(4,1) + t1532) * t1291 + t1294 * t1289 * t1519 + g(2) * t1289 * mrSges(4,1) + t1296 * g(3) * mrSges(4,3)) * t1301;
t1545 = -t1293 * t1294 + t1297;
t1547 = t1545 * t1299 + t1305;
t1550 = t1296 * t1291;
t1552 = t1296 * t1289;
t1555 = -t1294 * koppelP(1,3) - t1550 * koppelP(1,1) + t1552 * koppelP(1,2);
t1574 = -t1334 * t1294 + t1336;
t1576 = t1574 * t1299 + t1342;
t1582 = -t1294 * koppelP(2,3) - t1550 * koppelP(2,1) + t1552 * koppelP(2,2);
t1601 = -t1371 * t1294 + t1373;
t1603 = t1601 * t1299 + t1379;
t1609 = -t1294 * koppelP(3,3) - t1550 * koppelP(3,1) + t1552 * koppelP(3,2);
t1628 = -t1408 * t1294 + t1410;
t1630 = t1299 * t1628 + t1416;
t1636 = -t1294 * koppelP(4,3) - t1550 * koppelP(4,1) + t1552 * koppelP(4,2);
t1648 = (t1555 * t1134 * t1308 + t1547 * t51 * t1308) * t100 + (-t1555 * t20 * t1141 * t1322 + t1547 * t128 * t1144) * t149 - (t1547 * t163 * t52 + t1150 * t1555) * t176 * m(3) + (t1582 * t1161 * t1345 + t1576 * t213 * t1345) * t248 + (-t1582 * t189 * t1168 * t1359 + t1576 * t274 * t1171) * t294 - (t1576 * t307 * t214 + t1177 * t1582) * t320 * m(3) + (t1609 * t1188 * t1382 + t1603 * t357 * t1382) * t392 + (-t1609 * t333 * t1195 * t1396 + t1603 * t418 * t1198) * t438 - (t1603 * t451 * t358 + t1204 * t1609) * t464 * m(3) + (t1636 * t1215 * t1419 + t1630 * t501 * t1419) * t536 + (-t1636 * t477 * t1222 * t1433 + t1630 * t562 * t1225) * t582;
t1656 = -t1445 * t1294 + t1447;
t1658 = t1299 * t1656 + t1453;
t1664 = -t1294 * koppelP(5,3) - t1550 * koppelP(5,1) + t1552 * koppelP(5,2);
t1683 = -t1482 * t1294 + t1484;
t1685 = t1299 * t1683 + t1490;
t1691 = -t1294 * koppelP(6,3) - t1550 * koppelP(6,1) + t1552 * koppelP(6,2);
t1711 = t1291 * mrSges(4,1) - t1522;
t1722 = g(1) * mrSges(4,1);
t1725 = -(t1630 * t595 * t502 + t1231 * t1636) * t608 * m(3) + (t1664 * t1242 * t1456 + t1658 * t645 * t1456) * t680 + (-t1664 * t621 * t1249 * t1470 + t1658 * t706 * t1252) * t726 - (t1658 * t739 * t646 + t1258 * t1664) * t752 * m(3) + (t1691 * t1269 * t1493 + t1685 * t789 * t1493) * t824 + (-t1691 * t765 * t1276 * t1507 + t1685 * t850 * t1279) * t870 - (t1685 * t883 * t790 + t1285 * t1691) * t896 * m(3) - (-t1294 * t1711 + t1296 * mrSges(4,3)) * g(1) * t1299 + g(3) * t1711 * t1296 - t1291 * t1301 * g(1) * mrSges(4,2) - t1301 * t1289 * t1722 + t1530 * mrSges(4,3);
t1728 = t1545 * t1301 - t1311;
t1749 = t1574 * t1301 - t1348;
t1770 = t1601 * t1301 - t1385;
t1791 = t1301 * t1628 - t1422;
t1804 = (-t1555 * t912 * t1308 + t1728 * t51 * t1308) * t100 + (t1728 * t128 * t1144 - t1555 * t926 * t1144) * t149 - (-t1555 * t935 * t52 + t1728 * t163 * t52) * t176 * m(3) + (-t1582 * t949 * t1345 + t1749 * t213 * t1345) * t248 + (-t1582 * t963 * t1171 + t1749 * t274 * t1171) * t294 - (-t1582 * t972 * t214 + t1749 * t307 * t214) * t320 * m(3) + (-t1609 * t986 * t1382 + t1770 * t357 * t1382) * t392 + (-t1609 * t1000 * t1198 + t1770 * t418 * t1198) * t438 - (-t1609 * t1009 * t358 + t1770 * t451 * t358) * t464 * m(3) + (-t1636 * t1023 * t1419 + t1791 * t501 * t1419) * t536 + (-t1636 * t1037 * t1225 + t1791 * t562 * t1225) * t582;
t1813 = t1301 * t1656 - t1459;
t1834 = t1301 * t1683 - t1496;
t1861 = t1301 * t1294;
t1873 = -(-t1636 * t1046 * t502 + t1791 * t595 * t502) * t608 * m(3) + (-t1664 * t1060 * t1456 + t1813 * t645 * t1456) * t680 + (-t1664 * t1074 * t1252 + t1813 * t706 * t1252) * t726 - (-t1664 * t1083 * t646 + t1813 * t739 * t646) * t752 * m(3) + (-t1691 * t1097 * t1493 + t1834 * t789 * t1493) * t824 + (-t1691 * t1111 * t1279 + t1834 * t850 * t1279) * t870 - (-t1691 * t1120 * t790 + t1834 * t883 * t790) * t896 * m(3) - (g(1) * mrSges(4,3) * t1301 + g(2) * mrSges(4,1) * t1291 - t1532 * t1289) * t1296 + g(1) * (mrSges(4,2) * t1299 + t1861 * mrSges(4,1)) * t1291 - t1861 * t1289 * g(1) * mrSges(4,2) + t1299 * t1289 * t1722 - t1517 * mrSges(4,3);
unknown(1,1) = t900;
unknown(2,1) = t1124;
unknown(3,1) = t1288;
unknown(4,1) = t1543;
unknown(5,1) = t1648 + t1725;
unknown(6,1) = t1804 + t1873;
taugX  = unknown;
