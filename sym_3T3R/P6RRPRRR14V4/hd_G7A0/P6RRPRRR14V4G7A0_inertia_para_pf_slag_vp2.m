% Calculate inertia matrix for parallel robot
% P6RRPRRR14V4G7A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,alpha3,alpha4,d1,d4,theta3]';
% m [4x1]
%   mass of all robot links (leg links until cut joint, platform)
% mrSges [4x3]
%   first moment of all robot links (mass times center of mass in body frames)
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: x-, y-, z-coordinates
% Ifges [4x6]
%   inertia of all robot links about their respective body frame origins, in body frames
%   rows: links of the robot (leg links until cut joint, platform)
%   columns: xx, yy, zz, xy, xz, yz (see inertial_parameters_convert_par1_par2.m)
%
% Output:
% MX [6x6]
%   inertia matrix in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-03 12:07
% Revision: 5de314b2d97380370c92dd342c670b987640c890 (2022-02-04)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function MX = P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2(xP, qJ, legFrame, ...
  koppelP, pkin, m, mrSges, Ifges)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(6,3),zeros(6,3),zeros(7,1),zeros(3+1,1),zeros(3+1,3),zeros(3+1,6)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: xP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: qJ has to be [3x6] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: pkin has to be [7x1] (double)');
assert(isreal(m) && all(size(m) == [4 1]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: m has to be [4x1] (double)'); 
assert(isreal(mrSges) && all(size(mrSges) == [4,3]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: mrSges has to be [4x3] (double)');
assert(isreal(Ifges) && all(size(Ifges) == [4 6]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: Ifges has to be [4x6] (double)'); 
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V4G7A0_inertia_para_pf_slag_vp2: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From inertia_para_plfcoord_par2_matlab.m
% OptimizationMode: 1
% StartTime: 2022-11-03 09:21:01
% EndTime: 2022-11-03 09:21:08
% DurationCPUTime: 7.54s
% Computational Cost: add. (193815->1924), mult. (375123->3034), div. (9990->18), fcn. (326608->48), ass. (0->1050)
unknown=NaN(6,6);
t1 = cos(qJ(1,1));
t2 = cos(pkin(7));
t3 = sin(pkin(4));
t6 = sin(pkin(7));
t8 = t2 * t3 * pkin(6) - t6 * pkin(2);
t9 = t1 * t8;
t10 = sin(qJ(2,1));
t12 = sin(qJ(1,1));
t13 = cos(pkin(4));
t14 = t13 * pkin(6);
t15 = t14 + qJ(3,1);
t17 = t9 * t10 + t12 * t15;
t18 = cos(legFrame(1,2));
t20 = cos(qJ(2,1));
t21 = sin(legFrame(1,2));
t25 = cos(pkin(3));
t26 = t25 ^ 2;
t28 = sin(pkin(3));
t29 = t1 * t28;
t30 = t15 * t10;
t35 = t3 * t6 * pkin(6) + t2 * pkin(2) + pkin(1);
t38 = t12 * t28;
t40 = t1 * t35 * t20 + t29 * t30 - t38 * t8;
t42 = t35 * t10;
t45 = -t20 * t28 * t15 + t42;
t51 = (-t20 * t21 * t8 + t17 * t18) * t26 + (t40 * t18 + t45 * t21) * t25 - t12 * t18 * t15;
t52 = 0.1e1 / t15;
t53 = t51 * t52;
t57 = t20 * t35;
t58 = t10 * t8 * t25 + t30 * t28 + t57;
t59 = 0.1e1 / t58;
t60 = Ifges(3,2) - Ifges(3,1);
t63 = t2 ^ 2;
t64 = t60 * (t26 + 0.1e1) * t63;
t65 = t6 * Ifges(3,4);
t66 = t65 * t26;
t68 = -mrSges(3,2) * qJ(3,1) + Ifges(3,6);
t69 = t68 * t28;
t71 = pkin(1) * mrSges(3,1);
t74 = qJ(3,1) ^ 2;
t75 = m(3) * t74;
t77 = 0.2e1 * mrSges(3,3) * qJ(3,1);
t80 = t28 * t6;
t82 = -mrSges(3,1) * qJ(3,1) + Ifges(3,5);
t86 = pkin(1) ^ 2;
t87 = m(3) * t86;
t88 = pkin(1) * mrSges(3,2);
t90 = 0.2e1 * t88 * t6;
t91 = t64 + 0.2e1 * (-t69 * t25 + t65 + t66 + t71) * t2 + (t75 + t77 + Ifges(3,1) - Ifges(3,3)) * t26 - 0.2e1 * t80 * t82 * t25 - t75 + t87 - t90 - t77 + Ifges(2,2) - Ifges(3,2) + Ifges(3,3) - Ifges(2,1);
t92 = t20 ^ 2;
t96 = 0.2e1 * t25 * Ifges(3,4) * t63;
t99 = (-t60 * t6 - t88) * t25;
t105 = -pkin(1) * t6 * mrSges(3,1) - Ifges(3,4);
t106 = t105 * t25;
t110 = pkin(1) * (qJ(3,1) * m(3) + mrSges(3,3));
t116 = -t60 * t63;
t118 = 0.2e1 * t65 * t2;
t119 = t91 * t92 + 0.2e1 * (t96 + (-t28 * t82 + t99) * t2 + t106 + t69 * t6 + t110 * t28 + Ifges(2,4)) * t10 * t20 + t116 - t118 + t75 + t77 + Ifges(3,2) + Ifges(1,3) + Ifges(2,1);
t120 = t59 * t119;
t122 = t35 * t18;
t125 = t28 * t8;
t126 = t125 * t25;
t127 = t15 * t26 - qJ(3,1) - t126 - t14;
t131 = t1 * t15;
t132 = t131 * t10;
t133 = t12 * t8;
t134 = -t132 + t133;
t137 = t28 * t17 * t25;
t140 = t10 * t28;
t141 = t21 * t35;
t146 = (t29 * t122 + t127 * t21) * t92 + ((t134 * t26 + t132 - t133 + t137) * t18 + t140 * t141) * t20 + t21 * t15;
t147 = t146 * t52;
t148 = t8 * t25;
t149 = t28 * t15;
t150 = t148 + t149;
t151 = t150 * t10;
t152 = t151 + t57;
t153 = 0.1e1 / t152;
t155 = -t82 * t6;
t156 = t68 * t2 - t155;
t160 = t60 * t63;
t181 = -0.2e1 * Ifges(3,4) * t28 * t63 + (t60 * t6 + t88) * t28 * t2 - t105 * t28 - Ifges(2,5);
t183 = 0.2e1 * t156 * t20 * t26 + ((t160 + t118 + t75 + t77 - Ifges(3,3) + Ifges(3,1)) * t28 * t20 - t10 * (-t82 * t2 + t68 * t6 + t110)) * t25 + (-t68 * t2 + Ifges(2,6) + t155) * t20 - t10 * t181;
t184 = t153 * t183;
t188 = t15 * t25 - t125;
t189 = t188 * t12;
t192 = -t8 * t25;
t195 = (t192 - t149) * t20 + t42;
t197 = (t152 * t1 + t189) * t18 + t21 * t195;
t198 = t197 * t52;
t202 = m(3) * pkin(1) + mrSges(3,1) * t2 - mrSges(3,2) * t6;
t207 = t6 * mrSges(3,1) + t2 * mrSges(3,2);
t209 = -t202 * t20 * t25 + t207 * t10;
t211 = t53 * t120 + t147 * t184 + t198 * t209;
t213 = t52 * t59;
t215 = t59 * t183;
t223 = 0.2e1 * (t65 + t71) * t2;
t224 = (t116 - t118 - t75 - t77 - Ifges(3,1) + Ifges(3,3)) * t26 + 0.2e1 * t28 * t156 * t25 + t160 + t223 + t75 + t87 - t90 + t77 + Ifges(2,3) + Ifges(3,1);
t225 = t153 * t224;
t227 = t202 * t28;
t229 = t147 * t225 - t198 * t227 + t53 * t215;
t231 = t52 * t153;
t233 = t59 * t209;
t236 = t153 * t202 * t28;
t239 = t198 * m(3) - t147 * t236 + t53 * t233;
t242 = cos(qJ(1,2));
t243 = t242 * t8;
t244 = sin(qJ(2,2));
t246 = sin(qJ(1,2));
t247 = t14 + qJ(3,2);
t249 = t243 * t244 + t246 * t247;
t250 = cos(legFrame(2,2));
t252 = cos(qJ(2,2));
t253 = sin(legFrame(2,2));
t258 = t242 * t28;
t259 = t247 * t244;
t263 = t246 * t28;
t265 = t242 * t35 * t252 + t258 * t259 - t263 * t8;
t267 = t35 * t244;
t270 = -t252 * t28 * t247 + t267;
t276 = (-t252 * t253 * t8 + t249 * t250) * t26 + (t265 * t250 + t270 * t253) * t25 - t246 * t250 * t247;
t277 = 0.1e1 / t247;
t278 = t276 * t277;
t282 = t252 * t35;
t283 = t244 * t8 * t25 + t259 * t28 + t282;
t284 = 0.1e1 / t283;
t286 = -mrSges(3,2) * qJ(3,2) + Ifges(3,6);
t287 = t286 * t28;
t291 = qJ(3,2) ^ 2;
t292 = m(3) * t291;
t294 = 0.2e1 * mrSges(3,3) * qJ(3,2);
t298 = -mrSges(3,1) * qJ(3,2) + Ifges(3,5);
t302 = t64 + 0.2e1 * (-t287 * t25 + t65 + t66 + t71) * t2 + (t292 + t294 + Ifges(3,1) - Ifges(3,3)) * t26 - 0.2e1 * t80 * t298 * t25 - t292 + t87 - t90 - t294 + Ifges(2,2) - Ifges(3,2) + Ifges(3,3) - Ifges(2,1);
t303 = t252 ^ 2;
t311 = pkin(1) * (m(3) * qJ(3,2) + mrSges(3,3));
t317 = t302 * t303 + 0.2e1 * (t96 + (-t28 * t298 + t99) * t2 + t106 + t287 * t6 + t311 * t28 + Ifges(2,4)) * t244 * t252 + t116 - t118 + t292 + t294 + Ifges(3,2) + Ifges(1,3) + Ifges(2,1);
t318 = t284 * t317;
t320 = t35 * t250;
t323 = t247 * t26 - qJ(3,2) - t126 - t14;
t327 = t242 * t247;
t328 = t327 * t244;
t329 = t246 * t8;
t330 = -t328 + t329;
t333 = t28 * t249 * t25;
t336 = t244 * t28;
t337 = t253 * t35;
t342 = (t323 * t253 + t258 * t320) * t303 + ((t330 * t26 + t328 - t329 + t333) * t250 + t336 * t337) * t252 + t253 * t247;
t343 = t342 * t277;
t344 = t28 * t247;
t345 = t148 + t344;
t346 = t345 * t244;
t347 = t346 + t282;
t348 = 0.1e1 / t347;
t350 = -t298 * t6;
t351 = t286 * t2 - t350;
t368 = 0.2e1 * t351 * t252 * t26 + ((t160 + t118 + t292 + t294 - Ifges(3,3) + Ifges(3,1)) * t28 * t252 - t244 * (-t298 * t2 + t286 * t6 + t311)) * t25 + (-t286 * t2 + Ifges(2,6) + t350) * t252 - t244 * t181;
t369 = t348 * t368;
t373 = t247 * t25 - t125;
t374 = t373 * t246;
t379 = (t192 - t344) * t252 + t267;
t381 = (t347 * t242 + t374) * t250 + t253 * t379;
t382 = t381 * t277;
t386 = -t202 * t252 * t25 + t207 * t244;
t388 = t278 * t318 + t343 * t369 + t382 * t386;
t390 = t277 * t284;
t392 = t284 * t368;
t399 = (t116 - t118 - t292 - t294 - Ifges(3,1) + Ifges(3,3)) * t26 + 0.2e1 * t28 * t351 * t25 + t160 + t223 + t292 + t87 - t90 + t294 + Ifges(2,3) + Ifges(3,1);
t400 = t348 * t399;
t403 = -t382 * t227 + t278 * t392 + t343 * t400;
t405 = t277 * t348;
t407 = t284 * t386;
t410 = t348 * t202 * t28;
t413 = t382 * m(3) + t278 * t407 - t343 * t410;
t416 = cos(qJ(1,3));
t417 = t416 * t8;
t418 = sin(qJ(2,3));
t420 = sin(qJ(1,3));
t421 = t14 + qJ(3,3);
t423 = t417 * t418 + t420 * t421;
t424 = cos(legFrame(3,2));
t426 = cos(qJ(2,3));
t427 = sin(legFrame(3,2));
t432 = t416 * t28;
t433 = t421 * t418;
t437 = t420 * t28;
t439 = t416 * t35 * t426 + t432 * t433 - t437 * t8;
t441 = t35 * t418;
t444 = -t426 * t28 * t421 + t441;
t450 = (-t426 * t427 * t8 + t423 * t424) * t26 + (t439 * t424 + t444 * t427) * t25 - t420 * t424 * t421;
t451 = 0.1e1 / t421;
t452 = t450 * t451;
t456 = t426 * t35;
t457 = t418 * t8 * t25 + t433 * t28 + t456;
t458 = 0.1e1 / t457;
t460 = -mrSges(3,2) * qJ(3,3) + Ifges(3,6);
t461 = t460 * t28;
t465 = qJ(3,3) ^ 2;
t466 = m(3) * t465;
t468 = 0.2e1 * mrSges(3,3) * qJ(3,3);
t472 = -mrSges(3,1) * qJ(3,3) + Ifges(3,5);
t476 = t64 + 0.2e1 * (-t461 * t25 + t65 + t66 + t71) * t2 + (t466 + t468 + Ifges(3,1) - Ifges(3,3)) * t26 - 0.2e1 * t80 * t472 * t25 - t466 + t87 - t90 - t468 + Ifges(2,2) - Ifges(3,2) + Ifges(3,3) - Ifges(2,1);
t477 = t426 ^ 2;
t485 = pkin(1) * (m(3) * qJ(3,3) + mrSges(3,3));
t491 = t476 * t477 + 0.2e1 * (t96 + (-t28 * t472 + t99) * t2 + t106 + t461 * t6 + t485 * t28 + Ifges(2,4)) * t418 * t426 + t116 - t118 + t466 + t468 + Ifges(3,2) + Ifges(1,3) + Ifges(2,1);
t492 = t458 * t491;
t494 = t35 * t424;
t497 = t421 * t26 - qJ(3,3) - t126 - t14;
t501 = t416 * t421;
t502 = t501 * t418;
t503 = t420 * t8;
t504 = -t502 + t503;
t507 = t28 * t423 * t25;
t510 = t418 * t28;
t511 = t427 * t35;
t516 = (t497 * t427 + t432 * t494) * t477 + ((t504 * t26 + t502 - t503 + t507) * t424 + t510 * t511) * t426 + t427 * t421;
t517 = t516 * t451;
t518 = t28 * t421;
t519 = t148 + t518;
t520 = t519 * t418;
t521 = t520 + t456;
t522 = 0.1e1 / t521;
t524 = -t472 * t6;
t525 = t460 * t2 - t524;
t542 = 0.2e1 * t525 * t426 * t26 + ((t160 + t118 + t466 + t468 - Ifges(3,3) + Ifges(3,1)) * t28 * t426 - t418 * (-t472 * t2 + t460 * t6 + t485)) * t25 + (-t460 * t2 + Ifges(2,6) + t524) * t426 - t418 * t181;
t543 = t522 * t542;
t547 = t421 * t25 - t125;
t548 = t547 * t420;
t553 = (t192 - t518) * t426 + t441;
t555 = (t521 * t416 + t548) * t424 + t427 * t553;
t556 = t555 * t451;
t560 = -t202 * t426 * t25 + t207 * t418;
t562 = t452 * t492 + t517 * t543 + t556 * t560;
t564 = t451 * t458;
t566 = t458 * t542;
t573 = (t116 - t118 - t466 - t468 - Ifges(3,1) + Ifges(3,3)) * t26 + 0.2e1 * t28 * t525 * t25 + t160 + t223 + t466 + t87 - t90 + t468 + Ifges(2,3) + Ifges(3,1);
t574 = t522 * t573;
t577 = -t556 * t227 + t452 * t566 + t517 * t574;
t579 = t451 * t522;
t581 = t458 * t560;
t584 = t522 * t202 * t28;
t587 = t556 * m(3) + t452 * t581 - t517 * t584;
t590 = cos(qJ(1,4));
t591 = t590 * t8;
t592 = sin(qJ(2,4));
t594 = sin(qJ(1,4));
t595 = t14 + qJ(3,4);
t597 = t591 * t592 + t594 * t595;
t598 = cos(legFrame(4,2));
t600 = cos(qJ(2,4));
t601 = sin(legFrame(4,2));
t606 = t590 * t28;
t607 = t595 * t592;
t611 = t594 * t28;
t613 = t590 * t35 * t600 + t606 * t607 - t611 * t8;
t615 = t35 * t592;
t618 = -t600 * t28 * t595 + t615;
t624 = (-t600 * t601 * t8 + t597 * t598) * t26 + (t613 * t598 + t618 * t601) * t25 - t594 * t598 * t595;
t625 = 0.1e1 / t595;
t626 = t624 * t625;
t630 = t600 * t35;
t631 = t592 * t8 * t25 + t607 * t28 + t630;
t632 = 0.1e1 / t631;
t634 = -mrSges(3,2) * qJ(3,4) + Ifges(3,6);
t635 = t634 * t28;
t639 = qJ(3,4) ^ 2;
t640 = m(3) * t639;
t642 = 0.2e1 * mrSges(3,3) * qJ(3,4);
t646 = -mrSges(3,1) * qJ(3,4) + Ifges(3,5);
t650 = t64 + 0.2e1 * (-t635 * t25 + t65 + t66 + t71) * t2 + (t640 + t642 + Ifges(3,1) - Ifges(3,3)) * t26 - 0.2e1 * t80 * t646 * t25 - t640 + t87 - t90 - t642 + Ifges(2,2) - Ifges(3,2) + Ifges(3,3) - Ifges(2,1);
t651 = t600 ^ 2;
t659 = pkin(1) * (m(3) * qJ(3,4) + mrSges(3,3));
t665 = t650 * t651 + 0.2e1 * (t96 + (-t28 * t646 + t99) * t2 + t106 + t635 * t6 + t659 * t28 + Ifges(2,4)) * t592 * t600 + t116 - t118 + t640 + t642 + Ifges(3,2) + Ifges(1,3) + Ifges(2,1);
t666 = t632 * t665;
t668 = t35 * t598;
t671 = t595 * t26 - qJ(3,4) - t126 - t14;
t675 = t590 * t595;
t676 = t675 * t592;
t677 = t594 * t8;
t678 = -t676 + t677;
t681 = t28 * t597 * t25;
t684 = t592 * t28;
t685 = t601 * t35;
t690 = (t671 * t601 + t606 * t668) * t651 + ((t678 * t26 + t676 - t677 + t681) * t598 + t684 * t685) * t600 + t601 * t595;
t691 = t690 * t625;
t692 = t28 * t595;
t693 = t148 + t692;
t694 = t693 * t592;
t695 = t694 + t630;
t696 = 0.1e1 / t695;
t698 = -t646 * t6;
t699 = t634 * t2 - t698;
t716 = 0.2e1 * t699 * t600 * t26 + ((t160 + t118 + t640 + t642 - Ifges(3,3) + Ifges(3,1)) * t28 * t600 - t592 * (-t646 * t2 + t634 * t6 + t659)) * t25 + (-t634 * t2 + Ifges(2,6) + t698) * t600 - t592 * t181;
t717 = t696 * t716;
t721 = t595 * t25 - t125;
t722 = t721 * t594;
t727 = (t192 - t692) * t600 + t615;
t729 = (t695 * t590 + t722) * t598 + t601 * t727;
t730 = t729 * t625;
t734 = -t202 * t600 * t25 + t207 * t592;
t736 = t626 * t666 + t691 * t717 + t730 * t734;
t738 = t625 * t632;
t740 = t632 * t716;
t747 = (t116 - t118 - t640 - t642 - Ifges(3,1) + Ifges(3,3)) * t26 + 0.2e1 * t28 * t699 * t25 + t160 + t223 + t640 + t87 - t90 + t642 + Ifges(2,3) + Ifges(3,1);
t748 = t696 * t747;
t751 = -t730 * t227 + t626 * t740 + t691 * t748;
t753 = t625 * t696;
t755 = t632 * t734;
t758 = t696 * t202 * t28;
t761 = t730 * m(3) + t626 * t755 - t691 * t758;
t764 = cos(qJ(1,5));
t765 = t764 * t8;
t766 = sin(qJ(2,5));
t768 = sin(qJ(1,5));
t769 = t14 + qJ(3,5);
t771 = t765 * t766 + t768 * t769;
t772 = cos(legFrame(5,2));
t774 = cos(qJ(2,5));
t775 = sin(legFrame(5,2));
t780 = t764 * t28;
t781 = t769 * t766;
t785 = t768 * t28;
t787 = t764 * t35 * t774 + t780 * t781 - t785 * t8;
t789 = t35 * t766;
t792 = -t774 * t28 * t769 + t789;
t798 = (-t774 * t775 * t8 + t771 * t772) * t26 + (t787 * t772 + t792 * t775) * t25 - t768 * t772 * t769;
t799 = 0.1e1 / t769;
t800 = t798 * t799;
t804 = t774 * t35;
t805 = t766 * t8 * t25 + t781 * t28 + t804;
t806 = 0.1e1 / t805;
t808 = -mrSges(3,2) * qJ(3,5) + Ifges(3,6);
t809 = t808 * t28;
t813 = qJ(3,5) ^ 2;
t814 = m(3) * t813;
t816 = 0.2e1 * mrSges(3,3) * qJ(3,5);
t820 = -mrSges(3,1) * qJ(3,5) + Ifges(3,5);
t824 = t64 + 0.2e1 * (-t809 * t25 + t65 + t66 + t71) * t2 + (t814 + t816 + Ifges(3,1) - Ifges(3,3)) * t26 - 0.2e1 * t80 * t820 * t25 - t814 + t87 - t90 - t816 + Ifges(2,2) - Ifges(3,2) + Ifges(3,3) - Ifges(2,1);
t825 = t774 ^ 2;
t833 = pkin(1) * (m(3) * qJ(3,5) + mrSges(3,3));
t839 = t824 * t825 + 0.2e1 * (t96 + (-t28 * t820 + t99) * t2 + t106 + t809 * t6 + t833 * t28 + Ifges(2,4)) * t766 * t774 + t116 - t118 + t814 + t816 + Ifges(3,2) + Ifges(1,3) + Ifges(2,1);
t840 = t806 * t839;
t842 = t35 * t772;
t845 = t769 * t26 - qJ(3,5) - t126 - t14;
t849 = t764 * t769;
t850 = t849 * t766;
t851 = t768 * t8;
t852 = -t850 + t851;
t855 = t28 * t771 * t25;
t858 = t766 * t28;
t859 = t775 * t35;
t864 = (t845 * t775 + t780 * t842) * t825 + ((t852 * t26 + t850 - t851 + t855) * t772 + t858 * t859) * t774 + t775 * t769;
t865 = t864 * t799;
t866 = t28 * t769;
t867 = t148 + t866;
t868 = t867 * t766;
t869 = t868 + t804;
t870 = 0.1e1 / t869;
t872 = -t820 * t6;
t873 = t808 * t2 - t872;
t890 = 0.2e1 * t873 * t774 * t26 + ((t160 + t118 + t814 + t816 - Ifges(3,3) + Ifges(3,1)) * t28 * t774 - t766 * (-t820 * t2 + t808 * t6 + t833)) * t25 + (-t808 * t2 + Ifges(2,6) + t872) * t774 - t766 * t181;
t891 = t870 * t890;
t895 = t769 * t25 - t125;
t896 = t895 * t768;
t901 = (t192 - t866) * t774 + t789;
t903 = (t869 * t764 + t896) * t772 + t775 * t901;
t904 = t903 * t799;
t908 = -t202 * t774 * t25 + t207 * t766;
t910 = t800 * t840 + t865 * t891 + t904 * t908;
t912 = t799 * t806;
t914 = t806 * t890;
t921 = (t116 - t118 - t814 - t816 - Ifges(3,1) + Ifges(3,3)) * t26 + 0.2e1 * t28 * t873 * t25 + t160 + t223 + t814 + t87 - t90 + t816 + Ifges(2,3) + Ifges(3,1);
t922 = t870 * t921;
t925 = -t904 * t227 + t800 * t914 + t865 * t922;
t927 = t799 * t870;
t929 = t806 * t908;
t932 = t870 * t202 * t28;
t935 = t904 * m(3) + t800 * t929 - t865 * t932;
t938 = cos(qJ(1,6));
t939 = t938 * t8;
t940 = sin(qJ(2,6));
t942 = sin(qJ(1,6));
t943 = t14 + qJ(3,6);
t945 = t939 * t940 + t942 * t943;
t946 = cos(legFrame(6,2));
t948 = cos(qJ(2,6));
t949 = sin(legFrame(6,2));
t954 = t938 * t28;
t955 = t943 * t940;
t959 = t942 * t28;
t961 = t938 * t35 * t948 - t959 * t8 + t954 * t955;
t963 = t35 * t940;
t966 = -t948 * t28 * t943 + t963;
t972 = (-t948 * t949 * t8 + t945 * t946) * t26 + (t961 * t946 + t966 * t949) * t25 - t942 * t946 * t943;
t973 = 0.1e1 / t943;
t974 = t972 * t973;
t978 = t948 * t35;
t979 = t940 * t8 * t25 + t955 * t28 + t978;
t980 = 0.1e1 / t979;
t982 = -mrSges(3,2) * qJ(3,6) + Ifges(3,6);
t983 = t982 * t28;
t987 = qJ(3,6) ^ 2;
t988 = m(3) * t987;
t990 = 0.2e1 * mrSges(3,3) * qJ(3,6);
t994 = -mrSges(3,1) * qJ(3,6) + Ifges(3,5);
t998 = t64 + 0.2e1 * (-t983 * t25 + t65 + t66 + t71) * t2 + (t988 + t990 + Ifges(3,1) - Ifges(3,3)) * t26 - 0.2e1 * t80 * t994 * t25 - t988 + t87 - t90 - t990 + Ifges(2,2) - Ifges(3,2) + Ifges(3,3) - Ifges(2,1);
t999 = t948 ^ 2;
t1007 = pkin(1) * (m(3) * qJ(3,6) + mrSges(3,3));
t1013 = t998 * t999 + 0.2e1 * (t96 + (-t28 * t994 + t99) * t2 + t106 + t983 * t6 + t1007 * t28 + Ifges(2,4)) * t940 * t948 + t116 - t118 + t988 + t990 + Ifges(3,2) + Ifges(1,3) + Ifges(2,1);
t1014 = t980 * t1013;
t1016 = t35 * t946;
t1019 = t943 * t26 - qJ(3,6) - t126 - t14;
t1023 = t938 * t943;
t1024 = t1023 * t940;
t1025 = t942 * t8;
t1026 = -t1024 + t1025;
t1029 = t28 * t945 * t25;
t1032 = t940 * t28;
t1033 = t949 * t35;
t1038 = (t954 * t1016 + t1019 * t949) * t999 + ((t1026 * t26 + t1024 - t1025 + t1029) * t946 + t1032 * t1033) * t948 + t949 * t943;
t1039 = t1038 * t973;
t1040 = t28 * t943;
t1041 = t148 + t1040;
t1042 = t1041 * t940;
t1043 = t1042 + t978;
t1044 = 0.1e1 / t1043;
t1046 = -t994 * t6;
t1047 = t982 * t2 - t1046;
t1064 = 0.2e1 * t1047 * t948 * t26 + ((t160 + t118 + t988 + t990 - Ifges(3,3) + Ifges(3,1)) * t28 * t948 - t940 * (-t994 * t2 + t982 * t6 + t1007)) * t25 + (-t982 * t2 + Ifges(2,6) + t1046) * t948 - t940 * t181;
t1065 = t1044 * t1064;
t1069 = t943 * t25 - t125;
t1070 = t1069 * t942;
t1075 = (t192 - t1040) * t948 + t963;
t1077 = (t1043 * t938 + t1070) * t946 + t949 * t1075;
t1078 = t1077 * t973;
t1082 = -t202 * t948 * t25 + t207 * t940;
t1084 = t974 * t1014 + t1039 * t1065 + t1078 * t1082;
t1086 = t973 * t980;
t1088 = t980 * t1064;
t1095 = (t116 - t118 - t988 - t990 - Ifges(3,1) + Ifges(3,3)) * t26 + 0.2e1 * t28 * t1047 * t25 + t160 + t223 + t988 + t87 - t90 + t990 + Ifges(2,3) + Ifges(3,1);
t1096 = t1044 * t1095;
t1099 = t1039 * t1096 - t1078 * t227 + t974 * t1088;
t1101 = t973 * t1044;
t1103 = t980 * t1082;
t1106 = t1044 * t202 * t28;
t1109 = t1078 * m(3) - t1039 * t1106 + t974 * t1103;
t1112 = t211 * t51 * t213 + t229 * t146 * t231 + t239 * t197 * t52 + t388 * t276 * t390 + t403 * t342 * t405 + t413 * t381 * t277 + t562 * t450 * t564 + t577 * t516 * t579 + t587 * t555 * t451 + t736 * t624 * t738 + t751 * t690 * t753 + t761 * t729 * t625 + t910 * t798 * t912 + t925 * t864 * t927 + t935 * t903 * t799 + t1084 * t972 * t1086 + t1099 * t1038 * t1101 + t1109 * t1077 * t973 + m(4);
t1124 = (-t20 * t18 * t8 - t17 * t21) * t26 + (t45 * t18 - t40 * t21) * t25 + t12 * t21 * t15;
t1138 = (t127 * t18 - t29 * t141) * t92 + ((-t134 * t26 - t132 + t133 - t137) * t21 + t140 * t122) * t20 + t18 * t15;
t1147 = ((-t20 * t35 - t151) * t1 - t189) * t21 + t18 * t195;
t1161 = (-t252 * t250 * t8 - t249 * t253) * t26 + (t270 * t250 - t265 * t253) * t25 + t246 * t253 * t247;
t1175 = (t323 * t250 - t258 * t337) * t303 + ((-t330 * t26 - t328 + t329 - t333) * t253 + t336 * t320) * t252 + t250 * t247;
t1184 = ((-t252 * t35 - t346) * t242 - t374) * t253 + t250 * t379;
t1198 = (-t426 * t424 * t8 - t423 * t427) * t26 + (t444 * t424 - t439 * t427) * t25 + t420 * t427 * t421;
t1212 = (t497 * t424 - t432 * t511) * t477 + ((-t504 * t26 - t502 + t503 - t507) * t427 + t510 * t494) * t426 + t424 * t421;
t1221 = ((-t426 * t35 - t520) * t416 - t548) * t427 + t424 * t553;
t1235 = (-t600 * t598 * t8 - t597 * t601) * t26 + (t618 * t598 - t613 * t601) * t25 + t594 * t601 * t595;
t1249 = (t671 * t598 - t606 * t685) * t651 + ((-t678 * t26 - t676 + t677 - t681) * t601 + t684 * t668) * t600 + t598 * t595;
t1258 = ((-t600 * t35 - t694) * t590 - t722) * t601 + t598 * t727;
t1272 = (-t774 * t772 * t8 - t771 * t775) * t26 + (t792 * t772 - t787 * t775) * t25 + t768 * t775 * t769;
t1286 = (t845 * t772 - t780 * t859) * t825 + ((-t852 * t26 - t850 + t851 - t855) * t775 + t858 * t842) * t774 + t772 * t769;
t1295 = ((-t774 * t35 - t868) * t764 - t896) * t775 + t772 * t901;
t1309 = (-t948 * t946 * t8 - t945 * t949) * t26 + (t966 * t946 - t961 * t949) * t25 + t942 * t949 * t943;
t1323 = (t1019 * t946 - t954 * t1033) * t999 + ((-t1026 * t26 - t1024 + t1025 - t1029) * t949 + t1032 * t1016) * t948 + t946 * t943;
t1332 = ((-t948 * t35 - t1042) * t938 - t1070) * t949 + t946 * t1075;
t1335 = t211 * t1124 * t213 + t229 * t1138 * t231 + t239 * t1147 * t52 + t388 * t1161 * t390 + t403 * t1175 * t405 + t413 * t1184 * t277 + t562 * t1198 * t564 + t577 * t1212 * t579 + t587 * t1221 * t451 + t736 * t1235 * t738 + t751 * t1249 * t753 + t761 * t1258 * t625 + t910 * t1272 * t912 + t925 * t1286 * t927 + t935 * t1295 * t799 + t1084 * t1309 * t1086 + t1099 * t1323 * t1101 + t1109 * t1332 * t973;
t1341 = t12 * t35 * t20;
t1342 = t9 * t28;
t1345 = (-t133 * t10 + t131) * t26 + (-t38 * t30 - t1341 - t1342) * t25 - t131;
t1353 = -t1 * t25 * t15 + t150 * t12 * t10 + t1341 + t1342;
t1356 = t28 * t52 * t153;
t1360 = t188 * t1 - t58 * t12;
t1368 = t246 * t35 * t252;
t1369 = t243 * t28;
t1372 = (-t329 * t244 + t327) * t26 + (-t263 * t259 - t1368 - t1369) * t25 - t327;
t1380 = -t242 * t25 * t247 + t345 * t246 * t244 + t1368 + t1369;
t1383 = t28 * t277 * t348;
t1387 = t373 * t242 - t283 * t246;
t1395 = t420 * t35 * t426;
t1396 = t417 * t28;
t1399 = (-t503 * t418 + t501) * t26 + (-t437 * t433 - t1395 - t1396) * t25 - t501;
t1407 = -t416 * t25 * t421 + t519 * t420 * t418 + t1395 + t1396;
t1410 = t28 * t451 * t522;
t1414 = t547 * t416 - t457 * t420;
t1422 = t594 * t35 * t600;
t1423 = t591 * t28;
t1426 = (-t677 * t592 + t675) * t26 + (-t611 * t607 - t1422 - t1423) * t25 - t675;
t1434 = -t590 * t25 * t595 + t693 * t594 * t592 + t1422 + t1423;
t1437 = t28 * t625 * t696;
t1441 = t721 * t590 - t631 * t594;
t1449 = t768 * t35 * t774;
t1450 = t765 * t28;
t1453 = (-t851 * t766 + t849) * t26 + (-t785 * t781 - t1449 - t1450) * t25 - t849;
t1461 = -t764 * t25 * t769 + t867 * t768 * t766 + t1449 + t1450;
t1464 = t28 * t799 * t870;
t1468 = t895 * t764 - t805 * t768;
t1476 = t942 * t35 * t948;
t1477 = t939 * t28;
t1480 = (-t1025 * t940 + t1023) * t26 + (-t959 * t955 - t1476 - t1477) * t25 - t1023;
t1488 = t1041 * t942 * t940 - t938 * t25 * t943 + t1476 + t1477;
t1491 = t28 * t973 * t1044;
t1495 = t1069 * t938 - t979 * t942;
t1498 = t211 * t1345 * t213 - t229 * t20 * t1353 * t1356 + t239 * t1360 * t52 + t388 * t1372 * t390 - t403 * t252 * t1380 * t1383 + t413 * t1387 * t277 + t562 * t1399 * t564 - t577 * t426 * t1407 * t1410 + t587 * t1414 * t451 + t736 * t1426 * t738 - t751 * t600 * t1434 * t1437 + t761 * t1441 * t625 + t910 * t1453 * t912 - t925 * t774 * t1461 * t1464 + t935 * t1468 * t799 + t1084 * t1480 * t1086 - t1099 * t948 * t1488 * t1491 + t1109 * t1495 * t973;
t1499 = sin(xP(6));
t1501 = cos(xP(6));
t1503 = -t1499 * koppelP(1,2) + koppelP(1,1) * t1501;
t1504 = sin(xP(5));
t1506 = cos(xP(5));
t1507 = t1506 * koppelP(1,3);
t1508 = t1503 * t1504 - t1507;
t1509 = cos(xP(4));
t1511 = sin(xP(4));
t1514 = t1499 * koppelP(1,1) + koppelP(1,2) * t1501;
t1515 = t1511 * t1514;
t1516 = t1508 * t1509 - t1515;
t1520 = t1509 * t1514;
t1521 = t1508 * t1511 + t1520;
t1524 = t1516 * t1124 * t213 + t1521 * t1345 * t213;
t1525 = t211 * t1524;
t1531 = -t1521 * t20 * t1353 * t1356 + t1516 * t1138 * t231;
t1532 = t229 * t1531;
t1535 = t1360 * t52;
t1537 = t1516 * t1147 * t52 + t1535 * t1521;
t1538 = t239 * t1537;
t1541 = -t1499 * koppelP(2,2) + koppelP(2,1) * t1501;
t1543 = t1506 * koppelP(2,3);
t1544 = t1541 * t1504 - t1543;
t1548 = t1499 * koppelP(2,1) + koppelP(2,2) * t1501;
t1549 = t1511 * t1548;
t1550 = t1544 * t1509 - t1549;
t1554 = t1509 * t1548;
t1555 = t1544 * t1511 + t1554;
t1558 = t1550 * t1161 * t390 + t1555 * t1372 * t390;
t1559 = t388 * t1558;
t1565 = -t1555 * t252 * t1380 * t1383 + t1550 * t1175 * t405;
t1566 = t403 * t1565;
t1569 = t1387 * t277;
t1571 = t1550 * t1184 * t277 + t1569 * t1555;
t1572 = t413 * t1571;
t1575 = -t1499 * koppelP(3,2) + koppelP(3,1) * t1501;
t1577 = t1506 * koppelP(3,3);
t1578 = t1575 * t1504 - t1577;
t1582 = t1499 * koppelP(3,1) + koppelP(3,2) * t1501;
t1583 = t1511 * t1582;
t1584 = t1578 * t1509 - t1583;
t1588 = t1509 * t1582;
t1589 = t1578 * t1511 + t1588;
t1592 = t1584 * t1198 * t564 + t1589 * t1399 * t564;
t1593 = t562 * t1592;
t1599 = -t1589 * t426 * t1407 * t1410 + t1584 * t1212 * t579;
t1600 = t577 * t1599;
t1603 = t1414 * t451;
t1605 = t1584 * t1221 * t451 + t1603 * t1589;
t1606 = t587 * t1605;
t1609 = -t1499 * koppelP(4,2) + koppelP(4,1) * t1501;
t1611 = t1506 * koppelP(4,3);
t1612 = t1609 * t1504 - t1611;
t1616 = t1499 * koppelP(4,1) + koppelP(4,2) * t1501;
t1617 = t1511 * t1616;
t1618 = t1612 * t1509 - t1617;
t1622 = t1509 * t1616;
t1623 = t1612 * t1511 + t1622;
t1626 = t1618 * t1235 * t738 + t1623 * t1426 * t738;
t1627 = t736 * t1626;
t1633 = -t1623 * t600 * t1434 * t1437 + t1618 * t1249 * t753;
t1634 = t751 * t1633;
t1637 = t1441 * t625;
t1639 = t1618 * t1258 * t625 + t1637 * t1623;
t1640 = t761 * t1639;
t1643 = -t1499 * koppelP(5,2) + koppelP(5,1) * t1501;
t1645 = t1506 * koppelP(5,3);
t1646 = t1643 * t1504 - t1645;
t1650 = t1499 * koppelP(5,1) + koppelP(5,2) * t1501;
t1651 = t1511 * t1650;
t1652 = t1646 * t1509 - t1651;
t1656 = t1509 * t1650;
t1657 = t1646 * t1511 + t1656;
t1660 = t1652 * t1272 * t912 + t1657 * t1453 * t912;
t1661 = t910 * t1660;
t1667 = -t1657 * t774 * t1461 * t1464 + t1652 * t1286 * t927;
t1668 = t925 * t1667;
t1671 = t1468 * t799;
t1673 = t1652 * t1295 * t799 + t1671 * t1657;
t1674 = t935 * t1673;
t1677 = -t1499 * koppelP(6,2) + koppelP(6,1) * t1501;
t1679 = t1506 * koppelP(6,3);
t1680 = t1677 * t1504 - t1679;
t1684 = t1499 * koppelP(6,1) + koppelP(6,2) * t1501;
t1685 = t1511 * t1684;
t1686 = t1680 * t1509 - t1685;
t1690 = t1509 * t1684;
t1691 = t1680 * t1511 + t1690;
t1694 = t1686 * t1309 * t1086 + t1691 * t1480 * t1086;
t1695 = t1084 * t1694;
t1701 = -t1691 * t948 * t1488 * t1491 + t1686 * t1323 * t1101;
t1702 = t1099 * t1701;
t1705 = t1495 * t973;
t1707 = t1686 * t1332 * t973 + t1705 * t1691;
t1708 = t1109 * t1707;
t1709 = t1525 + t1532 + t1538 + t1559 + t1566 + t1572 + t1593 + t1600 + t1606 + t1627 + t1634 + t1640 + t1661 + t1668 + t1674 + t1695 + t1702 + t1708;
t1711 = -t1503 * t1504 + t1507;
t1713 = t1711 * t1509 + t1515;
t1716 = t1506 * t1501;
t1718 = t1506 * t1499;
t1721 = -t1504 * koppelP(1,3) - t1716 * koppelP(1,1) + t1718 * koppelP(1,2);
t1724 = t1721 * t1345 * t213 + t1713 * t51 * t213;
t1731 = -t1721 * t20 * t1353 * t1356 + t1713 * t146 * t231;
t1736 = t1713 * t197 * t52 + t1535 * t1721;
t1738 = t211 * t1724 + t229 * t1731 + t239 * t1736;
t1741 = t1711 * t1511 - t1520;
t1746 = -t1721 * t1124 * t213 + t1741 * t51 * t213;
t1752 = -t1721 * t1138 * t231 + t1741 * t146 * t231;
t1758 = -t1721 * t1147 * t52 + t1741 * t197 * t52;
t1760 = t211 * t1746 + t229 * t1752 + t239 * t1758;
t1763 = -t1541 * t1504 + t1543;
t1765 = t1763 * t1509 + t1549;
t1771 = -t1504 * koppelP(2,3) - t1716 * koppelP(2,1) + t1718 * koppelP(2,2);
t1774 = t1771 * t1372 * t390 + t1765 * t276 * t390;
t1781 = -t1771 * t252 * t1380 * t1383 + t1765 * t342 * t405;
t1786 = t1765 * t381 * t277 + t1569 * t1771;
t1788 = t388 * t1774 + t403 * t1781 + t413 * t1786;
t1791 = t1763 * t1511 - t1554;
t1796 = -t1771 * t1161 * t390 + t1791 * t276 * t390;
t1802 = -t1771 * t1175 * t405 + t1791 * t342 * t405;
t1808 = -t1771 * t1184 * t277 + t1791 * t381 * t277;
t1810 = t388 * t1796 + t403 * t1802 + t413 * t1808;
t1813 = -t1575 * t1504 + t1577;
t1815 = t1813 * t1509 + t1583;
t1821 = -t1504 * koppelP(3,3) - t1716 * koppelP(3,1) + t1718 * koppelP(3,2);
t1824 = t1821 * t1399 * t564 + t1815 * t450 * t564;
t1831 = -t1821 * t426 * t1407 * t1410 + t1815 * t516 * t579;
t1836 = t1815 * t555 * t451 + t1603 * t1821;
t1838 = t562 * t1824 + t577 * t1831 + t587 * t1836;
t1841 = t1813 * t1511 - t1588;
t1846 = -t1821 * t1198 * t564 + t1841 * t450 * t564;
t1852 = -t1821 * t1212 * t579 + t1841 * t516 * t579;
t1858 = -t1821 * t1221 * t451 + t1841 * t555 * t451;
t1860 = t562 * t1846 + t577 * t1852 + t587 * t1858;
t1863 = -t1609 * t1504 + t1611;
t1865 = t1509 * t1863 + t1617;
t1871 = -t1504 * koppelP(4,3) - t1716 * koppelP(4,1) + t1718 * koppelP(4,2);
t1874 = t1871 * t1426 * t738 + t1865 * t624 * t738;
t1881 = -t1871 * t600 * t1434 * t1437 + t1865 * t690 * t753;
t1886 = t1865 * t729 * t625 + t1637 * t1871;
t1888 = t736 * t1874 + t751 * t1881 + t761 * t1886;
t1891 = t1511 * t1863 - t1622;
t1896 = -t1871 * t1235 * t738 + t1891 * t624 * t738;
t1902 = -t1871 * t1249 * t753 + t1891 * t690 * t753;
t1908 = -t1871 * t1258 * t625 + t1891 * t729 * t625;
t1910 = t736 * t1896 + t751 * t1902 + t761 * t1908;
t1913 = -t1643 * t1504 + t1645;
t1915 = t1509 * t1913 + t1651;
t1921 = -t1504 * koppelP(5,3) - t1716 * koppelP(5,1) + t1718 * koppelP(5,2);
t1924 = t1921 * t1453 * t912 + t1915 * t798 * t912;
t1931 = -t1921 * t774 * t1461 * t1464 + t1915 * t864 * t927;
t1936 = t1915 * t903 * t799 + t1671 * t1921;
t1938 = t910 * t1924 + t925 * t1931 + t935 * t1936;
t1941 = t1511 * t1913 - t1656;
t1946 = -t1921 * t1272 * t912 + t1941 * t798 * t912;
t1952 = -t1921 * t1286 * t927 + t1941 * t864 * t927;
t1958 = -t1921 * t1295 * t799 + t1941 * t903 * t799;
t1960 = t910 * t1946 + t925 * t1952 + t935 * t1958;
t1963 = -t1677 * t1504 + t1679;
t1965 = t1509 * t1963 + t1685;
t1971 = -t1504 * koppelP(6,3) - t1716 * koppelP(6,1) + t1718 * koppelP(6,2);
t1974 = t1971 * t1480 * t1086 + t1965 * t972 * t1086;
t1981 = -t1971 * t948 * t1488 * t1491 + t1965 * t1038 * t1101;
t1986 = t1965 * t1077 * t973 + t1705 * t1971;
t1988 = t1084 * t1974 + t1099 * t1981 + t1109 * t1986;
t1991 = t1511 * t1963 - t1690;
t1996 = -t1971 * t1309 * t1086 + t1991 * t972 * t1086;
t2002 = t1991 * t1038 * t1101 - t1971 * t1323 * t1101;
t2008 = t1991 * t1077 * t973 - t1971 * t1332 * t973;
t2010 = t1084 * t1996 + t1099 * t2002 + t1109 * t2008;
t2012 = t1504 * t1501;
t2013 = t2012 * mrSges(4,1);
t2014 = t1504 * t1499;
t2015 = t2014 * mrSges(4,2);
t2016 = t1506 * mrSges(4,3);
t2017 = t1738 * t1509 + t1788 * t1509 + t1838 * t1509 + t1888 * t1509 + t1938 * t1509 + t1988 * t1509 + t1760 * t1511 + t1810 * t1511 + t1860 * t1511 + t1910 * t1511 + t1960 * t1511 + t2010 * t1511 - t2013 + t2015 + t2016;
t2056 = mrSges(4,1) * t1499 + mrSges(4,2) * t1501;
t2058 = (t1525 + t1532 + t1538) * t1504 - t1738 * t1511 * t1506 + t1760 * t1509 * t1506 + (t1559 + t1566 + t1572) * t1504 - t1788 * t1511 * t1506 + t1810 * t1509 * t1506 + (t1593 + t1600 + t1606) * t1504 - t1838 * t1511 * t1506 + t1860 * t1509 * t1506 + (t1627 + t1634 + t1640) * t1504 - t1888 * t1511 * t1506 + t1910 * t1509 * t1506 + (t1661 + t1668 + t1674) * t1504 - t1938 * t1511 * t1506 + t1960 * t1509 * t1506 + (t1695 + t1702 + t1708) * t1504 - t1988 * t1511 * t1506 + t2010 * t1509 * t1506 - t1506 * t2056;
t2059 = t1124 * t52;
t2061 = t1138 * t52;
t2063 = t1147 * t52;
t2065 = t2059 * t120 + t2061 * t184 + t2063 * t209;
t2071 = t2059 * t215 + t2061 * t225 - t2063 * t227;
t2077 = t2063 * m(3) + t2059 * t233 - t2061 * t236;
t2080 = t1161 * t277;
t2082 = t1175 * t277;
t2084 = t1184 * t277;
t2086 = t2080 * t318 + t2082 * t369 + t2084 * t386;
t2092 = t2080 * t392 + t2082 * t400 - t2084 * t227;
t2098 = t2084 * m(3) + t2080 * t407 - t2082 * t410;
t2101 = t1198 * t451;
t2103 = t1212 * t451;
t2105 = t1221 * t451;
t2107 = t2101 * t492 + t2103 * t543 + t2105 * t560;
t2113 = t2101 * t566 + t2103 * t574 - t2105 * t227;
t2119 = t2105 * m(3) + t2101 * t581 - t2103 * t584;
t2122 = t1235 * t625;
t2124 = t1249 * t625;
t2126 = t1258 * t625;
t2128 = t2122 * t666 + t2124 * t717 + t2126 * t734;
t2134 = t2122 * t740 + t2124 * t748 - t2126 * t227;
t2140 = t2126 * m(3) + t2122 * t755 - t2124 * t758;
t2143 = t1272 * t799;
t2145 = t1286 * t799;
t2147 = t1295 * t799;
t2149 = t2143 * t840 + t2145 * t891 + t2147 * t908;
t2155 = t2143 * t914 + t2145 * t922 - t2147 * t227;
t2161 = t2147 * m(3) + t2143 * t929 - t2145 * t932;
t2164 = t1309 * t973;
t2166 = t1323 * t973;
t2168 = t1332 * t973;
t2170 = t2164 * t1014 + t2166 * t1065 + t2168 * t1082;
t2176 = t2164 * t1088 + t2166 * t1096 - t2168 * t227;
t2182 = t2168 * m(3) + t2164 * t1103 - t2166 * t1106;
t2185 = t2065 * t51 * t213 + t2071 * t146 * t231 + t2077 * t197 * t52 + t2086 * t276 * t390 + t2092 * t342 * t405 + t2098 * t381 * t277 + t2107 * t450 * t564 + t2113 * t516 * t579 + t2119 * t555 * t451 + t2128 * t624 * t738 + t2134 * t690 * t753 + t2140 * t729 * t625 + t2149 * t798 * t912 + t2155 * t864 * t927 + t2161 * t903 * t799 + t2170 * t972 * t1086 + t2176 * t1038 * t1101 + t2182 * t1077 * t973;
t2222 = t2065 * t1124 * t213 + t2071 * t1138 * t231 + t2077 * t1147 * t52 + t2086 * t1161 * t390 + t2092 * t1175 * t405 + t2098 * t1184 * t277 + t2107 * t1198 * t564 + t2113 * t1212 * t579 + t2119 * t1221 * t451 + t2128 * t1235 * t738 + t2134 * t1249 * t753 + t2140 * t1258 * t625 + t2149 * t1272 * t912 + t2155 * t1286 * t927 + t2161 * t1295 * t799 + t2170 * t1309 * t1086 + t2176 * t1323 * t1101 + t2182 * t1332 * t973 + m(4);
t2265 = t2065 * t1345 * t213 - t2071 * t20 * t1353 * t1356 + t2077 * t1360 * t52 + t2086 * t1372 * t390 - t2092 * t252 * t1380 * t1383 + t2098 * t1387 * t277 + t2107 * t1399 * t564 - t2113 * t426 * t1407 * t1410 + t2119 * t1414 * t451 + t2128 * t1426 * t738 - t2134 * t600 * t1434 * t1437 + t2140 * t1441 * t625 + t2149 * t1453 * t912 - t2155 * t774 * t1461 * t1464 + t2161 * t1468 * t799 + t2170 * t1480 * t1086 - t2176 * t948 * t1488 * t1491 + t2182 * t1495 * t973;
t2266 = t2065 * t1524;
t2267 = t2071 * t1531;
t2268 = t2077 * t1537;
t2269 = t2086 * t1558;
t2270 = t2092 * t1565;
t2271 = t2098 * t1571;
t2272 = t2107 * t1592;
t2273 = t2113 * t1599;
t2274 = t2119 * t1605;
t2275 = t2128 * t1626;
t2276 = t2134 * t1633;
t2277 = t2140 * t1639;
t2278 = t2149 * t1660;
t2279 = t2155 * t1667;
t2280 = t2161 * t1673;
t2281 = t2170 * t1694;
t2282 = t2176 * t1701;
t2283 = t2182 * t1707;
t2284 = t2013 - t2015 - t2016;
t2285 = t2284 * t1509;
t2286 = t1511 * t2056;
t2287 = t2266 + t2267 + t2268 + t2269 + t2270 + t2271 + t2272 + t2273 + t2274 + t2275 + t2276 + t2277 + t2278 + t2279 + t2280 + t2281 + t2282 + t2283 + t2285 - t2286;
t2291 = t2065 * t1724 + t2071 * t1731 + t2077 * t1736;
t2296 = t2065 * t1746 + t2071 * t1752 + t2077 * t1758;
t2301 = t2086 * t1774 + t2092 * t1781 + t2098 * t1786;
t2306 = t2086 * t1796 + t2092 * t1802 + t2098 * t1808;
t2311 = t2107 * t1824 + t2113 * t1831 + t2119 * t1836;
t2316 = t2107 * t1846 + t2113 * t1852 + t2119 * t1858;
t2321 = t2128 * t1874 + t2134 * t1881 + t2140 * t1886;
t2326 = t2128 * t1896 + t2134 * t1902 + t2140 * t1908;
t2331 = t2149 * t1924 + t2155 * t1931 + t2161 * t1936;
t2336 = t2149 * t1946 + t2155 * t1952 + t2161 * t1958;
t2341 = t2170 * t1974 + t2176 * t1981 + t2182 * t1986;
t2346 = t2170 * t1996 + t2176 * t2002 + t2182 * t2008;
t2348 = t1716 * mrSges(4,1);
t2349 = t1718 * mrSges(4,2);
t2350 = t1504 * mrSges(4,3);
t2351 = t2348 - t2349 + t2350;
t2353 = t2291 * t1509 + t2301 * t1509 + t2311 * t1509 + t2321 * t1509 + t2331 * t1509 + t2341 * t1509 + t2296 * t1511 + t2306 * t1511 + t2316 * t1511 + t2326 * t1511 + t2336 * t1511 + t2346 * t1511 + t2351 * t1511;
t2392 = -t1499 * mrSges(4,2) + t1501 * mrSges(4,1);
t2394 = t1511 * t1504;
t2396 = (t2266 + t2267 + t2268) * t1504 - t2291 * t1511 * t1506 + t2296 * t1509 * t1506 + (t2269 + t2270 + t2271) * t1504 - t2301 * t1511 * t1506 + t2306 * t1509 * t1506 + (t2272 + t2273 + t2274) * t1504 - t2311 * t1511 * t1506 + t2316 * t1509 * t1506 + (t2275 + t2276 + t2277) * t1504 - t2321 * t1511 * t1506 + t2326 * t1509 * t1506 + (t2278 + t2279 + t2280) * t1504 - t2331 * t1511 * t1506 + t2336 * t1509 * t1506 + (t2281 + t2282 + t2283) * t1504 - t2341 * t1511 * t1506 + t2346 * t1509 * t1506 + t2392 * t1509 - t2394 * t2056;
t2397 = t1345 * t52;
t2399 = t20 * t1353;
t2400 = t2399 * t28;
t2404 = -t2400 * t231 * t183 + t2397 * t120 + t1535 * t209;
t2411 = -t2400 * t231 * t224 - t1535 * t227 + t2397 * t215;
t2415 = t28 ^ 2;
t2420 = t2399 * t2415 * t231 * t202 + t1535 * m(3) + t2397 * t233;
t2423 = t1372 * t277;
t2425 = t252 * t1380;
t2426 = t2425 * t28;
t2430 = -t2426 * t405 * t368 + t1569 * t386 + t2423 * t318;
t2437 = -t2426 * t405 * t399 - t1569 * t227 + t2423 * t392;
t2445 = t2425 * t2415 * t405 * t202 + t1569 * m(3) + t2423 * t407;
t2448 = t1399 * t451;
t2450 = t426 * t1407;
t2451 = t2450 * t28;
t2455 = -t2451 * t579 * t542 + t1603 * t560 + t2448 * t492;
t2462 = -t2451 * t579 * t573 - t1603 * t227 + t2448 * t566;
t2470 = t2450 * t2415 * t579 * t202 + t1603 * m(3) + t2448 * t581;
t2473 = t1426 * t625;
t2475 = t600 * t1434;
t2476 = t2475 * t28;
t2480 = -t2476 * t753 * t716 + t1637 * t734 + t2473 * t666;
t2487 = -t2476 * t753 * t747 - t1637 * t227 + t2473 * t740;
t2495 = t2475 * t2415 * t753 * t202 + t1637 * m(3) + t2473 * t755;
t2498 = t1453 * t799;
t2500 = t774 * t1461;
t2501 = t2500 * t28;
t2505 = -t2501 * t927 * t890 + t1671 * t908 + t2498 * t840;
t2512 = -t2501 * t927 * t921 - t1671 * t227 + t2498 * t914;
t2520 = t2500 * t2415 * t927 * t202 + t1671 * m(3) + t2498 * t929;
t2523 = t1480 * t973;
t2525 = t948 * t1488;
t2526 = t2525 * t28;
t2530 = -t2526 * t1101 * t1064 + t2523 * t1014 + t1705 * t1082;
t2537 = -t2526 * t1101 * t1095 + t2523 * t1088 - t1705 * t227;
t2545 = t2525 * t2415 * t1101 * t202 + t1705 * m(3) + t2523 * t1103;
t2548 = t2404 * t51 * t213 + t2411 * t146 * t231 + t2420 * t197 * t52 + t2430 * t276 * t390 + t2437 * t342 * t405 + t2445 * t381 * t277 + t2455 * t450 * t564 + t2462 * t516 * t579 + t2470 * t555 * t451 + t2480 * t624 * t738 + t2487 * t690 * t753 + t2495 * t729 * t625 + t2505 * t798 * t912 + t2512 * t864 * t927 + t2520 * t903 * t799 + t2530 * t972 * t1086 + t2537 * t1038 * t1101 + t2545 * t1077 * t973;
t2585 = t2404 * t1124 * t213 + t2411 * t1138 * t231 + t2420 * t1147 * t52 + t2430 * t1161 * t390 + t2437 * t1175 * t405 + t2445 * t1184 * t277 + t2455 * t1198 * t564 + t2462 * t1212 * t579 + t2470 * t1221 * t451 + t2480 * t1235 * t738 + t2487 * t1249 * t753 + t2495 * t1258 * t625 + t2505 * t1272 * t912 + t2512 * t1286 * t927 + t2520 * t1295 * t799 + t2530 * t1309 * t1086 + t2537 * t1323 * t1101 + t2545 * t1332 * t973;
t2628 = t2404 * t1345 * t213 - t2411 * t20 * t1353 * t1356 + t2420 * t1360 * t52 + t2430 * t1372 * t390 - t2437 * t252 * t1380 * t1383 + t2445 * t1387 * t277 + t2455 * t1399 * t564 - t2462 * t426 * t1407 * t1410 + t2470 * t1414 * t451 + t2480 * t1426 * t738 - t2487 * t600 * t1434 * t1437 + t2495 * t1441 * t625 + t2505 * t1453 * t912 - t2512 * t774 * t1461 * t1464 + t2520 * t1468 * t799 + t2530 * t1480 * t1086 - t2537 * t948 * t1488 * t1491 + t2545 * t1495 * t973 + m(4);
t2629 = t2404 * t1524;
t2630 = t2411 * t1531;
t2631 = t2420 * t1537;
t2632 = t2430 * t1558;
t2633 = t2437 * t1565;
t2634 = t2445 * t1571;
t2635 = t2455 * t1592;
t2636 = t2462 * t1599;
t2637 = t2470 * t1605;
t2638 = t2480 * t1626;
t2639 = t2487 * t1633;
t2640 = t2495 * t1639;
t2641 = t2505 * t1660;
t2642 = t2512 * t1667;
t2643 = t2520 * t1673;
t2644 = t2530 * t1694;
t2645 = t2537 * t1701;
t2646 = t2545 * t1707;
t2647 = t2284 * t1511;
t2648 = t1509 * t2056;
t2649 = t2629 + t2630 + t2631 + t2632 + t2633 + t2634 + t2635 + t2636 + t2637 + t2638 + t2639 + t2640 + t2641 + t2642 + t2643 + t2644 + t2645 + t2646 + t2647 + t2648;
t2653 = t2404 * t1724 + t2411 * t1731 + t2420 * t1736;
t2658 = t2404 * t1746 + t2411 * t1752 + t2420 * t1758;
t2663 = t2430 * t1774 + t2437 * t1781 + t2445 * t1786;
t2668 = t2430 * t1796 + t2437 * t1802 + t2445 * t1808;
t2673 = t2455 * t1824 + t2462 * t1831 + t2470 * t1836;
t2678 = t2455 * t1846 + t2462 * t1852 + t2470 * t1858;
t2683 = t2480 * t1874 + t2487 * t1881 + t2495 * t1886;
t2688 = t2480 * t1896 + t2487 * t1902 + t2495 * t1908;
t2693 = t2505 * t1924 + t2512 * t1931 + t2520 * t1936;
t2698 = t2505 * t1946 + t2512 * t1952 + t2520 * t1958;
t2703 = t2530 * t1974 + t2537 * t1981 + t2545 * t1986;
t2708 = t2530 * t1996 + t2537 * t2002 + t2545 * t2008;
t2711 = -t2351 * t1509 + t2653 * t1509 + t2663 * t1509 + t2673 * t1509 + t2683 * t1509 + t2693 * t1509 + t2703 * t1509 + t2658 * t1511 + t2668 * t1511 + t2678 * t1511 + t2688 * t1511 + t2698 * t1511 + t2708 * t1511;
t2751 = (t2629 + t2630 + t2631) * t1504 - t2653 * t1511 * t1506 + t2658 * t1509 * t1506 + (t2632 + t2633 + t2634) * t1504 - t2663 * t1511 * t1506 + t2668 * t1509 * t1506 + (t2635 + t2636 + t2637) * t1504 - t2673 * t1511 * t1506 + t2678 * t1509 * t1506 + (t2638 + t2639 + t2640) * t1504 - t2683 * t1511 * t1506 + t2688 * t1509 * t1506 + (t2641 + t2642 + t2643) * t1504 - t2693 * t1511 * t1506 + t2698 * t1509 * t1506 + (t2644 + t2645 + t2646) * t1504 - t2703 * t1511 * t1506 + t2708 * t1509 * t1506 + t1504 * t2056 * t1509 + t1511 * t2392;
t2755 = t1524 * t119 + t1531 * t183 + t1537 * t209;
t2762 = -t1537 * t202 * t28 + t1524 * t183 + t1531 * t224;
t2769 = -t1531 * t202 * t28 + t1537 * m(3) + t1524 * t209;
t2775 = t1558 * t317 + t1565 * t368 + t1571 * t386;
t2782 = -t1571 * t202 * t28 + t1558 * t368 + t1565 * t399;
t2789 = -t1565 * t202 * t28 + t1571 * m(3) + t1558 * t386;
t2795 = t1592 * t491 + t1599 * t542 + t1605 * t560;
t2802 = -t1605 * t202 * t28 + t1592 * t542 + t1599 * t573;
t2809 = -t1599 * t202 * t28 + t1605 * m(3) + t1592 * t560;
t2815 = t1626 * t665 + t1633 * t716 + t1639 * t734;
t2822 = -t1639 * t202 * t28 + t1626 * t716 + t1633 * t747;
t2829 = -t1633 * t202 * t28 + t1639 * m(3) + t1626 * t734;
t2835 = t1660 * t839 + t1667 * t890 + t1673 * t908;
t2842 = -t1673 * t202 * t28 + t1660 * t890 + t1667 * t921;
t2849 = -t1667 * t202 * t28 + t1673 * m(3) + t1660 * t908;
t2855 = t1694 * t1013 + t1701 * t1064 + t1707 * t1082;
t2862 = -t1707 * t202 * t28 + t1694 * t1064 + t1701 * t1095;
t2869 = -t1701 * t202 * t28 + t1707 * m(3) + t1694 * t1082;
t2872 = t2755 * t51 * t213 + t2762 * t146 * t231 + t2769 * t197 * t52 + t2775 * t276 * t390 + t2782 * t342 * t405 + t2789 * t381 * t277 + t2795 * t450 * t564 + t2802 * t516 * t579 + t2809 * t555 * t451 + t2815 * t624 * t738 + t2822 * t690 * t753 + t2829 * t729 * t625 + t2835 * t798 * t912 + t2842 * t864 * t927 + t2849 * t903 * t799 + t2855 * t972 * t1086 + t2862 * t1038 * t1101 + t2869 * t1077 * t973;
t2909 = t2755 * t1124 * t213 + t2762 * t1138 * t231 + t2769 * t1147 * t52 + t2775 * t1161 * t390 + t2782 * t1175 * t405 + t2789 * t1184 * t277 + t2795 * t1198 * t564 + t2802 * t1212 * t579 + t2809 * t1221 * t451 + t2815 * t1235 * t738 + t2822 * t1249 * t753 + t2829 * t1258 * t625 + t2835 * t1272 * t912 + t2842 * t1286 * t927 + t2849 * t1295 * t799 + t2855 * t1309 * t1086 + t2862 * t1323 * t1101 + t2869 * t1332 * t973 + t2285 - t2286;
t2952 = t2755 * t1345 * t213 - t2762 * t20 * t1353 * t1356 + t2769 * t1360 * t52 + t2775 * t1372 * t390 - t2782 * t252 * t1380 * t1383 + t2789 * t1387 * t277 + t2795 * t1399 * t564 - t2802 * t426 * t1407 * t1410 + t2809 * t1414 * t451 + t2815 * t1426 * t738 - t2822 * t600 * t1434 * t1437 + t2829 * t1441 * t625 + t2835 * t1453 * t912 - t2842 * t774 * t1461 * t1464 + t2849 * t1468 * t799 + t2855 * t1480 * t1086 - t2862 * t948 * t1488 * t1491 + t2869 * t1495 * t973 + t2647 + t2648;
t2953 = t2755 * t1524;
t2954 = t2762 * t1531;
t2955 = t2769 * t1537;
t2956 = t2775 * t1558;
t2957 = t2782 * t1565;
t2958 = t2789 * t1571;
t2959 = t2795 * t1592;
t2960 = t2802 * t1599;
t2961 = t2809 * t1605;
t2962 = t2815 * t1626;
t2964 = t2822 * t1633;
t2965 = t2829 * t1639;
t2966 = t2835 * t1660;
t2967 = t2842 * t1667;
t2968 = t2849 * t1673;
t2969 = t2855 * t1694;
t2970 = t2862 * t1701;
t2971 = t2869 * t1707;
t2972 = Ifges(4,1) - Ifges(4,2);
t2973 = t1501 ^ 2;
t2978 = -0.2e1 * t1501 * t1499 * Ifges(4,4) + t2972 * t2973 + Ifges(4,2) - Ifges(4,3);
t2979 = t1506 ^ 2;
t2983 = t1501 * Ifges(4,5) - t1499 * Ifges(4,6);
t2987 = 0.2e1 * t1504 * t2983 * t1506 + t2978 * t2979 + Ifges(4,3) + t2964 + t2965 + t2966 + t2967 + t2968 + t2969 + t2970 + t2971;
t2992 = t2755 * t1724 + t2762 * t1731 + t2769 * t1736;
t2997 = t2755 * t1746 + t2762 * t1752 + t2769 * t1758;
t3002 = t2775 * t1774 + t2782 * t1781 + t2789 * t1786;
t3007 = t2775 * t1796 + t2782 * t1802 + t2789 * t1808;
t3012 = t2795 * t1824 + t2802 * t1831 + t2809 * t1836;
t3017 = t2795 * t1846 + t2802 * t1852 + t2809 * t1858;
t3022 = t2815 * t1874 + t2822 * t1881 + t2829 * t1886;
t3027 = t2815 * t1896 + t2822 * t1902 + t2829 * t1908;
t3032 = t2835 * t1924 + t2842 * t1931 + t2849 * t1936;
t3037 = t2835 * t1946 + t2842 * t1952 + t2849 * t1958;
t3042 = t2855 * t1974 + t2862 * t1981 + t2869 * t1986;
t3047 = t2855 * t1996 + t2862 * t2002 + t2869 * t2008;
t3053 = t1499 * t2972 * t1501 + 0.2e1 * Ifges(4,4) * t2973 - Ifges(4,4);
t3057 = t1499 * Ifges(4,5) + t1501 * Ifges(4,6);
t3059 = t1504 * t3057 + t3053 * t1506 + t2992 * t1509 + t3002 * t1509 + t3012 * t1509 + t3022 * t1509 + t3032 * t1509 + t3042 * t1509 + t2997 * t1511 + t3007 * t1511 + t3017 * t1511 + t3027 * t1511 + t3037 * t1511 + t3047 * t1511;
t3100 = -t3022 * t1511 * t1506 + t3027 * t1509 * t1506 + (t2966 + t2967 + t2968) * t1504 - t3032 * t1511 * t1506 + t3037 * t1509 * t1506 + (t2969 + t2970 + t2971) * t1504 - t3042 * t1511 * t1506 + t3047 * t1509 * t1506 + t1716 * Ifges(4,5) - t1718 * Ifges(4,6) + t1504 * Ifges(4,3);
t3105 = t1724 * t119 + t1731 * t183 + t1736 * t209;
t3112 = -t1736 * t202 * t28 + t1724 * t183 + t1731 * t224;
t3119 = -t1731 * t202 * t28 + t1736 * m(3) + t1724 * t209;
t3125 = t1774 * t317 + t1781 * t368 + t1786 * t386;
t3132 = -t1786 * t202 * t28 + t1774 * t368 + t1781 * t399;
t3139 = -t1781 * t202 * t28 + t1786 * m(3) + t1774 * t386;
t3145 = t1824 * t491 + t1831 * t542 + t1836 * t560;
t3152 = -t1836 * t202 * t28 + t1824 * t542 + t1831 * t573;
t3159 = -t1831 * t202 * t28 + t1836 * m(3) + t1824 * t560;
t3165 = t1874 * t665 + t1881 * t716 + t1886 * t734;
t3172 = -t1886 * t202 * t28 + t1874 * t716 + t1881 * t747;
t3179 = -t1881 * t202 * t28 + t1886 * m(3) + t1874 * t734;
t3185 = t1924 * t839 + t1931 * t890 + t1936 * t908;
t3192 = -t1936 * t202 * t28 + t1924 * t890 + t1931 * t921;
t3199 = -t1931 * t202 * t28 + t1936 * m(3) + t1924 * t908;
t3205 = t1974 * t1013 + t1981 * t1064 + t1986 * t1082;
t3212 = -t1986 * t202 * t28 + t1974 * t1064 + t1981 * t1095;
t3219 = -t1981 * t202 * t28 + t1986 * m(3) + t1974 * t1082;
t3223 = t3105 * t51 * t213 + t3112 * t146 * t231 + t3119 * t197 * t52 + t3125 * t276 * t390 + t3132 * t342 * t405 + t3139 * t381 * t277 + t3145 * t450 * t564 + t3152 * t516 * t579 + t3159 * t555 * t451 + t3165 * t624 * t738 + t3172 * t690 * t753 + t3179 * t729 * t625 + t3185 * t798 * t912 + t3192 * t864 * t927 + t3199 * t903 * t799 + t3205 * t972 * t1086 + t3212 * t1038 * t1101 + t3219 * t1077 * t973 - t2284 * t1509 + t2286;
t3260 = t3105 * t1124 * t213 + t3112 * t1138 * t231 + t3119 * t1147 * t52 + t3125 * t1161 * t390 + t3132 * t1175 * t405 + t3139 * t1184 * t277 + t3145 * t1198 * t564 + t3152 * t1212 * t579 + t3159 * t1221 * t451 + t3165 * t1235 * t738 + t3172 * t1249 * t753 + t3179 * t1258 * t625 + t3185 * t1272 * t912 + t3192 * t1286 * t927 + t3199 * t1295 * t799 + t3205 * t1309 * t1086 + t3212 * t1323 * t1101 + t3219 * t1332 * t973;
t3304 = -t3172 * t600 * t1434 * t1437 - t3192 * t774 * t1461 * t1464 - t3212 * t948 * t1488 * t1491 + t3205 * t1480 * t1086 + t3179 * t1441 * t625 + t3185 * t1453 * t912 + t3199 * t1468 * t799 + t3219 * t1495 * t973 - t2348 + t2349 - t2350;
t3306 = t3105 * t1524;
t3307 = t3112 * t1531;
t3308 = t3119 * t1537;
t3309 = t3125 * t1558;
t3310 = t3132 * t1565;
t3311 = t3139 * t1571;
t3312 = t3145 * t1592;
t3313 = t3152 * t1599;
t3314 = t3159 * t1605;
t3315 = t3165 * t1626;
t3316 = t3172 * t1633;
t3317 = t3306 + t3307 + t3308 + t3309 + t3310 + t3311 + t3312 + t3313 + t3314 + t3315 + t3316;
t3318 = t3179 * t1639;
t3319 = t3185 * t1660;
t3320 = t3192 * t1667;
t3321 = t3199 * t1673;
t3322 = t3205 * t1694;
t3323 = t3212 * t1701;
t3324 = t3219 * t1707;
t3330 = t1509 * Ifges(4,4);
t3337 = -0.2e1 * t2394 * Ifges(4,4) + t1509 * t2972;
t3345 = t1509 * t1504;
t3354 = t3318 + t3319 + t3320 + t3321 + t3322 + t3323 + t3324 - 0.2e1 * t1511 * t2983 * t2979 + ((t1504 * t2972 * t1511 + 0.2e1 * t3330) * t2973 + t1499 * t3337 * t1501 + t1504 * (Ifges(4,2) - Ifges(4,3)) * t1511 - t3330) * t1506 + (t1511 * Ifges(4,5) + t3345 * Ifges(4,6)) * t1501 + t1499 * (t3345 * Ifges(4,5) - t1511 * Ifges(4,6));
t3359 = t3105 * t1724 + t3112 * t1731 + t3119 * t1736;
t3364 = t3105 * t1746 + t3112 * t1752 + t3119 * t1758;
t3369 = t3125 * t1774 + t3132 * t1781 + t3139 * t1786;
t3374 = t3125 * t1796 + t3132 * t1802 + t3139 * t1808;
t3379 = t3145 * t1824 + t3152 * t1831 + t3159 * t1836;
t3384 = t3145 * t1846 + t3152 * t1852 + t3159 * t1858;
t3389 = t3165 * t1874 + t3172 * t1881 + t3179 * t1886;
t3394 = t3165 * t1896 + t3172 * t1902 + t3179 * t1908;
t3399 = t3185 * t1924 + t3192 * t1931 + t3199 * t1936;
t3404 = t3185 * t1946 + t3192 * t1952 + t3199 * t1958;
t3409 = t3205 * t1974 + t3212 * t1981 + t3219 * t1986;
t3414 = t3205 * t1996 + t3212 * t2002 + t3219 * t2008;
t3419 = -Ifges(4,6) * t1506 + t2014 * t2972;
t3428 = -Ifges(4,4) * t1504 - t1718 * Ifges(4,5);
t3431 = t3359 * t1509 + t3364 * t1511 + t3369 * t1509 + t3374 * t1511 + t3379 * t1509 + t3384 * t1511 + t3389 * t1509 + t3394 * t1511 + t3399 * t1509 + t3404 * t1511 + t3409 * t1509 + t3414 * t1511 - t3337 * t2973 + (0.2e1 * t1499 * Ifges(4,4) * t1509 + t3419 * t1511) * t1501 + t3428 * t1511 + Ifges(4,1) * t1509;
t3471 = t2012 * Ifges(4,5) - t2014 * Ifges(4,6) - t1506 * Ifges(4,3);
t3474 = (t3306 + t3307 + t3308) * t1504 - t3359 * t1511 * t1506 + t3364 * t1509 * t1506 + (t3309 + t3310 + t3311) * t1504 - t3369 * t1511 * t1506 + t3374 * t1509 * t1506 + (t3312 + t3313 + t3314) * t1504 - t3379 * t1511 * t1506 + t3384 * t1509 * t1506 + (t3315 + t3316 + t3318) * t1504 - t3389 * t1511 * t1506 + t3394 * t1509 * t1506 + (t3319 + t3320 + t3321) * t1504 - t3399 * t1511 * t1506 + t3404 * t1509 * t1506 + (t3322 + t3323 + t3324) * t1504 - t3409 * t1511 * t1506 + t3414 * t1509 * t1506 + t3471 * t1511 + t1509 * t3057;
t3478 = t1746 * t119 + t1752 * t183 + t1758 * t209;
t3485 = -t1758 * t202 * t28 + t1746 * t183 + t1752 * t224;
t3492 = -t1752 * t202 * t28 + t1758 * m(3) + t1746 * t209;
t3498 = t1796 * t317 + t1802 * t368 + t1808 * t386;
t3505 = -t1808 * t202 * t28 + t1796 * t368 + t1802 * t399;
t3512 = -t1802 * t202 * t28 + t1808 * m(3) + t1796 * t386;
t3518 = t1846 * t491 + t1852 * t542 + t1858 * t560;
t3525 = -t1858 * t202 * t28 + t1846 * t542 + t1852 * t573;
t3532 = -t1852 * t202 * t28 + t1858 * m(3) + t1846 * t560;
t3538 = t1896 * t665 + t1902 * t716 + t1908 * t734;
t3545 = -t1908 * t202 * t28 + t1896 * t716 + t1902 * t747;
t3552 = -t1902 * t202 * t28 + t1908 * m(3) + t1896 * t734;
t3558 = t1946 * t839 + t1952 * t890 + t1958 * t908;
t3565 = -t1958 * t202 * t28 + t1946 * t890 + t1952 * t921;
t3572 = -t1952 * t202 * t28 + t1958 * m(3) + t1946 * t908;
t3578 = t1996 * t1013 + t2002 * t1064 + t2008 * t1082;
t3585 = -t2008 * t202 * t28 + t1996 * t1064 + t2002 * t1095;
t3592 = -t2002 * t202 * t28 + t2008 * m(3) + t1996 * t1082;
t3596 = t3478 * t51 * t213 + t3485 * t146 * t231 + t3492 * t197 * t52 + t3498 * t276 * t390 + t3505 * t342 * t405 + t3512 * t381 * t277 + t3518 * t450 * t564 + t3525 * t516 * t579 + t3532 * t555 * t451 + t3538 * t624 * t738 + t3545 * t690 * t753 + t3552 * t729 * t625 + t3558 * t798 * t912 + t3565 * t864 * t927 + t3572 * t903 * t799 + t3578 * t972 * t1086 + t3585 * t1038 * t1101 + t3592 * t1077 * t973 - t2284 * t1511 - t2648;
t3634 = t3578 * t1309 * t1086 + t3585 * t1323 * t1101 + t3545 * t1249 * t753 + t3552 * t1258 * t625 + t3558 * t1272 * t912 + t3565 * t1286 * t927 + t3572 * t1295 * t799 + t3592 * t1332 * t973 + t2348 - t2349 + t2350;
t3678 = t3478 * t1345 * t213 - t3485 * t20 * t1353 * t1356 + t3492 * t1360 * t52 + t3498 * t1372 * t390 - t3505 * t252 * t1380 * t1383 + t3512 * t1387 * t277 + t3518 * t1399 * t564 - t3525 * t426 * t1407 * t1410 + t3532 * t1414 * t451 + t3538 * t1426 * t738 - t3545 * t600 * t1434 * t1437 + t3552 * t1441 * t625 + t3558 * t1453 * t912 - t3565 * t774 * t1461 * t1464 + t3572 * t1468 * t799 + t3578 * t1480 * t1086 - t3585 * t948 * t1488 * t1491 + t3592 * t1495 * t973;
t3679 = t3478 * t1524;
t3680 = t3485 * t1531;
t3681 = t3492 * t1537;
t3682 = t3498 * t1558;
t3683 = t3505 * t1565;
t3684 = t3512 * t1571;
t3685 = t3518 * t1592;
t3686 = t3525 * t1599;
t3687 = t3532 * t1605;
t3688 = t3538 * t1626;
t3689 = t3545 * t1633;
t3690 = t3679 + t3680 + t3681 + t3682 + t3683 + t3684 + t3685 + t3686 + t3687 + t3688 + t3689;
t3691 = t3552 * t1639;
t3692 = t3558 * t1660;
t3693 = t3565 * t1667;
t3694 = t3572 * t1673;
t3695 = t3578 * t1694;
t3696 = t3585 * t1701;
t3697 = t3592 * t1707;
t3708 = t3691 + t3692 + t3693 + t3694 + t3695 + t3696 + t3697 + 0.2e1 * t1509 * t2983 * t2979 + (-t2978 * t1504 * t1509 + t1511 * t3053) * t1506 - t1509 * t2983 + t2394 * t3057;
t3713 = t3478 * t1724 + t3485 * t1731 + t3492 * t1736;
t3718 = t3478 * t1746 + t3485 * t1752 + t3492 * t1758;
t3723 = t3498 * t1774 + t3505 * t1781 + t3512 * t1786;
t3728 = t3498 * t1796 + t3505 * t1802 + t3512 * t1808;
t3733 = t3518 * t1824 + t3525 * t1831 + t3532 * t1836;
t3738 = t3518 * t1846 + t3525 * t1852 + t3532 * t1858;
t3743 = t3538 * t1874 + t3545 * t1881 + t3552 * t1886;
t3748 = t3538 * t1896 + t3545 * t1902 + t3552 * t1908;
t3753 = t3558 * t1924 + t3565 * t1931 + t3572 * t1936;
t3758 = t3558 * t1946 + t3565 * t1952 + t3572 * t1958;
t3763 = t3578 * t1974 + t3585 * t1981 + t3592 * t1986;
t3768 = t3578 * t1996 + t3585 * t2002 + t3592 * t2008;
t3783 = t3713 * t1509 + t3718 * t1511 + t3723 * t1509 + t3728 * t1511 + t3733 * t1509 + t3738 * t1511 + t3743 * t1509 + t3748 * t1511 + t3753 * t1509 + t3758 * t1511 + t3763 * t1509 + t3768 * t1511 + (-0.2e1 * t3345 * Ifges(4,4) - t1511 * t2972) * t2973 + (0.2e1 * t1511 * t1499 * Ifges(4,4) - t3419 * t1509) * t1501 - t3428 * t1509 + t1511 * Ifges(4,1);
t3822 = (t3679 + t3680 + t3681) * t1504 - t3713 * t1511 * t1506 + t3718 * t1509 * t1506 + (t3682 + t3683 + t3684) * t1504 - t3723 * t1511 * t1506 + t3728 * t1509 * t1506 + (t3685 + t3686 + t3687) * t1504 - t3733 * t1511 * t1506 + t3738 * t1509 * t1506 + (t3688 + t3689 + t3691) * t1504 - t3743 * t1511 * t1506 + t3748 * t1509 * t1506 + (t3692 + t3693 + t3694) * t1504 - t3753 * t1511 * t1506 + t3758 * t1509 * t1506 + (t3695 + t3696 + t3697) * t1504 - t3763 * t1511 * t1506 + t3768 * t1509 * t1506 - t3471 * t1509 + t1511 * t3057;
unknown(1,1) = t1112;
unknown(1,2) = t1335;
unknown(1,3) = t1498;
unknown(1,4) = t1709;
unknown(1,5) = t2017;
unknown(1,6) = t2058;
unknown(2,1) = t2185;
unknown(2,2) = t2222;
unknown(2,3) = t2265;
unknown(2,4) = t2287;
unknown(2,5) = t2353;
unknown(2,6) = t2396;
unknown(3,1) = t2548;
unknown(3,2) = t2585;
unknown(3,3) = t2628;
unknown(3,4) = t2649;
unknown(3,5) = t2711;
unknown(3,6) = t2751;
unknown(4,1) = t2872;
unknown(4,2) = t2909;
unknown(4,3) = t2952;
unknown(4,4) = t2953 + t2954 + t2955 + t2956 + t2957 + t2958 + t2959 + t2960 + t2961 + t2962 + t2987;
unknown(4,5) = t3059;
unknown(4,6) = (t2953 + t2954 + t2955) * t1504 - t2992 * t1511 * t1506 + t2997 * t1509 * t1506 + (t2956 + t2957 + t2958) * t1504 - t3002 * t1511 * t1506 + t3007 * t1509 * t1506 + (t2959 + t2960 + t2961) * t1504 - t3012 * t1511 * t1506 + t3017 * t1509 * t1506 + (t2962 + t2964 + t2965) * t1504 + t3100;
unknown(5,1) = t3223;
unknown(5,2) = t3260;
unknown(5,3) = t3105 * t1345 * t213 - t3112 * t20 * t1353 * t1356 + t3119 * t1360 * t52 + t3125 * t1372 * t390 - t3132 * t252 * t1380 * t1383 + t3139 * t1387 * t277 + t3145 * t1399 * t564 - t3152 * t426 * t1407 * t1410 + t3159 * t1414 * t451 + t3165 * t1426 * t738 + t3304;
unknown(5,4) = t3317 + t3354;
unknown(5,5) = t3431;
unknown(5,6) = t3474;
unknown(6,1) = t3596;
unknown(6,2) = t3478 * t1124 * t213 + t3485 * t1138 * t231 + t3492 * t1147 * t52 + t3498 * t1161 * t390 + t3505 * t1175 * t405 + t3512 * t1184 * t277 + t3518 * t1198 * t564 + t3525 * t1212 * t579 + t3532 * t1221 * t451 + t3538 * t1235 * t738 + t3634;
unknown(6,3) = t3678;
unknown(6,4) = t3690 + t3708;
unknown(6,5) = t3783;
unknown(6,6) = t3822;
MX  = unknown;
