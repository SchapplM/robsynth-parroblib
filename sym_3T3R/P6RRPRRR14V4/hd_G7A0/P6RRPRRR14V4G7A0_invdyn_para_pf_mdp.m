% Calculate minimal parameter regressor of inverse dynamics forces for
% P6RRPRRR14V4G7A0
% Use Code from Maple symbolic Code Generation
%
% Input:
% xP [6x1]
%   Generalized platform coordinates
% xDP [6x1]
%   Generalized platform velocities
% xDDP [6x1]
%   Generalized platform accelerations
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% g [3x1]
%   gravitation vector in mdh base frame [m/s^2]
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [7x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a3,a4,alpha3,alpha4,d1,d4,theta3]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates
% MDP [24x1]
%   Minimal dynamic parameter vector for parallel robot(fixed base model)
%   see P6RRPRRR14V4G7A0_convert_par2_MPV_fixb.m

% Output:
% tauX [6x1]
%   minimal parameter regressor of inverse dynamics force vector
%   in task space

% Quelle: HybrDyn-Toolbox
% Datum: 2022-11-04 05:41
% Revision: e482436b586c4f286726c907c195760c5ac72455 (2022-11-03)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function tauX = P6RRPRRR14V4G7A0_invdyn_para_pf_mdp(xP, xDP, xDDP, qJ, g, legFrame, ...
  koppelP, pkin, MDP)
%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(6,1),zeros(6,1),zeros(3,6),zeros(3,1),zeros(6,3),zeros(6,3),zeros(7,1),zeros(24,1)}
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: xP has to be [6x1] (double)');
assert(isreal(xDP) && all(size(xDP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: xDP has to be [6x1] (double)');
assert(isreal(xDDP) && all(size(xDDP) == [6 1]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: xDDP has to be [6x1] (double)');
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: qJ has to be [3x6] (double)');
assert(isreal(g) && all(size(g) == [3 1]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: g has to be [3x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [7 1]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: pkin has to be [7x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: Koppelpunkt has to be [6x3] (double)');
assert(isreal(MDP) && all(size(MDP) == [24 1]), ...
  'P6RRPRRR14V4G7A0_invdyn_para_pf_mdp: MDP has to be [24x1] (double)'); 

%% Symbolic Calculation
% From invdyn_para_plfcoord_reg_mdp_matlab.m
% OptimizationMode: 2
% StartTime: 2022-11-04 02:36:56
% EndTime: 2022-11-04 04:03:14
% DurationCPUTime: 5936.46s
% Computational Cost: add. (66876702->5540), mult. (172336062->9152), div. (341706->42), fcn. (125515644->48), ass. (0->3173)
t14388 = cos(pkin(4));
t14336 = t14388 * pkin(6);
t14312 = t14336 + qJ(3,6);
t14290 = 0.1e1 / t14312;
t14390 = sin(qJ(2,6));
t14386 = sin(pkin(3));
t14385 = sin(pkin(4));
t14387 = cos(pkin(7));
t15954 = t14385 * t14387;
t15716 = pkin(6) * t15954;
t16555 = sin(pkin(7));
t15754 = t16555 * pkin(2);
t14176 = t15716 - t15754;
t14389 = cos(pkin(3));
t16177 = t14176 * t14389;
t16629 = t14312 * t14386 + t16177;
t16509 = t14385 * pkin(6);
t15222 = t16555 * t16509;
t14250 = t15222 + pkin(1);
t16508 = t14387 * pkin(2);
t14153 = t14250 + t16508;
t14396 = cos(qJ(2,6));
t16810 = t14396 * t14153;
t16788 = t16629 * t14390 + t16810;
t16817 = 0.1e1 / t16788;
t16834 = t16817 * t14290;
t14291 = 0.1e1 / t14312 ^ 2;
t14292 = t14290 * t14291;
t14436 = xP(4);
t14371 = sin(t14436);
t14374 = cos(t14436);
t14430 = xDP(2);
t14435 = xP(5);
t14373 = cos(t14435);
t14428 = xDP(4);
t14455 = koppelP(6,1);
t15827 = t14428 * t14455;
t14427 = xDP(5);
t14449 = koppelP(6,2);
t15845 = t14427 * t14449;
t14128 = t14373 * t15845 + t15827;
t14434 = xP(6);
t14369 = sin(t14434);
t14370 = sin(t14435);
t14443 = koppelP(6,3);
t15851 = t14427 * t14443;
t14426 = xDP(6);
t15858 = t14426 * t14455;
t13755 = t14128 * t14369 + (t14369 * t15858 - t15851) * t14370;
t15839 = t14427 * t14455;
t14258 = t14373 * t15839;
t15195 = -t14370 * t14426 - t14428;
t13990 = t14449 * t15195 + t14258;
t14372 = cos(t14434);
t14539 = t13990 * t14372 - t13755;
t16007 = t14373 * t14443;
t15258 = t14428 * t16007;
t14216 = t14370 * t14428 + t14426;
t16706 = t14369 * t14216;
t13834 = t14449 * t16706 + t15258;
t16017 = t14372 * t14455;
t16775 = t14216 * t16017 - t13834;
t13465 = t14539 * t14371 + t14374 * t16775 + t14430;
t14094 = t14153 * t14390;
t15945 = t14386 * t14396;
t13843 = -t14312 * t15945 + t14094;
t14391 = sin(qJ(1,6));
t14104 = t14386 * t14176;
t15462 = t14374 * t14104;
t15014 = t14428 * t15462;
t13574 = t13843 * t14427 - t14391 * t15014;
t15976 = t14374 * t14428;
t15342 = t14391 * t15976;
t15896 = t14396 * t14427;
t13800 = -t14176 * t15896 + t14312 * t15342;
t14431 = xDP(1);
t14181 = t14373 * t15851 + t14431;
t14402 = legFrame(6,2);
t14355 = cos(t14402);
t16169 = t14181 * t14355;
t13822 = t16810 * t16169;
t15951 = t14386 * t14390;
t14167 = t14312 * t15951;
t13840 = t16810 + t14167;
t14429 = xDP(3);
t14050 = t14429 * t14104;
t14107 = t15258 * t14374 - t14430;
t15833 = t14428 * t14449;
t14135 = t14258 - t15833;
t14349 = sin(t14402);
t14378 = t14389 ^ 2;
t14397 = cos(qJ(1,6));
t15324 = t14374 * t15858;
t16614 = t14372 * (t13990 * t14371 + t15324) - t13755 * t14371 - t14107;
t14494 = t14391 * t16614;
t16025 = t14371 * t14455;
t15252 = t14216 * t16025;
t15864 = t14426 * t14449;
t14503 = t14374 * (t14370 * t15864 - t14135) + t15252;
t15354 = t14373 * t15864;
t14066 = t14370 * t15839 + t15354;
t14521 = t14355 * t14066;
t14515 = t14391 * t14521;
t14709 = t14372 * t15354 - t14181;
t16094 = t14355 * t14396;
t15469 = t14176 * t16094;
t15975 = t14374 * t14449;
t14779 = t15469 * t15975;
t15348 = t14373 * t15858;
t15006 = t14355 * t15348;
t14780 = t14176 * t15006;
t15401 = t14355 * t15858;
t14948 = t14396 * t15401;
t15304 = t14391 * t15864;
t14971 = t14390 * t15304;
t15302 = t14391 * t15851;
t14979 = t14374 * t15302;
t14985 = t14391 * t15258;
t15007 = t14355 * t15354;
t15013 = t14176 * t15324;
t15015 = t14427 * t15462;
t15399 = t14355 * t15845;
t15021 = t14176 * t15399;
t15055 = t13843 * t15401;
t15402 = t14355 * t15864;
t15056 = t13843 * t15402;
t16305 = t13843 * t14355;
t15057 = t15976 * t16305;
t15285 = t14396 * t15864;
t15300 = t14391 * t15827;
t15301 = t14391 * t15833;
t15303 = t14391 * t15858;
t15318 = t14374 * t15851;
t15330 = t14374 * t15864;
t15911 = t14391 * t14449;
t15341 = t14374 * t15911;
t16001 = t14373 * t14455;
t15360 = t14396 * t16001;
t15396 = t14355 * t15827;
t15398 = t14355 * t15839;
t15400 = t14355 * t15851;
t14113 = t14391 * t14176;
t15461 = t14386 * t14113;
t15463 = t14371 * t14104;
t15481 = t14176 * t16169;
t15821 = t14429 * t14312;
t15913 = t14390 * t14397;
t16045 = t14370 * t14455;
t16051 = t14370 * t14449;
t16097 = t14355 * t14312;
t16170 = t14176 * t14429;
t16176 = t14176 * t14390;
t16178 = t14176 * t14371;
t16216 = t14135 * t14391;
t16217 = t14135 * t14374;
t16218 = t14135 * t14355;
t16229 = t14128 * t14374;
t16230 = t14128 * t14355;
t16236 = t14107 * t14355;
t16308 = t13840 * t14397;
t16314 = t13834 * t14371;
t16386 = t13465 * t14349;
t16620 = t14369 * (t14370 * t15845 - t15348) - t14066 * t14372 + t14181;
t13213 = ((-t13800 * t14370 * t16017 + (-t13465 * t15913 + t14396 * t14709) * t14176 - t14312 * t14494 + (t13800 * t16051 - t14426 * (-t14176 * t15360 - t14312 * t15341)) * t14369) * t14349 + ((t14312 * t14503 - t14521 * t16176) * t14372 - t14312 * t16314 + ((t14312 * t15324 + t14390 * t15021) * t14369 - t14312 * t15318) * t14370 + (t14312 * t16229 - t14390 * t14780) * t14369 + t14390 * t15481 + t15821) * t14397 + (-t14312 * t14515 + (-((-t14355 * t15285 + t14390 * t15300) * t14370 + t14390 * t15303 + t14135 * t16094) * t14371 + ((-t14396 * t15396 - t14971) * t14370 + t14390 * t16216 - t14948) * t14374) * t14176) * t14372 + (((t14390 * t15301 + t14948) * t14369 - t14396 * t15400) * t14370 + (t14128 * t16094 + t14971) * t14369 + t14390 * t14985) * t16178 + (((t14312 * t15399 - t14390 * t15013) * t14391 + t14428 * t14779) * t14369 + t14979 * t16176) * t14370 + ((-t14312 * t15006 - t16176 * t16229) * t14391 + t14426 * t14779) * t14369 + (t14181 * t16097 - t14390 * t16170) * t14391 + t14107 * t15469) * t14378 + ((-t13465 * t16308 + (-t13574 * t16045 - t13843 * t15354) * t14372 + t13843 * t14181 + t16614 * t15461 + (t13574 * t16051 - (t13843 * t16001 + t14104 * t15341) * t14426) * t14369) * t14349 + ((-t13840 * t14521 - t14104 * t14503) * t14372 + t13834 * t15463 + ((t13840 * t15399 - t14386 * t15013) * t14369 + t14443 * t15015) * t14370 + (-t13840 * t15006 - t14128 * t15462) * t14369 + t14167 * t16169 + t13822 - t14050) * t14397 + (((-t13840 * t15300 - t15056) * t14370 - t13840 * t15303 + t13843 * t16218) * t14371 + ((-t13840 * t15330 + t14104 * t15398) * t14391 + t14455 * t15057) * t14370 + (t13840 * t16217 + t14104 * t15007) * t14391 + t14374 * t15055) * t14372 + (((t13840 * t15301 - t15055) * t14369 + t13843 * t15400) * t14370 + (t13840 * t15304 - t13843 * t16230) * t14369 + t13840 * t14985) * t14371 + (((-t13840 * t15324 - t14386 * t15021) * t14391 - t14449 * t15057) * t14369 + t13840 * t14979) * t14370 + ((-t13840 * t16229 + t14386 * t14780) * t14391 - t14374 * t15056) * t14369 + (-t14429 * t16810 + (-t14390 * t15821 - t15481) * t14386) * t14391 - t13843 * t16236) * t14389 - t14312 * ((t14371 * t16775 - t14539 * t14374 + t14429) * t14397 + (t14355 * t16620 - t16386) * t14391);
t15926 = t14389 * t14390;
t14703 = t14176 * t15926 + t13840;
t16449 = t13213 ^ 2 / t14703 ^ 2;
t15676 = t14390 * t16449;
t15146 = t14396 * t15676;
t16833 = t16817 * t14292 * t15146;
t14313 = t14336 + qJ(3,5);
t14293 = 0.1e1 / t14313;
t14392 = sin(qJ(2,5));
t16630 = t14313 * t14386 + t16177;
t14398 = cos(qJ(2,5));
t16809 = t14398 * t14153;
t16787 = t16630 * t14392 + t16809;
t16818 = 0.1e1 / t16787;
t16832 = t16818 * t14293;
t14294 = 0.1e1 / t14313 ^ 2;
t14295 = t14293 * t14294;
t14456 = koppelP(5,1);
t15826 = t14428 * t14456;
t14450 = koppelP(5,2);
t15844 = t14427 * t14450;
t14129 = t14373 * t15844 + t15826;
t14444 = koppelP(5,3);
t15850 = t14427 * t14444;
t15857 = t14426 * t14456;
t13756 = t14129 * t14369 + (t14369 * t15857 - t15850) * t14370;
t15838 = t14427 * t14456;
t14259 = t14373 * t15838;
t13991 = t14450 * t15195 + t14259;
t14538 = t13991 * t14372 - t13756;
t16006 = t14373 * t14444;
t15257 = t14428 * t16006;
t13835 = t14450 * t16706 + t15257;
t16016 = t14372 * t14456;
t16774 = t14216 * t16016 - t13835;
t13466 = t14538 * t14371 + t14374 * t16774 + t14430;
t14095 = t14153 * t14392;
t15943 = t14386 * t14398;
t13844 = -t14313 * t15943 + t14095;
t14393 = sin(qJ(1,5));
t13575 = t13844 * t14427 - t14393 * t15014;
t15340 = t14393 * t15976;
t15893 = t14398 * t14427;
t13801 = -t14176 * t15893 + t14313 * t15340;
t14182 = t14373 * t15850 + t14431;
t14403 = legFrame(5,2);
t14356 = cos(t14403);
t16168 = t14182 * t14356;
t13823 = t16809 * t16168;
t15949 = t14386 * t14392;
t14168 = t14313 * t15949;
t13841 = t16809 + t14168;
t14108 = t15257 * t14374 - t14430;
t15832 = t14428 * t14450;
t14137 = t14259 - t15832;
t14350 = sin(t14403);
t14399 = cos(qJ(1,5));
t15323 = t14374 * t15857;
t16615 = t14372 * (t13991 * t14371 + t15323) - t13756 * t14371 - t14108;
t14493 = t14393 * t16615;
t16024 = t14371 * t14456;
t15251 = t14216 * t16024;
t15863 = t14426 * t14450;
t14502 = t14374 * (t14370 * t15863 - t14137) + t15251;
t15353 = t14373 * t15863;
t14067 = t14370 * t15838 + t15353;
t14520 = t14356 * t14067;
t14514 = t14393 * t14520;
t14708 = t14372 * t15353 - t14182;
t16089 = t14356 * t14398;
t15468 = t14176 * t16089;
t15974 = t14374 * t14450;
t14777 = t15468 * t15974;
t15347 = t14373 * t15857;
t15003 = t14356 * t15347;
t14778 = t14176 * t15003;
t15394 = t14356 * t15857;
t14946 = t14398 * t15394;
t15297 = t14393 * t15863;
t14968 = t14392 * t15297;
t15295 = t14393 * t15850;
t14978 = t14374 * t15295;
t14984 = t14393 * t15257;
t15004 = t14356 * t15353;
t15012 = t14176 * t15323;
t15392 = t14356 * t15844;
t15020 = t14176 * t15392;
t15052 = t13844 * t15394;
t15395 = t14356 * t15863;
t15053 = t13844 * t15395;
t16304 = t13844 * t14356;
t15054 = t15976 * t16304;
t15284 = t14398 * t15863;
t15293 = t14393 * t15826;
t15294 = t14393 * t15832;
t15296 = t14393 * t15857;
t15317 = t14374 * t15850;
t15329 = t14374 * t15863;
t15906 = t14393 * t14450;
t15339 = t14374 * t15906;
t16000 = t14373 * t14456;
t15359 = t14398 * t16000;
t15389 = t14356 * t15826;
t15391 = t14356 * t15838;
t15393 = t14356 * t15850;
t14114 = t14393 * t14176;
t15460 = t14386 * t14114;
t15480 = t14176 * t16168;
t15820 = t14429 * t14313;
t15908 = t14392 * t14399;
t16044 = t14370 * t14456;
t16050 = t14370 * t14450;
t16092 = t14356 * t14313;
t16175 = t14176 * t14392;
t16213 = t14137 * t14393;
t16214 = t14137 * t14374;
t16215 = t14137 * t14356;
t16227 = t14129 * t14374;
t16228 = t14129 * t14356;
t16235 = t14108 * t14356;
t16307 = t13841 * t14399;
t16313 = t13835 * t14371;
t16385 = t13466 * t14350;
t16621 = t14369 * (t14370 * t15844 - t15347) - t14067 * t14372 + t14182;
t13214 = ((-t13801 * t14370 * t16016 + (-t13466 * t15908 + t14398 * t14708) * t14176 - t14313 * t14493 + (t13801 * t16050 - t14426 * (-t14176 * t15359 - t14313 * t15339)) * t14369) * t14350 + ((t14313 * t14502 - t14520 * t16175) * t14372 - t14313 * t16313 + ((t14313 * t15323 + t14392 * t15020) * t14369 - t14313 * t15317) * t14370 + (t14313 * t16227 - t14392 * t14778) * t14369 + t14392 * t15480 + t15820) * t14399 + (-t14313 * t14514 + (-((-t14356 * t15284 + t14392 * t15293) * t14370 + t14392 * t15296 + t14137 * t16089) * t14371 + ((-t14398 * t15389 - t14968) * t14370 + t14392 * t16213 - t14946) * t14374) * t14176) * t14372 + (((t14392 * t15294 + t14946) * t14369 - t14398 * t15393) * t14370 + (t14129 * t16089 + t14968) * t14369 + t14392 * t14984) * t16178 + (((t14313 * t15392 - t14392 * t15012) * t14393 + t14428 * t14777) * t14369 + t14978 * t16175) * t14370 + ((-t14313 * t15003 - t16175 * t16227) * t14393 + t14426 * t14777) * t14369 + (t14182 * t16092 - t14392 * t16170) * t14393 + t14108 * t15468) * t14378 + ((-t13466 * t16307 + (-t13575 * t16044 - t13844 * t15353) * t14372 + t13844 * t14182 + t16615 * t15460 + (t13575 * t16050 - t14426 * (t13844 * t16000 + t14104 * t15339)) * t14369) * t14350 + ((-t13841 * t14520 - t14104 * t14502) * t14372 + t13835 * t15463 + ((t13841 * t15392 - t14386 * t15012) * t14369 + t14444 * t15015) * t14370 + (-t13841 * t15003 - t14129 * t15462) * t14369 + t14168 * t16168 + t13823 - t14050) * t14399 + (((-t13841 * t15293 - t15053) * t14370 - t13841 * t15296 + t13844 * t16215) * t14371 + ((-t13841 * t15329 + t14104 * t15391) * t14393 + t14456 * t15054) * t14370 + (t13841 * t16214 + t14104 * t15004) * t14393 + t14374 * t15052) * t14372 + (((t13841 * t15294 - t15052) * t14369 + t13844 * t15393) * t14370 + (t13841 * t15297 - t13844 * t16228) * t14369 + t13841 * t14984) * t14371 + (((-t13841 * t15323 - t14386 * t15020) * t14393 - t14450 * t15054) * t14369 + t13841 * t14978) * t14370 + ((-t13841 * t16227 + t14386 * t14778) * t14393 - t14374 * t15053) * t14369 + (-t14429 * t16809 + (-t14392 * t15820 - t15480) * t14386) * t14393 - t13844 * t16235) * t14389 - t14313 * ((t14371 * t16774 - t14538 * t14374 + t14429) * t14399 + (t14356 * t16621 - t16385) * t14393);
t15924 = t14389 * t14392;
t14702 = t14176 * t15924 + t13841;
t16448 = t13214 ^ 2 / t14702 ^ 2;
t15674 = t14392 * t16448;
t15144 = t14398 * t15674;
t16831 = t16818 * t14295 * t15144;
t14314 = t14336 + qJ(3,4);
t14296 = 0.1e1 / t14314;
t14394 = sin(qJ(2,4));
t16631 = t14314 * t14386 + t16177;
t14400 = cos(qJ(2,4));
t16808 = t14400 * t14153;
t16786 = t16631 * t14394 + t16808;
t16819 = 0.1e1 / t16786;
t16830 = t16819 * t14296;
t14297 = 0.1e1 / t14314 ^ 2;
t14298 = t14296 * t14297;
t14457 = koppelP(4,1);
t15825 = t14428 * t14457;
t14451 = koppelP(4,2);
t15843 = t14427 * t14451;
t14130 = t14373 * t15843 + t15825;
t14445 = koppelP(4,3);
t15849 = t14427 * t14445;
t15856 = t14426 * t14457;
t13757 = t14130 * t14369 + (t14369 * t15856 - t15849) * t14370;
t15837 = t14427 * t14457;
t14260 = t14373 * t15837;
t13992 = t14451 * t15195 + t14260;
t14537 = t13992 * t14372 - t13757;
t16005 = t14373 * t14445;
t15256 = t14428 * t16005;
t13836 = t14451 * t16706 + t15256;
t16015 = t14372 * t14457;
t16773 = t14216 * t16015 - t13836;
t13467 = t14537 * t14371 + t14374 * t16773 + t14430;
t14096 = t14153 * t14394;
t15941 = t14386 * t14400;
t13845 = -t14314 * t15941 + t14096;
t14395 = sin(qJ(1,4));
t13576 = t13845 * t14427 - t14395 * t15014;
t15338 = t14395 * t15976;
t15890 = t14400 * t14427;
t13802 = -t14176 * t15890 + t14314 * t15338;
t14183 = t14373 * t15849 + t14431;
t14404 = legFrame(4,2);
t14357 = cos(t14404);
t16167 = t14183 * t14357;
t13824 = t16808 * t16167;
t15947 = t14386 * t14394;
t14169 = t14314 * t15947;
t13842 = t16808 + t14169;
t14109 = t15256 * t14374 - t14430;
t15831 = t14428 * t14451;
t14139 = t14260 - t15831;
t14351 = sin(t14404);
t14401 = cos(qJ(1,4));
t15322 = t14374 * t15856;
t16616 = t14372 * (t13992 * t14371 + t15322) - t13757 * t14371 - t14109;
t14492 = t14395 * t16616;
t16023 = t14371 * t14457;
t15250 = t14216 * t16023;
t15862 = t14426 * t14451;
t14501 = t14374 * (t14370 * t15862 - t14139) + t15250;
t15352 = t14373 * t15862;
t14068 = t14370 * t15837 + t15352;
t14519 = t14357 * t14068;
t14513 = t14395 * t14519;
t14707 = t14372 * t15352 - t14183;
t16084 = t14357 * t14400;
t15467 = t14176 * t16084;
t15973 = t14374 * t14451;
t14775 = t15467 * t15973;
t15346 = t14373 * t15856;
t15000 = t14357 * t15346;
t14776 = t14176 * t15000;
t15290 = t14395 * t15862;
t14965 = t14394 * t15290;
t15288 = t14395 * t15849;
t14977 = t14374 * t15288;
t14983 = t14395 * t15256;
t15387 = t14357 * t15856;
t14998 = t14400 * t15387;
t15001 = t14357 * t15352;
t15011 = t14176 * t15322;
t15385 = t14357 * t15843;
t15019 = t14176 * t15385;
t15049 = t13845 * t15387;
t15388 = t14357 * t15862;
t15050 = t13845 * t15388;
t16303 = t13845 * t14357;
t15051 = t15976 * t16303;
t15283 = t14400 * t15862;
t15286 = t14395 * t15825;
t15287 = t14395 * t15831;
t15289 = t14395 * t15856;
t15316 = t14374 * t15849;
t15328 = t14374 * t15862;
t15900 = t14395 * t14451;
t15337 = t14374 * t15900;
t15999 = t14373 * t14457;
t15358 = t14400 * t15999;
t15382 = t14357 * t15825;
t15384 = t14357 * t15837;
t15386 = t14357 * t15849;
t14115 = t14395 * t14176;
t15459 = t14386 * t14115;
t15479 = t14176 * t16167;
t15819 = t14429 * t14314;
t15902 = t14394 * t14401;
t16043 = t14370 * t14457;
t16049 = t14370 * t14451;
t16087 = t14357 * t14314;
t16174 = t14176 * t14394;
t16210 = t14139 * t14395;
t16211 = t14139 * t14374;
t16212 = t14139 * t14357;
t16225 = t14130 * t14374;
t16226 = t14130 * t14357;
t16234 = t14109 * t14357;
t16306 = t13842 * t14401;
t16312 = t13836 * t14371;
t16384 = t13467 * t14351;
t16622 = t14369 * (t14370 * t15843 - t15346) - t14068 * t14372 + t14183;
t13215 = ((-t13802 * t14370 * t16015 + (-t13467 * t15902 + t14400 * t14707) * t14176 - t14314 * t14492 + (t13802 * t16049 - t14426 * (-t14176 * t15358 - t14314 * t15337)) * t14369) * t14351 + ((t14314 * t14501 - t14519 * t16174) * t14372 - t14314 * t16312 + ((t14314 * t15322 + t14394 * t15019) * t14369 - t14314 * t15316) * t14370 + (t14314 * t16225 - t14394 * t14776) * t14369 + t14394 * t15479 + t15819) * t14401 + (-t14314 * t14513 + (-((-t14357 * t15283 + t14394 * t15286) * t14370 + t14394 * t15289 + t14139 * t16084) * t14371 + ((-t14400 * t15382 - t14965) * t14370 + t14394 * t16210 - t14998) * t14374) * t14176) * t14372 + (((t14394 * t15287 + t14998) * t14369 - t14400 * t15386) * t14370 + (t14130 * t16084 + t14965) * t14369 + t14394 * t14983) * t16178 + (((t14314 * t15385 - t14394 * t15011) * t14395 + t14428 * t14775) * t14369 + t14977 * t16174) * t14370 + ((-t14314 * t15000 - t16174 * t16225) * t14395 + t14426 * t14775) * t14369 + (t14183 * t16087 - t14394 * t16170) * t14395 + t14109 * t15467) * t14378 + ((-t13467 * t16306 + (-t13576 * t16043 - t13845 * t15352) * t14372 + t13845 * t14183 + t16616 * t15459 + (t13576 * t16049 - t14426 * (t13845 * t15999 + t14104 * t15337)) * t14369) * t14351 + ((-t13842 * t14519 - t14104 * t14501) * t14372 + t13836 * t15463 + ((t13842 * t15385 - t14386 * t15011) * t14369 + t14445 * t15015) * t14370 + (-t13842 * t15000 - t14130 * t15462) * t14369 + t14169 * t16167 + t13824 - t14050) * t14401 + (((-t13842 * t15286 - t15050) * t14370 - t13842 * t15289 + t13845 * t16212) * t14371 + ((-t13842 * t15328 + t14104 * t15384) * t14395 + t14457 * t15051) * t14370 + (t13842 * t16211 + t14104 * t15001) * t14395 + t14374 * t15049) * t14372 + (((t13842 * t15287 - t15049) * t14369 + t13845 * t15386) * t14370 + (t13842 * t15290 - t13845 * t16226) * t14369 + t13842 * t14983) * t14371 + (((-t13842 * t15322 - t14386 * t15019) * t14395 - t14451 * t15051) * t14369 + t13842 * t14977) * t14370 + ((-t13842 * t16225 + t14386 * t14776) * t14395 - t14374 * t15050) * t14369 + (-t14429 * t16808 + (-t14394 * t15819 - t15479) * t14386) * t14395 - t13845 * t16234) * t14389 - t14314 * ((t14371 * t16773 - t14537 * t14374 + t14429) * t14401 + (t14357 * t16622 - t16384) * t14395);
t15922 = t14389 * t14394;
t14701 = t14176 * t15922 + t13842;
t16447 = t13215 ^ 2 / t14701 ^ 2;
t15672 = t14394 * t16447;
t15142 = t14400 * t15672;
t16829 = t16819 * t14298 * t15142;
t14318 = t14336 + qJ(3,3);
t14303 = 0.1e1 / t14318;
t14414 = sin(qJ(2,3));
t16632 = t14318 * t14386 + t16177;
t14420 = cos(qJ(2,3));
t16807 = t14420 * t14153;
t16785 = t16632 * t14414 + t16807;
t16820 = 0.1e1 / t16785;
t16828 = t16820 * t14303;
t14304 = 0.1e1 / t14318 ^ 2;
t14305 = t14303 * t14304;
t14458 = koppelP(3,1);
t15824 = t14428 * t14458;
t14452 = koppelP(3,2);
t15842 = t14427 * t14452;
t14131 = t14373 * t15842 + t15824;
t14446 = koppelP(3,3);
t15848 = t14427 * t14446;
t15855 = t14426 * t14458;
t13758 = t14131 * t14369 + (t14369 * t15855 - t15848) * t14370;
t15836 = t14427 * t14458;
t14261 = t14373 * t15836;
t13993 = t14452 * t15195 + t14261;
t14536 = t13993 * t14372 - t13758;
t16004 = t14373 * t14446;
t15255 = t14428 * t16004;
t13837 = t14452 * t16706 + t15255;
t16014 = t14372 * t14458;
t16772 = t14216 * t16014 - t13837;
t13468 = t14536 * t14371 + t14374 * t16772 + t14430;
t14100 = t14153 * t14414;
t15933 = t14386 * t14420;
t13849 = -t14318 * t15933 + t14100;
t14415 = sin(qJ(1,3));
t13577 = t13849 * t14427 - t14415 * t15014;
t15336 = t14415 * t15976;
t15872 = t14420 * t14427;
t13809 = -t14176 * t15872 + t14318 * t15336;
t14184 = t14373 * t15848 + t14431;
t14405 = legFrame(3,2);
t14358 = cos(t14405);
t16166 = t14184 * t14358;
t13825 = t16807 * t16166;
t15939 = t14386 * t14414;
t14178 = t14318 * t15939;
t13846 = t16807 + t14178;
t14110 = t15255 * t14374 - t14430;
t15830 = t14428 * t14452;
t14141 = t14261 - t15830;
t14352 = sin(t14405);
t14421 = cos(qJ(1,3));
t15321 = t14374 * t15855;
t16617 = t14372 * (t13993 * t14371 + t15321) - t13758 * t14371 - t14110;
t14491 = t14415 * t16617;
t16022 = t14371 * t14458;
t15249 = t14216 * t16022;
t15861 = t14426 * t14452;
t14500 = t14374 * (t14370 * t15861 - t14141) + t15249;
t15351 = t14373 * t15861;
t14069 = t14370 * t15836 + t15351;
t14518 = t14358 * t14069;
t14512 = t14415 * t14518;
t14706 = t14372 * t15351 - t14184;
t16079 = t14358 * t14420;
t15466 = t14176 * t16079;
t15972 = t14374 * t14452;
t14773 = t15466 * t15972;
t15345 = t14373 * t15855;
t14996 = t14358 * t15345;
t14774 = t14176 * t14996;
t15280 = t14415 * t15861;
t14962 = t14414 * t15280;
t15278 = t14415 * t15848;
t14976 = t14374 * t15278;
t14982 = t14415 * t15255;
t15380 = t14358 * t15855;
t14994 = t14420 * t15380;
t14997 = t14358 * t15351;
t15010 = t14176 * t15321;
t15378 = t14358 * t15842;
t15018 = t14176 * t15378;
t15046 = t13849 * t15380;
t15381 = t14358 * t15861;
t15047 = t13849 * t15381;
t16299 = t13849 * t14358;
t15048 = t15976 * t16299;
t15261 = t14420 * t15861;
t15276 = t14415 * t15824;
t15277 = t14415 * t15830;
t15279 = t14415 * t15855;
t15315 = t14374 * t15848;
t15327 = t14374 * t15861;
t15886 = t14415 * t14452;
t15335 = t14374 * t15886;
t15998 = t14373 * t14458;
t15357 = t14420 * t15998;
t15375 = t14358 * t15824;
t15377 = t14358 * t15836;
t15379 = t14358 * t15848;
t14116 = t14415 * t14176;
t15458 = t14386 * t14116;
t15478 = t14176 * t16166;
t15818 = t14429 * t14318;
t15888 = t14414 * t14421;
t16042 = t14370 * t14458;
t16048 = t14370 * t14452;
t16082 = t14358 * t14318;
t16173 = t14176 * t14414;
t16207 = t14141 * t14415;
t16208 = t14141 * t14374;
t16209 = t14141 * t14358;
t16223 = t14131 * t14374;
t16224 = t14131 * t14358;
t16233 = t14110 * t14358;
t16302 = t13846 * t14421;
t16311 = t13837 * t14371;
t16383 = t13468 * t14352;
t16623 = t14369 * (t14370 * t15842 - t15345) - t14069 * t14372 + t14184;
t13219 = ((-t13809 * t14370 * t16014 + (-t13468 * t15888 + t14420 * t14706) * t14176 - t14318 * t14491 + (t13809 * t16048 - t14426 * (-t14176 * t15357 - t14318 * t15335)) * t14369) * t14352 + ((t14318 * t14500 - t14518 * t16173) * t14372 - t14318 * t16311 + ((t14318 * t15321 + t14414 * t15018) * t14369 - t14318 * t15315) * t14370 + (t14318 * t16223 - t14414 * t14774) * t14369 + t14414 * t15478 + t15818) * t14421 + (-t14318 * t14512 + (-((-t14358 * t15261 + t14414 * t15276) * t14370 + t14414 * t15279 + t14141 * t16079) * t14371 + ((-t14420 * t15375 - t14962) * t14370 + t14414 * t16207 - t14994) * t14374) * t14176) * t14372 + (((t14414 * t15277 + t14994) * t14369 - t14420 * t15379) * t14370 + (t14131 * t16079 + t14962) * t14369 + t14414 * t14982) * t16178 + (((t14318 * t15378 - t14414 * t15010) * t14415 + t14428 * t14773) * t14369 + t14976 * t16173) * t14370 + ((-t14318 * t14996 - t16173 * t16223) * t14415 + t14426 * t14773) * t14369 + (t14184 * t16082 - t14414 * t16170) * t14415 + t14110 * t15466) * t14378 + ((-t13468 * t16302 + (-t13577 * t16042 - t13849 * t15351) * t14372 + t14184 * t13849 + t16617 * t15458 + (t13577 * t16048 - t14426 * (t13849 * t15998 + t14104 * t15335)) * t14369) * t14352 + ((-t13846 * t14518 - t14104 * t14500) * t14372 + t13837 * t15463 + ((t13846 * t15378 - t14386 * t15010) * t14369 + t14446 * t15015) * t14370 + (-t13846 * t14996 - t14131 * t15462) * t14369 + t14178 * t16166 + t13825 - t14050) * t14421 + (((-t13846 * t15276 - t15047) * t14370 - t13846 * t15279 + t13849 * t16209) * t14371 + ((-t13846 * t15327 + t14104 * t15377) * t14415 + t14458 * t15048) * t14370 + (t13846 * t16208 + t14104 * t14997) * t14415 + t14374 * t15046) * t14372 + (((t13846 * t15277 - t15046) * t14369 + t13849 * t15379) * t14370 + (t13846 * t15280 - t13849 * t16224) * t14369 + t13846 * t14982) * t14371 + (((-t13846 * t15321 - t14386 * t15018) * t14415 - t14452 * t15048) * t14369 + t13846 * t14976) * t14370 + ((-t13846 * t16223 + t14386 * t14774) * t14415 - t14374 * t15047) * t14369 + (-t14429 * t16807 + (-t14414 * t15818 - t15478) * t14386) * t14415 - t13849 * t16233) * t14389 - t14318 * ((t14371 * t16772 - t14536 * t14374 + t14429) * t14421 + (t14358 * t16623 - t16383) * t14415);
t15920 = t14389 * t14414;
t14700 = t14176 * t15920 + t13846;
t16443 = t13219 ^ 2 / t14700 ^ 2;
t15655 = t14414 * t16443;
t15119 = t14420 * t15655;
t16827 = t16820 * t14305 * t15119;
t14319 = t14336 + qJ(3,2);
t14306 = 0.1e1 / t14319;
t14416 = sin(qJ(2,2));
t16633 = t14319 * t14386 + t16177;
t14422 = cos(qJ(2,2));
t16806 = t14422 * t14153;
t16784 = t16633 * t14416 + t16806;
t16821 = 0.1e1 / t16784;
t16826 = t16821 * t14306;
t14307 = 0.1e1 / t14319 ^ 2;
t14308 = t14306 * t14307;
t14459 = koppelP(2,1);
t15823 = t14428 * t14459;
t14453 = koppelP(2,2);
t15841 = t14427 * t14453;
t14132 = t14373 * t15841 + t15823;
t14447 = koppelP(2,3);
t15847 = t14427 * t14447;
t15854 = t14426 * t14459;
t13759 = t14132 * t14369 + (t14369 * t15854 - t15847) * t14370;
t15835 = t14427 * t14459;
t14262 = t14373 * t15835;
t13994 = t14453 * t15195 + t14262;
t14535 = t13994 * t14372 - t13759;
t16003 = t14373 * t14447;
t15254 = t14428 * t16003;
t13838 = t14453 * t16706 + t15254;
t16013 = t14372 * t14459;
t16771 = t14216 * t16013 - t13838;
t13469 = t14535 * t14371 + t14374 * t16771 + t14430;
t14101 = t14153 * t14416;
t15931 = t14386 * t14422;
t13850 = -t14319 * t15931 + t14101;
t14417 = sin(qJ(1,2));
t13578 = t13850 * t14427 - t14417 * t15014;
t15334 = t14417 * t15976;
t15869 = t14422 * t14427;
t13810 = -t14176 * t15869 + t14319 * t15334;
t14185 = t14373 * t15847 + t14431;
t14406 = legFrame(2,2);
t14359 = cos(t14406);
t16165 = t14185 * t14359;
t13826 = t16806 * t16165;
t15937 = t14386 * t14416;
t14179 = t14319 * t15937;
t13847 = t16806 + t14179;
t14111 = t15254 * t14374 - t14430;
t15829 = t14428 * t14453;
t14143 = t14262 - t15829;
t14353 = sin(t14406);
t14423 = cos(qJ(1,2));
t15320 = t14374 * t15854;
t16618 = t14372 * (t13994 * t14371 + t15320) - t13759 * t14371 - t14111;
t14490 = t14417 * t16618;
t16021 = t14371 * t14459;
t15248 = t14216 * t16021;
t15860 = t14426 * t14453;
t14499 = t14374 * (t14370 * t15860 - t14143) + t15248;
t15350 = t14373 * t15860;
t14070 = t14370 * t15835 + t15350;
t14517 = t14359 * t14070;
t14511 = t14417 * t14517;
t14705 = t14372 * t15350 - t14185;
t16074 = t14359 * t14422;
t15465 = t14176 * t16074;
t15971 = t14374 * t14453;
t14771 = t15465 * t15971;
t15344 = t14373 * t15854;
t14992 = t14359 * t15344;
t14772 = t14176 * t14992;
t15273 = t14417 * t15860;
t14959 = t14416 * t15273;
t15271 = t14417 * t15847;
t14975 = t14374 * t15271;
t14981 = t14417 * t15254;
t15373 = t14359 * t15854;
t14990 = t14422 * t15373;
t14993 = t14359 * t15350;
t15009 = t14176 * t15320;
t15371 = t14359 * t15841;
t15017 = t14176 * t15371;
t15043 = t13850 * t15373;
t15374 = t14359 * t15860;
t15044 = t13850 * t15374;
t16298 = t13850 * t14359;
t15045 = t15976 * t16298;
t15260 = t14422 * t15860;
t15269 = t14417 * t15823;
t15270 = t14417 * t15829;
t15272 = t14417 * t15854;
t15314 = t14374 * t15847;
t15326 = t14374 * t15860;
t15881 = t14417 * t14453;
t15333 = t14374 * t15881;
t15997 = t14373 * t14459;
t15356 = t14422 * t15997;
t15368 = t14359 * t15823;
t15370 = t14359 * t15835;
t15372 = t14359 * t15847;
t14117 = t14417 * t14176;
t15457 = t14386 * t14117;
t15477 = t14176 * t16165;
t15817 = t14429 * t14319;
t15883 = t14416 * t14423;
t16041 = t14370 * t14459;
t16047 = t14370 * t14453;
t16077 = t14359 * t14319;
t16172 = t14176 * t14416;
t16204 = t14143 * t14417;
t16205 = t14143 * t14374;
t16206 = t14143 * t14359;
t16221 = t14132 * t14374;
t16222 = t14132 * t14359;
t16232 = t14111 * t14359;
t16301 = t13847 * t14423;
t16310 = t13838 * t14371;
t16382 = t13469 * t14353;
t16624 = t14369 * (t14370 * t15841 - t15344) - t14070 * t14372 + t14185;
t13220 = ((-t13810 * t14370 * t16013 + (-t13469 * t15883 + t14422 * t14705) * t14176 - t14319 * t14490 + (t13810 * t16047 - t14426 * (-t14176 * t15356 - t14319 * t15333)) * t14369) * t14353 + ((t14319 * t14499 - t14517 * t16172) * t14372 - t14319 * t16310 + ((t14319 * t15320 + t14416 * t15017) * t14369 - t14319 * t15314) * t14370 + (t14319 * t16221 - t14416 * t14772) * t14369 + t14416 * t15477 + t15817) * t14423 + (-t14319 * t14511 + (-((-t14359 * t15260 + t14416 * t15269) * t14370 + t14416 * t15272 + t14143 * t16074) * t14371 + ((-t14422 * t15368 - t14959) * t14370 + t14416 * t16204 - t14990) * t14374) * t14176) * t14372 + (((t14416 * t15270 + t14990) * t14369 - t14422 * t15372) * t14370 + (t14132 * t16074 + t14959) * t14369 + t14416 * t14981) * t16178 + (((t14319 * t15371 - t14416 * t15009) * t14417 + t14428 * t14771) * t14369 + t14975 * t16172) * t14370 + ((-t14319 * t14992 - t16172 * t16221) * t14417 + t14426 * t14771) * t14369 + (t14185 * t16077 - t14416 * t16170) * t14417 + t14111 * t15465) * t14378 + ((-t13469 * t16301 + (-t13578 * t16041 - t13850 * t15350) * t14372 + t14185 * t13850 + t16618 * t15457 + (t13578 * t16047 - t14426 * (t13850 * t15997 + t14104 * t15333)) * t14369) * t14353 + ((-t13847 * t14517 - t14104 * t14499) * t14372 + t13838 * t15463 + ((t13847 * t15371 - t14386 * t15009) * t14369 + t14447 * t15015) * t14370 + (-t13847 * t14992 - t14132 * t15462) * t14369 + t14179 * t16165 + t13826 - t14050) * t14423 + (((-t13847 * t15269 - t15044) * t14370 - t13847 * t15272 + t13850 * t16206) * t14371 + ((-t13847 * t15326 + t14104 * t15370) * t14417 + t14459 * t15045) * t14370 + (t13847 * t16205 + t14104 * t14993) * t14417 + t14374 * t15043) * t14372 + (((t13847 * t15270 - t15043) * t14369 + t13850 * t15372) * t14370 + (t13847 * t15273 - t13850 * t16222) * t14369 + t13847 * t14981) * t14371 + (((-t13847 * t15320 - t14386 * t15017) * t14417 - t14453 * t15045) * t14369 + t13847 * t14975) * t14370 + ((-t13847 * t16221 + t14386 * t14772) * t14417 - t14374 * t15044) * t14369 + (-t14429 * t16806 + (-t14416 * t15817 - t15477) * t14386) * t14417 - t13850 * t16232) * t14389 - t14319 * ((t14371 * t16771 - t14535 * t14374 + t14429) * t14423 + (t14359 * t16624 - t16382) * t14417);
t15918 = t14389 * t14416;
t14699 = t14176 * t15918 + t13847;
t16442 = t13220 ^ 2 / t14699 ^ 2;
t15653 = t14416 * t16442;
t15117 = t14422 * t15653;
t16825 = t16821 * t14308 * t15117;
t14320 = t14336 + qJ(3,1);
t14309 = 0.1e1 / t14320;
t14418 = sin(qJ(2,1));
t16634 = t14320 * t14386 + t16177;
t14424 = cos(qJ(2,1));
t16805 = t14424 * t14153;
t16783 = t16634 * t14418 + t16805;
t16822 = 0.1e1 / t16783;
t16824 = t16822 * t14309;
t14310 = 0.1e1 / t14320 ^ 2;
t14311 = t14309 * t14310;
t14460 = koppelP(1,1);
t15822 = t14428 * t14460;
t14454 = koppelP(1,2);
t15840 = t14427 * t14454;
t14133 = t14373 * t15840 + t15822;
t14448 = koppelP(1,3);
t15846 = t14427 * t14448;
t15853 = t14426 * t14460;
t13760 = t14133 * t14369 + (t14369 * t15853 - t15846) * t14370;
t15834 = t14427 * t14460;
t14263 = t14373 * t15834;
t13995 = t14454 * t15195 + t14263;
t14534 = t13995 * t14372 - t13760;
t16002 = t14373 * t14448;
t15253 = t14428 * t16002;
t13839 = t14454 * t16706 + t15253;
t16012 = t14372 * t14460;
t16770 = t14216 * t16012 - t13839;
t13470 = t14534 * t14371 + t14374 * t16770 + t14430;
t14102 = t14153 * t14418;
t15929 = t14386 * t14424;
t13851 = -t14320 * t15929 + t14102;
t14419 = sin(qJ(1,1));
t13579 = t13851 * t14427 - t14419 * t15014;
t15332 = t14419 * t15976;
t15866 = t14424 * t14427;
t13811 = -t14176 * t15866 + t14320 * t15332;
t14186 = t14373 * t15846 + t14431;
t14407 = legFrame(1,2);
t14360 = cos(t14407);
t16164 = t14186 * t14360;
t13827 = t16805 * t16164;
t15935 = t14386 * t14418;
t14180 = t14320 * t15935;
t13848 = t16805 + t14180;
t14112 = t15253 * t14374 - t14430;
t15828 = t14428 * t14454;
t14145 = t14263 - t15828;
t14354 = sin(t14407);
t14425 = cos(qJ(1,1));
t15319 = t14374 * t15853;
t16619 = t14372 * (t13995 * t14371 + t15319) - t13760 * t14371 - t14112;
t14489 = t14419 * t16619;
t16020 = t14371 * t14460;
t15246 = t14216 * t16020;
t15859 = t14426 * t14454;
t14498 = t14374 * (t14370 * t15859 - t14145) + t15246;
t15349 = t14373 * t15859;
t14071 = t14370 * t15834 + t15349;
t14516 = t14360 * t14071;
t14510 = t14419 * t14516;
t14704 = t14372 * t15349 - t14186;
t16069 = t14360 * t14424;
t15464 = t14176 * t16069;
t15970 = t14374 * t14454;
t14769 = t15464 * t15970;
t15343 = t14373 * t15853;
t14988 = t14360 * t15343;
t14770 = t14176 * t14988;
t15266 = t14419 * t15859;
t14956 = t14418 * t15266;
t15264 = t14419 * t15846;
t14974 = t14374 * t15264;
t14980 = t14419 * t15253;
t15366 = t14360 * t15853;
t14986 = t14424 * t15366;
t14989 = t14360 * t15349;
t15008 = t14176 * t15319;
t15364 = t14360 * t15840;
t15016 = t14176 * t15364;
t15040 = t13851 * t15366;
t15367 = t14360 * t15859;
t15041 = t13851 * t15367;
t16297 = t13851 * t14360;
t15042 = t15976 * t16297;
t15259 = t14424 * t15859;
t15262 = t14419 * t15822;
t15263 = t14419 * t15828;
t15265 = t14419 * t15853;
t15313 = t14374 * t15846;
t15325 = t14374 * t15859;
t15876 = t14419 * t14454;
t15331 = t14374 * t15876;
t15996 = t14373 * t14460;
t15355 = t14424 * t15996;
t15361 = t14360 * t15822;
t15363 = t14360 * t15834;
t15365 = t14360 * t15846;
t14118 = t14419 * t14176;
t15456 = t14386 * t14118;
t15476 = t14176 * t16164;
t15816 = t14429 * t14320;
t15878 = t14418 * t14425;
t16040 = t14370 * t14460;
t16046 = t14370 * t14454;
t16072 = t14360 * t14320;
t16171 = t14176 * t14418;
t16201 = t14145 * t14419;
t16202 = t14145 * t14374;
t16203 = t14145 * t14360;
t16219 = t14133 * t14374;
t16220 = t14133 * t14360;
t16231 = t14112 * t14360;
t16300 = t13848 * t14425;
t16309 = t13839 * t14371;
t16381 = t13470 * t14354;
t16625 = t14369 * (t14370 * t15840 - t15343) - t14071 * t14372 + t14186;
t13221 = ((-t13811 * t14370 * t16012 + (-t13470 * t15878 + t14424 * t14704) * t14176 - t14320 * t14489 + (t13811 * t16046 - t14426 * (-t14176 * t15355 - t14320 * t15331)) * t14369) * t14354 + ((t14320 * t14498 - t14516 * t16171) * t14372 - t14320 * t16309 + ((t14320 * t15319 + t14418 * t15016) * t14369 - t14320 * t15313) * t14370 + (t14320 * t16219 - t14418 * t14770) * t14369 + t14418 * t15476 + t15816) * t14425 + (-t14320 * t14510 + (-((-t14360 * t15259 + t14418 * t15262) * t14370 + t14418 * t15265 + t14145 * t16069) * t14371 + ((-t14424 * t15361 - t14956) * t14370 + t14418 * t16201 - t14986) * t14374) * t14176) * t14372 + (((t14418 * t15263 + t14986) * t14369 - t14424 * t15365) * t14370 + (t14133 * t16069 + t14956) * t14369 + t14418 * t14980) * t16178 + (((t14320 * t15364 - t14418 * t15008) * t14419 + t14428 * t14769) * t14369 + t14974 * t16171) * t14370 + ((-t14320 * t14988 - t16171 * t16219) * t14419 + t14426 * t14769) * t14369 + (t14186 * t16072 - t14418 * t16170) * t14419 + t14112 * t15464) * t14378 + ((-t13470 * t16300 + (-t13579 * t16040 - t13851 * t15349) * t14372 + t14186 * t13851 + t16619 * t15456 + (t13579 * t16046 - t14426 * (t13851 * t15996 + t14104 * t15331)) * t14369) * t14354 + ((-t13848 * t14516 - t14104 * t14498) * t14372 + t13839 * t15463 + ((t13848 * t15364 - t14386 * t15008) * t14369 + t14448 * t15015) * t14370 + (-t13848 * t14988 - t14133 * t15462) * t14369 + t14180 * t16164 + t13827 - t14050) * t14425 + (((-t13848 * t15262 - t15041) * t14370 - t13848 * t15265 + t13851 * t16203) * t14371 + ((-t13848 * t15325 + t14104 * t15363) * t14419 + t14460 * t15042) * t14370 + (t13848 * t16202 + t14104 * t14989) * t14419 + t14374 * t15040) * t14372 + (((t13848 * t15263 - t15040) * t14369 + t13851 * t15365) * t14370 + (t13848 * t15266 - t13851 * t16220) * t14369 + t13848 * t14980) * t14371 + (((-t13848 * t15319 - t14386 * t15016) * t14419 - t14454 * t15042) * t14369 + t13848 * t14974) * t14370 + ((-t13848 * t16219 + t14386 * t14770) * t14419 - t14374 * t15041) * t14369 + (-t14429 * t16805 + (-t14418 * t15816 - t15476) * t14386) * t14419 - t13851 * t16231) * t14389 - t14320 * ((t14371 * t16770 - t14534 * t14374 + t14429) * t14425 + (t14360 * t16625 - t16381) * t14419);
t15916 = t14389 * t14418;
t14698 = t14176 * t15916 + t13848;
t16441 = t13221 ^ 2 / t14698 ^ 2;
t15651 = t14418 * t16441;
t15115 = t14424 * t15651;
t16823 = t16822 * t14311 * t15115;
t13657 = 0.1e1 / t14698;
t13654 = 0.1e1 / t14699;
t13651 = 0.1e1 / t14700;
t13623 = 0.1e1 / t14701;
t13620 = 0.1e1 / t14702;
t13617 = 0.1e1 / t14703;
t14246 = t14419 * t14320;
t13891 = t14176 * t15878 + t14246;
t16282 = t13891 * t14354;
t16816 = t14354 * t14246 - (t15464 + t16282) * t14378;
t14245 = t14417 * t14319;
t13887 = t14176 * t15883 + t14245;
t16283 = t13887 * t14353;
t16815 = t14353 * t14245 - (t15465 + t16283) * t14378;
t14244 = t14415 * t14318;
t13883 = t14176 * t15888 + t14244;
t16284 = t13883 * t14352;
t16814 = t14352 * t14244 - (t15466 + t16284) * t14378;
t14231 = t14395 * t14314;
t13868 = t14176 * t15902 + t14231;
t16290 = t13868 * t14351;
t16813 = t14351 * t14231 - (t15467 + t16290) * t14378;
t14230 = t14393 * t14313;
t13864 = t14176 * t15908 + t14230;
t16291 = t13864 * t14350;
t16812 = t14350 * t14230 - (t15468 + t16291) * t14378;
t14229 = t14391 * t14312;
t13860 = t14176 * t15913 + t14229;
t16292 = t13860 * t14349;
t16811 = t14349 * t14229 - (t15469 + t16292) * t14378;
t14160 = t14369 * t14455 + t14372 * t14449;
t16066 = t14369 * t14449;
t14154 = -t16017 + t16066;
t14842 = t14154 * t14370 + t16007;
t16754 = t14160 * t14371 + t14374 * t14842;
t14623 = t14355 * t16754;
t16065 = t14369 * t14450;
t14155 = -t16016 + t16065;
t13954 = t14155 * t14370 + t16006;
t14161 = t14369 * t14456 + t14372 * t14450;
t16039 = t14371 * t14161;
t16635 = t13954 * t14374 + t16039;
t14622 = t14356 * t16635;
t16064 = t14369 * t14451;
t14156 = -t16015 + t16064;
t13955 = t14156 * t14370 + t16005;
t14162 = t14369 * t14457 + t14372 * t14451;
t16038 = t14371 * t14162;
t16636 = t13955 * t14374 + t16038;
t14621 = t14357 * t16636;
t16063 = t14369 * t14452;
t14157 = -t16014 + t16063;
t13956 = t14157 * t14370 + t16004;
t14163 = t14369 * t14458 + t14372 * t14452;
t16037 = t14371 * t14163;
t16637 = t13956 * t14374 + t16037;
t14620 = t14358 * t16637;
t16062 = t14369 * t14453;
t14158 = -t16013 + t16062;
t13957 = t14158 * t14370 + t16003;
t14164 = t14369 * t14459 + t14372 * t14453;
t16036 = t14371 * t14164;
t16638 = t13957 * t14374 + t16036;
t14619 = t16638 * t14359;
t16061 = t14369 * t14454;
t14159 = -t16012 + t16061;
t13958 = t14159 * t14370 + t16002;
t14165 = t14369 * t14460 + t14372 * t14454;
t16035 = t14371 * t14165;
t16639 = t13958 * t14374 + t16035;
t14618 = t16639 * t14360;
t14332 = t14354 * g(2);
t16511 = t14360 * g(1);
t14204 = -t14332 + t16511;
t14368 = g(3) * t14425;
t16761 = t14204 * t14419 + t14368;
t16804 = t16761 * t14418;
t14331 = t14353 * g(2);
t16513 = t14359 * g(1);
t14203 = -t14331 + t16513;
t14367 = g(3) * t14423;
t16762 = t14203 * t14417 + t14367;
t16803 = t16762 * t14416;
t14330 = t14352 * g(2);
t16515 = t14358 * g(1);
t14202 = -t14330 + t16515;
t14366 = g(3) * t14421;
t16763 = t14202 * t14415 + t14366;
t16802 = t16763 * t14414;
t14329 = t14351 * g(2);
t16517 = t14357 * g(1);
t14201 = -t14329 + t16517;
t14348 = g(3) * t14401;
t16764 = t14201 * t14395 + t14348;
t16259 = t16764 * t14394;
t14328 = t14350 * g(2);
t16519 = t14356 * g(1);
t14200 = -t14328 + t16519;
t14347 = g(3) * t14399;
t16765 = t14200 * t14393 + t14347;
t16254 = t16765 * t14392;
t14327 = t14349 * g(2);
t16521 = t14355 * g(1);
t14199 = -t14327 + t16521;
t14346 = g(3) * t14397;
t16766 = t14199 * t14391 + t14346;
t16257 = t16766 * t14390;
t14084 = t14374 * t14160;
t16801 = -t14842 * t14371 + t14084;
t16315 = t16783 * t14425;
t14240 = t14320 * t14389;
t16668 = t14240 - t14104;
t16794 = t14419 * t16668 + t16315;
t16316 = t16784 * t14423;
t14238 = t14319 * t14389;
t16669 = t14238 - t14104;
t16793 = t14417 * t16669 + t16316;
t16317 = t16785 * t14421;
t14236 = t14318 * t14389;
t16670 = t14236 - t14104;
t16792 = t14415 * t16670 + t16317;
t16323 = t16786 * t14401;
t14228 = t14314 * t14389;
t16674 = t14228 - t14104;
t16791 = t14395 * t16674 + t16323;
t16324 = t16787 * t14399;
t14226 = t14313 * t14389;
t16675 = t14226 - t14104;
t16790 = t14393 * t16675 + t16324;
t16325 = t16788 * t14397;
t14224 = t14312 * t14389;
t16676 = t14224 - t14104;
t16789 = t14391 * t16676 + t16325;
t14239 = t14320 * t14378;
t15952 = t14386 * t14389;
t14049 = t14176 * t15952;
t14891 = -t14049 - t14336;
t13805 = -qJ(3,1) + t14239 + t14891;
t14384 = t14424 ^ 2;
t14249 = t14425 * t14320;
t16677 = t14418 * t14249 - t14118;
t14522 = t13891 * t15952 - t14378 * t16677 + t16677;
t15928 = t14386 * t14425;
t15482 = t14153 * t15928;
t15485 = t14153 * t15935;
t13434 = (t14354 * t15485 + t14360 * t14522) * t14424 + t14354 * t14320 + (t13805 * t14354 + t14360 * t15482) * t14384;
t14237 = t14319 * t14378;
t13804 = -qJ(3,2) + t14237 + t14891;
t14383 = t14422 ^ 2;
t14248 = t14423 * t14319;
t16678 = t14416 * t14248 - t14117;
t14523 = t13887 * t15952 - t14378 * t16678 + t16678;
t15930 = t14386 * t14423;
t15483 = t14153 * t15930;
t15486 = t14153 * t15937;
t13432 = (t14353 * t15486 + t14359 * t14523) * t14422 + t14353 * t14319 + (t13804 * t14353 + t14359 * t15483) * t14383;
t14235 = t14318 * t14378;
t13803 = -qJ(3,3) + t14235 + t14891;
t14382 = t14420 ^ 2;
t14247 = t14421 * t14318;
t16679 = t14414 * t14247 - t14116;
t14524 = t13883 * t15952 - t14378 * t16679 + t16679;
t15932 = t14386 * t14421;
t15484 = t14153 * t15932;
t15487 = t14153 * t15939;
t13430 = (t14352 * t15487 + t14358 * t14524) * t14420 + t14352 * t14318 + (t13803 * t14352 + t14358 * t15484) * t14382;
t14227 = t14314 * t14378;
t13799 = -qJ(3,4) + t14227 + t14891;
t14381 = t14400 ^ 2;
t14234 = t14401 * t14314;
t16680 = t14394 * t14234 - t14115;
t14525 = t13868 * t15952 - t14378 * t16680 + t16680;
t15940 = t14386 * t14401;
t15488 = t14153 * t15940;
t15491 = t14153 * t15947;
t13422 = (t14351 * t15491 + t14357 * t14525) * t14400 + t14351 * t14314 + (t13799 * t14351 + t14357 * t15488) * t14381;
t14225 = t14313 * t14378;
t13798 = -qJ(3,5) + t14225 + t14891;
t14380 = t14398 ^ 2;
t14233 = t14399 * t14313;
t16681 = t14392 * t14233 - t14114;
t14526 = t13864 * t15952 - t14378 * t16681 + t16681;
t15942 = t14386 * t14399;
t15489 = t14153 * t15942;
t15492 = t14153 * t15949;
t13420 = (t14350 * t15492 + t14356 * t14526) * t14398 + t14350 * t14313 + (t13798 * t14350 + t14356 * t15489) * t14380;
t14223 = t14312 * t14378;
t13797 = -qJ(3,6) + t14223 + t14891;
t14379 = t14396 ^ 2;
t14232 = t14397 * t14312;
t16682 = t14390 * t14232 - t14113;
t14527 = t13860 * t15952 - t14378 * t16682 + t16682;
t15944 = t14386 * t14397;
t15490 = t14153 * t15944;
t15493 = t14153 * t15951;
t13418 = (t14349 * t15493 + t14355 * t14527) * t14396 + t14349 * t14312 + (t13797 * t14349 + t14355 * t15490) * t14379;
t13552 = t15342 * t16676 - t15896 * t16629;
t13791 = t16629 * t15402;
t14018 = t14153 * t15304;
t14021 = t14153 * t15303;
t14768 = t14391 * t15006;
t14949 = t14153 * t15401;
t14955 = t16629 * t15303;
t15005 = t14391 * t15399;
t15027 = t14153 * t15402;
t15038 = t16629 * t15304;
t15039 = t16629 * t15401;
t15397 = t14355 * t15833;
t16095 = t14355 * t14391;
t15455 = t14181 * t16095;
t15815 = t14429 * t14391;
t15992 = t14374 * t14396;
t16096 = t14355 * t14390;
t16185 = t14153 * t14430;
t16191 = t14153 * t14391;
t16200 = t14153 * t14355;
t16269 = t16629 * t14396;
t16653 = t14429 - t16314;
t16704 = t14369 * t14373;
t16703 = t14153 * t16704;
t16705 = t14369 * t14370;
t13279 = (-t13465 * t16325 + t16620 * t14094 + (t14373 * t15285 * t16629 - t13552 * t16045) * t14372 - t14181 * t16269 - t16676 * t14494 + (t13552 * t16051 - t14426 * (-t15341 * t16676 - t15360 * t16629)) * t14369) * t14349 + (t16629 * t16620 * t16096 - t14948 * t16703 + t13822 + (-t14372 * t14521 + t15399 * t16705) * t16810 + (t14503 * t14372 + (t14369 * t15324 - t15318) * t14370 + t16229 * t14369 + t16653) * t16676) * t14397 + (-t16629 * t15815 + t14355 * t16185 + (((-t15300 * t16629 - t15027) * t14370 - t14955 + t14135 * t16200) * t14372 + ((t15301 * t16629 - t14949) * t14369 + t14153 * t15400) * t14370 + (-t14128 * t16200 + t15038) * t14369 + t16629 * t14985) * t14371 + (((t14153 * t15396 - t15038) * t14370 + t16629 * t16216 + t14949) * t14372 - ((t14153 * t15397 + t14955) * t14369 - t16629 * t15302) * t14370 - (t14128 * t14391 * t16629 + t15027) * t14369 - t15258 * t16200) * t14374) * t14390 - t16676 * t14515 * t14372 + ((-(-t15397 * t16629 + t14021) * t15992 + t16676 * t15005) * t14369 + t14979 * t16810) * t14370 + (-(t14128 * t16191 - t13791) * t15992 - t16676 * t14768) * t14369 + t16676 * t15455 + ((-((t14153 * t15300 - t13791) * t14370 + t14021 + t16629 * t16218) * t14371 + (-(t15396 * t16629 + t14018) * t14370 - t15039 + t14135 * t16191) * t14374) * t14372 + (((t14153 * t15301 + t15039) * t14369 - t16629 * t15400) * t14370 + (t16230 * t16629 + t14018) * t14369 + t14153 * t14985) * t14371 + t16629 * t16236 - t14153 * t15815) * t14396;
t16446 = t13213 * t13617;
t15670 = t14291 * t16446;
t13120 = t13279 * t15670;
t15668 = t14390 * t16446;
t14973 = t14386 * t15668;
t14829 = t14290 * t14973;
t13147 = t14250 * t14829;
t13165 = pkin(2) * t14829;
t15995 = t14374 * t14391;
t13764 = t14135 * t15995 - t14397 * t15007;
t13767 = t14128 * t15995 + t14397 * t15006;
t15991 = t14374 * t14397;
t13770 = t14128 * t15991 - t14768;
t13773 = t14135 * t15991 + t14391 * t15007;
t13854 = -t14113 * t14390 + t14232;
t16093 = t14355 * t14397;
t13931 = t14181 * t16093 - t15815;
t13934 = t14397 * t14429 + t15455;
t13960 = t14374 * t15303 - t14397 * t15399;
t13961 = t14397 * t15324 + t15005;
t13962 = t14391 * t15398 - t14397 * t15330;
t13963 = t14374 * t15304 + t14397 * t15398;
t15957 = t14379 * t14386;
t15499 = t14153 * t15957;
t16059 = t14370 * t14372;
t13855 = -t14176 * t14397 - t14229 * t14390;
t16128 = t14312 * t14390;
t16602 = ((t13960 * t16128 + t13961 * t14176) * t14369 + t13855 * t15318) * t14370 - (-(-t13962 * t14176 + t13963 * t16128) * t14370 + t13764 * t16128 + t13773 * t14176 + t13855 * t15252) * t14372 + (t13767 * t16128 + t13770 * t14176) * t14369 + t13855 * t16314 + t16682 * t16386 - t13931 * t16128 + t13934 * t14176;
t14562 = t14049 + t14312 - t14223;
t15914 = t14390 * t14396;
t15312 = t14386 * t15914;
t16613 = -t14153 * t15312 + t14379 * t14562 - t14312;
t13261 = -(t13963 * t16059 + (t14355 * t14709 + t16386) * t14397 + (t13960 * t14370 + t13767) * t14369 + ((t15252 - t16217) * t14372 - t14370 * t15318 + t16653) * t14391) * t15499 + (t16602 * t14378 + (-t13465 * t16292 + (t13854 * t15252 + (-t13962 * t14312 - t13963 * t16176) * t14370 + t13764 * t16176 - t13773 * t14312) * t14372 - t13854 * t16314 + ((-t13960 * t16176 + t13961 * t14312) * t14369 - t13854 * t15318) * t14370 + (-t13767 * t16176 + t13770 * t14312) * t14369 + t13931 * t16176 + t14312 * t13934) * t15952 - t16602) * t14396 - t16613 * (t13465 * t14355 + t14349 * t16620);
t16434 = t13261 * t16817;
t15728 = pkin(2) * t16434;
t14916 = t16555 * t15728;
t14735 = t14290 * t14916;
t15184 = t16434 * t16509;
t13027 = (-t14290 * t15184 + t13165) * t14387 + t13147 + t14735;
t14461 = pkin(6) ^ 2;
t14337 = t14461 * t14388 ^ 2;
t14462 = pkin(2) ^ 2;
t15762 = t14461 - t14462;
t14267 = t14337 - t15762;
t14935 = -0.2e1 * t15184;
t14375 = t14387 ^ 2;
t16141 = t14290 * t14375;
t13060 = (pkin(2) * t14935 * t15951 + t14267 * t16446) * t16141;
t15178 = pkin(2) * t15668;
t14747 = t15178 * t16509;
t16585 = -0.2e1 * t14386;
t13061 = (-t14267 * t16434 + t14747 * t16585) * t16141;
t15169 = t16555 * t16446;
t14865 = t14290 * t15169;
t14728 = pkin(2) * t14865;
t15803 = 0.2e1 * t16509;
t13162 = t14728 * t15803;
t15632 = t13261 * t16834;
t13225 = t14250 * t15632;
t16425 = t13279 * t14290;
t13273 = t16425 * t16509;
t16057 = t14370 * t14443;
t13947 = t14154 * t14373 - t16057;
t16032 = t14371 * t14427;
t16060 = t14370 * t14371;
t16332 = t16754 * t14428;
t13478 = -(t14154 * t14374 + t14160 * t16060) * t14426 - t13947 * t16032 - t16332;
t15977 = t14374 * t14427;
t16331 = t16801 * t14428;
t13479 = -(t14084 * t14370 - t14154 * t14371) * t14426 - t13947 * t15977 - t16331;
t16008 = t14373 * t14428;
t14004 = -t14370 * t15977 - t14371 * t16008;
t14005 = t14370 * t16032 - t14373 * t15976;
t14408 = xDDP(6);
t14409 = xDDP(5);
t14413 = xDDP(1);
t13315 = t14413 + (-t14371 * t16801 + t14374 * t16754) * t14409 + (-t14004 * t16801 + t14005 * t16754) * t14426 + ((-t13479 - t16331) * t14374 + (-t13478 - t16332) * t14371) * t14427 + ((-t14371 * t16754 - t14374 * t16801) * t14408 + (-t13478 * t14374 + t13479 * t14371) * t14426) * t14373;
t16009 = t14373 * t14426;
t13645 = t14160 * t16009 - t14427 * t14842;
t13895 = t14372 * t16001 - t14373 * t16066 + t16057;
t14411 = xDDP(3);
t15852 = t14427 * t14428;
t14840 = t14373 * t14408 + t15852;
t14495 = -t14005 * t14426 + t14371 * t14840 - t14374 * t14409;
t14410 = xDDP(4);
t15865 = t14426 * t14427;
t14556 = t14370 * t14408 + t14373 * t15865 + t14410;
t16033 = t14371 * t14373;
t13351 = t14411 + t13478 * t14428 + t13645 * t15977 + (t13478 * t14370 - t13645 * t16033) * t14426 + t14556 * t16801 + t14495 * t13895;
t14412 = xDDP(2);
t14496 = t14004 * t14426 + t14371 * t14409 + t14374 * t14840;
t16011 = t14373 * t14374;
t13357 = t14412 + t13479 * t14428 - t13645 * t16032 + (t13479 * t14370 - t13645 * t16011) * t14426 - t14556 * t16754 + t14496 * t13895;
t16601 = 0.2e1 * pkin(1);
t14251 = t15222 * t16601;
t14463 = pkin(1) ^ 2;
t15761 = t14461 + t14463;
t15231 = t14251 + t15761;
t16148 = t14267 * t14375;
t16782 = 0.2e1 * t16508;
t14630 = t14250 * t16782 - 0.2e1 * t14337 + t15231 + t16148;
t14437 = qJ(3,6) ^ 2;
t15802 = -0.2e1 * t14336;
t15775 = qJ(3,6) * t15802 - t14437;
t13626 = t14630 + t15775;
t15776 = t15222 * t16782 + t16148;
t16147 = (pkin(2) + t14312) * (-pkin(2) + t14312);
t13752 = t15776 + t16147;
t14333 = pkin(1) * t16509;
t14166 = t15762 * t16555 + t14333;
t14377 = t14389 * t14378;
t15630 = t14386 * t16434;
t14796 = t15630 * t16147;
t14841 = -t14337 - t16148;
t14911 = t14386 * t15222;
t14612 = t14911 * t16434;
t15093 = t14267 * t15630;
t16646 = t16555 * t14337 - t14166;
t15140 = t16646 * t15668;
t14241 = pkin(1) * t16555 + t16509;
t15138 = t14290 * t15668;
t14878 = pkin(2) * t15138;
t13153 = t14241 * t14878;
t13270 = t14250 * t16425;
t16702 = -0.2e1 * t13153 - t13270;
t14930 = (-0.4e1 * t14747 - t15093) * t16141 + (0.2e1 * t15140 + pkin(2) * (-0.2e1 * t14612 + t13279)) * t14290 * t14387 - t16702;
t15245 = -0.2e1 * t15728;
t14941 = t14250 * t15245;
t15629 = t14390 * t16434;
t14972 = t14153 * t15629;
t15092 = t14290 * t15630;
t15669 = t14379 * t16446;
t15136 = t14386 * t15669;
t15667 = t14396 * t16446;
t15137 = t14290 * t15667;
t15139 = t14290 * t15669;
t15190 = t14387 * t15728;
t15750 = 0.2e1 * t16434;
t15215 = t14176 * t15750;
t15230 = t14437 + t15761;
t16673 = -t13854 * t14378 + t14232;
t13495 = (t13855 * t14386 - t14391 * t16810) * t14389 - t16673;
t16362 = t13617 * t14290;
t15569 = t13495 * t16362;
t15897 = t14396 * t14397;
t13585 = t14153 * t15897 + t14386 * t16682;
t13436 = (-t13585 * t14349 + t16305) * t14389 + t16811;
t15580 = t13436 * t16362;
t13806 = t14349 * t13843;
t16115 = t14349 * t14396;
t16735 = (t13860 * t14355 - t14176 * t16115) * t14378 - t14355 * t14229;
t13435 = (t13585 * t14355 + t13806) * t14389 + t16735;
t15581 = t13435 * t16362;
t15631 = t14291 * t16434;
t15671 = t14290 * t16446;
t15760 = 0.2e1 * t14385;
t15768 = t14437 - t14462;
t13278 = pkin(2) * t16425;
t15786 = t14390 * t14865 * t14337 + t13278;
t15789 = t13153 + t13270;
t13174 = qJ(3,6) * t15137;
t16590 = 0.2e1 * qJ(3,6);
t15795 = (t13174 - t14735) * t15802 + t14735 * t16590;
t13168 = t14396 * t14728;
t13235 = qJ(3,6) * t15632;
t13078 = t13168 + t13235;
t15804 = -0.2e1 * t16509;
t15239 = t14386 * t15804;
t15801 = ((t14336 * t15632 + t13078) * t15239 + t15178) * t14387 + t14250 * t15668;
t16193 = t14153 * t14378;
t16424 = t13279 * t14390;
t15701 = t16555 * t13279;
t16140 = t14290 * t14390;
t16455 = (t14241 * t15630 - t15701) * t16140;
t16580 = -0.2e1 * t14396;
t16588 = 0.2e1 * t14176;
t15927 = t14388 * t14461;
t16645 = pkin(6) * qJ(3,6) + t15927;
t16651 = 0.2e1 * qJ(3,6) * t13168 + 0.2e1 * t13078 * t14336;
t15238 = -0.2e1 * t15716;
t15443 = t14267 * t16141;
t16748 = (t13174 + (t14336 * t15667 - t14916) * t14290) * t15238 + t15443 * t16434 + t16651 + (t15768 + t14337) * t15632;
t12916 = t13315 * t15581 + t13351 * t15569 + t13357 * t15580 + (-(t16748 * t14377 + (t15801 + (t15795 + (-t15768 + t14841) * t15137) * t14386) * t14378 + (t13061 + (t15786 * t14386 + (t14941 + (t14396 * t15760 * t16645 - t14166 * t15951) * t16446) * t14290) * t14387 + t15789 * t14386 - (t14251 + t15230) * t15632 - t16651) * t14389 - t13843 * t16446) * t15631 - (-(t13752 * t15137 + t15215) * t14396 * t14377 + (t15136 * t16588 + (-t14290 * t14796 + t14930) * t14396 + t14972) * t14378 + (-t13626 * t15139 + t13027 * t14312 * t16580 + t13060 + ((t15092 * t16646 + t13273) * t14390 + t13162) * t14387 + (-pkin(2) * t15671 + t16455) * pkin(2)) * t14389 - t14312 * (-t14396 * t15630 + t13225 * t14390 + (t14390 * t15190 + (t14176 * t16446 - t16424) * t14386) * t14290)) * t15670 - (t14973 + (t15667 * t16193 + (t14153 * t15630 + t14176 * t15668) * t14389) * t14290) * t14291 * t13279) * t13617;
t16485 = qJ(3,6) * t12916;
t12887 = t13120 + t16485;
t12886 = 0.2e1 * t12887;
t13553 = t15340 * t16675 - t15893 * t16630;
t13792 = t16630 * t15395;
t14019 = t14153 * t15297;
t14022 = t14153 * t15296;
t14767 = t14393 * t15003;
t14947 = t14153 * t15394;
t14954 = t16630 * t15296;
t15002 = t14393 * t15392;
t15026 = t14153 * t15395;
t15036 = t16630 * t15297;
t15037 = t16630 * t15394;
t15390 = t14356 * t15832;
t16090 = t14356 * t14393;
t15454 = t14182 * t16090;
t15814 = t14429 * t14393;
t15990 = t14374 * t14398;
t16091 = t14356 * t14392;
t16190 = t14153 * t14393;
t16199 = t14153 * t14356;
t16268 = t16630 * t14398;
t16654 = t14429 - t16313;
t13280 = (-t13466 * t16324 + t16621 * t14095 + (t14373 * t15284 * t16630 - t13553 * t16044) * t14372 - t14182 * t16268 - t16675 * t14493 + (t13553 * t16050 - t14426 * (-t15339 * t16675 - t15359 * t16630)) * t14369) * t14350 + (t16630 * t16621 * t16091 - t14946 * t16703 + t13823 + (-t14372 * t14520 + t15392 * t16705) * t16809 + (t14502 * t14372 + (t14369 * t15323 - t15317) * t14370 + t16227 * t14369 + t16654) * t16675) * t14399 + (-t16630 * t15814 + t14356 * t16185 + (((-t15293 * t16630 - t15026) * t14370 - t14954 + t14137 * t16199) * t14372 + ((t15294 * t16630 - t14947) * t14369 + t14153 * t15393) * t14370 + (-t14129 * t16199 + t15036) * t14369 + t16630 * t14984) * t14371 + (((t14153 * t15389 - t15036) * t14370 + t16630 * t16213 + t14947) * t14372 - ((t14153 * t15390 + t14954) * t14369 - t16630 * t15295) * t14370 - (t14129 * t14393 * t16630 + t15026) * t14369 - t15257 * t16199) * t14374) * t14392 - t16675 * t14514 * t14372 + ((-(-t15390 * t16630 + t14022) * t15990 + t16675 * t15002) * t14369 + t14978 * t16809) * t14370 + (-(t14129 * t16190 - t13792) * t15990 - t16675 * t14767) * t14369 + t16675 * t15454 + ((-((t14153 * t15293 - t13792) * t14370 + t14022 + t16630 * t16215) * t14371 + (-(t15389 * t16630 + t14019) * t14370 - t15037 + t14137 * t16190) * t14374) * t14372 + (((t14153 * t15294 + t15037) * t14369 - t16630 * t15393) * t14370 + (t16228 * t16630 + t14019) * t14369 + t14153 * t14984) * t14371 + t16630 * t16235 - t14153 * t15814) * t14398;
t16445 = t13214 * t13620;
t15665 = t14294 * t16445;
t13121 = t13280 * t15665;
t15663 = t14392 * t16445;
t14970 = t14386 * t15663;
t14824 = t14293 * t14970;
t13148 = t14250 * t14824;
t13166 = pkin(2) * t14824;
t15994 = t14374 * t14393;
t13765 = t14137 * t15994 - t14399 * t15004;
t13768 = t14129 * t15994 + t14399 * t15003;
t15989 = t14374 * t14399;
t13771 = t14129 * t15989 - t14767;
t13774 = t14137 * t15989 + t14393 * t15004;
t13856 = -t14114 * t14392 + t14233;
t16088 = t14356 * t14399;
t13932 = t14182 * t16088 - t15814;
t13935 = t14399 * t14429 + t15454;
t13964 = t14374 * t15296 - t14399 * t15392;
t13965 = t14399 * t15323 + t15002;
t13966 = t14393 * t15391 - t14399 * t15329;
t13967 = t14374 * t15297 + t14399 * t15391;
t15956 = t14380 * t14386;
t15498 = t14153 * t15956;
t13857 = -t14176 * t14399 - t14230 * t14392;
t16126 = t14313 * t14392;
t16603 = ((t13964 * t16126 + t13965 * t14176) * t14369 + t13857 * t15317) * t14370 - (-(-t13966 * t14176 + t13967 * t16126) * t14370 + t13765 * t16126 + t13774 * t14176 + t13857 * t15251) * t14372 + (t13768 * t16126 + t13771 * t14176) * t14369 + t13857 * t16313 + t16681 * t16385 - t13932 * t16126 + t13935 * t14176;
t14561 = t14049 + t14313 - t14225;
t15909 = t14392 * t14398;
t15311 = t14386 * t15909;
t16612 = -t14153 * t15311 + t14380 * t14561 - t14313;
t13262 = -(t13967 * t16059 + (t14356 * t14708 + t16385) * t14399 + (t13964 * t14370 + t13768) * t14369 + ((t15251 - t16214) * t14372 - t14370 * t15317 + t16654) * t14393) * t15498 + (t16603 * t14378 + (-t13466 * t16291 + (t13856 * t15251 + (-t13966 * t14313 - t13967 * t16175) * t14370 + t13765 * t16175 - t14313 * t13774) * t14372 - t13856 * t16313 + ((-t13964 * t16175 + t13965 * t14313) * t14369 - t13856 * t15317) * t14370 + (-t13768 * t16175 + t13771 * t14313) * t14369 + t13932 * t16175 + t14313 * t13935) * t15952 - t16603) * t14398 - t16612 * (t13466 * t14356 + t14350 * t16621);
t16433 = t13262 * t16818;
t15727 = pkin(2) * t16433;
t14915 = t16555 * t15727;
t14734 = t14293 * t14915;
t15183 = t16433 * t16509;
t13028 = (-t14293 * t15183 + t13166) * t14387 + t13148 + t14734;
t15177 = pkin(2) * t15663;
t14746 = t15177 * t16509;
t16139 = t14293 * t14375;
t13062 = (-t14267 * t16433 + t14746 * t16585) * t16139;
t14934 = -0.2e1 * t15183;
t13063 = (pkin(2) * t14934 * t15949 + t14267 * t16445) * t16139;
t15168 = t16555 * t16445;
t14864 = t14293 * t15168;
t14727 = pkin(2) * t14864;
t13163 = t14727 * t15803;
t15628 = t13262 * t16832;
t13226 = t14250 * t15628;
t16423 = t13280 * t14293;
t13274 = t16423 * t16509;
t16056 = t14370 * t14444;
t13948 = t14155 * t14373 - t16056;
t16058 = t14370 * t14374;
t16759 = -t13954 * t14371 + t14161 * t14374;
t16330 = t16759 * t14428;
t13481 = -(-t14155 * t14371 + t14161 * t16058) * t14426 - t13948 * t15977 - t16330;
t16322 = t16635 * t14428;
t13490 = (t14155 * t14374 + t14370 * t16039) * t14426 + t13948 * t16032 + t16322;
t13316 = t14413 + (-t14371 * t16759 + t14374 * t16635) * t14409 + (-t14004 * t16759 + t14005 * t16635) * t14426 + ((-t13481 - t16330) * t14374 + (t13490 - t16322) * t14371) * t14427 + ((-t14371 * t16635 - t14374 * t16759) * t14408 + (t13481 * t14371 + t13490 * t14374) * t14426) * t14373;
t13646 = -t13954 * t14427 + t14161 * t16009;
t13896 = t14372 * t16000 - t14373 * t16065 + t16056;
t13352 = t14411 - t13490 * t14428 + t13646 * t15977 + (-t13490 * t14370 - t13646 * t16033) * t14426 + t14556 * t16759 + t14495 * t13896;
t13358 = t14412 + t13481 * t14428 - t13646 * t16032 + (t13481 * t14370 - t13646 * t16011) * t14426 - t14556 * t16635 + t14496 * t13896;
t14438 = qJ(3,5) ^ 2;
t15774 = qJ(3,5) * t15802 - t14438;
t13627 = t14630 + t15774;
t16146 = (pkin(2) + t14313) * (-pkin(2) + t14313);
t13753 = t15776 + t16146;
t15626 = t14386 * t16433;
t14794 = t15626 * t16146;
t14611 = t14911 * t16433;
t15090 = t14267 * t15626;
t15133 = t16646 * t15663;
t15131 = t14293 * t15663;
t14877 = pkin(2) * t15131;
t13154 = t14241 * t14877;
t13271 = t14250 * t16423;
t16701 = -0.2e1 * t13154 - t13271;
t14929 = (-0.4e1 * t14746 - t15090) * t16139 + (0.2e1 * t15133 + pkin(2) * (-0.2e1 * t14611 + t13280)) * t14293 * t14387 - t16701;
t15244 = -0.2e1 * t15727;
t14940 = t14250 * t15244;
t15625 = t14392 * t16433;
t14969 = t14153 * t15625;
t15089 = t14293 * t15626;
t15664 = t14380 * t16445;
t15129 = t14386 * t15664;
t15662 = t14398 * t16445;
t15130 = t14293 * t15662;
t15132 = t14293 * t15664;
t15189 = t14387 * t15727;
t15749 = 0.2e1 * t16433;
t15214 = t14176 * t15749;
t15229 = t14438 + t15761;
t16672 = -t13856 * t14378 + t14233;
t13496 = (t13857 * t14386 - t14393 * t16809) * t14389 - t16672;
t16361 = t13620 * t14293;
t15568 = t13496 * t16361;
t15894 = t14398 * t14399;
t13586 = t14153 * t15894 + t14386 * t16681;
t13438 = (-t13586 * t14350 + t16304) * t14389 + t16812;
t15578 = t13438 * t16361;
t13807 = t14350 * t13844;
t16112 = t14350 * t14398;
t16734 = (t13864 * t14356 - t14176 * t16112) * t14378 - t14356 * t14230;
t13437 = (t13586 * t14356 + t13807) * t14389 + t16734;
t15579 = t13437 * t16361;
t15627 = t14294 * t16433;
t15666 = t14293 * t16445;
t15767 = t14438 - t14462;
t13276 = pkin(2) * t16423;
t15785 = t14392 * t14864 * t14337 + t13276;
t15788 = t13154 + t13271;
t13175 = qJ(3,5) * t15130;
t16592 = 0.2e1 * qJ(3,5);
t15794 = (t13175 - t14734) * t15802 + t14734 * t16592;
t13169 = t14398 * t14727;
t13237 = qJ(3,5) * t15628;
t13079 = t13169 + t13237;
t15800 = ((t14336 * t15628 + t13079) * t15239 + t15177) * t14387 + t14250 * t15663;
t16422 = t13280 * t14392;
t15700 = t16555 * t13280;
t16138 = t14293 * t14392;
t16454 = (t14241 * t15626 - t15700) * t16138;
t16579 = -0.2e1 * t14398;
t16644 = pkin(6) * qJ(3,5) + t15927;
t16650 = 0.2e1 * qJ(3,5) * t13169 + 0.2e1 * t13079 * t14336;
t15442 = t14267 * t16139;
t16749 = (t13175 + (t14336 * t15662 - t14915) * t14293) * t15238 + t15442 * t16433 + t16650 + (t15767 + t14337) * t15628;
t12917 = t13316 * t15579 + t13352 * t15568 + t13358 * t15578 + (-(t16749 * t14377 + (t15800 + (t15794 + (-t15767 + t14841) * t15130) * t14386) * t14378 + (t13062 + (t15785 * t14386 + (t14940 + (t14398 * t15760 * t16644 - t14166 * t15949) * t16445) * t14293) * t14387 + t15788 * t14386 - (t14251 + t15229) * t15628 - t16650) * t14389 - t13844 * t16445) * t15627 - (-t14398 * (t13753 * t15130 + t15214) * t14377 + (t15129 * t16588 + (-t14293 * t14794 + t14929) * t14398 + t14969) * t14378 + (-t13627 * t15132 + t14313 * t13028 * t16579 + t13063 + ((t15089 * t16646 + t13274) * t14392 + t13163) * t14387 + (-pkin(2) * t15666 + t16454) * pkin(2)) * t14389 - t14313 * (-t14398 * t15626 + t13226 * t14392 + (t14392 * t15189 + (t14176 * t16445 - t16422) * t14386) * t14293)) * t15665 - (t14970 + (t15662 * t16193 + (t14153 * t15626 + t14176 * t15663) * t14389) * t14293) * t14294 * t13280) * t13620;
t16489 = qJ(3,5) * t12917;
t12889 = t13121 + t16489;
t12888 = 0.2e1 * t12889;
t13554 = t15338 * t16674 - t15890 * t16631;
t13793 = t16631 * t15388;
t14020 = t14153 * t15290;
t14023 = t14153 * t15289;
t14766 = t14395 * t15000;
t14945 = t14153 * t15387;
t14953 = t16631 * t15289;
t14999 = t14395 * t15385;
t15025 = t14153 * t15388;
t15034 = t16631 * t15290;
t15035 = t16631 * t15387;
t15383 = t14357 * t15831;
t16085 = t14357 * t14395;
t15453 = t14183 * t16085;
t15813 = t14429 * t14395;
t15988 = t14374 * t14400;
t16086 = t14357 * t14394;
t16189 = t14153 * t14395;
t16198 = t14153 * t14357;
t16267 = t16631 * t14400;
t16655 = t14429 - t16312;
t13281 = (-t13467 * t16323 + t16622 * t14096 + (t14373 * t15283 * t16631 - t13554 * t16043) * t14372 - t14183 * t16267 - t16674 * t14492 + (t13554 * t16049 - t14426 * (-t15337 * t16674 - t15358 * t16631)) * t14369) * t14351 + (t16622 * t16631 * t16086 + t13824 + (-t14372 * t14519 + t15385 * t16705) * t16808 + (t14501 * t14372 + (t14369 * t15322 - t15316) * t14370 + t16225 * t14369 + t16655) * t16674) * t14401 + (-t16631 * t15813 + t14357 * t16185 + (((-t15286 * t16631 - t15025) * t14370 - t14953 + t14139 * t16198) * t14372 + ((t15287 * t16631 - t14945) * t14369 + t14153 * t15386) * t14370 + (-t14130 * t16198 + t15034) * t14369 + t16631 * t14983) * t14371 + (((t14153 * t15382 - t15034) * t14370 + t16631 * t16210 + t14945) * t14372 - ((t14153 * t15383 + t14953) * t14369 - t16631 * t15288) * t14370 - (t14130 * t14395 * t16631 + t15025) * t14369 - t15256 * t16198) * t14374) * t14394 - t16674 * t14513 * t14372 + ((-(-t15383 * t16631 + t14023) * t15988 + t16674 * t14999) * t14369 + t14977 * t16808) * t14370 + (-(t14130 * t16189 - t13793) * t15988 - t16674 * t14766) * t14369 + t16674 * t15453 + (-t14945 * t16704 * t14401 + (-((t14153 * t15286 - t13793) * t14370 + t14023 + t16631 * t16212) * t14371 + (-(t15382 * t16631 + t14020) * t14370 - t15035 + t14139 * t16189) * t14374) * t14372 + (((t14153 * t15287 + t15035) * t14369 - t16631 * t15386) * t14370 + (t16226 * t16631 + t14020) * t14369 + t14153 * t14983) * t14371 + t16631 * t16234 - t14153 * t15813) * t14400;
t16444 = t13215 * t13623;
t15660 = t14297 * t16444;
t13122 = t13281 * t15660;
t15658 = t14394 * t16444;
t14967 = t14386 * t15658;
t14819 = t14296 * t14967;
t13149 = t14250 * t14819;
t13167 = pkin(2) * t14819;
t15993 = t14374 * t14395;
t13766 = t14139 * t15993 - t14401 * t15001;
t13769 = t14130 * t15993 + t14401 * t15000;
t15987 = t14374 * t14401;
t13772 = t14130 * t15987 - t14766;
t13775 = t14139 * t15987 + t14395 * t15001;
t13858 = -t14115 * t14394 + t14234;
t16083 = t14357 * t14401;
t13933 = t14183 * t16083 - t15813;
t13936 = t14401 * t14429 + t15453;
t13968 = t14374 * t15289 - t14401 * t15385;
t13969 = t14401 * t15322 + t14999;
t13970 = t14395 * t15384 - t14401 * t15328;
t13971 = t14374 * t15290 + t14401 * t15384;
t15955 = t14381 * t14386;
t15497 = t14153 * t15955;
t13859 = -t14176 * t14401 - t14231 * t14394;
t16124 = t14314 * t14394;
t16604 = ((t13968 * t16124 + t13969 * t14176) * t14369 + t13859 * t15316) * t14370 - (-(-t13970 * t14176 + t13971 * t16124) * t14370 + t13766 * t16124 + t13775 * t14176 + t13859 * t15250) * t14372 + (t13769 * t16124 + t13772 * t14176) * t14369 + t13859 * t16312 + t16680 * t16384 - t13933 * t16124 + t13936 * t14176;
t14560 = t14049 + t14314 - t14227;
t15903 = t14394 * t14400;
t15310 = t14386 * t15903;
t16611 = -t14153 * t15310 + t14381 * t14560 - t14314;
t13263 = -(t13971 * t16059 + (t14357 * t14707 + t16384) * t14401 + (t13968 * t14370 + t13769) * t14369 + ((t15250 - t16211) * t14372 - t14370 * t15316 + t16655) * t14395) * t15497 + (t16604 * t14378 + (-t13467 * t16290 + (t13858 * t15250 + (-t13970 * t14314 - t13971 * t16174) * t14370 + t13766 * t16174 - t14314 * t13775) * t14372 - t13858 * t16312 + ((-t13968 * t16174 + t13969 * t14314) * t14369 - t13858 * t15316) * t14370 + (-t13769 * t16174 + t13772 * t14314) * t14369 + t13933 * t16174 + t14314 * t13936) * t15952 - t16604) * t14400 - t16611 * (t13467 * t14357 + t14351 * t16622);
t16432 = t13263 * t16819;
t15726 = pkin(2) * t16432;
t14914 = t16555 * t15726;
t14733 = t14296 * t14914;
t15182 = t16432 * t16509;
t13029 = (-t14296 * t15182 + t13167) * t14387 + t13149 + t14733;
t15176 = pkin(2) * t15658;
t14745 = t15176 * t16509;
t16137 = t14296 * t14375;
t13064 = (-t14267 * t16432 + t14745 * t16585) * t16137;
t14933 = -0.2e1 * t15182;
t13065 = (pkin(2) * t14933 * t15947 + t14267 * t16444) * t16137;
t15167 = t16555 * t16444;
t14863 = t14296 * t15167;
t14726 = pkin(2) * t14863;
t13164 = t14726 * t15803;
t16421 = t13281 * t14296;
t13275 = t16421 * t16509;
t16055 = t14370 * t14445;
t13949 = t14156 * t14373 - t16055;
t16758 = -t13955 * t14371 + t14162 * t14374;
t16329 = t16758 * t14428;
t13483 = -(-t14156 * t14371 + t14162 * t16058) * t14426 - t13949 * t15977 - t16329;
t16321 = t16636 * t14428;
t13491 = (t14156 * t14374 + t14370 * t16038) * t14426 + t13949 * t16032 + t16321;
t13317 = t14413 + (-t14371 * t16758 + t14374 * t16636) * t14409 + (-t14004 * t16758 + t14005 * t16636) * t14426 + ((-t13483 - t16329) * t14374 + (t13491 - t16321) * t14371) * t14427 + ((-t14371 * t16636 - t14374 * t16758) * t14408 + (t13483 * t14371 + t13491 * t14374) * t14426) * t14373;
t13647 = -t13955 * t14427 + t14162 * t16009;
t13897 = t14372 * t15999 - t14373 * t16064 + t16055;
t13353 = t14411 - t13491 * t14428 + t13647 * t15977 + (-t13491 * t14370 - t13647 * t16033) * t14426 + t14556 * t16758 + t14495 * t13897;
t13359 = t14412 + t13483 * t14428 - t13647 * t16032 + (t13483 * t14370 - t13647 * t16011) * t14426 - t14556 * t16636 + t14496 * t13897;
t14439 = qJ(3,4) ^ 2;
t15773 = qJ(3,4) * t15802 - t14439;
t13628 = t14630 + t15773;
t16145 = (pkin(2) + t14314) * (-pkin(2) + t14314);
t13754 = t15776 + t16145;
t15622 = t14386 * t16432;
t14792 = t15622 * t16145;
t15657 = t14400 * t16444;
t15122 = t14296 * t15657;
t14818 = t14386 * t15122;
t14610 = t14911 * t16432;
t15087 = t14267 * t15622;
t15126 = t16646 * t15658;
t15123 = t14296 * t15658;
t14876 = pkin(2) * t15123;
t13155 = t14241 * t14876;
t13272 = t14250 * t16421;
t16700 = -0.2e1 * t13155 - t13272;
t14928 = (-0.4e1 * t14745 - t15087) * t16137 + (0.2e1 * t15126 + pkin(2) * (-0.2e1 * t14610 + t13281)) * t14296 * t14387 - t16700;
t15243 = -0.2e1 * t15726;
t14939 = t14250 * t15243;
t15621 = t14394 * t16432;
t14966 = t14153 * t15621;
t15086 = t14296 * t15622;
t15659 = t14381 * t16444;
t15121 = t14386 * t15659;
t15124 = t14296 * t15659;
t15188 = t14387 * t15726;
t15748 = 0.2e1 * t16432;
t15213 = t14176 * t15748;
t15228 = t14439 + t15761;
t16671 = -t13858 * t14378 + t14234;
t13497 = (t13859 * t14386 - t14395 * t16808) * t14389 - t16671;
t16360 = t13623 * t14296;
t15567 = t13497 * t16360;
t15891 = t14400 * t14401;
t13587 = t14153 * t15891 + t14386 * t16680;
t13440 = (-t13587 * t14351 + t16303) * t14389 + t16813;
t15576 = t13440 * t16360;
t13808 = t14351 * t13845;
t16109 = t14351 * t14400;
t16733 = (t13868 * t14357 - t14176 * t16109) * t14378 - t14357 * t14231;
t13439 = (t13587 * t14357 + t13808) * t14389 + t16733;
t15577 = t13439 * t16360;
t15623 = t14297 * t16432;
t15624 = t13263 * t16830;
t15661 = t14296 * t16444;
t15766 = t14439 - t14462;
t13277 = pkin(2) * t16421;
t15784 = t14394 * t14863 * t14337 + t13277;
t15787 = t13155 + t13272;
t13176 = qJ(3,4) * t15122;
t16594 = 0.2e1 * qJ(3,4);
t15793 = (t13176 - t14733) * t15802 + t14733 * t16594;
t13170 = t14400 * t14726;
t13239 = qJ(3,4) * t15624;
t13080 = t13170 + t13239;
t15799 = ((t14336 * t15624 + t13080) * t15239 + t15176) * t14387 + t14250 * t15658;
t15904 = t14394 * t14250 * t15624;
t16420 = t13281 * t14394;
t15699 = t16555 * t13281;
t16136 = t14296 * t14394;
t16453 = (t14241 * t15622 - t15699) * t16136;
t16578 = -0.2e1 * t14400;
t16643 = pkin(6) * qJ(3,4) + t15927;
t16652 = 0.2e1 * qJ(3,4) * t13170 + 0.2e1 * t13080 * t14336;
t15441 = t14267 * t16137;
t16750 = (t13176 + (t14336 * t15657 - t14914) * t14296) * t15238 + t15441 * t16432 + t16652 + (t15766 + t14337) * t15624;
t12918 = t13317 * t15577 + t13353 * t15567 + t13359 * t15576 + (-(t16750 * t14377 + (t15793 * t14386 + (-t15766 + t14841) * t14818 + t15799) * t14378 + (t13064 + (t15784 * t14386 + (t14939 + (t14400 * t15760 * t16643 - t14166 * t15947) * t16444) * t14296) * t14387 + t15787 * t14386 - (t14251 + t15228) * t15624 - t16652) * t14389 - t13845 * t16444) * t15623 - (-t14400 * (t13754 * t15122 + t15213) * t14377 + (t15121 * t16588 + (-t14296 * t14792 + t14928) * t14400 + t14966) * t14378 + (-t13628 * t15124 + t14314 * t13029 * t16578 + t13065 + ((t15086 * t16646 + t13275) * t14394 + t13164) * t14387 + (-pkin(2) * t15661 + t16453) * pkin(2)) * t14389 - (-t14400 * t15622 + t15904 + (t14394 * t15188 + (t14176 * t16444 - t16420) * t14386) * t14296) * t14314) * t15660 - (t14967 + (t15657 * t16193 + (t14153 * t15622 + t14176 * t15658) * t14389) * t14296) * t14297 * t13281) * t13623;
t16493 = qJ(3,4) * t12918;
t12891 = t13122 + t16493;
t12890 = 0.2e1 * t12891;
t13555 = t15336 * t16670 - t15872 * t16632;
t13794 = t16632 * t15381;
t14025 = t14153 * t15280;
t14028 = t14153 * t15279;
t14765 = t14415 * t14996;
t14944 = t14153 * t15380;
t14952 = t16632 * t15279;
t14995 = t14415 * t15378;
t15024 = t14153 * t15381;
t15032 = t16632 * t15280;
t15033 = t16632 * t15380;
t15376 = t14358 * t15830;
t16080 = t14358 * t14415;
t15452 = t14184 * t16080;
t15812 = t14429 * t14415;
t15983 = t14374 * t14420;
t16081 = t14358 * t14414;
t16188 = t14153 * t14415;
t16197 = t14153 * t14358;
t16263 = t16632 * t14420;
t16656 = t14429 - t16311;
t13291 = (-t13468 * t16317 + t16623 * t14100 + (t14373 * t15261 * t16632 - t13555 * t16042) * t14372 - t14184 * t16263 - t16670 * t14491 + (t13555 * t16048 - t14426 * (-t15335 * t16670 - t15357 * t16632)) * t14369) * t14352 + (t16623 * t16632 * t16081 + t13825 + (-t14372 * t14518 + t15378 * t16705) * t16807 + (t14500 * t14372 + (t14369 * t15321 - t15315) * t14370 + t16223 * t14369 + t16656) * t16670) * t14421 + (-t16632 * t15812 + t14358 * t16185 + (((-t15276 * t16632 - t15024) * t14370 - t14952 + t14141 * t16197) * t14372 + ((t15277 * t16632 - t14944) * t14369 + t14153 * t15379) * t14370 + (-t14131 * t16197 + t15032) * t14369 + t16632 * t14982) * t14371 + (((t14153 * t15375 - t15032) * t14370 + t16632 * t16207 + t14944) * t14372 - ((t14153 * t15376 + t14952) * t14369 - t16632 * t15278) * t14370 - (t14131 * t14415 * t16632 + t15024) * t14369 - t15255 * t16197) * t14374) * t14414 - t16670 * t14512 * t14372 + ((-(-t15376 * t16632 + t14028) * t15983 + t16670 * t14995) * t14369 + t14976 * t16807) * t14370 + (-(t14131 * t16188 - t13794) * t15983 - t16670 * t14765) * t14369 + t16670 * t15452 + (-t14944 * t16704 * t14421 + (-((t14153 * t15276 - t13794) * t14370 + t14028 + t16632 * t16209) * t14371 + (-(t15375 * t16632 + t14025) * t14370 - t15033 + t14141 * t16188) * t14374) * t14372 + (((t14153 * t15277 + t15033) * t14369 - t16632 * t15379) * t14370 + (t16224 * t16632 + t14025) * t14369 + t14153 * t14982) * t14371 + t16632 * t16233 - t14153 * t15812) * t14420;
t16440 = t13219 * t13651;
t15649 = t14304 * t16440;
t13129 = t13291 * t15649;
t15647 = t14414 * t16440;
t14964 = t14386 * t15647;
t14808 = t14303 * t14964;
t13180 = t14250 * t14808;
t13198 = pkin(2) * t14808;
t15986 = t14374 * t14415;
t13776 = t14141 * t15986 - t14421 * t14997;
t13779 = t14131 * t15986 + t14421 * t14996;
t15982 = t14374 * t14421;
t13782 = t14131 * t15982 - t14765;
t13785 = t14141 * t15982 + t14415 * t14997;
t13877 = -t14116 * t14414 + t14247;
t16078 = t14358 * t14421;
t13937 = t14184 * t16078 - t15812;
t13940 = t14421 * t14429 + t15452;
t13972 = t14374 * t15279 - t14421 * t15378;
t13973 = t14421 * t15321 + t14995;
t13974 = t14415 * t15377 - t14421 * t15327;
t13975 = t14374 * t15280 + t14421 * t15377;
t14917 = t14153 * t14386;
t15496 = t14382 * t14917;
t13878 = -t14176 * t14421 - t14244 * t14414;
t16122 = t14318 * t14414;
t16605 = ((t13972 * t16122 + t13973 * t14176) * t14369 + t13878 * t15315) * t14370 - (-(-t13974 * t14176 + t13975 * t16122) * t14370 + t13776 * t16122 + t13785 * t14176 + t13878 * t15249) * t14372 + (t13779 * t16122 + t13782 * t14176) * t14369 + t13878 * t16311 + t16679 * t16383 - t13937 * t16122 + t13940 * t14176;
t14559 = t14049 + t14318 - t14235;
t15889 = t14414 * t14420;
t15309 = t14386 * t15889;
t16610 = -t14153 * t15309 + t14382 * t14559 - t14318;
t13267 = -(t13975 * t16059 + (t14358 * t14706 + t16383) * t14421 + (t13972 * t14370 + t13779) * t14369 + ((t15249 - t16208) * t14372 - t14370 * t15315 + t16656) * t14415) * t15496 + (t16605 * t14378 + (-t13468 * t16284 + (t13877 * t15249 + (-t13974 * t14318 - t13975 * t16173) * t14370 + t13776 * t16173 - t13785 * t14318) * t14372 - t13877 * t16311 + ((-t13972 * t16173 + t13973 * t14318) * t14369 - t13877 * t15315) * t14370 + (-t13779 * t16173 + t13782 * t14318) * t14369 + t13937 * t16173 + t14318 * t13940) * t15952 - t16605) * t14420 - t16610 * (t13468 * t14358 + t14352 * t16623);
t16428 = t13267 * t16820;
t15163 = t16555 * t16428;
t14913 = pkin(2) * t15163;
t14732 = t14303 * t14913;
t15181 = t16428 * t16509;
t13036 = (-t14303 * t15181 + t13198) * t14387 + t13180 + t14732;
t14932 = -0.2e1 * t15181;
t16135 = t14303 * t14375;
t13088 = (pkin(2) * t14932 * t15939 + t14267 * t16440) * t16135;
t15175 = pkin(2) * t15647;
t14744 = t15175 * t16509;
t13089 = (-t14267 * t16428 + t14744 * t16585) * t16135;
t15166 = t16555 * t16440;
t14862 = t14303 * t15166;
t14725 = pkin(2) * t14862;
t13192 = t14725 * t15803;
t15617 = t13267 * t16828;
t13243 = t14250 * t15617;
t16419 = t13291 * t14303;
t13285 = t16419 * t16509;
t16054 = t14370 * t14446;
t13950 = t14157 * t14373 - t16054;
t16757 = -t13956 * t14371 + t14163 * t14374;
t16328 = t16757 * t14428;
t13485 = -(-t14157 * t14371 + t14163 * t16058) * t14426 - t13950 * t15977 - t16328;
t16320 = t16637 * t14428;
t13492 = (t14157 * t14374 + t14370 * t16037) * t14426 + t13950 * t16032 + t16320;
t13318 = t14413 + (-t14371 * t16757 + t14374 * t16637) * t14409 + (-t14004 * t16757 + t14005 * t16637) * t14426 + ((-t13485 - t16328) * t14374 + (t13492 - t16320) * t14371) * t14427 + ((-t14371 * t16637 - t14374 * t16757) * t14408 + (t13485 * t14371 + t13492 * t14374) * t14426) * t14373;
t13648 = -t13956 * t14427 + t14163 * t16009;
t13898 = t14372 * t15998 - t14373 * t16063 + t16054;
t13354 = t14411 - t13492 * t14428 + t13648 * t15977 + (-t13492 * t14370 - t13648 * t16033) * t14426 + t14556 * t16757 + t14495 * t13898;
t13360 = t14412 + t13485 * t14428 - t13648 * t16032 + (t13485 * t14370 - t13648 * t16011) * t14426 - t14556 * t16637 + t14496 * t13898;
t14440 = qJ(3,3) ^ 2;
t15772 = qJ(3,3) * t15802 - t14440;
t13630 = t14630 + t15772;
t16144 = (pkin(2) + t14318) * (-pkin(2) + t14318);
t13761 = t15776 + t16144;
t15615 = t14386 * t16428;
t14790 = t15615 * t16144;
t15646 = t14420 * t16440;
t15109 = t14303 * t15646;
t14807 = t14386 * t15109;
t14730 = t15163 * t16509;
t14615 = t14386 * t14730;
t15084 = t14267 * t15615;
t15113 = t16646 * t15647;
t15110 = t14303 * t15647;
t14875 = pkin(2) * t15110;
t13186 = t14241 * t14875;
t13282 = t14250 * t16419;
t16699 = -0.2e1 * t13186 - t13282;
t16723 = 0.2e1 * t14387;
t14927 = (-0.4e1 * t14744 - t15084) * t16135 + (t15113 - (t14615 - t13291 / 0.2e1) * pkin(2)) * t14303 * t16723 - t16699;
t15725 = pkin(2) * t16428;
t15242 = -0.2e1 * t15725;
t14938 = t14250 * t15242;
t15614 = t14414 * t16428;
t14963 = t14153 * t15614;
t15083 = t14303 * t15615;
t15648 = t14382 * t16440;
t15108 = t14386 * t15648;
t15111 = t14303 * t15648;
t15187 = t14387 * t15725;
t15747 = 0.2e1 * t16428;
t15212 = t14176 * t15747;
t15227 = t14440 + t15761;
t16667 = -t13877 * t14378 + t14247;
t13501 = (t13878 * t14386 - t14415 * t16807) * t14389 - t16667;
t16359 = t13651 * t14303;
t15566 = t13501 * t16359;
t15873 = t14420 * t14421;
t13596 = t14153 * t15873 + t14386 * t16679;
t13445 = (-t13596 * t14352 + t16299) * t14389 + t16814;
t15574 = t13445 * t16359;
t13812 = t14352 * t13849;
t16106 = t14352 * t14420;
t16732 = (t13883 * t14358 - t14176 * t16106) * t14378 - t14358 * t14244;
t13444 = (t13596 * t14358 + t13812) * t14389 + t16732;
t15575 = t13444 * t16359;
t15616 = t14304 * t16428;
t15650 = t14303 * t16440;
t15765 = t14440 - t14462;
t13288 = pkin(2) * t16419;
t15780 = t14414 * t14862 * t14337 + t13288;
t15783 = t13186 + t13282;
t13207 = qJ(3,3) * t15109;
t16596 = 0.2e1 * qJ(3,3);
t15792 = (t13207 - t14732) * t15802 + t14732 * t16596;
t13201 = t14420 * t14725;
t13253 = qJ(3,3) * t15617;
t13108 = t13201 + t13253;
t15798 = ((t14336 * t15617 + t13108) * t15239 + t15175) * t14387 + t14250 * t15647;
t16417 = t13291 * t14414;
t16418 = t13291 * t14304;
t15698 = t16555 * t13291;
t16134 = t14303 * t14414;
t16452 = (t14241 * t15615 - t15698) * t16134;
t16577 = -0.2e1 * t14420;
t16642 = pkin(6) * qJ(3,3) + t15927;
t16647 = 0.2e1 * qJ(3,3) * t13201 + 0.2e1 * t13108 * t14336;
t15440 = t14267 * t16135;
t16751 = (t13207 + (t14336 * t15646 - t14913) * t14303) * t15238 + t15440 * t16428 + t16647 + (t15765 + t14337) * t15617;
t12922 = t13318 * t15575 + t13354 * t15566 + t13360 * t15574 + (-(t16751 * t14377 + (t15792 * t14386 + (-t15765 + t14841) * t14807 + t15798) * t14378 + (t13089 + (t15780 * t14386 + (t14938 + (t14420 * t15760 * t16642 - t14166 * t15939) * t16440) * t14303) * t14387 + t15783 * t14386 - (t14251 + t15227) * t15617 - t16647) * t14389 - t13849 * t16440) * t15616 - (-(t13761 * t15109 + t15212) * t14420 * t14377 + (t15108 * t16588 + (-t14303 * t14790 + t14927) * t14420 + t14963) * t14378 + (-t13630 * t15111 + t14318 * t13036 * t16577 + t13088 + ((t15083 * t16646 + t13285) * t14414 + t13192) * t14387 + pkin(2) * (-pkin(2) * t15650 + t16452)) * t14389 - t14318 * (-t14420 * t15615 + t13243 * t14414 + (t14414 * t15187 + (t14176 * t16440 - t16417) * t14386) * t14303)) * t15649 - (t14964 + (t15646 * t16193 + (t14153 * t15615 + t14176 * t15647) * t14389) * t14303) * t16418) * t13651;
t16497 = qJ(3,3) * t12922;
t12905 = t13129 + t16497;
t12904 = 0.2e1 * t12905;
t13556 = t15334 * t16669 - t15869 * t16633;
t13795 = t16633 * t15374;
t14026 = t14153 * t15273;
t14029 = t14153 * t15272;
t14764 = t14417 * t14992;
t14943 = t14153 * t15373;
t14951 = t16633 * t15272;
t14991 = t14417 * t15371;
t15023 = t14153 * t15374;
t15030 = t16633 * t15273;
t15031 = t16633 * t15373;
t15369 = t14359 * t15829;
t16075 = t14359 * t14417;
t15451 = t14185 * t16075;
t15811 = t14429 * t14417;
t15981 = t14374 * t14422;
t16076 = t14359 * t14416;
t16187 = t14153 * t14417;
t16196 = t14153 * t14359;
t16262 = t16633 * t14422;
t16657 = t14429 - t16310;
t13292 = (-t13469 * t16316 + t16624 * t14101 + (t14373 * t15260 * t16633 - t13556 * t16041) * t14372 - t14185 * t16262 - t16669 * t14490 + (t13556 * t16047 - (-t15333 * t16669 - t15356 * t16633) * t14426) * t14369) * t14353 + (t16624 * t16633 * t16076 + t13826 + (-t14372 * t14517 + t15371 * t16705) * t16806 + (t14499 * t14372 + (t14369 * t15320 - t15314) * t14370 + t16221 * t14369 + t16657) * t16669) * t14423 + (-t16633 * t15811 + t14359 * t16185 + (((-t15269 * t16633 - t15023) * t14370 - t14951 + t14143 * t16196) * t14372 + ((t15270 * t16633 - t14943) * t14369 + t14153 * t15372) * t14370 + (-t14132 * t16196 + t15030) * t14369 + t16633 * t14981) * t14371 + (((t14153 * t15368 - t15030) * t14370 + t16633 * t16204 + t14943) * t14372 - ((t14153 * t15369 + t14951) * t14369 - t16633 * t15271) * t14370 - (t14132 * t14417 * t16633 + t15023) * t14369 - t15254 * t16196) * t14374) * t14416 - t16669 * t14511 * t14372 + ((-(-t15369 * t16633 + t14029) * t15981 + t16669 * t14991) * t14369 + t14975 * t16806) * t14370 + (-(t14132 * t16187 - t13795) * t15981 - t16669 * t14764) * t14369 + t16669 * t15451 + (-t14943 * t16704 * t14423 + (-((t14153 * t15269 - t13795) * t14370 + t14029 + t16633 * t16206) * t14371 + (-(t15368 * t16633 + t14026) * t14370 - t15031 + t14143 * t16187) * t14374) * t14372 + (((t14153 * t15270 + t15031) * t14369 - t16633 * t15372) * t14370 + (t16222 * t16633 + t14026) * t14369 + t14153 * t14981) * t14371 + t16633 * t16232 - t14153 * t15811) * t14422;
t16439 = t13220 * t13654;
t15644 = t14307 * t16439;
t13130 = t13292 * t15644;
t15642 = t14416 * t16439;
t14961 = t14386 * t15642;
t14803 = t14306 * t14961;
t13181 = t14250 * t14803;
t13199 = pkin(2) * t14803;
t15985 = t14374 * t14417;
t13777 = t14143 * t15985 - t14423 * t14993;
t13780 = t14132 * t15985 + t14423 * t14992;
t15980 = t14374 * t14423;
t13783 = t14132 * t15980 - t14764;
t13786 = t14143 * t15980 + t14417 * t14993;
t13879 = -t14117 * t14416 + t14248;
t16073 = t14359 * t14423;
t13938 = t14185 * t16073 - t15811;
t13941 = t14423 * t14429 + t15451;
t13976 = t14374 * t15272 - t14423 * t15371;
t13977 = t14423 * t15320 + t14991;
t13978 = t14417 * t15370 - t14423 * t15326;
t13979 = t14374 * t15273 + t14423 * t15370;
t15495 = t14383 * t14917;
t13880 = -t14176 * t14423 - t14245 * t14416;
t16120 = t14319 * t14416;
t16606 = ((t13976 * t16120 + t13977 * t14176) * t14369 + t13880 * t15314) * t14370 - (-(-t13978 * t14176 + t13979 * t16120) * t14370 + t13777 * t16120 + t13786 * t14176 + t13880 * t15248) * t14372 + (t13780 * t16120 + t13783 * t14176) * t14369 + t13880 * t16310 + t16678 * t16382 - t13938 * t16120 + t13941 * t14176;
t14558 = t14049 + t14319 - t14237;
t15884 = t14416 * t14422;
t15308 = t14386 * t15884;
t16609 = -t14153 * t15308 + t14383 * t14558 - t14319;
t13268 = -(t13979 * t16059 + (t14359 * t14705 + t16382) * t14423 + (t13976 * t14370 + t13780) * t14369 + ((t15248 - t16205) * t14372 - t14370 * t15314 + t16657) * t14417) * t15495 + (t16606 * t14378 + (-t13469 * t16283 + (t13879 * t15248 + (-t13978 * t14319 - t13979 * t16172) * t14370 + t13777 * t16172 - t13786 * t14319) * t14372 - t13879 * t16310 + ((-t13976 * t16172 + t13977 * t14319) * t14369 - t13879 * t15314) * t14370 + (-t13780 * t16172 + t13783 * t14319) * t14369 + t13938 * t16172 + t14319 * t13941) * t15952 - t16606) * t14422 - t16609 * (t13469 * t14359 + t14353 * t16624);
t16427 = t13268 * t16821;
t15724 = pkin(2) * t16427;
t14910 = t16555 * t15724;
t14722 = t14306 * t14910;
t15180 = t16427 * t16509;
t13037 = (-t14306 * t15180 + t13199) * t14387 + t13181 + t14722;
t14872 = t14386 * t15180;
t16133 = t14306 * t14375;
t16600 = -0.2e1 * pkin(2);
t13087 = (t14416 * t14872 * t16600 + t14267 * t16439) * t16133;
t15174 = pkin(2) * t15642;
t14743 = t15174 * t16509;
t13090 = (-t14267 * t16427 + t14743 * t16585) * t16133;
t15165 = t16555 * t16439;
t14861 = t14306 * t15165;
t14724 = pkin(2) * t14861;
t13193 = t14724 * t15803;
t15613 = t13268 * t16826;
t13244 = t14250 * t15613;
t16416 = t13292 * t14306;
t13286 = t16416 * t16509;
t16053 = t14370 * t14447;
t13951 = t14158 * t14373 - t16053;
t16756 = -t13957 * t14371 + t14164 * t14374;
t16327 = t16756 * t14428;
t13487 = -(-t14158 * t14371 + t14164 * t16058) * t14426 - t13951 * t15977 - t16327;
t16319 = t16638 * t14428;
t13493 = (t14158 * t14374 + t14370 * t16036) * t14426 + t13951 * t16032 + t16319;
t13319 = t14413 + (-t14371 * t16756 + t14374 * t16638) * t14409 + (-t14004 * t16756 + t14005 * t16638) * t14426 + ((-t13487 - t16327) * t14374 + (t13493 - t16319) * t14371) * t14427 + ((-t14371 * t16638 - t14374 * t16756) * t14408 + (t13487 * t14371 + t13493 * t14374) * t14426) * t14373;
t13649 = -t13957 * t14427 + t14164 * t16009;
t13899 = t14372 * t15997 - t14373 * t16062 + t16053;
t13355 = t14411 - t13493 * t14428 + t13649 * t15977 + (-t13493 * t14370 - t13649 * t16033) * t14426 + t14556 * t16756 + t14495 * t13899;
t13361 = t14412 + t13487 * t14428 - t13649 * t16032 + (t13487 * t14370 - t13649 * t16011) * t14426 - t14556 * t16638 + t14496 * t13899;
t14441 = qJ(3,2) ^ 2;
t15771 = qJ(3,2) * t15802 - t14441;
t13631 = t14630 + t15771;
t16143 = (pkin(2) + t14319) * (-pkin(2) + t14319);
t13762 = t15776 + t16143;
t15611 = t14386 * t16427;
t14788 = t15611 * t16143;
t15641 = t14422 * t16439;
t15102 = t14306 * t15641;
t14802 = t14386 * t15102;
t14614 = t16555 * t14872;
t15081 = t14267 * t15611;
t15106 = t16646 * t15642;
t15103 = t14306 * t15642;
t14874 = pkin(2) * t15103;
t13187 = t14241 * t14874;
t13283 = t14250 * t16416;
t16698 = -0.2e1 * t13187 - t13283;
t14926 = (-0.4e1 * t14743 - t15081) * t16133 + (t15106 - (t14614 - t13292 / 0.2e1) * pkin(2)) * t14306 * t16723 - t16698;
t15241 = -0.2e1 * t15724;
t14937 = t14250 * t15241;
t15610 = t14416 * t16427;
t14960 = t14153 * t15610;
t15080 = t14306 * t15611;
t15643 = t14383 * t16439;
t15101 = t14386 * t15643;
t15104 = t14306 * t15643;
t15186 = t14387 * t15724;
t15746 = 0.2e1 * t16427;
t15211 = t14176 * t15746;
t15226 = t14441 + t15761;
t16666 = -t13879 * t14378 + t14248;
t13502 = (t13880 * t14386 - t14417 * t16806) * t14389 - t16666;
t16358 = t13654 * t14306;
t15565 = t13502 * t16358;
t15870 = t14422 * t14423;
t13597 = t14153 * t15870 + t14386 * t16678;
t13447 = (-t13597 * t14353 + t16298) * t14389 + t16815;
t15572 = t13447 * t16358;
t13813 = t14353 * t13850;
t16103 = t14353 * t14422;
t16731 = (t13887 * t14359 - t14176 * t16103) * t14378 - t14359 * t14245;
t13446 = (t13597 * t14359 + t13813) * t14389 + t16731;
t15573 = t13446 * t16358;
t15612 = t14307 * t16427;
t15645 = t14306 * t16439;
t15764 = t14441 - t14462;
t13289 = pkin(2) * t16416;
t15779 = t14416 * t14861 * t14337 + t13289;
t15782 = t13187 + t13283;
t13208 = qJ(3,2) * t15102;
t16597 = 0.2e1 * qJ(3,2);
t15791 = (t13208 - t14722) * t15802 + t14722 * t16597;
t13202 = t14422 * t14724;
t13255 = qJ(3,2) * t15613;
t13109 = t13202 + t13255;
t15797 = ((t14336 * t15613 + t13109) * t15239 + t15174) * t14387 + t14250 * t15642;
t16414 = t13292 * t14416;
t16415 = t13292 * t14307;
t15697 = t16555 * t13292;
t16132 = t14306 * t14416;
t16451 = (t14241 * t15611 - t15697) * t16132;
t16576 = -0.2e1 * t14422;
t16641 = pkin(6) * qJ(3,2) + t15927;
t16648 = 0.2e1 * qJ(3,2) * t13202 + 0.2e1 * t13109 * t14336;
t15439 = t14267 * t16133;
t16752 = (t13208 + (t14336 * t15641 - t14910) * t14306) * t15238 + t15439 * t16427 + t16648 + (t15764 + t14337) * t15613;
t12923 = t13319 * t15573 + t13355 * t15565 + t13361 * t15572 + (-(t16752 * t14377 + (t15791 * t14386 + (-t15764 + t14841) * t14802 + t15797) * t14378 + (t13090 + (t15779 * t14386 + (t14937 + (t14422 * t15760 * t16641 - t14166 * t15937) * t16439) * t14306) * t14387 + t15782 * t14386 - (t14251 + t15226) * t15613 - t16648) * t14389 - t13850 * t16439) * t15612 - (-(t13762 * t15102 + t15211) * t14422 * t14377 + (t15101 * t16588 + (-t14306 * t14788 + t14926) * t14422 + t14960) * t14378 + (-t13631 * t15104 + t14319 * t13037 * t16576 + t13087 + ((t15080 * t16646 + t13286) * t14416 + t13193) * t14387 + pkin(2) * (-pkin(2) * t15645 + t16451)) * t14389 - t14319 * (-t14422 * t15611 + t13244 * t14416 + (t14416 * t15186 + (t14176 * t16439 - t16414) * t14386) * t14306)) * t15644 - (t14961 + (t15641 * t16193 + (t14153 * t15611 + t14176 * t15642) * t14389) * t14306) * t16415) * t13654;
t16501 = qJ(3,2) * t12923;
t12907 = t13130 + t16501;
t12906 = 0.2e1 * t12907;
t13557 = t15332 * t16668 - t15866 * t16634;
t13796 = t16634 * t15367;
t14027 = t14153 * t15266;
t14030 = t14153 * t15265;
t14763 = t14419 * t14988;
t14942 = t14153 * t15366;
t14950 = t16634 * t15265;
t14987 = t14419 * t15364;
t15022 = t14153 * t15367;
t15028 = t16634 * t15266;
t15029 = t16634 * t15366;
t15362 = t14360 * t15828;
t16070 = t14360 * t14419;
t15450 = t14186 * t16070;
t15810 = t14429 * t14419;
t15979 = t14374 * t14424;
t16071 = t14360 * t14418;
t16186 = t14153 * t14419;
t16195 = t14153 * t14360;
t16261 = t16634 * t14424;
t16658 = t14429 - t16309;
t13293 = (-t13470 * t16315 + t16625 * t14102 + (t14373 * t15259 * t16634 - t13557 * t16040) * t14372 - t14186 * t16261 - t16668 * t14489 + (t13557 * t16046 - t14426 * (-t15331 * t16668 - t15355 * t16634)) * t14369) * t14354 + (t16625 * t16634 * t16071 + t13827 + (-t14372 * t14516 + t15364 * t16705) * t16805 + (t14498 * t14372 + (t14369 * t15319 - t15313) * t14370 + t16219 * t14369 + t16658) * t16668) * t14425 + (-t16634 * t15810 + t14360 * t16185 + (((-t15262 * t16634 - t15022) * t14370 - t14950 + t14145 * t16195) * t14372 + ((t15263 * t16634 - t14942) * t14369 + t14153 * t15365) * t14370 + (-t14133 * t16195 + t15028) * t14369 + t16634 * t14980) * t14371 + (((t14153 * t15361 - t15028) * t14370 + t16634 * t16201 + t14942) * t14372 - ((t14153 * t15362 + t14950) * t14369 - t16634 * t15264) * t14370 - (t14133 * t14419 * t16634 + t15022) * t14369 - t15253 * t16195) * t14374) * t14418 - t16668 * t14510 * t14372 + ((-(-t15362 * t16634 + t14030) * t15979 + t16668 * t14987) * t14369 + t14974 * t16805) * t14370 + (-(t14133 * t16186 - t13796) * t15979 - t16668 * t14763) * t14369 + t16668 * t15450 + (-t14942 * t16704 * t14425 + (-((t14153 * t15262 - t13796) * t14370 + t14030 + t16634 * t16203) * t14371 + (-(t15361 * t16634 + t14027) * t14370 - t15029 + t14145 * t16186) * t14374) * t14372 + (((t14153 * t15263 + t15029) * t14369 - t16634 * t15365) * t14370 + (t16220 * t16634 + t14027) * t14369 + t14153 * t14980) * t14371 + t16634 * t16231 - t14153 * t15810) * t14424;
t16438 = t13221 * t13657;
t15639 = t14310 * t16438;
t13131 = t13293 * t15639;
t15637 = t14418 * t16438;
t14958 = t14386 * t15637;
t14798 = t14309 * t14958;
t13182 = t14250 * t14798;
t13200 = pkin(2) * t14798;
t15984 = t14374 * t14419;
t13778 = t14145 * t15984 - t14425 * t14989;
t13781 = t14133 * t15984 + t14425 * t14988;
t15978 = t14374 * t14425;
t13784 = t14133 * t15978 - t14763;
t13787 = t14145 * t15978 + t14419 * t14989;
t13881 = -t14118 * t14418 + t14249;
t16068 = t14360 * t14425;
t13939 = t14186 * t16068 - t15810;
t13942 = t14425 * t14429 + t15450;
t13980 = t14374 * t15265 - t14425 * t15364;
t13981 = t14425 * t15319 + t14987;
t13982 = t14419 * t15363 - t14425 * t15325;
t13983 = t14374 * t15266 + t14425 * t15363;
t15494 = t14384 * t14917;
t13882 = -t14176 * t14425 - t14246 * t14418;
t16118 = t14320 * t14418;
t16607 = ((t13980 * t16118 + t13981 * t14176) * t14369 + t13882 * t15313) * t14370 - (-(-t13982 * t14176 + t13983 * t16118) * t14370 + t13778 * t16118 + t13787 * t14176 + t13882 * t15246) * t14372 + (t13781 * t16118 + t13784 * t14176) * t14369 + t13882 * t16309 + t16677 * t16381 - t13939 * t16118 + t13942 * t14176;
t14557 = t14049 + t14320 - t14239;
t15879 = t14418 * t14424;
t15307 = t14386 * t15879;
t16608 = -t14153 * t15307 + t14384 * t14557 - t14320;
t13269 = -(t13983 * t16059 + (t14360 * t14704 + t16381) * t14425 + (t13980 * t14370 + t13781) * t14369 + ((t15246 - t16202) * t14372 - t14370 * t15313 + t16658) * t14419) * t15494 + (t16607 * t14378 + (-t13470 * t16282 + (t13881 * t15246 + (-t13982 * t14320 - t13983 * t16171) * t14370 + t13778 * t16171 - t13787 * t14320) * t14372 - t13881 * t16309 + ((-t13980 * t16171 + t13981 * t14320) * t14369 - t13881 * t15313) * t14370 + (-t13781 * t16171 + t13784 * t14320) * t14369 + t13939 * t16171 + t14320 * t13942) * t15952 - t16607) * t14424 - t16608 * (t13470 * t14360 + t14354 * t16625);
t16426 = t13269 * t16822;
t15162 = t16555 * t16426;
t14912 = pkin(2) * t15162;
t14731 = t14309 * t14912;
t15179 = t16426 * t16509;
t13038 = (-t14309 * t15179 + t13200) * t14387 + t13182 + t14731;
t15173 = pkin(2) * t15637;
t14742 = t15173 * t16509;
t16131 = t14309 * t14375;
t13091 = (-t14267 * t16426 + t14742 * t16585) * t16131;
t14931 = -0.2e1 * t15179;
t13092 = (pkin(2) * t14931 * t15935 + t14267 * t16438) * t16131;
t15164 = t16555 * t16438;
t14860 = t14309 * t15164;
t14723 = pkin(2) * t14860;
t13194 = t14723 * t15803;
t15609 = t13269 * t16824;
t13245 = t14250 * t15609;
t16413 = t13293 * t14309;
t13287 = t16413 * t16509;
t16052 = t14370 * t14448;
t13952 = t14159 * t14373 - t16052;
t16755 = -t13958 * t14371 + t14165 * t14374;
t16326 = t16755 * t14428;
t13489 = -(-t14159 * t14371 + t14165 * t16058) * t14426 - t13952 * t15977 - t16326;
t16318 = t16639 * t14428;
t13494 = (t14159 * t14374 + t14370 * t16035) * t14426 + t13952 * t16032 + t16318;
t13320 = t14413 + (-t14371 * t16755 + t14374 * t16639) * t14409 + (-t14004 * t16755 + t14005 * t16639) * t14426 + ((-t13489 - t16326) * t14374 + (t13494 - t16318) * t14371) * t14427 + ((-t14371 * t16639 - t14374 * t16755) * t14408 + (t13489 * t14371 + t13494 * t14374) * t14426) * t14373;
t13650 = -t13958 * t14427 + t14165 * t16009;
t13900 = t14372 * t15996 - t14373 * t16061 + t16052;
t13356 = t14411 - t13494 * t14428 + t13650 * t15977 + (-t13494 * t14370 - t13650 * t16033) * t14426 + t14556 * t16755 + t14495 * t13900;
t13362 = t14412 + t13489 * t14428 - t13650 * t16032 + (t13489 * t14370 - t13650 * t16011) * t14426 - t14556 * t16639 + t14496 * t13900;
t14442 = qJ(3,1) ^ 2;
t15770 = qJ(3,1) * t15802 - t14442;
t13632 = t14630 + t15770;
t16142 = (pkin(2) + t14320) * (-pkin(2) + t14320);
t13763 = t15776 + t16142;
t15607 = t14386 * t16426;
t14786 = t15607 * t16142;
t15636 = t14424 * t16438;
t15095 = t14309 * t15636;
t14797 = t14386 * t15095;
t14729 = t15162 * t16509;
t14613 = t14386 * t14729;
t15078 = t14267 * t15607;
t15099 = t16646 * t15637;
t15096 = t14309 * t15637;
t14873 = pkin(2) * t15096;
t13188 = t14241 * t14873;
t13284 = t14250 * t16413;
t16697 = -0.2e1 * t13188 - t13284;
t14925 = (-0.4e1 * t14742 - t15078) * t16131 + (t15099 - (t14613 - t13293 / 0.2e1) * pkin(2)) * t14309 * t16723 - t16697;
t15723 = pkin(2) * t16426;
t15240 = -0.2e1 * t15723;
t14936 = t14250 * t15240;
t15606 = t14418 * t16426;
t14957 = t14153 * t15606;
t15077 = t14309 * t15607;
t15638 = t14384 * t16438;
t15094 = t14386 * t15638;
t15097 = t14309 * t15638;
t15185 = t14387 * t15723;
t15745 = 0.2e1 * t16426;
t15210 = t14176 * t15745;
t15225 = t14442 + t15761;
t16665 = -t13881 * t14378 + t14249;
t13503 = (t13882 * t14386 - t14419 * t16805) * t14389 - t16665;
t16357 = t13657 * t14309;
t15564 = t13503 * t16357;
t15867 = t14424 * t14425;
t13598 = t14153 * t15867 + t14386 * t16677;
t13449 = (-t13598 * t14354 + t16297) * t14389 + t16816;
t15570 = t13449 * t16357;
t13814 = t14354 * t13851;
t16100 = t14354 * t14424;
t16730 = (t13891 * t14360 - t14176 * t16100) * t14378 - t14360 * t14246;
t13448 = (t13598 * t14360 + t13814) * t14389 + t16730;
t15571 = t13448 * t16357;
t15608 = t14310 * t16426;
t15640 = t14309 * t16438;
t15763 = t14442 - t14462;
t13290 = pkin(2) * t16413;
t15778 = t14418 * t14860 * t14337 + t13290;
t15781 = t13188 + t13284;
t13209 = qJ(3,1) * t15095;
t16598 = 0.2e1 * qJ(3,1);
t15790 = (t13209 - t14731) * t15802 + t14731 * t16598;
t13203 = t14424 * t14723;
t13257 = qJ(3,1) * t15609;
t13110 = t13203 + t13257;
t15796 = ((t14336 * t15609 + t13110) * t15239 + t15173) * t14387 + t14250 * t15637;
t16411 = t13293 * t14418;
t16412 = t13293 * t14310;
t15696 = t16555 * t13293;
t16130 = t14309 * t14418;
t16450 = (t14241 * t15607 - t15696) * t16130;
t16575 = -0.2e1 * t14424;
t16640 = pkin(6) * qJ(3,1) + t15927;
t16649 = 0.2e1 * qJ(3,1) * t13203 + 0.2e1 * t13110 * t14336;
t15438 = t14267 * t16131;
t16753 = (t13209 + (t14336 * t15636 - t14912) * t14309) * t15238 + t15438 * t16426 + t16649 + (t15763 + t14337) * t15609;
t12924 = t13320 * t15571 + t13356 * t15564 + t13362 * t15570 + (-(t16753 * t14377 + (t15790 * t14386 + (-t15763 + t14841) * t14797 + t15796) * t14378 + (t13091 + (t15778 * t14386 + (t14936 + (t14424 * t15760 * t16640 - t14166 * t15935) * t16438) * t14309) * t14387 + t15781 * t14386 - (t14251 + t15225) * t15609 - t16649) * t14389 - t13851 * t16438) * t15608 - (-(t13763 * t15095 + t15210) * t14424 * t14377 + (t15094 * t16588 + (-t14309 * t14786 + t14925) * t14424 + t14957) * t14378 + (-t13632 * t15097 + t13038 * t14320 * t16575 + t13092 + ((t15077 * t16646 + t13287) * t14418 + t13194) * t14387 + (-pkin(2) * t15640 + t16450) * pkin(2)) * t14389 - t14320 * (-t14424 * t15607 + t13245 * t14418 + (t14418 * t15185 + (t14176 * t16438 - t16411) * t14386) * t14309)) * t15639 - (t14958 + (t15636 * t16193 + (t14153 * t15607 + t14176 * t15637) * t14389) * t14309) * t16412) * t13657;
t16505 = qJ(3,1) * t12924;
t12909 = t13131 + t16505;
t12908 = 0.2e1 * t12909;
t16781 = t14397 * t16676;
t16780 = t14399 * t16675;
t16779 = t14401 * t16674;
t16778 = t14421 * t16670;
t16777 = t14423 * t16669;
t16776 = t14425 * t16668;
t15656 = t14304 * t16443;
t13057 = (0.2e1 * t14382 - 0.1e1) * t15656;
t16514 = t14358 * g(2);
t16524 = t14352 * g(1);
t14196 = t16514 + t16524;
t14122 = t14196 * t14414;
t16769 = -pkin(1) * t13057 - t14122;
t15654 = t14307 * t16442;
t13058 = (0.2e1 * t14383 - 0.1e1) * t15654;
t16512 = t14359 * g(2);
t16523 = t14353 * g(1);
t14197 = t16512 + t16523;
t14123 = t14197 * t14416;
t16768 = -pkin(1) * t13058 - t14123;
t15652 = t14310 * t16441;
t13059 = (0.2e1 * t14384 - 0.1e1) * t15652;
t16510 = t14360 * g(2);
t16522 = t14354 * g(1);
t14198 = t16510 + t16522;
t14124 = t14198 * t14418;
t16767 = -pkin(1) * t13059 - t14124;
t16760 = t14373 * t14410 + t15865;
t16729 = -0.4e1 * pkin(1);
t16728 = 0.4e1 * pkin(1);
t16727 = 0.4e1 * t14375;
t16726 = 0.2e1 * t14379;
t16725 = 0.2e1 * t14380;
t16724 = 0.2e1 * t14381;
t16722 = t14378 - 0.1e1;
t16067 = t14369 * t14427;
t13588 = -t14369 * t16760 + (t14370 * t16067 - t14372 * t16009) * t14428 + t14372 * t14409;
t14056 = t14372 * t16008 + t16067;
t13852 = t14056 * t14216;
t13517 = t13588 - t13852;
t16018 = t14372 * t14427;
t14054 = t14369 * t16008 - t16018;
t13789 = t14054 * t14056;
t14042 = t14370 * t14410 + t14373 * t15852 + t14408;
t16696 = -t13789 + t14042;
t16695 = t13852 + t13588;
t13589 = (-t14369 * t16009 - t14370 * t16018) * t14428 + t14369 * t14409 + t16760 * t14372;
t13853 = t14054 * t14216;
t13523 = -t13853 - t13589;
t16694 = -t13853 + t13589;
t13582 = t14042 + t13789;
t14364 = g(3) * t14415;
t14044 = t14202 * t14421 - t14364;
t14365 = g(3) * t14417;
t14046 = t14203 * t14423 - t14365;
t16534 = g(3) * t14419;
t14048 = t14204 * t14425 - t16534;
t15194 = t14462 - t14337;
t14270 = g(1) * t16068;
t15710 = t14425 * t14332;
t14017 = -t14270 + t15710 + t16534;
t13738 = -t14017 * t14418 - t14198 * t14424;
t14269 = t14423 * t14331;
t15712 = g(1) * t16073;
t14016 = -t14269 - t14365 + t15712;
t13736 = t14016 * t14416 - t14197 * t14422;
t14268 = t14421 * t14330;
t15713 = g(1) * t16078;
t14015 = -t14268 - t14364 + t15713;
t13734 = t14015 * t14414 - t14196 * t14420;
t14266 = g(1) * t16083;
t15711 = t14401 * t14329;
t16535 = g(3) * t14395;
t14011 = -t14266 + t15711 + t16535;
t16516 = t14357 * g(2);
t16525 = t14351 * g(1);
t14195 = t16516 + t16525;
t13731 = -t14011 * t14394 - t14195 * t14400;
t14265 = t14399 * t14328;
t14345 = g(3) * t14393;
t15714 = g(1) * t16088;
t14010 = -t14265 - t14345 + t15714;
t16518 = t14356 * g(2);
t16526 = t14350 * g(1);
t14194 = t16518 + t16526;
t13729 = t14010 * t14392 - t14194 * t14398;
t14264 = t14397 * t14327;
t14344 = g(3) * t14391;
t15715 = g(1) * t16093;
t14008 = -t14264 - t14344 + t15715;
t16520 = t14355 * g(2);
t16527 = t14349 * g(1);
t14193 = t16520 + t16527;
t13727 = t14008 * t14390 - t14193 * t14396;
t16627 = t14371 * t16722;
t16626 = t14374 * t16722;
t16599 = 0.2e1 * pkin(2);
t16595 = -0.2e1 * qJ(3,4);
t16593 = -0.2e1 * qJ(3,5);
t16591 = -0.2e1 * qJ(3,6);
t13788 = t14054 ^ 2;
t13790 = t14056 ^ 2;
t14024 = t14216 ^ 2;
t16589 = -0.2e1 * t16646;
t16587 = -0.2e1 * t14378;
t16586 = 0.2e1 * t14378;
t16584 = -0.4e1 * t14387;
t16583 = -0.2e1 * t14387;
t16581 = -0.4e1 * t14389;
t16568 = t16586 - 0.2e1;
t16567 = t14379 - 0.1e1;
t16566 = t16726 - 0.1e1;
t16565 = t14380 - 0.1e1;
t16564 = t16725 - 0.1e1;
t16563 = t14381 - 0.1e1;
t16562 = t16724 - 0.1e1;
t16561 = t14382 - 0.1e1;
t16559 = t14383 - 0.1e1;
t16557 = t14384 - 0.1e1;
t16554 = pkin(1) * t12916;
t16553 = pkin(1) * t12917;
t16552 = pkin(1) * t12918;
t16551 = pkin(1) * t12922;
t16550 = pkin(1) * t12923;
t16549 = pkin(1) * t12924;
t16548 = pkin(1) * t14291;
t16547 = pkin(1) * t14294;
t16546 = pkin(1) * t14297;
t16545 = pkin(1) * t14304;
t16544 = pkin(1) * t14307;
t16543 = pkin(1) * t14310;
t16542 = pkin(1) * t14386;
t16541 = pkin(1) * t14390;
t16540 = pkin(1) * t14392;
t16539 = pkin(1) * t14394;
t16538 = pkin(1) * t14414;
t16537 = pkin(1) * t14416;
t16536 = pkin(1) * t14418;
t13144 = t14153 * t15138;
t14103 = -t14337 + t15231;
t14555 = (0.2e1 * t14747 + t15093) * t16141 - t13278 * t14387 - t15789;
t14629 = t14290 * t14747;
t14761 = t14389 * t14972;
t13726 = -t16646 * t14387 + (t14375 * t15803 - t14241) * pkin(2);
t15525 = t16817 * t16140;
t14784 = t13726 * t13261 * t15525;
t14795 = t14176 * t15092;
t14828 = t15443 * t16446;
t14871 = (t14377 - t14389) * t16588;
t14918 = -t15776 + t15194;
t15063 = t13752 * t15632;
t15769 = t14337 + t14462;
t15135 = (t15769 - t15775) * t15671;
t15161 = (t16587 + 0.1e1) * t14104;
t15207 = t13752 * t14378 + t13626;
t16117 = (t14389 + 0.1e1) * (t14389 - 0.1e1);
t15506 = t14153 * t16117;
t13507 = t14391 * t16788 - t16781;
t15562 = t13507 * t14290 * t14396;
t15592 = t13418 * t16834;
t13417 = (t13797 * t14355 - t14349 * t15490) * t14379 + (-t14349 * t14527 + t14355 * t15493) * t14396 + t16097;
t15593 = t13417 * t16834;
t16192 = t14153 * t14389;
t12970 = t13315 * t15592 + t13357 * t15593 + (-t13351 * t14386 * t15562 + (((t14312 * t14871 + t14386 * t15207) * t15139 + (-t14377 * t15063 + ((t14629 * t16727 + (t15138 * t16589 - t13278) * t14387 + t16702) * t14386 + t15063) * t14389 + ((t13144 - t14795) * t16587 - t14795 + 0.2e1 * t13144) * t14312) * t14396 - t14378 * t14784 - t14386 * t14761 + (-t14828 - (t15169 * t16599 + t16424) * t14290 * t15716 + pkin(2) * t15701 * t16140 + t15135) * t14386 + t14784) * t15667 - ((t13027 * t14224 + t14377 * t15215 + t14378 * t14555 - t14555) * t14396 - t13225 * t16128 + ((t13752 * t14377 + (t14918 + t15775) * t14389 + t14312 * t15161) * t15669 + (((t14612 * t16599 - t15140) * t14387 + t14796) * t14378 + (t14386 * t14941 + t15140) * t14387 - t14103 * t15630) * t14396 - (-t13279 * t14386 + t15190) * t16128) * t14290) * t16434 - (t14386 * t15629 + (t15136 * t16192 + (t14176 * t14973 - t15506 * t16434) * t14396) * t14290) * t13279) * t14291) * t16817;
t16533 = t12970 * pkin(1);
t13145 = t14153 * t15131;
t14554 = (0.2e1 * t14746 + t15090) * t16139 - t13276 * t14387 - t15788;
t14628 = t14293 * t14746;
t14760 = t14389 * t14969;
t15522 = t16818 * t16138;
t14783 = t13726 * t13262 * t15522;
t14793 = t14176 * t15089;
t14823 = t15442 * t16445;
t15062 = t13753 * t15628;
t15128 = (t15769 - t15774) * t15666;
t15206 = t13753 * t14378 + t13627;
t13508 = t14393 * t16787 - t16780;
t15560 = t13508 * t14293 * t14398;
t15590 = t13420 * t16832;
t13419 = (t13798 * t14356 - t14350 * t15489) * t14380 + (-t14350 * t14526 + t14356 * t15492) * t14398 + t16092;
t15591 = t13419 * t16832;
t12971 = t13316 * t15590 + t13358 * t15591 + (-t13352 * t14386 * t15560 + (((t14313 * t14871 + t14386 * t15206) * t15132 + (-t14377 * t15062 + ((t14628 * t16727 + (t15131 * t16589 - t13276) * t14387 + t16701) * t14386 + t15062) * t14389 + ((t13145 - t14793) * t16587 - t14793 + 0.2e1 * t13145) * t14313) * t14398 - t14378 * t14783 - t14386 * t14760 + (-t14823 - (t15168 * t16599 + t16422) * t14293 * t15716 + pkin(2) * t15700 * t16138 + t15128) * t14386 + t14783) * t15662 - ((t13028 * t14226 + t14377 * t15214 + t14378 * t14554 - t14554) * t14398 - t13226 * t16126 + ((t13753 * t14377 + (t14918 + t15774) * t14389 + t14313 * t15161) * t15664 + (((t14611 * t16599 - t15133) * t14387 + t14794) * t14378 + (t14386 * t14940 + t15133) * t14387 - t14103 * t15626) * t14398 - (-t13280 * t14386 + t15189) * t16126) * t14293) * t16433 - (t14386 * t15625 + (t15129 * t16192 + (t14176 * t14970 - t15506 * t16433) * t14398) * t14293) * t13280) * t14294) * t16818;
t16532 = t12971 * pkin(1);
t13146 = t14153 * t15123;
t14553 = (0.2e1 * t14745 + t15087) * t16137 - t13277 * t14387 - t15787;
t14627 = t14296 * t14745;
t14759 = t14389 * t14966;
t15519 = t16819 * t16136;
t14782 = t13726 * t13263 * t15519;
t14791 = t14176 * t15086;
t15061 = t13754 * t15624;
t15125 = (t15769 - t15773) * t15661;
t15205 = t13754 * t14378 + t13628;
t13509 = t14395 * t16786 - t16779;
t15558 = t13509 * t14296 * t14400;
t15588 = t13422 * t16830;
t13421 = (t13799 * t14357 - t14351 * t15488) * t14381 + (-t14351 * t14525 + t14357 * t15491) * t14400 + t16087;
t15589 = t13421 * t16830;
t12972 = t13317 * t15588 + t13359 * t15589 + (-t13353 * t14386 * t15558 + (((t14314 * t14871 + t14386 * t15205) * t15124 + (-t14377 * t15061 + ((t14627 * t16727 + (t15123 * t16589 - t13277) * t14387 + t16700) * t14386 + t15061) * t14389 + ((t13146 - t14791) * t16587 - t14791 + 0.2e1 * t13146) * t14314) * t14400 - t14378 * t14782 - t14386 * t14759 + (-t15441 * t16444 - (t15167 * t16599 + t16420) * t14296 * t15716 + pkin(2) * t15699 * t16136 + t15125) * t14386 + t14782) * t15657 - ((t13029 * t14228 + t14377 * t15213 + t14378 * t14553 - t14553) * t14400 - t14314 * t15904 + ((t13754 * t14377 + (t14918 + t15773) * t14389 + t14314 * t15161) * t15659 + (((t14610 * t16599 - t15126) * t14387 + t14792) * t14378 + (t14386 * t14939 + t15126) * t14387 - t14103 * t15622) * t14400 - (-t13281 * t14386 + t15188) * t16124) * t14296) * t16432 - (t14386 * t15621 + (t15121 * t16192 + (t14176 * t14967 - t15506 * t16432) * t14400) * t14296) * t13281) * t14297) * t16819;
t16531 = t12972 * pkin(1);
t13177 = t14153 * t15110;
t14552 = (0.2e1 * t14744 + t15084) * t16135 - t13288 * t14387 - t15783;
t14626 = t14303 * t14744;
t15516 = t16820 * t16134;
t14757 = t13267 * t13726 * t15516;
t14758 = t14389 * t14963;
t14789 = t14176 * t15083;
t15060 = t13761 * t15617;
t15112 = (t15769 - t15772) * t15650;
t15204 = t13761 * t14378 + t13630;
t13510 = t14415 * t16785 - t16778;
t15556 = t13510 * t14303 * t14420;
t15586 = t13430 * t16828;
t13429 = (t13803 * t14358 - t14352 * t15484) * t14382 + (-t14352 * t14524 + t14358 * t15487) * t14420 + t16082;
t15587 = t13429 * t16828;
t12976 = t13318 * t15586 + t13360 * t15587 + (-t13354 * t14386 * t15556 + (((t14318 * t14871 + t14386 * t15204) * t15111 + (-t14377 * t15060 + ((t14626 * t16727 + (t15110 * t16589 - t13288) * t14387 + t16699) * t14386 + t15060) * t14389 + ((t13177 - t14789) * t16587 - t14789 + 0.2e1 * t13177) * t14318) * t14420 - t14378 * t14757 - t14386 * t14758 + (-t15440 * t16440 - (t15166 * t16599 + t16417) * t14303 * t15716 + pkin(2) * t15698 * t16134 + t15112) * t14386 + t14757) * t15646 - ((t13036 * t14236 + t14377 * t15212 + t14378 * t14552 - t14552) * t14420 - t13243 * t16122 + ((t13761 * t14377 + (t14918 + t15772) * t14389 + t14318 * t15161) * t15648 + (((t14615 * t16599 - t15113) * t14387 + t14790) * t14378 + (t14386 * t14938 + t15113) * t14387 - t14103 * t15615) * t14420 - (-t13291 * t14386 + t15187) * t16122) * t14303) * t16428 - (t14386 * t15614 + (t15108 * t16192 + (t14176 * t14964 - t15506 * t16428) * t14420) * t14303) * t13291) * t14304) * t16820;
t16530 = t12976 * pkin(1);
t13178 = t14153 * t15103;
t14551 = (0.2e1 * t14743 + t15081) * t16133 - t13289 * t14387 - t15782;
t14625 = t14306 * t14743;
t15513 = t16821 * t16132;
t14755 = t13268 * t13726 * t15513;
t14756 = t14389 * t14960;
t14787 = t14176 * t15080;
t15059 = t13762 * t15613;
t15105 = (t15769 - t15771) * t15645;
t15203 = t13762 * t14378 + t13631;
t13511 = t14417 * t16784 - t16777;
t15554 = t13511 * t14306 * t14422;
t15584 = t13432 * t16826;
t13431 = (t13804 * t14359 - t14353 * t15483) * t14383 + (-t14353 * t14523 + t14359 * t15486) * t14422 + t16077;
t15585 = t13431 * t16826;
t12977 = t13319 * t15584 + t13361 * t15585 + (-t13355 * t14386 * t15554 + (((t14319 * t14871 + t14386 * t15203) * t15104 + (-t14377 * t15059 + ((t14625 * t16727 + (t15103 * t16589 - t13289) * t14387 + t16698) * t14386 + t15059) * t14389 + ((t13178 - t14787) * t16587 - t14787 + 0.2e1 * t13178) * t14319) * t14422 - t14378 * t14755 - t14386 * t14756 + (-t15439 * t16439 - (t15165 * t16599 + t16414) * t14306 * t15716 + pkin(2) * t15697 * t16132 + t15105) * t14386 + t14755) * t15641 - ((t13037 * t14238 + t14377 * t15211 + t14378 * t14551 - t14551) * t14422 - t13244 * t16120 + ((t13762 * t14377 + (t14918 + t15771) * t14389 + t14319 * t15161) * t15643 + (((t14614 * t16599 - t15106) * t14387 + t14788) * t14378 + (t14386 * t14937 + t15106) * t14387 - t14103 * t15611) * t14422 - (-t13292 * t14386 + t15186) * t16120) * t14306) * t16427 - (t14386 * t15610 + (t15101 * t16192 + (t14176 * t14961 - t15506 * t16427) * t14422) * t14306) * t13292) * t14307) * t16821;
t16529 = t12977 * pkin(1);
t13179 = t14153 * t15096;
t14550 = (0.2e1 * t14742 + t15078) * t16131 - t13290 * t14387 - t15781;
t14624 = t14309 * t14742;
t14754 = t14389 * t14957;
t15510 = t16822 * t16130;
t14781 = t13726 * t13269 * t15510;
t14785 = t14176 * t15077;
t15058 = t13763 * t15609;
t15098 = (t15769 - t15770) * t15640;
t15202 = t13763 * t14378 + t13632;
t13512 = t14419 * t16783 - t16776;
t15552 = t13512 * t14309 * t14424;
t15582 = t13434 * t16824;
t13433 = (t13805 * t14360 - t14354 * t15482) * t14384 + (-t14354 * t14522 + t14360 * t15485) * t14424 + t16072;
t15583 = t13433 * t16824;
t12978 = t13320 * t15582 + t13362 * t15583 + (-t13356 * t14386 * t15552 + (((t14320 * t14871 + t14386 * t15202) * t15097 + (-t14377 * t15058 + ((t14624 * t16727 + (t15096 * t16589 - t13290) * t14387 + t16697) * t14386 + t15058) * t14389 + ((t13179 - t14785) * t16587 - t14785 + 0.2e1 * t13179) * t14320) * t14424 - t14378 * t14781 - t14386 * t14754 + (-t15438 * t16438 - (t15164 * t16599 + t16411) * t14309 * t15716 + pkin(2) * t15696 * t16130 + t15098) * t14386 + t14781) * t15636 - ((t13038 * t14240 + t14377 * t15210 + t14378 * t14550 - t14550) * t14424 - t13245 * t16118 + ((t13763 * t14377 + (t14918 + t15770) * t14389 + t14320 * t15161) * t15638 + (((t14613 * t16599 - t15099) * t14387 + t14786) * t14378 + (t14386 * t14936 + t15099) * t14387 - t14103 * t15607) * t14424 - (-t13293 * t14386 + t15185) * t16118) * t14309) * t16426 - (t14386 * t15606 + (t15094 * t16192 + (t14176 * t14958 - t15506 * t16426) * t14424) * t14309) * t13293) * t14310) * t16822;
t16528 = t12978 * pkin(1);
t16507 = t14411 - g(3);
t16506 = t14412 - g(2);
t16504 = qJ(3,1) * t12978;
t16503 = qJ(3,1) * t14386;
t16502 = qJ(3,1) * t14424;
t16500 = qJ(3,2) * t12977;
t16499 = qJ(3,2) * t14386;
t16498 = qJ(3,2) * t14422;
t16496 = qJ(3,3) * t12976;
t16495 = qJ(3,3) * t14386;
t16494 = qJ(3,3) * t14420;
t16492 = qJ(3,4) * t12972;
t16491 = qJ(3,4) * t14386;
t16490 = qJ(3,4) * t14400;
t16488 = qJ(3,5) * t12971;
t16487 = qJ(3,5) * t14386;
t16486 = qJ(3,5) * t14398;
t16484 = qJ(3,6) * t12970;
t16483 = qJ(3,6) * t14386;
t16482 = qJ(3,6) * t14396;
t16481 = -0.2e1 * t16555;
t16480 = 0.4e1 * t16555;
t12883 = t13120 + t16485 / 0.2e1;
t16479 = t12883 * t14390;
t12884 = t13121 + t16489 / 0.2e1;
t16478 = t12884 * t14392;
t12885 = t13122 + t16493 / 0.2e1;
t16477 = t12885 * t14394;
t12901 = t13129 + t16497 / 0.2e1;
t16476 = t12901 * t14414;
t12902 = t13130 + t16501 / 0.2e1;
t16475 = t12902 * t14416;
t12903 = t13131 + t16505 / 0.2e1;
t16474 = t12903 * t14418;
t16473 = t12916 * t14390;
t16472 = t12917 * t14392;
t16471 = t12918 * t14394;
t16470 = t12922 * t14414;
t16469 = t12923 * t14416;
t16468 = t12924 * t14418;
t15091 = t13279 * t15631;
t12937 = 0.2e1 * t15091 + 0.2e1 * t16484;
t16467 = t12937 * t14386;
t15088 = t13280 * t15627;
t12938 = 0.2e1 * t15088 + 0.2e1 * t16488;
t16466 = t12938 * t14386;
t15085 = t13281 * t15623;
t12939 = 0.2e1 * t15085 + 0.2e1 * t16492;
t16465 = t12939 * t14386;
t15082 = t13291 * t15616;
t12946 = 0.2e1 * t15082 + 0.2e1 * t16496;
t16464 = t12946 * t14386;
t15079 = t13292 * t15612;
t12947 = 0.2e1 * t15079 + 0.2e1 * t16500;
t16463 = t12947 * t14386;
t15076 = t13293 * t15608;
t12948 = 0.2e1 * t15076 + 0.2e1 * t16504;
t16462 = t12948 * t14386;
t16461 = t12976 * t14414;
t16460 = t12977 * t14416;
t16459 = t12978 * t14418;
t16458 = (t14917 * t16434 + (t14389 * t16810 + t16176) * t16446) * t16425;
t16457 = (t14917 * t16433 + (t14389 * t16809 + t16175) * t16445) * t16423;
t16456 = (t14917 * t16432 + (t14389 * t16808 + t16174) * t16444) * t16421;
t16437 = t13261 ^ 2 / t16788 ^ 2;
t16436 = t13262 ^ 2 / t16787 ^ 2;
t16435 = t13263 ^ 2 / t16786 ^ 2;
t16431 = t13267 ^ 2 / t16785 ^ 2;
t16430 = t13268 ^ 2 / t16784 ^ 2;
t16429 = t13269 ^ 2 / t16783 ^ 2;
t16410 = t13417 * t16817;
t16409 = t13418 * t16817;
t16408 = t13419 * t16818;
t16407 = t13420 * t16818;
t16406 = t13421 * t16819;
t16405 = t13422 * t16819;
t16404 = t13429 * t16820;
t16403 = t13430 * t16820;
t16402 = t13431 * t16821;
t16401 = t13432 * t16821;
t16400 = t13433 * t16822;
t16399 = t13434 * t16822;
t16398 = t13435 * t13617;
t16397 = t13436 * t13617;
t16396 = t13437 * t13620;
t16395 = t13438 * t13620;
t16394 = t13439 * t13623;
t16393 = t13440 * t13623;
t16392 = t13444 * t13651;
t16391 = t13445 * t13651;
t16390 = t13446 * t13654;
t16389 = t13447 * t13654;
t16388 = t13448 * t13657;
t16387 = t13449 * t13657;
t16380 = t13495 * t13617;
t16379 = t13496 * t13620;
t16378 = t13497 * t13623;
t16377 = t13501 * t13651;
t16376 = t13502 * t13654;
t16375 = t13503 * t13657;
t15702 = t14389 * t16555;
t14497 = (t14386 * t14388 + t14389 * t15954) * pkin(6) - pkin(2) * t15702;
t16374 = 0.1e1 / ((t14497 + t16483) * t14390 + t16810) * t13895;
t16373 = 0.1e1 / ((t14497 + t16487) * t14392 + t16809) * t13896;
t16372 = 0.1e1 / ((t14497 + t16491) * t14394 + t16808) * t13897;
t16371 = 0.1e1 / ((t14497 + t16499) * t14416 + t16806) * t13899;
t16370 = 0.1e1 / ((t14497 + t16503) * t14418 + t16805) * t13900;
t16369 = 0.1e1 / ((t14497 + t16495) * t14414 + t16807) * t13898;
t16368 = t16801 * t16817;
t16367 = t16759 * t16818;
t16366 = t16758 * t16819;
t16365 = t16757 * t16820;
t16364 = t16756 * t16821;
t16363 = t16755 * t16822;
t16353 = t16817 * t13727;
t14119 = t14193 * t14390;
t13728 = t14008 * t14396 + t14119;
t16352 = t16817 * t13728;
t16350 = t16818 * t13729;
t14120 = t14194 * t14392;
t13730 = t14010 * t14398 + t14120;
t16349 = t16818 * t13730;
t16347 = t16819 * t13731;
t14121 = t14195 * t14394;
t13732 = -t14011 * t14400 + t14121;
t16346 = t16819 * t13732;
t16341 = t16820 * t13734;
t13735 = t14015 * t14420 + t14122;
t16340 = t16820 * t13735;
t16338 = t16821 * t13736;
t13737 = t14016 * t14422 + t14123;
t16337 = t16821 * t13737;
t16335 = t16822 * t13738;
t13739 = -t14017 * t14424 + t14124;
t16334 = t16822 * t13739;
t16295 = t13855 * t13895;
t16287 = t13880 * t13899;
t16285 = t13882 * t13900;
t16281 = t13896 * t13857;
t16280 = t13897 * t13859;
t16279 = t13898 * t13878;
t16258 = t16764 * t14400;
t16256 = t16766 * t14396;
t16253 = t16765 * t14398;
t16249 = t16762 * t14422;
t16247 = t16761 * t14424;
t16245 = t16763 * t14420;
t16238 = t14054 * t14372;
t16237 = t14056 * t14369;
t16157 = t14199 * t14397;
t16156 = t14200 * t14399;
t16155 = t14201 * t14401;
t14343 = t14413 - g(1);
t16116 = t14343 * t14373;
t16114 = t14349 * t14449;
t16113 = t14349 * t14455;
t16111 = t14350 * t14450;
t16110 = t14350 * t14456;
t16108 = t14351 * t14451;
t16107 = t14351 * t14457;
t16105 = t14352 * t14452;
t16104 = t14352 * t14458;
t16102 = t14353 * t14453;
t16101 = t14353 * t14459;
t16099 = t14354 * t14454;
t16098 = t14354 * t14460;
t16034 = t14371 * t14372;
t16031 = t14371 * t14449;
t16030 = t14371 * t14450;
t16029 = t14371 * t14451;
t16028 = t14371 * t14452;
t16027 = t14371 * t14453;
t16026 = t14371 * t14454;
t16019 = t14372 * t14374;
t15969 = t14374 * t14455;
t15968 = t14374 * t14456;
t15967 = t14374 * t14457;
t15966 = t14374 * t14458;
t15965 = t14374 * t14459;
t15964 = t14374 * t14460;
t15963 = t14378 * t14437;
t15962 = t14378 * t14438;
t15961 = t14378 * t14439;
t15960 = t14378 * t14440;
t15959 = t14378 * t14441;
t15958 = t14378 * t14442;
t15953 = t14386 * t14387;
t15950 = t14386 * t14391;
t15948 = t14386 * t14393;
t15946 = t14386 * t14395;
t15938 = t14386 * t14415;
t15936 = t14386 * t14417;
t15934 = t14386 * t14419;
t15925 = t14389 * t14391;
t15923 = t14389 * t14393;
t15921 = t14389 * t14395;
t15919 = t14389 * t14415;
t15917 = t14389 * t14417;
t15915 = t14389 * t14419;
t15910 = t14391 * t14455;
t15905 = t14393 * t14456;
t15899 = t14395 * t14457;
t15898 = t14396 * t12916;
t15895 = t14398 * t12917;
t15892 = t14400 * t12918;
t15885 = t14415 * t14458;
t15880 = t14417 * t14459;
t15875 = t14419 * t14460;
t15874 = t14420 * t12922;
t15871 = t14422 * t12923;
t15868 = t14424 * t12924;
t15809 = t14455 * t13855;
t15808 = t14456 * t13857;
t15807 = t14457 * t13859;
t15806 = t14458 * t13878;
t15805 = -0.2e1 * t16542;
t15758 = 0.2e1 * t14389;
t15744 = t14176 * t16587;
t15743 = 0.2e1 * t15914;
t15742 = 0.2e1 * t15909;
t15741 = 0.2e1 * t15903;
t15740 = 0.2e1 * t15889;
t15739 = 0.2e1 * t15884;
t15738 = 0.2e1 * t15879;
t15737 = pkin(1) * t15898;
t15736 = pkin(1) * t15895;
t15735 = pkin(1) * t15892;
t15734 = pkin(1) * t15951;
t15733 = pkin(1) * t15949;
t15732 = pkin(1) * t15947;
t15731 = pkin(1) * t15939;
t15730 = pkin(1) * t15937;
t15729 = pkin(1) * t15935;
t15709 = t12916 * t16555;
t15708 = t12917 * t16555;
t15707 = t12918 * t16555;
t15706 = t12922 * t16555;
t15705 = t12923 * t16555;
t15704 = t12924 * t16555;
t15703 = t14386 * t16555;
t15695 = t16817 * t16473;
t15694 = t16817 * t15898;
t15693 = t16818 * t16472;
t15692 = t16818 * t15895;
t15691 = t16819 * t16471;
t15690 = t16819 * t15892;
t15689 = t16820 * t16470;
t15688 = t16820 * t15874;
t15687 = t16821 * t16469;
t15686 = t16821 * t15871;
t15685 = t16822 * t16468;
t15684 = t16822 * t15868;
t14593 = (pkin(2) + pkin(6)) * (pkin(2) - pkin(6)) * t16555 - t14333;
t15683 = (t16748 * t14378 + (-t14828 * t15945 + ((-t14337 + (pkin(2) - qJ(3,6)) * (pkin(2) + qJ(3,6))) * t15137 + t15795) * t14386 + t15801) * t14389 + t13061 + ((t14593 * t15138 + t15786) * t14386 + t14735 * t15804 + pkin(1) * t14290 * t15245 + t16645 * t14385 * t15137) * t14387 + ((pkin(1) * t14878 + t13273) * t16555 + t14629 + pkin(1) * t16425) * t14386 - (t13168 + 0.2e1 * t13235) * t14336 + (-pkin(2) * qJ(3,6) * t15667 + pkin(1) * t14935) * t14290 * t16555 - t15230 * t15632) * t16434;
t15682 = (t16749 * t14378 + (-t14823 * t15943 + ((-t14337 + (pkin(2) - qJ(3,5)) * (pkin(2) + qJ(3,5))) * t15130 + t15794) * t14386 + t15800) * t14389 + t13062 + ((t14593 * t15131 + t15785) * t14386 + t14734 * t15804 + pkin(1) * t14293 * t15244 + t16644 * t14385 * t15130) * t14387 + ((pkin(1) * t14877 + t13274) * t16555 + t14628 + pkin(1) * t16423) * t14386 - (t13169 + 0.2e1 * t13237) * t14336 + (-pkin(2) * qJ(3,5) * t15662 + pkin(1) * t14934) * t14293 * t16555 - t15229 * t15628) * t16433;
t15681 = (t16750 * t14378 + (-t14818 * t16148 + ((-t14337 + (pkin(2) - qJ(3,4)) * (pkin(2) + qJ(3,4))) * t15122 + t15793) * t14386 + t15799) * t14389 + t13064 + ((t14593 * t15123 + t15784) * t14386 + t14733 * t15804 + pkin(1) * t14296 * t15243 + t16643 * t14385 * t15122) * t14387 + ((pkin(1) * t14876 + t13275) * t16555 + t14627 + pkin(1) * t16421) * t14386 - (t13170 + 0.2e1 * t13239) * t14336 + (-pkin(2) * qJ(3,4) * t15657 + pkin(1) * t14933) * t14296 * t16555 - t15228 * t15624) * t16432;
t14594 = t14386 * t16646;
t15208 = -0.2e1 * t14388 * t15952;
t15209 = -0.2e1 * t14049;
t12991 = -(t14312 * t15209 + t15207) * t15139 + (t14930 * t14389 - 0.2e1 * (t13165 * t14387 + t13147) * t14312 + (t15744 + (-t14312 * t15754 + (-t14437 + t15194) * t15952 + (qJ(3,6) * t15208 + t14312 * t15954) * pkin(6)) * t14290) * t16434) * t14396 + t14761 + t13060 + ((t14594 * t15632 + t13273) * t14390 + t13162) * t14387 + pkin(2) * t16455 - t15135;
t15680 = t12991 * t16446;
t12992 = -(t14313 * t15209 + t15206) * t15132 + (t14929 * t14389 - 0.2e1 * t14313 * (t13166 * t14387 + t13148) + (t15744 + (-t14313 * t15754 + (-t14438 + t15194) * t15952 + (qJ(3,5) * t15208 + t14313 * t15954) * pkin(6)) * t14293) * t16433) * t14398 + t14760 + t13063 + ((t14594 * t15628 + t13274) * t14392 + t13163) * t14387 + pkin(2) * t16454 - t15128;
t15679 = t12992 * t16445;
t12993 = -(t14314 * t15209 + t15205) * t15124 + (t14928 * t14389 - 0.2e1 * t14314 * (t13167 * t14387 + t13149) + (t15744 + (-t14314 * t15754 + (-t14439 + t15194) * t15952 + (qJ(3,4) * t15208 + t14314 * t15954) * pkin(6)) * t14296) * t16432) * t14400 + t14759 + t13065 + ((t14594 * t15624 + t13275) * t14394 + t13164) * t14387 + pkin(2) * t16453 - t15125;
t15678 = t12993 * t16444;
t15677 = t14291 * t16449;
t15675 = t14294 * t16448;
t15673 = t14297 * t16447;
t15635 = t14291 * t16437;
t15634 = t14294 * t16436;
t15633 = t14297 * t16435;
t15620 = t14304 * t16431;
t15619 = t14307 * t16430;
t15618 = t14310 * t16429;
t15431 = t14349 * t16051;
t14579 = -t15431 * t16682 - t15809;
t15427 = t16682 * t16113;
t14580 = -t13855 * t16051 + t15427;
t15428 = t14397 * t16113;
t15429 = t14397 * t16114;
t15430 = t14349 * t16007;
t15505 = t14153 * t16096;
t15509 = t13860 * t16113;
t13294 = ((-((t14370 * t15428 + t15911) * t14372 - t14397 * t15430) * t14374 + ((-t14370 * t15910 + t15429) * t14372 + t14391 * t16007) * t14371 + (-(-t14370 * t15429 + t15910) * t14374 + (t14370 * t15911 + t15428) * t14371) * t14369) * t14917 + t14562 * t14623) * t14379 + (((-t13855 * t14449 + t14370 * t15427) * t14372 - t16682 * t15430) * t16626 - ((t14370 * t15809 + t16114 * t16682) * t14372 - t13855 * t16007) * t16627 + ((((t13854 * t14449 - t14370 * t15509) * t14372 + t13860 * t15430) * t14389 - t14842 * t15505) * t14374 - (((-t13854 * t16045 - t13860 * t16114) * t14372 + t13854 * t16007) * t14389 + t14160 * t15505) * t14371) * t14386 + ((t14579 * t14378 + (t13854 * t14455 + t13860 * t15431) * t15952 - t14579) * t14374 - (t14580 * t14378 + (t13854 * t16051 - t15509) * t15952 - t14580) * t14371) * t14369) * t14396 - t16754 * t16097;
t15605 = t13294 * t16834;
t15426 = t14350 * t16050;
t14577 = -t15426 * t16681 - t15808;
t14578 = -t13857 * t16050 + t16110 * t16681;
t15422 = t14399 * t16110;
t15423 = t14399 * t16111;
t15424 = t14350 * t16006;
t15425 = t14350 * t16044;
t15504 = t14153 * t16091;
t13295 = ((-((t14370 * t15422 + t15906) * t14372 - t14399 * t15424) * t14374 + t14371 * ((-t14370 * t15905 + t15423) * t14372 + t14393 * t16006) + (-(-t14370 * t15423 + t15905) * t14374 + t14371 * (t14370 * t15906 + t15422)) * t14369) * t14917 + t14561 * t14622) * t14380 + (((-t13857 * t14450 + t15425 * t16681) * t14372 - t16681 * t15424) * t16626 - ((t14370 * t15808 + t16111 * t16681) * t14372 - t13857 * t16006) * t16627 + ((((t13856 * t14450 - t13864 * t15425) * t14372 + t13864 * t15424) * t14389 - t13954 * t15504) * t14374 - (((-t13856 * t16044 - t13864 * t16111) * t14372 + t13856 * t16006) * t14389 + t14161 * t15504) * t14371) * t14386 + ((t14577 * t14378 + (t13856 * t14456 + t13864 * t15426) * t15952 - t14577) * t14374 - (t14578 * t14378 + (t13856 * t16050 - t13864 * t16110) * t15952 - t14578) * t14371) * t14369) * t14398 - t16635 * t16092;
t15604 = t13295 * t16832;
t15421 = t14351 * t16049;
t14575 = -t15421 * t16680 - t15807;
t15417 = t16680 * t16107;
t14576 = -t13859 * t16049 + t15417;
t15418 = t14401 * t16107;
t15419 = t14401 * t16108;
t15420 = t14351 * t16005;
t15503 = t14153 * t16086;
t15508 = t13868 * t16107;
t13296 = ((-((t14370 * t15418 + t15900) * t14372 - t14401 * t15420) * t14374 + t14371 * ((-t14370 * t15899 + t15419) * t14372 + t14395 * t16005) + (-(-t14370 * t15419 + t15899) * t14374 + t14371 * (t14370 * t15900 + t15418)) * t14369) * t14917 + t14560 * t14621) * t14381 + (((-t13859 * t14451 + t14370 * t15417) * t14372 - t16680 * t15420) * t16626 - ((t14370 * t15807 + t16108 * t16680) * t14372 - t13859 * t16005) * t16627 + ((((t13858 * t14451 - t14370 * t15508) * t14372 + t13868 * t15420) * t14389 - t13955 * t15503) * t14374 - t14371 * (((-t13858 * t16043 - t13868 * t16108) * t14372 + t13858 * t16005) * t14389 + t14162 * t15503)) * t14386 + ((t14575 * t14378 + (t13858 * t14457 + t13868 * t15421) * t15952 - t14575) * t14374 - t14371 * (t14576 * t14378 + (t13858 * t16049 - t15508) * t15952 - t14576)) * t14369) * t14400 - t16636 * t16087;
t15603 = t13296 * t16830;
t15416 = t14352 * t16048;
t14573 = -t15416 * t16679 - t15806;
t14574 = -t13878 * t16048 + t16104 * t16679;
t15412 = t14421 * t16104;
t15413 = t14421 * t16105;
t15414 = t14352 * t16004;
t15415 = t14352 * t16042;
t15502 = t14153 * t16081;
t13297 = ((-((t14370 * t15412 + t15886) * t14372 - t14421 * t15414) * t14374 + t14371 * ((-t14370 * t15885 + t15413) * t14372 + t14415 * t16004) + (-(-t14370 * t15413 + t15885) * t14374 + t14371 * (t14370 * t15886 + t15412)) * t14369) * t14917 + t14559 * t14620) * t14382 + (((-t13878 * t14452 + t15415 * t16679) * t14372 - t16679 * t15414) * t16626 - ((t14370 * t15806 + t16105 * t16679) * t14372 - t13878 * t16004) * t16627 + ((((t13877 * t14452 - t13883 * t15415) * t14372 + t13883 * t15414) * t14389 - t13956 * t15502) * t14374 - (((-t13877 * t16042 - t13883 * t16105) * t14372 + t13877 * t16004) * t14389 + t14163 * t15502) * t14371) * t14386 + ((t14573 * t14378 + (t13877 * t14458 + t13883 * t15416) * t15952 - t14573) * t14374 - (t14574 * t14378 + (t13877 * t16048 - t13883 * t16104) * t15952 - t14574) * t14371) * t14369) * t14420 - t16637 * t16082;
t15602 = t13297 * t16828;
t15411 = t14353 * t16047;
t14571 = -t13880 * t14459 - t15411 * t16678;
t15247 = t16678 * t16101;
t14572 = -t13880 * t16047 + t15247;
t15408 = t14423 * t16101;
t15409 = t14423 * t16102;
t15410 = t14353 * t16003;
t15501 = t14153 * t16076;
t15507 = t13887 * t16101;
t13298 = ((-((t14370 * t15408 + t15881) * t14372 - t14423 * t15410) * t14374 + ((-t14370 * t15880 + t15409) * t14372 + t14417 * t16003) * t14371 + (-(-t14370 * t15409 + t15880) * t14374 + (t14370 * t15881 + t15408) * t14371) * t14369) * t14917 + t14558 * t14619) * t14383 + (((-t13880 * t14453 + t14370 * t15247) * t14372 - t16678 * t15410) * t16626 - ((t13880 * t16041 + t16102 * t16678) * t14372 - t13880 * t16003) * t16627 + ((((t13879 * t14453 - t14370 * t15507) * t14372 + t13887 * t15410) * t14389 - t13957 * t15501) * t14374 - (((-t13879 * t16041 - t13887 * t16102) * t14372 + t13879 * t16003) * t14389 + t14164 * t15501) * t14371) * t14386 + ((t14571 * t14378 + (t13879 * t14459 + t13887 * t15411) * t15952 - t14571) * t14374 - (t14572 * t14378 + (t13879 * t16047 - t15507) * t15952 - t14572) * t14371) * t14369) * t14422 - t16638 * t16077;
t15601 = t13298 * t16826;
t15407 = t14354 * t16046;
t14569 = -t13882 * t14460 - t15407 * t16677;
t14570 = -t13882 * t16046 + t16098 * t16677;
t15403 = t14425 * t16098;
t15404 = t14425 * t16099;
t15405 = t14354 * t16002;
t15406 = t14354 * t16040;
t15500 = t14153 * t16071;
t13299 = ((-((t14370 * t15403 + t15876) * t14372 - t14425 * t15405) * t14374 + ((-t14370 * t15875 + t15404) * t14372 + t14419 * t16002) * t14371 + (-(-t14370 * t15404 + t15875) * t14374 + (t14370 * t15876 + t15403) * t14371) * t14369) * t14917 + t14557 * t14618) * t14384 + (((-t13882 * t14454 + t15406 * t16677) * t14372 - t16677 * t15405) * t16626 - ((t13882 * t16040 + t16099 * t16677) * t14372 - t13882 * t16002) * t16627 + ((((t13881 * t14454 - t13891 * t15406) * t14372 + t13891 * t15405) * t14389 - t13958 * t15500) * t14374 - (((-t13881 * t16040 - t13891 * t16099) * t14372 + t13881 * t16002) * t14389 + t14165 * t15500) * t14371) * t14386 + ((t14569 * t14378 + (t13881 * t14460 + t13891 * t15407) * t15952 - t14569) * t14374 - (t14570 * t14378 + (t13881 * t16046 - t13891 * t16098) * t15952 - t14570) * t14371) * t14369) * t14424 - t16639 * t16072;
t15600 = t13299 * t16824;
t13321 = -(-t13895 * t14391 - t14397 * t14623) * t15499 + (t14378 * t16295 + (-t13854 * t13895 + t13860 * t14623) * t15952 - t16295) * t14396 - (t16094 * t16682 * t16722 + t14349 * t16613) * t16754;
t15599 = t13321 * t16834;
t13322 = -(-t13896 * t14393 - t14399 * t14622) * t15498 + (t14378 * t16281 + (-t13856 * t13896 + t13864 * t14622) * t15952 - t16281) * t14398 - (t16089 * t16681 * t16722 + t14350 * t16612) * t16635;
t15598 = t13322 * t16832;
t13323 = -(-t13897 * t14395 - t14401 * t14621) * t15497 + (t14378 * t16280 + (-t13858 * t13897 + t13868 * t14621) * t15952 - t16280) * t14400 - (t16084 * t16680 * t16722 + t14351 * t16611) * t16636;
t15597 = t13323 * t16830;
t13324 = -(-t13898 * t14415 - t14421 * t14620) * t15496 + (t14378 * t16279 + (-t13877 * t13898 + t13883 * t14620) * t15952 - t16279) * t14420 - (t16079 * t16679 * t16722 + t14352 * t16610) * t16637;
t15596 = t13324 * t16828;
t13325 = -(-t13899 * t14417 - t14423 * t14619) * t15495 + (t14378 * t16287 + (-t13879 * t13899 + t13887 * t14619) * t15952 - t16287) * t14422 - (t16074 * t16678 * t16722 + t14353 * t16609) * t16638;
t15595 = t13325 * t16826;
t13326 = -(-t13900 * t14419 - t14425 * t14618) * t15494 + (t14378 * t16285 + (-t13881 * t13900 + t13891 * t14618) * t15952 - t16285) * t14424 - (t16069 * t16677 * t16722 + t14354 * t16608) * t16639;
t15594 = t13326 * t16824;
t15563 = t13507 * t16817 * t14379;
t15561 = t13508 * t16818 * t14380;
t15559 = t13509 * t16819 * t14381;
t15557 = t13510 * t16820 * t14382;
t15555 = t13511 * t16821 * t14383;
t15553 = t13512 * t16822 * t14384;
t15551 = t13617 * t16257;
t15550 = t13617 * t16256;
t15549 = t16766 * t16362;
t14037 = -t14344 + t16157;
t15548 = t14037 * t16362;
t15547 = t13620 * t16254;
t15546 = t13620 * t16253;
t15545 = t16765 * t16361;
t14039 = -t14345 + t16156;
t15544 = t14039 * t16361;
t15543 = t13623 * t16259;
t15542 = t13623 * t16258;
t15541 = t16764 * t16360;
t14041 = t16155 - t16535;
t15540 = t14041 * t16360;
t15539 = t13651 * t16802;
t15538 = t13651 * t16245;
t15537 = t16763 * t16359;
t15536 = t14044 * t16359;
t15535 = t13654 * t16803;
t15534 = t13654 * t16249;
t15533 = t16762 * t16358;
t15532 = t14046 * t16358;
t15531 = t13657 * t16804;
t15530 = t13657 * t16247;
t15529 = t16761 * t16357;
t15528 = t14048 * t16357;
t15527 = t13727 * t16834;
t15526 = t13728 * t16834;
t15524 = t13729 * t16832;
t15523 = t13730 * t16832;
t15521 = t13731 * t16830;
t15520 = t13732 * t16830;
t15518 = t13734 * t16828;
t15517 = t13735 * t16828;
t15515 = t13736 * t16826;
t15514 = t13737 * t16826;
t15512 = t13738 * t16824;
t15511 = t13739 * t16824;
t13697 = t14094 - t16269;
t13456 = t14349 * t13697 + t14355 * t16789;
t13306 = t13456 * t14290 * t13315;
t13453 = t14355 * t13697 - t14349 * t16789;
t13333 = t13453 * t14290 * t13357;
t13513 = -t14391 * t14703 + t16781;
t13345 = t13513 * t14290 * t13351;
t15237 = t13306 + t13333 + t13345;
t13698 = t14095 - t16268;
t13457 = t14350 * t13698 + t14356 * t16790;
t13307 = t13457 * t14293 * t13316;
t13454 = t14356 * t13698 - t14350 * t16790;
t13334 = t13454 * t14293 * t13358;
t13514 = -t14393 * t14702 + t16780;
t13346 = t13514 * t14293 * t13352;
t15236 = t13307 + t13334 + t13346;
t13699 = t14096 - t16267;
t13458 = t14351 * t13699 + t14357 * t16791;
t13308 = t13458 * t14296 * t13317;
t13455 = t14357 * t13699 - t14351 * t16791;
t13335 = t13455 * t14296 * t13359;
t13515 = -t14395 * t14701 + t16779;
t13347 = t13515 * t14296 * t13353;
t15235 = t13308 + t13335 + t13347;
t13723 = t14100 - t16263;
t13462 = t14352 * t13723 + t14358 * t16792;
t13312 = t13462 * t14303 * t13318;
t13459 = t14358 * t13723 - t14352 * t16792;
t13339 = t13459 * t14303 * t13360;
t13524 = -t14415 * t14700 + t16778;
t13348 = t13524 * t14303 * t13354;
t15234 = t13312 + t13339 + t13348;
t13724 = t14101 - t16262;
t13463 = t14353 * t13724 + t14359 * t16793;
t13313 = t13463 * t14306 * t13319;
t13460 = t14359 * t13724 - t14353 * t16793;
t13340 = t13460 * t14306 * t13361;
t13525 = -t14417 * t14699 + t16777;
t13349 = t13525 * t14306 * t13355;
t15233 = t13313 + t13340 + t13349;
t13725 = t14102 - t16261;
t13464 = t14354 * t13725 + t14360 * t16794;
t13314 = t13464 * t14309 * t13320;
t13461 = t14360 * t13725 - t14354 * t16794;
t13341 = t13461 * t14309 * t13362;
t13526 = -t14419 * t14698 + t16776;
t13350 = t13526 * t14309 * t13356;
t15232 = t13314 + t13341 + t13350;
t15224 = -0.2e1 * t15702;
t15223 = 0.2e1 * t15702;
t15221 = t12887 * t14378 * t16580;
t15220 = t12889 * t14378 * t16579;
t15219 = t12891 * t14378 * t16578;
t15218 = t12905 * t14378 * t16577;
t15217 = t12907 * t14378 * t16576;
t15216 = t12909 * t14378 * t16575;
t15193 = pkin(1) * t15677;
t15192 = pkin(1) * t15675;
t15191 = pkin(1) * t15673;
t15172 = qJ(3,1) * t15652;
t13256 = qJ(3,1) * t15618;
t15171 = qJ(3,2) * t15654;
t13254 = qJ(3,2) * t15619;
t15170 = qJ(3,3) * t15656;
t13252 = qJ(3,3) * t15620;
t13238 = qJ(3,4) * t15633;
t13236 = qJ(3,5) * t15634;
t13234 = qJ(3,6) * t15635;
t15159 = t12916 * t15525;
t15158 = t15898 * t16834;
t15157 = t12917 * t15522;
t15156 = t15895 * t16832;
t15155 = t12918 * t15519;
t15154 = t15892 * t16830;
t15153 = t12922 * t15516;
t15152 = t15874 * t16828;
t15151 = t12923 * t15513;
t15150 = t15871 * t16826;
t15149 = t12924 * t15510;
t15148 = t15868 * t16824;
t15147 = t14291 * t15676;
t15145 = t14294 * t15674;
t15143 = t14297 * t15672;
t15141 = t16434 * t16446;
t15134 = t16433 * t16445;
t15127 = t16432 * t16444;
t15120 = t14304 * t15655;
t15118 = t14307 * t15653;
t15116 = t14310 * t15651;
t15114 = t16428 * t16440;
t15107 = t16427 * t16439;
t15100 = t16426 * t16438;
t15075 = t16766 * t15569;
t15074 = t16765 * t15568;
t15073 = t16764 * t15567;
t15072 = t16763 * t15566;
t15071 = t16762 * t15565;
t15070 = t16761 * t15564;
t15069 = t16817 * t15562;
t15068 = t16818 * t15560;
t15067 = t16819 * t15558;
t15066 = t16820 * t15556;
t15065 = t16821 * t15554;
t15064 = t16822 * t15552;
t14924 = -t13252 + t15234;
t14923 = -t13254 + t15233;
t14922 = -t13256 + t15232;
t14921 = -t13234 + t15237;
t14920 = -t13236 + t15236;
t14919 = -t13238 + t15235;
t14909 = 0.2e1 * t15091;
t14908 = 0.2e1 * t15088;
t14907 = 0.2e1 * t15085;
t14906 = 0.2e1 * t15082;
t14905 = 0.2e1 * t15079;
t14904 = 0.2e1 * t15076;
t14890 = t14463 - t14437 + t15963;
t14889 = t14463 - t14438 + t15962;
t14888 = t14463 - t14439 + t15961;
t14887 = t14463 - t14440 + t15960;
t14886 = t14463 - t14441 + t15959;
t14885 = t14463 - t14442 + t15958;
t14870 = t14386 * t13256;
t14869 = t14386 * t13254;
t14868 = t14386 * t13252;
t13054 = t16566 * t15677;
t13055 = t16564 * t15675;
t13056 = t16562 * t15673;
t14859 = t14386 * t13234;
t14858 = t14386 * t13236;
t14857 = t14386 * t13238;
t14856 = -t14264 / 0.2e1 + t15715 / 0.2e1;
t14855 = -t14265 / 0.2e1 + t15714 / 0.2e1;
t14854 = t14266 / 0.2e1 - t15711 / 0.2e1;
t14838 = t14291 * t15146;
t14836 = t14294 * t15144;
t14834 = t14297 * t15142;
t14832 = t14291 * t15141;
t14831 = t14386 * t15141;
t14827 = t14294 * t15134;
t14826 = t14386 * t15134;
t14822 = t14297 * t15127;
t14821 = t14386 * t15127;
t14817 = t14304 * t15119;
t14815 = t14307 * t15117;
t14813 = t14310 * t15115;
t14811 = t14304 * t15114;
t14810 = t14389 * t15114;
t14806 = t14307 * t15107;
t14805 = t14389 * t15107;
t14801 = t14310 * t15100;
t14800 = t14389 * t15100;
t14741 = t15116 * t16598;
t14740 = t15118 * t16597;
t14739 = t15120 * t16596;
t14738 = t15143 * t16594;
t14737 = t15145 * t16592;
t14736 = t15147 * t16590;
t14721 = 0.2e1 * t14832;
t14720 = 0.2e1 * t14827;
t14719 = 0.2e1 * t14822;
t14718 = 0.2e1 * t14811;
t14717 = 0.2e1 * t14806;
t14716 = 0.2e1 * t14801;
t14697 = pkin(1) * t14811;
t14696 = pkin(1) * t14806;
t14695 = pkin(1) * t14801;
t14694 = -t15683 - t16458;
t14693 = -t15682 - t16457;
t14692 = -t15681 - t16456;
t12985 = t16751 * t14378 + (-t14807 * t16148 + ((-t14337 + (pkin(2) - qJ(3,3)) * (pkin(2) + qJ(3,3))) * t15109 + t15792) * t14386 + t15798) * t14389 + t13089 + ((t14593 * t15110 + t15780) * t14386 + t16642 * t14385 * t15109 + (pkin(1) * t15242 + t14730 * t16600) * t14303) * t14387 + ((pkin(1) * t14875 + t13285) * t16555 + t14626 + pkin(1) * t16419) * t14386 - (t13201 + 0.2e1 * t13253) * t14336 + (-pkin(2) * qJ(3,3) * t15646 + pkin(1) * t14932) * t14303 * t16555 - t15227 * t15617;
t13021 = (t14917 * t16428 + (t14389 * t16807 + t16173) * t16440) * t14303;
t14691 = -t12985 * t16428 - t13021 * t13291;
t12986 = t16752 * t14378 + (-t14802 * t16148 + ((-t14337 + (pkin(2) - qJ(3,2)) * (pkin(2) + qJ(3,2))) * t15102 + t15791) * t14386 + t15797) * t14389 + t13090 + ((t14593 * t15103 + t15779) * t14386 + t14722 * t15804 + pkin(1) * t14306 * t15241 + t16641 * t14385 * t15102) * t14387 + ((pkin(1) * t14874 + t13286) * t16555 + t14625 + pkin(1) * t16416) * t14386 - (t13202 + 0.2e1 * t13255) * t14336 + (-pkin(2) * qJ(3,2) * t15641 - 0.2e1 * pkin(1) * t15180) * t14306 * t16555 - t15226 * t15613;
t13022 = (t14917 * t16427 + (t14389 * t16806 + t16172) * t16439) * t14306;
t14690 = -t12986 * t16427 - t13022 * t13292;
t12987 = t16753 * t14378 + (-t14797 * t16148 + ((-t14337 + (pkin(2) - qJ(3,1)) * (pkin(2) + qJ(3,1))) * t15095 + t15790) * t14386 + t15796) * t14389 + t13091 + ((t14593 * t15096 + t15778) * t14386 + t16640 * t14385 * t15095 + (pkin(1) * t15240 + t14729 * t16600) * t14309) * t14387 + ((pkin(1) * t14873 + t13287) * t16555 + t14624 + pkin(1) * t16413) * t14386 - (t13203 + 0.2e1 * t13257) * t14336 + (-pkin(2) * qJ(3,1) * t15636 + pkin(1) * t14931) * t14309 * t16555 - t15225 * t15609;
t13023 = (t14917 * t16426 + (t14389 * t16805 + t16171) * t16438) * t14309;
t14689 = -t12987 * t16426 - t13023 * t13293;
t14051 = t14349 * t15913 + t16094;
t14669 = t14051 * t14386 + t14349 * t15925;
t14052 = t14350 * t15908 + t16089;
t14668 = t14052 * t14386 + t14350 * t15923;
t14053 = t14351 * t15902 + t16084;
t14667 = t14053 * t14386 + t14351 * t15921;
t14057 = t14355 * t15913 - t16115;
t14666 = t14057 * t14386 + t14355 * t15925;
t14058 = t14356 * t15908 - t16112;
t14665 = t14058 * t14386 + t14356 * t15923;
t14059 = t14357 * t15902 - t16109;
t14664 = t14059 * t14386 + t14357 * t15921;
t14072 = t14352 * t15888 + t16079;
t14663 = t14072 * t14386 + t14352 * t15919;
t14073 = t14353 * t15883 + t16074;
t14662 = t14073 * t14386 + t14353 * t15917;
t14074 = t14354 * t15878 + t16069;
t14661 = t14074 * t14386 + t14354 * t15915;
t14076 = t14358 * t15888 - t16106;
t14660 = t14076 * t14386 + t14358 * t15919;
t14077 = t14359 * t15883 - t16103;
t14659 = t14077 * t14386 + t14359 * t15917;
t14078 = t14360 * t15878 - t16100;
t14658 = t14078 * t14386 + t14360 * t15915;
t14651 = t14390 * t14832;
t14650 = t14392 * t14827;
t14649 = t14394 * t14822;
t14642 = t14386 * t14811;
t14641 = t14414 * t14811;
t14640 = t14386 * t14806;
t14639 = t14386 * t14801;
t14638 = t14416 * t14806;
t14637 = t14418 * t14801;
t14636 = t14291 * t14831;
t14635 = t14294 * t14826;
t14634 = t14297 * t14821;
t12994 = -(t14318 * t15209 + t15204) * t15111 + (t14927 * t14389 - 0.2e1 * (t13198 * t14387 + t13180) * t14318 + (t15744 + (-t14318 * t15754 + (-t14440 + t15194) * t15952 + (qJ(3,3) * t15208 + t14318 * t15954) * pkin(6)) * t14303) * t16428) * t14420 + t14758 + t13088 + ((t14594 * t15617 + t13285) * t14414 + t13192) * t14387 + pkin(2) * t16452 - t15112;
t14633 = t12985 * t15616 / 0.2e1 + t12994 * t15649 / 0.2e1 + t13021 * t16418 / 0.2e1 - t13312 / 0.2e1 - t13339 / 0.2e1 - t13348 / 0.2e1;
t12995 = -(t14319 * t15209 + t15203) * t15104 + (t14926 * t14389 - 0.2e1 * t14319 * (t13199 * t14387 + t13181) + (t15744 + (-t14319 * t15754 + (-t14441 + t15194) * t15952 + (qJ(3,2) * t15208 + t14319 * t15954) * pkin(6)) * t14306) * t16427) * t14422 + t14756 + t13087 + ((t14594 * t15613 + t13286) * t14416 + t13193) * t14387 + pkin(2) * t16451 - t15105;
t14632 = t12986 * t15612 / 0.2e1 + t12995 * t15644 / 0.2e1 + t13022 * t16415 / 0.2e1 - t13313 / 0.2e1 - t13340 / 0.2e1 - t13349 / 0.2e1;
t12996 = -(t14320 * t15209 + t15202) * t15097 + (t14925 * t14389 - 0.2e1 * (t13200 * t14387 + t13182) * t14320 + (t15744 + (-t14320 * t15754 + (-t14442 + t15194) * t15952 + (qJ(3,1) * t15208 + t14320 * t15954) * pkin(6)) * t14309) * t16426) * t14424 + t14754 + t13092 + ((t14594 * t15609 + t13287) * t14418 + t13194) * t14387 + pkin(2) * t16450 - t15098;
t14631 = t12987 * t15608 / 0.2e1 + t12996 * t15639 / 0.2e1 + t13023 * t16412 / 0.2e1 - t13314 / 0.2e1 - t13341 / 0.2e1 - t13350 / 0.2e1;
t14617 = t15713 / 0.2e1 - t14268 / 0.2e1 - t14364 / 0.2e1;
t14616 = t15712 / 0.2e1 - t14269 / 0.2e1 - t14365 / 0.2e1;
t14609 = t14396 * t14721;
t14607 = t14398 * t14720;
t14605 = t14400 * t14719;
t14603 = 0.2e1 * t14642;
t14602 = t14420 * t14718;
t14600 = 0.2e1 * t14640;
t14599 = t14422 * t14717;
t14598 = 0.2e1 * t14639;
t14597 = t14424 * t14716;
t14549 = t14389 * t14396 * t14831;
t14548 = t14389 * t14398 * t14826;
t14547 = t14389 * t14400 * t14821;
t14540 = t14270 / 0.2e1 - t15710 / 0.2e1 - t16534 / 0.2e1;
t14533 = t14378 * t14609;
t14532 = t14378 * t14607;
t14531 = t14378 * t14605;
t14530 = t14378 * t14602;
t14529 = t14378 * t14599;
t14528 = t14378 * t14597;
t12945 = qJ(3,1) * t14904 + t14442 * t12978;
t12944 = qJ(3,2) * t14905 + t14441 * t12977;
t12943 = qJ(3,3) * t14906 + t14440 * t12976;
t12936 = qJ(3,4) * t14907 + t14439 * t12972;
t12935 = qJ(3,5) * t14908 + t14438 * t12971;
t12934 = qJ(3,6) * t14909 + t14437 * t12970;
t14509 = t14694 - t15680;
t14508 = t14693 - t15679;
t14507 = t14692 - t15678;
t14506 = -t12994 * t16440 + t14691;
t14505 = -t12995 * t16439 + t14690;
t14504 = -t12996 * t16438 + t14689;
t14326 = -t16535 / 0.2e1;
t14325 = -t14345 / 0.2e1;
t14324 = -t14344 / 0.2e1;
t14189 = t15729 - t16502;
t14188 = t15730 - t16498;
t14187 = t15731 - t16494;
t14172 = t15732 - t16490;
t14171 = t15733 - t16486;
t14170 = t15734 - t16482;
t14083 = t14353 * t15870 - t16076;
t14082 = t14353 * t14416 + t14359 * t15870;
t14081 = t14352 * t14414 + t14358 * t15873;
t14080 = t14352 * t15873 - t16081;
t14079 = t14354 * t14418 + t14360 * t15867;
t14075 = t14354 * t15867 - t16071;
t14065 = t14351 * t14394 + t14357 * t15891;
t14064 = t14351 * t15891 - t16086;
t14063 = t14350 * t14392 + t14356 * t15894;
t14062 = t14350 * t15894 - t16091;
t14061 = t14349 * t14390 + t14355 * t15897;
t14060 = t14349 * t15897 - t16096;
t14034 = t14369 * t14371 - t14370 * t16019;
t14033 = t14369 * t16058 + t16034;
t14032 = t14369 * t14374 + t14370 * t16034;
t14031 = -t14369 * t16060 + t16019;
t13833 = t14078 * t14389 - t14360 * t15934;
t13832 = t14077 * t14389 - t14359 * t15936;
t13831 = t14076 * t14389 - t14358 * t15938;
t13830 = t14074 * t14389 - t14354 * t15934;
t13829 = t14073 * t14389 - t14353 * t15936;
t13828 = t14072 * t14389 - t14352 * t15938;
t13821 = t14059 * t14389 - t14357 * t15946;
t13820 = t14058 * t14389 - t14356 * t15948;
t13819 = t14057 * t14389 - t14355 * t15950;
t13818 = t14053 * t14389 - t14351 * t15946;
t13817 = t14052 * t14389 - t14350 * t15948;
t13816 = t14051 * t14389 - t14349 * t15950;
t13815 = t14370 * t14343 + t16011 * t16507 - t16033 * t16506;
t13733 = -t14024 + t13788;
t13629 = -t13790 + t14024;
t13604 = -t15456 + t16300;
t13603 = -t15457 + t16301;
t13602 = -t15458 + t16302;
t13601 = -t15459 + t16306;
t13600 = -t15460 + t16307;
t13599 = -t15461 + t16308;
t13595 = (t14370 * t15964 - t16026) * t14372 + (-t14370 * t15970 - t16020) * t14369 - t14374 * t16002;
t13594 = (t14370 * t15965 - t16027) * t14372 + (-t14370 * t15971 - t16021) * t14369 - t14374 * t16003;
t13593 = (t14370 * t15966 - t16028) * t14372 + (-t14370 * t15972 - t16022) * t14369 - t14374 * t16004;
t13592 = (t14370 * t15967 - t16029) * t14372 + (-t14370 * t15973 - t16023) * t14369 - t14374 * t16005;
t13591 = (t14370 * t15968 - t16030) * t14372 + (-t14370 * t15974 - t16024) * t14369 - t14374 * t16006;
t13590 = (t14370 * t15969 - t16031) * t14372 + (-t14370 * t15975 - t16025) * t14369 - t14374 * t16007;
t13584 = -t13788 + t13790;
t13573 = -t14024 - t13790;
t13572 = -t14024 - t13788;
t13559 = t14032 * t16506 + t14034 * t16507 + t14372 * t16116;
t13558 = -t14031 * t16506 - t14033 * t16507 + t14369 * t16116;
t13527 = -t13788 - t13790;
t13452 = (t13604 * t14360 + t13814) * t14389 + t16730;
t13451 = (t13603 * t14359 + t13813) * t14389 + t16731;
t13450 = (t13602 * t14358 + t13812) * t14389 + t16732;
t13443 = (t13601 * t14357 + t13808) * t14389 + t16733;
t13442 = (t13600 * t14356 + t13807) * t14389 + t16734;
t13441 = (t13599 * t14355 + t13806) * t14389 + t16735;
t13416 = pkin(1) * t14079 + t14658 * qJ(3,1) + (-t13833 * t16555 + t14079 * t14387) * pkin(2) + (t14658 * t14388 + (t13833 * t14387 + t14079 * t16555) * t14385) * pkin(6);
t13415 = pkin(1) * t14082 + t14659 * qJ(3,2) + (-t13832 * t16555 + t14082 * t14387) * pkin(2) + (t14659 * t14388 + (t13832 * t14387 + t14082 * t16555) * t14385) * pkin(6);
t13414 = pkin(1) * t14081 + t14660 * qJ(3,3) + (-t13831 * t16555 + t14081 * t14387) * pkin(2) + (t14660 * t14388 + (t13831 * t14387 + t14081 * t16555) * t14385) * pkin(6);
t13413 = pkin(1) * t14075 + t14661 * qJ(3,1) + (-t13830 * t16555 + t14075 * t14387) * pkin(2) + (t14661 * t14388 + (t13830 * t14387 + t14075 * t16555) * t14385) * pkin(6);
t13412 = pkin(1) * t14083 + t14662 * qJ(3,2) + (-t13829 * t16555 + t14083 * t14387) * pkin(2) + (t14662 * t14388 + (t13829 * t14387 + t14083 * t16555) * t14385) * pkin(6);
t13411 = pkin(1) * t14080 + t14663 * qJ(3,3) + (-t13828 * t16555 + t14080 * t14387) * pkin(2) + (t14663 * t14388 + (t13828 * t14387 + t14080 * t16555) * t14385) * pkin(6);
t13410 = pkin(1) * t14064 + t14667 * qJ(3,4) + (-t13818 * t16555 + t14064 * t14387) * pkin(2) + (t14667 * t14388 + (t13818 * t14387 + t14064 * t16555) * t14385) * pkin(6);
t13409 = pkin(1) * t14062 + t14668 * qJ(3,5) + (-t13817 * t16555 + t14062 * t14387) * pkin(2) + (t14668 * t14388 + (t13817 * t14387 + t14062 * t16555) * t14385) * pkin(6);
t13408 = pkin(1) * t14060 + t14669 * qJ(3,6) + (-t13816 * t16555 + t14060 * t14387) * pkin(2) + (t14669 * t14388 + (t13816 * t14387 + t14060 * t16555) * t14385) * pkin(6);
t13407 = pkin(1) * t14065 + t14664 * qJ(3,4) + (-t13821 * t16555 + t14065 * t14387) * pkin(2) + (t14664 * t14388 + (t13821 * t14387 + t14065 * t16555) * t14385) * pkin(6);
t13406 = pkin(1) * t14063 + t14665 * qJ(3,5) + (-t13820 * t16555 + t14063 * t14387) * pkin(2) + (t14665 * t14388 + (t13820 * t14387 + t14063 * t16555) * t14385) * pkin(6);
t13405 = pkin(1) * t14061 + t14666 * qJ(3,6) + (-t13819 * t16555 + t14061 * t14387) * pkin(2) + (t14666 * t14388 + (t13819 * t14387 + t14061 * t16555) * t14385) * pkin(6);
t13404 = (-t13416 * t13595 - t13526 * t13900) * t14309;
t13403 = (-t13415 * t13594 - t13525 * t13899) * t14306;
t13402 = (-t13414 * t13593 - t13524 * t13898) * t14303;
t13401 = (-t13407 * t13592 - t13515 * t13897) * t14296;
t13400 = (-t13406 * t13591 - t13514 * t13896) * t14293;
t13399 = (-t13405 * t13590 - t13513 * t13895) * t14290;
t13398 = (-t13413 * t13595 + t13526 * t16755) * t14309;
t13397 = (-t13412 * t13594 + t13525 * t16756) * t14306;
t13396 = (-t13411 * t13593 + t13524 * t16757) * t14303;
t13395 = (-t13410 * t13592 + t13515 * t16758) * t14296;
t13394 = (-t13409 * t13591 + t13514 * t16759) * t14293;
t13393 = (-t13408 * t13590 + t13513 * t16801) * t14290;
t13392 = (t13452 * t16639 * t16822 - t13503 * t16370) * t14309;
t13391 = (t13451 * t16638 * t16821 - t13502 * t16371) * t14306;
t13390 = (t13450 * t16637 * t16820 - t13501 * t16369) * t14303;
t13389 = (t13442 * t16635 * t16818 - t13496 * t16373) * t14293;
t13388 = (t13441 * t16754 * t16817 - t13495 * t16374) * t14290;
t13387 = (t13443 * t16636 * t16819 - t13497 * t16372) * t14296;
t13386 = (t16639 * ((t13604 * t14354 - t16297) * t14389 - t16816) - ((t13848 * t14419 + t14176 * t15928) * t14389 + t16665) * t16755) * t16824;
t13385 = (((t13603 * t14353 - t16298) * t14389 - t16815) * t16638 - ((t13847 * t14417 + t14176 * t15930) * t14389 + t16666) * t16756) * t16826;
t13384 = (((t13602 * t14352 - t16299) * t14389 - t16814) * t16637 - ((t13846 * t14415 + t14176 * t15932) * t14389 + t16667) * t16757) * t16828;
t13383 = (t16636 * ((t13601 * t14351 - t16303) * t14389 - t16813) - t16758 * ((t13842 * t14395 + t14176 * t15940) * t14389 + t16671)) * t16830;
t13382 = (t16754 * ((t13599 * t14349 - t16305) * t14389 - t16811) - ((t13840 * t14391 + t14176 * t15944) * t14389 + t16673) * t16801) * t16834;
t13381 = (((t13600 * t14350 - t16304) * t14389 - t16812) * t16635 - ((t13841 * t14393 + t14176 * t15942) * t14389 + t16672) * t16759) * t16832;
t13380 = (-t13416 * (-t14371 * t16002 + (t14370 * t16020 + t15970) * t14372 + t14369 * (-t14370 * t16026 + t15964)) + t13413 * t13952) * t14309;
t13379 = (-t13415 * (-t14371 * t16003 + (t14370 * t16021 + t15971) * t14372 + t14369 * (-t14370 * t16027 + t15965)) + t13412 * t13951) * t14306;
t13378 = (-t13414 * (-t14371 * t16004 + (t14370 * t16022 + t15972) * t14372 + t14369 * (-t14370 * t16028 + t15966)) + t13411 * t13950) * t14303;
t13377 = (-t13407 * (-t14371 * t16005 + (t14370 * t16023 + t15973) * t14372 + t14369 * (-t14370 * t16029 + t15967)) + t13410 * t13949) * t14296;
t13376 = (-t13406 * (-t14371 * t16006 + (t14370 * t16024 + t15974) * t14372 + t14369 * (-t14370 * t16030 + t15968)) + t13409 * t13948) * t14293;
t13375 = (-t13405 * (-t14371 * t16007 + (t14370 * t16025 + t15975) * t14372 + t14369 * (-t14370 * t16031 + t15969)) + t13408 * t13947) * t14290;
t13374 = (t13449 * t16370 - t13452 * t16363) * t14309;
t13373 = (t13447 * t16371 - t13451 * t16364) * t14306;
t13372 = (t13445 * t16369 - t13450 * t16365) * t14303;
t13371 = (t13436 * t16374 - t13441 * t16368) * t14290;
t13370 = (t13440 * t16372 - t13443 * t16366) * t14296;
t13369 = (t13438 * t16373 - t13442 * t16367) * t14293;
t13368 = (t13431 * t16371 - t13432 * t16364) * t14306;
t13367 = (t13429 * t16369 - t13430 * t16365) * t14303;
t13366 = (t13433 * t16370 - t13434 * t16363) * t14309;
t13365 = (t13421 * t16372 - t13422 * t16366) * t14296;
t13364 = (t13419 * t16373 - t13420 * t16367) * t14293;
t13363 = (t13417 * t16374 - t13418 * t16368) * t14290;
t13128 = -0.2e1 * t13131;
t13126 = -0.2e1 * t13130;
t13124 = -0.2e1 * t13129;
t13116 = -0.2e1 * t14695;
t13115 = -0.2e1 * t14696;
t13114 = -0.2e1 * t14697;
t13113 = (-t14384 * t16441 + t16429) * t14310;
t13112 = (-t14383 * t16442 + t16430) * t14307;
t13111 = (-t14382 * t16443 + t16431) * t14304;
t13101 = 0.2e1 * t14695 - t16804;
t13100 = 0.2e1 * t14696 - t16803;
t13099 = 0.2e1 * t14697 - t16802;
t13086 = pkin(1) * t14822;
t13085 = pkin(1) * t14827;
t13084 = pkin(1) * t14832;
t13083 = (-t14381 * t16447 + t16435) * t14297;
t13082 = (-t14380 * t16448 + t16436) * t14294;
t13081 = (-t14379 * t16449 + t16437) * t14291;
t13014 = t13113 * t14378 + (-0.2e1 * t14800 * t15929 + t16441 * t16557 - t16429) * t14310;
t13013 = t13112 * t14378 + (-0.2e1 * t14805 * t15931 + t16442 * t16559 - t16430) * t14307;
t13012 = t13111 * t14378 + (-0.2e1 * t14810 * t15933 + t16443 * t16561 - t16431) * t14304;
t13011 = t13083 * t14378 + (t16447 * t16563 - 0.2e1 * t14547 - t16435) * t14297;
t13010 = t13082 * t14378 + (t16448 * t16565 - 0.2e1 * t14548 - t16436) * t14294;
t13009 = t13081 * t14378 + (t16449 * t16567 - 0.2e1 * t14549 - t16437) * t14291;
t12966 = t12978 * t14424 - t14418 * t15618;
t12965 = t14424 * t15618 + t16459;
t12964 = t12977 * t14422 - t14416 * t15619;
t12963 = t14422 * t15619 + t16460;
t12962 = t12976 * t14420 - t14414 * t15620;
t12961 = t14420 * t15620 + t16461;
t12960 = t12978 + t14813;
t12959 = t12977 + t14815;
t12958 = t12976 + t14817;
t12957 = t12972 * t14400 - t14394 * t15633;
t12956 = t12972 * t14394 + t14400 * t15633;
t12955 = t12971 * t14398 - t14392 * t15634;
t12954 = t12971 * t14392 + t14398 * t15634;
t12953 = t12970 * t14396 - t14390 * t15635;
t12952 = t12970 * t14390 + t14396 * t15635;
t12951 = t12972 + t14834;
t12950 = t12971 + t14836;
t12949 = t12970 + t14838;
t12942 = t12948 * t14378;
t12941 = t12947 * t14378;
t12940 = t12946 * t14378;
t12933 = t12939 * t14378;
t12932 = t12938 * t14378;
t12931 = t12937 * t14378;
t12930 = (t14386 * t14741 - t14017) * t14424 - t16462 - t16767;
t12929 = (t14386 * t14740 + t14016) * t14422 - t16463 - t16768;
t12928 = (t14386 * t14739 + t14015) * t14420 - t16464 - t16769;
t12927 = (t14386 * t14738 - t14011) * t14400 + t14121 - t16465 + t16562 * t15191;
t12926 = (t14386 * t14737 + t14010) * t14398 + t14120 - t16466 + t16564 * t15192;
t12925 = (t14386 * t14736 + t14008) * t14396 + t14119 - t16467 + t16566 * t15193;
t12912 = -t16493 / 0.2e1;
t12911 = -t16489 / 0.2e1;
t12910 = -t16485 / 0.2e1;
t12900 = t12903 * t14389 - t14540;
t12899 = t12902 * t14389 - t14616;
t12898 = t12901 * t14389 - t14617;
t12897 = qJ(3,1) * t14598 + t16549;
t12896 = qJ(3,2) * t14600 + t16550;
t12895 = qJ(3,3) * t14603 + t16551;
t12894 = (t14597 + t16468) * t14418;
t12893 = (t14599 + t16469) * t14416;
t12892 = (t14602 + t16470) * t14414;
t12882 = t12885 * t14389 + t16535 / 0.2e1 - t14854;
t12881 = t12884 * t14389 + t14345 / 0.2e1 - t14855;
t12880 = t12883 * t14389 + t14344 / 0.2e1 - t14856;
t12879 = (t14605 + t16471) * t14394;
t12878 = (t14607 + t16472) * t14392;
t12877 = (t14609 + t16473) * t14390;
t12876 = t12924 * t15738 + (0.4e1 * t14384 - 0.2e1) * t14801;
t12875 = t12923 * t15739 + (0.4e1 * t14383 - 0.2e1) * t14806;
t12874 = t12922 * t15740 + (0.4e1 * t14382 - 0.2e1) * t14811;
t12873 = (-t13122 / 0.2e1 + t12912) * t14386 + t13086;
t12872 = (-t13121 / 0.2e1 + t12911) * t14386 + t13085;
t12871 = (-t13120 / 0.2e1 + t12910) * t14386 + t13084;
t12870 = t12918 * t15741 + (0.4e1 * t14381 - 0.2e1) * t14822;
t12869 = t12917 * t15742 + (0.4e1 * t14380 - 0.2e1) * t14827;
t12868 = t12916 * t15743 + (0.4e1 * t14379 - 0.2e1) * t14832;
t12867 = (pkin(1) * t15116 - t16510 / 0.2e1 - t16522 / 0.2e1) * t14424 + t14540 * t14418 + t16528 + ((-t14384 + 0.1e1 / 0.2e1) * t15172 + t14631) * t14386;
t12866 = (pkin(1) * t15118 - t16512 / 0.2e1 - t16523 / 0.2e1) * t14422 + t14616 * t14416 + t16529 + ((-t14383 + 0.1e1 / 0.2e1) * t15171 + t14632) * t14386;
t12865 = (pkin(1) * t15120 - t16514 / 0.2e1 - t16524 / 0.2e1) * t14420 + t14617 * t14414 + t16530 + ((-t14382 + 0.1e1 / 0.2e1) * t15170 + t14633) * t14386;
t12864 = (-t16516 / 0.2e1 - t16525 / 0.2e1) * t14400 + (t14326 + t14854) * t14394 + (-t13308 / 0.2e1 - t13335 / 0.2e1 - t13347 / 0.2e1) * t14386 + t16531 + ((t15678 / 0.2e1 + t15681 / 0.2e1 + t16456 / 0.2e1) * t14386 + (pkin(1) * t15903 + (-t14381 + 0.1e1 / 0.2e1) * t16491) * t16447) * t14297;
t12863 = (-t16518 / 0.2e1 - t16526 / 0.2e1) * t14398 + (t14325 + t14855) * t14392 + (-t13307 / 0.2e1 - t13334 / 0.2e1 - t13346 / 0.2e1) * t14386 + t16532 + ((t15679 / 0.2e1 + t15682 / 0.2e1 + t16457 / 0.2e1) * t14386 + (pkin(1) * t15909 + (-t14380 + 0.1e1 / 0.2e1) * t16487) * t16448) * t14294;
t12862 = (-t16520 / 0.2e1 - t16527 / 0.2e1) * t14396 + (t14324 + t14856) * t14390 + (-t13306 / 0.2e1 - t13333 / 0.2e1 - t13345 / 0.2e1) * t14386 + t16533 + ((t15680 / 0.2e1 + t15683 / 0.2e1 + t16458 / 0.2e1) * t14386 + (pkin(1) * t15914 + (-t14379 + 0.1e1 / 0.2e1) * t16483) * t16449) * t14291;
t12861 = t16555 * t14529 + ((0.2e1 * t14638 - t15871) * t14387 + t13112 * t15703) * t14389 - t12959 * t15953 + t14416 * t15705;
t12860 = t16555 * t14530 + ((0.2e1 * t14641 - t15874) * t14387 + t13111 * t15703) * t14389 - t12958 * t15953 + t14414 * t15706;
t12859 = t16555 * t14528 + ((0.2e1 * t14637 - t15868) * t14387 + t13113 * t15703) * t14389 - t12960 * t15953 + t14418 * t15704;
t12858 = (t14641 - t15874 / 0.2e1) * t15224 + t12958 * t15703 + (t13111 * t15952 + t14530 + t16470) * t14387;
t12857 = (t14637 - t15868 / 0.2e1) * t15224 + t12960 * t15703 + (t13113 * t15952 + t14528 + t16468) * t14387;
t12856 = (t14638 - t15871 / 0.2e1) * t15224 + t12959 * t15703 + (t13112 * t15952 + t14529 + t16469) * t14387;
t12855 = t16555 * t14532 + ((0.2e1 * t14650 - t15895) * t14387 + t13082 * t15703) * t14389 - t12950 * t15953 + t14392 * t15708;
t12854 = t16555 * t14533 + ((0.2e1 * t14651 - t15898) * t14387 + t13081 * t15703) * t14389 - t12949 * t15953 + t14390 * t15709;
t12853 = t16555 * t14531 + ((0.2e1 * t14649 - t15892) * t14387 + t13083 * t15703) * t14389 - t12951 * t15953 + t14394 * t15707;
t12852 = (t14649 - t15892 / 0.2e1) * t15224 + t12951 * t15703 + (t13083 * t15952 + t14531 + t16471) * t14387;
t12851 = (t14651 - t15898 / 0.2e1) * t15224 + t12949 * t15703 + (t13081 * t15952 + t14533 + t16473) * t14387;
t12850 = (t14650 - t15895 / 0.2e1) * t15224 + t12950 * t15703 + (t13082 * t15952 + t14532 + t16472) * t14387;
t12849 = t13256 * t14378 + (-pkin(1) * t15868 - g(1) * t16070 + t14332 * t14419 - t14368) * t14389 + (-t16528 - t13738) * t14386 + ((-t12996 + (-qJ(3,1) * t15929 + t16536) * t15758 * t16426) * t16438 + (-pkin(1) * t15307 + (-t14378 * t14384 + t16557) * qJ(3,1)) * t16441 + t14689) * t14310 + t14922;
t12848 = t13254 * t14378 + (-pkin(1) * t15871 - g(1) * t16075 + t14331 * t14417 - t14367) * t14389 + (-t16529 - t13736) * t14386 + ((-t12995 + (-qJ(3,2) * t15931 + t16537) * t15758 * t16427) * t16439 + (-pkin(1) * t15308 + (-t14378 * t14383 + t16559) * qJ(3,2)) * t16442 + t14690) * t14307 + t14923;
t12847 = t13252 * t14378 + (-pkin(1) * t15874 - g(1) * t16080 + t14330 * t14415 - t14366) * t14389 + (-t16530 - t13734) * t14386 + ((-t12994 + (-qJ(3,3) * t15933 + t16538) * t15758 * t16428) * t16440 + (-pkin(1) * t15309 + (-t14378 * t14382 + t16561) * qJ(3,3)) * t16443 + t14691) * t14304 + t14924;
t12846 = t13238 * t14378 + (-g(1) * t16085 + t14329 * t14395 - t14348 - t15735) * t14389 + (-t16531 - t13731) * t14386 + ((-t12993 + (-qJ(3,4) * t15941 + t16539) * t15758 * t16432) * t16444 + (-pkin(1) * t15310 + (-t14378 * t14381 + t16563) * qJ(3,4)) * t16447 + t14692) * t14297 + t14919;
t12845 = t13236 * t14378 + (-g(1) * t16090 + t14328 * t14393 - t14347 - t15736) * t14389 + (-t16532 - t13729) * t14386 + ((-t12992 + (-qJ(3,5) * t15943 + t16540) * t15758 * t16433) * t16445 + (-pkin(1) * t15311 + (-t14378 * t14380 + t16565) * qJ(3,5)) * t16448 + t14693) * t14294 + t14920;
t12844 = t13234 * t14378 + (-g(1) * t16095 + t14327 * t14391 - t14346 - t15737) * t14389 + (-t16533 - t13727) * t14386 + ((-t12991 + (-qJ(3,6) * t15945 + t16541) * t15758 * t16434) * t16446 + (-pkin(1) * t15312 + (-t14378 * t14379 + t16567) * qJ(3,6)) * t16449 + t14694) * t14291 + t14921;
t12843 = ((t12908 * t14389 + t14017) * t14424 + t16767) * t14386 + t14424 * t14741 * t16117 - t12942 - t15916 * t16549 + t14904 + 0.2e1 * t16504;
t12842 = ((t12906 * t14389 - t14016) * t14422 + t16768) * t14386 + t14422 * t14740 * t16117 - t12941 - t15918 * t16550 + t14905 + 0.2e1 * t16500;
t12841 = ((t12904 * t14389 - t14015) * t14420 + t16769) * t14386 + t14420 * t14739 * t16117 - t12940 - t15920 * t16551 + t14906 + 0.2e1 * t16496;
t12840 = ((t12890 * t14389 + t14011) * t14400 - t14121 - pkin(1) * t13056) * t14386 + t14400 * t14738 * t16117 - t12933 - t15922 * t16552 + t14907 + 0.2e1 * t16492;
t12839 = ((t12888 * t14389 - t14010) * t14398 - t14120 - pkin(1) * t13055) * t14386 + t14398 * t14737 * t16117 - t12932 - t15924 * t16553 + t14908 + 0.2e1 * t16488;
t12838 = ((t12886 * t14389 - t14008) * t14396 - t14119 - pkin(1) * t13054) * t14386 + t14396 * t14736 * t16117 - t12931 - t15926 * t16554 + t14909 + 0.2e1 * t16484;
t12837 = t12897 * t14384 + ((-t13256 / 0.2e1 + t14631) * t14389 + (t12909 * t14386 + t13116) * t14418 + (t16511 / 0.2e1 - t14332 / 0.2e1) * t14419 + t14368 / 0.2e1) * t14424 - qJ(3,1) * (t12978 * t15916 + t14598) / 0.2e1;
t12836 = t12896 * t14383 + ((-t13254 / 0.2e1 + t14632) * t14389 + (t12907 * t14386 + t13115) * t14416 + (t16513 / 0.2e1 - t14331 / 0.2e1) * t14417 + t14367 / 0.2e1) * t14422 - qJ(3,2) * (t12977 * t15918 + t14600) / 0.2e1;
t12835 = t12895 * t14382 + ((-t13252 / 0.2e1 + t14633) * t14389 + (t12905 * t14386 + t13114) * t14414 + (t16515 / 0.2e1 - t14330 / 0.2e1) * t14415 + t14366 / 0.2e1) * t14420 - qJ(3,3) * (t12976 * t15920 + t14603) / 0.2e1;
t12834 = (-qJ(3,4) * t14634 - t16552 / 0.2e1) * t14381 + (t12873 * t14394 + (-t16517 / 0.4e1 + t14329 / 0.4e1) * t14395 - t14348 / 0.4e1 + (t13238 / 0.4e1 + t13308 / 0.4e1 + t13335 / 0.4e1 + t13347 / 0.4e1 + (-t15678 / 0.4e1 - t15681 / 0.4e1 - t16456 / 0.4e1) * t14297) * t14389) * t14400 + (t14634 + t12972 * t15922 / 0.2e1) * qJ(3,4) / 0.2e1;
t12833 = (-qJ(3,5) * t14635 - t16553 / 0.2e1) * t14380 + (t12872 * t14392 + (-t16519 / 0.4e1 + t14328 / 0.4e1) * t14393 - t14347 / 0.4e1 + (t13236 / 0.4e1 + t13307 / 0.4e1 + t13334 / 0.4e1 + t13346 / 0.4e1 + (-t15679 / 0.4e1 - t15682 / 0.4e1 - t16457 / 0.4e1) * t14294) * t14389) * t14398 + (t14635 + t12971 * t15924 / 0.2e1) * qJ(3,5) / 0.2e1;
t12832 = (-qJ(3,6) * t14636 - t16554 / 0.2e1) * t14379 + (t12871 * t14390 + (-t16521 / 0.4e1 + t14327 / 0.4e1) * t14391 - t14346 / 0.4e1 + (t13234 / 0.4e1 + t13306 / 0.4e1 + t13333 / 0.4e1 + t13345 / 0.4e1 + (-t15680 / 0.4e1 - t15683 / 0.4e1 - t16458 / 0.4e1) * t14291) * t14389) * t14396 + qJ(3,6) * (t14636 + t12970 * t15926 / 0.2e1) / 0.2e1;
t12831 = t14384 * t15172 * t15805 + (-pkin(1) * t14198 + 0.2e1 * t12900 * t16503 + t14885 * t15116) * t14424 + (-qJ(3,1) * t14124 - pkin(1) * t15232 - (-qJ(3,1) * t16441 + t14504) * t16543) * t14386 - 0.2e1 * t12900 * t16536 - t12945 * t14378 + t14463 * t12978 + t12945;
t12830 = t14382 * t15170 * t15805 + (-pkin(1) * t14196 + 0.2e1 * t12898 * t16495 + t14887 * t15120) * t14420 + (-qJ(3,3) * t14122 - pkin(1) * t15234 - (-qJ(3,3) * t16443 + t14506) * t16545) * t14386 - 0.2e1 * t12898 * t16538 - t12943 * t14378 + t14463 * t12976 + t12943;
t12829 = t14383 * t15171 * t15805 + (-pkin(1) * t14197 + 0.2e1 * t12899 * t16499 + t14886 * t15118) * t14422 + (-qJ(3,2) * t14123 - pkin(1) * t15233 - (-qJ(3,2) * t16442 + t14505) * t16544) * t14386 - 0.2e1 * t12899 * t16537 - t12944 * t14378 + t14463 * t12977 + t12944;
t12828 = t15192 * t15956 * t16593 + (-pkin(1) * t14194 + 0.2e1 * t12881 * t16487 + t14889 * t15145) * t14398 + (-qJ(3,5) * t14120 - pkin(1) * t15236 - (-qJ(3,5) * t16448 + t14508) * t16547) * t14386 - 0.2e1 * t12881 * t16540 - t12935 * t14378 + t14463 * t12971 + t12935;
t12827 = t15193 * t15957 * t16591 + (-pkin(1) * t14193 + 0.2e1 * t12880 * t16483 + t14890 * t15147) * t14396 + (-qJ(3,6) * t14119 - pkin(1) * t15237 - (-qJ(3,6) * t16449 + t14509) * t16548) * t14386 - 0.2e1 * t12880 * t16541 - t12934 * t14378 + t14463 * t12970 + t12934;
t12826 = t15191 * t15955 * t16595 + (-pkin(1) * t14195 + 0.2e1 * t12882 * t16491 + t14888 * t15143) * t14400 + (-qJ(3,4) * t14121 - pkin(1) * t15235 - (-qJ(3,4) * t16447 + t14507) * t16546) * t14386 - 0.2e1 * t12882 * t16539 - t12936 * t14378 + t14463 * t12972 + t12936;
t12825 = (-0.2e1 * t12897 * t15916 - t12942 + t16504) * t14424 + t13101 * t14389 + t14922 * t14418 + ((-t13131 / 0.2e1 - t16505 / 0.2e1) * t14384 * t16581 - pkin(1) * t16459 - t14048) * t14386 + (t14384 * t14800 * t16729 + (t13293 * t15745 - t16429 * t16542) * t14424 + (qJ(3,1) * t16429 * t16586 + t14504) * t14418) * t14310;
t12824 = (-0.2e1 * t12896 * t15918 - t12941 + t16500) * t14422 + t13100 * t14389 + t14923 * t14416 + ((-t13130 / 0.2e1 - t16501 / 0.2e1) * t14383 * t16581 - pkin(1) * t16460 - t14046) * t14386 + (t14383 * t14805 * t16729 + (t13292 * t15746 - t16430 * t16542) * t14422 + (qJ(3,2) * t16430 * t16586 + t14505) * t14416) * t14307;
t12823 = (-0.2e1 * t12895 * t15920 - t12940 + t16496) * t14420 + t13099 * t14389 + t14924 * t14414 + ((-t13129 / 0.2e1 - t16497 / 0.2e1) * t14382 * t16581 - pkin(1) * t16461 - t14044) * t14386 + (t14382 * t14810 * t16729 + (t13291 * t15747 - t16431 * t16542) * t14420 + (qJ(3,3) * t16431 * t16586 + t14506) * t14414) * t14304;
t12822 = (-t12933 + t16492) * t14400 + (-t14386 * t16531 + t14919) * t14394 - t14041 * t14386 + (-0.4e1 * t12873 * t14381 + 0.2e1 * t13086 + (-t16764 - 0.2e1 * t15735) * t14394) * t14389 + ((t13281 * t15748 - t16435 * t16542) * t14400 + ((t16435 * t16586 - 0.4e1 * t14547) * qJ(3,4) + t14507) * t14394) * t14297;
t12821 = (-t12932 + t16488) * t14398 + (-t14386 * t16532 + t14920) * t14392 - t14039 * t14386 + (-0.4e1 * t12872 * t14380 + 0.2e1 * t13085 + (-t16765 - 0.2e1 * t15736) * t14392) * t14389 + ((t13280 * t15749 - t16436 * t16542) * t14398 + ((t16436 * t16586 - 0.4e1 * t14548) * qJ(3,5) + t14508) * t14392) * t14294;
t12820 = (-t12931 + t16484) * t14396 + (-t14386 * t16533 + t14921) * t14390 - t14037 * t14386 + (-0.4e1 * t12871 * t14379 + 0.2e1 * t13084 + (-t16766 - 0.2e1 * t15737) * t14390) * t14389 + ((t13279 * t15750 - t16437 * t16542) * t14396 + ((t16437 * t16586 - 0.4e1 * t14549) * qJ(3,6) + t14509) * t14390) * t14291;
t12819 = t15223 * t16474 + t12867 * t16481 + (-t12924 * t14189 + t12930 * t14389 + t15216) * t14387;
t12818 = t16555 * t15216 + (t12930 * t16555 + t16474 * t16583) * t14389 - t14189 * t15704 + t12867 * t16723;
t12817 = t15223 * t16475 + t12866 * t16481 + (-t12923 * t14188 + t12929 * t14389 + t15217) * t14387;
t12816 = t16555 * t15217 + (t12929 * t16555 + t16475 * t16583) * t14389 - t14188 * t15705 + t12866 * t16723;
t12815 = t15223 * t16476 + t12865 * t16481 + (-t12922 * t14187 + t12928 * t14389 + t15218) * t14387;
t12814 = t16555 * t15218 + (t12928 * t16555 + t16476 * t16583) * t14389 - t14187 * t15706 + t12865 * t16723;
t12813 = t15223 * t16477 + t12864 * t16481 + (-t12918 * t14172 + t12927 * t14389 + t15219) * t14387;
t12812 = t16555 * t15219 + (t12927 * t16555 + t16477 * t16583) * t14389 - t14172 * t15707 + t12864 * t16723;
t12811 = t15223 * t16478 + t12863 * t16481 + (-t12917 * t14171 + t12926 * t14389 + t15220) * t14387;
t12810 = t16555 * t15220 + (t12926 * t16555 + t16478 * t16583) * t14389 - t14171 * t15708 + t12863 * t16723;
t12809 = t15223 * t16479 + t12862 * t16481 + (-t12916 * t14170 + t12925 * t14389 + t15221) * t14387;
t12808 = t16555 * t15221 + (t12925 * t16555 + t16479 * t16583) * t14389 - t14170 * t15709 + t12862 * t16723;
t12807 = (t12908 * t14384 - 0.4e1 * t14637 * t16502) * t14378 + ((-pkin(1) * t15618 + t16462) * t14424 + (-0.2e1 * t14870 - t16528) * t14418 - t14048) * t14389 + (t14639 * t16728 + t13128 - 0.2e1 * t16505) * t14384 + (qJ(3,1) * t14716 + t12924 * t16542) * t15738 + (t13116 + t16804) * t14386 + t12908;
t12806 = (t12906 * t14383 - 0.4e1 * t14638 * t16498) * t14378 + ((-pkin(1) * t15619 + t16463) * t14422 + (-0.2e1 * t14869 - t16529) * t14416 - t14046) * t14389 + (t14640 * t16728 + t13126 - 0.2e1 * t16501) * t14383 + (qJ(3,2) * t14717 + t12923 * t16542) * t15739 + (t13115 + t16803) * t14386 + t12906;
t12805 = (t12904 * t14382 - 0.4e1 * t14641 * t16494) * t14378 + ((-pkin(1) * t15620 + t16464) * t14420 + (-0.2e1 * t14868 - t16530) * t14414 - t14044) * t14389 + (t14642 * t16728 + t13124 - 0.2e1 * t16497) * t14382 + (qJ(3,3) * t14718 + t12922 * t16542) * t15740 + (t13114 + t16802) * t14386 + t12904;
t12804 = (t12890 * t14381 - 0.4e1 * t14649 * t16490) * t14378 + ((-pkin(1) * t15633 + t16465) * t14400 + (-0.2e1 * t14857 - t16531) * t14394 - t14041) * t14389 + (t14634 * t16601 - t12891) * t16724 + (qJ(3,4) * t14719 + t12918 * t16542) * t15741 + (-0.2e1 * t13086 + t16259) * t14386 + t12890;
t12803 = (t12888 * t14380 - 0.4e1 * t14650 * t16486) * t14378 + ((-pkin(1) * t15634 + t16466) * t14398 + (-0.2e1 * t14858 - t16532) * t14392 - t14039) * t14389 + (t14635 * t16601 - t12889) * t16725 + (qJ(3,5) * t14720 + t12917 * t16542) * t15742 + (-0.2e1 * t13085 + t16254) * t14386 + t12888;
t12802 = (t12886 * t14379 - 0.4e1 * t14651 * t16482) * t14378 + ((-pkin(1) * t15635 + t16467) * t14396 + (-0.2e1 * t14859 - t16533) * t14390 - t14037) * t14389 + (t14636 * t16601 - t12887) * t16726 + (qJ(3,6) * t14721 + t12916 * t16542) * t15743 + (-0.2e1 * t13084 + t16257) * t14386 + t12886;
t12801 = (t14885 * t12924 + (t13293 * t16568 + t15607 * t16728) * qJ(3,1) * t15639) * t14384 + ((t12945 * t14386 - pkin(1) * (t13256 + t15232) - t14504 * t16543) * t14389 + t15729 * t12908 + pkin(1) * t16761 - 0.2e1 * (t15958 + (pkin(1) - qJ(3,1)) * (pkin(1) + qJ(3,1))) * t14637) * t14424 - (((t14870 + t16528) * t14418 + t14048) * t14389 + t13101 * t14386 + t13128 - t16505) * qJ(3,1);
t12800 = (t14886 * t12923 + (t13292 * t16568 + t15611 * t16728) * qJ(3,2) * t15644) * t14383 + ((t12944 * t14386 - pkin(1) * (t13254 + t15233) - t14505 * t16544) * t14389 + t15730 * t12906 + t16762 * pkin(1) - 0.2e1 * (t15959 + (pkin(1) - qJ(3,2)) * (pkin(1) + qJ(3,2))) * t14638) * t14422 - qJ(3,2) * (((t14869 + t16529) * t14416 + t14046) * t14389 + t13100 * t14386 + t13126 - t16501);
t12799 = (t14887 * t12922 + (t13291 * t16568 + t15615 * t16728) * qJ(3,3) * t15649) * t14382 + ((t12943 * t14386 - pkin(1) * (t13252 + t15234) - t14506 * t16545) * t14389 + t15731 * t12904 + pkin(1) * t16763 - 0.2e1 * (t15960 + (pkin(1) - qJ(3,3)) * (pkin(1) + qJ(3,3))) * t14641) * t14420 - (((t14868 + t16530) * t14414 + t14044) * t14389 + t13099 * t14386 + t13124 - t16497) * qJ(3,3);
t12798 = (t14888 * t12918 + (t13281 * t16568 + t15622 * t16728) * qJ(3,4) * t15660) * t14381 + ((t12936 * t14386 - pkin(1) * (t13238 + t15235) - t14507 * t16546) * t14389 + t15732 * t12890 + t16764 * pkin(1) - 0.2e1 * (t15961 + (pkin(1) - qJ(3,4)) * (pkin(1) + qJ(3,4))) * t14649) * t14400 + ((t14326 + t16155 / 0.2e1 + (t14857 / 0.2e1 + t16531 / 0.2e1) * t14394) * t14389 + (((-t16517 / 0.2e1 + t14329 / 0.2e1) * t14395 - t14348 / 0.2e1) * t14394 + t13086) * t14386 - t13122 + t12912) * t16595;
t12797 = (t14889 * t12917 + (t13280 * t16568 + t15626 * t16728) * qJ(3,5) * t15665) * t14380 + ((t12935 * t14386 - pkin(1) * (t13236 + t15236) - t14508 * t16547) * t14389 + t15733 * t12888 + pkin(1) * t16765 - 0.2e1 * (t15962 + (pkin(1) - qJ(3,5)) * (pkin(1) + qJ(3,5))) * t14650) * t14398 + ((t14325 + t16156 / 0.2e1 + (t14858 / 0.2e1 + t16532 / 0.2e1) * t14392) * t14389 + (((-t16519 / 0.2e1 + t14328 / 0.2e1) * t14393 - t14347 / 0.2e1) * t14392 + t13085) * t14386 - t13121 + t12911) * t16593;
t12796 = (t14890 * t12916 + (t13279 * t16568 + t15630 * t16728) * qJ(3,6) * t15670) * t14379 + ((t12934 * t14386 - pkin(1) * (t13234 + t15237) - t14509 * t16548) * t14389 + t15734 * t12886 + pkin(1) * t16766 - 0.2e1 * (t15963 + (pkin(1) - qJ(3,6)) * (pkin(1) + qJ(3,6))) * t14651) * t14396 + ((t14324 + t16157 / 0.2e1 + (t14859 / 0.2e1 + t16533 / 0.2e1) * t14390) * t14389 + (((-t16521 / 0.2e1 + t14327 / 0.2e1) * t14391 - t14346 / 0.2e1) * t14390 + t13084) * t14386 - t13120 + t12910) * t16591;
t12795 = t12825 * t14387 + t12837 * t16481;
t12794 = t12825 * t16555 + t12837 * t16723;
t12793 = t12824 * t14387 + t12836 * t16481;
t12792 = t12824 * t16555 + t12836 * t16723;
t12791 = t12823 * t14387 + t12835 * t16481;
t12790 = t12823 * t16555 + t12835 * t16723;
t12789 = t12822 * t14387 + t12834 * t16480;
t12788 = t12822 * t16555 + t12834 * t16584;
t12787 = t12821 * t14387 + t12833 * t16480;
t12786 = t12821 * t16555 + t12833 * t16584;
t12785 = t12820 * t14387 + t12832 * t16480;
t12784 = t12820 * t16555 + t12832 * t16584;
t1 = [(t12916 * t15581 + t12917 * t15579 + t12918 * t15577 + t12922 * t15575 + t12923 * t15573 + t12924 * t15571) * MDP(1) + (t13435 * t15549 + t13437 * t15545 + t13439 * t15541 + t13444 * t15537 + t13446 * t15533 + t13448 * t15529) * MDP(2) + (t13435 * t15548 + t13437 * t15544 + t13439 * t15540 + t13444 * t15536 + t13446 * t15532 + t13448 * t15528) * MDP(3) + (t12877 * t15581 + t12878 * t15579 + t12879 * t15577 + t12892 * t15575 + t12893 * t15573 + t12894 * t15571 - t13418 * t16833 - t13420 * t16831 - t13422 * t16829 - t13430 * t16827 - t13432 * t16825 - t13434 * t16823) * MDP(4) + ((t12876 * t16388 - t13059 * t16399) * t14309 + (t12875 * t16390 - t13058 * t16401) * t14306 + (t12874 * t16392 - t13057 * t16403) * t14303 + (t12870 * t16394 - t13056 * t16405) * t14296 + (t12869 * t16396 - t13055 * t16407) * t14293 + (t12868 * t16398 - t13054 * t16409) * t14290) * MDP(5) + ((t12965 * t16388 + t13434 * t15685) * t14309 + (t12963 * t16390 + t13432 * t15687) * t14306 + (t12961 * t16392 + t13430 * t15689) * t14303 + (t12956 * t16394 + t13422 * t15691) * t14296 + (t12954 * t16396 + t13420 * t15693) * t14293 + (t12952 * t16398 + t13418 * t15695) * t14290) * MDP(6) + ((t12966 * t16388 + t13434 * t15684) * t14309 + (t12964 * t16390 + t13432 * t15686) * t14306 + (t12962 * t16392 + t13430 * t15688) * t14303 + (t12957 * t16394 + t13422 * t15690) * t14296 + (t12955 * t16396 + t13420 * t15692) * t14293 + (t12953 * t16398 + t13418 * t15694) * t14290) * MDP(7) + (t12970 * t15592 + t12971 * t15590 + t12972 * t15588 + t12976 * t15586 + t12977 * t15584 + t12978 * t15582) * MDP(8) + ((t13434 * t16335 + t13448 * t15530) * t14309 + (t13432 * t16338 + t13446 * t15534) * t14306 + (t13430 * t16341 + t13444 * t15538) * t14303 + (t13422 * t16347 + t13439 * t15542) * t14296 + (t13420 * t16350 + t13437 * t15546) * t14293 + (t13418 * t16353 + t13435 * t15550) * t14290) * MDP(9) + ((t13434 * t16334 - t13448 * t15531) * t14309 + (t13432 * t16337 - t13446 * t15535) * t14306 + (t13430 * t16340 - t13444 * t15539) * t14303 + (t13422 * t16346 - t13439 * t15543) * t14296 + (t13420 * t16349 - t13437 * t15547) * t14293 + (t13418 * t16352 - t13435 * t15551) * t14290) * MDP(10) + ((t12794 * t16388 + t12818 * t16399 + t12859 * t13464) * t14309 + (t12792 * t16390 + t12816 * t16401 + t12861 * t13463) * t14306 + (t12790 * t16392 + t12814 * t16403 + t12860 * t13462) * t14303 + (t12788 * t16394 + t12812 * t16405 + t12853 * t13458) * t14296 + (t12786 * t16396 + t12810 * t16407 + t12855 * t13457) * t14293 + (t12784 * t16398 + t12808 * t16409 + t12854 * t13456) * t14290) * MDP(11) + ((t12795 * t16388 + t12819 * t16399 + t12857 * t13464) * t14309 + (t12793 * t16390 + t12817 * t16401 + t12856 * t13463) * t14306 + (t12791 * t16392 + t12815 * t16403 + t12858 * t13462) * t14303 + (t12789 * t16394 + t12813 * t16405 + t12852 * t13458) * t14296 + (t12787 * t16396 + t12811 * t16407 + t12850 * t13457) * t14293 + (t12785 * t16398 + t12809 * t16409 + t12851 * t13456) * t14290) * MDP(12) + ((t12807 * t16388 + t12843 * t16399 + t13014 * t13464) * t14309 + (t12806 * t16390 + t12842 * t16401 + t13013 * t13463) * t14306 + (t12805 * t16392 + t12841 * t16403 + t13012 * t13462) * t14303 + (t12804 * t16394 + t12840 * t16405 + t13011 * t13458) * t14296 + (t12803 * t16396 + t12839 * t16407 + t13010 * t13457) * t14293 + (t12802 * t16398 + t12838 * t16409 + t13009 * t13456) * t14290) * MDP(13) + ((t12801 * t16388 + t12831 * t16399 + t12849 * t13464) * t14309 + (t12800 * t16390 + t12829 * t16401 + t12848 * t13463) * t14306 + (t12799 * t16392 + t12830 * t16403 + t12847 * t13462) * t14303 + (t12798 * t16394 + t12826 * t16405 + t12846 * t13458) * t14296 + (t12797 * t16396 + t12828 * t16407 + t12845 * t13457) * t14293 + (t12796 * t16398 + t12827 * t16409 + t12844 * t13456) * t14290) * MDP(14) + (-t13517 * t14370 + (t13572 * t14372 - t14369 * t16696) * t14373) * MDP(21) + (t16694 * t14370 + (-t13573 * t14369 - t13582 * t14372) * t14373) * MDP(22) + (t13527 * t14370 + (-t13523 * t14369 + t14372 * t16695) * t14373) * MDP(23) + (t13815 * t14370 + (t13558 * t14369 + t13559 * t14372) * t14373) * MDP(24); (t12916 * t15580 + t12917 * t15578 + t12918 * t15576 + t12922 * t15574 + t12923 * t15572 + t12924 * t15570) * MDP(1) + (t13436 * t15549 + t13438 * t15545 + t13440 * t15541 + t13445 * t15537 + t13447 * t15533 + t13449 * t15529) * MDP(2) + (t13436 * t15548 + t13438 * t15544 + t13440 * t15540 + t13445 * t15536 + t13447 * t15532 + t13449 * t15528) * MDP(3) + (t12877 * t15580 + t12878 * t15578 + t12879 * t15576 + t12892 * t15574 + t12893 * t15572 + t12894 * t15570 - t13417 * t16833 - t13419 * t16831 - t13421 * t16829 - t13429 * t16827 - t13431 * t16825 - t13433 * t16823) * MDP(4) + ((t12876 * t16387 - t13059 * t16400) * t14309 + (t12875 * t16389 - t13058 * t16402) * t14306 + (t12874 * t16391 - t13057 * t16404) * t14303 + (t12870 * t16393 - t13056 * t16406) * t14296 + (t12869 * t16395 - t13055 * t16408) * t14293 + (t12868 * t16397 - t13054 * t16410) * t14290) * MDP(5) + ((t12965 * t16387 + t13433 * t15685) * t14309 + (t12963 * t16389 + t13431 * t15687) * t14306 + (t12961 * t16391 + t13429 * t15689) * t14303 + (t12956 * t16393 + t13421 * t15691) * t14296 + (t12954 * t16395 + t13419 * t15693) * t14293 + (t12952 * t16397 + t13417 * t15695) * t14290) * MDP(6) + ((t12966 * t16387 + t13433 * t15684) * t14309 + (t12964 * t16389 + t13431 * t15686) * t14306 + (t12962 * t16391 + t13429 * t15688) * t14303 + (t12957 * t16393 + t13421 * t15690) * t14296 + (t12955 * t16395 + t13419 * t15692) * t14293 + (t12953 * t16397 + t13417 * t15694) * t14290) * MDP(7) + (t12970 * t15593 + t12971 * t15591 + t12972 * t15589 + t12976 * t15587 + t12977 * t15585 + t12978 * t15583) * MDP(8) + ((t13433 * t16335 + t13449 * t15530) * t14309 + (t13431 * t16338 + t13447 * t15534) * t14306 + (t13429 * t16341 + t13445 * t15538) * t14303 + (t13421 * t16347 + t13440 * t15542) * t14296 + (t13419 * t16350 + t13438 * t15546) * t14293 + (t13417 * t16353 + t13436 * t15550) * t14290) * MDP(9) + ((t13433 * t16334 - t13449 * t15531) * t14309 + (t13431 * t16337 - t13447 * t15535) * t14306 + (t13429 * t16340 - t13445 * t15539) * t14303 + (t13421 * t16346 - t13440 * t15543) * t14296 + (t13419 * t16349 - t13438 * t15547) * t14293 + (t13417 * t16352 - t13436 * t15551) * t14290) * MDP(10) + ((t12794 * t16387 + t12818 * t16400 + t12859 * t13461) * t14309 + (t12792 * t16389 + t12816 * t16402 + t12861 * t13460) * t14306 + (t12790 * t16391 + t12814 * t16404 + t12860 * t13459) * t14303 + (t12788 * t16393 + t12812 * t16406 + t12853 * t13455) * t14296 + (t12786 * t16395 + t12810 * t16408 + t12855 * t13454) * t14293 + (t12784 * t16397 + t12808 * t16410 + t12854 * t13453) * t14290) * MDP(11) + ((t12795 * t16387 + t12819 * t16400 + t12857 * t13461) * t14309 + (t12793 * t16389 + t12817 * t16402 + t12856 * t13460) * t14306 + (t12791 * t16391 + t12815 * t16404 + t12858 * t13459) * t14303 + (t12789 * t16393 + t12813 * t16406 + t12852 * t13455) * t14296 + (t12787 * t16395 + t12811 * t16408 + t12850 * t13454) * t14293 + (t12785 * t16397 + t12809 * t16410 + t12851 * t13453) * t14290) * MDP(12) + ((t12807 * t16387 + t12843 * t16400 + t13014 * t13461) * t14309 + (t12806 * t16389 + t12842 * t16402 + t13013 * t13460) * t14306 + (t12805 * t16391 + t12841 * t16404 + t13012 * t13459) * t14303 + (t12804 * t16393 + t12840 * t16406 + t13011 * t13455) * t14296 + (t12803 * t16395 + t12839 * t16408 + t13010 * t13454) * t14293 + (t12802 * t16397 + t12838 * t16410 + t13009 * t13453) * t14290) * MDP(13) + ((t12801 * t16387 + t12831 * t16400 + t12849 * t13461) * t14309 + (t12800 * t16389 + t12829 * t16402 + t12848 * t13460) * t14306 + (t12799 * t16391 + t12830 * t16404 + t12847 * t13459) * t14303 + (t12798 * t16393 + t12826 * t16406 + t12846 * t13455) * t14296 + (t12797 * t16395 + t12828 * t16408 + t12845 * t13454) * t14293 + (t12796 * t16397 + t12827 * t16410 + t12844 * t13453) * t14290) * MDP(14) + (t13517 * t16033 + t13572 * t14032 + t14031 * t16696) * MDP(21) + (t13573 * t14031 - t13582 * t14032 - t16033 * t16694) * MDP(22) + (t13523 * t14031 - t13527 * t16033 + t14032 * t16695) * MDP(23) + (-t13558 * t14031 + t13559 * t14032 - t13815 * t16033) * MDP(24); (t12916 * t15569 + t12917 * t15568 + t12918 * t15567 + t12922 * t15566 + t12923 * t15565 + t12924 * t15564) * MDP(1) + (t13495 * t15549 + t13496 * t15545 + t13497 * t15541 + t13501 * t15537 + t13502 * t15533 + t13503 * t15529) * MDP(2) + (t13495 * t15548 + t13496 * t15544 + t13497 * t15540 + t13501 * t15536 + t13502 * t15532 + t13503 * t15528) * MDP(3) + (t12877 * t15569 + t12878 * t15568 + t12879 * t15567 + t12892 * t15566 + t12893 * t15565 + t12894 * t15564 + (t14292 * t15563 * t15676 + t14295 * t15561 * t15674 + t14298 * t15559 * t15672 + t14305 * t15557 * t15655 + t14308 * t15555 * t15653 + t14311 * t15553 * t15651) * t14386) * MDP(4) + (t12868 * t15569 + t12869 * t15568 + t12870 * t15567 + t12874 * t15566 + t12875 * t15565 + t12876 * t15564 + (t13054 * t15069 + t13055 * t15068 + t13056 * t15067 + t13057 * t15066 + t13058 * t15065 + t13059 * t15064) * t14386) * MDP(5) + (t12952 * t15569 + t12954 * t15568 + t12956 * t15567 + t12961 * t15566 + t12963 * t15565 + t12965 * t15564 + (-t15064 * t16468 - t15065 * t16469 - t15066 * t16470 - t15067 * t16471 - t15068 * t16472 - t15069 * t16473) * t14386) * MDP(6) + (t12953 * t15569 + t12955 * t15568 + t12957 * t15567 + t12962 * t15566 + t12964 * t15565 + t12966 * t15564 + (-t12916 * t14290 * t15563 - t12917 * t14293 * t15561 - t12918 * t14296 * t15559 - t12922 * t14303 * t15557 - t12923 * t14306 * t15555 - t12924 * t14309 * t15553) * t14386) * MDP(7) + (-t12970 * t15069 - t12971 * t15068 - t12972 * t15067 - t12976 * t15066 - t12977 * t15065 - t12978 * t15064) * t14386 * MDP(8) + (t14396 * t15075 + t14398 * t15074 + t14400 * t15073 + t14420 * t15072 + t14422 * t15071 + t14424 * t15070 + (-t13727 * t15069 - t13729 * t15068 - t13731 * t15067 - t13734 * t15066 - t13736 * t15065 - t13738 * t15064) * t14386) * MDP(9) + (-t14390 * t15075 - t14392 * t15074 - t14394 * t15073 - t14414 * t15072 - t14416 * t15071 - t14418 * t15070 + (-t13728 * t15069 - t13730 * t15068 - t13732 * t15067 - t13735 * t15066 - t13737 * t15065 - t13739 * t15064) * t14386) * MDP(10) + ((t12794 * t16375 + t12859 * t13526) * t14309 + (t12792 * t16376 + t12861 * t13525) * t14306 + (t12790 * t16377 + t12860 * t13524) * t14303 + (t12788 * t16378 + t12853 * t13515) * t14296 + (t12786 * t16379 + t12855 * t13514) * t14293 + (t12784 * t16380 + t12854 * t13513) * t14290 + (-t12808 * t15069 - t12810 * t15068 - t12812 * t15067 - t12814 * t15066 - t12816 * t15065 - t12818 * t15064) * t14386) * MDP(11) + ((t12795 * t16375 + t12857 * t13526) * t14309 + (t12793 * t16376 + t12856 * t13525) * t14306 + (t12791 * t16377 + t12858 * t13524) * t14303 + (t12789 * t16378 + t12852 * t13515) * t14296 + (t12787 * t16379 + t12850 * t13514) * t14293 + (t12785 * t16380 + t12851 * t13513) * t14290 + (-t12809 * t15069 - t12811 * t15068 - t12813 * t15067 - t12815 * t15066 - t12817 * t15065 - t12819 * t15064) * t14386) * MDP(12) + ((t12807 * t16375 + t13014 * t13526) * t14309 + (t12806 * t16376 + t13013 * t13525) * t14306 + (t12805 * t16377 + t13012 * t13524) * t14303 + (t12804 * t16378 + t13011 * t13515) * t14296 + (t12803 * t16379 + t13010 * t13514) * t14293 + (t12802 * t16380 + t13009 * t13513) * t14290 + (-t12838 * t15069 - t12839 * t15068 - t12840 * t15067 - t12841 * t15066 - t12842 * t15065 - t12843 * t15064) * t14386) * MDP(13) + ((t12801 * t16375 + t12849 * t13526) * t14309 + (t12800 * t16376 + t12848 * t13525) * t14306 + (t12799 * t16377 + t12847 * t13524) * t14303 + (t12798 * t16378 + t12846 * t13515) * t14296 + (t12797 * t16379 + t12845 * t13514) * t14293 + (t12796 * t16380 + t12844 * t13513) * t14290 + (-t12826 * t15067 - t12827 * t15069 - t12828 * t15068 - t12829 * t15065 - t12830 * t15066 - t12831 * t15064) * t14386) * MDP(14) + (-t13517 * t16011 + t13572 * t14034 + t14033 * t16696) * MDP(21) + (t13573 * t14033 - t13582 * t14034 + t16011 * t16694) * MDP(22) + (t13523 * t14033 + t13527 * t16011 + t14034 * t16695) * MDP(23) + (-t13558 * t14033 + t13559 * t14034 + t13815 * t16011) * MDP(24); (t12916 * t13382 + t12917 * t13381 + t12918 * t13383 + t12922 * t13384 + t12923 * t13385 + t12924 * t13386) * MDP(1) + (t13381 * t16765 + t13382 * t16766 + t13383 * t16764 + t13384 * t16763 + t13385 * t16762 + t13386 * t16761) * MDP(2) + (t13381 * t14039 + t13382 * t14037 + t13383 * t14041 + t13384 * t14044 + t13385 * t14046 + t13386 * t14048) * MDP(3) + (t13382 * t12877 + t13381 * t12878 + t13383 * t12879 + t13384 * t12892 + t13385 * t12893 + t13386 * t12894 - t13294 * t16833 - t13295 * t16831 - t13296 * t16829 - t13297 * t16827 - t13298 * t16825 - t13299 * t16823) * MDP(4) + (t13382 * t12868 + t13381 * t12869 + t13383 * t12870 + t13384 * t12874 + t13385 * t12875 + t13386 * t12876 - t13054 * t15605 - t13055 * t15604 - t13056 * t15603 - t13057 * t15602 - t13058 * t15601 - t13059 * t15600) * MDP(5) + (t13382 * t12952 + t13381 * t12954 + t13383 * t12956 + t13384 * t12961 + t13385 * t12963 + t13386 * t12965 + t13294 * t15159 + t13295 * t15157 + t13296 * t15155 + t13297 * t15153 + t13298 * t15151 + t13299 * t15149) * MDP(6) + (t13382 * t12953 + t13381 * t12955 + t13383 * t12957 + t13384 * t12962 + t13385 * t12964 + t13386 * t12966 + t13294 * t15158 + t13295 * t15156 + t13296 * t15154 + t13297 * t15152 + t13298 * t15150 + t13299 * t15148) * MDP(7) + (t12970 * t15605 + t12971 * t15604 + t12972 * t15603 + t12976 * t15602 + t12977 * t15601 + t12978 * t15600) * MDP(8) + (t13294 * t15527 + t13295 * t15524 + t13296 * t15521 + t13297 * t15518 + t13298 * t15515 + t13299 * t15512 + t13381 * t16253 + t13382 * t16256 + t13383 * t16258 + t13384 * t16245 + t13385 * t16249 + t13386 * t16247) * MDP(9) + (t13294 * t15526 + t13295 * t15523 + t13296 * t15520 + t13297 * t15517 + t13298 * t15514 + t13299 * t15511 - t13381 * t16254 - t13382 * t16257 - t13383 * t16259 - t13384 * t16802 - t13385 * t16803 - t13386 * t16804) * MDP(10) + (t13386 * t12794 + t12818 * t15600 + t13398 * t12859 + t13385 * t12792 + t12816 * t15601 + t13397 * t12861 + t13384 * t12790 + t12814 * t15602 + t13396 * t12860 + t13383 * t12788 + t12812 * t15603 + t13395 * t12853 + t13381 * t12786 + t12810 * t15604 + t13394 * t12855 + t13382 * t12784 + t12808 * t15605 + t13393 * t12854) * MDP(11) + (t13386 * t12795 + t12819 * t15600 + t13398 * t12857 + t13385 * t12793 + t12817 * t15601 + t13397 * t12856 + t13384 * t12791 + t12815 * t15602 + t13396 * t12858 + t13383 * t12789 + t12813 * t15603 + t13395 * t12852 + t13381 * t12787 + t12811 * t15604 + t13394 * t12850 + t13382 * t12785 + t12809 * t15605 + t13393 * t12851) * MDP(12) + (t13386 * t12807 + t12843 * t15600 + t13398 * t13014 + t13385 * t12806 + t12842 * t15601 + t13397 * t13013 + t13384 * t12805 + t12841 * t15602 + t13396 * t13012 + t13383 * t12804 + t12840 * t15603 + t13395 * t13011 + t13381 * t12803 + t12839 * t15604 + t13394 * t13010 + t13382 * t12802 + t12838 * t15605 + t13393 * t13009) * MDP(13) + (t13386 * t12801 + t12831 * t15600 + t13398 * t12849 + t13385 * t12800 + t12829 * t15601 + t13397 * t12848 + t13384 * t12799 + t12830 * t15602 + t13396 * t12847 + t13383 * t12798 + t12826 * t15603 + t13395 * t12846 + t13381 * t12797 + t12828 * t15604 + t13394 * t12845 + t13382 * t12796 + t12827 * t15605 + t13393 * t12844) * MDP(14) + (t13584 * MDP(16) - t13523 * MDP(17) + t16695 * MDP(19) + t14042 * MDP(20) - t13558 * MDP(21) - t13559 * MDP(22) + (MDP(15) - MDP(18)) * t13789) * t14370 + (t13589 * t14372 * MDP(15) + (t13517 * t14372 - t14369 * t16694) * MDP(16) + (-t13629 * t14369 + t14372 * t16696) * MDP(17) - t13588 * t14369 * MDP(18) + (-t13582 * t14369 + t13733 * t14372) * MDP(19) + (t13558 * t14372 - t13559 * t14369) * MDP(23) + (-MDP(15) * t16237 + MDP(18) * t16238 + (t16237 - t16238) * MDP(20)) * t14216 + (MDP(21) * t14369 + MDP(22) * t14372) * t13815) * t14373; (t12916 * t13388 + t12917 * t13389 + t12918 * t13387 + t12922 * t13390 + t12923 * t13391 + t12924 * t13392) * MDP(1) + (t13387 * t16764 + t13388 * t16766 + t13389 * t16765 + t13390 * t16763 + t13391 * t16762 + t13392 * t16761) * MDP(2) + (t13387 * t14041 + t13388 * t14037 + t13389 * t14039 + t13390 * t14044 + t13391 * t14046 + t13392 * t14048) * MDP(3) + (t13388 * t12877 + t13389 * t12878 + t13387 * t12879 + t13390 * t12892 + t13391 * t12893 + t13392 * t12894 - t13321 * t16833 - t13322 * t16831 - t13323 * t16829 - t13324 * t16827 - t13325 * t16825 - t13326 * t16823) * MDP(4) + (t13388 * t12868 + t13389 * t12869 + t13387 * t12870 + t13390 * t12874 + t13391 * t12875 + t13392 * t12876 - t13054 * t15599 - t13055 * t15598 - t13056 * t15597 - t13057 * t15596 - t13058 * t15595 - t13059 * t15594) * MDP(5) + (t13388 * t12952 + t13389 * t12954 + t13387 * t12956 + t13390 * t12961 + t13391 * t12963 + t13392 * t12965 + t13321 * t15159 + t13322 * t15157 + t13323 * t15155 + t13324 * t15153 + t13325 * t15151 + t13326 * t15149) * MDP(6) + (t13388 * t12953 + t13389 * t12955 + t13387 * t12957 + t13390 * t12962 + t13391 * t12964 + t13392 * t12966 + t13321 * t15158 + t13322 * t15156 + t13323 * t15154 + t13324 * t15152 + t13325 * t15150 + t13326 * t15148) * MDP(7) + (t12970 * t15599 + t12971 * t15598 + t12972 * t15597 + t12976 * t15596 + t12977 * t15595 + t12978 * t15594) * MDP(8) + (t13321 * t15527 + t13322 * t15524 + t13323 * t15521 + t13324 * t15518 + t13325 * t15515 + t13326 * t15512 + t13387 * t16258 + t13388 * t16256 + t13389 * t16253 + t13390 * t16245 + t13391 * t16249 + t13392 * t16247) * MDP(9) + (t13321 * t15526 + t13322 * t15523 + t13323 * t15520 + t13324 * t15517 + t13325 * t15514 + t13326 * t15511 - t13387 * t16259 - t13388 * t16257 - t13389 * t16254 - t13390 * t16802 - t13391 * t16803 - t13392 * t16804) * MDP(10) + (t13392 * t12794 + t12818 * t15594 + t13404 * t12859 + t13391 * t12792 + t12816 * t15595 + t13403 * t12861 + t13390 * t12790 + t12814 * t15596 + t13402 * t12860 + t13387 * t12788 + t12812 * t15597 + t13401 * t12853 + t13389 * t12786 + t12810 * t15598 + t13400 * t12855 + t13388 * t12784 + t12808 * t15599 + t13399 * t12854) * MDP(11) + (t13392 * t12795 + t12819 * t15594 + t13404 * t12857 + t13391 * t12793 + t12817 * t15595 + t13403 * t12856 + t13390 * t12791 + t12815 * t15596 + t13402 * t12858 + t13387 * t12789 + t12813 * t15597 + t13401 * t12852 + t13389 * t12787 + t12811 * t15598 + t13400 * t12850 + t13388 * t12785 + t12809 * t15599 + t13399 * t12851) * MDP(12) + (t13392 * t12807 + t12843 * t15594 + t13404 * t13014 + t13391 * t12806 + t12842 * t15595 + t13403 * t13013 + t13390 * t12805 + t12841 * t15596 + t13402 * t13012 + t13387 * t12804 + t12840 * t15597 + t13401 * t13011 + t13389 * t12803 + t12839 * t15598 + t13400 * t13010 + t13388 * t12802 + t12838 * t15599 + t13399 * t13009) * MDP(13) + (t13392 * t12801 + t12831 * t15594 + t13404 * t12849 + t13391 * t12800 + t12829 * t15595 + t13403 * t12848 + t13390 * t12799 + t12830 * t15596 + t13402 * t12847 + t13387 * t12798 + t12826 * t15597 + t13401 * t12846 + t13389 * t12797 + t12828 * t15598 + t13400 * t12845 + t13388 * t12796 + t12827 * t15599 + t13399 * t12844) * MDP(14) + (t13589 * t14032 + (t14031 * t14216 - t14054 * t16033) * t14056) * MDP(15) + (t13517 * t14032 - t13584 * t16033 + t14031 * t16694) * MDP(16) + (t13523 * t16033 + t13629 * t14031 + t14032 * t16696) * MDP(17) + (t13588 * t14031 + (t14032 * t14216 + t14056 * t16033) * t14054) * MDP(18) + (t13582 * t14031 + t13733 * t14032 - t16033 * t16695) * MDP(19) + (-t14042 * t16033 + (-t14031 * t14056 - t14032 * t14054) * t14216) * MDP(20) + (t13558 * t16033 - t13815 * t14031) * MDP(21) + (t13559 * t16033 + t13815 * t14032) * MDP(22) + (t13558 * t14032 + t13559 * t14031) * MDP(23); (t12916 * t13371 + t12917 * t13369 + t12918 * t13370 + t12922 * t13372 + t12923 * t13373 + t12924 * t13374) * MDP(1) + (t13369 * t16765 + t13370 * t16764 + t13371 * t16766 + t13372 * t16763 + t13373 * t16762 + t13374 * t16761) * MDP(2) + (t13369 * t14039 + t13370 * t14041 + t13371 * t14037 + t13372 * t14044 + t13373 * t14046 + t13374 * t14048) * MDP(3) + (t13371 * t12877 + t13369 * t12878 + t13370 * t12879 + t13372 * t12892 + t13373 * t12893 + t13374 * t12894 - t13363 * t14838 - t13364 * t14836 - t13365 * t14834 - t13366 * t14813 - t13367 * t14817 - t13368 * t14815) * MDP(4) + (t12868 * t13371 + t12869 * t13369 + t12870 * t13370 + t12874 * t13372 + t12875 * t13373 + t12876 * t13374 - t13054 * t13363 - t13055 * t13364 - t13056 * t13365 - t13057 * t13367 - t13058 * t13368 - t13059 * t13366) * MDP(5) + (t12952 * t13371 + t12954 * t13369 + t12956 * t13370 + t12961 * t13372 + t12963 * t13373 + t12965 * t13374 + t13363 * t16473 + t13364 * t16472 + t13365 * t16471 + t13366 * t16468 + t13367 * t16470 + t13368 * t16469) * MDP(6) + (t12953 * t13371 + t12955 * t13369 + t12957 * t13370 + t12962 * t13372 + t12964 * t13373 + t12966 * t13374 + t13363 * t15898 + t13364 * t15895 + t13365 * t15892 + t13366 * t15868 + t13367 * t15874 + t13368 * t15871) * MDP(7) + (t12970 * t13363 + t12971 * t13364 + t12972 * t13365 + t12976 * t13367 + t12977 * t13368 + t12978 * t13366) * MDP(8) + (t13363 * t13727 + t13364 * t13729 + t13365 * t13731 + t13366 * t13738 + t13367 * t13734 + t13368 * t13736 + t13369 * t16253 + t13370 * t16258 + t13371 * t16256 + t13372 * t16245 + t13373 * t16249 + t13374 * t16247) * MDP(9) + (t13363 * t13728 + t13364 * t13730 + t13365 * t13732 + t13366 * t13739 + t13367 * t13735 + t13368 * t13737 - t13369 * t16254 - t13370 * t16259 - t13371 * t16257 - t13372 * t16802 - t13373 * t16803 - t13374 * t16804) * MDP(10) + (t13374 * t12794 + t13366 * t12818 + t13380 * t12859 + t13373 * t12792 + t13368 * t12816 + t13379 * t12861 + t13372 * t12790 + t13367 * t12814 + t13378 * t12860 + t13370 * t12788 + t13365 * t12812 + t13377 * t12853 + t13369 * t12786 + t13364 * t12810 + t13376 * t12855 + t13371 * t12784 + t13363 * t12808 + t13375 * t12854) * MDP(11) + (t13374 * t12795 + t13366 * t12819 + t13380 * t12857 + t13373 * t12793 + t13368 * t12817 + t13379 * t12856 + t13372 * t12791 + t13367 * t12815 + t13378 * t12858 + t13370 * t12789 + t13365 * t12813 + t13377 * t12852 + t13369 * t12787 + t13364 * t12811 + t13376 * t12850 + t13371 * t12785 + t13363 * t12809 + t13375 * t12851) * MDP(12) + (t13374 * t12807 + t13366 * t12843 + t13380 * t13014 + t13373 * t12806 + t13368 * t12842 + t13379 * t13013 + t13372 * t12805 + t13367 * t12841 + t13378 * t13012 + t13370 * t12804 + t13365 * t12840 + t13377 * t13011 + t13369 * t12803 + t13364 * t12839 + t13376 * t13010 + t13371 * t12802 + t13363 * t12838 + t13375 * t13009) * MDP(13) + (t13374 * t12801 + t13366 * t12831 + t13380 * t12849 + t13373 * t12800 + t13368 * t12829 + t13379 * t12848 + t13372 * t12799 + t13367 * t12830 + t13378 * t12847 + t13370 * t12798 + t13365 * t12826 + t13377 * t12846 + t13369 * t12797 + t13364 * t12828 + t13376 * t12845 + t13371 * t12796 + t13363 * t12827 + t13375 * t12844) * MDP(14) + (t13589 * t14034 + (t14033 * t14216 + t14054 * t16011) * t14056) * MDP(15) + (t13517 * t14034 + t13584 * t16011 + t14033 * t16694) * MDP(16) + (-t13523 * t16011 + t13629 * t14033 + t14034 * t16696) * MDP(17) + (t13588 * t14033 + (t14034 * t14216 - t14056 * t16011) * t14054) * MDP(18) + (t13582 * t14033 + t13733 * t14034 + t16011 * t16695) * MDP(19) + (t14042 * t16011 + (-t14033 * t14056 - t14034 * t14054) * t14216) * MDP(20) + (-t13558 * t16011 - t13815 * t14033) * MDP(21) + (-t13559 * t16011 + t13815 * t14034) * MDP(22) + (t13558 * t14034 + t13559 * t14033) * MDP(23);];
tauX  = t1;
