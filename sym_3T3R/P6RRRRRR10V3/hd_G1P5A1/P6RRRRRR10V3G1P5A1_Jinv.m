% Analytische Jacobi-Matrix für parallelen Roboter
% Use Code from Maple symbolic Code Generation
% 
% analytische Jacobi-Matrix: Differentieller Zusammenhang zwischen
% Endeffektorpose und aktiven Gelenkkoordinaten.
% Zeitableitung der Winkeldarstellung des Endeffektors in Basis-Koordinaten
% 
% Input:
% xP [6x1]
%   Generalized platform coordinates
% qJ [3x6]
%   Generalized joint coordinates (joint angles)
%   rows: links of the robot
%   columns: number of leg
% legFrame [6x3]
%   base frame orientation for each leg
%   row: number of leg
%   column: Euler angles for the orientation.
%   Euler angle convention from robot definition ("leg_frame")
% pkin [10x1]
%   kinematic parameters (e.g. lengths of the links)
%   pkin=[a2,a3,a4,alpha2,alpha3,alpha4,d1,d2,d3,d4]';
% koppelP [6x3]
%   coordinates of the platform coupling joints
%   (joints that link the end of legs with platform)
%   in platform coordinates
%   rows: number of leg
%   columns: x-, y-, z-coordinates

% Output:
% Jinv [6x6]
%   Analytische Jacobi-Matrix

% Quelle: HybrDyn-Toolbox
% Datum: 2020-10-06 09:32
% Revision: 8f4ff0ee124033641e65b154ac60823cef59ef1f (2020-07-05)
% Moritz Schappler, moritz.schappler@imes.uni-hannover.de
% (C) Institut für Mechatronische Systeme, Universität Hannover

function Jinv = P6RRRRRR10V3G1P5A1_Jinv(xP, qJ, pkin, koppelP, ...
legFrame)


%% Coder Information
%#codegen
%$cgargs {zeros(6,1),zeros(3,6),zeros(10,1),zeros(6,3),zeros(6,3)}
assert(isreal(qJ) && all(size(qJ) == [3 6]), ...
  'P6RRRRRR10V3G1P5A1_Jinv: qJ has to be [3x6] (double)');
assert(isreal(xP) && all(size(xP) == [6 1]), ...
  'P6RRRRRR10V3G1P5A1_Jinv: xP has to be [6x1] (double)');
assert(isreal(pkin) && all(size(pkin) == [10 1]), ...
  'P6RRRRRR10V3G1P5A1_Jinv: pkin has to be [10x1] (double)');
assert(isreal(legFrame) && all(size(legFrame) == [6 3]), ...
  'P6RRRRRR10V3G1P5A1_Jinv: legFrame has to be [6x1] (double)');
assert(isreal(koppelP) && all(size(koppelP) == [6 3]), ...
  'P6RRRRRR10V3G1P5A1_Jinv: Koppelpunkt has to be [6x3] (double)');

%% Symbolic Calculation
% From Jinv_para_matlab.m
% OptimizationMode: 2
% StartTime: 2020-10-06 09:30:22
% EndTime: 2020-10-06 09:32:53
% DurationCPUTime: 161.93s
% Computational Cost: add. (8528->1533), mult. (22786->2662), div. (42->24), fcn. (19056->60), ass. (0->933)
t445 = cos(pkin(5));
t434 = t445 ^ 2;
t1069 = t434 - 0.1e1;
t441 = sin(pkin(6));
t410 = pkin(10) * t441;
t1096 = t1069 * t410;
t477 = sin(qJ(3,1));
t486 = cos(qJ(3,1));
t780 = pkin(3) * t1069;
t444 = cos(pkin(6));
t402 = t444 * pkin(10) + pkin(9);
t478 = sin(qJ(2,1));
t983 = t402 * t478;
t1119 = (t1096 * t477 + t486 * t780) * t983;
t1118 = -0.2e1 * pkin(3);
t433 = t444 ^ 2;
t511 = pkin(10) ^ 2;
t385 = pkin(3) ^ 2 + t433 * t511 - t511;
t366 = pkin(1) * t385 * t434;
t487 = cos(qJ(2,1));
t408 = t487 * pkin(2) + pkin(1);
t837 = pkin(3) * t410;
t731 = 0.2e1 * t837;
t634 = t478 * t731;
t582 = t445 * t634;
t524 = pkin(2) * t582 + t385 * t408 - t366;
t1117 = t477 * t524;
t1116 = t402 * t1069;
t1115 = t402 * t1096;
t447 = legFrame(6,3);
t411 = sin(t447);
t417 = cos(t447);
t455 = sin(qJ(1,6));
t464 = cos(qJ(1,6));
t309 = t464 * t411 + t455 * t417;
t443 = sin(pkin(4));
t1113 = t309 * t443;
t448 = legFrame(5,3);
t412 = sin(t448);
t418 = cos(t448);
t458 = sin(qJ(1,5));
t467 = cos(qJ(1,5));
t310 = t467 * t412 + t458 * t418;
t1112 = t310 * t443;
t449 = legFrame(4,3);
t413 = sin(t449);
t419 = cos(t449);
t461 = sin(qJ(1,4));
t470 = cos(qJ(1,4));
t311 = t470 * t413 + t461 * t419;
t1111 = t311 * t443;
t450 = legFrame(3,3);
t414 = sin(t450);
t420 = cos(t450);
t473 = sin(qJ(1,3));
t482 = cos(qJ(1,3));
t327 = t482 * t414 + t473 * t420;
t1110 = t327 * t443;
t451 = legFrame(2,3);
t415 = sin(t451);
t421 = cos(t451);
t476 = sin(qJ(1,2));
t485 = cos(qJ(1,2));
t328 = t485 * t415 + t476 * t421;
t1109 = t328 * t443;
t452 = legFrame(1,3);
t416 = sin(t452);
t422 = cos(t452);
t479 = sin(qJ(1,1));
t488 = cos(qJ(1,1));
t329 = t488 * t416 + t479 * t422;
t1108 = t329 * t443;
t442 = sin(pkin(5));
t955 = t442 * t445;
t822 = pkin(3) * t955;
t474 = sin(qJ(3,2));
t969 = t434 * t474;
t1107 = t441 * (t402 * t969 + t822);
t471 = sin(qJ(3,3));
t970 = t434 * t471;
t1106 = t441 * (t402 * t970 + t822);
t459 = sin(qJ(3,4));
t971 = t434 * t459;
t1105 = t441 * (t402 * t971 + t822);
t456 = sin(qJ(3,5));
t972 = t434 * t456;
t1104 = t441 * (t402 * t972 + t822);
t453 = sin(qJ(3,6));
t973 = t434 * t453;
t1103 = t441 * (t402 * t973 + t822);
t484 = cos(qJ(2,2));
t407 = t484 * pkin(2) + pkin(1);
t475 = sin(qJ(2,2));
t635 = t475 * t731;
t583 = t445 * t635;
t1102 = (pkin(2) * t583 + t385 * t407 - t366) * t474;
t481 = cos(qJ(2,3));
t406 = t481 * pkin(2) + pkin(1);
t472 = sin(qJ(2,3));
t636 = t472 * t731;
t584 = t445 * t636;
t1101 = (pkin(2) * t584 + t385 * t406 - t366) * t471;
t469 = cos(qJ(2,4));
t405 = t469 * pkin(2) + pkin(1);
t460 = sin(qJ(2,4));
t637 = t460 * t731;
t585 = t445 * t637;
t1100 = (pkin(2) * t585 + t385 * t405 - t366) * t459;
t466 = cos(qJ(2,5));
t404 = t466 * pkin(2) + pkin(1);
t457 = sin(qJ(2,5));
t638 = t457 * t731;
t586 = t445 * t638;
t1099 = (pkin(2) * t586 + t385 * t404 - t366) * t456;
t463 = cos(qJ(2,6));
t403 = t463 * pkin(2) + pkin(1);
t454 = sin(qJ(2,6));
t639 = t454 * t731;
t587 = t445 * t639;
t1098 = (pkin(2) * t587 + t385 * t403 - t366) * t453;
t409 = pkin(2) * t410;
t981 = (t445 + 0.1e1) * (t445 - 0.1e1);
t751 = t477 * t981;
t649 = t385 * t751;
t1097 = -t649 - t409;
t1043 = pkin(8) * t442;
t1076 = -t385 * t1043 + t409 * t1118;
t490 = xP(6);
t427 = sin(t490);
t430 = cos(t490);
t504 = koppelP(1,2);
t510 = koppelP(1,1);
t358 = -t427 * t504 + t430 * t510;
t491 = xP(5);
t428 = sin(t491);
t431 = cos(t491);
t498 = koppelP(1,3);
t229 = t358 * t428 - t431 * t498;
t492 = xP(4);
t432 = cos(t492);
t1016 = t229 * t432;
t364 = t427 * t510 + t430 * t504;
t429 = sin(t492);
t999 = t364 * t429;
t1094 = t1016 - t999;
t503 = koppelP(2,2);
t509 = koppelP(2,1);
t363 = t427 * t509 + t430 * t503;
t1000 = t363 * t429;
t565 = -t427 * t503 + t430 * t509;
t497 = koppelP(2,3);
t974 = t431 * t497;
t228 = t428 * t565 - t974;
t1017 = t228 * t432;
t1093 = -t1000 + t1017;
t502 = koppelP(3,2);
t508 = koppelP(3,1);
t362 = t427 * t508 + t430 * t502;
t1001 = t362 * t429;
t566 = -t427 * t502 + t430 * t508;
t496 = koppelP(3,3);
t975 = t431 * t496;
t227 = t428 * t566 - t975;
t1018 = t227 * t432;
t1092 = -t1001 + t1018;
t501 = koppelP(4,2);
t507 = koppelP(4,1);
t361 = t427 * t507 + t430 * t501;
t1002 = t361 * t429;
t567 = -t427 * t501 + t430 * t507;
t495 = koppelP(4,3);
t976 = t431 * t495;
t226 = t428 * t567 - t976;
t1019 = t226 * t432;
t1091 = -t1002 + t1019;
t500 = koppelP(5,2);
t506 = koppelP(5,1);
t360 = t427 * t506 + t430 * t500;
t1003 = t360 * t429;
t568 = -t427 * t500 + t430 * t506;
t494 = koppelP(5,3);
t977 = t431 * t494;
t225 = t428 * t568 - t977;
t1020 = t225 * t432;
t1090 = -t1003 + t1020;
t499 = koppelP(6,2);
t505 = koppelP(6,1);
t359 = t427 * t505 + t430 * t499;
t1004 = t359 * t429;
t569 = -t427 * t499 + t430 * t505;
t493 = koppelP(6,3);
t978 = t431 * t493;
t224 = t428 * t569 - t978;
t1021 = t224 * t432;
t1089 = -t1004 + t1021;
t1088 = (-t433 + 0.1e1) * pkin(10);
t1086 = t429 * t1069;
t1085 = t432 * t1069;
t781 = pkin(3) * t983;
t798 = t487 * t410;
t304 = pkin(8) * t798 - t781;
t962 = t441 * t445;
t804 = pkin(10) * t962;
t672 = t402 * t804;
t356 = pkin(1) * t672;
t1072 = pkin(3) * pkin(2);
t392 = t408 * t1072;
t1084 = -t442 * (t304 * pkin(2) - t356) + t392;
t812 = t434 * t410;
t386 = pkin(1) * t812;
t811 = t403 * t410;
t934 = t445 * t454;
t821 = pkin(3) * t934;
t1027 = (pkin(2) * t821 + t386 - t811) * pkin(3);
t1074 = 0.2e1 * t443;
t446 = cos(pkin(4));
t923 = t446 * t454;
t834 = pkin(1) * t923;
t943 = t443 * t463;
t343 = pkin(8) * t943 + t834;
t1068 = pkin(1) * t446;
t946 = t443 * t454;
t346 = -pkin(8) * t946 + t463 * t1068;
t384 = pkin(3) * t386;
t462 = cos(qJ(3,6));
t435 = t462 ^ 2;
t696 = pkin(3) * t804;
t640 = 0.2e1 * t696;
t998 = t385 * t445;
t828 = pkin(2) * t998;
t655 = t828 / 0.2e1;
t695 = pkin(3) * t811;
t1083 = -((t454 * t655 + t384 - t695) * t1074 + (-t385 * t343 + t346 * t640) * t442) * t435 + t443 * t1027;
t810 = t404 * t410;
t933 = t445 * t457;
t820 = pkin(3) * t933;
t1026 = (pkin(2) * t820 + t386 - t810) * pkin(3);
t922 = t446 * t457;
t833 = pkin(1) * t922;
t942 = t443 * t466;
t344 = pkin(8) * t942 + t833;
t945 = t443 * t457;
t347 = -pkin(8) * t945 + t466 * t1068;
t465 = cos(qJ(3,5));
t436 = t465 ^ 2;
t694 = pkin(3) * t810;
t1082 = -((t457 * t655 + t384 - t694) * t1074 + (-t385 * t344 + t347 * t640) * t442) * t436 + t443 * t1026;
t809 = t405 * t410;
t932 = t445 * t460;
t819 = pkin(3) * t932;
t1025 = (pkin(2) * t819 + t386 - t809) * pkin(3);
t921 = t446 * t460;
t832 = pkin(1) * t921;
t941 = t443 * t469;
t345 = pkin(8) * t941 + t832;
t944 = t443 * t460;
t348 = -pkin(8) * t944 + t469 * t1068;
t468 = cos(qJ(3,4));
t437 = t468 ^ 2;
t693 = pkin(3) * t809;
t1081 = -((t460 * t655 + t384 - t693) * t1074 + (-t385 * t345 + t348 * t640) * t442) * t437 + t443 * t1025;
t808 = t406 * t410;
t931 = t445 * t472;
t818 = pkin(3) * t931;
t1024 = (pkin(2) * t818 + t386 - t808) * pkin(3);
t920 = t446 * t472;
t831 = pkin(1) * t920;
t937 = t443 * t481;
t349 = pkin(8) * t937 + t831;
t940 = t443 * t472;
t352 = -pkin(8) * t940 + t481 * t1068;
t480 = cos(qJ(3,3));
t438 = t480 ^ 2;
t692 = pkin(3) * t808;
t1080 = -((t472 * t655 + t384 - t692) * t1074 + (-t385 * t349 + t352 * t640) * t442) * t438 + t443 * t1024;
t807 = t407 * t410;
t930 = t445 * t475;
t817 = pkin(3) * t930;
t1023 = (pkin(2) * t817 + t386 - t807) * pkin(3);
t919 = t446 * t475;
t830 = pkin(1) * t919;
t936 = t443 * t484;
t350 = pkin(8) * t936 + t830;
t939 = t443 * t475;
t353 = -pkin(8) * t939 + t484 * t1068;
t483 = cos(qJ(3,2));
t439 = t483 ^ 2;
t691 = pkin(3) * t807;
t1079 = -((t475 * t655 + t384 - t691) * t1074 + (-t385 * t350 + t353 * t640) * t442) * t439 + t443 * t1023;
t806 = t408 * t410;
t1045 = pkin(3) * t478;
t816 = t445 * t1045;
t1022 = (pkin(2) * t816 + t386 - t806) * pkin(3);
t918 = t446 * t478;
t829 = pkin(1) * t918;
t935 = t443 * t487;
t351 = pkin(8) * t935 + t829;
t938 = t443 * t478;
t354 = -pkin(8) * t938 + t487 * t1068;
t440 = t486 ^ 2;
t690 = pkin(3) * t806;
t1078 = -((t478 * t655 + t384 - t690) * t1074 + (-t385 * t351 + t354 * t640) * t442) * t440 + t443 * t1022;
t1071 = pkin(3) * pkin(8);
t814 = t402 * t410;
t661 = t478 * t814;
t301 = t487 * t1071 + t661;
t1052 = pkin(3) * t402;
t839 = pkin(1) * t1052;
t375 = t445 * t839;
t1077 = pkin(2) * t806 + t442 * (pkin(2) * t301 - t375);
t1075 = 0.2e1 * t429;
t1073 = -0.2e1 * t446;
t489 = pkin(1) * pkin(3);
t1070 = -t385 / 0.2e1;
t326 = -t416 * t479 + t422 * t488;
t862 = t487 * t326;
t878 = t478 * t329;
t190 = -t446 * t878 + t862;
t1067 = pkin(2) * t190;
t861 = t487 * t329;
t193 = t326 * t918 + t861;
t1066 = pkin(2) * t193;
t1065 = pkin(2) * t442;
t1064 = pkin(2) * t453;
t1063 = pkin(2) * t456;
t1062 = pkin(2) * t459;
t1061 = pkin(2) * t471;
t1060 = pkin(2) * t474;
t1059 = pkin(2) * t477;
t760 = t402 * t981;
t233 = t454 * t1065 + t463 * t760;
t1058 = pkin(3) * t233;
t234 = t457 * t1065 + t466 * t760;
t1057 = pkin(3) * t234;
t235 = t460 * t1065 + t469 * t760;
t1056 = pkin(3) * t235;
t239 = t472 * t1065 + t481 * t760;
t1055 = pkin(3) * t239;
t240 = t475 * t1065 + t484 * t760;
t1054 = pkin(3) * t240;
t642 = t487 * t760;
t947 = t442 * t478;
t241 = pkin(2) * t947 + t642;
t1053 = pkin(3) * t241;
t1051 = pkin(3) * t445;
t1050 = pkin(3) * t454;
t1049 = pkin(3) * t457;
t1048 = pkin(3) * t460;
t1047 = pkin(3) * t472;
t1046 = pkin(3) * t475;
t512 = pkin(2) ^ 2;
t1044 = pkin(3) * t512;
t1042 = pkin(8) * t443;
t823 = pkin(3) * t962;
t666 = t463 * t823;
t961 = t441 * t453;
t1041 = pkin(10) * (t233 * t961 + (t1088 * t454 + t666) * t442);
t665 = t466 * t823;
t960 = t441 * t456;
t1040 = pkin(10) * (t234 * t960 + (t1088 * t457 + t665) * t442);
t664 = t469 * t823;
t959 = t441 * t459;
t1039 = pkin(10) * (t235 * t959 + (t1088 * t460 + t664) * t442);
t660 = t481 * t823;
t958 = t441 * t471;
t1038 = pkin(10) * (t239 * t958 + (t1088 * t472 + t660) * t442);
t659 = t484 * t823;
t957 = t441 * t474;
t1037 = pkin(10) * (t240 * t957 + (t1088 * t475 + t659) * t442);
t376 = t487 * t823;
t956 = t441 * t477;
t1036 = pkin(10) * (t241 * t956 + (t1088 * t478 + t376) * t442);
t982 = (t444 + 0.1e1) * (t444 - 0.1e1);
t813 = pkin(10) * t982;
t1035 = pkin(10) * (t441 * t816 + t487 * t813);
t1034 = pkin(10) * t442;
t1033 = (-t343 * t813 + t346 * t823) * pkin(10);
t1032 = (-t344 * t813 + t347 * t823) * pkin(10);
t1031 = (-t345 * t813 + t348 * t823) * pkin(10);
t1030 = (-t349 * t813 + t352 * t823) * pkin(10);
t1029 = (-t350 * t813 + t353 * t823) * pkin(10);
t1028 = (-t351 * t813 + t354 * t823) * pkin(10);
t306 = -t411 * t455 + t417 * t464;
t1015 = t306 * t402;
t1014 = t306 * t443;
t307 = -t412 * t458 + t418 * t467;
t1013 = t307 * t402;
t1012 = t307 * t443;
t308 = -t413 * t461 + t419 * t470;
t1011 = t308 * t402;
t1010 = t308 * t443;
t324 = -t414 * t473 + t420 * t482;
t1009 = t324 * t402;
t1008 = t324 * t443;
t325 = -t415 * t476 + t421 * t485;
t1007 = t325 * t402;
t1006 = t325 * t443;
t1005 = t326 * t443;
t367 = t385 * t453;
t368 = t385 * t456;
t369 = t385 * t459;
t370 = t385 * t471;
t371 = t385 * t474;
t387 = t403 * t1072;
t997 = t387 * t443;
t388 = t404 * t1072;
t996 = t388 * t443;
t389 = t405 * t1072;
t995 = t389 * t443;
t390 = t406 * t1072;
t994 = t390 * t443;
t391 = t407 * t1072;
t993 = t391 * t443;
t992 = t392 * t443;
t991 = t402 * t434;
t990 = t402 * t445;
t989 = t402 * t446;
t988 = t402 * t454;
t987 = t402 * t457;
t986 = t402 * t460;
t985 = t402 * t472;
t984 = t402 * t475;
t980 = t428 * t429;
t979 = t429 * t443;
t968 = t435 * t442;
t967 = t436 * t442;
t966 = t437 * t442;
t965 = t438 * t442;
t964 = t439 * t442;
t963 = t440 * t442;
t954 = t442 * t446;
t953 = t442 * t453;
t952 = t442 * t456;
t951 = t442 * t459;
t950 = t442 * t471;
t949 = t442 * t474;
t948 = t442 * t477;
t218 = t428 * t493 + t431 * t569;
t929 = t446 * t218;
t219 = t428 * t494 + t431 * t568;
t928 = t446 * t219;
t220 = t428 * t495 + t431 * t567;
t927 = t446 * t220;
t221 = t428 * t496 + t431 * t566;
t926 = t446 * t221;
t222 = t428 * t497 + t431 * t565;
t925 = t446 * t222;
t223 = t358 * t431 + t428 * t498;
t924 = t446 * t223;
t917 = t453 * t454;
t916 = t454 * t309;
t915 = t454 * t385;
t914 = t455 * t454;
t913 = t456 * t457;
t912 = t457 * t310;
t911 = t457 * t385;
t910 = t458 * t457;
t909 = t459 * t460;
t908 = t460 * t311;
t907 = t460 * t385;
t906 = t461 * t460;
t905 = t463 * t306;
t904 = t463 * t309;
t903 = t463 * t385;
t902 = t463 * t455;
t901 = t464 * t454;
t900 = t464 * t463;
t899 = t466 * t307;
t898 = t466 * t310;
t897 = t466 * t385;
t896 = t466 * t458;
t895 = t467 * t457;
t894 = t467 * t466;
t893 = t469 * t308;
t892 = t469 * t311;
t891 = t469 * t385;
t890 = t469 * t461;
t889 = t470 * t460;
t888 = t470 * t469;
t887 = t471 * t472;
t886 = t472 * t327;
t885 = t472 * t385;
t884 = t473 * t472;
t883 = t474 * t475;
t882 = t475 * t328;
t881 = t475 * t385;
t880 = t476 * t475;
t879 = t477 * t486;
t877 = t478 * t385;
t876 = t479 * t478;
t875 = t479 * t487;
t874 = t481 * t324;
t873 = t481 * t327;
t872 = t481 * t385;
t871 = t481 * t473;
t870 = t482 * t472;
t869 = t482 * t481;
t868 = t484 * t325;
t867 = t484 * t328;
t866 = t484 * t385;
t865 = t484 * t476;
t864 = t485 * t475;
t863 = t485 * t484;
t860 = t487 * t385;
t859 = t488 * t478;
t858 = t488 * t487;
t826 = pkin(2) * t954;
t857 = t306 * t826 + t309 * t402;
t856 = t307 * t826 + t310 * t402;
t855 = t308 * t826 + t311 * t402;
t854 = t324 * t826 + t327 * t402;
t853 = t325 * t826 + t328 * t402;
t852 = t306 * t1065 + t309 * t989;
t851 = t307 * t1065 + t310 * t989;
t850 = t308 * t1065 + t311 * t989;
t849 = t324 * t1065 + t327 * t989;
t848 = t325 * t1065 + t328 * t989;
t365 = t402 * t822;
t847 = t365 / 0.2e1 - t409 / 0.2e1;
t378 = -0.2e1 * t384;
t846 = pkin(1) * t731 + t378;
t845 = t409 - t367;
t844 = t409 - t368;
t843 = t409 - t369;
t842 = t409 - t370;
t841 = t409 - t371;
t840 = 0.2e1 * t1068;
t838 = t443 * t1072;
t836 = pkin(3) * t1043;
t835 = 0.2e1 * t981;
t827 = pkin(2) * t956;
t196 = t326 * t478 + t446 * t861;
t825 = t196 * t1051;
t824 = pkin(3) * t991;
t805 = t441 * t1034;
t803 = t463 * t410;
t802 = t466 * t410;
t801 = t469 * t410;
t800 = t481 * t410;
t799 = t484 * t410;
t791 = pkin(10) * t961;
t790 = pkin(3) * t988;
t789 = pkin(10) * t960;
t788 = pkin(3) * t987;
t787 = pkin(10) * t959;
t786 = pkin(3) * t986;
t785 = pkin(10) * t958;
t784 = pkin(3) * t985;
t783 = pkin(10) * t957;
t782 = pkin(3) * t984;
t129 = t224 * t1014 - t446 * t359;
t779 = t129 * t981;
t131 = t225 * t1012 - t446 * t360;
t778 = t131 * t981;
t133 = t226 * t1010 - t446 * t361;
t777 = t133 * t981;
t135 = t227 * t1008 - t446 * t362;
t776 = t135 * t981;
t137 = t228 * t1006 - t446 * t363;
t775 = t137 * t981;
t139 = t229 * t1005 - t446 * t364;
t774 = t139 * t981;
t620 = pkin(10) * t666;
t725 = -t915 / 0.2e1;
t773 = (t620 + t725) * t968;
t619 = pkin(10) * t665;
t724 = -t911 / 0.2e1;
t772 = (t619 + t724) * t967;
t618 = pkin(10) * t664;
t723 = -t907 / 0.2e1;
t771 = (t618 + t723) * t966;
t617 = pkin(10) * t660;
t722 = -t885 / 0.2e1;
t770 = (t617 + t722) * t965;
t616 = pkin(10) * t659;
t721 = -t881 / 0.2e1;
t769 = (t616 + t721) * t964;
t615 = pkin(10) * t376;
t720 = -t877 / 0.2e1;
t768 = (t615 + t720) * t963;
t767 = t309 * t954;
t766 = t310 * t954;
t765 = t311 * t954;
t764 = t327 * t954;
t763 = t328 * t954;
t762 = t385 * t981;
t761 = t385 * t955;
t759 = t443 * t990;
t758 = t402 * t917;
t757 = t402 * t913;
t756 = t402 * t909;
t755 = t402 * t887;
t754 = t402 * t883;
t753 = t442 * t982;
t752 = t443 * t981;
t744 = t445 * t903;
t750 = (t639 + t744) * t953;
t742 = t445 * t897;
t749 = (t638 + t742) * t952;
t740 = t445 * t891;
t748 = (t637 + t740) * t951;
t737 = t445 * t872;
t747 = (t636 + t737) * t950;
t735 = t445 * t866;
t746 = (t635 + t735) * t949;
t267 = t445 * t860 + t634;
t745 = t267 * t948;
t743 = t218 * t943;
t741 = t219 * t942;
t739 = t220 * t941;
t738 = t445 * t877;
t736 = t221 * t937;
t734 = t222 * t936;
t733 = t223 * t935;
t732 = -0.2e1 * t837;
t730 = 0.2e1 * t836;
t719 = 0.2e1 * pkin(10) * t956;
t718 = -0.2e1 * t791;
t717 = 0.2e1 * t791;
t716 = -0.2e1 * t789;
t715 = 0.2e1 * t789;
t714 = -0.2e1 * t787;
t713 = 0.2e1 * t787;
t712 = -0.2e1 * t785;
t711 = 0.2e1 * t785;
t710 = -0.2e1 * t783;
t709 = 0.2e1 * t783;
t706 = t410 * t1068;
t705 = t442 * t839;
t703 = t443 * t409;
t702 = t309 * t838;
t701 = t310 * t838;
t700 = t311 * t838;
t699 = t327 * t838;
t698 = t328 * t838;
t697 = t329 * t838;
t689 = pkin(8) * t805;
t688 = pkin(3) * t798;
t687 = -t402 + t991;
t357 = t443 * t375;
t686 = -(t343 * t731 + t346 * t998) * t453 + t357;
t685 = -(t344 * t731 + t347 * t998) * t456 + t357;
t684 = -(t345 * t731 + t348 * t998) * t459 + t357;
t683 = -(t349 * t731 + t352 * t998) * t471 + t357;
t682 = -(t350 * t731 + t353 * t998) * t474 + t357;
t681 = -(t351 * t731 + t354 * t998) * t477 + t357;
t680 = t446 * t905 - t916;
t679 = t446 * t899 - t912;
t678 = t446 * t893 - t908;
t677 = t446 * t874 - t886;
t676 = t446 * t868 - t882;
t675 = t446 * t862 - t878;
t674 = pkin(3) * t760;
t673 = t402 * t812;
t671 = pkin(10) * t753;
t670 = t190 * t813;
t669 = t454 * t814;
t668 = t457 * t814;
t667 = t460 * t814;
t663 = t472 * t814;
t662 = t475 * t814;
t658 = pkin(3) * t1116;
t654 = t453 * t762;
t653 = t456 * t762;
t652 = t459 * t762;
t651 = t471 * t762;
t650 = t474 * t762;
t648 = t453 * t761;
t647 = t456 * t761;
t646 = t459 * t761;
t645 = t471 * t761;
t644 = t474 * t761;
t643 = t402 * t751;
t641 = -0.2e1 * t696;
t633 = pkin(2) + t717;
t632 = pkin(2) + t715;
t631 = pkin(2) + t713;
t630 = pkin(2) + t711;
t629 = pkin(2) + t709;
t628 = -t762 / 0.2e1;
t627 = t442 * t717;
t626 = t442 * t715;
t625 = t442 * t713;
t624 = t442 * t711;
t623 = t442 * t709;
t622 = pkin(1) * t402 * t805;
t621 = t837 * t981;
t614 = t309 * t1065 - t306 * t989;
t613 = t310 * t1065 - t307 * t989;
t612 = t311 * t1065 - t308 * t989;
t611 = t327 * t1065 - t324 * t989;
t610 = t328 * t1065 - t325 * t989;
t609 = pkin(8) * t511 * t753;
t608 = t306 * t671;
t607 = t307 * t671;
t606 = t308 * t671;
t605 = t309 * t671;
t604 = t310 * t671;
t603 = t311 * t671;
t602 = t324 * t671;
t601 = t325 * t671;
t600 = t327 * t671;
t599 = t328 * t671;
t598 = t442 * t672;
t595 = -((t582 + t860) * t1043 + t378 - pkin(2) * t738 + 0.2e1 * t690) * t440 - t1022;
t594 = t680 * t648;
t593 = t679 * t647;
t592 = t678 * t646;
t591 = t677 * t645;
t590 = t676 * t644;
t589 = t441 * t643;
t588 = -0.2e1 * t621;
t182 = (t446 * t902 + t901) * t417 + t411 * (t446 * t900 - t914);
t183 = (t446 * t896 + t895) * t418 + t412 * (t446 * t894 - t910);
t184 = (t446 * t890 + t889) * t419 + t413 * (t446 * t888 - t906);
t200 = (t446 * t875 + t859) * t422 + t416 * (t446 * t858 - t876);
t201 = (t446 * t871 + t870) * t420 + t414 * (t446 * t869 - t884);
t202 = (t446 * t865 + t864) * t421 + t415 * (t446 * t863 - t880);
t49 = t1089 * t1113 + t929;
t564 = t49 * t621;
t50 = t1090 * t1112 + t928;
t563 = t50 * t621;
t51 = t1091 * t1111 + t927;
t562 = t51 * t621;
t52 = t1092 * t1110 + t926;
t561 = t52 * t621;
t53 = t1093 * t1109 + t925;
t560 = t53 * t621;
t54 = t1094 * t1108 + t924;
t559 = t54 * t621;
t558 = t306 * t627;
t557 = t307 * t626;
t556 = t308 * t625;
t555 = t324 * t624;
t554 = t325 * t623;
t553 = t443 * t621;
t552 = t306 * t553;
t551 = t307 * t553;
t550 = t308 * t553;
t549 = t309 * t553;
t548 = t310 * t553;
t547 = t311 * t553;
t546 = t324 * t553;
t545 = t325 * t553;
t544 = t326 * t553;
t543 = t327 * t553;
t542 = t328 * t553;
t541 = t329 * t553;
t535 = t443 * t1098 - t403 * t703;
t534 = t443 * t1099 - t404 * t703;
t533 = t443 * t1100 - t405 * t703;
t532 = t443 * t1101 - t406 * t703;
t531 = t443 * t1102 - t407 * t703;
t530 = t1117 * t443 - t408 * t703;
t523 = t346 * t1116;
t522 = t347 * t1116;
t521 = t348 * t1116;
t520 = t352 * t1116;
t519 = t353 * t1116;
t518 = t354 * t1116;
t517 = t402 * (t1096 * t453 + t462 * t780);
t516 = t402 * (t1096 * t456 + t465 * t780);
t515 = t402 * (t1096 * t459 + t468 * t780);
t514 = t402 * (t1096 * t471 + t480 * t780);
t513 = t402 * (t1096 * t474 + t483 * t780);
t383 = t410 + t1060;
t382 = t410 + t1061;
t381 = t410 + t1062;
t380 = t410 + t1063;
t379 = t410 + t1064;
t377 = 0.2e1 * t384;
t374 = pkin(3) * t1065 - pkin(8) * t410;
t373 = pkin(2) * t805 + t1071;
t372 = -t689 + t1072;
t342 = -t621 / 0.2e1;
t305 = t443 * t356;
t303 = pkin(8) * t799 - t782;
t302 = pkin(8) * t800 - t784;
t300 = t484 * t1071 + t662;
t299 = t481 * t1071 + t663;
t298 = pkin(8) * t801 - t786;
t297 = pkin(8) * t802 - t788;
t296 = pkin(8) * t803 - t790;
t295 = t469 * t1071 + t667;
t294 = t466 * t1071 + t668;
t293 = t463 * t1071 + t669;
t291 = pkin(2) * t385 + t689 * t1118;
t279 = t598 / 0.2e1 + t1072 / 0.2e1;
t252 = t329 * t703;
t251 = t328 * t703;
t250 = t327 * t703;
t246 = t311 * t703;
t245 = t310 * t703;
t244 = t309 * t703;
t195 = t325 * t475 + t446 * t867;
t194 = t324 * t472 + t446 * t873;
t192 = t325 * t919 + t867;
t191 = t324 * t920 + t873;
t189 = -t446 * t882 + t868;
t188 = -t446 * t886 + t874;
t178 = t308 * t460 + t446 * t892;
t177 = t307 * t457 + t446 * t898;
t176 = t306 * t454 + t446 * t904;
t175 = t308 * t921 + t892;
t174 = t307 * t922 + t898;
t173 = t306 * t923 + t904;
t172 = -t446 * t908 + t893;
t171 = -t446 * t912 + t899;
t170 = -t446 * t916 + t905;
t148 = t675 * t823;
t140 = t364 * t1005 + t446 * t229;
t138 = t363 * t1006 + t446 * t228;
t136 = t362 * t1008 + t446 * t227;
t134 = t361 * t1010 + t446 * t226;
t132 = t360 * t1012 + t446 * t225;
t130 = t359 * t1014 + t446 * t224;
t128 = t329 * t759 + t1067;
t127 = pkin(2) * t189 + t328 * t759;
t126 = pkin(2) * t188 + t327 * t759;
t125 = -t326 * t759 + t1066;
t124 = pkin(2) * t192 - t325 * t759;
t123 = pkin(2) * t191 - t324 * t759;
t122 = pkin(2) * t172 + t311 * t759;
t121 = pkin(2) * t171 + t310 * t759;
t120 = pkin(2) * t170 + t309 * t759;
t119 = pkin(2) * t175 - t308 * t759;
t118 = pkin(2) * t174 - t307 * t759;
t117 = pkin(2) * t173 - t306 * t759;
t116 = t140 * t621;
t115 = t138 * t621;
t114 = t136 * t621;
t113 = t134 * t621;
t112 = t132 * t621;
t111 = t130 * t621;
t110 = t329 * t364 * t979 - t924;
t109 = t328 * t363 * t979 - t925;
t108 = t327 * t362 * t979 - t926;
t107 = t311 * t361 * t979 - t927;
t106 = t310 * t360 * t979 - t928;
t105 = t309 * t359 * t979 - t929;
t104 = t229 * t675 + t364 * t935;
t103 = -t229 * t935 + t364 * t675;
t102 = t228 * t676 + t363 * t936;
t101 = -t228 * t936 + t363 * t676;
t100 = t227 * t677 + t362 * t937;
t99 = -t227 * t937 + t362 * t677;
t98 = t193 * t229 + t364 * t938;
t97 = t193 * t364 - t229 * t938;
t96 = t228 * t192 + t363 * t939;
t95 = t363 * t192 - t228 * t939;
t94 = t227 * t191 + t362 * t940;
t93 = t362 * t191 - t227 * t940;
t92 = t226 * t678 + t361 * t941;
t91 = -t226 * t941 + t361 * t678;
t90 = t225 * t679 + t360 * t942;
t89 = -t225 * t942 + t360 * t679;
t88 = t224 * t680 + t359 * t943;
t87 = -t224 * t943 + t359 * t680;
t86 = t226 * t175 + t361 * t944;
t85 = t361 * t175 - t226 * t944;
t84 = t225 * t174 + t360 * t945;
t83 = t360 * t174 - t225 * t945;
t82 = t224 * t173 + t359 * t946;
t81 = t359 * t173 - t224 * t946;
t80 = (t365 + t1097) * t486 + t477 * t598 + (t1059 + t410 + (t440 * t835 - t434) * t410) * pkin(3);
t79 = t193 * t731 + t675 * t998;
t78 = t190 * t732 + t196 * t998;
t77 = -t385 * t193 + t640 * t675;
t76 = -t385 * t192 + t640 * t676;
t75 = -t385 * t191 + t640 * t677;
t74 = t385 * t190 + t196 * t640;
t73 = t385 * t189 + t195 * t640;
t72 = t385 * t188 + t194 * t640;
t71 = -t385 * t175 + t640 * t678;
t70 = -t385 * t174 + t640 * t679;
t69 = -t385 * t173 + t640 * t680;
t68 = t385 * t172 + t178 * t640;
t67 = t385 * t171 + t177 * t640;
t66 = t385 * t170 + t176 * t640;
t65 = (-t385 * t969 + t365 - t841) * t483 + t474 * t598 + (t383 + (t439 * t835 - t434) * t410) * pkin(3);
t64 = (-t385 * t970 + t365 - t842) * t480 + t471 * t598 + (t382 + (t438 * t835 - t434) * t410) * pkin(3);
t63 = (-t385 * t971 + t365 - t843) * t468 + t459 * t598 + (t381 + (t437 * t835 - t434) * t410) * pkin(3);
t62 = (-t385 * t972 + t365 - t844) * t465 + t456 * t598 + (t380 + (t436 * t835 - t434) * t410) * pkin(3);
t61 = (-t385 * t973 + t365 - t845) * t462 + t453 * t598 + (t379 + (t435 * t835 - t434) * t410) * pkin(3);
t60 = t202 * t1000 + t734;
t59 = t201 * t1001 + t736;
t58 = t200 * t999 + t733;
t57 = t184 * t1002 + t739;
t56 = t183 * t1003 + t741;
t55 = t182 * t1004 + t743;
t48 = pkin(2) * t98 - t139 * t990;
t47 = pkin(2) * t95 - t138 * t990;
t46 = pkin(2) * t93 - t136 * t990;
t45 = pkin(2) * t97 - t140 * t990;
t44 = pkin(2) * t96 - t137 * t990;
t43 = pkin(2) * t94 - t135 * t990;
t42 = pkin(2) * t85 - t134 * t990;
t41 = pkin(2) * t83 - t132 * t990;
t40 = pkin(2) * t81 - t130 * t990;
t39 = pkin(2) * t86 - t133 * t990;
t38 = pkin(2) * t84 - t131 * t990;
t37 = pkin(2) * t82 - t129 * t990;
t36 = t223 * t938 - t1094 * (t416 * (t446 * t859 + t875) - (-t446 * t876 + t858) * t422);
t35 = t1094 * t200 - t733;
t34 = t1093 * t202 - t734;
t33 = t222 * t939 + t1093 * ((-t446 * t880 + t863) * t421 - t415 * (t446 * t864 + t865));
t32 = t1092 * t201 - t736;
t31 = t221 * t940 + t1092 * ((-t446 * t884 + t869) * t420 - t414 * (t446 * t870 + t871));
t30 = t1091 * t184 - t739;
t29 = t220 * t944 + t1091 * ((-t446 * t906 + t888) * t419 - t413 * (t446 * t889 + t890));
t28 = t1090 * t183 - t741;
t27 = t219 * t945 + t1090 * ((-t446 * t910 + t894) * t418 - t412 * (t446 * t895 + t896));
t26 = t1089 * t182 - t743;
t25 = t218 * t946 + t1089 * ((-t446 * t914 + t900) * t417 - t411 * (t446 * t901 + t902));
t24 = pkin(2) * t36 + t54 * t990;
t23 = pkin(2) * t33 + t53 * t990;
t22 = pkin(2) * t31 + t52 * t990;
t21 = pkin(2) * t29 + t51 * t990;
t20 = pkin(2) * t27 + t50 * t990;
t19 = pkin(2) * t25 + t49 * t990;
t15 = 0.1e1 / (((pkin(2) * (pkin(3) * t351 + t443 * t661) - t681) * t442 + t354 * t658 - t530) * t486 + ((-t305 + (t351 * t410 - t443 * t781) * pkin(2)) * t477 + t1028) * t442 + (t1115 * t354 - t992) * t477 + t1078);
t14 = 0.1e1 / (((pkin(2) * (pkin(3) * t350 + t443 * t662) - t682) * t442 + t353 * t658 - t531) * t483 + ((-t305 + pkin(2) * (t350 * t410 - t443 * t782)) * t474 + t1029) * t442 + (t1115 * t353 - t993) * t474 + t1079);
t13 = 0.1e1 / (((pkin(2) * (pkin(3) * t349 + t443 * t663) - t683) * t442 + t352 * t658 - t532) * t480 + ((-t305 + pkin(2) * (t349 * t410 - t443 * t784)) * t471 + t1030) * t442 + (t1115 * t352 - t994) * t471 + t1080);
t9 = 0.1e1 / (((pkin(2) * (pkin(3) * t345 + t443 * t667) - t684) * t442 + t348 * t658 - t533) * t468 + ((-t305 + pkin(2) * (t345 * t410 - t443 * t786)) * t459 + t1031) * t442 + (t1115 * t348 - t995) * t459 + t1081);
t8 = 0.1e1 / (((pkin(2) * (pkin(3) * t344 + t443 * t668) - t685) * t442 + t347 * t658 - t534) * t465 + ((-t305 + pkin(2) * (t344 * t410 - t443 * t788)) * t456 + t1032) * t442 + (t1115 * t347 - t996) * t456 + t1082);
t7 = 0.1e1 / (((pkin(2) * (pkin(3) * t343 + t443 * t669) - t686) * t442 + t346 * t658 - t535) * t462 + ((-t305 + pkin(2) * (t343 * t410 - t443 * t790)) * t453 + t1033) * t442 + (t1115 * t346 - t997) * t453 + t1083);
t6 = 0.1e1 / (((-pkin(2) * (pkin(3) * t829 + t301 * t443) + t681) * t442 - pkin(3) * t518 + t530) * t486 + ((t305 - (t304 * t443 + t478 * t706) * pkin(2)) * t477 - t1028) * t442 + (-t518 * t410 + t992) * t477 - t1078);
t5 = 0.1e1 / (((-pkin(2) * (pkin(3) * t830 + t300 * t443) + t682) * t442 - pkin(3) * t519 + t531) * t483 + ((t305 - (t303 * t443 + t475 * t706) * pkin(2)) * t474 - t1029) * t442 + (-t519 * t410 + t993) * t474 - t1079);
t4 = 0.1e1 / (((-pkin(2) * (pkin(3) * t831 + t299 * t443) + t683) * t442 - pkin(3) * t520 + t532) * t480 + ((t305 - (t302 * t443 + t472 * t706) * pkin(2)) * t471 - t1030) * t442 + (-t520 * t410 + t994) * t471 - t1080);
t3 = 0.1e1 / (((-pkin(2) * (pkin(3) * t832 + t295 * t443) + t684) * t442 - pkin(3) * t521 + t533) * t468 + ((t305 - (t298 * t443 + t460 * t706) * pkin(2)) * t459 - t1031) * t442 + (-t521 * t410 + t995) * t459 - t1081);
t2 = 0.1e1 / (((-pkin(2) * (pkin(3) * t833 + t294 * t443) + t685) * t442 - pkin(3) * t522 + t534) * t465 + ((t305 - (t297 * t443 + t457 * t706) * pkin(2)) * t456 - t1032) * t442 + (-t522 * t410 + t996) * t456 - t1082);
t1 = 0.1e1 / (((-pkin(2) * (pkin(3) * t834 + t293 * t443) + t686) * t442 - pkin(3) * t523 + t535) * t462 + ((t305 - (t296 * t443 + t454 * t706) * pkin(2)) * t453 - t1033) * t442 + (-t523 * t410 + t997) * t453 - t1083);
t10 = [((-t74 * t442 - 0.2e1 * t541) * t440 + (t252 + (t329 * t385 * t752 + t78 * t442) * t477 + (t1116 * t196 - t128 * t442) * pkin(3)) * t486 - (-t670 + (t128 * t477 - t825) * t441) * t1034 + (t1115 * t196 - t697) * t477 + t541) * t6, ((t77 * t442 + 0.2e1 * t544) * t440 + (-t79 * t948 + t1097 * t1005 + (-t1116 * t675 - t125 * t442) * pkin(3)) * t486 - (t125 * t956 - t193 * t813 + t148) * t1034 + (-t1115 * t675 + t326 * t838) * t477 - t544) * t6, ((0.2e1 * t768 + (-t745 - t1053) * t486 - t1036) * t443 + (t440 * t621 + (t477 * t628 + t847) * t486 + t279 * t477 + t342) * t1073) / (((-t1077 + t1117) * t486 + t1084 * t477 + t595) * t443 + (t768 + (-t745 / 0.2e1 - t1053 / 0.2e1) * t486 - t1036 / 0.2e1) * t840 + ((-0.2e1 * (t445 * t720 + t688) * t879 + t1035) * t442 + t1119) * t1042), ((((t104 * t641 + t385 * t98) * t442 + t139 * t588) * t432 + ((t103 * t696 + t97 * t1070) * t442 + t116) * t1075) * t440 + ((t139 * t432 - t140 * t429) * t409 + ((t104 * t955 + t774) * t432 - (t103 * t955 + t140 * t981) * t429) * t477 * t385 + (((t719 * t98 + t48) * t432 - (t719 * t97 + t45) * t429) * t442 + (-t103 * t1086 + t104 * t1085) * t402) * pkin(3)) * t486 + (-pkin(3) * t139 * t1059 + (-t98 * t671 + (pkin(3) * t774 + t48 * t948 + (t477 * t687 + t822) * t104) * t441) * pkin(10)) * t432 - t429 * ((-t97 * t813 + (t103 * t1051 + t45 * t477) * t441) * t1034 + (t103 * t1115 - t140 * t1072) * t477 + t116)) * t15, (((t35 * t641 - t385 * t36) * t442 - 0.2e1 * t559) * t440 + (((t35 * t998 + t36 * t732) * t477 - pkin(3) * t24) * t442 + t54 * t649 + t35 * t824 + (-t1052 * t200 + t252) * t1016 - t110 * t409 + t58 * t1052) * t486 - (-t36 * t813 + (-t1051 * t35 + t24 * t477) * t441) * t1034 + (t35 * t673 - (t200 * t814 + t697) * t1016 + t58 * t814 + t110 * t1072) * t477 + t559) * t15, (-(t229 * t429 + t432 * t364) * (t80 * t1108 + t74 * t963 + ((pkin(3) * t1067 - t78 * t477) * t442 - t196 * t674) * t486 + (-t442 * t670 + ((t1059 * t190 - t825) * t442 - t196 * t643) * t441) * pkin(10)) + (-t80 * t1005 - t77 * t963 + ((pkin(3) * t1066 + t79 * t477) * t442 + t675 * t674) * t486 + pkin(10) * ((t148 + (-t813 + t827) * t193) * t442 + t675 * t589)) * t223) / ((t1077 * t486 + (-t524 * t486 - t1084) * t477 + ((-(-0.2e1 * t688 + t738) * t879 - t1035) * t442 - t1119) * pkin(8) - t595) * t443 + ((-0.2e1 * t615 + t877) * t963 + ((pkin(2) * t1045 + t267 * t477) * t442 + pkin(3) * t642) * t486 + pkin(10) * (t487 * t589 + t376 * t442 + (t1088 + t827) * t947)) * t1068); ((-t73 * t442 - 0.2e1 * t542) * t439 + (t251 + (t195 * t955 + t328 * t752) * t371 + ((t189 * t710 - t127) * t442 + t195 * t1116) * pkin(3)) * t483 - (-t189 * t813 + (-t195 * t1051 + t127 * t474) * t441) * t1034 + (t1115 * t195 - t698) * t474 + t542) * t5, ((t76 * t442 + 0.2e1 * t545) * t439 + (-t590 + (-t650 - t409) * t1006 + ((t192 * t710 - t124) * t442 - t676 * t1116) * pkin(3)) * t483 - (-t192 * t813 + (t1051 * t676 + t124 * t474) * t441) * t1034 + (-t1115 * t676 + t325 * t838) * t474 - t545) * t5, ((0.2e1 * t769 + (-t746 - t1054) * t483 - t1037) * t443 + (t439 * t621 + (t474 * t628 + t847) * t483 + t279 * t474 + t342) * t1073) / (((t475 * t828 + t377 - 0.2e1 * t691) * t439 + (t1102 + (-pkin(2) * t300 + t375) * t442 - pkin(2) * t807) * t483 + ((-t303 * pkin(2) + t356) * t442 + t391) * t474 - t1023) * t443 + (t769 + (-t746 / 0.2e1 - t1054 / 0.2e1) * t483 - t1037 / 0.2e1) * t840 + ((-(t583 + t866) * t439 - 0.2e1 * (pkin(3) * t799 + t445 * t721) * t474 * t483 + pkin(10) * (t441 * t817 + t484 * t813)) * t442 + t475 * t513) * t1042), ((((t102 * t641 + t96 * t385) * t442 + t137 * t588) * t432 + ((t101 * t696 + t95 * t1070) * t442 + t115) * t1075) * t439 + ((t137 * t432 - t138 * t429) * t409 + ((t102 * t955 + t775) * t432 - (t101 * t955 + t138 * t981) * t429) * t371 + (((t709 * t96 + t44) * t432 - (t709 * t95 + t47) * t429) * t442 + (-t101 * t1086 + t102 * t1085) * t402) * pkin(3)) * t483 + (-pkin(3) * t137 * t1060 + (-t96 * t671 + (pkin(3) * t775 + t44 * t949 + (t474 * t687 + t822) * t102) * t441) * pkin(10)) * t432 - ((-t95 * t813 + (t101 * t1051 + t47 * t474) * t441) * t1034 + (t101 * t1115 - t138 * t1072) * t474 + t115) * t429) * t14, (((-t385 * t33 + t34 * t641) * t442 - 0.2e1 * t560) * t439 + (((t33 * t732 + t34 * t998) * t474 - pkin(3) * t23) * t442 + t53 * t650 + t34 * t824 + (-t1052 * t202 + t251) * t1017 - t109 * t409 + t60 * t1052) * t483 - (-t33 * t813 + (-t1051 * t34 + t23 * t474) * t441) * t1034 + (t34 * t673 - (t202 * t814 + t698) * t1017 + t60 * t814 + t109 * t1072) * t474 + t560) * t14, (-(-t429 * t974 + (t432 * t503 + t509 * t980) * t430 + t427 * (t432 * t509 - t503 * t980)) * (t65 * t1109 + t73 * t964 + (-t195 * t644 + (-t195 * t991 + (-t629 * t763 + t1007) * t475 + t484 * (t554 + t848)) * pkin(3)) * t483 + ((-(pkin(2) * t763 - t1007) * t957 + t446 * t599) * t475 + t484 * (t848 * t957 - t601) - t195 * t1107) * pkin(10)) + (-t65 * t1006 - t76 * t964 + (t590 + (t676 * t991 + (t446 * t554 + t853) * t475 + (t328 * t623 + t610) * t484) * pkin(3)) * t483 + pkin(10) * ((-t446 * t601 + t853 * t957) * t475 + t484 * (t610 * t957 - t599) + t676 * t1107)) * t222) / (((-t1076 * t484 - t291 * t930 + t846) * t439 + ((pkin(1) * t371 - pkin(8) * t782) * t434 + (t883 * t1076 - t705) * t445 + t373 * t984 + ((t474 * t730 + t512) * t410 - pkin(2) * (t371 - t836)) * t484 + t841 * pkin(1)) * t483 + (-pkin(8) * t754 + t489) * t812 + (t1046 * t372 - t474 * t622) * t445 - t374 * t754 + (-(-pkin(8) * t949 + pkin(3)) * t409 - t474 * t1044 - t609) * t484 - t383 * t489) * t443 + (t484 * t513 + ((-0.2e1 * t616 + t881) * t439 + (t1046 * t629 + t474 * t735) * t483 + pkin(10) * (t659 + t475 * (pkin(2) * t957 + t1088))) * t442) * t1068); ((-t72 * t442 - 0.2e1 * t543) * t438 + (t250 + (t194 * t955 + t327 * t752) * t370 + ((t188 * t712 - t126) * t442 + t194 * t1116) * pkin(3)) * t480 - (-t188 * t813 + (-t194 * t1051 + t126 * t471) * t441) * t1034 + (t1115 * t194 - t699) * t471 + t543) * t4, ((t75 * t442 + 0.2e1 * t546) * t438 + (-t591 + (-t651 - t409) * t1008 + ((t191 * t712 - t123) * t442 - t677 * t1116) * pkin(3)) * t480 - (-t191 * t813 + (t1051 * t677 + t123 * t471) * t441) * t1034 + (-t1115 * t677 + t324 * t838) * t471 - t546) * t4, ((0.2e1 * t770 + (-t747 - t1055) * t480 - t1038) * t443 + (t438 * t621 + (t471 * t628 + t847) * t480 + t279 * t471 + t342) * t1073) / (((t472 * t828 + t377 - 0.2e1 * t692) * t438 + (t1101 + (-pkin(2) * t299 + t375) * t442 - pkin(2) * t808) * t480 + ((-t302 * pkin(2) + t356) * t442 + t390) * t471 - t1024) * t443 + (t770 + (-t747 / 0.2e1 - t1055 / 0.2e1) * t480 - t1038 / 0.2e1) * t840 + ((-(t584 + t872) * t438 - 0.2e1 * (pkin(3) * t800 + t445 * t722) * t471 * t480 + pkin(10) * (t441 * t818 + t481 * t813)) * t442 + t472 * t514) * t1042), ((((t100 * t641 + t94 * t385) * t442 + t135 * t588) * t432 + ((t93 * t1070 + t99 * t696) * t442 + t114) * t1075) * t438 + ((t135 * t432 - t136 * t429) * t409 + ((t100 * t955 + t776) * t432 - (t136 * t981 + t955 * t99) * t429) * t370 + (((t711 * t94 + t43) * t432 - (t711 * t93 + t46) * t429) * t442 + (t100 * t1085 - t1086 * t99) * t402) * pkin(3)) * t480 + (-pkin(3) * t135 * t1061 + (-t94 * t671 + (pkin(3) * t776 + t43 * t950 + (t471 * t687 + t822) * t100) * t441) * pkin(10)) * t432 - ((-t93 * t813 + (t1051 * t99 + t46 * t471) * t441) * t1034 + (-t136 * t1072 + t1115 * t99) * t471 + t114) * t429) * t13, (((-t385 * t31 + t32 * t641) * t442 - 0.2e1 * t561) * t438 + (((t31 * t732 + t32 * t998) * t471 - pkin(3) * t22) * t442 + t52 * t651 + t32 * t824 + (-t1052 * t201 + t250) * t1018 - t108 * t409 + t59 * t1052) * t480 - (-t31 * t813 + (-t1051 * t32 + t22 * t471) * t441) * t1034 + (t32 * t673 - (t201 * t814 + t699) * t1018 + t59 * t814 + t108 * t1072) * t471 + t561) * t13, (-(-t429 * t975 + (t432 * t502 + t508 * t980) * t430 + t427 * (t432 * t508 - t502 * t980)) * (t64 * t1110 + t72 * t965 + (-t194 * t645 + (-t194 * t991 + (-t630 * t764 + t1009) * t472 + t481 * (t555 + t849)) * pkin(3)) * t480 + ((-(pkin(2) * t764 - t1009) * t958 + t446 * t600) * t472 + t481 * (t849 * t958 - t602) - t194 * t1106) * pkin(10)) + (-t64 * t1008 - t75 * t965 + (t591 + (t677 * t991 + (t446 * t555 + t854) * t472 + (t327 * t624 + t611) * t481) * pkin(3)) * t480 + pkin(10) * ((-t446 * t602 + t854 * t958) * t472 + t481 * (t611 * t958 - t600) + t677 * t1106)) * t221) / (((-t1076 * t481 - t291 * t931 + t846) * t438 + ((pkin(1) * t370 - pkin(8) * t784) * t434 + (t887 * t1076 - t705) * t445 + t373 * t985 + ((t471 * t730 + t512) * t410 - pkin(2) * (t370 - t836)) * t481 + t842 * pkin(1)) * t480 + (-pkin(8) * t755 + t489) * t812 + (t1047 * t372 - t471 * t622) * t445 - t374 * t755 + (-(-pkin(8) * t950 + pkin(3)) * t409 - t471 * t1044 - t609) * t481 - t382 * t489) * t443 + (t481 * t514 + ((-0.2e1 * t617 + t885) * t438 + (t1047 * t630 + t471 * t737) * t480 + pkin(10) * (t660 + t472 * (pkin(2) * t958 + t1088))) * t442) * t1068); ((-t68 * t442 - 0.2e1 * t547) * t437 + (t246 + (t178 * t955 + t311 * t752) * t369 + ((t172 * t714 - t122) * t442 + t178 * t1116) * pkin(3)) * t468 - (-t172 * t813 + (-t178 * t1051 + t122 * t459) * t441) * t1034 + (t1115 * t178 - t700) * t459 + t547) * t3, ((t71 * t442 + 0.2e1 * t550) * t437 + (-t592 + (-t652 - t409) * t1010 + ((t175 * t714 - t119) * t442 - t678 * t1116) * pkin(3)) * t468 - (-t175 * t813 + (t1051 * t678 + t119 * t459) * t441) * t1034 + (-t1115 * t678 + t308 * t838) * t459 - t550) * t3, ((0.2e1 * t771 + (-t748 - t1056) * t468 - t1039) * t443 + (t437 * t621 + (t459 * t628 + t847) * t468 + t279 * t459 + t342) * t1073) / (((t460 * t828 + t377 - 0.2e1 * t693) * t437 + (t1100 + (-pkin(2) * t295 + t375) * t442 - pkin(2) * t809) * t468 + ((-t298 * pkin(2) + t356) * t442 + t389) * t459 - t1025) * t443 + (t771 + (-t748 / 0.2e1 - t1056 / 0.2e1) * t468 - t1039 / 0.2e1) * t840 + ((-(t585 + t891) * t437 - 0.2e1 * (pkin(3) * t801 + t445 * t723) * t459 * t468 + pkin(10) * (t441 * t819 + t469 * t813)) * t442 + t460 * t515) * t1042), ((((t86 * t385 + t641 * t92) * t442 + t133 * t588) * t432 + ((t85 * t1070 + t91 * t696) * t442 + t113) * t1075) * t437 + ((t133 * t432 - t134 * t429) * t409 + ((t92 * t955 + t777) * t432 - (t134 * t981 + t91 * t955) * t429) * t369 + (((t713 * t86 + t39) * t432 - (t713 * t85 + t42) * t429) * t442 + (t1085 * t92 - t1086 * t91) * t402) * pkin(3)) * t468 + (-pkin(3) * t133 * t1062 + (-t86 * t671 + ((t1051 * t92 + t39 * t459) * t442 + pkin(3) * t777 + t92 * t459 * t1116) * t441) * pkin(10)) * t432 - ((-t85 * t813 + (t1051 * t91 + t42 * t459) * t441) * t1034 + (-t134 * t1072 + t1115 * t91) * t459 + t113) * t429) * t9, (((-t385 * t29 + t30 * t641) * t442 - 0.2e1 * t562) * t437 + (((t29 * t732 + t30 * t998) * t459 - pkin(3) * t21) * t442 + t51 * t652 + t30 * t824 + (-t1052 * t184 + t246) * t1019 - t107 * t409 + t57 * t1052) * t468 - (-t29 * t813 + (-t1051 * t30 + t21 * t459) * t441) * t1034 + (t30 * t673 - (t184 * t814 + t700) * t1019 + t57 * t814 + t107 * t1072) * t459 + t562) * t9, (-(-t429 * t976 + (t432 * t501 + t507 * t980) * t430 + t427 * (t432 * t507 - t501 * t980)) * (t63 * t1111 + t68 * t966 + (-t178 * t646 + (-t178 * t991 + (-t631 * t765 + t1011) * t460 + t469 * (t556 + t850)) * pkin(3)) * t468 + ((-(pkin(2) * t765 - t1011) * t959 + t446 * t603) * t460 + t469 * (t850 * t959 - t606) - t178 * t1105) * pkin(10)) + (-t63 * t1010 - t71 * t966 + (t592 + (t678 * t991 + (t446 * t556 + t855) * t460 + (t311 * t625 + t612) * t469) * pkin(3)) * t468 + pkin(10) * ((-t446 * t606 + t855 * t959) * t460 + t469 * (t612 * t959 - t603) + t678 * t1105)) * t220) / (((-t1076 * t469 - t291 * t932 + t846) * t437 + ((pkin(1) * t369 - pkin(8) * t786) * t434 + (t909 * t1076 - t705) * t445 + t373 * t986 + ((t459 * t730 + t512) * t410 - pkin(2) * (t369 - t836)) * t469 + t843 * pkin(1)) * t468 + (-pkin(8) * t756 + t489) * t812 + (t1048 * t372 - t459 * t622) * t445 - t374 * t756 + (-(-pkin(8) * t951 + pkin(3)) * t409 - t459 * t1044 - t609) * t469 - t381 * t489) * t443 + (t469 * t515 + ((-0.2e1 * t618 + t907) * t437 + (t1048 * t631 + t459 * t740) * t468 + pkin(10) * (t664 + t460 * (pkin(2) * t959 + t1088))) * t442) * t1068); ((-t67 * t442 - 0.2e1 * t548) * t436 + (t245 + (t177 * t955 + t310 * t752) * t368 + ((t171 * t716 - t121) * t442 + t177 * t1116) * pkin(3)) * t465 - (-t171 * t813 + (-t177 * t1051 + t121 * t456) * t441) * t1034 + (t1115 * t177 - t701) * t456 + t548) * t2, ((t70 * t442 + 0.2e1 * t551) * t436 + (-t593 + (-t653 - t409) * t1012 + ((t174 * t716 - t118) * t442 - t679 * t1116) * pkin(3)) * t465 - (-t174 * t813 + (t1051 * t679 + t118 * t456) * t441) * t1034 + (-t1115 * t679 + t307 * t838) * t456 - t551) * t2, ((0.2e1 * t772 + (-t749 - t1057) * t465 - t1040) * t443 + (t436 * t621 + (t456 * t628 + t847) * t465 + t279 * t456 + t342) * t1073) / (((t457 * t828 + t377 - 0.2e1 * t694) * t436 + (t1099 + (-pkin(2) * t294 + t375) * t442 - pkin(2) * t810) * t465 + ((-t297 * pkin(2) + t356) * t442 + t388) * t456 - t1026) * t443 + (t772 + (-t749 / 0.2e1 - t1057 / 0.2e1) * t465 - t1040 / 0.2e1) * t840 + ((-(t586 + t897) * t436 - 0.2e1 * (pkin(3) * t802 + t445 * t724) * t456 * t465 + pkin(10) * (t441 * t820 + t466 * t813)) * t442 + t457 * t516) * t1042), ((((t84 * t385 + t641 * t90) * t442 + t131 * t588) * t432 + ((t83 * t1070 + t89 * t696) * t442 + t112) * t1075) * t436 + ((t131 * t432 - t132 * t429) * t409 + ((t90 * t955 + t778) * t432 - (t132 * t981 + t89 * t955) * t429) * t368 + (((t715 * t84 + t38) * t432 - (t715 * t83 + t41) * t429) * t442 + (t1085 * t90 - t1086 * t89) * t402) * pkin(3)) * t465 + (-pkin(3) * t131 * t1063 + (-t84 * t671 + ((t1051 * t90 + t38 * t456) * t442 + pkin(3) * t778 + t90 * t456 * t1116) * t441) * pkin(10)) * t432 - ((-t83 * t813 + (t1051 * t89 + t41 * t456) * t441) * t1034 + (-t132 * t1072 + t1115 * t89) * t456 + t112) * t429) * t8, (((-t385 * t27 + t28 * t641) * t442 - 0.2e1 * t563) * t436 + (((t27 * t732 + t28 * t998) * t456 - pkin(3) * t20) * t442 + t50 * t653 + t28 * t824 + (-t1052 * t183 + t245) * t1020 - t106 * t409 + t56 * t1052) * t465 - (-t27 * t813 + (-t1051 * t28 + t20 * t456) * t441) * t1034 + (t28 * t673 - (t183 * t814 + t701) * t1020 + t56 * t814 + t106 * t1072) * t456 + t563) * t8, (-(-t429 * t977 + (t432 * t500 + t506 * t980) * t430 + t427 * (t432 * t506 - t500 * t980)) * (t62 * t1112 + t67 * t967 + (-t177 * t647 + (-t177 * t991 + (-t632 * t766 + t1013) * t457 + t466 * (t557 + t851)) * pkin(3)) * t465 + ((-(pkin(2) * t766 - t1013) * t960 + t446 * t604) * t457 + t466 * (t851 * t960 - t607) - t177 * t1104) * pkin(10)) + (-t62 * t1012 - t70 * t967 + (t593 + (t679 * t991 + (t446 * t557 + t856) * t457 + (t310 * t626 + t613) * t466) * pkin(3)) * t465 + pkin(10) * ((-t446 * t607 + t856 * t960) * t457 + t466 * (t613 * t960 - t604) + t679 * t1104)) * t219) / (((-t1076 * t466 - t291 * t933 + t846) * t436 + ((pkin(1) * t368 - pkin(8) * t788) * t434 + (t913 * t1076 - t705) * t445 + t373 * t987 + ((t456 * t730 + t512) * t410 - pkin(2) * (t368 - t836)) * t466 + t844 * pkin(1)) * t465 + (-pkin(8) * t757 + t489) * t812 + (t1049 * t372 - t456 * t622) * t445 - t374 * t757 + (-(-pkin(8) * t952 + pkin(3)) * t409 - t456 * t1044 - t609) * t466 - t380 * t489) * t443 + (t466 * t516 + ((-0.2e1 * t619 + t911) * t436 + (t1049 * t632 + t456 * t742) * t465 + pkin(10) * (t665 + t457 * (pkin(2) * t960 + t1088))) * t442) * t1068); ((-t66 * t442 - 0.2e1 * t549) * t435 + (t244 + (t176 * t955 + t309 * t752) * t367 + ((t170 * t718 - t120) * t442 + t176 * t1116) * pkin(3)) * t462 - (-t170 * t813 + (-t176 * t1051 + t120 * t453) * t441) * t1034 + (t1115 * t176 - t702) * t453 + t549) * t1, ((t69 * t442 + 0.2e1 * t552) * t435 + (-t594 + (-t654 - t409) * t1014 + ((t173 * t718 - t117) * t442 - t680 * t1116) * pkin(3)) * t462 - (-t173 * t813 + (t1051 * t680 + t117 * t453) * t441) * t1034 + (-t1115 * t680 + t306 * t838) * t453 - t552) * t1, ((0.2e1 * t773 + (-t750 - t1058) * t462 - t1041) * t443 + (t435 * t621 + (t453 * t628 + t847) * t462 + t279 * t453 + t342) * t1073) / (((t454 * t828 + t377 - 0.2e1 * t695) * t435 + (t1098 + (-pkin(2) * t293 + t375) * t442 - pkin(2) * t811) * t462 + ((-t296 * pkin(2) + t356) * t442 + t387) * t453 - t1027) * t443 + (t773 + (-t750 / 0.2e1 - t1058 / 0.2e1) * t462 - t1041 / 0.2e1) * t840 + ((-(t587 + t903) * t435 - 0.2e1 * (pkin(3) * t803 + t445 * t725) * t453 * t462 + pkin(10) * (t441 * t821 + t463 * t813)) * t442 + t454 * t517) * t1042), ((((t82 * t385 + t641 * t88) * t442 + t129 * t588) * t432 + ((t81 * t1070 + t87 * t696) * t442 + t111) * t1075) * t435 + ((t129 * t432 - t130 * t429) * t409 + ((t88 * t955 + t779) * t432 - (t130 * t981 + t87 * t955) * t429) * t367 + (((t717 * t82 + t37) * t432 - (t717 * t81 + t40) * t429) * t442 + (t1085 * t88 - t1086 * t87) * t402) * pkin(3)) * t462 + (-pkin(3) * t129 * t1064 + (-t82 * t671 + ((t1051 * t88 + t37 * t453) * t442 + pkin(3) * t779 + t88 * t453 * t1116) * t441) * pkin(10)) * t432 - ((-t81 * t813 + (t1051 * t87 + t40 * t453) * t441) * t1034 + (-t130 * t1072 + t1115 * t87) * t453 + t111) * t429) * t7, (((-t385 * t25 + t26 * t641) * t442 - 0.2e1 * t564) * t435 + (((t25 * t732 + t26 * t998) * t453 - pkin(3) * t19) * t442 + t49 * t654 + t26 * t824 + (-t1052 * t182 + t244) * t1021 - t105 * t409 + t55 * t1052) * t462 - (-t25 * t813 + (-t1051 * t26 + t19 * t453) * t441) * t1034 + (t26 * t673 - (t182 * t814 + t702) * t1021 + t55 * t814 + t105 * t1072) * t453 + t564) * t7, (-(-t429 * t978 + (t432 * t499 + t505 * t980) * t430 + t427 * (t432 * t505 - t499 * t980)) * (t61 * t1113 + t66 * t968 + (-t176 * t648 + (-t176 * t991 + (-t633 * t767 + t1015) * t454 + t463 * (t558 + t852)) * pkin(3)) * t462 + ((-(pkin(2) * t767 - t1015) * t961 + t446 * t605) * t454 + t463 * (t852 * t961 - t608) - t176 * t1103) * pkin(10)) + (-t61 * t1014 - t69 * t968 + (t594 + (t680 * t991 + (t446 * t558 + t857) * t454 + (t309 * t627 + t614) * t463) * pkin(3)) * t462 + pkin(10) * ((-t446 * t608 + t857 * t961) * t454 + t463 * (t614 * t961 - t605) + t680 * t1103)) * t218) / (((-t1076 * t463 - t291 * t934 + t846) * t435 + ((pkin(1) * t367 - pkin(8) * t790) * t434 + (t917 * t1076 - t705) * t445 + t373 * t988 + ((t453 * t730 + t512) * t410 - pkin(2) * (t367 - t836)) * t463 + t845 * pkin(1)) * t462 + (-pkin(8) * t758 + t489) * t812 + (t1050 * t372 - t453 * t622) * t445 - t374 * t758 + (-(-pkin(8) * t953 + pkin(3)) * t409 - t453 * t1044 - t609) * t463 - t379 * t489) * t443 + (t463 * t517 + ((-0.2e1 * t620 + t915) * t435 + (t1050 * t633 + t453 * t744) * t462 + pkin(10) * (t666 + t454 * (pkin(2) * t961 + t1088))) * t442) * t1068);];
Jinv  = t10;
